{
  "metadata": {
    "timestamp": 1736565258544,
    "page": 62,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "supertuxkart/stk-code",
      "stars": 4574,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9921875,
          "content": "bld*/\nbuild*/\ncmake_build*/\nxcode_build*/\ndependencies*/\nCMakeFiles/\nstk-editor/\n.vscode/\ntags.*\n\n# clangd\n.cache/\ncompile_commands.json\n\n.config/\nsupertuxkart-64\nmake*.bat\n__pycache__\n\ndata/editor\ndata/karts\ndata/library\ndata/models\ndata/music\ndata/sfx\ndata/textures\ndata/tracks\ndata/wip-tracks\ndata/.svn\n\n# Ignore doxygen output\nsrc/html\n\n*.o\n*.d\n*.a\n*.patch\n*.diff\n*.obj\n*.orig\n*.rej\n*.log\n*.lib\n*.tlog\n*.pdb\n*.dll\n*.exe\n*.vcxproj\n*.vcxproj.filters\n*.vcxproj.user\n*~\n*.swp\n\n# Ignore QtCreator project file\nCMakeLists.txt.user\n\npackets_log.txt\nhistory.dat\nREADME.dependencies\nxx\n\nandroid/android-ndk*\nandroid/android-sdk*\nandroid/assets\nandroid/bin\nandroid/build\nandroid/deps-*\nandroid/libs\nandroid/obj\nandroid/res\nandroid/.gradle\nandroid/.cxx\nandroid/src/main/java/HID*\nandroid/src/main/java/SDL*\nandroid-*\n*.apk\n*.keystore\n\nlib/curl\nlib/freetype\nlib/ifaddrs\nlib/libogg\nlib/libvorbis\nlib/libpng\nlib/libjpeg\nlib/zlib\nlib/openal\nlib/openssl\nlib/harfbuzz\nlib/sdl2\nlib/mbedtls\nlib/astc-encoder\nlib/shaderc\n\n.DS_Store\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.130859375,
          "content": "brew \"cmake\"\nbrew \"libogg\"\nbrew \"libvorbis\"\nbrew \"openal-soft\"\nbrew \"freetype\"\nbrew \"curl\"\nbrew \"harfbuzz\"\nbrew \"libjpeg\"\nbrew \"sdl2\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 38.1044921875,
          "content": "# Changelog\nThis file documents notable changes to SuperTuxKart across versions since its inception.\n\nIt should be kept in mind that some versions have a less complete changelog than others, and that this changelog does not list the details of the many small bugfixes and improvements which together make a significant part of the progress between releases.\n\nFor similar reasons, and because some features are vastly more complex than others, attributions of main changes should not be taken as a shortcut for overall contribution.\n\n## SuperTuxKart 1.5\n\n### Networking\n* Improve the track-voting logic when no majority is achieved, by kimden\n* Prevent tracks missed by spectators from limiting the choice of active players, by kimden\n* Make bot indices start from one, by JipFr\n* Various bugfixes, by kimden\n\n### Gameplay\n* Fix start positions for negative sideward distances, by kimden\n* Make the rescue bird place the kart towards the ball in soccer mode, by Snoker101\n\n### General\n* Make the game's window resizable in all menu screens, by Benau and CodingJellyfish\n* New benchmark mode, by Alayan:\n- Can be run with a few clicks, allowing to easily test the performance of various settings or to compare different systems\n- Robust performance metrics that better reflect the impact of varying frametimes than Average FPS and 1% Lows.\n- Results are displayed along the active graphics settings, and detailed results can be saved to file\n* Add the benchmark mode to commandline options, by ektor5\n* Fix incorrect unlock information in Story Mode after a Grand Prix, by CodingJellyfish\n* Make the progression of audio levels geometrical and increase default steps, allowing to set lower audio levels and better accuracy for low audio levels (especially useful for headphone users), by Alayan\n* Fix drive-on sound from materials being played when the game is paused, by Alayan\n* Fix incorrect unlock information in Story Mode after a Grand Prix, by CodingJellyfish\n* Fix a crash trying to read replays when the random starting position setting is enabled, by Alayan\n* Handle track names with spaces in the replay reader, by Alayan\n* Enable smooth scrolling for Irrlicht, by CodingJellyfish\n* Add launchable tag and use rDNS format for AppData file, by AsciiWolf\n* Various build system updates, by deveee, tobbi, ognevny and others\n* Various compiler fixes, by heirecka, limburgher, nyllet and others\n* Substantial changes improving code quality, by Alayan and kimden\n* Update Wiiuse library to 0.15.6, SIMD-e to 0.8.2, MojoAL to latest (a9e2f30)\n* Various tweaks, bugfixes and code-quality improvements\n\n### Graphics\n* Improve the accuracy of the framerate limiter, by Benau\n* Add more maximum framerate options to the built-in framerate limiter, by Benau\n* Add some graphical effects for legacy video drivers, by Benau\n* Replace inaccurate normal compression algorithm with Octahedron Normal Vector, by CodingJellyfish\n* Fix incorrect Screen-Space Reflection shader, by CodingJellyfish\n* Guarantee an overall bone limit of 2048 for skinned mesh (up from 1024), by CodingJellyfish\n* Improve Cascaded Shadow Mapping, by CodingJellyfish\n* Improve the performance of scene node iteration, by CodingJellyfish\n* Various improvements to the automatic computations of Level of Detail (LoD) distances, by Alayan\n* Enable new higher LoD and shadows settings, by Alayan\n* Integrate LoD (Geometry Detail) settings in the graphics presets, and add a 7th graphics preset, by Alayan\n* Prefer displaying a lower quality LoD model over switching to a higher quality one when too close, by Alayan\n* Remove the distance limit on the display of on-track items (such as gift boxes), by Alayan\n* Improve image quality on low and medium presets with better anisotropic filtering, by Alayan\n* Various bugfixes and improvements, by zmike, Icenowy and others\n\n### User Interface\n* Allow users to select favorite karts/tracks/arenas, by Alayan and CodingJellyfish\n* Five new skin variants for Cartoon, and a new Desert skin variant for Classic, by Alayan and CrystalDaEevee\n* Improve the skin selection UX by separating \"base theme\" and \"skin variant\" selection, by Alayan\n* Add a new Display tab in the Settings, by Alayan\n* Allow users to search karts/arenas, by CodingJellyfish\n* Allow users to group karts by kart classes, by CodingJellyfish\n* Allow to rate addons with a keyboard or a controller, and notify when trying to rate an addon while not logged in, by CodingJellyfish\n* Improve the typing bars, especially for the coal theme, by Alayan\n* Implement a blog announcement system in the Online screen, by CodingJellyfish\n* Various UI layout improvements (especially for 'tall' resolutions), by CodingJellyfish\n* Generate higher resolution texture for scalable fonts, by CodingJellyfish\n* Various enhancements, by QwertyChouskie, Nomagno, Nstelt and others\n\n#### In-race UI\n* Add color and sound indicators when an elimination is about to happen in Follow-The-Leader, by Alayan\n* Correctly display the remaining time in FtL when extra-time is added, by Alayan\n* Show score with color on the center of speedometer in battles, by CodingJellyfish\n* Display correctly themed attachment icons if the base theme has been changed before the last restart, by CodingJellyfish\n\n### Tracks and modeling\n* New music for Las Dunas Arena/Las Dunas Soccer, by ALBatross\n* Update Godette face texture, by ZAQraven99\n* Fix Northern Resort skybox, by CrystalDaEevee\n* Various cut/checkline fixes, by CrystalDaEevee\n\n### Mobile\n* Don't keep the rescue button active after it stops being touched, when the finger keeps touching the screen (e. g. to handle the steering wheel), by S0nter\n\n## SuperTuxKart 1.4 (31. October 2022)\n### General\n* Enable ARMv7 build for Windows, by Benau\n* Restore macOS <= 10.14 support, by Benau\n* Allow setting the auto-center behavior of steering wheels, by Mstrodl\n* Simplify making derivative UI skins by allowing to specify a base theme, by qwertychouskie\n* Make sure old save data is only removed after new save data is written, to avoid data losses on full drives, by Benau\n* Fixed camera rotation when using the gyroscope and driving on vertical surfaces, by Benau\n* Lap trial mode, by mrkubax10\n* Fix a parachute powerup bug, whereby karts behind the user would still lose their shield, by heuchi\n* Add an option to randomize the player starting position, by Iwoithe\n* Avoid triggering other goal lines when the goal is already scored, by kimden\n* And some other minor bugfixes and enhancements too small or specific to be detailed\n\n### Graphics\n* Beta Vulkan renderer, by Benau\n* Add an animation to the stars displayed after a kart gets hit, by Semphris\n* Add intuitive animations for the respawn of on-track items (such as gift boxes), by Semphris\n* LOD optimization, by Benau\n* Implement HiDPI support in SDL2 properly, by Benau\n* Increase the use of on-demand loading for textures, by Benau\n* Make sky particle always fall vertically (instead of perpendicularly to the player camera), by Benau\n\n### Tracks and modeling\n* Updated Konqi, by ZAQraven99\n* New Godette kart, by ZAQraven99\n* New Hole Drop Soccer Field, by CrystalDaEevee, music by DernisNW\n* New Oasis Soccer Field, by CrystalDaEevee\n* Updated Battle Island and Cave X, by Typhon306\n* Fix broken invisible wall in Antediluvian Abyss, by Benau\n* New textures in Shifting Sands, by KartOym\n* Balanced starting positions in all official soccer fields, by CrystalDaEevee\n\n### Networking\n* Make the in-server and in-game player limits independent, allowing extra slots for spectators, by Waldlaubsaengernest\n* Allow using real addon karts (same hitbox and kart type as in local game), by Benau\n* Sort the server list by number of real players in servers (ignoring AIs), by Benau\n\n### User Interface\n* Display per-kart difficulty in the end-screen for replays, by ldoyenard\n* Add track searching to the network track screen, by Benau\n* Minor enhancements and fixes in the end race screen\n\n## SuperTuxKart 1.3 (28. September 2021)\n### Networking\n* Server bookmarks, by Benau\n* Background download of addon packs, by Benau\n\n### Graphics\n* Introduce render resolution scaling for the modern renderer, by QwertyChouskie and Deve. For users with limited GPU power, this allows to get significant performance (FPS) gains at the cost of image quality. It can also allow additional graphics effects at the same performance. This is especially useful for users with high-resolution and high-DPI screens. The scaling only affects the 3D scene, the UI remains crisp at full-resolution.\n* Simplification through removal of unused deprecated graphical effects, by Samuncle\n* Many updates to texture-related code, by Benau\n* Auto-compute Level of Detail distances for 3D models set to use LOD depending on track complexity, by Samuncle. The geometry level parameter allows partial control over the drawing distances.\n* Improved screen space reflection, by QwertyChouskie\n\n### General\n* Switch port, by Mary\n* Gamepad force feedback support, by Mary\n* Highscore screen, by RQWorldblender\n* Grand Prix highscores, by mrkubax10\n* Updates to the bundled tinygettext library, by Benau\n* Enable custom skidding sounds for karts, by Benau\n* Greatly sped up loading of tracks with many checklines through optimization, by heuchi\n* And many bugfixes and enhancements too small or specific to be detailed\n\n### User Interface\n* Display the skin-appropriate iconset without having to restart, by Benau\n* Fix some issues with the options menu when used during a pause, by Benau\n* Add a confirmation dialog before closing the game through the \"go back\" key/button, by Benau\n* In the result screen, display the race position with a number with 10 karts or more, by mrkubax10\n* In the result screen, display the challenge result and the requirements met or failed, by CodingJellyFish\n* Many small menu and dialogs improvements, by RQWorldblender and others\n* Usability and functionality improvements to the debug menu, by RQWorldblender\n* Clickable URLs in text, by Benau\n* Add a rainbow background to the color picker, making it more intuitive, by riso\n\n#### In-race UI\n* Add visual and sound feedback when a timed challenge or timed game is about to end, by mrkubax10 and Alayan\n\n### Mobile\n* Fix a precision issue that caused artefacted shadows, by icecream95 and Benau\n#### iOS\n* Use MojoAL instead of OpenAL, which iOS currently has issues with, by Benau\n\n### Tracks and modeling\n* Alien Signal, by Samuncle\n* Ancient Colosseum Labyrinth, by Typhon306\n* Improved Las Dunas Soccer, by Benau\n* Add lap line extensions to Hacienda, Old Mine, Ravenbridge Mansion and Shifting Sands, by Benau\n* New Pepper kart, by ZAQraven99\n* Improved Adiumy, Emule, GNU and Sara karts, by ZAQraven99\n\n## SuperTuxKart 1.2 (27. August 2020)\n\n### Networking\n* Add support for IPv6 LAN servers, by Benau\n* Auto-detect client IPv4 and IPv6 support, by Benau\n* Improved server creation speed and performance, by Benau\n* Allow to use any addon karts online, on servers with live join enabled, by Benau. The kart has Tux's hitbox.\n* Prevent undefined behaviour on battle/soccer servers with an excessive player limit, by Benau\n* Use an improved rating formula for ranked play, by Alayan\n\n### General\n* Use SDL2 for window creation, allowing better gamepad support, by Benau\n* Replace Fribidi by SheeBidi for RTL support, and remove the dependency to libraqm, by Benau\n* Add support for in-race messages in scripting, by CodedOre\n* Improved tutorial with free-flow racing (no more text interrupts), by CodedOre\n* Haiku support, by AlwaysLivid\n* Make the game's window resizable in-game, by Benau\n* Download addon icons on-demand to speed-up the addons list loading, by Benau\n* Allow theming of icons, by QwertyChouskie\n* Many many bugfixes and enhancements\n\n### Mobile\n* Many minor bugfixes and compatibility enhancements\n#### Android\n* Use the android app bundle, allowing all tracks to be included, by Benau\n* Use the native progress indicator during game data extraction, by Benau\n* Add a launch splash screen, by Benau\n#### iOS\n* Allow server creation in-game by using only one process for client and server, by Benau\n\n### User Interface\n* Introduce element padding for skins, by QwertyChouskie\n* New Cartoon skin, by LCP (art) and QwertyChouskie (code)\n* Allow to rename control configurations, by GuillaumeBft\n* Unthrottled keyboard navigations in menus, by Benau\n* Show mobile players as such in server lobbies, using an emoji icon, by riso\n* Always show the race end times in ms, by Fouks\n* SVG icons support, by riso\n* New tips for soccer mode\n#### In-race UI\n* Introduce camera settings in the options screen, by luffah\n* More spectator cameras in online spectating, by luffah\n* Add a minimap indicator for basketballs, by Alayan\n* Add team chat for team games, by Benau\n* Show the kart orientation on the soccer minimap, by riso\n* Show a message once a goal is made in soccer, by riso\n\n### Tracks and modeling\n#### Karts\n* New version of Kiki, by Typhon306 and ZAQraven99\n* Improved karts, by CrystalDaEevee\n    * Pidgin, Puffy\n* Improved beastie animation, by D_ft Kid\n\n## SuperTuxKart 1.1 (4. January 2020)\n\n### Networking\n* Add support for IPv6 clients and servers, by Benau\n* Add AI support to local networking servers, by Benau. This AI is not as strong as the normal AI due to networking lag, but should offer enough challenge for a majority of players.\n* Add support for AI bots for the server host, by Benau\n* Improved handling of collisions, by Benau\n* Improved support for playing addons on servers, by Benau\n* Support using an IPV4 domain name to connect to a server, by Benau\n* Add packet loss data to the server databases, by Benau\n* New management features for server hosts, by Benau\n    * IP / online ID ban tables\n    * Server statistics\n* Make the auto-end finish time more lenient, so it doesn't tank ranking score because of another player, by Alayan\n* Add a player reporting function, by Benau\n* Fix a bug that allowed to exceed a server's player limit if two players connected at the same time, by Benau\n* Add lobby commands, by Benau\n\n### Race gameplay and physics\n* Random spawn point in local battle mode, by Aleman778\n* Add an option to show everyone's items with the left characters icons, by Fouks\n* Allow to choose the number of AI per team in soccer, by risostk\n* In CTF mode, fix a bug that prevented scoring a point when the team's flag was in its immunity state, by Alayan\n* Fix a bug that could result in the finish time being shown as 0:00:00, by Alayan\n* Fix a bug that made AIs, in multiplayer and low difficulty, rubber-band towards the wrong player, by Alayan. Each player now correctly has its AIs, helping a weaker player to not be condemned to the last position.\n\n### General\n* Screen space reflection graphical effect, by samuncle\n* Support unicode file paths, by Benau\n* Complex text layout support, by Benau\n* Add emoji support, by Benau\n* Avoid \"this program is not responding\" warnings in Windows and Mac, by Benau\n* Add a Story Mode timer, by Alayan\n* Make text billboards size consistent accross resolutions, by Benau\n* Don't trigger road sounds when the kart is flying, by Benau\n* Remove an incorrect function call that could significantly hurt performance for Mac, by Benau\n* Fix a nasty bug that made several sound effects to be played at a low volume after a crash, by Alayan\n* Some code clean-up, by Alayan\n* Addon skin support and skin-specified font by Benau\n* Structure for allowing icon themes by Benau\n* Add support for custom per-kart engine sounds, by Benau\n* Fix an incorrect outdated driver warning for recent AMD cards on Windows, by Alayan\n* Scripting enhancements, by deveee\n* Add a continue button to cutscenes (mostly useful for touchscreen devices), by deveee\n* Request the use of the performance GPU on Optimus systems, by deveee\n* Fixed plural forms for translations in several languages, by deveee\n* Close STK if Wayland crashes, by mstoeckl\n* Support nested directories for addons, by Benau\n* Scripting preprocessing for STK version, by Benau\n* Updated Wiiuse library to 0.15.5\n* Various tweaks and bugfixes, including crash fixes\n\n### Mobile\n* Add a screen allowing to download official assets that can't be included in the release package because of size limits, by Benau\n* The tutorial text is now tailored for touchscreen usage, instead of the main keyboard text, by Benau\n* Enhanced acceleration handle, by Benau\n* Allow changing the touchscreen controller type in race paused dialog, by deveee\n* Allow for optional auto-acceleration, by deveee\n#### Android\n* Various bugfixes by deveee, dos1\n* Screen keyboard handling improvements, by deveee and Benau\n* Allow copying text from the edit box, by Benau\n* STK for Android now targets the version 29 of the API (Android 10.0), up from 26 (Android 8.0)\n#### iOS\n* Add iOS support, by Benau\n    * The Android code has been widely put to use for iOS\n    * Several changes or fixes to ensure proper behavior (input, screen-scaling, and more)\n    \n### User Interface\n* Show tips for players when loading and after race ends, by CodingJellyfish\n* Better scaling of many many UI elements to large resolutions, by CodingJellyfish and others\n* Show country flags for servers and players in online multiplayer, by Benau\n* Add a new option to change font size on the fly, by Benau and deveee\n* Add icons for the available options in the race result screens, by CodingJellyfish\n* Make the highscore list scrollable, by deveee\n* Display all the relevant info in the challenge dialog in Story Mode, by Alayan\n* New challenge selection interface, by CodingJellyfish\n* Show the number of ranking points won or lost after a ranked race, by Benau\n* Separate blurring visual effects from the main graphics presets, by Alayan\n* Fix incorrect text resizing in the help menu, by Benau\n* Make the custom random GP option more prominent in the track selection screen, by CodingJellyfish\n* Improvements to the scrollbars, by QwertyChouskie\n* Allow sorting lists with the keyboard, by Benau\n* Allow tooltip drawing outside of menus, by deveee\n* Prevent some font scaling blur caused by non-integer offsets, by Benau\n* Add a (configurable) limit to chat message frequency, by GuillaumeBft and Benau\n* Allow to explicitly set the flip direction of tabs, by CodingJellyfish\n* Allow to download addons from the server lobby interface, by Benau\n* Allow to filter installed and non-installed addons in the addons screen, by Alayan\n* Many minor tweaks and bugfixes\n#### In-race UI\n* Scale down the lap time indicator next to the kart icons when there are many karts, by riso\n* Limit how long chat and in-race messages can be, by Benau and Alayan\n* Add an option to disable in-race messages only, by Alayan\n\n### Tracks and modeling\n#### Tracks\n * A handful of minor graphical fixes and enhancements\n * Fixed checklines that could be missed too easily in XR591 and the Old Mine.\n#### Arenas\n * Pumpkin Park, by samuncle\n\n## SuperTuxKart 1.0 (20. April 2019)\n### Networking\n* Networking support for normal race, time trial, free for all, capture the flag and soccer by Benau and hiker :\n    * Access to a global server list, possibility to also create a LAN server\n    * Track voting system to allow players to decide where the race will be\n    * Communication between server and clients to exchange inputs and general game data\n    * A lot of work on rewind code to make sure server and client are well synchronized\n    * Chat lobby for general server information and discussion among players between races\n    * Support for handicap, which can be changed before each game\n* Spectating option for players having entered a server while a race or game is underway by Benau\n* Option to join live an active game in FFA, CTF and soccer by Benau\n* Global rankings by Benau (communication with main server) and Alayan (ranking formula)\n\n### Race gameplay and physics\n* New game mode Capture the Flag by Benau (online multiplayer only)\n* New game mode Free for All by Benau\n* Free for All available in offline mode with AI, by Mrxx99\n* Revised kart characteristics for better balance between light, medium and heavy karts by Alayan\n* Better random item distribution for various numbers of karts by Alayan and hiker\n* Fix position interpolation causing some incorrect lapline validation by Auria\n* Fix kart being uncontrollable and hovering when landing on some downward slopes by hiker\n* Mitigate a physics issue which could send a kart flying on collisions by hiker\n* Make kart turn radius based on kart class instead of kart model length (which made Adiumy unplayable and caused AI issues) by Alayan\n* Revisited slipstreaming with boost easier to obtain, especially in curves, but not as strong as in 0.9.3 when the zipper boost was incorrectly activated, by Alayan\n* Minor gameplay improvements (level 1 skid boost doesn't interrupt level 2 boost, fairer rubber-banding in low difficulties, boosted AI for some karts for more challenge in GPs, small balance change of GP points, more useful and consistent handicap option...)\n* Start boost/penalty moved to the set phase for smoother networking\n* Terrain slowdown works again as intended on several tracks where it was missing\n\n### AI\n* Improved powerup and nitro handling in AI by Alayan\n\n### General\n* Option to disable light scattering (for improved FPS), used in graphics level 3, by Partmedia\n* Unlockable SuperTux challenges in Story Mode by Alayan\n* Improvements to ghost replays (more data saved, live time difference, replay comparison, egg hunt replays) by Alayan\n* Kart color customization by Benau\n* Multithreading contention fixes by Benau\n* Local multiplayer improvements by Ben Krajancic\n* Major revamp of the achievement system to make adding new achievements much easier and flexible, also fixing some related bugs by Alayan\n* Store up to 5 highscores for a track/difficulty/mode/kart number combination, instead of 3\n* Smooth turning for non-keyboard inputs for improved consistency between input mode by deveee\n* Updated standard replays by Alayan\n* Visual improvements (new skidding particles, better rescue, bubblegum flashing before ending)\n* Audio improvements (crash sound depending on speed/direction, no crash sound on rescue walls, sound cue in nitro challenges)\n* Fix STK incorrectly connecting to the server when the internet option is disabled by Auria\n* Updated WiiUse library\n* Many bugfixes\n\n### Android\n* Gyroscope support by Pelya\n* Numerous improvements to input on Android, including screen keyboard, keyboard, gamepads, by deveee\n* Android TV support\n* Improved UI and font scaling by deveee\n* More compact APK thanks to png optimization, allows to have several tracks more than the 0.9.3 APK, by deveee and Alayan\n* Wayland support and many other smaller improvements and fixes\n\n### User Interface\n* New networking user interface by Benau and hiker\n* New coal skin by Alayan\n* Support for collapsing widgets in UI by Mrxx99\n* Multidirectional keyboard navigation in menus by Alayan\n* Alternating background darkness in lists to enhance readability by Benau\n* Support text breaks into multiple line in lists, e.g. in the addons menu, by Alayan\n* Improved help menu with lateral tabs and a lot more information by Alayan\n* Improved option menu with lateral tabs and a separate language tab by Alayan\n* Many improvements to the ghost replay selection list (give access to egg hunt replays, kart icon shown in the list, replay's game version shown, hide player number column by default) and dialog (allow replay comparison, show track picture, show information about the selected replays) by Alayan\n* Control configurations can be disabled without being deleted by Alayan\n* Other significant enhancements (detailed progress of multi-goal achievements, reset password button, clearer checkbox status, milliseconds displayed in time-trials and egg hunts, nitro efficiency in the kart selection screen, better track info screen, better warnings when trying to do an online action with internet access disabled, hour support for GP time, default resolutions can't be used in fullscreen if unsupported by the monitor...)\n* Many bugfixes and small enhancements mostly by deveee and Alayan\n#### In-race UI\n* New speedometer and nitro gauge, by Alayan\n* Bigger minimap and new display options, by Alayan\n* More legible text with outlines and for some bigger font, by Alayan\n\n### Tracks and modeling\n#### Tracks\n* Black Forest by Sven Andreas Belting (replacing Green Valley)\n* Ravenbridge Mansion by samuncle (replacing Black Hill Mansion)\n* Unwanted shortcuts and exploits found by several players and fixed mostly by Auria in many tracks :\n    * Antediluvian Abyss, Around the Lighthouse, Fort Magma, Grand Paradisio Island, Hacienda, Minigolf, Nessie's Pond, Northern Resort, The Old Mine, Oliver's Math Class, Shifting Sands, STK Enterprise, XR591\n* Smoothness issues causing collisions and kart slowdown fixed by Auria :\n    * Nessie's Pond, Old Mine, Shifting Sands, Volcano Island, XR591\n* Item (boxes, nitro, bananas) positions improvement by Alayan and theThomasPat :\n    * Around the Lighthouse, Black Forest, Candela City, Hacienda, Minigolf, Northern Resort, Oliver's Math Class, STK Enterprise, The Old Mine, Volcano Island, Zen Garden\n    \n#### Arenas\n* Las Dunas Soccer, by samuncle\n* Candela City arena by Benau, based on samuncle's track\n\n#### Karts\n* New version of Beastie by Jymis\n* New version of Kiki by Benau\n\n## SuperTuxKart 0.9.3 (28. October 2017)\n* Reduced RAM and VRAM usage, reducing load times by Auria and Benau\n* New mesh format optimized for space and hardware skinning\n* Code refactoring of both render pipeline by Benau and Elderme\n* Physics improvements and various physics bugfixes by hiker\n* Kart GFX improvements (exhaust and headlight)\n* In-game screen recording powered by libopenglrecorder\n* High quality mipmap generation by Stragus\n* New smoother camera by Auria\n* New grand prix win scene\n* Gamepad configuration bugfixes\n* 3 Strikes Battles : added spare tire karts\n* Visual representation of the start line in all tracks\n* Various improvements (starting boost effect, wall driving fixes, parachutes, GP points, help page for bananas, cannon fixes, colorization shader)\n### Tracks and modeling\n#### Karts\n* Kiki by Benau\n* New versions of Wilber and Hexley by Jymis\n* New version of Konqi by Benau\n#### Tracks\n* All tracks drivable in reverse, with arrows pointing in the correct direction\n* Candela City by samuncle (replace Shiny Suburbs)\n* Cornfield Crossing by samuncle (replace Bovine Barnyard)\n* New battle track Las Dunas Arena by samuncle\n\n## SuperTuxKart 0.9.2 (1. July 2016)\n* Ghost replay races by Benau\n* Battle mode AI by Benau\n* Soccer mode AI by Benau\n* TTF font rendering by Benau\n* New ruby and forest skins by Benau\n* Kart properties refactor by Flakebi\n* Scripting work under the hood\n* Work on the track editor by mhp\n* Tweak to challenges\n* New farm track song by 0zone0ne and Krobonil\n* Bugfixes\n### Tracks and modeling\n#### Tracks\n* Antediluvian Abysses by samuncle (replace Subsea)\n* Volcano Island by Ponzino\n* New icy soccer field by samuncle and Benau\n\n## SuperTuxKart 0.9.1 (17. October 2015)\n* Many bug fixes\n* Started to use scripting in tracks\n* Significant audio performance improvements\n* Tweak to challenges\n### Tracks and modeling\n#### Tracks\n* Better support for driving tracks in reverse\n* Smaller tweaks and improvements to several tracks including \n    * Math class\n    * XR591\n    * Fort Magma\n    * Gran Paradiso Island\n    * Subsea\n\n## SupertTuxKart 0.9 (24. April 2015)\n* Fully shader-based rendering engine\n* Online login which allows to:\n    * connect with friends and see when they are playing\n    * vote for addons\n    * collect online achievements\n* Grand Prix editor, including creation of random GPs \n* Different kart physics\n### Tracks and modeling\n#### Karts\n* New karts Amanda and Gavroche by XGhost\n* New and improved Tux, Adiumy, Sara the Wizard and the Racer, Xue\n#### Tracks\n* Cocoa Temple by samuncle (replace Amazonian Journey)\n* Gran Paradiso Island by samuncle (replace The Island)\n* Graphical improvements to many other tracks\n\n## SuperTuxKart 0.8.1 (26. November 2013)\n* New Soccer mode\n* New Egg Hunt mode\n* Added Tutorial\n* Added new Supertux difficulty\n* New bubblegum shield weapon\n* New Speedometer and nitro meter\n* Add ability to filter addons\n* Add ability to save and resume Grand Prix\n* Improve skid marks and nitro effects\n* Wiimote support\n### Tracks and modeling\n#### Karts\n* New karts Xue and Sara\n* Updated Beastie kart\n#### Tracks\n* STK Enterprise by Rubberduck (replace Star Track)\n* Gameplay and graphical updates to several tracks :\n    * The Old Mine\n    * Lighthouse\n    * Zen Garden\n#### Miscellaneous\n* Updated nitro models\n\n## SuperTuxKart 0.8 (11. December 2012)\n* Story mode and new challenge set\n* Improved AI\n* Skidding and better collision physics\n* Reverse mode\n* Updated menus\n* New music\n### Tracks and modeling\n#### Tracks\n* Green Valley by Wolfs (replace Tux Tollway)\n* Blackhill Mansion by samuncle (replace Crescent Crossing)\n* Gameplay and graphical updates to several tracks :\n    * XR591\n    * Fort Magma\n    * Jungle\n    * Sand\n    \n\n## SuperTuxKart 0.7.3 (2. November 2011)\n* New graphical effects\n* New weapons 'Swatter' and 'Rubber Ball'\n* 3 Strikes Battles now displays lives as spare tires\n* Improved bubble gum\n* See progression during Grand Prix\n* Improve physics for tall karts (e.g. Adiumy)\n* Lots of bug fixes\n* Improved kart control at high speeds\n* Better placement of rescued karts\n* Transition track-making to blender 2.5/2.6\n### Tracks and modeling\n#### Karts\n* New Suzanne kart\n#### Tracks\n* Zen Garden by samuncle (replace Secret Garden)\n* New Subsea\n* New Island battle arena\n#### Miscellaneous\n* Added Thunderbird as race referee\n\n## SuperTuxKart 0.7.2 (15. July 2011)\n* Added in-game addon manager\n* Fixed major memory leaks\n* Show when you get a highscore\n* Improve gamepad configuration under Windows (add ability to tell gamepads apart)\n* Various other tweaks done and glitches fixed\n### Tracks and modeling\n#### Karts\n* New Beastie kart.\n#### Tracks\n* Improved Snow Peak by samuncle\n* Improved Star Track UFO by Rudy\n\n## SuperTuxKart 0.7.1b (21. April 2011)\n* Fix circular dependency in challenges\n* Updated translations\n\n## SuperTuxKart 0.7.1 (15. April 2011)\n* Particle  (smoke, splash, fire) and weather effects\n* Added internet news\n* Support for live language switch\n* Added optional minimal race UI\n* Temporary invincibility after being hit\n* Added support for full-screen anti-aliasing\n* Clearer multiplayer setup\n* Renamed many tracks to nicer names\n* Basic level-of-detail (LOD) support\n* Debug features for track makers\n* Update to bullet 2.77\n* Replace more sounds to be DFSG-compliant\n* Fixed character names that contain non-ASCII characters\n* Full RTL (right to left) support\n* Various other tweaks done and glitches fixed\n### Tracks and modeling\n#### Karts\n* New Beagle kart by wolterh\n#### Tracks\n* New Fort Magma by samuncle\n* New Shiny Suburbs by Horace\n\n## SuperTuxKart 0.7 (December 2010)\nToo many to list them all. Main points:\n\n* Irrlicht:\n  - Ported from plib to irrlicht\n  - Added animations to karts and some tracks\n* GUI\n  - Completely new designed GUI\n* Other improvements\n  - Allowed alternative ways/shortcuts in tracks\n  - New item 'switch'\n### Tracks and modeling\n#### Tracks\n- Farm\n- Hacienda by samuncle (replace Beach)\n- Scotland by Canis Lupus\n- Secret Garden\n\n## SuperTuxKart 0.6.2a (October 2009)\n* Bugfix: STK would crash while trying to save the config file\n          on Windows Vista.\n\n## SuperTuxKart 0.6.2 (July 2009)\n* Bugfix: Game could crash in rare circumstances.\n* Bugfix: Restarting a GP (with the in-race menu ESC) would not subtract already allocated points.\n* Bugfix: A race could be finished with an invalid shortcut.\n* Bugfix: Playing a challenge after a splitscreen game would play the challenge in split screen.\n* Bugfix: Items explode over void.\n* Bugfix: Grass in castle arena slowed down the kart.\n* Bugfix: GP result showed kart identifier instead of name.\n* Improvement: there is now 1 1 sec. wait period for the race result screen, avoiding the problem that someone presses space/enter at the end of a race, immediately quitting the menu before it can be read.\n\n## SuperTuxKart 0.6.1a (February 2009)\n* Bugfix: battle mode would not display track groups.\n\n## SuperTuxKart 0.6.1 (February 2009)\n* New music for Snow Mountain.\n* Fixed bug in track selection screen that could cause a crash when track groups were used.\n* Fixed crash in character selection that could happen if an old user config file existed.\n* Fixed incorrect rescues in Fort Magma.\n* Improved track selection screen to not display empty track groups.\n* A plunger in the face is now removed when restarting.\n* Added slow-down for karts driving backwards.\n* Somewhat reduced 'shaking' of AI driven karts.\n### Tracks and modeling\n#### Karts\n- New Puffy kart\n#### Tracks\n- New Cave battle map\n\n\n## SuperTuxKart 0.6 (January 2009)\n* New improved physics and kart handling\n* Added sharp turns and nitro speed boost (replacing wheelies and jump)\n* Totally rewrote powerups (plunger, bowling ball, cake, bubblegum) and new look for bananas\n* New game mode : 3-Strikes Battle\n* Major improvements to AI\n* Improved user interface\n* Karts now have a visible suspension effect\n* Fully positional audio with OpenAL\n* New music and sound effects (including engine, braking and skidding sounds)\n* Better support for mods and add-ons (kart and track groups)\n* New/updated translations (ga fi de nl sl fr it es ro sv)\n* Allowed 'Grand Prix's of Time Trial, Follow the Leader, or any other mode\n* Challenges are now specified and config files, and are thus easy to create by users\n* Improved build system to better detect missing dependencies\n* Improved shortcut-detection\n* Initial work towards networking (disabled and hidden by default)\n* Bug fixes and code refactor/cleanup/documentation\n  - Fixed 'joystick locks' (kart would turn even if the joystick is in neutral),\n    thanks to Samjam for the patch.\n    \n### Tracks and modeling\n#### Karts\n* Improved Wilber\n* Eviltux\n* Hexley\n* Some old karts have been removed\n#### Tracks\n* Skyline\n* Snow Mountain\n* Race track\n* Old Mine\n* XR591\n* Improved track :\n    * Star track\n\n## SuperTuxKart 0.5 (May 2008)\n* Complete Challenges to unlock game modes, new tracks and a skidding preview\n* New Follow the Leader game mode\n* New Grand Prix\n* Improved User Interface\n* Improved game pad/joystick handling\n* German, French, Dutch, Spanish, Italian and Swedish translations\n* Additional music\n* Many Bugfixes including:\n\t- a memory leak fix (Charlie Head)\n\t- an AI crash fix (Chris Morris)\n\t\n### Tracks and modeling\t\n#### Tracks\n* SnowTux Peak\n* Amazonian Journey\n* City\n* Canyon\n* BSODs Battlements renamed to Fort Magma\n* Improved Crescent Crossing, Fort Magma, and Star Track\n\n## SuperTuxKart 0.4 (February 2008)\n* New physics handling using the bullet physics engine\n* Improved AI\n* New GUI handling, including resolution switching GUI\n* Improved input handling\t\n* Jump and look-back feature\n* Additional music and main theme\n### Tracks and modeling\n#### Karts\n* New kart: wilber\n\t\n#### Tracks\n* Improved 'Shifting Sands' and 'Lighthouse'\n\t\n## SuperTuxKart 0.3 (May 2007)\n* Highscore lists\t\n* Shortcut detection \t\n* Improved AI\n* Fullscreen support\n* New track: the island\n* New penalty: bomb\n* MacOSX support\n* OpenAL and ogg-vorbis support\n* Two new Grand Prixs\t\n* Improved user interface:\n  - New racing interface\n  - Better track map\n  - Player kart dots in the track map are bigger than AI dots\n  - Track selection screen has topview pictures\n  - Added \"Setup new race\" option when a track is finished\n  - Added \"Restart race\" option when a track is finished\n  - The keyboard can skip vertical spaces between buttons\n  - Better control configuration\n  - Better in-game help\n  - Added .desktop file for menus and icon\n* Bugfixes:\n  - Fixed bug in ssg_help::MinMax, which could cause a significant performance loss.\n  - Fixed bug that allowed the joystick to erase the main menu\n  - Fixed bug that allowed the joystick to \"play the game while paused\"\n  - Fixed screen_manager assert failure bug\n  - Fixed sound_manager assert failure bug\n  - Fixed keyboard keys unable to work on the first key press bug\n  - And others\n\n## SuperTuxKart 0.2 (22. Sep 2006)\n  * Significant performance improvement by using display lists\n  * Improved AI\n  * Support for different grand prixs\n  * Too many bug fixes to list them all, but the important ones:\n    * Work around for 'karts fall through track' compiler bug\n    * Fixed rescue mode\n  * Two new collectables: parachute and anvil\n  * Track screen shots in the track select screen\n  * Keyboard handling allows gradual turning\n  * Improved physics (still work in progress)\n    * All hard-coded properties like maximum velocity have\n      been replaced by dynamically computed data dependent\n      on kart parameters, allowing for karts having different\n      characteristics.\n  * Added help and about screens, added credits to track designer\n  * Items were added to all tracks\n\n## SuperTuxKart 0.1 (04. May 2006)  (not officially released)\n  * Significant speedup by using a new HOT and collision algorithm --> all tracks are now playable\n  * Removed all SDL dependencies, only plib is needed\n  * Single and multi-window menu can be used\n  * Code structure changes\n  * Some bug fixes and small improvements\n  * Added profile option to support automatic profiling\n\n## SuperTuxKart 0.0.0 (22. Dec 2004)\n  * new tracks\n  * new characters and karts\n  * new user-interface\n  * some additional effects (skid-marks, smoke)\n\n##TuxKart v0.4.0 (March 19th 2004)\n  * Changes for compatibility with PLIB 1.8.0 and later.\n  * Removed some features that were only there to support\n    truly ancient graphics cards like 3Dfx Voodoo-1/2.\n\n##TuxKart v0.3.0 (??)\n  * Converted to use the new PLIB/PW library and thus\n    avoid the need to link to GLUT.\n\n##TuxKart v0.2.0 (Sept 3rd 2002)\n  * Changes for compatibility with PLIB 1.6.0 and later.\n\n##TuxKart v0.0.5 (??)\n  * Changes for compatibility with PLIB 1.4.0 and later.\n\n##TuxKart v0.0.4 (??)\n  * Changes to suit rassin-frassin-Windoze-junk.\n  * Steady-cam camera - courtesy of cowtan@ysbl.york.ac.uk\n  * Changes for compatibility with PLIB 1.3.1 and later.\n  * Added new music courtesy of Matt Thomas.\n\n##TuxKart v0.0.3 (July 4th 2000)\n  * Fixed bug in Keyboard driver when no\n    joystick driver is installed.\n  * More CygWin fixes.\n  * Started new feature to allow you to be\n    rescued from lava, etc.\n\n##TuxKart v0.0.2 (July 2nd 2000)\n  * Added ability to add new tracks without\n    recompiling.\n  * Can now drive using keyboard only - no joystick\n    required.\n  * Should compile and run under Windoze using CygWin.\n\n##TuxKart v0.0.1 (July 1st 2000)\n  * Fixed a couple of files missing in initial\n    Distro.\n\n##TuxKart v0.0.0 (June 29th 2000)\n  * First CVS release.\n\n##TuxKart (unnumbered) (April 13th 2000)\n  * First hack.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 34.4306640625,
          "content": "cmake_minimum_required(VERSION 3.6.0)\n\n# root CMakeLists for the SuperTuxKart project\nproject(SuperTuxKart)\nset(PROJECT_VERSION \"git\")\n\nadd_definitions( -DSUPERTUXKART_VERSION=\"${PROJECT_VERSION}\" )\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${PROJECT_SOURCE_DIR}/cmake\")\ninclude(CMakeDependentOption)\n\ninclude(BuildTypeSTKRelease)\nif(NOT CMAKE_BUILD_TYPE)\n    message(STATUS \"No build type selected, default to STKRelease\")\n    set(CMAKE_BUILD_TYPE \"STKRelease\")\nendif()\n\nCMAKE_DEPENDENT_OPTION(USE_SWITCH \"Build targeting switch\" OFF \"NOT NINTENDO_SWITCH\" ON)\n\nif(WIN32)\n    option(USE_DIRECTX \"Build DirectX 9 driver (requires DirectX SDK)\" OFF)\nendif()\n\noption(SERVER_ONLY \"Create a server only (i.e. no graphics or sound)\" OFF)\noption(CHECK_ASSETS \"Check if assets are installed in ../stk-assets\" ON)\noption(USE_SYSTEM_ANGELSCRIPT \"Use system angelscript instead of built-in angelscript. If you enable this option, make sure to use a compatible version.\" OFF)\noption(USE_SYSTEM_ENET \"Use system ENet instead of the built-in version, when available.\" ON)\nCMAKE_DEPENDENT_OPTION(USE_IPV6 \"Allow create or connect to game server with IPv6 address, system enet will not be used.\" ON\n  \"NOT USE_SWITCH\" OFF)\noption(USE_SYSTEM_WIIUSE \"Use system WiiUse instead of the built-in version, when available.\" OFF)\noption(USE_SQLITE3 \"Use sqlite to manage server stats and ban list.\" ON)\n\nif(APPLE)\n    CMAKE_DEPENDENT_OPTION(DLOPEN_MOLTENVK \"Use dlopen to load MoltenVK for Apple.\" ON\n        \"NOT IOS;NOT SERVER_ONLY\" OFF)\nendif()\n\nCMAKE_DEPENDENT_OPTION(USE_CRYPTO_OPENSSL \"Use OpenSSL instead of MbedTLS for cryptography in STK.\" ON\n    \"NOT USE_SWITCH;NOT WIN32\" OFF)\nCMAKE_DEPENDENT_OPTION(BUILD_RECORDER \"Build opengl recorder\" ON\n    \"NOT SERVER_ONLY;NOT APPLE;NOT USE_SWITCH\" OFF)\nCMAKE_DEPENDENT_OPTION(USE_SYSTEM_SQUISH \"Use system Squish library instead of the built-in version, when available.\" ON\n    \"NOT SERVER_ONLY\" OFF)\nCMAKE_DEPENDENT_OPTION(USE_WIIUSE \"Support for wiimote input devices\" ON\n    \"NOT SERVER_ONLY;NOT CYGWIN;NOT USE_SWITCH;NOT MSVC\" OFF)\nCMAKE_DEPENDENT_OPTION(USE_DNS_C \"Build bundled dns resolver\" OFF \"NOT CYGWIN;NOT USE_SWITCH\" ON)\nCMAKE_DEPENDENT_OPTION(USE_MOJOAL \"Use bundled MojoAL instead of system OpenAL\" OFF \"NOT APPLE\" ON)\n\nif (DLOPEN_MOLTENVK)\n    ADD_DEFINITIONS(-DDLOPEN_MOLTENVK)\nendif()\n\nif((UNIX AND NOT APPLE) OR NINTENDO_SWITCH)\n    include(FindPkgConfig)\nendif()\n\nif(IOS)\n    include(cmake/XcodeHelper.cmake)\nendif()\n\nif(APPLE AND NOT IOS)\n    if(${CMAKE_SYSTEM_PROCESSOR} STREQUAL \"arm\")\n\tset(ARCHFLAGS \"arm64\")\n\tlist(APPEND CMAKE_PREFIX_PATH /opt/homebrew/opt)\n\tinclude_directories(/opt/homebrew/opt/openssl@1.1/include/)\n\tinclude_directories(/opt/homebrew/opt/openssl@1.1/include/openssl/)\n\tinclude_directories(/opt/homebrew/opt/freetype/include/freetype2/)\n\tinclude_directories(/opt/homebrew/opt/harfbuzz/include/harfbuzz/)\n    else()\n\tset(ARCHFLAGS \"${CMAKE_SYSTEM_PROCESSOR}\")\n\tlist(APPEND CMAKE_PREFIX_PATH /usr/local/opt)\n\tinclude_directories(/usr/local/opt/openssl@1.1/include/)\n\tinclude_directories(/usr/local/opt/openssl@1.1/include/openssl/)\n\tinclude_directories(/usr/local/opt/freetype/include/freetype2/)\n\tinclude_directories(/usr/local/opt/harfbuzz/include/harfbuzz/)\n    endif()\nendif()\n\nif (IOS)\n    ADD_DEFINITIONS(-DMOBILE_STK)\n    ADD_DEFINITIONS(-DIOS_STK)\n    set(CMAKE_XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY \"1,2\")\n    option(USE_GLES2 \"Use OpenGL ES2 renderer\" ON)\nendif()\n\nif((UNIX AND NOT APPLE) AND NOT SERVER_ONLY)\n    if((${CMAKE_SYSTEM_PROCESSOR} MATCHES \"arm\") OR \n       (${CMAKE_SYSTEM_PROCESSOR} MATCHES \"aarch64\") OR\n       (${CMAKE_SYSTEM_PROCESSOR} MATCHES \"riscv64\"))\n        option(USE_GLES2 \"Use OpenGL ES2 renderer\" ON)\n    else()\n        option(USE_GLES2 \"Use OpenGL ES2 renderer\" OFF)\n    endif()\n\nendif()\n\nif(UNIX OR MINGW)\n    option(DEBUG_SYMBOLS \"Compile with debug symbols\" OFF)\nendif()\n\nif(MSVC AND (MSVC_VERSION LESS 1900))\n    # Normally hide the option to build wiiuse on VS, since it depends\n    # on the installation of the Windows DDK (Driver Developer Kit),\n    # which also needs an absolute path :(\n    option(WIIUSE_BUILD \"Build wiiuse lib (only for developers)\" OFF)\n    mark_as_advanced(WIIUSE_BUILD)\nelse()\n    set(WIIUSE_BUILD ON)\nendif()\n\nif(UNIX AND NOT APPLE)\n    option(USE_ASAN   \"Build with Leak/Address sanitizer\" OFF)\n    option(USE_TSAN   \"Build with Thread sanitizer\" OFF)\n    option(USE_USAN   \"Build with Undefined Behaviour sanitizer\" OFF)\n    option(USE_LIBBFD \"Use libbfd for crash reporting and leak check\" OFF)\nendif()\n\nif(USE_ASAN)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address -fno-omit-frame-pointer\")\nendif()\nif(USE_TSAN)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread -fno-omit-frame-pointer\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=thread -fno-omit-frame-pointer\")\nendif()\nif(USE_USAN)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=undefined -fno-omit-frame-pointer\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=undefined -fno-omit-frame-pointer\")\nendif()\n\nset(STK_SOURCE_DIR \"src\")\nset(STK_DATA_DIR \"${PROJECT_SOURCE_DIR}/data\")\n\n# CMAKE_RUNTIME_OUTPUT_DIRECTORY removes dSYMs in Xcode archive\nif(NOT CMAKE_GENERATOR MATCHES \"Xcode\")\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/bin\")\nendif()\n\n# Define install paths\nset(STK_INSTALL_BINARY_DIR \"bin\" CACHE\n    STRING \"Install executable to this directory, absolute or relative to CMAKE_INSTALL_PREFIX\")\nset(STK_INSTALL_DATA_DIR \"share/supertuxkart\" CACHE\n    STRING \"Install data folder to this directory, absolute or relative to CMAKE_INSTALL_PREFIX\")\n\n# Define dependencies path\nstring(TOLOWER \"${CMAKE_SYSTEM_PROCESSOR}\" arch_lower)\nset(BUILD_ARCH \"unknown\")\nif (CMAKE_GENERATOR_PLATFORM)\n    set(BUILD_ARCH \"${CMAKE_GENERATOR_PLATFORM}\")\nendif()\nif(arch_lower MATCHES \"arm64\" OR arch_lower MATCHES \"aarch64\" OR ${CMAKE_GENERATOR} MATCHES \"(ARM64)\" OR ${BUILD_ARCH} MATCHES \"(ARM64)\")\n    set(DEPENDENCIES \"dependencies-win-aarch64\")\nelseif(arch_lower MATCHES \"armv7\" OR arch_lower MATCHES \"armv7\" OR ${CMAKE_GENERATOR} MATCHES \"(ARM)\" OR ${BUILD_ARCH} MATCHES \"(ARM)\")\n    set(DEPENDENCIES \"dependencies-win-armv7\")\nelseif(CMAKE_SIZEOF_VOID_P EQUAL 8)\n    set(DEPENDENCIES \"dependencies-win-x86_64\")\nelse()\n    set(DEPENDENCIES \"dependencies-win-i686\")\nendif()\n\nif(WIN32)\n    ADD_DEFINITIONS(-DUNICODE)\n    ADD_DEFINITIONS(-D_UNICODE)\n    if(NOT IS_DIRECTORY \"${PROJECT_SOURCE_DIR}/${DEPENDENCIES}\")\n        message(FATAL_ERROR \"Dependencies directory not found, make sure dependencies-win-(arch) exists inside stk-code directory.\")\n    endif()\nendif()\n\n# These variables enable MSVC to find libraries located in \"dependencies\"\nif(WIN32)\n    set(ENV{PATH} \"$ENV{PATH};${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/include\")\n    set(ENV{LIB} ${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/lib)\n    set(ENV{OPENALDIR} ${PROJECT_SOURCE_DIR}/${DEPENDENCIES})\n    add_definitions(-D_IRR_STATIC_LIB_)\n    add_definitions(-DNO_IRR_COMPILE_WITH_X11_)\n    include_directories(${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/include)\nendif()\n\nif(WIN32 AND NOT USE_DIRECTX)\n    add_definitions(-DNO_IRR_COMPILE_WITH_DIRECT3D_9_)\nendif()\n\nif(USE_GLES2)\n    add_definitions(-DUSE_GLES2)\n    if (NOT IOS)\n        add_definitions(-D_IRR_COMPILE_WITH_OGLES2_)\n    endif()\n    add_definitions(-DNO_IRR_COMPILE_WITH_OPENGL_)\nendif()\n\nif(SERVER_ONLY)\n    add_definitions(-DSERVER_ONLY)\n    add_definitions(-DNO_IRR_COMPILE_WITH_X11_ -DNO_IRR_COMPILE_WITH_OPENGL_)\nendif()\n\nif(UNIX OR MINGW)\n    if(DEBUG_SYMBOLS)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -g\")\n    endif()\nendif()\n\nif(UNIX AND NOT APPLE AND NOT ${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n    find_package(PkgConfig REQUIRED)\n\n    if(NOT PKGCONFIG_FOUND)\n        message(FATAL_ERROR \"Pkg-config not found.\")\n    endif()\nendif()\n\n# Build the Bullet physics library\nadd_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/bullet\")\ninclude_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/bullet/src\")\n\n# Build the DNS C library\nif(USE_DNS_C)\n    add_definitions(-DDNS_C)\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/dnsc\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/dnsc\")\nelse()\n    if(WIN32 OR CMAKE_SYSTEM_NAME MATCHES \"BSD\" OR CMAKE_SYSTEM_NAME MATCHES \"DragonFly\" OR USE_SWITCH)\n        set(LIBRESOLV_LIBRARY)\n    elseif (HAIKU)\n        find_library(LIBRESOLV_LIBRARY NAMES network socket)\n    else()\n        find_library(LIBRESOLV_LIBRARY NAMES resolv libresolv)\n    endif()\nendif()\n\n# Find system ENet library or build it if missing\nif((UNIX AND NOT APPLE) AND USE_SYSTEM_ENET AND NOT USE_IPV6)\n    pkg_check_modules(ENET libenet>=1.3.4)\nendif()\n\nif (USE_IPV6)\n   add_definitions(-DENABLE_IPV6)\nendif()\n\nif(ENET_FOUND AND NOT USE_IPV6)\n    include_directories(${ENET_INCLUDE_DIRS})\nelse()\n    # Fallback to built-in version\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/enet\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/enet/include\")\n    set(ENET_LIBRARIES \"enet\")\nendif()\n\nif(NOT SERVER_ONLY)\n    if(USE_SYSTEM_SQUISH)\n        find_library(SQUISH_LIBRARY NAMES squish libsquish)\n        find_path(SQUISH_INCLUDEDIR NAMES squish.h PATHS)\n    endif()\n    if (NOT SQUISH_LIBRARY OR NOT SQUISH_INCLUDEDIR)\n        add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/libsquish\")\n        include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/libsquish\")\n        SET(SQUISH_LIBRARY squish)\n    else()\n        include_directories(\"${SQUISH_INCLUDEDIR}\")\n        MESSAGE(STATUS \"Use system libsquish: ${SQUISH_LIBRARY}\")\n    endif()\nendif()\n\nif(NOT SERVER_ONLY)\n    if (IOS)\n        find_library(SHADERC_LIBRARY NAMES shaderc_combined libshaderc_combined)\n    else()\n        find_library(SHADERC_LIBRARY NAMES shaderc_shared libshaderc_shared shaderc libshaderc)\n    endif()\n    find_path(SHADERC_INCLUDEDIR NAMES shaderc/shaderc.hpp PATHS)\n    if (NOT SHADERC_LIBRARY OR NOT SHADERC_INCLUDEDIR)\n        if (NOT NO_SHADERC)\n            message(FATAL_ERROR \"Please install shaderc from your distribution or disable vulkan support with -DNO_SHADERC=on\")\n        endif()\n    else()\n        include_directories(\"${SHADERC_INCLUDEDIR}\")\n        MESSAGE(STATUS \"Use system shaderc: ${SHADERC_LIBRARY}\")\n    endif()\n    if (NO_SHADERC)\n        add_definitions(-DDISABLE_SHADERC)\n    endif()\n\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/graphics_engine\")\nendif()\n# MiniGLM is there\ninclude_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/graphics_engine/include\")\n\nif (NOT SERVER_ONLY)\n    # Add jpeg library\n    find_package(JPEG REQUIRED)\n    include_directories(${JPEG_INCLUDE_DIR})\nendif()\n\nif (BUILD_RECORDER)\n    find_library(OPENGLRECORDER_LIBRARY NAMES openglrecorder libopenglrecorder PATHS \"${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/lib\")\n    find_path(OPENGLRECORDER_INCLUDEDIR NAMES openglrecorder.h PATHS \"${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/include\")\n    if (NOT OPENGLRECORDER_LIBRARY OR NOT OPENGLRECORDER_INCLUDEDIR)\n        if(PROJECT_VERSION STREQUAL \"git\")\n            message(WARNING \"libopenglrecorder not found, disabling in-game recorder. \"\n                \"To use recorder, install libopenglrecorder.\")\n            set(OPENGLRECORDER_LIBRARY CACHE INTERNAL \"\")\n            set(OPENGLRECORDER_INCLUDEDIR CACHE INTERNAL \"\")\n            set(BUILD_RECORDER OFF)\n        else()\n            message(FATAL_ERROR \"libopenglrecorder not found. \"\n            \"Either install libopenglrecorder or disable in-game recorder with -DBUILD_RECORDER=0\")\n        endif()\n    else()\n        include_directories(${OPENGLRECORDER_INCLUDEDIR})\n        mark_as_advanced(OPENGLRECORDER_LIBRARY OPENGLRECORDER_INCLUDEDIR)\n        add_definitions(-DENABLE_RECORDER)\n    endif()\nendif()\n\nif(NOT SERVER_ONLY)\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/graphics_utils\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/graphics_utils\")\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/tinygettext\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/tinygettext/include\")\nendif()\n\n# Libmcpp\nfind_library(MCPP_LIBRARY NAMES mcpp libmcpp)\nfind_path(MCPP_INCLUDEDIR NAMES mcpp_lib.h PATHS)\nif (NOT MCPP_LIBRARY OR NOT MCPP_INCLUDEDIR)\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/mcpp\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/mcpp\")\n    SET(MCPP_LIBRARY mcpp)\n    message(STATUS \"System libmcpp not found, use the bundled one.\")\nelse()\n    include_directories(\"${MCPP_INCLUDEDIR}\")\n    MESSAGE(STATUS \"Use system libmcpp: ${MCPP_LIBRARY}\")\nendif()\n\nif (NOT SERVER_ONLY)\n    # SDL2\n    find_library(SDL2_LIBRARY NAMES SDL2 libSDL2)\n    find_path(SDL2_INCLUDEDIR NAMES SDL.h PATH_SUFFIXES SDL2 include/SDL2 include PATHS)\n    if (NOT SDL2_LIBRARY OR NOT SDL2_INCLUDEDIR)\n        message(FATAL_ERROR \"SDL2 not found. \"\n            \"SDL2 is required to handle gamepad in SuperTuxKart.\")\n    else()\n        include_directories(\"${SDL2_INCLUDEDIR}\")\n        MESSAGE(STATUS \"Use system SDL2: ${SDL2_LIBRARY}\")\n    endif()\n    # DirectFB. Necessary if system SDL2 is built with DirectFB support.\n    find_path(DIRECTFB_INCLUDEDIR NAMES directfb.h directfb++.h PATH_SUFFIXES directfb include/directfb include PATHS)\n    if (DIRECTFB_INCLUDEDIR)\n        include_directories(\"${DIRECTFB_INCLUDEDIR}\")\n        message(STATUS \"Adding DirectFB include directories for DirectFB support in SDL2\")\n    endif()\nendif()\n\n# Build the irrlicht library\nadd_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/irrlicht\")\ninclude_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/irrlicht/include\")\n\n# Build the Wiiuse library\n# Note: wiiuse MUST be declared after irrlicht, since otherwise\n# (at least on VS) irrlicht will find wiiuse io.h file because\n# of the added include directory.\nif(USE_WIIUSE)\n    # Find system WiiUse library or build it if missing\n    if((UNIX AND NOT (APPLE OR HAIKU)) AND USE_SYSTEM_WIIUSE)\n        find_package(WiiUse)\n    endif()\n\n    if(WIIUSE_FOUND)\n        include_directories(${WIIUSE_INCLUDE_DIR})\n    else()\n        # Fallback to built-in version\n        if(WIIUSE_BUILD)\n            add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/wiiuse\")\n        endif()\n        include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/wiiuse/src/include\")\n        set(WIIUSE_LIBRARIES \"wiiuse\" \"bluetooth\")\n    endif()\nendif()\n\n# Set include paths\ninclude_directories(${STK_SOURCE_DIR})\n\nif(APPLE AND NOT IOS)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -arch ${ARCHFLAGS}\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -arch ${ARCHFLAGS} -F/Library/Frameworks\")\nelseif(MSVC)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MP\")   # Enable multi-processor compilation (faster)\nendif()\n\nif (${CMAKE_SYSTEM_NAME} MATCHES \"SunOs\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -m64\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -m64\")\nendif()\n\n\n# Build the angelscript library if not in system\nif(USE_SYSTEM_ANGELSCRIPT)\n    find_package(Angelscript)\n    if(ANGELSCRIPT_FOUND)\n        include_directories(${Angelscript_INCLUDE_DIRS})\n    else()\n        message(FATAL_ERROR \"Angelscript not found. \"\n            \"Either install angelscript or use built-in version using \"\n            \"-DUSE_SYSTEM_ANGELSCRIPT=0\")\n    endif()\nelse()\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/angelscript/projects/cmake\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/angelscript/include\")\n    set(Angelscript_LIBRARIES angelscript)\nendif()\n\nif(NOT SERVER_ONLY)\n    # OpenAL\n    if (USE_MOJOAL)\n        find_library(LIBSAMPLERATE_LIBRARY NAMES samplerate libsamplerate)\n        find_path(LIBSAMPLERATE_INCLUDEDIR NAMES samplerate.h PATHS)\n        if (NOT LIBSAMPLERATE_LIBRARY OR NOT LIBSAMPLERATE_INCLUDEDIR)\n            message(FATAL_ERROR \"libsamplerate not found. \"\n                \"libsamplerate is required to handle pitch for MojoAL.\")\n        else()\n            include_directories(\"${LIBSAMPLERATE_INCLUDEDIR}\")\n            MESSAGE(STATUS \"Use system libsamplerate: ${LIBSAMPLERATE_LIBRARY}\")\n        endif()\n        add_definitions(-DAL_LIBTYPE_STATIC)\n        add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/mojoal\")\n        include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/mojoal\")\n    else()\n        find_package(OpenAL REQUIRED)\n        # Unclear why this happens, but on switch OPENAL_LIBRARY never set!\n        if (NOT OPENAL_LIBRARY)\n            find_library(OPENAL_LIBRARY NAMES al OpenAL AL openal REQUIRED)\n        endif()\n        if (NOT OPENAL_INCLUDE_DIR)\n            find_path(OPENAL_INCLUDE_DIR NAMES AL/al.h REQUIRED)\n        endif()\n        include_directories(${OPENAL_INCLUDE_DIR})\n    endif()\n\n    # OggVorbis\n    find_package(OggVorbis REQUIRED)\n    include_directories(${OGGVORBIS_INCLUDE_DIRS})\n\n    add_definitions(-DENABLE_SOUND)\nendif()\n\n# Text handling in STK (We use freetype, harfbuzz and SheenBidifor i18n text handling)\nif (NOT SERVER_ONLY)\n    # SheenBidi\n    add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/sheenbidi\")\n    include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/sheenbidi/Headers\")\n    SET(SHEENBIDI_LIBRARY sheenbidi)\n\n    # Freetype\n    find_package(Freetype)\n    if(FREETYPE_FOUND)\n        include_directories(${FREETYPE_INCLUDE_DIRS})\n    else()\n        message(FATAL_ERROR \"Freetype not found. \"\n            \"Freetype is required to display characters in SuperTuxKart.\")\n    endif()\n\n    # Harfbuzz\n    find_library(HARFBUZZ_LIBRARY NAMES harfbuzz libharfbuzz)\n    find_path(HARFBUZZ_INCLUDEDIR NAMES harfbuzz/hb.h hb.h PATHS)\n    if (NOT HARFBUZZ_LIBRARY OR NOT HARFBUZZ_INCLUDEDIR)\n        message(FATAL_ERROR \"Harfbuzz not found. \"\n            \"Harfbuzz is required to display characters in SuperTuxKart.\")\n    else()\n        include_directories(\"${HARFBUZZ_INCLUDEDIR}\")\n        MESSAGE(STATUS \"Use system harfbuzz: ${HARFBUZZ_LIBRARY}\")\n    endif()\nendif()\n\nif(USE_LIBBFD)\n    find_package(Libbfd)\n    if(LIBBFD_FOUND)\n        add_definitions(-DENABLE_LIBBFD)\n        include_directories(${LIBBFD_INCLUDE_DIRS})\n    else()\n        set(USE_LIBBFD OFF CACHE BOOL \"Use libbfd for crash reporting and leak check\" FORCE)\n        message(WARNING \"Libbfd not found, disable integrated stack trace.\")\n    endif()\nendif()\n\n# SQLITE\nif(USE_SQLITE3)\n    find_library(SQLITE3_LIBRARY NAMES sqlite3 libsqlite3)\n    find_path(SQLITE3_INCLUDEDIR NAMES sqlite3.h PATHS)\n    if (NOT SQLITE3_LIBRARY OR NOT SQLITE3_INCLUDEDIR)\n#        add_subdirectory(\"${PROJECT_SOURCE_DIR}/lib/sqlite3\")\n#        include_directories(BEFORE \"${PROJECT_SOURCE_DIR}/lib/sqlite3\")\n#        SET(SQLITE3_LIBRARY sqlite3)\n        set(USE_SQLITE3 OFF CACHE BOOL \"Use sqlite to manage server stats and ban list.\" FORCE)\n        message(WARNING \"Sqlite3 not found, disable advanced server management.\")\n    else()\n        add_definitions(-DENABLE_SQLITE3)\n        include_directories(\"${SQLITE3_INCLUDEDIR}\")\n        MESSAGE(STATUS \"Use system libsqlite3: ${SQLITE3_LIBRARY}\")\n    endif()\nendif()\n\n# Set some compiler options\nif(UNIX OR MINGW)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++0x\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wno-unused-function\")\nendif()\n\nif(MINGW AND CMAKE_BUILD_TYPE MATCHES Release)\n    SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--subsystem,windows\")\nendif()\n\nif(WIN32)\n    # By default windows.h has macros defined for min and max that screw up everything\n    add_definitions(-DNOMINMAX)\n\n    # And shut up about unsafe stuff\n    add_definitions(-D_CRT_SECURE_NO_WARNINGS)\n\n    # Avoid timespec structure redeclaration on Visual Studio 2015\n    if (NOT (MSVC_VERSION LESS 1900))\n        add_definitions(-DHAVE_STRUCT_TIMESPEC)\n    endif()\nendif()\n\nif(MSVC)\n    # VS will automatically add NDEBUG for release mode, but only _DEBUG in debug mode.\n    # Since STK uses DEBUG, this is added for debug compilation only:\n    cmake_policy(SET CMP0043 OLD)\n    set_property(DIRECTORY PROPERTY COMPILE_DEFINITIONS_DEBUG DEBUG)\nelse()\n    # All non VS generators used create only a single compile mode, so\n    # compile flags can be simplye be added\n    if(CMAKE_BUILD_TYPE MATCHES Debug)\n        add_definitions(-DDEBUG)\n    else()\n        add_definitions(-DNDEBUG)\n    endif()\nendif()\n\n\nif(WIN32)\n    configure_file(\"${STK_SOURCE_DIR}/../tools/windows_installer/icon_rc.template\" \"${PROJECT_BINARY_DIR}/tmp/icon.rc\")\nendif()\n\n# Provides list of source and header files (STK_SOURCES and STK_HEADERS)\ninclude(sources.cmake)\n\n# Generate source groups useful for MSVC project explorer\ninclude(cmake/SourceGroupFunctions.cmake)\nsource_group_hierarchy(STK_SOURCES STK_HEADERS)\n\n\nif(APPLE AND NOT IOS)\n    # icon files to copy in the bundle\n    set(OSX_ICON_FILES ${PROJECT_SOURCE_DIR}/data/supertuxkart.icns)\n    set_source_files_properties(${OSX_ICON_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n    set(STK_SOURCES ${STK_SOURCES} ${OSX_ICON_FILES})\n\n    # build the executable and create an app bundle\n    add_executable(supertuxkart MACOSX_BUNDLE ${STK_SOURCES})\n\n    find_library(IOKIT_LIBRARY IOKit)\n    find_library(COCOA_LIBRARY Cocoa)\n\n    target_link_libraries(supertuxkart\n         ${IOKIT_LIBRARY}\n         ${COCOA_LIBRARY})\n\n    # configure CMake to use a custom Info.plist\n    set_target_properties(supertuxkart PROPERTIES\n        MACOSX_BUNDLE_INFO_PLIST ${PROJECT_SOURCE_DIR}/data/SuperTuxKart-Info.plist)\n\n    if(CMAKE_GENERATOR MATCHES \"Xcode\")\n        add_custom_command(TARGET supertuxkart POST_BUILD\n            COMMAND ln -f -s ${PROJECT_SOURCE_DIR}/data ${CMAKE_BINARY_DIR}/\\${CONFIGURATION}/supertuxkart.app/Contents/Resources)\n    else()\n        add_custom_command(TARGET supertuxkart POST_BUILD\n            COMMAND ln -f -s ${PROJECT_SOURCE_DIR}/data ${CMAKE_BINARY_DIR}/bin/supertuxkart.app/Contents/Resources)\n    endif()\nelse()\n    if (NOT WIN32)\n        find_library(PTHREAD_LIBRARY NAMES pthread ${PTHREAD_NAMES} PATHS ${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/lib)\n        mark_as_advanced(PTHREAD_LIBRARY)\n    endif()\n\n    # Set data dir (absolute or relative to CMAKE_INSTALL_PREFIX)\n    if(NOT STK_INSTALL_DATA_DIR_ABSOLUTE)\n        get_filename_component(STK_INSTALL_DATA_DIR_ABSOLUTE ${STK_INSTALL_DATA_DIR} ABSOLUTE)\n        if(${STK_INSTALL_DATA_DIR_ABSOLUTE} STREQUAL ${STK_INSTALL_DATA_DIR})\n            add_definitions(-DSUPERTUXKART_DATADIR=\\\"${STK_INSTALL_DATA_DIR_ABSOLUTE}\\\")\n        else()\n            add_definitions(-DSUPERTUXKART_DATADIR=\\\"${CMAKE_INSTALL_PREFIX}/${STK_INSTALL_DATA_DIR}\\\")\n        endif()\n    else()\n        add_definitions(-DSUPERTUXKART_DATADIR=\\\"${STK_INSTALL_DATA_DIR_ABSOLUTE}\\\")\n    endif()\n\n    # Build the final executable\n    if (IOS)\n        file(GLOB IOS_ASSETS_FILES ${IOS_ASSETS} ${IOS_LAUNCHSCREEN} ${IOS_IMAGES_XCASSETS})\n        set_source_files_properties(${IOS_ASSETS_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n        add_executable(supertuxkart ${STK_SOURCES} ${STK_RESOURCES} ${STK_HEADERS} ${IOS_ASSETS_FILES})\n        set_target_properties(supertuxkart PROPERTIES\n            MACOSX_BUNDLE_INFO_PLIST ${PROJECT_SOURCE_DIR}/data/SuperTuxKart-Info-iOS.plist\n            XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET 9.0\n            XCODE_ATTRIBUTE_INSTALL_PATH /Applications\n            XCODE_ATTRIBUTE_SKIP_INSTALL No\n            XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        if(CMAKE_GENERATOR MATCHES \"Xcode\")\n            get_all_targets(supertuxkart_targets ${CMAKE_CURRENT_LIST_DIR})\n            foreach(target IN LISTS supertuxkart_targets)\n                if (NOT target MATCHES \"supertuxkart\")\n                    set_target_properties(${target} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib$(EFFECTIVE_PLATFORM_NAME)/${target})\n                endif()\n                configure_xcode_defaults(${target})\n            endforeach()\n        endif()\n    else()\n        add_executable(supertuxkart ${STK_SOURCES} ${STK_RESOURCES} ${STK_HEADERS})\n    endif()\n    if (NOT WIN32)\n        target_link_libraries(supertuxkart ${PTHREAD_LIBRARY})\n    endif()\nendif()\n\n# check if linking against libatomic is required\ninclude(CheckCXXSourceCompiles)\ncheck_cxx_source_compiles(\"\n#include <atomic>\n#include <cstdint>\nint main() {\n  std::atomic<uint64_t> x{0};\n  x.load();\n  return 0;\n}\n\" NO_LIBATOMIC_NEEDED)\nif (NOT NO_LIBATOMIC_NEEDED)\n    target_link_libraries(supertuxkart atomic)\nendif()\n\n# CURL and OpenSSL or MbedTLS\n# 1.0.1d for compatible AES GCM handling\nSET(OPENSSL_MINIMUM_VERSION \"1.0.1d\")\n\nfind_package(CURL REQUIRED)\ninclude_directories(${CURL_INCLUDE_DIRS})\n\nfind_path(MBEDTLS_INCLUDE_DIRS mbedtls/version.h)\nfind_library(MBEDCRYPTO_LIBRARY NAMES mbedcrypto libmbedcrypto)\n\nif (NOT MBEDCRYPTO_LIBRARY OR NOT MBEDTLS_INCLUDE_DIRS OR USE_CRYPTO_OPENSSL)\n    set(USE_CRYPTO_OPENSSL ON)\n    find_package(OpenSSL REQUIRED)\n\n    if(${OPENSSL_VERSION} VERSION_LESS ${OPENSSL_MINIMUM_VERSION} OR\n        (${OPENSSL_VERSION} VERSION_EQUAL ${OPENSSL_MINIMUM_VERSION} AND ${OPENSSL_VERSION} STRLESS ${OPENSSL_MINIMUM_VERSION}))\n        message(FATAL_ERROR \"OpenSSL version found (${OPENSSL_VERSION}) is less then the minimum required (${OPENSSL_MINIMUM_VERSION}), aborting.\")\n    endif()\n    include_directories(${OpenSSL_INCLUDE_DIRS})\nelse()\n    set(USE_CRYPTO_OPENSSL OFF)\n    include_directories(${MBEDTLS_INCLUDE_DIRS})\nendif()\n\nif (USE_CRYPTO_OPENSSL)\n    message(STATUS \"OpenSSL will be used for cryptography in STK.\")\n    add_definitions(-DENABLE_CRYPTO_OPENSSL)\nelse()\n    message(STATUS \"MbedTLS will be used for cryptography in STK.\")\n    add_definitions(-DENABLE_CRYPTO_MBEDTLS)\nendif()\n\n# Common library dependencies\ntarget_link_libraries(supertuxkart\n    bulletdynamics\n    bulletcollision\n    bulletmath\n    ${ENET_LIBRARIES}\n    stkirrlicht\n    ${Angelscript_LIBRARIES}\n    ${CURL_LIBRARIES}\n    ${MCPP_LIBRARY}\n    )\n\nif (USE_SWITCH)\n  include(cmake/FindEGL.cmake)\n  find_library(NX_LIBRARY NAMES nx libnx REQUIRED)\n  find_library(DRM_LIBRARY NAMES drm_nouveau libdrm_nouveau REQUIRED)\n  find_library(GLAPI_LIBRARY NAMES glapi libglapi REQUIRED)\n  find_library(ZLIB_LIBRARY NAMES z libz REQUIRED)\n  find_library(PNG_LIBRARY NAMES png libpng REQUIRED)\n  find_library(BZ2_LIBRARY NAMES bz2 libbz2 REQUIRED)\n  target_link_libraries(supertuxkart\n    ${NX_LIBRARY}\n    ${ZLIB_LIBRARY}\n    ${FREETYPE_LIBRARIES}\n    -logg\n    -lvorbis\n    ${SDL2_LIBRARY}\n    ${PNG_LIBRARY}\n    ${BZ2_LIBRARY}\n    ${HARFBUZZ_LIBRARY}\n    ${OPENAL_LIBRARY}\n    ${EGL_LIBRARY}\n    ${DRM_LIBRARY}\n    ${GLAPI_LIBRARY}\n    ${NX_LIBRARY}\n  )\nendif()\n\nif(NOT SERVER_ONLY)\n    if (USE_MOJOAL)\n        target_link_libraries(supertuxkart mojoal ${LIBSAMPLERATE_LIBRARY})\n    else()\n        target_link_libraries(supertuxkart ${OPENAL_LIBRARY})\n    endif()\nendif()\n\nif (${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n\ttarget_link_libraries(supertuxkart nsl socket vorbisfile)\nendif()\n\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Haiku\")\n\ttarget_link_libraries(supertuxkart be network vorbisfile)\nendif()\n\nif (USE_DNS_C)\n    target_link_libraries(supertuxkart dnsc)\nelse()\n    target_link_libraries(supertuxkart ${LIBRESOLV_LIBRARY})\nendif()\n\nif (USE_SQLITE3)\n    target_link_libraries(supertuxkart ${SQLITE3_LIBRARY})\nendif()\n\nif (USE_CRYPTO_OPENSSL)\n    target_link_libraries(supertuxkart ${OPENSSL_CRYPTO_LIBRARY})\nelse()\n    target_link_libraries(supertuxkart ${MBEDCRYPTO_LIBRARY})\nendif()\n\nif(NOT SERVER_ONLY)\n    if (APPLE AND NOT DLOPEN_MOLTENVK)\n        find_library(MOLTENVK_LIBRARY NAMES MoltenVK libMoltenVK REQUIRED)\n        target_link_libraries(supertuxkart \"-framework Metal -weak_framework IOSurface -framework QuartzCore ${MOLTENVK_LIBRARY}\")\n    endif()\n    if (IOS)\n        target_link_libraries(supertuxkart \"-weak_framework CoreHaptics -framework QuartzCore -framework CoreGraphics -framework AVFoundation -framework AudioToolbox -framework Metal -framework GameController -framework OpenGLES -framework UIKit -framework CoreAudio -framework Foundation -framework GLKit\")\n        # tvOS doesn't have CoreMotion framwork\n        include(CheckCSourceCompiles)\n        set(prev_req_lib ${CMAKE_REQUIRED_LIBRARIES})\n        set(CMAKE_REQUIRED_LIBRARIES \"-framework CoreMotion\")\n        check_c_source_compiles(\"int main() { return 0; }\" COREMOTION_EXISTS)\n        set(CMAKE_REQUIRED_LIBRARIES ${prev_req_lib})\n        if (COREMOTION_EXISTS)\n            target_link_libraries(supertuxkart \"-framework CoreMotion\")\n        endif()\n    endif()\n\n    target_link_libraries(supertuxkart\n        ${SQUISH_LIBRARY}\n        ${JPEG_LIBRARIES}\n        ${OGGVORBIS_LIBRARIES}\n        ${FREETYPE_LIBRARIES}\n        ${HARFBUZZ_LIBRARY}\n        ${SHEENBIDI_LIBRARY}\n        graphics_utils\n        graphics_engine\n        ${SDL2_LIBRARY}\n        tinygettext)\n    if (NOT NO_SHADERC)\n        target_link_libraries(supertuxkart ${SHADERC_LIBRARY})\n    endif()\nendif()\n\nif(UNIX AND NOT APPLE)\n    if(USE_LIBBFD)\n        target_link_libraries(supertuxkart ${LIBBFD_LIBRARIES})\n        if (CMAKE_SYSTEM_NAME MATCHES \"BSD\")\n            target_link_libraries(supertuxkart  execinfo)\n        endif()\n    endif()\n    if(USE_ASAN)\n        target_link_libraries(supertuxkart \"-fsanitize=address\")\n    endif()\n    if(USE_TSAN)\n        target_link_libraries(supertuxkart \"-fsanitize=thread\")\n    endif()\n    if(USE_USAN)\n        target_link_libraries(supertuxkart \"-fsanitize=undefined\")\n    endif()\nendif()\n\nif(BUILD_RECORDER)\n    target_link_libraries(supertuxkart ${OPENGLRECORDER_LIBRARY})\nendif()\n\n# FreeBSD does not search in /usr/local/lib, but at least Freetype is installed there :(\nif(${CMAKE_SYSTEM_NAME} MATCHES \"FreeBSD\")\n    SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -L/usr/local/lib\")\nendif()\n\nif(HAIKU)\n    target_link_libraries(supertuxkart -lbe -lnetwork)\nendif()\n\n# Wiiuse\n# ------\nif(USE_WIIUSE)\n    if(APPLE)\n        find_library(BLUETOOTH_LIBRARY NAMES IOBluetooth PATHS /Developer/Library/Frameworks/IOBluetooth.framework)\n        target_link_libraries(supertuxkart wiiuse ${BLUETOOTH_LIBRARY})\n    elseif(WIN32)\n        add_definitions(-DWIIUSE_STATIC)\n        if(WIIUSE_BUILD)\n            target_link_libraries(supertuxkart wiiuse)\n        else()\n            target_link_libraries(supertuxkart ${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/lib/wiiuse.lib)\n        endif()\n    else()\n        target_link_libraries(supertuxkart ${WIIUSE_LIBRARIES})\n    endif()\n    add_definitions(-DENABLE_WIIUSE)\n\nendif()\n\nif(MSVC OR MINGW)\n  target_link_libraries(supertuxkart iphlpapi.lib)\n  add_custom_command(TARGET supertuxkart POST_BUILD\n    COMMAND ${CMAKE_COMMAND} -E copy_directory\n        \"${PROJECT_SOURCE_DIR}/${DEPENDENCIES}/bin\"\n        $<TARGET_FILE_DIR:supertuxkart>)\n  add_custom_target(stkshaders SOURCES ${STK_SHADERS})\nendif()\n\nif(MSVC)\n  SET(CMAKE_SHARED_LINKER_FLAGS /MANIFEST:NO)\n  add_custom_command(\n    TARGET supertuxkart POST_BUILD COMMAND \"mt.exe\" \n    -manifest \\\"${PROJECT_SOURCE_DIR}\\\\windows\\\\dpi_aware.manifest\\\" \n    -inputresource:\\\"$<TARGET_FILE:supertuxkart>\\\"\\;\\#1\n    -outputresource:\\\"$<TARGET_FILE:supertuxkart>\\\"\\;\\#1)\nendif()\n\nif(MINGW)\n  SET(CMAKE_SHARED_LINKER_FLAGS /MANIFEST:NO)\n  target_sources(supertuxkart PRIVATE windows/windows_config.rc)\nendif()\n\nif(MINGW)\n    target_link_libraries(supertuxkart -ldxguid -ldnsapi)\n    if (NOT CMAKE_BUILD_TYPE MATCHES Debug)\n        target_link_libraries(supertuxkart -mwindows)\n    endif()\n    find_library(LIBGCC NAMES \"libgcc_s_dw2-1.dll\" \"libgcc_s_sjlj-1.dll\" \"libgcc_s_seh-1.dll\" PATHS ${CMAKE_FIND_ROOT_PATH})\n    if (LIBGCC)\n        file(COPY ${LIBGCC} DESTINATION ${CMAKE_BINARY_DIR}/bin/)\n    endif()\n    find_library(LIBSTDCPP NAMES \"libstdc++-6.dll\" PATHS ${CMAKE_FIND_ROOT_PATH})\n    if (LIBSTDCPP)\n        file(COPY ${LIBSTDCPP} DESTINATION ${CMAKE_BINARY_DIR}/bin/)\n    endif()\n    find_library(LIBPTHREAD NAMES \"winpthread-1.dll\" \"libwinpthread-1.dll\" \"pthreadGC2.dll\" PATHS ${CMAKE_FIND_ROOT_PATH})\n    if(LIBPTHREAD)\n        file(COPY ${LIBPTHREAD} DESTINATION ${CMAKE_BINARY_DIR}/bin/)\n    endif()\nendif()\n\n\n# Find LibGamerzilla library or build it if missing\nif (NOT APPLE)\n    include(FindPkgConfig)\n    pkg_search_module(GAMERZILLA OPTIONAL gamerzilla)\n\n    if (GAMERZILLA_LIBRARIES)\n        message(STATUS \"Gamerzilla found\")\n        include_directories(${GAMERZILLA_INCLUDE_DIRS})\n        target_link_libraries(supertuxkart ${GAMERZILLA_LIBRARIES})\n        add_definitions(-DGAMERZILLA)\n    endif()\nendif()\n\n# ==== Checking if data folder exists ====\nif(NOT IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data)\n  message( FATAL_ERROR \"${CMAKE_CURRENT_SOURCE_DIR}/data folder doesn't exist\" )\nendif()\n\n# ==== Checking if stk-assets folder exists ====\nif(CHECK_ASSETS)\n  if((IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/karts) AND\n       (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/library) AND\n       (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/music) AND\n       (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/sfx) AND\n       (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/textures) AND\n       (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/tracks))\n    message(STATUS \"Assets found in data directory\")\n  elseif(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../stk-assets)\n    set(STK_ASSETS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../stk-assets/)\n    message(STATUS \"Assets found\")\n  elseif(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../supertuxkart-assets)\n    set(STK_ASSETS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../supertuxkart-assets/)\n    message(STATUS \"Assets found\")\n  else()\n    set (CUR_DIR ${CMAKE_CURRENT_SOURCE_DIR})\n    get_filename_component(PARENT_DIR ${CUR_DIR} PATH)\n    message( FATAL_ERROR \"${PARENT_DIR}/stk-assets folder doesn't exist. \"\n      \"Please download the stk-assets, or disable this test with -DCHECK_ASSETS=off.\" )\n  endif()\nendif()\n\n\n# ==== Install target ====\ninstall(TARGETS supertuxkart RUNTIME DESTINATION ${STK_INSTALL_BINARY_DIR} BUNDLE DESTINATION .)\ninstall(DIRECTORY ${STK_DATA_DIR} DESTINATION ${STK_INSTALL_DATA_DIR} PATTERN \".svn\" EXCLUDE PATTERN \".git\" EXCLUDE)\nif(STK_ASSETS_DIR AND CHECK_ASSETS)\n  install(DIRECTORY ${STK_ASSETS_DIR} DESTINATION ${STK_INSTALL_DATA_DIR}/data PATTERN \".svn\" EXCLUDE PATTERN \".git\" EXCLUDE)\nendif()\ninstall(FILES ${STK_DATA_DIR}/supertuxkart.desktop DESTINATION share/applications)\ninstall(FILES data/supertuxkart_16.png DESTINATION share/icons/hicolor/16x16/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_32.png DESTINATION share/icons/hicolor/32x32/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_48.png DESTINATION share/icons/hicolor/48x48/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_64.png DESTINATION share/icons/hicolor/64x64/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_128.png DESTINATION share/icons/hicolor/128x128/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_256.png DESTINATION share/icons/hicolor/256x256/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_512.png DESTINATION share/icons/hicolor/512x512/apps RENAME supertuxkart.png)\ninstall(FILES data/supertuxkart_1024.png DESTINATION share/icons/hicolor/1024x1024/apps RENAME supertuxkart.png)\ninstall(FILES data/net.supertuxkart.SuperTuxKart.metainfo.xml DESTINATION share/metainfo)\n\nif(MINGW)\n    install(DIRECTORY ${CMAKE_BINARY_DIR}/bin/ DESTINATION ${STK_INSTALL_BINARY_DIR}\n            FILES_MATCHING PATTERN \"*.dll\")\nendif()\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.4189453125,
          "content": "The SuperTuxKart code is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.\n\nThe SuperTuxKart data files (textures, models, sounds, music, etc.) are released under a mixture of licenses including, but not limited to, the following:\n\nGNU General Public License (GNU GPL)\nCreative Commons Attribution (CC-BY)\nCreative Commons Attribution-ShareAlike (CC-BY-SA)\nPublic Domain\n\nSee the 'licenses.txt' files throughout the various data subdirectories for the licenses of each file.\n\n_____________________________________________________________________\n\nGNU GENERAL PUBLIC LICENSE\n\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\nPreamble\n\nThe GNU General Public License is a free, copyleft license for software and other kinds of works.\n\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\n\nTo protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.\n\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.\n\nSome devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.\n\nFinally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.\n\nThe precise terms and conditions for copying, distribution and modification follow.\n\nTERMS AND CONDITIONS\n\n0. Definitions.\n\n\"This License\" refers to version 3 of the GNU General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based on the Program.\n\nTo \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\n1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work.\n\nA \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\n\nThe \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same work.\n\n2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\n3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\n\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.\n\n4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\n5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified it, and giving a relevant date.\n    b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\".\n    c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.\n    d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.\n\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\n6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.\n    b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.\n    c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.\n    d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.\n    e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n\n\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\n\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\n\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\n7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or\n    b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or\n    c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or\n    d) Limiting the use for publicity purposes of names of licensors or authors of the material; or\n    e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or\n    f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.\n\nAll other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\n8. Termination.\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\n\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\n\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\n9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\n10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\n11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\"\nmeans you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\n12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\n13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.\n\n14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\n\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\n15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\n\nEND OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\".\n\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <https://www.gnu.org/licenses/>.\n\nThe GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 14.3095703125,
          "content": "# Building from source\n\nIn order to build SuperTuxKart from source, you'll need both the code and the assets (See <https://supertuxkart.net/Source_control> for more information):\n\n```bash\ngit clone https://github.com/supertuxkart/stk-code stk-code\nsvn co https://svn.code.sf.net/p/supertuxkart/code/stk-assets stk-assets\n```\n\n## Building SuperTuxKart on Linux\n\n### Dependencies\n\nTo build SuperTuxKart from source, you'll need to install the following packages:\n\n* OpenAL (recommended: openal-soft-devel)\n* Ogg (libogg-dev)\n* Vorbis (libvorbis-dev)\n* Freetype (libfreetype6-dev)\n* Harfbuzz (libharfbuzz-dev)\n* libcurl (libcurl-devel)\n* libbluetooth (bluez-devel)\n* openssl (openssl-dev)\n* libpng (libpng-devel)\n* zlib (zlib-devel)\n* jpeg (libjpeg-turbo-devel)\n* SDL2 (libsdl2-devel)\n\nDebian-based Distributions command:\n\n```bash\nsudo apt-get install build-essential cmake libbluetooth-dev libsdl2-dev \\\nlibcurl4-openssl-dev libenet-dev libfreetype6-dev libharfbuzz-dev \\\nlibjpeg-dev libogg-dev libopenal-dev libpng-dev \\\nlibssl-dev libvorbis-dev libmbedtls-dev pkg-config zlib1g-dev\n```\n\nFedora command:\n\n```bash\nsudo dnf install @development-tools angelscript-devel \\\nbluez-libs-devel cmake desktop-file-utils SDL2-devel \\\nfreealut-devel freetype-devel \\\ngcc-c++ git-core libcurl-devel libjpeg-turbo-devel \\\nlibpng-devel libsquish-devel libtool libvorbis-devel \\\nopenal-soft-devel openssl-devel libcurl-devel harfbuzz-devel \\\nlibogg-devel openssl-devel pkgconf \\\nwiiuse-devel zlib-devel\n```\n\nArch-based Distributions command:\n\n```bash\nsudo pacman -S openal libogg libvorbis freetype2 harfbuzz curl \\\nbluez-libs openssl libpng zlib libjpeg-turbo sdl2 gcc cmake \\\npkgconf make git subversion\n```\n\nopenSUSE command:\n\n```bash\nsudo zypper install gcc-c++ cmake openssl-devel libcurl-devel libSDL2-devel \\\nfreetype-devel harfbuzz-devel libogg-devel openal-soft-devel libpng-devel \\\nlibvorbis-devel pkgconf zlib-devel enet-devel \\\nlibjpeg-devel bluez-devel freetype2-devel\n```\n\nMageia 6 command:\n\n```bash\nsu -c 'urpmi gcc-c++ cmake openssl-devel libcurl-devel freetype-devel harfbuzz-devel \\\nlibjpeg-turbo-devel libogg-devel openal-soft-devel SDL2-devel \\\nlibpng-devel libvorbis-devel nettle-devel zlib-devel git subversion \\\nlibbluez-devel libfreetype6-devel\n```\n\nSolus command:\n```bash\nsudo eopkg it cmake openal-soft-devel libogg-devel libvorbis-devel freetype2-devel \\\nharfbuzz-devel curl-devel bluez-devel openssl-devel libpng-devel zlib-devel \\\nlibjpeg-turbo-devel sdl2-devel enet-devel libjpeg-turbo-devel bluez-devel curl-devel\n```\n\n#### In-game recorder\n\nTo build the in-game recorder for STK, you have to install\n`libopenglrecorder` from your distribution, or compile it yourself from [here](https://github.com/Benau/libopenglrecorder).\nCompilation instruction is explained there. If you don't need this feature, pass `-DBUILD_RECORDER=off` to CMake.\n\n#### Shaderc for Vulkan support\n\nYou need to compile [Shaderc](https://github.com/google/shaderc) for Vulkan support in SuperTuxKart if you are not building for Windows or macOS. If you don't need this feature, pass `-DNO_SHADERC=on` to CMake.\n\n### Compiling\n\nTo compile SuperTuxKart, run the following commands inside the `stk-code` directory:\n\n```bash\n# go into the stk-code directory\ncd stk-code\n\n# create and enter the cmake_build directory\nmkdir cmake_build\ncd cmake_build\n\n# run cmake to generate the makefile\ncmake ..\n\n# compile\nmake -j$(nproc)\n```\n\nSTK can then be run from the build directory with `bin/supertuxkart`.\n\n#### Keeping your build up to date\n\nTo recompile the latest code without redownloading the entire source, first run the ```svn up``` command inside the 'stk-assets' directory, then run the following commands inside the 'stk-code' directory:\n\n```bash\ngit pull\ncd cmake_build\ncmake ..\nmake -j$(nproc)\n```\n\n#### Build Speed Optimization\n\nThe `-j$(nproc)` option is an example. For a faster build, use `-jx` instead, where \"x\" is the amount of CPU threads you have, minus one.\n\n#### Further options\n\nTo create a debug version of STK, run:\n\n```bash\ncmake .. -DCMAKE_BUILD_TYPE=Debug\n```\n\nYou can install your build system-wide:\n\n```bash\nsudo make install\n```\n\nThe default install location is `/usr/local`, i.e. the data files will\nbe written to `/usr/local/share/games/supertuxkart` and the executable\nwill be copied to `/usr/local/bin`. To change the default installation\nlocation, specify `CMAKE_INSTALL_PREFIX` when running CMake, e.g.:\n`cmake .. -DCMAKE_INSTALL_PREFIX=/opt/stk`.\n\n## Building SuperTuxKart on Windows\n\nTo Build SuperTuxKart on Windows, follow these instructions:\n\n1. Download and install Visual Studio from here: [Visual Studio - Download](https://www.visualstudio.com/downloads/). The free Visual Studio Community edition works fine. Remember to select \"Desktop development with C++\" in the installer.\n\n2. If you want the stable version, download the SuperTuxKart source package from the latest stable version of [SuperTuxKart on GitHub](https://github.com/supertuxkart/stk-code/releases) and unpack it.\n\n3. If you want the development version, you will need a Git client and an SVN client. More information can be found here: [SuperTuxKart.net - Source Control](https://supertuxkart.net/Source_control).\nOpen your file browser and find somewhere you want to put the development version of SuperTuxKart. For example in C:\\\\Users\\\\\\<Your Username\\> as the Git and SVN clients will have write permissions there, and you should create its own directory, for example \"SuperTuxKart-dev\". Enter that directory, and create a directory inside called \"stk-assets\", and enter it. If you installed TortoiseSVN, right-click, select TortoiseSVN -> Checkout... and paste the corresponding URL found in [SuperTuxKart.net - Source Control](https://supertuxkart.net/Source_control). While it is downloading the game assets, go back to your file browser and move one level up (if you followed the example that directory would be named \"SuperTuxKart-dev\"). Right-click again somewhere empty and select \"Git clone...\" and paste the corresponding link found in [SuperTuxKart.net - Source Control](https://supertuxkart.net/Source_control).\n*Note: Both `stk-code` and `stk-assets` **must** be in the same directory, otherwise the build will likely fail!*\n\n4. If you got the stable version, download the Windows dependencies package from [SuperTuxKart on GitHub - Dependencies Releases](https://github.com/supertuxkart/dependencies/releases), find the stk-code version there and download the `dependencies(arch).zip` as needed and unpack the archive into the `stk-code` directory.\n\n5. If you got the development version go to SuperTuxKart-dev in your file browser, then visit [SuperTuxKart on GitHub - Dependencies latest preview release](https://github.com/supertuxkart/dependencies/releases/tag/preview)\nand unpack the archive into the `stk-code` directory. Download `i686` if you use Win32 generator of MSVC, `x86_64` for x64, `armv7` for ARM and `aarch64` for ARM64.\n\n6. Download CMake from here: [CMake - download page](https://cmake.org/download/), install it; once CMake is installed, double click on the CMake icon on your desktop, and point it towards your `stk-code` directory in the 'Where is the source code' field, and point 'Where to build the binaries' to a new directory called `build` or `bld` inside the stk-code directory.\n\n7. Press 'Configure'; CMake will ask you if it is OK to create the aforementioned directory, press `Yes`. CMake will then ask you about your version of Visual Studio.\n\n    Confirm your selection; *Please look at the table below to avoid confusion between version numbers and releases of Visual Studio*; CMake will begin creating the required files for the build in the directory. If you want to do a 64-bit build, select the version of Visual Studio you installed with \"Win64\" appended. Press the 'Generate' button.\n\n8. Navigate to your build directory and open the `SuperTuxKart.sln` file; Visual Studio will now load the solution.\n\n9. In the 'Solution Explorer', right click on the `supertuxkart` project and select \"Set as StartUp project\".\n\n10. Open the 'Build' menu and select 'Build Solution'; or, press the default keyboard shortcut: `CTRL + SHIFT + B` to build the solution.\n\n*Note: To avoid confusion between releases and versions, refer to this table:*\n\n| Visual Studio Release | Version |\n| --------------------- | ------- |\n| Visual Studio 2019    | 16      |\n| Visual Studio 2017    | 15      |\n| Visual Studio 2015    | 14      |\n| Visual Studio 2013    | 13      |\n\n## Building SuperTuxKart on Windows (from PowerShell/Command line)\n\n1. Download and install Visual Studio from here: [Visual Studio - Download](https://www.visualstudio.com/downloads/), the free Visual Studio Community edition works fine.\n\n2. Download a source package from either [SuperTuxKart on GitHub](https://github.com/supertuxkart/stk-code/releases) or [SuperTuxKart.net - Source Control](https://supertuxkart.net/Source_control)\nNOTE: the `stk-code` and `stk-assets` directories **must** be in the same directory, `stk-assets` is not needed if you download the full source tarball `(SuperTuxKart-version-src.tar.xz)`.\n3. Download the Windows dependencies package from [SuperTuxKart on GitHub - Dependencies latest preview release](https://github.com/supertuxkart/dependencies/releases/tag/preview)\nand unpack the archive into the `stk-code` directory. Download `i686` if you use Win32 generator of MSVC, `x86_64` for x64, `armv7` for ARM and `aarch64` for ARM64.\n4. Download CMake from here: [CMake - download page](https://cmake.org/download/); and install it. Navigate to the `stk-code` directory, and create a directory called \"build\":\n\n    ```cmd\n    mkdir build\n    cd build\n    ```\n\n5. Once inside the build directory; run CMake to start the compilation process:\n\n    ```cmd\n    cmake ..\n    ```\n\n6. Now that CMake finished configuring and creating the necessary files for the build, run the build command in the same directory:\n\n    ```cmd\n    msbuild.exe SuperTuxKart.sln\n    ```\n\nSuperTuxKart can now be run as `bin\\Debug\\supertuxkart.exe` or `bin\\Release\\supertuxkart.exe`.\n\n## Building SuperTuxKart on Windows using LLVM MinGW\n\n1. Get the LLVM Mingw archive [here](https://github.com/mstorsjo/llvm-mingw/releases/latest), get the `*-msvcrt-i686.zip or` `*-msvcrt-x86_64.zip` depending on whether you have an Intel / AMD 32 or 64-bit Windows. If you are using ARM64 Windows get the `*-msvcrt-i686.zip` should be fine (untested). After downloading extract it as `C:\\llvm-mingw` so `C:\\llvm-mingw` contains `bin`, `include`, `lib`, etc.\n2. Get Ninja [here](https://github.com/ninja-build/ninja/releases/latest), download the `ninja-win.zip` and extract the `ninja.exe` from the archive to `C:\\llvm-mingw`. If you are not using Intel / AMD 64-bit Windows use [this link](https://packages.msys2.org/package/mingw-w64-i686-ninja) and extract `mingw32\\bin\\ninja.exe` inside the `tar.zst`.\n3. Download a source package from either [SuperTuxKart on GitHub](https://github.com/supertuxkart/stk-code/releases) or [SuperTuxKart.net - Source Control](https://supertuxkart.net/Source_control)\nNOTE: the `stk-code` and `stk-assets` directories **must** be in the same directory, `stk-assets` is not needed if you download the full source tarball `(SuperTuxKart-version-src.tar.xz)`. Also make sure they lie within the C drive.\n4. Download the Windows dependencies package from [SuperTuxKart on GitHub - Dependencies latest preview release](https://github.com/supertuxkart/dependencies/releases/tag/preview)\nand unpack the archive into the `stk-code` directory. Download `i686` if you compile for Intel / AMD 32-bit, `x86_64` for Intel / AMD 64-bit, `armv7` for ARM 32-bit and `aarch64` for ARM 64-bit version of Windows.\n5. Download CMake from here: [CMake - download page](https://cmake.org/download/), install it; once CMake is installed, double click on the CMake icon on your desktop, and point it towards your `stk-code` directory in the 'Where is the source code' field, and point 'Where to build the binaries' to a new directory called `build` inside the stk-code directory.\n### For cmake-gui\n6. Press the `Add Entry` button and add the values below:\n* Name: `LLVM_ARCH` Type: `STRING`  Value: `i686`, `x86_64`, `armv7` or `aarch64`\n* Name: `LLVM_PREFIX` Type: `STRING`  Value: `C:/llvm-mingw`\n* Name: `CMAKE_MAKE_PROGRAM` Type: `STRING` Value: `C:/llvm-mingw/ninja.exe`\n* Name: `USE_WIIUSE` Type: `BOOL`  Value: `Empty (unchecked)`\n7. Press 'Configure'; CMake will ask you if it is OK to create the aforementioned directory, press `Yes`. Choose `Ninja` from `Specify the generator for this project`, choose `Specify toolchain file for cross-compiling` then press `Next`. Specify the toolchain file which is located in `stk-code\\cmake\\Toolchain-llvm-mingw.cmake` and press `Finish`. If no error appears then press 'Generate'\n8. Once inside the build directory, run the build command using command line `cmd.exe` or PowerShell:\n    ```cmd\n    C:\\llvm-mingw\\ninja.exe\n    ```\nSuperTuxKart can now be run as `bin\\supertuxkart.exe`.\n\n### For PowerShell/Command Prompt\n6. Once inside the build directory, run the CMake command using command line `cmd.exe` or PowerShell:\n\n    ```cmd\n    cmake .. -G Ninja -DLLVM_ARCH=\"x86_64\" -DLLVM_PREFIX=C:\\llvm-mingw -DCMAKE_MAKE_PROGRAM=C:\\llvm-mingw\\ninja.exe -DUSE_WIIUSE=OFF -DCMAKE_TOOLCHAIN_FILE=\"../cmake/Toolchain-llvm-mingw.cmake\"\n    ```\n7. Run the build command in the same directory:\n\n    ```cmd\n    C:\\llvm-mingw\\ninja.exe\n    ```\n\nSuperTuxKart can now be run as `bin\\supertuxkart.exe`.\n\n## Building SuperTuxKart on macOS\n\n### Getting Started\n\nInstall the developer tools, either from the OS X Install DVD or from Apple's website.\n\nDownload `dependencies-macosx.tar.xz` from the `Assets` section [here](https://github.com/supertuxkart/dependencies/releases) and extract it inside the `stk-code` directory, use the `preview` version for git stk-code.\n\nBuild STK:\n\n```bash\ncd /path/to/stk-code\nmkdir cmake_build\ncd cmake_build\ncmake .. -DCMAKE_FIND_ROOT_PATH=$(pwd)/../dependencies-macosx -DUSE_CRYPTO_OPENSSL=FALSE\nmake\n```\n\nAdd ` -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9` for 10.9 compatibility.\n\n#### (Optional) packaging for distribution\n\nBy default, the executable that is produced is not ready for distribution. Install <https://github.com/auriamg/macdylibbundler> and run:\n\n```bash\ndylibbundler -od -b -x ./bin/SuperTuxKart.app/Contents/MacOS/supertuxkart -d ./bin/SuperTuxKart.app/Contents/libs/ -p @executable_path/../libs/ -s ../dependencies-macosx/lib\n```\n\nAdd `-ns` to disable ad-hoc codesigning.\n\nAfterwards, copy the contents of `stk-assets` into `/SuperTuxKart.app/Contents/Resources/data`.\n"
        },
        {
          "name": "NETWORKING.md",
          "type": "blob",
          "size": 23.6162109375,
          "content": "# Online networking games for STK\n\n## Hosting server\nFirst of all, you can compile STK with `-DSERVER_ONLY=ON` which will produce a GUI-less STK binary optimized for size and memory usage, useful for situation like in VPS.\nThe dependencies for RHEL/CentOS 7 are installed with:\n```bash\nyum install wget; cd /tmp; wget https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-12.noarch.rpm; rpm -Uvh epel-release*rpm\nyum install gcc-c++ cmake openssl-devel libcurl-devel zlib-devel enet\n```\n### Hosting WAN (public internet) server\nYou are required to have an stk online account first, go [here](https://online.supertuxkart.net/register.php) for registration.\n\nIt is recommended you have a saved user in your computer to allow hosting multiple servers simultaneously with the same account, if you have a fresh STK installation, first run:\n\nIf you intend to keep your server always on (24x7) you are required to implement port forward / direct connection with NAT penetration in your network, we will regularly remove any servers not following this rule.\n\n`supertuxkart --init-user --login=your_registered_name --password=your_password`\n\nAfter that you should see `Done saving user, leaving` in terminal if it successfully logged in.\n\nThan you can just run:\n\n`supertuxkart --server-config=your_config.xml --network-console`\n\nIt will create that xml configuration file if not found in current directory, you can type `quit` in terminal, than you can edit that file for further configuration as required.\n` --network-console` should not be used if you run supertuxkart server later with systemd service, see issue [#4299](https://github.com/supertuxkart/stk-code/issues/4299).\n\nThe current server configuration xml looks like this:\n```xml\n<?xml version=\"1.0\"?>\n<server-config version=\"6\" >\n\n    <!-- Name of server, encode in XML if you want to use unicode characters. -->\n    <server-name value=\"STK Server\" />\n\n    <!-- Port used in server, if you specify 0, it will use the server port specified in stk_config.xml. If you wish to use a random port, set random-server-port to '1' in user config. STK will automatically switch to a random port if the port you specify fails to be bound. -->\n    <server-port value=\"0\" />\n\n    <!-- Game mode in server, 0 is normal race (grand prix), 1 is time trial (grand prix), 3 is normal race, 4 time trial, 6 is soccer, 7 is free-for-all and 8 is capture the flag. Notice: grand prix server doesn't allow for players to join and wait for ongoing game. -->\n    <server-mode value=\"3\" />\n\n    <!-- Difficulty in server, 0 is beginner, 1 is intermediate, 2 is expert and 3 is supertux (the most difficult). -->\n    <server-difficulty value=\"0\" />\n\n    <!-- Number of grand prix tracks per game (If grand prix enabled). -->\n    <gp-track-count value=\"3\" />\n\n    <!-- Use goal target in soccer. -->\n    <soccer-goal-target value=\"false\" />\n\n    <!-- Enable wan server, which requires you to have an stk-addons account with a saved session. Check init-user command for details. -->\n    <wan-server value=\"true\" />\n\n    <!-- Enable network console, which can do for example kickban. -->\n    <enable-console value=\"false\" />\n\n    <!-- Maximum number of players on the server, setting this to a value greater than 8 can cause performance degradation. -->\n    <server-max-players value=\"8\" />\n\n    <!-- Password for private server, leave empty for a public server. -->\n    <private-server-password value=\"\" />\n\n    <!-- Message of today shown in lobby, you can enter encoded XML words here or a file.txt and let STK load it. -->\n    <motd value=\"\" />\n\n    <!-- If this value is set to false, the server will ignore chat messages from all players. -->\n    <chat value=\"true\" />\n\n    <!-- If client sends more than chat-consecutive-interval / 2 chats within this value (read in seconds), it will be ignore, negative value to disable. -->\n    <chat-consecutive-interval value=\"8\" />\n\n    <!-- Allow players to vote for which track to play. If this value is set to false, the server will randomly pick the next track to play. -->\n    <track-voting value=\"true\" />\n\n    <!-- Timeout in seconds for selecting karts and (or) voting tracks in server, you may want to use a lower value if you have track-voting off. -->\n    <voting-timeout value=\"30\" />\n\n    <!-- Timeout in seconds for validation of clients in wan, currently STK will use the stk-addons server to share AES key between the client and server. -->\n    <validation-timeout value=\"20\" />\n\n    <!-- By default WAN server will always validate player and LAN will not, disable it to allow non-validated player in WAN. -->\n    <validating-player value=\"true\" />\n\n    <!-- Disable it to turn off all stun related code in server, it allows for saving of server resources if your server is not behind a firewall. -->\n    <firewalled-server value=\"true\" />\n\n    <!-- Enable to allow IPv6 connection if you have a public IPv6 address. STK currently uses dual-stack mode which requires server to have both IPv4 and IPv6 and listen to same port. If STK detects your server has no public IPv6 address or port differs between IPv4 and IPv6 then it will use IPv4 only socket. For system which doesn't support dual-stack socket (like OpenBSD) you may fail to be connected by IPv4 clients. You can override the detection in config.xml at supertuxkart config-0.10 folder, with default-ip-type option. -->\n    <ipv6-connection value=\"true\" />\n\n    <!-- No server owner in lobby which can control the starting of game or kick any players. -->\n    <owner-less value=\"false\" />\n\n    <!-- Time to wait before entering kart selection screen if satisfied min-start-game-players below for owner less or ranked server. -->\n    <start-game-counter value=\"60\" />\n\n    <!-- Clients below this value will be rejected from joining this server. It's determined by number of official karts in client / number of official karts in server -->\n    <official-karts-threshold value=\"1\" />\n\n    <!-- Clients below this value will be rejected from joining this server. It's determined by number of official tracks in client / number of official tracks in server, setting this value too high will prevent android players from joining this server, because STK android apk has some official tracks removed. -->\n    <official-tracks-threshold value=\"0.7\" />\n\n    <!-- Only auto start kart selection when number of connected player is larger than or equals this value, for owner less or ranked server, after start-game-counter reaches 0. -->\n    <min-start-game-players value=\"2\" />\n\n    <!-- Automatically end linear race game after 1st player finished for some time (currently his finished time * 0.25 + 15.0). -->\n    <auto-end value=\"false\" />\n\n    <!-- Enable team choosing in lobby in team game (soccer and CTF). If owner-less is enabled and live-spectate is not enabled, than this option is always disabled. -->\n    <team-choosing value=\"true\" />\n\n    <!-- If strict-players is on, no duplicated online id or split screen players are allowed, which can prevent someone using more than 1 network AI with this server. -->\n    <strict-players value=\"false\" />\n\n    <!-- Server will submit ranking to stk-addons server for linear race games, you require permission for that. validating-player, auto-end, strict-player and owner-less will be turned on. -->\n    <ranked value=\"false\" />\n\n    <!-- If true, the server owner can config the difficulty and game mode in the GUI of lobby. This option cannot be used with owner-less or grand prix server, and will be automatically turned on if the server was created using the in-game GUI. The changed difficulty and game mode will not be saved in this config file. -->\n    <server-configurable value=\"false\" />\n\n    <!-- If true, players can live join or spectate the in-progress game. Currently live joining is only available if the current game mode used in server is FFA, CTF or soccer, also official-karts-threshold will be made 1.0. If false addon karts will use their original hitbox other than tux, all players having it restriction applies. -->\n    <live-spectate value=\"true\" />\n\n    <!-- Time in seconds when a flag is dropped a by player in CTF returning to its own base. -->\n    <flag-return-timeout value=\"20\" />\n\n    <!-- Time in seconds to deactivate a flag when it's captured or returned to own base by players. -->\n    <flag-deactivated-time value=\"3\" />\n\n    <!-- Hit limit of free for all, zero to disable hit limit. -->\n    <hit-limit value=\"20\" />\n\n    <!-- Time limit of free for all in seconds, zero to disable time limit. -->\n    <time-limit-ffa value=\"360\" />\n\n    <!-- Capture limit of CTF, zero to disable capture limit. -->\n    <capture-limit value=\"5\" />\n\n    <!-- Time limit of CTF in seconds, zero to disable time limit. -->\n    <time-limit-ctf value=\"600\" />\n\n    <!-- Value used by server to automatically estimate each game time. For races, it decides the lap of each race in network game, if more than 0.0f, the number of lap of each track vote in linear race will be determined by max(1.0f, auto-game-time-ratio * default lap of that track). For soccer if more than 0.0f, for time limit game it will be auto-game-time-ratio * soccer-time-limit in UserConfig, for goal limit game it will be auto-game-time-ratio * numgoals in UserConfig, -1 to disable for all. -->\n    <auto-game-time-ratio value=\"-1\" />\n\n    <!-- Maximum ping allowed for a player (in ms), it's recommended to use default value if live-spectate is on. -->\n    <max-ping value=\"300\" />\n\n    <!-- Tolerance of jitter in network allowed (in ms), it's recommended to use default value if live-spectate is on. -->\n    <jitter-tolerance value=\"100\" />\n\n    <!-- Kick players whose ping is above max-ping. -->\n    <kick-high-ping-players value=\"false\" />\n\n    <!-- Allow players exceeding max-ping to have a playable game, if enabled kick-high-ping-players will be disabled, please also use a default value for max-ping and jitter-tolerance with it. -->\n    <high-ping-workaround value=\"true\" />\n\n    <!-- Kick idle player which has no network activity to server for more than some seconds during game, unless he has finished the race. Negative value to disable, and this option will always be disabled for LAN server. -->\n    <kick-idle-player-seconds value=\"60\" />\n\n    <!-- Set how many states the server will send per second, the higher this value, the more bandwidth requires, also each client will trigger more rewind, which clients with slow device may have problem playing this server, use the default value is recommended. -->\n    <state-frequency value=\"10\" />\n\n    <!-- Use sql database for handling server stats and maintenance, STK needs to be compiled with sqlite3 supported. -->\n    <sql-management value=\"false\" />\n\n    <!-- Database filename for sqlite to use, it can be shared for all servers created in this machine, and STK will create specific table for each server. You need to create the database yourself first, see NETWORKING.md for details -->\n    <database-file value=\"stkservers.db\" />\n\n    <!-- Specified in millisecond for maximum time waiting in sqlite3_busy_handler. You may need a higher value if your database is shared by many servers or having a slow hard disk. -->\n    <database-timeout value=\"1000\" />\n\n    <!-- IPv4 ban list table name, you need to create the table first, see NETWORKING.md for details, empty to disable. This table can be shared for all servers if you use the same name. STK can auto kick active peer from ban list (update per minute) whichallows live kicking peer by inserting record to database. -->\n    <ip-ban-table value=\"ip_ban\" />\n\n    <!-- IPv6 ban list table name, you need to create the table first, see NETWORKING.md for details, empty to disable. This table can be shared for all servers if you use the same name. STK can auto kick active peer from ban list (update per minute) which allows live kicking peer by inserting record to database. -->\n    <ipv6-ban-table value=\"ipv6_ban\" />\n\n    <!-- Online ID ban list table name, you need to create the table first, see NETWORKING.md for details, empty to disable. This table can be shared for all servers if you use the same name. STK can auto kick active peer from ban list (update per minute) which allows live kicking peer by inserting record to database. -->\n    <online-id-ban-table value=\"online_id_ban\" />\n\n    <!-- Player reports table name, which will be written when a player reports player in the network user dialog, you need to create the table first, see NETWORKING.md for details, empty to disable. This table can be shared for all servers if you use the same name. -->\n    <player-reports-table value=\"player_reports\" />\n\n    <!-- Days to keep player reports, older than that will be auto cleared, 0 to keep them forever. -->\n    <player-reports-expired-days value=\"3\" />\n\n    <!-- IP geolocation table, you only need this table if you want to geolocate IP from non-stk-addons connection, as all validated players connecting from stk-addons will provide the location info, you need to create the table first, see NETWORKING.md for details, empty to disable. This table can be shared for all servers if you use the same name. -->\n    <ip-geolocation-table value=\"ip_mapping\" />\n\n    <!-- IPv6 geolocation table, you only need this table if you want to geolocate IP from non-stk-addons connection, as all validated players connecting from stk-addons will provide the location info, you need to create the table first, see NETWORKING.md for details, empty to disable. This table can be shared for all servers if you use the same name. -->\n    <ipv6-geolocation-table value=\"ipv6_mapping\" />\n\n    <!-- If true this server will auto add / remove AI connected with network-ai=x, which will kick N - 1 bot(s) where N is the number of human players. Only use this for non-GP racing server. -->\n    <ai-handling value=\"false\" />\n\n    <!-- If true this server will allow AI instance to be connected from anywhere. (other than LAN network only) -->\n    <ai-anywhere value=\"false\" />\n\n</server-config>\n\n```\n\nAt the moment STK has a list of STUN servers for NAT penetration which allows players or servers behind a firewall or router to be able to connect to each other, but in case it doesn't work, you have to manually disable the firewall or port forward the port(s) used by STK.\nBy default STK servers use port `2759` (UDP). For example, in Ubuntu based distributions, run the following command to disable the firewall on that port:\n\n`sudo ufw allow 2759`\n\nYou may also need to handle the server discovery port `2757` (UDP) for connecting your WAN server in LAN / localhost.\n\nNotice: You don't need to make any firewall or router configuration changes if you connect to the recommended servers (marked with ☆★STK★☆).\n\n### Hosting LAN (local internet) server\nEverything is basically the same as WAN one, except you don't need an stk online account, just do:\n\n`supertuxkart --server-config=your_config.xml --lan-server=your_server_name --network-console`\n\nFor LAN server it is required that the server and server discovery port is connectable by clients directly, no NAT penetration will be done in LAN.\n\nLAN server can be connected too by typing your server public address (with port) in ```Enter server address``` dialog without relying on stk-addons.\n\n------\nAfter the first time configuration, you can just start the server with the command:\n\n`supertuxkart --server-config=your_config.xml`, regardless of whether LAN or WAN server is chosen (of course you need to have a saved user for the WAN one), by default your server logging will be saved to the STK configuration directory with a name of `your_config.log`, given that the server configuration filename is `your_config.xml`.\n\nYou can find out that directory location [here (See Where is the configuration stored?)](https://supertuxkart.net/FAQ)\n\n## Testing server\nThere is a network AI tester in STK which can use AI on player controller for server hosting linear races game mode, which helps automating the testing for servers, to enable it use it on lan server:\n\n`supertuxkart --connect-now=x.x.x.x:y --network-ai=n --no-graphics`\n\nRemove `--no-graphics` if you want to see the AI racing. You can also run network AI tester in server-only build of STK.\n\nWith the network AI tester, it's easier to for example simulate high-loaded servers or bad networks (ones with high ping and/or packet loss).\n\nTested on a Raspberry Pi 3 Model B+, if you have 8 players connected to a server hosted on it, the usage of a single CPU core is ~60% and there are ~60MB of memory usage for game with heavy tracks like Cocoa Temple or Candela City on the server, you can use the above figures to estimate how many STK servers can be hosted on the same computer.\n\nFor bad network simulation, we recommend `network traffic control` by Linux kernel, see [here](https://wiki.linuxfoundation.org/networking/netem) for details.\n\nYou will have the best gaming experience by choosing a server where all players have less than 100ms ping with no packet loss.\n\n## Server management (Since 1.1)\n\nCurrently STK uses sqlite (if building with sqlite3 on) for server management with the following functions at the moment:\n1. Server statistics\n2. IP / online ID ban list\n3. Player reports\n4. IPv4 and IPv6 geolocation\n\nYou need to create a database in sqlite first, run `sqlite3 stkservers.db` in the folder where (all) your server_config.xml(s) located.\n\nA table named `v(server database version)_(your_server_config_filename_without_.xml_extension)_stats` will also be created in your database if one does not exist.:\n```sql\nCREATE TABLE IF NOT EXISTS (table name above)\n(\n    host_id INTEGER UNSIGNED NOT NULL PRIMARY KEY, -- Unique host id in STKHost of each connection session for a STKPeer\n    ip INTEGER UNSIGNED NOT NULL, -- IP decimal of host\n    ipv6 TEXT NOT NULL DEFAULT '', -- IPv6 (if exists) in string of host (only created if IPv6 server)\n    port INTEGER UNSIGNED NOT NULL, -- Port of host\n    online_id INTEGER UNSIGNED NOT NULL, -- Online if of the host (0 for offline account)\n    username TEXT NOT NULL, -- First player name in the host (if the host has splitscreen player)\n    player_num INTEGER UNSIGNED NOT NULL, -- Number of player(s) from the host, more than 1 if it has splitscreen player\n    country_code TEXT NULL DEFAULT NULL, -- 2-letter country code of the host\n    version TEXT NOT NULL, -- SuperTuxKart version of the host\n    os TEXT NOT NULL, -- Operating system of the host\n    connected_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Time when connected\n    disconnected_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Time when disconnected (saved when disconnected)\n    ping INTEGER UNSIGNED NOT NULL DEFAULT 0 -- Ping of the host\n) WITHOUT ROWID;\n```\n\nSTK will also create the following default views from the stats table:\n\n`*_full_stats`\nFull stats with ip in human readable format and time played of each players in minutes.\n\n`*_current_players`\nCurrent players in server with ip in human readable format and time played of each players in minutes.\n\n`*_player_stats`\nAll players with online id and username with their time played stats in this server since creation of this database.\nIf sqlite supports window functions (since 3.25), it will include last session player info (ip, country, ping...).\n\nA empty table named `v(server database version)_countries` will also be created in your database if not exists:\n```sql\nCREATE TABLE IF NOT EXISTS (table name above)\n(\n    country_code TEXT NOT NULL PRIMARY KEY UNIQUE, -- Unique 2-letter country code\n    country_flag TEXT NOT NULL, -- Unicode country flag representation of 2-letter country code\n    country_name TEXT NOT NULL -- Readable name of this country\n) WITHOUT ROWID;\n```\n\nIf you want to see flags and readable names of countries in the above views, you need to initialize `v(server database version)_countries` table, check [this script](tools/generate-countries-table.py).\n\nFor IPv4 and online ID ban list, player reports or IP mapping, you need to create one yourself:\n```sql\nCREATE TABLE ip_ban\n(\n    ip_start INTEGER UNSIGNED NOT NULL UNIQUE, -- Starting of ip decimal for banning (inclusive)\n    ip_end INTEGER UNSIGNED NOT NULL UNIQUE, -- Ending of ip decimal for banning (inclusive)\n    starting_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Starting time of this banning entry to be effective\n    expired_days REAL NULL DEFAULT NULL, -- Days for this banning to be expired, use NULL for a permanent ban\n    reason TEXT NOT NULL DEFAULT '', -- Banned reason shown in user stk menu, can be empty\n    description TEXT NOT NULL DEFAULT '', -- Private description for server admin\n    trigger_count INTEGER UNSIGNED NOT NULL DEFAULT 0, -- Number of banning triggered by this ban entry\n    last_trigger TIMESTAMP NULL DEFAULT NULL -- Latest time this banning entry was triggered\n);\n\nCREATE TABLE ipv6_ban\n(\n    ipv6_cidr TEXT NOT NULL UNIQUE, -- IPv6 CIDR range for banning (for example 2001::/64), use /128 for a specific ip\n    starting_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Starting time of this banning entry to be effective\n    expired_days REAL NULL DEFAULT NULL, -- Days for this banning to be expired, use NULL for a permanent ban\n    reason TEXT NOT NULL DEFAULT '', -- Banned reason shown in user stk menu, can be empty\n    description TEXT NOT NULL DEFAULT '', -- Private description for server admin\n    trigger_count INTEGER UNSIGNED NOT NULL DEFAULT 0, -- Number of banning triggered by this ban entry\n    last_trigger TIMESTAMP NULL DEFAULT NULL -- Latest time this banning entry was triggered\n);\n\nCREATE TABLE online_id_ban\n(\n    online_id INTEGER UNSIGNED NOT NULL UNIQUE, -- Online id from STK addons database for banning\n    starting_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Starting time of this banning entry to be effective\n    expired_days REAL NULL DEFAULT NULL, -- Days for this banning to be expired, use NULL for a permanent ban\n    reason TEXT NOT NULL DEFAULT '', -- Banned reason shown in user stk menu, can be empty\n    description TEXT NOT NULL DEFAULT '', -- Private description for server admin\n    trigger_count INTEGER UNSIGNED NOT NULL DEFAULT 0, -- Number of banning triggered by this ban entry\n    last_trigger TIMESTAMP NULL DEFAULT NULL -- Latest time this banning entry was triggered\n);\n\nCREATE TABLE player_reports\n(\n    server_uid TEXT NOT NULL, -- Report from which server unique id (config filename)\n    reporter_ip INTEGER UNSIGNED NOT NULL, -- IP decimal of player who reports\n    reporter_ipv6 TEXT NOT NULL DEFAULT '', -- IPv6 (if exists) in string of player who reports (only needed for IPv6 server)\n    reporter_online_id INTEGER UNSIGNED NOT NULL, -- Online id of player who reports, 0 for offline player\n    reporter_username TEXT NOT NULL, -- Player name who reports\n    reported_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Time of reporting\n    info TEXT NOT NULL, -- Report info by reporter\n    reporting_ip INTEGER UNSIGNED NOT NULL, -- IP decimal of player being reported\n    reporting_ipv6 TEXT NOT NULL DEFAULT '', -- IPv6 (if exists) in string of player who reports (only needed for IPv6 server)\n    reporting_online_id INTEGER UNSIGNED NOT NULL, -- Online id of player being reported, 0 for offline player\n    reporting_username TEXT NOT NULL -- Player name being reported\n);\n\nCREATE TABLE ip_mapping\n(\n    ip_start INTEGER UNSIGNED NOT NULL PRIMARY KEY UNIQUE, -- IP decimal start\n    ip_end INTEGER UNSIGNED NOT NULL UNIQUE, -- IP decimal end\n    latitude REAL NOT NULL, -- Latitude of this IP range\n    longitude REAL NOT NULL, -- Longitude of this IP range\n    country_code TEXT NOT NULL -- 2-letter country code\n) WITHOUT ROWID;\n\nCREATE TABLE ipv6_mapping\n(\n    ip_start INTEGER UNSIGNED NOT NULL PRIMARY KEY UNIQUE, -- IP decimal (upper 64bit) start\n    ip_end INTEGER UNSIGNED NOT NULL UNIQUE, -- IP decimal (upper 64bit) end\n    latitude REAL NOT NULL, -- Latitude of this IP range\n    longitude REAL NOT NULL, -- Longitude of this IP range\n    country_code TEXT NOT NULL -- 2-letter country code\n)\n```\n\nFor initialization of `ip_mapping` table, check [this script](tools/generate-ip-mappings.py).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5380859375,
          "content": "# SuperTuxKart\n[![Linux build status](https://github.com/supertuxkart/stk-code/actions/workflows/linux.yml/badge.svg)](https://github.com/supertuxkart/stk-code/actions/workflows/linux.yml)\n[![Apple build status](https://github.com/supertuxkart/stk-code/actions/workflows/apple.yml/badge.svg)](https://github.com/supertuxkart/stk-code/actions/workflows/apple.yml)\n[![Windows build status](https://github.com/supertuxkart/stk-code/actions/workflows/windows.yml/badge.svg)](https://github.com/supertuxkart/stk-code/actions/workflows/windows.yml)\n[![Switch build status](https://github.com/supertuxkart/stk-code/actions/workflows/switch.yml/badge.svg)](https://github.com/supertuxkart/stk-code/actions/workflows/switch.yml)\n[![#supertuxkart on the libera IRC network](https://img.shields.io/badge/libera-%23supertuxkart-brightgreen.svg)](https://web.libera.chat/?channels=#supertuxkart)\n\nSuperTuxKart is a free kart racing game. It focuses on fun and not on realistic kart physics. Instructions can be found on the in-game help page.\n\nThe SuperTuxKart homepage can be found at <https://supertuxkart.net/>. There is also our [FAQ](https://supertuxkart.net/FAQ) and information on how get in touch with the [community](https://supertuxkart.net/Community).\n\nLatest release binaries can be found [here](https://github.com/supertuxkart/stk-code/releases/latest), and preview release [here](https://github.com/supertuxkart/stk-code/releases/preview).\n\n## Hardware Requirements\nTo run SuperTuxKart, make sure that your computer's specifications are equal or higher than the following specifications:\n\n* A graphics card capable of 3D rendering - NVIDIA GeForce 470 GTX, AMD Radeon 6870 HD series card or Intel HD Graphics 4000 and newer. OpenGL >= 3.3\n* You should have a dual-core CPU that's running at 1 GHz or faster.\n* You'll need at least 512 MB of free VRAM (video memory).\n* System memory: 1 GB\n* Minimum disk space: 700 MB\n* Ideally, you'll want a joystick with at least 6 buttons.\n\n## License\nThe software is released under the GNU General Public License (GPL) which can be found in the file [`COPYING`](/COPYING) in the same directory as this file.\n\n---\n\n## 3D coordinates\nA reminder for those who are looking at the code and 3D models:\n\nSuperTuxKart: X right, Y up, Z forwards\n\nBlender: X right, Y forwards, Z up\n\nThe export utilities  perform the needed transformation, so in Blender you just work with the XY plane as ground, and things will appear fine in STK (using XZ as ground in the code, obviously).\n\n## Building from source\n\nBuilding instructions can be found in [`INSTALL.md`](/INSTALL.md)\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "sources.cmake",
          "type": "blob",
          "size": 0.47265625,
          "content": "# Modify this file to change the last-modified date when you add/remove a file.\n# This will then trigger a new cmake run automatically.\nfile(GLOB_RECURSE STK_HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} \"src/*.hpp\")\nfile(GLOB_RECURSE STK_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} \"src/*.cpp\")\nfile(GLOB_RECURSE STK_SHADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} \"data/shaders/*\")\nfile(GLOB_RECURSE STK_RESOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} \"${PROJECT_BINARY_DIR}/tmp/*.rc\")\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "switch",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}