{
  "metadata": {
    "timestamp": 1736565237885,
    "page": 38,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lich0821/WeChatFerry",
      "stars": 4706,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0283203125,
          "content": "clients/** linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.45703125,
          "content": ".*\n!.gitignore\n!.editorconfig\n!.github/\n!.readthedocs.yml\n!.gitattributes\n\n# VS2019 build files\nDebug/\nRelease/\nx64/\nOut/\n\n# Generated files\n*.pb.h\n*.pb.c\n*.pb.cc\n*.dll\n*.exe\nbuild/\nlogs/\njava/wcferry/bin/\nvcpkg_installed/\n\n*_pb2_grpc.py\n__pycache__\n*/python/dist/\n*/python/*.egg-info\n\n*/java/target/\nWcfGrpc.java\nWcfOuterClass.java\n\n*/rust/target/\n*/rust/wcferry/Cargo.lock\n*/rust/wcferry/.wcf.lock\n*/rust/wcferry/target/CACHEDIR.TAG\n\n*/http/dist/\n*/http/*.egg-info/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.224609375,
          "content": "[submodule \"clients/node\"]\n\tpath = clients/node\n\turl = https://github.com/stkevintan/node-wcferry\n\tbranch = main\n[submodule \"clients/wcferry-node\"]\n\tpath = clients/wcferry-node\n\turl = https://github.com/dr-forget/wcferry-node.git\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.2001953125,
          "content": "version: 2\n\nformats:\n  - epub\n  - htmlzip\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.10\"\n\nsphinx:\n  configuration: docs/source/conf.py\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2022 Changhua\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.MD",
          "type": "blob",
          "size": 8.3818359375,
          "content": "# WeChatFerry\r\n\r\n一个玩微信的工具。更多介绍见：[WeChatFerry: 一个玩微信的工具](https://mp.weixin.qq.com/s/CGLfSaNDy8MyuyPWGjGJ7w)。\r\n\r\n<details><summary><font color=\"red\" size=\"12\">免责声明【必读】</font></summary>\r\n\r\n本工具仅供学习和技术研究使用，不得用于任何商业或非法行为，否则后果自负。\r\n\r\n本工具的作者不对本工具的安全性、完整性、可靠性、有效性、正确性或适用性做任何明示或暗示的保证，也不对本工具的使用或滥用造成的任何直接或间接的损失、责任、索赔、要求或诉讼承担任何责任。\r\n\r\n本工具的作者保留随时修改、更新、删除或终止本工具的权利，无需事先通知或承担任何义务。\r\n\r\n本工具的使用者应遵守相关法律法规，尊重微信的版权和隐私，不得侵犯微信或其他第三方的合法权益，不得从事任何违法或不道德的行为。\r\n\r\n本工具的使用者在下载、安装、运行或使用本工具时，即表示已阅读并同意本免责声明。如有异议，请立即停止使用本工具，并删除所有相关文件。\r\n\r\n</details>\r\n\r\n|[📖 Python 文档](https://wechatferry.readthedocs.io/)|[📺 Python 视频教程](https://mp.weixin.qq.com/s/APdjGyZ2hllXxyG_sNCfXQ)|[🙋 FAQ](https://mp.weixin.qq.com/s/YvgFFhF6D-79kXDzRqtg6w)|\r\n|:-:|:-:|:-:|\r\n\r\n👉 [WeChatRobot🤖](https://github.com/lich0821/WeChatRobot)，一个基于 WeChatFerry 的 Python 机器人框架。\r\n\r\n|![碲矿](assets/TEQuant.jpg)|![赞赏](assets/QR.jpeg)|\r\n|:-:|:-:|\r\n|后台回复 `WCF` 加群交流|如果你觉得有用|\r\n\r\n<details><summary>点击查看功能清单</summary>\r\n\r\n* 获取登录二维码\r\n* 查询登录状态\r\n* 获取登录账号信息\r\n* 获取消息类型\r\n* 获取联系人\r\n* 获取可查询数据库\r\n* 获取数据库所有表\r\n* 获取语音消息\r\n* 发送文本消息（可 @）\r\n* 发送图片消息\r\n* 发送文件消息\r\n* 发送卡片消息\r\n* 发送 XML 消息\r\n* 发送 GIF 消息\r\n* 拍一拍群友\r\n* 转发消息\r\n* 开启接收消息\r\n* 关闭接收消息\r\n* 查询数据库\r\n* 获取朋友圈消息\r\n* 下载图片、视频、文件\r\n* 解密图片\r\n* 添加群成员\r\n* 删除群成员\r\n* 邀请群成员\r\n\r\n</details>\r\n\r\n<details><summary>点击查看支持的客户端</summary>\r\n\r\n* Python\r\n* HTTP\r\n* NodeJS\r\n\r\n</details>\r\n\r\n## 感谢大佬们贡献代码\r\n\r\n<a href=\"https://github.com/lich0821/WeChatFerry/graphs/contributors\">![](https://contrib.rocks/image?repo=lich0821/WeChatFerry&columns=8)</a>\r\n\r\n## 快速开始\r\n### Python\r\n[![PyPi](https://img.shields.io/pypi/v/wcferry.svg)](https://pypi.python.org/pypi/wcferry) [![Downloads](https://static.pepy.tech/badge/wcferry)](https://pypi.python.org/pypi/wcferry) [![Documentation Status](https://readthedocs.org/projects/wechatferry/badge/?version=latest)](https://wechatferry.readthedocs.io/zh/latest/?badge=latest)\r\n\r\n* 安装\r\n```sh\r\npip install --upgrade wcferry\r\n```\r\n\r\n* 参考框架：[🤖WeChatRobot](https://github.com/lich0821/WeChatRobot)\r\n\r\n### HTTP\r\n* [wcfrust](https://github.com/lich0821/wcf-client-rust)（基于 Rust）\r\n* [go_wcf_http](clients/go_wcf_http/README.MD)（基于 Go）\r\n* [wcf-http](https://github.com/yuxiaoli/wcf-http)（基于 Python）\r\n\r\n### Java\r\n* [java](clients/java/wcferry/README.MD)\r\n\r\n### NodeJS\r\n* [wcferry-node](https://github.com/dr-forget/wcferry-node)\r\n* [node-wcferry](https://github.com/stkevintan/node-wcferry)\r\n* [wechatferry](https://github.com/wechatferry/wechatferry)\r\n\r\n### C#\r\n* [WeChatFerry-CSharp](https://github.com/send010/WeChatFerry-CSharp)\r\n\r\n### Rust\r\n* [wechat-bot](https://github.com/CliffHan/wechat-bot)\r\n\r\n### Docker\r\n* [docker_wechat](https://github.com/Saroth/docker_wechat)\r\n* [wechatbot-provider-windows](https://github.com/danni-cool/wechatbot-provider-windows)\r\n\r\n## 一起开发\r\n\r\n> 🚫 非开发用户不需要往下看。\r\n>\r\n> **开发用户**：可以根据文档和错误提示，自行解决编译错误的人员。\r\n\r\n### 安装开发环境\r\n\r\n<details><summary>点击查看</summary>\r\n\r\n#### 安装 vcpkg\r\n\r\n* 安装，参考[Vcpkg: 总览](https://github.com/microsoft/vcpkg/blob/master/README_zh_CN.md)。\r\n\r\n```sh\r\ncd C:\\Tools\r\ngit clone https://github.com/microsoft/vcpkg\r\n.\\vcpkg\\bootstrap-vcpkg.bat\r\n```\r\n\r\n* 添加全局配置：\r\n环境变量增加 `vcpkg` 所在路径（本文为：`C:\\Tools\\vcpkg`）：\r\n```sh\r\nsetx VCPKG_ROOT \"C:/Tools/vcpkg\" /M\r\n```\r\n\r\n* 与 Visual Studio 集成\r\n```sh\r\nvcpkg integrate install # 失败则说明未正确安装或者未正确配置环境变量\r\n```\r\n\r\n#### 安装相关组件\r\n\r\n编译时会自动安装。但如果需要使用 `protoc.exe`，则需要配置一下 `protoc.exe` 环境变量：`<vcpkg_package_installed_path>\\x64-windows-static\\x64-windows-static\\tools\\protobuf`。\r\n\r\n（本文为：`C:\\Projs\\WeChatFerry\\WeChatFerry\\vcpkg_installed\\x64-windows-static\\x64-windows-static\\tools\\protobuf`）\r\n\r\n#### 安装 VS2019\r\n\r\n#### 安装 Python3\r\n\r\n通过微软商店或者 python.org 自行下载均可（注意 `python` 版本不能太高，否则需要自行编译依赖，建议使用 python 3.10），然后配置好环境变量，确保 `python` 在命令行下可用。\r\n\r\n安装依赖：\r\n```sh\r\npip install grpcio-tools==1.48.2\r\n```\r\n\r\n</details>\r\n\r\n### 编译\r\n\r\n使用 VS2019 打开工程，编译即可。编译成功后，在 `WeChatFerry\\WeChatFerry\\Out` 目录中会看到相应的 DLL 文件。\r\n\r\n**注**：如果遇到执行 `protoc` 时的 9009 错误，检查是否是 python3 环境有问题，或者 protoc 命令的环境变量配置不正确。\r\n\r\n### 运行\r\n```py\r\nimport ctypes\r\n# 加载 sdk.dll （需要绝对路径）\r\nsdk = ctypes.cdll.LoadLibrary(\"C:/Projs/WeChatFerry/WeChatFerry/Out/sdk.dll\")\r\n\r\n# 初始化\r\nsdk.WxInitSDK(False, 10086)\r\n\r\n# 退出 SDK\r\nsdk.WxDestroySDK()\r\n\r\n# 注意关闭 Python 进程\r\n```\r\n\r\n### 调试日志\r\n```c\r\n    DbgMsg(\"ListenMessage\"); // 封装的 OutputDebugString\r\n    OutputDebugString(L\"ListenMessage\\n\");\r\n    MessageBox(NULL, L\"ListenMessage\", L\"ListenMessage\", 0);\r\n```\r\n\r\n## 项目结构\r\n\r\n```sh\r\nWeChatFerry\r\n├── LICENSE                 # LICENSE\r\n├── README.MD               # 说明\r\n├── WeChatFerry\r\n│   ├── WeChatFerry.sln     # VS2019 工程文件\r\n│   ├── com                 # 公共模块\r\n│   ├── rpc                 # RPC 模块\r\n│   ├── sdk                 # 注入及启动模块\r\n│   ├── smc                 # Silk-Mp3 转换模块\r\n│   └── spy                 # 核心功能实现模块\r\n├── assets\r\n│   ├── QR.jpeg             # 二维码，测试用图\r\n│   ├── TEQuant.jpg         # 二维码，测试用图\r\n│   └── demo.gif            # 示例动图\r\n├── clients\r\n│   ├── go                  # Go 客户端\r\n│   ├── gohttp              # HTTP 客户端\r\n│   ├── http                # HTTP 客户端\r\n│   ├── java                # Java 客户端\r\n│   ├── node                # Node.js 客户端\r\n│   ├── pyauto              # 群友封装的客户端\r\n│   ├── python              # Python 客户端\r\n│   └── rust                # Rust 客户端\r\n└── docs                    # 文档\r\n\r\n```\r\n\r\n## 版本更新\r\n\r\n### v39.3.4\r\n\r\n* 实现获取登录二维码\r\n\r\n<details><summary>点击查看更多</summary>\r\n\r\n客户端越来越多了，版本号开始混乱，所以重新定义了版本号：`w.x.y.z`。\r\n\r\n其中：\r\n* `w` 是微信的大版本号，如 `37` (3.7.a.a), `38` (3.8.a.a), `39` (3.9.a.a)\r\n* `x` 是适配的微信的小版本号，从 0 开始\r\n* `y` 是 `WeChatFerry` 的版本，从 0 开始\r\n* `z` 是各客户端的版本，从 0 开始\r\n\r\n### v39.3.3\r\n\r\n* 修复发送文件 / 图片中文路径问题\r\n\r\n### v39.3.2\r\n\r\n* 修复接收消息问题\r\n\r\n### v39.3.0\r\n\r\n* 适配 `3.9.11.25`\r\n\r\n### v39.2.4\r\n\r\n* 修复 wxid 问题\r\n\r\n### v39.2.3\r\n\r\n* 实现发送 GIF\r\n\r\n### v39.2.2\r\n\r\n* 修复开启、停止接收消息失败问题\r\n\r\n### v39.2.1\r\n\r\n* 实现了好多功能（见功能清单）\r\n\r\n### v39.2.0\r\n\r\n* 开始适配 `3.9.10.27`\r\n* 实现检查登录状态\r\n* 实现获取登录账号信息（wxid、昵称、手机号、数据目录）\r\n* 实现获取消息类型\r\n* 实现开启接收消息\r\n* 实现停止接收消息\r\n* 实现发送文本消息（可 @）\r\n* 实现发送图片消息\r\n\r\n### v39.1.0 (2024.04.19)\r\n\r\n* 适配 x64 环境\r\n* 重构项目\r\n* 开始适配 `3.9.10.19`\r\n\r\n</details>\r\n"
        },
        {
          "name": "WeChatFerry",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}