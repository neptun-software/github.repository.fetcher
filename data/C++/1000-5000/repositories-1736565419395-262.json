{
  "metadata": {
    "timestamp": 1736565419395,
    "page": 262,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "appjs/appjs",
      "stars": 3435,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=unix\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.232421875,
          "content": "build/\nnode_modules/\nappjs.sublime*\ndeps/*\npublish/\ndata/pak\ndata/linux/node-bin/ia32/node\ndata/linux/node-bin/x64/node\ndata/mac/node-bin/node\ndata/win/node-bin/node\n*.vcxproj\n*.sln\nnode.exe\n/deps/\n.DS_Store\n/app/\nnpm-debug.log\n/app-win/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0908203125,
          "content": "[submodule \"data/common/npm\"]\n\tpath = data/common/npm\n\turl = git://github.com/isaacs/npm.git\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.15234375,
          "content": "build/\nnode_modules/\nappjs.sublime*\ndeps/\npublish/\ndata/linux/node-bin/ia32/node\ndata/linux/node-bin/x64/node\ndata/mac/node-bin/node\ndata/win/node-bin/node\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 0.30078125,
          "content": "## To Build\n\n### Mac\n\nThese instructions work on 10.6\n\nclone the repository\n\n    cd appjs\n\n    npm install mime\n\nDownload `node-v0.8.15-darwin-x86.tar.gz`\n\nextract and grab the `bin/node` executable and stick it in `data/mac/node-bin/`\n\n    node-gyp rebuild --arch i386 -j 4 # the space matters after the -j\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.12890625,
          "content": "## Contributors\n\n* Brandon Benvie: He helps me with CEF.\n* Ali Farhadi: He helps me with AppJS.\n* And all other AppJS contributors.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "Copyright (c) 2012 Morteza Milani and other AppJS contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.689453125,
          "content": "# Attention\r\n\r\nAppJS project has not been actively developed for several months. However ownership of the project has now changed\r\nand the future is being discussed.\r\n\r\nAn offshoot project [deskshell](https://github.com/sihorton/appjs-deskshell/) has been very actively developed. \r\nIt is a javascript based SDK for building applications that uses an off the shelf nodejs and chromium to\r\nbuild html5 / css / js applications.\r\n\r\nThe future will probably involve appjs being able to be run stand alone or as a frontend to deskshell. Please contribute\r\nto the discussions on our mailing list: https://groups.google.com/forum/#!forum/appjs-dev\r\n\r\n# AppJS\r\nAppJS is an SDK to develop desktop applications using Node.js melded with Chromium. With AppJS you can develop desktop tools and applications using the same libraries and knowledge used to build websites. You get all the following in one package:\r\n\r\n* JS, HTML5, CSS, SVG, WebGL provided by Chromium\r\n* mature http/https servers and client APIs - Node\r\n* filesystem, dns, cryptography, subprocesses, OS APIs - Node\r\n* sandboxed code execution environments virtual machines - Node\r\n* tools for exposing native C++ bindings to JavaScript- Node\r\n\r\n---\r\n\r\n* __Site: [appjs.com](http://appjs.com)__\r\n* __[Google+](https://plus.google.com/u/0/112803615725562877790/posts)__\r\n* __Mailing List: [mailing list](https://groups.google.com/forum/#!forum/appjs-dev)__\r\n* __IRC: #appjs at irc.freenode.net__\r\n\r\n## 30 Second Quickstart\r\nThe below packages include everything needed to get started with AppJS, including Node.js, all dependencies, binaries, and a launcher ready to go out of the box. 1.) Extract to a folder. 2.) Double click on launch. 3.) Hello World.\r\n\r\n__AppJS 0.0.20 Distributables:__\r\n\r\n* Linux [32 bit](http://dl.bintray.com/sihorton/appjs/appjs-0.0.20-linux-ia32.tar.gz) / [64 bit](http://dl.bintray.com/sihorton/appjs/appjs-0.0.20-linux-x64.tar.gz) -> app.sh\r\n* [Mac](http://dl.bintray.com/sihorton/appjs/appjs-0.0.20-darwin-ia32.zip) -> app.sh\r\n* [Windows](http://dl.bintray.com/sihorton/appjs/appjs-0.0.20-win32-ia32.zip) -> app.exe\r\n\r\n__npm install__\r\n*OS X install is currently broken*\r\n\r\nAppJS can be now be installed via npm.\r\n\r\n    npm install appjs\r\n\r\n__AppJS requires 32bit Node on OS X__. It works on 64bit OS X but __Node must be 32bit__. We're working on solving this, but it's a limitation of Chrome itself so it's a work in progress.\r\nHelp us gain traction by [starring this chromium issue](http://code.google.com/p/chromium/issues/detail?id=18323).\r\n\r\n\r\n(Windows requires [MSVC++ 2010 runtimes](http://www.microsoft.com/en-us/download/details.aspx?id=5555))\r\n\r\n## One Minute Usage Overview\r\n```javascript\r\nvar app = module.exports = require('appjs');\r\n\r\napp.serveFilesFrom(__dirname + '/content');\r\n\r\nvar window = app.createWindow({\r\n  width  : 640,\r\n  height : 460,\r\n  icons  : __dirname + '/content/icons'\r\n});\r\n\r\nwindow.on('create', function(){\r\n  console.log(\"Window Created\");\r\n  window.frame.show();\r\n  window.frame.center();\r\n});\r\n\r\nwindow.on('ready', function(){\r\n  console.log(\"Window Ready\");\r\n  window.require = require;\r\n  window.process = process;\r\n  window.module = module;\r\n  window.addEventListener('keydown', function(e){\r\n    if (e.keyIdentifier === 'F12') {\r\n      window.frame.openDevTools();\r\n    }\r\n  });\r\n});\r\n\r\nwindow.on('close', function(){\r\n  console.log(\"Window Closed\");\r\n});\r\n```\r\n\r\n## Shared Contexts\r\n\r\n![chrome-in-node-repl](https://github.com/appjs/appjs/raw/master/examples/chrome-in-node-repl.jpg \"Chrome in Node REPL\")\r\n\r\n![DOM Event Listener in Node](https://github.com/appjs/appjs/raw/master/examples/shared-context.jpg \"DOM Event Listener in Node\")\r\n\r\n\r\n\r\n## License\r\nThe MIT License\r\n\r\nCopyright (c) 2012 The AppJS Authors\r\n\r\nSee the LICENSE file for details.\r\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 0.5302734375,
          "content": "# For 0.1.0\n\n* Fix alpha compositing on OSX\n* npm publish appjs-win\n* npm publish appjs-mac\n* npm publish appjs-linux\n* npm publish appjs\n* appjs/bin/* for appjs cli\n* `$ appjs package [someapp]`\n* Hot keys for Mac like CMD + Q, CMD + V\n* Templatize functions like Emit to handle arbitrary args\n* Figure out permissions to allow PointerLock and others\n* Basic documentation\n\n# For 0.3.0\n\n* Switch to Chromium Content API\n* Get Audio working\n* Menu API\n* Tray API\n* Full blown Packager/Installer\n* GUI for help\n* GUI for NPM\n* GUI for packager\n"
        },
        {
          "name": "appjs.png",
          "type": "blob",
          "size": 1.5380859375,
          "content": null
        },
        {
          "name": "binding.gyp",
          "type": "blob",
          "size": 12.8193359375,
          "content": "{\n  'targets': [\n    {\n      'target_name': 'publish',\n      'type':'none',\n      'dependencies': [\n        'appjs'\n      ],\n      'copies':[\n        {\n          'destination': '<(module_root_dir)/app/data/node_modules/appjs/',\n          'files': [\n            '<(module_root_dir)/README.md',\n            '<(module_root_dir)/package.json',\n            '<(module_root_dir)/lib/',\n          ]\n        },\n        {\n          'destination': '<(module_root_dir)/app/data/node_modules/appjs/examples/',\n          'files': [\n            '<(module_root_dir)/examples/hello-world/',\n          ]\n        },\n        {\n          'destination': '<(module_root_dir)/app/data/node_modules/appjs/cli/',\n          'files': [\n            '<(module_root_dir)/cli/postinstall.js',\n          ]\n        },\n        {\n          'destination': '<(module_root_dir)/app/data/node_modules/',\n          'files': [\n            '<(module_root_dir)/node_modules/mime/',\n          ]\n        },\n        {\n          'destination': '<(module_root_dir)/app/data/',\n          'files': [\n            '<(module_root_dir)/examples/hello-world/content/',\n            '<(module_root_dir)/examples/hello-world/app.js'\n          ]\n        }\n      ],\n      'conditions': [\n        ['OS==\"mac\"', {\n          'copies': [\n            {\n              'destination': '<(module_root_dir)/build/Release/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/lib.target/libcef.dylib',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-darwin/libs/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/lib.target/libcef.dylib',\n                '<(module_root_dir)/deps/cef/Release/lib.target/ffmpegsumo.so',\n              ],\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs/bindings/darwin/ia32/',\n              'files': [\n                '<(PRODUCT_DIR)/appjs.node'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-darwin/',\n              'files': [\n                '<(module_root_dir)/data/mac/package.json',\n                '<(module_root_dir)/data/mac/index.js',\n                '<(module_root_dir)/data/mac/README.md'\n              ],\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/bin/Contents/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/Resources/'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-darwin/data/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/Resources/chrome.pak',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/data/pak',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/Resources/chrome.pak',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/',\n              'files': [\n                '<(module_root_dir)/data/mac/app.sh',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/bin/',\n              'files': [\n                '<(module_root_dir)/data/mac/node-bin/node/',\n              ]\n            }\n          ]\n        }],\n        ['OS==\"linux\"', {\n          'copies': [\n            {\n              'destination': '<(module_root_dir)/build/Release/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/lib.target/libcef.so',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs/bindings/linux/<(target_arch)/',\n              'files': [\n                '<(PRODUCT_DIR)/appjs.node'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-linux-<(target_arch)/libs/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/lib.target/libcef.so',\n              ],\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-linux-<(target_arch)/',\n              'files': [\n                '<(module_root_dir)/data/linux/<(target_arch)/package.json',\n                '<(module_root_dir)/data/linux/index.js',\n                '<(module_root_dir)/data/linux/README.md',\n              ],\n            },\n            {\n              'destination': '<(module_root_dir)/app/',\n              'files': [\n                '<(module_root_dir)/data/linux/app.sh',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/bin/',\n              'files': [\n                '<(module_root_dir)/data/linux/<(target_arch)/node-bin/node',\n                '<(module_root_dir)/deps/cef/Release/lib.target/libffmpegsumo.so'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-linux-<(target_arch)/data/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/chrome.pak',\n                '<(module_root_dir)/deps/cef/Release/locales/'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/data/pak',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/chrome.pak',\n                '<(module_root_dir)/deps/cef/Release/locales/'\n              ]\n            }\n          ]\n        }],\n        ['OS==\"win\"', {\n          'copies': [\n            {\n              'destination': '<(module_root_dir)/build/Release/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/libcef.dll',\n                '<(module_root_dir)/deps/cef/Release/avcodec-54.dll',\n                '<(module_root_dir)/deps/cef/Release/avformat-54.dll',\n                '<(module_root_dir)/deps/cef/Release/avutil-51.dll',\n                '<(module_root_dir)/deps/cef/Release/d3dcompiler_43.dll',\n                '<(module_root_dir)/deps/cef/Release/d3dx9_43.dll',\n                '<(module_root_dir)/deps/cef/Release/icudt.dll',\n                '<(module_root_dir)/deps/cef/Release/libEGL.dll',\n                '<(module_root_dir)/deps/cef/Release/libGLESv2.dll'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs/bindings/win32/ia32/',\n              'files': [\n                '<(PRODUCT_DIR)/appjs.node'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-win32/libs/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/libcef.dll',\n                '<(module_root_dir)/deps/cef/Release/avcodec-54.dll',\n                '<(module_root_dir)/deps/cef/Release/avformat-54.dll',\n                '<(module_root_dir)/deps/cef/Release/avutil-51.dll',\n                '<(module_root_dir)/deps/cef/Release/d3dcompiler_43.dll',\n                '<(module_root_dir)/deps/cef/Release/d3dx9_43.dll',\n                '<(module_root_dir)/deps/cef/Release/icudt.dll',\n                '<(module_root_dir)/deps/cef/Release/libEGL.dll',\n                '<(module_root_dir)/deps/cef/Release/libGLESv2.dll',\n              ],\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-win32/',\n              'files': [\n                '<(module_root_dir)/data/win/package.json',\n                '<(module_root_dir)/data/win/index.js',\n                '<(module_root_dir)/data/win/README.md'\n              ],\n            },\n            {\n              'destination': '<(module_root_dir)/app/',\n              'files': [\n                '<(module_root_dir)/data/win/app.exe',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/bin/',\n              'files': [\n                '<(module_root_dir)/data/win/node-bin/node.exe',\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/app/data/node_modules/appjs-win32/data/',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/chrome.pak',\n                '<(module_root_dir)/deps/cef/Release/locales/'\n              ]\n            },\n            {\n              'destination': '<(module_root_dir)/data/pak',\n              'files': [\n                '<(module_root_dir)/deps/cef/Release/chrome.pak',\n                '<(module_root_dir)/deps/cef/Release/locales/'\n              ]\n            }\n          ]\n        }]\n      ]\n    },\n    {\n      'target_name': 'appjs',\n      'msvs_guid': 'A9D6DC71-C0DC-4549-AEB1-3B15B44E86A9',\n      'sources': [\n        'src/main.cpp',\n        'src/appjs.cpp',\n        'src/appjs_app.cpp',\n        'src/appjs_window.cpp',\n        'src/appjs_menu.cpp',\n        'src/appjs_status_icon.cpp',\n        'src/native_window/native_window.cpp',\n        'src/native_menu/native_menu.cpp',\n        'src/native_status_icon/native_status_icon.cpp',\n        'src/includes/cef_handler.cpp',\n        'src/includes/cef.cpp',\n        'src/includes/cef_loop.cpp',\n        'src/includes/cef_scheme_handler.cpp',\n        'src/includes/cef_sync_handler.cpp',\n        'src/includes/util.cpp',\n      ],\n      'dependencies': [\n        '<(module_root_dir)/deps/cef/dll_wrapper.gyp:libcef_dll_wrapper'\n      ],\n      'include_dirs': [\n        'src/',\n        'deps/cef/'\n      ],\n      'cflags': [\n        '-fPIC',\n        '-Wall',\n        '-std=c++0x'\n      ],\n      'conditions': [\n        ['OS==\"mac\"', {\n          'sources': [\n            'src/native_window/native_window_mac.mm',\n            'src/native_menu/native_menu_mac.mm',\n            'src/native_status_icon/native_status_icon_mac.mm'\n          ],\n          'defines': [\n            '__MAC__',\n          ],\n          'cflags': [ '-m32' ],\n          'ldflags': [ '-m32' ],\n          'xcode_settings': {\n            'OTHER_CFLAGS': ['-ObjC++'],\n            'OTHER_LDFLAGS':['-Xlinker -rpath -Xlinker @loader_path/../../../../appjs-darwin/libs/'],\n            'ARCHS': [ 'i386' ]\n          },\n          'link_settings': {\n            'libraries': [\n               '<(module_root_dir)/deps/cef/Release/lib.target/libcef.dylib',\n               '<(module_root_dir)/build/Release/cef_dll_wrapper.node',\n               '-lobjc'\n             ]\n          }\n        }],\n        ['OS==\"linux\"', {\n          'sources': [\n            'src/native_window/native_window_linux.cpp',\n            'src/native_menu/native_menu_linux.cpp',\n            'src/native_status_icon/native_status_icon_linux.cpp'\n          ],\n          'defines': [\n            '__LINUX__',\n            '<!@(uname -a | grep \"Ubuntu\" > /dev/null && echo \"__UBUNTU__\" || echo \"__NOTUBUNTU__\")'\n          ],\n          'cflags': [\n            '<!@(pkg-config --cflags gtk+-2.0 gthread-2.0)',\n          ],\n          'link_settings': {\n              'ldflags': [\n                '<!@(pkg-config --libs-only-L --libs-only-other gtk+-2.0 gthread-2.0)',\n                '-Wl,-R,\\'$$ORIGIN/../../../../appjs-linux-<(target_arch)/libs/\\'',\n              ],\n              'libraries': [\n                '<!@(pkg-config --libs-only-l gtk+-2.0 gthread-2.0)',\n                '<(module_root_dir)/deps/cef/Release/lib.target/libcef.so',\n                '<(module_root_dir)/build/Release/obj.target/deps/cef/cef_dll_wrapper.node'\n              ],\n          }\n        }],\n        ['OS==\"win\"', {\n          'msvs_settings': {\n            'VCCLCompilerTool': {\n              'WholeProgramOptimization': 'true', # /GL, whole program optimization, needed for LTCG\n              'OmitFramePointers': 'true',\n              'EnableFunctionLevelLinking': 'true',\n              'EnableIntrinsicFunctions': 'true',\n              'RuntimeTypeInfo': 'false',\n              'ExceptionHandling': '1',\n\t\t\t  'AdditionalOptions': [ '/EHsc' ]\n            },\n            'VCLibrarianTool': {\n              'AdditionalOptions': [\n                '/LTCG', # link time code generation\n              ],\n            },\n            'VCLinkerTool': {\n              'LinkTimeCodeGeneration': 1, # link-time code generation\n              'OptimizeReferences': 2, # /OPT:REF\n              'EnableCOMDATFolding': 2, # /OPT:ICF\n              'LinkIncremental': 1, # disable incremental linking\n            },\n          },\n          'sources': [\n            'src/includes/util_win.cpp',\n            'src/native_window/native_window_win.cpp',\n            'src/native_menu/native_menu_win.cpp',\n            'src/native_status_icon/native_status_icon_win.cpp'\n          ],\n          'defines': [\n            '__WIN__',\n            '_WINSOCKAPI_',\n            '_UNICODE',\n            'UNICODE'\n          ],\n          'link_settings': {\n            'libraries': [\n              'GdiPlus.lib',\n              'Shlwapi.lib',\n              '<(module_root_dir)/deps/cef/lib/Release/libcef.lib',\n              '<(module_root_dir)/build/Release/lib/libcef_dll_wrapper.lib'\n            ],\n          },\n        }]\n      ]\n    }\n  ]\n}\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0625,
          "content": "{\n  \"name\": \"appjs\",\n  \"description\": \"AppJS is a SDK on top of nodejs to develop desktop applications using HTML/CSS/JS\",\n  \"version\": \"0.0.20\",\n  \"keywords\": [ \"cef\", \"webkit\", \"browser\", \"canvas\", \"html5\", \"desktop\", \"native\", \"gtk\", \"ui\", \"sdk\" ],\n  \"homepage\": \"http://appjs.org\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/appjs/appjs\"\n  },\n  \"author\": {\n    \"name\": \"Morteza Milani\",\n    \"email\": \"mrtz.milani@gmail.com\"\n  },\n  \"contributors\": [{\n    \"name\": \"Ali Farhadi\",\n    \"email\": \"a.farhadi@gmail.com\"\n  }, {\n    \"name\": \"Brandon Benvie\",\n    \"email\": \"brandon@bbenvie.com\"\n  }],\n  \"directories\": {\n    \"doc\": \"./doc\",\n    \"lib\": \"./lib\",\n    \"bin\": \"./bin\",\n    \"test\": \"./tests\"\n  },\n  \"main\": \"./lib/index.js\",\n  \"engines\": {\n    \"node\": \">=0.8\"\n  },\n  \"dependencies\": {\n    \"mime\": \">=1.2.5\"\n  },\n  \"devDependencies\": {\n    \"tar\": \">=0.1.0\",\n    \"request\": \">=2.0.0\"\n  },\n  \"scripts\": {\n    \"postinstall\": \"node cli/postinstall.js\"\n  },\n  \"licenses\": [{\n    \"type\": \"MIT\",\n    \"url\": \"https://github.com/milani/appjs/blob/master/LICENSE\"\n  }]\n}\n"
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}