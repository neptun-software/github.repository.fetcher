{
  "metadata": {
    "timestamp": 1736565319258,
    "page": 139,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Vhonowslend/StreamFX-Public",
      "stars": 3974,
      "defaultBranch": "root",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.9716796875,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2018-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# AUTOGENERATED COPYRIGHT HEADER END\n\n# Basic Formatting\nTabWidth: 4\nUseTab: ForContinuationAndIndentation\nColumnLimit: 65535\n#- 0 does not respect the original line breaks!\n\n# Language\nLanguage: Cpp\nStandard: c++17\n\n# Indentation\nAccessModifierOffset: 0\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nIndentCaseLabels: false\n#IndentPPDirectives: true\nIndentWidth: 4\nIndentWrappedFunctionNames: true\nNamespaceIndentation: All\n\n# Includes\n#IncludeBlocks: Regroup\nIncludeCategories:\n  - Regex: '^\"warning-disable.hpp\"$'\n    Priority: 50\n  - Regex: '^(<|\")(config.hpp|common.hpp|ui-common.hpp|strings.hpp|version.hpp|obs.h)(\"|>)'\n    Priority: 100\n  - Regex: '^<obs-'\n    Priority: 150\n  - Regex: '^<'\n    Priority: 200\n  - Regex: '^<Q'\n    Priority: 250\n  - Regex: '^\"'\n    Priority: 300\n  - Regex: '.moc\"$'\n    Priority: 300\n  - Regex: '^\"warning-enable.hpp\"$'\n    Priority: 500\nSortIncludes: true\n\n# Alignment\nAlignAfterOpenBracket: true\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: true\nAlignEscapedNewlines: Left\nAlignOperands: true\nAlignTrailingComments: false\nDerivePointerAlignment: false\nPointerAlignment: Left\n\n# Wrapping and Breaking\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n#  AfterExternBlock: false\n  AfterFunction: true\n  AfterNamespace: false\n  AfterStruct: false\n  AfterUnion: false\n  BeforeCatch: false\n  BeforeElse: false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeColon\n#BreakInheritanceList: BeforeColon\nBreakStringLiterals: true\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nCpp11BracedListStyle: true\n\n# Spaces\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\n#SpaceBeforeCpp11BracedList: false\n#SpaceBeforeCtorInitializerColon: true\n#SpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\n#SpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\n\n# Other\nCommentPragmas: '^(!FIXME!|!TODO!|ToDo:)'\nCompactNamespaces: false\nDisableFormat: false\nFixNamespaceComments: true\n#ForEachMacros: ''\nKeepEmptyLinesAtTheStartOfBlocks: false\nReflowComments: false\nSortUsingDeclarations: true\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.740234375,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2020-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# AUTOGENERATED COPYRIGHT HEADER END\n\nChecks:          '-*,clang-diagnostic-*,clang-analyzer-*,readability-*,performance-*,portability-*,-portability-simd-intrinsics'\nWarningsAsErrors: false\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\nFormatStyle:     file\nUser:            Xaymar\nCheckOptions:\n  - key:             cert-dcl16-c.NewSuffixes\n    value:           'L;LL;LU;LLU'\n  - key:             cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField\n    value:           '0'\n  - key:             cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors\n    value:           '1'\n  - key:             cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value:           '1'\n  - key:             google-readability-braces-around-statements.ShortStatementLines\n    value:           '1'\n  - key:             google-readability-function-size.StatementThreshold\n    value:           '800'\n  - key:             google-readability-namespace-comments.ShortNamespaceLines\n    value:           '10'\n  - key:             google-readability-namespace-comments.SpacesBeforeComments\n    value:           '2'\n  - key:             modernize-loop-convert.MaxCopySize\n    value:           '16'\n  - key:             modernize-loop-convert.MinConfidence\n    value:           reasonable\n  - key:             modernize-loop-convert.NamingStyle\n    value:           CamelCase\n  - key:             modernize-pass-by-value.IncludeStyle\n    value:           llvm\n  - key:             modernize-replace-auto-ptr.IncludeStyle\n    value:           llvm\n  - key:             modernize-use-nullptr.NullMacros\n    value:           'NULL'\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.400390625,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2017-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# AUTOGENERATED COPYRIGHT HEADER END\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file.\n[*]\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\nindent_style = tab\nindent_size = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.23046875,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2017-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# AUTOGENERATED COPYRIGHT HEADER END\n\n# CMAKE\n/build\n/build32\n/build64\n/deps\n/deps32\n/deps64\n\n# Visual Studio\n/.vs\n/#Build\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.12109375,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2020-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# AUTOGENERATED COPYRIGHT HEADER END\n\n[submodule \"cmake/clang\"]\n\tpath = cmake/clang\n\turl = https://github.com/Xaymar/cmake-clang.git\n[submodule \"cmake/version\"]\n\tpath = cmake/version\n\turl = https://github.com/Xaymar/cmake-version.git\n[submodule \"third-party/nlohmann-json\"]\n\tpath = third-party/nlohmann-json\n\turl = https://github.com/nlohmann/json.git\n[submodule \"third-party/msvc-redist-helper\"]\n\tpath = third-party/msvc-redist-helper\n\turl = https://github.com/Xaymar/msvc-redist-helper.git\n[submodule \"third-party/nvidia-maxine-ar-sdk\"]\n\tpath = third-party/nvidia-maxine-ar-sdk\n\turl = https://github.com/NVIDIA/MAXINE-AR-SDK.git\n[submodule \"third-party/nvidia-maxine-vfx-sdk\"]\n\tpath = third-party/nvidia-maxine-vfx-sdk\n\turl = https://github.com/NVIDIA/MAXINE-VFX-SDK.git\n[submodule \"third-party/obs-studio\"]\n\tpath = third-party/obs-studio\n\turl = https://github.com/obsproject/obs-studio.git\n[submodule \"third-party/nvidia-maxine-afx-sdk\"]\n\tpath = third-party/nvidia-maxine-afx-sdk\n\turl = https://github.com/NVIDIA/MAXINE-AFX-SDK.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.5859375,
          "content": "Michael Fabian 'Xaymar' Dirks <info@xaymar.com> <info@xaymar.com>\nMichael Fabian 'Xaymar' Dirks <info@xaymar.com> <github@xaymar.com>\nVainock <39059951+Vainock@users.noreply.github.com> <contact.vainock@gmail.com>\nCharles Fettinger <charles@oncorporation.com> <charles@onacloud.org>\nCharles Fettinger <charles@oncorporation.com> <charles@Oncorporation.com>\nRadegast Stravinsky <radegast.ffxiv@gmail.com> <radegast.ffxiv@gmail.com>\nRadegast Stravinsky <radegast.ffxiv@gmail.com> <58457062+Radegast-FFXIV@users.noreply.github.com>\nCarsten Braun <info@braun-cloud.de> <info@braun-software-solutions.de>\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 17.2578125,
          "content": "# StreamFX Contributors & Supporters\n\n## Contributors\n\n### Code, Media\nThanks go to the following people, who have either wrangled with code or wrangled with image editors while saving often in the hopes of not losing any changes:\n\n* [Brandon Edens](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Carlos Baraza](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Cat Stevens](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Charles Fettinger](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Christopher P Yarger](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [coolsoft.rf](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Daniel Hodgson](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Daniel Molkentin](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [kilin](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Michael Fabian 'Xaymar' Dirks](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Radegast-FFXIV](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Robert Moggach](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [tytan652](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [Vainock](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [William Pettersson](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n* [wwj402](https://github.com/Xaymar/obs-StreamFX/graphs/contributors)\n\n### Translators\n[StreamFX relies on crowd-sourced translations to be available in your language.](https://github.com/Xaymar/obs-StreamFX/issues/36) Much thanks go out to all volunteer translators who have taken some time to submit translations on Crowdin.\n\n* [A Ismaili](https://crowdin.com/profile/achimismaili)\n* [Adolfo Jayme](https://crowdin.com/profile/fitoschido)\n* [Ahmed](https://crowdin.com/profile/FiberAhmed)\n* [Alex E. D. B.](https://crowdin.com/profile/alexedb)\n* [Alexander Haffer](https://crowdin.com/profile/AlexanderHaffer)\n* [AmirGhorbani_ir](https://crowdin.com/profile/AmirGhorbani_ir)\n* [Arcan Yiğit Taşkan](https://crowdin.com/profile/karamizahim)\n* [Artem](https://crowdin.com/profile/Artem4ik)\n* [Arthur](https://crowdin.com/profile/Skor_X)\n* [Aurora Robb Kristiansen](https://crowdin.com/profile/Ridge)\n* [Billy_la_menace](https://crowdin.com/profile/Symor)\n* [Boris Grigorov](https://crowdin.com/profile/boris.grigorov26)\n* [bruh](https://crowdin.com/profile/noobumpls)\n* [Bruno Pinho](https://crowdin.com/profile/BPinho)\n* [Byunghun An](https://crowdin.com/profile/kloydhere)\n* [Cerbion](https://crowdin.com/profile/Cerbion)\n* [Chris BDS](https://crowdin.com/profile/HakuKaze)\n* [Claudio Alvez](https://crowdin.com/profile/claudiogodofwar37)\n* [Claudio Nunes](https://crowdin.com/profile/_claudionunes_)\n* [code.sport](https://crowdin.com/profile/code.sport)\n* [ColdusT](https://crowdin.com/profile/ColdusT)\n* [CyberspeedCz](https://crowdin.com/profile/CyberspeedCz)\n* [Damian Soler](https://crowdin.com/profile/Under_RL)\n* [Dan Vasiliu](https://crowdin.com/profile/dvasiliu)\n* [Dániel P.](https://crowdin.com/profile/Daniii_)\n* [Danil Sarvensky](https://crowdin.com/profile/sarvensky)\n* [David Zheng](https://crowdin.com/profile/msdz)\n* [Daya Adianto](https://crowdin.com/profile/addianto)\n* [Deadbringer](https://crowdin.com/profile/Deadbringer)\n* [DmJacky](https://crowdin.com/profile/DmJacky)\n* [Dmytro](https://crowdin.com/profile/LinkinWires)\n* [Droidman](https://crowdin.com/profile/Droidman)\n* [EDNVKjldr8vyu9](https://crowdin.com/profile/EDNVKjldr8vyu9)\n* [Ege Esin](https://crowdin.com/profile/ege_e)\n* [Emanuel Messias, R.d.S.](https://crowdin.com/profile/MessiasOF)\n* [EMRE ÇELİK](https://crowdin.com/profile/emre0447)\n* [Enrique Castillo](https://crowdin.com/profile/ecastillo)\n* [erichardouin](https://crowdin.com/profile/erichardouin)\n* [Eryk Pazoła](https://crowdin.com/profile/erykpaz2004)\n* [eskori](https://crowdin.com/profile/eskori)\n* [exeldro](https://crowdin.com/profile/exeldro)\n* [Fire KM127PL](https://crowdin.com/profile/KM127PL)\n* [Francesco Maria Poerio](https://crowdin.com/profile/fracchiomon)\n* [Frederico Maia](https://crowdin.com/profile/omaster)\n* [Gabriele Arena](https://crowdin.com/profile/teamexpert2013)\n* [Gol D. Ace](https://crowdin.com/profile/goldace)\n* [Guillaume Turchini](https://crowdin.com/profile/orion78fr)\n* [Hackebein](https://crowdin.com/profile/Hackebein)\n* [Henry Agudelo](https://crowdin.com/profile/hdagudelo)\n* [HiroOnGitHub](https://crowdin.com/profile/HiroOnGithub)\n* [Holger Sinn](https://crowdin.com/profile/Holger-Sinn)\n* [IT_Translator](https://crowdin.com/profile/IT_Translator)\n* [itsolutek](https://crowdin.com/profile/itsolutek)\n* [Itukii](https://crowdin.com/profile/Itukii)\n* [Ivo Sestren Junior](https://crowdin.com/profile/IvoSestren)\n* [Janis Majors](https://crowdin.com/profile/bobola)\n* [Jeffrey Chapuis](https://crowdin.com/profile/ashyni1987)\n* [Jelmer](https://crowdin.com/profile/Luxizzle)\n* [Jens Fischer](https://crowdin.com/profile/JensFZ)\n* [Jessy HACHET](https://crowdin.com/profile/jessy.hachet)\n* [jh KIm](https://crowdin.com/profile/kkhmn1)\n* [Job Diógenes Ribeiro Borges](https://crowdin.com/profile/jobdiogenes)\n* [Jonas Van den Abbeele](https://crowdin.com/profile/jonasvda2006)\n* [Kevin Kandlbinder](https://crowdin.com/profile/kevink)\n* [Kim Bech](https://crowdin.com/profile/kimbech)\n* [kkk12955](https://crowdin.com/profile/kkk12955)\n* [Kokosnuss.exe](https://crowdin.com/profile/KokosnussDEV)\n* [Krit789](https://crowdin.com/profile/Krit789)\n* [Kurozumi](https://crowdin.com/profile/Kurozumi)\n* [LANCERRR](https://crowdin.com/profile/dongxujiayou88)\n* [LeNinjaHD](https://crowdin.com/profile/LeNinjaHD)\n* [Léo Roubaud](https://crowdin.com/profile/hydargos)\n* [Leonardo Fries](https://crowdin.com/profile/LeoNerdinho)\n* [Lifeely](https://crowdin.com/profile/Lifeely)\n* [Loïc](https://crowdin.com/profile/Ozachi)\n* [Lucas Fernandez](https://crowdin.com/profile/kasey-fr)\n* [LucN31](https://crowdin.com/profile/LucN31)\n* [lukazivanovic](https://crowdin.com/profile/lukazivanovic)\n* [Maciej4535](https://crowdin.com/profile/Maciej4535)\n* [Marcel Kuhla](https://crowdin.com/profile/CandyPanda)\n* [Marco Túlio Pires](https://crowdin.com/profile/mtrpires)\n* [Martin Hybner](https://crowdin.com/profile/hybner)\n* [Mateusz Zych](https://crowdin.com/profile/soruse)\n* [MIBAND](https://crowdin.com/profile/LEMIBANDDEXARI)\n* [Michael Fabian Dirks](https://crowdin.com/profile/Xaymar)\n* [Mikhail](https://crowdin.com/profile/Migelius74)\n* [MkHere-YT](https://crowdin.com/profile/MkHere)\n* [Mnr. Volkstaat](https://crowdin.com/profile/malapradex)\n* [mochaaP](https://crowdin.com/profile/mochaaP)\n* [Monsteer](https://crowdin.com/profile/Monsteer)\n* [Mr Gohst](https://crowdin.com/profile/Gohst)\n* [mudse](https://crowdin.com/profile/mudse)\n* [multi.flexi](https://crowdin.com/profile/multi.flexi)\n* [mwessen](https://crowdin.com/profile/sh3ph3r6)\n* [Nanito Morillas](https://crowdin.com/profile/hellnano)\n* [Nawin Somprasong](https://crowdin.com/profile/thaipirch98)\n* [Nikola Perović](https://crowdin.com/profile/Fooftilly)\n* [Nobre HD](https://crowdin.com/profile/NobreHD)\n* [Nooody FR](https://crowdin.com/profile/nooodyfr)\n* [NOYB](https://crowdin.com/profile/NOYB)\n* [Orhan Elçi](https://crowdin.com/profile/orhan.elci2003)\n* [Origami](https://crowdin.com/profile/Origami)\n* [ozaki](https://crowdin.com/profile/OzakIOne)\n* [Peter Grindem](https://crowdin.com/profile/1pete1)\n* [petro770](https://crowdin.com/profile/petro770)\n* [Proryanator](https://crowdin.com/profile/Proryanator)\n* [Renaud G.](https://crowdin.com/profile/obiwankennedy)\n* [RezQ](https://crowdin.com/profile/RezQ)\n* [Richie Bendall](https://crowdin.com/profile/richiebendall)\n* [Robin Tetour](https://crowdin.com/profile/RobTheRealLifeAnimoo)\n* [Romeo Bunić](https://crowdin.com/profile/Romz)\n* [rufus20145](https://crowdin.com/profile/rufus20145)\n* [Sade](https://crowdin.com/profile/Sade)\n* [Sandschi](https://crowdin.com/profile/sandschi)\n* [sasagar](https://crowdin.com/profile/sasagar)\n* [sasha2002](https://crowdin.com/profile/sasha2002)\n* [saygo1125](https://crowdin.com/profile/saygo1125)\n* [ScottInTokyo](https://crowdin.com/profile/ScottInTokyo)\n* [SDUX1s44c](https://crowdin.com/profile/SDUX1s44c)\n* [Serhiy Dmytryshyn](https://crowdin.com/profile/dies)\n* [shugen002](https://crowdin.com/profile/shugen002)\n* [Sjoer van der Ploeg](https://crowdin.com/profile/sfjuocekr)\n* [SKYQWER](https://crowdin.com/profile/mine17288)\n* [SMG music display](https://crowdin.com/profile/SMGMusicDisplay)\n* [spring jungle](https://crowdin.com/profile/springjungle)\n* [StanislavPro](https://crowdin.com/profile/StanislavPro)\n* [StarFang208](https://crowdin.com/profile/StarFang208)\n* [Store](https://crowdin.com/profile/HelaBasa)\n* [Syskoh](https://crowdin.com/profile/Syskoh)\n* [Szymon Szewc](https://crowdin.com/profile/szymonszewcjr)\n* [ThePooN](https://crowdin.com/profile/ThePooN)\n* [Thom Knepper](https://crowdin.com/profile/MrKnepp)\n* [Tim Cordes](https://crowdin.com/profile/t1mc0rd35)\n* [Toine Enzo](https://crowdin.com/profile/toineenzo)\n* [TonyWin Somprasong](https://crowdin.com/profile/mga1627)\n* [TorniX0](https://crowdin.com/profile/TorniX0)\n* [TOWUK](https://crowdin.com/profile/towuk)\n* [tpo0508](https://crowdin.com/profile/tpo0508)\n* [Tuna](https://crowdin.com/profile/zentoryny)\n* [tytan652](https://crowdin.com/profile/tytan652)\n* [Utku Demir](https://crowdin.com/profile/Scheback)\n* [Vane Brain](https://crowdin.com/profile/vanebrain3)\n* [Viginox](https://crowdin.com/profile/Viginox)\n* [WDK1337](https://crowdin.com/profile/WDK1337)\n* [Wesley Pyburn (TechNobo)](https://crowdin.com/profile/TcNobo)\n* [WhiteyChannel](https://crowdin.com/profile/zvd.pro)\n* [WoWnik](https://crowdin.com/profile/wownik98)\n* [wwj402_github](https://crowdin.com/profile/wwj402_github)\n* [xaymarsdaddy](https://crowdin.com/profile/xaymarsdaddy)\n* [Yoinks DBD](https://crowdin.com/profile/izzyfazt)\n* [Yumis](https://crowdin.com/profile/yumis84)\n* [Yurlyn](https://crowdin.com/profile/Yurlyn)\n* [yuvuwj](https://crowdin.com/profile/yuvuwj)\n* [Zero Team](https://crowdin.com/profile/ZERO_TEAM)\n* [ZHANGEN](https://crowdin.com/profile/ZHANGEN)\n* [Zoop](https://crowdin.com/profile/Zoop)\n* [Вадим Казанцев](https://crowdin.com/profile/Rutboy)\n* [Вадим Якшин](https://crowdin.com/profile/tayler2013)\n* [Денис Полозихин](https://crowdin.com/profile/denispolozihin)\n* [Евгений Шестяков](https://crowdin.com/profile/anfogor)\n* [시공의 폭풍](https://crowdin.com/profile/parkjh030746)\n* [十六夜楓](https://crowdin.com/profile/fy1208557958)\n\n## Supporters\nThe StreamFX project relies on generous donations from you through [Patreon](https://patreon.com/xaymar), [GitHub](https://github.com/sponsors/xaymar) or [PayPal](https://paypal.me/xaymar). Huge thanks go out to the following people for supporting StreamFX:\n\n### GitHub Sponsors\n* [blackmoon1910](https://github.com/blackmoon1910)\n* [DJNOCTUS](https://github.com/DJNOCTUS)\n* [FateOfNines](https://github.com/FateOfNines)\n* [GranDroidTonight](https://github.com/GranDroidTonight)\n* [Harmansingh1397](https://github.com/Harmansingh1397)\n* [Hugo Denizart](https://github.com/ThePooN)\n* [Joe Kluch](https://github.com/jkluch)\n* [Joefis-x20s](https://github.com/Joefis-x20s)\n* [jTRN2x0](https://github.com/jTRN2x0)\n* [kevinfrogernl](https://github.com/kevinfrogernl)\n* [LagaV](https://github.com/LagaV)\n* [M*C*O](https://github.com/MCOfficer)\n* [Maxwell Bloch](https://github.com/maxwellb)\n* [mbWebsolution](https://github.com/mbWebsolution)\n* [MEKKER](https://github.com/MEKKERMB)\n* [Noora](https://github.com/noorus)\n* [oshiteku](https://github.com/oshiteku)\n* [pirahtays](https://github.com/pirahtays)\n* [Stealthlips](https://github.com/Stealthlips)\n* [TheB1gG](https://github.com/TheB1gG)\n* [Tim](https://github.com/elricco)\n* [Travis Crawford](https://github.com/traviscrawford85)\n* [VensireStudios](https://github.com/VensireStudios)\n* [wild-wild-fibsh](https://github.com/wild-wild-fibsh)\n\n### Patreon Patrons\n* [Aaron ](https://www.patreon.com/user/creators?u=22565926)\n* [Abs](https://www.patreon.com/user/creators?u=63196404)\n* [Adam Dangerbeard](https://www.patreon.com/user/creators?u=5048919)\n* [Adel Toay](https://www.patreon.com/user/creators?u=58184164)\n* [Alexandre Cyr](https://www.patreon.com/user/creators?u=8576328)\n* [And We're Live! PreZZure](https://www.patreon.com/user/creators?u=49966803)\n* [asdkola](https://www.patreon.com/user/creators?u=49505113)\n* [Bastian Koyro](https://www.patreon.com/user/creators?u=5086308)\n* [Ben Vosburgh](https://www.patreon.com/user/creators?u=4062691)\n* [Benjamin Hoffmeister](https://www.patreon.com/user/creators?u=5087057)\n* [Bjarke Kongstad](https://www.patreon.com/user/creators?u=10147732)\n* [blyt](https://www.patreon.com/user/creators?u=47035760)\n* [Brownie ](https://www.patreon.com/user/creators?u=29687375)\n* [Brutus Shearer](https://www.patreon.com/user/creators?u=53110694)\n* [Chris Lynch](https://www.patreon.com/user/creators?u=3921522)\n* [Cory Goodwin](https://www.patreon.com/user/creators?u=58410833)\n* [Craft Computing](https://www.patreon.com/user/creators?u=7422105)\n* [Ct84FUASk5bFstq](https://www.patreon.com/user/creators?u=41874925)\n* [D_Girl ](https://www.patreon.com/user/creators?u=3625413)\n* [David Bixler](https://www.patreon.com/user/creators?u=5429239)\n* [David Do](https://www.patreon.com/user/creators?u=32255073)\n* [Dean Barclay](https://www.patreon.com/user/creators?u=9449350)\n* [DrunKev ](https://www.patreon.com/user/creators?u=26063390)\n* [Dustin Deatherage](https://www.patreon.com/user/creators?u=63380532)\n* [Ebony Zinnack](https://www.patreon.com/user/creators?u=31612990)\n* [EmeraIdCola ](https://www.patreon.com/user/creators?u=27503685)\n* [Eric Dieter Hesselbach](https://www.patreon.com/user/creators?u=35660482)\n* [Formica](https://www.patreon.com/user/creators?u=2442057)\n* [Gary Griffith](https://www.patreon.com/user/creators?u=49564527)\n* [Gimli Son Of Gloin](https://www.patreon.com/user/creators?u=34065035)\n* [Gronkh ](https://www.patreon.com/user/creators?u=2617905)\n* [Hana Pestle](https://www.patreon.com/user/creators?u=33587406)\n* [Héctor Rivera](https://www.patreon.com/user/creators?u=20884936)\n* [hikaruXwiiwalker](https://www.patreon.com/user/creators?u=152960)\n* [How to Drink](https://www.patreon.com/user/creators?u=6391455)\n* [iamresist ](https://www.patreon.com/user/creators?u=19164596)\n* [JeffCraig ](https://www.patreon.com/user/creators?u=3214093)\n* [Jerod Bennett](https://www.patreon.com/user/creators?u=471437)\n* [Joe Dougherty](https://www.patreon.com/user/creators?u=929557)\n* [Jon Petermann](https://www.patreon.com/user/creators?u=63931570)\n* [Jonathan Gilligan](https://www.patreon.com/user/creators?u=16212519)\n* [Jonathan Perkins](https://www.patreon.com/user/creators?u=35345012)\n* [Joseph Estes](https://www.patreon.com/user/creators?u=31240177)\n* [Juncker ](https://www.patreon.com/user/creators?u=25351345)\n* [Justin Ruiz](https://www.patreon.com/user/creators?u=61134357)\n* [Kei Foster](https://www.patreon.com/user/creators?u=3252261)\n* [Kim Bech](https://www.patreon.com/user/creators?u=4473266)\n* [KrisCheetah ](https://www.patreon.com/user/creators?u=5208869)\n* [Lash LaRue](https://www.patreon.com/user/creators?u=27497287)\n* [Manus O'Donnell](https://www.patreon.com/user/creators?u=10969884)\n* [Martin Wimpress](https://www.patreon.com/user/creators?u=2780761)\n* [Matt Calabrese](https://www.patreon.com/user/creators?u=2410405)\n* [Michael Haßfurther](https://www.patreon.com/user/creators?u=54198386)\n* [Mikaykaybooboo](https://www.patreon.com/user/creators?u=55606570)\n* [Mike King](https://www.patreon.com/user/creators?u=2824850)\n* [MrLiveProducer](https://www.patreon.com/user/creators?u=283535)\n* [MyNameIsJeff ](https://www.patreon.com/user/creators?u=26176738)\n* [Neil Gaddie](https://www.patreon.com/user/creators?u=53600538)\n* [Nik Wright](https://www.patreon.com/user/creators?u=64748110)\n* [Noah](https://www.patreon.com/user/creators?u=28561459)\n* [Nordern ](https://www.patreon.com/user/creators?u=6970809)\n* [norlife ](https://www.patreon.com/user/creators?u=11953551)\n* [Owen Quinlan](https://www.patreon.com/user/creators?u=25383903)\n* [Pascal Jean](https://www.patreon.com/user/creators?u=59781622)\n* [Peter Donaghy](https://www.patreon.com/user/creators?u=50612254)\n* [Peter van Kalleveen](https://www.patreon.com/user/creators?u=59122352)\n* [ragesaq](https://www.patreon.com/user/creators?u=34519727)\n* [Raiden](https://www.patreon.com/user/creators?u=9645671)\n* [reelmccoy ](https://www.patreon.com/user/creators?u=2454633)\n* [Roman Jacob Concordia](https://www.patreon.com/user/creators?u=58076170)\n* [Ryan Hopkins](https://www.patreon.com/user/creators?u=3819264)\n* [SadeN.moe ](https://www.patreon.com/user/creators?u=8930949)\n* [Sean ](https://www.patreon.com/user/creators?u=2382106)\n* [Sean Willeboordse](https://www.patreon.com/user/creators?u=9419328)\n* [Shadowy](https://www.patreon.com/user/creators?u=23349012)\n* [sid sawyer](https://www.patreon.com/user/creators?u=34103367)\n* [SigmaH20 .](https://www.patreon.com/user/creators?u=34295895)\n* [Simon Vacker](https://www.patreon.com/user/creators?u=516915)\n* [StealthCT ](https://www.patreon.com/user/creators?u=5055600)\n* [trus0und](https://www.patreon.com/user/creators?u=43845831)\n* [tsukasa](https://www.patreon.com/user/creators?u=23383875)\n* [UpDownLeftDie ](https://www.patreon.com/user/creators?u=13992640)\n* [zachary harrisson](https://www.patreon.com/user/creators?u=61387322)\n* [Zep Brattesani](https://www.patreon.com/user/creators?u=915823)\n\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 8.8701171875,
          "content": "# Building\nThis document intends to guide you through the process of building StreamFX. It requires understanding of the tools used, and may require you to learn tools yourself before you can advance further in the guide. It is intended to be used by developers and contributors.\n\n## Building Bundled\n<details open><summary>The main method to build StreamFX is to first set up an OBS Studio copy and then integrate the StreamFX repository into it.</summary>\n\n1. [Uninstall](Uninstallation) any currently installed versions of StreamFX to prevent conflicts.\n2. Follow the [OBS Studio build guide](https://obsproject.com/wiki/install-instructions) for automated building on your platform of choice.\n    - **MacOS:** You will need to use the XCode generator to build StreamFX as the Ninja generator does not support the flags StreamFX requires.\n3. Integrate StreamFX into the OBS Studio build flow:\n    1. Navigate to `<obs studio source>/UI/frontend-plugins`\n    2. Open a `git` enabled shell (git-bash on windows).\n    3. Run `git submodule add 'https://github.com/Xaymar/obs-StreamFX.git' streamfx`.\n    4. Run `git submodule update --init --recursive`.\n    5. Append the line `add_subdirectory(streamfx)` to the `CMakeLists.txt` file in the same directory.\n4. Run the same steps from the build guide in step 2 again.\n5. Done. StreamFX is now part of the build.\n\n</details>\n\n## Building CI-Style\n<details><summary>This method is designed for continuous integration and releases, and requires significant knowledge of CMake, OBS, and various other tools. Additionally it is not guaranteed to work on every machine, as it is only designed for use in continuous integration and nowhere else. It may even stop being maintained entirely with no warning whatsoever. You are entirely on your own when you choose this method.</summary>\n\n#### Install Prerequisites / Dependencies\n- [Git](https://git-scm.com/)\n    - **Debian / Ubuntu:** `sudo apt install git`\n- [CMake](https://cmake.org/) 3.20 (or newer)\n    - **Debian / Ubuntu:** `sudo apt install cmake`\n- A compatible Compiler:\n    - **Windows**  \n      [Visual Studio](https://visualstudio.microsoft.com/vs/) 2019 (or newer)\n    - **MacOS**  \n      Xcode 11.x (or newer) for x86_64  \n      Xcode 12.x (or newer) for arm64\n    - **Debian / Ubuntu**\n        - Essential Build Tools:  \n          `sudo apt install build-essential pkg-config checkinstall make ninja-build` \n        - One of:\n            - GCC 11 (or newer)  \n              `sudo apt install gcc-11 g++-11`\n            - [LLVM](https://releases.llvm.org/) Clang 14 (or newer)  \n              `sudo bash -c \"$(wget -O - https://apt.llvm.org/llvm.sh)\"`\n        - One of:\n            - ld or gold  \n              `sudo apt install binutils`\n            - [LLVM](https://releases.llvm.org/) lld  \n              `sudo bash -c \"$(wget -O - https://apt.llvm.org/llvm.sh)\"`\n            - [mold](https://github.com/rui314/mold)  \n              `sudo apt install mold`\n- [Qt](https://www.qt.io/) 6:\n    - **Windows**  \n      A Node.JS based tool is provided toread and parse the `/third-party/obs-studio/buildspec.json` file. See `/.github/workflows/main.yml` on usage and output parsing.\n    - **MacOS**  \n      A Node.JS based tool is provided toread and parse the `/third-party/obs-studio/buildspec.json` file. See `/.github/workflows/main.yml` on usage and output parsing.\n    - **Debian / Ubuntu:**  \n      `sudo apt install qt6-base-dev qt6-base-private-dev libqt6svg6-dev`\n- [CURL](https://curl.se/):\n    - **Windows**  \n      A Node.JS based tool is provided toread and parse the `/third-party/obs-studio/buildspec.json` file. See `/.github/workflows/main.yml` on usage and output parsing.\n    - **MacOS**  \n      A Node.JS based tool is provided toread and parse the `/third-party/obs-studio/buildspec.json` file. See `/.github/workflows/main.yml` on usage and output parsing.\n    - **Debian / Ubuntu:**\n      `sudo apt install libcurl4-openssl-dev`\n- [FFmpeg](https://ffmpeg.org/) (Optional, for FFmpeg component only):\n    - **Windows**  \n      A Node.JS based tool is provided toread and parse the `/third-party/obs-studio/buildspec.json` file. See `/.github/workflows/main.yml` on usage and output parsing.\n    - **MacOS**  \n      A Node.JS based tool is provided toread and parse the `/third-party/obs-studio/buildspec.json` file. See `/.github/workflows/main.yml` on usage and output parsing.\n    - **Debian / Ubuntu**  \n      `sudo apt install libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libswresample-dev libswscale-dev`\n- [LLVM](https://releases.llvm.org/) (Optional, for clang-format and clang-tidy integration only):\n    - **Debian / Ubuntu**  \n      `sudo bash -c \"$(wget -O - https://apt.llvm.org/llvm.sh)\" all`\n- [InnoSetup](https://jrsoftware.org/isinfo.php) (Optional, for **Windows** installer only)\n\n### Cloning the Project\nUsing your preferred tool of choice for git, clone the repository including all submodules into a directory. If you use git directly, then you can clone the entire project with `git clone --recursive https://github.com/Xaymar/obs-StreamFX.git streamfx`.\n\n### Configuring with CMake\nThere are two ways to handle this step, with the GUI variant of CMake and with the command line version of CMake. This guide will focus on the GUI variant, but all the steps below can be done with the command line version as well.\n\n1. Launch CMake-GUI and wait for it to open.\n2. Click the button named `Browse Build` and point it at an empty folder. For example, create a folder in the project called `build` and select that folder.\n3. Click the button named `Browse Source` and point it at the project itself.\n4. Click the button named `Configure`, select your preferred Generator (the default is usually fine), and wait for it to complete. This will most likely result in an error which is expected.\n5. Adjust the variables in the variable list as necessary. Take a look at [the documentation](#CMake-Options) for what each option does.\n6. Click the button named `Generate`, which will also run `Configure`. Both together should succeed if you did everything correctly.\n7. If available, you can now click the button named `Open Project` to immediately jump into your IDE of choice.\n\n</details>\n\n## CMake Options\n<details><summary>The project is intended to be versatile and configurable, so we offer almost everything to be configured on a silver platter directly in CMake (if possible). If StreamFX detects that it is being built together with other projects, it will automatically prefix all options with `StreamFX_` to prevent collisions.</summary>\n\n### Generic\n- `GIT` (not prefixed)  \n  Path to the `git` binary on your system, for use with features that require git during configuration and generation.\n- `VERSION`  \n  Set or override the version of the project with a custom one. Allowed formats are: SemVer 2.0.0, CMake.\n\n### Code\n- `ENABLE_CLANG`  \n  Enable integration of `clang-format` and `clang-tidy`\n- `CLANG_PATH` (not prefixed, only with `ENABLE_CLANG`)  \n  Path to the `clang` installation containing `clang-format` and `clang-tidy`. Only used as a hint.\n- `CLANG_FORMAT_PATH` and `CLANG_TIDY_PATH` (not prefixed)\n  Path to `clang-format` and `clang-tidy` that will be used.  \n\n### Dependencies\n- `LibObs_DIR`  \n  Path to the obs-studio libraries.\n- `Qt5_DIR`, `Qt6_DIR` or `Qt_DIR` (autodetect)  \n  Path to Qt5 (OBS Studio 27.x and lower) or Qt6 (OBS Studio 28.x and higher).\n- `FFmpeg_DIR`  \n  Path to compatible FFmpeg libraries and headers.\n- `CURL_DIR`  \n  Path to compatible CURL libraries and headers.\n- `AOM_DIR`  \n  Path to compatible AOM libraries and headers.\n\n### Compiling\n- `ENABLE_FASTMATH`  \n  Enable fast math optimizations if the compiler supports them. This trades precision for performance, and is usually good enough anyway.\n- `ENABLE_LTO`  \n  Enable link time optimization for faster binaries in exchange for longer build times.\n- `ENABLE_PROFILING`  \n  Enable CPU and GPU profiling code, this option reduces performance drastically.\n- `TARGET_*`  \n  Specify which architecture target the generated binaries will use.\n\n### Components\n- `COMPONENT_<NAME>`  \n  Enable the component by the given name.\n\n### Installing & Packaging\nThese options are only available in CI-Style mode.\n\n- `CMAKE_INSTALL_PREFIX`  \n  The path in which installed content should be placed when building the `install` target.\n- `STRUCTURE_PACKAGEMANAGER`  \n  If enabled will install files in a layout compatible with package managers.\n- `STRUCTURE_UNIFIED`  \n  Enable to install files in a layout compatible with an OBS Studio plugin manager.\n- `PACKAGE_NAME`  \n  The name of the packaged archive, excluding the prefix, suffix and extension.\n- `PACKAGE_PREFIX`  \n  The path in which the packages should be placed.\n- `PACKAGE_SUFFIX`  \n  The suffix to attach to the name, before the file extension. If left blank will attach the current version string to the package.\n- `STRUCTURE_UNIFIED`  \n  Enable to replace the PACKAGE_ZIP target with a target that generates a single `.obs` file instead.\n\n</details>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 48.021484375,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2017-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# Copyright (C) 2019 Cat Stevens <catb0t@protonmail.ch>\n# Copyright (C) 2020 Brandon Edens <brandonedens@gmail.com>\n# Copyright (C) 2021 Christopher P Yarger <cpyarger@gmail.com>\n# Copyright (C) 2022 Carsten Braun <info@braun-cloud.de>\n# Copyright (C) 2022 Romain Vigier <romain@romainvigier.fr>\n# Copyright (C) 2023 Isaac Nudelman <isaac.nudelman@utexas.edu>\n# AUTOGENERATED COPYRIGHT HEADER END\n\n# ToDo:\n# - Explore RESOURCE property: https://cmake.org/cmake/help/latest/prop_tgt/RESOURCE.html\n# - Explore PUBLIC_HEADER property: https://cmake.org/cmake/help/latest/prop_tgt/PUBLIC_HEADER.html\n\n\n# CMake Setup\ncmake_minimum_required(VERSION 3.26)\nlist(APPEND CMAKE_MESSAGE_INDENT \"[StreamFX] \")\nproject(StreamFX)\n\n################################################################################\n# Modules\n################################################################################\n\n# Search Paths\nset(CMAKE_MODULE_PATH\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules\"\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/clang\"\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/version\"\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake\"\n)\n\n# Include required Modules\n# - Stock\ninclude(\"CheckIPOSupported\")\n# - Custom\ninclude(\"util\")\nif(EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/version/version.cmake\")\n\tinclude(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/version/version.cmake\")\nelse()\n\tmessage(FATAL_ERROR \"Please ensure you've cloned recursively and try again. Thank you!\")\nendif()\n\n# Include optional Modules\nif(EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/clang/Clang.cmake\")\n\tinclude(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/clang/Clang.cmake\")\nendif()\n\n################################################################################\n# Bootstrapping\n################################################################################\n\n# MacOSX: Require at least MacOSX 10.15 for C++17 support.\nif(APPLE)\n\tif(CMAKE_OSX_DEPLOYMENT_TARGET VERSION_LESS 10.15)\n\t\tCacheSet(CMAKE_OSX_DEPLOYMENT_TARGET \"10.15\")\n\tendif()\nendif()\n\n# Check if this is standalone or bundled.\nset(STANDALONE ON)\nif(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_LIST_DIR}\")\n\tset(GROUPED OFF)\n\tset(PREFIX \"\")\nelse()\n\tset(GROUPED ON)\n\tset(PREFIX \"StreamFX_\")\n\tif(GROUPED AND ((TARGET libobs) OR (TARGET OBS::libobs)))\n\t\tset(STANDALONE OFF)\n\tendif()\nendif()\n\n# Operating System\nif(CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n\tset(D_PLATFORM_OS \"windows\")\n\tset(D_PLATFORM_WINDOWS 1)\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n\tset(D_PLATFORM_OS \"linux\")\n\tset(D_PLATFORM_LINUX 1)\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n\tset(D_PLATFORM_OS \"macos\")\n\tset(D_PLATFORM_MAC 1)\nelse()\n\tset(D_PLATFORM_OS \"unknown\")\n\tset(D_PLATFORM_UNKNOWN 1)\n\tmessage(WARNING \"The operating system '${CMAKE_SYSTEM_NAME}' is unknown to to this script, continue at your own risk.\")\nendif()\n\n# Architecture\nset(ARCH_INSTR_32 \"i386;i686;x86;arm;ARM\")\nset(ARCH_INSTR_64 \"x86_64;AMD64;IA64;arm64;ARM64\")\nset(ARCH_INSTR_X86 \"i386;i686;x86;x86_64;AMD64\")\nset(ARCH_INSTR_ARM \"arm;ARM;arm64;ARM64\")\nset(ARCH_INSTR_ITANIUM \"IA64\")\nset(ARCH_BITS 0)\nset(ARCH_BITS_POINTER 0)\nset(ARCH_INST \"\")\n\n# - Bitness\nlist(FIND ARCH_INSTR_32 \"${CMAKE_SYSTEM_PROCESSOR}\" FOUND)\nif(FOUND GREATER -1)\n\tset(ARCH_BITS 32)\nendif()\n\nlist(FIND ARCH_INSTR_64 \"${CMAKE_SYSTEM_PROCESSOR}\" FOUND)\nif(FOUND GREATER -1)\n\tset(ARCH_BITS 64)\nendif()\nset(D_PLATFORM_BITS ${ARCH_BITS})\n\n# - Pointer Size (bits)\nmath(EXPR ARCH_BITS_POINTER \"8*${CMAKE_SIZEOF_VOID_P}\")\nset(D_PLATFORM_BITS_PTR ${ARCH_BITS_POINTER})\n\n# - Basic Instruction Set\nlist(FIND ARCH_INSTR_X86 \"${CMAKE_SYSTEM_PROCESSOR}\" FOUND)\nif(FOUND GREATER -1)\n\tlist(APPEND ARCH_INST \"x86\")\n\tset(D_PLATFORM_INSTR_X86 ON)\n\tset(D_PLATFORM_ARCH_X86 ON)\nendif()\n\nlist(FIND ARCH_INSTR_ARM \"${CMAKE_SYSTEM_PROCESSOR}\" FOUND)\nif(FOUND GREATER -1)\n\tlist(APPEND ARCH_INST \"ARM\")\n\tset(D_PLATFORM_INSTR_ARM ON)\n\tset(D_PLATFORM_ARCH_ARM ON)\nendif()\n\nlist(FIND ARCH_INSTR_ITANIUM \"${CMAKE_SYSTEM_PROCESSOR}\" FOUND)\nif(FOUND GREATER -1)\n\tlist(APPEND ARCH_INST \"Itanium\")\n\tset(D_PLATFORM_INSTR_ITANIUM ON)\n\tset(D_PLATFORM_ARCH_ITANIUM ON)\nendif()\n\n# Interprocedural Optimization\ncheck_ipo_supported(RESULT D_HAS_IPO)\n\nset(D_PLATFORM_INSTR ${ARCH_INST})\nset(D_PLATFORM_ARCH ${ARCH_INST})\nmessage(STATUS \"Target is ${D_PLATFORM_BITS}bit ${ARCH_INST} with a pointer size of ${D_PLATFORM_BITS_PTR}bit.\")\n\n################################################################################\n# Versioning\n################################################################################\n\nversion(GENERATE _VERSION COMPRESSED MAJOR 0 MINOR 0 PATCH 0 TWEAK 0 REQUIRE \"PATCH;\")\nversion(PARSE _VERSION \"${_VERSION}\" REQUIRE \"PATCH;TWEAK\")\n\n# If possible, automatically generate versions from git.\nif(EXISTS \"${CMAKE_CURRENT_LIST_DIR}/.git\")\n\tfind_program(GIT\n\t\tNAMES\n\t\t\tgit\n\t\t\tgit.exe\n\t)\n\n\tif(EXISTS \"${GIT}\")\n\t\t# Try and calculate the exist version using git.\n\t\texecute_process(COMMAND \"${GIT}\" describe --tags --long --abbrev=8 HEAD WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR} RESULT_VARIABLE GIT_RESULT OUTPUT_VARIABLE GIT_OUTPUT ERROR_VARIABLE GIT_ERROR OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n\t\tif((GIT_RESULT EQUAL 0) AND (NOT \"${GIT_OUTPUT}\" STREQUAL \"\"))\n\t\t\t# Result will be MAJOR.MINOR.PATCH-TWEAK-gHASH\n\t\t\tstring(REPLACE \"-\" \";\" GIT_OUTPUT \"${GIT_OUTPUT}\")\n\t\t\tstring(REPLACE \".\" \";\" GIT_OUTPUT \"${GIT_OUTPUT}\")\n\n\t\t\t# Split into components\n\t\t\tlist(GET GIT_OUTPUT 0 GIT_OUTPUT_MAJOR)\n\t\t\tlist(GET GIT_OUTPUT 1 GIT_OUTPUT_MINOR)\n\t\t\tlist(GET GIT_OUTPUT 2 GIT_OUTPUT_PATCH)\n\t\t\tlist(GET GIT_OUTPUT 3 GIT_OUTPUT_TWEAK)\n\t\t\tlist(GET GIT_OUTPUT 4 GIT_OUTPUT_BUILD)\n\n\t\t\t# Special case: Tag contains prerelease\n\t\t\tif(GIT_OUTPUT_PATCH MATCHES \"([0-9]+)([a-zA-Z]+)([0-9]*)\")\n\t\t\t\t# Patch requires special parsing.\n\t\t\t\tset(GIT_OUTPUT_PATCH \"${CMAKE_MATCH_1}\")\n\t\t\t\tif(CMAKE_MATCH_3 GREATER 0)\n\t\t\t\t\tset(GIT_OUTPUT_PRERELEASE \"${CMAKE_MATCH_2}\")\n\t\t\t\telse()\n\t\t\t\t\tset(GIT_OUTPUT_PRERELEASE \"a\")\n\t\t\t\tendif()\n\t\t\t\tMATH(EXPR GIT_OUTPUT_TWEAK \"${GIT_OUTPUT_TWEAK} + ${CMAKE_MATCH_3}\")\n\n\t\t\t\t# Modify the global version\n\t\t\t\tversion(MODIFY _VERSION \"${_VERSION}\" COMPRESS\n\t\t\t\t\tMAJOR \"${GIT_OUTPUT_MAJOR}\"\n\t\t\t\t\tMINOR \"${GIT_OUTPUT_MINOR}\"\n\t\t\t\t\tPATCH \"${GIT_OUTPUT_PATCH}\"\n\t\t\t\t\tTWEAK \"${GIT_OUTPUT_TWEAK}\"\n\t\t\t\t\tBUILD \"${GIT_OUTPUT_BUILD}\"\n\t\t\t\t\tPRERELEASE \"${GIT_OUTPUT_PRERELEASE}\"\n\t\t\t\t\tREQUIRE \"PATCH;TWEAK\"\n\t\t\t\t)\n\t\t\telse()\n\t\t\t\t# Modify the global version\n\t\t\t\tversion(MODIFY _VERSION \"${_VERSION}\" COMPRESS\n\t\t\t\t\tMAJOR \"${GIT_OUTPUT_MAJOR}\"\n\t\t\t\t\tMINOR \"${GIT_OUTPUT_MINOR}\"\n\t\t\t\t\tPATCH \"${GIT_OUTPUT_PATCH}\"\n\t\t\t\t\tTWEAK \"${GIT_OUTPUT_TWEAK}\"\n\t\t\t\t\tBUILD \"${GIT_OUTPUT_BUILD}\"\n\t\t\t\t\tPRERELEASE \"a\"\n\t\t\t\t\tREQUIRE \"PATCH;TWEAK\"\n\t\t\t\t)\n\t\t\tendif()\n\t\telse()\n\t\t\texecute_process(COMMAND \"${GIT}\" rev-list --count HEAD WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR} RESULT_VARIABLE GIT_RESULT OUTPUT_VARIABLE GIT_OUTPUT ERROR_VARIABLE GIT_ERROR OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n\t\t\tif((GIT_RESULT EQUAL 0) AND (NOT \"${GIT_OUTPUT}\" STREQUAL \"\"))\n\t\t\t\tversion(MODIFY _VERSION \"${_VERSION}\" COMPRESS\n\t\t\t\t\tTWEAK \"${GIT_OUTPUT}\"\n\t\t\t\t\tPRERELEASE \"a\"\n\t\t\t\t\tREQUIRE \"PATCH;TWEAK\"\n\t\t\t\t)\n\n\t\t\t\t# Determine the build using git.\n\t\t\t\texecute_process(COMMAND \"${GIT}\" log -1 \"--pretty=format:g%h\" --abbrev=8 HEAD WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR} RESULT_VARIABLE GIT_RESULT OUTPUT_VARIABLE GIT_OUTPUT ERROR_VARIABLE GIT_ERROR OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_STRIP_TRAILING_WHITESPACE ERROR_QUIET)\n\t\t\t\tif((GIT_RESULT EQUAL 0) AND (NOT \"${GIT_OUTPUT}\" STREQUAL \"\"))\n\t\t\t\t\tversion(MODIFY _VERSION \"${_VERSION}\" COMPRESS\n\t\t\t\t\t\tBUILD \"${GIT_OUTPUT}\"\n\t\t\t\t\t\tREQUIRE \"PATCH;TWEAK\"\n\t\t\t\t\t)\n\t\t\t\telse()\n\t\t\t\t\tmessage(WARNING \"Failed to detect build version with 'git'.\")\n\t\t\t\tendif()\n\t\t\telse()\n\t\t\t\tmessage(WARNING \"Failed to automatically detect version with 'git'.\")\n\t\t\tendif()\n\t\tendif()\n\telse()\n\t\tmessage(WARNING \"'git' not found, automatic version detection disabled.\")\n\tendif()\nelse()\n\tmessage(STATUS \"Not a git repository, automatic version detection disabled.\")\nendif()\nversion(PARSE _VERSION \"${_VERSION}\" REQUIRE \"PATCH;TWEAK\")\n\n# Allow manual overrides of the detected version.\nif(NOT (\"${${PREFIX}VERSION}\" STREQUAL \"\"))\n\tversion(PARSE _VERSION_CFG \"${${PREFIX}VERSION}\" REQUIRE \"PATCH;TWEAK\")\n\tif(\"${_VERSION_CFG_BUILD}\" STREQUAL \"\")\n\t\tset(_VERSION_CFG_BUILD \"${_VERSION_BUILD}\")\n\tendif()\n\tversion(GENERATE _VERSION COMPRESS\n\t\tMAJOR \"${_VERSION_CFG_MAJOR}\"\n\t\tMINOR \"${_VERSION_CFG_MINOR}\"\n\t\tPATCH \"${_VERSION_CFG_PATCH}\"\n\t\tTWEAK \"${_VERSION_CFG_TWEAK}\"\n\t\tPRERELEASE \"${_VERSION_CFG_PRERELEASE}\"\n\t\tBUILD \"${_VERSION_CFG_BUILD}\"\n\t)\nendif()\n\nset(_VERSION_THIN \"${_VERSION_MAJOR}.${_VERSION_MINOR}.${_VERSION_PATCH}\")\nif(NOT (_VERSION_PRERELEASE STREQUAL \"\"))\n\tset(_VERSION_THIN \"${_VERSION_THIN}${_VERSION_PRERELEASE}${_VERSION_TWEAK}\")\nendif()\nif(NOT (VERSION_COMMIT STREQUAL \"\"))\n\tset(_VERSION_THIN \"${_VERSION_THIN}-${_VERSION_BUILD}\")\nendif()\n\n# Parse & Log the detected version.\nmessage(STATUS \"Version ${_VERSION_THIN}\")\n\n################################################################################\n# Options\n################################################################################\n\n# Don't enable stability affecting features by default.\nif(_VERSION_PRERELEASE STREQUAL \"a\")\n\tset(FEATURE_DEPRECATED ON)\n\tset(FEATURE_EXPERIMENTAL ON)\n\tset(FEATURE_UNSTABLE ON)\n\tset(FEATURE_STABLE ON)\nelseif(_VERSION_PRERELEASE STREQUAL \"b\")\n\tset(FEATURE_DEPRECATED ON)\n\tset(FEATURE_EXPERIMENTAL OFF)\n\tset(FEATURE_UNSTABLE ON)\n\tset(FEATURE_STABLE ON)\nelseif(_VERSION_PRERELEASE STREQUAL \"c\")\n\tset(FEATURE_DEPRECATED ON)\n\tset(FEATURE_EXPERIMENTAL OFF)\n\tset(FEATURE_UNSTABLE OFF)\n\tset(FEATURE_STABLE ON)\nelse()\n\tset(FEATURE_DEPRECATED ON)\n\tset(FEATURE_EXPERIMENTAL OFF)\n\tset(FEATURE_UNSTABLE OFF)\n\tset(FEATURE_STABLE ON)\nendif()\n\n# Version override\nset(${PREFIX}VERSION \"\" CACHE STRING \"Specify an override for the automatically detected version. Accepts a mixture of SemVer 2.0 and CMake Version.\")\n\n# Compile/Link Related\nset(${PREFIX}ENABLE_FASTMATH ON CACHE BOOL \"Enable fast math optimizations, which sacrifice precision and stability.\")\nif(D_PLATFORM_ARCH_X86)\n\tset(${PREFIX}TARGET_X86_64_V4 OFF CACHE BOOL \"Target x86-64-v4 (x86-64-v3, AVX512F, AVX512BW, AVX512CD, AVX512DQ, AVX512VL).\")\n\tset(${PREFIX}TARGET_X86_64_V3 OFF CACHE BOOL \"Target x86-64-v3 (x86-64-v2, AVX, AVX2, BMI1, BMI2, F16C, FMA, LZCNT, MOVBE, OSXSAVE).\")\n\tset(${PREFIX}TARGET_X86_64_V2_EX ON CACHE BOOL \"Target extended x86-64-v2 (x86-64-v2, AVX, BMI1, BMI2, F16C, FMA, MOVBE).\")\n\tset(${PREFIX}TARGET_X86_64_V2 ON CACHE BOOL \"Target x86-64-v2 (x86-64, CMPXCHG16B, LAHF-SAHF, POPCNT, SSE3, SSE4.1, SSE4.2, SSSE3).\")\n\tset(${PREFIX}TARGET_X86_64 ON CACHE BOOL \"Target x86-64 (CMOV, CX8, FPU, FXSR, MMX, OSFXSR, SCE, SSE, SSE2).\")\nendif()\nif(NOT MSVC)\n\tset(${PREFIX}TARGET_NATIVE OFF CACHE BOOL \"Target the native CPU architecture. Enable it for development or personal builds, but disable it for distribution.\")\nendif()\n\n# Installation / Packaging\nif(STANDALONE)\n\tif(D_PLATFORM_LINUX)\n\t\tset(STRUCTURE_PACKAGEMANAGER CACHE BOOL \"Install for use in a Package Manager (system-wide installation)\")\n\tendif()\n\n\tset(PACKAGE_PREFIX \"${CMAKE_BINARY_DIR}\" CACHE PATH \"Where to place the packages?\")\n\tset(PACKAGE_NAME \"StreamFX\" CACHE STRING \"What should the package be called?\")\n\tset(PACKAGE_SUFFIX \"\" CACHE STRING \"Any suffix for the package name? (Defaults to the current version string)\")\nendif()\n\n# Dependencies\nif(STANDALONE)\n\tset(libobs_DIR \"\" CACHE PATH \"Path to libobs and obs-frontend-api\")\n\tset(Qt_DIR \"\" CACHE PATH \"Path to Qt6 or Qt5\")\n\tset(CURL_DIR \"\" CACHE PATH \"Path to CURL\")\n\tset(FFmpeg_DIR \"\" CACHE PATH \"Path to FFmpeg\")\nendif()\nset(AOM_DIR \"\" CACHE PATH \"Path to AOM library\")\n\n################################################################################\n# Project\n################################################################################\n\n# Metadata\nversion(GENERATE PROJECT_VERSION\n\tMAJOR \"${_VERSION_MAJOR}\"\n\tMINOR \"${_VERSION_MINOR}\"\n\tPATCH \"${_VERSION_PATCH}\"\n\tTWEAK \"${_VERSION_TWEAK}\"\n\tREQUIRE \"PATCH;TWEAK\"\n)\nproject(\n\tStreamFX\n\tVERSION ${PROJECT_VERSION}\n\tDESCRIPTION \"Additional sources, filters, transitions and encoders for OBS Studio.\"\n\tHOMEPAGE_URL \"https://streamfx.xaymar.com/\"\n)\nset(PROJECT_IDENTIFER \"com.xaymar.StreamFX.obs\")\nset(PROJECT_TITLE \"StreamFX (for OBS Studio)\")\nset(PROJECT_AUTHORS \"Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\")\nset(PROJECT_COPYRIGHT \"2017 - 2022, Michael Fabian Dirks. All Rights Reserved\")\nset(PROJECT_TRADEMARKS \"\")\nlist(APPEND PROJECT_TRADEMARKS\n\t\"AMD is a trademark of Advanced Micro Devices Inc.\"\n\t\"NVIDIA is a trademark of Nvidia Corporation\"\n)\n\n# Component search paths\nlist(APPEND CMAKE_PREFIX_PATH\n\t\"${${PREFIX}AOM_PATH}\"\n\t\"${${PREFIX}OBSDEPS_PATH}\"\n\t\"${${PREFIX}QT_PATH}\"\n\t\"${AOM_DIR}\"\n\t\"${CURL_DIR}\"\n\t\"${DepsPath}\"\n\t\"${FFmpeg_DIR}\"\n\t\"${libobs_DIR}\"\n\t\"${Qt_DIR}\"\n\t\"${Qt5_DIR}\"\n\t\"${Qt6_DIR}\"\n\t\"${QTDIR}\"\n)\nif(D_PLATFORM_MAC)\n\tlist(APPEND CMAKE_PREFIX_PATH\n\t\t\"${${PREFIX}AOM_PATH}/Frameworks\"\n\t\t\"${${PREFIX}OBSDEPS_PATH}/Frameworks\"\n\t\t\"${${PREFIX}QT_PATH}/Frameworks\"\n\t\t\"${AOM_DIR}/Frameworks\"\n\t\t\"${CURL_DIR}/Frameworks\"\n\t\t\"${DepsPath}/Frameworks\"\n\t\t\"${FFmpeg_DIR}/Frameworks\"\n\t\t\"${libobs_DIR}/Frameworks\"\n\t\t\"${Qt_DIR}/Frameworks\"\n\t\t\"${Qt5_DIR}/Frameworks\"\n\t\t\"${Qt6_DIR}/Frameworks\"\n\t\t\"${QTDIR}/Frameworks\"\n\t)\nendif()\n\nset_property(GLOBAL PROPERTY AUTOGEN_SOURCE_GROUP \"User-Interface Files/Generated\")\n\n################################################################################\n# Dependencies\n################################################################################\n\n#- OBS: Library\nif(STANDALONE)\n\tfind_package(\"libobs\" REQUIRED CONFIG)\nelseif(NOT TARGET OBS::libobs)\n\t# Add the missing OBS::libobs alias target if possible.\n\tadd_library(OBS::libobs ALIAS libobs)\nendif()\nif(D_PLATFORM_MAC)\n\t# We may need to reconstruct the include directories on MacOS.\n\tget_target_property(libobs_INTERFACE_INCLUDE_DIRECTORIES OBS::libobs INTERFACE_INCLUDE_DIRECTORIES)\n\tif(\"${libobs_INTERFACE_INCLUDE_DIRECTORIES}\" STREQUAL \"libobs_INTERFACE_INCLUDE_DIRECTORIES-NOTFOUND\")\n\t\tget_target_property(libobs_IMPORTED_LOCATION_RELEASE OBS::libobs IMPORTED_LOCATION_RELEASE)\n\t\tget_filename_component(libobs_IMPORTED_LOCATION_RELEASE \"${libobs_IMPORTED_LOCATION_RELEASE}\" DIRECTORY)\n\t\tget_filename_component(libobs_IMPORTED_LOCATION_RELEASE \"${libobs_IMPORTED_LOCATION_RELEASE}\" DIRECTORY)\n\t\tget_filename_component(libobs_IMPORTED_LOCATION_RELEASE \"${libobs_IMPORTED_LOCATION_RELEASE}\" DIRECTORY)\n\t\tset(libobs_IMPORTED_LOCATION_RELEASE \"${libobs_IMPORTED_LOCATION_RELEASE}/Headers\")\n\t\tset_target_properties(OBS::libobs PROPERTIES\n\t\t\tINTERFACE_INCLUDE_DIRECTORIES\n\t\t\t\t\"${libobs_IMPORTED_LOCATION_RELEASE}\"\n\t\t)\n\tendif()\nendif()\n\n#- OBS: Front-End API\nif(STANDALONE)\n\tfind_package(\"obs-frontend-api\" CONFIG)\n\tset(obs-frontend-api_FOUND \"${obs-frontend-api_FOUND}\")\nelseif(TARGET obs-frontend-api)\n\tset(obs-frontend-api_FOUND ON)\nendif()\nif(NOT TARGET OBS::obs-frontend-api)\n\tadd_library(OBS::obs-frontend-api ALIAS obs-frontend-api)\nendif()\n\n#- CURL\nfind_package(\"CURL\")\n\n#- JSON\nif(NOT EXISTS \"${PROJECT_SOURCE_DIR}/third-party/nlohmann-json/single_include\")\n\tmessage(FATAL_ERROR \"Please make sure to update git submodules to their latest supported version.\")\n\treturn()\nelse()\n\tset(JSON_INCLUDE_DIR \"${PROJECT_SOURCE_DIR}/third-party/nlohmann-json/single_include\")\nendif()\n\n#- Qt 6\nfind_package(\"Qt6\"\n\tCOMPONENTS Core Gui Widgets\n\tCONFIG\n)\n\n################################################################################\n# Helpers\n################################################################################\ndefine_property(TARGET PROPERTY COMPONENT_LABEL)\ndefine_property(TARGET PROPERTY COMPONENT_NAME)\ndefine_property(TARGET PROPERTY COMPONENT_OPTION)\ndefine_property(TARGET PROPERTY COMPONENT_RESOLVER)\ndefine_property(TARGET PROPERTY COMPONENT_DEPENDS)\n\nfunction(streamfx_add_library TARGET_NAME TARGET_TYPE)\n\tadd_library(${TARGET_NAME} ${TARGET_TYPE})\n\n\tset_target_properties(${TARGET_NAME} PROPERTIES\n\t\t# Always generate position independent code.\n\t\tPOSITION_INDEPENDENT_CODE ON\n\n\t\t# Set C++ Standard and Extensions\n\t\tC_STANDARD 17\n\t\tC_STANDARD_REQUIRED ON\n\t\tCXX_STANDARD 17\n\t\tCXX_STANDARD_REQUIRED ON\n\t\tCXX_EXTENSIONS OFF\n\n\t\t# Remove prefix from generated files.\n\t\tPREFIX \"\"\n\t\tIMPORT_PREFIX \"\"\n\t)\n\tif(D_PLATFORM_MAC)\n\t\tset_target_properties(${TARGET_NAME} PROPERTIES\n\t\t\t# @rpath in installed binaries\n\t\t\tINSTALL_RPATH \"@executable_path/../Frameworks/;@loader_path/../Frameworks/;@loader_path/../Resources/\"\n\t\t)\n\n\t\tif(STANDALONE)\n\t\t\tset_target_properties(${TARGET_NAME} PROPERTIES\n\t\t\t\t# @rpath in built binaries\n\t\t\t\tBUILD_WITH_INSTALL_RPATH ON\n\t\t\t)\n\t\tendif()\n\tendif()\n\n\ttarget_compile_definitions(${TARGET_NAME} PRIVATE\n\t\t__STDC_WANT_LIB_EXT1__=1\n\t)\n\tif(D_PLATFORM_WINDOWS)\n\t\ttarget_compile_definitions(${TARGET_NAME}\n\t\t\tPUBLIC\n\t\t\t\t# Microsoft Visual C++\n\t\t\t\t_CRT_SECURE_NO_WARNINGS\n\t\t\t\t_ENABLE_EXTENDED_ALIGNED_STORAGE\n\n\t\t\tPUBLIC\n\t\t\t\t# windows.h\n\t\t\t\t# - Disable MIN/MAX macro as this breaks a lot of code.\n\t\t\t\tNOMINMAX\n\t\t\t\t# - Disable IN/OUT macro as this breaks a lot of code.\n\t\t\t\tNOINOUT\n\t\t)\n\tendif()\n\n\t# C/C++ Compiler Adjustments\n\tif(D_PLATFORM_WINDOWS AND ((CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\") OR (CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")))\n\t\t# MSVC/ClangCL\n\n\t\t# - Dynamically link Microsoft C/C++ Redistributable.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t$<$<CONFIG:>:/MD>\n\t\t\t$<$<CONFIG:Debug>:/MDd>\n\t\t\t$<$<CONFIG:Release>:/MD>\n\t\t\t$<$<CONFIG:RelWithDebInfo>:/MD>\n\t\t\t$<$<CONFIG:MinSizeRel>:/MD>\n\t\t)\n\n\t\t# - Treat Warnings as Errors\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/Wall\")\n\n\t\t# - Explicitly disable treating all Warnings as Errors\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/WX-\")\n\n\t\t# - Disable useless warnings\n\t\tset(DISABLED_WARNINGS\n\t\t\t# Don't warn about unused variables, parameters, labels, functions, or typedefs.\n\t\t\t\"4100\"\n\t\t\t\"4101\"\n\t\t\t\"4102\"\n\t\t\t\"4505\"\n\t\t\t\"4514\"\n\t\t\t\"5245\"\n\t\t\t\"5264\"\n\t\t\t# Don't warn about unreferenced variables or parameters which are assigned/initialized.\n\t\t\t\"4189\"\n\t\t\t# Don't warn about not-explicitly-handled enumeration identifiers\n\t\t\t\"4061\"\n\t\t\t# Ignore automatic padding warnings.\n\t\t\t\"4820\"\n\t\t\t# Ignore assignment/move/copy being implicit '= delete;'.\n\t\t\t\"4623\"\n\t\t\t\"4625\"\n\t\t\t\"4626\"\n\t\t\t\"5026\"\n\t\t\t\"5027\"\n\t\t\t# Relative include paths are fine.\n\t\t\t\"4464\"\n\t\t\t# Buggy warning: printf expects string literal\n\t\t\t\"4774\"\n\t\t\t# Buggy warning: subobject initialization should be wrapped in braces\n\t\t\t\"5246\"\n\t\t\t# Ignore undefined, unused or unreferenced pre-processor macros\n\t\t\t\"4688\"\n\t\t\t# Ignore non-inlined functions\n\t\t\t\"4710\"\n\t\t\t# Ignore Spectre mitigation insertions\n\t\t\t\"5045\"\n\t\t\t# Ignore inserted padding.\n\t\t\t\"4324\"\n\t\t\t# Ignore non-standard nameless struct/union.\n\t\t\t\"4201\"\n\t\t\t# Intended behavior: Replace undefined macros with 0\n\t\t\t\"4668\"\n\t\t)\n\t\tforeach(WARN ${DISABLED_WARNINGS})\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/wd${WARN}\")\n\t\tendforeach()\n\n\t\t# - Require enabled instruction sets.\n\t\tif(D_PLATFORM_ARCH_X86)\n\t\t\tif(${PREFIX}TARGET_X86_64_V4)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/arch:AVX512\")\n\t\t\telseif(${PREFIX}TARGET_X86_64_V3)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/arch:AVX2\")\n\t\t\telseif(${PREFIX}TARGET_X86_64_V2_EX)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/arch:AVX\")\n\t\t\telseif(${PREFIX}TARGET_X86_64_V2)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/d2archSSE42\")\n\t\t\telseif(${PREFIX}TARGET_X86_64)\n\t\t\t\t#target_compile_options(${TARGET_NAME} PRIVATE \"/arch:SSE2\")\n\t\t\tendif()\n\t\tendif()\n\n\t\t# - Use fast unordered math if possible.\n\t\tif(${PREFIX}ENABLE_FASTMATH)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/fp:fast\")\n\t\telse()\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/fp:precise\")\n\t\t\tif(MSVC_VERSION GREATER 1930)\n\t\t\t\t# Keep original behavior in VS2022 and up.\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/fp:contract\")\n\t\t\tendif()\n\t\tendif()\n\n\t\t# - Disable incremental builds\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/INCREMENTAL:NO\")\n\n\t\t# - Enable C++ exceptions with SEH exceptions.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/EHa\")\n\n\t\t# - Enable multi-processor compiling.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/MP\")\n\n\t\t# - Enable updated __cplusplus macro\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"/Zc:__cplusplus\")\n\telseif(D_PLATFORM_LINUX AND ((CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\") OR (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")))\n\t\t# GCC/Clang\n\n\t\t# - Enable all warnings.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wall\")\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wextra\")\n\n\t\t# - Disable useless warnings\n\t\tset(DISABLED_WARNINGS\n\t\t\t# Don't warn about unused variables, parameters, labels, functions, or typedefs.\n\t\t\t\"unused-function\"\n\t\t\t\"unused-label\"\n\t\t\t\"unused-local-typedefs\"\n\t\t\t\"unused-parameter\"\n\t\t\t\"unused-result\"\n\t\t\t\"unused-const-variable\"\n\t\t\t\"unused-variable\"\n\t\t\t\"unused-value\"\n\t\t\t# Don't warn about unreferenced variables or parameters which are assigned/initialized.\n\t\t\t\"unused-but-set-parameter\"\n\t\t\t\"unused-but-set-variable\"\n\t\t\t# Don't warn about not-explicitly-handled enumeration identifiers\n\t\t\t\"switch\"\n\t\t\t# Ignore automatic padding warnings.\n\t\t\t\"padded\"\n\t\t\t# Ignore implicit '= delete;'.\n\t\t\t# Ignore extra arguments for printf\n\t\t\t\"format-extra-args\"\n\t\t\t# Ignore undefined, unused or unreferenced pre-processor macros\n\t\t\t\"unused-macros\"\n\t\t)\n\t\tforeach(WARN ${DISABLED_WARNINGS})\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wno-${WARN}\")\n\t\tendforeach()\n\n\t\t# - Require enabled instruction sets.\n\t\tif(${PREFIX}TARGET_NATIVE)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\"-march=native\"\n\t\t\t)\n\t\telseif(D_PLATFORM_ARCH_X86)\n\t\t\tif(${PREFIX}TARGET_X86_64_V4)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-march=x86-64-v4\"\n\t\t\t\t)\n\t\t\telseif(${PREFIX}TARGET_X86_64_V3)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-march=x86-64-v3\"\n\t\t\t\t)\n\t\t\telseif(${PREFIX}TARGET_X86_64_V2_EX)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-march=x86-64-v2\"\n\t\t\t\t\t\"-mavx\"\n\t\t\t\t\t\"-mbmi2\"\n\t\t\t\t\t\"-mbmi\"\n\t\t\t\t\t\"-mfma\"\n\t\t\t\t\t\"-mf16c\"\n\t\t\t\t\t\"-mmovbe\"\n\t\t\t\t\t\"-mpclmul\"\n\t\t\t\t\t\"-mpopcnt\"\n\t\t\t\t)\n\t\t\telseif(${PREFIX}TARGET_X86_64_V2)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-march=x86-64-v2\"\n\t\t\t\t)\n\t\t\telseif(${PREFIX}TARGET_X86_64)\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-march=x86-64\"\n\t\t\t\t)\n\t\t\tendif()\n\t\t\tif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-mtune=generic\"\n\t\t\t\t)\n\t\t\telse()\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-mtune=x86-64\"\n\t\t\t\t)\n\t\t\tendif()\n\t\tendif()\n\n\t\t# - Use fast unordered math if possible.\n\t\tif(${PREFIX}ENABLE_FASTMATH)\n\t\t\tif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-ffast-math\"\n\t\t\t\t)\n\t\t\telse()\n\t\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\t\"-ffp-model=fast\"\n\t\t\t\t)\n\t\t\tendif()\n\t\telse()\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\"-ffp-model=precise\"\n\t\t\t)\n\t\tendif()\n\n\t\t# - Don't export by default, require attributes.\n\t\t# add_compile_options(\"-fvisibility=hidden\")\n\telseif(D_PLATFORM_MAC AND (CMAKE_CXX_COMPILER_ID STREQUAL \"AppleClang\"))\n\t\t# AppleClang\n\n\t\t# - Enable most useful warnings.\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wall\")\n\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wextra\")\n\n\t\t# - Disable useless warnings\n\t\tset(DISABLED_WARNINGS\n\t\t\t# Don't warn about unused variables, parameters, labels, functions, or typedefs.\n\t\t\t\"unused-function\"\n\t\t\t\"unused-label\"\n\t\t\t\"unused-local-typedefs\"\n\t\t\t\"unused-parameter\"\n\t\t\t\"unused-result\"\n\t\t\t\"unused-const-variable\"\n\t\t\t\"unused-variable\"\n\t\t\t\"unused-value\"\n\t\t\t# Don't warn about unreferenced variables or parameters which are assigned/initialized.\n\t\t\t\"unused-but-set-parameter\"\n\t\t\t\"unused-but-set-variable\"\n\t\t\t# Don't warn about not-explicitly-handled enumeration identifiers\n\t\t\t\"switch\"\n\t\t\t# Ignore automatic padding warnings.\n\t\t\t\"padded\"\n\t\t\t# Ignore implicit '= delete;'.\n\t\t\t# Ignore extra arguments for printf\n\t\t\t\"format-extra-args\"\n\t\t\t# Ignore undefined, unused or unreferenced pre-processor macros\n\t\t\t\"unused-macros\"\n\t\t)\n\t\tforeach(WARN ${DISABLED_WARNINGS})\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE \"-Wno-${WARN}\")\n\t\tendforeach()\n\n\n\t\t# - Require enabled instruction sets.\n\t\tif(${PREFIX}TARGET_NATIVE)\n\t\t\ttarget_compile_options(${TARGET_NAME} PRIVATE\n\t\t\t\t\"-march=native\"\n\t\t\t)\n\t\t\tmessage(WARNING \"Targeting native architecture. Binaries will not be distributable to other systems!\")\n\t\tendif()\n\n\t\t# - Use fast unordered math if possible.\n\t\t# FIXME: Appears to not be supported.\n\n\t\t# - Don't export by default, require attributes.\n\t\t# add_compile_options(\"-fvisibility=hidden\")\n\tendif()\nendfunction()\n\nfunction(streamfx_sanitize_name TEXT _OUTPUT_NAME _OUTPUT_TARGET _OUTPUT_OPTION)\n\tstring(REGEX REPLACE \"^[ \\t]+\" \"\" TEXT \"${TEXT}\")\n\tstring(REGEX REPLACE \"[ \\t]+$\" \"\" TEXT \"${TEXT}\")\n\tstring(REGEX REPLACE \"[^a-zA-Z0-9_-]+\" \"_\" TEXT2 \"${TEXT}\")\n\tstring(REGEX REPLACE \"_[_]+\" \"_\" TEXT2 \"${TEXT2}\")\n\tstring(TOUPPER \"${TEXT2}\" TEXT3)\n\n\tset(${_OUTPUT_NAME} \"${TEXT}\" PARENT_SCOPE)\n\tset(${_OUTPUT_TARGET} \"${TEXT2}\" PARENT_SCOPE)\n\tset(${_OUTPUT_OPTION} \"${TEXT3}\" PARENT_SCOPE)\nendfunction()\n\nfunction(streamfx_add_component COMPONENT_NAME)\n\tcmake_parse_arguments(PARSE_ARGV 1 _ARG\n\t\t\"\"\n\t\t\"RESOLVER\"\n\t\t\"\"\n\t)\n\n\t# Sanitize name for further use.\n\tstreamfx_sanitize_name(\"${COMPONENT_NAME}\" COMPONENT_NAME COMPONENT_SANITIZED_NAME COMPONENT_OPTION_NAME)\n\tset(COMPONENT_OPTION \"${PREFIX}COMPONENT_${COMPONENT_OPTION_NAME}\")\n\tset(COMPONENT_OPTION \"${COMPONENT_OPTION}\" PARENT_SCOPE)\n\n\t# Define the necessary targets.\n\tset(COMPONENT_TARGET \"StreamFX_${COMPONENT_SANITIZED_NAME}\")\n\tset(COMPONENT_TARGET \"${COMPONENT_TARGET}\" PARENT_SCOPE)\n\tset(COMPONENT_ALIAS \"StreamFX::${COMPONENT_SANITIZED_NAME}\")\n\tset(COMPONENT_ALIAS \"${COMPONENT_ALIAS}\" PARENT_SCOPE)\n\n\tstreamfx_add_library(${COMPONENT_TARGET} STATIC EXCLUDE_FROM_ALL)\n\tadd_library(${COMPONENT_ALIAS} ALIAS ${COMPONENT_TARGET})\n\tset_target_properties(${COMPONENT_TARGET} PROPERTIES\n\t\tCOMPONENT_LABEL \"${COMPONENT_NAME}\"\n\t\tCOMPONENT_NAME \"${COMPONENT_ALIAS}\"\n\t\tCOMPONENT_OPTION \"${COMPONENT_OPTION}\"\n\t)\n\n\t# Always depend on StreamFX::Core\n\ttarget_link_libraries(${COMPONENT_TARGET} PUBLIC $<LINK_LIBRARY:WHOLE_ARCHIVE,StreamFX_Core>)\n\n\t# Register the component globally.\n\tget_target_property(_DEPENDS StreamFX COMPONENT_DEPENDS)\n\tif(_DEPENDS)\n\t\tlist(APPEND _DEPENDS \"${COMPONENT_SANITIZED_NAME}\")\n\telse()\n\t\tset(_DEPENDS \"${COMPONENT_SANITIZED_NAME}\")\n\tendif()\n\tset_target_properties(StreamFX PROPERTIES \n\t\tCOMPONENT_DEPENDS \"${_DEPENDS}\"\n\t)\n\t\n\t# If there is a resolver function, register it.\n\tif(_ARG_RESOLVER)\n\t\tset_target_properties(${COMPONENT_TARGET} PROPERTIES\n\t\t\tCOMPONENT_RESOLVER \"${_ARG_RESOLVER}\"\n\t\t)\n\tendif()\n\n\t# Allow disabling this component.\n\tset(${COMPONENT_OPTION} ON CACHE BOOL \"Enable the ${COMPONENT_NAME} component?\")\n\tset(${COMPONENT_OPTION}_DISABLED OFF CACHE INTERNAL \"Disable the ${_NAME} component?\" FORCE)\n\n\t# Add common include directories\n\ttarget_include_directories(${COMPONENT_TARGET}\n\t\tPRIVATE\n\t\t\t\"${CMAKE_CURRENT_SOURCE_DIR}/source\"\n\t\tPUBLIC\n\t\t\t\"${CMAKE_CURRENT_SOURCE_DIR}/include\"\n\t)\n\n\t# Add files in common places.\n\tfile(GLOB_RECURSE TEMPLATES FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"templates/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_SOURCE_DIR}/templates\" PREFIX \"Templates\" FILES ${TEMPLATES})\n\n\tfile(GLOB_RECURSE DATA FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"data/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_SOURCE_DIR}/data\" PREFIX \"Data\" FILES ${DATA})\n\n\tfile(GLOB_RECURSE SOURCE_PRIVATE FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"ui/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_SOURCE_DIR}/ui\" PREFIX \"User-Interface Files\" FILES ${USERINTERFACE})\n\n\tfile(GLOB_RECURSE SOURCE_PRIVATE FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"source/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_SOURCE_DIR}/source\" PREFIX \"Private Files\" FILES ${SOURCE_PRIVATE})\n\tfile(GLOB_RECURSE UI_PRIVATE FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"source/ui/*\")\n\tfile(GLOB_RECURSE GENERATED_PRIVATE FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"${CMAKE_CURRENT_BINARY_DIR}/source/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_BINARY_DIR}/source\" PREFIX \"Private Files/Generated\" FILES ${GENERATED_PRIVATE})\n\n\tfile(GLOB_RECURSE SOURCE_PUBLIC FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"include/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_SOURCE_DIR}/include\" PREFIX \"Public Files\" FILES ${SOURCE_PUBLIC})\n\tfile(GLOB_RECURSE UI_PUBLIC FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"include/ui/*\")\n\tfile(GLOB_RECURSE GENERATED_PUBLIC FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"${CMAKE_CURRENT_BINARY_DIR}/include/*\")\n\tsource_group(TREE \"${CMAKE_CURRENT_BINARY_DIR}/include\" PREFIX \"Public Files/Generated\" FILES ${GENERATED_PUBLIC})\n\t\n\ttarget_sources(${COMPONENT_TARGET}\n\t\tPRIVATE\n\t\t\t${DATA}\n\t\t\t${TEMPLATES}\n\t\t\t${USERINTERFACE}\n\t\t\t${SOURCE_PRIVATE}\n\t\t\t${GENERATED_PRIVATE}\n\t\t\t${SOURCE_PUBLIC}\n\t\t\t${GENERATED_PUBLIC}\n\t)\n\n\t# Ignore data only files.\n\tset_source_files_properties(\n\t\t${DATA}\n\t\t${TEMPLATES}\n\t\t${USERINTERFACE}\n\t\tPROPERTIES\n\t\t\tHEADER_FILE_ONLY ON\n\t)\n\t\n\t# Enable Qt if needed\n\tset_target_properties(${TARGET_NAME} PROPERTIES\n\t\tAUTOUIC ON\n\t\tAUTOUIC_SEARCH_PATHS \"${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/ui\"\n\t\tAUTOMOC ON\n\t\tAUTORCC ON\n\t\tAUTOGEN_BUILD_DIR \"${CMAKE_CURRENT_BINARY_DIR}/generated\"\n\t)\n\tset_source_files_properties(\n\t\t${TEMPLATES}\n\t\t${SOURCE_PRIVATE}\n\t\t${GENERATED_PRIVATE}\n\t\t${SOURCE_PUBLIC}\n\t\t${GENERATED_PUBLIC}\n\t\tPROPERTIES\n\t\t\tSKIP_AUTOGEN ON\n\t\t\tSKIP_AUTOMOC ON\n\t\t\tSKIP_AUTORCC ON\n\t\t\tSKIP_AUTOUIC ON\n\t)\n\tset_source_files_properties(\n\t\t${UI_PRIVATE}\n\t\t${UI_PUBLIC}\n\t\tPROPERTIES\n\t\t\tSKIP_AUTOGEN OFF\n\t\t\tSKIP_AUTOMOC OFF\n\t\t\tSKIP_AUTORCC OFF\n\t\t\tSKIP_AUTOUIC OFF\n\t)\nendfunction()\n\nfunction(streamfx_has_component _NAME _OUTPUT)\n\tstreamfx_sanitize_name(\"${_NAME}\" _NAME _TARGET _OPTION)\n\n\tset(${_OUTPUT} OFF PARENT_SCOPE)\n\tif(TARGET \"StreamFX_${_TARGET}\")\t\t\n\t\tset(${_OUTPUT} ON PARENT_SCOPE)\n\tendif()\nendfunction()\n\nfunction(streamfx_enabled_component _NAME _OUTPUT)\n\tstreamfx_sanitize_name(\"${_NAME}\" _NAME _TARGET _OPTION)\n\tif(NOT TARGET \"StreamFX_${_TARGET}\")\n\t\tmessage(FATAL_ERROR \"Unknown component '${_NAME}'.\")\n\tendif()\n\n\tget_target_property(_OPTION \"StreamFX_${_TARGET}\" COMPONENT_OPTION)\n\tset(${_OUTPUT} OFF PARENT_SCOPE)\n\tif(${_OPTION} AND NOT (${_OPTION}_DISABLED))\n\t\tset(${_OUTPUT} ON PARENT_SCOPE)\n\tendif()\t\nendfunction()\n\n# Use this to add a dependency on another component.\nfunction(streamfx_add_component_dependency _NAME)\n\tcmake_parse_arguments(PARSE_ARGV 1 _ARG\n\t\t\"OPTIONAL\"\n\t\t\"\"\n\t\t\"\"\n\t)\n\n\tstreamfx_sanitize_name(\"${_NAME}\" _NAME _TARGET _OPTION)\n\n\tset(DEPENDENCY \"${_TARGET}\")\n\tif(_ARG_OPTIONAL)\n\t\tlist(APPEND DEPENDENCY \"OPTIONAL\")\n\tendif()\n\tstring(REPLACE \";\" \"\\\\;\" DEPENDENCY \"${DEPENDENCY}\")\n\n\tget_target_property(DEPENDS \"${COMPONENT_TARGET}\" COMPONENT_DEPENDS)\n\tif(DEPENDS)\n\t\tlist(APPEND DEPENDS \"${DEPENDENCY}\")\n\telse()\n\t\tset(DEPENDS \"${DEPENDENCY}\")\n\tendif()\n\tset_target_properties(\"${COMPONENT_TARGET}\" PROPERTIES COMPONENT_DEPENDS \"${DEPENDS}\")\nendfunction()\n\n# Use this to disable a component via script.\nfunction(streamfx_disable_component _NAME)\n\tcmake_parse_arguments(PARSE_ARGV 1 _ARG\n\t\t\"\"\n\t\t\"REASON\"\n\t\t\"\"\n\t)\n\n\tstreamfx_sanitize_name(\"${_NAME}\" _NAME _TARGET _OPTION)\n\tif(NOT (_TARGET MATCHES \"^StreamFX_\"))\n\t\tset(_TARGET \"StreamFX_${_TARGET}\")\n\tendif()\n\n\t# If the component doesn't exist, skip it.\n\tif(NOT TARGET ${_TARGET})\n\t\tmessage(WARNING \"Not disabling invalid component '${_NAME}'.\")\n\t\treturn()\n\tendif()\n\t\n\tget_target_property(_LABEL ${_TARGET} COMPONENT_LABEL)\n\tget_target_property(_OPTION ${_TARGET} COMPONENT_OPTION)\n\n\tCacheSet(${_OPTION}_DISABLED ON)\n\tif(_ARG_REASON)\n\t\tmessage(STATUS \"[${_LABEL}] Disabled due to: ${_ARG_REASON}\")\n\tendif()\nendfunction()\n\n################################################################################\n# Register Library\n################################################################################\nstreamfx_add_library(StreamFX MODULE) # We are a module for libOBS.\n\n# Ensure there is at least one file.\nif(D_PLATFORM_WINDOWS)\n\ttarget_sources(StreamFX\n\t\tPRIVATE\n\t\t\t\"source/windll.cpp\"\n\t)\nelse()\n\ttarget_sources(StreamFX\n\t\tPRIVATE\n\t\t\t\"/dev/null\"\n\t)\nendif()\n\n# version.rc (can't be part of a static library)\nif(D_PLATFORM_WINDOWS) # Windows-exclusive\n\t# Version Resource\n\tset(PROJECT_PRODUCT_NAME \"${PROJECT_FULL_NAME}\")\n\tset(PROJECT_COMPANY_NAME \"${PROJECT_AUTHORS}\")\n\tset(PROJECT_COPYRIGHT \"${PROJECT_AUTHORS} © ${PROJECT_COPYRIGHT_YEARS}\")\n\tset(PROJECT_LEGAL_TRADEMARKS_1 \"\")\n\tset(PROJECT_LEGAL_TRADEMARKS_2 \"\")\n\n\tconfigure_file(\n\t\t\"templates/windows/version.rc.in\"\n\t\t\"version.rc\"\n\t)\n\ttarget_sources(StreamFX PRIVATE\n\t\t\"${PROJECT_BINARY_DIR}/version.rc\"\n\t)\nendif()\nset_target_properties(StreamFX PROPERTIES\n\t# Version\n\tMACHO_COMPATIBILITY_VERSION ${_VERSION_MAJOR}.${_VERSION_MINOR}\n\tSOVERSION ${_VERSION_MAJOR}.${_VERSION_MINOR}\n\tMACHO_CURRENT_VERSION ${PROJECT_VERSION}\n\tVERSION ${PROJECT_VERSION}\n)\n\n################################################################################\n# Add Core\n################################################################################\nstreamfx_add_library(StreamFX_Core STATIC EXCLUDE_FROM_ALL)\nadd_library(StreamFX::Core ALIAS StreamFX_Core)\n\n# Enable Qt\nset_target_properties(StreamFX_Core PROPERTIES\n\tAUTOUIC ON\n\tAUTOUIC_SEARCH_PATHS \"${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/ui\"\n\tAUTOMOC ON\n\tAUTORCC ON\n\tAUTOGEN_BUILD_DIR \"${CMAKE_CURRENT_BINARY_DIR}/qt\"\n)\n\n# Default Links\ntarget_link_libraries(StreamFX_Core\n\tPUBLIC\n\t\tCURL::libcurl\n\t\tQt6::Core\n\t\tQt6::Gui\n\t\tQt6::Widgets\n\t\tOBS::obs-frontend-api\n\t\tOBS::libobs\n)\n\n# Default Include Dirs\ntarget_include_directories(StreamFX_Core \n\tPRIVATE\n\t\t\"${PROJECT_SOURCE_DIR}/source/ui\"\n\t\t\"${PROJECT_BINARY_DIR}/qt\"\n\tPUBLIC\n\t\t\"${PROJECT_SOURCE_DIR}/source\"\n\t\t\"${PROJECT_SOURCE_DIR}/include\"\n\t\t\"${PROJECT_BINARY_DIR}/generated\"\n\t\t${JSON_INCLUDE_DIR}\n)\n\n# Templates\nfile(GLOB_RECURSE PROJECT_TEMPLATES FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"templates/*\")\nsource_group(TREE \"${PROJECT_SOURCE_DIR}/templates\" PREFIX \"Templates\" FILES ${PROJECT_TEMPLATES})\nset_source_files_properties(${PROJECT_TEMPLATES} PROPERTIES\n\tHEADER_FILE_ONLY ON\n\tSKIP_AUTOGEN ON\n\tSKIP_AUTOMOC ON\n\tSKIP_AUTORCC ON\n\tSKIP_AUTOUIC ON\n)\ntarget_sources(StreamFX_Core PRIVATE ${PROJECT_TEMPLATES})\n\n# Generated\n#- config.hpp\nconfigure_file(\n\t\"templates/config.hpp.in\"\n\t\"generated/config.hpp\"\n)\n#- version.hpp\nconfigure_file(\n\t\"templates/version.hpp.in\"\n\t\"generated/version.hpp\"\n)\n#- module.cpp\nconfigure_file(\n\t\"templates/module.cpp.in\"\n\t\"generated/module.cpp\"\n)\n#- Add all generated files\nfile(GLOB_RECURSE PROJECT_PRIVATE_GENERATED FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"${PROJECT_BINARY_DIR}/generated/*\")\nsource_group(TREE \"${PROJECT_BINARY_DIR}/generated\" PREFIX \"Private Files/Generated\" FILES ${PROJECT_PRIVATE_GENERATED})\nset_source_files_properties(${PROJECT_PRIVATE_GENERATED} PROPERTIES\n\tSKIP_AUTOGEN ON\n\tSKIP_AUTOMOC ON\n\tSKIP_AUTORCC ON\n\tSKIP_AUTOUIC ON\n)\ntarget_sources(StreamFX_Core PRIVATE ${PROJECT_PRIVATE_GENERATED})\n\n# Source\nfile(GLOB_RECURSE PROJECT_PRIVATE FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"${PROJECT_SOURCE_DIR}/source/*\")\nlist(REMOVE_ITEM PROJECT_PRIVATE \"${PROJECT_SOURCE_DIR}/source/windll.cpp\") # Only used by StreamFX, not part of StreamFX::Core\nsource_group(TREE \"${PROJECT_SOURCE_DIR}/source\" PREFIX \"Private Files\" FILES ${PROJECT_PRIVATE})\nset_source_files_properties(${PROJECT_PRIVATE} PROPERTIES\n\tSKIP_AUTOGEN ON\n\tSKIP_AUTOMOC ON\n\tSKIP_AUTORCC ON\n\tSKIP_AUTOUIC ON\n)\ntarget_sources(StreamFX_Core PRIVATE ${PROJECT_PRIVATE})\n\n# User-Interface Source\nfile(GLOB_RECURSE PROJECT_PRIVATE_UI FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"${PROJECT_SOURCE_DIR}/source/ui/*\")\nlist(APPEND PROJECT_PRIVATE_UI \"${PROJECT_SOURCE_DIR}/source/obs/browser/obs-browser-panel.hpp\")\nset_source_files_properties(${PROJECT_PRIVATE_UI} PROPERTIES\n\tSKIP_AUTOGEN OFF\n\tSKIP_AUTOMOC OFF\n\tSKIP_AUTORCC OFF\n\tSKIP_AUTOUIC OFF\n)\n\n# User-Interface Definitions\nfile(GLOB_RECURSE PROJECT_UI FOLLOW_SYMLINKS CONFIGURE_DEPENDS \"${PROJECT_SOURCE_DIR}/ui/*\")\nsource_group(TREE \"${PROJECT_SOURCE_DIR}/ui\" PREFIX \"User-Interface Files\" FILES ${PROJECT_UI})\nset_source_files_properties(${PROJECT_UI} PROPERTIES\n\tHEADER_FILE_ONLY ON\n)\ntarget_sources(StreamFX_Core PRIVATE ${PROJECT_UI})\n\n# Windows\nif(D_PLATFORM_WINDOWS)\n\t# Disable/Enable a ton of things.\n\ttarget_compile_definitions(StreamFX_Core PRIVATE\n\t\t# Microsoft Visual C++\n\t\t_CRT_SECURE_NO_WARNINGS\n\t\t_ENABLE_EXTENDED_ALIGNED_STORAGE\n\t\t# windows.h\n\t\tWIN32_LEAN_AND_MEAN\n\t\tNOGPICAPMASKS\n\t\tNOVIRTUALKEYCODES\n\t\t#NOWINMESSAGES\n\t\tNOWINSTYLES\n\t\tNOSYSMETRICS\n\t\tNOMENUS\n\t\tNOICONS\n\t\tNOKEYSTATES\n\t\tNOSYSCOMMANDS\n\t\tNORASTEROPS\n\t\t#NOSHOWWINDOW\n\t\tNOATOM\n\t\tNOCLIPBOARD\n\t\tNOCOLOR\n\t\t#NOCTLMGR\n\t\tNODRAWTEXT\n\t\t#NOGDI\n\t\tNOKERNEL\n\t\t#NOUSER\n\t\t#NONLS\n\t\tNOMB\n\t\tNOMEMMGR\n\t\tNOMETAFILE\n\t\tNOMINMAX\n\t\t#NOMSG\n\t\tNOOPENFILE\n\t\tNOSCROLL\n\t\tNOSERVICE\n\t\tNOSOUND\n\t\t#NOTEXTMETRIC\n\t\tNOWH\n\t\tNOWINOFFSETS\n\t\tNOCOMM\n\t\tNOKANJI\n\t\t#NOHELP\n\t\tNOPROFILER\n\t\tNODEFERWINDOWPOS\n\t\tNOMCX\n\t\tNOIME\n\t\tNOMDI\n\t\tNOINOUT\n\t)\nendif()\n\n# OpenGL via GLAD\nif(NOT TARGET StreamFX::GLAD)\n\tadd_library(StreamFX_GLAD STATIC\n\t\t\"${PROJECT_SOURCE_DIR}/third-party/khronos/glad/src/gl.c\"\n\t)\n\ttarget_include_directories(StreamFX_GLAD\n\t\tPUBLIC\n\t\t\t\"${PROJECT_SOURCE_DIR}/third-party/khronos/glad/include\"\n\t)\n\tif(D_PLATFORM_WINDOWS)\n\t\ttarget_sources(StreamFX_GLAD\n\t\t\tPRIVATE\n\t\t\t\t\"${PROJECT_SOURCE_DIR}/third-party/khronos/glad/src/wgl.c\"\n\t\t)\n\telseif(D_PLATFORM_LINUX)\n\t\ttarget_sources(StreamFX_GLAD\n\t\t\tPRIVATE\n\t\t\t\t\"${PROJECT_SOURCE_DIR}/third-party/khronos/glad/src/glx.c\"\n\t\t)\n\tendif()\n\n\t# Requires for shared/static mixing.\n\tset_property(TARGET StreamFX_GLAD PROPERTY POSITION_INDEPENDENT_CODE ON)\n\n\tadd_library(StreamFX::GLAD ALIAS StreamFX_GLAD)\nendif()\n\ntarget_link_libraries(StreamFX_Core PUBLIC StreamFX::GLAD)\n\n################################################################################\n# Components\n################################################################################\n# As the above monolithic approach started to show its weaknesses, it was time\n# for an improved system which suffers under less issues. This new component\n# system should address the main necessary parts,\n\n#- Registration\nfile(GLOB COMPONENTS RELATIVE ${PROJECT_SOURCE_DIR} CONFIGURE_DEPENDS ${PROJECT_SOURCE_DIR}/components/*)\nforeach(COMPONENT ${COMPONENTS})\n\t# Ignore directories with no CMakeLists.txt\n\tif(EXISTS \"${PROJECT_SOURCE_DIR}/${COMPONENT}/CMakeLists.txt\")\n\t\tadd_subdirectory(${COMPONENT} EXCLUDE_FROM_ALL)\n\tendif()\nendforeach()\n\nget_target_property(_UNRESOLVED StreamFX COMPONENT_DEPENDS)\nset(_RESOLVED \"\")\nset(_DISABLED \"\")\n\n#- Cleanup\nlist(REMOVE_DUPLICATES _UNRESOLVED)\nforeach(_ENTITY ${_UNRESOLVED})\n\t# Remove any invalid entries.\n\tif(NOT TARGET \"StreamFX_${_ENTITY}\")\n\t\tmessage(WARNING \"Encountered invalid component '${_ENTITY}', removing...\")\n\t\tlist(REMOVE_ITEM _UNRESOLVED \"${_ENTITY}\")\n\t\tcontinue()\n\tendif()\nendforeach()\n\n#- Resolve Dependencies in a loop\nset(_UNRESOLVED_LOOP 0)\nwhile(_UNRESOLVED)\n\tMATH(EXPR _UNRESOLVED_LOOP \"${_UNRESOLVED_LOOP}+1\")\t\n\tif(_UNRESOLVED_LOOP GREATER_EQUAL 10)\n\t\tmessage(FATAL_ERROR \"Infinite loop while resolving components: ${_UNRESOLVED}\")\n\tendif()\n\n\t# Attempt to resolve while there are still unresolved entries.\n\tforeach(_ENTITY ${_UNRESOLVED})\n\t\tset(RENTITY \"StreamFX_${_ENTITY}\")\n\t\t\n\t\tget_target_property(_ALIAS \"${RENTITY}\" COMPONENT_NAME)\n\t\tget_target_property(_LABEL \"${RENTITY}\" COMPONENT_LABEL)\n\t\tget_target_property(_OPTION \"${RENTITY}\" COMPONENT_OPTION)\n\t\tget_target_property(_DEPENDS \"${RENTITY}\" COMPONENT_DEPENDS)\n\t\tget_target_property(_RESOLVER \"${RENTITY}\" COMPONENT_RESOLVER)\n\t\n\t\t# Remove any that have been disabled.\n\t\tif(NOT ${_OPTION})\n\t\t\tmessage(STATUS \"[${_LABEL}] Disabled by user.\")\n\t\t\tlist(REMOVE_ITEM _UNRESOLVED \"${_ENTITY}\")\n\t\t\tlist(APPEND _DISABLED \"${_ENTITY}\")\n\t\t\tcontinue()\n\t\telseif(${_OPTION}_DISABLED) # Test for pre-resolve disabling.\n\t\t\tmessage(STATUS \"[${_LABEL}] Disabled by build script.\")\n\t\t\tlist(REMOVE_ITEM _UNRESOLVED \"${_ENTITY}\")\n\t\t\tlist(APPEND _DISABLED \"${_ENTITY}\")\n\t\t\tcontinue()\n\t\tendif()\n\n\t\t# Check if all dependencies are resolved.\n\t\tset(_HAS_UNRESOLVED_DEPENDS OFF)\n\t\tset(_HAS_DISABLED_DEPENDS OFF)\n\t\tset(_HAS_UNRESOLVED_OPTIONAL_DEPENDS OFF)\n\t\tif(_DEPENDS)\n\t\t\tforeach(_DEPEND ${_DEPENDS})\n\t\t\t\tlist(GET _DEPEND 0 _ENTITY2)\n\t\t\t\tset(RENTITY2 \"StreamFX_${_ENTITY2}\")\n\t\t\t\t\n\t\t\t\tget_target_property(_ENTITY2_LABEL \"${RENTITY2}\" COMPONENT_LABEL)\n\n\t\t\t\tif(NOT (\"OPTIONAL\" IN_LIST _DEPEND))\n\t\t\t\t\tif(\"${_ENTITY2}\" IN_LIST _DISABLED)\n\t\t\t\t\t\tmessage(\"[${_LABEL}] Required dependency '${_ENTITY2_LABEL}' is disabled.\")\n\t\t\t\t\t\tset(_HAS_DISABLED_DEPENDS ON)\n\t\t\t\t\tendif()\n\t\t\t\t\tif(\"${_ENTITY2}\" IN_LIST _UNRESOLVED)\n\t\t\t\t\t\tset(_HAS_UNRESOLVED_DEPENDS ON)\n\t\t\t\t\tendif()\n\t\t\t\telse()\n\t\t\t\t\tif(\"${_ENTITY2}\" IN_LIST _UNRESOLVED)\n\t\t\t\t\t\tset(_HAS_UNRESOLVED_OPTIONAL_DEPENDS ON)\n\t\t\t\t\tendif()\n\t\t\t\tendif()\n\t\t\tendforeach()\n\t\t\tlist(JOIN _DEPENDS \", \" _DEPENDS)\n\t\telse()\n\t\t\tset(_DEPENDS \"\")\n\t\tendif()\n\t\tif(_HAS_DISABLED_DEPENDS) # A required dependency is disabled, so disable this entry.\n\t\t\tmessage(STATUS \"[${_LABEL}] Disabled by dependency.\")\n\t\t\tlist(REMOVE_ITEM _UNRESOLVED \"${_ENTITY}\")\n\t\t\tlist(APPEND _DISABLED \"${_ENTITY}\")\n\t\t\tstreamfx_disable_component(${_ENTITY})\n\t\t\tcontinue()\n\t\telseif(_HAS_UNRESOLVED_DEPENDS)\n\t\t\tcontinue()\n\t\telseif(_HAS_UNRESOLVED_OPTIONAL_DEPENDS AND (_UNRESOLVED_LOOP LESS 8))\n\t\t\t# Temporarily skip this element while there are still remaining loops.\n\t\t\tcontinue()\n\t\tendif()\n\n\t\t# Call Resolver function\n\t\tif(_RESOLVER)\n\t\t\tset(COMPONENT_TARGET \"${RENTITY}\")\n\t\t\tset(COMPONENT_ALIAS \"${_ALIAS}\")\n\t\t\tset(COMPONENT_OPTION \"${_OPTION}\")\n\t\t\tcmake_language(CALL ${_RESOLVER})\n\t\tendif()\n\t\tif(${_OPTION}_DISABLED) # Test for resolve disabling.\n\t\t\tmessage(STATUS \"[${_LABEL}] Disabled by resolver.\")\n\t\t\tlist(REMOVE_ITEM _UNRESOLVED \"${_ENTITY}\")\n\t\t\tlist(APPEND _DISABLED \"${_ENTITY}\")\n\t\t\tcontinue()\n\t\tendif()\n\n\t\t# Finally, if everything went well, we now have a resolved entity.\n\t\tlist(REMOVE_ITEM _UNRESOLVED \"${_ENTITY}\")\n\t\tlist(APPEND _RESOLVED \"${_ENTITY}\")\n\t\tmessage(STATUS \"[${_LABEL}] Enabled. Depends: ${_DEPENDS}\")\n\tendforeach()\nendwhile()\n\n#- Linking\nforeach(_ENTITY ${_RESOLVED})\n\tset(RENTITY \"StreamFX_${_ENTITY}\")\n\tget_target_property(_DEPENDS \"${RENTITY}\" COMPONENT_DEPENDS)\n\n\t# Finally if everything is correct, do things.\n\tif(_DEPENDS)\n\t\tforeach(_DEPEND ${_DEPENDS})\n\t\t\tlist(GET _DEPEND 0 _ENTITY2)\n\t\t\tset(RENTITY2 \"StreamFX_${_ENTITY2}\")\n\n\t\t\tstreamfx_enabled_component(${_ENTITY2} T_CHECK)\n\t\t\tif(T_CHECK)\n\t\t\t\ttarget_link_libraries(${RENTITY} PUBLIC $<LINK_LIBRARY:WHOLE_ARCHIVE,${RENTITY2}>)\n\t\t\tendif()\n\t\tendforeach()\n\tendif()\n\n\ttarget_link_libraries(StreamFX PUBLIC $<LINK_LIBRARY:WHOLE_ARCHIVE,${RENTITY}>)\nendforeach()\n\ntarget_link_libraries(StreamFX PUBLIC $<LINK_LIBRARY:WHOLE_ARCHIVE,StreamFX_Core>)\n\n################################################################################\n# Resources\n################################################################################\n# This needs to be handled separately, as CMake does not propagate Resources \n# between dependencies. This feels like a bug in CMake, but it is better than\n# not doing anything at all. Might eventually need to revise this when we start\n# generating data files.\n\n# Data\nfile(GLOB_RECURSE PROJECT_DATA \"data/*\")\nsource_group(TREE \"${PROJECT_SOURCE_DIR}/data\" PREFIX \"Data\" FILES ${PROJECT_DATA})\nif(D_PLATFORM_MAC)\n\tforeach(FILE IN LISTS PROJECT_DATA) # Data location\n\t\tcmake_path(ABSOLUTE_PATH FILE OUTPUT_VARIABLE FILE_PATH)\n\t\tcmake_path(RELATIVE_PATH FILE_PATH BASE_DIRECTORY \"${PROJECT_SOURCE_DIR}/data/\")\n\t\tcmake_path(GET FILE_PATH PARENT_PATH FILE_PATH)\n\t\tset_source_files_properties(\"${FILE}\" PROPERTIES\n\t\t\tMACOSX_PACKAGE_LOCATION \"Resources/${FILE_PATH}\"\n\t\t)\n\tendforeach()\nendif()\n\n# Media\nfile(GLOB_RECURSE PROJECT_MEDIA \"media/*\")\nsource_group(TREE \"${PROJECT_SOURCE_DIR}/media\" PREFIX \"Media\" FILES ${PROJECT_MEDIA})\nif(D_PLATFORM_MAC)\n\t#- Bundle Icon location\n\tset_source_files_properties(\"media/icon.png\" PROPERTIES\n\t\tMACOSX_PACKAGE_LOCATION \"Resources\"\n\t)\nendif()\n\n# Add all Resources to StreamFX\nset_source_files_properties(${PROJECT_DATA} ${PROJECT_MEDIA} PROPERTIES\n\tHEADER_FILE_ONLY ON\n)\ntarget_sources(StreamFX PRIVATE ${PROJECT_DATA} ${PROJECT_MEDIA})\n\n################################################################################\n# Installation\n################################################################################\n\nif(STANDALONE)\n\tif(D_PLATFORM_WINDOWS)\n\t\tinstall(\n\t\t\tTARGETS StreamFX\n\t\t\tRUNTIME DESTINATION \"obs-plugins/${D_PLATFORM_BITS}bit/\" COMPONENT StreamFX\n\t\t\tLIBRARY DESTINATION \"obs-plugins/${D_PLATFORM_BITS}bit/\" COMPONENT StreamFX\n\t\t)\n\t\tinstall(\n\t\t\tDIRECTORY \"data/\"\n\t\t\tDESTINATION \"data/obs-plugins/StreamFX/\"\n\t\t)\n\t\tif(MSVC)\n\t\t\tinstall(\n\t\t\t\tFILES $<TARGET_PDB_FILE:StreamFX>\n\t\t\t\tDESTINATION \"obs-plugins/${D_PLATFORM_BITS}bit/\"\n\t\t\t\tOPTIONAL\n\t\t\t)\n\t\tendif()\n\telseif(D_PLATFORM_LINUX)\n\t\tif(STRUCTURE_PACKAGEMANAGER)\n\t\t\tinstall(\n\t\t\t\tTARGETS StreamFX\n\t\t\t\tRUNTIME DESTINATION \"lib/obs-plugins/\" COMPONENT StreamFX\n\t\t\t\tLIBRARY DESTINATION \"lib/obs-plugins/\" COMPONENT StreamFX\n\t\t\t\tPERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t\t)\n\t\t\tinstall(\n\t\t\t\tDIRECTORY \"data/\"\n\t\t\t\tDESTINATION \"share/obs/obs-plugins/StreamFX\"\n\t\t\t\tCOMPONENT StreamFX\n\t\t\t\tFILE_PERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t\t\tDIRECTORY_PERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t\t)\n\t\telse()\n\t\t\tinstall(\n\t\t\t\tTARGETS StreamFX\n\t\t\t\tRUNTIME DESTINATION \"plugins/StreamFX/bin/${D_PLATFORM_BITS}bit/\" COMPONENT StreamFX\n\t\t\t\tLIBRARY DESTINATION \"plugins/StreamFX/bin/${D_PLATFORM_BITS}bit/\" COMPONENT StreamFX\n\t\t\t\tPERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t\t)\n\t\t\tinstall(\n\t\t\t\tDIRECTORY \"data/\"\n\t\t\t\tDESTINATION \"plugins/StreamFX/data/\"\n\t\t\t\tCOMPONENT StreamFX\n\t\t\t\tFILE_PERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t\t\tDIRECTORY_PERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t\t)\n\t\tendif()\n\telseif(D_PLATFORM_MAC)\n\t\t# Bundle Information\n\t\tset(MACOSX_BUNDLE_BUNDLE_NAME \"StreamFX\")\n\t\tset(MACOSX_BUNDLE_BUNDLE_VERSION \"${PROJECT_VERSION}\")\n\t\tset(MACOSX_BUNDLE_COPYRIGHT \"${PROJECT_COPYRIGHT}\")\n\t\tset(MACOSX_BUNDLE_GUI_IDENTIFIER \"${PROJECT_IDENTIFER}\")\n\t\tset(MACOSX_BUNDLE_ICON_FILE \"icon.png\")\n\t\tset(MACOSX_BUNDLE_VERSION_STRING \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}\")\n\t\tset(MACOSX_BUNDLE_LONG_VERSION_STRING \"${_VERSION}\")\n\t\tset(MACOSX_BUNDLE_SHORT_VERSION_STRING \"${PROJECT_VERSION}\")\n\t\tset_target_properties(StreamFX PROPERTIES\n\t\t\tBUNDLE ON\n\t\t\tBUNDLE_EXTENSION \"plugin\"\n\t\t\tOUTPUT_NAME StreamFX\n\t\t\tMACOSX_BUNDLE_INFO_PLIST \"${PROJECT_SOURCE_DIR}/templates/macos/Info.plist.in\"\n\t\t\tXCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER \"${MACOSX_BUNDLE_GUI_IDENTIFIER}\"\n\t\t)\n\n\t\tinstall(\n\t\t\tTARGETS StreamFX\n\t\t\tRUNTIME DESTINATION \".\" COMPONENT StreamFX\n\t\t\tLIBRARY DESTINATION \".\" COMPONENT StreamFX\n\t\t\tBUNDLE DESTINATION \".\" COMPONENT StreamFX\n\t\t\tPERMISSIONS WORLD_EXECUTE;WORLD_READ;OWNER_EXECUTE;OWNER_READ;OWNER_WRITE;GROUP_EXECUTE;GROUP_READ;GROUP_WRITE\n\t\t)\n\tendif()\nelse()\n\tif(COMMAND setup_plugin_target)\n\t\tsetup_plugin_target(StreamFX)\n\t\t# Seems like we lost the ability to customize which directoy resources are in, and instead are forced to use '/data'.\n\telseif(COMMAND install_obs_plugin_with_data)\n\t\tinstall_obs_plugin_with_data(StreamFX data)\n\tendif()\nendif()\n\n################################################################################\n# Packaging\n################################################################################\n\nif(STANDALONE)\n\t# Packaging\n\tif(NOT PACKAGE_SUFFIX)\n\t\tset(_PACKAGE_SUFFIX_OVERRIDE \"${_VERSION_THIN}\")\n\telse()\n\t\tset(_PACKAGE_SUFFIX_OVERRIDE \"${PACKAGE_SUFFIX}\")\n\tendif()\n\tset(_PACKAGE_FULL_NAME \"${PACKAGE_PREFIX}/${PACKAGE_NAME}-${_PACKAGE_SUFFIX_OVERRIDE}\")\n\n\tif(D_PLATFORM_WINDOWS)\n\t\t## Installer (InnoSetup)\n\t\tget_filename_component(ISS_FILES_DIR \"${CMAKE_INSTALL_PREFIX}\" ABSOLUTE)\n\t\tfile(TO_NATIVE_PATH \"${ISS_FILES_DIR}\" ISS_FILES_DIR)\n\n\t\tget_filename_component(ISS_PACKAGE_DIR \"${PACKAGE_PREFIX}\" ABSOLUTE)\n\t\tfile(TO_NATIVE_PATH \"${ISS_PACKAGE_DIR}\" ISS_PACKAGE_DIR)\n\n\t\tget_filename_component(ISS_SOURCE_DIR \"${PROJECT_SOURCE_DIR}\" ABSOLUTE)\n\t\tfile(TO_NATIVE_PATH \"${ISS_SOURCE_DIR}\" ISS_SOURCE_DIR)\n\n\t\tget_filename_component(ISS_MSVCHELPER_PATH \"${msvc-redist-helper_BUILD_DIR}\" ABSOLUTE)\n\t\tfile(TO_NATIVE_PATH \"${ISS_MSVCHELPER_PATH}\" ISS_MSVCHELPER_PATH)\n\n\t\tconfigure_file(\n\t\t\t\"templates/windows/installer.iss.in\"\n\t\t\t\"installer.iss\"\n\t\t)\n\telseif(D_PLATFORM_MAC)\n\t\t# .pkg Installer\n\t\tset(PACKAGES_PATH_NAME \"StreamFX\")\n\t\tset(PACKAGES_PATH_NAME \"${PACKAGES_PATH_NAME}.plugin\")\n\t\tconfigure_file(\n\t\t\t\"templates/macos/installer.pkgproj.in\"\n\t\t\t\"installer.pkgproj\"\n\t\t)\n\telseif(D_PLATFORM_LINUX)\n\t\tadd_custom_target(\n\t\t\tPACKAGE\n\t\t\t${CMAKE_COMMAND} -E tar cfv \"${_PACKAGE_FULL_NAME}.7z\" --format=7zip --\n\t\t\t\t\".\"\n\t\t\tWORKING_DIRECTORY \"${CMAKE_INSTALL_PREFIX}\"\n\t\t)\n\tendif()\nendif()\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.3603515625,
          "content": "* @xaymar\n/data/examples/filter/rounded-rect.effect @carlosbaraza\n/data/examples/shaders/filter/bulge_pinch.effect @radeghast-ffxiv\n/data/examples/shaders/filter/swirl.effect @radeghast-ffxiv\n/data/examples/shaders/filter/wave.effect @radeghast-ffxiv\n/data/examples/shaders/filter/zigzag.effect @radeghast-ffxiv\n\n# Security critical owners\n/.github @xaymar\n/ci @xaymar\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.076171875,
          "content": "# Contributing\nThis document intends to teach you the proper way to contribute to the project as a set of guidelines. While they aren't always enforced, your chances of your code being accepted are significantly higher when you follow these. For smaller changes, we might opt to squash your changes to apply the guidelines below to your contribution.\n\n<details open><summary><h2 style=\"display: inline-block;\">Repository & Commits</h2></summary>\n\nAs this is a rather large project, we have certain rules to follow when contributing via git.\n\n### Linear History\nWe follow the paradigm of linear history which forbids branches from being merged, thus changes made on branches are `git rebase`d back onto the root. This simplifies the code history significantly, but makes reverting changes more difficult.\n\n❌ `git merge`  \n✅ `git rebase`\n\n### Commits\nA commit should be containing a single change, even if it spans multiple units, and has the following format:\n\n```\nprefix: short description\n\noptional long description\n```\n\nThe short description should be no longer than 120 characters and focus on the important things. The long description is optional, but should be included for larger changes.\n\n#### The appropriate `prefix`\n\n<table>\n\t<tr>\n\t\t<th>Path(s)</th>\n\t\t<th>Prefix</th>\n\t\t<th>Example</th>\n\t</tr>\n\t<tr>\n\t\t<td>\n\t\t\tdata/locale\n\t\t</td>\n\t\t<td>locale</td>\n\t\t<td>\n\t\t\t<code>data/locale/en-US.ini</code> -> <code>locale</code>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td>components/name</td>\n\t\t<td>name</td>\n\t\t<td>\n\t\t\t<code>components/shader</code> -> <code>shader</code>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td>\n\t\t\tsource<br>\n\t\t\ttemplates<br>\n\t\t\tdata<br>\n\t\t\tui\n\t\t</td>\n\t\t<td>core</td>\n\t\t<td>\n\t\t\t<code>ui/main.ui</code> -> <code>core</code>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td>Anything else</td>\n\t\t<td><b>Omit the prefix</b></td>\n\t\t<td></td>\n\t</tr>\n</table>\n\nIf multiple match, apply the prefix that changes the most files. If all are equal, alphabetically sort the prefixes and list comma separated.\n\n</details>\n\n\n<details open><summary><h2 style=\"display: inline-block;\">Coding</h2></summary>\n\n### Documentation\nThe short form of the this part is **Code != Documentation**. Documentation is what you intend your Code to do, while Code is what it actually does. If your Code mismatches the Documentation, it is time to fix the Code, unless the change is a new addition in terms of behavior or functionality. Note that by this we don't mean to document things like `1 + 1` but instead things like the following:\n\n```c++\nint32_t idepth         = static_cast<int32_t>(depth);\nint32_t size           = static_cast<int32_t>(pow(2l, idepth));\nint32_t grid_size      = static_cast<int32_t>(pow(2l, (idepth / 2)));\nint32_t container_size = static_cast<int32_t>(pow(2l, (idepth + (idepth / 2))));\n```\n\n```c++\nclass magic_class {\n\tvoid do_magic_thing(float magic_number) {\n\t\t// Lots and lots of SIMD code that does a magic thing...\n\t}\n}\n```\n\nDocumenting what a block of Code does not only helps you, it also helps other contributors understand what this Code is supposed to do. While you may be able to read your own Code (at least for now), there is no guarantee that either you or someone else will be able to read it in the future. Not only that, but it makes spotting mistakes and fixing them easier, since we have Documentation to tell us what it is supposed to do!\n\n### Naming & Casing\nThe project isn't too strict about variable naming as well as casing, but we do prefer a universal style across all code. While this may appear as removing your individuality from the code, it ultimately serves the purpose of making it easier to jump from one block of code to the other, without having to guess at what this code now does.\n\nAdditionally we prefer it when things are named by what they either do or what they contain, instead of having the entire alphabet spelled out in different arrangements. While it is fine to have chaos in your own Code for your private or hobby projects, it is not fine to submit such code to other projects.\n\n#### Macros\n- Casing: ELEPHANT_CASE\n- Separator: `_`\n- Prefixes: Optional\n\t- `S_` for global values\n\t- `ST_` for local values\n\t- `D_` for simple functions\n\t- `P_` for complex functions\n- Suffixes: No\n\n##### Example\n```c++\n#define EXAMPLE FALSE // ❌\n#define S_PI 3.14141 // ✔ (in .h and .hpp files)\n#define ST_PI2 S_PI / 2.0 // ✔\n#define D_(x) S_PI * x // ✔\n#define P_(x, y) double_t x(double_t a, double_t b) { return a * b * y; } // ✔\n```\n\n#### Namespaces\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: None\n- Suffixes: None\n\n##### Example\n```c++\nnamespace BLA {}; // ❌\nnamespace a_space {}; // ✔\n```\n\n#### Type Definitions\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: No\n- Suffixes: `_t`\n\nExample:\n```c++\ntypedef int32_t my_type; // ❌\ntypedef int32_t my_type_t; // ✔\n```\n\n#### Enumerations\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: No\n- Suffixes: No\n\n##### Entries\n- Casing: ELEPHANT_CASE\n- Separator: `_`\n- Prefixes: Conditional\n\t- `enum`: `STREAMFX_<ENUM_NAME>_`\n\t- `enum class`: None\n- Suffixes: No\n\n##### Example\n```c++\nenum my_enum { // ✔\n\tSTREAMFX_MY_ENUM_ENTRY_1, // ✔\n\tENUM_ENTRY_2 // ❌\n};\nenum class my_enum : int { // ✔\n\tSTREAMFX_MY_ENTRY_1, // ❌\n\tENUM_ENTRY_2 // ✔\n};\nenum class my_enum_int : int { // ❌, has `_int` suffix.\n};\n```\n\n#### Variables\n- Casing: snake_case\n- Separator: `_`\n- Prefixes:\n\t- Locals: None\n\t- Globals: `g_`\n- Suffixes: None\n\n##### Example\n```c++\nfloat example; // ❌\nfloat g_example; // ✔\n\nfunction example() {\n\tfloat _example; // ❌\n\tfloat example; // ✔\n}\n```\n\n#### Classes & Structures\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: None\n- Suffixes: None\n\n##### Members\n- Casing: snake_case\n- Separator: `_`\n- Prefixes:\n\t- private: `_`\n\t- protected, public: None\n- Suffixes: None\n\n##### Methods\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: None\n- Suffixes: None\n\n##### Example\n```c++\nclass example {\n\tfloat example; // ❌\n\tfloat _example; // ✔\n\n\tint example_int(); // ❌, has `_int` suffix.\n\tvoid example(); // ✔\n\tvoid example(int& result); // ✔\n\n\tpublic:\n\tfloat exa_mple; // ✔\n\n\tint example_int(); // ❌, has `_int` suffix.\n\tvoid example(); // ✔\n\tvoid example(int& result); // ✔\n}\n\nstruct example {\n\tfloat _example; // ❌\n\tfloat example; // ✔\n}\n```\n\n#### Unions\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: None\n- Suffixes: None\n\n##### Union Members\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: None\n- Suffixes: None\n\n##### Example\n```c++\nunion {\n\tfloat _example; // ❌\n\tfloat example; // ✔\n}\n```\n\n#### Functions\n- Casing: snake_case\n- Separator: `_`\n- Prefixes: No\n- Suffixes: No\n\n##### Example\n```c++\nvoid func(); // ✔\nvoid func(int& result); // ✔\nint func_int(); // ❌\n```\n\n#### Interface Classes\nInterface Classes are handled like normal classes. There are no prefixes or suffixes to attach.\n\n### Preprocessor Macros\nPre-processor Macros are a \"last stand\" option, when all other options fail or would produce worse results. If possible and cleaner to do so, prefer the use of `constexpr` code.\n\n### Global Variables\nOnly allowed if there is no other cleaner way to handle this.\n\n### Classes\nSpecial rules for `class`\n\n#### Members\nAll class members must be `private` and only accessible through get-/setters. The setter of a member should also validate if the setting is within an allowed range, and throw exceptions if an error occurs. If there is no better option, it is allowed to delay validation until a common function is called.\n\n</details>\n\n<details open><summary><h2 style=\"display: inline-block;\">Localization</h2></summary>\n\nWe use Crowdin to handle translations into many languages, and you can join the [StreamFX project on Crowdin](https://crowdin.com/project/obs-stream-effects) if you are interested in improving the translations to your native tongue. As Crowdin handles all other languages, Pull Requests therefore should only include changes to `en-US.ini`.\n\n</details>\n\n## Further Resources\n- A guide on how to build the project is in BUILDING.MD.\n- A no bullshit guide to `git`: https://rogerdudler.github.io/git-guide/\n    - Remember, `git` has help pages for all commands - run `git <command> --help`.\n\t- ... or use visual clients, like TortoiseGit, Github Desktop, SourceTree, and similar. It's what I do.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.7333984375,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES."
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 2.623046875,
          "content": "== image:https://raw.githubusercontent.com/Vhonowslend/StreamFX-Public/root/media/logo.png[alt=\"StreamFX\"]\nStreamFX is a powerful plugin for the popular OBS Studio streaming platform, packed with cutting-edge effects and game-changing features that will elevate your stream to new heights. With a range of high-performance tools and flexible options, you'll unlock endless creative possibilities to transform your scenes. Dive into dynamic 3D layouts, enhance your visuals with glowing effects and shadows, blur content for dramatic flair, or even write your own custom shaders. Whether you're refining your stream or experimenting with fresh looks, StreamFX opens up a world of potential for every creative streamer.\n\n++++\n<p style=\"text-align: center; font-weight: bold; font-size: 1.5em;\">→→→ <a href=\"https://github.com/Vhonowslend/StreamFX-Public/wiki/About-StreamFX\">Further Information</a> ←←←</p>\n++++\n\n=== Licenses\nLicensed under link:https://github.com/Xaymar/obs-StreamFX/blob/root/LICENSE[GPLv3 (or later), see LICENSE]. Additional works included are:\n\n[options=\"header\"]\n|=================\n|Work |License(s) |Author(s)\n\n|link:https://gen.glad.sh/[GLAD]\n|link:https://github.com/Dav1dde/glad/blob/glad2/LICENSE[MIT License]\n|link:https://github.com/Dav1dde/glad/graphs/contributors?type=a[Dav1dde, madebr, BtbN, and more]\n\n|link:https://github.com/nlohmann/json[JSON for Modern C++]\n|link:https://github.com/nlohmann/json/blob/develop/LICENSE.MIT[MIT License]\n|link:https://github.com/nlohmann/json/graphs/contributors?type=a[nlohmann, ChrisKtiching, nickaein, and more]\n\n|link:https://github.com/NVIDIA/MAXINE-AFX-SDK[NVIDIA Maxine Audio Effects SDK]\n|link:https://github.com/NVIDIA/MAXINE-AFX-SDK/blob/master/LICENSE[MIT License]\n|link:https://nvidia.com/[NVIDIA Corporation]\n\n|link:https://github.com/NVIDIA/MAXINE-AR-SDK[NVIDIA Maxine Augmented Reality SDK]\n|link:https://github.com/NVIDIA/MAXINE-Ar-SDK/blob/master/LICENSE[MIT License]\n|link:https://nvidia.com/[NVIDIA Corporation]\n\n|link:https://github.com/NVIDIA/MAXINE-VFX-SDK[NVIDIA Maxine Video Effects SDK]\n|link:https://github.com/NVIDIA/MAXINE-VFX-SDK/blob/master/LICENSE[MIT License]\n|link:https://nvidia.com/[NVIDIA Corporation]\n\n|link:https://github.com/obsproject/obs-studio[Open Broadcaster Software Studio]\n|link:https://github.com/obsproject/obs-studio/blob/master/COPYING[GPL-2.0 (or later)]\n|link:https://github.com/obsproject/obs-studio/graphs/contributors?type=a[jp9000, computerquip, and more]\n\n|link:https://www.qt.io/[Qt 6.x]\n|link:https://www.qt.io/download-open-source[(L)GPL-3.0 (or later)]\n|link:https://www.qt.io/[The Qt Company], and open source contributors\n\n|=================\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "crowdin.yml",
          "type": "blob",
          "size": 0.2431640625,
          "content": "# AUTOGENERATED COPYRIGHT HEADER START\n# Copyright (C) 2019-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>\n# AUTOGENERATED COPYRIGHT HEADER END\n\nfiles:\n  - source: /data/locale/en-US.ini\n    translation: /data/locale/%locale%.%file_extension%\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}