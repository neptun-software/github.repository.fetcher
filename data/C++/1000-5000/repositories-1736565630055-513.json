{
  "metadata": {
    "timestamp": 1736565630055,
    "page": 513,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sleuthkit/sleuthkit",
      "stars": 2669,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.845703125,
          "content": "*.h                     text diff=cpp\n*.c                     text diff=cpp\n*.cpp                   text diff=cpp\n*.java                   text diff=java\n\n*.txt                   text\n*.xml                   text\n*.properties-MERGED                  text\n*.html                   text diff=html\n*.dox                   text\n*.am                   text\n*.ac                   text\n*.m4                   text\n*.pro                   text\n*.in                   text\n*.1                   text\nMakefile                text\nDoxyfile                text\n\n*.py                    text diff=python\n*.pl                    text diff=perl\n*.pm                    text diff=perl\n*.base                    text diff=perl\n\n*.vcproj            text eol=crlf\n*.vcxproj*            text eol=crlf\n*.sln               text eol=crlf\n*.bat\t\t\ttext eol=crlf\n\n.gitignore          text \n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.2001953125,
          "content": "# NetBeans user-specific settings\n/bindings/java/nbproject/private/\n\n# Bindings dependecies and build folders\n/bindings/java/lib/\n/bindings/java/build/\n/bindings/java/dist\n/bindings/java/doxygen/tskjni_doxygen.tag\n/bindings/java/test/output/results\n/bindings/java/test/output/gold/dummy\n/bindings/java/test/output/gold/*_BU.txt\n/bindings/java/test/output/gold/*_CPP.txt\n/bindings/java/test/output/gold/*_CPP_SRT.txt\n/bindings/java/test/input\n/bindings/java/nbproject/genfiles.properties\n/bindings/java/nbproject/nbjdk.properties\n/bindings/java/nbproject/jdk.xml\n/bindings/java/nbproject/nbjdk.xml\n/bindings/java/libts*\n*~\n*.class\n/bindings/java/build/\n/bindings/java/dist/\n/bindings/java/nbproject/*\n!/bindings/java/nbproject/project.xml\n!/bindings/java/nbproject/project.properties\n\n# Nuget packages\n/win32/packages/\n\n# CASE-UCO build and release folder\n/case-uco/java/build/\n/case-uco/java/dist/\n/case-uco/java/nbproject/private/\n/case-uco/java/nbproject/genfiles.properties\n\n# Windows build folders\n/win32/__pycache__/\n/win32/Debug_NoLibs/\n/win32/*/Debug_NoLibs/\n/win32/Debug/\n/win32/Debug_PostgreSQL/\n/win32/*/Debug/\n/win32/*/Debug_PostgreSQL/\n/win32/Release/\n/win32/Release_PostgreSQL/\n/win32/*/Release/\n/win32/*/Release_PostgreSQL/\n/win32/Release_NoLibs/\n/win32/*/Release_NoLibs/\n/win32/Release_XPNoLibs/\n/win32/*/Release_XPNoLibs/\n/win32/*/x64/\n/win32/x64/\n/win32/*/*.user\nwin32/ipch\nwin32/BuildErrors.txt\nwin32/BuildErrors-64bit.txt\nwin32/.vs\nwin32/tsk-win.VC.VC.opendb\nwin32/tsk-win.VC.opendb\nwin32/tsk-win.VC.db\nframework/msvcpp/framework/Debug/\nframework/msvcpp/framework/Release/\nframework/msvcpp/*/*.user\nframework/msvcpp/*/Debug/\nframework/msvcpp/*/Release/\nframework/msvcpp/BuildLog.txt\nframework/msvcpp/*/ipch\nframework/runtime/\nframework/SampleConfig/to_install/\nframework/modules/*/win32/Debug/\nframework/modules/*/win32/Release/\nframework/modules/*/win32/*.user\nframework/modules/c_InterestingFilesModule/tsk\nframework/config.h\nframework/tools/tsk_analyzeimg/tsk_analyzeimg\nframework/tools/tsk_validatepipeline/tsk_validatepipeline\nrejistry++/msvcpp/*/Debug\nrejistry++/msvcpp/*/Release\nrejistry++/msvcpp/*/Release_NoLibs\nrejistry++/msvcpp/*/Release_XPNoLibs\nrejistry++/msvcpp/*/x64\nrejistry++/msvcpp/*/*.user\nrejistry++/msvcpp/rejistry++/ipch\n\n# Release files\nrelease/sleuthkit-*\nrelease/clone\n\n# IntelliSense data\n/win32/*.ncb\n/win32/*.sdf\nframework/msvcpp/framework/*.ncb\nframework/msvcpp/framework/*sdf\nrejistry++/msvcpp/rejistry++/*.ncb\nrejistry++/msvcpp/rejistry++/*sdf\n\n# Visual Studio user options\n/win32/tsk-win.suo\nframework/msvcpp/framework/*.suo\nrejistry++/msvcpp/rejistry++/*suo\n*.sln.cache\nwin32/tsk-win.opensdf\n\n# Make crud\n*.o\n*.lo\n*.la\n*.jar\nMakefile\n.deps\n.libs\n*.swp\n.dirstamp\n\n# unit tests\ntest/**/*.exe\ntest/**/*.log\ntest/**/*.trs\n\n#javadoc generated\n/bindings/java/javadoc\n\n# Files generated by running configure\n*.in\nstamp-h1\ntsk/tsk_config.h\ntsk/tsk_incs.h\ntsk/tsk.pc\naclocal.m4\nautom4te.cache\nconfig.log\nconfig.status\nconfigure\nlibtool\nm4/libtool.m4\nm4/lt*.m4\nconfig/*\n\n# Executables\nsamples/callback_cpp_style\nsamples/callback_style\nsamples/posix_cpp_style\nsamples/posix_style\nsamples/*.exe\ntest/fiwalk/fiwalk_test\ntest/img_dump/img_dump\ntest/img_dump/imgs_to_dump\n!test/img_dump/imgs_to_dump.in\ntest/legacy/fs_attrlist_apis\ntest/legacy/fs_fname_apis\ntest/legacy/fs_thread_test\ntest/legacy/read_apis\ntools/autotools/tsk_comparedir\ntools/autotools/tsk_gettimes\ntools/autotools/tsk_imageinfo\ntools/autotools/tsk_loaddb\ntools/autotools/tsk_recover\ntools/fiwalk/plugins/jpeg_extract\ntools/fiwalk/src/fiwalk\ntools/fiwalk/src/test_arff\ntools/fstools/blkcat\ntools/fstools/blkcalc\ntools/fstools/blkls\ntools/fstools/blkstat\ntools/fstools/fcat\ntools/fstools/ffind\ntools/fstools/fls\ntools/fstools/fsstat\ntools/fstools/icat\ntools/fstools/ifind\ntools/fstools/ils\ntools/fstools/istat\ntools/fstools/jcat\ntools/fstools/jls\ntools/fstools/usnjls\ntools/hashtools/hfind\ntools/imgtools/img_cat\ntools/imgtools/img_stat\ntools/pooltools/pstat\ntools/sorter/sorter\ntools/srchtools/sigfind\ntools/srchtools/srch_strings\ntools/timeline/mactime\ntools/vstools/mmcat\ntools/vstools/mmls\ntools/vstools/mmstat\ntools/*/*.exe\ntools/*/*/*.exe\n\n# EMACS backup files\n*~\n\n# Mac Junk\n.DS_Store\n\nsleuthkit-*.tar.gz\n\n*.Tpo\n*.gcda\n*.gcno\n*.gcov\n*.Tpo\ntest-suite.log\nvenv\nwget-log\nTAGS\ntest/from_brian/\n"
        },
        {
          "name": "API-CHANGES.txt",
          "type": "blob",
          "size": 0.6064453125,
          "content": "Changes to make once we are ready to do a backwards incompatible change.\n- TSK_SERVICE_ACCOUNT to TSK_ACCOUNT\n- HashDB to use new TSK_BASE_HASHDB enum instead of its own ENUM\n- Java SleuthkitCase.addArtifactType should return different if artifact already exists or getArtifactId should....\n- Java SleuthkitCase.findFilesWhere should return AbstractFile like findFiles\n- getUniquePath() should not throw exception. \n- findFilesInImage should return an enum like TskDB methods differentiating if any data was found or not.\n- remove addImageInfo in db_Sqlite that does not take MD5, and/or make it take IMG_INFO as argument"
        },
        {
          "name": "ChangeLog.txt",
          "type": "blob",
          "size": 0.375,
          "content": "This program does not distribute an official ChangeLog file. You\ncan generate one from the subversion repository though using the\nfollowing command:\n\n    svn log http://svn.sleuthkit.org/repos/sleuthkit/\n\nFor a specific release, try something like:\n\n    svn log http://svn.sleuthkit.org/repos/sleuthkit/tags/sleuthkit-3.0.0\n\nand replace 3.0.0 with the version you are interested in.\n\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 5.9326171875,
          "content": "                        The Sleuth Kit\n                http://www.sleuthkit.org/sleuthkit\n\n                    Installation Instructions\n\n                     Last Modified: Oct 2022\n\n\nREQUIREMENTS\n=============================================================================\nTested Platform:\n- FreeBSD 2-6.*\n- Linux 2.*\n- OpenBSD 2-3.*\n- Mac OS X\n- SunOS 4-5.*\n- Windows\n\nBuild System (to compile from a source distribution):\n- C/C++ compiler (C++ 14 required)\n- GNU Make\n- Java compiler / JDK (if you want the java bindings)\n\nDevelopment System (to extend TSK or compile from the repository):\n- GNU autoconf, automake, and libtool\n- Plus the build system requirements\n\nOptional Programs:\n- Autopsy: Provides a graphical HTML-based interface to The\nSleuth Kit (which makes it much easier to use).  Install this AFTER\ninstalling The Sleuth Kit.\n    Available at: http://www.sleuthkit.org/autopsy\n\nOptional Libraries:\nThere are optional features that TSK can use if you have installed\nthem before you build and install TSK.\n\n- AFFLIB: Allows you to process disk images that are stored in the\nAFF format. Version 3.3.6 has been tested to compile and work with this\nrelease.\n    Available at: https://github.com/sshock/AFFLIBv3\n\n- LibEWF: Allows you to process disk images that are stored in the\nExpert Witness format (EnCase Format).  Version 20130128 has been\ntested to compile and work with this release.   It is the last\nstable release of libewf and therefore the only one that we\ncurrently support.  You can download it from:\n\n    https://github.com/sleuthkit/libewf_64bit\n\n    The official repository is available here, but there is not\n    a package of the last stable release:\n\n    https://github.com/libyal/libewf-legacy\n    Available at: http://sourceforge.net/projects/libewf/\n\n- Libvhdi: Allows you to process disk images that are stored in the\nVirtual Hard Disk format (VHD).\n\n    The official repository is available here:\n\n    https://github.com/libyal/libvhdi\n\n- Libvmdk: Allows you to process disk images that are stored in the\nVMware Virtual Disk format (VMDK).\n\n    The official repository is available here:\n\n    https://github.com/libyal/libvmdk\n\n- Libvslvm: Allows you to access the Linux Logical Volume Manager (LVM) format\nthat is sotred on a disk image.  A stand-alone version of libbfio is needed\nto allow libvslvm to directly read from a TSK_IMAGE.\n\n    The official repository is available here:\n\n    https://github.com/libyal/libvslvm\n    https://github.com/libyal/libbfio\n\n\nINSTALLATION\n=============================================================================\n\nRefer to the README_win32.txt file for details on Windows.\n\nThe Sleuth Kit uses the GNU autotools for building and installation.\nThere are a few steps to this process.  First, run the 'configure'\nscript in the root TSK directory.  See the CONFIGURE OPTIONS section\nfor useful arguments that can be given to 'configure.\n\n    $ ./configure\n\nIf there were no errors, then run 'make'.  If you do not have a\n'configure' script, then it is probably because you cloned the\nsource code repository. If so, you will need to have automake,\nautoconf, and libtool installed and you can create the configure\nscript using the 'bootstrap' script in the root directory.\n\n    $ make\n\nThe 'make' process will take a while and will build the TSK tools.\nWhen this process is complete, the libraries and executables will\nbe located in the TSK sub-directories.  To install them, type\n'make install'.\n\n    $ make install\n\nBy default, this will copy everything in to the /usr/local/ structure.\nSo, the executables will be in '/usr/local/bin'.  This directory will\nneed to be in your PATH if you want to run the TSK commands without\nspecifying '/usr/local/bin' everytime.\n\n\nIf you get an error like:\n\n  libtool: Version mismatch error.  This is libtool 2.2.10, but the\n  libtool: definition of this LT_INIT comes from libtool 2.2.4.\n  libtool: You should recreate aclocal.m4 with macros from libtool 2.2.10\n  libtool: and run autoconf again.\n\nRun:\n    ./bootstrap\n\nand then go back to running configure and make.  To run 'bootstrap',\nyou'll need to have the autotools installed (see the list at the\ntop of this page).\n\n\nCONFIGURE OPTIONS\n-----------------------------------------------------------------------------\nThere are some arguments to 'configure' that you can supply to\ncustomize the setup. Currently, they focus on the optional disk\nimage format libraries.\n\n--without-afflib: Supply this if you want TSK to ignore AFFLIB even\nif it is installed.\n\n--with-afflib=dir: Supply this if you want TSK to look in 'dir' for\nthe AFFLIB installation (the directory should have 'lib' and 'include'\ndirectories in it).\n\n--without-libewf: Supply this if you want TSK to ignore libewf even\nif it is installed.\n\n--with-libewf=dir: Supply this if you want TSK to look in 'dir' for\nthe libewf installation (the directory should have 'lib' and 'include'\ndirectories in it).\n\n--without-libvhdi: Supply this if you want TSK to ignore libvhdi even\nif it is installed.\n\n--with-libvhdi=dir: Supply this if you want TSK to look in 'dir' for\nthe libvhdi installation (the directory should have 'lib' and 'include'\ndirectories in it).\n\n--without-libvmdk: Supply this if you want TSK to ignore libvmdk even\nif it is installed.\n\n--with-libvmdk=dir: Supply this if you want TSK to look in 'dir' for\nthe libvmdk installation (the directory should have 'lib' and 'include'\ndirectories in it).\n\n--without-libvslvm: Supply this if you want TSK to ignore libvslvm even\nif it is installed.\n\n--with-libvslvm=dir: Supply this if you want TSK to look in 'dir' for\nthe libvslvm installation (the directory should have 'lib' and 'include'\ndirectories in it).\n\n--without-libbfio: Supply this if you want TSK to ignore libbfio even\nif it is installed.\n\n--with-libbfio=dir: Supply this if you want TSK to look in 'dir' for\nthe libbfio installation (the directory should have 'lib' and 'include'\ndirectories in it).\n\n-----------------------------------------------------------------------------\n\nBrian Carrier\ncarrier <at> sleuthkit <dot> org\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 24.5869140625,
          "content": "ACLOCAL_AMFLAGS = -I m4\n\nAM_CPPFLAGS = -I$(srcdir)/tsk $(SQLITE3_CPPFLAGS) $(CRYPTO_CPPFLAGS) $(AFFLIB_CPPFLAGS) $(AFF4_CPPFLAGS) $(EWF_CPPFLAGS) $(QCOW_CPPFLAGS) $(VHDI_CPPFLAGS) $(VMDK_CPPFLAGS) $(VSLVM_CPPFLAGS) $(BFIO_CPPFLAGS) $(ZLIB_CPPFLAGS)\nAM_CFLAGS = -Wall -Wextra $(PTHREAD_CFLAGS) $(SQLITE3_CFLAGS) $(CRYPTO_CFLAGS) $(AFFLIB_CFLAGS) $(AFF4_CFLAGS) $(EWF_CFLAGS) $(QCOW_CFLAGS) $(VHDI_CFLAGS) $(VMDK_CFLAGS) $(VSLVM_CFLAGS) $(BFIO_CFLAGS) $(ZLIB_CFLAGS)\nAM_CXXFLAGS = -Wall -Wextra -Woverloaded-virtual $(PTHREAD_CXXFLAGS) $(CRYPTO_CXXFLAGS) $(SQLITE3_CXXFLAGS) $(AFFLIB_CXXFLAGS) $(AFF4_CXXFLAGS) $(EWF_CXXFLAGS) $(QCOW_CXXFLAGS) $(VHDI_CXXFLAGS) $(VMDK_CXXFLAGS) $(VSLVM_CXXFLAGS) $(BFIO_CXXFLAGS) $(ZLIB_CXXFLAGS)\nAM_LDFLAGS = $(SQLITE3_LDFLAGS) $(AFFLIB_LDFLAGS) $(CRYPTO_LDFLAGS) $(AFF4_LDFLAGS) $(EWF_LDFLAGS) $(QCOW_LDFLAGS) $(VHDI_LDFLAGS) $(VMDK_LDFLAGS) $(VSLVM_LDFLAGS) $(BFIO_LDFLAGS) $(ZLIB_LDFLAGS)\n\nCLEANFILES = *.gcov\n\n# File that we want to include in the dist\nEXTRA_DIST = \\\n\tAPI-CHANGES.txt \\\n\tChangeLog.txt \\\n\tINSTALL.txt \\\n\tNEWS.txt \\\n\tREADME_win32.txt \\\n\tREADME.md \\\n\tbindings/java/README.txt \\\n\tbindings/java/*.xml \\\n\tbindings/java/doxygen/Doxyfile \\\n\tbindings/java/doxygen/*.dox \\\n\tbindings/java/doxygen/*.html \\\n\tbindings/java/nbproject/project.xml \\\n\tbindings/java/src/org/sleuthkit/datamodel/*.java \\\n\tbindings/java/src/org/sleuthkit/datamodel/*.html \\\n\tbindings/java/src/org/sleuthkit/datamodel/*.properties \\\n\tbindings/java/src/org/sleuthkit/datamodel/blackboardutils/*.java \\\n\tbindings/java/src/org/sleuthkit/datamodel/blackboardutils/attributes/*.java \\\n\tbindings/java/src/org/sleuthkit/datamodel/Examples/*.java \\\n\tbindings/java/src/*.html \\\n\tcase-uco/java/*.xml \\\n\tcase-uco/java/*.md \\\n\tcase-uco/java/nbproject/*.xml \\\n\tcase-uco/java/nbproject/*.properties \\\n\tcase-uco/java/src/org/sleuthkit/caseuco/*.java \\\n\tcase-uco/java/test/org/sleuthkit/caseuco/*.java \\\n\tdocs/README.txt \\\n\tlicenses/README.md \\\n\tlicenses/GNUv2-COPYING \\\n\tlicenses/GNUv3-COPYING \\\n\tlicenses/IBM-LICENSE \\\n\tlicenses/Apache-LICENSE-2.0.txt \\\n\tlicenses/cpl1.0.txt \\\n\tlicenses/bsd.txt \\\n\tlicenses/mit.txt \\\n\tm4/*.m4 \\\n\tpackages/sleuthkit.spec \\\n\twin32/BUILDING.txt \\\n\twin32/*/*.vcxproj \\\n\twin32/tsk-win.sln \\\n\twin32/NugetPackages.props \\\n\twin32/docs/*\n\nnobase_include_HEADERS = \\\n\ttsk/auto/guid.h \\\n\ttsk/auto/tsk_auto.h \\\n\ttsk/auto/tsk_is_image_supported.h \\\n\ttsk/base/tsk_base.h \\\n\ttsk/base/tsk_os.h \\\n\ttsk/base/tsk_os_cpp.h \\\n\ttsk/fs/apfs_compat.hpp \\\n\ttsk/fs/apfs_fs.h \\\n\ttsk/fs/apfs_fs.hpp \\\n\ttsk/fs/decmpfs.h \\\n\ttsk/fs/encryptionHelper.h \\\n\ttsk/fs/tsk_apfs.h \\\n\ttsk/fs/tsk_apfs.hpp \\\n\ttsk/fs/tsk_btrfs.h \\\n\ttsk/fs/tsk_exfatfs.h \\\n\ttsk/fs/tsk_ext2fs.h \\\n\ttsk/fs/tsk_fatfs.h \\\n\ttsk/fs/tsk_fatxxfs.h \\\n\ttsk/fs/tsk_ffs.h \\\n\ttsk/fs/tsk_fs.h \\\n\ttsk/fs/tsk_hfs.h \\\n\ttsk/fs/tsk_iso9660.h \\\n\ttsk/fs/tsk_logical_fs.h \\\n\ttsk/fs/tsk_ntfs.h \\\n\ttsk/fs/tsk_yaffs.h \\\n\ttsk/hashdb/tsk_hashdb.h \\\n\ttsk/img/logical_img.h \\\n\ttsk/img/pool.hpp \\\n\ttsk/img/tsk_img.h \\\n\ttsk/libtsk.h \\\n\ttsk/pool/apfs_pool_compat.hpp \\\n\ttsk/pool/lvm_pool_compat.hpp \\\n\ttsk/pool/pool_compat.hpp \\\n\ttsk/pool/tsk_apfs.h \\\n\ttsk/pool/tsk_apfs.hpp \\\n\ttsk/pool/tsk_pool.h \\\n\ttsk/pool/tsk_pool.hpp \\\n\ttsk/tsk_incs.h \\\n\ttsk/util/Bitlocker/BitlockerParser.h \\\n\ttsk/util/Bitlocker/BitlockerUtils.h \\\n\ttsk/vs/tsk_vs.h \\\n\ttsk/util/Bitlocker/DataTypes.h \\\n\ttsk/util/Bitlocker/MetadataEntry.h \\\n\ttsk/util/Bitlocker/MetadataUtils.h \\\n\ttsk/util/Bitlocker/MetadataValueAesCcmEncryptedKey.h \\\n\ttsk/util/Bitlocker/MetadataValue.h \\\n\ttsk/util/Bitlocker/MetadataValueKey.h \\\n\ttsk/util/Bitlocker/MetadataValueOffsetAndSize.h \\\n\ttsk/util/Bitlocker/MetadataValueStretchKey.h \\\n\ttsk/util/Bitlocker/MetadataValueUnicode.h \\\n\ttsk/util/Bitlocker/MetadataValueVolumeMasterKey.h \\\n\ttsk/util/crypto.hpp \\\n\ttsk/util/detect_encryption.h \\\n\ttsk/util/file_system_utils.h \\\n\ttsk/util/lw_shared_ptr.hpp \\\n\ttsk/util/span.hpp \\\n\ttsk/vs/tsk_bsd.h \\\n\ttsk/vs/tsk_dos.h \\\n\ttsk/vs/tsk_gpt.h \\\n\ttsk/vs/tsk_mac.h \\\n\ttsk/vs/tsk_sun.h\n\nnobase_dist_data_DATA = \\\n\ttsk/sorter/default.sort \\\n\ttsk/sorter/freebsd.sort \\\n\ttsk/sorter/images.sort \\\n\ttsk/sorter/linux.sort \\\n\ttsk/sorter/openbsd.sort \\\n\ttsk/sorter/solaris.sort \\\n\ttsk/sorter/windows.sort\n\n#\n# Library\n#\n\nTSK_LIBS = \\\n\ttsk/libtsk.la \\\n\t$(PTHREAD_LIBS) \\\n\t$(SQLITE3_LIBS) \\\n\t$(CRYPTO_LIBS) \\\n\t$(AFFLIB_LIBS) \\\n\t$(AFF4_LIBS) \\\n\t$(EWF_LIBS) \\\n\t$(QCOW_LIBS) \\\n\t$(VHDI_LIBS) \\\n\t$(VMDK_LIBS) \\\n\t$(VSLVM_LIBS) \\\n\t$(BFIO_LIBS) \\\n\t$(ZLIB_LIBS) \\\n\t$(STDCPP_LIBS)\n\nnoinst_LTLIBRARIES = \\\n\ttools/libtsktools.la \\\n\ttsk/auto/libtskauto.la \\\n\ttsk/base/libtskbase.la \\\n\ttsk/fs/libtskfs.la \\\n\ttsk/hashdb/libtskhashdb.la \\\n\ttsk/img/libtskimg.la \\\n\ttsk/pool/libtskpool.la \\\n\ttsk/util/libtskutil.la \\\n\ttsk/util/Bitlocker/libtskbitlocker.la \\\n\ttsk/vs/libtskvs.la\n\ntsk_auto_libtskauto_la_CFLAGS = $(AM_CFLAGS) -Wmultichar\ntsk_auto_libtskauto_la_CXXFLAGS = $(AM_CXXFLAGS) -Wmultichar -Wsign-promo\ntsk_auto_libtskauto_la_SOURCES = \\\n\ttsk/auto/auto.cpp \\\n\ttsk/auto/auto_db.cpp \\\n\ttsk/auto/case_db.cpp \\\n\ttsk/auto/db_sqlite.cpp \\\n\ttsk/auto/guid.cpp \\\n\ttsk/auto/guid.h \\\n\ttsk/auto/is_image_supported.cpp \\\n\ttsk/auto/tsk_auto.h \\\n\ttsk/auto/tsk_auto_i.h \\\n\ttsk/auto/tsk_case_db.h \\\n\ttsk/auto/tsk_case_db.h \\\n\ttsk/auto/tsk_db.cpp \\\n\ttsk/auto/tsk_db.h \\\n\ttsk/auto/tsk_db_sqlite.h \\\n\ttsk/auto/tsk_is_image_supported.h\n\n# Compile the bundled sqlite3 if there isn't an existing lib to use\nif !HAVE_LIBSQLITE3\nAM_CPPFLAGS += -Ivendors\ntsk_auto_libtskauto_la_SOURCES += vendors/sqlite3.c vendors/sqlite3.h\nendif\n\ntsk_base_libtskbase_la_SOURCES = \\\n\ttsk/base/crc.c \\\n\ttsk/base/crc.h \\\n\ttsk/base/md5c.c \\\n\ttsk/base/mymalloc.c \\\n\ttsk/base/sha1c.c \\\n\ttsk/base/tsk_base_i.c \\\n\ttsk/base/tsk_base_i.h \\\n\ttsk/base/tsk_endian.c \\\n\ttsk/base/tsk_error.c \\\n\ttsk/base/tsk_error_win32.cpp \\\n\ttsk/base/tsk_list.c \\\n\ttsk/base/tsk_lock.c \\\n\ttsk/base/tsk_parse.c \\\n\ttsk/base/tsk_printf.c \\\n\ttsk/base/tsk_stack.c \\\n\ttsk/base/tsk_unicode.c \\\n\ttsk/base/tsk_unicode.h \\\n\ttsk/base/tsk_version.c \\\n\ttsk/base/XGetopt.c\n\ntsk_fs_libtskfs_la_SOURCES = \\\n\ttsk/fs/apfs_compat.cpp \\\n\ttsk/fs/apfs.cpp \\\n\ttsk/fs/apfs_fs.cpp \\\n\ttsk/fs/apfs_open.cpp \\\n\ttsk/fs/dcalc_lib.cpp \\\n\ttsk/fs/btrfs.cpp \\\n\ttsk/fs/btrfs_csum.cpp \\\n\ttsk/fs/dcat_lib.cpp \\\n\ttsk/fs/decmpfs.cpp \\\n\ttsk/fs/dls_lib.cpp \\\n\ttsk/fs/dstat_lib.cpp \\\n\ttsk/fs/encryptionHelper.cpp \\\n\ttsk/fs/exfatfs.c \\\n\ttsk/fs/exfatfs_dent.cpp \\\n\ttsk/fs/exfatfs_meta.cpp \\\n\ttsk/fs/ext2fs.cpp \\\n\ttsk/fs/ext2fs_dent.cpp \\\n\ttsk/fs/ext2fs_journal.cpp \\\n\ttsk/fs/fatfs.cpp \\\n\ttsk/fs/fatfs_dent.cpp \\\n\ttsk/fs/fatfs_meta.cpp \\\n\ttsk/fs/fatfs_utils.c \\\n\ttsk/fs/fatxxfs.c \\\n\ttsk/fs/fatxxfs_dent.c \\\n\ttsk/fs/fatxxfs_meta.cpp \\\n\ttsk/fs/ffind_lib.c \\\n\ttsk/fs/ffs.cpp \\\n\ttsk/fs/ffs_dent.cpp \\\n\ttsk/fs/fls_lib.cpp \\\n\ttsk/fs/fs_attr.cpp \\\n\ttsk/fs/fs_attrlist.c \\\n\ttsk/fs/fs_block.c \\\n\ttsk/fs/fs_dir.cpp \\\n\ttsk/fs/fs_file.cpp \\\n\ttsk/fs/fs_inode.c \\\n\ttsk/fs/fs_io.c \\\n\ttsk/fs/fs_load.cpp \\\n\ttsk/fs/fs_name.cpp \\\n\ttsk/fs/fs_open.c \\\n\ttsk/fs/fs_parse.c \\\n\ttsk/fs/fs_types.c \\\n\ttsk/fs/hfs.cpp \\\n\ttsk/fs/hfs_dent.cpp \\\n\ttsk/fs/hfs_journal.cpp \\\n\ttsk/fs/hfs_unicompare.cpp \\\n\ttsk/fs/icat_lib.cpp \\\n\ttsk/fs/ifind_lib.cpp \\\n\ttsk/fs/ils_lib.cpp \\\n\ttsk/fs/iso9660.cpp \\\n\ttsk/fs/iso9660_dent.cpp \\\n\ttsk/fs/logical_fs.cpp \\\n\ttsk/fs/lzvn.c \\\n\ttsk/fs/lzvn.h \\\n\ttsk/fs/nofs_misc.cpp \\\n\ttsk/fs/ntfs.cpp \\\n\ttsk/fs/ntfs_dent.cpp \\\n\ttsk/fs/rawfs.c \\\n\ttsk/fs/swapfs.c \\\n\ttsk/fs/tsk_fs_i.h \\\n\ttsk/fs/unix_misc.cpp \\\n\ttsk/fs/usnjls_lib.cpp \\\n\ttsk/fs/usn_journal.cpp \\\n\ttsk/fs/walk_cpp.cpp \\\n\ttsk/fs/yaffs.cpp\n\ntsk_hashdb_libtskhashdb_la_SOURCES = \\\n\ttsk/hashdb/binsrch_index.cpp \\\n\ttsk/hashdb/encase.cpp \\\n\ttsk/hashdb/hashkeeper.c \\\n\ttsk/hashdb/hdb_base.cpp \\\n\ttsk/hashdb/idxonly.cpp \\\n\ttsk/hashdb/md5sum.cpp \\\n\ttsk/hashdb/nsrl.cpp \\\n\ttsk/hashdb/sqlite_hdb.cpp \\\n\ttsk/hashdb/tsk_hashdb.cpp \\\n\ttsk/hashdb/tsk_hashdb.h \\\n\ttsk/hashdb/tsk_hashdb_i.h \\\n\ttsk/hashdb/tsk_hash_info.h\n\ntsk_img_libtskimg_la_SOURCES = \\\n\ttsk/img/aff4.cpp \\\n\ttsk/img/aff4.h \\\n\ttsk/img/aff.c \\\n\ttsk/img/aff.h \\\n\ttsk/img/ewf.cpp \\\n\ttsk/img/ewf.h \\\n\ttsk/img/img_io.cpp \\\n\ttsk/img/img_open.cpp \\\n\ttsk/img/img_open.h \\\n\ttsk/img/img_types.c \\\n\ttsk/img/img_writer.cpp \\\n\ttsk/img/img_writer.h \\\n\ttsk/img/logical_img.cpp \\\n\ttsk/img/logical_img.h \\\n\ttsk/img/mult_files.cpp \\\n\ttsk/img/mult_files.h \\\n\ttsk/img/qcow.cpp \\\n\ttsk/img/qcow.h \\\n\ttsk/img/raw.cpp \\\n\ttsk/img/raw.h \\\n\ttsk/img/tsk_img_i.h \\\n\ttsk/img/unsupported_types.cpp \\\n\ttsk/img/unsupported_types.h \\\n\ttsk/img/vhd.cpp \\\n\ttsk/img/vhd.h \\\n\ttsk/img/vmdk.cpp \\\n\ttsk/img/vmdk.h\n\ntsk_pool_libtskpool_la_SOURCES = \\\n\ttsk/pool/apfs_pool_compat.cpp \\\n\ttsk/pool/apfs_pool.cpp \\\n\ttsk/pool/img_bfio_handle.cpp \\\n\ttsk/pool/img_bfio_handle.h \\\n\ttsk/pool/lvm_pool_compat.cpp \\\n\ttsk/pool/lvm_pool.cpp \\\n\ttsk/pool/pool_open.cpp \\\n\ttsk/pool/pool_read.cpp \\\n\ttsk/pool/pool_types.cpp\n\ntsk_util_libtskutil_la_SOURCES = \\\n\ttsk/util/crypto.cpp \\\n\ttsk/util/detect_encryption.c \\\n\ttsk/util/file_system_utils.cpp\n\ntsk_util_Bitlocker_libtskbitlocker_la_SOURCES = \\\n\ttsk/util/Bitlocker/BitlockerParser.cpp \\\n\ttsk/util/Bitlocker/BitlockerUtils.cpp \\\n\ttsk/util/Bitlocker/DataTypes.cpp \\\n\ttsk/util/Bitlocker/MetadataEntry.cpp \\\n\ttsk/util/Bitlocker/MetadataUtils.cpp \\\n\ttsk/util/Bitlocker/MetadataValueAesCcmEncryptedKey.cpp \\\n\ttsk/util/Bitlocker/MetadataValueKey.cpp \\\n\ttsk/util/Bitlocker/MetadataValueOffsetAndSize.cpp \\\n\ttsk/util/Bitlocker/MetadataValueStretchKey.cpp \\\n\ttsk/util/Bitlocker/MetadataValueUnicode.cpp \\\n\ttsk/util/Bitlocker/MetadataValueVolumeMasterKey.cpp\n\ntsk_vs_libtskvs_la_SOURCES = \\\n\ttsk/vs/bsd.c \\\n\ttsk/vs/dos.c \\\n\ttsk/vs/gpt.c \\\n\ttsk/vs/mac.c \\\n\ttsk/vs/mm_io.c \\\n\ttsk/vs/mm_open.c \\\n\ttsk/vs/mm_part.c \\\n\ttsk/vs/mm_types.c \\\n\ttsk/vs/sun.c \\\n\ttsk/vs/tsk_vs_i.h\n\n# Merge the libraries into one\nlib_LTLIBRARIES = tsk/libtsk.la\ntsk_libtsk_la_SOURCES =\ntsk_libtsk_la_LIBADD = \\\n\ttsk/auto/libtskauto.la \\\n\ttsk/base/libtskbase.la \\\n\ttsk/fs/libtskfs.la \\\n\ttsk/hashdb/libtskhashdb.la \\\n\ttsk/img/libtskimg.la \\\n\ttsk/pool/libtskpool.la \\\n\ttsk/util/Bitlocker/libtskbitlocker.la \\\n\ttsk/util/libtskutil.la \\\n\ttsk/vs/libtskvs.la\n\n# current:revision:age\ntsk_libtsk_la_LDFLAGS = $(AM_LDFLAGS) -version-info 21:1:2 $(LIBTSK_LDFLAGS)\n\nEXTRA_DIST += \\\n\ttsk/tsk_tools_i.h \\\n\ttsk/docs/Doxyfile \\\n\ttsk/docs/*.dox \\\n\ttsk/docs/*.html \\\n\ttsk/tsk.pc.in\n\npkgconfigdir = $(libdir)/pkgconfig\nnodist_pkgconfig_DATA = tsk/tsk.pc\n\n#EXTRA_DIST = .indent.pro\n\n#\n# Tools\n#\n\nbin_PROGRAMS = \\\n\ttools/autotools/tsk_comparedir \\\n\ttools/autotools/tsk_gettimes \\\n\ttools/autotools/tsk_imageinfo \\\n\ttools/autotools/tsk_loaddb \\\n\ttools/autotools/tsk_recover \\\n\ttools/fiwalk/plugins/jpeg_extract \\\n\ttools/fiwalk/src/fiwalk \\\n\ttools/fstools/blkcalc \\\n\ttools/fstools/blkcat \\\n\ttools/fstools/blkls \\\n\ttools/fstools/blkstat \\\n\ttools/fstools/ffind \\\n\ttools/fstools/fls \\\n\ttools/fstools/fcat \\\n\ttools/fstools/fsstat \\\n\ttools/fstools/icat \\\n\ttools/fstools/ifind \\\n\ttools/fstools/ils \\\n\ttools/fstools/istat \\\n\ttools/fstools/jcat \\\n\ttools/fstools/jls \\\n\ttools/fstools/usnjls \\\n\ttools/hashtools/hfind \\\n\ttools/imgtools/img_cat \\\n\ttools/imgtools/img_stat \\\n\ttools/pooltools/pstat \\\n\ttools/srchtools/srch_strings \\\n\ttools/srchtools/sigfind \\\n\ttools/vstools/mmls \\\n\ttools/vstools/mmstat \\\n\ttools/vstools/mmcat\n\ntools_libtsktools_la_SOURCES = \\\n\ttools/util.cpp \\\n\ttools/util.h\n\ntools_autotools_tsk_comparedir_LDADD = $(TSK_LIBS)\ntools_autotools_tsk_comparedir_SOURCES = \\\n\ttools/autotools/tsk_comparedir.cpp \\\n\ttools/autotools/tsk_comparedir.h\n\ntools_autotools_tsk_gettimes_LDADD = $(TSK_LIBS)\ntools_autotools_tsk_gettimes_SOURCES = tools/autotools/tsk_gettimes.cpp\n\ntools_autotools_tsk_imageinfo_LDADD = $(TSK_LIBS)\ntools_autotools_tsk_imageinfo_SOURCES = tools/autotools/tsk_imageinfo.cpp\n\ntools_autotools_tsk_loaddb_LDADD = $(TSK_LIBS)\ntools_autotools_tsk_loaddb_SOURCES = tools/autotools/tsk_loaddb.cpp\n\ntools_autotools_tsk_recover_LDADD = $(TSK_LIBS)\ntools_autotools_tsk_recover_SOURCES = tools/autotools/tsk_recover.cpp\n\ntools_fiwalk_plugins_jpeg_extract_SOURCES = tools/fiwalk/plugins/jpeg_extract.cpp\n\nEXTRA_DIST += \\\n\ttools/fiwalk/plugins/docx_extractor.py \\\n\ttools/fiwalk/plugins/docx_grep.py \\\n\ttools/fiwalk/plugins/ficonfig.txt \\\n\ttools/fiwalk/plugins/jpeg_extract.java \\\n\ttools/fiwalk/plugins/Libextract_plugin.java \\\n\ttools/fiwalk/plugins/odf_extractor.py \\\n\ttools/fiwalk/plugins/word_extract.java \\\n\ttools/fiwalk/src/config-simple.txt \\\n\ttools/fiwalk/src/ficonfig.txt \\\n\ttools/fiwalk/src/lua_utf8.c \\\n\ttools/fiwalk/src/README_PLUGINS.txt \\\n\ttools/fiwalk/src/word-count-plugin.sh\n\ntools/fiwalk/plugins/plugins.jar: tools/fiwalk/plugins/jpeg_extract.class tools/fiwalk/plugins/word_extract.class tools/fiwalk/plugins/Libextract_plugin.class\n\tjar cfv tools/fiwalk/plugins/plugins.jar tools/fiwalk/plugins/jpeg_extract.class tools/fiwalk/plugins/word_extract.class tools/fiwalk/plugins/Libextract_plugin.class\n\ntools/fiwalk/plugins/jpeg_extract.class: tools/fiwalk/plugins/jpeg_extract.java\n\tjavac tools/fiwalk/plugins/jpeg_extract.java\n\ntools/fiwalk/plugins/word_extract.class: tools/fiwalk/plugins/word_extract.java\n\tjavac tools/fiwalk/plugins/word_extract.java\n\ntools/fiwalk/plugins/Libextract_plugin.class: tools/fiwalk/plugins/Libextract_plugin.java\n\tjavac tools/fiwalk/plugins/Libextract_plugin.java\n\nnoinst_LTLIBRARIES += tools/fiwalk/src/libfiwalk.la\n\ntools_fiwalk_src_libfiwalk_la_LIBADD = $(TSK_LIBS)\ntools_fiwalk_src_libfiwalk_la_SOURCES = \\\n\ttools/fiwalk/src/arff.cpp \\\n\ttools/fiwalk/src/arff.h \\\n\ttools/fiwalk/src/base64.cpp \\\n\ttools/fiwalk/src/base64.h \\\n\ttools/fiwalk/src/content.cpp \\\n\ttools/fiwalk/src/content.h \\\n\ttools/fiwalk/src/dfxml.cpp \\\n\ttools/fiwalk/src/dfxml.h \\\n\ttools/fiwalk/src/fiwalk.cpp \\\n\ttools/fiwalk/src/fiwalk.h \\\n\ttools/fiwalk/src/fiwalk_tsk.cpp \\\n\ttools/fiwalk/src/hash_t.h \\\n\ttools/fiwalk/src/hexbuf.c \\\n\ttools/fiwalk/src/hexbuf.h \\\n\ttools/fiwalk/src/plugin.cpp \\\n\ttools/fiwalk/src/plugin.h \\\n\ttools/fiwalk/src/sha2.c \\\n\ttools/fiwalk/src/sha2.h \\\n\ttools/fiwalk/src/unicode_escape.cpp \\\n\ttools/fiwalk/src/unicode_escape.h \\\n\ttools/fiwalk/src/utils.c \\\n\ttools/fiwalk/src/utils.h\n\ntools_fiwalk_src_fiwalk_LDADD = tools/fiwalk/src/libfiwalk.la\ntools_fiwalk_src_fiwalk_SOURCES = tools/fiwalk/src/fiwalk_main.cpp\n\nEXTRA_DIST += tools/fstools/fscheck.cpp\n\ntools_fstools_blkcalc_LDADD = $(TSK_LIBS)\ntools_fstools_blkcalc_SOURCES = tools/fstools/blkcalc.cpp\n\ntools_fstools_blkcat_LDADD = $(TSK_LIBS)\ntools_fstools_blkcat_SOURCES = tools/fstools/blkcat.cpp\n\ntools_fstools_blkls_LDADD = $(TSK_LIBS)\ntools_fstools_blkls_SOURCES = tools/fstools/blkls.cpp\n\ntools_fstools_blkstat_LDADD = $(TSK_LIBS)\ntools_fstools_blkstat_SOURCES = tools/fstools/blkstat.cpp\n\ntools_fstools_ffind_LDADD = $(TSK_LIBS)\ntools_fstools_ffind_SOURCES = tools/fstools/ffind.cpp\n\ntools_fstools_fls_LDADD = $(TSK_LIBS) tools/libtsktools.la\ntools_fstools_fls_SOURCES = tools/fstools/fls.cpp\n\ntools_fstools_fcat_LDADD = $(TSK_LIBS)\ntools_fstools_fcat_SOURCES = tools/fstools/fcat.cpp\n\ntools_fstools_fsstat_LDADD = $(TSK_LIBS)\ntools_fstools_fsstat_SOURCES = tools/fstools/fsstat.cpp\n\ntools_fstools_icat_LDADD = $(TSK_LIBS)\ntools_fstools_icat_SOURCES = tools/fstools/icat.cpp\n\ntools_fstools_ifind_LDADD = $(TSK_LIBS)\ntools_fstools_ifind_SOURCES = tools/fstools/ifind.cpp\n\ntools_fstools_ils_LDADD = $(TSK_LIBS)\ntools_fstools_ils_SOURCES = tools/fstools/ils.cpp\n\ntools_fstools_istat_LDADD = $(TSK_LIBS)\ntools_fstools_istat_SOURCES = tools/fstools/istat.cpp\n\ntools_fstools_jcat_LDADD = $(TSK_LIBS)\ntools_fstools_jcat_SOURCES = tools/fstools/jcat.cpp\n\ntools_fstools_jls_LDADD = $(TSK_LIBS)\ntools_fstools_jls_SOURCES = tools/fstools/jls.cpp\n\ntools_fstools_usnjls_LDADD = $(TSK_LIBS)\ntools_fstools_usnjls_SOURCES = tools/fstools/usnjls.cpp\n\nEXTRA_DIST += tools/hashtools/md5.c tools/hashtools/sha1.c\n\ntools_hashtools_hfind_LDADD = $(TSK_LIBS)\ntools_hashtools_hfind_SOURCES = tools/hashtools/hfind.cpp\n\ntools_imgtools_img_cat_LDADD = $(TSK_LIBS)\ntools_imgtools_img_cat_SOURCES = tools/imgtools/img_cat.cpp\n\ntools_imgtools_img_stat_LDADD = $(TSK_LIBS)\ntools_imgtools_img_stat_SOURCES = tools/imgtools/img_stat.cpp\n\ntools_pooltools_pstat_LDADD = $(TSK_LIBS)\ntools_pooltools_pstat_SOURCES = tools/pooltools/pstat.cpp\n\ntools_srchtools_srch_strings_SOURCES = tools/srchtools/srch_strings.c\n\ntools_srchtools_sigfind_LDADD = $(TSK_LIBS)\ntools_srchtools_sigfind_SOURCES = tools/srchtools/sigfind.cpp\n\ntools_vstools_mmls_LDADD = $(TSK_LIBS) tools/libtsktools.la\ntools_vstools_mmls_SOURCES = tools/vstools/mmls.cpp\n\ntools_vstools_mmstat_LDADD = $(TSK_LIBS)\ntools_vstools_mmstat_SOURCES = tools/vstools/mmstat.cpp\n\ntools_vstools_mmcat_LDADD = $(TSK_LIBS)\ntools_vstools_mmcat_SOURCES = tools/vstools/mmcat.cpp\n\nbin_SCRIPTS = tools/sorter/sorter tools/timeline/mactime\n\nCLEANFILES += $(bin_SCRIPTS)\n\nEXTRA_DIST += \\\n\ttools/sorter/sorter.base \\\n\ttools/sorter/.perltidyrc \\\n\ttools/timeline/mactime.base \\\n\ttools/timeline/.perltidyrc\n\ntools/timeline/mactime: tools/timeline/mactime.base Makefile\n\t@echo \"#!$(PERL) -w\" >$@\n\t@echo \"my \\$$VER=\\\"$(VERSION)\\\";\" >>$@\n\t@cat $(srcdir)/tools/timeline/mactime.base >>$@\n\t@chmod +x $@\n\ntools/sorter/sorter: tools/sorter/sorter.base Makefile\n\t@echo \"#!$(PERL) -w\" >$@\n\t@echo \"my \\$$BIN_DIR=\\\"$(bindir)\\\";\" >>$@\n\t@echo \"my \\$$DATA_DIR=\\\"$(datadir)\\\";\" >>$@\n\t@echo \"my \\$$VER=\\\"$(VERSION)\\\";\" >>$@\n\t@cat $(srcdir)/tools/sorter/sorter.base >>$@\n\t@chmod +x $@\n\n#indent:\n#\tpushd sorter ; perltidy -b sorter.base ; popd\n#\tpushd timeline ; perltidy -b mactime.base ; popd\n\nEXTRA_DIST += tests/runtests.sh\n\ncheck_SCRIPTS = \\\n\ttest/check_static.sh \\\n\ttest/test_libraries.sh \\\n\ttest/test_static_tools.sh \\\n\ttest/img_dump/img_differ.sh \\\n\ttest/img_dump/test_imgs.sh \\\n\ttest/img_dump/test_imgs_E01.sh \\\n\ttest/legacy/runtests.sh \\\n\ttest/tools/tool_differ.sh \\\n\ttest/tools/fstools/test_fls.sh \\\n\ttest/tools/vstools/test_mmls.sh \\\n\ttest/tools/vstools/test_mmls_E01.sh\n\nTESTS =\t\\\n\ttest/runner \\\n\ttest/test_libraries.sh \\\n\ttest/fiwalk/fiwalk_test \\\n\ttest/img_dump/test_imgs.sh \\\n\ttest/legacy/runtests.sh \\\n\ttest/tools/fstools/test_fls.sh \\\n\ttest/tools/vstools/test_mmls.sh\n\nif HAVE_E01\nTESTS += \\\n\ttest/img_dump/test_imgs_E01.sh \\\n\ttest/tools/vstools/test_mmls_E01.sh\nendif\n\nif BUILD_STATIC\nTESTS += test/test_static_tools.sh\nendif\n\nTEST_EXTENSIONS = .sh\nSH_LOG_COMPILER =\n\nif USE_WINE\nTESTS_ENVIRONMENT = WINE=wine\nendif\n\nLOG_COMPILER = scripts/test_runner.sh\n\n# TODO: nothing runs fs_attrlist_apis, fs_name_apis, fs_thread_test, read_apis\ncheck_PROGRAMS = \\\n\ttest/runner \\\n\ttest/fiwalk/fiwalk_test \\\n\ttest/img_dump/img_dump \\\n\ttest/legacy/fs_attrlist_apis \\\n\ttest/legacy/fs_fname_apis \\\n\ttest/legacy/fs_thread_test \\\n\ttest/legacy/read_apis\n\ntest_runner_CPPFLAGS = $(AM_CPPFLAGS) -Ivendors $(CATCH2_CPPFLAGS)\ntest_runner_LDADD = $(TSK_LIBS)\ntest_runner_SOURCES = \\\n\ttest/tsk/base/test_tsk_error.cpp \\\n\ttest/tsk/img/test_aff4.cpp \\\n\ttest/tsk/img/test_ewf.cpp \\\n\ttest/tsk/img/test_img_io.cpp \\\n\ttest/tsk/img/test_img_open.cpp \\\n\ttest/tsk/img/test_mult_files.cpp \\\n\ttest/tsk/img/test_qcow.cpp \\\n\ttest/tsk/img/test_raw.cpp \\\n\ttest/tsk/img/test_vhd.cpp \\\n\ttest/tsk/img/test_vmdk.cpp \\\n\ttest/tsk/util/test_crypto.cpp \\\n\ttest/tsk/hashdb/test_binsrch_index.cpp \\\n\ttest/runner.cpp\n\nEXTRA_test_runner_DEPENDENCIES = test/get_images/test_images.txt\n\ntest_fiwalk_fiwalk_test_CPPFLAGS = $(AM_CPPFLAGS) -Ivendors $(CATCH2_CPPFLAGS)\ntest_fiwalk_fiwalk_test_LDADD = $(TSK_LIBS)\ntest_fiwalk_fiwalk_test_SOURCES = \\\n\ttest/fiwalk/fiwalk_test.cpp \\\n\t$(tools_fiwalk_src_libfiwalk_la_SOURCES)\n\nEXTRA_test_fiwalk_fiwalk_test_DEPENDENCIES = test/get_images/test_images.txt\n\ntest/get_images/test_images.txt: test/get_images/test_images.yaml test/get_images/get_test_images.bash test/get_images/get_test_images.py\n\ttest/get_images/get_test_images.bash\n\nCLEANFILES += test/get_images/test_images.txt\n\ntest_img_dump_img_dump_LDADD = $(TSK_LIBS)\ntest_img_dump_img_dump_SOURCES = test/img_dump/img_dump.cpp\n\ntest_legacy_fs_fname_apis_LDADD = $(TSK_LIBS)\ntest_legacy_fs_fname_apis_SOURCES = test/legacy/fs_fname_apis.cpp\n\ntest_legacy_fs_attrlist_apis_LDADD = $(TSK_LIBS)\ntest_legacy_fs_attrlist_apis_SOURCES = test/legacy/fs_attrlist_apis.cpp\n\ntest_legacy_fs_thread_test_LDADD = $(TSK_LIBS)\ntest_legacy_fs_thread_test_SOURCES = \\\n\ttest/legacy/fs_thread_test.cpp \\\n\ttest/legacy/tsk_thread.cpp \\\n\ttest/legacy/tsk_thread.h\n\ntest_legacy_read_apis_LDADD = $(TSK_LIBS)\ntest_legacy_read_apis_SOURCES = test/legacy/read_apis.cpp\n\n#\n# Java\n#\n\n# Compile java bindings if all of the dependencies exist\nif X_JNI\n\nif OFFLINE\nant_args=-Doffline=true\nif CUSTOM_DEFAULT_JAR_LOCATION\nant_args+= -Ddefault-jar-location=\"@DEFAULT_JAR_LOCATION@\"\nendif\nendif\n\ntsk_jar = $(top_builddir)/bindings/java/dist/sleuthkit-$(PACKAGE_VERSION).jar\njardir = $(prefix)/share/java\n\n$(tsk_jar):\n\tcd bindings/java ; ant dist $(ant_args)\n\nclean-tsk__jar:\n\tcd bindings/java ; ant clean\n\nCLEANFILES += $(tsk_jar)\n\njar_DATA = $(tsk_jar) $(tsk_caseuco_jar)\n\nlib_LTLIBRARIES += bindings/java/jni/libtsk_jni.la\n\nbindings_java_jni_libtsk_jni_la_CPPFLAGS = $(AM_CPPFLAGS) $(JNI_CPPFLAGS)\nbindings_java_jni_libtsk_jni_la_LIBADD = $(TSK_LIBS)\nbindings_java_jni_libtsk_jni_la_SOURCES = \\\n\tbindings/java/jni/auto_db_java.cpp \\\n\tbindings/java/jni/auto_db_java.h \\\n\tbindings/java/jni/dataModel_SleuthkitJNI.cpp \\\n\tbindings/java/jni/dataModel_SleuthkitJNI.h\n\ntsk_caseuco_jar = $(top_builddir)/case-uco/java/dist/sleuthkit-caseuco-$(PACKAGE_VERSION).jar\n\n$(tsk_caseuco_jar):\n\tcd case-uco/java ; ant $(ant_args)\n\nclean-tsk_caseuco_jar:\n\tcd case-uco/java ; ant clean\n\nCLEANFILES += $(tsk_caseuco_jar)\n\nclean_java = clean-tsk_jar clean-tsk_caseuco_jar\n\nendif\n\nclean-local: $(clean_java)\n\n.PHONY: clean-tsk_jar clean-tsk_caseuco_jar\n\n#\n# Docs\n#\n\napi-docs:\n\tdoxygen tsk/docs/Doxyfile\n\tcd bindings/java/doxygen; doxygen Doxyfile\n\nman-html:\n\tcd man; build-html\n\ndist_man_MANS = \\\n\tman/blkcalc.1 \\\n\tman/blkcat.1 \\\n\tman/blkls.1 \\\n\tman/blkstat.1 \\\n\tman/fcat.1 \\\n\tman/ffind.1 \\\n\tman/fls.1 \\\n\tman/fsstat.1 \\\n\tman/hfind.1 \\\n\tman/icat.1 \\\n\tman/ifind.1 \\\n\tman/ils.1 \\\n\tman/img_cat.1 \\\n\tman/img_stat.1 \\\n\tman/istat.1 \\\n\tman/jcat.1 \\\n\tman/jls.1 \\\n\tman/mactime.1 \\\n\tman/mmcat.1 \\\n\tman/mmls.1 \\\n\tman/mmstat.1 \\\n\tman/sigfind.1 \\\n\tman/sorter.1 \\\n\tman/tsk_comparedir.1 \\\n\tman/tsk_gettimes.1 \\\n\tman/tsk_loaddb.1 \\\n\tman/tsk_recover.1 \\\n\tman/usnjls.1\n\nnoinst_PROGRAMS = \\\n\tsamples/callback_cpp_style \\\n\tsamples/callback_style \\\n\tsamples/posix_cpp_style \\\n\tsamples/posix_style\n\nsamples_callback_cpp_style_LDADD = $(TSK_LIBS)\nsamples_callback_cpp_style_SOURCES = samples/callback-cpp-style.cpp\n\nsamples_callback_style_LDADD = $(TSK_LIBS)\nsamples_callback_style_SOURCES = samples/callback-style.cpp\n\nsamples_posix_cpp_style_LDADD = $(TSK_LIBS)\nsamples_posix_cpp_style_SOURCES = samples/posix-cpp-style.cpp\n\nsamples_posix_style_LDADD = $(TSK_LIBS)\nsamples_posix_style_SOURCES = samples/posix-style.cpp\n\n#\n# OSSFuzz fuzz targets fuzz targets\n#\n\nif HAVE_LIB_FUZZING_ENGINE\nnoinst_PROGRAMS += \\\n\tfls_apfs_fuzzer \\\n\tfls_ext_fuzzer \\\n\tfls_fat_fuzzer \\\n\tfls_hfs_fuzzer \\\n\tfls_iso9660_fuzzer \\\n\tfls_ntfs_fuzzer \\\n\tfls_btrfs_fuzzer \\\n\tmmls_dos_fuzzer \\\n\tmmls_gpt_fuzzer \\\n\tmmls_mac_fuzzer \\\n\tmmls_sun_fuzzer\n\nfls_apfs_fuzzer_SOURCES = \\\n\tossfuzz/fls_apfs_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_apfs_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nfls_btrfs_fuzzer_SOURCES = \\\n\tossfuzz/fls_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_btrfs_fuzzer_CPPFLAGS = \\\n\t-DFSTYPE=TSK_FS_TYPE_BTRFS_DETECT \\\n\t$(AM_CPPFLAGS)\n\nfls_btrfs_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nfls_ext_fuzzer_SOURCES = \\\n\tossfuzz/fls_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_ext_fuzzer_CPPFLAGS = \\\n\t-DFSTYPE=TSK_FS_TYPE_EXT_DETECT \\\n\t$(AM_CPPFLAGS)\n\nfls_ext_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nfls_fat_fuzzer_SOURCES = \\\n\tossfuzz/fls_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_fat_fuzzer_CPPFLAGS = \\\n\t-DFSTYPE=TSK_FS_TYPE_FAT_DETECT \\\n\t$(AM_CPPFLAGS)\n\nfls_fat_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nfls_hfs_fuzzer_SOURCES = \\\n\tossfuzz/fls_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_hfs_fuzzer_CPPFLAGS = \\\n\t-DFSTYPE=TSK_FS_TYPE_HFS \\\n\t$(AM_CPPFLAGS)\n\nfls_hfs_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nfls_iso9660_fuzzer_SOURCES = \\\n\tossfuzz/fls_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_iso9660_fuzzer_CPPFLAGS = \\\n\t-DFSTYPE=TSK_FS_TYPE_ISO9660 \\\n\t$(AM_CPPFLAGS)\n\nfls_iso9660_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nfls_ntfs_fuzzer_SOURCES = \\\n\tossfuzz/fls_fuzzer.cc \\\n\tossfuzz/mem_img.h\n\nfls_ntfs_fuzzer_CPPFLAGS = \\\n\t-DFSTYPE=TSK_FS_TYPE_NTFS \\\n\t$(AM_CPPFLAGS)\n\nfls_ntfs_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nmmls_dos_fuzzer_SOURCES = \\\n\tossfuzz/mem_img.h \\\n\tossfuzz/mmls_fuzzer.cc\n\nmmls_dos_fuzzer_CPPFLAGS = \\\n\t-DVSTYPE=TSK_VS_TYPE_DOS \\\n\t$(AM_CPPFLAGS)\n\nmmls_dos_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nmmls_gpt_fuzzer_SOURCES = \\\n\tossfuzz/mem_img.h \\\n\tossfuzz/mmls_fuzzer.cc\n\nmmls_gpt_fuzzer_CPPFLAGS = \\\n\t-DVSTYPE=TSK_VS_TYPE_GPT \\\n\t$(AM_CPPFLAGS)\n\nmmls_gpt_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nmmls_mac_fuzzer_SOURCES = \\\n\tossfuzz/mem_img.h \\\n\tossfuzz/mmls_fuzzer.cc\n\nmmls_mac_fuzzer_CPPFLAGS = \\\n\t-DVSTYPE=TSK_VS_TYPE_MAC \\\n\t$(AM_CPPFLAGS)\n\nmmls_mac_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\n\nmmls_sun_fuzzer_SOURCES = \\\n\tossfuzz/mem_img.h \\\n\tossfuzz/mmls_fuzzer.cc\n\nmmls_sun_fuzzer_CPPFLAGS = \\\n\t-DVSTYPE=TSK_VS_TYPE_SUN \\\n\t$(AM_CPPFLAGS)\n\nmmls_sun_fuzzer_LDADD = \\\n\t@LIB_FUZZING_ENGINE@ \\\n\t$(TSK_LIBS)\nendif # HAVE_LIB_FUZZING_ENGINE\n"
        },
        {
          "name": "NEWS.txt",
          "type": "blob",
          "size": 89.095703125,
          "content": "---------------- VERSION 4.12.1 --------------\nC/C++:\n- Bug fixes from Luis Nassif and Joachim Metz\n- Added check to stop for very large folders to prevent memory exhausion\n\nJava:\n- Added File Repository concept for files to be stored in another location\n- Schema updated to 9.4\n- Fixed OS Account merge bug and now fire events when accounts are merged\n\n\n---------------- VERSION 4.12.0 --------------\n- There was a 1-year gap since 4.11.1 and the git log has 441 commits in that timeframe.\n- Many for small fixes.\n- This set of release notes is much more of an overview than other releases\n\nWhat's New:\n- LVM Support (non-Windows) from Joachim Metz\n- Logical File System support (a folder structure is parsed by TSK libraries) from Ann Priestman (Basis)\n\nWhat's Changed:\n- Lots of bug fixes from the Basis team and Joachim Metz\n- Additional fixes from Eran-YT, msuhanov, Joel Uckelman, Aleks L, dschoemantruter\n- General themes of C/C++ bounds checks and Java improvements to OS Accounts, Ingest jobs, CaseDbAccessManager, and much more.\n\n\n\n---------------- VERSION 4.11.1 --------------\n\nC/C++:\n- Several fixes from Joachim Metz\n- NTFS Decompression bug fix from Kim Stone and Joel Uckelman\n\nJava:\n- Fixed connection leak when making OS Accounts in bridge\n- OsAccount updates for instance types and special Windows SIDs\n- Fixed issue with duplicate value in Japanese timeline translation\n\n\n---------------- VERSION 4.11.0 --------------\nC/C++:\n- Added checks at various layers to detect encrypted file systems and disks to give more useful error messages.\n- Added checks to detect file formats that are not supported (such as AD1, ZIP, etc.) to give more useful error messages.\n- Added tsk_imageinfo tool that detects if an image is supported by TSK and if it is encrypted.\n- Add numerous bound checks from Joachim Metz.\n- Clarified licenses as pointed out by Joachim Metz.\n\nJava:\n- Updated from Schema 8.6 to 9.1.\n- Added tables and classes for OS Accounts and Realms (Domains).\n- Added tables and classes for Host Addresses (IP, MAC, etc.).\n- Added tables and classes for Analysis Results vs Data Artifacts by adding onto BlackboardArtifacts.\n- Added tables and classes for Host and Person to make it easier to group data sources.\n- Added static types for standard artifact types.\n- Added File Attribute table to allow custom information to be stored for each file.\n- Made ordering of getting lock and connection consistent.\n- Made the findFile methods more efficient by using extension (which is indexed).\n\n\n\n---------------- VERSION 4.10.2 --------------\nC/C++\n- Added support for Ext4 inline data\n\nJava\n- New Blackboard Artifacts for ALEAPP/ILEAPP, Yara, Geo Area, etc.\n- Upgraded to PostgreSQL JDBC Driver 42.2.18\n- Added SHA256 to files table in DB and added utility calculation methods.\n- Changed TimelineManager to make events for any artifact with a time stamp\n- Added Japanese translations\n- Fixed sychronization bug in getUniquePath\n\n\n---------------- VERSION 4.10.1 --------------\nC/C++:\n- Changed Windows build to use Nuget for libewf, libvmdk, libvhdi.\n- Fixed compiler warnings\n- Clarrified licenses and added Apache license to distribution\n- Improved error handling for out of memory issues\n- Rejistry++ memory leak fixes\n\nJava:\n- Localized for Japanese\n\n---------------- VERSION 4.10.0 --------------\nC/C++:\n- Removed PostgreSQL code (that was used only by Java code)\n- Added Java callback support so that database inserts are done in Java.\n\nJava:\n- Added methods and callbacks as required to allow database population to happen in Java instead of C/C++.\n- Added support to allow Autopsy streaming ingest where files are added in batches.\n- Added TaggingManager class and concept of a TagSet to support ProjectVic categories.\n- Fixed changes to normalization and validation of emails and phone numbers.\n- Added a CASE/UCO JAR file that creates JSON-LD based on TSK objects.\n\n\n\n---------------- VERSION 4.9.0 --------------\nC/C++\n- Removed framework project.  Use Autopsy instead if you need an analysis framework.\n- Various fixes from Google-based fuzzing.\n- Ensure all reads (even big ones) are sector aligned when reading from Windows device.\n- Ensure all command line tools support new pool command line arguments.\n- Create virtual files for APFS unallocated space\n- HFS fix to display type\n\nJava:\n- More artifact helper methods\n- More artifacts and attributes for drones and GPS coordinates\n- Updated TimelineManager to insert GPS artifacts into events table\n\n\n---------------- VERSION 4.8.0 --------------\nC/C++\n- Pool layer was added to support APFS. NOTE: API is likely to change.\n- Limited APFS support added in libtsk and some of the command line tools.\n-- Encryption support is not complete.\n-- Blackbag Technologies submitted the initial PR. Basis Technology\n  did some minor refactoring.\n- Refactoring and minor fixes to logical imager\n- Various bug fixes from Google fuzzing efforts and Jonathan B from Afarsec\n- Fixed infinite NTFS loop from cyclical attribute lists.  Reported by X.\n- File system bug fixes from uckelman-sf on github\n\nDatabase:\n- DB schema was updated to support pools\n- Added concept of JSON in Blackboard Attributes\n- Schema supports cascading deletes to enable data source deletion\n\nJava:\n- Added Pool class and associated infrastructure\n- Added methods to support deleting data sources from database\n- Removed JavaFX as a dependency by refactoring the recently\n  introduced timeline filtering classes.\n\n- Added attachment support to the blackboard helper package.\n\n\n\n\n---------------- VERSION 4.7.0 --------------\nC/C++:\n- DB schema was expanded to store tsk_events and related tables.\nTime-based data is automatically added when files and artifacts are\ncreated.  Used by Autopsy timeline.\n- Logical Imager can save files as individual files instead of in\nVHD (saves space).\n- Logical imager produces log of results\n- Logical Imager refactor\n- Removed PRIuOFF and other macros that caused problems with\nsigned/unsigned printing. For example, TSK_OFF_T is a signed value\nand PRIuOFF would cause problems as it printed a negative number\nas a big positive number.\n\n\nJava\n- Travis and Debian package use OpenJDK instead of OracleJDK\n- New Blackboard Helper packages (blackboardutils) to make it easier\nto make artifacts.\n- Blackboard scope was expanded, including the new postArtifact() method\nthat adds event data to database and broadcasts an event to listeners.\n- SleuthkitCase now has an EventBus for database-related events.\n- New TimelineManager and associated filter classes to support new events\ntable\n\n\n\n---------------- VERSION 4.6.7 --------------\nC/C++ Code:\n- First release of new logical imager tool\n- VHD image writer fixes for out of space scenarios\n\nJava:\n- Expand Communications Manager API\n- Performance improvement for SleuthkitCase.addLocalFile()\n\n\n\n---------------- VERSION 4.6.6 --------------\n\nC/C++ Code:\n- Acquisition deteails are set in DB for E01 files\n- Fix NTFS decompression issue (from Joe Sylve)\n- Image reading fix when cache fails (Joe Sylve)\n- Fix HFS+ issue with large catalog files (Joe Sylve)\n- Fix free memory issue in srch_strings (Derrick Karpo)\n\nJava:\n- Fix so that local files can be relative\n- More Blackboard artifacts and attributes for web data\n- Added methods to CaseDbManager to enable checking for and modifying tables.\n- APIs to get and set acquisition details\n- Added methods to add volume and file systems to database\n- Added method to add LayoutFile for allocated files\n- Changed handling of JNI handles to better support multiple cases\n\n\n---------------- VERSION 4.6.5 --------------\nC/C++ Code:\n- HFS boundary check fix\n- New fields for hash values and acquisition details in case database\n- Store \"created schema version\" in case database\n\nJava Code:\n- New artifacts and attributes defined\n- Fixed bug in SleuthkitCase.getContentById() for data sources\n- Fixed bug in LayoutFile.read() that could allow reading past end offile\n\n\n---------------- VERSION 4.6.4 --------------\nJava Code:\n- Increase max statements in database to prevent errors under load\n- Have a max timeout for SQLite retries\n\n---------------- VERSION 4.6.3 --------------\nC/C++ Code:\n- Hashdb bug fixes for corrupt indexes and 0 hashes\n- New code for testing power of number in ExtX code\n\nJava Code:\n- New class that allows generic database access\n- New methods that check for duplicate artifacts\n- Added caches for frequently used content\n\nDatabase Schema:\n- Added Examiner table\n- Tags are now associated with Examiners\n- Changed parent_path for logical files to be consistent with FS files.\n\n\n---------------- VERSION 4.6.2 --------------\nC/C++ Code:\n- Various compiler warning fixes\n- Added small delay into image writer to not starve other threads\n\nJava:\n- Added more locking to ensure that handles were not closed while other threads were using them.\n- Added APIs to support more queries by data source\n- Added memory-based caching when detecting if an object has children or not.\n\n\n---------------- VERSION 4.6.1 --------------\nC/C++ Code:\n- Lots of bounds checking fixes from Google's fuzzing tests.  Thanks Google.\n- Cleanup and fixes from uckelman-sf and others\n- PostgreSQL, libvhdi, & libvmdk are supported for Linux / OS X\n- Fixed display of NTFS GUID in istat - report from Eric Zimmerman.\n- NTFS istat shows details about all FILE_NAME attributes, not just the first.  report from Eric Zimmerman.\n\nJava:\n- Reports can be URLs\n- Reports are Content\n- Added APIs for graph view of communications\n- JNI library is extracted to name with user name in it to avoid conflicts\n\nDatabase:\n- Version upgraded from to 8.0 because Reports are now Content\n\n\n---------------- VERSION 4.6.0 --------------\nNew Features\n- New Communications related Java classes and database tables.\n- Java build updates for Autopsy Linux build\n- Blackboard artifacts are now Content objects in Java and part of tsk_objects table in database.\n- Increased cache sizes.\n- Lots of bounds checking fixes from Google's fuzzing tests.  Thanks Google.\n- HFS fix from uckelman-sf.\n\n\n---------------- VERSION 4.5.0 --------------\nNew Features:\n- Support for LZVN compressed HFS files (from Joel Uckelman)\n- Use sector size from E01 (helps with 4k sector sizes)\n- More specific version number of DB schema\n- New Local Directory type in DB to differentiate with Virtual Directories\n- All blackboard artifacts in DB are now 'content'.  Attachments can now\n  be children of their parent message.\n- Added extension as a column in tsk_files table.\n\nBug Fixes:\n- Faster resolving of HFS hard links\n- Lots of fixes from Google Fuzzing efforts.\n\n\n---------------- VERSION 4.4.2 --------------\nNew Features:\n- usnjls tool for NTFS USN log (from noxdafox)\n- Added index to mime type column in DB\n- Use local SQLite3 if it exists (from uckelman-sf)\n- Blackboard Artifacts have a shortDescription metho\n\nBug Fixes:\n- Fix for highest HFS+ inum lookup (from uckelman-sf)\n- Fix ISO9660 crash\n- various performance fixes and added thread safety checks\n\n\n---------------- VERSION 4.4.1 --------------\n- New Features:\n-- Can create a sparse VHD file when reading a local drive with new\n   IMAGE_WRITER structure. Currently being used by Autopsy, but no TSK\n   command line tools.\n\n- Bug fixes:\n-- Lots of cleanup and fixes. Including:\n-- memory leaks\n-- UTF8 and UTF16 cleanup\n-- Missing NTFS files (in fairly rare cases)\n-- Really long folder structures and database inserts\n\n---------------- VERSION 4.4.0 --------------\n- Compiling in Windows now uses Visual Studio 2015\n- tsk_loaddb now adds new files for slack space and JNI was upgraded\n  accordingly.\n\n---------------- VERSION 4.3.1 --------------\n- NTFS works on 4k sectors\n- Added support in Java to store local files in encoded form (XORed)\n- Added Java Account object into datamodel\n- Added notion of a review status to blackboard artifacts\n- Upgraded version of PostgreSQL\n- Various minor bug fixes\n\n\n---------------- VERSION 4.3.0 --------------\n- PostgreSQL support (Windows only)\n- New Release_ NoLibs Visual Studio target\n- Support for virtual machine formats via libvmdk and libvhdi (Windows only)\n- Schema updates (data sources table, mime type, attributes store type)\n- tsk_img_open can take externally created TSK_IMG_INFO\n- Various minor bug fixes\n\n\n---------------- VERSION 4.2.0 --------------\n- ExFAT support added\n- New database schema\n- New Sqlite hash database\n- Various bug fixes\n- NTFS pays more attention to sequence and loads metadata only\n  if it matches.\n- Added secondary hash database index\n\n\n\n---------------- VERSION 4.1.3 --------------\n- fixed bug that could crash UFS/ExtX in inode_lookup.\n- More bounds checking in ISO9660 code\n- Image layer bounds checking\n- Update version of SQLITE-JDBC\n- changed how java loads navite libraries\n- Config file for YAFFS2 spare area\n- New method in image layer to return names\n- Yaffs2 cleanup.\n- Escape all strings in SQLite database\n- SQlite code uses NTTFS sequence number to match parent IDs\n\n\n---------------- VERSION 4.1.2 --------------\nCore:\n- Fixed more visual studio projects to work on 64-bit\n- TskAutoDB considers not finding a VS/FS a critical error.\n\nJava:\n- added method to Image to perform sanity check on image sizes.\n\nfiwalk:\n- Fixed compile error on Linux etc.\n\n\n\n---------------- VERSION 4.1.1 --------------\nCore:\n- Added FILE_SHARE_WRITE to all windows open calls.\n- removed unused methods in CRC code that caused compile errors.\n- Added NTFS FNAME times to time2 struct in TSK_FS_META to make them\n  easier to access -- should have done this a long time ago!\n- fls -m and tsk_gettimes output NTFS FNAME times to output for timelines.\n- hfind with EnCase hashsets works when DB is specified (and not only index)\n- TskAuto now goes into UNALLOC partitions by default too.\n- Added support to automatically find all Cellebrite raw dump files given\n  the name of the first image.\n- Added 64-bit windows targets to VisualStudio files.\n- Added NTFS sequence to parent address in directory and directory itself.\n- Updated SQLite code to use sequence when finding parent object ID.\n\nJava:\n- Java bindings JAR files now have native libraries in them.\n- Logical files are added with a transaction\n\n\n---------------- VERSION 4.1.0 --------------\nCore:\n- Added YAFFS2 support (patch from viaForensics).\n- Added Ext4 support (patch from kfairbanks)\n- changed all include paths to be 'tsk' instead of 'tsk3'\n-- IMPORTANT FOR ALL DEVELOPERS!\n\nFramework:\n- Added Linux and MAC support.\n- Added L01 support.\n- Added APIs to find files by name, path and extension.\n- Removed deprecated TskFile::getAttributes methods.\n- moved code around for AutoBuild tool support.\n\nJava Bindings:\n- added DerivedFile datamodel support\n- added a public method to Content to add ability to close() its tsk handle before the object is gc'd\n- added faster skip() and random seek support to ReadContentInputStream\n- refactored datamodel by pushing common methods up to AbstractFile\n- fixed minor memory leaks\n- improved regression testing framework for java bindings datamodel\n\n\n---------------- VERSION 4.0.2 --------------\nCore:\nNew Features:\n- Added fiwalk tool from Simson.  Not supported in Visual Studio yet.\n\nBug Fixes:\n- Fixed fcat to work on NTFS files (still doesn't support ADS though).\n- Fixed HFS+ support in tsk_loaddb / SQLite -- root directory was not added.\n- NTFS code now looks at all MFT entries when listing directory contents. It used to only look at unallocated entries for orphan files. This fixes an image that had allocated files missing from the directory b-tree.\n- NTFS code uses sequence number when searching MFT entries for all files.\n- Libewf detection code change to support v2 API more reliably (ID: 3596212).\n- NTFS $SII code could crash in rare cases if $SDS was multiple of block size.\n\nFramework:\n- Added new API to TskImgDB that returns the base name of an image.\n- Numerous performance improvements to framework.\n- Removed requirement in framework to specify module extension in pipeline configuration file.\n- Added blackboard artifacts to represent both operating system and network service user accounts.\n\nJava Bindings:\n- added more APIs to find files by name, path and where clause\n- added API to get currently processed dir when image is being added,\n- added API to return specific types of children of image, volume system, volume, file system.\n- moved more common methods up to Content interface\n- deprecated context of blackboard attributes,\n- deprecated SleuthkitCase.runQuery() and SleuthkitCase.closeRunQuery()\n- fixed ReadContentInputStream bugs  (ignoring offset into a buffer, implementing available() )\n- methods that are lazy loading are now thread safe\n- Hash class is now thread-safe\n- use more PreparedStatements to improve performance\n- changed source level from java 1.6 to 1.7\n- Throw exceptions from C++ side better\n\n\n---------------- VERSION 4.0.1 --------------\nNew Features:\n- Can open raw Windows devices with write mode sharing.\n- More DOS partition types are displayed.\n- Added fcat tool that takes in file name and exports content (equivalent to using ifind and icat together).\n- Added new API to TskImgDB that returns hash value associated with carved files.\n- performance improvements with FAT code (maps and dir_add)\n- performance improvements with NTFS code (maps)\n- added AONLY flag to block_walk\n- Updated blkls and blkcalc to use AONLY flag -- MUCH faster.\n\nBug Fixes:\n- Fixed mactime issue where it could choose the wrong timezone that did\n  not follow daylight savings times.\n- Fixed file size of alternate data streams in framework.\n- Incorporated memory leak fixes and raw device fixes from ADF Solutions.\n\n\n\n---------------- VERSION 4.0.0 --------------\nNew Features:\n- Added multithreaded support\n- Added C++ wrapper classes\n- Added JNI bindings / Java data model classes\n- 3314047: Added utf8-specific versions of 'toid' methods for img,vs,fs types\n- 3184429: More consistent printing of unset times (all zerso instead of 1970)\n- New database design that allows for multiple images in the same database\n- GPT volume system tries other sector sizes if first attempt fails.\n- Added hash calculation and lookup to AutoDB and JNI.\n- Upgraded SQLite to 3.7.9.\n- Added Framework in (windows-only)\n- EnCase hash support\n- Libewf v2 support (it is now non-beta)\n- First file in a raw split or E01 can be specified and the rest of the files\n  are found.\n- mactime displays times as 0 if the time is not set (isntead of 1970)\n- Changed behavior of 'mactime -y' to use ISO8601 format.\n- Updated HFS+ code from ATC-NY.\n- FAT orphan file improvements to reduce false positives.\n- TskAuto better reports errors.\n- Upgrade build projects from Visual Studio 2008 to 2010.\n\nBug Fixes:\n- Relaxed checking when conflict exists between DOS and GPT partitions.\nHad a Mac image that was failing to resolve which partition table\nto use.\n\n---------------- VERSION 3.2.3 --------------\nNew Features:\n- new TskAuto method (handleNotification()) that gets verbose messages that allow for debugging when the class makes decisions.\n- DOS partitions are loaded even if an extended partition fails to load\n- new TskAuto::findFilesInFs(TSK_FS_INFO *) method\n- Need to only specify first E01 file and the rest are found\n- Changed docs license to non-commercial\n- Unicode conversion routines fix invalid UTF-16 text during conversion\n- Added '-d' to tsk_recover to specify directory to recover\n\n\nBug Fixes:\n- Added check to fatfs_open to compare first sectors of FAT if we used backup boot sector and verify it is FAT32.\n- More checks to make sure that FAT short names are valid ASCII\n- 3406523: Mactime size sanity check\n- 3393960: hfind reading of Windows input file\n- 3316603: Error reading last blocks of RAW CD images\n- Fixed bugs in how directories and files were detected in TskAuto\n\n\n\n---------------- VERSION 3.2.2 --------------\nBug Fixes\n- 3213886: ISO9660 directory hole not advancing\n- 3173095 contd: Updated checks so that tougher FAT checks are\napplied to deleted directories.\n- 3303678: Image type in Sqlite DB is now not always 0\n- 3303679: Deleted FAT files have more name cleanup in short names\n\nNew Features:\n- 3213888: RAW CD format\n- Auto class accepts TSK_IMG_INFO as argument\n- Copies of split image file names are stored in TSK so that the caller can free them before TSK_IMG_INFO is freed.\n\n---------------- VERSION 3.2.1 --------------\nBug Fixes\n- 3108272: fls arguments for -d and -u\n- 3105539: compile error issues because of SQlite and pthreads\n- 3173095: missing FAT files because of invalid dates.\n- 3184419: mingew compile errors.\n- 3191391: surround file name in quotes in mactime -d csv output\n\nNew Features:\n- A single dummy entry is added to the SQlite DB if no volume exists\nso that all programs can assume that there will be at least one\nvolume in the table.\n- 3184455: allow srcdir != builddir\n\n---------------- VERSION 3.2.0 --------------\nBug Fixes\n- 3043092: Minor logic errors with ifind code.\n- FAT performance fix when looking for parent directories\n  in $OrphanFiles.\n- 3052302: Crash on NTFS/UFS detection test because of\n  corrupt data -- tsk_malloc error.\n- 3088447: Error adding attribute because of run collision.\n  Solved by assigning unique IDs.\n\nNew Features:\n- 3012324: Name mangling moved out of library into outer tools\n  so that they can see control characters if they want to.  Patch\n  by Anthony Lawrence.\n- 2993806: ENUM values have a specified NONE value if you don't\n  want to specify any special flags. Patch by Anthony Lawrence.\n- 3026989: Add -e and -s flags to img_cat.  patch by Simson Garfinkel.\n- 2941805: Add case sensitive flag to fsstat in HFS.  Patch by Rob Joyce.\n- 3017764: Changed how default NTFS $DATA attribute was named.  Now it\n  has no name, while it previously had a fake name of \"$Data\".\n- New TskAuto class.\n- New tsk_loaddb, tsk_recover, tsk_comparedir, and tsk_gettimes tools.\n\n---------------- VERSION 3.1.3 --------------\nBug Fixes\n- 3006733: FAT directory listings were slow because the inner\ncode was not stopping when it found the parent directory.\n- Adjusted sanity / testing code on FAT directory entries to allow\nnon-ascii in extensions and reject entries with lots of 0s.\n- 3023606: Ext2 / ffs corrupted file names.\n- Applied NTFS SID fixes from Mandiant.\n- ntfs_load_secure() memory leak patch from Michael Cohen\n\n---------------- VERSION 3.1.2 --------------\nBug Fixes\n- 2982426: FAT directory listings were slow because the entire\nimage was being scanned for parent directory information.\n- 2982965: fs_attr length bug fix.\n- 2988619: mmls -B display error.\n- 2988330: ntfs SII cluster size increment bug\n- 2991487: Zeroed content in NTFS files that were not fully initialized.\n- 2993767: Slow FAT listings of OrphanFiles because hunt for parent\ndirectory resulted in many searches for OrphanFiles.  Added cache\nof OrphanFiles.\n- 2999567: ifind was not stopping after first hit.\n- 2993804: read past end of file did not always return -1.\n\n---------------- VERSION 3.1.1 --------------\n\nBug Fixes\n- 2954703: ISO9660 missing files because duplicate files\nhad same starting block.\n- 2954707: ISO9660 missing some files with zero length and\nduplicate starting block. Also changed behavior of how\nmultiple volume descriptors are processed.\n- 2955898: Orphan files not found if no deleted file names exist.\n- 2955899: NTFS internal setting of USED flag.\n- 2972721: Sorter fails with hash lookup if '-l' is given.\n- 2941813: Reverse HFS case sensitive flags (internal fix only)\n- 2954448: Debian package typo fixes, etc.\n- 2975245: sorter ignores realloc entries to reduce misleading mismatch entries and duplicate entries.\n\n\n---------------- VERSION 3.1.0 --------------\n\nNew Features and Changes\n- 2206285: HFS+ can now be read.  Lots of tracker items about this.\nThanks to Rob Joyce and ATC-NY for many of the patches and reports.\n- 2677069: DOS Safety Partitions in GPT Volume Systems are better\ndetected instead of reporting multiple VSs.\n- Windows executables can be build in Visual Studio w/out needing\nother image format libraries.\n- 2367426: Uninitialized file space is shown if slack space is\nrequested.\n- 2677107 All image formats supported by AFFLIB can be accessed by\nspecifying the \"afflib\" type.\n- 2206265: sigfind can now process non-raw files.\n- 2206331: Indirect block addresses are now available in the library\nand command line tools.  They are stored in a different attribute.\n- Removed 'docs' files and moved them to the wiki.\n- Removed disk_stat and disk_sreset because they were out of date\nand hdparm now has the same functionality.\n- 2874854: Image layer tools now support non-512 byte device sector\nsizes.  Users can specify sector size using the -b argument to the\ncommand line tools. This has several consequences:\n-- 'mmls -b' is now 'mmls -B'.  Similarly with istat -b.\n-- Changed command line format for '-o' so that sector size is\nspecified only via -b and not using '-o 62@4096'.\n- 2874852: Sanity checking on partition table entires is relaxed\nand only first couple of partitions are checked to make sure that\nthey can fit into the image.\n- 2895607: NTFS SID data is available in the library and 'istat'.\n- 2206341: AFF encrypted images now give more proper error message\nif password is not given.\n- 2351426: mactime is now distributed with Windows execs.\n\n\nDeveloper-level Changes\n- Abstracted name comparison to file system-specific function.\n- Added support in mactime to read body files with comment lines.\n- 2596153: Changed img_open arguments, similar to getopt().\n- 2797169: tsk_fs_make_ls is now supported as an external library\nfunction. Now named tsk_fs_meta_make_ls.\n- 2908510: Nanosecond resolution of timestamps is now available.\n- 2914255: Version info is now available in .h files in both string\nand integer form.\n\nBug Fixes:\n- 2568528: incorrect adjustment of attribute FILLER offset.\n- 2596397: Incorrect date sorting in mactime.\n- 2708195: Errors when doing long reads in fragmented attributes.\n- Fixed typo bugs in sorter (reported via e-mail by Drew Hunt).\n- 2734458: added orphan cache map to prevent slow NTFS listing times.\n- 2655831: Sorter now knows about the ext2 and ext3 types.\n- 2725799: ifind not converting UTF16 names properly on Windows\nbecause it was using endian ordering of file system and not local\nsystem.\n- 2662168: warning messages on macs when reading the raw character\ndevice.\n- 2778170: incorrect read size on resident attributes.\n- 2777633: missing second resolution on FAT creation times.\n- Added the READ_SHARE option to the CreateFile command for split\nimage files.  Patch by Christopher Siwy.\n- 2786963: NTFS compression infinite loop fix.\n- 2645156: FAT / blkls error getting slack because allocsize was\nbeing set too small (and other values were not being reset).\n- 2367426: Zeros are set for VDL slack on NTFS files.\n- 2796945: Inifite loop in fs_attr.\n- 2821031: Missing fls -m fields.\n- 2840345: Extended DOS partitions in extended partitions are now\nmarked as Meta.\n- 2848162: Reading attributes at offsets that are on boundary of\nrun fragment.\n- 2824457: Fixed issue reading last block of file system with blkcat.\n- 2891285: Fixed issue that prevented reads from the last block of\na file system when using the POSIX-style API.\n- 2825690: Fixed issue that prevented blkls -A from working.\n- 2901365: Allow FAT files to have a 0 wdate.\n- 2900761: Added FAT directory sanity checks to prevent infinite loops.\n- 2895607: Fixed various memory leaks.\n- 2907248: Fixed image layer cache crash.\n- 2905750: all file system read() functions now return -1 when\noffset given is past end of file.\n\n\n---------------- VERSION 3.0.1 --------------\n11/11/08: Bug Fix: Fixed crashing bug in ifind on FAT file system.\nBug: 2265927\n\n11/11/08: Bug Fix: Fixed crashing bug in istat on ExtX $OrphanFiles\ndir. Bug: 2266104\n\n11/26/08: Update: Updated fls man page.\n\n11/30/08: Update: Removed TODO file and using tracker for bugs and\nfeature requests.\n\n12/29/08: Bug Fix: Fixed incorrectly setting block status in file_walk\nfor compressed files (Bug: 2475246)\n\n12/29/08: Bug Fix: removed fs_info field from FS_META because it\nwas not being set and should have been removed in 3.0. Reported by\nRob Joyce and Judson Powers.\n\n12/29/08: Bug Fix: orphan files and NTFS files found via parent\ndirectory have an unknown file name type (instead of being equal\nto meta type).  (Bug: 2389901). Reported by Barry Grundy.\n\n1/12/09: Bug Fix: Fixed ISO9660 bug where large directory contents\nwere not displayed.  (Bug: 2503552).  Reported by Tom Black.\n\n1/24/09: Bug Fix: Fixed bug 2534449 where extra NTFS files were\nshown if the MFT address was changed to 0 because fs_dir_add was\nchecking the address and name.  Reported by Andy Bontoft.\n\n1/29/09: Update: Fixed fix for bug 2534449.  The fix is in ifind\ninstead of fs_dir_add().\n\n2/2/09: Update: Added RPM spec file from Morgan Weetmam.\n\n\n---------------- VERSION 3.0.0 --------------\n0/00/00: Update: Many, many, many API changes.\n\n2/14/08: Update: Added mmcat tool.\n\n2/26/08: Update: Added flags to mmls to specify partition types.\n\n3/1/08: Update: Major update of man pages.\n\n4/14/08: Bug Fix: Fixed the calculation of \"actual\" last block.\nOff by 1 error.  Reported by steve.\n\n5/23/08: Bug Fix: Incorrect malloc return check in srch_strings.\nreported by Petri Latvala.\n\n5/29/08: Bug Fix: Fixed endian ordering bug in ISO9660 code. Reported\nby Eduardo Aguiar de Oliveira.\n\n6/17/08: Update: 'sorter' now uses the ifind method for finding\ndeleted NTFS files (like Autopsy) does instead of relying on fls.\nReported by John Lehr.\n\n6/17/08: Update: 'ifind -p' reports data on ADS.\n\n7/10/08: Update: FAT looks for a backup boot sector in FAT32 if\nmagic is 0\n\n7/21/08: Bug Fix: Changed define of strcasecmp to _stricmp instead\nof _strnicmp in Windows.  (reported by Darren Bilby).\n\n7/21/08: Bug Fix: Fall back to open \"\\\\.\\\" image files on Windows\nwith SHARE_WRITE access so that drive devices can be opened.\n(reported by Darren Bilby).\n\n8/20/08: Bug Fix: Look for Windows objects when opening files in\nCygwin, not  just Win32.  Reported by Par Osterberg Medina.\n\n8/21/08: Update: Renamed library and install header files to have a '3'\nin them to allow parallel installations of v2 and v3.  Suggested by\nSimson Garfinkel.\n\n8/22/08: Update: Added -b option to sorter to specify minimum file size\nto process.  Suggested by Jeff Kell.\n\n8/22/08: Update: Added libewf as a requirement to build win32 so that\nE01 files are supported.\n\n8/29/08: Update: Added initial mingw patches for cross compiling and\nWindows.  Patches by Michael Cohen.\n\n9/X/08: Update: Added ability to access attibutes\n\n9/6/08: Update: Added image layer cache.\n\n9/12/08: Bug Fix: Fixed crash from incorrectly cleared value in FS_DIR\nstructure.  Reported and patched by Jason Miller.\n\n9/13/08: Update: Changed d* tool names to blk*.\n\n9/17/08: Update: Finished mingw support so that both tools and\nlibrary work with Unicode file name support.\n\n9/22/08: Update: Added new HFS+ code from Judson Powers and Rob Joyce (ATC-NY)\n\n9/24/08: Bug Fix: Fixed some cygwin compile errors about types on Cygwin.\nReported by Phil Peacock.\n\n9/25/08: Bug Fix: Added O_BINARY to open() in raw and split because Cygwin\nwas having problems. Reported by Mark Stam.\n\n10/1/08: Update: Added ifndef to TSK_USE_HFS define to allow people\nto define it on the command line.  Patch by RB.\n\n\n---------------- VERSION 2.52 --------------\n2/12/08: Bug Fix: Fixed warning messages in mactime about non-Numeric\ndata.  Reported by Pope.\n\n2/19/08: Bug Fix: Added #define to tsk_base_i.h to define\nLARGEFILE64_SOURCE based on LARGEFILE_SOURCE for older Linux systems.\n\n2/20/08: Bug Fix: Updated afflib references and code.\n\n3/13/08: Update: Added more fixes to auto* so that AFF will compile\non more systems.  I have confirmed that AFFLIB 3.1.3 will run with\nOS X 10.4.11.\n\n3/14/08: Bug Fix: Added checks to FAT code that calcs size of\ndirectories.  If starting cluster of deleted dir points into a\ncluster chain, then problems can occur.  Reported by John Ward.\n\n3/19/08: Update: I have verified that this compiles with libewf-20070512.\n\n3/21/08: Bug Fix: Deleted Ext/FFS directories were not being recursed\ninto.  This case was rare (because typically the metadata  are\nwiped), but possible.  Reported by JWalker.\n\n3/24/08: Update: I have verified that this compiles with libewf-20080322.\nUpdates from Joachim Metz.\n\n3/26/08: Update: Changed some of the header file design for the tools\nso that the define settings in tsk_config.h can be used (for large files).\n\n3/28/08: Update: Added config.h reference to srch_strings to get the\nLARGEFILE support.\n\n4/5/08: Update: Improved inode argument number parsing function.\n\n\n---------------- VERSION 2.51 --------------\n1/30/08: Bug Fix: Fixed potential infinite loop in fls_lib.c. Patch\nby Nathaniel Pierce.\n\n2/7/08: Bug Fix: Defined some of the new constants that are used\nin disktools because older Linux distros did not define them.\nReported by Russell Reynolds.\n\n2/7/08: Bug Fix: Modified autoconf to check for large file build\nrequirements and look for new 48-bit structures needed by disktools.\nBoth of these were causing problems on older Linux distros.\n\n2/7/08: Update: hfind will normalize hash values in database so\nthat they are case insensitive.\n\n---------------- VERSION 2.50 --------------\n12/19/07: Update: Finished upgrade to autotools building design. No\nlonger include file, afflib, libewf. Resulted in many source code layout\nchanges and sorter now searches for md5, sha1, etc.\n\n---------------- VERSION 2.10 --------------\n7/12/07: Update: 0s are returned for AFF pages that were not imaged.\n\n7/31/07: Bug Fix: ifind -p could crash if a deleted file name was found\nthat did not point to a valid meta data stucture.  (Reported by Andy Bontoft)\n\n8/5/07: Update: Added NSRL support back into sorter.\n\n8/15/07: Update: Errors are given if supplied sector offset is larger than\ndisk image.  Reported by Simson Garfinkel.\n\n8/16/07: Update: Renamed MD5 and SHA1 functions to TSK_MD5_.. and TSK_SHA_....\n\n8/16/07: Update: tsk_error_get() does not reset the error messages.\n\n9/26/07: Bug Fix: Changed FATFS check for valid dentries to consider\nsecond values of 30.  Reported by Alessandro Camillo.\n\n10/18/07: Update: inode_walk for NTFS and FAT will not abort if\ndata corruption is found in one entry -- instead they will just\nskip it.\n\n10/18/07: Update: tsk_os.h uses standard gcc system names instead\nof TSK specific ones.\n\n10/18/07: Update: Updated raw.c to use ioctl commands on OS X to\nget size of raw device because it does not work with SEEK_END.\nPatch by Rob Joyce.\n\n10/31/07: Update: Finished upgrade to fatfs_file_walk_off so that\nwalking can start at a specific offset.  Also finished upgrade that\ncaches FAT run list to make the fatfs_file_walk_off more efficient.\n\n11/14/07: Update: Fixed few places where off_t was being used\ninstead of OFF_T.  Reported by GiHan Kim.\n\n11/14/07: Update: Fixed a memory leak in aff.c to free AFF_INFO.\nReported by GiHan Kim.\n\n11/24/07: Update: Finished review and update of ISO9660 code.\n\n11/26/07: Bug Fix: Fixed 64-bit calculation in HFS+ code.  Submitted\nby Rob Joyce.\n\n11/29/07: Update: removed linking of srch_strings.c and libtsk.  Reported by\nkwizart.\n\n11/30/07: Upate: Made a #define TSK_USE_HFS compile flag for incorporating\nthe HFS support (flag is in src/fstools/fs_tools_i.h)\n\n11/30/07: Update: restricted the FAT dentry sanity checks to verify\nspace padding in the name and latin-only extensions.\n\n12/5/07: Bug Fix: fs_read_file_int had a bug that ignored the type passed\nfor NTFS files.  Reported by Dave Collett.\n\n12/12/07: Update: Changed teh FAT dentry sanity checks to allow spaces\nin volume labels and do more checking on the attribute flag.\n\n\n\n\n---------------- VERSION 2.09 --------------\n4/6/07: Bug Fix: Inifite loop in ext2 and ffs istat code because of using\nunsigned size_t variable.  Reported by Makoto Shiotsuki.\n\n4/16/07: Bug Fix: Changed use of fseek() to fseeko() in hashtools.  Patch\nby Andy Bontoft.\n\n4/16/07: Bug Fix: Changed Win32 SetFilePointer to use LARGE_INTEGER.\nReported by Kim GiHan.\n\n4/19/07: Bug Fix: Not all FAT orphan files were being found because of\nand offset error.\n\n4/26/07: Bug Fix: ils -O was not working (link value not being\nchecked).  Reported by Christian Perst.\n\n4/27/07: Bug Fix: ils -r was showing UNUSED inodes.  Reported by\nChristian Perst.\n\n5/10/07: Update: Redefined the USED and UNUSED flags for NTFS so that\nUNUSED is set when no attributes exist.\n\n5/16/07: Bug Fix: Fixed several bounds checking bugs that may cause\na crash if the disk image is corrupt.  Reported by Tim Newsham (iSec\nPartners)\n\n5/17/07: Update: Updated AFFLIB to 2.2.11\n\n5/17/07: Update: Updated libewf to libewf-20070512\n\n5/17/07: Update: Updated file to 4.20\n\n5/29/07: Update: Removed NTFS SID/SDS contributed code because it causes\ncrashes on some systems and its output is not entirely clear. (most recent bug\nreported by Andy Scott)\n\n6/11/07: Update: Updated AFFLIB to 2.2.12.\n\n6/12/07: Bug Fix: ifind -p was not reporting back info on the allocated name\nwhen one existed (because strtok was overwritting the name when the search\ncontinued).   Reported by Andy Bontoft.\n\n6/13/07: Update: Updated file to 4.21\n\n\n---------------- VERSION 2.08 --------------\n12/19/06: Bug Fix: ifind_path was not setting *result when root inode\nwas searched for.  patch by David Collett.\n\n12/29/06: Update: Removed 'strncpy' in ntfs.c to manual assignment of\ntext for '$Data' and 'N/A' for performance reasons.\n\n1/11/07: Update: Added duname to FS_INFO that contains a string of\nname for a file system's data unit -- Cluster for example.\n\n1/19/07: Bug Fix: ifind_path was returning an error even after some\nfiles were found.  Errors are now ignored if a file was found.\nReported by Michael Cohen.\n\n1/26/07: Bug Fix: Fixed calcuation of inode numbers in fatfs.c\n(reported by Simson Garfinkel).\n\n2/1/07: Update: Changed aff-install to support symlinked directory.\n\n2/1/07: Update: img_open modified so that it does not report errors for\ns3:// and http:// files that do not exist.\n\n2/5/07: Update: updated *_read() return values to look for \"<0\" instead of\nsimply \"== -1\". (suggested by Simson Garfinkel).\n\n2/8/07: Update: removed typedef for uintptr in WIN32 code.\n\n2/13/07: Update: Applied patch from Kim Kulak to update HFS+ code to internal\ndesign changes.\n\n2/16/07: Update: Renamed many of the external data structures and flags\nso that they start with TSK_ or tsk_ to prevent name collisions.\n\n2/16/07: Update: Moved MD5 and SHA1 routines and binaries to auxtools\ninstead of hashtools so that they are more easy to access.\n\n2/16/07: Update: started redesign and port of hashtools.\n\n2/21/07: Update: Changed inode_walk callback API to remove the flags\nvariable -- this was redundant since flags are also in TSK_FS_INODE.\nSame for TSK_FS_DENT.\n\n3/7/07: Bug Fix: fs_read_file failed for NTFS resident files.  Reported\nby Michael Cohen.\n\n3/8/07: Bug Fix: FATFS assumed a 512-byte sector in a couple of locations.\n\n3/13/07: Update: Finished hashtools update.\n\n3/13/07: Update: dcat reads block by block instead of all at once.\n\n3/23/07: Update: Change ntfs_load_secure to allocate all of its\nneeded memory at once instead of doing reallocs.\n\n3/23/07: Update: Updated AFFLIB to 2.2.0\n\n3/24/07: Bug Fix: Fixed many locations where return value from strtoull\nwas not being properly checked and therefore invalid numbers were not\nbeing detected.\n\n3/24/07: Bug Fix: A couple of error messages in ntfs_file_walk should\nhave been converted to _RECOVER when the _RECOVERY flag was given.\n\n3/24/07: Update: Changed behavior of ntfs_file_walk.  If no type is\ngiven, then a default type is chosen for files and dirs.  Now, no error\nis generated if that type does not exist -- similar to how no error is\ngenerated if a FAT file has 0 file size.\n\n3/26/07: Update: cleaned up and documented fs_data code more.\n\n3/29/07: Update: Updated AFF to 2.2.2.\n\n3/29/07: Update: Updated install scripts for afflib, libewf, and file to\ntouch files so that the auto* files are in the correct time stamp order.\n\n4/5/07: Bug Fix: Added sanity checks to offsets and addresses in ExtX and\nUFS group descriptors.  Reported by Simson Garfinkel.\n\n\n---------------- VERSION 2.07 --------------\n9/6/06: Update: Changed TCHAR and _T to TSK_TCHAR and _TSK_T to avoid\nconflicts with other libraries.\n\n9/18/06: Update: Added tsk_list_* functions and structures.\n\n9/18/06: Update: Added checks for recursive FAT directories.\n\n9/20/06: Update: Changed FS_META_* flags for LINK and UNLINK and moved\nthem to ILS_? flags.\n\n9/20/06: Update: added flags to ils to find only orphan inodes.\n\n9/20/06: Update: Added Orphan support for FAT, NTFS, UFS, Ext2, ISO.\n\n9/20/06: Update: File walk actions now have a flag to identify if a block\nis SPARSE or not (used to identify if the address being passed is valid\nor made up).\n\n9/21/06: Update: Added file size sanity check to fatfs_is_dentry and\nfixed assignment of fatfs->clustcnt.\n\n9/21/06: Update: block_, inode, and dent_walk functions now do more flag\nchecking and make sure that some things are set instead of making the\ncalling code do it.\n\n9/21/06: Update: Added checks for recursive (infinite loop) NTFS, UFS,\nExtX, and ISO9660 directories.\n\n9/21/06: Update Added checks to make sure that walking the FAT for files\nand directories would result in an infinite loop (if FAT is corrupt).\n\n9/21/06: Update: Added -a and -A to dls to specify allocated and\nunallocated blocks to display.\n\n9/21/06: Update: Updated AFFLIB to 1.6.31.\n\n9/22/06: Update: added a fs_read_file() function that allows you to read\nrandom parts of a file.\n\n10/10/06: Update: Improved performance of fs_read_file() and added\nnew FS_FLAG_META_COMP and FS_FLAG_DATA_COMP flags to show if a file\nand data are using file system-level compression (NTFS only).\n\n10/18/06: Bug fix: in fs_data_put_run, added a check to see\nif the head was null before looking up.  An extra error message\nwas being created for nothing.\n\n10/18/06: Bug Fix: Added a check to the compression buffer\nto see if it is null in _done().\n\n10/25/06: Bug Fix: Added some more bounds checks to NTFS uncompression code.\n\n11/3/06: Bug Fix: added check to dcat_lib in case the number of blocks\nrequested is too large.\n\n11/07/06: Update: Added fs_read_file_noid wrapper around fs_read_file\ninterface.\n\n11/09/06: Update: Updated AFF to 1.7.1\n\n11/17/06: Update: Updated libewf to 20061008-1\n\n11/17/06: Bug Fix: Fixed attribute lookup bug in fs_data_lookup.\nPatch by David Collett.\n\n11/21/06: Bug Fix: Fixed fs_data loops that were stopping when they hit\nan unused attribute.  Patch by David Collett.\n\n11/21/06: Bug Fix: sorter no longer clears the path when it starts. THis\nwas causing errors on Cygwin because OpenSSL libraries could not be found.\n\n11/22/06: Update: Added a tskGetVersion() function to return the string\nof the current version.\n\n11/29/06: Update: Added more tsk_error_resets to more places to prevent\nextra error messages from being displayed.\n\n11/30/06: Update: Added Caching to the getFAT function and to fs_read.\n\n12/1/06: Update: Changed TSK_LIST to a reverse sorted list of buckets.\n\n12/5/06: Bug Fix: Fixed FS_DATA_INUSE infinite loop bug.\n\n12/5/06: Bug Fix: Fixed infinite loop bug with NTFS decompression code.\n\n12/5/06: Update: Added NULL check to fs_inode_free (from Michael Cohen).\n\n12/5/06: Update: Updated ifind_path so that an allocated name will be\nshown if one exists -- do not exit if we find simply an unallocated\nentry with an address of 0. Suggested by David Collett.\n\n12/6/06: Update: Updated file to version 4.18.\n\n12/6/06: Update: Updated libaff to 2.0a10 and changed build process\naccordingly.\n\n12/7/06: Update: Added a tsk_error_get() function that returns a string\nwith the error messages -- can be used instead of tsk_error_print.\n\n12/7/06: Update: fixed some memory leaks in FAT and NTFS code.\n\n12/11/06: Bug Fix: fatfs_open error message code referenced a value that\nwas in freed memory -- reordered statements.\n\n12/15/06: Update: Include VCProj files in build.\n\n\n---------------- VERSION 2.06 --------------\n8/11/06: Bug Fix: Added back in ASCII/UTF-8 checks to remove control\ncharacters in file names.\n\n8/11/06: Bug Fix: Added support for fast sym links in UFS1\n\n8/11/06: Update: Redesigned the endian support so that getuX takes only\nthe endian flag so that the Unicode design could be changed as well.\n\n8/11/06: Update: Redesigned the Unicode support so that there is a\ntsk_UTF... routine instead of fs_UTF...\n\n8/11/06: Update: Updated GPT to fully convert UTF16 to UTF8.\n\n8/11/06: Update: There is now only one aux_tools header file to include\ninstead of libauxtools and/or aux_lib, which were nearly identical.\n\n8/16/06: Bug Fix: ntfs_dent_walk could segfault if two consecutive\nunallocated entries were found that had an MFT entry address of 0.\nReported by Robert-Jan Mora.\n\n8/16/06: Update: Changed a lot of the header files and reduced them so\nthat it is easier to use the library and only one header file needs to\nbe included.\n\n8/21/06: Update: mmtools had char * instead of void * for walk callback\n\n8/22/06: Update: Added fs_load_file function that returns a buffer full\nwith the contents of a file.\n\n8/23/06: Update: Upgraded AFFLIB to 1.6.31 and libewf to 20060820-1.\n\n8/25/06: Update: Created printf wrappers so that output is UTF-16 on\nWindows and UTF-8 on Unix.\n\n8/25/06: Update: Continued port to Windows by starting to use more\nTCHARS and defining needed macros for the Unix side.\n\n8/25/06: Bug Fix: Fixed crash that could occur because of SDS code\nin NTFS.  (reported by Simson Garfinkel) (BUG: 1546925).\n\n8/25/06: Bug Fix: Fixed crash that could occur because path stack became\ncorrupt with deep directories or corrupt images. (reported by Simson\nGarfinkel) (BUG: 1546926).\n\n8/25/06: Bug Fix: Fixed infinite loop that could occur when trying to\ndetermine size of FAT directory when the FAT has a loop in it. (BUG:\n1546929)\n\n8/25/06: Update: Improved FAT checking code to look for '.' and '..'\nentries when inode value is replaced during dent_walk.\n\n8/29/06: Update: Finished Win32 port and changes to handle UTF-16 vs\nUTF-8 inputs.\n\n8/29/06: Update: Created a parse_inum function to handle parsing inode\naddresses from command line.\n\n8/30/06: Update: Made progname a local variable instead of global.\n\n8/31/06: Bug Fix: Fixed a sizeof() error with the memset in fatfs_inode_walk\nfor the sect_alloc buffer.\n\n8/31/06: Update: if mktime in dos2unixtime returns any negative value,\nthen the return value is set to 0.  Windows and glibc seem to have\ndifferent return values.\n\n---------------- VERSION 2.05 --------------\n5/15/06: Bug Fix: Fixed a bug in img_cat that could cause it to\ngo into an infinite loop.  (BUG: 1489284)\n\n5/16/06: Update: Fixed printf statements in tsk_error.c that caused\nwarning messages for some compilers.  Reported by Jason DePriest.\n\n5/17/06: Update: created a union of file system-specific file times in\nFS_INFO (Patch by Wyatt Banks)\n\n5/22/06: Bug Fix: Updated libewf to 20060520 to fix bug with reported\nimage size. (BUG: 1489287)\n\n5/22/06: Bug Fix: Updated AFFLIB to 1.6.24 so that TSK could compile in\nCYGWIN. (BUG: 1493013)\n\n5/22/06: Update: Fixed some more printf statements that were causing\ncompile warnings.\n\n5/23/06: Update: Added a file existence check to img_open to make error\nmessage more accurate.\n\n5/23/06: Update: Usage messages had extra \"Supported image types message\".\n\n5/25/06: Update: Added block / page range to fsstat for raw and swapfs.\n\n6/5/06: Update: fixed some typos in the output messages of sigfind (reported\nby Jelle Smet)\n\n6/9/06: Update: Added HFS+ template to sigfind (Patch by Wyatt Banks)\n\n6/9/06: Update: Added ntfs and HFS template to sigfind.\n\n6/19/06: Update: Begin Windows Visual Studio port\n\n6/22/06: Update: Updated a myflags check in ntfs.c (reported by Wyatt Banks)\n\n6/28/06: Update: Incorporated NTFS compression patch from I.D.E.A.L.\n\n6/28/06: Update: Incorporated NTFS SID patch from I.D.E.A.L.\n\n6/28/06: Bug Fix: A segfault could occur with NTFS if no inode was loaded\nin the dent_walk code.  (Reported by Pope).\n\n7/5/06: Update: Added tsk_error_reset function and updated code to use it.\n\n7/5/06: Update: Added more sanity checks to the DOS partitions code.\n\n7/10/06: Update: Upgraded libewf to version 20060708.\n\n7/10/06: Update: Upgraded AFFLIB to version 1.6.28\n\n7/10/06: Update: added 'list' option to usage message so that file\nsystem, image, volume system types are listed only if '-x list' is given.\nSuggested by kenshin.\n\n7/10/06: Update: Compressed NTFS files use the compression unit size\nspecified in the header.\n\n7/10/06: Update: Added -R flag to icat to suppress recovery warnings and\nuse this flag in sorter to prevent FAT recovery messages from filling\nup screen.\n\n7/10/06: Update: file_walk functions now return FS_ERR_RECOVERY error\ncodes for most cases if the RECOVERY flag is set -- this allows the\nerrors to be more easily suppressed.\n\n7/12/06: Update: Removed individual libraries and now make a single\nstatic libtsk.a library.\n\n7/12/06: Update: Cleaned up top-level Makefile.  Use '-C' flag (suggested\nby kenshin).\n\n7/14/06: Update: Fixed and redesigned some of the new NTFS compression\ncode.  Changed variable names.\n\n7/20/06: Update: Fixed an NTFS compression bug if a sub-block was not\ncompressed.\n\n7/21/06: Update: Made NTFS compression code thread friendly.\n\n\n---------------- VERSION 2.04 --------------\n12/1/05: Bug Fix: Fixed a bug in the verbose output of img_open\nthat would crash if no type or offset was given.  Reported and\npatched by Wyatt Banks.\n\n12/20/05: Bug Fix: An NTFS directory index sanity check used 356\ninstead of 365 when calculating an upper bound on the times.  Reported\nby Wyatt Banks.\n\n12/23/05: Bug Fix: Two printf statements in istat for NTFS printed\nto stdout instead of a specific file handle. Reported by Wyatt\nBanks.\n\n1/22/06: Bug Fix: fsstat, imgstat and dcalc were using a char instead\nof int for the return value of getopt, which caused some systems to not\nexecute the programs. (internal fix and later reported by Bernhard Reiter)\n\n2/23/06: Update: added support for FreeBSD 6.\n\n2/27/06: Bug Fix: Indirect blocks would nto be found by ifind with\nUFS and Ext2.  Reported by Nelson G. Mejias-Diaz.  (BUG: 1440075)\n\n3/9/06: Update: Added AFF image file support.\n\n3/14/06: Bug Fix: If the first directory entry of a UFS or ExtX block\nwas unallocated, then later entries may not be shown. Reported by John\nLangezaal.  (BUG: 1449655)\n\n4/3/06: Update: Finished the improved error handling.  Many internal\nchanges, not many external changes.  error() function no longer used\nand instead tsk_err variables and function are used.  This makes the\nlibrary more powerful.\n\n4/5/06: Update: The byte offset for a volume is now passed to the mm_\nand fs_ functions instead of img_open.  This allows img_info to be used\nfor multiple volumes at the same time. This required some mm_ changes.\n\n4/5/06: Update: All TSK libraries are written to the lib directory.\n\n4/6/06: Update: Added FS_FLAG_DATA_RES flag to identify data that are\nresident in ntfs_data_walk (suggested by Michael Cohen).\n\n4/6/06: Update: The partition code (media Management) now checks that a\npartition starts before the end of the image file.  There are currently\nno checks about the end of the partition though.\n\n4/6/06: Update: The media management code now shows unpartitioned space\nas such from the end of the last partition to the end of the image file\n(using the image file size).  (Suggested by Wyatt Banks).\n\n4/7/06: Update: New version of ISO9660 code from Wyatt Banks and Crucial\nSecurity added and other code updated to allow CDs to be analyzed.\n\n4/7/06: There was a conflict with guessuXX with mmtools and fstools.\nRenamed to mm_guessXX and fs_guessXX.\n\n4/10/06: Upgraded AFFLIB to 1.5.6\n\n4/12/06: Added version of libewf and support for it in imgtools\n\n4/13/06: Added new img_cat tool to extract raw data from an image format.\n\n4/24/06: Upgraded AFFLIB to 1.5.12\n\n4/24/06: split and raw check if the image is a directory\n\n4/24/06: Updated libewf to 20060423-1\n\n4/26/06: Updated makedefs to work with SunOS 5.10\n\n5/3/06: Added iso9660 patch from Wyatt Banks so that version number\nis not printed with file name.\n\n5/4/06: Updated error checking in icat, istat, fatfs_dent, and ntfs_dent\n\n5/8/06: Updated libewf to 20060505-1 to fix some gcc 2 compile errors.\n\n5/9/06: Updated AFFLIB to 1.6.18\n\n5/11/06: Cleaned up error handling (removed %m and unused legacy code)\n\n5/11/06: Updated AFFLIB to 1.6.23\n\n---------------- VERSION 2.03 --------------\n7/26/05: Update: Removed incorrect print_version() statement from\nfs_tools.h (reported by Jaime Chang)\n\n7/26/05: Update: Renamed libraries to start with \"lib\"\n\n7/26/05: Update: Removed the logfp variable for verbose statements\nand instead use only stderr.\n\n8/12/05: Update: If time is 0, then it is put as 00:00:00 instead of\nthe default 1970 or 1980 time.\n\n8/13/05: Update: Added Unicode support for FAT and NTFS (Supported by\nI.D.E.A.L. Technology Corp).\n\n9/2/05: Update: Added Unicode support for UFS and ExtX.  Non-printable\nASCII characters are no longer replaced with '^.'.\n\n9/2/05: Update: Improved the directory entry sanity checks for UFS\nand ExtX.\n\n9/2/05: Update: Upgraded file to version 4.15.\n\n9/2/05: Update: The dent_walk code of all file systems does not\nabort if a sub-directory is encountered with an error.  If it is the\ntop directory explicitly called, then it still gives an error.\n\n9/2/05: Bug Fix: MD5 and SHA-1 values were incorrect under AMD64\nsystems because the incorrect variable sizes were being used.\n(reported by: Regis Friend Cassidy. BUG: 1280966)\n\n9/2/05: Update: Changed all licenses in TSK to Common Public License\n(except those that were already IBM Public License).\n\n9/15/05: Bug Fix: The Unicode names would not be displayed if the FAT\nshort name entry was using code pages.  The ASCII name check was removed,\nwhich may lead to more false positives during inode_walk.\n\n10/05/05: Update: improved the sector size check when the FAT boot\nsector is read (check for specific values besides just mod 512).\n\n10/12/05: Update: The ASCII name check was added back into FAT, but\nthe check no longer looks for values over 0x80.\n\n10/12/05: Update: The inode_walk function in FAT skips clusters\nthat are allocated to files.  This makes it much faster, but it\nwill now not find unallocated directory entries in the slack space\nof allocated files.\n\n10/13/05: Update: sorter updated to handle unicode in HTML output.\n\n---------------- VERSION 2.02 --------------\n4/27/05: Bug Fix: the sizes of 'id' were not consistent in the\nfront-end and library functions for icat and ffind.  Reported by\nJohn Ward.\n\n5/16/05: Bug Fix: fls could segfault in FAT if short name did not\nexist.  There was also a bug where the long file name variable\n(fatfs->lfn_len) was not reset after processing a directory and the\nnext entry could incorrectly get the long name.  Reported by Jaime\nChang.  BUG: 1203673.\n\n5/18/05: Update: Updated makedefs to support Darwin 8 (OS X Tiger)\n\n5/23/05: Bug Fix: ntfs_dent_walk would not always stop when WALK_STOP\nwas returned.  This caused some issues with previous versions of ifind.\nThis was fixed.\n\n5/24/05: Bug Fix: Would not compile under Suse because it had header\nfile conflicts for the size of int64_t. Reported by: Andrea Ghirardini.\nBUG: 1203676\n\n5/25/05: Update: Fixed some memory leaks in fstools (reported by Jaime\nChang).\n\n6/13/05: Update: Compiled with g++ to get better warning messages.\nFixed many signed versus unsigned comparisons, -1 assignments to\nunsigned vars, and some other minor internal issues.\n\n6/13/05: Bug Fix: if UFS or FFS found a valid dentry in unallocated\nspace, it could have a documented length that is larger than the\nremaining unallocated space.  This would cause an allocated name\nto be skipped.  BUG: 1210204  Reported by Christopher Betz.\n\n6/13/05: Update: Improved design of all dent code so that there are no\nmore global variables.\n\n6/13/05: Update: Improved design of FAT dent code so that FATFS_INFO\ndoes not keep track of long file name information.\n\n6/13/05: Bug Fix: If a cluster in a directory started with a strange\ndentry, then FAT inode_walk would skip it.  The fixis to make sure\nthat all directory sectors are processed.  (BUG: 1203669).  Reported\nby Jaime Chang.\n\n6/14/05: Update: Changed design of FS_INODE so that it contains the\ninode address and the inode_walk action was changed to remove inum\nas an argument.\n\n6/15/05: Update: Added 'ils -o' back in as 'ils -O' to list open\nand deleted files.\n\n6/15/05: Update: Added '-m' flag to mactime so that it prints the month\nas a number instead of its name.\n\n7/2/05: Bug Fix: If an NTFS file did not have a $DATA or $IDX_*\nattribute, then fls would not print it.  The file had no content, but\nthe name should be shown.  (BUG: 1231515) (Reported by Fuerst)\n\n\n---------------- VERSION 2.01 --------------\n3/24/05: Bug Fix: ffind would fail if the directory had two\nnon-printable chars.  The handling of non-printable chars was changed\nto replace with '^.'.  (BUG: 1170310) (reported by Brian Baskin)\n\n3/24/05: Bug Fix: icat would not print the output to stdout when split\nimages were used.  There was a bug in the image closing process of\nicat.  (BUG: 1170309) (reported by Brian Baskin)\n\n3/24/05: Update: Changed the header files in fstools to make fs_lib.h\nmore self contained.\n\n4/1/05: Bug Fix: Imgtools byte offset with many leading 0s could\ncause issues.  (BUG: 1174977)\n\n4/1/05: Update: Removed test check in mmtools/dos.c for value cluster\nsize because to many partition tables have that as a valid field.\nNow it checks only OEM name.\n\n4/8/05: Update: Updated usage of 'strtoul' to 'strtoull' for blocks\nand inodes.\n\n---------------- VERSION 2.00 --------------\n1/6/05: Update: Added '-b' flag to 'mmls' so that sizes can be\nprinted in bytes.  Suggested and a patch proposed by Matt Kucenski\n\n1/6/05: Update: Define DADDR_T, INUM_T, OFF_T, PNUM_T as a static\nsize and use those to store values in data structures.   Updated\nprint statements as well.\n\n1/6/05: Update: FAT now supports larger images becuase the inode\naddress space is 64-bits.\n\n1/6/05: Moved guess and get functions to misc from mmtools and\nfstools.\n\n1/7/05: Update: Added imgtools with support for \"raw\" and \"split\"\nlayers.  All fstools have been updated.\n\n1/7/05: Update: removed dtime from ils output\n\n1/9/05: Update: FAT code reads in clusters instead of sectors to\nbe faster (suggested by David Collett)\n\n1/9/05: Update: mmtools uses imgtools for split images etc.\n\n1/10/05: Update: Removed usage of global variables when using\nfile_walk internally.\n\n1/10/05: Update: mmls BSD will use the next sector automatically\nif the wrong is given instead of giving an error.\n\n1/10/05: Update: Updated file to version 4.12\n\n1/11/05: Update: Added autodetect to file system tools.\n\n1/11/05: Update: Changed names to specify file system type (not\nOS-based)\n\n1/11/05: Update: Added '-t' option to fsstat to give just the type.\n\n1/11/05: Update: Added autodetect to mmls\n\n1/17/05: Update: Added the 'mmstat' tool that gives the type of\nvolume system.\n\n1/17/05: Update: Now using CVS for local version control - added\ndate stamps to all files.\n\n2/20/05: Bug Fix: ils / istat would go into an infinte loop if the\nattribute list had an entry with a length of 0.  Reported by Angus\nMarshall (BUG: 1144846)\n\n3/2/05: Update: non-printable letters in ExtX/UFS file names are\nnow replaced by a '.'\n\n3/2/05: Update: Made file system tools more library friendly by\nmaking stubs for each application.\n\n3/4/05: Update: Redesigned the diskstat tool and created the\ndisksreset tool to remove the HPA temporarily.\n\n3/4/05: Update: Added imgstat tool that displays image format\ndetails\n\n3/7/05: Bug Fix: In fsstat on ExtX, the final group would have an\nincorrect _percentage_ of free blocks value (although the actual\nnumber was correct).  Reported by Knut Eckstein.  (BUG: 1158620)\n\n3/11/05: Update: Renamed diskstat, disksreset, sstrings, and imgstat to\ndisk_stat, disk_sreset, srch_strings, and img_stat to make the names more\nclear.\n\n3/13/05: Bug Fix: The verbose output for fatfs_file_walk had an\nincorrect sector address.  Reported by Rudolph Pereira.\n\n3/13/05: Bug Fix: The beta version had compiling problems on FreeBSD\nbecause of a naming clash with the new 'fls' functions. (reported\nby secman)\n\n\n\n---------------- VERSION 1.74 --------------\n11/18/04: Bug Fix: FreeBSD 5 would produce incorrect 'icat' output for\nExt2/3 & UFS1 images because it used a 64-bit on-disk address.\nreported by neutrino neutrino.  (BUG: 1068771)\n\n11/30/04: Bug Fix: The makefile in disktools would generate an error\non some systems (Cygwin) because of an extra entry.  Reported by\nVajira Ganepola (BUG: 1076029)\n\n\n---------------- VERSION 1.73 --------------\n09/09/04: Update: Added journal support for EXT3FS and added jls\nand jcat tools.\n\n09/13/04: Updated: Added the major and minor device numbers to\nEXTxFS istat.\n\n09/13/04: Update: Added EXTxFS orphan code to 'fsstat'\n\n09/24/04: Update: Fixed incorrect usage of 'ptr' and \"\" in action\n  of ntfs_dent.c.  Did not affect any code, but could have in the\n  future.  Reported by Pete Winkler.\n\n09/25/04: Update: Added UFS flags to fsstat\n\n09/26/04: Update: All fragments are printed for indirect block pointer\n  addresses in UFS istat.\n\n09/29/04: Update: Print extended UFS2 attributes in 'istat'\n\n10/07/04: Bug Fix: Changed usage of (int) to (uintptr_t) for pointer\narithmetic. Caused issues with Debian Sarge. (BUG: 1049352) - turned out\nto be from changes made to package version so that it would compile in\n64-bit system (BUG: 928278).\n\n10/11/04: Update: Added diskstat to check for HPA on linux systems.\n\n10/13/04: Update: Added root directory location to FAT32 fsstat output\n\n10/17/04: Bug Fix: EXTxFS superblock location would not be printed\nfor images in fsstat that did not have sparse superblok (which is\nrare)  (BUG: 1049355)\n\n10/17/04: Update: Added sigfind tool to find binary signatures.\n\n10/27/04: Bug Fix: NTFS is_clust_alloc returned an error when loading\n  $MFT that had attribute list entry.  Now I assume that clusters\n  referred to by the $MFT are allocated until the $MFT is loaded.\n  (BUG: 1055862).\n\n10/28/04: Bug Fix: Check to see if an attribute with the same name\n  exists instead of relying on id only. (ntfs_proc_attrseq) Affects\n  the processing of attribute lists.  Reported by Szakacsits Szabolcs,\n  Matt Kucenski, & Gene Meltser (BUG: 1055862)\n\n10/28/04: Update: Removed usage of mylseek in fstools for all systems\n  (Bug: 928278)\n\n\n---------------- VERSION 1.72 --------------\n07/31/04: Update: Added flag to mft_lookup so that ifind can run in noabort\nmode and it will not stop when it finds an invalid magic value.\n\n08/01/04: Update: Removed previous change and removed MAGIC check\nentirely.  XP doesn't even care if the Magic is corrupt, so neither\ndoes TSK.  The update sequence check should find an invalid MFT\nentry.\n\n08/01/04: Update: Added error message to 'ifind' if none of the search\noptions are given.\n\n08/05/04: Bug Fix: Fixed g_curdirptr recursive error by clearing the value\nwhen dent_walk had to abort because a deleted directory could not be recovered.\n(BUG:  1004329)  Reported by epsilon@yahoo.com\n\n08/16/04: Update: Added a sanity check to fatfs.c fat2unixtime to check\nif the year is > 137 (which is the overflow date for the 32-bit UNIX time).\n\n08/16/04: Update: Added first version of sstrings from binutils-2.15\n\n08/20/04: Bug Fix: Fixed a bug where the group number for block 0 of an\nEXT2FS file system would report -1. 'dstat' no longer displays value when it\nis not part of a block group. (BUG: 1013227)\n\n8/24/04: Update: If an attribute list entry is found with an invalid MFT\nentry address, then it is ignored instead of an error being generated and\nexiting.\n\n8/26/04: Update: Changed internal design of NTFS to make is_clust_alloc\n\n8/26/04: Update: If an attribute list entry is found with an invalid MFT\nentry address AND the entry is unallocated, then no error message is\nprinted, it is just ignored or logged in verbose mode.\n\n8/29/04: Update: Added support for 32-bit GID and UID in EXTxFS\n\n8/30/04: Bug Fix: ntfs_dent_walk was adding 24 extra bytes to the\nsize of the index record for the final record processing (calc of\nlist_len) (BUG: 1019321) (reported and debugging help from Matt\nKucenski).\n\n8/30/04: Bug Fix: fs_data_lookup was using an id of 0 as a wild\ncard, but 0 is a legit id value and this could cause confusion.  To\nsolve this, a new FS_FLAG_FILE_NOID flag was added and a new\nfs_data_lookup_noid function that will not use the id to lookup\nvalues.  (BUG: 1019690) (reported and debugging help from Matt\nKucenski)\n\n8/30/04: Update: modified fs_data_lookup_noid to return unamed data\nattribute if that type is requested (instead of just relying on id\nvalue in attributes)\n\n8/31/04: Update: Updated file to v4.10, which seems to fix the\nCYGWIN compile problem.\n\n9/1/04: Update: Added more DOS partition types to mmls (submitted by\nMatt Kucenski)\n\n9/2/04: Update: Added EXT3FS extended attributes and Posix ACL to istat\noutput.\n\n9/2/04: Update: Added free inode and block counts per group to fsstat for\nEXT2FS.\n\n9/7/04: Bug Fix: FreeBSD compile error for PRIx printf stuff in mmtools/gpt.c\n\n\n---------------- VERSION 1.71 --------------\n06/05/04: Update: Added sanity checks in fat to unix time conversion so that\ninvalid times are set to 0.\n\n06/08/04: Bug Fix: Added a type cast when size is assigned in FAT\nand removed the assignment to a 32-bit signed variable (which was no\nlonger needed).  (Bug: 966839)\n\n06/09/04: Bug Fix: Added a type cast to the 'getuX' macros because some\ncompilers were assuming it was signed (Bug: 966839).\n\n06/11/04: Update: Changed NTFS magic check to use the aa55 at the\nend and fixed the name of the original \"magic\" value to oemname.\nThe oemname is now printed in fsstat.\n\n06/12/04: Bug Fix: The NTFS serial number was being printed with\nbytes in the wrong order in the fsstat output. (BUG: 972207)\n\n06/12/04: Update: The begin offset value in index header for NTFS\nwas 16-bits instead of 32-bits.\n\n06/22/04: Update: Created a library for the MD5 and SHA1 functions so\nthat it can be incorporated into other tools.  Also renamed some of the\nindexing tools that hfind uses.\n\n06/23/04: Update: Changed output of 'istat' for NTFS images.  Added more\ndata from $STANDARD_INFORMATION.\n\n07/13/04: Update: Changed output of 'istat' for NTFS images again.  Moved\nmore data to the $FILE_NAME section and added new data.\n\n07/13/04: Update: Changed code for processing NTFS runs and no\nlonger check for the offset to be 0 in ntfs_make_data_run().  This\ncould have prevented some sparse files from being processed.\n\n07/13/04: Update: Added flags for compressed and encrypted NTFS\nfiles.  They are not decrypted or uncompressed yet, just identified.\nThey cannot be displayed from 'icat', but the known layout is given\nin 'istat'.\n\n07/18/04: Bug Fix: Sometimes, 'icat' would report an error about an\nexisting FILLER entry in an NTFS attribute.  This was traced to\ninstances when it was run on a non-base file record.  There is now\na check for that to not show the error. (BUG: 993459)\n\n07/19/04: Bug Fix: A run of -1 may exist for sparse files in non-NT\nversions of NTFS.  Changed check for this.  reported by Matthew\nKucenski.  (BUG: 994024).\n\n07/24/04: Bug Fix: NTFS attribute names were missing (rarely) on\nsome files because the code assumed they would always be at offset\n64 for non-res attributes (Bug: 996981).\n\n07/24/04: Update: Made listing of unallcoated NTFS file names less\nstrict.  There was a check for file name length versus stream length.\n\n07/24/04: Update: Added $OBJECT_ID output to 'istat'\n\n07/24/04: Update: Fixed ntfs.c compile warning about constant too\nlarge in time conversion code.\n\n07/25/04: Update: Added attribute list contents to NTFS 'istat' output\n\n07/25/04: Bug Fix: Not all slack space was being shown with 'dls -s'.\nIt was documented that this occurs, but it is not what would be\nexpected.  (BUG: 997800).\n\n07/25/04: Update: Changed output format of 'dls -s' so that it sends\nzeros where the file content was.  Therefore the output is now a\nmultiple of the data unit size.  Also removed limitation to FAT &\nNTFS.\n\n07/25/04: Update: 'dcalc' now has the '-s' option calculate the\noriginal location of data from a slack space image (dls -s).\n(from Chris Betz).\n\n07/26/04: Update: Created the fs_os.h file and adjusted some of the\nheader files for the PRI macros (C99).  Created defines for OSes that do\nnot have the macros already defined.\n\n07/26/04: Non-release bug fix: Fixed file record size bug introduced with\nrecent changes.\n\n07/27/04: Update: Added GPT support to mmls.\n\n07/29/04: Update: Added '-p' flag to 'ifind' to find deleted NTFS files\nthat point to the given parent directory.  Added '-l and -z' as well.\n\n\n---------------- VERSION 1.70 --------------\n04/21/04: Update: Changed attribute and mode for FAT 'istat' so\nthat actual FAT attributes are used instead of UNIX translation.\n\n04/21/04: Update: The FAT 'istat' output better handles Long FIle\nName entry\n\n04/21/04: Update: The FAT 'istat' output better handles Volume Label\nentry\n\n04/21/04: Update: Allowed the FAT volume label entry to be displayed\nwith 'ils'\n\n04/21/04: Update: Allowed the FAT volume label entry to be displayed\nwith 'fls'\n\n04/24/04: Update: 'dstat' on a FAT cluster now shows the cluster\naddress in addition to the sector address.\n\n04/24/04: Update: Added the cluster range to the FAT 'fsstat' output\n\n05/01/04: Update: Improved the FAT version autodetect code.\n\n05/02/04: Update: Removed 'H' flag from 'icat'.\n\n05/02/04: Update: Changed all of the FS_FLAG_XXX variables in the\n  file system tools to constants that are specific to the usage\n  (NAME, DATA, META, FILE).\n\n05/03/04: Update: fatfs_inode_walk now goes by sectors instead of clusters\n  to get more dentries from slack space.\n\n05/03/04: Bug Fix: The allocation status of FAT dentires was set only by\n  the flag and not the allocation status of the cluster it is located in.\n  (BUG: 947112)\n\n05/03/04: Update: Improved comments and variable names in FAT code\n\n05/03/04: Update: Added '-r' flag to 'icat' for deleted file recovery\n\n05/03/04: Update: Added RECOVERY flag to file_walk for deleted file\n  recovery\n\n05/03/04: Update: Added FAT file recovery.\n\n05/03/04: Update: Removed '-H' flag from 'icat'.  Default is to\n  display holes.\n\n05/03/04: Update: 'fls -r' will recurse down deleted directories in FAT\n\n05/03/04: Update: 'fsstat' reports FAT clusters that are marked as BAD\n\n05/03/04: Update: 'istat' for FAT now shows recovery clusters for\n  deleted files.\n\n05/04/04: Update:  Added output to 'fsstat' for FAT file systems by adding\n  a list of BAD sectors and improving the amount of layout information.  I\n  also changed some of the internal variables.\n\n05/08/04: Update: Removed addr_bsize from FS_INFO, moved block_frags\n  to FFS_INFO, modified dcat output only data unit size.\n\n05/20/04: Update: Added RECOVERY flag to 'ifind' so that it can find the\n  data units that are allocated to deleted files\n\n05/20/04: Update: Added icat recovery options to 'sorter'.\n\n05/20/04: Update: Improved the naming convention in sorter for the 'ils'\n  dead files.\n\n05/21/04: Update: Added outlook to sorter rules (from David Berger)\n\n05/27/04: Bug Fix: Added <linux/unistd.h> to mylseek.c so that it compiles\nwith Fedora Core 2 (Patch by Angus Marshall) (BUG: 961908).\n\n05/27/04: Update: Changed the letter with 'fls -l' for FIFO to 'p'\ninstead of 'f' (reported by Dave Henkewick).\n\n05/28/04: Update: Added '-u' flag to 'dcat' so that the data unit size\ncan be specified for raw, swap, and dls image types.\n\n05/28/04: Update: Changed the size  argument  of 'dcat' to be number of\ndata units instead of size in bytes (suggestion by Harald Katzer).\n\n\n---------------- VERSION 1.69 --------------\n03/06/04: Update: Fixed some memory leaks in ext2fs_close.  reported\n  by Paul Bakker.\n03/10/04: Bug Fix: If the '-s' flag was used with 'icat' on a EXT2FS\n  or FFS file system, then a large amount of extra data came out.\n  Reported by epsion.  (BUG: 913874)\n03/10/04: Bug Fix: One of the verbose outputs in ext2fs.c was being sent\n  to STDOUT instead of logfp. (BUG: 913875)\n04/14/04: Update: Added more data to fsstat output of FAT file system.\n04/15/04: Bug Fix:  The last sector of a FAT file system may not\n  be analyzed.  (BUG: 935976)\n04/16/04: Update: Added full support for swap and raw by making the\n standard files and functions for them instead of the hack in dcat.\n Suggested by (and initial patch by) Paul Baker.\n04/18/04: Update: Changed error messages in EXT2/3FS  code to be extXfs.\n04/18/04: Update: Updaged to version 4.09 of 'file'.  This will\n  help fix some of the problems people have had compiling it under\n  OS X 10.3.\n04/18/04: Update: Added compiling support for SFU 3.5 (Microsoft).  Patches\n  from an anonymous person.\n\n\n---------------- VERSION 1.68 --------------\n01/20/04: Bug Fix: FAT times were an hour too fast during daylight savings.\n  Now use mktime() instead of manual calculation.  Reported by Randall\n  Shane. (BUG: 880606)\n02/01/04: Update: 'hfind -i' now reports the header entry as an invalid\n  entry.  The first header row was ignored.\n02/20/04: Bug Fix: indirect block pointer blocks would not be identified by\n the ifind tool.  Reported by Knut Eckstein (BUG: 902709)\n03/01/04: Update: Added fs->seek_pos check to fs_read_random.\n\n---------------- VERSION 1.67 --------------\n11/15/03: Bug Fix: Added support for OS X 10.3 to src/makedefs. (BUG: 843029)\n11/16/03: Bug Fix: Mac partition tables could generate an error if there were\n  VOID-type partitions.   (BUG: 843366)\n11/21/03: Update: Changed NOABORT messages to verbose messages, so invalid\n  data is not printed during 'ifind' searches.\n11/30/03: Bug Fix: icat would not hide the 'holes' if '-h' was given because\n  the _UNALLOC flag was always being passed to file_walk.  (reported by\n  Knut Eckstein).  (BUG: 851873)\n11/30/03: Bug Fix: NTFS data_walk was not using _ALLOC and _UNALLOC flags\n  and other code that called it was not either.  (BUG: 851895)\n11/30/03: Bug Fix:  Not all needed commands were using _UNALLOC when they\n  called file_walk (although for most cases it did not matter because\n  sparse files would not be found in a directory for example). (Bug: 851897)\n12/09/03: Bug Fix: FFS and EXT2FS code was using OFF_T type instead of\n  size_t for the size of the file. This could result in a file > 2GB\n  as being a negative size on some systems (BUG: 856957).\n12/26/03: Bug Fix: ffind would crash for root directory of FAT image.\n  Added NULL check and added a NULL name to fake root directory entry.\n  (BUG: 871219)\n01/05/04: Bug Fix: The clustcnt value for FAT was incorrectly calculated\n  and was too large for FAT12 and FAT16 by 32 sectors.  This could produce\n  extra entries in the 'fsstat' output when the FAT is dumped.\n  (BUG: 871220)\n01/05/04: Bug Fix: ils, fls, and istat were not printing the full size\n  of files that are > 2GB.  (reported by Knut Eckstein) (BUG: 871457)\n01/05/04: Bug Fix: The EXT2FS and EXT3FS code was not using the\n  i_dir_acl value as the upper 32-bits of regular files that are\n  > 2GB (BUG:  871458)\n01/06/04: Mitigation: An error was reported where sorter would error\n  that icat was being passed a '-1' argument.  I can't find how that would\n  happen, so I added quotes to all arguments so that the next time it\n  occurs, the error is more useful (BUG: 845840).\n01/06/04: Update: Incorporated patch from Charles Seeger so that 'cc'\n  can be used and compile time warnings are fixed with Sun 'cc'.\n01/06/04: Update: Upgraded file from v3.41 to v4.07\n\n\n---------------- VERSION 1.66 --------------\n09/02/03: Bug Fix: Would not compile under OpenBSD 3 because fs_tools.h\n  & mm_tools was missing a defined statement (reported by Randy - m0th_man)\nNOTE: Bugs now will have an entry into the Source Forge bug tracking\n  sytem.\n10/13/03: Bug Fix: buffer was not being cleared between uses and length\n incorrectly set in NTFS resulted in false deleted file names being shown\n when the '-r' flag was given.  The extra entries were from the previous\n directory.  (BUG: 823057)\n10/13/03: Bug Fix: The results of 'sorter' varied depending on the version\n  of Perl and the system.   If the file output matched more than one,\n  sorter could not gaurantee which would match.  Therefore, results were\n  different for some files and some machines.  'sorter' now enforces the\n  ordering based on the order they are in the configuration file.  The\n  entries at the end of the file have priority over the first entries\n  (generic rules to specific rules).  (BUG: 823057)\n10/14/03: Update: 'mmls' prints 'MS LVM' with partition type 0x42 now.\n10/25/03: Bug Fix: NTFS could have a null pointer crash if the image\n  was very corrupt and $Data was not found for the MFT.\n11/10/03: Bug Fix: NTFS 'ffind' would only report the file name and not\n  the attribute  name because the type and id were ignored.  ffind and\n  ntfs_dent were updated - found during NTFS keyword search test.\n  (Bug: 831579()\n11/12/03: Update: added support for Solaris x86 partition tables to 'mmls'\n11/12/03: Update: Modified the sparc data structure to add the correct\n  location of the 'sanity' magic value.\n11/15/03: Update: Added '-s' flag to 'icat' so that slack space is also\n  displayed.\n\n---------------- VERSION 1.65 --------------\n08/03/03: Bug Fix: 'sorter' now checks for inode values that are too\n  small to avoid 'icat' errors about invalid inode values.\n08/19/03: Update: 'raw' is now a valid type for 'dcat'.\n08/21/03: Update: mactime and sorter look for perl5.6.0 first.\n08/21/03: Update: Removed NSRL support from 'sorter' until a better\n wany to identify the known good and known bad files is found\n08/21/03: Bug Fix: The file path replaces < and > with HTML\n  encoding for HTML output (ils names were not being shown)\n08/25/03: Update: Added 'nsrl.txt' describing why the NSRL functionality\n  was removed.\n08/27/03: Update: Improved code in 'mactime' to reduce warnings when\n  '-w' is used with Perl ('exists' checks on arrays).\n08/27/03: Update: Improved code in 'sorter' to reduce warnings when\n  '-w' is used with Perl (inode_int for NTFS).\n\n---------------- VERSION 1.64 --------------\n08/01/03: Docs Fix: The Sun VTOC was documented as Virtual TOC and it\n  should be Volume TOC (Jake @ UMASS).\n08/02/03: Bug Fix: Some compilers complained about verbose logging\n  assignment in 'mmls'  (Ralf Spenneberg).\n\n---------------- VERSION 1.63 --------------\n06/13/03; Update: Added 'mmtools' directory with 'dos' partitions\n  and 'mmls'.\n06/18/03: Update: Updated the documents in the 'doc' directory\n06/19/03: Update: Updated error message for EXT3FS magic check\n06/27/03: Update: Added slot & table number to mmls\n07/08/03: Update: Added mac support to mmtools\n07/11/03: Bug Fix: 'sorter' was not processing all unallocated meta\n  data structures because of a regexp error.  (reported by Jeff Reava)\n07/16/03: Update: Added support for FreeBSD5\n07/16/03: Update: Added BSD disk labels to mmtools\n07/28/03: Update: Relaxed requirements for DOS directory entries, the wtime\n  can be zero (reported by Adam Uccello).\n07/30/03: Update: Added SUN VTOC to mmtools\n07/31/03: Update: Added NetBSD support (adam@monkeybyte.org)\n08/01/03: Update: Added more sanity checks to FAT so that it would not\n  try and process NTFS images that have the same MAGIC value\n\n---------------- VERSION 1.62 --------------\n04/11/03: Bug Fix: 'fsstat' for an FFS file system could report data\n  fragments in the last group that were larger than the maximum\n  fragment\n04/11/03: Bug Fix: 'ffs' allows the image to not be a multiple of the\n  block size.  A read error occurred when it tried to read the last\n  fragments since a whole block could not be read.\n04/15/03: Update: Added debug statements to FAT code.\n04/26/03: Update: Added verbose statements to FAT code\n04/26/03: Update: Added NOABORT flag to dls -s\n04/26/03: Update: Added stderr messages for errors that are not aborted\n  because of NOABORT\n05/27/03: Update: Added 'mask' field to FATFS_INFO structure and changed\n  code in fatfs.c to use it.\n05/27/03: Update: isdentry now checks the starting cluster to see if\n  it is a valid size.\n05/27/03: Bug Fix: Added a sanitizer to 'sorter' to remove invalid chars\n  from the 'file' output and reduce the warnings from Perl.\n05/28/03: Bug Fix: Improved sanitize expression in 'sorter'\n05/28/03: Update: Added '-d' option to 'mactime' to allow output to be\n  given in comma delimited format for importing into a spread sheet or\n  other graphing tool\n06/09/03: Update: Added hourly summary / indexing to mactime\n06/09/03: Bug Fix: sorter would not allow linux-ext3 fstype\n\n\n---------------- VERSION 1.61 --------------\n02/05/03: Update: Started addition of image thumbnails to sorter\n03/05/03: Update: Updated 'file' to version 3.41\n03/16/03: Update: Added comments and NULL check to 'ifind'\n03/16/03: Bug Fix: Added a valid magic of 0 for MFT entries.  This was\n  found in an XP image.\n03/26/03: Bug Fix: fls would crash for an inode of 0 and a clock skew\n  was given.  fixed the bug in fls.c (debug help from Josep Homs)\n03/26/03: Update: Added more verbose comments to ntfs_dent.c.\n03/26/03: Bug Fix: 'ifind' for a path could return a result that was\n  shorter than the requested name (strncmp was used)\n03/26/03: Update: Short FAT names can be used in 'ifind -n' and\n  error messages were improved\n03/26/03: Bug Fix: A final NTFS Index Buffer was not always processed in\n  ntfs_dent.c, which resulted in files not being shown.  This was fixed\n  with debugging help from Matthew Shannon.\n03/27/03: Update: Added an 'index.html' for image thumbnails in sorter\n  and added a 'details' link from the thumbnail to the images.html file\n03/27/03: Update: 'sorter' can now take a directory inode to start\n  processing\n03/27/03: Update: added '-z' flag when running 'file' in 'sorter' so that\n  compressed file contents are reported\n03/27/03: Update: added '-i' flag to 'mactime' that creates a daily\n  summary of events\n03/27/03: Update: Added support for Version 2 of the NSRL in 'hfind'\n04/01/03: Update: Added support for Hash Keeper to 'hfind'\n04/01/03: Update: Added '-e' flag to 'hfind' for extended info\n  (currently hashkeeper only)\n\n\n---------------- VERSION 1.60 --------------\n10/31/02: Bug Fix: the unmounting status of EXT2FS in the 'fsstat' command\n  was not correct (reported by Stephane Denis).\n11/24/02: Bug Fix: The -v argument was not allowed on istat or fls (Michael\n  Stone)\n11/24/02: Bug Fix: When doing an 'ifind' on a UNIX fs, it could abort if it\n  looked at an unallocated inode with invalid indirect block pointers.\n  This was fixed by adding a \"NOABORT\" flag to the walk code and adding\n  error checks in the file system code instead of relying on the fs_io\n  code.  (suggested by Micael Stone)\n11/26/02: Update: ifind has a '-n' argument that allows one to specify a\n  file name it and it searches to find the meta data structure for it\n  (suggested by William Salusky).\n11/26/02: Update: Now that there is a '-n' flag with 'ifind', the '-d'\n  flag was added to specify the data unit address.  The old syntax of\n  giving the data_unit at the end is no longer supported.\n11/27/02: Update: Added sanity checks on meta data and data unit addresses\n  earlier in the code.\n12/12/02: Update: Added additional debug statements to NTFS code\n12/19/02: Update: Moved 'hash' directory to 'hashtools'\n12/19/02: Update: Started development of 'hfind'\n12/31/02: Update: Improved verbose debug statements to show full 64-bit\n  offsets\n01/02/03: Update: Finished development of 'hfind' with ability to update\n  for next version of NSRL (which may have a different format)\n01/05/03: Bug Fix: FFS and EXT2FS symbolic link destinations where not\n  properly NULL terminated and some extra chars were appended in 'fls'\n  (later reported by Thorsten Zachmann)\n01/06/03: Bug Fix: getu64() was not properly masking byte sizes and some\n  data was being lost.  This caused incorrect times to be displayed in some\n  NTFS files.\n01/06/03: Bug Fix: ifind reported incorrect ownership for some UNIX\n  file systems if the end fragments were allocated to a different file than\n  the first ones were.\n01/07/03: Update: Renamed the src/mactime directory to src/timeline.\n01/07/03: Update: Updated README and man pages for hfind and sorter\n01/12/03: Bug Fix: ntfs_mft_lookup was casting a 64-bit value to a 32-bit\n  variable.  This caused MFT Magic errors.  Reported and debugged by\n  Keven Murphy\n01/12/03: Update: Added verbose argument to 'fls'\n01/12/03: Bug Fix: '-V' argument to 'istat' was doing verbose instead of\n  version\n01/13/03: Update: Changed static sizes of OFF_T and DADDR_T in Linux\n  version to the actual 'off_t' and 'daddr_t' types\n01/23/03: Update: Changed use of strtok_r to strtok in ifind.c so that\n  Mac 10.1 could compile (Dave Goldsmith).\n01/28/03: Update: Improved code in 'hfind' and 'sorter' to handle\n  files with spaces in the path (Dave Goldsmith).\n\n---------------- VERSION 1.52 --------------\n09/24/02: Bug Fix: Memory leak in ntfs_dent_idxentry(), ntfs_find_file(),\n  and ntfs_dent_walk()\n09/24/02: Update: Removal of index sequences for index buffers is now\n  done using upd_off, which will allow for NTFS to move the structure in\n  the future.\n09/26/02: Update: Added create time for NTFS / STANDARD_INFO to\n  istat output.\n09/26/02: Update: Changed the method that the NTFS time is converted\n  to UNIX time.  Should be more efficient.\n10/09/02: Update: dcat error changed.\n10/02/02: Update: Includes a Beta version of 'sorter'\n\n\n---------------- VERSION 1.51 --------------\n09/10/02: Bug Fix: Fixed a design bug that would not allow attribute\n  lists in $MFT.  This bug would generate an error that complained about\n  an invalid MFT entry in attribute list.\n09/10/02: Update: The size of files and directories is now calculated\n  after each time proc_attrseq() is called so that it is more up to date\n  when dealing with attribute lists.  The size has the sizes of all\n  $Data, $IDX_ROOT, and $IDX_ALLOC streams.\n09/10/02: Update: The maxinum number of MFT entries is now calculated\n  each time an MFT entry is processed while loading the MFT.  This\n  allows us to reflect what the maximum possible MFT entry is at that\n  given point based on how many attribute lists have been processed.\n09/10/02: Update: Added file version 3.39 to distro (bigger magic files)\n  (Salusky)\n09/10/02: Bug Fix: fs_data was wasting memory when it was allocated\n09/10/02: Update: added a fs_data_alloc() function\n09/12/02: Bug Fix: Do not give an error if an attribute list of an\n  unallocated file points to an MFT that no longer claims it is a\n  member of the list.\n09/12/02: Update: No longer need version to remove update sequence\n  values from on-disk buffers\n09/19/02: Bug Fix: fixed memory leak in ntfs_load_ver()\n09/19/02: Bug Fix: Update sequence errors were displayed because of a\n  bug that occurred when an MFT entry crossed a run in $MFT.  Only occurred\n  with 512-byte clusters and an odd number of clusters in a run.\n09/19/02: Update: New argument to ils, istat, and fls that allows user to\n  specify a time skew in seconds of the compromised system.  Originated\n  from discussion at DFRWS II.\n09/19/02: Update: Added '-h' argument to mactime to display header info\n\n---------------- VERSION 1.50 --------------\n\n04/21/02: icat now displays idxroot attribute for NTFS directories\n04/21/02: fs_dent_print functions now are passed the FS_DATA structure\n  instead of the extra inode and name strings.  (NTFS)\n04/21/02: fs_dent_print functions display alternate data stream size instead\n of the default data size (NTFS)\n04/24/02: Fixed bug in istat that displayed too many fragments with ffs images\n04/24/02: Fixed bug in istat that did not display sparse files correctly\n04/24/02: fsstat of FFS images now identifies the fragments at the\n  beginning of cyl groups as data fragments.\n04/26/02: Fixed bug in ext2fs_dent_parse_block that did not advance the\n  directory entry pointer far enough each time\n04/26/02: Fixed bug in ext2fs_dent_parse_block so that gave an error if\n  a file name was exactly 255 chars\n04/29/02: Removed the getX functions from get.c as they are now macros\n05/11/02: Added support for lowercase flag in FAT\n05/11/02: Added support for sequence values (NTFS)\n05/13/02: Added FS_FLAG_META for FAT\n05/13/02: Changed ifind so that it looks the block up to identify if it is\n  a meta data block when an inode can not be found\n05/13/02: Added a conditional to ifind so that it handles sparse files better\n05/19/02: Changed icat so that the default attribute type is set in the\n  file_walk function\n05/20/02: ils and dls now use boundary inode & block values if too large\n  or small are given\n05/21/02: istat now displays all NTFS times\n05/21/02: Created functions to just display date and time\n05/24/02: moved istat functionality to the specific file system file\n05/25/02: added linux-ext3 flag, but no new features\n05/25/02: Added sha1 (so Autopsy can use the NIST SW Database)\n05/26/02: Fixed bug with FAT that did not return all slack space on file_walk\n05/26/02: Added '-s' flag to dls to extract slack space of FAT and NTFS\n06/07/02: fixed _timezone variable so correct times are shown in CYGWIN\n06/11/02: *_copy_inode now sets the flags for the inode\n06/11/02: fixed bug in mactimes that displayed a duplicate entry with time\n  because of header entries in body file\n06/12/02: Added ntfs.README doc\n06/16/02: Added a comment to file Makefile to make it easier to compile for\n  an IR CD.\n06/18/02: Fixed NTFS bug that showed ADS when only deleted files were supposed\n  to be shown (when ADS in directory)\n06/19/02: added the day of the week to the mactime output (Tan)\n07/09/02: Fixed bug that added extra chars to end of symlink destination\n07/17/02: 1.50 Released\n\n\n\n---------------- VERSION 1.00 --------------\n- Integrated TCT-1.09 and TCTUTILs-1.01\n- Fixed bug in bcat if size is not given with type of swap.\n- Added platform indep by including the structures of each file system type\n- Added flags for large file support under linux\n- blockcalc was off by 1 if calculated using the raw block number and\nnot the one that lazarus spits out (which start at 1)\n- Changed the inode_walk and block_walk functions slightly to return a\nvalue so that a walk can be ended in the middle of it.\n- FAT support added\n- Improved ifind to better handle fragments\n- '-z' flag to fls and istat now use the time zone string instead of\ninteger value.\n- no longer prepend / in _dent\n- verify that '-m' directory in fls ends with a '/'\n- identify the destination of sym links\n- fsstat tool added\n- fixed caching bug with FAT12 when the value overlapped cache entries\n- added mactime\n- removed the <inode> value in fls when printing mac format (inode is now printed in mactime)\n- renamed src/misc directory to src/hash (it only has md5 and will have sha)\n- renamed aux directory to misc (Windows doesn't allow aux as a name ??)\n- Added support for Cygwin\n- Use the flags in super block of EXT2FS to identify v1 or v2\n- removed file system types of linux1 and linux2 and linux\n- added file system type of linux-ext2 (as ext3 is becoming more popular)\n- bug in file command that reported seek error for object files and STDIN\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.9033203125,
          "content": "[![codecov](https://codecov.io/github/sleuthkit/sleuthkit/branch/develop/graph/badge.svg?token=pfFlgpWdCt)](https://codecov.io/github/sleuthkit/sleuthkit)\n\n[![Build status](https://ci.appveyor.com/api/projects/status/8f7ljj8s2lh5sqfv?svg=true)](https://ci.appveyor.com/project/bcarrier/sleuthkit)\n\n# [The Sleuth Kit](http://www.sleuthkit.org/sleuthkit)\n\n## INTRODUCTION\nThe Sleuth Kit is an open source forensic toolkit for analyzing\nMicrosoft and UNIX file systems and disks.  The Sleuth Kit enables\ninvestigators to identify and recover evidence from images acquired\nduring incident response or from live systems.  The Sleuth Kit is\nopen source, which allows investigators to verify the actions of\nthe tool or customize it to specific needs.\n\nThe Sleuth Kit uses code from the file system analysis tools of\nThe Coroner's Toolkit (TCT) by Wietse Venema and Dan Farmer.  The\nTCT code was modified for platform independence.  In addition,\nsupport was added for the NTFS (see [wiki/ntfs](http://wiki.sleuthkit.org/index.php?title=NTFS_Implementation_Notes)) \nand FAT (see [wiki/fat](http://wiki.sleuthkit.org/index.php?title=FAT_Implementation_Notes)) file systems.  Previously, The Sleuth Kit was\ncalled The @stake Sleuth Kit (TASK).  The Sleuth Kit is now independent\nof any commercial or academic organizations.\n\nIt is recommended that these command line tools can be used with\nthe Autopsy Forensic Browser.  Autopsy, (http://www.sleuthkit.org/autopsy),\nis a graphical interface to the tools of The Sleuth Kit and automates\nmany of the procedures and provides features such as image searching\nand MD5 image integrity checks.\n\nAs with any investigation tool, any results found with The Sleuth\nKit should be be recreated with a second tool to verify the data.\n\n## OVERVIEW\nThe Sleuth Kit allows one to analyze a disk or file system image\ncreated by 'dd', or a similar application that creates a raw image.\nThese tools are low-level and each performs a single task.  When\nused together, they can perform a full analysis.  For a more detailed\ndescription of these tools, refer to [wiki/filesystem](http://wiki.sleuthkit.org/index.php?title=TSK_Tool_Overview). \nThe tools are briefly described in a file system layered approach.  Each\ntool name begins with a letter that is assigned to the layer.  \n\n### File System Layer:\nA disk contains one or more partitions (or slices).  Each of these\npartitions contain a file system.  Examples of file systems include\nthe Berkeley Fast File System (FFS), Extended 2 File System (EXT2FS),\nFile Allocation Table (FAT), and New Technologies File System (NTFS).\n\nThe fsstat tool displays file system details in an ASCII format.\nExamples of data in this display include volume name, last mounting\ntime, and the details about each \"group\" in UNIX file systems.\n\n### Content Layer (block):\nThe content layer of a file system contains the actual file content,\nor data.  Data is stored in large chunks, with names such as blocks,\nfragments, and clusters.  All tools in this layer begin with the letters\n'blk'.  \n\nThe blkcat tool can be used to display the contents of a specific unit of\nthe file system (similar to what 'dd' can do with a few arguments).\nThe unit size is file system dependent.  The 'blkls' tool displays the\ncontents of all unallocated units of a file system, resulting in a\nstream of bytes of deleted content.  The output can be searched for\ndeleted file content.  The 'blkcalc' program allows one to identify the\nunit location in the original image of a unit in the 'blkls' generated\nimage.\n\nA new feature of The Sleuth Kit from TCT is the '-l' argument to\n'blkls' (or 'unrm' in TCT).  This argument lists the details for data\nunits, similar to the 'ils' command.  The 'blkstat' tool displays\nthe statistics of a specific data unit (including allocation status\nand group number).\n\n### Metadata Layer (inode):\nThe metadata layer describes a file or directory.  This layer contains\ndescriptive data such as dates and size as well as the addresses of the\ndata units.  This layer describes the file in terms that the computer\ncan process efficiently.   The structures that the data is stored in\nhave names such as inode and directory entry.  All tools in this layer\nbegin with an 'i'.  \n\nThe 'ils' program lists some values of the metadata structures.\nBy default, it will only list the unallocated ones.  The 'istat'\ndisplays metadata information in an ASCII format about a specific\nstructure.  New to The Sleuth Kit is that 'istat' will display the\ndestination of symbolic links.  The 'icat' function displays the\ncontents of the data units allocated to the metadata structure\n(similar to the UNIX cat(1) command).  The 'ifind' tool will identify\nwhich metadata structure has allocated a given content unit or\nfile name.\n\nRefer to the [ntfs wiki](http://wiki.sleuthkit.org/index.php?title=NTFS_Implementation_Notes) \nfor information on addressing metadata attributes in NTFS.\n\n### Human Interface Layer (file):\nThe human interface layer allows one to interact with files in a\nmanner that is more convenient than directly with the metadata\nlayer.  In some operating systems there are separate structures for\nthe metadata and human interface layers while others combine them.\nAll tools in this layer begin with the letter 'f'.  \n\nThe 'fls' program lists file and directory names.  This tool will\ndisplay the names of deleted files as well.  The 'ffind' program will\nidentify the name of the file that has allocated a given metadata\nstructure.  With some file systems, deleted files will be identified.\n\n#### Time Line Generation\nTime lines are useful to quickly get a picture of file activity.\nUsing The Sleuth Kit a time line of file MAC times can be easily\nmade.  The mactime (TCT) program takes as input the 'body' file\nthat was generated by fls and ils.  To get data on allocated and\nunallocated file names, use 'fls -rm dir' and for unallocated inodes\nuse 'ils -m'.  Note that the behavior of these tools are different\nthan in TCT.  For more information, refer to [wiki/mactime](http://wiki.sleuthkit.org/index.php?title=Mactime).\n\n\n#### Hash Databases\nHash databases are used to quickly identify if a file is known.  The\nMD5 or SHA-1 hash of a file is taken and a database is used to identify\nif it has been seen before.  This allows identification to occur even\nif a file has been renamed.\n\nThe Sleuth Kit includes the 'md5' and 'sha1' tools to generate\nhashes of files and other data.\n\nAlso included is the 'hfind' tool.  The 'hfind' tool allows one to create\nan index of a hash database and perform quick lookups using a binary\nsearch algorithm.  The 'hfind' tool can perform lookups on the NIST\nNational Software Reference Library (NSRL) (www.nsrl.nist.gov) and\nfiles created from the 'md5' or 'md5sum' command.   Refer to the \n[wiki/hfind](http://wiki.sleuthkit.org/index.php?title=Hfind) file for more details.  \n\n#### File Type Categories\nDifferent types of files typically have different internal structure.\nThe 'file' command comes with most versions of UNIX and a copy is\nalso distributed with The Sleuth Kit.  This is used to identify\nthe type of file or other data regardless of its name and extension.\nIt can even be used on a given data unit to help identify what file\nused that unit for storage.  Note that the 'file' command typically\nuses data in the first bytes of a file so it may not be able to\nidentify a file type based on the  middle blocks or clusters.\n\nThe 'sorter' program in The Sleuth Kit will use other Sleuth Kit\ntools to sort the files in a file system image into categories.\nThe categories are based on rule sets in configuration files.  The\n'sorter' tool will also use hash databases to flag known bad files\nand ignore known good files.  Refer to the [wiki/sorter](http://wiki.sleuthkit.org/index.php?title=Sorter)\nfile for more details.\n\n\n## LICENSE\nThere are a variety of licenses used in TSK based on where they\nwere first developed.  The licenses are located in the [licenses\ndirectory](https://github.com/sleuthkit/sleuthkit/tree/develop/licenses).\n\n- The file system tools (in the\n[tools/fstools](https://github.com/sleuthkit/sleuthkit/tree/develop/tools/fstools)\ndirectory) are released under the IBM open source license and Common\nPublic License.\n- srch_strings and fiwalk are released under the GNU Public License\n- Other tools in the tools directory are Common Public License\n- The modifications to 'mactime' from the original 'mactime' in TCT\nand 'mac-daddy' are released under the Common Public License.\n\nThe library uses utilities that were released under MIT and BSD 3-clause. \n\n\n## INSTALL\nFor installation instructions, refer to the INSTALL.txt document.\n\n## OTHER DOCS\nThe [wiki](http://wiki.sleuthkit.org/index.php?title=Main_Page) contains documents that \ndescribe the provided tools in more detail.  The Sleuth Kit Informer is a newsletter that contains\nnew documentation and articles.\n\n> www.sleuthkit.org/informer/\n\n## MAILING LIST\nMailing lists exist on SourceForge, for both users and a low-volume\nannouncements list.\n\n> http://sourceforge.net/mail/?group_id=55685\n\nBrian Carrier\n\ncarrier at sleuthkit dot org\n \n"
        },
        {
          "name": "README_win32.txt",
          "type": "blob",
          "size": 1.7275390625,
          "content": "                          The Sleuth Kit\n                        Win32 README File\n\n                http://www.sleuthkit.org/sleuthkit\n\n                     Last Modified: Jan 2014\n\n====================================================================\nThe Sleuth Kit (TSK) runs on Windows.  If you simply want the\nexecutables, you can download them from the www.sleuthkit.org\nwebsite.\n\nIf you want to build your own executables, you have two options.\n\n1) Microsoft Visual Studio.  The VS solution file is in the win32\ndirectory.  Refer to the win32\\BUILDING.txt file for details for\nbuilding the 32-bit and 64-bit versions. \n\n2) mingw32.  See below for more details.\n\n\n---------------------------------------------------------------\nMINGW32\n\nIf you're using mingw32 on Linux, simply give the\n\"--host=i586-mingw32msvc\" argument when running the './configure'\nscript and use 'make' to compile.  If you're using mingw32 on Windows,\n'./configure' and 'make' will work directly.\n\nNote that to compile the Java bindings  you will need to have a JDK\nto be installed, and by default the Oracle JDK on Windows is installed\nin a path such as C:\\Program Files\\Java\\jdk1.6.0_16\\.  GNU autotools\n(which is used if you do a mingw32 compile, but not a Visual Studio\ncompile) do not handle paths containing spaces, so you will need\nto copy the JDK to a directory without spaces in the name, such as\nC:\\jdk1.6.0_16\\, then add C:\\jdk1.6.0_16\\bin to $PATH before running\n'./configure'\n\nNote also that libtool may fail on mingw32 on Windows if\nC:\\Windows\\system32 is on $PATH before /usr/bin.  The fix is to have\nthe C:\\Windows directories at the _end_ of your mingw $PATH.\n\n-------------------------------------------------------------------\ncarrier <at> sleuthkit <dot> org\nBrian Carrier\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.7490234375,
          "content": "version: 4.6.0.{build}\n\nenvironment:\n  matrix:\n  - job_name: Windows Build\n    appveyor_build_worker_image: Visual Studio 2019\n  - job_name: Linux Build\n    appveyor_build_worker_image: Ubuntu\n  - job_name: macOS Build\n    appveyor_build_worker_image: macos-catalina\n\nmatrix:\n\n  fast_finish: true\n\n\n# job-specific configurations\nfor:\n\n  -\n    matrix:\n      only:\n        - job_name: Windows Build\n\n    cache:\n      - C:\\Users\\appveyor\\.ant\n      - C:\\ProgramData\\chocolatey\\bin\n      - C:\\ProgramData\\chocolatey\\lib\n\n    install:\n      - ps: choco install nuget.commandline\n      - ps: choco install ant --ignore-dependencies\n      - ps: $env:Path=\"C:\\Program Files\\Java\\jdk1.8.0\\bin;$($env:Path);C:\\ProgramData\\chocolatey\\lib\\ant\"\n      - set PATH=C:\\Python36-x64\\';%PATH%\n    environment:\n      global:\n        TSK_HOME: \"%APPVEYOR_BUILD_FOLDER%\"\n        PYTHON: \"C:\\\\Python36-x64\"\n        JDK_HOME: C:\\Program Files\\Java\\jdk1.8.0\n    services:\n\n    before_build:\n      - nuget restore win32\\libtsk -PackagesDirectory win32\\packages\n\n    build_script:\n      - python win32\\updateAndBuildAll.py -m\n      - ps: ant -version\n      - ps: pushd bindings/java\n      - cmd: ant -q dist\n      - ps: popd\n      - ps: pushd case-uco/java\n      - cmd: ant -q\n      - ps: popd\n\n    test_script:\n      - cmd: ant -q -f bindings/java test\n\n  -\n    matrix:\n      only:\n        - job_name: Linux Build\n\n    install:\n      - sudo apt install -y autoconf python3-venv\n\n    build_script:\n      - cat /etc/os-release\n      - ./bootstrap\n      - ./configure\n      - make -j\n\n    test_script:\n      - make -j check VERBOSE=1\n\n  -\n    matrix:\n      only:\n        - job_name: macOS Build\n\n    build_script:\n      - ./bootstrap\n      - ./configure\n      - make -j\n\n    test_script:\n      - make -j check VERBOSE=1\n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "blob",
          "size": 0.025390625,
          "content": "#!/bin/sh\n\nautoreconf -fi\n"
        },
        {
          "name": "case-uco",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.671875,
          "content": "# validate this with:\n# curl -X POST --data-binary @codecov.yml https://codecov.io/validate\n\ncoverage:\n  range: 40..60\n  round: nearest\n  precision: 2\n\ncodecov:\n  branch: develop\n\nignore:\n  - \"m4\"\n  - \"test\"\n  - \"vendors\"\n\n# Code for updating pull request comment on GitHub\n# See https://docs.codecov.com/docs/pull-request-comments\ncomment:\n  layout: \" diff, flags, files\"\n  behavior: default\n  require_changes: false     # post comment even if no required change\n  require_base: false        # [true :: must have a base report to post]\n  require_head: false        # [true :: must have a head report to post]\n  hide_project_coverage: false # [true :: only show coverage on the git diff]\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 11.3642578125,
          "content": "dnl -*- Autoconf -*-\ndnl Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.69])\n\nAC_INIT([sleuthkit],[4.12.1])\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_MACRO_DIR([m4])\nAC_CONFIG_SRCDIR([tsk/base/tsk_base.h])\nAC_CONFIG_HEADERS([tsk/tsk_config.h])\nAM_INIT_AUTOMAKE([foreign subdir-objects tar-ustar])\nLT_INIT\nAM_MAINTAINER_MODE\n\n\ndnl Checks for programs.\nAC_PROG_CXX\nAX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_MAKE_SET\nAC_PATH_PROG(PERL, perl)\n\nTSK_CHECK_PROG_PKGCONFIG\n\ndnl Checks for header files.\ndnl AC_HEADER_MAJOR\ndnl AC_HEADER_SYS_WAIT\ndnl AC_CHECK_HEADERS([fcntl.h inttypes.h limits.h locale.h memory.h netinet/in.h stdint.h stdlib.h string.h sys/ioctl.h sys/param.h sys/time.h unistd.h utime.h wchar.h wctype.h])\nAC_CHECK_HEADERS([err.h inttypes.h unistd.h stdint.h sys/param.h sys/resource.h])\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_HEADER_STDBOOL\nAC_C_CONST\nAC_TYPE_UID_T\nAC_TYPE_MODE_T\nAC_TYPE_OFF_T\nAC_TYPE_SIZE_T\ndnl AC_CHECK_MEMBERS([struct stat.st_rdev])\ndnl AC_STRUCT_TM\n\ndnl check for large file support\nAC_SYS_LARGEFILE\n\ndnl Checks for library functions.\nAC_FUNC_ALLOCA\nAC_FUNC_ERROR_AT_LINE\ndnl AC_FUNC_FORK\nAC_FUNC_FSEEKO\nAC_FUNC_LSTAT\nAC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK\ndnl AC_FUNC_MALLOC\ndnl AC_FUNC_MBRTOWC\ndnl AC_FUNC_MEMCMP\ndnl AC_FUNC_MKTIME\ndnl AC_FUNC_MMAP\ndnl AC_FUNC_REALLOC\nAC_FUNC_SELECT_ARGTYPES\ndnl AC_FUNC_STAT\nAC_FUNC_UTIME_NULL\nAC_FUNC_VPRINTF\ndnl AC_CHECK_FUNCS([dup2 gethostname isascii iswprint memset munmap regcomp select setlocale strcasecmp strchr strdup strerror strndup strrchr strtol strtoul strtoull utime wcwidth])\nAC_CHECK_FUNCS([ishexnumber err errx warn warnx vasprintf getrusage])\nAC_CHECK_FUNCS([strlcpy strlcat strnlen])\n\nAX_PTHREAD([\n    AC_DEFINE(HAVE_PTHREAD, 1, [Define if you have POSIX threads libraries and header files.])\n    CC=\"$PTHREAD_CC\"\n    CXX=\"$PTHREAD_CXX\"], [])\n\ndnl Permit single-threaded builds\nAC_ARG_ENABLE([multithreading],\n    [AS_HELP_STRING([--disable-multithreading], [Build without multithreading support])])\n\ndnl Enable multithreading by default in the presence of pthread\nAS_IF([test \"x$ax_pthread_ok\" = \"xyes\" && test \"x$enable_multithreading\" != \"xno\"], [ax_multithread=yes], [ax_multithread=no])\n\ndnl Add an option to build the Java (JNI) bindings\nAC_ARG_ENABLE([java],\n    [AS_HELP_STRING([--enable-java], [Build the Java (JNI) bindings @<:@default=no@:>@])],\n    [enable_java=$enableval], [enable_java=no])\n\ndnl Checks for libraries.\n\ndnl Some platforms will complain about missing included functions if libstdc++ is not included.\nAC_CHECK_LIB(stdc++, main, [], AC_MSG_ERROR([missing libstdc++]))\nAC_SUBST([STDCPP_LIBS], ['-lstdc++'])\n\nAC_CHECK_HEADERS(list, , , AC_MSG_ERROR([missing STL list class header]))\nAC_CHECK_HEADERS(map, , , AC_MSG_ERROR([missing STL map class header]))\nAC_CHECK_HEADERS(queue, , , AC_MSG_ERROR([missing STL queue class header]))\nAC_CHECK_HEADERS(set, , , AC_MSG_ERROR([missing STL set class header]))\nAC_CHECK_HEADERS(stack, , , AC_MSG_ERROR([missing STL stack class header]))\nAC_CHECK_HEADERS(streambuf, , , AC_MSG_ERROR([missing STL streambuf class header]))\nAC_CHECK_HEADERS(string, , , AC_MSG_ERROR([missing STL string class header]))\nAC_CHECK_HEADERS(vector, , , AC_MSG_ERROR([missing STL vector class header]))\n\ndnl Check for sqlite and its dependencies\nAS_IF([test \"x$ac_cv_prog_PKGCONFIG\" = \"xyes\"],\n  [\n    SAVED_AX_PACKAGE_REQUIRES_PRIVATE=\"$AX_PACKAGE_REQUIRES_PRIVATE\"\n    TSK_PKG_CHECK_MODULES([SQLITE3], [], [sqlite3],\n    [\n      SQLITE3_CXXFLAGS=\"$SQLITE3_CFLAGS\"\n    ],\n    [\n      AX_PACKAGE_REQUIRES_PRIVATE=\"$SAVED_AX_PACKAGE_REQUIRES_PRIVATE\"\n      ax_sqlite3=no\n    ]\n  )]\n)\n\ndnl check again for sqlite3 if not found by pkgconfig\nAS_IF([test \"x$ax_sqlite3\" != \"xyes\"],\n  [\n    AC_CHECK_HEADERS(\n      [sqlite3.h],\n      [\n        AC_CHECK_LIB([dl], [dlopen], [ax_dl=yes], [])\n        AC_CHECK_LIB([sqlite3], [sqlite3_open], [ax_sqlite3=yes], [])\n      ]\n    )\n  ]\n)\n\ndnl Compile the bundled sqlite if there is no system one installed\nAC_MSG_CHECKING(which sqlite3 to use)\nAS_IF([test \"x$ax_sqlite3\" = \"xyes\"],\n      [\n        AC_MSG_RESULT([system])\n        PACKAGE_LIBS_PRIVATE=\"$PACKAGE_LIBS_PRIVATE -lsqlite3\"\n        SQLITE3_LIBS='-lsqlite3'\n        AS_IF([test \"x$ax_dl\" = \"xyes\"], [SQLITE3_LIBS=\"$SQLITE3_LIBS -ldl\"])\n      ],\n      [AC_MSG_RESULT([bundled])\n       SQLITE3_CPPFLAGS=\"-DSQLITE_OMIT_LOAD_EXTENSION\"]\n)\nAM_CONDITIONAL([HAVE_LIBSQLITE3], [test \"x$ax_sqlite3\" = \"xyes\"])\n\nAC_SUBST([SQLITE3_CPPFLAGS])\nAC_SUBST([SQLITE3_CXXFLAGS])\nAC_SUBST([SQLITE3_LIBS])\n\ndnl Check if we should link with OpenSSL\nTSK_OPT_DEP_CHECK([libcrypto], [CRYPTO], [libcrypto], [openssl/sha.h], [crypto], [SHA1])\ndnl Check if we should link with afflib\ndnl note that afflib/utils.h explicitly checks for openssl/pem.h, so we need to test for it also\nTSK_OPT_DEP_CHECK([afflib], [AFFLIB], [], [afflib/afflib.h], [afflib], [af_open])\nAC_CHECK_HEADERS([openssl/pem.h])\ndnl Check if we should link with libaff4\nTSK_OPT_DEP_CHECK([libaff4], [AFF4], [], [aff4/libaff4-c.h], [aff4], [AFF4_version])\ndnl Check if we should link with zlib\nTSK_OPT_DEP_CHECK([zlib], [ZLIB], [zlib], [zlib.h], [z], [inflate])\ndnl Check if we should link with libbfio\nTSK_OPT_DEP_CHECK([libbfio], [BFIO], [libbfio], [libbfio.h], [bfio], [libbfio_get_version])\n\ndnl Check if we should link with libewf\nTSK_OPT_DEP_CHECK([libewf], [EWF], [libewf], [libewf.h], [ewf], [libewf_get_version])\ndnl Check for libewf_handle_read_buffer_at_offset, in newer versions of libewf\nAS_IF(\n  [test \"x$ax_libewf\" != \"xno\"],\n  [AC_CHECK_LIB(\n    [ewf],\n    [libewf_handle_read_buffer_at_offset],\n    [AC_DEFINE([HAVE_LIBEWF_HANDLE_READ_BUFFER_AT_OFFSET], [1], [Define to 1 if you have the libewf_handle_read_buffer_at_offset function.])]\n  )]\n)\n\ndnl Check if we should link with libqcow\nTSK_OPT_DEP_CHECK([libqcow], [QCOW], [libqcow], [libqcow.h], [qcow], [libqcow_get_version])\ndnl Check if we should link with libvhdi\nTSK_OPT_DEP_CHECK([libvhdi], [VHDI], [libvhdi], [libvhdi.h], [vhdi], [libvhdi_get_version])\ndnl Check if we should link with libvmdk\nTSK_OPT_DEP_CHECK([libvmdk], [VMDK], [libvmdk], [libvmdk.h], [vmdk], [libvmdk_get_version])\n\ndnl Check that libbfio is available if libvslvm was requested\nAS_IF(\n  [test \"x$ax_libbfio\" = \"xno\" -a \"x$with_libvslvm\" != \"xno\" -a -n \"$with_libvslvm\"],\n  [AC_MSG_FAILURE([libvslvm requires libbfio])]\n)\n\ndnl Check if we should link with libvslvm\nTSK_OPT_DEP_CHECK([libvslvm], [VSLVM], [libvslvm], [libvslvm.h], [vslvm], [libvslvm_get_version])\n\ndnl check for user online input\nAC_ARG_ENABLE([offline],\n    [ AS_HELP_STRING([--enable-offline],[Turn on offline mode])],\n    [case \"${enableval}\" in\n\tyes) offline=true ;;\n\tno) offline=false ;;\n\t*)\n\t    offline=true\n\t    default_jar_location=\"${enableval}\"\n\t    ;;\n     esac],[offline=false])\n\nAM_CONDITIONAL([OFFLINE], [test \"x$offline\" = xtrue])\n\nAM_CONDITIONAL([CUSTOM_DEFAULT_JAR_LOCATION], [test \"x$default_jar_location\" != \"x\"])\nAM_COND_IF([CUSTOM_DEFAULT_JAR_LOCATION],\n    [AC_SUBST([DEFAULT_JAR_LOCATION], [$default_jar_location])]\n)\n\ndnl Test for the various Java things that we need for bindings\nAS_IF([test \"x$enable_java\" != \"xno\"], [\n    dnl javac is needed to compile the JAR file\n    AX_PROG_JAVAC\n    AS_IF(\n        [test \"x$JAVAC\" = x],\n        [enable_java=no],\n        [AX_JNI_INCLUDE_DIR\n        for JNI_INCLUDE_DIR in $JNI_INCLUDE_DIRS\n        do\n            JNI_CPPFLAGS=\"$JNI_CPPFLAGS -I$JNI_INCLUDE_DIR\"\n        done\n        dnl Export the paths so that the Makefile gets them\n        AC_SUBST(JNI_CPPFLAGS, $JNI_CPPFLAGS)\n\n        dnl java is needed by ant\n        dnl we had one report of a system with javac and not java\n        AX_PROG_JAVA\n\n        dnl Test is ant is available\n        AC_PATH_PROG([ANT_FOUND], [ant], [])\n\t])\n\n]) dnl test enable_java\n\ndnl if we found everything we need, set ax_java_support for the\ndnl status message and set X_JNI for use in Makefile\nAS_IF([test \"x$JNI_CPPFLAGS\" != x && test \"x$ANT_FOUND\" != x && test \"x$JAVA\" != x], [ax_java_support=yes], [ax_java_support=no])\nAM_CONDITIONAL([X_JNI],[test \"x$ax_java_support\" = \"xyes\"])\n\ndnl Dependencies for OSS-Fuzz\nAM_CONDITIONAL(HAVE_LIB_FUZZING_ENGINE, [test \"x${LIB_FUZZING_ENGINE}\" != x])\nAC_SUBST([LIB_FUZZING_ENGINE], [\"${LIB_FUZZING_ENGINE}\"])\n\nAC_CONFIG_COMMANDS([tsk/tsk_incs.h],\n    [echo \"#ifndef _TSK_INCS_H\" > tsk/tsk_incs.h\n    echo \"#define _TSK_INCS_H\" >> tsk/tsk_incs.h\n    echo \"// automatically by ./configure\" >> tsk/tsk_incs.h\n    echo \"// Contains the config.h data needed by programs that use libtsk\" >> tsk/tsk_incs.h\n    echo \"\" >> tsk/tsk_incs.h\n    if test x$ac_cv_header_unistd_h = xyes; then\n        echo \"#include <unistd.h>\" >> tsk/tsk_incs.h\n    fi\n    if test x$ac_cv_header_inttypes_h = xyes; then\n        echo \"#ifndef __STDC_FORMAT_MACROS\" >> tsk/tsk_incs.h\n        echo \"#define  __STDC_FORMAT_MACROS\" >> tsk/tsk_incs.h\n        echo \"#endif\" >> tsk/tsk_incs.h\n        echo \"#include <inttypes.h>\" >> tsk/tsk_incs.h\n    fi\n    if test x$ac_cv_header_sys_param_h = xyes; then\n        echo \"#include <sys/param.h>\" >> tsk/tsk_incs.h\n    fi\n\n    if test x$ax_multithread = xyes; then\n        echo \"#define TSK_MULTITHREAD_LIB // enable multithreading\" >> tsk/tsk_incs.h\n    fi\n\n    echo \"\" >> tsk/tsk_incs.h\n    echo \"#endif\" >> tsk/tsk_incs.h],\n\n    [ac_cv_header_unistd_h=$ac_cv_header_unistd_h\n    ac_cv_header_inttypes_h=$ac_cv_header_inttypes_h\n    ac_cv_header_sys_param_h=$ac_cv_header_sys_param_h\n    ax_multithread=$ax_multithread])\n\nAC_MSG_CHECKING([if libtool needs -no-undefined flag to build shared libraries])\ncase \"$host\" in\n*-*-mingw*)\n  dnl Add -no-undefined flag to LDFLAGS to let libtool build DLLs.\n  AC_MSG_RESULT([yes])\n  LIBTSK_LDFLAGS=\"-no-undefined\"\n  AC_SUBST([LIBTSK_LDFLAGS])\n  ;;\n*)\n  dnl No additional flags needed.\n  AC_MSG_RESULT([no])\n  ;;\nesac\n\ndnl Run test executables in Wine if cross-compiling with mingw\ncase \"$host\" in\n*-*-mingw*)\n  case \"$build\" in\n  *-*-cygwin*|*-*-mingw*)\n    ;;\n  *)\n    use_wine=yes\n    ;;\n  esac\n  ;;\nesac\n\nAM_CONDITIONAL([USE_WINE], [test \"x$use_wine\" = \"xyes\"])\n\ndnl ensure static linkage of tools during static builds\nif test \"x$enable_shared\" != \"xyes\"; then\n  CXXLD=\"$CXX -all-static\"\nelse\n  CXXLD=\"$CXX\"\nfi\n\nAM_CONDITIONAL([BUILD_STATIC], [test \"x$enable_shared\" != \"xyes\"])\nAC_SUBST([CXXLD])\n\ndnl Dependencies for fiwalk\nAC_CHECK_FUNCS([getline])\n\nTSK_ADDRESS_SANITIZER\nTSK_THREAD_SANITIZER\nTSK_UNDEFINED_SANITIZER\n\ndnl Defines for supported image types\nAM_CONDITIONAL([HAVE_AFF], [test \"x$ax_afflib\" != \"xno\"])\nAM_CONDITIONAL([HAVE_E01], [test \"x$ax_libewf\" != \"xno\"])\nAM_CONDITIONAL([HAVE_QCOW], [test \"x$ax_libqcow\" != \"xno\"])\nAM_CONDITIONAL([HAVE_VHD], [test \"x$ax_libvhdi\" != \"xno\"])\nAM_CONDITIONAL([HAVE_VMDK], [test \"x$ax_libvmdk\" != \"xno\"])\n\nAC_CONFIG_FILES([\n    Makefile\n    tsk/tsk.pc])\n\nAC_OUTPUT\n\ndnl Print a summary\nAC_MSG_NOTICE([\nBuilding:\n   afflib support:                        $ax_afflib\n   libaff4 support:                       $ax_libaff4\n   libbfio support:                       $ax_libqcow\n   libewf support:                        $ax_libewf\n   libqcow support:                       $ax_libbfio\n   libvhdi support:                       $ax_libvhdi\n   libvmdk support:                       $ax_libvmdk\n   libvslvm support:                      $ax_libvslvm\n\n   openssl support:                       $ax_libcrypto\n   zlib support:                          $ax_zlib\n\nFeatures:\n   Java/JNI support:                      $ax_java_support\n   Multithreading:                        $ax_multithread\n])\n"
        },
        {
          "name": "db_diff",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "ossfuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "rejistry++",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "ruleset.xml",
          "type": "blob",
          "size": 19.521484375,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Autopsy ruleset\"\n    xmlns=\"http://pmd.sourceforge.net/ruleset/2.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd\">\n  <description>\n  Ruleset used by Autopsy\n  </description>\n  <rule ref=\"rulesets/java/basic.xml/SimplifiedTernary\"/>\n  <rule ref=\"rulesets/java/basic.xml/AvoidUsingOctalValues\"/>\n  <rule ref=\"rulesets/java/basic.xml/BigIntegerInstantiation\"/>\n  <rule ref=\"rulesets/java/basic.xml/ClassCastExceptionWithToArray\"/>\n  <rule ref=\"rulesets/java/basic.xml/ForLoopShouldBeWhileLoop\"/>\n  <rule ref=\"rulesets/java/basic.xml/CheckResultSet\"/>\n  <rule ref=\"rulesets/java/basic.xml/UnconditionalIfStatement\"/>\n  <rule ref=\"rulesets/java/basic.xml/CheckSkipResult\"/>\n  <rule ref=\"rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices\"/>\n  <rule ref=\"rulesets/java/basic.xml/MisplacedNullCheck\"/>\n  <rule ref=\"rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor\"/>\n  <rule ref=\"rulesets/java/basic.xml/BooleanInstantiation\"/>\n  <rule ref=\"rulesets/java/basic.xml/ExtendsObject\"/>\n  <rule ref=\"rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop\"/>\n  <rule ref=\"rulesets/java/basic.xml/DoubleCheckedLocking\"/>\n  <rule ref=\"rulesets/java/basic.xml/ReturnFromFinallyBlock\"/>\n  <rule ref=\"rulesets/java/basic.xml/AvoidThreadGroup\"/>\n  <rule ref=\"rulesets/java/basic.xml/CollapsibleIfStatements\"/>\n  <rule ref=\"rulesets/java/basic.xml/AvoidUsingHardCodedIP\"/>\n  <rule ref=\"rulesets/java/basic.xml/CheckResultSet\"/>\n  <rule ref=\"rulesets/java/basic.xml/DontCallThreadRun\"/>\n  <rule ref=\"rulesets/java/basic.xml/BrokenNullCheck\"/>\n  <rule ref=\"rulesets/java/basic.xml/AvoidMultipleUnaryOperators\"/>\n  <rule ref=\"rulesets/java/basic.xml/OverrideBothEqualsAndHashcode\"/>\n  <rule ref=\"rulesets/java/basic.xml/JumbledIncrementer\"/>\n  <rule ref=\"rulesets/java/braces.xml/WhileLoopsMustUseBraces\"/>\n  <rule ref=\"rulesets/java/braces.xml/IfStmtsMustUseBraces\"/>\n  <rule ref=\"rulesets/java/braces.xml/IfElseStmtsMustUseBraces\"/>\n  <rule ref=\"rulesets/java/braces.xml/ForLoopsMustUseBraces\"/>\n  <rule ref=\"rulesets/java/clone.xml/ProperCloneImplementation\"/>\n  <rule ref=\"rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException\"/>\n  <rule ref=\"rulesets/java/clone.xml/CloneMethodMustImplementCloneable\"/>\n  <rule ref=\"rulesets/java/clone.xml/CloneMethodReturnTypeMustMatchClassName\"/>\n  <rule ref=\"rulesets/java/clone.xml/CloneMethodMustBePublic\"/>\n  <rule ref=\"rulesets/java/codesize.xml/NPathComplexity\"/>\n  <rule ref=\"rulesets/java/codesize.xml/ExcessiveMethodLength\"/>\n  <rule ref=\"rulesets/java/codesize.xml/ExcessiveParameterList\"/>\n  <rule ref=\"rulesets/java/codesize.xml/ExcessiveClassLength\"/>\n  <rule ref=\"rulesets/java/codesize.xml/CyclomaticComplexity\"/>\n  <rule ref=\"rulesets/java/codesize.xml/StdCyclomaticComplexity\"/>\n  <rule ref=\"rulesets/java/codesize.xml/ModifiedCyclomaticComplexity\"/>\n  <rule ref=\"rulesets/java/codesize.xml/ExcessivePublicCount\"/>\n  <rule ref=\"rulesets/java/codesize.xml/TooManyFields\"/>\n  <rule ref=\"rulesets/java/codesize.xml/NcssMethodCount\"/>\n  <rule ref=\"rulesets/java/codesize.xml/NcssTypeCount\"/>\n  <rule ref=\"rulesets/java/codesize.xml/NcssConstructorCount\"/>\n  <rule ref=\"rulesets/java/codesize.xml/TooManyMethods\"/>\n  <rule ref=\"rulesets/java/comments.xml/CommentRequired\">\n    <properties>            \n      <!-- Disabled because we have lots of undocumented fields -->\n      <property name=\"fieldCommentRequirement\" value=\"Ignored\"/>\n      <!-- Disabled because we don't require comments on overrides of public fields -->\n      <property name=\"protectedMethodCommentRequirement\" value=\"Ignored\"/>\n      <property name=\"publicMethodCommentRequirement\" value=\"Ignored\"/>\n      <!--<property name=\"methodWithOverrideCommentRequirement\" value=\"Unwanted\"/>-->\n    </properties>\n  </rule>\n  <!-- Commented out because it was flagged some of our header / copyright comments\n  <rule ref=\"rulesets/java/comments.xml/CommentSize\"/> -->\n  <rule ref=\"rulesets/java/comments.xml/CommentContent\"/>\n  <!-- Commented out because we use default (package) access often and commenting it does not make sense for us\n  <rule ref=\"rulesets/java/comments.xml/CommentDefaultAccessModifier\"/> -->\n  <!--\n    Commented out because they are controversial and we want basics right now.\n  <rule ref=\"rulesets/java/controversial.xml/NullAssignment\"/>\n  <rule ref=\"rulesets/java/controversial.xml/OnlyOneReturn\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AssignmentInOperand\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AtLeastOneConstructor\"/>\n  <rule ref=\"rulesets/java/controversial.xml/DontImportSun\"/>\n  <rule ref=\"rulesets/java/controversial.xml/SuspiciousOctalEscape\"/>\n  <rule ref=\"rulesets/java/controversial.xml/CallSuperInConstructor\"/>\n  <rule ref=\"rulesets/java/controversial.xml/UnnecessaryParentheses\"/>\n  <rule ref=\"rulesets/java/controversial.xml/DataflowAnomalyAnalysis\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidFinalLocalVariable\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidUsingShortType\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidUsingVolatile\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidUsingNativeCode\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidAccessibilityAlteration\"/>\n  <rule ref=\"rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidPrefixingMethodParameters\"/>\n  <rule ref=\"rulesets/java/controversial.xml/AvoidLiteralsInIfCondition\"/>\n  <rule ref=\"rulesets/java/controversial.xml/UseObjectForClearerAPI\"/>\n  <rule ref=\"rulesets/java/controversial.xml/UseConcurrentHashMap\"/>\n  <rule ref=\"rulesets/java/controversial.xml/OneDeclarationPerLine\"/>\n  <rule ref=\"rulesets/java/controversial.xml/DefaultPackage\"/>\n  <rule ref=\"rulesets/java/controversial.xml/UnnecessaryConstructor\"/>\n  -->\n  <rule ref=\"rulesets/java/coupling.xml/CouplingBetweenObjects\"/>\n  <!--<rule ref=\"rulesets/java/coupling.xml/ExcessiveImports\"/>-->\n  <rule ref=\"rulesets/java/coupling.xml/LooseCoupling\"/>\n  <rule ref=\"rulesets/java/coupling.xml/LoosePackageCoupling\"/>\n  <!-- Commented out because we have not enforced this in the past\n  <rule ref=\"rulesets/java/coupling.xml/LawOfDemeter\"/> -->\n  <rule ref=\"rulesets/java/design.xml/UseUtilityClass\"/>\n  <rule ref=\"rulesets/java/design.xml/AvoidDeeplyNestedIfStmts\"/>\n  <rule ref=\"rulesets/java/design.xml/SwitchDensity\"/>\n  <rule ref=\"rulesets/java/design.xml/ConstructorCallsOverridableMethod\"/>\n  <!--<rule ref=\"rulesets/java/design.xml/AccessorClassGeneration\"/>-->\n  <rule ref=\"rulesets/java/design.xml/FinalFieldCouldBeStatic\"/>\n  <rule ref=\"rulesets/java/design.xml/CloseResource\"/>\n  <rule ref=\"rulesets/java/design.xml/NonStaticInitializer\"/>\n  <rule ref=\"rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt\"/>\n  <rule ref=\"rulesets/java/design.xml/OptimizableToArrayCall\"/>\n  <rule ref=\"rulesets/java/design.xml/BadComparison\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now.\n  <rule ref=\"rulesets/java/design.xml/ConfusingTernary\"/>-->\n  <rule ref=\"rulesets/java/design.xml/InstantiationToGetClass\"/>\n  <rule ref=\"rulesets/java/design.xml/IdempotentOperations\"/>\n  <rule ref=\"rulesets/java/design.xml/SimpleDateFormatNeedsLocale\"/>\n  <rule ref=\"rulesets/java/design.xml/ImmutableField\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now.\n  <rule ref=\"rulesets/java/design.xml/UseLocaleWithCaseConversions\"/> -->\n  <rule ref=\"rulesets/java/design.xml/AvoidProtectedFieldInFinalClass\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now.\n  <rule ref=\"rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel\"/>-->\n  <rule ref=\"rulesets/java/design.xml/UseNotifyAllInsteadOfNotify\"/>\n  <rule ref=\"rulesets/java/design.xml/AbstractClassWithoutAbstractMethod\"/>\n  <rule ref=\"rulesets/java/design.xml/SimplifyConditional\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now.\n  <rule ref=\"rulesets/java/design.xml/PositionLiteralsFirstInCaseInsensitiveComparisons\"/>-->\n  <rule ref=\"rulesets/java/design.xml/UnnecessaryLocalBeforeReturn\"/>\n  <rule ref=\"rulesets/java/design.xml/NonThreadSafeSingleton\"/>\n  <rule ref=\"rulesets/java/design.xml/SingleMethodSingleton\"/>\n  <rule ref=\"rulesets/java/design.xml/SingletonClassReturningNewInstance\"/>\n  <rule ref=\"rulesets/java/design.xml/UncommentedEmptyConstructor\"/>\n  <rule ref=\"rulesets/java/design.xml/AvoidConstantsInterface\"/>\n  <rule ref=\"rulesets/java/design.xml/UnsynchronizedStaticDateFormatter\"/>\n  <rule ref=\"rulesets/java/design.xml/PreserveStackTrace\"/>\n  <rule ref=\"rulesets/java/design.xml/UseCollectionIsEmpty\"/>\n  <rule ref=\"rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal\"/>\n  <rule ref=\"rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract\"/>\n  <rule ref=\"rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull\"/>\n  <rule ref=\"rulesets/java/design.xml/AbstractClassWithoutAnyMethod\"/>\n  <rule ref=\"rulesets/java/design.xml/TooFewBranchesForASwitchStatement\"/>\n  <rule ref=\"rulesets/java/design.xml/UseVarargs\"/>\n  <!-- Commented out because it flagged many of the NetBeans created UI classes that place\n    fields at various places in the class\n    <rule ref=\"rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass\"/> -->\n  <rule ref=\"rulesets/java/design.xml/GodClass\"/>\n  <rule ref=\"rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending\"/>\n  <rule ref=\"rulesets/java/design.xml/ConstantsInInterface\"/>\n  <rule ref=\"rulesets/java/design.xml/CompareObjectsWithEquals\"/>\n  <rule ref=\"rulesets/java/design.xml/LogicInversion\"/>\n  <rule ref=\"rulesets/java/design.xml/SingularField\"/>\n  <rule ref=\"rulesets/java/design.xml/SimplifyBooleanReturns\"/>\n  <rule ref=\"rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause\"/>\n  <rule ref=\"rulesets/java/design.xml/NonCaseLabelInSwitchStatement\"/>\n  <rule ref=\"rulesets/java/design.xml/NonStaticInitializer\"/>\n  <rule ref=\"rulesets/java/design.xml/AvoidReassigningParameters\"/>\n  <rule ref=\"rulesets/java/design.xml/SwitchStmtsShouldHaveDefault\"/>\n  <rule ref=\"rulesets/java/design.xml/MissingBreakInSwitch\"/>\n  <rule ref=\"rulesets/java/design.xml/EqualsNull\"/>\n  <rule ref=\"rulesets/java/design.xml/UncommentedEmptyMethodBody\"/>\n  <!--<rule ref=\"rulesets/java/design.xml/SimplifyBooleanExpressions\"/>-->\n  <rule ref=\"rulesets/java/design.xml/AssignmentToNonFinalStatic\"/>\n  <rule ref=\"rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now.\n  <rule ref=\"rulesets/java/design.xml/PositionLiteralsFirstInComparisons\"/>-->\n  <rule ref=\"rulesets/java/empty.xml/EmptyCatchBlock\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyWhileStmt\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyFinallyBlock\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyIfStmt\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyStatementNotInLoop\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyTryBlock\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyStatementBlock\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyStaticInitializer\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptyInitializer\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptySwitchStatements\"/>\n  <rule ref=\"rulesets/java/empty.xml/EmptySynchronizedBlock\"/>\n  <rule ref=\"rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize\"/>\n  <rule ref=\"rulesets/java/finalizers.xml/FinalizeOverloaded\"/>\n  <rule ref=\"rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize\"/>\n  <rule ref=\"rulesets/java/finalizers.xml/FinalizeShouldBeProtected\"/>\n  <rule ref=\"rulesets/java/finalizers.xml/AvoidCallingFinalize\"/>\n  <rule ref=\"rulesets/java/finalizers.xml/EmptyFinalizer\"/>\n  <rule ref=\"rulesets/java/imports.xml/TooManyStaticImports\"/>\n  <rule ref=\"rulesets/java/imports.xml/UnusedImports\"/>\n  <rule ref=\"rulesets/java/imports.xml/ImportFromSamePackage\"/>\n  <rule ref=\"rulesets/java/imports.xml/DuplicateImports\"/>\n  <rule ref=\"rulesets/java/imports.xml/DontImportJavaLang\"/>\n  <!-- Disabled because flagging use of Bundle for bundle messages\n  is not desirable since this qualification helps with code completion\n  while inappropriate use of full qualification is otherwise very rare\n  <rule ref=\"rulesets/java/imports.xml/UnnecessaryFullyQualifiedName\"/>-->\n  <!-- Disabled because it generated a lot of errors for non-Beans\n  <rule ref=\"rulesets/java/javabeans.xml/BeanMembersShouldSerialize\"/>-->\n  <rule ref=\"rulesets/java/javabeans.xml/MissingSerialVersionUID\"/>\n  <rule ref=\"rulesets/java/logging-java.xml/MoreThanOneLogger\"/>\n  <rule ref=\"rulesets/java/logging-java.xml/LoggerIsNotStaticFinal\"/>\n  <rule ref=\"rulesets/java/logging-java.xml/SystemPrintln\"/>\n  <rule ref=\"rulesets/java/logging-java.xml/AvoidPrintStackTrace\"/>\n  <!-- Disabled because we don't want If conditions around all Log statements \n  <rule ref=\"rulesets/java/logging-java.xml/GuardLogStatementJavaUtil\"/> -->\n  <rule ref=\"rulesets/java/logging-java.xml/InvalidSlf4jMessageFormat\"/>\n  <rule ref=\"rulesets/java/migrating.xml/ReplaceVectorWithList\"/>\n  <rule ref=\"rulesets/java/migrating.xml/ReplaceHashtableWithMap\"/>\n  <rule ref=\"rulesets/java/migrating.xml/ReplaceEnumerationWithIterator\"/>\n  <rule ref=\"rulesets/java/migrating.xml/AvoidEnumAsIdentifier\"/>\n  <rule ref=\"rulesets/java/migrating.xml/AvoidAssertAsIdentifier\"/>\n  <rule ref=\"rulesets/java/migrating.xml/IntegerInstantiation\"/>\n  <rule ref=\"rulesets/java/migrating.xml/ByteInstantiation\"/>\n  <rule ref=\"rulesets/java/migrating.xml/ShortInstantiation\"/>\n  <rule ref=\"rulesets/java/migrating.xml/LongInstantiation\"/>\n  <!-- Disabled because it wanted all private static to be caps \n  <rule ref=\"rulesets/java/naming.xml/VariableNamingConventions\"/> -->\n  <rule ref=\"rulesets/java/naming.xml/AvoidDollarSigns\"/>\n  <!--<rule ref=\"rulesets/java/naming.xml/AbstractNaming\"/>-->\n  <rule ref=\"rulesets/java/naming.xml/SuspiciousHashcodeMethodName\"/>\n  <rule ref=\"rulesets/java/naming.xml/SuspiciousConstantFieldName\"/>\n  <rule ref=\"rulesets/java/naming.xml/SuspiciousEqualsMethodName\"/>\n  <rule ref=\"rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName\"/>\n  <rule ref=\"rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName\"/>\n  <rule ref=\"rulesets/java/naming.xml/MisleadingVariableName\"/>\n  <rule ref=\"rulesets/java/naming.xml/ShortClassName\"/>\n  <rule ref=\"rulesets/java/naming.xml/ClassNamingConventions\"/>\n  <rule ref=\"rulesets/java/naming.xml/MethodNamingConventions\"/>\n  <!--<rule ref=\"rulesets/java/naming.xml/GenericsNaming\"/>-->\n  <rule ref=\"rulesets/java/naming.xml/NoPackage\"/>\n  <rule ref=\"rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass\"/>\n  <!--<rule ref=\"rulesets/java/naming.xml/ShortVariable\"/>-->\n  <!-- Commented out because clarity trumps brevity, developers can use their own judgement\n  <rule ref=\"rulesets/java/naming.xml/LongVariable\"/>  -->\n  <rule ref=\"rulesets/java/naming.xml/ShortMethodName\"/>\n  <rule ref=\"rulesets/java/naming.xml/BooleanGetMethodName\"/>\n  <rule ref=\"rulesets/java/naming.xml/PackageCase\"/>\n  <!-- Commented out because this is a nice micro-refinement, but too much of our code does not do this, developers can, but don't have to ignore this practice for now\n  <rule ref=\"rulesets/java/optimizations.xml/LocalVariableCouldBeFinal\"/>\n  <rule ref=\"rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal\"/>  -->\n  <!-- Commented out because this is not typical coding practice and it seems of dubious value, e.g., https://stackoverflow.com/questions/17340421/pmd-avoid-instantiating-new-objects-inside-loops/17458503\n  <rule ref=\"rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops\"/>   -->\n  <rule ref=\"rulesets/java/optimizations.xml/UseArrayListInsteadOfVector\"/>\n  <rule ref=\"rulesets/java/optimizations.xml/SimplifyStartsWith\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now.\n  <rule ref=\"rulesets/java/optimizations.xml/UseStringBufferForStringAppends\"/>-->\n  <rule ref=\"rulesets/java/optimizations.xml/UseArraysAsList\"/>\n  <rule ref=\"rulesets/java/optimizations.xml/AvoidArrayLoops\"/>\n  <rule ref=\"rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation\"/>\n  <rule ref=\"rulesets/java/optimizations.xml/AddEmptyString\"/>\n  <!--<rule ref=\"rulesets/java/optimizations.xml/RedundantFieldInitializer\"/>-->\n  <rule ref=\"rulesets/java/optimizations.xml/PrematureDeclaration\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/SignatureDeclareThrowsException\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidCatchingThrowable\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/ExceptionAsFlowControl\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidCatchingNPE\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidRethrowingException\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/DoNotExtendJavaLangError\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidLosingExceptionInformation\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidCatchingGenericException\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes\"/>\n  <rule ref=\"rulesets/java/strictexception.xml/AvoidThrowingNullPointerException\"/>\n  <!--<rule ref=\"rulesets/java/strings.xml/AvoidDuplicateLiterals\"/>-->\n  <!--<rule ref=\"rulesets/java/strings.xml/InefficientStringBuffering\"/>-->\n  <rule ref=\"rulesets/java/strings.xml/AppendCharacterWithChar\"/>\n  <rule ref=\"rulesets/java/strings.xml/ConsecutiveAppendsShouldReuse\"/>\n  <rule ref=\"rulesets/java/strings.xml/ConsecutiveLiteralAppends\"/>\n  <rule ref=\"rulesets/java/strings.xml/UseIndexOfChar\"/>\n  <rule ref=\"rulesets/java/strings.xml/InefficientEmptyStringCheck\"/>\n  <rule ref=\"rulesets/java/strings.xml/InsufficientStringBufferDeclaration\"/>\n  <rule ref=\"rulesets/java/strings.xml/UselessStringValueOf\"/>\n  <rule ref=\"rulesets/java/strings.xml/StringBufferInstantiationWithChar\"/>\n  <rule ref=\"rulesets/java/strings.xml/AvoidStringBufferField\"/>\n  <rule ref=\"rulesets/java/strings.xml/StringInstantiation\"/>\n  <rule ref=\"rulesets/java/strings.xml/UseEqualsToCompareStrings\"/>\n  <rule ref=\"rulesets/java/strings.xml/StringToString\"/>\n  <rule ref=\"rulesets/java/strings.xml/UseStringBufferLength\"/>\n  <rule ref=\"rulesets/java/strings.xml/UnnecessaryCaseChange\"/>\n  <rule ref=\"rulesets/java/sunsecure.xml/MethodReturnsInternalArray\"/>\n  <rule ref=\"rulesets/java/sunsecure.xml/ArrayIsStoredDirectly\"/>\n  <rule ref=\"rulesets/java/typeresolution.xml/LooseCoupling\"/>\n  <rule ref=\"rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable\"/>\n  <rule ref=\"rulesets/java/typeresolution.xml/UnusedImports\"/>\n  <rule ref=\"rulesets/java/typeresolution.xml/SignatureDeclareThrowsException\"/>\n  <rule ref=\"rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary\"/>\n  <rule ref=\"rulesets/java/unnecessary.xml/UnnecessaryFinalModifier\"/>\n  <rule ref=\"rulesets/java/unnecessary.xml/UselessOverridingMethod\"/>\n  <rule ref=\"rulesets/java/unnecessary.xml/UnusedNullCheckInEquals\"/>\n  <!-- Disabled.  Could enforce in future, but not top priority right now\n  <rule ref=\"rulesets/java/unnecessary.xml/UselessParentheses\"/>-->\n  <rule ref=\"rulesets/java/unnecessary.xml/UselessQualifiedThis\"/>\n  <rule ref=\"rulesets/java/unnecessary.xml/UselessOperationOnImmutable\"/>\n  <rule ref=\"rulesets/java/unnecessary.xml/UnnecessaryReturn\"/>\n  <!--<rule ref=\"rulesets/java/unusedcode.xml/UnusedModifier\"/>-->\n  <rule ref=\"rulesets/java/unusedcode.xml/UnusedLocalVariable\"/>\n  <!-- Commented out because it flagged many event listeners and other interfaces.\n  <rule ref=\"rulesets/java/unusedcode.xml/UnusedFormalParameter\"/> -->\n  <rule ref=\"rulesets/java/unusedcode.xml/UnusedPrivateField\"/>\n  <rule ref=\"rulesets/java/unusedcode.xml/UnusedPrivateMethod\"/>\n\n</ruleset>\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsk",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendors",
          "type": "tree",
          "content": null
        },
        {
          "name": "win32",
          "type": "tree",
          "content": null
        },
        {
          "name": "xcode",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}