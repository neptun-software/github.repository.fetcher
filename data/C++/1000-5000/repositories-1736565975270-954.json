{
  "metadata": {
    "timestamp": 1736565975270,
    "page": 954,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/plato",
      "stars": 1902,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.119140625,
          "content": "common --color=yes --verbose_failures --strip=never --curses=no\ntest --test_output=errors --test_verbose_timeout_warnings\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5966796875,
          "content": "*.class\n*.log\n*.o\n.cache\n.history\n*.gdb_history\n*.DS_Store\ntarget/\n\nproject/boot/\nproject/plugins/project/\n\ntags\n*.swp\nbazel-*\n*.pb.cc\n*.pb.h\n/spark/.idea\n/spark/*.iml\nSConstruct\nSConscript\nbuild/\njob/\n\n.idea/\ncmake-build-debug/\ncmake-build-release/\nCMakeLists.txt\n\n.cache/\n.downloads/\n\n3rd/boost\n3rd/boost_1_68_0/\n3rd/gflags\n3rd/gflags-2.2.1/\n3rd/glog\n3rd/glog-0.4.0/\n3rd/googletest\n3rd/googletest-release-1.8.1/\n3rd/yas\n3rd/yas-7.0.1/\n3rd/yas-7.0.2/\n3rd/sparsehash\n3rd/sparsehash-2.0.3/\n3rd/jemalloc\n3rd/jemalloc-5.2.0/\n3rd/dlpack\n3rd/dlpack-0.2/\n3rd/libunwind\n3rd/libunwind-1.3.1/\n3rd/mpich\n3rd/mpich-3.2.1/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.306640625,
          "content": "# Ubuntu 16.04 Trusty support\nsudo: required\ndist: xenial\n\nlanguage: cpp\nbefore_install:\n    - sudo apt-get update\n    - sudo ./docker/install-dependencies.sh\n    - ./3rdtools.sh distclean\n    - ./3rdtools.sh install > /dev/null\nscript:\n    - ./build.sh\nnotifications:\n    email: true\nbranches:\n  only:\n  - /.*/\n\n\n"
        },
        {
          "name": "3rd",
          "type": "tree",
          "content": null
        },
        {
          "name": "3rdtools.sh",
          "type": "blob",
          "size": 6.6357421875,
          "content": "#!/bin/bash\n\nme=`basename \"$0\"`\nrootdir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\nsourceroot=\"${rootdir}/.downloads\"\n\nfunction clean_exec {\n  cmd=$*\n  eval $cmd\n  retcode=$?\n  if [ $retcode -ne 0 ]; then\n    echo \"'${cmd}' exec failed with code $retcode, abort install process!\"\n    exit 255\n  fi\n}\n\nfunction show_help {\n  echo \"usage: ${me} <install|distclean>\"\n}\n\nfunction install {\n  # create temporary dir to hold source code\n  mkdir -p ${sourceroot}\n  pushd ${sourceroot}\n\n  ## boost\n  if [ ! -f boost_1_68_0.tar.gz ]; then\n    clean_exec wget -O boost_1_68_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.68.0/source/boost_1_68_0.tar.gz\n  fi\n  clean_exec rm -rf boost_1_68_0\n  clean_exec tar vxzf boost_1_68_0.tar.gz\n\n  pushd boost_1_68_0\n  clean_exec ./bootstrap.sh --without-libraries=python,contract,context,coroutine,fiber,graph,graph_parallel,mpi,wave,log,test,signals,stacktrace,timer --prefix=${rootdir}/3rd/boost_1_68_0\n  clean_exec ./b2 -j8 cxxflags=-fPIC cflags=-fPIC variant=release link=static -a --prefix=${rootdir}/3rd/boost_1_68_0 -j$(nproc) install\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf boost_1_68_0 boost\n  clean_exec cp ../build_tools/BUILD_boost ./boost/BUILD\n  popd\n\n  ## gflags\n  if [ ! -f gflags-2.2.1.tar.gz ]; then\n    clean_exec wget -O gflags-2.2.1.tar.gz https://github.com/gflags/gflags/archive/v2.2.1.tar.gz\n  fi\n  clean_exec rm -rf gflags-2.2.1\n  clean_exec tar vxzf gflags-2.2.1.tar.gz\n\n  pushd gflags-2.2.1\n  mkdir -p tmp_build\n  pushd tmp_build\n  clean_exec CXXFLAGS=\"-fPIC\" cmake .. -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DCMAKE_INSTALL_PREFIX=${rootdir}/3rd/gflags-2.2.1\n  clean_exec make\n  clean_exec make install\n  popd\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf gflags-2.2.1 gflags\n  clean_exec cp ../build_tools/BUILD_gflags ./gflags/BUILD\n  popd\n\n  ## libunwind\n  if [ ! -f libunwind-1.3.1.tar.gz ]; then\n    clean_exec wget https://github.com/libunwind/libunwind/releases/download/v1.3.1/libunwind-1.3.1.tar.gz\n  fi\n  clean_exec rm -rf libunwind-1.3.1\n  clean_exec tar vxzf libunwind-1.3.1.tar.gz\n\n  pushd libunwind-1.3.1\n  clean_exec ./configure --with-pic CFLAGS=-g --with-pic --disable-shared --enable-static --disable-documentation --disable-coredump --disable-ptrace --disable-setjmp --disable-tests --disable-debug --disable-minidebuginfo --disable-msabi-support --prefix=${rootdir}/3rd/libunwind-1.3.1\n  clean_exec make\n  clean_exec make install\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf libunwind-1.3.1 libunwind\n  clean_exec cp ../build_tools/BUILD_libunwind ./libunwind/BUILD\n  popd\n\n  ## glog\n  if [ ! -f glog-0.4.0.tar.gz ]; then\n    clean_exec wget -O glog-0.4.0.tar.gz https://github.com/google/glog/archive/v0.4.0.tar.gz\n  fi\n  clean_exec rm -rf glog-0.4.0\n  clean_exec tar vxzf glog-0.4.0.tar.gz\n  \n  pushd glog-0.4.0\n  clean_exec ./autogen.sh\n  clean_exec CXXFLAGS='-fPIC' CFLAGS='-fPIC' LDFLAGS=\"-L${rootdir}/3rd/libunwind/lib\" CPPFLAGS=\"-I${rootdir}/3rd/libunwind/include\" ./configure --enable-shared=no --enable-static=yes --with-gflags=${rootdir}/3rd/gflags-2.2.1 --prefix=${rootdir}/3rd/glog-0.4.0\n  clean_exec GFLAGS_LIBS='' make\n  clean_exec make install\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf glog-0.4.0 glog\n  clean_exec cp ../build_tools/BUILD_glog ./glog/BUILD\n  popd\n\n  ## googletest\n  if [ ! -f googletest-1.8.1.tar.gz ]; then\n    clean_exec wget -O googletest-1.8.1.tar.gz https://github.com/google/googletest/archive/release-1.8.1.tar.gz\n  fi\n  clean_exec tar vxzf googletest-1.8.1.tar.gz -C ${rootdir}/3rd\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf googletest-release-1.8.1 googletest\n  popd\n\n  ## yas\n  if [ ! -f yas-7.0.2.tar.gz ]; then\n    clean_exec wget -O yas-7.0.2.tar.gz https://github.com/niXman/yas/archive/7.0.2.tar.gz\n  fi\n  clean_exec tar vxzf yas-7.0.2.tar.gz -C ${rootdir}/3rd\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf yas-7.0.2 yas\n  clean_exec cp ../build_tools/BUILD_yas ./yas/BUILD\n  popd\n\n  ## sparsehash\n  if [ ! -f sparsehash-2.0.3.tar.gz ]; then\n    clean_exec wget -O sparsehash-2.0.3.tar.gz https://github.com/sparsehash/sparsehash/archive/sparsehash-2.0.3.tar.gz\n  fi\n  clean_exec rm -rf sparsehash-sparsehash-2.0.3\n  clean_exec tar vxzf sparsehash-2.0.3.tar.gz\n\n  pushd sparsehash-sparsehash-2.0.3\n  clean_exec ./configure --prefix=${rootdir}/3rd/sparsehash-2.0.3\n  clean_exec make\n  clean_exec make install\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf sparsehash-2.0.3 sparsehash\n  clean_exec cp ../build_tools/BUILD_sparsehash ./sparsehash/BUILD\n  popd\n\n  ## jni TODO\n\n  ## hadoop TODO\n  # if [ ! -f release-2.7.4.tar.gz ]; then\n  #   clean_exec wget https://github.com/apache/hadoop/archive/rel/release-2.7.4.tar.gz\n  # fi\n  # clean_exec tar vxzf release-2.7.4.tar.gz\n  # \n  # pushd hadoop-rel-release-2.7.4\n  # mvn package -Pdist,native -DskipTests -Dtar\n  # popd\n\n  ## jemalloc\n  if [ ! -f jemalloc.5.2.0.tar.gz ]; then\n    clean_exec wget -O jemalloc.5.2.0.tar.gz https://github.com/jemalloc/jemalloc/archive/5.2.0.tar.gz\n  fi\n  clean_exec rm -rf jemalloc-5.2.0\n  clean_exec tar vxzf jemalloc.5.2.0.tar.gz\n\n  pushd jemalloc-5.2.0\n  clean_exec ./autogen.sh\n  clean_exec CXXFLAGS='-fPIC' CFLAGS='-fPIC' ./configure --enable-shared=no --enable-static=yes --prefix=${rootdir}/3rd/jemalloc-5.2.0\n  clean_exec make\n  clean_exec make install\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf jemalloc-5.2.0 jemalloc \n  clean_exec cp ../build_tools/BUILD_jemalloc ./jemalloc/BUILD\n  popd\n\n  ## mpich\n  if [ ! -f mpich-3.2.1.tar.gz ]; then\n    clean_exec wget -O mpich-3.2.1.tar.gz http://www.mpich.org/static/downloads/3.2.1/mpich-3.2.1.tar.gz\n  fi\n  clean_exec rm -rf mpich-3.2.1\n  clean_exec tar vxzf mpich-3.2.1.tar.gz\n\n  pushd mpich-3.2.1\n  clean_exec ./configure --with-pic --enable-static --disable-shared --disable-fortran --disable-mpi-fortran --enable-mpi-thread-mutliple --prefix=${rootdir}/3rd/mpich-3.2.1\n  clean_exec make -j$(nproc)\n  clean_exec make install\n  popd\n\n  pushd ${rootdir}/3rd\n  clean_exec ln -nsf mpich-3.2.1 mpich\n  popd\n\n  popd\n  echo \"build 3rd done, you can remove .downloads now.\"\n}\n\nfunction distclean {\n  pushd ${rootdir}/3rd\n  clean_exec rm boost boost_1_68_0 -rf\n  clean_exec rm gflags gflags-2.2.1 -rf\n  clean_exec rm libunwind libunwind-1.3.1 -rf \n  clean_exec rm glog glog-0.4.0 -rf\n  clean_exec rm googletest googletest-release-1.8.1 -rf\n  clean_exec rm yas yas-7.0.2 -rf\n  clean_exec rm sparsehash sparsehash-2.0.3 -rf\n  clean_exec rm jemalloc jemalloc-5.2.0 -rf \n  clean_exec rm mpich mpich-3.2.1 -rf \n  popd\n\n  rm ${sourceroot} -rf\n\n  echo \"distclean 3rd done!\"\n}\n\nif [ x$1 != x ]; then\n  if [ $1 = \"install\" ]; then\n    install; exit 0\n  elif [ $1 = \"distclean\" ]; then\n    distclean; exit 0\n  else\n    show_help; exit 1\n  fi\nelse\n  show_help; exit 1\nfi\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4150390625,
          "content": "# Contributing to plato\r\nWelcome to [report Issues](https://github.com/Tencent/plato/issues) or [pull requests](https://github.com/Tencent/plato/pulls). It's recommended to read the following Contributing Guide first before contributing. \r\n\r\n## Issues\r\nWe use Github Issues to track public bugs and feature requests.\r\n\r\n### Search Known Issues First\r\nPlease search the existing issues to see if any similar issue or feature request has already been filed. You should make sure your issue isn't redundant.\r\n\r\n### Reporting New Issues\r\nIf you open an issue, the more information the better. Such as detailed description, screenshot or video of your problem, log or code blocks for your crash.\r\n\r\n## Pull Requests\r\nWe strongly welcome your pull request to make plato better. \r\n\r\n### Make Pull Requests\r\nThe code team will monitor all pull request, we run some code check and test on it. After all tests passed, we will accecpt this PR.\r\n\r\nBefore submitting a pull request, please make sure the followings are done:\r\n\r\n1. Fork the repo and create your branch from `master`.\r\n2. Update code or documentation if you have changed APIs.\r\n3. Add the copyright notice to the top of any new files you've added.\r\n4. Test and test again your code.\r\n5. Now, you can submit your pull request.\r\n\r\n## License\r\nBy contributing to plato, you agree that your contributions will be licensed under its [BSD LICENSE](https://github.com/Tencent/plato/blob/master/LICENSE)\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 15.4296875,
          "content": "﻿Tencent is pleased to support the open source community by making Plato available.  \r\n\r\nCopyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n\r\nPlato is licensed under the BSD 3-Clause License, except for the third-party components listed below. \r\n\r\nA copy of the BSD 3-Clause License is included in this file.\r\n\r\n\r\nOther dependencies and licenses:\r\n\r\nOpen Source Software Licensed Under the Apache License Version 2.0: \r\n----------------------------------------------------------------------------\r\n1.hdfs release-2.7.4\r\nCopyright 2014 The Apache Software Foundation\r\nCopyright 2011 Dain Sundstrom <dain@iq80.com>\r\nCopyright 2011 FuseSource Corp. http://fusesource.com\r\n\r\n2. GeminiGraph\r\nCopyright (c) 2014-2016 Xiaowei Zhu, Tsinghua University\r\n\r\nTerms of the Apache License Version 2.0: \r\n--------------------------------------------------------------------\r\nApache License\r\n\r\nVersion 2.0, January 2004\r\n\r\nhttp://www.apache.org/licenses/\r\n\r\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n1. Definitions.\r\n\r\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\r\n\r\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\r\n\r\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\r\n\r\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\r\n\r\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\r\n\r\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\r\n\r\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\r\n\r\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\r\n\r\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\r\n\r\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\r\n\r\nYou must give any other recipients of the Work or Derivative Works a copy of this License; and\r\nYou must cause any modified files to carry prominent notices stating that You changed the files; and\r\nYou must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\r\nIf the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\r\n\r\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\r\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\r\n\r\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\r\n\r\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\r\n\r\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\r\n\r\nEND OF TERMS AND CONDITIONS\r\n\r\n\r\nOpen Source Software Licensed Under the BSD 2-Clause License: \r\n----------------------------------------------------------------------------\r\n1. jemalloc 5.2.0\r\nCopyright (C) 2002-present Jason Evans <jasone@canonware.com>.\r\nAll rights reserved.\r\nCopyright (C) 2007-2012 Mozilla Foundation.  All rights reserved.\r\nCopyright (C) 2009-present Facebook, Inc.  All rights reserved.\r\n\r\n\r\nTerms of the BSD 2-Clause License: \r\n--------------------------------------------------------------------\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions\r\nare met:\r\n1. Redistributions of source code must retain the above copyright\r\n   notice, this list of conditions and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright\r\n   notice, this list of conditions and the following disclaimer in the\r\n   documentation and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nOpen Source Software Licensed Under the Boost Software License - Version 1.0\r\n----------------------------------------------------------------------------\r\n1. boost 1.68.0\r\nCopyright (C) 2005, 2006 Douglas Gregor.\r\nCopyright (C) 2006 The Trustees of Indiana University\r\nCopyright Vladimir Prus 2002-2006.\r\nCopyright Dave Abrahams 2005-2006.\r\nCopyright Rene Rivera 2005-2007.\r\nCopyright 2002 William E. Kempf\r\n\r\n2. yas 7.0.2\r\nCopyright (c) 2010-2019 niXman (i dot nixman dog gmail dot com). All rights reserved.\r\n\r\n\r\nTerms of the Boost Software License - Version 1.0:\r\n--------------------------------------------------------------------\r\nBoost Software License - Version 1.0 - August 17th, 2003\r\n\r\nPermission is hereby granted, free of charge, to any person or organization\r\nobtaining a copy of the software and accompanying documentation covered by\r\nthis license (the \"Software\") to use, reproduce, display, distribute,\r\nexecute, and transmit the Software, and to prepare derivative works of the\r\nSoftware, and to permit third-parties to whom the Software is furnished to\r\ndo so, all subject to the following:\r\n\r\nThe copyright notices in the Software and this entire statement, including\r\nthe above license grant, this restriction and the following disclaimer,\r\nmust be included in all copies of the Software, in whole or in part, and\r\nall derivative works of the Software, unless such copies or derivative\r\nworks are solely in the form of machine-executable object code generated by\r\na source language processor.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\r\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\r\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\r\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\nDEALINGS IN THE SOFTWARE.\r\n\r\n\r\nOpen Source Software Licensed Under the BSD-3 Clause License:\r\n----------------------------------------------------------------------------\r\n1. gflags 2.2.1\r\nCopyright (c) 2006, Google Inc.\r\n\r\n2. glog 0.4.0\r\nCopyright (c) 2008, Google Inc.\r\nAll rights reserved.\r\nCopyright (c) 2003-2008, Jouni Malinen <j@w1.fi> and contributors\r\nAll Rights Reserved.\r\n\r\n3. googletest release-1.8.1\r\nCopyright 2008, Google Inc.\r\nAll rights reserved.\r\n\r\n\r\nTerms of the BSD 3-Clause License: \r\n--------------------------------------------------------------------\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\n3. Neither the name of THL A29 Limited/the above copyright holders nor the names of their contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8759765625,
          "content": "# Plato(柏拉图)\n\n[![Build Status](https://travis-ci.org/Tencent/plato.svg?branch=master)](https://travis-ci.org/Tencent/plato) [![docker-build workflow](https://github.com/Tencent/plato/workflows/docker-build/badge.svg)](https://github.com/Tencent/plato/actions?workflow=docker-build) \n\n**A framework for distributed graph computation and machine learning at wechat scale, for more details, see [柏拉图简介](doc/introduction.md) | [Plato Introduction](doc/introduction_en.md).**\n\nAuthors(In alphabetical order):  Benli Li, Conghui He, Donghai Yu, Pin Gao, Shijie Sun, Wenqiang Wu, Wanjing Wei, Xing Huang, Xiaogang Tu, Yangzihao Wang, Yongan Li.\n\nContact: plato@tencent.com\n\nSpecial thanks to [Xiaowei Zhu](https://coolerzxw.github.io/) and many for their work [Gemini](https://coolerzxw.github.io/data/publications/gemini_osdi16.pdf)[1]. Several basic utility functions in Plato is derived from Gemini, the design principle of some dual-mode based algorithms in Plato is also heavily influenced by Gemini's dualmode-engine. Thanks to Ke Yang and many for their work [KnightKing](http://madsys.cs.tsinghua.edu.cn/publications/SOSP19-yang.pdf)[2] which served as foundation of plato's [walk-engine](plato/engine/walk.hpp).\n\n## Dependencies\n\nTo simplify installation, Plato currently downloads and builds most of its required dependencies by calling following commands. You should call it at least once before any build operations.\n\n```bash\n# install compile dependencies.\nsudo ./docker/install-dependencies.sh\n# download and build staticlly linked libraries.\n./3rdtools.sh distclean && ./3rdtools.sh install\n```\n\n## Environment\nPlato was developed and tested on x86_64 cluster and [Centos 7.0](https://www.centos.org/). Theoretically, it can be ported to other Linux distribution easily.\n\n## Test && Build\n\n```bash\n./build.sh\n```\n\n## Run\n\n### Local\n\n```bash\n./scripts/run_pagerank_local.sh\n```\n\n### Production\n\n*Prerequisite:*\n\n1. A cluster which can submit MPI programs([Hydra](https://wiki.mpich.org/mpich/index.php/Using_the_Hydra_Process_Manager) is a feasible solution).\n2. An accessible [HDFS](https://hadoop.apache.org/) where Plato can find its input and put output on it.\n\nA sample submit script was locate in [here](./scripts/run_pagerank.sh), modify it based on your cluster's environment and run.\n\n\n```bash\n./scripts/run_pagerank.sh\n```\n\n## Documents\n\n* [支持算法列表](./doc/ALGOs.md)\n* [集群资源配置建议](./doc/Resources.md) | [Notes on Resource Assignment](./doc/Resources_en.md)\n\n## Reference\n\n[1] Xiaowei Zhu, Wenguang Chen, Weimin Zheng, Xiaosong Ma. Gemini: A computation-centric distributed graph processing system. 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI ’16)\n\n[2] Ke Yang, Mingxing Zhang, Kang Chen, Xiaosong Ma, Yang Bai, Yong Jiang. KnightKing: A Fast Distributed Graph Random Walk Engine. In ACM SIGOPS 27th Symposium on Operating Systems Principles (SOSP ’19)\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.3798828125,
          "content": "#!/bin/bash\n\nset -ex\n\nROOT_DIR=$(realpath $(dirname $0))\ncd $ROOT_DIR\n\nif [[ $1 == \"clean\" ]]; then\n    bazel clean\n    ./3rdtools.sh distclean\n    ./3rdtools.sh install\nfi\n\nexport CC=${ROOT_DIR}/3rd/mpich/bin/mpicxx\nexport BAZEL_LINKOPTS=-static-libstdc++\nexport LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ROOT_DIR}/3rd/hadoop2/lib\n\n# test\nbazel test plato/...\n\n# build\nbazel build example/...\n"
        },
        {
          "name": "build_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "plato",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}