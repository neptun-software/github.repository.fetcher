{
  "metadata": {
    "timestamp": 1736565947477,
    "page": 927,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "onlytailei/CppRobotics",
      "stars": 1943,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "build\nbin\n.vscode\ncode-server\ndeploy.sh\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.0615234375,
          "content": "cmake_minimum_required(VERSION 3.1)\nproject(CPP_ROBOTICS)\n\nset(CMAKE_CXX_STANDARD 11)\n# set(CMAKE_BUILD_TYPE Debug)\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)\nset(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)\n\n#############################\n#Dependencies\n#############################\n\nfind_package(Eigen3 REQUIRED)\nfind_package(OpenCV REQUIRED)\n\ninclude_directories(${EIGEN3_INCLUDE_DIR})\ninclude_directories(./include)\n\n#include_directories(/home/tai/Software/Ipopt-3.12.13/build/include)\n#link_directories(/home/tai/Software/Ipopt-3.12.13/build/lib)\n\n\n\n##############################\n#Localization\n##############################\n\nadd_executable(ekf src/extended_kalman_filter.cpp)\ntarget_link_libraries(ekf ${OpenCV_LIBS} )\n\nadd_executable(pf src/particle_filter.cpp)\ntarget_link_libraries(pf ${OpenCV_LIBS} )\n\n##############################\n#PathPlanning\n##############################\n\nadd_executable(dijkstra src/dijkstra.cpp)\ntarget_link_libraries(dijkstra ${OpenCV_LIBS} )\n\nadd_executable(astar src/a_star.cpp)\ntarget_link_libraries(astar ${OpenCV_LIBS} )\n\nadd_executable(rrt src/rrt.cpp)\ntarget_link_libraries(rrt ${OpenCV_LIBS} )\n\nadd_executable(rrtstar src/rrt_star.cpp)\ntarget_link_libraries(rrtstar ${OpenCV_LIBS} )\n\nadd_executable(dwa src/dynamic_window_approach.cpp)\ntarget_link_libraries(dwa ${OpenCV_LIBS} )\n\nadd_executable(mptg src/model_predictive_trajectory_generator.cpp)\ntarget_link_libraries(mptg ${OpenCV_LIBS})\n\nadd_executable(slp src/state_lattice_planner.cpp)\ntarget_link_libraries(slp ${OpenCV_LIBS})\n\nadd_executable(csp src/cubic_spline_planner.cpp)\ntarget_link_libraries(csp ${OpenCV_LIBS})\n\nadd_executable(frenet src/frenet_optimal_trajectory.cpp)\ntarget_link_libraries(frenet ${OpenCV_LIBS})\n\n\n##############################\n#PathTracking\n##############################\n\nadd_executable(lqr src/lqr_steer_control.cpp)\ntarget_link_libraries(lqr ${OpenCV_LIBS})\n\nadd_executable(lqr_full src/lqr_speed_steer_control.cpp)\ntarget_link_libraries(lqr_full ${OpenCV_LIBS})\n\n#add_executable(mpc src/model_predictive_control.cpp)\n#target_link_libraries(mpc ${OpenCV_LIBS} ipopt)\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.048828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2019 Lei Tai\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "gif",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lookuptable.csv",
          "type": "blob",
          "size": 2.6494140625,
          "content": "x,y,yaw,s,km,kf\n1.0,0.0,0.0,1.0,0.0,0.0\n0.9734888894493215,-0.009758406565994977,0.5358080146312756,0.9922329557399788,-0.10222538550473198,3.0262632253145982\n10.980728996433243,-0.0003093605787364978,0.522622783944529,11.000391678142623,0.00010296091030877934,0.2731556687244648\n16.020309241920156,0.0001292339008200291,0.5243399938698222,16.100019813021202,0.00013263212395994706,0.18999138959173634\n20.963495745193626,-0.00033031017429944326,0.5226120033275024,21.10082901143343,0.00011687467551566884,0.14550546012583987\n6.032553475650599,2.008504211720188,0.5050517859971599,6.400329805864408,0.1520002249689879,-0.13105940607691127\n10.977487445230075,2.0078696810700034,0.5263634407901872,11.201040572298973,0.04895863722280565,0.08356555007223682\n15.994057699325753,2.025659106131227,0.5303858891065698,16.200300421483128,0.0235708657178127,0.10002225103921249\n20.977228843605943,2.0281289825388513,0.5300376140865567,21.20043308669372,0.013795675421657671,0.09331700188063087\n25.95453914157977,1.9926432818499131,0.5226203078411618,26.200880299840527,0.00888830054451281,0.0830622000626594\n0.9999999999999999,0.0,0.0,1.0,0.0,0.0\n5.999999999670752,5.231312388722274e-05,1.4636120911014667e-05,5.996117185283419,4.483756968024291e-06,-3.4422519205046243e-06\n10.999749470720566,-0.011978787043239986,0.022694802592583763,10.99783855994015,-0.00024209503125174496,0.01370491008661795\n15.999885224357776,-0.018937230084507616,0.011565580878015763,15.99839381389597,-0.0002086399372890716,0.005267247862667496\n20.999882688881286,-0.030304200126461317,0.009117836885732596,20.99783120184498,-0.00020013159571184735,0.0034529188783636866\n25.999911270030413,-0.025754431694664327,0.0074809531598503615,25.99674782258235,-0.0001111138115390646,0.0021946603965658368\n10.952178818975062,1.993067260835455,0.0045572480669707136,11.17961498195845,0.04836813285436623,-0.19328716251760758\n16.028306009258,2.0086286208315407,0.009306594796759554,16.122411866381054,0.02330689045417979,-0.08877002085985948\n20.971603115419715,1.9864158336174966,0.007016819403167119,21.093006725076872,0.013439123130720928,-0.05238318300611623\n25.997019676818372,1.9818581321430093,0.007020172975955249,26.074021794586585,0.00876496148602802,-0.03362579291686346\n16.017903482982604,4.009490840390534,-5.293114796312698e-05,16.600937712976638,0.044543450568614244,-0.17444651314466567\n20.98845988414163,3.956600199823583,-0.01050744134070728,21.40149119463485,0.02622674388276059,-0.10625681152519345\n25.979448381017914,3.9968223055054977,-0.00012819253386682928,26.30504721211744,0.017467093413146118,-0.06914750106424669\n25.96268055563514,5.9821266846168,4.931311239565056e-05,26.801388563459287,0.025426008913226557,-0.10047663078001536\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 5.2666015625,
          "content": "# CppRobotics\n\nThis is the cpp implementation of the [PythonRobotics](https://github.com/AtsushiSakai/PythonRobotics)\n\n## Requirment\n- cmake\n- opencv 3.3\n- Eigen 3\n- [CppAD](https://www.coin-or.org/CppAD/Doc/install.htm) / [IPOPT](https://www.coin-or.org/Ipopt/documentation/node14.html) (*for MPC convex optimization*) [install tips](https://github.com/udacity/CarND-MPC-Quizzes/blob/master/install_Ipopt_CppAD.md)\n- ~~ROS~~ (*~~To make the repo lightweight :)~~. Yet, we may still need it for 3D visualization.*)\n\n## Build\n     $ mkdir build\n     $ cd build\n     $ cmake ../\n     $ make -j 8\n\nFind all the executable files in ***build/bin***.\n\n# Table of Contents\n* [Localization](#localization)\n    * [Extended kalmam filter](#extended-kalman-filter-localization)\n    * [Particle filter](#particle-filter-localization)\n    * Histogram filter\n* [Mapping](#mapping)\n    * Gaussian grid map\n* [SLAM](#SLAM)\n    * FastSLAM 1.0\n* [Path Planning](#path-planning)\n    * [Dijkstra](#dijkstra)\n    * [A Star](#a-star)\n    * [RRT](#rrt)\n    * [Dynamic Window Approach](#dynamic-window-approach)\n    * [Model Predictive Trajectory Generator](#model-predictive-trajectory-generator)\n    * [Cubic Spline Planner](#cubic-spline-planner)\n    * [State Lattice Planner](#state-lattice-planner)\n    * [Frenet Frame Trajectory](#frenet-frame-trajectory)\n* [Path Tracking Control](#path-tracking-control)\n    * [LQR Sterring Control](#lqr-steering-control)\n    * [LQR Speed and Steering Control](#lqr-speed-and-steering-control)\n    * [Model Predictive Speed and Steering Control](#mpc-speed-and-steering-control)\n* [Aerial Navigation](#aerial-navigation)\n     * Drone 3D Trajectory Following\n     * Rocket Powered Landing\n\n# Localization\n## Extended Kalman Filter Localization\n* green line: the groundtruth trajectory\n* black line: dead reckoning\n* red points: observations (e.g. GPS)\n* blue line: estimated positions\n\n<!-- ![ekf_gif](./gif/ekf.gif) -->\n<img src=\"https://ram-lab.com/file/tailei/gif/ekf.gif\" alt=\"ekf\" width=\"400\"/>\n\n[Probabilistic Robotics](http://www.probabilistic-robotics.org/)\n\n## Particle Filter Localization\n* green line: the groundtruth trajectory\n* black line: dead reckoning\n* red points: landmarks\n* blue line: estimated positions\n\n<!-- ![pf_gif](./gif/pf.gif) -->\n<img src=\"https://ram-lab.com/file/tailei/gif/pf.gif\" alt=\"pf\" width=\"400\"/>\n\n[Probabilistic Robotics](http://www.probabilistic-robotics.org/)\n\n# Path Planning\n\n## Dijkstra\n* blue point: the start point\n* red point: the goal point\n<img src=\"https://ram-lab.com/file/tailei/gif/dijkstra.gif\" alt=\"dijkstra\" width=\"400\"/>\n\n## A star\n* blue point: the start point\n* red point: the goal point\n<img src=\"https://ram-lab.com/file/tailei/gif/a_star.gif\" alt=\"a_star\" width=\"400\"/>\n\n## RRT\n* red circle: the start point\n* blue circle: the goal point\n* black circle: obstacles\n<img src=\"https://ram-lab.com/file/tailei/gif/rrt.gif\" alt=\"rrt\" width=\"400\"/>\n\n## Dynamic Window Approach\n* blue circle: the target point\n* red circle: the robot\n\n<!-- ![dwa_gif](./gif/dwa.gif) -->\n<img src=\"https://ram-lab.com/file/tailei/gif/dwa.gif\" alt=\"dwa\" width=\"400\"/>\n\n[The dynamic window approach to collision avoidance](https://ieeexplore.ieee.org/document/580977)\n\n## Model Predictive Trajectory Generator\nThis part is based on the bicycle motion model.\n* blue circle: the target point\n* red circle: the initial point\n\n<!-- ![mptg_gif](./gif/mptg.gif) -->\n<img src=\"https://ram-lab.com/file/tailei/gif/mptg.gif\" alt=\"mptg\" width=\"400\"/>\n\n## Cubic Spline Planner\n\n<!-- ![mptg_gif](./gif/csp.png =500x) -->\n<img src=\"https://ram-lab.com/file/tailei/gif/csp.png\" alt=\"csp\" width=\"400\"/>\n\n## State Lattice Planner\n* blue circle: the target point\n* red circle: the initial point\n\n<!-- ![mptg_gif](./gif/slp.gif) -->\n<img src=\"https://ram-lab.com/file/tailei/gif/slp.gif\" alt=\"slp\" width=\"400\"/>\n\n[State Space Sampling of Feasible Motions for High-Performance Mobile Robot Navigation in Complex Environments](https://www.ri.cmu.edu/pub_files/pub4/howard_thomas_2008_1/howard_thomas_2008_1.pdf)\n\n## Frenet Frame Trajectory\n\n* black line: the planned spline path\n* red circle: the obstacle\n* blue circle: the planned trajectory\n* green circle: the real-time position of robot\n\n<img src=\"https://ram-lab.com/file/tailei/gif/frenet.gif\" alt=\"frenet\" width=\"400\"/>\n\n[Optimal Trajectory Generation for Dynamic Street Scenarios in a Frenet Frame](https://www.researchgate.net/publication/224156269_Optimal_Trajectory_Generation_for_Dynamic_Street_Scenarios_in_a_Frenet_Frame)\n\n\n# Path Tracking Control\n## LQR Steering Control\n* black line: the planned spline path\n* red circle: the position under lqr control\n\n<img src=\"https://ram-lab.com/file/tailei/gif/lqr_steering.gif\" alt=\"lqr_steering\" width=\"400\"/>\n\n\n## LQR Speed and Steering Control\n* black line: the planned spline path\n* red circle: the position under lqr control\n\n<img src=\"https://ram-lab.com/file/tailei/gif/lqr_full.gif\" alt=\"lqr_full\" width=\"400\"/>\n\n\n## MPC Speed and Steering Control\n* black line: the planned spline path\n* blue line: the passed path\n* yellow cross: the reference trajectory for MPC    \n(To compile this part, you need to uncomment the related lines in CMakeLists.txt and install [CppAD](https://www.coin-or.org/CppAD/Doc/install.htm) and [IPOPT](https://coin-or.github.io/Ipopt/).)\n\n<img src=\"https://ram-lab.com/file/tailei/gif/mpc.gif\" alt=\"mpc\" width=\"400\"/>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}