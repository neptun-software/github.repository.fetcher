{
  "metadata": {
    "timestamp": 1736565847426,
    "page": 791,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "baidu/sofa-pbrpc",
      "stars": 2138,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.537109375,
          "content": "*.o\n.cproject\n.project\n.settings/\nlibsofa-pbrpc.a\noutput/\nsofa-pbrpc-client\nunit-test/libgtest.a\nunit-test/test_atomic\nunit-test/test_buffer\nunit-test/test_closure\nunit-test/test_common\nunit-test/test_data.pb.h\nunit-test/test_epoll_support\nunit-test/test_ext_closure\nunit-test/test_thread_group\nunit-test/test_timeout_manager\nunit-test/test_tran_buf_pool\nunit-test/test_io_service_pool\n*.a\nsofa-pbrpc-client\ndepends.mk\nsrc/sofa/pbrpc/*.pb.h\nsrc/sofa/pbrpc/*.pb.cc\n\n# bazel\nbazel-app\nbazel-bin\nbazel-genfiles\nbazel-out\nbazel-sofa-pbrpc\nbazel-testlogs\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.8857421875,
          "content": "language: cpp\ncompiler: gcc\nenv:\n    global:\n        - secure: \"dRimnJVfqg6IPK758/R+CDeArbtV4yT387ZgJvJLCnKPKC7CZmtVz4xNH+ZQqFzRCDJBBCkpp/0p7Cq5u4f22d4TaAaGf3gK/2okvyNPCg0DUPvVP2LWzfP5pZSwX4/os5axWUGW6//8HDFWK37lQbuLNx+95m93CJP+3StNKzY=\"\n    matrix:\n        - PROTOBUF_VERSION=2.6.0\nbefore_install:\n      - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-\ninstall:\n    - sh -x ./build.sh\n    - git clone https://github.com/google/googletest.git\nscript:\n    - make -j4 && make install\n    - make -C unit-test -j4 && cd unit-test && ./run_test.sh\naddons:\n  coverity_scan:\n    project:\n      name: \"baidu/sofa-pbrpc\"\n      description: \"Build submitted via Travis CI\"\n    notification_email: shichengyi@baidu.com\n    build_command_prepend: \"make clean\"\n    build_command:   \"make -j 4\"\n    branch_pattern: master\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2705078125,
          "content": "# Names should be added to this file like so:\n# Name or Organization <email address>\n\nBaidu.com, Inc.\n\n# Initial version authors:\nQin Zuoyan <qinzuoyan01@baidu.com>\n\n# Partial list of contributors:\nJiang Jinpeng <jiangjinpeng@baidu.com>\nYan Shiguang <yanshiguang02@baidu.com>\n\n"
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 1.71875,
          "content": "load(\"@protobuf//:protobuf.bzl\", \"cc_proto_library\")\n\nRELATIVE_WELL_KNOWN_PROTOS = [\n  \"sofa/pbrpc/builtin_service.proto\",\n  \"sofa/pbrpc/rpc_meta.proto\",\n  \"sofa/pbrpc/rpc_option.proto\"\n]\n\nWELL_KNOWN_PROTOS = [\"src/\" + s for s in RELATIVE_WELL_KNOWN_PROTOS]\n\nfilegroup(\n  name = \"well_known_protos\",\n  srcs = WELL_KNOWN_PROTOS,\n  visibility = [\"//visibility:public\"],\n)\n\ncc_proto_library(\n  name = \"cc_protos\",\n  srcs = WELL_KNOWN_PROTOS,\n  include = \"src/\",\n  default_runtime = \"@protobuf//:protobuf\",\n  protoc = \"@protobuf//:protoc\",\n  deps = [\"@protobuf//:cc_wkt_protos\"],\n  visibility = [\"//visibility:public\"]\n)\n\ncc_library(\n  name = \"rapidjson\",\n  hdrs = glob([\"src/rapidjson/*.h\", \"src/rapidjson/internal/*.h\"]),\n  srcs = [],\n  visibility = [\"//main:__pkg__\"],\n)\n\ncc_library(\n  name = \"sofa-pbrpc\",\n  hdrs = glob([\n    \"src/sofa/pbrpc/*.h\",\n    \"src/sofa/pbrpc/smart_ptr/*.hpp\",\n    \"src/sofa/pbrpc/smart_ptr/detail/*.hpp\"\n  ]),\n  srcs = glob([\"src/sofa/pbrpc/*.cc\"]),\n  deps = [\n    \":cc_protos\",\n    \":rapidjson\",\n    \"@protobuf//:protobuf\",\n    \"@protobuf//:protoc_lib\",\n    \"@snappy//:snappy\",\n    \"@zlib//:zlib\",\n    \"@gtest//:gtest\",\n    \"@boost//:boost\"\n  ],\n  copts = [\n    \"-Iexternal/googletest/include\",\n  ],\n  visibility = [\"//visibility:public\"],\n)\n\ncc_library(\n  name = \"sofa-pbrpc-client-lib\",\n  hdrs = [\"src/sofa/pbrpc/http-agent/http_agent.h\"],\n  srcs = [\"src/sofa/pbrpc/http-agent/http_agent.cc\"],\n  deps = [\n    \":sofa-pbrpc\",\n  ],\n  visibility = [\"//main:__pkg__\"],\n)\n\ncc_binary(\n  name = \"sofa-pbrpc-client\",\n  srcs = [\n    \"src/sofa/pbrpc/http-agent/sofa_pbrpc_client.cc\",\n  ],\n  deps = [\n    \":sofa-pbrpc-client-lib\",\n  ],\n  visibility = [\"//main:__pkg__\"],\n)\n\nexports_files([\"src/sofa/pbrpc/buffer.cc\"], [\"//unit-test:__pkg__\"])\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 0.294921875,
          "content": "2014-05-20 version 1.0.0:\n\n  * Submit version 1.0.0.\n\n2014-07-02 version 1.0.0:\n\n  * Support multi-server load balance.\n\n2014-11-19 version 1.0.0:\n\n  * Release version 1.0.0.\n\n2014-12-14 version 1.0.1:\n\n  * Support http protocol and web monitor.\n\n2015-04-04 version 1.0.1:\n\n  * Support python client.\n\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 2.1103515625,
          "content": "Copyright (c) 2014 Baidu.com, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Baidu Inc. nor the names of its contributors\nmay be used to endorse or promote products derived from this software\nwithout specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\n\nCurrently, sofa-pbrpc only support x86_64 platform, Linux OS, and GCC.\n\n1. Modify file './depends.mk' to specify depending libs.\n    The necessary libs is boost, protobuf, snappy and zlib, please\n    refer to file './README' for details.\n2. Run 'make' to build sofa-pbrpc.\n    The default optimization level is 'O2'.\n    To change it, modify the 'OPT' variable in file './Makefile'.\n3. Run 'make install' to install sofa-pbrpc.\n    The default install directory is './output'.\n    To change it, modify the 'PREFIX' variable in file './Makefile'.\n\nFor any build problem, please contact <opensearch@baidu.com>.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.6259765625,
          "content": "Copyright (c) 2014 Baidu.com, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Baidu Inc. nor the names of its contributors\nmay be used to endorse or promote products derived from this software\nwithout specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nBoost -  free peer-reviewed portable C++ source libraries\nBoost Software License - Version 1.0 - August 17th, 2003\nhttp://www.boost.org/\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nProtocol Buffers - Google's data interchange format\nCopyright 2008 Google Inc.  All rights reserved.\nhttp://code.google.com/p/protobuf/\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nprotobuf-zerocopy-compression\nCopyright (c) 2013, Johannes Ebke and Peter Waller.  All rights reserved.\nhttps://github.com/JohannesEbke/protobuf-zerocopy-compression\n\nBSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.  Redistributions in binary\nform must reproduce the above copyright notice, this list of conditions and the\nfollowing disclaimer in the documentation and/or other materials provided with\nthe distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nLZ4 - Fast LZ compression algorithm\nCopyright (C) 2011-2012, Yann Collet.\nBSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nYou can contact the author at :\n- LZ4 homepage : http://fastcompression.blogspot.com/p/lz4.html\n- LZ4 source repository : http://code.google.com/p/lz4/\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.03515625,
          "content": "# Copyright (c) 2014 Baidu.com, Inc. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n\n#-----------------------------------------------\n# Modify prefix to specify the directory to install sofa-pbrpc.\n#\nPREFIX=./output\n#-----------------------------------------------\n\n#-----------------------------------------------\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n# to switch between compilation modes.\n#\nOPT ?= -O2        # (A) Production use (optimized mode)\n# OPT ?= -g2      # (B) Debug mode, generate full line-level debugging symbols\n# OPT ?= -O2 -g2  # (C) Profiling mode: opt, but generate debugging symbols\n#-----------------------------------------------\n\n#-----------------------------------------------\n# Customized macro switch:\n#   SOFA_PBRPC_ENABLE_DETAILED_LOGGING : print current-time and thread-id in logging header\n#   SOFA_PBRPC_ENABLE_FUNCTION_TRACE : print trace log when enter and leave function\n#   SOFA_PBRPC_USE_SPINLOCK : use SpinLock as FastLock\n#\nCXXFLAGS ?= -DSOFA_PBRPC_ENABLE_DETAILED_LOGGING\n#-----------------------------------------------\n\n#-----------------------------------------------\n# !!! Do not change the following lines !!!\n#-----------------------------------------------\n\ninclude depends.mk\n\nLIB=libsofa-pbrpc.a\nLIB_SRC=$(wildcard src/sofa/pbrpc/*.cc)\nLIB_OBJ=$(patsubst %.cc,%.o,$(LIB_SRC))\nPROTO=$(wildcard src/sofa/pbrpc/*.proto)\nPROTO_SRC=$(patsubst %.proto,%.pb.cc,$(PROTO))\nPROTO_HEADER=$(patsubst %.proto,%.pb.h,$(PROTO))\nPROTO_OBJ=$(patsubst %.cc,%.o,$(PROTO_SRC))\n\nBIN=sofa-pbrpc-client\nBIN_SRC=$(wildcard src/sofa/pbrpc/http-agent/*.cc)\nBIN_OBJ=$(patsubst %.cc,%.o,$(BIN_SRC))\n\nPUB_INC=src/sofa/pbrpc/pbrpc.h src/sofa/pbrpc/closure_helper.h src/sofa/pbrpc/closure.h \\\n\tsrc/sofa/pbrpc/ext_closure.h src/sofa/pbrpc/common.h src/sofa/pbrpc/rpc_channel.h \\\n\tsrc/sofa/pbrpc/rpc_server.h src/sofa/pbrpc/rpc_client.h \\\n\tsrc/sofa/pbrpc/rpc_controller.h src/sofa/pbrpc/rpc_error_code.h \\\n\tsrc/sofa/pbrpc/mock_test_helper.h src/sofa/pbrpc/atomic.h src/sofa/pbrpc/counter.h \\\n\tsrc/sofa/pbrpc/thread_group.h src/sofa/pbrpc/timeout_manager.h src/sofa/pbrpc/string_utils.h \\\n\tsrc/sofa/pbrpc/locks.h src/sofa/pbrpc/mutex_lock.h src/sofa/pbrpc/spin_lock.h \\\n\tsrc/sofa/pbrpc/fast_lock.h src/sofa/pbrpc/rw_lock.h src/sofa/pbrpc/scoped_locker.h \\\n\tsrc/sofa/pbrpc/condition_variable.h src/sofa/pbrpc/wait_event.h src/sofa/pbrpc/http.h \\\n\tsrc/sofa/pbrpc/buffer.h src/sofa/pbrpc/buf_handle.h src/sofa/pbrpc/profiling_linker.h \\\n\t$(PROTO) $(PROTO_HEADER)\n\n#-----------------------------------------------\nifeq ($(OS),Windows_NT)\n    LDFLAGS += -lrt\n    TARGET_DIRECTORY := --target-directory\nelse\n    UNAME_S := $(shell uname -s)\n    \n    ifeq ($(UNAME_S),Linux)\n        LDFLAGS += -lrt\n        TARGET_DIRECTORY := --target-directory\n    endif\n    \n    ifeq ($(UNAME_S),Darwin)\n        TARGET_DIRECTORY := \n    endif\nendif\n\nifndef CXX\n    CXX=g++\nendif\n\n#-----------------------------------------------\n\nINCPATH=-Isrc -I$(BOOST_HEADER_DIR) -I$(PROTOBUF_DIR)/include -I$(SNAPPY_DIR)/include -I$(ZLIB_DIR)/include\nCXXFLAGS += $(OPT) -pipe -W -Wall -fPIC -D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DHAVE_SNAPPY $(INCPATH)\n\nLDFLAGS += -L$(ZLIB_DIR)/lib -L$(PROTOBUF_DIR)/lib/ -L$(SNAPPY_DIR)/lib/ -lprotobuf -lsnappy -lpthread -lz\n\n.PHONY: check_depends build rebuild install clean\n\nall: build\n\ncheck_depends:\n\t@if [ ! -f \"$(BOOST_HEADER_DIR)/boost/smart_ptr.hpp\" ]; then echo \"ERROR: need boost header\"; exit 1; fi\n\t@if [ ! -f \"$(PROTOBUF_DIR)/include/google/protobuf/message.h\" ]; then echo \"ERROR: need protobuf header\"; exit 1; fi\n\t@if [ ! -f \"$(PROTOBUF_DIR)/lib/libprotobuf.a\" ]; then echo \"ERROR: need protobuf lib\"; exit 1; fi\n\t@if [ ! -f \"$(SNAPPY_DIR)/include/snappy.h\" ]; then echo \"ERROR: need snappy header\"; exit 1; fi\n\t@if [ ! -f \"$(SNAPPY_DIR)/lib/libsnappy.a\" ]; then echo \"ERROR: need snappy lib\"; exit 1; fi\n\nclean:\n\trm -f $(LIB) $(BIN) $(LIB_OBJ) $(PROTO_OBJ) $(BIN_OBJ) $(PROTO_HEADER) $(PROTO_SRC)\n\nrebuild: clean all\n\n$(PROTO_OBJ): $(PROTO_HEADER)\n\n$(LIB_OBJ): $(PROTO_HEADER)\n\n$(LIB): $(LIB_OBJ) $(PROTO_OBJ)\n\tar crs $@ $(LIB_OBJ) $(PROTO_OBJ)\n\n$(BIN): $(LIB) $(BIN_OBJ)\n\t$(CXX) $(BIN_OBJ) -o $@ $(LIB) $(LDFLAGS)\n\n%.pb.cc %.pb.h: %.proto\n\t${PROTOBUF_DIR}/bin/protoc --proto_path=./src --proto_path=${PROTOBUF_DIR}/include --cpp_out=./src $<\n\n%.o: %.cc\n\t$(CXX) $(CXXFLAGS) -c $< -o $@\n\nbuild: $(LIB) $(BIN)\n\t@echo\n\t@echo 'Build succeed, run \"make install\" to install sofa-pbrpc to \"'$(PREFIX)'\".'\n\ninstall: $(LIB) $(BIN)\n\tmkdir -p $(PREFIX)/include/sofa/pbrpc\n\tcp -r $(PUB_INC) $(TARGET_DIRECTORY) $(PREFIX)/include/sofa/pbrpc/\n\tmkdir -p $(PREFIX)/include/sofa/pbrpc/smart_ptr\n\tcp src/sofa/pbrpc/smart_ptr/*.hpp $(PREFIX)/include/sofa/pbrpc/smart_ptr\n\tmkdir -p $(PREFIX)/include/sofa/pbrpc/smart_ptr/detail\n\tcp src/sofa/pbrpc/smart_ptr/detail/*.hpp $(PREFIX)/include/sofa/pbrpc/smart_ptr/detail\n\tmkdir -p $(PREFIX)/lib\n\tcp $(LIB) $(PREFIX)/lib/\n\tmkdir -p $(PREFIX)/bin\n\tcp $(BIN) $(PREFIX)/bin/\n\t@echo\n\t@echo 'Install succeed, target directory is \"'$(PREFIX)'\".'\n\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 2.0107421875,
          "content": "sofa-pbrpc\n----------\nA light-weight RPC implement of protobuf RPC framework.\n\nWiki: <URL:https://github.com/BaiduPS/sofa-pbrpc/wiki>.\n\nFeatures\n--------\n* High performace.\n* Easy to use. Refer to sample codes in './sample'.\n* Support sync call and async call. Refer to './sample/echo'.\n* Support three level (service/method/request) timeout. Refer to './sample/timeout_sample'.\n* Support transparent compression. Refer to './sample/compress_sample'.\n* Support mock test. Refer to './sample/mock_sample'.\n* Support network flow control.\n* Support auto connecting and reconnecting.\n* Support keep alive time of idle connections.\n* Support statistics for profiling.\n* Support multi-server load balance and fault tolerance.\n* Support http protocol.\n* Provide web monitor.\n* Provide python client library.\n\nDependings\n----------\nThe lib depends on boost-1.53.0 (only need header), protobuf-2.4.1, snappy and zlib:\n  boost - http://www.boost.org/\n  protobuf - https://github.com/google/protobuf\n  snappy - https://github.com/google/snappy\n  zlib - http://zlib.net/\n\nATTENTION: boost header is only needed when compiling the lib, but no need for user code.\n\nExtrally, './unit-test' and './sample/mock_sample' also depends on gtest:\n  gtest - https://github.com/google/googletest\n\nBuild\n-----\n1, Modify file './depends.mk' to specify depending libs.\n   The necessary libs is boost, protobuf, snappy and zlib.\n2, Run 'make' to build sofa-pbrpc.\n   The default optimization level is 'O2'.\n   To change it, modify the 'OPT' variable in file './Makefile'.\n3, Run 'make install' to install sofa-pbrpc.\n   The default install directory is './output'.\n   To change it, modify the 'PREFIX' variable in file './Makefile'.\n\nFor more details, please refer to the wiki.\n\nSample\n------\nFor sample codes, please refer to './sample' and the wiki.\n\nPerformance\n-----------\nFor performace details, please refer to the wiki.\n\nImplementation\n-----------\nFor implementation details, please refer to the wiki and file 'doc/sofa-pbrpc-document.md'.\n\nSupport\n-------\nopensearch@baidu.com\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.923828125,
          "content": "sofa-pbrpc\n==========\n[![Build Status](https://travis-ci.org/baidu/sofa-pbrpc.svg)](https://travis-ci.org/baidu/sofa-pbrpc)\n[![Join the chat at https://gitter.im/sofa-pbrpc/rpc](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sofa-pbrpc/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/10957/badge.svg)](https://scan.coverity.com/projects/baidu-sofa-pbrpc)\n\nA light-weight RPC implementation of Google's protobuf RPC framework.\n\nWiki: https://github.com/baidu/sofa-pbrpc/wiki\n\n### Features\n* High performace.\n* Easy to use. Refer to sample code in './sample'.\n* Supports sync call and async call. Refer to './sample/echo'.\n* Supports three level (service/method/request) timeout. Refer to './sample/timeout_sample'.\n* Supports transparent compression. Refer to './sample/compress_sample'.\n* Supports mock test. Refer to './sample/mock_sample'.\n* Supports network flow control.\n* Supports auto connecting and reconnecting.\n* Supports keep alive time of idle connections.\n* Supports statistics for profiling.\n* Supports multi-server load balance and fault tolerance.\n* Supports http protocol.\n* Provides web monitor.\n* Provides python client library.\n\n### Dependencies\nThis lib depends on boost-1.53.0 (only need header), protobuf-2.4.1, snappy and zlib:\n* boost - http://www.boost.org/\n* protobuf - http://code.google.com/p/protobuf/\n* snappy - http://code.google.com/p/snappy/\n* zlib - http://zlib.net/\n\nATTENTION: boost header is only needed when compiling the lib, but is not needed for user code.\n\nExtrally, './unit-test' and './sample/mock_sample' also depends on gtest:\n* gtest - http://code.google.com/p/googletest/\n\n### Build\n1. Modify the file './depends.mk' to specify depending libs.<br>\n  The necessary libs are boost, protobuf, snappy, and zlib.\n2. Run 'make' to build sofa-pbrpc.<br>\n  The default optimization level is 'O2'.<br>\n  To change it, modify the 'OPT' variable in file './Makefile'.\n3. Run 'make install' to install sofa-pbrpc.<br>\n  The default install directory is './output'.<br>\n  To change it, modify the 'PREFIX' variable in file './Makefile'.\n\nFor more details, please refer to the wiki [Build Guide](https://github.com/baidu/sofa-pbrpc/wiki/%E6%9E%84%E5%BB%BA%E6%8C%87%E5%BC%95).\n\n### Sample\nFor sample code, please refer to ['./sample'](https://github.com/baidu/sofa-pbrpc/tree/master/sample) and the wiki [Quick Start](https://github.com/baidu/sofa-pbrpc/wiki/%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8).\n\n### Profiling\nFor Profiling feature, please refer to the wiki [Profiling](https://github.com/baidu/sofa-pbrpc/wiki/Profiling%E5%8A%9F%E8%83%BD).\n\n### Performance\nFor performace details, please refer to the wiki [Performance](https://github.com/baidu/sofa-pbrpc/wiki/%E6%80%A7%E8%83%BD).\n\n### Implementation\nFor implementation details, please refer to the wiki and file [doc/sofa-pbrpc-document.md](doc/sofa-pbrpc-document.md).\n\n### Support\nopensearch@baidu.com\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.5634765625,
          "content": "Http support\n------------\nSupport http protocol, then user can call methods through http, e.g., by browser.\nRequest and response message may be serialized/deserialized in json format. \nThis will provide better usability.\n(done)\n\nMulti-server load balance\n-------------------------\nBy providing multi-server addresses (statically or dynamically), one client stub\ncan access services deployed on different servers, with intelligent load balance.\n(done)\n\nCross-language client\n---------------------\nProvide rpc client lib in other languages, e.g., java and python.\n(python done)\n\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "git_repository(\n  name = \"protobuf\",\n  remote = \"https://github.com/google/protobuf\",\n  tag = \"v3.1.0\"\n)\n\nnew_git_repository(\n  name = \"snappy\",\n  remote = \"https://github.com/google/snappy\",\n  commit = \"32d6d7d8a2ef328a2ee1dd40f072e21f4983ebda\", # latest master\n  build_file = \"bazel/snappy.BUILD\"\n)\n\nnew_git_repository(\n  name = \"gtest\",\n  remote = \"https://github.com/google/googletest.git\",\n  tag = \"release-1.8.0\",\n  build_file = \"bazel/gtest.BUILD\",\n)\n\nnew_http_archive(\n  name = \"boost\",\n  url = \"https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.bz2/download\",\n  type = \"tar.bz2\",\n  strip_prefix = \"boost_1_61_0/\",\n  build_file = \"bazel/boost.BUILD\",\n  sha256 = \"a547bd06c2fd9a71ba1d169d9cf0339da7ebf4753849a8f7d6fdb8feee99b640\",\n)\n\nnew_http_archive(\n  name = \"zlib\",\n  url = \"https://sourceforge.net/projects/libpng/files/zlib/1.2.8/zlib-1.2.8.tar.gz/download\",\n  type = \"tar.gz\",\n  build_file = \"bazel/zlib.BUILD\",\n  strip_prefix = \"zlib-1.2.8/\",\n  sha256 = \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d\",\n)\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 2.0654296875,
          "content": "#!/usr/bin/env bash\nset -x -e\n\n########################################\n# download & build depend software\n########################################\n\nDEPS_PREFIX=`pwd`/thirdparty\nDEPS_CONFIG=\"--prefix=${DEPS_PREFIX} --disable-shared --with-pic\"\nFLAG_DIR=`pwd`/.build\n\nexport PATH=${DEPS_PREFIX}/bin:$PATH\nmkdir -p ${DEPS_PREFIX} ${FLAG_DIR}\n\n# boost\nif [ ! -f \"${FLAG_DIR}/boost_1_57_0\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/boost_1_57_0/boost\" ]; then\n    wget -O ${DEPS_PREFIX}/boost_1_57_0.tar.gz http://sourceforge.net/projects/boost/files/boost/1.57.0/boost_1_57_0.tar.gz\n    tar zxf ${DEPS_PREFIX}/boost_1_57_0.tar.gz -C ${DEPS_PREFIX}\n    touch \"${FLAG_DIR}/boost_1_57_0\"\nfi\n\n# protobuf\nif [ ! -f \"${FLAG_DIR}/protobuf_2_6_1\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libprotobuf.a\" ] \\\n    || [ ! -d \"${DEPS_PREFIX}/include/google/protobuf\" ]; then\n    wget -O ${DEPS_PREFIX}/protobuf-2.6.1.tar.gz https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz\n    tar zxf ${DEPS_PREFIX}/protobuf-2.6.1.tar.gz -C ${DEPS_PREFIX}\n    cd ${DEPS_PREFIX}/protobuf-2.6.1\n    autoreconf -ivf\n    ./configure ${DEPS_CONFIG}\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/protobuf_2_6_1\"\nfi\n\n# snappy\nif [ ! -f \"${FLAG_DIR}/snappy_1_1_1\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/lib/libsnappy.a\" ] \\\n    || [ ! -f \"${DEPS_PREFIX}/include/snappy.h\" ]; then\n    wget -O ${DEPS_PREFIX}/snappy-1.1.3.tar.gz https://github.com/google/snappy/releases/download/1.1.3/snappy-1.1.3.tar.gz\n    tar zxf ${DEPS_PREFIX}/snappy-1.1.3.tar.gz -C ${DEPS_PREFIX}\n    cd ${DEPS_PREFIX}/snappy-1.1.3\n    ./configure ${DEPS_CONFIG}\n    make -j4\n    make install\n    cd -\n    touch \"${FLAG_DIR}/snappy_1_1_1\"\nfi\n\n########################################\n# config depengs.mk\n########################################\n\necho \"BOOST_HEADER_DIR=\"${DEPS_PREFIX}\"/boost_1_57_0\" > depends.mk\necho \"PROTOBUF_DIR=\"${DEPS_PREFIX} >> depends.mk\necho \"SNAPPY_DIR=\"${DEPS_PREFIX} >> depends.mk\n\n########################################\n# install sofa-pbrpc\n########################################\n\nmake clean\nmake -j4 && make install\n"
        },
        {
          "name": "depends.mk",
          "type": "blob",
          "size": 1.7021484375,
          "content": "################################################################\n## Modified this file to specify depending library path.\n##\n## Depending libs:\n##   boost-1.53.0 (only need header)\n##   protobuf-2.4.1\n##   snappy\n##   zlib\n##\n################################################################\n\n################################################################\n## Boost header directory.\n##\n## Check file exist:\n##   $(BOOST_HEADER_DIR)/boost/smart_ptr.hpp\n##\n#BOOST_HEADER_DIR=/home/users/qinzuoyan01/libs/boost_1_53_0\nBOOST_HEADER_DIR=/usr\n################################################################\n\n################################################################\n## Protocal Buffers directory containing `include' and `lib'.\n##\n## Check file exist:\n##   $(PROTOBUF_DIR)/bin/protoc\n##   $(PROTOBUF_DIR)/include/google/protobuf/message.h \n##   $(PROTOBUF_DIR)/lib/libprotobuf.a \n##\n#PROTOBUF_DIR=/home/users/qinzuoyan01/libs/protobuf-2.4.1/output\nPROTOBUF_DIR=/usr/local\n################################################################\n\n################################################################\n## Snappy directory containing `include' and `lib'.\n##\n## Check file exist:\n##   $(SNAPPY_DIR)/include/snappy.h\n##   $(SNAPPY_DIR)/lib/libsnappy.a\n##\n#SNAPPY_DIR=/home/users/qinzuoyan01/libs/snappy-1.1.1/output\nSNAPPY_DIR=/usr\n################################################################\n\n################################################################\n## Zlib directory containing `include' and `lib'.\n##\n## Check file exist:\n##   $(ZLIB_DIR)/include/zlib.h\n##   $(ZLIB_DIR)/lib/libz.*\n##\n## If zlib is already installed in system path, ignore ZLIB_DIR.\n#ZLIB_DIR=\n################################################################\n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "unit-test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}