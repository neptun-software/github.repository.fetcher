{
  "metadata": {
    "timestamp": 1736565397987,
    "page": 239,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rime/librime",
      "stars": 3523,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0419921875,
          "content": "BasedOnStyle: Chromium\nSortIncludes: false\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "build\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.1533203125,
          "content": "# apply clang format in other folders\n3368db1525b4441844cda859bb6fc70adaf845c6\n\n# apply clang format in src folder\nab586ca1f32477edc00dfd6cfa555dd5425d283f\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.142578125,
          "content": "build/\nbuild-static/\ndebug/\ndist/\ndata/*\ninclude/*\nlib/*\nbin/*\nshare/*\ndeps/*/*\nplugins/*/\nenv.bat\nnode_modules/\n*~\n.*.swp\n.cache/\n*.7z\n.DS_Store\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.525390625,
          "content": "[submodule \"glog\"]\n\tpath = deps/glog\n\turl = https://github.com/google/glog.git\n[submodule \"leveldb\"]\n\tpath = deps/leveldb\n\turl = https://github.com/google/leveldb.git\n[submodule \"yaml-cpp\"]\n\tpath = deps/yaml-cpp\n\turl = https://github.com/jbeder/yaml-cpp.git\n[submodule \"googletest\"]\n\tpath = deps/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"marisa-trie\"]\n\tpath = deps/marisa-trie\n\turl = https://github.com/rime/marisa-trie.git\n[submodule \"opencc\"]\n\tpath = deps/opencc\n\turl = https://github.com/BYVoid/OpenCC.git\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.056640625,
          "content": "tag-version-prefix=\"\"\nmessage=\"chore(release): %s :tada:\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 49.5341796875,
          "content": "<a name=\"1.12.0\"></a>\n# [1.12.0](https://github.com/rime/librime/compare/1.11.2...1.12.0) (2024-11-11)\n\n\n### Bug Fixes\n\n* **api:** delete_candidate and delete_candidate_on_current_page ([#900](https://github.com/rime/librime/issues/900)) ([2f89098](https://github.com/rime/librime/commit/2f89098))\n* **build:** limit default parallelism to 8 cores ([#932](https://github.com/rime/librime/issues/932)) ([aea8154](https://github.com/rime/librime/commit/aea8154))\n* **chord_composer:** commit raw w/ Control+Return ([0cf0e63](https://github.com/rime/librime/commit/0cf0e63))\n* **context:** index out of range in Context::Highlight ([#867](https://github.com/rime/librime/issues/867)) ([a1c8144](https://github.com/rime/librime/commit/a1c8144))\n* **deployment_tasks:** do not clean up log when not specify log dir ([#921](https://github.com/rime/librime/issues/921)) ([cdab893](https://github.com/rime/librime/commit/cdab893))\n* **deployment_tasks:** do not remove log files in use ([#913](https://github.com/rime/librime/issues/913)) ([f6dd300](https://github.com/rime/librime/commit/f6dd300)), closes [#902](https://github.com/rime/librime/issues/902)\n* **speller:** consider genuine simple cands when auto select ([eaeb845](https://github.com/rime/librime/commit/eaeb845))\n* **speller:** make simple candidates auto-selectable ([3ecadd2](https://github.com/rime/librime/commit/3ecadd2))\n* **switcher:** deactivate before setting option ([f81c971](https://github.com/rime/librime/commit/f81c971)), closes [#918](https://github.com/rime/librime/issues/918)\n* **user_dictionary:** exact match phrase in front ([c067da2](https://github.com/rime/librime/commit/c067da2))\n* show module name in log instead of their address ([#890](https://github.com/rime/librime/issues/890)) ([a735e42](https://github.com/rime/librime/commit/a735e42))\n* unable to make install in termux, because of file system redirection ([#908](https://github.com/rime/librime/issues/908)) ([3bb4fe9](https://github.com/rime/librime/commit/3bb4fe9))\n\n\n### Features\n\n* **api:** provide a flavor of api using stdbool ([b1cbc30](https://github.com/rime/librime/commit/b1cbc30))\n* **composition:** commit script, keeping selected words  ([#924](https://github.com/rime/librime/issues/924)) ([72564a7](https://github.com/rime/librime/commit/72564a7))\n* **rime_levers_api:** stdbool flavor ([6b1b41f](https://github.com/rime/librime/commit/6b1b41f))\n* **translator_commons:** allow a translator to take multiple tags ([#926](https://github.com/rime/librime/issues/926)) ([d47a812](https://github.com/rime/librime/commit/d47a812))\n\n\n### Performance Improvements\n\n* **common:** replace std unordered container with boost's ([#937](https://github.com/rime/librime/issues/937)) ([b907d7d](https://github.com/rime/librime/commit/b907d7d))\n\n\n\n<a name=\"1.11.2\"></a>\n## [1.11.2](https://github.com/rime/librime/compare/1.11.1...1.11.2) (2024-04-27)\n\n\n### Bug Fixes\n\n* caret_pos is before caret character ([f5df6cd](https://github.com/rime/librime/commit/f5df6cd)), closes [#860](https://github.com/rime/librime/issues/860)\n* **switch_translator:** skip switches with no state labels ([ce77835](https://github.com/rime/librime/commit/ce77835)), closes [#866](https://github.com/rime/librime/issues/866) [#640](https://github.com/rime/librime/issues/640)\n\n\n\n<a name=\"1.11.1\"></a>\n## [1.11.1](https://github.com/rime/librime/compare/1.11.0...1.11.1) (2024-04-25)\n\n\n### Bug Fixes\n\n* crash on select_schema .default ([ef08da3](https://github.com/rime/librime/commit/ef08da3))\n* **script_translator:** correction can cause segfault ([#863](https://github.com/rime/librime/issues/863)) ([feec253](https://github.com/rime/librime/commit/feec253))\n\n\n\n# [1.11.0](https://github.com/rime/librime/compare/1.10.0...1.11.0) (2024-03-29)\n\n\n### Bug Fixes\n\n* **build.bat:** return error if unit test failed ([24fa8ae](https://github.com/rime/librime/commit/24fa8ae8a48b2e5e629cd55090c1537f2cf9e1ab))\n* **chord_composer:** ignore repeated keys ([#841](https://github.com/rime/librime/issues/841)) ([e554510](https://github.com/rime/librime/commit/e554510bf2adeafb2383a1208750dc3b03e1427f))\n* **context:** tag selected segment after editing ([8b7f6b7](https://github.com/rime/librime/commit/8b7f6b746b4f7790ade50f60c5d4b89488bc8f9d)), closes [#746](https://github.com/rime/librime/issues/746) [#830](https://github.com/rime/librime/issues/830)\n* crash by iteration on non-existing directory ([ec2d87d](https://github.com/rime/librime/commit/ec2d87df5a23aa03cef3e46d03c490d87b1e5234))\n* **echo_translator:** return null for empty query ([ec4bdfe](https://github.com/rime/librime/commit/ec4bdfe4b9937f790417e8a3aec006d4c5d6dd85))\n* format with clang-foramt 18.1 ([2f4c8f0](https://github.com/rime/librime/commit/2f4c8f0c9c4e4153f37206e28c19d9471849e86f))\n* **glog:** configure macros ([ab5d1d2](https://github.com/rime/librime/commit/ab5d1d2f74f2141e9c7c6635fddcfd7cc579a942))\n* **glog:** no read permission on the cwd on Android ([#835](https://github.com/rime/librime/issues/835)) ([edee320](https://github.com/rime/librime/commit/edee3204f6272fec7d90a09eff1a0336b00b60c3))\n* **glog:** replace deprecated API ([20fdcc1](https://github.com/rime/librime/commit/20fdcc19e65955f6f57f33497f3098aab00af34e))\n* **glog:** someone at google is to blame for linking error ([49c7298](https://github.com/rime/librime/commit/49c7298b22024dc1b84375ba8795adaf0be63f09))\n* **install-boost.bat:** quit without running b2 ([72c67af](https://github.com/rime/librime/commit/72c67aff8042b640cfd721245b11f6ea10831045))\n* **install-boost.sh:** exit code 0 ([8b7938b](https://github.com/rime/librime/commit/8b7938b7d0b6b524f16df05671d01359c2ec93bb))\n* log rime::path by operator overloading ([060555c](https://github.com/rime/librime/commit/060555c62c0dfbad02538e0fd96eb1a03540abb3))\n* **plugins:** load plugins in relative path ([a791879](https://github.com/rime/librime/commit/a79187966ee0328c3635a5c5f6ecb4cf1e3463ee))\n* **rime_api:** deploy_schema type cast failure ([51076a8](https://github.com/rime/librime/commit/51076a8ec9ccf227d10a900c95945b50ef3a7d48))\n* **switcher:** superfluously load saved options ([7892a4f](https://github.com/rime/librime/commit/7892a4f53d1a2f12706401b07cbd366eaf87596c))\n* **test:** copy rime.dll to test dir ([872cecf](https://github.com/rime/librime/commit/872cecf7f92b6afab7618a4b01e2d8c8f7f7bd7c))\n* **test:** ctest unable to find executable ([0061e24](https://github.com/rime/librime/commit/0061e24025e467826a3912f634c06fdb62f79e25))\n\n\n### Features\n\n* **chord_composer:** finish chord on first release ([#828](https://github.com/rime/librime/issues/828)) ([102d421](https://github.com/rime/librime/commit/102d42174c2b2d793096621efa571328525c2ed3))\n* **config:** Config::Save saves data if modified ([12f460f](https://github.com/rime/librime/commit/12f460f2d5b702bf0b2798b2e5ddcda72feeaf6b))\n* **dict_compiler:** rebuild packs on demand ([#816](https://github.com/rime/librime/issues/816)) ([28d1e7e](https://github.com/rime/librime/commit/28d1e7e22f2bfc02317e0cf308937934d9cd2d6e))\n* **dictionary:** predict word ([95cb5fe](https://github.com/rime/librime/commit/95cb5fe91967e28a25cfc7d5b91b343cc9c42fe2))\n* **dictionary:** sort predictive match words ([253e0bd](https://github.com/rime/librime/commit/253e0bd2e1e4536109fb43213dc751dbeb196095))\n* **script_translator:** preedit for predicted word ([f907369](https://github.com/rime/librime/commit/f90736938cbb3be6fac118b89082fa9f74394524))\n* **script_translator:** sentence over prediction ([729aa62](https://github.com/rime/librime/commit/729aa62b0126a5b59f26204fd6789d015bcbc50d))\n* **script_translator:** word completion from 2nd place ([#848](https://github.com/rime/librime/issues/848)) ([5c7fb64](https://github.com/rime/librime/commit/5c7fb64be01f4f43f62c8d7dc4bee5d0ac34fed5))\n* **user_dictionary:** predict word ([01affef](https://github.com/rime/librime/commit/01affefaafecfc61a3e275a72f7e05260c7f81ee))\n\n\n### Reverts\n\n* Revert \"build(Makefile): fix install targets\" ([33ce245](https://github.com/rime/librime/commit/33ce2459f82e2e99ac6232a11424d883a4119894))\n\n\n\n<a name=\"1.10.0\"></a>\n# [1.10.0](https://github.com/rime/librime/compare/1.9.0...1.10.0) (2024-02-09)\n\n\n### Bug Fixes\n\n* **chord_composer:** stop at super and caps by default ([8709a7a](https://github.com/rime/librime/commit/8709a7a))\n* **path:** convert to native encoding on Windows ([#806](https://github.com/rime/librime/issues/806)) ([6546689](https://github.com/rime/librime/commit/6546689)), closes [#804](https://github.com/rime/librime/issues/804) [rime/weasel#576](https://github.com/rime/weasel/issues/576) [rime/weasel#1080](https://github.com/rime/weasel/issues/1080)\n* don't compress the token during collecting dict entries ([#762](https://github.com/rime/librime/issues/762)) ([#768](https://github.com/rime/librime/issues/768)) ([767ebad](https://github.com/rime/librime/commit/767ebad))\n\n\n### Features\n\n* **api:** highlight_candidate*, change_page ([142902d](https://github.com/rime/librime/commit/142902d)), closes [#620](https://github.com/rime/librime/issues/620)\n* **engine:** translate zero-length prediction ([8f2e8d6](https://github.com/rime/librime/commit/8f2e8d6))\n* **key_binder:** add `when: predicting` condition ([#751](https://github.com/rime/librime/issues/751)) ([3bc65c9](https://github.com/rime/librime/commit/3bc65c9))\n* **rime_api:** add RimeApi::set_input ([#771](https://github.com/rime/librime/issues/771)) ([de12d6a](https://github.com/rime/librime/commit/de12d6a)), closes [#547](https://github.com/rime/librime/issues/547)\n* add reload command for rime_api_console ([#741](https://github.com/rime/librime/issues/741)) ([9b2689b](https://github.com/rime/librime/commit/9b2689b))\n\n\n### Performance Improvements\n\n* less nest in filesystem iteration When CleanOldLogFiles::Run ([#801](https://github.com/rime/librime/issues/801)) ([9ec1711](https://github.com/rime/librime/commit/9ec1711))\n\n\n### BREAKING CHANGES\n\n* **path:** Most `string` filenames in APIs are changed to `path`;\n`installation.yaml` should be UTF-8 encoded.\n\nPreviouly on Windows, the file can be written in local encoding to\nenable paths with non-ASCII characters. It should be updated to UTF-8\nafter this change.\n\nDetails of the code refactor\n\nWrap `std::filesystem::path` in a thin wrapper class `rime::path` which calls `std::filesystem::u8path` in the constructor on Windows.\n\nOperator `/=` and `/` are also overloaded to convert the right operand from UTF-8 string to native path.\n\nFollow these rules to apply correct conversion between `string` and `rime::path`:\n\n- construct `rime::path` with UTF-8 encoded string;\n- get native string by `path::u8string`;\n- to extract UTF-8 string from `path`, for example to find schema ID from file name, call `path::u8string`;\n- avoid implicit conversion from string, which results in `std::filesystem::path` without performing UTF-8 to native conversion;\n- explicitly construct `rime::path` from `std::filesystem::path` before append operation, to ensure the overloaded operator with string conversion is used.\n\n\n\n<a name=\"1.9.0\"></a>\n# [1.9.0](https://github.com/rime/librime/compare/1.8.5...1.9.0) (2023-09-16)\n\n\n### Bug Fixes\n\n* avoid invalid page_size ([#679](https://github.com/rime/librime/issues/679)) ([53ce306](https://github.com/rime/librime/commit/53ce306))\n\n\n### Features\n\n* add `append_comment` option to `reverse_lookup_filter` ([#699](https://github.com/rime/librime/issues/699)) ([f079c3c](https://github.com/rime/librime/commit/f079c3c))\n* **dict:** shorten the data struct used by Vocabulary ([210ab6c](https://github.com/rime/librime/commit/210ab6c))\n* **switches:** abbreviate state labels ([45cd64b](https://github.com/rime/librime/commit/45cd64b))\n\n\n### Performance Improvements\n\n* release memory of temporary fields ([#690](https://github.com/rime/librime/issues/690)) ([43ae3a9](https://github.com/rime/librime/commit/43ae3a9))\n* replace rbtree with vector of pair ([#684](https://github.com/rime/librime/issues/684)) ([c515afb](https://github.com/rime/librime/commit/c515afb))\n* **dict:** improve dict complile performance ([#663](https://github.com/rime/librime/issues/663)) ([bd3c7c7](https://github.com/rime/librime/commit/bd3c7c7))\n\n\n\n<a name=\"1.8.5\"></a>\n## [1.8.5](https://github.com/rime/librime/compare/1.8.4...1.8.5) (2023-02-05)\n\n\n### Bug Fixes\n\n* **selector:** do not match fallback modifier ([21adf97](https://github.com/rime/librime/commit/21adf97)), closes [#609](https://github.com/rime/librime/issues/609)\n\n\n\n<a name=\"1.8.4\"></a>\n## [1.8.4](https://github.com/rime/librime/compare/1.8.3...1.8.4) (2023-01-30)\n\n\n\n<a name=\"1.8.3\"></a>\n## [1.8.3](https://github.com/rime/librime/compare/1.8.2...1.8.3) (2023-01-25)\n\n\n### Bug Fixes\n\n* skip key combos with super modifier ([80bef8f](https://github.com/rime/librime/commit/80bef8f)), closes [#458](https://github.com/rime/librime/issues/458)\n\n\n\n<a name=\"1.8.2\"></a>\n## [1.8.2](https://github.com/rime/librime/compare/1.8.1...1.8.2) (2023-01-25)\n\n\n\n<a name=\"1.8.1\"></a>\n## [1.8.1](https://github.com/rime/librime/compare/1.8.0...1.8.1) (2023-01-25)\n\n\n\n<a name=\"1.8.0\"></a>\n# [1.8.0](https://github.com/rime/librime/compare/1.7.3...1.8.0) (2023-01-25)\n\n\n### Bug Fixes\n\n* **algo, dict:** add an extra set of parenthesis to std::min ... ([f66d330](https://github.com/rime/librime/commit/f66d330))\n* **charset_filter:** Update `is_extended_cjk` to compatible with Unicode 15 ([946e852](https://github.com/rime/librime/commit/946e852))\n* **chord_composer:** first key missing from raw input ([33d85ad](https://github.com/rime/librime/commit/33d85ad))\n* **chord_composer:** invisible placeholder char prepended to output ([0ec7a2d](https://github.com/rime/librime/commit/0ec7a2d))\n* **ci:** download and extract boost ([200e3ec](https://github.com/rime/librime/commit/200e3ec))\n* **ci:** install Rime plugins' dependencies ([7677dae](https://github.com/rime/librime/commit/7677dae))\n* **ci:** no hardcoded boost version in ci scripts ([3ae72a3](https://github.com/rime/librime/commit/3ae72a3))\n* **dict_compiler:** shrink .reverse.bin file to fit after build ([2af37e0](https://github.com/rime/librime/commit/2af37e0))\n* **reverse_lookup_dictionary:** writing data to overflow buffer ([46e3066](https://github.com/rime/librime/commit/46e3066)), closes [#456](https://github.com/rime/librime/issues/456)\n* **setup:** avoid glog log macros conflict with macros of Windows ([24e1612](https://github.com/rime/librime/commit/24e1612))\n* fix missing control paths issue ([87e4c73](https://github.com/rime/librime/commit/87e4c73))\n* qualify std::exp after including <cmath> ([bc589fd](https://github.com/rime/librime/commit/bc589fd)), closes [#462](https://github.com/rime/librime/issues/462) [#476](https://github.com/rime/librime/issues/476)\n* **ci:** update ci script for windows ([0358a21](https://github.com/rime/librime/commit/0358a21))\n* **dictionary:** had unsorted chunks after the previous chunk ended ([dd6af3d](https://github.com/rime/librime/commit/dd6af3d)), closes [#507](https://github.com/rime/librime/issues/507)\n* **editor:** `back_syllable` should reopen selected words ([a3fdad8](https://github.com/rime/librime/commit/a3fdad8))\n* replace bintry mirror with jfrog ([a1203fc](https://github.com/rime/librime/commit/a1203fc))\n\n\n### Features\n\n* **api:** get_state_label returns the state label for UI display ([8f9e9c7](https://github.com/rime/librime/commit/8f9e9c7)), closes [#447](https://github.com/rime/librime/issues/447)\n* **ci:** add GitHub action ci support ([56e9d2a](https://github.com/rime/librime/commit/56e9d2a))\n* **ci:** add pull request ci ([94bb5d5](https://github.com/rime/librime/commit/94bb5d5))\n* **ci:** add tag release ci ([aafe5a3](https://github.com/rime/librime/commit/aafe5a3))\n* **context:** allow composing with zero input ([8e2826a](https://github.com/rime/librime/commit/8e2826a))\n* **key_binder:** single select a radio group option ([5e8aca2](https://github.com/rime/librime/commit/5e8aca2))\n* **key_binder:** toggle the switch defined at index `toggle: '@n'` ([6ca7803](https://github.com/rime/librime/commit/6ca7803)), closes [#554](https://github.com/rime/librime/issues/554)\n* **navigator,selector:** vertical navigation ([d79f6b3](https://github.com/rime/librime/commit/d79f6b3)), closes [#543](https://github.com/rime/librime/issues/543)\n* **plugins:** support plugin specs in slug@branch format ([7d11455](https://github.com/rime/librime/commit/7d11455))\n* **selector:** handle repeated key until release ([8d93e9f](https://github.com/rime/librime/commit/8d93e9f))\n* add windows ci job ([14ee47a](https://github.com/rime/librime/commit/14ee47a))\n* delete selected candidate ([#557](https://github.com/rime/librime/issues/557)) ([43023e1](https://github.com/rime/librime/commit/43023e1))\n* half/full-shape labels for more characters ([f2c7e40](https://github.com/rime/librime/commit/f2c7e40)), closes [#594](https://github.com/rime/librime/issues/594)\n* **simplifier:** can be configured to return empty comment ([#541](https://github.com/rime/librime/issues/541)) ([2368034](https://github.com/rime/librime/commit/2368034))\n\n\n\n<a name=\"1.7.3\"></a>\n## [1.7.3](https://github.com/rime/librime/compare/1.7.2...1.7.3) (2021-02-11)\n\n\n### Bug Fixes\n\n* **memory:** possibly dereferencing null pointer ([1c2644d](https://github.com/rime/librime/commit/1c2644d)), closes [#441](https://github.com/rime/librime/issues/441)\n* **plugins:** buffer overflow in plugin lotem/librime-octagram ([b0b435b](https://github.com/rime/librime/commit/b0b435b)), closes [rime/squirrel#512](https://github.com/rime/squirrel/issues/512)\n\n\n\n<a name=\"1.7.2\"></a>\n## [1.7.2](https://github.com/rime/librime/compare/1.7.1...1.7.2) (2021-02-07)\n\n\n### Bug Fixes\n\n* **chord_composer:** should clear raw input after committing text ([79b34ab](https://github.com/rime/librime/commit/79b34ab))\n\n\n\n<a name=\"1.7.1\"></a>\n## [1.7.1](https://github.com/rime/librime/compare/1.7.0...1.7.1) (2021-02-06)\n\n\n### Bug Fixes\n\n* **chord_composer:** press Return key to commit raw key sequence ([2b25861](https://github.com/rime/librime/commit/2b25861))\n\n\n\n<a name=\"1.7.0\"></a>\n# [1.7.0](https://github.com/rime/librime/compare/1.6.1...1.7.0) (2021-01-17)\n\n\n### Bug Fixes\n\n* **chord_composer:** more safely handle the placeholder ZWSP ([025d9fb](https://github.com/rime/librime/commit/025d9fb))\n* **cmake:** use full paths defined by GNUInstallDirs ([bb8c263](https://github.com/rime/librime/commit/bb8c263)), closes [#424](https://github.com/rime/librime/issues/424)\n* **opencc:** update submodule to fix [#425](https://github.com/rime/librime/issues/425) ([3fa1571](https://github.com/rime/librime/commit/3fa1571))\n* **script_translator:** always_show_comments also applies to phrases ([440a97c](https://github.com/rime/librime/commit/440a97c)), closes [#272](https://github.com/rime/librime/issues/272) [#419](https://github.com/rime/librime/issues/419)\n* **table_translator:** index out of bound access in string ([ff7acdc](https://github.com/rime/librime/commit/ff7acdc))\n\n\n### Features\n\n* **chareset_filter:** add CJK Compatibility Ideographs in is_extended_cjk() ([3cb1128](https://github.com/rime/librime/commit/3cb1128)), closes [#305](https://github.com/rime/librime/issues/305)\n* **setup:** find and load external RIME plugins as shared libs [#431](https://github.com/rime/librime/issues/431) ([b2abd09](https://github.com/rime/librime/commit/b2abd09))\n\n\n\n<a name=\"1.6.1\"></a>\n## [1.6.1](https://github.com/rime/librime/compare/1.6.0...1.6.1) (2020-09-21)\n\n\n### Bug Fixes\n\n* **rime_api.cc:** dangling pointer returned from RimeGetSharedDataDir ([78abaa8](https://github.com/rime/librime/commit/78abaa8))\n\n\n\n<a name=\"1.6.0\"></a>\n# [1.6.0](https://github.com/rime/librime/compare/1.5.3...1.6.0) (2020-09-20)\n\n\n### Bug Fixes\n\n* **ascii_composer:** do not consume Shift key release ([debc2c0](https://github.com/rime/librime/commit/debc2c0))\n* **ascii_composer:** first read ascii_composer/good_old_caps_lock from schema config ([3fc56c4](https://github.com/rime/librime/commit/3fc56c4))\n* **chord_composer:** commit raw input with uppercase letters ([cc983d5](https://github.com/rime/librime/commit/cc983d5))\n* **CMakeLists.txt:** ensure paths in pkgconfig file are absolute ([0e96e51](https://github.com/rime/librime/commit/0e96e51))\n* **CMakeLists.txt:** would not use signals v1 due to a typo ([6662a28](https://github.com/rime/librime/commit/6662a28)), closes [#225](https://github.com/rime/librime/issues/225)\n* **custom_settings:** accept \"*.schema\" as config id ([604da0b](https://github.com/rime/librime/commit/604da0b))\n* **dict:** issues with user db recovery ([0f3d0df](https://github.com/rime/librime/commit/0f3d0df))\n* **dict_compiler:** build prism with loaded syllabary when not rebuilding primary table ([93fe827](https://github.com/rime/librime/commit/93fe827))\n* **plugins/CMakeLists.txt:** avoid rime_library linking to itself via rime_plugins_deps ([fe744db](https://github.com/rime/librime/commit/fe744db))\n* **rime_api.cc:** check struct has member of non-pointer type ([090dfa4](https://github.com/rime/librime/commit/090dfa4))\n* **rime_api.cc:** using unchecked fields introduced an ABI breakage ([62bbead](https://github.com/rime/librime/commit/62bbead)), closes [/github.com/rime/librime/pull/328#pullrequestreview-335125464](https://github.com//github.com/rime/librime/pull/328/issues/pullrequestreview-335125464)\n* **rime_test:** set data directories to working directory using rime::SetupDeployer API ([7c08a90](https://github.com/rime/librime/commit/7c08a90))\n* **simplifier:** opencc::DictEntry::Values() type change in opencc 1.1.0 ([beae5b1](https://github.com/rime/librime/commit/beae5b1)), closes [#367](https://github.com/rime/librime/issues/367)\n* **user_db:** pointer cast error caused by multiple inheritance ([2ed780b](https://github.com/rime/librime/commit/2ed780b))\n* use official emoji 12.0 data ([#304](https://github.com/rime/librime/issues/304)) ([75a60dc](https://github.com/rime/librime/commit/75a60dc))\n\n\n### Features\n\n* **api:** implement capnproto api ([873f648](https://github.com/rime/librime/commit/873f648))\n* **api:** include candidate labels in proto message ([aae7a0c](https://github.com/rime/librime/commit/aae7a0c))\n* **charset_filter:** support charset options with emoji ([#293](https://github.com/rime/librime/issues/293)) ([943c95b](https://github.com/rime/librime/commit/943c95b))\n* **charset_filter:** support CJK Unified Ideographs Extension G ([#393](https://github.com/rime/librime/issues/393)) ([0a1573d](https://github.com/rime/librime/commit/0a1573d))\n* **chord_composer:** support chording with Shift keys ([94cf479](https://github.com/rime/librime/commit/94cf479))\n* **chord_composer:** use Control, Alt, Shift to input chord ([f3a2ad0](https://github.com/rime/librime/commit/f3a2ad0))\n* **dictionary:** packs extends the dictionary with extra binary table files ([930074c](https://github.com/rime/librime/commit/930074c))\n* **key_binder:** bind key to a key sequence ([3b5dbf6](https://github.com/rime/librime/commit/3b5dbf6)), closes [#301](https://github.com/rime/librime/issues/301)\n* **logging:** setup min log level, log dir and set file mode to log files ([90839b0](https://github.com/rime/librime/commit/90839b0))\n* **selector:** support 4 combinations of horizontal/vertical text orientation and stacked/linear candidate list layout ([c498f71](https://github.com/rime/librime/commit/c498f71))\n* **selector:** support vertical UI ([dbb35c6](https://github.com/rime/librime/commit/dbb35c6))\n* **switcher:** enable schema in cases where conditions are met ([217c72b](https://github.com/rime/librime/commit/217c72b))\n* **tools/rime_proto_console:** demo for proto api ([d88ef9f](https://github.com/rime/librime/commit/d88ef9f))\n\n\n### Performance Improvements\n\n* **poet:** optimize for performance in making sentences (~40% faster) ([0853465](https://github.com/rime/librime/commit/0853465))\n\n\n\n<a name=\"1.5.3\"></a>\n## [1.5.3](https://github.com/rime/librime/compare/1.5.2...1.5.3) (2019-06-22)\n\n\n### Bug Fixes\n\n* **cmake, xcode.mk:** find optional dependency icu, while building xcode/release-with-icu target  [skip appveyor] ([17a80f8](https://github.com/rime/librime/commit/17a80f8))\n* **single_char_filter:** broken in librime 1.5.2 ([6948a62](https://github.com/rime/librime/commit/6948a62))\n\n\n### Features\n\n* **appveyor:** build variant \"rime-with-plugins\" for tagged commits  [skip travis] ([eef8c30](https://github.com/rime/librime/commit/eef8c30))\n* **travis-ci:** build variant \"rime-with-plugins\" for tagged commits  [skip appveyor] ([cf11c27](https://github.com/rime/librime/commit/cf11c27))\n* **travis-ci:** deploy artifacts for macOS to GitHub releases  [skip appveyor] ([3f03784](https://github.com/rime/librime/commit/3f03784))\n\n\n\n<a name=\"1.5.2\"></a>\n## [1.5.2](https://github.com/rime/librime/compare/1.5.1...1.5.2) (2019-06-17)\n\n\n### Bug Fixes\n\n* **user_dictionary, contextual_translation:** fix user phrase quality; order contextual suggestions by type ([69d5c32](https://github.com/rime/librime/commit/69d5c32))\n\n\n\n<a name=\"1.5.1\"></a>\n## [1.5.1](https://github.com/rime/librime/compare/1.5.0...1.5.1) (2019-06-16)\n\n\n### Bug Fixes\n\n* **user_dictionary:** make user phrases comparable in weight to system words ([982f69d](https://github.com/rime/librime/commit/982f69d))\n\n\n\n<a name=\"1.5.0\"></a>\n# [1.5.0](https://github.com/rime/librime/compare/1.4.0...1.5.0) (2019-06-06)\n\n\n### Bug Fixes\n\n* **ci:** update build script ([84a1a1b](https://github.com/rime/librime/commit/84a1a1b))\n* **ci:** use submodules in AppVeyor CI build script ([7b515b4](https://github.com/rime/librime/commit/7b515b4))\n* **cmake:** libboost Windows XP compatibility fix ([#270](https://github.com/rime/librime/issues/270)) ([fecfe39](https://github.com/rime/librime/commit/fecfe39)), closes [rime/weasel#337](https://github.com/rime/weasel/issues/337)\n* **CMakeLists.txt:** install header files in all platforms ([821d563](https://github.com/rime/librime/commit/821d563))\n* **CMakeLists.txt:** set \"-std=c++11\" in CMAKE_CXX_FLAGS ([5d8a836](https://github.com/rime/librime/commit/5d8a836))\n* **config/plugins.h:** memory leak caused by non-virtual destructor ([316a659](https://github.com/rime/librime/commit/316a659)), closes [#259](https://github.com/rime/librime/issues/259)\n* **deploy:** treat schema dependencies as optional; do not report errors if missing ([ff3d5e9](https://github.com/rime/librime/commit/ff3d5e9))\n* **engine:** schema doesn't match the one used by switcher ([e41bb63](https://github.com/rime/librime/commit/e41bb63)), closes [#269](https://github.com/rime/librime/issues/269)\n* **rime_levers_api.h:** customize_bool() misused `bool` type ([42bacc5](https://github.com/rime/librime/commit/42bacc5))\n* **syllabifier:** enable_completion not working ([2714131](https://github.com/rime/librime/commit/2714131)), closes [#343](https://github.com/rime/librime/issues/343)\n* **table_translator:** null pointer exception when dict entries are filtered ([77438a9](https://github.com/rime/librime/commit/77438a9))\n* **test:** compile error in unit test ([7076d9e](https://github.com/rime/librime/commit/7076d9e))\n* **travis-install.sh:** working directory ([97220ce](https://github.com/rime/librime/commit/97220ce))\n\n\n### Features\n\n* **appveyor:** install RIME_PLUGINS  [skip travis] ([c7ce66f](https://github.com/rime/librime/commit/c7ce66f))\n* **CMakeList.txt:** add plugin build support ([#257](https://github.com/rime/librime/issues/257)) ([dfa341b](https://github.com/rime/librime/commit/dfa341b))\n* **contextual_translation:** weight and re-order phrases by context ([2390da3](https://github.com/rime/librime/commit/2390da3))\n* **dict:** specify vocabulary db name in dict settings ([dcdc301](https://github.com/rime/librime/commit/dcdc301))\n* **grammar:** compare homophones/homographs in sentence ([9248a6b](https://github.com/rime/librime/commit/9248a6b))\n* **install-plugins.sh:** git-clone or update plugins ([70483b4](https://github.com/rime/librime/commit/70483b4))\n* **poet:** find best sentence candidates ([b3f4005](https://github.com/rime/librime/commit/b3f4005))\n* **rime_api:** get candidate list from index ([c587900](https://github.com/rime/librime/commit/c587900))\n* **translator:** contextual suggestions in partially selected sentence ([12a7501](https://github.com/rime/librime/commit/12a7501))\n* **translator:** look at preceding text when making sentence ([6ae34de](https://github.com/rime/librime/commit/6ae34de))\n* **travis-ci:** install plugins specified in envvar RIME_PLUGINS ([c857639](https://github.com/rime/librime/commit/c857639))\n\n\n### Performance Improvements\n\n* **dictionary:** refactor DictEntryIterator and do partial sort ([0258c7f](https://github.com/rime/librime/commit/0258c7f))\n\n\n### BREAKING CHANGES\n\n* **rime_levers_api.h:** in signature of C API function `customize_bool()`,\nchange type `bool` to `Bool` (alias of `int`).\n\nImpact: the changed function is not in use by any first party code,\nknown to be in use by osfans/trime.\n\n\n\n<a name=\"1.4.0\"></a>\n# [1.4.0](https://github.com/rime/librime/compare/1.3.2...1.4.0) (2019-01-16)\n\n\n### Bug Fixes\n\n* **config:** user_config should not fall back to shared data ([68c8a34](https://github.com/rime/librime/commit/68c8a34)), closes [#271](https://github.com/rime/librime/issues/271)\n* **SymlinkingPrebuiltDictionaries:** remove dangling symlinks ([5ad333d](https://github.com/rime/librime/commit/5ad333d)), closes [#241](https://github.com/rime/librime/issues/241)\n* **SymlinkingPrebuiltDictionaries:** remove dangling symlinks ([f8e4ebf](https://github.com/rime/librime/commit/f8e4ebf)), closes [#241](https://github.com/rime/librime/issues/241)\n\n\n### Features\n\n* spelling correction ([#228](https://github.com/rime/librime/issues/228)) ([ad3638a](https://github.com/rime/librime/commit/ad3638a))\n* **Dockerfile:** for build ([#246](https://github.com/rime/librime/issues/246)) ([cafd0d5](https://github.com/rime/librime/commit/cafd0d5))\n\n\n\n## [1.3.2](https://github.com/rime/librime/compare/1.3.1...1.3.2) (2018-11-12)\n\n\n### Bug Fixes\n\n* **CMakeLists.txt:** do not link binaries when building static library ([99573e3](https://github.com/rime/librime/commit/99573e3))\n* **CMakeLists.txt:** do not require boost::signals, which will be deprecated in Boost 1.69 ([8a9ef3b](https://github.com/rime/librime/commit/8a9ef3b)), closes [#225](https://github.com/rime/librime/issues/225)\n* **config_compiler:** ambiguous operator overload with cmake option ENABLE_LOGGING=OFF ([b86b647](https://github.com/rime/librime/commit/b86b647)), closes [#211](https://github.com/rime/librime/issues/211)\n* **config_compiler:** support creating list in-place by __patch and __merge ([0784eb0](https://github.com/rime/librime/commit/0784eb0))\n* **table_translator:** enable encoding uniquified commit history ([74e31bc](https://github.com/rime/librime/commit/74e31bc))\n\n\n### Features\n\n* **language:** shared user dictionary per language (Closes [#184](https://github.com/rime/librime/issues/184)) ([#214](https://github.com/rime/librime/issues/214)) ([9f774e7](https://github.com/rime/librime/commit/9f774e7))\n* always_show_comments option ([#220](https://github.com/rime/librime/issues/220)) ([19cea07](https://github.com/rime/librime/commit/19cea07))\n\n\n\n<a name=\"1.3.1\"></a>\n## [1.3.1](https://github.com/rime/librime/compare/1.3.0...1.3.1) (2018-04-01)\n\n\n### Bug Fixes\n\n* **config_file_update:** clean up deprecated user copy ([#193](https://github.com/rime/librime/issues/193)) ([8d8d2e6](https://github.com/rime/librime/commit/8d8d2e6))\n* **thirdparty/src/leveldb:** do not link to snappy library ([6f6056a](https://github.com/rime/librime/commit/6f6056a))\n\n\n\n<a name=\"1.3.0\"></a>\n# 1.3.0 (2018-03-09)\n\n\n### Bug Fixes\n\n* **CMakeLists.txt, build.bat:** install header files (public API) ([06c9e86](https://github.com/rime/librime/commit/06c9e86))\n* **config_compiler:** \"/\" mistaken as path separator in merged map key ([#192](https://github.com/rime/librime/issues/192)) ([831ffba](https://github.com/rime/librime/commit/831ffba)), closes [#190](https://github.com/rime/librime/issues/190)\n* **ConfigFileUpdate:** no need to create user build if shared build is up-to-date ([cafd5c4](https://github.com/rime/librime/commit/cafd5c4))\n* **SchemaUpdate:** read compiled schema from shared build if there is no user build ([45a04dd](https://github.com/rime/librime/commit/45a04dd))\n* **simplifier:** fix typo ([9e1114e](https://github.com/rime/librime/commit/9e1114e)), closes [#183](https://github.com/rime/librime/issues/183)\n* **user_db:** unwanted implicit instantiation of UserDbFormat template ([3cbc9cb](https://github.com/rime/librime/commit/3cbc9cb)), closes [#188](https://github.com/rime/librime/issues/188)\n\n\n### Chores\n\n* **release tag:** deprecating tag name prefix 'rime-' in favor of semver 'X.Y.Z'\n\n\n### BREAKING CHANGES\n\n* **release tag:** After 1.3.0 release, we'll no longer be creating tags in the format 'rime-X.Y.Z'. Downstream packagers please change automated scripts accordingly.\n\n\n\n<a name=\"1.2.10\"></a>\n## 1.2.10 (2018-02-21)\n\n\n### Bug Fixes\n\n* **config_compiler:** linking failure on blocking root node of a dependency resource ([ecf3397](https://github.com/rime/librime/commit/ecf3397))\n* table_translator not making sentence if table entry is hidden by charset filter. ([77eb12e](https://github.com/rime/librime/commit/77eb12e))\n* **appveyor.install.bat:** switch to a more stable download server for libboost ([bcc4d10](https://github.com/rime/librime/commit/bcc4d10))\n* **appveyor.yml:** archive header files ([c8b1e67](https://github.com/rime/librime/commit/c8b1e67))\n* **ascii_composer:** support key binding Shift+space in ascii mode ([7077389](https://github.com/rime/librime/commit/7077389))\n* **build.bat:** fix build errors with VS2015 build tools ([ec940c6](https://github.com/rime/librime/commit/ec940c6))\n* **calculus, recognizer:** memory leak due to unchecked regex error ([19ddc1e](https://github.com/rime/librime/commit/19ddc1e)), closes [#171](https://github.com/rime/librime/issues/171)\n* **chord_composer:** allow editor to define BackSpace key behavior ([7f41f65](https://github.com/rime/librime/commit/7f41f65))\n* **chord_composer:** letters with modifier keys should not be committed by a following enter key ([aab5eb8](https://github.com/rime/librime/commit/aab5eb8))\n* **ci:** call cmake under /usr/local with sudo by passing $PATH environment variable ([a0e6d2f](https://github.com/rime/librime/commit/a0e6d2f))\n* **cmake:** fix build break for mingw ([939893c](https://github.com/rime/librime/commit/939893c))\n* **config:** auto save modified config data; fixes [#144](https://github.com/rime/librime/issues/144) ([2736f4b](https://github.com/rime/librime/commit/2736f4b))\n* **config:** treat \"@\" as map key rather than list index ([a1df9c5](https://github.com/rime/librime/commit/a1df9c5))\n* **config_compiler:** duplicate PendingChild dependencies happen from multiple commands on the same node ([25c28f8](https://github.com/rime/librime/commit/25c28f8))\n* **config_compiler:** enforce dependency priorities ([69a6f3e](https://github.com/rime/librime/commit/69a6f3e))\n* **config_compiler:** null value should not overwrite a normal key in a merged tree ([4ecae44](https://github.com/rime/librime/commit/4ecae44))\n* **config_compiler:** template operator overload had compile error with NDK ([71817a0](https://github.com/rime/librime/commit/71817a0))\n* **config/build_info_plugin:** referenced but unavailable resources should also be recorded ([cd46f7a](https://github.com/rime/librime/commit/cd46f7a))\n* **ConfigFileUpdate:** should succeed if shared copy does not exist ([8a3e25c](https://github.com/rime/librime/commit/8a3e25c))\n* **custom_settings:** fall back to $shared_data_dir/build when loading config ([caf8ebb](https://github.com/rime/librime/commit/caf8ebb))\n* **custom_settings:** load built settings from $user_data_dir/build directory ([463dc09](https://github.com/rime/librime/commit/463dc09))\n* **deployment_tasks:** symbols.yaml is no longer a build target ([f920e4f](https://github.com/rime/librime/commit/f920e4f))\n* **dict_compiler:** prism should load compiled schema ([c2fd0cf](https://github.com/rime/librime/commit/c2fd0cf)), closes [#176](https://github.com/rime/librime/issues/176)\n* **key_event:** KeySequence::repr() prefer unescaped punctuation characters ([aa43e5e](https://github.com/rime/librime/commit/aa43e5e))\n* **levers:** update deployment tasks for copy-free resource resolution ([1f86413](https://github.com/rime/librime/commit/1f86413))\n* **Makefile:** make install-debug; do return error code on mac ([1177142](https://github.com/rime/librime/commit/1177142))\n* **rime_api:** use user_config_open() to access user.yaml ([4e4a491](https://github.com/rime/librime/commit/4e4a491))\n* **rime_console:** not showing switcher's context ([632cf4b](https://github.com/rime/librime/commit/632cf4b))\n* **schema:** create a \"schema\" component that opens Config by schema_id ([555f990](https://github.com/rime/librime/commit/555f990))\n* **simplifier:** fix crash if no opencc file ([091cb9d](https://github.com/rime/librime/commit/091cb9d))\n* **simplifier:** tips option for show_in_comment simplifier ([e7bb757](https://github.com/rime/librime/commit/e7bb757))\n* **uniquifier:** half of the duplicate candidates remain after dedup [Closes [#114](https://github.com/rime/librime/issues/114)] ([2ab76bc](https://github.com/rime/librime/commit/2ab76bc))\n\n\n### Features\n\n* **build.bat:** customize build settings via environment variables ([#178](https://github.com/rime/librime/issues/178)) ([1678b75](https://github.com/rime/librime/commit/1678b75))\n* **chord_composer:** accept escaped chording keys ([79a32b2](https://github.com/rime/librime/commit/79a32b2))\n* **chord_composer:** support chording with function keys ([48424d3](https://github.com/rime/librime/commit/48424d3))\n* **config:** add config compiler plugin that includes default:/menu into schema ([b51dda8](https://github.com/rime/librime/commit/b51dda8))\n* **config:** best effort resolution for circurlar dependencies ([2e52d54](https://github.com/rime/librime/commit/2e52d54))\n* **config:** build config files if source files changed ([0d79712](https://github.com/rime/librime/commit/0d79712))\n* **config:** config compiler plugins that port legacy features to the new YAML syntax ([a7d253e](https://github.com/rime/librime/commit/a7d253e))\n* **config:** config_builder saves output to $rime_user_dir/build/ ([e596155](https://github.com/rime/librime/commit/e596155))\n* **config:** references to optional config resources, ending with \"?\" ([14ec858](https://github.com/rime/librime/commit/14ec858))\n* **config:** save __build_info in compiled config ([45a7337](https://github.com/rime/librime/commit/45a7337))\n* **config:** separate out config_builder and user_config components ([9e9493b](https://github.com/rime/librime/commit/9e9493b))\n* **config:** support append and merge syntax ([04dcf42](https://github.com/rime/librime/commit/04dcf42))\n* **customizer:** disable saving patched config files ([88f5a0c](https://github.com/rime/librime/commit/88f5a0c))\n* **detect_modifications:** quick test based on last write time of files ([285fbcc](https://github.com/rime/librime/commit/285fbcc))\n* **dict:** no conditional compilation on arm ([85b945f](https://github.com/rime/librime/commit/85b945f))\n* **dict:** relocate binary files to $user_data_dir/build ([bc66a47](https://github.com/rime/librime/commit/bc66a47))\n* **dict:** use resource resolver to find dictionary files ([8ea08b3](https://github.com/rime/librime/commit/8ea08b3))\n* add property notifier ([fa7b5a5](https://github.com/rime/librime/commit/fa7b5a5))\n* **resource_resolver:** add class and unit test ([03ee8b4](https://github.com/rime/librime/commit/03ee8b4))\n* **resource_resolver:** fallback root path ([02151da](https://github.com/rime/librime/commit/02151da))\n* **translator:** add history_translator ([#115](https://github.com/rime/librime/issues/115)) ([ae13354](https://github.com/rime/librime/commit/ae13354))\n\n\n\n<a name=\"1.2.9\"></a>\n## 1.2.9 (2014-12-14)\n\n* **rime_api.h:** add `RIME_MODULE_LIST`, `RIME_REGISTER_MODULE_GROUP`.\n* **Makefile:** add make targets `thirdparty/*` to build individual libraries.\n* **legacy/src/legacy_module.cc:** plugin module `rime-legacy` for GPL code,\n  providing component `legacy_userdb` for user dictionary upgrade.\n* **src/setup.cc:** define module groups `\"default\"` and `\"deployer\"`, to avoid\n\tnaming a list of built-bin modules in `RimeTraits::modules`.\n* **test/table_test.cc:** fix random segment faults when run shuffled.\n* **thirdparty/src/leveldb:** new dependency LevelDB, replacing Kyoto Cabinet.\n* **dict/level_db:** userdb implementation based on LevelDB, replacing treeDb.\n* **dict/tree_db:** moved to `legacy/src/`.\n* **dict/user_db:** refactored and modularized to ease adding implementations.\n* **gear/cjk_minifier:** support CJK Extension E.\n* **gear/memory:** save cached phrases as soon as the next composition begins.\n* **gear/recognizer:** match space iff set `recognizer/use_space: true`.\n* **gear/simplifier:** catch and log OpenCC exceptions when loading.\n* **gear/single_char_filter:** bring single character candidates to the front.\n* **gear/simplifier:** adapt to OpenCC 1.0 API.\n* **thirdparty/src/opencc:** update OpenCC to v1.0.2 (incompatible with v0.4).\n* **lever/deployment_tasks:** update and rename task `user_dict_upgrade`.\n\n\n\n<a name=\"1.2\"></a>\n## 1.2 (2014-07-15)\n\n* **rime_api:** add API functions to access complex structures in config;\n  add API to get the raw input and cursor position, or to select a candidate.\n* **config:** support references to list elements in key paths.\n  eg. `schema_list/@0/schema` is the id of the first schema in schema list.\n* **switcher:** enable folding IME options in the switcher menu.\n* **dict_compiler:** also detect changes in essay when updating a dictionary;\n  support updating prism without the source file of the dictionary.\n* **preset_vocabulary:** load `essay.txt` instead of `essay.kct`.\n* **reverse_lookup_dictionary:** adopt a new file format with 50% space saving.\n* **table:** add support for a new binary format with 20% space saving;\n  fix alignment on ARM.\n* **ascii_composer:** do not toggle IME states when long pressing `Shift` key;\n  support discarding unfinished input when switching to ASCII mode.\n* **affix_segmentor:** fix issues with selecting a partial-match candidate.\n* **chord_composer:** commit raw input composed with original key strokes.\n* **cjk_minifier:** a filter to hide characters in CJK extension set, works\n  with `script_translator`.\n* **navigator:** do not use `BackSpace` to revert selecting a candidate but to\n  edit the input after moving the cursor left or right.\n* **punctuator:** support `ascii_punct` option for switching between Chinese and\n  Western (ASCII) punctuations.\n* **speller:** auto-select candidates by pattern matching against the code;\n  fix issues to cooperate with punctuator.\n* **CMakeLists.txt:** add options `ENABLE_LOGGING` and `BOOST_USE_CXX11`;\n  introduce a new dependency: `libmarisa`.\n* **cmake/FindYamlCpp.cmake:** check the availability of the new (v0.5) API.\n* **sample:** the directory containing a sample plug-in module.\n* **tools/rime_patch.cc:** a command line tool to create patches.\n* **thirdparty:** include source code of third-party libraries to ease\n  building librime on Windows and Mac.\n\n\n\n<a name=\"1.1\"></a>\n## 1.1 (2013-12-26)\n\n* **new build dependency:** compiler with C++11 support.\n  tested with GCC 4.8.2, Apple LLVM version 5.0, MSVC 12 (2013).\n* **encoder:** disable warnings for phrase encode failures in log output;\n  limit the number of results in encoding a phrase with multiple solutions.\n* **punctuator:** fixed a bug in matching nested \"pairs of 'symbols'\".\n* **speller:** better support for auto-committing, allowing users of table\n  based input schema to omit explicitly selecting candidates in many cases.\n* **schema_list_translator:** option for static schema list order.\n* **table_translator:** fixed the range of CJK-D in charset filter.\n\n\n\n<a name=\"1.0\"></a>\n## 1.0 (2013-11-10)\n\n* **rime_api:** version 1.0 breaks ABI compatiblility.\n\n  the minimum changes in code required to migrate from rime 0.9 api is to\n  initialize `RimeTraits` with either `RIME_STRUCT` or `RIME_STRUCT_INIT` macro.\n\n  while source code compatibility is largely maintained with the exception\n  of the aforementioned `RimeTraits` structure, rime 1.0 introduces a version\n  controlled `RimeApi` structure which provides all the api functions.\n* **module:** support adding modules; modularize `gears` and `levers`.\n* **ticket:** used to instantiate components and to associate the instance with\n  a name space in the configuration.\n* **encoder:** encode new phrases for `table_translator` and `script_translator`\n  using different rules.\n* **affix_segmentor:** strip optional prefix and suffix from a code segment.\n* **reverse_lookup_filter:** lookup candidate text for code in a specified\n  dictionary.\n* **shape:** add full-shape support.\n* **key_binder:** switch input schemata and toggle options with hotkeys.\n* **switcher:** list input schemata ordered by recency; support radio options.\n* **tsv:** fix reading user dict snapshot files with DOS line endings.\n* **entry_collector:** support custom order of table columns in `*.dict.yaml`.\n* **CMakeLists.txt:** add options `BUILD_TEST` and `BUILD_SEPARATE_LIBS`.\n\n\n\n<a name=\"0.9.9\"></a>\n## 0.9.9 (2013-05-05)\n\n* **config:** update yaml-cpp to version 0.5 (with new API); emit prettier yaml.\n* **deployer:** introduce a work thread for ordinary background tasks.\n* **algo/calculus:** `fuzz` calculation, to create lower quality spellings.\n* **dict/dict_compiler:** importing external table files into `*.dict.yaml`.\n* **dict/entry_collector:** support `# no comment` directive in `*.dict.yaml`.\n* **dict/table_db:** `tabledb` and `stabledb` to support custom phrase.\n* **dict/user_db:** implement `plain_userdb`, in plain text files.\n* **dict/user_dictionary:** recover damaged userdb in work thread.\n* **gear/ascii_composer:** fix unexpected mode switching with Caps Lock.\n* **gear/editor:** delete previous syllable with `Control+BackSpace`.\n* **gear/*_translator:** support multiple translator instances in a engine.\n* **gear/script_translator:** rename `r10n_translator` to `script_translator`.\n* **lever/user_dict_manager:** create snapshots in plain userdb format.\n* **rime_deployer:** with command line option `--compile`,\n  dump table/prism contents into text files while compiling a dictionary.\n\n\n\n<a name=\"0.9.8\"></a>\n## 0.9.8 (2013-02-02)\n\n* **ascii_composer:** support customizing Caps Lock behavior.\n* **speller:** support auto-selecting unique candidates.\n  add options `speller/use_space` and `speller/finals` for bopomofo.\n* **punctuator:** display half-shape, full-shape labels.\n  support committing a phrase with a trailing space character.\n  support inputting special characters with mnemonics such as `/ts`.\n* **user_dictionary:** fix abnormal records introduced by a bug in merging.\n* **prism, table:** avoid creating / loading incomplete dictionary files.\n* **context:** clear transient options (whose names start with `_`) and\n  properties when loading a different schema.\n  `chord_composer` sets `_chord_typing` so that the input method program would\n  know that a chord-typing schema is in use.\n* **deployment_tasks.cc(BackupConfigFiles::Run):** while syncing user data,\n  backup user created / modified YAML files.\n* **deployer.cc(Deployer::JoinMaintenanceThread):** fix a boost-related crash.\n\n\n\n<a name=\"0.9.7\"></a>\n## 0.9.7 (2013-01-16)\n\n* **ascii_composer:** support changing conversion mode with Caps Lock.\n  fixed Control + letter key in temporary ascii mode.\n  pressing Command/Super + Shift shouldn't toggle ascii mode.\n* **user_dictionary(UserDictionary::FetchTickCount):**\n  tick was reset to zero when I/O error is encountered,\n  messing up order of user dict entries.\n* **user_dict_manager(UserDictManager::Restore):**\n  used to favor imported entries too much while merging snapshots.\n\n\n\n<a name=\"0.9.6\"></a>\n## 0.9.6 (2013-01-12)\n\n* **rime_deployer:** manipulate user's schema list with command line options\n  `--add-schema`, `--set-active-schema`\n* **rime_dict_manager:** add command line option `--sync`\n* **rime_api.h (RimeSyncUserData):**\n  add API function to start a data syncing task in maintenance thread.\n* **rime_api.h (RimeSetNotificationHandler):**\n  setup a callback function to receive notifications from librime.\n* **rime_api.h (RimeGetProperty, RimeSetProperty):**\n  add API functions to access session specific string properties.\n* **config:** support subscript, assignment operators and simplified value accessors.\n* **user_db:** optimize `user_db` for space efficiency;\n  avoid blocking user input when the database file needs repair.\n* **user_dictionary:** add transaction support.\n* **memory:** cancel memorizing newly committed phrases that has been\n  immediately erased with `BackSpace` key.\n* **navigator:** move caret left by syllable in phonetic input schemas.\n* **express_editor:** fix problem memorizing phrases committed with return key.\n* **table_translator:** add option `translator/enable_sentence`.\n* **reverse_lookup_translator:**\n  a reverse lookup segment can be suffixed by a delimiter.\n  phonetic abbreviations now come after completion results in a mixed input scenario.\n\n\n\n<a name=\"0.9.4-1\"></a>\n## 0.9.4-1 (2012-09-26)\n\n* **new dependency:** 'google-glog'.\n* **CMakeLists.txt:** fix x64 build.\n\n\n\n<a name=\"0.9.3\"></a>\n## 0.9.3 (2012-09-25)\n\n* **table_translator:** add user dictionary.\n* **deployment_tasks:** automatically build schema dependencies.\n* **logging:** adopt google-glog.\n* **brise:** install data files from a separate package.\n* **new API:** accessing schema list.\n* **new API:** enabling/disabling soft cursor in preedit string.\n\n\n\n<a name=\"0.9.2-1\"></a>\n## 0.9.2-1 (2012-07-08)\n\n* **chord_composer:** combine multiple keys to compose a syllable at once.\n* **configuration:** global `page_size` setting.\n* **API:** extend the API to support inline mode.\n* **table_translator:** add option to filter candidates by character set.\n* **user_dictionary:** automatic recovery for corrupted databases.\n* **user_dictionary:** fixed a bug that was responsible for missing user phrases.\n* **rime_deployer:** a utility program to prepare Rime's workspace.\n* **rime_dict_manager:** a utility program to import/export user dictionaries.\n* **librime:** include `brise`, a collection of preset schemata in the package.\n* **new schema:** Middle Chinese Phonetic Transcription.\n* **new schema:** IPA input method in X-SAMPA.\n\n\n\n<a name=\"0.9.1-1\"></a>\n## 0.9.1-1 (2012-05-06)\n\n* Revised API.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 8.7119140625,
          "content": "set(CMAKE_USER_MAKE_RULES_OVERRIDE ${CMAKE_CURRENT_SOURCE_DIR}/cmake/c_flag_overrides.cmake)\nset(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX ${CMAKE_CURRENT_SOURCE_DIR}/cmake/cxx_flag_overrides.cmake)\n\ncmake_minimum_required(VERSION 3.12)\nproject(rime)\nset(CMAKE_CXX_STANDARD 17)\n\nset(rime_version 1.12.0)\nset(rime_soversion 1)\n\nadd_definitions(-DRIME_VERSION=\"${rime_version}\")\n\ninclude(GNUInstallDirs)\n\noption(BUILD_SHARED_LIBS \"Build Rime as shared library\" ON)\noption(BUILD_MERGED_PLUGINS \"Merge plugins into one Rime library\" ON)\noption(BUILD_STATIC \"Build with dependencies as static libraries\" OFF)\noption(BUILD_DATA \"Build data for Rime\" OFF)\noption(BUILD_SAMPLE \"Build sample Rime plugin\" OFF)\noption(BUILD_TEST \"Build and run tests\" ON)\noption(BUILD_SEPARATE_LIBS \"Build separate rime-* libraries\" OFF)\noption(ENABLE_LOGGING \"Enable logging with google-glog library\" ON)\noption(ALSO_LOG_TO_STDERR \"Log to stderr as well as log file\" OFF)\noption(ENABLE_ASAN \"Enable Address Sanitizer (Unix Only)\" OFF)\noption(INSTALL_PRIVATE_HEADERS \"Install private headers (usually needed for externally built Rime plugins)\" OFF)\noption(ENABLE_EXTERNAL_PLUGINS \"Enable loading of externally built Rime plugins (from directory set by RIME_PLUGINS_DIR variable)\" OFF)\noption(ENABLE_THREADING \"Enable threading for deployer\" ON)\noption(ENABLE_TIMESTAMP \"Embed timestamp to schema artifacts\" ON)\n\nset(RIME_DATA_DIR \"rime-data\" CACHE STRING \"Target directory for Rime data\")\nset(RIME_PLUGINS_DIR \"rime-plugins\" CACHE STRING \"Target directory for externally built Rime plugins\")\n\nif(WIN32)\n  set(ext \".exe\")\nendif(WIN32)\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${PROJECT_SOURCE_DIR}/cmake\")\nset(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} \"${PROJECT_SOURCE_DIR}\")\n\nif (ENABLE_ASAN)\n  set(asan_cflags \"-fsanitize=address -fno-omit-frame-pointer\")\n  set(asan_lflags \"-fsanitize=address -lasan\")\n  set(CMAKE_C_FLAGS \"${asan_cflags} ${CMAKE_C_FLAGS}\")\n  set(CMAKE_CXX_FLAGS \"${asan_cflags} ${CMAKE_CXX_FLAGS}\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${asan_lflags} ${CMAKE_EXE_LINKER_FLAGS}\")\n  set(CMAKE_SHARED_LINKER_FLAGS \"${asan_lflags} ${CMAKE_SHARED_LINKER_FLAGS}\")\nendif()\n\nset(Boost_USE_STATIC_LIBS ${BUILD_STATIC})\nset(Gflags_STATIC ${BUILD_STATIC})\nset(Glog_STATIC ${BUILD_STATIC})\nset(LevelDb_STATIC ${BUILD_STATIC})\nset(Marisa_STATIC ${BUILD_STATIC})\nset(Opencc_STATIC ${BUILD_STATIC})\nset(YamlCpp_STATIC ${BUILD_STATIC})\n\nset(Boost_USE_MULTITHREADED ON)\nif(MSVC)\n  set(Boost_USE_STATIC_RUNTIME ON)\nendif()\n\nif(LINUX)\n  find_package(Boost 1.74.0 REQUIRED COMPONENTS regex)\nelse()\n  find_package(Boost 1.77.0)\nendif()\nif(Boost_FOUND)\n  include_directories(${Boost_INCLUDE_DIRS})\n  link_directories(${Boost_LIBRARY_DIRS})\n  add_definitions(-DBOOST_DLL_USE_STD_FS)\nendif()\n\nif(ENABLE_LOGGING)\n\n  find_package(Gflags)\n  if(Gflags_FOUND)\n    include_directories(${Gflags_INCLUDE_PATH})\n  endif()\n\n  find_package(Glog REQUIRED)\n  if(Glog_FOUND)\n    include_directories(${Glog_INCLUDE_PATH})\n    if(WIN32)\n      add_compile_definitions(\"GLOG_DEPRECATED=__declspec(deprecated)\")\n      add_compile_definitions(GLOG_NO_ABBREVIATED_SEVERITIES)\n    else()\n      add_compile_definitions(\"GLOG_DEPRECATED=__attribute__((deprecated))\")\n    endif()\n    if(Glog_STATIC)\n      add_compile_definitions(GLOG_EXPORT=)\n      add_compile_definitions(GLOG_NO_EXPORT=)\n    else()\n      add_compile_definitions(\"GLOG_EXPORT=__attribute__((visibility(\\\"default\\\")))\")\n      add_compile_definitions(\"GLOG_NO_EXPORT=__attribute__((visibility(\\\"default\\\")))\")\n    endif()\n  endif()\n\n  set(RIME_ENABLE_LOGGING 1)\n\n  if (ALSO_LOG_TO_STDERR)\n     set(RIME_ALSO_LOG_TO_STDERR 1)\n  endif()\nendif()\n\nfind_package(Threads)\n\nif(NOT ENABLE_THREADING)\n  add_definitions(-DRIME_NO_THREADING)\nendif()\n\nif(NOT ENABLE_TIMESTAMP)\n  add_definitions(-DRIME_NO_TIMESTAMP)\nendif()\n\nif(BUILD_TEST)\n  find_package(GTest REQUIRED)\n  if(GTEST_FOUND)\n    enable_testing()\n    include_directories(${GTEST_INCLUDE_DIRS})\n  endif()\nendif()\n\nfind_package(YamlCpp REQUIRED)\nif(YamlCpp_FOUND)\n  include_directories(${YamlCpp_INCLUDE_PATH})\nendif()\nif(YamlCpp_STATIC)\n  add_definitions(-DYAML_CPP_STATIC_DEFINE)\nendif()\n\nfind_package(LevelDb REQUIRED)\nif(LevelDb_FOUND)\n    include_directories(${LevelDb_INCLUDE_PATH})\nendif()\n\nfind_package(Marisa REQUIRED)\nif(Marisa_FOUND)\n  include_directories(${Marisa_INCLUDE_PATH})\nendif()\n\nfind_package(Opencc REQUIRED)\nif(Opencc_FOUND)\ninclude_directories(${Opencc_INCLUDE_PATH})\nendif()\nif(Opencc_STATIC)\n  add_definitions(-DOpencc_BUILT_AS_STATIC)\nendif()\n\nfind_path(X11Keysym X11/keysym.h)\nif(X11Keysym)\n  message(STATUS \"Found X11/keysym.h at ${X11Keysym}\")\n  include_directories(${X11Keysym})\nelse()\n  message(WARNING \"X11/keysym.h not found.\")\nendif()\n\nconfigure_file(\n  \"${PROJECT_SOURCE_DIR}/src/rime/build_config.h.in\"\n  \"${PROJECT_BINARY_DIR}/src/rime/build_config.h\")\n\ninclude_directories(${PROJECT_BINARY_DIR}/src)\ninclude_directories(${PROJECT_SOURCE_DIR}/src)\ninclude_directories(${PROJECT_SOURCE_DIR}/include)\nlink_directories(${PROJECT_SOURCE_DIR}/lib)\n\nif(MSVC)\n  # https://stackoverflow.com/a/31264946\n  set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /Zi\")\n  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF\")\n  add_definitions(\"/wd4244 /wd4996\")\n\n  # large address aware\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /LARGEADDRESSAWARE\")\n  set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /LARGEADDRESSAWARE\")\nendif()\n\nif(UNIX)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++17\")\nendif()\n\nif (NOT CMAKE_BUILD_PARALLEL_LEVEL)\n  include(ProcessorCount)\n  ProcessorCount(N)\n  if (NOT N EQUAL 0)\n    set(CMAKE_BUILD_PARALLEL_LEVEL ${N})\n  endif()\nendif()\n\n# keep these variables lest some Rime plugin's cmake file is still using them {\nif(NOT DEFINED LIB_INSTALL_DIR)\n    set(LIB_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR})\nendif()\n\nif(NOT DEFINED BIN_INSTALL_DIR)\n    set(BIN_INSTALL_DIR ${CMAKE_INSTALL_BINDIR})\nendif()\n# }\n\n# remove target\nconfigure_file(\n  \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n  \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n  IMMEDIATE @ONLY)\nadd_custom_target(remove\n  COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Linux|FreeBSD|OpenBSD|DragonFly|GNU|Darwin\" OR MINGW)\n  set(prefix \"${CMAKE_INSTALL_PREFIX}\")\n  set(exec_prefix \"${CMAKE_INSTALL_PREFIX}\")\n  set(bindir \"${CMAKE_INSTALL_FULL_BINDIR}\")\n  set(libdir \"${CMAKE_INSTALL_FULL_LIBDIR}\")\n  set(pkgdatadir \"${CMAKE_INSTALL_FULL_DATADIR}/${RIME_DATA_DIR}\")\n  set(pluginsdir \"${CMAKE_INSTALL_FULL_LIBDIR}/${RIME_PLUGINS_DIR}\")\n  set(includedir \"${CMAKE_INSTALL_FULL_INCLUDEDIR}\")\n  configure_file(\n      ${PROJECT_SOURCE_DIR}/rime.pc.in\n      ${PROJECT_BINARY_DIR}/rime.pc\n      @ONLY)\n  install(FILES ${PROJECT_BINARY_DIR}/rime.pc\n    DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}/pkgconfig)\nendif()\n\ninstall(FILES cmake/RimeConfig.cmake\n  DESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/cmake/rime)\n\nfile(GLOB rime_public_header_files ${PROJECT_SOURCE_DIR}/src/*.h)\nlist(FILTER rime_public_header_files EXCLUDE REGEX .*_impl\\.h$)\ninstall(FILES ${rime_public_header_files}\n  DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR})\nif(INSTALL_PRIVATE_HEADERS)\n  file(GLOB rime_private_header_files\n    ${PROJECT_SOURCE_DIR}/src/rime/*.h\n    ${PROJECT_BINARY_DIR}/src/rime/*.h)\n  install(FILES ${rime_private_header_files}\n    DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}/rime)\n  foreach(rime_private_header_files_dir algo config dict gear lever)\n    file(GLOB rime_private_header_files\n      ${PROJECT_SOURCE_DIR}/src/rime/${rime_private_header_files_dir}/*.h)\n    install(FILES ${rime_private_header_files}\n      DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}/rime/${rime_private_header_files_dir})\n  endforeach()\nendif()\n\nif(BUILD_DATA)\n  file(GLOB rime_preset_data_files ${PROJECT_SOURCE_DIR}/data/preset/*.yaml)\n  install(FILES ${rime_preset_data_files} DESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/${RIME_DATA_DIR})\nendif()\n\nif(BUILD_SHARED_LIBS)\n  add_definitions(-DRIME_BUILD_SHARED_LIBS)\n  set(rime_library rime)\n  if(BUILD_SEPARATE_LIBS)\n    set(rime_dict_library rime-dict)\n    set(rime_gears_library rime-gears)\n    set(rime_levers_library rime-levers)\n  endif()\nelse()\n  set(rime_library rime-static)\nendif()\n\nadd_subdirectory(plugins)\nmessage(STATUS \"rime_plugins_libs: ${rime_plugins_deps}\")\nmessage(STATUS \"rime_plugins_modules: ${rime_plugins_modules}\")\nset(list \"\")\nforeach(mod ${rime_plugins_modules})\n  set(list \"${list},Q(${mod})\")\nendforeach()\nadd_definitions(-DRIME_EXTRA_MODULES=${list})\nif(BUILD_SHARED_LIBS AND BUILD_SEPARATE_LIBS AND rime_plugins_objs)\n  set(rime_plugins_library rime-plugins)\nendif()\n\nadd_subdirectory(src)\n\nif(BUILD_SHARED_LIBS)\n  add_subdirectory(tools)\n\n  if(BUILD_TEST)\n    add_subdirectory(test)\n  endif()\n\n  if (BUILD_SAMPLE)\n    add_subdirectory(sample)\n  endif()\nendif()\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7060546875,
          "content": "FROM debian:12.1\n\nRUN apt update && apt install -y \\\n  git \\\n  build-essential \\\n  cmake \\\n  ninja-build \\\n  libboost-dev \\\n  libboost-regex-dev \\\n  libboost-locale-dev \\\n  libgoogle-glog-dev \\\n  libgtest-dev \\\n  libyaml-cpp-dev \\\n  libleveldb-dev \\\n  libmarisa-dev \\\n  libopencc-dev \\\n  liblua5.4-dev\n\nCOPY / /librime\nWORKDIR /librime\nRUN bash install-plugins.sh \\\n  rime/librime-charcode \\\n  hchunhui/librime-lua \\\n  lotem/librime-octagram \\\n  rime/librime-predict\n\nWORKDIR /librime\nRUN cmake -B build -G Ninja \\\n  -DCMAKE_BUILD_TYPE:STRING=Release \\\n  -DENABLE_LOGGING:BOOL=ON \\\n  -DBUILD_TEST:BOOL=ON \\\n  -DBUILD_STATIC:BOOL=OFF \\\n  -DBUILD_SHARED_LIBS:BOOL=ON\nRUN cmake --build build\n\nWORKDIR /librime/build\nRUN ctest\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4775390625,
          "content": "Copyright (c) 2014, RIME Developers\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\n  * Neither the name of the copyright holder nor the names of its\n    contributors may be used to endorse or promote products derived\n    from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.869140625,
          "content": "RIME_ROOT ?= $(CURDIR)\n\nRIME_SOURCE_PATH = plugins sample src test tools\n\nOS_NAME = $(shell uname)\nifeq ($(OS_NAME),Darwin) # for macOS\nprefix ?= $(RIME_ROOT)/dist\n\nifdef BOOST_ROOT\nCMAKE_BOOST_OPTIONS = -DBoost_NO_BOOST_CMAKE=TRUE \\\n\t-DBOOST_ROOT=\"$(BOOST_ROOT)\"\nendif\n\n# https://cmake.org/cmake/help/latest/variable/CMAKE_OSX_SYSROOT.html\nexport SDKROOT ?= $(shell xcrun --sdk macosx --show-sdk-path)\n\n# https://cmake.org/cmake/help/latest/envvar/MACOSX_DEPLOYMENT_TARGET.html\nexport MACOSX_DEPLOYMENT_TARGET ?= 10.15\n\nifdef BUILD_UNIVERSAL\n# https://cmake.org/cmake/help/latest/envvar/CMAKE_OSX_ARCHITECTURES.html\nexport CMAKE_OSX_ARCHITECTURES = arm64;x86_64\nendif\nelse ifeq ($(shell test -n \"$$PREFIX\" && echo \"$$PREFIX\" | grep -q \"/data/data/com.termux\" && echo \"termux\"),termux)\nprefix ?= $(PREFIX)\nelse ifeq ($(OS_NAME),FreeBSD)\nprefix ?= $(DESTDIR)/usr/local\nelse ifeq ($(OS_NAME),OpenBSD)\nprefix ?= $(DESTDIR)/usr/local\nelse # for Linux\nprefix ?= $(DESTDIR)/usr\nendif\n\nifndef NOPARALLEL\nexport MAKEFLAGS+=\" -j$$(( $$(nproc 2>/dev/null || getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null || echo 8) + 1)) \"\nendif\n\ndebug install-debug uninstall-debug test-debug: build ?= debug\nbuild ?= build\n\n.PHONY: all deps clean \\\nlibrime librime-static \\\nrelease debug test install uninstall \\\ninstall-debug uninstall-debug\n\nall: release\n\nclang-format-lint:\n\tfind ${RIME_SOURCE_PATH} \\! -path 'plugins/*/*' -a \\( -name '*.cc' -o -name '*.h' \\) | \\\n\txargs clang-format -Werror --dry-run || { echo Please lint your code by '\"'\"make clang-format-apply\"'\"'.; false; }\n\nclang-format-apply:\n\tfind ${RIME_SOURCE_PATH} \\! -path 'plugins/*/*' -a \\( -name '*.cc' -o -name '*.h' \\) | xargs clang-format --verbose -i\n\ndeps:\n\t$(MAKE) -f deps.mk\n\ndeps/%:\n\t$(MAKE) -f deps.mk $(@:deps/%=%)\n\nclean:\n\trm -r $(build) || true\n\nlibrime: release\n\nlibrime-static:\n\tcmake . -B$(build) \\\n\t-DCMAKE_INSTALL_PREFIX=$(prefix) \\\n\t-DCMAKE_BUILD_TYPE=Release \\\n\t-DBUILD_STATIC=ON \\\n\t-DBUILD_SHARED_LIBS=OFF\n\tcmake --build $(build)\n\nrelease:\n\tcmake . -B$(build) \\\n\t-DCMAKE_INSTALL_PREFIX=$(prefix) \\\n\t-DCMAKE_BUILD_TYPE=Release \\\n\t-DBUILD_MERGED_PLUGINS=OFF \\\n\t-DENABLE_EXTERNAL_PLUGINS=ON\n\tcmake --build $(build)\n\nmerged-plugins:\n\tcmake . -B$(build) \\\n\t-DCMAKE_INSTALL_PREFIX=$(prefix) \\\n\t-DCMAKE_BUILD_TYPE=Release \\\n\t-DBUILD_MERGED_PLUGINS=ON \\\n\t-DENABLE_EXTERNAL_PLUGINS=OFF\n\tcmake --build $(build)\n\ndebug:\n\tcmake . -B$(build) \\\n\t-DCMAKE_INSTALL_PREFIX=$(prefix) \\\n\t-DCMAKE_BUILD_TYPE=Debug \\\n\t-DBUILD_MERGED_PLUGINS=OFF \\\n\t-DALSO_LOG_TO_STDERR=ON \\\n\t-DENABLE_EXTERNAL_PLUGINS=ON\n\tcmake --build $(build)\n\ninstall:\n\tcmake --build $(build) --target install\n\ninstall-debug:\n\tcmake --build $(build) --target install\n\nuninstall:\n\tcmake --build $(build) --target remove\n\nuninstall-debug:\n\tcmake --build $(build) --target remove\n\ntest: release\n\t(cd $(build); ctest --output-on-failure)\n\ntest-debug: debug\n\t(cd $(build); ctest --output-on-failure)\n"
        },
        {
          "name": "README-mac.md",
          "type": "blob",
          "size": 3.021484375,
          "content": "# Rime with Mac\n\nThere are two ways to install librime on macOS:\n\n## 1. Using Homebrew (Recommended)\n\n```sh\nbrew install librime\n```\n\n## 2. Manual Compilation\n\n### Preparation\n\nInstall Xcode with command line tools.\n\nInstall other build tools:\n\n``` sh\nbrew install cmake git\n```\n\n### Get the code\n\n``` sh\ngit clone --recursive https://github.com/rime/librime.git\n```\nor [download from GitHub](https://github.com/rime/librime), then get code for\nthird-party dependencies separately.\n\n### Install Boost C++ libraries\n\nBoost is a third-party library which librime code heavily depend on.\nThese dependencies include a few header-only Boost libraries.\n\n**Option 1 (recommended):** Download and build Boost from source.\n\n``` sh\ncd librime\nbash install-boost.sh\n```\n\nThe make script will download Boost source tarball, extract it to\n`librime/deps/boost-<version>`.\n\nSet shell variable `BOOST_ROOT` to the path to `boost-<version>` directory prior\nto building librime.\n\n``` sh\nexport BOOST_ROOT=\"$(pwd)/deps/boost-1.84.0\"\n```\n\n**Option 2:** Install Boost libraries from Homebrew.\n\n``` sh\nbrew install boost\n# to build with icu4c, add the icu4c install path to LIBRARY_PATH\nexport LIBRARY_PATH=${LIBRARY_PATH}:/opt/homebrew/opt/icu4c/lib:/usr/local/opt/icu4c/lib\n```\n\nThis is a time-saving option if you are building and installing Rime only for your\nown Mac computer.\n\nBuilt with Homebrewed version of Boost, the `librime` binary will not be\nportable to machines without certain Homebrew formulae installed.\n\n**Option 3:** Install an older version of Boost libraries from Homebrew.\n\nStarting from version 1.68, `boost::locale` library from Homebrew depends on\n`icu4c`, which is not provided by macOS.\n\nMake target `xcode/release-with-icu` tells cmake to link to ICU libraries\ninstalled locally with Homebrew. This is only required if building with the\n[`librime-charcode`](https://github.com/rime/librime-charcode) plugin.\n\nTo make a portable build with this plugin, install an earlier version of\n`boost` that wasn't dependent on `icu4c`:\n\n``` sh\nbrew install boost@1.60\nbrew link --force boost@1.60\n```\n\n### Build third-party libraries\n\nRequired third-party libraries other than Boost are included as git submodules:\n\n``` sh\n# cd librime\n\n# if you didn't checked out the submodules with git clone --recursive, now do:\n# git submodule update --init\n\nmake deps\n```\n\nThis builds libraries located at `librime/deps/*`, and installs the build\nartifacts to `librime/include`, `librime/lib` and `librime/bin`.\n\nYou can also build an individual library, eg. `opencc`, with:\n\n``` sh\nmake deps/opencc\n```\n\n### Build librime\n\n``` sh\nmake\n```\nThis creates `build/lib/Release/librime*.dylib` and command line tools\n`build/bin/Release/rime_*`.\n\nOr, create a debug build:\n\n``` sh\nmake debug\n```\n\n### Run unit tests\n\n``` sh\nmake test\n```\n\nOr, test the debug build:\n\n``` sh\nmake test-debug\n```\n\n### Try it in the console\n\n``` sh\n(\n  cd debug/bin;\n  echo \"congmingdeRime{space}shurufa\" | Debug/rime_api_console\n)\n```\n\nUse it as REPL, quit with <kbd>Control+d</kbd>:\n\n``` sh\n(cd debug/bin; ./Debug/rime_api_console)\n```\n"
        },
        {
          "name": "README-windows.md",
          "type": "blob",
          "size": 1.8828125,
          "content": "# Rime with Windows\r\n\r\n## Prerequisites\r\n\r\n`librime` is tested to work on Windows with the following combinations of build\r\ntools and libraries:\r\n\r\n  - Visual Studio 2022 or LLVM 16\r\n  - [Boost](http://www.boost.org/)>=1.83\r\n  - [cmake](http://www.cmake.org/)>=3.10\r\n\r\nBoost and cmake versions need to match higher VS version.\r\n\r\n[Python](https://python.org)>=2.7 is needed to build opencc dictionaries.\r\n\r\n## Get the code\r\n\r\n``` batch\r\ngit clone --recursive https://github.com/rime/librime.git\r\n```\r\nor [download from GitHub](https://github.com/rime/librime).\r\n\r\n## Setup a build environment\r\n\r\nCopy `env.bat.template` to `env.bat` and edit the file according to your setup.\r\nIf Boost libraries are available, set `BOOST_ROOT` to the root directory of\r\nBoost source tree; modify `BJAM_TOOLSET`, `CMAKE_GENERATOR` and\r\n`PLATFORM_TOOLSET` if using a different version of Visual Studio; also set\r\n`DEVTOOLS_PATH` for build tools installed to custom location.\r\n\r\nWhen prepared, do the following in a *Developer Command Prompt* window.\r\n\r\n## Install Boost\r\n\r\nThis step downloads Boost libraries in librime's default search path.\r\nIf you have installed Boost libraries elsewhere, skip this step and set\r\nthe environment varialble `BOOST_ROOT` to the installed path.\r\n\r\n``` batch\r\ninstall-boost.bat\r\n```\r\n\r\n## Build third-party libraries\r\n\r\n``` batch\r\nbuild.bat deps\r\n```\r\nThis builds dependent libraries in `librime\\deps\\*`, and copies artifacts to\r\n`librime\\include`, `librime\\lib` and `librime\\bin`.\r\n\r\n## Build librime\r\n\r\n``` batch\r\nbuild.bat librime\r\n```\r\nThis creates `build\\bin\\Release\\rime.dll`.\r\n\r\nBuild artifacts: the shared library along with API headers and supporting files\r\ncan be found in `dist` directory.\r\n\r\n## Try it in the console\r\n\r\n`librime` comes with a REPL application which can be used to test if the library\r\nis working.\r\n\r\n``` batch\r\ncd build\\bin\r\nRelease\\rime_api_console.exe\r\ncongmingdeRime shurufa\r\n```\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4814453125,
          "content": "<meta charset=\"UTF-8\">\n\nRIME: Rime Input Method Engine\n===\n![Build status](https://github.com/rime/librime/actions/workflows/commit-ci.yml/badge.svg)\n[![GitHub release](https://img.shields.io/github/release/rime/librime.svg)](https://github.com/rime/librime/releases)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\nRime with your keystrokes.\n\nProject home\n---\n[rime.im](https://rime.im)\n\nLicense\n---\n[The 3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause)\n\nFeatures\n===\n  - A modular, extensible input method engine in cross-platform C++ code,\n    built on top of open-source technologies\n  - Covering features found in a large variety of Chinese input methods,\n    either shape-based or phonetic-based\n  - Built with native support for Traditional Chinese, conversion to Simplified\n    Chinese and other regional standards via OpenCC\n  - Rime input schema, a DSL in YAML syntax for fast trying out innovative ideas\n    of input method design\n  - Spelling Algebra, a mechanism to create variant spelling, especially useful\n    for Chinese dialects\n  - Support for chord-typing with a generic Qwerty keyboard\n\nInstall\n===\nFollow the instructions to build librime on platforms other than Linux:\n  - [macOS](https://github.com/rime/librime/tree/master/README-mac.md)\n  - [Windows](https://github.com/rime/librime/tree/master/README-windows.md)\n\nBuild dependencies\n---\n  - compiler with C++17 support\n  - cmake>=3.12\n  - libboost>=1.74\n  - libglog>=0.7 (optional)\n  - libleveldb\n  - libmarisa\n  - libopencc>=1.0.2\n  - libyaml-cpp>=0.5\n  - libgtest (optional)\n\nRuntime dependencies\n---\n  - libboost\n  - libglog (optional)\n  - libleveldb\n  - libmarisa\n  - libopencc\n  - libyaml-cpp\n\nBuild and install librime on Linux\n---\n```\nmake\nsudo make install\n```\n\nFrontends\n===\n\nOfficial:\n  - [ibus-rime](https://github.com/rime/ibus-rime): IBus frontend for Linux\n  - [Squirrel](https://github.com/rime/squirrel): frontend for macOS\n  - [Weasel](https://github.com/rime/weasel): frontend for Windows\n\nCommunity:\n  - [emacs-rime](https://github.com/DogLooksGood/emacs-rime): frontend for Emacs\n  - [coc-rime](https://github.com/tonyfettes/coc-rime): frontend for Vim\n  - [rime.nvim](https://github.com/Freed-Wu/rime.nvim): frontend for Vim\n  - [fcitx5.nvim](https://github.com/tonyfettes/fcitx5.nvim): Fcitx5 frontend for Vim\n  - [fcitx5-ui.nvim](https://github.com/black-desk/fcitx5-ui.nvim): Fcitx5 frontend for Vim\n  - [zsh-rime](https://github.com/Freed-Wu/zsh-rime): frontend for Zsh\n  - [pyrime](https://github.com/Freed-Wu/pyrime): frontend for Ptpython\n  - [fcitx-rime](https://github.com/fcitx/fcitx-rime): Fcitx frontend for Linux\n  - [fcitx5-rime](https://github.com/fcitx/fcitx5-rime): Fcitx5 frontend for Linux\n  - [fcitx5-macos](https://github.com/fcitx-contrib/fcitx5-macos): Fcitx5 frontend for macOS\n  - [XIME](https://github.com/stackia/XIME): frontend for macOS\n  - [PIME](https://github.com/EasyIME/PIME): frontend for Windows\n  - [rabbit](https://github.com/amorphobia/rabbit): frontend for Windows\n  - [Trime](https://github.com/osfans/trime): frontend for Android\n  - [fcitx5-android](https://github.com/fcitx5-android/fcitx5-android): frontend for Android\n  - [Hamster](https://github.com/imfuxiao/Hamster): frontend for iOS\n  - [My RIME](https://github.com/LibreService/my_rime): frontend for web\n\nPlugins\n===\n  - [librime-charcode](https://github.com/rime/librime-charcode) (Deprecated) Module that\n    deals with character encoding; depends on boost::locale and ICU libraries\n  - [librime-legacy](https://github.com/rime/librime-legacy) (Deprecated) Legacy module with\n    GPL-licensed code\n  - [librime-lua](https://github.com/hchunhui/librime-lua) Lua scripting\n  - [librime-octagram](https://github.com/lotem/librime-octagram) Language model\n  - [librime-predict](https://github.com/rime/librime-predict) Predict next word\n  - [librime-proto](https://github.com/lotem/librime-proto) IPC using CapnProto\n\nRelated works\n===\n  - [plum](https://github.com/rime/plum): Rime configuration (recipe) installer\n  - [combo-pinyin](https://github.com/rime/home/wiki/ComboPinyin): an innovative\n    chord-typing practice to input Pinyin\n  - [rime-essay](https://github.com/rime/rime-essay): the preset vocabulary\n  - [SCU](https://github.com/neolee/SCU): Squirrel Configuration Utilities\n\nCredits\n===\nWe are grateful to the makers of the following open source libraries:\n\n  - [Boost C++ Libraries](http://www.boost.org/) (Boost Software License)\n  - [google-glog](https://github.com/google/glog) (The 3-Clause BSD License)\n  - [Google Test](https://github.com/google/googletest) (The 3-Clause BSD License)\n  - [LevelDB](https://github.com/google/leveldb) (The 3-Clause BSD License)\n  - [marisa-trie](https://github.com/s-yata/marisa-trie) (BSD 2-Clause License, LGPL 2.1)\n  - [OpenCC](https://github.com/BYVoid/OpenCC) (Apache License 2.0)\n  - [yaml-cpp](https://github.com/jbeder/yaml-cpp) (MIT License)\n\nContributors\n===\n  - [佛振](https://github.com/lotem)\n  - [鄒旭](https://github.com/zouxu09)\n  - [Weng Xuetian](http://csslayer.info)\n  - [Chongyu Zhu](http://lembacon.com)\n  - [Zhiwei Liu](https://github.com/liuzhiwei)\n  - [BYVoid](http://www.byvoid.com)\n  - [雪齋](https://github.com/LEOYoon-Tsaw)\n  - [瑾昀](https://github.com/kunki)\n  - [osfans](https://github.com/osfans)\n  - [jakwings](https://github.com/jakwings)\n  - [Prcuvu](https://github.com/Prcuvu)\n  - [hchunhui](https://github.com/hchunhui)\n  - [Qijia Liu](https://github.com/eagleoflqj)\n  - [WhiredPlanck](https://github.com/WhiredPlanck)\n"
        },
        {
          "name": "action-install-linux.sh",
          "type": "blob",
          "size": 0.4423828125,
          "content": "#!/bin/bash\n\ndep_packages=(\n    libboost-locale-dev\n    libboost-regex-dev\n    libgoogle-glog-dev\n    libleveldb-dev\n    libmarisa-dev\n    libyaml-cpp-dev\n    libopencc-dev\n    libgtest-dev\n)\n\nsudo apt update\n# fix a package dependency bug in Ubuntu 22.04\n# https://bugs.launchpad.net/ubuntu/+source/google-glog/+bug/1991919\n# https://github.com/kadalu-tech/pkgs/pull/2/files#r1001042597\nsudo apt install -y libunwind-dev ninja-build ${dep_packages[@]}\n"
        },
        {
          "name": "action-install-plugins-macos.sh",
          "type": "blob",
          "size": 0.6748046875,
          "content": "#!/bin/bash\n\nexport RIME_ROOT=\"$(cd \"$(dirname \"$0\")\"; pwd)\"\n\necho \"RIME_PLUGINS=${RIME_PLUGINS}\" > version-info.txt\necho \"librime $(git describe --always)\" >> version-info.txt\n\nfunction action_install_plugin() {\n    local plugin=\"$1\"\n    local plugin_dir=\"$2\"\n    echo \"${plugin} $(git -C \"${plugin_dir}\" describe --always)\" >> version-info.txt\n    if [[ -e \"${plugin_dir}/action-install.sh\" ]]; then\n\t    (cd \"${plugin_dir}\"; bash ./action-install.sh)\n    fi\n}\n\ndeclare -fx action_install_plugin\n\nif [[ -n \"${RIME_PLUGINS}\" ]]; then\n    # intentionally unquoted: ${RIME_PLUGINS} is a space separated list of slugs\n    bash ./install-plugins.sh run=action_install_plugin ${RIME_PLUGINS}\nfi\n"
        },
        {
          "name": "action-install-plugins-windows.bat",
          "type": "blob",
          "size": 1.2763671875,
          "content": "setlocal\r\n\r\nif not defined RIME_ROOT set RIME_ROOT=%CD%\r\n\r\nrem for GitHub pull request #1, git checkout 1/merge\r\nset clone_options=^\r\n --config \"remote.origin.fetch=+refs/pull/*:refs/remotes/origin/*\" ^\r\n --depth 1 ^\r\n --no-single-branch\r\n\r\necho RIME_PLUGINS=%RIME_PLUGINS% > version-info.txt\r\necho librime >> version-info.txt\r\ngit describe --always >> version-info.txt\r\n\r\nif defined RIME_PLUGINS (\r\n  for %%s in (%RIME_PLUGINS%) do call :install_plugin %%s || exit /b\r\n)\r\nexit /b\r\n\r\n:install_plugin\r\nset plugin=%1\r\necho plugin: %plugin%\r\nfor /f \"delims=@\" %%i in (\"%plugin%\") do (\r\n  set slug=%%i\r\n  goto :got_slug\r\n)\r\n:got_slug\r\nif %slug% == %plugin% (\r\n  set branch=\r\n) else (\r\n  set branch=%plugin:*@=%\r\n)\r\nset plugin_project=%slug:*/=%\r\nset plugin_dir=plugins\\%plugin_project:librime-=%\r\ngit clone %clone_options% \"https://github.com/%slug%.git\" %plugin_dir%\r\nif errorlevel 1 exit /b\r\nrem pull request ref doesn't work with git clone --branch\r\nif not [%branch%] == [] (\r\n   git -C %plugin_dir% checkout %branch%\r\n   if errorlevel 1 exit /b\r\n)\r\n:action_install_plugin\r\necho %plugin% >> version-info.txt\r\ngit -C %plugin_dir% describe --always >> version-info.txt\r\nif exist %plugin_dir%\\action-install.bat (\r\n  pushd %plugin_dir%\r\n  call action-install.bat\r\n  if errorlevel 1 exit /b\r\n  popd\r\n)\r\nexit /b\r\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.bat",
          "type": "blob",
          "size": 5.888671875,
          "content": "@echo off\r\nrem Rime build script for Windows platform.\r\nrem Maintainer: Chen Gong <chen.sst@gmail.com>\r\n\r\nsetlocal\r\n\r\nif not exist env.bat copy env.bat.template env.bat\r\n\r\nif exist env.bat call .\\env.bat\r\n\r\nset OLD_PATH=%PATH%\r\nif defined DEVTOOLS_PATH set PATH=%OLD_PATH%;%DEVTOOLS_PATH%\r\npath\r\necho.\r\n\r\nif not defined RIME_ROOT set RIME_ROOT=%CD%\r\necho RIME_ROOT=%RIME_ROOT%\r\necho.\r\n\r\nif defined BOOST_ROOT (\r\n  if exist \"%BOOST_ROOT%\\boost\" goto boost_found\r\n)\r\necho Error: Boost not found! Please set BOOST_ROOT in env.bat.\r\nexit /b 1\r\n:boost_found\r\necho BOOST_ROOT=%BOOST_ROOT%\r\necho.\r\n\r\nset build_config=Release\r\nset build_deps=0\r\nset build_librime=0\r\nset build_shared=ON\r\nset build_test=OFF\r\nset clean=0\r\nset enable_logging=ON\r\n\r\n:parse_cmdline_options\r\nif \"%1\" == \"\" goto end_parsing_cmdline_options\r\nif \"%1\" == \"clean\" set clean=1\r\nif \"%1\" == \"deps\" set build_deps=1\r\nrem `thirdparty` is deprecated in favor of `deps`\r\nif \"%1\" == \"thirdparty\" set build_deps=1\r\nif \"%1\" == \"librime\" set build_librime=1\r\nif \"%1\" == \"static\" (\r\n  set build_shared=OFF\r\n)\r\nif \"%1\" == \"shared\" (\r\n  set build_shared=ON\r\n)\r\nif \"%1\" == \"test\" (\r\n  set build_librime=1\r\n  set build_test=ON\r\n)\r\nif \"%1\" == \"debug\" (\r\n  if not defined build_dir set build_dir=debug\r\n  set build_config=Debug\r\n)\r\nif \"%1\" == \"release\" (\r\n  if not defined build_dir set build_dir=build\r\n  set build_config=Release\r\n)\r\nif \"%1\" == \"logging\" (\r\n  set enable_logging=ON\r\n)\r\nif \"%1\" == \"nologging\" (\r\n  set enable_logging=OFF\r\n)\r\nshift\r\ngoto parse_cmdline_options\r\n:end_parsing_cmdline_options\r\n\r\nif %clean% == 0 (\r\nif %build_librime% == 0 (\r\nif %build_deps% == 0 (\r\n  set build_librime=1\r\n)))\r\n\r\nif not defined build_dir set build_dir=build\r\nif not defined deps_install_prefix set deps_install_prefix=%RIME_ROOT%\r\nif not defined rime_install_prefix set rime_install_prefix=%RIME_ROOT%\\dist\r\n\r\nif %clean% == 1 (\r\n rmdir /s /q %build_dir%\r\n  rmdir /s /q deps\\glog\\%build_dir%\r\n  rmdir /s /q deps\\googletest\\%build_dir%\r\n  rmdir /s /q deps\\leveldb\\%build_dir%\r\n  rmdir /s /q deps\\marisa-trie\\%build_dir%\r\n  rmdir /s /q deps\\opencc\\%build_dir%\r\n  rmdir /s /q deps\\yaml-cpp\\%build_dir%\r\n)\r\n\r\nif defined CMAKE_GENERATOR (\r\n  set common_cmake_flags=%common_cmake_flags% -G%CMAKE_GENERATOR%\r\n)\r\nif defined ARCH (\r\n  set common_cmake_flags=%common_cmake_flags% -A%ARCH%\r\n)\r\nif defined PLATFORM_TOOLSET (\r\n  set common_cmake_flags=%common_cmake_flags% -T%PLATFORM_TOOLSET%\r\n)\r\n\r\nset common_cmake_flags=%common_cmake_flags%^\r\n  -DCMAKE_CONFIGURATION_TYPES:STRING=\"%build_config%\"^\r\n  -DCMAKE_BUILD_TYPE:STRING=\"%build_config%\"^\r\n  -DCMAKE_USER_MAKE_RULES_OVERRIDE:PATH=\"%RIME_ROOT%\\cmake\\c_flag_overrides.cmake\"^\r\n  -DCMAKE_USER_MAKE_RULES_OVERRIDE_CXX:PATH=\"%RIME_ROOT%\\cmake\\cxx_flag_overrides.cmake\"^\r\n  -DCMAKE_EXE_LINKER_FLAGS_INIT:STRING=\"-llibcmt\"^\r\n  -DCMAKE_MSVC_RUNTIME_LIBRARY=\"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\r\n\r\nset deps_cmake_flags=%common_cmake_flags%^\r\n  -DBUILD_SHARED_LIBS:BOOL=OFF^\r\n  -DCMAKE_INSTALL_PREFIX:PATH=\"%deps_install_prefix%\"\r\n\r\nif %build_deps% == 1 (\r\n  echo building glog.\r\n  pushd deps\\glog\r\n  cmake . -B%build_dir% %deps_cmake_flags%^\r\n  -DBUILD_TESTING:BOOL=OFF^\r\n  -DWITH_GFLAGS:BOOL=OFF\r\n  if errorlevel 1 goto error\r\n  cmake --build %build_dir% --config %build_config% --target install\r\n  if errorlevel 1 goto error\r\n  popd\r\n\r\n  echo building leveldb.\r\n  pushd deps\\leveldb\r\n  cmake . -B%build_dir% %deps_cmake_flags%^\r\n  -DLEVELDB_BUILD_BENCHMARKS:BOOL=OFF^\r\n  -DLEVELDB_BUILD_TESTS:BOOL=OFF\r\n  if errorlevel 1 goto error\r\n  cmake --build %build_dir% --config %build_config% --target install\r\n  if errorlevel 1 goto error\r\n  popd\r\n\r\n  echo building yaml-cpp.\r\n  pushd deps\\yaml-cpp\r\n  cmake . -B%build_dir% %deps_cmake_flags%^\r\n  -DMSVC_SHARED_RT:BOOL=OFF^\r\n  -DYAML_MSVC_SHARED_RT:BOOL=OFF^\r\n  -DYAML_CPP_BUILD_CONTRIB:BOOL=OFF^\r\n  -DYAML_CPP_BUILD_TESTS:BOOL=OFF^\r\n  -DYAML_CPP_BUILD_TOOLS:BOOL=OFF\r\n  if errorlevel 1 goto error\r\n  cmake --build %build_dir% --config %build_config% --target install\r\n  if errorlevel 1 goto error\r\n  popd\r\n\r\n  echo building gtest.\r\n  pushd deps\\googletest\r\n  cmake . -B%build_dir% %deps_cmake_flags%^\r\n  -DBUILD_GMOCK:BOOL=OFF\r\n  if errorlevel 1 goto error\r\n  cmake --build %build_dir% --config %build_config% --target install\r\n  if errorlevel 1 goto error\r\n  popd\r\n\r\n  echo building marisa.\r\n  pushd deps\\marisa-trie\r\n  cmake . -B%build_dir% %deps_cmake_flags%\r\n  if errorlevel 1 goto error\r\n  cmake --build %build_dir% --config %build_config% --target install\r\n  if errorlevel 1 goto error\r\n  popd\r\n\r\n  echo building opencc.\r\n  pushd deps\\opencc\r\n  powershell -NoProfile -c \"$Content = gc CMakeLists.txt; if ($Content[212] -match '  find_library\\(LIBMARISA NAMES marisa\\)') { $Content[212] = '  find_package(marisa)', '  set(LIBMARISA marisa)'; } sc CMakeLists.txt $Content\"\r\n  cmake . -B%build_dir% %deps_cmake_flags%^\r\n  -DBUILD_TESTING=OFF^\r\n  -DUSE_SYSTEM_MARISA=ON^\r\n  -Dmarisa_DIR=\"%RIME_ROOT%\\lib\\cmake\\marisa\"\r\n  if errorlevel 1 goto error\r\n  cmake --build %build_dir% --config %build_config% --target install\r\n  if errorlevel 1 goto error\r\n  popd\r\n)\r\n\r\nif %build_librime% == 0 goto exit\r\n\r\nset rime_cmake_flags=%common_cmake_flags%^\r\n -DBUILD_STATIC=ON^\r\n -DBUILD_SHARED_LIBS=%build_shared%^\r\n -DBUILD_TEST=%build_test%^\r\n -DENABLE_LOGGING=%enable_logging%^\r\n -DCMAKE_PREFIX_PATH:PATH=\"%deps_install_prefix%\"^\r\n -DCMAKE_INSTALL_PREFIX:PATH=\"%rime_install_prefix%\"\r\n\r\necho on\r\ncall cmake . -B%build_dir% %rime_cmake_flags%\r\n@echo off\r\nif errorlevel 1 goto error\r\n\r\necho.\r\necho building librime.\r\necho.\r\necho on\r\ncmake --build %build_dir% --config %build_config% --target install\r\n@echo off\r\nif errorlevel 1 goto error\r\n\r\nif \"%build_test%\" == \"ON\" (\r\n  copy /y %rime_install_prefix%\\lib\\rime.dll %build_dir%\\test\r\n  ctest --test-dir %build_dir%\\test -C %build_config%  --output-on-failure\r\n  if errorlevel 1 goto error\r\n)\r\n\r\necho.\r\necho ready.\r\necho.\r\ngoto exit\r\n\r\n:error\r\nset exitcode=%errorlevel%\r\necho.\r\necho error building la rime.\r\necho.\r\n\r\n:exit\r\nset PATH=%OLD_PATH%\r\nexit /b %exitcode%\r\n"
        },
        {
          "name": "bump-version.sh",
          "type": "blob",
          "size": 0.263671875,
          "content": "#!/bin/bash\n\nset -e\n\nversion=$(node -p 'require(\"./package.json\").version')\n\nsed -i'~' 's/set(\\(rime_version\\) .*)/set(\\1 '$version')/' CMakeLists.txt\nrm 'CMakeLists.txt~'\ngit add CMakeLists.txt\n\nconventional-changelog -p angular -i CHANGELOG.md -s\ngit add CHANGELOG.md\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps.mk",
          "type": "blob",
          "size": 2.33984375,
          "content": "# a minimal build of third party libraries for static linking\n\nrime_root = $(CURDIR)\nsrc_dir = $(rime_root)/deps\n\nifndef NOPARALLEL\nexport MAKEFLAGS+=\" -j$$(( $$(nproc 2>/dev/null || getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null || echo 8) + 1)) \"\nendif\n\nbuild ?= build\nprefix ?= $(rime_root)\n\nrime_deps = glog googletest leveldb marisa-trie opencc yaml-cpp\n\n.PHONY: all clean clean-dist clean-src $(rime_deps)\n\nall: $(rime_deps)\n\nclean: clean-src clean-dist\n\nclean-dist:\n\tgit rev-parse --is-inside-work-tree > /dev/null && \\\n\tfind $(prefix)/bin $(prefix)/include $(prefix)/lib $(prefix)/share \\\n\t-depth -maxdepth 1 \\\n\t-exec bash -c 'git ls-files --error-unmatch \"$$0\" > /dev/null 2>&1 || rm -rv \"$$0\"' {} \\; || true\n\trmdir $(prefix) 2> /dev/null || true\n\n# note: this won't clean output files under bin/, include/, lib/ and share/.\nclean-src:\n\tfor dep in $(rime_deps); do \\\n\t\trm -r $(src_dir)/$${dep}/$(build) || true; \\\n\tdone\n\nglog:\n\tcd $(src_dir)/glog; \\\n\tcmake . -B$(build) \\\n\t-DBUILD_SHARED_LIBS:BOOL=OFF \\\n\t-DBUILD_TESTING:BOOL=OFF \\\n\t-DWITH_GFLAGS:BOOL=OFF \\\n\t-DCMAKE_BUILD_TYPE:STRING=\"Release\" \\\n\t-DCMAKE_INSTALL_PREFIX:PATH=\"$(prefix)\" \\\n\t&& cmake --build $(build) --target install\n\ngoogletest:\n\tcd $(src_dir)/googletest; \\\n\tcmake . -B$(build) \\\n\t-DBUILD_GMOCK:BOOL=OFF \\\n\t-DCMAKE_BUILD_TYPE:STRING=\"Release\" \\\n\t-DCMAKE_INSTALL_PREFIX:PATH=\"$(prefix)\" \\\n\t&& cmake --build $(build) --target install\n\nleveldb:\n\tcd $(src_dir)/leveldb; \\\n\tcmake . -B$(build) \\\n\t-DLEVELDB_BUILD_BENCHMARKS:BOOL=OFF \\\n\t-DLEVELDB_BUILD_TESTS:BOOL=OFF \\\n\t-DCMAKE_BUILD_TYPE:STRING=\"Release\" \\\n\t-DCMAKE_INSTALL_PREFIX:PATH=\"$(prefix)\" \\\n\t&& cmake --build $(build) --target install\n\nmarisa-trie:\n\tcd $(src_dir)/marisa-trie; \\\n\tcmake . -B$(build) \\\n\t-DCMAKE_BUILD_TYPE:STRING=\"Release\" \\\n\t-DCMAKE_INSTALL_PREFIX:PATH=\"$(prefix)\" \\\n\t&& cmake --build $(build) --target install\n\nopencc:\n\tcd $(src_dir)/opencc; \\\n\tcmake . -B$(build) \\\n\t-DBUILD_SHARED_LIBS:BOOL=OFF \\\n\t-DCMAKE_BUILD_TYPE:STRING=\"Release\" \\\n\t-DCMAKE_INSTALL_PREFIX:PATH=\"$(prefix)\" \\\n\t&& cmake --build $(build) --target install\n\nyaml-cpp:\n\tcd $(src_dir)/yaml-cpp; \\\n\tcmake . -B$(build) \\\n\t-DYAML_CPP_BUILD_CONTRIB:BOOL=OFF \\\n\t-DYAML_CPP_BUILD_TESTS:BOOL=OFF \\\n\t-DYAML_CPP_BUILD_TOOLS:BOOL=OFF \\\n\t-DCMAKE_BUILD_TYPE:STRING=\"Release\" \\\n\t-DCMAKE_INSTALL_PREFIX:PATH=\"$(prefix)\" \\\n\t&& cmake --build $(build) --target install\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "env.bat.template",
          "type": "blob",
          "size": 0.517578125,
          "content": "rem Customize your build environment and save the modified copy to env.bat\r\n\r\nset RIME_ROOT=%CD%\r\n\r\nrem REQUIRED: path to Boost source directory\r\nif not defined BOOST_ROOT set BOOST_ROOT=%RIME_ROOT%\\deps\\boost-1.84.0\r\n\r\nrem architecture, Visual Studio version and platform toolset\r\nset ARCH=Win32\r\nset BJAM_TOOLSET=msvc-14.2\r\nset CMAKE_GENERATOR=\"Visual Studio 16 2019\"\r\nset PLATFORM_TOOLSET=v142\r\n\r\nrem OPTIONAL: path to additional build tools\r\nrem set DEVTOOLS_PATH=%ProgramFiles%\\Git\\cmd;%ProgramFiles%\\CMake\\bin;C:\\Python27;\r\n"
        },
        {
          "name": "env.vs2019.bat",
          "type": "blob",
          "size": 0.517578125,
          "content": "rem Customize your build environment and save the modified copy to env.bat\r\n\r\nset RIME_ROOT=%CD%\r\n\r\nrem REQUIRED: path to Boost source directory\r\nif not defined BOOST_ROOT set BOOST_ROOT=%RIME_ROOT%\\deps\\boost-1.84.0\r\n\r\nrem architecture, Visual Studio version and platform toolset\r\nset ARCH=Win32\r\nset BJAM_TOOLSET=msvc-14.2\r\nset CMAKE_GENERATOR=\"Visual Studio 16 2019\"\r\nset PLATFORM_TOOLSET=v142\r\n\r\nrem OPTIONAL: path to additional build tools\r\nrem set DEVTOOLS_PATH=%ProgramFiles%\\Git\\cmd;%ProgramFiles%\\CMake\\bin;C:\\Python27;\r\n"
        },
        {
          "name": "env.vs2022.bat",
          "type": "blob",
          "size": 0.517578125,
          "content": "rem Customize your build environment and save the modified copy to env.bat\r\n\r\nset RIME_ROOT=%CD%\r\n\r\nrem REQUIRED: path to Boost source directory\r\nif not defined BOOST_ROOT set BOOST_ROOT=%RIME_ROOT%\\deps\\boost-1.84.0\r\n\r\nrem architecture, Visual Studio version and platform toolset\r\nset ARCH=Win32\r\nset BJAM_TOOLSET=msvc-14.3\r\nset CMAKE_GENERATOR=\"Visual Studio 17 2022\"\r\nset PLATFORM_TOOLSET=v143\r\n\r\nrem OPTIONAL: path to additional build tools\r\nrem set DEVTOOLS_PATH=%ProgramFiles%\\Git\\cmd;%ProgramFiles%\\CMake\\bin;C:\\Python27;\r\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-boost.bat",
          "type": "blob",
          "size": 0.5625,
          "content": "setlocal\r\n\r\nif not defined RIME_ROOT set RIME_ROOT=%CD%\r\n\r\nif not defined boost_version set boost_version=1.84.0\r\n\r\nif not defined BOOST_ROOT set BOOST_ROOT=%RIME_ROOT%\\deps\\boost-%boost_version%\r\n\r\nif exist \"%BOOST_ROOT%\\libs\" goto boost_found\r\nfor %%I in (\"%BOOST_ROOT%\\.\") do set src_dir=%%~dpI\r\nrem download boost source\r\naria2c https://github.com/boostorg/boost/releases/download/boost-%boost_version%/boost-%boost_version%.7z -d %src_dir%\r\npushd %src_dir%\r\n7z x boost-%boost_version%.7z\r\ncd boost-%boost_version%\r\ncall .\\bootstrap.bat\r\n.\\b2 headers\r\npopd\r\n:boost_found\r\n"
        },
        {
          "name": "install-boost.sh",
          "type": "blob",
          "size": 1.390625,
          "content": "#!/bin/bash\nset -ex\n\nRIME_ROOT=\"$(cd \"$(dirname \"$0\")\"; pwd)\"\n\nboost_version=\"${boost_version=1.84.0}\"\n\nBOOST_ROOT=\"${BOOST_ROOT=${RIME_ROOT}/deps/boost-${boost_version}}\"\n\nboost_tarball=\"boost-${boost_version}.tar.xz\"\ndownload_url=\"https://github.com/boostorg/boost/releases/download/boost-${boost_version}/${boost_tarball}\"\nboost_tarball_sha256sum=\"2e64e5d79a738d0fa6fb546c6e5c2bd28f88d268a2a080546f74e5ff98f29d0e  ${boost_tarball}\"\n\ndownload_boost_source() {\n    cd \"${RIME_ROOT}/deps\"\n    if ! [[ -f \"${boost_tarball}\" ]]; then\n        curl -LO \"${download_url}\"\n    fi\n    echo \"${boost_tarball_sha256sum}\" | shasum -a 256 -c\n    tar -xJf \"${boost_tarball}\"\n    [[ -f \"${BOOST_ROOT}/bootstrap.sh\" ]]\n}\n\nboost_cxxflags='-arch arm64 -arch x86_64'\n\nbuild_boost_macos() {\n    cd \"${BOOST_ROOT}\"\n    ./bootstrap.sh --with-toolset=clang --with-libraries=\"${boost_libs}\"\n    ./b2 -q -a link=static architecture=arm cxxflags=\"${boost_cxxflags}\" stage\n    for lib in stage/lib/*.a; do\n        lipo $lib -info\n    done\n}\n\nif [[ $# -eq 0 || \" $* \" =~ ' --download ' ]]; then\n    if [[ ! -f \"${BOOST_ROOT}/bootstrap.sh\" ]]; then\n        download_boost_source\n    else\n        echo \"found boost at ${BOOST_ROOT}\"\n    fi\n    cd \"${BOOST_ROOT}\"\n    ./bootstrap.sh\n    ./b2 headers\nfi\nif [[ ($# -eq 0 || \" $* \" =~ ' --build ') && -n \"${boost_libs}\" ]]; then\n    if [[ \"$OSTYPE\" =~ 'darwin' ]]; then\n        build_boost_macos\n    fi\nfi\n"
        },
        {
          "name": "install-plugins.sh",
          "type": "blob",
          "size": 1.24609375,
          "content": "#!/bin/bash\n\nset -e\n\ncd \"$(dirname \"$0\")\"\n\nclone_options=(\n    # for GitHub pull request #1, git checkout 1/merge\n    --config 'remote.origin.fetch=+refs/pull/*:refs/remotes/origin/*'\n    # shallow clone\n    --depth 1\n    # fetch all branches\n    --no-single-branch\n)\n\nif [[ \"${1}\" =~ run=.* ]]; then\n    custom_install=\"${1#run=}\"\n    shift\nfi\n\nfor plugin in \"$@\"\ndo\n    if [[ \"${plugin}\" =~ @ ]]; then\n        slug=\"${plugin%@*}\"\n        branch=\"${plugin#*@}\"\n    else\n        slug=\"${plugin}\"\n        branch=''\n    fi\n    plugin_project=\"${slug##*/}\"\n    plugin_dir=\"plugins/${plugin_project#librime-}\"\n    if [[ -d \"${plugin_dir}\" ]]\n    then\n        echo \"Updating ${plugin} in ${plugin_dir}\"\n        if [[ -n \"${branch}\" ]]; then\n            git -C \"${plugin_dir}\" checkout \"${branch}\"\n        fi\n        git -C \"${plugin_dir}\" pull\n    else\n        echo \"Checking out ${plugin} to ${plugin_dir}\"\n        git clone \"${clone_options[@]}\" \"https://github.com/${slug}.git\" \"${plugin_dir}\"\n        # pull request ref doesn't work with git clone --branch\n        if [[ -n \"${branch}\" ]]; then\n            git -C \"${plugin_dir}\" checkout \"${branch}\"\n        fi\n    fi\n    if [[ -n \"${custom_install}\" ]]; then\n        ${custom_install} \"${plugin}\" \"${plugin_dir}\"\n    fi\ndone\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6162109375,
          "content": "{\n  \"name\": \"librime\",\n  \"version\": \"1.12.0\",\n  \"description\": \"Rime Input Method Engine\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"doc\": \"doc\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"version\": \"./bump-version.sh\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/rime/librime.git\"\n  },\n  \"author\": \"lotem\",\n  \"license\": \"BSD-3-Clause\",\n  \"bugs\": {\n    \"url\": \"https://github.com/rime/librime/issues\"\n  },\n  \"homepage\": \"https://github.com/rime/librime#readme\",\n  \"devDependencies\": {\n    \"conventional-changelog-cli\": \"^1.3.14\"\n  }\n}\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "rime-new-plugin.sh",
          "type": "blob",
          "size": 2.08984375,
          "content": "#!/bin/bash\n\nif [[ -z \"${1}\" ]]; then\n  echo \"Usage: $(basename \"$0\") <plugin-name>\"\n  exit 1\nfi\n\nplugin_name=\"${1/_/-}\"\nplugin_name=\"${plugin_name#rime-}\"\nplugin_dir=\"plugins/${plugin_name}\"\nplugin_module=\"${plugin_name/-/_}\"\n\necho \"plugin_name: rime-${plugin_name}\"\necho \"plugin_dir: ${plugin_dir}\"\necho \"plugin_module: ${plugin_module}\"\n\nmkdir -p \"${plugin_dir}\"\n\ncat >> \"${plugin_dir}/CMakeLists.txt\" << //EOF\nproject(rime-${plugin_name})\ncmake_minimum_required(VERSION 3.10)\n\naux_source_directory(src ${plugin_module}_src)\n\nadd_library(rime-${plugin_name}-objs OBJECT \\${${plugin_module}_src})\nif(BUILD_SHARED_LIBS)\n  set_target_properties(rime-${plugin_name}-objs\n    PROPERTIES\n    POSITION_INDEPENDENT_CODE ON)\nendif()\n\nset(plugin_name rime-${plugin_name} PARENT_SCOPE)\nset(plugin_objs \\$<TARGET_OBJECTS:rime-${plugin_name}-objs> PARENT_SCOPE)\nset(plugin_deps \\${rime_library} PARENT_SCOPE)\nset(plugin_modules \"${plugin_module}\" PARENT_SCOPE)\n//EOF\n\nmkdir -p \"${plugin_dir}/src\"\n\ncat >> \"${plugin_dir}/src/${plugin_module}_module.cc\" << //EOF\n#include <rime/component.h>\n#include <rime/registry.h>\n#include <rime_api.h>\n\n#include \"todo_processor.h\"\n\nusing namespace rime;\n\nstatic void rime_${plugin_module}_initialize() {\n  Registry &r = Registry::instance();\n  r.Register(\"todo_processor\", new Component<TodoProcessor>);\n}\n\nstatic void rime_${plugin_module}_finalize() {\n}\n\nRIME_REGISTER_MODULE(${plugin_module})\n//EOF\n\ncat >> \"${plugin_dir}/src/todo_processor.h\" << //EOF\n#include <rime/common.h>\n#include <rime/context.h>\n#include <rime/engine.h>\n#include <rime/processor.h>\n\nusing namespace rime;\n\nclass TodoProcessor : public Processor {\n public:\n  explicit TodoProcessor(const Ticket& ticket)\n    : Processor(ticket) {\n    Context* context = engine_->context();\n    update_connection_ = context->update_notifier()\n      .connect([this](Context* ctx) { OnUpdate(ctx); });\n  }\n\n  virtual ~TodoProcessor() {\n    update_connection_.disconnect();\n  }\n\n  ProcessResult ProcessKeyEvent(const KeyEvent& key_event) override {\n    return kNoop;\n  }\n\n private:\n  void OnUpdate(Context* ctx) {}\n\n  connection update_connection_;\n};\n//EOF\n"
        },
        {
          "name": "rime.pc.in",
          "type": "blob",
          "size": 0.2470703125,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\npkgdatadir=@pkgdatadir@\npluginsdir=@pluginsdir@\n\nName: Rime\nDescription: Rime Input Method Engine\nVersion: @rime_version@\nCflags: -I${includedir}\nLibs: -L${libdir} -lrime\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}