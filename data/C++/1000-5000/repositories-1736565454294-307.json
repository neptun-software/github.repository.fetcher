{
  "metadata": {
    "timestamp": 1736565454294,
    "page": 307,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "acidanthera/WhateverGreen",
      "stars": 3281,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3251953125,
          "content": ".DS_Store\nDerivedData\nLilu.kext\nxcshareddata\nxcuserdata\nproject.xcworkspace\nbuild\nWhateverGreen/kern_resources.cpp\nWhateverGreen/kern_resources.hpp\nTools/BoardHash/BoardHash\nTools/GPUInfo/gpuinfo\nTools/HookMac/libHookMac.dylib\nTools/WhateverName/WhateverName.app/Contents/MacOS/libWhateverName.dylib\n.svace-dir\ncov-int\n/MacKernelSDK\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 16.3798828125,
          "content": " WhateverGreen Changelog\n=======================\n#### v1.6.9\n- Added Alder Lake/Raptor Lake/Arrow Lake CPU detection\n\n#### v1.6.8\n- Fixed loading on macOS 10.10 and older due to a MacKernelSDK regression\n\n#### v1.6.7\n- Added constants for macOS 15 support\n- Fixed short-circuit evaluation from brightness bound overrides, thanks @damiponce and Gwy\n\n#### v1.6.6\n- Extended the Backlight Registers Alternative Fix (BLT) submodule to support both KBL and CFL platforms. (by @0xFireWolf)\n- Revised the Backlight Registers Fix (BLR) submodule to make it compatible with the Backlight Smoother (BLS) on KBL platforms. (by @0xFireWolf)\n\n#### v1.6.5\n- Added constants for macOS 14 support\n- Added a new boot argument `-igfxblt` to revert the optimizations done by the compiler in backlight related functions, fixing the 3-minute dark screen issue and making Backlight Smoother (BLS) work on mobile Coffee Lake platforms running macOS 13.4 or later. (by @0xFireWolf)\n\n#### v1.6.4\n- Fixed Radeon RX 5500 XT identification regression\n\n#### v1.6.3\n- Added various GPU identifiers from different Macs\n- Added `disable-telemetry-load` to disable iGPU telemetry loading that may cause a freeze during startup on certain laptops such as Chromebooks.\n\n#### v1.6.2\n- Added W7170M/S7100X ID\n\n#### v1.6.1 \n- Improved Skylake graphics spoofing support by removing profile 2 from VTSupportedProfileArray on macOS 13+, thanks @abenraj and @dhinakg\n\n#### v1.6.0\n- Added constants required for macOS 13 update\n- Added Skylake graphics spoofing support on macOS 13+ by @dhinakg\n- Modified brightness change requests to replace previous requests instead of queuing\n\n#### v1.5.9\n- Add AMD prefix for all Radeon cards to follow latest Apple naming scheme\n\n#### v1.5.8\n- Inverted logic for GVA support, which is now disabled by default and can be enabled by `enable-gva-support`.\n\n#### v1.5.7\n- Fixed maximum backlight level on Ice Lake IGPUs\n\n#### v1.5.6\n- Fixed deprecated code in unfairgva\n\n#### v1.5.5\n- Changed the default delay of optimizing display data buffer allocations from 0 to 1 second to fix the issue that both internal and external displays flicker on some Ice Lake-based laptops. (Thanks @m0d16l14n1)\n- Disabled the black screen fix on Ice Lake platforms as it is only applicable to SKL/KBL/CFL/CML platforms.\n- Disabled the force complete modeset submodule on Ice Lake platforms as HDMI/DVI connections are not supported by the driver.\n- Added AMD Radeon RX 5000 series PWM backlight control support. (Thanks to @kingo132)\n\n#### v1.5.4\n- Added the fix for the short period garbled screen after the system boots on Ice Lake platforms. (by @0xFireWolf, also thanks @m0d16l14n1 and @kingo132)\n\n#### v1.5.3\n- Added `no-gfx-spoof` to avoid forcing `device-id` values from PCI I/O.\n- Added the backlight smoother submodule that makes brightness transitions smoother on Intel IVB+ platforms. (by @0xFireWolf)\n- MMIO Register Access submodules are now available on Intel IVB+ platforms. (by @0xFireWolf)\n- Improved ASUS-made AMD R9 380 GPU identification\n- Fixed `applbkl` property with `<00 00 00 00>` value failing to disable backlight patches\n- *Note:* This release requires Lilu v1.5.6 or later.\n\n#### v1.5.2\n- Added `device-id` spoofing support for AMD graphics\n\n#### v1.5.1\n- Added constants required for macOS 12 update\n- Added Intel Arrandale graphics support on 10.6 and 10.7 64-bit\n\n#### v1.5.0\n- Fixed AMD WX-4170 name for 67E0 device id\n- Added NVIDIA driver error logging with `-ngfxdbg`\n\n#### v1.4.9\n- Added per-GPU disabling API: inject `disable-gpu` to disable\n- Added per-GPU disabling kernel version specification: inject `disable-gpu-min` / `disable-gpu-max` to select kernel version to disable (inclusive range)\n- Added IGPU disabling API: inject `disable-gpu` to disable or use `-wegnoigpu` boot argument\n- Optimised Rocket Lake startup as IGPU is unsupported\n\n#### v1.4.8\n- Fixed debug messages from cursor manipulation with NVIDIA GPUs on macOS 11\n\n#### v1.4.7\n- Implemented `unfairgva` device property (use `<01 00 00 00>` value for MP5,1 to enable streaming DRM)\n\n#### v1.4.6\n- Backlight registers fix replaces the previous Coffee Lake backlight fix and is now available on Intel Ice Lake platforms.\n- Boot argument `igfxcflbklt=1` as well as device property `enable-cfl-backlight-fix` are deprecated and replaced by `-igfxblr` and `enable-backlight-registers-fix`.\n- Add max pixel clock override through `-igfxmpc` boot argument or `enable-max-pixel-clock-override` and `max-pixel-clock-frequency` device properties\n- Moved PNLF samples to OpenCore\n\n#### v1.4.5\n- Enabled loading in safe mode (mainly for AGDP fixes)\n- Resolved an issue that the maximum link rate fix is not working properly on Intel Comet Lake platforms. (Thanks @CoronaHack)\n- Allowed enabling `igfxrpsc` on Comet Lake\n- Fixed failed to route IsTypeCOnlySystem warning from Skylake to Ice Lake\n\n#### v1.4.4\n- Extended the maximum link rate fix: Now probe the rate from DPCD automatically and support Intel ICL platforms. (by @0xFireWolf)\n- Fixed an issue that LSPCON driver causes a page fault if the maximum link rate fix is not enabled. (by @0xFireWolf)\n\n#### v1.4.3\n- Added CFL and CML P630\n- Added MacKernelSDK with Xcode 12 compatibility\n- Fixed loading on macOS 10.11 and earlier\n\n#### v1.4.2\n- Fixed `disable-external-gpu` (`-wegnoegpu`) on some systems\n- Disabled RPS control patch by default due to a bug in 10.15.6 IGPU drivers\n- Replaced `igfxnorpsc=1` with `igfxrpsc=1` to opt-in RPS control patch\n- Support all valid Core Display Clock (CDCLK) frequencies to avoid the kernel panic of \"Unsupported CD clock decimal frequency\" on Intel ICL platforms. (by @0xFireWolf)\n- Fix the kernel panic caused by an incorrectly calculated amount of DVMT pre-allocated memory on Intel ICL platforms. (by @0xFireWolf)\n\n#### v1.4.1\n- Added `igfxmetal=1` boot argument (and `enable-metal` property) to enable Metal on offline IGPU\n- Fixed applying patches on CometLake IGPUs, thx @apocolipse\n- Added constants required for 11.0 update\n- Added the use of RPS control for all the command streamers on IGPU (disabled via `igfxnorpsc=1`)\n- Add `-igfxvesa` to disable Intel Graphics acceleration.\n- Fix black screen on igfx since 10.15.5\n- Add workaround for rare force wake timeout panics on Intel KBL and CFL.\n- Add Intel Westmere graphics support.\n\n#### v1.4.0\n- Added 0x3EA6, 0x8A53, 0x9BC4, 0x9BC5, 0x9BC8 IGPU device-id\n- Fixed `framebuffer-conX-alldata` patching regression\n- Added `disable-hdmi-patches` device property alias to `-igfxnohdmi`\n\n#### v1.3.9\n- Added `igfxdumpdelay` boot argument to delay `-igfxdump` in ms\n- Partially fix ICL framebuffer patching\n- Add support to injecting `Force_Load_FalconSMUFW` from OpenCore\n- Disabled automatic enabling of GVA for Polaris on 10.13 and lower\n- Replaced -radnogva argument with radgva=0/1 to force GVA for Polaris\n- Added `wegtree=1` boot argument (`rebuild-device-tree` property) to force device renaming on Apple FW\n\n#### v1.3.8\n- Added `igfxfw=2` boot argument and `igfxfw` IGPU property to load Apple GuC firmware\n- Added `igfxpavp=1` boot argument (and `igfxpavp` property) to force enable PAVP output\n- Added `igfxfcms=1` boot argument (and `complete-modeset` property) on Skylake and Apple\n- Improved performance with Lilu 1.4.3 APIs\n- Added `-igfxfbdbg` boot argument to debug IGPU framebuffer (debug builds only)\n- Added `igfxagdc=0` boot argument and `disable-agdc` IGPU property to disable AGDC\n- Added `igfxonln=1` boot argument and `force-online` IGPU property force online status for all displays\n- Added `igfxonlnfbs=MASK` boot argument and `force-online-framebuffers` IGPU property to override display status\n\n#### v1.3.7\n- Improved the maximum link rate fix: Now correct the value read from extended DPCD as well. (by @0xFireWolf)\n- Improved firmware loading handling on 10.15.4 (may fix booting issues on KBL+)\n- Improved support for Comet Lake IGPUs (thx @stormbirds)\n\n#### v1.3.6\n- Enabled CoreLSKD streaming patches by default for AMD hardware DRM on Ivy Bridge\n- Repurposed 64 bit for FP 2.x streaming hardware accelerated streaming patches (can be used as `shikigva=80`)\n- Fixed accelerator name update logic for X4xxx kexts\n- Fixed Verde IOGVACodec injection to make hardware video decoder work\n- Enable software TV+ decoding on all CPUs without IGPU (`shikigva=256`)\n- Added HEVC capabilities to AMD6 decoders for all GPUs (disabled by `-radnogva` or `disable-gva-support`)\n- Added HW decoder device-id spoofing via `-radcodec` boot-arg, by @osy86\n\n#### v1.3.5\n- Added Lilu 1.4.0 support, which is now the minimum supported version\n- Dropped legacy boot arguments (`-shikigva`, `-shikifps`)\n- Fixed handling `agdpmod` GPU property (in IGPUs and in conjunction with boot-arg)\n- Added `-wegtree` boot argument to force device renaming\n- Fixed FairPlay DRM playback patches on 10.15\n- Added `shikigva` and `shiki-id` aliases in IORegistry\n- Added `applbkl` aliases to IORegistry (data, 32-bit)\n- Added `applbkl-name` and `applbkl-data` IORegistry data keys to provide custom backlight data\n- Fixed applying CoreFP patches on Apple firmware, when they are not needed\n- Added `shikigva=16` (repurposed) property to use AMD hardware DRM decoder in select apps\n- Added `shikigva=128` (repurposed) property to use hardware decoder for FairPlay 1.0 (can be used as `shikigva=144`)\n- Do not disable DRM patches when `shikigva` is used even on Apple hardware for MacPro5,1 support\n\n#### v1.3.4\n- Added support for disabled AppleGraphicsDevicePolicy in AMD drivers on 10.15.1\n- Added basic support for `-radcfg` and `-radgl` on AMD Navi GPUs\n\n#### v1.3.3\n- Rework backlight panel info injection to fix Mac issues\n\n#### v1.3.2\n- Added more GPUs for detection\n- Enable IGPU graphics kernel panic workaround on 10.14.4+ on SKL\n\n#### v1.3.1\n- Fixed an issue that LSPCON driver fails to set the mode after the adapter power is off, i.e. sleep/wake up cycle.\n- Unified release archive names\n- Enforce complete IGPU modeset on Kaby Lake and newer (overridable by igfxfcmsfbs bootarg or\ncomplete-modeset-framebuffers device property)\n- Disable VRAM testing on AMD GPUs on 10.14.4+ (based on vladie's patch)\n\n#### v1.3.0\n- Fixed custom connector support for Radeon GPUs, thx @lwfitzgerald\n- Added `disable-gfx-submit` property to back `ngfxsubmit=0` boot argument\n- Added GuC firmware loading patch for latest SKL+ drivers\n- Allow loading on 10.15 without `-lilubetaall`\n- Disabled NVIDIA performance fix on 10.15, as it now is built-in\n- Enable HDMI 2.0 patches on 10.14+ (Use at own risk in case of undiscovered change)\n- Added CFL graphics kernel panic workaround on 10.14.4+\n- Added infinite loop fix when calculating dividers for Intel HDMI connections on SKL, KBL and CFL platforms.\n- Added driver support for onboard LSPCON chips to enable DisplayPort to HDMI 2.0 output on Intel IGPUs (by @0xFireWolf)\n\n#### v1.2.9\n- Added AMD Radeon VII to detected list\n- Disabled automatic framebuffer usage on Polaris GPUs\n- Added `preserve-names` device property to preserve current GPU names\n- Added `AppleVPA` patching support, replaces NoVPAJpeg.kext (thx CMMChris and uglyJoe)\n\n#### v.1.2.8\n- Added KBL graphics kernel panic workaround on 10.14.4+\n- Added IGPU DPCD link incompatible rate patch (thanks @0xFireWolf)\n\n#### v1.2.7\n- Added more IGPU device-ids to detected list\n\n#### v1.2.6\n- Added `applbkl=0` boot argument to termporarily disable `AppleBacklight` patching code\n- Fixed AMD Verde CAIL injection logic\n- Fixed breaking backlight on Apple hardware, on laptops with AMD GPUs, and on 10.11 or earlier\n- Changed CFL backlight patches to enable by default on CFL drivers only (avoids issues with faux \"KBL\" 8xxx CPUs)\n\n#### v1.2.5\n- Added support for specifying `agpmod` in external GPU properties\n- Added fatal error on `agpmod=cfgmap` on 10.14 and newer, which had no effect since 10.13.4\n- Added `igfxcflbklt` boot argument and `enable-cfl-backlight-fix` property to fix CFL backlight\n- Added max backlight frequency override via  `max-backlight-freq` IGPU property on CFL\n- Added `framebuffer-camellia` and `framebuffer-flags` patching\n- Added `AppleBacklight` patching code (based on `AppleBacklightFixup` by `hieplpvip`)\n- Added NVIDIA HDMI enabling code for firmwares that disable it by default (thanks @Fraxul)\n- Enabled CFL backlight patches by default on laptops with CFL graphics\n- Fixed SNB IGPU HDMI automatic patching\n- Fix multiple AMD GPU support improperly handling configuration properties\n\n#### v1.2.4\n- Added platform list dumping to ioreg (at IOService:/IOResources/WhateverGreen), debug build only with -igfxfbdump\n- Fixed 10.14.1 IGPU KBL/CFL support without external GPU\n- Fixed warning about legacy processors (e.g. Xeon)\n- Fixed the support for providing custom names on `Radeon RX` models\n\n#### v1.2.3\n- Added `framebuffer-cursormem` IGPU patch support (Haswell specific)\n- Added `framebuffer-conX-XXXXXXXX-alldata` IGPU patch support (platform-id specific conX-alldata)\n- Changed AGDP patch defaults to vit+pikera patch\n- Fixed semantic patches for Coffee Lake when it pretends to be Kaby\n\n#### v1.2.2\n- Added `framebuffer-conX-alldata` IGPU patch support\n- Fixed automatic frame selection with `-wegnoegpu` boot-arg or `disable-external-gpu` IGPU property (Lilu 1.2.7 or newer)\n\n#### v1.2.1\n- Added `-wegnoegpu` boot-arg and `disable-external-gpu` IGPU property to kill external GPU\n- Fixed IGPU framebuffer patches (requires Lilu 1.2.6)\n- Fixed `-shikioff` not working (note, `-liluuseroff` may be more handy)\n- Fixed loading on 10.8 and 10.9\n- Fixed device property reading for AMD CAIL overrides\n- Recovered GuC loading for internal usage (do NOT use, causes freezes and crashes)\n- Disabled HDMI 2.0 by default, use `-cdfon` boot-arg or `enable-hdmi20` IGPU/GFX0 property to enable\n\n#### v1.2.0\n- Merged GPU kexts into one (AMD, Intel, NVIDIA) including H/W acceleration (Shiki)\n- Added binary and structural Intel framebuffer patches (thx to headkaze)\n- Added Intel CFL support\n- Fixed certain AMD multimonitor issues\n- Enabled 10.14 support by default\n\n#### v1.1.8\n- Added more GPU models to automatic detection\n- Hardened solved symbol verification to avoid panics with broken kext cache\n- Fixed compiling with older Xcode\n\n#### v1.1.7\n- Added `-radgl` boot argument to disable Metal support\n- Disabled a few more unnecessary patches for 10.13.4\n\nIn order to boot with `-radgl` you may need to set the defaults:\n```\nsudo defaults write /Library/Preferences/com.apple.CoreDisplay useMetal -boolean no\nsudo defaults write /Library/Preferences/com.apple.CoreDisplay useIOP -boolean no\n```\n\n#### v1.1.6\n- Ensure proper GFX0 and HDAU renaming\n\n#### v1.1.5\n- Added more GPU models to automatic detection (including new names from 10.13.4)\n- Added automatic `CFG_USE_AGDC` disabling to avoid constant issues with 4K display sleep and broken HDMI/DP ports\n\n#### v1.1.4\n- Added automatic screen boot artifact correction (`-radlogo` is no longer necessary and is removed)\n- Added automatic `CFG_FB_LIMIT` correction to avoid issues on several Polaris GPUs on 10.13\n\n#### v1.1.3\n- Added more GPU models to automatic detection\n- Added `-rad4200` option to fix freezes and possibly improve the performance of Radeon Pro 560 on 10.13\n\n#### v1.1.2\n- Enabled the kext in installer and recovery by default\n- Improved controller start debugging\n\n#### v1.1.1\n- Added more GPU models to automatic detection\n- Rename GPU name to GFX0 only if it does not start with GFX prefix\n- Added `-radnoaudio` boot argument to avoid DP/HDMI audio autoenabling\n- Added `no-audio-autofix` gpu controller property to avoid DP/HDMI audio autoenabling\n\n#### v1.1.0\n- Requires Lilu 1.2.0 or newer\n- Added more GPU models to automatic detection\n- Fixed GPU controller name to GFX0 if not already changed\n- Fixed HDMI audio initialising even when the kext is disabled\n\n#### v1.0.4\n- Added more GPU models to automatic detection\n- Initial Vega series support\n- Fixed minor issues in HDMI audio enabling code\n\n#### v1.0.3\n- Fixed `radpg` bit mask working incorrectly\n- Added manual tuning of `aty_config`, `aty_properties`, and `cail_properties` via ACPI\n- Changed HDMI audio layout-id to match HDEF layout-id if available\n\n#### v1.0.2\n- Added more GPU models to automatic detection\n- Added basic automatic HDMI audio correction\n- Fixed WhateverName os version requirements\n- Disabled connector ordering by default (use `connector-priority` if needed)\n- Changed `connector-priority` default type importance\n- Added version info for easier debugging\n\n#### v1.0.1\n- Added more GPU models to automatic detection\n- Disabled DVI transmitter changes by default (use `-raddvi` boot-arg)\n- Added IOAccelDeviceGetName correction\n- Added libWhateverName.dylib with an app for GPU GL/Compute/Metal engine name correction\n\n#### v1.0.0\n- Initial release\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4443359375,
          "content": "Copyright (c) 2018, vit9696\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Manual",
          "type": "tree",
          "content": null
        },
        {
          "name": "Prebuilt",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.384765625,
          "content": "WhateverGreen\n=============\n\n[![Build Status](https://github.com/acidanthera/WhateverGreen/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/acidanthera/WhateverGreen/actions) [![Scan Status](https://scan.coverity.com/projects/16177/badge.svg?flat=1)](https://scan.coverity.com/projects/16177)\n\n[Lilu](https://github.com/acidanthera/Lilu) plugin providing patches to select GPUs on macOS. Requires Lilu 1.5.6 or newer.\n\n#### Features\n\n- Fixes boot to black screen on AMD and NVIDIA\n- Fixes sleep wake to black screen on AMD\n- Fixes boot screen distortion in certain cases\n- Fixes transmitter/encoder in autodetected connectors for multimonitor support (`-raddvi`)\n- Fixes HD 7730/7750/7770/R7 250/R7 250X initialisation (`radpg=15`)\n- Allows tuning of aty_config, aty_properties, cail_properties via ACPI\n- Allows enforcing 24-bit mode on unsupported displays (`-rad24`)\n- Allows booting without video acceleration (`-radvesa`)\n- Allows automatically setting GPU model name or providing it manually for RadeonFramebuffer\n- Allows specifying custom connectors via device properties for RadeonFramebuffer\n- Allows tuning autodetected connector priority via device properties (HD 7xxx or newer)\n- Fixes an issue in AppleGraphicsDevicePolicy.kext so that we could use a MacPro6,1 board-id/model combination,  without the usual hang with a black screen. [Patching AppleGraphicsDevicePolicy.kext](https://pikeralpha.wordpress.com/2015/11/23/patching-applegraphicsdevicepolicy-kext)\n- Modifies macOS to recognize NVIDIA's web drivers as platform binaries. This resolves the issue with transparent windows without content, which appear for applications that use Metal and have Library Validation enabled. Common affected applications are iBooks and Little Snitch Network Monitor, though this patch is universal and fixes them all. [NVWebDriverLibValFix](https://github.com/mologie/NVWebDriverLibValFix)\n- Injects IOVARendererID into GPU properties (required for Shiki-based solution for non-freezing Intel and/or any discrete GPU)\n- For Intel HD digital audio HDMI, DP, Digital DVI (Patches connector-type DP -> HDMI)\n- Fixes NVIDIA GPU interface stuttering on 10.13 (official and web drivers)\n- Fixes the kernel panic caused by an invalid link rate reported by DPCD on some laptops with Intel IGPU.\n- Fixes the infinite loop on establishing Intel HDMI connections with a higher pixel clock rate on Skylake, Kaby Lake and Coffee Lake platforms.\n- Implements the driver support for onboard LSPCON chips to enable DisplayPort to HDMI 2.0 output on some platforms with Intel IGPU.\n- Enforces complete modeset on non-built-in displays on Kaby Lake and newer to fix booting to black screen.\n- Allows non-supported cards to use HW video encoder (`-radcodec`)\n- Fixes choppy video playback on Intel Kaby Lake and newer.\n- Fixes black screen on Intel HD since 10.15.5.\n- Adds workaround for rare force wake timeout panics on Intel KBL and CFL.\n- Supports all valid Core Display Clock (CDCLK) freqencies on Intel ICL platforms.\n- Fixes the kernel panic caused by an incorrectly calculated amount of DVMT pre-allocated memory on Intel ICL platforms.\n- Makes brightness transitions smoother on Intel IVB+ platforms.\n- Fixes the short period garbled screen issue after the system boots on Intel ICL platforms.\n- Fixes the PWM backlight control of the built-in display that is directly wired to AMD Radeon RX 5000 series graphic cards.\n- Fixes the freeze during iGPU initialization that may occur on certain laptops such as Chromebooks on macOS 10.15 and later.\n\n#### Documentation\n\nRead [FAQs](./Manual/) and avoid asking any questions. No support is provided for the time being.\n\n#### Boot arguments\n\n##### Global\n\n| Boot argument \t| DeviceProperties \t| Description \t|\n|---\t|---\t|---\t|\n| `-cdfon` \t\t\t  | `enable-hdmi20`  | Enable HDMI 2.0 patches on iGPU and dGPU (Not implemented for macOS 11+)  |\n| `-wegbeta` \t\t  | N/A \t| Enable WhateverGreen on unsupported OS versions (15 and below are enabled by default) \t|\n| `-wegdbg` \t\t  | N/A \t| Enable debug printing (available in DEBUG binaries) \t|\n| `-wegoff` \t\t  | N/A \t| Disable WhateverGreen \t|\n\n##### Switch GPU\n\n| Boot argument \t| DeviceProperties \t| Description \t|\n|---\t|---\t|---\t|\n| `-wegnoegpu` \t\t| `disable-gpu` property to each GFX0 \t| Disable all external GPUs \t|\n| `-wegnoigpu` \t\t| `disable-gpu` property to IGPU \t| Disable internal GPU \t|\n| `-wegswitchgpu` | `switch-to-external-gpu` property to IGPU \t| Disable internal GPU when external GPU is installed \t|\n\n##### AMD Radeon\n\n| Boot argument \t| DeviceProperties \t| Description \t|\n|---\t|---\t|---\t|\n| `-rad24` \t\t\t  | N/A \t| Enforce 24-bit display mode \t|\n| `-radcodec` \t\t| N/A \t| Force the spoofed PID to be used in AMDRadeonVADriver \t|\n| `-raddvi` \t\t  | N/A \t| Enable DVI transmitter correction (required for 290X, 370, etc.) \t|\n| `-radvesa` \t\t  | N/A \t| Disable ATI/AMD video acceleration completely \t|\n| `radpg=15` \t\t  | N/A \t| Disable several power-gating modes (see [FAQ Radeon](./Manual/FAQ.Radeon.en.md), required for Cape Verde GPUs: Radeon HD 7730/7750/7770/R7 250/R7 250X) \t|\n\n##### Board-id\n\n| Boot argument \t  | DeviceProperties \t| Description \t|\n|---\t|---\t|---\t  |\n| `agdpmod=ignore` \t| `agdpmod` property to external GPU \t| Disables AGDP patches (`vit9696,pikera` value is implicit default for external GPUs) \t|\n| `agdpmod=pikera` \t| `agdpmod` property to external GPU \t| Replaces `board-id` with `board-ix` \t|\n| `agdpmod=vit9696` | `agdpmod` property to external GPU \t| Disable check for `board-id` \t|\n\n##### Nvidia\n\n| Boot argument \t  | DeviceProperties \t| Description \t|\n|---\t|---\t|---\t  |\n| `-ngfxdbg` \t\t    | N/A \t| Enable NVIDIA driver error logging \t|\n| `ngfxcompat=1` \t  | `force-compat` \t| Ignore compatibility check in NVDAStartupWeb \t|\n| `ngfxgl=1` \t\t    | `disable-metal` \t| Disable Metal support on NVIDIA \t|\n| `ngfxsubmit=0` \t  | `disable-gfx-submit` \t| Disable interface stuttering fix on 10.13 \t|\n\n##### Intel HD Graphics\n\n| Boot argument \t  | DeviceProperties \t| Description \t|\n|---\t|---\t|---\t  |\n| `-igfxblr` \t\t    | `enable-backlight-registers-fix` property on IGPU \t| Fix backlight registers on KBL, CFL and ICL platforms \t|\n| `-igfxbls` \t\t    | `enable-backlight-smoother` property on IGPU \t| Make brightness transitions smoother on IVB+ platforms. [Read the manual](./Manual/FAQ.IntelHD.en.md#customize-the-behavior-of-the-backlight-smoother-to-improve-your-experience) \t|\n| `-igfxblt` | `enable-backlight-registers-alternative-fix` property on IGPU  | An alternative to the Backlight Registers Fix and make Backlight Smoother work on KBL/CFL platforms running macOS 13.4 or later. [Read the manual](./Manual/FAQ.IntelHD.en.md#fix-the-3-minute-black-screen-issue-on-cfl-platforms-running-macos-134-or-later) |\n| `-igfxcdc` \t\t    | `enable-cdclk-frequency-fix` property on IGPU \t| Support all valid Core Display Clock (CDCLK) frequencies on ICL platforms. [Read the manual](./Manual/FAQ.IntelHD.en.md#support-all-possible-core-display-clock-cdclk-frequencies-on-icl-platforms) \t |\n| `-igfxdbeo` \t\t  | `enable-dbuf-early-optimizer` property on IGPU \t| Fix the Display Data Buffer (DBUF) issues on ICL+ platforms. [Read the manual](./Manual/FAQ.IntelHD.en.md#fix-the-issue-that-the-builtin-display-remains-garbled-after-the-system-boots-on-icl-platforms) \t|\n| `-igfxdump` \t\t  | N/A \t| Dump IGPU framebuffer kext to `/var/log/AppleIntelFramebuffer_X_Y` (available in DEBUG binaries) \t|\n| `-igfxdvmt` \t\t  | `enable-dvmt-calc-fix` property on IGPU \t| Fix the kernel panic caused by an incorrectly calculated amount of DVMT pre-allocated memory on Intel ICL platforms \t|\n| `-igfxfbdump` \t\t| N/A \t| Dump native and patched framebuffer table to ioreg at `IOService:/IOResources/WhateverGreen` \t|\n| `-igfxhdmidivs` \t| `enable-hdmi-dividers-fix` property on IGPU \t| Fix the infinite loop on establishing Intel HDMI connections with a higher pixel clock rate on SKL, KBL and CFL platforms \t|\n| `-igfxi2cdbg` \t  | N/A \t| Enable verbose output in I2C-over-AUX transactions (only for debugging purposes) \t|\n| `-igfxlspcon` \t  | `enable-lspcon-support` property on IGPU \t| Enable the driver support for onboard LSPCON chips.<br> [Read the manual](./Manual/FAQ.IntelHD.en.md#lspcon-driver-support-to-enable-displayport-to-hdmi-20-output-on-igpu) \t|\n| `-igfxmlr` \t\t    | `enable-dpcd-max-link-rate-fix` property on IGPU \t| Apply the maximum link rate fix \t|\n| `-igfxmpc` \t\t    | `enable-max-pixel-clock-override` and `max-pixel-clock-frequency` properties on IGPU \t| Increase max pixel clock (as an alternative to patching `CoreDisplay.framework` \t|\n| `-igfxnohdmi` \t  | `disable-hdmi-patches` \t| Disable DP to HDMI conversion patches for digital sound \t|\n| `-igfxnotelemetryload` | `disable-telemetry-load` property on IGPU  | Disables iGPU telemetry loading that may cause a freeze during startup on certain laptops such as Chromebooks\n| `-igfxsklaskbl` \t| N/A \t| Enforce Kaby Lake (KBL) graphics kext being loaded and used on Skylake models (KBL `device-id` and `ig-platform-id` are required. Not required on macOS 13 and above) \t|\n| `-igfxtypec` \t\t \t| N/A \t| Force DP connectivity for Type-C platforms \t|\n| `-igfxvesa` \t\t  | N/A \t| Disable Intel Graphics acceleration \t|\n| `igfxagdc=0` \t\t  | `disable-agdc` property on IGPU \t| Disable AGDC \t|\n| `igfxfcms=1` \t\t  | `complete-modeset` property on IGPU \t| Force complete modeset on Skylake or Apple firmwares \t|\n| `igfxfcmsfbs=` \t  | `complete-modeset-framebuffers` property on IGPU \t| Specify indices of connectors for which complete modeset must be enforced. Each index is a byte in a 64-bit word; for example, value `0x010203` specifies connectors 1, 2, 3. If a connector is not in the list, the driver's logic is used to determine whether complete modeset is needed. Pass `-1` to disable.  \t|\n| `igfxframe=frame` | `AAPL,ig-platform-id` or `AAPL,snb-platform-id` property on IGPU \t| Inject a dedicated framebuffer identifier into IGPU (only for TESTING purposes) \t|\n| `igfxfw=2` \t\t    | `igfxfw` property on IGPU \t| Force loading of Apple GuC firmware \t|\n| `igfxgl=1` \t\t    | `disable-metal` \t| Disable Metal support on Intel \t|\n| `igfxmetal=1` \t  | `enable-metal` \t| Force enable Metal support on Intel for offline rendering \t|\n| `igfxonln=1` \t\t  | `force-online` property on IGPU \t| Force online status on all displays \t|\n| `igfxonlnfbs=MASK`| `force-online-framebuffers` property on IGPU \t| Specify indices of connectors for which online status is enforced. Format is similar to `igfxfcmsfbs` \t|\n| `igfxpavp=1` \t\t  | `igfxpavp` property on IGPU \t| Force enable PAVP output \t|\n| `igfxrpsc=1` \t\t \t| `rps-control` property on IGPU \t| Enable RPS control patch (improves IGPU performance) \t|\n| `igfxsnb=0` \t\t  | N/A \t| Disable IntelAccelerator name fix for Sandy Bridge CPUs \t|\n\n##### Backlight\n\n| Boot argument \t| DeviceProperties \t| Description \t|\n|---\t|---\t|---\t|\n| `applbkl=3` \t\t| `applbkl` property \t| Enable PWM backlight control of AMD Radeon RX 5000 series graphic cards [read here.](./Manual/FAQ.Radeon.en.md) \t|\n| `applbkl=0` \t\t| `applbkl` property on IGPU \t| Disable AppleBacklight.kext patches for IGPU. <br>In case of custom AppleBacklight profile [read here](./Manual/FAQ.OldPlugins.en.md) \t|\n\n##### 2nd Boot stage\n\n| Boot argument \t| DeviceProperties \t| Description \t|\n|---\t|---\t|---\t|\n| `gfxrst=1` \t\t  | N/A \t| Prefer drawing Apple logo at 2nd boot stage instead of framebuffer copying \t|\n| `gfxrst=4` \t\t  | N/A \t| Disable framebuffer init interaction during 2nd boot stage \t|\n\n##### Misc\n\n| Boot argument \t| DeviceProperties \t| Description \t|\n|---\t|---\t|---\t|\n| `wegtree=1` \t\t| `rebuild-device-tree` property \t| Force device renaming on Apple FW \t|\n\n#### Credits\n\n- [Apple](https://www.apple.com) for macOS\n- [AMD](https://www.amd.com) for ATOM VBIOS parsing code\n- [The PCI ID Repository](http://pci-ids.ucw.cz) for multiple GPU model names\n- [Andrey1970AppleLife](https://github.com/Andrey1970AppleLife) for [FAQs](./Manual/)\n- [FireWolf](https://github.com/0xFireWolf/) for the DPCD maximum link rate fix, infinite loop fix for Intel HDMI connections, LSPCON driver support, Core Display Clock frequency fix for ICL platforms, DVMT pre-allocated memory calculation fix for ICL platforms, Backlight Smoother for IVB+ platforms, Display Data Buffer fix for ICL platforms, and Backlight Registers Alternative Fix.\n- [Floris497](https://github.com/Floris497) for the CoreDisplay [patches](https://github.com/Floris497/mac-pixel-clock-patch-v2)\n- [Fraxul](https://github.com/Fraxul) for original CFL backlight patch\n- [headkaze](https://github.com/headkaze) for Intel framebuffer patching code and CFL backlight patch improvements\n- [hieplpvip](https://github.com/hieplpvip) for initial AppleBacklight patching plugin\n- [igork](https://applelife.ru/members/igork.564/) for power-gating patch discovery and various FP research\n- [lvs1974](https://applelife.ru/members/lvs1974.53809) for continuous implementation of Intel and NVIDIA fixing code\n- [mologie](https://github.com/mologie/NVWebDriverLibValFix) for creating NVWebDriverLibValFix.kext which forces macOS to recognize NVIDIA's web drivers as platform binaries\n- [PMheart](https://github.com/PMheart) for CoreDisplay patching code and Intel fix backporting\n- [RehabMan](https://github.com/RehabMan) for various enhancements\n- [RemB](https://applelife.ru/members/remb.8064/) for continuing sleep-wake research and finding the right register for AMD issues\n- [Vandroiy](https://applelife.ru/members/vandroiy.83653/) for maintaining the GPU model detection database\n- [YungRaj](https://github.com/YungRaj) and [syscl](https://github.com/syscl) for Intel fix backporting\n- [vit9696](https://github.com/vit9696) for writing the software and maintaining it\n"
        },
        {
          "name": "ResourceConverter",
          "type": "tree",
          "content": null
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "WhateverGreen.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "WhateverGreen",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}