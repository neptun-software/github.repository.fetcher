{
  "metadata": {
    "timestamp": 1736565330158,
    "page": 151,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "baidu/lac",
      "stars": 3898,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.3505859375,
          "content": "# Contributors should be added to this file in the following format:\n# Name or Organization <email address>\n\nBaidu.com, Inc.\n\n# Initial version authors:\nSun Shuqi <sunshuqi01@baidu.com>\nSun Huifeng <sunhuifeng@baidu.com>\nJiao Zhenyu <jiaozhenyu@baidu.com>\nYang Yu <yangyu16@baidu.com>\n\n# Partial list of contributors:\nHuang Dingbang <huangdingbang@baidu.com>\n"
        },
        {
          "name": "Android",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 8.3447265625,
          "content": "cmake_minimum_required(VERSION 3.0)\nproject(lac CXX C)\n\noption(WITH_STATIC_LIB \"Compile demo with static/shared library, default use static.\"  ON)\n\noption(WITH_DEMO \"Compile C++ demo or not, default yes\" ON)\noption(WITH_JNILIB \"Compile jni library for Java or not, default not\" OFF)\n\n# set paddle and java path\n#set(PADDLE_ROOT \"D:/lac/fluid_inference_install_dir\")\n#set(JAVA_HOME \"C:/Program Files/Java/jdk1.8.0_121\")\n\nmessage(STATUS \"CXX compiler: ${CMAKE_CXX_COMPILER}, version: \"\n        \"${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}\")\nmessage(STATUS \"C compiler: ${CMAKE_C_COMPILER}, version: \"\n        \"${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER_VERSION}\")\n#[[\nif(CMAKE_COMPILER_IS_GNUCXX)\n    execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)\n    if (GCC_VERSION VERSION_LESS 8.2)\n        message(FATAL_ERROR \"A gcc compiler with a version >= 8.2 is needed.\")\n    endif()\nelse()\n    message(FATAL_ERROR \"A gcc compiler is needed.\")\nendif(CMAKE_COMPILER_IS_GNUCXX)\n]]\nmacro(safe_set_static_flag)\n    foreach(flag_var\n        CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE\n        CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)\n      if(${flag_var} MATCHES \"/MD\")\n        string(REGEX REPLACE \"/MD\" \"/MT\" ${flag_var} \"${${flag_var}}\")\n      endif(${flag_var} MATCHES \"/MD\")\n    endforeach(flag_var)\nendmacro()\n\nif(NOT DEFINED PADDLE_ROOT)\n    message(FATAL_ERROR \"please set PADDLE_ROOT with -DPADDLE_ROOT=/path/paddle/lib\")\nendif()\nif (WITH_JNILIB AND NOT DEFINED JAVA_HOME)\n    message(FATAL_ERROR \"please set JAVA_HOME with -DJAVA_HOME=/path/of/java\")\nendif()\n\nif (IS_ABSOLUTE ${PADDLE_ROOT})\n    set(PADDLE_ABS_PATH ${PADDLE_ROOT})\nelse ()\n    get_filename_component(PADDLE_ABS_PATH ${CMAKE_BINARY_DIR}/${PADDLE_ROOT}/ ABSOLUTE)\nendif ()\n\nmessage(STATUS \"paddle include: ${PADDLE_ABS_PATH}/paddle/include\") \nmessage(STATUS \"paddle lib: ${PADDLE_ABS_PATH}/paddle/lib\")\ninclude_directories(${PADDLE_ABS_PATH}/paddle/include)\nset(PADDLE_LIB_THIRD_PARTY_PATH \"${PADDLE_ABS_PATH}/third_party/install/\")\ninclude_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}protobuf/include\")\ninclude_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}glog/include\")\ninclude_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}gflags/include\")\ninclude_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}xxhash/include\")\n\nlink_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}protobuf/lib\")\nlink_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}glog/lib\")\nlink_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}gflags/lib\")\nlink_directories(\"${PADDLE_LIB_THIRD_PARTY_PATH}xxhash/lib\")\nlink_directories(\"${PADDLE_ABS_PATH}/paddle/lib\")\n\n\n#link_libraries(paddle_fluid)\n\nif (WIN32)\n  add_definitions(\"/DGOOGLE_GLOG_DLL_DECL=\")\n  if (MSVC)\n    option(MSVC_STATIC_CRT \"use static C Runtime library by default\" ON)\n    set(CMAKE_C_FLAGS_DEBUG   \"${CMAKE_C_FLAGS_DEBUG} /bigobj /MTd\")\n    set(CMAKE_C_FLAGS_RELEASE  \"${CMAKE_C_FLAGS_RELEASE} /bigobj /MT\")\n    set(CMAKE_CXX_FLAGS_DEBUG  \"${CMAKE_CXX_FLAGS_DEBUG} /bigobj /MTd\")\n    set(CMAKE_CXX_FLAGS_RELEASE   \"${CMAKE_CXX_FLAGS_RELEASE} /bigobj /MT\")\n    if (WITH_STATIC_LIB)\n      safe_set_static_flag()\n      add_definitions(-DSTATIC_LIB)\n    endif()\n  endif()\nelse()\n    set(CMAKE_CXX_FLAGS \"-O3 -g -pipe -W -Wall -Wno-unused-parameter -fPIC -fpermissive -std=gnu++11\")\nendif()\n\n\n# add mkldnn library if it exitsts\nset (mkldnn_inc_path ${PADDLE_ABS_PATH}/third_party/install/mkldnn/include)\nset (mkldnn_lib_path ${PADDLE_ABS_PATH}/third_party/install/mkldnn/lib)\nif (EXISTS ${mkldnn_inc_path} AND EXISTS ${mkldnn_lib_path})\n    message(STATUS \"MKLDNN lib found.\")\n    include_directories(${PADDLE_ABS_PATH}/third_party/install/mkldnn/include)\n    if (WIN32)\n        set (MKLDNN_LIB ${mkldnn_lib_path}/mkldnn.lib)\n    else (WIN32)\n        set (MKLDNN_LIB ${mkldnn_lib_path}/libmkldnn.so.0)\n    endif (WIN32)\nelse ()\n    message(STATUS \"MKLDNN lib not found.\")\nendif()\n\n# add mklml library if it exists\nset (mklml_inc_path ${PADDLE_ABS_PATH}/third_party/install/mklml/include)\nset (mklml_lib_path ${PADDLE_ABS_PATH}/third_party/install/mklml/lib)\nif (EXISTS ${mklml_inc_path} AND EXISTS ${mklml_lib_path})\n    message(STATUS \"MKLML lib found.\")   \n    include_directories(${PADDLE_ABS_PATH}/third_party/install/mklml/include)\n    if(WIN32)\n        set(MATH_LIB ${mklml_lib_path}/mklml${CMAKE_STATIC_LIBRARY_SUFFIX}\n            ${mklml_lib_path}/libiomp5md${CMAKE_STATIC_LIBRARY_SUFFIX})\n    else()\n        set(MATH_LIB ${mklml_lib_path}/libmklml_intel${CMAKE_SHARED_LIBRARY_SUFFIX}\n            ${mklml_lib_path}/libiomp5${CMAKE_SHARED_LIBRARY_SUFFIX})\n    endif()\nelse ()\n    message(STATUS \"MKLML lib not found.\")\nendif()\n\n# add openblas library if it exists\nset (openblas_inc_path ${PADDLE_ABS_PATH}/third_party/install/openblas/include)\nset (openblas_lib_path ${PADDLE_ABS_PATH}/third_party/install/openblas/lib)\nif (EXISTS ${openblas_inc_path} AND EXISTS ${openblas_lib_path})\n    message(STATUS \"openblas lib found.\")   \n    include_directories(${PADDLE_ABS_PATH}/third_party/install/openblas/include)\n    if(WIN32)\n        set(MATH_LIB ${openblas_lib_path}/openblas${CMAKE_STATIC_LIBRARY_SUFFIX})\n    else()\n        set(MATH_LIB ${openblas_lib_path}/libopenblas${CMAKE_STATIC_LIBRARY_SUFFIX})\n    endif()\nelse ()\n    message(STATUS \"openblas lib not found.\")\nendif()\n\nif(WITH_STATIC_LIB)\n    set(DEPS ${PADDLE_ABS_PATH}/paddle/lib/libpaddle_fluid${CMAKE_STATIC_LIBRARY_SUFFIX})\nelse()\n    if(WIN32)\n        set(DEPS ${PADDLE_ABS_PATH}/paddle/lib/paddle_fluid${CMAKE_SHARED_LIBRARY_SUFFIX})\n    else()\n        set(DEPS ${PADDLE_ABS_PATH}/paddle/lib/libpaddle_fluid${CMAKE_SHARED_LIBRARY_SUFFIX})\n    endif()\nendif()\n\nif (NOT WIN32)\n  set(EXTERNAL_LIB \"-ldl -lpthread\")\n  set(DEPS ${DEPS}\n      ${MATH_LIB} ${MKLDNN_LIB}\n      glog gflags protobuf  xxhash\n      ${EXTERNAL_LIB})\nelse()\n  set(DEPS ${DEPS}\n      ${MATH_LIB} ${MKLDNN_LIB}\n      glog gflags_static libprotobuf  xxhash ${EXTERNAL_LIB})\n  set(DEPS ${DEPS} libcmt shlwapi.lib)\nendif(NOT WIN32)\n\n\ninclude_directories(c++/include)\naux_source_directory(c++/src SOURCE)\n\n\nmessage(STATUS \"'${PROJECT_SOURCE_DIR}' output dir\")\nadd_library(lac ${SOURCE})\n\n# for c++ binary demo\nif (WITH_DEMO)\nadd_executable(lac_demo c++/lac_demo.cpp)\nset_target_properties(lac_demo PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)\ntarget_link_libraries(lac_demo lac ${DEPS})\n\nadd_executable(lac_multi c++/lac_multi.cpp)\nset_target_properties(lac_multi PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)\ntarget_link_libraries(lac_multi lac ${DEPS})\nendif()\n\n# for jni lib\nif (WITH_JNILIB)\ninclude_directories(./java/cpp ${JAVA_HOME}/include ${JAVA_HOME}/include/linux/ ${JAVA_HOME}/include/darwin ${JAVA_HOME}/include/win32)\nadd_library(lacjni SHARED ${SOURCE} ./java/cpp/lac_jni.cpp)\nset_target_properties(lacjni PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)\ntarget_link_libraries(lacjni ${DEPS})\nendif()\n\n\nif(WIN32)\n  if (EXISTS ${mklml_inc_path} AND EXISTS ${mklml_lib_path})\n    add_custom_command(TARGET lac_demo POST_BUILD\n          COMMAND ${CMAKE_COMMAND} -E copy ${mklml_lib_path}/mklml.dll ${CMAKE_BINARY_DIR}/Release\n          COMMAND ${CMAKE_COMMAND} -E copy ${mklml_lib_path}/libiomp5md.dll ${CMAKE_BINARY_DIR}/Release\n          COMMAND ${CMAKE_COMMAND} -E copy ${mkldnn_lib_path}/mkldnn.dll  ${CMAKE_BINARY_DIR}/Release\n    )\n  else()\n    add_custom_command(TARGET lac_demo POST_BUILD\n          COMMAND ${CMAKE_COMMAND} -E copy ${openblas_lib_path}/openblas.dll ${CMAKE_BINARY_DIR}/Release\n    )\n  endif()\n  if(NOT WITH_STATIC_LIB)\n      add_custom_command(TARGET lac_demo POST_BUILD \n        COMMAND ${CMAKE_COMMAND} -E copy \"${PADDLE_ABS_PATH}/paddle/lib/paddle_fluid.dll\" ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}\n      )\n  endif()\nendif()\n\n\ninstall(TARGETS lac DESTINATION ${PROJECT_SOURCE_DIR}/output/lib)\ninstall(FILES ${PROJECT_SOURCE_DIR}/c++/include/lac.h\n        DESTINATION ${PROJECT_SOURCE_DIR}/output/include)\n\n\nif (WITH_DEMO)\ninstall(TARGETS lac_demo DESTINATION ${PROJECT_SOURCE_DIR}/output/bin)\ninstall(TARGETS lac_multi DESTINATION ${PROJECT_SOURCE_DIR}/output/bin)\nendif()\n\nif (WITH_JNILIB)\ninstall(TARGETS lacjni DESTINATION ${PROJECT_SOURCE_DIR}/output/java)\n\ninstall(FILES ${PROJECT_SOURCE_DIR}/java/com/baidu/nlp/LAC.java\n        DESTINATION ${PROJECT_SOURCE_DIR}/output/java/com/baidu/nlp/)\ninstall(FILES ${PROJECT_SOURCE_DIR}/java/LacDemo.java\n        DESTINATION ${PROJECT_SOURCE_DIR}/output/java)\ninstall(FILES ${PROJECT_SOURCE_DIR}/java/LacMulti.java\n        DESTINATION ${PROJECT_SOURCE_DIR}/output/java)\nendif()\n\n\n"
        },
        {
          "name": "Changelog",
          "type": "blob",
          "size": 0.2890625,
          "content": "2020-10-25: version 2.1.0\n1. 词性标注模型粒度更新为字词混合，在效果保持不变的情况下，性能提升最高可达20%。\n2. 新增加词语关键度分类功能，在维持LAC词性标注结果下可以标注词语关键程度。\n3. 修复了模型训练速度慢问题。\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.150390625,
          "content": "Copyright (c) 2018 Baidu, Inc. All Rights Reserved\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) 2018 Baidu, Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.5234375,
          "content": "## 工具介绍\nLAC全称Lexical Analysis of Chinese，是百度自然语言处理部研发的一款联合的词法分析工具，实现中文分词、词性标注、专名识别等功能。该工具具有以下特点与优势：\n- **效果好**：通过深度学习模型联合学习分词、词性标注、专名识别任务，词语重要性，整体效果F1值超过0.91，词性标注F1值超过0.94，专名识别F1值超过0.85，效果业内领先。\n- **效率高**：精简模型参数，结合Paddle预测库的性能优化，CPU单线程性能达800QPS，效率业内领先。\n- **可定制**：实现简单可控的干预机制，精准匹配用户词典对模型进行干预。词典支持长片段形式，使得干预更为精准。\n- **调用便捷**：**支持一键安装**，同时提供了Python、Java和C++调用接口与调用示例，实现快速调用和集成。\n- **支持移动端**: 定制超轻量级模型，体积仅为2M，主流千元手机单线程性能达200QPS，满足大多数移动端应用的需求，同等体积量级效果业内领先。\n\n## 安装与使用\n在此我们主要介绍Python安装与使用，其他语言使用：\n- [C++](./c++/README.md)\n- [JAVA](./java/README.md)\n- [Android](./Android/README.md)\n\n### 安装说明\n代码兼容Python2/3\n- 全自动安装: `pip install lac`\n- 半自动下载：先下载[http://pypi.python.org/pypi/lac/](http://pypi.python.org/pypi/lac/)，解压后运行 `python setup.py install`\n- 安装完成后可在命令行输入`lac`或`lac --segonly`,`lac --rank`启动服务，进行快速体验。\n\n  > 国内网络可使用百度源安装，安装速率更快：`pip install lac -i https://mirror.baidu.com/pypi/simple`\n\n### 功能与使用\n#### 分词\n- 代码示例：\n```python\nfrom LAC import LAC\n\n# 装载分词模型\nlac = LAC(mode='seg')\n\n# 单个样本输入，输入为Unicode编码的字符串\ntext = u\"LAC是个优秀的分词工具\"\nseg_result = lac.run(text)\n\n# 批量样本输入, 输入为多个句子组成的list，平均速率会更快\ntexts = [u\"LAC是个优秀的分词工具\", u\"百度是一家高科技公司\"]\nseg_result = lac.run(texts)\n```\n- 输出：\n\n```text\n【单样本】：seg_result = [LAC, 是, 个, 优秀, 的, 分词, 工具]\n【批量样本】：seg_result = [[LAC, 是, 个, 优秀, 的, 分词, 工具], [百度, 是, 一家, 高科技, 公司]]\n```\n\n#### 词性标注与实体识别\n- 代码示例：\n```python\nfrom LAC import LAC\n\n# 装载LAC模型\nlac = LAC(mode='lac')\n\n# 单个样本输入，输入为Unicode编码的字符串\ntext = u\"LAC是个优秀的分词工具\"\nlac_result = lac.run(text)\n\n# 批量样本输入, 输入为多个句子组成的list，平均速率更快\ntexts = [u\"LAC是个优秀的分词工具\", u\"百度是一家高科技公司\"]\nlac_result = lac.run(texts)\n```\n- 输出：\n\n>每个句子的输出其切词结果word_list以及对每个单词的标注tags_list，其格式为（word_list, tags_list)\n```text\n【单样本】： lac_result = ([百度, 是, 一家, 高科技, 公司], [ORG, v, m, n, n])\n【批量样本】：lac_result = [\n                    ([百度, 是, 一家, 高科技, 公司], [ORG, v, m, n, n]),\n                    ([LAC, 是, 个, 优秀, 的, 分词, 工具], [nz, v, q, a, u, n, n])\n                ]\n```\n\n词性和专名类别标签集合如下表，其中我们将最常用的4个专名类别标记为大写的形式：\n\n| 标签 | 含义     | 标签 | 含义     | 标签 | 含义     | 标签 | 含义     |\n| ---- | -------- | ---- | -------- | ---- | -------- | ---- | -------- |\n| n    | 普通名词 | f    | 方位名词 | s    | 处所名词  | nw   | 作品名   |\n| nz   | 其他专名 | v    | 普通动词 | vd   | 动副词   | vn   | 名动词   |\n| a    | 形容词   | ad   | 副形词   | an   | 名形词   | d    | 副词     |\n| m    | 数量词   | q    | 量词     | r    | 代词     | p    | 介词     |\n| c    | 连词     | u    | 助词     | xc   | 其他虚词 | w    | 标点符号 |\n| PER  | 人名     | LOC  | 地名     | ORG  | 机构名   | TIME | 时间     |\n\n#### 词语重要性\n- 代码示例：\n```python\nfrom LAC import LAC\n\n# 装载词语重要性模型\nlac = LAC(mode='rank')\n\n# 单个样本输入，输入为Unicode编码的字符串\ntext = u\"LAC是个优秀的分词工具\"\nrank_result = lac.run(text)\n\n# 批量样本输入, 输入为多个句子组成的list，平均速率会更快\ntexts = [u\"LAC是个优秀的分词工具\", u\"百度是一家高科技公司\"]\nrank_result = lac.run(texts)\n```\n- 输出：\n\n```text\n【单样本】：rank_result = [['LAC', '是', '个', '优秀', '的', '分词', '工具'], \n                        [nz, v, q, a, u, n, n],[3, 0, 0, 2, 0, 3, 1]]\n【批量样本】：rank_result = [\n                    (['LAC', '是', '个', '优秀', '的', '分词', '工具'], \n                     [nz, v, q, a, u, n, n], [3, 0, 0, 2, 0, 3, 1]),  \n                    (['百度', '是', '一家', '高科技', '公司'], \n                     [ORG, v, m, n, n], [3, 0, 2, 3, 1])\n                ]\n```\n词语重要性各类别标签集合如下表，我们使用4-Level梯度进行分类：\n\n| 标签 | 含义       | 常见于词性|\n| ---- | --------  | ----   | \n| 0    | query中表述的冗余词   |  p, w, xc ...    | \n| 1    | query中限定较弱的词   |  r, c, u ...     | \n| 2    | query中强限定的词     |  n, s, v ...     | \n| 3    | query中的核心词       |  nz, nw, LOC ... | \n\n\n#### 定制化功能\n\n在模型输出的基础上，LAC还支持用户配置定制化的切分结果和专名类型输出。当模型预测匹配到词典的中的item时，会用定制化的结果替代原有结果。为了实现更加精确的匹配，我们支持以由多个单词组成的长片段作为一个item。\n\n我们通过装载词典文件的形式实现该功能，词典文件每行表示一个定制化的item，由一个单词或多个连续的单词组成，每个单词后使用'/'表示标签，如果没有'/'标签则会使用模型默认的标签。每个item单词数越多，干预效果会越精准。\n\n- 词典文件示例\n\n  > 这里仅作为示例，展现各种需求情况下的结果。后续还将开放以通配符配置词典的模式，敬请期待。\n```text\n春天/SEASON\n花/n 开/v\n秋天的风\n落 阳\n```\n- 代码示例\n```python\nfrom LAC import LAC\nlac = LAC()\n\n# 装载干预词典, sep参数表示词典文件采用的分隔符，为None时默认使用空格或制表符'\\t'\nlac.load_customization('custom.txt', sep=None)\n\n# 干预后结果\ncustom_result = lac.run(u\"春天的花开秋天的风以及冬天的落阳\")\n```\n\n- 以输入“春天的花开秋天的风以及冬天的落阳”为例，原本输出结果为：\n```text\n春天/TIME 的/u 花开/v 秋天/TIME 的/u 风/n 以及/c 冬天/TIME 的/u 落阳/n\n```\n- 添加示例中的词典文件后的结果为：\n\n```text\n春天/SEASON 的/u 花/n 开/v 秋天的风/n 以及/c 冬天/TIME 的/u 落/n 阳/n\n```\n\n#### 增量训练\n我们也提供了增量训练的接口，用户可以使用自己的数据，进行增量训练，首先需要将数据转换为模型输入的格式，并且所有数据文件均为\"UTF-8\"编码：\n\n##### 1. 分词训练\n\n- 数据样例\n\n  >  与大多数开源分词数据集格式一致，使用空格作为单词切分标记，如下所示：\n\n```text\nLAC 是 个 优秀 的 分词 工具 。\n百度 是 一家 高科技 公司 。\n春天 的 花开 秋天 的 风 以及 冬天 的 落阳 。\n```\n\n- 代码示例\n\n```Python\nfrom LAC import LAC\n\n# 选择使用分词模型\nlac = LAC(mode = 'seg')\n\n# 训练和测试数据集，格式一致\ntrain_file = \"./data/seg_train.tsv\"\ntest_file = \"./data/seg_test.tsv\"\nlac.train(model_save_dir='./my_seg_model/',train_data=train_file, test_data=test_file)\n\n# 使用自己训练好的模型\nmy_lac = LAC(model_path='my_seg_model')\n```\n\n##### 2. 词法分析训练\n\n- 样例数据\n\n  > 在分词数据的基础上，每个单词以“/type”的形式标记其词性或实体类别。值得注意的是，词法分析的训练目前仅支持标签体系与我们一致的数据。后续也会开放支持新的标签体系，敬请期待。\n\n```text\nLAC/nz 是/v 个/q 优秀/a 的/u 分词/n 工具/n 。/w\n百度/ORG 是/v 一家/m 高科技/n 公司/n 。/w\n春天/TIME 的/u 花开/v 秋天/TIME 的/u 风/n 以及/c 冬天/TIME 的/u 落阳/n 。/w\n```\n\n- 代码示例\n```Python\nfrom LAC import LAC\n\n# 选择使用默认的词法分析模型\nlac = LAC()\n\n# 训练和测试数据集，格式一致\ntrain_file = \"./data/lac_train.tsv\"\ntest_file = \"./data/lac_test.tsv\"\nlac.train(model_save_dir='./my_lac_model/',train_data=train_file, test_data=test_file)\n\n# 使用自己训练好的模型\nmy_lac = LAC(model_path='my_lac_model')\n```\n\n文件结构\n---\n\n```text\n.\n├── python                      # Python调用的脚本\n├── c++                         # C++调用的代码\n├── java                        # Java调用的代码\n├── Android                     # Android调用的示例\n├── README.md                   # 本文件\n└── CMakeList.txt               # 编译C++和Java调用的脚本\n```\n\n## 在论文中引用LAC\n\n如果您的学术工作成果中使用了LAC，请您增加下述引用。我们非常欣慰LAC能够对您的学术工作带来帮助。\n\n```text\n@article{jiao2018LAC,\n\ttitle={Chinese Lexical Analysis with Deep Bi-GRU-CRF Network},\n\tauthor={Jiao, Zhenyu and Sun, Shuqi and Sun, Ke},\n\tjournal={arXiv preprint arXiv:1807.01882},\n\tyear={2018},\n\turl={https://arxiv.org/abs/1807.01882}\n}\n```\n\n贡献代码\n---\n我们欢迎开发者向LAC贡献代码。如果您开发了新功能，发现了bug……欢迎提交Pull request与issue到Github。\n"
        },
        {
          "name": "c++",
          "type": "tree",
          "content": null
        },
        {
          "name": "compile4windows.md",
          "type": "blob",
          "size": 3.5576171875,
          "content": "## 在Windows系统编译LAC\n\n本文档详细介绍如何在Windows上使用Visual Studio和Visual Studio Code 完成LAC的C++ demo 及 Java链接库编译的过程。\n\n### 1. 环境准备\n\n##### 1. 安装 Visual Studio和Visual Studio Code \n\n- 官网下载地址：[https://visualstudio.microsoft.com/zh-hans/](https://visualstudio.microsoft.com/zh-hans/)\n-  Visual Studio安装可参考：[VS安装文档](https://docs.microsoft.com/zh-cn/visualstudio/install/install-visual-studio?view=vs-2019)，工作负载中勾选`C++桌面开发`的选项\n\n##### 2. 下载Paddle相关的依赖库\n\n- 可于[Paddle官网](https://www.paddlepaddle.org.cn)下载已经编译好的[Windows预测库](https://www.paddlepaddle.org.cn/documentation/docs/zh/advanced_guide/inference_deployment/inference/windows_cpp_inference.html)（`fluid_inference.tgz`），选择`cpu_avx_mkl`或`cpu_avx_openblas`版本进行下载并解压\n\n### 2. 编译运行\n\n编译过程使用`Visual Studio Code`进行，该工具能够帮助我们完成cmake编译等过程，并且在众多系统中表现出较好的兼容性，该流程同样适用于Mac和Linux系统。\n\n##### 1. 在VS Code中安装Cmake相关插件\n\n<img src=\"./image/cmake_install.png\" alt=\"cmake_install\" style=\"zoom:80%;\" />\n\n##### 2. 打开GitHub中clone下来的文件夹\n\n<img src=\"./image/open_lac.png\" alt=\"open_lac\" style=\"zoom:80%;\" />\n\n##### 3. 设置编译选项\n\n- 设置`PADDLE_ROOT`为[Windows预测库](https://www.paddlepaddle.org.cn/documentation/docs/zh/advanced_guide/inference_deployment/inference/windows_cpp_inference.html)下载解压后的文件夹路径\n- 若需编译**JAVA的链接库**，需将`WITH_JNILIB`选项设为`ON`，同时设置`JAVA_HOME`路径，如下图所示\n- CMake选择Release模式\n- 编译器选项选择Visual Studio amd64【若无该选项则选择`扫描工具包`或检查`Visual Studio`安装情况】\n\n<img src=\"./image/modify_cmakelists.png\" alt=\"open_lac\" style=\"zoom:80%;\" />\n\n##### 4. 执行编译\n\n- 完成上述步骤后，如果lac目录下已生产build目录，先删除该build目录，否则option中的选项不会更新\n\n- 打开CMakeLists.txt，执行保存，会触发CMake构建命令，生产build目录。\n\n- CMake构建完成后运行`生成`，既可触发编译\n\n  <img src=\"./image/run_cmake.png\" alt=\"run_cmake\" style=\"zoom:80%;\" />\n\n##### 5. 运行示例\n\n- 编译完成后，会在build/Release 生成相应的文件产出：\n\n  - `lac_demo.exe`和`lac_multi.exe`：lac的单线程和多线程执行程序，从命令行中读取**UTF8**编码的输入，执行预测\n  - `lacjni.dll`：JAVA调用lac使用的动态库\n  - `*.dll`：运行lac所依赖的算法库，MKLNN库(mklnn.dll、mklml.dll、libiomp5md.dll)或OPENBLAS库（openblas.dll）\n\n- 下载模型文件：\n\n  在[release界面](https://github.com/baidu/lac/releases/)下载模型文件`models_general.zip`，解压文件夹中包含两个模型\n\n  - `seg_model`：仅实现分词的模型\n  - `lac_model`：实现分词、词性标注、实体识别于一体的词法分析模型\n\n-  `lac_demo.exe`和`lac_multi.exe`运行测试\n\n  - 修改CMD编码为**utf8**\n  - 在命令行中运行以下指令\n\n  ```sh\n  # 运行测试\n  ./lac_demo.exe <model_dir> \n  ./lac_multi.exe <model_dir> <thread_num>\n  # model_dir: 模型文件路径，即上述下载解压后的路径，如 \"./models_general/lac_model\"\n  # thread_num: 线程数\n  ```\n\n- JAVA调用运行测试\n\n  - 将`lacjni.dll`和依赖的算法库拷贝到`lac/java`目录下\n\n  - 在命令行工具中运行测试如下所示\n\n    <img src=\"./image/run_lacjava.png\" alt=\"run_lacjava\" style=\"zoom:70%;\" />\n\n"
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "technical-report",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}