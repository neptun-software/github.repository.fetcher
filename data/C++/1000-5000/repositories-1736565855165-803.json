{
  "metadata": {
    "timestamp": 1736565855165,
    "page": 803,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mkeeter/antimony",
      "stars": 2125,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1416015625,
          "content": "\n\n*.pro.user\n*.pyc\n*.sublime-workspace\n*DS_Store\n.cproject\n.project\n.qmake.stash\n.tags\n.ycm_extra_conf.py\n/debian\n/obj-*-linux-gnu\nbuild\nbuild-*\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 4.1826171875,
          "content": "Requirements\n------------\n- [Qt 5.4 or later](http://www.qt.io/)\n- [Python 3](https://www.python.org/)\n- [Boost.Python](http://www.boost.org/doc/libs/1_57_0/libs/python/doc/index.html) (linked against Python 3)\n- [`libpng`](http://www.libpng.org/pub/png/libpng.html)\n- [Lemon](http://www.hwaci.com/sw/lemon/)\n- [Flex](http://flex.sourceforge.net)\n- [ninja](https://ninja-build.org/) (recommended)\n\n--------------------------------------------------------------------------------\n\nMac OS X\n--------\nTested on Mac OS X 10.13.4 with [homebrew](http://brew.sh/) already installed:\n```\nbrew install libpng\nbrew install python3\nbrew install boost-python3\nbrew install qt5\nbrew install lemon\nbrew install flex\nbrew install ninja\nbrew install cmake\n\ngit clone https://github.com/mkeeter/antimony\ncd antimony\nmkdir build\ncd build\n\n\ncmake -DCMAKE_PREFIX_PATH=/usr/local/Cellar/qt/5.10.1 -GNinja ..\nninja\n\nopen app/Antimony.app\n```\n\n--------------------------------------------------------------------------------\n\nLinux\n-----\nTested on a clean Xubuntu 16.04 virtual machine:\n\n```\n# Install dependencies\nsudo apt install git build-essential libpng-dev python3-dev libboost-all-dev  libgl1-mesa-dev lemon flex qt5-default ninja-build cmake\n\n(On some distros, you may need to install `libqt5opengl5` or `libqt5opengl5-dev` as well).\n\n# Clone the repo\ngit clone https://github.com/mkeeter/antimony\ncd antimony\n\n# Make a build folder\nmkdir build\ncd build\n\n# Build and launch the application\ncmake -GNinja ..\nninja\n./app/antimony\n```\n\nTo put Antimony on your path, call `sudo ninja install`.  This does two things:\n- The `antimony` executable is copied to `/usr/local/bin`\n- Antimony's Python libraries are copied to `/usr/local/share/antimony`\n\nDebian packaging\n----------------\n\nPackaging for the Debian or flavors based on it can be done using the content of `deploy/linux/debian` directory.\n\nIn the project's root directory create a symbolic link:\n\n```\nln -s deploy/linux/debian debian\n```\n\nBuild the package:\n\n```\ndpkg-buildpackage -us -uc\n```\n\nAt the end of this you'll find the packages in the directory containing the project's root directory. For example:\n\n```\nantimony_0.9.2_amd64.changes\nantimony_0.9.2_amd64.deb\nantimony_0.9.2.dsc\nantimony_0.9.2.tar.xz\nantimony-dbg_0.9.2_amd64.deb\n```\n\nTo install the package, as root or using sudo:\n\n```\ndpkg --install antimony_0.9.2_amd64.deb\n```\n\n## Debugging\n### `cannot find -lGL`\nIf running `make` gives the `/usr/bin/ld: cannot find -lGL`, create a symlink to the `libGL` file:\n```\nln -s /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1.2.0 /usr/lib/libGL.so\n```\n\n### Missing top menu\nIf the top menu bar is not appearing in Ubuntu with a non-Unity\ndesktop environment (e.g. `gnome-session-flashback`), run\n```\nsudo apt-get remove appmenu-qt5\n```\nto make it appear.\n\n--------------------------------------------------------------------------------\n\nWindows (experimental)\n----------------------\n\nInstall [msys2-x86_84](http://msys2.github.io/)\nand open an \"MSYS2 MinGW 64-bit\" shell\n\nRun the following commands to install dependencies:\n```\npacman -Syuu\npacman -S git make lemon flex mingw-w64-x86_64-python3 mingw-w64-x86_64-cmake mingw-w64-x86_64-qt5 mingw-w64-x86_64-toolchain\n```\n\nSadly, we can't install Boost through `pacman` because of a\n[packaging bug](https://github.com/Alexpux/MINGW-packages/issues/2028).\nInstead, we'll build it by hand.\n\nDownload the latest [version of Boost](http://www.boost.org/users/download/)\nand unzip it to your `mingw64` home directory\n(which will be of the form `/mingw64/home/$USERNAME` in the MinGW64 shell, or\nequivalently `C:\\msys64\\home\\$USERNAME` in the Windows file explorer).\n\nThen build Boost:\n```\ncd ~/boost_1_63_0\n./bootstrap.sh\n./b2 include=/mingw64/include/python3.5m --with-python\n```\n\nRename the generated library to something that `cmake` will find:\n```\ncd stage/lib\nmv libboost_python-mgw63-mt-1_63.a libboost_python3-mt.a\n```\n\nThen, run through the following steps to clone and build Antimony:\n```\ncd ~\ngit clone https://github.com/mkeeter/antimony\ncd antimony\nmkdir build\ncd build\nBOOST_ROOT=~/boost_1_63_0/ BOOST_LIBRARYDIR=~/boost_1_63_0/stage/ /mingw64/bin/cmake -G\"MSYS Makefiles\" ..\nmake -j8\n```\n\nTo invoke Antimony from the build folder, call\n```\nPYTHONHOME=/mingw64 ./app/antimony.exe\n```\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.7685546875,
          "content": "cmake_minimum_required(VERSION 3.1)\nproject(Antimony)\nset(CMAKE_BUILD_TYPE RELEASE)\n\nset(CMAKE_CXX_FLAGS \"-Wall -Wextra -g -Werror=switch\")\nset(CMAKE_CXX_FLAGS_RELEASE  \"-O3 -DRELEASE\")\nset(CMAKE_CXX_FLAGS_DEBUG    \"-O0\")\n\n################################################################################\n\nfind_package(Python 3.3 REQUIRED COMPONENTS Interpreter Development)\n\nif (WIN32)\n    add_definitions(\"-DBOOST_PYTHON_STATIC_LIB\")\nendif()\n\nfind_package(Boost REQUIRED COMPONENTS python${Python_VERSION_MAJOR}${Python_VERSION_MINOR})\n\nif (NOT ${Boost_FOUND})\n    message(FATAL_ERROR \"Could not find boost::python3\")\nendif()\n\n################################################################################\n\nadd_subdirectory(lib/graph)\nadd_subdirectory(lib/fab)\n\nadd_subdirectory(app)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.623046875,
          "content": "## About\n*Antimony* is a computer-aided design (CAD) tool from a parallel universe\nin which CAD software evolved from Lisp machines rather than drafting tables\n\nThis work is a spiritual successor to [kokopelli](https://github.com/mkeeter/kokopelli)\nby way of [fabserver](http://kokompe.cba.mit.edu).\n\nFor more details and screenshots, look at [this writeup](http://mattkeeter.com/projects/antimony).\n\n## Try it\n*Antimony* is in [long-term maintenance mode](https://github.com/mkeeter/antimony/issues/205#issuecomment-484271273).\nIt's at a beta level of stability:\nsolid, but not recommended for mission-critical use.\n\nTo get started, there are two suggested options:\n- Download a [pre-built application](https://github.com/mkeeter/antimony/releases) (Mac only)\n- [Build from source](https://github.com/mkeeter/antimony/blob/develop/BUILDING.md) (Mac and Linux)\n\nThere is also a community-supported package for [Fedora 22 or later](https://admin.fedoraproject.org/pkgdb/package/antimony/):\n```\ndnf install antimony\n```\n(or `dnf install antimony --enablerepo=updates-testing` to get testing builds)\n\n## Support\n\nIf you have a general question, [send it along to the Google Group](https://groups.google.com/forum/#!forum/antimony-dev).\n\nIf you have a specific issue, [check the issues](https://github.com/mkeeter/antimony/issues) to see if someone else has had the same problem.\n\n## License\nAntimony is released under the MIT License:\n\nCopyright (c) 2013-2015 Matthew Keeter and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nAntimony includes code from [kokopelli](https://github.com/mkeeter/kokopelli), which is  \n© 2012-2013 Massachusetts Institute of Technology  \n© 2013 Matthew Keeter\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "py",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}