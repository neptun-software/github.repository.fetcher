{
  "metadata": {
    "timestamp": 1736565597994,
    "page": 477,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dev-cafe/cmake-cookbook",
      "stars": 2749,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 4.169921875,
          "content": "version: 'build-{build}-{branch}'\n\nplatform: x64\n\nbuild:\n  parallel: true\n\ncache:\n  - c:\\tools\\vcpkg\\installed\\ -> testing\\dependencies\\appveyor\\install.bat\n  - c:\\msys64\\var\\cache\\pacman\\pkg -> testing\\dependencies\\appveyor\\install.bat\n  - c:\\Deps\\conda\\ -> testing\\dependencies\\appveyor\\anaconda.ps1\n  - c:\\Deps\\boost_1_67_0 -> testing\\dependencies\\appveyor\\boost.bat\n\nimage:\n  - Visual Studio 2017\n\nenvironment:\n  # Create expected SHELL variable for pipenv.\n  SHELL: 'windows'\n  CTEST_OUTPUT_ON_FAILURE: '1'\n  matrix:\n    - CMAKE_GENERATOR: 'MSYS Makefiles'\n      BUILDFLAGS: 'VERBOSE=1'\n    - CMAKE_GENERATOR: 'Visual Studio 15 2017 Win64'\n      BUILDFLAGS: '/verbosity:normal'\n    - CMAKE_GENERATOR: 'Ninja'\n      BUILDFLAGS: '-v'\n    - CMAKE_GENERATOR: 'Visual Studio 15 2017 Win64'\n      BUILDFLAGS: '/verbosity:normal'\n      ANACONDA_TESTS_ONLY: '1'\n\nmatrix:\n  fast_finish: true\n\ninit:\n  - set PATH=C:\\msys64\\MINGW64\\bin;C:\\msys64\\usr\\bin;%PATH%\n  - set PATH=C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%\n  # Remove Python 2.7 from path\n  - set PATH=%PATH:C:\\Python27;=%\n  - set PATH=%PATH:C:\\Python27\\Scripts;=%\n  # Add Anaconda to PATH\n  - set PATH=C:\\Deps\\conda\\Scripts;C:\\Deps\\conda\\library\\bin;%PATH%\n  # Put Boost libraries on PATH\n  - set PATH=C:\\Deps\\boost_1_67_0\\lib;%PATH%\n\ninstall:\n  - python -m pip install pipenv\n  - '%APPVEYOR_BUILD_FOLDER%\\testing\\dependencies\\appveyor\\install.bat'\n  - '%APPVEYOR_BUILD_FOLDER%\\testing\\dependencies\\appveyor\\boost.bat'\n  - ps: .$env:APPVEYOR_BUILD_FOLDER\\testing\\dependencies\\appveyor\\anaconda.ps1\n  - ps: .$env:APPVEYOR_BUILD_FOLDER\\testing\\dependencies\\appveyor\\install-msmpi.ps1\n\n# extract step has to happen before the sh.exe workaround otherwise 7z will complain\nbefore_build:\n  - python --version\n  - cmake --version\n  - cd C:\\projects\n  - appveyor DownloadFile https://github.com/dev-cafe/cmake-cookbook/archive/%APPVEYOR_REPO_COMMIT%.zip\n  - '%APPVEYOR_BUILD_FOLDER%\\testing\\dependencies\\appveyor\\extract.bat'\n\n# the pipenv lock was added as workaround for pipenv complaining about wrong checksum\n# after upgrade to Python 3.7 on Appveyor\nbuild_script:\n  - bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv lock\"\n  - bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv install\"\n  - if \"%ANACONDA_TESTS_ONLY%\"==\"1\" (\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-11/recipe-04'\"\n    ) else (\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-01/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-02/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-03/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-04/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-05/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-06/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-07/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-08/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-09/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-10/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-11/recipe-0[1-3]'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-12/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-13/recipe-*'\" &&\n      bash -c \"cd /c/projects/cmake-cookbook-no-symlinks && pipenv run python testing/collect_tests.py 'chapter-14/recipe-*'\"\n    )\n\ndeploy: off\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.7626953125,
          "content": "AccessModifierOffset: -2\nAlignAfterOpenBracket: true\nAlignEscapedNewlinesLeft: false\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: false\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nColumnLimit: 85\nCommentPragmas: '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nIndentWidth: 2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nLanguage: Cpp\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Right\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: true\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp11\nTabWidth: 8\nUseTab: Never\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.318359375,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\ncharset = utf-8\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\n\n[*.py]\nindent_size = 4\n\n[*.{c,h,cpp,hpp,f90,F90}]\nindent_size = 2\n\n[*.rst]\nindent_size = 3\ntab_size = 3\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.0615234375,
          "content": "use nix '<nixpkgs>' -A dev-shells.cmake-cookbook\nlayout pipenv\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.056640625,
          "content": "*.tar.gz binary\n*.npy binary\n*.zip binary\n*.png diff=exif\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.29296875,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Build directories\n*build*/\n\n# Python stuff\n*.pyc\nvenv/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.111328125,
          "content": "Roberto Di Remigio <roberto.diremigio@gmail.com> <roberto.d.remigio@uit.no>\nEric Noulard <eric.noulard@gmail.com>\n"
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.05859375,
          "content": "[style]\nCOLUMN_LIMIT = 80\nINDENT_WIDTH = 4\nUSE_TABS = False\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 4.4677734375,
          "content": "language: cpp\nsudo: false\ndist: trusty\nmatrix:\n  fast_finish: true\n  include:\n    - os: linux\n      addons: &1\n        apt:\n          sources:\n            - ubuntu-toolchain-r-test\n          packages:\n            - chrpath\n            - doxygen\n            - g++-7\n            - g++-mingw-w64\n            - gcc-7\n            - gcc-mingw-w64\n            - gfortran-7\n            - gfortran-mingw-w64\n            - graphviz\n            - libatlas-dev\n            - liblapack-dev\n            - liblapacke-dev\n            - libopenmpi-dev\n            - libpython3.5-dev\n            - libzmq3-dev\n            - openmpi-bin\n            - pkg-config\n            - python3.5-dev\n            - rpm\n            - uuid-dev\n      env:\n        - CMAKE_VERSION=\"3.12.1\"\n        - CMAKE_GENERATOR=\"Unix Makefiles\"\n        - BUILDFLAGS=\"VERBOSE=1\"\n    - os: linux\n      addons: *1\n      env:\n        - CMAKE_VERSION=\"3.12.1\"\n        - CMAKE_GENERATOR=\"Unix Makefiles\"\n        - BUILDFLAGS=\"VERBOSE=1\"\n        - ANACONDA_TESTS_ONLY=1\n    - os: linux\n      addons: *1\n      env:\n        - CMAKE_VERSION=\"3.12.1\"\n        - CMAKE_GENERATOR=\"Ninja\"\n        - BUILDFLAGS=\"-v\"\n    - os: linux\n      addons: *1\n      env:\n        - CMAKE_VERSION=\"3.5.2\"\n        - CMAKE_GENERATOR=\"Unix Makefiles\"\n        - BUILDFLAGS=\"VERBOSE=1\"\n    - os: linux\n      addons: *1\n      env:\n        - CMAKE_VERSION=\"3.5.2\"\n        - CMAKE_GENERATOR=\"Unix Makefiles\"\n        - BUILDFLAGS=\"VERBOSE=1\"\n        - ANACONDA_TESTS_ONLY=1\n    - os: linux\n      addons: *1\n      env:\n        - CMAKE_VERSION=\"3.5.2\"\n        - CMAKE_GENERATOR=\"Ninja\"\n        - BUILDFLAGS=\"-v\"\n    - os: osx\n      osx_image: xcode9.2\n      env:\n        - CMAKE_GENERATOR=\"Unix Makefiles\"\n        - BUILDFLAGS=\"VERBOSE=1\"\n    - os: osx\n      osx_image: xcode9.2\n      env:\n        - CMAKE_GENERATOR=\"Unix Makefiles\"\n        - BUILDFLAGS=\"VERBOSE=1\"\n        - ANACONDA_TESTS_ONLY=1\n    - os: osx\n      osx_image: xcode9.2\n      env:\n        - CMAKE_GENERATOR=\"Ninja\"\n        - BUILDFLAGS=\"-v\"\n\ncache:\n  timeout: 1000\n  pip: true\n  directories:\n    - $HOME/Deps/cmake/3.5.2\n    - $HOME/Deps/cmake/3.12.1\n    - $HOME/Deps/eigen\n    - $HOME/Deps/ninja\n    - $HOME/Deps/conda\n    - $HOME/Deps/boost_1.59.0\n    - $HOME/Library/Caches/Homebrew\n\nenv:\n  global:\n    - PATH=$HOME/Deps/ninja${PATH:+:$PATH}\n    - LC_ALL=\"en_US.UTF-8\"\n    - LANG=\"en_US.UTF-8\"\n    - LANGUAGE=\"en_US.UTF-8\"\n    - PYTHONIOENCODING=UTF-8\n    # Invalidate PYENV_ROOT\n    - PYENV_ROOT=$HOME/fuffa\n\nbefore_install:\n  # Dependencies are downloaded in $HOME/Downloads and installed in $HOME/Deps\n  - mkdir -p $HOME/Downloads $HOME/Deps\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n      export PYTHON3=\"/usr/bin/python3.5\";\n    else\n      export PYTHON3=\"/usr/local/bin/python3\";\n    fi\n\ninstall:\n  - ./testing/dependencies/travis/install.sh\n  - ./testing/dependencies/travis/cmake.sh\n  - ./testing/dependencies/travis/ninja.sh\n  - ./testing/dependencies/travis/anaconda.sh\n  - ./testing/dependencies/travis/eigen.sh\n  - ./testing/dependencies/travis/boost.sh\n  - export PATH=$HOME/Deps/cmake/$CMAKE_VERSION/bin${PATH:+:$PATH}\n  - pipenv install --python $PYTHON3\n  - pipenv run python --version\n\nbefore_script:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n      test -n $CC && unset CC && export CC=gcc-7;\n      test -n $CXX && unset CXX && export CXX=g++-7;\n      test -n $FC && unset FC && export FC=gfortran-7;\n    else\n      test -n $CC && unset CC && export CC=gcc;\n      test -n $CXX && unset CXX && export CXX=g++;\n      test -n $FC && unset FC && export FC=gfortran;\n    fi\n\nscript:\n  - ./testing/dependencies/report_versions.sh\n  - if [[ \"$ANACONDA_TESTS_ONLY\" == 1 ]]; then\n      travis_wait 20 pipenv run python testing/collect_tests.py 'chapter-11/recipe-04' &&\n      travis_wait 20 pipenv run python testing/collect_tests.py 'chapter-11/recipe-05';\n    else\n      pipenv run python testing/collect_tests.py 'chapter-0[1-7]/recipe-*' &&\n      pipenv run python testing/collect_tests.py 'chapter-08/recipe-0[1|3-5]' &&\n      travis_wait 30 pipenv run python testing/collect_tests.py 'chapter-08/recipe-02' &&\n      pipenv run python testing/collect_tests.py 'chapter-09/recipe-*' &&\n      pipenv run python testing/collect_tests.py 'chapter-10/recipe-*' &&\n      pipenv run python testing/collect_tests.py 'chapter-11/recipe-0[1-3]' &&\n      pipenv run python testing/collect_tests.py 'chapter-12/recipe-*' &&\n      pipenv run python testing/collect_tests.py 'chapter-13/recipe-*' &&\n      pipenv run python testing/collect_tests.py 'chapter-14/recipe-*';\n    fi\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 0.1708984375,
          "content": "## Individual Contributors\n\n- Radovan Bast (@bast)\n- Roberto Di Remigio (@robertodr)\n- Eric Noulard (@TheErk)\n\nThis list was obtained 2018-09-23 by running `git shortlog -sn`\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.2841796875,
          "content": "# Change Log\n\n\n## [Unreleased]\n\n### Added\n### Changed\n### Deprecated\n### Removed\n### Fixed\n### Security\n\n\n## [Version 1.0] - 2018-09-24\n\n\n[Unreleased]: https://github.com/dev-cafe/cmake-cookbook/compare/v1.0...HEAD\n[Version 1.0]: https://github.com/dev-cafe/cmake-cookbook/releases/tag/v1.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.13671875,
          "content": "Copyright (c) 2017-2018: Radovan Bast, Roberto Di Remigio,\nand other contributors:\n\nhttps://github.com/dev-cafe/cmake-cookbook/contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.212890625,
          "content": "[[source]]\n\nurl = \"https://pypi.python.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n\n[packages]\n\nbreathe = \"*\"\ncffi = \"*\"\ncolorama = \"*\"\ncython = \"*\"\ndocopt = \"*\"\nnumpy = \"*\"\npyyaml = \"*\"\nsphinx = \"*\"\n\n[dev-packages]\n\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 16.5751953125,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"620c45be4c55bea470fdc39b72b5e32813431d8bd39e85be8ab5ea1ac0096ebe\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {},\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.python.org/simple\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"alabaster\": {\n            \"hashes\": [\n                \"sha256:446438bdcca0e05bd45ea2de1668c1d9b032e1a9154c2c259092d77031ddd359\",\n                \"sha256:a661d72d58e6ea8a57f7a86e37d86716863ee5e92788398526d58b26a4e4dc02\"\n            ],\n            \"version\": \"==0.7.12\"\n        },\n        \"babel\": {\n            \"hashes\": [\n                \"sha256:6778d85147d5d85345c14a26aada5e478ab04e39b078b0745ee6870c2b5cf669\",\n                \"sha256:8cba50f48c529ca3fa18cf81fa9403be176d374ac4d60738b839122dfaaa3d23\"\n            ],\n            \"version\": \"==2.6.0\"\n        },\n        \"breathe\": {\n            \"hashes\": [\n                \"sha256:ca91bbee1b0040cc4566b6d3be055e7ddf232efcb62f728165c0c7ac77c6a317\",\n                \"sha256:fe8437d8de2d7a382d397ad106d5cf6045e3ea8699adab50b0e17db4bfe3167e\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.11.0\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:339dc09518b07e2fa7eda5450740925974815557727d6bd35d319c1524a04a4c\",\n                \"sha256:6d58c986d22b038c8c0df30d639f23a3e6d172a05c3583e766f4c0b785c0986a\"\n            ],\n            \"version\": \"==2018.10.15\"\n        },\n        \"cffi\": {\n            \"hashes\": [\n                \"sha256:151b7eefd035c56b2b2e1eb9963c90c6302dc15fbd8c1c0a83a163ff2c7d7743\",\n                \"sha256:1553d1e99f035ace1c0544050622b7bc963374a00c467edafac50ad7bd276aef\",\n                \"sha256:1b0493c091a1898f1136e3f4f991a784437fac3673780ff9de3bcf46c80b6b50\",\n                \"sha256:2ba8a45822b7aee805ab49abfe7eec16b90587f7f26df20c71dd89e45a97076f\",\n                \"sha256:3bb6bd7266598f318063e584378b8e27c67de998a43362e8fce664c54ee52d30\",\n                \"sha256:3c85641778460581c42924384f5e68076d724ceac0f267d66c757f7535069c93\",\n                \"sha256:3eb6434197633b7748cea30bf0ba9f66727cdce45117a712b29a443943733257\",\n                \"sha256:495c5c2d43bf6cebe0178eb3e88f9c4aa48d8934aa6e3cddb865c058da76756b\",\n                \"sha256:4c91af6e967c2015729d3e69c2e51d92f9898c330d6a851bf8f121236f3defd3\",\n                \"sha256:57b2533356cb2d8fac1555815929f7f5f14d68ac77b085d2326b571310f34f6e\",\n                \"sha256:770f3782b31f50b68627e22f91cb182c48c47c02eb405fd689472aa7b7aa16dc\",\n                \"sha256:79f9b6f7c46ae1f8ded75f68cf8ad50e5729ed4d590c74840471fc2823457d04\",\n                \"sha256:7a33145e04d44ce95bcd71e522b478d282ad0eafaf34fe1ec5bbd73e662f22b6\",\n                \"sha256:857959354ae3a6fa3da6651b966d13b0a8bed6bbc87a0de7b38a549db1d2a359\",\n                \"sha256:87f37fe5130574ff76c17cab61e7d2538a16f843bb7bca8ebbc4b12de3078596\",\n                \"sha256:95d5251e4b5ca00061f9d9f3d6fe537247e145a8524ae9fd30a2f8fbce993b5b\",\n                \"sha256:9d1d3e63a4afdc29bd76ce6aa9d58c771cd1599fbba8cf5057e7860b203710dd\",\n                \"sha256:a36c5c154f9d42ec176e6e620cb0dd275744aa1d804786a71ac37dc3661a5e95\",\n                \"sha256:a6a5cb8809091ec9ac03edde9304b3ad82ad4466333432b16d78ef40e0cce0d5\",\n                \"sha256:ae5e35a2c189d397b91034642cb0eab0e346f776ec2eb44a49a459e6615d6e2e\",\n                \"sha256:b0f7d4a3df8f06cf49f9f121bead236e328074de6449866515cea4907bbc63d6\",\n                \"sha256:b75110fb114fa366b29a027d0c9be3709579602ae111ff61674d28c93606acca\",\n                \"sha256:ba5e697569f84b13640c9e193170e89c13c6244c24400fc57e88724ef610cd31\",\n                \"sha256:be2a9b390f77fd7676d80bc3cdc4f8edb940d8c198ed2d8c0be1319018c778e1\",\n                \"sha256:ca1bd81f40adc59011f58159e4aa6445fc585a32bb8ac9badf7a2c1aa23822f2\",\n                \"sha256:d5d8555d9bfc3f02385c1c37e9f998e2011f0db4f90e250e5bc0c0a85a813085\",\n                \"sha256:e55e22ac0a30023426564b1059b035973ec82186ddddbac867078435801c7801\",\n                \"sha256:e90f17980e6ab0f3c2f3730e56d1fe9bcba1891eeea58966e89d352492cc74f4\",\n                \"sha256:ecbb7b01409e9b782df5ded849c178a0aa7c906cf8c5a67368047daab282b184\",\n                \"sha256:ed01918d545a38998bfa5902c7c00e0fee90e957ce036a4000a88e3fe2264917\",\n                \"sha256:edabd457cd23a02965166026fd9bfd196f4324fe6032e866d0f3bd0301cd486f\",\n                \"sha256:fdf1c1dc5bafc32bc5d08b054f94d659422b05aba244d6be4ddc1c72d9aa70fb\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.11.5\"\n        },\n        \"chardet\": {\n            \"hashes\": [\n                \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\",\n                \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\"\n            ],\n            \"version\": \"==3.0.4\"\n        },\n        \"colorama\": {\n            \"hashes\": [\n                \"sha256:a3d89af5db9e9806a779a50296b5fdb466e281147c2c235e8225ecc6dbf7bbf3\",\n                \"sha256:c9b54bebe91a6a803e0772c8561d53f2926bfeb17cd141fbabcb08424086595c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.4.0\"\n        },\n        \"cython\": {\n            \"hashes\": [\n                \"sha256:019008a69e6b7c102f2ed3d733a288d1784363802b437dd2b91e6256b12746da\",\n                \"sha256:1441fe19c56c90b8c2159d7b861c31a134d543ef7886fd82a5d267f9f11f35ac\",\n                \"sha256:1d1a5e9d6ed415e75a676b72200ad67082242ec4d2d76eb7446da255ae72d3f7\",\n                \"sha256:339f5b985de3662b1d6c69991ab46fdbdc736feb4ac903ef6b8c00e14d87f4d8\",\n                \"sha256:35bdf3f48535891fee2eaade70e91d5b2cc1ee9fc2a551847c7ec18bce55a92c\",\n                \"sha256:3d0afba0aec878639608f013045697fb0969ff60b3aea2daec771ea8d01ad112\",\n                \"sha256:42c53786806e24569571a7a24ebe78ec6b364fe53e79a3f27eddd573cacd398f\",\n                \"sha256:48b919da89614d201e72fbd8247b5ae8881e296cf968feb5595a015a14c67f1f\",\n                \"sha256:49906e008eeb91912654a36c200566392bd448b87a529086694053a280f8af2d\",\n                \"sha256:49fc01a7c9c4e3c1784e9a15d162c2cac3990fcc28728227a6f8f0837aabda7c\",\n                \"sha256:501b671b639b9ca17ad303f8807deb1d0ff754d1dab106f2607d14b53cb0ff0b\",\n                \"sha256:5574574142364804423ab4428bd331a05c65f7ecfd31ac97c936f0c720fe6a53\",\n                \"sha256:6092239a772b3c6604be9e94b9ab4f0dacb7452e8ad299fd97eae0611355b679\",\n                \"sha256:71ff5c7632501c4f60edb8a24fd0a772e04c5bdca2856d978d04271b63666ef7\",\n                \"sha256:7dcf2ad14e25b05eda8bdd104f8c03a642a384aeefd25a5b51deac0826e646fa\",\n                \"sha256:8ca3a99f5a7443a6a8f83a5d8fcc11854b44e6907e92ba8640d8a8f7b9085e21\",\n                \"sha256:927da3b5710fb705aab173ad630b45a4a04c78e63dcd89411a065b2fe60e4770\",\n                \"sha256:94916d1ede67682638d3cc0feb10648ff14dc51fb7a7f147f4fedce78eaaea97\",\n                \"sha256:a3e5e5ca325527d312cdb12a4dab8b0459c458cad1c738c6f019d0d8d147081c\",\n                \"sha256:a7716a98f0b9b8f61ddb2bae7997daf546ac8fc594be6ba397f4bde7d76bfc62\",\n                \"sha256:acf10d1054de92af8d5bfc6620bb79b85f04c98214b4da7db77525bfa9fc2a89\",\n                \"sha256:de46ffb67e723975f5acab101c5235747af1e84fbbc89bf3533e2ea93fb26947\",\n                \"sha256:df428969154a9a4cd9748c7e6efd18432111fbea3d700f7376046c38c5e27081\",\n                \"sha256:f5ebf24b599caf466f9da8c4115398d663b2567b89e92f58a835e9da4f74669f\",\n                \"sha256:f79e45d5c122c4fb1fd54029bf1d475cecc05f4ed5b68136b0d6ec268bae68b6\",\n                \"sha256:f7a43097d143bd7846ffba6d2d8cd1cc97f233318dbd0f50a235ea01297a096b\",\n                \"sha256:fceb8271bc2fd3477094ca157c824e8ea840a7b393e89e766eea9a3b9ce7e0c6\",\n                \"sha256:ff919ceb40259f5332db43803aa6c22ff487e86036ce3921ae04b9185efc99a4\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.29\"\n        },\n        \"docopt\": {\n            \"hashes\": [\n                \"sha256:49b3a825280bd66b3aa83585ef59c4a8c82f2c8a522dbe754a8bc8d08c85c491\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.6.2\"\n        },\n        \"docutils\": {\n            \"hashes\": [\n                \"sha256:02aec4bd92ab067f6ff27a38a38a41173bf01bed8f89157768c1573f53e474a6\",\n                \"sha256:51e64ef2ebfb29cae1faa133b3710143496eca21c530f3f71424d77687764274\",\n                \"sha256:7a4bd47eaf6596e1295ecb11361139febe29b084a87bf005bf899f9a42edc3c6\"\n            ],\n            \"version\": \"==0.14\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:156a6814fb5ac1fc6850fb002e0852d56c0c8d2531923a51032d1b70760e186e\",\n                \"sha256:684a38a6f903c1d71d6d5fac066b58d7768af4de2b832e426ec79c30daa94a16\"\n            ],\n            \"version\": \"==2.7\"\n        },\n        \"imagesize\": {\n            \"hashes\": [\n                \"sha256:3f349de3eb99145973fefb7dbe38554414e5c30abd0c8e4b970a7c9d09f3a1d8\",\n                \"sha256:f3832918bc3c66617f92e35f5d70729187676313caa60c187eb0f28b8fe5e3b5\"\n            ],\n            \"version\": \"==1.1.0\"\n        },\n        \"jinja2\": {\n            \"hashes\": [\n                \"sha256:74c935a1b8bb9a3947c50a54766a969d4846290e1e788ea44c1392163723c3bd\",\n                \"sha256:f84be1bb0040caca4cea721fcbbbbd61f9be9464ca236387158b0feea01914a4\"\n            ],\n            \"version\": \"==2.10\"\n        },\n        \"markupsafe\": {\n            \"hashes\": [\n                \"sha256:a6be69091dac236ea9c6bc7d012beab42010fa914c459791d627dad4910eb665\"\n            ],\n            \"version\": \"==1.0\"\n        },\n        \"numpy\": {\n            \"hashes\": [\n                \"sha256:032df9b6571c5f1d41ea6f6a189223208cb488990373aa686aca55570fcccb42\",\n                \"sha256:094f8a83e5bd0a44a7557fa24a46db6ba7d5299c389ddbc9e0e18722f567fb63\",\n                \"sha256:1c0c80e74759fa4942298044274f2c11b08c86230b25b8b819e55e644f5ff2b6\",\n                \"sha256:2aa0910eaeb603b1a5598193cc3bc8eacf1baf6c95cbc3955eb8e15fa380c133\",\n                \"sha256:2f5ebc7a04885c7d69e5daa05208faef4db7f1ae6a99f4d36962df8cd54cdc76\",\n                \"sha256:32a07241cb624e104b88b08dea2851bf4ec5d65a1f599d7735041ced7171fd7a\",\n                \"sha256:3c7959f750b54b445f14962a3ddc41b9eadbab00b86da55fbb1967b2b79aad10\",\n                \"sha256:3d8f9273c763a139a99e65c2a3c10f1109df30bedae7f011b10d95c538364704\",\n                \"sha256:63bca71691339d2d6f8a7c970821f2b12098a53afccc0190d4e1555e75e5223a\",\n                \"sha256:7ae9c3baff3b989859c88e0168ad10902118595b996bf781eaf011bb72428798\",\n                \"sha256:866a7c8774ccc7d603667fad95456b4cf56d79a2bb5a7648ac9f0082e0b9416e\",\n                \"sha256:8bc4b92a273659e44ca3f3a2f8786cfa39d8302223bcfe7df794429c63d5f5a1\",\n                \"sha256:919f65e0732195474897b1cafefb4d4e7c2bb8174a725e506b62e9096e4df28d\",\n                \"sha256:9d1598573d310104acb90377f0a8c2319f737084689f5eb18012becaf345cda5\",\n                \"sha256:9fff90c88bfaad2901be50453d5cd7897a826c1d901f0654ee1d73ab3a48cd18\",\n                \"sha256:a245464ddf6d90e2d6287e9cef6bcfda2a99467fdcf1b677b99cd0b6c7b43de2\",\n                \"sha256:a988db28f54e104a01e8573ceb6f28202b4c15635b1450b2e3b2b822c6564f9b\",\n                \"sha256:b12fe6f31babb9477aa0f9692730654b3ee0e71f33b4568170dfafd439caf0a2\",\n                \"sha256:b7599ff4acd23f5de983e3aec772153b1043e131487a5c6ad0f94b41a828877a\",\n                \"sha256:c9f4dafd6065c4c782be84cd67ceeb9b1d4380af60a7af32be10ebecd723385e\",\n                \"sha256:ce3622b73ccd844ba301c1aea65d36cf9d8331e7c25c16b1725d0f14db99aaf4\",\n                \"sha256:d0f36a24cf8061a2c03e151be3418146717505b9b4ec17502fa3bbdb04ec1431\",\n                \"sha256:d263f8f14f2da0c079c0297e829e550d8f2c4e0ffef215506bd1d0ddd2bff3de\",\n                \"sha256:d8837ff272800668aabdfe70b966631914b0d6513aed4fc1b1428446f771834d\",\n                \"sha256:ef694fe72a3995aa778a5095bda946e0d31f7efabd5e8063ad8c6238ab7d3f78\",\n                \"sha256:f1fd1a6f40a501ba4035f5ed2c1f4faa68245d1407bf97d2ee401e4f23d1720b\",\n                \"sha256:fa337b6bd5fe2b8c4e705f4102186feb9985de9bb8536d32d5129a658f1789e0\",\n                \"sha256:febd31cd0d2fd2509ca2ec53cb339f8bf593c1bd245b9fc55c1917a68532a0af\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.15.3\"\n        },\n        \"packaging\": {\n            \"hashes\": [\n                \"sha256:0886227f54515e592aaa2e5a553332c73962917f2831f1b0f9b9f4380a4b9807\",\n                \"sha256:f95a1e147590f204328170981833854229bb2912ac3d5f89e2a8ccd2834800c9\"\n            ],\n            \"version\": \"==18.0\"\n        },\n        \"pycparser\": {\n            \"hashes\": [\n                \"sha256:a988718abfad80b6b157acce7bf130a30876d27603738ac39f140993246b25b3\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version != '3.3.*' and python_version != '3.0.*' and python_version != '3.2.*' and python_version != '3.1.*'\",\n            \"version\": \"==2.19\"\n        },\n        \"pygments\": {\n            \"hashes\": [\n                \"sha256:78f3f434bcc5d6ee09020f92ba487f95ba50f1e3ef83ae96b9d5ffa1bab25c5d\",\n                \"sha256:dbae1046def0efb574852fab9e90209b23f556367b5a320c0bcb871c77c3e8cc\"\n            ],\n            \"version\": \"==2.2.0\"\n        },\n        \"pyparsing\": {\n            \"hashes\": [\n                \"sha256:40856e74d4987de5d01761a22d1621ae1c7f8774585acae358aa5c5936c6c90b\",\n                \"sha256:f353aab21fd474459d97b709e527b5571314ee5f067441dc9f88e33eecd96592\"\n            ],\n            \"markers\": \"python_version >= '2.6' and python_version != '3.0.*' and python_version != '3.2.*' and python_version != '3.1.*'\",\n            \"version\": \"==2.3.0\"\n        },\n        \"pytz\": {\n            \"hashes\": [\n                \"sha256:31cb35c89bd7d333cd32c5f278fca91b523b0834369e757f4c5641ea252236ca\",\n                \"sha256:8e0f8568c118d3077b46be7d654cc8167fa916092e28320cde048e54bfc9f1e6\"\n            ],\n            \"version\": \"==2018.7\"\n        },\n        \"pyyaml\": {\n            \"hashes\": [\n                \"sha256:3d7da3009c0f3e783b2c873687652d83b1bbfd5c88e9813fb7e5b03c0dd3108b\",\n                \"sha256:3ef3092145e9b70e3ddd2c7ad59bdd0252a94dfe3949721633e41344de00a6bf\",\n                \"sha256:40c71b8e076d0550b2e6380bada1f1cd1017b882f7e16f09a65be98e017f211a\",\n                \"sha256:558dd60b890ba8fd982e05941927a3911dc409a63dcb8b634feaa0cda69330d3\",\n                \"sha256:a7c28b45d9f99102fa092bb213aa12e0aaf9a6a1f5e395d36166639c1f96c3a1\",\n                \"sha256:aa7dd4a6a427aed7df6fb7f08a580d68d9b118d90310374716ae90b710280af1\",\n                \"sha256:bc558586e6045763782014934bfaf39d48b8ae85a2713117d16c39864085c613\",\n                \"sha256:d46d7982b62e0729ad0175a9bc7e10a566fc07b224d2c79fafb5e032727eaa04\",\n                \"sha256:d5eef459e30b09f5a098b9cea68bebfeb268697f78d647bd255a085371ac7f3f\",\n                \"sha256:e01d3203230e1786cd91ccfdc8f8454c8069c91bee3962ad93b87a4b2860f537\",\n                \"sha256:e170a9e6fcfd19021dd29845af83bb79236068bf5fd4df3327c1be18182b2531\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==3.13\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:99dcfdaaeb17caf6e526f32b6a7b780461512ab3f1d992187801694cba42770c\",\n                \"sha256:a84b8c9ab6239b578f22d1c21d51b696dcfe004032bb80ea832398d6909d7279\"\n            ],\n            \"version\": \"==2.20.0\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:70e8a77beed4562e7f14fe23a786b54f6296e34344c23bc42f07b15018ff98e9\",\n                \"sha256:832dc0e10feb1aa2c68dcc57dbb658f1c7e65b9b61af69048abc87a2db00a0eb\"\n            ],\n            \"version\": \"==1.11.0\"\n        },\n        \"snowballstemmer\": {\n            \"hashes\": [\n                \"sha256:919f26a68b2c17a7634da993d91339e288964f93c274f1343e3bbbe2096e1128\",\n                \"sha256:9f3bcd3c401c3e862ec0ebe6d2c069ebc012ce142cce209c098ccb5b09136e89\"\n            ],\n            \"version\": \"==1.2.1\"\n        },\n        \"sphinx\": {\n            \"hashes\": [\n                \"sha256:652eb8c566f18823a022bb4b6dbc868d366df332a11a0226b5bc3a798a479f17\",\n                \"sha256:d222626d8356de702431e813a05c68a35967e3d66c6cd1c2c89539bb179a7464\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.8.1\"\n        },\n        \"sphinxcontrib-websupport\": {\n            \"hashes\": [\n                \"sha256:68ca7ff70785cbe1e7bccc71a48b5b6d965d79ca50629606c7861a21b206d9dd\",\n                \"sha256:9de47f375baf1ea07cdb3436ff39d7a9c76042c10a769c52353ec46e4e8fc3b9\"\n            ],\n            \"version\": \"==1.1.0\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:61bf29cada3fc2fbefad4fdf059ea4bd1b4a86d2b6d15e1c7c0b582b9752fe39\",\n                \"sha256:de9529817c93f27c8ccbfead6985011db27bd0ddfcdb2d86f3f663385c6a9c22\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version != '3.3.*' and python_version < '4' and python_version != '3.0.*' and python_version != '3.2.*' and python_version != '3.1.*'\",\n            \"version\": \"==1.24.1\"\n        }\n    },\n    \"develop\": {}\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.564453125,
          "content": "\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://raw.githubusercontent.com/dev-cafe/cmake-cookbook/master/LICENSE)\n\n[![Travis](https://travis-ci.org/dev-cafe/cmake-cookbook.svg?branch=master)](https://travis-ci.org/dev-cafe/cmake-cookbook)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/fvmidu9lcqvy52g8?svg=true)](https://ci.appveyor.com/project/bast/cmake-cookbook)\n[![CircleCI](https://circleci.com/gh/dev-cafe/cmake-cookbook.svg?style=svg)](https://circleci.com/gh/dev-cafe/cmake-cookbook)\n\n[![GitHub issues](https://img.shields.io/github/issues/dev-cafe/cmake-cookbook.svg?style=flat-square)](https://github.com/dev-cafe/cmake-cookbook/issues)\n[![GitHub forks](https://img.shields.io/github/forks/dev-cafe/cmake-cookbook.svg?style=flat-square)](https://github.com/dev-cafe/cmake-cookbook/network)\n[![GitHub stars](https://img.shields.io/github/stars/dev-cafe/cmake-cookbook.svg?style=flat-square)](https://github.com/dev-cafe/cmake-cookbook/stargazers)\n\n\n# CMake Cookbook\n\nThis repository collects sources for the recipes contained in the\n[CMake Cookbook](https://www.packtpub.com/application-development/cmake-cookbook)\npublished by Packt and authored by [Radovan Bast](https://github.com/bast) and\n[Roberto Di Remigio](https://github.com/robertodr)\n\n- [Contributing](.github/CONTRIBUTING.md)\n- [Testing](testing/README.md)\n\n\n## Table of contents\n\n\n\n### [Chapter 1: From a Simple Executable to Libraries](chapter-01/README.md)\n\n- [1. Compiling a single source file into an executable](chapter-01/recipe-01/README.md)\n- [2. Switching generators](chapter-01/recipe-02/README.md)\n- [3. Building and linking static and shared libraries](chapter-01/recipe-03/README.md)\n- [4. Controlling compilation with conditionals](chapter-01/recipe-04/README.md)\n- [5. Presenting options to the user](chapter-01/recipe-05/README.md)\n- [6. Specifying the compiler](chapter-01/recipe-06/README.md)\n- [7. Switching the build type](chapter-01/recipe-07/README.md)\n- [8. Controlling compiler flags](chapter-01/recipe-08/README.md)\n- [9. Setting the standard for the language](chapter-01/recipe-09/README.md)\n- [10. Using control flow constructs](chapter-01/recipe-10/README.md)\n\n\n### [Chapter 2: Detecting the Environment](chapter-02/README.md)\n\n- [1. Discovering the operating system](chapter-02/recipe-01/README.md)\n- [2. Dealing with platform-dependent source code](chapter-02/recipe-02/README.md)\n- [3. Dealing with compiler-dependent source code](chapter-02/recipe-03/README.md)\n- [4. Discovering the host processor architecture](chapter-02/recipe-04/README.md)\n- [5. Discovering the host processor instruction set](chapter-02/recipe-05/README.md)\n- [6. Enabling vectorization for the Eigen library](chapter-02/recipe-06/README.md)\n\n\n### [Chapter 3: Detecting External Libraries and Programs](chapter-03/README.md)\n\n- [1. Detecting the Python interpreter](chapter-03/recipe-01/README.md)\n- [2. Detecting the Python library](chapter-03/recipe-02/README.md)\n- [3. Detecting Python modules and packages](chapter-03/recipe-03/README.md)\n- [4. Detecting the BLAS and LAPACK math libraries](chapter-03/recipe-04/README.md)\n- [5. Detecting the OpenMP parallel environment](chapter-03/recipe-05/README.md)\n- [6. Detecting the MPI parallel environment](chapter-03/recipe-06/README.md)\n- [7. Detecting the Eigen library](chapter-03/recipe-07/README.md)\n- [8. Detecting the Boost libraries](chapter-03/recipe-08/README.md)\n- [9. Detecting external libraries: I. Using `pkg-config`](chapter-03/recipe-09/README.md)\n- [10. Detecting external libraries: II. Writing a find-module](chapter-03/recipe-10/README.md)\n\n\n### [Chapter 4: Creating and Running Tests](chapter-04/README.md)\n\n- [1. Creating a simple unit test](chapter-04/recipe-01/README.md)\n- [2. Defining a unit test using the Catch2 library](chapter-04/recipe-02/README.md)\n- [3. Defining a unit test and linking against Google Test](chapter-04/recipe-03/README.md)\n- [4. Defining a unit test and linking against Boost test](chapter-04/recipe-04/README.md)\n- [5. Using dynamic analysis to detect memory defects](chapter-04/recipe-05/README.md)\n- [6. Testing expected failures](chapter-04/recipe-06/README.md)\n- [7. Using timeouts for long tests](chapter-04/recipe-07/README.md)\n- [8. Running tests in parallel](chapter-04/recipe-08/README.md)\n- [9. Running a subset of tests](chapter-04/recipe-09/README.md)\n- [10. Using test fixtures](chapter-04/recipe-10/README.md)\n\n\n### [Chapter 5: Configure-time and Build-time Operations](chapter-05/README.md)\n\n- [1. Using platform-independent file operations](chapter-05/recipe-01/README.md)\n- [2. Running a custom command at configure time](chapter-05/recipe-02/README.md)\n- [3. Running a custom command at build time: I. Using `add_custom_command`](chapter-05/recipe-03/README.md)\n- [4. Running a custom command at build time: II. Using `add_custom_target`](chapter-05/recipe-04/README.md)\n- [5. Running custom commands for specific targets at build time](chapter-05/recipe-05/README.md)\n- [6. Probing compilation and linking](chapter-05/recipe-06/README.md)\n- [7. Probing compiler flags](chapter-05/recipe-07/README.md)\n- [8. Probing execution](chapter-05/recipe-08/README.md)\n- [9. Fine-tuning configuration and compilation with generator expressions](chapter-05/recipe-09/README.md)\n\n\n### [Chapter 6: Generating Source Code](chapter-06/README.md)\n\n- [1. Generating sources at configure time](chapter-06/recipe-01/README.md)\n- [2. Generating source code at configure time using Python](chapter-06/recipe-02/README.md)\n- [3. Generating source code at build time using Python](chapter-06/recipe-03/README.md)\n- [4. Recording the project version information for reproducibility](chapter-06/recipe-04/README.md)\n- [5. Recording the project version from a file](chapter-06/recipe-05/README.md)\n- [6. Recording the Git hash at configure time](chapter-06/recipe-06/README.md)\n- [7. Recording the Git hash at build time](chapter-06/recipe-07/README.md)\n\n\n### [Chapter 7: Structuring Projects](chapter-07/README.md)\n\n- [1. Code reuse with functions and macros](chapter-07/recipe-01/README.md)\n- [2. Splitting CMake sources into modules](chapter-07/recipe-02/README.md)\n- [3. Writing a function to test and set compiler flags](chapter-07/recipe-03/README.md)\n- [4. Defining a function or macro with named arguments](chapter-07/recipe-04/README.md)\n- [5. Redefining functions and macros](chapter-07/recipe-05/README.md)\n- [6. Deprecating functions, macros, and variables](chapter-07/recipe-06/README.md)\n- [7. Limiting scope with `add_subdirectory`](chapter-07/recipe-07/README.md)\n- [8. Avoiding global variables using `target_sources`](chapter-07/recipe-08/README.md)\n- [9. Organizing Fortran projects](chapter-07/recipe-09/README.md)\n\n\n### [Chapter 8: The Superbuild Pattern](chapter-08/README.md)\n\n- [1. Using the superbuild pattern](chapter-08/recipe-01/README.md)\n- [2. Managing dependencies with a superbuild: I. The Boost libraries](chapter-08/recipe-02/README.md)\n- [3. Managing dependencies with a superbuild: II. The FFTW library](chapter-08/recipe-03/README.md)\n- [4. Managing dependencies with a superbuild: III. The Google Test framework](chapter-08/recipe-04/README.md)\n- [5. Managing your project as a superbuild](chapter-08/recipe-05/README.md)\n\n\n### [Chapter 9: Mixed-language Projects](chapter-09/README.md)\n\n- [1. Building Fortran projects that use C/C++ libraries](chapter-09/recipe-01/README.md)\n- [2. Building C/C++ projects that use Fortran libraries](chapter-09/recipe-02/README.md)\n- [3. Building C++ and Python projects using Cython](chapter-09/recipe-03/README.md)\n- [4. Building C++ and Python projects using Boost.Python](chapter-09/recipe-04/README.md)\n- [5. Building C++ and Python projects using pybind11](chapter-09/recipe-05/README.md)\n- [6. Mixing C, C++, Fortran, and Python using Python CFFI](chapter-09/recipe-06/README.md)\n\n\n### [Chapter 10: Writing an Installer](chapter-10/README.md)\n\n- [1. Installing your project](chapter-10/recipe-01/README.md)\n- [2. Generating export headers](chapter-10/recipe-02/README.md)\n- [3. Exporting your targets](chapter-10/recipe-03/README.md)\n- [4. Installing a superbuild](chapter-10/recipe-04/README.md)\n\n\n### [Chapter 11: Packaging Projects](chapter-11/README.md)\n\n- [1. Generating source and binary packages](chapter-11/recipe-01/README.md)\n- [2. Distributing a C++/Python project built with CMake/pybind11 via PyPI](chapter-11/recipe-02/README.md)\n- [3. Distributing a C/Fortran/Python project built with CMake/CFFI via PyPI](chapter-11/recipe-03/README.md)\n- [4. Distributing a simple project as Conda package](chapter-11/recipe-04/README.md)\n- [5. Distributing a project with dependencies as Conda package](chapter-11/recipe-05/README.md)\n\n\n### [Chapter 12: Building Documentation](chapter-12/README.md)\n\n- [1. Building documentation using Doxygen](chapter-12/recipe-01/README.md)\n- [2. Building documentation using Sphinx](chapter-12/recipe-02/README.md)\n- [3. Combining Doxygen and Sphinx](chapter-12/recipe-03/README.md)\n\n\n### [Chapter 13: Alternative Generators and Cross-compilation](chapter-13/README.md)\n\n- [1. Cross-compiling a hello world example](chapter-13/recipe-01/README.md)\n- [2. Cross-compiling a Windows binary with OpenMP parallelization](chapter-13/recipe-02/README.md)\n\n\n### [Chapter 14: Testing Dashboards](chapter-14/README.md)\n\n- [1. Deploying tests to the CDash dashboard](chapter-14/recipe-01/README.md)\n- [2. Reporting test coverage to the CDash dashboard](chapter-14/recipe-02/README.md)\n- [3. Using the AddressSanitizer and reporting memory defects to CDash](chapter-14/recipe-03/README.md)\n- [4. Using the ThreadSanitizer and reporting data races to CDash](chapter-14/recipe-04/README.md)\n\n\n### [Chapter 15: Porting a Project to CMake](chapter-15/README.md)\n"
        },
        {
          "name": "STYLE_GUIDE.md",
          "type": "blob",
          "size": 1.77734375,
          "content": "# Style Guide\n\n## Conventions\n\n- Folders for recipes are named `chapter-N/recipe-M`, where `N` is the chapter number and `M` is a number, _i.e._\n  `01`, `02`, etc. In each chapter we restart the recipe counter.\n- Each recipe can have more than one example subfolder. These subfolders are\n  named `*example*`. Any code must reside in these subfolders.\n\n\n## Updating the table of contents and generate README files\n\nThe `README.md` files that form the table of contents (main `README.md`, chapter `README.md`s and recipe `README.md`s)\nare generated from `title.txt` and `abstract.md` files.\n\nThis means that you **should not** modify `README.md` files but rather only edit `title.txt` and `abstract.md` files.\n\nTo update the `README.md` files, run `python tools/generate-readmes.py` - this file updates `README.md` in place.\n\n\n## CMake Coding style\n\n### Indentation\n\nWe use 2 spaces instead of 4 spaces to reduce the printed page width. No tabs.\nGet the integration for [EditorConfig](https://editorconfig.org/) in your\nfavorite editor to help you keep this convention.\n\n\n### Case of commands\n\nWe use lowercase for commands, _i.e._:\n```cmake\ncmake_minimum_required(VERSION 3.5 FATAL_ERROR)\n```\nand not:\n```cmake\nCMAKE_MINIMUM_REQUIRED(VERSION 3.5 FATAL_ERROR)\n```\n\n\n### Line continuation\n\nIt is OK to put commands on one line if it improves readability, _e.g._:\n```cmake\nlist(APPEND CXX_BASIC_FLAGS \"-g3\" \"-O1\")\n```\n\nFor line continuation we use the following style:\n```cmake\ntarget_compile_options(asan-example\n  PUBLIC\n    ${CXX_BASIC_FLAGS}\n    ${_asan_flags}\n  )\n\nset(_whathaveyou\n  item1\n  item2\n  item3\n  )\n```\n\n\n### Variable names\n\nStart an internal variable (_i.e._ one that is not exposed to the user) with an\nunderscore:\n```cmake\nset(PUBLIC_VARIABLE \"this one is exposed\")\n\nset(_temp \"this one is internal\")\n```\n"
        },
        {
          "name": "chapter-01",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-02",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-03",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-04",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-05",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-06",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-07",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-08",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-09",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-10",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-11",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-12",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-13",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-14",
          "type": "tree",
          "content": null
        },
        {
          "name": "chapter-15",
          "type": "tree",
          "content": null
        },
        {
          "name": "figures",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0546875,
          "content": "breathe\ncffi\ncolorama\ncython\ndocopt\nnumpy\npyyaml\nsphinx\n"
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}