{
  "metadata": {
    "timestamp": 1736565365015,
    "page": 197,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kasmtech/KasmVNC",
      "stars": 3711,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2548828125,
          "content": "*.[ao]\n*.mo\n*.la\n*.lo\n.deps\n.libs\n\nCMakeFiles\nCMakeCache.txt\n*.cmake\nMakefile\nMakefile.in\nconfig.h\n\nbuilder/build/\nbuilder/www/\nspec/tmp\n\n# Deb building artefacts\ndebian/.debhelper/\ndebian/files\ndebian/kasmvncserver.substvars\ndebian/kasmvncserver/\n.pc\n.vscode/\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 18.330078125,
          "content": "image: docker\nservices:\n  - docker:dind\n\nvariables:\n  KASMVNC_COMMIT_ID: $CI_COMMIT_SHA\n  GITLAB_SHARED_DIND_DIR: /builds/$CI_PROJECT_PATH/shared\n  GIT_SUBMODULE_STRATEGY: normal\n  GIT_FETCH_EXTRA_FLAGS: --tags --force\n  # E.g. BUILD_JOBS: build_debian_buster,build_ubuntu_bionic. This will include\n  # arm builds, because build_debian_buster_arm matches build_debian_buster.\n  # \"BUILD_JOBS: none\" won't build any build jobs, nor www.\n  BUILD_JOBS: all\n  DOCKER_HOST: tcp://docker:2375\n  DOCKER_TLS_CERTDIR: \"\"\n\nworkflow:\n  rules:\n    # Disable tag builds.\n    - if: $CI_COMMIT_TAG != $CI_COMMIT_REF_NAME && $CI_PIPELINE_SOURCE != \"merge_request_event\"\n\nstages:\n  - www\n  - build\n  - test\n  - upload\n\n.prepare_build: &prepare_build\n  - pwd\n  - apk add bash\n  - mkdir -p \"$GITLAB_SHARED_DIND_DIR\" && chmod 777 \"$GITLAB_SHARED_DIND_DIR\"\n\n.prepare_www: &prepare_www\n  - tar -zxf output/www/kasm_www.tar.gz -C builder/\n\n.prepare_artfacts: &prepare_artfacts\n  - cp -r builder/build/* output/\n  - rm output/*.tar.gz\n\ndefault:\n  tags:\n    - oci-fixed-amd\n\nbuild_www:\n  stage: www\n  allow_failure: false\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n  script:\n    - webpacked_www=$PWD/builder/www\n    - src_www=kasmweb\n    - docker build -t kasmweb/www -f builder/dockerfile.www.build .\n    - docker run --rm -v $PWD/builder/www:/build kasmweb/www:latest\n    - mkdir -p output/www\n    - cd builder\n    - echo $PWD\n    - ls -l\n    - ls -l ../output\n    - tar -zcvf ../output/www/kasm_www.tar.gz www\n  only:\n    variables:\n      - $BUILD_JOBS !~ /^none$/\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_bionic:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu bionic\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_bionic_arm:\n  stage: build\n  allow_failure: false\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu bionic\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_focal:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu focal;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_focal_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu focal;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_jammy:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu jammy;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_jammy_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu jammy;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_ubuntu_noble:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package ubuntu noble;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n    \nbuild_ubuntu_noble_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script: \n    - bash builder/build-package ubuntu noble;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_debian_buster:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package debian buster;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_debian_buster_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package debian buster;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_debian_bullseye:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package debian bullseye;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_debian_bullseye_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package debian bullseye;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\n\nbuild_debian_bookworm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package debian bookworm;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_debian_bookworm_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package debian bookworm;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_kali_rolling:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package kali kali-rolling;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_kali_rolling_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package kali kali-rolling;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_oracle_8:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package oracle 8;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_oracle_8_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package oracle 8;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_oracle_9:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package oracle 9;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_oracle_9_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package oracle 9;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_opensuse_15:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package opensuse 15;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_opensuse_15_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package opensuse 15;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_thirtyseven:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora thirtyseven;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_thirtyseven_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora thirtyseven;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_thirtyeight:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora thirtyeight;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_thirtyeight_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora thirtyeight;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_thirtynine:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora thirtynine;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_thirtynine_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora thirtynine;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_fedora_forty:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora forty;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n    \nbuild_fedora_forty_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script: \n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package fedora forty;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_317:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 317;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_317_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 317;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\ntest:\n  stage: test\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n  script:\n    - bash builder/test-vncserver\n\n\nbuild_alpine_318:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 318;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_318_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 318;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_319:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 319;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_319_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 319;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_320:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 320;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_320_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 320;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_321:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 321;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nbuild_alpine_321_arm:\n  stage: build\n  allow_failure: true\n  tags:\n    - oci-fixed-arm\n  before_script:\n    - *prepare_build\n    - *prepare_www\n  after_script:\n    - *prepare_artfacts\n  script:\n    - bash builder/build-package alpine 321;\n  only:\n    variables:\n      - $BUILD_JOBS == 'all' || $BUILD_JOBS =~ $CI_JOB_NAME\n  artifacts:\n    paths:\n      - output/\n\nupload:\n  stage: upload\n  image: ubuntu:focal\n  tags:\n    - oci-fixed-amd\n  artifacts:\n    paths:\n      - output/\n  before_script:\n    - . .ci/upload.sh\n  script:\n    - prepare_to_run_scripts_and_s3_uploads\n    - S3_CRASHPAD_BUILD_DIRECTORY=\"kasmvnc/crashpad/${CI_COMMIT_SHA}\"\n    - for dbgsym_package in `find output/ -type f -name '*dbgsym*deb'`; do\n        deb_package=$(find_deb_package \"$dbgsym_package\");\n        xvnc_md5sum=$(fetch_xvnc_md5sum \"$deb_package\");\n        upload_filename=\"${S3_CRASHPAD_BUILD_DIRECTORY}/${xvnc_md5sum}/kasmvncserver-dbgsym.deb\";\n        echo;\n        echo \"File to upload $upload_filename\";\n        upload_to_s3 \"$dbgsym_package\" \"$upload_filename\" \"$S3_BUCKET\";\n        rm \"$dbgsym_package\";\n      done\n    - export S3_BUILD_DIRECTORY=\"kasmvnc/${CI_COMMIT_SHA}\"\n    - export RELEASE_VERSION=$(.ci/next_release_version \"$CI_COMMIT_REF_NAME\")\n    - uploaded_files=()\n    - for package in `find output/ -type f -name '*.deb' -or -name '*.rpm' -or -name '*.tgz'`; do\n        prepare_upload_filename \"$package\";\n        upload_filename=\"${S3_BUILD_DIRECTORY}/$upload_filename\";\n        echo;\n        echo \"File to upload $upload_filename\";\n        upload_to_s3 \"$package\" \"$upload_filename\" \"$S3_BUCKET\";\n        UPLOAD_NAME=$(basename $upload_filename | sed 's#kasmvncserver_##' | sed -r 's#_([0-9]{1,3}\\.){2}[0-9]{1,2}_\\S+?([a-f0-9]{6})##' | sed -r 's#\\.(deb|rpm|tgz)##');\n        curl --request POST --header \"PRIVATE-TOKEN:${GITLAB_API_TOKEN}\" \"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/statuses/${CI_COMMIT_SHA}?state=success&name=${UPLOAD_NAME}&target_url=${S3_URL}\";\n        uploaded_files+=(\"$upload_filename\");\n      done\n    - make_index_html \"${uploaded_files[@]}\" > output/index.html;\n\nupload_build_preview:\n  stage: upload\n  needs: [\"upload\"]\n  dependencies: [\"upload\"]\n  image: ubuntu:focal\n  tags:\n    - oci-fixed-amd\n  before_script:\n    - . .ci/upload.sh\n  resource_group: upload_build_preview\n  only:\n    variables:\n      - $CI_COMMIT_BRANCH == 'master'\n  script:\n    - prepare_to_run_scripts_and_s3_uploads\n    - preview_builds_dir=kasmvnc/preview-builds\n    - upload_to_s3 \"output/index.html\" \"$preview_builds_dir/index.html\" \"$S3_BUCKET\"\n    - curl --request POST --header \"PRIVATE-TOKEN:${GITLAB_API_TOKEN}\" \"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/statuses/${CI_COMMIT_SHA}?state=success&name=index.html&target_url=${S3_URL}\";\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1044921875,
          "content": "[submodule \"kasmweb\"]\n\tpath = kasmweb\n\turl = https://github.com/kasmtech/noVNC.git\n\tbranch = release/1.2.2\n"
        },
        {
          "name": "ACKNOWLEDGEMENTS.md",
          "type": "blob",
          "size": 4.8974609375,
          "content": "### License & Legal\n\nIncomplete and generally out of date copyright list::\n\n        Copyright (C) 2020 Kasm Technologies LLC\n        Copyright (C) 1999 AT&T Laboratories Cambridge\n        Copyright (C) 2002-2005 RealVNC Ltd.\n        Copyright (C) 2000-2006 TightVNC Group\n        Copyright (C) 2005-2006 Martin Koegler\n        Copyright (C) 2005-2006 Sun Microsystems, Inc.\n        Copyright (C) 2006 OCCAM Financial Technology\n        Copyright (C) 2000-2008 Constantin Kaplinsky\n        Copyright (C) 2004-2017 Peter Astrand for Cendio AB\n        Copyright (C) 2010 Antoine Martin\n        Copyright (C) 2010 m-privacy GmbH\n        Copyright (C) 2009-2011 D. R. Commander\n        Copyright (C) 2009-2011 Pierre Ossman for Cendio AB\n        Copyright (C) 2004, 2009-2011 Red Hat, Inc.\n        Copyright (C) 2009-2018 TigerVNC Team\n        All Rights Reserved.\n\nThis software is distributed under the GNU General Public Licence as published\nby the Free Software Foundation.  See the file LICENSE.TXT for the conditions\nunder which this software is made available.  KasmVNC also contains code from\nother sources.  See the Acknowledgements section below, and the individual\nsource files, for details of the conditions under which they are made\navailable.\n\n\n### Acknowledgements\nThis distribution contains zlib compression software.  This is:\n\n  Copyright (C) 1995-2002 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n\n  The data format used by the zlib library is described by RFCs (Request for\n  Comments) 1950 to 1952 in the files ftp://ds.internic.net/rfc/rfc1950.txt\n  (zlib format), rfc1951.txt (deflate format) and rfc1952.txt (gzip format).\n\n\nThis distribution contains public domain DES software by Richard Outerbridge.\nThis is:\n\nCopyright (c) 1988,1989,1990,1991,1992 by Richard Outerbridge.\n(GEnie : OUTER; CIS : [71755,204]) Graven Imagery, 1992.\n\n\nThis distribution contains software from the X Window System.  This is:\n\n Copyright 1987, 1988, 1998  The Open Group\n\n Permission to use, copy, modify, distribute, and sell this software and its\n documentation for any purpose is hereby granted without fee, provided that\n the above copyright notice appear in all copies and that both that\n copyright notice and this permission notice appear in supporting\n documentation.\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n Except as contained in this notice, the name of The Open Group shall not be\n used in advertising or otherwise to promote the sale, use or other dealings\n in this Software without prior written authorization from The Open Group.\n\n\n Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts.\n All Rights Reserved\n\n Permission to use, copy, modify, and distribute this software and its\n documentation for any purpose and without fee is hereby granted,\n provided that the above copyright notice appear in all copies and that\n both that copyright notice and this permission notice appear in\n supporting documentation, and that the name of Digital not be\n used in advertising or publicity pertaining to distribution of the\n software without specific, written prior permission.\n\n DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING\n ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL\n DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR\n ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n SOFTWARE.\n"
        },
        {
          "name": "BUILDING.txt",
          "type": "blob",
          "size": 13.990234375,
          "content": "*******************************************************************************\n**     Building KasmVNC\n*******************************************************************************\n\n\n================================\nBuild Requirements (All Systems)\n================================\n\n-- CMake (http://www.cmake.org) v2.8 or later\n\n-- zlib\n\n-- If building TLS support:\n   * GnuTLS 3.x\n   * See \"Building TLS Support\" below.\n\n-- If building native language support (NLS):\n   * Gnu gettext 0.14.4 or later\n   * See \"Building Native Language Support\" below.\n\n-- libjpeg-turbo\n   * \"Normal\" libjpegv6 is also supported, although it is not\n     recommended as it is much slower.\n\n-- libwebp\n\n\n=========================\nBuild Requirements (Unix)\n=========================\n\n-- Non-Mac platforms:\n   * X11 development kit\n\n-- If building Xvnc/libvnc.so:\n   * Xorg server source code, 1.7 or never\n   * All build requirements Xorg imposes (see its documentation)\n\n============================\nBuild Requirements (Windows)\n============================\n\n-- MinGW or MinGW-w64\n\n-- Inno Setup (needed to build the KasmVNC installer)\n   Inno Setup can be downloaded from http://www.jrsoftware.org/isinfo.php.\n   You also need the Inno Setup Preprocessor, which is available in the\n   Inno Setup QuickStart Pack.\n\n   Add the directory containing iscc.exe (for instance, \n   C:\\Program Files\\Inno Setup 5) to the system or user PATH environment\n   variable prior to building KasmVNC.\n\n\n==================\nOut-of-Tree Builds\n==================\n\nBinary objects, libraries, and executables are generated in the same directory\nfrom which cmake was executed (the \"binary directory\"), and this directory need\nnot necessarily be the same as the KasmVNC source directory.  You can create\nmultiple independent binary directories, in which different versions of\nKasmVNC can be built from the same source tree using different compilers or\nsettings.  In the sections below, {build_directory} refers to the binary\ndirectory, whereas {source_directory} refers to the KasmVNC source directory.\nFor in-tree builds, these directories are the same.\n\n\n=================\nBuilding KasmVNC\n=================\n\n\nBuilding the KasmVNC Server on Modern Unix/Linux Systems\n---------------------------------------------------------\n\nBuilding the KasmVNC Server (Xvnc) is a bit trickier.  On newer systems\ncontaining Xorg 7.4 or later (such as Fedora), Xvnc is typically built to use\nthe X11 shared libraries provided with the system.  The procedure for this is\nsystem-specific, since it requires specifying such things as font directories,\nbut the general outline is as follows.\n\n  > cd {build_directory}\n\n    If performing an out-of-tree build:\n  > mkdir unix\n  > cp -R {source_directory}/unix/xserver unix/\n\n  > cp -R {xorg_source}/* unix/xserver/\n    (NOTE: {xorg_source} is the directory containing the Xorg source for the\n    machine on which you are building KasmVNC.  The most recent versions of\n    Red Hat/CentOS/Fedora, for instance, provide an RPM called\n    \"xorg-x11-server-source\", which installs the Xorg source under\n    /usr/share/xorg-x11-server-source.)\n\n  > cd unix/xserver/\n  > patch -p1 < {source_directory}/unix/xserver{version}.patch\n    (where {version} matches the X server version you are building, such as\n    \"17\" for version 1.7.x.)\n  > autoreconf -fiv\n\n  > ./configure --with-pic --without-dtrace --disable-static --disable-dri \\\n      --disable-xinerama --disable-xvfb --disable-xnest --disable-xorg \\\n      --disable-dmx --disable-xwin --disable-xephyr --disable-kdrive \\\n      --disable-config-dbus --disable-config-hal --disable-config-udev \\\n      --disable-dri2 --enable-install-libxf86config --enable-glx \\\n      --with-default-font-path=\"catalogue:/etc/X11/fontpath.d,built-ins\" \\\n      --with-fontdir=/usr/share/X11/fonts \\\n      --with-xkb-path=/usr/share/X11/xkb \\\n      --with-xkb-output=/var/lib/xkb \\\n      --with-xkb-bin-directory=/usr/bin \\\n      --with-serverconfig-path=/usr/lib[64]/xorg \\\n      --with-dri-driver-path=/usr/lib[64]/dri \\\n      {additional configure options}\n    (NOTE: This is merely an example that works with Red Hat Enterprise/CentOS\n    6 and recent Fedora releases.  You should customize it for your particular\n    system.  In particular, it will be necessary to customize the font, XKB,\n    and DRI directories.)\n\n  > make KASMVNC_SRCDIR={source_directory}\n\n\nBuilding the KasmVNC Server on Legacy Unix/Linux Systems\n---------------------------------------------------------\n\nThose using systems with older versions of Xorg must build a \"legacy-friendly\"\nversion of the KasmVNC Server.  This is accomplished by downloading and\nbuilding the more recent Xorg modules in a local directory and then building\nXvnc such that it links against the local build of these libraries, not the X11\nlibraries installed on the system.  The \"build-xorg\" script in the KasmVNC\nsource distribution (located under contrib/xorg/) automates this process.\n\nThe following procedure will build a\n\"legacy-friendly\" version of the KasmVNC Server:\n\n  cd {build_directory}\n  sh {source_directory}/contrib/xorg/build-xorg init\n  sh {source_directory}/contrib/xorg/build-xorg build [additional CMake flags]\n\nbuild-xorg generates a version of Xvnc that has no external dependencies on the\nX11 shared libraries or any other distribution-specific shared libraries.  This\nversion of Xvnc should be transportable across multiple O/S distributions.\nbuild-xorg should work on Red Hat Enterprise 4, its contemporaries, and later\nsystems.  It probably will not work on older systems.  It has not been tested\non non-Linux systems (yet).\n\nbuild-xorg can also be used to rebuild just the KasmVNC Server,\nonce the X11 modules and other dependencies have been built for the first time.\nThis is convenient for testing changes that just apply to the KasmVNC source\ncode.  To accomplish this, run:\n\n  sh {source_directory}/contrib/xorg/build-xorg rebuild [additional make flags]\n\nFor instance,\n\n  sh {source_directory}/contrib/xorg/build-xorg rebuild clean\n\nwill clean the Xvnc build without destroying any of the\nbuild configuration or module dependencies.\n\n\nDebug Build\n-----------\n\nAdd \"-DCMAKE_BUILD_TYPE=Debug\" to the CMake command line.\n\n\nPortable (semi-static) Build\n----------------------------\n\nKasmVNC can under favourble circumstances be built in a way that allows\nthe resulting binaries to run on any system without having to also install\nall the dynamic libraries it depends on. Enable this mode by adding:\n\n  -DBUILD_STATIC=1\n\nto the CMake command line.\n\nNote that the method used to achieve this is very fragile and it may be\nnecessary to tweak cmake/StaticBuild.cmake to make things work on your\nspecific system.\n\n\n======================================\nBuilding TLS Support\n======================================\n\nTLS requires GnuTLS, which is supplied with most Linux distributions and\nwith MinGW for Windows and can be built from source on OS X and other \nUnix variants. However, GnuTLS versions > 2.12.x && < 3.3.x should be\navoided because of potential incompatibilities during initial handshaking.\n\nYou can override the GNUTLS_LIBRARY and GNUTLS_INCLUDE_DIR CMake variables\nto specify the locations of libgnutls and any dependencies.  For instance,\nadding\n\n  -DGNUTLS_INCLUDE_DIR=/usr/local/include \\\n  -DGNUTLS_LIBRARY=/usr/local/lib/libgnutls.a\n\nto the CMake command line would link KasmVNC against a static version of\nlibgnutls located under /usr/local.\n\n\n======================================\nBuilding Native Language Support (NLS)\n======================================\n\nNLS requires gettext, which is supplied with most Linux distributions and\nwith MinGW for Windows and which can easily be built from source on OS X and\nother Unix variants.\n\nYou can override the ICONV_LIBRARIES and LIBINTL_LIBRARY CMake variables to\nspecify the locations of libiconv and libintl, respectively.  For instance,\nadding\n\n  -DLIBINTL_LIBRARY=/opt/gettext/lib/libintl.a\n\nto the CMake command line would link KasmVNC against a static version of\nlibintl located under /opt/gettext.  Adding\n\n  -DICONV_INCLUDE_DIR=/mingw/include \\\n    -DICONV_LIBRARIES=/mingw/lib/libiconv.a \\\n    -DGETTEXT_INCLUDE_DIR=/mingw/include \\\n    -DLIBINTL_LIBRARY=/mingw/lib/libintl.a\n\nto the CMake command line would link KasmVNC against the static versions of\nlibiconv and libintl included in the MinGW Developer Toolkit.\n\n\n===================\nInstalling KasmVNC\n===================\n\nYou can use the build system to install KasmVNC into a directory of your\nchoosing.  To do this, add:\n\n  -DCMAKE_INSTALL_PREFIX={install_directory}\n\nto the CMake command line.  Then, you can run 'make install' to build and\ninstall it.\n\nIf you don't specify CMAKE_INSTALL_PREFIX, then the default is\nc:\\Program Files\\KasmVNC on Windows and /usr/local on Unix.\n\n\n=========================\nCreating Release Packages\n=========================\n\nThe following commands can be used to create various types of release packages:\n\n\nUnix\n----\n\nmake tarball\n\n  Create a binary tarball containing the utils\n\nmake servertarball\n\n  Create a binary tarball containing both the KasmVNC Server and utils\n\nmake dmg\n\n  Create Macintosh disk image file that contains an application bundle of the\n  utils\n\nmake udmg\n\n  On 64-bit OS X systems, this creates a version of the Macintosh package and\n  disk image which contains universal i386/x86-64 binaries.  You should first\n  configure a 32-bit out-of-tree build of KasmVNC, then configure a 64-bit\n  out-of-tree build, then run 'make udmg' from the 64-bit build directory.  The\n  build system will look for the 32-bit build under {source_directory}/osxx86\n  by default, but you can override this by setting the OSX_X86_BUILD CMake\n  variable to the directory containing your configured 32-bit build.  Either\n  the 64-bit or 32-bit build can be configured to be backward compatible by\n  using the instructions in the \"Build Recipes\" section.\n\n\nWindows\n-------\n\nmake installer\n\n  Create a Windows installer using Inno Setup.  The installer package\n  (KasmVNC[64].exe) will be located under {build_directory}.\n\n\n=============\nBuild Recipes\n=============\n\n\n32-bit Build on 64-bit Linux/Unix (including OS X)\n--------------------------------------------------\n\nSet the following environment variables before building KasmVNC.\n\n  CFLAGS='-O3 -m32'\n  CXXFLAGS='-O3 -m32'\n  LDFLAGS=-m32\n\nIf you are building the KasmVNC Server on a modern Unix/Linux system, then\nyou will also need to pass the appropriate --host argument when configuring the\nX server source (for instance, --host=i686-pc-linux-gnu).\n\n\n64-bit Backward-Compatible Build on 64-bit OS X\n-----------------------------------------------\n\nAdd\n\n  -DCMAKE_OSX_SYSROOT=/Developer/SDKs/MacOSX10.5.sdk \\\n    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.5 \n\nto the CMake command line.  The OS X 10.5 SDK must be installed.\n\n\n32-bit Backward-Compatible Build on 64-bit OS X\n-----------------------------------------------\n\nSet the following environment variables:\n\n  CC=gcc-4.0\n  CXX=g++-4.0\n  CFLAGS='-O3 -m32'\n  CXXFLAGS='-O3 -m32'\n  LDFLAGS=-m32\n\nand add\n\n  -DCMAKE_OSX_SYSROOT=/Developer/SDKs/MacOSX10.4u.sdk \\\n    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.4\n\nto the CMake command line.  The OS X 10.4 SDK must be installed.\n\n\n64-bit MinGW Build on Cygwin\n----------------------------\n\n  cd {build_directory}\n  CC=/usr/bin/x86_64-w64-mingw32-gcc CXX=/usr/bin/x86_64-w64-mingw32-g++ \\\n    RC=/usr/bin/x86_64-w64-mingw32-windres \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_SYSTEM_NAME=Windows \\\n    -DCMAKE_AR=/usr/bin/x86_64-w64-mingw32-ar \\\n    -DCMAKE_RANLIB=/usr/bin/x86_64-w64-mingw32-ranlib {source_directory}\n  make\n\nThis produces a 64-bit build of KasmVNC that does not depend on cygwin1.dll or\nother Cygwin DLL's.  The mingw64-x86_64-gcc-core and mingw64-x86_64-gcc-g++\npackages (and their dependencies) must be installed.\n\n\n32-bit MinGW Build on Cygwin\n----------------------------\n\n  cd {build_directory}\n  CC=/usr/bin/i686-w64-mingw32-gcc CXX=/usr/bin/i686-w64-mingw32-g++ \\\n    RC=/usr/bin/i686-w64-mingw32-windres \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_SYSTEM_NAME=Windows \\\n    -DDCMAKE_AR=/usr/bin/i686-w64-mingw32-ar \\\n    -DCMAKE_RANLIB=/usr/bin/i686-w64-mingw32-ranlib {source_directory}\n  make\n\nThis produces a 32-bit build of KasmVNC that does not depend on cygwin1.dll or\nother Cygwin DLL's.  The mingw64-i686-gcc-core and mingw64-i686-gcc-g++\npackages (and their dependencies) must be installed.\n\n\nMinGW-w64 Build on Windows\n--------------------------\n\nThis produces a 64-bit build of KasmVNC using the \"native\" MinGW-w64 toolchain\n(which is faster than the Cygwin version):\n\n  cd {build_directory}\n  CC={mingw-w64_binary_path}/x86_64-w64-mingw32-gcc \\\n    CXX={mingw-w64_binary_path}/x86_64-w64-mingw32-g++ \\\n    RC={mingw-w64_binary_path}/x86_64-w64-mingw32-windres \\\n    cmake -G \"MSYS Makefiles\" \\\n    -DCMAKE_AR={mingw-w64_binary_path}/x86_64-w64-mingw32-ar \\\n    -DCMAKE_RANLIB={mingw-w64_binary_path}/x86_64-w64-mingw32-ranlib \\\n    {source_directory}\n  make\n\n\nMinGW Build on Linux\n--------------------\n\n  cd {build_directory}\n  CC={mingw_binary_path}/i386-mingw32-gcc \\\n    CXX={mingw_binary_path}/i386-mingw32-g++ \\\n    RC={mingw_binary_path}/i386-mingw32-windres \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_SYSTEM_NAME=Windows \\\n    -DCMAKE_AR={mingw_binary_path}/i386-mingw32-ar \\\n    -DCMAKE_RANLIB={mingw_binary_path}/i386-mingw32-ranlib \\\n    {source_directory}\n  make\n\n\n===============================\nDistribution-Specific Packaging\n===============================\n\n\nRPM Packages for RHEL / CentOS\n------------------------------\n\nThe RPM spec files and patches used to create the nightly builds\nand releases can be found in the \"contrib/rpm/el{5,6}\" directories\nof the KasmVNC subversion trunk.  All external source tarballs\nmust be fetched manually and placed into the 'SOURCES' directory\nunder the rpmbuild root.  Additionally, the following macros need\nto be defined:\n\n  EL6:\n    %debug_package %{nil}\n\n  EL5:\n    %dist .el5\n    %_smp_mflags  -j3\n    %debug_package %{nil}\n    %__arch_install_post   /usr/lib/rpm/check-rpaths   /usr/lib/rpm/check-buildroot\n\n\nDebian packages for Ubuntu 12.04LTS\n-----------------------------------\nThe debian folder used to create the nightly builds and releases\ncan be found in the \"contrib/deb/ubuntu-precise\" directory of the\nKasmVNC subversion trunk.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.4775390625,
          "content": "#\n# Setup\n#\n\ncmake_minimum_required(VERSION 2.8)\nif(POLICY CMP0022)\n  cmake_policy(SET CMP0022 OLD)\nendif()\n\n# Internal cmake modules\nset(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/Modules)\n\ninclude(CheckIncludeFiles)\ninclude(CheckFunctionExists)\ninclude(CheckLibraryExists)\ninclude(CheckTypeSize)\ninclude(CheckCSourceCompiles)\ninclude(CheckCXXSourceCompiles)\ninclude(CheckCXXCompilerFlag)\ninclude(CheckCSourceRuns)\n\ninclude(CMakeMacroLibtoolFile)\n\nproject(kasmvnc)\nset(VERSION 0.9)\n\n# The RC version must always be four comma-separated numbers\nset(RCVERSION 0,9,0,0)\n\n# Installation paths\nset(BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\")\nset(DATA_DIR \"${CMAKE_INSTALL_PREFIX}/share\")\nset(MAN_DIR \"${DATA_DIR}/man\")\nset(LOCALE_DIR \"${DATA_DIR}/locale\")\nset(DOC_DIR \"${CMAKE_INSTALL_PREFIX}/share/doc/${CMAKE_PROJECT_NAME}-${VERSION}\")\n\nif(WIN32)\nset(BIN_DIR \"${CMAKE_INSTALL_PREFIX}\")\nset(DOC_DIR \"${CMAKE_INSTALL_PREFIX}\")\nendif()\n\nif(MSVC)\n  message(FATAL_ERROR \"KasmVNC cannot be built with Visual Studio.  Please use MinGW\")\nendif()\n\nif(NOT BUILD_TIMESTAMP)\n  set(BUILD_TIMESTAMP \"\")\n  execute_process(COMMAND \"date\" \"+%Y-%m-%d %H:%M\" OUTPUT_VARIABLE BUILD_TIMESTAMP)\n  string(REGEX REPLACE \"\\n\" \"\" BUILD_TIMESTAMP ${BUILD_TIMESTAMP})\nendif()\n\n# Default to optimised builds instead of debug ones. Our code has no bugs ;)\n# (CMake makes it fairly easy to toggle this back to Debug if needed)\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE Release)\nendif()\n\nmessage(STATUS \"CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}\")\n\nmessage(STATUS \"VERSION = ${VERSION}\")\nmessage(STATUS \"BUILD_TIMESTAMP = ${BUILD_TIMESTAMP}\")\nadd_definitions(-DBUILD_TIMESTAMP=\"${BUILD_TIMESTAMP}\")\n\nmessage(STATUS \"WWWDIR = ${DATA_DIR}/kasmvnc/www\")\nadd_definitions(-DWWWDIR=\"${DATA_DIR}/kasmvnc/www\")\n\n# We want to keep our asserts even in release builds so remove NDEBUG\nset(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} -UNDEBUG\")\nset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -UNDEBUG\")\nset(CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -UNDEBUG\")\nset(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -UNDEBUG\")\nset(CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL} -UNDEBUG\")\nset(CMAKE_CXX_FLAGS_MINSIZEREL \"${CMAKE_CXX_FLAGS_MINSIZEREL} -UNDEBUG\")\n\n# Make sure we get a sane C version\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -std=gnu99\")\n\n# Enable OpenMP\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fopenmp\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fopenmp\")\n\n# Enable C++ 11\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++11\")\n\n# Tell the compiler to be stringent\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wformat=2\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wformat=2\")\n# Make sure we catch these issues whilst developing\nIF(CMAKE_BUILD_TYPE MATCHES Debug)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Werror\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\nENDIF()\n\noption(ENABLE_ASAN \"Enable address sanitizer support\" OFF)\nif(ENABLE_ASAN AND NOT WIN32 AND NOT APPLE)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\nendif()\n\noption(ENABLE_TSAN \"Enable thread sanitizer support\" OFF)\nif(ENABLE_TSAN AND NOT WIN32 AND NOT APPLE AND CMAKE_SIZEOF_VOID_P MATCHES 8)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=thread\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread\")\nendif()\n\nif(NOT DEFINED BUILD_WINVNC)\n  set(BUILD_WINVNC 1)\nendif()\n\n# Minimum version is Windows 7\nif(WIN32)\n  add_definitions(-D_WIN32_WINNT=0x0601)\nendif()\n\nif(CMAKE_SIZEOF_VOID_P MATCHES 8)\n  message(STATUS \"64-bit build\")\nelse()\n  message(STATUS \"32-bit build\")\nendif()\n\n# Versions of CMake before 2.8.7 do not properly support resource compilation\n# with MinGW.  Boo!\nif(MINGW AND \"${CMAKE_VERSION}\" VERSION_LESS \"2.8.7\")\n  if(NOT DEFINED RC)\n    set(CMAKE_RC_COMPILER_INIT windres)\n  else()\n    set(CMAKE_RC_COMPILER_INIT ${RC})\n  endif()\n  enable_language(RC)\n  message(STATUS \"Resource compiler: ${CMAKE_RC_COMPILER}\")\n  set(CMAKE_RC_COMPILE_OBJECT\n    \"<CMAKE_RC_COMPILER> <FLAGS> <DEFINES> -o <OBJECT> --output-format=coff <SOURCE>\")\nendif()\n\n# MinGW64 has header support but no library support for IActiveDesktop, so we\n# need to check for both the header and library and use our own implementation\n# in common/os if either doesn't exist.\nif(WIN32)\n  check_c_source_compiles(\"#include <windows.h>\\n#include <wininet.h>\\n#include <shlobj.h>\\nint main(int c, char** v) {IActiveDesktop iad; (void)iad; return 0;}\" HAVE_ACTIVE_DESKTOP_H)\n  check_c_source_compiles(\"#include <windows.h>\\n#include <wininet.h>\\n#include <shlobj.h>\\nint main(int c, char** v) {GUID i = CLSID_ActiveDesktop; (void)i; return 0;}\" HAVE_ACTIVE_DESKTOP_L)\nendif()\n\n# X11 stuff. It's in a if() so that we can say REQUIRED\nif(UNIX AND NOT APPLE)\n  find_package(X11 REQUIRED)\nendif()\n\n# Check for zlib\nfind_package(ZLIB REQUIRED)\n\n# Check for libpng\nfind_package(PNG REQUIRED)\n\n# Check for libjpeg\nfind_package(JPEG REQUIRED)\n\nfind_package(Freetype REQUIRED)\ninclude_directories(${FREETYPE_INCLUDE_DIRS})\n\n# Staticly link libjpeg-turbo\nset(JPEG_LIBRARIES \"-Wl,-Bstatic -lturbojpeg -Wl,-Bdynamic\")\n# Warn if it doesn't seem to be the accelerated libjpeg that's found\nset(CMAKE_REQUIRED_LIBRARIES ${JPEG_LIBRARIES})\nset(CMAKE_REQUIRED_FLAGS -I${JPEG_INCLUDE_DIR})\n\nset(JPEG_TEST_SOURCE \"\\n\n  #include <stdio.h>\\n\n  #include <jpeglib.h>\\n\n  int main(void) {\\n\n    struct jpeg_compress_struct cinfo;\\n\n    struct jpeg_error_mgr jerr;\\n\n    cinfo.err=jpeg_std_error(&jerr);\\n\n    jpeg_create_compress(&cinfo);\\n\n    cinfo.input_components = 3;\\n\n    jpeg_set_defaults(&cinfo);\\n\n    cinfo.in_color_space = JCS_EXT_RGB;\\n\n    jpeg_default_colorspace(&cinfo);\\n\n    return 0;\\n\n  }\")\n\nif(CMAKE_CROSSCOMPILING)\n  check_c_source_compiles(\"${JPEG_TEST_SOURCE}\" FOUND_LIBJPEG_TURBO)\nelse()\n  check_c_source_runs(\"${JPEG_TEST_SOURCE}\" FOUND_LIBJPEG_TURBO)\nendif()\n\nset(CMAKE_REQUIRED_LIBRARIES)\nset(CMAKE_REQUIRED_FLAGS)\nset(CMAKE_REQUIRED_DEFINITIONS)\n\nif(NOT FOUND_LIBJPEG_TURBO)\n  message(STATUS \"WARNING: You are not using libjpeg-turbo. Performance will suffer.\")\nendif()\n\ninclude_directories(${JPEG_INCLUDE_DIR})\n\n# Check for GNUTLS library\noption(ENABLE_GNUTLS \"Enable protocol encryption and advanced authentication\" ON)\nif(ENABLE_GNUTLS)\n  find_package(GnuTLS)\n  if (GNUTLS_FOUND)\n    include_directories(${GNUTLS_INCLUDE_DIR})\n    add_definitions(\"-DHAVE_GNUTLS\")\n    add_definitions(${GNUTLS_DEFINITIONS})\n  endif()\nendif()\n\n# Check for PAM library\noption(ENABLE_PAM \"Enable PAM authentication support\" ON)\nif(ENABLE_PAM)\n  check_include_files(security/pam_appl.h HAVE_PAM_H)\n  set(CMAKE_REQUIRED_LIBRARIES -lpam)\n  check_function_exists(pam_start HAVE_PAM_START)\n  set(CMAKE_REQUIRED_LIBRARIES)\n  if(HAVE_PAM_H AND HAVE_PAM_START)\n    set(PAM_LIBS pam)\n  else()\n    set(ENABLE_PAM 0)\n  endif()\nendif()\nset(HAVE_PAM ${ENABLE_PAM})\n\n# Check for SSE2\ncheck_cxx_compiler_flag(-msse2 COMPILER_SUPPORTS_SSE2)\n\n# Generate config.h and make sure the source finds it\nconfigure_file(config.h.in config.h)\nadd_definitions(-DHAVE_CONFIG_H)\ninclude_directories(${CMAKE_BINARY_DIR})\n\ninclude(cmake/StaticBuild.cmake)\n\nadd_subdirectory(common)\n\nif(WIN32)\n  add_subdirectory(win)\nelse()\n  # No interest in building x related parts on Apple\n  if(NOT APPLE)\n    add_subdirectory(unix)\n  endif()\nendif()\n\nif(ENABLE_NLS)\n  add_subdirectory(po)\nendif()\n\nadd_subdirectory(tests)\n\n\ninclude(cmake/BuildPackages.cmake)\n\n# uninstall\nconfigure_file(\"${CMAKE_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n  \"cmake_uninstall.cmake\" IMMEDIATE @ONLY)\n\nadd_custom_target(uninstall COMMAND ${CMAKE_COMMAND} -P cmake_uninstall.cmake)\n"
        },
        {
          "name": "DEBUGGING.md",
          "type": "blob",
          "size": 6.6640625,
          "content": "# Debugging\nIn the case where KasmVNC crashes and a backtrace is produced. Developers need a way to make the backtrace useful for debugging. This document covers where the backtrace is logged and how to use a debug symbol package and gdb to gain more information from the backtrace, such as filename, function name, and line number.\n\n## Test Symbolization\nIf you want to induce a crash to test that you can symbolize a backtrace you can start KasmVNC and then issue the following command.\n\n    killall -SEGV Xvnc\n\nThis will cause KasmVNC to terminate with a backtrace similar to the following. You will find the backtrace in the log file at $HOME/.vnc/$HOSTNAME:$DISPLAY.log where HOME is your user's profile path, HOSTNAME is the hostname of the system, and DISPLAY is the assigned display number for the session.\n\n    (EE) \n    (EE) Backtrace:\n    (EE) 0: /usr/bin/Xvnc (xorg_backtrace+0x4d) [0x5e48dd]\n    (EE) 1: /usr/bin/Xvnc (0x400000+0x1e8259) [0x5e8259]\n    (EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5a57ef6000+0x12980) [0x7f5a57f08980]\n    (EE) 3: /lib/x86_64-linux-gnu/libc.so.6 (epoll_wait+0x57) [0x7f5a552eca47]\n    (EE) 4: /usr/bin/Xvnc (ospoll_wait+0x37) [0x5e8d07]\n    (EE) 5: /usr/bin/Xvnc (WaitForSomething+0x1c3) [0x5e2813]\n    (EE) 6: /usr/bin/Xvnc (Dispatch+0xa7) [0x597007]\n    (EE) 7: /usr/bin/Xvnc (dix_main+0x36e) [0x59b1fe]\n    (EE) 8: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xe7) [0x7f5a551ecbf7]\n    (EE) 9: /usr/bin/Xvnc (_start+0x2a) [0x46048a]\n    (EE) \n    (EE) Received signal 11 sent by process 17182, uid 0\n    (EE) \n    Fatal server error:\n    (EE) Caught signal 11 (Segmentation fault). Server aborting\n    (EE) \n\n## Debug Symbol Package\nIn order to make use of this backtrace, you will need to symbolize the backtrace. Each build of KasmVNC produced by our pipelines comes with a corresponding debug symbol package that can be downloaded. You need two pieces of information to get the package, the git commit ID of KasmVNC and the MD5 sum of Xkasmvnc binary on your system. \n\nThe git commit ID can be found using Xvnc -version:\n\n    ubuntu@matt-dev-vm-1:~$ Xvnc -version\n    Xvnc KasmVNC 0.9.94002f39917dca0ad82ac0c29a75c723b538b32b - built Feb 17 2022 15:21:01\n    Copyright (C) 1999-2018 KasmVNC Team and many others (see README.me)\n    See http://kasmweb.com for information on KasmVNC.\n    Underlying X server release 12010000, The X.Org Foundation\n\nThe MD5 sum can be obtained using the md5sum command:\n\n    md5sum /usr/bin/Xkasmvnc\n    57ee7028239c5a737c0aeee4a34138c3  /usr/bin/Xkasmvnc\n    \nWith these two pieces of information, you can get the debug symbol package at https://kasmweb-build-artifacts.s3.amazonaws.com/kasmvnc/crashpad/[COMMITID]/[MD5SUM]/kasmvncserver-dbgsym.deb, in the above example it would be.\n\n[https://kasmweb-build-artifacts.s3.amazonaws.com/kasmvnc/crashpad/94002f39917dca0ad82ac0c29a75c723b538b32b/57ee7028239c5a737c0aeee4a34138c3/kasmvncserver-dbgsym.deb](https://kasmweb-build-artifacts.s3.amazonaws.com/kasmvnc/crashpad/94002f39917dca0ad82ac0c29a75c723b538b32b/57ee7028239c5a737c0aeee4a34138c3/kasmvncserver-dbgsym.deb \"https://kasmweb-build-artifacts.s3.amazonaws.com/kasmvnc/crashpad/94002f39917dca0ad82ac0c29a75c723b538b32b/57ee7028239c5a737c0aeee4a34138c3/kasmvncserver-dbgsym.deb\")\n\nUse wget or curl to download the debug symbol package and then install it.\n\n    wget  https://kasmweb-build-artifacts.s3.amazonaws.com/kasmvnc/crashpad/94002f39917dca0ad82ac0c29a75c723b538b32b/57ee7028239c5a737c0aeee4a34138c3/kasmvncserver-dbgsym.deb\n    sudo dpkg -i kasmvncserver-dbgsym.deb\n\n## Symbolize a Backtrace\nWith the KasmVNC binary and debug symbol package installed on the system, you can use gdb or addr2line to get more information, such as the filename, function name, and line number that the backtrace line is referring to. \n\nHere is a single line from a backtrace. The following example shows how to retrieve additional information that can help with debugging the crash.\n(EE) 8: /usr/bin/Xvnc (0x400000+0x13e674) [**0x53e674**]\n\n    echo info line ***0x53eaaa** | gdb -q /usr/bin/Xkasmvnc\n    (gdb) Line 223 of \"/src/common/network/webudp/Wu.cpp\" starts at address 0x53e674 <WuClientSendPendingDTLS(WuClient*, Wu const*, Wu const*)+68>\n\nThe following script will search the provide file for a backtrace and symbolize the entire backtrace.\n\n    #!/bin/bash\n      \n    FILENAME=$1\n    grep \"(EE)\" $FILENAME | while read -r line ; do\n            BACKTRACE=$(echo $line | grep -Po '\\[[0-9a-f]x[a-f0-9]{1,}' | sed -r 's#\\[##')\n            echo $line\n            if ! [ -z $BACKTRACE ] ; then\n                    SYMBOLIZED=$(echo \"info line *${BACKTRACE}\" | gdb /usr/bin/Xkasmvnc | grep \"(gdb)\" | grep -vP \"\\(gdb\\)\\s*quit$\")\n                    echo \"    ${SYMBOLIZED}\"\n            fi\n    done\n\nUsing this script on the above example backtrace produces the following output.\n\n    ubuntu@hostname-1:~$ bash symbolize.sh ~/.vnc/hostname-1\\:10.log\n    (EE)\n    (EE) Backtrace:\n    (EE) 0: /usr/bin/Xvnc (xorg_backtrace+0x4d) [0x5e48dd]\n        (gdb) Line 130 of \"backtrace.c\" starts at address 0x5e48dd <xorg_backtrace+77> and ends at 0x5e4900 <xorg_backtrace+112>.\n    (EE) 1: /usr/bin/Xvnc (0x400000+0x1e8259) [0x5e8259]\n        (gdb) Line 138 of \"osinit.c\" starts at address 0x5e8259 <OsSigHandler+41> and ends at 0x5e8275 <OsSigHandler+69>.\n    (EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5a57ef6000+0x12980) [0x7f5a57f08980]\n        (gdb) No line number information available for address 0x7f5a57f08980\n    (EE) 3: /lib/x86_64-linux-gnu/libc.so.6 (epoll_wait+0x57) [0x7f5a552eca47]\n        (gdb) No line number information available for address 0x7f5a552eca47\n    (EE) 4: /usr/bin/Xvnc (ospoll_wait+0x37) [0x5e8d07]\n        (gdb) Line 643 of \"ospoll.c\" starts at address 0x5e8d07 <ospoll_wait+55> and ends at 0x5e8d09 <ospoll_wait+57>.\n    (EE) 5: /usr/bin/Xvnc (WaitForSomething+0x1c3) [0x5e2813]\n        (gdb) Line 210 of \"WaitFor.c\" starts at address 0x5e2813 <WaitForSomething+451> and ends at 0x5e2819 <WaitForSomething+457>.\n    (EE) 6: /usr/bin/Xvnc (Dispatch+0xa7) [0x597007]\n        (gdb) Line 421 of \"dispatch.c\" starts at address 0x596ffb <Dispatch+155> and ends at 0x59700b <Dispatch+171>.\n    (EE) 7: /usr/bin/Xvnc (dix_main+0x36e) [0x59b1fe]\n        (gdb) Line 278 of \"main.c\" starts at address 0x59b1fe <dix_main+878> and ends at 0x59b203 <dix_main+883>.\n    (EE) 8: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xe7) [0x7f5a551ecbf7]\n        (gdb) No line number information available for address 0x7f5a551ecbf7\n    (EE) 9: /usr/bin/Xvnc (_start+0x2a) [0x46048a]\n        (gdb) No line number information available for address 0x46048a <_start+42>\n    (EE)\n    (EE) Received signal 11 sent by process 17182, uid 0\n    (EE)\n    (EE) Caught signal 11 (Segmentation fault). Server aborting\n    (EE)\n\n"
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.1962890625,
          "content": "[[source]]\nurl = \"https://pypi.python.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\nmamba = \"*\"\nexpects = \"*\"\n\"path.py\" = \"*\"\npexpect = \"*\"\n\n[dev-packages]\n\n[requires]\npython_version = \"3.8\"\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 7.3271484375,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"6745d5e5d90e44a18d73a0e23bc3d3e68acb950af0b87df50b45272d25b9e615\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {\n            \"python_version\": \"3.8\"\n        },\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.python.org/simple\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"args\": {\n            \"hashes\": [\n                \"sha256:a785b8d837625e9b61c39108532d95b85274acd679693b71ebb5156848fcf814\"\n            ],\n            \"version\": \"==0.1.0\"\n        },\n        \"clint\": {\n            \"hashes\": [\n                \"sha256:05224c32b1075563d0b16d0015faaf9da43aa214e4a2140e51f08789e7a4c5aa\"\n            ],\n            \"version\": \"==0.5.1\"\n        },\n        \"coverage\": {\n            \"hashes\": [\n                \"sha256:004d1880bed2d97151facef49f08e255a20ceb6f9432df75f4eef018fdd5a78c\",\n                \"sha256:01d84219b5cdbfc8122223b39a954820929497a1cb1422824bb86b07b74594b6\",\n                \"sha256:040af6c32813fa3eae5305d53f18875bedd079960822ef8ec067a66dd8afcd45\",\n                \"sha256:06191eb60f8d8a5bc046f3799f8a07a2d7aefb9504b0209aff0b47298333302a\",\n                \"sha256:13034c4409db851670bc9acd836243aeee299949bd5673e11844befcb0149f03\",\n                \"sha256:13c4ee887eca0f4c5a247b75398d4114c37882658300e153113dafb1d76de529\",\n                \"sha256:184a47bbe0aa6400ed2d41d8e9ed868b8205046518c52464fde713ea06e3a74a\",\n                \"sha256:18ba8bbede96a2c3dde7b868de9dcbd55670690af0988713f0603f037848418a\",\n                \"sha256:1aa846f56c3d49205c952d8318e76ccc2ae23303351d9270ab220004c580cfe2\",\n                \"sha256:217658ec7187497e3f3ebd901afdca1af062b42cfe3e0dafea4cced3983739f6\",\n                \"sha256:24d4a7de75446be83244eabbff746d66b9240ae020ced65d060815fac3423759\",\n                \"sha256:2910f4d36a6a9b4214bb7038d537f015346f413a975d57ca6b43bf23d6563b53\",\n                \"sha256:2949cad1c5208b8298d5686d5a85b66aae46d73eec2c3e08c817dd3513e5848a\",\n                \"sha256:2a3859cb82dcbda1cfd3e6f71c27081d18aa251d20a17d87d26d4cd216fb0af4\",\n                \"sha256:2cafbbb3af0733db200c9b5f798d18953b1a304d3f86a938367de1567f4b5bff\",\n                \"sha256:2e0d881ad471768bf6e6c2bf905d183543f10098e3b3640fc029509530091502\",\n                \"sha256:30c77c1dc9f253283e34c27935fded5015f7d1abe83bc7821680ac444eaf7793\",\n                \"sha256:3487286bc29a5aa4b93a072e9592f22254291ce96a9fbc5251f566b6b7343cdb\",\n                \"sha256:372da284cfd642d8e08ef606917846fa2ee350f64994bebfbd3afb0040436905\",\n                \"sha256:41179b8a845742d1eb60449bdb2992196e211341818565abded11cfa90efb821\",\n                \"sha256:44d654437b8ddd9eee7d1eaee28b7219bec228520ff809af170488fd2fed3e2b\",\n                \"sha256:4a7697d8cb0f27399b0e393c0b90f0f1e40c82023ea4d45d22bce7032a5d7b81\",\n                \"sha256:51cb9476a3987c8967ebab3f0fe144819781fca264f57f89760037a2ea191cb0\",\n                \"sha256:52596d3d0e8bdf3af43db3e9ba8dcdaac724ba7b5ca3f6358529d56f7a166f8b\",\n                \"sha256:53194af30d5bad77fcba80e23a1441c71abfb3e01192034f8246e0d8f99528f3\",\n                \"sha256:5fec2d43a2cc6965edc0bb9e83e1e4b557f76f843a77a2496cbe719583ce8184\",\n                \"sha256:6c90e11318f0d3c436a42409f2749ee1a115cd8b067d7f14c148f1ce5574d701\",\n                \"sha256:74d881fc777ebb11c63736622b60cb9e4aee5cace591ce274fb69e582a12a61a\",\n                \"sha256:7501140f755b725495941b43347ba8a2777407fc7f250d4f5a7d2a1050ba8e82\",\n                \"sha256:796c9c3c79747146ebd278dbe1e5c5c05dd6b10cc3bcb8389dfdf844f3ead638\",\n                \"sha256:869a64f53488f40fa5b5b9dcb9e9b2962a66a87dab37790f3fcfb5144b996ef5\",\n                \"sha256:8963a499849a1fc54b35b1c9f162f4108017b2e6db2c46c1bed93a72262ed083\",\n                \"sha256:8d0a0725ad7c1a0bcd8d1b437e191107d457e2ec1084b9f190630a4fb1af78e6\",\n                \"sha256:900fbf7759501bc7807fd6638c947d7a831fc9fdf742dc10f02956ff7220fa90\",\n                \"sha256:92b017ce34b68a7d67bd6d117e6d443a9bf63a2ecf8567bb3d8c6c7bc5014465\",\n                \"sha256:970284a88b99673ccb2e4e334cfb38a10aab7cd44f7457564d11898a74b62d0a\",\n                \"sha256:972c85d205b51e30e59525694670de6a8a89691186012535f9d7dbaa230e42c3\",\n                \"sha256:9a1ef3b66e38ef8618ce5fdc7bea3d9f45f3624e2a66295eea5e57966c85909e\",\n                \"sha256:af0e781009aaf59e25c5a678122391cb0f345ac0ec272c7961dc5455e1c40066\",\n                \"sha256:b6d534e4b2ab35c9f93f46229363e17f63c53ad01330df9f2d6bd1187e5eaacf\",\n                \"sha256:b7895207b4c843c76a25ab8c1e866261bcfe27bfaa20c192de5190121770672b\",\n                \"sha256:c0891a6a97b09c1f3e073a890514d5012eb256845c451bd48f7968ef939bf4ae\",\n                \"sha256:c2723d347ab06e7ddad1a58b2a821218239249a9e4365eaff6649d31180c1669\",\n                \"sha256:d1f8bf7b90ba55699b3a5e44930e93ff0189aa27186e96071fac7dd0d06a1873\",\n                \"sha256:d1f9ce122f83b2305592c11d64f181b87153fc2c2bbd3bb4a3dde8303cfb1a6b\",\n                \"sha256:d314ed732c25d29775e84a960c3c60808b682c08d86602ec2c3008e1202e3bb6\",\n                \"sha256:d636598c8305e1f90b439dbf4f66437de4a5e3c31fdf47ad29542478c8508bbb\",\n                \"sha256:deee1077aae10d8fa88cb02c845cfba9b62c55e1183f52f6ae6a2df6a2187160\",\n                \"sha256:ebe78fe9a0e874362175b02371bdfbee64d8edc42a044253ddf4ee7d3c15212c\",\n                \"sha256:f030f8873312a16414c0d8e1a1ddff2d3235655a2174e3648b4fa66b3f2f1079\",\n                \"sha256:f0b278ce10936db1a37e6954e15a3730bea96a0997c26d7fee88e6c396c2086d\",\n                \"sha256:f11642dddbb0253cc8853254301b51390ba0081750a8ac03f20ea8103f0c56b6\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4' and python_version < '4'\",\n            \"version\": \"==5.5\"\n        },\n        \"expects\": {\n            \"hashes\": [\n                \"sha256:419902ccafe81b7e9559eeb6b7a07ef9d5c5604eddb93000f0642b3b2d594f4c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.9.0\"\n        },\n        \"mamba\": {\n            \"hashes\": [\n                \"sha256:75cfc6dfd287dcccaf86dd753cf48e0a7337487c7c3fafda05a6a67ded6da496\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.11.2\"\n        },\n        \"path\": {\n            \"hashes\": [\n                \"sha256:2de925e8d421f93bcea80d511b81accfb6a7e6b249afa4a5559557b0cf817097\",\n                \"sha256:340054c5bb459fc9fd40e7eb6768c5989f3e599d18224238465b5333bc8faa7d\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==16.2.0\"\n        },\n        \"path.py\": {\n            \"hashes\": [\n                \"sha256:8d885e8b2497aed005703d94e0fd97943401f035e42a136810308bff034529a8\",\n                \"sha256:a43e82eb2c344c3fd0b9d6352f6b856f40b8b7d3d65cc05978b42c3715668496\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==12.5.0\"\n        },\n        \"pexpect\": {\n            \"hashes\": [\n                \"sha256:0b48a55dcb3c05f3329815901ea4fc1537514d6ba867a152b581d69ae3710937\",\n                \"sha256:fc65a43959d153d0114afe13997d439c22823a27cefceb5ff35c2178c6784c0c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.8.0\"\n        },\n        \"ptyprocess\": {\n            \"hashes\": [\n                \"sha256:4b41f3967fce3af57cc7e94b888626c18bf37a083e3651ca8feeb66d492fef35\",\n                \"sha256:5c5d0a3b48ceee0b48485e0c26037c0acd7d29765ca3fbb5cb3831d347423220\"\n            ],\n            \"version\": \"==0.7.0\"\n        }\n    },\n    \"develop\": {}\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.3828125,
          "content": "# KasmVNC - Linux Web Remote Desktop\n\n<a href=\"https://kasmweb.com\"><img src=\"https://kasm-static-content.s3.amazonaws.com/logo_kasm.png\" width=\"300\"><a/>\n\nKasmVNC provides remote web-based access to a Desktop or application. While VNC is in the name, KasmVNC differs from other VNC variants such as TigerVNC, RealVNC, and TurboVNC. KasmVNC has broken from the RFB specification which defines VNC, in order to support modern technologies and increase security. KasmVNC is accessed by users from any modern browser and does not support legacy VNC viewer applications. KasmVNC uses a modern YAML based configuration at the server and user level, allowing for ease of management.\n\n[Kasm Technologies](https://www.kasmweb.com) developed Kasm Workspaces, the Containerized Streaming Platform. Kasm has open-sourced the Workspace docker images, which include containerized [full desktops and apps](https://github.com/kasmtech/workspaces-images) and [base images](https://github.com/kasmtech/workspaces-core-images) intended for developers to create customized streaming containers. These containers can be used standalone or within the [Kasm Workspaces Platform](https://www.kasmweb.com) which provides a full Enterprise feature set.\n\n## Documentation\n\n**Do not use the README from the master branch**, unless you are compiling KasmVNC yourself from the tip of master. Use the documentation for your specific release.\n\n  - [KasmVNC 1.0.0 Documentation](https://www.kasmweb.com/kasmvnc/docs/1.0.0/index.html)\n\n  For beta releases prior to version 1.0.0, use the README in this github project on the tagged commit for that release.\n\n## Installation\n\n**You must disconnect and reconnect to the server after installation, for the group membership to apply.**\n\n### Debian/Ubuntu/Kali\n```sh\n# Please choose the package for your distro here (under Assets):\n# https://github.com/kasmtech/KasmVNC/releases\nwget <package_url>\n\nsudo apt-get install ./kasmvncserver_*.deb\n\n# Add your user to the ssl-cert group\nsudo adduser $USER ssl-cert\n```\n\n### Oracle 8\n```sh\n# Please choose the package for your distro here (under Assets):\n# https://github.com/kasmtech/KasmVNC/releases\nwget <package_url>\n\n# Ensure KasmVNC dependencies are available\nsudo dnf config-manager --set-enabled ol8_codeready_builder\nsudo dnf install oracle-epel-release-el8\n\nsudo dnf localinstall ./kasmvncserver_*.rpm\n\n# Add your user to the kasmvnc-cert group\nsudo usermod -a -G kasmvnc-cert $USER\n```\n\n### CentOS 7\n\n```sh\n# Please choose the package for your distro here (under Assets):\n# https://github.com/kasmtech/KasmVNC/releases\nwget <package_url>\n\n# Ensure KasmVNC dependencies are available\nsudo yum install epel-release\n\nsudo yum install ./kasmvncserver_*.rpm\n\n# Add your user to the kasmvnc-cert group\nsudo usermod -a -G kasmvnc-cert $USER\n```\n\n## Getting Started\n\nThe following examples provide basic usage of KasmVNC with the tools provided. For full documentation on all the utilities and the runtime environment, see our [KasmVNC Documentation](https://www.kasmweb.com/kasmvnc/docs/latest/index.html)\n\n```sh\n# Start a session and be guided to setup a user and select a default desktop environment\nvncserver\n\n# Start a session with the mate desktop environment\nvncserver -select-de mate\n\n# Add a new user with read/write permissions\nvncpasswd -u my_username -w -r\n\n# Tail the logs\ntail -f ~/.vnc/*.log\n\n# Get a list of current sessions with display IDs\nvncserver -list\n\n# Kill the VNC session with display ID :2\nvncserver -kill :2\n```\n\n## Configuration\n\nKasmVNC is configured via YAML based configurations. The server level configuration is at `/etc/kasmvnc/kasmvnc.yaml`. Edits to this file apply to all users. Individual users can override server global configurations by specifying them in their configuration file at `~/.vnc/kasmvnc.yaml`.\n\nThe following configuration shows all default settings. Many of the encoding settings can be overridden by the client, unless the `runtime_configuration.allow_client_to_override_kasm_server_settings` setting is set tot false. By default the client is allowed to modify encoding settings.\n\nFor a full description of each setting see the [configuration reference](https://www.kasmweb.com/kasmvnc/docs/latest/configuration.html).\n\n```yaml\ndesktop:\n  resolution:\n    width: 1024\n    height: 768\n  allow_resize: true\n  pixel_depth: 24\n  gpu:\n    hw3d: false\n    drinode: /dev/dri/renderD128\n\nnetwork:\n  protocol: http\n  interface: 0.0.0.0\n  websocket_port: auto\n  use_ipv4: true\n  use_ipv6: true\n  udp:\n    public_ip: auto\n    port: auto\n    stun_server: auto\n  ssl:\n    pem_certificate: /etc/ssl/certs/ssl-cert-snakeoil.pem\n    pem_key: /etc/ssl/private/ssl-cert-snakeoil.key\n    require_ssl: true\n\nuser_session:\n  new_session_disconnects_existing_exclusive_session: false\n  concurrent_connections_prompt: false\n  concurrent_connections_prompt_timeout: 10\n  idle_timeout: never\n\nkeyboard:\n  remap_keys:\n  ignore_numlock: false\n  raw_keyboard: false\n\npointer:\n  enabled: true\n\nruntime_configuration:\n  allow_client_to_override_kasm_server_settings: true\n  allow_override_standard_vnc_server_settings: true\n  allow_override_list:\n    - pointer.enabled\n    - data_loss_prevention.clipboard.server_to_client.enabled\n    - data_loss_prevention.clipboard.client_to_server.enabled\n    - data_loss_prevention.clipboard.server_to_client.primary_clipboard_enabled\n\nlogging:\n  log_writer_name: all\n  log_dest: logfile\n  level: 30\n\nsecurity:\n  brute_force_protection:\n    blacklist_threshold: 5\n    blacklist_timeout: 10\n\ndata_loss_prevention:\n  visible_region:\n    # top: 10\n    # left: 10\n    # right: 40\n    # bottom: 40\n    concealed_region:\n      allow_click_down: false\n      allow_click_release: false\n  clipboard:\n    delay_between_operations: none\n    allow_mimetypes:\n      - chromium/x-web-custom-data\n      - text/html\n      - image/png\n    server_to_client:\n      enabled: true\n      size: unlimited\n      primary_clipboard_enabled: false\n    client_to_server:\n      enabled: true\n      size: unlimited\n  keyboard:\n    enabled: true\n    rate_limit: unlimited\n  logging:\n    level: off\n\nencoding:\n  max_frame_rate: 60\n  full_frame_updates: none\n  rect_encoding_mode:\n    min_quality: 7\n    max_quality: 8\n    consider_lossless_quality: 10\n    rectangle_compress_threads: auto\n\n  video_encoding_mode:\n    jpeg_quality: -1\n    webp_quality: -1\n    max_resolution:\n      width: 1920\n      height: 1080\n    enter_video_encoding_mode:\n      time_threshold: 5\n      area_threshold: 45%\n    exit_video_encoding_mode:\n      time_threshold: 3\n    logging:\n      level: off\n    scaling_algorithm: progressive_bilinear\n\n  compare_framebuffer: auto\n  zrle_zlib_level: auto\n  hextile_improved_compression: true\n\nserver:\n  http:\n    headers:\n      - Cross-Origin-Embedder-Policy=require-corp\n      - Cross-Origin-Opener-Policy=same-origin\n    httpd_directory: /usr/share/kasmvnc/www\n  advanced:\n    x_font_path: auto\n    kasm_password_file: ${HOME}/.kasmpasswd\n    x_authority_file: auto\n  auto_shutdown:\n    no_user_session_timeout: never\n    active_user_session_timeout: never\n    inactive_user_session_timeout: never\n\ncommand_line:\n  prompt: true\n```\n\n\n# New Features!\n\n  - Faster jpeg compression (via statically linked libjpeg-turbo)\n  - Webp image compression for better bandwidth usage\n  - Automatic mixing of webp and jpeg based on CPU availability on server\n  - Multi-threaded image encoding for smoother frame rate for servers with more cores\n  - WebRTC UDP Transit\n  - Lossless QOI Image format for Local LAN\n  - [Full screen video detection](https://github.com/kasmtech/KasmVNC/wiki/Video-Rendering-Options#video-mode), goes into configurable video mode for better full screen videoo playback performance.\n  - [Dynamic jpeg/webp image coompression](https://github.com/kasmtech/KasmVNC/wiki/Video-Rendering-Options#dynamic-image-quality) quality settings based on screen change rates\n  - Seemless clipboard support (on Chromium based browsers)\n  - Binary clipboard support for text, images, and formatted text (on Chromium based browsers)\n  - Allow client to set/change most configuration settings\n  - [Data Loss Prevention features](https://github.com/kasmtech/KasmVNC/wiki/Data-Loss-Prevention)\n    - Key stroke logging\n    - Clipboard logging\n    - Max clipboard transfer size up and down\n    - Min time between clipboard operations required\n    - Keyboard input rate limit\n    - Screen region selection\n  - Deb packages for Debian, Ubuntu, and Kali Linux included in release.\n  - RPM packages for CentOS, Oracle, OpenSUSE, Fedora. RPM packages are currently not updatable and not released, though you can build and install them. See build documentation.\n  - Web [API](https://github.com/kasmtech/KasmVNC/wiki/API) added for remotely controlling and getting information from KasmVNC\n  - Multi-User support with permissions that can be changed via the API\n  - Web UI uses a webpack for faster load times.\n  - Network and CPU bottleneck statistics\n  - Relative cursor support (game pointer mode)\n  - Cursor lock\n  - IME support for languages with extended characters\n  - Better mobile support\n  - DRI3 GPU acceleration with open source drivers (AMDGPU,Intel,ATI,ARM)\n\nFuture Goals:\n\n  - H264 encoding\n\n### Compiling From Source\nSee the [builder/README.md](https://github.com/kasmtech/KasmVNC/blob/master/builder/README.md). We containerize our build systems to ensure highly repeatable builds.\n\n### License and Acknowledgements\nSee the [LICENSE.TXT](https://github.com/kasmtech/KasmVNC/blob/master/LICENSE.TXT) and [ACKNOWLEDGEMENTS.md](https://github.com/kasmtech/KasmVNC/blob/master/ACKNOWLEDGEMENTS.md)\n"
        },
        {
          "name": "builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "centos",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.in",
          "type": "blob",
          "size": 0.681640625,
          "content": "#define PACKAGE_NAME \"@CMAKE_PROJECT_NAME@\"\n#define PACKAGE_VERSION \"@VERSION@\"\n\n#cmakedefine HAVE_ACTIVE_DESKTOP_H\n#cmakedefine HAVE_ACTIVE_DESKTOP_L\n#cmakedefine ENABLE_NLS 1\n#cmakedefine HAVE_PAM\n\n#cmakedefine DATA_DIR \"@DATA_DIR@\"\n#cmakedefine LOCALE_DIR \"@LOCALE_DIR@\"\n\n/* MS Visual Studio 2008 and newer doesn't know ssize_t */\n#if defined(HAVE_GNUTLS) && defined(WIN32) && !defined(__MINGW32__)\n    #if defined(_WIN64)\n        typedef __int64 ssize_t;\n    #else\n        typedef long ssize_t;\n    #endif\n#endif\n\n/* We know we use deprecated stuff, it's to support older macOS */\n#if defined(__APPLE__) && defined(__clang__)\n#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n#endif\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "fedora",
          "type": "tree",
          "content": null
        },
        {
          "name": "kasmweb",
          "type": "commit",
          "content": null
        },
        {
          "name": "opensuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "oracle",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-specs",
          "type": "blob",
          "size": 0.5576171875,
          "content": "#!/bin/bash\n\nset -e\nexport PYTHONPATH=${PWD}/spec\n\nRUN_CMD=\"pipenv run mamba\"\n\nspecs=()\nfor arg in \"$@\"; do\n  if [[ \"$arg\" = \"-d\" ]]; then\n    export KASMVNC_SPEC_DEBUG_OUTPUT=1\n    continue;\n  fi\n  if [[ \"$arg\" = \"-v\" ]]; then\n    verbose=1\n    continue\n  fi\n\n  specs+=(\"$arg\")\ndone\nset -- \"${specs[@]}\"\n\nif [[ \"$1\" = \"-h\" || \"$1\" = \"--help\" ]]; then\n  echo >&2 \"Usage: $(basename \"$0\") [-d] [-v] <spec...>\"\n  exit 0\nfi\n\nif [[ -n \"$verbose\" ]]; then\n RUN_CMD=\"$RUN_CMD --format=documentation\"\nfi\n\nif [[ -n \"$1\" ]]; then\n  $RUN_CMD \"$@\"\nelse\n  $RUN_CMD spec/*_spec.py\nfi\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "t",
          "type": "blob",
          "size": 0.171875,
          "content": "use DateTime::TimeZone;\n\nmy $timezone = $ARGV[0];\n\nif (DateTime::TimeZone->is_valid_name($timezone)) {\n    print \"Valid timezone\\n\";\n} else {\n    print \"Invalid timezone\\n\";\n}\n"
        },
        {
          "name": "t2",
          "type": "blob",
          "size": 0.2548828125,
          "content": "use DateTime;\nuse DateTime::TimeZone;\n\n#my $timezone_name = 'America/New_York';\nmy $timezone_name = 'UTC';\n\nmy $dt = DateTime->now(time_zone => $timezone_name);\nmy $offset = $dt->offset();\n\nprint \"Timezone: $timezone_name\\n\";\nprint \"Offset: $offset seconds\\n\";\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "unix",
          "type": "tree",
          "content": null
        },
        {
          "name": "win",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}