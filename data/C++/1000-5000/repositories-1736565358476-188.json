{
  "metadata": {
    "timestamp": 1736565358476,
    "page": 188,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PowerDNS/pdns",
      "stars": 3752,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.7158203125,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: WebKit\nAccessModifierOffset: -2\nConstructorInitializerIndentWidth: 2\nContinuationIndentWidth: 2\nIndentWidth: 2\nObjCBlockIndentWidth: 2\nAlignAfterOpenBracket: Align\n\nSortIncludes: false\n\nSpaceBeforeCpp11BracedList: false\nCpp11BracedListStyle: true\n\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass: true\n  AfterControlStatement: false\n  AfterEnum: true\n  AfterExternBlock: true\n  AfterFunction: true\n  AfterNamespace: true\n  AfterStruct: true\n  AfterUnion: true\n  BeforeCatch: true\n  BeforeElse: true\n  SplitEmptyFunction: false\n\nAllowAllParametersOfDeclarationOnNextLine: true\nBreakConstructorInitializers: AfterColon\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nSpaceInEmptyBlock: false\n"
        },
        {
          "name": ".clang-tidy.bugs",
          "type": "blob",
          "size": 8.0791015625,
          "content": "---\nFormatStyle: none\n# Older (pre 19) versions of clang-tidy do not grok these\n# HeaderFileExtensions:\n#  - h\n#  - hh\n#  - hpp\n#ImplementationFileExtensions:\n#  - c\n#  - cc\n#  - cpp\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nChecks: |\n  clang-diagnostic-*,clang-analyzer-*,bugprone-*,concurrency-*,-modernize-use-trailing-return-type,-readability-magic-numbers,-cppcoreguidelines-avoid-magic-numbers,-performance-avoid-endl\n# yamllint disable rule:line-length\nCheckOptions:\n  - key: bugprone-string-constructor.LargeLengthThreshold\n    value: '8388608'\n  - key: modernize-replace-auto-ptr.IncludeStyle\n    value: llvm\n  - key: bugprone-reserved-identifier.Invert\n    value: 'false'\n  - key: bugprone-implicit-widening-of-multiplication-result.UseCXXStaticCastsInCppSources\n    value: 'true'\n  - key: cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField\n    value: 'false'\n  - key: bugprone-exception-escape.FunctionsThatShouldNotThrow\n    value: ''\n  - key: cert-dcl16-c.NewSuffixes\n    value: 'L;LL;LU;LLU'\n  - key: bugprone-narrowing-conversions.WarnOnFloatingPointNarrowingConversion\n    value: 'true'\n  - key: modernize-loop-convert.MaxCopySize\n    value: '16'\n  - key: bugprone-narrowing-conversions.PedanticMode\n    value: 'false'\n  - key: bugprone-unused-return-value.CheckedFunctions\n    value: '::std::async;::std::launder;::std::remove;::std::remove_if;::std::unique;::std::unique_ptr::release;::std::basic_string::empty;::std::vector::empty;::std::back_inserter;::std::distance;::std::find;::std::find_if;::std::inserter;::std::lower_bound;::std::make_pair;::std::map::count;::std::map::find;::std::map::lower_bound;::std::multimap::equal_range;::std::multimap::upper_bound;::std::set::count;::std::set::find;::std::setfill;::std::setprecision;::std::setw;::std::upper_bound;::std::vector::at;::bsearch;::ferror;::feof;::isalnum;::isalpha;::isblank;::iscntrl;::isdigit;::isgraph;::islower;::isprint;::ispunct;::isspace;::isupper;::iswalnum;::iswprint;::iswspace;::isxdigit;::memchr;::memcmp;::strcmp;::strcoll;::strncmp;::strpbrk;::strrchr;::strspn;::strstr;::wcscmp;::access;::bind;::connect;::difftime;::dlsym;::fnmatch;::getaddrinfo;::getopt;::htonl;::htons;::iconv_open;::inet_addr;::isascii;::isatty;::mmap;::newlocale;::openat;::pathconf;::pthread_equal;::pthread_getspecific;::pthread_mutex_trylock;::readdir;::readlink;::recvmsg;::regexec;::scandir;::semget;::setjmp;::shm_open;::shmget;::sigismember;::strcasecmp;::strsignal;::ttyname'\n  - key: bugprone-signed-char-misuse.CharTypdefsToIgnore\n    value: ''\n  - key: bugprone-argument-comment.CommentStringLiterals\n    value: '0'\n  - key: cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors\n    value: 'true'\n  - key: bugprone-easily-swappable-parameters.MinimumLength\n    value: '2'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfConstant\n    value: 'true'\n  - key: bugprone-argument-comment.CommentBoolLiterals\n    value: '0'\n  - key: bugprone-argument-comment.CommentUserDefinedLiterals\n    value: '0'\n  - key: cert-str34-c.DiagnoseSignedUnsignedCharComparisons\n    value: 'false'\n  - key: bugprone-narrowing-conversions.WarnWithinTemplateInstantiation\n    value: 'false'\n  - key: concurrency-mt-unsafe.FunctionSet\n    value: any\n  - key: bugprone-suspicious-string-compare.WarnOnLogicalNotComparison\n    value: 'false'\n  - key: google-readability-braces-around-statements.ShortStatementLines\n    value: '1'\n  - key: bugprone-reserved-identifier.AllowedIdentifiers\n    value: ''\n  - key: bugprone-easily-swappable-parameters.IgnoredParameterTypeSuffixes\n    value: 'bool;Bool;_Bool;it;It;iterator;Iterator;inputit;InputIt;forwardit;FowardIt;bidirit;BidirIt;constiterator;const_iterator;Const_Iterator;Constiterator;ConstIterator;RandomIt;randomit;random_iterator;ReverseIt;reverse_iterator;reverse_const_iterator;ConstReverseIterator;Const_Reverse_Iterator;const_reverse_iterator;Constreverseiterator;constreverseiterator'\n  - key: bugprone-easily-swappable-parameters.QualifiersMix\n    value: 'false'\n  - key: bugprone-signal-handler.AsyncSafeFunctionSet\n    value: POSIX\n  - key: bugprone-easily-swappable-parameters.ModelImplicitConversions\n    value: 'true'\n  - key: bugprone-suspicious-string-compare.WarnOnImplicitComparison\n    value: 'true'\n  - key: bugprone-argument-comment.CommentNullPtrs\n    value: '0'\n  - key: bugprone-easily-swappable-parameters.SuppressParametersUsedTogether\n    value: 'true'\n  - key: bugprone-argument-comment.StrictMode\n    value: '0'\n  - key: bugprone-misplaced-widening-cast.CheckImplicitCasts\n    value: 'false'\n  - key: bugprone-suspicious-missing-comma.RatioThreshold\n    value: '0.200000'\n  - key: modernize-loop-convert.MinConfidence\n    value: reasonable\n  - key: bugprone-easily-swappable-parameters.NamePrefixSuffixSilenceDissimilarityTreshold\n    value: '1'\n  - key: bugprone-unhandled-self-assignment.WarnOnlyIfThisHasSuspiciousField\n    value: 'true'\n  - key: google-readability-namespace-comments.ShortNamespaceLines\n    value: '10'\n  - key: google-readability-namespace-comments.SpacesBeforeComments\n    value: '2'\n  - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value: 'true'\n  - key: bugprone-argument-comment.IgnoreSingleArgument\n    value: '0'\n  - key: bugprone-suspicious-string-compare.StringCompareLikeFunctions\n    value: ''\n  - key: bugprone-narrowing-conversions.WarnOnEquivalentBitWidth\n    value: 'true'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression\n    value: 'false'\n  - key: bugprone-assert-side-effect.CheckFunctionCalls\n    value: 'false'\n  - key: bugprone-easily-swappable-parameters.IgnoredParameterNames\n    value: '\"\";iterator;Iterator;begin;Begin;end;End;first;First;last;Last;lhs;LHS;rhs;RHS'\n  - key: bugprone-narrowing-conversions.IgnoreConversionFromTypes\n    value: ''\n  - key: bugprone-string-constructor.StringNames\n    value: '::std::basic_string;::std::basic_string_view'\n  - key: bugprone-assert-side-effect.AssertMacros\n    value: assert,NSAssert,NSCAssert\n  - key: bugprone-exception-escape.IgnoredExceptions\n    value: ''\n  - key: bugprone-signed-char-misuse.DiagnoseSignedUnsignedCharComparisons\n    value: 'true'\n  - key: llvm-qualified-auto.AddConstToQualified\n    value: 'false'\n  - key: bugprone-narrowing-conversions.WarnOnIntegerNarrowingConversion\n    value: 'true'\n  - key: modernize-loop-convert.NamingStyle\n    value: CamelCase\n  - key: bugprone-suspicious-include.ImplementationFileExtensions\n    value: 'c;cc;cpp;cxx'\n  - key: bugprone-suspicious-missing-comma.SizeThreshold\n    value: '5'\n  - key: bugprone-suspicious-include.HeaderFileExtensions\n    value: ';h;hh;hpp;hxx'\n  - key: google-readability-function-size.StatementThreshold\n    value: '800'\n  - key: llvm-else-after-return.WarnOnConditionVariables\n    value: 'false'\n  - key: bugprone-argument-comment.CommentCharacterLiterals\n    value: '0'\n  - key: bugprone-argument-comment.CommentIntegerLiterals\n    value: '0'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfCompareToConstant\n    value: 'true'\n  - key: modernize-pass-by-value.IncludeStyle\n    value: llvm\n  - key: bugprone-reserved-identifier.AggressiveDependentMemberLookup\n    value: 'false'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfThis\n    value: 'true'\n  - key: bugprone-string-constructor.WarnOnLargeLength\n    value: 'true'\n  - key: bugprone-too-small-loop-variable.MagnitudeBitsUpperLimit\n    value: '16'\n  - key: bugprone-argument-comment.CommentFloatLiterals\n    value: '0'\n  - key: modernize-use-nullptr.NullMacros\n    value: 'NULL'\n  - key: bugprone-dangling-handle.HandleClasses\n    value: 'std::basic_string_view;std::experimental::basic_string_view'\n  - key: bugprone-dynamic-static-initializers.HeaderFileExtensions\n    value: ';h;hh;hpp;hxx'\n  - key: bugprone-suspicious-enum-usage.StrictMode\n    value: 'false'\n  - key: bugprone-implicit-widening-of-multiplication-result.IncludeStyle\n    value: llvm\n  - key: bugprone-suspicious-missing-comma.MaxConcatenatedTokens\n    value: '5'\n  - key: bugprone-implicit-widening-of-multiplication-result.UseCXXHeadersInCppSources\n    value: 'true'\n  - key: llvm-else-after-return.WarnOnUnfixable\n    value: 'false'\n  - key: bugprone-not-null-terminated-result.WantToUseSafeFunctions\n    value: 'true'\n# yamllint enable\n...\n"
        },
        {
          "name": ".clang-tidy.full",
          "type": "blob",
          "size": 20.5458984375,
          "content": "---\nFormatStyle: non\n# Older (pre 19) versions of clang-tidy do not grok these\n#HeaderFileExtensions:\n#  - h\n#  - hh\n#  - hpp\n#ImplementationFileExtensions:\n#  - c\n#  - cc\n#  - cpp\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nChecks: |\n  clang-diagnostic-*,clang-analyzer-*,cppcoreguidelines-*,bugprone-*,concurrency-*,modernize-*,performance-*,portability-*,readability-*,-modernize-use-trailing-return-type,-readability-magic-numbers,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-avoid-non-const-global-variables,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-avoid-const-or-ref-data-members,-performance-avoid-endl\n# yamllint disable rule:line-length\nCheckOptions:\n  - key: readability-suspicious-call-argument.PrefixSimilarAbove\n    value: '30'\n  - key: cppcoreguidelines-no-malloc.Reallocations\n    value: '::realloc'\n  - key: cppcoreguidelines-owning-memory.LegacyResourceConsumers\n    value: '::free;::realloc;::freopen;::fclose'\n  - key: bugprone-reserved-identifier.Invert\n    value: 'false'\n  - key: bugprone-narrowing-conversions.PedanticMode\n    value: 'false'\n  - key: bugprone-unused-return-value.CheckedFunctions\n    value: '::std::async;::std::launder;::std::remove;::std::remove_if;::std::unique;::std::unique_ptr::release;::std::basic_string::empty;::std::vector::empty;::std::back_inserter;::std::distance;::std::find;::std::find_if;::std::inserter;::std::lower_bound;::std::make_pair;::std::map::count;::std::map::find;::std::map::lower_bound;::std::multimap::equal_range;::std::multimap::upper_bound;::std::set::count;::std::set::find;::std::setfill;::std::setprecision;::std::setw;::std::upper_bound;::std::vector::at;::bsearch;::ferror;::feof;::isalnum;::isalpha;::isblank;::iscntrl;::isdigit;::isgraph;::islower;::isprint;::ispunct;::isspace;::isupper;::iswalnum;::iswprint;::iswspace;::isxdigit;::memchr;::memcmp;::strcmp;::strcoll;::strncmp;::strpbrk;::strrchr;::strspn;::strstr;::wcscmp;::access;::bind;::connect;::difftime;::dlsym;::fnmatch;::getaddrinfo;::getopt;::htonl;::htons;::iconv_open;::inet_addr;::isascii;::isatty;::mmap;::newlocale;::openat;::pathconf;::pthread_equal;::pthread_getspecific;::pthread_mutex_trylock;::readdir;::readlink;::recvmsg;::regexec;::scandir;::semget;::setjmp;::shm_open;::shmget;::sigismember;::strcasecmp;::strsignal;::ttyname'\n  - key: modernize-use-auto.MinTypeNameLength\n    value: '5'\n  - key: cppcoreguidelines-macro-usage.CheckCapsOnly\n    value: 'false'\n  - key: readability-inconsistent-declaration-parameter-name.Strict\n    value: 'false'\n  - key: readability-suspicious-call-argument.DiceDissimilarBelow\n    value: '60'\n  - key: readability-suspicious-call-argument.Equality\n    value: 'true'\n  - key: bugprone-easily-swappable-parameters.QualifiersMix\n    value: 'false'\n  - key: bugprone-suspicious-string-compare.WarnOnImplicitComparison\n    value: 'true'\n  - key: bugprone-argument-comment.CommentNullPtrs\n    value: '0'\n  - key: cppcoreguidelines-narrowing-conversions.WarnOnFloatingPointNarrowingConversion\n    value: 'true'\n  - key: cppcoreguidelines-init-variables.IncludeStyle\n    value: llvm\n  - key: modernize-use-nodiscard.ReplacementString\n    value: '[[nodiscard]]'\n  - key: modernize-loop-convert.MakeReverseRangeHeader\n    value: ''\n  - key: readability-suspicious-call-argument.SuffixSimilarAbove\n    value: '30'\n  - key: cppcoreguidelines-narrowing-conversions.WarnOnIntegerNarrowingConversion\n    value: 'true'\n  - key: bugprone-easily-swappable-parameters.IgnoredParameterNames\n    value: '\"\";iterator;Iterator;begin;Begin;end;End;first;First;last;Last;lhs;LHS;rhs;RHS'\n  - key: modernize-loop-convert.UseCxx20ReverseRanges\n    value: 'true'\n  - key: cppcoreguidelines-prefer-member-initializer.UseAssignment\n    value: 'false'\n  - key: performance-type-promotion-in-math-fn.IncludeStyle\n    value: llvm\n  - key: readability-function-cognitive-complexity.DescribeBasicIncrements\n    value: 'true'\n  - key: bugprone-suspicious-include.ImplementationFileExtensions\n    value: 'c;cc;cpp;cxx'\n  - key: modernize-loop-convert.MakeReverseRangeFunction\n    value: ''\n  - key: readability-inconsistent-declaration-parameter-name.IgnoreMacros\n    value: 'true'\n  - key: bugprone-suspicious-missing-comma.SizeThreshold\n    value: '5'\n  - key: readability-identifier-naming.IgnoreFailedSplit\n    value: 'false'\n  - key: readability-qualified-auto.AddConstToQualified\n    value: 'true'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfThis\n    value: 'true'\n  - key: bugprone-string-constructor.WarnOnLargeLength\n    value: 'true'\n  - key: cppcoreguidelines-explicit-virtual-functions.OverrideSpelling\n    value: override\n  - key: readability-uppercase-literal-suffix.IgnoreMacros\n    value: 'true'\n  - key: modernize-make-shared.IgnoreMacros\n    value: 'true'\n  - key: bugprone-dynamic-static-initializers.HeaderFileExtensions\n    value: ';h;hh;hpp;hxx'\n  - key: bugprone-suspicious-enum-usage.StrictMode\n    value: 'false'\n  - key: performance-unnecessary-copy-initialization.AllowedTypes\n    value: ''\n  - key: bugprone-suspicious-missing-comma.MaxConcatenatedTokens\n    value: '5'\n  - key: modernize-use-transparent-functors.SafeMode\n    value: 'false'\n  - key: readability-suspicious-call-argument.Levenshtein\n    value: 'true'\n  - key: bugprone-not-null-terminated-result.WantToUseSafeFunctions\n    value: 'true'\n  - key: bugprone-string-constructor.LargeLengthThreshold\n    value: '8388608'\n  - key: readability-simplify-boolean-expr.ChainedConditionalAssignment\n    value: 'false'\n  - key: cppcoreguidelines-avoid-magic-numbers.IgnoreAllFloatingPointValues\n    value: 'false'\n  - key: cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField\n    value: 'false'\n  - key: bugprone-exception-escape.FunctionsThatShouldNotThrow\n    value: ''\n  - key: performance-inefficient-vector-operation.EnableProto\n    value: 'false'\n  - key: modernize-make-shared.MakeSmartPtrFunction\n    value: 'std::make_shared'\n  - key: modernize-loop-convert.MaxCopySize\n    value: '16'\n  - key: readability-suspicious-call-argument.PrefixDissimilarBelow\n    value: '25'\n  - key: readability-function-size.LineThreshold\n    value: '4294967295'\n  - key: bugprone-easily-swappable-parameters.MinimumLength\n    value: '4'\n  - key: portability-simd-intrinsics.Suggest\n    value: 'false'\n  - key: cppcoreguidelines-pro-bounds-constant-array-index.GslHeader\n    value: ''\n  - key: modernize-use-override.IgnoreDestructors\n    value: 'false'\n  - key: modernize-make-shared.MakeSmartPtrFunctionHeader\n    value: '<memory>'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfConstant\n    value: 'true'\n  - key: readability-redundant-string-init.StringNames\n    value: '::std::basic_string_view;::std::basic_string'\n  - key: modernize-make-unique.IgnoreDefaultInitialization\n    value: 'true'\n  - key: modernize-use-emplace.ContainersWithPushBack\n    value: '::std::vector;::std::list;::std::deque'\n  - key: readability-magic-numbers.IgnoreBitFieldsWidths\n    value: 'true'\n  - key: modernize-make-unique.IncludeStyle\n    value: llvm\n  - key: modernize-use-override.OverrideSpelling\n    value: override\n  - key: readability-suspicious-call-argument.LevenshteinDissimilarBelow\n    value: '50'\n  - key: bugprone-argument-comment.CommentStringLiterals\n    value: '0'\n  - key: concurrency-mt-unsafe.FunctionSet\n    value: any\n  - key: google-readability-braces-around-statements.ShortStatementLines\n    value: '1'\n  - key: bugprone-reserved-identifier.AllowedIdentifiers\n    value: ''\n  - key: cppcoreguidelines-pro-type-member-init.IgnoreArrays\n    value: 'false'\n  - key: readability-else-after-return.WarnOnUnfixable\n    value: 'true'\n  - key: cppcoreguidelines-avoid-magic-numbers.IgnoredFloatingPointValues\n    value: '1.0;100.0;'\n  - key: modernize-use-emplace.IgnoreImplicitConstructors\n    value: 'false'\n  - key: cppcoreguidelines-macro-usage.IgnoreCommandLineMacros\n    value: 'true'\n  - key: readability-suspicious-call-argument.Substring\n    value: 'true'\n  - key: modernize-use-equals-delete.IgnoreMacros\n    value: 'true'\n  - key: cppcoreguidelines-pro-bounds-constant-array-index.IncludeStyle\n    value: llvm\n  - key: readability-magic-numbers.IgnoreAllFloatingPointValues\n    value: 'false'\n  - key: readability-suspicious-call-argument.Abbreviations\n    value: 'arr=array;cnt=count;idx=index;src=source;stmt=statement;cpy=copy;dest=destination;dist=distancedst=distance;ptr=pointer;wdth=width;str=string;ln=line;srv=server;attr=attribute;ref=reference;buf=buffer;col=column;nr=number;vec=vector;len=length;elem=element;val=value;i=index;var=variable;hght=height;cl=client;num=number;pos=position;lst=list;addr=address'\n  - key: bugprone-misplaced-widening-cast.CheckImplicitCasts\n    value: 'false'\n  - key: readability-uppercase-literal-suffix.NewSuffixes\n    value: ''\n  - key: modernize-loop-convert.MinConfidence\n    value: reasonable\n  - key: performance-unnecessary-value-param.AllowedTypes\n    value: ''\n  - key: readability-uniqueptr-delete-release.PreferResetCall\n    value: 'false'\n  - key: cppcoreguidelines-avoid-magic-numbers.IgnorePowersOf2IntegerValues\n    value: 'false'\n  - key: google-readability-namespace-comments.SpacesBeforeComments\n    value: '2'\n  - key: cppcoreguidelines-avoid-magic-numbers.IgnoreBitFieldsWidths\n    value: 'true'\n  - key: cppcoreguidelines-avoid-magic-numbers.IgnoredIntegerValues\n    value: '1;2;3;4;'\n  - key: cppcoreguidelines-no-malloc.Allocations\n    value: '::malloc;::calloc'\n  - key: bugprone-narrowing-conversions.IgnoreConversionFromTypes\n    value: ''\n  - key: readability-function-size.BranchThreshold\n    value: '4294967295'\n  - key: bugprone-suspicious-missing-comma.RatioThreshold\n    value: '0.200000'\n  - key: readability-implicit-bool-conversion.AllowIntegerConditions\n    value: 'false'\n  - key: readability-function-size.StatementThreshold\n    value: '800'\n  - key: readability-identifier-naming.IgnoreMainLikeFunctions\n    value: 'false'\n  - key: cppcoreguidelines-init-variables.MathHeader\n    value: '<math.h>'\n  - key: google-readability-function-size.StatementThreshold\n    value: '800'\n  - key: bugprone-reserved-identifier.AggressiveDependentMemberLookup\n    value: 'false'\n  - key: readability-suspicious-call-argument.DiceSimilarAbove\n    value: '70'\n  - key: modernize-use-equals-default.IgnoreMacros\n    value: 'true'\n  - key: readability-suspicious-call-argument.Abbreviation\n    value: 'true'\n  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor\n    value: 'false'\n  - key: modernize-use-emplace.SmartPointers\n    value: '::std::shared_ptr;::std::unique_ptr;::std::auto_ptr;::std::weak_ptr'\n  - key: cppcoreguidelines-no-malloc.Deallocations\n    value: '::free'\n  - key: bugprone-dangling-handle.HandleClasses\n    value: 'std::basic_string_view;std::experimental::basic_string_view'\n  - key: readability-magic-numbers.IgnorePowersOf2IntegerValues\n    value: 'false'\n  - key: readability-suspicious-call-argument.JaroWinklerSimilarAbove\n    value: '85'\n  - key: readability-simplify-subscript-expr.Types\n    value: '::std::basic_string;::std::basic_string_view;::std::vector;::std::array'\n  - key: performance-unnecessary-copy-initialization.ExcludedContainerTypes\n    value: ''\n  - key: modernize-replace-auto-ptr.IncludeStyle\n    value: llvm\n  - key: performance-move-const-arg.CheckTriviallyCopyableMove\n    value: 'true'\n  - key: readability-static-accessed-through-instance.NameSpecifierNestingThreshold\n    value: '3'\n  - key: readability-function-size.VariableThreshold\n    value: '4294967295'\n  - key: cert-dcl16-c.NewSuffixes\n    value: 'L;LL;LU;LLU'\n  - key: bugprone-narrowing-conversions.WarnOnFloatingPointNarrowingConversion\n    value: 'true'\n  - key: readability-identifier-naming.GetConfigPerFile\n    value: 'true'\n  - key: modernize-use-default-member-init.UseAssignment\n    value: 'false'\n  - key: readability-function-size.NestingThreshold\n    value: '4294967295'\n  - key: modernize-use-override.AllowOverrideAndFinal\n    value: 'false'\n  - key: cppcoreguidelines-narrowing-conversions.IgnoreConversionFromTypes\n    value: ''\n  - key: readability-function-size.ParameterThreshold\n    value: '4294967295'\n  - key: modernize-pass-by-value.ValuesOnly\n    value: 'false'\n  - key: readability-function-cognitive-complexity.IgnoreMacros\n    value: 'true'\n  - key: modernize-loop-convert.IncludeStyle\n    value: llvm\n  - key: cert-str34-c.DiagnoseSignedUnsignedCharComparisons\n    value: 'false'\n  - key: bugprone-narrowing-conversions.WarnWithinTemplateInstantiation\n    value: 'false'\n  - key: bugprone-suspicious-string-compare.WarnOnLogicalNotComparison\n    value: 'false'\n  - key: cppcoreguidelines-explicit-virtual-functions.AllowOverrideAndFinal\n    value: 'false'\n  - key: readability-redundant-smartptr-get.IgnoreMacros\n    value: 'true'\n  - key: readability-identifier-naming.AggressiveDependentMemberLookup\n    value: 'false'\n  - key: modernize-use-emplace.TupleTypes\n    value: '::std::pair;::std::tuple'\n  - key: modernize-use-emplace.TupleMakeFunctions\n    value: '::std::make_pair;::std::make_tuple'\n  - key: cppcoreguidelines-owning-memory.LegacyResourceProducers\n    value: '::malloc;::aligned_alloc;::realloc;::calloc;::fopen;::freopen;::tmpfile'\n  - key: bugprone-easily-swappable-parameters.SuppressParametersUsedTogether\n    value: 'true'\n  - key: bugprone-argument-comment.StrictMode\n    value: '0'\n  - key: modernize-replace-random-shuffle.IncludeStyle\n    value: llvm\n  - key: modernize-use-bool-literals.IgnoreMacros\n    value: 'true'\n  - key: bugprone-unhandled-self-assignment.WarnOnlyIfThisHasSuspiciousField\n    value: 'true'\n  - key: google-readability-namespace-comments.ShortNamespaceLines\n    value: '10'\n  - key: bugprone-suspicious-string-compare.StringCompareLikeFunctions\n    value: ''\n  - key: modernize-avoid-bind.PermissiveParameterList\n    value: 'false'\n  - key: bugprone-easily-swappable-parameters.NamePrefixSuffixSilenceDissimilarityTreshold\n    value: '1'\n  - key: readability-suspicious-call-argument.Suffix\n    value: 'true'\n  - key: readability-suspicious-call-argument.JaroWinklerDissimilarBelow\n    value: '75'\n  - key: modernize-use-noexcept.ReplacementString\n    value: ''\n  - key: modernize-use-override.FinalSpelling\n    value: final\n  - key: modernize-use-using.IgnoreMacros\n    value: 'true'\n  - key: cppcoreguidelines-explicit-virtual-functions.FinalSpelling\n    value: final\n  - key: readability-suspicious-call-argument.MinimumIdentifierNameLength\n    value: '3'\n  - key: bugprone-narrowing-conversions.WarnOnIntegerNarrowingConversion\n    value: 'true'\n  - key: modernize-loop-convert.NamingStyle\n    value: CamelCase\n  - key: cppcoreguidelines-pro-type-member-init.UseAssignment\n    value: 'false'\n  - key: bugprone-suspicious-include.HeaderFileExtensions\n    value: ';h;hh;hpp;hxx'\n  - key: performance-no-automatic-move.AllowedTypes\n    value: ''\n  - key: readability-suspicious-call-argument.SubstringDissimilarBelow\n    value: '40'\n  - key: bugprone-argument-comment.CommentIntegerLiterals\n    value: '0'\n  - key: performance-for-range-copy.WarnOnAllAutoCopies\n    value: 'false'\n  - key: modernize-pass-by-value.IncludeStyle\n    value: llvm\n  - key: bugprone-argument-comment.CommentFloatLiterals\n    value: '0'\n  - key: bugprone-too-small-loop-variable.MagnitudeBitsUpperLimit\n    value: '16'\n  - key: readability-simplify-boolean-expr.ChainedConditionalReturn\n    value: 'false'\n  - key: readability-else-after-return.WarnOnConditionVariables\n    value: 'true'\n  - key: modernize-use-nullptr.NullMacros\n    value: 'NULL'\n  - key: readability-suspicious-call-argument.SuffixDissimilarBelow\n    value: '25'\n  - key: bugprone-argument-comment.CommentCharacterLiterals\n    value: '0'\n  - key: cppcoreguidelines-macro-usage.AllowedRegexp\n    value: '^DEBUG_*'\n  - key: readability-suspicious-call-argument.LevenshteinSimilarAbove\n    value: '66'\n  - key: cppcoreguidelines-narrowing-conversions.PedanticMode\n    value: 'false'\n  - key: modernize-make-shared.IgnoreDefaultInitialization\n    value: 'true'\n  - key: readability-suspicious-call-argument.JaroWinkler\n    value: 'true'\n  - key: bugprone-implicit-widening-of-multiplication-result.UseCXXHeadersInCppSources\n    value: 'true'\n  - key: modernize-make-shared.IncludeStyle\n    value: llvm\n  - key: readability-suspicious-call-argument.Prefix\n    value: 'true'\n  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions\n    value: 'false'\n  - key: bugprone-implicit-widening-of-multiplication-result.UseCXXStaticCastsInCppSources\n    value: 'true'\n  - key: bugprone-signed-char-misuse.CharTypdefsToIgnore\n    value: ''\n  - key: cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors\n    value: 'true'\n  - key: modernize-make-unique.IgnoreMacros\n    value: 'true'\n  - key: performance-for-range-copy.AllowedTypes\n    value: ''\n  - key: bugprone-argument-comment.CommentBoolLiterals\n    value: '0'\n  - key: readability-braces-around-statements.ShortStatementLines\n    value: '0'\n  - key: bugprone-argument-comment.CommentUserDefinedLiterals\n    value: '0'\n  - key: readability-magic-numbers.IgnoredFloatingPointValues\n    value: '1.0;100.0;'\n  - key: readability-implicit-bool-conversion.AllowPointerConditions\n    value: 'false'\n  - key: performance-inefficient-string-concatenation.StrictMode\n    value: 'false'\n  - key: bugprone-easily-swappable-parameters.IgnoredParameterTypeSuffixes\n    value: 'bool;Bool;_Bool;it;It;iterator;Iterator;inputit;InputIt;forwardit;FowardIt;bidirit;BidirIt;constiterator;const_iterator;Const_Iterator;Constiterator;ConstIterator;RandomIt;randomit;random_iterator;ReverseIt;reverse_iterator;reverse_const_iterator;ConstReverseIterator;Const_Reverse_Iterator;const_reverse_iterator;Constreverseiterator;constreverseiterator'\n  - key: modernize-make-unique.MakeSmartPtrFunction\n    value: 'std::make_unique'\n  - key: readability-redundant-declaration.IgnoreMacros\n    value: 'true'\n  - key: portability-restrict-system-includes.Includes\n    value: '*'\n  - key: modernize-make-unique.MakeSmartPtrFunctionHeader\n    value: '<memory>'\n  - key: bugprone-signal-handler.AsyncSafeFunctionSet\n    value: POSIX\n  - key: bugprone-easily-swappable-parameters.ModelImplicitConversions\n    value: 'true'\n  - key: readability-suspicious-call-argument.SubstringSimilarAbove\n    value: '50'\n  - key: cppcoreguidelines-narrowing-conversions.WarnWithinTemplateInstantiation\n    value: 'false'\n  - key: cppcoreguidelines-narrowing-conversions.WarnOnEquivalentBitWidth\n    value: 'true'\n  - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnorePublicMemberVariables\n    value: 'false'\n  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted\n    value: 'false'\n  - key: modernize-use-noexcept.UseNoexceptFalse\n    value: 'true'\n  - key: readability-function-cognitive-complexity.Threshold\n    value: '75'\n  - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value: 'true'\n  - key: bugprone-argument-comment.IgnoreSingleArgument\n    value: '0'\n  - key: bugprone-narrowing-conversions.WarnOnEquivalentBitWidth\n    value: 'true'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression\n    value: 'false'\n  - key: performance-faster-string-find.StringLikeClasses\n    value: '::std::basic_string;::std::basic_string_view'\n  - key: bugprone-assert-side-effect.CheckFunctionCalls\n    value: 'false'\n  - key: bugprone-string-constructor.StringNames\n    value: '::std::basic_string;::std::basic_string_view'\n  - key: bugprone-assert-side-effect.AssertMacros\n    value: assert,NSAssert,NSCAssert\n  - key: bugprone-exception-escape.IgnoredExceptions\n    value: ''\n  - key: bugprone-signed-char-misuse.DiagnoseSignedUnsignedCharComparisons\n    value: 'true'\n  - key: modernize-use-default-member-init.IgnoreMacros\n    value: 'true'\n  - key: llvm-qualified-auto.AddConstToQualified\n    value: 'false'\n  - key: llvm-else-after-return.WarnOnConditionVariables\n    value: 'false'\n  - key: bugprone-sizeof-expression.WarnOnSizeOfCompareToConstant\n    value: 'true'\n  - key: modernize-raw-string-literal.DelimiterStem\n    value: lit\n  - key: readability-suspicious-call-argument.Dice\n    value: 'true'\n  - key: modernize-raw-string-literal.ReplaceShorterLiterals\n    value: 'false'\n  - key: readability-magic-numbers.IgnoredIntegerValues\n    value: '1;2;3;4;'\n  - key: performance-inefficient-vector-operation.VectorLikeClasses\n    value: '::std::vector'\n  - key: modernize-use-auto.RemoveStars\n    value: 'false'\n  - key: bugprone-implicit-widening-of-multiplication-result.IncludeStyle\n    value: llvm\n  - key: portability-simd-intrinsics.Std\n    value: ''\n  - key: performance-unnecessary-value-param.IncludeStyle\n    value: llvm\n  - key: readability-redundant-member-init.IgnoreBaseInCopyConstructors\n    value: 'false'\n  - key: modernize-replace-disallow-copy-and-assign-macro.MacroName\n    value: DISALLOW_COPY_AND_ASSIGN\n  - key: llvm-else-after-return.WarnOnUnfixable\n    value: 'false'\n# yamllint enable\n...\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1005859375,
          "content": "builder/tmp\nbuilt_pkgs\nDockerfile-*\n.dockerignore\nMakefile.docker\n**/venv\n**/*.1\n!.git/**\n*.o\n*.la\n*.a\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1015625,
          "content": "# https://github.com/github/linguist/blob/master/docs/overrides.md\n*/zones/* linguist-language=DNS-Zone\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.740234375,
          "content": "/Makefile\n/Makefile.in\n/aclocal.m4\n/autom4te.cache\n/build-aux/*\n!/build-aux/gen-version\n/config.cache\n/config.guess\n/config.h\n/config.h.in\n/config.sub\n/configure\n/depcomp\n/install-sh\n/ltmain.sh\n/missing\n/mkinstalldirs\n/stamp-h\n/stamp-h1\n/test-driver\n/ylwrap\n*.la\n*.lo\n*.a\n*.o\n.deps\n.libs\n.dirstamp\n.version\ncodedocs/Makefile\ncodedocs/Makefile.in\n/config.log\n/config.status\n/libtool\n/compile\n/.tags*\nlibtool.m4\nltoptions.m4\nltsugar.m4\nltversion.m4\nlt~obsolete.m4\npdns-*.tar.gz\npdns-*.tar.bz2\nregression-tests.recursor/run-auth\n.*DS_Store\n*~\npdns.pid\npdns_recursor.pid\n*.gcda\n*.gcno\n*.gcov\nbuilt_pkgs\n*-wal\n*-shm\n__pycache__\n.circleci/config.yml-local\n.env\ncompile_commands.*\n.cache\n/.clang-tidy\n.ccls-cache\n.gdb_history\n.venv\n\n# Local Netlify folder\n.netlify\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.087890625,
          "content": "[submodule \"builder\"]\n\tpath = builder\n\turl = https://github.com/PowerDNS/pdns-builder.git\n"
        },
        {
          "name": ".not-formatted",
          "type": "blob",
          "size": 5.560546875,
          "content": "./ext/lmdb-safe/lmdb-safe.cc\n./ext/lmdb-safe/lmdb-safe.hh\n./ext/lmdb-safe/lmdb-typed.hh\n./ext/probds/murmur3.cc\n./pdns/anadns.hh\n./pdns/auth-caches.cc\n./pdns/auth-carbon.cc\n./pdns/auth-packetcache.cc\n./pdns/auth-packetcache.hh\n./pdns/auth-primarycommunicator.cc\n./pdns/auth-querycache.cc\n./pdns/auth-querycache.hh\n./pdns/axfr-retriever.cc\n./pdns/axfr-retriever.hh\n./pdns/backends/gsql/gsqlbackend.cc\n./pdns/backends/gsql/gsqlbackend.hh\n./pdns/base32.cc\n./pdns/base64.cc\n./pdns/base64.hh\n./pdns/bindparserclasses.hh\n./pdns/calidns.cc\n./pdns/capabilities.cc\n./pdns/cdb.cc\n./pdns/cdb.hh\n./pdns/comfun.cc\n./pdns/comment.hh\n./pdns/dbdnsseckeeper.cc\n./pdns/distributor.hh\n./pdns/dns.cc\n./pdns/dns.hh\n./pdns/dnsbulktest.cc\n./pdns/dnsdemog.cc\n./pdns/dnsdistdist/connection-management.hh\n./pdns/dnsdistdist/dnsdist-backend.cc\n./pdns/dnsdistdist/dnsdist-kvs.cc\n./pdns/dnsdistdist/dnsdist-kvs.hh\n./pdns/dnsdistdist/dnsdist-lbpolicies.cc\n./pdns/dnsdistdist/dnsdist-lua-bindings-kvs.cc\n./pdns/dnsdistdist/dnsdist-lua-bindings-packetcache.cc\n./pdns/dnsdistdist/dnsdist-lua-bindings-protobuf.cc\n./pdns/dnsdistdist/dnsdist-lua-ffi.cc\n./pdns/dnsdistdist/dnsdist-lua-ffi.hh\n./pdns/dnsdistdist/dnsdist-lua-web.cc\n./pdns/dnsdistdist/dnsdist-prometheus.hh\n./pdns/dnsdistdist/dnsdist-rules.hh\n./pdns/dnsdistdist/dnsdist-secpoll.cc\n./pdns/dnsdistdist/dnsdist-systemd.cc\n./pdns/dnsdistdist/dnsdist-tcp-downstream.cc\n./pdns/dnsdistdist/dnsdist-tcp-downstream.hh\n./pdns/dnsdistdist/dnsdist-tcp-upstream.hh\n./pdns/dnsdistdist/dnsdist-web.hh\n./pdns/dnsdistdist/doh.cc\n./pdns/dnsdistdist/tcpiohandler-mplexer.hh\n./pdns/dnsdistdist/test-connectionmanagement_hh.cc\n./pdns/dnsdistdist/test-delaypipe_hh.cc\n./pdns/dnsdistdist/test-dnsdistdynblocks_hh.cc\n./pdns/dnsdistdist/test-dnsdistkvs_cc.cc\n./pdns/dnsdistdist/test-dnsdistrings_cc.cc\n./pdns/dnsdistdist/test-dnsdistrules_cc.cc\n./pdns/dnsdistdist/test-dnsdisttcp_cc.cc\n./pdns/dnsdistdist/testrunner.cc\n./pdns/dnsgram.cc\n./pdns/dnsname.cc\n./pdns/dnsname.hh\n./pdns/dnspacket.cc\n./pdns/dnspacket.hh\n./pdns/dnsparser.cc\n./pdns/dnsparser.hh\n./pdns/dnspcap.cc\n./pdns/dnspcap.hh\n./pdns/dnspcap2calidns.cc\n./pdns/dnspcap2protobuf.cc\n./pdns/dnsrecords.cc\n./pdns/dnsrecords.hh\n./pdns/dnsreplay.cc\n./pdns/dnsscan.cc\n./pdns/dnsscope.cc\n./pdns/dnssecinfra.cc\n./pdns/dnssecinfra.hh\n./pdns/dnsseckeeper.hh\n./pdns/dnssecsigner.cc\n./pdns/dnstcpbench.cc\n./pdns/dnswasher.cc\n./pdns/dnswriter.cc\n./pdns/dnswriter.hh\n./pdns/dumresp.cc\n./pdns/dynhandler.cc\n./pdns/dynhandler.hh\n./pdns/dynlistener.cc\n./pdns/dynlistener.hh\n./pdns/dynloader.cc\n./pdns/dynmessenger.cc\n./pdns/dynmessenger.hh\n./pdns/ednsoptions.cc\n./pdns/ednsoptions.hh\n./pdns/ednspadding.cc\n./pdns/gettime.cc\n./pdns/gettime.hh\n./pdns/histog.hh\n./pdns/inflighter.cc\n./pdns/ixfr.cc\n./pdns/ixfr.hh\n./pdns/ixfrdist-stats.cc\n./pdns/ixfrdist-stats.hh\n./pdns/ixfrdist-web.cc\n./pdns/ixfrdist-web.hh\n./pdns/ixfrdist.cc\n./pdns/ixfrutils.cc\n./pdns/ixfrutils.hh\n./pdns/ixplore.cc\n./pdns/json.cc\n./pdns/json.hh\n./pdns/kvresp.cc\n./pdns/libssl.cc\n./pdns/libssl.hh\n./pdns/lua-auth4.cc\n./pdns/lua-auth4.hh\n./pdns/lua-base4.cc\n./pdns/lua-base4.hh\n./pdns/lua-record.cc\n./pdns/malloctrace.cc\n./pdns/malloctrace.hh\n./pdns/minicurl.cc\n./pdns/minicurl.hh\n./pdns/misc.cc\n./pdns/misc.hh\n./pdns/nameserver.cc\n./pdns/nameserver.hh\n./pdns/namespaces.hh\n./pdns/noinitvector.hh\n./pdns/notify.cc\n./pdns/nproxy.cc\n./pdns/nsec3dig.cc\n./pdns/nsecrecords.cc\n./pdns/packetcache.hh\n./pdns/packethandler.cc\n./pdns/packethandler.hh\n./pdns/pdns_hw.cc\n./pdns/pdnsexception.hh\n./pdns/pdnsutil.cc\n./pdns/pkcs11signers.cc\n./pdns/pkcs11signers.hh\n./pdns/proxy-protocol.cc\n./pdns/proxy-protocol.hh\n./pdns/qtype.cc\n./pdns/qtype.hh\n./pdns/query-local-address.cc\n./pdns/query-local-address.hh\n./pdns/rcpgenerator.cc\n./pdns/rcpgenerator.hh\n./pdns/remote_logger.cc\n./pdns/remote_logger.hh\n./pdns/resolver.cc\n./pdns/resolver.hh\n./pdns/responsestats-auth.cc\n./pdns/rfc2136handler.cc\n./pdns/root-dnssec.hh\n./pdns/saxfr.cc\n./pdns/sdig.cc\n./pdns/secpoll-auth.cc\n./pdns/secpoll.cc\n./pdns/secpoll.hh\n./pdns/serialtweaker.cc\n./pdns/signingpipe.cc\n./pdns/signingpipe.hh\n./pdns/sillyrecords.cc\n./pdns/snmp-agent.cc\n./pdns/snmp-agent.hh\n./pdns/speedtest.cc\n./pdns/standalone_fuzz_target_runner.cc\n./pdns/stat_t.hh\n./pdns/statbag.cc\n./pdns/statbag.hh\n./pdns/statnode.cc\n./pdns/statnode.hh\n./pdns/stubquery.cc\n./pdns/svc-records.cc\n./pdns/svc-records.hh\n./pdns/tcpiohandler.cc\n./pdns/tcpiohandler.hh\n./pdns/tcpreceiver.cc\n./pdns/tcpreceiver.hh\n./pdns/test-arguments_cc.cc\n./pdns/test-base32_cc.cc\n./pdns/test-base64_cc.cc\n./pdns/test-common.hh\n./pdns/test-distributor_hh.cc\n./pdns/test-dnsname_cc.cc\n./pdns/test-dnsparser_cc.cc\n./pdns/test-dnsparser_hh.cc\n./pdns/test-dnsrecordcontent.cc\n./pdns/test-dnsrecords_cc.cc\n./pdns/test-dnswriter_cc.cc\n./pdns/test-iputils_hh.cc\n./pdns/test-ixfr_cc.cc\n./pdns/test-lock_hh.cc\n./pdns/test-lua_auth4_cc.cc\n./pdns/test-misc_hh.cc\n./pdns/test-nameserver_cc.cc\n./pdns/test-packetcache_cc.cc\n./pdns/test-packetcache_hh.cc\n./pdns/test-proxy_protocol_cc.cc\n./pdns/test-rcpgenerator_cc.cc\n./pdns/test-statbag_cc.cc\n./pdns/test-svc_records_cc.cc\n./pdns/test-trusted-notification-proxy_cc.cc\n./pdns/test-tsig.cc\n./pdns/test-ueberbackend_cc.cc\n./pdns/test-zoneparser_tng_cc.cc\n./pdns/threadname.cc\n./pdns/tkey.cc\n./pdns/trusted-notification-proxy.cc\n./pdns/trusted-notification-proxy.hh\n./pdns/tsig-tests.cc\n./pdns/tsigutils.cc\n./pdns/tsigutils.hh\n./pdns/tsigverifier.cc\n./pdns/tsigverifier.hh\n./pdns/unix_semaphore.cc\n./pdns/unix_utility.cc\n./pdns/utility.hh\n./pdns/uuid-utils.cc\n./pdns/validate.cc\n./pdns/validate.hh\n./pdns/webserver.cc\n./pdns/webserver.hh\n./pdns/zone2json.cc\n./pdns/zone2ldap.cc\n./pdns/zone2sql.cc\n./pdns/zoneparser-tng.cc\n./pdns/zoneparser-tng.hh\n"
        },
        {
          "name": ".valgrindrc",
          "type": "blob",
          "size": 0.0244140625,
          "content": "--suppressions=pdns.supp\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.0419921875,
          "content": "PowerDNS.COM BV and a cast of thousands ;-)"
        },
        {
          "name": "BUILDING-PACKAGES.md",
          "type": "blob",
          "size": 5.2919921875,
          "content": "Building packages\n=================\n\nPowerDNS uses the pdns-builder tool to generate packages for its products. The actual workflow can be found in the [builder-support](https://github.com/PowerDNS/pdns/tree/master/builder-support) directory of the git repository.\nThe [build-tags.yml](https://github.com/PowerDNS/pdns/blob/master/.github/workflows/build-tags.yml) workflow automatically builds packages when a tag is pushed, so there is no need to trigger a manual build for releases, and actually doing so would be worse from a provenance point of view where full automation is always better.\n\nBuilding packages on your own computer\n--------------------------------------\n\nThis requires a working Docker installation.\n\n1. Clone our git repo (`git clone https://github.com/PowerDNS/pdns.git`)\n2. Check out the version you want, it can be a git tag like dnsdist-1.8.1, a git commit ID or branch\n3. Update submodules (`git submodule update --init --recursive`)\n4. Execute `builder/build.sh` to see what arguments it supports\n5. Then run `builder/build.sh` with the arguments you want (for example, `builder/build.sh -m recursor debian-bookworm`)\n\nBuilding packages from GitHub actions\n-------------------------------------\n\nYou can build packages from your own fork of the PowerDNS repository. Go to the [PowerDNS/pdns](https://github.com/PowerDNS/pdns) repository and click on `Fork` at the top right of the screen. When asked if you would like to only copy the master branch, say no, as otherwise you will not be able to build packages from tagged releases. If you have already done so and have not done any modification to your fork, the easiest way is to delete and recreate it.\n\nOn your fork, go to the `Actions` tab. You will be greeted by a message stating `Workflows aren’t being run on this forked repository`. You can click `I understand my workflows, go ahead and enable them`.\n\nPlease be aware that by default some of the workflows are executed once every day, and enabling them will consume billing time our of your GitHub actions quota, although at the moment GitHub disables these by default: `This scheduled workflow is disabled because scheduled workflows are disabled by default in forks`. \n\nOn the left side, click on `Trigger specific package build`.\n\nLocate the `Run workflow` dropdown item on the top right side of the screen, inside the blue region stating `This workflow has a workflow_dispatch event trigger.` It will open a menu with several options:\n- `Branch`: you can keep `master` here, unless you need to build for an operating system which is not in the list, in which case you will have to create a new branch and add the required file(s) for this OS. See `Adding a new OS` below.\n- `Product to build`: select the product you want to build packages for, for example `dnsdist`\n- `OSes to build for, space separated`: keep one or more OSes you want to build packages for, for example `ubuntu-focal`\n- `git ref to checkout`: the exact version you want to build. It can be the name of branch, a git tag or a git commit ID. Most likely you will be willing to build from a tagged release, like `dnsdist-1.8.1`.\n- `is this a release build?`: Keep `NO`\n\nClick `Run workflow` to start the build.\n\nIf you reload the page, you should now see your build in progress as a `Trigger specific package build` workflow run. It will take some time to finish, but you can look at the progress by clicking on it.\n\nOnce it's done, you can retrieve the generated package in the list of artifacts on the `Summary` page of the workflow run, by clicking on the `Summary` link on the top right of the screen.\n\nAdding a new OS to the list\n---------------------------\n\nAdding a new OS is usually easy, provided that it does not differ too much from an existing one. For example, to add support for Debian Bookworm (already present in the current repository), one had to:\n\nCopy the existing instructions for Debian Buster:\n```\ncp builder-support/dockerfiles/Dockerfile.target.debian-buster builder-support/dockerfiles/Dockerfile.target.debian-bookworm\n```\n\nIn the new `builder-support/dockerfiles/Dockerfile.target.debian-bookworm` file, replace every occurrence of `debian-buster` by `debian-bookworm`, and of `debian:buster` by `debian:bookworm`\n\nThen add the new target to the list of OSes in the `.github/workflows/builder-dispatch.yml` workflow file:\n```\ndefault: >-\n  el-7\n  el-8\n  el-9\n  debian-buster\n  debian-bullseye\n  debian-bookworm\n  ubuntu-focal\n  ubuntu-jammy\n```\n\nIf release packages should be automatically built for this new target, then `.github/workflows/build-packages.yml` has to be updated as well:\n``\n```\ndefault: >-\n  el-7\n  el-8\n  el-9\n  debian-buster\n  debian-bullseye\n  debian-bookworm\n  ubuntu-focal\n  ubuntu-jammy\n```\n\nNot forgetting to update the list of hashes later in the same file:\n```\npkghashes-el-7: ${{ steps.pkghashes.outputs.pkghashes-el-7 }}\npkghashes-el-8: ${{ steps.pkghashes.outputs.pkghashes-el-8 }}\npkghashes-el-9: ${{ steps.pkghashes.outputs.pkghashes-el-9 }}\npkghashes-debian-buster: ${{ steps.pkghashes.outputs.pkghashes-debian-buster }}\npkghashes-debian-bullseye: ${{ steps.pkghashes.outputs.pkghashes-debian-bullseye }}\npkghashes-debian-bookworm: ${{ steps.pkghashes.outputs.pkghashes-debian-bookworm }}\npkghashes-ubuntu-focal: ${{ steps.pkghashes.outputs.pkghashes-ubuntu-focal }}\npkghashes-ubuntu-jammy: ${{ steps.pkghashes.outputs.pkghashes-ubuntu-jammy }}\n```\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.412109375,
          "content": "# Use \"brew bundle\" to install these.\n# See https://github.com/Homebrew/homebrew-core/blob/master/Formula/p/pdns.rb or\n# https://github.com/Homebrew/homebrew-core/blob/master/Formula/p/pdnsrec.rb for ./configure tips\nbrew 'autoconf'\nbrew 'automake'\nbrew 'libedit'\nbrew 'libsodium'\nbrew 'libtool'\nbrew 'lua'\nbrew 'openssl'\nbrew 'pkg-config'\nbrew 'protobuf'\nbrew 'python'\nbrew 'ragel'\nbrew 'sqlite'\nbrew 'boost'\nbrew 'rust'\n"
        },
        {
          "name": "CODE_COVERAGE.md",
          "type": "blob",
          "size": 8.5751953125,
          "content": "Code Coverage\n-------------\n\nPowerDNS uses [coveralls](https://coveralls.io/) to generate code coverage reports from our Continuous Integration tests. The resulting analysis can then be consulted [online](https://coveralls.io/github/PowerDNS/pdns), and gives insight into which parts of the code are automatically tested.\n\nCode coverage is generated during our Continuous Integration tests, for every pull request. In addition to the dashboard on Coveralls' website, a summary is posted on pull requests.\n\n# Technical Details\n\n## DebugInfo vs Source-based Code Coverage\n\nThere are two main ways of generating code coverage: `GCOV` and `source-based`.\n\n### GCOV\n\nThe `GCOV` approach, supported by both `g++` and `clang++`, is enabled by passing the `--coverage` flag (equivalent to `-ftest-coverage -fprofile-arcs`) to the compiler and linker. It operates on debugging information (`DebugInfo`), usually [DWARF](https://dwarfstd.org/), generated by the compiler, and also used by debuggers.\nThis approach generates `.gcno` files during the compilation, which are stored along the object files, and `.gcda` files at runtime when the final program is executed.\n\n* There are as many `.gcno` and `.gcda` files as object files, which may be a lot.\n* Every invocation of a program updates the `.gcda` files corresponding to the code that has been executed. It will append to existing `.gcda` files, but only process can update a given file so parallel execution will result in corrupted data.\n* Writing to each `.gcda` might take a while for large programs, and has been known to slow down execution quite a lot.\n* Accurate reporting of lines and branches may be problematic when optimizations are enabled, so it is advised to disable optimizations to get useful analysis.\n* Note that the `.gcda` files produced by `clang++` are not fully compatible with the `g++` ones, and with the existing tools, but [`llvm-cov gcov`](https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-gcov) can produce `.gcov` files that should be compatible. A symptom of this incompatibility looks like this:\n\n```\nProcessing pdns/ednssubnet.gcda\n__w/pdns/pdns/pdns/ednssubnet.gcno:version '408', prefer 'B02'\n```\n\n### Source Based\n\n`clang++` supports [source-based coverage](https://clang.llvm.org/docs/SourceBasedCodeCoverage.html), which operates on `AST` and preprocessor information directly. This is enabled by passing `-fprofile-instr-generate -fcoverage-mapping` to the compiler and leads to `.profraw` files being produced when the binary is executed. \nThe `.profraw` file(s) can be merged by [`llvm-profdata merge`](https://llvm.org/docs/CommandGuide/llvm-profdata.html#profdata-merge) into a `.profdata` file which can then be used by [`llvm-cov show`](https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-show) to generate HTML and text reports, or by [`llvm-cov export`](https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-export) to export `LCOV` data that is compatible with other tools.\n\n* Source-based coverage can generate accurate data with optimizations enabled, and has a much lower overhead that `GCOV`.\n* The path and exact name of the `.profraw` files generated when a program is executed can be controlled via the `LLVM_PROFILE_FILE` environment variable, which supports [patterns](https://clang.llvm.org/docs/SourceBasedCodeCoverage.html#running-the-instrumented-program) like `%p`, which expands to the process ID. That allows running several programs in parallel, each program generating its own file at the end.\n\n## Implementation\n\nWe use `clang++`'s source-based coverage method in our CI, as it allows running our regression tests in parallel with several workers. It is enabled by passing the `--enable-coverage=clang` flag during `configure` for all products.\nThe code coverage generation is done as part of the [build-and-test-all.yml](https://github.com/PowerDNS/pdns/blob/master/.github/workflows/build-and-test-all.yml) workflow.\n\nSince we have a `monorepo` for three products which share the same code-base, the process is a bit tricky:\n\n* We use coveralls's `parallel` feature, which allows us to generate partial reports from several steps of our CI process, then merge them during the `collect` phase and upload the resulting `LCOV` file to coveralls.\n* After executing our tests, the `generate_coverage_info` method in [`tasks.py`](https://github.com/PowerDNS/pdns/blob/master/tasks.py) merges the `.profraw` files that have been generated every time a binary has been executed into a single `.profdata` file via [`llvm-profdata merge`](https://llvm.org/docs/CommandGuide/llvm-profdata.html#profdata-merge). We enable the `sparse` mode to get a smaller `.profdata` file, since we do not do Profile-Guided Optimization (PGO).\n* It then generates a `.lcov` file from the `.profdata` via [`llvm-cov export`](https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-export), telling it to ignore reports for files under `/usr` in the process (via the `-ignore-filename-regex` parameter).\n* We then normalize the paths of the source files to prevent duplicates for files that are used by more than one product, and to account for the fact that our CI actually compiles from a `distdir`. This is handled by a Python script, [.github/scripts/normalize_paths_in_coverage.py](https://github.com/PowerDNS/pdns/blob/master/.github/scripts/normalize_paths_in_coverage.py) that parses the `LCOV` data and updates the paths.\n* We call [Coveralls's github action](https://github.com/coverallsapp/github-action) to upload the resulting `LCOV` data for this step.\n* After all steps have completed, we call that action again to let it know that our workflow is finished and the data can be consolidated.\n\nOne important thing to remember is that the content is only written into a `.profraw` file is the program terminates correctly, calling `exit` handlers, and if the `__llvm_profile_write_file()` function is called. Our code base has a wrapper around that, `pdns::coverage::dumpCoverageData()`.\nThis is especially important for us because our products often terminates by calling `_exit()`, bypassing the `exit` handlers, to avoid issues with the destruction order of global objects.\n\n## Generating Coverage Outside Of the CI\n\nIt is possible to generate a code coverage report without going through the CI, for example to test the coverage of a new feature in a given product.\n\n### Source-based Coverage With clang++\n\n* Run the `configure` script with the `--enable-coverage=clang` option, setting the `CC` and `CXX` environment variables to use the `clang` compiler: `CC=clang CXX=clang++ ./configure --enable-coverage=clang`\n* Compile the product as usual with: `make`\n* Run the test(s) that are expected to cover the new feature, via `./testrunner` or `make check` for the unit tests, and the instructions of the corresponding `regression-tests*` directory for the regression tests. It is advised to set the `LLVM_PROFILE_FILE` environment variable in such a way that an invocation of the product do not override the results from the previous invocation. For example setting `LLVM_PROFILE_FILE=\"/tmp/code-%p.profraw\"` will result in each invocation writing a new file into the `/tmp` directory, replacing `%p` with the process ID.\n* Merge the resulting `*.profraw` file into a single `code.profdata` file by running `llvm-profdata merge -sparse -o /tmp/code.profdata /tmp/code-*.profraw`\n* Generate a HTML report into the `/tmp/html-report` directory by running `llvm-cov show --instr-profile /tmp/code.profdata -format html -output-dir /tmp/html-report -object </path/to/product/binary>`\n\n### GCOV\n\n* Run the `configure` script with the `--enable-coverage` option, using either `g++` or `clang++`: `./configure --enable-coverage`\n* Compile as usual with: `make`. This will generate `.gcno` files along with the usual `.o` object files and the final binaries.\n* Run the test(s) that are expected to cover the new feature, via `./testrunner` or `make check` for the unit tests, and the instructions of the corresponding `regression-tests*` directory for the regression tests. Note that the regression should not be run in parallel, as it would corrupt the `.gcna` files that will be generated in the process. For dnsdist, that means running `pytest` without the `--dist=loadfile -n auto` options.\n* Generate a HTML report using `gcovr`, or `gcov` then `lcov`\n\n# Remaining Tasks\n\nThe way our code coverage report is generated does not currently handle the different authoritative server tools (that end up in the `pdns-tools` package) very well. Consequently the coverage report for these tools, and the related code parts, is not accurate.\nIt is likely possible to pass several `--object </path/to/binary>` options to `llvm-cov` when processing the `.profdata` file.\n"
        },
        {
          "name": "CODING_GUIDELINES.md",
          "type": "blob",
          "size": 37.8486328125,
          "content": "Coding Guidelines for Contributing to PowerDNS\n----------------------------------------------\n\nThank you for you interest in contributing to the PowerDNS project.\nThis document describes the general coding guidelines to keep in mind when contributing code to our code base.\nIt does assume that you have already read the contributing document at [CONTRIBUTING.md](https://github.com/PowerDNS/pdns/blob/master/CONTRIBUTING.md).\n\n# High-level Guidelines\n\n* Although the codebase does not consistently have them, [docblocks](https://www.doxygen.nl/manual/docblocks.html) on functions and classes are appreciated.\n* Never hesitate to write comments on anything that might not be immediately clear just from reading the code.\n* When adding whole new things, consider putting them in a `pdns::X` namespace.\n  Look for `namespace pdns` in the codebase for examples.\n\n# Memory Handling\n\nThe memory model in C++, inherited from the C era, is very powerful but also very error-prone.\nSeveral features are available in modern C++ (11 and up) to make it possible to avoid most of the pitfalls, while conserving the same level of performance.\n\nMost of the issues related to memory allocation (memory leaks, use-after-free) can be solved by using standard containers, or taking advantage of RAII and smart pointers, which take care of destroying objects when it is not used anymore.\n\n## Stack-based Memory Allocation\n\nDefault allocations, when declaring a variable local to a function for example, are done on the stack instead of doing a dynamic allocation on the heap.\nAllocating objects on the stack is faster, especially in threaded programs, and provides the benefit that objects are automatically destroyed when the function exits.\n\nOne caveat that the programmer needs to be aware of is the size of the object in order to not exceed the space available on the stack, which would corrupt other objects in memory and could lead to a crash, or even execution of arbitrary code.\nThis is especially true in the Recursor which uses a custom mechanism for stack-switching in user-space and thus has a reduced stack size.\n\n### Variable-Length Arrays (VLAs)\n\nIn order to avoid smashing the stack, special care should be taken to limit the depth of function calls that, for example, can grow quickly with recursion.\nA second common source of stack smashing is the use of Variable-Length Arrays (VLAs), whose size is determined at runtime and is therefore very hard to predict.\nThe C++ language does not support VLAs but a lot of compilers inherit such support from C99, so it is possible to use them by accident.\nPowerDNS strictly forbids the use of VLAs, as does the Linux kernel, and enforces that with the `-Werror=vla` compiler flag.\n\n### C-style Arrays\n\nWhile you might still find some uses of C-style arrays in the existing code base, we are actively trying to get rid of them. One example is as follows:\n\n```C++\nsomestruct buffer[12];\nauto bufferSize = sizeof(buffer) / sizeof(*buffer);\nauto& firstElement = buffer[0];\n```\n\nIt is immediately obvious that computing the actual number of elements is error-prone, because `sizeof()` does not return the number of elements but the total memory space used by the array.\nAnother obvious issue is that accesses to the array are not bound-checked.\nThese are not the only drawbacks of C-style arrays, but are bad enough already to justify getting rid of them.\n\nThe modern C++ way is to use `std::array`s:\n\n```C++\nstd::array<somestruct, 12> buffer;\nauto bufferSize = buffer.size();\nauto& firstElement = buffer.at(0);\n```\n\n### `alloca`\n\nThe use of `alloca()` is forbidden in the code base because it is too easy to smash the stack.\n\n## Resource Acquisition Is Initialization (RAII)\n\nResource acquisition is initialization ([RAII](https://en.cppreference.com/w/cpp/language/raii)) is one of the fundamental concepts in C++.\nResources are allocated during the construction of an object and destroyed when the object is itself destructed.\nIt means that if an object is correctly designed, the resources associated with it cannot survive its lifetime. In other words, the resources associated with a correctly designed object are owned by the object and cannot outlive it.\nSince stack-allocated objects, like local variables in a function, are automatically destroyed when a function exits, be it by reaching the last line, calling return or throwing an exception, it makes it possible to ensure that resources are always properly destroyed by wrapping them in an object.\n\nWe describe the use of smart pointers, containers and other wrappers for that purpose below, but first a few words of caution.\nResources stored in a object are only tied to this object if the constructor executes fully and completes properly.\nIf an exception is raised in the constructor's body, the object is not created and therefore the destructor will not be called.\nThis means that if the object has non-object members holding resources, like raw file descriptors or raw C-style pointers, they need to be explicitly released before raising the exception, otherwise they are lost or leaked.\n\n```C++\nclass BadFileDescriptorWrapper\n{\n  BadFileDescriptorWrapper()\n  {\n    d_fd = open(...);\n    if (something) {\n      throw std::runtime_error(...); // WRONG, DO NOT DO THIS!\n    }\n    ...\n  }\n\n  ~BadFileDescriptorWrapper()\n  {\n    if (d_fd > 0) {\n      close(d_fd);\n      d_fd = -1;\n    }\n  }\n\n  int getHandle() const\n  {\n    return d_fd;\n  }\n\nprivate:\n  int d_fd{-1};\n};\n```\n\nThe use of smart pointers can be a solution to most resource leakage problems, but otherwise the only way is to be careful about exceptions in constructors:\n\n```C++\nGoodFileDescriptorWrapper()\n{\n  d_fd = open(...);\n  if (something) {\n    close(d_fd);\n    d_fd = -1;\n    throw std::runtime_error(...);\n  }\n  ...\n}\n```\n\n## Smart Pointers\n\nThere is almost no good reason to not use a smart pointer when doing dynamic memory allocation.\nSmart pointers will keep track of whether the dynamically allocated object is still used, and destroy it when the last user goes away.\n\nUsing raw pointers quickly results in security issues, ranging from memory leaks to arbitrary code execution.\nExamples of such issues can be found in the following PowerDNS security advisories:\n\n* [2017-07: Memory leak in DNSSEC parsing](https://docs.powerdns.com/recursor/security-advisories/powerdns-advisory-2017-07.html)\n* [2018-04: Crafted answer can cause a denial of service](https://docs.powerdns.com/recursor/security-advisories/powerdns-advisory-2018-04.html)\n\nMost allocations should be wrapped in a `std::unique_ptr`, using `make_unique`.\nThere can only be one owner at any given time, as opposed to shared pointers, but the ownership can be passed along using `std::move()` if needed.\n\nIf the dynamically allocated object needs to be referenced in several places, the use of a `std::shared_ptr` is advised instead, via `std::make_shared`.\n\nThe use of `make_*` methods has three advantages:\n\n* They result in a single allocation for `shared_ptr`s, instead of two otherwise ;\n* They avoid duplicating the type name ;\n* They prevent a possible issue if an exception is raised with temporaries.\n\nThey also make is easier to spot raw pointers by searching or `grep`ping for \"new\" and \"delete\" throughout the code :)\n\nPlease note, however, that while unique pointers are as cheap as raw pointers, shared pointers are much more expensive.\nThat is because they need to use atomic operations to update their internal counters, so making a copy of a shared pointer is expensive.\nPassing one by reference is cheap, however.\n\n### Shared Pointers\n\nAn important thing to be aware of with shared pointers is that making a new copy or releasing a shared pointer, thus updating its internal reference counter, is atomic and therefore thread-safe.\nAltering the content of the object pointed to is not, though, and is subject to the usual locking methods.\nThe often misunderstood part is that updating the target of the shared pointer is not thread-safe.\nBasically, you can copy the shared pointer from multiple threads at once, and then each thread can assign a new target to its own copy safely, like this:\n\n```C++\nauto ptr = std::make_shared<int>(4);\nfor (auto idx = 0; idx < 10 ; idx++){\n  std::thread([ptr]{ auto copy = ptr; }).detach();   // ok, only mutates the control block\n}\n```\n\nBut there is a race if one thread updates the exact same smart pointer that another thread is trying to read:\n\n```c++\nauto ptr = std::make_shared<int>(4);\n\nstd::thread threadA([&ptr]{\n  ptr = std::make_shared<int>(10);\n});\n\nstd::thread threadB([&ptr]{\n  ptr = std::make_shared<int>(20);\n});\n```\n\nThat unfortunately means that we still need some locking with shared pointers.\nC++11 defines atomic compare/exchange operations for `std::shared_ptr`, but they are implemented in `libstdc++` by global mutexes and are therefore not lock-free.\n\n### Wrapping C Pointers\n\nSmart pointers can also be used to wrap C-pointers, such as `FILE*` pointers:\n\n```c++\nauto fp = std::unique_ptr<FILE, decltype(&std::fclose)>(fopen(certificateFile.c_str(), \"r\"), std::fclose);\n```\n\nIt also works with types from external C libraries, like OpenSSL:\n\n```c++\nauto cert = std::unique_ptr<X509, decltype(&X509_free)>(PEM_read_X509_AUX(fp.get(), nullptr, nullptr, nullptr), X509_free);\n```\n\nUnfortunately there are a few cases where smart pointers cannot be used.\nIn the PowerDNS products, these cases have been mostly reduced to a few select classes, like the `pdns::channel` ones, that are used to pass pointers to a different thread by writing them to a pipe, as is done for example by the query distributors of the auth and the rec.\n\nWhen smart pointers cannot be used, special care should be taken to:\n\n* Make sure that every exit point frees the allocated memory (early return, goto, exceptions..) ;\n* Set the pointer to `nullptr` right after the deallocation, so we can avoid use-after-free vulnerabilities and crash the program instead ;\n* Do not mix `malloc` with `delete`, or `new` with `free` (destructors are, at the very least, not run in such cases) ;\n* Do not mix array allocations (`new[]`) with a non-array `delete` (vs `delete[]`).\n\n## Pointer Arithmetic\n\nIt is very common to use pointer arithmetic to calculate a position in a buffer, or to test whether a given offset is outside of a given buffer.\nUnfortunately it is quite easy to trigger undefined behaviour when doing so because the C++ standard does not allow pointer arithmetic pointing inside an object, except for arrays where it is also permitted to point one element past the end.\nStill, that undefined behaviour is mostly harmless, but it might lead to real issue on some platforms.\n\nOne such example occurred in dnsdist: [2017-01: Crafted backend responses can cause a denial of service](https://dnsdist.org/security-advisories/powerdns-advisory-for-dnsdist-2017-01.html)\n\nIn that case, a pointer was set to the start of a buffer plus a given length, to see whether the result would go past another pointer that was set to the end of the buffer.\nUnfortunately, if the start of the buffer is at a very high virtual address, the result of the addition might overflow and wrap around, causing the check to become true and leading to either a crash or the reading of unrelated memory.\nWhile very unlikely on a 64 bits platform, it could happen on 32 bits platform.\n\nThis kind of issue is best avoided by the use of containers to avoid the need for pointer arithmetic, or by being very careful to only add checked offsets to a pointer.\n\n### Containers\n\nThe use of containers like `vector`, `map` or `set` has several advantages in terms of security:\n\n* Memory allocations are handled by the container itself ;\n* It prevents a disconnect between the actual size and the variable tracking that size ;\n* It provides safe (and fast) operations like comparisons, iterators, etc..\n\nOne issue that could have been prevented by the use of a container can be found in the following advisory: [2018-09: Crafted query can cause a denial of service](https://docs.powerdns.com/recursor/security-advisories/powerdns-advisory-2018-09.html)\n\nThe use of a container and its corresponding `at()` operator would have prevented an out-of-bounds read since calling `at()` on an invalid offset results in an exception being raised.\nThe cost of using `at()` is negligible for most use cases, and can be avoided by using the `[]` operator in the rare case when the cost cannot be afforded.\nNote that several Linux distributions now build with `-Wp,-D_GLIBCXX_ASSERTIONS` enabled by default, which turns on cheap range checks for C++ arrays, vectors, and strings.\n\nRegarding performance, it is advised to [`reserve()`](https://en.cppreference.com/w/cpp/container/vector/reserve) the needed size in advance when a rough estimate is known to avoid reallocations and copies. It usually triggers the allocation of enough memory to hold the requested number of items but does not increase the size of the container as reported by `size()`.\nCalling [`resize()`](https://en.cppreference.com/w/cpp/container/vector/resize) in advance is not advised, though, as it makes it harder to exactly know what is in the container in case of early returns or exceptions.\n\nIn C++11, move operators make it possible to cheaply get the contents of a container into a different variable if needed.\n\nThe need to pass a subset of a container without copying it often leads to passing a pointer to an array of chars along with a size.\nIntroduced in C++14, `views` provide a nice way to borrow the content of a container to pass it to a function, without any copying or dynamic memory allocation. The basic `string_view` class provides that feature for a container of chars.\n\n# Threads and Concurrency\n\nAll of our products use threading to be able to take advantage of the increasing number of cores on modern CPUs.\nThis inevitably leads to the question of how to synchronise data accesses between threads.\nMost objects, like containers, cannot be accessed from more than one thread at once.\nEven `const` methods on containers might not be thread-safe.\nFor example getting the `size()` of a container might not be thread-safe if a different thread might be writing to the container.\nSome functions might also not be thread-safe, for example if they have a static non-const variable.\n\nWe currently use three solutions, depending on the use-case.\nThe first one is used when we only need to share some kind of counter or gauge, and involves the use of `std::atomic` which allows atomic operations to be performed from different threads without locking. More on that later.\nThe second one is the \"share nothing\" approach, where each thread has its own data (using `thread_local`, for example), avoiding the need for data synchronization.\nWhen a thread needs to communicate with another one, it might use a `pdns::channel` to pass a pointer to that second thread.\nThat works quite well but sometimes sharing data is much more efficient than the alternative.\n\nFor cases where sharing the data between threads is needed, we use the classic locking approach, using either a simple mutex or read-write lock, depending on the use case.\n\n## Locks\n\nLocks allow a thread of execution to ensure that no other thread will try to access the code path or data they protect at the same time.\n\nThere are a few pitfalls to avoid when using locks:\n\n* Failing to release a lock, which can be avoided by using wrappers like `std::lock_guard`, `std::unique_lock` and our own wrappers: `LockGuarded` and `SharedLockGuarded` in `lock.hh` ;\n* High contention, where threads are blocked for a long time while waiting to acquire a lock.\n  This can be solved by carefully examining the portion of code that really needs to hold the lock, making the critical path shorter or faster, or by using sharding which basically divides the data protected by the lock into several pieces, each of them protected by its own lock ;\n* Dead-locks, which occur for example when thread 1 acquires lock 1 and wants to acquire lock 2, which is already acquired by thread 2, itself currently waiting to acquire lock 1.\n  This can be avoided by a better design of the locking mechanism, and assuring that locks are always acquired in the same order if more than one lock is required. Abstracting multiple locks away into a class with a small state machine that locks and unlocks both in the correct sequence and checks that they are always in a valid in-tandem state may prove to be a less error-prone approach while also improving readability and ergonomics.\n\nThere are several types of locks:\n\n* Spinlocks are very fast but are busy-waiting, meaning that they do not pause, but instead repetitively try to get hold of the lock, using 100% of one core, doing so unless preempted by the OS ;\n  So they are only suited for locks that are almost never contented ;\n* A mutex is a very simple lock.\n  In most implementations it is a very fast lock, implemented in user-space on recent Linux kernels and glibc ;\n* A read-write lock (RW-lock) allows several threads to acquire it in read mode, but only one thread can acquire it in write mode.\n  This is suited when most accesses are read-only and writes are rare and do not take too long.\n  Otherwise, a mutex might actually be faster.\n\nOne quick word about condition variables, that allow a thread to notify one or more threads waiting for a condition to happen.\nA thread should acquire a mutex using a `std::unique_lock` and call the `wait()` method of the condition variable.\nThis is a very useful mechanism but one must be careful about two things:\n\n* The producer thread can either wake only one thread or all threads waiting on the condition variable.\n  Waking up several threads if only one has something to do (known as a \"thundering herd\") is bad practice, but there are some cases where it makes sense ;\n* A consumer thread might be waken up spuriously, which can be avoided by passing a predicate (which can be as simple as a small lambda function) to `wait()`.\n\nOur wrappers, `LockGuarded`, `SharedLockGuarded` in `lock.hh`, should always be preferred over other solutions.\nThey provide a way to wrap any data structure as protected by a lock (mutex or shared mutex), while making it immediately clear which data is protected by that lock, and preventing any access to the data without holding the lock.\n\nFor example, to protect a set of integers with a simple mutex:\n\n```c++\nLockGuarded<std::set<int>> d_data;\n```\n\nor with a shared mutex instead:\n\n```c+++\nSharedLockGuarded<std::set<int>> d_data;\n```\n\nThen the only way to access the data is to call the `lock()`, `read_only_lock()` or `try_lock()` methods for the simple case, or the `read_lock()`, `write_lock()`, `try_read_lock()` or `try_write_lock()` for the shared one.\nDoing so will return a \"holder\" object, which provides access to the protected data, checking that the lock has really been acquired if needed (`try_` cases).\nThe data might be read-only if `read_lock()`, `try_read_lock()` or `read_only_lock()` was called.\nAccess is provided by dereferencing the holder object via `*` or `->`, allowing a quick-access syntax:\n\n```c+++\nreturn d_data.lock()->size();\n```\n\nOr when the lock needs to be kept for a bit longer:\n\n```c++\n{\n  auto data = d_data.lock();\n  data->clear();\n  data->insert(42);\n}\n```\n\n## Atomics\n\n`std::atomic` provides a nice way to share a counter or gauge between threads without the need for locking.\nThis is done by implementing operations like reading, increasing, decreasing or writing a value in an atomic way, using memory barriers, making sure that the value cannot be updated from a different core during the operation.\nThe default mode uses a sequentially consistent ordering memory model, which is quite expensive since it requires a full memory fence on all multi-core systems.\nA relaxed model can be used for specific operations, but the default model has the advantage of being safe in all situations.\n\n## Per-Thread Counters\n\nFor generic per-thread counters, we have a class in `tcounters.hh` that should provide better performance by allowing each thread to independently update its own counter, the costly operation only happens when the counter needs to be read by one thread gathering metrics from all threads.\n\n# Dealing with Untrusted Data\n\nAs a rule of thumb, any data received from outside the process should be considered untrusted.\nThis includes data received on a socket, loaded from a file, retrieved from a database, etc.\nData received from an internal pipe might be excluded from that rule.\n\nUntrusted data should never be trusted to adhere to the expected format or specifications, and a strict checking of boundaries should be performed.\nIt means for example that, after reading the length for a field inside the data, whether that length does not exceed the total length of the data should be checked.\nIn the same way, if we expect a numerical type we should check whether it matches what we expect and understand.\n\nAnything unexpected should stop the processing and lead to the discarding of the complete data set.\nIf a smaller data set can be safely discarded, and it is more important to load an incomplete set than to assure the integrity of the complete data set, only the faulty data can be discarded instead.\n\n## Alignment Issues\n\nWhen structured, binary data is received from the network or read from a file, it might be tempting to map it to an existing structure directly to make the parsing easier.\nBut one must be careful about alignment issues on some architectures:\n\n```c++\nstruct my_struct {\n  uint32_t foo;\n  uint32_t bar;\n};\n```\n\nIt might be tempting to directly cast the received data:\n\n```c++\nvoid func(char* data, size_t offset, size_t length) {\n  // bounds check left out!\n  const struct my_struct* tmp = reinterpret_cast<const struct my_struct*>(data + offset);\n  ...\n}\n```\n\nUnfortunately this leads to undefined behaviour because the offset might not be aligned with the alignment requirement of the struct.\nOne solution is to do a copy:\n\n```c++\nvoid func(char* data, size_t offset, size_t length) {\n  // bounds check left out!\n  struct my_struct tmp;\n  memcpy(&tmp, data + offset, sizeof(tmp));\n  /* ... */\n}\n```\n\n## Signed vs. Unsigned\n\nSigned integers might overflow, and the resulting value is unpredictable, as this overflow is undefined behaviour.\nThat means that this code results in an unpredictable value:\n\n```c++\nint8_t a = std::numeric_limits<int8_t>::max();\na++;\n```\n\nOne such example led to [2006-01: Malformed TCP queries can lead to a buffer overflow which might be exploitable](https://docs.powerdns.com/recursor/security-advisories/powerdns-advisory-2006-01.html).\n\nIt would be necessary to check that the value cannot overflow first.\nAnother possibility would be to instruct the compiler to treat signed overflow as it does for unsigned values, by wrapping.\nThis can be done with `-fwrapv` with g++.\n\nAn operation on an unsigned integer will never result in an overflow, because the value will simply wrap around.\nThis might still result in an unexpected value, possibly bypassing a critical check:\n\n```c++\nvoid parse_untrusted_data(uint8_t* data, uint16_t length)\n{\n  /* parse a record, first two bytes are the size of the record data, second two bytes are the type of the record */\n  if (length < 4) {\n    return;\n  }\n\n  /* read the first two bytes which hold the length of the next record */\n  uint16_t recordLen = data[0] * 256 + data[1];\n\n  /* let's assume that recordLen is equal to 65535 */\n  uint16_t totalRecordLen = /* size of the type */ sizeof(uint16_t) + recordLen; // <-- this results in a wrapped value of 65535 + 2 = 65537 = 1\n  if (totalRecordLen > length) {\n    return;\n  }\n\n  /* ... */\n}\n```\n\nA valid version to prevent the overflow:\n\n```c++\nvoid parse_untrusted_data(uint8_t* data, uint16_t length)\n{\n  /* parse a record, first two bytes are the size of the record data, second two bytes are the type of the record */\n  if (length < 4) {\n    return;\n  }\n\n  /* read the first two bytes which hold the length of the next record */\n  uint16_t recordLen = data[0] * 256 + data[1];\n  if (recordLen > length || (length - recordLen) < sizeof(uint16_t)) {\n    return;\n  }\n\n  /* ... */\n}\n```\n\nConverting from unsigned to signed will lose the high order bytes, and should be avoided, or the value should be checked beforehand:\n\n```c++\nuint64_t u = std::numeric_limits<uint64_t>::max();\nint64_t s = static_cast<int64_t>(u); /* Wrong, and the cast eliminates any warning */\nif (u <= std::numeric_limit<int64_t>::max()) {\n  int64_t s = static_cast<int64_t>(u); /* OK */\n}\n```\n\nThe `pdns::checked_conv()` function can be used, ensuring that the conversion can safely be done and raising an exception otherwise.\n\n`-Wsign-conversion` can be used to warn about dangerous conversions (disabled by default in g++, and note that a cast disables the warning).\n\n## Fuzzing\n\nFuzzing is a very useful way to test a piece of code that parses untrusted data.\nEfficient fuzzers are often doing coverage-based fuzzing, where the code that they test has been compiled in a special way to allow the fuzzer to detect which branches are executed and which are not, so that the fuzzer can see the effect of mutating specific bytes of the input on the code path.\n\nPowerDNS has a few fuzzing targets that can be used with libFuzzer or AFL in the `pdns/` directory, and are built when `--enable-fuzzing-target` is passed to `configure`.\nMore information can be found in the [fuzzing/README.md](https://github.com/PowerDNS/pdns/blob/master/fuzzing/README.md) file.\nThe existing fuzzing targets are run on the OSS-Fuzz infrastructure for a short time every time a pull request is opened, and for a longer time on the HEAD of the repository.\n\n# Other Potential Issues\n\n## Time-Of-Check to Time-Of-Use (TOCTOU)\n\nThe time-of-check to time-of-use vulnerability is a very easy mistake to make when dealing with files or directories.\nThe gist of it is that there is a small race condition between the time where a program might check the ownership, permissions or even existence of a file and the time it will actually do something with it.\nThis time might be enough to allow an attacker to create a symbolic link to a critical file at the place of that exact file, for example.\nSince the program has enough rights to edit this file, this might allow an attacker to trick the program into writing into a completely different file.\n\nThis is hard to avoid in all cases, but some mitigations do help:\n\n* Opening a file first (handling errors if that fails) then getting the needed metadata via the file descriptor instead of the path (`fstat`, `fchmod`, `fchown`) ;\n* Opening with the `O_NOFOLLOW` flag set, so that the operation will fail if the target exists and is a symbolic link ;\n* Always creating temporary files via the `mkstemp()` function, which guarantees that the file did not exist before and has been created with the right permissions ;\n* Using operations that are guaranteed to be atomic, like renaming a file on the same filesystem (for example in the same directory).\n\n## `errno`\n\n`errno` is only guaranteed to be set on failing system calls and not set on succeeding system calls.\nA library call may clobber `errno`, even when it succeeds.\nSafe practice is:\n\n* Only look at `errno` on failing system calls or when a library function is documented to set `errno` ;\n* Immediately save the value of `errno` in a local variable after a system call for later decision making.\n\n## Secrets\n\nTry very hard not to load sensitive information into memory.\nAnd of course do not write this information to logs or to disk!\n\nIf you have to:\n\n* Use an object that can't be copied, by deleting the copy constructors and assignments operators,\n* Try to lock the memory so it cannot be swapped out to disk, or included in a core dump, via `sodium_malloc()` or `sodium_mlock()`, for example ;\n* Wipe the content before releasing the memory, so it will not linger around.\n  Do note that `memset()` is very often optimized out by the compiler, so function like `sodium_munlock()`, `explicit_bzero()` or `explicit_memset()` should be used instead.\n\n### Constant-Time Comparison\n\nDon't compare secret against data using a naive string comparison, as the timing of the operation will leak information about the content of the secret.\nIdeally, a constant-time comparison should be used instead (see `constantTimeStringEquals()` in the PowerDNS code base) but it is not always easy to achieve.\nOne option might be to compute an HMAC of the secret using a key that was randomly generated at startup, and compare it against a HMAC of the supplied data computed with the same key.\n\n## Virtual Destructors\n\nAny class that is expected to be sub-classed should provide a virtual destructor.\nNot doing so will prevent the destructor of any derived class from being called if the object is held as the base type:\n\n```c++\nclass Parent\n{\n  virtual void doVirtualCall();\n};\n\nclass Child: public Parent\n{\n  Child()\n  {\n    d_fd = fopen(..);\n  }\n\n  ~Child()\n  {\n    if (d_fd) {\n      fclose(d_fd);\n      f_fd = nullptr;\n    }\n  }\n\n  void doVirtualCall() override;\n};\n\nstd::vector<Parent> myObjects;\nmyObjects.push_back(Child());\n```\n\nNote that defining a destructor will prevent the automatic creation of move operators for that class, since they are generated only if these conditions are met:\n\n* No copy operators are declared ;\n* No move operators are declared ;\n* No destructor is declared.\n\nIf the parent class holds data that is costly to copy, it might make sense to declare the move operators explicitly:\n\n```c++\nclass Parent\n{\n  Parent(Parent&&) = default;\n  Parent& operator=(Parent&&) = default;\n\n  virtual ~Parent()\n  {\n  }\n\n  virtual void doVirtualCall();\n\nprivate:\n  FILE* d_fd{nullptr};\n};\n```\n\nNote that declaring the move operators disables the copy operators, so if they are still needed:\n\n```c++\nclass Parent\n{\n  Parent(Parent&&) = default;\n  Parent& operator=(Parent&&) = default;\n\n  Parent(const Parent&) = default;\n  Parent& operator=(const Parent&) = default;\n\n  virtual ~Parent()\n  {\n  }\n\n  virtual void doVirtualCall();\n};\n```\n\nOn a related topic, virtual methods should not be called from constructors or destructors.\nWhile this is allowed under certain restrictions, it is very hard to know exactly which method (base or derived) will be called, and whether all sub-objects contained in the class would have been correctly constructed at that point.\n\n## Hash Collisions\n\nHashes are a very useful tool, used in `unordered_map` and `unordered_set` among others.\nThey are also used in our caches.\nAn important caveat that developers need to be aware of regarding hashes are that the probability of a collision is often a lot higher than expected.\nThis is well-known as the birthday paradox, the fact that the probability of having two entries colliding is a lot higher than the probability of finding a collision for a specific entry.\nThis means that it is important to verify that the entries are actually identical, and just not that they hash to the same value.\n\nThis is especially important when hashing attacker-controlled values, as they can be specially crafted to trigger collisions to cause:\n\n* Cache pollution (see [2018-06: Packet cache pollution via crafted query](https://docs.powerdns.com/recursor/security-advisories/powerdns-advisory-2018-06.html)) ;\n* Denial of service via hash table flooding (in a map, all entries that hash to the same value are often placed into a linked-list, making it possible to cause a linear scan of entries by making all of them hash to that same value).\n\nThe first issue can be prevented by comparing the entries and not just the value they hash to.\nThe second one can be avoided by using some sort of secret when computing the hash so that the result cannot be guessed by the attacker.\nThat can be achieved by using an unpredictable seed for certain hash algorithms, or a secret for some other like [`SipHash`](https://en.wikipedia.org/wiki/SipHash).\n\n# Readability Tips\n\nSome of these tips are actually enforced by `clang-tidy` nowadays, but it is still useful to keep them in mind.\n\n## `auto`\n\nC++11 introduced automatic type deduction, using the `auto` keyword.\nUsing automatic type deduction prevents nasty surprises if the variable is initialized from another one, or from a function, and the other type is changed to a different one.\nWithout `auto`, code might still compile but trigger a copy or worse.\n\n## Explicit Comparisons\n\n* Compare numerical values with `== 0` or `!= 0` explicitly ;\n* Compare to `nullptr`, which is easier to read.\n\n## Initialization\n\nUse braced initialization for members as often as possible:\n\n* It does forbid narrowing conversions :\n* It avoids C++'s \"[most vexing parse](https://en.wikipedia.org/wiki/Most_vexing_parse)\" which is to declare a function instead of calling the default constructor:\n\n```c++\nObject a(); // declares a function named a that returns an object\n```\n\n## `nullptr`\n\nWhen representing a pointer, using `nullptr` makes it immediately obvious that we are dealing with a pointer, as opposed to the use of `0`.\nIt also cannot be silently taken as an integer, which can happens with `0` but also with `NULL`.\n\n## `const`-ness\n\n* Mark parameters and variables that should not be modified as `const`.\n  This is especially important for references and pointers that come from outside the function, but it also makes sense to do it for local variables or parameters passed by value because it might help detect a logic error later ;\n* Mark `const` methods as such (and make them thread-safe) ;\n* Prefer using `at()` on containers so that no insertion can take place by mistake, and to get bounds checking.\n\n## Unnamed Namespace\n\nFunctions that are only used inside a single file should be put into an unnamed namespace, so that:\n\n* The compiler knows that these functions will not be called from a different compilation unit and thus that no symbol needs to be generated, making it more likely for the function to be inlined ;\n* The reader knows that this function is only used there and can be altered without causing an issue somewhere else.\n\n```c++\nnamespace {\n\nbool thisFunctionIsOnlyUsableFromThisTranslationUnit()\n{\n}\n\n}\n```\n\nThese functions used to be marked `static` in the past, so you might still encounter this form in the code base instead: \n\n```c++\nstatic bool thisOneAsWell()\n{\n}\n```\n\nbut the unnamed namespace form is now preferred.\n\nFor the same reason, global variables that are only accessed from a single file should be put into an unnamed namespace, or marked static as well.\n\n## Variables\n\nTry to declare variables in the innermost scope possible and avoid uninitialized variables as much as possible.\nDeclare and initialize variables when the values needed to initialize them are available.\n\n## Exceptions\n\nExceptions should be reserved for events that interrupt the normal processing flow (corrupted data, timeouts, ...), and should not be triggered in the general case.\n\nFor example, it would be better for a function checking a password or an API key to return a boolean or a `enum` indicating whether the check was successful than to throw an exception if the credentials are not valid, because the return value makes it clear that the check can and will fail, while otherwise the caller might not be aware that an exception can be raised.\n\nThis does not mean that we should be afraid of using exceptions, though, but we need to keep in mind that they involve hidden complexity for the programmer that needs to keep a mental map of all the possible exceptions that can be raised.\n\nAs far as performance goes the cost of an exception that is not thrown is usually very small, thanks to the zero-cost exception model. It might still force the compiler to refrain from some optimizations, so it might make sense to avoid them in some very performance-sensitive, narrow code paths, and to mark these paths as `noexcept` whenever possible.\n\n### Custom Exceptions\n\nWhen exceptions are used, the ones defined by the standards should be used whenever possible, as they already cover a lot of use cases.\n\nIf custom exceptions are necessary, to be able to catch them explicitly, they should derive from `std::exception`, directly or indirectly, so that they can be caught in a more generic way to prevent the program from terminating.\n\nFor example, the main connection handling function of a server can catch `std::exception` and terminate the current connection if an uncaught exception bubbles up, without having to worry about all the possible cases.\n\n### Catching Exceptions\n\nCatching exceptions should always be done by `const`-reference:\n\n```c+++\ntry {\n}\ncatch (const std::exception& e) {\n  std::cerr << e.what() <<endl;\n}\n```\n\nNot using a reference would result in the exception object being sliced, meaning that a custom exception derived from `std::exception` would not see its overriding `what()` method called but the one from the base class instead.\n\n## Casts\n\nC-style casts should be avoided, as the compiler does almost no checking on the validity of the operation.\nThey are also very hard to spot in a code.\nC++-style casts can easily be spotted in a code, which makes it easy to review them.\n\n* `const_cast` can be used to remove the `const` qualifier on a variable.\n  It's usually a bad sign, but is sometimes needed to call a function that will not modify the variable but lacks the `const` qualifier ;\n* `dynamic_cast` can be used to cast a pointer to a derived class or to a base class, while checking that the operation is valid.\n  If the cast object is not valid for the intended type, a `nullptr` value will be returned (or a `bad_cast` exception for references) so the result of the operation should be checked!\n  Note that the Run-Time Type Information (RTTI) check needed to verify that the cast object is valid has a non-negligible CPU cost.\n  Not checking the return value might lead to remote denial of service by `nullptr`-dereference, as happened with the issue described in this advisory: [2017-08: Crafted CNAME answer can cause a denial of service](https://docs.powerdns.com/recursor/security-advisories/powerdns-advisory-2017-08.html) ;\n* `static_cast` can perform downcast in place of `dynamic_cast`, with none of the cost associated to the check, but can only be done if the cast is known to be valid.\n  It can also do implicit conversion between types (from `ssize_t` to `size_t`, **after** checking that the value is greater or equal to zero) ;\n* `reinterpret_cast` is quite dangerous, since it can be used to turn a type into a different one.\n  It cannot be be used to remove a `const` qualifier.\n  When used to reinterpret the content of a buffer it can quickly lead to alignment issues, as described in the [Alignment Issues] section.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.7099609375,
          "content": "Contributing to PowerDNS\n------------------------\nThank you for you interest to contribute to the PowerDNS project. This document\nwill explain some of the things you need to keep in mind when contributing to\nease the workflow of this.\n\n# Issue Tracker\nWhen you post an issue or feature request to the\n[issue tracker](https://github.com/PowerDNS/pdns/issues), make sure this hasn't\nbeen reported before. If there is an open issue, add extra information on this\nissue or show that you have the same issue/want this feature by adding a `:+1:`.\n\nIf there is no similar issue, feature request or you're not sure, open a new\nissue.\n\n## Filing a Feature Request\nWhen filing a feature request, please use the Feature request template provided.\n\nPlease be as elaborate as possible when describing the feature you need. Provide\nat least the following information (if they are relevant):\n\n* Use case (what is the 'masterplan' that requires this feature)\n* Description of what the feature should do\n\n## Filing an Issue or Bug\n**Note:** if you're planning to file a security bug, look at our\n[Security Policy](https://github.com/PowerDNS/pdns/security/policy) first.\n\nWhen filing an issue or bug report, make the title of the issue a very short\nsummary (e.g. \"Recursor crash when some-setting is set to 'crash'\"). In the\ncontent of the issue, be as detailed as possible. Supply at least the following\ninformation:\n\n* PowerDNS version\n* Where you got the software from (e.g. distribution, compiled yourself)\n* Operating System and version\n* Steps to reproduce: How can we reproduce the issue\n* Expected behavior: what did you expect what would happen?\n* Observed behavior: what actually happened when following the steps?\n* Relevant logs: Please use code blocks (\\`\\`\\`) to format console output, logs, and code as it's very hard to read otherwise.\n\nWe provide convenient templates that make it easy to not forget any of these steps.\n\nIf you have already looked deeper into the problem, provide what you found as\nwell.\n\n# Filing a Pull Request\nCode contributions are sent as a pull request on [GitHub](https://github.com/PowerDNS/pdns/pulls).\nBy submitting a Pull Request you agree to your code becoming GPLv2 licensed.\n\n## Pull Request Guidelines\nA pull request, at the least, should have:\n\n* A clear and concise title (not e.g. 'Issue #1234')\n* A description of the patch (what issue does it solve or what feature does it add)\n* Documentation for the feature or when current behaviour changes\n* Regression and/or unit tests\n\nAnd must:\n* Be filed against the master branch before any release branch\n* Pass all tests in our CI (currently GitHub Actions and CircleCI)\n\nInformation on the tests can be found in the repository at\n[/regression-tests/README.md](https://github.com/PowerDNS/pdns/blob/master/regression-tests/README.md)\n,\n[/regression-tests.recursor/README.md](https://github.com/PowerDNS/pdns/blob/master/regression-tests.recursor/README.md),\nplus various other directories with `regression-tests.*` names.\n\n## Commit Guidelines\n* Tell why the change does what it does, not how it does it.\n* The first line should be short (preferably less than 50 characters)\n* The rest of the commit body should be wrapped at 72 characters (see [this](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) for more info)\n* If this commit fixes an issue, put \"Closes #XXXX\" in the message\n* Do not put whitespace fixes/cleanup and functionality changes in the same commit\n\n# Formatting and Coding Guidelines\n\n## `clang-format`\n\nWe have `clang-format` in place, but not for all files yet. We are working towards a fully formatted codebase in an incremental fashion.\n\nIf you're adding new code, adhering to the formatting configuration available in `.clang-format` is appreciated. If you are touching code that is not yet formatted, it would also be very appreciated to format it in a separate commit first.\n\nAny formatting breakage in already formatted files will be caught by the CI. To format all files that are supposed to be formatted, run `make format-code` in the root of the tree.\n\n## Formatting guidelines\n\n* Don't have end-of-line whitespace.\n* Use spaces instead of tabs.\n\n## Coding guidelines\n\nThe coding guidelines can be found in the repository at\n[CODING_GUIDELINES.md](https://github.com/PowerDNS/pdns/blob/master/CODING_GUIDELINES.md)\n\n## Code Checkers\n\n### `clang-tidy`\n\n`clang-tidy` requires a [compilation database](https://clang.llvm.org/docs/JSONCompilationDatabase.html) to work.\nSee the [\"Compilation Database\" section of the DEVELOPMENT document](DEVELOPMENT.md#compilation-database) on how to generate a compilation database.\n\nOnce the compilation database has been generated, you can pick one of the two available `clang-tidy` configuration files to run checks on source files.\nPicking a configuration file is a matter of creating a symbolic link called `.clang-tidy` to said file in the topmost level of the sub-project you're working on (or the toplevel repository directory if you're working on PowerDNS auth).\n\nWe provide two configuration files for `clang-tidy`:\n\n1. A minimal [.clang-tidy.bugs](.clang-tidy.bugs) which only enables a few checks for common bugs.\n   This configuration can be enabled using `ln -sf .clang-tidy.bugs .clang-tidy`.\n\n2. A more complete [.clang-tidy.full](.clang-tidy.full) which enables almost all available checks.\n   This configuration can be enabled using `ln -sf .clang-tidy.full .clang-tidy` and is recommended for all new code.\n\n### `clang-tidy` and CI\n\nWe run `clang-tidy` using the `.clang-tidy.full` configuration as part of our CI. `clang-tidy` warnings will show up on a pull request if any are introduced.\n\nHowever, it may happen that existing code could produce warnings and can show up too due to being part of the pull request. In such a case there are two options:\n\n1. Fix the warnings in a separate commit.\n2. If fixing the warning would be too much trouble at this point in time, disabling the specific warning using the `// NOLINTNEXTLINE` or `// NOLINT` directives can be acceptable given the following is adhered to:\n\nAny added `// NOLINTNEXTLINE` or `// NOLINT` directive or others need to have a GitHub issue title, issue number and link next to them in the description along with the name or GitHub nickname of the person that wrote it. The GitHub issue must have an assignee and an accurate description of what needs to be done. As an example:\n\n`// NOLINTNEXTLINE(<warning-name>) <issue-number> <issue-link> <person-name>: <issue-title> + a short comment if needed.`\n\nIf the warning cannot be avoided in any way, a good explanation is needed. As an example:\n\n`// NOLINTNEXTLINE(*-cast): Using the OpenSSL C APIs.`\n\n### Additional checkers\n\nEven though we don't automatically run any of the code checkers listed below as part of our CI, it might make sense to run them manually, not only on newly added code, but to also improve existing code.\n\n* `clang`'s static analyzer, sometimes also referred as `scan-build`\n* `cppcheck`\n\n# Development Environment\n\nInformation about setting up a development environment using a language server like [`clangd`](https://clangd.llvm.org/) or [`ccls`](https://github.com/MaskRay/ccls) can be found in [DEVELOPMENT.md](DEVELOPMENT.md).\n\n# Debugging\n\n## Using GDB\n\nTo get a good debugging experience with `gdb`, it is recommended to build PowerDNS using the following flags:\n\n* `CC` and `CXX` set to `gcc` and `g++`, respectively.\n* `CFLAGS` and `CXXFLAGS` set to `-ggdb -Og -fno-inline`.\n\nThese variables need to be set during the `configure` step, as follows:\n\n```sh\nexport CC=clang CXX=clang++\nexport CFLAGS=\"-ggdb -Og -fno-inline\" CXXFLAGS=\"-ggdb -Og -fno-inline\"\n./configure --with-modules=gsqlite3 --disable-lua-records --enable-unit-tests\nmake -j 8\n```\n\n[GDB Dashboard](https://github.com/cyrus-and/gdb-dashboard) can be used to vastly improve the GDB debugging experience.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.6669921875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License."
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 12.32421875,
          "content": "PowerDNS Development Environment\n--------------------------------\n\nThank you for you interest to contribute to the PowerDNS project.\nThis document will explain one way to set up a development environment based on the language server protocol (LSP) when working on PowerDNS.\n\n# Introduction\n\nThe environment will consist of setting up the [`clangd`](https://clangd.llvm.org/) C/C++ language server to enable fancy IDE features for development.\n[`ccls`](https://github.com/MaskRay/ccls) can also be used in place of `clangd`.\n\nFurthermore, additional [on-the-fly checks using `clang-tidy`](#on-the-fly-clang-tidy) can be easily enabled.\n\nOn some systems, `clangd` and `clang-tidy` are available as packages separate from the `clang` package.\nEnsure that you have all three binaries available and running on your system.\n\n# Compilation Database\n\nFor projects with non-trivial build systems, like PowerDNS, `clangd` requires a [compilation database](https://clang.llvm.org/docs/JSONCompilationDatabase.html).\n\nSince PowerDNS' autotools-based build system does not have native support for generating such a database, an external tool like [Bear (the Build EAR)](https://github.com/rizsotto/Bear) or [compiledb](https://pypi.org/project/compiledb) can be used.\n\n## Using Bear\nOnce you have `bear` installed, configure a build of your choice (either the PowerDNS `auth`, `recursor` or `dnsdist`) using `clang` and `clang++`:\n\n```sh\nmake distclean    # Ensure we rebuild all files so that bear can pick them up.\nCC=clang CXX=clang++ ./configure --with-modules=gsqlite3 --disable-lua-records\n```\n\nWe can now build PowerDNS using `bear` and `make` which produces a compilation database file named `compile_commands.json`:\n\n```sh\nbear --append -- make -j 8\n```\n\n## Using compiledb\nOnce you have `compiledb` installed, configure the build and run compiledb:\n\n```sh\nmake distclean    # Ensure we rebuild all files so that bear can pick them up.\nCC=clang CXX=clang++ ./configure ...\nmake -nwk  | /path/to/compiledb -o- > compile_commands.json\n```\n\nto generate the compilation database.\nFor the authoritative server, the configure command is run in the top level directory, while the compiledb command should be run in the `pdns` subdirectory.\n\n# Seting up the LSP client\n\nOnce the compilation database is generated, you can now move onto setting up an LSP client in your editor or IDE.\n\nNote that the process of generating the compilation database file only needs to be run when a file is added to the project or when build flags change (e.g. dependencies are added).\n\n# Editors\n\n## Emacs\n\nThis section explains how to set up [Emacs](https://www.gnu.org/software/emacs/) with [LSP Mode](https://emacs-lsp.github.io/) for C/C++ development using `clangd` which supports [on-the-fly checking](https://www.flycheck.org/en/latest/) and [auto-completion](https://company-mode.github.io/), among many other features.\n\nInstructions for an alternative, more minimal, setup using [Eglot](https://github.com/joaotavora/eglot) [are also available](#minimal-emacs).\n\nCode snippets below should be added to your Emacs init file (e.g. `~/.config/emacs/init`).\n\nWe'll start by enabling Emacs package repositories and declaring which packages we would like to have installed:\n\n```elisp\n(with-eval-after-load 'package\n (setq package-archives\n  '((\"gnu\"   . \"https://elpa.gnu.org/packages/\")\n    (\"melpa\" . \"https://melpa.org/packages/\")))\n (push 'company      package-selected-packages)\n (push 'flycheck     package-selected-packages)\n (push 'lsp-mode     package-selected-packages)\n (push 'lsp-ui       package-selected-packages)\n (push 'lsp-treemacs package-selected-packages))\n```\n\nTo avoid restarting Emacs, you can evaluate that previous s-expression by pointing at the last parenthesis and using `C-x C-e` or selecting the block and using `M-x eval-region`.\n\nOnce done, run `M-x package-refresh-contents`, then `M-x package-install-selected-packages`.\nThis should install some packages for you.\n\nNow let's set up our common programming mode, this enables the following features:\n\n* Highlighting the current line.\n* Displaying line numbers.\n* Auto-inserting indentation.\n* Auto-inserting closing parenthesis, bracket, etc...\n* Auto-completion.\n* On-the-fly code checking.\n* On-the-fly spell checking.\n* Highlighting matching parentheses, brackets, etc...\n* Auto-displaying documentation briefs in the echo area.\n\n```elisp\n(with-eval-after-load 'prog-mode\n (add-hook 'prog-mode-hook #'hl-line-mode)\n (add-hook 'prog-mode-hook #'display-line-numbers-mode)\n (add-hook 'prog-mode-hook #'electric-layout-mode)\n (add-hook 'prog-mode-hook #'electric-pair-mode)\n (add-hook 'prog-mode-hook #'company-mode)\n (add-hook 'prog-mode-hook #'flycheck-mode)\n (add-hook 'prog-mode-hook #'flyspell-prog-mode)\n (add-hook 'prog-mode-hook #'show-paren-mode)\n (add-hook 'prog-mode-hook #'eldoc-mode))\n```\n\nNow let's set up `flycheck` for on-the-fly code checking, this adds the following key bindings:\n\n* `M-n` to jump to the next error.\n* `M-p` to jump to the previous error.\n\n```elisp\n(with-eval-after-load 'flycheck\n (define-key flycheck-mode-map (kbd \"M-n\") #'flycheck-next-error)\n (define-key flycheck-mode-map (kbd \"M-p\") #'flycheck-previous-error)\n (setq flycheck-checker-error-threshold nil)\n (setq flycheck-check-syntax-automatically\n  '(idle-change new-line mode-enabled idle-buffer-switch))\n (setq flycheck-idle-change-delay 0.25)\n (setq flycheck-idle-buffer-switch-delay 0.25))\n```\n\nAnd set up `company-mode` for auto-completion:\n\n```elisp\n(with-eval-after-load 'company\n (setq company-backends '((company-capf company-files company-keywords)))\n (setq completion-ignore-case t)\n (setq company-minimum-prefix-length 1)\n (setq company-selection-wrap-around t)\n (define-key company-mode-map (kbd \"<tab>\") #'company-indent-or-complete-common))\n```\n\nThen set up `lsp-mode` to integrate everything together, which enables the following additional features:\n\n* Header breadcrumbs showing the path to the current item under point.\n* Semantic syntax highlighting as opposed to regex-based ones.\n\nAnd adds the following key bindings:\n\n* `F2` to switch between implementation and header file.\n* `C-c f` to format the current file according to `clang-format`.\n* `C-c g` to format the selected region according to `clang-format`.\n* `C-c r` to reliably rename the item under point based on `clangd`.\n* `C-c h` to show code documentation about the item under point.\n* `C-c =` to expand selection outwards from the item under point.\n* `M-RET` to list and run available language server code actions.\n* `C-c x` to navigate to any symbol in the project.\n* `C-c e` to show a navigation list of errors/warnings in the project.\n* `C-c s` to show a navigation list of symbols in the project.\n* `C-c c` to show the call hierarchy of a method or function.\n* `C-c t` to show the type/inheritance hierarchy of a type.\n\n```elisp\n(with-eval-after-load 'lsp-mode\n (define-key lsp-mode-map (kbd \"C-c f\") #'lsp-format-buffer)\n (define-key lsp-mode-map (kbd \"C-c g\") #'lsp-format-region)\n (define-key lsp-mode-map (kbd \"C-c r\") #'lsp-rename)\n (define-key lsp-mode-map (kbd \"C-c h\") #'lsp-describe-thing-at-point)\n (define-key lsp-mode-map (kbd \"C-=\"  ) #'lsp-extend-selection)\n (define-key lsp-mode-map (kbd \"M-RET\") #'lsp-execute-code-action)\n (define-key lsp-mode-map (kbd \"C-c e\") #'lsp-treemacs-errors-list)\n (define-key lsp-mode-map (kbd \"C-c s\") #'lsp-treemacs-symbols)\n (define-key lsp-mode-map (kbd \"C-c c\") #'lsp-treemacs-call-hierarchy)\n (define-key lsp-mode-map (kbd \"C-c t\") #'lsp-treemacs-type-hierarchy)\n (add-hook 'lsp-mode-hook #'lsp-treemacs-sync-mode)\n (setq lsp-progress-prefix \"  Progress: \")\n (setq lsp-completion-provider :none) ; Company-capf is already set\n (setq lsp-headerline-breadcrumb-enable t)\n (setq lsp-restart 'auto-restart)\n (setq lsp-enable-snippet nil)\n (setq lsp-keymap-prefix \"C-c\")\n (setq lsp-idle-delay 0.1)\n (setq lsp-file-watch-threshold nil)\n (setq lsp-enable-semantic-highlighting t)\n (setq lsp-enable-indentation t)\n (setq lsp-enable-on-type-formatting t)\n (setq lsp-before-save-edits nil)\n (setq lsp-auto-configure t)\n (setq lsp-signature-render-documentation t)\n (setq lsp-modeline-code-actions-enable nil)\n (setq lsp-log-io nil)\n (setq lsp-enable-imenu nil))\n\n(with-eval-after-load 'lsp-headerline\n (setq lsp-headerline-breadcrumb-icons-enable nil))\n\n(with-eval-after-load 'lsp-semantic-tokens\n (setq lsp-semantic-tokens-apply-modifiers t))\n\n(with-eval-after-load 'lsp-clangd\n (setq lsp-clients-clangd-args\n  '(\"--header-insertion-decorators\"\n    \"--all-scopes-completion\"\n    \"--clang-tidy\"\n    \"--completion-style=detailed\"\n    \"--header-insertion=never\"\n    \"--inlay-hints\"\n    \"--limit-results=1000\"\n    \"-j=4\"\n    \"--malloc-trim\"\n    \"--pch-storage=memory\"))\n (with-eval-after-load 'cc-mode\n  (define-key c-mode-base-map (kbd \"<f2>\") #'lsp-clangd-find-other-file)))\n\n(with-eval-after-load 'treemacs-interface\n (global-set-key (kbd \"<f12>\") #'treemacs-delete-other-windows))\n\n(with-eval-after-load 'treemacs-customization\n (setq treemacs-width 70))\n\n(with-eval-after-load 'treemacs-mode\n (add-hook 'treemacs-mode-hook #'toggle-truncate-lines))\n```\n\nAnd now we set up `lsp-ui-mode` to provide a few more features and key bindings:\n\n* `C-c d` to show rendered documentation.\n* `M-.` to peek at the definition of the item under point.\n* `M-?` to peek at references to the item under point.\n* `M-I` to peek at implementations of virtual methods.\n* `M-,` to jump back.\n\n```elisp\n(with-eval-after-load 'lsp-ui-flycheck\n (setq lsp-ui-flycheck-enable t))\n\n(with-eval-after-load 'lsp-ui-doc\n ; Disable on-the-fly showing of rendered documentation.\n (setq lsp-ui-doc-enable nil)\n (setq lsp-ui-doc-alignment 'frame)\n (setq lsp-ui-doc-header t)\n (setq lsp-ui-doc-include-signature t)\n (setq lsp-ui-doc-max-height 30)\n (setq lsp-ui-doc-use-webkit t))\n\n(with-eval-after-load 'lsp-ui-peek\n (setq lsp-ui-peek-list-width 30)\n (setq lsp-ui-peek-always-show t))\n\n(with-eval-after-load 'lsp-ui-sideline\n (setq lsp-ui-sideline-enable nil))\n\n(with-eval-after-load 'lsp-ui\n (define-key lsp-ui-mode-map (kbd \"M-.\"    ) #'lsp-ui-peek-find-definitions)\n (define-key lsp-ui-mode-map (kbd \"M-?\"    ) #'lsp-ui-peek-find-references)\n (define-key lsp-ui-mode-map (kbd \"M-I\"    ) #'lsp-ui-peek-find-implementation)\n (define-key lsp-ui-mode-map (kbd \"C-c d\"  ) #'lsp-ui-doc-show)\n (define-key lsp-ui-mode-map (kbd \"C-c ! l\") #'lsp-ui-flycheck-list))\n```\n\nAnd finally, set up the C/C++ programming mode with a few settings:\n\n* Indentation of 2 spaces.\n* Simple auto-detection of coding style.\n* Marking of badly-styled comments.\n* Running the LSP client.\n\n```elisp\n(defmacro set-up-c-style-comments ()\n \"Set up C-style /* ... */ comments.\"\n `(with-eval-after-load 'newcomment\n   (setq-local comment-style 'extra-line)))\n\n(with-eval-after-load 'cc-mode\n (add-hook 'c-mode-common-hook #'lsp))\n\n(with-eval-after-load 'cc-vars\n (setq c-mark-wrong-style-of-comment t)\n (setq c-default-style '((other . \"user\")))\n (setq c-basic-offset 2)\n (add-hook 'c-mode-common-hook (lambda nil (progn (set-up-c-style-comments)))))\n```\n\n### TODO Items\n\n* Whitespace cleanup on save.\n* Snippet support with `yasnippet`.\n* Add `which-key` support.\n* Add `ivy` support.\n* Add `company-prescient` for auto-completion ranking.\n\n## Minimal Emacs\n\nCode snippets below should be added to your Emacs init file (e.g. `~/.config/emacs/init`).\n\nWe'll start by enabling Emacs package repositories and declaring which packages we would like to have installed:\n\n```elisp\n(with-eval-after-load 'package\n (setq package-archives\n  '((\"gnu\"   . \"https://elpa.gnu.org/packages/\")\n    (\"melpa\" . \"https://melpa.org/packages/\")))\n (push 'company package-selected-packages)\n (push 'eglot   package-selected-packages))\n```\n\nTo avoid restarting Emacs, you can evaluate that previous s-expression by pointing at the last parenthesis and using `C-x C-e` or selecting the block and using `M-x eval-region`.\n\nOnce done, run `M-x package-refresh-contents`, then `M-x package-install-selected-packages`.\nThis should install some packages for you.\n\nNow, let's set up Eglot and Company:\n\n```elisp\n(require 'eglot)\n(add-to-list 'eglot-server-programs '((c++-mode c-mode) \"clangd\"))\n(add-hook 'c-mode-hook 'eglot-ensure)\n(add-hook 'c++-mode-hook 'eglot-ensure)\n\n(with-eval-after-load 'prog-mode\n  (add-hook 'prog-mode-hook #'company-mode))\n```\n\nThat's it.\n\n# Code Checkers\n\n## On-the-fly `clang-tidy`\n\n`clangd` automatically integrates with `clang-tidy` if a `.clang-tidy` configuration file is available.\nSee [the \"`clang-tidy`\" section of the CONTRIBUTING document](CONTRIBUTING.md#clang-tidy) on how to set up `clang-tidy`.\n"
        },
        {
          "name": "Docker-README.md",
          "type": "blob",
          "size": 5.0263671875,
          "content": "# Intro\n\nhttps://hub.docker.com/u/powerdns offers automatic builds of dnsdist, Auth and Recursor, from the pdns.git master branch.\n\nThe images are based on Debian Bullseye (slim).\n\nThe Dockerfiles:\n\n* https://github.com/PowerDNS/pdns/blob/master/Dockerfile-auth\n* https://github.com/PowerDNS/pdns/blob/master/Dockerfile-dnsdist\n* https://github.com/PowerDNS/pdns/blob/master/Dockerfile-recursor\n\nOther data involved in the Docker build process can be found at https://github.com/PowerDNS/pdns/tree/master/dockerdata\n\n> **Note**\n> If you are building the Dockerfiles directly from the git repo, make sure you run `git submodule init` followed by `git submodule update` first.\n\n# Usage\n\nThe images are ready to run with limited functionality.\nAt container startup, the startup.py wrapper (from the dockerdata directory linked above) checks for `PDNS_RECURSOR_API_KEY` / `PDNS_AUTH_API_KEY` / `DNSDIST_API_KEY` environment variables for the product you are running.\nIf such a variable is found, `/etc/powerdns/recursor.d/_api.conf` / `/etc/powerdns/pdns.d/_api.conf` / `/etc/dnsdist/conf.d/_api.conf` is written, enabling the webserver in all products, and the dnsdist console.\nFor the dnsdist console, make sure that your API key is in a format suitable for the console (use `makeKey()`).\n\nThe default configs shipped in the image (see dockerdata above) parse all files in `/etc/powerdns/pdns.d` / `/etc/powerdns/recursor.d` / `/etc/dnsdist/conf.d`.\nFor Auth and Recursor, extra configuration can be passed on the command line, or via a volume mount into `/etc/powerdns` or the `.d` dir.\nFor dnsdist, only the volume mount is applicable.\n\nIf you want to volume mount a config, but also take the keys from the environment, please take care to include the same `_api.conf` file in your `.d` directory.\n\nIf you want to read the configuration for debugging purposes, you can run the containers with the `DEBUG_CONFIG` environment variable set to `'yes'`.\nThis will print the full config on startup. Please keep in mind that this also includes credentials, therefore this setting should never be used in production environments.\n\n# Auth and databases\n\nThe default auth config uses SQLite3 in `/var/lib/powerdns/pdns.sqlite3`.\nWe suggest providing that file via a volume.\nFor other databases, either pass config overrides on the command line, or mount a config file.\n\n## LMDB\n\nWhen using the LMDB backend with the auth image, please make sure that any containers that might access the database volume do not have overlapping PIDs - otherwise you will get locking problems and possibly resulting corruption.\nIn a plain Docker or Compose setup, this can be done by using the host PID namespace.\n\n# Compose example\n\nWe have a Docker Compose example at https://github.com/PowerDNS/pdns/blob/master/docker-compose.yml.\nIt brings up all three services, and exposes them to each other by name (using Docker's internal DNS).\nIn the dockerdata dir, you can find an example dnsdist Lua config (with Python helper to make DNS lookups non-blocking for dnsdist) for managing your auth/rec backends by name.\n\n# Privileged ports\n\nThe default configurations included for dnsdist, Auth and Recursor attempt to bind to port 53, which may not be permitted by the platform on which you intend to use these images. Kubernetes clusters, for example, might have a restriction on binding to privileged ports unless the `NET_BIND_SERVICE` capability is explicitly added to the container's security context.\n\nThere are multiple ways of dealing with these restrictions if you encounter them:\n\n* Grant the `NET_BIND_SERVICE` capability to the containers which utilize these images\n* Use custom configuration files to bind to alternate ports outside of the privileged range. This can be done via the following configuration settings:\n    * dnsdist: `setLocal()`\n    * Auth & Recursor: `local-address` and/or `local-port`\n\nNote: Docker Engine 20.10.0 (released december 2020) removed the need to set the `NET_BIND_SERVICE` capability when attempting to bind to a privileged port.\n\n## Auth and Supervisord\n\nThe auth image uses `tini` as init process to run auth via the startup.py wrapper. However, it also has `supervisord` available for special use cases. Example scenarios for using `supervisord` include:\n\n* Running multiple processes (ie: auth + ixfrdist) within the same container - Generally not advisable, but has benefits in some cases\n* Allowing restarts of processes within a container without having the entire container restart - Primarily has benefits in Kubernetes where you could have a process (ixfrdist for example) restart when a script/agent detects changes in a mounted configmap containing the process' configuration.\n\nTo use `supervisord` within Kubernetes, you can configure the container with the following:\n\n```yaml\ncommand: [\"supervisord\"]\nargs:\n  - \"--configuration\"\n  - \"/path/to/supervisord.conf\"\n```\n\nIn the above example `/path/to/supervisord.conf` is the path where a configmap containing your supervisord configuration is mounted.\nFurther details about `supervisord` and how to configure it can be found here: http://supervisord.org/configuration.html\n"
        },
        {
          "name": "Dockerfile-auth",
          "type": "blob",
          "size": 4.37890625,
          "content": "# our chosen base image\nFROM debian:11-slim AS builder\n\nENV NO_LUA_JIT=\"s390x arm64\"\n\n# TODO: make sure /source looks roughly the same from git or tar\n\n# Reusable layer for base update\nRUN apt-get update && apt-get -y dist-upgrade && apt-get clean\n\n# devscripts gives us mk-build-deps (and a lot of other stuff)\nRUN apt-get update && apt-get -y dist-upgrade && apt-get install -y  --no-install-recommends devscripts dpkg-dev equivs git python3-venv && apt-get clean\n\n# import everything - this could be pdns.git OR an auth tarball!\nCOPY builder-support /source/builder-support\n\n# TODO: control file is not in tarballs at all right now\nRUN mk-build-deps -i -t 'apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends' /source/builder-support/debian/authoritative/debian-buster/control && \\\n    apt-get clean\n\n# build and install (TODO: before we hit this line, rearrange /source structure if we are coming from a tarball)\nWORKDIR /source/\n\nCOPY pdns /source/pdns\nCOPY modules /source/modules\nCOPY codedocs /source/codedocs\nCOPY docs /source/docs\nCOPY build-aux /source/build-aux\nCOPY m4 /source/m4\nCOPY ext /source/ext\nCOPY .git /source/.git\nADD configure.ac Makefile.am /source/\nCOPY builder/helpers/set-configure-ac-version.sh /usr/local/bin\n\nARG MAKEFLAGS=\nENV MAKEFLAGS ${MAKEFLAGS:--j2}\n\nARG DOCKER_FAKE_RELEASE=NO\nENV DOCKER_FAKE_RELEASE ${DOCKER_FAKE_RELEASE}\n\nRUN if [ \"${DOCKER_FAKE_RELEASE}\" = \"YES\" ]; then \\\n      BUILDER_VERSION=\"$(IS_RELEASE=YES BUILDER_MODULES=authoritative ./builder-support/gen-version | sed 's/\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\(\\(alpha|beta|rc\\)\\d\\+\\)\\)?.*/\\1/')\" set-configure-ac-version.sh;\\\n    fi && \\\n    BUILDER_MODULES=authoritative autoreconf -vfi\n\n# simplify repeated -C calls with SUBDIRS?\nRUN mkdir /build && \\\n    LUAVER=$([ -z \"${NO_LUA_JIT##*$(dpkg --print-architecture)*}\" ] && echo 'lua5.3' || echo 'luajit') && \\\n    apt-get install -y lib${LUAVER}-*dev && \\\n    ./configure \\\n      --with-lua=${LUAVER} \\\n      --sysconfdir=/etc/powerdns \\\n      --enable-option-checking=fatal \\\n      --with-dynmodules='bind geoip gmysql godbc gpgsql gsqlite3 ldap lmdb lua2 pipe remote tinydns' \\\n      --enable-tools \\\n      --enable-ixfrdist \\\n      --with-unixodbc-lib=/usr/lib/$(dpkg-architecture -q DEB_BUILD_GNU_TYPE) && \\\n    make clean && \\\n    make $MAKEFLAGS -C ext && make $MAKEFLAGS -C modules && make $MAKEFLAGS -C pdns && \\\n    make -C pdns install DESTDIR=/build && make -C modules install DESTDIR=/build && make clean && \\\n    strip /build/usr/local/bin/* /build/usr/local/sbin/* /build/usr/local/lib/pdns/*.so\nRUN cd /tmp && mkdir /build/tmp/ && mkdir debian && \\\n    echo 'Source: docker-deps-for-pdns' > debian/control && \\\n    dpkg-shlibdeps /build/usr/local/bin/* /build/usr/local/sbin/* /build/usr/local/lib/pdns/*.so && \\\n    sed 's/^shlibs:Depends=/Depends: /' debian/substvars >> debian/control && \\\n    equivs-build debian/control && \\\n    dpkg-deb -I equivs-dummy_1.0_all.deb && cp equivs-dummy_1.0_all.deb /build/tmp/\n\n# Runtime\nFROM debian:11-slim\n\n# Reusable layer for base update - Should be cached from builder\nRUN apt-get update && apt-get -y dist-upgrade && apt-get clean\n\n# Ensure python3 and jinja2 is present (for startup script), and sqlite3 (for db schema), and tini (for signal management),\n#   and vim (for pdnsutil edit-zone) , and supervisor (for special use cases requiring advanced process management)\nRUN apt-get install -y python3 python3-jinja2 sqlite3 tini libcap2-bin vim-tiny supervisor && apt-get clean\n\n# Output from builder\nCOPY --from=builder /build /\nRUN chmod 1777 /tmp # FIXME: better not use /build/tmp for equivs at all\n\n# Ensure dependencies are present\nRUN apt-get install -y /tmp/equivs-dummy_1.0_all.deb && apt-get clean\n\n# Start script\nCOPY dockerdata/startup.py /usr/local/sbin/pdns_server-startup\n\nCOPY dockerdata/pdns.conf /etc/powerdns/\nRUN mkdir -p /etc/powerdns/pdns.d /var/run/pdns /var/lib/powerdns /etc/powerdns/templates.d\n\n# Work with pdns user - not root\nRUN adduser --system --disabled-password --disabled-login --no-create-home --group pdns --uid 953\nRUN chown pdns:pdns /var/run/pdns /var/lib/powerdns /etc/powerdns/pdns.d /etc/powerdns/templates.d\nUSER pdns\n\n# Set up database - this needs to be smarter\nRUN sqlite3 /var/lib/powerdns/pdns.sqlite3 < /usr/local/share/doc/pdns/schema.sqlite3.sql\n\n# Default DNS ports\nEXPOSE 53/udp\nEXPOSE 53/tcp\n# Default webserver port\nEXPOSE 8081/tcp\n\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/usr/local/sbin/pdns_server-startup\"]\n"
        },
        {
          "name": "Dockerfile-cifuzz",
          "type": "blob",
          "size": 0.1435546875,
          "content": "FROM gcr.io/oss-fuzz-base/base-builder:latest\n\nRUN sed -i 's/[a-z]*\\.ubuntu\\.com/mirror\\.leaseweb\\.net/' /etc/apt/sources.list\nRUN apt-get update\n\n"
        },
        {
          "name": "Dockerfile-dnsdist",
          "type": "blob",
          "size": 4.4345703125,
          "content": "# our chosen base image\nFROM debian:12-slim AS builder\n\nENV NO_LUA_JIT=\"s390x arm64\"\n\n# TODO: make sure /source looks roughly the same from git or tar\n\n# Reusable layer for base update\nRUN apt-get update && apt-get -y dist-upgrade && apt-get clean\n\n# devscripts gives us mk-build-deps (and a lot of other stuff)\nRUN apt-get update && apt-get -y dist-upgrade && apt-get install -y  --no-install-recommends devscripts equivs git && apt-get clean\n\nCOPY builder-support /source/builder-support\n\n# TODO: control file is not in tarballs at all right now\nRUN mk-build-deps -i -t 'apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends' /source/builder-support/debian/dnsdist/debian-bookworm/control && \\\n    apt-get clean\n\nCOPY pdns /source/pdns\nCOPY build-aux /source/build-aux\nCOPY m4 /source/m4\nCOPY ext /source/ext\nCOPY builder/helpers/set-configure-ac-version.sh /usr/local/bin\nCOPY .git /source/.git\n\n# build and install (TODO: before we hit this line, rearrange /source structure if we are coming from a tarball)\nWORKDIR /source/pdns/dnsdistdist\n\nARG MAKEFLAGS=\nENV MAKEFLAGS ${MAKEFLAGS:--j2}\n\nARG DOCKER_FAKE_RELEASE=NO\nENV DOCKER_FAKE_RELEASE ${DOCKER_FAKE_RELEASE}\n\nRUN touch dnsdist.1 # avoid having to install pandoc and venv\n\nRUN if [ \"${DOCKER_FAKE_RELEASE}\" = \"YES\" ]; then \\\n      BUILDER_VERSION=\"$(IS_RELEASE=YES BUILDER_MODULES=dnsdist ./builder-support/gen-version | sed 's/\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\(\\(alpha|beta|rc\\)\\d\\+\\)\\)?.*/\\1/')\" set-configure-ac-version.sh;\\\n    fi && \\\n    BUILDER_MODULES=dnsdist autoreconf -vfi\n\n\nRUN mkdir /libh2o && cd /libh2o && \\\n      apt-get update && apt-get install -y cmake curl jq libssl-dev zlib1g-dev && \\\n      cd /source/builder-support/helpers/ && \\\n      ./install_h2o.sh\n\nRUN mkdir /quiche && cd /quiche && \\\n    apt-get install -y libclang-dev && \\\n    apt-get clean && \\\n    cd /source/builder-support/helpers/ && \\\n    ./install_rust.sh && \\\n    ./install_quiche.sh\n\nRUN mkdir /build && \\\n    LUAVER=$([ -z \"${NO_LUA_JIT##*$(dpkg --print-architecture)*}\" ] && echo 'lua5.3' || echo 'luajit') && \\\n    apt-get install -y lib${LUAVER}-*dev && \\\n    ./configure \\\n      --with-lua=${LUAVER} \\\n      LDFLAGS=-rdynamic \\\n      --sysconfdir=/etc/dnsdist \\\n      --enable-option-checking=fatal \\\n      --enable-dnscrypt \\\n      --enable-dns-over-tls \\\n      --enable-dns-over-https \\\n      --with-re2 \\\n      --with-h2o \\\n      --enable-dns-over-quic \\\n      --enable-dns-over-http3 \\\n      --with-quiche \\\n      PKG_CONFIG_PATH=/opt/lib/pkgconfig && \\\n    make clean && \\\n    make $MAKEFLAGS install DESTDIR=/build && make clean && \\\n    strip /build/usr/local/bin/* &&\\\n    mkdir -p /build/usr/lib/ && \\\n    cp -rf /usr/lib/libdnsdist-quiche.so /build/usr/lib/\n\nRUN cd /tmp && mkdir /build/tmp/ && mkdir debian && \\\n    echo 'Source: docker-deps-for-pdns' > debian/control && \\\n    dpkg-shlibdeps /build/usr/local/bin/dnsdist && \\\n    sed 's/^shlibs:Depends=/Depends: /' debian/substvars >> debian/control && \\\n    equivs-build debian/control && \\\n    dpkg-deb -I equivs-dummy_1.0_all.deb && cp equivs-dummy_1.0_all.deb /build/tmp/\n\n# Runtime\n\nFROM debian:12-slim\n\n# Reusable layer for base update - Should be cached from builder\nRUN apt-get update && apt-get -y dist-upgrade && apt-get clean\n\n# - python3 and jinja2 (for startup script)\n# - python3-atomicwrites (for backend management)\n# - tini (for signal management)\n# - ca-certificates (for verifying downstream DoH/DoT certificates)\nRUN apt-get install -y python3 python3-jinja2 python3-atomicwrites tini libcap2-bin ca-certificates && apt-get clean\n\n# Output from builder\nCOPY --from=builder /build /\nRUN chmod 1777 /tmp # FIXME: better not use /build/tmp for equivs at all\n\n# Ensure dependencies are present\nRUN apt-get install -y /tmp/equivs-dummy_1.0_all.deb && apt-get clean\n\n# Config\nRUN mkdir -p /etc/dnsdist/conf.d /etc/dnsdist/templates.d\nCOPY dockerdata/dnsdist.conf /etc/dnsdist/\n\n# Start script\nCOPY dockerdata/startup.py /usr/local/bin/dnsdist-startup\n\n# Work with pdns user - not root\nRUN adduser --system --disabled-password --disabled-login --no-create-home --group pdns --uid 953\nRUN chown pdns:pdns /etc/dnsdist/conf.d /etc/dnsdist/templates.d\nUSER pdns\n\n# Default DNS ports\nEXPOSE 53/udp\nEXPOSE 53/tcp\n# Default console port\nEXPOSE 5199/tcp\n# Default webserver port\nEXPOSE 8083/tcp\n\nWORKDIR /etc/dnsdist\n\nCOPY dockerdata/dnsdist-resolver.lua /etc/dnsdist/\nCOPY dockerdata/dnsdist-resolver.py /usr/local/bin/dnsdist-resolver\n\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/usr/local/bin/dnsdist-startup\"]\n"
        },
        {
          "name": "Dockerfile-recursor",
          "type": "blob",
          "size": 4.10546875,
          "content": "# USAGE\n\n#   docker build --build-arg MAKEFLAGS=-j8 -t recursor -f Dockerfile-recursor .\n#   docker run -p 1053:53 -p 1053:53/udp -ti --rm recursor\n#   dig a www.example.com @0 -p 1053\n\n# Builder\nFROM debian:11-slim AS builder\n\nENV NO_LUA_JIT=\"s390x arm64\"\n\n# Reusable layer for base update\nRUN apt-get update && apt-get -y dist-upgrade && apt-get clean\n\n# devscripts gives us mk-build-deps (and a lot of other stuff)\nRUN apt-get install -y --no-install-recommends devscripts equivs git curl jq && apt-get clean\n\nCOPY builder-support /source/builder-support\n\n# TODO: control file is not in tarballs at all right now\nRUN mk-build-deps -i -t 'apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends' /source/builder-support/debian/recursor/debian-buster/control && \\\n    apt-get clean\n\nCOPY pdns /source/pdns\nCOPY build-aux /source/build-aux\nCOPY m4 /source/m4\nCOPY ext /source/ext\nCOPY .git /source/.git\nCOPY builder/helpers/set-configure-ac-version.sh /usr/local/bin\n\nCOPY builder-support/helpers/install_rust.sh /source/install_rust.sh\nCOPY builder-support/helpers/rust.json /source/rust.json\nRUN cd /source/ && ./install_rust.sh\n\n# build and install (TODO: before we hit this line, rearrange /source structure if we are coming from a tarball)\nWORKDIR /source/pdns/recursordist\n\nARG MAKEFLAGS=\nENV MAKEFLAGS ${MAKEFLAGS:--j2}\n\nARG DOCKER_FAKE_RELEASE=NO\nENV DOCKER_FAKE_RELEASE ${DOCKER_FAKE_RELEASE}\n\n# Manpage deps\n# RUN apt-get install -y python3-venv && apt-get clean\n\n# Manpage prevent\nRUN touch pdns_recursor.1 rec_control.1 # avoid installing pandoc\n\nRUN if [ \"${DOCKER_FAKE_RELEASE}\" = \"YES\" ]; then \\\n      BUILDER_VERSION=\"$(IS_RELEASE=YES BUILDER_MODULES=recursor ./builder-support/gen-version | sed 's/\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\(\\(alpha|beta|rc\\)\\d\\+\\)\\)?.*/\\1/')\" set-configure-ac-version.sh;\\\n    fi && \\\n    BUILDER_MODULES=recursor autoreconf -vfi\n\nRUN mkdir /build && \\\n    LUAVER=$([ -z \"${NO_LUA_JIT##*$(dpkg --print-architecture)*}\" ] && echo 'lua5.3' || echo 'luajit') && \\\n    apt-get install -y lib${LUAVER}-*dev && \\\n    ./configure \\\n      --with-libcap \\\n      --with-libsodium \\\n      --with-lua=${LUAVER} \\\n      --with-net-snmp \\\n      --enable-dns-over-tls \\\n      --enable-dnstap \\\n      --enable-nod \\\n      LDFLAGS=-rdynamic \\\n      --sysconfdir=/etc/powerdns \\\n      --enable-option-checking=fatal && \\\n      make clean && \\\n      make $MAKEFLAGS install DESTDIR=/build && make clean && \\\n      strip /build/usr/local/bin/* /build/usr/local/sbin/*\nRUN cd /tmp && mkdir /build/tmp/ && mkdir debian && \\\n    echo 'Source: docker-deps-for-pdns' > debian/control && \\\n    dpkg-shlibdeps /build/usr/local/bin/rec_control /build/usr/local/sbin/pdns_recursor && \\\n    sed 's/^shlibs:Depends=/Depends: /' debian/substvars >> debian/control && \\\n    equivs-build debian/control && \\\n    dpkg-deb -I equivs-dummy_1.0_all.deb && cp equivs-dummy_1.0_all.deb /build/tmp/\n\n# Runtime\nFROM debian:11-slim\n\n# Reusable layer for base update - Should be cached from builder\nRUN apt-get update && apt-get -y dist-upgrade && apt-get clean\n\n# Ensure python3 and jinja2 is present (for startup script), and tini for signal management\nRUN apt-get install -y python3 python3-jinja2 tini libcap2-bin && apt-get clean\n\n# Executables from builder\nCOPY --from=builder /build /\nRUN chmod 1777 /tmp # FIXME: better not use /build/tmp for equivs at all\n\n# Ensure dependencies are present\nRUN apt-get install -y /tmp/equivs-dummy_1.0_all.deb && apt-get clean\n\n# Start script\nCOPY dockerdata/startup.py /usr/local/sbin/pdns_recursor-startup\n\n# Config file(s) from builder\nCOPY dockerdata/recursor.conf /etc/powerdns/\n\n# Is recursor.d necessary if we copy the config into recursor.conf? (see above)\nRUN mkdir -p /etc/powerdns/recursor.d /var/run/pdns-recursor /etc/powerdns/templates.d\n\n# Work with pdns user - not root\nRUN adduser --system --disabled-password --disabled-login --no-create-home --group pdns --uid 953\nRUN chown pdns:pdns /var/run/pdns-recursor /etc/powerdns/recursor.d /etc/powerdns/templates.d\nUSER pdns\n\n# Default DNS ports\nEXPOSE 53/udp\nEXPOSE 53/tcp\n\n# Default webserver port\nEXPOSE 8082/tcp\n\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/usr/local/sbin/pdns_recursor-startup\"]\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 0.0087890625,
          "content": "README.md"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.978515625,
          "content": "SUBDIRS = ext modules pdns codedocs docs\n\nEXTRA_DIST = \\\n\tINSTALL \\\n\tNOTICE \\\n\tREADME \\\n\tCOPYING \\\n\tcodedocs/doxygen.conf \\\n\tcontrib/powerdns.solaris.init.d \\\n\tpdns/named.conf.parsertest \\\n\tregression-tests/zones/unit.test \\\n\tregression-tests/zones/unit2.test \\\n\tregression-tests/zones/zonemd-allunsup.zone \\\n\tregression-tests/zones/zonemd-duplicate.zone \\\n\tregression-tests/zones/zonemd-invalid.zone \\\n\tregression-tests/zones/zonemd-nozonemd.zone \\\n\tregression-tests/zones/zonemd-serialmismatch.zone \\\n\tregression-tests/zones/zonemd-sha512.zone \\\n\tregression-tests/zones/zonemd-syntax.zone \\\n\tregression-tests/zones/zonemd1.zone \\\n\tregression-tests/zones/zonemd2.zone \\\n\tregression-tests/zones/zonemd3.zone \\\n\tregression-tests/zones/zonemd4.zone \\\n\tregression-tests/zones/zonemd5.zone \\\n\tbuilder-support/gen-version\n\nACLOCAL_AMFLAGS = -I m4\n\ndvi: # do nothing to build dvi\n\nformat-code:\n\t./build-scripts/format-code `find . -type f -name '*.[ch][ch]' | LANG=C sort | LANG=C comm -23 - .not-formatted`\n"
        },
        {
          "name": "Makefile.docker",
          "type": "blob",
          "size": 1.58203125,
          "content": ".PHONY: all build build-nocache dep auth recursor dnsdist\n\nVERSION=experimental\nREVISION=1\n\nall: build\n\nauth:\n\tdocker build --build-arg VERSION=$(VERSION) -t powerdns/pdns-auth-master:$(VERSION)-$(REVISION) --rm -f Dockerfile-auth .\n\nrecursor:\n\tdocker build --build-arg VERSION=$(VERSION) -t powerdns/pdns-recursor-master:$(VERSION)-$(REVISION) --rm -f Dockerfile-recursor .\n\ndnsdist:\n\tdocker build --build-arg VERSION=$(VERSION) -t powerdns/dnsdist-master:$(VERSION)-$(REVISION) --rm -f Dockerfile-dnsdist .\n\nbuild: auth recursor dnsdist\n\t@true\n\nbuild-nocache:\n\tdocker build --build-arg VERSION=$(VERSION) -t powerdns/pdns-auth-master:$(VERSION)-$(REVISION) --no-cache --rm -f Dockerfile-auth .\n\tdocker build --build-arg VERSION=$(VERSION) -t powerdns/pdns-recursor-master:$(VERSION)-$(REVISION) --no-cache --rm -f Dockerfile-recursor .\n\tdocker build --build-arg VERSION=$(VERSION) -t powerdns/dnsdist-master:$(VERSION)-$(REVISION) --no-cache --rm -f Dockerfile-dnsdist .\n\npush: build\n\tdocker push powerdns/pdns-auth-master:$(VERSION)-$(REVISION)\n\tdocker push powerdns/pdns-recursor-master:$(VERSION)-$(REVISION)\n\tdocker push powerdns/dnsdist-master:$(VERSION)-$(REVISION)\n\npush-latest: build\n\tdocker tag powerdns/pdns-auth-master:$(VERSION)-$(REVISION) powerdns/pdns-auth-master:latest\n\tdocker push powerdns/pdns-auth-master:latest\n\tdocker tag powerdns/pdns-recursor-master:$(VERSION)-$(REVISION) powerdns/pdns-recursor-master:latest\n\tdocker push powerdns/pdns-recursor-master:latest\n\tdocker tag powerdns/dnsdist-master:$(VERSION)-$(REVISION) powerdns/dnsdist-master:latest\n\tdocker push powerdns/dnsdist-master:latest\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.07421875,
          "content": "For news, please see https://www.powerdns.com and https://docs.powerdns.com\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.779296875,
          "content": "This program is free software; you can redistribute it and/or modify\nit under the terms of version 2 of the GNU General Public License as\npublished by the Free Software Foundation.\n\nIn addition, for the avoidance of any doubt, permission is granted to\nlink this program with OpenSSL and to (re)distribute the binaries\nproduced as the result of such linking.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.0087890625,
          "content": "README.md"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5537109375,
          "content": "PowerDNS is copyright © by PowerDNS.COM BV and lots of\ncontributors, using the GNU GPLv2 license (see NOTICE for the\nexact license and exception used).\n\nAll documentation can be found on https://doc.powerdns.com/\n\nThis file may lag behind at times. For most recent updates, always check\nhttps://doc.powerdns.com/authoritative/changelog/\n\nAnother good place to look for information is:\nhttps://doc.powerdns.com/authoritative/appendices/compiling.html\n\nTo file bugs, head towards:\nhttps://github.com/PowerDNS/pdns/issues\n\nBut please check if the issue is already reported there first.\n\nDOCKER\n------\n\nThis README is mirrored from GitHub to dockerhub.\nFor information about our Docker images, please refer to https://github.com/PowerDNS/pdns/blob/master/Docker-README.md\n\nSOURCE CODE / GIT\n-----------------\nSource code is available on GitHub:\n\n```sh\ngit clone https://github.com/PowerDNS/pdns.git\n```\n\nThis repository contains the sources for the PowerDNS Recursor, the PowerDNS\nAuthoritative Server, and dnsdist (a powerful DNS loadbalancer). All three can\nbe built from this repository. However, all three released separately as .tar.bz2,\n.deb and .rpm.\n\nThe different releases can be built by the help of pdns-builder, which uses a\ndocker-based build process. To get started with this, run these commands in the root\nof this repository:\n\n```sh\ngit submodule init\ngit submodule update\n./builder/build.sh\n```\n\nThis will bring up a USAGE-page which will explain how to build the different releases.\n\nCOMPILING Authoritative Server\n------------------------------\nThe PowerDNS Authoritative Server depends on Boost, OpenSSL and Lua, and requires a\ncompiler with C++-2017 support.\n\nOn Debian, the following is useful:\n\n```sh\napt install g++ libboost-all-dev libtool make pkg-config default-libmysqlclient-dev libssl-dev libluajit-5.1-dev python3-venv\n```\n\nWhen building from git, the following packages are also required:\n\n```sh\napt install autoconf automake ragel bison flex\n```\n\nFor Ubuntu, the following packages should be installed:\n\n```sh\napt install libcurl4-openssl-dev luajit lua-yaml-dev libyaml-cpp-dev libtolua-dev lua5.3 autoconf automake ragel bison flex g++ libboost-all-dev libtool make pkg-config libssl-dev lua-yaml-dev libyaml-cpp-dev libluajit-5.1-dev libcurl4 gawk libsqlite3-dev python3-venv\n# For DNSSEC ed25519 (algorithm 15) support with --with-libsodium\napt install libsodium-dev\n# If using the gmysql (Generic MySQL) backend\napt install default-libmysqlclient-dev\n# If using the gpgsql (Generic PostgreSQL) backend\napt install libpq-dev\n# If using --enable-systemd (will create the service scripts so it can be managed with systemctl/service)\napt install libsystemd0 libsystemd-dev\n# If using the geoip backend\napt install libmaxminddb-dev libmaxminddb0 libgeoip1 libgeoip-dev\n```\n\nThen generate the configure file:\n\n```sh\nautoreconf -vi\n```\n\nTo compile a very clean version, use:\n\n```sh\n./configure --with-modules=\"\" --disable-lua-records\nmake\n# make install\n```\n\nThis generates a PowerDNS Authoritative Server binary with no modules built in.\n\nSee https://doc.powerdns.com/authoritative/backends/index.html for a list of available modules.\n\nWhen `./configure` is run without `--with-modules`, the bind and gmysql module are\nbuilt-in by default and the pipe-backend is compiled for runtime loading.\n\nTo add multiple modules, try:\n\n```sh\n./configure --with-modules=\"bind gmysql gpgsql\"\n```\n\nNote that you will need the development headers for PostgreSQL as well in this case.\n\nSee https://doc.powerdns.com/authoritative/appendices/compiling.html for more details.\n\nIf you run into C++11-related symbol trouble, please try passing `CPPFLAGS=-D_GLIBCXX_USE_CXX11_ABI=0` (or 1) to `./configure` to make sure you are compatible with the installed dependencies.\n\nCompiling the Recursor\n----------------------\nSee [README.md](pdns/recursordist/README.md) in `pdns/recursordist/`.\n\nCompiling dnsdist\n-----------------\nSee [README-dnsdist.md](pdns/README-dnsdist.md) in `pdns/`.\n\nBuilding the HTML documentation\n-------------------------------\n\nThe HTML documentation (as seen [on the PowerDNS docs site](https://doc.powerdns.com/authoritative/)) is built from ReStructured Text (rst) files located in `docs`. They are compiled into HTML files using [Sphinx](http://www.sphinx-doc.org/en/master/index.html), a documentation generator tool which is built in Python.\n\nInstall the dependencies under \"COMPILING\", and run autoreconf if you haven't already:\n\n```sh\nautoreconf -vi\n```\n\nEnter the `docs` folder, and use make to build the HTML docs.\n\n```\ncd docs\nmake html-docs\n```\n\nThe HTML documentation will now be available in `html-docs`.\n\nFreeBSD Notes\n-------------\nYou need to compile using gmake - regular make only appears to work, but doesn't in fact. Use gmake, not make.\n\nThe clang compiler installed through FreeBSD's package manager does not expose all of the C++17 features needed under the default `std=gnuc++14`. Force the compiler to use `std=c++17` mode instead.\n\n```sh\nexport CXXFLAGS=-std=c++17\n```\n\nmacOS Notes\n-----------\nPowerDNS Authoritative Server is available through Homebrew:\n\n```\nbrew install pdns\n```\n\nIf you want to compile yourself, the dependencies can be installed using\nHomebrew. You need to tell configure where to find OpenSSL, too.\n\n```sh\nbrew install boost lua pkg-config ragel openssl\n./configure --with-modules=\"\" PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig\nmake -j4\n```\n\nAdditionally, for PostgreSQL support, run `brew install postgresql` and add `--with-modules=\"gpgsql\"` to `./configure`.\nFor MySQL support, run `brew install mariadb` and add `--with-modules=\"gmysql\"` to `./configure`.\n\nLinux notes\n-----------\nNone really.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.4296875,
          "content": "PowerDNS and DNSdist Security Policy\n====================================\n\nIf you have a security problem to report, please email us at both peter.van.dijk@powerdns.com and remi.gacogne@powerdns.com.\nIn case you want to encrypt your report using PGP, please use: https://doc.powerdns.com/powerdns-keyblock.asc\n\nPlease do not mail security issues to public lists, nor file a ticket, unless we do not get back to you in a timely manner.\nWe fully credit reporters of security issues, and respond quickly, but please allow us a reasonable timeframe to coordinate a response.\n\nWe remind PowerDNS and DNSdist users that under the terms of the GNU General Public License, PowerDNS and DNSdist come with ABSOLUTELY NO WARRANTY.\nThis license is included in this documentation.\n\nYes We Hack\n-----------\nSecurity issues can also be reported on [our YesWeHack page](https://yeswehack.com/programs/powerdns) and might fetch a bounty.\nDo note that only the PowerDNS software (PowerDNS Authoritative Server, the PowerDNS Recursor and DNSdist) is in scope for the YesWeHack program, not our websites or other infrastructure.\n\nDisclosure Policy\n-----------------\n- Let us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\n- Provide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\n- We will always credit researchers in our security advisories.\n"
        },
        {
          "name": "auth-tsan.supp",
          "type": "blob",
          "size": 0.17578125,
          "content": "# Statistic data-race not relevant right now\n# Due to performance issue of atomics\n# Discussion:\n# https://github.com/PowerDNS/pdns/issues/11814\nrace:avg_latency\nrace:send_latency\n"
        },
        {
          "name": "auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "builder",
          "type": "commit",
          "content": null
        },
        {
          "name": "builder-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "codedocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 12.7705078125,
          "content": "AC_PREREQ([2.69])\n\nAC_INIT([pdns], m4_esyscmd([builder-support/gen-version]))\nAC_CONFIG_AUX_DIR([build-aux])\nAM_INIT_AUTOMAKE([foreign dist-bzip2 no-dist-gzip tar-ustar -Wno-portability subdir-objects parallel-tests 1.11])\nAM_SILENT_RULES([yes])\nAC_CONFIG_SRCDIR([pdns/auth-main.cc])\nAC_CONFIG_MACRO_DIR([m4])\n\nAC_USE_SYSTEM_EXTENSIONS\nAC_CONFIG_HEADERS([config.h])\n\nAC_CANONICAL_HOST\n# Add some default CFLAGS and CXXFLAGS, can be appended to using the environment variables\nCFLAGS=\"-g -O2 -Wall -Wextra -Wshadow -Wmissing-declarations -Wredundant-decls $CFLAGS\"\nCXXFLAGS=\"-g -O2 -Wall -Wextra -Wshadow -Wmissing-declarations -Wredundant-decls $CXXFLAGS\"\n\nAC_SUBST([pdns_configure_args], [\"$ac_configure_args\"])\nAC_DEFINE_UNQUOTED([PDNS_CONFIG_ARGS],\n  [\"$pdns_configure_args\"],\n  [pdns configure arguments]\n)\n\nAC_PROG_CC\n# AM_PROG_CC_C_O\nAC_PROG_CXX\nAC_LANG([C++])\n\nPDNS_CHECK_TIME_T\nPDNS_CHECK_BISON\nPDNS_CHECK_FLEX\n\n# Warn when pkg.m4 is missing\nm4_pattern_forbid([^_?PKG_[A-Z_]+$], [*** pkg.m4 missing, please install pkg-config])\n\nAX_CXX_COMPILE_STDCXX_17([noext], [mandatory])\nLT_PREREQ([2.2.2])\nLT_INIT([disable-static dlopen])\n\nPDNS_CHECK_OS\nPTHREAD_SET_NAME\nAC_FUNC_STRERROR_R\nAX_CXX_CXXFS\n\nPDNS_WITH_LUA([mandatory])\nPDNS_CHECK_LUA_HPP\n\nAC_MSG_CHECKING([whether we will enable compiler security checks])\nAC_ARG_ENABLE([hardening],\n  [AS_HELP_STRING([--disable-hardening], [disable compiler security checks @<:@default=no@:>@])],\n  [enable_hardening=$enableval],\n  [enable_hardening=yes]\n)\nAC_MSG_RESULT([$enable_hardening])\n\nAS_IF([test \"x$enable_hardening\" != \"xno\"], [\n  AC_CC_PIE\n  AC_CC_STACK_PROTECTOR\n  AC_CC_PARAM_SSP_BUFFER_SIZE([4])\n  AC_CC_D_FORTIFY_SOURCE\n  AC_LD_RELRO\n])\n\nPDNS_ENABLE_KISS\n\nPDNS_CHECK_NETWORK_LIBS\n\n\nMC_TM_GMTOFF\n\n# Define full_libdir to be the fully expanded (${exec_prefix}, etc.)\n# \"system\" library path.\n# We use this to search for other libraries.\neval full_libdir=\"\\\"$libdir\\\"\"\n\n# detect pkg-config explicitly\nPKG_PROG_PKG_CONFIG\n\nAC_CHECK_HEADERS(\n\t[sys/mman.h],\n\t[AC_CHECK_FUNC(\n\t\t[mmap],\n\t\t[AC_DEFINE(HAVE_MMAP, [1], [Define to 1 if you have mmap])],\n\t\t[have_mmap=no]\n\t)],\n\t[have_mmap=no]\n)\nAC_CHECK_HEADERS([sys/random.h])\n\nPDNS_WITH_LIBSODIUM\nPDNS_CHECK_LIBCRYPTO([\n],[\n   AC_MSG_ERROR([OpenSSL/libcrypto not found])\n  ]\n)\nPDNS_CHECK_LIBCRYPTO_ECDSA\nPDNS_CHECK_LIBCRYPTO_EDDSA\n\nAM_CONDITIONAL([HAVE_GNUTLS], [false])\nAM_CONDITIONAL([HAVE_LIBSSL], [false])\n\nPDNS_ENABLE_DNS_OVER_TLS\nAS_IF([test \"x$enable_dns_over_tls\" != \"xno\"], [\n  PDNS_WITH_LIBSSL\n  PDNS_WITH_GNUTLS\n  AS_IF([test \"x$HAVE_GNUTLS\" != \"x1\" -a \"x$HAVE_LIBSSL\" != \"x1\"], [\n    AC_MSG_ERROR([DNS over TLS support requested but neither GnuTLS nor OpenSSL are available])\n  ])\n])\n\nPDNS_ENABLE_IPCIPHER\n\nPDNS_CHECK_RAGEL([pdns/dnslabeltext.cc], [www.powerdns.com])\nPDNS_CHECK_CLOCK_GETTIME\n\nBOOST_REQUIRE([1.54])\n\nBOOST_PROGRAM_OPTIONS([mt])\nAS_IF([test \"$boost_cv_lib_program_options\" = \"no\"], [\n  AC_MSG_ERROR([Boost Program Options library not found])\n])\nPDNS_ENABLE_UNIT_TESTS\nPDNS_ENABLE_BACKEND_UNIT_TESTS\nPDNS_ENABLE_REPRODUCIBLE\nPDNS_ENABLE_FUZZ_TARGETS\nPDNS_ENABLE_COVERAGE\n\nPDNS_WITH_SQLITE3\n\nPDNS_CHECK_PYTHON_VENV\n\nAM_CONDITIONAL([HAVE_API_SWAGGER_JSON], [test -e \"$srcdir/pdns/api-swagger.json\"])\nAM_COND_IF([HAVE_API_SWAGGER_JSON],[],[\n  AM_COND_IF([HAVE_VENV],[],[\n    AC_MSG_ERROR([Python 3 and/or venv module are not available, Authoritative Server cannot be built.])\n  ])\n])\n\nAM_CONDITIONAL([HAVE_MANPAGES], [test -e \"$srcdir/docs/pdns_server.1\"])\nAM_COND_IF([HAVE_MANPAGES],[],[\n  AM_COND_IF([HAVE_VENV],[],[\n    AC_MSG_WARN([Python 3 and/or venv module are not available, documentation will not be built.])\n  ])\n])\n\nPDNS_FROM_GIT\n\ndnl Checks for library functions.\ndnl the *_r functions are in posix so we can use them unconditionally, but the ext/yahttp code is\ndnl using the defines.\nAC_CHECK_FUNCS_ONCE([strcasestr localtime_r gmtime_r recvmmsg sched_setscheduler])\nAC_CHECK_FUNCS_ONCE([getrandom getentropy arc4random arc4random_uniform arc4random_buf])\nPDNS_CHECK_SECURE_MEMSET\n\nAM_CONDITIONAL([HAVE_RECVMMSG], [test \"x$ac_cv_func_recvmmsg\" = \"xyes\"])\n\nAS_IF([test \"x$lt_cv_dlopen\" = \"xno\"],\n  [AC_MSG_ERROR([Your system does not support dlopen])]\n)\n\nAC_SUBST([LIBDL], [$lt_cv_dlopen_libs])\n\nPDNS_ENABLE_VERBOSE_LOGGING\nPDNS_ENABLE_PKCS11\nPDNS_ENABLE_GSS_TSIG\n\nAC_SUBST([socketdir])\nsocketdir=\"/var/run\"\nAC_ARG_WITH([socketdir],\n  [AS_HELP_STRING([--with-socketdir], [where the controlsocket lives @<:@default=/var/run@:>@])],\n  [socketdir=\"$withval\"]\n)\n\nmodules=\"bind gmysql\"\nAC_ARG_WITH([modules],\n  [AS_HELP_STRING([--with-modules], [which backends to compile with @<:@default=bind gmysql@:>@])],\n  [modules=\"$withval\"]\n)\n\ndynmodules=\"pipe\"\nAC_ARG_WITH([dynmodules],\n  [AS_HELP_STRING([--with-dynmodules], [which backends to build for dynamic loading @<:@default=pipe@:>@])],\n  [dynmodules=\"$withval\"]\n)\n\nAC_SUBST([moduledirs])\nAC_SUBST([moduleobjects])\nAC_SUBST([modulelibs])\nAC_DEFINE_UNQUOTED([PDNS_MODULES], \"$modules\", [Built-in modules])\n\nAS_IF([test x\"$modules\" = \"xno\"], [modules=\"\"])\nAS_IF([test x\"$dynmodules\" = \"xno\"], [dynmodules=\"\"])\n\nfor a in $modules $dynmodules; do\n  case \"$a\" in\n    godbc)\n      PDNS_WITH_UNIXODBC\n      ;;\n    gmysql)\n      PDNS_WITH_MYSQL\n      ;;\n    gpgsql)\n      PDNS_WITH_POSTGRESQL\n      ;;\n    gsqlite3)\n      needsqlite3=yes\n      ;;\n    ldap)\n      PDNS_CHECK_LDAP\n      needldap=yes\n      ;;\n    remote)\n      AS_IF([test \"x$enable_unit_tests\" = \"xyes\"],\n        [PDNS_CHECK_CURL_PROGRAM]\n      )\n      have_remotebackend=yes\n      ;;\n    tinydns)\n      needcdb=yes\n      PDNS_CHECK_CDB\n      ;;\n    geoip)\n      PDNS_CHECK_GEOIP\n      ;;\n    lua*)\n      dnl Lua has been checked above\n      ;;\n    lmdb)\n      needlmdb=yes\n      PDNS_CHECK_LMDB\n      BOOST_SERIALIZATION\n      ;;\n  esac\ndone\n\nPDNS_ENABLE_REMOTEBACKEND_ZEROMQ\n\nPDNS_ENABLE_TOOLS\nPDNS_ENABLE_IXFRDIST\n\nPDNS_WITH_LUA_RECORDS\n\nAM_CONDITIONAL([LDAP], [test \"x$needldap\" = \"xyes\"])\n\nPDNS_CHECK_SQLITE3\nAM_CONDITIONAL([SQLITE3], [test \"x$needsqlite3\" = \"xyes\"])\n\nAM_CONDITIONAL([LMDB], [test \"x$needlmdb\" != \"x\"])\nAM_CONDITIONAL([HAVE_LMDB], [test \"x$LMDB_LIBS\" != \"x\"])\n\nAS_IF([test \"x$needlmdb\" = \"xyes\"], [\n  AS_IF([test \"$with_lmdb\" = \"no\"], [\n    AC_MSG_ERROR([--with-lmdb is set to 'no', but lmdb support is required])\n  ])\n  AS_IF([test \"x$HAVE_LMDB\" != \"x1\"], [\n    AC_MSG_ERROR([lmdb not found via pkg-config, please install lmdb or set --with-lmdb to your lmdb installation directory])\n  ])\n])\n\nAM_CONDITIONAL([CDB], [test \"x$needcdb\" != \"x\"])\nAM_CONDITIONAL([HAVE_CDB], [test \"x$CDB_LIBS\" != \"x\"])\n\nAS_IF([test \"x$needcdb\" = \"xyes\"], [\n  AS_IF([test \"x$HAVE_CDB\" != \"x1\"], [\n    AC_MSG_ERROR([cdb not found via pkg-config, please install cdb])\n  ])\n])\n\nfor a in $modules; do\n  AC_MSG_CHECKING([whether we can build module \"${a}\"])\n  if [[ -d \"$srcdir/modules/${a}backend\" ]]; then\n    AC_MSG_RESULT([yes])\n    moduledirs=\"$moduledirs ${a}backend\"\n\n    for b in `cat $srcdir/modules/${a}backend/OBJECTFILES`; do\n      moduleobjects=\"$moduleobjects ../modules/${a}backend/$b\"\n    done\n    modulelibs=\"$modulelibs `cat $srcdir/modules/${a}backend/OBJECTLIBS`\"\n  else\n    AC_MSG_RESULT([no])\n    AC_MSG_ERROR([Do not know how to build module \"$a\", \"$srcdir/modules/${a}backend\" does not exist! Please review --with-modules parameter for supported values.])\n  fi\ndone\n\nfor a in $dynmodules; do\n  AC_MSG_CHECKING([whether we can build dynamic module \"${a}\"])\n  if [[ -d \"$srcdir/modules/${a}backend\" ]]; then\n    AC_MSG_RESULT([yes])\n    moduledirs=\"$moduledirs ${a}backend\"\n  else\n    AC_MSG_RESULT([no])\n    AC_MSG_ERROR([Do not know how to build module \"$a\", \"$srcdir/modules/${a}backend\" does not exist! Please review --with-dynmodules parameter for supported values.])\n  fi\ndone\n\nAX_AVAILABLE_SYSTEMD\nAX_CHECK_SYSTEMD_FEATURES\nAM_CONDITIONAL([HAVE_SYSTEMD], [ test x\"$systemd\" = \"xy\" ])\n PDNS_WITH_SERVICE_USER([pdns])\n\nLDFLAGS=\"$RELRO_LDFLAGS $LDFLAGS\"\n\nCFLAGS=\"$PIE_CFLAGS $CFLAGS\"\nCXXFLAGS=\"$PIE_CFLAGS $CXXFLAGS\"\nAS_IF([test \"$ax_cxx_cv_filesystem_lib\" != \"none\"],\n [CXXFS_LIBS=\"-l$ax_cxx_cv_filesystem_lib\"],\n []\n)\nAC_SUBST([CXXFS_LIBS])\nPROGRAM_LDFLAGS=\"$PIE_LDFLAGS $PROGRAM_LDFLAGS $CXXFS_LIBS\"\nAC_SUBST([PROGRAM_LDFLAGS])\n\nPDNS_ENABLE_COVERAGE\nPDNS_INIT_AUTO_VARS\nPDNS_ENABLE_SANITIZERS\nPDNS_ENABLE_MALLOC_TRACE\nPDNS_ENABLE_LTO\n\nAC_SUBST(LIBS)\n\nAC_SUBST([AM_CPPFLAGS],\n  [\"AS_ESCAPE([-I$(top_builddir) -I$(top_srcdir)]) $THREADFLAGS $BOOST_CPPFLAGS\"]\n)\n\nAC_SUBST([YAHTTP_CFLAGS], ['-I$(top_srcdir)/ext/yahttp'])\nAC_SUBST([YAHTTP_LIBS], ['$(top_builddir)/ext/yahttp/yahttp/libyahttp.la'])\nAC_SUBST([IPCRYPT_CFLAGS], ['-I$(top_srcdir)/ext/ipcrypt'])\nAC_SUBST([IPCRYPT_LIBS], ['$(top_builddir)/ext/ipcrypt/libipcrypt.la'])\n\nCFLAGS=\"$SANITIZER_FLAGS $CFLAGS\"\nCXXFLAGS=\"$SANITIZER_FLAGS $CXXFLAGS\"\n\nCCVERSION=`$CC --version | head -1`\nCXXVERSION=`$CXX --version | head -1`\n\nAC_ARG_VAR(PACKAGEVERSION, [The version used in secpoll queries])\nAS_IF([test \"x$PACKAGEVERSION\" != \"x\"],\n  [AC_DEFINE_UNQUOTED([PACKAGEVERSION], \"$PACKAGEVERSION\", [Set to the package version used for secpoll])]\n)\n\nexport moduledirs moduleobjects modulelibs\n\nAM_CONDITIONAL([BINDBACKEND_DYNMODULE],     [echo $dynmodules | grep -w bind])\nAM_CONDITIONAL([GEOIPBACKEND_DYNMODULE],    [echo $dynmodules | grep -w geoip])\nAM_CONDITIONAL([GMYSQLBACKEND_DYNMODULE],   [echo $dynmodules | grep -w gmysql])\nAM_CONDITIONAL([GODBCBACKEND_DYNMODULE],    [echo $dynmodules | grep -w godbc])\nAM_CONDITIONAL([GPGSQLBACKEND_DYNMODULE],   [echo $dynmodules | grep -w gpgsql])\nAM_CONDITIONAL([GSQLITE3BACKEND_DYNMODULE], [echo $dynmodules | grep -w gsqlite3])\nAM_CONDITIONAL([LDAPBACKEND_DYNMODULE],     [echo $dynmodules | grep -w ldap])\nAM_CONDITIONAL([LMDBBACKEND_DYNMODULE],     [echo $dynmodules | grep -w lmdb])\nAM_CONDITIONAL([LUA2BACKEND_DYNMODULE],     [echo $dynmodules | grep -w lua2])\nAM_CONDITIONAL([PIPEBACKEND_DYNMODULE],     [echo $dynmodules | grep -w pipe])\nAM_CONDITIONAL([REMOTEBACKEND_DYNMODULE],   [echo $dynmodules | grep -w remote])\nAM_CONDITIONAL([TINYDNSBACKEND_DYNMODULE],  [echo $dynmodules | grep -w tinydns])\n\nAC_CONFIG_FILES([\n  Makefile\n  modules/Makefile\n  pdns/Makefile\n  codedocs/Makefile\n  docs/Makefile\n  ext/Makefile\n  ext/arc4random/Makefile\n  ext/ipcrypt/Makefile\n  ext/yahttp/Makefile\n  ext/yahttp/yahttp/Makefile\n  ext/json11/Makefile\n  modules/bindbackend/Makefile\n  modules/geoipbackend/Makefile\n  modules/gmysqlbackend/Makefile\n  modules/godbcbackend/Makefile\n  modules/gpgsqlbackend/Makefile\n  modules/gsqlite3backend/Makefile\n  modules/ldapbackend/Makefile\n  modules/lmdbbackend/Makefile\n  modules/lua2backend/Makefile\n  modules/pipebackend/Makefile\n  modules/remotebackend/Makefile\n  modules/tinydnsbackend/Makefile\n])\nAC_OUTPUT\n\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Configuration summary])\nAC_MSG_NOTICE([=====================])\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Configured with: $pdns_configure_args])\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([CC: $CC ($CCVERSION)])\nAC_MSG_NOTICE([CXX: $CXX ($CXXVERSION)])\nAC_MSG_NOTICE([LD: $LD])\nAC_MSG_NOTICE([CFLAGS: $CFLAGS])\nAC_MSG_NOTICE([CPPFLAGS: $CPPFLAGS])\nAC_MSG_NOTICE([CXXFLAGS: $CXXFLAGS])\nAC_MSG_NOTICE([LDFLAGS: $LDFLAGS])\nAC_MSG_NOTICE([LIBS: $LIBS])\nAC_MSG_NOTICE([BOOST_CPPFLAGS: $BOOST_CPPFLAGS])\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Extras enabled])\nAC_MSG_NOTICE([--------------])\nAS_IF([test \"x$enable_tools\" = \"xyes\"],\n  [AC_MSG_NOTICE([Tools: yes])],\n  [AC_MSG_NOTICE([Tools: no])]\n)\nAS_IF([test \"x$enable_ixfrdist\" = \"xyes\"],\n  [AC_MSG_NOTICE([ixfrdist: yes])],\n  [AC_MSG_NOTICE([ixfrdist: no])]\n)\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Server Features enabled])\nAC_MSG_NOTICE([-----------------------])\nAC_MSG_NOTICE([Built-in modules: $modules])\nAC_MSG_NOTICE([Dynamic modules: $dynmodules])\nAC_MSG_NOTICE([])\nAS_IF([test \"x$libcrypto_ecdsa\" = \"xyes\"],\n  [AC_MSG_NOTICE([OpenSSL ecdsa: yes])],\n  [AC_MSG_NOTICE([OpenSSL ecdsa: no])]\n)\nAS_IF([test \"x$LIBSODIUM_LIBS\" != \"x\" || test \"x$libcrypto_ed25519\" = \"xyes\"],\n  [AC_MSG_NOTICE([ed25519: yes])],\n  [AC_MSG_NOTICE([ed25519: no])]\n)\nAS_IF([test \"x$libcrypto_ed448\" = \"xyes\"],\n  [AC_MSG_NOTICE([ed448: yes])],\n  [AC_MSG_NOTICE([ed448: no])]\n)\nAS_IF([test \"x$needsqlite3\" != \"x\"],\n  [AC_MSG_NOTICE([SQLite3: yes])],\n  [AC_MSG_NOTICE([SQLite3: no])]\n)\nAS_IF([test \"x$LUAPC\" != \"x\"],\n  [AC_MSG_NOTICE([Lua: $LUAPC])],\n  [AS_IF([test \"x$LUAJITPC\" != \"x\"],\n    [AC_MSG_NOTICE([LuaJit: $LUAJITPC])],\n    [AC_MSG_NOTICE([Lua/LuaJit: no])])\n])\nAS_IF([test \"x$enable_experimental_pkcs11\" = \"xyes\"],\n  [AC_MSG_NOTICE([PKCS-11: yes])]\n)\nAS_IF([test \"x$enable_experimental_gss_tsig\" = \"xyes\"],\n  [AC_MSG_NOTICE([GSS-TSIG: yes])]\n)\nAS_IF([test \"x$enable_lua_records\" = \"xyes\"],\n  [AC_MSG_NOTICE([LUA records: yes])]\n)\nAS_IF([test \"x$systemd\" != \"xn\"],\n  [AC_MSG_NOTICE([systemd: yes])],\n  [AC_MSG_NOTICE([systemd: no])]\n)\nAS_IF([test \"x$enable_remotebackend_zeromq\" != \"xno\"],\n  [AC_MSG_NOTICE([ZeroMQ connector for remotebackend: yes])]\n)\nAS_IF([test -n \"$GEOIP_LIBS\"],\n  [AC_MSG_NOTICE([libgeoip for geoipbackend: yes])]\n)\nAS_IF([test -n \"$MMDB_LIBS\"],\n  [AC_MSG_NOTICE([libmaxminddb for geoipbackend: yes])]\n)\nAC_MSG_NOTICE([])\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.64453125,
          "content": "---\nversion: '2.0'\nservices:\n  recursor:\n    build:\n      context: .\n      dockerfile: Dockerfile-recursor\n    environment:\n      - PDNS_RECURSOR_API_KEY\n    ports:\n      - \"2053:53\"\n      - \"2053:53/udp\"\n      - \"8082:8082\"\n\n  dnsdist:\n    build:\n      context: .\n      dockerfile: Dockerfile-dnsdist\n    environment:\n      - DNSDIST_API_KEY\n    links:\n      - recursor\n      - auth\n    ports:\n      - \"3053:53\"\n      - \"3053:53/udp\"\n      - \"5199:5199\"\n      - \"8083:8083\"\n\n  auth:\n    build:\n      context: .\n      dockerfile: Dockerfile-auth\n    environment:\n      - PDNS_AUTH_API_KEY\n    ports:\n      - \"1053:53\"\n      - \"1053:53/udp\"\n      - \"8081:8081\"\n"
        },
        {
          "name": "dockerdata",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzing",
          "type": "tree",
          "content": null
        },
        {
          "name": "invoke.yaml",
          "type": "blob",
          "size": 0.0703125,
          "content": "run:\n    echo: true\n    echo_format: \"::endgroup::\\n::group::{command}\"\n"
        },
        {
          "name": "lgtm.yml",
          "type": "blob",
          "size": 0.9814453125,
          "content": "path_classifiers:\n  test: \"regression-tests*\"\n  library:\n  - \"ext\"\n  - exclude: ext/luawrapper\n  - exclude: ext/yahttp\n  - \"docs\"\n  - \"pdns/recursordist/html/js\"\n  - \"pdns/dnsdistdist/src_js\"\n  - \"pdns/dnsdistdist/html/js\"\nextraction:\n  cpp:\n    configure:\n      command:\n      - \"pushd pdns/dnsdistdist\"\n      - \"sed -i '/^dist_man_MANS/d' Makefile.am\"\n      - \"autoreconf -vi && ./configure\"\n      - \"popd\"\n      - \"pushd pdns/recursordist/\"\n      - \"sed -i '/^dist_man_MANS/d' Makefile.am\"\n      - \"autoreconf -vi && ./configure\"\n      - \"popd\"\n      - \"sed -i 's/codedocs docs//' Makefile.am\"\n      - \"autoreconf -vi\"\n      - \"./configure --with-modules='bind gsqlite3 gmysql gpgsql ldap'\"\n      - \"pushd pdns\"\n      - \"touch .venv api-swagger.yaml api-swagger.json\"\n      - \"popd\"\n    index:\n      build_command:\n      - \"pushd pdns/dnsdistdist\"\n      - \"make\"\n      - \"popd\"\n      - \"pushd pdns/recursordist\"\n      - \"make\"\n      - \"popd\"\n      - \"make\"\n  python:\n    python_setup:\n      version: 3\n"
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 33.5654296875,
          "content": "project(\n  'pdns',\n  ['c', 'cpp'],\n  version: run_command('builder-support' / 'gen-version', check: true).stdout().strip(),\n  license: 'GPLv2',\n  license_files: 'NOTICE',\n  meson_version: '>= 1.2.1',\n  default_options: [\n    'buildtype=debugoptimized',\n    'warning_level=2',          # TODO Move this to 3 to enable -Wpedantic\n    'cpp_std=c++17',\n  ],\n)\n\nproduct_source_dir = meson.current_source_dir()\nproduct_build_dir = meson.current_build_dir()\nsummary('Source Dir', product_source_dir, section: 'Build')\nsummary('Build Dir', product_build_dir, section: 'Build')\n\n# Create the configuration object and dependencies list.\nconf = configuration_data()\n\n# Feature detection and system configuration\nsubdir('meson' / 'config')                  # Config\nsubdir('meson' / 'version')                 # Generate version define\nsubdir('meson' / 'compiler-setup')          # Common compiler setup\nsubdir('meson' / 'summary')                 # Print a system/project summary\nsubdir('meson' / 'sysconfdir')              # Sysconfdir\nsubdir('meson' / 'libdir')                  # Libdir\nsubdir('meson' / 'platform')                # Platform detection\nsubdir('meson' / 'timet-size')              # Check the size of time_t\nsubdir('meson' / 'timet-sign')              # Check the sign of time_t\nsubdir('meson' / 'atomics')                 # Check atomics support\nsubdir('meson' / 'pthread-headers')         # Check pthread headers\nsubdir('meson' / 'pthread-setname')         # Pthread setname madness\nsubdir('meson' / 'strerror')                # Strerror_r\nsubdir('meson' / 'lua')                     # Lua\nsubdir('meson' / 'lua-records')             # Lua-based Records\nsubdir('meson' / 'hardening')               # Hardening\nsubdir('meson' / 'kiss-rng')                # Unsafe KISS RNG\nsubdir('meson' / 'net-libs')                # Network Libraries\nsubdir('meson' / 'tm-gmtoff')               # Check for tm_gmtoff field in struct tm\nsubdir('meson' / 'mmap')                    # Check for mmap\nsubdir('meson' / 'libsodium')               # Libsodium-based signers\nsubdir('meson' / 'libcrypto')               # OpenSSL-based signers\nsubdir('meson' / 'libssl')                  # OpenSSL libssl\nsubdir('meson' / 'gnutls')                  # GnuTLS\nsubdir('meson' / 'dot')                     # DNS over TLS\nsubdir('meson' / 'ipcipher')                # IPCipher\nsubdir('meson' / 'clock-gettime')           # Clock_gettime\nsubdir('meson' / 'boost')                   # Boost\nsubdir('meson' / 'boost-program-options')   # Boost Program Options Library\nsubdir('meson' / 'boost-test')              # Boost Testing Library\nsubdir('meson' / 'boost-serialization')     # Boost Serialization Library\nsubdir('meson' / 'reproducible')            # Reproducible Builds\nsubdir('meson' / 'dlopen')                  # dlopen\nsubdir('meson' / 'verbose-logging')         # Verbose Logging\nsubdir('meson' / 'pkcs11')                  # PKCS11\nsubdir('meson' / 'gss-tsig')                # GSS-TSIG\nsubdir('meson' / 'libsystemd')              # Systemd notification\nsubdir('meson' / 'systemd')                 # Systemd and unit file handling\nsubdir('meson' / 'code-coverage')           # Code coverage\nsubdir('meson' / 'auto-var-init')           # Automatic Variable Initialization\nsubdir('meson' / 'sanitizers')              # Sanitizers\nsubdir('meson' / 'malloc-trace')            # Malloc-trace\nsubdir('meson' / 'socket-dir')              # Socket Dir\nsubdir('meson' / 'various-functions')       # Various Functions\nsubdir('meson' / 'various-headers')         # Various Headers\nsubdir('meson' / 'yaml-cpp')                # YAML C++\nsubdir('meson' / 'sqlite3')                 # Sqlite3\nsubdir('meson' / 'lmdb')                    # LMDB\nsubdir('meson' / 'mysql')                   # MySQL\nsubdir('meson' / 'odbc')                    # ODBC\nsubdir('meson' / 'pgsql')                   # PostgreSQL\nsubdir('meson' / 'ldap')                    # LDAP\nsubdir('meson' / 'prog-curl')               # cURL Program\nsubdir('meson' / 'zeromq')                  # ZeroMQ\nsubdir('meson' / 'cdb')                     # CDB\nsubdir('meson' / 'geoip')                   # GeoIP\nsubdir('meson' / 'mmdb')                    # MaxMindDB\nsubdir('meson' / 'cxx-fs')                  # C++ stdlib Filesystem Module\n\ncommon_sources = []\n\nfs = import('fs')\nsrc_dir = fs.is_dir('pdns') ? 'pdns' : ''\ndocs_dir = 'docs'\n# Toplevel includes\ndep_pdns = declare_dependency(include_directories: include_directories('.', src_dir))\n\n# Ext\nsubdir('ext' / 'arc4random')\nsubdir('ext' / 'ipcrypt')\nsubdir('ext' / 'json11')\nsubdir('ext' / 'luawrapper')\nsubdir('ext' / 'protozero')\nsubdir('ext' / 'yahttp')\n\nlibpdns_gettime = declare_dependency(\n  link_whole: static_library(\n    'pdns-gettime',\n    src_dir / 'gettime.cc',\n    src_dir / 'gettime.hh',\n    dependencies: dep_rt,\n  )\n)\n\nlibpdns_uuidutils = declare_dependency(\n  link_whole: static_library(\n    'pdns-uuidutils',\n    src_dir / 'uuid-utils.cc',\n    src_dir / 'uuid-utils.hh',\n    dependencies: [dep_rt, dep_boost],\n  )\n)\n\nif get_option('module-lmdb') != 'disabled'\n  subdir('ext' / 'lmdb-safe')\nendif\n\ndeps = [\n  dep_pdns,\n  dep_platform,\n  dep_atomics,\n  dep_threads,\n  dep_lua,\n  dep_lua_records,\n  dep_netlibs,\n  dep_libsodium,\n  dep_libcrypto,\n  dep_libssl,\n  dep_gnutls,\n  dep_boost,\n  dep_boost_program_options,\n  dep_dlopen,\n  dep_pkcs11,\n  dep_gss_tsig,\n  dep_systemd,\n  dep_arc4random,\n  dep_ipcrypt,\n  dep_json11,\n  dep_luawrapper,\n  dep_protozero,\n  dep_yahttp,\n  dep_yaml_cpp,\n  dep_sqlite3,\n  dep_lmdb,\n  dep_boost_serialization,\n  dep_mysql,\n  dep_odbc,\n  dep_pgsql,\n  dep_ldap,\n  dep_cdb,\n  dep_geoip,\n  dep_mmdb,\n  dep_cxx_fs,\n  dep_boost_test,\n]\n\nif dep_systemd.found()\n  systemd_service_conf = configuration_data()\n  systemd_service_conf.set('BinDir', get_option('prefix') / get_option('bindir'))\n  systemd_service_conf.set('StaticBinDir', get_option('prefix') / get_option('sbindir'))\n  systemd_service_user = get_option('systemd-service-user')\n  systemd_service_group = get_option('systemd-service-group')\n  systemd_service_conf.set('ServiceUser', systemd_service_user)\n  systemd_service_conf.set('ServiceGroup', systemd_service_group)\n  summary('Service User', systemd_service_user, section: 'Systemd')\n  summary('Service Group', systemd_service_group, section: 'Systemd')\n\n  # ProtectSystem=full will disallow write access to /etc and /usr, possibly not being\n  # able to write slaved-zones into sqlite3 or zonefiles.\n  systemd_service_conf.set(\n    'ProtectSystem', have_systemd_protect_system ? 'ProtectSystem=full' : '',\n  )\n  systemd_service_conf.set(\n    'SystemCallArchitectures',\n    have_systemd_system_call_architectures ? 'SystemCallArchitectures=native' : '',\n  )\n  systemd_system_call_filter = '~ @clock @debug @module @mount @raw-io @reboot @swap @cpu-emulation @obsolete'\n  systemd_service_conf.set(\n    'SystemCallFilter',\n    have_systemd_system_call_filter ? 'SystemCallFilter=' + systemd_system_call_filter : '',\n  )\n  systemd_service_conf.set(\n    'ProtectProc',\n    have_systemd_protect_proc ? 'ProtectProc=invisible' : '',\n  )\n\n  systemd_features = {\n    'LockPersonality': have_systemd_lock_personality,\n    'PrivateDevices': have_systemd_private_devices,\n    'PrivateTmp': have_systemd_private_tmp,\n    'PrivateUsers': false, # Setting it to true prevents us from opening our sockets.\n    'ProtectClock': have_systemd_protect_clock,\n    'ProtectControlGroups': have_systemd_protect_control_groups,\n    'ProtectHome': have_systemd_protect_home,\n    'ProtectHostname': have_systemd_protect_hostname,\n    'ProtectKernelLogs': have_systemd_protect_kernel_logs,\n    'ProtectKernelModules': have_systemd_protect_kernel_modules,\n    'ProtectKernelTunables': have_systemd_protect_kernel_tunables,\n    'RestrictNamespaces': have_systemd_restrict_namespaces,\n    'RestrictRealtime': have_systemd_restrict_realtime,\n    'RestrictSUIDSGID': have_systemd_restrict_suidsgid,\n    'PrivateIPC': have_systemd_private_ipc,\n    'RemoveIPC': have_systemd_remove_ipc,\n  }\n\n  foreach feature, enable_it: systemd_features\n    systemd_service_conf.set(feature, enable_it ? feature + '=true': '')\n  endforeach\n\n  auth_service_conf = configuration_data()\n  auth_service_conf.merge_from(systemd_service_conf)\n  # Disabled, it breaks LuaJIT.\n  auth_service_conf.set(\n    'MemoryDenyWriteExecute',\n    have_systemd_memory_deny_write_execute ? 'MemoryDenyWriteExecute=false' : '',\n  )\n  auth_service_conf.set(\n    'RestrictAddressFamilies',\n    have_systemd_restrict_address_families ? 'RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6' : '',\n  )\n\n  enable_socket_dir = (not have_systemd_with_runtime_dir_env) and have_systemd_percent_t\n\n  auth_service_conf_general = configuration_data()\n  auth_service_conf_general.merge_from(auth_service_conf)\n  auth_service_conf_general.set('Description', 'PowerDNS Authoritative Server')\n  auth_service_conf_general.set('ConfigName', '')\n  auth_service_conf_general.set('SocketDir', enable_socket_dir ? '--socket-dir=%t/pdns-auth' : '')\n  auth_service_conf_general.set('SyslogIdentifier', 'pdns-auth')\n  auth_service_conf_general.set('RuntimeDirectory', 'pdns-auth')\n\n  configure_file(\n    input: 'auth' / 'systemd' / 'pdns-auth.service.in',\n    output: 'pdns-auth.service',\n    configuration: auth_service_conf_general,\n  )\n\n  auth_service_conf_instance = configuration_data()\n  auth_service_conf_instance.merge_from(auth_service_conf)\n  auth_service_conf_instance.set('Description', 'PowerDNS Authoritative Server %i')\n  auth_service_conf_instance.set('ConfigName', '--config-name=%i')\n  auth_service_conf_instance.set('SocketDir', enable_socket_dir ? '--socket-dir=%t/pdns-auth-%i' : '')\n  auth_service_conf_instance.set('SyslogIdentifier', 'pdns-auth-%i')\n  auth_service_conf_instance.set('RuntimeDirectory', have_systemd_percent_t ? 'pdns-auth-%i' : 'pdns-auth')\n\n  configure_file(\n    input: 'auth' / 'systemd' / 'pdns-auth.service.in',\n    output: 'pdns-auth@.service',\n    configuration: auth_service_conf_instance,\n  )\n\n  if get_option('tools-ixfrdist')\n    ixfrdist_service_conf = configuration_data()\n    ixfrdist_service_conf.merge_from(systemd_service_conf)\n    ixfrdist_service_conf.set(\n      'MemoryDenyWriteExecute',\n      have_systemd_memory_deny_write_execute ? 'MemoryDenyWriteExecute=true' : '',\n    )\n    ixfrdist_service_conf.set(\n      'RestrictAddressFamilies',\n      have_systemd_restrict_address_families ? 'RestrictAddressFamilies=AF_INET AF_INET6' : '',\n    )\n\n    ixfrdist_service_conf_general = configuration_data()\n    ixfrdist_service_conf_general.merge_from(ixfrdist_service_conf)\n    ixfrdist_service_conf_general.set('Description', 'PowerDNS IXFR Distributor')\n    ixfrdist_service_conf_general.set('Config', '')\n\n    configure_file(\n      input: 'auth' / 'systemd' / 'ixfrdist.service.in',\n      output: 'ixfrdist.service',\n      configuration: ixfrdist_service_conf_general,\n    )\n\n    ixfrdist_service_conf_instance = configuration_data()\n    ixfrdist_service_conf_instance.merge_from(ixfrdist_service_conf)\n    ixfrdist_service_conf_instance.set('Description', 'PowerDNS IXFR Distributor %i')\n    ixfrdist_service_conf_instance.set('Config', '--config=' + get_option('sysconfdir') + '/ixfrdist-%i.yml')\n\n    configure_file(\n      input: 'auth' / 'systemd' / 'ixfrdist.service.in',\n      output: 'ixfrdist@.service',\n      configuration: ixfrdist_service_conf_instance,\n    )\n  endif\nendif\n\nlibpdns_bindlexer_source = src_dir / 'bindlexer.l'\nlibpdns_bindlexer_gen    = src_dir / 'bindlexer.c'\nif not fs.is_file(libpdns_bindlexer_gen)\n  flex = find_program('flex', required: true)\n\n  summary('Flex', flex.found(), bool_yn: true, section: 'BIND Parser')\n  summary('Flex Path', flex.full_path(), section: 'BIND Parser')\n  summary('Flex Version', flex.version(), section: 'BIND Parser')\n\n  flex_generator = generator(\n    flex,\n    output: '@BASENAME@.c',\n    arguments: ['--case-insensitive', '--outfile=@OUTPUT@', '@INPUT@'],\n  )\n\n  libpdns_bindlexer_gen = flex_generator.process(libpdns_bindlexer_source)\nendif\n\nlibpdns_bindparser_source     = src_dir / 'bindparser.yy'\nlibpdns_bindparser_gen        = src_dir / 'bindparser.cc'\nlibpdns_bindparser_gen_header = src_dir / 'bindparser.hh'\nif not fs.is_file(libpdns_bindparser_gen) and not fs.is_file(libpdns_bindparser_gen_header)\n  bison = find_program('bison', required: false)\n  if not bison.found()\n    bison = find_program('yacc', required: true)\n  endif\n\n  summary('Bison/YACC', bison.found(), bool_yn: true, section: 'BIND Parser')\n  summary('Bison/YACC Path', bison.full_path(), section: 'BIND Parser')\n  summary('Bison/YACC Version', bison.version(), section: 'BIND Parser')\n\n  bison_generator = generator(\n    bison,\n    output: ['@BASENAME@.cc', '@BASENAME@.hh', '@BASENAME@.output'],\n    arguments: ['-d', '--verbose', '--debug', '--output=@OUTPUT0@', '@INPUT@'],\n  )\n\n  libpdns_bindparser_gen = bison_generator.process(libpdns_bindparser_source)\nendif\n\nlibpdns_dnslabeltext_source = src_dir / 'dnslabeltext.rl'\nlibpdns_dnslabeltext_gen    = src_dir / 'dnslabeltext.cc'\nif not fs.is_file(libpdns_dnslabeltext_gen)\n  ragel = find_program('ragel', required: true)\n\n  summary('Ragel', ragel.found(), bool_yn: ragel.found(), section: 'DNS Labels')\n  summary('Ragel Path', ragel.full_path(), section: 'DNS Labels')\n  summary('Ragel Version', ragel.version(), section: 'DNS Labels')\n\n  ragel_generator = generator(\n    ragel,\n    output: '@BASENAME@.cc',\n    arguments: ['@INPUT@', '-o', '@OUTPUT@'],\n  )\n\n  libpdns_dnslabeltext_gen = ragel_generator.process(libpdns_dnslabeltext_source)\nendif\n\nlibpdns_apidocfiles_source = 'docs' / 'http-api' / 'swagger' / 'authoritative-api-swagger.yaml'\nlibpdns_apidocfiles_gen    = src_dir / 'apidocfiles.h'\ngenerate_api_swagger_py    = src_dir / 'generate-api-swagger.py'\nif not fs.is_file(libpdns_apidocfiles_gen)\n  py = import('python')\n  python = py.find_installation('python3', modules: 'yaml', required: true)\n\n  summary('Python', python.found(), bool_yn: true, section: 'Swagger API')\n  summary('Path', python.full_path(), section: 'Swagger API')\n  summary('Version', python.version(), section: 'Swagger API')\n\n  libpdns_apidocfiles_gen = custom_target(\n    'pdns-apidocfiles-h',\n    command: [python, '@INPUT0@', '@INPUT1@'],\n    input: [generate_api_swagger_py, libpdns_apidocfiles_source],\n    output: 'apidocfiles.h',\n    capture: true,\n  )\nendif\n\nlibpdns_bind_dnssec_schema_source = src_dir / 'bind-dnssec.schema.sqlite3.sql'\nlibpdns_bind_dnssec_schema_gen    = src_dir / 'bind-dnssec.schema.sqlite3.sql.h'\ngenerate_bind_dnssec_schema_py    = src_dir / 'generate-bind-dnssec-schema.py'\nif not fs.is_file(libpdns_bind_dnssec_schema_gen)\n  py = import('python')\n  python = py.find_installation('python3', required: true)\n\n  summary('Python', python.found(), bool_yn: true, section: 'BIND DNSSEC Schema')\n  summary('Path', python.full_path(), section: 'BIND DNSSEC Schema')\n  summary('Version', python.version(), section: 'BIND DNSSEC Schema')\n\n  libpdns_bind_dnssec_schema_gen = custom_target(\n    'pdns-bind-dnssec-schema',\n    command: [python, '@INPUT0@', '@INPUT1@'],\n    input: [generate_bind_dnssec_schema_py, libpdns_bind_dnssec_schema_source],\n    output: 'bind-dnssec.schema.sqlite3.sql.h',\n    capture: true,\n  )\nendif\n\nconditional_sources = {\n  'mplexer-sunos-devpoll': {\n    'sources': [\n      src_dir / 'devpollmplexer.cc',\n      src_dir / 'portsmplexer.cc',\n    ],\n    'condition': have_sunos,\n  },\n  'mplexer-linux-epoll': {\n    'sources': [src_dir / 'epollmplexer.cc'],\n    'condition': have_linux,\n  },\n  'mplexer-bsd-kqueue': {\n    'sources': [src_dir / 'kqueuemplexer.cc'],\n    'condition': have_openbsd or have_freebsd,\n  },\n  'minicurl': {\n    'sources': [\n      src_dir / 'minicurl.cc',\n      src_dir / 'minicurl.hh',\n    ],\n    'condition': dep_lua_records.found() or dep_libcurl.found(),\n  },\n  'lua-record': {\n    'sources': [src_dir / 'lua-record.cc'],\n    'condition': dep_lua_records.found(),\n  },\n  'standalone-fuzz-target-runner': {\n    'sources': [src_dir / 'standalone_fuzz_target_runner.cc'],\n    'condition': get_option('fuzz-targets'),\n  },\n}\n\nforeach name, info: conditional_sources\n  if info['condition']\n    common_sources += files(info['sources'])\n  endif\nendforeach\n\n# Conditional sources that need to be separated into standalone libraries for special\n# linking without implicitly getting rid of symbols.\nlibpdns_signers_sodium = dependency('', required: false)\nif dep_libsodium.found()\n  libpdns_signers_sodium = declare_dependency(\n    link_whole: static_library(\n      'pdns-signers-sodium',\n      sources: files(src_dir / 'sodiumsigners.cc'),\n      dependencies: deps,\n    )\n  )\nendif\n\nlibpdns_signers_pkcs11 = dependency('', required: false)\nif dep_pkcs11.found()\n  libpdns_signers_pkcs11 = declare_dependency(\n    link_whole: static_library(\n      'pdns-signers-pkcs11',\n      sources: files(src_dir / 'pkcs11signers.cc', src_dir / 'pkcs11signers.hh'),\n      dependencies: dep_pkcs11,\n    )\n  )\nendif\n\n# This needs to be link_whole'd because it's needed by auth backends.\nlibpdns_ssqlite3 = dependency('', required: false)\nif dep_sqlite3.found()\n  libpdns_ssqlite3 = declare_dependency(\n    link_whole: static_library(\n      'pdns-ssqlite3',\n      sources: files(src_dir / 'ssqlite3.cc', src_dir / 'ssqlite3.hh'),\n      dependencies: deps,\n    )\n  )\nendif\n\nlibpdns_signers_openssl = declare_dependency(\n  link_whole: static_library(\n    'pdns-signers-openssl',\n    sources: files(src_dir / 'opensslsigners.cc', src_dir / 'opensslsigners.hh'),\n    dependencies: deps,\n  )\n)\n\ncommon_sources += files(\n  src_dir / 'arguments.cc',\n  src_dir / 'arguments.hh',\n  src_dir / 'auth-caches.cc',\n  src_dir / 'auth-caches.hh',\n  src_dir / 'auth-carbon.cc',\n  src_dir / 'auth-catalogzone.cc',\n  src_dir / 'auth-catalogzone.hh',\n  src_dir / 'auth-main.hh',\n  src_dir / 'auth-packetcache.cc',\n  src_dir / 'auth-packetcache.hh',\n  src_dir / 'auth-primarycommunicator.cc',\n  src_dir / 'auth-querycache.cc',\n  src_dir / 'auth-querycache.hh',\n  src_dir / 'auth-secondarycommunicator.cc',\n  src_dir / 'auth-zonecache.cc',\n  src_dir / 'auth-zonecache.hh',\n  src_dir / 'axfr-retriever.cc',\n  src_dir / 'axfr-retriever.hh',\n  src_dir / 'backends' / 'gsql' / 'gsqlbackend.cc', # TODO Move to a separate module.\n  src_dir / 'backends' / 'gsql' / 'gsqlbackend.hh', # TODO Move to a separate module.\n  src_dir / 'backends' / 'gsql' / 'ssql.hh',        # TODO Move to a separate module.\n  src_dir / 'base32.cc',\n  src_dir / 'base32.hh',\n  src_dir / 'base64.cc',\n  src_dir / 'base64.hh',\n  src_dir / 'bindparserclasses.hh',\n  src_dir / 'burtle.hh',\n  src_dir / 'cachecleaner.hh',\n  src_dir / 'circular_buffer.hh',\n  src_dir / 'comment.hh',\n  src_dir / 'communicator.cc',\n  src_dir / 'communicator.hh',\n  src_dir / 'coverage.cc',\n  src_dir / 'coverage.hh',\n  src_dir / 'credentials.cc',\n  src_dir / 'credentials.hh',\n  src_dir / 'dbdnsseckeeper.cc',\n  src_dir / 'digests.hh',\n  src_dir / 'distributor.hh',\n  src_dir / 'dns.cc',\n  src_dir / 'dns.hh',\n  src_dir / 'dns_random.hh',\n  src_dir / 'dnsbackend.cc',\n  src_dir / 'dnsbackend.hh',\n  src_dir / 'dnsname.cc',\n  src_dir / 'dnsname.hh',\n  src_dir / 'dnspacket.cc',\n  src_dir / 'dnspacket.hh',\n  src_dir / 'dnsparser.cc',\n  src_dir / 'dnsparser.hh',\n  src_dir / 'dnsproxy.cc',\n  src_dir / 'dnsproxy.hh',\n  src_dir / 'dnsrecords.cc',\n  src_dir / 'dnsrecords.hh',\n  src_dir / 'dnssecinfra.cc',\n  src_dir / 'dnssecinfra.hh',\n  src_dir / 'dnsseckeeper.hh',\n  src_dir / 'dnssecsigner.cc',\n  src_dir / 'dnswriter.cc',\n  src_dir / 'dnswriter.hh',\n  src_dir / 'dynhandler.cc',\n  src_dir / 'dynhandler.hh',\n  src_dir / 'dynlistener.cc',\n  src_dir / 'dynlistener.hh',\n  src_dir / 'dynmessenger.cc',\n  src_dir / 'dynmessenger.hh',\n  src_dir / 'ednscookies.cc',\n  src_dir / 'ednscookies.hh',\n  src_dir / 'ednsoptions.cc',\n  src_dir / 'ednsoptions.hh',\n  src_dir / 'ednssubnet.cc',\n  src_dir / 'ednssubnet.hh',\n  src_dir / 'gss_context.cc',\n  src_dir / 'gss_context.hh',\n  src_dir / 'histogram.hh',\n  src_dir / 'ipcipher.cc',\n  src_dir / 'ipcipher.hh',\n  src_dir / 'iputils.cc',\n  src_dir / 'iputils.hh',\n  src_dir / 'ixfr.cc',\n  src_dir / 'ixfr.hh',\n  src_dir / 'json.cc',\n  src_dir / 'json.hh',\n  src_dir / 'lock.hh',\n  src_dir / 'logger.cc',\n  src_dir / 'logger.hh',\n  src_dir / 'logging.hh',\n  src_dir / 'lua-auth4.cc',\n  src_dir / 'lua-auth4.hh',\n  src_dir / 'lua-base4.cc',\n  src_dir / 'lua-base4.hh',\n  src_dir / 'misc.cc',\n  src_dir / 'misc.hh',\n  src_dir / 'nameserver.cc',\n  src_dir / 'nameserver.hh',\n  src_dir / 'namespaces.hh',\n  src_dir / 'noinitvector.hh',\n  src_dir / 'nsecrecords.cc',\n  src_dir / 'packetcache.hh',\n  src_dir / 'packethandler.cc',\n  src_dir / 'packethandler.hh',\n  src_dir / 'pdnsexception.hh',\n  src_dir / 'proxy-protocol.cc',\n  src_dir / 'proxy-protocol.hh',\n  src_dir / 'qtype.cc',\n  src_dir / 'qtype.hh',\n  src_dir / 'query-local-address.cc',\n  src_dir / 'query-local-address.hh',\n  src_dir / 'rcpgenerator.cc',\n  src_dir / 'rcpgenerator.hh',\n  src_dir / 'resolver.cc',\n  src_dir / 'resolver.hh',\n  src_dir / 'responsestats-auth.cc',\n  src_dir / 'responsestats.cc',\n  src_dir / 'responsestats.hh',\n  src_dir / 'rfc2136handler.cc',\n  src_dir / 'secpoll-auth.cc',\n  src_dir / 'secpoll-auth.hh',\n  src_dir / 'secpoll.cc',\n  src_dir / 'secpoll.hh',\n  src_dir / 'serialtweaker.cc',\n  src_dir / 'sha.hh',\n  src_dir / 'shuffle.cc',\n  src_dir / 'shuffle.hh',\n  src_dir / 'signingpipe.cc',\n  src_dir / 'signingpipe.hh',\n  src_dir / 'sillyrecords.cc',\n  src_dir / 'sstuff.hh',\n  src_dir / 'stat_t.hh',\n  src_dir / 'statbag.cc',\n  src_dir / 'statbag.hh',\n  src_dir / 'stubresolver.cc',\n  src_dir / 'stubresolver.hh',\n  src_dir / 'svc-records.cc',\n  src_dir / 'svc-records.hh',\n  src_dir / 'tcpreceiver.cc',\n  src_dir / 'tcpreceiver.hh',\n  src_dir / 'threadname.cc',\n  src_dir / 'threadname.hh',\n  src_dir / 'tkey.cc',\n  src_dir / 'trusted-notification-proxy.cc',\n  src_dir / 'trusted-notification-proxy.hh',\n  src_dir / 'tsigutils.cc',\n  src_dir / 'tsigutils.hh',\n  src_dir / 'tsigverifier.cc',\n  src_dir / 'tsigverifier.hh',\n  src_dir / 'ueberbackend.cc',\n  src_dir / 'ueberbackend.hh',\n  src_dir / 'unix_semaphore.cc',\n  src_dir / 'unix_utility.cc',\n  src_dir / 'utility.hh',\n  src_dir / 'validate.hh',\n  src_dir / 'version.cc',\n  src_dir / 'version.hh',\n  src_dir / 'webserver.cc',\n  src_dir / 'webserver.hh',\n  src_dir / 'ws-api.cc',\n  src_dir / 'ws-api.hh',\n  src_dir / 'ws-auth.cc',\n  src_dir / 'ws-auth.hh',\n  src_dir / 'zonemd.cc',\n  src_dir / 'zonemd.hh',\n  src_dir / 'zoneparser-tng.cc',\n  src_dir / 'zoneparser-tng.hh',\n)\n\nlibpdns_bindparser = declare_dependency(\n  link_with: static_library(\n    'pdns-bindparser',\n    libpdns_bindlexer_gen,\n    libpdns_bindparser_gen,\n    cpp_args: ['-Wno-redundant-decls', '-Wno-sign-compare'],\n    dependencies: deps,\n  )\n)\n\nlibpdns_dnslabeltext = declare_dependency(\n  link_with: static_library(\n    'pdns-dnslabeltext',\n    libpdns_dnslabeltext_gen,\n    dependencies: deps,\n  )\n)\n\nlibpdns_cdb = dependency('', required: false)\nif dep_cdb.found()\n  libpdns_cdb = declare_dependency(\n    link_whole: static_library(\n      'pdns-cdb',\n      sources: files(src_dir / 'cdb.cc', src_dir / 'cdb.hh'),\n      dependencies: deps,\n    )\n  )\nendif\n\nsubdir('modules')\n\n# Generate config.h\nconfig_h = configure_file(configuration: conf, output: 'config.h')\n\ntools = {\n  'pdns-auth': {\n    'main': src_dir / 'auth-main.cc',\n    'export-dynamic': true,\n    'deps-extra': [\n      dep_modules,\n      libpdns_ssqlite3,\n      libpdns_gettime,\n      libpdns_signers_openssl,\n      libpdns_signers_sodium,\n    ],\n    'manpages': ['pdns_server.1'],\n  },\n  'pdns-auth-util': {\n    'main': src_dir / 'pdnsutil.cc',\n    'export-dynamic': true,\n    'files-extra': libpdns_bind_dnssec_schema_gen,\n    'deps-extra': [\n      dep_modules,\n      libpdns_ssqlite3,\n      libpdns_signers_openssl,\n      libpdns_signers_sodium,\n    ],\n    'manpages': ['pdnsutil.1'],\n  },\n  'pdns-auth-control': {\n    'main': src_dir / 'dynloader.cc',\n    'manpages': ['pdns_control.1'],\n  },\n  'pdns-zone2sql': {\n    'main': src_dir / 'zone2sql.cc',\n    'manpages': ['zone2sql.1'],\n  },\n  'pdns-zone2json': {\n    'main': src_dir / 'zone2json.cc',\n    'manpages': ['zone2json.1'],\n  },\n}\n\nif get_option('module-ldap') != 'disabled'\n  tools += {\n    'pdns-zone2ldap': {\n      'main': src_dir / 'zone2ldap.cc',\n      'manpages': ['zone2ldap.1'],\n    }\n  }\nendif\n\nif get_option('tools')\n  tools += {\n    'pdns-auth-notify': {\n      'main': src_dir / 'notify.cc',\n      'manpages': ['pdns_notify.1'],\n    },\n    'sdig': {\n      'main': src_dir / 'sdig.cc',\n      'manpages': ['sdig.1'],\n    },\n    'calidns': {\n      'main': src_dir / 'calidns.cc',\n      'manpages': ['calidns.1'],\n    },\n    'dnsdemog': {\n      'main': src_dir / 'dnsdemog.cc',\n    },\n    'dnsgram': {\n      'main': src_dir / 'dnsgram.cc',\n      'manpages': ['dnsgram.1'],\n    },\n    'dnspcap2calidns': {\n      'main': src_dir / 'dnspcap2calidns.cc',\n      'manpages': ['dnspcap2calidns.1'],\n    },\n    'dnspcap2protobuf' : {\n      'main': src_dir / 'dnspcap2protobuf.cc',\n      'deps-extra': libpdns_gettime,\n      'manpages': ['dnspcap2protobuf.1'],\n    },\n    'dnsreplay': {\n      'main': src_dir / 'dnsreplay.cc',\n      'manpages': ['dnsreplay.1'],\n    },\n    'dnsscan'  : {\n      'main': src_dir / 'dnsscan.cc',\n      'manpages': ['dnsscan.1'],\n    },\n    'dnsscope' : {\n      'main': src_dir / 'dnsscope.cc',\n      'manpages': ['dnsscope.1'],\n    },\n    'dnswasher': {\n      'main': src_dir / 'dnswasher.cc',\n      'manpages': ['dnswasher.1'],\n    },\n    'nproxy'   : {\n      'main': src_dir / 'nproxy.cc',\n      'manpages': ['nproxy.1'],\n    },\n    'nsec3dig' : {\n      'main': src_dir / 'nsec3dig.cc',\n      'manpages': ['nsec3dig.1'],\n    },\n    'dumresp'  : {\n      'main': src_dir / 'dumresp.cc',\n      'manpages': ['dumresp.1'],\n    },\n    'kvresp'   : {\n      'main': src_dir / 'kvresp.cc',\n    },\n    'stubquery': {\n      'main': src_dir / 'stubquery.cc',\n    },\n    'saxfr'    : {\n      'main': src_dir / 'saxfr.cc',\n      'manpages': ['saxfr.1'],\n    },\n    'ixplore'  : {\n      'main': src_dir / 'ixplore.cc',\n      'manpages': ['ixplore.1'],\n    },\n    'dnstcpbench': {\n      'main': src_dir / 'dnstcpbench.cc',\n      'manpages': ['dnstcpbench.1'],\n    },\n    'dnsbulktest': {\n      'main': src_dir / 'dnsbulktest.cc',\n      'manpages': ['dnsbulktest.1'],\n    },\n    # Broken\n    # 'comfun' : {\n    #   'main': src_dir / 'comfun.cc',\n    # },\n  }\n\n  common_sources += files(\n    src_dir / 'anadns.hh',\n    src_dir / 'dnspcap.cc',\n    src_dir / 'dnspcap.hh',\n    src_dir / 'dolog.hh',\n    src_dir / 'ednsextendederror.cc',\n    src_dir / 'ednsextendederror.hh',\n    src_dir / 'histog.hh',\n    src_dir / 'ixfrutils.cc',\n    src_dir / 'ixfrutils.hh',\n    src_dir / 'libssl.cc',\n    src_dir / 'libssl.hh',\n    src_dir / 'mplexer.hh',\n    src_dir / 'pollmplexer.cc',\n    src_dir / 'protozero.cc',\n    src_dir / 'protozero.hh',\n    src_dir / 'statnode.cc',\n    src_dir / 'statnode.hh',\n    src_dir / 'tcpiohandler.cc',\n    src_dir / 'tcpiohandler.hh',\n  )\n\nendif\n\nif get_option('tools-ixfrdist')\n  tools += {\n    'ixfrdist': {\n      'main': src_dir / 'ixfrdist.cc',\n      'manpages': [\n        'ixfrdist.1',\n        'ixfrdist.yml.5',\n      ],\n    },\n  }\n\n  common_sources += files(\n    src_dir / 'ixfrdist-stats.cc',\n    src_dir / 'ixfrdist-stats.hh',\n    src_dir / 'ixfrdist-web.cc',\n    src_dir / 'ixfrdist-web.hh',\n    src_dir / 'ixfrutils.cc',\n    src_dir / 'ixfrutils.hh',\n    src_dir / 'mplexer.hh',\n    src_dir / 'pollmplexer.cc',\n  )\nendif\n\nif get_option('unit-tests')\n  libpdns_test = declare_dependency(\n    link_whole: static_library(\n      'pdns-test',\n      config_h,\n      src_dir / 'channel.cc',\n      src_dir / 'channel.hh',\n      src_dir / 'pollmplexer.cc',\n      src_dir / 'test-arguments_cc.cc',\n      src_dir / 'test-auth-zonecache_cc.cc',\n      src_dir / 'test-base32_cc.cc',\n      src_dir / 'test-base64_cc.cc',\n      src_dir / 'test-bindparser_cc.cc',\n      src_dir / 'test-channel.cc',\n      src_dir / 'test-common.hh',\n      src_dir / 'test-communicator_hh.cc',\n      src_dir / 'test-credentials_cc.cc',\n      src_dir / 'test-digests_hh.cc',\n      src_dir / 'test-distributor_hh.cc',\n      src_dir / 'test-dns_random_hh.cc',\n      src_dir / 'test-dnsname_cc.cc',\n      src_dir / 'test-dnsparser_cc.cc',\n      src_dir / 'test-dnsparser_hh.cc',\n      src_dir / 'test-dnsrecordcontent.cc',\n      src_dir / 'test-dnsrecords_cc.cc',\n      src_dir / 'test-dnswriter_cc.cc',\n      src_dir / 'test-ednscookie_cc.cc',\n      src_dir / 'test-ipcrypt_cc.cc',\n      src_dir / 'test-iputils_hh.cc',\n      src_dir / 'test-ixfr_cc.cc',\n      src_dir / 'test-lock_hh.cc',\n      src_dir / 'test-lua_auth4_cc.cc',\n      src_dir / 'test-luawrapper.cc',\n      src_dir / 'test-misc_hh.cc',\n      src_dir / 'test-mplexer.cc',\n      src_dir / 'test-nameserver_cc.cc',\n      src_dir / 'test-packetcache_cc.cc',\n      src_dir / 'test-packetcache_hh.cc',\n      src_dir / 'test-proxy_protocol_cc.cc',\n      src_dir / 'test-rcpgenerator_cc.cc',\n      src_dir / 'test-sha_hh.cc',\n      src_dir / 'test-signers.cc',\n      src_dir / 'test-statbag_cc.cc',\n      src_dir / 'test-svc_records_cc.cc',\n      src_dir / 'test-trusted-notification-proxy_cc.cc',\n      src_dir / 'test-tsig.cc',\n      src_dir / 'test-ueberbackend_cc.cc',\n      src_dir / 'test-webserver_cc.cc',\n      src_dir / 'test-zonemd_cc.cc',\n      src_dir / 'test-zoneparser_tng_cc.cc',\n      src_dir / 'zoneparser-tng.hh',\n      dependencies: [\n        deps,\n      ],\n    )\n  )\n\n  tools += {\n    # TODO: NOINSTALL speedtest and pdns-auth-testrunner\n    'pdns-auth-testrunner': {\n      'main': src_dir / 'testrunner.cc',\n      'deps-extra': [\n        libpdns_test,\n        libpdns_signers_openssl,\n        libpdns_signers_sodium,\n      ],\n    },\n    'speedtest': {\n      'main': src_dir / 'speedtest.cc',\n    },\n    'tsig-tests': {\n      'main': src_dir / 'tsig-tests.cc',\n    },\n  }\nendif\n\nif get_option('fuzz-targets')\n  fuzz_targets = [\n    'moadnsparser',\n    'packetcache',\n    'proxyprotocol',\n    'dnslabeltext-parseRFC1035CharString',\n    'yahttp',\n    'zoneparsertng',\n  ]\n\n  foreach target: fuzz_targets\n    source_file = src_dir / 'fuzz_' + target.underscorify() + '.cc'\n    tools += {\n      'fuzz-target-' + target: { 'main': source_file }\n    }\n  endforeach\nendif\n\nlibpdns_common = declare_dependency(\n  link_with: static_library(\n    'pdns-common',\n    common_sources,\n    config_h,\n    libpdns_apidocfiles_gen,\n    dependencies: [\n      deps,\n      libpdns_signers_pkcs11,\n      libpdns_bindparser,\n      libpdns_dnslabeltext,\n    ],\n  )\n)\n\nman_pages = []\nforeach tool, info: tools\n  var_name = tool.underscorify()\n  main = files(info['main'])\n\n  export_dynamic = 'export-dynamic' in info ? info['export-dynamic'] : false\n  files_extra = 'files-extra' in info ? info['files-extra'] : []\n  deps_extra = 'deps-extra' in info ? info['deps-extra'] : []\n\n  set_variable(\n    var_name,\n    executable(\n      tool,\n      main,\n      config_h,\n      files_extra,\n      export_dynamic: export_dynamic,\n      dependencies: [\n        deps,\n        libpdns_common,\n        libpdns_uuidutils,\n        deps_extra,\n      ],\n    )\n  )\n\n  if 'manpages' in info\n    foreach man_page: info['manpages']\n      man_pages += docs_dir / 'manpages' / (man_page + '.rst')\n    endforeach\n  endif\nendforeach\n\n# Man-pages.\npy = import('python')\npython = py.find_installation('python3', modules: 'venv', required: false)\n\nsummary('Python', python.found(), bool_yn: true, section: 'Manual Pages')\nsummary('Path', python.full_path(), section: 'Manual Pages')\nsummary('Version', python.version(), section: 'Manual Pages')\n\nif python.found()\n  run_target(\n    'man-pages',\n    command: [\n      python,\n      product_source_dir / docs_dir / 'generate-man-pages.py',\n      '--venv-name', 'venv-auth-man-pages',\n      '--requirements-file', docs_dir / 'requirements.txt',\n      '--source-directory', docs_dir,\n      '--target-directory', 'auth-man-pages',\n    ] + man_pages,\n  )\nendif\n\nif get_option('unit-tests')\n  test(\n    'pdns-auth-testrunner',\n    pdns_auth_testrunner,\n    env: {\n      'BOOST_TEST_LOG_LEVEL': 'message',\n    },\n    is_parallel: false,\n  )\nendif\n\nif get_option('unit-tests-backends')\n  # Remote Backend Tests #################################################################\n  if get_option('module-remote') != 'disabled'\n    libpdns_module_remotebackend_test_common = declare_dependency(\n      link_whole: static_library(\n        'pdns-test-remotebackend',\n        module_remotebackend_test_sources_common,\n        dependencies: [\n          deps,\n          module_remotebackend_lib,\n          libpdns_signers_pkcs11,\n          libpdns_common,\n          libpdns_dnslabeltext,\n        ],\n        extra_files: module_remotebackend_test_sources_extra,\n      )\n    )\n\n    env = {\n      'BOOST_TEST_LOG_LEVEL': 'message',\n      'REMOTEBACKEND_ZEROMQ': get_option('module-remote-zeromq') ? 'yes' : 'no',\n    }\n\n    foreach test_binary, test_source: module_remotebackend_test_sources_binaries\n      exec_var_name = test_binary.underscorify()\n\n      set_variable(\n        exec_var_name,\n        executable(\n          test_binary,\n          test_source,\n          dependencies: [\n            deps,\n            dep_boost_test,\n            dep_zeromq,\n            libpdns_module_remotebackend_test_common,\n          ],\n        )\n      )\n\n      test(\n        'pdns-auth-' + test_binary,\n        module_remotebackend_testrunner,\n        args: ['--', get_variable(exec_var_name).full_path()],\n        env: env,\n        workdir: product_source_dir / fs.parent(module_remotebackend_testrunner),\n        is_parallel: false,\n        depends: get_variable(exec_var_name),\n      )\n    endforeach\n  endif\n\n  # Regression Tests #####################################################################\n  start_test_stop = files('regression-tests' / 'start-test-stop')[0]\n\n  test_modules = {\n    'geoip': 'module-geoip',\n    'lmdb': 'module-lmdb',\n    'lmdb-nodnssec': 'module-lmdb',\n  }\n\n  foreach module, option: test_modules\n    if get_option(option) != 'disabled'\n      test(\n        'pdns-auth-backend-' + module,\n        start_test_stop,\n        args: ['5300', module],\n        workdir: product_source_dir / 'regression-tests',\n        depends: [pdns_auth, pdns_auth_util, sdig, saxfr, pdns_auth_notify, nsec3dig],\n        is_parallel: false,\n      )\n    endif\n  endforeach\nendif\n"
        },
        {
          "name": "meson",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 4.7998046875,
          "content": "option('lua', type: 'combo', choices: ['auto', 'luajit', 'lua'], value: 'auto', description: 'Lua implementation to use')\noption('hardening', type: 'feature', value: 'auto', description: 'Compiler security checks')\noption('hardening-experimental-cf', type: 'combo', choices: ['disabled', 'full', 'branch', 'return', 'check'], value: 'disabled', description: 'Control Flow hardening')\noption('hardening-experimental-scp', type: 'feature', value: 'disabled', description: 'Stack Clash Protection')\noption('hardening-fortify-source', type: 'combo', choices: ['auto', 'disabled', '1', '2', '3'], value: '2', description: 'Source fortification level')\noption('rng-kiss', type: 'boolean', value: false, description: 'Use the unsafe KISS RNG')\noption('signers-libsodium', type: 'feature', value: 'auto', description: 'Enable libsodium-based signers')\noption('signers-libcrypto', type: 'feature', value: 'auto', description: 'Enable OpenSSL libcrypto-based signers)')\noption('signers-libcrypto-path', type: 'string', value: '', description: 'Custom path to find OpenSSL libcrypto')\noption('tls-libssl', type: 'feature', value: 'auto', description: 'OpenSSL-based TLS')\noption('tls-gnutls', type: 'feature', value: 'auto', description: 'GnuTLS-based TLS')\noption('dns-over-tls', type: 'boolean', value: false, description: 'DNS over TLS (requires GnuTLS or OpenSSL)')\noption('ipcipher', type: 'feature', value: 'auto', description: 'IPcipher (requires libcrypto)')\noption('unit-tests', type: 'boolean', value: false, description: 'Build and run unit tests')\noption('unit-tests-backends', type: 'boolean', value: false, description: 'Build and run backend unit tests')\noption('reproducible', type: 'boolean', value: false, description: 'Reproducible builds (for distro maintainers, makes debugging difficult)')\noption('fuzz-targets', type: 'boolean', value: false, description: 'Enable fuzzing targets')\noption('verbose-logging', type: 'boolean', value: false, description: 'Enable verbose logging')\noption('experimental-pkcs11', type: 'feature', value: 'disabled', description: 'PKCS11 support')\noption('experimental-gss-tsig', type: 'feature', value: 'disabled', description: 'GSS-TSIG support')\noption('socket-dir', type: 'string', value: '/var/run', description: 'Where the control socket lives')\noption('module-bind', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'static', description: 'Bind backend')\noption('module-pipe', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'dynamic', description: 'Pipe backend')\noption('module-gmysql', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'Generic MySQL backend')\noption('module-godbc', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'Generic ODBC backend')\noption('module-gpgsql', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'Generic PostgreSQL backend')\noption('module-gsqlite3', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'Generic SQLite3 backend')\noption('module-ldap', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'LDAP backend')\noption('module-remote', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'Remote backend')\noption('module-remote-zeromq', type: 'boolean', value: false, description: 'Use ZeroMQ in the Remote backend')\noption('module-tinydns', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'TinyDNS backend')\noption('module-geoip', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'GeoIP backend')\noption('module-lmdb', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'LMDB backend')\noption('module-lua2', type: 'combo', choices: ['disabled', 'static', 'dynamic'], value: 'disabled', description: 'Lua2 backend')\noption('tools', type: 'boolean', value: false, description: 'Build extra tools')\noption('tools-ixfrdist', type: 'boolean', value: false, description: 'Build ixfrdist')\noption('lua-records', type: 'boolean', value: true, description: 'Support Lua records')\noption('systemd', type: 'feature', value: 'auto', description: 'Systemd notification (requires libsystemd)')\noption('systemd-service-user', type: 'string', value: 'pdns', description: 'Systemd service user (setuid and unit file; user is not created)')\noption('systemd-service-group', type: 'string', value: 'pdns', description: 'Systemd service group (setgid and unit file; group is not created)')\noption('auto-var-init', type: 'combo', value: 'disabled', choices: ['zero', 'pattern', 'disabled'], description: 'Enable initialization of automatic variables')\noption('malloc-trace', type: 'boolean', value: false, description: 'Enable malloc-trace')\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "pdns.supp",
          "type": "blob",
          "size": 1.4384765625,
          "content": "# internal SQLite stuff\n{\n   sqlite_sb\n   Memcheck:Leak\n   fun:malloc\n   obj:/usr/lib/x86_64-linux-gnu/libsqlite3.so.0.8.6\n   ...\n   obj:/usr/lib/x86_64-linux-gnu/libsqlite3.so.0.8.6\n   fun:_ZN8SSQLite3C1ERKSsb\n   ...\n}\n{\n   sqlite_create_function\n   Memcheck:Leak\n   fun:malloc\n   obj:/usr/lib/x86_64-linux-gnu/libsqlite3.so.0.8.6\n   ...\n   obj:/usr/lib/x86_64-linux-gnu/libsqlite3.so.0.8.6\n   fun:sqlite3_create_function_v2\n   ...\n}\n\n# Backend constructors, which might never get cleaned up.\n{\n   backendmaker_launch\n   Memcheck:Leak\n   ...\n   fun:_ZN17BackendMakerClass6launchERKSs\n   fun:main\n}\n{\n   backendfactory_makemetadataonly\n   Memcheck:Leak\n   ...\n   fun:_ZN14BackendFactory16makeMetadataOnlyERKSs\n   fun:_ZN17BackendMakerClass3allEb\n   fun:_ZN12UeberBackendC1ERKSs\n}\n{\n   packethandler_makebackend\n   Memcheck:Leak\n   ...\n   fun:_ZN17BackendMakerClass3allEb\n   fun:_ZN12UeberBackendC1ERKSs\n   fun:_ZN13PacketHandlerC1Ev\n}\n\n# Dynlistener, arguments and stats are never cleaned up.\n{\n   main_declarearguments\n   Memcheck:Leak\n   ...\n   fun:_Z16declareArgumentsv\n   fun:main\n}\n{\n   main_declarestats\n   Memcheck:Leak\n   ...\n   fun:_Z12declareStatsv\n   fun:main\n}\n{\n   dynlistener\n   Memcheck:Leak\n   ...\n   fun:_ZN11DynListenerC1ERKSs\n   fun:main\n}\n\n# Global objects.\n{\n   cxx_globals\n   Memcheck:Leak\n   ...\n   fun:__libc_csu_init\n   fun:(below main)\n}\n\n# TLS\n{\n   thread_local_state\n   Memcheck:Leak\n   ...\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   ...\n}\n\n"
        },
        {
          "name": "pdns",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.api",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.auth-py",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.common",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.dnsdist",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.ixfrdist",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.nobackend",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.recursor-dnssec",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.recursor",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests.rootzone",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks.py",
          "type": "blob",
          "size": 37.03515625,
          "content": "from invoke import task\nfrom invoke.exceptions import Failure, UnexpectedExit\n\nimport json\nimport os\nimport sys\nimport time\n\nauth_backend_ip_addr = os.getenv('AUTH_BACKEND_IP_ADDR', '127.0.0.1')\n\nclang_version = os.getenv('CLANG_VERSION', '13')\nrepo_home = os.getenv('REPO_HOME', '.')\n\nall_build_deps = [\n    'ccache',\n    'libboost-all-dev',\n    'libluajit-5.1-dev',\n    'libsodium-dev',\n    'libssl-dev', # This will install libssl 1.1 on Debian 11 and libssl3 on Debian 12\n    'libsystemd-dev',\n    'libtool',\n    'make',\n    'pkg-config',\n    'python3-venv',\n    'systemd',\n]\ngit_build_deps = [\n    'autoconf',\n    'automake',\n    'bison',\n    'bzip2',\n    'curl',\n    'flex',\n    'git',\n    'ragel'\n]\nauth_build_deps = [    # FIXME: perhaps we should be stealing these from the debian (Ubuntu) control file\n    'default-libmysqlclient-dev',\n    'libcdb-dev',\n    'libcurl4-openssl-dev',\n    'libgeoip-dev',\n    'libkrb5-dev',\n    'libldap2-dev',\n    'liblmdb-dev',\n    'libmaxminddb-dev',\n    'libp11-kit-dev',\n    'libpq-dev',\n    'libsqlite3-dev',\n    'libyaml-cpp-dev',\n    'libzmq3-dev',\n    'python3-venv',\n    'sqlite3',\n    'unixodbc-dev',\n    'cmake',\n]\nrec_build_deps = [\n    'libcap-dev',\n    'libfstrm-dev',\n    'libsnmp-dev',\n]\nrec_bulk_deps = [\n    'curl',\n    'dnsutils',\n    'libboost-all-dev',\n    'libcap2',\n    'libfstrm0',\n    'libluajit-5.1-2',\n    '\"libsnmp[1-9]+\"',\n    'libsodium23',\n    'libsystemd0',\n    'moreutils',\n    'pdns-tools',\n    'unzip',\n]\nrec_bulk_ubicloud_deps = [\n    'curl',\n    'dnsutils',\n    'libboost-context1.74.0',\n    'libboost-system1.74.0',\n    'libboost-filesystem1.74.0',\n    'libcap2',\n    'libfstrm0',\n    'libluajit-5.1-2',\n    '\"libsnmp[1-9]+\"',\n    'libsodium23',\n    'libsystemd0',\n    'moreutils',\n    'pdns-tools',\n    'unzip',\n]\ndnsdist_build_deps = [\n    'libcap-dev',\n    'libcdb-dev',\n    'libedit-dev',\n    'libfstrm-dev',\n    'libgnutls28-dev',\n    'libh2o-evloop-dev',\n    'liblmdb-dev',\n    'libnghttp2-dev',\n    'libre2-dev',\n    'libsnmp-dev',\n]\ndnsdist_xdp_build_deps = [\n    'libbpf-dev',\n    'libxdp-dev',\n]\nauth_test_deps = [   # FIXME: we should be generating some of these from shlibdeps in build\n    'authbind',\n    'bc',\n    'bind9utils',\n    'curl',\n    'default-jre-headless',\n    'dnsutils',\n    'faketime',\n    'gawk',\n    'krb5-user',\n    'ldnsutils',\n    '\"libboost-serialization1.7[1-9]+\"',\n    'libcdb1',\n    'libcurl4',\n    'libgeoip1',\n    'libkrb5-3',\n    '\"libldap-2.[1-9]+\"',\n    'liblmdb0',\n    'libluajit-5.1-2',\n    'libmaxminddb0',\n    'libnet-dns-perl',\n    'libp11-kit0',\n    'libpq5',\n    'libsodium23',\n    'libsqlite3-dev',\n    'libsystemd0',\n    '\"libyaml-cpp0.[1-9]+\"',\n    'libzmq3-dev',\n    'lmdb-utils',\n    'prometheus',\n    'python3-venv',\n    'socat',\n    'softhsm2',\n    'unbound-host',\n    'unixodbc',\n    'wget',\n]\ndoc_deps = [\n    'autoconf',\n    'automake',\n    'bison',\n    'curl',\n    'flex',\n    'g++',\n    'git',\n    'latexmk',\n    'libboost-all-dev',\n    'libedit-dev',\n    'libluajit-5.1-dev',\n    'libssl-dev',\n    'make',\n    'pkg-config',\n    'python3-venv',\n    'ragel',\n    'rsync',\n]\ndoc_deps_pdf = [\n    'texlive-binaries',\n    'texlive-formats-extra',\n    'texlive-latex-extra',\n]\n\n@task\ndef apt_fresh(c):\n    c.sudo('apt-get update')\n    c.sudo('apt-get -y --allow-downgrades dist-upgrade')\n\n@task\ndef install_clang(c):\n    \"\"\"\n    install clang and llvm\n    \"\"\"\n    c.sudo(f'apt-get -y --no-install-recommends install clang-{clang_version} llvm-{clang_version}')\n\n@task\ndef install_clang_tidy_tools(c):\n    c.sudo(f'apt-get -y --no-install-recommends install clang-tidy-{clang_version} clang-tools-{clang_version} bear python3-yaml')\n\n@task\ndef install_clang_runtime(c):\n    # this gives us the symbolizer, for symbols in asan/ubsan traces\n    c.sudo(f'apt-get -y --no-install-recommends install clang-{clang_version}')\n\n@task\ndef ci_install_rust(c, repo):\n    with c.cd(f'{repo}/builder-support/helpers/'):\n        c.run('sudo sh install_rust.sh')\n\n@task\ndef install_doc_deps(c):\n    c.sudo('apt-get install -y ' + ' '.join(doc_deps))\n\n@task\ndef install_doc_deps_pdf(c):\n    c.sudo('apt-get install -y ' + ' '.join(doc_deps_pdf))\n\ndef install_meson(c):\n    c.run(f'python3 -m venv {repo_home}/.venv')\n    c.run(f'. {repo_home}/.venv/bin/activate && pip install -r {repo_home}/meson/requirements.txt')\n\n@task\ndef install_auth_build_deps(c):\n    c.sudo('apt-get install -y --no-install-recommends ' + ' '.join(all_build_deps + git_build_deps + auth_build_deps))\n    install_meson(c)\n\ndef is_coverage_enabled():\n    sanitizers = os.getenv('SANITIZERS')\n    if sanitizers:\n        sanitizers = sanitizers.split('+')\n        if 'tsan' in sanitizers:\n            return False\n    return os.getenv('COVERAGE') == 'yes'\n\ndef get_coverage(meson=False):\n    if meson:\n        return '-D b_coverage=true' if os.getenv('COVERAGE') == 'yes' else ''\n    return '--enable-coverage=clang' if is_coverage_enabled() else ''\n\n@task\ndef install_coverage_deps(c):\n    if is_coverage_enabled():\n        c.sudo(f'apt-get install -y --no-install-recommends llvm-{clang_version}')\n\n@task\ndef generate_coverage_info(c, binary, outputDir):\n    if is_coverage_enabled():\n        version = os.getenv('BUILDER_VERSION')\n        c.run(f'llvm-profdata-{clang_version} merge -sparse -o {outputDir}/temp.profdata /tmp/code-*.profraw')\n        c.run(f'llvm-cov-{clang_version} export --format=lcov --ignore-filename-regex=\\'^/usr/\\' -instr-profile={outputDir}/temp.profdata -object {binary} > {outputDir}/coverage.lcov')\n        c.run(f'{outputDir}/.github/scripts/normalize_paths_in_coverage.py {outputDir} {version} {outputDir}/coverage.lcov {outputDir}/normalized_coverage.lcov')\n        c.run(f'mv {outputDir}/normalized_coverage.lcov {outputDir}/coverage.lcov')\n\ndef setup_authbind(c):\n    c.sudo('touch /etc/authbind/byport/53')\n    c.sudo('chmod 755 /etc/authbind/byport/53')\n\nauth_backend_test_deps = dict(\n    gsqlite3=['sqlite3'],\n    gmysql=['default-libmysqlclient-dev'],\n    gpgsql=['libpq-dev'],\n    lmdb=[],\n    remote=[],\n    bind=[],\n    geoip=[],\n    lua2=[],\n    tinydns=[],\n    authpy=[],\n    godbc_sqlite3=['libsqliteodbc'],\n    godbc_mssql=['freetds-bin','tdsodbc'],\n    ldap=[],\n    geoip_mmdb=[]\n)\n\n@task(help={'backend': 'Backend to install test deps for, e.g. gsqlite3; can be repeated'}, iterable=['backend'], optional=['backend'])\ndef install_auth_test_deps_only(c, backend):\n    extra=[]\n    for b in backend:\n        extra.extend(auth_backend_test_deps[b])\n    c.sudo('DEBIAN_FRONTEND=noninteractive apt-get -y install ' + ' '.join(extra+auth_test_deps))\n\n@task(help={'backend': 'Backend to install test deps for, e.g. gsqlite3; can be repeated'}, iterable=['backend'], optional=['backend'])\ndef install_auth_test_deps(c, backend): # FIXME: rename this, we do way more than apt-get\n    install_auth_test_deps_only(c, backend)\n\n    c.run('chmod +x /opt/pdns-auth/bin/* /opt/pdns-auth/sbin/*')\n    # c.run('''if [ ! -e $HOME/bin/jdnssec-verifyzone ]; then\n    #               wget https://github.com/dblacka/jdnssec-tools/releases/download/0.14/jdnssec-tools-0.14.tar.gz\n    #               tar xfz jdnssec-tools-0.14.tar.gz -C $HOME\n    #               rm jdnssec-tools-0.14.tar.gz\n    #          fi\n    #          echo 'export PATH=$HOME/jdnssec-tools-0.14/bin:$PATH' >> $BASH_ENV''')  # FIXME: why did this fail with no error?\n    c.run('touch regression-tests/tests/verify-dnssec-zone/allow-missing regression-tests.nobackend/rectify-axfr/allow-missing') # FIXME: can this go?\n    # FIXME we may want to start a background recursor here to make ALIAS tests more robust\n    setup_authbind(c)\n\n@task\ndef install_rec_bulk_deps(c): # FIXME: rename this, we do way more than apt-get\n    c.sudo('apt-get --no-install-recommends -y install ' + ' '.join(rec_bulk_deps))\n    c.run('chmod +x /opt/pdns-recursor/bin/* /opt/pdns-recursor/sbin/*')\n\n@task\ndef install_rec_bulk_ubicloud_deps(c): # FIXME: rename this, we do way more than apt-get\n    c.sudo('apt-get --no-install-recommends -y install ' + ' '.join(rec_bulk_ubicloud_deps))\n    c.run('chmod +x /opt/pdns-recursor/bin/* /opt/pdns-recursor/sbin/*')\n\n@task\ndef install_rec_test_deps(c): # FIXME: rename this, we do way more than apt-get\n    c.sudo('apt-get --no-install-recommends install -y ' + ' '.join(rec_bulk_deps) + ' \\\n              pdns-server pdns-backend-bind daemontools \\\n              jq libfaketime lua-posix lua-socket bc authbind \\\n              python3-venv python3-dev default-libmysqlclient-dev libpq-dev \\\n              protobuf-compiler snmpd prometheus')\n\n    c.run('chmod +x /opt/pdns-recursor/bin/* /opt/pdns-recursor/sbin/*')\n\n    setup_authbind(c)\n\n    c.run('sed \"s/agentxperms 0700 0755 recursor/agentxperms 0777 0755/g\" regression-tests.recursor-dnssec/snmpd.conf | sudo tee /etc/snmp/snmpd.conf')\n    c.sudo('/etc/init.d/snmpd restart')\n    time.sleep(5)\n    c.sudo('chmod 755 /var/agentx')\n\n@task(optional=['skipXDP'])\ndef install_dnsdist_test_deps(c, skipXDP=False): # FIXME: rename this, we do way more than apt-get\n    deps = 'libluajit-5.1-2 \\\n            libboost-all-dev \\\n            libcap2 \\\n            libcdb1 \\\n            libcurl4-openssl-dev \\\n            libfstrm0 \\\n            libgnutls30 \\\n            libh2o-evloop0.13 \\\n            liblmdb0 \\\n            libnghttp2-14 \\\n            \"libre2-[1-9]+\" \\\n            libssl-dev \\\n            libsystemd0 \\\n            libsodium23 \\\n            lua-socket \\\n            patch \\\n            protobuf-compiler \\\n            python3-venv snmpd prometheus'\n    if not skipXDP:\n        deps = deps + '\\\n               libbpf1 \\\n               libxdp1'\n\n    c.sudo(f'apt-get install -y {deps}')\n    c.run('sed \"s/agentxperms 0700 0755 dnsdist/agentxperms 0777 0755/g\" regression-tests.dnsdist/snmpd.conf | sudo tee /etc/snmp/snmpd.conf')\n    c.sudo('/etc/init.d/snmpd restart')\n    time.sleep(5)\n    c.sudo('chmod 755 /var/agentx')\n\n@task\ndef install_rec_build_deps(c, meson=False):\n    c.sudo('apt-get install -y --no-install-recommends ' +  ' '.join(all_build_deps + git_build_deps + rec_build_deps))\n    if meson:\n        install_meson(c)\n\n@task(optional=['skipXDP'])\ndef install_dnsdist_build_deps(c, skipXDP=False):\n    c.sudo('apt-get install -y --no-install-recommends ' +  ' '.join(all_build_deps + git_build_deps + dnsdist_build_deps + (dnsdist_xdp_build_deps if not skipXDP else [])))\n\n@task\ndef ci_autoconf(c, meson=False):\n    if not meson:\n        c.run('autoreconf -vfi')\n\n@task\ndef ci_docs_rec_generate(c):\n    c.run('python3 generate.py')\n\n@task\ndef ci_metrics_rec_generate(c):\n    c.run('python3 metrics.py')\n\n@task\ndef ci_docs_build(c):\n    c.run('make -f Makefile.sphinx -C docs html')\n\n@task\ndef ci_docs_build_pdf(c):\n    c.run('make -f Makefile.sphinx -C docs latexpdf')\n\n@task\ndef ci_docs_upload_master(c, docs_host, pdf, username, product, directory=\"\"):\n    rsync_cmd = \" \".join([\n        \"rsync\",\n        \"--checksum\",\n        \"--recursive\",\n        \"--verbose\",\n        \"--no-p\",\n        \"--chmod=g=rwX\",\n        \"--exclude '*~'\",\n    ])\n    c.run(f\"{rsync_cmd} --delete ./docs/_build/{product}-html-docs/ {username}@{docs_host}:{directory}\")\n\n@task\ndef ci_docs_add_ssh(c, ssh_key, host_key):\n    c.run('mkdir -m 700 -p ~/.ssh')\n    c.run(f'echo \"{ssh_key}\" > ~/.ssh/id_ed25519')\n    c.run('chmod 600 ~/.ssh/id_ed25519')\n    c.run(f'echo \"{host_key}\" > ~/.ssh/known_hosts')\n\n\ndef get_sanitizers(meson=False):\n    sanitizers = os.getenv('SANITIZERS', '')\n    if meson:\n        if sanitizers == 'ubsan+asan':\n            sanitizers='address,undefined'\n        if sanitizers == 'tsan':\n            sanitizers='thread'\n        return f'-D b_sanitize={sanitizers}' if sanitizers != '' else ''\n    if sanitizers != '':\n        sanitizers = sanitizers.split('+')\n        sanitizers = ['--enable-' + sanitizer for sanitizer in sanitizers]\n        sanitizers = ' '.join(sanitizers)\n    return sanitizers\n\ndef get_unit_tests(meson=False, auth=False):\n    if os.getenv('UNIT_TESTS') != 'yes':\n        return ''\n    if meson:\n        return '-D unit-tests=true -D unit-tests-backends=true' if auth else '-D unit-tests=true'\n    return '--enable-unit-tests --enable-backend-unit-tests' if auth else '--enable-unit-tests'\n\ndef get_build_concurrency(default=8):\n    return os.getenv('CONCURRENCY', default)\n\ndef get_fuzzing_targets(meson=False):\n    if meson:\n        return '-D fuzz-targets=true' if os.getenv('FUZZING_TARGETS') == 'yes' else ''\n    return '--enable-fuzz-targets' if os.getenv('FUZZING_TARGETS') == 'yes' else ''\n\ndef is_compiler_clang():\n    compiler = os.getenv('COMPILER', 'clang')\n    return compiler == 'clang'\n\ndef get_c_compiler():\n    return f'clang-{clang_version}' if is_compiler_clang() else 'gcc'\n\ndef get_cxx_compiler():\n    return f'clang++-{clang_version}' if is_compiler_clang() else 'g++'\n\ndef get_optimizations():\n    optimizations = os.getenv('OPTIMIZATIONS', 'yes')\n    return '-O1' if optimizations == 'yes' else '-O0'\n\ndef get_cflags():\n    return \" \".join([\n        get_optimizations(),\n        \"-Werror=vla\",\n        \"-Werror=shadow\",\n        \"-Wformat=2\",\n        \"-Werror=format-security\",\n        \"-fstack-clash-protection\",\n        \"-fstack-protector-strong\",\n        \"-fcf-protection=full\",\n        \"-Werror=string-plus-int\" if is_compiler_clang() else '',\n    ])\n\n\ndef get_cxxflags():\n    return \" \".join([\n        get_cflags(),\n        \"-Wp,-D_GLIBCXX_ASSERTIONS\",\n    ])\n\n\ndef get_base_configure_cmd(additional_c_flags='', additional_cxx_flags='', enable_systemd=True, enable_sodium=True):\n    cflags = \" \".join([get_cflags(), additional_c_flags])\n    cxxflags = \" \".join([get_cxxflags(), additional_cxx_flags])\n    return \" \".join([\n        f'CFLAGS=\"{cflags}\"',\n        f'CXXFLAGS=\"{cxxflags}\"',\n        './configure',\n        f\"CC='{get_c_compiler()}'\",\n        f\"CXX='{get_cxx_compiler()}'\",\n        \"--enable-option-checking=fatal\",\n        \"--enable-systemd\" if enable_systemd else '',\n        \"--with-libsodium\" if enable_sodium else '',\n        \"--enable-fortify-source=auto\",\n        \"--enable-auto-var-init=pattern\",\n        get_coverage(),\n        get_sanitizers()\n    ])\n\ndef get_base_configure_cmd_meson(build_dir, additional_c_flags='', additional_cxx_flags='', enable_systemd=True, enable_sodium=True):\n    cflags = \" \".join([get_cflags(), additional_c_flags])\n    cxxflags = \" \".join([get_cxxflags(), additional_cxx_flags])\n    env = \" \".join([\n        f'CFLAGS=\"{cflags}\"',\n        f'CXXFLAGS=\"{cxxflags}\"',\n        f\"CC='{get_c_compiler()}'\",\n        f\"CXX='{get_cxx_compiler()}'\"\n    ])\n    return \" \".join([\n        f'. {repo_home}/.venv/bin/activate && {env} meson setup {build_dir}',\n        \"-D systemd={}\".format(\"enabled\" if enable_systemd else \"disabled\"),\n        \"-D signers-libsodium={}\".format(\"enabled\" if enable_sodium else \"disabled\"),\n        \"-D hardening-fortify-source=auto\",\n        \"-D auto-var-init=pattern\",\n        get_coverage(meson=True),\n        get_sanitizers(meson=True)\n    ])\n\ndef ci_auth_configure_autotools(c):\n    unittests = get_unit_tests(auth=True)\n    fuzz_targets = get_fuzzing_targets()\n    modules = \" \".join([\n        \"bind\",\n        \"geoip\",\n        \"gmysql\",\n        \"godbc\",\n        \"gpgsql\",\n        \"gsqlite3\",\n        \"ldap\",\n        \"lmdb\",\n        \"lua2\",\n        \"pipe\",\n        \"remote\",\n        \"tinydns\",\n    ])\n    configure_cmd = \" \".join([\n        get_base_configure_cmd(),\n        \"LDFLAGS='-L/usr/local/lib -Wl,-rpath,/usr/local/lib'\",\n        f\"--with-modules='{modules}'\",\n        \"--enable-tools\",\n        \"--enable-dns-over-tls\",\n        \"--enable-experimental-pkcs11\",\n        \"--enable-experimental-gss-tsig\",\n        \"--enable-remotebackend-zeromq\",\n        \"--enable-verbose-logging\",\n        \"--with-lmdb=/usr\",\n        \"--prefix=/opt/pdns-auth\",\n        \"--enable-ixfrdist\",\n        unittests,\n        fuzz_targets\n    ])\n    res = c.run(configure_cmd, warn=True)\n    if res.exited != 0:\n        c.run('cat config.log')\n        raise UnexpectedExit(res)\n\ndef ci_auth_configure_meson(c, build_dir):\n    unittests = get_unit_tests(meson=True, auth=True)\n    fuzz_targets = get_fuzzing_targets(meson=True)\n    configure_cmd = \" \".join([\n        \"LDFLAGS='-L/usr/local/lib -Wl,-rpath,/usr/local/lib'\",\n        get_base_configure_cmd_meson(build_dir),\n        \"-D module-bind=static\",\n        \"-D module-geoip=static\",\n        \"-D module-gmysql=static\",\n        \"-D module-godbc=static\",\n        \"-D module-gpgsql=static\",\n        \"-D module-gsqlite3=static\",\n        \"-D module-ldap=static\",\n        \"-D module-lmdb=static\",\n        \"-D module-lua2=static\",\n        \"-D module-pipe=static\",\n        \"-D module-remote=static\",\n        \"-D module-remote-zeromq=true\",\n        \"-D module-tinydns=static\",\n        \"-D tools=true\",\n        \"-D dns-over-tls=true\",\n        \"-D experimental-pkcs11=enabled\",\n        \"-D experimental-gss-tsig=enabled\",\n        \"-D prefix=/opt/pdns-auth\",\n        \"-D tools-ixfrdist=true\",\n        unittests,\n        fuzz_targets\n    ])\n    res = c.run(configure_cmd, warn=True)\n    if res.exited != 0:\n        c.run(f'cat {build_dir}/meson-logs/meson-log.txt')\n        raise UnexpectedExit(res)\n\n@task\ndef ci_auth_configure(c, build_dir=None, meson=False):\n    if meson:\n        ci_auth_configure_meson(c, build_dir)\n    else:\n        ci_auth_configure_autotools(c)\n        if build_dir:\n            ci_make_distdir(c)\n            with c.cd(f'{build_dir}'):\n                ci_auth_configure_autotools(c)\n\ndef ci_rec_configure_meson(c, features, build_dir):\n    # XXX features\n    unittests = get_unit_tests(meson=True, auth=False)\n    if features == \"full\":\n        configure_cmd = \" \".join([\n            \"LDFLAGS='-L/usr/local/lib -Wl,-rpath,/usr/local/lib'\",\n            get_base_configure_cmd_meson(build_dir),\n            \"-D dns-over-tls=true\",\n            \"-D nod=true\",\n            \"-D snmp=true\",\n            \"-D lua=luajit\",\n            \"-D prefix=/opt/pdns-recursor\",\n            unittests,\n        ])\n    else:\n        configure_cmd = \" \".join([\n            \"LDFLAGS='-L/usr/local/lib -Wl,-rpath,/usr/local/lib'\",\n            get_base_configure_cmd_meson(build_dir),\n            \"-D dns-over-tls=false\",\n            \"-D dnstap=disabled\",\n            \"-D libcurl=disabled\",\n            \"-D lua=luajit\",\n            \"-D nod=false\",\n            \"-D prefix=/opt/pdns-recursor\",\n            \"-D signers-libsodium=disabled\",\n            \"-D snmp=false\",\n            \"-D systemd=disabled\",\n            unittests,\n        ])\n    res = c.run(configure_cmd, warn=True)\n    if res.exited != 0:\n        c.run(f'cat {build_dir}/meson-logs/meson-log.txt')\n        raise UnexpectedExit(res)\n\ndef ci_rec_configure_autotools(c, features):\n    unittests = get_unit_tests()\n    if features == 'full':\n        configure_cmd = \" \".join([\n            get_base_configure_cmd(),\n            \"--prefix=/opt/pdns-recursor\",\n            \"--enable-option-checking\",\n            \"--enable-verbose-logging\",\n            \"--enable-dns-over-tls\",\n            \"--enable-nod\",\n            \"--with-libcap\",\n            \"--with-lua=luajit\",\n            \"--with-net-snmp\",\n            unittests,\n        ])\n    else:\n        configure_cmd = \" \".join([\n            get_base_configure_cmd(),\n            \"--prefix=/opt/pdns-recursor\",\n            \"--enable-option-checking\",\n            \"--enable-verbose-logging\",\n            \"--disable-dns-over-tls\",\n            \"--disable-dnstap\",\n            \"--disable-nod\",\n            \"--disable-systemd\",\n            \"--with-lua=luajit\",\n            \"--without-libcap\",\n            \"--without-libcurl\",\n            \"--without-libsodium\",\n            \"--without-net-snmp\",\n            unittests,\n        ])\n    res = c.run(configure_cmd, warn=True)\n    if res.exited != 0:\n        c.run('cat config.log')\n        raise UnexpectedExit(res)\n\n@task\ndef ci_rec_configure(c, features, build_dir=None, meson=False):\n    if meson:\n        ci_rec_configure_meson(c, features, build_dir)\n    else:\n        ci_rec_configure_autotools(c, features)\n        if build_dir:\n            ci_make_distdir(c)\n            with c.cd(f'{build_dir}'):\n                ci_rec_configure_autotools(c, features)\n\n@task\ndef ci_dnsdist_configure(c, features):\n    additional_flags = ''\n    if features == 'full':\n      features_set = '--enable-dnstap \\\n                      --enable-dnscrypt \\\n                      --enable-dns-over-tls \\\n                      --enable-dns-over-https \\\n                      --enable-dns-over-quic \\\n                      --enable-dns-over-http3 \\\n                      --enable-systemd \\\n                      --prefix=/opt/dnsdist \\\n                      --with-gnutls \\\n                      --with-h2o \\\n                      --with-libsodium \\\n                      --with-lua=luajit \\\n                      --with-libcap \\\n                      --with-net-snmp \\\n                      --with-nghttp2 \\\n                      --with-re2'\n    else:\n      features_set = '--disable-dnstap \\\n                      --disable-dnscrypt \\\n                      --disable-ipcipher \\\n                      --disable-systemd \\\n                      --without-cdb \\\n                      --without-ebpf \\\n                      --without-gnutls \\\n                      --without-h2o \\\n                      --without-libedit \\\n                      --without-libsodium \\\n                      --without-lmdb \\\n                      --without-net-snmp \\\n                      --without-nghttp2 \\\n                      --without-re2'\n      additional_flags = '-DDISABLE_COMPLETION \\\n                          -DDISABLE_DELAY_PIPE \\\n                          -DDISABLE_DYNBLOCKS \\\n                          -DDISABLE_PROMETHEUS \\\n                          -DDISABLE_PROTOBUF \\\n                          -DDISABLE_BUILTIN_HTML \\\n                          -DDISABLE_CARBON \\\n                          -DDISABLE_SECPOLL \\\n                          -DDISABLE_DEPRECATED_DYNBLOCK \\\n                          -DDISABLE_LUA_WEB_HANDLERS \\\n                          -DDISABLE_NON_FFI_DQ_BINDINGS \\\n                          -DDISABLE_POLICIES_BINDINGS \\\n                          -DDISABLE_PACKETCACHE_BINDINGS \\\n                          -DDISABLE_DOWNSTREAM_BINDINGS \\\n                          -DDISABLE_COMBO_ADDR_BINDINGS \\\n                          -DDISABLE_CLIENT_STATE_BINDINGS \\\n                          -DDISABLE_QPS_LIMITER_BINDINGS \\\n                          -DDISABLE_SUFFIX_MATCH_BINDINGS \\\n                          -DDISABLE_NETMASK_BINDINGS \\\n                          -DDISABLE_DNSNAME_BINDINGS \\\n                          -DDISABLE_DNSHEADER_BINDINGS \\\n                          -DDISABLE_RECVMMSG \\\n                          -DDISABLE_WEB_CACHE_MANAGEMENT \\\n                          -DDISABLE_WEB_CONFIG \\\n                          -DDISABLE_RULES_ALTERING_QUERIES \\\n                          -DDISABLE_ECS_ACTIONS \\\n                          -DDISABLE_TOP_N_BINDINGS \\\n                          -DDISABLE_OCSP_STAPLING \\\n                          -DDISABLE_HASHED_CREDENTIALS \\\n                          -DDISABLE_FALSE_SHARING_PADDING \\\n                          -DDISABLE_NPN'\n    unittests = get_unit_tests()\n    fuzztargets = get_fuzzing_targets()\n    tools = f'''AR=llvm-ar-{clang_version} RANLIB=llvm-ranlib-{clang_version}''' if is_compiler_clang() else ''\n    configure_cmd = \" \".join([\n        tools,\n        get_base_configure_cmd(additional_c_flags='', additional_cxx_flags=additional_flags, enable_systemd=False, enable_sodium=False),\n        features_set,\n        unittests,\n        fuzztargets,\n        '--enable-lto=thin',\n        '--prefix=/opt/dnsdist'\n    ])\n\n    res = c.run(configure_cmd, warn=True)\n    if res.exited != 0:\n        c.run('cat config.log')\n        raise UnexpectedExit(res)\n\n@task\ndef ci_auth_make(c):\n    c.run(f'make -j{get_build_concurrency()} -k V=1')\n\n@task\ndef ci_auth_make_bear(c):\n    c.run(f'bear --append -- make -j{get_build_concurrency()} -k V=1')\n\ndef run_ninja(c):\n    c.run(f'. {repo_home}/.venv/bin/activate && ninja -j{get_build_concurrency()} --verbose')\n\n@task\ndef ci_auth_build(c, meson=False):\n    if meson:\n        run_ninja(c)\n    else:\n        ci_auth_make_bear(c)\n\n@task\ndef ci_rec_make_bear(c):\n    # Assumed to be running under ./pdns/recursordist/\n    c.run(f'bear --append -- make -j{get_build_concurrency()} -k V=1')\n\n@task\ndef ci_rec_build(c, meson=False):\n    if meson:\n        run_ninja(c)\n    else:\n        ci_rec_make_bear(c)\n\n@task\ndef ci_dnsdist_make(c):\n    c.run(f'make -j{get_build_concurrency(4)} -k V=1')\n\n@task\ndef ci_dnsdist_make_bear(c):\n    # Assumed to be running under ./pdns/dnsdistdist/\n    c.run(f'bear --append -- make -j{get_build_concurrency(4)} -k V=1')\n\n@task\ndef ci_auth_install_remotebackend_test_deps(c):\n    c.sudo('apt-get install -y socat')\n\n@task\ndef ci_auth_run_unit_tests(c, meson=False):\n    if meson:\n        suite_timeout_sec = 120\n        logfile = 'meson-logs/testlog.txt'\n        c.run(f'touch {repo_home}/regression-tests/tests/verify-dnssec-zone/allow-missing {repo_home}/regression-tests.nobackend/rectify-axfr/allow-missing') # FIXME: can this go?\n        res = c.run(f'. {repo_home}/.venv/bin/activate && meson test --verbose -t {suite_timeout_sec}', warn=True)\n    else:\n        logfile = 'pdns/test-suite.log'\n        res = c.run('make check', warn=True)\n    if res.exited != 0:\n        c.run(f'cat {logfile}', warn=True)\n        c.run('cat ../modules/remotebackend/*.log', warn=True)\n        raise UnexpectedExit(res)\n\n@task\ndef ci_rec_run_unit_tests(c, meson=False):\n    if meson:\n        suite_timeout_sec = 120\n        logfile = 'meson-logs/testlog.txt'\n        res = c.run(f'. {repo_home}/.venv/bin/activate && meson test --verbose -t {suite_timeout_sec}', warn=True)\n    else:\n        res = c.run('make check', warn=True)\n        if res.exited != 0:\n          c.run('cat test-suite.log')\n          raise UnexpectedExit(res)\n\n@task\ndef ci_dnsdist_run_unit_tests(c):\n    res = c.run('make check', warn=True)\n    if res.exited != 0:\n      c.run('cat test-suite.log')\n      raise UnexpectedExit(res)\n\n@task\ndef ci_make_distdir(c, meson=False):\n    if not meson:\n        c.run('make distdir')\n\n@task\ndef ci_auth_install(c, meson=False):\n    if not meson:\n        c.run('make install') # FIXME: this builds auth docs - again\n\n@task\ndef ci_make_install(c):\n    c.run('make install')\n\n@task\ndef ci_rec_install(c, meson=False):\n    if not meson:\n        c.run('make install')\n\n@task\ndef add_auth_repo(c, dist_name, dist_release_name, pdns_repo_version):\n    c.sudo('apt-get install -y curl gnupg2')\n    if pdns_repo_version == 'master':\n        c.sudo('curl -s -o /etc/apt/trusted.gpg.d/pdns-repo.asc https://repo.powerdns.com/CBC8B383-pub.asc')\n    else:\n        c.sudo('curl -s -o /etc/apt/trusted.gpg.d/pdns-repo.asc https://repo.powerdns.com/FD380FBB-pub.asc')\n    c.run(f\"echo 'deb [arch=amd64] http://repo.powerdns.com/{dist_name} {dist_release_name}-auth-{pdns_repo_version} main' | sudo tee /etc/apt/sources.list.d/pdns.list\")\n    c.run(\"echo 'Package: pdns-*' | sudo tee /etc/apt/preferences.d/pdns\")\n    c.run(\"echo 'Pin: origin repo.powerdns.com' | sudo tee -a /etc/apt/preferences.d/pdns\")\n    c.run(\"echo 'Pin-Priority: 600' | sudo tee -a /etc/apt/preferences.d/pdns\")\n    c.sudo('apt-get update')\n\n@task\ndef test_api(c, product, backend=''):\n    if product == 'recursor':\n        with c.cd('regression-tests.api'):\n            c.run(f'PDNSRECURSOR=/opt/pdns-recursor/sbin/pdns_recursor ./runtests recursor {backend}')\n    elif product == 'auth':\n        with c.cd('regression-tests.api'):\n            c.run(f'PDNSSERVER=/opt/pdns-auth/sbin/pdns_server PDNSUTIL=/opt/pdns-auth/bin/pdnsutil SDIG=/opt/pdns-auth/bin/sdig MYSQL_HOST={auth_backend_ip_addr} PGHOST={auth_backend_ip_addr} PGPORT=5432 ./runtests authoritative {backend}')\n    else:\n        raise Failure('unknown product')\n\nbackend_regress_tests = dict(\n    bind = [\n        'bind-both',\n        'bind-dnssec-both',\n        'bind-dnssec-nsec3-both',\n        'bind-dnssec-nsec3-optout-both',\n        'bind-dnssec-nsec3-narrow',\n        'bind-dnssec-pkcs11'\n    ],\n    geoip = [\n        'geoip',\n        'geoip-nsec3-narrow'\n    ],\n    lua2 = ['lua2', 'lua2-dnssec'],\n    tinydns = ['tinydns'],\n    remote = [\n        'remotebackend-pipe',\n        'remotebackend-unix',\n        'remotebackend-http',\n        'remotebackend-zeromq',\n        'remotebackend-pipe-dnssec',\n        'remotebackend-unix-dnssec',\n        'remotebackend-http-dnssec',\n        'remotebackend-zeromq-dnssec'\n    ],\n    lmdb = [\n        'lmdb-nodnssec-both',\n        'lmdb-both',\n        'lmdb-nsec3-both',\n        'lmdb-nsec3-optout-both',\n        'lmdb-nsec3-narrow'\n    ],\n    gmysql = [\n        'gmysql',\n        'gmysql-nodnssec-both',\n        'gmysql-nsec3-both',\n        'gmysql-nsec3-optout-both',\n        'gmysql-nsec3-narrow',\n        'gmysql_sp-both'\n    ],\n    gpgsql = [\n        'gpgsql',\n        'gpgsql-nodnssec-both',\n        'gpgsql-nsec3-both',\n        'gpgsql-nsec3-optout-both',\n        'gpgsql-nsec3-narrow',\n        'gpgsql_sp-both'\n    ],\n    gsqlite3 = [\n        'gsqlite3',\n        'gsqlite3-nodnssec-both',\n        'gsqlite3-nsec3-both',\n        'gsqlite3-nsec3-optout-both',\n        'gsqlite3-nsec3-narrow'\n    ],\n    godbc_sqlite3 = ['godbc_sqlite3-nodnssec'],\n    godbc_mssql = [\n        'godbc_mssql',\n        'godbc_mssql-nodnssec',\n        'godbc_mssql-nsec3',\n        'godbc_mssql-nsec3-optout',\n        'godbc_mssql-nsec3-narrow'\n    ],\n    ldap = [\n        'ldap-tree',\n        'ldap-simple',\n        'ldap-strict'\n    ],\n    geoip_mmdb = ['geoip'],\n)\n\nbackend_rootzone_tests = dict(\n    geoip = False,\n    geoip_mmdb = False,\n    lua2 = False,\n    ldap = False,\n    tinydns = False,\n    remote = False,\n    bind = True,\n    lmdb = True,\n    gmysql = True,\n    gpgsql = True,\n    gsqlite3 = True,\n    godbc_sqlite3 = True,\n    godbc_mssql = True,\n)\n\ngodbc_mssql_credentials = {\"username\": \"sa\", \"password\": \"SAsa12%%-not-a-secret-password\"}\n\ngodbc_config = f'''\n[pdns-mssql-docker]\nDriver=FreeTDS\nTrace=No\nServer={auth_backend_ip_addr}\nPort=1433\nDatabase=pdns\nTDS_Version=7.1\n\n[pdns-mssql-docker-nodb]\nDriver=FreeTDS\nTrace=No\nServer={auth_backend_ip_addr}\nPort=1433\nTDS_Version=7.1\n\n[pdns-sqlite3-1]\nDriver = SQLite3\nDatabase = pdns.sqlite3\n\n[pdns-sqlite3-2]\nDriver = SQLite3\nDatabase = pdns.sqlite32\n'''\n\ndef setup_godbc_mssql(c):\n    with open(os.path.expanduser(\"~/.odbc.ini\"), \"a\") as f:\n        f.write(godbc_config)\n    c.sudo('sh -c \\'echo \"Threading=1\" | cat /usr/share/tdsodbc/odbcinst.ini - | tee -a /etc/odbcinst.ini\\'')\n    c.sudo('sed -i \"s/libtdsodbc.so/\\/usr\\/lib\\/x86_64-linux-gnu\\/odbc\\/libtdsodbc.so/g\" /etc/odbcinst.ini')\n    c.run(f'echo \"create database pdns\" | isql -v pdns-mssql-docker-nodb {godbc_mssql_credentials[\"username\"]} {godbc_mssql_credentials[\"password\"]}')\n    # FIXME: Skip 8bit-txt-unescaped test\n    c.run('touch ${PWD}/regression-tests/tests/8bit-txt-unescaped/skip')\n\ndef setup_godbc_sqlite3(c):\n    with open(os.path.expanduser(\"~/.odbc.ini\"), \"a\") as f:\n        f.write(godbc_config)\n    c.sudo('sed -i \"s/libsqlite3odbc.so/\\/usr\\/lib\\/x86_64-linux-gnu\\/odbc\\/libsqlite3odbc.so/g\" /etc/odbcinst.ini')\n\ndef setup_ldap_client(c):\n    c.sudo('DEBIAN_FRONTEND=noninteractive apt-get install -y ldap-utils')\n    c.sudo(f'sh -c \\'echo \"{auth_backend_ip_addr} ldapserver\" | tee -a /etc/hosts\\'')\n\ndef setup_softhsm(c):\n    # Modify the location of the softhsm tokens and configuration directory.\n    # Enables token generation by non-root users (runner)\n    c.run('mkdir -p /opt/pdns-auth/softhsm/tokens')\n    c.run('echo \"directories.tokendir = /opt/pdns-auth/softhsm/tokens\" > /opt/pdns-auth/softhsm/softhsm2.conf')\n\n@task\ndef test_auth_backend(c, backend):\n    pdns_auth_env_vars = f'PDNS=/opt/pdns-auth/sbin/pdns_server PDNS2=/opt/pdns-auth/sbin/pdns_server SDIG=/opt/pdns-auth/bin/sdig NOTIFY=/opt/pdns-auth/bin/pdns_notify NSEC3DIG=/opt/pdns-auth/bin/nsec3dig SAXFR=/opt/pdns-auth/bin/saxfr ZONE2SQL=/opt/pdns-auth/bin/zone2sql ZONE2LDAP=/opt/pdns-auth/bin/zone2ldap ZONE2JSON=/opt/pdns-auth/bin/zone2json PDNSUTIL=/opt/pdns-auth/bin/pdnsutil PDNSCONTROL=/opt/pdns-auth/bin/pdns_control PDNSSERVER=/opt/pdns-auth/sbin/pdns_server SDIG=/opt/pdns-auth/bin/sdig GMYSQLHOST={auth_backend_ip_addr} GMYSQL2HOST={auth_backend_ip_addr} MYSQL_HOST={auth_backend_ip_addr} PGHOST={auth_backend_ip_addr} PGPORT=5432'\n    backend_env_vars = ''\n\n    if backend == 'remote':\n        ci_auth_install_remotebackend_test_deps(c)\n\n    if backend == 'authpy':\n        c.sudo(f'sh -c \\'echo \"{auth_backend_ip_addr} kerberos-server\" | tee -a /etc/hosts\\'')\n        with c.cd('regression-tests.auth-py'):\n            c.run(f'{pdns_auth_env_vars} WITHKERBEROS=YES ./runtests')\n        return\n\n    if backend == 'bind':\n        setup_softhsm(c)\n        backend_env_vars = 'SOFTHSM2_CONF=/opt/pdns-auth/softhsm/softhsm2.conf'\n\n    if backend == 'godbc_sqlite3':\n        setup_godbc_sqlite3(c)\n        backend_env_vars = 'GODBC_SQLITE3_DSN=pdns-sqlite3-1'\n\n    if backend == 'godbc_mssql':\n        setup_godbc_mssql(c)\n        backend_env_vars = f'GODBC_MSSQL_PASSWORD={godbc_mssql_credentials[\"password\"]} GODBC_MSSQL_USERNAME={godbc_mssql_credentials[\"username\"]} GODBC_MSSQL_DSN=pdns-mssql-docker GODBC_MSSQL2_PASSWORD={godbc_mssql_credentials[\"password\"]} GODBC_MSSQL2_USERNAME={godbc_mssql_credentials[\"username\"]} GODBC_MSSQL2_DSN=pdns-mssql-docker'\n\n    if backend == 'ldap':\n        setup_ldap_client(c)\n\n    if backend == 'geoip_mmdb':\n        backend_env_vars = 'geoipdatabase=../modules/geoipbackend/regression-tests/GeoLiteCity.mmdb'\n\n    with c.cd('regression-tests'):\n        if backend == 'lua2':\n            c.run('touch trustedkeys')  # avoid silly error during cleanup\n        for variant in backend_regress_tests[backend]:\n            c.run(f'{pdns_auth_env_vars} {backend_env_vars} ./start-test-stop 5300 {variant}')\n\n    if backend_rootzone_tests[backend]:\n        with c.cd('regression-tests.rootzone'):\n            for variant in backend_regress_tests[backend]:\n                c.run(f'{pdns_auth_env_vars} {backend_env_vars} ./start-test-stop 5300 {variant}')\n\n    if backend == 'gsqlite3':\n        if os.getenv('SKIP_IPV6_TESTS'):\n            pdns_auth_env_vars += ' context=noipv6'\n        with c.cd('regression-tests.nobackend'):\n            c.run(f'{pdns_auth_env_vars} ./runtests')\n        c.run('/opt/pdns-auth/bin/pdnsutil test-algorithms')\n        return\n\n@task\ndef test_ixfrdist(c):\n    with c.cd('regression-tests.ixfrdist'):\n        c.run('IXFRDISTBIN=/opt/pdns-auth/bin/ixfrdist ./runtests')\n\n@task\ndef test_dnsdist(c):\n    c.run('chmod +x /opt/dnsdist/bin/*')\n    c.run('ls -ald /var /var/agentx /var/agentx/master')\n    c.run('ls -al /var/agentx/master')\n    with c.cd('regression-tests.dnsdist'):\n        c.run('DNSDISTBIN=/opt/dnsdist/bin/dnsdist LD_LIBRARY_PATH=/opt/dnsdist/lib/ ENABLE_SUDO_TESTS=1 ./runtests')\n\n@task\ndef test_regression_recursor(c):\n    c.run('/opt/pdns-recursor/sbin/pdns_recursor --version')\n    c.run('PDNSRECURSOR=/opt/pdns-recursor/sbin/pdns_recursor RECCONTROL=/opt/pdns-recursor/bin/rec_control ./build-scripts/test-recursor')\n\n@task\ndef test_bulk_recursor(c, size, threads, mthreads, shards, ipv6):\n    with c.cd('regression-tests'):\n        c.run('curl --no-progress-meter -LO http://s3-us-west-1.amazonaws.com/umbrella-static/top-1m.csv.zip')\n        c.run('unzip top-1m.csv.zip -d .')\n        c.run('chmod +x /opt/pdns-recursor/bin/* /opt/pdns-recursor/sbin/*')\n        c.run(f'DNSBULKTEST=/usr/bin/dnsbulktest RECURSOR=/opt/pdns-recursor/sbin/pdns_recursor RECCONTROL=/opt/pdns-recursor/bin/rec_control IPv6={ipv6} THRESHOLD=95 TRACE=no ./recursor-test 5300 {size} {threads} {mthreads} {shards}')\n\n@task\ndef install_swagger_tools(c):\n    c.run('npm install -g api-spec-converter')\n\n@task\ndef swagger_syntax_check(c):\n    c.run('api-spec-converter docs/http-api/swagger/authoritative-api-swagger.yaml -f swagger_2 -t openapi_3 -s json -c')\n\n@task\ndef install_coverity_tools(c, project):\n    token = os.getenv('COVERITY_TOKEN')\n    c.run(f'curl -s https://scan.coverity.com/download/linux64 --data \"token={token}&project={project}\" | gunzip | sudo tar xvf /dev/stdin --strip-components=1 --no-same-owner -C /usr/local', hide=True)\n\n@task\ndef coverity_clang_configure(c):\n    c.sudo(f'/usr/local/bin/cov-configure --template --comptype clangcc --compiler clang++-{clang_version}')\n\n@task\ndef coverity_make(c):\n    c.run('/usr/local/bin/cov-build --dir cov-int make -j8 -k')\n\n@task\ndef coverity_tarball(c, tarball):\n    c.run(f'tar caf {tarball} cov-int')\n\n@task\ndef coverity_upload(c, email, project, tarball):\n    token = os.getenv('COVERITY_TOKEN')\n    c.run(f'curl --form token={token} \\\n            --form email=\"{email}\" \\\n            --form file=@{tarball} \\\n            --form version=\"$(./builder-support/gen-version)\" \\\n            --form description=\"master build\" \\\n            https://scan.coverity.com/builds?project={project}', hide=True)\n\n@task\ndef ci_build_and_install_quiche(c, repo):\n    with c.cd(f'{repo}/builder-support/helpers/'):\n        # be careful that rust needs to have been installed system-wide,\n        # as the one installed in GitHub actions' Ubuntu images in /home/runner/.cargo/bin/cargo\n        # is not in the path for the root user (and shouldn't be)\n        c.run(f'sudo {repo}/builder-support/helpers/install_quiche.sh')\n\n    # cannot use c.sudo() inside a cd() context, see https://github.com/pyinvoke/invoke/issues/687\n    c.run('sudo mv /usr/lib/libdnsdist-quiche.so /usr/lib/libquiche.so')\n    c.run(\"sudo sed -i 's,^Libs:.*,Libs: -lquiche,g' /usr/lib/pkgconfig/quiche.pc\")\n    c.run('mkdir -p /opt/dnsdist/lib')\n    c.run('cp /usr/lib/libquiche.so /opt/dnsdist/lib/libquiche.so')\n\n# this is run always\ndef setup():\n    if '/usr/lib/ccache' not in os.environ['PATH']:\n        os.environ['PATH']='/usr/lib/ccache:'+os.environ['PATH']\n\nsetup()\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}