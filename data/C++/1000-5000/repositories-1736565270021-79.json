{
  "metadata": {
    "timestamp": 1736565270021,
    "page": 79,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "boostorg/beast",
      "stars": 4416,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.6728515625,
          "content": "# Copyright 2019 - 2021 Alexander Grund\n# Distributed under the Boost Software License, Version 1.0.\n# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)\n#\n# Sample codecov configuration file. Edit as required\n\ncodecov:\n  max_report_age: off\n  require_ci_to_pass: yes\n  notify:\n    # Increase this if you have multiple coverage collection jobs\n    after_n_builds: 1\n    wait_for_ci: yes\n\n# Change how pull request comments look\ncomment:\n  layout: \"reach,diff,flags,files,footer\"\n\n# Ignore specific files or folders. Glob patterns are supported.\n# See https://docs.codecov.com/docs/ignoring-paths\nignore:\n  - extra/*\n  - extra/**/*\n  - test/*\n  - test/**/*\n"
        },
        {
          "name": ".drone.star",
          "type": "blob",
          "size": 4.640625,
          "content": "# Use, modification, and distribution are\n# subject to the Boost Software License, Version 1.0. (See accompanying\n# file LICENSE.txt)\n#\n# Copyright Rene Rivera 2020.\n\n# For Drone CI we use the Starlark scripting language to reduce duplication.\n# As the yaml syntax for Drone CI is rather limited.\n#\n#\nglobalenv={'B2_CI_VERSION': '1', 'B2_VARIANT': 'release'}\n\ndef main(ctx):\n\n  alljobs=[]\n  customizedjobs = [\n  linux_cxx(\"GCC 10, Debug + Coverage\", \"g++-10\", packages=\"g++-10 libssl-dev libffi-dev binutils-gold gdb mlocate\", image=\"cppalliance/droneubuntu2004:1\", buildtype=\"boost_v1\", buildscript=\"drone\", environment={\"GCOV\": \"gcov-10\", \"LCOV_VERSION\": \"1.15\", \"VARIANT\": \"beast_coverage\", \"TOOLSET\": \"gcc\", \"COMPILER\": \"g++-10\", \"CXXSTD\": \"14\", \"DRONE_BEFORE_INSTALL\" : \"beast_coverage\", \"CODECOV_TOKEN\": {\"from_secret\": \"codecov_token\"}}, globalenv=globalenv, privileged=True),\n  linux_cxx(\"Default clang++ with libc++\", \"clang++-libc++\", packages=\"libc++-dev mlocate\", image=\"cppalliance/droneubuntu1604:1\", buildtype=\"boost_v1\", buildscript=\"drone\", environment={ \"B2_TOOLSET\": \"clang-7\", \"B2_CXXSTD\": \"17,2a\", \"VARIANT\": \"debug\", \"TOOLSET\": \"clang\", \"COMPILER\": \"clang++-libc++\", \"CXXSTD\": \"11\", \"CXX_FLAGS\": \"<cxxflags>-stdlib=libc++ <linkflags>-stdlib=libc++\", \"TRAVISCLANG\" : \"yes\" }, globalenv=globalenv),\n  linux_cxx(\"GCC Valgrind\", \"g++\", packages=\"g++-14 libssl-dev valgrind\", image=\"cppalliance/droneubuntu2404:1\", buildtype=\"boost_v1\", buildscript=\"drone\", environment={ \"VARIANT\": \"beast_valgrind\", \"TOOLSET\": \"gcc\", \"COMPILER\": \"g++\", \"CXXSTD\": \"11\" }, globalenv=globalenv),\n  linux_cxx(\"Default g++\", \"g++\", packages=\"mlocate\", image=\"cppalliance/droneubuntu1604:1\", buildtype=\"boost_v1\", buildscript=\"drone\", environment={ \"VARIANT\": \"release\", \"TOOLSET\": \"gcc\", \"COMPILER\": \"g++\", \"CXXSTD\": \"11\" }, globalenv=globalenv),\n  linux_cxx(\"GCC 8, C++17, libstdc++, release\", \"g++-8\", packages=\"g++-8 mlocate\", image=\"cppalliance/droneubuntu1604:1\", buildtype=\"boost_v1\", buildscript=\"drone\", environment={  \"VARIANT\": \"release\", \"TOOLSET\": \"gcc\", \"COMPILER\": \"g++-8\", \"CXXSTD\" : \"17\" }, globalenv=globalenv),\n  linux_cxx(\"Clang 18, UBasan\", \"clang++-18\", packages=\"clang-18 libssl-dev\", image=\"cppalliance/droneubuntu2404:1\", buildtype=\"boost_v1\", buildscript=\"drone\", environment={\"VARIANT\": \"beast_ubasan\", \"TOOLSET\": \"clang\", \"COMPILER\": \"clang++-18\", \"CXXSTD\": \"17\", \"UBSAN_OPTIONS\": 'print_stacktrace=1', \"DRONE_BEFORE_INSTALL\": \"UBasan\" }, globalenv=globalenv, privileged=True),\n  linux_cxx(\"docs\", \"\", packages=\"docbook docbook-xml docbook-xsl xsltproc libsaxonhe-java default-jre-headless flex libfl-dev bison unzip rsync mlocate\", image=\"cppalliance/droneubuntu1804:1\", buildtype=\"docs\", buildscript=\"drone\", environment={\"COMMENT\": \"docs\"}, globalenv=globalenv),\n  linux_cxx(\"GCC 14, UBasan\", \"g++-14\", packages=\"g++-14\", buildtype=\"boost\", buildscript=\"drone\", image=\"cppalliance/droneubuntu2404:1\", environment={'COMMENT': 'ubsan', 'B2_VARIANT': 'debug', 'B2_TOOLSET': 'gcc-14', 'B2_CXXSTD': '14,17,20,23', 'B2_UBSAN': '1', 'B2_DEFINES': 'BOOST_NO_STRESS_TEST=1', 'B2_LINKFLAGS': '-fuse-ld=gold'}, globalenv=globalenv, privileged=True),\n  linux_cxx(\"coverity\", \"g++\", packages=\"\", buildtype=\"coverity\", buildscript=\"drone\", image=\"cppalliance/droneubuntu1804:1\", environment={'COMMENT': 'Coverity Scan', 'B2_TOOLSET': 'clang', 'DRONE_JOB_UUID': '472b07b9fc'}, globalenv=globalenv),\n  windows_cxx(\"msvc-14.1\", \"\", image=\"cppalliance/dronevs2017\", buildtype=\"boost\", buildscript=\"drone\", environment={ \"VARIANT\": \"release\", \"TOOLSET\": \"msvc-14.1\", \"CXXSTD\": \"17\", \"ADDRESS_MODEL\": \"64\"}),\n  windows_cxx(\"msvc-14.2\", \"\", image=\"cppalliance/dronevs2019\", buildtype=\"boost\", buildscript=\"drone\", environment={ \"VARIANT\": \"release\", \"TOOLSET\": \"msvc-14.2\", \"CXXSTD\": \"17\", \"ADDRESS_MODEL\": \"64\"}),\n  windows_cxx(\"msvc-14.3\", \"\", image=\"cppalliance/dronevs2022:1\", buildtype=\"boost\", buildscript=\"drone\", environment={ \"VARIANT\": \"release\", \"TOOLSET\": \"msvc-14.3\", \"CXXSTD\": \"20\", \"ADDRESS_MODEL\": \"64\"}),\n   ]\n\n  generatedjobs = generate(\n        # Compilers\n        ['gcc >=5.0',\n         'clang >=3.8',\n         # 'msvc >=14.1',\n         'arm64-gcc latest',\n         's390x-gcc latest',\n         'freebsd-gcc latest',\n         'apple-clang latest',\n         'arm64-clang latest',\n         # 's390x-clang latest',\n         'freebsd-clang latest',\n         # 'x86-msvc latest'\n        ],\n        # Standards\n        '>=11',\n        docs=False, ubsan=False, asan=False, cache_dir='cache'\n)\n\n  alljobs.extend(generatedjobs)\n  alljobs.extend(customizedjobs)\n  return alljobs\n\n# from https://github.com/boostorg/boost-ci\nload(\"@ci_automation//ci/drone/:functions.star\", \"linux_cxx\",\"windows_cxx\",\"osx_cxx\",\"freebsd_cxx\", \"generate\")\n"
        },
        {
          "name": ".drone",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.255859375,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Github\n.md         text eol=lf\n\n# Visual Studio\n*.sln       text eol=crlf\n*.vcproj    text eol=crlf\n*.vcxproj   text eol=crlf\n*.props     text eol=crlf\n*.filters   text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0546875,
          "content": "bin/\nbin64/\n\n# Because of CMake and VS2017\nWin32/\nx64/\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 109.904296875,
          "content": "Version 356:\n\n* Added `error_code` overload for `basic_fields::insert()`\n* Added overload for `websocket::stream::get_status` to query permessage-deflate status\n* Fixed use-after-move in calls to `net::dispatch` within `http::basic_stream`, which caused `bad_executor` exceptions on timeouts\n* Removed mutating operations in initiating functions\n* Fixed cancellation handling in `teardown_tcp_op`\n* Set `state_` in `basic_parser` before calling `on_finish_impl`\n* Removed static specifier from `clamp` functions\n* Addressed `-Wattributes` warnings in tests\n* Addressed unreachable code warning in tests\n* Added forward declaration headers for types in `beast::http` namespace\n* Enabled `http::parser` to use `basic_fields::insert()` with `error_code` overload\n* Applied `header_limit_` in `http::basic_parser` to trailer headers\n* Improved `http::basic_parser` to return `http::error::header_limit` earlier\n* Added support for modular boost build structure\n\n--------------------------------------------------------------------------------\n\nVersion 355:\n\n* awaitable examples are simplified\n* server-flex-awaitable example demonstrates an explicit, graceful shutdown\n* Add fuzzing targets\n* Fix overloads that are ambiguous when using default completion tokens\n* Fix misplaced static_assert in `http::basic_fields` move-assignment operator\n* Fix narrowing conversion in `read_size_hint_db()`\n\n--------------------------------------------------------------------------------\n\nVersion 354:\n\n* `ssl_stream` and `flat_stream` are deprecated (Use `net::ssl::stream` instead)\n* `net::ssl::stream` is canonical in examples and snippets\n* `ssl_stream` does not use `flat_stream`\n* Add `SSL/TLS Shutdown Procedure` section to documentation\n* Add HTTP status code 418 (\"I'm a teapot\")\n* `websocket::stream::read_size_hint()` does not exceed read_message_max\n* Fix underflow of `bytes_transferred` in websocket partial write operations\n* Fix error handling of SSL/TLS shutdown operations in examples\n* Fix handling of expired timers in `basic_stream::ops::transfer_op`\n* Fix ambiguity in `test::basic_stream` constructor overloads\n* Fix partial parsing of the final chunk in `http::parser`\n* Fix dereferenced null pointer warning in `test::immediate_executor`\n* Fix warnings in tests\n* Fix OpenSSL builds in GHA CI and Drone CI\n* Fix `test::immediate_executor` type traits \n* Refactor Jamfiles to limit the scope of definitions\n* Expand CI matrix\n\n--------------------------------------------------------------------------------\n\nVersion 353:\n\n* Fix unreachable code warning in `buffers_cat.hpp`\n* Fix zlib name conflicts\n* Status code list confirms with IANA registry\n* Add `const_iterator` to `buffers_adaptor::subrange`\n* Improve documentation\n\n--------------------------------------------------------------------------------\n\nVersion 352:\n\n* Fix paragraph separation issue in the documentation\n* Improve documentation for `http::message::prepare_payload()`\n* Strengthen the buffer contract on `flat_buffer` and `flat_static_buffer`\n* Add a non-allocating overload for the error category message function\n* Replace internal uses of `beast::bind_front_handler` with `asio::prepend`\n* Specialize `asio::associator` for `bind_wrapper` and `bind_front_wrapper`\n* Fix an infinite loop bug in `websocker_server_awaitable.cpp`\n* Fix the write loop in advanced server examples\n\n--------------------------------------------------------------------------------\n\nVersion 351:\n\n* Use the explicit type std::size_t when completing transfer_op\n\n--------------------------------------------------------------------------------\n\nVersion 350:\n\n* Allocation and invocation hooks are removed\n* `detail::bind_default_executor` helper is removed\n* Improve documentation for `websocket::stream::async_write_some`\n\n--------------------------------------------------------------------------------\n\nVersion 349:\n\n* Add support for `immediate_executor`\n* `BOOST_ASIO_INITFN_AUTO_RES` replaces `BOOST_ASIO_INITFN_RESULT_TYPE`\n* Update license info for `work_guard`\n* Correct handler requirements of ping/pong\n* Improve Drone caching\n* `server-flex-awaitable` example now resets parser\n* OpenSSL 1.1.1.2100 or later is required for x86\n* GCC 5.0 or later is required\n* Introduce self-hosted GitHub actions runners\n* Minor documentation fixes and updates\n\n--------------------------------------------------------------------------------\n\nVersion 348:\n\n* multiple CI fixes\n* jamfile uses openssl.jam\n* websocket uses upper case Upgrade for connection field\n* ssl_stream does not use BOOST_BEAST_ASYNC_TPARAM1 because of clang-16\n* doc updates\n\n--------------------------------------------------------------------------------\n\nVersion 347:\n\n* `placeholder` ambiguity fix.\n* awaitable server example fix\n* doc updates.\n\n--------------------------------------------------------------------------------\n\nVersion 346:\n\n* beast file_body & file support seek\n* file_body buffer size can be configured\n* examples & tests use context instead of coroutine\n* basic_stream doesn't use try-catch with no-exceptions set\n* error categories use numeric id\n* timer inside basic_stream uses the right executor\n* self-posting is posting to the io-object's executor\n* all error_codes use source_locations\n\n--------------------------------------------------------------------------------\n\nVersion 345:\n\n* Warning & typo fixes.\n\n--------------------------------------------------------------------------------\n\nVersion 344:\n\n* Internal fixes adopting to asio changes.\n\n\n--------------------------------------------------------------------------------\n\nVersion 343:\n\n* Beast IO-objects support rebinding constructors\n* C++20 coroutine examples\n\n--------------------------------------------------------------------------------\n\nVersion 342:\n\n* Support per operation cancellation\n\n--------------------------------------------------------------------------------\n\nVersion 341:\n\n*  Expect header field with the \"100-continue\" is handled in upgrade.\n\n--------------------------------------------------------------------------------\n\nVersion 340:\n\n* buffers have a features table in the docs\n* buffer_ref allows using beast buffers with asio\n* buffer_adaptor works with multi-buffer\n\n--------------------------------------------------------------------------------\n\nVersion 339:\n\n* BOOST_BEAST_USE_STD_STRING_VIEW is replaced by boost/core string_view.\n* defining BOOST_BEAST_USE_STD_STRING_VIEW yields a deprecation warning\n\n--------------------------------------------------------------------------------\n\nVersion 338:\n\n* Added per message compression options.\n\n--------------------------------------------------------------------------------\n\nVersion 337:\n\n* Added timeout option to websocket\n\n--------------------------------------------------------------------------------\n\nVersion 336:\n\n* Remove incorrect ASSERT in WebSocket read.\n\n--------------------------------------------------------------------------------\n\nVersion 335:\n\n* Reduce size of multi_buffer.\n* Upgrade OS on some drone CI jobs.\n\n--------------------------------------------------------------------------------\n\nVersion 334:\n\n* Fix version number in CML.\n\n--------------------------------------------------------------------------------\n\nVersion 333:\n\n* Workaround TSAN CI bug.\n\n--------------------------------------------------------------------------------\n\nVersion 332:\n\n* Fix beast::zlib warnings\n* Improve documentation\n\n--------------------------------------------------------------------------------\n\nVersion 331:\n\n* Using core::string_view instead of utility::string_view\n* Use static_string from Boost.StaticString\n* Use span from Boost.Core\n* Fix CVE-2018-25032 in zlib streams\n* Add http::message_generator\n* Add buffers_generator\n* serializer::is_done is const\n\n--------------------------------------------------------------------------------\n\nVersion 330:\n\n* Update release notes for Boost 1.79.\n\n--------------------------------------------------------------------------------\n\nVersion 329:\n\n* Add missing include in `file_body` test.\n\n--------------------------------------------------------------------------------\n\nVersion 328:\n\n* Add ARM64 builds to Drone CI.\n\n--------------------------------------------------------------------------------\n\nVersion 327:\n\n* Fix async_base documentation link.\n\n--------------------------------------------------------------------------------\n\nVersion 326:\n\n* Remove GitHub stalebot.\n\n--------------------------------------------------------------------------------\n\nVersion 325:\n\n* WebSocket handshake response is deterministic on failure.\n\n--------------------------------------------------------------------------------\n\nVersion 324:\n\n* Fix open append mode for file_posix.\n* Fix open append mode for file_win32.\n* Add tests for file open in append mode.\n* Fix file open with append/append_existing flag on Windows.\n\n--------------------------------------------------------------------------------\n\nVersion 323:\n\n* Fix clang-cl UTF8 path handling for `file_win32`.\n* Fix clang-cl UTF8 path handling for `file_stdio`.\n* Add individual tests to CMake workflow.\n* Update CI to include gcc 11, clang 12, msvc 14.3.\n* Update code coverage settings.\n\n--------------------------------------------------------------------------------\n\nVersion 322:\n\n* Fix typo in `_experimental::test::basic_stream` documentation.\n\n--------------------------------------------------------------------------------\n\nVersion 321:\n\n* Remove test framework's dependency on RTTI.\n* Fix CVE-2016-9840 in zlib implementation.\n* Fix TLS SNI handling in websocket_client_async_ssl example.\n* Fix reuse of sliding window in WebSocket permessage_deflate.\n* Fix accept error handling in http_server_async example.\n* Move library-specific docca configuration to Beast.\n* Remove dependency on RTTI in `test::stream`.\n\n--------------------------------------------------------------------------------\n\nVersion 320:\n\n* Fix missing includes in `stream_state`.\n* Update GitHub Actions CI.\n\n--------------------------------------------------------------------------------\n\nVersion 319:\n\n* Update release notes for Boost 1.77.\n\n--------------------------------------------------------------------------------\n\nVersion 318:\n\n* Add a Boost-friendly subproject case to CMakeLists.\n* Remove use of POSIX-only constant.\n\n--------------------------------------------------------------------------------\n\nVersion 317:\n\n* Remove travis CI.\n* Fix Drone CI script.\n* Add example of reading large response body.\n\n--------------------------------------------------------------------------------\n\nVersion 316:\n\n* Disable GHA CI for clang-9.\n* Update example root certificates.\n\n--------------------------------------------------------------------------------\n\nVersion 315:\n\n* Documentation uses docca jam module.\n\n--------------------------------------------------------------------------------\n\nVersion 314:\n\n* WebSocket test is deterministic.\n* Add missing compilers to GHA script.\n\n--------------------------------------------------------------------------------\n\nVersion 313:\n\n* Fix incorrect websocket test ordering.\n* Fix missing check for error code after header is parsed.\n* Fix case where inflated content is larger than the out buffer.\n\n--------------------------------------------------------------------------------\n\nVersion 312:\n\n* Enable Github Actions CI.\n\n--------------------------------------------------------------------------------\n\nVersion 311:\n\n* Fix warning in http-server-fast.\n* Parenthesise all uses of min() and max().\n* Extend Drone MSVC tests.\n* Fix MSVC build error.\n\n--------------------------------------------------------------------------------\n\nVersion 310:\n\n* Update Release Notes.\n\n--------------------------------------------------------------------------------\n\nVersion 309:\n\n* Extra logic error detection in http parser.\n* Move Windows CI to Drone.\n\n--------------------------------------------------------------------------------\n\nVersion 308:\n\n* Fix compiler warning in WebSSocket async shutdown.\n* Remove Travis CI status.\n* Repoint B2 refs to new non-boostorg home.\n* Limit async_write instantiations in websocket ops.\n* Add Drone CI status.\n\n--------------------------------------------------------------------------------\n\nVersion 307:\n\n* Add executor rebind to test::stream.\n* Remove floating point arithmetic requirement.\n* Add `cxxstd` to json field.\n\n--------------------------------------------------------------------------------\n\nVersion 306:\n\n* Revert removal of lowest_layer_type from test stream.\n\n--------------------------------------------------------------------------------\n\nVersion 305:\n\n* Fix documentation build.\n\n--------------------------------------------------------------------------------\n\nVersion 304:\n\n* Fix C++20 coroutine tests.\n* Fix links to Bishop Fox Security Assessment.\n\n--------------------------------------------------------------------------------\n\nVersion 303:\n\n* Add Bishop Fox Security Assessment.\n\n--------------------------------------------------------------------------------\n\nVersion 302:\n\n* Fix assert when basic_stream used as underlying of ssl::stream with zero-length write.\n* Add Sec-* HTTP headers.\n* Fix nullptr implicit cast on `fields::set()`.\n\n--------------------------------------------------------------------------------\n\nVersion 301:\n\n* Fix Travis CI bug.\n* Fix erroneous error when HTTP `body_limit` is `none`.\n* Fix unreachable code warning with MSVC.\n* Fix logic error in advance_server_flex.\n* Fix file open with append_existing flag on posix.\n* Websocket SSL `teardown` also tears down underlying TCP.\n* Update WebSocket examples to set TLS SNI.\n* Add handler tracking locations to websocket.\n* Add handler tracking locations to tcp teardown.\n* Eliminate spurious uninitialised variable warning in detect_ssl.\n* Add handler tracking locations to flat_stream.\n* Add handler tracking locations to detect_ssl.\n* Add handler tracking locations to icy_stream.\n* Add handler tracking locations to basic_stream.\n* Add handler tracking locations to http operations.\n\nAPI Changes:\n\n* Previously, `teardown` and `async_teardown` of a websocket connection over SSL\n  would only shut down the SSL layer, leaving the TCP layer connected. Now the\n  SSL teardown will tear down both the SSL and TCP layers, cleanly shutting down\n  the TCP connection and closing the socket.\n  Should the client expect the TCP socket to remain connected, users will need to\n  re-engineer their code.\n\n--------------------------------------------------------------------------------\n\nVersion 300:\n\n* Fix compile errors under Clang 3.4\n* Fix portability bug in websocket server sync example.\n\n--------------------------------------------------------------------------------\n\nVersion 299:\n\n* Fix race in http-crawl example.\n\n--------------------------------------------------------------------------------\n\nVersion 298:\n\n* Support BOOST_ASIO_NO_TS_EXECUTORS.\n* Use strand<> rather than legacy executor io_context::strand.\n* Use dispatch/post free functions to be independent of executor concept.\n* New name for polymorphic executor. Trait for detecting new executors.\n* Handler invoke and allocation hooks are deprecated.\n\n--------------------------------------------------------------------------------\n\nVersion 297:\n\n* iless and iequal take part in Heterogeneous Lookup\n* Fix `max` compile error\n* Deprecate `string_param` (API Change)\n\nAPI Changes:\n\n* `string_param`, which was previously the argument type when setting field values\n   has been replaced by `string_view`. Because of this, it is no longer possible to\n   set message field values directly as integrals.\n\n   Users are required to convert numeric arguments to a string type prior to calling\n   `fields::set` et. al.\n\n   Beast provides the non-allocating `to_static_string()` function for this purpose.\n\n   To set Content-Length field manually, call `message::content_length`.\n\n--------------------------------------------------------------------------------\n\nVersion 296:\n\n* Remove buffers_adapter.hpp (API Change)\n* Remove zlib error `invalid_code_lenths`(sic) (API Change)\n* Remove `core/type_traits.hpp` (API Change)\n* Remove `reset` function from `flat_static_buffer` (API Change)\n* Remove `mutable_data_type` from Dyanmic Buffers (API Change)\n* Remove deprecated lowest_layer from test::stream\n* Remove handler_pointer (API Change)\n* Remove websocket::role_type (API Change)\n* Remove accept_ex and handshake_ex variants (API Change)\n* Rename to BOOST_BEAST_ALLOW_DEPRECATED (API Change)\n\nAPI Changes:\n\n* The file `core/buffers_adapter.hpp` has been removed along with the deprecated\n  alias typename `buffers_adapter`. Affected programs should use\n  `core/buffers_adapator.hpp` and the type `buffers_adaptor`.\n\n* The error code enum `invalid_code_lenths` was a synonym of `invalid_code_lengths`.\n  Affected programs should be modified to use `invalid_code_lengths`.\n\n* The `core/type_traits.hpp` public header has been removed and along with it\n  the type trait `is_completion_handler`. Beast uses the CompletionHandler correctness\n  checks provided by Asio. In a c++20 environment, these convert to concept checks.\n\n* The `reset` function has been removed from `flat_static_buffer`. Use the\n  `clear` function instead.\n\n* Code that depends on `mutable_data_type` should be refactored to use\n  `mutable_buffers_type`. Classes affected are:\n  - `buffers_adaptor`\n  - `flat_buffer`\n  - `flat_static_buffer`\n  - `multi_buffer`\n  - `static_buffer`\n\n* handler_ptr has been removed. Users should use net::bind_handler and/or\nbind_front_handler instead.\n\n* websocket::role_type has been removed. Users should use beast::role_type instead.\n\n* The following deprecated functions have been removed:\n  - websocket::async_accept_ex\n  - websocket::async_handshake_ex\n  - websocket::accept_ex\n  - websocket::handshake_ex\n\nPrograms still using these names should be refactored to use the `decorator` feature and\nthe remaining handshake and accept functions.\n\n* The macro BOOST_BEAST_NO_DEPRECATED will no longer be noticed by Beast. The only way to\nenable deprecated functionality is now the macro BOOST_BEAST_ALLOW_DEPRECATED which is\nundefined by default. That is, all deprecated behaviour is disabled by default.\n\n--------------------------------------------------------------------------------\n\nVersion 295:\n\n* Parser body_limit is optional (API Change)\n* Fix basic_stream expires_after (API Change)\n* Fix FILE namespace qualification\n\nAPI Changes:\n\n* The signature of basic_parser<>::body_limit(n) has changed. It now accepts an\noptional std::uint64_t. The caller may indicate that no body limit is required\nby calling body_limit(boost::none). The default limits remain in place in order\nto maintain 'safe by default' behaviour.\n\n* basic_stream::expires_after used to take a nanosecond duration type argument. This\nrequired users on systems where the steady_clock::duration_type was less accurate\nto explicity duration_cast when calling this function, making code non-portable.\nThe duration type is now that of the embedded steady_clock.\n\n--------------------------------------------------------------------------------\n\nVersion 294:\n\n* Fix FILE namespace qualification\n* Fix http read bytes_transferred (API Change)\n\nAPI Changes:\n\nThe following functions did not previously report the number of bytes consumed\nby the HTTP parser:\n\n- http::read\n- http::read_header\n- http::read_some\n- http::async_read\n- http::async_read_header\n- http::async_read_some\n\nAs of now, the `bytes_transferred` return value will indicate the number of bytes\nconsumed by the parser when parsing an http message.\n\nActions Required:\n\n- Modify calling code which depends on the value returned from these functions.\n\n--------------------------------------------------------------------------------\n\nVersion 293:\n\n* Fix async_connect documentation\n* Fix assert in websocket\n* No automatic User-Agent in WebSocket\n\nBehaviour Changes:\n\n* No automatic User-Agent in WebSocket\n  Beast websocket streams will no longer automatically set the\n  User-Agent HTTP header during client handshake. This header is not required\n  by the WebSocket standard. If this field is required, user code may set it\n  in the decorator\n\n--------------------------------------------------------------------------------\n\nVersion 292:\n\n* Fix compile errors on Visual Studio with /std:c++latest\n* Fix standalone compilation error with std::string_view\n* OpenSSL 1.0.2 or later is required\n* Fix c++20 deprecation warning in span_body\n\n--------------------------------------------------------------------------------\n\nVersion 291:\n\n* Test websocket with use_awaitable\n* Test http write with use_awaitable\n* Test http read with use_awaitable\n* Fix use buffered_read_stream with use_awaitable\n* Implement is_completion_token_for trait\n* Test use_awaitable with basic_stream\n* Fix async_detect_ssl with use_awaitable\n* Add clang coroutines-ts to circleci config\n\n--------------------------------------------------------------------------------\n\nVersion 290:\n\n* Travis build host now bionic\n* Update Release Notes\n\nVersion 289:\n\n* Fix Host header in websocket examples\n\n--------------------------------------------------------------------------------\n\nVersion 288:\n\n* Fix Content-Length parsing\n* Update credits\n\n--------------------------------------------------------------------------------\n\nVersion 287:\n\n* Remove CODE_OF_CONDUCT.md\n* Refactor websocket read\n* Correct buffer_bytes documentation\n* Fix examples to dispatch to strand\n* Ensure basic_stream::close will not throw\n\n--------------------------------------------------------------------------------\n\nVersion 286:\n\n* Refactor multi_buffer\n* Refactor buffers_adapter\n* Refactor static_buffer\n* Refactor flat_buffer\n* Refactor flat_static_buffer\n* Fix missing include in sha1.hpp\n* Fix ostream warning\n* Field digest is endian-independent\n* update broken links in README\n* Fix ostream flush\n\nAPI Changes:\n\n* Nested const and mutable buffer types for all\n  Beast dynamic buffers are refactored. Affected types:\n  - buffers_adapter\n  - flat_buffer\n  - flat_static_buffer\n  - multi_buffer\n  - static_buffer\n\n* Nested mutable_data_type in Beast dynamic buffers is deprecated:\n\nChanges Required:\n\n* Use nested mutable_buffers_type instead of mutable_data_type,\n  or define BOOST_BEAST_ALLOW_DEPRECATED\n\n--------------------------------------------------------------------------------\n\nVersion 285:\n\n* Translate some win32 errors to net error codes\n* enable circleci integration\n* flat_buffer shrink_to_fit is noexcept\n* moved-from dynamic buffers do not clear if different allocator\n* fix erase field\n\n--------------------------------------------------------------------------------\n\nVersion 284:\n\n* fix compilation macro documentation\n* examples use strands correctly\n* update root certificates in examples\n* clarify end-of-file behaviour in File::read docs\n* file_body returns short_read on eof during read\n* fix bug in win32 file_body\n\n--------------------------------------------------------------------------------\n\nVersion 283:\n\n* ostream_buffer satisfies preconditions of DynamicBuffer_v1::commit\n* Add accessor function to File member of basic_file_body\n\nVersion 282:\n\n* Use superproject docca\n* Fix release build of docs\n* file_win32 supports UTF-8 paths\n* file_stdio supports unicode paths\n\n--------------------------------------------------------------------------------\n\nVersion 281:\n\n* Travis builds docs\n* Fix echo-op test\n* file_win32 bodies respect http::serializer::split\n\n--------------------------------------------------------------------------------\n\nVersion 280:\n\n* Fix non-msvc cmake\n* Use docca master branch\n\n--------------------------------------------------------------------------------\n\nVersion 279:\n\n* Use regular throw in test\n* Fix pragma warning\n\n--------------------------------------------------------------------------------\n\nVersion 278:\n\n* Use regular throw in test\n\n--------------------------------------------------------------------------------\n\nVersion 277:\n\n* Update release notes\n\n--------------------------------------------------------------------------------\n\nVersion 276:\n\n* https_get example sends the Host header\n* Fix async_close error code when async_read times out\n* Refactor zlib tests and fix enum typo\n\n--------------------------------------------------------------------------------\n\nVersion 275:\n\n* Async init-fns use the executor's default token\n* Add basic_stream::rebind_executor\n* Use automatically deduced return types for all async operations\n* Support Concepts for completion token params\n\n--------------------------------------------------------------------------------\n\nVersion 274:\n\n* Fix leftovers in basic_parser corner case\n\n--------------------------------------------------------------------------------\n\nVersion 273:\n\n* Squelch spurious websocket timer assert\n* Use the executor type in basic_stream timer\n\n--------------------------------------------------------------------------------\n\nVersion 272:\n\n* Add BEAST_THROWS\n* Add zlib tests and fixes\n\n--------------------------------------------------------------------------------\n\nVersion 271:\n\n* Add HTTP async client with system_executor example\n* Add WebSocket async client with system_executor example\n* Fix data race in HTTP server examples\n* Fix data race in WebSocket examples\n\n--------------------------------------------------------------------------------\n\nVersion 270:\n\n* Silence unused variables\n* Fix typo\n\n--------------------------------------------------------------------------------\n\nVersion 269:\n\n* Fix /permissive- missing include\n* Add test\n\n--------------------------------------------------------------------------------\n\nVersion 268:\n\n* root_certificates.hpp is not for production\n\n--------------------------------------------------------------------------------\n\nVersion 267:\n\n* Add package for Travis config\n* Fix signed/unsigned mismatch in file_stdio::seek\n* basic_stream dtor cannot throw\n* cmake: check policy first\n* Add default dtors to satisfy -Wnon-virtual-dtor\n* Multiple I/O of the same type is not supported\n\n--------------------------------------------------------------------------------\n\nVersion 266:\n\n* Fix some missing deduced return types in the docs\n\n--------------------------------------------------------------------------------\n\nVersion 265:\n\n* Fix outgoing websocket message compression\n\n--------------------------------------------------------------------------------\n\nVersion 264:\n\n* Handle overflow in max size calculation in `basic_dynamic_body`\n* Fix unused variable warnings in tests\n* Fix missing initializer warning in `basic_fields`\n* Remove unused functions in `impl/static_string.hpp`\n* Fix unused variable warning in `multi_buffer`\n* Fix header-only compilation errors in some configurations\n* Workaround for miscompilation in MSVC 14.2\n\n--------------------------------------------------------------------------------\n\nVersion 263:\n\n* Update documentation\n\n--------------------------------------------------------------------------------\n\nVersion 262:\n\n* Fix deallocate in multi_buffer\n\n--------------------------------------------------------------------------------\n\nVersion 261:\n\n* Deduplicate `websocket::read_size_hint` definition\n* Fix UB in websocket read tests\n* Remove redundant includes in websocket\n* Simplify websocket::detail::prng\n* Don't over-allocate in http::basic_fields\n* Fix multi_buffer allocation alignment\n* Tidy up buffers_range\n\n--------------------------------------------------------------------------------\n\nVersion 260:\n\n* More split compilation in rfc7230.hpp\n* Qualify calls to `beast::iequals` in basic_parser.ipp\n* More split compilation in websocket/detail/mask.hpp\n* Cleanup transitive includes in beast/core/detail/type_traits.hpp\n* Simplify generation of sec-websocket-key\n* Move detail::base64 helpers to tests\n* Remove redundant includes in core\n\n--------------------------------------------------------------------------------\n\nVersion 259:\n\n* Reduce the number of instantiations of filter_token_list\n* Remove the use of `static_string` from `http::fields`\n* Add gcc-9 to AzP CI test matrix\n* Enable split compilation in http::basic_fields\n* Remove redundant instation of `static_string` in websocket\n* Remove redundant use of `asio::coroutine` in `flat_stream`\n* Remove unused includes from `test::stream`\n* Move `char_buffer` into a separate file\n* Fix coverage collection in AzP CI\n* Improve performance of `http::string_to_verb`\n* Replace uses of `net::coroutine` with `asio::coroutine`\n* Replace uses of `net::spawn` with `asio::spawn`\n* Use `beast::read_size` in `detail::read`\n\n--------------------------------------------------------------------------------\n\nVersion 258:\n\n* Fix separate compilation in CI\n* Fix clang inititalization warning in websocket\n* Remove redundant use of `yield_to` in parser tests\n* Add VS 2019 AzP CI matrix item\n* Clean up typo in chat websocket javascript client\n\n--------------------------------------------------------------------------------\n\nVersion 257:\n\n* Add b2 features for compile-time options used in testing\n* Remove redundant dependencies in http/server/fast example\n* Remove experimental/unit_test/thread.hpp\n* Use `if` statement in basic_stream::transfer_op\n* Fix flat_buffer copy members\n\n--------------------------------------------------------------------------------\n\nVersion 256:\n\n* Remove uses of the deprecated `buffers` function\n* Remove uses of deprecated methods in websocket tests\n* Remove redundant use of `static_string`\n* Remove redundant template in service_base\n* Expand CI matrix using Azure Pipelines\n* Make chat websocket javascript client more user friendly\n* `allocator_traits::construct` is used for user-defined types\n* Add 1-element specialization for `buffers_cat`\n* Fix `buffers_cat` iterator tests\n* Don't pessimize-move\n* Use steady_timer type\n* Preserve operation_aborted on partial message\n\n--------------------------------------------------------------------------------\n\nVersion 255:\n\n* Add idle ping suspend test\n* Fix moved-from executor in idle ping timeout\n\n--------------------------------------------------------------------------------\n\nVersion 254:\n\n* Fix data race in test::stream::connect\n* Fix UB in websocket close tests\n* Fix uninitalized memory use in deflate_stream\n* Fix gcc-8 warning in websocket::stream\n\n--------------------------------------------------------------------------------\n\nVersion 253:\n\n* Fix async_detect_ssl handler type\n* member get_executor const-correctness\n* Fix min/max on MSVC\n* Relax requirements for vector_body\n\n--------------------------------------------------------------------------------\n\nVersion 252:\n\n* More std::string_view fixes\n* CI copies to libs/beast\n\n--------------------------------------------------------------------------------\n\nVersion 251:\n\n* Clean up CI scripts\n* detect_ssl uses bool\n* launder pointers\n* Fix compilation on MSVC with std::string_view\n* Replace static_string in parser\n\n--------------------------------------------------------------------------------\n\nVersion 250:\n\n* Use SaxonHE in reference generation\n* Cleanup endianness conversions\n* Set parser status and flags even if body_limit_ has been reached\n\n--------------------------------------------------------------------------------\n\nVersion 249:\n\n* Move friend function template definition\n\n--------------------------------------------------------------------------------\n\nVersion 248:\n\n* Don't use a moved-from handler\n\n--------------------------------------------------------------------------------\n\nVersion 247:\n\n* Fix async_base immediate completion\n\n--------------------------------------------------------------------------------\n\nVersion 246:\n\n* decorator ctor is explicit\n\n--------------------------------------------------------------------------------\n\nVersion 245:\n\n* decorator constructor is constrained\n\n--------------------------------------------------------------------------------\n\nVersion 244:\n\n* Tidy up declval in some traits\n* Fix websocket keep-alive ping expiration\n\n--------------------------------------------------------------------------------\n\nVersion 243:\n\n* Fix some typos\n* Tidy up file_stdio for VS2015\n* Fix http::message constructor constraint\n\n--------------------------------------------------------------------------------\n\nVersion 242:\n\n* test::stream has deprecated lowest_layer for ssl\n* MSVC uses ::fopen_s\n* Fix http::message constructor constraint\n* Check defined(BOOST_MSVC)\n\n--------------------------------------------------------------------------------\n\nVersion 241:\n\n* Tidy up a doc code snippet\n* basic_parser::content_length is stable (API Change)\n\n--------------------------------------------------------------------------------\n\nVersion 240:\n\n* Fix ssl_stream teardown\n\n--------------------------------------------------------------------------------\n\nVersion 239:\n\n* More split compilation in HTTP\n\n--------------------------------------------------------------------------------\n\nVersion 238:\n\n* Refactor Jamfiles to work with release layout\n\n--------------------------------------------------------------------------------\n\nVersion 237:\n\n* cmake: Use static libs to speed up builds\n\n--------------------------------------------------------------------------------\n\nVersion 236:\n\n* root_certificates.hpp: brought in the server certificate\n\n--------------------------------------------------------------------------------\n\nVersion 235:\n\n* Fix self-assignment warning in buffer test\n* Jamfile cleanup\n\n--------------------------------------------------------------------------------\n\nVersion 234:\n\n* Don't link to OpenSSL needlessly (bjam)\n* HTTPS URLs in README.md\n\n--------------------------------------------------------------------------------\n\nVersion 233:\n\n* Check __ANDROID__ instead\n* Use secure TLS/SSL versions\n\n--------------------------------------------------------------------------------\n\nVersion 232:\n\n* Fix close_socket for net::basic_socket changes\n* Fix file_win32_write_op async initiation\n* Fix basic_stream lowest_layer for ssl\n\n--------------------------------------------------------------------------------\n\nVersion 231:\n\n* Doc section names are stable\n* Add missing include\n* Constrain to_static_string to integers\n\n--------------------------------------------------------------------------------\n\nVersion 230:\n\n* Don't use dynamic_buffer_ref\n* Remove dynamic_buffer_ref\n* Fix completion handler invocation signatures\n\n--------------------------------------------------------------------------------\n\nVersion 229:\n\n* Rename to buffer_bytes\n* Tidy up examples\n* detect_ssl returns a bool\n* Fix stable_async_base example\n\nAPI Changes:\n\n* handler_ptr is deprecated\n\nActions Required:\n\n* Replace use of `handler_ptr` with `stable_async_base`\n  and `allocate_stable`.\n\n--------------------------------------------------------------------------------\n\nVersion 228:\n\n* Fix UB in decorator:\n* Sync up convenience headers\n* The Fields concept is deprecated (API Change)\n* Fix includes.xsl for newer doxygen\n* Tidy up quick reference\n* SSL teardowns are in an associated namespace\n\n--------------------------------------------------------------------------------\n\nVersion 227:\n\n* Fix decorator for certain sizes\n\n--------------------------------------------------------------------------------\n\nVersion 226:\n\n* Support -fno-exceptions\n* make_strand is in net::\n* Fix HTTP parser static string calculation\n* Move parser definitions to .ipp\n* Appveyor uses msvc-14.0\n\n--------------------------------------------------------------------------------\n\nVersion 225:\n\n* Tidy up an unused function\n* Fix wsload jamfile\n* Examples use flat_buffer\n* Remove session_alloc (API Change)\n\nActions Required:\n\n* Don't use session_alloc\n\n--------------------------------------------------------------------------------\n\nVersion 224:\n\n* Remove extraneous error check in advanced-server-flex\n* Advanced servers use HTTP parser interfaces for reading\n* Reusing an HTTP parser returns an error\n\n--------------------------------------------------------------------------------\n\nVersion 223:\n\n* Add test::stream::service\n* Add websocket service\n* Pausation abandoning test\n* Destroy abandoned websocket ops on shutdown\n\n--------------------------------------------------------------------------------\n\nVersion 222:\n\n* stream_base::timeout::suggested is a nested function\n\n--------------------------------------------------------------------------------\n\nVersion 221:\n\n* Rename to async_base, stable_async_base\n* role_type is in boost/beast/core/role.hpp (API Change)\n* Cleanup in test::stream internals\n* Pass references as pointers to async_initiate\n\nActions Required:\n\n* Include <boost/beast/core/role.hpp> or\n  define BOOST_BEAST_ALLOW_DEPRECATED=1\n\n--------------------------------------------------------------------------------\n\nVersion 220:\n\n* Documentation and release notes\n\n--------------------------------------------------------------------------------\n\nVersion 219:\n\n* More split definitions in test::stream\n* Visual Studio 2017 minimum requirement for Windows\n* Better treatment of SSL short reads\n* ssl_stream is a public interface\n* basic_parser is abstract, not CRTP (API Change)\n* OpenSSL is required for tests and examples\n\n--------------------------------------------------------------------------------\n\nVersion 218:\n\n* detect_ssl, async_detect_ssl are public interfaces\n* Add OpenSSL installation/setup instructions\n* Enable split Beast compilation for tests\n\n--------------------------------------------------------------------------------\n\nVersion 217:\n\n* websocket idle pings\n* RatePolicy documentation\n* Pass strand to async_accept\n* Fix file_body_win32\n* Use async_initiate\n* Check BOOST_NO_CXX11_THREAD_LOCAL\n* Fast prng is pcg\n\n--------------------------------------------------------------------------------\n\nVersion 216:\n\n* Refactor websocket::stream operations\n* Add websocket::stream timeouts\n* Use suggested timeouts in Websocket examples\n* Add make_strand\n* Add RatePolicy to basic_stream\n* Use async_initiate in basic_stream\n* basic_stream connects are members\n* Beast supports latest Asio changes (API Change)\n* WebSocket Decorator is a socket option (API Change)\n* Overloads of the following functions which accept a Decorator\n  are deprecated:\n  - accept, accept_ex\n  - handshake, handshake_ex\n  - async_accept, async_accept_ex\n  - async_handshake, async_handshake_ex\n\nActions Required:\n\n* Code which passes decorator to any `websocket::stream` member\n  function should call `stream::set_option` instead with a newly\n  constructed `stream_base::decorator` object containing the\n  decorator. Alternatively, the macro `BOOST_BEAST_ALLOW_DEPRECATED`\n  may be defined to 1.\n\n* Fix compilation errors required by Asio changes\n\n--------------------------------------------------------------------------------\n\nVersion 215:\n\n* basic_stream uses boost::shared_ptr\n* Remove bind_back_handler\n* bind_front_handler works with member functions\n* Examples use bind_front_handler\n* Add experimental test/handler.hpp\n* Rename to async_op_base::invoke_now\n* Add async_op_base::invoke\n* Remove CppCon2018 example\n* Examples use ssl_stream\n\n--------------------------------------------------------------------------------\n\nVersion 214:\n\n* Handler binders use the associated allocator\n* Add detail::bind_continuation\n* Rewrite the echo-op example\n\n--------------------------------------------------------------------------------\n\nVersion 213:\n\n* Fix posix_file::close handling of EINTR\n* basic_stream subsumes stranded_stream:\n* Use timeouts in HTTP server examples\n* Use timeouts in HTTP client examples\n* Use tcp_stream in WebSocket client examples\n* Use tcp_stream in WebSocket server examples\n* Use tcp_stream, HTTP timeouts in advanced servers\n\n--------------------------------------------------------------------------------\n\nVersion 212:\n\n* dynamic_buffer_ref tests and tidy\n* flat_stream tests and tidy\n* stranded_socket tests and tidy\n* buffers_front tests\n* Improved websocket stream documentation\n\n--------------------------------------------------------------------------------\n\nVersion 211:\n\n* close_socket is in stream_traits.hpp\n* Improvements to test::stream\n* Add stranded_stream\n* Add flat_stream\n* flat_buffer::clear preserves capacity\n* multi_buffer::clear preserves capacity\n* Fixes to rfc7230\n\n--------------------------------------------------------------------------------\n\nVersion 210:\n\n* Tidy up read implementation\n* Fix stable_async_op_base javadoc\n* Better handling of stream timeouts\n* Add stream_traits.hpp\n* Add executor_type trait\n* Fix hexadecimal string conversion table\n* is_completion_handler, type_traits.hpp are deprecated\n* Fixes to test::stream::async_read\n\nAPI Changes:\n\n* Stream traits are now in stream_traits.hpp\n* `is_file` is now in file_base.hpp\n* is_completion_handler is deprecated\n\nActions Required:\n\n* Include stream_traits.hpp as needed\n* Include file_base.hpp as needed\n* Use std::is_invocable instead of is_completion_handler\n\n--------------------------------------------------------------------------------\n\nVersion 209:\n\n* Faster http::string_to_field\n* async_echo supports move-only handlers\n* test::stream maintains a handler work guard\n* Qualify buffer_copy, don't qualify buffer_size\n* Add dynamic_buffer_ref\n* Refactor quickref.xml\n* Add buffer_size\n\n--------------------------------------------------------------------------------\n\nVersion 208:\n\n* Add get_lowest_layer free function\n* Add lowest_layer_type metafunction\n* Add close_socket, beast_close_socket customization\n* Doc work\n\n--------------------------------------------------------------------------------\n\nVersion 207\n\n* Send from the strand\n* Pass the correct handler in basic_timeout_stream\n\nAPI Changes:\n\n* lowest_layer is removed\n\nActions Required:\n\n* Remove lowest_layer and lowest_layer_type from user-defined streams.\n* Use the get_lowest_layer free function and the lowest_layer_type trait\n  as needed.\n\n--------------------------------------------------------------------------------\n\nVersion 206\n\n* Clear error codes idiomatically\n* websocket stream uses shared_ptr<impl_type>\n* Add websocket-chat-multi example\n\n--------------------------------------------------------------------------------\n\nVersion 205\n\n* Doc work\n* Add detail/soft_mutex.hpp\n* Add detail/prng.hpp\n\n--------------------------------------------------------------------------------\n\nVersion 204\n\n* Add basic_timeout_stream\n* Unit test macros use the global suite\n* Doc work\n\n--------------------------------------------------------------------------------\n\nVersion 203\n\n* Update networking refresher doc\n* Include error code in call to set_option\n* saved_handler is a public interface\n* Use new saved_handler in websocket\n* session_alloc is thread-safe\n* examples use flat_buffer\n* parse_until is not static\n* Boost.System is header-only\n\n--------------------------------------------------------------------------------\n\nVersion 202\n\n* Use cxxstd instead of cxxflags\n* Update coverage badge images\n* Tidy up basic_stream_socket docs\n* Refactor async_op_base\n* Use async_op_base\n* async_op_base is a public interface\n* Add tests for bind_back_handler\n* Add tests for async_op_base\n\n--------------------------------------------------------------------------------\n\nVersion 201\n\n* Decay bound arguments in handler wrapper parameters\n* Add bind_back_handler\n* Tidy up default-constructed iterators\n* Add core errors and conditions\n* New basic_stream_socket\n\n--------------------------------------------------------------------------------\n\nVersion 200\n\n* Don't include OpenSSL for core snippets\n* Tidy up msvc-14 workaround in multi_buffer\n* buffers_cat fixes and coverage\n* Refactor buffers_adaptor\n* Refactor buffers_range\n* Fix and refactor buffers_cat\n* Refactor buffers_prefix\n* Add const and mutable buffer sequence traits\n* Add buffers_iterator_type trait\n* Use new buffer traits, remove old unused traits\n* Optimize for size on buffers_cat preconditions\n* Refactor buffers_suffix\n* Tidy up flat_buffer tests\n* Fix ostream prepare calculation for low limits\n* Tidy up flat_static_buffer tests\n* Add more tests for dynamic buffers\n* Tidy up multi_buffer\n* Refactor ostream\n* Refactor static_buffer\n* HTTP tidying\n* Adjust static_asio lib options in Jamfile\n* Add type_traits tests\n* Add buffers_range_ref (replaces reference_wrapper parameter)\n\nAPI Changes:\n\n* buffers_adaptor replaces buffers_adapter (rename)\n* make_printable replaces buffers (rename)\n* Remove file_mode::append_new\n\nActions Required:\n\n* Replace buffers_adapter.hpp with buffers_adaptor.hpp, and\n  replace buffers_adapter with buffers_adaptor. Or, define\n  BOOST_BEAST_ALLOW_DEPRECATED\n\n* Replace call sites to use make_printable instead of buffers,\n  and also include make_printable.hpp instead of ostream.hpp.\n\n* Replace file_mode::append_new with file_mode::append\n  or file_mode::append_existing instead of file_mode::append_new\n\n--------------------------------------------------------------------------------\n\nVersion 199:\n\n* Workarounds for msvc-14\n* Fix Appveyor badge links\n\n--------------------------------------------------------------------------------\n\nVersion 198:\n\n* flat_buffer improvements\n* multi_buffer improvements\n* static_buffer improvements\n* flat_static_buffer_improvements\n* saved_handler maintains a work_guard (websocket)\n* Add buffer_traits.hpp, buffers_type\n* Tidy up experimental files\n* Tidy up core files\n* Fix bind_handler, bind_front_handler\n* Improved handler bind wrapper tests\n\nAPI Changes:\n\n* Files return errc::bad_file_descriptor\n* flat_static_buffer::reset is deprecated\n\nActions Required:\n\n* Callers checking for errc::invalid_argument from calls to\n  file APIs should check for errc::bad_file_descriptor instead.\n\n* Replace calls to flat_static_buffer::reset with\n  flat_static_buffer::clear\n\n--------------------------------------------------------------------------------\n\nVersion 197:\n\n* Improvements to echo-op example\n* Crawler example clears the response before each read\n* Use a struct instead of a pair in flat_stream (experimental)\n\nAPI Changes:\n\n* Refactor HTTP operations\n\nActions Required:\n\n* Callers depending on the return value of http::read or\n  http::async_read overloads should adjust the usage of\n  the returned value as needed.\n\n--------------------------------------------------------------------------------\n\nVersion 196:\n\n* Tidy up calls to placement new\n* Remove unused type_traits\n* Simplify handler_ptr\n\n--------------------------------------------------------------------------------\n\nVersion 195:\n\n* net is a namespace alias for boost::asio\n* Simplify multi_buffer and static_buffer sequences\n* Documentation work\n\n--------------------------------------------------------------------------------\n\nVersion 194:\n\n* http::async_read returns the right byte count on error\n* Add net namespace alias\n* Don't use-after-free in test\n* Tidy up ssl_stream (experimental)\n* Dynamic buffer improvements\n* Saved handlers are dispatched\n\n--------------------------------------------------------------------------------\n\nVersion 193:\n\n* Update ssl_stream signatures for networking changes\n* Fix test::stream async_result transformation\n* Tidy up test::stream\n* Enable explicit instantiation of websocket::stream\n\n--------------------------------------------------------------------------------\n\nVersion 192:\n\n* Use mp11::integer_sequence\n* Tidy up warnings and deprecated usage\n* http::message is not-a boost::empty_value\n* Fix link in docs\n* Fixes to timeout services (experimental)\n\n--------------------------------------------------------------------------------\n\nVersion 191:\n\n* Add bind_front_handler\n* Use bind_front_handler\n* Simplify some type traits\n* Use lean_tuple in buffers_cat\n* Use lean_tuple in bind_handler, bind_front_handler\n* Use mp11 in detail::variant\n* Fix buffers_cat uninitialized warning\n* Fix static_string uninitialized warning\n* Fix warning in is_ssl_handshake\n\n--------------------------------------------------------------------------------\n\nVersion 190:\n\n* Add missing includes to convenience headers\n* Unit test framework is experimental\n* Add buffers_range\n* Rename experimental directory\n* Improve compilation of tests for continuous integration\n* Fix visibility warnings in test\n\n--------------------------------------------------------------------------------\n\nVersion 189-hf1:\n\n* Fix broken doc link\n* example/cppcon2018 only requires C++11\n\n--------------------------------------------------------------------------------\n\nVersion 189:\n\n* Add CppCon2018 chat server example and video\n\n--------------------------------------------------------------------------------\n\nVersion 188:\n\n* Remove extraneous strand from example\n* Add missing include in http/read.ipp\n* Test for gcc warning bug\n* Fix a spurious gcc warning\n\n--------------------------------------------------------------------------------\n\nVersion 187:\n\n* Add experimental timeout_socket\n* Fix warning in file tests\n* Fix uninitialized comparison in buffers iterator\n* Partial support for BOOST_NO_EXCEPTIONS\n* Fix a spurious gcc warning\n* Test for gcc warning bug\n* Add missing include\n* Remove extraneous strand from example\n\n--------------------------------------------------------------------------------\n\nVersion 186:\n\n* basic_fields uses intrusive base hooks\n* Fix parsing of out-of-bounds hex values\n\n--------------------------------------------------------------------------------\n\nVersion 185:\n\n* Remove extraneous function\n* Fix some typos\n* Add BOOST_BEAST_USE_STD_STRING_VIEW\n* Fix timer on websocket upgrade in examples\n\n--------------------------------------------------------------------------------\n\nVersion 183:\n\n* Fix a rare case of failed UTF8 validation\n* Verify certificates in client examples\n* Use boost::empty_value\n* Workaround for http-server-fast and libstdc++\n\n--------------------------------------------------------------------------------\n\nVersion 182:\n\n* Silence ubsan false positive\n\n--------------------------------------------------------------------------------\n\nVersion 181:\n\n* Fix parse_dec algorithm\n* Add parse_dec tests\n\n--------------------------------------------------------------------------------\n\nVersion 180:\n\n* Fix http_server_stackless_ssl.cpp example\n\n--------------------------------------------------------------------------------\n\nVersion 179:\n\n* Use the exchange() idiom in move constructors\n* Most members of std::allocate are deprecated in C++17\n* Remove some unused variables\n\n--------------------------------------------------------------------------------\n\nVersion 178:\n\n* Use static_cast instead\n\n--------------------------------------------------------------------------------\n\nVersion 177:\n\n* Add test for issue #1188\n* Set /permissive-\n* Check error in example set_option\n\n--------------------------------------------------------------------------------\n\nVersion 176:\n\n* Tidy up Quick Reference\n* Fix array end calculation in utf8 assertion\n* WebSocket masks use secure PRNG by default\n\n--------------------------------------------------------------------------------\n\nVersion 175:\n\n* Fix initialization warning\n\n--------------------------------------------------------------------------------\n\nVersion 174:\n\n* Fix Fields, FieldsWriter concept docs\n* Fix BodyReader constructor requirements doc\n\n--------------------------------------------------------------------------------\n\nVersion 173:\n\n* Remove Autobahn testsuite doc note\n* Fix buffers_adapter iterator value type\n* Fix buffers_adapter max_size\n* Fix buffers_prefix iterator decrement\n* buffers_adapter improvements\n* Add icy_stream Shoutcast stream filter\n\n--------------------------------------------------------------------------------\n\nVersion 172:\n\n* Tidy up websocket stream javadocs\n* Fix move-only arguments in bind_handler\n* Fix http::parser constructor javadoc\n* Tidy up test::stream javadocs\n* Tidy up composed operation doc\n\n--------------------------------------------------------------------------------\n\nVersion 171:\n\n* Add handler_ptr::has_value\n* Remove spurious assert\n* Fix unused variable warning\n\n--------------------------------------------------------------------------------\n\nVersion 170:\n\n* Add flat_stream to experimental\n* Add ssl_stream to experimental\n* Add test::error to experimental\n* Add test::fail_count to experimental\n* Add test::stream to experimental\n* Use a shared string for example HTTP server doc roots\n* Remove deprecated serializer::reader_impl()\n* Remove deprecated Body reader and writer ctor signatures\n* Add is_mutable_body_writer metafunction\n* Add const and non-const overloads for message based http writes\n* Use the root certificate which matches the fingerprint\n\n--------------------------------------------------------------------------------\n\nVersion 169:\n\n* Use buffers_to_string in tests\n* Use boost::void_t\n* Refactor HTTP write_op implementation\n* Use fully qualified namespace in BOOST_BEAST_HANDLER_INIT\n* New flat_stream example class\n* Use flat_stream in ssl_stream example code\n\n--------------------------------------------------------------------------------\n\nVersion 168:\n\n* Use executor_work_guard in composed operations\n* Revert verb.ipp change which caused spurious warnings\n* Fix race in advanced server examples\n\n--------------------------------------------------------------------------------\n\nVersion 167:\n\n* Revert: Tidy up calls to post()\n\n--------------------------------------------------------------------------------\n\nVersion 166:\n\n* Use boost::is_convertible as a workaround\n\n--------------------------------------------------------------------------------\n\nVersion 165:\n\n* Fix BOOST_NO_CXX11_ALLOCATOR check\n\n--------------------------------------------------------------------------------\n\nVersion 164:\n\n* Fix masking on continuation frames\n* Add Access-Control-Expose-Headers field constant\n\n--------------------------------------------------------------------------------\n\nVersion 163:\n\n* Tidy up calls to post()\n* Fix narrowing warnings\n\n--------------------------------------------------------------------------------\n\nVersion 162:\n\n* Add asio_handler_invoke overloads for stream algorithms\n* Improve websocket::stream::control_callback javadoc\n\n--------------------------------------------------------------------------------\n\nVersion 161:\n\n* Don't copy the handler in write_some_op\n* Add move-only handler tests\n* Fix handler parameter javadocs\n\n--------------------------------------------------------------------------------\n\nVersion 160:\n\n* Examples clear the HTTP message before reading\n\n--------------------------------------------------------------------------------\n\nVersion 159:\n\n* Fix typo in release notes\n* Safe treatment of zero-length string arguments in basic_fields\n* Some basic_fields operations now give the strong exception guarantee\n\n--------------------------------------------------------------------------------\n\nVersion 158:\n\n* Tidy up end_of_stream javadoc\n* Tidy up websocket docs\n* Examples set reuse_address(true)\n* Advanced servers support clean shutdown via SIGINT or SIGTERM\n* DynamicBuffer input areas are not mutable\n* Tidy up some documentation\n\nAPI Changes:\n\n* get_lowest_layer is a type alias\n\nActions required:\n\n* Replace instances of `typename get_lowest_layer<T>::type`\n  with `get_lowest_layer<T>`.\n\n--------------------------------------------------------------------------------\n\nVersion 157:\n\n* Fix teardown for TIME_WAIT\n* Fix big-endian websocket masking\n\n--------------------------------------------------------------------------------\n\nVersion 156:\n\n* Don't use typeid\n* Add release notes to documentation\n* Fix stale link for void-or-deduced\n\n--------------------------------------------------------------------------------\n\nVersion 155:\n\n* Fix memory leak in advanced server examples\n* Fix soft-mutex assert in websocket stream\n* Fix fallthrough warnings\n* Tidy up bind_handler doc\n\n--------------------------------------------------------------------------------\n\nVersion 154:\n\n* Type check completion handlers\n* bind_handler doc update\n* bind_handler works with boost placeholders\n\n--------------------------------------------------------------------------------\n\nVersion 153:\n\n* Remove BOOST_VERSION checks\n* Use make_error_code for setting an error_code from errc\n* Use boost::winapi::GetLastError() consistently\n* Update README.md for branches\n* Avoid string_view::clear\n* Fix iterator version of basic_fields::erase\n* Fix use-after-move in example request handlers\n* Add Bishop Fox interview media\n\n--------------------------------------------------------------------------------\n\nVersion 152:\n\n* Refactor detect_ssl_op\n* Disable gdb on Travis for Meltdown\n\nWebSocket:\n\n* Redistribute the read tests in the translation units\n* Refactor error headers\n* Add WebSocket error conditions\n\nAPI Changes:\n\n* Refactor WebSocket errors (API Change):\n\nActions Required:\n\n* Code which explicitly compares error_code values against the\n  constant `websocket::error::handshake_failed` should compare\n  against `websocket::condition::handshake_failed` instead.\n\n* Code which explicitly compares error_code values against the\n  constant `websocket::error::failed` should compare\n  against `websocket::condition::protocol_violation` instead.\n\n--------------------------------------------------------------------------------\n\nVersion 151:\n\n* Sanitizer failures are errors\n* Depend on container_hash\n* Fix high-ASCII in source file\n\nWebSocket:\n\n* Control callback is invoked on the execution context\n* Add stream_fwd.hpp\n* Remove unnecessary include\n\nAPI Changes:\n\n* http::parser is not MoveConstructible\n* permessage-deflate is a compile-time feature\n\n--------------------------------------------------------------------------------\n\nVersion 150:\n\n* handler_ptr tests\n* Documentation\n\nAPI Changes:\n\n* serializer::reader_impl is deprecated\n\nActions Required:\n\n* Call serializer::writer_impl instead of reader_impl\n\n--------------------------------------------------------------------------------\n\nVersion 149:\n\n* built-in r-value return values can't be assigned\n* Tidy up ssl_stream special members\n* Fix CMakeLists.txt variable\n* Protect calls from macros\n* pausation always allocates\n* Don't copy completion handlers\n* handler_ptr is move-only\n* Fix Travis memory utilization\n\nAPI Changes:\n\n* handler_ptr gives the strong exception guarantee\n\nActions Required:\n\n* Change the constructor signature for state objects\n  used with handler_ptr to receive a const reference to\n  the handler.\n\n--------------------------------------------------------------------------------\n\nVersion 148:\n\n* Install codecov on codecov CI targets only\n* Update reports for hybrid assessment\n* Handle invalid deflate frames\n\n--------------------------------------------------------------------------------\n\nVersion 147:\n\n* Don't use boost::string_ref\n* Use iterator wrapper in detail::buffers_range\n\nHTTP:\n\n* Tidy up basic_fields exception specifiers\n\nWebSocket:\n\n* control callback is copied or moved\n* Send idle pings in advanced servers\n\n--------------------------------------------------------------------------------\n\nVersion 146:\n\n* Fix some typos\n* Faster ascii_tolower\n* Documentation tidying\n* Fix typo in examples documentation\n* Add detail::aligned_union and tidy up\n* Use variant in buffers_cat_view\n\nAPI Changes:\n\n* Remove unintended public members of handler_ptr\n\n--------------------------------------------------------------------------------\n\nVersion 145:\n\n* Rename some detail functions\n* Refactor basic_fields allocator internals\n* Refactor HTTP async read composed operations\n* null_buffers is deprecated\n* Version 124 works with Boost 1.65.1 and earlier\n* basic_fields does not support fancy pointers\n\n--------------------------------------------------------------------------------\n\nVersion 144-hf1:\n\n* Update reports for hybrid assessment\n* Handle invalid deflate frames\n* Install codecov on codecov CI targets only\n\n--------------------------------------------------------------------------------\n\nVersion 144:\n\n* Fix websocket permessage-deflate negotiation\n\n--------------------------------------------------------------------------------\n\nVersion 143:\n\n* Fix autobahn report link\n\n--------------------------------------------------------------------------------\n\nVersion 142:\n\n* Warn about upcoming API changes to certain concepts\n* Fix name typo in http write test\n\n--------------------------------------------------------------------------------\n\nVersion 141:\n\n* Tidy up some documentation\n\n--------------------------------------------------------------------------------\n\nVersion 140:\n\n* Fix some integer warnings in 64-bit builds\n* Fix utf8_checker test failures\n* Fix signature for async_read_some, and tests\n* Tidy up basic_parser\n* Some basic_fields special members are protected\n\n--------------------------------------------------------------------------------\n\nVersion 139:\n\n* Revisit boost library min/max guidance\n\n--------------------------------------------------------------------------------\n\nVersion 138:\n\n* Tidy up some documentation\n\n--------------------------------------------------------------------------------\n\nVersion 137:\n\n* ConstBufferSequence mandates pointer equivalence\n* Add FieldsWriter constructor requirement\n* Tidy up some documented constructor syntax\n\n--------------------------------------------------------------------------------\n\nVersion 136:\n\n* Tidy up message doc image\n\n--------------------------------------------------------------------------------\n\nVersion 135:\n\n* Fix typo in example server help text\n\n--------------------------------------------------------------------------------\n\nVersion 134:\n\n* Add static_buffer_base default constructor definition\n\n--------------------------------------------------------------------------------\n\nVersion 133:\n\n* Remove const&& overload of message::body\n\n--------------------------------------------------------------------------------\n\nVersion 132:\n\n* Tidy up project folders in CMakeLists.txt\n* Rename Cmake variables for clarity\n* Add ref-qualified overloads for message::body\n* Tidy up FieldsReader doc\n\nAPI Changes:\n\n* Fields::writer replaces Fields::reader\n* BodyReader and BodyWriter names are swapped\n\nActions Required:\n\n* Rename reader to writer for user defined Fields\n* Swap the reader and writer names for user defined Body types\n* Swap use of is_body_reader and is_body_writer\n\n--------------------------------------------------------------------------------\n\nVersion 131:\n\n* basic_fields returns const values\n* Set SNI hostname in example SSL clients\n\n--------------------------------------------------------------------------------\n\nVersion 130:\n\n* Tidy up fallthrough warning\n* Remove cxx11_sfinae_expr build requirement from tests\n\n--------------------------------------------------------------------------------\n\nVersion 129:\n\n* Add autobahn test report to doc\n* Documentation tidying\n* Fix prepare_payload: chunked is HTTP/1.1\n\n--------------------------------------------------------------------------------\n\nVersion 128:\n\n* Update doc links\n* Add explicit-failures-markup.xml\n\nHTTP:\n\n* Add message::need_eof\n* Use message::need_eof in example servers\n* Use synchronous writes in chunk output example\n\nWebSocket:\n\n* Fix utf8 validation for autobahn\n* Temporarily disable utf8 validation tests\n* Tidy up fast websocket server host names\n\nAPI Changes:\n\n* Remove serializer::keep_alive\n* Remove serializer::chunked\n* Add has_content_length_impl to Fields\n* Add message::has_content_length\n* Rename some basic_parser observers\n\nActions Required:\n\n* Call message::keep_alive instead of serializer::keep_alive\n* Call serializer::get::chunked instead of serializer::chunked\n* Implement has_content_length_impl for user-defined Fields\n* Remove the \"is_\" prefix from call sites invoking certain basic_parser members\n\n--------------------------------------------------------------------------------\n\nVersion 127:\n\n* Add BOOST_BEAST_NO_POSIX_FADVISE\n* Version command line option for HTTP client examples\n* More Jamfile compiler requirements for tests\n\n--------------------------------------------------------------------------------\n\nVersion 126:\n\n* Add CppCon2017 presentation link\n* Update README.md\n* Update stream write documentation for end of stream changes\n* Tidy up unused variable warnings\n* Don't return end_of_stream on win32 file body writes\n* Fix doc typo\n* Fix shadowing in session_alloc\n* Fix executor type compilation\n* Add Travis tests with the default compilers\n* Update Boost.WinAPI usage to the new location and namespace.\n* Fix buffered_read_stream async_read_some signature\n\n--------------------------------------------------------------------------------\n\nVersion 125:\n\nAPI Changes:\n\n* Update for Net-TS Asio\n\nActions Required:\n\n* Use BOOST_ASIO_HANDLER_TYPE instead of handler_type\n* Use BOOST_ASIO_INITFN_RESULT_TYPE instead of async_result\n* Use boost::asio::async_completion\n* Use boost::asio::is_dynamic_buffer\n* Use boost::asio::is_const_buffer_sequence\n* Use boost::asio::is_mutable_buffer_sequence\n* boost::asio::associated_allocator_t replaces handler_alloc\n\n--------------------------------------------------------------------------------\n\nVersion 124:\n\n* Fix for a test matrix compiler\n* Fix basic_fields javadoc\n\nAPI Changes:\n\n* http write returns success on connection close\n\nActions Required:\n\n* Add code to servers to close the connection after successfully\n  writing a message where `message::keep_alive()` would return `false`.\n\n--------------------------------------------------------------------------------\n\nVersion 123:\n\n* Use unit-test subtree\n* Fix spurious race in websocket close test\n* Check compiler feature in Jamfile\n* Clear previous message fields in parser\n\n--------------------------------------------------------------------------------\n\nVersion 122:\n\n* Add test for issue 807\n* assert on empty buffer in websocket read\n* Fix zlib symbol conflicts\n* CMake 3.5.1 is required\n* config.hpp is not a public header\n* Add missing case in error test\n\n--------------------------------------------------------------------------------\n\nVersion 121:\n\n* Add test for issue 802\n* Fix enum and non-enum in conditional exp. warning\n\n--------------------------------------------------------------------------------\n\nVersion 120:\n\n* Fix spurious strand_ in advanced_server_flex\n* OpenSSL targets are optional (CMake)\n\n--------------------------------------------------------------------------------\n\nVersion 119:\n\n* Tidy up doc badge links\n\n--------------------------------------------------------------------------------\n\nVersion 118:\n\n* file_win32 opens for read-only in shared mode\n* Remove unused strands in server examples\n* Update build instructions\n* Doc root is at index.html\n\nHTTP:\n\n* Fix writing header into std::ostream\n\n--------------------------------------------------------------------------------\n\nVersion 117:\n\n* Add buffers_to_string\n\nAPI Changes:\n\n* buffers_suffix replaces consuming_buffers\n* buffers_prefix replaces buffer_prefix\n* buffers_prefix_view replaces buffer_prefix_view\n* buffers_front replaces buffer_front\n* buffers_cat replaces buffer_cat\n* buffers_cat_view replaces buffer_cat_view\n* Remove buffers_suffix::get\n\nActions Required:\n\n* Use buffers_suffix instead of consuming_buffers\n* Use buffers_prefix instead of buffer_prefix\n* Use buffers_prefix_view instead of buffer_prefix_view\n* Use buffers_front instead of buffer_front\n* Use buffers_cat instead of buffer_cat\n* Use buffers_cat_view instead of buffer_cat_view\n* Avoid calling buffers_suffix::get\n\n--------------------------------------------------------------------------------\n\nVersion 116:\n\nAPI Changes:\n\n* message::body is a member function\n* message::version is a member function\n\nActions Required:\n\n* Call member function message::body instead of accessing\n  the data member at call sites.\n\n* Call member function message::version instead of accessing\n  the version member at call sites.\n\n--------------------------------------------------------------------------------\n\nVersion 115:\n\n* Update README.md master doc link\n\n--------------------------------------------------------------------------------\n\nVersion 114:\n\n(No changes)\n\n--------------------------------------------------------------------------------\n\nVersion 113:\n\n* Fix handler signature in async_read_header\n* Remove field_range copy constructor\n\n--------------------------------------------------------------------------------\n\nVersion 112:\n\n* Update websocket notes\n\nAPI Changes:\n\n* WebSocket writes return the bytes transferred\n\n* HTTP reads and writes return bytes transferred\n\nActions Required:\n\n* Modify websocket write completion handlers to receive\n  the extra std::size_t bytes_transferred parameter.\n\n* Modify HTTP read and/or write completion handlers to\n  receive the extra std::size_t bytes_transferred parameter.\n\n--------------------------------------------------------------------------------\n\nVersion 111:\n\nWebSocket:\n\n* Fix utf8 check split code point at buffer end\n* Refactor stream operations and tests plus coverage\n* Suspended ops special members\n\n--------------------------------------------------------------------------------\n\nVersion 110:\n\n* Refactor stream open state variable\n* Refactor websocket stream members\n* Refactor websocket stream: fixes and tests\n* Add test::stream::lowest_layer\n* Fix invalid iterator in test reporter\n\n--------------------------------------------------------------------------------\n\nVersion 109:\n\n* refactor test::stream\n\nWebSocket:\n\n* Fix async_read_some handler signature\n* websocket close fixes and tests\n* websocket handshake uses coroutine\n* websocket ping tests\n* Fix websocket close_op resume state\n* websocket write tests\n* split up websocket tests\n* websocket read tests\n\nAPI Changes:\n\n* websocket accept refactoring\n\nActions Required:\n\n* Do not call websocket accept overloads which take\n  both a message and a buffer sequence, as it is\n  illegal per rfc6455.\n\n--------------------------------------------------------------------------------\n\nVersion 108:\n\n* Fix argument parsing in HTTP examples\n* Don't use async_write_msg in examples\n\n--------------------------------------------------------------------------------\n\nVersion 107:\n\n* Use test::stream\n\nWebSocket\n\n* Fix done state for WebSocket reads\n* Fix utf8 check for compressed frames\n* Rename frame and header buffer types\n\n--------------------------------------------------------------------------------\n\nVersion 106:\n\n* Dynamic buffer input areas are mutable\n* Add flat_static_buffer::reset\n\nHTTP:\n\n* Fix for basic_parser::skip(true) and docs\n\nWebSocket:\n\n* websocket test improvements\n* Remove obsolete write_op\n* Refactor write_op\n* Refactor ping_op\n* Refactor fail_op\n* Refactor read_op\n* Refactor close_op\n* Refactor read_op + fail_op\n* Websocket close will automatically drain\n* Autobahn|Testsuite fixes\n* Tidy up utf8_checker and tests\n\n--------------------------------------------------------------------------------\n\nVersion 105:\n\n* Fix compile error in websocket snippet\n* Tidy up Jamfile and tests\n\n--------------------------------------------------------------------------------\n\nVersion 104:\n\n* Remove unused include\n* Use #error in config.hpp\n* Only set -std=c++11 on Travis\n* Only set /permissive- on Appveyor\n* Tidy up some test warnings\n* tools/ renamed from build/\n\nWebSocket:\n\n* Fix pausation::save\n\n--------------------------------------------------------------------------------\n\nVersion 103:\n\n* Boost test matrix fixes\n* Tidy up allocator usage\n* Example HTTP server fixes\n\n--------------------------------------------------------------------------------\n\nVersion 102:\n\n* Section headings in examples\n\n--------------------------------------------------------------------------------\n\nVersion 101:\n\n* Refactor all examples\n\n--------------------------------------------------------------------------------\n\nVersion 100:\n\n* Fix doc convenience includes\n* Fix doc includes\n* Remove unused test header\n* Rename test macros\n* Reorder define test macro params\n* vcxproj workaround for include symlinks\n* Add variadic min/max\n\nWebSocket:\n\n* Remove obsolete frame tests\n* Refactor fail/clode code\n* Call do_fail from read_some\n* eof on accept returns error::closed\n* Fix stream::read_size_hint calculation\n* Documentation\n\nAPI Changes:\n\n* Calls to stream::close and stream::async_close will\n  automatically perform the required read operations\n\n* drain_buffer is removed\n\n* role_type replaces teardown_tag\n\nActions Required:\n\n* Remove calling code which drains the connection after\n  calling stream::close or stream::async_close\n\n* Replace code which uses drain_buffer. For websocket::stream,\n  it is no longer necessary to manually drain the connection\n  after closing.\n\n* Modify signatures of teardown and async_teardown to use\n  role_type instead of teardown_tag\n\n* Change calls to teardown and async_teardown to pass the\n  correct role_type, client or server, depending on context.\n\n--------------------------------------------------------------------------------\n\nVersion 99:\n\n* Log the value of LIB_DIR for doc builds (debug)\n* Use correct handler signature in fail_op\n* Fix doc typo\n\n--------------------------------------------------------------------------------\n\nVersion 98:\n\n* basic_fields::key_compare is noexcept\n* Fix bench-zlib cmake\n* Use unique names Jam projects\n* Trim utf8 checker test\n\n--------------------------------------------------------------------------------\n\nVersion 97:\n\n* Update redirect\n\n--------------------------------------------------------------------------------\n\nVersion 96:\n\n* Move bench/ to test/\n* Move extras/ to test/\n* Use <valgrind> property\n* Rename wsload compile target\n* Fix library.json\n* Update boostorg links\n* Add bench-zlib\n* Faster zlib tests\n* Less compression on websocket test\n\n--------------------------------------------------------------------------------\n\nVersion 95:\n\n* Tidy up Travis build scripts\n* Move scripts to build/\n* Fix race in test::pipe\n* close on test::pipe teardown\n* Add test::stream\n* Tidy up static_buffer braced init\n* Fix html redirect\n* Add valgrind variant, fix false positives\n\n--------------------------------------------------------------------------------\n\nVersion 94:\n\n* Use off-site Quick Start link temporarily\n\n--------------------------------------------------------------------------------\n\nVersion 93:\n\n* Unset BOOST_COROUTINES_NO_DEPRECATION_WARNING\n\n--------------------------------------------------------------------------------\n\nVersion 92:\n\n* Fix typo in test/CMakeLists.txt\n* basic_fields::value_type is not copyable\n* Update repository links in source comments\n* Ignore Content-Length in some cases\n* Tidy up doc snippet paths\n* Use off-site doc link\n\n--------------------------------------------------------------------------------\n\nVersion 91:\n\n* Adjust redirect html\n* Don't build pre-C++11\n* source.dox is path-independent\n* Tidy up namespace qualifiers\n* Tidy up MSVC CMakeLists.txt\n* Optimize buffered_read_stream\n* constexpr in derived buffers\n* Set BOOST_ASIO_NO_DEPRECATED\n* Use Asio array optimization in static_buffer_base\n* Rename wstest source file\n* Use fopen_s on Windows\n* Fix Appveyor script\n* Update project metadata\n* Move benchmarks to bench/\n* Fix doc title\n* Build stand-alone doc\n* Update doc copyrights\n* Refactor test build scripts\n\nWebSocket:\n\n* Tidy up websocket javadocs\n* Refactor accept, handshake ops\n* Use read buffer instead of buffered stream\n\nAPI Changes\n\n* control frame callbacks are non-const references\n\nActions Required:\n\n* Modify calls to set the control frame callback, to\n  pass non-const reference instances, and manage the\n  lifetime of the instance.\n\n--------------------------------------------------------------------------------\n\nVersion 90:\n\n* Fix websocket read of zero length message\n* Fix typo in equal_range\n* Output to integrated documentation\n\n--------------------------------------------------------------------------------\n\nVersion 89:\n\n* Fix CONTRIBUTING.md links\n\n--------------------------------------------------------------------------------\n\nVersion 88:\n\n* Update doc links in README.md\n* Refactor tests Jamfile\n* Don't use program_options\n\nWebSocket:\n\n* Fix uninitialized frame done\n\n--------------------------------------------------------------------------------\n\nVersion 87:\n\n* Update appveyor for Boost branch\n* Rename to BEAST_EXPECT\n* variant fixes and tests\n* Update README, add CONTRIBUTING.md and CODE_OF_CONDUCT.md\n\n--------------------------------------------------------------------------------\n\nVersion 86:\n\n* Boost prep\n* Remove use of lexical_cast\n* Use custom variant\n* Update README.md\n* Add local-travis.sh\n* Use winapi\n* Update CMakeLists.txt for boost\n* Update documentation for boost\n* Update copyrights\n* Remove spurious declaration\n* Tidy up Jamfile\n* Normalize doc build scripts\n* Use configured doxygen and xsltproc\n* Fix Deferred Body Type Example Documentation\n* Add library metadata\n\nAPI Changes:\n\n* websocket read returns the number of bytes inserted\n\nActions Required:\n\n* Change the signature of completion handlers used with\n  websocket::stream::async_read to void(error_code, std::size_t)\n\n--------------------------------------------------------------------------------\n\nVersion 85:\n\n* Fix test failure\n* Tidy up test warning\n\n--------------------------------------------------------------------------------\n\nVersion 84:\n\n* Tidy up buffer_front\n* static_buffer::consume improvement\n* multi_buffer is type-check friendly\n* bind_handler allows placeholders\n* Add consuming_buffers::get\n\nWebSocket:\n\n* WebSocket read optimization\n\nAPI Changes:\n\n* websocket::stream::read_buffer_size is removed\n\nActions Required:\n\n* Remove calls websocket::stream::read_buffer_size\n* Use read_some and write_some instead of read_frame and write_frame\n\n--------------------------------------------------------------------------------\n\nVersion 83:\n\n* Add flat_static_buffer::mutable_data\n* Add buffer_front\n* Add wstest compression option\n* Turn some flat_static_buffer_tests on\n* Documentation work\n* read_some, async_read_some return bytes used\n* Fix private timer::clock_type\n\nWebSocket\n\n* Add wstest compression option\n* Fix buffer lifetime in websocket write\n\nAPI Changes:\n\n* Add static_buffer\n\nActions Required:\n\n* Callers who depend on static_buffer returning sequences of\n  exactly length one should switch to flat_static_buffer.\n\n--------------------------------------------------------------------------------\n\nVersion 82:\n\n* Documentation tidying\n* is_invocable works with move-only types\n* Use std::function and reference wrapper\n* Add session_alloc to example/common\n* Silence spurious warning\n\nHTTP\n\n* Fix extraneous argument in async_write_header\n\nWebSocket\n\n* stream tidying\n* Add rd_close_ to websocket stream state\n* stream uses flat_buffer\n* accept requires a message\n* Add wstest benchmark tool\n\nAPI Changes:\n\n* Rename to flat_static_buffer and flat_static_buffer_base\n\nActions Required:\n\n* Rename static_buffer to flat_static_buffer_base\n* Rename static_buffer_n to flat_static_buffer\n\n--------------------------------------------------------------------------------\n\nVersion 81:\n\n* Pass string_view by value\n* better is_final on empty_base_optimization\n* Suppress incorrect GCC warning\n* multi_buffer ctor is explicit\n* File is not copy-constructible\n\nAPI Changes:\n\n* Refactor basic_parser, chunk parsing:\n\nActions Required:\n\n* Adjust signatures for required members of user-defined\n  subclasses of basic_parser\n\n* Use the new basic_parser chunk callbacks for accessing\n  chunk extensions and chunk bodies.\n\n--------------------------------------------------------------------------------\n\nVersion 80:\n\n* Javadoc tidying\n* Add basic_dynamic_body.hpp\n* Shrink buffer_prefix_view\n* Remove unused file_path\n* Add basic_file_body.hpp\n* buffers_ref is Assignable\n\nHTTP\n\n* Shrink chunk header buffer sequence size\n\nAPI Changes:\n\n* Refactor chunked-encoding serialization\n\nActions Required:\n\n* Remove references to ChunkDecorators. Use the new chunk-encoding\n  buffer sequences to manually produce a chunked payload body in\n  the case where control over the chunk-extensions and/or trailers\n  is required.\n\n--------------------------------------------------------------------------------\n\nVersion 79:\n\n* Remove spurious fallthrough guidance\n\n--------------------------------------------------------------------------------\n\nVersion 78:\n\n* Add span\n* Documentation work\n* Use make_unique_noinit\n* Fix warning in zlib\n* Header file tidying\n* Tidy up FieldsReader doc\n* Add Boost.Locale utf8 benchmark comparison\n* Tidy up dstream for existing Boost versions\n* Tidy up file_posix unused variable\n* Fix warning in root ca declaration\n\nHTTP:\n\n* Tidy up basic_string_body\n* Add vector_body\n* span, string, vector bodies are public\n* Fix spurious uninitialized warning\n* fields temp string uses allocator\n\nAPI Changes:\n\n* Add message::keep_alive()\n* Add message::chunked() and message::content_length()\n* Remove string_view_body\n\nActions Required:\n\n* Change user defined implementations of Fields and\n  FieldsReader to meet the new requirements.\n\n* Use span_body<char> instead of string_view_body\n\n--------------------------------------------------------------------------------\n\nVersion 77:\n\n* file_posix works without large file support\n\n--------------------------------------------------------------------------------\n\nVersion 76:\n\n* Always go through write_some\n* Use Boost.Config\n* BodyReader may construct from a non-const message\n* Add serializer::get\n* Add serializer::chunked\n* Serializer members are not const\n* serializing file_body is not const\n* Add file_body_win32\n* Fix parse illegal characters in obs-fold\n* Disable SSE4.2 optimizations\n\nAPI Changes:\n\n* Rename to serializer::keep_alive\n* BodyReader, BodyWriter use two-phase init\n\nActions Required:\n\n* Use serializer::keep_alive instead of serializer::close and\n  take the logical NOT of the return value.\n\n* Modify instances of user-defined BodyReader and BodyWriter\n  types to perform two-phase initialization, as per the\n  updated documented type requirements.\n\n--------------------------------------------------------------------------------\n\nVersion 75:\n\n* Use file_body for valid requests, string_body otherwise.\n* Construct buffer_prefix_view in-place\n* Shrink serializer buffers using buffers_ref\n* Tidy up BEAST_NO_BIG_VARIANTS\n* Shrink serializer buffers using buffers_ref\n* Add serializer::limit\n* file_body tests\n* Using SSE4.2 intrinsics in basic_parser if available\n\n--------------------------------------------------------------------------------\n\nVersion 74:\n\n* Add file_stdio and File concept\n* Add file_win32\n* Add file_body\n* Remove common/file_body.hpp\n* Add file_posix\n* Fix Beast include directories for cmake targets\n* remove redundant flush() from example\n\n--------------------------------------------------------------------------------\n\nVersion 73:\n\n* Jamroot tweak\n* Verify certificates in SSL clients\n* Adjust benchmarks\n* Initialize local variable in basic_parser\n* Fixes for gcc-4.8\n\nHTTP:\n\n* basic_parser optimizations\n* Add basic_parser tests\n\nAPI Changes:\n\n* Refactor header and message constructors\n* serializer::next replaces serializer::get\n\nActions Required:\n\n* Evaluate each message constructor call site and\n  adjust the constructor argument list as needed.\n\n* Use serializer::next instead of serializer::get at call sites\n\n--------------------------------------------------------------------------------\n\nVersion 72:\n\nHTTP:\n\n* Tidy up set payload in http-server-fast\n* Refine Body::size specification\n* Newly constructed responses have a 200 OK result\n* Refactor file_body for best practices\n* Add http-server-threaded example\n* Documentation tidying\n* Various improvements to http_server_fast.cpp\n\nWebSocket:\n\n* Add websocket-server-async example\n\n--------------------------------------------------------------------------------\n\nVersion 71:\n\n* Fix extra ; warning\n* Documentation revision\n* Fix spurious on_chunk invocation\n* Call prepare_payload in HTTP example\n* Check trailers in test\n* Fix buffer overflow handling for string_body and mutable_body\n* Concept check in basic_dynamic_body\n* Tidy up http_sync_port error check\n* Tidy up Jamroot /permissive-\n\nWebSockets:\n\n* Fine tune websocket op asserts\n* Refactor websocket composed ops\n* Allow close, ping, and write to happen concurrently\n* Fix race in websocket read op\n* Fix websocket write op\n* Add cmake options for examples and tests\n\nAPI Changes:\n\n* Return `std::size_t` from `Body::writer::put`\n\nActions Required:\n\n* Return the number of bytes actually transferred from the\n  input buffers in user defined `Body::writer::put` functions.\n\n--------------------------------------------------------------------------------\n\nVersion 70:\n\n* Serialize in one step when possible\n* Add basic_parser header and body limits\n* Add parser::on_header to set a callback\n* Fix BEAST_FALLTHROUGH\n* Fix HEAD response in file_service\n\nAPI Changes:\n\n* Rename to message::base\n* basic_parser default limits are now 1MB/8MB\n\nActions Required:\n\n* Change calls to message::header_part() with message::base()\n\n* Call body_limit and/or header_limit as needed to adjust the\n  limits to suitable values if the defaults are insufficient.\n\n--------------------------------------------------------------------------------\n\nVersion 69:\n\n* basic_parser optimizations\n* Use BEAST_FALLTHROUGH to silence warnings\n* Add /permissive- to msvc toolchain\n\n--------------------------------------------------------------------------------\n\nVersion 68:\n\n* Split common tests to a new project\n* Small speed up in fields comparisons\n* Adjust buffer size in fast server\n* Use string_ref in older Boost versions\n* Optimize field lookups\n* Add const_body, mutable_body to examples\n* Link statically on cmake MSVC\n\nAPI Changes:\n\n* Change BodyReader, BodyWriter requirements\n* Remove BodyReader::is_deferred\n* http::error::bad_target replaces bad_path\n\nActions Required:\n\n* Change user defined instances of BodyReader and BodyWriter\n  to meet the new requirements.\n\n* Replace references to http::error::bad_path with http::error::bad_target\n\n--------------------------------------------------------------------------------\n\nVersion 67:\n\n* Fix doc example link\n* Add http-server-small example\n* Merge stream_base to stream and tidy\n* Use boost::string_view\n* Rename to http-server-fast\n* Appveyor use Boost 1.64.0\n* Group common example headers\n\nAPI Changes:\n\n* control_callback replaces ping_callback\n\nActions Required:\n\n* Change calls to websocket::stream::ping_callback to use\n  websocket::stream::control_callback\n\n* Change user defined ping callbacks to have the new\n  signature and adjust the callback definition appropriately.\n\n--------------------------------------------------------------------------------\n\nVersion 66:\n\n* string_param optimizations\n* Add serializer request/response aliases\n* Make consuming_buffers smaller\n* Fix costly potential value-init in parser\n* Fix unused parameter warning\n* Handle bad_alloc in parser\n* Tidy up message piecewise ctors\n* Add header aliases\n* basic_fields optimizations\n* Add http-server example\n* Squelch spurious warning on gcc\n\n--------------------------------------------------------------------------------\n\nVersion 65:\n\n* Enable narrowing warning on msvc cmake\n* Fix integer types in deflate_stream::bi_reverse\n* Fix narrowing in static_ostream\n* Fix narrowing in ostream\n* Fix narrowing in inflate_stream\n* Fix narrowing in deflate_stream\n* Fix integer warnings\n* Enable unused variable warning on msvc cmake\n\n--------------------------------------------------------------------------------\n\nVersion 64:\n\n* Simplify buffered_read_stream composed op\n* Simplify ssl teardown composed op\n* Simplify websocket write_op\n* Exemplars are compiled code\n* Better User-Agent in examples\n* async_write requires a non-const message\n* Doc tidying\n* Add link_directories to cmake\n\nAPI Changes:\n\n* Remove make_serializer\n\nActions Required:\n\n* Replace calls to make_serializer with variable declarations\n\n--------------------------------------------------------------------------------\n\nVersion 63:\n\n* Use std::to_string instead of lexical_cast\n* Don't use cached Boost\n* Put num_jobs back up on Travis\n* Only build and run tests in variant=coverage\n* Move benchmarks to a separate project\n* Only run the tests under ubasan\n* Tidy up CMakeLists.txt\n* Tidy up Jamfiles\n* Control running with valgrind explicitly\n\n--------------------------------------------------------------------------------\n\nVersion 62:\n\n* Remove libssl-dev from a Travis matrix item\n* Increase detail::static_ostream coverage\n* Add server-framework tests\n* Doc fixes and tidy\n* Tidy up namespaces in examples\n* Clear the error faster\n* Avoid explicit operator bool for error\n* Add http::is_fields trait\n* Squelch harmless not_connected errors\n* Put slow tests back for coverage builds\n\nAPI Changes:\n\n* parser requires basic_fields\n* Refine FieldsReader concept\n* message::prepare_payload replaces message::prepare\n\nActions Required:\n\n* Callers using `parser` with Fields types other than basic_fields\n  will need to create their own subclass of basic_parser to work\n  with their custom fields type.\n\n* Implement chunked() and keep_alive() for user defined FieldsReader types.\n\n* Change calls to msg.prepare to msg.prepare_payload. For messages\n  with a user-defined Fields, provide the function prepare_payload_impl\n  in the fields type according to the Fields requirements.\n\n--------------------------------------------------------------------------------\n\nVersion 61:\n\n* Remove Spirit dependency\n* Use generic_cateogry for errno\n* Reorganize SSL examples\n* Tidy up some integer conversion warnings\n* Add message::header_part()\n* Tidy up names in error categories\n* Flush the output stream in the example\n* Clean close in Secure WebSocket client\n* Add server-framework SSL HTTP and WebSocket ports\n* Fix shadowing warnings\n* Tidy up http-crawl example\n* Add multi_port to server-framework\n* Tidy up resolver calls\n* Use one job on CI\n* Don't run slow tests on certain targets\n\nAPI Changes:\n\n* header::version is unsigned\n* status-codes is unsigned\n\n--------------------------------------------------------------------------------\n\nVersion 60:\n\n* String comparisons are public interfaces\n* Fix response message type in async websocket accept\n* New server-framework, full featured server example\n\n--------------------------------------------------------------------------------\n\nVersion 59:\n\n* Integrated Beast INTERFACE (cmake)\n* Fix base64 alphabet\n* Remove obsolete doc/README.md\n\nAPI Changes:\n\n* Change Body::size signature (API Change):\n\nActions Required:\n\n* For any user-defined models of Body, change the function signature\n  to accept `value_type const&` and modify the function definition\n  accordingly.\n\n--------------------------------------------------------------------------------\n\nVersion 58:\n\n* Fix unaligned reads in utf8-checker\n* Qualify size_t in message template\n* Reorganize examples\n* Specification for http read\n* Avoid `std::string` in websocket\n* Fix basic_fields insert ordering\n* basic_fields::set optimization\n* basic_parser::put doc\n* Use static string in basic_fields::reader\n* Remove redundant code\n* Fix parsing chunk size with leading zeroes\n* Better message formal parameter names\n\nAPI Changes:\n\n* `basic_fields::set` renamed from `basic_fields::replace`\n\nActions Required:\n\n* Rename calls to `basic_fields::replace` to `basic_fields::set`\n\n--------------------------------------------------------------------------------\n\nVersion 57:\n\n* Fix message.hpp javadocs\n* Fix warning in basic_parser.cpp\n* Integrate docca for documentation and tidy\n\n--------------------------------------------------------------------------------\n\nVersion 56:\n\n* Add provisional IANA header field names\n* Add string_view_body\n* Call on_chunk when the extension is empty\n* HTTP/1.1 is the default version\n* Try harder to find Boost (cmake)\n* Reset error codes\n* More basic_parser tests\n* Add an INTERFACE cmake target\n* Convert buffer in range loops\n\n--------------------------------------------------------------------------------\n\nVersion 55:\n\n* Don't allocate memory to handle obs-fold\n* Avoid a parser allocation using non-flat buffer\n* read_size replaces read_size_helper\n\n--------------------------------------------------------------------------------\n\nVersion 54:\n\n* static_buffer coverage\n* flat_buffer coverage\n* multi_buffer coverage\n* consuming_buffers members and coverage\n* basic_fields members and coverage\n* Add string_param\n* Retain ownership when reading using a message\n* Fix incorrect use of [[fallthrough]]\n\nAPI Changes:\n\n* basic_fields refactor\n\n--------------------------------------------------------------------------------\n\nVersion 53:\n\n* Fix basic_parser::maybe_flatten\n* Fix read_size_helper usage\n\n--------------------------------------------------------------------------------\n\nVersion 52:\n\n* flat_buffer is an AllocatorAwareContainer\n* Add drain_buffer class\n\nAPI Changes:\n\n* `auto_fragment` is a member of `stream`\n* `binary`, `text` are members of `stream`\n* read_buffer_size is a member of `stream`\n* read_message_max is a member of `stream`\n* `write_buffer_size` is a member of `stream`\n* `ping_callback` is a member of stream\n* Remove `opcode` from `read`, `async_read`\n* `read_frame` returns `bool` fin\n* `opcode` is private\n* finish(error_code&) is a BodyReader requirement\n\nActions Required:\n\n* Change call sites which use `auto_fragment` with `set_option`\n  to call `stream::auto_fragment` instead.\n\n* Change call sites which use message_type with `set_option`\n  to call `stream::binary` or `stream::text` instead.\n\n* Change call sites which use `read_buffer_size` with `set_option` to\n  call `stream::read_buffer_size` instead.\n\n* Change call sites which use `read_message_max` with `set_option` to\n  call `stream::read_message_max` instead.\n\n* Change call sites which use `write_buffer_size` with `set_option` to\n  call `stream::write_buffer_size` instead.\n\n* Change call sites which use `ping_callback1 with `set_option` to\n  call `stream::ping_callback` instead.\n\n* Remove the `opcode` reference parameter from calls to synchronous\n  and asynchronous read functions, replace the logic with calls to\n  `stream::got_binary` and `stream::got_text` instead.\n\n* Remove the `frame_info` parameter from all read frame call sites\n\n* Check the return value 'fin' for calls to `read_frame`\n\n* Change ReadHandlers passed to `async_read_frame` to have\n  the signature `void(error_code, bool fin)`, use the `bool`\n  to indicate if the frame is the last frame.\n\n* Remove all occurrences of the `opcode` enum at call sites\n\n--------------------------------------------------------------------------------\n\nVersion 51\n\n* Fix operator<< for header\n* Tidy up file_body\n* Fix file_body::get() not setting the more flag correctly\n* Use BOOST_FALLTHROUGH\n* Use BOOST_STRINGIZE\n* DynamicBuffer benchmarks\n* Add construct, destroy to handler_alloc\n* Fix infinite loop in basic_parser\n\nAPI Changes:\n\n* Tune up static_buffer\n* multi_buffer implementation change\n\nActions Required:\n\n* Call sites passing a number to multi_buffer's constructor\n  will need to be adjusted, see the corresponding commit message.\n\n--------------------------------------------------------------------------------\n\nVersion 50\n\n* parser is constructible from other body types\n* Add field enumeration\n* Use allocator more in basic_fields\n* Fix basic_fields allocator awareness\n* Use field in basic_fields and call sites\n* Use field in basic_parser\n* Tidy up basic_fields, header, and field concepts\n* Fields concept work\n* Body documentation work\n* Add missing handler_alloc nested types\n* Fix chunk delimiter parsing\n* Fix test::pipe read_size\n* Fix chunk header parsing\n\nAPI Changes:\n\n* Remove header_parser\n* Add verb to on_request for parsers\n* Refactor prepare\n* Protect basic_fields special members\n* Remove message connection settings\n* Remove message free functions\n* Remove obsolete serializer allocator\n* http read_some, async_read_some don't return bytes\n\n--------------------------------------------------------------------------------\n\nVersion 49\n\n* Use <iosfwd> instead of <ostream>\n\nHTTP:\n\n* Add HEAD request example\n\nAPI Changes:\n\n* Refactor method and verb\n* Canonicalize string_view parameter types\n* Tidy up empty_body writer error\n* Refactor header status, reason, and target\n\n--------------------------------------------------------------------------------\n\nVersion 48\n\n* Make buffer_prefix_view public\n* Remove detail::sync_ostream\n* Tidy up core type traits\n\nAPI Changes:\n\n* Tidy up chunk decorator\n* Rename to buffer_cat_view\n* Consolidate parsers to parser.hpp\n* Rename to parser\n\n--------------------------------------------------------------------------------\n\nVersion 47\n\n* Disable operator<< for buffer_body\n* buffer_size overload for basic_multi_buffer::const_buffers_type\n* Fix undefined behavior in pausation\n* Fix leak in basic_flat_buffer\n\nAPI Changes:\n\n* Refactor treatment of request-method\n* Refactor treatment of status code and obsolete reason\n* Refactor HTTP serialization and parsing\n\n--------------------------------------------------------------------------------\n\nVersion 46\n\n* Add test::pipe\n* Documentation work\n\nAPI Changes:\n\n* Remove HTTP header aliases\n* Refactor HTTP serialization\n* Refactor type traits\n\n--------------------------------------------------------------------------------\n\nVersion 45\n\n* Workaround for boost::asio::basic_streambuf type check\n* Fix message doc image\n* Better test::enable_yield_to\n* Fix header::reason\n* Documentation work\n* buffer_view skips empty buffer sequences\n* Disable reverse_iterator buffer_view test\n\n--------------------------------------------------------------------------------\n\nVersion 44\n\n* Use BOOST_THROW_EXCEPTION\n* Tidy up read_size_helper and dynamic buffers\n* Require Boost 1.58.0 or later\n* Tidy up and make get_lowest_layer public\n* Use BOOST_STATIC_ASSERT\n* Fix async return values in docs\n* Fix README websocket example\n* Add buffers_adapter regression test\n* Tidy up is_dynamic_buffer traits test\n* Make buffers_adapter meet requirements\n\n--------------------------------------------------------------------------------\n\nVersion 43\n\n* Require Boost 1.64.0\n* Fix strict aliasing warnings in buffers_view\n* Tidy up buffer_prefix overloads and test\n* Add write limit to test::string_ostream\n* Additional constructors for consuming_buffers\n\n--------------------------------------------------------------------------------\n\nVersion 42\n\n* Fix javadoc typo\n* Add formal review notes\n* Make buffers_view a public interface\n\n--------------------------------------------------------------------------------\n\nVersion 41\n\n* Trim Appveyor matrix rows\n* Concept revision and documentation\n* Remove coveralls integration\n* Tidy up formal parameter names\n\nWebSocket\n\n* Tidy up websocket::close_code enum and constructors\n\nAPI Changes\n\n* Return http::error::end_of_stream on HTTP read eof\n* Remove placeholders\n* Rename prepare_buffer(s) to buffer_prefix\n* Remove handler helpers, tidy up hook invocations\n\n--------------------------------------------------------------------------------\n\nVersion 40\n\n* Add to_static_string\n* Consolidate get_lowest_layer in type_traits.hpp\n* Fix basic_streambuf movable trait\n* Tidy up .travis.yml\n\n--------------------------------------------------------------------------------\n\nVersion 39\n\nBeast versions are now identified by a single integer which\nis incremented on each merge. The macro BEAST_VERSION\nidentifies the version number, currently at 39. A version\nsetting commit will always be at the tip of the master\nand develop branches.\n\n* Use beast::string_view alias\n* Fixed braced-init error with older gcc\n\nHTTP\n\n* Tidy up basic_parser javadocs\n\nWebSocket:\n\n* Add websocket async echo ssl server test:\n* Fix eof error on ssl::stream shutdown\n\nAPI Changes:\n\n* Refactor http::header contents\n* New ostream() returns dynamic buffer output stream\n* New buffers() replaces to_string()\n* Rename to multi_buffer, basic_multi_buffer\n* Rename to flat_buffer, basic_flat_buffer\n* Rename to static_buffer, static_buffer_n\n* Rename to buffered_read_stream\n* Harmonize concepts and identifiers with net-ts\n* Tidy up HTTP reason_string\n\n--------------------------------------------------------------------------------\n\n1.0.0-b38\n\n* Refactor static_string\n* Refactor base64\n* Use static_string for WebSocket handshakes\n* Simplify get_lowest_layer test\n* Add test_allocator to extras/test\n* More flat_streambuf tests\n* WebSocket doc work\n* Prevent basic_fields operator[] assignment\n\nAPI Changes:\n\n* Refactor WebSocket error codes\n* Remove websocket::keep_alive option\n\n--------------------------------------------------------------------------------\n\n1.0.0-b37\n\n* CMake hide command lines in .vcxproj Output windows\"\n* Rename to detail::is_invocable\n* Rename project to http-bench\n* Fix flat_streambuf\n* Add ub sanitizer blacklist\n* Add -funsigned-char to asan build target\n* Fix narrowing warning in table constants\n\nWebSocket:\n\n* Add is_upgrade() free function\n* Document websocket::stream thread safety\n* Rename to websocket::detail::pausation\n\nAPI Changes:\n\n* Provide websocket::stream accept() overloads\n* Refactor websocket decorators\n* Move everything in basic_fields.hpp to fields.hpp\n* Rename to http::dynamic_body, consolidate header\n\n--------------------------------------------------------------------------------\n\n1.0.0-b36\n\n* Update README.md\n\n--------------------------------------------------------------------------------\n\n1.0.0-b35\n\n* Add Appveyor build scripts and badge\n* Tidy up MSVC CMake configuration\n* Make close_code a proper enum\n* Add flat_streambuf\n* Rename to BEAST_DOXYGEN\n* Update .gitignore for VS2017\n* Fix README.md CMake instructions\n\nAPI Changes:\n\n* New HTTP interfaces\n* Remove http::empty_body\n\n--------------------------------------------------------------------------------\n\n1.0.0-b34\n\n* Fix and tidy up CMake build scripts\n\n--------------------------------------------------------------------------------\n\n1.0.0-b33\n\n* Require Visual Studio 2015 Update 3 or later\n\nHTTP\n\n* Use fwrite return value in file_body\n\nWebSocket\n\n* Set internal state correctly when writing frames\n* Add decorator unit test\n* Add write_frames unit test\n\n--------------------------------------------------------------------------------\n\n1.0.0-b32\n\n* Add io_service completion invariants test\n* Update CMake scripts for finding packages\n\nAPI Changes:\n\n* Remove http Writer suspend and resume feature\n\n--------------------------------------------------------------------------------\n\n1.0.0-b31\n\n* Tidy up build settings\n* Add missing dynabuf_readstream member\n\nWebSocket\n\n* Move the handler, don't copy it\n\n--------------------------------------------------------------------------------\n\n1.0.0-b30\n\nWebSocket\n\n* Fix race in pings during reads\n* Fix race in close frames during reads\n* Fix race when write suspends\n* Allow concurrent websocket async ping and writes\n\n--------------------------------------------------------------------------------\n\n1.0.0-b29\n\n* Fix compilation error in non-template class\n* Document type-pun in buffer_cat\n* Correctly check ostream modifier (/extras)\n\nHTTP\n\n* Fix Body requirements doc\n* Fix illegal HTTP characters accepted as hex zero\n* Fix Writer return value documentation\n\nWebSocket\n\n* Fix race in writes during reads\n* Fix doc link typo\n\n--------------------------------------------------------------------------------\n\n1.0.0-b28\n\n* Split out and rename test stream classes\n* Restyle async result constructions\n* Fix HTTP split parse edge case\n\n--------------------------------------------------------------------------------\n\n1.0.0-b27\n\n* Tidy up tests and docs\n* Add documentation building instructions\n\nAPI Changes:\n\n* Invoke callback on pings and pongs\n* Move basic_streambuf to streambuf.hpp\n\n--------------------------------------------------------------------------------\n\n1.0.0-b26\n\n* Tidy up warnings and tests\n\n--------------------------------------------------------------------------------\n\n1.0.0-b25\n\n* Fixes for WebSocket echo server\n* Fix 32-bit arm7 warnings\n* Remove unnecessary include\n* WebSocket server examples and test tidying\n* Fix deflate setup bug\n\nAPI Changes:\n\n* Better handler_ptr\n\n--------------------------------------------------------------------------------\n\n1.0.0-b24\n\n* bjam use clang on MACOSX\n* Simplify Travis package install specification\n* Add optional yield_to arguments\n* Make decorator copyable\n* Add WebSocket permessage-deflate extension support\n\n--------------------------------------------------------------------------------\n\n1.0.0-b23\n\n* Tune websocket echo server for performance\n* Add file and line number to thrown exceptions\n* Better logging in async echo server\n* Add copy special members\n* Fix message constructor and special members\n* Travis CI improvements\n\n--------------------------------------------------------------------------------\n\n1.0.0-b22\n\n* Fix broken Intellisense\n* Implement the Asio deallocation-before-invocation guarantee\n* Add handler helpers\n* Avoid copies in handler_alloc\n* Update README.md example programs\n* Fix websocket stream read documentation\n* Disable Boost.Coroutine deprecation warning\n* Update documentation examples\n\n--------------------------------------------------------------------------------\n\n1.0.0-b21\n\n* Remove extraneous includes\n\n--------------------------------------------------------------------------------\n\n1.0.0-b20\n\nZLib\n\n* Add ZLib module\n\nAPI Changes:\n\n* Rename HTTP identifiers\n\n--------------------------------------------------------------------------------\n\n1.0.0-b19\n\n* Boost library min/max guidance\n* Improvements to code coverage\n* Use boost::lexical_cast instead of std::to_string\n* Fix prepare_buffers value_type\n* Fix consuming_buffers value_type\n* Better buffer_cat\n\nHTTP\n\n* Make chunk_encode public\n* Add write, async_write, operator<< for message_headers\n* Add read, async_read for message_headers\n* Fix with_body example\n\nWebSocket\n\n* Optimize utf8 validation\n* Optimize mask operations\n\nAPI Changes:\n\n* Refactor message and message_headers declarations\n* prepared_buffers is private\n* consume_buffers is removed\n\n--------------------------------------------------------------------------------\n\n1.0.0-b18\n\n* Increase optimization settings for MSVC builds\n\nHTTP\n\n* Check invariants in parse_op:\n* Clean up message docs\n\nWebSocket\n\n* Write buffer option does not change capacity\n* Close connection during async_read on close frame\n* Add pong, async pong to stream\n\nCore\n\n* Meet DynamicBuffer requirements for static_streambuf\n* Fix write_frame masking and auto-fragment handling\n\nExtras\n\n* unit_test::suite fixes:\n  - New overload of fail() specifies file and line\n  - BEAST_EXPECTS only evaluates the reason string on a failure\n* Add zlib module\n\n--------------------------------------------------------------------------------\n\n1.0.0-b17\n\n* Change implicit to default value in example\n* Tidy up some declarations\n* Fix basic_streambuf::capacity\n* Add basic_streambuf::alloc_size\n* Parser callbacks may not throw\n* Fix Reader concept doc typo\n* Add is_Reader trait\n* Tidy up basic_headers for documentation\n* Tidy up documentation\n* Add basic_parser_v1::reset\n* Fix handling of body_what::pause in basic_parser_v1\n* Add headers_parser\n* Engaged invokable is destructible\n* Improve websocket example in README.md\n* Refactor read_size_helper\n\nAPI Changes:\n\n* Added init() to Reader requirements\n* Reader must be nothrow constructible\n* Reader is now constructed right before reading the body\n  - The message passed on construction is filled in\n* Rework HTTP concepts:\n  - Writer uses write instead of operator()\n  - Refactor traits to use void_t\n  - Remove is_ReadableBody, is_WritableBody\n  - Add has_reader, has_writer, is_Reader, is_Writer\n  - More friendly compile errors on failed concept checks\n* basic_parser_v1 requires all callbacks present\n* on_headers parser callback now returns void\n* on_body_what is a new required parser callback returning body_what\n\n--------------------------------------------------------------------------------\n\n1.0.0-b16\n\n* Make value optional in param-list\n* Frame processing routines are member functions\n* Fix on_headers called twice from basic_parser_v1\n* Constrain parser_v1 constructor\n* Improve first line serialization\n* Add pause option to on_headers interface\n* Refactor base_parser_v1 callback traits:\n* Refine Parser concept\n* Relax ForwardIterator requirements in FieldSequence\n* Fix websocket failure testing\n* Refine Writer concept and fix exemplar in documentation\n\nAPI Changes:\n\n* Rename mask_buffer_size to write_buffer_size\n* Make auto_fragment a boolean option\n\nThe message class hierarchy is refactored (breaking change):\n\n* One message class now models both HTTP/1 and HTTP/2 messages\n* message_v1, request_v1, response_v1 removed\n* New classes basic_request and basic_response model\n  messages without the body.\n\n    Error resolution: Callers should use message, request,\n    and response instead of message_v1, request_v1, and\n    response_v1 respectively.\n\n--------------------------------------------------------------------------------\n\n1.0.0-b15\n\n* rfc7230 section 3.3.2 compliance\n* Add HTTPS example\n* Add Secure WebSocket example\n* Fix message_v1 constructor\n* Tidy up DynamicBuffer requirements\n* Tidy up error types and headers\n* Fix handling empty HTTP headers in parser_v1\n\n--------------------------------------------------------------------------------\n\n1.0.0-b14\n\n* Add missing rebind to handler_alloc\n* Fix error handling in http server examples\n* Fix CMake scripts for MinGW\n* Use BOOST_ASSERT\n* Better WebSocket decorator\n* Update and tidy documentation\n\n--------------------------------------------------------------------------------\n\n1.0.0-b13\n\n* dstream improvements\n* Remove bin and bin64 directories\n* Tidy up .vcxproj file groupings\n\n--------------------------------------------------------------------------------\n\n1.0.0-b12\n\n* Use -p to print suites from unit test main.\n* BEAST_EXPECTS to add a reason string to test failures\n* Fix unit test runner to output all case names\n* Update README for build requirements\n* Rename to CHANGELOG.md\n\n--------------------------------------------------------------------------------\n\n1.0.0-b11\n\n* Set URI in generated WebSocket Upgrade requests\n* Rename echo server class and file names\n* Rename to DynamicBuffer in some code and documentation\n* Fix integer warnings in Windows builds\n* Add 32 and 64 bit Windows build support\n* Update README for build instructions and more\n* Add repository and documentation banners\n\n--------------------------------------------------------------------------------\n\n1.0.0-b10\n\n* Fix compilation warnings\n* Add websocketpp comparison to HTML documentation\n\n--------------------------------------------------------------------------------\n\n1.0.0-b9\n\n* Fix CMakeLists.txt\n\n--------------------------------------------------------------------------------\n\n1.0.0-b8\n\n* Fix include in example code\n* Fix basic_headers rfc2616 Section 4.2 compliance\n\n--------------------------------------------------------------------------------\n\n1.0.0-b7\n\n* Fix prepare by calling init. prepare() can throw depending on the\n  implementation of Writer. Publicly provided beast::http writers never throw.\n* Fixes to example HTTP server\n* Fully qualify ambiguous calls to read and parse\n* Remove deprecated http::stream wrapper\n* Example HTTP server now calculates the MIME-type\n* Fixes and documentation for teardown and use with SSL:\n* Add example code to rfc7230 javadocs\n* Remove extraneous header file <beast/http/status.hpp>\n* Add skip_body parser option\n\n--------------------------------------------------------------------------------\n\n1.0.0-b6\n\n* Use SFINAE on return values\n* Use beast::error_code instead of nested types\n* Tidy up use of GENERATING_DOCS\n* Remove obsolete RFC2616 functions\n* Add message swap members and free functions\n* Add HTTP field value parser containers: ext_list, param_list, token_list\n* Fixes for some corner cases in basic_parser_v1\n* Configurable limits on headers and body sizes in basic_parser_v1\n\nAPI Changes:\n\n* ci_equal is moved to beast::http namespace, in rfc7230.hpp\n\n* \"DynamicBuffer\",\"dynabuf\" renamed from \"Streambuf\", \"streambuf\". See:\n  http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4478.html#requirements.dynamic_buffers\n\n* basic_parser_v1 adheres to rfc7230 as strictly as possible\n\n--------------------------------------------------------------------------------\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.8212890625,
          "content": "#\n# Copyright (c) 2019 Vinnie Falco (vinnie.falco@gmail.com)\n# Copyright (c) 2021 DMitry Arkhipov (grisumbras@gmail.com)\n# Copyright (c) 2022 Alan de Freitas (alandefreitas@gmail.com)\n# Copyright (c) 2024 Mohammad Nejati\n#\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n#\n# Official repository: https://github.com/boostorg/beast\n#\n\n#-------------------------------------------------\n#\n# Project\n#\n#-------------------------------------------------\ncmake_minimum_required(VERSION 3.8...3.20)\nset(BOOST_BEAST_VERSION 356)\nif (BOOST_SUPERPROJECT_VERSION)\n    set(BOOST_BEAST_VERSION ${BOOST_SUPERPROJECT_VERSION})\nendif ()\nproject(boost_beast VERSION \"${BOOST_BEAST_VERSION}\" LANGUAGES CXX)\nset(BOOST_BEAST_IS_ROOT OFF)\nif (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)\n    set(BOOST_BEAST_IS_ROOT ON)\nendif ()\nset(__ignore__ ${CMAKE_C_COMPILER})\n\n#-------------------------------------------------\n#\n# Options\n#\n#-------------------------------------------------\nif (BOOST_BEAST_IS_ROOT)\n    include(CTest)\nendif ()\noption(BOOST_BEAST_BUILD_TESTS \"Build boost::beast tests\" ${BUILD_TESTING})\noption(BOOST_BEAST_BUILD_FUZZERS \"Build boost::beast fuzzers\" OFF)\noption(BOOST_BEAST_BUILD_EXAMPLES \"Build boost::beast examples\" ${BOOST_BEAST_IS_ROOT})\noption(BOOST_BEAST_WARNINGS_AS_ERRORS \"Treat warnings as errors\" OFF)\n\n# Check if environment variable BOOST_SRC_DIR is set\nif (NOT DEFINED BOOST_SRC_DIR AND DEFINED ENV{BOOST_SRC_DIR})\n    set(DEFAULT_BOOST_SRC_DIR \"$ENV{BOOST_SRC_DIR}\")\nelse ()\n    set(DEFAULT_BOOST_SRC_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/../..\")\nendif ()\nset(BOOST_SRC_DIR ${DEFAULT_BOOST_SRC_DIR} CACHE STRING \"Boost source dir to use when running CMake from this directory\")\n\n#-------------------------------------------------\n#\n# Boost modules\n#\n#-------------------------------------------------\n# The boost super-project requires one explicit dependency per-line.\nset(BOOST_BEAST_DEPENDENCIES\n    Boost::asio\n    Boost::assert\n    Boost::bind\n    Boost::config\n    Boost::container\n    Boost::container_hash\n    Boost::core\n    Boost::endian\n    Boost::intrusive\n    Boost::logic\n    Boost::mp11\n    Boost::optional\n    Boost::preprocessor\n    Boost::smart_ptr\n    Boost::static_assert\n    Boost::static_string\n    Boost::system\n    Boost::throw_exception\n    Boost::type_index\n    Boost::type_traits\n    Boost::winapi)\n\nforeach (BOOST_BEAST_DEPENDENCY ${BOOST_BEAST_DEPENDENCIES})\n    if (BOOST_BEAST_DEPENDENCY MATCHES \"^[ ]*Boost::([A-Za-z0-9_]+)[ ]*$\")\n        list(APPEND BOOST_BEAST_INCLUDE_LIBRARIES ${CMAKE_MATCH_1})\n    endif ()\nendforeach ()\n# Conditional dependencies\nif (BOOST_BEAST_BUILD_TESTS)\n    set(BOOST_BEAST_UNIT_TEST_LIBRARIES filesystem)\nendif ()\nif (BOOST_BEAST_BUILD_EXAMPLES)\n    set(BOOST_BEAST_EXAMPLE_LIBRARIES json)\nendif ()\n# Complete dependency list\nset(BOOST_INCLUDE_LIBRARIES ${BOOST_BEAST_INCLUDE_LIBRARIES} ${BOOST_BEAST_UNIT_TEST_LIBRARIES} ${BOOST_BEAST_EXAMPLE_LIBRARIES})\nset(BOOST_EXCLUDE_LIBRARIES beast)\n\n#-------------------------------------------------\n#\n# Add Boost Subdirectory\n#\n#-------------------------------------------------\nif (BOOST_BEAST_IS_ROOT)\n    set(CMAKE_FOLDER Dependencies)\n    # Find absolute BOOST_SRC_DIR\n    if (NOT IS_ABSOLUTE ${BOOST_SRC_DIR})\n        set(BOOST_SRC_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/${BOOST_SRC_DIR}\")\n    endif ()\n\n    # Validate BOOST_SRC_DIR\n    set(BOOST_SRC_DIR_IS_VALID ON)\n    foreach (F \"CMakeLists.txt\" \"Jamroot\" \"boost-build.jam\" \"bootstrap.sh\" \"libs\")\n        if (NOT EXISTS \"${BOOST_SRC_DIR}/${F}\")\n            message(STATUS \"${BOOST_SRC_DIR}/${F} does not exist. Fallback to find_package.\")\n            set(BOOST_SRC_DIR_IS_VALID OFF)\n            break()\n        endif ()\n    endforeach ()\n\n    # Create Boost interface targets\n    if (BOOST_SRC_DIR_IS_VALID)\n        # From BOOST_SRC_DIR\n        if (BUILD_SHARED_LIBS)\n            set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})\n        endif ()\n        set(BOOST_EXCLUDE_LIBRARIES ${PROJECT_NAME})\n        set(PREV_BUILD_TESTING ${BUILD_TESTING})\n        set(BUILD_TESTING OFF CACHE BOOL \"Build the tests.\" FORCE)\n        add_subdirectory(${BOOST_SRC_DIR} Dependencies/boost EXCLUDE_FROM_ALL)\n        set(BUILD_TESTING ${PREV_BUILD_TESTING} CACHE BOOL \"Build the tests.\" FORCE)\n        set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${BOOST_SRC_DIR}/tools/cmake/include\")\n    else ()\n        # From Boost Package\n        find_package(Boost REQUIRED COMPONENTS filesystem scope json)\n        foreach (BOOST_INCLUDE_LIBRARY ${BOOST_INCLUDE_LIBRARIES})\n            if (NOT TARGET Boost::${BOOST_INCLUDE_LIBRARY})\n                add_library(Boost::${BOOST_INCLUDE_LIBRARY} ALIAS Boost::headers)\n            endif ()\n        endforeach ()\n    endif ()\n    unset(CMAKE_FOLDER)\nendif ()\n\n#-------------------------------------------------\n#\n# Library\n#\n#-------------------------------------------------\nadd_library(boost_beast INTERFACE)\nadd_library(Boost::beast ALIAS boost_beast)\ntarget_include_directories(boost_beast INTERFACE include)\ntarget_link_libraries(boost_beast INTERFACE ${BOOST_BEAST_DEPENDENCIES})\ntarget_compile_features(boost_beast INTERFACE cxx_std_11)\n\nif (BOOST_BEAST_IS_ROOT)\n    file(GLOB_RECURSE BOOST_BEAST_HEADERS CONFIGURE_DEPENDS include/boost/*.hpp)\n    set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR}/include/boost PREFIX \"\" FILES ${BOOST_BEAST_HEADERS})\n    target_sources(boost_beast PRIVATE ${BOOST_BEAST_HEADERS} build.jam)\nendif ()\n#-------------------------------------------------\n#\n# Tests\n#\n#-------------------------------------------------\nif (BOOST_BEAST_BUILD_TESTS)\n    add_subdirectory(test)\nendif ()\n\n#-------------------------------------------------\n#\n# Examples\n#\n#-------------------------------------------------\nif (BOOST_BEAST_BUILD_EXAMPLES)\n    add_subdirectory(example)\nendif ()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.8701171875,
          "content": "# Contributing to Beast\n\nThank you for taking the time to read this document!\n\n:heart_eyes: **please star the Boost.Beast repository!** :heart_eyes:\n\nFirst make sure you're on the\n[official repository page](https://github.com/boostorg/beast/blob/master/CONTRIBUTING.md),\nthen just press the button labeled \"star\" in the top right of the page\nto give Beast a star! Your stars create generate additional visibility,\nwhich leads to more users, more bug reports, more fixes, more testing,\nmore features, and a better product!\n\n<a href=\"https://github.com/boostorg/beast/blob/master/CONTRIBUTING.md\">\n<img width=\"400\" height = \"150\" alt = \"Please Star the Repository\"\n    src=\"https://raw.githubusercontent.com/vinniefalco/BeastAssets/master/StarTheRepo.png\">\n</a>\n\nClick the image above to make sure you're on the official\nBoost repository page so you can give Beast a star!\n\n# Ways to Contribute\n\nNo contribution to Beast is too big or too small! We are\nalways happy to see user participation in all of its forms.\nHere are some of the ways that you can contribute (this is\nby no means an exhaustive list):\n\n* Submit a\n  [bug report](https://github.com/boostorg/beast/issues).\n  We love hearing about broken things, so\n  that we can fix them. Any problem is fair game, this includes\n  the documentation examples, tests, and repository as well as the\n  library itself. Bug reports should be opened on the\n  [Issues](https://github.com/boostorg/beast/issues) page.\n\n* Provide\n  [feedback](https://github.com/boostorg/beast/issues).\n  about the library. If you have used, are using,\n  or are thinking about using the library we want to hear about it!\n  The more information you provide, the better we will be able\n  to ensure that Beast meets your needs. You can provide feedback\n  as an issue, or email the author directly.\n\n* Test Beast. When changes are made, they are submitted as a\n  [Pull Request](https://github.com/boostorg/beast/pulls).\n  Everyone is welcome to examine these upcoming changes, test them,\n  and report on the results. This form of quality assurance is very\n  helpful so we can keep delivering a great product. Consider\n  subscribing to repository notifications to get alerted to new\n  pull requests.\n\n* Code Review on\n  [Pull Requests](https://github.com/boostorg/beast/pulls).\n  This is one of the most valuable ways to contribute, because it helps\n  to improve code and features, and helps to find bugs, before the code\n  gets merged. A little bit of time investment from just a few people on\n  each pull request goes a **long** way to increasing the quality of the\n  final product. For tips on how to participate in pull requests please\n  view the\n  [README.md](https://github.com/boostorg/beast#contributing-we-need-your-help).\n\n* Use Beast in your next application! At the end of the day, it is the\n  goal of the library to provide utility to users so the best way you\n  can contribute is simply to use the library!\n"
        },
        {
          "name": "LICENSE_1_0.txt",
          "type": "blob",
          "size": 1.306640625,
          "content": "Boost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.7041015625,
          "content": "<img width=\"880\" height = \"80\" alt = \"Boost.Beast Title\"\n    src=\"https://raw.githubusercontent.com/boostorg/beast/master/doc/images/readme2.png\">\n\n# HTTP and WebSocket built on Boost.Asio in C++11\n\nBranch                                                    | Linux / Windows                                                                                                                          | Coverage                                                                                                                              | Documentation                                                                                                                                              | Matrix                                                                                                                                         |\n----------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------|\n[master](https://github.com/boostorg/beast/tree/master)   | [![Build Status](https://drone.cpp.al/api/badges/boostorg/beast/status.svg?ref=refs/heads/master)](https://drone.cpp.al/boostorg/beast)  | [![codecov](https://img.shields.io/codecov/c/github/boostorg/beast/master.svg)](https://codecov.io/gh/boostorg/beast/branch/master)   | [![Documentation](https://img.shields.io/badge/documentation-master-brightgreen.svg)](http://www.boost.org/doc/libs/master/libs/beast/doc/html/index.html) | [![Matrix](https://img.shields.io/badge/matrix-master-brightgreen.svg)](http://www.boost.org/development/tests/master/developer/beast.html)    |\n[develop](https://github.com/boostorg/beast/tree/develop) | [![Build Status](https://drone.cpp.al/api/badges/boostorg/beast/status.svg?ref=refs/heads/develop)](https://drone.cpp.al/boostorg/beast) | [![codecov](https://img.shields.io/codecov/c/github/boostorg/beast/develop.svg)](https://codecov.io/gh/boostorg/beast/branch/develop) | [![Documentation](https://img.shields.io/badge/documentation-develop-brightgreen.svg)](https://www.boost.org/doc/libs/develop/libs/beast/index.html)       | [![Matrix](https://img.shields.io/badge/matrix-develop-brightgreen.svg)](https://www.boost.org/development/tests/develop/developer/beast.html) |\n\n## Contents\n\n- [Introduction](#introduction)\n- [Appearances](#appearances)\n- [Description](#description)\n- [Requirements](#requirements)\n- [Git Branches](#branches)\n- [Building](#building)\n- [Usage](#usage)\n- [License](#license)\n- [Contact](#contact)\n- [Contributing](#contributing-we-need-your-help)\n\n## Introduction\n\nBeast is a C++ header-only library serving as a foundation for writing\ninteroperable networking libraries by providing **low-level HTTP/1,\nWebSocket, and networking protocol** vocabulary types and algorithms\nusing the consistent asynchronous model of Boost.Asio.\n\nThis library is designed for:\n\n* **Symmetry:** Algorithms are role-agnostic; build clients, servers, or both.\n\n* **Ease of Use:** Boost.Asio users will immediately understand Beast.\n\n* **Flexibility:** Users make the important decisions such as buffer or\n  thread management.\n\n* **Performance:** Build applications handling thousands of connections or more.\n\n* **Basis for Further Abstraction.** Components are well-suited for building upon.\n\n## Appearances\n\n| <a href=\"https://github.com/vinniefalco/CppCon2018\">CppCon 2018</a> | <a href=\"https://www.bishopfox.com/case_study/securing-beast/\">Bishop Fox 2018</a> |\n| ------------ | ------------ |\n| <a href=\"https://www.youtube.com/watch?v=7FQwAjELMek\"><img width=\"320\" height = \"180\" alt=\"Beast\" src=\"https://raw.githubusercontent.com/vinniefalco/CppCon2018/master/CppCon2018.png\"></a> | <a href=\"https://youtu.be/4TtyYbGDAj0\"><img width=\"320\" height = \"180\" alt=\"Beast Security Review\" src=\"https://raw.githubusercontent.com/vinniefalco/BeastAssets/master/BishopFox2018.png\"></a> |\n\n| <a href=\"https://github.com/vinniefalco/CppCon2018\">CppCon 2017</a> | <a href=\"http://cppcast.com/2017/01/vinnie-falco/\">CppCast 2017</a> | <a href=\"https://raw.githubusercontent.com/vinniefalco/BeastAssets/master/CppCon2016.pdf\">CppCon 2016</a> |\n| ------------ | ------------ | ----------- |\n| <a href=\"https://www.youtube.com/watch?v=WsUnnYEKPnI\"><img width=\"320\" height = \"180\" alt=\"Beast\" src=\"https://raw.githubusercontent.com/vinniefalco/CppCon2017/master/CppCon2017.png\"></a> | <a href=\"http://cppcast.com/2017/01/vinnie-falco/\"><img width=\"180\" height=\"180\" alt=\"Vinnie Falco\" src=\"https://avatars1.githubusercontent.com/u/1503976?v=3&u=76c56d989ef4c09625256662eca2775df78a16ad&s=180\"></a> | <a href=\"https://www.youtube.com/watch?v=uJZgRcvPFwI\"><img width=\"320\" height = \"180\" alt=\"Beast\" src=\"https://raw.githubusercontent.com/vinniefalco/BeastAssets/master/CppCon2016.png\"></a> |\n\n## Description\n\nThis software is in its first official release. Interfaces\nmay change in response to user feedback. For recent changes\nsee the [CHANGELOG](CHANGELOG.md).\n\n* [Official Site](https://github.com/boostorg/beast)\n* [Documentation](https://www.boost.org/doc/libs/master/libs/beast/) (master branch)\n* [Autobahn|Testsuite WebSocket Results](https://vinniefalco.github.io/boost/beast/reports/autobahn/index.html)\n\n## Requirements\n\nThis library is for programmers familiar with Boost.Asio. Users\nwho wish to use asynchronous interfaces should already know how to\ncreate concurrent network programs using callbacks or coroutines.\n\n* **C++11:** Robust support for most language features.\n* **Boost:** Boost.Asio and some other parts of Boost.\n* **OpenSSL:** Required for using TLS/Secure sockets and examples/tests\n\nWhen using Microsoft Visual C++, Visual Studio 2017 or later is required.\n\nOne of these components is required in order to build the tests and examples:\n\n* Properly configured bjam/b2\n* CMake 3.5.1 or later (Windows only)\n\n## Building\n\nBeast is header-only. To use it just add the necessary `#include` line\nto your source files, like this:\n```C++\n#include <boost/beast.hpp>\n```\n\nIf you use coroutines you'll need to link with the Boost.Coroutine\nlibrary. Please visit the Boost documentation for instructions\non how to do this for your particular build system.\n\n## GitHub\n\nTo use the latest official release of Beast, simply obtain the latest\nBoost distribution and follow the instructions for integrating it\ninto your development environment. If you wish to build the examples\nand tests, or if you wish to preview upcoming changes and features,\nit is suggested to clone the \"Boost superproject\" and work with Beast\n\"in-tree\" (meaning, the libs/beast subdirectory of the superproject).\n\nThe official repository contains the following branches:\n\n* [**master**](https://github.com/boostorg/beast/tree/master) This\n  holds the most recent snapshot with code that is known to be stable.\n\n* [**develop**](https://github.com/boostorg/beast/tree/develop) This\n  holds the most recent snapshot. It may contain unstable code.\n\nEach of these branches requires a corresponding Boost branch and\nall of its subprojects. For example, if you wish to use the **master**\nbranch version of Beast, you should clone the Boost superproject,\nswitch to the **master** branch in the superproject and acquire\nall the Boost libraries corresponding to that branch including Beast.\n\nTo clone the superproject locally, and switch into the main project's\ndirectory use:\n```\ngit clone --recursive https://github.com/boostorg/boost.git\ncd boost\n```\n\n\"bjam\" is used to build Beast and the Boost libraries. On a non-Windows\nsystem use this command to build bjam:\n```\n./bootstrap.sh\n```\n\nFrom a Windows command line, build bjam using this command:\n```\n.\\BOOTSTRAP.BAT\n```\n\n## Building tests and examples\nBuilding tests and examples requires OpenSSL installed. If OpenSSL is installed\nin a non-system location, you will need to copy the\n[user-config.jam](tools/user-config.jam) file into your home directory and set\nthe `OPENSSL_ROOT` environment variable to the path that contains an installation\nof OpenSSL.\n\n### Ubuntu/Debian\nIf installed into a system directory, OpenSSL will be automatically found and used.\n```bash\nsudo apt install libssl-dev\n```\n### Windows\nReplace `path` in the following code snippets with the path you installed vcpkg\nto. Examples assume a 32-bit build, if you build a 64-bit version replace\n`x32-windows` with `x64-windows` in the path.\n- Using [vcpkg](https://github.com/Microsoft/vcpkg) and CMD:\n```bat\nvcpkg install openssl --triplet x32-windows\nSET OPENSSL_ROOT=path\\installed\\x32-windows\n```\n\n- Using [vcpkg](https://github.com/Microsoft/vcpkg) and PowerShell:\n```powershell\nvcpkg install openssl --triplet x32-windows\n$env:OPENSSL_ROOT = \"path\\x32-windows\"\n```\n\n- Using [vcpkg](https://github.com/Microsoft/vcpkg) and bash:\n```bash\nvcpkg.exe install openssl --triplet x32-windows\nexport OPENSSL_ROOT=path/x32-windows\n```\n\n### Mac OS\nUsing [brew](https://github.com/Homebrew/brew):\n```bash\nbrew install openssl\nexport OPENSSL_ROOT=$(brew --prefix openssl)\n# install bjam tool user specific configuration file to read OPENSSL_ROOT\n# see https://www.bfgroup.xyz/b2/manual/release/index.html\ncp ./libs/beast/tools/user-config.jam $HOME\n```\n\nMake sure the bjam tool (also called \"b2\") is available in the path\nyour shell uses to find executables. The Beast project is located in\n\"libs/beast\" relative to the directory containing the Boot superproject.\nTo build the Beast tests, examples, and documentation use these commands:\n```\nexport PATH=$PWD:$PATH\nb2 -j2 libs/beast/test cxxstd=11      # bjam must be in your $PATH\nb2 -j2 libs/beast/example cxxstd=11   # \"-j2\" means use two processors\nb2 libs/beast/doc                     # Doxygen and Saxon are required for this\n```\n\n\n\nAdditional instructions for configuring, using, and building libraries\nin superproject may be found in the\n[Boost Wiki](https://github.com/boostorg/boost/wiki/Getting-Started).\n\n## Visual Studio\n\nCMake may be used to generate a very nice Visual Studio solution and\na set of Visual Studio project files using these commands:\n\n```\ncmake -G \"Visual Studio 17 2022\" -A win32 -B bin -DCMAKE_TOOLCHAIN_FILE=\"C:/vcpkg/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=\"C:/boost/libs/beast/cmake/toolchains/msvc.cmake\"\n\ncmake -G \"Visual Studio 17 2022\" -A x64 -B bin64 -DCMAKE_TOOLCHAIN_FILE=\"C:/vcpkg/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=\"C:/boost/libs/beast/cmake/toolchains/msvc.cmake\"\n```\n\nThe files in the repository are laid out thusly:\n\n```\n./\n    bin/            Create this to hold executables and project files\n    bin64/          Create this to hold 64-bit Windows executables and project files\n    doc/            Source code and scripts for the documentation\n    include/        Where the header files are located\n    example/        Self contained example programs\n    meta/           Metadata for Boost integration\n    test/           The unit tests for Beast\n    tools/          Scripts used for CI testing\n```\n\n## Usage\n\nThese examples are complete, self-contained programs that you can build\nand run yourself (they are in the `example` directory).\n\nhttps://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/quick_start.html\n\n## License\n\nDistributed under the Boost Software License, Version 1.0.\n(See accompanying file [LICENSE_1_0.txt](LICENSE_1_0.txt) or copy at\nhttps://www.boost.org/LICENSE_1_0.txt)\n\n## Contact\n\nPlease report issues or questions here:\nhttps://github.com/boostorg/beast/issues\n\n---\n\n## Contributing (We Need Your Help!)\n\nIf you would like to contribute to Beast and help us maintain high\nquality, consider performing code reviews on active pull requests.\nAny feedback from users and stakeholders, even simple questions about\nhow things work or why they were done a certain way, carries value\nand can be used to improve the library. Code review provides these\nbenefits:\n\n* Identify bugs\n* Documentation proof-reading\n* Adjust interfaces to suit use-cases\n* Simplify code\n\nYou can look through the Closed pull requests to get an idea of how\nreviews are performed. To give a code review just sign in with your\nGitHub account and then add comments to any open pull requests below,\ndon't be shy!\n<p>https://github.com/boostorg/beast/pulls</p>\n\nHere are some resources to learn more about\ncode reviews:\n\n* <a href=\"https://blog.scottnonnenberg.com/top-ten-pull-request-review-mistakes/\">Top 10 Pull Request Review Mistakes</a>\n* <a href=\"https://static1.smartbear.co/smartbear/media/pdfs/best-kept-secrets-of-peer-code-review_redirected.pdf\">Best Kept Secrets of Peer Code Review (pdf)</a>\n* <a href=\"https://static1.smartbear.co/support/media/resources/cc/11_best_practices_for_peer_code_review_redirected.pdf\">11 Best Practices for Peer Code Review (pdf)</a>\n* <a href=\"http://www.evoketechnologies.com/blog/code-review-checklist-perform-effective-code-reviews/\">Code Review Checklist – To Perform Effective Code Reviews</a>\n* <a href=\"https://www.codeproject.com/Articles/524235/Codeplusreviewplusguidelines\">Code review guidelines</a>\n* <a href=\"https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md\">C++ Core Guidelines</a>\n* <a href=\"https://www.oreilly.com/library/view/c-coding-standards/0321113586/\">C++ Coding Standards (Sutter & Alexandrescu)</a>\n\nBeast thrives on code reviews and any sort of feedback from users and\nstakeholders about its interfaces. Even if you just have questions,\nasking them in the code review or in issues provides valuable information\nthat can be used to improve the library - do not hesitate, no question\nis insignificant or unimportant!\n"
        },
        {
          "name": "build.jam",
          "type": "blob",
          "size": 1.4619140625,
          "content": "# Copyright René Ferdinand Rivera Morell 2023-2024\n# Distributed under the Boost Software License, Version 1.0.\n# (See accompanying file LICENSE_1_0.txt or copy at\n# http://www.boost.org/LICENSE_1_0.txt)\n\nrequire-b2 5.2 ;\n\nimport feature ;\n\nconstant boost_dependencies :\n    /boost/asio//boost_asio\n    /boost/assert//boost_assert\n    /boost/bind//boost_bind\n    /boost/config//boost_config\n    /boost/container//boost_container\n    /boost/container_hash//boost_container_hash\n    /boost/core//boost_core\n    /boost/endian//boost_endian\n    /boost/intrusive//boost_intrusive\n    /boost/logic//boost_logic\n    /boost/mp11//boost_mp11\n    /boost/optional//boost_optional\n    /boost/preprocessor//boost_preprocessor\n    /boost/smart_ptr//boost_smart_ptr\n    /boost/static_assert//boost_static_assert\n    /boost/static_string//boost_static_string\n    /boost/system//boost_system\n    /boost/throw_exception//boost_throw_exception\n    /boost/type_index//boost_type_index\n    /boost/type_traits//boost_type_traits\n    /boost/winapi//boost_winapi ;\n\nproject /boost/beast\n    : common-requirements\n        <include>include\n    ;\n\nexplicit\n    [ alias boost_beast : : : : <library>$(boost_dependencies) ]\n    [ alias all : boost_beast example test ]\n    ;\n\ncall-if : boost-library beast\n    ;\n\nfeature.feature boost.beast.allow-deprecated : on off : propagated ;\nfeature.feature boost.beast.separate-compilation : on off : propagated ;\nfeature.feature boost.beast.valgrind : on off : optional propagated ;\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.6689453125,
          "content": "<html>\n    <head>\n        <title>Boost.Beast</title>\n        <meta http-equiv=\"refresh\" content=\"0; URL=./doc/html/index.html\">\n    </head>\n    <body>\n        Automatic redirection failed, please go to\n        <a href=\"./doc/html/index.html\">./doc/html/index.html</a>\n        <hr>\n        <tt>\n        Boost.Beast<br>\n        <br>\n        Copyright&nbsp;(C)&nbsp;2016-2017&nbsp;Vinnie&nbsp;Falco<br>\n        <br>\n        Distributed under the Boost Software License, Version 1.0.\n        (See accompanying file LICENSE_1_0.txt or copy at\n        <a href=http://www.boost.org/LICENSE_1_0.txt>http://www.boost.org/LICENSE_1_0.txt</a>) <br>\n        <br>\n        </tt>\n    </body>\n</html>\n"
        },
        {
          "name": "meta",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}