{
  "metadata": {
    "timestamp": 1736565304705,
    "page": 121,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Vita3K/Vita3K",
      "stars": 4111,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.8984375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  WebKit\nAccessModifierOffset: -4\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands:   false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     0\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '$'\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        c++20\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.345703125,
          "content": "# Properly detect files as C++ on Github\n*.h\t\t\tlinguist-language=cpp\n*.inc\t\t\tlinguist-language=cpp\n*.frag\t\t\tlinguist-language=GLSL\n*.vert\t\t\tlinguist-language=GLSL\n\nsrc/external/*\tlinguist-vendored\n\n# Enforce line endings to LF for cross-compiling\n*.cpp\t\t\teol=lf\n*.inc\t\t\teol=lf\n*.frag\t\t\teol=lf\n*.vert\t\t\teol=lf\n*.h\t\t\teol=lf\n*.sh\t\t\teol=lf\n\n*.bat\t\t\teol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2734375,
          "content": "/api.trace\n.vs/\n/external/boost-build\n.idea/\ncmake-build-*/\n.vs\n.vscode\nbuild\n# generated on macOS\n.DS_Store\n# generated by Doxygen\n/docs/html/\n# clangd cache\n.cache\n# CMake user presets\nCMakeUserPresets.json\ncompile_commands.json\n# AppImage builder\nappimage/linuxdeploy.AppImage\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 3.3603515625,
          "content": "[submodule \"external/better-enums\"]\n\tpath = external/better-enums\n\turl = https://github.com/aantron/better-enums\n[submodule \"external/boost\"]\n\tpath = external/boost\n\turl = https://github.com/Vita3K/ext-boost\n[submodule \"external/capstone\"]\n\tpath = external/capstone\n\turl = https://github.com/aquynh/capstone.git\n[submodule \"external/dirent\"]\n\tpath = external/dirent\n\turl = https://github.com/tronkko/dirent\n\tbranch = v1.23\n[submodule \"external/dlmalloc\"]\n\tpath = external/dlmalloc\n\turl = https://github.com/Vita3K/dlmalloc\n[submodule \"external/ffmpeg\"]\n\tpath = external/ffmpeg\n\turl = https://github.com/Vita3K/ffmpeg-core.git\n[submodule \"external/glslang\"]\n\tpath = external/glslang\n\turl = https://github.com/KhronosGroup/glslang\n[submodule \"external/googletest\"]\n\tpath = external/googletest\n\turl = https://github.com/google/googletest\n[submodule \"external/imgui\"]\n\tpath = external/imgui\n\turl = https://github.com/ocornut/imgui\n[submodule \"external/imgui_club\"]\n\tpath = external/imgui_club\n\turl = https://github.com/ocornut/imgui_club\n[submodule \"external/libfat16\"]\n\tpath = external/libfat16\n\turl = https://github.com/Vita3K/libfat16\n[submodule \"external/printf\"]\n\tpath = external/printf\n\turl = https://github.com/Vita3K/printf\n[submodule \"external/pugixml\"]\n\tpath = external/pugixml\n\turl = https://github.com/zeux/pugixml\n[submodule \"external/sdl\"]\n\tpath = external/sdl\n\turl = https://github.com/Vita3K/sdl\n[submodule \"external/sdl2-cmake-scripts\"]\n\tpath = external/sdl2-cmake-scripts\n\turl = https://github.com/tcbrindle/sdl2-cmake-scripts\n[submodule \"external/spdlog\"]\n\tpath = external/spdlog\n\turl = https://github.com/gabime/spdlog\n\tbranch = v1.x\n[submodule \"external/SPIRV-Cross\"]\n\tpath = external/SPIRV-Cross\n\turl = https://github.com/KhronosGroup/SPIRV-Cross.git\n[submodule \"external/stb\"]\n\tpath = external/stb\n\turl = https://github.com/nothings/stb\n[submodule \"external/unicorn\"]\n\tpath = external/unicorn\n\turl = https://github.com/Vita3K/unicorn.git\n[submodule \"external/vita-toolchain\"]\n\tpath = external/vita-toolchain\n\turl = https://github.com/vitasdk/vita-toolchain.git\n[submodule \"external/VulkanMemoryAllocator-Hpp\"]\n\tpath = external/VulkanMemoryAllocator-Hpp\n\turl = https://github.com/Macdu/VulkanMemoryAllocator-Hpp\n[submodule \"external/Vulkan-Headers\"]\n\tpath = external/Vulkan-Headers\n\turl = https://github.com/KhronosGroup/Vulkan-Headers.git\n[submodule \"external/yaml-cpp\"]\n\tpath = external/yaml-cpp\n\turl = https://github.com/jbeder/yaml-cpp\n[submodule \"external/psvpfstools\"]\n\tpath = external/psvpfstools\n\turl = https://github.com/Vita3K/psvpfstools.git\n[submodule \"external/xxHash\"]\n\tpath = external/xxHash\n\turl = https://github.com/Cyan4973/xxHash\n[submodule \"external/dynarmic\"]\n\tpath = external/dynarmic\n\turl = https://github.com/Vita3K/dynarmic.git\n[submodule \"external/fmt\"]\n\tpath = external/fmt\n\turl = https://github.com/fmtlib/fmt.git\n[submodule \"external/LibAtrac9\"]\n\tpath = external/LibAtrac9\n\turl = https://github.com/Vita3K/LibAtrac9.git\n[submodule \"external/tracy\"]\n\tpath = external/tracy\n\turl = https://github.com/wolfpld/tracy.git\n[submodule \"external/nativefiledialog-extended\"]\n\tpath = external/nativefiledialog-extended\n\turl = https://github.com/btzy/nativefiledialog-extended.git\n[submodule \"external/cubeb\"]\n\tpath = external/cubeb\n\turl = https://github.com/mozilla/cubeb.git\n[submodule \"external/concurrentqueue\"]\n\tpath = external/concurrentqueue\n\turl = https://github.com/cameron314/concurrentqueue.git\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.462890625,
          "content": "cmake_minimum_required(VERSION 3.17.2)\nproject(Vita3K)\n\n# Detects the amount of processors of the host machine and forwards the result to CPU_COUNT\ninclude(ProcessorCount)\nProcessorCount(CPU_COUNT)\n\n# Define the Architecture variable, right now it should only contain \"x86_64\" or \"arm64\"\ninclude(\"external/dynarmic/CMakeModules/DetectArchitecture.cmake\")\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_OSX_DEPLOYMENT_TARGET 11.0)\n\noption(USE_DISCORD_RICH_PRESENCE \"Build Vita3K with Discord Rich Presence\" ON)\noption(USE_VITA3K_UPDATE \"Build Vita3K with updater.\" ON)\noption(BUILD_APPIMAGE \"Build an AppImage.\" OFF)\n\noption(FORCE_BUILD_OPENSSL_MAC OFF)\n\nif(\"${CMAKE_CXX_COMPILER_LAUNCHER}\" STREQUAL \"\")\n\tfind_program(CCACHE_PROGRAM ccache)\n\tif(CCACHE_PROGRAM)\n\t\tset(CMAKE_C_COMPILER_LAUNCHER \"${CCACHE_PROGRAM}\")\n\t\tset(CMAKE_CXX_COMPILER_LAUNCHER \"${CCACHE_PROGRAM}\")\n\tendif()\nendif()\n\nif(MSVC)\n\tstring(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\")\n\tstring(REPLACE \"/Zi\" \"/Z7\" CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG}\")\n\tstring(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n\tstring(REPLACE \"/Zi\" \"/Z7\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n\tstring(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n\tstring(REPLACE \"/Zi\" \"/Z7\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\nendif()\n\nenable_testing()\n\ncmake_policy(SET CMP0069 NEW)\nset(CMAKE_POLICY_DEFAULT_CMP0069 NEW)\n\nset(lto_usage_mode ALWAYS RELEASE_ONLY NEVER)\nset(USE_LTO RELEASE_ONLY CACHE STRING \"Use interprocedural optimization/link time optimization\")\nset_property(CACHE USE_LTO PROPERTY STRINGS ${lto_usage_mode})\n\nif (NOT (USE_LTO STREQUAL \"NEVER\"))\n\tinclude(CheckIPOSupported)\n\tcheck_ipo_supported(RESULT ipo_supported OUTPUT ipo_supported_error)\n\n\tif( ipo_supported )\n\t\tif (USE_LTO STREQUAL \"ALWAYS\") \n\t\t\tset(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)\n\t\telseif (USE_LTO STREQUAL \"RELEASE_ONLY\")\n\t\t\tset(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)\n\t\tendif()\n\telse()\n\t\tmessage(STATUS \"IPO / LTO not supported: <${ipo_supported_error}>\")\n\t\tset(USE_LTO NEVER CACHE STRING \"Use interprocedural optimization/link time optimization\")\n\tendif()\nendif()\n\n\n############################\n########## Boost ###########\n############################\n\n# Macro to build Boost buildsystem executable\nmacro(b2_build)\n\tif (CMAKE_HOST_SYSTEM_NAME STREQUAL \"Windows\")\n\t\texecute_process(\n\t\t\tCOMMAND ${BOOST_SOURCEDIR}/bootstrap.bat --with-toolset=${BOOST_TOOLSET}\n\t\t\tWORKING_DIRECTORY ${BOOST_SOURCEDIR}\n\t\t\tOUTPUT_QUIET\n\t\t)\n\telseif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n\t\texecute_process(\n\t\t\tCOMMAND chmod +x ${BOOST_SOURCEDIR}/tools/build/src/engine/build.sh\n\t\t\tCOMMAND sh ${BOOST_SOURCEDIR}/bootstrap.sh\n\t\t\tWORKING_DIRECTORY ${BOOST_SOURCEDIR}\n\t\t\tOUTPUT_QUIET\n\t\t)\n\telseif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Linux\")\n\t\texecute_process(\n\t\t\tCOMMAND chmod +x ${BOOST_SOURCEDIR}/tools/build/src/engine/build.sh\n\t\t\tCOMMAND sh ${BOOST_SOURCEDIR}/bootstrap.sh --with-toolset=${BOOST_TOOLSET}\n\t\t\tWORKING_DIRECTORY ${BOOST_SOURCEDIR}\n\t\t\tOUTPUT_QUIET\n\t\t)\n\tendif()\nendmacro(b2_build)\n\n# Macro to compile Boost\nmacro(boost_compile)\n\tlist(TRANSFORM BOOST_MODULES_TO_FIND PREPEND --with- OUTPUT_VARIABLE b2_cmd_line_common)\n\tset(b2_cmd_line_common ${b2} ${b2_cmd_line_common} -j${CPU_COUNT} --build-dir=${BOOST_INSTALLDIR} --stagedir=${BOOST_INSTALLDIR} cxxflags=${BOOST_CXX_FLAGS})\n\tset(Boost_USE_DEBUG_RUNTIME \"\")\n\tif (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n\t\texecute_process(\n\t\t\tCOMMAND ${b2_cmd_line_common} address-model=64 --architecture=x64 toolset=${BOOST_TOOLSET} variant=debug,release stage\n\t\t\tWORKING_DIRECTORY ${BOOST_SOURCEDIR}\n\t\t\tOUTPUT_QUIET\n\t\t)\n\telseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n\t\texecute_process(\n\t\t\tCOMMAND ${b2_cmd_line_common} architecture=${BOOST_ARCHITECTURE} cxxflags=\"-mmacosx-version-min=11.0\" stage\n\t\t\tWORKING_DIRECTORY ${BOOST_SOURCEDIR}\n\t\t\tOUTPUT_QUIET\n\t\t)\n\telseif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n\t\texecute_process(\n\t\t\tCOMMAND ${b2_cmd_line_common} --ignore-site-config toolset=${BOOST_TOOLSET} stage\n\t\t\tWORKING_DIRECTORY ${BOOST_SOURCEDIR}\n\t\t\tOUTPUT_QUIET\n\t\t)\n\tendif()\nendmacro(boost_compile)\n\noption(VITA3K_FORCE_CUSTOM_BOOST \"Force Vita3K build process to use the Boost version included with the repository\" OFF)\noption(VITA3K_FORCE_SYSTEM_BOOST \"Force Vita3K build process to use the Boost version in the system and CMake's default paths and ignore the Boost version included with Vita3K\" OFF)\n\n# Boost modules to be found by CMake\nset(BOOST_MODULES_TO_FIND filesystem system)\n\n# If build process isn't set to forcefully use system Boost\nmacro(get_boost)\n\tif(NOT VITA3K_FORCE_SYSTEM_BOOST)\n\t\t# find_package(Boost ...) setting\n\t\tset(Boost_USE_STATIC_LIBS ON)\n\n\t\tset(Boost_NO_WARN_NEW_VERSIONS 1)\n\n\t\t# First, try to find Boost without any hints (system Boost)\n\t\tif(NOT VITA3K_FORCE_CUSTOM_BOOST)\n\t\t\tfind_package(Boost 1.81 COMPONENTS ${BOOST_MODULES_TO_FIND} QUIET)\n\t\tendif()\n\n\t\t# If system Boost hasn't been found, then enable hints to find custom Boost\n\t\tif (NOT Boost_FOUND)\n\t\t\tmessage(STATUS \"A Boost distribution that meets the requirements needed for the project hasn't been found in your system. Falling back to custom Boost distribution...\")\n\n\t\t\t# Set path hints for Boost search inside the repository folder and assist in compilation if needed\n\t\t\tset(BOOST_SOURCEDIR \"${CMAKE_SOURCE_DIR}/external/boost\")       # For internal use\n\t\t\tset(BOOST_INSTALLDIR \"${CMAKE_BINARY_DIR}/external/boost\")      # For internal use\n\t\t\tset(BOOST_ROOT \"${BOOST_SOURCEDIR}\")                            # find_package(Boost ...) hint\n\t\t\tset(BOOST_INCLUDEDIR \"${BOOST_SOURCEDIR}\")                      # find_package(Boost ...) hint\n\t\t\tset(BOOST_LIBRARYDIR \"${BOOST_INSTALLDIR}/lib\")                 # find_package(Boost ...) hint\n\n\t\t\t# Find Boost again to check for a existing compilation of the custom distribution\n\t\t\tfind_package(Boost 1.81 COMPONENTS ${BOOST_MODULES_TO_FIND} PATHS ${BOOST_INSTALLDIR} NO_DEFAULT_PATH)\n\n\t\t\t# If no build of the custom distribution is found, compile it\n\t\t\tif(NOT Boost_FOUND)\n\t\t\t\tmessage(STATUS \"No existing custom distribution of Boost has been found in ${BOOST_INSTALLDIR}. Proceeding to compile Boost...\")\n\n\t\t\t\t# Set compilation toolset for b2 and Boost builds\n\t\t\t\tif (CMAKE_HOST_SYSTEM_NAME STREQUAL \"Windows\")\n\t\t\t\t\tif(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n\t\t\t\t\t\tif(CMAKE_GENERATOR_TOOLSET STREQUAL \"ClangCL\")\n\t\t\t\t\t\t\t# Proper toolset should be \"clang-win\", but b2 has a bug that makes it spam Visual Studio instances if set\n\t\t\t\t\t\t\t# Since Clang for Windows is ABI-compatible with MSVC, using MSVC is fine\n\t\t\t\t\t\t\tset(BOOST_TOOLSET \"msvc\")\n\t\t\t\t\t\telse()\n\t\t\t\t\t\t\tmessage(WARNING \"Boost compilation on Windows requires the use of a clang-cl compiler running inside a Visual Studio Developer CLI environment with a Windows C++ SDK available.\")\n\t\t\t\t\t\t\tset(BOOST_TOOLSET \"msvc\")\n\t\t\t\t\t\tendif()\n\t\t\t\t\telse()\n\t\t\t\t\t\tset(BOOST_TOOLSET \"msvc\")\n\t\t\t\t\tendif()\n\t\t\t\telseif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Linux\")\n\t\t\t\t\tif(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n\t\t\t\t\t\tset(BOOST_TOOLSET \"clang\")\n\t\t\t\t\telseif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n\t\t\t\t\t\tset(BOOST_TOOLSET \"gcc\")\n\t\t\t\t\tendif()\n\t\t\t\telseif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n\t\t\t\t\tset(BOOST_TOOLSET \"clang-darwin\")\n\t\t\t\t\tif (ARCHITECTURE STREQUAL \"x86_64\")\n\t\t\t\t\t\tset(BOOST_ARCHITECTURE \"x86\")\n\t\t\t\t\telseif (ARCHITECTURE STREQUAL \"arm64\")\n\t\t\t\t\t\tset(BOOST_ARCHITECTURE \"arm\")\n\t\t\t\t\telse()\n\t\t\t\t\t\tset(BOOST_ARCHITECTURE \"arm+x86\")\n\t\t\t\t\tendif()\n\t\t\t\tendif()\n\n\t\t\t\t# Determine b2 executable name depending on host system\n\t\t\t\tif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Windows\")\n\t\t\t\t\tset(b2_EXECUTABLE_NAME \"b2.exe\")\n\t\t\t\telse()\n\t\t\t\t\tset(b2_EXECUTABLE_NAME \"b2\")\n\t\t\t\tendif()\n\n\t\t\t\t# Find b2\n\t\t\t\tfind_program(b2 NAME ${b2_EXECUTABLE_NAME} PATHS ${BOOST_SOURCEDIR} NO_CACHE NO_DEFAULT_PATH)\n\n\t\t\t\t# Compile b2 if it isn't found\n\t\t\t\tif(b2 STREQUAL \"b2-NOTFOUND\")\n\t\t\t\t\tmessage(STATUS \"The b2 buildsystem executable hasn't been found in your system. Compiling b2...\")\n\t\t\t\t\tb2_build()\n\n\t\t\t\t\t# Find b2 again after compilation\n\t\t\t\t\tfind_program(b2 NAME ${b2_EXECUTABLE_NAME} PATHS ${BOOST_SOURCEDIR} NO_CACHE NO_DEFAULT_PATH REQUIRED)\n\t\t\t\tendif()\n\n\t\t\t\t# Compile Boost\n\t\t\t\tmessage(STATUS \"Compiling Boost...\")\n\t\t\t\tboost_compile()\n\n\t\t\t\t# Find Boost again\n\t\t\t\tfind_package(Boost 1.81 COMPONENTS ${BOOST_MODULES_TO_FIND} PATHS ${BOOST_INSTALLDIR} NO_DEFAULT_PATH REQUIRED)\n\t\t\telse()\n\t\t\t\tmessage(STATUS \"Custom Boost distribution found in ${BOOST_INSTALLDIR}\")\n\t\t\tendif()\n\t\tendif()\n\telse()\n\t\t# Try to find Boost on the system and CMake's default paths\n\t\tset(Boost_USE_STATIC_LIBS ON)\n\t\tfind_package(Boost 1.81 COMPONENTS ${BOOST_MODULES_TO_FIND} REQUIRED)\n\tendif()\nendmacro(get_boost)\n\nget_boost()\n\nif(WIN32)\n\tadd_compile_definitions(\"_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS\" \"_CRT_SECURE_NO_WARNINGS\" \"NOMINMAX\")\nendif()\n\n# Allow per-translation-unit parallel builds when using MSVC\nif(CMAKE_GENERATOR MATCHES \"Visual Studio\" AND (CMAKE_C_COMPILER_ID MATCHES \"MSVC|Intel|Clang\" OR CMAKE_CXX_COMPILER_ID MATCHES \"MSVC|Intel|Clang\"))\n\tstring(APPEND CMAKE_C_FLAGS \" /MP\")\n\tstring(APPEND CMAKE_CXX_FLAGS \" /MP\")\nendif()\n\nif (${BUILD_APPIMAGE})\n\tif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n\t\tset(LINUXDEPLOY_COMMAND \"${CMAKE_SOURCE_DIR}/appimage/linuxdeploy.AppImage\" CACHE INTERNAL \"\")\n\t\tif (NOT EXISTS \"${LINUXDEPLOY_COMMAND}\")\n\t\t\tmessage(FATAL_ERROR \"Could not find linuxdeploy at ${LINUXDEPLOY_COMMAND}!\")\n\t\tendif()\n\telse()\n\t\tmessage(FATAL_ERROR \"Cannot build an AppImage for a non-Linux host.\")\n\tendif()\nendif()\n\nadd_subdirectory(external)\nadd_subdirectory(vita3k)\nadd_subdirectory(tools/gen-modules)\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 10.6083984375,
          "content": "{\n  \"version\": 3,\n  \"cmakeMinimumRequired\": {\n    \"major\": 3,\n    \"minor\": 22,\n    \"patch\": 0\n  },\n  \"configurePresets\": [\n    {\n      \"name\": \"base\",\n      \"hidden\": true,\n      \"description\": \"Base hidden preset to set general options\",\n      \"binaryDir\": \"${sourceDir}/build/${presetName}\",\n      \"cacheVariables\": {\n        \"USE_DISCORD_RICH_PRESENCE\": true\n      }\n    },\n    {\n      \"name\": \"windows\",\n      \"inherits\": \"base\",\n      \"displayName\": \"Windows default\",\n      \"description\": \"Windows native build using default generator and default compiler\",\n      \"condition\": {\n        \"type\": \"equals\",\n        \"lhs\": \"${hostSystemName}\",\n        \"rhs\": \"Windows\"\n      }\n    },\n    {\n      \"name\": \"windows-vs2022\",\n      \"inherits\": \"windows\",\n      \"displayName\": \"Windows with Visual Studio 2022\",\n      \"description\": \"Windows native build using Visual Studio 2022 generator and default toolchain/compiler\",\n      \"generator\": \"Visual Studio 17 2022\",\n      \"architecture\": \"x64\"\n    },\n    {\n      \"name\": \"windows-vs2022-clang\",\n      \"inherits\": \"windows-vs2022\",\n      \"displayName\": \"Windows with Visual Studio 2022 and Clang\",\n      \"description\": \"Windows native build using Visual Studio 2022 generator and the ClangCL/LLVM toolchain\",\n      \"toolset\": \"ClangCL\"\n    },\n    {\n      \"name\": \"windows-ninja\",\n      \"inherits\": \"windows\",\n      \"displayName\": \"Windows with Ninja\",\n      \"description\": \"Windows native build using Ninja Multi-Config and default compiler\",\n      \"generator\": \"Ninja Multi-Config\"\n    },\n    {\n      \"name\": \"windows-ninja-clang\",\n      \"inherits\": \"windows-ninja\",\n      \"displayName\": \"Windows with Ninja and Clang\",\n      \"description\": \"Windows native build using Ninja Multi-Config and Clang compiler\",\n      \"cacheVariables\": {\n        \"CMAKE_C_COMPILER\": \"clang-cl\",\n        \"CMAKE_CXX_COMPILER\": \"clang-cl\"\n      }\n    },\n    {\n      \"name\": \"linux\",\n      \"inherits\": \"base\",\n      \"displayName\": \"Linux default\",\n      \"description\": \"Linux native build using default generator and default compiler\",\n      \"cacheVariables\": {\n        \"USE_DISCORD_RICH_PRESENCE\": false\n      },\n      \"condition\": {\n        \"type\": \"equals\",\n        \"lhs\": \"${hostSystemName}\",\n        \"rhs\": \"Linux\"\n      }\n    },\n    {\n      \"name\": \"linux-ninja\",\n      \"inherits\": \"linux\",\n      \"displayName\": \"Linux with Ninja\",\n      \"description\": \"Linux native build using Ninja Multi-Config generator and default compiler\",\n      \"generator\": \"Ninja Multi-Config\"\n    },\n    {\n      \"name\": \"linux-ninja-clang\",\n      \"inherits\": \"linux-ninja\",\n      \"displayName\": \"Linux with Ninja and Clang\",\n      \"description\": \"Linux native build using Ninja Multi-Config generator and Clang compiler\",\n      \"cacheVariables\": {\n        \"CMAKE_C_COMPILER\": \"clang\",\n        \"CMAKE_CXX_COMPILER\": \"clang++\"\n      },\n      \"environment\": {\n        \"LDFLAGS\": \"-fuse-ld=lld\"\n      }\n    },\n    {\n      \"name\": \"linux-ninja-clang-appimage\",\n      \"inherits\": \"linux-ninja-clang\",\n      \"displayName\": \"Linux AppImage with Ninja and Clang\",\n      \"description\": \"Linux AppImage build using Ninja Multi-Config generator and Clang compiler\",\n      \"cacheVariables\": {\n        \"CMAKE_INSTALL_PREFIX\": \"/usr\",\n        \"BUILD_APPIMAGE\": true\n      }\n    },\n    {\n      \"name\": \"linux-ninja-gnu\",\n      \"inherits\": \"linux-ninja\",\n      \"displayName\": \"Linux with Ninja and GNU GCC\",\n      \"description\": \"Linux native build using Ninja Multi-Config generator and GNU GCC compiler\",\n      \"cacheVariables\": {\n        \"CMAKE_C_COMPILER\": \"gcc\",\n        \"CMAKE_CXX_COMPILER\": \"g++\"\n      }\n    },\n    {\n      \"name\": \"macos\",\n      \"inherits\": \"base\",\n      \"displayName\": \"macOS default\",\n      \"description\": \"macOS native build using default generator and default compiler\",\n      \"condition\": {\n        \"type\": \"equals\",\n        \"lhs\": \"${hostSystemName}\",\n        \"rhs\": \"Darwin\"\n      }\n    },\n    {\n      \"name\": \"macos-ninja\",\n      \"inherits\": \"macos\",\n      \"displayName\": \"macOS with Ninja\",\n      \"description\": \"Linux native build using Ninja Multi-Config generator and default compiler\",\n      \"generator\": \"Ninja Multi-Config\"\n    },\n    {\n      \"name\": \"macos-xcode\",\n      \"inherits\": \"macos\",\n      \"displayName\": \"macOS with Xcode\",\n      \"description\": \"Linux native build using Xcode generator and default compiler\",\n      \"generator\": \"Xcode\"\n    }\n  ],\n  \"buildPresets\": [\n    {\n      \"name\": \"windows-vs2022-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"windows-vs2022\"\n    },\n    {\n      \"name\": \"windows-vs2022-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"windows-vs2022\"\n    },\n    {\n      \"name\": \"windows-vs2022-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"windows-vs2022\"\n    },\n    {\n      \"name\": \"windows-vs2022-clang-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"windows-vs2022-clang\"\n    },\n    {\n      \"name\": \"windows-vs2022-clang-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"windows-vs2022-clang\"\n    },\n    {\n      \"name\": \"windows-vs2022-clang-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"windows-vs2022-clang\"\n    },\n    {\n      \"name\": \"windows-ninja-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"windows-ninja\"\n    },\n    {\n      \"name\": \"windows-ninja-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"windows-ninja\"\n    },\n    {\n      \"name\": \"windows-ninja-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"windows-ninja\"\n    },\n    {\n      \"name\": \"windows-ninja-clang-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"windows-ninja-clang\"\n    },\n    {\n      \"name\": \"windows-ninja-clang-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"windows-ninja-clang\"\n    },\n    {\n      \"name\": \"windows-ninja-clang-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"windows-ninja-clang\"\n    },\n    {\n      \"name\": \"linux-ninja-clang-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"linux-ninja-clang\"\n    },\n    {\n      \"name\": \"linux-ninja-clang-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"linux-ninja-clang\"\n    },\n    {\n      \"name\": \"linux-ninja-clang-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"linux-ninja-clang\"\n    },\n    {\n      \"name\": \"linux-ninja-gnu-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"linux-ninja-gnu\"\n    },\n    {\n      \"name\": \"linux-ninja-gnu-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"linux-ninja-gnu\"\n    },\n    {\n      \"name\": \"linux-ninja-gnu-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"linux-ninja-gnu\"\n    },\n    {\n      \"name\": \"macos-ninja-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"macos-ninja\"\n    },\n    {\n      \"name\": \"macos-ninja-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"macos-ninja\"\n    },\n    {\n      \"name\": \"macos-ninja-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"macos-ninja\"\n    },\n    {\n      \"name\": \"macos-xcode-debug\",\n      \"displayName\": \"Debug\",\n      \"description\": \"Build with debugging information and no compiler optimizations\",\n      \"configuration\": \"Debug\",\n      \"configurePreset\": \"macos-xcode\"\n    },\n    {\n      \"name\": \"macos-xcode-relwithdebinfo\",\n      \"displayName\": \"Release with debugging information\",\n      \"description\": \"Build with compiler optimizations enabled and limited debugging information\",\n      \"configuration\": \"RelWithDebInfo\",\n      \"configurePreset\": \"macos-xcode\"\n    },\n    {\n      \"name\": \"macos-xcode-release\",\n      \"displayName\": \"Release\",\n      \"description\": \"Build with compiler optimizations enabled and no debugging information\",\n      \"configuration\": \"Release\",\n      \"configurePreset\": \"macos-xcode\"\n    }\n  ]\n}\n"
        },
        {
          "name": "COPYING.txt",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.810546875,
          "content": "# Vita3K\n\n[![C/C++ CI](https://github.com/Vita3K/Vita3K/actions/workflows/c-cpp.yml/badge.svg)](https://github.com/Vita3K/Vita3K/actions/workflows/c-cpp.yml)\n[![Vita3K discord server](https://img.shields.io/discord/408916678911459329?color=5865F2&label=Vita3K%20&logo=discord&logoColor=white)](https://discord.gg/6aGwQzh)\n\n## Introduction\n\nVita3K is an experimental PlayStation Vita emulator for Windows, Linux, macOS and Android.\n\n* [Website](https://vita3k.org/) (information for users)\n* [Wiki](https://github.com/Vita3K/Vita3K/wiki) (information for developers)\n* [Discord server](https://discord.gg/MaWhJVH) (recommended)\n\n## Compatibility\n\nThe emulator currently runs most homebrew programs and some commercial games.\n\n- [Homebrew compatibility page](https://vita3k.org/compatibility-homebrew.html)\n- [Commercial compatibility page](https://vita3k.org/compatibility.html)\n\n## Gallery\n\n|               **Persona 4 Golden** by Atlus                   |                     **A Rose in the Twilight** by Nippon Ichi Software                         |\n| :-----------------------------------------------------------: | :--------------------------------------------------------------------------------------------: |\n| ![Persona 4 Golden screenshot](./_readme/screenshots/P4G.png) | ![A Rose in the Twilight screenshot](./_readme/screenshots/A%20Rose%20in%20the%20Twilight.png) |\n\n|                  **Alone with You** by Benjamin Rivers                     |                 **VA-11 HALL-A** by Sukeban Games                    |\n| :------------------------------------------------------------------------: | :------------------------------------------------------------------: |\n| ![Alone with You screenshot](./_readme/screenshots/Alone%20With%20You.png) | ![VA-11 HALL-A screenshot](./_readme/screenshots/VA-11%20HALL-A.png) |\n\n|              **Fruit Ninja** by Halfbrick Studios                  |                **Jetpack Joyride** by Halfbrick Studios                    |\n| :----------------------------------------------------------------: | :------------------------------------------------------------------------: |\n| ![Fruit Ninja Screenshot](./_readme/screenshots/Fruit%20Ninja.png) | ![Jetpack Joyride Screenshot](./_readme/screenshots/Jetpack%20Joyride.png) |\n\n## License\n\nVita3K is licensed under the **GPLv2** license. This is largely dictated by external dependencies, most notably Unicorn.\n\n## Downloads\n\nYou can download the latest builds from [here](https://github.com/Vita3K/Vita3K/releases/tag/continuous).\n\n* Windows\n  * Requirements:\n    * [Microsoft Visual C++ 2015-2022 Redistributable](https://aka.ms/vs/17/release/vc_redist.x64.exe)\n* Linux\n  * Arch based:\n    * [vita3k-bin](https://aur.archlinux.org/packages/vita3k-bin)<sup><small>AUR</small></sup>\n    * [vita3k-git](https://aur.archlinux.org/packages/vita3k-git)<sup><small>AUR</small></sup>\n  * Requirements:\n    * xdg-desktop-portal\n* [Android](https://github.com/Vita3K/Vita3K-Android/releases/)\n    * [Adreno drivers](https://github.com/K11MCH1/AdrenoToolsDrivers/releases/)\n* Others\n  * [Download Artifact](https://github.com/Vita3K/Vita3K/actions?query=event%3Apush+is%3Asuccess+branch%3Amaster)\n  * [Old builds](https://github.com/Vita3K/Vita3K-builds/releases)\n\n## Building\n\nPlease see [`building.md`](./building.md).\n\n## Running\nCheck our [quickstart guide](https://vita3k.org/quickstart) to make sure your computer meets the minimum requirements to run Vita3K.  \nDon't forget to have your graphics driver up to date and to install the [Visual C++ 2015-2022 Redistributable](https://aka.ms/vs/17/release/VC_redist.x64.exe) if you are a Windows user.  \n\n## Bugs and issues\nThe project is in an early stage, so please be mindful when opening new issues. Expect crashes, glitches, low compatibility and poor performance.\n\n## Thanks\nThanks go out to people who offered advice or otherwise made this project possible, such as Davee, korruptor, Rinnegatamante, ScHlAuChi, Simon Kilroy, TheFlow, xerpi, xyz, Yifan Lu and many others.\n\n## Donations\n[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/vita3k)\n<br>\nThank you to the supporters and to all those who support us on our [ko-fi](https://ko-fi.com/vita3K).\n* Among them, those who subscribed to the Nibble Tier and upper: **j0hnnybrav0, Mored4u, TacoOblivion, Undeadbob and uplush**\n\n## Note\nThe purpose of this emulator is not to enable illegal activity. You can dump games from a Vita by using [NoNpDrm](https://github.com/TheOfficialFloW/NoNpDrm) or [FAGDec](https://github.com/CelesteBlue-dev/PSVita-RE-tools/tree/master/FAGDec/build). You can get homebrew programs from [VitaDB](https://www.rinnegatamante.eu/vitadb/#/).\n\nPlayStation, PlayStation Vita and PlayStation Network are all registered trademarks of Sony Interactive Entertainment Inc. This emulator is not related to or endorsed by Sony, or derived from confidential materials belonging to Sony.\n"
        },
        {
          "name": "_building",
          "type": "tree",
          "content": null
        },
        {
          "name": "_readme",
          "type": "tree",
          "content": null
        },
        {
          "name": "appimage",
          "type": "tree",
          "content": null
        },
        {
          "name": "building.md",
          "type": "blob",
          "size": 6.5732421875,
          "content": "# Build Vita3K\n\nVita3K uses CMake for its project configuration and generation. In theory, it should be compatible with any project generator supported by CMake, C++17 compatible compiler and an IDE with CMake support. \n\nThe project provides [CMake presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) to allow configuring and building Vita3K without having to deal with adding the needed arguments through a command-line interface or using the user interface of your IDE. As long as your IDE or code editor supports CMake, the software should immediately detect the presets and let you choose which configuration settings you want to use to generate the program. Reference on how to use CMake presets with various IDEs and code editors can be found here:\n\n- [Visual Studio](https://docs.microsoft.com/en-us/cpp/build/cmake-presets-vs)\n- [Visual Studio Code](https://github.com/microsoft/vscode-cmake-tools/blob/main/docs/cmake-presets.md)\n- [CLion](https://www.jetbrains.com/help/clion/cmake-presets.html): CMake presets in CLion are imported as CLion's [CMake profiles](https://www.jetbrains.com/help/clion/cmake-profile.html).\n\nAll presets are named after `<target_os>-<project_generator>-<compiler>`, are automatically hidden and shown depending on your host OS and generate a binary folder of path `<source_directory>/build/<preset_name>`. For command-line users, run `cmake --list-presets` on the top directory of the repository to see which presets are available to you. For presets without `<project_generator>` and/or `<compiler>`, the project generator and/or the compiler haven't been explicitly specified in the preset to let CMake fallback to the platform defaults.\n\nIf you still want to use presets but none of them works for your setup, you can make new ones by creating a `CMakeUserPresets.json` file and you can check the specification [here](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html). Git will ignore this file.\n\n**Note: Vita3K doesn't support compilation for 32-bit/x86/i386 platforms.**\n\nFor convenience, the following building instructions are given as examples:\n\n## Windows\n\n### Visual Studio 2022\n- Install Visual Studio 2022 and choose to install `Desktop development with C++`. You will get compiler and `cmake` required for building.\n\n  Example for Visual Studio 2019:\n\n  ![Required tools for VS 2022](https://i.imgur.com/bkY15Oh.png)\n\n- Install `git` to `clone` the project. Download and install `git` from [here](https://git-scm.com).\n\n- Clone this repo.\n\n  ```cmd\n  git clone --recursive https://github.com/Vita3K/Vita3K\n  cd Vita3K\n  ```\n\n- Run Visual Studio 2022. On the project selection window open the local clone of the repository as a folder. Thanks to the integration between Visual Studio and CMake, Visual Studio will automatically detect the repository as a CMake project.\n- Wait for all components for Visual Studio to be loaded. At the top of the window, there should be three new menus that allow you to select the target (specific to Visual Studio), a CMake configure preset and a CMake build preset (if available). Recommended preset for Visual Studio 2022 is *Windows with Visual Studio 2022*.\n\nFrom there, the project will be ready to build right from the Visual Studio UI.\n\nIf you aren't satisfied with the way the Visual Studio integrates CMake projects and you would like to just use regular Visual Studio solution files (`.sln`), you can close Visual Studio and then open the solution file found in `build/<preset_name>/`.\n\n\n### Build using terminal\n-  Install:\n   -  [Git](https://git-scm.com)\n   -  [CMake](https://cmake.org/download/)\n   -  Either the [Build Tools for Visual Studio 2022](https://aka.ms/vs/17/release/vs_BuildTools.exe) or Visual Studio 2022 with the ` Desktop development with C++` workload.\n- On the Start Menu, open the `x64 Native Tools Command Prompt for Visual Studio 2022`.\n  <p align=\"center\">\n    <img src=\"./_building/vs-cmd-prompt.png\">\n  </p>\n\n- Clone the repository:\n  ```cmd\n  git clone --recursive https://github.com/Vita3K/Vita3K\n  cd Vita3K\n  ```\n\n- Generate the project:\n  ```cmd\n  cmake --preset windows-vs2022\n  ```\n  The line above will generate a Visual Studio 2022 project inside a folder called `build/windows-vs2022`.\n\n- Build the project:\n  ```cmd\n  cmake --build build/windows-vs2022\n  ```\n\n## macOS (Xcode)\n\n- Install Xcode at App Store.\n\n- Install [`brew`](https://brew.sh).\n\n- Install dependencies with `brew`.\n\n  ```sh\n  brew install git cmake molten-vk openssl\n  ```\n\n- Clone this repo.\n\n  ```sh\n  git clone --recursive https://github.com/Vita3K/Vita3K\n  cd Vita3K\n  ```\n\n- Generate Xcode project.\n\n  ```\n  cmake --preset macos-xcode\n  ```\n  This example will generate a Xcode project inside a folder called `build/macos-xcode`.\n\n- Open Xcode project `vita3k.xcodeproj` generated in `build/macos-xcode` directory.\n\n- When prompted to create schemes, create one for the `vita3k` target only. The project builds many targets, so it will make your life easier if you create schemes as needed.\n\n- Build the project using the Xcode UI. If needed, the build process can be invoked as well the same way as with the other platforms using a terminal:\n  ```sh\n  cmake --build build/macos-xcode\n  ```\n\n## Linux\n\n- Install dependencies.\n\n### Ubuntu/Debian\n\n  ```sh\n  sudo apt install git cmake ninja-build libsdl2-dev pkg-config libgtk-3-dev clang lld xdg-desktop-portal openssl libssl-dev\n  ```\n\n### Fedora\n\n  ```sh\n  sudo dnf install git cmake ninja-build SDL2-devel pkg-config gtk3-devel clang lld xdg-desktop-portal openssl openssl-devel libstdc++-static\n  ```\n\nNote: The CMake preset `linux-ninja-clang` makes use of the LLD linker, which will need to be installed in your system along with Clang.\n\n- Clone this repo.\n\n  ```sh\n  git clone --recursive https://github.com/Vita3K/Vita3K\n  cd Vita3K\n  ```\n\n- Generate the project.\n\n  ```sh\n  cmake --preset linux-ninja-clang\n  ```\n  This example will generate a Ninja Multi-Config (`ninja-build`) project instead of a Make (`make`, the default project generator for Linux) one inside the folder `build/linux-ninja-clang`.\n\n- Build the project:\n  ```sh\n  cmake --build build/linux-ninja-clang\n  ```\n\n## Note\n\n- After cloning or checking out a branch, you should always update submodules.\n  ```sh\n  git submodule update --init --recursive\n  ```\n\n- If Boost failed to build, you can use the system Boost package (Linux and macOS only).\n\n  ```sh\n  brew install boost # for macOS\n  sudo apt install libboost-filesystem-dev libboost-program-options-dev libboost-system-dev # for Ubuntu/Debian\n  ```\n\n  If needed, CMake options `VITA3K_FORCE_CUSTOM_BOOST` and `VITA3K_FORCE_SYSTEM_BOOST` can be set to change the way the CMake project looks for Boost.\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.bat",
          "type": "blob",
          "size": 0.154296875,
          "content": "@echo off\ncd vita3k\nfor /f %%f in ('dir *.cpp *.h /b/s') do clang-format -i %%f\ncd ..\\tools\nfor /f %%f in ('dir *.cpp *.h /b/s') do clang-format -i %%f\ncd ..\n"
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 0.12890625,
          "content": "#!/usr/bin/env bash\nset -ex\n\nfind vita3k tools/gen-modules tools/native-tool \\( -name *.cpp -o -name *.h \\) | xargs clang-format -i\n"
        },
        {
          "name": "gen-linux.sh",
          "type": "blob",
          "size": 0.0947265625,
          "content": "#!/usr/bin/env bash\nset -ex\n\n# Generate project files for Ninja\ncmake --preset linux-ninja-clang\n"
        },
        {
          "name": "gen-windows.bat",
          "type": "blob",
          "size": 0.111328125,
          "content": "@echo off\n\nREM Generate project files for your last Visual Studio version you have\ncall cmake -S . -B build\npause\n"
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vita3k",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}