{
  "metadata": {
    "timestamp": 1736565733768,
    "page": 648,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "unum-cloud/usearch",
      "stars": 2388,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.1982421875,
          "content": "Language: Cpp\nBasedOnStyle:  LLVM\nIndentWidth: 4\nTabWidth: 4\nNamespaceIndentation: None\nColumnLimit: 120\nReflowComments: true\nUseTab: Never\nPointerAlignment: Left\nAllowShortCaseLabelsOnASingleLine: True\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.28515625,
          "content": "Checks: '*,\n         -altera-id-dependent-backward-branch,\n         -altera-struct-pack-align,\n         -altera-unroll-loops,\n         -android-cloexec-fopen,\n         -bugprone-easily-swappable-parameters,\n         -cert-err58-cpp,\n         -concurrency-mt-unsafe,\n         -cppcoreguidelines-avoid-const-or-ref-data-members,\n         -cppcoreguidelines-avoid-do-while,\n         -cppcoreguidelines-avoid-goto,\n         -cppcoreguidelines-avoid-magic-numbers,\n         -cppcoreguidelines-avoid-non-const-global-variables,\n         -cppcoreguidelines-macro-usage,\n         -cppcoreguidelines-pro-bounds-array-to-pointer-decay,\n         -cppcoreguidelines-pro-bounds-constant-array-index,\n         -cppcoreguidelines-pro-bounds-pointer-arithmetic,\n         -cppcoreguidelines-pro-type-reinterpret-cast,\n         -cppcoreguidelines-pro-type-union-access,\n         -cppcoreguidelines-rvalue-reference-param-not-moved,\n         -cppcoreguidelines-virtual-class-destructor,\n         -fuchsia-default-arguments-calls,\n         -fuchsia-default-arguments-declarations,\n         -fuchsia-overloaded-operator,\n         -google-explicit-constructor,\n         -google-readability-function-size,\n         -google-runtime-int,\n         -google-runtime-references,\n         -hicpp-avoid-goto,\n         -hicpp-explicit-conversions,\n         -hicpp-function-size,\n         -hicpp-no-array-decay,\n         -hicpp-no-assembler,\n         -hicpp-signed-bitwise,\n         -hicpp-uppercase-literal-suffix,\n         -llvm-header-guard,\n         -llvm-include-order,\n         -llvmlibc-*,\n         -misc-use-anonymous-namespace,\n         -misc-confusable-identifiers,\n         -misc-no-recursion,\n         -misc-non-private-member-variables-in-classes,\n         -modernize-concat-nested-namespaces,\n         -modernize-type-traits,\n         -modernize-use-nodiscard,\n         -modernize-use-trailing-return-type,\n         -readability-function-cognitive-complexity,\n         -readability-function-size,\n         -readability-identifier-length,\n         -readability-magic-numbers,\n         -readability-redundant-access-specifiers,\n         -readability-simplify-boolean-expr,\n         -readability-uppercase-literal-suffix'\n\nCheckOptions:\n  - key: hicpp-special-member-functions.AllowSoleDefaultDtor\n    value: 1\n\nWarningsAsErrors: '*'\nHeaderFilterRegex: '.*hpp$'\n"
        },
        {
          "name": ".cmake-format.py",
          "type": "blob",
          "size": 0.6015625,
          "content": "# -----------------------------\n# Options effecting formatting.\n# -----------------------------\nwith section(\"format\"):\n    # How wide to allow formatted cmake files\n    line_width = 120\n\n    # How many spaces to tab for indent\n    tab_size = 4\n\n    # If true, separate flow control names from their parentheses with a space\n    separate_ctrl_name_with_space = True\n\n    # If true, separate function names from parentheses with a space\n    separate_fn_name_with_space = False\n\n    # If a statement is wrapped to more than one line, than dangle the closing\n    # parenthesis on its own line.\n    dangle_parens = True\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.880859375,
          "content": "# Ignore all files without an extension\n*\n!/**/\n!*.*\n\n# Temporary files\n.DS_Store\n*.fbin\n*.ibin\ndatasets\nbin\n*.usearch\n.cache\n\n# C++ builds\nbuild\nbuild_release\nbuild_debug\n_deps\nCMakeCache.txt\nCMakeFiles\ncmake_install.cmake\n\n# Profiling with GProf and `perf` on Linux\ngmon.out\nperf.data\n\n# Python wrappers\n__pycache__\n*.egg-info\ndist/\nwheelhouse/\n\n# Python Environments\nvenv/\n\n# JS wrappers\npackage-lock.json\nnode_modules/\n\n# Rust builds\nCargo.lock\ntarget/\n\n# Java bindings\n.gradle\n*.class\n\n# ObjC and Swift\n.build\n.swiftpm\n\n# C# builds\ncsharp/**/[Bb]in/\ncsharp/**/[Oo]bj/\ncsharp/lib\ncsharp/packages\n\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Allow golang go.mod\n!go.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.208984375,
          "content": "#\n# https://help.github.com/articles/dealing-with-line-endings/\n#\n# Linux start script should use lf\n/gradlew        text eol=lf\n\n# These are Windows script files and should use crlf\n*.bat           text eol=crlf\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.98828125,
          "content": "# Ignore all files without an extension\n\n# Temporary files\n.DS_Store\n*.fbin\n*.ibin\ndatasets\nbin\n*.usearch\n.cache\n\n# C++ builds\n/build\n/build_release\n/build_debug\n/build_relwithdebinfo\n/build_profile\n/build_artifacts\n_deps\nCMakeCache.txt\nCMakeFiles\ncmake_install.cmake\n\n# Profiling with GProf and `perf` on Linux\ngmon.out\nperf.data\n\n# Python wrappers\n__pycache__\n*.egg-info\ndist/\nwheelhouse/\n\n# Python Environments\nvenv/\n\n# JS wrappers\nnode_modules/\njavascript/dist/\nprebuilds/\n\n\n# Wasm\n\nwasi-sdk-*\n\n# Rust builds\nCargo.lock\ntarget/\n\n# Java bindings\n.gradle\n*.class\n\n# ObjC and Swift\n.build\n.swiftpm\n\n# Golang builds\ngolang/usearch.h\n\n# C# builds\ncsharp/**/[Bb]in/\ncsharp/**/[Oo]bj/\ncsharp/lib\ncsharp/packages\n\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Allow golang go.mod\n!go.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2509765625,
          "content": "[submodule \"simsimd\"]\n\tpath = simsimd\n\turl = https://github.com/ashvardanian/simsimd\n[submodule \"fp16\"]\n\tpath = fp16\n\turl = https://github.com/maratyszcza/fp16\n[submodule \"stringzilla\"]\n\tpath = stringzilla\n\turl = https://github.com/ashvardanian/stringzilla\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.1171875,
          "content": "node_modules/\n.vscode/\nbuild/\ncsharp/\ngolang/\njava/\nobjc/\nrust/\nswift/\nwolfram/\npython/\ndocs/\nwasm/\nPackage.swift\n_deps/"
        },
        {
          "name": ".releaserc",
          "type": "blob",
          "size": 2.59375,
          "content": "{\n    \"branches\": [\n        \"main\"\n    ],\n    \"debug\": true,\n    \"ci\": true,\n    \"dryRun\": false,\n    \"plugins\": [\n        [\n            \"@semantic-release/commit-analyzer\",\n            {\n                \"preset\": \"eslint\",\n                \"releaseRules\": [\n                    {\n                        \"tag\": \"Break\",\n                        \"release\": \"major\"\n                    },\n                    {\n                        \"tag\": \"Add\",\n                        \"release\": \"minor\"\n                    },\n                    {\n                        \"tag\": \"Improve\",\n                        \"release\": \"patch\"\n                    },\n                    {\n                        \"tag\": \"Make\",\n                        \"release\": \"patch\"\n                    },\n                    {\n                        \"tag\": \"Refactor\",\n                        \"release\": false\n                    }\n                ]\n            }\n        ],\n        [\n            \"@semantic-release/release-notes-generator\",\n            {\n                \"preset\": \"eslint\",\n                \"releaseRules\": [\n                    {\n                        \"tag\": \"Break\",\n                        \"release\": \"major\"\n                    },\n                    {\n                        \"tag\": \"Add\",\n                        \"release\": \"minor\"\n                    },\n                    {\n                        \"tag\": \"Improve\",\n                        \"release\": \"patch\"\n                    },\n                    {\n                        \"tag\": \"Make\",\n                        \"release\": \"patch\"\n                    },\n                    {\n                        \"tag\": \"Refactor\",\n                        \"release\": false\n                    }\n                ]\n            }\n        ],\n        \"@semantic-release/github\",\n        [\n            \"@semantic-release/exec\",\n            {\n                \"prepareCmd\": \"bash .github/workflows/update_version.sh '${nextRelease.version}'\"\n            }\n        ],\n        [\n            \"@semantic-release/git\",\n            {\n                \"assets\": [\n                    \"VERSION\",\n                    \"README.md\",\n                    \"CMakeLists.txt\",\n                    \"conanfile.py\",\n                    \"package.json\",\n                    \"Cargo.toml\",\n                    \"Cargo.lock\",\n                    \"wasmer.toml\",\n                    \"./include/usearch/index.hpp\",\n                    \"./csharp/nuget/nuget-package.props\",\n                    \"CITATION.cff\"\n                ],\n                \"message\": \"Build: Released ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}\"\n            }\n        ]\n    ]\n}"
        },
        {
          "name": ".swift-format",
          "type": "blob",
          "size": 0.3388671875,
          "content": "{\n    \"version\": 1,\n    \"lineLength\": 120,\n    \"indentation\": {\n        \"spaces\": 4\n    },\n    \"maximumBlankLines\": 1,\n    \"respectsExistingLineBreaks\": true,\n    \"lineBreakBeforeControlFlowKeywords\": true,\n    \"lineBreakBeforeEachArgument\": true,\n    \"multiElementCollectionTrailingCommas\": true,\n    \"spacesAroundRangeFormationOperators\": true\n}"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "BENCHMARKS.md",
          "type": "blob",
          "size": 11.45703125,
          "content": "# Benchmarking USearch\n\n## Hyper-parameters\n\nAll major HNSW implementation share an identical list of hyper-parameters:\n\n- connectivity (often called `M`),\n- expansion on additions (often called `efConstruction`),\n- expansion on search (often called `ef`).\n\nThe default values vary drastically.\n\n| Library   | Connectivity | EF @ A | EF @ S |\n| :-------- | -----------: | -----: | -----: |\n| `hnswlib` |           16 |    200 |     10 |\n| `FAISS`   |           32 |     40 |     16 |\n| `USearch` |           16 |    128 |     64 |\n\nBelow are the performance numbers for a benchmark running on the 64 cores of AWS `c7g.metal` \"Graviton 3\"-based instances.\nThe main columns are:\n\n- __Add__: Number of insertion Queries Per Second.\n- __Search__: Number search Queries Per Second.\n- __Recall @1__: How often does approximate search yield the exact best match?\n\n### Different \"connectivity\"\n\n| Vectors    | Connectivity | EF @ A | EF @ S | __Add__, QPS | __Search__, QPS | __Recall @1__ |\n| :--------- | -----------: | -----: | -----: | -----------: | --------------: | ------------: |\n| `f32` x256 |           16 |    128 |     64 |       75'640 |         131'654 |         99.3% |\n| `f32` x256 |           12 |    128 |     64 |       81'747 |         149'728 |         99.0% |\n| `f32` x256 |           32 |    128 |     64 |       64'368 |         104'050 |         99.4% |\n\n### Different \"expansion factors\"\n\n| Vectors    | Connectivity | EF @ A | EF @ S | __Add__, QPS | __Search__, QPS | __Recall @1__ |\n| :--------- | -----------: | -----: | -----: | -----------: | --------------: | ------------: |\n| `f32` x256 |           16 |    128 |     64 |       75'640 |         131'654 |         99.3% |\n| `f32` x256 |           16 |     64 |     32 |      128'644 |         228'422 |         97.2% |\n| `f32` x256 |           16 |    256 |    128 |       39'981 |          69'065 |         99.2% |\n\n### Different vectors \"quantization\"\n\n| Vectors      | Connectivity | EF @ A | EF @ S | __Add__, QPS | __Search__, QPS | __Recall @1__ |\n| :----------- | -----------: | -----: | -----: | -----------: | --------------: | ------------: |\n| `f32` x256   |           16 |    128 |     64 |       87'995 |         171'856 |         99.1% |\n| `f16` x256   |           16 |    128 |     64 |       87'270 |         153'788 |         98.4% |\n| `f16` x256 ✳️ |           16 |    128 |     64 |       71'454 |         132'673 |         98.4% |\n| `i8` x256    |           16 |    128 |     64 |      115'923 |         274'653 |         98.9% |\n\nAs seen on the chart, for `f16` quantization, performance may differ depending on native hardware support for that numeric type.\nAlso worth noting, 8-bit quantization results in almost no quantization loss and may perform better than `f16`.\n\n## Utilities\n\nWithin this repository you will find two commonly used utilities:\n\n- `cpp/bench.cpp` the produces the `bench_cpp` binary for broad USearch benchmarks.\n- `python/bench.py` and `python/bench.ipynb` for interactive charts against FAISS.\n\n### C++ Benchmarking Utilities\n\nTo achieve best highest results we suggest compiling locally for the target architecture.\n\n```sh\ngit submodule update --init --recursive\ncmake -USEARCH_BUILD_BENCH_CPP=1 -DUSEARCH_BUILD_TEST_C=1 -DUSEARCH_USE_OPENMP=1 -DUSEARCH_USE_SIMSIMD=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo -B build_profile\ncmake --build build_profile --config RelWithDebInfo -j\nbuild_profile/bench_cpp --help\n```\n\nWhich would print the following instructions.\n\n```txt\nSYNOPSIS\n        build_profile/bench_cpp [--vectors <path>] [--queries <path>] [--neighbors <path>] [-o\n                                <path>] [-b] [-j <integer>] [-c <integer>] [--expansion-add\n                                <integer>] [--expansion-search <integer>] [--rows-skip <integer>]\n                                [--rows-take <integer>] [-bf16|-f16|-i8|-b1]\n                                [--ip|--l2sq|--cos|--hamming|--tanimoto|--sorensen|--haversine] [-h]\n\nOPTIONS\n        --vectors <path>\n                    .[fhbd]bin file path to construct the index\n\n        --queries <path>\n                    .[fhbd]bin file path to query the index\n\n        --neighbors <path>\n                    .ibin file path with ground truth\n\n        -o, --output <path>\n                    .usearch output file path\n\n        -b, --big   Will switch to uint40_t for neighbors lists with over 4B entries\n        -j, --threads <integer>\n                    Uses all available cores by default\n\n        -c, --connectivity <integer>\n                    Index granularity\n\n        --expansion-add <integer>\n                    Affects indexing depth\n\n        --expansion-search <integer>\n                    Affects search depth\n\n        --rows-skip <integer>\n                    Number of vectors to skip\n\n        --rows-take <integer>\n                    Number of vectors to take\n\n        -bf16, --bf16quant\n                    Enable `bf16_t` quantization\n\n        -f16, --f16quant\n                    Enable `f16_t` quantization\n\n        -i8, --i8quant\n                    Enable `i8_t` quantization\n\n        -b1, --b1quant\n                    Enable `b1x8_t` quantization\n\n        --ip        Choose Inner Product metric\n        --l2sq      Choose L2 Euclidean metric\n        --cos       Choose Angular metric\n        --hamming   Choose Hamming metric\n        --tanimoto  Choose Tanimoto metric\n        --sorensen  Choose Sorensen metric\n        --haversine Choose Haversine metric\n        -h, --help  Print this help information on this tool and exit\n```\n\nHere is an example of running the C++ benchmark:\n\n```sh\nbuild_profile/bench_cpp \\\n    --vectors datasets/wiki_1M/base.1M.fbin \\\n    --queries datasets/wiki_1M/query.public.100K.fbin \\\n    --neighbors datasets/wiki_1M/groundtruth.public.100K.ibin\n\nbuild_profile/bench_cpp \\\n    --vectors datasets/t2i_1B/base.1B.fbin \\\n    --queries datasets/t2i_1B/query.public.100K.fbin \\\n    --neighbors datasets/t2i_1B/groundtruth.public.100K.ibin \\\n    --output datasets/t2i_1B/index.usearch \\\n    --cos\n```\n\n> Optional parameters include `connectivity`, `expansion_add`, `expansion_search`.\n\nFor Python, jut open the Jupyter Notebook and start playing around.\n\n### Python Benchmarking Utilities\n\nSeveral benchmarking suites are available for Python: approximate search, exact search, and clustering.\n\n```sh\npython/scripts/bench.py --help\npython/scripts/bench_exact.py --help\npython/scripts/bench_cluster.py --help\n```\n\n## Datasets\n\nBigANN benchmark is a good starting point, if you are searching for large collections of high-dimensional vectors.\nThose often come with precomputed ground-truth neighbors, which is handy for recall evaluation.\n\n| Dataset                                    | Scalar Type | Dimensions | Metric |   Size    |\n| :----------------------------------------- | :---------: | :--------: | :----: | :-------: |\n| [Unum UForm Creative Captions][unum-cc-3m] |   float32   |    256     |   IP   |   3 GB    |\n| [Unum UForm Wiki][unum-wiki-1m]            |   float32   |    256     |   IP   |   1 GB    |\n| [Yandex Text-to-Image Sample][unum-t2i]    |   float32   |    200     |  Cos   |   1 GB    |\n|                                            |             |            |        |           |\n| [Microsoft SPACEV][spacev]                 |    int8     |    100     |   L2   |   93 GB   |\n| [Microsoft Turing-ANNS][turing]            |   float32   |    100     |   L2   |  373 GB   |\n| [Yandex Deep1B][deep]                      |   float32   |     96     |   L2   |  358 GB   |\n| [Yandex Text-to-Image][t2i]                |   float32   |    200     |  Cos   |  750 GB   |\n|                                            |             |            |        |           |\n| [ViT-L/12 LAION][laion]                    |   float32   |    2048    |  Cos   | 2 - 10 TB |\n\nLuckily, smaller samples of those datasets are available.\n\n[unum-cc-3m]: https://huggingface.co/datasets/unum-cloud/ann-cc-3m\n[unum-wiki-1m]: https://huggingface.co/datasets/unum-cloud/ann-wiki-1m\n[unum-t2i]: https://huggingface.co/datasets/unum-cloud/ann-t2i-1m\n[spacev]: https://github.com/microsoft/SPTAG/tree/main/datasets/SPACEV1B\n[turing]: https://learning2hash.github.io/publications/microsoftturinganns1B/\n[t2i]: https://research.yandex.com/blog/benchmarks-for-billion-scale-similarity-search\n[deep]: https://research.yandex.com/blog/benchmarks-for-billion-scale-similarity-search\n[laion]: https://laion.ai/blog/laion-5b/#download-the-data\n\n### Unum UForm Wiki\n\n```sh\nmkdir -p datasets/wiki_1M/ && \\\n    wget -nc https://huggingface.co/datasets/unum-cloud/ann-wiki-1m/resolve/main/base.1M.fbin -P datasets/wiki_1M/ &&\n    wget -nc https://huggingface.co/datasets/unum-cloud/ann-wiki-1m/resolve/main/query.public.100K.fbin -P datasets/wiki_1M/ &&\n    wget -nc https://huggingface.co/datasets/unum-cloud/ann-wiki-1m/resolve/main/groundtruth.public.100K.ibin -P datasets/wiki_1M/\n```\n\n### Yandex Text-to-Image\n\n```sh\nmkdir -p datasets/t2i_1B/ && \\\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/T2I/base.1B.fbin -P datasets/t2i_1B/ &&\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/T2I/base.1M.fbin -P datasets/t2i_1B/ &&\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/T2I/query.public.100K.fbin -P datasets/t2i_1B/ &&\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/T2I/groundtruth.public.100K.ibin -P datasets/t2i_1B/\n```\n\n### Yandex Deep1B\n\n```sh\nmkdir -p datasets/deep_1B/ && \\\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/DEEP/base.1B.fbin -P datasets/deep_1B/ &&\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/DEEP/base.10M.fbin -P datasets/deep_1B/ &&\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/DEEP/query.public.10K.fbin -P datasets/deep_1B/ &&\n    wget -nc https://storage.yandexcloud.net/yandex-research/ann-datasets/DEEP/groundtruth.public.10K.ibin -P datasets/deep_1B/\n```\n\n### Arxiv with E5\n\n```sh\nmkdir -p datasets/arxiv_2M/ && \\\n    wget -nc https://huggingface.co/datasets/unum-cloud/ann-arxiv-2m/resolve/main/abstract.e5-base-v2.fbin -P datasets/arxiv_2M/ &&\n    wget -nc https://huggingface.co/datasets/unum-cloud/ann-arxiv-2m/resolve/main/title.e5-base-v2.fbin -P datasets/arxiv_2M/\n```\n\n## Profiling\n\nWith `perf`:\n\n```sh\n# Pass environment variables with `-E`, and `-d` for details\nsudo -E perf stat -d build_profile/bench_cpp ...\nsudo -E perf mem -d build_profile/bench_cpp ...\n# Sample on-CPU functions for the specified command, at 1 Kilo Hertz:\nsudo -E perf record -F 1000 build_profile/bench_cpp ...\nperf record -d -e arm_spe// -- build_profile/bench_cpp ..\n```\n\n### Caches\n\n```sh\nsudo perf stat -e 'faults,dTLB-loads,dTLB-load-misses,cache-misses,cache-references' build_profile/bench_cpp ...\n```\n\nTypical output on a 1M vectors dataset is:\n\n```txt\n            255426      faults                                                      \n      305988813388      dTLB-loads                                                  \n        8845723783      dTLB-load-misses          #    2.89% of all dTLB cache accesses\n       20094264206      cache-misses              #    6.567 % of all cache refs    \n      305988812745      cache-references                                            \n\n       8.285148010 seconds time elapsed\n\n     500.705967000 seconds user\n       1.371118000 seconds sys\n```\n\nIf you notice problems and the stalls are closer to 90%, it might be a good reason to consider enabling Huge Pages and tuning allocations alignment.\nTo enable Huge Pages:\n\n```sh\nsudo cat /proc/sys/vm/nr_hugepages\nsudo sysctl -w vm.nr_hugepages=2048\nsudo reboot\nsudo cat /proc/sys/vm/nr_hugepages\n```\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.3330078125,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: \"Vardanian\"\n    given-names: \"Ash\"\n    orcid: \"https://orcid.org/0000-0002-4882-1815\"\ntitle: \"USearch by Unum Cloud\"\nversion: 2.16.10\ndoi: 10.5281/zenodo.7949416\ndate-released: 2023-10-22\nurl: \"https://github.com/unum-cloud/usearch\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 14.625,
          "content": "# This CMake file is heavily inspired by following `usearch` CMake:\n# https://github.com/nlohmann/json/blob/develop/CMakeLists.txt\ncmake_minimum_required(VERSION 3.1)\nproject(\n    usearch\n    VERSION 2.16.10\n    LANGUAGES C CXX\n    DESCRIPTION \"Smaller & Faster Single-File Vector Search Engine from Unum\"\n    HOMEPAGE_URL \"https://github.com/unum-cloud/usearch\"\n)\n\n# Determine if USearch is built as a subproject (using `add_subdirectory`) or if it is the main project\nset(USEARCH_IS_MAIN_PROJECT OFF)\n\nif (CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    set(USEARCH_IS_MAIN_PROJECT ON)\nendif ()\n\n# Allow CMake 3.13+ to override options when using FetchContent / add_subdirectory\nif (POLICY CMP0077)\n    cmake_policy(SET CMP0077 NEW)\nendif ()\n\n# Options\noption(USEARCH_INSTALL \"Install CMake targets\" OFF)\n\noption(USEARCH_USE_OPENMP \"Use OpenMP for a thread pool\" OFF)\noption(USEARCH_USE_SIMSIMD \"Use SimSIMD hardware-accelerated metrics\" OFF)\noption(USEARCH_USE_JEMALLOC \"Use JeMalloc for faster memory allocations\" OFF)\noption(USEARCH_USE_FP16LIB \"Use software emulation for half-precision types\" ON)\n\noption(USEARCH_BUILD_TEST_CPP \"Compile a native unit test in C++\" ${USEARCH_IS_MAIN_PROJECT})\noption(USEARCH_BUILD_BENCH_CPP \"Compile a native benchmark in C++\" ${USEARCH_IS_MAIN_PROJECT})\noption(USEARCH_BUILD_LIB_C \"Compile a native library for the C 99 interface\" OFF)\noption(USEARCH_BUILD_TEST_C \"Compile a test for the C 99 interface\" OFF)\noption(USEARCH_BUILD_WOLFRAM \"Compile Wolfram Language bindings\" OFF)\noption(USEARCH_BUILD_SQLITE \"Compile separate SQLite extension\" OFF)\n\n# Includes\nset(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})\ninclude(ExternalProject)\n\n# Configuration\ninclude(GNUInstallDirs)\nset(USEARCH_TARGET_NAME ${PROJECT_NAME})\nset(USEARCH_CONFIG_INSTALL_DIR\n    \"${CMAKE_INSTALL_DATADIR}/cmake/${PROJECT_NAME}\"\n    CACHE INTERNAL \"\"\n)\nset(USEARCH_INCLUDE_INSTALL_DIR \"${CMAKE_INSTALL_INCLUDEDIR}\")\nset(USEARCH_TARGETS_EXPORT_NAME \"${PROJECT_NAME}Targets\")\nset(USEARCH_CMAKE_CONFIG_TEMPLATE \"cmake/config.cmake.in\")\nset(USEARCH_CMAKE_CONFIG_DIR \"${CMAKE_CURRENT_BINARY_DIR}\")\nset(USEARCH_CMAKE_VERSION_CONFIG_FILE \"${USEARCH_CMAKE_CONFIG_DIR}/${PROJECT_NAME}ConfigVersion.cmake\")\nset(USEARCH_CMAKE_PROJECT_CONFIG_FILE \"${USEARCH_CMAKE_CONFIG_DIR}/${PROJECT_NAME}Config.cmake\")\nset(USEARCH_CMAKE_PROJECT_TARGETS_FILE \"${USEARCH_CMAKE_CONFIG_DIR}/${PROJECT_NAME}Targets.cmake\")\nset(USEARCH_PKGCONFIG_INSTALL_DIR \"${CMAKE_INSTALL_DATADIR}/pkgconfig\")\n\ninclude(CheckCSourceCompiles)\n# Check for `__fp16` support\ncheck_c_source_compiles(\n    [=[\nint\nmain(int argc, char *argv)\n{\n  __fp16 a = 1.0;\n  __fp16 b = a + a;\n  return 0;\n}\n]=]\n    USEARCH_CAN_COMPILE_FP16\n)\n\n# Check for `_Float16` support\ncheck_c_source_compiles(\n    [=[\nint\nmain(int argc, char *argv)\n{\n  _Float16 a = 1.0;\n  _Float16 b = a + a;\n  return 0;\n}\n]=]\n    USEARCH_CAN_COMPILE_FLOAT16\n)\n\n# Check for `__bf16` support\ncheck_c_source_compiles(\n    [=[\nint\nmain(int argc, char *argv)\n{\n  __bf16 a = 1.0;\n  __bf16 b = a + a;\n  return 0;\n}\n]=]\n    USEARCH_CAN_COMPILE_BF16\n)\n\n# Check for `_Bfloat16` support\ncheck_c_source_compiles(\n    [=[\nint\nmain(int argc, char *argv)\n{\n  _Bfloat16 a = 1.0;\n  _Bfloat16 b = a + a;\n  return 0;\n}\n]=]\n    USEARCH_CAN_COMPILE_BFLOAT16\n)\n\n# Define our header-only library\nadd_library(${USEARCH_TARGET_NAME} INTERFACE)\nadd_library(${PROJECT_NAME}::${USEARCH_TARGET_NAME} ALIAS ${USEARCH_TARGET_NAME})\nset(USEARCH_INCLUDE_BUILD_DIR \"${PROJECT_SOURCE_DIR}/include/\")\n\nif (${CMAKE_VERSION} VERSION_LESS \"3.8.0\")\n    target_compile_features(${USEARCH_TARGET_NAME} INTERFACE cxx_range_for)\nelse ()\n    target_compile_features(${USEARCH_TARGET_NAME} INTERFACE cxx_std_11)\nendif ()\n\n# Core compilation settings affecting \"index.hpp\"\ntarget_compile_definitions(${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_USE_OPENMP=$<BOOL:${USEARCH_USE_OPENMP}>\")\n\n# Supplementary compilation settings affecting \"index_plugins.hpp\"\ntarget_compile_definitions(${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_USE_FP16LIB=$<BOOL:${USEARCH_USE_FP16LIB}>\")\ntarget_compile_definitions(${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_USE_SIMSIMD=$<BOOL:${USEARCH_USE_SIMSIMD}>\")\n\n# Define which types can be compiled\ntarget_compile_definitions(\n    ${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_CAN_COMPILE_FP16=$<BOOL:${USEARCH_CAN_COMPILE_FP16}>\"\n)\ntarget_compile_definitions(\n    ${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_CAN_COMPILE_FLOAT16=$<BOOL:${USEARCH_CAN_COMPILE_FLOAT16}>\"\n)\ntarget_compile_definitions(\n    ${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_CAN_COMPILE_BF16=$<BOOL:${USEARCH_CAN_COMPILE_BF16}>\"\n)\ntarget_compile_definitions(\n    ${USEARCH_TARGET_NAME} INTERFACE \"USEARCH_CAN_COMPILE_BFLOAT16=$<BOOL:${USEARCH_CAN_COMPILE_BFLOAT16}>\"\n)\n\ntarget_include_directories(\n    ${USEARCH_TARGET_NAME} ${USEARCH_SYSTEM_INCLUDE} INTERFACE $<BUILD_INTERFACE:${USEARCH_INCLUDE_BUILD_DIR}>\n                                                               $<INSTALL_INTERFACE:include>\n)\nif (USEARCH_USE_FP16LIB)\n    target_include_directories(\n        ${USEARCH_TARGET_NAME} ${USEARCH_SYSTEM_INCLUDE} INTERFACE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/fp16/include>\n                                                                   $<INSTALL_INTERFACE:fp16/include>\n    )\nendif()\nif (USEARCH_USE_SIMSIMD)\n    target_include_directories(\n        ${USEARCH_TARGET_NAME} ${USEARCH_SYSTEM_INCLUDE} INTERFACE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/simsimd/include>\n                                                                   $<INSTALL_INTERFACE:simsimd/include>\n    )\nendif()\n\n# Install a pkg-config file, so other tools can find this\nconfigure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/pkg-config.pc.in\" \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc\")\n\n# Install a custom package version config file instead of write_basic_package_version_file to ensure that it's\n# architecture-independent https://github.com/nlohmann/json/issues/1697\ninclude(CMakePackageConfigHelpers)\nconfigure_file(\"cmake/usearchConfigVersion.cmake.in\" ${USEARCH_CMAKE_VERSION_CONFIG_FILE} @ONLY)\nconfigure_file(${USEARCH_CMAKE_CONFIG_TEMPLATE} ${USEARCH_CMAKE_PROJECT_CONFIG_FILE} @ONLY)\n\nif (USEARCH_INSTALL)\n    install(DIRECTORY ${USEARCH_INCLUDE_BUILD_DIR} DESTINATION ${USEARCH_INCLUDE_INSTALL_DIR})\n    install(FILES ${USEARCH_CMAKE_PROJECT_CONFIG_FILE} ${USEARCH_CMAKE_VERSION_CONFIG_FILE}\n            DESTINATION ${USEARCH_CONFIG_INSTALL_DIR}\n    )\n    export(\n        TARGETS ${USEARCH_TARGET_NAME}\n        NAMESPACE ${PROJECT_NAME}::\n        FILE ${USEARCH_CMAKE_PROJECT_TARGETS_FILE}\n    )\n    install(\n        TARGETS ${USEARCH_TARGET_NAME}\n        EXPORT ${USEARCH_TARGETS_EXPORT_NAME}\n        INCLUDES\n        DESTINATION ${USEARCH_INCLUDE_INSTALL_DIR}\n    )\n    install(\n        EXPORT ${USEARCH_TARGETS_EXPORT_NAME}\n        NAMESPACE ${PROJECT_NAME}::\n        DESTINATION ${USEARCH_CONFIG_INSTALL_DIR}\n    )\n    install(FILES \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc\" DESTINATION ${USEARCH_PKGCONFIG_INSTALL_DIR})\nendif ()\n\n# Find required packages\nif (CMAKE_HOST_SYSTEM_NAME MATCHES \"Darwin\")\n    set(CMAKE_THREAD_LIBS_INIT \"-lpthread\")\n    set(CMAKE_HAVE_THREADS_LIBRARY 1)\n    set(CMAKE_USE_WIN32_THREADS_INIT 0)\n    set(CMAKE_USE_PTHREADS_INIT 1)\n    set(THREADS_PREFER_PTHREAD_FLAG ON)\nendif ()\n\nfind_package(Threads REQUIRED)\n\nif (USEARCH_USE_OPENMP)\n    find_package(OpenMP REQUIRED)\nendif ()\n\nif (USEARCH_USE_JEMALLOC)\n    include(jemalloc)\nendif ()\n\n# Set default build type to Release\nif (NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE RelWithDebInfo)\nendif ()\n\n# Include directories\nset(USEARCH_HEADER_INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/include\" \"${CMAKE_CURRENT_SOURCE_DIR}/fp16/include\"\n                            \"${CMAKE_CURRENT_SOURCE_DIR}/simsimd/include\"\n)\n\n# Function to setup target\nfunction (setup_target TARGET_NAME)\n    # Compiler-specific options List of all possible compiler IDs:\n    # https://cmake.org/cmake/help/latest/variable/CMAKE_LANG_COMPILER_ID.html\n    if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n        target_compile_options(\n            ${TARGET_NAME}\n            PRIVATE $<$<CONFIG:RELEASE>:-O3>\n                    $<$<CONFIG:RELWITHDEBINFO>:-O3\n                    -g>\n                    $<$<CONFIG:DEBUG>:-O0\n                    -g\n                    -fsanitize=address\n                    -fsanitize=leak\n                    -fsanitize=alignment\n                    -fsanitize=undefined\n                    >\n                    -ffast-math\n                    -fPIC\n                    -Wall\n                    -Wextra\n                    -Wno-conversion\n                    -Wno-unknown-pragmas\n                    -march=native\n                    -fmax-errors=1\n                    -pedantic\n                    -fdiagnostics-color=always\n        )\n        target_link_options(\n            ${TARGET_NAME}\n            PRIVATE\n            $<$<CONFIG:DEBUG>:-g\n            -fsanitize=address\n            -fsanitize=leak\n            -fsanitize=alignment\n            -fsanitize=undefined\n            >\n            -fPIC\n        )\n\n        if (USEARCH_USE_OPENMP)\n            target_link_libraries(${TARGET_NAME} PRIVATE OpenMP::OpenMP_CXX)\n        endif ()\n\n        target_link_libraries(${TARGET_NAME} PRIVATE Threads::Threads)\n\n    elseif (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n        target_compile_options(\n            ${TARGET_NAME}\n            PRIVATE $<$<CONFIG:RELEASE>:-O3>\n                    $<$<CONFIG:RELWITHDEBINFO>:-O3\n                    -g>\n                    $<$<CONFIG:DEBUG>:-O0\n                    -g\n                    -fsanitize=address\n                    -fsanitize=alignment\n                    -fsanitize=undefined\n                    >\n                    -ffast-math\n                    -fPIC\n                    -pedantic\n                    -Wfatal-errors\n                    -fcolor-diagnostics\n        )\n        target_link_options(\n            ${TARGET_NAME}\n            PRIVATE\n            $<$<CONFIG:DEBUG>:-g\n            -fsanitize=address\n            -fsanitize=alignment\n            -fsanitize=undefined\n            >\n            -fPIC\n        )\n\n        # Check if the compiler is AppleClang, and if not, add the leak sanitizer\n        if (CMAKE_HOST_SYSTEM_NAME MATCHES \"Darwin\")\n            # It's likely AppleClang Adjust options as needed for AppleClang\n        else ()\n            # It's likely LLVM Clang\n            target_compile_options(${TARGET_NAME} PRIVATE $<$<CONFIG:DEBUG>:-fsanitize=leak>)\n            target_link_options(${TARGET_NAME} PRIVATE $<$<CONFIG:DEBUG>:-fsanitize=leak>)\n        endif ()\n\n        if (USEARCH_USE_OPENMP)\n            target_link_libraries(${TARGET_NAME} PRIVATE OpenMP::OpenMP_CXX)\n        endif ()\n\n        if (CMAKE_HOST_SYSTEM_NAME MATCHES \"Darwin\")\n            target_link_libraries(\n                ${TARGET_NAME} PRIVATE \"-framework CoreFoundation\" \"-framework Security\" Threads::Threads\n            )\n        else ()\n            target_link_libraries(${TARGET_NAME} PRIVATE Threads::Threads)\n        endif ()\n\n    elseif (CMAKE_CXX_COMPILER_ID STREQUAL \"NVIDIA\" OR CMAKE_CXX_COMPILER_ID STREQUAL \"NVHPC\")\n        target_compile_options(${TARGET_NAME} PRIVATE $<$<CONFIG:RELEASE>:-O3>)\n        target_compile_definitions(${TARGET_NAME} PRIVATE --expt-relaxed-constexpr --extended-lambda)\n        set_property(SOURCE bench.cpp PROPERTY LANGUAGE CUDA)\n        set_target_properties(${TARGET_NAME} PROPERTIES POSITION_INDEPENDENT_CODE ON)\n        set_target_properties(${TARGET_NAME} PROPERTIES CUDA_ARCHITECTURES \"86\")\n\n    elseif (CMAKE_CXX_COMPILER_ID STREQUAL \"IntelLLVM\")\n        target_compile_options(${TARGET_NAME} PRIVATE -w -ferror-limit=1)\n\n    elseif (CMAKE_CXX_COMPILER_ID MATCHES \"MSVC\")\n        target_compile_options(${TARGET_NAME} PRIVATE /wd4068 /wd4996)\n        target_compile_options(\n            ${TARGET_NAME} PRIVATE $<$<CONFIG:DEBUG>:/DEBUG> $<$<CONFIG:RELEASE>:/O3> $<$<CONFIG:RELWITHDEBINFO>:/O3\n                                   /DEBUG>\n        )\n    endif ()\n\n    target_include_directories(${TARGET_NAME} PRIVATE ${USEARCH_HEADER_INCLUDES})\n    set_target_properties(${TARGET_NAME} PROPERTIES CXX_STANDARD 17)\n\n    # On Windows, when using multi-configuration CMake builds, the paths will be nested, resulting in\n    # \"build_debug\\Debug\" on Windows instead of \"build_debug\". That's why we override all the configs to use the same\n    # output directory.\n    set_target_properties(\n        ${TARGET_NAME}\n        PROPERTIES RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}\"\n                   ARCHIVE_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}\"\n                   LIBRARY_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}\"\n    )\n    set_target_properties(\n        ${TARGET_NAME}\n        PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_BINARY_DIR}\"\n                   ARCHIVE_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_BINARY_DIR}\"\n                   LIBRARY_OUTPUT_DIRECTORY_DEBUG \"${CMAKE_BINARY_DIR}\"\n    )\n    set_target_properties(\n        ${TARGET_NAME}\n        PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_BINARY_DIR}\"\n                   ARCHIVE_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_BINARY_DIR}\"\n                   LIBRARY_OUTPUT_DIRECTORY_RELEASE \"${CMAKE_BINARY_DIR}\"\n    )\n    set_target_properties(\n        ${TARGET_NAME}\n        PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${CMAKE_BINARY_DIR}\"\n                   ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${CMAKE_BINARY_DIR}\"\n                   LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${CMAKE_BINARY_DIR}\"\n    )\n\n    # On Linux and MacOS our primary shared libraries for C are called `libusearch_c.so` and `libusearch_c.dylib`, while\n    # on Windows the \"lib\" prefix might be missing by default, so let's ensure it's always there\n    get_target_property(TARGET_TYPE ${TARGET_NAME} TYPE)\n\n    if (TARGET_TYPE STREQUAL \"SHARED_LIBRARY\" OR TARGET_TYPE STREQUAL \"STATIC_LIBRARY\")\n        set_target_properties(${TARGET_NAME} PROPERTIES PREFIX \"lib\")\n    endif ()\n\n    # Core compilation settings affecting \"index.hpp\"\n    target_compile_definitions(${TARGET_NAME} PRIVATE \"USEARCH_USE_OPENMP=$<BOOL:${USEARCH_USE_OPENMP}>\")\n\n    # Supplementary compilation settings affecting \"index_plugins.hpp\"\n    target_compile_definitions(${TARGET_NAME} PRIVATE \"USEARCH_USE_FP16LIB=$<BOOL:${USEARCH_USE_FP16LIB}>\")\n    target_compile_definitions(${TARGET_NAME} PRIVATE \"USEARCH_USE_SIMSIMD=$<BOOL:${USEARCH_USE_SIMSIMD}>\")\n\nendfunction ()\n\n# Must be called before \"add_subdirectory()\". See https://stackoverflow.com/questions/30250494/ctest-not-detecting-tests.\nenable_testing()\n\nif (${USEARCH_BUILD_TEST_CPP} OR ${USEARCH_BUILD_BENCH_CPP})\n    add_subdirectory(cpp)\nendif ()\n\nif (${USEARCH_BUILD_WOLFRAM})\n    add_subdirectory(wolfram)\nendif ()\n\nif (${USEARCH_BUILD_WASM})\n    add_subdirectory(wasm)\nendif ()\n\nif (${USEARCH_BUILD_LIB_C} OR ${USEARCH_BUILD_TEST_C})\n    add_subdirectory(c)\nendif ()\n\nif (${USEARCH_BUILD_SQLITE})\n    add_subdirectory(sqlite)\nendif ()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0947265625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ninfo@unum.cloud.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 16.3212890625,
          "content": "# Contribution Guide\n\nThank you for coming here!\nIt's always nice to have third-party contributors 🤗\n\n---\n\nTo keep the quality of the code high, we have a set of guidelines common to [all Unum projects](https://github.com/unum-cloud).\n\n- [What's the procedure?](https://github.com/unum-cloud/awesome/blob/main/Workflow.md#organizing-software-development)\n- [How to organize branches?](https://github.com/unum-cloud/awesome/blob/main/Workflow.md#branches)\n- [How to style commits?](https://github.com/unum-cloud/awesome/blob/main/Workflow.md#commits)\n\n## Before you start\n\nBefore building the first time, please pull `git` submodules.\nThat's how we bring in SimSIMD and other optional dependencies to test all of the available functionality.\n\n```sh\ngit submodule update --init --recursive\n```\n\n## C++ 11 and C 99\n\nOur primary C++ implementation uses CMake for builds.\nIf this is your first experience with CMake, use the following commands to get started:\n\n```sh\nsudo apt-get update && sudo apt-get install cmake build-essential libjemalloc-dev g++-12 gcc-12 # Ubuntu\nbrew install libomp llvm # MacOS\n```\n\nUsing modern syntax, this is how you build and run the test suite:\n\n```sh\ncmake -D USEARCH_BUILD_TEST_CPP=1 -D CMAKE_BUILD_TYPE=Debug -B build_debug\ncmake --build build_debug --config Debug\nbuild_debug/test_cpp\n```\n\nIf there build mode is not specified, the default is `Release`.\n\n```sh\ncmake -D USEARCH_BUILD_TEST_CPP=1 -B build_release\ncmake --build build_release --config Release\nbuild_release/test_cpp\n```\n\nFor development purposes, you may want to include symbols information in the build:\n\n```sh\ncmake -D USEARCH_BUILD_TEST_CPP=1 -D CMAKE_BUILD_TYPE=RelWithDebInfo -B build_relwithdebinfo\ncmake --build build_relwithdebinfo --config RelWithDebInfo\nbuild_relwithdebinfo/test_cpp\n```\n\nThe CMakeLists.txt file has a number of options you can pass:\n\n- What to build:\n  - `USEARCH_BUILD_TEST_CPP` - build the C++ test suite\n  - `USEARCH_BUILD_BENCH_CPP` - build the C++ benchmark suite\n  - `USEARCH_BUILD_LIB_C` - build the C library\n  - `USEARCH_BUILD_TEST_C` - build the C test suite\n  - `USEARCH_BUILD_SQLITE` - build the SQLite extension ([no Windows](https://gist.github.com/zeljic/d8b542788b225b1bcb5fce169ee28c55))\n- Which dependencies to use:\n  - `USEARCH_USE_OPENMP` - use OpenMP for parallelism\n  - `USEARCH_USE_SIMSIMD` - use SimSIMD for vectorization\n  - `USEARCH_USE_JEMALLOC` - use Jemalloc for memory management\n  - `USEARCH_USE_FP16LIB` - use software emulation for half-precision floating point\n\nPutting all of this together, compiling all targets on most platforms should work with the following snippet:\n\n```sh\ncmake -D CMAKE_BUILD_TYPE=Release -D USEARCH_USE_FP16LIB=1 -D USEARCH_USE_OPENMP=1 -D USEARCH_USE_SIMSIMD=1 -D USEARCH_USE_JEMALLOC=1 -D USEARCH_BUILD_TEST_CPP=1 -D USEARCH_BUILD_BENCH_CPP=1 -D USEARCH_BUILD_LIB_C=1 -D USEARCH_BUILD_TEST_C=1 -D USEARCH_BUILD_SQLITE=0 -B build_release\n\ncmake --build build_release --config Release\nbuild_release/test_cpp\nbuild_release/test_c\n```\n\nSimilarly, to use the most recent Clang compiler version from HomeBrew on MacOS:\n\n```sh\nbrew install clang++ clang cmake\ncmake \\\n    -D CMAKE_BUILD_TYPE=Release \\\n    -D CMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n    -D CMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n    -D USEARCH_USE_FP16LIB=1 \\\n    -D USEARCH_USE_OPENMP=1 \\\n    -D USEARCH_USE_SIMSIMD=1 \\\n    -D USEARCH_USE_JEMALLOC=1 \\\n    -D USEARCH_BUILD_TEST_CPP=1 \\\n    -D USEARCH_BUILD_BENCH_CPP=1 \\\n    -D USEARCH_BUILD_LIB_C=1 \\\n    -D USEARCH_BUILD_TEST_C=1 \\\n    -B build_release\n\ncmake --build build_release --config Release\nbuild_release/test_cpp\nbuild_release/test_c\n```\n\nLinting:\n\n```sh\ncppcheck --enable=all --force --suppress=cstyleCast --suppress=unusedFunction \\\n    include/usearch/index.hpp \\\n    include/index_dense.hpp \\\n    include/index_plugins.hpp\n```\n\nI'd recommend putting the following breakpoints when debugging the code in GDB:\n\n- `__asan::ReportGenericError` - to detect illegal memory accesses.\n- `__ubsan::ScopedReport::~ScopedReport` - to catch undefined behavior.\n- `__GI_exit` - to stop at exit points - the end of running any executable.\n- `__builtin_unreachable` - to catch all the places where the code is expected to be unreachable.\n- `__usearch_raise_runtime_error` - for USearch-specific assertions.\n\n### Cross Compilation\n\nUnlike GCC, LLVM handles cross compilation very easily.\nYou just need to pass the right `TARGET_ARCH` and `BUILD_ARCH` to CMake.\nThe [list includes](https://packages.ubuntu.com/search?keywords=crossbuild-essential&searchon=names):\n\n- `crossbuild-essential-amd64` for 64-bit x86\n- `crossbuild-essential-arm64` for 64-bit Arm\n- `crossbuild-essential-armhf` for 32-bit ARM hard-float\n- `crossbuild-essential-armel` for 32-bit ARM soft-float (emulates `float`)\n- `crossbuild-essential-riscv64` for RISC-V\n- `crossbuild-essential-powerpc` for PowerPC\n- `crossbuild-essential-s390x` for IBM Z\n- `crossbuild-essential-mips` for MIPS\n- `crossbuild-essential-ppc64el` for PowerPC 64-bit little-endian\n\nHere is an example for cross-compiling for Arm64 on an x86_64 machine:\n\n```sh\nsudo apt-get update\nsudo apt-get install -y clang lld make crossbuild-essential-arm64 crossbuild-essential-armhf\nexport CC=\"clang\"\nexport CXX=\"clang++\"\nexport AR=\"llvm-ar\"\nexport NM=\"llvm-nm\"\nexport RANLIB=\"llvm-ranlib\"\nexport TARGET_ARCH=\"aarch64-linux-gnu\" # Or \"x86_64-linux-gnu\"\nexport BUILD_ARCH=\"arm64\" # Or \"amd64\"\n\ncmake -D CMAKE_BUILD_TYPE=Release \\\n    -D CMAKE_C_COMPILER_TARGET=${TARGET_ARCH} \\\n    -D CMAKE_CXX_COMPILER_TARGET=${TARGET_ARCH} \\\n    -D CMAKE_SYSTEM_NAME=Linux \\\n    -D CMAKE_SYSTEM_PROCESSOR=${BUILD_ARCH} \\\n    -B build_artifacts\ncmake --build build_artifacts --config Release\n```\n\n## Python 3\n\nPython bindings are built using PyBind11 and are available on [PyPi](https://pypi.org/project/usearch/).\nThe compilation settings are controlled by the `setup.py` and are independent from CMake used for C/C++ builds.\nTo install USearch locally:\n\n```sh\npip install -e .\n```\n\nFor testing USearch uses PyTest, which is pre-configured in `pyproject.toml`.\nFollowing options are enabled:\n\n- The `-s` option will disable capturing the logs.\n- The `-x` option will exit after first failure to simplify debugging.\n- The `-p no:warnings` option will suppress and allow warnings.\n\n```sh\npip install pytest pytest-repeat            # for repeated fuzzy tests\npytest                                      # if you trust the default settings\npytest python/scripts/ -s -x -p no:warnings # to overwrite the default settings\n```\n\nLinting:\n\n```sh\npip install ruff\nruff --format=github --select=E9,F63,F7,F82 --target-version=py37 python\n```\n\nBefore merging your changes you may want to test your changes against the entire matrix of Python versions USearch supports.\nFor that you need the `cibuildwheel`, which is tricky to use on MacOS and Windows, as it would target just the local environment.\nStill, if you have Docker running on any desktop OS, you can use it to build and test the Python bindings for all Python versions for Linux:\n\n```sh\npip install cibuildwheel\ncibuildwheel\ncibuildwheel --platform linux                   # works on any OS and builds all Linux backends\ncibuildwheel --platform linux --archs x86_64    # 64-bit x86, the most common on desktop and servers\ncibuildwheel --platform linux --archs aarch64   # 64-bit Arm for mobile devices, Apple M-series, and AWS Graviton\ncibuildwheel --platform macos                   # works only on MacOS\ncibuildwheel --platform windows                 # works only on Windows\n```\n\nYou may need root privileges for multi-architecture builds:\n\n```sh\nsudo $(which cibuildwheel) --platform linux\n```\n\nOn Windows and MacOS, to avoid frequent path resolution issues, you may want to use:\n\n```sh\npython -m cibuildwheel --platform windows\n```\n\n## JavaScript\n\nUSearch provides NAPI bindings for NodeJS available on [NPM](https://www.npmjs.com/package/usearch).\nThe compilation settings are controlled by the `binding.gyp` and are independent from CMake used for C/C++ builds.\nIf you don't have NPM installed, first the Node Version Manager:\n\n```sh\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\nnvm install 20\n```\n\nTesting:\n\n```sh\nnpm install -g typescript\nnpm install\nnpm run build-js\nnpm test\n```\n\nTo compile for AWS Lambda you'd need to recompile the binding.\nYou can test the setup locally, overriding some of the compilation variables in Docker image:\n\n```Dockerfile\nFROM public.ecr.aws/lambda/nodejs:18-x86_64\nRUN npm init -y\nRUN yum install tar git python3 cmake gcc-c++ -y && yum groupinstall \"Development Tools\" -y\n\n# Assuming AWS Linux 2 uses old compilers:\nENV USEARCH_USE_FP16LIB 1\nENV DUSEARCH_USE_SIMSIMD 1\nENV SIMSIMD_TARGET_HASWELL 1\nENV SIMSIMD_TARGET_SKYLAKE 0\nENV SIMSIMD_TARGET_ICE 0\nENV SIMSIMD_TARGET_SAPPHIRE 0\nENV SIMSIMD_TARGET_NEON 1\nENV SIMSIMD_TARGET_SVE 0\n\n# For specific PR:\n# RUN npm install --build-from-source unum-cloud/usearch#pull/302/head\n# For specific version:\n# RUN npm install --build-from-source usearch@2.8.8\nRUN npm install --build-from-source usearch\n```\n\nTo compile to WebAssembly make sure you have `emscripten` installed and run the following script:\n\n```sh\nemcmake cmake -B build -DCMAKE_CXX_FLAGS=\"${CMAKE_CXX_FLAGS} -s TOTAL_MEMORY=64MB\" && emmake make -C build\nnode build/usearch.test.js\n```\n\nIf you don't yet have `emcmake` installed:\n\n```sh\ngit clone https://github.com/emscripten-core/emsdk.git && ./emsdk/emsdk install latest && ./emsdk/emsdk activate latest && source ./emsdk/emsdk_env.sh\n```\n\n## Rust\n\nUSearch provides Rust bindings available on [Crates.io](https://crates.io/crates/usearch).\nThe compilation settings are controlled by the `build.rs` and are independent from CMake used for C/C++ builds.\n\n```sh\ncargo test -p usearch -- --nocapture --test-threads=1\n```\n\nPublishing the crate is a bit more complicated than normally.\nIf you simply pull the repository with submodules and run the following command it will list fewer files than expected:\n\n```sh\ncargo package --list --allow-dirty\n```\n\nThe reason for that is the heuristic that Cargo uses to determine the files to include in the package.\n\n> Regardless of whether exclude or include is specified, the following files are always excluded:\n> Any sub-packages will be skipped (any subdirectory that contains a Cargo.toml file).\n\nAssuming both SimSIMD and StringZilla contain their own `Cargo.toml` files, we need to temporarily exclude them from the package.\n\n```sh\nmv simsimd/Cargo.toml simsimd/Cargo.toml.bak\nmv stringzilla/Cargo.toml stringzilla/Cargo.toml.bak\ncargo package --list --allow-dirty\ncargo publish\n\n# Revert back\nmv simsimd/Cargo.toml.bak simsimd/Cargo.toml\nmv stringzilla/Cargo.toml.bak stringzilla/Cargo.toml\n```\n\n## Objective-C and Swift\n\nUSearch provides both Objective-C and Swift bindings through the [Swift Package Manager](https://swiftpackageindex.com/unum-cloud/usearch).\nThe compilation settings are controlled by the `Package.swift` and are independent from CMake used for C/C++ builds.\n\n```sh\nswift build && swift test -v\n```\n\n> Those depend on Apple's `Foundation` library and can only run on Apple devices.\n\nSwift formatting is enforced with `swift-format` default utility from Apple.\nTo install and run it on all the files in the project, use the following command:\n\n```bash\nbrew install swift-format\nswift-format . -i -r\n```\n\nThe style is controlled by the `.swift-format` JSON file in the root of the repository.\nAs there is no standard for Swift formatting, even Apple's own `swift-format` tool and Xcode differ in their formatting rules, and available settings.\n\n## GoLang\n\nUSearch provides GoLang bindings, that depend on the C library that must be installed beforehand.\nSo one should first compile the C library, link it with GoLang, and only then run tests.\n\n```sh\ncmake -B build_release -D USEARCH_BUILD_LIB_C=1 -D USEARCH_BUILD_TEST_C=1 -D USEARCH_USE_OPENMP=1 -D USEARCH_USE_SIMSIMD=1 \ncmake --build build_release --config Release -j\n\ncp build_release/libusearch_c.so golang/ # or .dylib to install the library on MacOS\ncp c/usearch.h golang/                   # to make the header available to GoLang\n\ncd golang && LD_LIBRARY_PATH=. go test -v ; cd ..\n```\n\n## Java\n\nUSearch provides Java bindings available from the [GitHub Maven registry](https://github.com/unum-cloud/usearch/packages/1867475) and the [Sonatype Maven Central Repository](https://central.sonatype.com/artifact/cloud.unum/usearch).\nThe compilation settings are controlled by the `build.gradle` and are independent from CMake used for C/C++ builds.\n\nTo setup the Gradle environment:\n\n```sh\nsudo apt-get install zip\ncurl -s \"https://get.sdkman.io\" | bash\nsdk install java\nsdk install gradle\n```\n\nAfterwards, in a new terminal:\n\n```sh\ngradle clean build\ngradle test\n```\n\nAlternatively, to run the `Index.main`:\n\n```sh\njava -cp \"$(pwd)/build/classes/java/main\" -Djava.library.path=\"$(pwd)/build/libs/usearch/shared\" java/cloud/unum/usearch/Index.java\n```\n\nOr step by-step:\n\n```sh\ncd java/cloud/unum/usearch\njavac -h . Index.java NativeUtils.java\n\n# Ensure JAVA_HOME system environment variable has been set\n# e.g. export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\n\n# Ubuntu:\ng++ -c -fPIC -I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux -I../../../../include cloud_unum_usearch_Index.cpp -o cloud_unum_usearch_Index.o\ng++ -shared -fPIC -o libusearch.so cloud_unum_usearch_Index.o -lc\n\n# Windows\ng++ -c -I%JAVA_HOME%\\include -I%JAVA_HOME%\\include\\win32 cloud_unum_usearch_Index.cpp -I..\\..\\..\\..\\include -o cloud_unum_usearch_Index.o\ng++ -shared -o USearchJNI.dll cloud_unum_usearch_Index.o -Wl,--add-stdcall-alias\n\n# MacOS\ng++ -std=c++11 -c -fPIC \\\n    -I../../../../include \\\n    -I../../../../fp16/include \\\n    -I../../../../simsimd/include \\\n    -I${JAVA_HOME}/include -I${JAVA_HOME}/include/darwin cloud_unum_usearch_Index.cpp -o cloud_unum_usearch_Index.o\ng++ -dynamiclib -o libusearch.dylib cloud_unum_usearch_Index.o -lc\n\n# Run linking to that directory\ncd ../../../..\ncp cloud/unum/usearch/libusearch.* .\njava -cp . -Djava.library.path=\"$(pwd)\" cloud.unum.usearch.Index\n```\n\n## C#\n\nSetup the .NET environment:\n\n```sh\ndotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org\n```\n\nUSearch provides CSharp bindings, that depend on the C library that must be installed beforehand.\nSo one should first compile the C library, link it with CSharp, and only then run tests.\n\n```sh\ncmake -B build_artifacts -D USEARCH_BUILD_LIB_C=1 -D USEARCH_BUILD_TEST_C=1 -D USEARCH_USE_OPENMP=1 -D USEARCH_USE_SIMSIMD=1 \ncmake --build build_artifacts --config Release -j\n```\n\nThen, on Windows, copy the library to the CSharp project and run the tests:\n\n```sh\nmkdir -p \".\\csharp\\lib\\runtimes\\win-x64\\native\"\ncp \".\\build_artifacts\\libusearch_c.dll\" \".\\csharp\\lib\\runtimes\\win-x64\\native\"\ncd csharp\ndotnet test -c Debug --logger \"console;verbosity=detailed\"\ndotnet test -c Release\n```\n\nOn Linux, the process is similar:\n\n```sh\nmkdir -p \"csharp/lib/runtimes/linux-x64/native\" # for x86\ncp \"build_artifacts/libusearch_c.so\" \"csharp/lib/runtimes/linux-x64/native\" # for x86\nmkdir -p \"csharp/lib/runtimes/linux-arm64/native\" # for ARM\ncp \"build_artifacts/libusearch_c.so\" \"csharp/lib/runtimes/linux-arm64/native\" # for ARM\ncd csharp\ndotnet test -c Debug --logger \"console;verbosity=detailed\"\ndotnet test -c Release\n```\n\nOn macOS with Arm-based chips:\n\n```sh\nmkdir -p \"csharp/lib/runtimes/osx-arm64/native\"\ncp \"build_artifacts/libusearch_c.dylib\" \"csharp/lib/runtimes/osx-arm64/native\"\ncd csharp\ndotnet test -c Debug --logger \"console;verbosity=detailed\"\ndotnet test -c Release\n```\n\n\n## Wolfram\n\n```sh\nbrew install --cask wolfram-engine\n```\n\n## Docker\n\n```sh\ndocker build -t unum/usearch . && docker run unum/usearch\n```\n\nFor multi-architecture builds and publications:\n\n```sh\nversion=$(cat VERSION)\ndocker buildx create --use &&\n    docker login &&\n    docker buildx build \\\n        --platform \"linux/amd64,linux/arm64\" \\\n        --build-arg version=$version \\\n        --file Dockerfile \\\n        --tag unum/usearch:$version \\\n        --tag unum/usearch:latest \\\n        --push .\n```\n\n## WebAssembly\n\n```sh\nexport WASI_VERSION=21\nexport WASI_VERSION_FULL=${WASI_VERSION}.0\nwget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz\ntar xvf wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz\n```\n\nAfter the installation, we can pass WASI SDK to CMake as a new toolchain:\n\n```sh\ncmake -DCMAKE_TOOLCHAIN_FILE=${WASI_SDK_PATH}/share/cmake/wasi-sdk.cmake .\n```\n\n## Working on Sub-Modules\n\nExtending metrics in SimSIMD:\n\n```sh\ngit push --set-upstream https://github.com/ashvardanian/simsimd.git HEAD:main\n```\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 5.9794921875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26a5c3fd7bfa1ce3897a3a3501d362b2d87b7f2583ebcb4a949ec25911025cbc\"\n\n[[package]]\nname = \"codespan-reporting\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e\"\ndependencies = [\n \"termcolor\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"cxx\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb497fad022245b29c2a0351df572e2d67c1046bcef2260ebc022aec81efea82\"\ndependencies = [\n \"cc\",\n \"cxxbridge-flags\",\n \"cxxbridge-macro\",\n \"link-cplusplus\",\n]\n\n[[package]]\nname = \"cxx-build\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9327c7f9fbd6329a200a5d4aa6f674c60ab256525ff0084b52a889d4e4c60cee\"\ndependencies = [\n \"cc\",\n \"codespan-reporting\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"scratch\",\n \"syn\",\n]\n\n[[package]]\nname = \"cxxbridge-flags\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"688c799a4a846f1c0acb9f36bb9c6272d9b3d9457f3633c7753c6057270df13c\"\n\n[[package]]\nname = \"cxxbridge-macro\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"928bc249a7e3cd554fd2e8e08a426e9670c50bbfc9a621653cfa9accc9641783\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"link-cplusplus\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d240c6f7e1ba3a28b0249f774e6a9dd0175054b52dfbb61b16eb8505c3785c9\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.82\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ad3d49ab951a01fbaafe34f2ec74122942fe18a3f9814c3268f1bb72042131b\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"scratch\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3cf7c11c38cb994f3d40e8a8cde3bbd1f72a435e4c49e85d6553d8312306152\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf5be731623ca1a1fb7d8be6f261a3be6d3e2337b8a1f97be944d020c8fcb704\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68f5e5f3158ecfd4b8ff6fe086db7c8467a2dfdac97fe420f2b7c4aa97af66d6\"\n\n[[package]]\nname = \"usearch\"\nversion = \"2.16.10\"\ndependencies = [\n \"cxx\",\n \"cxx-build\",\n]\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d4cc384e1e73b93bafa6fb4f1df8c41695c8a91cf9c4c64358067d15a7b6c6b\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.9375,
          "content": "[package]\nname = \"usearch\"\nversion = \"2.16.10\"\nauthors = [\"Ash Vardanian <1983160+ashvardanian@users.noreply.github.com>\"]\ndescription = \"Smaller & Faster Single-File Vector Search Engine from Unum\"\nedition = \"2021\"\nlicense = \"Apache-2.0\"\npublish = true\nrepository = \"https://github.com/unum-cloud/usearch\"\ndocumentation = \"https://unum-cloud.github.io/usearch\"\ninclude = [\n    \"/rust/**\",\n    \"/include/**\",\n    \"/fp16/include/**\",\n    \"/simsimd/include/**\",\n    \"/simsimd/c/**\",\n    \"/stringzilla/include/**\",\n    \"/build.rs\",\n]\n\n[features]\ndefault = [\"simsimd\", \"fp16lib\"] # SimSIMD is enabled by default\nsimsimd = []                     # No need to do anything to enable SimSIMD by default\nfp16lib = []                     # Without this FP16 we lose precision downcasting\nopenmp = []                      # Optional: Users can enable OpenMP\n\n[lib]\nname = \"usearch\"\npath = \"rust/lib.rs\"\n\n[dependencies]\ncxx = \"1.0\"\n\n[build-dependencies]\ncxx-build = \"1.0\"\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4072265625,
          "content": "# syntax=docker/dockerfile:1\n\nFROM ubuntu:23.04\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends python3.11 python3-pip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --break-system-packages ucall usearch\n\nWORKDIR /usearch\nCOPY python/usearch/server.py server.py\n\nENTRYPOINT [\"python3\", \"./server.py\"]\nEXPOSE 8545\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.03125,
          "content": "include python/usearch/py.typed\n"
        },
        {
          "name": "Package.swift",
          "type": "blob",
          "size": 1.2607421875,
          "content": "// swift-tools-version:5.3\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"USearch\",\n    products: [\n        .library(\n            name: \"USearch\",\n            targets: [\"USearchObjective\", \"USearch\"]\n        )\n    ],\n    dependencies: [],\n    targets: [\n        .target(\n            name: \"USearchObjective\",\n            path: \"objc\",\n            sources: [\"USearchObjective.mm\", \"../simsimd/c/lib.c\"],\n            cxxSettings: [\n                .headerSearchPath(\"../include/\"),\n                .headerSearchPath(\"../fp16/include/\"),\n                .headerSearchPath(\"../simsimd/include/\"),\n                .define(\"USEARCH_USE_FP16LIB\", to: \"1\"),\n                .define(\"USEARCH_USE_SIMSIMD\", to: \"1\"),\n            ]\n        ),\n        .target(\n            name: \"USearch\",\n            dependencies: [\"USearchObjective\"],\n            path: \"swift\",\n            exclude: [\"README.md\", \"Test.swift\"],\n            sources: [\"USearch.swift\", \"Index+Sugar.swift\"]\n        ),\n        .testTarget(\n            name: \"USearchTests\",\n            dependencies: [\"USearch\"],\n            path: \"swift\",\n            exclude: [\"USearch.swift\", \"Index+Sugar.swift\", \"README.md\"],\n            sources: [\"Test.swift\"]\n        ),\n    ],\n    cxxLanguageStandard: CXXLanguageStandard.cxx11\n)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 30.5498046875,
          "content": "<h1 align=\"center\">USearch</h1>\n<h3 align=\"center\">\nSmaller & <a href=\"https://www.unum.cloud/blog/2023-11-07-scaling-vector-search-with-intel\">Faster</a> Single-File<br/>\nSimilarity Search & Clustering Engine for <a href=\"https://github.com/ashvardanian/simsimd\">Vectors</a> & 🔜 <a href=\"https://github.com/ashvardanian/stringzilla\">Texts</a>\n</h3>\n<br/>\n\n<p align=\"center\">\n<a href=\"https://discord.gg/A6wxt6dS9j\"><img height=\"25\" src=\"https://github.com/unum-cloud/.github/raw/main/assets/discord.svg\" alt=\"Discord\"></a>\n&nbsp;&nbsp;&nbsp;\n<a href=\"https://www.linkedin.com/company/unum-cloud/\"><img height=\"25\" src=\"https://github.com/unum-cloud/.github/raw/main/assets/linkedin.svg\" alt=\"LinkedIn\"></a>\n&nbsp;&nbsp;&nbsp;\n<a href=\"https://twitter.com/unum_cloud\"><img height=\"25\" src=\"https://github.com/unum-cloud/.github/raw/main/assets/twitter.svg\" alt=\"Twitter\"></a>\n&nbsp;&nbsp;&nbsp;\n<a href=\"https://unum.cloud/post\"><img height=\"25\" src=\"https://github.com/unum-cloud/.github/raw/main/assets/blog.svg\" alt=\"Blog\"></a>\n&nbsp;&nbsp;&nbsp;\n<a href=\"https://github.com/unum-cloud/usearch\"><img height=\"25\" src=\"https://github.com/unum-cloud/.github/raw/main/assets/github.svg\" alt=\"GitHub\"></a>\n</p>\n\n<p align=\"center\">\nSpatial • Binary • Probabilistic • User-Defined Metrics\n<br/>\n<a href=\"https://unum-cloud.github.io/usearch/cpp\">C++ 11</a> •\n<a href=\"https://unum-cloud.github.io/usearch/python\">Python 3</a> •\n<a href=\"https://unum-cloud.github.io/usearch/javascript\">JavaScript</a> •\n<a href=\"https://unum-cloud.github.io/usearch/java\">Java</a> •\n<a href=\"https://unum-cloud.github.io/usearch/rust\">Rust</a> •\n<a href=\"https://unum-cloud.github.io/usearch/c\">C 99</a> •\n<a href=\"https://unum-cloud.github.io/usearch/objective-c\">Objective-C</a> •\n<a href=\"https://unum-cloud.github.io/usearch/swift\">Swift</a> •\n<a href=\"https://unum-cloud.github.io/usearch/csharp\">C#</a> •\n<a href=\"https://unum-cloud.github.io/usearch/golang\">GoLang</a> •\n<a href=\"https://unum-cloud.github.io/usearch/wolfram\">Wolfram</a>\n<br/>\nLinux • MacOS • Windows • iOS • Android • WebAssembly •\n<a href=\"https://unum-cloud.github.io/usearch/sqlite\">SQLite3</a>\n</p>\n\n<div align=\"center\">\n<a href=\"https://pepy.tech/project/usearch\"> <img alt=\"PyPI\" src=\"https://static.pepy.tech/personalized-badge/usearch?period=total&units=abbreviation&left_color=black&right_color=blue&left_text=Python%20PyPi%20installs\"> </a>\n<a href=\"https://www.npmjs.com/package/usearch\"> <img alt=\"NPM\" src=\"https://img.shields.io/npm/dy/usearch?label=JavaScript%20NPM%20installs\"> </a>\n<a href=\"https://crates.io/crates/usearch\"> <img alt=\"Crate\" src=\"https://img.shields.io/crates/d/usearch?label=Rust%20Crate%20installs\"> </a>\n<a href=\"https://www.nuget.org/packages/Cloud.Unum.USearch\"> <img alt=\"NuGet\" src=\"https://img.shields.io/nuget/dt/Cloud.Unum.USearch?label=CSharp%20NuGet%20installs\"> </a>\n<a href=\"https://central.sonatype.com/artifact/cloud.unum/usearch/overview\"> <img alt=\"Maven\" src=\"https://img.shields.io/nexus/r/cloud.unum/usearch?server=https%3A%2F%2Fs01.oss.sonatype.org%2F&label=Java%20Maven%20version\"> </a>\n<img alt=\"GitHub code size in bytes\" src=\"https://img.shields.io/github/languages/code-size/unum-cloud/usearch?label=Repo%20size\">\n</div>\n\n---\n\n- ✅ __[10x faster][faster-than-faiss]__ [HNSW][hnsw-algorithm] implementation than [FAISS][faiss].\n- ✅ Simple and extensible [single C++11 header][usearch-header] __library__.\n- ✅ [Trusted](#integrations) by giants like Google and DBs like [ClickHouse][clickhouse-docs] & [DuckDB][duckdb-docs].\n- ✅ [SIMD][simd]-optimized and [user-defined metrics](#user-defined-functions) with JIT compilation.\n- ✅ Hardware-agnostic `f16` & `i8` - [half-precision & quarter-precision support](#memory-efficiency-downcasting-and-quantization).\n- ✅ [View large indexes from disk](#serialization--serving-index-from-disk) without loading into RAM.\n- ✅ Heterogeneous lookups, renaming/relabeling, and on-the-fly deletions.\n- ✅ Binary Tanimoto and Sorensen coefficients for [Genomics and Chemistry applications](#usearch--rdkit--molecular-search).\n- ✅ Space-efficient point-clouds with `uint40_t`, accommodating 4B+ size.\n- ✅ Compatible with OpenMP and custom \"executors\" for fine-grained parallelism.\n- ✅ [Semantic Search](#usearch--ai--multi-modal-semantic-search) and [Joins](#joins-one-to-one-one-to-many-and-many-to-many-mappings).\n- 🔄 Near-real-time [clustering and sub-clustering](#clustering) for Tens or Millions of clusters.\n\n[faiss]: https://github.com/facebookresearch/faiss\n[usearch-header]: https://github.com/unum-cloud/usearch/blob/main/include/usearch/index.hpp\n[obscure-use-cases]: https://ashvardanian.com/posts/abusing-vector-search\n[hnsw-algorithm]: https://arxiv.org/abs/1603.09320\n[simd]: https://en.wikipedia.org/wiki/Single_instruction,_multiple_data\n[faster-than-faiss]: https://www.unum.cloud/blog/2023-11-07-scaling-vector-search-with-intel\n[clickhouse-docs]: https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/annindexes#usearch\n[duckdb-docs]: https://duckdb.org/2024/05/03/vector-similarity-search-vss.html\n\n__Technical Insights__ and related articles:\n\n- [Uses Arm SVE and x86 AVX-512's masked loads to eliminate tail `for`-loops](https://ashvardanian.com/posts/simsimd-faster-scipy/#tails-of-the-past-the-significance-of-masked-loads).\n- [Uses Horner's method for polynomial approximations, beating GCC 12 by 119x](https://ashvardanian.com/posts/gcc-12-vs-avx512fp16/).\n- [For every language implements a custom separate binding](https://ashvardanian.com/posts/porting-cpp-library-to-ten-languages/).\n\n\n## Comparison with FAISS\n\nFAISS is a widely recognized standard for high-performance vector search engines.\nUSearch and FAISS both employ the same HNSW algorithm, but they differ significantly in their design principles.\nUSearch is compact and broadly compatible without sacrificing performance, primarily focusing on user-defined metrics and fewer dependencies.\n\n|                                              |                   FAISS |                  USearch |             Improvement |\n| :------------------------------------------- | ----------------------: | -----------------------: | ----------------------: |\n| Indexing time ⁰                              |                         |                          |                         |\n| 100 Million 96d `f32`, `f16`, `i8` vectors   |       2.6 · 2.6 · 2.6 h |        0.3 · 0.2 · 0.2 h | __9.6 · 10.4 · 10.7 x__ |\n| 100 Million 1536d `f32`, `f16`, `i8` vectors |       5.0 · 4.1 · 3.8 h |        2.1 · 1.1 · 0.8 h |   __2.3 · 3.6 · 4.4 x__ |\n|                                              |                         |                          |                         |\n| Codebase length ¹                            |       84 K [SLOC][sloc] |         3 K [SLOC][sloc] |            maintainable |\n| Supported metrics ²                          |         9 fixed metrics |               any metric |              extendible |\n| Supported languages ³                        |             C++, Python |             10 languages |                portable |\n| Supported ID types ⁴                         |          32-bit, 64-bit |   32-bit, 40-bit, 64-bit |               efficient |\n| Filtering ⁵                                  |               ban-lists |           any predicates |              composable |\n| Required dependencies ⁶                      |            BLAS, OpenMP |                        - |            light-weight |\n| Bindings ⁷                                   |                    SWIG |                   Native |             low-latency |\n| Python binding size ⁸                        | [~ 10 MB][faiss-weight] | [< 1 MB][usearch-weight] |              deployable |\n\n[sloc]: https://en.wikipedia.org/wiki/Source_lines_of_code\n[faiss-weight]: https://pypi.org/project/faiss-cpu/#files\n[usearch-weight]: https://pypi.org/project/usearch/#files\n\n> ⁰ [Tested][intel-benchmarks] on Intel Sapphire Rapids, with the simplest inner-product distance, equivalent recall, and memory consumption while also providing far superior search speed.\n> ¹ A shorter codebase of `usearch/` over `faiss/` makes the project easier to maintain and audit.\n> ² User-defined metrics allow you to customize your search for various applications, from GIS to creating custom metrics for composite embeddings from multiple AI models or hybrid full-text and semantic search.\n> ³ With USearch, you can reuse the same preconstructed index in various programming languages.\n> ⁴ The 40-bit integer allows you to store 4B+ vectors without allocating 8 bytes for every neighbor reference in the proximity graph.\n> ⁵ With USearch the index can be combined with arbitrary external containers, like Bloom filters or third-party databases, to filter out irrelevant keys during index traversal.\n> ⁶ Lack of obligatory dependencies makes USearch much more portable.\n> ⁷ Native bindings introduce lower call latencies than more straightforward approaches.\n> ⁸ Lighter bindings make downloads and deployments faster.\n\n[intel-benchmarks]: https://www.unum.cloud/blog/2023-11-07-scaling-vector-search-with-intel\n\nBase functionality is identical to FAISS, and the interface must be familiar if you have ever investigated Approximate Nearest Neighbors search:\n\n```py\n# pip install usearch\n\nimport numpy as np\nfrom usearch.index import Index\n\nindex = Index(ndim=3)               # Default settings for 3D vectors\nvector = np.array([0.2, 0.6, 0.4])  # Can be a matrix for batch operations\nindex.add(42, vector)               # Add one or many vectors in parallel\nmatches = index.search(vector, 10)  # Find 10 nearest neighbors\n\nassert matches[0].key == 42\nassert matches[0].distance <= 0.001\nassert np.allclose(index[42], vector, atol=0.1) # Ensure high tolerance in mixed-precision comparisons\n```\n\nMore settings are always available, and the API is designed to be as flexible as possible.\nThe default storage/quantization level is hardware-dependant for efficiency, but `bf16` is recommended for most modern CPUs.\n\n```py\nindex = Index(\n    ndim=3, # Define the number of dimensions in input vectors\n    metric='cos', # Choose 'l2sq', 'ip', 'haversine' or other metric, default = 'cos'\n    dtype='bf16', # Store as 'f64', 'f32', 'f16', 'i8', 'b1'..., default = None\n    connectivity=16, # Optional: Limit number of neighbors per graph node\n    expansion_add=128, # Optional: Control the recall of indexing\n    expansion_search=64, # Optional: Control the quality of the search\n    multi=False, # Optional: Allow multiple vectors per key, default = False\n)\n```\n\n## Serialization & Serving `Index` from Disk\n\nUSearch supports multiple forms of serialization:\n\n- Into a __file__ defined with a path.\n- Into a __stream__ defined with a callback, serializing or reconstructing incrementally.\n- Into a __buffer__ of fixed length or a memory-mapped file that supports random access.\n\nThe latter allows you to serve indexes from external memory, enabling you to optimize your server choices for indexing speed and serving costs.\nThis can result in __20x cost reduction__ on AWS and other public clouds.\n\n```py\nindex.save(\"index.usearch\")\n\nloaded_copy = index.load(\"index.usearch\")\nview = Index.restore(\"index.usearch\", view=True)\n\nother_view = Index(ndim=..., metric=...)\nother_view.view(\"index.usearch\")\n```\n\n## Exact vs. Approximate Search\n\nApproximate search methods, such as HNSW, are predominantly used when an exact brute-force search becomes too resource-intensive.\nThis typically occurs when you have millions of entries in a collection.\nFor smaller collections, we offer a more direct approach with the `search` method.\n\n```py\nfrom usearch.index import search, MetricKind, Matches, BatchMatches\nimport numpy as np\n\n# Generate 10'000 random vectors with 1024 dimensions\nvectors = np.random.rand(10_000, 1024).astype(np.float32)\nvector = np.random.rand(1024).astype(np.float32)\n\none_in_many: Matches = search(vectors, vector, 50, MetricKind.L2sq, exact=True)\nmany_in_many: BatchMatches = search(vectors, vectors, 50, MetricKind.L2sq, exact=True)\n```\n\nIf you pass the `exact=True` argument, the system bypasses indexing altogether and performs a brute-force search through the entire dataset using SIMD-optimized similarity metrics from [SimSIMD](https://github.com/ashvardanian/simsimd).\nWhen compared to FAISS's `IndexFlatL2` in Google Colab, __[USearch may offer up to a 20x performance improvement](https://github.com/unum-cloud/usearch/issues/176#issuecomment-1666650778)__:\n\n- `faiss.IndexFlatL2`: __55.3 ms__.\n- `usearch.index.search`: __2.54 ms__.\n\n## User-Defined Metrics\n\nWhile most vector search packages concentrate on just two metrics, \"Inner Product distance\" and \"Euclidean distance\", USearch allows arbitrary user-defined metrics.\nThis flexibility allows you to customize your search for various applications, from computing geospatial coordinates with the rare [Haversine][haversine] distance to creating custom metrics for composite embeddings from multiple AI models, like joint image-text embeddings.\nYou can use [Numba][numba], [Cppyy][cppyy], or [PeachPy][peachpy] to define your [custom metric even in Python](https://unum-cloud.github.io/usearch/python#user-defined-metrics-and-jit-in-python):\n\n```py\nfrom numba import cfunc, types, carray\nfrom usearch.index import Index, MetricKind, MetricSignature, CompiledMetric\n\n@cfunc(types.float32(types.CPointer(types.float32), types.CPointer(types.float32)))\ndef python_inner_product(a, b):\n    a_array = carray(a, ndim)\n    b_array = carray(b, ndim)\n    c = 0.0\n    for i in range(ndim):\n        c += a_array[i] * b_array[i]\n    return 1 - c\n\nmetric = CompiledMetric(pointer=python_inner_product.address, kind=MetricKind.IP, signature=MetricSignature.ArrayArray)\nindex = Index(ndim=ndim, metric=metric, dtype=np.float32)\n```\n\nSimilar effect is even easier to achieve in C, C++, and Rust interfaces.\nMoreover, unlike older approaches indexing high-dimensional spaces, like KD-Trees and Locality Sensitive Hashing, HNSW doesn't require vectors to be identical in length.\nThey only have to be comparable.\nSo you can apply it in [obscure][obscure] applications, like searching for similar sets or fuzzy text matching, using [GZip][gzip-similarity] compression-ratio as a distance function.\n\n[haversine]: https://ashvardanian.com/posts/abusing-vector-search#geo-spatial-indexing\n[obscure]: https://ashvardanian.com/posts/abusing-vector-search\n[gzip-similarity]: https://twitter.com/LukeGessler/status/1679211291292889100?s=20\n\n[numba]: https://numba.readthedocs.io/en/stable/reference/jit-compilation.html#c-callbacks\n[cppyy]: https://cppyy.readthedocs.io/en/latest/\n[peachpy]: https://github.com/Maratyszcza/PeachPy\n\n## Filtering and Predicate Functions\n\nSometimes you may want to cross-reference search-results against some external database or filter them based on some criteria.\nIn most engines, you'd have to manually perform paging requests, successively filtering the results.\nIn USearch you can simply pass a predicate function to the search method, which will be applied directly during graph traversal.\nIn Rust that would look like this:\n\n```rust\nlet is_odd = |key: Key| key % 2 == 1;\nlet query = vec![0.2, 0.1, 0.2, 0.1, 0.3];\nlet results = index.filtered_search(&query, 10, is_odd).unwrap();\nassert!(\n    results.keys.iter().all(|&key| key % 2 == 1),\n    \"All keys must be odd\"\n);\n```\n\n## Memory Efficiency, Downcasting, and Quantization\n\nTraining a quantization model and dimension-reduction is a common approach to accelerate vector search.\nThose, however, are only sometimes reliable, can significantly affect the statistical properties of your data, and require regular adjustments if your distribution shifts.\nInstead, we have focused on high-precision arithmetic over low-precision downcasted vectors.\nThe same index, and `add` and `search` operations will automatically down-cast or up-cast between `f64_t`, `f32_t`, `f16_t`, `i8_t`, and single-bit `b1x8_t` representations.\nYou can use the following command to check, if hardware acceleration is enabled:\n\n```sh\n$ python -c 'from usearch.index import Index; print(Index(ndim=768, metric=\"cos\", dtype=\"f16\").hardware_acceleration)'\n> sapphire\n$ python -c 'from usearch.index import Index; print(Index(ndim=166, metric=\"tanimoto\").hardware_acceleration)'\n> ice\n```\n\nIn most cases, it's recommended to use half-precision floating-point numbers on modern hardware.\nWhen quantization is enabled, the \"get\"-like functions won't be able to recover the original data, so you may want to replicate the original vectors elsewhere.\nWhen quantizing to `i8_t` integers, note that it's only valid for cosine-like metrics.\nAs part of the quantization process, the vectors are normalized to unit length and later scaled to [-127, 127] range to occupy the full 8-bit range.\nWhen quantizing to `b1x8_t` single-bit representations, note that it's only valid for binary metrics like Jaccard, Hamming, etc.\nAs part of the quantization process, the scalar components greater than zero are set to `true`, and the rest to `false`.\n\n![USearch uint40_t support](https://github.com/unum-cloud/usearch/blob/main/assets/usearch-neighbor-types.png?raw=true)\n\nUsing smaller numeric types will save you RAM needed to store the vectors, but you can also compress the neighbors lists forming our proximity graphs.\nBy default, 32-bit `uint32_t` is used to enumerate those, which is not enough if you need to address over 4 Billion entries.\nFor such cases we provide a custom `uint40_t` type, that will still be 37.5% more space-efficient than the commonly used 8-byte integers, and will scale up to 1 Trillion entries.\n\n\n## `Indexes` for Multi-Index Lookups\n\nFor larger workloads targeting billions or even trillions of vectors, parallel multi-index lookups become invaluable.\nInstead of constructing one extensive index, you can build multiple smaller ones and view them together.\n\n```py\nfrom usearch.index import Indexes\n\nmulti_index = Indexes(\n    indexes: Iterable[usearch.index.Index] = [...],\n    paths: Iterable[os.PathLike] = [...],\n    view: bool = False,\n    threads: int = 0,\n)\nmulti_index.search(...)\n```\n\n## Clustering\n\nOnce the index is constructed, USearch can perform K-Nearest Neighbors Clustering much faster than standalone clustering libraries, like SciPy, \nUMap, and tSNE.\nSame for dimensionality reduction with PCA. \nEssentially, the `Index` itself can be seen as a clustering, allowing iterative deepening.\n\n```py\nclustering = index.cluster(\n    min_count=10, # Optional\n    max_count=15, # Optional\n    threads=..., # Optional\n)\n\n# Get the clusters and their sizes\ncentroid_keys, sizes = clustering.centroids_popularity\n\n# Use Matplotlib to draw a histogram\nclustering.plot_centroids_popularity()\n\n# Export a NetworkX graph of the clusters\ng = clustering.network\n\n# Get members of a specific cluster\nfirst_members = clustering.members_of(centroid_keys[0])\n\n# Deepen into that cluster, splitting it into more parts, all the same arguments supported\nsub_clustering = clustering.subcluster(min_count=..., max_count=...)\n```\n\nThe resulting clustering isn't identical to K-Means or other conventional approaches but serves the same purpose.\nAlternatively, using Scikit-Learn on a 1 Million point dataset, one may expect queries to take anywhere from minutes to hours, depending on the number of clusters you want to highlight.\nFor 50'000 clusters, the performance difference between USearch and conventional clustering methods may easily reach 100x.\n\n## Joins, One-to-One, One-to-Many, and Many-to-Many Mappings\n\nOne of the big questions these days is how AI will change the world of databases and data management.\nMost databases are still struggling to implement high-quality fuzzy search, and the only kind of joins they know are deterministic.\nA `join` differs from searching for every entry, requiring a one-to-one mapping banning collisions among separate search results.\n\n| Exact Search | Fuzzy Search | Semantic Search ? |\n| :----------: | :----------: | :---------------: |\n|  Exact Join  | Fuzzy Join ? | Semantic Join ??  |\n\nUsing USearch, one can implement sub-quadratic complexity approximate, fuzzy, and semantic joins.\nThis can be useful in any fuzzy-matching tasks common to Database Management Software.\n\n```py\nmen = Index(...)\nwomen = Index(...)\npairs: dict = men.join(women, max_proposals=0, exact=False)\n```\n\n> Read more in the post: [Combinatorial Stable Marriages for Semantic Search 💍](https://ashvardanian.com/posts/searching-stable-marriages)\n\n\n## Functionality\n\nBy now, the core functionality is supported across all bindings.\nBroader functionality is ported per request.\nIn some cases, like Batch operations, feature parity is meaningless, as the host language has full multi-threading capabilities and the USearch index structure is concurrent by design, so the users can implement batching/scheduling/load-balancing in the most optimal way for their applications.\n\n|                         | C++ 11 | Python 3 | C 99  | Java  | JavaScript | Rust  | GoLang | Swift |\n| :---------------------- | :----: | :------: | :---: | :---: | :--------: | :---: | :----: | :---: |\n| Add, search, remove     |   ✅    |    ✅     |   ✅   |   ✅   |     ✅      |   ✅   |   ✅    |   ✅   |\n| Save, load, view        |   ✅    |    ✅     |   ✅   |   ✅   |     ✅      |   ✅   |   ✅    |   ✅   |\n| User-defined metrics    |   ✅    |    ✅     |   ✅   |   ❌   |     ❌      |   ❌   |   ❌    |   ❌   |\n| Batch operations        |   ❌    |    ✅     |   ❌   |   ❌   |     ✅      |   ❌   |   ❌    |   ❌   |\n| Filter predicates       |   ✅    |    ❌     |   ✅   |   ❌   |     ❌      |   ✅   |   ❌    |   ❌   |\n| Joins                   |   ✅    |    ✅     |   ❌   |   ❌   |     ❌      |   ❌   |   ❌    |   ❌   |\n| Variable-length vectors |   ✅    |    ❌     |   ❌   |   ❌   |     ❌      |   ❌   |   ❌    |   ❌   |\n| 4B+ capacities          |   ✅    |    ❌     |   ❌   |   ❌   |     ❌      |   ❌   |   ❌    |   ❌   |\n\n## Application Examples\n\n### USearch + UForm + UCall = Multimodal Semantic Search\n\nAI has a growing number of applications, but one of the coolest classic ideas is to use it for Semantic Search.\nOne can take an encoder model, like the multi-modal [UForm](https://github.com/unum-cloud/uform), and a web-programming framework, like [UCall](https://github.com/unum-cloud/ucall), and build a text-to-image search platform in just 20 lines of Python.\n\n```python\nfrom ucall import Server\nfrom uform import get_model, Modality\nfrom usearch.index import Index\n\nimport numpy as np\nimport PIL as pil\n\nprocessors, models = get_model('unum-cloud/uform3-image-text-english-small')\nmodel_text = models[Modality.TEXT_ENCODER]\nmodel_image = models[Modality.IMAGE_ENCODER]\nprocessor_text = processors[Modality.TEXT_ENCODER]\nprocessor_image = processors[Modality.IMAGE_ENCODER]\n\nserver = Server()\nindex = Index(ndim=256)\n\n@server\ndef add(key: int, photo: pil.Image.Image):\n    image = processor_image(photo)\n    vector = model_image(image)\n    index.add(key, vector.flatten(), copy=True)\n\n@server\ndef search(query: str) -> np.ndarray:\n    tokens = processor_text(query)\n    vector = model_text(tokens)\n    matches = index.search(vector.flatten(), 3)\n    return matches.keys\n\nserver.run()\n```\n\nSimilar experiences can also be implemented in other languages and on the client side, removing the network latency.\nFor Swift and iOS, check out the [`ashvardanian/SwiftSemanticSearch`](https://github.com/ashvardanian/SwiftSemanticSearch) repository.\n\n<table>\n  <tr>\n    <td>\n      <img src=\"https://github.com/ashvardanian/ashvardanian/blob/master/demos/SwiftSemanticSearch-Dog.gif?raw=true\" alt=\"SwiftSemanticSearch demo Dog\">\n    </td>\n    <td>\n      <img src=\"https://github.com/ashvardanian/ashvardanian/blob/master/demos/SwiftSemanticSearch-Flowers.gif?raw=true\" alt=\"SwiftSemanticSearch demo with Flowers\">\n    </td>\n  </tr>\n</table>\n\nA more complete [demo with Streamlit is available on GitHub](https://github.com/ashvardanian/usearch-images).\nWe have pre-processed some commonly used datasets, cleaned the images, produced the vectors, and pre-built the index.\n\n| Dataset                             |            Modalities | Images |                              Download |\n| :---------------------------------- | --------------------: | -----: | ------------------------------------: |\n| [Unsplash][unsplash-25k-origin]     | Images & Descriptions |   25 K | [HuggingFace / Unum][unsplash-25k-hf] |\n| [Conceptual Captions][cc-3m-origin] | Images & Descriptions |    3 M |        [HuggingFace / Unum][cc-3m-hf] |\n| [Arxiv][arxiv-2m-origin]            |    Titles & Abstracts |    2 M |     [HuggingFace / Unum][arxiv-2m-hf] |\n\n[unsplash-25k-origin]: https://github.com/unsplash/datasets\n[cc-3m-origin]: https://huggingface.co/datasets/conceptual_captions\n[arxiv-2m-origin]: https://www.kaggle.com/datasets/Cornell-University/arxiv\n\n[unsplash-25k-hf]: https://huggingface.co/datasets/unum-cloud/ann-unsplash-25k\n[cc-3m-hf]: https://huggingface.co/datasets/unum-cloud/ann-cc-3m\n[arxiv-2m-hf]: https://huggingface.co/datasets/unum-cloud/ann-arxiv-2m\n\n### USearch + RDKit = Molecular Search\n\nComparing molecule graphs and searching for similar structures is expensive and slow.\nIt can be seen as a special case of the NP-Complete Subgraph Isomorphism problem.\nLuckily, domain-specific approximate methods exist.\nThe one commonly used in Chemistry is to generate structures from [SMILES][smiles] and later hash them into binary fingerprints.\nThe latter are searchable with binary similarity metrics, like the Tanimoto coefficient.\nBelow is an example using the RDKit package.\n\n```python\nfrom usearch.index import Index, MetricKind\nfrom rdkit import Chem\nfrom rdkit.Chem import AllChem\n\nimport numpy as np\n\nmolecules = [Chem.MolFromSmiles('CCOC'), Chem.MolFromSmiles('CCO')]\nencoder = AllChem.GetRDKitFPGenerator()\n\nfingerprints = np.vstack([encoder.GetFingerprint(x) for x in molecules])\nfingerprints = np.packbits(fingerprints, axis=1)\n\nindex = Index(ndim=2048, metric=MetricKind.Tanimoto)\nkeys = np.arange(len(molecules))\n\nindex.add(keys, fingerprints)\nmatches = index.search(fingerprints, 10)\n```\n\nThat method was used to build the [\"USearch Molecules\"](https://github.com/ashvardanian/usearch-molecules), one of the largest Chem-Informatics datasets, containing 7 billion small molecules and 28 billion fingerprints.\n\n[smiles]: https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system\n[rdkit-fingerprints]: https://www.rdkit.org/docs/RDKit_Book.html#additional-information-about-the-fingerprints\n\n### USearch + POI Coordinates = GIS Applications\n\nSimilar to Vector and Molecule search, USearch can be used for Geospatial Information Systems.\nThe Haversine distance is available out of the box, but you can also define more complex relationships, like the Vincenty formula, that accounts for the Earth's oblateness.\n\n```py\nfrom numba import cfunc, types, carray\nimport math\n\n# Define the dimension as 2 for latitude and longitude\nndim = 2\n\n# Signature for the custom metric\nsignature = types.float32(\n    types.CPointer(types.float32),\n    types.CPointer(types.float32))\n\n# WGS-84 ellipsoid parameters\na = 6378137.0  # major axis in meters\nf = 1 / 298.257223563  # flattening\nb = (1 - f) * a  # minor axis\n\ndef vincenty_distance(a_ptr, b_ptr):\n    a_array = carray(a_ptr, ndim)\n    b_array = carray(b_ptr, ndim)\n    lat1, lon1, lat2, lon2 = a_array[0], a_array[1], b_array[0], b_array[1]\n    L, U1, U2 = lon2 - lon1, math.atan((1 - f) * math.tan(lat1)), math.atan((1 - f) * math.tan(lat2))\n    sinU1, cosU1, sinU2, cosU2 = math.sin(U1), math.cos(U1), math.sin(U2), math.cos(U2)\n    lambda_, iterLimit = L, 100\n    while iterLimit > 0:\n        iterLimit -= 1\n        sinLambda, cosLambda = math.sin(lambda_), math.cos(lambda_)\n        sinSigma = math.sqrt((cosU2 * sinLambda) ** 2 + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda) ** 2)\n        if sinSigma == 0: return 0.0  # Co-incident points\n        cosSigma, sigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda, math.atan2(sinSigma, cosSigma)\n        sinAlpha, cos2Alpha = cosU1 * cosU2 * sinLambda / sinSigma, 1 - (cosU1 * cosU2 * sinLambda / sinSigma) ** 2\n        cos2SigmaM = cosSigma - 2 * sinU1 * sinU2 / cos2Alpha if not math.isnan(cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) else 0  # Equatorial line\n        C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha))\n        lambda_, lambdaP = L + (1 - C) * f * (sinAlpha * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM ** 2)))), lambda_\n        if abs(lambda_ - lambdaP) <= 1e-12: break\n    if iterLimit == 0: return float('nan')  # formula failed to converge\n    u2 = cos2Alpha * (a ** 2 - b ** 2) / (b ** 2)\n    A = 1 + u2 / 16384 * (4096 + u2 * (-768 + u2 * (320 - 175 * u2)))\n    B = u2 / 1024 * (256 + u2 * (-128 + u2 * (74 - 47 * u2)))\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM ** 2) - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma ** 2) * (-3 + 4 * cos2SigmaM ** 2)))\n    s = b * A * (sigma - deltaSigma)\n    return s / 1000.0  # Distance in kilometers\n\n# Example usage:\nindex = Index(ndim=ndim, metric=CompiledMetric(\n    pointer=vincenty_distance.address,\n    kind=MetricKind.Haversine,\n    signature=MetricSignature.ArrayArray,\n))\n```\n\n## Integrations & Users\n\n- [x] ClickHouse: [C++](https://github.com/ClickHouse/ClickHouse/pull/53447), [docs](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/annindexes#usearch).\n- [x] DuckDB: [post](https://duckdb.org/2024/05/03/vector-similarity-search-vss.html).\n- [x] Google: [UniSim](https://github.com/google/unisim), [RetSim](https://arxiv.org/abs/2311.17264) paper.\n- [x] LanternDB: [C++](https://github.com/lanterndata/lantern), [Rust](https://github.com/lanterndata/lantern_extras), [docs](https://lantern.dev/blog/hnsw-index-creation).\n- [x] LangChain: [Python](https://github.com/langchain-ai/langchain/releases/tag/v0.0.257) and [JavaScript](https://github.com/hwchase17/langchainjs/releases/tag/0.0.125).\n- [x] Microsoft Semantic Kernel: [Python](https://github.com/microsoft/semantic-kernel/releases/tag/python-0.3.9.dev) and C#.\n- [x] GPTCache: [Python](https://github.com/zilliztech/GPTCache/releases/tag/0.1.29).\n- [x] Sentence-Transformers: Python [docs](https://www.sbert.net/docs/package_reference/quantization.html#sentence_transformers.quantization.semantic_search_usearch).\n- [x] Pathway: [Rust](https://github.com/pathwaycom/pathway).\n- [x] Memgraph: [C++ MVP](https://github.com/memgraph/memgraph/pull/2406), [C++ Stable](https://github.com/memgraph/memgraph/pull/2500), [docs](https://memgraph.com/docs/querying/vector-search)\n- [x] TiDB: [C++](https://github.com/pingcap/tiflash/pull/9486), [docs](https://docs.pingcap.com/tidb/stable/vector-search-index#vector-search-index)\n\n## Citations\n\n```bibtex\n@software{Vardanian_USearch_2023,\ndoi = {10.5281/zenodo.7949416},\nauthor = {Vardanian, Ash},\ntitle = {{USearch by Unum Cloud}},\nurl = {https://github.com/unum-cloud/usearch},\nversion = {2.16.10},\nyear = {2023},\nmonth = oct,\n}\n```\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0078125,
          "content": "2.16.10\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "binding.gyp",
          "type": "blob",
          "size": 4.6865234375,
          "content": "{\n    \"targets\": [\n        {\n            \"target_name\": \"usearch\",\n            \"sources\": [\"javascript/lib.cpp\", \"simsimd/c/lib.c\"],\n            \"cflags\": [\n                \"-fexceptions\",\n                \"-Wno-unknown-pragmas\",\n                \"-Wno-maybe-uninitialized\",\n            ],\n            \"cflags_cc\": [\n                \"-fexceptions\",\n                \"-Wno-unknown-pragmas\",\n                \"-Wno-maybe-uninitialized\",\n                \"-std=c++17\",\n            ],\n            \"include_dirs\": [\n                \"<!@(node -p \\\"require('node-addon-api').include\\\")\",\n                \"include\",\n                \"fp16/include\",\n                \"simsimd/include\",\n            ],\n            \"dependencies\": [\"<!(node -p \\\"require('node-addon-api').gyp\\\")\"],\n            \"xcode_settings\": {\n                \"GCC_ENABLE_CPP_EXCEPTIONS\": \"YES\",\n                \"CLANG_CXX_LIBRARY\": \"libc++\",\n                \"MACOSX_DEPLOYMENT_TARGET\": \"11.0\",\n                \"OTHER_CFLAGS\": [\"-arch arm64\", \"-arch x86_64\"],\n                \"OTHER_LDFLAGS\": [\"-arch arm64\", \"-arch x86_64\"],\n            },\n            \"msvs_settings\": {\n                \"VCCLCompilerTool\": {\n                    \"ExceptionHandling\": 1,\n                    \"AdditionalOptions\": [\"-std:c++17\"],\n                }\n            },\n            \"conditions\": [\n                [\n                    'OS==\"linux\"',\n                    {\n                        \"cflags_cc\": [\n                            '<!(if [ \"$USEARCH_USE_OPENMP\" = \"1\" ]; then echo \\'-fopenmp\\'; fi)',\n                        ],\n                        \"ldflags\": ['<!(if [ \"$USEARCH_USE_OPENMP\" = \"1\" ]; then echo \\'-lgomp\\'; fi)'],\n                        \"defines\": [\n                            \"USEARCH_USE_OPENMP=<!(echo ${USEARCH_USE_OPENMP:-0})\",\n                            \"USEARCH_USE_SIMSIMD=<!(echo ${USEARCH_USE_SIMSIMD:-1})\",\n                            \"USEARCH_USE_FP16LIB=<!(echo ${USEARCH_USE_FP16LIB:-1})\",\n                            \"SIMSIMD_TARGET_NEON=<!(echo ${SIMSIMD_TARGET_NEON:-1})\",\n                            \"SIMSIMD_TARGET_NEON_BF16=<!(echo ${SIMSIMD_TARGET_NEON_BF16:-0})\",\n                            \"SIMSIMD_TARGET_SVE=<!(echo ${SIMSIMD_TARGET_SVE:-1})\",\n                            \"SIMSIMD_TARGET_SVE_BF16=<!(echo ${SIMSIMD_TARGET_SVE_BF16:-0})\",\n                            \"SIMSIMD_TARGET_HASWELL=<!(echo ${SIMSIMD_TARGET_HASWELL:-1})\",\n                            \"SIMSIMD_TARGET_SKYLAKE=<!(echo ${SIMSIMD_TARGET_SKYLAKE:-1})\",\n                            \"SIMSIMD_TARGET_ICE=<!(echo ${SIMSIMD_TARGET_ICE:-1})\",\n                            \"SIMSIMD_TARGET_GENOA=<!(echo ${SIMSIMD_TARGET_GENOA:-1})\",\n                            \"SIMSIMD_TARGET_SAPPHIRE=<!(echo ${SIMSIMD_TARGET_SAPPHIRE:-1})\",\n                        ],\n                    },\n                ],\n                [\n                    'OS==\"mac\"',\n                    {\n                        \"defines\": [\n                            \"USEARCH_USE_OPENMP=<!(echo ${USEARCH_USE_OPENMP:-0})\",\n                            \"USEARCH_USE_SIMSIMD=<!(echo ${USEARCH_USE_SIMSIMD:-0})\",\n                            \"USEARCH_USE_FP16LIB=<!(echo ${USEARCH_USE_FP16LIB:-1})\",\n                            \"SIMSIMD_TARGET_NEON=<!(echo ${SIMSIMD_TARGET_NEON:-1})\",\n                            \"SIMSIMD_TARGET_NEON_BF16=<!(echo ${SIMSIMD_TARGET_NEON_BF16:-0})\",\n                            \"SIMSIMD_TARGET_SVE=<!(echo ${SIMSIMD_TARGET_SVE:-0})\",\n                            \"SIMSIMD_TARGET_HASWELL=<!(echo ${SIMSIMD_TARGET_HASWELL:-1})\",\n                            \"SIMSIMD_TARGET_SKYLAKE=<!(echo ${SIMSIMD_TARGET_SKYLAKE:-0})\",\n                            \"SIMSIMD_TARGET_ICE=<!(echo ${SIMSIMD_TARGET_ICE:-0})\",\n                            \"SIMSIMD_TARGET_GENOA=<!(echo ${SIMSIMD_TARGET_GENOA:-0})\",\n                            \"SIMSIMD_TARGET_SAPPHIRE=<!(echo ${SIMSIMD_TARGET_SAPPHIRE:-0})\",\n                        ],\n                    },\n                ],\n                [\n                    'OS==\"win\"',\n                    {\n                        \"defines\": [\n                            \"USEARCH_USE_OPENMP=0\",\n                            \"USEARCH_USE_SIMSIMD=0\",\n                            \"USEARCH_USE_FP16LIB=1\",\n                            \"SIMSIMD_TARGET_SKYLAKE=0\",\n                            \"SIMSIMD_TARGET_ICE=0\",\n                            \"SIMSIMD_TARGET_SAPPHIRE=0\",\n                            \"SIMSIMD_TARGET_GENOA=0\",\n                            \"SIMSIMD_TARGET_SVE=0\",\n                            \"SIMSIMD_TARGET_HASWELL=0\",\n                            \"SIMSIMD_TARGET_NEON=0\",\n                            \"SIMSIMD_TARGET_NEON_BF16=0\",\n                        ],\n                    },\n                ],\n            ],\n        }\n    ]\n}\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 6.26171875,
          "content": "import org.gradle.internal.jvm.Jvm\n\nplugins {\n    id 'java-library'\n    id 'c'\n    id 'cpp'\n    id 'maven-publish'\n    id 'signing'\n}\n\ngroup \"cloud.unum\"\nversion = file(\"VERSION\").text.trim()\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_18\n    targetCompatibility = JavaVersion.VERSION_18\n}\n\nrepositories {\n    mavenCentral()\n}\n\nsourceSets {\n    main {\n        java {\n            srcDir \"java/\"\n            exclude \"test/\"\n        }\n        // Ensure native libraries are included in the main source set\n        resources {\n            srcDirs \"$buildDir/libs\"\n            include \"usearch/**\"\n        }\n    }\n    test {\n        java {\n            srcDir \"java/test\"\n        }\n    }\n}\n\ntask sourcesJar(type: Jar, dependsOn: classes) {\n    archiveClassifier.set('sources')\n    from sourceSets.main.allSource\n}\n\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    archiveClassifier.set('javadoc')\n    from javadoc.destinationDir\n}\n\ndependencies {\n    testImplementation('junit:junit:4.13.2')\n}\n\nmodel {\n\n    components {\n        usearch(NativeLibrarySpec) {\n            sources {\n                cpp {\n                    source {\n                        srcDirs \"java/cloud/unum/usearch\"\n                        include \"**/*.cpp\"\n                    }\n                    exportedHeaders {\n                        srcDirs \"include\", \"fp16/include\", \"simsimd/include\", \"${Jvm.current().javaHome}/include\"\n                    }\n                }\n                c {\n                    source {\n                        srcDirs \"simsimd/c/\"\n                        include \"**/*.c\"\n                    }\n                    exportedHeaders {\n                        srcDirs \"simsimd/include\"\n                    }\n                }\n            }\n            binaries.withType(StaticLibraryBinarySpec) {\n                buildable = false\n            }\n            binaries.withType(SharedLibraryBinarySpec) {\n                if (targetPlatform.operatingSystem.linux) {\n                    cppCompiler.args '-I', \"${Jvm.current().javaHome}/include/linux\"\n                    cppCompiler.args '-D_FILE_OFFSET_BITS=64'\n                    cppCompiler.args '-std=c++11'\n                } else if (targetPlatform.operatingSystem.macOsX) {\n                    cppCompiler.args '-I', \"${Jvm.current().javaHome}/include/darwin\"\n                    cppCompiler.args '-D_FILE_OFFSET_BITS=64'\n                    cppCompiler.args '-std=c++11'\n                } else if (targetPlatform.operatingSystem.windows){\n                    cppCompiler.args \"-I${Jvm.current().javaHome}/include/win32\"\n                    cppCompiler.args '/std:c++11'\n                }\n                cppCompiler.args '-DUSEARCH_USE_FP16LIB=1'\n                cppCompiler.args '-DUSEARCH_USE_SIMSIMD=1'\n                cppCompiler.args '-DSIMSIMD_DYNAMIC_DISPATCH=1'\n                cppCompiler.args '-DSIMSIMD_NATIVE_BF16=0'\n                cppCompiler.args '-DSIMSIMD_NATIVE_F16=0'\n            }\n        }\n    }\n\n    toolChains {\n        clang(Clang)\n        gcc(Gcc) {\n            target(\"linux_aarch64\") {\n                cppCompiler.withArguments { args ->\n                    args << \"-march=armv8-a\"\n                }\n            }\n        }\n    }    \n}\n\ntest {\n    forkEvery 1\n\n    dependsOn jar\n\n    // Rearrange test classpath, add compiled JAR instead of main classes\n    classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(jar.archiveFile)\n\n    // Enable detailed test logging\n    testLogging {\n        // Ensure that we get output from all tests, not just failing ones\n        showStandardStreams = true\n        exceptionFormat = 'full' // Can be 'short', 'full', or 'summary'\n\n        // More detailed test result logging\n        events \"passed\", \"skipped\", \"failed\"\n    }\n}\n\njar {\n    dependsOn(\"usearchSharedLibrary\")\n    from(\"$buildDir/libs/usearch/shared\") {\n        include \"libusearch.so\", \"libusearch.dylib\", \"libusearch.dll\"\n        into \"usearch\"\n    }\n    from sourceSets.main.output\n}\n\nsigning {\n    def signingKey = findProperty(\"signingKey\")\n    def signingPassword = findProperty(\"signingPassword\")\n    useInMemoryPgpKeys(signingKey, signingPassword)\n    sign publishing.publications\n}\n\npublishing {\n    publications {\n        library(MavenPublication) {\n            from components.java\n            \n            artifact sourcesJar\n            artifact javadocJar\n\n            signing {\n                sign publishing.publications.library\n            }\n\n            pom {\n                name = \"USearch\"\n                description = \"Smaller & Faster Single-File Vector Search Engine from Unum\"\n                url = \"https://github.com/unum-cloud/usearch\"\n\n                licenses {\n                    license {\n                        name = 'The Apache License, Version 2.0'\n                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    }\n                }\n\n                scm {\n                    connection = 'scm:git:git://github.com/unum-cloud/usearch.git'\n                    developerConnection = 'scm:git:ssh://github.com/unum-cloud/usearch.git'\n                    url = 'https://github.com/unum-cloud/usearch'\n                }\n\n                developers {\n                    developer {\n                        id = 'ashvardanian'\n                        name = 'Ash Vardanian'\n                        email = 'ash.vardanian@unum.cloud'\n                    }\n                }\n            }\n        }\n    }\n\n\n    // Publishing to GitHub is much easier ;)\n    repositories {\n        maven {\n            name = \"OSSRH\"\n            url = \"https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/\"\n            credentials {\n                username = System.getenv(\"MAVEN_USERNAME\")\n                password = System.getenv(\"MAVEN_PASSWORD\")\n            }\n        }\n    }\n\n    repositories {\n        maven {\n            name = \"GitHubPackages\"\n            url = \"https://maven.pkg.github.com/unum-cloud/usearch\"\n            credentials {\n                username = System.getenv(\"GITHUB_ACTOR\")\n                password = System.getenv(\"GITHUB_TOKEN\")\n            }\n        }\n    }\n}\n\n// Ensure that the native library is built before the Java code\ncompileJava.dependsOn tasks.withType(SharedLibraryBinarySpec)\ntasks.named(\"processResources\").configure {\n    dependsOn tasks.named(\"linkUsearchSharedLibrary\")\n}\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 4.3720703125,
          "content": "fn main() {\n    let mut build = cxx_build::bridge(\"rust/lib.rs\");\n\n    build\n        .file(\"rust/lib.cpp\")\n        .flag_if_supported(\"-Wno-unknown-pragmas\")\n        .warnings(false)\n        .include(\"include\")\n        .include(\"rust\")\n        .include(\"fp16/include\")\n        .include(\"simsimd/include\");\n\n    // Check for optional features\n    if cfg!(feature = \"openmp\") {\n        build.define(\"USEARCH_USE_OPENMP\", \"1\");\n    } else {\n        build.define(\"USEARCH_USE_OPENMP\", \"0\");\n    }\n\n    if cfg!(feature = \"fp16lib\") {\n        build.define(\"USEARCH_USE_FP16LIB\", \"1\");\n    } else {\n        build.define(\"USEARCH_USE_FP16LIB\", \"0\");\n    }\n\n    // Define all possible SIMD targets as 1\n    let target_arch = std::env::var(\"CARGO_CFG_TARGET_ARCH\").unwrap_or_default();\n\n    let mut flags_to_try;\n    if cfg!(feature = \"simsimd\") {\n        build\n            .file(\"simsimd/c/lib.c\")\n            .define(\"USEARCH_USE_SIMSIMD\", \"1\")\n            .define(\"SIMSIMD_DYNAMIC_DISPATCH\", \"1\")\n            .define(\"SIMSIMD_NATIVE_BF16\", \"0\")\n            .define(\"SIMSIMD_NATIVE_F16\", \"0\");\n        flags_to_try = match target_arch.as_str() {\n            \"arm\" | \"aarch64\" => vec![\n                \"SIMSIMD_TARGET_NEON\",\n                \"SIMSIMD_TARGET_NEON_I8\",\n                \"SIMSIMD_TARGET_NEON_F16\",\n                \"SIMSIMD_TARGET_NEON_BF16\",\n                \"SIMSIMD_TARGET_SVE\",\n                \"SIMSIMD_TARGET_SVE_I8\",\n                \"SIMSIMD_TARGET_SVE_F16\",\n                \"SIMSIMD_TARGET_SVE_BF16\",\n            ],\n            _ => vec![\n                \"SIMSIMD_TARGET_HASWELL\",\n                \"SIMSIMD_TARGET_SKYLAKE\",\n                \"SIMSIMD_TARGET_ICE\",\n                \"SIMSIMD_TARGET_GENOA\",\n                \"SIMSIMD_TARGET_SAPPHIRE\",\n            ],\n        };\n    } else {\n        build.define(\"USEARCH_USE_SIMSIMD\", \"0\");\n        flags_to_try = vec![];\n    }\n\n    let target_os = std::env::var(\"CARGO_CFG_TARGET_OS\").unwrap();\n    // Conditional compilation depending on the target operating system.\n    if target_os == \"linux\" || target_os == \"android\" {\n        build\n            .flag_if_supported(\"-std=c++17\")\n            .flag_if_supported(\"-O3\")\n            .flag_if_supported(\"-ffast-math\")\n            .flag_if_supported(\"-fdiagnostics-color=always\")\n            .flag_if_supported(\"-g1\"); // Simplify debugging\n    } else if target_os == \"macos\" {\n        build\n            .flag_if_supported(\"-mmacosx-version-min=10.15\")\n            .flag_if_supported(\"-std=c++17\")\n            .flag_if_supported(\"-O3\")\n            .flag_if_supported(\"-ffast-math\")\n            .flag_if_supported(\"-fcolor-diagnostics\")\n            .flag_if_supported(\"-g1\"); // Simplify debugging\n    } else if target_os == \"windows\" {\n        build\n            .flag_if_supported(\"/std:c++17\")\n            .flag_if_supported(\"/O2\")\n            .flag_if_supported(\"/fp:fast\")\n            .flag_if_supported(\"/W1\") // Reduce warnings verbosity\n            .flag_if_supported(\"/EHsc\")\n            .flag_if_supported(\"/MD\")\n            .flag_if_supported(\"/permissive-\")\n            .flag_if_supported(\"/sdl-\")\n            .define(\"_ALLOW_RUNTIME_LIBRARY_MISMATCH\", None)\n            .define(\"_ALLOW_POINTER_TO_CONST_MISMATCH\", None);\n    }\n\n    let base_build = build.clone();\n\n    let mut pop_flag = None;\n    loop {\n        let mut sub_build = base_build.clone();\n        for flag in &flags_to_try {\n            sub_build.define(flag, \"1\");\n        }\n        let result = sub_build.try_compile(\"usearch\");\n        if result.is_err() {\n            if let Some(flag) = pop_flag {\n                println!(\n                    \"cargo:warning=Failed to compile after disabling {:?}, trying next configuration...\",\n                    flag\n                );\n            } else {\n                if !flags_to_try.is_empty() {\n                    print!(\"cargo:warning=Failed to compile with all SIMD backends...\");\n                }\n            }\n\n            pop_flag = flags_to_try.pop();\n            if pop_flag.is_none() {\n                result.unwrap();\n            }\n        } else {\n            break;\n        }\n    }\n\n    println!(\"cargo:rerun-if-changed=rust/lib.rs\");\n    println!(\"cargo:rerun-if-changed=rust/lib.cpp\");\n    println!(\"cargo:rerun-if-changed=rust/lib.hpp\");\n    println!(\"cargo:rerun-if-changed=include/index_plugins.hpp\");\n    println!(\"cargo:rerun-if-changed=include/index_dense.hpp\");\n    println!(\"cargo:rerun-if-changed=include/usearch/index.hpp\");\n}\n"
        },
        {
          "name": "c",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "conanfile.py",
          "type": "blob",
          "size": 0.76953125,
          "content": "from conans import ConanFile\n\n\nrequired_conan_version = \">=1.53.0\"\n\n\nclass USearchConan(ConanFile):\n\n    name = \"usearch\"\n    version = \"2.16.10\"\n    license = \"Apache-2.0\"\n    description = \"Smaller & Faster Single-File Vector Search Engine from Unum\"\n    homepage = \"https://github.com/unum-cloud/usearch\"\n    topics = (\"search\", \"vector\", \"simd\")\n    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n    url = \"https://github.com/conan-io/conan-center-index\"\n    package_type = \"header-library\"\n\n    # No settings/options are necessary, this is header only\n    # Potentially add unit-tests in the future:\n    # https://docs.conan.io/1/howtos/header_only.html#with-unit-tests\n    exports_sources = \"include/*\"\n    no_copy_source = True\n\n    def package(self):\n        self.copy(\"*.h\")\n"
        },
        {
          "name": "cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "csharp",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fp16",
          "type": "commit",
          "content": null
        },
        {
          "name": "golang",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "javascript",
          "type": "tree",
          "content": null
        },
        {
          "name": "objc",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 63.4951171875,
          "content": "{\n    \"name\": \"usearch\",\n    \"version\": \"2.16.10\",\n    \"lockfileVersion\": 3,\n    \"requires\": true,\n    \"packages\": {\n        \"\": {\n            \"name\": \"usearch\",\n            \"version\": \"2.15.1\",\n            \"hasInstallScript\": true,\n            \"license\": \"Apache 2.0\",\n            \"dependencies\": {\n                \"bindings\": \"^1.5.0\",\n                \"node-addon-api\": \"^8.0.0\",\n                \"node-gyp-build\": \"^4.8.0\"\n            },\n            \"devDependencies\": {\n                \"@types/bindings\": \"^1.5.5\",\n                \"@types/node\": \"^20.12.4\",\n                \"node-gyp\": \"^10.1.0\",\n                \"prebuildify\": \"^6.0.0\",\n                \"typescript\": \"^5.4.4\"\n            },\n            \"engines\": {\n                \"node\": \"~10 >=10.20 || >=12.17\"\n            }\n        },\n        \"node_modules/@isaacs/cliui\": {\n            \"version\": \"8.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n            \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"string-width\": \"^5.1.2\",\n                \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n                \"strip-ansi\": \"^7.0.1\",\n                \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n                \"wrap-ansi\": \"^8.1.0\",\n                \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@npmcli/agent\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@npmcli/agent/-/agent-2.2.0.tgz\",\n            \"integrity\": \"sha512-2yThA1Es98orMkpSLVqlDZAMPK3jHJhifP2gnNUdk1754uZ8yI5c+ulCoVG+WlntQA6MzhrURMXjSd9Z7dJ2/Q==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"agent-base\": \"^7.1.0\",\n                \"http-proxy-agent\": \"^7.0.0\",\n                \"https-proxy-agent\": \"^7.0.1\",\n                \"lru-cache\": \"^10.0.1\",\n                \"socks-proxy-agent\": \"^8.0.1\"\n            },\n            \"engines\": {\n                \"node\": \"^16.14.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/@npmcli/agent/node_modules/lru-cache\": {\n            \"version\": \"10.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.1.0.tgz\",\n            \"integrity\": \"sha512-/1clY/ui8CzjKFyjdvwPWJUYKiFVXG2I2cY0ssG7h4+hwk+XOIX7ZSG9Q7TW8TW3Kp3BUSqgFWBLgL4PJ+Blag==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \"14 || >=16.14\"\n            }\n        },\n        \"node_modules/@npmcli/fs\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/@npmcli/fs/-/fs-3.1.0.tgz\",\n            \"integrity\": \"sha512-7kZUAaLscfgbwBQRbvdMYaZOWyMEcPTH/tJjnyAWJ/dvvs9Ef+CERx/qJb9GExJpl1qipaDGn7KqHnFGGixd0w==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"semver\": \"^7.3.5\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/@pkgjs/parseargs\": {\n            \"version\": \"0.11.0\",\n            \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n            \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n            \"dev\": true,\n            \"optional\": true,\n            \"engines\": {\n                \"node\": \">=14\"\n            }\n        },\n        \"node_modules/@types/bindings\": {\n            \"version\": \"1.5.5\",\n            \"resolved\": \"https://registry.npmjs.org/@types/bindings/-/bindings-1.5.5.tgz\",\n            \"integrity\": \"sha512-y59PRZBTo2/HuN94qRjyJD+465vGoXMsqz9MMJDbtJL9oT5/B+tAL6c3k10epIinC2/BBkLqKzKC6keukl8wdQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@types/node\": \"*\"\n            }\n        },\n        \"node_modules/@types/node\": {\n            \"version\": \"20.12.4\",\n            \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.12.4.tgz\",\n            \"integrity\": \"sha512-E+Fa9z3wSQpzgYQdYmme5X3OTuejnnTx88A6p6vkkJosR3KBz+HpE3kqNm98VE6cfLFcISx7zW7MsJkH6KwbTw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"undici-types\": \"~5.26.4\"\n            }\n        },\n        \"node_modules/abbrev\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-2.0.0.tgz\",\n            \"integrity\": \"sha512-6/mh1E2u2YgEsCHdY0Yx5oW+61gZU+1vXaoiHHrpKeuRNNgFvS+/jrwHiQhB5apAf5oB7UB7E19ol2R2LKH8hQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/agent-base\": {\n            \"version\": \"7.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-7.1.0.tgz\",\n            \"integrity\": \"sha512-o/zjMZRhJxny7OyEF+Op8X+efiELC7k7yOjMzgfzVqOzXqkBkWI79YoTdOtsuWd5BWhAGAuOY/Xa6xpiaWXiNg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"debug\": \"^4.3.4\"\n            },\n            \"engines\": {\n                \"node\": \">= 14\"\n            }\n        },\n        \"node_modules/aggregate-error\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz\",\n            \"integrity\": \"sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"clean-stack\": \"^2.0.0\",\n                \"indent-string\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/ansi-regex\": {\n            \"version\": \"6.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n            \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n            }\n        },\n        \"node_modules/ansi-styles\": {\n            \"version\": \"6.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n            \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n            }\n        },\n        \"node_modules/balanced-match\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n            \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n            \"dev\": true\n        },\n        \"node_modules/base64-js\": {\n            \"version\": \"1.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n            \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ]\n        },\n        \"node_modules/bindings\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz\",\n            \"integrity\": \"sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==\",\n            \"dependencies\": {\n                \"file-uri-to-path\": \"1.0.0\"\n            }\n        },\n        \"node_modules/bl\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/bl/-/bl-4.1.0.tgz\",\n            \"integrity\": \"sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"buffer\": \"^5.5.0\",\n                \"inherits\": \"^2.0.4\",\n                \"readable-stream\": \"^3.4.0\"\n            }\n        },\n        \"node_modules/brace-expansion\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n            \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"balanced-match\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/buffer\": {\n            \"version\": \"5.7.1\",\n            \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n            \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ],\n            \"dependencies\": {\n                \"base64-js\": \"^1.3.1\",\n                \"ieee754\": \"^1.1.13\"\n            }\n        },\n        \"node_modules/cacache\": {\n            \"version\": \"18.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/cacache/-/cacache-18.0.2.tgz\",\n            \"integrity\": \"sha512-r3NU8h/P+4lVUHfeRw1dtgQYar3DZMm4/cm2bZgOvrFC/su7budSOeqh52VJIC4U4iG1WWwV6vRW0znqBvxNuw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@npmcli/fs\": \"^3.1.0\",\n                \"fs-minipass\": \"^3.0.0\",\n                \"glob\": \"^10.2.2\",\n                \"lru-cache\": \"^10.0.1\",\n                \"minipass\": \"^7.0.3\",\n                \"minipass-collect\": \"^2.0.1\",\n                \"minipass-flush\": \"^1.0.5\",\n                \"minipass-pipeline\": \"^1.2.4\",\n                \"p-map\": \"^4.0.0\",\n                \"ssri\": \"^10.0.0\",\n                \"tar\": \"^6.1.11\",\n                \"unique-filename\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \"^16.14.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/cacache/node_modules/lru-cache\": {\n            \"version\": \"10.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.1.0.tgz\",\n            \"integrity\": \"sha512-/1clY/ui8CzjKFyjdvwPWJUYKiFVXG2I2cY0ssG7h4+hwk+XOIX7ZSG9Q7TW8TW3Kp3BUSqgFWBLgL4PJ+Blag==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \"14 || >=16.14\"\n            }\n        },\n        \"node_modules/chownr\": {\n            \"version\": \"1.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz\",\n            \"integrity\": \"sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==\",\n            \"dev\": true\n        },\n        \"node_modules/clean-stack\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz\",\n            \"integrity\": \"sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/color-convert\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n            \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"color-name\": \"~1.1.4\"\n            },\n            \"engines\": {\n                \"node\": \">=7.0.0\"\n            }\n        },\n        \"node_modules/color-name\": {\n            \"version\": \"1.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n            \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n            \"dev\": true\n        },\n        \"node_modules/cross-spawn\": {\n            \"version\": \"7.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n            \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"path-key\": \"^3.1.0\",\n                \"shebang-command\": \"^2.0.0\",\n                \"which\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/cross-spawn/node_modules/isexe\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n            \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n            \"dev\": true\n        },\n        \"node_modules/cross-spawn/node_modules/which\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n            \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"isexe\": \"^2.0.0\"\n            },\n            \"bin\": {\n                \"node-which\": \"bin/node-which\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/debug\": {\n            \"version\": \"4.3.4\",\n            \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n            \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ms\": \"2.1.2\"\n            },\n            \"engines\": {\n                \"node\": \">=6.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"supports-color\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/eastasianwidth\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n            \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n            \"dev\": true\n        },\n        \"node_modules/emoji-regex\": {\n            \"version\": \"9.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n            \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n            \"dev\": true\n        },\n        \"node_modules/encoding\": {\n            \"version\": \"0.1.13\",\n            \"resolved\": \"https://registry.npmjs.org/encoding/-/encoding-0.1.13.tgz\",\n            \"integrity\": \"sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==\",\n            \"dev\": true,\n            \"optional\": true,\n            \"dependencies\": {\n                \"iconv-lite\": \"^0.6.2\"\n            }\n        },\n        \"node_modules/end-of-stream\": {\n            \"version\": \"1.4.4\",\n            \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n            \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"once\": \"^1.4.0\"\n            }\n        },\n        \"node_modules/env-paths\": {\n            \"version\": \"2.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz\",\n            \"integrity\": \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/err-code\": {\n            \"version\": \"2.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/err-code/-/err-code-2.0.3.tgz\",\n            \"integrity\": \"sha512-2bmlRpNKBxT/CRmPOlyISQpNj+qSeYvcym/uT0Jx2bMOlKLtSy1ZmLuVxSEKKyor/N5yhvp/ZiG1oE3DEYMSFA==\",\n            \"dev\": true\n        },\n        \"node_modules/execspawn\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/execspawn/-/execspawn-1.0.1.tgz\",\n            \"integrity\": \"sha512-s2k06Jy9i8CUkYe0+DxRlvtkZoOkwwfhB+Xxo5HGUtrISVW2m98jO2tr67DGRFxZwkjQqloA3v/tNtjhBRBieg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"util-extend\": \"^1.0.1\"\n            }\n        },\n        \"node_modules/exponential-backoff\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/exponential-backoff/-/exponential-backoff-3.1.1.tgz\",\n            \"integrity\": \"sha512-dX7e/LHVJ6W3DE1MHWi9S1EYzDESENfLrYohG2G++ovZrYOkm4Knwa0mc1cn84xJOR4KEU0WSchhLbd0UklbHw==\",\n            \"dev\": true\n        },\n        \"node_modules/file-uri-to-path\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz\",\n            \"integrity\": \"sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==\"\n        },\n        \"node_modules/foreground-child\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz\",\n            \"integrity\": \"sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"cross-spawn\": \"^7.0.0\",\n                \"signal-exit\": \"^4.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=14\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/fs-constants\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz\",\n            \"integrity\": \"sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==\",\n            \"dev\": true\n        },\n        \"node_modules/fs-minipass\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/fs-minipass/-/fs-minipass-3.0.3.tgz\",\n            \"integrity\": \"sha512-XUBA9XClHbnJWSfBzjkm6RvPsyg3sryZt06BEQoXcF7EK/xpGaQYJgQKDJSUH5SGZ76Y7pFx1QBnXz09rU5Fbw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^7.0.3\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/glob\": {\n            \"version\": \"10.3.10\",\n            \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.3.10.tgz\",\n            \"integrity\": \"sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"foreground-child\": \"^3.1.0\",\n                \"jackspeak\": \"^2.3.5\",\n                \"minimatch\": \"^9.0.1\",\n                \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\",\n                \"path-scurry\": \"^1.10.1\"\n            },\n            \"bin\": {\n                \"glob\": \"dist/esm/bin.mjs\"\n            },\n            \"engines\": {\n                \"node\": \">=16 || 14 >=14.17\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/graceful-fs\": {\n            \"version\": \"4.2.11\",\n            \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n            \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n            \"dev\": true\n        },\n        \"node_modules/http-cache-semantics\": {\n            \"version\": \"4.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.1.tgz\",\n            \"integrity\": \"sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ==\",\n            \"dev\": true\n        },\n        \"node_modules/http-proxy-agent\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.0.tgz\",\n            \"integrity\": \"sha512-+ZT+iBxVUQ1asugqnD6oWoRiS25AkjNfG085dKJGtGxkdwLQrMKU5wJr2bOOFAXzKcTuqq+7fZlTMgG3SRfIYQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"agent-base\": \"^7.1.0\",\n                \"debug\": \"^4.3.4\"\n            },\n            \"engines\": {\n                \"node\": \">= 14\"\n            }\n        },\n        \"node_modules/https-proxy-agent\": {\n            \"version\": \"7.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.2.tgz\",\n            \"integrity\": \"sha512-NmLNjm6ucYwtcUmL7JQC1ZQ57LmHP4lT15FQ8D61nak1rO6DH+fz5qNK2Ap5UN4ZapYICE3/0KodcLYSPsPbaA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"agent-base\": \"^7.0.2\",\n                \"debug\": \"4\"\n            },\n            \"engines\": {\n                \"node\": \">= 14\"\n            }\n        },\n        \"node_modules/iconv-lite\": {\n            \"version\": \"0.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz\",\n            \"integrity\": \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\",\n            \"dev\": true,\n            \"optional\": true,\n            \"dependencies\": {\n                \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/ieee754\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n            \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ]\n        },\n        \"node_modules/imurmurhash\": {\n            \"version\": \"0.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n            \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=0.8.19\"\n            }\n        },\n        \"node_modules/indent-string\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz\",\n            \"integrity\": \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n            \"dev\": true\n        },\n        \"node_modules/ip\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/ip/-/ip-2.0.0.tgz\",\n            \"integrity\": \"sha512-WKa+XuLG1A1R0UWhl2+1XQSi+fZWMsYKffMZTTYsiZaUD8k2yDAj5atimTUD2TZkyCkNEeYE5NhFZmupOGtjYQ==\",\n            \"dev\": true\n        },\n        \"node_modules/is-fullwidth-code-point\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n            \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/is-lambda\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-lambda/-/is-lambda-1.0.1.tgz\",\n            \"integrity\": \"sha512-z7CMFGNrENq5iFB9Bqo64Xk6Y9sg+epq1myIcdHaGnbMTYOxvzsEtdYqQUylB7LxfkvgrrjP32T6Ywciio9UIQ==\",\n            \"dev\": true\n        },\n        \"node_modules/isexe\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-3.1.1.tgz\",\n            \"integrity\": \"sha512-LpB/54B+/2J5hqQ7imZHfdU31OlgQqx7ZicVlkm9kzg9/w8GKLEcFfJl/t7DCEDueOyBAD6zCCwTO6Fzs0NoEQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=16\"\n            }\n        },\n        \"node_modules/jackspeak\": {\n            \"version\": \"2.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-2.3.6.tgz\",\n            \"integrity\": \"sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@isaacs/cliui\": \"^8.0.2\"\n            },\n            \"engines\": {\n                \"node\": \">=14\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            },\n            \"optionalDependencies\": {\n                \"@pkgjs/parseargs\": \"^0.11.0\"\n            }\n        },\n        \"node_modules/lru-cache\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n            \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/make-fetch-happen\": {\n            \"version\": \"13.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-13.0.0.tgz\",\n            \"integrity\": \"sha512-7ThobcL8brtGo9CavByQrQi+23aIfgYU++wg4B87AIS8Rb2ZBt/MEaDqzA00Xwv/jUjAjYkLHjVolYuTLKda2A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@npmcli/agent\": \"^2.0.0\",\n                \"cacache\": \"^18.0.0\",\n                \"http-cache-semantics\": \"^4.1.1\",\n                \"is-lambda\": \"^1.0.1\",\n                \"minipass\": \"^7.0.2\",\n                \"minipass-fetch\": \"^3.0.0\",\n                \"minipass-flush\": \"^1.0.5\",\n                \"minipass-pipeline\": \"^1.2.4\",\n                \"negotiator\": \"^0.6.3\",\n                \"promise-retry\": \"^2.0.1\",\n                \"ssri\": \"^10.0.0\"\n            },\n            \"engines\": {\n                \"node\": \"^16.14.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/minimatch\": {\n            \"version\": \"9.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\",\n            \"integrity\": \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"brace-expansion\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=16 || 14 >=14.17\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/minimist\": {\n            \"version\": \"1.2.8\",\n            \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n            \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n            \"dev\": true,\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/minipass\": {\n            \"version\": \"7.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.0.4.tgz\",\n            \"integrity\": \"sha512-jYofLM5Dam9279rdkWzqHozUo4ybjdZmCsDHePy5V/PbBcVMiSZR97gmAy45aqi8CK1lG2ECd356FU86avfwUQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=16 || 14 >=14.17\"\n            }\n        },\n        \"node_modules/minipass-collect\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/minipass-collect/-/minipass-collect-2.0.1.tgz\",\n            \"integrity\": \"sha512-D7V8PO9oaz7PWGLbCACuI1qEOsq7UKfLotx/C0Aet43fCUB/wfQ7DYeq2oR/svFJGYDHPr38SHATeaj/ZoKHKw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^7.0.3\"\n            },\n            \"engines\": {\n                \"node\": \">=16 || 14 >=14.17\"\n            }\n        },\n        \"node_modules/minipass-fetch\": {\n            \"version\": \"3.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/minipass-fetch/-/minipass-fetch-3.0.4.tgz\",\n            \"integrity\": \"sha512-jHAqnA728uUpIaFm7NWsCnqKT6UqZz7GcI/bDpPATuwYyKwJwW0remxSCxUlKiEty+eopHGa3oc8WxgQ1FFJqg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^7.0.3\",\n                \"minipass-sized\": \"^1.0.3\",\n                \"minizlib\": \"^2.1.2\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            },\n            \"optionalDependencies\": {\n                \"encoding\": \"^0.1.13\"\n            }\n        },\n        \"node_modules/minipass-flush\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/minipass-flush/-/minipass-flush-1.0.5.tgz\",\n            \"integrity\": \"sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/minipass-flush/node_modules/minipass\": {\n            \"version\": \"3.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-3.3.6.tgz\",\n            \"integrity\": \"sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/minipass-pipeline\": {\n            \"version\": \"1.2.4\",\n            \"resolved\": \"https://registry.npmjs.org/minipass-pipeline/-/minipass-pipeline-1.2.4.tgz\",\n            \"integrity\": \"sha512-xuIq7cIOt09RPRJ19gdi4b+RiNvDFYe5JH+ggNvBqGqpQXcru3PcRmOZuHBKWK1Txf9+cQ+HMVN4d6z46LZP7A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/minipass-pipeline/node_modules/minipass\": {\n            \"version\": \"3.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-3.3.6.tgz\",\n            \"integrity\": \"sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/minipass-sized\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/minipass-sized/-/minipass-sized-1.0.3.tgz\",\n            \"integrity\": \"sha512-MbkQQ2CTiBMlA2Dm/5cY+9SWFEN8pzzOXi6rlM5Xxq0Yqbda5ZQy9sU75a673FE9ZK0Zsbr6Y5iP6u9nktfg2g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/minipass-sized/node_modules/minipass\": {\n            \"version\": \"3.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-3.3.6.tgz\",\n            \"integrity\": \"sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/minizlib\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz\",\n            \"integrity\": \"sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^3.0.0\",\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/minizlib/node_modules/minipass\": {\n            \"version\": \"3.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-3.3.6.tgz\",\n            \"integrity\": \"sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/mkdirp\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz\",\n            \"integrity\": \"sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==\",\n            \"dev\": true,\n            \"bin\": {\n                \"mkdirp\": \"bin/cmd.js\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/mkdirp-classic\": {\n            \"version\": \"0.5.3\",\n            \"resolved\": \"https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz\",\n            \"integrity\": \"sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==\",\n            \"dev\": true\n        },\n        \"node_modules/ms\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n            \"dev\": true\n        },\n        \"node_modules/negotiator\": {\n            \"version\": \"0.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n            \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/node-abi\": {\n            \"version\": \"3.54.0\",\n            \"resolved\": \"https://registry.npmjs.org/node-abi/-/node-abi-3.54.0.tgz\",\n            \"integrity\": \"sha512-p7eGEiQil0YUV3ItH4/tBb781L5impVmmx2E9FRKF7d18XXzp4PGT2tdYMFY6wQqgxD0IwNZOiSJ0/K0fSi/OA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"semver\": \"^7.3.5\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/node-addon-api\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/node-addon-api/-/node-addon-api-8.0.0.tgz\",\n            \"integrity\": \"sha512-ipO7rsHEBqa9STO5C5T10fj732ml+5kLN1cAG8/jdHd56ldQeGj3Q7+scUS+VHK/qy1zLEwC4wMK5+yM0btPvw==\",\n            \"engines\": {\n                \"node\": \"^18 || ^20 || >= 21\"\n            }\n        },\n        \"node_modules/node-gyp\": {\n            \"version\": \"10.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/node-gyp/-/node-gyp-10.1.0.tgz\",\n            \"integrity\": \"sha512-B4J5M1cABxPc5PwfjhbV5hoy2DP9p8lFXASnEN6hugXOa61416tnTZ29x9sSwAd0o99XNIcpvDDy1swAExsVKA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"env-paths\": \"^2.2.0\",\n                \"exponential-backoff\": \"^3.1.1\",\n                \"glob\": \"^10.3.10\",\n                \"graceful-fs\": \"^4.2.6\",\n                \"make-fetch-happen\": \"^13.0.0\",\n                \"nopt\": \"^7.0.0\",\n                \"proc-log\": \"^3.0.0\",\n                \"semver\": \"^7.3.5\",\n                \"tar\": \"^6.1.2\",\n                \"which\": \"^4.0.0\"\n            },\n            \"bin\": {\n                \"node-gyp\": \"bin/node-gyp.js\"\n            },\n            \"engines\": {\n                \"node\": \"^16.14.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/node-gyp-build\": {\n            \"version\": \"4.8.0\",\n            \"resolved\": \"https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.8.0.tgz\",\n            \"integrity\": \"sha512-u6fs2AEUljNho3EYTJNBfImO5QTo/J/1Etd+NVdCj7qWKUSN/bSLkZwhDv7I+w/MSC6qJ4cknepkAYykDdK8og==\",\n            \"bin\": {\n                \"node-gyp-build\": \"bin.js\",\n                \"node-gyp-build-optional\": \"optional.js\",\n                \"node-gyp-build-test\": \"build-test.js\"\n            }\n        },\n        \"node_modules/nopt\": {\n            \"version\": \"7.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-7.2.0.tgz\",\n            \"integrity\": \"sha512-CVDtwCdhYIvnAzFoJ6NJ6dX3oga9/HyciQDnG1vQDjSLMeKLJ4A93ZqYKDrgYSr1FBY5/hMYC+2VCi24pgpkGA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"abbrev\": \"^2.0.0\"\n            },\n            \"bin\": {\n                \"nopt\": \"bin/nopt.js\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/npm-run-path\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-3.1.0.tgz\",\n            \"integrity\": \"sha512-Dbl4A/VfiVGLgQv29URL9xshU8XDY1GeLy+fsaZ1AA8JDSfjvr5P5+pzRbWqRSBxk6/DW7MIh8lTM/PaGnP2kg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"path-key\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/once\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n            \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"wrappy\": \"1\"\n            }\n        },\n        \"node_modules/p-map\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz\",\n            \"integrity\": \"sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"aggregate-error\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/path-key\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n            \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/path-scurry\": {\n            \"version\": \"1.10.1\",\n            \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.10.1.tgz\",\n            \"integrity\": \"sha512-MkhCqzzBEpPvxxQ71Md0b1Kk51W01lrYvlMzSUaIzNsODdd7mqhiimSZlr+VegAz5Z6Vzt9Xg2ttE//XBhH3EQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"lru-cache\": \"^9.1.1 || ^10.0.0\",\n                \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=16 || 14 >=14.17\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/path-scurry/node_modules/lru-cache\": {\n            \"version\": \"10.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.1.0.tgz\",\n            \"integrity\": \"sha512-/1clY/ui8CzjKFyjdvwPWJUYKiFVXG2I2cY0ssG7h4+hwk+XOIX7ZSG9Q7TW8TW3Kp3BUSqgFWBLgL4PJ+Blag==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \"14 || >=16.14\"\n            }\n        },\n        \"node_modules/prebuildify\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/prebuildify/-/prebuildify-6.0.0.tgz\",\n            \"integrity\": \"sha512-DEvK4C3tcimIp7Pzqbs036n9i6CTKGp1XVEpMnr4wV3enKU5sBogPP+lP3KZw7993i42bXnsd5eIxAXQ566Cqw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"execspawn\": \"^1.0.1\",\n                \"minimist\": \"^1.2.5\",\n                \"mkdirp-classic\": \"^0.5.3\",\n                \"node-abi\": \"^3.3.0\",\n                \"npm-run-path\": \"^3.1.0\",\n                \"pump\": \"^3.0.0\",\n                \"tar-fs\": \"^2.1.0\"\n            },\n            \"bin\": {\n                \"prebuildify\": \"bin.js\"\n            }\n        },\n        \"node_modules/proc-log\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/proc-log/-/proc-log-3.0.0.tgz\",\n            \"integrity\": \"sha512-++Vn7NS4Xf9NacaU9Xq3URUuqZETPsf8L4j5/ckhaRYsfPeRyzGw+iDjFhV/Jr3uNmTvvddEJFWh5R1gRgUH8A==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/promise-retry\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/promise-retry/-/promise-retry-2.0.1.tgz\",\n            \"integrity\": \"sha512-y+WKFlBR8BGXnsNlIHFGPZmyDf3DFMoLhaflAnyZgV6rG6xu+JwesTo2Q9R6XwYmtmwAFCkAk3e35jEdoeh/3g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"err-code\": \"^2.0.2\",\n                \"retry\": \"^0.12.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/pump\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n            \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"end-of-stream\": \"^1.1.0\",\n                \"once\": \"^1.3.1\"\n            }\n        },\n        \"node_modules/readable-stream\": {\n            \"version\": \"3.6.2\",\n            \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz\",\n            \"integrity\": \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"inherits\": \"^2.0.3\",\n                \"string_decoder\": \"^1.1.1\",\n                \"util-deprecate\": \"^1.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 6\"\n            }\n        },\n        \"node_modules/retry\": {\n            \"version\": \"0.12.0\",\n            \"resolved\": \"https://registry.npmjs.org/retry/-/retry-0.12.0.tgz\",\n            \"integrity\": \"sha512-9LkiTwjUh6rT555DtE9rTX+BKByPfrMzEAtnlEtdEwr3Nkffwiihqe2bWADg+OQRjt9gl6ICdmB/ZFDCGAtSow==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">= 4\"\n            }\n        },\n        \"node_modules/safe-buffer\": {\n            \"version\": \"5.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n            \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ]\n        },\n        \"node_modules/safer-buffer\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n            \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"node_modules/semver\": {\n            \"version\": \"7.5.4\",\n            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\",\n            \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"lru-cache\": \"^6.0.0\"\n            },\n            \"bin\": {\n                \"semver\": \"bin/semver.js\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/shebang-command\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n            \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"shebang-regex\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/shebang-regex\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n            \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/signal-exit\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n            \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=14\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/smart-buffer\": {\n            \"version\": \"4.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n            \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">= 6.0.0\",\n                \"npm\": \">= 3.0.0\"\n            }\n        },\n        \"node_modules/socks\": {\n            \"version\": \"2.7.1\",\n            \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.7.1.tgz\",\n            \"integrity\": \"sha512-7maUZy1N7uo6+WVEX6psASxtNlKaNVMlGQKkG/63nEDdLOWNbiUMoLK7X4uYoLhQstau72mLgfEWcXcwsaHbYQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ip\": \"^2.0.0\",\n                \"smart-buffer\": \"^4.2.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 10.13.0\",\n                \"npm\": \">= 3.0.0\"\n            }\n        },\n        \"node_modules/socks-proxy-agent\": {\n            \"version\": \"8.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.2.tgz\",\n            \"integrity\": \"sha512-8zuqoLv1aP/66PHF5TqwJ7Czm3Yv32urJQHrVyhD7mmA6d61Zv8cIXQYPTWwmg6qlupnPvs/QKDmfa4P/qct2g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"agent-base\": \"^7.0.2\",\n                \"debug\": \"^4.3.4\",\n                \"socks\": \"^2.7.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 14\"\n            }\n        },\n        \"node_modules/ssri\": {\n            \"version\": \"10.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/ssri/-/ssri-10.0.5.tgz\",\n            \"integrity\": \"sha512-bSf16tAFkGeRlUNDjXu8FzaMQt6g2HZJrun7mtMbIPOddxt3GLMSz5VWUWcqTJUPfLEaDIepGxv+bYQW49596A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^7.0.3\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/string_decoder\": {\n            \"version\": \"1.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\n            \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"safe-buffer\": \"~5.2.0\"\n            }\n        },\n        \"node_modules/string-width\": {\n            \"version\": \"5.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n            \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"eastasianwidth\": \"^0.2.0\",\n                \"emoji-regex\": \"^9.2.2\",\n                \"strip-ansi\": \"^7.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/string-width-cjs\": {\n            \"name\": \"string-width\",\n            \"version\": \"4.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n            \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"emoji-regex\": \"^8.0.0\",\n                \"is-fullwidth-code-point\": \"^3.0.0\",\n                \"strip-ansi\": \"^6.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/string-width-cjs/node_modules/ansi-regex\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n            \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n            \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n            \"dev\": true\n        },\n        \"node_modules/string-width-cjs/node_modules/strip-ansi\": {\n            \"version\": \"6.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n            \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ansi-regex\": \"^5.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/strip-ansi\": {\n            \"version\": \"7.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n            \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ansi-regex\": \"^6.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n            }\n        },\n        \"node_modules/strip-ansi-cjs\": {\n            \"name\": \"strip-ansi\",\n            \"version\": \"6.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n            \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ansi-regex\": \"^5.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/strip-ansi-cjs/node_modules/ansi-regex\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n            \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/tar\": {\n            \"version\": \"6.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/tar/-/tar-6.2.0.tgz\",\n            \"integrity\": \"sha512-/Wo7DcT0u5HUV486xg675HtjNd3BXZ6xDbzsCUZPt5iw8bTQ63bP0Raut3mvro9u+CUyq7YQd8Cx55fsZXxqLQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"chownr\": \"^2.0.0\",\n                \"fs-minipass\": \"^2.0.0\",\n                \"minipass\": \"^5.0.0\",\n                \"minizlib\": \"^2.1.1\",\n                \"mkdirp\": \"^1.0.3\",\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/tar-fs\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz\",\n            \"integrity\": \"sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"chownr\": \"^1.1.1\",\n                \"mkdirp-classic\": \"^0.5.2\",\n                \"pump\": \"^3.0.0\",\n                \"tar-stream\": \"^2.1.4\"\n            }\n        },\n        \"node_modules/tar-stream\": {\n            \"version\": \"2.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz\",\n            \"integrity\": \"sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"bl\": \"^4.0.3\",\n                \"end-of-stream\": \"^1.4.1\",\n                \"fs-constants\": \"^1.0.0\",\n                \"inherits\": \"^2.0.3\",\n                \"readable-stream\": \"^3.1.1\"\n            },\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/tar/node_modules/chownr\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz\",\n            \"integrity\": \"sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/tar/node_modules/fs-minipass\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz\",\n            \"integrity\": \"sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"minipass\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/tar/node_modules/fs-minipass/node_modules/minipass\": {\n            \"version\": \"3.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-3.3.6.tgz\",\n            \"integrity\": \"sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"yallist\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/tar/node_modules/minipass\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-5.0.0.tgz\",\n            \"integrity\": \"sha512-3FnjYuehv9k6ovOEbyOswadCDPX1piCfhV8ncmYtHOjuPwylVWsghTLo7rabjC3Rx5xD4HDx8Wm1xnMF7S5qFQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/typescript\": {\n            \"version\": \"5.4.4\",\n            \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.4.4.tgz\",\n            \"integrity\": \"sha512-dGE2Vv8cpVvw28v8HCPqyb08EzbBURxDpuhJvTrusShUfGnhHBafDsLdS1EhhxyL6BJQE+2cT3dDPAv+MQ6oLw==\",\n            \"dev\": true,\n            \"bin\": {\n                \"tsc\": \"bin/tsc\",\n                \"tsserver\": \"bin/tsserver\"\n            },\n            \"engines\": {\n                \"node\": \">=14.17\"\n            }\n        },\n        \"node_modules/undici-types\": {\n            \"version\": \"5.26.5\",\n            \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz\",\n            \"integrity\": \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\",\n            \"dev\": true\n        },\n        \"node_modules/unique-filename\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/unique-filename/-/unique-filename-3.0.0.tgz\",\n            \"integrity\": \"sha512-afXhuC55wkAmZ0P18QsVE6kp8JaxrEokN2HGIoIVv2ijHQd419H0+6EigAFcIzXeMIkcIkNBpB3L/DXB3cTS/g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"unique-slug\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/unique-slug\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/unique-slug/-/unique-slug-4.0.0.tgz\",\n            \"integrity\": \"sha512-WrcA6AyEfqDX5bWige/4NQfPZMtASNVxdmWR76WESYQVAACSgWcR6e9i0mofqqBxYFtL4oAxPIptY73/0YE1DQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"imurmurhash\": \"^0.1.4\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/util-deprecate\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n            \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n            \"dev\": true\n        },\n        \"node_modules/util-extend\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/util-extend/-/util-extend-1.0.3.tgz\",\n            \"integrity\": \"sha512-mLs5zAK+ctllYBj+iAQvlDCwoxU/WDOUaJkcFudeiAX6OajC6BKXJUa9a+tbtkC11dz2Ufb7h0lyvIOVn4LADA==\",\n            \"dev\": true\n        },\n        \"node_modules/which\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/which/-/which-4.0.0.tgz\",\n            \"integrity\": \"sha512-GlaYyEb07DPxYCKhKzplCWBJtvxZcZMrL+4UkrTSJHHPyZU4mYYTv3qaOe77H7EODLSSopAUFAc6W8U4yqvscg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"isexe\": \"^3.1.1\"\n            },\n            \"bin\": {\n                \"node-which\": \"bin/which.js\"\n            },\n            \"engines\": {\n                \"node\": \"^16.13.0 || >=18.0.0\"\n            }\n        },\n        \"node_modules/wrap-ansi\": {\n            \"version\": \"8.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n            \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ansi-styles\": \"^6.1.0\",\n                \"string-width\": \"^5.0.1\",\n                \"strip-ansi\": \"^7.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n            }\n        },\n        \"node_modules/wrap-ansi-cjs\": {\n            \"name\": \"wrap-ansi\",\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n            \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ansi-styles\": \"^4.0.0\",\n                \"string-width\": \"^4.1.0\",\n                \"strip-ansi\": \"^6.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n            }\n        },\n        \"node_modules/wrap-ansi-cjs/node_modules/ansi-regex\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n            \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/wrap-ansi-cjs/node_modules/ansi-styles\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n            \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"color-convert\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n            }\n        },\n        \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n            \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n            \"dev\": true\n        },\n        \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n            \"version\": \"4.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n            \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"emoji-regex\": \"^8.0.0\",\n                \"is-fullwidth-code-point\": \"^3.0.0\",\n                \"strip-ansi\": \"^6.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/wrap-ansi-cjs/node_modules/strip-ansi\": {\n            \"version\": \"6.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n            \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"ansi-regex\": \"^5.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/wrappy\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n            \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n            \"dev\": true\n        },\n        \"node_modules/yallist\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n            \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n            \"dev\": true\n        }\n    }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.8642578125,
          "content": "{\n    \"name\": \"usearch\",\n    \"version\": \"2.16.10\",\n    \"description\": \"Smaller & Faster Single-File Vector Search Engine from Unum\",\n    \"author\": \"Ash Vardanian (https://ashvardanian.com/)\",\n    \"license\": \"Apache 2.0\",\n    \"homepage\": \"https://unum-cloud.github.io/usearch/\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/unum-cloud/usearch.git\"\n    },\n    \"bugs\": {\n        \"url\": \"https://github.com/unum-cloud/usearch/issues\",\n        \"email\": \"info@unum.cloud\"\n    },\n    \"engines\": {\n        \"node\": \"~10 >=10.20 || >=12.17\"\n    },\n    \"files\": [\n        \"binding.gyp\",\n        \"c\",\n        \"cpp\",\n        \"cmake\",\n        \"fp16\",\n        \"simsimd\",\n        \"include\",\n        \"javascript\",\n        \"prebuilds\"\n    ],\n    \"dependencies\": {\n        \"bindings\": \"^1.5.0\",\n        \"node-addon-api\": \"^8.0.0\",\n        \"node-gyp-build\": \"^4.8.0\"\n    },\n    \"scripts\": {\n        \"test\": \"node --test ./javascript/usearch.test.js\",\n        \"install\": \"node-gyp-build\",\n        \"prebuild-single\": \"prebuildify --napi --strip\",\n        \"prebuild-arm64\": \"prebuildify --arch arm64 --napi\",\n        \"prebuild-darwin-x64+arm64\": \"prebuildify --arch arm64+x64 --napi --strip\",\n        \"build-js\": \"tsc -p javascript/tsconfig-esm.json && tsc -p javascript/tsconfig-cjs.json && cp javascript/dist-package-esm.json javascript/dist/esm/package.json && cp javascript/dist-package-cjs.json javascript/dist/cjs/package.json\"\n    },\n    \"devDependencies\": {\n        \"@types/bindings\": \"^1.5.5\",\n        \"@types/node\": \"^20.12.4\",\n        \"node-gyp\": \"^10.1.0\",\n        \"prebuildify\": \"^6.0.0\",\n        \"typescript\": \"^5.4.4\"\n    },\n    \"main\": \"javascript/dist/cjs/usearch.js\",\n    \"module\": \"javascript/dist/esm/usearch.js\",\n    \"exports\": {\n        \".\": {\n            \"import\": \"./javascript/dist/esm/usearch.js\",\n            \"require\": \"./javascript/dist/cjs/usearch.js\"\n        }\n    }\n}"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.82421875,
          "content": "# This file configures wheels compilation for `cibuilwheel` for USearch CPython bindings.\n# On a good day it will produce:\n#   - `macos` wheels for x86_64, arm64, and universal2;\n#   - `windows` wheels for AMD64, and ARM64. But not x86.\n#   - `manylinux` and `musllinux` wheels for Linux on x86_64, aarch64. But not i686, ppc64le, s390x;\n#   * for CPython versions from 3.7 to 3.13.\n#   * for PyPy versions from 3.7 to 3.10.\n#   = meaning 7 platforms * 11 Python versions = 77 builds.\n[build-system]\nrequires = [\n    \"setuptools>=42\",\n    \"wheel\",\n    \"cmake>=3.22\",\n    \"pybind11\",\n    \"numpy\",\n    \"simsimd>=6.0.5,<7.0.0\",\n]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.pytest.ini_options]\nminversion = \"6.0\"\naddopts = \"-ra --showlocals --strict-markers --strict-config -s -x -p no:warnings\"\nxfail_strict = true\nfilterwarnings = [\"error\"]\n\n# Avoid running tests, as everything is happening in a super slow container\n# We have already run all the relavent Python tests in `prerelease.yml`\n#   test-requires = [\"pytest\", \"numpy\"]\n#   test-command = \"pytest {project}/python/scripts\"\n[tool.cibuildwheel]\ntest-requires = []\ntest-command = \"\"\nbuild-verbosity = 0\n\n# Add \"pp*\" to skip PyPy builds, but they should work fine these days :)\n# https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip\n# https://cibuildwheel.readthedocs.io/en/stable/#what-does-it-do\nskip = []\n\n[tool.cibuildwheel.linux]\narchs = [\"x86_64\", \"aarch64\"]\nbefore-build = [\n    \"rm -rf {project}/CMakeCache.txt {project}/build {project}/build_debug {project}/CMakeFiles.txt {project}/_deps {project}/.pytest_cache\",\n    \"mkdir -p build/usearch\",\n    \"git submodule update --init --recursive\",\n]\nrepair-wheel-command = \"auditwheel repair --lib-sdir . -w {dest_dir} {wheel}\"\n\n# Use more recent images for the most popular SIMD-capable CPU architectures, to have access to newer compilers.\n# Otherwise, prepare yourself to all kinds of AVX-512 issues and other SIMD-related pain.\n# You can keep track of the most recent images on Quay:\n# - for `manylinux`: https://quay.io/search?q=manylinux\n# - for `musllinux`: https://quay.io/search?q=musllinux\nmanylinux-x86_64-image = \"manylinux_2_28\"\nmanylinux-aarch64-image = \"manylinux_2_28\"\nmusllinux-x86_64-image = \"musllinux_1_2\"\nmusllinux-aarch64-image = \"musllinux_1_2\"\n\n# On CentOS we have to use `yum`.\n# The healthy version would be: `apt-get update && apt-get install -y libc6-dev wget python3-dev`.\nbefore-all = [\"yum update -y && yum install -y glibc-devel wget python3-devel\"]\n\n# With `musl` builds, we obviously don't need the `glibc` and can't use `yum`.\n# This may also be handy for using custom dependencies for different Python versions:\n# https://cibuildwheel.readthedocs.io/en/stable/options/#overrides\n[[tool.cibuildwheel.overrides]]\nselect = \"*-musllinux*\"\nbefore-all = \"apk add --update wget python3-dev\"\n\n[tool.cibuildwheel.macos]\narchs = [\"x86_64\", \"universal2\", \"arm64\"]\nbefore-build = [\n    \"rm -rf {project}/CMakeCache.txt {project}/build {project}/build_debug {project}/CMakeFiles.txt {project}/_deps {project}/.pytest_cache\",\n    \"mkdir -p build/usearch\",\n    \"git submodule update --init --recursive\",\n    \"export CC=$(echo CXX)\",\n]\nrepair-wheel-command = \"delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}\"\n\n\n[tool.cibuildwheel.windows]\narchs = [\"AMD64\", \"ARM64\"]\nbefore-build = [\n    \"rd /s /q {project}\\\\CMakeCache.txt {project}\\\\build {project}\\\\build_debug {project}\\\\CMakeFiles.txt {project}\\\\_deps {project}\\\\.pytest_cache || echo Done\",\n    \"md build\\\\usearch\",\n    \"git submodule update --init --recursive\",\n]\n\n# Configuration options for the Black formatter:\n# https://black.readthedocs.io/en/latest/usage_and_configuration/the_basics.html#where-black-looks-for-the-file\n[tool.black]\nline-length = 120                  # Set line length to the same value as in `.clang-format` for modern wide screens\ntarget-version = ['py36', 'py313']\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 8.1943359375,
          "content": "import os\nimport sys\nimport subprocess\nimport platform\nfrom setuptools import setup\n\nfrom pybind11.setup_helpers import Pybind11Extension\n\ncompile_args = []\nlink_args = []\nmacros_args = []\n\n\ndef get_bool_env(name: str, preference: bool) -> bool:\n    return os.environ.get(name, \"1\" if preference else \"0\") == \"1\"\n\n\ndef get_bool_env_w_name(name: str, preference: bool) -> tuple:\n    return name, \"1\" if get_bool_env(name, preference) else \"0\"\n\n\n# Check the environment variables\nis_linux: bool = sys.platform == \"linux\"\nis_macos: bool = sys.platform == \"darwin\"\nis_windows: bool = sys.platform == \"win32\"\nmachine: str = platform.machine().lower()\n\n\nis_gcc = False\nis_clang = False\nif is_linux:\n    cxx = os.environ.get(\"CXX\")\n    if cxx:\n        try:\n            command = \"where\" if os.name == \"nt\" else \"which\"\n            full_path = subprocess.check_output([command, cxx], text=True).strip()\n            compiler_name = os.path.basename(full_path)\n            is_gcc = (\"g++\" in compiler_name) and (\"clang++\" not in compiler_name)\n            is_clang = (\"clang++\" in compiler_name) and (\"g++\" not in compiler_name)\n        except subprocess.CalledProcessError:\n            pass\n\n\n# ? Is there a way we can bring back SimSIMD on Windows?\n# ? Using `ctypes.CDLL(simsimd.__file__)` breaks the CI\n# ? with \"Windows fatal exception: access violation\".\nprefer_simsimd: bool = not is_windows\nprefer_fp16lib: bool = True\nprefer_openmp: bool = is_linux and is_gcc\n\nuse_simsimd: bool = get_bool_env(\"USEARCH_USE_SIMSIMD\", prefer_simsimd)\nuse_fp16lib: bool = get_bool_env(\"USEARCH_USE_FP16LIB\", prefer_fp16lib)\nuse_openmp: bool = get_bool_env(\"USEARCH_USE_OPENMP\", prefer_openmp)\n\n# Common arguments for all platforms\nmacros_args.append((\"USEARCH_USE_OPENMP\", \"1\" if use_openmp else \"0\"))\nmacros_args.append((\"USEARCH_USE_FP16LIB\", \"1\" if use_fp16lib else \"0\"))\nmacros_args.append((\"USEARCH_USE_SIMSIMD\", \"1\" if use_simsimd else \"0\"))\n\n\n#! Unlike OpenMP and FP16LIB, the SimSIMD is integrated differently.\n#! It will anyways use dynamic dispatch, and will not build the library as part of `usearch` package.\n#! It relies on the fact that SimSIMD ships it's own bindings for most platforms, and the user should\n#! install it separately!\nmacros_args.extend(\n    [\n        (\"SIMSIMD_DYNAMIC_DISPATCH\", \"1\" if use_simsimd else \"0\"),\n        (\"SIMSIMD_TARGET_NEON\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_NEON_BF16\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_NEON_F16\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_NEON_I8\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SVE\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SVE_BF16\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SVE_F16\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SVE_I8\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SVE2\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_HASWELL\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SKYLAKE\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_ICE\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_SAPPHIRE\", \"0\"),  # ? Hide-out all complex intrinsics\n        (\"SIMSIMD_TARGET_GENOA\", \"0\"),  # ? Hide-out all complex intrinsics\n    ]\n)\n\nif is_linux:\n    compile_args.append(\"-std=c++17\")\n    compile_args.append(\"-O3\")  # Maximize performance\n    compile_args.append(\"-ffast-math\")  # Maximize floating-point performance\n    compile_args.append(\"-Wno-unknown-pragmas\")\n    compile_args.append(\"-fdiagnostics-color=always\")\n\n    # Simplify debugging, but the normal `-g` may make builds much longer!\n    compile_args.append(\"-g1\")\n\n    # Linking to SimSIMD\n    compile_args.append(\"-Wl,--unresolved-symbols=ignore-in-shared-libs\")\n    link_args.append(\"-static-libstdc++\")\n\n    if use_openmp:\n        compile_args.append(\"-fopenmp\")\n        link_args.append(\"-lgomp\")\n\nif is_macos:\n    # MacOS 10.15 or higher is needed for `aligned_alloc` support.\n    # https://github.com/unum-cloud/usearch/actions/runs/4975434891/jobs/8902603392\n    compile_args.append(\"-mmacosx-version-min=10.15\")\n    compile_args.append(\"-std=c++17\")\n    compile_args.append(\"-O3\")  # Maximize performance\n    compile_args.append(\"-ffast-math\")  # Maximize floating-point performance\n    compile_args.append(\"-fcolor-diagnostics\")\n    compile_args.append(\"-Wno-unknown-pragmas\")\n\n    # Simplify debugging, but the normal `-g` may make builds much longer!\n    compile_args.append(\"-g1\")\n\n    # Linking OpenMP requires additional preparation in CIBuildWheel.\n    # We must install `brew install llvm` ahead of time.\n    # import subprocess as cli\n    # llvm_base = cli.check_output([\"brew\", \"--prefix\", \"llvm\"]).strip().decode(\"utf-8\")\n    # if len(llvm_base):\n    #     compile_args.append(f\"-I{llvm_base}/include\")\n    #     compile_args.append(\"-Xpreprocessor -fopenmp\")\n    #     link_args.append(f\"-L{llvm_base}/lib\")\n    #     link_args.append(\"-lomp\")\n    #     macros_args.append((\"USEARCH_USE_OPENMP\", \"1\"))\n\nif is_windows:\n    compile_args.append(\"/std:c++17\")\n    compile_args.append(\"/O2\")\n    compile_args.append(\"/fp:fast\")  # Enable fast math for MSVC\n    compile_args.append(\"/W1\")  # Reduce warnings verbosity\n    link_args.append(\"/FORCE\")  # Force linkin with missing SimSIMD symbols\n\n\next_modules = [\n    Pybind11Extension(\n        \"usearch.compiled\",\n        [\"python/lib.cpp\"],\n        extra_compile_args=compile_args,\n        extra_link_args=link_args,\n        define_macros=macros_args,\n        language=\"c++\",\n    ),\n]\n\n__version__ = open(\"VERSION\", \"r\").read().strip()\n__lib_name__ = \"usearch\"\n\nthis_directory = os.path.abspath(os.path.dirname(__file__))\nwith open(os.path.join(this_directory, \"README.md\"), encoding=\"utf-8\") as f:\n    long_description = f.read()\n\n# Depending on the macros, adjust the include directories\ninclude_dirs = [\n    \"include\",\n    \"python\",\n    \"stringzilla/include\",\n]\ninstall_requires = [\n    \"numpy\",\n    \"tqdm\",\n]\nif use_simsimd:\n    include_dirs.append(\"simsimd/include\")\n    install_requires.append(\"simsimd>=6.0.5,<7.0.0\")\nif use_fp16lib:\n    include_dirs.append(\"fp16/include\")\n\n\n# With Clang, `setuptools` doesn't properly use the `language=\"c++\"` argument we pass.\n# The right thing would be to pass down `-x c++` to the compiler, before specifying the source files.\n# This nasty workaround overrides the `CC` environment variable with the `CXX` variable.\ncc_compiler_variable = os.environ.get(\"CC\")\ncxx_compiler_variable = os.environ.get(\"CXX\")\nif is_clang:\n    if cxx_compiler_variable:\n        os.environ[\"CC\"] = cxx_compiler_variable\n\nsetup(\n    name=__lib_name__,\n    version=__version__,\n    packages=[\"usearch\"],\n    package_dir={\"usearch\": \"python/usearch\"},\n    description=\"Smaller & Faster Single-File Vector Search Engine from Unum\",\n    author=\"Ash Vardanian\",\n    author_email=\"info@unum.cloud\",\n    url=\"https://github.com/unum-cloud/usearch\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    license=\"Apache-2.0\",\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Natural Language :: English\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: Information Technology\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Programming Language :: C++\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Java\",\n        \"Programming Language :: JavaScript\",\n        \"Programming Language :: Objective C\",\n        \"Programming Language :: Rust\",\n        \"Programming Language :: Other\",\n        \"Operating System :: MacOS\",\n        \"Operating System :: Unix\",\n        \"Operating System :: Microsoft :: Windows\",\n        \"Topic :: System :: Clustering\",\n        \"Topic :: Database :: Database Engines/Servers\",\n        \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n    ],\n    include_dirs=include_dirs,\n    ext_modules=ext_modules,\n    install_requires=install_requires,\n)\n\n# Reset the CC environment variable, that we overrode earlier.\nif is_clang:\n    if cxx_compiler_variable:\n        os.environ[\"CC\"] = cc_compiler_variable\n"
        },
        {
          "name": "simsimd",
          "type": "commit",
          "content": null
        },
        {
          "name": "sqlite",
          "type": "tree",
          "content": null
        },
        {
          "name": "stringzilla",
          "type": "commit",
          "content": null
        },
        {
          "name": "swift",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasm",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasmer.toml",
          "type": "blob",
          "size": 0.337890625,
          "content": "[package]\nname = \"unum/usearch\"\nversion = \"2.16.10\"\ndescription = \"Smaller & Faster Single-File Vector Search Engine from Unum\"\nlicense = \"Apache-2.0\"\nreadme = \"README.md\"\nrepository = \"https://github.com/unum-cloud/usearch\"\nhomepage = \"https://unum-cloud.github.io/usearch/javascript\"\n\n[[module]]\nname = \"index\"\nsource = \"build/wasm/index.wasm\"\n"
        },
        {
          "name": "winlibinstaller.bat",
          "type": "blob",
          "size": 1.1904296875,
          "content": "@echo off\n\nrem Get latest release tag\nset \"repo_owner=unum-cloud\"\nset \"repo_name=usearch\"\n\nrem Get the latest tag without quotes\nfor /f \"delims=\" %%i in ('curl -s https://api.github.com/repos/%repo_owner%/%repo_name%/releases/latest ^| findstr \"tag_name\"') do (\n    for /f \"tokens=2 delims=:, \" %%a in (\"%%i\") do (\n        set \"latest_tag=%%~a\"\n    )\n)\n\nrem Get Windows architecture\nfor /f \"tokens=2 delims= \" %%a in ('wmic OS get OSArchitecture ^| find \"64\"') do set \"arch=x64\"\nif \"%arch%\"==\"\" set \"arch=x86\"\n\necho Split library version from release version!\ntimeout /t 1\nrem Split the first 'v' from the version number.\nfor /f \"tokens=1 delims=v\" %%a in ('echo %latest_tag%') do (\n    set lib_version=%%a\n)\n\necho Download usearch library archive!\nrem Download the file.\ntimeout /t 2\ncurl -LO https://github.com/%repo_owner%/%repo_name%/releases/download/%latest_tag%/usearch_windows_%arch%_%lib_version%.tar\necho Download is complete!\n\necho Extract archive!\nrem Extract archive.\ntimeout /t 1\ntar -xf usearch_windows_%arch%_%lib_version%.tar\necho Extract is complete!\n\nrem Remove the archive.\ndel usearch_windows_%arch%_%lib_version%.tar\n\necho Extraction complete and downloaded .tar file removed.\ntimeout /t 1\nexit /b"
        },
        {
          "name": "wolfram",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}