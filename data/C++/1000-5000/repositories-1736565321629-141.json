{
  "metadata": {
    "timestamp": 1736565321629,
    "page": 141,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ethereum/aleth",
      "stars": 3966,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bumpversion.cfg",
          "type": "blob",
          "size": 0.478515625,
          "content": "[bumpversion]\ncurrent_version = 1.8.0\ncommit = True\nmessage = Aleth {new_version}\n\t\n\tBump version: {current_version} → {new_version}\ntag = True\nsign_tags = True\ntag_message = Aleth {new_version}\nparse = (?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(-(?P<prerel>rc|alpha)\\.(?P<prerelver>\\d+))?\nserialize = \n\t{major}.{minor}.{patch}-{prerel}.{prerelver}\n\t{major}.{minor}.{patch}\n\n[bumpversion:part:prerel]\noptional_value = rel\nvalues = \n\talpha\n\trc\n\trel\n\n[bumpversion:file:CMakeLists.txt]\n\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.037109375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Chromium\nAccessModifierOffset: -4\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: true\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  BeforeCatch:     true\n  BeforeElse:      true\n  IndentBraces:    false\n  SplitEmptyFunction: false\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializers: BeforeColon\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 2\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories:\n\n  # Local includes \"\":\n  - Regex:           '^\".*'\n    Priority:        1\n\n  # Third party libraries:\n  - Regex:           '^<cryptopp/.*'\n    Priority:        70\n\n  # Standard library extensions / common generic purpose libraries:\n  - Regex:           '^<boost/.*'\n    Priority:        80\n\n  # Testing libraries:\n  - Regex:           '^<benchmark/.*'\n    Priority:        90\n  - Regex:           '^<gtest/.*'\n    Priority:        90\n\n  # Public includes <>:\n  - Regex:           '^<.*\\.h|hpp>'\n    Priority:        2\n\n  # Standard library:\n  - Regex:           '^<.*'\n    Priority:        100\n\n  # Anything else:\n  - Regex:           '.*'\n    Priority:        4\n\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakAssignment: 1\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 50\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        4\nUseTab:          Never\n...\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0283203125,
          "content": "/build\n/deps\n/test/jsontests\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2978515625,
          "content": "# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs\n# http://editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{cpp,c,hpp,h}]\nindent_style = tab\nindent_size = 4\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7900390625,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n\n# VS stuff\nbuild\nipch\n*.sdf\n*.opensdf\n*.suo\n*.vcxproj\n*.vcxproj.filters\n*.sln\n\n# VIM stuff\n*.swp\n\n# Xcode stuff\nbuild_xc\n\n*.user\n*.user.*\n*~\n\n# build system\nbuild.*/\n/deps/\nextdep/install\nextdep/download\n/cmake-build-*/\n\n*.pyc\n\n# MacOS Development\n.DS_Store\n# CocoaPods\nPods/\nPodfile.lock\n# Xcode\n.DS_Store\nbuild/\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\n*.xcworkspace\n!default.xcworkspace\nxcuserdata\n*.xcuserstate\nprofile\n*.moved-aside\nDerivedData\nproject.pbxproj\n\n# JetBrains stuff\n.idea/\ncmake-build-*/\nbin/\n\n# Visual Studio Code\nbrowse.VC.db\n\ndoc/html\n*.autosave\nnode_modules/\n\ndependency_graph.svg\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3359375,
          "content": "[submodule \"test/jsontests\"]\n\tpath = test/jsontests\n\turl = https://github.com/ethereum/tests.git\n[submodule \"evmc\"]\n\tpath = evmc\n\turl = https://github.com/ethereum/evmc\n[submodule \"cable\"]\n\tpath = cmake/cable\n\turl = https://github.com/ethereum/cable\n[submodule \"scripts/dopple\"]\n\tpath = scripts/dopple\n\turl = https://github.com/ethereum/dopple\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 4.1142578125,
          "content": "# Aleth: Ethereum C++ client, tools and libraries.\n# Copyright 2014-2019 Aleth Authors.\n# Licensed under the GNU General Public License, Version 3.\n\nlanguage: cpp\nbranches:\n    # We need to whitelist the branches which we want to have \"push\" automation.\n    # Pull request automation is not constrained to this set of branches.\n    only:\n        - develop\n        - release\n        - /travis/\n        - hunter\nenv:\n    global:\n        - TRAVIS_BUILD_TYPE=RelWithDebInfo\n        - TRAVIS_TESTS=On\n        - secure: \"Nm9HEvhW8wtbF9v44g2Vo2CfX8cFlw3UWutHMmVl5nrcri34BVPXulsPF3CrIdoGgdBQvGxzNmbmAgi0KokaWhLZ2WvuDUXRAU8wuU3SB/AV7hNIGFZDqgk1LBBzwaFngqDCqqIQ29v2Z59s3y8qakmPQbR8eNJ1YAc2F9O8iVI=\"\nmatrix:\n    include:\n        - os: linux\n          dist: trusty\n          sudo: required\n          node_js:\n              - \"8\"\n          env:\n              - ZIP_SUFFIX=ubuntu-trusty\n\n#        - os: osx\n#          osx_image: xcode9\n#          env:\n#              - TRAVIS_TESTS=Off\n#              - ZIP_SUFFIX=macos-sierra\ngit:\n    depth: 2\ncache:\n    ccache: true\n    directories:\n        - ~/.ethash\n        - ~/.local\n        - ~/Library/Caches/Homebrew\n        # Cache whole deps dir hoping you will not need to download and\n        # build external dependencies next build.\n        - $TRAVIS_BUILD_DIR/build/deps\ninstall: |\n    if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n      ./scripts/install_cmake.sh && ./scripts/install_solc_lllc.sh;\n      pyenv local 3.6\n      pip install --user requests\n    fi\n    export HOMEBREW_NO_AUTO_UPDATE=1\nbefore_script:\n    - travis_wait 150 ./scripts/build.sh $TRAVIS_BUILD_TYPE\n    - ./scripts/cleanup_ccache.sh\nscript:\n    - cd $TRAVIS_BUILD_DIR/build && ../scripts/tests.sh $TRAVIS_TESTS\nafter_success:\n    - pip install --user codecov\n    - codecov\ndeploy:\n    # This is the deploy target for the native build (Linux and macOS)\n    # which generates ZIPs per commit.  We are in agreement that\n    # generating ZIPs per commit for the develop branch is probably\n    # just noise, so we only run this deployment target on 'release'.\n    #\n    # Unlike the Appveyor GitHub Releases target, the support in TravisCI\n    # seemingly doesn't provide a means for passing a description, tag, etc.\n    # In practice, we are letting the Appveyor CI do all that stuff, and\n    # then this deployment flow just seems to find that most recent tag,\n    # and just add our Linux and macOS ZIPs into the same tag, which is\n    # what we want to happen.  But is very accidental and brittle-looking.\n    #\n    # The 'skip_cleanup' stops the workspace being cleaned out prior to\n    # generation of the artifacts.  Strange that we should explicitly\n    # need to do that, but we do.\n    #\n    # Tokens in TravisCI can be generated a few different ways.  Bob had\n    # success using the 'travis' gem, and then using that gem to\n    # create/edit this .travis.yml file, and then cut-and-pasting the\n    # good bits back out of what it generated.  The gem changes all the\n    # whitespace and deletes comments, so cannot be used as-is.  But\n    # it does generate an appropriate auth token.\n    #\n    # See https://docs.travis-ci.com/user/deployment/releases\n    # See https://blog.travis-ci.com/2013-01-28-token-token-token/\n    # See https://github.com/ethereum/webthree-umbrella/issues/658\n    #\n\n    - provider: releases\n      api_key:\n          secure: HHcAWFjVNwf8b83KVQnEa172Eo7aur+scVCq4BzgPDXnF+v4GDXT7PAaXyWBwIyrFoIJduPCojsiIBP8QZwtjaKgnywnREjaLc0syTCLSeUHcp/+jPRdickvfgHJWG06sU7ZST8/HnGmoOqV/BUlGhHiqma1oJfGEJ6aaG4oza77ZYAxLPxwq9NOuTHVGJwlphcfeevcU3F0C/mxDEEMEz66lDolp4DCP5L4muHlrOCZ+HSjRwz5/anVNVWNO/nM1I0wmI2TRAS0RPzwClVD8iiGJHhZ/WdgenG4nosBG9UQjd/56LLKI25bIJijz/tpe89pCRUJtMYtcXR5C7w8Is05a1GMedBAiT7Bu35qHbpxJeqcw26DJL4U3+IeHfymXpK/E3RAj16bj+mtxxYSEzaae7obCm1rDA1LnPTI94kAea2ZNOUucDK5FaROX/uBXk422xrQTdJpEpg4TLa7GmQGdtyJC0OnzaOTXWg87lbVMq1PndDLE3STqXT5J/wj/WfUtXlN38x9aX7wwrmyCXY3WJ1zzShAgRO9YjRRosMBkahGDj5l75w9KX8yW3C5txcxjPVGSxQIl+bv9FPrBJmU1WOOPYQlHm92JQJus8BXXQCuhg3mEsZQfmGpgrS82NUB15V1nZB3xCXniKcKnQirzbRXLg8wjlPbT9DKGbc=\n      file: $TRAVIS_BUILD_DIR/cpp-ethereum-$ZIP_SUFFIX.zip\n      skip_cleanup: true\n      on:\n          repo: ethereum/cpp-ethereum\n          branch: release\n"
        },
        {
          "name": ".ycm_extra_conf.py",
          "type": "blob",
          "size": 2.3955078125,
          "content": "# See LICENSE file for license\n\nimport os\nimport ycm_core\n\n\ndef DirectoryOfThisScript():\n  return os.path.dirname( os.path.abspath( __file__ ) )\n\n\nproject_dir = DirectoryOfThisScript()\n\ntry:\n    with open('build/_3rdParty/Hunter/install-root-dir') as f:\n        hunter_install_dir = f.readline()\nexcept IOError:\n    # Ignore if file does not exist\n    hunter_install_dir = ''\n\nflags = [\n'-Wall',\n'-Werror',\n'-pedantic',\n'-std=c++11',\n'-x',\n'c++',\n'-DBOOST_COROUTINES_NO_DEPRECATION_WARNING=1',\n'-DGTEST_HAS_TR1_TUPLE=0',\n'-DGTEST_USE_OWN_TR1_TUPLE=0',\n'-isystem',\n'/usr/local/include',\n'-I',\nproject_dir,\n'-I',\nos.path.join(project_dir, 'build')\n]\n\nif hunter_install_dir:\n    flags += ['-I', hunter_install_dir]\n\ncompilation_database_folder = os.path.join(project_dir, 'build')\n\nif os.path.exists( compilation_database_folder ):\n  database = ycm_core.CompilationDatabase( compilation_database_folder )\nelse:\n  database = None\n\nSOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]\n\n\ndef IsHeaderFile( filename ):\n  extension = os.path.splitext( filename )[ 1 ]\n  return extension in [ '.h', '.hxx', '.hpp', '.hh' ]\n\n\ndef GetCompilationInfoForFile( filename ):\n  # The compilation_commands.json file generated by CMake does not have entries\n  # for header files. So we do our best by asking the db for flags for a\n  # corresponding source file, if any. If one exists, the flags for that file\n  # should be good enough.\n  if IsHeaderFile( filename ):\n    basename = os.path.splitext( filename )[ 0 ]\n    for extension in SOURCE_EXTENSIONS:\n      replacement_file = basename + extension\n      if os.path.exists( replacement_file ):\n        compilation_info = database.GetCompilationInfoForFile(\n          replacement_file )\n        if compilation_info.compiler_flags_:\n          return compilation_info\n    return None\n  return database.GetCompilationInfoForFile( filename )\n\n\ndef FlagsForFile( filename, **kwargs ):\n  if not database:\n    return {\n      'flags': flags,\n      'include_paths_relative_to_dir': DirectoryOfThisScript()\n    }\n\n  compilation_info = GetCompilationInfoForFile( filename )\n  if not compilation_info:\n    return None\n\n  # Bear in mind that compilation_info.compiler_flags_ does NOT return a\n  # python list, but a \"list-like\" StringVec object.\n  final_flags = list( compilation_info.compiler_flags_ )\n\n  return {\n    'flags': final_flags,\n    'include_paths_relative_to_dir': compilation_info.compiler_working_dir_\n  }\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.693359375,
          "content": "# Changelog\n\n## [1.9.0] - Unreleased\n\n- Added: [#5868](https://github.com/ethereum/aleth/pull/5868) `test_importRawBlock` RPC method reports the detailed reason when import fails.\n- Changed: [#5893](https://github.com/ethereum/aleth/pull/5893) testeth: RlpTests treat empty `out` field as invalid.\n- Removed: [#5885](https://github.com/ethereum/aleth/pull/5885) Discontinue `testeth --filltests` support for BlockchainTests, TransitionTests, BCGeneralStateTests.\n\n## [1.8.0] - 2019-12-16\n\n- Added: [#5699](https://github.com/ethereum/aleth/pull/5699) EIP 2046: Reduced gas cost for static calls made to precompiles.\n- Added: [#5741](https://github.com/ethereum/aleth/pull/5741) Support for individual EIP activation to facilitate EIP-centric network upgrade process.\n- Added: [#5752](https://github.com/ethereum/aleth/pull/5752) [#5753](https://github.com/ethereum/aleth/pull/5753) [#5809](https://github.com/ethereum/aleth/pull/5809) Implement EIP1380 (reduced gas costs for call-to-self).\n- Added: [#5859](https://github.com/ethereum/aleth/pull/5859) EIP-2384 Istanbul/Berlin Difficulty Bomb Delay and **Muir Glacier** fork support.\n- Changed: [#5750](https://github.com/ethereum/aleth/pull/5750) Use `testeth -t <SUITE_NAME> -- --testfile <PATH>` to run the tests from file at any path. Use `testeth -t <SUITE_NAME> -- --testfile <PATH> --singletest <TEST_NAME>` to run only single test from any file.\n- Changed: [#5801](https://github.com/ethereum/aleth/pull/5801) `testeth -t BlockchainTests` command now doesn't run the tests for the forks before Istanbul. To run those tests use a separate LegacyTests suite with command `testeth -t LegacyTests/Constantinople/BlockchainTests`.\n- Changed: [#5807](https://github.com/ethereum/aleth/pull/5807) Optimize selfdestruct opcode in LegacyVM by reducing state accesses in certain out-of-gas scenarios.\n- Changed: [#5806](https://github.com/ethereum/aleth/pull/5806) Optimize selfdestruct opcode in aleth-interpreter by reducing state accesses in certain out-of-gas scenarios.\n- Changed: [#5837](https://github.com/ethereum/aleth/pull/5837) [#5839](https://github.com/ethereum/aleth/pull/5839) [#5845](https://github.com/ethereum/aleth/pull/5845) [#5846](https://github.com/ethereum/aleth/pull/5846) Output format of `testeth --jsontrace` command changed to better match output of geth's evm tool and to integrate with evmlab project.\n- Changed: [#5848](https://github.com/ethereum/aleth/pull/5848) `aleth-vm --codefile <PATH>` now reads bytecode file from path and `aleth-vm --codefile - <bytecode>` now reads bytecode from standard input.\n- Changed: [#5864](https://github.com/ethereum/aleth/pull/5864) Allow a user to send multiple transactions before a new block is mined.\n- Removed: [#5760](https://github.com/ethereum/aleth/pull/5760) Official support for Visual Studio 2015 has been dropped. Compilation with this compiler is expected to stop working after migration to C++14.\n- Removed: [#5840](https://github.com/ethereum/aleth/pull/5840) The list of precompiled contracts is not required in config files anymore.\n- Removed: [#5850](https://github.com/ethereum/aleth/pull/5850) accounts section is now optional in config files.\n- Fixed: [#5792](https://github.com/ethereum/aleth/pull/5792) Faster and cheaper execution of RPC functions which query blockchain state (e.g. getBalance).\n- Fixed: [#5811](https://github.com/ethereum/aleth/pull/5811) RPC methods querying transactions (`eth_getTransactionByHash`, `eth_getBlockByNumber`) return correct `v` value.\n- Fixed: [#5821](https://github.com/ethereum/aleth/pull/5821) `test_setChainParams` correctly initializes custom configuration of precompiled contracts.\n- Fixed: [#5826](https://github.com/ethereum/aleth/pull/5826) Fix blocking bug in database rebuild functionality - users can now rebuild their databases via Aleth's '-R' switch.\n- Fixed: [#5827](https://github.com/ethereum/aleth/pull/5827) Detect database upgrades and automatically rebuild the database when they occur.\n- Fixed: [#5852](https://github.com/ethereum/aleth/pull/5852) Output correct original opcodes instead of synthetic `PUSHC`/`JUMPC`/`JUMPCI` in VM trace.\n- Fixed: [#5829](https://github.com/ethereum/aleth/pull/5829) web3.eth.getBlock now returns block size in bytes. This requires a (automatic) database rebuild which can take a while depending on how many blocks are in the local chain.\n- Fixed: [#5866](https://github.com/ethereum/aleth/pull/5866) Update output of `debug_accountRangeAt` and `eth_getTransactionCount` RPC functions to conform to Geth's output.\n- Fixed: [#5865](https://github.com/ethereum/aleth/pull/5865) Fix bug which causes syncing to become permanently stuck.\n\n## [1.7.2] - 2019-11-22\n\n- Fixed: [#5834](https://github.com/ethereum/aleth/pull/5834) Fix segmentation fault during sync.\n- Fixed: [#5841](https://github.com/ethereum/aleth/pull/5841) Revert the change introduced in 1.7.0 to wait 2 secods after sending `Disconnect` to peer before closing the socket, as it caused instabilty during sync.\n\n## [1.7.1] - 2019-11-18\n\n- Fixed: [#5830](https://github.com/ethereum/aleth/pull/5830) Fix cost of ECADD and ECMULL for Istanbul in Mainnet and Ropsten chain configs.\n\n## [1.7.0] - 2019-11-14\n\n- Added: [#5537](https://github.com/ethereum/aleth/pull/5537) Creating Ethereum Node Record (ENR) at program start.\n- Added: [#5571](https://github.com/ethereum/aleth/pull/5571) Support Discovery v4 ENR Extension messages.\n- Added: [#5557](https://github.com/ethereum/aleth/pull/5557) Improved debug logging of full sync.\n- Added: [#5564](https://github.com/ethereum/aleth/pull/5564) Improved help output of Aleth by adding list of channels.\n- Added: [#5575](https://github.com/ethereum/aleth/pull/5575) Log active peer count and peer list every 30 seconds.\n- Added: [#5580](https://github.com/ethereum/aleth/pull/5580) Enable syncing from ETC nodes for blocks < dao hard fork block.\n- Added: [#5591](https://github.com/ethereum/aleth/pull/5591) Network logging bugfixes and improvements and add p2pcap log channel.\n- Added: [#5588](https://github.com/ethereum/aleth/pull/5588) Testeth prints similar test suite name suggestions, when the name passed in `-t` argument is not found.\n- Added: [#5593](https://github.com/ethereum/aleth/pull/5593) Dynamically updating host ENR.\n- Added: [#5624](https://github.com/ethereum/aleth/pull/5624) Remove useless peers from peer list.\n- Added: [#5634](https://github.com/ethereum/aleth/pull/5634) Bootnodes for Rinkeby and Goerli.\n- Added: [#5640](https://github.com/ethereum/aleth/pull/5640) Support EIP-1702 Generalized Account Versioning Scheme (active only in Experimental fork.)\n- Added: [#5691](https://github.com/ethereum/aleth/pull/5691) Istanbul support: EIP-2028 Transaction data gas cost reduction.\n- Added: [#5696](https://github.com/ethereum/aleth/pull/5696) [#5708](https://github.com/ethereum/aleth/pull/5708) Istanbul support: EIP-1344 ChainID opcode.\n- Added: [#5700](https://github.com/ethereum/aleth/pull/5700) [#5725](https://github.com/ethereum/aleth/pull/5725) Istanbul support: EIP 1884 Repricing for trie-size-dependent opcodes.\n- Added: [#5701](https://github.com/ethereum/aleth/issues/5701) Outputs ENR text representation in admin.nodeInfo RPC.\n- Added: [#5705](https://github.com/ethereum/aleth/pull/5705) Istanbul support: EIP 1108 Reduce alt_bn128 precompile gas costs.\n- Added: [#5707](https://github.com/ethereum/aleth/pull/5707) Aleth waits for 2 seconds after sending disconnect to peer before closing socket.\n- Added: [#5709](https://github.com/ethereum/aleth/pull/5709) [#5728](https://github.com/ethereum/aleth/pull/5728) Istanbul support: EIP-2200 Structured Definitions for Net Gas Metering.\n- Added: [#5751](https://github.com/ethereum/aleth/pull/5751) Istanbul support: EIP-152 Add BLAKE2 compression function `F` precompile.\n- Added: [#5755](https://github.com/ethereum/aleth/pull/5755) testeth now runs `stChainId`, `stSLoadTest`, `stSelfBalance` tests for Istanbul.\n- Added: [#5758](https://github.com/ethereum/aleth/pull/5758) Istanbul support: activation in Ropsten config.\n- Added: [#5762](https://github.com/ethereum/aleth/pull/5762) aleth-vm supports `--network Istanbul` option.\n- Changed: [#5532](https://github.com/ethereum/aleth/pull/5532) The leveldb is upgraded to 1.22. This is breaking change on Windows and the old databases are not compatible.\n- Changed: [#5559](https://github.com/ethereum/aleth/pull/5559) Update peer validation error messages.\n- Changed: [#5568](https://github.com/ethereum/aleth/pull/5568) Improve rlpx handshake log messages and create new rlpx log channel.\n- Changed: [#5570](https://github.com/ethereum/aleth/pull/5570) Now it's not necessary to recompile with VMTRACE flag to get VM trace log. Just use `testeth -- --vmtrace` or `aleth -v 4 --log-vmtrace`.\n- Changed: [#5576](https://github.com/ethereum/aleth/pull/5576) Moved sstore_combinations and static_Call50000_sha256 tests to stTimeConsuming test suite. (testeth runs them only with `--all` flag)\n- Changed: [#5589](https://github.com/ethereum/aleth/pull/5589) Make aleth output always line-buffered even when redirected to file or pipe.\n- Changed: [#5602](https://github.com/ethereum/aleth/pull/5602) Better predicting external IP address and UDP port.\n- Changed: [#5605](https://github.com/ethereum/aleth/pull/5605) Network logging bugfixes and improvements and add warpcap log channel.\n- Changed: [#5628](https://github.com/ethereum/aleth/pull/5628) Don't try to endlessly reconnect to official Ethereum bootnodes.\n- Changed: [#5632](https://github.com/ethereum/aleth/pull/5632) RocksDB support is disabled by default. Enable with `-DROCKSB=ON` CMake option.\n- Changed: [#5648](https://github.com/ethereum/aleth/pull/5648) `BlockChainTests` suite is split into `BlockChainTests/ValidBlocks` and `BlockChainTests/InvalidBlocks`.\n- Changed: [#5678](https://github.com/ethereum/aleth/pull/5678) Enable optimizer in aleth-interpreter by default.\n- Changed: [#5675](https://github.com/ethereum/aleth/pull/5675) Disconnect from peer when syncing is disabled for peer.\n- Changed: [#5676](https://github.com/ethereum/aleth/pull/5676) When receiving large batches of new block hashes, process up to 1024 hashes instead of disabling the peer.\n- Changed: [#5719](https://github.com/ethereum/aleth/pull/5719) Enable support for Visual Studio 2017 on Windows.\n- Changed: [#5713](https://github.com/ethereum/aleth/pull/5713) Propagate new blocks after PoW check rather than after import into the blockchain.\n- Changed: [#5734](https://github.com/ethereum/aleth/pull/5734) debug_accountRangeAt RPC method is renamed to debug_accountRange to conform with geth and retesteth requirements.\n- Changed: [#5735](https://github.com/ethereum/aleth/pull/5735) `testeth -t GeneralStateTests` and `testeth -t BCGeneralStateTests` commands now don't run the tests for the forks before Istanbul. To run those tests use a separate `LegacyTests` suite with commands `testeth -t LegacyTests/Constantinople/GeneralStateTests` and `testeth -t LegacyTests/Constantinople/BCGeneralStateTests -- --all`\n- Changed: [#5810](https://github.com/ethereum/aleth/pull/5810) [EVMC] has been upgraded to version 7.0.0.\n- Removed: [#5631](https://github.com/ethereum/aleth/pull/5631) Removed PARANOID build option.\n- Fixed: [#5562](https://github.com/ethereum/aleth/pull/5562) Don't send header request messages to peers that haven't sent us Status yet.\n- Fixed: [#5581](https://github.com/ethereum/aleth/pull/5581) Fixed finding neighbour nodes in Discovery.\n- Fixed: [#5599](https://github.com/ethereum/aleth/pull/5600) Prevent aleth from attempting concurrent connection to node which results in disconnect of original connection.\n- Fixed: [#5609](https://github.com/ethereum/aleth/pull/5609) Log valid local enode-address when external IP is not known.\n- Fixed: [#5627](https://github.com/ethereum/aleth/pull/5627) Correct testeth --help log output indentation.\n- Fixed: [#5644](https://github.com/ethereum/aleth/pull/5644) Avoid attempting to sync with disconnected peers.\n- Fixed: [#5647](https://github.com/ethereum/aleth/pull/5647) test_importRawBlock RPC method correctly fails in case of import failure.\n- Fixed: [#5664](https://github.com/ethereum/aleth/pull/5664) Behavior in corner case tests about touching empty Precompiles now agrees with geth's results.\n- Fixed: [#5662](https://github.com/ethereum/aleth/pull/5662) Correct depth value when aleth-interpreter invokes `evmc_host_interface::call` callback.\n- Fixed: [#5666](https://github.com/ethereum/aleth/pull/5666) aleth-interpreter returns `EVMC_INVALID_INSTRUCTION` when `INVALID` opcode is encountered and `EVMC_UNKNOWN_INSTRUCTION` for undefined opcodes.\n- Fixed: [#5706](https://github.com/ethereum/aleth/pull/5706) Stop tracking sent transactions after they've been imported into the blockchain.\n- Fixed: [#5687](https://github.com/ethereum/aleth/pull/5687) Limit transaction queue's dropped transaction history to 1024 transactions.\n- Fixed: [#5718](https://github.com/ethereum/aleth/pull/5718) Avoid checking contract balance or destination account existence when executing self-destruct operations on Frontier and Homestead.\n- Fixed: [#5803](https://github.com/ethereum/aleth/pull/5803) Client version string reported by RPC and devp2p now better matches the format used by other clients. This will allow aleth to be correctly listed on ethernodes.org.\n\n## [1.6.0] - 2019-04-16\n\n- Added: [#5485](https://github.com/ethereum/aleth/pull/5485) aleth-bootnode now by default connects to official Ethereum bootnodes. This can be disabled with `--no-bootstrap` flag.\n- Added: [#5505](https://github.com/ethereum/aleth/pull/5505) Allow building with libc++ on Linux.\n- Added: [#5514](https://github.com/ethereum/aleth/pull/5514) Improved logging in case of RPC method failures.\n- Added: [#5526](https://github.com/ethereum/aleth/pull/5526) Improved logging when loading chain config json containing syntax error.\n- Changed: [#5464](https://github.com/ethereum/aleth/pull/5464) Upgrade OS and compilers in the docker image for tests.\n- Changed: [#5560](https://github.com/ethereum/aleth/pull/5560) Upgrade [ethash](https://github.com/chfast/ethash) library to version 0.4.4.\n- Removed: [#5538](https://github.com/ethereum/aleth/pull/5538) Removed --private flag from aleth command-line arguments.\n- Fixed: [#5483](https://github.com/ethereum/aleth/pull/5483) Don't ping the same node more than once in a row; also fixes the assertion failure.\n- Fixed: [#5512](https://github.com/ethereum/aleth/pull/5512) Calling `eth_call` without `from` argument.\n- Fixed: [#5502](https://github.com/ethereum/aleth/pull/5502) Fix Discovery terminating prematurely because of race condition.\n- Fixed: [#5452](https://github.com/ethereum/aleth/pull/5452) Correctly handle Discovery messages when the peer changes public key.\n- Fixed: [#5519](https://github.com/ethereum/aleth/pull/5519) Correctly handle Discovery messages with known public key but unknown endpoint.\n- Fixed: [#5523](https://github.com/ethereum/aleth/pull/5523) [#5533](https://github.com/ethereum/aleth/pull/5533) Fix syncing terminating prematurely because of race condition.\n- Fixed: [#5539](https://github.com/ethereum/aleth/pull/5539) Fix logic for determining if dao hard fork block header should be requested.\n- Fixed: [#5547](https://github.com/ethereum/aleth/pull/5547) Fix unnecessary slow-down of eth_flush RPC method.\n- Fixed: [#5548](https://github.com/ethereum/aleth/pull/5548) Fix rlp tool for long hexadecimal string inputs.\n- Fixed: [#5181](https://github.com/ethereum/aleth/issues/5181) Fix building on PowerPC architecture where -mtune=generic is not available.\n\n\n[1.9.0]: https://github.com/ethereum/aleth/compare/v1.8.0...master\n[1.8.0]: https://github.com/ethereum/aleth/releases/tag/v1.8.0\n[1.7.2]: https://github.com/ethereum/aleth/releases/tag/v1.7.2\n[1.7.1]: https://github.com/ethereum/aleth/releases/tag/v1.7.1\n[1.7.0]: https://github.com/ethereum/aleth/releases/tag/v1.7.0\n[1.6.0]: https://github.com/ethereum/aleth/releases/tag/v1.6.0\n\n[EVMC]: https://github.com/ethereum/evmc\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.1865234375,
          "content": "# Aleth: Ethereum C++ client, tools and libraries.\n# Copyright 2013-2019 Aleth Authors.\n# Licensed under the GNU General Public License, Version 3. See the LICENSE file.\n\ncmake_minimum_required(VERSION 3.9.3)\n\nif (NOT EXISTS ${CMAKE_SOURCE_DIR}/evmc/.git OR NOT EXISTS ${CMAKE_SOURCE_DIR}/cmake/cable/.git)\n    message(FATAL_ERROR \"Git submodules not initialized, execute:\\n  git submodule update --init\")\nendif()\n\ninclude(cmake/cable/bootstrap.cmake)\ninclude(CableBuildInfo)\ninclude(CableBuildType)\ninclude(CableToolchains)\ninclude(GNUInstallDirs)\n\ncable_configure_toolchain(DEFAULT cxx14-pic)\n\nset(ETH_CMAKE_DIR \"${CMAKE_CURRENT_LIST_DIR}/cmake\" CACHE PATH \"The path to the cmake directory\")\nlist(APPEND CMAKE_MODULE_PATH ${ETH_CMAKE_DIR})\n\n# Map current configuration to configurations of imported targets.\nset(CMAKE_MAP_IMPORTED_CONFIG_DEBUG Release)\nset(CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release)\n\nset(HUNTER_CONFIGURATION_TYPES Release CACHE STRING \"Hunter configuration types\")\nset(HUNTER_JOBS_NUMBER 4 CACHE STRING \"Hunter jobs number\")\nset(HUNTER_CACHE_SERVERS \"https://github.com/ethereum/hunter-cache\" CACHE STRING \"Hunter cache servers\")\nset(HUNTER_PASSWORDS_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Hunter/passwords.cmake CACHE STRING \"Hunter password path\")\n\n# In CI builds upload the binaries if the GITHUB_USER_PASSWORD was decrypted\n# (only for branches and internal PRs).\nif(\"$ENV{CI}\" AND NOT \"$ENV{GITHUB_USER_PASSWORD}\" STREQUAL \"\")\n    set(run_upload YES)\nelse()\n    set(run_upload NO)\nendif()\noption(HUNTER_RUN_UPLOAD \"Upload binaries to the cache server\" ${run_upload})\n\ninclude(HunterGate)\nHunterGate(\n    URL \"https://github.com/ruslo/hunter/archive/v0.23.211.tar.gz\"\n    SHA1 \"c022f0c2480e835a6bafdd734035ec2071b51897\"\n    LOCAL\n)\n\ncable_set_build_type(DEFAULT RelWithDebInfo CONFIGURATION_TYPES Debug;Release;RelWithDebInfo)\n\nproject(aleth)\nset(PROJECT_VERSION 1.8.0)\n\ncable_add_buildinfo_library(PROJECT_NAME aleth)\n\nset(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY On)\n\ninclude(EthCcache)\ninclude(EthOptions)\ninclude(EthCompilerSettings)\ninclude(EthExecutableHelper)\ninclude(EthDependencies)\ninclude(EthUtils)\n\nset(Boost_USE_STATIC_LIBS ON)\nset(Boost_USE_MULTITHREADED ON)\nhunter_add_package(Boost COMPONENTS program_options filesystem system thread context fiber log)\nfind_package(Boost CONFIG REQUIRED program_options filesystem system thread context fiber log)\n\nhunter_add_package(jsoncpp)\nfind_package(jsoncpp CONFIG REQUIRED)\n\nhunter_add_package(Snappy)\nfind_package(Snappy CONFIG REQUIRED)\n\nhunter_add_package(cryptopp)\nfind_package(cryptopp CONFIG REQUIRED)\n\nhunter_add_package(libjson-rpc-cpp)\nfind_package(libjson-rpc-cpp CONFIG REQUIRED)\n\nhunter_add_package(libscrypt)\nfind_package(libscrypt CONFIG REQUIRED)\n\nhunter_add_package(ethash)\nfind_package(ethash CONFIG REQUIRED)\n\nmessage(\"Crypto++: ${HUNTER_cryptopp_VERSION}\")\n\ninclude(ProjectSecp256k1)\ninclude(ProjectLibFF)\n\nfind_package(Threads)\n\nif(MINIUPNPC)\n    find_package(Miniupnpc 1.8.2013 REQUIRED)\nendif()\n\nset(UTILS_INCLUDE_DIR \"${CMAKE_SOURCE_DIR}/utils\")\n\nconfigure_project()\n\nif(TESTS)\n    # Import binaryen library for testeth.\n    # TODO: remove this once testeth uses binaryen as a CLI tool.\n    include(ProjectBinaryen)\nendif()\n\nadd_subdirectory(evmc)\n\n#Global include path for all libs.\ninclude_directories(\"${CMAKE_SOURCE_DIR}\")\n\noption(ALETH_INTERPRETER_SHARED \"Build aleth-interpreter as a shared library\" OFF)\nadd_subdirectory(libaleth-interpreter)\n\nadd_subdirectory(libdevcore)\nadd_subdirectory(libdevcrypto)\nadd_subdirectory(libp2p)\n\nadd_subdirectory(libethcore)\nadd_subdirectory(libevm)\nadd_subdirectory(libethereum)\nadd_subdirectory(libethashseal)\n\nadd_subdirectory(libwebthree)\nadd_subdirectory(libweb3jsonrpc)\n\nadd_subdirectory(aleth)\n\nif (TOOLS)\n    add_subdirectory(aleth-key)\n    add_subdirectory(aleth-vm)\n    add_subdirectory(rlp)\n    add_subdirectory(aleth-bootnode)\nendif()\n\nif (TESTS)\n    enable_testing()\n    add_subdirectory(test)\nendif()\n\n\ninstall(FILES ${PROJECT_BINARY_DIR}/aleth/buildinfo.json DESTINATION ${CMAKE_INSTALL_DATADIR}/aleth)\n\n\nif(WIN32)\n    set(CPACK_GENERATOR ZIP)\nelse()\n    set(CPACK_GENERATOR TGZ)\nendif()\nset(CPACK_PACKAGE_FILE_NAME ${PROJECT_NAME})\nset(CPACK_PACKAGE_CHECKSUM SHA256)\nset(CPACK_INCLUDE_TOPLEVEL_DIRECTORY FALSE)\ninclude(CPack)\n"
        },
        {
          "name": "CODING_STYLE.md",
          "type": "blob",
          "size": 7.95703125,
          "content": "# Aleth Coding Style\n\n## Code Formatting\n\nUse clang-format tool to format your changes, see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n\n## Namespaces\n\n1. No `using namespace` declarations in header files.\n2. All symbols should be declared in a namespace except for final applications.\n3. Preprocessor symbols should be prefixed with the namespace in all-caps and an underscore.\n\n```cpp\n       // WRONG:\n       #include <cassert>\n       using namespace std;\n       tuple<float, float> meanAndSigma(vector<float> const& _v);\n\n       // CORRECT:\n       #include <cassert>\n       std::tuple<float, float> meanAndSigma(std::vector<float> const& _v);\n```\n\n## Preprocessor\n\n1. File comment is always at top, and includes:\n   - Copyright.\n   - License.\n   \n2. Never use `#ifdef`/`#define`/`#endif` file guards. Prefer `#pragma` once as first line below file comment.\n3. Prefer static const variable to value macros.\n4. Prefer inline constexpr functions to function macros.\n\n\n## Capitalization\n\nGOLDEN RULE: Preprocessor: ALL_CAPS; C++: camelCase.\n\n1. Use camelCase for splitting words in names, except where obviously extending STL/boost functionality in which case follow those naming conventions.\n2. The following entities' first alpha is upper case:\n   - Type names.\n   - Template parameters.\n   - Enum members.\n   - static const variables that form an external API.\n3. All preprocessor symbols (macros, macro arguments) in full uppercase with underscore word separation.\n\n\nAll other entities' first alpha is lower case.\n\n\n## Variable prefixes\n\n1. Leading underscore `_` to parameter names.\n   - Exception: `o_parameterName` when it is used exclusively for output.\n     See also Declarations.5.\n   - Exception: `io_parameterName` when it is used for both input and output.\n     See also Declarations.5.\n2. Leading `c_` to const variables (unless part of an external API).\n3. Leading `g_` to global (non-const) variables.\n4. Leading `s_` to static (non-const, non-global) variables.\n\n\n\n## Error reporting\n\nPrefer exception to bool/int return type.\n\n\n## Declarations\n\n1. {Typename} + {qualifiers} + {name}. (**TODO**: Against [NL.26](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#nl26-use-conventional-const-notation))\n2. Only one per line.\n3. Favour declarations close to use; don't habitually declare at top of scope ala C.\n4. Always pass non-trivial parameters with a const& suffix.\n5. To return multiple \"out\" values, prefer returning a tuple or struct.\n   See [F.21].\n6. Never use a macro where adequate non-preprocessor C++ can be written.\n7. Make use of auto whenever type is clear or unimportant:\n   - Always avoid doubly-stating the type.\n   - Use to avoid vast and unimportant type declarations.\n   - However, avoid using auto where type is not immediately obvious from the context, and especially not for arithmetic expressions.\n8. Don't pass bools: prefer enumerations instead.\n9. Prefer enum class to straight enum.\n\n```cpp\n       // WRONG:\n       const double d = 0;\n       int i, j;\n       char *s;\n       float meanAndSigma(std::vector<float> _v, float* _sigma, bool _approximate);\n       Derived* x(dynamic_cast<Derived*>(base));\n       for (map<ComplexTypeOne, ComplexTypeTwo>::iterator i = l.begin(); i != l.end(); ++l) {}\n\n       // CORRECT:\n       enum class Accuracy\n       {\n           Approximate,\n           Exact\n       };\n       double const d = 0;\n       int i;\n       int j;\n       char* s;\n       std::tuple<float, float> meanAndSigma(std::vector<float> const& _v, Accuracy _a);\n       auto x = dynamic_cast<Derived*>(base);\n       for (auto i = x.begin(); i != x.end(); ++i) {}\n```\n\n## Structs & classes\n\n1. Structs to be used when all members public and no virtual functions.\n   - In this case, members should be named naturally and not prefixed with `m_`\n2. Classes to be used in all other circumstances.\n\n\n\n## Members\n\n1. One member per line only.\n2. Private, non-static, non-const fields prefixed with m_.\n3. Avoid public fields, except in structs.\n4. Use `override`, `final` and `const` as much as possible.\n5. No implementations with the class declaration, except:\n   - template or force-inline method (though prefer implementation at bottom of header file).\n   - one-line implementation (in which case include it in same line as declaration).\n6. For a property `foo`\n   - Member: `m_foo`;\n   - Getter: `foo()`; also: for booleans, `isFoo()`\n   - Setter: `setFoo()`;\n\n\n## Naming\n\n1. Collection conventions:\n   - `...s` means `std::vector` e.g. `using MyTypes = std::vector<MyType>`\n   - `...Set` means `std::set` e.g. `using MyTypeSet = std::set<MyType>`\n   - `...Hash` means `std::unordered_set` e.g. `using MyTypeHash = std::unordered_set<MyType>`\n2. Class conventions:\n   - `...Face` means the interface of some shared concept. (e.g. `FooFace` might be a pure virtual class.)\n3. Avoid unpronounceable names:\n   - If you need to shorten a name favour a pronouncable slice of the original to a scattered set of consonants.\n   - e.g. `Manager` shortens to `Man` rather than `Mgr`.\n4. Avoid prefixes of initials (e.g. DON'T use `IMyInterface`, `CMyImplementation`)\n5. Find short, memorable & (at least semi-) descriptive names for commonly used classes or name-fragments.\n   - A dictionary and thesaurus are your friends.\n   - Spell correctly.\n   - Think carefully about the class's purpose.\n   - Imagine it as an isolated component to try to decontextualise it when considering its name.\n   - Don't be trapped into naming it (purely) in terms of its implementation.\n\n\n\n## Type-definitions\n\n1. Prefer `using` to `typedef`. E.g. `using ints = std::vector<int>` rather than\n   `typedef std::vector<int> ints`.\n2. Generally avoid shortening a standard form that already includes all important information:\n   - e.g. stick to `shared_ptr<X>` rather than shortening to `ptr<X>`.\n3. Where there are exceptions to this (due to excessive use and clear meaning), note the change prominently and use it consistently.\n   - e.g. \n   ```cpp\n   using Guard = std::lock_guard<std::mutex>; ///< Guard is used throughout the codebase since it's clear in meaning and used commonly.\n   ```\n4. In general expressions should be roughly as important/semantically meaningful as the space they occupy.\n\n\n\n## Commenting\n\n1. Comments should be doxygen-compilable, using @notation rather than \\notation.\n2. Document the interface, not the implementation.\n   - Documentation should be able to remain completely unchanged, even if the method is reimplemented.\n   - Comment in terms of the method properties and intended alteration to class state (or what aspects of the state it reports).\n   - Be careful to scrutinise documentation that extends only to intended purpose and usage.\n   - Reject documentation that is simply an English transaction of the implementation.\n\n\n\n## Logging\n\nLogging should be performed at appropriate verbosities depending on the logging message.\nThe more likely a message is to repeat (and thus cause noise) the higher in verbosity it should be.\nSome rules to keep in mind:\n\n - Verbosity == 0 -> Reserved for important stuff that users must see and can understand.\n - Verbosity == 1 -> Reserved for stuff that users don't need to see but can understand.\n - Verbosity >= 2 -> Anything that is or might be displayed more than once every minute\n - Verbosity >= 3 -> Anything that only a developer would understand\n - Verbosity >= 4 -> Anything that is low-level (e.g. peer disconnects, timers being cancelled)\n\n\n## Recommended reading\n\nHerb Sutter and Bjarne Stroustrup\n- \"C++ Core Guidelines\" (https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md)\n\nHerb Sutter and Andrei Alexandrescu\n- \"C++ Coding Standards: 101 Rules, Guidelines, and Best Practices\"\n\nScott Meyers\n- \"Effective C++: 55 Specific Ways to Improve Your Programs and Designs (3rd Edition)\"\n- \"More Effective C++: 35 New Ways to Improve Your Programs and Designs\"\n- \"Effective Modern C++: 42 Specific Ways to Improve Your Use of C++11 and C++14\"\n\n\n[F.21]: https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#f21-to-return-multiple-out-values-prefer-returning-a-tuple-or-struct\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.533203125,
          "content": "# Aleth Contributing and Review Guidelines\n\n1. All submitted **Pull Requests** are assumed to be ready for review \n   unless they are labeled with `[in progress]` or have \"[WIP]\" in title.\n\n2. All submitted **Pull Requests** which change Aleth in a way that is visible to users (e.g. new features, bug fixes, significant logging changes) should include an entry in [`CHANGELOG.md`](CHANGELOG.md) in the unreleased version section. Please categorize your entry appropriately and group it with other entries of the same category. Please see the following for details on categories and how to make a good changelog entry: https://keepachangelog.com/en/1.0.0/\n\n2. **Code formatting** rules are described by the [Clang-Format Style Options] file [.clang-format].\n   Please use the [clang-format] (version 5.0 or higher recommended) tool to format your code _changes_ accordingly.\n   [git-clang-format] tool is useful to limit reformatting to your changes only:\n\n       git clang-format          # to reformat the changes in the staging area and put the result into working directory\n       git clang-format -f       # to reformat the changes in the working directory\n       git clang-format <commit> # to reformat commits between specified commit and HEAD\n\n\n[Clang-Format Style Options]: https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n[clang-format]:               https://clang.llvm.org/docs/ClangFormat.html\n[.clang-format]:              .clang-format\n[git-clang-format]:           https://llvm.org/svn/llvm-project/cfe/trunk/tools/clang-format/git-clang-format\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.2763671875,
          "content": "                      Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.6845703125,
          "content": "# Aleth – Ethereum C++ client, tools and libraries\n\n> The collection of C++ libraries and tools for Ethereum,\n> formerly known as _cpp-ethereum_ project.\n> This includes the full Ethereum client **aleth**.\n\n## ⚠️ **This project has been discontinued and is no longer maintained.** \n\n## Contact\n\n[![Gitter](https://img.shields.io/gitter/room/ethereum/aleth.svg)](https://gitter.im/ethereum/aleth)\n[![GitHub Issues](https://img.shields.io/github/issues-raw/ethereum/aleth.svg)](https://github.com/ethereum/aleth/issues)\n\n- Chat in [aleth channel on Gitter](https://gitter.im/ethereum/aleth).\n- Report bugs, issues or feature requests using [GitHub issues](https://github.com/ethereum/aleth/issues/new).\n\n\n## Usage\n\nThe Ethereum Documentation site hosts the **[aleth homepage](http://cpp-ethereum.org)**, which\nhas a Quick Start section.\n\n\nOperating system | Status\n---------------- | ----------\nUbuntu and macOS | [![TravisCI](https://img.shields.io/travis/ethereum/aleth/develop.svg)](https://travis-ci.org/ethereum/aleth)\nWindows          | [![AppVeyor](https://img.shields.io/appveyor/ci/ethereum/cpp-ethereum/develop.svg)](https://ci.appveyor.com/project/ethereum/cpp-ethereum)\n\n\n## Install\n\n### Download release binaries\n\nhttps://github.com/ethereum/aleth/releases\n\n### Using docker images\n\nAleth:\n```bash\ndocker run ethereum/aleth --help\n```\n\nTesteth:\n```bash\ndocker run ethereum/testeth --help\n```\n\n### Building from source\n\n#### Get the source code\n\nGit and GitHub are used to maintain the source code. Clone the repository by:\n\n```shell\ngit clone --recursive https://github.com/ethereum/aleth.git\ncd aleth\n```\n\nThe `--recursive` option is important. It orders git to clone additional\nsubmodules to build the project.\nIf you missed `--recursive` option, you are able to correct your mistake with command\n`git submodule update --init`.\n\n#### Install CMake\n\nCMake is used to control the build configuration of the project. Latest version of CMake is required\n(at the time of writing [3.9.3 is the minimum](CMakeLists.txt#L5)).\nWe strongly recommend you to install CMake by downloading and unpacking the binary\ndistribution  of the latest version available on the\n[**CMake download page**](https://cmake.org/download/).\n\nThe CMake package available in your operating system can also be installed\nand used if it meets the minimum version requirement.\n\n> **Alternative method**\n>\n> The repository contains the\n[scripts/install_cmake.sh](scripts/install_cmake.sh) script that downloads\n> a fixed version of CMake and unpacks it to the given directory prefix.\n> Example usage: `scripts/install_cmake.sh --prefix /usr/local`.\n\n#### Build\n\nConfigure the project build with the following command to create the\n`build` directory with the configuration.\n\n```shell\nmkdir build; cd build  # Create a build directory.\ncmake ..               # Configure the project.\ncmake --build .        # Build all default targets.\n```\n\nOn **Windows** we support Visual Studio 2017, and 2019. You should generate a Visual Studio solution file (`.sln`) for the 64-bit architecture via the following command:\n\n* **Visual Studio 2017**: `cmake .. -G \"Visual Studio 15 2017 Win64\"`\n* **Visual Studio 2019**: `cmake .. -G \"Visual Studio 16 2019\" -A x64`\n\nAfter the necessary dependencies have been downloaded and built and the solution has been generated, `aleth.sln` can be found in the\n`build` directory.\n\n#### Common Issues Building on Windows\n##### LINK : fatal error LNK1158: cannot run 'rc.exe'\nRc.exe is the [Microsoft Resource Compiler](https://docs.microsoft.com/en-us/windows/desktop/menurc/resource-compiler). It's distributed with the [Windows SDK](https://developer.microsoft.com/en-US/windows/downloads/windows-10-sdk) and is required for generating the Visual Studio solution file. It can be found in the following directory: ```%ProgramFiles(x86)%\\Windows Kits\\<OS major version>\\bin\\<OS full version>\\<arch>\\```\n\nIf you hit this error, adding the directory to your path (and launching a new command prompt) should fix the issue.\n\n## Contribute\n\n[![Contributors](https://img.shields.io/github/contributors/ethereum/aleth.svg)](https://github.com/ethereum/aleth/graphs/contributors)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/aleth.svg)](https://gitter.im/ethereum/aleth)\n[![up-for-grabs](https://img.shields.io/github/issues-raw/ethereum/aleth/help%20wanted.svg)](https://github.com/ethereum/aleth/labels/help%20wanted)\n\nThe current codebase is the work of many, many hands, with over 100\n[individual contributors](https://github.com/ethereum/aleth/graphs/contributors) over the course of its development.\n\nOur day-to-day development chat happens on the\n[aleth](https://gitter.im/ethereum/aleth) Gitter channel.\n\nAll contributions are welcome! We try to keep a list of tasks that are suitable\nfor newcomers under the tag\n[help wanted](https://github.com/ethereum/aleth/labels/help%20wanted).\nIf you have any questions, please do not hesitate to ask us about more information.\n\nPlease read [CONTRIBUTING](CONTRIBUTING.md) and [CODING_STYLE](CODING_STYLE.md)\nthoroughly before making alterations to the code base.\n\nAll development goes in develop branch.\n\n## Usage\n*Note: The following is the output of ```./aleth -h [--help]``` on Linux*\n\n```\nNAME:\n   aleth 1.7.2\nUSAGE:\n   aleth [options]\n\nWALLET USAGE:\n   account list                                List all keys available in wallet\n   account new                                 Create a new key and add it to wallet\n   account update [<uuid>|<address> , ... ]    Decrypt and re-encrypt keys\n   account import [<uuid>|<file>|<secret-hex>] Import keys from given source and place in wallet\n   wallet import <file>                        Import a presale wallet\n\nCLIENT MODE (default):\n  --mainnet                               Use the main network protocol\n  --ropsten                               Use the Ropsten testnet\n  --test                                  Testing mode; disable PoW and provide test rpc interface\n  --config <file>                         Configure specialised blockchain using given JSON information\n\n  --ipc                                   Enable IPC server (default: on)\n  --ipcpath <path>                        Set .ipc socket path (default: data directory)\n  --no-ipc                                Disable IPC server\n  --admin <password>                      Specify admin session key for JSON-RPC (default: auto-generated and printed at start-up)\n  -K [ --kill ]                           Kill the blockchain first\n  -R [ --rebuild ]                        Rebuild the blockchain from the existing database\n  --rescue                                Attempt to rescue a corrupt database\n\n  --import-presale <file>                 Import a pre-sale key; you'll need to specify the password to this key\n  -s [ --import-secret ] <secret>         Import a secret key into the key store\n  -S [ --import-session-secret ] <secret> Import a secret session into the key store\n  --master <password>                     Give the master password for the key store; use --master \"\" to show a prompt\n  --password <password>                   Give a password for a private key\n\nCLIENT TRANSACTING:\n  --ask <wei>            Set the minimum ask gas price under which no transaction will be mined (default: 20000000000)\n  --bid <wei>            Set the bid gas price to pay for transactions (default: 20000000000)\n  --unsafe-transactions  Allow all transactions to proceed without verification; EXTREMELY UNSAFE\n\nCLIENT NETWORKING:\n  -b [ --bootstrap ]              Connect to the default Ethereum peer servers (default unless --no-discovery used)\n  --no-bootstrap                  Do not connect to the default Ethereum peer servers (default only when --no-discovery is used)\n  -x [ --peers ] <number>         Attempt to connect to a given number of peers (default: 11)\n  --peer-stretch <number>         Give the accepted connection multiplier (default: 7)\n  --public-ip <ip>                Force advertised public IP to the given IP (default: auto)\n  --listen-ip <ip>(:<port>)       Listen on the given IP for incoming connections (default: 0.0.0.0)\n  --listen <port>                 Listen on the given port for incoming connections (default: 30303)\n  -r [ --remote ] <host>(:<port>) Connect to the given remote host (default: none)\n  --port <port>                   Connect to the given remote port (default: 30303)\n  --network-id <n>                Only connect to other hosts with this network id\n  --allow-local-discovery         Include local addresses in the discovery process. Used for testing purposes.\n  --peerset <list>                Comma delimited list of peers; element format: type:enode://publickey@ipAddress[:port[?discport=port]]\n                                          Types:\n                                          default     Attempt connection when no other peers are available and pinning is disabled\n                                          required    Keep connected at all times\n\n                                          Ports:\n                                          The first port argument is the tcp port used for direct communication among peers. If the second port\n                                          argument isn't supplied, the first port argument will also be the udp port used for node discovery.\n                                          If neither the first nor second port arguments are supplied, a default port of 30303 will be used for\n                                          both peer communication and node discovery.\n  --no-discovery                  Disable node discovery; implies --no-bootstrap\n  --pin                           Only accept or connect to trusted peers\n\nCLIENT MINING:\n  -a [ --address ] <addr>         Set the author (mining payout) address (default: auto)\n  -m [ --mining ] <on/off/number> Enable mining; optionally for a specified number of blocks (default: off)\n  --extra-data arg                Set extra data for the sealed blocks\n\nBENCHMARKING MODE:\n  -M [ --benchmark ]           Benchmark for mining and exit\n  --benchmark-warmup <seconds> Set the duration of warmup for the benchmark tests (default: 3)\n  --benchmark-trial <seconds>  Set the duration for each trial for the benchmark tests (default: 3)\n  --benchmark-trials <n>       Set the number of trials for the benchmark tests (default: 5)\n\nMINING CONFIGURATION:\n  -C [ --cpu ]                 When mining, use the CPU\n  -t [ --mining-threads ] <n>  Limit number of CPU/GPU miners to n (default: use everything available on selected platform)\n  --current-block <n>          Let the miner know the current block number at configuration time. Will help determine DAG size and required GPU memory\n  --disable-submit-hashrate    When mining, don't submit hashrate to node\n\nIMPORT/EXPORT MODES:\n  -I [ --import ] <file>      Import blocks from file\n  -E [ --export ] <file>      Export blocks to file\n  --from <n>                  Export only from block n; n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --to <n>                    Export only to block n (inclusive); n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --only <n>                  Equivalent to --export-from n --export-to n\n  --format <binary/hex/human> Set export format\n  --dont-check                Prevent checking some block aspects. Faster importing, but to apply only when the data is known to be valid\n  --download-snapshot <path>  Download Parity Warp Sync snapshot data to the specified path\n  --import-snapshot <path>    Import blockchain and state data from the Parity Warp Sync snapshot\n\nDATABASE OPTIONS:\n  --db <name> (=leveldb)      Select database implementation. Available options are: leveldb, memorydb.\n  --db-path <path> (=$HOME/.ethereum) Database path (for non-memory database options)\n\nVM OPTIONS:\n  --vm <name>|<path> (=legacy) Select VM implementation. Available options are: interpreter, legacy.\n  --evmc  <option>=<value>     EVMC option\n\nLOGGING OPTIONS:\n  -v [ --log-verbosity ] <0 - 4>        Set the log verbosity from 0 to 4 (default: 2).\n  --log-channels <channel_list>         Space-separated list of the log channels to show (default: show all channels).\n                                        Channels: block blockhdr bq chain client debug discov error ethcap exec host impolite info net overlaydb p2pcap peer\n                                        rlpx rpc snap statedb sync timer tq trace vmtrace warn warpcap watch\n  --log-exclude-channels <channel_list> Space-separated list of the log channels to hide.\n\n  --log-vmtrace                         Enable VM trace log (requires log-verbosity 4).\n\nGENERAL OPTIONS:\n  -d [ --data-dir ] <path> Load configuration files and keystore from path (default: $HOME/.ethereum)\n  -V [ --version ]         Show the version and exit\n  -h [ --help ]            Show this help message and exit\n```\n\n## Tools\nThe Aleth project includes the following tools in addition to the Aleth client:\n* **[aleth-bootnode](aleth-bootnode/)**: A C++ Ethereum discovery bootnode implementation\n* **[aleth-key](aleth-key/)**: A rudimentary wallet\n* **[aleth-vm](aleth-vm/)**: An EVM bytecode runner tool\n* **[rlp](rlp/)**: A RLP encoder/decoder tool\n* **[testeth](test/)**: A consensus test generator/runner tool\n\n## Mining\n\nThis project is **not suitable for Ethereum mining** because the support for GPU mining\nhas been dropped some time ago including the ethminer tool. Use the ethminer tool from https://github.com/ethereum-mining/ethminer.\n\n## Testing\nDetails on how to run and debug the tests can be found [here](doc/usingtesteth.rst)\n\n## Documentation\n\n- [Internal documentation for developers](doc/index.rst).\n- [Outdated documentation for end users](http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/).\n\n## License\n\n[![License](https://img.shields.io/github/license/ethereum/aleth.svg)](LICENSE)\n\nAll contributions are made under the [GNU General Public License v3](https://www.gnu.org/licenses/gpl-3.0.en.html). See [LICENSE](LICENSE).\n"
        },
        {
          "name": "aleth-bootnode",
          "type": "tree",
          "content": null
        },
        {
          "name": "aleth-key",
          "type": "tree",
          "content": null
        },
        {
          "name": "aleth-vm",
          "type": "tree",
          "content": null
        },
        {
          "name": "aleth",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.8251953125,
          "content": "# Aleth: Ethereum C++ client, tools and libraries.\n# Copyright 2016-2019 Aleth Authors.\n# Licensed under the GNU General Public License, Version 3.\n\nbranches:\n  only:\n    - master\n    - /release\\/.+/\n    - /v\\d+\\..+/\n    - /release\\/.+/\n    - appveyor\n    - hunter\nos: Visual Studio 2017\nconfiguration:\n  - RelWithDebInfo\nenvironment:\n  TESTS: On\n  GITHUB_USER_PASSWORD:\n    secure: 7TuNppxpvI3M/IF1PfvzZ8LluCeCQAsdFoJY+KhNv/pe/rAw5HEsTjqdbyM1mEtd\ncache:\n  - build/deps -> cmake\\Project**.cmake\ninstall:\n  - git submodule update --init --recursive\n\n  # Python 3\n  - set PATH=C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%\n  - pip install requests gitpython\n\nbefore_build: |\n  if not exist build mkdir build\n  cd build\n  cmake -G \"Visual Studio 15 2017 Win64\" ..\nbuild_script: |\n  cmake --build . --config %CONFIGURATION% --target package\ntest_script:\n    - cd %APPVEYOR_BUILD_FOLDER%\n    - scripts\\tests.bat %TESTS% %CONFIGURATION% %APPVEYOR_BUILD_FOLDER% %ETHEREUM_DEPS_PATH%\nartifacts:\n  - path: build\\aleth.zip\n    name: aleth-windows.zip\n\n# This is the deploy target for Windows which generates ZIPs per commit.\n# We are in agreement that generating ZIPs per commit for the develop\n# branch is probably just noise, so we only run this deployment target\n# on 'release'.\n#\n# See https://www.appveyor.com/docs/deployment/github for information\n# on GitHub Releases in Appveyor.\n#\n# You need to generate a GitHub personal access token for Appveyor\n# See https://github.com/settings/tokens for more information on that.\n# The token you generate there (in an encrypted form) is what is\n# passed to this deployment target in the 'auth_token' parameter\n# below.\ndeploy:\n    prerelease: true\n    provider: GitHub\n    auth_token:\n        secure: yukM9mHUbzuZSS5WSBLKSW0yGJerJEqAXkFhDhSHBBcKJE7GAryjQsdO9Kxh3yRv\n    artifact: aleth-windows.zip\n    on:\n        branch: release\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 8.3916015625,
          "content": "\ncommon-steps:\n\n  update-submodules: &update-submodules\n    run:\n      name: \"Update git submodules\"\n      command: |\n        git submodule update --init\n\n  environment-info: &environment-info\n    run:\n      name: \"Environment info\"\n      command: |\n        echo CXX: $CXX\n        $CXX --version\n        $CXX --version > compiler.version\n\n  configure: &configure\n    run:\n      name: \"Configure\"\n      # Build \"out-of-source\" to have better coverage report\n      # (ninja is using relative paths otherwise).\n      working_directory: ~/build\n      command: |\n        cmake ../project -G \"$GENERATOR\" -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_OPTIONS\n\n  build: &build\n    run:\n      name: \"Build\"\n      working_directory: ~/build\n      command: |\n        cmake --build . --target package -- -j $BUILD_PARALLEL_JOBS\n        mkdir -p ~/package\n        . aleth/buildinfo.sh\n        mv aleth.tar.gz ~/package/$PROJECT_NAME-$PROJECT_VERSION-$SYSTEM_NAME-$SYSTEM_PROCESSOR.tar.gz\n\n  test: &test\n    run:\n      name: \"Test\"\n      working_directory: ~/build\n      command: |\n        if [ $(uname) = Linux ]; then\n          export TMPDIR=/dev/shm\n        fi\n        export ETHEREUM_TEST_PATH=~/project/test/jsontests\n        ctest --output-on-failure -j $TEST_PARALLEL_JOBS\n\n  test-evmc-interpreter: &test-evmc-interpreter\n    run:\n      name: \"Test EVMC Interpreter\"\n      working_directory: ~/build\n      command: |\n        ETHEREUM_TEST_PATH=~/project/test/jsontests \\\n        test/testeth -t GeneralStateTests -- --vm libaleth-interpreter/libaleth-interpreter.so\n\n  store-package: &store-package\n    store_artifacts:\n      path: ~/package\n      destination: package\n\n  add-package-to-workspace: &add-package-to-workspace\n      persist_to_workspace:\n        root: ~/package\n        paths:\n          - \"*\"\n\n  store-randomcode-seed: &store-randomcode-seed\n    store_artifacts:\n      path: ~/build/test/randomCodeSeed.txt\n      destination: randomCodeSeed.txt\n\n  save-deps-cache: &save-deps-cache\n    cache-save:\n      name: \"Save dependencies cache\"\n      key: &deps-cache-key deps-4-{{arch}}-{{checksum \"compiler.version\"}}-{{checksum \"cmake/ProjectLibFF.cmake\"}}\n      paths:\n        - ~/build/deps\n\n  restore-deps-cache: &restore-deps-cache\n    cache-restore:\n      name: \"Restore dependencies cache\"\n      key: *deps-cache-key\n\n  upload-coverage-data: &upload-coverage-data\n    run:\n      name: \"Upload coverage data\"\n      command: |\n        pwd\n        $GCOV --version\n        codecov --required --gcov-exec \"$GCOV\" --gcov-root ~/build\n\n  save-ccache: &save-ccache\n    save_cache:\n      name: \"Save ccache\"\n      key: ccache-1-{{arch}}-{{checksum \"compiler.version\"}}-{{.Branch}}-{{epoch}}\n      paths:\n        - ~/.ccache\n\n  restore-ccache: &restore-ccache\n    restore_cache:\n      name: \"Restore ccache\"\n      keys:\n        - ccache-1-{{arch}}-{{checksum \"compiler.version\"}}-{{.Branch}}\n        - ccache-1-{{arch}}-{{checksum \"compiler.version\"}}\n      paths:\n        - ~/.ccache\n\n  setup-ccache: &setup-ccache\n    run:\n      name: \"Setup ccache\"\n      command: |\n        ccache --version\n        ccache --show-stats\n        ccache --zero-stats\n        ccache --max-size=3G\n\n  stat-ccache: &stat-ccache\n    run:\n      name: \"Show ccache stats\"\n      command: |\n        ccache --show-stats\n\n\nversion: 2\njobs:\n\n  linux-clang6:\n    environment:\n      BUILD_TYPE: Release\n      CXX: clang++-6.0\n      CC:  clang-6.0\n      GCOV: llvm-cov-6.0 gcov\n      GENERATOR: Ninja\n      BUILD_PARALLEL_JOBS: 8\n      TEST_PARALLEL_JOBS: 8\n      CMAKE_OPTIONS: -DALETH_INTERPRETER_SHARED=ON\n    docker:\n      - image: ethereum/cpp-build-env:7\n    steps:\n      - checkout\n      - *update-submodules\n      - *environment-info\n      - *restore-deps-cache\n      - *restore-ccache\n      - *setup-ccache\n      - *configure\n      - *build\n      - *stat-ccache\n      - *save-ccache\n      - *save-deps-cache\n      - *store-package\n      - *add-package-to-workspace\n      - *test\n      - *test-evmc-interpreter\n\n  linux-gcc6: &linux-gcc6\n    environment: &linux-gcc6-environment\n      BUILD_TYPE: RelWithDebInfo\n      CXX: g++-6\n      CC:  gcc-6\n      GCOV: gcov-6\n      GENERATOR: Ninja\n      BUILD_PARALLEL_JOBS: 2\n      TEST_PARALLEL_JOBS: 4\n      CMAKE_OPTIONS: -DCOVERAGE=ON\n    docker:\n      - image: ethereum/cpp-build-env:7\n    steps:\n      - checkout\n      - *update-submodules\n      - *environment-info\n      - *restore-deps-cache\n      - *restore-ccache\n      - *setup-ccache\n      - *configure\n      - *build\n      - *stat-ccache\n      - *save-ccache\n      - *save-deps-cache\n      - *store-package\n      - *test\n      - *upload-coverage-data\n\n  linux-gcc6-nightly:\n    <<: *linux-gcc6\n    environment:\n      <<: *linux-gcc6-environment\n      CMAKE_OPTIONS: -DCOVERAGE=ON -DTESTETH_ARGS=--all\n\n  macos-xcode90:\n    environment:\n      CXX: clang++\n      GCOV: gcov\n      GENERATOR: Ninja\n      BUILD_PARALLEL_JOBS: 8\n      TEST_PARALLEL_JOBS: 8\n    macos:\n      xcode: \"9.0\"\n    steps:\n      - checkout\n      - *update-submodules\n      - *environment-info\n      - run:\n          name: \"Install macOS dependencies\"\n          # Python3 and requests are needed for Hunter upload.\n          command: |\n            HOMEBREW_NO_AUTO_UPDATE=1 brew install -q cmake ninja python3\n            pip3 install -q requests gitpython\n      - *restore-deps-cache\n      - *configure\n      - *build\n      - *save-deps-cache\n      - *store-package\n      - *add-package-to-workspace\n      - *test\n      - *store-randomcode-seed\n\n  # The job collects built packages (available in the workspace) and\n  # uploads them to the GitHub release matching the git tag.\n  deploy:\n    docker:\n      - image: circleci/golang\n    steps:\n      - run:\n          name: \"Install ghr\"\n          command: go get -u github.com/tcnksm/ghr\n      - attach_workspace:\n          at: ~/package\n      - run:\n          name: \"Create GitHub release\"\n          command: |\n            prerelease_flag=$([[ $CIRCLE_TAG =~ ^v[0-9\\.]+$ ]] || echo '-prerelease')\n            name=\"Aleth ${CIRCLE_TAG:1}\"\n            ghr -u ethereum -r aleth -n \"$name\" $prerelease_flag $CIRCLE_TAG ~/package\n\n  # Builds aleth docker image and uploads it to Docker Hub.\n  docker-aleth: &docker-aleth\n    docker:\n      - image: circleci/golang\n    steps:\n      - checkout\n      - run:\n          name: \"Update required git submodules\"\n          command: git submodule update --init --recursive cmake/cable evmc scripts/dopple\n      - setup_remote_docker\n      - run:\n          name: \"Build docker images\"\n          command: |\n            docker build --target aleth -t ethereum/aleth:local -f scripts/docker/aleth.dockerfile .\n            docker build --target testeth -t ethereum/testeth:local -f scripts/docker/aleth.dockerfile .\n      - run:\n          name: \"Push docker images\"\n          command: |\n\n            tag=unknown\n            if [[ $NIGHTLY ]]; then\n              tag=nightly\n            elif [[ $CIRCLE_TAG =~ ^v[0-9].* ]]; then\n              tag=${CIRCLE_TAG:1}\n            else\n              tag=$(date +%Y%m%d)\n            fi\n\n            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER_ID --password-stdin\n\n            docker tag ethereum/aleth:local ethereum/aleth:$tag\n            docker push ethereum/aleth:$tag\n            echo \"Pushed ethereum/aleth:$tag\"\n\n            docker tag ethereum/testeth:local ethereum/testeth:$tag\n            docker push ethereum/testeth:$tag\n            echo \"Pushed ethereum/testeth:$tag\"\n\n            echo \"See https://hub.docker.com/r/ethereum/aleth/tags/\"\n\n  docker-aleth-nightly:\n    <<: *docker-aleth\n    environment:\n      NIGHTLY: true\n\n\nworkflows:\n  version: 2\n\n  aleth:\n    jobs:\n      - macos-xcode90:\n          filters:\n            tags:\n              only: /.*/\n      - linux-clang6:\n          filters:\n            tags:\n              only: /.*/\n      - linux-gcc6:\n          filters:\n            tags:\n              only: /.*/\n\n      - deploy:\n          requires:\n            - macos-xcode90\n            - linux-clang6\n            - linux-gcc6\n          filters:\n            branches:\n              ignore: /.*/\n            tags:\n              only: /^v[0-9].*/\n\n      - docker-aleth:\n          requires:\n            - macos-xcode90\n            - linux-clang6\n            - linux-gcc6\n          filters:\n            branches:\n              only: docker\n            tags:\n              only: /^v[0-9].*/\n\n  nightly:\n    triggers:\n#    - schedule:\n#        cron: \"0 0 * * *\"\n#        filters:\n#          branches:\n#            only:\n#            - master\n    jobs:\n      - linux-gcc6-nightly\n      - docker-aleth-nightly\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.595703125,
          "content": "codecov:\n  branch: master\ncoverage:\n  range: 50...100\n  notify:\n    gitter:\n      default:\n        threshold: 0\n        url: https://gitter.im/ethereum/cpp-ethereum-development\n  status:\n    patch:\n      default:\n        target: 50\n    project:\n      default:\n        target: auto\n        threshold: 0.05\n      app:\n        target: auto\n        threshold: 0.05\n        paths: \"!test/\"\n      tests:\n        target: auto\n        paths: \"test/\"\n    changes:\n      default:\n        enabled: no\ncomment:\n  layout: \"reach, diff\"\nflags:\n  alltests:\n    joined: false\nignore:\n  - test/tools/fuzzTesting/fuzzHelper.cpp\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "evmc",
          "type": "commit",
          "content": null
        },
        {
          "name": "homebrew",
          "type": "tree",
          "content": null
        },
        {
          "name": "libaleth-interpreter",
          "type": "tree",
          "content": null
        },
        {
          "name": "libdevcore",
          "type": "tree",
          "content": null
        },
        {
          "name": "libdevcrypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "libethashseal",
          "type": "tree",
          "content": null
        },
        {
          "name": "libethcore",
          "type": "tree",
          "content": null
        },
        {
          "name": "libethereum",
          "type": "tree",
          "content": null
        },
        {
          "name": "libevm",
          "type": "tree",
          "content": null
        },
        {
          "name": "libp2p",
          "type": "tree",
          "content": null
        },
        {
          "name": "libweb3jsonrpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libwebthree",
          "type": "tree",
          "content": null
        },
        {
          "name": "refilltests",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "rlp",
          "type": "tree",
          "content": null
        },
        {
          "name": "sanitizer-blacklist.txt",
          "type": "blob",
          "size": 0.255859375,
          "content": "# Ignore standard library headers.\nsrc:*/include/c\\+\\+/*\n\n# Ignore boost libraries headers.\nsrc:*/include/boost/*\n\n# Ignore Crypto++ library. We plan to remove it in the future. It exploits interger overflow and uses memcpy incorrectly.\nsrc:*/include/cryptopp/*\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "snapcraft.yaml",
          "type": "blob",
          "size": 0.328125,
          "content": "name: cpp-ethereum\nversion: master\nsummary: blockchain app platform\ndescription: Ethereum C++ project\n\ngrade: devel\nconfinement: devmode\n\napps:\n  eth:\n    command: eth\n  ethvm:\n    command: ethvm\n\nparts:\n  cpp-ethereum:\n    source: .\n    source-type: git\n    plugin: cmake\n    build-packages:\n      - build-essential\n      - libgmp-dev\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}