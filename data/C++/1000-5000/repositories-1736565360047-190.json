{
  "metadata": {
    "timestamp": 1736565360047,
    "page": 190,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ricochet-im/ricochet",
      "stars": 3736,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.052734375,
          "content": ".gitignore export-ignore\n.gitattributes export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.375,
          "content": "Makefile\nMakefile.*\n*.user\n*.user.*\ndebug\nrelease\n*.pdb\n*.app\n.packagingrc\n.qmake.stash\n.qmake.cache\n.DS_Store\n*.exe\n*.dll\n*.o\n*.moc\ntests/*/tst_*\n!tst_*.pro\n!tst_*.cpp\n!tst_*.h\n*.pb.h\n*.pb.cc\npackaging/installer/Qt\npackaging/installer/Output\ntranslation/*.qm\nconfig\nconfig.ricochet\nconfig.log\nconfig.tests/*/*\n!config.tests/*/*.pro\n!config.tests/*/*.cpp\n!config.tests/*/*.h\nricochet\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.8154296875,
          "content": "language: cpp\ndist: trusty\nsudo: required\n\nos:\n  - linux\n  - osx\n\nenv:\n  - CONFIG=Debug\n    #  - CONFIG=Release\n\ninstall:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n         sudo apt-get update\n      && sudo apt-get install -qq libssl-dev libprotobuf-dev protobuf-compiler\n      && sudo apt-get install -qq qt5-qmake qt5-default qtbase5-dev qttools5-dev-tools qtdeclarative5-dev\n      ;\n    fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then\n         brew update\n      && brew install qt5\n      && brew install protobuf\n      && brew install openssl\n      ;\n    fi\n\nscript:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then qmake -qt=qt5 CONFIG+=$CONFIG; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]];   then /usr/local/opt/qt5/bin/qmake CONFIG+=$CONFIG OPENSSLDIR=/usr/local/opt/openssl PROTOBUFDIR=/usr/local/opt/protobuf; fi\n  - make\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 0.8212890625,
          "content": "### Development\n* John Brooks (@special) `<john.brooks@dereferenced.net>`\n\n### Sponsors\n* Blueprint for Free Speech - https://blueprintforfreespeech.net/\n\n### Translations\n* Bulgarian - ivopetkovcz\n* Czech - Einfach\n* Danish - Mikkel Kroman\n* Dutch - mijnheer, Meternalf\n* Finnish - reviewjolla\n* French - rike, Creaprog, CrumpyGat, Jordi, franck99\n* German - djsmith85, rike\n* Italian - HostFat, GIANNAT\n* Polish - Kacper KoÅ‚odziej\n* Portuguese (Brazil) - swperman\n* Russian - vla8752, qualte\n* Spanish - strel\n* Swedish - rawtaz\n* Tagalog - taskmaster\n* Turkish - cbolat, basarancaner\n* Ukrainian - l3rixon, nergal\n\n### Thanks\n* Helder S Ribeiro (@hsribei) - \"Ricochet\"\n* Robin Burchell (@rburchell)\n* prof7bit (TorChat) - Inspiration\n* Patrick Gray - invisible.im\n* Suelette Dreyfus\n* HD Moore\n* The Grugq\n* Lawrence Eastland - \"R\" icon\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 5.1396484375,
          "content": "## Building Ricochet\n\nThese instructions are intended for people who wish to build or modify Ricochet from source. Most users should [download releases](https://github.com/ricochet-im/ricochet/releases) instead.\n\nClone with git from `https://github.com/ricochet-im/ricochet.git`, or download source packages [on github](https://github.com/ricochet-im/ricochet/releases). Then proceed to instructions for your platform.\n\nIf you're interested in helping to package Ricochet for common Linux platforms, please get in touch!\n\n## Hints\n\nAdd `CONFIG+=debug` or `CONFIG+=release` to the qmake command for a debug or release build. Debug builds enable logging to standard output, and shouldn't be used in sensitive environments.\n\nBy default, Ricochet will be portable, and configuration is stored in a folder named `config` next to the binary. Add `DEFINES+=RICOCHET_NO_PORTABLE` to the qmake command for a system-wide installation using platform configuration paths instead.\n\n## Linux\n\nYou will need:\n * Qt >= 5.1.0\n * OpenSSL (libcrypto)\n * pkg-config\n * Protocol Buffers (libprotobuf, protoc)\n\n#### Fedora\n```sh\nyum install make gcc-c++ protobuf-devel protobuf-compiler openssl-devel\nyum install qt5-qtbase qt5-qttools-devel qt5-qttools qt5-qtquickcontrols qt5-qtdeclarative qt5-qtbase-devel qt5-qtbase-gui qt5-qtdeclarative-devel qt5-qtmultimedia-devel\nyum install tor # or build your own\n```\n#### Debian & Ubuntu\n```sh\napt-get install build-essential libssl-dev pkg-config libprotobuf-dev protobuf-compiler\napt-get install qt5-qmake qt5-default qtbase5-dev qttools5-dev-tools qtdeclarative5-dev qtmultimedia5-dev\napt-get install qml-module-qtquick-controls qml-module-qtquick-dialogs qml-module-qtmultimedia\napt-get install tor # or build your own\n```\n\nIf the `qml-module-qtquick` packages aren't available, try `qtdeclarative5-controls-plugin` instead.\n\n#### Qt SDK\nThe [Qt SDK](https://www.qt.io/download/) is available for most Linux systems and includes an IDE as well as all Qt dependencies.\n\nTo build, simply run:\n```sh\nqmake # qmake-qt5 for some platforms\nmake\n```\n\nFor a system-wide installation, use:\n```sh\nqmake DEFINES+=RICOCHET_NO_PORTABLE\nmake\nmake install # as root\n```\n\nYou must have a `tor` binary installed on the system (in $PATH), or placed next to the `ricochet` binary.\n\nIn portable mode (default), all configuration is stored in a folder called `config` with the binary. When installed, the platform's user configuration path is used instead.\n\nThe [buildscripts](https://github.com/ricochet-im/buildscripts) repository contains a set of scripts to build a fully static Ricochet on a clean Debian system. These are used to create the generic linux binary packages.\n\n#### Hardening\nRicochet will use aggressive compiler hardening flags if available. `qmake` will print the results of these tests on first run, or when run with `CONFIG+=recheck`.\n\nTo take full advantage of the sanitizer options, you may need to install `libasan` and `libubsan`.\n\n## OS X\n\nYou will need:\n * Xcode (for toolchain)\n * Qt 5 - preferably the [Qt SDK](https://www.qt.io/download/)\n * Protocol Buffers (libprotobuf, protoc) - `brew install protobuf`\n * pkg-config - `brew install pkg-config`\n\nYou can either load `ricochet.pro` in Qt Creator and build normally, or build command-line with:\n```sh\n/path/to/qtsdk/5.3/clang_64/bin/qmake\nmake\n```\n\nYou also need a `tor` binary in $PATH or inside the build's `ricochet.app/Contents/MacOS` folder. The easiest solution is to use `brew install tor`. If you copy the `tor` binary, you will need to keep it up to date.\n\nNormally, configuration will be stored in a `config.ricochet` folder, in the same location as `ricochet.app`. However, if the bundle is installed to `/Applications`, the system location `~/Library/Application Support/Ricochet` is used instead. You can force that behavior by adding `DEFINES+=RICOCHET_NO_PORTABLE` to the qmake command.\n\nThe `packaging/osx/release_osx.sh` script demonstrates how to build a redistributable app bundle.\n\nSince the openssl header files were removed in El Capitan, have qmake use the openssl that comes with brew (see the OPENSSLDIR var below).\n\nSteps:\n```\nbrew install protobuf qt5 tor\n/usr/local/opt/qt5/bin/qmake OPENSSLDIR=/usr/local/opt/openssl/ CONFIG+=debug\nmake\n```\n\n## Windows\n\nBuilding for Windows is difficult. The process and scripts used for release builds are documented in the [buildscripts repository](https://github.com/ricochet-im/buildscripts/tree/master/mingw).\n\nFor development builds, you will want:\n * Visual Studio C++ or MinGW\n * Qt 5 - preferably the [Qt SDK](https://www.qt.io/download/)\n * OpenSSL (including libs and headers)\n * Protocol Buffers >= 2.6.0\n\nCompile OpenSSL and protobuf first, according to their instructions.\n\nAfter installing the Qt SDK, open the `ricochet.pro` project in Qt Creator. Before building, you must click the 'Projects' tab on the left side, and under 'Build Steps', modify 'Additional arguments' to add:\n\n```\n    OPENSSLDIR=C:\\path\\to\\openssl\\ PROTOBUFDIR=C:\\path\\to\\protobuf\n```\n\nUse the 'Build -> Run qmake' menu to test your changes.\n\nYou also need a `tor.exe` binary, placed in the same folder as `ricochet.exe`.\n\nThe windows installer can be built using Inno Setup. See `packaging\\installer` for more information.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.4892578125,
          "content": "              Ricochet - https://ricochet.im/\nCopyright (C) 2014-2016, John Brooks <john.brooks@dereferenced.net>\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n\n    * Neither the names of the copyright owners nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n-------------------------------------------------------------------------------\n\nTor is a registered trademark of The Tor Project, Inc.\nRicochet is not in any way affiliated with or endorsed by The Tor Project.\n\nFor more information about Tor, see https://www.torproject.org/.\nTor is distributed under this license:\n\nCopyright (c) 2001-2004, Roger Dingledine\nCopyright (c) 2004-2006, Roger Dingledine, Nick Mathewson\nCopyright (c) 2007-2010, The Tor Project, Inc.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n\n    * Neither the names of the copyright owners nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nsrc/common/strlcat.c and src/common/strlcpy.c by Todd C. Miller are licensed\nunder the following license:\n\n * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. The name of the author may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\n * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n-------------------------------------------------------------------------------\n\nThe Qt Toolkit is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies)\nand other contributors.\n\nQt is licensed under the GNU Lesser General Public License version 2.1,\navailable online at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html,\nand a special exception, the text of which is distributed with Qt.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\nFOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\ndetails.\n\n-------------------------------------------------------------------------------\n\nRicochet \"R\" icon by Lawrence Eastland, CC-BY-SA 4.0. See icons/LICENSE.\n\n-------------------------------------------------------------------------------\n\n/* ====================================================================\n * Copyright (c) 1998-2008 The OpenSSL Project.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. All advertising materials mentioning features or use of this\n *    software must display the following acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n *\n * 4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For written permission, please contact\n *    openssl-core@openssl.org.\n *\n * 5. Products derived from this software may not be called \"OpenSSL\"\n *    nor may \"OpenSSL\" appear in their names without prior written\n *    permission of the OpenSSL Project.\n *\n * 6. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n *\n * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY\n * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * ====================================================================\n *\n * This product includes cryptographic software written by Eric Young\n * (eay@cryptsoft.com).  This product includes software written by Tim\n * Hudson (tjh@cryptsoft.com).\n *\n */\n\n Original SSLeay License\n -----------------------\n\n/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\n * All rights reserved.\n *\n * This package is an SSL implementation written\n * by Eric Young (eay@cryptsoft.com).\n * The implementation was written so as to conform with Netscapes SSL.\n *\n * This library is free for commercial and non-commercial use as long as\n * the following conditions are aheared to.  The following conditions\n * apply to all code found in this distribution, be it the RC4, RSA,\n * lhash, DES, etc., code; not just the SSL code.  The SSL documentation\n * included with this distribution is covered by the same copyright terms\n * except that the holder is Tim Hudson (tjh@cryptsoft.com).\n *\n * Copyright remains Eric Young's, and as such any Copyright notices in\n * the code are not to be removed.\n * If this package is used in a product, Eric Young should be given attribution\n * as the author of the parts of the library used.\n * This can be in the form of a textual message at program startup or\n * in documentation (online or textual) provided with the package.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *    \"This product includes cryptographic software written by\n *     Eric Young (eay@cryptsoft.com)\"\n *    The word 'cryptographic' can be left out if the rouines from the library\n *    being used are not cryptographic related :-).\n * 4. If you include any Windows specific code (or a derivative thereof) from\n *    the apps directory (application code) you must include an acknowledgement:\n *    \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n *\n * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * The licence and distribution terms for any publically available version or\n * derivative of this code cannot be changed.  i.e. this code cannot simply be\n * copied and put under another distribution licence\n * [including the GNU Public Licence.]\n */\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.904296875,
          "content": "### Anonymous metadata-resistant instant messaging that just works.\nRicochet is an experimental kind of instant messaging that **doesn't trust anyone** with your identity, your contact list, or your communications.\n\n* You can chat without exposing your identity (or IP address) to *anyone*\n* Nobody can discover who your contacts are or when you talk (*metadata-free!*)\n* There are no servers or operators that could be compromised, exposing your information.\n* It's cross-platform and easy for non-technical users.\n\n![Screenshot](ricochetscreen.png)\n\n### How it works\nRicochet is a peer-to-peer instant messaging system built on the Tor Network [hidden services](https://www.torproject.org/docs/hidden-services.html.en). Your login is your hidden service address, and contacts connect to you (not an intermediate server) through Tor. The rendezvous system makes it extremely hard for anyone to learn your identity from your address.\n\nRicochet is not affiliated with or endorsed by The Tor Project.\n\nFor more information, you can [read about Tor](https://www.torproject.org/about/overview.html.en) and [learn about Ricochet's design](https://github.com/ricochet-im/ricochet/blob/master/doc/design.md) or [protocol](https://github.com/ricochet-im/ricochet/blob/master/doc/protocol.md) (or the [old protocol](https://github.com/ricochet-im/ricochet/blob/master/doc/deprecated/protocol-1.0.txt)). Everything is [open-source](https://github.com/ricochet-im/ricochet/blob/master/LICENSE) and open to contribution.\n\n### Experimental\nThis software is an experiment. Security and anonymity are difficult topics, and you should carefully evaluate your risks and exposure with any software. *Do not rely on Ricochet for your safety* unless you have more trust in my work than it deserves. That said, I believe it does more to try to protect your privacy than any similar software, and is the best chance you have of withholding your personal information.\n\n### Downloads\n\nRicochet is available for Windows, OS X (10.7 or later), and as a generic Linux binary package. Visit the [releases page](https://github.com/ricochet-im/ricochet/releases) for the latest version and changelog.\n\nAll releases and signatures are also available at https://ricochet.im/releases/.\n\nBinaries are PGP signed by `9032 CAE4 CBFA 933A 5A21 45D5 FF97 C53F 183C 045D`.\n\n### Building from source\nSee [BUILDING](https://github.com/ricochet-im/ricochet/blob/master/BUILDING.md) for Linux, OS X, and Windows build instructions.\n\n### Other\nBugs can be reported on the [issue tracker](https://github.com/ricochet-im/ricochet/issues). Translations can be contributed on [Transifex](https://www.transifex.com/projects/p/ricochet/).\n\nYou can contact me at `ricochet:rs7ce36jsj24ogfw` or `john.brooks@dereferenced.net`.\n\nYou should support [The Tor Project](https://www.torproject.org/donate/donate.html.en), [EFF](https://www.eff.org/), and [run a Tor relay](https://www.torproject.org/docs/tor-relay-debian.html.en).\n"
        },
        {
          "name": "config.tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "hardened.pri",
          "type": "blob",
          "size": 1.98828125,
          "content": "load(configure)\n# Define common variables; these are used by config tests _and_ the actual build\n\n# Supported in gcc 4.8+\nHARDENED_SANITIZE_FLAGS = -fsanitize=address\n# Supported in gcc 4.9+\nHARDENED_SANITIZE_UBSAN_FLAGS = -fsanitize=undefined -fsanitize=integer-divide-by-zero -fsanitize=bounds -fsanitize=alignment -fsanitize=float-divide-by-zero -fsanitize=float-cast-overflow -fno-sanitize-recover\n# Supported in gcc 5.0+\nHARDENED_SANITIZE_UBSAN_MORE_FLAGS = -fsanitize=vptr -fsanitize=object-size\n# vtable-verify requires some OS support; see https://bugzilla.novell.com/show_bug.cgi?id=877239\nHARDENED_VTABLE_VERIFY_FLAGS = -fvtable-verify=std\n\nHARDENED_STACK_PROTECTOR_STRONG_FLAGS = -fstack-protector-strong\nHARDENED_STACK_PROTECTOR_FLAGS = -fstack-protector --param=ssp-buffer-size=4\n\nHARDENED_MINGW_64ASLR_FLAGS = -Wl,--dynamicbase -Wl,--high-entropy-va\n\n\n# Run tests and apply options where possible\nCONFIG(hardened) {\n    # mingw is always PIC, and complains about the flag\n    !mingw:HARDEN_FLAGS = -fPIC\n\n    CONFIG(debug,debug|release): qtCompileTest(sanitize):HARDEN_FLAGS += $$HARDENED_SANITIZE_FLAGS\n    qtCompileTest(sanitize-ubsan):HARDEN_FLAGS += $$HARDENED_SANITIZE_UBSAN_FLAGS\n    qtCompileTest(sanitize-ubsan-more):HARDEN_FLAGS += $$HARDENED_SANITIZE_UBSAN_MORE_FLAGS\n    qtCompileTest(vtable-verify):HARDEN_FLAGS += $$HARDENED_VTABLE_VERIFY_FLAGS\n\n    qtCompileTest(stack-protector-strong) {\n        HARDEN_FLAGS += $$HARDENED_STACK_PROTECTOR_STRONG_FLAGS\n    } else {\n        qtCompileTest(stack-protector):HARDEN_FLAGS += $$HARDENED_STACK_PROTECTOR_FLAGS\n    }\n\n    mingw {\n        qtCompileTest(mingw-64aslr):QMAKE_LFLAGS *= $$HARDENED_MINGW_64ASLR_FLAGS\n        QMAKE_LFLAGS *= -Wl,--nxcompat -Wl,--dynamicbase\n    }\n\n    QMAKE_CXXFLAGS *= $$HARDEN_FLAGS\n    QMAKE_LFLAGS *= $$HARDEN_FLAGS\n\n    # _FORTIFY_SOURCE requires -O, so only use on release builds\n    CONFIG(release,debug|release):QMAKE_CXXFLAGS *= -D_FORTIFY_SOURCE=2\n    # Linux specific\n    unix:!macx:QMAKE_LFLAGS *= -pie -Wl,-z,relro,-z,now\n}\n"
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf.pri",
          "type": "blob",
          "size": 2.16015625,
          "content": "# Qt qmake integration with Google Protocol Buffers compiler protoc\n#\n# To compile protocol buffers with qt qmake, specify PROTOS variable and\n# include this file\n#\n# Based on:\n#   https://vilimpoc.org/blog/2013/06/09/using-google-protocol-buffers-with-qmake/\n\nPROTOC = protoc\n\nunix {\n    PKG_CONFIG = $$pkgConfigExecutable()\n\n    # All our dependency resolution depends on pkg-config. If it isn't\n    # available, the errors we will get subsequently are a lot more cryptic than\n    # this.\n    !system($$PKG_CONFIG --version 2>&1 > /dev/null) {\n        error(\"pkg-config executable is not available. please install it so I can find dependencies.\")\n    }\n\n    !contains(QT_CONFIG, no-pkg-config) {\n        CONFIG += link_pkgconfig\n        PKGCONFIG += protobuf\n    } else {\n        # Some SDK builds (e.g. OS X 5.4.1) are no-pkg-config, so try to hack the linker flags in.\n        QMAKE_LFLAGS += $$system($$PKG_CONFIG --libs protobuf)\n    }\n\n    gcc|clang {\n        # Add -isystem for protobuf includes to suppress some loud compiler warnings in their headers\n        PROTOBUF_CFLAGS = $$system($$PKG_CONFIG --cflags protobuf)\n        PROTOBUF_CFLAGS ~= s/^(?!-I).*//g\n        PROTOBUF_CFLAGS ~= s/^-I(.*)/-isystem \\\\1/g\n        QMAKE_CXXFLAGS += $$PROTOBUF_CFLAGS\n    }\n}\n\nwin32 {\n    isEmpty(PROTOBUFDIR):error(You must pass PROTOBUFDIR=path/to/protobuf to qmake on this platform)\n    INCLUDEPATH += $${PROTOBUFDIR}/include\n    LIBS += -L$${PROTOBUFDIR}/lib -lprotobuf\n    contains(QMAKE_HOST.os,Windows):PROTOC = $${PROTOBUFDIR}/bin/protoc.exe\n}\n\nprotobuf_decl.name = protobuf headers\nprotobuf_decl.input = PROTOS\nprotobuf_decl.output = ${QMAKE_FILE_IN_PATH}/${QMAKE_FILE_BASE}.pb.h\nprotobuf_decl.commands = $$PROTOC --cpp_out=${QMAKE_FILE_IN_PATH} --proto_path=${QMAKE_FILE_IN_PATH} ${QMAKE_FILE_NAME}\nprotobuf_decl.variable_out = HEADERS\nQMAKE_EXTRA_COMPILERS += protobuf_decl\n\nprotobuf_impl.name = protobuf sources\nprotobuf_impl.input = PROTOS\nprotobuf_impl.output = ${QMAKE_FILE_IN_PATH}/${QMAKE_FILE_BASE}.pb.cc\nprotobuf_impl.depends = ${QMAKE_FILE_IN_PATH}/${QMAKE_FILE_BASE}.pb.h\nprotobuf_impl.commands = $$escape_expand(\\n)\nprotobuf_impl.variable_out = SOURCES\nQMAKE_EXTRA_COMPILERS += protobuf_impl\n"
        },
        {
          "name": "ricochet.pro",
          "type": "blob",
          "size": 9.5791015625,
          "content": "# Ricochet - https://ricochet.im/\n# Copyright (C) 2014, John Brooks <john.brooks@dereferenced.net>\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are\n# met:\n#\n#    * Redistributions of source code must retain the above copyright\n#      notice, this list of conditions and the following disclaimer.\n#\n#    * Redistributions in binary form must reproduce the above\n#      copyright notice, this list of conditions and the following disclaimer\n#      in the documentation and/or other materials provided with the\n#      distribution.\n#\n#    * Neither the names of the copyright owners nor the names of its\n#      contributors may be used to endorse or promote products derived from\n#      this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nlessThan(QT_MAJOR_VERSION,5)|lessThan(QT_MINOR_VERSION,1) {\n    error(\"Qt 5.1 or greater is required. You can build your own, or get the SDK at https://qt-project.org/downloads\")\n}\n\nTARGET = ricochet\nTEMPLATE = app\nQT += core gui network quick widgets\nCONFIG += c++11\n\nVERSION = 1.1.4\n\n# Use CONFIG+=no-hardened to disable compiler hardening options\n!CONFIG(no-hardened) {\n    CONFIG += hardened\n    include(hardened.pri)\n}\n\n# Pass DEFINES+=RICOCHET_NO_PORTABLE for a system-wide installation\n\nCONFIG(release,debug|release):DEFINES += QT_NO_DEBUG_OUTPUT QT_NO_WARNING_OUTPUT\n\ncontains(DEFINES, RICOCHET_NO_PORTABLE) {\n    unix:!macx {\n        target.path = /usr/bin\n        shortcut.path = /usr/share/applications\n        shortcut.files = src/ricochet.desktop\n        icon.path = /usr/share/icons/hicolor/48x48/apps/\n        icon.files = icons/ricochet.png\n        scalable_icon.path = /usr/share/icons/hicolor/scalable/apps/\n        scalable_icon.files = icons/ricochet.svg\n        INSTALLS += target shortcut icon scalable_icon\n        QMAKE_CLEAN += contrib/usr.bin.ricochet\n        contains(DEFINES, APPARMOR) {\n            apparmor_profile.extra = cp -f $${_PRO_FILE_PWD_}/contrib/usr.bin.ricochet-apparmor $${_PRO_FILE_PWD_}/contrib/usr.bin.ricochet\n            apparmor_profile.files = contrib/usr.bin.ricochet\n            QMAKE_CLEAN += contrib/usr.bin.ricochet\n            !isEmpty(APPARMORDIR) {\n                    apparmor_profile.path = $${APPARMORDIR}/\n            } else {\n                    apparmor_profile.path = /etc/apparmor.d/\n            }\n            INSTALLS += apparmor_profile\n        }\n\n        exists(tor) {\n            message(Adding bundled Tor to installations)\n            bundletor.path = /usr/lib/ricochet/tor/\n            bundletor.files = tor/*\n            INSTALLS += bundletor\n            DEFINES += BUNDLED_TOR_PATH=\\\\\\\"/usr/lib/ricochet/tor/\\\\\\\"\n        }\n    }\n}\n\nmacx {\n    CONFIG += bundle force_debug_plist\n    QT += macextras\n\n    # Qt 5.4 introduces a bug that breaks QMAKE_INFO_PLIST when qmake has a relative path.\n    # Work around by copying Info.plist directly.\n    greaterThan(QT_MAJOR_VERSION,5)|greaterThan(QT_MINOR_VERSION,4) {\n        QMAKE_INFO_PLIST = src/Info.plist\n    } else:equals(QT_MAJOR_VERSION,5):lessThan(QT_MINOR_VERSION,4) {\n        QMAKE_INFO_PLIST = src/Info.plist\n    } else {\n        CONFIG += no_plist\n        QMAKE_POST_LINK += cp $${_PRO_FILE_PWD_}/src/Info.plist $${OUT_PWD}/$${TARGET}.app/Contents/;\n    }\n\n    exists(tor) {\n        # Copy the entire tor/ directory, which should contain tor/tor (the binary itself)\n        QMAKE_POST_LINK += cp -R $${_PRO_FILE_PWD_}/tor $${OUT_PWD}/$${TARGET}.app/Contents/MacOS/;\n    }\n\n    icons.files = icons/Ricochet.icns\n    icons.path = Contents/Resources/\n    QMAKE_BUNDLE_DATA += icons\n}\n\nCONFIG += debug_and_release\n\n# Create a pdb for release builds as well, to enable debugging\nwin32-msvc2008|win32-msvc2010 {\n    QMAKE_CXXFLAGS_RELEASE += /Zi\n    QMAKE_LFLAGS_RELEASE += /DEBUG /OPT:REF,ICF\n}\n\nINCLUDEPATH += src\n\nwin32|mac {\n    # For mac, this is necessary because homebrew does not link openssl .pc to\n    # /usr/local/lib/pkgconfig (presumably because it used to be a system\n    # package).\n    #\n    # Unfortunately, it is no longer really a system package, and we really\n    # need to know where it is.\n    isEmpty(OPENSSLDIR): error(You must pass OPENSSLDIR=path/to/openssl to qmake on this platform)\n}\n\nunix {\n    !isEmpty(OPENSSLDIR) {\n        INCLUDEPATH += $${OPENSSLDIR}/include\n        LIBS += -L$${OPENSSLDIR}/lib -lcrypto\n    } else {\n        CONFIG += link_pkgconfig\n        PKGCONFIG += libcrypto\n    }\n}\nwin32 {\n    INCLUDEPATH += $${OPENSSLDIR}/include\n\n    win32-g++ {\n        LIBS += -L$${OPENSSLDIR}/lib -lcrypto\n    } else {\n        LIBS += -L$${OPENSSLDIR}/lib -llibeay32\n    }\n\n    # required by openssl\n    LIBS += -luser32 -lgdi32 -ladvapi32\n}\n\n# Exclude unneeded plugins from static builds\nQTPLUGIN.playlistformats = -\nQTPLUGIN.imageformats = -\nQTPLUGIN.printsupport = -\nQTPLUGIN.mediaservice = -\n# Include Linux input plugins, which are missing by default, to provide complex input support. See issue #60.\nunix:!macx:QTPLUGIN.platforminputcontexts = composeplatforminputcontextplugin ibusplatforminputcontextplugin\n\nDEFINES += QT_NO_CAST_FROM_ASCII QT_NO_CAST_TO_ASCII\n\nSOURCES += src/main.cpp \\\n    src/ui/MainWindow.cpp \\\n    src/ui/ContactsModel.cpp \\\n    src/tor/TorControl.cpp \\\n    src/tor/TorControlSocket.cpp \\\n    src/tor/TorControlCommand.cpp \\\n    src/tor/ProtocolInfoCommand.cpp \\\n    src/tor/AuthenticateCommand.cpp \\\n    src/tor/SetConfCommand.cpp \\\n    src/tor/AddOnionCommand.cpp \\\n    src/utils/StringUtil.cpp \\\n    src/core/ContactsManager.cpp \\\n    src/core/ContactUser.cpp \\\n    src/tor/GetConfCommand.cpp \\\n    src/tor/HiddenService.cpp \\\n    src/utils/CryptoKey.cpp \\\n    src/utils/SecureRNG.cpp \\\n    src/core/OutgoingContactRequest.cpp \\\n    src/core/IncomingRequestManager.cpp \\\n    src/core/ContactIDValidator.cpp \\\n    src/core/UserIdentity.cpp \\\n    src/core/IdentityManager.cpp \\\n    src/core/ConversationModel.cpp \\\n    src/tor/TorProcess.cpp \\\n    src/tor/TorManager.cpp \\\n    src/tor/TorSocket.cpp \\\n    src/ui/LinkedText.cpp \\\n    src/utils/Settings.cpp \\\n    src/utils/PendingOperation.cpp \\\n    src/ui/LanguagesModel.cpp\n\nHEADERS += src/ui/MainWindow.h \\\n    src/ui/ContactsModel.h \\\n    src/tor/TorControl.h \\\n    src/tor/TorControlSocket.h \\\n    src/tor/TorControlCommand.h \\\n    src/tor/ProtocolInfoCommand.h \\\n    src/tor/AuthenticateCommand.h \\\n    src/tor/SetConfCommand.h \\\n    src/tor/AddOnionCommand.h \\\n    src/utils/StringUtil.h \\\n    src/core/ContactsManager.h \\\n    src/core/ContactUser.h \\\n    src/tor/GetConfCommand.h \\\n    src/tor/HiddenService.h \\\n    src/utils/CryptoKey.h \\\n    src/utils/SecureRNG.h \\\n    src/core/OutgoingContactRequest.h \\\n    src/core/IncomingRequestManager.h \\\n    src/core/ContactIDValidator.h \\\n    src/core/UserIdentity.h \\\n    src/core/IdentityManager.h \\\n    src/core/ConversationModel.h \\\n    src/tor/TorProcess.h \\\n    src/tor/TorProcess_p.h \\\n    src/tor/TorManager.h \\\n    src/tor/TorSocket.h \\\n    src/ui/LinkedText.h \\\n    src/utils/Settings.h \\\n    src/utils/PendingOperation.h \\\n    src/ui/LanguagesModel.h\n\nSOURCES += src/protocol/Channel.cpp \\\n    src/protocol/ControlChannel.cpp \\\n    src/protocol/Connection.cpp \\\n    src/protocol/OutboundConnector.cpp \\\n    src/protocol/AuthHiddenServiceChannel.cpp \\\n    src/protocol/ChatChannel.cpp \\\n    src/protocol/ContactRequestChannel.cpp\n\nHEADERS += src/protocol/Channel.h \\\n    src/protocol/Channel_p.h \\\n    src/protocol/ControlChannel.h \\\n    src/protocol/Connection.h \\\n    src/protocol/Connection_p.h \\\n    src/protocol/OutboundConnector.h \\\n    src/protocol/AuthHiddenServiceChannel.h \\\n    src/protocol/ChatChannel.h \\\n    src/protocol/ContactRequestChannel.h\n\ninclude(protobuf.pri)\nPROTOS += src/protocol/ControlChannel.proto \\\n    src/protocol/AuthHiddenService.proto \\\n    src/protocol/ChatChannel.proto \\\n    src/protocol/ContactRequestChannel.proto\n\n# QML\nRESOURCES += src/ui/qml/qml.qrc \\\n    icons/icons.qrc \\\n    sounds/sounds.qrc\n\nwin32:RC_ICONS = icons/ricochet.ico\nOTHER_FILES += src/ui/qml/*\nlupdate_only {\n    SOURCES += src/ui/qml/*.qml\n}\n\n# Translations\nTRANSLATIONS += \\\n    ricochet_en \\\n    ricochet_it \\\n    ricochet_es \\\n    ricochet_da \\\n    ricochet_pl \\\n    ricochet_pt_BR \\\n    ricochet_de \\\n    ricochet_bg \\\n    ricochet_cs \\\n    ricochet_fi \\\n    ricochet_fr \\\n    ricochet_ru \\\n    ricochet_uk \\\n    ricochet_tr \\\n    ricochet_nl_NL \\\n    ricochet_fil_PH \\\n    ricochet_sv \\\n    ricochet_he \\\n    ricochet_sl \\\n    ricochet_zh \\\n    ricochet_et_EE \\\n    ricochet_it_IT \\\n    ricochet_nb \\\n    ricochet_pt_PT \\\n    ricochet_sq \\\n    ricochet_zh_HK \\\n    ricochet_ja\n\n# Only build translations when creating the primary makefile.\n!build_pass: {\n    contains(QMAKE_HOST.os,Windows):QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease.exe\n    else:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n    for (translation, TRANSLATIONS) {\n        system($$QMAKE_LRELEASE translation/$${translation}.ts -qm translation/$${translation}.qm)\n    }\n}\n\nRESOURCES += translation/embedded.qrc\n"
        },
        {
          "name": "ricochetscreen.png",
          "type": "blob",
          "size": 53.630859375,
          "content": null
        },
        {
          "name": "sounds",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "translation",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}