{
  "metadata": {
    "timestamp": 1736565828244,
    "page": 762,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/souper",
      "stars": 2193,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0185546875,
          "content": "BasedOnStyle: LLVM\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "souperweb.tar.gz\nthird_party\nbuild\nbuild-*\n*~\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2744140625,
          "content": "sudo: required\nlanguage: cpp\nservices:\n - docker\ninstall:\n - printenv | grep '^TRAVIS_' > my_env\n - docker pull regehr/souperweb:latest\n - docker run --env-file my_env -it -d --name souperweb regehr/souperweb bash\nscript:\n - docker exec souperweb /usr/src/souper/clone_and_test.sh\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.478515625,
          "content": "# This is the official list of Souper authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n\n# Names should be added to this file as:\n# Name or Organization <email address>\n# The email address is not required for organizations.\n\nGoogle Inc.\nJeroen Ketema <j.ketema@imperial.ac.uk>\nJohn Regehr <regehr@cs.utah.edu>\nJubi Taneja <jubitaneja@gmail.com>\nRaimondas Sasnauskas <rsas@cs.utah.edu>\nYang Chen <chenyang@cs.utah.edu>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 14.3505859375,
          "content": "cmake_minimum_required(VERSION 3.8)\nproject(Souper)\n\nset(CMAKE_MACOSX_RPATH NEW)\n\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE Release CACHE STRING\n      \"Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel.\" FORCE)\nendif()\n\nif (NOT LLVM_BUILD_TYPE)\n  set(LLVM_BUILD_TYPE ${CMAKE_BUILD_TYPE})\nendif()\nset(LLVM_CONFIG_EXECUTABLE ${CMAKE_SOURCE_DIR}/third_party/llvm-${LLVM_BUILD_TYPE}-install/bin/llvm-config)\nif(NOT EXISTS ${LLVM_CONFIG_EXECUTABLE})\n  message(FATAL_ERROR \"llvm-config could not be found!\")\nendif()\n\nfind_path(ZSTD_LIBRARY_DIR\n          NAMES libzstd.a libzstd.dylib libzstd.so libzstd.so.1\n          HINTS /usr/local/lib /opt/homebrew/lib /usr/lib/x86_64-linux-gnu)\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --includedir\n  OUTPUT_VARIABLE LLVM_INCLUDEDIR\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --cppflags\n  OUTPUT_VARIABLE LLVM_CXXFLAGS\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nset(LLVM_CXXFLAGS \"${LLVM_CXXFLAGS} -fno-exceptions -fno-rtti -Wno-deprecated-enum-enum-conversion\")\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --libs\n  OUTPUT_VARIABLE LLVM_LIBS\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --system-libs\n  OUTPUT_VARIABLE LLVM_SYSTEM_LIBS\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\nset(LLVM_LIBS \"${LLVM_LIBS} ${LLVM_SYSTEM_LIBS}\")\nstring(STRIP ${LLVM_LIBS} LLVM_LIBS)\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --ldflags\n  OUTPUT_VARIABLE LLVM_LDFLAGS\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nset(PASS_LDFLAGS \"${LLVM_LDFLAGS}\")\nset(LLVM_LDFLAGS \"${LLVM_LDFLAGS} -L ${ZSTD_LIBRARY_DIR}\")\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --bindir\n  OUTPUT_VARIABLE LLVM_BINDIR\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nexecute_process(\n  COMMAND ${LLVM_CONFIG_EXECUTABLE} --obj-root\n  OUTPUT_VARIABLE LLVM_BUILD\n  OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nset(ALIVE_SRCDIR \"${CMAKE_SOURCE_DIR}/third_party/alive2\")\nset(ALIVE_BUILDDIR \"${CMAKE_SOURCE_DIR}/third_party/alive2-build\")\ninclude_directories(\"${CMAKE_SOURCE_DIR}/third_party\")\ninclude_directories(\"${ALIVE_SRCDIR}\")\n\nset(GTEST_CXXFLAGS \"-DGTEST_HAS_RTTI=0\")\nset(GTEST_INCLUDEDIR \"${LLVM_BINDIR}/../include/llvm-gtest/\")\nset(GTEST_LIBS \"-lllvm_gtest_main -lllvm_gtest\")\n\nset(LLVM_CXXFLAGS \"${LLVM_CXXFLAGS} -std=c++20\")\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n  set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD \"c++20\")\n  set(LLVM_CXXFLAGS \"${LLVM_CXXFLAGS} -fvisibility-inlines-hidden\")\n  set(PASS_LDFLAGS \"-Wl,-undefined,dynamic_lookup\")\nendif()\n\ninclude_directories(include third_party/klee/include)\ninclude_directories(include \"${CMAKE_BINARY_DIR}/include\")\n\nset(KLEE_EXPR_FILES\n  third_party/klee/lib/Expr/ArrayCache.cpp\n  third_party/klee/lib/Expr/Constraints.cpp\n  third_party/klee/lib/Expr/ExprBuilder.cpp\n  third_party/klee/lib/Expr/Expr.cpp\n  third_party/klee/lib/Expr/ExprEvaluator.cpp\n  third_party/klee/lib/Expr/ExprPPrinter.cpp\n  third_party/klee/lib/Expr/ExprSMTLIBPrinter.cpp\n  third_party/klee/lib/Expr/ExprUtil.cpp\n  third_party/klee/lib/Expr/ExprVisitor.cpp\n  third_party/klee/lib/Expr/Lexer.cpp\n  third_party/klee/lib/Expr/Parser.cpp\n  third_party/klee/lib/Expr/Updates.cpp\n)\n\nadd_library(kleeExpr STATIC\n  ${KLEE_EXPR_FILES}\n)\n\nfind_path(HIREDIS_INCLUDE_DIR\n  NAMES\n  hiredis/hiredis.h\n  PATHS\n  third_party/hiredis-install/include\n  NO_DEFAULT_PATH)\n\ninclude_directories(${HIREDIS_INCLUDE_DIR}/hiredis)\n\nfind_library(HIREDIS_LIBRARY\n  NAMES\n  hiredis\n  PATHS\n  third_party/hiredis-install/lib\n  NO_DEFAULT_PATH)\n\nfind_library(ALIVE_IR ir PATHS \"${ALIVE_BUILDDIR}\" NO_DEFAULT_PATH)\nif (ALIVE_IR)\n  message(STATUS \"Alive2 IR\")\nelse()\n  message(SEND_ERROR \"Alive2 libir.a not found\")\nendif()\n\nfind_library(ALIVE_SMT smt PATHS \"${ALIVE_BUILDDIR}\" NO_DEFAULT_PATH)\nif (ALIVE_SMT)\n  message(STATUS \"Alive2 SMT\")\nelse()\n  message(SEND_ERROR \"Alive2 libsmt.a not found\")\nendif()\n\nfind_library(ALIVE_TOOLS tools PATHS \"${ALIVE_BUILDDIR}\" NO_DEFAULT_PATH)\nif (ALIVE_TOOLS)\n  message(STATUS \"Alive2 TOOLS\")\nelse()\n  message(SEND_ERROR \"Alive2 libtools.a not found\")\nendif()\n\nfind_library(ALIVE_UTIL util PATHS \"${ALIVE_BUILDDIR}\" NO_DEFAULT_PATH)\nif (ALIVE_UTIL)\n  message(STATUS \"Alive2 UTIL\")\nelse()\n  message(SEND_ERROR \"Alive2 libutil.a not found\")\nendif()\n\nset(Z3 \"${CMAKE_SOURCE_DIR}/third_party/z3-install/bin/z3\")\nset(Z3_INCLUDE_DIR \"${CMAKE_SOURCE_DIR}/third_party/z3-install/include\")\ninclude_directories(${Z3_INCLUDE_DIR})\n\nfind_library(Z3_LIBRARY z3 PATHS \"${CMAKE_SOURCE_DIR}/third_party/z3-install/lib\" NO_DEFAULT_PATH)\nif (Z3_LIBRARY)\n  message(STATUS \"Z3 shared lib: ${Z3_LIBRARY}\")\nelse()\n  message(SEND_ERROR \"Z3 shared lib not found\")\nendif()\n\nset(ALIVE_LIBRARY ${ALIVE_IR} ${ALIVE_SMT} ${ALIVE_TOOLS} ${ALIVE_UTIL} ${Z3_LIBRARY})\n\nset(SOUPER_EXTRACTOR_FILES\n  lib/Extractor/Candidates.cpp\n  lib/Extractor/ExprBuilder.cpp\n  lib/Extractor/KLEEBuilder.cpp\n  lib/Extractor/Solver.cpp\n  include/souper/Extractor/Candidates.h\n  include/souper/Extractor/ExprBuilder.h\n  include/souper/Extractor/Solver.h\n)\n\nadd_library(souperExtractor STATIC\n  ${SOUPER_EXTRACTOR_FILES}\n)\n\nset(SOUPER_KVSTORE_FILES\n  lib/KVStore/KVStore.cpp\n  include/souper/KVStore/KVStore.h\n)\n\nadd_library(souperKVStore STATIC\n  ${SOUPER_KVSTORE_FILES}\n)\n\nset(SOUPER_INFER_FILES\n  lib/Infer/InstSynthesis.cpp\n  include/souper/Infer/InstSynthesis.h\n  lib/Infer/ConstantSynthesis.cpp\n  include/souper/Infer/ConstantSynthesis.h\n  lib/Infer/EnumerativeSynthesis.cpp\n  include/souper/Infer/EnumerativeSynthesis.h\n  lib/Infer/AliveDriver.cpp\n  include/souper/Infer/AliveDriver.h\n  lib/Infer/Pruning.cpp\n  include/souper/Infer/Pruning.h\n  lib/Infer/Interpreter.cpp\n  lib/Infer/AbstractInterpreter.cpp\n  include/souper/Infer/Interpreter.h\n  lib/Infer/Preconditions.cpp\n  include/souper/Infer/Preconditions.h\n)\n\nadd_library(souperInfer STATIC\n  ${SOUPER_INFER_FILES}\n)\n\nset(SOUPER_INST_FILES\n  lib/Inst/Inst.cpp\n  include/souper/Inst/Inst.h\n  include/souper/Inst/InstGraph.h\n)\n\nadd_library(souperInst STATIC\n  ${SOUPER_INST_FILES}\n)\n\nset(SOUPER_PARSER_FILES\n  lib/Parser/Parser.cpp\n  include/souper/Parser/Parser.h\n)\n\nadd_library(souperParser STATIC\n  ${SOUPER_PARSER_FILES}\n)\n\nset(SOUPER_SMTLIB2_FILES\n  lib/SMTLIB2/Solver.cpp\n  include/souper/SMTLIB2/Solver.h\n)\n\nadd_library(souperSMTLIB2 STATIC\n  ${SOUPER_SMTLIB2_FILES}\n)\n\nset(SOUPER_TOOL_FILES\n  lib/Tool/CandidateMapUtils.cpp\n  include/souper/Tool/CandidateMapUtils.h\n  include/souper/Tool/GetSolver.h.in\n)\n\nadd_library(souperTool STATIC\n  ${SOUPER_TOOL_FILES}\n)\n\nset(SOUPER_CODEGEN_FILES\n  lib/Codegen/Codegen.cpp\n  include/souper/Codegen/Codegen.h\n)\n\nadd_library(souperCodegen STATIC\n  ${SOUPER_CODEGEN_FILES}\n)\n\nset(SOUPER_SOURCES\n  ${SOUPER_EXTRACTOR_FILES}\n  ${SOUPER_INST_FILES}\n  ${SOUPER_KVSTORE_FILES}\n  ${SOUPER_PARSER_FILES}\n  ${SOUPER_SMTLIB2_FILES}\n  ${SOUPER_TOOL_FILES}\n  ${SOUPER_INFER_FILES}\n  ${SOUPER_CODEGEN_FILES})\n\nadd_library(souperPass SHARED\n  ${KLEE_EXPR_FILES}\n  ${SOUPER_SOURCES}\n  lib/Pass/Pass.cpp\n)\n\nadd_library(souperPassProfileAll SHARED\n  ${KLEE_EXPR_FILES}\n  ${SOUPER_SOURCES}\n  lib/Pass/Pass.cpp\n)\n\ntarget_compile_definitions(souperPassProfileAll PRIVATE DYNAMIC_PROFILE_ALL=1)\n\nadd_executable(souper\n  tools/souper.cpp\n)\n\nadd_executable(internal-solver-test\n  tools/internal-solver-test.cpp\n)\n\nadd_executable(lexer-test\n  tools/lexer-test.cpp\n)\n\nadd_executable(parser-test\n  tools/parser-test.cpp\n)\n\nadd_executable(souper-check\n  tools/souper-check.cpp\n)\n\nadd_executable(souper-interpret\n  tools/souper-interpret.cpp\n)\n\nadd_executable(count-insts\n  tools/count-insts.cpp\n)\n\nadd_executable(souper2llvm\n  tools/souper2llvm.cpp\n)\n\nadd_executable(extractor_tests\n  unittests/Extractor/ExtractorTests.cpp\n)\n\nadd_executable(inst_tests\n  unittests/Inst/InstTests.cpp\n)\n\nadd_executable(parser_tests\n  unittests/Parser/ParserTests.cpp\n)\n\nadd_executable(codegen_tests\n  unittests/Codegen/CodegenTests.cpp\n)\n\nadd_executable(interpreter_tests\n  unittests/Interpreter/InterpreterInfra.cpp\n  unittests/Interpreter/InterpreterTests.cpp)\n\nset(LLVM_LDFLAGS \"${LLVM_LDFLAGS}\")\n\nadd_executable(bulk_tests\n  unittests/Interpreter/InterpreterInfra.cpp\n  utils/gen-xfer-funcs/BulkTests.cpp\n  utils/gen-xfer-funcs/Verification.cpp)\ntarget_include_directories(bulk_tests PUBLIC \"${CMAKE_SOURCE_DIR}/unittests/Interpreter\")\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/utils/gen-xfer-funcs/run_n.pl.in\n  ${CMAKE_BINARY_DIR}/utils/gen-xfer-funcs/run_n.pl\n  @ONLY\n)\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/utils/gen-xfer-funcs/gen_xfer.pl.in\n  ${CMAKE_BINARY_DIR}/utils/gen-xfer-funcs/gen_xfer.pl\n  @ONLY\n)\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/utils/gen-xfer-funcs/compile.sh.in\n  ${CMAKE_BINARY_DIR}/utils/gen-xfer-funcs/compile.sh\n  @ONLY\n)\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/utils/gen-xfer-funcs/funcs.h\n  ${CMAKE_BINARY_DIR}/utils/gen-xfer-funcs/funcs.h\n  COPYONLY\n)\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/utils/gen-xfer-funcs/look_n.pl\n  ${CMAKE_BINARY_DIR}/utils/gen-xfer-funcs/look_n.pl\n  COPYONLY\n)\n\nforeach(target souper internal-solver-test lexer-test parser-test souper-check count-insts\n               souper2llvm souper-interpret\n               souperExtractor souperInfer souperInst souperKVStore souperParser\n               souperSMTLIB2 souperTool souperPass souperPassProfileAll kleeExpr\n               souperCodegen)\n  set_target_properties(${target} PROPERTIES COMPILE_FLAGS \"${LLVM_CXXFLAGS}\")\n  target_include_directories(${target} PRIVATE \"${LLVM_INCLUDEDIR}\")\nendforeach()\nforeach(target extractor_tests inst_tests parser_tests interpreter_tests bulk_tests codegen_tests)\n  set_target_properties(${target} PROPERTIES COMPILE_FLAGS \"${GTEST_CXXFLAGS} ${LLVM_CXXFLAGS}\")\n  target_include_directories(${target} PRIVATE \"${LLVM_INCLUDEDIR}\" \"${GTEST_INCLUDEDIR}\")\nendforeach()\n\n# static\ntarget_link_libraries(kleeExpr ${LLVM_LIBS} ${LLVM_LDFLAGS})\ntarget_link_libraries(souperExtractor souperParser souperKVStore souperInfer souperInst kleeExpr souperCodegen)\ntarget_link_libraries(souperInfer souperExtractor ${LLVM_LIBS} ${LLVM_LDFLAGS} ${Z3_LIBRARY})\ntarget_link_libraries(souperInst ${LLVM_LIBS} ${LLVM_LDFLAGS})\ntarget_link_libraries(souperKVStore ${HIREDIS_LIBRARY} ${LLVM_LIBS} ${LLVM_LDFLAGS})\ntarget_link_libraries(souperParser souperInst ${LLVM_LIBS} ${LLVM_LDFLAGS} ${ALIVE_LIBRARY})\ntarget_link_libraries(souperSMTLIB2 ${LLVM_LIBS} ${LLVM_LDFLAGS})\ntarget_link_libraries(souperTool souperExtractor souperSMTLIB2)\ntarget_link_libraries(souperCodegen ${LLVM_LIBS} ${LLVM_LDFLAGS})\n\n# dynamic\ntarget_link_libraries(souperCodegen ${PASS_LDFLAGS})\ntarget_link_libraries(souperPass ${PASS_LDFLAGS} ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})\ntarget_link_libraries(souperPassProfileAll ${PASS_LDFLAGS} ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})\n\n# executables\ntarget_link_libraries(souper souperExtractor souperKVStore souperParser souperSMTLIB2 souperTool kleeExpr ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})\ntarget_link_libraries(internal-solver-test souperSMTLIB2)\ntarget_link_libraries(lexer-test souperParser)\ntarget_link_libraries(parser-test souperParser)\ntarget_link_libraries(souper-check souperTool souperExtractor souperKVStore souperSMTLIB2 souperParser ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})\ntarget_link_libraries(souper-interpret souperTool souperExtractor souperKVStore souperSMTLIB2 souperParser ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})\ntarget_link_libraries(count-insts souperParser)\ntarget_link_libraries(souper2llvm souperParser souperCodegen)\ntarget_link_libraries(extractor_tests souperExtractor souperParser ${GTEST_LIBS} ${ALIVE_LIBRARY})\ntarget_link_libraries(inst_tests souperInfer souperPass souperInst souperExtractor ${GTEST_LIBS} ${ALIVE_LIBRARY})\ntarget_link_libraries(parser_tests souperParser ${GTEST_LIBS} ${ALIVE_LIBRARY})\ntarget_link_libraries(codegen_tests souperCodegen souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY})\ntarget_link_libraries(interpreter_tests souperInfer souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY})\ntarget_link_libraries(bulk_tests souperInfer souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY} ${Z3_LIBRARY})\n\nset(TEST_SYNTHESIS \"ON\" CACHE STRING \"Enable additional, computationally intensive synthesis tests\")\nset(TEST_LONG_DURATION_SYNTHESIS \"\" CACHE STRING \"Enable long duration (> 10 min) synthesis tests\")\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/test/lit.site.cfg.in\n  ${CMAKE_BINARY_DIR}/test/lit.site.cfg\n)\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/utils/run_lit.in\n  ${CMAKE_BINARY_DIR}/run_lit\n)\n\nconfigure_file(\n  ${CMAKE_SOURCE_DIR}/tools/gdbprinter.py\n  ${CMAKE_BINARY_DIR}/souper-check-gdb.py\n)\n\nadd_custom_target(check\n  COMMAND ${CMAKE_BINARY_DIR}/run_lit\n  DEPENDS extractor_tests inst_tests parser-test parser_tests profileRuntime souper souper-check souper-interpret souperPass souper2llvm souperPassProfileAll count-insts interpreter_tests bulk_tests codegen_tests\n  USES_TERMINAL)\n\n# we want assertions even in release mode!\nstring(REPLACE \"-DNDEBUG\" \"\" CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n\nadd_library(profileRuntime STATIC\n  runtime/souperPassProfile.c)\n\nset(SOUPER_PASS ${CMAKE_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}souperPass${CMAKE_SHARED_LIBRARY_SUFFIX})\nset(SOUPER_PASS_PROFILE_ALL ${CMAKE_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}souperPassProfileAll${CMAKE_SHARED_LIBRARY_SUFFIX})\nset(PROFILE_LIBRARY ${CMAKE_BINARY_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}profileRuntime${CMAKE_STATIC_LIBRARY_SUFFIX})\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/compare_pruning_output.in ${CMAKE_BINARY_DIR}/compare_pruning_output @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/reduce.in ${CMAKE_BINARY_DIR}/reduce @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/cache_dump.in ${CMAKE_BINARY_DIR}/cache_dump @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/cache_dfa.in ${CMAKE_BINARY_DIR}/cache_dfa @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/cache_import.in ${CMAKE_BINARY_DIR}/cache_import @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/cache_infer.in ${CMAKE_BINARY_DIR}/cache_infer @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/py_souper2llvm.in ${CMAKE_BINARY_DIR}/py_souper2llvm @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/include/souper/Tool/GetSolver.h.in ${CMAKE_BINARY_DIR}/include/souper/Tool/GetSolver.h @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/include/souper/KVStore/KVSocket.h.in ${CMAKE_BINARY_DIR}/include/souper/KVStore/KVSocket.h @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/redis-unix-socket.conf.in ${CMAKE_BINARY_DIR}/redis-unix-socket.conf @ONLY)\n\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/sclang.in ${CMAKE_BINARY_DIR}/sclang @ONLY)\nconfigure_file(${CMAKE_SOURCE_DIR}/utils/sclang.in ${CMAKE_BINARY_DIR}/sclang++ @ONLY)\n\nadd_subdirectory(docs)\n"
        },
        {
          "name": "CODING_STYLE",
          "type": "blob",
          "size": 0.427734375,
          "content": "Souper generally follows the LLVM coding conventions.\n\nThese settings will help Emacs follow the conventions:\n\n(setq-default c++-indent-level 2)\n(setq-default c-basic-offset 2)\n(setq-default fill-column 80)\n(setq-default indent-tabs-mode nil)\n\nTODO: vim settings\n\nIncludes should be ordered like this:\n\n#include \"souper/Whatever/Thisfile.h\"\n\n#include \"{klee,llvm,souper}/...\" // ordered by name\n#include system headers // ordered by name\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.611328125,
          "content": "# People who have agreed to one of the CLAs and can contribute patches.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n#\n# https://developers.google.com/open-source/cla/individual\n# https://developers.google.com/open-source/cla/corporate\n#\n# Names should be added to this file as:\n#     Name <email address>\n\nJeroen Ketema <j.ketema@imperial.ac.uk>\nJohn Regehr <regehr@cs.utah.edu>\nJubi Taneja <jubitaneja@gmail.com>\nPeter Collingbourne <pcc@google.com>\nRaimondas Sasnauskas <rsas@cs.utah.edu>\n"
        },
        {
          "name": "DEVELOPER_POLICY",
          "type": "blob",
          "size": 1.134765625,
          "content": "This document describes the developer policy for Souper.\n\nCoding Style\n------------\n\nCode must comply with the coding style given in the CODING_STYLE file in\nthis directory.\n\nEach commit must consist of a logically separate change.\n\nCode Review\n-----------\n\nAll changes are subject to code review by a person with write access other\nthan the person proposing the change. To propose a change for review, create\na fork of the project on GitHub under your own account, upload your changes\nto a branch of your fork and create a pull request using GitHub's web-based\ninterface at:\n\nhttps://github.com/google/souper/pulls\n\nAUTHORS and CONTRIBUTORS\n------------------------\n\nIf your name is not already in the AUTHORS or CONTRIBUTORS files, please\nensure you have signed a Google CLA by following the link below, ideally\nbefore creating a pull request.\n\nhttps://cla.developers.google.com/clas\n\nChanges from a new contributor may not be accepted unless their name appears\nin the AUTHORS and CONTRIBUTORS files. Peter Collingbourne is responsible\nfor checking that new contributors have properly signed a CLA and adding\ntheir names to the AUTHORS and CONTRIBUTORS files.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.8330078125,
          "content": "from ubuntu:20.04\n\nrun set -x; \\\n    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \\\n    && apt-get update -y -qq \\\n    && apt-get dist-upgrade -y -qq \\\n    && apt-get autoremove -y -qq \\\n    && apt-get remove -y -qq clang llvm llvm-runtime \\\n    && apt-get install libgmp10 \\\n    && echo 'ca-certificates valgrind libc6-dev libgmp-dev cmake ninja-build make autoconf automake libtool python python3 subversion re2c git clang libstdc++-10-dev redis' > /usr/src/build-deps \\\n    && apt-get install -y $(cat /usr/src/build-deps) --no-install-recommends\n\nadd build_deps.sh /usr/src/souper/build_deps.sh\nadd clone_and_test.sh /usr/src/souper/clone_and_test.sh\n\nrun export CC=clang CXX=clang++ \\\n    && cd /usr/src/souper \\\n#   && ./build_deps.sh Debug \\\n#   && rm -r third_party/llvm-Debug-build \\\n    && ./build_deps.sh Release \\\n    && rm -r third_party/llvm-Release-build\n\n\nadd CMakeLists.txt /usr/src/souper/CMakeLists.txt\nadd docs /usr/src/souper/docs\nadd include /usr/src/souper/include\nadd lib /usr/src/souper/lib\nadd runtime /usr/src/souper/runtime\nadd test /usr/src/souper/test\nadd tools /usr/src/souper/tools\nadd utils /usr/src/souper/utils\nadd unittests /usr/src/souper/unittests\n\nrun export LD_LIBRARY_PATH=/usr/src/souper/third_party/z3-install/lib:$LD_LIBRARY_PATH \\\n    && mkdir -p /usr/src/souper-build \\\n    && cd /usr/src/souper-build \\\n    && CC=/usr/src/souper/third_party/llvm-Release-install/bin/clang CXX=/usr/src/souper/third_party/llvm-Release-install/bin/clang++ cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DTEST_SYNTHESIS=ON ../souper \\\n    && ninja \\\n    && ninja check \\\n    && cd .. \\\n    && rm -rf /usr/src/souper-build \\\n    && groupadd -r souper \\\n    && useradd -m -r -g souper souper \\\n    && mkdir /data \\\n    && chown souper:souper /data \\\n    && rm -rf /usr/local/include /usr/local/lib/*.a /usr/local/lib/*.la\n"
        },
        {
          "name": "Dockerfile.metadata",
          "type": "blob",
          "size": 0.1201171875,
          "content": "from souperweb_squashed\n\nuser souper\nvolume /data\nworkdir /data\nexpose 8080\ncmd redis-server & (sleep 1; souperweb) & wait\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9365234375,
          "content": "Souper is a superoptimizer for LLVM IR. It uses an SMT solver to help identify\nmissing peephole optimizations in LLVM's midend optimizers.\n\nThe architecture and concepts of Souper are described in [Souper: A synthesizing superoptimizer](https://arxiv.org/pdf/1711.04422.pdf).\n\n# Requirements\n\nSouper should work on any reasonably modern Linux or OS X machine.\n\nYou will need a reasonably modern compiler toolchain. LLVM has instructions\non how to get one for Linux:\nhttp://llvm.org/docs/GettingStarted.html#getting-a-modern-host-c-toolchain\n\nYou will also need CMake to build Souper and its dependencies, and the zstd\nlibrary from your package manager or from Homebrew.\n\n# Building Souper\n\n1. Download and build dependencies:\n```\n$ ./build_deps.sh $buildtype $extra_cmake_flags\n```\n   $buildtype is optional; it defaults to Release and may be set to any LLVM\n   build type.\n   $extra_cmake_flags is optional. It is passed to CMake.\n\n2. Run CMake from a build directory:\n```\n$ mkdir /path/to/souper-build\n$ cd /path/to/souper-build\n$ cmake -DCMAKE_BUILD_TYPE=$buildtype /path/to/souper\n```\n   Again, the build type is optional and defaults to Release. In any case it\n   must match the build type used when compiling the dependencies.\n\n3. Run 'make' from the build directory.\n\n4. Optionally run 'make check' to run Souper's test suite. To run the test suite\n   under Valgrind, run 'make check LIT_ARGS=\"-v --vg --vg-leak\"' instead. By\n   default the solver is also run under Valgrind. This can be disabled by\n   by adding --vg-arg=--trace-children-skip=/path/to/solver to LIT_ARGS.\n\nNote that GCC 4.8 and earlier have a bug in handling multiline string\nliterals. You should build Souper using GCC 4.9+ or Clang.\n\n# Using Souper\n\nAfter following the above instructions, you will have a Souper\nexecutable in /path/to/souper-build/souper and a Clang executable in\n/path/to/souper/third_party/llvm/$buildtype/bin/clang.  You can use the\nClang executable to create an LLVM bitcode file like this:\n```\n$ /path/to/clang -emit-llvm -c -o /path/to/file.bc /path/to/file.c\n```\n\nFor example:\n```\n$ /path/to/souper -z3-path=/usr/bin/z3 /path/to/file.bc\n```\n\nSouper will extract SMT queries from the bitcode file and pass them to\na solver. Unsatisfiable queries (which represent missed optimization\nopportunities) will cause Souper to print its internal representation\nof the optimizable expression along with the shorter expression that\nrefines the original one.\n\nAlternatively, you may immediately let Souper modify the bitcode and let\nit apply the missed optimization opportunities by using the Souper llvm opt\npass. When loaded the pass will automatically register itself to run after\nLLVM's regular peephole optimizations.\n\nFor example:\n```\n$ /path/to/clang -Xclang -load -Xclang /path/to/libsouperPass.so \\\n                 -mllvm -z3-path=/usr/bin/z3 /path/to/file.c\n```\n\nOr to run the pass on its own:\n```\n$ /path/to/opt -load /path/to/libsouperPass.so -souper \\\n               -z3-path=/usr/bin/z3 -o /path/to/file.opt.bc \\\n               /path/to/file.bc\n```\n\nOr use the drop-in compiler replacements sclang and sclang++:\n```\n$ /path/to/configure CC=/path/to/sclang CXX=/path/to/sclang++\n$ make\n```\n\nCompilation using Souper can be sped up by caching queries. By default, Souper\nuses a non-persistent RAM-based cache. The -souper-external-cache flag causes\nSouper to cache its queries in a Redis database. For this to work, Redis >=\n1.2.0 must be installed on the machine where you are running Souper and a Redis\nserver must be listening on the default port (6379).\n\nsclang uses external caching by default since this often gives a substantial\nspeedup for large compilations. This behavior may be disabled by setting the\nSOUPER_NO_EXTERNAL_CACHE environment variable. Souper's Redis cache does not yet\nhave any support for versioning; you should stop Redis and delete its dump file\nany time Souper is upgraded.\n\n# Disclaimer\n\nPlease note that although some of the authors are employed by Google, this\nis not an official Google product.\n"
        },
        {
          "name": "RESULTS",
          "type": "blob",
          "size": 0.400390625,
          "content": "----------------------------------------------------------------------\n\nThis file lists bugs filed against LLVM, and commits made to LLVM, as\na result of Souper.\n\nhttp://llvm.org/viewvc/llvm-project?view=revision&revision=208809\nhttp://llvm.org/viewvc/llvm-project?view=revision&revision=208750\nhttp://llvm.org/bugs/show_bug.cgi?id=19711\n\n----------------------------------------------------------------------\n"
        },
        {
          "name": "build_deps.sh",
          "type": "blob",
          "size": 4.2763671875,
          "content": "#!/bin/bash -e\n\n# Copyright 2014 The Souper Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nif [ -d \"third_party\" ]; then\n  echo \"Directory third_party exists, remove this directory before running build_deps.sh.\"\n  exit 1;\nfi\n\nncpus=$(command nproc 2>/dev/null || command sysctl -n hw.ncpu 2>/dev/null || echo 8)\n\n# hiredis latest as of May 30 2024\nhiredis_commit=19cfd60d92da1fdb958568cdd7d36264ab14e666\nllvm_repo=https://github.com/regehr/llvm-project.git\n# llvm_commit specifies the git branch or hash to checkout to\nllvm_commit=disable-peepholes-llvmorg-18.1.6\nklee_repo=https://github.com/regehr/klee\nklee_branch=klee-for-souper-17-2\nalive_commit=v7\nalive_repo=https://github.com/manasij7479/alive2.git\nz3_repo=https://github.com/Z3Prover/z3.git\nz3_commit=z3-4.13.0\n\nllvm_build_type=Release\nif [ -n \"$1\" ] ; then\n  llvm_build_type=\"$1\"\n  shift\nfi\n\nz3_srcdir=$(pwd)/third_party/z3\nz3_builddir=$(pwd)/third_party/z3-build\nz3_installdir=$(pwd)/third_party/z3-install\n(git clone $z3_repo $z3_srcdir && git -C $z3_srcdir checkout $z3_commit)\nmkdir -p $z3_builddir\n(cd $z3_builddir && cmake -Wno-dev ../z3 -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$z3_installdir -DZ3_BUILD_LIBZ3_SHARED=On -DZ3_BUILD_PYTHON_BINDINGS=Off && ninja && ninja install)\n\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  # Mac\n  Z3_SHAREDLIB=libz3.dylib\nelse\n  Z3_SHAREDLIB=libz3.so\nfi\n\nalivedir=$(pwd)/third_party/alive2\nalive_builddir=$(pwd)/third_party/alive2-build\nmkdir -p $alivedir $alive_builddir\ngit clone $alive_repo $alivedir --branch $alive_commit\n\nif [ -n \"`which ninja`\" ] ; then\n  (cd $alive_builddir && cmake ../alive2 -DZ3_LIBRARIES=$z3_installdir/lib/$Z3_SHAREDLIB -DZ3_INCLUDE_DIR=$z3_installdir/include -DCMAKE_BUILD_TYPE=$llvm_build_type -GNinja)\n  ninja -C $alive_builddir\nelse\n  (cd $alive_builddir && cmake ../alive2 -DZ3_LIBRARIES=$z3_installdir/lib/$Z3_SHAREDLIB -DZ3_INCLUDE_DIR=$z3_installdir/include -DCMAKE_BUILD_TYPE=$llvm_build_type)\n  make -C $alive_builddir -j $ncpus\nfi\n\nllvm_srcdir=$(pwd)/third_party/llvm-project\nllvm_builddir=$(pwd)/third_party/llvm-${llvm_build_type}-build\nllvm_installdir=$(pwd)/third_party/llvm-${llvm_build_type}-install\n\nmkdir -p $llvm_srcdir\n(cd $llvm_srcdir && git init && git remote add origin $llvm_repo && git fetch origin $llvm_commit && git reset --hard FETCH_HEAD)\n\nmkdir -p $llvm_builddir\n\ncmake_flags=\"-DCMAKE_INSTALL_PREFIX=$llvm_installdir -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_FORCE_ENABLE_STATS=ON -DCMAKE_BUILD_TYPE=$llvm_build_type -DLLVM_ENABLE_Z3_SOLVER=OFF -DLLVM_TARGETS_TO_BUILD=X86;AArch64 -DLLVM_BUILD_TESTS=On -DLLVM_INSTALL_GTEST=On -DLLVM_ENABLE_PROJECTS=clang;compiler-rt\"\n\nif [ -n \"`which ninja`\" ] ; then\n  (cd $llvm_builddir && cmake ${llvm_srcdir}/llvm -G Ninja $cmake_flags -DCMAKE_CXX_FLAGS=\"\" \"$@\")\n  ninja -C $llvm_builddir\n  ninja -C $llvm_builddir install\nelse\n  (cd $llvm_builddir && cmake $cmake_flags -DCMAKE_CXX_FLAGS=\"\" \"$@\")\n  make -C $llvm_builddir -j $ncpus\n  make -C $llvm_builddir -j $ncpus install\nfi\n\n# we want these but they don't get installed by default\ncp $llvm_builddir/bin/llvm-lit $llvm_installdir/bin\ncp $llvm_builddir/bin/FileCheck $llvm_installdir/bin\n\nkleedir=$(pwd)/third_party/klee\n\nif [ -d third_party/klee/.git ] ; then\n  (cd $kleedir && git fetch)\nelse\n  git clone -b $klee_branch $klee_repo $kleedir\nfi\n\nhiredis_srcdir=$(pwd)/third_party/hiredis\nhiredis_installdir=$(pwd)/third_party/hiredis-install\n\nif [ -d $hiredis_srcdir/.git ] ; then\n  (cd $hiredis_srcdir && git fetch)\nelse\n  git clone https://github.com/redis/hiredis.git $hiredis_srcdir\nfi\n\nmkdir -p $hiredis_installdir/include/hiredis\nmkdir -p $hiredis_installdir/lib\n\n(cd $hiredis_srcdir && git checkout $hiredis_commit && make libhiredis.a &&\n cp -r alloc.h hiredis.h async.h read.h sds.h adapters ${hiredis_installdir}/include/hiredis &&\n cp libhiredis.a ${hiredis_installdir}/lib)\n"
        },
        {
          "name": "build_docker.sh",
          "type": "blob",
          "size": 0.4228515625,
          "content": "#!/bin/sh -ex\n\n# docker system prune -a\n\ntar cz Dockerfile build_deps.sh clone_and_test.sh CMakeLists.txt docs include lib runtime test tools utils unittests | docker build -t souperweb -\ncontainer=$(/usr/bin/docker run -d souperweb true)\ndocker export $container | docker import - souperweb_squashed\ndocker build -t souperweb_final - < Dockerfile.metadata\ndocker tag souperweb_final regehr/souperweb\n\n# docker push regehr/souperweb\n"
        },
        {
          "name": "clone_and_test.sh",
          "type": "blob",
          "size": 2.2509765625,
          "content": "#!/bin/bash -ex\n\n# get travis env\necho \"TRAVIS_EVENT_TYPE: ${TRAVIS_EVENT_TYPE}\"\necho \"TRAVIS_BRANCH: ${TRAVIS_BRANCH}\"\necho \"TRAVIS_REPO_SLUG: ${TRAVIS_REPO_SLUG}\"\necho \"TRAVIS_PULL_REQUEST_SLUG: ${TRAVIS_PULL_REQUEST_SLUG}\"\necho \"TRAVIS_PULL_REQUEST_BRANCH: ${TRAVIS_PULL_REQUEST_BRANCH}\"\n\n# set default variable if not in env\nif [ -z ${TRAVIS_EVENT_TYPE} ]; then\nTRAVIS_EVENT_TYPE=\"push\";\necho \"TRAVIS_EVENT_TYPE set to push\";\nfi\n\nif [ -z ${TRAVIS_BRANCH} ]; then\nTRAVIS_BRANCH=\"main\";\necho \"TRAVIS_BRANCH set to main\";\nfi\n\n# check if this is a pull request or a push\nif [ ${TRAVIS_EVENT_TYPE} == \"pull_request\" ]; then\n    git clone https://github.com/${TRAVIS_PULL_REQUEST_SLUG} souper-test;\n    cd souper-test;\n    git checkout ${TRAVIS_PULL_REQUEST_BRANCH};\n    ln -s /usr/src/souper/third_party;\nelse\n    # it's a push\n    git clone https://github.com/${TRAVIS_REPO_SLUG} souper-test;\n    cd souper-test;\n    git checkout ${TRAVIS_BRANCH};\n    ln -s /usr/src/souper/third_party;\nfi\n\nZ3=/usr/bin/z3\nSRCDIR=\"$PWD\"\n\n# invoke run_lit directly since ninja buffers output causing Travis to\n# give up after 10 minutes\n\nmkdir build-release\ncd build-release\nPATH=/usr/src/souper/third_party/llvm/Release/bin:$PATH cmake -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS='-Werror' -DTEST_SYNTHESIS=ON -DTEST_LONG_DURATION_SYNTHESIS=OFF -DCMAKE_BUILD_TYPE=Release ..\nninja\nLIT_ARGS=\"-v -vv\" ./run_lit\n#LIT_ARGS=\"-v -vv --vg --vg-arg=--trace-children-skip=$Z3 --vg-arg=--suppressions=$SRCDIR/valgrind.supp\" ./run_lit\ncd ..\n\n# TODO: turn on ASan as well, which requires LLVM to be built with it\n# in order to get our pass to work\n\n#mkdir build-release-sanitize\n#cd build-release-sanitize\n#PATH=/usr/src/souper/third_party/llvm/Release/bin:$PATH cmake -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS='-fsanitize=undefined -fno-sanitize-recover=all -Werror' -DTEST_SYNTHESIS=ON -DTEST_LONG_DURATION_SYNTHESIS=OFF -DCMAKE_BUILD_TYPE=Release ..\n#ninja\n#LIT_ARGS=\"-v -vv\" ./run_lit\n#cd ..\n\n#mkdir build-debug\n#cd build-debug\n#cmake -G Ninja -DTEST_SYNTHESIS=ON -DCMAKE_BUILD_TYPE=Debug ..\n#ninja\n#LIT_ARGS=\"-v -vv\" ninja check\n#LIT_ARGS=\"-v -vv --vg --vg-arg=--trace-children-skip=$Z3 --vg-arg=--suppressions=$SRCDIR/valgrind.supp\" ninja check\n#cd ..\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "unittests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "valgrind.supp",
          "type": "blob",
          "size": 0.9775390625,
          "content": "{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   fun:_ZN4llvm16DwarfCompileUnit8addRangeENS_9RangeSpanE\n   fun:_ZN4llvm10DwarfDebug15endFunctionImplEPKNS_15MachineFunctionE\n   fun:_ZN4llvm16DebugHandlerBase11endFunctionEPKNS_15MachineFunctionE\n   fun:_ZN4llvm10AsmPrinter16EmitFunctionBodyEv\n   fun:_ZN4llvm13X86AsmPrinter20runOnMachineFunctionERNS_15MachineFunctionE\n   fun:_ZN4llvm19MachineFunctionPass13runOnFunctionERNS_8FunctionE\n   fun:_ZN4llvm13FPPassManager13runOnFunctionERNS_8FunctionE\n   fun:_ZN4llvm13FPPassManager11runOnModuleERNS_6ModuleE\n   fun:_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE\n   fun:_ZN5clang17EmitBackendOutputERNS_17DiagnosticsEngineERKNS_19HeaderSearchOptionsERKNS_14CodeGenOptionsERKNS_13TargetOptionsERKNS_11LangOptionsERKN4llvm10DataLayoutEPNSE_6ModuleENS_13BackendActionESt10unique_ptrINSE_17raw_pwrite_streamESt14default_deleteISM_EE\n   fun:_ZN5clang15BackendConsumer21HandleTranslationUnitERNS_10ASTContextE\n   fun:_ZN5clang8ParseASTERNS_4SemaEbb\n}\n"
        }
      ]
    }
  ]
}