{
  "metadata": {
    "timestamp": 1736565277460,
    "page": 88,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/incubator-pagespeed-ngx",
      "stars": 4361,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "test/tmp\npsol/\npsol-*.tar.gz\n*.*.*.*.tar.gz\nnginx\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.8818359375,
          "content": "[submodule \"testing-dependencies/mod_pagespeed\"]\n\tpath = testing-dependencies/mod_pagespeed\n\turl = https://github.com/apache/incubator-pagespeed-mod.git\n[submodule \"testing-dependencies/ngx_cache_purge\"]\n\tpath = testing-dependencies/ngx_cache_purge\n\turl = https://github.com/FRiCKLE/ngx_cache_purge.git\n[submodule \"testing-dependencies/nginx\"]\n\tpath = testing-dependencies/nginx\n\turl = https://github.com/nginx/nginx.git\n[submodule \"testing-dependencies/set-misc-nginx-module\"]\n\tpath = testing-dependencies/set-misc-nginx-module\n\turl = https://github.com/openresty/set-misc-nginx-module\n[submodule \"testing-dependencies/ngx_devel_kit\"]\n\tpath = testing-dependencies/ngx_devel_kit\n\turl = https://github.com/simpl/ngx_devel_kit\n[submodule \"testing-dependencies/headers-more-nginx-module\"]\n\tpath = testing-dependencies/headers-more-nginx-module\n\turl = https://github.com/openresty/headers-more-nginx-module\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.0380859375,
          "content": "language: c++\nenv:\n  global:\n    - MAKEFLAGS=-j3\n# By default travis loads submodules serially, but we can load them in parallel\n# if we install an updated git and use --jobs.  Some timing numbers:\n#   serial: 257s\n#   jobs=4: 182s (29s to install new git, 153s to run the downloads)\n#   jobs=8: 179s (29s to install new git, 150s to run the downloads)\n# We can't use --depth=1, though, because github doesn't have\n# allowReachableSHA1InWant set.\n#\n# TODO(jefftk): once we're running on a server with git 2.8 or later we can have\n#               --jobs without installing a new git.\ngit:\n  submodules: false\nbefore_install:\n  - sudo add-apt-repository --yes ppa:git-core/ppa\n  - sudo apt-get update\n  - sudo apt-get install git\n  - git submodule update --init --recursive --jobs=8\ninstall:\n  scripts/build_ngx_pagespeed.sh --devel --assume-yes\nscript:\n  test/run_tests.sh $PWD/testing-dependencies/mod_pagespeed/ \\\n                    $PWD/nginx/sbin/nginx\ndist: trusty\nsudo: required\ncompiler:\n  - gcc\nnotifications:\n  email:\n    - pagespeed-ci@googlegroups.com\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.076171875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2010 Google Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.4765625,
          "content": "Apache ngx_pagespeed\n\nCopyright 2018 The Apache Software Foundation\n\nThis product includes software developed at\n  - The Apache Software Foundation (http://www.apache.org/).\n  - Google Inc.\n\nCodebase originally donated by Google Inc:\n\nCopyright (C) 2010-2017 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n"
        },
        {
          "name": "PSOL_BINARY_URL",
          "type": "blob",
          "size": 0.2587890625,
          "content": "In a release this file would contain the URL to download the pre-compiled PSOL\nbinary, but on development branches (like this one) you have to build PSOL from\nsource yourself.  See:\n  https://github.com/apache/incubator-pagespeed-ngx/wiki/Building-PSOL-From-Source\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.572265625,
          "content": "![ngx_pagespeed](https://user-images.githubusercontent.com/6751650/73116078-338a9180-3f0f-11ea-8fdf-8c99cb4bec7f.png)\n\n[![Build Status](https://travis-ci.org/apache/incubator-pagespeed-ngx.svg?branch=master)](https://travis-ci.org/apache/incubator-pagespeed-ngx)\n\nngx_pagespeed speeds up your site and reduces page load time by automatically\napplying web performance best practices to pages and associated assets (CSS,\nJavaScript, images) without requiring you to modify your existing content or\nworkflow. Features include:\n\n- Image optimization: stripping meta-data, dynamic resizing, recompression\n- CSS & JavaScript minification, concatenation, inlining, and outlining\n- Small resource inlining\n- Deferring image and JavaScript loading\n- HTML rewriting\n- Cache lifetime extension\n- and\n  [more](https://developers.google.com/speed/docs/mod_pagespeed/config_filters)\n\nTo see ngx_pagespeed in action, with example pages for each of the\noptimizations, see our <a href=\"http://ngxpagespeed.com\">demonstration site</a>.\n\n## How to build\n\nFollow the steps on <a\nhref=\"https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source\">build\nngx_pagespeed from source</a>.\n\n## How to use\n\nFollow the steps on <a\nhref=\"https://developers.google.com/speed/pagespeed/module/configuration\">PageSpeed\nconfiguration</a>.\n\nFor feedback, questions, and to follow\nthe progress of the project:\n\n- [ngx-pagespeed-discuss mailing\n  list](https://groups.google.com/forum/#!forum/ngx-pagespeed-discuss)\n- [ngx-pagespeed-announce mailing\n  list](https://groups.google.com/forum/#!forum/ngx-pagespeed-announce)\n"
        },
        {
          "name": "RETIRED.txt",
          "type": "blob",
          "size": 0.0986328125,
          "content": "This podling has been retired, please see: http://incubator.apache.org/projects/index.html#pagespeed\n"
        },
        {
          "name": "config",
          "type": "blob",
          "size": 13.35546875,
          "content": "# Copyright 2012 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Environment Variables (Optional):\n#   MOD_PAGESPEED_DIR: absolute path to the mod_pagespeed/src directory\n#   PSOL_BINARY: absolute path to pagespeed_automatic.a\n#   PSOL_BUILDTYPE: Release or Debug\n\nmod_pagespeed_dir=\"${MOD_PAGESPEED_DIR:-unset}\"\nposition_aux=\"${POSITION_AUX:-unset}\"\npsol_buildtype=\"${PSOL_BUILDTYPE:-unset}\"\n\nif [ \"$mod_pagespeed_dir\" = \"unset\" ] ; then\n  mod_pagespeed_dir=\"$ngx_addon_dir/psol/include\"\n  build_from_source=false\n\n  if [ ! -e \"$mod_pagespeed_dir\" ] ; then\n    echo \"ngx_pagespeed: pagespeed optimization library not found:\"\n\n    psol_binary_url=\"$($ngx_addon_dir/scripts/format_binary_url.sh \\\n                           $ngx_addon_dir/PSOL_BINARY_URL)\"\n    if [[ \"$psol_binary_url\" != https://* ]]; then\n      echo \"\n  This is a development branch of ngx_pagespeed, which means there is no\n  precompiled PSOL library available to link against.  Either build from a\n  release tag, like latest-beta, or build PSOL from source:\n    https://github.com/apache/incubator-pagespeed-ngx/wiki/Building-PSOL-From-Source\"\n      exit 1\n    fi\n\n    echo \"\n  You need to separately download the pagespeed library:\n     $ cd $ngx_addon_dir\n     $ wget $psol_binary_url\n     $ tar -xzvf $(basename $psol_binary_url) # expands to psol/\n\n  Or see the installation instructions:\n     https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source\"\n    exit 1\n  fi\nelse\n  build_from_source=true\nfi\n\nos_name='unknown_os'\narch_name='unknown_arch'\nuname_os=`uname`\nuname_arch=`uname -m`\n\nif [ $uname_os = 'Linux' ]; then\n  os_name='linux'\nelif [ $uname_os = 'Darwin' ]; then\n  os_name='mac'\nelse\n  echo \"OS not supported: $uname_os\"\n  exit 1\nfi\n\nif [ $uname_arch = 'x86_64' -o $uname_arch = 'amd64' ]; then\n  arch_name='x64'\nelif [ $uname_arch = 'x86_32' -o $uname_arch = 'i686' \\\n                              -o $uname_arch = 'i386' ]; then\n  arch_name='ia32'\nelse\n  echo \"Architecture not supported: $uname_arch\"\n  exit 1\nfi\n\nif [ \"$psol_buildtype\" = \"unset\" ] ; then\n  if [ \"$NGX_DEBUG\" = \"YES\" ]; then\n    buildtype=Debug\n    # If we're using a psol tarball that doesn't contain Debug/ (which is the case\n    # from 1.12 onward) then this will be overriden to buildtype=Release below.\n  else\n    buildtype=Release\n  fi\nelse\n  buildtype=$psol_buildtype\nfi\n\n# If the compiler is gcc, we want to use g++ to link, if at all possible,\n# so that -static-libstdc++ works.\n# Annoyingly, the feature test doesn't even use $LINK for linking, so that\n# needs an explicit -lstdc++\npagespeed_libs=\nps_maybe_gpp_base=`basename $CC| sed s/gcc/g++/`\nps_maybe_gpp=\"`dirname $CC`/$ps_maybe_gpp_base\"\nif [ -n \"$NGX_GCC_VER\" -a \\( -x \"$ps_maybe_gpp\" \\) ]; then\n  LINK=$ps_maybe_gpp\nfi\npagespeed_libs=\"-lstdc++\"\n\n# The compiler needs to know that __sync_add_and_fetch_4 is ok,\n# and this requires an instruction that didn't exist on i586 or i386.\nif [ \"$uname_arch\" = \"i686\" ]; then\n  FLAG_MARCH='-march=i686'\nfi\n\nCFLAGS=\"$CFLAGS $FLAG_MARCH\"\n\n# For now, standardize on gcc-4.x ABI --- if we don't set this, people building\n# with new gcc defaulting to gcc-5 C++11 ABI will have build trouble linking\n# to our libpsol.a\n# See https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html\nCFLAGS=\"$CFLAGS -D_GLIBCXX_USE_CXX11_ABI=0\"\nCC_OLD_TEST_FLAGS=\"$CC_TEST_FLAGS\"\nCC_TEST_FLAGS=\"$CC_TEST_FLAGS -D_GLIBCXX_USE_CXX11_ABI=0 --std=c++11\"\n\ncase \"$NGX_GCC_VER\" in\n  4.8*)\n    # On GCC 4.8 and above, -Wall enables -Wunused-local-typedefs.  This breaks\n    # on VerifySizesAreEqual in bit_cast in chromium/src/base/basictypes.h which\n    # has a typedef that is intentionally unused.\n    CFLAGS=\"$CFLAGS -Wno-unused-local-typedefs\"\n\n    # On GCC 4.8 and above, we get the following compiler warning:\n    # chromium/src/base/memory/scoped_ptr.h:133:7: warning: declaration of ‘class scoped_ptr<C>’ [enabled by default]\n    # Based on discussion at http://gcc.gnu.org/bugzilla/show_bug.cgi?id=54055,\n    # this is invalid code, but hasn't been fixed yet in chromium.\n    # Unfortunately, there also does not appear to be a flag for just disabling\n    # that warning, so we add Wno-error to override nginx's default -Werror\n    # option.\n    CFLAGS=\"$CFLAGS -Wno-error\"\n  ;;\nesac\n\n# workaround for a bug in nginx-1.9.11, see:\n# http://hg.nginx.org/nginx/rev/ff1e625ae55b\nNGX_VERSION=`grep nginx_version src/core/nginx.h | sed -e 's/^.* \\(.*\\)$/\\1/'`\nif [ \"$NGX_VERSION\" = \"1009011\" ]; then\n    CFLAGS=\"$CFLAGS -Wno-write-strings\"\nfi\n\nif [ \"$WNO_ERROR\" = \"YES\" ]; then\n    CFLAGS=\"$CFLAGS -Wno-error\"\nfi\n\npsol_binary=\"${PSOL_BINARY:-unset}\"\nif [ \"$psol_binary\" = \"unset\" ] ; then\n  if $build_from_source ; then\n    psol_binary=\"\\\n        $mod_pagespeed_dir/pagespeed/automatic/pagespeed_automatic.a\"\n  else\n    if ! [ -d \"$ngx_addon_dir/psol/lib/$buildtype\" ]; then\n      echo \"\nYou have set --with-debug for building nginx, but precompiled Debug binaries for\nPSOL, which ngx_pagespeed depends on, aren't available.  If you're trying to\ndebug PSOL you need to build it from source.  If you just want to run nginx with\ndebug-level logging you can use the Release binaries.\"\n      echo -n \"\nUse the available Release binaries?\"\n      read -p \" [Y/n] \" yn\n      if [[ \"$yn\" == N* || \"$yn\" == n* ]]; then\n        echo \"Cancelled.\"\n        exit 1\n      fi\n\n      buildtype=Release\n    fi\n    psol_library_dir=\"$ngx_addon_dir/psol/lib/$buildtype/$os_name/$arch_name\"\n    psol_binary=\"$psol_library_dir/pagespeed_automatic.a\"\n  fi\nfi\n\necho \"mod_pagespeed_dir=$mod_pagespeed_dir\"\necho \"build_from_source=$build_from_source\"\n\nngx_feature=\"psol\"\nngx_feature_name=\"\"\nngx_feature_run=no\nngx_feature_incs=\"\n#include \\\"pagespeed/kernel/base/string.h\\\"\n#include \\\"pagespeed/kernel/base/string_writer.h\\\"\n#include \\\"pagespeed/kernel/base/null_message_handler.h\\\"\n#include \\\"pagespeed/kernel/html/html_parse.h\\\"\n#include \\\"pagespeed/kernel/html/html_writer_filter.h\\\"\n\"\n\npagespeed_include=\"\\\n  $mod_pagespeed_dir \\\n  $mod_pagespeed_dir/third_party/chromium/src \\\n  $mod_pagespeed_dir/third_party/google-sparsehash/src/src \\\n  $mod_pagespeed_dir/third_party/google-sparsehash/gen/arch/$os_name/$arch_name/include \\\n  $mod_pagespeed_dir/third_party/grpc/src/include \\\n  $mod_pagespeed_dir/third_party/protobuf/src/src \\\n  $mod_pagespeed_dir/third_party/re2/src \\\n  $mod_pagespeed_dir/out/$buildtype/obj/gen \\\n  $mod_pagespeed_dir/out/$buildtype/obj/gen/protoc_out/instaweb \\\n  $mod_pagespeed_dir/third_party/apr/src/include \\\n  $mod_pagespeed_dir/third_party/aprutil/src/include \\\n  $mod_pagespeed_dir/third_party/apr/gen/arch/$os_name/$arch_name/include \\\n  $mod_pagespeed_dir/third_party/aprutil/gen/arch/$os_name/$arch_name/include \\\n  $mod_pagespeed_dir/url\"\nngx_feature_path=\"$pagespeed_include\"\n\npagespeed_libs=\"$psol_binary $pagespeed_libs -lrt -pthread -lm -luuid\"\nngx_feature_libs=\"$pagespeed_libs\"\nngx_feature_test=\"\n\n  GoogleString output_buffer;\n  net_instaweb::StringWriter write_to_string(&output_buffer);\n\n  net_instaweb::NullMessageHandler handler;\n  net_instaweb::HtmlParse html_parse(&handler);\n  net_instaweb::HtmlWriterFilter html_writer_filter(&html_parse);\n\n  html_writer_filter.set_writer(&write_to_string);\n  html_parse.AddFilter(&html_writer_filter);\n\n  html_parse.StartParse(\\\"http:example.com\\\");\n  html_parse.ParseText(\n      \\\"<html ><body ><h1 >Test</h1 ><p>Test Text</p></body></html>\\n\\\");\n  html_parse.FinishParse();\n\n  printf(\\\"parsed as: %s\\\", output_buffer.c_str())\"\n\n# Test whether we have pagespeed and can compile and link against it.\n. \"$ngx_addon_dir/cpp_feature\"\n\nif [ $ngx_found = no ]; then\n  cat << END\n$0: error: module ngx_pagespeed requires the pagespeed optimization library.\nLook in $PWD/$NGX_AUTOCONF_ERR for more details.\nEND\n  exit 1\nfi\n\nps_src=\"$ngx_addon_dir/src\"\nngx_addon_name=ngx_pagespeed\nNGX_ADDON_DEPS=\"$NGX_ADDON_DEPS \\\n$ps_src/log_message_handler.h \\\n$ps_src/ngx_base_fetch.h \\\n$ps_src/ngx_caching_headers.h \\\n$ps_src/ngx_event_connection.h \\\n$ps_src/ngx_fetch.h \\\n$ps_src/ngx_gzip_setter.h \\\n$ps_src/ngx_list_iterator.h \\\n$ps_src/ngx_message_handler.h \\\n$ps_src/ngx_pagespeed.h \\\n$ps_src/ngx_rewrite_driver_factory.h \\\n$ps_src/ngx_rewrite_options.h \\\n$ps_src/ngx_server_context.h \\\n$ps_src/ngx_url_async_fetcher.h \\\n$psol_binary\"\nNPS_SRCS=\" \\\n$ps_src/log_message_handler.cc \\\n$ps_src/ngx_base_fetch.cc \\\n$ps_src/ngx_caching_headers.cc \\\n$ps_src/ngx_event_connection.cc \\\n$ps_src/ngx_fetch.cc \\\n$ps_src/ngx_gzip_setter.cc \\\n$ps_src/ngx_list_iterator.cc \\\n$ps_src/ngx_message_handler.cc \\\n$ps_src/ngx_pagespeed.cc \\\n$ps_src/ngx_rewrite_driver_factory.cc \\\n$ps_src/ngx_rewrite_options.cc \\\n$ps_src/ngx_server_context.cc \\\n$ps_src/ngx_url_async_fetcher.cc\"\n# Save our sources in a separate var since we may need it in config.make\nPS_NGX_SRCS=\"$NGX_ADDON_SRCS \\\n$NPS_SRCS\"\n\n# Make pagespeed run immediately before gzip and Brotli.\nif echo $HTTP_FILTER_MODULES | grep ngx_http_brotli_filter_module >/dev/null; then\n  next=ngx_http_brotli_filter_module\nelif [ $HTTP_GZIP = YES ]; then\n  next=ngx_http_gzip_filter_module\nelse\n  next=ngx_http_range_header_filter_module\nfi\n\nif [ -n \"$ngx_module_link\" ]; then\n  # nginx-1.9.11+\n  ngx_module_type=HTTP_FILTER\n  ngx_module_name=\"ngx_pagespeed ngx_pagespeed_etag_filter\"\n  ngx_module_incs=\"$ngx_feature_path\"\n  ngx_module_deps=\n  ngx_module_srcs=\"$NPS_SRCS\"\n  ngx_module_libs=\"$ngx_feature_libs\"\n  ngx_module_order=\"ngx_http_range_header_filter_module\\\n                    ngx_pagespeed_etag_filter\\\n                    ngx_http_gzip_filter_module \\\n                    ngx_http_brotli_filter_module \\\n                    ngx_pagespeed \\\n                    ngx_http_postpone_filter_module \\\n                    ngx_http_ssi_filter_module \\\n                    ngx_http_charset_filter_module \\\n                    ngx_http_xslt_filter_module \\\n                    ngx_http_image_filter_module \\\n                    ngx_http_sub_filter_module \\\n                    ngx_http_addition_filter_module \\\n                    ngx_http_gunzip_filter_module \\\n                    ngx_http_userid_filter_module \\\n                    ngx_http_headers_filter_module\"\n\n    . auto/module\n\n    if [ $ngx_module_link != DYNAMIC ]; then\n      # ngx_module_order doesn't work with static modules,\n      # so we must re-order filters here.\n      if [ \"$position_aux\" = \"true\" ] ; then\n        HTTP_AUX_FILTER_MODULES=\"$HTTP_AUX_FILTER_MODULES $ngx_addon_name\"\n      else\n        HTTP_FILTER_MODULES=$(echo $HTTP_FILTER_MODULES \\\n                             | sed \"s/ngx_pagespeed//\" \\\n                             | sed \"s/$next/$next ngx_pagespeed/\")\n      fi\n      # Make the etag header filter run immediately before range header filter.\n      HTTP_FILTER_MODULES=$(echo $HTTP_FILTER_MODULES \\\n                           | sed \"s/ngx_pagespeed_etag_filter//\" \\\n                           | sed \"s/ngx_http_range_header_filter_module/ngx_http_range_header_filter_module ngx_pagespeed_etag_filter/\")\n    else\n      if [ \"$position_aux\" = \"true\" ] ; then\n        ngx_module_type=HTTP_AUX_FILTER\n        ngx_module_order=\"\"\n      fi\n    fi\nelse\n  CORE_LIBS=\"$CORE_LIBS $pagespeed_libs\"\n  CORE_INCS=\"$CORE_INCS $pagespeed_include\"\n  NGX_ADDON_SRCS=\"$PS_NGX_SRCS\"\n  if [ \"$position_aux\" = \"true\" ] ; then\n    HTTP_AUX_FILTER_MODULES=\"$HTTP_AUX_FILTER_MODULES $ngx_addon_name\"\n  else\n    HTTP_FILTER_MODULES=$(echo $HTTP_FILTER_MODULES | sed \"s/$next/$next $ngx_addon_name/\")\n  fi\n\n  # Make the etag header filter run immediately before range header filter.\n  HTTP_FILTER_MODULES=$(echo $HTTP_FILTER_MODULES |\\\n    sed \"s/ngx_http_range_header_filter_module/ngx_http_range_header_filter_module ngx_pagespeed_etag_filter/\")\nfi\n\necho \"List of modules (in reverse order of applicability): \"$HTTP_FILTER_MODULES\n\n# Test whether the compiler is compatible\nngx_feature=\"psol-compiler-compat\"\nngx_feature_name=\"\"\nngx_feature_run=no\nngx_feature_incs=\"\"\nngx_feature_path=\"\"\nngx_feature_libs=\"-lstdc++\"\nngx_feature_test=\"\n\n#if defined(__clang__) && defined(__GLIBCXX__)\n   // See https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html#abi.versioning\n   // for a list of various values of __GLIBCXX__. Note that they're not monotonic\n   // with respect to version numbers.\n   #if __GLIBCXX__ == 20120322  || __GLIBCXX__ == 20120614\n      #error \\\"clang is using libstdc++ 4.7.0 or 4.7.1, which can cause binary incompatibility.\\\"\n   #endif\n#endif\n\n#if !defined(__clang__) && defined(__GNUC__)\n   #if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 8)\n      #error \\\"GCC < 4.8 no longer supported. Please use gcc >= 4.8 or clang >= 3.3\\\"\n   #endif\n#endif\n\n#if defined(__clang__)\n   #if __clang_major__ < 3 || (__clang_major__ == 3 && __clang_minor__ < 3)\n      #error \\\"Please use gcc >= 4.8 or clang >= 3.3\\\"\n   #endif\n#endif\n\"\n\n. \"$ngx_addon_dir/cpp_feature\"\n\nif [ $ngx_found = no ]; then\n  cat << END\n$0: error: module ngx_pagespeed requires gcc >= 4.8 or clang >= 3.3.\nSee https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source for some recommendations.\nLook in $PWD/$NGX_AUTOCONF_ERR for more details.\nEND\n  exit 1\nfi\n\nhave=NGX_PAGESPEED . auto/have\n\nCC_TEST_FLAGS=\"$CC_OLD_TEST_FLAGS\"\n"
        },
        {
          "name": "config.make",
          "type": "blob",
          "size": 1.1552734375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n# \n#   http://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Since nginx build system doesn't normally do C++, there is no CXXFLAGS for us\n# to touch, and compilers are understandably unhappy with --std=c++11 on C\n# files. Hence, we hack the makefile to add it for just our sources.\n\nfor ps_src_file in $PS_NGX_SRCS; do\n  ps_obj_file=\"$NGX_OBJS/addon/src/`basename $ps_src_file .cc`.o\"\n  echo \"$ps_obj_file : CFLAGS += --std=c++11\" >> $NGX_MAKEFILE\ndone\n"
        },
        {
          "name": "cpp_feature",
          "type": "blob",
          "size": 2.8134765625,
          "content": "# Copyright (C) Igor Sysoev\n# Copyright (C) Nginx, Inc.\n# 2012-10-01 Modified from auto/feature by jefftk to support c++ test files.\n\necho $ngx_n \"checking for $ngx_feature ...$ngx_c\"\n\ncat << END >> $NGX_AUTOCONF_ERR\n\n----------------------------------------\nchecking for $ngx_feature\n\nEND\n\nngx_found=no\n\nif test -n \"$ngx_feature_name\"; then\n    ngx_have_feature=`echo $ngx_feature_name \\\n                   | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`\nfi\n\nif test -n \"$ngx_feature_path\"; then\n    for ngx_temp in $ngx_feature_path; do\n        ngx_feature_inc_path=\"$ngx_feature_inc_path -I $ngx_temp\"\n    done\nfi\n\ncat << END > $NGX_AUTOTEST.cc\n\n#include <sys/types.h>\n$NGX_INCLUDE_UNISTD_H\n$ngx_feature_incs\n\nint main() {\n    $ngx_feature_test;\n    return 0;\n}\n\nEND\n\n\nngx_test=\"$CC $CC_TEST_FLAGS $CC_AUX_FLAGS $ngx_feature_inc_path \\\n          -o $NGX_AUTOTEST $NGX_AUTOTEST.cc $NGX_TEST_LD_OPT $ngx_feature_libs\"\n\nngx_feature_inc_path=\n\neval \"/bin/sh -c \\\"$ngx_test\\\" >> $NGX_AUTOCONF_ERR 2>&1\"\n\n\nif [ -x $NGX_AUTOTEST ]; then\n\n    case \"$ngx_feature_run\" in\n\n        yes)\n            # /bin/sh is used to intercept \"Killed\" or \"Abort trap\" messages\n            if /bin/sh -c $NGX_AUTOTEST >> $NGX_AUTOCONF_ERR 2>&1; then\n                echo \" found\"\n                ngx_found=yes\n\n                if test -n \"$ngx_feature_name\"; then\n                    have=$ngx_have_feature . auto/have\n                fi\n\n            else\n                echo \" found but is not working\"\n            fi\n        ;;\n\n        value)\n            # /bin/sh is used to intercept \"Killed\" or \"Abort trap\" messages\n            if /bin/sh -c $NGX_AUTOTEST >> $NGX_AUTOCONF_ERR 2>&1; then\n                echo \" found\"\n                ngx_found=yes\n\n                cat << END >> $NGX_AUTO_CONFIG_H\n\n#ifndef $ngx_feature_name\n#define $ngx_feature_name  `$NGX_AUTOTEST`\n#endif\n\nEND\n            else\n                echo \" found but is not working\"\n            fi\n        ;;\n\n        bug)\n            # /bin/sh is used to intercept \"Killed\" or \"Abort trap\" messages\n            if /bin/sh -c $NGX_AUTOTEST >> $NGX_AUTOCONF_ERR 2>&1; then\n                echo \" not found\"\n\n            else\n                echo \" found\"\n                ngx_found=yes\n\n                if test -n \"$ngx_feature_name\"; then\n                    have=$ngx_have_feature . auto/have\n                fi\n            fi\n        ;;\n\n        *)\n            echo \" found\"\n            ngx_found=yes\n\n            if test -n \"$ngx_feature_name\"; then\n                have=$ngx_have_feature . auto/have\n            fi\n        ;;\n\n    esac\n\nelse\n    echo \" not found\"\n\n    echo \"----------\"    >> $NGX_AUTOCONF_ERR\n    cat $NGX_AUTOTEST.cc >> $NGX_AUTOCONF_ERR\n    echo \"----------\"    >> $NGX_AUTOCONF_ERR\n    echo $ngx_test       >> $NGX_AUTOCONF_ERR\n    echo \"----------\"    >> $NGX_AUTOCONF_ERR\nfi\n\nrm $NGX_AUTOTEST*\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-dependencies",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}