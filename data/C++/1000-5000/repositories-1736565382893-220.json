{
  "metadata": {
    "timestamp": 1736565382893,
    "page": 220,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "YosysHQ/yosys",
      "stars": 3591,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.2705078125,
          "content": "# Default Linux style\nBasedOnStyle: LLVM\nIndentWidth: 8\nUseTab: Always\nBreakBeforeBraces: Linux\nAllowShortIfStatementsOnASingleLine: false\nIndentCaseLabels: false\n\n# From guidelines/CodingStyle\nTabWidth: 8\nContinuationIndentWidth: 2\nColumnLimit: 150\n# BreakBeforeBraces: Linux\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1318359375,
          "content": ".editorconfig\r\n.gitignore\r\n.gitmodules\r\n.github\r\n.git\r\nDockerfile\r\nREADME.md\r\nmanual\r\nguidelines\r\nCodeOfConduct\r\n.travis\r\n.travis.yml\r\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.234375,
          "content": "root = true\n\n[*]\nindent_style = tab\nindent_size = tab\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[abc/**]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0537109375,
          "content": "*.v linguist-language=Verilog\n/.gitcommit export-subst\n"
        },
        {
          "name": ".gitcommit",
          "type": "blob",
          "size": 0.01171875,
          "content": "$Format:%H$\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7001953125,
          "content": "*.o\n*.d\n*.dwo\n.*.swp\n*.gch\n*.gcda\n*.gcno\n*~\n__pycache__\n/.cproject\n/.project\n/.settings\n/qtcreator.files\n/qtcreator.includes\n/qtcreator.config\n/qtcreator.creator\n/qtcreator.creator.user\n/coverage.info\n/coverage_html\n/Makefile.conf\n/viz.js\n/yosys\n/yosys.exe\n/yosys.js\n/yosys.wasm\n/yosys-abc\n/yosys-abc.exe\n/yosys-config\n/yosys-smtbmc\n/yosys-smtbmc.exe\n/yosys-smtbmc-script.py\n/yosys-witness\n/yosys-witness.exe\n/yosys-witness-script.py\n/yosys-filterlib\n/yosys-filterlib.exe\n/kernel/*.pyh\n/kernel/python_wrappers.cc\n/kernel/version_*.cc\n/share\n/yosys-win32-mxebin-*\n/yosys-win32-vcxsrc-*\n/yosysjs-*\n/libyosys.so\n/tests/unit/bintest/\n/tests/unit/objtest/\n/tests/ystests\n/result\n/dist\n/*.egg-info\n/build\n/venv\n/boost\n/ffi\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.20703125,
          "content": "[submodule \"abc\"]\n\tpath = abc\n\turl = https://github.com/YosysHQ/abc\n# Don't use paths as names to avoid git archive problems\n[submodule \"cxxopts\"]\n\tpath = libs/cxxopts\n\turl = https://github.com/jarro2783/cxxopts\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.4091796875,
          "content": "Marcelina Kościelnicka <mwk@0x04.net>\nMarcelina Kościelnicka <mwk@0x04.net> <koriakin@0x04.net>\nMarcelina Kościelnicka <mwk@0x04.net> <marcin@symbioticeda.com>\nClaire Xenia Wolf <claire@yosyshq.com> <claire@clairexen.net>\nClaire Xenia Wolf <claire@yosyshq.com> <claire@symbioticeda.com>\nClaire Xenia Wolf <claire@yosyshq.com> <clifford@symbioticeda.com>\nClaire Xenia Wolf <claire@yosyshq.com> <clifford@clifford.at>\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.3203125,
          "content": "# .readthedocs.yaml\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nbuild:\n    os: ubuntu-22.04\n    tools:\n        python: '3.12'\n\nformats:\n  - pdf\n\nsphinx:\n  configuration: docs/source/conf.py\n  fail_on_warning: true\n\npython:\n  install:\n    - requirements: docs/source/requirements.txt\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.1884765625,
          "content": "brew \"bison\"\nbrew \"flex\"\nbrew \"gawk\"\nbrew \"libffi\"\nbrew \"git\"\nbrew \"graphviz\"\nbrew \"pkg-config\"\nbrew \"python3\"\nbrew \"tcl-tk\"\nbrew \"xdot\"\nbrew \"bash\"\nbrew \"boost-python3\"\nbrew \"llvm\"\nbrew \"lld\"\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 58.6455078125,
          "content": "\nList of major changes and improvements between releases\n=======================================================\n\nYosys 0.48 .. Yosys 0.49-dev\n--------------------------\n\nYosys 0.47 .. Yosys 0.48\n--------------------------\n * Various\n    - Removed \"read_ilang\" deprecated pass.\n    - Enhanced boxing features in the experimental \"abc_new\" command.\n    - Added new Tcl methods for design inspection.\n    - Added clock enable inference to \"dfflibmap\".\n    - Added a Han-Carlson and Sklansky option for $lcu mapping.\n\n * New commands and options\n    - Added \"-nopeepopt\" option to \"clk2fflogic\" pass.\n    - Added \"-liberty\" and \"-dont_use\" options to \"clockgate\" pass.\n    - Added \"-ignore_buses\" option to \"read_liberty\" pass.\n    - Added \"-dont_map\" option to \"techmap\" pass.\n    - Added \"-selected\" option to \"write_json\" pass.\n    - Added \"wrapcell\" command for creating wrapper modules\n      around selected cells.\n    - Added \"portarcs\" command for deriving propagation timing arcs.\n    - Added \"setenv\" command for setting environment variables.\n\n * Gowin support\n    - Added \"-family\" option to \"synth_gowin\" pass.\n    - Cell definitions split by family. \n\n * Verific support\n    - Improved blackbox support.\n\nYosys 0.46 .. Yosys 0.47\n--------------------------\n * Various\n    - Added cxxopts library for handling command line arguments.\n    - Added docs generation from cells help output.\n\n * New commands and options\n    - Added \"-json\" option to \"synth_xilinx\" pass.\n    - Added \"-derive_luts\" option to \"cellmatch\" pass.\n    - Added \"t:@<name>\" syntax to \"select\" pass.\n    - Added \"-list-mod\" option to \"select\" pass.\n    - Removed deprecated \"qwp\" pass.\n\n * Verific support\n    - Initial state handling for VHDL assertions.\n\nYosys 0.45 .. Yosys 0.46\n--------------------------\n * Various\n    - Added new \"functional backend\" infrastructure with three example\n      backends (C++, SMTLIB and Rosette).\n    - Added new coarse-grain buffer cell type \"$buf\" to RTLIL.\n    - Added \"-y\" command line option to execute a Python script with \n      libyosys available as a built-in module.\n    - Added support for casting to type in Verilog frontend.\n\n * New commands and options\n    - Added \"clockgate\" pass for automatic clock gating cell insertion.\n    - Added \"bufnorm\" experimental pass to convert design into\n      buffered-normalized form.\n    - Added experimental \"aiger2\" and \"xaiger2\" backends, and an \n      experimental \"abc_new\" command\n    - Added \"-force-detailed-loop-check\" option to \"check\" pass.\n    - Added \"-unit_delay\" option to \"read_liberty\" pass.\n\n * Verific support\n    - Added left and right bound properties to wires when using\n      specific VHDL types.\n\nYosys 0.44 .. Yosys 0.45\n--------------------------\n * Various\n    - Added cell types help messages.\n\n * New back-ends\n    - Added initial NG-Ultra support. ( synth_nanoxplore )\n\nYosys 0.43 .. Yosys 0.44\n--------------------------\n * Various\n    - Added ENABLE_LTO compile option to enable link time\n      optimizations.\n    - Build support for Haiku OS.\n\n * New commands and options\n    - Added \"keep_hierarchy\" pass to add attribute with \n      same name to modules based on cost.\n    - Added options \"-noopt\",\"-bloat\" and \"-check_cost\" to\n      \"test_cell\" pass. \n\n * New back-ends\n    - Added initial PolarFire support. ( synth_microchip )\n\nYosys 0.42 .. Yosys 0.43\n--------------------------\n * Various\n    - C++ compiler with C++17 support is required.\n    - Support for IO liberty files for verification.\n    - Limit padding from shiftadd for \"peepopt\" pass.\n\n * Verific support\n    - Support building Yosys with various Verific library\n      configurations. Can be built now without YosysHQ \n      specific patch and extension library.\n\nYosys 0.41 .. Yosys 0.42\n--------------------------\n * New commands and options\n    - Added \"box_derive\" pass to derive box modules.\n    - Added option \"assert-mod-count\" to \"select\" pass. \n    - Added option \"-header\",\"-push\" and \"-pop\" to \"log\" pass. \n * Intel support\n    - Dropped Quartus support in \"synth_intel_alm\" pass.\n\nYosys 0.40 .. Yosys 0.41\n--------------------------\n * New commands and options\n    - Added \"cellmatch\" pass for picking out standard cells automatically. \n\n * Various\n    - Extended the experimental incremental JSON API to allow arbitrary\n      smtlib subexpressions.\n    - Added support for using ABCs library merging when providing multiple\n      liberty files.\n\n * Verific support\n    - Expose library name as module attribute.\n\nYosys 0.39 .. Yosys 0.40\n--------------------------\n * New commands and options\n    - Added option \"-vhdl2019\" to \"read\" and \"verific\" pass. \n\n * Various\n    - Major documentation overhaul.\n    - Added port statistics to \"stat\" command.\n    - Added new formatting features to cxxrtl backend.\n\n * Verific support\n    - Added better support for VHDL constants import.\n    - Added support for VHDL 2009.\n\nYosys 0.38 .. Yosys 0.39\n--------------------------\n * New commands and options\n    - Added option \"-extra-map\" to \"synth\" pass. \n    - Added option \"-dont_use\" to \"dfflibmap\" pass.\n    - Added option \"-href\" to \"show\" command.\n    - Added option \"-noscopeinfo\" to \"flatten\" pass.\n    - Added option \"-scopename\" to \"flatten\" pass.\n\n * SystemVerilog\n    - Added support for packed multidimensional arrays.\n\n * Various\n    - Added \"$scopeinfo\" cells to preserve information about\n      the hierarchy during flattening.\n    - Added sequential area output to \"stat -liberty\".\n    - Added ability to record/replay diagnostics in cxxrtl backend.\n \n * Verific support\n    - Added attributes to module instantiation.\n\nYosys 0.37 .. Yosys 0.38\n--------------------------\n * New commands and options\n    - Added option \"-tech\" to \"opt_lut\" pass.\n    - Added option \"-nokeep_prints\" to \"hierarchy\" pass.\n    - Added option \"-nolower\" to \"async2sync\" and \"clk2fflogic\" pass.\n    - Added option \"-lower\" to \"chformal\" pass.\n\n * Various\n    - Added $check cell to represent assertions with messages.\n    - Allow capturing $print cell output in CXXRTL.\n    - Added API to overwrite existing pass from plugin.\n    - Follow the XDG Base Directory Specification for storing history files.\n    - Without a known top module, derive all deferred modules (hierarchy pass).\n    - Detect and error out on combinational loops in write_aiger.\n\n * Verific support\n    - Added option \"-no-split-complex-ports\" to \"verific -import\".\n\nYosys 0.36 .. Yosys 0.37\n--------------------------\n * New commands and options\n    - Added option \"-nodisplay\" to read_verilog.\n\n * SystemVerilog\n    - Correct hierarchical path names for structs and unions.\n\n * Various\n    - Print hierarchy for failed assertions in \"sim\" pass.\n    - Add \"--present-only\" option to \"yosys-witness\" to omit unused signals.\n    - Implement a generic record/replay interface for CXXRTL.\n    - Improved readability of emitted code with \"write_verilog\".\n\nYosys 0.35 .. Yosys 0.36\n--------------------------\n * New commands and options\n    - Added option \"--\" to pass arguments down to tcl when using -c option.\n    - Added ability on MacOS and Windows to pass options after arguments on cli.\n    - Added option \"-cmp2softlogic\" to synth_lattice.\n    - Added option \"-lowpower\" to \"booth\" pass.\n\n * QuickLogic support\n    - Added \"K6N10f\" support.\n    - Added \"-nodsp\", \"-nocarry\", \"-nobram\" and \"-bramtypes\" options to \n      \"synth_quicklogic\" pass.\n    - Added \"ql_bram_merge\" pass to merge 18K BRAM cells into TDP36K.\n    - Added \"ql_bram_types\" pass to change TDP36K depending on configuration.\n    - Added \"ql_dsp_io_regs\" pass to update QL_DSP2 depending on configuration.\n    - Added \"ql_dsp_macc\" pass to infer multiplier-accumulator DSP cells.\n    - Added \"ql_dsp_simd\" pass to merge DSP pairs to operate in SIMD mode.\n\n * ECP5,iCE40 and Gowin support\n    - Enabled abc9 by default, added \"-noabc9\" option to disable.\n\n * MachXO3 support\n    - Quality of results improvements.\n    - Enabled \"booth\" pass by default for it in \"synth_lattice\".\n\n * Various\n    - Improved \"peepopt\" by adding shiftadd pattern support.\n    - Added \"--incremental\" mode to smtbmc.\n\nYosys 0.34 .. Yosys 0.35\n--------------------------\n * Various\n    - Improvements on \"peepopt\" shiftmul matcher.\n    - Improvements on \"ram_style\" attributes handling.\n\n * Verific support\n    - Improved static elaboration for VHDL and mixed HDL designs.\n    - Expose \"hdlname\" attribute with original module name.\n    - Expose \"architecture\" attribute with VHDL architecture name.\n\nYosys 0.33 .. Yosys 0.34\n--------------------------\n * New commands and options\n    - Added option \"-assert\" to \"sim\" pass.\n    - Added option \"-noinitstate\" to \"sim\" pass.\n    - Added option \"-dont_use\" to \"abc\" pass.\n    - Added \"dft_tag\" pass to create tagging logic for data flow tracking.\n    - Added \"future\" pass to resolve future sampled value functions.\n    - Added \"booth\" pass to map $mul cells to Booth multipliers.\n    - Added option \"-booth\" to \"synth\" pass.\n\n * SystemVerilog\n    - Added support for assignments within expressions, e.g., `x[y++] = z;` or\n      `x = (y *= 2) - 1;`.\n\n * Verific support\n    - \"src\" attribute contain full location info.\n    - module parameters are kept after import.\n    - accurate access order semantics in memory inference.\n    - better \"bind\" support for mixed language projects.\n\n * Various\n    - \"show\" command displays dot instead of box for wire aliases.\n\nYosys 0.32 .. Yosys 0.33\n--------------------------\n * Various\n    - Added \"$print\" cell, produced by \"$display\" and \"$write\"\n      Verilog tasks.\n    - Added \"$print\" cell handling in CXXRTL.\n\n * Lattice FPGA support\n    - Added generic \"synth_lattice\" pass (for now MachXO2/XO3/XO3D)\n    - Removed \"synth_machxo2\" pass\n    - Pass \"ecp5_gsr\" renamed to \"lattice_gsr\"\n    - \"synth_machxo2\" equivalent is \"synth_lattice -family xo2\"\n\nYosys 0.31 .. Yosys 0.32\n--------------------------\n * Verific support\n    - Added sub option \"-lib\" to reading commands for VHDL and\n      SystemVerilog, that will later import all units/modules from\n      marked files as blackboxes.\n\n * Various\n    - Added support for $lt, $le, $gt, $ge to the code generating AIGs.\n\nYosys 0.30 .. Yosys 0.31\n--------------------------\n * New commands and options\n    - Added option \"-lsbidx\" to \"write_edif\" pass.\n\n * Various\n    - Added support for $divfloor operator to cxxrtl backend.\n    - dfflegalize: allow setting mince and minsrst args from scratchpad.\n\nYosys 0.29 .. Yosys 0.30\n--------------------------\n * New commands and options\n    - Added \"recover_names\" pass to recover names post-mapping.\n\n * Gowin support\n    - Added remaining primitives blackboxes.\n\n * Various\n    - \"show -colorattr\" will now color the cells, wires, and \n      connection arrows.\n    - \"show -viewer none\" will not execute viewer.\n\nYosys 0.28 .. Yosys 0.29\n--------------------------\n * New commands and options\n    - Added \"synthprop\" pass for synthesizable properties.\n\n * Verific support\n    - Handle conditions on clocked concurrent assertions in unclocked\n      procedural contexts.\n\n * Verilog\n    - Fix const eval of unbased unsized constants.\n    - Handling of attributes for struct / union variables.\n\nYosys 0.27 .. Yosys 0.28\n--------------------------\n * Verilog\n    - Out of bounds checking for struct/union members.\n\n * Verific support\n    - Fix enum_values support and signed attribute values.\n\n * ECP5 support\n    - Added \"synth_ecp5 -iopad\"\n\n * MachXO2 support\n    - Added \"synth_machxo2 -ccu2\"\n\nYosys 0.26 .. Yosys 0.27\n--------------------------\n * New commands and options\n    - Added option \"-make_assert\" to \"equiv_make\" pass.\n    - Added option \"-coverenable\" to \"chformal\" pass.\n\n * Verilog\n    - Resolve package types in interfaces.\n    - Handle range offsets in packed arrays within packed structs.\n    - Support for data and array queries on struct/union item expressions.\n\n * GateMate support\n    - Enable register initialization.\n\nYosys 0.25 .. Yosys 0.26\n--------------------------\n * New commands and options\n    - Added \"bwmuxmap\" pass to replace $bwmux cells with equivalent logic.\n    - Added \"xprop\" experimental pass for formal x propagation.\n    - Added \"splitcells\" pass to split up multi-bit cells.\n    - Added \"viz\" pass to visualize data flow graph.\n    - Added option \"-make_cover\" to \"miter\" pass.\n    - Added option \"-noparallelcase\" to \"write_verilog\" pass.\n    - Added option \"-chain\" to \"insbuf\" pass.\n    - Added options \"-hierarchy\" and \"-assume\" to \"formalff\" pass.\n    - Added options \"-append\" and \"-summary\" to \"sim\" pass.\n    - Added option \"-ywmap\" to \"write_btor\" pass.\n    - Added option \"-ignore-self-reset\" to \"fsm_detect\" pass.\n\n * Verilog\n    - Support for struct members of union type.\n    - Support for struct member package types.\n\n * Various\n    - Added Yosys witness (.yw) cosimulation.\n    - GCC 4.8 is deprecated, compiler with full C++11 support is required.\n\nYosys 0.24 .. Yosys 0.25\n--------------------------\n * Verific support\n    - Respect \"noblackbox\" attribute for modules.\n\n * Various\n    - Documentation is hosted at https://yosyshq.readthedocs.io/projects/yosys/en/latest/\n\nYosys 0.23 .. Yosys 0.24\n--------------------------\n * New commands and options\n    - Added option \"-set-def-formal\" to \"sat\" pass.\n    - Added option \"-s\" to \"tee\" command.\n\n * Verilog\n    - Support for module-scoped identifiers referring to tasks and functions.\n    - Support for arrays with swapped ranges within structs.\n\n * Verific support\n    - Support for importing verilog configurations per name.\n    - \"verific -set-XXXXX\" commands are now able to set severity to all messages\n      of certain type (errors, warnings, infos and comments)\n\n * Various\n    - TCL shell support (use \"yosys -C\")\n    - Added FABulous eFPGA frontend\n\nYosys 0.22 .. Yosys 0.23\n--------------------------\n * New commands and options\n    - Added option \"-cross\" to \"miter\" pass.\n    - Added option \"-nocheck\" to \"equiv_opt\" pass.\n\n * Formal Verification\n    - yosys-smtbmc: Added \"--detect-loops\" option for checking if states are\n      unique in temporal induction counter examples.\n\n * Verific support\n    - Added support for reading Liberty files using Verific library.\n      (Optinally enabled with ENABLE_VERIFIC_LIBERTY)\n    - Added option \"-cells\" to \"verific -import\" enabling import of\n      all cells from verific design.\n\n * Various\n    - MinGW build (Windows) plugin support.\n    - Added YOSYS_ABORT_ON_LOG_ERROR environment variable for debugging.\n      Setting it to 1 causes abort() to be called when Yosys terminates with an\n      error message.\n\nYosys 0.21 .. Yosys 0.22\n--------------------------\n * Verific support\n    - Added support for here-document for \"verific\" command (for reading\n      source files).\n    - Added support for reading EDIF files using Verific library.\n      (Optinally enabled with ENABLE_VERIFIC_EDIF)\n\n * Various\n    - Added tech specific utilization to \"stat\" json.\n\nYosys 0.20 .. Yosys 0.21\n--------------------------\n * New commands and options\n    - Added \"formalff\" pass - transforms FFs for formal verification\n    - Added option \"-formal\" to \"memory_map\" pass\n    - Added option \"-witness\" to \"rename\" - give public names to all signals\n      present in yosys witness traces\n    - Added option \"-hdlname\" to \"sim\" pass - preserves hiearachy when writing\n      simulation output for a flattened design\n    - Addded option \"-scramble-name\" to \"rename\" pass\n\n * Formal Verification\n    - Added $anyinit cell to directly represent FFs with an unconstrained\n      initialization value. These can be generated by the new formalff pass.\n    - New JSON based yosys witness format for formal verification traces.\n    - yosys-smtbmc: Reading and writing of yosys witness traces.\n    - write_smt2: Emit inline metadata to support yosys witness trace.\n    - yosys-witness is a new tool to inspect and convert yosys witness traces.\n    - write_aiger: Option to write a map file for yosys witness trace\n      conversion.\n    - yosys-witness: Conversion from and to AIGER witness traces.\n\n * Verific support\n    - Filename re-writing support for \"verific\" pass.\n\n * Various\n    - ABC performance improvements\n    - Filename re-writing added for \"show -lib\".\n\n * SmartFusion2 support\n    - Added $alu support\n    - Added SYSRESET and XTLOSC cells\n    - Compatible now with LiberoSoc flow\n\nYosys 0.19 .. Yosys 0.20\n--------------------------\n * New commands and options\n    - Added option \"-wb\" to \"read_liberty\" pass\n\n * Various\n    - Added support for $modfloor operator to cxxrtl backend\n    - Support build on OpenBSD\n    - Fixed smt2 backend use of $shift/$shiftx with negative shift amounts,\n      which affects bit/part-select assignments with a dynamic index. Shift\n      operators were not affected.\n\n * Verific support\n    - Proper import of port ranges into Yosys, may result in reversed \n      bit-order of top-level ports for some synthesis flows.\n\nYosys 0.18 .. Yosys 0.19\n--------------------------\n * New commands and options\n    - Added option \"-rom-only\" to \"memory_libmap\" pass\n    - Added option \"-smtcheck\" to \"hierarchy\" pass\n    - Added option \"-keepdc\" to \"memory_libmap\" pass\n    - Added option \"-suffix\" to \"rename\" pass\n    - Added \"gatemate_foldinv\" pass\n\n * Formal Verification\n    - Added support for $pos cell in btor backend\n    - Added the \"smtlib2_module\" and \"smtlib2_comb_expr\" attributes\n\n * GateMate support\n    - Added LUT tree mapping\n\n * Verific support\n    - Added option \"-pp\" to \"verific -import\"\n\nYosys 0.17 .. Yosys 0.18\n--------------------------\n * Various\n    - Migrated most flows to use memory_libmap based memory inference\n\n * New commands and options\n    - Added \"memory_libmap\" pass\n    - Added \"memory_bmux2rom\" pass - converts muxes to ROMs\n    - Added \"memory_dff -no-rw-check\"\n    - Added \"opt_ffinv\" pass - push inverters through FFs\n    - Added \"proc_rom\" pass - convert switches to ROMs\n    - Added \"proc -norom\" option - will omit the proc_rom pass\n    - Added option \"-no-rw-check\" to synth passes\n    - Added \"synth_ice40 -spram\" option for automatic inference of SB_SPRAM256KA\n    - Added options \"-nobram\" and \"-nolutram\" to synth_machxo2 pass\n\n * Formal Verification\n    - Fixed the signedness of $past's return value to be the same as the\n      argument's instead of always unsigned.\n\n * Verilog\n    - Fixed an issue where simplifying case statements by removing unreachable\n      cases could result in the wrong signedness being used for comparison with\n      the remaining cases\n    - Fixed size and signedness computation for expressions containing array\n      querying functions\n    - Fixed size and signedness computation of functions used in ternary\n      expressions or case item expressions\n\n * Verific support\n    - Proper file location for readmem commands\n    - Added \"-vlog-libext\" option to specify search extension for libraries\n\nYosys 0.16 .. Yosys 0.17\n--------------------------\n * New commands and options\n    - Added \"write_jny\" ( JSON netlist metadata format )\n    - Added \"tribuf -formal\"\n\n * SystemVerilog\n    - Fixed automatic `nosync` inference for local variables in `always_comb`\n      procedures not applying to nested blocks and blocks in functions\n\nYosys 0.15 .. Yosys 0.16\n--------------------------\n * Various\n    - Added BTOR2 witness file co-simulation.\n    - Simulation calls external vcd2fst for VCD conversion.\n    - Added fst2tb pass - generates testbench for the circuit using\n      the given top-level module and simulus signal from FST file.\n    - yosys-smtbmc: Option to keep going after failed assertions in BMC mode\n\n * Verific support\n    - Import modules in alphabetic (reproducable) order.\n\nYosys 0.14 .. Yosys 0.15\n--------------------------\n\n * Various\n    - clk2fflogic: nice names for autogenerated signals\n    - simulation include support for all flip-flop types.\n    - Added AIGER witness file co-simulation.\n\n * Verilog\n    - Fixed evaluation of constant functions with variables or arguments with\n      reversed dimensions\n    - Fixed elaboration of dynamic range assignments where the vector is\n      reversed or is not zero-indexed\n    - Added frontend support for time scale delay values (e.g., `#1ns`)\n\n * SystemVerilog\n    - Added support for accessing whole sub-structures in expressions\n \n * New commands and options\n    - Added glift command, used to create gate-level information flow tracking\n      (GLIFT) models by the \"constructive mapping\" approach\n\n * Verific support\n    - Ability to override default parser mode for verific -f command.\n\nYosys 0.13 .. Yosys 0.14\n--------------------------\n\n * Various\n    - Added $bmux and $demux cells and related optimization patterns.\n\n * New commands and options\n    - Added \"bmuxmap\" and \"dmuxmap\" passes \n    - Added \"-fst\" option to \"sim\" pass for writing FST files\n    - Added \"-r\", \"-scope\", \"-start\", \"-stop\", \"-at\", \"-sim\", \"-sim-gate\",\n      \"-sim-gold\" options to \"sim\" pass for co-simulation\n\n * Anlogic support\n    - Added support for BRAMs\n\nYosys 0.12 .. Yosys 0.13\n--------------------------\n\n * Various\n    - Use \"read\" command to parse HDL files from Yosys command-line\n    - Added \"yosys -r <topmodule>\" command line option\n    - write_verilog: dump zero width sigspecs correctly\n\n * SystemVerilog\n    - Fixed regression preventing the use array querying functions in case\n      expressions and case item expressions\n    - Fixed static size casts inadvertently limiting the result width of binary\n      operations\n    - Fixed static size casts ignoring expression signedness\n    - Fixed static size casts not extending unbased unsized literals\n    - Added automatic `nosync` inference for local variables in `always_comb`\n      procedures which are always assigned before they are used to avoid errant\n      latch inference\n\n * New commands and options\n    - Added \"clean_zerowidth\" pass\n\n * Verific support\n    - Add YOSYS to the implicitly defined verilog macros in verific\n\nYosys 0.11 .. Yosys 0.12\n--------------------------\n\n * Various\n    - Added iopadmap native support for negative-polarity output enable\n    - ABC update\n\n * SystemVerilog\n    - Support parameters using struct as a wiretype\n\n * New commands and options\n    - Added \"-genlib\" option to \"abc\" pass\n    - Added \"sta\" very crude static timing analysis pass\n\n * Verific support\n    - Fixed memory block size in import\n\n * New back-ends\n    - Added support for GateMate FPGA from Cologne Chip AG\n\n * Intel ALM support\n    - Added preliminary Arria V support\n\n\nYosys 0.10 .. Yosys 0.11\n--------------------------\n\n * Various\n    - Added $aldff and $aldffe (flip-flops with async load) cells\n\n * SystemVerilog\n    - Fixed an issue which prevented writing directly to a memory word via a\n      connection to an output port\n    - Fixed an issue which prevented unbased unsized literals (e.g., `'1`) from\n      filling the width of a cell input\n    - Fixed an issue where connecting a slice covering the entirety of a signed\n      signal to a cell input would cause a failed assertion\n\n * Verific support\n    - Importer support for {PRIM,WIDE_OPER}_DFF\n    - Importer support for PRIM_BUFIF1\n    - Option to use Verific without VHDL support\n    - Importer support for {PRIM,WIDE_OPER}_DLATCH{,RS}\n    - Added -cfg option for getting/setting Verific runtime flags\n\nYosys 0.9 .. Yosys 0.10\n--------------------------\n\n * Various\n    - Added automatic gzip decompression for frontends\n    - Added $_NMUX_ cell type\n    - Added automatic gzip compression (based on filename extension) for backends\n    - Improve attribute and parameter encoding in JSON to avoid ambiguities between\n      bit vectors and strings containing [01xz]*\n    - Improvements in pmgen: subpattern and recursive matches\n    - Support explicit FIRRTL properties\n    - Improvements in pmgen: slices, choices, define, generate\n    - Added \"_TECHMAP_WIREINIT_*_\" parameter and \"_TECHMAP_REMOVEINIT_*_\" wire for \"techmap\" pass\n    - Added +/mul2dsp.v for decomposing wide multipliers to custom-sized ones\n    - Added new frontend: rpc\n    - Added --version and -version as aliases for -V\n    - Improve yosys-smtbmc \"solver not found\" handling\n    - Improved support of $readmem[hb] Memory Content File inclusion\n    - Added CXXRTL backend\n    - Use YosysHQ/abc instead of upstream berkeley-abc/abc\n    - Added WASI platform support.\n    - Added extmodule support to firrtl backend\n    - Added $divfloor and $modfloor cells\n    - Added $adffe, $dffsre, $sdff, $sdffe, $sdffce, $adlatch cells\n    - Added \"_TECHMAP_CELLNAME_\" parameter for \"techmap\" pass\n    - Added firrtl backend support for generic parameters in blackbox components\n    - Added $meminit_v2 cells (with support for write mask)\n    - Added $mem_v2, $memrd_v2, $memwr_v2, with the following features:\n      - write priority masks, per write/write port pair\n      - transparency and undefined collision behavior masks, per read/write port pair\n      - read port reset and initialization\n      - wide ports (accessing a naturally aligned power-of-two number of memory cells)\n\n * New commands and options\n    - Added \"write_xaiger\" backend\n    - Added \"read_xaiger\"\n    - Added \"abc9\" pass for timing-aware techmapping (experimental, FPGA only)\n    - Added \"synth -abc9\" (experimental)\n    - Added \"script -scriptwire\"\n    - Added \"clkbufmap\" pass\n    - Added \"extractinv\" pass and \"invertible_pin\" attribute\n    - Added \"proc_clean -quiet\"\n    - Added \"proc_prune\" pass\n    - Added \"stat -tech cmos\"\n    - Added \"opt_share\" pass, run as part of \"opt -full\"\n    - Added \"-match-init\" option to \"dff2dffs\" pass\n    - Added \"equiv_opt -multiclock\"\n    - Added \"techmap_autopurge\" support to techmap\n    - Added \"add -mod <modname[s]>\"\n    - Added \"paramap\" pass\n    - Added \"portlist\" command\n    - Added \"check -mapped\"\n    - Added \"check -allow-tbuf\"\n    - Added \"autoname\" pass\n    - Added \"write_verilog -extmem\"\n    - Added \"opt_mem\" pass\n    - Added \"scratchpad\" pass\n    - Added \"fminit\" pass\n    - Added \"opt_lut_ins\" pass\n    - Added \"logger\" pass\n    - Added \"show -nobg\"\n    - Added \"exec\" command\n    - Added \"design -delete\"\n    - Added \"design -push-copy\"\n    - Added \"qbfsat\" command\n    - Added \"select -unset\"\n    - Added \"dfflegalize\" pass\n    - Removed \"opt_expr -clkinv\" option, made it the default\n    - Added \"proc -nomux\n    - Merged \"dffsr2dff\", \"opt_rmdff\", \"dff2dffe\", \"dff2dffs\", \"peepopt.dffmux\" passes into a new \"opt_dff\" pass\n\n * SystemVerilog\n    - Added checking of always block types (always_comb, always_latch and always_ff)\n    - Added support for wildcard port connections (.*)\n    - Added support for enum typedefs\n    - Added support for structs and packed unions.\n    - Allow constant function calls in for loops and generate if and case\n    - Added support for static cast\n    - Added support for logic typed parameters\n    - Fixed generate scoping issues\n    - Added support for real-valued parameters\n    - Allow localparams in constant functions\n    - Module name scope support\n    - Support recursive functions using ternary expressions\n    - Extended support for integer types\n    - Support for parameters without default values\n    - Allow globals in one file to depend on globals in another\n    - Added support for: *=, /=, %=, <<=, >>=, <<<=, >>>=\n    - Added support for parsing the 'bind' construct\n    - support declaration in procedural for initialization\n    - support declaration in generate for initialization\n    - Support wand and wor of data types\n\n * Verific support\n    - Added \"verific -L\"\n    - Add Verific SVA support for \"always\" properties\n    - Add Verific support for SVA nexttime properties\n    - Improve handling of verific primitives in \"verific -import -V\" mode\n    - Import attributes for wires\n    - Support VHDL enums\n    - Added support for command files\n\n * New back-ends\n    - Added initial EFINIX support\n    - Added Intel ALM: alternative synthesis for Intel FPGAs\n    - Added initial Nexus support\n    - Added initial MachXO2 support\n    - Added initial QuickLogic PolarPro 3 support\n\n * ECP5 support\n    - Renamed labels/options in synth_ecp5 (e.g. dram -> map_lutram; -nodram -> -nolutram)\n    - Added \"synth_ecp5 -abc9\" (experimental)\n    - Added \"synth_ecp5 -nowidelut\"\n    - \"synth_ecp5\" to now infer DSP blocks (-nodsp to disable, experimental)\n\n * iCE40 support\n    - Added \"synth_ice40 -abc9\" (experimental)\n    - Added \"synth_ice40 -device\"\n    - Renamed labels/options in synth_ice40 (e.g. dram -> map_lutram; -nodram -> -nolutram)\n    - Added \"ice40_wrapcarry\" to encapsulate SB_LUT+SB_CARRY pairs for techmapping\n    - Removed \"ice40_unlut\"\n    - Added \"ice40_dsp\" for Lattice iCE40 DSP packing\n    - \"synth_ice40 -dsp\" to infer DSP blocks\n\n * Xilinx support\n    - Added \"synth_xilinx -abc9\" (experimental)\n    - Added \"synth_xilinx -nocarry\"\n    - Added \"synth_xilinx -nowidelut\"\n    - \"synth_xilinx\" to now infer wide multiplexers (-widemux <min> to enable)\n    - Renamed labels/options in synth_xilinx (e.g. dram -> map_lutram; -nodram -> -nolutram)\n    - Added \"synth_xilinx -family xc6s\" for Spartan 6 support (experimental)\n    - Added \"synth_xilinx -ise\" (experimental)\n    - Added \"synth_xilinx -iopad\"\n    - \"synth_xilinx\" now automatically inserts clock buffers (add -noclkbuf to disable)\n    - Added \"xilinx_srl\" for Xilinx shift register extraction\n    - Removed \"shregmap -tech xilinx\" (superseded by \"xilinx_srl\")\n    - Added \"xilinx_dsp\" for Xilinx DSP packing\n    - \"synth_xilinx\" to now infer DSP blocks (-nodsp to disable)\n    - Added latch support to synth_xilinx\n    - Added support for flip-flops with synchronous reset to synth_xilinx\n    - Added support for flip-flops with reset and enable to synth_xilinx\n    - Added \"xilinx_dffopt\" pass\n    - Added \"synth_xilinx -dff\"\n\n * Intel support\n    - Renamed labels in synth_intel (e.g. bram -> map_bram)\n    - synth_intel: cyclone10 -> cyclone10lp, a10gx -> arria10gx\n    - Added \"intel_alm -abc9\" (experimental)\n\n * CoolRunner2 support\n    - Separate and improve buffer cell insertion pass\n    - Use extract_counter to optimize counters\n\nYosys 0.8 .. Yosys 0.9\n----------------------\n\n * Various\n    - Many bugfixes and small improvements\n    - Added support for SystemVerilog interfaces and modports\n    - Added \"write_edif -attrprop\"\n    - Added \"opt_lut\" pass\n    - Added \"gate2lut.v\" techmap rule\n    - Added \"rename -src\"\n    - Added \"equiv_opt\" pass\n    - Added \"flowmap\" LUT mapping pass\n    - Added \"rename -wire\" to rename cells based on the wires they drive\n    - Added \"bugpoint\" for creating minimised testcases\n    - Added \"write_edif -gndvccy\"\n    - \"write_verilog\" to escape Verilog keywords\n    - Fixed sign handling of real constants\n    - \"write_verilog\" to write initial statement for initial flop state\n    - Added pmgen pattern matcher generator\n    - Fixed opt_rmdff handling of $_DFFSR_???_ and $_DLATCHSR_???_\n    - Added \"setundef -params\" to replace undefined cell parameters\n    - Renamed \"yosys -D\" to \"yosys -U\", added \"yosys -D\" to set Verilog defines\n    - Fixed handling of defparam when default_nettype is none\n    - Fixed \"wreduce\" flipflop handling\n    - Fixed FIRRTL to Verilog process instance subfield assignment\n    - Added \"write_verilog -siminit\"\n    - Several fixes and improvements for mem2reg memories\n    - Fixed handling of task output ports in clocked always blocks\n    - Improved handling of and-with-1 and or-with-0 in \"opt_expr\"\n    - Added \"read_aiger\" frontend\n    - Added \"mutate\" pass\n    - Added \"hdlname\" attribute\n    - Added \"rename -output\"\n    - Added \"read_ilang -lib\"\n    - Improved \"proc\" full_case detection and handling\n    - Added \"whitebox\" and \"lib_whitebox\" attributes\n    - Added \"read_verilog -nowb\", \"flatten -wb\" and \"wbflip\"\n    - Added Python bindings and support for Python plug-ins\n    - Added \"pmux2shiftx\"\n    - Added log_debug framework for reduced default verbosity\n    - Improved \"opt_expr\" and \"opt_clean\" handling of (partially) undriven and/or unused wires\n    - Added \"peepopt\" peephole optimisation pass using pmgen\n    - Added approximate support for SystemVerilog \"var\" keyword\n    - Added parsing of \"specify\" blocks into $specrule and $specify[23]\n    - Added support for attributes on parameters and localparams\n    - Added support for parsing attributes on port connections\n    - Added \"wreduce -keepdc\"\n    - Added support for optimising $dffe and $_DFFE_* cells in \"opt_rmdff\"\n    - Added Verilog wand/wor wire type support\n    - Added support for elaboration system tasks\n    - Added \"muxcover -mux{4,8,16}=<cost>\"\n    - Added \"muxcover -dmux=<cost>\"\n    - Added \"muxcover -nopartial\"\n    - Added \"muxpack\" pass\n    - Added \"pmux2shiftx -norange\"\n    - Added support for \"~\" in filename parsing\n    - Added \"read_verilog -pwires\" feature to turn parameters into wires\n    - Fixed sign extension of unsized constants with 'bx and 'bz MSB\n    - Fixed genvar to be a signed type\n    - Added support for attributes on case rules\n    - Added \"upto\" and \"offset\" to JSON frontend and backend\n    - Several liberty file parser improvements\n    - Fixed handling of more complex BRAM patterns\n    - Add \"write_aiger -I -O -B\"\n\n * Formal Verification\n    - Added $changed support to read_verilog\n    - Added \"read_verilog -noassert -noassume -assert-assumes\"\n    - Added btor ops for $mul, $div, $mod and $concat\n    - Added yosys-smtbmc support for btor witnesses\n    - Added \"supercover\" pass\n    - Fixed $global_clock handling vs autowire\n    - Added $dffsr support to \"async2sync\"\n    - Added \"fmcombine\" pass\n    - Added memory init support in \"write_btor\"\n    - Added \"cutpoint\" pass\n    - Changed \"ne\" to \"neq\" in btor2 output\n    - Added support for SVA \"final\" keyword\n    - Added \"fmcombine -initeq -anyeq\"\n    - Added timescale and generated-by header to yosys-smtbmc vcd output\n    - Improved BTOR2 handling of undriven wires\n\n * Verific support\n    - Enabled Verific flags vhdl_support_variable_slice and veri_elaborate_top_level_modules_having_interface_ports\n    - Improved support for asymmetric memories\n    - Added \"verific -chparam\"\n    - Fixed \"verific -extnets\" for more complex situations\n    - Added \"read -verific\" and \"read -noverific\"\n    - Added \"hierarchy -chparam\"\n\n * New back-ends\n    - Added initial Anlogic support\n    - Added initial SmartFusion2 and IGLOO2 support\n\n * ECP5 support\n    - Added \"synth_ecp5 -nowidelut\"\n    - Added BRAM inference support to \"synth_ecp5\"\n    - Added support for transforming Diamond IO and flipflop primitives\n\n * iCE40 support\n    - Added \"ice40_unlut\" pass\n    - Added \"synth_ice40 -relut\"\n    - Added \"synth_ice40 -noabc\"\n    - Added \"synth_ice40 -dffe_min_ce_use\"\n    - Added DSP inference support using pmgen\n    - Added support for initialising BRAM primitives from a file\n    - Added iCE40 Ultra RGB LED driver cells\n\n * Xilinx support\n    - Use \"write_edif -pvector bra\" for Xilinx EDIF files\n    - Fixes for VPR place and route support with \"synth_xilinx\"\n    - Added more cell simulation models\n    - Added \"synth_xilinx -family\"\n    - Added \"stat -tech xilinx\" to estimate logic cell usage\n    - Added \"synth_xilinx -nocarry\"\n    - Added \"synth_xilinx -nowidelut\"\n    - \"synth_xilinx\" to now infer hard shift registers (-nosrl to disable)\n    - Added support for mapping RAM32X1D\n\nYosys 0.7 .. Yosys 0.8\n----------------------\n\n * Various\n    - Many bugfixes and small improvements\n    - Strip debug symbols from installed binary\n    - Replace -ignore_redef with -[no]overwrite in front-ends\n    - Added write_verilog hex dump support, add -nohex option\n    - Added \"write_verilog -decimal\"\n    - Added \"scc -set_attr\"\n    - Added \"verilog_defines\" command\n    - Remember defines from one read_verilog to next\n    - Added support for hierarchical defparam\n    - Added FIRRTL back-end\n    - Improved ABC default scripts\n    - Added \"design -reset-vlog\"\n    - Added \"yosys -W regex\", \"yosys -w regex\", and \"yosys -e regex\"\n    - Added Verilog $rtoi and $itor support\n    - Added \"check -initdrv\"\n    - Added \"read_blif -wideports\"\n    - Added support for SystemVerilog \"++\" and \"--\" operators\n    - Added support for SystemVerilog unique, unique0, and priority case\n    - Added \"write_edif\" options for edif \"flavors\"\n    - Added support for resetall compiler directive\n    - Added simple C beck-end (bitwise combinatorical only atm)\n    - Added $_ANDNOT_ and $_ORNOT_ cell types\n    - Added cell library aliases to \"abc -g\"\n    - Added \"setundef -anyseq\"\n    - Added \"chtype\" command\n    - Added \"design -import\"\n    - Added \"write_table\" command\n    - Added \"read_json\" command\n    - Added \"sim\" command\n    - Added \"extract_fa\" and \"extract_reduce\" commands\n    - Added \"extract_counter\" command\n    - Added \"opt_demorgan\" command\n    - Added support for $size and $bits SystemVerilog functions\n    - Added \"blackbox\" command\n    - Added \"ltp\" command\n    - Added support for editline as replacement for readline\n    - Added warnings for driver-driver conflicts between FFs (and other cells) and constants\n    - Added \"yosys -E\" for creating Makefile dependencies files\n    - Added \"synth -noshare\"\n    - Added \"memory_nordff\"\n    - Added \"setundef -undef -expose -anyconst\"\n    - Added \"expose -input\"\n    - Added specify/specparam parser support (simply ignore them)\n    - Added \"write_blif -inames -iattr\"\n    - Added \"hierarchy -simcheck\"\n    - Added an option to statically link abc into yosys\n    - Added protobuf back-end\n    - Added BLIF parsing support for .conn and .cname\n    - Added read_verilog error checking for reg/wire/logic misuse\n    - Added \"make coverage\" and ENABLE_GCOV build option\n\n * Changes in Yosys APIs\n    - Added ConstEval defaultval feature\n    - Added {get,set}_src_attribute() methods on RTLIL::AttrObject\n    - Added SigSpec::is_fully_ones() and Const::is_fully_ones()\n    - Added log_file_warning() and log_file_error() functions\n\n * Formal Verification\n    - Added \"write_aiger\"\n    - Added \"yosys-smtbmc --aig\"\n    - Added \"always <positive_int>\" to .smtc format\n    - Added $cover cell type and support for cover properties\n    - Added $fair/$live cell type and support for liveness properties\n    - Added smtbmc support for memory vcd dumping\n    - Added \"chformal\" command\n    - Added \"write_smt2 -stbv\" and \"write_smt2 -stdt\"\n    - Fix equiv_simple, old behavior now available with \"equiv_simple -short\"\n    - Change to Yices2 as default SMT solver (it is GPL now)\n    - Added \"yosys-smtbmc --presat\" (now default in SymbiYosys)\n    - Added \"yosys-smtbmc --smtc-init --smtc-top --noinit\"\n    - Added a brand new \"write_btor\" command for BTOR2\n    - Added clk2fflogic memory support and other improvements\n    - Added \"async memory write\" support to write_smt2\n    - Simulate clock toggling in yosys-smtbmc VCD output\n    - Added $allseq/$allconst cells for EA-solving\n    - Make -nordff the default in \"prep\"\n    - Added (* gclk *) attribute\n    - Added \"async2sync\" pass for single-clock designs with async resets\n\n * Verific support\n    - Many improvements in Verific front-end\n    - Added proper handling of concurent SVA properties\n    - Map \"const\" and \"rand const\" to $anyseq/$anyconst\n    - Added \"verific -import -flatten\" and \"verific -import -extnets\"\n    - Added \"verific -vlog-incdir -vlog-define -vlog-libdir\"\n    - Remove PSL support (because PSL has been removed in upstream Verific)\n    - Improve integration with \"hierarchy\" command design elaboration\n    - Added YOSYS_NOVERIFIC for running non-verific test cases with verific bin\n    - Added simpilied \"read\" command that automatically uses verific if available\n    - Added \"verific -set-<severity> <msg_id>..\"\n    - Added \"verific -work <libname>\"\n\n * New back-ends\n    - Added initial Coolrunner-II support\n    - Added initial eASIC support\n    - Added initial ECP5 support\n\n * GreenPAK Support\n    - Added support for GP_DLATCH, GP_SPI, GP_DCMx, GP_COUNTx, etc.\n\n * iCE40 Support\n    - Add \"synth_ice40 -vpr\"\n    - Add \"synth_ice40 -nodffe\"\n    - Add \"synth_ice40 -json\"\n    - Add Support for UltraPlus cells\n\n * MAX10 and Cyclone IV Support\n    - Added initial version of metacommand \"synth_intel\".\n    - Improved write_verilog command to produce VQM netlist for Quartus Prime.\n    - Added support for MAX10 FPGA family synthesis.\n    - Added support for Cyclone IV family synthesis.\n    - Added example of implementation for DE2i-150 board.\n    - Added example of implementation for MAX10 development kit.\n    - Added LFSR example from Asic World.\n    - Added \"dffinit -highlow\" for mapping to Intel primitives\n\n\nYosys 0.6 .. Yosys 0.7\n----------------------\n\n * Various\n    - Added \"yosys -D\" feature\n    - Added support for installed plugins in $(DATDIR)/plugins/\n    - Renamed opt_const to opt_expr\n    - Renamed opt_share to opt_merge\n    - Added \"prep -flatten\" and \"synth -flatten\"\n    - Added \"prep -auto-top\" and \"synth -auto-top\"\n    - Using \"mfs\" and \"lutpack\" in ABC lut mapping\n    - Support for abstract modules in chparam\n    - Cleanup abstract modules at end of \"hierarchy -top\"\n    - Added tristate buffer support to iopadmap\n    - Added opt_expr support for div/mod by power-of-two\n    - Added \"select -assert-min <N> -assert-max <N>\"\n    - Added \"attrmvcp\" pass\n    - Added \"attrmap\" command\n    - Added \"tee +INT -INT\"\n    - Added \"zinit\" pass\n    - Added \"setparam -type\"\n    - Added \"shregmap\" pass\n    - Added \"setundef -init\"\n    - Added \"nlutmap -assert\"\n    - Added $sop cell type and \"abc -sop -I <num> -P <num>\"\n    - Added \"dc2\" to default ABC scripts\n    - Added \"deminout\"\n    - Added \"insbuf\" command\n    - Added \"prep -nomem\"\n    - Added \"opt_rmdff -keepdc\"\n    - Added \"prep -nokeepdc\"\n    - Added initial version of \"synth_gowin\"\n    - Added \"fsm_expand -full\"\n    - Added support for fsm_encoding=\"user\"\n    - Many improvements in GreenPAK4 support\n    - Added black box modules for all Xilinx 7-series lib cells\n    - Added synth_ice40 support for latches via logic loops\n    - Fixed ice40_opt lut unmapping, added \"ice40_opt -unlut\"\n\n * Build System\n    - Added ABCEXTERNAL and ABCURL make variables\n    - Added BINDIR, LIBDIR, and DATDIR make variables\n    - Added PKG_CONFIG make variable\n    - Added SEED make variable (for \"make test\")\n    - Added YOSYS_VER_STR make variable\n    - Updated min GCC requirement to GCC 4.8\n    - Updated required Bison version to Bison 3.x\n\n * Internal APIs\n    - Added ast.h to exported headers\n    - Added ScriptPass helper class for script-like passes\n    - Added CellEdgesDatabase API\n\n * Front-ends and Back-ends\n    - Added filename glob support to all front-ends\n    - Added avail (black-box) module params to ilang format\n    - Added $display %m support\n    - Added support for $stop Verilog system task\n    - Added support for SystemVerilog packages\n    - Fixed procedural assignments to non-unique lvalues, e.g. {y,y} = {a,b}\n    - Added support for \"active high\" and \"active low\" latches in read_blif and write_blif\n    - Use init value \"2\" for all uninitialized FFs in BLIF back-end\n    - Added \"read_blif -sop\"\n    - Added \"write_blif -noalias\"\n    - Added various write_blif options for VTR support\n    - write_json: also write module attributes.\n    - Added \"write_verilog -nodec -nostr -defparam\"\n    - Added \"read_verilog -norestrict -assume-asserts\"\n    - Added support for bus interfaces to \"read_liberty -lib\"\n    - Added liberty parser support for types within cell decls\n    - Added \"write_verilog -renameprefix -v\"\n    - Added \"write_edif -nogndvcc\"\n\n * Formal Verification\n    - Support for hierarchical designs in smt2 back-end\n    - Yosys-smtbmc: Support for hierarchical VCD dumping\n    - Added $initstate cell type and vlog function\n    - Added $anyconst and $anyseq cell types and vlog functions\n    - Added printing of code loc of failed asserts to yosys-smtbmc\n    - Added memory_memx pass, \"memory -memx\", and \"prep -memx\"\n    - Added \"proc_mux -ifx\"\n    - Added \"yosys-smtbmc -g\"\n    - Deprecated \"write_smt2 -regs\" (by default on now)\n    - Made \"write_smt2 -bv -mem\" default, added \"write_smt2 -nobv -nomem\"\n    - Added support for memories to smtio.py\n    - Added \"yosys-smtbmc --dump-vlogtb\"\n    - Added \"yosys-smtbmc --smtc --dump-smtc\"\n    - Added \"yosys-smtbmc --dump-all\"\n    - Added assertpmux command\n    - Added \"yosys-smtbmc --unroll\"\n    - Added $past, $stable, $rose, $fell SVA functions\n    - Added \"yosys-smtbmc --noinfo and --dummy\"\n    - Added \"yosys-smtbmc --noincr\"\n    - Added \"yosys-smtbmc --cex <filename>\"\n    - Added $ff and $_FF_ cell types\n    - Added $global_clock verilog syntax support for creating $ff cells\n    - Added clk2fflogic\n\n\nYosys 0.5 .. Yosys 0.6\n----------------------\n\n * Various\n     - Added Contributor Covenant Code of Conduct\n     - Various improvements in dict<> and pool<>\n     - Added hashlib::mfp and refactored SigMap\n     - Improved support for reals as module parameters\n     - Various improvements in SMT2 back-end\n     - Added \"keep_hierarchy\" attribute\n     - Verilog front-end: define `BLACKBOX in -lib mode\n     - Added API for converting internal cells to AIGs\n     - Added ENABLE_LIBYOSYS Makefile option\n     - Removed \"techmap -share_map\" (use \"-map +/filename\" instead)\n     - Switched all Python scripts to Python 3\n     - Added support for $display()/$write() and $finish() to Verilog front-end\n     - Added \"yosys-smtbmc\" formal verification flow\n     - Added options for clang sanitizers to Makefile\n\n * New commands and options\n     - Added \"scc -expect <N> -nofeedback\"\n     - Added \"proc_dlatch\"\n     - Added \"check\"\n     - Added \"select %xe %cie %coe %M %C %R\"\n     - Added \"sat -dump_json\" (WaveJSON format)\n     - Added \"sat -tempinduct-baseonly -tempinduct-inductonly\"\n     - Added \"sat -stepsize\" and \"sat -tempinduct-step\"\n     - Added \"sat -show-regs -show-public -show-all\"\n     - Added \"write_json\" (Native Yosys JSON format)\n     - Added \"write_blif -attr\"\n     - Added \"dffinit\"\n     - Added \"chparam\"\n     - Added \"muxcover\"\n     - Added \"pmuxtree\"\n     - Added memory_bram \"make_outreg\" feature\n     - Added \"splice -wires\"\n     - Added \"dff2dffe -direct-match\"\n     - Added simplemap $lut support\n     - Added \"read_blif\"\n     - Added \"opt_share -share_all\"\n     - Added \"aigmap\"\n     - Added \"write_smt2 -mem -regs -wires\"\n     - Added \"memory -nordff\"\n     - Added \"write_smv\"\n     - Added \"synth -nordff -noalumacc\"\n     - Added \"rename -top new_name\"\n     - Added \"opt_const -clkinv\"\n     - Added \"synth -nofsm\"\n     - Added \"miter -assert\"\n     - Added \"read_verilog -noautowire\"\n     - Added \"read_verilog -nodpi\"\n     - Added \"tribuf\"\n     - Added \"lut2mux\"\n     - Added \"nlutmap\"\n     - Added \"qwp\"\n     - Added \"test_cell -noeval\"\n     - Added \"edgetypes\"\n     - Added \"equiv_struct\"\n     - Added \"equiv_purge\"\n     - Added \"equiv_mark\"\n     - Added \"equiv_add -try -cell\"\n     - Added \"singleton\"\n     - Added \"abc -g -luts\"\n     - Added \"torder\"\n     - Added \"write_blif -cname\"\n     - Added \"submod -copy\"\n     - Added \"dffsr2dff\"\n     - Added \"stat -liberty\"\n\n * Synthesis metacommands\n     - Various improvements in synth_xilinx\n     - Added synth_ice40 and synth_greenpak4\n     - Added \"prep\" metacommand for \"synthesis lite\"\n\n * Cell library changes\n     - Added cell types to \"help\" system\n     - Added $meminit cell type\n     - Added $assume cell type\n     - Added $_MUX4_, $_MUX8_, and $_MUX16_ cells\n     - Added $tribuf and $_TBUF_ cell types\n     - Added read-enable to memory model\n\n * YosysJS\n     - Various improvements in emscripten build\n     - Added alternative webworker-based JS API\n     - Added a few example applications\n\n\nYosys 0.4 .. Yosys 0.5\n----------------------\n\n * API changes\n     - Added log_warning()\n     - Added eval_select_args() and eval_select_op()\n     - Added cell->known(), cell->input(portname), cell->output(portname)\n     - Skip blackbox modules in design->selected_modules()\n     - Replaced std::map<> and std::set<> with dict<> and pool<>\n     - New SigSpec::extend() is what used to be SigSpec::extend_u0()\n     - Added YS_OVERRIDE, YS_FINAL, YS_ATTRIBUTE, YS_NORETURN\n\n * Cell library changes\n     - Added flip-flops with enable ($dffe etc.)\n     - Added $equiv cells for equivalence checking framework\n\n * Various\n     - Updated ABC to hg rev 61ad5f908c03\n     - Added clock domain partitioning to ABC pass\n     - Improved plugin building (see \"yosys-config --build\")\n     - Added ENABLE_NDEBUG Makefile flag for high-performance builds\n     - Added \"yosys -d\", \"yosys -L\" and other driver improvements\n     - Added support for multi-bit (array) cell ports to \"write_edif\"\n     - Now printing most output to stdout, not stderr\n     - Added \"onehot\" attribute (set by \"fsm_map\")\n     - Various performance improvements\n     - Vastly improved Xilinx flow\n     - Added \"make unsintall\"\n\n * Equivalence checking\n     - Added equivalence checking commands:\n         equiv_make equiv_simple equiv_status\n\t equiv_induct equiv_miter\n\t equiv_add equiv_remove\n\n * Block RAM support:\n     - Added \"memory_bram\" command\n     - Added BRAM support to Xilinx flow\n\n * Other New Commands and Options\n     - Added \"dff2dffe\"\n     - Added \"fsm -encfile\"\n     - Added \"dfflibmap -prepare\"\n     - Added \"write_blid -unbuf -undef -blackbox\"\n     - Added \"write_smt2\" for writing SMT-LIBv2 files\n     - Added \"test_cell -w -muxdiv\"\n     - Added \"select -read\"\n\n\nYosys 0.3.0 .. Yosys 0.4\n------------------------\n\n * Platform Support\n     - Added support for mxe-based cross-builds for win32\n     - Added sourcecode-export as VisualStudio project\n     - Added experimental EMCC (JavaScript) support\n\n * Verilog Frontend\n     - Added -sv option for SystemVerilog (and automatic *.sv file support)\n     - Added support for real-valued constants and constant expressions\n     - Added support for non-standard \"via_celltype\" attribute on task/func\n     - Added support for non-standard \"module mod_name(...);\" syntax\n     - Added support for non-standard \"\"\" macro bodies\n     - Added support for array with more than one dimension\n     - Added support for $readmemh and $readmemb\n     - Added support for DPI functions\n\n * Changes in internal cell library\n     - Added $shift and $shiftx cell types\n     - Added $alu, $lcu, $fa and $macc cell types\n     - Removed $bu0 and $safe_pmux cell types\n     - $mem/$memwr WR_EN input is now a per-data-bit enable signal\n     - Added $_NAND_ $_NOR_ $_XNOR_ $_AOI3_ $_OAI3_ $_AOI4_ $_OAI4_\n     - Renamed ports of $lut cells (from I->O to A->Y)\n     - Renamed $_INV_ to $_NOT_\n\n * Changes for simple synthesis flows\n     - There is now a \"synth\" command with a recommended default script\n     - Many improvements in synthesis of arithmetic functions to gates\n\t - Multipliers and adders with many operands are using carry-save adder trees\n         - Remaining adders are now implemented using Brent-Kung carry look-ahead adders\n     - Various new high-level optimizations on RTL netlist\n     - Various improvements in FSM optimization\n     - Updated ABC to hg 5b5af75f1dda (from 2014-11-07)\n\n * Changes in internal APIs and RTLIL\n     - Added log_id() and log_cell() helper functions\n     - Added function-like cell creation helpers\n     - Added GetSize() function (like .size() but with int)\n     - Major refactoring of RTLIL::Module and related classes\n     - Major refactoring of RTLIL::SigSpec and related classes\n     - Now RTLIL::IdString is essentially an int\n     - Added macros for code coverage counters\n     - Added some Makefile magic for pretty make logs\n     - Added \"kernel/yosys.h\" with all the core definitions\n     - Changed a lot of code from FILE* to c++ streams\n     - Added RTLIL::Monitor API and \"trace\" command\n     - Added \"Yosys\" C++ namespace\n\n * Changes relevant to SAT solving\n     - Added ezSAT::keep_cnf() and ezSAT::non_incremental()\n     - Added native ezSAT support for vector shift ops\n     - Updated MiniSAT to git 37dc6c67e2 (from 2013-09-25)\n\n * New commands (or large improvements to commands)\n     - Added \"synth\" command with default script\n     - Added \"share\" (finally some real resource sharing)\n     - Added \"memory_share\" (reduce number of ports on memories)\n     - Added \"wreduce\" and \"alumacc\" commands\n     - Added \"opt -keepdc -fine -full -fast\"\n     - Added some \"test_*\" commands\n\n * Various other changes\n     - Added %D and %c select operators\n     - Added support for labels in yosys scripts\n     - Added support for here-documents in yosys scripts\n     - Support \"+/\" prefix for files from proc_share_dir\n     - Added \"autoidx\" statement to ilang language\n     - Switched from \"yosys-svgviewer\" to \"xdot\"\n     - Renamed \"stdcells.v\" to \"techmap.v\"\n     - Various bug fixes and small improvements\n     - Improved welcome and bye messages\n\n\nYosys 0.2.0 .. Yosys 0.3.0\n--------------------------\n\n * Driver program and overall behavior:\n     - Added \"design -push\" and \"design -pop\"\n     - Added \"tee\" command for redirecting log output\n\n * Changes in the internal cell library:\n     - Added $dlatchsr and $_DLATCHSR_???_ cell types\n\n * Improvements in Verilog frontend:\n     - Improved support for const functions (case, always, repeat)\n     - The generate..endgenerate keywords are now optional\n     - Added support for arrays of module instances\n     - Added support for \"`default_nettype\" directive\n     - Added support for \"`line\" directive\n\n * Other front- and back-ends:\n     - Various changes to \"write_blif\" options\n     - Various improvements in EDIF backend\n     - Added \"vhdl2verilog\" pseudo-front-end\n     - Added \"verific\" pseudo-front-end\n\n * Improvements in technology mapping:\n     - Added support for recursive techmap\n     - Added CONSTMSK and CONSTVAL features to techmap\n     - Added _TECHMAP_CONNMAP_*_ feature to techmap\n     - Added _TECHMAP_REPLACE_ feature to techmap\n     - Added \"connwrappers\" command for wrap-extract-unwrap method\n     - Added \"extract -map %<design_name>\" feature\n     - Added \"extract -ignore_param ...\" and \"extract -ignore_parameters\"\n     - Added \"techmap -max_iter\" option\n\n * Improvements to \"eval\" and \"sat\" framework:\n     - Now include a copy of Minisat (with build fixes applied)\n     - Switched to Minisat::SimpSolver as SAT back-end\n     - Added \"sat -dump_vcd\" feature\n     - Added \"sat -dump_cnf\" feature\n     - Added \"sat -initsteps <N>\" feature\n     - Added \"freduce -stop <N>\" feature\n     - Added \"freduce -dump <prefix>\" feature\n\n * Integration with ABC:\n     - Updated ABC rev to 7600ffb9340c\n\n * Improvements in the internal APIs:\n     - Added RTLIL::Module::add... helper methods\n     - Various build fixes for OSX (Darwin) and OpenBSD\n\n\nYosys 0.1.0 .. Yosys 0.2.0\n--------------------------\n\n * Changes to the driver program:\n     - Added \"yosys -h\" and \"yosys -H\"\n     - Added support for backslash line continuation in scripts\n     - Added support for #-comments in same line as command\n     - Added \"echo\" and \"log\" commands\n\n * Improvements in Verilog frontend:\n     - Added support for local registers in named blocks\n     - Added support for \"case\" in \"generate\" blocks\n     - Added support for $clog2 system function\n     - Added support for basic SystemVerilog assert statements\n     - Added preprocessor support for macro arguments\n     - Added preprocessor support for `elsif statement\n     - Added \"verilog_defaults\" command\n     - Added read_verilog -icells option\n     - Added support for constant sizes from parameters\n     - Added \"read_verilog -setattr\"\n     - Added support for function returning 'integer'\n     - Added limited support for function calls in parameter values\n     - Added \"read_verilog -defer\" to suppress evaluation of modules with default parameters\n\n * Other front- and back-ends:\n     - Added BTOR backend\n     - Added Liberty frontend\n\n * Improvements in technology mapping:\n     - The \"dfflibmap\" command now strongly prefers solutions with\n           no inverters in clock paths\n     - The \"dfflibmap\" command now prefers cells with smaller area\n     - Added support for multiple -map options to techmap\n     - Added \"dfflibmap\" support for //-comments in liberty files\n     - Added \"memory_unpack\" command to revert \"memory_collect\"\n     - Added standard techmap rule \"techmap -share_map pmux2mux.v\"\n     - Added \"iopadmap -bits\"\n     - Added \"setundef\" command\n     - Added \"hilomap\" command\n\n * Changes in the internal cell library:\n     - Major rewrite of simlib.v for better compatibility with other tools\n     - Added PRIORITY parameter to $memwr cells\n     - Added TRANSPARENT parameter to $memrd cells\n     - Added RD_TRANSPARENT parameter to $mem cells\n     - Added $bu0 cell (always 0-extend, even undef MSB)\n     - Added $assert cell type\n     - Added $slice and $concat cell types\n\n * Integration with ABC:\n     - Updated ABC to hg rev 2058c8ccea68\n     - Tighter integration of ABC build with Yosys build. The make\n           targets 'make abc' and 'make install-abc' are now obsolete.\n     - Added support for passing FFs from one clock domain through ABC\n     - Now always use BLIF as exchange format with ABC\n     - Added support for \"abc -script +<command_sequence>\"\n     - Improved standard ABC recipe\n     - Added support for \"keep\" attribute to abc command\n     - Added \"abc -dff / -clk / -keepff\" options\n\n * Improvements to \"eval\" and \"sat\" framework:\n     - Added support for \"0\" and \"~0\" in right-hand side -set expressions\n     - Added \"eval -set-undef\" and \"eval -table\"\n     - Added \"sat -set-init\" and \"sat -set-init-*\" for sequential problems\n     - Added undef support to SAT solver, incl. various new \"sat\" options\n     - Added correct support for === and !== for \"eval\" and \"sat\"\n     - Added \"sat -tempinduct\" (default -seq is now non-induction sequential)\n     - Added \"sat -prove-asserts\"\n     - Complete rewrite of the 'freduce' command\n     - Added \"miter\" command\n     - Added \"sat -show-inputs\" and \"sat -show-outputs\"\n     - Added \"sat -ignore_unknown_cells\" (now produce an error by default)\n     - Added \"sat -falsify\"\n     - Now \"sat -verify\" and \"sat -falsify\" can also be used without \"-prove\"\n     - Added \"expose\" command\n     - Added support for @<sel_name> to sat and eval signal expressions\n\n * Changes in the 'make test' framework and auxiliary test tools:\n     - Added autotest.sh -p and -f options\n     - Replaced autotest.sh ISIM support with XSIM support\n     - Added test cases for SAT framework\n\n * Added \"abbreviated IDs\":\n     - Now $<something>$foo can be abbreviated as $foo.\n     - Usually this last part is a unique id (from RTLIL::autoidx)\n     - This abbreviated IDs are now also used in \"show\" output\n\n * Other changes to selection framework:\n     - Now */ is optional in */<mode>:<arg> expressions\n     - Added \"select -assert-none\" and \"select -assert-any\"\n     - Added support for matching modules by attribute (A:<expr>)\n     - Added \"select -none\"\n     - Added support for r:<expr> pattern for matching cell parameters\n     - Added support for !=, <, <=, >=, > for attribute and parameter matching\n     - Added support for %s for selecting sub-modules\n     - Added support for %m for expanding selections to whole modules\n     - Added support for i:*, o:* and x:* pattern for selecting module ports\n     - Added support for s:<expr> pattern for matching wire width\n     - Added support for %a operation to select wire aliases\n\n * Various other changes to commands and options:\n     - The \"ls\" command now supports wildcards\n     - Added \"show -pause\" and \"show -format dot\"\n     - Added \"show -color\" support for cells\n     - Added \"show -label\" and \"show -notitle\"\n     - Added \"dump -m\" and \"dump -n\"\n     - Added \"history\" command\n     - Added \"rename -hide\"\n     - Added \"connect\" command\n     - Added \"splitnets -driver\"\n     - Added \"opt_const -mux_undef\"\n     - Added \"opt_const -mux_bool\"\n     - Added \"opt_const -undriven\"\n     - Added \"opt -mux_undef -mux_bool -undriven -purge\"\n     - Added \"hierarchy -libdir\"\n     - Added \"hierarchy -purge_lib\" (by default now do not remove lib cells)\n     - Added \"delete\" command\n     - Added \"dump -append\"\n     - Added \"setattr\" and \"setparam\" commands\n     - Added \"design -stash/-copy-from/-copy-to\"\n     - Added \"copy\" command\n     - Added \"splice\" command\n\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 1.6923828125,
          "content": "## CODE NOTIFICATIONS\n# Register yourself here to be notified about modifications\n# for any files you have an interest in/know your way around.\n\n# Each line is a file pattern followed by one or more users.\n# Both github usernames and email addresses are supported.\n# Order is important; the last matching pattern takes the most\n# precedence. Previous matches will not be applied.\n\n\n# PATH (can use glob)          USERNAME(S)\n\nCODEOWNERS                     @nakengelhardt\npasses/cmds/scratchpad.cc      @nakengelhardt\nfrontends/rpc/                 @whitequark\nbackends/cxxrtl/               @whitequark\npasses/cmds/bugpoint.cc        @whitequark\npasses/techmap/flowmap.cc      @whitequark\npasses/opt/opt_lut.cc          @whitequark\npasses/techmap/abc9*.cc        @eddiehung @Ravenslofty\nbackends/aiger/xaiger.cc       @eddiehung\ndocs/                          @KrystalDelusion\n.github/workflows/*.yml        @mmicko\n\n## External Contributors\n# Only users with write permission to the repository get review\n# requests automatically, but we add information for other\n# contributors here too, so we know who to ask to take a look.\n# These still override previous lines, so be careful not to\n# accidentally disable any of the above rules.\n\nfrontends/verilog/             @zachjs\nfrontends/ast/                 @zachjs\n\ntechlibs/intel_alm/            @Ravenslofty\ntechlibs/gowin/                @pepijndevos\ntechlibs/gatemate/             @pu-cc\n\n# pyosys\nmisc/*.py                      @btut\n\nbackends/firrtl                @ucbjrl @azidar\n\npasses/sat/qbfsat.cc           @boqwxp\npasses/sat/qbfsat.h            @boqwxp\npasses/cmds/exec.cc            @boqwxp\npasses/cmds/glift.cc           @boqwxp\npasses/cmds/printattrs.cc      @boqwxp\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1044921875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at contact@yosyshq.com and/or\nclaire@clairexen.net.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.7587890625,
          "content": "ISC License\n\nCopyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.9521484375,
          "content": "ARG IMAGE=\"python:3-slim-buster\"\n\n#---\n\nFROM $IMAGE AS base\n\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \\\n    ca-certificates \\\n    clang \\\n    lld \\\n    curl \\\n    libffi-dev \\\n    libreadline-dev \\\n    tcl-dev \\\n    graphviz \\\n    xdot \\\n && apt-get autoclean && apt-get clean && apt-get -y autoremove \\\n && update-ca-certificates \\\n && rm -rf /var/lib/apt/lists\n\n#---\n\nFROM base AS build\n\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \\\n    bison \\\n    flex \\\n    gawk \\\n    gcc \\\n    git \\\n    iverilog \\\n    pkg-config \\\n && apt-get autoclean && apt-get clean && apt-get -y autoremove \\\n && rm -rf /var/lib/apt/lists\n\nCOPY . /yosys\n\nENV PREFIX /opt/yosys\n\nRUN cd /yosys \\\n && make \\\n && make install \\\n && make test\n\n#---\n\nFROM base\n\nCOPY --from=build /opt/yosys /opt/yosys\n\nENV PATH /opt/yosys/bin:$PATH\n\nRUN useradd -m yosys\nUSER yosys\n\nCMD [\"yosys\"]\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 37.7763671875,
          "content": "\nCONFIG := none\n# CONFIG := clang\n# CONFIG := gcc\n# CONFIG := wasi\n# CONFIG := msys2-32\n# CONFIG := msys2-64\n\n# features (the more the better)\nENABLE_TCL := 1\nENABLE_ABC := 1\nENABLE_GLOB := 1\nENABLE_PLUGINS := 1\nENABLE_READLINE := 1\nENABLE_EDITLINE := 0\nENABLE_GHDL := 0\nENABLE_VERIFIC := 0\nENABLE_VERIFIC_SYSTEMVERILOG := 1\nENABLE_VERIFIC_VHDL := 1\nENABLE_VERIFIC_HIER_TREE := 1\nENABLE_VERIFIC_YOSYSHQ_EXTENSIONS := 0\nENABLE_VERIFIC_EDIF := 0\nENABLE_VERIFIC_LIBERTY := 0\nENABLE_COVER := 1\nENABLE_LIBYOSYS := 0\nENABLE_ZLIB := 1\n\n# python wrappers\nENABLE_PYOSYS := 0\n\n# other configuration flags\nENABLE_GCOV := 0\nENABLE_GPROF := 0\nENABLE_DEBUG := 0\nENABLE_LTO := 0\nENABLE_CCACHE := 0\n# sccache is not always a drop-in replacement for ccache in practice\nENABLE_SCCACHE := 0\nENABLE_FUNCTIONAL_TESTS := 0\nLINK_CURSES := 0\nLINK_TERMCAP := 0\nLINK_ABC := 0\n# Needed for environments that can't run executables (i.e. emscripten, wasm)\nDISABLE_SPAWN := 0\n# Needed for environments that don't have proper thread support (i.e. emscripten, wasm--for now)\nDISABLE_ABC_THREADS := 0\n\n# clang sanitizers\nSANITIZER =\n# SANITIZER = address\n# SANITIZER = memory\n# SANITIZER = undefined\n# SANITIZER = cfi\n\n# Prefer using ENABLE_DEBUG over setting these\nOPT_LEVEL := -O3\nGCC_LTO :=\nCLANG_LTO := -flto=thin\n\nPROGRAM_PREFIX :=\n\nOS := $(shell uname -s)\nPREFIX ?= /usr/local\nINSTALL_SUDO :=\nifneq ($(filter MINGW%,$(OS)),)\nOS := MINGW\nendif\n\nifneq ($(wildcard Makefile.conf),)\ninclude Makefile.conf\nendif\n\nifeq ($(ENABLE_PYOSYS),1)\nENABLE_LIBYOSYS := 1\nendif\n\nBINDIR := $(PREFIX)/bin\nLIBDIR := $(PREFIX)/lib/$(PROGRAM_PREFIX)yosys\nDATDIR := $(PREFIX)/share/$(PROGRAM_PREFIX)yosys\n\nEXE =\nOBJS =\nGENFILES =\nEXTRA_OBJS =\nEXTRA_TARGETS =\nTARGETS = $(PROGRAM_PREFIX)yosys$(EXE) $(PROGRAM_PREFIX)yosys-config\n\nPRETTY = 1\nSMALL = 0\n\n# Unit test\nUNITESTPATH := tests/unit\n\nall: top-all\n\nYOSYS_SRC := $(dir $(firstword $(MAKEFILE_LIST)))\nVPATH := $(YOSYS_SRC)\n\nCXXSTD ?= c++17\nCXXFLAGS := $(CXXFLAGS) -Wall -Wextra -ggdb -I. -I\"$(YOSYS_SRC)\" -MD -MP -D_YOSYS_ -fPIC -I$(PREFIX)/include\nLIBS := $(LIBS) -lstdc++ -lm\nPLUGIN_LINKFLAGS :=\nPLUGIN_LIBS :=\nEXE_LINKFLAGS :=\nifeq ($(OS), MINGW)\nEXE_LINKFLAGS := -Wl,--export-all-symbols -Wl,--out-implib,libyosys_exe.a\nPLUGIN_LINKFLAGS += -L\"$(LIBDIR)\"\nPLUGIN_LIBS := -lyosys_exe\nendif\n\nPKG_CONFIG ?= pkg-config\nSED ?= sed\nBISON ?= bison\nSTRIP ?= strip\nAWK ?= awk\n\nifeq ($(OS), Darwin)\nPLUGIN_LINKFLAGS += -undefined dynamic_lookup\nLINKFLAGS += -rdynamic\n\n# homebrew search paths\nifneq ($(shell :; command -v brew),)\nBREW_PREFIX := $(shell brew --prefix)/opt\n$(info $$BREW_PREFIX is [${BREW_PREFIX}])\nifeq ($(ENABLE_PYOSYS),1)\nCXXFLAGS += -I$(BREW_PREFIX)/boost/include/boost\nLINKFLAGS += -L$(BREW_PREFIX)/boost/lib\nendif\nCXXFLAGS += -I$(BREW_PREFIX)/readline/include\nLINKFLAGS += -L$(BREW_PREFIX)/readline/lib\nPKG_CONFIG_PATH := $(BREW_PREFIX)/libffi/lib/pkgconfig:$(PKG_CONFIG_PATH)\nPKG_CONFIG_PATH := $(BREW_PREFIX)/tcl-tk/lib/pkgconfig:$(PKG_CONFIG_PATH)\nexport PATH := $(BREW_PREFIX)/bison/bin:$(BREW_PREFIX)/gettext/bin:$(BREW_PREFIX)/flex/bin:$(PATH)\n\n# macports search paths\nelse ifneq ($(shell :; command -v port),)\nPORT_PREFIX := $(patsubst %/bin/port,%,$(shell :; command -v port))\nCXXFLAGS += -I$(PORT_PREFIX)/include\nLINKFLAGS += -L$(PORT_PREFIX)/lib\nPKG_CONFIG_PATH := $(PORT_PREFIX)/lib/pkgconfig:$(PKG_CONFIG_PATH)\nexport PATH := $(PORT_PREFIX)/bin:$(PATH)\nendif\n\nelse\nLINKFLAGS += -rdynamic\nifneq ($(OS), OpenBSD)\nLIBS += -lrt\nendif\nendif\n\nifeq ($(OS), Haiku)\n# Allow usage of non-posix vasprintf, mkstemps functions\nCXXFLAGS += -D_DEFAULT_SOURCE\nendif\n\nYOSYS_VER := 0.48+70\n\n# Note: We arrange for .gitcommit to contain the (short) commit hash in\n# tarballs generated with git-archive(1) using .gitattributes. The git repo\n# will have this file in its unexpanded form tough, in which case we fall\n# back to calling git directly.\nTARBALL_GIT_REV := $(shell cat $(YOSYS_SRC)/.gitcommit)\nifneq ($(findstring Format:,$(TARBALL_GIT_REV)),)\nGIT_REV := $(shell GIT_DIR=$(YOSYS_SRC)/.git git rev-parse --short=9 HEAD || echo UNKNOWN)\nelse\nGIT_REV := $(TARBALL_GIT_REV)\nendif\n\nOBJS = kernel/version_$(GIT_REV).o\n\nbumpversion:\n\tsed -i \"/^YOSYS_VER := / s/+[0-9][0-9]*$$/+`git log --oneline aaa5347.. | wc -l`/;\" Makefile\n\nABCMKARGS = CC=\"$(CXX)\" CXX=\"$(CXX)\" ABC_USE_LIBSTDCXX=1 ABC_USE_NAMESPACE=abc VERBOSE=$(Q)\n\n# set ABCEXTERNAL = <abc-command> to use an external ABC instance\n# Note: The in-tree ABC (yosys-abc) will not be installed when ABCEXTERNAL is set.\nABCEXTERNAL ?=\n\ndefine newline\n\n\nendef\n\nifneq ($(wildcard Makefile.conf),)\n# don't echo Makefile.conf contents when invoked to print source versions\nifeq ($(findstring echo-,$(MAKECMDGOALS)),)\n$(info $(subst $$--$$,$(newline),$(shell sed 's,^,[Makefile.conf] ,; s,$$,$$--$$,;' < Makefile.conf | tr -d '\\n' | sed 's,\\$$--\\$$$$,,')))\nendif\ninclude Makefile.conf\nendif\n\nPYTHON_EXECUTABLE := $(shell if python3 -c \"\"; then echo \"python3\"; else echo \"python\"; fi)\nifeq ($(ENABLE_PYOSYS),1)\nPYTHON_VERSION_TESTCODE := \"import sys;t='{v[0]}.{v[1]}'.format(v=list(sys.version_info[:2]));print(t)\"\nPYTHON_VERSION := $(shell $(PYTHON_EXECUTABLE) -c \"\"$(PYTHON_VERSION_TESTCODE)\"\")\nPYTHON_MAJOR_VERSION := $(shell echo $(PYTHON_VERSION) | cut -f1 -d.)\n\nENABLE_PYTHON_CONFIG_EMBED ?= $(shell $(PYTHON_EXECUTABLE)-config --embed --libs > /dev/null && echo 1)\nifeq ($(ENABLE_PYTHON_CONFIG_EMBED),1)\nPYTHON_CONFIG := $(PYTHON_EXECUTABLE)-config --embed\nelse\nPYTHON_CONFIG := $(PYTHON_EXECUTABLE)-config\nendif\n\nPYTHON_DESTDIR := $(shell $(PYTHON_EXECUTABLE) -c \"import site; print(site.getsitepackages()[-1]);\")\n\n# Reload Makefile.conf to override python specific variables if defined\nifneq ($(wildcard Makefile.conf),)\ninclude Makefile.conf\nendif\n\nendif\n\nABC_ARCHFLAGS = \"\"\nifeq ($(OS), OpenBSD)\nABC_ARCHFLAGS += \"-DABC_NO_RLIMIT\"\nendif\n\n# This gets overridden later.\nLTOFLAGS := $(GCC_LTO)\n\nifeq ($(CONFIG),clang)\nCXX = clang++\nCXXFLAGS += -std=$(CXXSTD) $(OPT_LEVEL)\nifeq ($(ENABLE_LTO),1)\nLINKFLAGS += -fuse-ld=lld\nendif\nABCMKARGS += ARCHFLAGS=\"-DABC_USE_STDINT_H $(ABC_ARCHFLAGS)\"\nLTOFLAGS := $(CLANG_LTO)\n\nifneq ($(SANITIZER),)\n$(info [Clang Sanitizer] $(SANITIZER))\nCXXFLAGS += -g -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=$(SANITIZER)\nLINKFLAGS += -g -fsanitize=$(SANITIZER)\nifneq ($(findstring address,$(SANITIZER)),)\nENABLE_COVER := 0\nendif\nifneq ($(findstring memory,$(SANITIZER)),)\nCXXFLAGS += -fPIE -fsanitize-memory-track-origins\nLINKFLAGS += -fPIE -fsanitize-memory-track-origins\nendif\nifneq ($(findstring cfi,$(SANITIZER)),)\nCXXFLAGS += -flto\nLINKFLAGS += -flto\nLTOFLAGS =\nendif\nendif\n\nelse ifeq ($(CONFIG),gcc)\nCXX = g++\nCXXFLAGS += -std=$(CXXSTD) $(OPT_LEVEL)\nABCMKARGS += ARCHFLAGS=\"-DABC_USE_STDINT_H $(ABC_ARCHFLAGS)\"\n\nelse ifeq ($(CONFIG),gcc-static)\nLINKFLAGS := $(filter-out -rdynamic,$(LINKFLAGS)) -static\nLIBS := $(filter-out -lrt,$(LIBS))\nCXXFLAGS := $(filter-out -fPIC,$(CXXFLAGS))\nCXXFLAGS += -std=$(CXXSTD) $(OPT_LEVEL)\nABCMKARGS = CC=\"$(CC)\" CXX=\"$(CXX)\" LD=\"$(CXX)\" ABC_USE_LIBSTDCXX=1 LIBS=\"-lm -lpthread -static\" OPTFLAGS=\"-O\" \\\n                       ARCHFLAGS=\"-DABC_USE_STDINT_H -DABC_NO_DYNAMIC_LINKING=1 -Wno-unused-but-set-variable $(ARCHFLAGS)\" ABC_USE_NO_READLINE=1\nifeq ($(DISABLE_ABC_THREADS),1)\nABCMKARGS += \"ABC_USE_NO_PTHREADS=1\"\nendif\n\nelse ifeq ($(CONFIG),wasi)\nifeq ($(WASI_SDK),)\nCXX = clang++\nAR = llvm-ar\nRANLIB = llvm-ranlib\nWASIFLAGS := -target wasm32-wasi --sysroot $(WASI_SYSROOT) $(WASIFLAGS)\nelse\nCXX = $(WASI_SDK)/bin/clang++\nAR = $(WASI_SDK)/bin/ar\nRANLIB = $(WASI_SDK)/bin/ranlib\nWASIFLAGS := --sysroot $(WASI_SDK)/share/wasi-sysroot $(WASIFLAGS)\nendif\nCXXFLAGS := $(WASIFLAGS) -std=$(CXXSTD) $(OPT_LEVEL) -D_WASI_EMULATED_PROCESS_CLOCKS $(filter-out -fPIC,$(CXXFLAGS))\nLINKFLAGS := $(WASIFLAGS) -Wl,-z,stack-size=1048576 $(filter-out -rdynamic,$(LINKFLAGS))\nLIBS := -lwasi-emulated-process-clocks $(filter-out -lrt,$(LIBS))\nABCMKARGS += AR=\"$(AR)\" RANLIB=\"$(RANLIB)\"\nABCMKARGS += ARCHFLAGS=\"$(WASIFLAGS) -D_WASI_EMULATED_PROCESS_CLOCKS -DABC_USE_STDINT_H -DABC_NO_DYNAMIC_LINKING -DABC_NO_RLIMIT\"\nABCMKARGS += OPTFLAGS=\"-Os\"\nEXE = .wasm\n\nDISABLE_SPAWN := 1\n\nifeq ($(ENABLE_ABC),1)\nLINK_ABC := 1\nDISABLE_ABC_THREADS := 1\nendif\n\nelse ifeq ($(CONFIG),msys2-32)\nCXX = i686-w64-mingw32-g++\nCXXFLAGS += -std=$(CXXSTD) $(OPT_LEVEL) -D_POSIX_SOURCE -DYOSYS_WIN32_UNIX_DIR\nCXXFLAGS := $(filter-out -fPIC,$(CXXFLAGS))\nLINKFLAGS := $(filter-out -rdynamic,$(LINKFLAGS)) -s\nLIBS := $(filter-out -lrt,$(LIBS))\nABCMKARGS += ARCHFLAGS=\"-DABC_USE_STDINT_H -DWIN32_NO_DLL -DHAVE_STRUCT_TIMESPEC -fpermissive -w\"\nABCMKARGS += LIBS=\"-lpthread -lshlwapi -s\" ABC_USE_NO_READLINE=0 CC=\"i686-w64-mingw32-gcc\" CXX=\"$(CXX)\"\nEXE = .exe\n\nelse ifeq ($(CONFIG),msys2-64)\nCXX = x86_64-w64-mingw32-g++\nCXXFLAGS += -std=$(CXXSTD) $(OPT_LEVEL) -D_POSIX_SOURCE -DYOSYS_WIN32_UNIX_DIR\nCXXFLAGS := $(filter-out -fPIC,$(CXXFLAGS))\nLINKFLAGS := $(filter-out -rdynamic,$(LINKFLAGS)) -s\nLIBS := $(filter-out -lrt,$(LIBS))\nABCMKARGS += ARCHFLAGS=\"-DABC_USE_STDINT_H -DWIN32_NO_DLL -DHAVE_STRUCT_TIMESPEC -fpermissive -w\"\nABCMKARGS += LIBS=\"-lpthread -lshlwapi -s\" ABC_USE_NO_READLINE=0 CC=\"x86_64-w64-mingw32-gcc\" CXX=\"$(CXX)\"\nEXE = .exe\n\nelse ifeq ($(CONFIG),none)\nCXXFLAGS += -std=$(CXXSTD) $(OPT_LEVEL)\nABCMKARGS += ARCHFLAGS=\"-DABC_USE_STDINT_H $(ABC_ARCHFLAGS)\"\nLTOFLAGS =\n\nelse\n$(error Invalid CONFIG setting '$(CONFIG)'. Valid values: clang, gcc, msys2-32, msys2-64, none)\nendif\n\n\nifeq ($(ENABLE_LTO),1)\nCXXFLAGS += $(LTOFLAGS)\nLINKFLAGS += $(LTOFLAGS)\nendif\n\nifeq ($(ENABLE_LIBYOSYS),1)\nTARGETS += libyosys.so\nendif\n\nifeq ($(ENABLE_PYOSYS),1)\n# Detect name of boost_python library. Some distros use boost_python-py<version>, other boost_python<version>, some only use the major version number, some a concatenation of major and minor version numbers\nCHECK_BOOST_PYTHON = (echo \"int main(int argc, char ** argv) {return 0;}\" | $(CXX) -xc -o /dev/null $(shell $(PYTHON_CONFIG) --ldflags) -l$(1) - > /dev/null 2>&1 && echo \"-l$(1)\")\nBOOST_PYTHON_LIB ?= $(shell \\\n\t$(call CHECK_BOOST_PYTHON,boost_python-py$(subst .,,$(PYTHON_VERSION))) || \\\n\t$(call CHECK_BOOST_PYTHON,boost_python-py$(PYTHON_MAJOR_VERSION)) || \\\n\t$(call CHECK_BOOST_PYTHON,boost_python$(subst .,,$(PYTHON_VERSION))) || \\\n\t$(call CHECK_BOOST_PYTHON,boost_python$(PYTHON_MAJOR_VERSION)) \\\n)\n\nifeq ($(BOOST_PYTHON_LIB),)\n$(error BOOST_PYTHON_LIB could not be detected. Please define manually)\nendif\n\nLIBS += $(shell $(PYTHON_CONFIG) --libs) $(BOOST_PYTHON_LIB) -lboost_system -lboost_filesystem\n# python-config --ldflags includes LIBS for some reason\nLINKFLAGS += $(filter-out -l%,$(shell $(PYTHON_CONFIG) --ldflags))\nCXXFLAGS += $(shell $(PYTHON_CONFIG) --includes) -DWITH_PYTHON\n\nPY_WRAPPER_FILE = kernel/python_wrappers\nOBJS += $(PY_WRAPPER_FILE).o\nPY_GEN_SCRIPT= py_wrap_generator\nPY_WRAP_INCLUDES := $(shell python$(PYTHON_VERSION) -c \"from misc import $(PY_GEN_SCRIPT); $(PY_GEN_SCRIPT).print_includes()\")\nendif # ENABLE_PYOSYS\n\nifeq ($(ENABLE_READLINE),1)\nCXXFLAGS += -DYOSYS_ENABLE_READLINE\nifeq ($(OS), $(filter $(OS),FreeBSD OpenBSD NetBSD))\nCXXFLAGS += -I/usr/local/include\nendif\nLIBS += -lreadline\nifeq ($(LINK_CURSES),1)\nLIBS += -lcurses\nABCMKARGS += \"ABC_READLINE_LIBRARIES=-lcurses -lreadline\"\nendif\nifeq ($(LINK_TERMCAP),1)\nLIBS += -ltermcap\nABCMKARGS += \"ABC_READLINE_LIBRARIES=-lreadline -ltermcap\"\nendif\nelse\nifeq ($(ENABLE_EDITLINE),1)\nCXXFLAGS += -DYOSYS_ENABLE_EDITLINE\nLIBS += -ledit\nendif\nABCMKARGS += \"ABC_USE_NO_READLINE=1\"\nendif\n\nifeq ($(DISABLE_ABC_THREADS),1)\nABCMKARGS += \"ABC_USE_NO_PTHREADS=1\"\nendif\n\nifeq ($(DISABLE_SPAWN),1)\nCXXFLAGS += -DYOSYS_DISABLE_SPAWN\nendif\n\nifeq ($(ENABLE_PLUGINS),1)\nCXXFLAGS += $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --silence-errors --cflags libffi) -DYOSYS_ENABLE_PLUGINS\nifeq ($(OS), MINGW)\nCXXFLAGS += -Ilibs/dlfcn-win32\nendif\nLIBS += $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --silence-errors --libs libffi || echo -lffi)\nifneq ($(OS), $(filter $(OS),FreeBSD OpenBSD NetBSD MINGW))\nLIBS += -ldl\nendif\nendif\n\nifeq ($(ENABLE_GLOB),1)\nCXXFLAGS += -DYOSYS_ENABLE_GLOB\nendif\n\nifeq ($(ENABLE_ZLIB),1)\nCXXFLAGS += -DYOSYS_ENABLE_ZLIB\nLIBS += -lz\nendif\n\n\nifeq ($(ENABLE_TCL),1)\nTCL_VERSION ?= tcl$(shell bash -c \"tclsh <(echo 'puts [info tclversion]')\")\nifeq ($(OS), $(filter $(OS),FreeBSD OpenBSD NetBSD))\n# BSDs usually use tcl8.6, but the lib is named \"libtcl86\"\nTCL_INCLUDE ?= /usr/local/include/$(TCL_VERSION)\nTCL_LIBS ?= -l$(subst .,,$(TCL_VERSION))\nelse\nTCL_INCLUDE ?= /usr/include/$(TCL_VERSION)\nTCL_LIBS ?= -l$(TCL_VERSION)\nendif\n\nCXXFLAGS += $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --silence-errors --cflags tcl || echo -I$(TCL_INCLUDE)) -DYOSYS_ENABLE_TCL\nLIBS += $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --silence-errors --libs tcl || echo $(TCL_LIBS))\nifneq (,$(findstring TCL_WITH_EXTERNAL_TOMMATH,$(CXXFLAGS)))\nLIBS += $(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) $(PKG_CONFIG) --silence-errors --libs libtommath || echo)\nendif\nendif\n\nifeq ($(ENABLE_GCOV),1)\nCXXFLAGS += --coverage\nLINKFLAGS += --coverage\nendif\n\nifeq ($(ENABLE_GPROF),1)\nCXXFLAGS += -pg\nLINKFLAGS += -pg\nendif\n\nifeq ($(ENABLE_DEBUG),1)\nCXXFLAGS := -Og -DDEBUG $(filter-out $(OPT_LEVEL),$(CXXFLAGS))\nendif\n\nifeq ($(ENABLE_ABC),1)\nCXXFLAGS += -DYOSYS_ENABLE_ABC\nifeq ($(LINK_ABC),1)\nCXXFLAGS += -DYOSYS_LINK_ABC\nifeq ($(DISABLE_ABC_THREADS),0)\nLIBS += -lpthread\nendif\nelse\nifeq ($(ABCEXTERNAL),)\nTARGETS := $(PROGRAM_PREFIX)yosys-abc$(EXE) $(TARGETS)\nendif\nendif\nendif\n\nifeq ($(ENABLE_GHDL),1)\nGHDL_PREFIX ?= $(PREFIX)\nGHDL_INCLUDE_DIR ?= $(GHDL_PREFIX)/include\nGHDL_LIB_DIR ?= $(GHDL_PREFIX)/lib\nCXXFLAGS += -I$(GHDL_INCLUDE_DIR) -DYOSYS_ENABLE_GHDL\nLIBS += $(GHDL_LIB_DIR)/libghdl.a $(file <$(GHDL_LIB_DIR)/libghdl.link)\nendif\n\nLIBS_VERIFIC =\nifeq ($(ENABLE_VERIFIC),1)\nVERIFIC_DIR ?= /usr/local/src/verific_lib\nVERIFIC_COMPONENTS ?= database util containers\nifeq ($(ENABLE_VERIFIC_HIER_TREE),1)\nVERIFIC_COMPONENTS += hier_tree\nCXXFLAGS += -DVERIFIC_HIER_TREE_SUPPORT\nelse\nifneq ($(wildcard $(VERIFIC_DIR)/hier_tree),)\nVERIFIC_COMPONENTS += hier_tree\nendif\nendif\nifeq ($(ENABLE_VERIFIC_SYSTEMVERILOG),1)\nVERIFIC_COMPONENTS += verilog\nCXXFLAGS += -DVERIFIC_SYSTEMVERILOG_SUPPORT\nelse\nifneq ($(wildcard $(VERIFIC_DIR)/verilog),)\nVERIFIC_COMPONENTS += verilog\nendif\nendif\nifeq ($(ENABLE_VERIFIC_VHDL),1)\nVERIFIC_COMPONENTS += vhdl\nCXXFLAGS += -DVERIFIC_VHDL_SUPPORT\nelse\nifneq ($(wildcard $(VERIFIC_DIR)/vhdl),)\nVERIFIC_COMPONENTS += vhdl\nendif\nendif\nifeq ($(ENABLE_VERIFIC_EDIF),1)\nVERIFIC_COMPONENTS += edif\nCXXFLAGS += -DVERIFIC_EDIF_SUPPORT\nendif\nifeq ($(ENABLE_VERIFIC_LIBERTY),1)\nVERIFIC_COMPONENTS += synlib\nCXXFLAGS += -DVERIFIC_LIBERTY_SUPPORT\nendif\nifeq ($(ENABLE_VERIFIC_YOSYSHQ_EXTENSIONS),1)\nVERIFIC_COMPONENTS += extensions\nCXXFLAGS += -DYOSYSHQ_VERIFIC_EXTENSIONS\nelse\nifneq ($(wildcard $(VERIFIC_DIR)/extensions),)\nVERIFIC_COMPONENTS += extensions\nendif\nendif\nCXXFLAGS += $(patsubst %,-I$(VERIFIC_DIR)/%,$(VERIFIC_COMPONENTS)) -DYOSYS_ENABLE_VERIFIC\nifeq ($(OS), Darwin)\nLIBS_VERIFIC += $(foreach comp,$(patsubst %,$(VERIFIC_DIR)/%/*-mac.a,$(VERIFIC_COMPONENTS)),-Wl,-force_load $(comp)) -lz\nelse\nLIBS_VERIFIC += -Wl,--whole-archive $(patsubst %,$(VERIFIC_DIR)/%/*-linux.a,$(VERIFIC_COMPONENTS)) -Wl,--no-whole-archive -lz\nendif\nendif\n\n\nifeq ($(ENABLE_COVER),1)\nCXXFLAGS += -DYOSYS_ENABLE_COVER\nendif\n\nifeq ($(ENABLE_CCACHE),1)\nCXX := ccache $(CXX)\nelse\nifeq ($(ENABLE_SCCACHE),1)\nCXX := sccache $(CXX)\nendif\nendif\n\ndefine add_share_file\nEXTRA_TARGETS += $(subst //,/,$(1)/$(notdir $(2)))\n$(subst //,/,$(1)/$(notdir $(2))): $(2)\n\t$$(P) mkdir -p $(1)\n\t$$(Q) cp \"$(YOSYS_SRC)\"/$(2) $(subst //,/,$(1)/$(notdir $(2)))\nendef\n\ndefine add_gen_share_file\nEXTRA_TARGETS += $(subst //,/,$(1)/$(notdir $(2)))\n$(subst //,/,$(1)/$(notdir $(2))): $(2)\n\t$$(P) mkdir -p $(1)\n\t$$(Q) cp $(2) $(subst //,/,$(1)/$(notdir $(2)))\nendef\n\ndefine add_include_file\n$(eval $(call add_share_file,$(dir share/include/$(1)),$(1)))\nendef\n\ndefine add_extra_objs\nEXTRA_OBJS += $(1)\n.SECONDARY: $(1)\nendef\n\nifeq ($(PRETTY), 1)\nP_STATUS = 0\nP_OFFSET = 0\nP_UPDATE = $(eval P_STATUS=$(shell echo $(OBJS) $(PROGRAM_PREFIX)yosys$(EXE) | $(AWK) 'BEGIN { RS = \" \"; I = $(P_STATUS)+0; } $$1 == \"$@\" && NR > I { I = NR; } END { print I; }'))\nP_SHOW = [$(shell $(AWK) \"BEGIN { N=$(words $(OBJS) $(PROGRAM_PREFIX)yosys$(EXE)); printf \\\"%3d\\\", $(P_OFFSET)+90*$(P_STATUS)/N; exit; }\")%]\nP = @echo \"$(if $(findstring $@,$(TARGETS) $(EXTRA_TARGETS)),$(eval P_OFFSET = 10))$(call P_UPDATE)$(call P_SHOW) Building $@\";\nQ = @\nS = -s\nelse\nP_SHOW = ->\nP =\nQ =\nS =\nendif\n\n$(eval $(call add_include_file,kernel/binding.h))\n$(eval $(call add_include_file,kernel/bitpattern.h))\n$(eval $(call add_include_file,kernel/cellaigs.h))\n$(eval $(call add_include_file,kernel/celledges.h))\n$(eval $(call add_include_file,kernel/celltypes.h))\n$(eval $(call add_include_file,kernel/consteval.h))\n$(eval $(call add_include_file,kernel/constids.inc))\n$(eval $(call add_include_file,kernel/cost.h))\n$(eval $(call add_include_file,kernel/drivertools.h))\n$(eval $(call add_include_file,kernel/ff.h))\n$(eval $(call add_include_file,kernel/ffinit.h))\n$(eval $(call add_include_file,kernel/ffmerge.h))\n$(eval $(call add_include_file,kernel/fmt.h))\nifeq ($(ENABLE_ZLIB),1)\n$(eval $(call add_include_file,kernel/fstdata.h))\nendif\n$(eval $(call add_include_file,kernel/hashlib.h))\n$(eval $(call add_include_file,kernel/json.h))\n$(eval $(call add_include_file,kernel/log.h))\n$(eval $(call add_include_file,kernel/macc.h))\n$(eval $(call add_include_file,kernel/modtools.h))\n$(eval $(call add_include_file,kernel/mem.h))\n$(eval $(call add_include_file,kernel/qcsat.h))\n$(eval $(call add_include_file,kernel/register.h))\n$(eval $(call add_include_file,kernel/rtlil.h))\n$(eval $(call add_include_file,kernel/satgen.h))\n$(eval $(call add_include_file,kernel/scopeinfo.h))\n$(eval $(call add_include_file,kernel/sexpr.h))\n$(eval $(call add_include_file,kernel/sigtools.h))\n$(eval $(call add_include_file,kernel/timinginfo.h))\n$(eval $(call add_include_file,kernel/utils.h))\n$(eval $(call add_include_file,kernel/yosys.h))\n$(eval $(call add_include_file,kernel/yosys_common.h))\n$(eval $(call add_include_file,kernel/yw.h))\n$(eval $(call add_include_file,libs/ezsat/ezsat.h))\n$(eval $(call add_include_file,libs/ezsat/ezminisat.h))\nifeq ($(ENABLE_ZLIB),1)\n$(eval $(call add_include_file,libs/fst/fstapi.h))\nendif\n$(eval $(call add_include_file,libs/sha1/sha1.h))\n$(eval $(call add_include_file,libs/json11/json11.hpp))\n$(eval $(call add_include_file,passes/fsm/fsmdata.h))\n$(eval $(call add_include_file,frontends/ast/ast.h))\n$(eval $(call add_include_file,frontends/ast/ast_binding.h))\n$(eval $(call add_include_file,frontends/blif/blifparse.h))\n$(eval $(call add_include_file,backends/rtlil/rtlil_backend.h))\n\nOBJS += kernel/driver.o kernel/register.o kernel/rtlil.o kernel/log.o kernel/calc.o kernel/yosys.o\nOBJS += kernel/binding.o kernel/tclapi.o\nOBJS += kernel/cellaigs.o kernel/celledges.o kernel/cost.o kernel/satgen.o kernel/scopeinfo.o kernel/qcsat.o kernel/mem.o kernel/ffmerge.o kernel/ff.o kernel/yw.o kernel/json.o kernel/fmt.o kernel/sexpr.o\nOBJS += kernel/drivertools.o kernel/functional.o\nifeq ($(ENABLE_ZLIB),1)\nOBJS += kernel/fstdata.o\nendif\nifeq ($(ENABLE_PLUGINS),1)\nifeq ($(OS), MINGW)\nOBJS += libs/dlfcn-win32/dlfcn.o\nendif\nendif\n\nkernel/log.o: CXXFLAGS += -DYOSYS_SRC='\"$(YOSYS_SRC)\"'\nkernel/yosys.o: CXXFLAGS += -DYOSYS_DATDIR='\"$(DATDIR)\"' -DYOSYS_PROGRAM_PREFIX='\"$(PROGRAM_PREFIX)\"'\nifeq ($(ENABLE_ABC),1)\nifneq ($(ABCEXTERNAL),)\nkernel/yosys.o: CXXFLAGS += -DABCEXTERNAL='\"$(ABCEXTERNAL)\"'\nendif\nendif\n\nOBJS += libs/bigint/BigIntegerAlgorithms.o libs/bigint/BigInteger.o libs/bigint/BigIntegerUtils.o\nOBJS += libs/bigint/BigUnsigned.o libs/bigint/BigUnsignedInABase.o\n\nOBJS += libs/sha1/sha1.o\n\nOBJS += libs/json11/json11.o\n\nOBJS += libs/ezsat/ezsat.o\nOBJS += libs/ezsat/ezminisat.o\n\nOBJS += libs/minisat/Options.o\nOBJS += libs/minisat/SimpSolver.o\nOBJS += libs/minisat/Solver.o\nOBJS += libs/minisat/System.o\n\nifeq ($(ENABLE_ZLIB),1)\nOBJS += libs/fst/fstapi.o\nOBJS += libs/fst/fastlz.o\nOBJS += libs/fst/lz4.o\nendif\n\nifneq ($(SMALL),1)\n\nOBJS += libs/subcircuit/subcircuit.o\n\ninclude $(YOSYS_SRC)/frontends/*/Makefile.inc\ninclude $(YOSYS_SRC)/passes/*/Makefile.inc\ninclude $(YOSYS_SRC)/backends/*/Makefile.inc\ninclude $(YOSYS_SRC)/techlibs/*/Makefile.inc\n\nelse\n\ninclude $(YOSYS_SRC)/frontends/verilog/Makefile.inc\nifeq ($(ENABLE_VERIFIC),1)\ninclude $(YOSYS_SRC)/frontends/verific/Makefile.inc\nendif\ninclude $(YOSYS_SRC)/frontends/rtlil/Makefile.inc\ninclude $(YOSYS_SRC)/frontends/ast/Makefile.inc\ninclude $(YOSYS_SRC)/frontends/blif/Makefile.inc\n\nOBJS += passes/hierarchy/hierarchy.o\nOBJS += passes/cmds/select.o\nOBJS += passes/cmds/show.o\nOBJS += passes/cmds/stat.o\nOBJS += passes/cmds/cover.o\nOBJS += passes/cmds/design.o\nOBJS += passes/cmds/plugin.o\n\ninclude $(YOSYS_SRC)/passes/proc/Makefile.inc\ninclude $(YOSYS_SRC)/passes/opt/Makefile.inc\ninclude $(YOSYS_SRC)/passes/techmap/Makefile.inc\n\ninclude $(YOSYS_SRC)/backends/verilog/Makefile.inc\ninclude $(YOSYS_SRC)/backends/rtlil/Makefile.inc\n\ninclude $(YOSYS_SRC)/techlibs/common/Makefile.inc\n\nendif\n\nifeq ($(LINK_ABC),1)\nOBJS += $(PROGRAM_PREFIX)yosys-libabc.a\nendif\n\n# prevent the CXXFLAGS set by this Makefile from reaching abc/Makefile,\n# especially the -MD flag which will break the build when CXX is clang\nunexport CXXFLAGS\n\ntop-all: $(TARGETS) $(EXTRA_TARGETS)\n\t@echo \"\"\n\t@echo \"  Build successful.\"\n\t@echo \"\"\n\n.PHONY: compile-only\ncompile-only: $(OBJS) $(GENFILES) $(EXTRA_TARGETS)\n\t@echo \"\"\n\t@echo \"  Compile successful.\"\n\t@echo \"\"\n\n.PHONY: share\nshare: $(EXTRA_TARGETS)\n\t@echo \"\"\n\t@echo \"  Share directory created.\"\n\t@echo \"\"\n\n$(PROGRAM_PREFIX)yosys$(EXE): $(OBJS)\n\t$(P) $(CXX) -o $(PROGRAM_PREFIX)yosys$(EXE) $(EXE_LINKFLAGS) $(LINKFLAGS) $(OBJS) $(LIBS) $(LIBS_VERIFIC)\n\nlibyosys.so: $(filter-out kernel/driver.o,$(OBJS))\nifeq ($(OS), Darwin)\n\t$(P) $(CXX) -o libyosys.so -shared -undefined dynamic_lookup -Wl,-install_name,$(LIBDIR)/libyosys.so $(LINKFLAGS) $^ $(LIBS) $(LIBS_VERIFIC)\nelse\n\t$(P) $(CXX) -o libyosys.so -shared -Wl,-soname,$(LIBDIR)/libyosys.so $(LINKFLAGS) $^ $(LIBS) $(LIBS_VERIFIC)\nendif\n\n%.o: %.cc\n\t$(Q) mkdir -p $(dir $@)\n\t$(P) $(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $<\n\n%.pyh: %.h\n\t$(Q) mkdir -p $(dir $@)\n\t$(P) cat $< | grep -E -v \"#[ ]*(include|error)\" | $(CXX) $(CXXFLAGS) -x c++ -o $@ -E -P -\n\nifeq ($(ENABLE_PYOSYS),1)\n$(PY_WRAPPER_FILE).cc: misc/$(PY_GEN_SCRIPT).py $(PY_WRAP_INCLUDES)\n\t$(Q) mkdir -p $(dir $@)\n\t$(P) python$(PYTHON_VERSION) -c \"from misc import $(PY_GEN_SCRIPT); $(PY_GEN_SCRIPT).gen_wrappers(\\\"$(PY_WRAPPER_FILE).cc\\\")\"\nendif\n\n%.o: %.cpp\n\t$(Q) mkdir -p $(dir $@)\n\t$(P) $(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $<\n\nYOSYS_VER_STR := Yosys $(YOSYS_VER) (git sha1 $(GIT_REV), $(notdir $(CXX)) $(shell \\\n\t\t$(CXX) --version | tr ' ()' '\\n' | grep '^[0-9]' | head -n1) $(filter -f% -m% -O% -DNDEBUG,$(CXXFLAGS)))\n\nkernel/version_$(GIT_REV).cc: $(YOSYS_SRC)/Makefile\n\t$(P) rm -f kernel/version_*.o kernel/version_*.d kernel/version_*.cc\n\t$(Q) mkdir -p kernel && echo \"namespace Yosys { extern const char *yosys_version_str; const char *yosys_version_str=\\\"$(YOSYS_VER_STR)\\\"; }\" > kernel/version_$(GIT_REV).cc\n\nifeq ($(ENABLE_VERIFIC),1)\nCXXFLAGS_NOVERIFIC = $(foreach v,$(CXXFLAGS),$(if $(findstring $(VERIFIC_DIR),$(v)),,$(v)))\nLIBS_NOVERIFIC = $(foreach v,$(LIBS),$(if $(findstring $(VERIFIC_DIR),$(v)),,$(v)))\nelse\nCXXFLAGS_NOVERIFIC = $(CXXFLAGS)\nLIBS_NOVERIFIC = $(LIBS)\nendif\n\n$(PROGRAM_PREFIX)yosys-config: misc/yosys-config.in $(YOSYS_SRC)/Makefile\n\t$(P) $(SED) -e 's#@CXXFLAGS@#$(subst -Ilibs/dlfcn-win32,,$(subst -I. -I\"$(YOSYS_SRC)\",-I\"$(DATDIR)/include\",$(strip $(CXXFLAGS_NOVERIFIC))))#;' \\\n\t\t\t-e 's#@CXX@#$(strip $(CXX))#;' -e 's#@LINKFLAGS@#$(strip $(LINKFLAGS) $(PLUGIN_LINKFLAGS))#;' -e 's#@LIBS@#$(strip $(LIBS_NOVERIFIC) $(PLUGIN_LIBS))#;' \\\n\t\t\t-e 's#@BINDIR@#$(strip $(BINDIR))#;' -e 's#@DATDIR@#$(strip $(DATDIR))#;' < $< > $(PROGRAM_PREFIX)yosys-config\n\t$(Q) chmod +x $(PROGRAM_PREFIX)yosys-config\n\n.PHONY: check-git-abc\n\ncheck-git-abc:\n\t@if [ ! -d \"$(YOSYS_SRC)/abc\" ]; then \\\n\t\techo \"Error: The 'abc' directory does not exist.\"; \\\n\t\techo \"Initialize the submodule: Run 'git submodule update --init' to set up 'abc' as a submodule.\"; \\\n\t\texit 1; \\\n\telif git -C \"$(YOSYS_SRC)\" submodule status abc 2>/dev/null | grep -q '^ '; then \\\n\t\texit 0; \\\n\telif [ -f \"$(YOSYS_SRC)/abc/.gitcommit\" ] && ! grep -q '\\$$Format:%[hH]\\$$' \"$(YOSYS_SRC)/abc/.gitcommit\"; then \\\n\t\techo \"'abc' comes from a tarball. Continuing.\"; \\\n\t\texit 0; \\\n\telif [ -f \"$(YOSYS_SRC)/abc/.gitcommit\" ] && grep -q '\\$$Format:%[hH]\\$$' \"$(YOSYS_SRC)/abc/.gitcommit\"; then \\\n\t\techo \"Error: 'abc' is not configured as a git submodule.\"; \\\n\t\techo \"To resolve this:\"; \\\n\t\techo \"1. Back up your changes: Save any modifications from the 'abc' directory to another location.\"; \\\n\t\techo \"2. Remove the existing 'abc' directory: Delete the 'abc' directory and all its contents.\"; \\\n\t\techo \"3. Initialize the submodule: Run 'git submodule update --init' to set up 'abc' as a submodule.\"; \\\n\t\techo \"4. Reapply your changes: Move your saved changes back to the 'abc' directory, if necessary.\"; \\\n\t\texit 1; \\\n\telse \\\n\t\techo \"Initialize the submodule: Run 'git submodule update --init' to set up 'abc' as a submodule.\"; \\\n\t\texit 1; \\\n\tfi\n\nabc/abc$(EXE) abc/libabc.a: | check-git-abc\n\t$(P)\n\t$(Q) mkdir -p abc && $(MAKE) -C $(PROGRAM_PREFIX)abc -f \"$(realpath $(YOSYS_SRC)/abc/Makefile)\" ABCSRC=\"$(realpath $(YOSYS_SRC)/abc/)\" $(S) $(ABCMKARGS) $(if $(filter %.a,$@),PROG=\"abc\",PROG=\"abc$(EXE)\") MSG_PREFIX=\"$(eval P_OFFSET = 5)$(call P_SHOW)$(eval P_OFFSET = 10) ABC: \" $(if $(filter %.a,$@),libabc.a)\n\n$(PROGRAM_PREFIX)yosys-abc$(EXE): abc/abc$(EXE)\n\t$(P) cp $< $(PROGRAM_PREFIX)yosys-abc$(EXE)\n\n$(PROGRAM_PREFIX)yosys-libabc.a: abc/libabc.a\n\t$(P) cp $< $(PROGRAM_PREFIX)yosys-libabc.a\n\nifneq ($(SEED),)\nSEEDOPT=\"-S $(SEED)\"\nelse\nSEEDOPT=\"\"\nendif\n\nifneq ($(ABCEXTERNAL),)\nABCOPT=\"-A $(ABCEXTERNAL)\"\nelse\nABCOPT=\"\"\nendif\n\n# Tests that generate .mk with tests/gen-tests-makefile.sh\nMK_TEST_DIRS =\nMK_TEST_DIRS += tests/arch/anlogic\nMK_TEST_DIRS += tests/arch/ecp5\nMK_TEST_DIRS += tests/arch/efinix\nMK_TEST_DIRS += tests/arch/gatemate\nMK_TEST_DIRS += tests/arch/gowin\nMK_TEST_DIRS += tests/arch/ice40\nMK_TEST_DIRS += tests/arch/intel_alm\nMK_TEST_DIRS += tests/arch/machxo2\nMK_TEST_DIRS += tests/arch/microchip\nMK_TEST_DIRS += tests/arch/nanoxplore\nMK_TEST_DIRS += tests/arch/nexus\nMK_TEST_DIRS += tests/arch/quicklogic/pp3\nMK_TEST_DIRS += tests/arch/quicklogic/qlf_k6n10f\nMK_TEST_DIRS += tests/arch/xilinx\nMK_TEST_DIRS += tests/opt\nMK_TEST_DIRS += tests/sat\nMK_TEST_DIRS += tests/sim\nMK_TEST_DIRS += tests/svtypes\nMK_TEST_DIRS += tests/techmap\nMK_TEST_DIRS += tests/various\nifeq ($(ENABLE_VERIFIC),1)\nifneq ($(YOSYS_NOVERIFIC),1)\nMK_TEST_DIRS += tests/verific\nendif\nendif\nMK_TEST_DIRS += tests/verilog\n\n# Tests that don't generate .mk\nSH_TEST_DIRS =\nSH_TEST_DIRS += tests/simple\nSH_TEST_DIRS += tests/simple_abc9\nSH_TEST_DIRS += tests/hana\nSH_TEST_DIRS += tests/asicworld\n# SH_TEST_DIRS += tests/realmath\nSH_TEST_DIRS += tests/share\nSH_TEST_DIRS += tests/opt_share\nSH_TEST_DIRS += tests/fsm\nSH_TEST_DIRS += tests/memlib\nSH_TEST_DIRS += tests/bram\nSH_TEST_DIRS += tests/svinterfaces\nSH_TEST_DIRS += tests/xprop\nSH_TEST_DIRS += tests/select\nSH_TEST_DIRS += tests/proc\nSH_TEST_DIRS += tests/blif\nSH_TEST_DIRS += tests/arch\nSH_TEST_DIRS += tests/rpc\nSH_TEST_DIRS += tests/memfile\nSH_TEST_DIRS += tests/fmt\nSH_TEST_DIRS += tests/cxxrtl\nifeq ($(ENABLE_FUNCTIONAL_TESTS),1)\nSH_TEST_DIRS += tests/functional\nendif\n\n# Tests that don't generate .mk and need special args\nSH_ABC_TEST_DIRS =\nSH_ABC_TEST_DIRS += tests/memories\nSH_ABC_TEST_DIRS += tests/aiger\nSH_ABC_TEST_DIRS += tests/alumacc\n\n# seed-tests/ is a dummy string, not a directory\n.PHONY: seed-tests\nseed-tests: $(SH_TEST_DIRS:%=seed-tests/%)\n.PHONY: seed-tests/%\nseed-tests/%: %/run-test.sh $(TARGETS) $(EXTRA_TARGETS)\n\t+cd $* && bash run-test.sh $(SEEDOPT)\n\t+@echo \"...passed tests in $*\"\n\n# abcopt-tests/ is a dummy string, not a directory\n.PHONY: abcopt-tests\nabcopt-tests: $(SH_ABC_TEST_DIRS:%=abcopt-tests/%)\nabcopt-tests/%: %/run-test.sh $(TARGETS) $(EXTRA_TARGETS)\n\t+cd $* && bash run-test.sh $(ABCOPT) $(SEEDOPT)\n\t+@echo \"...passed tests in $*\"\n\n# makefile-tests/ is a dummy string, not a directory\n.PHONY: makefile-tests\nmakefile-tests: $(MK_TEST_DIRS:%=makefile-tests/%)\n# this target actually emits .mk files\n%.mk:\n\t+cd $(dir $*) && bash run-test.sh\n# this one spawns submake on each\nmakefile-tests/%: %/run-test.mk $(TARGETS) $(EXTRA_TARGETS)\n\t$(MAKE) -C $* -f run-test.mk\n\t+@echo \"...passed tests in $*\"\n\ntest: makefile-tests abcopt-tests seed-tests\n\t@echo \"\"\n\t@echo \"  Passed \\\"make test\\\".\"\nifeq ($(ENABLE_VERIFIC),1)\nifeq ($(YOSYS_NOVERIFIC),1)\n\t@echo \"  Ran tests without verific support due to YOSYS_NOVERIFIC=1.\"\nendif\nendif\n\t@echo \"\"\n\nVALGRIND ?= valgrind --error-exitcode=1 --leak-check=full --show-reachable=yes --errors-for-leak-kinds=all\n\nvgtest: $(TARGETS) $(EXTRA_TARGETS)\n\t$(VALGRIND) ./yosys -p 'setattr -mod -unset top; synth' $$( ls tests/simple/*.v | grep -v repwhile.v )\n\t@echo \"\"\n\t@echo \"  Passed \\\"make vgtest\\\".\"\n\t@echo \"\"\n\nvloghtb: $(TARGETS) $(EXTRA_TARGETS)\n\t+cd tests/vloghtb && bash run-test.sh\n\t@echo \"\"\n\t@echo \"  Passed \\\"make vloghtb\\\".\"\n\t@echo \"\"\n\nystests: $(TARGETS) $(EXTRA_TARGETS)\n\trm -rf tests/ystests\n\tgit clone https://github.com/YosysHQ/yosys-tests.git tests/ystests\n\t+$(MAKE) PATH=\"$$PWD:$$PATH\" -C tests/ystests\n\t@echo \"\"\n\t@echo \"  Finished \\\"make ystests\\\".\"\n\t@echo \"\"\n\n# Unit test\nunit-test: libyosys.so\n\t@$(MAKE) -C $(UNITESTPATH) CXX=\"$(CXX)\" CC=\"$(CC)\" CPPFLAGS=\"$(CPPFLAGS)\" \\\n\t\tCXXFLAGS=\"$(CXXFLAGS)\" LINKFLAGS=\"$(LINKFLAGS)\" LIBS=\"$(LIBS)\" ROOTPATH=\"$(CURDIR)\"\n\nclean-unit-test:\n\t@$(MAKE) -C $(UNITESTPATH) clean\n\ninstall: $(TARGETS) $(EXTRA_TARGETS)\n\t$(INSTALL_SUDO) mkdir -p $(DESTDIR)$(BINDIR)\n\t$(INSTALL_SUDO) cp $(filter-out libyosys.so,$(TARGETS)) $(DESTDIR)$(BINDIR)\nifneq ($(filter $(PROGRAM_PREFIX)yosys,$(TARGETS)),)\n\t$(INSTALL_SUDO) $(STRIP) -S $(DESTDIR)$(BINDIR)/$(PROGRAM_PREFIX)yosys\nendif\nifneq ($(filter $(PROGRAM_PREFIX)yosys-abc,$(TARGETS)),)\n\t$(INSTALL_SUDO) $(STRIP) $(DESTDIR)$(BINDIR)/$(PROGRAM_PREFIX)yosys-abc\nendif\nifneq ($(filter $(PROGRAM_PREFIX)yosys-filterlib,$(TARGETS)),)\n\t$(INSTALL_SUDO) $(STRIP) $(DESTDIR)$(BINDIR)/$(PROGRAM_PREFIX)yosys-filterlib\nendif\n\t$(INSTALL_SUDO) mkdir -p $(DESTDIR)$(DATDIR)\n\t$(INSTALL_SUDO) cp -r share/. $(DESTDIR)$(DATDIR)/.\nifeq ($(ENABLE_LIBYOSYS),1)\n\t$(INSTALL_SUDO) mkdir -p $(DESTDIR)$(LIBDIR)\n\t$(INSTALL_SUDO) cp libyosys.so $(DESTDIR)$(LIBDIR)/\n\t$(INSTALL_SUDO) $(STRIP) -S $(DESTDIR)$(LIBDIR)/libyosys.so\nifeq ($(ENABLE_PYOSYS),1)\n\t$(INSTALL_SUDO) mkdir -p $(DESTDIR)$(PYTHON_DESTDIR)/$(subst -,_,$(PROGRAM_PREFIX))pyosys\n\t$(INSTALL_SUDO) cp libyosys.so $(DESTDIR)$(PYTHON_DESTDIR)/$(subst -,_,$(PROGRAM_PREFIX))pyosys/libyosys.so\n\t$(INSTALL_SUDO) cp misc/__init__.py $(DESTDIR)$(PYTHON_DESTDIR)/$(subst -,_,$(PROGRAM_PREFIX))pyosys/\nendif\nendif\nifeq ($(ENABLE_PLUGINS),1)\nifeq ($(OS), MINGW)\n\t$(INSTALL_SUDO) mkdir -p $(DESTDIR)$(LIBDIR)\n\t$(INSTALL_SUDO) cp libyosys_exe.a $(DESTDIR)$(LIBDIR)/\nendif\nendif\n\nuninstall:\n\t$(INSTALL_SUDO) rm -vf $(addprefix $(DESTDIR)$(BINDIR)/,$(notdir $(TARGETS)))\n\t$(INSTALL_SUDO) rm -rvf $(DESTDIR)$(DATDIR)\nifeq ($(ENABLE_LIBYOSYS),1)\n\t$(INSTALL_SUDO) rm -vf $(DESTDIR)$(LIBDIR)/libyosys.so\nifeq ($(ENABLE_PYOSYS),1)\n\t$(INSTALL_SUDO) rm -vf $(DESTDIR)$(PYTHON_DESTDIR)/$(subst -,_,$(PROGRAM_PREFIX))pyosys/libyosys.so\n\t$(INSTALL_SUDO) rm -vf $(DESTDIR)$(PYTHON_DESTDIR)/$(subst -,_,$(PROGRAM_PREFIX))pyosys/__init__.py\n\t$(INSTALL_SUDO) rmdir $(DESTDIR)$(PYTHON_DESTDIR)/$(subst -,_,$(PROGRAM_PREFIX))pyosys\nendif\nendif\n\n# also others, but so long as it doesn't fail this is enough to know we tried\ndocs/source/cmd/abc.rst: $(TARGETS) $(EXTRA_TARGETS)\n\t$(Q) mkdir -p docs/source/cmd\n\t$(Q) mkdir -p temp/docs/source/cmd\n\t$(Q) cd temp && ./../$(PROGRAM_PREFIX)yosys -p 'help -write-rst-command-reference-manual'\n\t$(Q) rsync -rc temp/docs/source/cmd docs/source\n\t$(Q) rm -rf temp\ndocs/source/cell/word_add.rst: $(TARGETS) $(EXTRA_TARGETS)\n\t$(Q) mkdir -p docs/source/cell\n\t$(Q) mkdir -p temp/docs/source/cell\n\t$(Q) cd temp && ./../$(PROGRAM_PREFIX)yosys -p 'help -write-rst-cells-manual'\n\t$(Q) rsync -rc temp/docs/source/cell docs/source\n\t$(Q) rm -rf temp\n\ndocs/source/generated/cells.json: docs/source/generated $(TARGETS) $(EXTRA_TARGETS)\n\t$(Q) ./$(PROGRAM_PREFIX)yosys -p 'help -dump-cells-json $@'\n\nPHONY: docs/gen docs/usage docs/reqs\ndocs/gen: $(TARGETS)\n\t$(Q) $(MAKE) -C docs gen\n\ndocs/source/generated:\n\t$(Q) mkdir -p docs/source/generated\n\n# some commands return an error and print the usage text to stderr\ndefine DOC_USAGE_STDERR\ndocs/source/generated/$(1): $(TARGETS) docs/source/generated\n\t-$(Q) ./$(PROGRAM_PREFIX)$(1) --help 2> $$@\nendef\nDOCS_USAGE_STDERR := yosys-config yosys-filterlib\n\n# The in-tree ABC (yosys-abc) is only built when ABCEXTERNAL is not set.\nifeq ($(ABCEXTERNAL),)\nDOCS_USAGE_STDERR += yosys-abc\nendif\n\n$(foreach usage,$(DOCS_USAGE_STDERR),$(eval $(call DOC_USAGE_STDERR,$(usage))))\n\n# others print to stdout\ndefine DOC_USAGE_STDOUT\ndocs/source/generated/$(1): $(TARGETS) docs/source/generated\n\t$(Q) ./$(PROGRAM_PREFIX)$(1) --help > $$@\nendef\nDOCS_USAGE_STDOUT := yosys yosys-smtbmc yosys-witness\n$(foreach usage,$(DOCS_USAGE_STDOUT),$(eval $(call DOC_USAGE_STDOUT,$(usage))))\n\ndocs/usage: $(addprefix docs/source/generated/,$(DOCS_USAGE_STDOUT) $(DOCS_USAGE_STDERR))\n\ndocs/reqs:\n\t$(Q) $(MAKE) -C docs reqs\n\n.PHONY: docs/prep\ndocs/prep: docs/source/cmd/abc.rst docs/source/generated/cells.json docs/gen docs/usage\n\nDOC_TARGET ?= html\ndocs: docs/prep\n\t$(Q) $(MAKE) -C docs $(DOC_TARGET)\n\nclean:\n\trm -rf share\n\trm -rf kernel/*.pyh\n\trm -f $(OBJS) $(GENFILES) $(TARGETS) $(EXTRA_TARGETS) $(EXTRA_OBJS) $(PY_WRAP_INCLUDES) $(PY_WRAPPER_FILE).cc\n\trm -f kernel/version_*.o kernel/version_*.cc\n\trm -f libs/*/*.d frontends/*/*.d passes/*/*.d backends/*/*.d kernel/*.d techlibs/*/*.d\n\trm -rf tests/asicworld/*.out tests/asicworld/*.log\n\trm -rf tests/hana/*.out tests/hana/*.log\n\trm -rf tests/simple/*.out tests/simple/*.log\n\trm -rf tests/memories/*.out tests/memories/*.log tests/memories/*.dmp\n\trm -rf tests/sat/*.log tests/techmap/*.log tests/various/*.log\n\trm -rf tests/bram/temp tests/fsm/temp tests/realmath/temp tests/share/temp tests/smv/temp tests/various/temp\n\trm -rf vloghtb/Makefile vloghtb/refdat vloghtb/rtl vloghtb/scripts vloghtb/spec vloghtb/check_yosys vloghtb/vloghammer_tb.tar.bz2 vloghtb/temp vloghtb/log_test_*\n\trm -f tests/svinterfaces/*.log_stdout tests/svinterfaces/*.log_stderr tests/svinterfaces/dut_result.txt tests/svinterfaces/reference_result.txt tests/svinterfaces/a.out tests/svinterfaces/*_syn.v tests/svinterfaces/*.diff\n\trm -f  tests/tools/cmp_tbdata\n\t-$(MAKE) -C docs clean\n\t-$(MAKE) -C docs/images clean\n\trm -rf docs/source/cmd docs/util/__pycache__\n\nclean-abc:\n\t$(MAKE) -C abc DEP= clean\n\trm -f $(PROGRAM_PREFIX)yosys-abc$(EXE) $(PROGRAM_PREFIX)yosys-libabc.a abc/abc-[0-9a-f]* abc/libabc-[0-9a-f]*.a\n\nmrproper: clean\n\tgit clean -xdf\n\ncoverage:\n\t./$(PROGRAM_PREFIX)yosys -qp 'help; help -all'\n\trm -rf coverage.info coverage_html\n\tlcov --capture -d . --no-external -o coverage.info\n\tgenhtml coverage.info --output-directory coverage_html\n\nclean_coverage:\n\tfind . -name \"*.gcda\" -type f -delete\n\nFUNC_KERNEL := functional.cc functional.h sexpr.cc sexpr.h compute_graph.h\nFUNC_INCLUDES := $(addprefix --include *,functional/* $(FUNC_KERNEL))\ncoverage_functional:\n\trm -rf coverage.info coverage_html\n\tlcov --capture -d backends/functional -d kernel $(FUNC_INCLUDES) --no-external -o coverage.info\n\tgenhtml coverage.info --output-directory coverage_html\n\nqtcreator:\n\techo \"$(CXXFLAGS)\" | grep -o '\\-D[^ ]*' | tr ' ' '\\n' | sed 's/-D/#define /' | sed 's/=/ /'> qtcreator.config\n\t{ for file in $(basename $(OBJS)); do \\\n\t\tfor prefix in cc y l; do if [ -f $${file}.$${prefix} ]; then echo $$file.$${prefix}; fi; done \\\n\tdone; find backends frontends kernel libs passes -type f \\( -name '*.h' -o -name '*.hh' \\); } > qtcreator.files\n\t{ echo .; find backends frontends kernel libs passes -type f \\( -name '*.h' -o -name '*.hh' \\) -printf '%h\\n' | sort -u; } > qtcreator.includes\n\ttouch qtcreator.creator\n\nvcxsrc: $(GENFILES) $(EXTRA_TARGETS)\n\trm -rf yosys-win32-vcxsrc-$(YOSYS_VER){,.zip}\n\tset -e; for f in `ls $(filter %.cc %.cpp,$(GENFILES)) $(addsuffix .cc,$(basename $(OBJS))) $(addsuffix .cpp,$(basename $(OBJS))) 2> /dev/null`; do \\\n\t\techo \"Analyse: $$f\" >&2; cpp -std=c++17 -MM -I. -D_YOSYS_ $$f; done | sed 's,.*:,,; s,//*,/,g; s,/[^/]*/\\.\\./,/,g; y, \\\\,\\n\\n,;' | grep '^[^/]' | sort -u | grep -v kernel/version_ > srcfiles.txt\n\techo \"libs/fst/fst_win_unistd.h\" >> srcfiles.txt\n\tbash misc/create_vcxsrc.sh yosys-win32-vcxsrc $(YOSYS_VER) $(GIT_REV)\n\techo \"namespace Yosys { extern const char *yosys_version_str; const char *yosys_version_str=\\\"Yosys (Version Information Unavailable)\\\"; }\" > kernel/version.cc\n\tzip yosys-win32-vcxsrc-$(YOSYS_VER)/genfiles.zip $(GENFILES) kernel/version.cc\n\tzip -r yosys-win32-vcxsrc-$(YOSYS_VER).zip yosys-win32-vcxsrc-$(YOSYS_VER)/\n\trm -f srcfiles.txt kernel/version.cc\n\nconfig-clean: clean\n\trm -f Makefile.conf\n\nconfig-clang: clean\n\techo 'CONFIG := clang' > Makefile.conf\n\nconfig-gcc: clean\n\techo 'CONFIG := gcc' > Makefile.conf\n\nconfig-gcc-static: clean\n\techo 'CONFIG := gcc-static' > Makefile.conf\n\techo 'ENABLE_PLUGINS := 0' >> Makefile.conf\n\techo 'ENABLE_READLINE := 0' >> Makefile.conf\n\techo 'ENABLE_TCL := 0' >> Makefile.conf\n\nconfig-wasi: clean\n\techo 'CONFIG := wasi' > Makefile.conf\n\techo 'ENABLE_TCL := 0' >> Makefile.conf\n\techo 'ENABLE_ABC := 0' >> Makefile.conf\n\techo 'ENABLE_PLUGINS := 0' >> Makefile.conf\n\techo 'ENABLE_READLINE := 0' >> Makefile.conf\n\techo 'ENABLE_ZLIB := 0' >> Makefile.conf\n\nconfig-msys2-32: clean\n\techo 'CONFIG := msys2-32' > Makefile.conf\n\techo \"PREFIX := $(MINGW_PREFIX)\" >> Makefile.conf\n\nconfig-msys2-64: clean\n\techo 'CONFIG := msys2-64' > Makefile.conf\n\techo \"PREFIX := $(MINGW_PREFIX)\" >> Makefile.conf\n\nconfig-gcov: clean\n\techo 'CONFIG := gcc' > Makefile.conf\n\techo 'ENABLE_GCOV := 1' >> Makefile.conf\n\techo 'ENABLE_DEBUG := 1' >> Makefile.conf\n\nconfig-gprof: clean\n\techo 'CONFIG := gcc' > Makefile.conf\n\techo 'ENABLE_GPROF := 1' >> Makefile.conf\n\nconfig-sudo:\n\techo \"INSTALL_SUDO := sudo\" >> Makefile.conf\n\necho-yosys-ver:\n\t@echo \"$(YOSYS_VER)\"\n\necho-git-rev:\n\t@echo \"$(GIT_REV)\"\n\necho-cxx:\n\t@echo \"$(CXX)\"\n\n-include libs/*/*.d\n-include frontends/*/*.d\n-include passes/*/*.d\n-include backends/*/*.d\n-include kernel/*.d\n-include techlibs/*/*.d\n\n.PHONY: all top-all abc test install install-abc docs clean mrproper qtcreator coverage vcxsrc\n.PHONY: config-clean config-clang config-gcc config-gcc-static config-gprof config-sudo\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5576171875,
          "content": "yosys – Yosys Open SYnthesis Suite\n===================================\n\nThis is a framework for RTL synthesis tools. It currently has\nextensive Verilog-2005 support and provides a basic set of\nsynthesis algorithms for various application domains.\n\nYosys can be adapted to perform any synthesis job by combining\nthe existing passes (algorithms) using synthesis scripts and\nadding additional passes as needed by extending the yosys C++\ncode base.\n\nYosys is free software licensed under the ISC license (a GPL\ncompatible license that is similar in terms to the MIT license\nor the 2-clause BSD license).\n\nThird-party software distributed alongside this software\nis licensed under compatible licenses.\nPlease refer to `abc` and `libs` subdirectories for their license terms.\n\n\nWeb Site and Other Resources\n============================\n\nMore information and documentation can be found on the Yosys web site:\n- https://yosyshq.net/yosys/\n\nDocumentation from this repository is automatically built and available on Read\nthe Docs:\n- https://yosyshq.readthedocs.io/projects/yosys\n\nUsers interested in formal verification might want to use the formal\nverification front-end for Yosys, SBY:\n- https://yosyshq.readthedocs.io/projects/sby/\n- https://github.com/YosysHQ/sby\n\n\nInstallation\n============\n\nYosys is part of the [Tabby CAD Suite](https://www.yosyshq.com/tabby-cad-datasheet) and the [OSS CAD Suite](https://github.com/YosysHQ/oss-cad-suite-build)! The easiest way to use yosys is to install the binary software suite, which contains all required dependencies and related tools.\n\n* [Contact YosysHQ](https://www.yosyshq.com/contact) for a [Tabby CAD Suite](https://www.yosyshq.com/tabby-cad-datasheet) Evaluation License and download link\n* OR go to https://github.com/YosysHQ/oss-cad-suite-build/releases to download the free OSS CAD Suite\n* Follow the [Install Instructions on GitHub](https://github.com/YosysHQ/oss-cad-suite-build#installation)\n\nMake sure to get a Tabby CAD Suite Evaluation License if you need features such as industry-grade SystemVerilog and VHDL parsers!\n\nFor more information about the difference between Tabby CAD Suite and the OSS CAD Suite, please visit https://www.yosyshq.com/tabby-cad-datasheet\n\nMany Linux distributions also provide Yosys binaries, some more up to date than others. Check with your package manager!\n\n\nBuilding from Source\n====================\n\nFor more details, and instructions for other platforms, check [building from\nsource](https://yosyshq.readthedocs.io/projects/yosys/en/latest/getting_started/installation.html#building-from-source)\non Read the Docs.\n\nWhen cloning Yosys, some required libraries are included as git submodules. Make\nsure to call e.g.\n\n\t$ git clone --recurse-submodules https://github.com/YosysHQ/yosys.git\n\nor\n\n\t$ git clone https://github.com/YosysHQ/yosys.git\n\t$ cd yosys\n\t$ git submodule update --init --recursive\n\nYou need a C++ compiler with C++17 support (up-to-date CLANG or GCC is\nrecommended) and some standard tools such as GNU Flex, GNU Bison, and GNU Make.\nTCL, readline and libffi are optional (see ``ENABLE_*`` settings in Makefile).\nXdot (graphviz) is used by the ``show`` command in yosys to display schematics.\n\nFor example on Ubuntu Linux 16.04 LTS the following commands will install all\nprerequisites for building yosys:\n\n\t$ sudo apt-get install build-essential clang lld bison flex \\\n\t\tlibreadline-dev gawk tcl-dev libffi-dev git \\\n\t\tgraphviz xdot pkg-config python3 libboost-system-dev \\\n\t\tlibboost-python-dev libboost-filesystem-dev zlib1g-dev\n\nThe environment variable `CXX` can be used to control the C++ compiler used, or\nrun one of the following to override it:\n\n\t$ make config-clang\n\t$ make config-gcc\n\nThe Makefile has many variables influencing the build process. These can be\nadjusted by modifying the Makefile.conf file which is created at the `make\nconfig-...` step (see above), or they can be set by passing an option to the\nmake command directly:\n\n  $ make CXX=$CXX\n\nFor other compilers and build configurations it might be necessary to make some\nchanges to the config section of the Makefile. It's also an alternative way to\nset the make variables mentioned above.\n\n\t$ vi Makefile            # ..or..\n\t$ vi Makefile.conf\n\nTo build Yosys simply type 'make' in this directory.\n\n\t$ make\n\t$ sudo make install\n\nTests are located in the tests subdirectory and can be executed using the test\ntarget. Note that you need gawk as well as a recent version of iverilog (i.e.\nbuild from git). Then, execute tests via:\n\n\t$ make test\n\nTo use a separate (out-of-tree) build directory, provide a path to the Makefile.\n\n\t$ mkdir build; cd build\n\t$ make -f ../Makefile\n\nOut-of-tree builds require a clean source tree.\n\n\nGetting Started\n===============\n\nYosys can be used with the interactive command shell, with\nsynthesis scripts or with command line arguments. Let's perform\na simple synthesis job using the interactive command shell:\n\n\t$ ./yosys\n\tyosys>\n\nthe command ``help`` can be used to print a list of all available\ncommands and ``help <command>`` to print details on the specified command:\n\n\tyosys> help help\n\nreading and elaborating the design using the Verilog frontend:\n\n\tyosys> read -sv tests/simple/fiedler-cooley.v\n\tyosys> hierarchy -top up3down5\n\nwriting the design to the console in the RTLIL format used by Yosys\ninternally:\n\n\tyosys> write_rtlil\n\nconvert processes (``always`` blocks) to netlist elements and perform\nsome simple optimizations:\n\n\tyosys> proc; opt\n\ndisplay design netlist using ``xdot``:\n\n\tyosys> show\n\nthe same thing using ``gv`` as postscript viewer:\n\n\tyosys> show -format ps -viewer gv\n\ntranslating netlist to gate logic and perform some simple optimizations:\n\n\tyosys> techmap; opt\n\nwrite design netlist to a new Verilog file:\n\n\tyosys> write_verilog synth.v\n\nor using a simple synthesis script:\n\n\t$ cat synth.ys\n\tread -sv tests/simple/fiedler-cooley.v\n\thierarchy -top up3down5\n\tproc; opt; techmap; opt\n\twrite_verilog synth.v\n\n\t$ ./yosys synth.ys\n\nIf ABC is enabled in the Yosys build configuration and a cell library is given\nin the liberty file ``mycells.lib``, the following synthesis script will\nsynthesize for the given cell library:\n\n\t# read design\n\tread -sv tests/simple/fiedler-cooley.v\n\thierarchy -top up3down5\n\n\t# the high-level stuff\n\tproc; fsm; opt; memory; opt\n\n\t# mapping to internal cell library\n\ttechmap; opt\n\n\t# mapping flip-flops to mycells.lib\n\tdfflibmap -liberty mycells.lib\n\n\t# mapping logic to mycells.lib\n\tabc -liberty mycells.lib\n\n\t# cleanup\n\tclean\n\nIf you do not have a liberty file but want to test this synthesis script,\nyou can use the file ``examples/cmos/cmos_cells.lib`` from the yosys sources\nas simple example.\n\nLiberty file downloads for and information about free and open ASIC standard\ncell libraries can be found here:\n\n- http://www.vlsitechnology.org/html/libraries.html\n- http://www.vlsitechnology.org/synopsys/vsclib013.lib\n\nThe command ``synth`` provides a good default synthesis script (see\n``help synth``):\n\n\tread -sv tests/simple/fiedler-cooley.v\n\tsynth -top up3down5\n\n\t# mapping to target cells\n\tdfflibmap -liberty mycells.lib\n\tabc -liberty mycells.lib\n\tclean\n\nThe command ``prep`` provides a good default word-level synthesis script, as\nused in SMT-based formal verification.\n\n\nAdditional information\n======================\n\nThe ``read_verilog`` command, used by default when calling ``read`` with Verilog\nsource input, does not perform syntax checking.  You should instead lint your\nsource with another tool such as\n[Verilator](https://www.veripool.org/verilator/) first, e.g. by calling\n``verilator --lint-only``.\n\n\nBuilding the documentation\n==========================\n\nNote that there is no need to build the manual if you just want to read it.\nSimply visit https://yosys.readthedocs.io/en/latest/ instead.\n\nIn addition to those packages listed above for building Yosys from source, the\nfollowing are used for building the website: \n\n\t$ sudo apt install pdf2svg faketime\n\nOr for MacOS, using homebrew:\n\n  $ brew install pdf2svg libfaketime\n\nPDFLaTeX, included with most LaTeX distributions, is also needed during the\nbuild process for the website.  Or, run the following:\n\n\t$ sudo apt install texlive-latex-base texlive-latex-extra latexmk\n\nOr for MacOS, using homebrew:\n\n  $ brew install basictex\n  $ sudo tlmgr update --self   \n  $ sudo tlmgr install collection-latexextra latexmk tex-gyre\n\nThe Python package, Sphinx, is needed along with those listed in\n`docs/source/requirements.txt`:\n\n\t$ pip install -U sphinx -r docs/source/requirements.txt\n\nFrom the root of the repository, run `make docs`.  This will build/rebuild yosys\nas necessary before generating the website documentation from the yosys help\ncommands.  To build for pdf instead of html, call \n`make docs DOC_TARGET=latexpdf`.\n"
        },
        {
          "name": "abc",
          "type": "commit",
          "content": null
        },
        {
          "name": "backends",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.4619140625,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1705309234,\n        \"narHash\": \"sha256-uNRRNRKmJyCRC/8y1RqBkqWBLM034y4qN7EprSdmgyA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"1ef2e671c3b0c19053962c07dbda38332dcebf26\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1708807242,\n        \"narHash\": \"sha256-sRTRkhMD4delO/hPxxi+XwLqPn8BuUq6nnj4JqLwOu0=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"73de017ef2d18a04ac4bfd0c02650007ccb31c2a\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 1.7373046875,
          "content": "{\n  description = \"A nix flake for the Yosys synthesis suite\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n  };\n\n  outputs = { self, nixpkgs, flake-utils }:\n    flake-utils.lib.eachDefaultSystem (system:\n      let\n        pkgs = import nixpkgs {\n          inherit system;\n        };\n        # TODO: don't override src when ./abc is empty\n        # which happens when the command used is `nix build` and not `nix build ?submodules=1`\n        abc-verifier = pkgs.abc-verifier;\n        yosys = pkgs.clangStdenv.mkDerivation {\n          name = \"yosys\";\n          src = ./. ;\n          buildInputs = with pkgs; [ clang bison flex libffi tcl readline python3 zlib git pkg-configUpstream llvmPackages.bintools ];\n          checkInputs = with pkgs; [ gtest ];\n          propagatedBuildInputs = [ abc-verifier ];\n          preConfigure = \"make config-clang\";\n          checkTarget = \"unit-test\";\n          installPhase = ''\n            make install PREFIX=$out ABCEXTERNAL=yosys-abc\n            ln -s ${abc-verifier}/bin/abc $out/bin/yosys-abc\n          '';\n\t\t\t\t\tbuildPhase = ''\n            make -j$(nproc) ABCEXTERNAL=yosys-abc\n          '';\n          meta = with pkgs.lib; {\n            description = \"Yosys Open SYnthesis Suite\";\n            homepage = \"https://yosyshq.net/yosys/\";\n            license = licenses.isc;\n            maintainers = with maintainers; [ ];\n          };\n        };\n      in {\n        packages.default = yosys;\n        defaultPackage = yosys;\n        devShell = pkgs.mkShell {\n          buildInputs = with pkgs; [ clang llvmPackages.bintools gcc bison flex libffi tcl readline python3 zlib git gtest abc-verifier verilog boost python3Packages.boost ];\n        };\n      }\n    );\n}\n"
        },
        {
          "name": "frontends",
          "type": "tree",
          "content": null
        },
        {
          "name": "guidelines",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "passes",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.84765625,
          "content": "#!/usr/bin/env python3\n# Copyright (C) 2024 Efabless Corporation\n#\n# Permission to use, copy, modify, and/or distribute this software for any\n# purpose with or without fee is hereby granted, provided that the above\n# copyright notice and this permission notice appear in all copies.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\nimport os\nimport re\nimport shlex\nimport shutil\nfrom setuptools import setup, Extension\nfrom setuptools.command.build_ext import build_ext\n\n__dir__ = os.path.dirname(os.path.abspath(__file__))\n\nyosys_version_rx = re.compile(r\"YOSYS_VER\\s*:=\\s*([\\w\\-\\+\\.]+)\")\n\nversion = yosys_version_rx.search(\n    open(os.path.join(__dir__, \"Makefile\"), encoding=\"utf8\").read()\n)[1].replace(\n    \"+\", \".\"\n)  # Convert to patch version\n\n\nclass libyosys_so_ext(Extension):\n    def __init__(\n        self,\n    ) -> None:\n        super().__init__(\n            \"libyosys.so\",\n            [],\n        )\n        self.args = [\n            \"ENABLE_PYOSYS=1\",\n            # Wheel meant to be imported from interpreter\n            \"ENABLE_PYTHON_CONFIG_EMBED=0\",\n            # Would need to be installed separately by the user\n            \"ENABLE_TCL=0\",\n            \"ENABLE_READLINE=0\",\n            \"ENABLE_EDITLINE=0\",\n            # Always compile and include ABC in wheel\n            \"ABCEXTERNAL=\",\n            # Show compile commands\n            \"PRETTY=0\",\n        ]\n\n    def custom_build(self, bext: build_ext):\n        bext.spawn(\n            [\n                \"make\",\n                f\"-j{os.cpu_count() or 1}\",\n                self.name,\n                \"yosys-abc\",\n                \"share\",\n            ]\n            + shlex.split(os.getenv(\"makeFlags\", \"\"))\n            + self.args\n        )\n        build_path = os.path.dirname(os.path.dirname(bext.get_ext_fullpath(self.name)))\n        pyosys_path = os.path.join(build_path, \"pyosys\")\n        os.makedirs(pyosys_path, exist_ok=True)\n\n        # libyosys.so\n        target = os.path.join(pyosys_path, os.path.basename(self.name))\n        shutil.copy(self.name, target)\n        bext.spawn([\"strip\", \"-S\", target])\n\n        # yosys-abc\n        yosys_abc_target = os.path.join(pyosys_path, \"yosys-abc\")\n        shutil.copy(\"yosys-abc\", yosys_abc_target)\n        bext.spawn([\"strip\", \"-S\", yosys_abc_target])\n\n        # share directory\n        share_target = os.path.join(pyosys_path, \"share\")\n        try:\n            shutil.rmtree(share_target)\n        except FileNotFoundError:\n            pass\n\n        shutil.copytree(\"share\", share_target)\n\n        # I don't know how debug info is getting here.\n\n\nclass custom_build_ext(build_ext):\n    def build_extension(self, ext) -> None:\n        if not hasattr(ext, \"custom_build\"):\n            return super().build_extension(ext)\n        return ext.custom_build(self)\n\n\nsetup(\n    name=\"pyosys\",\n    packages=[\"pyosys\"],\n    version=version,\n    description=\"Python access to libyosys\",\n    long_description=open(os.path.join(__dir__, \"README.md\")).read(),\n    long_description_content_type=\"text/markdown\",\n    install_requires=[\"wheel\", \"setuptools\"],\n    classifiers=[\n        \"License :: OSI Approved :: MIT License\",\n        \"Programming Language :: Python :: 3\",\n        \"Intended Audience :: Developers\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Operating System :: MacOS :: MacOS X\",\n    ],\n    package_dir={\"pyosys\": \"misc\"},\n    python_requires=\">=3.8\",\n    ext_modules=[libyosys_so_ext()],\n    cmdclass={\n        \"build_ext\": custom_build_ext,\n    },\n)\n"
        },
        {
          "name": "techlibs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}