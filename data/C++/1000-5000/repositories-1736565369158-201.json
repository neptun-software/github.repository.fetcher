{
  "metadata": {
    "timestamp": 1736565369158,
    "page": 201,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oneapi-src/oneDNN",
      "stars": 3669,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-ignorelist",
          "type": "blob",
          "size": 0.998046875,
          "content": "# GEMM false-positives for busy wait when handling k partitioning\n[thread]\nfun:*sum_k_blocks*\n# GEMM false-positives for busy wait when handling k partitioning\n[thread]\nfun:*sum_matrices*\n# GEMM false-positives for busy wait when handling k partitioning\n[thread]\nfun:*jit_avx512_common_gemm_f32*\n# GEMM false-positives for busy wait when handling k partitioning\n[thread]\nfun:*jit_avx_gemm_f32*\n# setting_t is not thread-safe but is not used in scenarios where thread-safety\n# is considered important, like reading env variables and storing global state\n# of variables associated with them. All those pieces of code assume the env is\n# same across all threads.\n[thread]\nfun:*setting_t*\n# inconsequential data-race: to avoid overheads during verbose info print, we\n# check a non-atomic variable before the mutex protected initialization.\n[thread]\nfun:*pd_info_t*init*\n# Low impact: itt initializes lock inside critical region, which TSAN\n# flags as data race. tracked by ittapi #94\n[thread]\nfun:*__itt_string_handle_create*\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.3359375,
          "content": "Checks: >\n    -*,\n    readability-identifier-naming,\n    readability-const-return-type,\n    readability-redundant-smartptr-get,\n    readability-misleading-indentation,\n    readability-redundant-control-flow,\n    readability-redundant-member-init,\n    readability-redundant-string-cstr,\n    readability-redundant-string-init,\n    readability-simplify-subscript-expr,\n    readability-static-accessed-through-instance,\n    readability-static-definition-in-anonymous-namespace,\n    readability-uniqueptr-delete-release,\n    readability-container-size-empty,\n    readability-delete-null-pointer,\n    readability-make-member-function-const,\n    readability-redundant-access-specifiers,\n    performance-for-range-copy,\n    performance-implicit-conversion-in-loop,\n    performance-inefficient-algorithm,\n    performance-inefficient-string-concatenation,\n    performance-inefficient-vector-operation,\n    performance-move-const-arg,\n    performance-unnecessary-copy-initialization,\n    performance-unnecessary-value-param,\n    performance-no-automatic-move,\n    performance-trivially-destructible,\n    modernize-make-shared,\n    modernize-use-bool-literals,\n    modernize-use-emplace,\n    modernize-use-equals-default,\n    modernize-use-override,\n    modernize-use-nullptr,\n    modernize-use-using,\n    bugprone-assert-side-effect,\n    bugprone-copy-constructor-init,\n    bugprone-forward-declaration-namespace,\n    bugprone-move-forwarding-reference,\n    bugprone-parent-virtual-call,\n    bugprone-too-small-loop-variable,\n    bugprone-undefined-memory-manipulation,\n    bugprone-unhandled-self-assignment,\n    bugprone-multiple-statement-macro,\n    bugprone-macro-parentheses,\n    bugprone-undefined-memory-manipulation,\n    bugprone-unhandled-self-assignment,\n    google-default-arguments,\n    misc-misplaced-const,\n    misc-definitions-in-headers,\n    misc-redundant-expression,\n    misc-uniqueptr-reset-release,\n    misc-unused-alias-decls,\n    misc-unused-using-decls,\n    cppcoreguidelines-prefer-member-initializer,\n\nCheckOptions:\n  - key:             readability-identifier-naming.ClassCase\n    value:           lower_case\n  - key:             readability-identifier-naming.StructCase\n    value:           lower_case\n  - key:             readability-identifier-naming.ClassSuffix\n    value:           _t\n  - key:             readability-identifier-naming.StructSuffix\n    value:           _t\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.630859375,
          "content": "#===============================================================================\n# Copyright 2019 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#===============================================================================\n\n# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files you want to always be normalized and converted\n# to native line endings on checkout.\n*.BSD             text\n*.c               text\n*.cc              text\n*.cl              text\n*.cmake           text\n*.cpp             text\n*.css             text\n*.h               text\n*.hpp             text\n*.html            text\n*.in              text\n*.js              text\n*.md              text\n*.py              text\n*.svg             text\n*.txt             text\n*.xml             text\n*.pump            text\n\n# Declare files that will always have OS specific line endings on checkout.\n*.vcxproj.user    text eol=crlf\n*.sh              text eol=lf\n\n# Denote all files that are truly binary and should not be modified.\n*.jpg             binary\n*.otf             binary\n*.png             binary\n*.woff            binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9462890625,
          "content": "#===============================================================================\n# Copyright 2019-2021 Intel Corporation\n# Copyright 2024 Arm Limited and affiliates.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#===============================================================================\n\nbuild*\nexternal\n.vs\n.vscode\n.*.sw?\ntags\n*~\n\\#*\\#\n.projectile\nCMakeSettings.json\ncompile_flags.txt\ncompile_commands.json\n.git-blame-ignore-revs\n**/.DS_Store\n__pycache__\n.cache\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.9716796875,
          "content": "cff-version: 1.2.0\ntitle: oneAPI Deep Neural Network Library (oneDNN)\nmessage: >-\n  If you use this software, please cite it using the metadata from this file.\n  Find metadata for a specific release in the CITATION.cff file that's available\n  with the source code or from the 'Cite this repository' sidebar when browsing \n  released source code on Github.\ntype: software\nauthors:\n  - name: oneDNN Contributors\nrepository-code: 'https://github.com/oneapi-src/oneDNN'\nurl: 'https://oneapi-src.github.io/oneDNN'\nabstract: >-\n  oneAPI Deep Neural Network Library (oneDNN) is an open-source cross-platform\n  performance library of basic building blocks for deep learning applications.\n  The library is optimized for Intel Architecture Processors, Intel Graphics,\n  and Arm 64-bit Architecture (AArch64)-based processors.\n  oneDNN has experimental support for the following architectures: NVIDIA GPU,\n  AMD GPU, OpenPOWER Power ISA (PPC64), IBMz (s390x), and RISC-V.\nlicense: Apache-2.0\nversion: v3.7\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.140625,
          "content": "#===============================================================================\n# Copyright 2016-2024 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#===============================================================================\n\ncmake_minimum_required(VERSION 3.13)\n\n# CMake minimum required version enables all policies introduced in minimum\n# version and earlier versions. Policies introduced in future versions\n# are handled individually in the section below.\n\n# CMake 3.14: Install rules from add_subdirectory() calls are interleaved\n# with those in caller.\nif(POLICY CMP0082)\n    cmake_policy(SET CMP0082 NEW)\nendif()\n\n# CMake 3.27: The FindPythonInterp and FindPythonLibs modules are removed.\nif(POLICY CMP0148)\n    cmake_policy(SET CMP0148 NEW)\nendif()\n\nif(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\n    message(STATUS \"CMAKE_BUILD_TYPE is unset, defaulting to Release\")\n    set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING\n        \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel RelWithAssert RelWithMDd...\")\nendif()\nif (CMAKE_GENERATOR MATCHES \"^Visual Studio\")\n    message(STATUS\n\"oneDNN build configuration is based on the CMAKE_BUILD_TYPE value, but\n the CMake generator '${CMAKE_GENERATOR}' does not respect it and requires\n using the --config option to choose the build type. Changing the build type\n using the --config option requires rerunning CMake from scratch with a\n matching CMAKE_BUILD_TYPE value.\")\nendif()\n\nset(PROJECT_NAME \"oneDNN\")\nset(PROJECT_FULL_NAME \"oneAPI Deep Neural Network Library (oneDNN)\")\nset(PROJECT_VERSION \"3.7.0\")\n\nproject(${PROJECT_NAME} VERSION \"${PROJECT_VERSION}\" LANGUAGES C CXX)\n\nif (NOT CMAKE_SIZEOF_VOID_P EQUAL 8)\n    message(FATAL_ERROR \"oneDNN supports 64 bit platforms only\")\nendif()\n\n# Set the target architecture.\nif(NOT DNNL_TARGET_ARCH)\n    if(CMAKE_SYSTEM_PROCESSOR MATCHES \"^(aarch64.*|AARCH64.*|arm64.*|ARM64.*)\")\n        set(DNNL_TARGET_ARCH \"AARCH64\")\n    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^(ppc64.*|PPC64.*|powerpc64.*)\")\n        set(DNNL_TARGET_ARCH \"PPC64\")\n    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^(s390x.*|S390X.*)\")\n        set(DNNL_TARGET_ARCH \"S390X\")\n    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^(rv.*|RV.*|riscv.*|RISCV.*)\")\n        set(DNNL_TARGET_ARCH \"RV64\")\n    else()\n        set(DNNL_TARGET_ARCH \"X64\")\n    endif()\nendif()\nmessage(STATUS \"DNNL_TARGET_ARCH: ${DNNL_TARGET_ARCH}\")\n\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\nset(CMAKE_SRC_CCXX_FLAGS)       # SRC specifics\nset(CMAKE_EXAMPLE_CCXX_FLAGS)   # EXAMPLE specifics\nset(CMAKE_TEST_CCXX_FLAGS)      # TESTS specifics\n\nstring(TOUPPER \"${CMAKE_BUILD_TYPE}\" UPPERCASE_CMAKE_BUILD_TYPE)\n\nset(LIB_PACKAGE_NAME \"dnnl\")\n\ninclude(\"cmake/dnnl_compat.cmake\")\n\ninclude(\"cmake/utils.cmake\")\ninclude(\"cmake/options.cmake\")\ninclude(\"cmake/SYCL.cmake\")\ninclude(\"cmake/OpenMP.cmake\")\ninclude(\"cmake/TBB.cmake\")\ninclude(\"cmake/Threadpool.cmake\")\ninclude(\"cmake/OpenCL.cmake\")\ninclude(\"cmake/platform.cmake\")\ninclude(\"cmake/SDL.cmake\")\ninclude(\"cmake/ACL.cmake\")\ninclude(\"cmake/blas.cmake\")\ninclude(\"cmake/doc.cmake\")\ninclude(\"cmake/version.cmake\")\ninclude(\"cmake/coverage.cmake\")\ninclude(\"cmake/build_types.cmake\")\ninclude(\"cmake/testing.cmake\")\ninclude(\"cmake/host_compiler.cmake\")\ninclude(\"cmake/configuring_primitive_list.cmake\")\n\nif(UNIX OR MINGW)\n    # CMAKE_<lang>_STANDARD support, so set it to our defaults, unless\n    # overridden by the user\n    if(NOT DEFINED CMAKE_C_STANDARD)\n        set(CMAKE_C_STANDARD 99)\n    endif()\n    if(NOT DEFINED CMAKE_CXX_STANDARD AND NOT DNNL_WITH_SYCL)\n        set(CMAKE_CXX_STANDARD 11)\n    endif()\n\n    # Disable -std=gnuXX and -std=gnu++XX\n    set(CMAKE_C_EXTENSIONS OFF)\n    set(CMAKE_CXX_EXTENSIONS OFF)\nendif()\n\n# Handle cases when OpenMP runtime is requested but not found: override CPU\n# runtime to be sequential\nif(DNNL_CPU_RUNTIME STREQUAL \"OMP\" AND\n   DNNL_CPU_THREADING_RUNTIME STREQUAL \"SEQ\")\n    set(DNNL_CPU_RUNTIME \"SEQ\" CACHE STRING \"\" FORCE)\nendif()\n\nenable_testing()\n\ninclude_directories_with_host_compiler_before(${PROJECT_SOURCE_DIR}/include)\n\nconfigure_file(\n    \"${PROJECT_SOURCE_DIR}/include/oneapi/dnnl/dnnl_config.h.in\"\n    \"${PROJECT_BINARY_DIR}/include/oneapi/dnnl/dnnl_config.h\"\n)\ninclude_directories_with_host_compiler_before(${PROJECT_BINARY_DIR}/include)\n\nconfigure_file(\n    \"${PROJECT_SOURCE_DIR}/README.binary.in\"\n    \"${PROJECT_BINARY_DIR}/README\"\n)\n\nif(DNNL_INSTALL_MODE MATCHES \"^(BUNDLE|BUNDLE_V2)$\" AND NOT DEFINED CMAKE_INSTALL_LIBDIR)\n    # define CMAKE_INSTALL_LIBDIR as \"lib\" in the case of bundle\n    set(CMAKE_INSTALL_LIBDIR \"lib\")\nendif()\n\ninclude(GNUInstallDirs)\ninclude(CMakePackageConfigHelpers)\n\nadd_subdirectory(src)\nadd_subdirectory(examples)\nadd_subdirectory(tests)\n\nif(DNNL_INSTALL_MODE STREQUAL \"BUNDLE\")\n    install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_PREFIX})\n    install(FILES THIRD-PARTY-PROGRAMS DESTINATION ${CMAKE_INSTALL_PREFIX})\n    install(FILES ${PROJECT_BINARY_DIR}/README DESTINATION ${CMAKE_INSTALL_PREFIX})\nelseif(DNNL_INSTALL_MODE STREQUAL \"BUNDLE_V2\")\n    install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_PACKAGE_NAME})\n    install(FILES THIRD-PARTY-PROGRAMS DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_PACKAGE_NAME})\n    install(FILES ${PROJECT_BINARY_DIR}/README DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_PACKAGE_NAME})\nelse()\n    # Cannot use CMAKE_INSTALL_DOCDIR since it uses PROJECT_NAME and not DNNL_LIBRARY_NAME\n    install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_PACKAGE_NAME})\n    install(FILES THIRD-PARTY-PROGRAMS DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_PACKAGE_NAME})\n    install(FILES ${PROJECT_BINARY_DIR}/README DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_PACKAGE_NAME})\nendif()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.40625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to project maintainers using [Reporting abuse or spam] form. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n[Reporting abuse or spam form]: https://docs.github.com/en/communities/maintaining-your-safety-on-github/reporting-abuse-or-spam\n[Contributor Covenant]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CODING_STANDARDS.md",
          "type": "blob",
          "size": 2.5048828125,
          "content": "# Coding Standards\n\n## Introduction\n\nThe Coding Standards outline and describe a set of rules the oneDNN code base\nand code contributions must follow.\n\nThe only goal of the Coding Standards is to maintain productivity for the\ndevelopment of the library.\n\nThe Coding Standards are subject to change.\n\n---\n**NOTE** It may happen that not all code can and does follow all the rules\noutlined in the Coding Standards. In case enforcing a specific rule makes your\ncontribution less effective in terms of code design, please do not apply the\ncorresponding rule. This exception does not apply to violations detected by\n[clang-tidy](CODING_STANDARDS.md#automatic-detection).\n\n---\n\n### Automatic detection\n\noneDNN uses [clang-tidy](https://clang.llvm.org/extra/clang-tidy/) in order to\ndiagnose and fix common style violations and easy-to-fix issues in the code\nbase. For instructions on how to use `clang-tidy`, please refer to the\n[clang-tidy\nRFC](https://github.com/oneapi-src/oneDNN/blob/rfcs/rfcs/20200813-clang-tidy/README.md).\nThe list of clang-tidy checks the oneDNN code base follows is available in the\n`.clang-tidy` file found in the oneDNN top-level directory.\n\n### Coding style\n\nThe coding style consistency in oneDNN is maintained using `clang-format`. When\nsubmitting your contribution, please make sure that it adheres to the existing\ncoding style with the following command:\n```sh\nclang-format -style=file -i foo.cpp\n```\nThis will format the code using the `_clang_format` file found in the oneDNN top\nlevel directory.\n\nCoding style is secondary to the general code design.\n\n### General\n\n- Use properly named constants whenever possible (unless this code is\n  auto-generated).\n  * For example,\n  ~~~cpp\n  if (x < 4) y = 64;\n  ~~~\n\n  In this example, 4 and 64 should be named, in which case the code becomes:\n  ~~~cpp\n  if (x < sizeof(float)) y = cache_line_size;\n  ~~~\n\n- Don't use `using namespace XXX` in header files.\n\n- Avoid code duplication (look for similarities), unless it is necessary.\n\n- Use `src`/`dst` instead of `input`/`output`.\n\n- Declare variables in the innermost possible scope until there are some\n  circumstances that make you declare them somewhere else.\n\n- Consider using utils to improve readability (`IMPLICATION`, `one_of`,\n  `everyone_is`).\n\n### Xbyak\n\n- Don't use `char[]` for label names and don't pass them as parameters. Instead,\n  use `Xbyak::Label` variables. For example:\n  ~~~cpp\n  {\n        Xbyak::Label barrier_exit_label;\n        ...\n        jmp(barrier_exit_label);\n        ...\n        L(barrier_exit_label);\n  }\n  ~~~\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.521484375,
          "content": "# Contributing guidelines\n\nIf you have improvements to the oneDNN code, please send us your pull\nrequests! To get started, see the GitHub\n[howto](https://help.github.com/en/articles/about-pull-requests).\n\nYou can:\n\n- Submit your changes directly with a\n  [pull request](https://github.com/oneapi-src/oneDNN/pulls)\n- Log a bug or feedback with an [issue](https://github.com/oneapi-src/oneDNN/issues)\n\n**See also:** [Contributor Covenant](CODE_OF_CONDUCT.md) code of conduct.\n\n## Pull request checklist\n\nBefore sending your pull requests, make sure that you have followed this list:\n\n* Check the [library functionality guidelines](CONTRIBUTING.md#library-functionality-guidelines).\n  If you are contributing a new compute primitive or propose changes to the\n  external API, it is strongly advised to first open an [RFC pull request](CONTRIBUTING.md#RFC-pull-requests)\n  with a detailed explanation of expected use cases and performance benefits.\n\n* Ensure that the changes are consistent with the\n  [code contribution guidelines](CONTRIBUTING.md#code-contribution-guidelines)\n  and [coding standards](CONTRIBUTING.md#coding-standards).\n\n* Check that [unit tests](CONTRIBUTING.md#unit-tests) pass.\n\n## Library functionality guidelines\n\noneDNN focuses on functionality that satisfies all of the following\ncriteria:\n\n1. *Performance*: the functionality has material impact on a workload level.\n   In other words, this means that for a new primitive it should be\n   demonstrated that it brings visible performance improvement to some\n   workload.\n\n2. *Generality*: the functionality is useful in a wide range of deep learning\n   applications. This implies that when introducing a new primitive, its API\n   needs to be general enough to be integrated into multiple deep learning\n   frameworks that have similar functionality.\n\n3. *Complexity*: it is not trivial to implement the functionality directly in\n   a deep learning application.\n\n### RFC pull requests\n\nSignificant library changes (new primitives, library architecture changes,\nAPI modifications, etc) require approval from oneDNN maintainers before\nopening a pull request with such implementation. For that we use the Request\nFor Comments (RFC) process, which consists of opening, discussing, and\naccepting (promoting) RFC pull requests.\n\nMore information about the process can be found in the dedicated\n[`rfcs`](https://github.com/oneapi-src/oneDNN/tree/rfcs) branch.\n\n## Code contribution guidelines\n\nWhen submitting your contribution, please make sure that it is:\n\n* *Tested*: oneDNN uses gtests for lightweight functional testing and\n  benchdnn for functionality that requires both performance and functional\n  testing.\n\n* *Documented*: oneDNN uses Doxygen for inline comments in public header\n  files that is used to build reference manual and markdown (also processed by\n  Doxygen) for user guide.\n\n* *Portable*: oneDNN supports different operating systems, CPU and GPU\n  architectures, compilers, and run-times. The new code should be compliant\n  with the [System Requirements](README.md#system-requirements).\n\nAll code in oneDNN gets promoted to product branches (`master`, `rls-`, and\n`mnt-`) only through GitHub pull requests. Requirements for promotion:\n\n- The request is reviewed and approved by maintainers for all affected\n  components.\n- All discussions in the pull request are resolved.\n- Continuous integration pipeline passed without errors.\n- Promotion to release (`rls-`) branches can be done only by maintainers\n  (enforced by GitHub)\n- The pull request author is responsible for collecting all the necessary\n  approvals, rebasing of the changes, and resolving the discussions.\n\nTo simplify the work of reviewers, make sure that the commits in the pull\nrequest adhere to the following requirements:\n\n- Commit message should be fit into 50 (at most 72) characters and have the\n  imperative mood.\n- Commit message should follow the format:\n  `<scope>:[scope: ..] <short description>`\n  Scope examples:\n  * Top level: `build`, `api`, `doc`, `tests`, `common`, `cpu`, `gpu`\n  * Second level: `convolution`, `pooling`, `utils`, `verbose`\n  * Example commit message:\n~~~git\ncommon: verbose: fix crash when prim_iface_t is empty\n~~~\n\n- Commit body should also fit 72 characters. Think of it as a standard e-mail\n  body or a markdown document in terms of styling - write sentences from the\n  very left border keeping capital letters and punctuation in place.\n- oneDNN branches maintain linear history. Rebase the changes on top of target\n  branch before creating a pull request. Rebase again after resolving all the\n  discussions, as well as in case of merge conflicts.\n- Use `git add -p`  and `git rebase -i` liberally to split unrelated changes\n  into multiple self-contained commits. This is a courtesy to reviewers: smaller\n  commits are easier to comprehend. It also helps with bisecting in the future.\n  Of course judgement needs to be applied whether to split changes or not. For\n  example, split code cleanup and the actual fix into two separate patches.\n\n## Coding Standards\n\nContributions to oneDNN must follow the [Coding Standards](CODING_STANDARDS.md)\nin order to simplify development and review processes. The general principle is\nto follow the style of existing/surrounding code.\n\nThe Coding Standards are subject to change and contributions to the Coding\nStandards are welcome.\n\nIf you wish to propose changes to the Coding Standards (including `clang-tidy`\nchecks and `clang-format` options), please submit the proposal via an [RFC pull\nrequest](CONTRIBUTING.md#RFC-pull-requests). The proposal should contain the\nfollowing information:\n* *Motivation*: Why should the proposed standard be introduced and applied?\n* *Enforcement*: Can the proposed standard be applied via an automated process\n  or other practical means?\n* *Example*: What does the code base look like with the proposed standard\n  applied?\n  * For instance, in case of a `clang-tidy` check, please open a separate PR\n    with the check applied to the code base alongside the RFC PR.\n\n## Unit tests\n\noneDNN uses gtests for lightweight functional testing and benchdnn for\nperformance and functional testing.\n\nVerify the modified code is covered by existing tests. If not, update the\ncoverage to validate the change and sumbit it as a part of the PR.\n\nUse the following command to run tests selected by a build configuration:\n``` sh\n    ctest\n```\n\nTo modify the coverage, use the\n[`ONEDNN_TEST_SET`](https://oneapi-src.github.io/oneDNN/dev_guide_build_options.html#onednn-test-set)\nbuild option.\n\nMore details on how to run benchdnn can be found in\n[benchdnn documentation](tests/benchdnn/doc/benchdnn_general_info.md#running-tests).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.3349609375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   ============================================================================\n\n   Copyright 2016-2023 Intel Corporation\n   Copyright 2018 YANDEX LLC\n   Copyright 2019-2023 FUJITSU LIMITED\n   Copyright 2020-2023 Arm Ltd. and affiliates\n   Copyright 2020-2022 Codeplay Software Limited\n   Copyright 2021 Alanna Tempest\n   Copyright 2022-2023 IBM Corporation\n   Copyright 2023 KNS Group LLC (YADRO)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   This distribution includes third party software (\"third party programs\").\n   This third party software, even if included with the distribution of\n   the Intel software, may be governed by separate license terms, including\n   without limitation, third party license terms, other Intel software license\n   terms, and open source software license terms. These separate license terms\n   govern your use of the third party programs as set forth in the\n   \"THIRD-PARTY-PROGRAMS\" file.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 10.7353515625,
          "content": "# Introduction\n\nThis document defines roles available in oneDNN project and includes the current\nlist of Code Owners and Maintainers for the project.\n\n# Roles and responsibilties\n\noneDNN project defines three main roles:\n * [Contributor](#contributor)\n * [Code Owner](#code-Owner)\n * [Maintainer](#maintainer)\n\nThese roles are merit based. Refer to the corresponding section for specific\nrequirements and the nomination process.\n\n## Contributor\n\nA Contributor invests time and resources to improve oneDNN. Anyone can become\na Contributor by bringing value in one of the following ways:\n  * Answer questions from community members.\n  * Submit feedback to design proposals.\n  * Review and/or test pull requests.\n  * Test releases and report bugs.\n  * Contribute code, including bug fixes, features implementations,\nand performance optimizations.\n  * Contribute design proposals.\n\nResponsibilities:\n  * Follow the [Code of Conduct](CODE_OF_CONDUCT.md).\n  * Follow the project [contributing guidelines](CONTRIBUTING.md).\n\nPrivileges:\n  * Eligible to become a Code Owner.\n\n## Code Owner\n\nA Code Owner has responsibility for a specific project component or a functional\narea. Code Owners are collectively responsible, with other Code Owners, \nfor developing and maintaining their component or functional areas, including\nreviewing all changes to their their areas of responsibility and indicating\nwhether those changes are ready to merge. They have a track record of\ncontribution and review in the project.\n\nResponsibilities:\n  * Follow the [Code of Conduct](CODE_OF_CONDUCT.md).\n  * Follow and enforce the project [contributing guidelines](CONTRIBUTING.md).\n  * Co-own with other code owners a specific component, including contributing\n    bug fixes, implementing features, and performance optimizations.\n  * Review pull requests in their specific areas of responsibility.\n  * Monitor testing results and flag issues in their specific areas of\n    responsibility.\n  * Support and guide Contributors.\n\nRequirements:\n  * Experience as Contributor for at least 6 months.\n  * Commit at least 25% of working time to the project.\n  * Track record of accepted code contributions to a specific project component.\n  * Track record of contributions to the code review process.\n  * Demonstrated in-depth knowledge of the architecture of a specific project\n    component.\n  * Commits to being responsible for that specific area.\n\nPrivileges:\n  * PR approval counts towards approval requirements for a specific component.\n  * Can promote fully approved Pull Requests to the `main` branch.\n  * Can recommend Contributors to become Code Owners.\n  * Eligible to become a Maintainer.\n\nThe process of becoming a Code Owner is:\n1. A Contributor is nominated by opening a PR modifying the MAINTAINERS.md file\nincluding name, Github username, and affiliation.\n2. At least two specific component Maintainers approve the PR.\n\n## Maintainer\nMaintainers are the most established contributors who are responsible for the \nproject technical direction and participate in making decisions about the\nstrategy and priorities of the project.\n\nResponsibilities:\n  * Follow the [Code of Conduct](CODE_OF_CONDUCT.md).\n  * Follow and enforce the project [contributing guidelines](CONTRIBUTING.md)\n  * Co-own with other component Maintainers on the technical direction of a specific component.\n  * Co-own with other Maintainers on the project as a whole, including determining strategy and policy for the project.\n  * Suppport and guide Contributors and Code Owners.\n\nRequirements:\n  * Experience as a Code Owner for at least 12 months.\n  * Commit at least 25% of working time to the project.\n  * Track record of major project contributions to a specific project component.\n  * Demonstrated deep knowledge of a specific project component.\n  * Demonstrated broad knowledge of the project across multiple areas.\n  * Commits to using priviledges responsibly for the good of the project.\n  * Is able to exercise judgment for the good of the project, independent of\n    their employer, friends, or team.\n\nPrivileges:\n  * Can represent the project in public as a Maintainer.\n  * Can promote Pull Requests to release branches and override mandatory\n  checks when necessary.\n  * Can recommend Code Owners to become Maintainers.\n\nProcess of becoming a maintainer:\n1. A Maintainer may nominate a current Reviewer to become a new Maintainer by \nopening a PR against MAINTAINERS.md file.\n2. A majority of the current Maintainers must then approve the PR.\n\n# Code Owners and Maintainers List\n\n## Core (API, Architecture, Tests)\n\nTeam: @oneapi-src/onednn-arch\n\n| Name               | Github ID             | Affiliation       | Role       |\n| -----------------  | --------------------- | ----------------- | ---------- |\n| Denis Samoilov     | @densamoilov          | Intel Corporation | Maintainer |\n| Dmitry Zarukin     | @dzarukin             | Intel Corporation | Maintainer |\n| Mourad Gouicem     | @mgouicem             | Intel Corporation | Maintainer |\n| Vadim Pirogov      | @vpirogov             | Intel Corporation | Maintainer |\n| Ankit Manerikar    | @avmanerikar          | Intel Corporation | Code Owner |\n| Stefan Palicki     | @spalicki             | Intel Corporation | Code Owner |\n\n## Graph API\n\nTeam: @oneapi-src/onednn-graph\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Tao Lv             | @TaoLv                | Intel Corporation | Maintainer |\n| Zhitao Wang        | @wzt1997              | Intel Corporation | Code Owner |\n| Jiexin Zheng       | @Jiexin-Zheng         | Intel Corporation | Code Owner |\n| Shaojie Cui        | @ShanSimu             | Intel Corporation | Code Owner |\n| Yonghao Gu         | @gyhintel             | Intel Corporation | Code Owner |\n| Rong Zhang         | @rongzha1             | Intel Corporation | Code Owner |\n| Xiang Guo          | @xiang1guo            | Intel Corporation | Code Owner |\n| Yixin Bao          | @ElaineBao            | Intel Corporation | Code Owner |\n\n## CPU Engine\n\n### x64\n\nTeam: @oneapi-src/onednn-cpu-x64\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Andrey Kalinin     | @ankalinin            | Intel Corporation | Maintainer |\n| Tatyana Primak     | @tprimak              | Intel Corporation | Maintainer |\n| Alexey Makarevich  | @amakarev             | Intel Corporation | Code Owner |\n| David Eberius      | @davideberius         | Intel Corporation | Code Owner |\n| Stefan Palicki     | @spalicki             | Intel Corporation | Code Owner |\n| Tomasz Czeszun     | @tczeszun             | Intel Corporation | Code Owner |\n| Xuxin Zeng         | @xuxinzen             | Intel Corporation | Code Owner |\n\n### AArch64\n\nTeam: @oneapi-src/onednn-cpu-aarch64\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Crefeda Rodrigues  | @cfrod                | Arm Ltd           | Code Owner |\n| David Svantesson   | @davsva01             | Arm Ltd           | Code Owner |\n| Jonathan Deakin    | @jondea               | Arm Ltd           | Code Owner |\n| Hamza Butt         | @theComputeKid        | Arm Ltd           | Code Owner |\n| Radu Salavat       | @Radu2k               | Arm Ltd           | Code Owner |\n| Siddhartha Menon   | @Sqvid                | Arm Ltd           | Code Owner |\n| Sunita Nadampalli  | @snadampal            | Amazon.com, Inc.  | Code Owner |\n\n### OpenPOWER (PPC64)\n\nVacant. Maintained by Core team.\n\n### IBMz (s390x)\n\nVacant. Maintained by Core team.\n\n### RISC-V\n\nVacant. Maintained by Core team.\n\n### Loongarch64\n\nVacant. Maintained by Core team.\n\n## GPU Engine\n\n### Intel\n\nTeam: @oneapi-src/onednn-gpu-intel\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Eugene Chereshnev  | @echeresh             | Intel Corporation | Maintainer |\n| Konstantin Arturov | @karturov             | Intel Corporation | Maintainer |\n| Peter Caday        | @petercad             | Intel Corporation | Maintainer |\n| Andy Kassen        | @atkassen             | Intel Corporation | Code Owner |\n| Daniel Youssif     | @dyoussif             | Intel Corporation | Code Owner |\n| Haleema Sadia      | @h-sadia              | Intel Corporation | Code Owner |\n| Andrey Guskov      | @hidefromkgb          | Intel Corporation | Code Owner |\n| Gallagher Pryor    | @pv-pterab-s          | Intel Corporation | Code Owner |\n| Kealan Barbieri    | @kealan-barbieri      | Intel Corporation | Code Owner |\n| Roy Oursler        | @rjoursler            | Intel Corporation | Code Owner |\n| Simon Ewing        | @Simonsays095         | Intel Corporation | Code Owner |\n| Sergey Kazakov     | @skazakov1            | Intel Corporation | Code Owner |\n| Stefen Yurkevich   | @syurkevi             | Intel Corporation | Code Owner |\n| Umar Arshad        | @umar456              | Intel Corporation | Code Owner |\n\n### NVIDIA, AMD, and generic GPU\n\nTeams:\n* @oneapi-src/onednn-gpu-nvidia\n* @oneapi-src/onednn-gpu-amd\n* @oneapi-src/onednn-gpu-generic\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Anton Mitkov       | @ShanoToni            | Codeplay Software | Code Owner |\n| Mehdi Goli         | @mehdi-goli           | Codeplay Software | Code Owner |\n| Svetlozar Georgiev | @sgeor255             | Codeplay Software | Code Owner |\n\n## Support functions\n\n### Documentation\n\nTeam: @oneapi-src/onednn-doc\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Vadim Pirogov      | @vpirogov             | Intel Corporation | Maintainer |\n| Ranu Kundu         | @ranukund             | Intel Corporation | Code Owner |\n| Tao Lv             | @TaoLv                | Intel Corporation | Code Owner |\n\n### DevOps\n\nTeam: @oneapi-src/onednn-devops\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Sergey Razumovskiy | @srazumov             | Intel Corporation | Maintainer |\n| Vadim Pirogov      | @vpirogov             | Intel Corporation | Maintainer |\n| Hamza Butt         | @theComputeKid        | Arm Ltd           | Code Owner |\n\n### Release management\n\n| Name               | Github ID             | Affiliation       | Role       |\n| ------------------ | --------------------- | ----------------- | ---------- |\n| Tatyana Primak     | @tprimak              | Intel Corporation | Maintainer |\n| Vadim Pirogov      | @vpirogov             | Intel Corporation | Maintainer |\n"
        },
        {
          "name": "README.binary.in",
          "type": "blob",
          "size": 4.8486328125,
          "content": "oneAPI Deep Neural Network Library (oneDNN)\n===========================================\n\noneAPI Deep Neural Network Library (oneDNN) is an open-source cross-platform\nperformance library of basic building blocks for deep learning applications.\noneDNN is part of oneAPI (https://oneapi.io).\nThe library is optimized for Intel(R) Architecture Processors\nand Intel Graphics.\n\noneDNN is intended for deep learning applications and framework\ndevelopers interested in improving application performance on CPUs and GPUs.\n\nThis package contains oneDNN v@PROJECT_VERSION@ (@DNNL_VERSION_HASH@).\n\nYou can find information about the latest version and release notes\nat the oneDNN Github (https://github.com/oneapi-src/oneDNN/releases).\n\nDocumentation\n-------------\n\n* Developer guide\n(https://oneapi-src.github.io/oneDNN/v@DNNL_VERSION_MAJOR@.@DNNL_VERSION_MINOR@)\nexplains the programming model, supported functionality, and implementation\ndetails, and includes annotated examples.\n* API reference\n(https://oneapi-src.github.io/oneDNN/v@DNNL_VERSION_MAJOR@.@DNNL_VERSION_MINOR@/modules.html)\nprovides a comprehensive reference of the library API.\n\nSystem Requirements\n-------------------\n\noneDNN supports systems based on Intel 64 or AMD64 architectures.\n\nThe library is optimized for the following CPUs:\n* Intel Atom(R) processor (at least Intel SSE4.1 support is required)\n* Intel Core(TM) processor (at least Intel SSE4.1 support is required)\n* Intel Xeon(R) processor E3, E5, and E7 family (formerly Sandy Bridge,\n  Ivy Bridge, Haswell, and Broadwell)\n* Intel Xeon Scalable processor (formerly Skylake, Cascade Lake, Cooper\n  Lake, Ice Lake, Sapphire Rapids, and Emerald Rapids)\n* Intel Xeon CPU Max Series (formerly Sapphire Rapids HBM)\n* Intel Core Ultra processors (formerly Meteor Lake, Arrow Lake,\n  and Lunar Lake)\n* Intel Xeon 6 processors (formerly Sierra Forest and Granite Rapids)\n\noneDNN detects the instruction set architecture (ISA) at runtime and uses\njust-in-time (JIT) code generation to deploy the code optimized\nfor the latest supported ISA. Future ISAs may have initial support in the\nlibrary disabled by default and require the use of run-time controls to enable\nthem. See CPU dispatcher control\n(https://oneapi-src.github.io/oneDNN/dev_guide_cpu_dispatcher_control.html)\nfor more details.\n\nThe library is optimized for the following GPUs:\n* Intel Graphics for 11th-14th Generation Intel Core Processors\n* Intel Iris Xe MAX Graphics (formerly DG1)\n* Intel Arc(TM) graphics (formerly Alchemist)\n* Intel Data Center GPU Flex Series (formerly Arctic Sound)\n* Intel Data Center GPU Max Series (formerly Ponte Vecchio)\n* Intel Graphics and Intel Arc graphics for Intel Core Ultra processors\n (formerly Meteor Lake, Arrow Lake and Lunar Lake)\n* future Intel Arc graphics (code name Battlemage)\n\nSupport\n-------\n\nSubmit questions, feature requests, and bug reports on the\nGitHub issues page (https://github.com/oneapi-src/oneDNN/issues).\n\nLicense\n-------\n\noneDNN is licensed under Apache License Version 2.0. Refer to the \"LICENSE\"\nfile for the full license text and copyright notice.\n\nThis distribution includes third party software governed by separate license\nterms.\n\n3-clause BSD license:\n* Xbyak (https://github.com/herumi/xbyak)\n* Instrumentation and Tracing Technology API (ITT API)\n(https://github.com/intel/ittapi)\n* CMake (https://github.com/Kitware/CMake)\n\nBoost Software License, Version 1.0:\n* Boost C++ Libraries (https://www.boost.org/)\n\nMIT License:\n* Intel Graphics Compute Runtime for oneAPI Level Zero and OpenCL Driver\n(https://github.com/intel/compute-runtime)\n* Intel Graphics Compiler (https://github.com/intel/intel-graphics-compiler)\n* oneAPI Level Zero (https://github.com/oneapi-src/level-zero)\n* Intel Metrics Discovery Application Programming Interface\n(https://github.com/intel/metrics-discovery)\n\nThis third party software, even if included with the distribution of\nthe Intel software, may be governed by separate license terms, including\nwithout limitation, third party license terms, other Intel software license\nterms, and open source software license terms. These separate license terms\ngovern your use of the third party programs as set forth in the\n\"THIRD-PARTY-PROGRAMS\" file.\n\n# Security\n\nSecurity Policy (https://github.com/oneapi-src/oneDNN/blob/main/SECURITY.md)\noutlines our guidelines and procedures for ensuring the highest level\nof Security and trust for our users who consume oneDNN.\n\n# Trademark Information\n\nIntel, the Intel logo, Arc, Intel Atom, Intel Core, Iris,\nOpenVINO, the OpenVINO logo, Pentium, VTune, and Xeon are trademarks\nof Intel Corporation or its subsidiaries.\n\n\\* Other names and brands may be claimed as the property of others.\n\nMicrosoft, Windows, and the Windows logo are trademarks, or registered\ntrademarks of Microsoft Corporation in the United States and/or other\ncountries.\n\nOpenCL and the OpenCL logo are trademarks of Apple Inc. used by permission\nby Khronos.\n\n(C) Intel Corporation\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.0439453125,
          "content": "[![UXL Foundation Logo](https://github.com/uxlfoundation/artwork/blob/main/foundation/uxl-foundation-logo-horizontal-color.png)][UXL Foundation]\n\noneAPI Deep Neural Network Library (oneDNN)\n===========================================\n\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8762/badge)](https://www.bestpractices.dev/projects/8762)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/oneapi-src/oneDNN/badge)](https://securityscorecards.dev/viewer/?uri=github.com/oneapi-src/oneDNN)\n\noneAPI Deep Neural Network Library (oneDNN) is an open-source cross-platform\nperformance library of basic building blocks for deep learning applications.\noneDNN project is part of the [UXL Foundation] and is an implementation\nof the [oneAPI specification] for oneDNN component.\n\nThe library is optimized for Intel(R) Architecture Processors, Intel Graphics,\nand Arm(R) 64-bit Architecture (AArch64)-based processors. oneDNN has\nexperimental support for the following architectures: NVIDIA\\* GPU,\nAMD\\* GPU, OpenPOWER\\* Power ISA (PPC64), IBMz\\* (s390x), and RISC-V.\n\noneDNN is intended for deep learning applications and framework\ndevelopers interested in improving application performance on CPUs and GPUs.\nDeep learning practitioners should use one of the\n[applications enabled with oneDNN](#applications-enabled-with-onednn).\n\n[UXL Foundation]: http://www.uxlfoundation.org\n[oneAPI specification]: https://spec.oneapi.io\n\n# Table of Contents\n\n- [Documentation](#documentation)\n- [Installation](#installation)\n- [System Requirements](#system-requirements)\n- [Applications Enabled with oneDNN](#applications-enabled-with-onednn)\n- [Governance](#governance)\n- [Support](#support)\n- [Contributing](#contributing)\n- [License](#license)\n- [Security](#security)\n- [Trademark Information](#trademark-information)\n\n# Documentation\n\n* [Developer Guide] explains the programming model, supported functionality,\n  and implementation details, and includes annotated examples.\n* [API Reference] provides a comprehensive reference of the library API.\n\n[Developer Guide]: https://oneapi-src.github.io/oneDNN\n[API Reference]: https://oneapi-src.github.io/oneDNN/group_dnnl_api.html\n\n# Installation\n\nBinary distribution of this software is available in:\n* [Anaconda]\n* [Intel oneAPI]\n\nThe packages do not include library dependencies and these need to be resolved\nin the application at build time. See the [System Requirements] section below\nand the [Build Options] section in the [Developer Guide] for more details on\nCPU and GPU runtimes.\n\nIf the configuration you need is not available, you can\n[build the library from source][Build from Source].\n\n[Anaconda]: https://anaconda.org/conda-forge/onednn\n[Intel oneAPI]: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onednn.html\n[System Requirements]: #system-requirements\n[Build Options]: https://oneapi-src.github.io/oneDNN/dev_guide_build_options.html\n[Build from Source]: https://oneapi-src.github.io/oneDNN/dev_guide_build.html\n\n# System Requirements\n\noneDNN supports platforms based on the following architectures:\n- [Intel 64 or AMD64](https://en.wikipedia.org/wiki/X86-64),\n- [Arm 64-bit Architecture (AArch64)](https://developer.arm.com/architectures/cpu-architecture/a-profile).\n- [OpenPOWER](https://openpowerfoundation.org/) / [IBM Power ISA](https://en.wikipedia.org/wiki/Power_ISA).\n- [IBMz z/Architecture (s390x)](https://en.wikipedia.org/wiki/Z/Architecture).\n- [RISC-V 64-bit (RV64)](https://en.wikipedia.org/wiki/RISC-V).\n\n> **WARNING**\n>\n> Power ISA (PPC64), IBMz (s390x), and RISC-V (RV64) support is\n> **experimental** with limited testing validation.\n\nThe library is optimized for the following CPUs:\n* Intel 64/AMD64 architecture\n  * Intel Atom(R) processor (at least Intel SSE4.1 support is required)\n  * Intel Core(TM) processor (at least Intel SSE4.1 support is required)\n  * Intel Xeon(R) processor E3, E5, and E7 family (formerly Sandy Bridge,\n    Ivy Bridge, Haswell, and Broadwell)\n  * Intel Xeon Scalable processor (formerly Skylake, Cascade Lake, Cooper\n    Lake, Ice Lake, Sapphire Rapids, and Emerald Rapids)\n  * Intel Xeon CPU Max Series (formerly Sapphire Rapids HBM)\n  * Intel Core Ultra processors (formerly Meteor Lake, Arrow Lake,\n    and Lunar Lake)\n  * Intel Xeon 6 processors (formerly Sierra Forest and Granite Rapids)\n* AArch64 architecture\n  * Arm Neoverse(TM) N1 and V1 processors\n\nOn a CPU based on Intel 64 or on AMD64 architecture, oneDNN detects\nthe instruction set architecture (ISA) at runtime and uses just-in-time (JIT)\ncode generation to deploy the code optimized for the latest supported ISA.\nFuture ISAs may have initial support in the library disabled by default and\nrequire the use of run-time controls to enable them. See\n[CPU dispatcher control] for more details.\n\n\n> **WARNING**\n>\n> On macOS, applications that use oneDNN may need to request special\n> entitlements if they use the hardened runtime. See the\n> [Linking Guide] for more details.\n\nThe library is optimized for the following GPUs:\n* Intel Graphics for 11th-14th Generation Intel Core Processors\n* Intel Iris Xe MAX Graphics (formerly DG1)\n* Intel Arc(TM) graphics (formerly Alchemist)\n* Intel Data Center GPU Flex Series (formerly Arctic Sound)\n* Intel Data Center GPU Max Series (formerly Ponte Vecchio)\n* Intel Graphics and Intel Arc graphics for Intel Core Ultra processors\n (formerly Meteor Lake, Arrow Lake and Lunar Lake)\n* future Intel Arc graphics (code name Battlemage)\n\n[CPU dispatcher control]: https://oneapi-src.github.io/oneDNN/dev_guide_cpu_dispatcher_control.html\n[Linking Guide]: https://oneapi-src.github.io/oneDNN/dev_guide_link.html\n\n## Requirements for Building from Source\n\noneDNN supports systems meeting the following requirements:\n* Operating system with Intel 64 / Arm 64 / Power / IBMz architecture support\n* C++ compiler with C++11 standard support\n* [CMake] 3.13 or later\n\nThe following tools are required to build oneDNN documentation:\n* [Doxygen] 1.8.5 or later\n* [Doxyrest] 2.1.2 or later\n* [Sphinx] 4.0.2 or later\n* [sphinx-book-theme] 0.0.41 or later\n\nConfigurations of CPU and GPU engines may introduce additional build time\ndependencies.\n\n[CMake]: https://cmake.org/download/\n[Doxygen]: http://www.doxygen.nl/download.html#srcbin\n[Doxyrest]: https://github.com/vovkos/doxyrest\n[Sphinx]: https://www.sphinx-doc.org/en/master/usage/installation.html\n[sphinx-book-theme]: https://sphinx-book-theme.readthedocs.io/en/latest\n\n### CPU Engine\n\noneDNN CPU engine is used to execute primitives on Intel Architecture\nProcessors, 64-bit Arm Architecture (AArch64) processors,\n64-bit Power ISA (PPC64) processors, IBMz (s390x), and compatible devices.\n\nThe CPU engine is built by default but can be disabled at build time by setting\n`DNNL_CPU_RUNTIME` to `NONE`. In this case, GPU engine must be enabled.\nThe CPU engine can be configured to use the OpenMP, TBB or SYCL runtime.\nThe following additional requirements apply:\n* OpenMP runtime requires C++ compiler with OpenMP 2.0 or later\n  standard support\n* TBB runtime requires [Threading Building Blocks (TBB)] 2017 or later.\n* SYCL runtime requires\n  * [Intel oneAPI DPC++/C++ Compiler]\n  * [Threading Building Blocks (TBB)]\n\nSome implementations rely on OpenMP 4.0 SIMD extensions. For the best\nperformance results on Intel Architecture Processors we recommend using the\nIntel C++ Compiler.\n\n[Threading Building Blocks (TBB)]: https://www.threadingbuildingblocks.org/\n[Intel oneAPI DPC++/C++ Compiler]: https://www.intel.com/content/www/us/en/developer/tools/oneapi/dpc-compiler.html\n\nOn a CPU based on Arm AArch64 architecture, oneDNN CPU engine can be built with\n[Arm Compute Library (ACL)] integration. ACL is an open-source library for\nmachine learning applications and provides AArch64 optimized implementations\nof core functions. This functionality currently requires that ACL is downloaded\nand built separately. See [Build from Source] section of the Developer Guide for\ndetails. oneDNN only supports Compute Library versions 24.11.1 or later.\n\n[Arm Compute Library (ACL)]: https://github.com/arm-software/ComputeLibrary\n\n### GPU Engine\n\nIntel Processor Graphics and Xe Architecture graphics are supported by\nthe oneDNN GPU engine. The GPU engine is disabled in the default build\nconfiguration. The following additional requirements apply when GPU engine\nis enabled:\n* OpenCL runtime requires\n    * OpenCL\\* runtime library (OpenCL version 1.2 or later)\n    * OpenCL driver (with kernel language support for OpenCL C 2.0 or later)\n      with Intel subgroups and USM extensions support\n* SYCL runtime requires\n    * [Intel oneAPI DPC++/C++ Compiler]\n    * OpenCL runtime library (OpenCL version 3.0 or later)\n    * [oneAPI Level Zero]\n* SYCL runtime with NVIDIA GPU support requires\n    * [oneAPI DPC++ Compiler with support for CUDA] or [oneAPI for NVIDIA GPUs]\n    * NVIDIA CUDA\\* driver\n    * cuBLAS 10.1 or later\n    * cuDNN 7.6 or later\n* SYCL runtime with AMD GPU support requires\n    * [oneAPI DPC++ Compiler with support for HIP AMD] or [oneAPI for AMD GPUs]\n    * [AMD ROCm] version 5.3 or later\n    * [MIOpen] version 2.18 or later (optional if AMD ROCm includes the required\n    version of MIOpen)\n    * [rocBLAS] version 2.45.0 or later (optional if AMD ROCm includes\n    the required version of rocBLAS)\n* SYCL runtime with a generic GPU support requires\n    * oneAPI DPC++/C++ Compiler that supports the target GPU. Refer to the\n    [generic GPU vendor readme](src/gpu/generic/sycl/README.md) for more information.\n\n> **WARNING**\n>\n> Linux will reset GPU when kernel runtime exceeds several seconds. The user\n> can prevent this behavior by [disabling hangcheck] for Intel GPU driver.\n> Windows has built-in [timeout detection and recovery] mechanism that results\n> in similar behavior. The user can prevent this behavior by increasing the\n> [TdrDelay] value.\n\n> **WARNING**\n>\n> NVIDIA GPU support is experimental. General information, build instructions,\n> and implementation limitations are available in the\n> [NVIDIA backend readme](src/gpu/nvidia/README.md).\n\n> **WARNING**\n>\n> AMD GPU support is experimental. General information, build instructions,\n> and implementation limitations are available in the\n> [AMD backend readme](src/gpu/amd/README.md).\n\n[oneAPI Level Zero]: https://github.com/oneapi-src/level-zero\n[oneAPI DPC++ Compiler with support for CUDA]: https://github.com/intel/llvm/blob/sycl/sycl/doc/GetStartedGuide.md#build-dpc-toolchain-with-support-for-nvidia-cuda\n[oneAPI for NVIDIA GPUs]: https://developer.codeplay.com/products/oneapi/nvidia/home\n[oneAPI DPC++ Compiler with support for HIP AMD]: https://github.com/intel/llvm/blob/sycl/sycl/doc/GetStartedGuide.md#build-dpc-toolchain-with-support-for-hip-amd\n[oneAPI for AMD GPUs]: https://developer.codeplay.com/products/oneapi/amd/home/\n[AMD ROCm]: https://github.com/RadeonOpenCompute/ROCm\n[MIOpen]: https://github.com/ROCmSoftwarePlatform/MIOpen\n[rocBLAS]: https://github.com/ROCmSoftwarePlatform/rocBLAS\n[disabling hangcheck]: https://www.intel.com/content/www/us/en/docs/oneapi/installation-guide-linux/2023-0/gpu-disable-hangcheck.html\n[timeout detection and recovery]: https://learn.microsoft.com/en-us/windows-hardware/drivers/display/timeout-detection-and-recovery\n[TdrDelay]: https://learn.microsoft.com/en-us/windows-hardware/drivers/display/tdr-registry-keys#tdrdelay\n\n### Runtime Dependencies\n\nWhen oneDNN is built from source, the library runtime dependencies and specific\nversions are defined by the build environment.\n\n#### Linux\n\nCommon dependencies:\n* GNU C Library (`libc.so`)\n* GNU Standard C++ Library v3 (`libstdc++.so`)\n* Dynamic Linking Library (`libdl.so`)\n* C Math Library (`libm.so`)\n* POSIX Threads Library (`libpthread.so`)\n\nRuntime-specific dependencies:\n\n| Runtime configuration    | Compiler                      | Dependency\n| :----------------------- | :---------------------------- | :---------\n| `DNNL_CPU_RUNTIME=OMP`   | GCC                           | GNU OpenMP runtime (`libgomp.so`)\n| `DNNL_CPU_RUNTIME=OMP`   | Intel C/C++ Compiler          | Intel OpenMP runtime (`libiomp5.so`)\n| `DNNL_CPU_RUNTIME=OMP`   | Clang                         | Intel OpenMP runtime (`libiomp5.so`)\n| `DNNL_CPU_RUNTIME=TBB`   | any                           | TBB (`libtbb.so`)\n| `DNNL_CPU_RUNTIME=SYCL`  | Intel oneAPI DPC++ Compiler   | Intel oneAPI DPC++ Compiler runtime (`libsycl.so`), TBB (`libtbb.so`), OpenCL loader (`libOpenCL.so`)\n| `DNNL_GPU_RUNTIME=OCL`   | any                           | OpenCL loader (`libOpenCL.so`)\n| `DNNL_GPU_RUNTIME=SYCL`  | Intel oneAPI DPC++ Compiler   | Intel oneAPI DPC++ Compiler runtime (`libsycl.so`), OpenCL loader (`libOpenCL.so`), oneAPI Level Zero loader (`libze_loader.so`)\n\n#### Windows\n\nCommon dependencies:\n* Microsoft Visual C++ Redistributable (`msvcrt.dll`)\n\nRuntime-specific dependencies:\n\n| Runtime configuration    | Compiler                      | Dependency\n| :----------------------- | :---------------------------- | :---------\n| `DNNL_CPU_RUNTIME=OMP`   | Microsoft Visual C++ Compiler | No additional requirements\n| `DNNL_CPU_RUNTIME=OMP`   | Intel C/C++ Compiler          | Intel OpenMP runtime (`iomp5.dll`)\n| `DNNL_CPU_RUNTIME=TBB`   | any                           | TBB (`tbb.dll`)\n| `DNNL_CPU_RUNTIME=SYCL`  | Intel oneAPI DPC++ Compiler   | Intel oneAPI DPC++ Compiler runtime (`sycl.dll`), TBB (`tbb.dll`), OpenCL loader (`OpenCL.dll`)\n| `DNNL_GPU_RUNTIME=OCL`   | any                           | OpenCL loader (`OpenCL.dll`)\n| `DNNL_GPU_RUNTIME=SYCL`  | Intel oneAPI DPC++ Compiler   | Intel oneAPI DPC++ Compiler runtime (`sycl.dll`), OpenCL loader (`OpenCL.dll`), oneAPI Level Zero loader (`ze_loader.dll`)\n\n#### macOS\n\nCommon dependencies:\n* System C/C++ runtime (`libc++.dylib`, `libSystem.dylib`)\n\nRuntime-specific dependencies:\n\n| Runtime configuration  | Compiler                      | Dependency\n| :--------------------- | :---------------------------- | :---------\n| `DNNL_CPU_RUNTIME=OMP` | Intel C/C++ Compiler          | Intel OpenMP runtime (`libiomp5.dylib`)\n| `DNNL_CPU_RUNTIME=TBB` | any                           | TBB (`libtbb.dylib`)\n\n### Validated Configurations\n\nx86-64 CPU engine was validated on RedHat\\* Enterprise Linux 8 with\n* GNU Compiler Collection 8.5, 9.5, 11.1, 11.3\n* Clang\\* 11.0, 14.0.6\n* [Intel oneAPI DPC++/C++ Compiler] 2024.0\n\non Windows Server\\* 2019 with\n* Microsoft Visual Studio 2022\n* [Intel oneAPI DPC++/C++ Compiler] 2024.0\n\non macOS 11 (Big Sur) with\n* Apple LLVM version 13.0\n\nAArch64 CPU engine was validated on Ubuntu 22.04 with\n* GNU Compiler Collection 10.0, 13.0\n* Clang\\* 17.0\n* [Arm Compiler for Linux] 24.04\n* [Arm Compute Library (ACL)] built for armv8-a arch, latest stable version\navailable at the time of release\n\non macOS 14 (Sonoma) with\n* Apple LLVM version 15.0\n\nGPU engine was validated on Ubuntu\\* 22.04 with\n* GNU Compiler Collection 8.5, and 9.5\n* Clang 11.0\n* [Intel oneAPI DPC++/C++ Compiler] 2024.0\n* [Intel Software for General Purpose GPU capabilities] latest stable version\navailable at the time of release\n\non Windows Server 2019 with\n* Microsoft Visual Studio 2022\n* [Intel oneAPI DPC++/C++ Compiler] 2024.0\n* [Intel Arc & Iris Xe Graphics Driver] latest stable version available at the\ntime of release\n\n[Intel Software for General Purpose GPU capabilities]: https://dgpu-docs.intel.com/index.html\n[Intel Arc & Iris Xe Graphics Driver]: https://www.intel.com/content/www/us/en/download/785597/intel-arc-iris-xe-graphics-windows.html\n[Arm Compiler for Linux]: https://developer.arm.com/Tools%20and%20Software/Arm%20Compiler%20for%20Linux\n\n# Applications Enabled with oneDNN\n\n* [Apache\\* MXNet](https://mxnet.apache.org)\n* [Apache SINGA](https://singa.apache.org)\n* [DeepLearning4J\\*](https://deeplearning4j.konduit.ai)\n* [Flashlight\\*](https://github.com/flashlight/flashlight)\n* [Korali](https://github.com/cselab/korali)\n* [MATLAB\\* Deep Learning Toolbox](https://www.mathworks.com/help/deeplearning)\n* [ONNX Runtime](https://onnxruntime.ai)\n* [OpenVINO(TM) toolkit](https://github.com/openvinotoolkit/openvino)\n* [PaddlePaddle\\*](http://www.paddlepaddle.org)\n* [PyTorch\\*](https://pytorch.org). Intel GPU support and additional\noptimizations are available with [Intel Extension for PyTorch].\n* [Tensorflow\\*](https://www.tensorflow.org). Intel GPU support and additional\noptimizations are available with [Intel Extension for Tensorflow].\n\n[Intel Extension for PyTorch]: https://github.com/intel/intel-extension-for-pytorch\n[Intel Extension for Tensorflow]: https://github.com/intel/intel-extension-for-tensorflow\n\n# Support\n\nSubmit questions, feature requests, and bug reports on the\n[GitHub issues] page.\n\nYou can also contact oneDNN developers via [UXL Foundation Slack] using\n[#onednn] channel.\n\n[Github issues]: https://github.com/oneapi-src/oneDNN/issues\n[UXL Foundation Slack]: https://slack-invite.uxlfoundation.org/\n[#onednn]: https://uxlfoundation.slack.com/channels/onednn\n\n# Governance\n\noneDNN project is governed by the [UXL Foundation] and you can get involved in\nthis project in multiple ways. It is possible to join the [AI Special Interest\nGroup (SIG)] meetings where the groups discuss and demonstrate work using this\nproject. Members can also join the Open Source and Specification Working Group\nmeetings.\n\nYou can also join the [mailing lists for the UXL Foundation] to be informed\nof when meetings are happening and receive the latest information and\ndiscussions.\n\n[AI Special Interest Group (SIG)]: https://github.com/uxlfoundation/foundation\n[mailing lists for the UXL Foundation]: https://lists.uxlfoundation.org/g/main/subgroups\n\n# Contributing\n\nWe welcome community contributions to oneDNN. You can find the oneDNN release\nschedule and work already in progress towards future milestones in Github's\n[Milestones] section. If you are looking for a specific task to start,\nconsider selecting from issues that are marked with the [help wanted] label.\n\nIf you have an idea on how to improve the library:\n* For changes impacting the public API or library overall, such as adding new\nprimitives or changes to the architecture, submit an [RFC pull request].\n* Ensure that the changes are consistent with the [code contribution guidelines]\nand [coding standards].\n* Ensure that you can build the product and run all the examples with your\npatch.\n* Submit a [pull request].\n\nFor additional details, see [contribution guidelines](CONTRIBUTING.md). You can\nalso contact oneDNN developers and maintainers via [UXL Foundation Slack] using\n[#onednn] channel.\n\nThis project is intended to be a safe, welcoming space for collaboration, and\ncontributors are expected to adhere to the\n[Contributor Covenant](CODE_OF_CONDUCT.md) code of conduct.\n\n[RFC pull request]: https://github.com/oneapi-src/oneDNN/tree/rfcs\n[code contribution guidelines]: CONTRIBUTING.md#code-contribution-guidelines\n[coding standards]: CONTRIBUTING.md#coding-standards\n[pull request]: https://github.com/oneapi-src/oneDNN/pulls\n[Milestones]: https://github.com/oneapi-src/oneDNN/milestones\n[help wanted]: https://github.com/oneapi-src/oneDNN/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22\n\n# License\n\noneDNN is licensed under [Apache License Version 2.0](LICENSE). Refer to the\n\"[LICENSE](LICENSE)\" file for the full license text and copyright notice.\n\nThis distribution includes third party software governed by separate license\nterms.\n\n3-clause BSD license:\n* [Xbyak](https://github.com/herumi/xbyak)\n* [gtest](https://github.com/google/googletest)\n* [Instrumentation and Tracing Technology API\n(ITT API)](https://github.com/intel/ittapi)\n* [CMake](https://github.com/Kitware/CMake)\n\n2-clause BSD license:\n* [Sphinx](https://www.sphinx-doc.org/)\n\nApache License Version 2.0:\n* [Xbyak_aarch64](https://github.com/fujitsu/xbyak_aarch64)\n* [LLVM](https://llvm.org)\n\nBoost Software License, Version 1.0:\n* [Boost C++ Libraries](https://www.boost.org/)\n\nMIT License:\n* [Intel Graphics Compute Runtime for oneAPI Level Zero\nand OpenCL Driver](https://github.com/intel/compute-runtime)\n* [Intel Graphics Compiler](https://github.com/intel/intel-graphics-compiler)\n* [oneAPI Level Zero](https://github.com/oneapi-src/level-zero)\n* [Doxyrest](https://github.com/vovkos/doxyrest)\n* [Intel Metrics Discovery Application Programming\nInterface](https://github.com/intel/metrics-discovery)\n* [spdlog](https://github.com/gabime/spdlog)\n\nThis third party software, even if included with the distribution of\nthe Intel software, may be governed by separate license terms, including\nwithout limitation, third party license terms, other Intel software license\nterms, and open source software license terms. These separate license terms\ngovern your use of the third party programs as set forth in the\n\"[THIRD-PARTY-PROGRAMS](THIRD-PARTY-PROGRAMS)\" file.\n\n# Security\n\n[Security Policy](SECURITY.md) outlines our guidelines and procedures\nfor ensuring the highest level of Security and trust for our users\nwho consume oneDNN.\n\n# Trademark Information\n\nIntel, the Intel logo, Arc, Intel Atom, Intel Core, Iris,\nOpenVINO, the OpenVINO logo, Pentium, VTune, and Xeon are trademarks\nof Intel Corporation or its subsidiaries.\n\nArm and Neoverse are trademarks, or registered trademarks of Arm Ltd.\n\n\\* Other names and brands may be claimed as the property of others.\n\nMicrosoft, Windows, and the Windows logo are trademarks, or registered\ntrademarks of Microsoft Corporation in the United States and/or other\ncountries.\n\nOpenCL and the OpenCL logo are trademarks of Apple Inc. used by permission\nby Khronos.\n\n(C) Intel Corporation\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 3.30078125,
          "content": "# Security Policy\nAs an open-source project, we understand the importance of and responsibility\nfor security. This Security policy outlines our guidelines and procedures for\nensuring the highest level of Security and trust for our users who consume\noneDNN.\n\n## Supported Versions\nWe regularly perform patch releases for the supported\n[latest version][1],\nwhich contain fixes for security vulnerabilities and important bugs. Prior\nreleases might receive critical security fixes on a best-effort basis; however,\nwe cannot guarantee that security fixes will get back-ported to these\nunsupported versions.\n\n## Report a Vulnerability\nWe are very grateful to the security researchers and users that report back\nsecurity vulnerabilities. We investigate every report thoroughly.\nWe strongly encourage you to report security vulnerabilities to us privately,\nbefore disclosing them on public forums or opening a public GitHub issue. \nReport a vulnerability to us in one of two ways:\n* Open a draft [**GitHub Security Advisory**][2]\n* Send e-mail to the following address: **security@uxlfoundation.org**.\nAlong with the report, please include the following info:\n  * A descriptive title.\n  * Your name and affiliation (if any).\n  * A description of the technical details of the vulnerabilities.\n  * A minimal example of the vulnerability so we can reproduce your findings.\n  * An explanation of who can exploit this vulnerability, and what they gain\n  when doing so. \n  * Whether this vulnerability is public or known to third parties. If it is,\n  please provide details.\n\n### When Should I Report a Vulnerability?\n* You think you discovered a potential security vulnerability in oneDNN.\n* You are unsure how the potential vulnerability affects oneDNN.\n* You think you discovered a vulnerability in another project or 3rd party\ncomponent on which oneDNN depends. If the issue is not fixed in the 3rd party\ncomponent, try to report directly there first.\n\n### When Should I NOT Report a Vulnerability?\n* You got an automated scan hit and are unable to provide details.\n* You need help using oneDNN for security.\n* You need help applying security-related updates.\n* Your issue is not security-related.\n\n## Security Reports Review Process\nOur goal is to respond quickly to your inquiry, and to coordinate a fix and\ndisclosure with you. All confirmed security vulnerabilities will be addressed\naccording to severity level and impact on oneDNN. Normally, security issues\nare fixed in the next planned release.\n\n## Disclosure Policy\nWe will publish security advisories using the \n[**GitHub Security Advisories feature**][3]\nto keep our community well-informed, and will credit you for your findings\nunless you prefer to stay anonymous. We request that you refrain from\nexploiting the vulnerability or making it public before the official disclosure.\n\nWe will disclose the vulnerabilities and/or bugs as soon as possible once\nmitigation is implemented and available. \n\n## Feedback on This Policy\nIf you have any suggestions on how this Policy could be improved, please submit\nan issue or a pull request to this repository. Please **do not** report\npotential vulnerabilities or security flaws via a pull request.\n\n[1]: https://github.com/oneapi-src/oneDNN/releases/latest\n[2]: https://github.com/oneapi-src/oneDNN/security/advisories/new\n[3]: https://github.com/oneapi-src/oneDNN/security/advisories\n"
        },
        {
          "name": "THIRD-PARTY-PROGRAMS",
          "type": "blob",
          "size": 42.8662109375,
          "content": "oneAPI Deep Neural Network Library (oneDNN) Third Party Programs File\n\nThis file contains the list of third party software (\"third party programs\")\ncontained in the Intel software and their required notices and/or license\nterms. This third party software, even if included with the distribution of\nthe Intel software, may be governed by separate license terms, including\nwithout limitation, third party license terms, other Intel software license\nterms, and open source software license terms. These separate license terms\ngovern your use of the third party programs as set forth in in the\n\"THIRD-PARTY-PROGRAMS\" file.\n\nThird party programs and their corresponding required notices and/or license\nterms are listed below.\n\n--------------------------------------------------------------------------------\n1. XByak (src/cpu/xbyak/)\nCopyright (c) 2007 MITSUNARI Shigeo\nAll rights reserved.\n\n3-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\nNeither the name of the copyright owner nor the names of its contributors may\nbe used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\nTHE POSSIBILITY OF SUCH DAMAGE.\n\n\nソースコード形式かバイナリ形式か、変更するかしないかを問わず、以下の条件を満た\nす場合に限り、再頒布および使用が許可されます。\n\nソースコードを再頒布する場合、上記の著作権表示、本条件一覧、および下記免責条項\nを含めること。\nバイナリ形式で再頒布する場合、頒布物に付属のドキュメント等の資料に、上記の著作\n権表示、本条件一覧、および下記免責条項を含めること。\n書面による特別の許可なしに、本ソフトウェアから派生した製品の宣伝または販売促進\nに、著作権者の名前またはコントリビューターの名前を使用してはならない。\n本ソフトウェアは、著作権者およびコントリビューターによって「現状のまま」提供さ\nれており、明示黙示を問わず、商業的な使用可能性、および特定の目的に対する適合性\nに関する暗黙の保証も含め、またそれに限定されない、いかなる保証もありません。\n著作権者もコントリビューターも、事由のいかんを問わず、 損害発生の原因いかんを\n問わず、かつ責任の根拠が契約であるか厳格責任であるか（過失その他の）不法行為で\nあるかを問わず、仮にそのような損害が発生する可能性を知らされていたとしても、\n本ソフトウェアの使用によって発生した（代替品または代用サービスの調達、使用の\n喪失、データの喪失、利益の喪失、業務の中断も含め、またそれに限定されない）直接\n損害、間接損害、偶発的な損害、特別損害、懲罰的損害、または結果損害について、\n一切責任を負わないものとします。\n\n--------------------------------------------------------------------------------\n2. Googletest (tests/gtests/gtest/)\nCopyright 2005, Google Inc.\nCopyright 2006, Google Inc.\nCopyright 2007, Google Inc.\nCopyright 2008, Google Inc.\nCopyright 2015, Google Inc.\nAll rights reserved.\n\n3-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n3. Instrumentation and Tracing Technology API (src/common/ittnotify/)\nCopyright (c) 2011, Intel Corporation. All rights reserved.\nCopyright (c) 2005-2014 Intel Corporation. All rights reserved.\n\n3-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of Intel Corporation nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n4. CMake (cmake/FindOpenCL.cmake, cmake/FindBLAS.cmake, cmake/FindACL.cmake)\nCMake - Cross Platform Makefile Generator\nCopyright 2000-2020 Kitware, Inc. and Contributors\nAll rights reserved.\n\n3-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n* Neither the name of Kitware, Inc. nor the names of Contributors\n  may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\n5. spdlog (src/common/spdlog/)\n\nThe MIT License (MIT)\nCopyright (c) 2016 Gabi Melman.                                       \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n-- NOTE: Third party dependency used by this software --\nThis software depends on the fmt lib (MIT License),\nand users must comply to its license:\n https://raw.githubusercontent.com/fmtlib/fmt/master/LICENSE\n \n------------------------------------------------------------------------------\n\nThe following individuals and institutions are among the Contributors:\n\n* Aaron C. Meadows <cmake@shadowguarddev.com>\n* Adriaan de Groot <groot@kde.org>\n* Aleksey Avdeev <solo@altlinux.ru>\n* Alexander Neundorf <neundorf@kde.org>\n* Alexander Smorkalov <alexander.smorkalov@itseez.com>\n* Alexey Sokolov <sokolov@google.com>\n* Alex Merry <alex.merry@kde.org>\n* Alex Turbov <i.zaufi@gmail.com>\n* Andreas Pakulat <apaku@gmx.de>\n* Andreas Schneider <asn@cryptomilk.org>\n* André Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n* Axel Huebl, Helmholtz-Zentrum Dresden - Rossendorf\n* Benjamin Eikel\n* Bjoern Ricks <bjoern.ricks@gmail.com>\n* Brad Hards <bradh@kde.org>\n* Christopher Harvey\n* Christoph Grüninger <foss@grueninger.de>\n* Clement Creusot <creusot@cs.york.ac.uk>\n* Daniel Blezek <blezek@gmail.com>\n* Daniel Pfeifer <daniel@pfeifer-mail.de>\n* Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n* Eran Ifrah <eran.ifrah@gmail.com>\n* Esben Mose Hansen, Ange Optimization ApS\n* Geoffrey Viola <geoffrey.viola@asirobots.com>\n* Google Inc\n* Gregor Jasny\n* Helio Chissini de Castro <helio@kde.org>\n* Ilya Lavrenov <ilya.lavrenov@itseez.com>\n* Insight Software Consortium <insightsoftwareconsortium.org>\n* Jan Woetzel\n* Julien Schueller\n* Kelly Thompson <kgt@lanl.gov>\n* Konstantin Podsvirov <konstantin@podsvirov.pro>\n* Laurent Montel <montel@kde.org>\n* Mario Bensi <mbensi@ipsquad.net>\n* Martin Gräßlin <mgraesslin@kde.org>\n* Mathieu Malaterre <mathieu.malaterre@gmail.com>\n* Matthaeus G. Chajdas\n* Matthias Kretz <kretz@kde.org>\n* Matthias Maennich <matthias@maennich.net>\n* Michael Hirsch, Ph.D. <www.scivision.co>\n* Michael Stürmer\n* Miguel A. Figueroa-Villanueva\n* Mike Jackson\n* Mike McQuaid <mike@mikemcquaid.com>\n* Nicolas Bock <nicolasbock@gmail.com>\n* Nicolas Despres <nicolas.despres@gmail.com>\n* Nikita Krupen'ko <krnekit@gmail.com>\n* NVIDIA Corporation <www.nvidia.com>\n* OpenGamma Ltd. <opengamma.com>\n* Patrick Stotko <stotko@cs.uni-bonn.de>\n* Per Øyvind Karlsen <peroyvind@mandriva.org>\n* Peter Collingbourne <peter@pcc.me.uk>\n* Petr Gotthard <gotthard@honeywell.com>\n* Philip Lowman <philip@yhbt.com>\n* Philippe Proulx <pproulx@efficios.com>\n* Raffi Enficiaud, Max Planck Society\n* Raumfeld <raumfeld.com>\n* Roger Leigh <rleigh@codelibre.net>\n* Rolf Eike Beer <eike@sf-mail.de>\n* Roman Donchenko <roman.donchenko@itseez.com>\n* Roman Kharitonov <roman.kharitonov@itseez.com>\n* Ruslan Baratov\n* Sebastian Holtermann <sebholt@xwmw.org>\n* Stephen Kelly <steveire@gmail.com>\n* Sylvain Joubert <joubert.sy@gmail.com>\n* The Qt Company Ltd.\n* Thomas Sondergaard <ts@medical-insight.com>\n* Tobias Hunger <tobias.hunger@qt.io>\n* Todd Gamblin <tgamblin@llnl.gov>\n* Tristan Carel\n* University of Dundee\n* Vadim Zhukov\n* Will Dicharry <wdicharry@stellarscience.com>\n\nSee version control history for details of individual contributions.\n\nThe above copyright and license notice applies to distributions of\nCMake in source and binary form.  Third-party software packages supplied\nwith CMake under compatible licenses provide their own copyright notices\ndocumented in corresponding subdirectories or source files.\n\n------------------------------------------------------------------------------\n\nCMake was initially developed by Kitware with the following sponsorship:\n\n * National Library of Medicine at the National Institutes of Health\n   as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n   Visualization Initiative.\n\n * National Alliance for Medical Image Computing (NAMIC) is funded by the\n   National Institutes of Health through the NIH Roadmap for Medical Research,\n   Grant U54 EB005149.\n\n * Kitware, Inc.\n\n--------------------------------------------------------------------------------\n5. Xbyak_aarch64 (src/cpu/aarch64/xbyak_aarch64/)\nCopyright 2019-2020 FUJITSU LIMITED\n\nApache License, Version 2.0\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n--------------------------------------------------------------------------------\n6. Boost C++ Libraries (src/common/primitive_hashing.hpp, src/graph/backend/graph_compiler/core/src/util/hash_utils.hpp)\nCopyright 2005-2014 Daniel James.\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n7. Intel(R) Graphics Compute Runtime for oneAPI Level Zero and OpenCL(TM)\nDriver (src/gpu/jit/ngen/npack/{elf_structs,hash}.hpp)\nCopyright (c) 2018 Intel Corporation\n\nIntel(R) Graphics Compiler (src/gpu/jit/ngen/npack/neo_structs.hpp)\nCopyright (c) 2019 Intel Corporation\n\noneAPI Level Zero (src/sycl/level_zero)\nCopyright (C) 2019-2021 Intel Corporation\n\nDoxyrest toolkit (doc/doxyrest/*)\nCopyright (c) 2016, Tibbo Technology Inc\nCopyright (c) 2016, Vladimir Gladkov\nCopyright (c) 2016, Doxyrest maintainers\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n8. Sphinx (doc/sphinx/conf/py)\nCopyright (c) 2007-2021 by the Sphinx team (see AUTHORS file).\nAll rights reserved.\n\n2-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--------------------------------------------------------------------------------\n9. Intel(R) Metrics Discovery Application Programming Interface (src/gpu/ocl/mdapi/metrics_discovery_api.h)\nMIT License\n\nCopyright (c) 2019, Intel Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\n10. LLVM (src/graph/backend/graph_compiler/core/src/util/array_ref.hpp)\n==============================================================================\nThe LLVM Project is under the Apache License v2.0 with LLVM Exceptions:\n==============================================================================\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n    1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n    2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n    3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n    4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n    5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n    6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n    7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n    8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n    9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n    END OF TERMS AND CONDITIONS\n\n    APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n    Copyright [yyyy] [name of copyright owner]\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n---- LLVM Exceptions to the Apache 2.0 License ----\n\nAs an exception, if, as a result of your compiling your source code, portions\nof this Software are embedded into an Object form of such source code, you\nmay redistribute such embedded portions in such Object form without complying\nwith the conditions of Sections 4(a), 4(b) and 4(d) of the License.\n\nIn addition, if you combine or link compiled forms of this Software with\nsoftware that is licensed under the GPLv2 (\"Combined Software\") and if a\ncourt of competent jurisdiction determines that the patent provision (Section\n3), the indemnity provision (Section 9) or other Section of the License\nconflicts with the conditions of the GPLv2, you may retroactively and\nprospectively choose to deem waived or otherwise exclude such Section(s) of\nthe License, but only in their entirety and only with respect to the Combined\nSoftware.\n"
        },
        {
          "name": "_clang-format",
          "type": "blob",
          "size": 3.689453125,
          "content": "#===============================================================================\n# Copyright 2016-2019 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#===============================================================================\n\n---\nLanguage:        Cpp\nAccessModifierOffset: -4\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: DontAlign\nAlignOperands:   false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 8\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nFixNamespaceComments: true\nForEachMacros:\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex: '<[[:alnum:].]+>'\n    Priority: 0\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: true\n# IndentPPDirectives: AfterHash\nIndentPPDirectives: None\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  false\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nStatementMacros:\n  - for_\n  - PRAGMA_OMP\n  - PRAGMA_OMP_SIMD\nTabWidth:        4\nUseTab:          Never\n...\n# vim:ft=conf et ts=2 sw=2\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}