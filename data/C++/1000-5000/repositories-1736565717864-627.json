{
  "metadata": {
    "timestamp": 1736565717864,
    "page": 627,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "namazso/SecureUxTheme",
      "stars": 2432,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.0693359375,
          "content": "BasedOnStyle: LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: BlockIndent\nAlignArrayOfStructures: Right\nAlignConsecutiveAssignments: None\nAlignConsecutiveBitFields: AcrossEmptyLinesAndComments\nAlignConsecutiveMacros: Consecutive\nAlignEscapedNewlines: Left\nAlignOperands: Align\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: false\nAllowAllConstructorInitializersOnNextLine: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: Always\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: false\nBinPackParameters: false\nBitFieldColonSpacing: Before\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterCaseLabel: false\n  AfterClass: false\n  AfterControlStatement: Never\n  AfterEnum: false\n  AfterFunction: false\n  AfterNamespace: false\n  AfterStruct: false\n  AfterUnion: false\n  AfterExternBlock: false\n  BeforeCatch: false\n  BeforeElse: false\n  BeforeLambdaBody: false\n  BeforeWhile: false\n  IndentBraces: false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeConceptDeclarations: Allowed\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeComma\nBreakInheritanceList: BeforeComma\nBreakStringLiterals: false\nColumnLimit: 0\nCompactNamespaces: false\nContinuationIndentWidth: 2\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: Always\nFixNamespaceComments: true\nIncludeBlocks: Preserve\nIndentAccessModifiers: false\nIndentCaseLabels: false\nIndentExternBlock: NoIndent\nIndentGotoLabels: false\nIndentPPDirectives: None\nIndentWidth: 2\nIndentWrappedFunctionNames: false\nInsertTrailingCommas: Wrapped\nKeepEmptyLinesAtTheStartOfBlocks: false\nLambdaBodyIndentation: Signature\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: All\nPackConstructorInitializers: CurrentLine\nPointerAlignment: Left\nQualifierAlignment: Custom\nQualifierOrder: [ 'inline', 'static', 'constexpr', 'const', 'volatile', 'type', 'restrict' ]\nReferenceAlignment: Left\nReflowComments: false\nRequiresClausePosition: OwnLine\nSeparateDefinitionBlocks: Always\nShortNamespaceLines: 10\nSortIncludes: CaseInsensitive\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: false\nSpacesInLineCommentPrefix:\n  Minimum: 1\n  Maximum: -1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: c++20\nTabWidth: 2\nUseTab: Never"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "cmake-*\n.idea\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.076171875,
          "content": "[submodule \"phnt\"]\n\tpath = phnt\n\turl = https://github.com/winsiderss/phnt.git\n"
        },
        {
          "name": "AVRF.md",
          "type": "blob",
          "size": 18.16015625,
          "content": "# Application Verifier Custom Providers\n\nThis post isn't innovation or anything. It is a renewing of an old microsoft blogpost (and some other publication vanished in time and dated back to 2004(?)). Recently, I have been looking over this method to solve a very specific task, unfortunately it didn't help me, but I thought it will be interesting to share this (again) with everybody.\n\nExpected target system is x64, however it will be the same for x86.\n\n## Information\n\n**What is Application Verifier (AVrf)?**\n\nIt is a built-in Windows Native debugging mechanism. It is supported everywhere in all actual NT versions (and in Windows XP too).\n\nYou can read about it here -> [MSDN: Application Verifier](http://msdn.microsoft.com/en-us/library/ms220948(v=vs.90).aspx)\n\nAnd also in the WinDBG documentation -> [!avrf WinDBG command](http://msdn.microsoft.com/en-us/library/Windows/hardware/ff562138(v=vs.85).aspx)\n\n**What are the requirements to use it?**\n\nAdministrator rights required, for write access for the IFEO registry key (Image File Execution Options) and the %SystemRoot%\\System32 directory.\n\n**How does it work?**\n\nIt is a DLL injection based debugging mechanism built on IAT hooking. Windows will give you a free, stable and easy to use hooking mechanism in addition to dll injection at the earlier stage of process loading.\n\nYou have to create a dll, which is called a \"Custom Verifier Provider DLL\", by writing a dllmain.cpp file, declaring the InitRoutine entrypoint, and registering the dll as a \"verifier provider\" by checking if the fdwReason parameter is set to `DLL_PROCESS_VERIFIER`, and if so, call `RegisterProvider()`. After that you can add your code. (full example provided). Keep in mind, the InitRoutine entrypoint is the same as the DllMain entrypoint\n\nYour code will be loaded just after verifier at earlier process startup time when no other dlls are loaded except ntdll, api set schema and verifier dlls. Note that because nothing else loaded at time when your code gets control you should be using Native API at entry code. Later usual dlls will be loaded (depends on appplication imports of course).\n\n## AVrf Declarations and Structures\n\nSome of these can be found in old DDK files, but keep in mind, this stuff isn't documented and may change in the next version of Windows. However, it didn't change since XP and works perfectly in Windows 11, quite doubtful that it will change in the future.\n\nYou can rip all these structures from WDK8 mfcs42ud.pdb, for unknown reasons this PDB has all of these. Maybe these can be also found somewhere in WDK or in other PDB files.\n\n### RTL_VERIFIER_PROVIDER_DESCRIPTOR\n\n```c\ntypedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR {\n  DWORD Length;\n  PRTL_VERIFIER_DLL_DESCRIPTOR ProviderDlls;\n  RTL_VERIFIER_DLL_LOAD_CALLBACK ProviderDllLoadCallback;\n  RTL_VERIFIER_DLL_UNLOAD_CALLBACK ProviderDllUnloadCallback;\n  PWSTR VerifierImage;\n  DWORD VerifierFlags;\n  DWORD VerifierDebug;\n  PVOID RtlpGetStackTraceAddress;\n  PVOID RtlpDebugPageHeapCreate;\n  PVOID RtlpDebugPageHeapDestroy;\n  RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK ProviderNtdllHeapFreeCallback;\n} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;\n```\n\nMain custom provider structure.\n\nSignificant members:\n\n#### Length\n\nThe size of this data structure, in bytes. Set this member to sizeof(RTL_VERIFIER_PROVIDER_DESCRIPTOR).\n\n#### ProviderDlls\n\nPointer to array of RTL_VERIFIER_DLL_DESCRIPTOR type structures, describing dlls to be hooked.\n\n#### ProviderDllLoadCallback\n\nPointer to a dlls loading callback, with the following format\n\n```c\ntypedef VOID (NTAPI * RTL_VERIFIER_DLL_LOAD_CALLBACK) (PWSTR DllName, PVOID DllBase, SIZE_T DllSize, PVOID Reserved);\n```\n\nThis callback will be called before DLL_PROCESS_ATTACH event of any loading dll.\n\n#### ProviderDllUnloadCallback\n\nPointer to dlls unloading callback, with the following format\n\n```c\ntypedef VOID (NTAPI * RTL_VERIFIER_DLL_UNLOAD_CALLBACK) (PWSTR DllName, PVOID DllBase, SIZE_T DllSize, PVOID Reserved);\n```\n\nThis callback will be called before DLL_PROCESS_DETACH event of any unloading dll.\n\n...\n\n#### ProviderNtdllHeapFreeCallback\n\nPointer to callback called before any ntdll heap free, has the following format\n\n```c\ntypedef VOID (NTAPI * RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK) (PVOID AllocationBase, SIZE_T AllocationSize);\n```\n\n### RTL_VERIFIER_DLL_DESCRIPTOR\n\n```c\ntypedef struct _RTL_VERIFIER_DLL_DESCRIPTOR {\n  PWCHAR DllName;\n  DWORD DllFlags;\n  PVOID DllAddress;\n  PRTL_VERIFIER_THUNK_DESCRIPTOR DllThunks;\n} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR;\n```\n\nMembers:\n\n#### PWCHAR DllName\n\nUnicode name of dll which routines you want to filter. E.g. L\"kernel32.dll\"\n\n#### DllFlags\n\nFilled by verifier, do not use.\n\n#### DllAddress\n\nFilled by verifier, do not use.\n\n#### DllThunks\n\nPointer to array of RTL_VERIFIER_THUNK_DESCRIPTOR structures, describing each hook.\n\n### RTL_VERIFIER_THUNK_DESCRIPTOR\n\n```c\ntypedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR {\n  PCHAR ThunkName;\n  PVOID ThunkOldAddress;\n  PVOID ThunkNewAddress;\n} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR;\n```\n\nMembers:\n\n#### ThunkName\n\nANSI name of routine to intercept. E.g. \"CloseHandle\"\n\n#### ThunkOldAddress\n\nFilled by verifier, do not change. There will be stored original address of hooked by IAT patching routine.\n\n#### ThunkNewAddress\n\nPointer to hook handler. E.g. CloseHandleHook\n\n### InitRoutine (DllMain)\n\n```c\nBOOL WINAPI InitRoutine(\n  PVOID DllHandle,\n  DWORD fdwReason,\n  PRTL_VERIFIER_PROVIDER_DESCRIPTOR* pVPD\n  )\n{\n  switch(fdwReason)\n  {\n  case DLL_PROCESS_ATTACH:\n    LdrDisableThreadCalloutsForDll(DllHandle);\n    break;\n  case DLL_PROCESS_VERIFIER:\n    RegisterProvider();\n    *pVPD = &g_avrfProvider;\n    Payload();\n    break;\n  default:\n    break;\n  }\n  return TRUE;\n}\n```\n\nThe same DllMain but with usage of 3rd parameter and custom provider registration at new undocumented fdwReason.\n\n### AVrf reason code for dll entry point\n\n```c\n#define DLL_PROCESS_VERIFIER 4\n```\n\nThis event will occur **_before_** any other events.\n\n## AVrf custom provider installation\n\nCopy your provider dll to the %SystemRoot%\\System32 directory. Note: For hooking into 32-bit processes on a 64-bit system, you have to use the %SystemRoot%\\SysWOW64 directory. Administrator rights are required.\n\n\nInstall the provider dll for the specific application you want to debug, go to the IFEO key:\n`HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AppName` (Replace `AppName` with the name of the program, including extension). Note: For hooking into 32-bit processes on a 64-bit system, you have to use the `HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options` key.\n\nHere, Set the `VerifierDlls` value to the name of your dll (can be multiple), specifying extension is optional.\n\n`\"VerifierDlls\"=\"mydll.dll\"`\n\nEnable Application Verifier for this application, in the same key.\n\n`\"GlobalFlag\"=dword:00000100`\n\nWhere `0x00000100` is `FLG_APPLICATION_VERIFIER` -> [Enable application verifier](http://msdn.microsoft.com/en-us/library/Windows/hardware/ff542875(v=vs.85).aspx)\n\nExample:\n\n```reg\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\mytest.exe]\n\"VerifierDlls\"=\"mydll.dll\"\n\"GlobalFlag\"=dword:00000100\n```\n\n## AVrf Custom provider example\n\nThis custom provider implements hooking of NtQuerySystemInformation with debug output of it result and Avrf dynamic-link libraries load callback example.\n\n```c\n#include \"ntdll\\ntdll.h\"\n#include \"ntdll\\ntstatus.h\"\n\n#define DLL_PROCESS_VERIFIER 4\n\ntypedef VOID (NTAPI * RTL_VERIFIER_DLL_LOAD_CALLBACK) (PWSTR DllName, PVOID DllBase, SIZE_T DllSize, PVOID Reserved);\ntypedef VOID (NTAPI * RTL_VERIFIER_DLL_UNLOAD_CALLBACK) (PWSTR DllName, PVOID DllBase, SIZE_T DllSize, PVOID Reserved);\ntypedef VOID (NTAPI * RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK) (PVOID AllocationBase, SIZE_T AllocationSize);\n\ntypedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR {\n  PCHAR ThunkName;\n  PVOID ThunkOldAddress;\n  PVOID ThunkNewAddress;\n} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR;\n\ntypedef struct _RTL_VERIFIER_DLL_DESCRIPTOR {\n  PWCHAR DllName;\n  DWORD DllFlags;\n  PVOID DllAddress;\n  PRTL_VERIFIER_THUNK_DESCRIPTOR DllThunks;\n} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR;\n\ntypedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR {\n  DWORD Length;\n  PRTL_VERIFIER_DLL_DESCRIPTOR ProviderDlls;\n  RTL_VERIFIER_DLL_LOAD_CALLBACK ProviderDllLoadCallback;\n  RTL_VERIFIER_DLL_UNLOAD_CALLBACK ProviderDllUnloadCallback;\n  PWSTR VerifierImage;\n  DWORD VerifierFlags;\n  DWORD VerifierDebug;\n  PVOID RtlpGetStackTraceAddress;\n  PVOID RtlpDebugPageHeapCreate;\n  PVOID RtlpDebugPageHeapDestroy;\n  RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK ProviderNtdllHeapFreeCallback;\n} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;\n\nstatic RTL_VERIFIER_THUNK_DESCRIPTOR avrfThunks[2];\nstatic RTL_VERIFIER_DLL_DESCRIPTOR avrfDlls[2];\nstatic RTL_VERIFIER_PROVIDER_DESCRIPTOR g_avrfProvider;\n\ntypedef NTSTATUS (NTAPI *pfnNtQuerySystemInformation)(\n    IN SYSTEM_INFORMATION_CLASS SystemInformationClass,\n    OUT OPTIONAL PVOID SystemInformation,\n    IN ULONG SystemInformationLength,\n    OUT OPTIONAL PULONG ReturnLength\n    );\n\npfnNtQuerySystemInformation pNtQuerySystemInformation;\n\nVOID NTAPI avrfLoadCallback(PWSTR DllName, PVOID DllBase, SIZE_T DllSize, PVOID Reserved)\n{\n  DbgPrint(\"VerifierLoadCallback - dll load %ws, DllBase = %p\\n\\r\", DllName, DllBase);\n}\n\nNTSTATUS NTAPI NtQuerySystemInformationHook(\n    IN SYSTEM_INFORMATION_CLASS SystemInformationClass,\n    OUT OPTIONAL PVOID SystemInformation,\n    IN ULONG SystemInformationLength,\n    OUT OPTIONAL PULONG ReturnLength\n    )\n{\n  NTSTATUS status;\n\n  status = ((pfnNtQuerySystemInformation)(avrfThunks[0].ThunkOldAddress))(SystemInformationClass, SystemInformation, SystemInformationLength, ReturnLength);\n\n  DbgPrint(\"NtQuerySystemInformation(%d) = %lx\\n\\r\", SystemInformationClass, status);\n  return status;\n}\n\nVOID Payload()\n{\n  DbgPrint(\"DLL!Payload()\\n\\r\");\n}\n\nVOID RegisterProvider(\n  VOID\n  )\n{\n  DbgPrint(\"DLL!RegisterProvider\\n\\r\");\n\n  avrfThunks[0].ThunkName = \"RtlQueryElevationFlags\";\n  avrfThunks[0].ThunkOldAddress = NULL;\n  avrfThunks[0].ThunkNewAddress = &RtlQueryElevationFlagsHook;\n\n  avrfDlls[0].DllName = L\"ntdll.dll\";\n  avrfDlls[0].DllFlags = 0;\n  avrfDlls[0].DllAddress = NULL;\n  avrfDlls[0].DllThunks = avrfThunks;\n\n  RtlSecureZeroMemory(&g_avrfProvider, sizeof(RTL_VERIFIER_PROVIDER_DESCRIPTOR));\n  g_avrfProvider.Length = sizeof(RTL_VERIFIER_PROVIDER_DESCRIPTOR);\n  g_avrfProvider.ProviderDlls = avrfDlls;\n  g_avrfProvider.ProviderDllLoadCallback = (RTL_VERIFIER_DLL_LOAD_CALLBACK)&avrfLoadCallback;\n}\n\nBOOL WINAPI InitRoutine(\n  PVOID DllHandle,\n  DWORD fdwReason,\n  PRTL_VERIFIER_PROVIDER_DESCRIPTOR* pVPD\n  )\n{\n  switch(fdwReason)\n  {\n  case DLL_PROCESS_ATTACH:\n    DbgPrint(\"DLL!DLL_PROCESS_ATTACH\\n\\r\");\n    LdrDisableThreadCalloutsForDll(DllHandle);\n    break;\n  case DLL_PROCESS_DETACH:\n    DbgPrint(\"DLL!DLL_PROCESS_DETACH\\n\\r\");\n    break;\n  case DLL_PROCESS_VERIFIER:\n    DbgPrint(\"DLL!DLL_PROCESS_VERIFIER\\n\\r\");\n    RegisterProvider();\n    *pVPD = &g_avrfProvider;\n    Payload();\n    break;\n  default:\n    break;\n  }\n  return TRUE;\n}\n```\n\nExecution trace result (Dependency Walker), custom provider name - \"dll.dll\"\n\n```txt\nOptions Selected:\n     Simulate ShellExecute by inserting any App Paths directories into the PATH environment variable.\n     Log thread information.\n     Use simple thread numbers instead of actual thread IDs.\n     Log first chance exceptions.\n     Log debug output messages.\n     Use full paths when logging file names.\n     Log a time stamp with each line of log.\n     Automatically open and profile child processes.\n--------------------------------------------------------------------------------\n\n00:00:00.000: Started \"c:\\verifier_test\\VRTEST.EXE\" (process 0x1580) at address 0x00000000FFC20000 by thread 1.\n00:00:00.000: Loaded \"c:\\windows\\system32\\NTDLL.DLL\" at address 0x0000000076F40000 by thread 1.\n00:00:00.015: Loaded \"c:\\windows\\system32\\VERIFIER.DLL\" at address 0x000007FEF93B0000 by thread 1.\n00:00:00.015: Page heap: pid 0x1580: page heap enabled with flags 0x2.\n00:00:00.015: AVRF: VRTEST.EXE: pid 0x1580: flags 0x48004: application verifier enabled\n00:00:00.031: Loaded \"c:\\windows\\system32\\DLL.DLL\" at address 0x000007FEF9D50000 by thread 1.\n00:00:00.031: DLL!DLL_PROCESS_VERIFIER\n00:00:00.031: DLL!RegisterProvider\n00:00:00.031: DLL!Payload()\n00:00:00.031: DLL!DLL_PROCESS_ATTACH\n00:00:00.031: Loaded \"c:\\windows\\system32\\KERNEL32.DLL\" at address 0x0000000076E20000 by thread 1.\n00:00:00.046: Loaded \"c:\\windows\\system32\\KERNELBASE.DLL\" at address 0x000007FEFCDD0000 by thread 1.\n00:00:00.046: VerifierLoadCallback - dll load KERNELBASE.dll, DllBase = 000007FEFCDD0000\n00:00:00.046: VerifierLoadCallback - dll load kernel32.dll, DllBase = 0000000076E20000\n00:00:00.046: DLL!DLL_PROCESS_ATTACH\n00:00:00.046: NtQuerySystemInformation(50) = 0\n00:00:00.046: NtQuerySystemInformation(0) = 0\n00:00:00.046: NtQuerySystemInformation(1) = 0\n00:00:00.046: NtQuerySystemInformation(0) = 0\n00:00:00.046: NtQuerySystemInformation(1) = 0\n00:00:00.046: Loaded \"c:\\windows\\system32\\USER32.DLL\" at address 0x0000000076D20000 by thread 1.\n00:00:00.046: Loaded \"c:\\windows\\system32\\GDI32.DLL\" at address 0x000007FEFEBD0000 by thread 1.\n00:00:00.046: Loaded \"c:\\windows\\system32\\LPK.DLL\" at address 0x000007FEFF240000 by thread 1.\n00:00:00.046: Loaded \"c:\\windows\\system32\\USP10.DLL\" at address 0x000007FEFDAE0000 by thread 1.\n00:00:00.046: Loaded \"c:\\windows\\system32\\MSVCRT.DLL\" at address 0x000007FEFEF70000 by thread 1.\n00:00:00.062: VerifierLoadCallback - dll load msvcrt.dll, DllBase = 000007FEFEF70000\n00:00:00.062: VerifierLoadCallback - dll load USP10.dll, DllBase = 000007FEFDAE0000\n00:00:00.062: VerifierLoadCallback - dll load LPK.dll, DllBase = 000007FEFF240000\n00:00:00.062: VerifierLoadCallback - dll load GDI32.dll, DllBase = 000007FEFEBD0000\n00:00:00.062: VerifierLoadCallback - dll load USER32.dll, DllBase = 0000000076D20000\n00:00:00.062: Loaded \"c:\\windows\\system32\\SHELL32.DLL\" at address 0x000007FEFDD90000 by thread 1.\n00:00:00.062: Loaded \"c:\\windows\\system32\\SHLWAPI.DLL\" at address 0x000007FEFDD10000 by thread 1.\n00:00:00.062: VerifierLoadCallback - dll load SHLWAPI.dll, DllBase = 000007FEFDD10000\n00:00:00.062: VerifierLoadCallback - dll load SHELL32.dll, DllBase = 000007FEFDD90000\n00:00:00.062: VerifierLoadCallback - dll load VRTEST.EXE, DllBase = 00000000FFC20000\n00:00:00.062: Entrypoint reached. All implicit modules have been loaded.\n00:00:00.062: Loaded \"c:\\windows\\system32\\APPHELP.DLL\" at address 0x000007FEFCB70000 by thread 1.\n00:00:00.078: VerifierLoadCallback - dll load apphelp.dll, DllBase = 000007FEFCB70000\n00:00:00.078: NtQuerySystemInformation(1) = 0\n00:00:00.078: Loaded \"c:\\windows\\apppatch\\apppatch64\\ACGENRAL.DLL\" at address 0x000007FEF2BA0000 by thread 1.\n00:00:00.078: Loaded \"c:\\windows\\system32\\SSPICLI.DLL\" at address 0x000007FEFCB40000 by thread 1.\n00:00:00.078: Loaded \"c:\\windows\\system32\\RPCRT4.DLL\" at address 0x000007FEFF010000 by thread 1.\n00:00:00.078: VerifierLoadCallback - dll load RPCRT4.dll, DllBase = 000007FEFF010000\n00:00:00.078: VerifierLoadCallback - dll load SspiCli.dll, DllBase = 000007FEFCB40000\n00:00:00.078: Loaded \"c:\\windows\\system32\\OLE32.DLL\" at address 0x000007FEFD470000 by thread 1.\n00:00:00.093: VerifierLoadCallback - dll load ole32.dll, DllBase = 000007FEFD470000\n00:00:00.093: Loaded \"c:\\windows\\system32\\SFC.DLL\" at address 0x0000000072F00000 by thread 1.\n00:00:00.093: VerifierLoadCallback - dll load sfc.dll, DllBase = 0000000072F00000\n00:00:00.093: Loaded \"c:\\windows\\system32\\SFC_OS.DLL\" at address 0x000007FEF84B0000 by thread 1.\n00:00:00.093: VerifierLoadCallback - dll load sfc_os.DLL, DllBase = 000007FEF84B0000\n00:00:00.093: Loaded \"c:\\windows\\system32\\USERENV.DLL\" at address 0x000007FEFCF60000 by thread 1.\n00:00:00.109: Loaded \"c:\\windows\\system32\\PROFAPI.DLL\" at address 0x000007FEFCD70000 by thread 1.\n00:00:00.109: VerifierLoadCallback - dll load profapi.dll, DllBase = 000007FEFCD70000\n00:00:00.109: VerifierLoadCallback - dll load USERENV.dll, DllBase = 000007FEFCF60000\n00:00:00.109: Loaded \"c:\\windows\\system32\\DWMAPI.DLL\" at address 0x000007FEFB0A0000 by thread 1.\n00:00:00.109: VerifierLoadCallback - dll load dwmapi.dll, DllBase = 000007FEFB0A0000\n00:00:00.109: Loaded \"c:\\windows\\system32\\ADVAPI32.DLL\" at address 0x000007FEFDC30000 by thread 1.\n00:00:00.109: Loaded \"c:\\windows\\system32\\SECHOST.DLL\" at address 0x000007FEFEF50000 by thread 1.\n00:00:00.124: VerifierLoadCallback - dll load sechost.dll, DllBase = 000007FEFEF50000\n00:00:00.124: VerifierLoadCallback - dll load ADVAPI32.dll, DllBase = 000007FEFDC30000\n00:00:00.124: Loaded \"c:\\windows\\system32\\MPR.DLL\" at address 0x000007FEF80F0000 by thread 1.\n00:00:00.124: VerifierLoadCallback - dll load MPR.dll, DllBase = 000007FEF80F0000\n00:00:00.124: VerifierLoadCallback - dll load AcGenral.DLL, DllBase = 000007FEF2BA0000\n00:00:00.124: NtQuerySystemInformation(0) = 0\n00:00:00.124: Loaded \"c:\\windows\\system32\\IMM32.DLL\" at address 0x000007FEFDA90000 by thread 1.\n00:00:00.140: Loaded \"c:\\windows\\system32\\MSCTF.DLL\" at address 0x000007FEFD680000 by thread 1.\n00:00:00.140: VerifierLoadCallback - dll load MSCTF.dll, DllBase = 000007FEFD680000\n00:00:00.140: VerifierLoadCallback - dll load IMM32.DLL, DllBase = 000007FEFDA90000\n00:00:00.140: NtQuerySystemInformation(0) = 0\n00:00:00.140: NtQuerySystemInformation(0) = 0\n00:00:00.140: NtQuerySystemInformation(1) = 0\n00:00:00.140: NtQuerySystemInformation(0) = 0\n00:00:00.140: NtQuerySystemInformation(1) = 0\n00:00:00.156: DLL!DLL_PROCESS_DETACH\n00:00:00.156: Exited \"c:\\verifier_test\\VRTEST.EXE\" (process 0x1580) with code 0 (0x0) by thread 1.\n```\n\n___\n\n## Links\n\n1) MSFT: [Reiley Yang - A Debugging Approach to IFEO](https://blogs.msdn.microsoft.com/reiley/2011/07/29/a-debugging-approach-to-ifeo/)\n\n2) MSFT: [Reiley Yang - A Debugging Approach to Application Verifier](https://blogs.msdn.microsoft.com/reiley/2012/08/17/a-debugging-approach-to-application-verifier/)\n\n3) Unknown source vanished in time (c) 2004.\n\n___\n\nOriginally at [kernelmode.info](https://www.kernelmode.info/forum/viewtopic.php?f=15&t=3418) by EP_X0FF / hfiref0x ([archived kernelmode.info](https://www.kernelmode.info/forum/viewtopicf4c5.html?f=15&t=3418#), [archive](http://archivecaslytosk.onion/8R9ml)). Broken links were updated, has been reworded to make it easier to understand.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.6416015625,
          "content": "cmake_minimum_required(VERSION 3.16)\n\nproject(SecureUxTheme)\n\nset(CI_VERSION \"(unknown)\" CACHE STRING \"Version string\")\nset(CI_VERSION_MAJOR \"0\" CACHE STRING \"Version major number\")\nset(CI_VERSION_MINOR \"0\" CACHE STRING \"Version minor number\")\nset(CI_VERSION_PATCH \"0\" CACHE STRING \"Version patch number\")\n\nset(SIGN_SCRIPT \"\" CACHE STRING \"Signing script, called like <script> <input> <output>\")\n\nadd_compile_options(\n        \"$<$<NOT:$<CONFIG:Debug>>:/Zi>\"\n        /utf-8\n        /d1nodatetime\n        /W4\n        /wd4201 # C4201: nonstandard extension used: nameless struct/union\n        /wd4471 # C4471: a forward declaration of an unscoped enumeration must have an underlying type\n        /wd4324 # C4324: structure was padded due to alignment specifier\n        /WX\n)\n\nadd_link_options(\n        \"$<$<NOT:$<CONFIG:Debug>>:/DEBUG>\"\n        \"$<$<NOT:$<CONFIG:Debug>>:/OPT:REF>\"\n        \"$<$<NOT:$<CONFIG:Debug>>:/OPT:ICF=10>\"\n        /Brepro\n        /PDBALTPATH:%_PDB%\n        /FILEALIGN:0x1000\n        /NOVCFEATURE\n        /NOCOFFGRPINFO\n)\n\nadd_compile_definitions(\n        UNICODE\n        _UNICODE\n        \"CI_VERSION=\\\"${CI_VERSION}\\\"\"\n        \"CI_VERSION_MAJOR=${CI_VERSION_MAJOR}\"\n        \"CI_VERSION_MINOR=${CI_VERSION_MINOR}\"\n        \"CI_VERSION_PATCH=${CI_VERSION_PATCH}\"\n)\n\nset(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n\nset(CMAKE_CXX_STANDARD 20)\n\nadd_subdirectory(phnt)\n\nadd_library(SecureUxTheme SHARED SecureUxTheme/avrf.cpp)\n\ntarget_link_libraries(SecureUxTheme PRIVATE phnt::phnt ntdll.lib ntdllp.lib)\ntarget_compile_options(SecureUxTheme PRIVATE\n        /GS-\n)\ntarget_link_options(SecureUxTheme PRIVATE\n        /NODEFAULTLIB\n        /ENTRY:DllMain\n)\n\nset(SECUREUXTHEME_SIGNED_PATH \"${CMAKE_CURRENT_BINARY_DIR}/SecureUxTheme.signed.dll\")\nset(SECUREUXTHEME_HEADER_DIR \"${CMAKE_CURRENT_BINARY_DIR}/SecureUxTheme_header\")\nset(SECUREUXTHEME_HEADER_PATH \"${SECUREUXTHEME_HEADER_DIR}/SecureUxTheme.dll.h\")\n\nfile(MAKE_DIRECTORY \"${SECUREUXTHEME_HEADER_DIR}\")\n\nadd_library(SecureUxTheme_header INTERFACE)\ntarget_sources(SecureUxTheme_header PUBLIC\n        FILE_SET HEADERS\n        BASE_DIRS \"${CMAKE_CURRENT_BINARY_DIR}/SecureUxTheme_header\"\n        FILES \"${SECUREUXTHEME_HEADER_PATH}\"\n)\ntarget_include_directories(SecureUxTheme_header INTERFACE \"${SECUREUXTHEME_HEADER_DIR}\")\n\nif (\"${SIGN_SCRIPT}\" STREQUAL \"\")\n    configure_file(\"$<TARGET_FILE:SecureUxTheme>\" \"${SECUREUXTHEME_SIGNED_PATH}\" COPYONLY)\nelse ()\n    add_custom_command(\n            OUTPUT \"${SECUREUXTHEME_SIGNED_PATH}\"\n            COMMAND \"${SIGN_SCRIPT}\"\n            \"$<TARGET_FILE:SecureUxTheme>\"\n            \"${SECUREUXTHEME_SIGNED_PATH}\"\n            DEPENDS \"$<TARGET_FILE:SecureUxTheme>\"\n            VERBATIM\n    )\nendif ()\n\nadd_custom_command(\n        OUTPUT \"${SECUREUXTHEME_HEADER_PATH}\"\n        COMMAND powershell -NoProfile -ExecutionPolicy Bypass -File \"${CMAKE_CURRENT_SOURCE_DIR}/bin2h.ps1\"\n        \"${SECUREUXTHEME_SIGNED_PATH}\"\n        \"${SECUREUXTHEME_HEADER_PATH}\"\n        DEPENDS \"${SECUREUXTHEME_SIGNED_PATH}\"\n        VERBATIM\n)\n\nadd_library(ThemeLib STATIC\n        ThemeLib/install.cpp\n        ThemeLib/signature.cpp\n        ThemeLib/theme.cpp\n)\ntarget_link_libraries(ThemeLib PRIVATE SecureUxTheme_header phnt::phnt)\ntarget_include_directories(ThemeLib PUBLIC ThemeLib/public)\n\nadd_library(ThemeDll SHARED\n        ThemeDll/dllmain.cpp\n        ThemeDll/exports.def\n)\n\ntarget_link_libraries(ThemeDll PRIVATE ThemeLib)\n\nadd_executable(ThemeTool WIN32\n        ThemeTool/main.cpp\n        ThemeTool/MainDialog.cpp\n        ThemeTool/utl.cpp\n        ThemeTool/ThemeTool.rc\n)\ntarget_precompile_headers(ThemeTool PRIVATE ThemeTool/pch.h)\n\ntarget_link_libraries(ThemeTool PRIVATE\n        ThemeLib\n        phnt::phnt\n)\n"
        },
        {
          "name": "COPYING.GPL",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "COPYING.LGPL",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.1669921875,
          "content": "Contents of the `ThemeTool/exe` is licensed under GPL 3 (see COPYING.GPL) or later.\n\nThe remaining contents are licensed under under LGPL 2.1 (see COPYING.LGPL) or later.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6591796875,
          "content": "# SecureUxTheme\r\n\r\n![Downloads](https://img.shields.io/github/downloads/namazso/SecureUxTheme/total) ![GitHub Version](https://img.shields.io/github/v/release/namazso/SecureUxTheme) ![Scoop Version](https://img.shields.io/scoop/v/secureuxtheme?bucket=extras)\r\n\r\n## About\r\n\r\nSecureUxTheme is a piece of software that removes signature verification of styles in Windows.\r\n\r\n## Features\r\n\r\n* No system file modifications\r\n* No driver needed\r\n* Secure boot compatible\r\n* Probably quite future-proof\r\n* Fixes LogonUI resetting some colors on locking\r\n\r\n## Limitations\r\n\r\nStyles must still have a format-wise valid signature appended, it is just not verified. For this reason themes need to be applied with the tool, rather than in Personalization / Themes.\r\n\r\n## Operating System Support\\*\r\n\r\n* Windows 8.1\r\n* Windows 10\r\n* Windows 11 (tested: 21H2, 22H2)\r\n* Future versions\\*\\*\r\n\r\n\\* Windows 7 or older will never be supported due to the way themes are implemented.\r\n\r\n\\*\\* The current code doesn't depend on any code, binary or memory layout of uxtheme and related dlls, therefore should work unless major changes are made to how themes in general work.\r\n\r\n## Download\r\n\r\n[Latest release](https://github.com/namazso/SecureUxTheme/releases/latest/)\r\n\r\n[Development builds](https://github.com/namazso/SecureUxTheme/actions)\r\n\r\n[Scoop:](https://scoop.sh/)\r\n```shell\r\nscoop bucket add extras\r\nscoop install secureuxtheme\r\n```\r\n\r\n## LogonUI fix\r\n\r\nLocking Windows makes LogonUI reset certain colors and ignore the currently set style. This tool can fix this problem. A picture comparison showing the Task Manager opened after locking Windows without and with the fix can be seen here:\r\n\r\n![LogonUI problem](https://github.com/user-attachments/assets/dddd3b87-a507-4d8d-bea7-5ac1bb4b8023)\r\n\r\nDo note this feature might mess up some high contrast theme features when locking.\r\n\r\n## Screenshot\r\n\r\nProgram:\r\n\r\n![ThemeTool Screenshot](https://github.com/user-attachments/assets/44d007ad-fe4e-4e34-b4bc-c8726670a15b)\r\n\r\nThis is only a tool for enabling custom themes, no actual visual changes will be made.\r\nRegardless, here's a cool theme for illustration:\r\n\r\n![Screenshot](https://github.com/user-attachments/assets/2c0301f2-8392-426d-9b19-bb29500a0eea)\r\n\r\n[Theme used](https://www.deviantart.com/niivu/art/10-Pro-Edition-802720222)\r\n\r\n## Where to get themes\r\n\r\nI recommend [DeviantArt](https://www.deviantart.com/tag/windows10themes) for finding themes, although it is a bit noisy. Alternatives are [7themes.su](https://7themes.su/) which is much more organized (but be wary of fake adware download buttons! use the one that says Яндекс.Диск). Also, you can just search for themes with your favorite search engine. Make sure that the theme you're about to apply is compatible with your windows version.\r\n\r\n## Donations\r\n\r\nThis software is provided completely free of charge to you, however I spent time and effort developing it. If you like this software, please consider making a donation:\r\n\r\n* Bitcoin: 1N6UzYgzn3sLV33hB2iS3FvYLzD1G4CuS2\r\n* Monero: 83sJ6GoeKf1U47vD9Tk6y2MEKJKxPJkECG3Ms7yzVGeiBYg2uYhBAUAZKNDH8VnAPGhwhZeqBnofDPgw9PiVtTgk95k53Rd\r\n\r\n## Frequently Asked Questions\r\n\r\n### **Q: Help, SecureUxTheme broke my install and it's login looping now**\r\n\r\nA: [Help: Login loop after installing SecureUxTheme](https://github.com/namazso/SecureUxTheme/wiki/Help:-Login-loop-after-installing-SecureUxTheme)\r\n\r\n---\r\n\r\n### **Q: Help, a theme broke my install and it's login looping now**\r\n\r\nA: [Help: Login loop after setting a theme](https://github.com/namazso/SecureUxTheme/wiki/Help:-Login-loop-after-setting-a-theme)\r\n\r\n---\r\n\r\n### **Q: I just want a themed Windows, what do I do with all this?**\r\n\r\nA: [Help: Step by step installing SecureUxTheme and a custom theme](https://github.com/namazso/SecureUxTheme/wiki/Help:-Step-by-step-installing-SecureUxTheme-and-a-custom-theme)\r\n\r\n---\r\n\r\n### **Q: I have 1909 or later, and the Address bar / Search bar is weird when clicked**\r\n\r\nA: Consider using OldNewExplorer which fixes this. Alternatively, see [Issue #6](https://github.com/namazso/SecureUxTheme/issues/6).\r\n\r\n---\r\n\r\n### **Q: Can you make themes per-program?**\r\n\r\nA: Unfortunately, this is [close to impossible](https://github.com/namazso/SecureUxTheme/issues/9#issuecomment-611897882). However for Office programs, there is a [plugin](https://github.com/matafokka/ExcelDarkThemeFix) for fixing this.\r\n\r\n---\r\n\r\n### **Q:** `SelectTheme: pTheme->GetVisualStyle failed with 80070002`\r\n\r\nA: You probably installed a theme by opening / double clicking. Custom themes cannot be installed like that, they must be moved to `%WINDIR%\\Resources\\Themes` with all their accompanying files.\r\n\r\n## Is it SecureUxTheme or ThemeTool? And what does it stand for anyways?\r\n\r\nNaming has been pretty messy in this project, I admit that. Originally this project was for myself, and consisted of only the hooking dll, and required hex-editing the invalid signature to the themes. The project was named SecureUxTheme. In hindsight, this was a pretty bad naming. While it contains \"secure\" in the name, it is rather \"safe\" instead of \"secure\". The UxTheme part comes from the dll name (`uxtheme.dll`) which needed to be patched on XP when visual styles were introduced. This dll is no longer containing the signature verification code since Windows Vista, however the name stuck, and all software similar to this are called uxtheme-patchers. Anyways, after deciding to release, I added a new component named \"ThemeInvalidSigner\" for adding the invalid signature to themes, and also an NSIS installer so that you don't have to run .reg files. This was the initial release. Later I grew tired of various problems and issue reports with the built-in Personalization I was using for letting users set themes, and this is when ThemeTool was born. It originally was a proof-of-concept app for setting themes via the IThemeManager2 COM interface I reverse-engineered, however it soon got the capability of patching themes, and eventually replaced the installer too. This also improved on the virus detections, for unknown reasons.\r\n\r\n**TL;DR**: SecureUxTheme is the project and the hook dll, ThemeTool is the installer / UI component.\r\n\r\n## Building\r\n\r\n### Requirements\r\n\r\n* Visual Studio 2022 (or above) with x86, x64, ARM64 toolchains\r\n\r\n### Compiling\r\n\r\nNote that the order of the builds is important, building ThemeTool will fail if some architecture is missing SecureUxTheme build.\r\n\r\n1. Open SecureUxTheme.sln\r\n2. Build SecureUxTheme as Release/Win32\r\n3. Build SecureUxTheme as Release/ARM64\r\n4. Build SecureUxTheme as Release/x64\r\n5. Build ThemeTool as Release/Win32\r\n\r\n### Debugging\r\n\r\n[not fun](https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/debugging-winlogon)\r\n\r\n## License\r\n\r\nSee the [LICENSE](LICENSE) file.\r\n"
        },
        {
          "name": "SecureUxTheme",
          "type": "tree",
          "content": null
        },
        {
          "name": "ThemeDll",
          "type": "tree",
          "content": null
        },
        {
          "name": "ThemeLib",
          "type": "tree",
          "content": null
        },
        {
          "name": "ThemeTool",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin2h.ps1",
          "type": "blob",
          "size": 0.2177734375,
          "content": "param(\n    [Parameter(Mandatory, Position = 0)]\n    [string]$InputFile,\n    [Parameter(Mandatory, Position = 1)]\n    [string]$OutputFile\n)\n\n((Get-Content -Encoding byte $InputFile | % { [int32]$_ }) -join \",\") >$OutputFile\n"
        },
        {
          "name": "phnt",
          "type": "commit",
          "content": null
        },
        {
          "name": "re",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.h",
          "type": "blob",
          "size": 0,
          "content": ""
        }
      ]
    }
  ]
}