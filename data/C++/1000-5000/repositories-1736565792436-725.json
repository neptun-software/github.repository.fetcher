{
  "metadata": {
    "timestamp": 1736565792436,
    "page": 725,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oreillymedia/Learning-OpenCV-3_examples",
      "stars": 2267,
      "defaultBranch": "master",
      "files": [
        {
          "name": "BlueCup.jpg",
          "type": "blob",
          "size": 5.1142578125,
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.927734375,
          "content": "cmake_minimum_required(VERSION 2.8)\n\nproject( examples )\n\nfind_package( OpenCV REQUIRED )\nfind_package( OpenGL )\n\nif(OPENGL_FOUND)\n  include_directories( ${OpenCV_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIRS} )\nelse()\n  include_directories( ${OpenCV_INCLUDE_DIRS} )\nendif()\n\n#########################\n# FOR LEARNING OPENCV 3 #\n#########################\n\n###############\n### COMPILE ###\n###############\n\n# COMPILE EXAMPLES\nadd_executable( example_02-01 example_02-01.cpp )\nadd_executable( example_02-02 example_02-02.cpp )\nadd_executable( example_02-03 example_02-03.cpp )\nadd_executable( example_02-04 example_02-04.cpp )\nadd_executable( example_02-05 example_02-05.cpp )\nadd_executable( example_02-06 example_02-06.cpp )\nadd_executable( example_02-07 example_02-07.cpp )\nadd_executable( example_02-08 example_02-08.cpp )\nadd_executable( example_02-09 example_02-09.cpp )\nadd_executable( example_02-10 example_02-10.cpp )\nadd_executable( example_02-11 example_02-11.cpp )\nadd_executable( example_04-01 example_04-01.cpp )\nadd_executable( example_04-02 example_04-02.cpp )\nadd_executable( example_04-03 example_04-03.cpp )\nadd_executable( example_04-04 example_04-04.cpp )\nadd_executable( example_05-01 example_05-01.cpp )\nadd_executable( example_07-01 example_07-01.cpp )\nadd_executable( example_08-01 example_08-01.cpp )\nadd_executable( example_08-02 example_08-02.cpp )\nadd_executable( example_08-03 example_08-03.cpp )\nadd_executable( example_09-01 example_09-01.cpp )\nadd_executable( example_09-02 example_09-02.cpp )\nadd_executable( example_09-03 example_09-03.cpp )\nif(OPENGL_FOUND)\n  add_executable( example_09-04 example_09-04.cpp )\nendif()\n# Can only build if you have Qt installed add_executable( example_09-05 example_09-05.cpp )\nadd_executable( example_10-01 example_10-01.cpp )\nadd_executable( example_10-02 example_10-02.cpp )\nadd_executable( example_10-03 example_10-03.cpp )\nadd_executable( example_11-01 example_11-01.cpp )\nadd_executable( example_11-02 example_11-02.cpp )\nadd_executable( example_11-03 example_11-03.cpp )\nadd_executable( example_12-01 example_12-01.cpp )\nadd_executable( example_12-02 example_12-02.cpp )\nadd_executable( example_12-03 example_12-03.cpp )\nadd_executable( example_12-04 example_12-04.cpp )\nadd_executable( example_13-01 example_13-01.cpp )\nadd_executable( example_13-02 example_13-02.cpp )\nadd_executable( example_13-03 example_13-03.cpp )\nadd_executable( example_14-01 example_14-01.cpp )\nadd_executable( example_14-02 example_14-02.cpp )\nadd_executable( example_14-03 example_14-03.cpp )\nadd_executable( example_14-04 example_14-04.cpp )\nadd_executable( example_15-01 example_15-01.cpp )\nadd_executable( example_15-02 example_15-02.cpp )\nadd_executable( example_15-03 example_15-03.cpp )\nadd_executable( example_15-04 example_15-04.cpp )\nadd_executable( example_15-05 example_15-05.cpp )\nadd_executable( example_15-BackgroundSubtractor example_15-BackgroundSubtractor.cpp )\nadd_executable( example_16-01 example_16-01.cpp )\nadd_executable( example_16-02 example_16-02.cpp )\nadd_executable( example_17-01 example_17-01.cpp )\nadd_executable( example_17-02 example_17-02.cpp )\nadd_executable( example_18-01 example_18-01.cpp )\nadd_executable( example_18-01_from_disk example_18-01_from_disk.cpp )\nadd_executable( example_19-01 example_19-01.cpp )\nadd_executable( example_19-02 example_19-02.cpp )\nadd_executable( example_19-03 example_19-03.cpp )\nadd_executable( example_19-04 example_19-04.cpp )\nadd_executable( example_20-01 example_20-01.cpp )\nadd_executable( example_20-02 example_20-02.cpp )\nadd_executable( example_21-01 example_21-01.cpp )\nadd_executable( example_22-01 example_22-01.cpp )\n\n# NOW COMPILE SOME ANSWERS TO EXERCISES:\nadd_executable( Exercises_5   Exercises_5.cpp   )\nadd_executable( Exercises_7 Exercises_7.cpp )\nadd_executable( Exercises_8_1 Exercises_8_1.cpp )\nadd_executable( Exercises_9_1-2-10-11-12-15-16 Exercises_9_1-2-10-11-12-15-16.cpp )\nadd_executable( Exercises_9_4 Exercises_9_4.cpp ) \nadd_executable( Exercises_9_5 Exercises_9_5.cpp )\nadd_executable( Exercises_11-1-2-5-6-7 Exercises_11-1-2-5-6-7.cpp )\n\n################\n###   LINK   ###\n################\n# FIRST LINK EXAMPLES:\ntarget_link_libraries( example_02-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-04 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-05 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-06 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-07 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-08 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-09 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-10 ${OpenCV_LIBS} )\ntarget_link_libraries( example_02-11 ${OpenCV_LIBS} )\ntarget_link_libraries( example_04-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_04-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_04-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_04-04 ${OpenCV_LIBS} )\ntarget_link_libraries( example_05-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_07-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_08-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_08-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_08-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_09-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_09-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_09-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_09-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_09-03 ${OpenCV_LIBS} )\nif(OPENGL_FOUND)\n  target_link_libraries( example_09-04 ${OpenCV_LIBS} ${OPENGL_LIBRARIES} )\nendif()\n# Need Qt target_link_libraries( example_09-05 ${OpenCV_LIBS} )\ntarget_link_libraries( example_10-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_10-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_10-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_11-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_11-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_11-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_12-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_12-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_12-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_12-04 ${OpenCV_LIBS} )\ntarget_link_libraries( example_13-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_13-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_13-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_14-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_14-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_14-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_14-04 ${OpenCV_LIBS} )\ntarget_link_libraries( example_15-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_15-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_15-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_15-04 ${OpenCV_LIBS} )\ntarget_link_libraries( example_15-05 ${OpenCV_LIBS} )\ntarget_link_libraries( example_15-BackgroundSubtractor ${OpenCV_LIBS} )\ntarget_link_libraries( example_16-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_16-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_17-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_17-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_18-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_18-01_from_disk ${OpenCV_LIBS} )\ntarget_link_libraries( example_19-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_19-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_19-03 ${OpenCV_LIBS} )\ntarget_link_libraries( example_19-04 ${OpenCV_LIBS} )\ntarget_link_libraries( example_20-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_20-02 ${OpenCV_LIBS} )\ntarget_link_libraries( example_21-01 ${OpenCV_LIBS} )\ntarget_link_libraries( example_22-01 ${OpenCV_LIBS} )\n\n# NOW LINK EXERCISES \ntarget_link_libraries( Exercises_5 ${OpenCV_LIBS} )\ntarget_link_libraries( Exercises_7 ${OpenCV_LIBS} )\ntarget_link_libraries( Exercises_8_1 ${OpenCV_LIBS} )\ntarget_link_libraries( Exercises_9_1-2-10-11-12-15-16 ${OpenCV_LIBS} )\ntarget_link_libraries( Exercises_9_4 ${OpenCV_LIBS} )\ntarget_link_libraries( Exercises_9_5 ${OpenCV_LIBS} )\ntarget_link_libraries( Exercises_11-1-2-5-6-7 ${OpenCV_LIBS} )\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 4.0224609375,
          "content": "\nFROM ubuntu:16.04\n\n#MAINTAINER Gary Bradski\n\n########################################################################\n# Running this docker to set up a shared directory and display with the host:\n#\n# To newly create and build this docker image:\n# ============================================\n#\n# Create a directory <container_name>: \n#    $ mkdir <container_name>\n# Copy this Dockerfile into that directory:\n#    cp Dockerfile <container_name>/.\n# Move to that directory:\n#    $ cd <container_name>\n# To build the docker file (might have to run with sudo \n#    $ sudo docker build -t <container_name> .\n#\n# To run the image, or run it again retaining its state \n# =====================================================\n#    but also exporting display from the container and\n#    sharing a directory between host and container:\n#\n# Allow other processes to share the display:\n#    $ xhost +    #Allows or other processes to capture (show) the display\n# Now run the docker (Usually $DISPLAY is :0) and allow use of the camera -- you may need sudo privalage\n#    $ sudo docker run  -it  -e DISPLAY=$DISPLAY  -v /tmp/.X11-unix:/tmp/.X11-unix \\\n#                       --device /dev/video0 \\\n#                       -v /<path_to_a host_directory>/<directory_on_host>/:/<directory_path/name>/  <container_name>\n#\n# =======================================================\n# Handy docker commands:\n# List all the docker images\n#    $ sudo docker ps -a  \n# If the docker image is stopped (otherwise can skip the first command below if not stopped)\n#    $ sudo docker start <container ID from ps -a above>\n#    $ sudo docker attach <container ID from ps -a above>\n########################################################################\n# This is a docker file which will, from scratch:\n#\n#   * pull in all the dependencies needed for OpenCV 3.2 including python 2 dependencies\n#   * pull in OpenCV 3.2 and opencv_contrib and build them\n#       + executable files end up in opencv-3.2.0/build/bin\n#   * pull in the Learning OpenCV 3 example code and build it\n#       + executable files end up in Learning_OpenCV-3_examples/build\n#   * To get to the top level directory, just type: cd\n#\n# If you just want to do this \"by hand\" in your home, replace the \"RUN\"s below with \"sudo\"\n#\n# This Docker uses the ubuntu 16.04 version of ffmpeg, which is older than the ones in my other dockerfiles.\n# this shouldn't cause you any problems but definitely *DO NOT* use this for generating audiofiles / movies for redistribution.\n#\n# But it is somewhat less capable than the ones in the ffmpeg containers.\n########################################################################\n\n\n# First: get all the dependencies:\n#\nRUN apt-get update\nRUN apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev \\\nlibavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev \\\nlibjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev unzip\n\nRUN apt-get install -y wget\n\n# Just get a simple editor for convienience (you could just cancel this line)\nRUN apt-get install -y vim\n\n\n# Second: get and build OpenCV 3.2\n#\nRUN cd \\\n    && wget https://github.com/opencv/opencv/archive/3.2.0.zip \\\n    && unzip 3.2.0.zip \\\n    && cd opencv-3.2.0 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j8 \\\n    && make install \\\n    && cd \\\n    && rm 3.2.0.zip\n\n\n# Third: install and build opencv_contrib\n#\nRUN cd \\\n    && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \\\n    && unzip 3.2.0.zip \\\n    && cd opencv-3.2.0/build \\\n    && cmake -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.2.0/modules/ .. \\\n    && make -j8 \\\n    && make install \\\n    && cd ../.. \\\n    && rm 3.2.0.zip\n\n\n# Forth: get and build the Learning OpenCV 3 examples:\n#    I copy the needed data to where the executables will be: opencv-3.2.0/build/bin\n#\nRUN cd \\\n    && git clone https://github.com/oreillymedia/Learning-OpenCV-3_examples.git \\\n    && cd Learning-OpenCV-3_examples \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j8\n\n#You could then run python and do your stuff...\n#CMD [\"python\"]\n"
        },
        {
          "name": "Exercises_11-1-2-5-6-7.cpp",
          "type": "blob",
          "size": 6.1630859375,
          "content": "//Exercises at end of Chapter 11\n// 1、2、5、6 and 7\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercises at the end of Chapter 11(without 3、4 and 8)\\n\"\n\t\t<< \"Call:\\n\"\n\t\t<< argv[0] << \" <path/image_name>\\n\\n\"\n\t\t<< \"For example: \" << argv[0] << \" /AverageMaleFace.jpg\\n\"\n\t\t<< endl;\n}\n\n// Get the coordinates of the points after the rotation\nPoint2f getPointAffinedPos(const Point2f src, const Point2f center, double angle)  \n{  \n\tPoint dst;  \n\tint x = src.x - center.x;  \n\tint y = src.y - center.y;  \n\n\tdst.x = x * cos(angle) + y * sin(angle) + center.x;  \n\tdst.y = -x * sin(angle) + y * cos(angle) + center.y;  \n\treturn dst;  \n}  \n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc < 2) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\t/************************************************************************/\n\t/* 1.  Find  and  load  a  picture  of  a  face  where  the  face  is  frontal,  has  eyes  open,  and\n\ttakes up most or all of the image area. Write code to find the pupils of the eyes.                                                                     */\n\t/************************************************************************/\n\tMat matFrontFace = imread(argv[1]);\n\tMat gray;Mat temp;\n\tdouble minPixelValue, maxPixelValue;\n\tPoint minPixelPoint,maxPixelPoint;\n\tcvtColor(matFrontFace,gray,COLOR_BGR2GRAY);\n\t// Laplacian pyramid\n\tpyrDown(gray,temp);\n\tpyrUp(temp,temp);\n\ttemp = gray - temp;\n\t// find and circle the result\n\tminMaxLoc(temp,&minPixelValue,&maxPixelValue,&minPixelPoint,&maxPixelPoint);\n\tcircle(matFrontFace,maxPixelPoint,10,Scalar(255,255,255),2);\n\t/************************************************************************/\n\t/* 2.  Look  at  the  diagrams  of  how  the  log-polar  function  transforms  a  square  into  a\n\twavy line.\n\ta.  Draw the log-polar results if the log-polar center point were sitting on one of\n\tthe corners of the square.\n\tb.  What would a circle look like in a log-polar transform if the center point were\n\tinside the circle and close to the edge?\n\tc.  Draw what the transform would look like if the center point were sitting just\n\toutside of the circle.                                                                     */\n\t/************************************************************************/\n\t// draw a circle,white on black.\n\tMat matLogPolar = Mat(512,512,CV_8U,Scalar(0));\n\tcircle(matLogPolar,Point(256,256),100,Scalar(255),3);\n\t//a\n\tlogPolar(matLogPolar,temp,Point(0,0),40,INTER_CUBIC);\n\t//b\n\tlogPolar(matLogPolar,temp,Point(256-101,256),40,INTER_CUBIC);\n\t//c the result like two rings\n\tlogPolar(matLogPolar,temp,Point(256-101-3,256),40,INTER_CUBIC);\n\t/************************************************************************/\n\t/* 5.  Load an image, take a perspective transform, and then rotate it. Can this trans‐\n\tform be done in one step?                                            */\n\t/************************************************************************/\n\tMat matE5_1 = imread(argv[1]);\n\tMat matE5_2 = imread(argv[1]);\n\tdouble angle = 45;\n\t//perspective matrix\n\tPoint2f src_vertices[4];\n\tsrc_vertices[0] = Point(0, 0);\n\tsrc_vertices[1] = Point(matE5_1.cols, 0);\n\tsrc_vertices[2] = Point(matE5_1.cols, matE5_1.rows);\n\tsrc_vertices[3] = Point(0, matE5_1.rows);\n\tPoint2f dst_vertices[4];\n\tdst_vertices[0] = Point(100, 0);\n\tdst_vertices[1] = Point(matE5_1.cols - 100, 0);\n\tdst_vertices[2] = Point(matE5_1.cols, matE5_1.rows);\n\tdst_vertices[3] = Point(0, matE5_1.rows);\n\tMat perspectiveMatrix = getPerspectiveTransform(src_vertices, dst_vertices);\n\t//roate matrix\n\tMat affineMatrix = getRotationMatrix2D(Point(matE5_1.cols/2,matE5_1.rows/2), angle, 1.0 );\n\t// perspective -> rotate\n\twarpPerspective(\n\t\tmatE5_1, \n\t\tmatE5_1, \n\t\tperspectiveMatrix,\n\t\tmatE5_1.size(), \n\t\tINTER_LINEAR, \n\t\tBORDER_CONSTANT,\n\t\tScalar());\n\twarpAffine(\n\t\tmatE5_1,\n\t\tmatE5_1,\n\t\taffineMatrix,\n\t\tmatE5_1.size(),\n\t\tINTER_LINEAR,\n\t\tBORDER_CONSTANT,\n\t\tScalar()\n\t\t);\n\t// do it in one step\n\tPoint center = Point(matE5_2.cols/2,matE5_2.rows/2);\n\tdst_vertices[0] = getPointAffinedPos(dst_vertices[0],center,angle);\n\tdst_vertices[1] = getPointAffinedPos(dst_vertices[1],center,angle);\n\tdst_vertices[2] = getPointAffinedPos(dst_vertices[2],center,angle);\n\tdst_vertices[3] = getPointAffinedPos(dst_vertices[3],center,angle);\n\tperspectiveMatrix = getPerspectiveTransform(src_vertices, dst_vertices);\n\twarpPerspective(\n\t\tmatE5_2, \n\t\tmatE5_2, \n\t\tperspectiveMatrix,\n\t\tmatE5_2.size(), \n\t\tINTER_LINEAR, \n\t\tBORDER_CONSTANT,\n\t\tScalar());\n\t// the result is almost the same\n\t/************************************************************************/\n\t/* 6.  Inpainting works pretty well for the repair of writing over textured regions. What\n\twould happen if the writing obscured a real object edge in a picture? Try it.                                                                     */\n\t/************************************************************************/\n\tMat matInpaint = imread(argv[1]);\n\tMat matInpaintMask = Mat(matInpaint.size(),CV_8UC1,Scalar(0));//the same size,all in black(oh yeah!)\n\t//draw the same circle on the matInpaint and matInpaintMask\n\tcircle(matInpaint,Point(255,255),100,Scalar(255),10);\n\tcircle(matInpaintMask,Point(255,255),100,Scalar(255),10);\n\timshow(\"befor inpaint\",matInpaint);\n\tinpaint(matInpaint,matInpaintMask,matInpaint,10,CV_INPAINT_TELEA);\n\timshow(\"after inpaint\",matInpaint);\n\t//the result is :if \"the writing obscured a real object edge in a picture\",the result is bad\n\t/************************************************************************/\n\t/* 7.  Practice  histogram  equalization  on  images  that  you  load  in,  and  report  the\n\tresults.                                                                     */\n\t/************************************************************************/\n\tMat matSrc = imread(argv[1]);\n\tvector<Mat> planes;\n\tsplit(matSrc,planes);\n\timshow(\"b\",planes[0]);\n\timshow(\"g\",planes[1]);\n\timshow(\"r\",planes[2]);\n\tcv::equalizeHist(planes[0],planes[0]);\n\tcv::equalizeHist(planes[1],planes[1]);\n\tcv::equalizeHist(planes[2],planes[2]);\n\timshow(\"bh\",planes[0]);\n\timshow(\"gh\",planes[1]);\n\timshow(\"rh\",planes[2]);\n\twaitKey();\n\treturn 0;\n\n}\n"
        },
        {
          "name": "Exercises_13_1-2-11.cpp",
          "type": "blob",
          "size": 5.9306640625,
          "content": "//Exercises_9_4.cpp Exercises at end of Chapter 9\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercise 4、5 at the end of Chapter 9 \\n\"\n\t\t<< \"Call:\\n\"\n\t\t<< argv[0] << \" <path/image_name1>\" << \" <path/image_name2>\\n\\n\"\n\t\t<< \"For example: ./\" << argv[0] << \" ../left.jpg \"<< \" ../left.jpg\\n\"\n\t\t<< endl;\n}\n\nint main( int argc, const char** argv )\n{\n  help(argv);\n\tif(argc < 3) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\n\t/************************************************************************/\n\t/* 1.In  this  exercise,  we  learn  to  experiment  with  parameters  by  setting  good  low\n\tThresh  and  highThresh  values  in  cv::Canny().  Load  an  image  with  suitably\n\tinteresting line structures. We’ll use three different high:low threshold settings of\n\t1.5:1, 2.75:1, and 4:1.\n\ta.  Report what you see with a high setting of less than 50.\n\tb.  Report what you see with high settings between 50 and 100.\n\tc.  Report what you see with high settings between 100 and 150.\n\td.  Report what you see with high settings between 150 and 200.\n\te.  Report what you see with high settings between 200 and 250.\n\tf.  Summarize your results and explain what happens as best you can.                                                                     */\n\t/************************************************************************/\n  Mat src = imread(argv[1],IMREAD_GRAYSCALE);\n\tMat dst;\n\t\n\tint iHighThresh = 50;\n\tCanny(src,dst,static_cast<int>(iHighThresh/1.5),iHighThresh);\n\timshow(\"iHighThresh is 50 and  high:low is 1.5:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/2.75),iHighThresh);\n\timshow(\"iHighThresh is 50 and  high:low is 2.75:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/4),iHighThresh);\n\timshow(\"iHighThresh is 50 and  high:low is 4:1\",dst);\n\n\tiHighThresh = (50+100)/2;\n\tCanny(src,dst,static_cast<int>(iHighThresh/1.5),iHighThresh);\n\timshow(\"iHighThresh is (50+100)/2 and  high:low is 1.5:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/2.75),iHighThresh);\n\timshow(\"iHighThresh is (50+100)/2 and  high:low is 2.75:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/4),iHighThresh);\n\timshow(\"iHighThresh is (50+100)/2 and  high:low is 4:1\",dst);\n\n\tiHighThresh = (100+150)/2;\n\tCanny(src,dst,static_cast<int>(iHighThresh/1.5),iHighThresh);\n\timshow(\"iHighThresh is (100+150)/2 and  high:low is 1.5:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/2.75),iHighThresh);\n\timshow(\"iHighThresh is (100+150)/2 and  high:low is 2.75:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/4),iHighThresh);\n\timshow(\"iHighThresh is (100+150)/2 and  high:low is 4:1\",dst);\n\n\tiHighThresh = (150+200)/2;\n\tCanny(src,dst,static_cast<int>(iHighThresh/1.5),iHighThresh);\n\timshow(\"iHighThresh is (150+200)/2 and  high:low is 1.5:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/2.75),iHighThresh);\n\timshow(\"iHighThresh is (150+200)/2 and  high:low is 2.75:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/4),iHighThresh);\n\timshow(\"iHighThresh is (150+200)/2 and  high:low is 4:1\",dst);\n\n\tiHighThresh = (200+250)/2;\n\tCanny(src,dst,static_cast<int>(iHighThresh/1.5),iHighThresh);\n\timshow(\"iHighThresh is (200+250)/2 and  high:low is 1.5:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/2.75),iHighThresh);\n\timshow(\"iHighThresh is (200+250)/2 and  high:low is 2.75:1\",dst);\n\tCanny(src,dst,static_cast<int>(iHighThresh/4),iHighThresh);\n\timshow(\"iHighThresh is (200+250)/2 and  high:low is 4:1\",dst);\n\n\t/************************************************************************/\n\t/* 2.  Load an image containing clear lines and circles such as a side view of a bicycle.\n\tUse  the  Hough  line  and  Hough  circle  calls  and  see  how  they  respond  to  your\n\timage.                                                                     */\n\t/************************************************************************/\n\tMat src = imread(argv[1],IMREAD_GRAYSCALE);//a bike in gray\n\tGaussianBlur( src, src, Size(9, 9), 2, 2 );\n\tMat temp;\n\tvector<Vec4i> linesP;\n\tvector<Vec3f> circles;\n\t//first find the canny edge\n\tCanny(src,temp,50,200);\n\t//find lines\n\tHoughLinesP(temp,linesP,1,CV_PI/180,80,50,10);\n\t//find circles\n\tHoughCircles( src, circles, CV_HOUGH_GRADIENT, 1, src.rows/8, 200, 100, 0, 0 );\n\t//draw lines and circles in the source image\n\tfor (int i = 0;i<linesP.size();i++)\n\t{\n\t\tVec4i l = linesP[i];\n\t\tline(src,Point(l[0],l[1]),Point(l[2],l[3]),Scalar(255));\n\t}\n\n\tfor( size_t i = 0; i < circles.size(); i++ )\n\t{\n\t\tPoint center(cvRound(circles[i][0]), cvRound(circles[i][1]));\n\t\tint radius = cvRound(circles[i][2]);\n\t\t// circle center\n\t\tcircle( src, center, 3, Scalar(255,255,255), -1, 8, 0 );\n\t\t// circle outline\n\t\tcircle( src, center, radius, Scalar(255,255,255), 1, 8, 0 );\n\t}\n\t\n\t/*11.  Create an image with a 20 × 20 square in it. Rotate it to an arbitrary angle. Take a\n\tdistance transform of this image. Create a 20 × 20 square shape. Use the distance\n\ttransform image to algorithmically overlay the shape onto the rotated square in\n\tthe image you made.*/\n\t// create a 20 × 20 square\n\tMat matBoard = Mat(500,500,CV_8UC3,Scalar(0));\n\trectangle(matBoard,Rect(250,250,20,20),Scalar(255,255,255),-1);\n\t// create an arbitary angle\n\tcv::RNG rng = cv::theRNG();\n\tfloat fDegree = rng.uniform(0,360);\n\tMat rotMatS = getRotationMatrix2D(Point(250,250), fDegree, 1.0);\n\twarpAffine(matBoard, matBoard, rotMatS, matBoard.size(), 1, 0, Scalar(0,0,0));\n\t//solove the problem\n\tMat matDistance;\n\tcvtColor(matBoard,gray,COLOR_BGR2GRAY);\n\tthreshold(gray,gray,100,255,CV_THRESH_BINARY); \n\tdistanceTransform(gray,matDistance,CV_DIST_L2,3);  \n       //find the center corners\n\tdouble minVal; \n\tdouble maxVal2; \n\tPoint minLoc,maxLoc;\n\tminMaxLoc( matDistance, &minVal, &maxVal2, &minLoc, &maxLoc, matDistance>0); \n\t//draw the result\n\tcircle(matBoard,maxLoc,1,Scalar(0),1);\n\tcircle(matBoard,minLoc,2,Scalar(255),2);\n\trectangle(matBoard,Rect(maxLoc.x - 10,maxLoc.y - 10,20,20),Scalar(0,0,255),-1);\n\treturn 0;\n}\n \n"
        },
        {
          "name": "Exercises_13_9.cpp",
          "type": "blob",
          "size": 8.517578125,
          "content": "\n//Exercises_13_9.cpp Exercise 9 at end of Chapter 13\n/************************************************************************/\n\t/* 9. Write  an  image-processing  function  to  interactively  remove  people  from  an\n\timage. Use cv::grabCut() to segment the person, and then use cv::inpaint()\n\tto  fill  in  the  resulting  hole  (recall  that  we  learned  about  cv::inpaint()  in  the\n\tprevious chapter).                                                                     */\n/************************************************************************/\n\n\n#include \"opencv2/imgcodecs.hpp\"\n#include \"opencv2/highgui.hpp\"\n#include \"opencv2/imgproc.hpp\"\n#include \"opencv2/photo.hpp\"\n\n#include <iostream>\n\nusing namespace std;\nusing namespace cv;\n\nstatic void help()\n{\n\tcout << \"\\nThis program demonstrates GrabCut segmentation -- select an object in a region\\n\"\n\t\t\"and then grabcut will attempt to segment it out.\\n\"\n\t\t\"Call:\\n\"\n\t\t\"./grabcut <image_name>\\n\"\n\t\t\"\\nSelect a rectangular area around the object you want to segment\\n\" <<\n\t\t\"\\nHot keys: \\n\"\n\t\t\"\\tESC - quit the program\\n\"\n\t\t\"\\tr - restore the original image\\n\"\n\t\t\"\\tn - next iteration\\n\"\n\t\t\"\\n\"\n\t\t\"\\tleft mouse button - set rectangle\\n\"\n\t\t\"\\n\"\n\t\t\"\\tCTRL+left mouse button - set GC_BGD pixels\\n\"\n\t\t\"\\tSHIFT+left mouse button - set GC_FGD pixels\\n\"\n\t\t\"\\n\"\n\t\t\"\\tCTRL+right mouse button - set GC_PR_BGD pixels\\n\"\n\t\t\"\\tSHIFT+right mouse button - set GC_PR_FGD pixels\\n\" << endl;\n}\n\nconst Scalar RED = Scalar(0,0,255);\nconst Scalar PINK = Scalar(230,130,255);\nconst Scalar BLUE = Scalar(255,0,0);\nconst Scalar LIGHTBLUE = Scalar(255,255,160);\nconst Scalar GREEN = Scalar(0,255,0);\n\nconst int BGD_KEY = EVENT_FLAG_CTRLKEY;\nconst int FGD_KEY = EVENT_FLAG_SHIFTKEY;\n\nstatic void getBinMask( const Mat& comMask, Mat& binMask )\n{\n\tif( comMask.empty() || comMask.type()!=CV_8UC1 )\n\t\tCV_Error( Error::StsBadArg, \"comMask is empty or has incorrect type (not CV_8UC1)\" );\n\tif( binMask.empty() || binMask.rows!=comMask.rows || binMask.cols!=comMask.cols )\n\t\tbinMask.create( comMask.size(), CV_8UC1 );\n\tbinMask = comMask & 1;\n}\n\nclass GCApplication\n{\npublic:\n\tenum{ NOT_SET = 0, IN_PROCESS = 1, SET = 2 };\n\tstatic const int radius = 2;\n\tstatic const int thickness = -1;\n\n\tvoid reset();\n\tvoid setImageAndWinName( const Mat& _image, const string& _winName );\n\tvoid showImage() const;\n\tvoid mouseClick( int event, int x, int y, int flags, void* param );\n\tint nextIter();\n\tint getIterCount() const { return iterCount; }\nprivate:\n\tvoid setRectInMask();\n\tvoid setLblsInMask( int flags, Point p, bool isPr );\n\n\tconst string* winName;\n\tconst Mat* image;\n\tMat mask;\n\tMat bgdModel, fgdModel;\n\n\tuchar rectState, lblsState, prLblsState;\n\tbool isInitialized;\n\n\tRect rect;\n\tvector<Point> fgdPxls, bgdPxls, prFgdPxls, prBgdPxls;\n\tint iterCount;\n};\n\nvoid GCApplication::reset()\n{\n\tif( !mask.empty() )\n\t\tmask.setTo(Scalar::all(GC_BGD));\n\tbgdPxls.clear(); fgdPxls.clear();\n\tprBgdPxls.clear();  prFgdPxls.clear();\n\n\tisInitialized = false;\n\trectState = NOT_SET;\n\tlblsState = NOT_SET;\n\tprLblsState = NOT_SET;\n\titerCount = 0;\n}\n\nvoid GCApplication::setImageAndWinName( const Mat& _image, const string& _winName  )\n{\n\tif( _image.empty() || _winName.empty() )\n\t\treturn;\n\timage = &_image;\n\twinName = &_winName;\n\tmask.create( image->size(), CV_8UC1);\n\treset();\n}\n\nvoid GCApplication::showImage() const\n{\n\tif( image->empty() || winName->empty() )\n\t\treturn;\n\n\tMat res;\n\tMat binMask;\n\tif( !isInitialized )\n\t\timage->copyTo( res );\n\telse\n\t{\n\t\tgetBinMask( mask, binMask );\n\t\timage->copyTo( res, binMask );\n\t\t// mask and source code\n\t\tMat src = *image;\n\t\tMat mask = binMask;\n\t\t//inpaint\n\t\tMat inpainted;\n\t\tinpaint(src, mask, inpainted, 3, CV_INPAINT_TELEA);\n\t    imshow(\"inpainted result\",inpainted);\n\t}\n\n\tvector<Point>::const_iterator it;\n\tfor( it = bgdPxls.begin(); it != bgdPxls.end(); ++it )\n\t\tcircle( res, *it, radius, BLUE, thickness );\n\tfor( it = fgdPxls.begin(); it != fgdPxls.end(); ++it )\n\t\tcircle( res, *it, radius, RED, thickness );\n\tfor( it = prBgdPxls.begin(); it != prBgdPxls.end(); ++it )\n\t\tcircle( res, *it, radius, LIGHTBLUE, thickness );\n\tfor( it = prFgdPxls.begin(); it != prFgdPxls.end(); ++it )\n\t\tcircle( res, *it, radius, PINK, thickness );\n\n\tif( rectState == IN_PROCESS || rectState == SET )\n\t\trectangle( res, Point( rect.x, rect.y ), Point(rect.x + rect.width, rect.y + rect.height ), GREEN, 2);\n\n\timshow( *winName, res );\n}\n\nvoid GCApplication::setRectInMask()\n{\n\tCV_Assert( !mask.empty() );\n\tmask.setTo( GC_BGD );\n\trect.x = max(0, rect.x);\n\trect.y = max(0, rect.y);\n\trect.width = min(rect.width, image->cols-rect.x);\n\trect.height = min(rect.height, image->rows-rect.y);\n\t(mask(rect)).setTo( Scalar(GC_PR_FGD) );\n}\n\nvoid GCApplication::setLblsInMask( int flags, Point p, bool isPr )\n{\n\tvector<Point> *bpxls, *fpxls;\n\tuchar bvalue, fvalue;\n\tif( !isPr )\n\t{\n\t\tbpxls = &bgdPxls;\n\t\tfpxls = &fgdPxls;\n\t\tbvalue = GC_BGD;\n\t\tfvalue = GC_FGD;\n\t}\n\telse\n\t{\n\t\tbpxls = &prBgdPxls;\n\t\tfpxls = &prFgdPxls;\n\t\tbvalue = GC_PR_BGD;\n\t\tfvalue = GC_PR_FGD;\n\t}\n\tif( flags & BGD_KEY )\n\t{\n\t\tbpxls->push_back(p);\n\t\tcircle( mask, p, radius, bvalue, thickness );\n\t}\n\tif( flags & FGD_KEY )\n\t{\n\t\tfpxls->push_back(p);\n\t\tcircle( mask, p, radius, fvalue, thickness );\n\t}\n}\n\nvoid GCApplication::mouseClick( int event, int x, int y, int flags, void* )\n{\n\t// TODO add bad args check\n\tswitch( event )\n\t{\n\tcase EVENT_LBUTTONDOWN: // set rect or GC_BGD(GC_FGD) labels\n\t\t{\n\t\t\tbool isb = (flags & BGD_KEY) != 0,\n\t\t\t\tisf = (flags & FGD_KEY) != 0;\n\t\t\tif( rectState == NOT_SET && !isb && !isf )\n\t\t\t{\n\t\t\t\trectState = IN_PROCESS;\n\t\t\t\trect = Rect( x, y, 1, 1 );\n\t\t\t}\n\t\t\tif ( (isb || isf) && rectState == SET )\n\t\t\t\tlblsState = IN_PROCESS;\n\t\t}\n\t\tbreak;\n\tcase EVENT_RBUTTONDOWN: // set GC_PR_BGD(GC_PR_FGD) labels\n\t\t{\n\t\t\tbool isb = (flags & BGD_KEY) != 0,\n\t\t\t\tisf = (flags & FGD_KEY) != 0;\n\t\t\tif ( (isb || isf) && rectState == SET )\n\t\t\t\tprLblsState = IN_PROCESS;\n\t\t}\n\t\tbreak;\n\tcase EVENT_LBUTTONUP:\n\t\tif( rectState == IN_PROCESS )\n\t\t{\n\t\t\trect = Rect( Point(rect.x, rect.y), Point(x,y) );\n\t\t\trectState = SET;\n\t\t\tsetRectInMask();\n\t\t\tCV_Assert( bgdPxls.empty() && fgdPxls.empty() && prBgdPxls.empty() && prFgdPxls.empty() );\n\t\t\tshowImage();\n\t\t}\n\t\tif( lblsState == IN_PROCESS )\n\t\t{\n\t\t\tsetLblsInMask(flags, Point(x,y), false);\n\t\t\tlblsState = SET;\n\t\t\tshowImage();\n\t\t}\n\t\tbreak;\n\tcase EVENT_RBUTTONUP:\n\t\tif( prLblsState == IN_PROCESS )\n\t\t{\n\t\t\tsetLblsInMask(flags, Point(x,y), true);\n\t\t\tprLblsState = SET;\n\t\t\tshowImage();\n\t\t}\n\t\tbreak;\n\tcase EVENT_MOUSEMOVE:\n\t\tif( rectState == IN_PROCESS )\n\t\t{\n\t\t\trect = Rect( Point(rect.x, rect.y), Point(x,y) );\n\t\t\tCV_Assert( bgdPxls.empty() && fgdPxls.empty() && prBgdPxls.empty() && prFgdPxls.empty() );\n\t\t\tshowImage();\n\t\t}\n\t\telse if( lblsState == IN_PROCESS )\n\t\t{\n\t\t\tsetLblsInMask(flags, Point(x,y), false);\n\t\t\tshowImage();\n\t\t}\n\t\telse if( prLblsState == IN_PROCESS )\n\t\t{\n\t\t\tsetLblsInMask(flags, Point(x,y), true);\n\t\t\tshowImage();\n\t\t}\n\t\tbreak;\n\t}\n}\n\nint GCApplication::nextIter()\n{\n\tif( isInitialized )\n\t\tgrabCut( *image, mask, rect, bgdModel, fgdModel, 1 );\n\telse\n\t{\n\t\tif( rectState != SET )\n\t\t\treturn iterCount;\n\n\t\tif( lblsState == SET || prLblsState == SET )\n\t\t\tgrabCut( *image, mask, rect, bgdModel, fgdModel, 1, GC_INIT_WITH_MASK );\n\t\telse\n\t\t\tgrabCut( *image, mask, rect, bgdModel, fgdModel, 1, GC_INIT_WITH_RECT );\n\n\t\tisInitialized = true;\n\t}\n\titerCount++;\n\n\tbgdPxls.clear(); fgdPxls.clear();\n\tprBgdPxls.clear(); prFgdPxls.clear();\n\n\treturn iterCount;\n}\n\nGCApplication gcapp;\n\nstatic void on_mouse( int event, int x, int y, int flags, void* param )\n{\n\tgcapp.mouseClick( event, x, y, flags, param );\n}\n\nint main( int argc, char** argv )\n{\n\tcv::CommandLineParser parser(argc, argv, \"{help h||}{@input||}\");\n\tif (parser.has(\"help\"))\n\t{\n\t\thelp();\n\t\treturn 0;\n\t}\n\tstring filename = parser.get<string>(\"@input\");\n\tif( filename.empty() )\n\t{\n\t\tcout << \"\\nDurn, empty filename\" << endl;\n\t\treturn 1;\n\t}\n\tMat image = imread( filename, 1 );\n\tif( image.empty() )\n\t{\n\t\tcout << \"\\n Durn, couldn't read image filename \" << filename << endl;\n\t\treturn 1;\n\t}\n\n\thelp();\n\n\tconst string winName = \"image\";\n\tnamedWindow( winName, WINDOW_AUTOSIZE );\n\tsetMouseCallback( winName, on_mouse, 0 );\n\n\tgcapp.setImageAndWinName( image, winName );\n\tgcapp.showImage();\n\n\tfor(;;)\n\t{\n\t\tchar c = (char)waitKey(0);\n\t\tswitch( c )\n\t\t{\n\t\tcase '\\x1b':\n\t\t\tcout << \"Exiting ...\" << endl;\n\t\t\tgoto exit_main;\n\t\tcase 'r':\n\t\t\tcout << endl;\n\t\t\tgcapp.reset();\n\t\t\tgcapp.showImage();\n\t\t\tbreak;\n\t\tcase 'n':\n\t\t\tint iterCount = gcapp.getIterCount();\n\t\t\tcout << \"<\" << iterCount << \"... \";\n\t\t\tint newIterCount = gcapp.nextIter();\n\t\t\tif( newIterCount > iterCount )\n\t\t\t{\n\t\t\t\tgcapp.showImage();\n\t\t\t\tcout << iterCount << \">\" << endl;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcout << \"rect must be determined>\" << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\nexit_main:\n\tdestroyWindow( winName );\n\treturn 0;\n}\n"
        },
        {
          "name": "Exercises_5.cpp",
          "type": "blob",
          "size": 5.9453125,
          "content": "//Exercises at end of Chapter 5\n// 1-6\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nvoid help(const char **argv) {\n  cout << \"\\n\\n\"\n   << \"This program solves the Exercises at the end of Chapter 5\\n\"\n   << \"Call:\\n\"\n   << argv[0] << \" <path/image_name>\\n\\n\"\n   << \"For example: ./\" << argv[0] << \" ../faces.png\\n\"\n   << endl;\n}\n\n\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc < 2) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\t/************************************************************************/\n\t/* 1.  This  exercise  will  accustom  you  to  the  idea  of  many  functions  taking  matrix\n\ttypes.  Create  a  two-dimensional  matrix  with  three  channels  of  type  byte  with\n\tdata size 100 × 100. Set all the values to 0.\n\ta.  Draw a circle in the matrix using void cv::circle(InputOutputArray img,\n\tcv::point  center,  intradius,  cv::Scalar  color,  int  thickness=1,\n\tint line_type=8, int shift=0).\n\tb.  Display this image using methods described in Chapter 2.                                                                     */\n\t/************************************************************************/\n\tMat m1 = Mat(100,100,CV_8U,Scalar(0));\n\t// a\n\tcv::circle(m1,Point(m1.cols/2,m1.rows/2),40,Scalar(255));\n\t// b\n\tcv::imshow(\"execrise 1\",m1);\n\n\t/************************************************************************/\n\t/* 2.  Create a two-dimensional matrix with three channels of type byte with data size\n\t100 × 100, and set all the values to 0. Use the cv::Mat element access functions to\n\tmodify the pixels. Draw a green rectangle between (20, 5) and (40, 20).                                                                     */\n\t/************************************************************************/\n\tMat m2 = Mat(100,100,CV_8UC3,Scalar(0));\n\tfor (int i=0;i<m2.rows;i++)\n\t{\n\t\tfor (int j=0;j<m2.cols;j++)\n\t\t{\n\t\t\tif (j>=20&&j<=40&&i>=5&&i<=20)\n\t\t\t{\n\t\t\t\tm2.at<Vec3b>(i,j)[0]=0;    //b\n\t\t\t\tm2.at<Vec3b>(i,j)[1]=255;  //g\n\t\t\t\tm2.at<Vec3b>(i,j)[2]=0;    //r\n\t\t\t}\n\t\t}\n\t}\n\tcv::imshow(\"execrise 2\",m2);\n\n\t/************************************************************************/\n\t/* 3.  Create a three-channel RGB image of size 100 × 100. Clear it. Use pointer arith‐\n\tmetic to draw a green square between (20, 5) and (40, 20).                                                                     */\n\t/************************************************************************/\n\tMat m3 = Mat(100,100,CV_8UC3,Scalar(0));\n\tfor(int i=0;i<m3.rows;i++)\n\t{       \n\t\tuchar* outData=m3.ptr<uchar>(i);     \n\t\tfor(int j=0;j<m3.cols;j++)\n\t\t{\n\t\t\tif (j>=20&&j<=40&&i>=5&&i<=20)\n\t\t\t{\n\t\t\t\toutData[j*3+1] = 255;\n\t\t\t}\n\t\t}\n\t}\n\tcv::imshow(\"execrise 3\",m3);\n\n\t/************************************************************************/\n\t/* 4.  Practice using region of interest (ROI). Create a 210 × 210 single-channel byte\n\timage and zero it. Within the image, build a pyramid of increasing values using  \n\tROI and cv::Mat::setTo(). That is: the outer border should be 0, the next inner\n\tborder should be 20, the next inner border should be 40, and so on until the final\n\tinnermost square is set to value 200; all borders should be 10 pixels wide. Display\n\tthe image.\n\t/************************************************************************/\n\tMat m4 = Mat(210,210,CV_8U,Scalar(0));\n\tfor (int i=0;i<210/2;i=i+10)\n\t{\n\t\tMat roi = m4(cv::Rect(i,i,210-i*2,210-i*2));\n\t\troi.setTo(i*2);// roi = i*2;\n\t\t\n\t}\n\tcv::imshow(\"execrise 4\",m4);\n\n\t/************************************************************************/\n\t/* 5.  Use  multiple  headers  for  one  image.  Load  an  image  that  is  at  least  100  ×  100.\n\tCreate two additional headers that are ROIs where width = 20 and the height =\n\t30.  Their  origins  should  be  at  (5,  10)  and  (50,  60),  respectively.  Pass  these  new\n\timage  subheaders  to  cv::bitwise_not().  Display  the  loaded  image,  which\n\tshould have two inverted rectangles within the larger image.                                                                     */\n\t/************************************************************************/\n\tMat m5 = Mat(100,100,CV_8U,Scalar(0));\n\tMat roi1 = m5(Rect(5,10,20,30));\n\tMat roi2 = m5(Rect(50,60,20,30));\n\tbitwise_not(roi1,roi1);\n\tbitwise_not(roi2,roi2);\n\tcv::imshow(\"execrise 5\",m5);\n\n\t/************************************************************************/\n\t/* 6.  Create a mask using cv::compare(). Load a real image. Use cv::split() to split\n\tthe image into red, green, and blue images.\n\ta.  Find and display the green image.\n\tb.  Clone this green plane image twice (call these clone1 and clone2).\n\tc.  Find the green plane’s minimum and maximum value.\n\td.  Set  clone1’s  values  to  thresh = (unsigned char)((maximum - minimum)/\n\t2.0).\n\te.  Set  clone2  to  0  and  use  cv::compare  (green_image,  clone1,  clone2,\n\tcv::CMP_GE).  Now  clone2  will  have  a  mask  of  where  the  value  exceeds\n\tthresh in the green image.\n\tf.  Finally,     use     cv::subtract   (green_image,thresh/2,   green_image,\n\tclone2) and display the results.                                                                     */\n\t/************************************************************************/\n\tMat clone1,clone2;\n\tvector<cv::Mat> bgr_planes;\n\tMat src = cv::imread(argv[1],1);\n\tsplit(src, bgr_planes );\n\t// a\n\tMat green = bgr_planes[1];\n\timshow(\"green\",green);\n\t// b\n\tclone1 = green.clone();\n\tclone2 = green.clone();\n\t// c\n\tdouble minPixelValue, maxPixelValue;\n\tint minPixelID,maxPixelID;\n\tcv::minMaxIdx(green, &minPixelValue, &maxPixelValue,&minPixelID,&maxPixelID);\n\t// d\n\tdouble thresh= (unsigned char)((maxPixelValue - minPixelValue)/2.0);\n\tint ithresh = (int)thresh;\n\tclone1 = Mat(clone1.size(),clone1.type(),Scalar(ithresh));\n\t// e\n\tclone2 = Mat(clone2.size(),clone2.type(),Scalar(0));\n\tcompare(green,clone1,clone2,cv::CMP_GE);\n\t// f\n\tcv::subtract(green,thresh/2,green,clone2);\n\timshow(\"execrise 6\",clone2);\n\tcout << \"6\" << endl;\n\twaitKey(-1); //Wait here until any key pressed\n\treturn 0;\n}\n"
        },
        {
          "name": "Exercises_7.cpp",
          "type": "blob",
          "size": 4.2109375,
          "content": "//Exercises at end of Chapter 7\n// 1-4\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n\nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercises at the end of Chapter 7\\n\"\n\t\t<< endl;\n}\n\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\t\n\t/************************************************************************/\n\t/* 1.  Using the cv::RNG random number generator:\n\ta.  Generate and print three floating-point numbers, each drawn from a uniform\n\tdistribution from 0.0 to 1.0.\n\tb.  Generate  and  print  three  double-precision  numbers,  each  drawn  from  a\n\tGaussian distribution centered at 0.0 and with a standard deviation of 1.0.\n\tc.  Generate and print three unsigned bytes, each drawn from a uniform distri‐\n\tbution from 0 to 255.                                                                     \n\t/************************************************************************/\n\tRNG rng = theRNG();\n\t// a\n\tfloat f1 = rng.uniform(0.f,1.f);\n\tfloat f2 = rng.uniform(0.f,1.f);\n\tfloat f3 = rng.uniform(0.f,1.f);\n\tcout<<\" f1 \" << f1 <<\" f2 \"<<f2<<\" f3 \"<<f3<<endl;\n\t// b\n\tVec3d vec3d;\n    rng.fill(vec3d,RNG::NORMAL,0.,1.);\n\tcout<<\" d1 \"<<vec3d[0]<<\" d2 \"<<vec3d[1]<<\" d3 \"<<vec3d[2]<<endl;\n\t// c\n\tunsigned byte1 = rng.uniform(0,255);\n\tunsigned byte2 = rng.uniform(0,255);\n\tunsigned byte3 = rng.uniform(0,255);\n\tcout<<\" byte1 \" << byte1 <<\" byte2 \"<<byte2<<\" byte3 \"<<byte3<<endl;\n\n\t/************************************************************************/\n\t/* 2.  Using  the  fill()  method  of  the  cv::RNG  random  number  generator,  create  an\n\tarray of:\n\ta.  20 floating-point numbers with a uniform distribution from 0.0 to 1.0.\n\tb.  20  floating-point  numbers  with  a  Gaussian  distribution  centered  at  0.0  and\n\twith a standard deviation of 1.0.\n\tc.  20 unsigned bytes with a uniform distribution from 0 to 255.\n\td.  20 color triplets, each of three bytes with a uniform distribution from 0 to 255.                                                                     */\n\t/************************************************************************/\n\t// a\n\tMat matFloat20 = Mat(20,1,CV_32FC1,Scalar(0));\n\trng.fill(matFloat20,RNG::UNIFORM,0.f,1.f);\n\t// b\n\trng.fill(matFloat20,RNG::NORMAL,0.f,1.f);\n\t// c\n\tMat matUbyte20 = Mat(20,1,CV_8UC1,Scalar(0));\n\trng.fill(matUbyte20,RNG::UNIFORM,0,255);\n\t// d\n\tMat matColor20 = Mat(20,1,CV_8UC3,Scalar(0));\n\trng.fill(matColor20,RNG::UNIFORM,0,255);\n\n\t/************************************************************************/\n\t/* 3.  Using the cv::RNG random number generator, create an array of 100 three-byte\n\tobjects such that:\n\ta.  The first and second dimensions have a Gaussian distribution, centered at 64\n\tand 192, respectively, each with a variance of 10.\n\tb.  The third dimension has a Gaussian distribution, centered at 128 and with a\n\tvariance of 2.\n\tc.  Using the cv::PCA object, compute a projection for which maxComponents=2.\n\td.  Compute the mean in both dimensions of the projection; explain the result.                                                                     */\n\t/************************************************************************/\n\tMat matInt100 = Mat(100,1,CV_32FC3,Scalar(0));\n\t// a\n\tvector<Mat> planes;\n\tsplit(matInt100,planes);\n\trng.fill(planes[0],RNG::NORMAL,64,10);\n\trng.fill(planes[1],RNG::NORMAL,192,10);\n\t// b\n\trng.fill(planes[2],RNG::NORMAL,128,2);\n\t// c \n\tPCA pca(planes[0],Mat(),CV_PCA_DATA_AS_ROW,2);\n\tplanes[0] = pca.project(planes[0]);\n\tpca(planes[1],Mat(),CV_PCA_DATA_AS_ROW,2);\n\tplanes[1] = pca.project(planes[1]);\n\tpca(planes[2],Mat(),CV_PCA_DATA_AS_ROW,2);\n\tplanes[2] = pca.project(planes[2]);\n\t//d\n\tf1 = 0;\n\tf2 = 0;\n\tf3 = 0;\n\tfor (int i = 0;i<100;i++)\n\t{\n\t\tf1 += planes[0].at<float>(i,0);\n\t\tf2 += planes[1].at<float>(i,0);\n\t\tf3 += planes[2].at<float>(i,0);\n\t}\n\tf1 = f1/100;\n\tf2 = f2/100;\n\tf3 = f3/100;\n\t/************************************************************************/\n\t/* 4.  page 206 at 《leanring Opencv 3.0》                                                            \n\t/************************************************************************/\n\tMatx32d AX(1, 1,\n\t\t       0, 1,\n\t\t      -1 ,1); \n\tMat A = static_cast<Mat>(AX);\n\tMat U, W, V;\n\tSVD::compute(A, W, U, V);\n\n\twaitKey();\n\tgetchar();\n\treturn 0;\n\n}\n"
        },
        {
          "name": "Exercises_8_1.cpp",
          "type": "blob",
          "size": 3.0166015625,
          "content": "//Exercises_8_1.cpp Exercises at end of Chapter 8\n//1\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n\nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercise 1 at the end of Chapter 8 \\n\"\n\t\t<< \"Call:\\n\"\n\t\t<< argv[0] << \" <path/video_name>\\n\\n\"\n\t\t<< \"For example: ./\" << argv[0] << \" ../tree.avi\\n\"\n\t\t<< endl;\n}\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc < 2) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\t/************************************************************************/\n\t/* 1.  Create a program that \n\t(1) reads frames from a video, \n\t(2) turns the result to gray‐scale,  and \n\t(3) performs  Canny  edge  detection  on  the  image.  \n\tDisplay  all  three stages of processing in three different windows, with each window appropriately\n\tnamed for its function.\n\ta.  Display  all  three  stages  of  processing  in  one  image.  (Hint:  create  another\n\timage of the same height but three times the width as the video frame. Copy\n\tthe  images  into  this,  either  by  using  pointers  or  (more  cleverly)  by  creating\n\tthree new image headers that point to the beginning of and to one-third and\n\ttwo-thirds of the way into the imageData. Then use Mat::copyTo().)\n\tb.  Write  appropriate  text  labels  describing  the  processing  in  each  of  the  three\n\tslots.*/\n\t/************************************************************************/\n\t\n\tVideoCapture capture; \n\tif(!capture.open(argv[1])){\n\t\tcout << \"Could not open \" << argv[1] << endl;\n\t\treturn 1;\n\t}\n\tdouble rate=capture.get(CV_CAP_PROP_FPS);\n\tMat MatFrame;\n\tMat MatGray;\n\tMat MatCanny;\n\tint delay=1000/rate;\n\tcout << \"rate = \" << rate << \", delay = \" << delay << endl;\n\tcout << \"\\nEsq to exit, or let it run out, then any key to release capture and exit.\\n\" << endl; \n\tint frame_count = 0;\n\twhile(1)\n\t{\n\t\tcapture >> MatFrame;\n\t\tif( !MatFrame.data ) {\n\t\t\tcout << \"Done with capture\" << endl;\n\t\t\tbreak;\n\t\t}\n\n\t\t//(1)\n\t\timshow(\"Raw Video\",MatFrame);\n\t\t//(2)\n\t\tcvtColor(MatFrame,MatGray,COLOR_BGR2GRAY);\n\t\timshow(\"Gray Video\",MatGray);\n\t\t//(3)\n\t\tCanny(MatGray,MatCanny,100,255);\n\t\timshow(\"Canny Video\",MatCanny);\n\t\t//question a\n\t\tMat MatAll(MatFrame.rows,3* MatFrame.cols  ,CV_8UC3,Scalar::all(0));\n\t\tcvtColor(MatGray,MatGray,COLOR_GRAY2BGR);\n\t\tcvtColor(MatCanny,MatCanny,COLOR_GRAY2BGR);\n\t\tMat MatSub = MatAll.colRange(0, MatFrame.cols);\n\t\tMatFrame.copyTo(MatSub);\n\t\tMatSub = MatAll.colRange( MatFrame.cols,2*MatFrame.cols);\n\t\tMatGray.copyTo(MatSub);\n\t\tMatSub = MatAll.colRange(2*MatFrame.cols,3*MatFrame.cols);\n\t\tMatCanny.copyTo(MatSub);\n\t\t//question b\n\t\tScalar color = CV_RGB(255,0,0);\n\t\tputText(MatAll,\"raw video\",Point(50,30),CV_FONT_HERSHEY_DUPLEX,1.0f,color);\n\t\tputText(MatAll,\"gray video\",Point(50+MatFrame.cols,30),CV_FONT_HERSHEY_DUPLEX,1.0f,color);\n\t\tputText(MatAll,\"canny video\",Point(50+2*MatFrame.cols,30),CV_FONT_HERSHEY_DUPLEX,1.0f,color);\n\t\timshow(\"all Video\",MatAll);\n\n\t\tif ((cv::waitKey(delay) & 255) == 27)\n\t\t\tbreak;\t\t\t\n\t}\n\twaitKey();\n\tcapture.release();\n\treturn 0;\n\n}\n"
        },
        {
          "name": "Exercises_9_1-2-10-11-12-15-16.cpp",
          "type": "blob",
          "size": 9.8603515625,
          "content": "//Exercises_9_1-2-10-11-12-15-16.cpp Exercises at end of Chapter 8\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n \nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercise 1、2、10、11、12、15 and 16 at the end of Chapter 9 \\n\"\n\t\t<< \"Call:\\n\"\n\t\t<< argv[0] << \" <path/image_name>\\n\\n\"\n\t\t<< \"For example: ./\" << argv[0] << \" ../lena.jpg\\n\"\n\t\t<< endl;\n}\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc < 2) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\tMat src ;\n\tMat gray;\n\tMat mask;\n\tMat temp;\n\tMat temp2;\n\t/************************************************************************/\n\t/* 1.  Load an image with interesting textures. Smooth the image in several ways using\n\tcv::smooth() with smoothtype=cv::GAUSSIAN.\n\ta.  Use a symmetric 3 × 3, 5 × 5, 9 × 9, and 11 × 11 smoothing window size and\n\tdisplay the results.\n\tb.  Are the output results nearly the same by smoothing the image twice with a\n\t5 × 5 Gaussian filter as when you smooth once with two 11 × 11 filters? Why\n\tor why not?                                                                     */\n\t/************************************************************************/\t\n\tsrc = imread(argv[1]);\n\tif (src.empty())\n\t{\n\t\tcout << \"\\nERROR: parameters is not a image name.\\n\" << endl;\n\t\treturn -1;\n\t}\n\tdouble minPixelValue, maxPixelValue;\n\t//a\n\tMat smooth33;Mat smooth55;Mat smooth99;Mat smooth111;\n\tGaussianBlur(src,smooth33,cv::Size(3,3),0);\n\tGaussianBlur(src,smooth55,cv::Size(5,5),0);\n\tGaussianBlur(src,smooth99,cv::Size(9,9),0);\n\tGaussianBlur(src,smooth111,cv::Size(11,11),0);\n\t//b\n\tGaussianBlur(smooth55,smooth55,cv::Size(5,5),0);\n\ttemp = smooth55 - smooth111;\n\tcv::minMaxIdx(temp, &minPixelValue, &maxPixelValue);\n\t// maxPixelVaule  = 19 ,the result is \" 5 × 5 Gaussian filter twice\" is much like \"11 × 11 filters\"\n\n\t/************************************************************************/\n\t/* 2.  Create a 100 × 100 single-channel image. Set all pixels to 0. Finally, set the center\n\tpixel equal to 255.\n\ta.  Smooth this image with a 5 × 5 Gaussian filter and display the results. What\n\tdid you find?\n\tb.  Do this again but with a 9 × 9 Gaussian filter.\n\tc.  What does it look like if you start over and smooth the image twice with the 5\n\t× 5 filter? Compare this with the 9 × 9 results. Are they nearly the same? Why\n\tor why not?\n\t*/\n\t/************************************************************************/\n\tMat singleChanel100 = Mat(100,100,CV_8U,Scalar(0));\n\tsingleChanel100.at<uchar>(50,50) = 255;\n\t\n\t//a\n\tGaussianBlur(singleChanel100,temp,cv::Size(5,5),0);\n\timshow(\"5 × 5 Gaussian filter\",temp);\n\t//b\n\tGaussianBlur(singleChanel100,temp,cv::Size(9,9),0);\n\timshow(\"9 × 9Gaussian filter\",temp);\n\t//c\n\tGaussianBlur(singleChanel100,temp,cv::Size(5,5),0);\n\tGaussianBlur(temp,temp,cv::Size(5,5),0);\n\tGaussianBlur(singleChanel100,temp2,cv::Size(9,9),0);\n\tabsdiff(temp,temp2,temp2);\n\tcv::minMaxIdx(temp2, &minPixelValue, &maxPixelValue);\n\t//maxPixelVaule = 5,the result are nearly the same\n\t/************************************************************************/\n\t/* 10.  Create  a  low-variance  random  image  (use  a  random  number  call  such  that  the\n\tnumbers don’t differ by much more than three and most numbers are near zero).\n\tLoad  the  image  into  a  drawing  program  such  as  PowerPoint,  and  then  draw  a\n\twheel  of  lines  meeting  at  a  single  point.  Use  bilateral  filtering  on  the  resulting\n\timage and explain the results.                                                                     */\n\t/************************************************************************/\n\tMat matLowVariance  = Mat(512,512,CV_8U,Scalar(0));\n\tRNG arng = cv::theRNG();\n\tarng.fill(matLowVariance,RNG::UNIFORM,0,30);\n\t//draw a wheel of lines meeting at the center\n\tline(matLowVariance,Point(256,256),Point(256,256-100),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256+100,256+100),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256+100,256),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256+100,256-100),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256,256+100),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256-100,256-100),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256-100,256),Scalar(255),1);\n\tline(matLowVariance,Point(256,256),Point(256-100,256+100),Scalar(255),1);\n\timshow(\"a wheel  of  lines  meeting  at  a  single  point\",matLowVariance);\n\tbilateralFilter(matLowVariance,temp,5,10.0,2.0); \n\timshow(\"bilateralFilter\",temp);\n\t/************************************************************************/\n\t/* 11.  Load an image of a scene and convert it to grayscale.\n\ta.  Run  the  morphological  Top  Hat  operation  on  your  image  and  display  theresults.\n\tb.  Convert the resulting image into an 8-bit mask.\n\tc.  Copy a grayscale value into the original image where the Top Hat mask (from\n\tPart b of this exercise) is nonzero. Display the results.                                                                     */\n\t/************************************************************************/\n\tcvtColor(src,gray,COLOR_BGR2GRAY);\n\t//a \n\tmorphologyEx(gray,temp,CV_MOP_TOPHAT,Mat());\n\timshow(\" morphological  Top  Hat\",temp);\n\t//b\n\ttemp.convertTo(mask,CV_8UC1);\n\t//c\n\tcvtColor(gray,gray,COLOR_GRAY2BGR);\n\tgray.copyTo(src,mask);\n\timshow(\"execrise 11 result\",src);\n\t/************************************************************************/\n\t/* 12.  Load an image with many details.\n\ta.  Use resize() to reduce the image by a factor of 2 in each dimension (hence\n\tthe image will be reduced by a factor of 4). Do this three times and display the\n\tresults.\n\tb.  Now take the original image and use cv::pyrDown() to reduce it three times,\n\tand then display the results.\n\tc.  How are the two results different? Why are the approaches different?\n\t*/\n\t/************************************************************************/\n\t//a\n\tMat matResize;\n\tresize(src,matResize,cv::Size(0,0),0.5,0.5);\n\tresize(matResize,matResize,cv::Size(0,0),0.5,0.5);\n\tresize(matResize,matResize,cv::Size(0,0),0.5,0.5);\n\timshow(\"resize 3 times\",matResize);\n\t//b\n\tMat\tmatPyrDown;\n\tpyrDown(src,matPyrDown);\n\tpyrDown(matPyrDown,matPyrDown);\n\tpyrDown(matPyrDown,matPyrDown);\n\timshow(\"pyrDown 3 times\",matPyrDown);\n\t//c\n\tabsdiff(matResize,matPyrDown,temp);\n\timshow(\"two results of resize and pyDown diff\",temp);\n\t/************************************************************************/\n\t/* 15.  Use  cv::filter2D()  to  create  a  filter  that  detects  only  60-degree  lines  in  an\n\timage. Display the results on a sufficiently interesting image scene.                                                                     */\n\t/************************************************************************/\n\tMat matWithLines = Mat(512,512,CV_8UC1,Scalar(0));\n\t// create 9 lines\n\tfor (int i=0;i<9;i++)\n\t{\n\t\tline(matWithLines,Point(arng.uniform(0,512),arng.uniform(0,521)),Point(arng.uniform(0,512),arng.uniform(0,521)),Scalar(255),1);\n\t}\n\t//45 degree line \n\tline(matWithLines,Point(0,512),Point(512,0),Scalar(255),1);\n\tmatWithLines.convertTo(matWithLines,CV_32FC1,1.0/255);\n\t// detects  only  45-degree lines\n\tMat matKernel = Mat(3,3,CV_32FC1,Scalar(0));\n    matKernel.at<float>(0,0) =  0 ;\n\tmatKernel.at<float>(0,1) =  0 ;\n\tmatKernel.at<float>(0,2) =  1.0/3 ;\n\tmatKernel.at<float>(1,0) =  0 ;\n\tmatKernel.at<float>(1,1) =  1.0/3 ;\n\tmatKernel.at<float>(1,2) =  0 ;\n\tmatKernel.at<float>(2,0) =  1.0/3 ;\n\tmatKernel.at<float>(2,1) = 0;\n\tmatKernel.at<float>(2,2) = 0;\n\tfilter2D(matWithLines,temp,CV_32FC1,matKernel);\n\tthreshold(temp,temp,0.99,1,CV_THRESH_BINARY);\n\t/************************************************************************/\n\t/* 16.  Separable kernels: create a 3 × 3 Gaussian kernel using rows [(1/16, 2/16, 1/16),\n\t(2/16, 4/16, 2/16), (1/16, 2/16, 1/16)] and with anchor point in the middle.\n\ta.  Run this kernel on an image and display the results.\n\tb.  Now  create  two  one-dimensional  kernels  with  anchors  in  the  center:  one\n\tgoing  “across”  (1/4,  2/4,  1/4),  and  one  going  down  (1/4,  2/4,  1/4).  Load  the\n\tsame  original  image  and  use  cv::filter2D()  to  convolve  the  image  twice,\n\tonce with the first 1D kernel and once with the second 1D kernel. Describe\n\tthe results.\n\tc.  Describe  the  order  of  complexity  (number  of  operations)  for  the  kernel  in\n\tpart a and for the kernels in part b. The difference is the advantage of being\n\table  to  use  separable  kernels  and  the  entire  Gaussian  class  of  filters—or  any\n\tlinearly  decomposable  filter  that  is  separable,  since  convolution  is  a  linear\n\toperation.                                                                     */\n\t/************************************************************************/\n\tMat matGaussianKernel = Mat(3,3,CV_32FC1,Scalar(0));\n\tmatGaussianKernel.at<float>(0,0) = 1.0/16;\n\tmatGaussianKernel.at<float>(0,1) = 2.0/16;\n\tmatGaussianKernel.at<float>(0,2) = 1.0/16;\n\tmatGaussianKernel.at<float>(1,0) = 2.0/16;\n\tmatGaussianKernel.at<float>(1,1) = 4.0/16;\n\tmatGaussianKernel.at<float>(1,2) = 2.0/16;\n\tmatGaussianKernel.at<float>(2,0) = 1.0/16;\n\tmatGaussianKernel.at<float>(2,1) = 2.0/16;\n\tmatGaussianKernel.at<float>(2,2) = 1.0/16;\n\t//a\n\tsrc.convertTo(temp,CV_32F,1.0/255);\n\tfilter2D(temp,temp,CV_32F,matGaussianKernel);\n\timshow(\"a 3 × 3 Gaussian kernel\",temp);\n\t//b\n\tMat matKernel1 = Mat(1,3,CV_32FC1,Scalar(0));\n\tMat matKernel2 = Mat(3,1,CV_32FC1,Scalar(0));\n\tmatKernel1.at<float>(0,0) = 1.0/4;\n\tmatKernel1.at<float>(0,1) = 2.0/4;\n\tmatKernel1.at<float>(0,2) = 1.0/4;\n\tmatKernel2.at<float>(0,0) = 1.0/4;\n\tmatKernel2.at<float>(1,0) = 2.0/4;\n\tmatKernel2.at<float>(2,0) = 1.0/4;\n\tfilter2D(temp,temp2,CV_32F,matKernel1);\n\tfilter2D(temp2,temp2,CV_32F,matKernel2);\n\tabsdiff(temp,temp2,temp2);\n\t//temp and temp2 is just the same mat,maxPixelValue is very small,nearly ZERO\n\tcv::minMaxIdx(temp2, &minPixelValue, &maxPixelValue);\n\t//c the order is no matter\n\twaitKey();\n\treturn 0;\n}\n"
        },
        {
          "name": "Exercises_9_4.cpp",
          "type": "blob",
          "size": 2.072265625,
          "content": "//Exercises_9_4.cpp Exercises at end of Chapter 9\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n \nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercise 4、5 at the end of Chapter 9 \\n\"\n\t\t<< \"Call:\\n\"\n\t\t<< argv[0] << \" <path/image_name1>\" << \" <path/image_name2>\\n\\n\"\n\t\t<< \"For example: ./\" << argv[0] << \" ../left.jpg \"<< \" ../left.jpg\\n\"\n\t\t<< endl;\n}\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc < 3) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\tMat temp;\n\n\t/************************************************************************/\n\t/* 4.  Use a camera to take two pictures of the same scene while moving the camera as\n\tlittle as possible. Load these images into the computer as src1 and src1.\n\ta.  Take  the  absolute  value  of  src1  minus  src1  (subtract  the  images);  call  it\n\tdiff12 and display. If this were done perfectly, diff12 would be black. Why\n\tisn’t it?\n\tb.  Create cleandiff by using cv::erode() and then cv::dilate() on diff12.\n\tDisplay the results.\n\tc.  Create  dirtydiff  by  using  cv::dilate()  and  then  cv::erode()  on  diff12\n\tand then display.\n\td.  Explain the difference between cleandiff and dirtydiff.                                                                     */\n\t/************************************************************************/\n\tMat src1 = imread(argv[1],IMREAD_GRAYSCALE);\n\tMat src2 = imread(argv[2],IMREAD_GRAYSCALE);\n\tif (src1.empty() || src2.empty())\n\t{\n\t\tcout << \"\\nERROR: parameters is not a image name.\\n\" << endl;\n\t\treturn -1;\n\t}\n\t//a\n\tMat diff12 =  src1 - src2;\n\timshow(\"diff12\",diff12);\n\t//b\n\tMat cleandiff;\n\terode(diff12,cleandiff,Mat());\n\tdilate(cleandiff,cleandiff,Mat());\n\timshow(\"cleandiff\",cleandiff);\n\t//c\n\tMat dirtydiff;\n\tdilate(diff12,dirtydiff,Mat());\n\terode(dirtydiff,dirtydiff,Mat());\n\timshow(\"dirtydiff\",dirtydiff);\n\t//d\n\tabsdiff(cleandiff,dirtydiff,temp) ;\n\timshow(\"absdiff\",temp);\n\t//the difference between cleandiff and dirtydiff is the difference between of \"open\" and \"close\"\n\twaitKey();\n\treturn 0;\n\n}\n"
        },
        {
          "name": "Exercises_9_5.cpp",
          "type": "blob",
          "size": 2.177734375,
          "content": "//Exercises_9_5.cpp Exercises at end of Chapter 9\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n \nvoid help(const char **argv) {\n\tcout << \"\\n\\n\"\n\t\t<< \"This program solves the Exercise 4、5 at the end of Chapter 9 \\n\"\n\t\t<< \"Call:\\n\"\n\t\t<< argv[0] << \" <path/image_name1>\" << \" <path/image_name2>\\n\\n\"\n\t\t<< \"For example: ./\" << argv[0] << \" ../left.jpg \"<< \" ../left.jpg\\n\"\n\t\t<< endl;\n}\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc < 3) {\n\t\tcout << \"\\nERROR: You had too few parameters.\\n\" << endl;\n\t\treturn -1;\n\t}\n\tMat temp;\n\tMat temp2;\n /************************************************************************/\n\t/* 5.  Create an outline of an object. Take a picture of a scene. Then, without moving\n\tthe camera, put a coffee cup in the scene and take a second picture. Load these\n\timages and convert both to 8-bit grayscale images.\n\ta.  Take  the  absolute  value  of  their  difference.  Display  the  result,  which  should\n\tlook like a noisy mask of a coffee mug.\n\tb.  Do a binary threshold of the resulting image using a level that preserves most\n\tof the coffee mug but removes some of the noise. Display the result. The “on”\n\tvalues should be set to 255.\n\tc.  Do a cv::MOP_OPEN on the image to further clean up noise.\n\td.  Using  the  erosion  operator  and  logical  XOR  function,  turn  the  mask  of  the\n\tcoffee  cup  image  into  an  outline  of  the  coffee  cup  (only  the  edge  pixels\n\tremaining).                                                                     */\n\t/************************************************************************/\n\tMat matMug = imread(argv[1],IMREAD_GRAYSCALE);\n\tMat matNoMug = imread(argv[2],IMREAD_GRAYSCALE);\n\tif (matMug.empty() || matNoMug.empty())\n\t{\n\t\tcout << \"\\nERROR: parameters is not a image name.\\n\" << endl;\n\t\treturn -1;\n\t}\n\t//a\n\tabsdiff(matMug,matNoMug,temp);\n\timshow(\"absolute  value  of  mug \",temp);\n\t//b\n\tthreshold(temp,temp,100,255,THRESH_OTSU);\n\timshow(\"a binary threshold\",temp);\n\t//c\n\tmorphologyEx(temp,temp,cv::MORPH_OPEN,Mat());\n\timshow(\"MORPH_OPEN\",temp);\n\t//d\n\terode(temp,temp,Mat());\n\tmatMug.copyTo(temp2,temp);\n\timshow(\"an outline of the coffee cup\",temp2);\n\twaitKey();\n\treturn 0;\n\n}\n"
        },
        {
          "name": "HandIndoorColor.jpg",
          "type": "blob",
          "size": 95.1875,
          "content": null
        },
        {
          "name": "HandOutdoorColor.jpg",
          "type": "blob",
          "size": 141.912109375,
          "content": null
        },
        {
          "name": "HandOutdoorSunColor.jpg",
          "type": "blob",
          "size": 103.5224609375,
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.6005859375,
          "content": "# Learning OpenCV 3\n\n## INTRO\n\nThis is the example code that accompanies Learning OpenCV 3 by Adrian Kaehler and Gary Bradski ([9781491937990](http:*shop.oreilly.com/product/0636920044765.do)).\n\nClick the Download Zip button to the right to download example code.\n\nVisit the catalog page [here](http:*shop.oreilly.com/product/0636920044765.do).\n\nSee an error? Report it [here](http:*oreilly.com/catalog/errata.csp?isbn=0636920044765), or simply fork and send us a pull request\n\n\n## NOTES\n\nFor default suggestions of how the run the code, it assumes you put your build directory under `Learning-OpenCV-3_examples` directory. \n\nThus, from the `Learning-OpenCV-3_examples` directory:\n\n```\t\n  mkdir build\n  cd build\n  cmake ..\n  make -j\n```\n\n#### Docker\nFor your interest, included here is an Ubuntu _Docker_ file that\n* Shares a directory with the host operating system\n* Shares the first camera between both systems\n* Loads Ubuntu 16.04 \n* Loads all dependencies for OpenCV 3.2 and opencv_contrib\n* Loads and builds OpenCV 3.2 and opencv_contrib into a build directory \n  * executable files end up in `opencv-3.2.0/build/bin`\n* Next, it `git clones` the code (and Docker file) for Learning OpenCV 3 and builds it\n  * executable files end up in `Learning_OpenCV-3_examples/build`\n* To get to the top level directory, just type: `cd`\n\n\n## CONTENTS:\n\n### SPECIAL FILES:\n\n* README.md       -- this readme file\n* Dockerfile      -- complete self contained opencv environment using Ubuntu 16-04\n* CMakeLists.txt  -- how to buld everything here \n\n### EXERCISES:\n\n* Exercises at end of Chapter 5\n* Exercises at end of Chapter 7\n* Exercises_8_1.cpp Exercises at end of Chapter 8\n* Exercises_9_1-2-10-11-12-15-16.cpp Exercises at end of Chapter 8\n* Exercises_9_4.cpp Exercises at end of Chapter 9\n* Exercises_9_5.cpp Exercises at end of Chapter 9\n* Exercises at end of Chapter 11\n* Exercises_13_1-2-11.cpp\tExercises for Chapter 13\n* Exercises_13_9.cpp\t\n\n### EXAMPLES:\n\n* Example 2-1. A simple OpenCV program that loads an image from disk and displays it\n* Example 2-2. Same as Example 2-1 but employing the “using namespace” directive\n* Example 2-3. A simple OpenCV program for playing a video file from disk\n* Example 2-4. Adding a trackbar slider to the basic viewer window for moving around\n* Example 2-5. Loading and then smoothing an image before it is displayed on the screen\n* Example 2-6. Using cv::pyrDown() to create a new image that is half the width and\n* Example 2-7. The Canny edge detector writes its output to a single-channel (grayscale) image\n* Example 2-8. Combining the pyramid down operator (twice) and the Canny\n* Example 2-9. Getting and setting pixels in Example 2-8\n* Example 2-10. The same object can load videos from a camera or a file\n* Example 2-11. A complete program to read in a color video and write out the log-polar-\n* Example 4-1. Summation of a multidimensional array, done plane by plane\n* Example 4-2. Summation of two arrays using the N-ary operator\n* Example 4-3. Printing all of the nonzero elements of a sparse array\n* Example 4-4. A better way to print a matrix\n* Example 5-1. Complete program to alpha-blend the ROI starting at (0,0) in src2 with the ROI starting at (x,y) in src1\n* Example 7-1. Using the default random number generator to generate a pair of integers\n* Example 8-1. Unpacking a four-character code to identify a video codec\n* Example 8-2. Using cv::FileStorage to create a .yml data file\n* Example 8-3. Using cv::FileStorage to read a .yml file\n* Example 9-1. Creating a window and displaying an image in that window\n* Example 9-2. Toy program for using a mouse to draw boxes on the screen\n* Example 9-3. Using a trackbar to create a “switch” tha t the user can turn on and off;\n* Example 9-4. Slightly modified code from the OpenCV documentation that draws a\n* Example 9-5. An example program ch4_qt.cpp, which takes a single argument\n* Example 9-6. The QMoviePlayer object header file QMoviePlayer.hpp\n* Example 9-7. The QMoviePlayer object source file: QMoviePlayer.cpp\n* Example 9-8. An example program which takes a single argument\n* Example 9-9. The WxMoviePlayer object header file WxMoviePlayer.hpp\n* Example 9-10. The WxMoviePlayer object source file WxMoviePlayer.cpp\n* Example 9-11. An example header file for our custom View class\n* Example 10-1. Using cv::threshold() to sum three channels of an image\n* Example 10-2. Alternative method to combine and threshold image planes\n* Example 10-3. Threshold versus adaptive threshold\n* Example 11-1. An affine transformation.\n* Example 11-2. Code for perspective transformation\n* Example 11-3. Log-polar transform example\n* Example 12-1. Using cv::dft() and cv::idft() to accelerate the computation of\n* Example 12-2. Using cv::HoughCircles() to return a sequence of circles found in a\n* **EXTRA** Example 12-3. Using GrabCut for background removal\n* **EXTRA** Example 12-4. Using GrabCut for background removal\n* Example 13-1. Histogram computation and display\n* Example 13-2. Creating signatures from histograms for EMD; note that this code is the\n* Example 13-3. Template matching\n* Example 14-1. Finding contours based on a trackbar’s location; the contours are\n* Example 14-2. Finding and drawing contours on an input image\n* Example 14-3. Drawing labeled connected components\n* Example 14-4. Using the shape context distance extractor\n* Example 15-1. Reading out the RGB values of all pixels in one row of a video and\n* Example 15-2. Learning a background model to identify foreground pixels\n* Example 15-3. Computing the on and off-diagonal elements of a variance/covariance model\n* Example 15-4. Codebook algorithm implementation\n* Example 15-5. Cleanup using connected components\n* **EXTRA** Example 15-6, using OpenCV's background subtractor class.  Modified by Gary Bradski, 6/4/2017\n* Example 16-1. Pyramid L-K optical flow\n* **EXTRA** Example 16-2. 2D Feature detectors and 2D Extra Features framework\n* Example 17-1. Kalman filter example code\n* Example 17-2. Farneback optical flow example code\n* Example 18-1. Reading a chessboard’s width and height, reading them and calibrating \n* **EXTRA** Example 18-1. From disk. Reading a chessboard’s width and height, reading them and calibrating \n* Example 19-1. Bird’s - eye view\n* Example 19-2. Computing the fundamental matrix using RANSAC\n* Example 19-3. Stereo calibration, rectification, and correspondence\n* Example 19-4. Two-dimensional line fitting\n* Example 20-01. Using K-means\n* Example 20-02. Using the Mahalanobis distance for classification\n* Example 21-1. Creating and training a decision tree\n* Example 22-1. Detecting and drawing faces\n\n### IMAGES:\n\n* box.png\n* box_in_scene.png\n* checkerboard9x6.png\n* example_16-01-imgA.png\n* example_16-01-imgB.png\n* faces.png\n* BlueCup.jpg\n* HandIndoorColor.jpg\n* HandOutdoorColor.jpg\n* HandOutdoorSunColor.jpg\n* adrian.jpg\n* faceScene.jpg\n* faceTemplate.jpg\n* fruits.jpg\n* stuff.jpg\n\n### MOVIES:\n\n* test.avi\n* tree.avi\n\n### CLASSIFIERS:\n\n* haarcascade_frontalcatface.xml           #Cat faces!\n* haarcascade_frontalcatface_extended.xml\n* haarcascade_frontalface_alt.xml\n\n### DIRECTORIES:\n\n* birdseye     -- where the images are of checkerboards on the floor\n* build        -- you will make and build things in this directory\n* calibration  -- checkerboard images to calibrate on\n* muchroom     -- machine learning database\n* shape_sample -- silhoette shapes to recognize\n* stereoData   -- left, right image pairs of checkboards to calibrate and view on\n\n\n## LINKS:\nClick the Download Zip button to the right to download example code.\n\nVisit the catalog page [here](http:*shop.oreilly.com/product/0636920044765.do).\n\nSee an error? Report it [here](http:*oreilly.com/catalog/errata.csp?isbn=0636920044765), or simply fork and send us a pull request\n"
        },
        {
          "name": "adrian.jpg",
          "type": "blob",
          "size": 185.1787109375,
          "content": null
        },
        {
          "name": "birdseye",
          "type": "tree",
          "content": null
        },
        {
          "name": "box.png",
          "type": "blob",
          "size": 49.5390625,
          "content": null
        },
        {
          "name": "box_in_scene.png",
          "type": "blob",
          "size": 119.619140625,
          "content": null
        },
        {
          "name": "calibration",
          "type": "tree",
          "content": null
        },
        {
          "name": "checkerboard9x6.png",
          "type": "blob",
          "size": 21.7333984375,
          "content": null
        },
        {
          "name": "example_02-01.cpp",
          "type": "blob",
          "size": 0.6767578125,
          "content": "//Example 2-1. A simple OpenCV program that loads an image from disk and displays it\n//on the screen\n#include <opencv2/opencv.hpp>\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"A simple OpenCV program that loads and displays an image from disk\\n\"\n\t<< argv[0] <<\" <path/filename>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../fruits.jpg\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\t\t\n\n  cv::Mat img = cv::imread( argv[1], -1 );\n\n  if( img.empty() ) return -1;\n\n  cv::namedWindow( \"Example 2-1\", cv::WINDOW_AUTOSIZE );\n  cv::imshow( \"Example 2-1\", img );\n  cv::waitKey( 0 );\n  cv::destroyWindow( \"Example 2-1\" );\n\n  return 0;\n}\n"
        },
        {
          "name": "example_02-02.cpp",
          "type": "blob",
          "size": 0.6474609375,
          "content": "// Example 2-2. Same as Example 2-1 but employing the “using namespace” directive\n\n#include \"opencv2/highgui/highgui.hpp\"\n#include <iostream>\n\nusing namespace cv;\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"2.2: Like 2.1, but 'using namespace cv: \\n\"\n\t<< argv[0] <<\" <path/image>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../fruits.jpg\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  Mat img = imread( argv[1], -1 );\n\n  if( img.empty() ) return -1;\n\n  namedWindow( \"Example 2-2\", cv::WINDOW_AUTOSIZE );\n\n  imshow( \"Example 2-2\", img );\n\n  waitKey( 0 );\n\n  destroyWindow( \"Example 2-2\" );\n}\n"
        },
        {
          "name": "example_02-03.cpp",
          "type": "blob",
          "size": 1.0517578125,
          "content": "// Example 2-3. A simple OpenCV program for playing a video file from disk\n\n#include \"opencv2/highgui/highgui.hpp\"\n#include \"opencv2/imgproc/imgproc.hpp\"\n#include <iostream>\n\nusing namespace std;\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"2-03: play video from disk \\n\"\n\t<< argv[0] <<\" <path/video>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../tree.avi\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  cv::namedWindow( \"Example 2-3\", cv::WINDOW_AUTOSIZE );\n\n  cv::VideoCapture cap;\n\n  cap.open( string(argv[1]) );\n      cout <<\"Opened file: \" <<argv[1] <<endl;\n\n  cv::Mat frame;\n\n  for(;;) {\n\n    cap >> frame;\n\n    if( frame.empty() ) break; // Ran out of film\n\n    cv::imshow( \"Example 2-3\", frame );\n\n    if( (char)cv::waitKey(33) >= 0 ) break;\n\n//    int c = cv::waitKey(33);\n//    for(int i=0;i<32;i++) {\n//      cout <<((c&(0x1<<(31-i)))?1:0);\n//    }\n//      cout <<endl;\n//      cout <<\"Break key: '\" <<(int)c <<\"'\"<<endl;\n//    if( (signed char)c >= 0 ) {\n//      break;\n//    }\n\n  }\n\n  return 0;\n\n}\n"
        },
        {
          "name": "example_02-04.cpp",
          "type": "blob",
          "size": 1.912109375,
          "content": "//Example 2-4. Adding a trackbar slider to the basic viewer window for moving around\n//within the video file\n\n#include \"opencv2/highgui/highgui.hpp\"\n#include \"opencv2/imgproc/imgproc.hpp\"\n#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint g_slider_position = 0;\nint g_run = 1, g_dontset = 0; //start out in single step mode\ncv::VideoCapture g_cap;\n\nvoid onTrackbarSlide( int pos, void *) {\n\n  g_cap.set( CV_CAP_PROP_POS_FRAMES, pos );\n\n  if( !g_dontset ) g_run = 1;\n\n  g_dontset = 0;\n\n}\n\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"2-04: Addeing a trackbar to a basic viewer for moving w/in the video file \\n\"\n\t<< argv[0] <<\" <path/video>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../tree.avi\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  cv::namedWindow( \"Example 2-4\", cv::WINDOW_AUTOSIZE );\n\n  g_cap.open( string(argv[1]) );\n\n  int frames = (int) g_cap.get( CV_CAP_PROP_FRAME_COUNT  );\n  int tmpw   = (int) g_cap.get( CV_CAP_PROP_FRAME_WIDTH  );\n  int tmph   = (int) g_cap.get( CV_CAP_PROP_FRAME_HEIGHT );\n\n  cout << \"Video has \" << frames << \" frames of dimensions(\"\n       << tmpw << \", \" << tmph << \").\" << endl;\n\n  cv::createTrackbar(\n    \"Position\",\n    \"Example 2-4\",\n    &g_slider_position,\n    frames,\n    onTrackbarSlide\n  );\n  cv::Mat frame;\n\n  for(;;) {\n\n    if( g_run != 0 ) {\n      g_cap >> frame;\n      if(frame.empty()) break;\n      int current_pos = (int)g_cap.get( CV_CAP_PROP_POS_FRAMES );\n      g_dontset = 1;\n\n      cv::setTrackbarPos(\"Position\", \"Example 2-4\", current_pos);\n      cv::imshow( \"Example 2-4\", frame );\n      g_run-=1;\n    }\n\n    char c = (char) cv::waitKey(10);\n\n    if( c == 's' ) { // single step\n      g_run = 1;\n      cout << \"Single step, run = \" << g_run << endl;\n    }\n\n    if( c == 'r' ) { // run mode\n      g_run = -1;\n      cout << \"Run mode, run = \" << g_run <<endl;\n    }\n\n    if( c == 27 ) break;\n  }\n\n  return(0);\n\n}\n\n\n"
        },
        {
          "name": "example_02-05.cpp",
          "type": "blob",
          "size": 1.2548828125,
          "content": "// Example 2-5. Loading and then smoothing an image before it is displayed on the screen\n\n#include <opencv2/opencv.hpp>\n\n\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"2-05: load and smooth an image before displaying \\n\"\n\t<< argv[0] <<\" <path/video>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../tree.avi\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  // Load an image specified on the command line.\n  //\n  cv::Mat image = cv::imread(argv[1],-1);\n\n  // Create some windows to show the input\n  // and output images in.\n  //\n  cv::namedWindow( \"Example 2-5-in\", cv::WINDOW_AUTOSIZE );\n  cv::namedWindow( \"Example 2-5-out\", cv::WINDOW_AUTOSIZE );\n\n  // Create a window to show our input image\n  //\n  cv::imshow( \"Example 2-5-in\", image );\n\n  // Create an image to hold the smoothed output\n  //\n  cv::Mat out;\n\n  // Do the smoothing\n  // ( Note: Could use GaussianBlur(), blur(), medianBlur() or\n  // bilateralFilter(). )\n  //\n  cv::GaussianBlur( image, out, cv::Size(5,5), 3, 3);\n  cv::GaussianBlur( out, out, cv::Size(5,5), 3, 3);\n\n  // Show the smoothed image in the output window\n  //\n  cv::imshow( \"Example 2-5-out\", out );\n\n  // Wait for the user to hit a key, windows will self destruct\n  //\n  cv::waitKey( 0 );\n\n}\n"
        },
        {
          "name": "example_02-06.cpp",
          "type": "blob",
          "size": 0.8095703125,
          "content": "// Example 2-6. Using cv::pyrDown() to create a new image that is half the width and\n// height of the input image\n#include <opencv2/opencv.hpp>\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"2-06: AUsing cv::pyrDown() to create a new image that is half the width and\"\n    << \"      height of the input image\\n\"\n\t<< argv[0] <<\" <path/image>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../faces.png\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  cv::Mat img1,img2;\n\n  cv::namedWindow( \"Example 2-6-in\", cv::WINDOW_AUTOSIZE );\n  cv::namedWindow( \"Example 2-6-out\", cv::WINDOW_AUTOSIZE );\n\n  img1 = cv::imread( argv[1] );\n\n  cv::imshow( \"Example 2-6-in\", img1 );\n  cv::pyrDown( img1, img2);\n\n  cv::imshow( \"Example 2-6-out\", img2 );\n  cv::waitKey(0);\n\n  return 0;\n\n};\n"
        },
        {
          "name": "example_02-07.cpp",
          "type": "blob",
          "size": 0.875,
          "content": "// Example 2-7. The Canny edge detector writes its output to a single-channel (grayscale) image\n// 2\n#include <opencv2/opencv.hpp>\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"\\nExample 2-7. The Canny edge detector writes its output to a single-channel (grayscale) image\"\n    << \"\\nCall:\\n\"  \n\t<< argv[0] <<\" <path/image>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../fruits.jpg\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  cv::Mat img_rgb, img_gry, img_cny;\n\n  cv::namedWindow( \"Example Gray\", cv::WINDOW_AUTOSIZE );\n  cv::namedWindow( \"Example Canny\", cv::WINDOW_AUTOSIZE );\n\n  img_rgb = cv::imread( argv[1] );\n\n  cv::cvtColor( img_rgb, img_gry, cv::COLOR_BGR2GRAY);\n  cv::imshow( \"Example Gray\", img_gry );\n\n  cv::Canny( img_gry, img_cny, 10, 100, 3, true );\n  cv::imshow( \"Example Canny\", img_cny );\n\n  cv::waitKey(0);\n\n}\n"
        },
        {
          "name": "example_02-08.cpp",
          "type": "blob",
          "size": 1.025390625,
          "content": "// Example 2-8. Combining the pyramid down operator (twice) and the Canny\n// subroutine in a simple image pipeline\n//2\n#include <opencv2/opencv.hpp>\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"\\nExample 2-8. Combining the pyramid down operator (twice) and the Canny\"\n    << \"\\n             subroutine in a simple image pipeline\"\n    << \"\\nCall:\\n\"  \n\t<< argv[0] <<\" <path/image>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../fruits.jpg\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n  cv::Mat img_rgb, img_gry, img_cny, img_pyr, img_pyr2;\n\n  cv::namedWindow( \"Example Gray\", cv::WINDOW_AUTOSIZE );\n  cv::namedWindow( \"Example Canny\", cv::WINDOW_AUTOSIZE );\n\n  img_rgb = cv::imread( argv[1] );\n\n  cv::cvtColor( img_rgb, img_gry, cv::COLOR_BGR2GRAY);\n\n  cv::pyrDown( img_gry, img_pyr );\n  cv::pyrDown( img_pyr, img_pyr2 );\n\n  cv::Canny( img_pyr2, img_cny, 10, 100, 3, true );\n  \n  cv::imshow( \"Example Gray\", img_gry );\n\n  cv::imshow( \"Example Canny\", img_cny );\n\n  cv::waitKey(0);\n\n}\n"
        },
        {
          "name": "example_02-09.cpp",
          "type": "blob",
          "size": 1.7978515625,
          "content": "// Example 2-9. Getting and setting pixels in Example 2-8\n\n#include <opencv2/opencv.hpp>\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"\\nExample 2-9. Getting and setting pixels in Example 2-8\"\n    << \"\\nCall:\\n\"  \n\t<< argv[0] <<\" <path/image>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../fruits.jpg\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n\n  cv::Mat img_rgb, img_gry, img_cny, img_pyr, img_pyr2;\n\n  cv::namedWindow( \"Example Gray\", cv::WINDOW_AUTOSIZE );\n  cv::namedWindow( \"Example Canny\", cv::WINDOW_AUTOSIZE );\n\n  img_rgb = cv::imread( argv[1] );\n\n  cv::cvtColor( img_rgb, img_gry, cv::COLOR_BGR2GRAY);\n\n  cv::pyrDown( img_gry, img_pyr );\n  cv::pyrDown( img_pyr, img_pyr2 );\n\n  cv::Canny( img_pyr2, img_cny, 10, 100, 3, true );\n\n  // ----------------------------------------------------\n  // Start new code for example 2-9\n  //\n\n  int x = 16, y = 32;\n  cv::Vec3b intensity = img_rgb.at< cv::Vec3b >(y, x);\n\n  // ( Note: We could write img_rgb.at< cv::Vec3b >(x,y)[0] )\n  //\n  uchar blue  = intensity[0];\n  uchar green = intensity[1];\n  uchar red   = intensity[2];\n\n  std::cout << \"At (x,y) = (\" << x << \", \" << y <<\n    \"): (blue, green, red) = (\" <<\n    (unsigned int)  blue <<\n    \", \" << (unsigned int)green << \", \" <<\n    (unsigned int)  red << \")\" << std::endl;\n\n  std::cout << \"Gray pixel there is: \" <<\n    (unsigned int)  img_gry.at<uchar>(y, x) << std::endl;\n\n  x /= 4; y /= 4;\n\n  std::cout << \"Pyramid2 pixel there is: \" <<\n    (unsigned int)img_pyr2.at<uchar>(y, x) << std::endl;\n\n  img_cny.at<uchar>(x, y) = 128; // Set the Canny pixel there to 128\n\n  //\n  // End new code for example 2-9\n  // ----------------------------------------------------\n\n  cv::imshow( \"Example Gray\", img_gry );\n  cv::imshow( \"Example Canny\", img_cny );\n\n  cv::waitKey(0);\n\n}\n"
        },
        {
          "name": "example_02-10.cpp",
          "type": "blob",
          "size": 0.9697265625,
          "content": "// Example 2-10. The same object can load videos from a camera or a file\n// \n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"\\nxample 2-10. The same object can load videos from a camera or a file\"\n    << \"\\nCall:\\n\"  \n\t<< argv[0] <<\" [path/image]\\n\"\n\t<< \"\\nor, read from camera:\\n\"\n\t<< argv[0]\n\t<< \"\\nFor example:\\n\"\n\t<< argv[0] << \" ../tree.avi\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\thelp(argv);\n\n\n\n  cv::namedWindow( \"Example 2-10\", cv::WINDOW_AUTOSIZE );\n  cv::VideoCapture cap;\n\n  if (argc==1) {\n    cap.open(0); // open the first camera\n  } else {\n    cap.open(argv[1]);\n  }\n\n  if( !cap.isOpened() ) { // check if we succeeded\n    std::cerr << \"Couldn't open capture.\" << std::endl;\n    return -1;\n  }\n\n  cv::Mat frame;\n\n  for(;;) {\n\n    cap >> frame;\n\n    if( frame.empty() ) break; // Ran out of film\n\n    cv::imshow( \"Example 2-10\", frame );\n\n    if( (char) cv::waitKey(33) >= 0 ) break;\n\n  }\n\n  return 0;\n\n}\n"
        },
        {
          "name": "example_02-11.cpp",
          "type": "blob",
          "size": 1.732421875,
          "content": "// Example 2-11. A complete program to read in a color video and write out the log-polar-\n// transformed video\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\n\nvoid help(char** argv ) {\n\tstd::cout << \"\\n\"\n\t<< \"Read in a video, write out a log polar of it\\n\"\n\t<< argv[0] <<\" <path/video> <paht/video_output>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../tree.avi ../vout.avi\\n\"\n\t<< \"\\nThen read it with:\\n ./example_02-10 ../vout.avi\\n\"\n\t<< std::endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 3) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\t\t\n\n  cv::namedWindow( \"Example 2-11\", cv::WINDOW_AUTOSIZE );\n  cv::namedWindow( \"Log_Polar\", cv::WINDOW_AUTOSIZE );\n\n  // ( Note: could capture from a camera by giving a camera id as an int.)\n  //\n\n  cv::VideoCapture capture( argv[1] );\n  double fps = capture.get( CV_CAP_PROP_FPS );\n  cv::Size size(\n    (int)capture.get( CV_CAP_PROP_FRAME_WIDTH ),\n    (int)capture.get( CV_CAP_PROP_FRAME_HEIGHT )\n  );\n\n  cv::VideoWriter writer;\n  writer.open( argv[2], CV_FOURCC('M','J','P','G'), fps, size );\n\n  cv::Mat logpolar_frame, bgr_frame;\n\n  for(;;) {\n\n    capture >> bgr_frame;\n    if( bgr_frame.empty() ) break; // end if done\n\n    cv::imshow( \"Example 2-11\", bgr_frame );\n\n    cv::logPolar(\n      bgr_frame, // Input color frame\n      logpolar_frame, // Output log-polar frame\n      cv::Point2f( // Centerpoint for log-polar transformation\n        bgr_frame.cols/2, // x\n        bgr_frame.rows/2 // y\n      ),\n      40, // Magnitude (scale parameter)\n      CV_WARP_FILL_OUTLIERS // Fill outliers with 'zero'\n    );\n\n    cv::imshow( \"Log_Polar\", logpolar_frame );\n\n    writer << logpolar_frame;\n\n    char c = cv::waitKey(10);\n\n    if( c == 27 ) break; // allow the user to break out\n\n  }\n\n  writer.release();\n  capture.release();\n\n}\n"
        },
        {
          "name": "example_04-01.cpp",
          "type": "blob",
          "size": 1.025390625,
          "content": "// Example 4-1. Summation of a multidimensional array, done plane by plane\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\n// Summation of a multidimensional array, done plane by plane\n//\nint main( int argc, char** argv ) {\n  \n  cout << \"\\nExample 4-1. Summation of a multidimensional array, done plane by plane\"\n       << \"\\nCall:\\n\"\n       << argv[0] << endl;\n\n  const int n_mat_size = 5;\n  const int n_mat_sz[] = { n_mat_size, n_mat_size, n_mat_size };\n  cv::Mat n_mat( 3, n_mat_sz, CV_32FC1 );\n\n  cv::RNG rng;\n  rng.fill( n_mat, cv::RNG::UNIFORM, 0.f, 1.f );\n\n  const cv::Mat* arrays[] = { &n_mat, 0 };\n  cv::Mat my_planes[1];\n  cv::NAryMatIterator it( arrays, my_planes );\n\n  // On each iteration, it.planes[i] will be the current plane of the\n  // i-th array from 'arrays'.\n  //\n  float s = 0.f; // Total sum over all planes\n  int   n = 0;   // Total number of planes\n  for (int p = 0; p < it.nplanes; p++, ++it) {\n    s += cv::sum(it.planes[0])[0];\n    n++;\n  }\n\n  cout <<\"Total across entire volume: \" <<s <<endl;\n\n}\n"
        },
        {
          "name": "example_04-02.cpp",
          "type": "blob",
          "size": 1.0546875,
          "content": "// Example 4-2. Summation of two arrays using the N-ary operator\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\n// Summation of a multidimensional array, done plane by plane\n//\nint main( int argc, char** argv ) {\n\n  cout << \"\\nExample 4-2. Summation of two arrays using the N-ary operator\"\n       << \"\\nCall:\\n\"\n       << argv[0] << endl;\n  \n  const int n_mat_size = 5;\n  const int n_mat_sz[] = { n_mat_size, n_mat_size, n_mat_size };\n\n  cv::Mat n_mat0( 3, n_mat_sz, CV_32FC1 );\n  cv::Mat n_mat1( 3, n_mat_sz, CV_32FC1 );\n\n  cv::RNG rng;\n  rng.fill( n_mat0, cv::RNG::UNIFORM, 0.f, 1.f );\n  rng.fill( n_mat1, cv::RNG::UNIFORM, 0.f, 1.f );\n\n  const cv::Mat* arrays[] = { &n_mat0, &n_mat1, 0 };\n\n  cv::Mat my_planes[2];\n  cv::NAryMatIterator it( arrays, my_planes );\n\n  float s = 0.f; // Total sum over all planes in both arrays\n  int   n = 0;   // Total number of planes\n  for( int p = 0; p < it.nplanes; p++, ++it ) {\n    s += cv::sum(it.planes[0])[0];\n    s += cv::sum(it.planes[1])[0];\n    n++;\n  }\n\n  cout <<\"Total across both volumes: \" <<s <<endl;\n}\n"
        },
        {
          "name": "example_04-03.cpp",
          "type": "blob",
          "size": 1.021484375,
          "content": "//Example 4-3. Printing all of the nonzero elements of a sparse array\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\n// Printing all of the nonzero elements of a sparse array\n//\nusing namespace std;\n\n// Summation of a multidimensional array, done plane by plane\n//\nint main( int argc, char** argv ) {\n  \n  cout << \"\\nExample 4-3. Printing all of the nonzero elements of a sparse array\"\n       << \"\\nCall:\\n\" << argv[0] << endl;\n\n  // Create a 10x10 sparse matrix with a few nonzero elements\n  //\n  int size[] = {10,10};\n  cv::SparseMat sm( 2, size, CV_32F );\n  for( int i=0; i<10; i++ ) { // Fill the array\n    int idx[2];\n    idx[0] = size[0] * rand();\n    idx[1] = size[1] * rand();\n    sm.ref<float>( idx ) += 1.0f;\n  }\n\n  // Print out the nonzero elements\n  //\n  cv::SparseMatConstIterator_<float> it = sm.begin<float>();\n  cv::SparseMatConstIterator_<float> it_end = sm.end<float>();\n\n  for(; it != it_end; ++it) {\n    const cv::SparseMat::Node* node = it.node();\n    printf(\" (%3d,%3d) %f\\n\", node->idx[0], node->idx[1], *it );\n  }\n\n}\n"
        },
        {
          "name": "example_04-04.cpp",
          "type": "blob",
          "size": 1.66796875,
          "content": "//Example 4-4. A better way to print a matrix\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\n// A better way to print a sparse matrix\n//\ntemplate <class T> void print_matrix( const cv::SparseMat_<T>* sm ) {\n  cv::SparseMatConstIterator_<T> it = sm->begin();\n  cv::SparseMatConstIterator_<T> it_end = sm->end();\n\n  for(; it != it_end; ++it) {\n    const typename cv::SparseMat_<T>::Node* node = it.node();\n    cout <<\"( \" <<node->idx[0] <<\", \" <<node->idx[1]\n         <<\" ) = \" <<*it <<endl;\n  }\n}\n\nvoid calling_function1( void ) {\n\n  int ndim = 2;\n  int size[] = {4,4};\n\n  cv::SparseMat_<float> sm( ndim, size );\n\n  // Create a sparse matrix with a few nonzero elements\n  //\n  for( int i=0; i<4; i++ ) { // Fill the array\n    int idx[2];\n    idx[0] = size[0] * rand();\n    idx[1] = size[1] * rand();\n    sm.ref( idx ) += 1.0f;\n  }\n\n  print_matrix<float>( &sm );\n}\n\nvoid calling_function2( void ) {\n\n  int ndim = 2;\n  int size[] = {4,4};\n\n  cv::SparseMat sm( ndim, size, CV_32F );\n\n  // Create a sparse matrix with a few nonzero elements\n  //\n  for( int i=0; i<4; i++ ) { // Fill the array\n    int idx[2];\n    idx[0] = size[0] * rand();\n    idx[1] = size[1] * rand();\n    sm.ref<float>( idx ) += 1.0f;\n  }\n\n  print_matrix<float>( (cv::SparseMat_<float>*) &sm );\n\n}\n\nvoid help(char** argv) {\n  cout << \"\\nExample 4-4, a better way to print out a sparse matrix\"\n       << \"\\n             Demonstrates printing of two different sparse matrices\"\n       << \"\\nCall:\"\n       << argv[0]\n       << endl;\n}\n\nint main( int argc, char** argv ) {\n  help(argv);\n  cout <<\"Case 1:\" <<endl;\n  calling_function1();\n  cout <<endl;\n\n  cout <<\"Case 2:\" <<endl;\n  calling_function2();\n  cout <<endl;\n\n}\n\n"
        },
        {
          "name": "example_05-01.cpp",
          "type": "blob",
          "size": 2.6298828125,
          "content": "// Example 5-1. Complete program to alpha-blend the ROI starting at (0,0) in src2 with the ROI starting at (x,y) in src1\n// alphablend <imageA> <image B> <x> <y> <<alpha> <beta>\n//\n#include <opencv2/opencv.hpp>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nvoid help(const char **argv) {\n  cout << \"\\n\\n\"\n   << \"This program alpha blends the first image onto the other \\n\"\n   << \"alpha is the blending of the first image and beta onto the second\\n\"\n   << \"Call:\\n\"\n   << argv[0] << \" <path/blend_this_img> <path/onto_this_img> <where_to_blend_x> <where_to_blend_y> <alpha> <beta>\\n\\n\"\n   << \"Example:\\n\"\n   << \" ./example_05-01 ../faceTemplate.jpg ../faces.png 230 155 0.8 0.2\\n\"\n   << endl;\n}\n\n\n\nint main( int argc, const char** argv )\n{\n\thelp(argv);\n\tif(argc != 7) {\n\t\tcout << \"ERROR: Wrong # of parameters (7), you had \" << argc  << \"\\n\" << endl;\n\t\treturn -1;\n\t}\n\n\n  // Using the first two arguments, open up the image to be copied onto\n  // (src1), and the image that will be copied from (src2).\n  //\n  cv::Mat src1 = cv::imread(argv[1],1);\n  cv::Mat src2 = cv::imread(argv[2],1);\n\n\tint from_w = src1.size().width;\n\tint from_h = src1.size().height;\n\tint to_w = src2.size().width;\n\tint to_h = src2.size().height;\n\n\n  if( argc==7 && !src1.empty() && !src2.empty() ) {\n\n    // Four more arguments tell where in src1 to paste the chunk taken from\n    // src2. Note that the width and height also specify what portion of\n    // src2 to actually use.\n    //\n    int x = atoi(argv[3]);\n    int y = atoi(argv[4]);\n\n\t// Make sure we don't exceed bounds:\n\tif((x < 0) || (y < 0) || (x > to_w - 1) || (y > to_h - 1) || (x+from_w > to_w - 1) || (y+from_h > to_h)) {\n\t\tcout << \"\\nError, at (x,y) (\" << x << \", \" << y <<\"), your input image [w,h] [\" << from_w << \", \" \n\t\t<< from_h << \"] doesn't fit within the blend to image [w,h] [\" << to_w << \", \" << to_h  <<\"]\\n\" << endl;\n\t\treturn -1;\n\t}\n\n    // Two more arguments set the blending coefficients.\n    //\n    double alpha = (double)atof(argv[5]);\n    double beta  = (double)atof(argv[6]);\n\n    cv::Mat roi1( src1, cv::Rect(0,0,from_w - 1,from_h - 1) ); //Just take the whole thing\n    cv::Mat roi2( src2, cv::Rect(x,y,from_w - 1, from_h - 1) );\n\n    // Blend together the image src2 onto the image src1\n    // at the specified location.\n    //\n    cv::addWeighted( roi1, alpha, roi2, beta, 0.0, roi2 );\n\n    // Create a window to shoow the result and show it.\n    //\n    cv::namedWindow( \"Alpha Blend\", 1 );\n    cv::imshow( \"Alpha Blend\", src2 );\n\n    // Leave the window up and runnnig until the user hits a key\n    //\n    cv::waitKey( 0 );\n\n  }\n\n  return 0;\n\n}\n"
        },
        {
          "name": "example_07-01.cpp",
          "type": "blob",
          "size": 0.7314453125,
          "content": "// Example 7-1. Using the default random number generator to generate a pair of integers\n// and a pair of floating-point numbers\n\n//#include <opencv2/opencv.hpp>\n#include <opencv2/core/core.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char** argv) {\n  cout << \"\\nExample 7-1. Using the default random number generator\"\n       << \"\\nto generate a pair of integers and a pair of\"\n       << \"\\n floating-point numbers\"\n       << \"\\n\\nCall:\\n\" << argv[0] << \"\\n\" << endl;\n\n  cv::RNG rng = cv::theRNG();\n  cout << \"An integer: \"      << (int)rng   << endl;\n  cout << \"Another integer: \" << int(rng)   << endl;\n  cout << \"A float: \"         << (float)rng << endl;\n  cout << \"Another float: \"   << float(rng) << endl;\n\n  return 0;\n\n}\n"
        },
        {
          "name": "example_08-01.cpp",
          "type": "blob",
          "size": 0.9501953125,
          "content": "// Example 8-1. Unpacking a four-character code to identify a video codec\n//\n//#include <opencv2/opencv.hpp>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <iostream>\n\nusing namespace std;\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t<< \"Example 8-1. Unpacking a four-character code to identify a video codec\"\n  << \"\\nCall:\\n\"\n\t<< argv[0] <<\" <path/video>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" ../tree.avi\\n\"\n\t<< endl;\n}\n\t\n\nint main( int argc, char** argv ) {\n\t\n\tif (argc != 2) {\n\t\thelp(argv);\n\t\treturn 0;\n\t}\n\n\n  cv::VideoCapture cap( argv[1] );\n\n  unsigned f = (unsigned)cap.get( cv::CAP_PROP_FOURCC );\n\n  char fourcc[] = {\n    (char) f, // First character is lowest bits\n    (char)(f >> 8), // Next character is bits 8-15\n    (char)(f >> 16), // Next character is bits 16-23\n    (char)(f >> 24), // Last character is bits 24-31\n    '\\0' // and don't forget to terminate\n  };\n\n  cout <<\"FourCC for this video was: \" <<fourcc <<endl;\n\n\n\n\n}\n"
        },
        {
          "name": "example_08-02.cpp",
          "type": "blob",
          "size": 1.0849609375,
          "content": "// Example 8-2. Using cv::FileStorage to create a .yml data file\n//\n#include <opencv2/opencv.hpp>\n#include <time.h>\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char** argv) {\n  \n  cout << \"\\nExample 8-2. Using cv::FileStorage to create a .yml data file\\n\"\n      << argv[0] \n      << \"\\n\\n   output: test.yml\\n\\n\" << endl;\n  \n  cv::FileStorage fs(\"test.yml\", cv::FileStorage::WRITE);\n\n  fs << \"frameCount\" << 5;\n\n  time_t rawtime; time(&rawtime);\n\n  fs << \"calibrationDate\" << asctime(localtime(&rawtime));\n\n  cv::Mat cameraMatrix = (\n    cv::Mat_<double>(3,3) << 1000, 0, 320, 0, 1000, 240, 0, 0, 1\n  );\n  cv::Mat distCoeffs = (\n    cv::Mat_<double>(5,1) << 0.1, 0.01, -0.001, 0, 0\n  );\n\n  fs << \"cameraMatrix\" << cameraMatrix << \"distCoeffs\" << distCoeffs;\n\n  fs << \"features\" << \"[\";\n  for( int i = 0; i < 3; i++ ) {\n    int x = rand() % 640;\n    int y = rand() % 480;\n    uchar lbp = rand() % 256;\n    fs << \"{:\" << \"x\" << x << \"y\" << y << \"lbp\" << \"[:\";\n    for( int j = 0; j < 8; j++ )\n      fs << ((lbp >> j) & 1);\n    fs << \"]\" << \"}\";\n  }\n  fs << \"]\";\n\n  fs.release();\n\n  return 0;\n\n}\n"
        },
        {
          "name": "example_08-03.cpp",
          "type": "blob",
          "size": 1.4931640625,
          "content": "// Example 8-3. Using cv::FileStorage to read a .yml file\n//\n#include <opencv2/opencv.hpp>\n\nusing namespace std;\n\nint main(int argc, char** argv) {\n  cout << \"\\nExample 8-3. Using cv::FileStorage to read a .yml file\"\n       << \"\\nCall:\\n\"\n       << argv[0] << endl;\n  \n  cv::FileStorage fs2(\"test.yml\", cv::FileStorage::READ);\n\n  // first method: use (type) operator on FileNode.\n  //\n  int frameCount = (int)fs2[\"frameCount\"];\n\n  // second method: use cv::FileNode::operator >>\n  //\n  std::string date;\n  fs2[\"calibrationDate\"] >> date;\n\n  cv::Mat cameraMatrix2, distCoeffs2;\n  fs2[\"cameraMatrix\"] >> cameraMatrix2;\n  fs2[\"distCoeffs\"] >> distCoeffs2;\n\n  cout << \"frameCount: \"        << frameCount    << endl\n       << \"calibration date: \"  << date          << endl\n       << \"camera matrix: \"     << cameraMatrix2 << endl\n       << \"distortion coeffs: \" << distCoeffs2   << endl;\n\n  cv::FileNode features = fs2[\"features\"];\n  cv::FileNodeIterator it = features.begin(), it_end = features.end();\n  int idx = 0;\n  std::vector<uchar> lbpval;\n\n  // iterate through a sequence using FileNodeIterator\n  for( ; it != it_end; ++it, idx++ ) {\n\n    cout << \"feature #\" << idx << \": \";\n    cout << \"x=\"   << (int)(*it)[\"x\"]\n         << \", y=\" << (int)(*it)[\"y\"]\n         << \", lbp: (\";\n\n    // ( Note: easily read numerical arrays using FileNode >> std::vector. )\n    //\n    (*it)[\"lbp\"] >> lbpval;\n    for( int i = 0; i < (int)lbpval.size(); i++ )\n      cout << \" \" << (int)lbpval[i];\n    cout << \")\" << endl;\n\n  }\n\n  fs2.release();\n\n}\n"
        },
        {
          "name": "example_09-01.cpp",
          "type": "blob",
          "size": 0.8603515625,
          "content": "// Example 9-1. Creating a window and displaying an image in that window\n//\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\n\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t\t<< \"Create a window and display an image\\nCall:\\n\"\n\t\t<< argv[0] <<\" image\\n\"\n\t\t<< endl;\n}\n\nint main(int argc, char** argv) {\n\t// Document the interface\n\thelp(argv);\n\tif(argc != 2) { cout << \"You need to supply an image path/name\" << endl;; exit(0);}\n\n  // Create a named window with the name of the file\n  //\n  cv::namedWindow( argv[1], 1 );\n\n  // Load the image from the given filename\n  //\n  cv::Mat img = cv::imread( argv[1] );\n\n  // Show the image in the named window\n  //\n  cv::imshow( argv[1], img );\n\n  // Idle until the user hits the Esc key\n  //\n  cv::waitKey(); //Any key will end the program\n\n  // Clean up and don't be piggies\n  //\n  cv::destroyWindow( argv[1] );\n  exit(0);\n}\n"
        },
        {
          "name": "example_09-02.cpp",
          "type": "blob",
          "size": 2.5791015625,
          "content": "// Example 9-2. Toy program for using a mouse to draw boxes on the screen\n#include <opencv2/opencv.hpp>\n\n// Define our callback which we will install for\n// mouse events\n//\nvoid my_mouse_callback(\n\n  int event, int x, int y, int flags, void* param\n);\ncv::Rect box;\nbool drawing_box = false;\n\n\n// A little subroutine to draw a box onto an image\n//\nvoid draw_box( cv::Mat& img, cv::Rect box ) {\n  cv::rectangle(\n    img,\n    box.tl(),\n    box.br(),\n\n    cv::Scalar(0x00,0x00,0xff)    /* red */\n  );\n}\nvoid help(char** argv) {\n  std::cout << \"Example 9-2. Toy program for using a mouse to draw boxes on the screen\"\n     << \"\\nCall:\\n\" << argv[0] <<\n    \"\\n\\nshows how to use a mouse to draw regions in an image. Esc to quit\\n\" << std::endl;\n}\nint main( int argc, char** argv ) {\n  help(argv);\n  box = cv::Rect(-1,-1,0,0);\n  cv::Mat image(200, 200, CV_8UC3), temp;\n  image.copyTo(temp);\n  box   = cv::Rect(-1,-1,0,0);\n  image = cv::Scalar::all(0);\n  cv::namedWindow( \"Box Example\" );\n // Here is the crucial moment where we actually install\n // the callback. Note that we set the value of 'params' to\n // be the image we are working with so that the callback\n // will have the image to edit.\n //\n cv::setMouseCallback(\n   \"Box Example\",\n   my_mouse_callback,\n   (void*)&image\n );\n // The main program loop. Here we copy the working image\n // to the temp image, and if the user is drawing, then\n // put the currently contemplated box onto that temp image.\n // Display the temp image, and wait 15ms for a keystroke,\n // then repeat.\n //\n for(;;) {\n    image.copyTo(temp);\n    if( drawing_box ) draw_box( temp, box );\n    cv::imshow( \"Box Example\", temp );\n    if( cv::waitKey( 15 ) == 27 ) break;\n  }\n  return 0;\n}\n\n// This is our mouse callback. If the user\n// presses the left button, we start a box.\n// When the user releases that button, then we\n// add the box to the current image. When the\n// mouse is dragged (with the button down) we\n// resize the box.\n//\nvoid my_mouse_callback(\nint event, int x, int y, int flags, void* param) \n{\n  cv::Mat& image = *(cv::Mat*) param;\n  switch( event ) {\n    case cv::EVENT_MOUSEMOVE: {\n      if( drawing_box ) {\n        box.width  = x-box.x;\n        box.height = y-box.y;\n      }\n    }\n    break;\n case cv::EVENT_LBUTTONDOWN: {\n      drawing_box = true;\n      box = cv::Rect( x, y, 0, 0 );\n    }\n    break;\n    case cv::EVENT_LBUTTONUP: {\n      drawing_box = false;\n      if( box.width < 0  ) {\n\n        box.x += box.width;\n        box.width *= -1;\n      }\n      if( box.height < 0 ) {\n        box.y += box.height;\n        box.height *= -1;\n      }\n      draw_box( image, box );\n    }\n    break;\n  }\n\n}\n"
        },
        {
          "name": "example_09-03.cpp",
          "type": "blob",
          "size": 1.947265625,
          "content": "//Example 9-3. Using a trackbar to create a “switch” that the user can turn on and off;\n//this program plays a video and uses the switch to create a pause functionality\n//\n// An example program in which the user can draw boxes on the screen.\n//\n#include <opencv2/opencv.hpp>\n#include <iostream>\nusing namespace std;\n//\n// Using a trackbar to create a \"switch\" that the user can turn on and off.\n// We make this value global so everyone can see it.\n//\nint g_switch_value = 1;\nvoid switch_off_function() { cout << \"Pause\\n\"; }; //YOU COULD DO MORE\nvoid switch_on_function()  { cout << \"Run\\n\"; };\n\n// This will be the callback that we give to the trackbar.\n//\nvoid switch_callback( int position, void* ) {\n  if( position == 0 ) {\n    switch_off_function();\n  } else {\n    switch_on_function();\n  }\n}\n\nvoid help(char ** argv) {\n    cout << \"Example 9-3. Using a trackbar to create a “switch” that the user can turn on and off\"\n         << \"\\n this program plays a video and uses the switch to create a pause functionality.\"\n         << \"\\n\\nCall:\\n\" << argv[0] << \" <path/video_file>\"\n\t\t << \"\\n\\nShows putting a pause button in a video; Esc to quit\\n\" << endl;\n}\n\nint main( int argc, char** argv ) {\n  cv::Mat frame; // To hold movie images\n  cv::VideoCapture g_capture;\n  help(argv);\n  if( argc < 2 || !g_capture.open( argv[1] ) ){\n    cout << \"Failed to open \" << argv[1] << \" video file\\n\" << endl;\n    return -1;\n  }\n\n  // Name the main window\n  //\n  cv::namedWindow( \"Example\", 1 );\n\n  // Create the trackbar. We give it a name,\n  // and tell it the name of the parent window.\n  //\n  cv::createTrackbar(\n    \"Switch\",\n    \"Example\",\n    &g_switch_value,\n    1,\n    switch_callback\n  );\n\n  // This will cause OpenCV to idle until\n  // someone hits the Esc key.\n  //\n  for(;;) {\n    if( g_switch_value ) {\n          g_capture >> frame;\n          if( frame.empty() ) break;\n          cv::imshow( \"Example\", frame);\n      }\n      if( cv::waitKey(10)==27 ) break; //esc\n  }\n  return 0;\n\n}\n"
        },
        {
          "name": "example_09-04.cpp",
          "type": "blob",
          "size": 3.2900390625,
          "content": "//Example 9-4. Slightly modified code from the OpenCV documentation that draws a\n//cube every frame; this modified version uses the global variables rotx and roty that are\n//connected to the sliders in Figure 9-6\n// Note: This example needs OpenGL installed on your system. It doesn't build if \n//       the OpenGL libraries cannot be found.\n#include <GL/gl.h>\n#include <GL/glu.h>\n\n#include <opencv2/opencv.hpp>\n#include <opencv2/core/opengl.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint rotx = 55, roty = 40;\n\nvoid on_opengl(void* param) {\n    cv::ogl::Texture2D* backgroundTex = (cv::ogl::Texture2D*)param;\n    glEnable( GL_TEXTURE_2D );\n    backgroundTex->bind();\n    cv::ogl::render(*backgroundTex);\n    glDisable( GL_TEXTURE_2D );\n\n    glMatrixMode( GL_PROJECTION );\n    glLoadIdentity();\n    glMatrixMode( GL_MODELVIEW );\n    glLoadIdentity();\n    glTranslatef(0, 0, -0.5);\n    glRotatef( rotx, 1, 0, 0 );\n    glRotatef( roty, 0, 1, 0 );\n    glRotatef( 0, 0, 0, 1 );\n    glEnable( GL_DEPTH_TEST );\n    glDepthFunc( GL_LESS );\n    static const int coords[6][4][3] = {\n        { { +1, -1, -1 }, { -1, -1, -1 }, { -1, +1, -1 }, { +1, +1, -1 } },\n        { { +1, +1, -1 }, { -1, +1, -1 }, { -1, +1, +1 }, { +1, +1, +1 } },\n        { { +1, -1, +1 }, { +1, -1, -1 }, { +1, +1, -1 }, { +1, +1, +1 } },\n        { { -1, -1, -1 }, { -1, -1, +1 }, { -1, +1, +1 }, { -1, +1, -1 } },\n        { { +1, -1, +1 }, { -1, -1, +1 }, { -1, -1, -1 }, { +1, -1, -1 } },\n        { { -1, -1, +1 }, { +1, -1, +1 }, { +1, +1, +1 }, { -1, +1, +1 } }\n    };\n    for (int i = 0; i < 6; ++i) {\n        glColor3ub( i*20, 100+i*10, i*42 );\n        glBegin( GL_QUADS );\n        for (int j = 0; j < 4; ++j) {\n            glVertex3d(\n                        0.2 * coords[i][j][0],\n                    0.2 * coords[i][j][1],\n                    0.2 * coords[i][j][2]\n                    );\n        }\n        glEnd();\n    }\n}\n\nvoid on_trackbar( int, void* ) {\n    cv::updateWindow( \"Example 9-4\" );\n}\n\nvoid help(char ** argv) {\n\t\n\tcout << \"\\n//Example 9-4. Slightly modified code from the OpenCV documentation that draws a\"\n\t\t<< \"\\n//cube every frame; this modified version uses the global variables rotx and roty that are\"\n\t\t<< \"\\n//connected to the sliders in Figure 9-6\"\n\t\t<< \"\\n// Note: This example needs OpenGL installed on your system. It doesn't build if\" \n\t\t<< \"\\n//       the OpenGL libraries cannot be found.\\n\\/\"\n\t\t<< \"\\nCall: \" << argv[0] << \" <image>\\n\\n\"\n\t\t<< \"\\nHere OpenGL is used to render a cube on top of an image.\\n\"\n        << \"\\nUser can rotate the cube with the sliders\\n\" <<endl;\n}\n\nint main(int argc, char* argv[])\n{\n    if(argc != 2) {\n        help (argv);\n        return -1;\n    }\n\n    cv::Mat img = cv::imread(argv[1]);\n    if( img.empty() ) {\n        cout << \"Cannot load \" << argv[1] << endl;\n        return -1;\n    }\n\n    cv::namedWindow( \"Example 9-4\", CV_WINDOW_OPENGL );\n    cv::resizeWindow(\"Example 9-4\", img.cols, img.rows);\n    cv::createTrackbar( \"X-rotation\", \"Example 9-4\", &rotx, 360, on_trackbar);\n    cv::createTrackbar( \"Y-rotation\", \"Example 9-4\", &roty, 360, on_trackbar);\n\n    cv::ogl::Texture2D backgroundTex(img);\n    cv::setOpenGlDrawCallback(\"Example 9-4\", on_opengl, &backgroundTex);\n    cv::updateWindow(\"Example 9-4\");\n\n    cv::waitKey(0);\n\n    cv::setOpenGlDrawCallback(\"Example 9-4\", 0, 0);\n    cv::destroyAllWindows();\n\n    return 0;\n}\n"
        },
        {
          "name": "example_09-05.cpp",
          "type": "blob",
          "size": 0.8349609375,
          "content": "//Example 9-5. An example program ch4_qt.cpp, which takes a single argument\n//indicating a video file; that video file will be replayed inside of a Qt object that we will\n//define, called QMoviePlayer\n//\n#include <QApplication>\n#include <QLabel>\n#include <QMoviePlayer.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint main( int argc, char* argv[] ) {\n  cout << \"\\n\\nExample 9-5. An example program ch4_qt.cpp, which takes a single argument\"\n       << \"\\nindicating a video file; that video file will be replayed inside of a Qt object\"\n       << \"\\nthat we will define, called QMoviePlayer\"\n       << \"\\nCall:\\n\" << argv[0] << \" <path/movie>\"\n       << \"\\nExample:\\n\" << argv[0] << \" ../tree.avi\\n\" << endl;\n  if(argc != 2)\n    return -1;\n  \n  QApplication app( argc, argv );\n  QMoviePlayer mp;\n  mp.open( argv[1] );\n  mp.show();\n  return app.exec();\n}\n"
        },
        {
          "name": "example_09-06.cpp",
          "type": "blob",
          "size": 0.5390625,
          "content": "//Example 9-6. The QMoviePlayer object header file QMoviePlayer.hpp\n//\n#include \"ui_QMoviePlayer.h\"\n#include <opencv2/opencv.hpp>\n#include <string>\nusing namespace std;\nclass QMoviePlayer : public QWidget {\n  Q_OBJECT;\n  public:\n  QMoviePlayer( QWidget *parent = NULL );\n  virtual ~QMoviePlayer() {;}\n  bool open( string file );\n  private:\n  Ui::QMoviePlayer  ui;\n  cv::VideoCapture m_cap;\n  QImage  m_qt_img;\n  cv::Mat m_cv_img;\n  QTimer* m_timer;\n  void paintEvent( QPaintEvent* q );\n  void _copyImage( void );\n  public slots:\n  void nextFrame();\n};\n"
        },
        {
          "name": "example_09-07.cpp",
          "type": "blob",
          "size": 0.2255859375,
          "content": "//Example 9-7. The QMoviePlayer object source file: QMoviePlayer.cpp\n//\n#include \"QMoviePlayer.hpp\"\n#include <QTimer>\n#include <QPainter>\nQMoviePlayer::QMoviePlayer( QWidget *parent )\n : QWidget( parent )\n{\n  ui.setupUi( this );\n}\n"
        },
        {
          "name": "example_09-08.cpp",
          "type": "blob",
          "size": 0.8115234375,
          "content": "//Example 9-8. An example program which takes a single argument\n//indicating a video file; that video file will be replayed inside of a wxWidgets object that\n//we will define, called WxMoviePlayer\n//\n#include \"wx/wx.h\"\n#include \"WxMoviePlayer.hpp\"\n// Application class, the top level object in wxWidgets\n//\nclass MyApp : public wxApp {\n  public:\n    virtual bool OnInit();\n};\n// Behind the scenes stuff to create a main() function and attach MyApp\n//\nDECLARE_APP( MyApp );\nIMPLEMENT_APP( MyApp );\n// When MyApp is initialized, do these things.\n//\nbool MyApp::OnInit() {\n  wxFrame* frame = new wxFrame( NULL, wxID_ANY, wxT(\"ch4_wx\") );\n  frame->Show( true );\n  WxMoviePlayer* mp = new WxMoviePlayer(\n    frame,\n    wxPoint( -1, -1 ),\n    wxSize( 640, 480 )\n  );\n  mp->open( wxString(argv[1]) );\n  mp->Show( true );\n  return true;\n}\n"
        },
        {
          "name": "example_09-09.cpp",
          "type": "blob",
          "size": 0.7578125,
          "content": "// Example 9-9. The WxMoviePlayer object header file WxMoviePlayer.hpp\n//\n#include \"opencv2/opencv.hpp\"\n#include \"wx/wx.h\"\n#include <string>\n#define TIMER_ID 0\nusing namespace std;\nclass WxMoviePlayer : public wxWindow {\n  public:\n    WxMoviePlayer(\n      wxWindow*      parent,\n      const wxPoint& pos,\n      const wxSize&  size\n    );\n    virtual ~WxMoviePlayer() {};\n    bool open( wxString file );\n  private:\n    cv::VideoCapture m_cap;\n    cv::Mat          m_cv_img;\n    wxImage          m_wx_img;\n    wxBitmap         m_wx_bmp;\n    wxTimer*         m_timer;\n    wxWindow*        m_parent;\n    void _copyImage( void );\n void OnPaint( wxPaintEvent& e );\n    void OnTimer( wxTimerEvent& e );\n    void OnKey(   wxKeyEvent&   e );\n  protected:\n    DECLARE_EVENT_TABLE();\n};\n"
        },
        {
          "name": "example_09-10.cpp",
          "type": "blob",
          "size": 2.7607421875,
          "content": "//Example 9-10. The WxMoviePlayer object source file WxMoviePlayer.cpp\n//\n#include \"WxMoviePlayer.hpp\"\nBEGIN_EVENT_TABLE( WxMoviePlayer, wxWindow )\n  EVT_PAINT( WxMoviePlayer::OnPaint )\n  EVT_TIMER( TIMER_ID, WxMoviePlayer::OnTimer )\n  EVT_CHAR( WxMoviePlayer::OnKey )\nEND_EVENT_TABLE()\n\n// The first thing we do is to set up the callbacks that will be associated with individual\n// events. We do this through macros provided by the wxWidgets framework.\nWxMoviePlayer::WxMoviePlayer(\n  wxWindow*      parent,\n  const wxPoint& pos,\n  const wxSize&  size\n) : wxWindow( parent, -1, pos, size, wxSIMPLE_BORDER ) {\n  m_timer         = NULL;\n  m_parent        = parent;\n}\n\n//We will need to\n//know which frame is the parent when it comes time to close the application in\n//response to the Esc key.\nvoid WxMoviePlayer::OnPaint( wxPaintEvent& event ) {\n\twxPaintDC dc( this );\n\tif( !dc.Ok() ) return;\n\tint x,y,w,h;\n\tdc.BeginDrawing();\n\tdc.GetClippingBox( &x, &y, &w, &h );\n\tdc.DrawBitmap( m_wx_bmp, x, y );\n\tdc.EndDrawing();\n\treturn;\n}\n\n//The WxMoviePlayer::_copyImage() method will get called whenever a new image is\n//read from the cv::VideoCapture object.\nvoid WxMoviePlayer::_copyImage( void ) {\n\tm_wx_bmp = wxBitmap( m_wx_img );\n\tRefresh( FALSE ); // indicate that the object is dirty\n\tUpdate();\n}\n\n//The WxMoviePlayer::open() method also does several important things. The first is\n//to actually open the cv::VideoCapture object, but there is a lot more to be done.\n//Next, an image is read off of the player and is used to create a wxImage object that\n//“points at” the OpenCV cv::Mat image. This is the opposite philosophy to the one\n//we used in the Qt example: in this case, it turns out to be a little more convenient to\n//create the cv::Mat first and have it own the data, and then to create the GUI toolkit’s\n//image object\n\nbool WxMoviePlayer::open( wxString file ) {\n\t\n\tif( !m_cap.open( std::string( file.mb_str() ) )) {\n\treturn false;\n\t}\n\n\t// If we opened the file, set up everything now:\n\t//\n\tm_cap.read( m_cv_img );\n\tm_wx_img = wxImage(\n\tm_cv_img.cols,\n\tm_cv_img.rows,\n\tm_cv_img.data,\n\tTRUE // static data, do not free on delete()\n\t);\n\t_copyImage();\n\tm_timer = new wxTimer( this, TIMER_ID );\n\tm_timer->Start( 1000. / m_cap.get( cv::CAP_PROP_FPS ) );\n\treturn true;\n}\n\n//The following handler doesn’t do too much; primarily it just reads a new frame from the video,\n//converts that frame from BGR to RGB for display, and then calls our WxMovie\n//Player::_copyImage() , which makes the next bitmap for us.\nvoid WxMoviePlayer::OnTimer( wxTimerEvent& event ) {\n\tif( !m_cap.isOpened() ) return;\n\tm_cap.read( m_cv_img );\n\tcv::cvtColor( m_cv_img, m_cv_img, cv::BGR2RGB );\n\t_copyImage();\n}\n\n//Handler for keypresses \nvoid WxMoviePlayer::OnKey( wxKeyEvent& e ) {\n\tif( e.GetKeyCode() == WXK_ESCAPE ) m_parent->Close();\n}\n"
        },
        {
          "name": "example_09-11.cpp",
          "type": "blob",
          "size": 3.666015625,
          "content": "// Example 9-11. An example header file for our custom View class\n//\nclass COpenCVTestView : public CWindowImpl<COpenCVTestView> {\npublic:\n  DECLARE_WND_CLASS(NULL)\n  bool OpenFile(std::string file);\n  void _copyImage();\n  BOOL PreTranslateMessage(MSG* pMsg);\n  BEGIN_MSG_MAP(COpenCVTestView)\n    MESSAGE_HANDLER(WM_ERASEBKGND, OnEraseBkgnd)\n    MESSAGE_HANDLER(WM_PAINT, OnPaint)\n    MESSAGE_HANDLER(WM_TIMER, OnTimer)\n  END_MSG_MAP()\n// Handler prototypes (uncomment arguments if needed):\n//  LRESULT MessageHandler(\n//    UINT    /*uMsg*/,\n//    WPARAM  /*wParam*/,\n//    LPARAM  /*lParam*/,\n//    BOOL&   /*bHandled*/\n//  );\n//  LRESULT CommandHandler(\n//    WORD    /*wNotifyCode*/,\n//    WORD    /*wID*/,\n//    HWND    /*hWndCtl*/,\n//    BOOL&   /*bHandled*/\n//  );\n//  LRESULT NotifyHandler(\n//    int     /*idCtrl*/,\n//    LPNMHDR /*pnmh*/,\n//    BOOL&   /*bHandled*/\n//  );\n  LRESULT OnPaint(\n    UINT    /*uMsg*/,\n    WPARAM  /*wParam*/,\n    LPARAM  /*lParam*/,\n    BOOL&   /*bHandled*/\n  );\n  LRESULT OnTimer(\n    UINT    /*uMsg*/,\n    WPARAM  /*wParam*/,\n   LPARAM  /*lParam*/,\n    BOOL&   /*bHandled*/\n  );\n  LRESULT OnEraseBkgnd(\n    UINT    /*uMsg*/,\n    WPARAM  /*wParam*/,\n    LPARAM  /*lParam*/,\n    BOOL&   /*bHandled*/\n  );\nprivate:\n  cv::VideoCapture m_cap;\n  cv::Mat          m_cv_img;\n  RGBTRIPLE*       m_bitmapBits;\n};\n\nLRESULT CMainFrame::OnFileOpen(\n      WORD /*wNotifyCode*/,\n      WORD /*wID*/,\n      HWND /*hWndCtl*/,\n      BOOL& /*bHandled*/\n  ) {\n  WTL::CFileDialog dlg(TRUE);\n  if (IDOK == dlg.DoModal(m_hWnd)) {\n    m_view.OpenFile(dlg.m_szFileName);\n  }\n  return 0;\n}\n\nbool COpenCVTestView::OpenFile(std::string file) {\n  if( !m_cap.open( file ) ) return false;\n  // If we opened the file, set up everything now:\n  //\n  m_cap.read( m_cv_img );\n  // could create a DIBSection here, but let's just allocate memory for raw bits\n  //\n  m_bitmapBits = new RGBTRIPLE[m_cv_img.cols * m_cv_img.rows];\n  _copyImage();\n  SetTimer(0, 1000.0f / m_cap.get( cv::CAP_PROP_FPS ) );\n  return true;\n}\n\nvoid COpenCVTestView::_copyImage() {\n  // Copy the image data into the bitmap\n  //\n  cv::Mat cv_header_to_qt_image(\n  cv::Size(\n  m_cv_img.cols,\n  m_cv_img.rows\n  ),\n  CV_8UC3,\n  m_bitmapBits\n  );\n  cv::cvtColor( m_cv_img, cv_header_to_qt_image, cv::BGR2RGB );\n}\n\nLRESULT COpenCVTestView::OnPaint(\n  UINT\n  /* uMsg\n  */,\n  WPARAM /* wParam\n  */,\n  LPARAM /* lParam\n  */,\n  BOOL& /* bHandled */\n  ) {\n  CPaintDC dc(m_hWnd);\n  WTL::CRect rect;\n  GetClientRect(&rect);\n  if( m_cap.isOpened() ) {\n  BITMAPINFO bmi = {0};\n  bmi.bmiHeader.biSize = sizeof(bmi.bmiHeader);\n  bmi.bmiHeader.biCompression = BI_RGB;\n  bmi.bmiHeader.biWidth\n  = m_cv_img.cols;\n  // note that bitmaps default to bottom-up, use negative height to\n  // represent top-down\n  //\n  bmi.bmiHeader.biHeight = m_cv_img.rows * -1;\n  bmi.bmiHeader.biPlanes = 1;\n  bmi.bmiHeader.biBitCount = 24;\n  dc.StretchDIBits(\n  0,\n  rect.Width(),\n  0,\n  bmi.bmiHeader.biWidth,\n  m_bitmapBits,\n  &bmi,\n  DIB_RGB_COLORS,\n  SRCCOPY\n  // 32 if you use RGBQUADs for the bits\n  0,\n  rect.Height(),\n  0,\n  abs(bmi.bmiHeader.biHeight),\n  Working with Windows\n  |\n  245);\n  } else {\n  dc.FillRect(rect, COLOR_WINDOW);\n  }\n  return 0;\n}\n\nRESULT COpenCVTestView::OnTimer(\n  UINT\n  /* uMsg\n  */,\n  WPARAM /* wParam\n  */,\n  LPARAM /* lParam\n  */,\n  BOOL& /* bHandled */\n  ) {\n  // Nothing to do if capture object is not open\n  //\n  if( !m_cap.isOpened() ) return 0;\n  m_cap.read( m_cv_img );\n  _copyImage();\n  Invalidate();\n  return 0;\n }\n\nLRESULT COpenCVTestView::OnEraseBkgnd(\n  UINT\n  /* uMsg\n  */,\n  WPARAM /* wParam\n  */,\n  LPARAM /* lParam\n  */,\n  BOOL& /* bHandled */\n  ) {\n  // since we completely paint our window in the OnPaint handler, use\n  // an empty background handler\n  return 0;\n}\n"
        },
        {
          "name": "example_10-01.cpp",
          "type": "blob",
          "size": 1.2333984375,
          "content": "//Example 10-1. Using cv::threshold() to sum three channels of an image\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nvoid sum_rgb( const cv::Mat& src, cv::Mat& dst ) {\n\n\t// Split image onto the color planes.\n\t//\n\tvector< cv::Mat> planes;\n\tcv::split(src, planes);\n\tcv::Mat b = planes[0], g = planes[1], r = planes[2], s;\n\n\t// Add equally weighted rgb values.\n\t//\n\tcv::addWeighted( r, 1./3., g, 1./3., 0.0, s );\n\tcv::addWeighted( s, 1., b, 1./3., 0.0, s );\n\n\t// Truncate values above 100.\n\t//\n\tcv::threshold( s, dst, 100, 100, cv::THRESH_TRUNC );\n}\n\nvoid help(char ** argv) {\n\tcout << \"\\nExample 10-1. Using cv::threshold() to sum three channels of an image\\n\" << endl;\n\tcout << \"Call:\\n\" << argv[0] << \" ../faces.jpg\" << endl;\n}\n\nint main(int argc, char** argv) {\n\thelp(argv);\n\tif(argc < 2) { cout << \"\\nSpecify input image\" << endl; return -1; }\n\n\t// Load the image from the given file name.\n\t//\n\tcv::Mat src = cv::imread( argv[1] ), dst;\n\tif( src.empty() ) { cout << \"can not load \" << argv[1] << endl; return -1; }\n\tsum_rgb( src, dst);\n\n\t// Create a named window with the name of the file and\n\t// show the image in the window\n\t//\n\tcv::imshow( argv[1], dst );\n\n\t// Idle until the user hits any key.\n\t//\n\tcv::waitKey(0);\n\treturn 0;\n}\n"
        },
        {
          "name": "example_10-02.cpp",
          "type": "blob",
          "size": 1.3203125,
          "content": "// Example 10-2. Alternative method to combine and threshold image planes\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nvoid sum_rgb( const cv::Mat& src, cv::Mat& dst ) {\n\n\t// Split image onto the color planes.\n\t//\n\tvector<cv::Mat> planes;\n\tcv::split(src, planes);\n\tcv::Mat b = planes[0], g = planes[1], r = planes[2];\n\n\t// Accumulate separate planes, combine and threshold.\n\t//\n\tcv::Mat s = cv::Mat::zeros(b.size(), CV_32F);\n\tcv::accumulate(b, s);\n\tcv::accumulate(g, s);\n\tcv::accumulate(r, s);\n\n\t// Truncate values above 100 and rescale into dst.\n\t//\n\tcv::threshold( s, s, 100, 100, cv::THRESH_TRUNC );\n\ts.convertTo(dst, b.type());\n}\n\nvoid help(char **argv) {\n\tcout << \"\\nExample 10-2. Alternative method to combine and threshold image planes\\n\" << endl;\n\tcout << \"\\nCall:\\n\" << argv[0] << \" ../faces.jpg\\n\" << endl;\n}\n\nint main(int argc, char** argv) {\n\thelp(argv);\n\tif(argc < 2) { cout << \"specify input image\" << endl; return -1; }\n\n\t// Load the image from the given file name.\n\t//\n\tcv::Mat src = cv::imread( argv[1] ), dst;\n\tif( src.empty() ) { cout << \"can not load \" << argv[1] << endl; return -1; }\n\tsum_rgb( src, dst);\n\n\t// Create a named window with the name of the file and\n\t// show the image in the window\n\t//\n\tcv::imshow( argv[1], dst );\n\n\t// Idle until the user hits any key.\n\t//\n\tcv::waitKey(0);\n\treturn 0;\n}\n"
        },
        {
          "name": "example_10-03.cpp",
          "type": "blob",
          "size": 1.3544921875,
          "content": "// Example 10-3. Threshold versus adaptive threshold\n#include <opencv2/opencv.hpp>\n#include <cstdlib>\n#include <iostream>\n\nusing namespace std;\n\nint main( int argc, char** argv )\n{\n\tif(argc != 7) { cout << \"\\nExample 10-3. Threshold versus adaptive threshold\\n\"\n\t\"Usage:\\n\" <<argv[0] <<\" fixed_threshold invert(0=off|1=on) \"\n\t\"adaptive_type(0=mean|1=gaussian) block_size offset image\\n\"\n\t\"Example:\\n\" <<argv[0] <<\" 100 1 0 15 10 ../faces.png\\n\"; return -1; }\n\n\t// Process command line arguments\n\t//\n\tdouble fixed_threshold = (double)atof(argv[1]);\n\tint threshold_type = atoi(argv[2]) ? cv::THRESH_BINARY : cv::THRESH_BINARY_INV;\n\tint adaptive_method = atoi(argv[3]) ? cv::ADAPTIVE_THRESH_MEAN_C\n\t: cv::ADAPTIVE_THRESH_GAUSSIAN_C;\n\tint block_size = atoi(argv[4]);\n\tdouble offset = (double)atof(argv[5]);\n\tcv::Mat Igray = cv::imread(argv[6], cv::IMREAD_GRAYSCALE);\n\n\t// Read in gray image.\n\t//\n\tif( Igray.empty() ){ cout << \"Can not load \" << argv[6] << endl; return -1; }\n\n\t// Declare the output images.\n\t//\n\tcv::Mat It, Iat;\n\n\t// Thresholds.\n\t//\n\tcv::threshold(\n\t\tIgray,\n\t\tIt,\n\t\tfixed_threshold,\n\t\t255,\n\t\tthreshold_type);\n\tcv::adaptiveThreshold(\n\t\tIgray,\n\t\tIat,\n\t\t255,\n\t\tadaptive_method,\n\t\tthreshold_type,\n\t\tblock_size,\n\t\toffset\n\t\t);\n\t\t\n\t// Show the results.\n\t//\n\tcv::imshow(\"Raw\",Igray);\n\tcv::imshow(\"Threshold\",It);\n\tcv::imshow(\"Adaptive Threshold\",Iat);\n\tcv::waitKey(0);\n\treturn 0;\n}\n"
        },
        {
          "name": "example_11-01.cpp",
          "type": "blob",
          "size": 1.8525390625,
          "content": "// Example 11-1. An affine transformation.\n// Maps the 3 points (0, 0), (0, height-1), (width-1, 0) specified in srcTri[] to\n// the specified points in array dstTri using a computed Affine Transform. \n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char** argv) {\n\n  if(argc != 2) {\n    cout << \"Warp affine\\nUsage: \" <<argv[0] <<\" <imagename>\\n\" << endl;\n    return -1;\n  }\n\n  cv::Mat src = cv::imread(argv[1],1);\n  if( src.empty() ) { cout << \"Can not load \" << argv[1] << endl; return -1; }\n\n  cv::Point2f srcTri[] = {\n    cv::Point2f(0,0),           // src Top left\n    cv::Point2f(src.cols-1, 0), // src Top right\n    cv::Point2f(0, src.rows-1)  // src Bottom left\n  };\n\n  cv::Point2f dstTri[] = {\n    cv::Point2f(src.cols*0.f, src.rows*0.33f),   // dst Top left\n    cv::Point2f(src.cols*0.85f, src.rows*0.25f), // dst Top right\n    cv::Point2f(src.cols*0.15f, src.rows*0.7f)   // dst Bottom left\n  };\n\n  // COMPUTE AFFINE MATRIX\n  //\n  cv::Mat warp_mat = cv::getAffineTransform(srcTri, dstTri);\n  cv::Mat dst, dst2;\n  cv::warpAffine(\n    src,\n    dst,\n    warp_mat,\n    src.size(),\n    cv::INTER_LINEAR,\n    cv::BORDER_CONSTANT,\n    cv::Scalar()\n  );\n  for( int i = 0; i < 3; ++i )\n    cv::circle(dst, dstTri[i], 5, cv::Scalar(255, 0, 255), -1, cv::LINE_AA);\n\n  cv::imshow(\"Affine Transform Test\", dst);\n  cv::waitKey();\n\n  for(int frame=0;;++frame) {\n\n    // COMPUTE ROTATION MATRIX\n    cv::Point2f center(src.cols*0.5f, src.rows*0.5f);\n    double angle = frame*3 % 360, scale = (cos((angle - 60)* CV_PI/180) + 1.05)*0.8;\n\n    cv::Mat rot_mat = cv::getRotationMatrix2D(center, angle, scale);\n\n    cv::warpAffine(\n      src,\n      dst,\n      rot_mat,\n      src.size(),\n      cv::INTER_LINEAR,\n      cv::BORDER_CONSTANT,\n      cv::Scalar()\n    );\n    cv::imshow(\"Rotated Image\", dst);\n    if(cv::waitKey(30) >= 0 )\n      break;\n\n  }\n\n  return 0;\n}\n"
        },
        {
          "name": "example_11-02.cpp",
          "type": "blob",
          "size": 1.443359375,
          "content": "// Example 11-2. Code for perspective transformation\n// Compute a perspective transformation between the 4 src control points\n// in srcQuad to 4 dst control points in dstQuad and apply it the image.\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char** argv) {\n\n  if(argc != 2) {\n    cout << \"Perspective Warp\\nUsage: \" <<argv[0] <<\" <imagename>\\n\" << endl;\n    return -1;\n  }\n\n  cv::Mat src = cv::imread(argv[1],1);\n  if( src.empty() ) { cout << \"Can not load \" << argv[1] << endl; return -1; }\n\n  cv::Point2f srcQuad[] = {\n    cv::Point2f(0, 0),                   // src Top left\n    cv::Point2f(src.cols-1, 0),          // src Top right\n    cv::Point2f(src.cols-1, src.rows-1), // src Bottom right\n    cv::Point2f(0, src.rows-1)           // src Bottom left\n  };\n\n  cv::Point2f dstQuad[] = {\n    cv::Point2f(src.cols*0.05f, src.rows*0.33f),\n    cv::Point2f(src.cols*0.9f, src.rows*0.25f),\n    cv::Point2f(src.cols*0.8f, src.rows*0.9f),\n    cv::Point2f(src.cols*0.2f, src.rows*0.7f)\n  };\n\n  // COMPUTE PERSPECTIVE MATRIX\n  //\n  cv::Mat warp_mat = cv::getPerspectiveTransform(srcQuad, dstQuad);\n  cv::Mat dst;\n  cv::warpPerspective(src, dst, warp_mat, src.size(), cv::INTER_LINEAR,\n                      cv::BORDER_CONSTANT, cv::Scalar());\n\n  for( int i = 0; i < 4; i++ )\n    cv::circle(dst, dstQuad[i], 5, cv::Scalar(255, 0, 255), -1, cv::LINE_AA);\n\n  cv::imshow(\"Perspective Transform Test\", dst);\n  cv::waitKey();\n  return 0;\n}\n"
        },
        {
          "name": "example_11-03.cpp",
          "type": "blob",
          "size": 1,
          "content": "// Example 11-3. Log-polar transform example\n// Log-polar transform example.\n// This demonstrates the forward and backward (inverse) log-polar\n// transform.\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char** argv) {\n  if(argc != 3) {\n    cout << \"LogPolar\\nUsage: \" <<argv[0] <<\" <imagename> <M value>\\n\"\n\t <<\"<M value>~30 is usually good enough\\n\";\n    return -1;\n  }\n\n  cv::Mat src = cv::imread(argv[1],1);\n\n  if( src.empty() ) { cout << \"Can not load \" << argv[1] << endl; return -1; }\n\n  double M = atof(argv[2]);\n  cv::Mat dst(src.size(), src.type()), src2(src.size(), src.type());\n\n  cv::logPolar(\n    src,\n    dst,\n    cv::Point2f(src.cols*0.5f, src.rows*0.5f),\n    M,\n    cv::INTER_LINEAR | cv::WARP_FILL_OUTLIERS\n  );\n  cv::logPolar(\n    dst,\n    src2,\n    cv::Point2f(src.cols*0.5f, src.rows*0.5f),\n    M,\n    cv::INTER_LINEAR | cv::WARP_INVERSE_MAP\n  );\n  cv::imshow( \"log-polar\", dst );\n  cv::imshow( \"inverse log-polar\", src2 );\n\n  cv::waitKey();\n\n  return 0;\n}\n"
        },
        {
          "name": "example_12-01.cpp",
          "type": "blob",
          "size": 1.912109375,
          "content": "// Example 12-1. Using cv::dft() and cv::idft() to accelerate\n// the computation of convolutions \n\n#include <iostream>\n#include <opencv2/opencv.hpp>\n\nusing std::cout;\nusing std::endl;\n\nint main(int argc, char** argv) {\n    if (argc != 2) {\n        cout    << \"\\nExample 12-1. Using cv::dft() and cv::idft() to accelerate the\"\n                << \"\\n computation of convolutions\"\n                << \"\\nFourier Transform\\nUsage: \"\n                << argv[0] << \" <path/imagename>\\n\" << endl;\n        return -1;\n    }\n\n    cv::Mat A = cv::imread(argv[1], 0);\n\n    if (A.empty()) {\n        cout << \"Cannot load \" << argv[1] << endl;\n        return -1;\n    }\n\n    cv::Size patchSize(100, 100);\n    cv::Point topleft(A.cols / 2, A.rows /2);\n    cv::Rect roi(topleft.x, topleft.y, patchSize.width, patchSize.height);\n    cv::Mat B = A(roi);\n\n    int dft_M = cv::getOptimalDFTSize(A.rows + B.rows - 1);\n    int dft_N = cv::getOptimalDFTSize(A.cols + B.cols - 1);\n\n    cv::Mat dft_A = cv::Mat::zeros(dft_M, dft_N, CV_32F);\n    cv::Mat dft_B = cv::Mat::zeros(dft_M, dft_N, CV_32F);\n\n    cv::Mat dft_A_part = dft_A(cv::Rect(0, 0, A.cols, A.rows));\n    cv::Mat dft_B_part = dft_B(cv::Rect(0, 0, B.cols, B.rows));\n\n    A.convertTo(dft_A_part, dft_A_part.type(), 1, -mean(A)[0]);\n    B.convertTo(dft_B_part, dft_B_part.type(), 1, -mean(B)[0]);\n\n    cv::dft(dft_A, dft_A, 0, A.rows);\n    cv::dft(dft_B, dft_B, 0, B.rows);\n\n    // set the last parameter to false to compute convolution instead of correlation\n    //\n    cv::mulSpectrums(dft_A, dft_B, dft_A, 0, true);\n    cv::idft(dft_A, dft_A, cv::DFT_SCALE, A.rows + B.rows - 1);\n\n    cv::Mat corr = dft_A(cv::Rect(0, 0, A.cols + B.cols - 1, A.rows + B.rows - 1));\n    cv::normalize(corr, corr, 0, 1, cv::NORM_MINMAX, corr.type());\n    cv::pow(corr, 3.0, corr);\n\n    B ^= cv::Scalar::all(255);\n\n    cv::imshow(\"Image\", A);\n    cv::imshow(\"ROI\", B);\n\n    cv::imshow(\"Correlation\", corr);\n    cv::waitKey();\n\n    return 0;\n}\n"
        },
        {
          "name": "example_12-02.cpp",
          "type": "blob",
          "size": 1.3232421875,
          "content": "// Example 12-2. Using cv::HoughCircles() to return a sequence of circles found in a\n// grayscale image\n\n#include <math.h>\n\n#include <iostream>\n#include <vector>\n\n#include <opencv2/opencv.hpp>\n\nusing std::cout;\nusing std::endl;\nusing std::vector;\n\nvoid help(char** argv) {\n        cout  << \"\\nExample 12-1. Using cv::dft() and cv::idft() to accelerate the computation of convolutions\"  \n              << \"\\nHough Circle detect\\nUsage: \" << argv[0] <<\" <path/imagename>\\n\" \n              << \"Example:\\n\" << argv[0] << \" ../stuff.jpg\\n\" << endl;\n}\n\nint main(int argc, char** argv) {\n\thelp(argv);\n    if (argc != 2) {\n        return -1;\n    }\n\n    cv::Mat src, image;\n\n    src = cv::imread(argv[1], 1);\n    if (src.empty()) {\n        cout << \"Cannot load \" << argv[1] << endl;\n        return -1;\n    }\n\n    cv::cvtColor(src, image, cv::COLOR_BGR2GRAY);\n    cv::GaussianBlur(image, image, cv::Size(5, 5), 0, 0);\n\n    vector<cv::Vec3f> circles;\n    cv::HoughCircles(image, circles, cv::HOUGH_GRADIENT, 2, image.cols/4);\n\n    for (size_t i = 0; i < circles.size(); ++i) {\n        cv::circle(src,\n            cv::Point(cvRound(circles[i][0]), cvRound(circles[i][1])),\n            cvRound(circles[i][2]),\n            cv::Scalar(0, 0, 255),\n            2,\n            cv::LINE_AA);\n    }\n\n    cv::imshow(\"Hough Circles\", src);\n    cv::waitKey(0);\n\n    return 0;\n}\n"
        },
        {
          "name": "example_12-03.cpp",
          "type": "blob",
          "size": 2.97265625,
          "content": "// Example 12-3. Using GrabCut for background removal\n\n#include <iostream>\n#include <string>\n#include <opencv2/opencv.hpp>\n\nusing std::cout;\nusing std::cerr;\nusing std::endl;\n\ncv::Mat img_preview;\ncv::Mat img;\ncv::Mat markers;\ncv::Mat drawRect;\nint x_0 = -1;\nint y_0 = -1; \nint x_1, y_1;\nint drawr = 0;\n\nbool finished;\n\nvoid displayResult() {\n    int rows = img.rows;\n    int cols = img.cols;\n    cv::Vec3b blackClr(0, 0, 0);\n    for (int i = 0; i < rows; ++i) {\n        for (int j = 0; j < cols; ++j) {\n            if (markers.at<uchar>(i, j) != cv::GC_FGD && markers.at<uchar>(i, j) != cv::GC_PR_FGD) {\n                img.at<cv::Vec3b>(i, j) = blackClr;\n            }\n        }\n    }\n    cv::imshow(\"image\", img);\n    finished = true;\n}\n\nstatic void onMouseClick(int event, int x, int y, int, void*) {\n    if (finished) {\n        return;\n    }\n\n    if (event == cv::EVENT_LBUTTONDOWN && drawr == 0) {\n\t\tif(x_0 < 0) {\n\t\t\tx_0 = x;\n\t\t\ty_0 = y;\n\t\t\tcv::ellipse(markers, cv::Point(x, y), cv::Size(1, 1),\n            0, 0, 360, cv::GC_FGD, 3);\n\t\t\tcv::ellipse(drawRect, cv::Point(x, y), cv::Size(1, 1),\n            0, 0, 360, cv::Scalar(0, 0, 255), 3);\n            drawr = 1;\n\t\t} \n \n        cv::addWeighted(img,0.7,drawRect,0.3, 0, img_preview);\n    \n        cv::imshow(\"image\", img_preview);\n        return;\n    }\n    if( event == cv::EVENT_LBUTTONUP) {\n\t\tdrawr = 2;\n\t}\n    if(drawr == 1) { //Just moving\n\t\t\tdrawRect.setTo(0);\n\t\t\tcv::rectangle(drawRect, cv::Point(x_0,y_0), cv::Point(x,y), cv::Scalar(0,0,255), -1);\n \n\t\t\tcv::addWeighted(img,0.7,drawRect,0.3, 0, img_preview);\n\t\t\tx_1 = x; y_1 = y;    \n\t\t\tcv::imshow(\"image\", img_preview);\n\t\t\treturn;\n\t}\n\n    if (drawr == 2) {\n        cv::Mat bg;\n        cv::Mat fg;\n        cv::rectangle(markers, cv::Point(x_0,y_0), cv::Point(x_1,y_1), cv::GC_PR_FGD, -1);\n        cv::grabCut(img, markers, cv::Rect(0, 0, img.cols - 1, img.rows - 1),\n            bg, fg, 5, cv::GC_EVAL);\n        displayResult();\n        return;\n    }\n}\n\nvoid help(char** argv) {\n        cout << \"\\nExample 12-3. Using GrabCut for background removal\"\n             << \"\\n- Use left mouse to drag a rectangle over the object\"\n             << \"\\n- On release of left mouse button, we will perform GrabCut\"\n             << \"\\n- Press any key to terminate program\"\n             << \"\\nUsage: \"\n             << argv[0] << \" <path/imagename>\\n\" \n             << \"\\nExample:\\n\" << argv[0] << \" ../stuff.jpg\\n\" << endl;\n}\n\n\nint main(int argc, char** argv) {\n\thelp(argv);\n    if (argc != 2) {\n        return -1;\n    }\n\n    img = cv::imread(std::string(argv[1]), CV_LOAD_IMAGE_COLOR);\n    if (img.channels() != 3) {\n        cerr << \"Input image should have 3 channels\" << endl;\n        exit(1);\n    }\n\n    markers = cv::Mat(img.size(), CV_8UC1);\n    markers.setTo(cv::GC_PR_BGD);\n\n    img_preview = img.clone();\n    drawRect = img.clone();\n\n    finished = false;\n\n    cv::namedWindow(\"image\", cv::WINDOW_AUTOSIZE);\n    cv::setMouseCallback(\"image\", onMouseClick, 0);\n\n    cv::imshow(\"image\", img_preview);\n\n    cv::waitKey(0);\n\n    return 0;\n}\n"
        },
        {
          "name": "example_12-04.cpp",
          "type": "blob",
          "size": 3.369140625,
          "content": "// Example 12-4. Using Watershed for image segmentation\n\n#include <iostream>\n#include <string>\n#include <opencv2/opencv.hpp>\n\nusing std::cout;\nusing std::cerr;\nusing std::endl;\n\ncv::Mat img_preview;\ncv::Mat img;\ncv::Mat markers;\n\nbool finished;\n\nvoid displayResult() {\n    cv::imshow(\"image\", img);\n    finished = true;\n}\n\nconst int dx[4] = {-1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\n\nvoid fillMarker(int x, int y, int marker_id) {\n    if (x < 0 || y < 0 || x >= markers.rows || y >= markers.cols) {\n        return;\n    }\n\n    if (markers.at<int>(x, y) != -1) {\n        return;\n    }\n\n    markers.at<int>(x, y) = marker_id;\n\n    for (int dir = 0; dir < 4; ++dir) {\n        int nx = x + dx[dir];\n        int ny = y + dy[dir];\n        fillMarker(nx, ny, marker_id);\n    }\n}\n\nstatic void onMouseClick(int event, int x, int y, int, void*) {\n    if (finished) {\n        return;\n    }\n\n    if (event == cv::EVENT_LBUTTONDOWN) {\n        cv::ellipse(markers, cv::Point(x, y), cv::Size(1, 1),\n            0, 0, 360, -1, 3);\n        cv::ellipse(img_preview, cv::Point(x, y), cv::Size(1, 1),\n            0, 0, 360, cv::Scalar(0, 0, 255), 3);\n        cv::imshow(\"image\", img_preview);\n        return;\n    }\n\n    if (event == cv::EVENT_RBUTTONDOWN) {\n        int marker_id = 0;\n        for (int x = 0; x < markers.rows; ++x) {\n            for (int y = 0; y < markers.cols; ++y) {\n                if (markers.at<int>(x, y) == -1) {\n                    ++marker_id;\n                    fillMarker(x, y, marker_id);\n                }\n            }\n        }\n        cv::watershed(img, markers);\n        cv::Vec3b borderColor(0, 0, 255);\n        for (int x = 0; x < img.rows; ++x) {\n            for (int y = 0; y < img.cols; ++y) {\n                if (markers.at<int>(x, y) == -1) {\n                    img.at<cv::Vec3b>(x, y) = borderColor;\n                    continue;\n                }\n                for (int dir = 0; dir < 4; ++dir) {\n                    int nx = x + dx[dir];\n                    int ny = y + dy[dir];\n                    if (nx < 0 || ny < 0 || nx >= img.rows || ny >= img.cols) {\n                        continue;\n                    }\n                    if (markers.at<int>(x, y) != markers.at<int>(nx, ny)) {\n                        img.at<cv::Vec3b>(x, y) = borderColor;\n                    }\n                }\n            }\n        }\n\n        displayResult();\n        return;\n    }\n}\n\nvoid help(char** argv) {\n       cout << \"\\nExample 12-4. Using Watershed for image segmentation\"\n             << \"\\n- Use left click on the image to place marker for the new segment\"\n             << \"\\n- Use right clock on the image to perform Watershed\"\n             << \"\\n- Press any key to terminate program\"\n             << \"\\nUsage: \"\n             << argv[0] << \" <path/imagename>\\n\" \n             << \"\\nExample:\\n\" << argv[0] << \" ../stuff.jpg\\n\" << endl;\t\n}\n\nint main(int argc, char** argv) {\n\thelp(argv);\n    if (argc != 2) {\n         return -1;\n    }\n\n    img = cv::imread(std::string(argv[1]), CV_LOAD_IMAGE_COLOR);\n    if (img.channels() != 3) {\n        cerr << \"Input image should have 3 channels\" << endl;\n        exit(1);\n    }\n\n    markers = cv::Mat(img.size(), CV_32SC1);\n    markers.setTo(0);\n\n    img_preview = img.clone();\n\n    finished = false;\n\n    cv::namedWindow(\"image\", cv::WINDOW_AUTOSIZE);\n    cv::setMouseCallback(\"image\", onMouseClick, 0);\n\n    cv::imshow(\"image\", img_preview);\n\n    cv::waitKey(0);\n\n    return 0;\n}\n"
        },
        {
          "name": "example_13-01.cpp",
          "type": "blob",
          "size": 1.3994140625,
          "content": "// Example 13-1. Histogram computation and display\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nint main( int argc, char** argv ){\n  if(argc != 2) {\n\t  cout << \"\\n// Example 13-1. Histogram computation and display\" << endl;\n    cout << \"\\nComputer Color Histogram\\nUsage: \" <<argv[0] <<\" <imagename>\\n\" << endl;\n    return -1;\n  }\n\n  cv::Mat src = cv::imread( argv[1],1 );\n  if( src.empty() ) { cout << \"Cannot load \" << argv[1] << endl; return -1; }\n\n  // Compute the HSV image, and decompose it into separate planes.\n  //\n  cv::Mat hsv;\n  cv::cvtColor(src, hsv, cv::COLOR_BGR2HSV);\n\n  float h_ranges[] = {0, 180}; // hue is [0, 180]\n  float s_ranges[] = {0, 256};\n  const float* ranges[] = {h_ranges, s_ranges};\n  int histSize[] = {30, 32}, ch[] = {0, 1};\n\n  cv::Mat hist;\n\n  // Compute the histogram\n  //\n  cv::calcHist(&hsv, 1, ch, cv::noArray(), hist, 2, histSize, ranges, true);\n  cv::normalize(hist, hist, 0, 255, cv::NORM_MINMAX);\n\n  int scale = 10;\n  cv::Mat hist_img(histSize[0]*scale, histSize[1]*scale, CV_8UC3);\n\n  // Draw our histogram.\n  //\n  for( int h = 0; h < histSize[0]; h++ ) {\n    for( int s = 0; s < histSize[1]; s++ ){\n      float hval = hist.at<float>(h, s);\n      cv::rectangle(\n\thist_img,\n\tcv::Rect(h*scale,s*scale,scale,scale),\n\tcv::Scalar::all(hval),\n\t-1\n      );\n    }\n  }\n\n  cv::imshow(\"image\", src);\n  cv::imshow(\"H-S histogram\", hist_img);\n  cv::waitKey();\n  return 0;\n}\n"
        },
        {
          "name": "example_13-02.cpp",
          "type": "blob",
          "size": 5.2099609375,
          "content": "// Example 13-2. Creating signatures from histograms for EMD; note that this code is the\n// source of the data in Table 13-1, in which the hand histogram is compared in different\n// lighting conditions\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nvoid help( char** argv ){\n\tcout << \"//\\nExample 13-2. Creating signatures from histograms for EMD; note that this code is the\"\n\t\t<< \"\\n// source of the data in Table 13-1, in which the hand histogram is compared in different\"\n\t\t<< \"\\n// lighting conditions\\n\\n\" << endl;\n  cout << \"\\nCall is:\\n\"\n  << argv[0] <<\" modelImage0 testImage1 testImage2 badImage3\\n\\n\"\n  << \"for example: \" << argv[0]\n  << \" ../HandIndoorColor.jpg ../HandOutdoorColor.jpg \"\n  << \"../HandOutdoorSunColor.jpg ../fruits.jpg\\n\"\n  << \"\\n\" << endl;\n}\n\n// Compare 3 images' histograms\nint main( int argc, char** argv ) {\n  if( argc != 5 ) { help( argv ); return -1; }\n  vector<cv::Mat> src(5);\n  cv::Mat tmp;\n  int i;\n\n  tmp = cv::imread( argv[1], 1);\n  if( tmp.empty() ) {\n    cerr << \"Error on reading image 1,\" << argv[1] << \"\\n\" << endl;\n    help( argv );\n    return(-1);\n  }\n\n  // Parse the first image into two image halves divided halfway on y\n  //\n  cv::Size size = tmp.size();\n  int width = size.width;\n  int height = size.height;\n  int halfheight = height >> 1;\n\n  cout <<\"Getting size [[\" <<tmp.cols <<\"] [\" <<tmp.rows <<\"]]\\n\" <<endl;\n  cout <<\"Got size (w,h): (\" <<size.width <<\",\" <<size.height <<\")\" <<endl;\n\n  src[0] = cv::Mat(cv::Size(width,halfheight), CV_8UC3);\n  src[1] = cv::Mat(cv::Size(width,halfheight), CV_8UC3);\n\n  // Divide the first image into top and bottom halves into src[0] and src[1]\n  //\n  cv::Mat_<cv::Vec3b>::iterator tmpit = tmp.begin<cv::Vec3b>();\n\n  // top half\n  //\n  cv::Mat_<cv::Vec3b>::iterator s0it = src[0].begin<cv::Vec3b>();\n  for(i = 0; i < width*halfheight; ++i, ++tmpit, ++s0it) *s0it = *tmpit;\n\n  // Bottom half\n  //\n  cv::Mat_<cv::Vec3b>::iterator s1it = src[1].begin<cv::Vec3b>();\n  for(i = 0; i < width*halfheight; ++i, ++tmpit, ++s1it) *s1it = *tmpit;\n\n  // Load the other three images\n  //\n  for(i = 2; i<5; ++i){\n    src[i] = cv::imread(argv[i], 1);\n    if(src[i].empty()) {\n      cerr << \"Error on reading image \" << i << \": \" << argv[i] << \"\\n\" << endl;\n      help( argv );\n      return(-1);\n    }\n  }\n\n  // Compute the HSV image, and decompose it into separate planes.\n  //\n  vector<cv::Mat> hsv(5), hist(5), hist_img(5);\n  int h_bins = 8;\n  int s_bins = 8;\n  int hist_size[] = { h_bins, s_bins }, ch[] = {0, 1};\n  float h_ranges[] = { 0, 180 }; // hue range is [0,180]\n  float s_ranges[] = { 0, 255 };\n  const float* ranges[] = { h_ranges, s_ranges };\n  int scale = 10;\n\n  for(i = 0; i<5; ++i) {\n    cv::cvtColor( src[i], hsv[i], cv::COLOR_BGR2HSV );\n    cv::calcHist( &hsv[i], 1, ch, cv::noArray(), hist[i], 2, hist_size, ranges, true );\n    cv::normalize( hist[i], hist[i], 0, 255, cv::NORM_MINMAX );\n    hist_img[i] = cv::Mat::zeros( hist_size[0]*scale, hist_size[1]*scale, CV_8UC3 );\n\n    // Draw our histogram For the 5 images\n    //\n    for( int h = 0; h < hist_size[0]; h++ )\n      for( int s = 0; s < hist_size[1]; s++ ) {\n\tfloat hval = hist[i].at<float>(h, s);\n\tcv::rectangle(\n\t  hist_img[i],\n\t  cv::Rect(h*scale, s*scale, scale, scale),\n\t  cv::Scalar::all(hval),\n\t  -1\n\t);\n      }\n  }\n\n  // Display\n  //\n  cv::namedWindow( \"Source0\", 1 );cv::imshow( \"Source0\", src[0] );\n  cv::namedWindow( \"HS Histogram0\", 1 );cv::imshow( \"HS Histogram0\", hist_img[0] );\n\n  cv::namedWindow( \"Source1\", 1 );cv::imshow( \"Source1\", src[1] );\n  cv::namedWindow( \"HS Histogram1\", 1 ); cv::imshow( \"HS Histogram1\", hist_img[1] );\n\n  cv::namedWindow( \"Source2\", 1 ); cv::imshow( \"Source2\", src[2] );\n  cv::namedWindow( \"HS Histogram2\", 1 ); cv::imshow( \"HS Histogram2\", hist_img[2] );\n\n  cv::namedWindow( \"Source3\", 1 ); cv::imshow( \"Source3\", src[3] );\n  cv::namedWindow( \"HS Histogram3\", 1 ); cv::imshow( \"HS Histogram3\", hist_img[3] );\n\n  cv::namedWindow( \"Source4\", 1 ); cv::imshow( \"Source4\", src[4] );\n  cv::namedWindow( \"HS Histogram4\", 1 ); cv::imshow( \"HS Histogram4\", hist_img[4] );\n\n  // Compare the histogram src0 vs 1, vs 2, vs 3, vs 4\n  cout << \"Comparison:\\n\"\n  << \"Corr                Chi                Intersect                Bhat\\n\"<< endl;\n  \n  for(i=1; i<5; ++i) { // For each histogram\n    cout << \"Hist[0] vs Hist[\" << i << \"]: \" << endl;;\n    for(int j=0; j<4; ++j) { // For each comparison type\n      cout << \"method[\" << j << \"]: \" << cv::compareHist(hist[0],hist[i],j) << \" \";\n    }\n    cout << endl;\n  }\n\n  //Do EMD and report\n  //\n  vector<cv::Mat> sig(5);\n  cout << \"\\nEMD: \" << endl;\n\n  // Oi Vey, parse histograms to earth movers signatures\n  //\n  for( i=0; i<5; ++i) {\n\n    vector<cv::Vec3f> sigv;\n\n    // (re)normalize histogram to make the bin weights sum to 1.\n    //\n    cv::normalize(hist[i], hist[i], 1, 0, cv::NORM_L1);\n    for( int h = 0; h < h_bins; h++ )\n      for( int s = 0; s < s_bins; s++ ) {\n\tfloat bin_val = hist[i].at<float>(h, s);\n\tif( bin_val != 0 )\n\t  sigv.push_back( cv::Vec3f(bin_val, (float)h, (float)s));\n      }\n\n    // make Nx3 32fC1 matrix, where N is the number of nonzero histogram bins\n    //\n    sig[i] = cv::Mat(sigv).clone().reshape(1);\n    if( i > 0 )\n      cout << \"Hist[0] vs Hist[\" << i << \"]: \"\n\t   << EMD(sig[0], sig[i], cv::DIST_L2) << endl;\n  }\n\n  cv::waitKey(0);\n\n}\n"
        },
        {
          "name": "example_13-03.cpp",
          "type": "blob",
          "size": 1.68359375,
          "content": "// Example 13-3. Template matching\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nvoid help( char** argv ){\n  cout << \"\\n\"\n  <<\"\\nExample 13-3: using matchTemplate(). The call is:\\n\"\n  <<\"\\n\"\n  <<argv[0] <<\" <template> <image_to_be_searched?\\n\"\n  << \"\\nExample:\\n\" << argv[0] << \"../BlueCup.jpg ../adrian.jpg\"\n  <<\"\\n\"\n  <<\" This routine will search using all methods:\\n\"\n  <<\" cv::TM_SQDIFF 0\\n\"\n  <<\" cv::TM_SQDIFF_NORMED 1\\n\"\n  <<\" cv::TM_CCORR 2\\n\"\n  <<\" cv::TM_CCORR_NORMED 3\\n\"\n  <<\" cv::TM_CCOEFF 4\\n\"\n  <<\" cv::TM_CCOEFF_NORMED 5\\n\"\n  <<\"\\n\" << endl;\n}\n\n// Display the results of the matches\n//\nint main( int argc, char** argv ) {\n\n  if( argc != 3) {\n    help( argv );\n    return -1;\n  }\n\n  cv::Mat src, templ, ftmp[6];   // ftmp is what to display on\n\n  // Read in the template to be used for matching:\n  //\n  if((templ=cv::imread(argv[1], 1)).empty()) {\n    cout << \"Error on reading template \" << argv[1] << endl;\n    help( argv );return -1;\n  }\n\n  // Read in the source image to be searched:\n  //\n  if((src=cv::imread(argv[2], 1)).empty()) {\n    cout << \"Error on reading src image \" << argv[2] << endl;\n    help( argv );return -1;\n  }\n\n  // Do the matching of the template with the image\n  for(int i=0; i<6; ++i){\n    cv::matchTemplate( src, templ, ftmp[i], i);\n    cv::normalize(ftmp[i],ftmp[i],1,0,cv::NORM_MINMAX);\n  }\n\n  // Display\n  //\n  cv::imshow( \"Template\", templ );\n  cv::imshow( \"Image\", src );\n  cv::imshow(\"SQDIFF\", ftmp[0] );\n  cv::imshow(\"SQDIFF_NORMED\", ftmp[1] );\n  cv::imshow(\"CCORR\", ftmp[2] );\n  cv::imshow(\"CCORR_NORMED\", ftmp[3] );\n  cv::imshow(\"CCOEFF\", ftmp[4] );\n  cv::imshow(\"CCOEFF_NORMED\", ftmp[5] );\n\n  // Let user view results:\n  //\n  cv::waitKey(0);\n}\n\n"
        },
        {
          "name": "example_14-01.cpp",
          "type": "blob",
          "size": 1.064453125,
          "content": "// Example 14-1. Finding contours based on a trackbar’s location; the contours are\n// updated whenever the trackbar is moved\n\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\ncv::Mat g_gray, g_binary;\nint g_thresh = 100;\n\nvoid on_trackbar( int, void* ) {\n  cv::threshold( g_gray, g_binary, g_thresh, 255, cv::THRESH_BINARY );\n  vector< vector< cv::Point> > contours;\n  cv::findContours(\n    g_binary,\n    contours,\n    cv::noArray(),\n    cv::RETR_LIST,\n    cv::CHAIN_APPROX_SIMPLE\n  );\n  g_binary = cv::Scalar::all(0);\n\n  cv::drawContours( g_binary, contours, -1, cv::Scalar::all(255));\n  cv::imshow( \"Contours\", g_binary );\n\n}\n\nint main( int argc, char** argv ) {\n  if( argc != 2 || ( g_gray = cv::imread(argv[1], 0)).empty() ) {\n    cout << \"\\nExample 14-1: Find threshold dependent contours\\nUsage:\\n\" <<argv[0]\n         <<\" ../fruits.jpg\\n\" << endl;\n    return -1;\n  }\n  cv::namedWindow( \"Contours\", 1 );\n\n  cv::createTrackbar(\n    \"Threshold\",\n    \"Contours\",\n    &g_thresh,\n    255,\n    on_trackbar\n  );\n  on_trackbar(0, 0);\n\n  cv::waitKey();\n\n  return 0;\n}\n"
        },
        {
          "name": "example_14-02.cpp",
          "type": "blob",
          "size": 2.103515625,
          "content": "// Example 14-2. Finding and drawing contours on an input image\n\n#include <opencv2/opencv.hpp>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nstruct AreaCmp {\n  AreaCmp(const vector<float>& _areas) : areas(&_areas) {}\n  bool operator()(int a, int b) const { return (*areas)[a] > (*areas)[b]; }\n  const vector<float>* areas;\n};\n\nint main(int argc, char* argv[]) {\n\n  cv::Mat img, img_edge, img_color;\n\n  // load image or show help if no image was provided\n  //\n  if( argc != 2 || (img = cv::imread(argv[1],cv::IMREAD_GRAYSCALE)).empty() ) {\n\t  cout << \"\\nERROR: You need 2 parameters, you had \" << argc << \"\\n\" << endl;\n    cout << \"\\nExample 14_2: Drawing Contours\\nCall is:\\n\" << argv[0] << \" <image>\\n\\n\"\n         << \"Example:\\n\" << argv[0] << \" ../box.png\\n\" << endl;\n    return -1;\n  }\n\n  cv::threshold(img, img_edge, 128, 255, cv::THRESH_BINARY);\n  cv::imshow(\"Image after threshold\", img_edge);\n  vector< vector< cv::Point > > contours;\n  vector< cv::Vec4i > hierarchy;\n\n  cv::findContours(\n    img_edge,\n    contours,\n    hierarchy,\n    cv::RETR_LIST,\n    cv::CHAIN_APPROX_SIMPLE\n  );\n  cout << \"\\n\\nHit any key to draw the next contour, ESC to quit\\n\\n\";\n  cout << \"Total Contours Detected: \" << contours.size() << endl;\n\n  vector<int> sortIdx(contours.size());\n  vector<float> areas(contours.size());\n  for( int n = 0; n < (int)contours.size(); n++ ) {\n    sortIdx[n] = n;\n    areas[n] = contourArea(contours[n], false);\n  }\n\n  // sort contours so that the largest contours go first\n  //\n  std::sort( sortIdx.begin(), sortIdx.end(), AreaCmp(areas ));\n\n  for( int n = 0; n < (int)sortIdx.size(); n++ ) {\n    int idx = sortIdx[n];\n    cv::cvtColor( img, img_color, cv::COLOR_GRAY2BGR );\n    cv::drawContours(\n      img_color, contours, idx,\n      cv::Scalar(0,0,255), 2, 8, hierarchy,\n      0 // Try different values of max_level, and see what happens\n    );\n    cout << \"Contour #\" << idx << \": area=\" << areas[idx] <<\n      \", nvertices=\" << contours[idx].size() << endl;\n    cv::imshow(argv[0], img_color);\n    int k;\n    if( (k = cv::waitKey()&255) == 27 )\n      break;\n  }\n  cout << \"Finished all contours\\n\";\n\n  return 0;\n}\n"
        },
        {
          "name": "example_14-03.cpp",
          "type": "blob",
          "size": 1.6328125,
          "content": "// Example 14-3. Drawing labeled connected components\n\n#include <algorithm>\n#include <iostream>\n#include<opencv2/opencv.hpp>\n\nusing namespace std;\n\nint main(int argc, char* argv[]) {\n\n  cv::Mat img, img_edge, labels, centroids, img_color, stats;\n\n  // load image or show help if no image was provided\n  if( (argc != 2)\n  || (img = cv::imread( argv[1], cv::IMREAD_GRAYSCALE )).empty()\n  ) {\n\tcout << \"\\nERROR: You need 2 parameters, you had \" << argc << \"\\n\" << endl;\n    cout << \"\\nExample 14-3: Drawing labeled connected componnents\\n\"\n    << \"Call is:\\n\" <<argv[0] <<\" <path/image>\\n\"\n    << \"\\nExample:\\n\" << argv[0] << \" ../HandIndoorColor.jpg\\n\" << endl; \n    return -1;\n  }\n\n  cv::threshold(img, img_edge, 128, 255, cv::THRESH_BINARY);\n  cv::imshow(\"Image after threshold\", img_edge);\n\n  int i, nccomps = cv::connectedComponentsWithStats (\n\timg_edge, \n\tlabels,\n\tstats, \n\tcentroids\n  );\n  cout << \"Total Connected Components Detected: \" << nccomps << endl;\n\n  vector<cv::Vec3b> colors(nccomps+1);\n  colors[0] = cv::Vec3b(0,0,0); // background pixels remain black.\n  for( i = 1; i <= nccomps; i++ ) {\n    colors[i] = cv::Vec3b(rand()%256, rand()%256, rand()%256);\n    if( stats.at<int>(i-1, cv::CC_STAT_AREA) < 100 )\n    colors[i] = cv::Vec3b(0,0,0); // small regions are painted with black too.\n  }\n  img_color = cv::Mat::zeros(img.size(), CV_8UC3);\n  for( int y = 0; y < img_color.rows; y++ )\n    for( int x = 0; x < img_color.cols; x++ )\n    {\n      int label = labels.at<int>(y, x);\n      CV_Assert(0 <= label && label <= nccomps);\n      img_color.at<cv::Vec3b>(y, x) = colors[label];\n    }\n\n  cv::imshow(\"Labeled map\", img_color);\n  cv::waitKey();\n  return 0;\n}\n\n"
        },
        {
          "name": "example_14-04.cpp",
          "type": "blob",
          "size": 2.091796875,
          "content": "// Example 14-4. Using the shape context distance extractor\n\n#include <algorithm>\n#include <iostream>\n#include <string>\n\n#include \"opencv2/opencv.hpp\"\n\nusing namespace std;\nusing namespace cv;\n\nstatic vector<Point> sampleContour( const Mat& image, int n=300 ) {\n\n  vector<vector<Point> > _contours;\n  vector<Point> all_points;\n  findContours(image, _contours, RETR_LIST, CHAIN_APPROX_NONE);\n  for (size_t i=0; i <_contours.size(); i++) {\n    for (size_t j=0; j <_contours[i].size(); j++)\n      all_points.push_back( _contours[i][j] );\n\n    // If too little points, replicate them\n    //\n    int dummy=0;\n    for (int add=(int)all_points.size(); add<n; add++)\n      all_points.push_back(all_points[dummy++]);\n\n    // Sample uniformly\n    random_shuffle(all_points.begin(), all_points.end());\n    vector<Point> sampled;\n    for (int i=0; i<n; i++)\n      sampled.push_back(all_points[i]);\n    return sampled;\n  }\n}\n\nvoid help(char** argv) {\n  cout << \"\\nExample 14-4. Using the shape context distance extractor\"\n       << \"\\nNOTE: See images to try in ../shape_sample/\\n\"\n       << \"\\nCall:\\n\" << argv[0] << \" <path/image_1> <path/image2>\\n\"\n       << \"\\nMISSMATCH Example:\\n\" << argv[0] << \"  ../shape_sample/1.png ../shape_sample/3.png\\n\"\n       << \"\\MATCH Example:\\n\" << argv[0] << \"  ../shape_sample/3.png ../shape_sample/4.png\\n\"       \n       << endl;\n}\n\n\nint main(int argc, char** argv) {\n\thelp(argv);\n  if(argc != 3) {\n    cout << \"\\nERROR: you need 2 parameters, you had \" << argc << \" parameters.\\n\" << endl;\n\treturn -1;\n  }\n  string path = \"../data/shape_sample/\";\n  int indexQuery = 1;\n\n  Ptr<ShapeContextDistanceExtractor> mysc = createShapeContextDistanceExtractor();\n\n  Size sz2Sh(300,300);\n  Mat img1=imread(argv[1], IMREAD_GRAYSCALE);\n  Mat img2=imread(argv[2], IMREAD_GRAYSCALE);\n  vector<Point> c1 = sampleContour(img1);\n  vector<Point> c2 = sampleContour(img2);\n  float dis = mysc->computeDistance( c1, c2 );\n  cout << \"shape context distance between \" <<\n    argv[1] << \" and \" << argv[2] << \" is: \" << dis << endl;\n      cv::imshow(\"SHAPE #1\", img1);\n      cv::imshow(\"SHAPE #2\",img2);\n      cv::waitKey();\n\n  return 0;\n\n}\n"
        },
        {
          "name": "example_15-01.cpp",
          "type": "blob",
          "size": 1.6044921875,
          "content": "//Example 15-1. Reading out the RGB values of all pixels in one row of a video and\n// accumulating those values into three separate comma separated files\n//\n#include <opencv2/opencv.hpp>\n#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t\t<< \"Example: 15-1: Read out RGB pixel values and store them to disk\\nCall:\\n\"\n\t\t<< argv[0] <<\" <path/video_file>\\n\"\n\t\t<< \"\\nExample:\\n\" << argv[0] << \" ../tree.avi\"\n\t\t<< \"\\n This will store to files blines.csv, glines.csv and rlines.csv\\n\\n\"\n\t\t<< endl;\n}\n\nint main( int argc, char** argv) {\n\t// Argument handling\n\t//\n\tif(argc != 2) { help(argv); return -1; }\n\tcv::namedWindow( argv[0], CV_WINDOW_AUTOSIZE );\n\tcv::VideoCapture cap;\n\tif((argc < 2)|| !cap.open(argv[1]))\n\t{\n\t\tcerr << \"Couldn't open video file\" << endl;\n\t\thelp(argv);\n\t\tcap.open(0);\n\t\treturn -1;\n\t}\n\t\n\t//Prepare Output\n\t//\n\tcv::Point pt1(10,10), pt2(30,30);\n\tint max_buffer;\n\tcv::Mat rawImage;\n\tofstream b,g,r;\n\tb.open(\"blines.csv\");\n\tg.open(\"glines.csv\");\n\tr.open(\"rlines.csv\");\n\n\t// MAIN PROCESSING LOOP:\n\t//\n\tfor(;;) {\n\t\tcap >> rawImage;\n\t\tif( !rawImage.data ) break;\n\t\tcv::LineIterator it( rawImage, pt1, pt2, 8);\n\t\tfor( int j=0; j<it.count; ++j,++it ) {\n\t\t\tb << (int)(*it)[0] << \", \";\n\t\t\tg << (int)(*it)[1] << \", \";\n\t\t\tr << (int)(*it)[2] << \", \";\n\t\t\t(*it)[2] = 255;   // Mark this sample in red\n\t\t}\n\t\tcv::imshow( argv[0], rawImage );\n\t\tint c = cv::waitKey(10);\n\t\tb << \"\\n\"; g << \"\\n\"; r << \"\\n\";\n\t}\n\n\t// CLEAN UP:\n\t//\n\tb << endl; g << endl; r << endl;\n\tb.close(); g.close(); r.close();\n\tcout << \"\\n\"\n\t\t<< \"Data stored to files: blines.csv, glines.csv and rlines.csv\\n\\n\"\n\t\t<< endl;\n}\n"
        },
        {
          "name": "example_15-02.cpp",
          "type": "blob",
          "size": 5.6923828125,
          "content": "// Example 15-2. Learning a background model to identify foreground pixels\n#include <opencv2/opencv.hpp>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n\nusing namespace std;\n\n// Global storage\n//\n// Float, 3-channel images\n//\ncv::Mat image;\ncv::Mat IavgF, IdiffF, IprevF, IhiF, IlowF;\ncv::Mat tmp, tmp2, mask;\n\n// Float, 1-channel images\n//\nvector<cv::Mat> Igray(3);\nvector<cv::Mat> Ilow(3);\nvector<cv::Mat> Ihi(3);\n\n// Byte, 1-channel image\n//\ncv::Mat Imaskt;\n\n// Thresholds\n//\nfloat high_thresh = 20.0;  //scaling the thesholds in backgroundDiff()\nfloat low_thresh = 28.0;\n\n// Counts number of images learned for averaging later\n//\nfloat Icount;\n\n// I is just a sample image for allocation purposes\n// (passed in for sizing)\n//\nvoid AllocateImages( const cv::Mat& I ) {\n\tcv::Size sz = I.size();\n\tIavgF = cv::Mat::zeros(sz, CV_32FC3 );\n\tIdiffF = cv::Mat::zeros(sz, CV_32FC3 );\n\tIprevF = cv::Mat::zeros(sz, CV_32FC3 );\n\tIhiF = cv::Mat::zeros(sz, CV_32FC3 );\n\tIlowF = cv::Mat::zeros(sz, CV_32FC3 );\n\tIcount = 0.00001; // Protect against divide by zero\n\ttmp = cv::Mat::zeros( sz, CV_32FC3 );\n\ttmp2 = cv::Mat::zeros( sz, CV_32FC3 );\n\tImaskt = cv::Mat( sz, CV_32FC1 );\n}\n\n// Learn the background statistics for one more frame\n// I is a color sample of the background, 3-channel, 8u\n//\nvoid accumulateBackground( cv::Mat& I ){\n\tstatic int first = 1; // nb. Not thread safe\n\tI.convertTo( tmp, CV_32F ); // convert to float\n\tif( !first ){\n\t\tIavgF += tmp;\n\t\tcv::absdiff( tmp, IprevF, tmp2 );\n\t\tIdiffF += tmp2;\n\t\tIcount += 1.0;\n\t}\n\tfirst = 0;\n\tIprevF = tmp;\n}\n\nvoid setHighThreshold( float scale ) {\n\tIhiF = IavgF + (IdiffF * scale);\n\tcv::split( IhiF, Ihi );\n}\n\nvoid setLowThreshold( float scale ) {\n\tIlowF = IavgF - (IdiffF * scale);\n\tcv::split( IlowF, Ilow );\n}\n\nvoid createModelsfromStats() {\n\tIavgF *= (1.0/Icount);\n\tIdiffF *= (1.0/Icount);\n\t\n\t// Make sure diff is always something\n\t//\n\tIdiffF += cv::Scalar( 1.0, 1.0, 1.0 );\n\tsetHighThreshold( high_thresh);\n\tsetLowThreshold( low_thresh);\n}\n\n\n// Create a binary: 0,255 mask where 255 (red) means foreground pixel\n// I      Input image, 3-channel, 8u\n// Imask  Mask image to be created, 1-channel 8u\n//\nvoid backgroundDiff(\n\t\tcv::Mat& I,\n\t\tcv::Mat& Imask) {\n\t\n\tI.convertTo( tmp, CV_32F ); // To float\n\tcv::split( tmp, Igray );\n\t\n\t// Channel 1\n\t//\n\tcv::inRange( Igray[0], Ilow[0], Ihi[0], Imask );\n\n\t// Channel 2\n\t//\n\tcv::inRange( Igray[1], Ilow[1], Ihi[1], Imaskt );\n\tImask = cv::min( Imask, Imaskt );\n\n\t// Channel 3\n\t//\n\tcv::inRange( Igray[2], Ilow[2], Ihi[2], Imaskt );\n\tImask = cv::min( Imask, Imaskt );\n\n\t// Finally, invert the results\n\t//\n\tImask = 255 - Imask;\n}\n\n///////////////////\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t<< \"Train a background model on  the first <#frames to train on> frames of an incoming video, then run the model\\n\"\n\t<< argv[0] <<\" <#frames to train on> <avi_path/filename>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" 50 ../tree.avi\\n\"\n\t<< \"'A' or 'a' to adjust thresholds, esc, 'q' or 'Q' to quit\"\n\t<< endl;\n}\n\nvoid showForgroundInRed( char** argv, const cv::Mat &img) {\n\t\tcv::Mat rawImage;\n\t\tcv::split( img, Igray );\n\t\tIgray[2] = cv::max( mask, Igray[2] );\n\t\tcv::merge( Igray, rawImage );\n\t\tcv::imshow( argv[0], rawImage );\n\t\tcv::imshow(\"Segmentation\", mask);\n}\n\nvoid adjustThresholds(char** argv, cv::Mat &img) {\n\tint key = 1;\n\twhile((key = cv::waitKey()) != 27 && key != 'Q' && key != 'q')  // Esc or Q or q to exit\n\t{\n\t\tif(key == 'L') { low_thresh += 0.2;}\n\t\tif(key == 'l') { low_thresh -= 0.2;}\t\n\t\tif(key == 'H') { high_thresh += 0.2;}\n\t\tif(key == 'h') { high_thresh -= 0.2;}\n\t\tcout << \"H or h, L or l, esq or q to quit;  high_thresh = \" << high_thresh << \", \" << \"low_thresh = \" << low_thresh << endl;\n\t\tsetHighThreshold(high_thresh);\n\t\tsetLowThreshold(low_thresh);\n\t\tbackgroundDiff(img, mask);\n\t\tshowForgroundInRed(argv, img);\n\t}\n}\n\n////////////////////////////////////////////////////////////////\nint main( int argc, char** argv) {\n\tcv::namedWindow( argv[0], cv::WINDOW_AUTOSIZE );\n\tcv::VideoCapture cap;\n\tif((argc < 3)|| !cap.open(argv[2])) {\n\t\tcerr << \"Couldn't run the program\" << endl;\n\t\thelp(argv);\n\t\tcap.open(0);\n\t\treturn -1;\n\t}\n\tint number_to_train_on = atoi( argv[1] );\n\n\t// FIRST PROCESSING LOOP (TRAINING):\n\t//\n\tint frame_count = 0;\n\tint key;\n\tbool first_frame = true;\n\tcout << \"Total frames to train on = \" << number_to_train_on << endl; //db\n\twhile(1) {\n\t\tcout << \"frame#: \" << frame_count << endl;\n\t\tcap >> image;\n\t\tif( !image.data ) exit(1); // Something went wrong, abort\n\t\tif(frame_count == 0) { AllocateImages(image);}\n\t\taccumulateBackground( image );\n\t\tcv::imshow( argv[0], image );\n\t\tframe_count++;\n\t\tif( (key = cv::waitKey(7)) == 27 || key == 'q' || key == 'Q' || frame_count >= number_to_train_on) break; //Allow early exit on space, esc, q\n\t}\n\n\t// We have accumulated our training, now create the models\n\t//\n\tcout << \"Creating the background model\" << endl;\n\tcreateModelsfromStats();\n\tcout << \"Done!  Hit any key to continue into single step. Hit 'a' or 'A' to adjust thresholds, esq, 'q' or 'Q' to quit\\n\" << endl;\n\t\n\t// SECOND PROCESSING LOOP (TESTING):\n\t//\n\tcv::namedWindow(\"Segmentation\", cv::WINDOW_AUTOSIZE ); //For the mask image\n\twhile((key = cv::waitKey()) != 27 || key == 'q' || key == 'Q'  ) { // esc, 'q' or 'Q' to exit\n\t\tcap >> image;\n\t\tif( !image.data ) exit(0);\n\t\tcout <<  frame_count++ << endl;\n\t\tbackgroundDiff( image, mask );\n\t\tcv::imshow(\"Segmentation\", mask);\n\n\t\t// A simple visualization is to write to the red channel\n\t\t//\n\t\tshowForgroundInRed( argv, image);\n\t\tif(key == 'a') {\n\t\t\tcout << \"In adjust thresholds, 'H' or 'h' == high thresh up or down; 'L' or 'l' for low thresh up or down.\" << endl;\n\t\t\tcout << \" esq, 'q' or 'Q' to quit \" << endl;\n\t\t\tadjustThresholds(argv, image);\n\t\t\tcout << \"Done with adjustThreshold, back to frame stepping, esq, q or Q to quit.\" << endl;\n\t\t}\n\t}\n\texit(0);\n}\n"
        },
        {
          "name": "example_15-03.cpp",
          "type": "blob",
          "size": 7.9208984375,
          "content": "//Example 15-3. Computing the on and off-diagonal elements of a variance/covariance model\n#include <opencv2/opencv.hpp>\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n\nusing namespace std;\n\nvector<cv::Mat> planes(3);\nvector<cv::Mat> sums(3);\nvector<cv::Mat> xysums(6);\ncv::Mat sum, sqsum;\nint image_count = 0;\n\n//A function to accumulate\n// the information we need for our variance computation:\n//\nvoid accumulateVariance(\n\tcv::Mat& I) {\n\tif( sum.empty() ) {\n\t\tsum = cv::Mat::zeros( I.size(), CV_32FC(I.channels()) );\n\t\tsqsum = cv::Mat::zeros( I.size(), CV_32FC(I.channels()) );\n\t\timage_count = 0;\n\t}\n\tcv::accumulate( I, sum );\n\tcv::accumulateSquare( I, sqsum );\n\timage_count++;\n}\n\n//The associated variance computation function would then be:\n// (note that 'variance' is sigma^2)\n//\nvoid computeVariance(\n\tcv::Mat& variance) {\n\tdouble one_by_N = 1.0 / image_count;\n\tvariance = (one_by_N * sqsum) - ((one_by_N * one_by_N) * sum.mul(sum));\n}\n\n//Same as above function, but compute standard deviation\nvoid computeStdev(\n\tcv::Mat& std__) {\n\tdouble one_by_N = 1.0 / image_count;\n\tcv::sqrt(((one_by_N * sqsum) -((one_by_N * one_by_N) * sum.mul(sum))), std__);\n}\n\n//And avg images\nvoid computeAvg(\n\tcv::Mat& av) {\n\tdouble one_by_N = 1.0 / image_count;\n\tav = one_by_N * sum;\n}\n\t\n// ===================================================================//\n\n\nvoid accumulateCovariance(\ncv::Mat& I\n) {\n\tint i, j, n;\n\n\tif( sum.empty() ) {\n\t\timage_count = 0;\n\t\tfor( i=0; i<3; i++ ) {\n\t\t\t// the r, g, and b sums\n\t\t\tsums[i]\n\t\t\t= cv::Mat::zeros( I.size(), CV_32FC1 );\n\t\t}\n\t\tfor( n=0; n<6; n++ ) {\n\t\t\t// the rr, rg, rb, gg, gb, and bb elements\n\t\t\txysums[n] = cv::Mat::zeros( I.size(), CV_32FC1 );\n\t\t}\n\t}\n\tcv::split( I, planes );\n\tfor( i=0; i<3; i++ ) {\n\t\tcv::accumulate( planes[i], sums[i] );\n\t}\n\tn = 0;\n\tfor( i=0; i<3; i++ ) {\n\t\t// \"row\" of Sigma\n\t\tfor( j=i; j<3; j++ ) {\n\t\t\t// \"column\" of Sigma\n\t\t\tn++;\n\t\t\tcv::accumulateProduct( planes[i], planes[j], xysums[n] );\n\t\t}\n\t}\n\timage_count++;\n}\n\n//The corresponding compute function is also just a slight extension of \n//the compute function for the variances we saw earlier.\n//   note that 'variance' is sigma^2\n//\nvoid computeCoariance(\n\tcv::Mat& covariance\n\t// a six-channel array, channels are the\n\t// rr, rg, rb, gg, gb, and bb elements of Sigma_xy\n) {\n\tdouble one_by_N = 1.0 / image_count;\n\t\n\t// reuse the xysum arrays as storage for individual entries\n\t//\n\tint n = 0;\n\tfor( int i=0; i<3; i++ ) {\n\t\t// \"row\" of Sigma\n\t\tfor( int j=i; j<3; j++ ) {\n\t\t\t// \"column\" of Sigma\n\t\t\tn++;\n\t\t\txysums[n] = (one_by_N * xysums[n])\n\t\t\t- ((one_by_N * one_by_N) * sums[i].mul(sums[j]));\n\t\t}\n\t}\n\t\n\t// reassemble the six individual elements into a six-channel array\n\t//\n\tcv::merge( xysums, covariance );\n}\n\n////////////////////////////////////////////////////////////////////////\n/////////////Utilities to run///////////////////////////////////////////\n\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t<< \"Compute mean and std on <#frames to train on> frames of an incoming video, then run the model\\n\"\n\t<< argv[0] <<\" <#frames to train on> <avi_path/filename>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" 50 ../tree.avi\\n\"\n\t<< \"'a' to adjust thresholds, esc, 'q' or 'Q' to quit\"\n\t<< endl;\n}\n\t\n//////////////  Borrowed code from example_15-02  //////////////////////\n\n// Global storage\n//\n// Float, 3-channel images\n//\ncv::Mat image; // movie frame\ncv::Mat IavgF, IdiffF, IhiF, IlowF; //threshold\ncv::Mat tmp, mask; //scratch and our mask\n\n// Float, 1-channel images\n//\nvector<cv::Mat> Igray(3); //scratch to split image\nvector<cv::Mat> Ilow(3);//low per pixel thresh\nvector<cv::Mat> Ihi(3); //high per pixel thresh\n\n// Byte, 1-channel image\n//\ncv::Mat Imaskt; //Temp mask\n\n// Thresholds\n//\nfloat high_thresh = 21.0;  //scaling the thesholds in backgroundDiff()\nfloat low_thresh = 2.0;    //\n\n// I is just a sample image for allocation purposes\n// (passed in for sizing)\n//\nvoid AllocateImages( const cv::Mat& I ) {\n\tcv::Size sz = I.size();\n\tIavgF = cv::Mat::zeros(sz, CV_32FC3 ); \n\tIdiffF = cv::Mat::zeros(sz, CV_32FC3 ); \n\tIhiF = cv::Mat::zeros(sz, CV_32FC3 ); \n\tIlowF = cv::Mat::zeros(sz, CV_32FC3 );\n\ttmp = cv::Mat::zeros( sz, CV_32FC3 ); \n\tImaskt = cv::Mat( sz, CV_32FC1 ); \n}\n\n\nvoid setHighThreshold( float scale ) {\n\tIhiF = IavgF + (IdiffF * scale);\n\tcv::split( IhiF, Ihi );\n}\n\nvoid setLowThreshold( float scale ) {\n\tIlowF = IavgF - (IdiffF * scale);\n\tcv::split( IlowF, Ilow );\n}\n\nvoid createModelsfromStats() {\n\t//IavgF is already set;\n\t//IdiffF is the standard deviation image...\n\t\n\t// Make sure diff is always something\n\t//\n\tIdiffF += cv::Scalar( 0.1, 0.1, 0.1 );\n\tsetHighThreshold( high_thresh);\n\tsetLowThreshold( low_thresh);\n}\n\n\n// Create a binary: 0,255 mask where 255 (red) means foreground pixel\n// I      Input image, 3-channel, 8u\n// Imask  Mask image to be created, 1-channel 8u\n//\nvoid backgroundDiff(\n\t\tcv::Mat& I,\n\t\tcv::Mat& Imask) {\n\t\n\tI.convertTo( tmp, CV_32F ); // To float\n\tcv::split( tmp, Igray );\n\t\n\t// Channel 1\n\t//\n\tcv::inRange( Igray[0], Ilow[0], Ihi[0], Imask );\n\n\t// Channel 2\n\t//\n\tcv::inRange( Igray[1], Ilow[1], Ihi[1], Imaskt );\n\tImask = cv::min( Imask, Imaskt );\n\n\t// Channel 3\n\t//\n\tcv::inRange( Igray[2], Ilow[2], Ihi[2], Imaskt );\n\tImask = cv::min( Imask, Imaskt );\n\n\t// Finally, invert the results\n\t//\n\tImask = 255 - Imask;\n}\n\n\nvoid showForgroundInRed( char** argv, const cv::Mat &img) {\n\t\tcv::Mat rawImage;\n\t\tcv::split( img, Igray );\n\t\tIgray[2] = cv::max( mask, Igray[2] );\n\t\tcv::merge( Igray, rawImage );\n\t\tcv::imshow( argv[0], rawImage );\n\t\tcv::imshow(\"Segmentation\", mask);\n}\n\nvoid adjustThresholds(char** argv, cv::Mat &img) {\n\tint key = 1;\n\twhile((key = cv::waitKey()) != 27 && key != 'Q' && key != 'q')  // Esc or Q or q to exit\n\t{\n\t\tif(key == 'L') { low_thresh += 0.2;}\n\t\tif(key == 'l') { low_thresh -= 0.2;}\t\n\t\tif(key == 'H') { high_thresh += 0.2;}\n\t\tif(key == 'h') { high_thresh -= 0.2;}\n\t\tcout << \"H or h, L or l, esq or q to quit;  high_thresh = \" << high_thresh << \", \" << \"low_thresh = \" << low_thresh << endl;\n\t\tsetHighThreshold(high_thresh);\n\t\tsetLowThreshold(low_thresh);\n\t\tbackgroundDiff(img, mask);\n\t\tshowForgroundInRed(argv, img);\n\t}\n}\n\nint main( int argc, char** argv) {\n\tcv::namedWindow( argv[0], cv::WINDOW_AUTOSIZE );\n\tcv::VideoCapture cap;\n\tif((argc < 3)|| !cap.open(argv[2])) {\n\t\tcerr << \"Couldn't run the program\" << endl;\n\t\thelp(argv);\n\t\tcap.open(0);\n\t\treturn -1;\n\t}\n\tint number_to_train_on = atoi( argv[1] );\n\n\t// FIRST PROCESSING LOOP (TRAINING):\n\t//\n\tint image_count = 0;\n\tint key;\n\tbool first_frame = true;\n\tcout << \"Total frames to train on = \" << number_to_train_on << endl; //db\n\twhile(1) {\n\t\tcout << \"frame#: \" << image_count << endl;\n\t\tcap >> image;\n\t\tif( !image.data ) exit(1); // Something went wrong, abort\n\t\tif(image_count == 0) AllocateImages( image ); \n\t\taccumulateVariance(image);\n\t\tcv::imshow( argv[0], image );\n\t\timage_count++;\n\t\tif( (key = cv::waitKey(7)) == 27 || key == 'q' || key == 'Q' || image_count >= number_to_train_on) break; //Allow early exit on space, esc, q\n\t}\n\n\t// We have accumulated our training, now create the models\n\t//\n\tcout << \"Creating the background model\" << endl;\n\tcomputeAvg(IavgF);\n\tcomputeStdev(IdiffF);\n\tcreateModelsfromStats();\n\tcout << \"Done!  Hit any key to continue into single step. Hit 'a' or 'A' to adjust thresholds, esq, 'q' or 'Q' to quit\\n\" << endl;\n\n\t// SECOND PROCESSING LOOP (TESTING):\n\t//\n\tcv::namedWindow(\"Segmentation\", cv::WINDOW_AUTOSIZE ); //For the mask image\n\twhile((key = cv::waitKey()) != 27 || key == 'q' || key == 'Q'  ) { // esc, 'q' or 'Q' to exit\n\t\tcap >> image;\n\t\tif( !image.data ) exit(0);\n\t\tcout <<  image_count++ << endl;\n\t\tbackgroundDiff( image, mask );\n\t\tcv::imshow(\"Segmentation\", mask);\n\t\t\n\t\t// A simple visualization is to write to the red channel\n\t\t//\n\t\tshowForgroundInRed( argv, image);\n\t\tif(key == 'a') {\n\t\t\tcout << \"In adjust thresholds, 'H' or 'h' == high thresh up or down; 'L' or 'l' for low thresh up or down.\" << endl;\n\t\t\tcout << \" esq, 'q' or 'Q' to quit \" << endl;\n\t\t\tadjustThresholds(argv, image);\n\t\t\tcout << \"Done with adjustThreshold, back to frame stepping, esq, q or Q to quit.\" << endl;\n\t\t}\n\t}\n\texit(0);\n}\n\n\t\n"
        },
        {
          "name": "example_15-04.cpp",
          "type": "blob",
          "size": 14.0166015625,
          "content": "//Example 15-4. Codebook algorithm implementation\n#include <opencv2/opencv.hpp>\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n\nusing namespace std;\n\n#define CHANNELS 3\t\t\t//Always 3 because yuv\nint cbBounds[CHANNELS];\t\t// IF pixel is within this bound outside of codebook, learn it, else form new code\nint minMod[CHANNELS];\t\t// If pixel is lower than a codebook by this amount, it's matched\nint maxMod[CHANNELS];\t\t// If pixel is high than a codebook by this amount, it's matched\n\n\n//The variable t counts the number of points we’ve accumulated since the start or the last\n//clear operation. Here’s how the actual codebook elements are described:\n//\nclass CodeElement {\n\tpublic:\n\t\tuchar learnHigh[CHANNELS];\t//High side threshold for learning\n\t\tuchar learnLow[CHANNELS];\t//Low side threshold for learning\n\t\tuchar max[CHANNELS];\t\t//High side of box boundary\n\t\tuchar min[CHANNELS];\t\t//Low side of box boundary\n\t\tint t_last_update;\t\t\t//Allow us to kill stale entries\n\t\tint stale; \t\t\t\t\t//max negative run (longest period of inactivity)\n\n\t\tCodeElement() {\n\t\t\tfor(int i = 0; i < CHANNELS; i++)\n\t\t\t\tlearnHigh[i] = learnLow[i] = max[i] = min[i] = 0;\n\t\t\tt_last_update = stale = 0;\n\t\t}\n\t\t\n\t\tCodeElement& operator=( const CodeElement& ce ) {\n\t\t\tfor(int i=0; i<CHANNELS; i++ ) {\n\t\t\t\tlearnHigh[i] = ce.learnHigh[i];\n\t\t\t\tlearnLow[i] = ce.learnLow[i];\n\t\t\t\tmin[i] = ce.min[i];\n\t\t\t\tmax[i] = ce.max[i];\n\t\t\t}\n\t\t\tt_last_update = ce.t_last_update;\n\t\t\tstale = ce.stale;\n\t\t\treturn *this;\n\t\t}\n\t\t\n\t\tCodeElement( const CodeElement& ce ) { *this = ce; }\n};\n\n// You need one of these for each pixel in the video image (rowXcol)\n//\nclass CodeBook : public vector<CodeElement> {\n\tpublic:\n\tint t;     //Count of every image learned on\n\t\n\t// count every access\n\tCodeBook() { t=0; }\n\t\n\t// Default is an empty book\n\tCodeBook( int n ) : vector<CodeElement>(n) { t=0; } // Construct book of size n\n};\n\n\n// Updates the codebook entry with a new data point\n// Note: cbBounds must be of length equal to numChannels\n//\n//\nint updateCodebook(  \t// return CodeBook index\n\tconst cv::Vec3b& p, // incoming YUV pixel\n\tCodeBook& c, \t\t// CodeBook for the pixel\n\tint* cbBounds,\t// Bounds for codebook (usually: {10,10,10})\n\tint numChannels \t// Number of color channels we're learning\n\t) {\n\tif(c.size() == 0) \n\t\tc.t = 0;\n\tc.t += 1;\t\t//Record learning event\n\t//SET HIGH AND LOW BOUNDS\n\tunsigned int high[3], low[3], n;\n\tfor( n=0; n<numChannels; n++ ) {\n\t\thigh[n] = p[n] + *(cbBounds+n); \n\t\tif( high[n] > 255 ) high[n] = 255;\n\t\tlow[n] = p[n] - *(cbBounds+n);\n\t\tif( low[n] < 0) low[n] = 0;\n\t}\n\t\n\t// SEE IF THIS FITS AN EXISTING CODEWORD\n\t//\n\tint i;\n\tint matchChannel;\n\tfor( i=0; i<c.size(); i++ ) {\n\t\tmatchChannel = 0;\n\t\tfor( n=0; n<numChannels; n++ ) {\n\t\t\tif( // Found an entry for this channel\n\t\t\t\t( c[i].learnLow[n] <= p[n] ) && ( p[n] <= c[i].learnHigh[n]))\n\t\t\t\tmatchChannel++;\n\t\t\t}\n\t\t\n\t\tif( matchChannel == numChannels ) {// If an entry was found\n\t\t\tc[i].t_last_update = c.t; \n\t\t\t\n\t\t\t// adjust this codeword for the first channel\n\t\t\t//\n\t\t\tfor( n=0; n<numChannels; n++ ) {\n\t\t\t\tif( c[i].max[n] < p[n] )\n\t\t\t\t\tc[i].max[n] = p[n];\n\t\t\t\telse if( c[i].min[n] > p[n] ) \n\t\t\t\t\tc[i].min[n] = p[n];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t// OVERHEAD TO TRACK POTENTIAL STALE ENTRIES\n\t//\n\tfor( int s=0; s<c.size(); s++ ) {\n\t\n\t\t// Track which codebook entries are going stale:\n\t\t//\n\t\tint negRun = c.t - c[s].t_last_update;\n\t\tif( c[s].stale < negRun ) c[s].stale = negRun;\n\t}\n\t\n\t// ENTER A NEW CODEWORD IF NEEDED\n\t//\n\tif( i == c.size() ) {\n\t\t// if no existing codeword found, make one\n\t\tCodeElement ce;\n\t\tfor( n=0; n<numChannels; n++ ) {\n\t\t\tce.learnHigh[n] = high[n];\n\t\t\tce.learnLow[n] = low[n];\n\t\t\tce.max[n] = p[n];\n\t\t\tce.min[n] = p[n];\n\t\t}\n\t\t\tce.t_last_update = c.t;\n\t\t\tce.stale = 0;\n\t\t\tc.push_back( ce );\n\t}\n\t\n\t// SLOWLY ADJUST LEARNING BOUNDS\n\t//\n\tfor( n=0; n<numChannels; n++ ) {\n\t\tif( c[i].learnHigh[n] < high[n]) c[i].learnHigh[n] += 1;\n\t\tif( c[i].learnLow[n] > low[n] ) c[i].learnLow[n] -= 1;\n\t}\n\treturn c.size();\n}\n\n// During learning, after you've learned for some period of time,\n// periodically call this to clear out stale codebook entries\n//\nint foo = 0;\nint clearStaleEntries(\n\t// return number of entries cleared\n\tCodeBook &c\n\t// Codebook to clean up\n){\n\tint staleThresh = c.t>>1;\n\tint *keep = new int[c.size()];\n\tint keepCnt = 0;\n\t\n\t// SEE WHICH CODEBOOK ENTRIES ARE TOO STALE\n\t//\n\tint foogo2 = 0;\n\tfor( int i=0; i<c.size(); i++ ){\n\t\tif(c[i].stale > staleThresh) \n\t\t\tkeep[i] = 0; // Mark for destruction\n\t\telse\n\t\t{\n\t\t\tkeep[i] = 1; // Mark to keep\n\t\t\tkeepCnt += 1;\n\t\t}\n\t}\n\t\n\t// move the entries we want to keep to the front of the vector and then\n\t// truncate to the correct length once all of the good stuff is saved.\n\t//\n\tint k = 0;\n\tint numCleared = 0;\n\tfor( int ii=0; ii<c.size(); ii++ ) {\n\t\tif( keep[ii] ) {\n\t\t\tc[k] = c[ii];\n\t\t\t// We have to refresh these entries for next clearStale\n\t\t\tc[k].t_last_update = 0;\n\t\t\tk++;\n\t\t} else {\n\t\t\tnumCleared++;\n\t\t}\n\t}\n\tc.resize( keepCnt );\n\tdelete[] keep;\n\treturn numCleared;\n}\n\t\n// Given a pixel and a codebook, determine whether the pixel is\n// covered by the codebook\n//\n// NOTES:\n// minMod and maxMod must have length numChannels,\n// e.g. 3 channels => minMod[3], maxMod[3]. There is one min and\n//      one max threshold per channel.\n// \nuchar backgroundDiff( // return 0 => background, 255 => foreground\nconst cv::Vec3b& p,   // Pixel (YUV)\nCodeBook& c,          // Codebook\nint numChannels,      // Number of channels we are testing\nint* minMod_,          // Add this (possibly negative) number onto max level\n                      //    when determining whether new pixel is foreground\nint* maxMod_           // Subtract this (possibly negative) number from min\n                      //    level when determining whether new pixel is\n                      //    foreground\n) {\n\tint matchChannel;\n\t\n\t// SEE IF THIS FITS AN EXISTING CODEWORD\n\t//\n\tint i;\n\tfor( i=0; i<c.size(); i++ ) {\n\t\tmatchChannel = 0;\n\t\tfor( int n=0; n<numChannels; n++ ) {\n\t\t\tif((c[i].min[n] - minMod_[n] <= p[n] ) && (p[n] <= c[i].max[n] + maxMod_[n]))\n\t\t\t{\n\t\t\t\tmatchChannel++; // Found an entry for this channel\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(matchChannel == numChannels) {\n\t\t\tbreak; // Found an entry that matched all channels\n\t\t}\n\t}\n\tif( i >= c.size() )\t//No match with codebook => foreground\n\t\treturn 255;\n\treturn 0; \t\t\t//Else background\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////// This part adds a \"main\" to run the above code. ////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Just make a convienience class (assumes image will not change size in video);\nclass CbBackgroudDiff {\n\tpublic:\n\tcv::Mat Iyuv;\t\t\t\t\t//Will hold the yuv converted image \n\tcv::Mat mask;\t\t\t\t\t//Will hold the background difference mask\n\tvector<CodeBook> codebooks;   \t//Will hold a CodeBook for each pixel\n\tint row, col, image_length;\t\t//How many pixels are in the image\n\t\n\t//Constructor\n\tvoid init(cv::Mat &I_from_video) {\n\t\tvector<int> v(3,10);\n\t\tset_global_vecs(cbBounds, v);\n\t\tv[0] = 6; v[1] = 20; v[2] = 8; //Just some decent defaults for low side\n\t\tset_global_vecs(minMod, v);\n\t\tv[0] = 70; v[1] = 20; v[2] = 6; //Decent defaults for high side\n\t\tset_global_vecs(maxMod, v);\n\t\tIyuv.create(I_from_video.size(), I_from_video.type());\n\t\tmask.create(I_from_video.size(), CV_8UC1);\n\t\trow = I_from_video.rows;\n\t\tcol = I_from_video.cols;\n\t\timage_length = row*col;\n\t\tcout << \"(row,col,len) = (\" << row << \", \" << col << \", \" << image_length << \")\" << endl;\n\t\tcodebooks.resize(image_length);\n\t}\n\t\n\tCbBackgroudDiff(cv::Mat &I_from_video) {\n\t\tinit(I_from_video);\n\t}\n\t\n\tCbBackgroudDiff(){};\n\t\n\t//Convert to YUV\n\tvoid convert_to_yuv(cv::Mat &Irgb)\n\t{\n\t\tcvtColor(Irgb, Iyuv, cv::COLOR_BGR2YUV);\n\t}\n\t\n\tint size_check(cv::Mat &I) { //Check that image doesn't change size, return -1 if size doesn't match, else 0\n\t\tint ret = 0;\n\t\tif((row != I.rows) || (col != I.cols)) {\n\t\t\tcerr << \"ERROR: Size changed! old[\" << row << \", \" << col << \"], now [\" << I.rows << \", \" << I.cols << \"]!\" << endl;\n\t\t\tret = -1;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t//Utilities for setting gloabals\n\tvoid set_global_vecs(int *globalvec, vector<int> &vec) {\n\t\tif(vec.size() != CHANNELS) {\n\t\t\tcerr << \"Input vec[\" << vec.size() << \"] should equal CHANNELS [\" << CHANNELS << \"]\" << endl;\n\t\t\tvec.resize(CHANNELS, 10);\n\t\t}\n\t\tint i = 0;\n\t\tfor (vector<int>::iterator it = vec.begin(); it != vec.end(); ++it, ++i) {\n\t\t\t globalvec[i] = *it;\n\t\t }\n\t }\n\n\t//Background operations\n\tint updateCodebookBackground(cv::Mat &Irgb) { //Learn codebook, -1 if error, else total # of codes\n\t\tconvert_to_yuv(Irgb);\n\t\tif(size_check(Irgb))\n\t\t\treturn -1;\n\t\tint total_codebooks = 0;\n\t\tcv::Mat_<cv::Vec3b>::iterator Iit = Iyuv.begin<cv::Vec3b>(), IitEnd = Iyuv.end<cv::Vec3b>();\n\t\tvector<CodeBook>::iterator Cit = codebooks.begin(), CitEnd = codebooks.end();\n\t\tfor(; Iit != IitEnd; ++Iit,++Cit) {\n\t\t\ttotal_codebooks += updateCodebook(*Iit,*Cit,cbBounds,CHANNELS);\n\t\t}\n\t\tif(Cit != CitEnd)\n\t\t\tcerr << \"ERROR: Cit != CitEnd in updateCodeBackground(...) \" << endl;\n\t\treturn(total_codebooks);\n\t}\n\n\tint clearStaleEntriesBackground() { //Clean out stuff that hasn't been updated for a long time\n\t\tint total_cleared = 0;\n\t\tvector<CodeBook>::iterator Cit = codebooks.begin(), CitEnd = codebooks.end();\n\t\tfor(; Cit != CitEnd; ++Cit) {\n\t\t\ttotal_cleared += clearStaleEntries(*Cit);\n\t\t}\n\t\treturn(total_cleared);\n\t}\n\n\tint backgroundDiffBackground(cv::Mat &Irgb) {  //Take the background difference of the image\n\t\tconvert_to_yuv(Irgb);\n\t\tif(size_check(Irgb))\n\t\t\treturn -1;\n\t\tcv::Mat_<cv::Vec3b>::iterator Iit = Iyuv.begin<cv::Vec3b>(), IitEnd = Iyuv.end<cv::Vec3b>();\n\t\tvector<CodeBook>::iterator Cit = codebooks.begin(), CitEnd = codebooks.end();\n\t\tcv::Mat_<uchar>::iterator Mit = mask.begin<uchar>(), MitEnd = mask.end<uchar>();\n\t\tfor(; Iit != IitEnd; ++Iit,++Cit,++Mit) {\n\t\t\t*Mit = backgroundDiff(*Iit,*Cit,CHANNELS,minMod,maxMod);\n\t\t}\n\t\tif((Cit != CitEnd)||(Mit != MitEnd)){\n\t\t\tcerr << \"ERROR: Cit != CitEnd and, or Mit != MitEnd in updateCodeBackground(...) \" << endl;\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t}\n}; // end CbBackgroudDiff\n\n\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t<< \"Train a codebook background model on the first <#frames to train on> frames of an incoming video, then run the model\\n\"\n\t<< argv[0] <<\" <#frames to train on> <avi_path/filename>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" 50 ../tree.avi\\n\"\n\t<< \"'A' or 'a' to adjust thresholds, esc, 'q' or 'Q' to quit\"\n\t<< endl;\n}\n\n//Adjusting the distance you have to be on the low side (minMod) or high side (maxMod) of a codebook\n//to be considered as recognized/background\n//\nvoid adjustThresholds(char* charstr, cv::Mat &Irgb, CbBackgroudDiff &bgd) {\n\tint key = 1;\n\tint y = 1,u = 0,v = 0, index = 0, thresh = 0;\n\tif(thresh)\n\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] maxMod active\" << endl;\n\telse\n\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] minMod active\" << endl;\n\tcout << \"minMod[\" << minMod[0] << \"][\" << minMod[1] << \"][\" << minMod[2] << \"]\" << endl;\n\tcout << \"maxMod[\" << maxMod[0] << \"][\" << maxMod[1] << \"][\" << maxMod[2] << \"]\" << endl;\n\twhile((key = cv::waitKey()) != 27 && key != 'Q' && key != 'q')  // Esc or Q or q to exit\n\t{\n\t\tif(thresh)\n\t\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] maxMod active\" << endl;\n\t\telse\n\t\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] minMod active\" << endl;\n\t\tcout << \"minMod[\" << minMod[0] << \"][\" << minMod[1] << \"][\" << minMod[2] << \"]\" << endl;\n\t\tcout << \"maxMod[\" << maxMod[0] << \"][\" << maxMod[1] << \"][\" << maxMod[2] << \"]\" << endl;\n\t\t\n\t\tif(key == 'y') { y = 1; u = 0; v = 0; index = 0;}\n\t\tif(key == 'u') { y = 0; u = 1; v = 0; index = 1;}\n\t\tif(key == 'v') { y = 0; u = 0; v = 1; index = 2;}\n\t\tif(key == 'l') { thresh = 0;} //minMod\n\t\tif(key == 'h') { thresh = 1;} //maxMod\n\t\tif(key == '.') { //Up\n\t\t\tif(thresh == 0) { minMod[index] += 4;}\n\t\t\tif(thresh == 1) { maxMod[index] += 4;}\n\t\t}\n\t\tif(key == ',') { //Down\n\t\t\tif(thresh == 0) { minMod[index] -= 4;}\n\t\t\tif(thresh == 1) { maxMod[index] -= 4;}\n\t\t}\n\t\tcout << \"y,u,v for channel; l for minMod, h for maxMod threshold; , for down, . for up; esq or q to quit;\" << endl;\n\t\tbgd.backgroundDiffBackground(Irgb);\n\t\tcv::imshow(charstr, bgd.mask);\n\t}\n}\n\n\n////////////////////////////////////////////////////////////////\nint main( int argc, char** argv) {\n\tcv::namedWindow( argv[0], cv::WINDOW_AUTOSIZE );\n\tcv::VideoCapture cap;\n\tif((argc < 3)|| !cap.open(argv[2])) {\n\t\tcerr << \"Couldn't run the program\" << endl;\n\t\thelp(argv);\n\t\tcap.open(0);\n\t\treturn -1;\n\t}\n\tint number_to_train_on = atoi( argv[1] );\n\tcv::Mat image; \n\tCbBackgroudDiff bgd;\n\n\t// FIRST PROCESSING LOOP (TRAINING):\n\t//\n\tint frame_count = 0;\n\tint key;\n\tbool first_frame = true;\n\tcout << \"Total frames to train on = \" << number_to_train_on << endl; //db\n\tchar seg[] = \"Segmentation\";\n\twhile(1) {\n\t\tcout << \"frame#: \" << frame_count;\n\t\tcap >> image;\n\t\tif( !image.data ) exit(1); // Something went wrong, abort\n\t\tif(frame_count == 0) { bgd.init(image);}\n\t\t\n\t\tcout << \", Codebooks: \" << bgd.updateCodebookBackground(image) << endl;\n\t\t\n\t\tcv::imshow( argv[0], image );\n\t\tframe_count++;\n\t\tif( (key = cv::waitKey(7)) == 27 || key == 'q' || key == 'Q' || frame_count >= number_to_train_on) break; //Allow early exit on space, esc, q\n\t}\n\n\t// We have accumulated our training, now create the models\n\t//\n\tcout << \"Created the background model\" << endl;\n\tcout << \"Total entries cleared = \" << bgd.clearStaleEntriesBackground() << endl;\n\tcout << \"Press a key to start background differencing, 'a' to set thresholds, esc or q or Q to quit\" << endl;\n\t\n\t// SECOND PROCESSING LOOP (TESTING):\n\t//\n\tcv::namedWindow( seg, cv::WINDOW_AUTOSIZE );\n\twhile((key = cv::waitKey()) != 27 || key == 'q' || key == 'Q'  ) { // esc, 'q' or 'Q' to exit\n\t\tcap >> image;\n\t\tif( !image.data ) exit(0);\n\t\tcout <<  frame_count++ << \" 'a' to adjust threholds\" << endl;\n\t\tif(key == 'a') {\n\t\t\tcout << \"Adjusting thresholds\" << endl;\n\t\tcout << \"y,u,v for channel; l for minMod, h for maxMod threshold; , for down, . for up; esq or q to quit;\" << endl;\n\t\t\tadjustThresholds(seg,image,bgd);\n\t\t}\n\t\telse {\n\t\t\tif(bgd.backgroundDiffBackground(image)) {\n\t\t\t\tcerr << \"ERROR, bdg.backgroundDiffBackground(...) failed\" << endl;\n\t\t\t\texit(-1);\n\t\t\t}\n\t\t}\n\t\tcv::imshow(\"Segmentation\",bgd.mask);\n\t}\n\texit(0);\n}\n\n\n\n\n"
        },
        {
          "name": "example_15-05.cpp",
          "type": "blob",
          "size": 17.5380859375,
          "content": "// Example 15-5. Cleanup using connected components\n// This cleans up the foreground segmentation mask derived from calls\n// to backgroundDiff\n//\n#include <opencv2/opencv.hpp>\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n\nusing namespace std;\n\n// polygons will be simplified using DP algorithm with 'epsilon' a fixed\n// fraction of the polygon's length. This number is that divisor.\n//\n#define DP_EPSILON_DENOMINATOR 20.0\n// How many iterations of erosion and/or dilation there should be\n//\n#define CVCLOSE_ITR 1\t\n\nvoid findConnectedComponents(\n\tcv::Mat& mask,\t\t\t\t// Is a grayscale (8-bit depth) \"raw\" mask image\n\t\t\t\t\t\t\t\t// that will be cleaned up\n\tint poly1_hull0,\t \t\t// If set, approximate connected component by\n\t\t\t\t\t\t\t\t// (DEFAULT: 1) polygon, or else convex hull (0)\n\tfloat perimScale, \t\t\t// Len = (width+height)/perimScale. If contour\n\t\t\t\t\t\t\t\t// len < this, delete that contour (DEFAULT: 4)\n\tvector<cv::Rect>& bbs,\t\t// Ref to bounding box rectangle return vector\n\tvector<cv::Point>& centers\t// Ref to contour centers return vector\n\t) {\n\tbbs.clear();\n\tcenters.clear();\n\t\n\t// CLEAN UP RAW MASK\n\t//\n\tcv::morphologyEx(\n\t\tmask, mask, cv::MORPH_OPEN, cv::Mat(), cv::Point(-1,-1), CVCLOSE_ITR);\n\tcv::morphologyEx(\n\t\tmask, mask, cv::MORPH_CLOSE, cv::Mat(), cv::Point(-1,-1), CVCLOSE_ITR);\n\n\t\n\t// FIND CONTOURS AROUND ONLY BIGGER REGIONS\n\t//\n\tvector< vector<cv::Point> > contours_all; // all contours found\n\tvector< vector<cv::Point> > contours;\n\n\t// just the ones we want to keep \n\tcv::findContours( mask,\tcontours_all, cv::RETR_EXTERNAL,\n\t\tcv::CHAIN_APPROX_SIMPLE);\n\n\tfor( vector< vector<cv::Point> >::iterator c = contours_all.begin();\n\t\t\tc != contours_all.end(); ++c) {\n\t\t\t\n\t\t// length of this contour\n\t\t//\n\t\tint len = cv::arcLength( *c, true );\n\t\t\n\t\t// length threshold a fraction of image perimeter\n\t\t//\n\t\tdouble q = (mask.rows + mask.cols) / DP_EPSILON_DENOMINATOR;\t\n\t\tif( len >= q ) { // If the contour is long enough to keep...\n\t\t\tvector<cv::Point> c_new;\n\t\t\tif( poly1_hull0 ) {\n\t\t\t\t// If the caller wants results as reduced polygons...\n\t\t\t\tcv::approxPolyDP( *c, c_new, len/200.0, true );\n\t\t\t} else {\n\t\t\t\t// Convex Hull of the segmentation\n\t\t\t\tcv::convexHull( *c, c_new );\n\t\t\t}\n\t\t\tcontours.push_back(c_new );\n\t\t}\n\t}\n\n\t// Just some convenience variables\n\tconst cv::Scalar CVX_WHITE(0xff,0xff,0xff);\n\tconst cv::Scalar CVX_BLACK(0x00,0x00,0x00);\n\t\n\t// CALC CENTER OF MASS AND/OR BOUNDING RECTANGLES\n\t//\n\tint idx = 0;\n\tcv::Moments moments;\n\tcv::Mat scratch = mask.clone();\n\tfor(vector< vector<cv::Point> >::iterator c = contours.begin();\n\t\tc != contours.end(); c++, idx++) {\n\t\tcv::drawContours( scratch, contours, idx, CVX_WHITE, cv::FILLED);\n\t\t\n\t\t// Find the center of each contour\n\t\t//\n\t\tmoments = cv::moments( scratch, true );\n\t\tcv::Point p;\n\t\tp.x = (int)( moments.m10 / moments.m00 );\n\t\tp.y = (int)( moments.m01 / moments.m00 );\n\t\tcenters.push_back(p);\n\t\tbbs.push_back( cv::boundingRect(*c) );\n\t\tscratch.setTo( 0 );\n\t}\n\n\t// PAINT THE FOUND REGIONS BACK INTO THE IMAGE\n\t//\n\tmask.setTo( 0 );\n\tcv::drawContours( mask, contours, -1, CVX_WHITE, cv::FILLED );\n}\t\t\n\n////////////////////////////////////////////////////////////////////////\n////////// Use previous example_15-04 and clean up its images //////////\n////////////////////////////////////////////////////////////////////////\n\n\n#define CHANNELS 3\t\t\t//Always 3 because yuv\nint cbBounds[CHANNELS];\t\t// IF pixel is within this bound outside of codebook, learn it, else form new code\nint minMod[CHANNELS];\t\t// If pixel is lower than a codebook by this amount, it's matched\nint maxMod[CHANNELS];\t\t// If pixel is high than a codebook by this amount, it's matched\n\n\n//The variable t counts the number of points we’ve accumulated since the start or the last\n//clear operation. Here’s how the actual codebook elements are described:\n//\nclass CodeElement {\n\tpublic:\n\t\tuchar learnHigh[CHANNELS];\t//High side threshold for learning\n\t\tuchar learnLow[CHANNELS];\t//Low side threshold for learning\n\t\tuchar max[CHANNELS];\t\t//High side of box boundary\n\t\tuchar min[CHANNELS];\t\t//Low side of box boundary\n\t\tint t_last_update;\t\t\t//Allow us to kill stale entries\n\t\tint stale; \t\t\t\t\t//max negative run (longest period of inactivity)\n\n\t\tCodeElement() {\n\t\t\tfor(int i = 0; i < CHANNELS; i++)\n\t\t\t\tlearnHigh[i] = learnLow[i] = max[i] = min[i] = 0;\n\t\t\tt_last_update = stale = 0;\n\t\t}\n\t\t\n\t\tCodeElement& operator=( const CodeElement& ce ) {\n\t\t\tfor(int i=0; i<CHANNELS; i++ ) {\n\t\t\t\tlearnHigh[i] = ce.learnHigh[i];\n\t\t\t\tlearnLow[i] = ce.learnLow[i];\n\t\t\t\tmin[i] = ce.min[i];\n\t\t\t\tmax[i] = ce.max[i];\n\t\t\t}\n\t\t\tt_last_update = ce.t_last_update;\n\t\t\tstale = ce.stale;\n\t\t\treturn *this;\n\t\t}\n\t\t\n\t\tCodeElement( const CodeElement& ce ) { *this = ce; }\n};\n\n// You need one of these for each pixel in the video image (rowXcol)\n//\nclass CodeBook : public vector<CodeElement> {\n\tpublic:\n\tint t;     //Count of every image learned on\n\t\n\t// count every access\n\tCodeBook() { t=0; }\n\t\n\t// Default is an empty book\n\tCodeBook( int n ) : vector<CodeElement>(n) { t=0; } // Construct book of size n\n};\n\n\n// Updates the codebook entry with a new data point\n// Note: cbBounds must be of length equal to numChannels\n//\n//\nint updateCodebook(  \t// return CodeBook index\n\tconst cv::Vec3b& p, // incoming YUV pixel\n\tCodeBook& c, \t\t// CodeBook for the pixel\n\tint* cbBounds,\t// Bounds for codebook (usually: {10,10,10})\n\tint numChannels \t// Number of color channels we're learning\n\t) {\n\tif(c.size() == 0) \n\t\tc.t = 0;\n\tc.t += 1;\t\t//Record learning event\n\t//SET HIGH AND LOW BOUNDS\n\tunsigned int high[3], low[3], n;\n\tfor( n=0; n<numChannels; n++ ) {\n\t\thigh[n] = p[n] + *(cbBounds+n); \n\t\tif( high[n] > 255 ) high[n] = 255;\n\t\tlow[n] = p[n] - *(cbBounds+n);\n\t\tif( low[n] < 0) low[n] = 0;\n\t}\n\t\n\t// SEE IF THIS FITS AN EXISTING CODEWORD\n\t//\n\tint i;\n\tint matchChannel;\n\tfor( i=0; i<c.size(); i++ ) {\n\t\tmatchChannel = 0;\n\t\tfor( n=0; n<numChannels; n++ ) {\n\t\t\tif( // Found an entry for this channel\n\t\t\t\t( c[i].learnLow[n] <= p[n] ) && ( p[n] <= c[i].learnHigh[n]))\n\t\t\t\tmatchChannel++;\n\t\t\t}\n\t\t\n\t\tif( matchChannel == numChannels ) {// If an entry was found\n\t\t\tc[i].t_last_update = c.t; \n\t\t\t\n\t\t\t// adjust this codeword for the first channel\n\t\t\t//\n\t\t\tfor( n=0; n<numChannels; n++ ) {\n\t\t\t\tif( c[i].max[n] < p[n] )\n\t\t\t\t\tc[i].max[n] = p[n];\n\t\t\t\telse if( c[i].min[n] > p[n] ) \n\t\t\t\t\tc[i].min[n] = p[n];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t// OVERHEAD TO TRACK POTENTIAL STALE ENTRIES\n\t//\n\tfor( int s=0; s<c.size(); s++ ) {\n\t\n\t\t// Track which codebook entries are going stale:\n\t\t//\n\t\tint negRun = c.t - c[s].t_last_update;\n\t\tif( c[s].stale < negRun ) c[s].stale = negRun;\n\t}\n\t\n\t// ENTER A NEW CODEWORD IF NEEDED\n\t//\n\tif( i == c.size() ) {\n\t\t// if no existing codeword found, make one\n\t\tCodeElement ce;\n\t\tfor( n=0; n<numChannels; n++ ) {\n\t\t\tce.learnHigh[n] = high[n];\n\t\t\tce.learnLow[n] = low[n];\n\t\t\tce.max[n] = p[n];\n\t\t\tce.min[n] = p[n];\n\t\t}\n\t\t\tce.t_last_update = c.t;\n\t\t\tce.stale = 0;\n\t\t\tc.push_back( ce );\n\t}\n\t\n\t// SLOWLY ADJUST LEARNING BOUNDS\n\t//\n\tfor( n=0; n<numChannels; n++ ) {\n\t\tif( c[i].learnHigh[n] < high[n]) c[i].learnHigh[n] += 1;\n\t\tif( c[i].learnLow[n] > low[n] ) c[i].learnLow[n] -= 1;\n\t}\n\treturn c.size();\n}\n\n// During learning, after you've learned for some period of time,\n// periodically call this to clear out stale codebook entries\n//\nint foo = 0;\nint clearStaleEntries(\n\t// return number of entries cleared\n\tCodeBook &c\n\t// Codebook to clean up\n){\n\tint staleThresh = c.t>>1;\n\tint *keep = new int[c.size()];\n\tint keepCnt = 0;\n\t\n\t// SEE WHICH CODEBOOK ENTRIES ARE TOO STALE\n\t//\n\tint foogo2 = 0;\n\tfor( int i=0; i<c.size(); i++ ){\n\t\tif(c[i].stale > staleThresh) \n\t\t\tkeep[i] = 0; // Mark for destruction\n\t\telse\n\t\t{\n\t\t\tkeep[i] = 1; // Mark to keep\n\t\t\tkeepCnt += 1;\n\t\t}\n\t}\n\t\n\t// move the entries we want to keep to the front of the vector and then\n\t// truncate to the correct length once all of the good stuff is saved.\n\t//\n\tint k = 0;\n\tint numCleared = 0;\n\tfor( int ii=0; ii<c.size(); ii++ ) {\n\t\tif( keep[ii] ) {\n\t\t\tc[k] = c[ii];\n\t\t\t// We have to refresh these entries for next clearStale\n\t\t\tc[k].t_last_update = 0;\n\t\t\tk++;\n\t\t} else {\n\t\t\tnumCleared++;\n\t\t}\n\t}\n\tc.resize( keepCnt );\n\tdelete[] keep;\n\treturn numCleared;\n}\n\t\n// Given a pixel and a codebook, determine whether the pixel is\n// covered by the codebook\n//\n// NOTES:\n// minMod and maxMod must have length numChannels,\n// e.g. 3 channels => minMod[3], maxMod[3]. There is one min and\n//      one max threshold per channel.\n// \nuchar backgroundDiff( // return 0 => background, 255 => foreground\nconst cv::Vec3b& p,   // Pixel (YUV)\nCodeBook& c,          // Codebook\nint numChannels,      // Number of channels we are testing\nint* minMod_,          // Add this (possibly negative) number onto max level\n                      //    when determining whether new pixel is foreground\nint* maxMod_           // Subtract this (possibly negative) number from min\n                      //    level when determining whether new pixel is\n                      //    foreground\n) {\n\tint matchChannel;\n\t\n\t// SEE IF THIS FITS AN EXISTING CODEWORD\n\t//\n\tint i;\n\tfor( i=0; i<c.size(); i++ ) {\n\t\tmatchChannel = 0;\n\t\tfor( int n=0; n<numChannels; n++ ) {\n\t\t\tif((c[i].min[n] - minMod_[n] <= p[n] ) && (p[n] <= c[i].max[n] + maxMod_[n]))\n\t\t\t{\n\t\t\t\tmatchChannel++; // Found an entry for this channel\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(matchChannel == numChannels) {\n\t\t\tbreak; // Found an entry that matched all channels\n\t\t}\n\t}\n\tif( i >= c.size() )\t//No match with codebook => foreground\n\t\treturn 255;\n\treturn 0; \t\t\t//Else background\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////// This part adds a \"main\" to run the above code. ////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Just make a convienience class (assumes image will not change size in video);\nclass CbBackgroudDiff {\n\tpublic:\n\tcv::Mat Iyuv;\t\t\t\t\t//Will hold the yuv converted image \n\tcv::Mat mask;\t\t\t\t\t//Will hold the background difference mask\n\tvector<CodeBook> codebooks;   \t//Will hold a CodeBook for each pixel\n\tint row, col, image_length;\t\t//How many pixels are in the image\n\t\n\t//Constructor\n\tvoid init(cv::Mat &I_from_video) {\n\t\tvector<int> v(3,10);\n\t\tset_global_vecs(cbBounds, v);\n\t\tv[0] = 6; v[1] = 20; v[2] = 8; //Just some decent defaults for low side\n\t\tset_global_vecs(minMod, v);\n\t\tv[0] = 70; v[1] = 20; v[2] = 6; //Decent defaults for high side\n\t\tset_global_vecs(maxMod, v);\n\t\tIyuv.create(I_from_video.size(), I_from_video.type());\n\t\tmask.create(I_from_video.size(), CV_8UC1);\n\t\trow = I_from_video.rows;\n\t\tcol = I_from_video.cols;\n\t\timage_length = row*col;\n\t\tcout << \"(row,col,len) = (\" << row << \", \" << col << \", \" << image_length << \")\" << endl;\n\t\tcodebooks.resize(image_length);\n\t}\n\t\n\tCbBackgroudDiff(cv::Mat &I_from_video) {\n\t\tinit(I_from_video);\n\t}\n\t\n\tCbBackgroudDiff(){};\n\t\n\t//Convert to YUV\n\tvoid convert_to_yuv(cv::Mat &Irgb)\n\t{\n\t\tcvtColor(Irgb, Iyuv, cv::COLOR_BGR2YUV);\n\t}\n\t\n\tint size_check(cv::Mat &I) { //Check that image doesn't change size, return -1 if size doesn't match, else 0\n\t\tint ret = 0;\n\t\tif((row != I.rows) || (col != I.cols)) {\n\t\t\tcerr << \"ERROR: Size changed! old[\" << row << \", \" << col << \"], now [\" << I.rows << \", \" << I.cols << \"]!\" << endl;\n\t\t\tret = -1;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t//Utilities for setting gloabals\n\tvoid set_global_vecs(int *globalvec, vector<int> &vec) {\n\t\tif(vec.size() != CHANNELS) {\n\t\t\tcerr << \"Input vec[\" << vec.size() << \"] should equal CHANNELS [\" << CHANNELS << \"]\" << endl;\n\t\t\tvec.resize(CHANNELS, 10);\n\t\t}\n\t\tint i = 0;\n\t\tfor (vector<int>::iterator it = vec.begin(); it != vec.end(); ++it, ++i) {\n\t\t\t globalvec[i] = *it;\n\t\t }\n\t }\n\n\t//Background operations\n\tint updateCodebookBackground(cv::Mat &Irgb) { //Learn codebook, -1 if error, else total # of codes\n\t\tconvert_to_yuv(Irgb);\n\t\tif(size_check(Irgb))\n\t\t\treturn -1;\n\t\tint total_codebooks = 0;\n\t\tcv::Mat_<cv::Vec3b>::iterator Iit = Iyuv.begin<cv::Vec3b>(), IitEnd = Iyuv.end<cv::Vec3b>();\n\t\tvector<CodeBook>::iterator Cit = codebooks.begin(), CitEnd = codebooks.end();\n\t\tfor(; Iit != IitEnd; ++Iit,++Cit) {\n\t\t\ttotal_codebooks += updateCodebook(*Iit,*Cit,cbBounds,CHANNELS);\n\t\t}\n\t\tif(Cit != CitEnd)\n\t\t\tcerr << \"ERROR: Cit != CitEnd in updateCodeBackground(...) \" << endl;\n\t\treturn(total_codebooks);\n\t}\n\n\tint clearStaleEntriesBackground() { //Clean out stuff that hasn't been updated for a long time\n\t\tint total_cleared = 0;\n\t\tvector<CodeBook>::iterator Cit = codebooks.begin(), CitEnd = codebooks.end();\n\t\tfor(; Cit != CitEnd; ++Cit) {\n\t\t\ttotal_cleared += clearStaleEntries(*Cit);\n\t\t}\n\t\treturn(total_cleared);\n\t}\n\n\tint backgroundDiffBackground(cv::Mat &Irgb) {  //Take the background difference of the image\n\t\tconvert_to_yuv(Irgb);\n\t\tif(size_check(Irgb))\n\t\t\treturn -1;\n\t\tcv::Mat_<cv::Vec3b>::iterator Iit = Iyuv.begin<cv::Vec3b>(), IitEnd = Iyuv.end<cv::Vec3b>();\n\t\tvector<CodeBook>::iterator Cit = codebooks.begin(), CitEnd = codebooks.end();\n\t\tcv::Mat_<uchar>::iterator Mit = mask.begin<uchar>(), MitEnd = mask.end<uchar>();\n\t\tfor(; Iit != IitEnd; ++Iit,++Cit,++Mit) {\n\t\t\t*Mit = backgroundDiff(*Iit,*Cit,CHANNELS,minMod,maxMod);\n\t\t}\n\t\tif((Cit != CitEnd)||(Mit != MitEnd)){\n\t\t\tcerr << \"ERROR: Cit != CitEnd and, or Mit != MitEnd in updateCodeBackground(...) \" << endl;\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t}\n}; // end CbBackgroudDiff\n\n\nvoid help(char** argv ) {\n\tcout << \"\\n\"\n\t<< \"We test out our connected components algorithm using the background code from example_0=15-04\\n\"\n\t<< \"First we train a codebook background model on the first <#frames to train on> frames\"\n\t<< \" of an incoming video, then run the model on it cleaning it up with findConnectedComponents\\n\"\n\t<< argv[0] <<\" <#frames to train on> <avi_path/filename>\\n\"\n\t<< \"For example:\\n\"\n\t<< argv[0] << \" 50 ../tree.avi\\n\"\n\t<< \"'A' or 'a' to adjust thresholds, esc, 'q' or 'Q' to quit\"\n\t<< endl;\n}\n\n//Adjusting the distance you have to be on the low side (minMod) or high side (maxMod) of a codebook\n//to be considered as recognized/background\n//\nvoid adjustThresholds(char* charstr, cv::Mat &Irgb, CbBackgroudDiff &bgd) {\n\tint key = 1;\n\tint y = 1,u = 0,v = 0, index = 0, thresh = 0;\n\tif(thresh)\n\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] maxMod active\" << endl;\n\telse\n\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] minMod active\" << endl;\n\tcout << \"minMod[\" << minMod[0] << \"][\" << minMod[1] << \"][\" << minMod[2] << \"]\" << endl;\n\tcout << \"maxMod[\" << maxMod[0] << \"][\" << maxMod[1] << \"][\" << maxMod[2] << \"]\" << endl;\n\twhile((key = cv::waitKey()) != 27 && key != 'Q' && key != 'q')  // Esc or Q or q to exit\n\t{\n\t\tif(thresh)\n\t\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] maxMod active\" << endl;\n\t\telse\n\t\t\tcout << \"yuv[\" << y << \"][\" << u << \"][\" << v << \"] minMod active\" << endl;\n\t\tcout << \"minMod[\" << minMod[0] << \"][\" << minMod[1] << \"][\" << minMod[2] << \"]\" << endl;\n\t\tcout << \"maxMod[\" << maxMod[0] << \"][\" << maxMod[1] << \"][\" << maxMod[2] << \"]\" << endl;\n\t\t\n\t\tif(key == 'y') { y = 1; u = 0; v = 0; index = 0;}\n\t\tif(key == 'u') { y = 0; u = 1; v = 0; index = 1;}\n\t\tif(key == 'v') { y = 0; u = 0; v = 1; index = 2;}\n\t\tif(key == 'l') { thresh = 0;} //minMod\n\t\tif(key == 'h') { thresh = 1;} //maxMod\n\t\tif(key == '.') { //Up\n\t\t\tif(thresh == 0) { minMod[index] += 4;}\n\t\t\tif(thresh == 1) { maxMod[index] += 4;}\n\t\t}\n\t\tif(key == ',') { //Down\n\t\t\tif(thresh == 0) { minMod[index] -= 4;}\n\t\t\tif(thresh == 1) { maxMod[index] -= 4;}\n\t\t}\n\t\tcout << \"y,u,v for channel; l for minMod, h for maxMod threshold; , for down, . for up; esq or q to quit;\" << endl;\n\t\tbgd.backgroundDiffBackground(Irgb);\n\t\tcv::imshow(charstr, bgd.mask);\n\t}\n}\n\n\n////////////////////////////////////////////////////////////////\nvector<cv::Rect> bbs;\t\t// Ref to bounding box rectangle return vector\nvector<cv::Point> centers;\t// Ref to contour centers return vector\n\n\nint main( int argc, char** argv) {\n\tcv::namedWindow( argv[0], cv::WINDOW_AUTOSIZE );\n\tcv::VideoCapture cap;\n\tif((argc < 3)|| !cap.open(argv[2])) {\n\t\tcerr << \"Couldn't run the program\" << endl;\n\t\thelp(argv);\n\t\tcap.open(0);\n\t\treturn -1;\n\t}\n\tint number_to_train_on = atoi( argv[1] );\n\tcv::Mat image; \n\tCbBackgroudDiff bgd;\n\n\t// FIRST PROCESSING LOOP (TRAINING):\n\t//\n\tint frame_count = 0;\n\tint key;\n\tbool first_frame = true;\n\tcout << \"Total frames to train on = \" << number_to_train_on << endl;\n\tchar seg[] = \"Segmentation\";\n\twhile(1) {\n\t\tcout << \"frame#: \" << frame_count;\n\t\tcap >> image;\n\t\tif( !image.data ) exit(1); // Something went wrong, abort\n\t\tif(frame_count == 0) { bgd.init(image);}\n\t\t\n\t\tcout << \", Codebooks: \" << bgd.updateCodebookBackground(image) << endl;\n\t\t\n\t\tcv::imshow( argv[0], image );\n\t\tframe_count++;\n\t\tif( (key = cv::waitKey(7)) == 27 || key == 'q' || key == 'Q' || frame_count >= number_to_train_on) break; //Allow early exit on space, esc, q\n\t}\n\n\t// We have accumulated our training, now create the models\n\t//\n\tcout << \"Created the background model\" << endl;\n\tcout << \"Total entries cleared = \" << bgd.clearStaleEntriesBackground() << endl;\n\tcout << \"Press a key to start background differencing, 'a' to set thresholds, esc or q or Q to quit\" << endl;\n\t\n\t// SECOND PROCESSING LOOP (TESTING):\n\t//\n\tcv::namedWindow( seg, cv::WINDOW_AUTOSIZE );\n\tcv::namedWindow(\"Conected Components\", cv::WINDOW_AUTOSIZE);\n\twhile((key = cv::waitKey()) != 27 || key == 'q' || key == 'Q'  ) { // esc, 'q' or 'Q' to exit\n\t\tcap >> image;\n\t\tif( !image.data ) exit(0);\n\t\tcout <<  frame_count++ << \" 'a' to adjust threholds\" << endl;\n\t\tif(key == 'a') {\n\t\t\tcout << \"Adjusting thresholds\" << endl;\n\t\tcout << \"y,u,v for channel; l for minMod, h for maxMod threshold; , for down, . for up; esq or q to quit;\" << endl;\n\t\t\tadjustThresholds(seg,image,bgd);\n\t\t}\n\t\telse {\n\t\t\tif(bgd.backgroundDiffBackground(image)) {\n\t\t\t\tcerr << \"ERROR, bdg.backgroundDiffBackground(...) failed\" << endl;\n\t\t\t\texit(-1);\n\t\t\t}\n\t\t}\n\t\tcv::imshow(\"Segmentation\",bgd.mask);\n\t\tfindConnectedComponents(bgd.mask, 1, 4, bbs, centers);\n\t\tcv::imshow(\"Conected Components\", bgd.mask);\n\t}\n\texit(0);\n}\n\n\n\n\n"
        },
        {
          "name": "example_15-BackgroundSubtractor.cpp",
          "type": "blob",
          "size": 9.064453125,
          "content": "// EXTRA Example 15-6, using OpenCV's background subtractor class.  Modified by Gary Bradski, 6/4/2017\n#include \"opencv2/imgcodecs.hpp\"\n#include \"opencv2/imgproc.hpp\"\n#include \"opencv2/videoio.hpp\"\n#include <opencv2/highgui.hpp>\n#include <opencv2/video.hpp>\n\n//C\n#include <stdio.h>\n//C++\n#include <iostream>\n#include <sstream>\nusing namespace cv;\nusing namespace std;\n// Global variables\nMat frame; //current frame\nMat fgMaskMOG2; //fg mask fg mask generated by MOG2 method\nMat theBackground; //Will hold the current background image as seen from the model\n\nPtr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor\nint keyboard; //input from keyboard\nvoid help();\nvoid processVideo(char* videoFilename, int train);\nvoid processImages(char* firstFrameFilename, int train);\nvoid help()\n{\n    cout\n    << \"\\n-----------Taken from tutorial_background_subtraction.html---------------\\n\"  << endl\n    << \"This program shows how to use background subtraction methods provided by \"  << endl\n    << \" OpenCV (BackgroundSubtractor class). \"                                     << endl\n    << \"You can process both videos (-vid) and images (-img).\"                      << endl\n    << \"   We pass it #framesTraining which is the number of frames or images to train on before starting background subtraction\\n\"\n                                                                                    << endl\n    << \"Usage:\"                                                                     << endl\n    << \"./example_15-BackgroundSubtractor {<#framesTraining> -vid <video filename>|-img <image filename>}\\n\"  << endl\n    << \"for example: ./example_15-BackgroundSubtractor 50 -vid ../tree.avi\"         << endl\n    << \"or: ./example_15-BackgroundSubtractor 20 -img /data/images/1.png\"           << endl\n    << \"\\n\" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<< endl\n    << \"This file demonstrates the MOG2 class, you can go to opencv docs to see\"    << endl\n    << \"other techniques. Each technique has it's own way of setting thresholds etc.\"<< endl\n    << \"We keep it generic here, so the results are mediocre. You must go in and\"   << endl\n    << \"look up how to set the particular thresholds etc to get good results!\"      << endl\n    << \"--------------------------------------------------------------------------\" << endl\n    << endl;\n}\nint main(int argc, char* argv[])\n{\n    //print help information\n    help();\n    //check for the input parameter correctness\n    if(argc != 4) {\n        cerr <<\"Incorret input list\" << endl;\n        cerr <<\"exiting...\" << endl;\n        return EXIT_FAILURE;\n    }\n    //create GUI windows\n    namedWindow(\"Frame\");\n    namedWindow(\"theBackground\");\n    namedWindow(\"FG Mask MOG 2\");\n\n   \tint number_to_train_on = atoi( argv[1] ); //Read the number of frames to train on\n\n    //create Background Subtractor objects\n    pMOG2 = createBackgroundSubtractorMOG2(); //MOG2 approach\n    if(strcmp(argv[2], \"-vid\") == 0) {\n        //input data coming from a video\n        processVideo(argv[3], number_to_train_on);\n    }\n    else if(strcmp(argv[2], \"-img\") == 0) {\n        //input data coming from a sequence of images\n        processImages(argv[3], number_to_train_on);\n    }\n    else {\n        //error in reading input parameters\n        cerr <<\"Please, check the input parameters.\" << endl;\n        cerr <<\"Exiting...\" << endl;\n        return EXIT_FAILURE;\n    }\n    //destroy GUI windows\n    destroyAllWindows();\n    return EXIT_SUCCESS;\n}\nvoid processVideo(char* videoFilename, int train) {\n    //create the capture object\n    VideoCapture capture(videoFilename);\n    if(!capture.isOpened()){\n        //error in opening the video input\n        cerr << \"Unable to open video file: \" << videoFilename << endl;\n        exit(EXIT_FAILURE);\n    }\n    //read input data. ESC or 'q' for quitting\n    double learning_rate = 0.1;\n    int frame_count = 0;\n    while( (char)keyboard != 'q' && (char)keyboard != 27 ){\n        //read the current frame\n        if(!capture.read(frame)) {\n            cerr << \"Unable to read next frame.\" << endl;\n            cerr << \"Exiting...\" << endl;\n            exit(EXIT_FAILURE);\n        }\n        frame_count = int(capture.get(CAP_PROP_POS_FRAMES)); //get frame#\n        //update the background model\n        //\n        //NOTE: This file just demonstrates the generic methods, each class\n        //      Has specific ways of setting thresholds etc to make it work well.\n        //      You must go into the documentation (for MOG2, see classcv_1_1BackgroundSubtractorMOG2\n        //      if you want to get good results!\n        //\n        if(frame_count == train) { learning_rate = 0;} //stop learning after training\n        pMOG2->apply(frame, fgMaskMOG2, learning_rate);\n        //get the frame number and write it on the current frame\n        stringstream ss;\n        rectangle(frame, cv::Point(10, 2), cv::Point(100,20),\n                  cv::Scalar(255,255,255), -1);\n        ss << capture.get(CAP_PROP_POS_FRAMES);\n        string frameNumberString = ss.str();\n        putText(frame, frameNumberString.c_str(), cv::Point(15, 15),\n                FONT_HERSHEY_SIMPLEX, 0.5 , cv::Scalar(0,0,0));\n        //show the current frame and the fg masks\n        imshow(\"Frame\", frame);\n        imshow(\"FG Mask MOG 2\", fgMaskMOG2);\n        pMOG2->getBackgroundImage(theBackground); //Get an image of the model's background\n        imshow(\"theBackground\",theBackground);\n        \n/* By uncommenting this, you can write out the mask images        \n\t\tstring imageToSave = \"output_MOG_\" + frameNumberString + \".png\";\n\t\tbool saved = imwrite(imageToSave, fgMaskMOG);\n\t\tif(!saved) {\n\t\t  cerr << \"Unable to save \" << imageToSave << endl;\n\t\t}        \n*/\n        //get the input from the keyboard\n        if(frame_count >= train) {\n\t\t\tcout << \"\\nHit any key to continue\\n\" << endl;\n\t\t\tkeyboard = waitKey(); //single step with keyboard press in run mode\n\t\t} else {\n\t\t\tkeyboard = waitKey( 10 ); //run automatically in train mode\n\t\t}\n    }\n    //delete capture object\n    capture.release();\n}\nvoid processImages(char* fistFrameFilename, int train) {\n    //read the first file of the sequence\n    frame = imread(fistFrameFilename);\n    if(frame.empty()){\n        //error in opening the first image\n        cerr << \"Unable to open first image frame: \" << fistFrameFilename << endl;\n        exit(EXIT_FAILURE);\n    }\n    //current image filename\n    string fn(fistFrameFilename);\n    //read input data. ESC or 'q' for quitting\n    double learning_rate = 0.1;\n    int frame_count = 0;\n    while( (char)keyboard != 'q' && (char)keyboard != 27 ){\n\t\t\n        //update the background model\n        //\n        //NOTE: This file just demonstrates the generic methods, each class\n        //      Has specific ways of setting thresholds etc to make it work well.\n        //      You must go into the documentation (for MOG2, see classcv_1_1BackgroundSubtractorMOG2\n        //      if you want to get good results!\n        //\n         if(frame_count == train) { learning_rate = 0;} //stop learning after training\n        pMOG2->apply(frame, fgMaskMOG2, learning_rate);\n        //get the frame number and write it on the current frame\n        size_t index = fn.find_last_of(\"/\");\n        if(index == string::npos) {\n            index = fn.find_last_of(\"\\\\\");\n        }\n        size_t index2 = fn.find_last_of(\".\");\n        string prefix = fn.substr(0,index+1);\n        string suffix = fn.substr(index2);\n        string frameNumberString = fn.substr(index+1, index2-index-1);\n        istringstream iss(frameNumberString);\n        int frameNumber = 0;\n        iss >> frameNumber;\n        rectangle(frame, cv::Point(10, 2), cv::Point(100,20),\n                  cv::Scalar(255,255,255), -1);\n        putText(frame, frameNumberString.c_str(), cv::Point(15, 15),\n                FONT_HERSHEY_SIMPLEX, 0.5 , cv::Scalar(0,0,0));\n        //show the current frame and the fg masks\n        imshow(\"Frame\", frame);\n        imshow(\"FG Mask MOG 2\", fgMaskMOG2);\n        pMOG2->getBackgroundImage(theBackground); //Get an image of the model's background\n        imshow(\"theBackground\",theBackground);\n      \n/* By uncommenting this, you can write out the mask images        \n\t\tstring imageToSave = \"output_MOG_\" + frameNumberString + \".png\";\n\t\tbool saved = imwrite(imageToSave, fgMaskMOG);\n\t\tif(!saved) {\n\t\t  cerr << \"Unable to save \" << imageToSave << endl;\n\t\t}        \n*/\n        \n        //get the input from the keyboard\n        if(frame_count >= train) {\n\t\t\tcout << \"\\nHit any key to continue\\n\" << endl;\n\t\t\tkeyboard = waitKey(); //Single step with keyboard press in test mode\n\t\t} else {\n\t\t\tkeyboard = waitKey( 10 ); //Run automatically in train mode\n\t\t}\n        frame_count += 1;\n        //search for the next image in the sequence\n        ostringstream oss;\n        oss << (frameNumber + 1);\n        string nextFrameNumberString = oss.str();\n        string nextFrameFilename = prefix + nextFrameNumberString + suffix;\n        //read the next frame\n        frame = imread(nextFrameFilename);\n        if(frame.empty()){\n            //error in opening the next image in the sequence\n            cerr << \"Unable to open image frame: \" << nextFrameFilename << endl;\n            exit(EXIT_FAILURE);\n        }\n        //update the path of the current frame\n        fn.assign(nextFrameFilename);\n    }\n}\n"
        },
        {
          "name": "example_16-01-imgA.png",
          "type": "blob",
          "size": 34.3408203125,
          "content": null
        },
        {
          "name": "example_16-01-imgB.png",
          "type": "blob",
          "size": 33.6875,
          "content": null
        },
        {
          "name": "example_16-01.cpp",
          "type": "blob",
          "size": 4.2109375,
          "content": "// Example 16-1. Pyramid L-K optical flow\n//\n#include <iostream>\n#include <vector>\n#include <opencv2/opencv.hpp>\n\nstatic const int MAX_CORNERS = 1000;\nusing std::cout;\nusing std::endl;\nusing std::vector;\n\n\nvoid help( char** argv ) {\n  cout << \"\\nExample 16-1: Pyramid L-K optical flow example.\\n\" << endl;\n  cout << \"Call: \" <<argv[0] <<\" [image1] [image2]\\n\" << endl;\n  cout << \"\\nExample:\\n\" << argv[0] << \" ../example_16-01-imgA.png ../example_16-01-imgB.png\\n\" << endl;\n  cout << \"Demonstrates Pyramid Lucas-Kanade optical flow.\\n\" << endl;\n}\n\nint main(int argc, char** argv) {\n    if (argc != 3) {\n        help(argv);\n        exit(-1);\n    }\n    // Initialize, load two images from the file system, and\n    // allocate the images and other structures we will need for\n    // results.\n    //\n    cv::Mat imgA = cv::imread(argv[1], CV_LOAD_IMAGE_GRAYSCALE);\n    cv::Mat imgB = cv::imread(argv[2], CV_LOAD_IMAGE_GRAYSCALE);\n    cv::Size img_sz = imgA.size();\n    int win_size = 10;\n    cv::Mat imgC = cv::imread(argv[2], CV_LOAD_IMAGE_UNCHANGED);\n    // The first thing we need to do is get the features\n    // we want to track.\n    //\n    vector< cv::Point2f > cornersA, cornersB;\n    const int MAX_CORNERS = 500;\n    cv::goodFeaturesToTrack(\n        imgA,                         // Image to track\n        cornersA,                     // Vector of detected corners (output)\n        MAX_CORNERS,                  // Keep up to this many corners\n        0.01,                         // Quality level (percent of maximum)\n        5,                            // Min distance between corners\n        cv::noArray(),                // Mask\n        3,                            // Block size\n        false,                        // true: Harris, false: Shi-Tomasi\n        0.04                          // method specific parameter\n    );\n\n    cv::cornerSubPix(\n        imgA,                           // Input image\n        cornersA,                       // Vector of corners (input and output)\n        cv::Size(win_size, win_size),   // Half side length of search window\n        cv::Size(-1, -1),               // Half side length of dead zone (-1=none)\n        cv::TermCriteria(\n            cv::TermCriteria::MAX_ITER | cv::TermCriteria::EPS,\n            20,                         // Maximum number of iterations\n            0.03                        // Minimum change per iteration\n        )\n    );\n\n    // Call the Lucas Kanade algorithm\n    //\n    vector<uchar> features_found;\n    cv::calcOpticalFlowPyrLK(\n        imgA,                         // Previous image\n        imgB,                         // Next image\n        cornersA,                     // Previous set of corners (from imgA)\n        cornersB,                     // Next set of corners (from imgB)\n        features_found,               // Output vector, each is 1 for tracked\n        cv::noArray(),                // Output vector, lists errors (optional)\n        cv::Size(win_size * 2 + 1, win_size * 2 + 1),  // Search window size\n        5,                            // Maximum pyramid level to construct\n        cv::TermCriteria(\n            cv::TermCriteria::MAX_ITER | cv::TermCriteria::EPS,\n            20,                         // Maximum number of iterations\n            0.3                         // Minimum change per iteration\n        )\n    );\n\n    // Now make some image of what we are looking at:\n    // Note that if you want to track cornersB further, i.e.\n    // pass them as input to the next calcOpticalFlowPyrLK,\n    // you would need to \"compress\" the vector, i.e., exclude points for which\n    // features_found[i] == false.\n    for (int i = 0; i < static_cast<int>(cornersA.size()); ++i) {\n        if (!features_found[i]) {\n            continue;\n        }\n        line(\n            imgC,                        // Draw onto this image\n            cornersA[i],                 // Starting here\n            cornersB[i],                 // Ending here\n            cv::Scalar(0, 255, 0),       // This color\n            1,                           // This many pixels wide\n            cv::LINE_AA                  // Draw line in this style\n        );\n    }\n\n    cv::imshow(\"ImageA\", imgA);\n    cv::imshow(\"ImageB\", imgB);\n    cv::imshow(\"LK Optical Flow Example\", imgC);\n    cv::waitKey(0);\n\n    return 0;\n}\n"
        },
        {
          "name": "example_16-02.cpp",
          "type": "blob",
          "size": 7.1669921875,
          "content": "// Example 16-2. 2D Feature detectors and 2D Extra Features framework\n//\n// Note, while this code is free to use commercially, not all the algorithms are. For example\n// sift is patented. If you are going to use this commercially, check out the non-free \n// algorithms and secure license to use them.\n//\n\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n#include <algorithm>\n#include <opencv2/opencv.hpp>\n#include <opencv2/objdetect.hpp>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <opencv2/features2d.hpp>\n#include <opencv2/xfeatures2d.hpp>\n#include <opencv2/xfeatures2d/nonfree.hpp>\n#include <opencv2/calib3d.hpp>\n#include <opencv2/imgproc.hpp>\n#include <opencv2/core/utility.hpp>\n#include <opencv2/core/ocl.hpp>\n\nusing std::cout;\nusing std::cerr;\nusing std::vector;\nusing std::string;\n\nusing cv::Mat;\nusing cv::Point2f;\nusing cv::KeyPoint;\nusing cv::Scalar;\nusing cv::Ptr;\n\nusing cv::FastFeatureDetector;\nusing cv::SimpleBlobDetector;\n\nusing cv::DMatch;\nusing cv::BFMatcher;\nusing cv::DrawMatchesFlags;\nusing cv::Feature2D;\nusing cv::ORB;\nusing cv::BRISK;\nusing cv::AKAZE;\nusing cv::KAZE;\n\nusing cv::xfeatures2d::BriefDescriptorExtractor;\nusing cv::xfeatures2d::SURF;\nusing cv::xfeatures2d::SIFT;\nusing cv::xfeatures2d::DAISY;\nusing cv::xfeatures2d::FREAK;\n\nconst double kDistanceCoef = 4.0;\nconst int kMaxMatchingSize = 50;\n\ninline void detect_and_compute(string type, Mat& img, vector<KeyPoint>& kpts, Mat& desc) {\n    if (type.find(\"fast\") == 0) {\n        type = type.substr(4);\n        Ptr<FastFeatureDetector> detector = FastFeatureDetector::create(10, true);\n        detector->detect(img, kpts);\n    }\n    if (type.find(\"blob\") == 0) {\n        type = type.substr(4);\n        Ptr<SimpleBlobDetector> detector = SimpleBlobDetector::create();\n        detector->detect(img, kpts);\n    }\n    if (type == \"surf\") {\n        Ptr<Feature2D> surf = SURF::create(800.0);\n        surf->detectAndCompute(img, Mat(), kpts, desc);\n    }\n    if (type == \"sift\") {\n        Ptr<Feature2D> sift = SIFT::create();\n        sift->detectAndCompute(img, Mat(), kpts, desc);\n    }\n    if (type == \"orb\") {\n        Ptr<ORB> orb = ORB::create();\n        orb->detectAndCompute(img, Mat(), kpts, desc);\n    }\n    if (type == \"brisk\") {\n        Ptr<BRISK> brisk = BRISK::create();\n        brisk->detectAndCompute(img, Mat(), kpts, desc);\n    }\n    if (type == \"kaze\") {\n        Ptr<KAZE> kaze = KAZE::create();\n        kaze->detectAndCompute(img, Mat(), kpts, desc);\n    }\n    if (type == \"akaze\") {\n        Ptr<AKAZE> akaze = AKAZE::create();\n        akaze->detectAndCompute(img, Mat(), kpts, desc);\n    }\n    if (type == \"freak\") {\n        Ptr<FREAK> freak = FREAK::create();\n        freak->compute(img, kpts, desc);\n    }\n    if (type == \"daisy\") {\n        Ptr<DAISY> daisy = DAISY::create();\n        daisy->compute(img, kpts, desc);\n    }\n    if (type == \"brief\") {\n        Ptr<BriefDescriptorExtractor> brief = BriefDescriptorExtractor::create(64);\n        brief->compute(img, kpts, desc);\n    }\n}\n\ninline void match(string type, Mat& desc1, Mat& desc2, vector<DMatch>& matches) {\n    matches.clear();\n    if (type == \"bf\") {\n        BFMatcher desc_matcher(cv::NORM_L2, true);\n        desc_matcher.match(desc1, desc2, matches, Mat());\n    }\n    if (type == \"knn\") {\n        BFMatcher desc_matcher(cv::NORM_L2, true);\n        vector< vector<DMatch> > vmatches;\n        desc_matcher.knnMatch(desc1, desc2, vmatches, 1);\n        for (int i = 0; i < static_cast<int>(vmatches.size()); ++i) {\n            if (!vmatches[i].size()) {\n                continue;\n            }\n            matches.push_back(vmatches[i][0]);\n        }\n    }\n    std::sort(matches.begin(), matches.end());\n    while (matches.front().distance * kDistanceCoef < matches.back().distance) {\n        matches.pop_back();\n    }\n    while (matches.size() > kMaxMatchingSize) {\n        matches.pop_back();\n    }\n}\n\ninline void findKeyPointsHomography(vector<KeyPoint>& kpts1, vector<KeyPoint>& kpts2,\n        vector<DMatch>& matches, vector<char>& match_mask) {\n    if (static_cast<int>(match_mask.size()) < 3) {\n        return;\n    }\n    vector<Point2f> pts1;\n    vector<Point2f> pts2;\n    for (int i = 0; i < static_cast<int>(matches.size()); ++i) {\n        pts1.push_back(kpts1[matches[i].queryIdx].pt);\n        pts2.push_back(kpts2[matches[i].trainIdx].pt);\n    }\n    findHomography(pts1, pts2, cv::RANSAC, 4, match_mask);\n}\n\nint main(int argc, char** argv) {\n    // Program expects at least four arguments:\n    //   - descriptors type (\"surf\", \"sift\", \"orb\", \"brisk\",\n    //          \"kaze\", \"akaze\", \"freak\", \"daisy\", \"brief\").\n    //          For \"brief\", \"freak\" and \"daisy\" you also need a prefix\n    //          that is either \"blob\" or \"fast\" (e.g. \"fastbrief\", \"blobdaisy\")\n    //   - match algorithm (\"bf\", \"knn\")\n    //   - path to the object image file\n    //   - path to the scene image file\n    //\n    if (argc != 5) {\n        cerr << \"\\nError: wrong (you had: \" << argc << \") number of arguments (should be 5).\\n\";\n        cerr    << \"\\nExample 16-2. 2D Feature detectors and 2D Extra Features framework\\n\\n\"\n                << \"Use:\\n\" << argv[0] << \" <descriptors_type> <matching_algirthm> \"\n                << \"<path/image_file1> <path/image_file2>\\n\"\n                << \"To run this demo\\n\\n\"\n                << \"Program expects at least four arguments:\\n\"\n                << \"  - descriptors type (\\\"surf\\\", \\\"sink\\\", \\\"orb\\\", \\\"brisk\\\",\\n\"\n                << \"       \\\"kaze\\\", \\\"akaze\\\", \\\"freak\\\", \\\"daisy\\\", \\\"brief\\\").\\n\"\n                << \"       For \\\"brief\\\", \\\"freak\\\" and \\\"daisy\\\" you also need a prefix\\n\"\n                << \"       that is either \\\"blob\\\" or \\\"fast\\\" (e.g. \\\"fastbrief\\\", \"\n                << \"\\\"blobdaisy\\\")\\n\"\n                << \"  - match algorithm (\\\"bf\\\", \\\"knn\\\")\\n\"\n                << \"  - path to the object image file\\n\"\n                << \"  - path to the scene image file\\n\\n\"\n                << \"Examples:\\n\"\n                << argv[0] << \" surf knn ../box.png ../box_in_scene.png\\n\"\n                << argv[0] << \" fastfreak bf ../box.png ../box_in_scene.png\\n\"\n                << \"\\nNOTE: Not all of these methods are free, check licensing conditions!\\n\\n\"\n                << std::endl;\n        exit(1);\n    }\n\n    string desc_type(argv[1]);\n    string match_type(argv[2]);\n\n    string img_file1(argv[3]);\n    string img_file2(argv[4]);\n\n    Mat img1 = cv::imread(img_file1, CV_LOAD_IMAGE_COLOR);\n    Mat img2 = cv::imread(img_file2, CV_LOAD_IMAGE_COLOR);\n\n    if (img1.channels() != 1) {\n        cvtColor(img1, img1, cv::COLOR_RGB2GRAY);\n    }\n\n    if (img2.channels() != 1) {\n        cvtColor(img2, img2, cv::COLOR_RGB2GRAY);\n    }\n\n    vector<KeyPoint> kpts1;\n    vector<KeyPoint> kpts2;\n\n    Mat desc1;\n    Mat desc2;\n\n    vector<DMatch> matches;\n\n    detect_and_compute(desc_type, img1, kpts1, desc1);\n    detect_and_compute(desc_type, img2, kpts2, desc2);\n\n    match(match_type, desc1, desc2, matches);\n\n    vector<char> match_mask(matches.size(), 1);\n    findKeyPointsHomography(kpts1, kpts2, matches, match_mask);\n\n    Mat res;\n    cv::drawMatches(img1, kpts1, img2, kpts2, matches, res, Scalar::all(-1),\n        Scalar::all(-1), match_mask, DrawMatchesFlags::NOT_DRAW_SINGLE_POINTS);\n\n    cv::imshow(\"result\", res);\n    cv::waitKey(0);\n\n    return 0;\n}\n"
        },
        {
          "name": "example_17-01.cpp",
          "type": "blob",
          "size": 2.998046875,
          "content": "// Example 17-1. Kalman filter example code\n\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n#include <opencv2/opencv.hpp>\n\nusing std::cout;\nusing std::endl;\n\n#define phi2xy(mat) \\\n    cv::Point(cvRound(img.cols / 2 + img.cols / 3 * cos(mat.at<float>(0))), \\\n              cvRound(img.rows / 2 - img.cols / 3 * sin(mat.at<float>(0))))\n\n\nvoid help(char** argv ) {\n    cout << \"\\n\"\n         << \"Example 17-1: code for using cv::KalmanFilter\\n\"\n         << argv[0] << \"\\n\\n\"\n         << \"For example:\\n\"\n         << argv[0] <<\"\\n\\n\"\n         << \"Esc to quit\\n\"\n         << endl;\n}\n\nint main(int argc, char** argv) {\n    help(argv);\n\n    // Initialize, create Kalman filter object, window, random number\n    // generator etc.\n    //\n    cv::Mat img(500, 500, CV_8UC3);\n    cv::KalmanFilter kalman(2, 1, 0);\n\n    // state is (phi, delta_phi) - angle and angular velocity\n    // Initialize with random guess.\n    //\n    cv::Mat x_k(2, 1, CV_32F);\n    randn(x_k, 0.0, 0.1);\n\n    // process noise\n    //\n    cv::Mat w_k(2, 1, CV_32F);\n\n    // measurements, only one parameter for angle\n    //\n    cv::Mat z_k = cv::Mat::zeros(1, 1, CV_32F);\n\n    // Transition matrix 'F' describes relationship between\n    // model parameters at step k and at step k+1 (this is\n    // the \"dynamics\" in our model.\n    //\n    float F[] = {1, 1, 0, 1};\n    kalman.transitionMatrix = cv::Mat(2, 2, CV_32F, F).clone();\n\n    // Initialize other Kalman filter parameters.\n    //\n    cv::setIdentity(kalman.measurementMatrix, cv::Scalar(1));\n    cv::setIdentity(kalman.processNoiseCov, cv::Scalar(1e-5));\n    cv::setIdentity(kalman.measurementNoiseCov, cv::Scalar(1e-1));\n    cv::setIdentity(kalman.errorCovPost, cv::Scalar(1));\n\n    // choose random initial state\n    //\n    randn(kalman.statePost, 0.0, 0.1);\n\n    for (;;) {\n        // predict point position\n        //\n        cv::Mat y_k = kalman.predict();\n\n        // generate measurement (z_k)\n        //\n        cv::randn(z_k, 0.0,\n            sqrt(static_cast<double>(kalman.measurementNoiseCov.at<float>(0, 0))));\n        z_k = kalman.measurementMatrix*x_k + z_k;\n\n        // plot points (e.g., convert\n        //\n        img = cv::Scalar::all(0);\n        cv::circle(img, phi2xy(z_k), 4, cv::Scalar(128, 255, 255));  // observed\n        cv::circle(img, phi2xy(y_k), 4, cv::Scalar(255, 255, 255), 2);  // predicted\n        cv::circle(img, phi2xy(x_k), 4, cv::Scalar(0, 0, 255));  // actual to\n                                                                 // planar co-ordinates and draw\n\n        cv::imshow(\"Kalman\", img);\n\n        // adjust Kalman filter state\n        //\n        kalman.correct(z_k);\n\n        // Apply the transition matrix 'F' (e.g., step time forward)\n        // and also apply the \"process\" noise w_k\n        //\n        cv::randn(w_k, 0.0, sqrt(static_cast<double>(kalman.processNoiseCov.at<float>(0, 0))));\n        x_k = kalman.transitionMatrix*x_k + w_k;\n\n        // exit if user hits 'Esc'\n        if ((cv::waitKey(100) & 255) == 27) {\n            break;\n        }\n    }\n\n    return 0;\n}\n"
        },
        {
          "name": "example_17-02.cpp",
          "type": "blob",
          "size": 2.974609375,
          "content": "// Example 17-2. Farneback optical flow example code\n\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n#include <opencv2/opencv.hpp>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n\nusing std::cout;\nusing std::cerr;\nusing std::string;\n\n// Argument values for calcOpticalFlowFarneback\n//\nconst double pyr_scale = 0.85;  // Scale between pyramid levels (< 1.0)\nconst int levels = 7;           // Number of pyramid levels\nconst int winsize = 13;         // Size of window for pre-smoothing pass\nconst int iterations = 10;      // Iterations for each pyramid level\nconst int poly_n = 5;           // Area over which polynomial will be fit\nconst double poly_sigma = 1.1;  // Width of fit polygon\n\n// Function returns cv::Mat object with optical flow visualization\n//\ncv::Mat get_optflow_image(cv::Mat& optflow, cv::Mat& img) {\n    cv::Scalar arrow_color(0, 0, 255);\n    cv::Mat res = img.clone();\n    res /= 2;  // making image darker\n    int rows = res.rows;\n    int cols = res.cols;\n    const int step = 12;\n    for (int x = (step >> 1); x < rows; x += step)\n        for (int y = (step >> 1); y < cols; y += step) {\n            float vx = optflow.at<cv::Vec2f>(x, y)[0];\n            float vy = optflow.at<cv::Vec2f>(x, y)[1];\n            cv::Point pt1(y, x);\n            cv::Point pt2(y + vx, x + vy);\n            cv::arrowedLine(res, pt1, pt2, arrow_color, 1);\n        }\n    return res;\n}\n\nint main(int argc, char** argv) {\n    // Program expects at least one argument that is path to video file\n    //\n    if (argc < 2) {\n        cerr \t<< \"\\nExample 17-2: Farnback optical flow example\\n\"\n\t\t\t\t<< \"Use:\\n\" << argv[0] << \" <path/video_file>\\n\"\n\t\t\t\t<< \"Example:\\n\" << argv[0] << \" ../test.avi\\n\"\n\t\t\t\t<< std::endl;\n        exit(1);\n    }\n\n    string file_name = string(argv[1]);\n    cv::VideoCapture capture(file_name);\n\n    if (!capture.isOpened()) {\n        cerr << \"Cannot open file \\\"\" << file_name << \"\\\"\\n\";\n        exit(-1);\n    }\n\n    cv::Mat optflow;  // optical flow result\n    cv::Mat optflow_image;  // optical flow visualization\n    cv::Mat prev_frame;  // previous frame grayscale image\n    cv::Mat frame;  // current frame grayscale image\n    cv::Mat colored_frame;  // current frame RGB-image\n\n    cv::namedWindow(\"video\");\n\n    // User can terminate program with hitting ESC\n    //\n    while ((cv::waitKey(10) & 255) != 27) {\n        capture >> colored_frame;\n        if (!colored_frame.rows || !colored_frame.cols) {\n            break;\n        }\n        if (colored_frame.type() == CV_8UC3) {\n            cvtColor(colored_frame, frame, CV_BGR2GRAY);\n        }\n        if (prev_frame.rows) {\n            calcOpticalFlowFarneback(prev_frame, frame, optflow, pyr_scale, levels, winsize,\n                iterations, poly_n, poly_sigma, cv::OPTFLOW_FARNEBACK_GAUSSIAN);\n            optflow_image = get_optflow_image(optflow, colored_frame);\n            cv::imshow(\"video\", optflow_image);\n        }\n        prev_frame = frame.clone();\n    }\n    cv::destroyAllWindows();\n\n    return 0;\n}\n"
        },
        {
          "name": "example_18-01.cpp",
          "type": "blob",
          "size": 5.9208984375,
          "content": "// Example 18-1. Reading a chessboard’s width and height, reading and collecting\n// the requested number of views, and calibrating the camera\n#include <iostream>\n#include <opencv2/opencv.hpp>\n\nusing std::vector;\nusing std::cout;\nusing std::cerr;\nusing std::endl;\n\nvoid help(char **argv) {  // todo rewrite this\n    cout << \"\\n\\n\"\n         << \"Example 18-1:\\nReading a chessboard’s width and height,\\n\"\n         << \"              reading and collecting the requested number of views,\\n\" \n         << \"              and calibrating the camera\\n\\n\" \n         << \"Call:\\n\" << argv[0] << \" <board_width> <board_height> <number_of_boards> <if_video,_delay_between_framee_capture> <image_scaling_factor>\\n\\n\"\n         << \"Example:\\n\" << argv[0] << \" 9 6 15 500 0.5\\n\"\n         << \"-- to use the checkerboard9x6.png provided\\n\\n\"\n         << \" * First it reads in checker boards and calibrates itself\\n\" \n         << \" * Then it saves and reloads the calibration matricies\\n\"\n         << \" * Then it creates an undistortion map and finally\\n\"\n         << \" * It displays an undistorted image\\n\"\n         << endl;\n}\n\nint main(int argc, char *argv[]) {\n    int n_boards = 0;           // will be set by input list\n    float image_sf = 0.5f;      // image scaling factor\n    float delay = 1.f;\n    int board_w = 0;\n    int board_h = 0;\n\n    if (argc < 4 || argc > 6) {\n        cout << \"\\nERROR: Wrong number of input parameters\\n\";\n        help(argv);\n        return -1;\n    }\n\n    board_w = atoi(argv[1]);\n    board_h = atoi(argv[2]);\n    n_boards = atoi(argv[3]);\n\n    if (argc > 4) {\n        delay = atof(argv[4]);\n    }\n    if (argc > 5) {\n        image_sf = atof(argv[5]);\n    }\n\n    int board_n = board_w * board_h;\n    cv::Size board_sz = cv::Size(board_w, board_h);\n    cv::VideoCapture capture(0);\n    if (!capture.isOpened()) {\n        cout << \"\\nCouldn't open the camera\\n\";\n        help(argv);\n        return -1;\n    }\n\n    // ALLOCATE STORAGE\n    //\n    vector<vector<cv::Point2f> > image_points;\n    vector<vector<cv::Point3f> > object_points;\n\n    // Capture corner views: loop until we've got n_boards successful\n    // captures (all corners on the board are found).\n    //\n    double last_captured_timestamp = 0;\n    cv::Size image_size;\n    while (image_points.size() < (size_t)n_boards) {\n    cv::Mat image0, image;\n    capture >> image0;\n    image_size = image0.size();\n    cv::resize(image0, image, cv::Size(), image_sf, image_sf, cv::INTER_LINEAR);\n\n    // Find the board\n    //\n    vector<cv::Point2f> corners;\n    bool found = cv::findChessboardCorners(image, board_sz, corners);\n\n    // Draw it\n    //\n    drawChessboardCorners(image, board_sz, corners, found);\n\n    // If we got a good board, add it to our data\n    //\n    double timestamp = static_cast<double>(clock()) / CLOCKS_PER_SEC;\n    if (found && timestamp - last_captured_timestamp > 1) {\n        last_captured_timestamp = timestamp;\n        image ^= cv::Scalar::all(255);\n        cv::Mat mcorners(corners);\n\n        // do not copy the data\n        mcorners *= (1.0 / image_sf);\n\n        // scale the corner coordinates\n        image_points.push_back(corners);\n        object_points.push_back(vector<cv::Point3f>());\n        vector<cv::Point3f> &opts = object_points.back();\n\n        opts.resize(board_n);\n        for (int j = 0; j < board_n; j++) {\n            opts[j] = cv::Point3f(static_cast<float>(j / board_w),\n                                  static_cast<float>(j % board_w), 0.0f);\n        }\n        cout << \"Collected our \" << static_cast<uint>(image_points.size())\n             << \" of \" << n_boards << \" needed chessboard images\\n\" << endl;\n    }\n    cv::imshow(\"Calibration\", image);\n\n    // show in color if we did collect the image\n    if ((cv::waitKey(30) & 255) == 27)\n      return -1;\n    }\n\n    // END COLLECTION WHILE LOOP.\n    cv::destroyWindow(\"Calibration\");\n    cout << \"\\n\\n*** CALIBRATING THE CAMERA...\\n\" << endl;\n\n    // CALIBRATE THE CAMERA!\n    //\n    cv::Mat intrinsic_matrix, distortion_coeffs;\n    double err = cv::calibrateCamera(\n        object_points, image_points, image_size, intrinsic_matrix,\n        distortion_coeffs, cv::noArray(), cv::noArray(),\n        cv::CALIB_ZERO_TANGENT_DIST | cv::CALIB_FIX_PRINCIPAL_POINT);\n\n    // SAVE THE INTRINSICS AND DISTORTIONS\n    cout << \" *** DONE!\\n\\nReprojection error is \" << err\n         << \"\\nStoring Intrinsics.xml and Distortions.xml files\\n\\n\";\n    cv::FileStorage fs(\"intrinsics.xml\", cv::FileStorage::WRITE);\n    fs << \"image_width\" << image_size.width << \"image_height\" << image_size.height\n       << \"camera_matrix\" << intrinsic_matrix << \"distortion_coefficients\"\n       << distortion_coeffs;\n    fs.release();\n\n    // EXAMPLE OF LOADING THESE MATRICES BACK IN:\n    fs.open(\"intrinsics.xml\", cv::FileStorage::READ);\n    cout << \"\\nimage width: \" << static_cast<int>(fs[\"image_width\"]);\n    cout << \"\\nimage height: \" << static_cast<int>(fs[\"image_height\"]);\n    cv::Mat intrinsic_matrix_loaded, distortion_coeffs_loaded;\n    fs[\"camera_matrix\"] >> intrinsic_matrix_loaded;\n    fs[\"distortion_coefficients\"] >> distortion_coeffs_loaded;\n    cout << \"\\nintrinsic matrix:\" << intrinsic_matrix_loaded;\n    cout << \"\\ndistortion coefficients: \" << distortion_coeffs_loaded << endl;\n\n    // Build the undistort map which we will use for all\n    // subsequent frames.\n    //\n    cv::Mat map1, map2;\n    cv::initUndistortRectifyMap(intrinsic_matrix_loaded, distortion_coeffs_loaded,\n                              cv::Mat(), intrinsic_matrix_loaded, image_size,\n                              CV_16SC2, map1, map2);\n\n    // Just run the camera to the screen, now showing the raw and\n    // the undistorted image.\n    //\n    for (;;) {\n        cv::Mat image, image0;\n        capture >> image0;\n\n        if (image0.empty()) {\n            break;\n        }\n        cv::remap(image0, image, map1, map2, cv::INTER_LINEAR,\n            cv::BORDER_CONSTANT, cv::Scalar());\n        cv::imshow(\"Undistorted\", image);\n        if ((cv::waitKey(30) & 255) == 27) {\n            break;\n        }\n    }\n\n    return 0;\n}\n"
        },
        {
          "name": "example_18-01_from_disk.cpp",
          "type": "blob",
          "size": 8.9453125,
          "content": "// Example 18-1. Reading a chessboard’s width and height, reading them from disk and calibrating \n// the requested number of views, and calibrating the camera \n\n// You need these includes for the function\n// #include <windows.h>  // for windows systems\n#include <dirent.h>     // for linux systems\n#include <sys/stat.h>   // for linux systems\n#include <iostream>     // cout\n#include <algorithm>    // std::sort\n#include <opencv2/opencv.hpp>\n\nusing std::string;\nusing std::vector;\nusing std::cout;\nusing std::cerr;\nusing std::endl;\n\n// Returns a list of files in a directory (except the ones that begin with a dot)\nint readFilenames(vector<string>& filenames, const string& directory) {\n#ifdef WINDOWS\n    HANDLE dir;\n    WIN32_FIND_DATA file_data;\n\n    if ((dir = FindFirstFile((directory + \"/*\").c_str(), &file_data)) == INVALID_HANDLE_VALUE)\n        return;  // no files found\n    do {\n        const string file_name = file_data.cFileName;\n        const string full_file_name = directory + \"/\" + file_name;\n        const bool is_directory = (file_data.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) != 0;\n\n        if (file_name[0] == '.')\n            continue;\n\n        if (is_directory)\n            continue;\n\n        filenames.push_back(full_file_name);\n    } while (FindNextFile(dir, &file_data));\n\n    FindClose(dir);\n#else\n    DIR *dir;\n    class dirent *ent;\n    class stat st;\n\n    dir = opendir(directory.c_str());\n    while ((ent = readdir(dir)) != NULL) {\n        const string file_name = ent->d_name;\n        const string full_file_name = directory + \"/\" + file_name;\n\n        if (file_name[0] == '.')\n            continue;\n\n        if (stat(full_file_name.c_str(), &st) == -1)\n            continue;\n\n        const bool is_directory = (st.st_mode & S_IFDIR) != 0;\n\n        if (is_directory)\n            continue;\n\n        // filenames.push_back(full_file_name);  // returns full path\n        filenames.push_back(file_name);  // returns just filename\n    }\n    closedir(dir);\n#endif\n    std::sort(filenames.begin(), filenames.end());  // optional, sort the filenames\n    return(filenames.size());  // return how many we found\n}  // GetFilesInDirectory\n\nvoid help(const char **argv) {\n    cout << \"\\n\\n\"\n         << \"Example 18-1 (from disk):\\Enter a chessboard’s width and height,\\n\"\n         << \"              reading in a directory of chessboard images,\\n\"\n         << \"              and calibrating the camera\\n\\n\"\n         << \"Call:\\n\" << argv[0] << \" <1board_width> <2board_height> <3number_of_boards>\"\n         << \" <4ms_delay_framee_capture> <5image_scaling_factor> <6path_to_calibration_images>\\n\\n\"\n         << \"\\nExample:\\n\"\n         << \"./example_18-01_from_disk 9 6 14 100 1.0 ../stereoData/\\nor:\\n\"\n         << \"./example_18-01_from_disk 12 12 28 100 0.5 ../calibration/\\n\\n\"\n         << \" * First it reads in checker boards and calibrates itself\\n\"\n         << \" * Then it saves and reloads the calibration matricies\\n\"\n         << \" * Then it creates an undistortion map and finaly\\n\"\n         << \" * It displays an undistorted image\\n\"\n         << endl;\n}\n\n\nint main(int argc, const char *argv[]) {\n    float image_sf = 0.5f;    // image scaling factor\n    int delay = 250;          // miliseconds\n    int board_w = 0;\n    int board_h = 0;\n\n    if (argc != 7) {\n        cout << \"\\nERROR: Wrong number (\" << argc - 1\n             << \") of arguments, should be (6) input parameters\\n\";\n        help(argv);\n        return -1;\n    }\n\n    board_w = atoi(argv[1]);\n    board_h = atoi(argv[2]);\n    int n_boards = atoi(argv[3]);  // how many boards max to read\n    delay = atof(argv[4]);         // milisecond delay\n    image_sf = atof(argv[5]);\n    int board_n = board_w * board_h;  // number of corners\n    cv::Size board_sz = cv::Size(board_w, board_h);  // width and height of the board\n\n    string folder = argv[6];\n    cout << \"Reading in directory \" << folder << endl;\n    vector<string> filenames;\n    int num_files = readFilenames(filenames, folder);\n    cout << \"   ... Done. Number of files = \" << num_files << \"\\n\" << endl;\n\n    // PROVIDE PPOINT STORAGE\n    //\n    vector<vector<cv::Point2f> > image_points;\n    vector<vector<cv::Point3f> > object_points;\n\n    /////////// COLLECT //////////////////////////////////////////////\n    // Capture corner views: loop through all calibration images\n    // collecting all corners on the boards that are found\n    //\n    cv::Size image_size;\n    int board_count = 0;\n    for (size_t i = 0; (i < filenames.size()) && (board_count < n_boards); ++i) {\n        cv::Mat image, image0 = cv::imread(folder + filenames[i]);\n        board_count += 1;\n        if (!image0.data) {  // protect against no file\n            cerr << folder + filenames[i] << \", file #\" << i << \", is not an image\" << endl;\n            continue;\n        }\n        image_size = image0.size();\n        cv::resize(image0, image, cv::Size(), image_sf, image_sf, cv::INTER_LINEAR);\n\n        // Find the board\n        //\n        vector<cv::Point2f> corners;\n        bool found = cv::findChessboardCorners(image, board_sz, corners);\n\n        // Draw it\n        //\n        drawChessboardCorners(image, board_sz, corners, found);  // will draw only if found\n\n        // If we got a good board, add it to our data\n        //\n        if (found) {\n            image ^= cv::Scalar::all(255);\n            cv::Mat mcorners(corners);\n\n            // do not copy the data\n            mcorners *= (1.0 / image_sf);\n\n            // scale the corner coordinates\n            image_points.push_back(corners);\n            object_points.push_back(vector<cv::Point3f>());\n            vector<cv::Point3f> &opts = object_points.back();\n\n            opts.resize(board_n);\n            for (int j = 0; j < board_n; j++) {\n                opts[j] = cv::Point3f(static_cast<float>(j / board_w),\n                                      static_cast<float>(j % board_w), 0.0f);\n            }\n            cout << \"Collected \" << static_cast<int>(image_points.size())\n                 << \"total boards. This one from chessboard image #\"\n                 << i << \", \" << folder + filenames[i] << endl;\n        }\n        cv::imshow(\"Calibration\", image);\n\n        // show in color if we did collect the image\n        if ((cv::waitKey(delay) & 255) == 27) {\n            return -1;\n        }\n    }\n\n    // END COLLECTION WHILE LOOP.\n    cv::destroyWindow(\"Calibration\");\n    cout << \"\\n\\n*** CALIBRATING THE CAMERA...\\n\" << endl;\n\n    /////////// CALIBRATE //////////////////////////////////////////////\n    // CALIBRATE THE CAMERA!\n    //\n    cv::Mat intrinsic_matrix, distortion_coeffs;\n    double err = cv::calibrateCamera(\n      object_points, image_points, image_size, intrinsic_matrix,\n      distortion_coeffs, cv::noArray(), cv::noArray(),\n      cv::CALIB_ZERO_TANGENT_DIST | cv::CALIB_FIX_PRINCIPAL_POINT);\n\n    // SAVE THE INTRINSICS AND DISTORTIONS\n    cout << \" *** DONE!\\n\\nReprojection error is \" << err\n       << \"\\nStoring Intrinsics.xml and Distortions.xml files\\n\\n\";\n    cv::FileStorage fs(\"intrinsics.xml\", cv::FileStorage::WRITE);\n    fs << \"image_width\" << image_size.width << \"image_height\" << image_size.height\n     << \"camera_matrix\" << intrinsic_matrix << \"distortion_coefficients\"\n     << distortion_coeffs;\n    fs.release();\n\n    // EXAMPLE OF LOADING THESE MATRICES BACK IN:\n    fs.open(\"intrinsics.xml\", cv::FileStorage::READ);\n    cout << \"\\nimage width: \" << static_cast<int>(fs[\"image_width\"]);\n    cout << \"\\nimage height: \" << static_cast<int>(fs[\"image_height\"]);\n    cv::Mat intrinsic_matrix_loaded, distortion_coeffs_loaded;\n    fs[\"camera_matrix\"] >> intrinsic_matrix_loaded;\n    fs[\"distortion_coefficients\"] >> distortion_coeffs_loaded;\n    cout << \"\\nintrinsic matrix:\" << intrinsic_matrix_loaded;\n    cout << \"\\ndistortion coefficients: \" << distortion_coeffs_loaded << \"\\n\" << endl;\n\n    // Build the undistort map which we will use for all\n    // subsequent frames.\n    //\n    cv::Mat map1, map2;\n    cv::initUndistortRectifyMap(intrinsic_matrix_loaded, distortion_coeffs_loaded,\n                              cv::Mat(), intrinsic_matrix_loaded, image_size,\n                              CV_16SC2, map1, map2);\n\n    ////////// DISPLAY //////////////////////////////////////////////\n    cout << \"*****************\\nPRESS A KEY TO SEE THE NEXT IMAGE, ESQ TO QUIT\\n\"\n         << \"****************\\n\" << endl;\n    board_count = 0;  // resent max boards to read\n    for (size_t i = 0; (i < filenames.size()) && (board_count < n_boards); ++i) {\n        cv::Mat image, image0 = cv::imread(folder + filenames[i]);\n        ++board_count;\n        if (!image0.data) {  // protect against no file\n            cerr << folder + filenames[i] << \", file #\" << i << \", is not an image\" << endl;\n            continue;\n        }\n        // Just run the camera to the screen, now showing the raw and\n        // the undistorted image.\n        //\n        cv::remap(image0, image, map1, map2, cv::INTER_LINEAR,\n            cv::BORDER_CONSTANT, cv::Scalar());\n        cv::imshow(\"Original\", image0);\n        cv::imshow(\"Undistorted\", image);\n        if ((cv::waitKey(0) & 255) == 27) {\n            break;\n        }\n    }\n    return 0;\n}\n"
        },
        {
          "name": "example_19-01.cpp",
          "type": "blob",
          "size": 5.7158203125,
          "content": "//Example 19-1. Bird’s - eye view\n#include <opencv2/opencv.hpp>\n#include <iostream>\n    using namespace std;\n    \nvoid help(char *argv[]) {\n\tcout\t<< \"\\nExample 19-01, using homography to get a bird's eye view.\"\n\t\t\t<< \"\\nThis file relies on you having created an intrinsic file via example_18-01_from_disk\"\n\t\t\t<< \"\\n   but here, that file is already stored in ../birdseye/intrinsics.xml\"\n\t\t\t<< \"\\nCall:\"\n\t\t\t<< \"\\n./example_19-01 <chessboard_width> <chessboard_height> <path/camera_calib_filename> <path/chessboard_image>\"\n\t\t\t<< \"\\n\\nExample:\"\n\t\t\t<< \"\\n./example_19-01 12 12 ../birdseye/intrinsics.xml ../birdseye/IMG_0215L.jpg\\n\"\n\t\t\t<< \"\\nPress 'd' for lower birdseye view, and 'u' for higher (it adjusts the apparent 'Z' height), Esc to exit\\n\" \n\t\t\t<< endl;\n}\n\n// args: [board_w] [board_h] [intrinsics.xml] [checker_image]\n//\nint main(int argc, char *argv[]) {\n  if (argc != 5) {\n    cout << \"\\nERROR: too few parameters\\n\";\n    help(argv);\n    return -1;\n  }\n  // Input Parameters:\n  //\n  int board_w = atoi(argv[1]);\n  int board_h = atoi(argv[2]);\n  int board_n = board_w * board_h;\n  cv::Size board_sz(board_w, board_h);\n  cv::FileStorage fs(argv[3], cv::FileStorage::READ);\n  cv::Mat intrinsic, distortion;\n\n  fs[\"camera_matrix\"] >> intrinsic;\n  fs[\"distortion_coefficients\"] >> distortion;\n\n  if (!fs.isOpened() || intrinsic.empty() || distortion.empty()) {\n    cout << \"Error: Couldn't load intrinsic parameters from \" << argv[3]\n         << endl;\n    return -1;\n  }\n  fs.release();\n\n  cv::Mat gray_image, image, image0 = cv::imread(argv[4], 1);\n  if (image0.empty()) {\n    cout << \"Error: Couldn't load image \" << argv[4] << endl;\n    return -1;\n  }\n\n  // UNDISTORT OUR IMAGE\n  //\n  cv::undistort(image0, image, intrinsic, distortion, intrinsic);\n  cv::cvtColor(image, gray_image, cv::COLOR_BGRA2GRAY);\n\n  // GET THE CHECKERBOARD ON THE PLANE\n  //\n  vector<cv::Point2f> corners;\n  bool found = cv::findChessboardCorners( // True if found\n      image,                              // Input image\n      board_sz,                           // Pattern size\n      corners,                            // Results\n      cv::CALIB_CB_ADAPTIVE_THRESH | cv::CALIB_CB_FILTER_QUADS);\n  if (!found) {\n    cout << \"Couldn't acquire checkerboard on \" << argv[4] << \", only found \"\n         << corners.size() << \" of \" << board_n << \" corners\\n\";\n    return -1;\n  }\n\n  // Get Subpixel accuracy on those corners\n  //\n  cv::cornerSubPix(\n      gray_image,       // Input image\n      corners,          // Initial guesses, also output\n      cv::Size(11, 11), // Search window size\n      cv::Size(-1, -1), // Zero zone (in this case, don't use)\n      cv::TermCriteria(cv::TermCriteria::EPS | cv::TermCriteria::COUNT, 30,\n                       0.1));\n\n  // GET THE IMAGE AND OBJECT POINTS:\n  // Object points are at (r,c):\n  // (0,0), (board_w-1,0), (0,board_h-1), (board_w-1,board_h-1)\n  // That means corners are at: corners[r*board_w + c]\n  //\n  cv::Point2f objPts[4], imgPts[4];\n  objPts[0].x = 0;\n  objPts[0].y = 0;\n  objPts[1].x = board_w - 1;\n  objPts[1].y = 0;\n  objPts[2].x = 0;\n  objPts[2].y = board_h - 1;\n  objPts[3].x = board_w - 1;\n  objPts[3].y = board_h - 1;\n  imgPts[0] = corners[0];\n  imgPts[1] = corners[board_w - 1];\n  imgPts[2] = corners[(board_h - 1) * board_w];\n  imgPts[3] = corners[(board_h - 1) * board_w + board_w - 1];\n\n  // DRAW THE POINTS in order: B,G,R,YELLOW\n  //\n  cv::circle(image, imgPts[0], 9, cv::Scalar(255, 0, 0), 3);\n  cv::circle(image, imgPts[1], 9, cv::Scalar(0, 255, 0), 3);\n  cv::circle(image, imgPts[2], 9, cv::Scalar(0, 0, 255), 3);\n  cv::circle(image, imgPts[3], 9, cv::Scalar(0, 255, 255), 3);                                              \n\n  // DRAW THE FOUND CHECKERBOARD\n  //\n  cv::drawChessboardCorners(image, board_sz, corners, found);\n  cv::imshow(\"Checkers\", image);\n\n  // FIND THE HOMOGRAPHY\n  //\n  cv::Mat H = cv::getPerspectiveTransform(objPts, imgPts);\n\n  // LET THE USER ADJUST THE Z HEIGHT OF THE VIEW\n  //\n  cout << \"\\nPress 'd' for lower birdseye view, and 'u' for higher (it adjusts the apparent 'Z' height), Esc to exit\" << endl;\n  double Z = 15;\n  cv::Mat birds_image;\n  for (;;) {\n    // escape key stops\n    H.at<double>(2, 2) = Z;\n    // USE HOMOGRAPHY TO REMAP THE VIEW\n    //\n    cv::warpPerspective(image,\t\t\t// Source image\n                        birds_image, \t// Output image\n                        H,              // Transformation matrix\n                        image.size(),   // Size for output image\n                        cv::WARP_INVERSE_MAP | cv::INTER_LINEAR,\n                        cv::BORDER_CONSTANT, cv::Scalar::all(0) // Fill border with black\n                        );\n    cv::imshow(\"Birds_Eye\", birds_image);\n    int key = cv::waitKey() & 255;\n    if (key == 'u')\n      Z += 0.5;\n    if (key == 'd')\n      Z -= 0.5;\n    if (key == 27)\n      break;\n  }\n\n  // SHOW ROTATION AND TRANSLATION VECTORS\n  //\n  vector<cv::Point2f> image_points;\n  vector<cv::Point3f> object_points;\n  for (int i = 0; i < 4; ++i) {\n    image_points.push_back(imgPts[i]);\n    object_points.push_back(cv::Point3f(objPts[i].x, objPts[i].y, 0));\n  }\n  cv::Mat rvec, tvec, rmat;\n  cv::solvePnP(object_points, \t// 3-d points in object coordinate\n               image_points,  \t// 2-d points in image coordinates\n               intrinsic,     \t// Our camera matrix\n               cv::Mat(),     \t// Since we corrected distortion in the\n\t\t\t\t\t\t\t\t// beginning,now we have zero distortion\n\t\t\t\t\t\t\t\t// coefficients\n               rvec, \t\t\t// Output rotation *vector*.\n               tvec  \t\t\t// Output translation vector.\n               );\n  cv::Rodrigues(rvec, rmat);\n\n  // PRINT AND EXIT\n  cout << \"rotation matrix: \" << rmat << endl;\n  cout << \"translation vector: \" << tvec << endl;\n  cout << \"homography matrix: \" << H << endl;\n  cout << \"inverted homography matrix: \" << H.inv() << endl;\n\n  return 1;\n}\n"
        },
        {
          "name": "example_19-02.cpp",
          "type": "blob",
          "size": 7.7861328125,
          "content": "// Example 19-2. Computing the fundamental matrix using RANSAC\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\nvoid help(char *argv[]) { \n\tcout \t<< \"\\nExample 19-2, Computing the fundamental matrix using RANSAC relating 2 images. Show the camera a checkerboard \"\n\t\t\t<< \"\\nCall\"\n\t\t\t<< \"\\n./example_19-2 <1:board_w> <2:board_h> <3:# of boards> <4:delay capture this many ms between frames> <5:scale the images 0-1>\"\n\t\t\t<< \"\\n\\nExample call:\"\n\t\t\t<< \"\\n./example_19-2 9 6 20 500 0.5\"\n\t\t\t<< \"\\n\\n -- use the checkerboard9x6.png provided\"\n\t\t\t<< \"\\n\" \n\t\t\t<< endl;\n}\n\n\n// args: [board_w] [board_h] [number_of_boards] [delay]? [scale]?\n//\nint main(int argc, char *argv[]) {\n  int n_boards = 0;\n  float image_sf = 0.5f;\n  float delay = 1.f;\n  int board_w = 0;\n  int board_h = 0;\n\n  // Will be set by input list\n  if (argc != 6) {\n    cout << \"\\nERROR: Wrong number of input parameters, need 5, got \" << argc - 1 << \"\\n\";\n    help(argv);\n    return -1;\n  }\n  board_w = atoi(argv[1]);\n  board_h = atoi(argv[2]);\n  n_boards = atoi(argv[3]);\n  delay = atof(argv[4]);\n  image_sf = atof(argv[5]);\n  int board_n = board_w * board_h;\n  cv::Size board_sz = cv::Size(board_w, board_h);\n  cv::VideoCapture capture(0);\n\n  if (!capture.isOpened()) {\n    cout << \"\\nCouldn't open the camera\\n\";\n    help(argv);\n    return -1;\n  }\n  // Allocate Storage\n  //\n  vector<vector<cv::Point2f> > image_points;\n  vector<vector<cv::Point3f> > object_points;\n  // Capture corner views; loop until we've got n_boards number of\n  // successful captures (meaning: all corners on each\n  // board are found).\n  //\n  double last_captured_timestamp = 0;\n  cv::Size image_size;\n  while (image_points.size() < (size_t)n_boards) {\n    cv::Mat image0, image;\n    capture >> image0;\n    image_size = image0.size();\n    resize(image0, image, cv::Size(), image_sf, image_sf, cv::INTER_LINEAR);\n    // Find the board\n    //\n    vector<cv::Point2f> corners;\n    bool found = cv::findChessboardCorners(image, board_sz, corners);\n    // Draw it\n    //\n    cv::drawChessboardCorners(image, board_sz, corners, found);\n    // If we got a good board, add it to our data\n    //\n    double timestamp = (double)clock() / CLOCKS_PER_SEC;\n    if (found && timestamp - last_captured_timestamp > 1) {\n      last_captured_timestamp = timestamp;\n      image ^= cv::Scalar::all(255);\n\n      cv::Mat mcorners(corners);\n      // do not copy the data\n      mcorners *= (1. / image_sf);\n      // scale corner coordinates\n      image_points.push_back(corners);\n      object_points.push_back(vector<cv::Point3f>());\n      vector<cv::Point3f> &opts = object_points.back();\n      opts.resize(board_n);\n      for (int j = 0; j < board_n; j++) {\n        opts[j] = cv::Point3f((float)(j / board_w), (float)(j % board_w), 0.f);\n      }\n      cout << \"Collected our \" << (int)image_points.size() << \" of \" << n_boards\n           << \" needed chessboard images\\n\" << endl;\n    }\n    // in color if we did collect the image\n    //\n    cv::imshow(\"Calibration\", image);\n    if ((cv::waitKey(30) & 255) == 27)\n      return -1;\n  }\n  // end collection while() loop.\n  cv::destroyWindow(\"Calibration\");\n  cout << \"\\n\\n*** CALIBRATING THE CAMERA...\\n\" << endl;\n  // Calibrate the camera!\n  //\n  cv::Mat intrinsic_matrix, distortion_coeffs;\n  double err = cv::calibrateCamera(\n      object_points,     // Vector of vectors of points\n                         // from the calibration pattern\n      image_points,      // Vector of vectors of projected\n                         // locations (on images)\n      image_size,        // Size of images used\n      intrinsic_matrix,  // Output camera matrix\n      distortion_coeffs, // Output distortion coefficients\n      cv::noArray(),     // We'll pass on the rotation vectors...\n      cv::noArray(),     // ...and the translation vectors\n      cv::CALIB_ZERO_TANGENT_DIST | cv::CALIB_FIX_PRINCIPAL_POINT);\n\n  // Save the intrinsics and distortions\n  cout << \" *** DONE!\\n\\nReprojection error is \" << err\n       << \"\\nStoring Intrinsics.xml and Distortions.xml files\\n\\n\";\n  cv::FileStorage fs(\"intrinsics.xml\", cv::FileStorage::WRITE);\n  fs << \"image_width\" << image_size.width << \"image_height\" << image_size.height\n     << \"camera_matrix\" << intrinsic_matrix << \"distortion_coefficients\"\n     << distortion_coeffs;\n  fs.release();\n\n  // Example of loading these matrices back in:\n  //\n  fs.open(\"intrinsics.xml\", cv::FileStorage::READ);\n  cout << \"\\nimage width: \" << (int)fs[\"image_width\"];\n  cout << \"\\nimage height: \" << (int)fs[\"image_height\"];\n  cv::Mat intrinsic_matrix_loaded, distortion_coeffs_loaded;\n  fs[\"camera_matrix\"] >> intrinsic_matrix_loaded;\n  fs[\"distortion_coefficients\"] >> distortion_coeffs_loaded;\n  cout << \"\\nintrinsic matrix:\" << intrinsic_matrix_loaded;\n  cout << \"\\ndistortion coefficients: \" << distortion_coeffs_loaded << endl;\n\n  // Compute Fundamental Matrix Between the first\n  // and the second frames:\n  //\n  cv::undistortPoints(\n      image_points[0],   // Observed point coordinates (from frame 0)\n      image_points[0],   // undistorted coordinates (in this case,\n                         // the same array as above)\n      intrinsic_matrix,  // Intrinsics, from cv::calibrateCamera()\n      distortion_coeffs, // Distortion coefficients, also\n                         // from cv::calibrateCamera()\n      cv::Mat(),         // Rectification transformation (but\n                         // here, we don't need this)\n      intrinsic_matrix   // New camera matrix\n      );\n\n  cv::undistortPoints(\n      image_points[1],   // Observed point coordinates (from frame 1)\n      image_points[1],   // undistorted coordinates (in this case,\n                         // the same array as above)\n      intrinsic_matrix,  // Intrinsics, from cv::calibrateCamera()\n      distortion_coeffs, // Distortion coefficients, also\n                         // from cv::calibrateCamera()\n      cv::Mat(),         // Rectification transformation (but\n                         // here, we don't need this)\n      intrinsic_matrix   // New camera matrix\n      );\n\n  // Since all the found chessboard corners are inliers, i.e., they\n  // must satisfy epipolar constraints, here we are using the\n  // fastest, and the most accurate (in this case) 8-point algorithm.\n  //\n  cv::Mat F = cv::findFundamentalMat( // Return computed matrix\n      image_points[0],                // Points from frame 0\n      image_points[1],                // Points from frame 1\n      cv::FM_8POINT                   // Use the 8-point algorithm\n      );\n  cout << \"Fundamental matrix: \" << F << endl;\n\n  // Build the undistort map which we will use for all\n  // subsequent frames.\n  //\n  cv::Mat map1, map2;\n  cv::initUndistortRectifyMap(\n      intrinsic_matrix_loaded,  // Our camera matrix\n      distortion_coeffs_loaded, // Our distortion coefficients\n      cv::Mat(),                // (Optional) Rectification, don't\n                                // need.\n      intrinsic_matrix_loaded,  // \"New\" matrix, here it's the same\n                                // as the first argument.\n      image_size,               // Size of undistorted image we want\n      CV_16SC2,                 // Specifies the format of map to use\n      map1,                     // Integerized coordinates\n      map2                      // Fixed-point offsets for\n                                // elements of map1\n      );\n\n  // Just run the camera to the screen, now showing the raw and\n  // the undistorted image.\n  //\n  for (;;) {\n    cv::Mat image, image0;\n    capture >> image0;\n    if (image0.empty())\n      break;\n    cv::remap(image0, // Input image\n              image,  // Output image\n              map1,   // Integer part of map\n              map2,   // Fixed point part of map\n              cv::INTER_LINEAR, cv::BORDER_CONSTANT,\n              cv::Scalar() // Set border values to black\n              );\n    cv::imshow(\"Undistorted\", image);\n    if ((cv::waitKey(30) & 255) == 27)\n      break;\n  }\n  return 1;\n}\n"
        },
        {
          "name": "example_19-03.cpp",
          "type": "blob",
          "size": 10.5302734375,
          "content": "// Example 19-3. Stereo calibration, rectification, and correspondence\n#pragma warning(disable : 4996)\n#include <opencv2/opencv.hpp>\n#include <iostream>\n#include <string.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\nusing namespace std;\n\nvoid help(char *argv[]) {\n  cout\n      << \"\\n\\nExample 19-3. Stereo calibration, rectification, and \"\n         \"correspondence\"\n      << \"\\n    Reads in list of locations of a sequence of checkerboard \"\n         \"calibration\"\n      << \"\\n    objects from a left,right stereo camera pair. Calibrates, \"\n         \"rectifies and then\"\n      << \"\\n    does stereo correspondence.\"\n      << \"\\n\"\n      << \"\\n    This program will run on default parameters assuming you \"\n         \"created a build directory\"\n      << \"\\n    directly below the Learning-OpenCV-3 directory and are \"\n         \"running programs there.   NOTE: the list_of_stereo_pairs> must\"\n      << \"\\n    give the full path name to the left right images, in \"\n         \"alternating\"\n      << \"\\n    lines: left image, right image, one path/filename per line, see\"\n      << \"\\n    stereoData/example_19-03_list.txt file, you can comment out \"\n         \"lines\"\n      << \"\\n    there by starting them with #.\"\n      << \"\\n\"\n      << \"\\nDefault Call (with parameters: board_w = 9, board_h = 6, list = \"\n         \"../stereoData_19-03_list.txt):\"\n      << \"\\n\" << argv[0] << \"\\n\"\n      << \"\\nManual call:\"\n      << \"\\n\" << argv[0] << \" [<board_w> <board_h> <path/list_of_stereo_pairs>]\"\n      << \"\\n\\n PRESS ANY KEY TO STEP THROUGH RESULTS AT EACH STAGE.\"\n      << \"\\n\" << endl;\n}\n\nstatic void StereoCalib(const char *imageList, int nx, int ny,\n                        bool useUncalibrated) {\n  bool displayCorners = true;\n  bool showUndistorted = true;\n  bool isVerticalStereo = false; // horiz or vert cams\n  const int maxScale = 1;\n  const float squareSize = 1.f;\n\n  // actual square size\n  FILE *f = fopen(imageList, \"rt\");\n  int i, j, lr;\n  int N = nx * ny;\n  cv::Size board_sz = cv::Size(nx, ny);\n  vector<string> imageNames[2];\n  vector<cv::Point3f> boardModel;\n  vector<vector<cv::Point3f> > objectPoints;\n  vector<vector<cv::Point2f> > points[2];\n  vector<cv::Point2f> corners[2];\n  bool found[2] = {false, false};\n  cv::Size imageSize;\n\n  // READ IN THE LIST OF CIRCLE GRIDS:\n  //\n  if (!f) {\n    cout << \"Cannot open file \" << imageList << endl;\n    return;\n  }\n  for (i = 0; i < ny; i++)\n    for (j = 0; j < nx; j++)\n      boardModel.push_back(\n          cv::Point3f((float)(i * squareSize), (float)(j * squareSize), 0.f));\n  i = 0;\n  for (;;) {\n    char buf[1024];\n    lr = i % 2;\n    if (lr == 0)\n      found[0] = found[1] = false;\n    if (!fgets(buf, sizeof(buf) - 3, f))\n      break;\n    size_t len = strlen(buf);\n    while (len > 0 && isspace(buf[len - 1]))\n      buf[--len] = '\\0';\n    if (buf[0] == '#')\n      continue;\n    cv::Mat img = cv::imread(buf, 0);\n    if (img.empty())\n      break;\n    imageSize = img.size();\n    imageNames[lr].push_back(buf);\n    i++;\n\n    // If we did not find board on the left image,\n    // it does not make sense to find it on the right.\n    //\n    if (lr == 1 && !found[0])\n      continue;\n\n    // Find circle grids and centers therein:\n    for (int s = 1; s <= maxScale; s++) {\n      cv::Mat timg = img;\n      if (s > 1)\n        resize(img, timg, cv::Size(), s, s, cv::INTER_CUBIC);\n      // Just as example, this would be the call if you had circle calibration\n      // boards ...\n      //      found[lr] = cv::findCirclesGrid(timg, cv::Size(nx, ny),\n      //      corners[lr],\n      //                                      cv::CALIB_CB_ASYMMETRIC_GRID |\n      //                                          cv::CALIB_CB_CLUSTERING);\n      //...but we have chessboards in our images\n      found[lr] = cv::findChessboardCorners(timg, board_sz, corners[lr]);\n\n      if (found[lr] || s == maxScale) {\n        cv::Mat mcorners(corners[lr]);\n        mcorners *= (1. / s);\n      }\n      if (found[lr])\n        break;\n    }\n    if (displayCorners) {\n      cout << buf << endl;\n      cv::Mat cimg;\n      cv::cvtColor(img, cimg, cv::COLOR_GRAY2BGR);\n\n      // draw chessboard corners works for circle grids too\n      cv::drawChessboardCorners(cimg, cv::Size(nx, ny), corners[lr], found[lr]);\n      cv::imshow(\"Corners\", cimg);\n      if ((cv::waitKey(0) & 255) == 27) // Allow ESC to quit\n        exit(-1);\n    } else\n      cout << '.';\n    if (lr == 1 && found[0] && found[1]) {\n      objectPoints.push_back(boardModel);\n      points[0].push_back(corners[0]);\n      points[1].push_back(corners[1]);\n    }\n  }\n  fclose(f);\n\n  // CALIBRATE THE STEREO CAMERAS\n  cv::Mat M1 = cv::Mat::eye(3, 3, CV_64F);\n  cv::Mat M2 = cv::Mat::eye(3, 3, CV_64F);\n  cv::Mat D1, D2, R, T, E, F;\n  cout << \"\\nRunning stereo calibration ...\\n\";\n  cv::stereoCalibrate(\n      objectPoints, points[0], points[1], M1, D1, M2, D2, imageSize, R, T, E, F,\n      cv::CALIB_FIX_ASPECT_RATIO | cv::CALIB_ZERO_TANGENT_DIST |\n          cv::CALIB_SAME_FOCAL_LENGTH,\n      cv::TermCriteria(cv::TermCriteria::COUNT | cv::TermCriteria::EPS, 100,\n                       1e-5));\n  cout << \"Done! Press any key to step through images, ESC to exit\\n\\n\";\n\n  // CALIBRATION QUALITY CHECK\n  // because the output fundamental matrix implicitly\n  // includes all the output information,\n  // we can check the quality of calibration using the\n  // epipolar geometry constraint: m2^t*F*m1=0\n  vector<cv::Point3f> lines[2];\n  double avgErr = 0;\n  int nframes = (int)objectPoints.size();\n  for (i = 0; i < nframes; i++) {\n    vector<cv::Point2f> &pt0 = points[0][i];\n    vector<cv::Point2f> &pt1 = points[1][i];\n    cv::undistortPoints(pt0, pt0, M1, D1, cv::Mat(), M1);\n    cv::undistortPoints(pt1, pt1, M2, D2, cv::Mat(), M2);\n    cv::computeCorrespondEpilines(pt0, 1, F, lines[0]);\n    cv::computeCorrespondEpilines(pt1, 2, F, lines[1]);\n\n    for (j = 0; j < N; j++) {\n      double err = fabs(pt0[j].x * lines[1][j].x + pt0[j].y * lines[1][j].y +\n                        lines[1][j].z) +\n                   fabs(pt1[j].x * lines[0][j].x + pt1[j].y * lines[0][j].y +\n                        lines[0][j].z);\n      avgErr += err;\n    }\n  }\n  cout << \"avg err = \" << avgErr / (nframes * N) << endl;\n\n  // COMPUTE AND DISPLAY RECTIFICATION\n  //\n  if (showUndistorted) {\n    cv::Mat R1, R2, P1, P2, map11, map12, map21, map22;\n\n    // IF BY CALIBRATED (BOUGUET'S METHOD)\n    //\n    if (!useUncalibrated) {\n      stereoRectify(M1, D1, M2, D2, imageSize, R, T, R1, R2, P1, P2,\n                    cv::noArray(), 0);\n      isVerticalStereo = fabs(P2.at<double>(1, 3)) > fabs(P2.at<double>(0, 3));\n      // Precompute maps for cvRemap()\n      initUndistortRectifyMap(M1, D1, R1, P1, imageSize, CV_16SC2, map11,\n                              map12);\n      initUndistortRectifyMap(M2, D2, R2, P2, imageSize, CV_16SC2, map21,\n                              map22);\n    }\n\n    // OR ELSE HARTLEY'S METHOD\n    //\n    else {\n\n      // use intrinsic parameters of each camera, but\n      // compute the rectification transformation directly\n      // from the fundamental matrix\n      vector<cv::Point2f> allpoints[2];\n      for (i = 0; i < nframes; i++) {\n        copy(points[0][i].begin(), points[0][i].end(),\n             back_inserter(allpoints[0]));\n        copy(points[1][i].begin(), points[1][i].end(),\n             back_inserter(allpoints[1]));\n      }\n      cv::Mat F = findFundamentalMat(allpoints[0], allpoints[1], cv::FM_8POINT);\n      cv::Mat H1, H2;\n      cv::stereoRectifyUncalibrated(allpoints[0], allpoints[1], F, imageSize,\n                                    H1, H2, 3);\n      R1 = M1.inv() * H1 * M1;\n      R2 = M2.inv() * H2 * M2;\n\n      // Precompute map for cvRemap()\n      //\n      cv::initUndistortRectifyMap(M1, D1, R1, P1, imageSize, CV_16SC2, map11,\n                                  map12);\n      cv::initUndistortRectifyMap(M2, D2, R2, P2, imageSize, CV_16SC2, map21,\n                                  map22);\n    }\n\n    // RECTIFY THE IMAGES AND FIND DISPARITY MAPS\n    //\n    cv::Mat pair;\n    if (!isVerticalStereo)\n      pair.create(imageSize.height, imageSize.width * 2, CV_8UC3);\n    else\n      pair.create(imageSize.height * 2, imageSize.width, CV_8UC3);\n\n    // Setup for finding stereo corrrespondences\n    //\n    cv::Ptr<cv::StereoSGBM> stereo = cv::StereoSGBM::create(\n        -64, 128, 11, 100, 1000, 32, 0, 15, 1000, 16, cv::StereoSGBM::MODE_HH);\n\n    for (i = 0; i < nframes; i++) {\n      cv::Mat img1 = cv::imread(imageNames[0][i].c_str(), 0);\n      cv::Mat img2 = cv::imread(imageNames[1][i].c_str(), 0);\n      cv::Mat img1r, img2r, disp, vdisp;\n      if (img1.empty() || img2.empty())\n        continue;\n      cv::remap(img1, img1r, map11, map12, cv::INTER_LINEAR);\n      cv::remap(img2, img2r, map21, map22, cv::INTER_LINEAR);\n      if (!isVerticalStereo || !useUncalibrated) {\n\n        // When the stereo camera is oriented vertically,\n        // Hartley method does not transpose the\n        // image, so the epipolar lines in the rectified\n        // images are vertical. Stereo correspondence\n        // function does not support such a case.\n        stereo->compute(img1r, img2r, disp);\n        cv::normalize(disp, vdisp, 0, 256, cv::NORM_MINMAX, CV_8U);\n        cv::imshow(\"disparity\", vdisp);\n      }\n      if (!isVerticalStereo) {\n        cv::Mat part = pair.colRange(0, imageSize.width);\n        cvtColor(img1r, part, cv::COLOR_GRAY2BGR);\n        part = pair.colRange(imageSize.width, imageSize.width * 2);\n        cvtColor(img2r, part, cv::COLOR_GRAY2BGR);\n        for (j = 0; j < imageSize.height; j += 16)\n          cv::line(pair, cv::Point(0, j), cv::Point(imageSize.width * 2, j),\n                   cv::Scalar(0, 255, 0));\n      } else {\n        cv::Mat part = pair.rowRange(0, imageSize.height);\n        cv::cvtColor(img1r, part, cv::COLOR_GRAY2BGR);\n        part = pair.rowRange(imageSize.height, imageSize.height * 2);\n        cv::cvtColor(img2r, part, cv::COLOR_GRAY2BGR);\n        for (j = 0; j < imageSize.width; j += 16)\n          line(pair, cv::Point(j, 0), cv::Point(j, imageSize.height * 2),\n               cv::Scalar(0, 255, 0));\n      }\n      cv::imshow(\"rectified\", pair);\n      if ((cv::waitKey() & 255) == 27)\n        break;\n    }\n  }\n}\n\n//\n//Default Call (with parameters: board_w = 9, board_h = 6, list =\n//  ../stereoData_19-03_list.txt):\n//./example_19-03\n//\n//Manual call:\n//./example_19-03 [<board_w> <board_h> <path/list_of_stereo_pairs>]\n//\n// Press any key to step through results, ESC to exit\n//\n\n\nint main(int argc, char **argv) {\n  help(argv);\n  int board_w = 9, board_h = 6;\n  const char *board_list = \"../stereoData/example_19-03_list.txt\";\n  if (argc == 4) {\n    board_list = argv[1];\n    board_w = atoi(argv[2]);\n    board_h = atoi(argv[3]);\n  }\n  StereoCalib(board_list, board_w, board_h, true);\n  return 0;\n}\n"
        },
        {
          "name": "example_19-04.cpp",
          "type": "blob",
          "size": 2.263671875,
          "content": "// Example 19-4. Two-dimensional line fitting\n#include <opencv2/opencv.hpp>\n#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\nvoid help(char **argv) {\n  cout << \"\\nExample 19-04, two dimensional line fitting\"\n       << \"\\nCall\"\n       << \"\\n\" << argv[0] << \"\\n\"\n       << \"\\n 'q', 'Q' or ESC to quit\"\n       << \"\\n\" << endl;\n}\n\nint main(int argc, char **argv) {\n  cv::Mat img(500, 500, CV_8UC3);\n  cv::RNG rng(-1);\n  help(argv);\n  for (;;) {\n    char key;\n    int i, count = rng.uniform(0, 100) + 3, outliers = count / 5;\n    float a = (float)rng.uniform(0., 200.);\n    float b = (float)rng.uniform(0., 40.);\n    float angle = (float)rng.uniform(0., CV_PI);\n    float cos_a = cos(angle), sin_a = sin(angle);\n    cv::Point pt1, pt2;\n    vector<cv::Point> points(count);\n    cv::Vec4f line;\n    float d, t;\n    b = MIN(a * 0.3f, b);\n\n    // generate some points that are close to the line\n    for (i = 0; i < count - outliers; i++) {\n      float x = (float)rng.uniform(-1., 1.) * a;\n      float y = (float)rng.uniform(-1., 1.) * b;\n      points[i].x = cvRound(x * cos_a - y * sin_a + img.cols / 2);\n      points[i].y = cvRound(x * sin_a + y * cos_a + img.rows / 2);\n    }\n\n    // generate outlier points\n    for (; i < count; i++) {\n      points[i].x = rng.uniform(0, img.cols);\n      points[i].y = rng.uniform(0, img.rows);\n    }\n\n    // find the optimal line\n    cv::fitLine(points, line, cv::DIST_L1, 1, 0.001, 0.001);\n\n    // draw the points\n    img = cv::Scalar::all(0);\n    for (i = 0; i < count; i++)\n      cv::circle(img, points[i], 2,\n                 i < count - outliers ? cv::Scalar(0, 0, 255)\n                                      : cv::Scalar(0, 255, 255),\n                 cv::FILLED, CV_AA, 0);\n\n    // ... and the long enough line to cross the whole image\n    d = sqrt((double)line[0] * line[0] + (double)line[1] * line[1]);\n    line[0] /= d;\n    line[1] /= d;\n    t = (float)(img.cols + img.rows);\n    pt1.x = cvRound(line[2] - line[0] * t);\n    pt1.y = cvRound(line[3] - line[1] * t);\n    pt2.x = cvRound(line[2] + line[0] * t);\n    pt2.y = cvRound(line[3] + line[1] * t);\n    cv::line(img, pt1, pt2, cv::Scalar(0, 255, 0), 3, CV_AA, 0);\n    cv::imshow(\"Fit Line\", img);\n    key = (char)cv::waitKey(0);\n    if (key == 27 || key == 'q' || key == 'Q') // 'ESC'\n      break;\n  }\n  return 0;\n}\n"
        },
        {
          "name": "example_20-01.cpp",
          "type": "blob",
          "size": 2.7587890625,
          "content": "//Example 20-01. Using K-means\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace std;\n\nstatic void help(char* argv[]) {\n    cout << \"\\nThis program demonstrates kmeans clustering.\\n\"\n            \" It generates an image with random points, then assigns a random number\\n\"\n            \" of cluster centers and uses kmeans to move those cluster centers to their\\n\"\n            \" representative location\\n\"\n            \"Usage:\\n\"\n         << argv[0] << \"\\n\\n\" \n         << \"ESC or 'q' or 'Q' to quit\\n\\n\"<< endl;\n}\n\nint main(int argc, char** argv) {\n\thelp(argv);\n    const int MAX_CLUSTERS = 5;\n    cv::Scalar colorTab[] = {\n        cv::Scalar( 0, 0, 255 ),\n        cv::Scalar( 0, 255, 0 ),\n        cv::Scalar( 255, 100, 100 ),\n        cv::Scalar( 255, 0, 255 ),\n        cv::Scalar( 0, 255, 255 )\n    };\n    cv::Mat img(500, 500, CV_8UC3);\n    cv::RNG rng(12345);\n    for(;;) {\n        int clusterCount = rng.uniform(2, MAX_CLUSTERS+1);\n        int sampleCount = rng.uniform(1, 1001);\n        cv::Mat points(sampleCount, 1, CV_32FC2), labels;\n        clusterCount = MIN(clusterCount, sampleCount);\n        cv::Mat centers(clusterCount, 1, points.type());\n        /* generate random sample from multigaussian distribution */\n        for(int k = 0; k < clusterCount; k++) {\n            cv::Point center;\n            center.x = rng.uniform(0, img.cols);\n            center.y = rng.uniform(0, img.rows);\n            cv::Mat pointChunk = points.rowRange(\n                        k*sampleCount/clusterCount,\n                        k == clusterCount - 1 ? sampleCount : (k+1)*sampleCount/clusterCount\n                                                );\n            rng.fill(\n                        pointChunk,\n                        cv::RNG::NORMAL,\n                        cv::Scalar(center.x, center.y),\n                        cv::Scalar(img.cols*0.05, img.rows*0.05)\n                        );\n        }\n        randShuffle(points, 1, &rng);\n        kmeans(\n                    points,\n                    clusterCount,\n                    labels,\n                    cv::TermCriteria(\n                        cv::TermCriteria::EPS | cv::TermCriteria::COUNT,\n                        10,\n                        1.0\n                        ),\n                    3,\n                    cv::KMEANS_PP_CENTERS,\n                    centers\n              );\n        img = cv::Scalar::all(0);\n        for(int i = 0; i < sampleCount; i++) {\n            int clusterIdx = labels.at<int>(i);\n            cv::Point ipt = points.at<cv::Point2f>(i);\n            cv::circle(img, ipt, 2, colorTab[clusterIdx], cv::FILLED, cv::LINE_AA);\n        }\n        cv::imshow(\"Example 20-01\", img);\n        char key = (char)cv::waitKey();\n        if(key == 27 || key == 'q' || key == 'Q') // 'ESC'\n            break;\n    }\n    return 0;\n}\n"
        },
        {
          "name": "example_20-02.cpp",
          "type": "blob",
          "size": 3.1171875,
          "content": "//Example 20-02. Using the Mahalanobis distance for classification\n#include <opencv2/opencv.hpp>\n#include <iostream>\n#include <ctime>\n#include <algorithm>\n\nusing namespace std;\n\nconst int CLUSTER_COUNT = 4;\nconst int SAMPLE_COUNT = 500;\nconst cv::Scalar colorTab[] = {\n    cv::Scalar( 0, 0, 255 ),\n    cv::Scalar( 0, 255, 0 ),\n    cv::Scalar( 255, 0, 0 ),\n    cv::Scalar( 255, 0, 255 ),\n    cv::Scalar( 0, 255, 255 )\n};\n\nstatic void help(char* argv[]) {\n    cout << \"\\nThis program demonstrates using the Mahalanobis distance for classification.\\n\"\n            \" It generates an image with random points, uses kmeans clustering.\\n\"\n            \" And then uses the Mahalanobis distance for classification of new points (colors) .\\n\"\n            \"Usage:\\n\"\n         << argv[0] << \"\\n\\n\" \n         << \"ESC to quit\\n\\n\"<< endl;\n}\nint main(int argc, char** argv) {\n    cv::Mat img(500, 500, CV_8UC3, cv::Scalar::all(0));\n    cv::Mat points(SAMPLE_COUNT, 1, CV_32FC2);\n    cv::RNG rng(time(NULL));\n    help(argv);\n    rng.fill(points, cv::RNG::UNIFORM, cv::Scalar(0, 0), cv::Scalar(img.cols, img.rows));\n\n    cv::Mat labels;\n    kmeans(points, CLUSTER_COUNT, labels,\n           cv::TermCriteria(cv::TermCriteria::EPS | cv::TermCriteria::COUNT,\n                            10, 1.0),\n           3,\n           cv::KMEANS_PP_CENTERS\n           );\n\n    vector<cv::Mat> clusters(CLUSTER_COUNT);\n\n    for(int i = 0; i < SAMPLE_COUNT; i++) {\n        int clusterIdx = labels.at<int>(i);\n\n        cv::Point ipt = points.at<cv::Point2f>(i);\n\n        cv::Mat sample(1, 2, CV_32FC1);\n        sample.at<float>(0, 0) = ipt.x;\n        sample.at<float>(0, 1) = ipt.y;\n        clusters[clusterIdx].push_back(sample);\n        cv::circle(img, ipt, 2, colorTab[clusterIdx], cv::FILLED, cv::LINE_AA);\n    }\n    cv::namedWindow(\"Example 20-02\");\n    cv::imshow(\"Example 20-02\", img);\n\n    vector<cv::Mat> covarMats(CLUSTER_COUNT);\n    vector<cv::Mat> means(CLUSTER_COUNT);\n    for(int i = 0; i < CLUSTER_COUNT; i++) {\n        cv::calcCovarMatrix(clusters[i], covarMats[i], means[i],\n                            CV_COVAR_NORMAL | CV_COVAR_ROWS, 5);\n\n    }\n\n    cout << \"Press any button to classify the next point!\\n\"\n         << \"Press ESC to exit.\" << endl;\n\n    for(;;) {\n        char key = (char)cv::waitKey();\n        if( key == 27 ) break;\n\n        cv::Mat newPoint(1, 2, CV_32FC1);\n        newPoint.at<float>(0, 0) = rng.uniform(0, img.cols);\n        newPoint.at<float>(0, 1) = rng.uniform(0, img.rows);\n        vector<float> mahalanobisDistance(CLUSTER_COUNT);\n\n        for(int i = 0; i < CLUSTER_COUNT; i++) {\n            mahalanobisDistance[i] = cv::Mahalanobis(newPoint, means[i],\n                                                     covarMats[i]);\n        }\n        int clusterIdx =  std::distance( mahalanobisDistance.begin(),\n                                         min_element(mahalanobisDistance.begin(),\n                                                     mahalanobisDistance.end()));\n\n        cv::circle(img, newPoint.at<cv::Point2f>(0), 5, colorTab[clusterIdx],\n                   cv::FILLED, cv::LINE_AA);\n        cv::imshow(\"Example 20-02\", img);\n    }\n\n    cv::destroyAllWindows();\n    return 0;\n}\n"
        },
        {
          "name": "example_21-01.cpp",
          "type": "blob",
          "size": 4.51171875,
          "content": "//Example 21-1. Creating and training a decision tree\n\n#include <opencv2/opencv.hpp>\n#include <stdio.h>\n#include <iostream>\n\nusing namespace std;\nusing namespace cv;\n\nvoid help(char **argv) {\n  cout << \"\\n\\n\"\n       << \"Using binary decision trees to learn to recognize poisonous\\n\"\n       << \"    from edible mushrooms based on visible attributes.\\n\" \n       << \"    This program demonstrates how to create and a train a \\n\"\n       << \"    decision tree using ml library in OpenCV.\\n\"\n       << \"Call:\\n\" << argv[0] << \" <csv-file-path>\\n\\n\"\n       << \"\\nIf you don't enter a file, it defaults to ../mushroom/agaricus-lepiota.data\\n\"\n       << endl;\n}\n\nint main(int argc, char *argv[]) {\n  // If the caller gave a filename, great. Otherwise, use a default.\n  //\n  const char *csv_file_name = argc >= 2 ? argv[1] : \"../mushroom/agaricus-lepiota.data\";\n  cout << \"OpenCV Version: \" << CV_VERSION << endl;\n  help(argv);\n\n  // Read in the CSV file that we were given.\n  //\n  cv::Ptr<cv::ml::TrainData> data_set =\n      cv::ml::TrainData::loadFromCSV(csv_file_name, // Input file name\n                                     0, // Header lines (ignore this many)\n                                     0, // Responses are (start) at thie column\n                                     1, // Inputs start at this column\n                                     \"cat[0-22]\" // All 23 columns are categorical\n                                     );\n  // Use defaults for delimeter (',') and missch ('?')\n  // Verify that we read in what we think.\n  //\n  int n_samples = data_set->getNSamples();\n  if (n_samples == 0) {\n    cerr << \"Could not read file: \" << csv_file_name << endl;\n    exit(-1);\n  } else {\n    cout << \"Read \" << n_samples << \" samples from \" << csv_file_name << endl;\n  }\n\n  // Split the data, so that 90% is train data\n  //\n  data_set->setTrainTestSplitRatio(0.90, false);\n  int n_train_samples = data_set->getNTrainSamples();\n  int n_test_samples = data_set->getNTestSamples();\n  cout << \"Found \" << n_train_samples << \" Train Samples, and \"\n       << n_test_samples << \" Test Samples\" << endl;\n\n  // Create a DTrees classifier.\n  //\n  cv::Ptr<cv::ml::RTrees> dtree = cv::ml::RTrees::create();\n  // set parameters\n  //\n  // These are the parameters from the old mushrooms.cpp code\n  // Set up priors to penalize \"poisonous\" 10x as much as \"edible\"\n  //\n  float _priors[] = {1.0, 10.0};\n  cv::Mat priors(1, 2, CV_32F, _priors);\n  dtree->setMaxDepth(8);\n  dtree->setMinSampleCount(10);\n  dtree->setRegressionAccuracy(0.01f);\n  dtree->setUseSurrogates(false /* true */);\n  dtree->setMaxCategories(15);\n  dtree->setCVFolds(0 /*10*/); // nonzero causes core dump\n  dtree->setUse1SERule(true);\n  dtree->setTruncatePrunedTree(true);\n  // dtree->setPriors( priors );\n  dtree->setPriors(cv::Mat()); // ignore priors for now...\n  // Now train the model\n  // NB: we are only using the \"train\" part of the data set\n  //\n  dtree->train(data_set);\n\n  // Having successfully trained the data, we should be able\n  // to calculate the error on both the training data, as well\n  // as the test data that we held out.\n  //\n  cv::Mat results;\n  float train_performance = dtree->calcError(data_set,\n                                             false, // use train data\n                                             results // cv::noArray()\n                                             );\n  std::vector<cv::String> names;\n  data_set->getNames(names);\n  Mat flags = data_set->getVarSymbolFlags();\n\n  // Compute some statistics on our own:\n  //\n  {\n    cv::Mat expected_responses = data_set->getResponses();\n    int good = 0, bad = 0, total = 0;\n    for (int i = 0; i < data_set->getNTrainSamples(); ++i) {\n      float received = results.at<float>(i, 0);\n      float expected = expected_responses.at<float>(i, 0);\n      cv::String r_str = names[(int)received];\n      cv::String e_str = names[(int)expected];\n      cout << \"Expected: \" << e_str << \", got: \" << r_str << endl;\n      if (received == expected)\n        good++;\n      else\n        bad++;\n      total++;\n    }\n    cout << \"Correct answers: \" <<(float(good)/total) <<\" % \" << endl;\n                cout << \"Incorrect answers: \" << (float(bad) / total) << \"%\"\n         << endl;\n  }\n  float test_performance = dtree->calcError(data_set,\n                                            true, // use test data\n                                            results // cv::noArray()\n                                            );\n  cout << \"Performance on training data: \" << train_performance << \"%\" << endl;\n  cout << \"Performance on test data: \" <<test_performance <<\" % \" <<endl;\n  return 0;\n}\n"
        },
        {
          "name": "example_22-01.cpp",
          "type": "blob",
          "size": 2.962890625,
          "content": "// Example 22-1. Detecting and drawing faces\n\n#include <vector>\n#include <iostream>\n#include <cstdlib>\n#include <fstream>\n#include <opencv2/opencv.hpp>\n#include \"opencv2/objdetect.hpp\"\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n\nusing std::cout;\nusing std::cerr;\nusing std::vector;\nusing std::string;\n\n// Detect and draw detected object boxes on image\n//\nvoid detectAndDraw(\n        cv::Mat& img,                               // input image\n        cv::Ptr<cv::CascadeClassifier> classifier,  // preloaded classifier\n        double scale = 1.3) {                       // resize image by ...\n    // Just some pretty colors to draw with\n    //\n    enum { BLUE, AQUA, CYAN, GREEN };\n    static cv::Scalar colors[] = {\n        cv::Scalar(0, 0, 255),\n        cv::Scalar(0, 128, 255),\n        cv::Scalar(0, 255, 255),\n        cv::Scalar(0, 255, 0)\n    };\n    // Image preparation:\n    //\n    cv::Mat gray(img.size(), CV_8UC1);\n    cv::Mat small_img(cvSize(cvRound(img.cols / scale),\n        cvRound(img.rows / scale)), CV_8UC1);\n    cv::cvtColor(img, gray, cv::COLOR_BGR2GRAY);\n    cv::resize(gray, small_img, small_img.size(), 0.0, 0.0, cv::INTER_LINEAR);\n    cv::equalizeHist(small_img, small_img);\n    // Detect objects if any\n    //\n    vector<cv::Rect> objects;\n    classifier->detectMultiScale(\n        small_img,                  // input image\n        objects,                    // place for the results\n        1.1,                        // scale factor\n        3,                          // minimum number of neighbors\n        CV_HAAR_DO_CANNY_PRUNING,   // (old format cascades only)\n        cv::Size(30, 30));          // throw away detections smaller than this\n\n    // Loop through to found objects and draw boxes around them\n    //\n    int i = 0;\n    for (vector<cv::Rect>::iterator r = objects.begin();\n            r != objects.end(); r++, ++i) {\n        cv::Rect r_ = (*r);\n        r_.x *= scale;\n        r_.y *= scale;\n        r_.width *= scale;\n        r_.height *= scale;\n        cv::rectangle(img, r_, colors[i % 4]);\n    }\n}\n\nint main(int argc, char** argv) {\n    // Program expects at least two arguments:\n    //   - path to image file\n    //   - path to .xml classifier file\n    //\n    if (argc < 3) {\n        cerr << \"\\nError: wrong number of arguments.\\n\";\n        cerr    << \"\\nExample 22-1. Detecting and drawing faces\\n\\n\"\n                << \"Use:\\n\" << argv[0] << \" <path/image_file> <path/xml_classifier_file>\\n\"\n                << \"to run this demo\\n\\n\"\n                << \"Example:\\n\"\n                << argv[0] << \" ../faces.png ../haarcascade_frontalface_alt.xml\\n\"\n                << std::endl;\n        exit(1);\n    }\n    string image_file_name = string(argv[1]);\n    cv::Mat img = cv::imread(image_file_name, CV_LOAD_IMAGE_COLOR);\n    string cascade_file_name = string(argv[2]);\n    cv::Ptr<cv::CascadeClassifier> cascade(new cv::CascadeClassifier(cascade_file_name));\n    detectAndDraw(img, cascade);\n    cv::imshow(\"Result\", img);\n    cv::waitKey(0);\n\n    return 0;\n}\n"
        },
        {
          "name": "faceScene.jpg",
          "type": "blob",
          "size": 167.44140625,
          "content": null
        },
        {
          "name": "faceTemplate.jpg",
          "type": "blob",
          "size": 2.357421875,
          "content": null
        },
        {
          "name": "faces.png",
          "type": "blob",
          "size": 1510.1689453125,
          "content": null
        },
        {
          "name": "fruits.jpg",
          "type": "blob",
          "size": 80.4970703125,
          "content": null
        },
        {
          "name": "haarcascade_frontalcatface.xml",
          "type": "blob",
          "size": 401.890625,
          "content": "<?xml version=\"1.0\"?>\n<!----------------------------------------------------------------------------\n A frontal cat face detector using the basic set of Haar features, i.e.\n horizontal and vertical features but not diagonal features.\n\n Contributed by Joseph Howse (josephhowse@nummist.com).\n\n More information can be found in the following publications and\n presentations:\n\n Joseph Howse. OpenCV for Secret Agents (book). Packt Publishing, January\n   2015.\n Joseph Howse. \"Training Detectors and Recognizers in Python and OpenCV\"\n   (tutorial). ISMAR 2014. September 9, 2014.\n   http://nummist.com/opencv/Howse_ISMAR_20140909.pdf\n Joseph Howse. \"Training Intelligent Camera Systems with Python and OpenCV\"\n   (webcast). O’Reilly Media. June 17, 2014.\n   http://www.oreilly.com/pub/e/3077\n\n Build scripts and demo applications can be found in the following repository:\n https://bitbucket.org/Joe_Howse/angora-blue\n\n KNOWN LIMITATIONS:\n\n An upright subject is assumed. In situations where the cat's face might be\n sideways or upside down (e.g. the cat is rolling over), try various rotations\n of the input image.\n\n CHANGELOG:\n\n 2016-08-06: Re-trained with more negative samples and more stages. False\n   positives are much rarer now. If you tailored your code for the cascade's\n   previous version, now you should re-adjust the arguments of\n   CascadeClassifier::detectMultiScale. For example, decrease the value of the\n   minNeighbors argument. You do not need to use a human face detector to\n   cross-check the positives anymore.\n 2014-04-25: First release (at https://bitbucket.org/Joe_Howse/angora-blue)\n\n //////////////////////////////////////////////////////////////////////////\n | Contributors License Agreement\n | IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.\n |   By downloading, copying, installing or using the software you agree\n |   to this license.\n |   If you do not agree to this license, do not download, install,\n |   copy or use the software.\n |\n | Copyright (c) 2014-2016, Joseph Howse (Nummist Media Corporation Limited,\n | Halifax, Nova Scotia, Canada). All rights reserved.\n |\n | Redistribution and use in source and binary forms, with or without\n | modification, are permitted provided that the following conditions are\n | met:\n |\n |    * Redistributions of source code must retain the above copyright\n |       notice, this list of conditions and the following disclaimer.\n |    * Redistributions in binary form must reproduce the above\n |      copyright notice, this list of conditions and the following\n |      disclaimer in the documentation and/or other materials provided\n |      with the distribution.\n |    * The name of Contributor may not used to endorse or promote products\n |      derived from this software without specific prior written permission.\n |\n | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n | \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n | LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n | A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n | CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n | EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n | PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n | PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n | LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n | NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n | SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  Back to\n | Top\n //////////////////////////////////////////////////////////////////////////\n ---------------------------------------------------------------------------->\n<opencv_storage>\n<cascade>\n  <stageType>BOOST</stageType>\n  <featureType>HAAR</featureType>\n  <height>24</height>\n  <width>24</width>\n  <stageParams>\n    <boostType>GAB</boostType>\n    <minHitRate>9.9500000476837158e-01</minHitRate>\n    <maxFalseAlarm>5.0000000000000000e-01</maxFalseAlarm>\n    <weightTrimRate>9.4999999999999996e-01</weightTrimRate>\n    <maxDepth>1</maxDepth>\n    <maxWeakCount>100</maxWeakCount></stageParams>\n  <featureParams>\n    <maxCatCount>0</maxCatCount>\n    <featSize>1</featSize>\n    <mode>BASIC</mode></featureParams>\n  <stageNum>20</stageNum>\n  <stages>\n    <!-- stage 0 -->\n    <_>\n      <maxWeakCount>16</maxWeakCount>\n      <stageThreshold>-1.4806525707244873e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 472 -1.5126220881938934e-02</internalNodes>\n          <leafValues>\n            7.5887596607208252e-01 -3.4230688214302063e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 839 3.9337221533060074e-03</internalNodes>\n          <leafValues>\n            -3.3288389444351196e-01 5.2361363172531128e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 858 -1.5044892206788063e-02</internalNodes>\n          <leafValues>\n            5.5565774440765381e-01 -2.2505992650985718e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 387 -1.2927042320370674e-02</internalNodes>\n          <leafValues>\n            5.7442700862884521e-01 -1.9708566367626190e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 137 5.5960696190595627e-03</internalNodes>\n          <leafValues>\n            -3.0430641770362854e-01 4.0241482853889465e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 207 1.5758406370878220e-02</internalNodes>\n          <leafValues>\n            -1.9767063856124878e-01 4.5033392310142517e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 678 2.4262722581624985e-02</internalNodes>\n          <leafValues>\n            -1.6931040585041046e-01 5.9707510471343994e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 267 -3.5242564976215363e-02</internalNodes>\n          <leafValues>\n            6.5973556041717529e-01 -1.4519356191158295e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 687 2.6568008586764336e-02</internalNodes>\n          <leafValues>\n            -1.3476610183715820e-01 5.4296624660491943e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 228 4.7154121100902557e-02</internalNodes>\n          <leafValues>\n            -1.7337851226329803e-01 4.6071702241897583e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 925 -5.3081759251654148e-03</internalNodes>\n          <leafValues>\n            5.4976856708526611e-01 -1.1913410574197769e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 608 5.3415738046169281e-02</internalNodes>\n          <leafValues>\n            -1.2382411211729050e-01 6.3972741365432739e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 671 -3.0798995867371559e-03</internalNodes>\n          <leafValues>\n            -8.2048600912094116e-01 1.0249497741460800e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 676 -2.3766520898789167e-03</internalNodes>\n          <leafValues>\n            -7.0665025711059570e-01 6.7025005817413330e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 180 1.1965663870796561e-03</internalNodes>\n          <leafValues>\n            -2.4753804504871368e-01 3.0198124051094055e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 830 -4.2106406763195992e-03</internalNodes>\n          <leafValues>\n            3.8455343246459961e-01 -1.8334107100963593e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 1 -->\n    <_>\n      <maxWeakCount>26</maxWeakCount>\n      <stageThreshold>-1.4618960618972778e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 725 1.0133055038750172e-02</internalNodes>\n          <leafValues>\n            -2.8207325935363770e-01 6.2703561782836914e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 356 3.8468956947326660e-02</internalNodes>\n          <leafValues>\n            -1.4483113586902618e-01 7.4971008300781250e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 2 -3.7523733917623758e-03</internalNodes>\n          <leafValues>\n            4.2959973216056824e-01 -2.1445912122726440e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 844 9.9978316575288773e-04</internalNodes>\n          <leafValues>\n            -1.9259409606456757e-01 4.2325544357299805e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 387 -1.6786376014351845e-02</internalNodes>\n          <leafValues>\n            5.0582861900329590e-01 -1.8607729673385620e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 208 3.0330579727888107e-02</internalNodes>\n          <leafValues>\n            -2.1100421249866486e-01 4.2819553613662720e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 206 1.5150709077715874e-02</internalNodes>\n          <leafValues>\n            -2.1129198372364044e-01 3.6263525485992432e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 451 -3.6349350120872259e-03</internalNodes>\n          <leafValues>\n            3.9500275254249573e-01 -1.8650630116462708e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 270 -7.2061517275869846e-03</internalNodes>\n          <leafValues>\n            -7.2816300392150879e-01 1.1153221875429153e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 866 -2.0212728530168533e-02</internalNodes>\n          <leafValues>\n            5.6296736001968384e-01 -1.2056054919958115e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 265 2.5640423409640789e-03</internalNodes>\n          <leafValues>\n            -2.3753854632377625e-01 3.5794413089752197e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 230 -6.2726587057113647e-03</internalNodes>\n          <leafValues>\n            -6.7750877141952515e-01 1.2570948898792267e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 126 7.8710336238145828e-03</internalNodes>\n          <leafValues>\n            6.9211356341838837e-02 -7.6449161767959595e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 306 5.9134580194950104e-02</internalNodes>\n          <leafValues>\n            -1.7324967682361603e-01 3.3361187577247620e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 185 -2.8770491480827332e-03</internalNodes>\n          <leafValues>\n            3.6101511120796204e-01 -1.6122241318225861e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 388 -5.7046953588724136e-03</internalNodes>\n          <leafValues>\n            -6.7659336328506470e-01 8.4153175354003906e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 -7.8070178627967834e-02</internalNodes>\n          <leafValues>\n            6.0763663053512573e-01 -1.1037797480821609e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 321 6.5858578309416771e-03</internalNodes>\n          <leafValues>\n            9.3060031533241272e-02 -7.0068693161010742e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 796 -2.0920131355524063e-03</internalNodes>\n          <leafValues>\n            2.8173315525054932e-01 -1.8406434357166290e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 578 -2.1252598613500595e-02</internalNodes>\n          <leafValues>\n            3.9672371745109558e-01 -1.5127600729465485e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 770 -3.2937981188297272e-02</internalNodes>\n          <leafValues>\n            3.9487251639366150e-01 -1.3228580355644226e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1016 4.9491915851831436e-03</internalNodes>\n          <leafValues>\n            1.1234261840581894e-01 -4.7414371371269226e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 215 3.4271054901182652e-03</internalNodes>\n          <leafValues>\n            7.8623600304126740e-02 -5.7828009128570557e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 200 -6.0859560035169125e-03</internalNodes>\n          <leafValues>\n            -5.0091904401779175e-01 9.1926425695419312e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 990 1.2116413563489914e-02</internalNodes>\n          <leafValues>\n            -1.7154470086097717e-01 2.6759135723114014e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 456 8.2814376801252365e-03</internalNodes>\n          <leafValues>\n            -1.2938241660594940e-01 3.5665917396545410e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 2 -->\n    <_>\n      <maxWeakCount>26</maxWeakCount>\n      <stageThreshold>-1.4103703498840332e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 532 -1.0988018475472927e-02</internalNodes>\n          <leafValues>\n            6.4358645677566528e-01 -2.3149165511131287e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 750 -7.8163212165236473e-03</internalNodes>\n          <leafValues>\n            5.4850798845291138e-01 -1.7881108820438385e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 289 7.1337133646011353e-02</internalNodes>\n          <leafValues>\n            -1.7631703615188599e-01 4.5873588323593140e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 549 5.2656695246696472e-02</internalNodes>\n          <leafValues>\n            -1.3836050033569336e-01 5.6253266334533691e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 8 1.5166129916906357e-02</internalNodes>\n          <leafValues>\n            -2.0990008115768433e-01 4.0483391284942627e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 970 -1.4538960531353951e-03</internalNodes>\n          <leafValues>\n            3.3692672848701477e-01 -2.1745139360427856e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 875 1.1136244982481003e-02</internalNodes>\n          <leafValues>\n            -1.5003634989261627e-01 5.2208083868026733e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 925 -3.3187635708600283e-03</internalNodes>\n          <leafValues>\n            3.9145255088806152e-01 -1.9418042898178101e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 485 4.9791105091571808e-02</internalNodes>\n          <leafValues>\n            -1.0192432254552841e-01 5.4612094163894653e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 828 4.3476112186908722e-02</internalNodes>\n          <leafValues>\n            -1.2768918275833130e-01 5.0825607776641846e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 719 -2.8149634599685669e-03</internalNodes>\n          <leafValues>\n            -7.0453292131423950e-01 1.2536850571632385e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 846 1.6101204091683030e-03</internalNodes>\n          <leafValues>\n            -2.6965174078941345e-01 2.2737979888916016e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 715 -1.5866891480982304e-03</internalNodes>\n          <leafValues>\n            -6.6891485452651978e-01 1.1686278134584427e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 677 -3.2338392920792103e-03</internalNodes>\n          <leafValues>\n            -6.7284232378005981e-01 6.6228114068508148e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 479 -9.9909156560897827e-03</internalNodes>\n          <leafValues>\n            3.6961549520492554e-01 -1.5993835031986237e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 350 4.8409838229417801e-02</internalNodes>\n          <leafValues>\n            -1.0068884491920471e-01 5.0648134946823120e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 273 8.0585200339555740e-03</internalNodes>\n          <leafValues>\n            -1.6782654821872711e-01 3.5382467508316040e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 338 -1.1718695983290672e-02</internalNodes>\n          <leafValues>\n            4.3832498788833618e-01 -1.2780784070491791e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 594 5.7147610932588577e-03</internalNodes>\n          <leafValues>\n            7.5814604759216309e-02 -7.2597140073776245e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 603 -2.0917234942317009e-03</internalNodes>\n          <leafValues>\n            -6.0916984081268311e-01 8.4811411798000336e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 855 5.7651996612548828e-03</internalNodes>\n          <leafValues>\n            -1.9243443012237549e-01 2.8976503014564514e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 565 -2.8093710541725159e-02</internalNodes>\n          <leafValues>\n            5.4229170083999634e-01 -1.0005526244640350e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 136 8.9291334152221680e-03</internalNodes>\n          <leafValues>\n            8.3808921277523041e-02 -6.3219338655471802e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 268 -5.1958961412310600e-03</internalNodes>\n          <leafValues>\n            -5.4964137077331543e-01 7.9588212072849274e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 95 9.2318728566169739e-03</internalNodes>\n          <leafValues>\n            -1.2818163633346558e-01 4.2056322097778320e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 964 -2.0556427538394928e-02</internalNodes>\n          <leafValues>\n            3.2048463821411133e-01 -1.3858842849731445e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 3 -->\n    <_>\n      <maxWeakCount>35</maxWeakCount>\n      <stageThreshold>-1.4265209436416626e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 683 1.8821602687239647e-02</internalNodes>\n          <leafValues>\n            -1.7807419598102570e-01 5.9040957689285278e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 471 -9.5066539943218231e-03</internalNodes>\n          <leafValues>\n            5.0587177276611328e-01 -1.7767964303493500e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 884 1.3296608813107014e-03</internalNodes>\n          <leafValues>\n            -1.6886346042156219e-01 3.6326614022254944e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 473 3.5266026854515076e-02</internalNodes>\n          <leafValues>\n            -1.1824090778827667e-01 5.8951085805892944e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 340 1.7804209142923355e-02</internalNodes>\n          <leafValues>\n            -1.4211210608482361e-01 5.1762068271636963e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1001 4.7029324923641980e-04</internalNodes>\n          <leafValues>\n            -2.4296821653842926e-01 2.5087893009185791e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 182 7.1838246658444405e-03</internalNodes>\n          <leafValues>\n            9.2609666287899017e-02 -6.7694115638732910e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 390 -5.7565318420529366e-03</internalNodes>\n          <leafValues>\n            -7.3053181171417236e-01 8.2794629037380219e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 203 2.0850602537393570e-02</internalNodes>\n          <leafValues>\n            -1.7353208363056183e-01 3.3287450671195984e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 805 3.1848326325416565e-03</internalNodes>\n          <leafValues>\n            -2.0941653847694397e-01 2.6059800386428833e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 234 -7.5752258300781250e-02</internalNodes>\n          <leafValues>\n            5.1588213443756104e-01 -1.0057342052459717e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 5 2.8725115582346916e-02</internalNodes>\n          <leafValues>\n            -1.5012685954570770e-01 4.1436919569969177e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 175 -1.7325732856988907e-02</internalNodes>\n          <leafValues>\n            3.8678762316703796e-01 -1.3586300611495972e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 47 -3.2187681645154953e-03</internalNodes>\n          <leafValues>\n            -5.1590150594711304e-01 1.1511231958866119e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1020 -6.1595086008310318e-03</internalNodes>\n          <leafValues>\n            -7.0271849632263184e-01 5.5648274719715118e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 768 -8.7264683097600937e-03</internalNodes>\n          <leafValues>\n            2.6393634080886841e-01 -1.8446569144725800e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 57 8.1868227571249008e-03</internalNodes>\n          <leafValues>\n            8.0838531255722046e-02 -5.5512112379074097e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 139 -7.8468751162290573e-03</internalNodes>\n          <leafValues>\n            -5.7306796312332153e-01 8.3454042673110962e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 665 2.9962153639644384e-03</internalNodes>\n          <leafValues>\n            6.2645487487316132e-02 -5.8123600482940674e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 414 -4.3795984238386154e-03</internalNodes>\n          <leafValues>\n            2.2211562097072601e-01 -1.9649308919906616e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 908 -6.3172029331326485e-03</internalNodes>\n          <leafValues>\n            -6.6067039966583252e-01 6.4884319901466370e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 1.3302030274644494e-03</internalNodes>\n          <leafValues>\n            -1.0496762394905090e-01 4.2326071858406067e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 951 -4.3333107605576515e-03</internalNodes>\n          <leafValues>\n            -4.9972066283226013e-01 8.7225496768951416e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 244 -3.5346355289220810e-03</internalNodes>\n          <leafValues>\n            3.0818134546279907e-01 -1.4765550196170807e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 256 -8.7353587150573730e-03</internalNodes>\n          <leafValues>\n            -6.5214675664901733e-01 7.1881487965583801e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 491 -1.5620354562997818e-02</internalNodes>\n          <leafValues>\n            3.5721915960311890e-01 -1.1427627503871918e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 778 -3.9745438843965530e-03</internalNodes>\n          <leafValues>\n            -6.6090464591979980e-01 6.2067609280347824e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 689 -6.7040426656603813e-03</internalNodes>\n          <leafValues>\n            2.7337384223937988e-01 -1.4059108495712280e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 125 3.5359347239136696e-03</internalNodes>\n          <leafValues>\n            6.1201948672533035e-02 -6.0017114877700806e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 118 6.0818484053015709e-03</internalNodes>\n          <leafValues>\n            -1.5247075259685516e-01 2.4383027851581573e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 880 -7.2771648410707712e-04</internalNodes>\n          <leafValues>\n            3.0065426230430603e-01 -1.2037902325391769e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 643 4.6168416738510132e-03</internalNodes>\n          <leafValues>\n            5.5311698466539383e-02 -7.5343269109725952e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 676 2.5280299596488476e-03</internalNodes>\n          <leafValues>\n            5.7204965502023697e-02 -5.3993463516235352e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 878 1.5074670314788818e-02</internalNodes>\n          <leafValues>\n            -9.6106290817260742e-02 3.9084190130233765e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 831 -8.4932018071413040e-03</internalNodes>\n          <leafValues>\n            3.4130987524986267e-01 -1.4117397367954254e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 4 -->\n    <_>\n      <maxWeakCount>37</maxWeakCount>\n      <stageThreshold>-1.3977209329605103e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 794 -2.5338861159980297e-03</internalNodes>\n          <leafValues>\n            5.7321399450302124e-01 -2.0396080613136292e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 588 -6.5112011507153511e-03</internalNodes>\n          <leafValues>\n            3.7378740310668945e-01 -2.5049039721488953e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 238 1.6318978741765022e-03</internalNodes>\n          <leafValues>\n            -2.1858637034893036e-01 3.5027471184730530e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 189 3.3452022820711136e-02</internalNodes>\n          <leafValues>\n            -1.4827065169811249e-01 4.7324529290199280e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 192 -1.1114047840237617e-02</internalNodes>\n          <leafValues>\n            4.1662359237670898e-01 -2.1660456061363220e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 527 -1.2996498262509704e-03</internalNodes>\n          <leafValues>\n            4.7613915801048279e-01 -1.6742442548274994e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 648 -3.2986078877002001e-03</internalNodes>\n          <leafValues>\n            -6.7662662267684937e-01 8.6653761565685272e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 4 6.6831205040216446e-03</internalNodes>\n          <leafValues>\n            -2.0158858597278595e-01 2.6189696788787842e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 482 2.1282089874148369e-03</internalNodes>\n          <leafValues>\n            -1.1156299710273743e-01 4.0097075700759888e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 682 -9.0472139418125153e-03</internalNodes>\n          <leafValues>\n            3.2078295946121216e-01 -1.6775439679622650e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 226 -5.3160609677433968e-03</internalNodes>\n          <leafValues>\n            -5.5567348003387451e-01 1.2950280308723450e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 205 7.9724024981260300e-03</internalNodes>\n          <leafValues>\n            -2.1466700732707977e-01 2.2514854371547699e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 920 -2.1980279125273228e-03</internalNodes>\n          <leafValues>\n            2.8711742162704468e-01 -1.6561916470527649e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 312 5.3897619247436523e-02</internalNodes>\n          <leafValues>\n            -1.4823001623153687e-01 3.4951418638229370e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 -7.6241128146648407e-02</internalNodes>\n          <leafValues>\n            6.0101884603500366e-01 -8.8328786194324493e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 129 -8.3202747628092766e-03</internalNodes>\n          <leafValues>\n            -7.2828358411788940e-01 8.7956465780735016e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 401 5.3778752684593201e-02</internalNodes>\n          <leafValues>\n            -1.0316975414752960e-01 5.0247919559478760e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 416 -1.2401826679706573e-02</internalNodes>\n          <leafValues>\n            2.7538898587226868e-01 -1.5569972991943359e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 986 1.3729928061366081e-02</internalNodes>\n          <leafValues>\n            -1.3373774290084839e-01 3.0739122629165649e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 905 -2.2788168862462044e-03</internalNodes>\n          <leafValues>\n            2.2555501759052277e-01 -1.9497908651828766e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 667 3.6288173869252205e-03</internalNodes>\n          <leafValues>\n            4.8981692641973495e-02 -7.9248648881912231e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 85 5.2453137934207916e-02</internalNodes>\n          <leafValues>\n            -1.3389803469181061e-01 3.2700663805007935e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 821 3.1685843132436275e-03</internalNodes>\n          <leafValues>\n            -1.4415425062179565e-01 2.8044179081916809e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 193 8.9051481336355209e-03</internalNodes>\n          <leafValues>\n            6.1227656900882721e-02 -7.0277702808380127e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 837 -1.3966157566756010e-03</internalNodes>\n          <leafValues>\n            4.2409667372703552e-01 -1.0888981819152832e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 271 -6.7695947363972664e-03</internalNodes>\n          <leafValues>\n            -5.1588076353073120e-01 8.3254821598529816e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 404 2.2157761268317699e-03</internalNodes>\n          <leafValues>\n            -1.3696527481079102e-01 2.8638482093811035e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 619 2.7808796148747206e-03</internalNodes>\n          <leafValues>\n            7.1316704154014587e-02 -6.0322999954223633e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 515 4.5836241915822029e-03</internalNodes>\n          <leafValues>\n            -1.2486589699983597e-01 3.2929363846778870e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1042 -5.1459800451993942e-03</internalNodes>\n          <leafValues>\n            -5.3781992197036743e-01 7.6631128787994385e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1043 2.4449056945741177e-03</internalNodes>\n          <leafValues>\n            8.5920669138431549e-02 -4.0670683979988098e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 71 -2.7756379917263985e-02</internalNodes>\n          <leafValues>\n            3.7449231743812561e-01 -1.0538945347070694e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 809 -1.8243372440338135e-02</internalNodes>\n          <leafValues>\n            3.4281516075134277e-01 -9.9502928555011749e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 372 3.8416781462728977e-03</internalNodes>\n          <leafValues>\n            7.3987491428852081e-02 -4.8903524875640869e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 376 -1.2322908267378807e-02</internalNodes>\n          <leafValues>\n            2.1036790311336517e-01 -1.5852701663970947e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 391 -4.1760304011404514e-03</internalNodes>\n          <leafValues>\n            3.1288132071495056e-01 -1.1697492748498917e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 859 -2.8026863932609558e-02</internalNodes>\n          <leafValues>\n            3.3711743354797363e-01 -1.2294299900531769e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 5 -->\n    <_>\n      <maxWeakCount>42</maxWeakCount>\n      <stageThreshold>-1.3775455951690674e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 725 1.3382414355874062e-02</internalNodes>\n          <leafValues>\n            -1.7922241985797882e-01 5.0368404388427734e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 967 1.9935802556574345e-03</internalNodes>\n          <leafValues>\n            -2.5249919295310974e-01 3.5295018553733826e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 891 -1.3569685397669673e-03</internalNodes>\n          <leafValues>\n            4.1222429275512695e-01 -1.8140394985675812e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 911 2.5418698787689209e-03</internalNodes>\n          <leafValues>\n            -2.3195247352123260e-01 2.5945317745208740e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 362 1.1867792345583439e-03</internalNodes>\n          <leafValues>\n            -1.1509010195732117e-01 4.0095508098602295e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 280 -4.0491363033652306e-03</internalNodes>\n          <leafValues>\n            -7.6275551319122314e-01 8.0663219094276428e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 264 2.4698153138160706e-02</internalNodes>\n          <leafValues>\n            -9.9053405225276947e-02 4.6469488739967346e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 832 1.3041709549725056e-02</internalNodes>\n          <leafValues>\n            -1.3049817085266113e-01 4.7066822648048401e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 257 -2.0927201956510544e-02</internalNodes>\n          <leafValues>\n            -7.2363191843032837e-01 7.5520738959312439e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 41 1.6108792275190353e-02</internalNodes>\n          <leafValues>\n            8.9385204017162323e-02 -5.0678378343582153e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 872 -8.6308103054761887e-03</internalNodes>\n          <leafValues>\n            3.1878158450126648e-01 -1.3526505231857300e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 347 1.2651814613491297e-03</internalNodes>\n          <leafValues>\n            -1.2344279885292053e-01 4.0271109342575073e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 735 -3.0170590616762638e-03</internalNodes>\n          <leafValues>\n            -5.6960099935531616e-01 7.0437252521514893e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 538 -3.5529488231986761e-03</internalNodes>\n          <leafValues>\n            2.0624065399169922e-01 -1.8426756560802460e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 735 2.8021419420838356e-03</internalNodes>\n          <leafValues>\n            7.2748780250549316e-02 -5.3796368837356567e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 447 -9.9331419914960861e-04</internalNodes>\n          <leafValues>\n            2.4827398359775543e-01 -1.5866567194461823e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 440 -7.1950745768845081e-03</internalNodes>\n          <leafValues>\n            -5.0943744182586670e-01 7.3041573166847229e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 906 -8.7737981230020523e-03</internalNodes>\n          <leafValues>\n            2.4838714301586151e-01 -1.5162147581577301e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 608 5.6750684976577759e-02</internalNodes>\n          <leafValues>\n            -8.4416143596172333e-02 4.4269657135009766e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 772 1.8110256642103195e-03</internalNodes>\n          <leafValues>\n            -1.7787678539752960e-01 2.2753682732582092e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 117 6.1733853071928024e-02</internalNodes>\n          <leafValues>\n            -1.4452947676181793e-01 2.6785543560981750e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 718 1.7999792471528053e-03</internalNodes>\n          <leafValues>\n            5.3869031369686127e-02 -7.0216673612594604e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 718 -1.7839821521192789e-03</internalNodes>\n          <leafValues>\n            -7.3474282026290894e-01 4.3809492141008377e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 795 -2.2269869223237038e-03</internalNodes>\n          <leafValues>\n            2.5256577134132385e-01 -1.4765015244483948e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 845 7.7408831566572189e-04</internalNodes>\n          <leafValues>\n            -1.6781617701053619e-01 2.5267890095710754e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 710 9.6316616982221603e-03</internalNodes>\n          <leafValues>\n            5.8525908738374710e-02 -6.3684886693954468e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 181 -1.1892126873135567e-02</internalNodes>\n          <leafValues>\n            2.6363542675971985e-01 -1.4106634259223938e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 326 4.8407237976789474e-02</internalNodes>\n          <leafValues>\n            -1.0837136209011078e-01 3.6018091440200806e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 572 -1.0315750539302826e-01</internalNodes>\n          <leafValues>\n            -7.3309695720672607e-01 6.4976803958415985e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 415 -2.6544972788542509e-03</internalNodes>\n          <leafValues>\n            2.7709859609603882e-01 -1.3764445483684540e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1033 -4.8850756138563156e-03</internalNodes>\n          <leafValues>\n            -5.0026285648345947e-01 6.8797707557678223e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 299 -1.1310833506286144e-02</internalNodes>\n          <leafValues>\n            2.5653550028800964e-01 -1.3755545020103455e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 152 -3.8394361734390259e-02</internalNodes>\n          <leafValues>\n            2.6404461264610291e-01 -1.3614650070667267e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 486 5.8298893272876740e-03</internalNodes>\n          <leafValues>\n            6.0382172465324402e-02 -5.9578329324722290e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 393 2.2631133906543255e-03</internalNodes>\n          <leafValues>\n            -1.0302778333425522e-01 3.4782779216766357e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 629 -1.8709234893321991e-02</internalNodes>\n          <leafValues>\n            -7.6758313179016113e-01 4.6181913465261459e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 67 3.7359733134508133e-02</internalNodes>\n          <leafValues>\n            -1.3407541811466217e-01 2.5607112050056458e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 504 -5.3099328652024269e-03</internalNodes>\n          <leafValues>\n            -6.9016355276107788e-01 4.7683756798505783e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 527 -1.5396323287859559e-03</internalNodes>\n          <leafValues>\n            3.7874689698219299e-01 -9.2663109302520752e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 470 -2.6333518326282501e-03</internalNodes>\n          <leafValues>\n            2.9358446598052979e-01 -1.2460695207118988e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 171 1.6515964642167091e-02</internalNodes>\n          <leafValues>\n            -1.4082725346088409e-01 2.3664724826812744e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 681 -4.4658156111836433e-03</internalNodes>\n          <leafValues>\n            -5.9253305196762085e-01 5.5994171649217606e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 6 -->\n    <_>\n      <maxWeakCount>50</maxWeakCount>\n      <stageThreshold>-1.3835698366165161e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 898 1.5156399458646774e-03</internalNodes>\n          <leafValues>\n            -1.0024535655975342e-01 5.8807808160781860e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 802 -3.5168868489563465e-03</internalNodes>\n          <leafValues>\n            4.0972998738288879e-01 -1.6088742017745972e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 180 2.3035616613924503e-03</internalNodes>\n          <leafValues>\n            -1.8985269963741302e-01 2.9883998632431030e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 254 4.5840561389923096e-02</internalNodes>\n          <leafValues>\n            -1.4383240044116974e-01 4.7528687119483948e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 405 5.5156396701931953e-03</internalNodes>\n          <leafValues>\n            -1.7356806993484497e-01 3.4583050012588501e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 436 3.9731184951961040e-03</internalNodes>\n          <leafValues>\n            7.8886620700359344e-02 -5.6442558765411377e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 412 -5.6995991617441177e-03</internalNodes>\n          <leafValues>\n            -4.7576662898063660e-01 9.4875656068325043e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 539 -9.6501735970377922e-03</internalNodes>\n          <leafValues>\n            2.3381656408309937e-01 -1.8310526013374329e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 209 6.1656545847654343e-02</internalNodes>\n          <leafValues>\n            -1.4697165787220001e-01 3.6247691512107849e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 398 1.1418928205966949e-01</internalNodes>\n          <leafValues>\n            -8.8033527135848999e-02 4.4633501768112183e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 3 -1.1903396807610989e-02</internalNodes>\n          <leafValues>\n            3.3496665954589844e-01 -1.2121009081602097e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 546 -4.1371315717697144e-02</internalNodes>\n          <leafValues>\n            4.1400006413459778e-01 -9.7229279577732086e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 380 7.8342631459236145e-03</internalNodes>\n          <leafValues>\n            -1.6631671786308289e-01 2.5738984346389771e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 304 -4.5139621943235397e-03</internalNodes>\n          <leafValues>\n            -4.6883803606033325e-01 8.7662570178508759e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 929 1.5914421528577805e-03</internalNodes>\n          <leafValues>\n            -1.1636006087064743e-01 3.2739594578742981e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 942 -5.2607608959078789e-03</internalNodes>\n          <leafValues>\n            -6.7755740880966187e-01 5.1752120256423950e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 941 3.1824512407183647e-03</internalNodes>\n          <leafValues>\n            5.2379645407199860e-02 -6.0918039083480835e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 939 -3.6813789047300816e-03</internalNodes>\n          <leafValues>\n            4.8251116275787354e-01 -9.2318780720233917e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 622 -4.3226117268204689e-03</internalNodes>\n          <leafValues>\n            -5.7561415433883667e-01 5.9672243893146515e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 250 -7.1843853220343590e-03</internalNodes>\n          <leafValues>\n            2.6631006598472595e-01 -1.4015418291091919e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 871 2.1028071641921997e-03</internalNodes>\n          <leafValues>\n            -1.1286304146051407e-01 3.5946926474571228e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 22 8.5248583927750587e-03</internalNodes>\n          <leafValues>\n            6.9424033164978027e-02 -5.2462881803512573e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 147 6.9785099476575851e-03</internalNodes>\n          <leafValues>\n            5.6668873876333237e-02 -5.6192052364349365e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 474 -5.2639590576291084e-03</internalNodes>\n          <leafValues>\n            -5.8648955821990967e-01 5.0352573394775391e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 406 2.8417459689080715e-03</internalNodes>\n          <leafValues>\n            -1.3425759971141815e-01 2.7325555682182312e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 394 -1.3187457807362080e-02</internalNodes>\n          <leafValues>\n            4.0453648567199707e-01 -9.1843754053115845e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 722 -6.7344801500439644e-03</internalNodes>\n          <leafValues>\n            -7.5647395849227905e-01 5.0157479941844940e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 187 2.1363141015172005e-02</internalNodes>\n          <leafValues>\n            4.7982390969991684e-02 -5.5388218164443970e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 623 1.6145884292200208e-03</internalNodes>\n          <leafValues>\n            7.9808227717876434e-02 -3.7233716249465942e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 525 -2.2595757618546486e-03</internalNodes>\n          <leafValues>\n            2.8343635797500610e-01 -1.1216876655817032e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 214 1.4407988637685776e-02</internalNodes>\n          <leafValues>\n            -1.0392460227012634e-01 3.1299999356269836e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 476 -1.4912552433088422e-03</internalNodes>\n          <leafValues>\n            2.8538599610328674e-01 -1.0644508898258209e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 195 9.8895151168107986e-03</internalNodes>\n          <leafValues>\n            5.0090074539184570e-02 -6.2053185701370239e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 115 4.2754956521093845e-03</internalNodes>\n          <leafValues>\n            6.5051443874835968e-02 -4.2582303285598755e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 754 -2.5489409454166889e-03</internalNodes>\n          <leafValues>\n            3.1278640031814575e-01 -9.9601686000823975e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 717 -6.0358326882123947e-03</internalNodes>\n          <leafValues>\n            2.2685267031192780e-01 -1.3849361240863800e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 875 1.1879121884703636e-02</internalNodes>\n          <leafValues>\n            -8.9687183499336243e-02 3.7642294168472290e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 111 1.2982923537492752e-02</internalNodes>\n          <leafValues>\n            4.3990727514028549e-02 -7.3371982574462891e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 993 -2.8599319048225880e-03</internalNodes>\n          <leafValues>\n            -4.3102917075157166e-01 5.9561621397733688e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 737 -3.5829999251291156e-04</internalNodes>\n          <leafValues>\n            1.7152757942676544e-01 -1.6511310636997223e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 27 2.5972571223974228e-02</internalNodes>\n          <leafValues>\n            -1.2855969369411469e-01 2.2820757329463959e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 516 4.2565623298287392e-03</internalNodes>\n          <leafValues>\n            5.7662181556224823e-02 -5.3734982013702393e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 50 -2.9159568250179291e-02</internalNodes>\n          <leafValues>\n            -6.3020753860473633e-01 4.0746636688709259e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 413 3.1341956928372383e-03</internalNodes>\n          <leafValues>\n            -8.1374719738960266e-02 4.1371321678161621e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 935 -1.3592604082077742e-03</internalNodes>\n          <leafValues>\n            3.2382342219352722e-01 -9.7880341112613678e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 758 -6.9904811680316925e-03</internalNodes>\n          <leafValues>\n            -6.8850576877593994e-01 4.2428225278854370e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 93 -8.7879784405231476e-03</internalNodes>\n          <leafValues>\n            -5.8945190906524658e-01 3.7613209336996078e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 491 -1.7947785556316376e-02</internalNodes>\n          <leafValues>\n            3.1659606099128723e-01 -8.7437197566032410e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 490 8.0379713326692581e-03</internalNodes>\n          <leafValues>\n            -1.1311284452676773e-01 3.0860018730163574e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 716 3.0642822384834290e-03</internalNodes>\n          <leafValues>\n            4.8351831734180450e-02 -6.0563534498214722e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 7 -->\n    <_>\n      <maxWeakCount>54</maxWeakCount>\n      <stageThreshold>-1.3756012916564941e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 798 -1.7431776504963636e-03</internalNodes>\n          <leafValues>\n            5.5538344383239746e-01 -1.0357239097356796e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 425 4.4551412574946880e-03</internalNodes>\n          <leafValues>\n            -1.2460361421108246e-01 5.1942145824432373e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 843 3.5308140795677900e-03</internalNodes>\n          <leafValues>\n            -2.2974169254302979e-01 2.7043044567108154e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 532 -1.5887852758169174e-02</internalNodes>\n          <leafValues>\n            4.1745069622993469e-01 -1.1281611770391464e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 7 1.1611310765147209e-02</internalNodes>\n          <leafValues>\n            -1.9416445493698120e-01 2.5554594397544861e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 935 1.5740045346319675e-03</internalNodes>\n          <leafValues>\n            -1.2263108044862747e-01 3.8852572441101074e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 547 5.1882643252611160e-02</internalNodes>\n          <leafValues>\n            -7.5461924076080322e-02 5.0257563591003418e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 251 -3.8624972105026245e-02</internalNodes>\n          <leafValues>\n            4.0001305937767029e-01 -9.6231088042259216e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 272 -3.9408572018146515e-02</internalNodes>\n          <leafValues>\n            3.0533725023269653e-01 -1.6677139699459076e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 29 7.5884531252086163e-03</internalNodes>\n          <leafValues>\n            9.8107770085334778e-02 -5.8249044418334961e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 218 7.2114326059818268e-02</internalNodes>\n          <leafValues>\n            -1.4419755339622498e-01 2.8208708763122559e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 268 5.5582458153367043e-03</internalNodes>\n          <leafValues>\n            7.2843901813030243e-02 -5.5255079269409180e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 877 -4.7345291823148727e-03</internalNodes>\n          <leafValues>\n            3.3209753036499023e-01 -1.2499606609344482e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 577 5.1413839682936668e-03</internalNodes>\n          <leafValues>\n            6.4787313342094421e-02 -6.4880597591400146e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 999 5.4608630016446114e-03</internalNodes>\n          <leafValues>\n            3.7491828203201294e-02 -7.5315922498703003e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 542 -8.6404485045932233e-05</internalNodes>\n          <leafValues>\n            1.7464619874954224e-01 -1.8258170783519745e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 442 6.1132330447435379e-03</internalNodes>\n          <leafValues>\n            7.5624085962772369e-02 -4.3711006641387939e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 889 -7.0670098066329956e-03</internalNodes>\n          <leafValues>\n            2.1796958148479462e-01 -1.4547325670719147e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 347 9.4080460257828236e-04</internalNodes>\n          <leafValues>\n            -1.2536728382110596e-01 2.8143358230590820e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 580 -2.6800869964063168e-03</internalNodes>\n          <leafValues>\n            -4.2977494001388550e-01 8.2963027060031891e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 297 5.8945640921592712e-03</internalNodes>\n          <leafValues>\n            4.2834181338548660e-02 -6.0937494039535522e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 1.0121082887053490e-03</internalNodes>\n          <leafValues>\n            -1.1036285758018494e-01 2.9971688985824585e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 56 3.1157936900854111e-03</internalNodes>\n          <leafValues>\n            7.3115289211273193e-02 -4.3226471543312073e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 411 -3.3052214421331882e-03</internalNodes>\n          <leafValues>\n            -4.9826300144195557e-01 5.1225960254669189e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 109 8.3188470453023911e-03</internalNodes>\n          <leafValues>\n            5.0362452864646912e-02 -4.8688000440597534e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 393 -2.5094528682529926e-03</internalNodes>\n          <leafValues>\n            2.6902040839195251e-01 -1.0433372855186462e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 924 1.1217880528420210e-03</internalNodes>\n          <leafValues>\n            -1.1188100278377533e-01 3.1254816055297852e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 716 -2.9259414877742529e-03</internalNodes>\n          <leafValues>\n            -5.7495939731597900e-01 5.3564101457595825e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 733 -1.1687271296977997e-02</internalNodes>\n          <leafValues>\n            2.5880128145217896e-01 -1.0639669001102448e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 763 3.5054073669016361e-03</internalNodes>\n          <leafValues>\n            5.4045904427766800e-02 -5.5625277757644653e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 552 1.9068794324994087e-02</internalNodes>\n          <leafValues>\n            -1.1246301978826523e-01 2.5745245814323425e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 230 4.6145436353981495e-03</internalNodes>\n          <leafValues>\n            6.7216314375400543e-02 -4.1385611891746521e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 857 -8.2267355173826218e-03</internalNodes>\n          <leafValues>\n            2.1265375614166260e-01 -1.3443692028522491e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 149 -1.4355888590216637e-02</internalNodes>\n          <leafValues>\n            2.5618723034858704e-01 -1.0785522311925888e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 61 8.0431215465068817e-03</internalNodes>\n          <leafValues>\n            -1.4258129894733429e-01 2.2692860662937164e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 170 -5.6914249435067177e-03</internalNodes>\n          <leafValues>\n            -4.8886317014694214e-01 6.0331270098686218e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 133 -2.5912215933203697e-03</internalNodes>\n          <leafValues>\n            2.1062785387039185e-01 -1.4967896044254303e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 461 5.5204275995492935e-03</internalNodes>\n          <leafValues>\n            -8.1333734095096588e-02 3.8316065073013306e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 515 5.3790090605616570e-03</internalNodes>\n          <leafValues>\n            -9.3129634857177734e-02 3.2883483171463013e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 199 -7.2196200489997864e-03</internalNodes>\n          <leafValues>\n            -6.6427856683731079e-01 4.4702950865030289e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 94 -8.3873540163040161e-02</internalNodes>\n          <leafValues>\n            -7.9910254478454590e-01 2.7107261121273041e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 513 -3.4268260933458805e-03</internalNodes>\n          <leafValues>\n            2.5298807024955750e-01 -1.0898132622241974e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 763 -3.7466005887836218e-03</internalNodes>\n          <leafValues>\n            -5.5346089601516724e-01 5.2094604820013046e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 1.2452949304133654e-03</internalNodes>\n          <leafValues>\n            -8.2017965614795685e-02 3.5483068227767944e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1013 -6.2445802614092827e-03</internalNodes>\n          <leafValues>\n            -5.0969594717025757e-01 5.4533429443836212e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 -1.1970927007496357e-03</internalNodes>\n          <leafValues>\n            3.6470764875411987e-01 -7.7394872903823853e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 757 3.0796977225691080e-03</internalNodes>\n          <leafValues>\n            5.3208738565444946e-02 -5.0689512491226196e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 33 -3.9015077054500580e-02</internalNodes>\n          <leafValues>\n            1.9598089158535004e-01 -1.3218660652637482e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 680 -7.7085788361728191e-03</internalNodes>\n          <leafValues>\n            2.2754703462123871e-01 -1.2544488906860352e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 655 3.2509677112102509e-02</internalNodes>\n          <leafValues>\n            -6.7099742591381073e-02 4.1469818353652954e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 569 3.0232844874262810e-03</internalNodes>\n          <leafValues>\n            6.6373795270919800e-02 -4.2127549648284912e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 54 2.5392756797373295e-03</internalNodes>\n          <leafValues>\n            -1.1576391756534576e-01 2.3464009165763855e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1013 6.8497275933623314e-03</internalNodes>\n          <leafValues>\n            4.5596633106470108e-02 -5.8435302972793579e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 231 -4.4358119368553162e-02</internalNodes>\n          <leafValues>\n            -3.9718165993690491e-01 6.2707424163818359e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 8 -->\n    <_>\n      <maxWeakCount>63</maxWeakCount>\n      <stageThreshold>-1.4057025909423828e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 804 5.0806580111384392e-03</internalNodes>\n          <leafValues>\n            -7.9617008566856384e-02 5.6362086534500122e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 965 2.0602284930646420e-03</internalNodes>\n          <leafValues>\n            -1.8717131018638611e-01 3.4062680602073669e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 495 6.1347078531980515e-02</internalNodes>\n          <leafValues>\n            -1.3253036141395569e-01 4.0938606858253479e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 -6.0383215546607971e-02</internalNodes>\n          <leafValues>\n            4.1172346472740173e-01 -1.4447186887264252e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 478 -3.0238348990678787e-03</internalNodes>\n          <leafValues>\n            3.4262558817863464e-01 -1.0982885956764221e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 458 4.0474245324730873e-03</internalNodes>\n          <leafValues>\n            7.1186766028404236e-02 -5.0650447607040405e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 633 -2.0359824411571026e-03</internalNodes>\n          <leafValues>\n            2.2166600823402405e-01 -1.6060648858547211e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 887 2.7303429305902682e-05</internalNodes>\n          <leafValues>\n            -2.6211214065551758e-01 1.2801185250282288e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 352 1.2323079630732536e-02</internalNodes>\n          <leafValues>\n            8.2502633333206177e-02 -4.5231887698173523e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 878 2.2477287799119949e-02</internalNodes>\n          <leafValues>\n            -7.7229477465152740e-02 4.5144733786582947e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 395 -1.4673802070319653e-02</internalNodes>\n          <leafValues>\n            3.5660189390182495e-01 -1.1584777384996414e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 141 9.9029816687107086e-02</internalNodes>\n          <leafValues>\n            -1.6957059502601624e-01 2.2625257074832916e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 144 -1.0632930323481560e-02</internalNodes>\n          <leafValues>\n            -5.6829780340194702e-01 7.1929946541786194e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 808 2.5341216474771500e-02</internalNodes>\n          <leafValues>\n            -1.2931844592094421e-01 2.6161769032478333e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 816 5.8172484859824181e-03</internalNodes>\n          <leafValues>\n            -1.5375703573226929e-01 2.0636843144893646e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 68 -2.0786169171333313e-01</internalNodes>\n          <leafValues>\n            3.9931070804595947e-01 -7.7051497995853424e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 140 2.2137831151485443e-01</internalNodes>\n          <leafValues>\n            -7.2486869990825653e-02 3.9756566286087036e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 3.4148676786571741e-04</internalNodes>\n          <leafValues>\n            -1.5928100049495697e-01 1.8005076050758362e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 307 -6.7202709615230560e-03</internalNodes>\n          <leafValues>\n            -6.7838191986083984e-01 4.5886330306529999e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 392 1.4110710471868515e-03</internalNodes>\n          <leafValues>\n            -9.7257830202579498e-02 3.2224002480506897e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 266 4.2120069265365601e-02</internalNodes>\n          <leafValues>\n            -8.8405482470989227e-02 3.2538983225822449e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 242 -1.3846142683178186e-03</internalNodes>\n          <leafValues>\n            2.0695628225803375e-01 -1.5275791287422180e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 817 3.5425978712737560e-03</internalNodes>\n          <leafValues>\n            -1.2709444761276245e-01 2.1816165745258331e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 959 3.3351695165038109e-03</internalNodes>\n          <leafValues>\n            4.8398405313491821e-02 -6.0871434211730957e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 958 -3.3201207406818867e-03</internalNodes>\n          <leafValues>\n            -4.8987022042274475e-01 5.5623263120651245e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 915 1.0103111853823066e-03</internalNodes>\n          <leafValues>\n            -1.5765775740146637e-01 1.6940611600875854e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 151 4.9717966467142105e-03</internalNodes>\n          <leafValues>\n            5.1272217184305191e-02 -5.4395431280136108e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 799 1.7913591582328081e-03</internalNodes>\n          <leafValues>\n            -7.2745941579341888e-02 4.0087917447090149e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 102 -1.3228422030806541e-02</internalNodes>\n          <leafValues>\n            -3.5441592335700989e-01 7.9325266182422638e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 2.0421743392944336e-03</internalNodes>\n          <leafValues>\n            -5.9137169271707535e-02 4.6143886446952820e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 -5.9784355107694864e-04</internalNodes>\n          <leafValues>\n            2.5433012843132019e-01 -1.0601133853197098e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 396 -5.1422840915620327e-03</internalNodes>\n          <leafValues>\n            -4.4627833366394043e-01 6.1951976269483566e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 86 6.4243013039231300e-03</internalNodes>\n          <leafValues>\n            3.1528502702713013e-02 -7.2403544187545776e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1035 3.4636156633496284e-03</internalNodes>\n          <leafValues>\n            3.7317775189876556e-02 -5.4165351390838623e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 14 3.2000489532947540e-02</internalNodes>\n          <leafValues>\n            3.0169567093253136e-02 -7.1302002668380737e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 498 -5.8225672692060471e-03</internalNodes>\n          <leafValues>\n            -4.4310861825942993e-01 4.7724053263664246e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 24 -8.4763765335083008e-03</internalNodes>\n          <leafValues>\n            -6.0832363367080688e-01 3.6428902298212051e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 598 2.7582058683037758e-03</internalNodes>\n          <leafValues>\n            -1.0180406272411346e-01 2.4450653791427612e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 695 -3.0314538162201643e-03</internalNodes>\n          <leafValues>\n            -5.6130182743072510e-01 4.1730970144271851e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 691 3.8132141344249249e-03</internalNodes>\n          <leafValues>\n            4.3826375156641006e-02 -4.8639413714408875e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 799 -1.1944114230573177e-03</internalNodes>\n          <leafValues>\n            1.9191412627696991e-01 -1.2599647045135498e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 751 -3.2212696969509125e-02</internalNodes>\n          <leafValues>\n            -7.3205161094665527e-01 3.3331435173749924e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 521 -1.0144908446818590e-03</internalNodes>\n          <leafValues>\n            3.0479896068572998e-01 -8.2489714026451111e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 836 -1.4355147257447243e-02</internalNodes>\n          <leafValues>\n            2.1706604957580566e-01 -1.0914804041385651e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 574 -4.8122168518602848e-03</internalNodes>\n          <leafValues>\n            -6.7199075222015381e-01 4.0943562984466553e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 236 3.3706519752740860e-04</internalNodes>\n          <leafValues>\n            -1.4588885009288788e-01 1.6099508106708527e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 43 -1.8943618983030319e-02</internalNodes>\n          <leafValues>\n            -5.9796541929244995e-01 3.7877634167671204e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 69 1.5444982796907425e-02</internalNodes>\n          <leafValues>\n            2.6846721768379211e-02 -7.2375786304473877e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 303 1.0463559068739414e-02</internalNodes>\n          <leafValues>\n            3.2184243202209473e-02 -6.0756552219390869e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 292 2.5047133676707745e-03</internalNodes>\n          <leafValues>\n            -1.1925315856933594e-01 1.9379882514476776e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 797 -1.4791900292038918e-02</internalNodes>\n          <leafValues>\n            1.9981779158115387e-01 -1.2553811073303223e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 146 -6.1217732727527618e-03</internalNodes>\n          <leafValues>\n            -4.2455345392227173e-01 5.5959124118089676e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 563 -3.5850135609507561e-03</internalNodes>\n          <leafValues>\n            3.2560044527053833e-01 -7.1894593536853790e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1048 -3.2580485567450523e-03</internalNodes>\n          <leafValues>\n            -5.4515779018402100e-01 4.5138467103242874e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 367 8.5870809853076935e-03</internalNodes>\n          <leafValues>\n            -9.2699222266674042e-02 2.7361676096916199e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 384 -3.5999938845634460e-03</internalNodes>\n          <leafValues>\n            1.7715592682361603e-01 -1.3859097659587860e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 650 1.5299995429813862e-03</internalNodes>\n          <leafValues>\n            -1.0419535636901855e-01 2.1118766069412231e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 413 2.7578026056289673e-03</internalNodes>\n          <leafValues>\n            -7.0944413542747498e-02 2.9870492219924927e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 283 -6.1489176005125046e-03</internalNodes>\n          <leafValues>\n            -5.1581281423568726e-01 4.6433247625827789e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 8.3175086183473468e-04</internalNodes>\n          <leafValues>\n            -8.4185592830181122e-02 2.8132751584053040e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 -6.7444925662130117e-04</internalNodes>\n          <leafValues>\n            2.6548036932945251e-01 -9.7815677523612976e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 555 -5.6643221527338028e-02</internalNodes>\n          <leafValues>\n            3.8170987367630005e-01 -6.2833912670612335e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 602 -7.5360340997576714e-03</internalNodes>\n          <leafValues>\n            2.2137185931205750e-01 -1.0336405038833618e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 9 -->\n    <_>\n      <maxWeakCount>54</maxWeakCount>\n      <stageThreshold>-1.3439358472824097e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 526 -4.8420722596347332e-03</internalNodes>\n          <leafValues>\n            5.7400572299957275e-01 -9.5008336007595062e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 786 -5.9993756003677845e-03</internalNodes>\n          <leafValues>\n            4.5479923486709595e-01 -1.5483228862285614e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 531 -3.1531709246337414e-03</internalNodes>\n          <leafValues>\n            4.2504432797431946e-01 -1.2935030460357666e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 884 1.2363551650196314e-03</internalNodes>\n          <leafValues>\n            -1.5872104465961456e-01 3.1463247537612915e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 925 -6.7780278623104095e-03</internalNodes>\n          <leafValues>\n            4.1302111744880676e-01 -1.7017546296119690e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 259 1.3960017822682858e-03</internalNodes>\n          <leafValues>\n            -1.3419999182224274e-01 3.3868113160133362e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 564 -3.5894233733415604e-03</internalNodes>\n          <leafValues>\n            3.3102113008499146e-01 -1.1498286575078964e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 551 5.4187951609492302e-03</internalNodes>\n          <leafValues>\n            -1.2790408730506897e-01 3.1275641918182373e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 934 -3.3248444087803364e-03</internalNodes>\n          <leafValues>\n            -5.1654219627380371e-01 7.1216024458408356e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 49 7.9970825463533401e-03</internalNodes>\n          <leafValues>\n            6.3098005950450897e-02 -5.8896148204803467e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 124 6.0347835533320904e-03</internalNodes>\n          <leafValues>\n            6.4018696546554565e-02 -4.7639665007591248e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 124 -6.9478121586143970e-03</internalNodes>\n          <leafValues>\n            -6.0485291481018066e-01 7.2506561875343323e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 30 1.9063859945163131e-03</internalNodes>\n          <leafValues>\n            -1.8492227792739868e-01 1.9994279742240906e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 752 2.1343495696783066e-02</internalNodes>\n          <leafValues>\n            -8.6192794144153595e-02 4.8719888925552368e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 261 -2.2514071315526962e-03</internalNodes>\n          <leafValues>\n            3.5809755325317383e-01 -7.6123438775539398e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 480 -4.4778124429285526e-03</internalNodes>\n          <leafValues>\n            -4.5578238368034363e-01 7.3516018688678741e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 533 3.9280336350202560e-03</internalNodes>\n          <leafValues>\n            6.2599055469036102e-02 -5.2695369720458984e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 365 -4.5666974037885666e-03</internalNodes>\n          <leafValues>\n            -6.1827522516250610e-01 4.1984613984823227e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 743 -6.1424830928444862e-03</internalNodes>\n          <leafValues>\n            3.0607789754867554e-01 -9.1138295829296112e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1019 3.4258943051099777e-03</internalNodes>\n          <leafValues>\n            5.5657953023910522e-02 -5.3350126743316650e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 731 3.3122287131845951e-03</internalNodes>\n          <leafValues>\n            -1.5935245156288147e-01 1.7000633478164673e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 135 7.4128687381744385e-02</internalNodes>\n          <leafValues>\n            3.3975400030612946e-02 -6.4646822214126587e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 496 -6.0862921178340912e-02</internalNodes>\n          <leafValues>\n            3.1012952327728271e-01 -9.1380268335342407e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 575 -4.3243117630481720e-02</internalNodes>\n          <leafValues>\n            -4.5051410794258118e-01 6.6722445189952850e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 322 -5.4576778784394264e-03</internalNodes>\n          <leafValues>\n            -4.8368638753890991e-01 5.5113438516855240e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 196 -2.1073617972433567e-03</internalNodes>\n          <leafValues>\n            2.3326623439788818e-01 -1.2007984519004822e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 252 -1.1282963678240776e-02</internalNodes>\n          <leafValues>\n            2.9159554839134216e-01 -1.0025029629468918e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 339 2.9302681796252728e-03</internalNodes>\n          <leafValues>\n            -8.5840485990047455e-02 3.3159431815147400e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 53 -2.8825225308537483e-03</internalNodes>\n          <leafValues>\n            -5.3361582756042480e-01 5.7994876056909561e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 76 6.2230005860328674e-03</internalNodes>\n          <leafValues>\n            4.4393569231033325e-02 -5.3072142601013184e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 971 1.1437942739576101e-03</internalNodes>\n          <leafValues>\n            -9.5763660967350006e-02 2.8212538361549377e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1052 1.2469270732253790e-03</internalNodes>\n          <leafValues>\n            6.5446242690086365e-02 -4.1902217268943787e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 612 -1.1369751766324043e-02</internalNodes>\n          <leafValues>\n            -7.0747911930084229e-01 3.4916084259748459e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 35 1.0013033449649811e-01</internalNodes>\n          <leafValues>\n            -6.7160040140151978e-02 4.2184004187583923e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 653 -2.6742245536297560e-03</internalNodes>\n          <leafValues>\n            1.7217047512531281e-01 -1.6229687631130219e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 713 -3.4254738129675388e-03</internalNodes>\n          <leafValues>\n            2.9603767395019531e-01 -8.9177258312702179e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 669 1.5813322970643640e-03</internalNodes>\n          <leafValues>\n            4.8733744770288467e-02 -5.6422549486160278e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 917 2.7555555789149366e-05</internalNodes>\n          <leafValues>\n            -1.7079097032546997e-01 1.4066468179225922e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 466 -8.2116597332060337e-04</internalNodes>\n          <leafValues>\n            1.8260034918785095e-01 -1.3242910802364349e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 353 -1.0168720036745071e-02</internalNodes>\n          <leafValues>\n            -4.1390055418014526e-01 6.5349683165550232e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 96 2.5848036631941795e-02</internalNodes>\n          <leafValues>\n            4.6910341829061508e-02 -4.7531116008758545e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 75 5.9797330759465694e-03</internalNodes>\n          <leafValues>\n            4.5450355857610703e-02 -4.5701387524604797e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 81 -2.4257015902549028e-03</internalNodes>\n          <leafValues>\n            1.8431460857391357e-01 -1.1879430711269379e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 346 -4.1334740817546844e-02</internalNodes>\n          <leafValues>\n            3.0460721254348755e-01 -9.4910860061645508e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 537 7.5982198119163513e-02</internalNodes>\n          <leafValues>\n            -6.5890170633792877e-02 3.3325287699699402e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 318 -2.7852014682139270e-05</internalNodes>\n          <leafValues>\n            1.4771287143230438e-01 -1.4524473249912262e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 669 -1.4885163400322199e-03</internalNodes>\n          <leafValues>\n            -4.6987643837928772e-01 4.7233786433935165e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 897 -3.3519542776048183e-03</internalNodes>\n          <leafValues>\n            2.4128976464271545e-01 -9.3788638710975647e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 935 1.3348343782126904e-03</internalNodes>\n          <leafValues>\n            -9.9509775638580322e-02 2.9368522763252258e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 704 3.2456549815833569e-03</internalNodes>\n          <leafValues>\n            -9.8895303905010223e-02 2.3363485932350159e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 611 4.2385179549455643e-03</internalNodes>\n          <leafValues>\n            5.9986904263496399e-02 -4.5745995640754700e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 170 8.4751443937420845e-03</internalNodes>\n          <leafValues>\n            3.0937874689698219e-02 -6.7139619588851929e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 995 3.0964510515332222e-03</internalNodes>\n          <leafValues>\n            3.0879957601428032e-02 -6.2686437368392944e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 212 2.3455230984836817e-03</internalNodes>\n          <leafValues>\n            -1.3303077220916748e-01 1.6908498108386993e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 10 -->\n    <_>\n      <maxWeakCount>72</maxWeakCount>\n      <stageThreshold>-1.4052674770355225e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 534 -8.4834604058414698e-04</internalNodes>\n          <leafValues>\n            4.6746683120727539e-01 -1.2498743087053299e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 838 1.1534148361533880e-03</internalNodes>\n          <leafValues>\n            -2.1341361105442047e-01 3.0533915758132935e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 728 1.3660041615366936e-02</internalNodes>\n          <leafValues>\n            -1.5390963852405548e-01 3.2113197445869446e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 528 -1.3363182079046965e-03</internalNodes>\n          <leafValues>\n            2.4346974492073059e-01 -1.8074017763137817e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1002 5.5064354091882706e-04</internalNodes>\n          <leafValues>\n            -1.9600959122180939e-01 2.1903340518474579e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 340 2.8026416897773743e-02</internalNodes>\n          <leafValues>\n            -9.9956467747688293e-02 5.1314896345138550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 930 -9.8200759384781122e-04</internalNodes>\n          <leafValues>\n            2.0671010017395020e-01 -1.9585600495338440e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 249 -1.9661948084831238e-02</internalNodes>\n          <leafValues>\n            -5.1859843730926514e-01 7.9988524317741394e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 514 5.7550622150301933e-03</internalNodes>\n          <leafValues>\n            -1.0230549424886703e-01 2.9102912545204163e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 854 4.8226406797766685e-03</internalNodes>\n          <leafValues>\n            -1.2503834068775177e-01 2.2606587409973145e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1025 -3.5137422382831573e-03</internalNodes>\n          <leafValues>\n            -6.8291509151458740e-01 4.6296034008264542e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 468 2.7717142074834555e-05</internalNodes>\n          <leafValues>\n            -2.1390475332736969e-01 1.3291628658771515e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 875 -2.2634968161582947e-02</internalNodes>\n          <leafValues>\n            4.0156257152557373e-01 -9.0922117233276367e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 890 -2.6544253341853619e-04</internalNodes>\n          <leafValues>\n            2.1944612264633179e-01 -1.5686984360218048e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 45 1.7469950020313263e-02</internalNodes>\n          <leafValues>\n            5.9605021029710770e-02 -5.4529672861099243e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 812 3.6130528897047043e-03</internalNodes>\n          <leafValues>\n            5.2721742540597916e-02 -4.4890201091766357e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 813 -3.8260491564869881e-03</internalNodes>\n          <leafValues>\n            -5.1076781749725342e-01 4.7858215868473053e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 348 -4.6305969590321183e-04</internalNodes>\n          <leafValues>\n            2.0340332388877869e-01 -1.3007256388664246e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 685 -7.3791583999991417e-03</internalNodes>\n          <leafValues>\n            -5.4855078458786011e-01 5.1355980336666107e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 397 -4.1331160813570023e-02</internalNodes>\n          <leafValues>\n            -3.7914556264877319e-01 6.2432620674371719e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 720 -1.4983891742303967e-03</internalNodes>\n          <leafValues>\n            -5.2967226505279541e-01 4.2461462318897247e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 785 -2.5054097641259432e-03</internalNodes>\n          <leafValues>\n            2.0288434624671936e-01 -1.2341590225696564e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 259 -7.1871257387101650e-04</internalNodes>\n          <leafValues>\n            2.4784520268440247e-01 -9.8167583346366882e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 260 -6.8983237724751234e-04</internalNodes>\n          <leafValues>\n            2.7780577540397644e-01 -9.7512029111385345e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 274 4.8434769269078970e-04</internalNodes>\n          <leafValues>\n            -1.1704409867525101e-01 2.4324342608451843e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 508 -3.6378027871251106e-03</internalNodes>\n          <leafValues>\n            -5.7295501232147217e-01 4.9037151038646698e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 709 -2.6648804545402527e-02</internalNodes>\n          <leafValues>\n            -6.0253041982650757e-01 3.6413222551345825e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 825 -4.3416651897132397e-03</internalNodes>\n          <leafValues>\n            4.7109794616699219e-01 -5.9058945626020432e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 60 -2.7588163502514362e-03</internalNodes>\n          <leafValues>\n            -4.9160134792327881e-01 5.4663125425577164e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 987 4.7046472318470478e-03</internalNodes>\n          <leafValues>\n            3.7025094032287598e-02 -5.6842529773712158e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 77 4.9029560759663582e-03</internalNodes>\n          <leafValues>\n            4.8207473009824753e-02 -4.2965477705001831e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 837 -7.0135248824954033e-04</internalNodes>\n          <leafValues>\n            2.2556030750274658e-01 -9.9117368459701538e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 332 2.7165210340172052e-03</internalNodes>\n          <leafValues>\n            4.3833449482917786e-02 -5.5271440744400024e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 837 8.9941755868494511e-04</internalNodes>\n          <leafValues>\n            -8.9474648237228394e-02 2.6415902376174927e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 723 -1.7575379461050034e-03</internalNodes>\n          <leafValues>\n            -5.7822185754776001e-01 4.4655490666627884e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 323 2.2079560905694962e-02</internalNodes>\n          <leafValues>\n            -9.1862626373767853e-02 2.6927500963211060e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 247 -2.4989219382405281e-03</internalNodes>\n          <leafValues>\n            1.9282613694667816e-01 -1.4004705846309662e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 388 4.4558709487318993e-03</internalNodes>\n          <leafValues>\n            5.2965965121984482e-02 -4.6530798077583313e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 345 8.9809950441122055e-03</internalNodes>\n          <leafValues>\n            -6.9099865853786469e-02 3.5005539655685425e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 589 -4.6078087761998177e-03</internalNodes>\n          <leafValues>\n            1.5373907983303070e-01 -1.5948937833309174e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 10 -8.9063167572021484e-02</internalNodes>\n          <leafValues>\n            4.8500600457191467e-01 -5.1386959850788116e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 540 4.8636873252689838e-03</internalNodes>\n          <leafValues>\n            5.1732856780290604e-02 -4.9787709116935730e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 992 -5.4465518333017826e-03</internalNodes>\n          <leafValues>\n            1.5584819018840790e-01 -1.4326727390289307e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 788 6.4384475350379944e-02</internalNodes>\n          <leafValues>\n            3.1540591269731522e-02 -7.1331930160522461e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 25 -9.3528348952531815e-03</internalNodes>\n          <leafValues>\n            -5.8800560235977173e-01 3.2534934580326080e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 374 6.5686285961419344e-04</internalNodes>\n          <leafValues>\n            -1.6972899436950684e-01 1.4208021759986877e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 744 -6.5707243047654629e-03</internalNodes>\n          <leafValues>\n            3.1901842355728149e-01 -7.0233277976512909e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 370 7.0676081813871861e-03</internalNodes>\n          <leafValues>\n            3.0735086649656296e-02 -7.6451587677001953e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 875 -1.1614331044256687e-02</internalNodes>\n          <leafValues>\n            2.0416912436485291e-01 -1.0650242120027542e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 227 -3.0933439731597900e-02</internalNodes>\n          <leafValues>\n            -3.5186296701431274e-01 6.3158944249153137e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 31 8.9404191821813583e-03</internalNodes>\n          <leafValues>\n            4.1301336139440536e-02 -5.2171415090560913e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 542 -3.0004943255335093e-04</internalNodes>\n          <leafValues>\n            1.8332102894783020e-01 -1.1965552717447281e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 753 -4.2704585939645767e-03</internalNodes>\n          <leafValues>\n            -4.1220253705978394e-01 5.2136015146970749e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 9.1349193826317787e-04</internalNodes>\n          <leafValues>\n            -8.2035504281520844e-02 2.7817621827125549e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 97 2.8089310973882675e-02</internalNodes>\n          <leafValues>\n            6.0909613966941833e-02 -3.7705209851264954e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 -1.1489203898236156e-03</internalNodes>\n          <leafValues>\n            2.9547268152236938e-01 -7.8550107777118683e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 766 -8.5876882076263428e-04</internalNodes>\n          <leafValues>\n            1.6158875823020935e-01 -1.3613829016685486e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 862 3.3645064104348421e-03</internalNodes>\n          <leafValues>\n            3.6055568605661392e-02 -5.5788111686706543e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1034 -1.2699423357844353e-02</internalNodes>\n          <leafValues>\n            -4.2199519276618958e-01 4.3876208364963531e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 158 -1.3306856155395508e-01</internalNodes>\n          <leafValues>\n            -7.5723612308502197e-01 2.4755204096436501e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 822 4.9831219017505646e-02</internalNodes>\n          <leafValues>\n            2.5250671431422234e-02 -6.3122928142547607e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 569 5.8193420991301537e-03</internalNodes>\n          <leafValues>\n            2.2189516574144363e-02 -7.2821933031082153e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 422 -6.3158385455608368e-03</internalNodes>\n          <leafValues>\n            1.9480472803115845e-01 -1.0275462269783020e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 58 -2.6879269629716873e-02</internalNodes>\n          <leafValues>\n            -4.3909311294555664e-01 4.5222271233797073e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 900 -1.6478844918310642e-03</internalNodes>\n          <leafValues>\n            2.7425831556320190e-01 -7.7650256454944611e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 947 4.4362144544720650e-03</internalNodes>\n          <leafValues>\n            3.2876692712306976e-02 -6.0907542705535889e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 760 -1.5154483262449503e-03</internalNodes>\n          <leafValues>\n            2.2985421121120453e-01 -8.5810013115406036e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 157 7.0627350360155106e-03</internalNodes>\n          <leafValues>\n            3.4827440977096558e-02 -5.9273594617843628e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 393 4.5482232235372066e-03</internalNodes>\n          <leafValues>\n            -5.2113339304924011e-02 4.0603092312812805e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 183 -3.9095789194107056e-02</internalNodes>\n          <leafValues>\n            2.5562492012977600e-01 -8.1410482525825500e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 718 -1.9122204976156354e-03</internalNodes>\n          <leafValues>\n            -6.5523076057434082e-01 3.1964879482984543e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 622 5.1604928448796272e-03</internalNodes>\n          <leafValues>\n            2.8228869661688805e-02 -6.0336226224899292e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 11 -->\n    <_>\n      <maxWeakCount>63</maxWeakCount>\n      <stageThreshold>-1.2550007104873657e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 532 -1.3708438724279404e-02</internalNodes>\n          <leafValues>\n            4.5314663648605347e-01 -1.2558805942535400e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 32 1.2687301263213158e-02</internalNodes>\n          <leafValues>\n            -1.5584127604961395e-01 3.8753288984298706e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 254 3.3966779708862305e-02</internalNodes>\n          <leafValues>\n            -1.1772038787603378e-01 4.0628942847251892e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 756 8.0258902162313461e-03</internalNodes>\n          <leafValues>\n            -1.4661933481693268e-01 4.0369525551795959e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 2 -4.2836386710405350e-03</internalNodes>\n          <leafValues>\n            2.2167153656482697e-01 -1.9662868976593018e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 164 -2.7807329315692186e-03</internalNodes>\n          <leafValues>\n            -4.6929144859313965e-01 6.9577261805534363e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 172 1.9090694840997458e-03</internalNodes>\n          <leafValues>\n            5.9488739818334579e-02 -6.3101488351821899e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 426 3.1442400068044662e-03</internalNodes>\n          <leafValues>\n            -1.1149841547012329e-01 3.0095639824867249e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 324 -2.8418585658073425e-02</internalNodes>\n          <leafValues>\n            3.6157062649726868e-01 -9.6387691795825958e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 449 -4.4032465666532516e-03</internalNodes>\n          <leafValues>\n            3.2977014780044556e-01 -9.8187342286109924e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 400 -2.6041134260594845e-03</internalNodes>\n          <leafValues>\n            2.8221642971038818e-01 -1.0142992436885834e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 357 -5.8917067945003510e-03</internalNodes>\n          <leafValues>\n            -5.8254349231719971e-01 6.0040380805730820e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 998 1.3956660404801369e-03</internalNodes>\n          <leafValues>\n            -1.6574928164482117e-01 1.7746162414550781e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1022 -1.7630932852625847e-03</internalNodes>\n          <leafValues>\n            -5.7597070932388306e-01 6.2388133257627487e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 697 -1.3517161132767797e-03</internalNodes>\n          <leafValues>\n            -5.1934504508972168e-01 4.7232870012521744e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 507 -3.8743610493838787e-03</internalNodes>\n          <leafValues>\n            2.9165247082710266e-01 -9.9355563521385193e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 765 1.0973589494824409e-02</internalNodes>\n          <leafValues>\n            -7.7571205794811249e-02 3.4312543272972107e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 128 -3.5274624824523926e-03</internalNodes>\n          <leafValues>\n            -6.7513287067413330e-01 3.6897819489240646e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 605 -2.4239125195890665e-03</internalNodes>\n          <leafValues>\n            2.5701349973678589e-01 -1.0465545207262039e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 727 -8.3098262548446655e-03</internalNodes>\n          <leafValues>\n            2.6842510700225830e-01 -9.9635124206542969e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 269 -2.7831714600324631e-02</internalNodes>\n          <leafValues>\n            -3.9901316165924072e-01 6.5086022019386292e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 399 8.1690559163689613e-03</internalNodes>\n          <leafValues>\n            -1.1402101069688797e-01 2.2761905193328857e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 368 2.8635351918637753e-03</internalNodes>\n          <leafValues>\n            -1.4034478366374969e-01 1.8733198940753937e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 286 -2.1204156801104546e-03</internalNodes>\n          <leafValues>\n            -5.9949654340744019e-01 4.9501683562994003e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 669 -9.4446074217557907e-04</internalNodes>\n          <leafValues>\n            -3.8145086169242859e-01 5.9254929423332214e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 686 2.1901372820138931e-03</internalNodes>\n          <leafValues>\n            3.6901079118251801e-02 -5.6260800361633301e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 103 4.2550573125481606e-03</internalNodes>\n          <leafValues>\n            -9.8831087350845337e-02 2.3313422501087189e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 281 4.2771790176630020e-03</internalNodes>\n          <leafValues>\n            4.2207289487123489e-02 -5.6859022378921509e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 422 -7.8792609274387360e-03</internalNodes>\n          <leafValues>\n            2.2428077459335327e-01 -9.9518932402133942e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 561 -3.5514549817889929e-03</internalNodes>\n          <leafValues>\n            -5.6150603294372559e-01 3.9242122322320938e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 738 -6.8606354761868715e-04</internalNodes>\n          <leafValues>\n            2.1056549251079559e-01 -1.2413132935762405e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 433 5.2483025938272476e-03</internalNodes>\n          <leafValues>\n            3.4256864339113235e-02 -7.2566890716552734e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 658 -3.6910744383931160e-03</internalNodes>\n          <leafValues>\n            2.6440864801406860e-01 -8.9745096862316132e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 127 2.0369128324091434e-03</internalNodes>\n          <leafValues>\n            4.6990364789962769e-02 -5.3132331371307373e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 662 3.8735207635909319e-03</internalNodes>\n          <leafValues>\n            -9.1540865600109100e-02 2.7486115694046021e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 126 6.0556940734386444e-03</internalNodes>\n          <leafValues>\n            5.3909529000520706e-02 -4.6437451243400574e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 912 4.8301572678610682e-04</internalNodes>\n          <leafValues>\n            -1.6165176033973694e-01 1.3917934894561768e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 101 -1.4880476519465446e-02</internalNodes>\n          <leafValues>\n            -5.9634107351303101e-01 3.9811171591281891e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 609 2.9731846880167723e-03</internalNodes>\n          <leafValues>\n            3.0903076753020287e-02 -6.2935864925384521e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 90 -1.1181155219674110e-02</internalNodes>\n          <leafValues>\n            3.5473996400833130e-01 -6.4499482512474060e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1009 -9.8370900377631187e-04</internalNodes>\n          <leafValues>\n            2.9858112335205078e-01 -8.4500424563884735e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 975 -1.0228222236037254e-03</internalNodes>\n          <leafValues>\n            2.7100124955177307e-01 -1.0033085197210312e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 913 2.0134919323027134e-03</internalNodes>\n          <leafValues>\n            4.3533660471439362e-02 -5.4969471693038940e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 881 -3.1473359558731318e-03</internalNodes>\n          <leafValues>\n            3.1102818250656128e-01 -8.0141142010688782e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 991 -2.9232497327029705e-03</internalNodes>\n          <leafValues>\n            -6.7808300256729126e-01 3.5025410354137421e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 494 -3.8992143236100674e-03</internalNodes>\n          <leafValues>\n            2.5711989402770996e-01 -8.4509201347827911e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 547 -3.8403570652008057e-02</internalNodes>\n          <leafValues>\n            2.8463324904441833e-01 -7.5673028826713562e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 700 -2.2210094612091780e-03</internalNodes>\n          <leafValues>\n            -5.6876182556152344e-01 4.0759250521659851e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 989 6.9615743122994900e-03</internalNodes>\n          <leafValues>\n            -7.8118488192558289e-02 2.8128826618194580e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 948 -1.8219950143247843e-03</internalNodes>\n          <leafValues>\n            1.8647159636020660e-01 -1.3465921580791473e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 697 1.0106971021741629e-03</internalNodes>\n          <leafValues>\n            5.7168632745742798e-02 -4.1419604420661926e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 945 -3.3746981061995029e-03</internalNodes>\n          <leafValues>\n            -5.2892911434173584e-01 4.0065344423055649e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1030 -8.5245687514543533e-03</internalNodes>\n          <leafValues>\n            -5.0935691595077515e-01 3.8823168724775314e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1012 -2.2426969371736050e-03</internalNodes>\n          <leafValues>\n            2.5891116261482239e-01 -8.8167145848274231e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 402 -5.9730862267315388e-03</internalNodes>\n          <leafValues>\n            -4.3465223908424377e-01 4.9864508211612701e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 452 -5.5482299067080021e-03</internalNodes>\n          <leafValues>\n            2.5288850069046021e-01 -9.3322932720184326e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 51 3.7344563007354736e-01</internalNodes>\n          <leafValues>\n            -4.9019347876310349e-02 4.3872711062431335e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 615 -4.0881419554352760e-03</internalNodes>\n          <leafValues>\n            3.1952694058418274e-01 -7.7735908329486847e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 202 3.1661842949688435e-03</internalNodes>\n          <leafValues>\n            -1.0995075106620789e-01 1.7701222002506256e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 17 -2.1666671335697174e-01</internalNodes>\n          <leafValues>\n            -4.5134860277175903e-01 4.9127347767353058e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 241 -3.1139418482780457e-02</internalNodes>\n          <leafValues>\n            2.5138390064239502e-01 -9.4933450222015381e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 459 9.1597874416038394e-04</internalNodes>\n          <leafValues>\n            -7.4231699109077454e-02 3.1368830800056458e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 747 -6.1164153739809990e-03</internalNodes>\n          <leafValues>\n            -7.0417582988739014e-01 3.4018490463495255e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 12 -->\n    <_>\n      <maxWeakCount>77</maxWeakCount>\n      <stageThreshold>-1.3230814933776855e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 522 -3.3400340471416712e-03</internalNodes>\n          <leafValues>\n            4.2352598905563354e-01 -1.2572944164276123e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 799 -2.3890279699116945e-03</internalNodes>\n          <leafValues>\n            3.8169610500335693e-01 -1.4501731097698212e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 448 -2.4045775644481182e-03</internalNodes>\n          <leafValues>\n            3.4690696001052856e-01 -1.2821178138256073e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 524 1.2546034995466471e-03</internalNodes>\n          <leafValues>\n            -1.4823316037654877e-01 2.9894015192985535e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 752 -1.8236635252833366e-02</internalNodes>\n          <leafValues>\n            3.0641126632690430e-01 -1.2427721172571182e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 229 4.1921215597540140e-04</internalNodes>\n          <leafValues>\n            -1.8449674546718597e-01 1.7403297126293182e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 914 -3.0837533995509148e-03</internalNodes>\n          <leafValues>\n            -6.2562137842178345e-01 3.4162398427724838e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 587 -3.4897932782769203e-03</internalNodes>\n          <leafValues>\n            2.0127655565738678e-01 -1.4677318930625916e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 882 -3.4818234853446484e-03</internalNodes>\n          <leafValues>\n            2.9465374350547791e-01 -1.0961814969778061e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 6.2356598675251007e-02</internalNodes>\n          <leafValues>\n            -9.8056003451347351e-02 3.1733244657516479e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 607 -1.8334560096263885e-02</internalNodes>\n          <leafValues>\n            3.1992998719215393e-01 -7.8213296830654144e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 885 3.7803263403475285e-03</internalNodes>\n          <leafValues>\n            5.3678415715694427e-02 -5.0315982103347778e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1027 -3.6906298249959946e-02</internalNodes>\n          <leafValues>\n            -6.3056147098541260e-01 3.8218058645725250e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 923 4.6968068927526474e-03</internalNodes>\n          <leafValues>\n            -1.1338837444782257e-01 2.6388064026832581e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 708 -1.1566210538148880e-02</internalNodes>\n          <leafValues>\n            1.6388712823390961e-01 -1.6043519973754883e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 489 3.1895786523818970e-03</internalNodes>\n          <leafValues>\n            6.0215596109628677e-02 -4.7157511115074158e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 50 -2.5480750948190689e-02</internalNodes>\n          <leafValues>\n            -5.5096846818923950e-01 3.9257630705833435e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 480 3.9267786778509617e-03</internalNodes>\n          <leafValues>\n            6.1174295842647552e-02 -4.1686600446701050e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 874 4.2923549190163612e-03</internalNodes>\n          <leafValues>\n            -6.9901801645755768e-02 3.6233785748481750e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 929 1.5720827504992485e-03</internalNodes>\n          <leafValues>\n            -9.2891335487365723e-02 2.6970732212066650e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 937 4.2968937195837498e-03</internalNodes>\n          <leafValues>\n            4.5402236282825470e-02 -6.1771476268768311e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 223 5.8442405425012112e-03</internalNodes>\n          <leafValues>\n            3.4459017217159271e-02 -6.2251347303390503e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 663 2.6888614520430565e-03</internalNodes>\n          <leafValues>\n            3.6230482161045074e-02 -5.7353609800338745e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 424 4.4175283983349800e-03</internalNodes>\n          <leafValues>\n            -6.4959764480590820e-02 3.7311050295829773e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 138 1.4900951646268368e-03</internalNodes>\n          <leafValues>\n            -1.0781793296337128e-01 2.0226408541202545e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 373 2.4665119126439095e-03</internalNodes>\n          <leafValues>\n            5.7804334908723831e-02 -4.1689205169677734e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 441 9.3985523562878370e-04</internalNodes>\n          <leafValues>\n            -1.4865192770957947e-01 1.3861793279647827e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 132 -5.3606871515512466e-03</internalNodes>\n          <leafValues>\n            1.8524695932865143e-01 -1.1567704379558563e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 636 -4.6638157218694687e-03</internalNodes>\n          <leafValues>\n            1.6163532435894012e-01 -1.3586524128913879e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 120 3.7256032228469849e-03</internalNodes>\n          <leafValues>\n            5.2170656621456146e-02 -4.2538973689079285e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 106 -8.9184641838073730e-03</internalNodes>\n          <leafValues>\n            -5.0052535533905029e-01 4.7540370374917984e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 474 5.6020710617303848e-03</internalNodes>\n          <leafValues>\n            3.4621786326169968e-02 -5.4071390628814697e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 475 -3.7551699206233025e-03</internalNodes>\n          <leafValues>\n            -3.9268767833709717e-01 5.2867397665977478e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 567 4.0759481489658356e-03</internalNodes>\n          <leafValues>\n            3.7209436297416687e-02 -4.7708320617675781e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 413 4.1836635209619999e-03</internalNodes>\n          <leafValues>\n            -5.8815345168113708e-02 3.6573976278305054e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 477 -9.3902507796883583e-04</internalNodes>\n          <leafValues>\n            1.9424098730087280e-01 -1.1125016957521439e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 985 -9.9178254604339600e-03</internalNodes>\n          <leafValues>\n            -5.9317117929458618e-01 3.3418238162994385e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 646 3.3355036284774542e-03</internalNodes>\n          <leafValues>\n            -8.7399490177631378e-02 2.4422888457775116e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 646 -3.4440397284924984e-03</internalNodes>\n          <leafValues>\n            2.9363137483596802e-01 -7.5259201228618622e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 42 2.1378418896347284e-03</internalNodes>\n          <leafValues>\n            5.6551665067672729e-02 -3.9630606770515442e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1005 -4.5215697027742863e-03</internalNodes>\n          <leafValues>\n            1.6443158686161041e-01 -1.1997994035482407e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 47 -1.2263706885278225e-03</internalNodes>\n          <leafValues>\n            -2.6839572191238403e-01 7.8797832131385803e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 926 -7.3856199160218239e-03</internalNodes>\n          <leafValues>\n            -7.5282222032546997e-01 2.3323338478803635e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1044 1.1934632435441017e-02</internalNodes>\n          <leafValues>\n            3.9068166166543961e-02 -4.3301787972450256e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 826 -4.2066089808940887e-03</internalNodes>\n          <leafValues>\n            3.1933805346488953e-01 -6.1786398291587830e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 779 -1.5679887728765607e-03</internalNodes>\n          <leafValues>\n            2.1744215488433838e-01 -9.4651907682418823e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 78 2.5083343498408794e-03</internalNodes>\n          <leafValues>\n            5.7137917727231979e-02 -3.3361336588859558e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 660 3.6224797368049622e-03</internalNodes>\n          <leafValues>\n            3.1345754861831665e-02 -5.7247912883758545e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 870 -7.7814143151044846e-03</internalNodes>\n          <leafValues>\n            2.9652404785156250e-01 -6.6501826047897339e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 800 -4.1631370550021529e-04</internalNodes>\n          <leafValues>\n            2.2159980237483978e-01 -1.0610108822584152e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 596 4.7841453924775124e-03</internalNodes>\n          <leafValues>\n            3.3327136188745499e-02 -5.7043993473052979e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 347 1.2740758247673512e-03</internalNodes>\n          <leafValues>\n            -7.9592645168304443e-02 2.4728350341320038e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 59 -2.0162630826234818e-02</internalNodes>\n          <leafValues>\n            -7.0677626132965088e-01 2.7118822559714317e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 165 -2.5762226432561874e-02</internalNodes>\n          <leafValues>\n            -5.9367066621780396e-01 2.7015525847673416e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 255 -1.1241633910685778e-03</internalNodes>\n          <leafValues>\n            2.9121127724647522e-01 -6.5690472722053528e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 818 2.9669383540749550e-02</internalNodes>\n          <leafValues>\n            3.4585461020469666e-02 -5.4837781190872192e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 501 -6.3295168802142143e-03</internalNodes>\n          <leafValues>\n            2.3453639447689056e-01 -8.5172846913337708e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1046 4.0143523365259171e-03</internalNodes>\n          <leafValues>\n            3.5306803882122040e-02 -5.4817456007003784e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 949 -2.4633856955915689e-03</internalNodes>\n          <leafValues>\n            1.6164709627628326e-01 -1.1111633479595184e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 38 -2.6468174532055855e-02</internalNodes>\n          <leafValues>\n            2.5775042176246643e-01 -7.2721429169178009e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1047 -2.5992670562118292e-03</internalNodes>\n          <leafValues>\n            -3.1405648589134216e-01 5.9779226779937744e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 809 -2.2960878908634186e-02</internalNodes>\n          <leafValues>\n            2.8405818343162537e-01 -6.8080194294452667e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 437 -1.6940593719482422e-02</internalNodes>\n          <leafValues>\n            3.0056476593017578e-01 -6.7668616771697998e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 528 1.7171052750200033e-03</internalNodes>\n          <leafValues>\n            -6.5253980457782745e-02 2.9430890083312988e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 142 -5.2873874083161354e-03</internalNodes>\n          <leafValues>\n            -4.5413893461227417e-01 4.3044254183769226e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 14 -1.8073642626404762e-02</internalNodes>\n          <leafValues>\n            -3.4945023059844971e-01 5.2509855479001999e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 627 -2.0803229417651892e-03</internalNodes>\n          <leafValues>\n            -4.0171647071838379e-01 4.5229051262140274e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 918 -1.1218651343369856e-04</internalNodes>\n          <leafValues>\n            1.2830497324466705e-01 -1.4649079740047455e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 84 -6.6526420414447784e-03</internalNodes>\n          <leafValues>\n            -3.4429419040679932e-01 5.4524090141057968e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 162 -4.1576132178306580e-02</internalNodes>\n          <leafValues>\n            -5.5132204294204712e-01 3.2239176332950592e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 659 -3.2582432031631470e-03</internalNodes>\n          <leafValues>\n            2.1904261410236359e-01 -9.0739406645298004e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 711 -4.4706808403134346e-03</internalNodes>\n          <leafValues>\n            2.2556288540363312e-01 -9.5258384943008423e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 177 -6.5750535577535629e-03</internalNodes>\n          <leafValues>\n            -4.8511472344398499e-01 4.1734144091606140e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 251 -3.7532784044742584e-02</internalNodes>\n          <leafValues>\n            2.0968079566955566e-01 -8.8354945182800293e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 530 -1.2600638438016176e-03</internalNodes>\n          <leafValues>\n            2.2111406922340393e-01 -9.0988010168075562e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 28 -2.3967802524566650e-02</internalNodes>\n          <leafValues>\n            -6.2524855136871338e-01 3.0603738501667976e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 225 -3.1747903674840927e-02</internalNodes>\n          <leafValues>\n            -6.2007570266723633e-01 2.5801742449402809e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 13 -->\n    <_>\n      <maxWeakCount>84</maxWeakCount>\n      <stageThreshold>-1.3265128135681152e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 801 -2.4247136898338795e-03</internalNodes>\n          <leafValues>\n            4.3507692217826843e-01 -1.1363404244184494e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 239 3.6287805996835232e-03</internalNodes>\n          <leafValues>\n            -1.5781879425048828e-01 3.3899685740470886e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 591 -4.2556263506412506e-03</internalNodes>\n          <leafValues>\n            2.2901295125484467e-01 -2.0403152704238892e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 847 1.6322638839483261e-03</internalNodes>\n          <leafValues>\n            -1.9230945408344269e-01 2.0004445314407349e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 338 1.4746835455298424e-02</internalNodes>\n          <leafValues>\n            -1.2184409052133560e-01 3.9130899310112000e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 192 -1.5139304101467133e-02</internalNodes>\n          <leafValues>\n            2.6918080449104309e-01 -1.4086124300956726e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 21 -7.4753491207957268e-03</internalNodes>\n          <leafValues>\n            2.1792158484458923e-01 -1.6056208312511444e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 287 2.3232740350067616e-03</internalNodes>\n          <leafValues>\n            -1.6489887237548828e-01 1.7108000814914703e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 899 -2.7532558888196945e-03</internalNodes>\n          <leafValues>\n            -5.3275841474533081e-01 5.2368167787790298e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 896 -3.9793960750102997e-03</internalNodes>\n          <leafValues>\n            3.4057796001434326e-01 -8.0085732042789459e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 608 7.1728855371475220e-02</internalNodes>\n          <leafValues>\n            -7.2147607803344727e-02 4.0667375922203064e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 883 -5.3792679682374001e-04</internalNodes>\n          <leafValues>\n            1.7865169048309326e-01 -1.4902706444263458e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 248 6.0019297525286674e-03</internalNodes>\n          <leafValues>\n            7.1029536426067352e-02 -3.9921376109123230e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 369 6.9427289068698883e-02</internalNodes>\n          <leafValues>\n            -9.5279395580291748e-02 2.6865223050117493e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 130 -8.8401548564434052e-03</internalNodes>\n          <leafValues>\n            -5.3491175174713135e-01 5.0447739660739899e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 699 -1.4551014639437199e-02</internalNodes>\n          <leafValues>\n            1.9883459806442261e-01 -1.1586152762174606e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 754 -1.7498439410701394e-03</internalNodes>\n          <leafValues>\n            2.2214990854263306e-01 -9.8238572478294373e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 246 -2.1636944264173508e-02</internalNodes>\n          <leafValues>\n            2.8814041614532471e-01 -8.2750618457794189e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 833 1.2786949053406715e-02</internalNodes>\n          <leafValues>\n            -8.7337315082550049e-02 2.6530647277832031e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 57 -8.7271071970462799e-03</internalNodes>\n          <leafValues>\n            -5.3538525104522705e-01 5.0595279783010483e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1039 3.3185956999659538e-03</internalNodes>\n          <leafValues>\n            4.5733701437711716e-02 -4.4758048653602600e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 795 -1.2216938193887472e-03</internalNodes>\n          <leafValues>\n            1.5257745981216431e-01 -1.4963941276073456e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 562 3.9857804775238037e-02</internalNodes>\n          <leafValues>\n            -8.5655666887760162e-02 2.6823255419731140e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 764 2.4454984813928604e-03</internalNodes>\n          <leafValues>\n            4.6102020889520645e-02 -5.0574064254760742e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 98 -4.2114150524139404e-01</internalNodes>\n          <leafValues>\n            6.9476419687271118e-01 -3.2907195389270782e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 558 2.3470625281333923e-02</internalNodes>\n          <leafValues>\n            -8.6790844798088074e-02 2.2723633050918579e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 253 -1.1454307474195957e-02</internalNodes>\n          <leafValues>\n            2.5413584709167480e-01 -8.8991768658161163e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 624 5.0260839052498341e-03</internalNodes>\n          <leafValues>\n            3.8961157202720642e-02 -5.9463697671890259e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 873 1.6196466749534011e-03</internalNodes>\n          <leafValues>\n            -9.0231269598007202e-02 2.6204809546470642e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 408 8.1676244735717773e-02</internalNodes>\n          <leafValues>\n            -8.0785289406776428e-02 2.5112318992614746e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 483 -5.4313270375132561e-03</internalNodes>\n          <leafValues>\n            1.6463221609592438e-01 -1.3186016678810120e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 291 5.7006161659955978e-03</internalNodes>\n          <leafValues>\n            -1.3998855650424957e-01 1.4326113462448120e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 221 -7.5926873832941055e-03</internalNodes>\n          <leafValues>\n            -5.5559343099594116e-01 3.7072587758302689e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 618 7.5261802412569523e-03</internalNodes>\n          <leafValues>\n            2.8434989973902702e-02 -5.8689045906066895e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 869 -6.3516031950712204e-03</internalNodes>\n          <leafValues>\n            1.4447389543056488e-01 -1.4542055130004883e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 980 -7.6800247188657522e-04</internalNodes>\n          <leafValues>\n            1.8556322157382965e-01 -1.0404425859451294e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 941 -4.4167470186948776e-03</internalNodes>\n          <leafValues>\n            -7.0306748151779175e-01 3.0874395743012428e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1010 3.3405693247914314e-03</internalNodes>\n          <leafValues>\n            -6.6534630954265594e-02 3.4018290042877197e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 114 1.1457607150077820e-02</internalNodes>\n          <leafValues>\n            3.3658623695373535e-02 -6.1056423187255859e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1000 -1.8547235522419214e-03</internalNodes>\n          <leafValues>\n            -7.4722522497177124e-01 2.2372998297214508e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 9 -1.9720013439655304e-01</internalNodes>\n          <leafValues>\n            -5.9932583570480347e-01 2.9283462092280388e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 544 -2.6251156814396381e-03</internalNodes>\n          <leafValues>\n            -3.0683135986328125e-01 5.5391944944858551e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 17 -2.7104711532592773e-01</internalNodes>\n          <leafValues>\n            -6.4121168851852417e-01 2.6428909972310066e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 349 1.0233232751488686e-02</internalNodes>\n          <leafValues>\n            4.5153360813856125e-02 -3.6883556842803955e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 363 4.0971953421831131e-03</internalNodes>\n          <leafValues>\n            4.1385501623153687e-02 -4.3035930395126343e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 464 -8.8650803081691265e-04</internalNodes>\n          <leafValues>\n            1.6314724087715149e-01 -1.1271495372056961e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 721 -4.1144760325551033e-03</internalNodes>\n          <leafValues>\n            -5.5176359415054321e-01 3.3540870994329453e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 940 -9.8663510289043188e-04</internalNodes>\n          <leafValues>\n            2.1676342189311981e-01 -8.5408315062522888e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 428 6.0831783339381218e-03</internalNodes>\n          <leafValues>\n            -8.7310679256916046e-02 2.3208071291446686e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 789 -1.4624604955315590e-02</internalNodes>\n          <leafValues>\n            -5.9713214635848999e-01 3.0128041282296181e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 787 1.3654056005179882e-02</internalNodes>\n          <leafValues>\n            2.4816744029521942e-02 -6.2301605939865112e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 820 4.2229411192238331e-03</internalNodes>\n          <leafValues>\n            -7.3886208236217499e-02 2.4938605725765228e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 168 1.3268929906189442e-03</internalNodes>\n          <leafValues>\n            4.0760166943073273e-02 -4.3510803580284119e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 275 -9.6903974190354347e-04</internalNodes>\n          <leafValues>\n            2.2486831247806549e-01 -7.8642837703227997e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 274 1.0329007636755705e-03</internalNodes>\n          <leafValues>\n            -7.3648050427436829e-02 2.6808246970176697e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 474 -4.2711962014436722e-03</internalNodes>\n          <leafValues>\n            -4.0931078791618347e-01 4.7851666808128357e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 983 -3.7627927958965302e-03</internalNodes>\n          <leafValues>\n            -5.0520634651184082e-01 3.0405685305595398e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 -1.7928264569491148e-03</internalNodes>\n          <leafValues>\n            3.3886525034904480e-01 -5.3929597139358521e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 148 3.9475625380873680e-03</internalNodes>\n          <leafValues>\n            3.4511350095272064e-02 -5.2250456809997559e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 827 -4.4537894427776337e-03</internalNodes>\n          <leafValues>\n            2.2575919330120087e-01 -7.4650920927524567e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 774 -2.9974281787872314e-02</internalNodes>\n          <leafValues>\n            -6.0629475116729736e-01 3.4456655383110046e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 123 2.6775486767292023e-02</internalNodes>\n          <leafValues>\n            -8.8883727788925171e-02 2.0147153735160828e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 302 -4.4971965253353119e-03</internalNodes>\n          <leafValues>\n            -5.3158396482467651e-01 3.3491309732198715e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 620 -1.5196309424936771e-02</internalNodes>\n          <leafValues>\n            2.8140705823898315e-01 -6.4074374735355377e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 560 -2.1833679638803005e-03</internalNodes>\n          <leafValues>\n            2.1953551471233368e-01 -8.5029341280460358e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 317 -5.4325433447957039e-03</internalNodes>\n          <leafValues>\n            -4.8182886838912964e-01 3.8184959441423416e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 463 -3.9055421948432922e-03</internalNodes>\n          <leafValues>\n            -3.5678783059120178e-01 4.5511916279792786e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1017 -5.0043486990034580e-03</internalNodes>\n          <leafValues>\n            -3.5324424505233765e-01 4.9539435654878616e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 595 4.2052613571286201e-03</internalNodes>\n          <leafValues>\n            -7.6765090227127075e-02 2.4410718679428101e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 642 -2.9198043048381805e-03</internalNodes>\n          <leafValues>\n            2.8657916188240051e-01 -9.1479435563087463e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 116 1.4442477375268936e-02</internalNodes>\n          <leafValues>\n            2.2604020312428474e-02 -7.7516084909439087e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 956 1.0879908688366413e-02</internalNodes>\n          <leafValues>\n            -8.9434660971164703e-02 1.8898591399192810e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 707 1.2304648756980896e-01</internalNodes>\n          <leafValues>\n            2.9145279899239540e-02 -5.6789475679397583e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 301 5.4486069828271866e-02</internalNodes>\n          <leafValues>\n            -8.0465197563171387e-02 2.1073351800441742e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 37 -1.0112209245562553e-02</internalNodes>\n          <leafValues>\n            2.5688818097114563e-01 -7.3113977909088135e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 145 -4.3551158159971237e-03</internalNodes>\n          <leafValues>\n            -4.0537205338478088e-01 5.1149621605873108e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 377 2.8712721541523933e-03</internalNodes>\n          <leafValues>\n            -8.9186541736125946e-02 2.0391693711280823e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 220 2.4744076654314995e-02</internalNodes>\n          <leafValues>\n            3.1359996646642685e-02 -5.9586691856384277e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 19 6.0209888033568859e-03</internalNodes>\n          <leafValues>\n            -8.2612000405788422e-02 2.1787849068641663e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 852 6.0595902614295483e-03</internalNodes>\n          <leafValues>\n            4.7610606998205185e-02 -3.5010379552841187e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 324 -2.1957855671644211e-02</internalNodes>\n          <leafValues>\n            2.2477181255817413e-01 -7.5377546250820160e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 385 -3.9967135526239872e-03</internalNodes>\n          <leafValues>\n            4.3043723702430725e-01 -3.9885677397251129e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 745 -2.0381226204335690e-03</internalNodes>\n          <leafValues>\n            -5.8131587505340576e-01 3.2071832567453384e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 337 3.8902673404663801e-03</internalNodes>\n          <leafValues>\n            -6.0279250144958496e-02 2.9424437880516052e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 14 -->\n    <_>\n      <maxWeakCount>82</maxWeakCount>\n      <stageThreshold>-1.2607949972152710e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 798 -1.9003680208697915e-03</internalNodes>\n          <leafValues>\n            4.8600798845291138e-01 -7.5834542512893677e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 238 1.5605278313159943e-03</internalNodes>\n          <leafValues>\n            -1.9763922691345215e-01 2.5329649448394775e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 584 -4.8138713464140892e-03</internalNodes>\n          <leafValues>\n            3.5302931070327759e-01 -1.2585695087909698e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 870 5.7447804138064384e-03</internalNodes>\n          <leafValues>\n            -1.5453046560287476e-01 3.5572248697280884e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 806 3.2787662930786610e-03</internalNodes>\n          <leafValues>\n            -1.8419209122657776e-01 1.6216333210468292e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 423 2.8142044320702553e-03</internalNodes>\n          <leafValues>\n            -9.4009101390838623e-02 2.7667456865310669e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 259 1.8096582498401403e-03</internalNodes>\n          <leafValues>\n            -8.9050479233264923e-02 2.9622453451156616e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 988 7.2106244042515755e-03</internalNodes>\n          <leafValues>\n            -1.0854976624250412e-01 2.2157947719097137e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 342 1.3368867337703705e-02</internalNodes>\n          <leafValues>\n            5.8126326650381088e-02 -3.8564166426658630e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 1.6755410470068455e-03</internalNodes>\n          <leafValues>\n            -6.9541916251182556e-02 3.6275833845138550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 198 -4.5782830566167831e-03</internalNodes>\n          <leafValues>\n            -5.6317430734634399e-01 3.9351724088191986e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 729 3.6364984698593616e-03</internalNodes>\n          <leafValues>\n            -1.5140864253044128e-01 1.4790520071983337e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 928 -1.1279541999101639e-02</internalNodes>\n          <leafValues>\n            -4.8907181620597839e-01 5.1109701395034790e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 867 -1.2224027886986732e-02</internalNodes>\n          <leafValues>\n            -6.0496371984481812e-01 3.5609807819128036e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 769 -2.8662174940109253e-02</internalNodes>\n          <leafValues>\n            2.4556699395179749e-01 -9.9369116127490997e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 496 6.7924216389656067e-02</internalNodes>\n          <leafValues>\n            -7.8038521111011505e-02 3.3691942691802979e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 962 2.2719642147421837e-03</internalNodes>\n          <leafValues>\n            5.8022607117891312e-02 -4.7124773263931274e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 8.5627539083361626e-03</internalNodes>\n          <leafValues>\n            3.4671626985073090e-02 -4.6883812546730042e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 362 1.1866856366395950e-03</internalNodes>\n          <leafValues>\n            -8.0339640378952026e-02 2.5030750036239624e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 8.1023329403251410e-04</internalNodes>\n          <leafValues>\n            -8.0605715513229370e-02 2.5741192698478699e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 281 -4.0647285059094429e-03</internalNodes>\n          <leafValues>\n            -5.0938653945922852e-01 4.0403041988611221e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 309 -1.9617568701505661e-02</internalNodes>\n          <leafValues>\n            -5.4703706502914429e-01 3.5078343003988266e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 233 6.9989012554287910e-03</internalNodes>\n          <leafValues>\n            2.6246270164847374e-02 -6.0453557968139648e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 450 -6.2460554763674736e-03</internalNodes>\n          <leafValues>\n            2.3062629997730255e-01 -8.3763726055622101e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 529 7.5731135439127684e-04</internalNodes>\n          <leafValues>\n            -9.5188923180103302e-02 2.3367822170257568e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 462 -3.2256892882287502e-03</internalNodes>\n          <leafValues>\n            2.1003848314285278e-01 -1.2173316627740860e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 941 -2.8797222767025232e-03</internalNodes>\n          <leafValues>\n            -4.8621371388435364e-01 4.3998546898365021e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 740 5.9399371966719627e-03</internalNodes>\n          <leafValues>\n            2.7645273134112358e-02 -6.2591820955276489e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 742 -5.4768389090895653e-03</internalNodes>\n          <leafValues>\n            2.5695452094078064e-01 -8.1276804208755493e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 107 -2.2785080596804619e-02</internalNodes>\n          <leafValues>\n            -6.7479509115219116e-01 2.9845010489225388e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 240 -6.0453559271991253e-03</internalNodes>\n          <leafValues>\n            -4.5132589340209961e-01 4.0413774549961090e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 216 5.9022027999162674e-03</internalNodes>\n          <leafValues>\n            4.6321801841259003e-02 -3.9377251267433167e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 775 -1.1740738991647959e-03</internalNodes>\n          <leafValues>\n            2.2063454985618591e-01 -8.9038714766502380e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 835 -3.7963264621794224e-03</internalNodes>\n          <leafValues>\n            1.7901860177516937e-01 -1.0518371313810349e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 871 2.4132090620696545e-03</internalNodes>\n          <leafValues>\n            -9.3182116746902466e-02 2.9489630460739136e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 543 4.5318575575947762e-04</internalNodes>\n          <leafValues>\n            -1.4386458694934845e-01 1.3717848062515259e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1029 1.8930386751890182e-02</internalNodes>\n          <leafValues>\n            3.3168405294418335e-02 -5.5337232351303101e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 652 -2.6878318749368191e-03</internalNodes>\n          <leafValues>\n            -5.4439735412597656e-01 3.1048862263560295e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 672 -3.9407592266798019e-03</internalNodes>\n          <leafValues>\n            -6.5507227182388306e-01 2.4424355477094650e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 599 2.1629813127219677e-03</internalNodes>\n          <leafValues>\n            -1.0160741209983826e-01 1.8277852237224579e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 222 -2.9370808042585850e-03</internalNodes>\n          <leafValues>\n            -4.7847637534141541e-01 3.8538910448551178e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 6 3.8221649825572968e-02</internalNodes>\n          <leafValues>\n            -7.6206430792808533e-02 2.3375664651393890e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 393 -3.1483019702136517e-03</internalNodes>\n          <leafValues>\n            2.5192636251449585e-01 -7.3695883154869080e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 613 -4.5907422900199890e-03</internalNodes>\n          <leafValues>\n            -6.2766075134277344e-01 2.8896089643239975e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 26 -9.5378428697586060e-02</internalNodes>\n          <leafValues>\n            -7.4559724330902100e-01 2.1207747980952263e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 639 2.0872952882200480e-03</internalNodes>\n          <leafValues>\n            -8.7810918688774109e-02 2.0629811286926270e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 635 -6.9244997575879097e-03</internalNodes>\n          <leafValues>\n            1.8590562045574188e-01 -9.8790608346462250e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 590 2.4594084825366735e-03</internalNodes>\n          <leafValues>\n            -1.0049589723348618e-01 2.2963477671146393e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1021 -5.2931695245206356e-03</internalNodes>\n          <leafValues>\n            -4.5924744009971619e-01 4.3104480952024460e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 994 4.8847724683582783e-03</internalNodes>\n          <leafValues>\n            4.6008609235286713e-02 -4.4277390837669373e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 454 1.4400177169591188e-03</internalNodes>\n          <leafValues>\n            -5.9334080666303635e-02 3.0132320523262024e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 156 -8.6052305996417999e-03</internalNodes>\n          <leafValues>\n            1.9737368822097778e-01 -8.9747570455074310e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 193 -6.1248587444424629e-03</internalNodes>\n          <leafValues>\n            -4.5141929388046265e-01 3.8760874420404434e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 464 -1.8148655071854591e-03</internalNodes>\n          <leafValues>\n            2.2768247127532959e-01 -8.2637414336204529e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 330 -8.5119507275521755e-04</internalNodes>\n          <leafValues>\n            1.9616322219371796e-01 -1.0013028979301453e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 417 1.4472046867012978e-02</internalNodes>\n          <leafValues>\n            -8.8336527347564697e-02 1.9660694897174835e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 628 1.4135142788290977e-02</internalNodes>\n          <leafValues>\n            -6.4112767577171326e-02 3.1887489557266235e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 390 4.8004039563238621e-03</internalNodes>\n          <leafValues>\n            4.8681098967790604e-02 -4.6234726905822754e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 279 -3.3503584563732147e-02</internalNodes>\n          <leafValues>\n            2.5094386935234070e-01 -8.0808885395526886e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 943 2.4153569247573614e-03</internalNodes>\n          <leafValues>\n            -7.2777584195137024e-02 2.6076248288154602e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 34 -1.3153228908777237e-02</internalNodes>\n          <leafValues>\n            2.3979008197784424e-01 -7.6283767819404602e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 718 -8.5048296023160219e-04</internalNodes>\n          <leafValues>\n            -3.2108953595161438e-01 5.7150222361087799e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 511 2.0031477324664593e-03</internalNodes>\n          <leafValues>\n            -7.5618073344230652e-02 2.3024985194206238e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 505 -3.9609652012586594e-03</internalNodes>\n          <leafValues>\n            -4.3856775760650635e-01 3.7756573408842087e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 311 5.9846425428986549e-03</internalNodes>\n          <leafValues>\n            3.5378426313400269e-02 -4.7760033607482910e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 83 2.0205255597829819e-02</internalNodes>\n          <leafValues>\n            -8.0130979418754578e-02 2.2919151186943054e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 927 -2.7492402587085962e-03</internalNodes>\n          <leafValues>\n            2.1395626664161682e-01 -7.6452419161796570e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 506 -8.3101191557943821e-04</internalNodes>\n          <leafValues>\n            1.6961804032325745e-01 -9.9106967449188232e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 604 -1.8657972104847431e-03</internalNodes>\n          <leafValues>\n            -3.8131290674209595e-01 4.6056091785430908e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 74 2.0824437960982323e-03</internalNodes>\n          <leafValues>\n            6.4966239035129547e-02 -2.3824627697467804e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 70 -4.4267112389206886e-03</internalNodes>\n          <leafValues>\n            -3.5809823870658875e-01 4.6749643981456757e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 211 1.3552411692216992e-03</internalNodes>\n          <leafValues>\n            -1.2307690829038620e-01 1.3934792578220367e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 213 -4.4114869087934494e-03</internalNodes>\n          <leafValues>\n            2.6617470383644104e-01 -7.4502207338809967e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 432 5.2309304010123014e-04</internalNodes>\n          <leafValues>\n            -1.0876630991697311e-01 1.5687976777553558e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 976 6.4505764748901129e-04</internalNodes>\n          <leafValues>\n            -8.0842182040214539e-02 2.0263716578483582e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 975 2.0405012182891369e-03</internalNodes>\n          <leafValues>\n            -6.2390543520450592e-02 3.3067914843559265e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 888 1.9838459789752960e-02</internalNodes>\n          <leafValues>\n            2.3488542065024376e-02 -8.1695795059204102e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 953 2.3998366668820381e-03</internalNodes>\n          <leafValues>\n            4.1017178446054459e-02 -3.7197592854499817e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 664 -1.1092903092503548e-02</internalNodes>\n          <leafValues>\n            -5.5750596523284912e-01 2.9520254582166672e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 981 1.4876715838909149e-02</internalNodes>\n          <leafValues>\n            -6.5797492861747742e-02 2.5957426428794861e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 621 -3.0385032296180725e-02</internalNodes>\n          <leafValues>\n            2.2640630602836609e-01 -7.6991938054561615e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 666 1.2216348201036453e-02</internalNodes>\n          <leafValues>\n            -7.0106968283653259e-02 2.4013392627239227e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 15 -->\n    <_>\n      <maxWeakCount>94</maxWeakCount>\n      <stageThreshold>-1.2798616886138916e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 801 -3.8322431501001120e-03</internalNodes>\n          <leafValues>\n            4.8065602779388428e-01 -4.9388073384761810e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 966 2.5449637323617935e-03</internalNodes>\n          <leafValues>\n            -1.7564620077610016e-01 2.5865191221237183e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 448 -5.4743299260735512e-03</internalNodes>\n          <leafValues>\n            4.9321442842483521e-01 -7.0596724748611450e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 294 1.5188493765890598e-02</internalNodes>\n          <leafValues>\n            -1.8555639684200287e-01 1.5278494358062744e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 954 7.5815798481926322e-04</internalNodes>\n          <leafValues>\n            -1.5043407678604126e-01 1.8612807989120483e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 963 -3.4232349134981632e-03</internalNodes>\n          <leafValues>\n            -4.5882478356361389e-01 4.3279532343149185e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 842 2.4103666655719280e-03</internalNodes>\n          <leafValues>\n            -8.4217190742492676e-02 2.6687353849411011e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 340 -2.3144368082284927e-02</internalNodes>\n          <leafValues>\n            2.9155749082565308e-01 -9.9449791014194489e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 419 -4.2331898584961891e-03</internalNodes>\n          <leafValues>\n            -3.7696760892868042e-01 8.0511704087257385e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 282 4.9294121563434601e-03</internalNodes>\n          <leafValues>\n            -1.3016121089458466e-01 1.8470372259616852e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 481 -2.7466980100143701e-05</internalNodes>\n          <leafValues>\n            1.4074377715587616e-01 -1.7928679287433624e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 724 2.2430901881307364e-03</internalNodes>\n          <leafValues>\n            -1.4674974977970123e-01 1.5197925269603729e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 849 7.5493026524782181e-03</internalNodes>\n          <leafValues>\n            2.4894557893276215e-02 -6.5740859508514404e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 245 -3.3066330943256617e-03</internalNodes>\n          <leafValues>\n            1.8501703441143036e-01 -1.1837758123874664e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 345 6.9540860131382942e-03</internalNodes>\n          <leafValues>\n            -7.3770649731159210e-02 2.9017251729965210e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 790 -8.6210696026682854e-03</internalNodes>\n          <leafValues>\n            2.0990766584873199e-01 -1.0644201189279556e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 978 -6.0504255816340446e-04</internalNodes>\n          <leafValues>\n            2.2373022139072418e-01 -9.6104651689529419e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 46 -4.5433510094881058e-03</internalNodes>\n          <leafValues>\n            -5.4173427820205688e-01 4.7511249780654907e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 694 -2.2248399909585714e-03</internalNodes>\n          <leafValues>\n            -4.6854707598686218e-01 3.8701556622982025e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 10 -5.3389102220535278e-02</internalNodes>\n          <leafValues>\n            2.9293462634086609e-01 -7.2517670691013336e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 4.6098522841930389e-02</internalNodes>\n          <leafValues>\n            -1.0042577981948853e-01 2.3779328167438507e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 243 7.7845109626650810e-03</internalNodes>\n          <leafValues>\n            3.7205196917057037e-02 -4.9194374680519104e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 182 6.0175172984600067e-03</internalNodes>\n          <leafValues>\n            4.4034618884325027e-02 -4.3780878186225891e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 876 4.8966710455715656e-03</internalNodes>\n          <leafValues>\n            -1.0375351458787918e-01 1.9480220973491669e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 494 -3.1284091528505087e-03</internalNodes>\n          <leafValues>\n            2.3669239878654480e-01 -9.6020378172397614e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 190 -1.3859109021723270e-03</internalNodes>\n          <leafValues>\n            2.8487151861190796e-01 -7.2190955281257629e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 191 2.6260318700224161e-03</internalNodes>\n          <leafValues>\n            -8.5511997342109680e-02 3.0152606964111328e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 65 1.7782470583915710e-01</internalNodes>\n          <leafValues>\n            -6.4100205898284912e-02 3.3825826644897461e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 50 1.7538113519549370e-02</internalNodes>\n          <leafValues>\n            5.9994459152221680e-02 -3.5529783368110657e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 946 -3.2135979272425175e-03</internalNodes>\n          <leafValues>\n            1.3668337464332581e-01 -1.3979049026966095e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 461 6.1371903866529465e-03</internalNodes>\n          <leafValues>\n            -6.2439329922199249e-02 3.0614212155342102e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 467 -4.6563488431274891e-03</internalNodes>\n          <leafValues>\n            -4.3073609471321106e-01 4.9068968743085861e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 668 -4.0680947713553905e-03</internalNodes>\n          <leafValues>\n            -4.6810126304626465e-01 3.7441805005073547e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 696 1.4199400320649147e-03</internalNodes>\n          <leafValues>\n            -8.7975829839706421e-02 2.1591611206531525e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 851 3.5254685208201408e-03</internalNodes>\n          <leafValues>\n            4.6650484204292297e-02 -4.3687531352043152e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 487 1.8623860552906990e-02</internalNodes>\n          <leafValues>\n            -7.6216101646423340e-02 2.3812168836593628e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 314 -2.6926528662443161e-02</internalNodes>\n          <leafValues>\n            -6.7117422819137573e-01 2.9464269056916237e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 632 2.2593191824853420e-03</internalNodes>\n          <leafValues>\n            2.8521748259663582e-02 -5.4787307977676392e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 919 1.7519816174171865e-04</internalNodes>\n          <leafValues>\n            -1.6111046075820923e-01 1.0367503762245178e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 493 1.0614154860377312e-02</internalNodes>\n          <leafValues>\n            4.5461904257535934e-02 -3.8087964057922363e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 20 -4.4702589511871338e-03</internalNodes>\n          <leafValues>\n            1.4304992556571960e-01 -1.3372300565242767e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 557 6.2367701902985573e-03</internalNodes>\n          <leafValues>\n            -7.7783808112144470e-02 2.1545551717281342e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 76 4.6502514742314816e-03</internalNodes>\n          <leafValues>\n            4.6132039278745651e-02 -3.7130251526832581e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 544 -4.3315230868756771e-03</internalNodes>\n          <leafValues>\n            -4.1549521684646606e-01 3.8484618067741394e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 764 -1.6567837446928024e-03</internalNodes>\n          <leafValues>\n            -3.4637498855590820e-01 4.6623144298791885e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 415 4.7653233632445335e-03</internalNodes>\n          <leafValues>\n            -5.0808548927307129e-02 3.4609997272491455e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 413 -3.2579647377133369e-03</internalNodes>\n          <leafValues>\n            2.6948198676109314e-01 -8.5287831723690033e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 614 2.3307730443775654e-03</internalNodes>\n          <leafValues>\n            -7.4774339795112610e-02 2.3053503036499023e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 176 -2.7928136289119720e-02</internalNodes>\n          <leafValues>\n            1.9429244101047516e-01 -8.7820984423160553e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 366 -9.8205050453543663e-03</internalNodes>\n          <leafValues>\n            -5.9664642810821533e-01 3.1795132905244827e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 767 4.9811266362667084e-03</internalNodes>\n          <leafValues>\n            -1.1911241710186005e-01 1.5268225967884064e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 508 -2.4869772605597973e-03</internalNodes>\n          <leafValues>\n            -3.8041505217552185e-01 4.4293139129877090e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 780 5.4475376382470131e-03</internalNodes>\n          <leafValues>\n            -4.6219147741794586e-02 3.9531415700912476e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 277 -2.1438062191009521e-02</internalNodes>\n          <leafValues>\n            -5.2191144227981567e-01 3.4259662032127380e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 566 -4.1901203803718090e-03</internalNodes>\n          <leafValues>\n            -5.2377271652221680e-01 2.8632357716560364e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 262 -4.7237933613359928e-03</internalNodes>\n          <leafValues>\n            1.8694585561752319e-01 -8.3333678543567657e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 845 1.2320578098297119e-03</internalNodes>\n          <leafValues>\n            -9.6744544804096222e-02 1.8287587165832520e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 617 2.0271677523851395e-02</internalNodes>\n          <leafValues>\n            -6.4628154039382935e-02 2.7641129493713379e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 375 -1.0729704797267914e-01</internalNodes>\n          <leafValues>\n            4.3015307188034058e-01 -3.8674801588058472e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 166 -4.0820333361625671e-01</internalNodes>\n          <leafValues>\n            5.0520670413970947e-01 -3.0450601130723953e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 305 4.4355981051921844e-02</internalNodes>\n          <leafValues>\n            -9.2204704880714417e-02 1.7342080175876617e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 879 -1.0999260703101754e-03</internalNodes>\n          <leafValues>\n            2.0996508002281189e-01 -7.7222190797328949e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 325 -3.2928451895713806e-02</internalNodes>\n          <leafValues>\n            2.7598264813423157e-01 -6.4115919172763824e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 52 2.3981094360351562e-02</internalNodes>\n          <leafValues>\n            2.5229524821043015e-02 -6.9560426473617554e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 961 4.1703339666128159e-03</internalNodes>\n          <leafValues>\n            2.9712976887822151e-02 -4.8132696747779846e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 776 -1.4920771354809403e-03</internalNodes>\n          <leafValues>\n            1.6165184974670410e-01 -9.6420668065547943e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 652 1.8172110430896282e-03</internalNodes>\n          <leafValues>\n            4.2247310280799866e-02 -3.5703054070472717e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 739 -2.5937356986105442e-03</internalNodes>\n          <leafValues>\n            2.2665317356586456e-01 -6.9081544876098633e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 706 -2.4995308369398117e-02</internalNodes>\n          <leafValues>\n            -6.3855916261672974e-01 2.8458235785365105e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 909 1.2001263909041882e-02</internalNodes>\n          <leafValues>\n            1.4999576844274998e-02 -7.8175085783004761e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 640 2.2153530735522509e-03</internalNodes>\n          <leafValues>\n            -8.8839285075664520e-02 1.8819671869277954e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 179 2.7237991162110120e-05</internalNodes>\n          <leafValues>\n            -1.4949426054954529e-01 9.8739065229892731e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 91 -2.6735704392194748e-02</internalNodes>\n          <leafValues>\n            -4.5522138476371765e-01 3.2516691833734512e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 644 -2.3417242337018251e-03</internalNodes>\n          <leafValues>\n            -3.1453001499176025e-01 4.7598775476217270e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 72 4.7831580042839050e-02</internalNodes>\n          <leafValues>\n            2.1954061463475227e-02 -6.1162966489791870e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 160 -5.7228151708841324e-03</internalNodes>\n          <leafValues>\n            -6.3381904363632202e-01 2.0299639552831650e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 163 3.4780064597725868e-03</internalNodes>\n          <leafValues>\n            3.1021401286125183e-02 -4.2342424392700195e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 385 -5.4140854626893997e-03</internalNodes>\n          <leafValues>\n            4.7739461064338684e-01 -3.4031655639410019e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 383 1.5283382963389158e-03</internalNodes>\n          <leafValues>\n            -9.6935935318470001e-02 1.9429819285869598e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 428 -8.6789112538099289e-03</internalNodes>\n          <leafValues>\n            2.4826894700527191e-01 -6.0082063078880310e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 901 3.0333681497722864e-03</internalNodes>\n          <leafValues>\n            -7.4087560176849365e-02 2.6165533065795898e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 684 6.5222466364502907e-03</internalNodes>\n          <leafValues>\n            3.0176062136888504e-02 -5.5570882558822632e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 902 5.9719551354646683e-03</internalNodes>\n          <leafValues>\n            2.3057831451296806e-02 -5.7078248262405396e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 155 -1.3977952767163515e-03</internalNodes>\n          <leafValues>\n            1.5342144668102264e-01 -9.8401337862014771e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 897 5.9919534251093864e-03</internalNodes>\n          <leafValues>\n            -3.9796624332666397e-02 3.5881185531616211e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 354 2.6286500506103039e-03</internalNodes>\n          <leafValues>\n            -9.3140766024589539e-02 1.6334943473339081e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 296 -4.4777179136872292e-03</internalNodes>\n          <leafValues>\n            -4.8081240057945251e-01 3.2935630530118942e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 333 5.2724601700901985e-03</internalNodes>\n          <leafValues>\n            3.0787551775574684e-02 -4.5133110880851746e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1049 -3.2540475949645042e-03</internalNodes>\n          <leafValues>\n            -4.7695344686508179e-01 2.8554188087582588e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 736 1.8083681166172028e-01</internalNodes>\n          <leafValues>\n            2.7366345748305321e-02 -4.9431446194648743e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 431 2.7535988483577967e-03</internalNodes>\n          <leafValues>\n            1.9968675449490547e-02 -6.4471620321273804e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 15 -1.4123708009719849e-02</internalNodes>\n          <leafValues>\n            -5.2748751640319824e-01 2.4596616625785828e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 421 -3.2076485455036163e-02</internalNodes>\n          <leafValues>\n            -7.2171974182128906e-01 1.6940405592322350e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 434 -3.2569766044616699e-02</internalNodes>\n          <leafValues>\n            2.2400286793708801e-01 -6.3403561711311340e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 16 -->\n    <_>\n      <maxWeakCount>100</maxWeakCount>\n      <stageThreshold>-1.2990239858627319e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 728 1.1235726065933704e-02</internalNodes>\n          <leafValues>\n            -1.2534695863723755e-01 3.9147180318832397e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 922 5.0947451964020729e-03</internalNodes>\n          <leafValues>\n            -1.2666413187980652e-01 4.0618515014648438e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 891 -1.5323986299335957e-03</internalNodes>\n          <leafValues>\n            2.8940162062644958e-01 -1.4350101351737976e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 284 3.7766513414680958e-03</internalNodes>\n          <leafValues>\n            -1.9189934432506561e-01 1.4756591618061066e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 514 4.8757870681583881e-03</internalNodes>\n          <leafValues>\n            -1.2341982126235962e-01 2.3298588395118713e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 344 3.1278211623430252e-02</internalNodes>\n          <leafValues>\n            -7.6286941766738892e-02 3.4027433395385742e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 63 6.3753505237400532e-03</internalNodes>\n          <leafValues>\n            7.3992513120174408e-02 -3.2609656453132629e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 936 -9.8742637783288956e-04</internalNodes>\n          <leafValues>\n            2.4873960018157959e-01 -9.0153135359287262e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 217 -3.0144110321998596e-02</internalNodes>\n          <leafValues>\n            -5.1088541746139526e-01 5.0071869045495987e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 268 4.7727730125188828e-03</internalNodes>\n          <leafValues>\n            5.1353454589843750e-02 -4.1142973303794861e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 420 6.4554966986179352e-02</internalNodes>\n          <leafValues>\n            4.5133572071790695e-02 -4.8264691233634949e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 744 8.0438675358891487e-03</internalNodes>\n          <leafValues>\n            -6.3803412020206451e-02 3.0405151844024658e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1051 1.0576066561043262e-03</internalNodes>\n          <leafValues>\n            4.9984093755483627e-02 -3.3949175477027893e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 938 6.8522170186042786e-03</internalNodes>\n          <leafValues>\n            3.5091523081064224e-02 -6.7847234010696411e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 860 -1.7977621406316757e-02</internalNodes>\n          <leafValues>\n            -3.7503832578659058e-01 4.0370170027017593e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 748 -2.9955487698316574e-02</internalNodes>\n          <leafValues>\n            -4.2023807764053345e-01 4.2222321033477783e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 14 2.0934976637363434e-02</internalNodes>\n          <leafValues>\n            4.3809924274682999e-02 -4.1159108281135559e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 499 -1.0348223149776459e-03</internalNodes>\n          <leafValues>\n            1.7594149708747864e-01 -1.0171056538820267e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 15 1.1026043444871902e-02</internalNodes>\n          <leafValues>\n            3.7518307566642761e-02 -4.9795153737068176e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 201 4.1434396989643574e-03</internalNodes>\n          <leafValues>\n            -7.7400334179401398e-02 2.3505100607872009e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 423 -1.4838734641671181e-03</internalNodes>\n          <leafValues>\n            2.9909220337867737e-01 -9.2648021876811981e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1025 4.0641101077198982e-03</internalNodes>\n          <leafValues>\n            3.8187902420759201e-02 -5.9566622972488403e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 108 -2.6055248454213142e-03</internalNodes>\n          <leafValues>\n            1.4647382497787476e-01 -1.1769902706146240e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 834 -1.8873009830713272e-02</internalNodes>\n          <leafValues>\n            2.0791313052177429e-01 -9.1127894818782806e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 960 1.0428125038743019e-02</internalNodes>\n          <leafValues>\n            4.3083548545837402e-02 -4.1407048702239990e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 460 1.9560819491744041e-03</internalNodes>\n          <leafValues>\n            -6.5898597240447998e-02 2.6488196849822998e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 402 6.1143590137362480e-03</internalNodes>\n          <leafValues>\n            4.7718580812215805e-02 -4.3339842557907104e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 411 3.9817169308662415e-03</internalNodes>\n          <leafValues>\n            2.8663935139775276e-02 -5.4472506046295166e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 497 -9.0858177281916142e-04</internalNodes>\n          <leafValues>\n            1.2656490504741669e-01 -1.3804104924201965e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 548 -5.1833119243383408e-02</internalNodes>\n          <leafValues>\n            2.9838389158248901e-01 -6.4876683056354523e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 550 -6.1461031436920166e-02</internalNodes>\n          <leafValues>\n            2.2751982510089874e-01 -7.7075794339179993e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 771 -3.8890805444680154e-04</internalNodes>\n          <leafValues>\n            1.4823918044567108e-01 -1.2443733215332031e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 819 6.3632195815443993e-03</internalNodes>\n          <leafValues>\n            3.3928975462913513e-02 -5.5825293064117432e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 929 2.3877150379121304e-03</internalNodes>\n          <leafValues>\n            -6.0555700212717056e-02 2.9875907301902771e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 718 2.1584378555417061e-03</internalNodes>\n          <leafValues>\n            2.6707226410508156e-02 -6.5327596664428711e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 972 1.3073299778625369e-03</internalNodes>\n          <leafValues>\n            -6.5057143568992615e-02 2.8509995341300964e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1023 2.7173646230949089e-05</internalNodes>\n          <leafValues>\n            -1.4736446738243103e-01 1.1435943096876144e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 630 2.5558518245816231e-03</internalNodes>\n          <leafValues>\n            2.2957315668463707e-02 -6.1825275421142578e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 435 4.4789682142436504e-03</internalNodes>\n          <leafValues>\n            3.6877695471048355e-02 -4.1827708482742310e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 335 -4.0298998355865479e-02</internalNodes>\n          <leafValues>\n            -6.8164646625518799e-01 2.1755648776888847e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 782 -3.2729938626289368e-02</internalNodes>\n          <leafValues>\n            -5.4164266586303711e-01 2.6013873517513275e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1011 -1.6982981469482183e-03</internalNodes>\n          <leafValues>\n            3.5175332427024841e-01 -4.7216285020112991e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 331 3.6859638057649136e-03</internalNodes>\n          <leafValues>\n            4.9838334321975708e-02 -3.0565607547760010e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 235 1.8905990291386843e-03</internalNodes>\n          <leafValues>\n            2.3341298103332520e-02 -6.6700172424316406e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 714 4.9954187124967575e-03</internalNodes>\n          <leafValues>\n            2.5513354688882828e-02 -5.4635345935821533e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 336 -5.5998284369707108e-03</internalNodes>\n          <leafValues>\n            2.9532432556152344e-01 -5.9350244700908661e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1008 -1.0907559189945459e-03</internalNodes>\n          <leafValues>\n            1.8265166878700256e-01 -9.8137028515338898e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 975 -7.4323470471426845e-04</internalNodes>\n          <leafValues>\n            1.9020494818687439e-01 -8.7386451661586761e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 914 2.7787161525338888e-03</internalNodes>\n          <leafValues>\n            3.2241951674222946e-02 -4.8055323958396912e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 153 2.4344769772142172e-03</internalNodes>\n          <leafValues>\n            4.6477138996124268e-02 -2.9923307895660400e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 293 2.8132982552051544e-03</internalNodes>\n          <leafValues>\n            -9.0026579797267914e-02 1.6738441586494446e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 73 3.2191604375839233e-02</internalNodes>\n          <leafValues>\n            -6.3697919249534607e-02 2.8380525112152100e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 656 -1.8642821814864874e-03</internalNodes>\n          <leafValues>\n            2.0616722106933594e-01 -7.4722714722156525e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 657 4.0091956034302711e-03</internalNodes>\n          <leafValues>\n            -7.1015752851963043e-02 2.5589218735694885e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 150 -5.1108514890074730e-03</internalNodes>\n          <leafValues>\n            -4.8940917849540710e-01 3.4555420279502869e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 600 -1.9523575901985168e-02</internalNodes>\n          <leafValues>\n            3.1921747326850891e-01 -5.1439035683870316e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 298 -1.4431261457502842e-02</internalNodes>\n          <leafValues>\n            1.4213174581527710e-01 -1.1113181710243225e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 732 4.5302580110728741e-04</internalNodes>\n          <leafValues>\n            -1.0926237702369690e-01 1.4363190531730652e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 78 -5.4108840413391590e-03</internalNodes>\n          <leafValues>\n            -4.6926099061965942e-01 3.1095381826162338e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 259 1.6963672824203968e-03</internalNodes>\n          <leafValues>\n            -6.7337587475776672e-02 2.2115154564380646e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 190 1.8719944637268782e-03</internalNodes>\n          <leafValues>\n            -5.8433420956134796e-02 2.7830049395561218e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1014 -8.3780642598867416e-03</internalNodes>\n          <leafValues>\n            -4.6290600299835205e-01 3.3701810985803604e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 510 1.0720299184322357e-01</internalNodes>\n          <leafValues>\n            2.6600774377584457e-02 -5.0957643985748291e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 670 -1.5523867914453149e-03</internalNodes>\n          <leafValues>\n            -5.7974040508270264e-01 2.2188233211636543e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 649 -1.0537400841712952e-02</internalNodes>\n          <leafValues>\n            -4.3835061788558960e-01 2.9434528201818466e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1038 3.1337797641754150e-02</internalNodes>\n          <leafValues>\n            2.0445786416530609e-02 -6.3010692596435547e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1004 -5.1124744117259979e-02</internalNodes>\n          <leafValues>\n            -6.7282766103744507e-01 1.8230145797133446e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 362 -6.0091790510341525e-04</internalNodes>\n          <leafValues>\n            2.0237097144126892e-01 -7.2557553648948669e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 409 1.6933252336457372e-03</internalNodes>\n          <leafValues>\n            -5.9000160545110703e-02 2.4010565876960754e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 18 5.7134744711220264e-03</internalNodes>\n          <leafValues>\n            2.9386352747678757e-02 -5.1309728622436523e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 429 -9.6922749653458595e-03</internalNodes>\n          <leafValues>\n            -5.4907989501953125e-01 2.3704739287495613e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 308 -1.2504560872912407e-02</internalNodes>\n          <leafValues>\n            -6.1863696575164795e-01 1.9876839593052864e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 382 -9.1812955215573311e-03</internalNodes>\n          <leafValues>\n            -4.7697570919990540e-01 2.5203671306371689e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 570 2.8069302439689636e-02</internalNodes>\n          <leafValues>\n            -5.5565606802701950e-02 2.5318285822868347e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 573 4.6324366703629494e-03</internalNodes>\n          <leafValues>\n            2.5273589417338371e-02 -5.9603255987167358e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 784 2.9409723356366158e-03</internalNodes>\n          <leafValues>\n            -5.1576137542724609e-02 2.9322555661201477e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 159 -1.6009721904993057e-02</internalNodes>\n          <leafValues>\n            2.9389014840126038e-01 -4.7874812036752701e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 355 -2.0468614995479584e-02</internalNodes>\n          <leafValues>\n            1.4383009076118469e-01 -1.0160042345523834e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 868 2.3338340222835541e-02</internalNodes>\n          <leafValues>\n            -5.7301126420497894e-02 2.9121819138526917e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 921 -2.1875634789466858e-02</internalNodes>\n          <leafValues>\n            -6.4106851816177368e-01 2.4203805252909660e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 427 1.1228370480239391e-02</internalNodes>\n          <leafValues>\n            -5.2143514156341553e-02 2.8465506434440613e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 197 -4.3659657239913940e-03</internalNodes>\n          <leafValues>\n            -6.0558545589447021e-01 2.5440702214837074e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 824 1.1577639961615205e-03</internalNodes>\n          <leafValues>\n            -8.9793093502521515e-02 1.6500258445739746e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 781 1.1090341955423355e-02</internalNodes>\n          <leafValues>\n            2.4472476914525032e-02 -6.1380225419998169e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1015 4.7660744749009609e-03</internalNodes>\n          <leafValues>\n            4.1726417839527130e-02 -3.2548862695693970e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 864 2.4865168597898446e-05</internalNodes>\n          <leafValues>\n            -1.2436556816101074e-01 1.1702288687229156e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 823 -7.6379198580980301e-03</internalNodes>\n          <leafValues>\n            -4.9008071422576904e-01 2.9381709173321724e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 445 -3.2750256359577179e-03</internalNodes>\n          <leafValues>\n            1.7950019240379333e-01 -8.0592408776283264e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 448 1.3944536913186312e-03</internalNodes>\n          <leafValues>\n            -8.0001771450042725e-02 2.2785140573978424e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 444 1.9776031840592623e-03</internalNodes>\n          <leafValues>\n            3.4109916538000107e-02 -4.8504865169525146e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 39 -3.9329148828983307e-02</internalNodes>\n          <leafValues>\n            -6.8790251016616821e-01 1.7370922490954399e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 645 -2.8447234071791172e-03</internalNodes>\n          <leafValues>\n            2.3028372228145599e-01 -6.6618286073207855e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 232 3.2375190407037735e-02</internalNodes>\n          <leafValues>\n            -7.5743824243545532e-02 1.7864570021629333e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 5 5.1314428448677063e-02</internalNodes>\n          <leafValues>\n            -5.3142681717872620e-02 2.8643575310707092e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 79 4.6999715268611908e-03</internalNodes>\n          <leafValues>\n            3.5749543458223343e-02 -4.0437424182891846e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 173 -2.0850417204201221e-03</internalNodes>\n          <leafValues>\n            -3.0815458297729492e-01 4.2763352394104004e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 455 -9.1223767958581448e-04</internalNodes>\n          <leafValues>\n            2.1245715022087097e-01 -6.7729450762271881e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 690 -2.2479293693322688e-04</internalNodes>\n          <leafValues>\n            1.3159312307834625e-01 -1.0141336172819138e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 974 3.1234124675393105e-02</internalNodes>\n          <leafValues>\n            -8.9100256562232971e-02 1.5734429657459259e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 -1.5079543227329850e-03</internalNodes>\n          <leafValues>\n            3.2412421703338623e-01 -4.4387526810169220e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 17 -->\n    <_>\n      <maxWeakCount>100</maxWeakCount>\n      <stageThreshold>-1.2500010728836060e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 803 -5.5631361901760101e-03</internalNodes>\n          <leafValues>\n            4.5343571901321411e-01 -5.2330773323774338e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 426 4.1911248117685318e-03</internalNodes>\n          <leafValues>\n            -1.2266161292791367e-01 3.6830583214759827e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 424 -1.8559540621936321e-03</internalNodes>\n          <leafValues>\n            2.4044598639011383e-01 -1.5207393467426300e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 532 -1.1846812441945076e-02</internalNodes>\n          <leafValues>\n            2.7016878128051758e-01 -1.1934488266706467e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 180 1.0401019826531410e-03</internalNodes>\n          <leafValues>\n            -2.3527304828166962e-01 9.5964968204498291e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 462 9.3873767182230949e-03</internalNodes>\n          <leafValues>\n            -5.6923847645521164e-02 4.2236638069152832e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 9.0843521058559418e-02</internalNodes>\n          <leafValues>\n            -6.3625380396842957e-02 3.8295668363571167e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 439 -1.6221515834331512e-03</internalNodes>\n          <leafValues>\n            1.8148291110992432e-01 -1.3424767553806305e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 875 -1.8008962273597717e-02</internalNodes>\n          <leafValues>\n            2.7346464991569519e-01 -7.6283894479274750e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 278 8.6509017273783684e-03</internalNodes>\n          <leafValues>\n            5.8148156851530075e-02 -5.2620184421539307e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 726 2.8817038983106613e-03</internalNodes>\n          <leafValues>\n            2.6940831914544106e-02 -4.7911167144775391e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 263 -6.1017833650112152e-03</internalNodes>\n          <leafValues>\n            1.7878855764865875e-01 -1.2378337979316711e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 403 -5.9294269885867834e-04</internalNodes>\n          <leafValues>\n            -2.7179723978042603e-01 8.0951526761054993e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 996 3.1696190126240253e-04</internalNodes>\n          <leafValues>\n            -1.7311862111091614e-01 1.0296358913183212e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 519 6.6280784085392952e-03</internalNodes>\n          <leafValues>\n            -5.8870136737823486e-02 2.9477587342262268e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 916 -4.5112203806638718e-03</internalNodes>\n          <leafValues>\n            -5.9672296047210693e-01 2.7053238824009895e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 679 -4.3381296098232269e-02</internalNodes>\n          <leafValues>\n            -4.2040801048278809e-01 4.0890187025070190e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 813 2.0323593635112047e-03</internalNodes>\n          <leafValues>\n            5.5178079754114151e-02 -3.0439695715904236e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 973 1.8127080984413624e-03</internalNodes>\n          <leafValues>\n            -8.2048252224922180e-02 2.1907366812229156e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 359 -6.6424394026398659e-03</internalNodes>\n          <leafValues>\n            -4.7840338945388794e-01 4.4878169894218445e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 903 -8.5755460895597935e-04</internalNodes>\n          <leafValues>\n            1.3301849365234375e-01 -1.2699788808822632e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 904 3.4769098274409771e-03</internalNodes>\n          <leafValues>\n            -7.1578972041606903e-02 2.5448271632194519e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 950 -1.8520625308156013e-03</internalNodes>\n          <leafValues>\n            1.5127970278263092e-01 -1.2349219620227814e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 777 5.4582338780164719e-03</internalNodes>\n          <leafValues>\n            3.5001352429389954e-02 -4.8021456599235535e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 894 -6.4206691458821297e-03</internalNodes>\n          <leafValues>\n            -5.6509351730346680e-01 2.6883032172918320e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 895 8.2498416304588318e-03</internalNodes>\n          <leafValues>\n            4.3442543596029282e-02 -3.7965279817581177e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 825 3.0813394114375114e-03</internalNodes>\n          <leafValues>\n            -5.6544844061136246e-02 3.2101437449455261e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 865 2.8121876530349255e-03</internalNodes>\n          <leafValues>\n            -7.1444042026996613e-02 2.8035575151443481e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 418 -1.1791236698627472e-02</internalNodes>\n          <leafValues>\n            2.0067863166332245e-01 -1.0047248005867004e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 476 1.4931729529052973e-03</internalNodes>\n          <leafValues>\n            -6.6428750753402710e-02 2.6187655329704285e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 364 -2.8772680088877678e-03</internalNodes>\n          <leafValues>\n            -4.5838123559951782e-01 4.2477916926145554e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 592 -4.5857336372137070e-03</internalNodes>\n          <leafValues>\n            1.2718579173088074e-01 -1.3642288744449615e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 585 -1.3770985417068005e-02</internalNodes>\n          <leafValues>\n            -6.4000308513641357e-01 2.7297915890812874e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 746 -3.6472730338573456e-02</internalNodes>\n          <leafValues>\n            -5.1465278863906860e-01 3.1265191733837128e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 378 1.0626764036715031e-02</internalNodes>\n          <leafValues>\n            2.4199636653065681e-02 -6.3441967964172363e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 509 -3.6817211657762527e-03</internalNodes>\n          <leafValues>\n            -4.4575414061546326e-01 3.1119547784328461e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 856 -3.4752404317259789e-03</internalNodes>\n          <leafValues>\n            1.4008119702339172e-01 -1.0539831966161728e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 815 -4.7973562031984329e-03</internalNodes>\n          <leafValues>\n            2.8762820363044739e-01 -6.0662355273962021e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 773 6.4153699204325676e-03</internalNodes>\n          <leafValues>\n            -1.1230263859033585e-01 1.4087037742137909e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 814 -1.0156400967389345e-03</internalNodes>\n          <leafValues>\n            -3.3441004157066345e-01 4.3477565050125122e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 968 3.3057793043553829e-03</internalNodes>\n          <leafValues>\n            1.9609324634075165e-02 -7.0060092210769653e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 100 -5.3275022655725479e-03</internalNodes>\n          <leafValues>\n            2.4580952525138855e-01 -6.0118518769741058e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 469 1.5886269975453615e-03</internalNodes>\n          <leafValues>\n            -7.7446170151233673e-02 1.9878011941909790e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 520 4.7287968918681145e-03</internalNodes>\n          <leafValues>\n            3.0098341405391693e-02 -5.0950014591217041e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 741 -1.9788878853432834e-04</internalNodes>\n          <leafValues>\n            1.5142950415611267e-01 -9.6688762307167053e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 389 -4.9208370037376881e-03</internalNodes>\n          <leafValues>\n            -4.5343187451362610e-01 3.7627156823873520e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 361 4.5094583183526993e-02</internalNodes>\n          <leafValues>\n            -8.5510566830635071e-02 1.7849470674991608e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 944 1.4799998607486486e-03</internalNodes>\n          <leafValues>\n            -6.4638271927833557e-02 2.3496921360492706e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 517 1.0061380267143250e-01</internalNodes>\n          <leafValues>\n            -3.0139762908220291e-02 4.9012109637260437e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 688 -5.2844230085611343e-03</internalNodes>\n          <leafValues>\n            1.7104546725749969e-01 -8.7710574269294739e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 626 -8.3214940968900919e-04</internalNodes>\n          <leafValues>\n            -2.6654696464538574e-01 5.3875535726547241e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 190 -8.8889291509985924e-04</internalNodes>\n          <leafValues>\n            1.8824113905429840e-01 -8.0119885504245758e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 191 2.2177316714078188e-03</internalNodes>\n          <leafValues>\n            -6.9703146815299988e-02 2.0391084253787994e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 674 -1.1522162239998579e-03</internalNodes>\n          <leafValues>\n            -3.6508113145828247e-01 3.9048090577125549e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1036 -1.0836161673069000e-02</internalNodes>\n          <leafValues>\n            -5.8106678724288940e-01 2.1713526919484138e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 82 -1.6731536388397217e-01</internalNodes>\n          <leafValues>\n            -4.7344669699668884e-01 2.6662701740860939e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 515 -9.5267388969659805e-03</internalNodes>\n          <leafValues>\n            2.7732986211776733e-01 -5.6512769311666489e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 329 6.6450019367039204e-03</internalNodes>\n          <leafValues>\n            2.9381312429904938e-02 -5.3565382957458496e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 104 -2.1554589271545410e-02</internalNodes>\n          <leafValues>\n            -6.2839144468307495e-01 1.8782904371619225e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 892 1.4288825332187116e-04</internalNodes>\n          <leafValues>\n            -1.2763719260692596e-01 1.0616952925920486e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 319 1.8068919889628887e-03</internalNodes>\n          <leafValues>\n            4.2757544666528702e-02 -3.2102146744728088e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 1.2280542869120836e-03</internalNodes>\n          <leafValues>\n            -5.7478122413158417e-02 2.5948432087898254e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 89 2.6250675320625305e-02</internalNodes>\n          <leafValues>\n            -9.5928788185119629e-02 1.4502045512199402e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 336 1.8192850984632969e-03</internalNodes>\n          <leafValues>\n            -6.8028703331947327e-02 2.3167446255683899e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 44 -4.8545510508120060e-03</internalNodes>\n          <leafValues>\n            -4.3374514579772949e-01 3.6196250468492508e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 762 2.8766903560608625e-03</internalNodes>\n          <leafValues>\n            3.8431353867053986e-02 -3.3900904655456543e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 793 4.4511677697300911e-03</internalNodes>\n          <leafValues>\n            -4.8704307526350021e-02 2.9764902591705322e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 545 -9.9098179489374161e-03</internalNodes>\n          <leafValues>\n            2.5863200426101685e-01 -5.7418409734964371e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 2 -2.6503708213567734e-03</internalNodes>\n          <leafValues>\n            1.3571591675281525e-01 -1.1608450859785080e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1 -3.0543167144060135e-02</internalNodes>\n          <leafValues>\n            2.8910955786705017e-01 -5.1689133048057556e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 698 -2.6757145300507545e-02</internalNodes>\n          <leafValues>\n            1.8446540832519531e-01 -7.7666454017162323e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 131 -2.2985447198152542e-02</internalNodes>\n          <leafValues>\n            -3.5471677780151367e-01 4.1345477104187012e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 536 9.5467511564493179e-03</internalNodes>\n          <leafValues>\n            -5.5719308555126190e-02 2.4589607119560242e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 730 2.6181992143392563e-03</internalNodes>\n          <leafValues>\n            -1.0256808251142502e-01 1.3319683074951172e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1031 -3.5491142421960831e-02</internalNodes>\n          <leafValues>\n            -5.9519535303115845e-01 2.2935084998607635e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 703 1.5474080573767424e-03</internalNodes>\n          <leafValues>\n            -8.4649838507175446e-02 1.6198579967021942e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 861 -3.4878745209425688e-03</internalNodes>\n          <leafValues>\n            -5.0121647119522095e-01 2.6359066367149353e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 601 3.6612942349165678e-03</internalNodes>\n          <leafValues>\n            -7.2178244590759277e-02 1.8415448069572449e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 692 -2.1762652322649956e-03</internalNodes>\n          <leafValues>\n            2.1102276444435120e-01 -6.4692504703998566e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 66 -6.9864131510257721e-03</internalNodes>\n          <leafValues>\n            -4.3104550242424011e-01 3.3448409289121628e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 64 4.7067347913980484e-03</internalNodes>\n          <leafValues>\n            4.7681909054517746e-02 -3.1132212281227112e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1054 -7.0012239739298820e-03</internalNodes>\n          <leafValues>\n            -3.4665238857269287e-01 3.6263268440961838e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 36 1.0144514963030815e-02</internalNodes>\n          <leafValues>\n            3.3140499144792557e-02 -3.7149414420127869e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 927 2.5893552228808403e-03</internalNodes>\n          <leafValues>\n            -5.6186988949775696e-02 2.3859155178070068e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 877 -3.8091647438704967e-03</internalNodes>\n          <leafValues>\n            1.8803173303604126e-01 -9.0667806565761566e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 559 -2.5004068017005920e-01</internalNodes>\n          <leafValues>\n            -5.7437247037887573e-01 2.3015361279249191e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 651 -8.5459719412028790e-04</internalNodes>\n          <leafValues>\n            -3.0019384622573853e-01 4.1898671537637711e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 556 -1.5604835003614426e-02</internalNodes>\n          <leafValues>\n            -5.8520871400833130e-01 2.1410541608929634e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 654 -1.9794562458992004e-01</internalNodes>\n          <leafValues>\n            -6.7963910102844238e-01 1.6488522291183472e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 896 -1.9824346527457237e-03</internalNodes>\n          <leafValues>\n            1.4493939280509949e-01 -8.7999224662780762e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 582 -2.1158650517463684e-02</internalNodes>\n          <leafValues>\n            -6.4664304256439209e-01 2.4590896442532539e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 837 -9.3553803162649274e-04</internalNodes>\n          <leafValues>\n            1.8229192495346069e-01 -7.2682343423366547e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 610 -1.1120189446955919e-03</internalNodes>\n          <leafValues>\n            1.5188181400299072e-01 -8.6225852370262146e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 316 1.1543033272027969e-01</internalNodes>\n          <leafValues>\n            -4.7091111540794373e-02 3.5574361681938171e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 568 -5.2959467284381390e-03</internalNodes>\n          <leafValues>\n            2.0496748387813568e-01 -6.1289250850677490e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 310 -2.6194794103503227e-02</internalNodes>\n          <leafValues>\n            1.7320305109024048e-01 -1.1094193905591965e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 167 1.4183738268911839e-02</internalNodes>\n          <leafValues>\n            -9.7011148929595947e-02 1.4372280240058899e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1032 -3.6340979859232903e-03</internalNodes>\n          <leafValues>\n            -4.0951785445213318e-01 3.0991807579994202e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1028 1.4448106288909912e-02</internalNodes>\n          <leafValues>\n            -6.1627220362424850e-02 2.0916682481765747e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 982 -1.1399465613067150e-02</internalNodes>\n          <leafValues>\n            1.8926219642162323e-01 -8.7004892528057098e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 18 -->\n    <_>\n      <maxWeakCount>100</maxWeakCount>\n      <stageThreshold>-1.2953979969024658e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 725 1.6048721969127655e-02</internalNodes>\n          <leafValues>\n            -9.5187164843082428e-02 3.7635341286659241e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 239 4.1785854846239090e-03</internalNodes>\n          <leafValues>\n            -1.4184002578258514e-01 3.1887301802635193e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 526 -6.7659835331141949e-03</internalNodes>\n          <leafValues>\n            3.7005490064620972e-01 -8.9318118989467621e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 186 1.4478694647550583e-02</internalNodes>\n          <leafValues>\n            -1.3418816030025482e-01 2.8370034694671631e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 411 -1.8653089646250010e-03</internalNodes>\n          <leafValues>\n            -3.5015934705734253e-01 6.9187328219413757e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 901 3.7634610198438168e-03</internalNodes>\n          <leafValues>\n            -7.7612839639186859e-02 3.0384179949760437e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 353 8.9913085103034973e-03</internalNodes>\n          <leafValues>\n            6.0584690421819687e-02 -4.7271341085433960e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 121 -3.0867164023220539e-03</internalNodes>\n          <leafValues>\n            1.6870087385177612e-01 -1.3231597840785980e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 388 -4.0246914140880108e-03</internalNodes>\n          <leafValues>\n            -4.1840493679046631e-01 6.4627721905708313e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 896 4.8679644241929054e-03</internalNodes>\n          <leafValues>\n            -5.6233335286378860e-02 4.2156839370727539e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 480 5.5472417734563351e-03</internalNodes>\n          <leafValues>\n            3.7891130894422531e-02 -5.1408857107162476e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1003 6.5884483046829700e-04</internalNodes>\n          <leafValues>\n            -1.6457377374172211e-01 1.1204792559146881e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1050 -1.0980388615280390e-03</internalNodes>\n          <leafValues>\n            -3.3544427156448364e-01 4.6025454998016357e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 583 -2.8328509069979191e-03</internalNodes>\n          <leafValues>\n            2.3426958918571472e-01 -7.2758100926876068e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 56 1.5504788607358932e-03</internalNodes>\n          <leafValues>\n            6.2664858996868134e-02 -2.5632002949714661e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 348 -6.2153179896995425e-04</internalNodes>\n          <leafValues>\n            1.7485393583774567e-01 -9.9982917308807373e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 675 -1.4540781266987324e-02</internalNodes>\n          <leafValues>\n            -4.4969236850738525e-01 3.7324137985706329e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 792 -1.6624422278255224e-03</internalNodes>\n          <leafValues>\n            1.4047256112098694e-01 -1.1892398446798325e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 893 1.6246617306023836e-03</internalNodes>\n          <leafValues>\n            6.1172962188720703e-02 -2.7449882030487061e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 87 -1.1364535987377167e-01</internalNodes>\n          <leafValues>\n            -4.3175131082534790e-01 3.8861453533172607e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 29 6.3355863094329834e-03</internalNodes>\n          <leafValues>\n            4.3615639209747314e-02 -3.7530297040939331e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 88 -7.9950205981731415e-03</internalNodes>\n          <leafValues>\n            -5.6157833337783813e-01 2.7148496359586716e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 825 -6.0972268693149090e-03</internalNodes>\n          <leafValues>\n            4.7499263286590576e-01 -3.5678520798683167e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 933 1.3845593202859163e-03</internalNodes>\n          <leafValues>\n            -1.1575383692979813e-01 1.3405258953571320e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 351 8.5432223975658417e-02</internalNodes>\n          <leafValues>\n            -5.6930482387542725e-02 3.1373351812362671e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 661 -1.2029780447483063e-01</internalNodes>\n          <leafValues>\n            -4.7989824414253235e-01 3.8594469428062439e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 829 -8.3766942843794823e-03</internalNodes>\n          <leafValues>\n            -2.0806340873241425e-01 7.6934777200222015e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 673 -4.6590538695454597e-03</internalNodes>\n          <leafValues>\n            -5.0349289178848267e-01 3.0419014394283295e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 453 -3.2761119306087494e-02</internalNodes>\n          <leafValues>\n            3.2354715466499329e-01 -5.6276485323905945e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 783 8.3009023219347000e-03</internalNodes>\n          <leafValues>\n            -8.3831317722797394e-02 2.3335608839988708e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 848 5.7156109251081944e-03</internalNodes>\n          <leafValues>\n            -8.6484365165233612e-02 1.8363620340824127e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 518 -1.0080671310424805e-01</internalNodes>\n          <leafValues>\n            3.8774350285530090e-01 -4.0828518569469452e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 14 -2.5552421808242798e-02</internalNodes>\n          <leafValues>\n            -5.0166463851928711e-01 3.8269419223070145e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 23 -6.1748407781124115e-02</internalNodes>\n          <leafValues>\n            -3.5811841487884521e-01 4.6544160693883896e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 702 -1.2269845232367516e-02</internalNodes>\n          <leafValues>\n            2.0786920189857483e-01 -7.8518457710742950e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 11 2.8048269450664520e-02</internalNodes>\n          <leafValues>\n            -5.6248739361763000e-02 2.8977242112159729e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 523 -7.2269486263394356e-03</internalNodes>\n          <leafValues>\n            -7.2842431068420410e-01 2.3379294201731682e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 952 4.7771912068128586e-03</internalNodes>\n          <leafValues>\n            2.3226773366332054e-02 -5.6412339210510254e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 2.8181755915284157e-03</internalNodes>\n          <leafValues>\n            -3.3893339335918427e-02 4.3989458680152893e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 194 -8.4437360055744648e-04</internalNodes>\n          <leafValues>\n            1.9623728096485138e-01 -7.8485630452632904e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 407 -4.3037505820393562e-03</internalNodes>\n          <leafValues>\n            -3.6311796307563782e-01 4.0526941418647766e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 105 4.9789976328611374e-03</internalNodes>\n          <leafValues>\n            4.8658054322004318e-02 -3.1162264943122864e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1041 -5.0353109836578369e-03</internalNodes>\n          <leafValues>\n            -5.5396872758865356e-01 2.3420164361596107e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 837 -1.3716940302401781e-03</internalNodes>\n          <leafValues>\n            2.2532704472541809e-01 -6.2741614878177643e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 910 3.3456790260970592e-03</internalNodes>\n          <leafValues>\n            3.8516163825988770e-02 -3.6224716901779175e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 476 1.9023896893486381e-03</internalNodes>\n          <leafValues>\n            -5.4677281528711319e-02 2.5294607877731323e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1037 -1.4274399727582932e-03</internalNodes>\n          <leafValues>\n            -3.7934723496437073e-01 3.8707002997398376e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 512 1.1010284069925547e-03</internalNodes>\n          <leafValues>\n            -9.5659099519252777e-02 1.4958517253398895e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 219 -4.4154529459774494e-03</internalNodes>\n          <leafValues>\n            -5.1156622171401978e-01 2.5640288367867470e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 448 3.7023271434009075e-03</internalNodes>\n          <leafValues>\n            -4.3221119791269302e-02 3.2581970095634460e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 237 -5.4480084218084812e-03</internalNodes>\n          <leafValues>\n            -4.7611567378044128e-01 3.5773757845163345e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 313 -3.1974539160728455e-04</internalNodes>\n          <leafValues>\n            1.1916244029998779e-01 -1.1832383275032043e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 381 -2.8494147583842278e-02</internalNodes>\n          <leafValues>\n            -6.5004557371139526e-01 2.0599177107214928e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 941 -2.7449331246316433e-03</internalNodes>\n          <leafValues>\n            -3.9275056123733521e-01 3.3223718404769897e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 937 4.1362000629305840e-03</internalNodes>\n          <leafValues>\n            2.7191400527954102e-02 -4.7952741384506226e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 638 3.3568721264600754e-03</internalNodes>\n          <leafValues>\n            -6.0983922332525253e-02 2.2964073717594147e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 571 -5.7129040360450745e-03</internalNodes>\n          <leafValues>\n            -5.9052920341491699e-01 2.3388050496578217e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 477 -1.1567326728254557e-03</internalNodes>\n          <leafValues>\n            1.5093772113323212e-01 -9.1553181409835815e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 143 -8.9379055425524712e-03</internalNodes>\n          <leafValues>\n            -3.5481104254722595e-01 3.6294396966695786e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 811 3.6097350530326366e-03</internalNodes>\n          <leafValues>\n            3.2780081033706665e-02 -3.8517734408378601e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 975 2.0727193914353848e-03</internalNodes>\n          <leafValues>\n            -5.3627125918865204e-02 2.5666573643684387e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 977 -1.8177125602960587e-03</internalNodes>\n          <leafValues>\n            2.0363596081733704e-01 -7.0555560290813446e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 932 -3.3223466016352177e-03</internalNodes>\n          <leafValues>\n            -4.8926571011543274e-01 2.8675178065896034e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 553 -4.4222660362720490e-03</internalNodes>\n          <leafValues>\n            -4.0920063853263855e-01 3.0863059684634209e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 705 -7.8024319373071194e-04</internalNodes>\n          <leafValues>\n            1.2166435271501541e-01 -1.0897941887378693e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 850 7.9855127260088921e-03</internalNodes>\n          <leafValues>\n            2.5865448638796806e-02 -4.8917418718338013e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 99 -2.7752606911235489e-05</internalNodes>\n          <leafValues>\n            1.1611134558916092e-01 -1.1225233227014542e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 641 3.0770362354815006e-03</internalNodes>\n          <leafValues>\n            -6.4753420650959015e-02 1.9632078707218170e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 593 -2.1007210016250610e-03</internalNodes>\n          <leafValues>\n            1.9681814312934875e-01 -9.4167068600654602e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 112 -6.1383144930005074e-03</internalNodes>\n          <leafValues>\n            -3.9225277304649353e-01 3.5275831818580627e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 119 1.1184177361428738e-02</internalNodes>\n          <leafValues>\n            2.9410628601908684e-02 -4.3673589825630188e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1007 1.0432782582938671e-03</internalNodes>\n          <leafValues>\n            -6.7393802106380463e-02 1.9237922132015228e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 931 8.5366604616865516e-04</internalNodes>\n          <leafValues>\n            -8.4067851305007935e-02 1.6720806062221527e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 55 -3.3059090375900269e-02</internalNodes>\n          <leafValues>\n            2.6451063156127930e-01 -5.2662543952465057e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 161 -8.7435375899076462e-03</internalNodes>\n          <leafValues>\n            -3.0780994892120361e-01 4.8419766128063202e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 907 -1.1587596964091063e-03</internalNodes>\n          <leafValues>\n            1.4863640069961548e-01 -9.4251774251461029e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 295 -2.2717786952853203e-02</internalNodes>\n          <leafValues>\n            -4.2414310574531555e-01 3.5150803625583649e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 810 -8.4660220891237259e-03</internalNodes>\n          <leafValues>\n            2.5765278935432434e-01 -5.4796367883682251e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 492 -1.4943551504984498e-03</internalNodes>\n          <leafValues>\n            -2.7729934453964233e-01 4.9375709146261215e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 0 -7.5480109080672264e-04</internalNodes>\n          <leafValues>\n            1.2197802960872650e-01 -1.0845532268285751e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 853 2.9903287068009377e-03</internalNodes>\n          <leafValues>\n            -8.4785357117652893e-02 1.5424512326717377e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1040 1.7600806895643473e-03</internalNodes>\n          <leafValues>\n            7.0044547319412231e-02 -1.9795240461826324e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 154 1.2243577279150486e-02</internalNodes>\n          <leafValues>\n            -7.8472696244716644e-02 1.7095038294792175e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 80 -2.7739753946661949e-02</internalNodes>\n          <leafValues>\n            2.0475350320339203e-01 -6.9862313568592072e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 300 -6.4486754126846790e-03</internalNodes>\n          <leafValues>\n            -3.7651637196540833e-01 3.3540505915880203e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 341 -1.3427068479359150e-02</internalNodes>\n          <leafValues>\n            1.5320046246051788e-01 -8.3272159099578857e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 360 8.2654636353254318e-03</internalNodes>\n          <leafValues>\n            -8.1395141780376434e-02 1.9696740806102753e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 616 3.0615129508078098e-03</internalNodes>\n          <leafValues>\n            -5.8534789830446243e-02 2.1799990534782410e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 616 -1.4359520282596350e-03</internalNodes>\n          <leafValues>\n            1.8553669750690460e-01 -7.9428143799304962e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 488 2.8793164528906345e-03</internalNodes>\n          <leafValues>\n            3.7499722093343735e-02 -3.5483118891716003e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 631 -9.0899681672453880e-03</internalNodes>\n          <leafValues>\n            -5.9031629562377930e-01 2.0012531429529190e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 896 1.6797243151813745e-03</internalNodes>\n          <leafValues>\n            -6.8868115544319153e-02 1.8992543220520020e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 581 -1.1759581044316292e-02</internalNodes>\n          <leafValues>\n            3.6288693547248840e-01 -3.3578243106603622e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 749 3.8305222988128662e-03</internalNodes>\n          <leafValues>\n            -6.6793553531169891e-02 1.9304293394088745e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1018 1.2506111524999142e-03</internalNodes>\n          <leafValues>\n            -8.1618689000606537e-02 1.5481384098529816e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 379 -1.6119323670864105e-02</internalNodes>\n          <leafValues>\n            1.4024992287158966e-01 -9.3965478241443634e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 576 -7.2789913974702358e-04</internalNodes>\n          <leafValues>\n            1.9554650783538818e-01 -7.2329640388488770e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 178 1.4888901496306062e-03</internalNodes>\n          <leafValues>\n            3.3372651785612106e-02 -4.0691211819648743e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 984 -4.9822013825178146e-03</internalNodes>\n          <leafValues>\n            -3.3125448226928711e-01 3.6899805068969727e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1053 9.4443336129188538e-03</internalNodes>\n          <leafValues>\n            3.1763385981321335e-02 -3.7651473283767700e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 19 -->\n    <_>\n      <maxWeakCount>100</maxWeakCount>\n      <stageThreshold>-1.3101767301559448e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 535 -1.2652185745537281e-02</internalNodes>\n          <leafValues>\n            4.0350878238677979e-01 -8.6829073727130890e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 386 4.8778904601931572e-03</internalNodes>\n          <leafValues>\n            -9.1208808124065399e-02 4.8882400989532471e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 875 -2.4099014699459076e-02</internalNodes>\n          <leafValues>\n            3.6089360713958740e-01 -1.1495783179998398e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 955 1.7244052141904831e-03</internalNodes>\n          <leafValues>\n            -1.5974776446819305e-01 1.6197346150875092e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 478 -3.6334272008389235e-03</internalNodes>\n          <leafValues>\n            2.7575418353080750e-01 -9.4314105808734894e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 874 -3.4076566807925701e-03</internalNodes>\n          <leafValues>\n            2.2806543111801147e-01 -1.1266379803419113e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 343 8.8951038196682930e-03</internalNodes>\n          <leafValues>\n            -6.6720969974994659e-02 3.3090111613273621e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 886 -2.4365000426769257e-03</internalNodes>\n          <leafValues>\n            -4.6264356374740601e-01 5.9559248387813568e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 134 1.6330357640981674e-02</internalNodes>\n          <leafValues>\n            6.1187297105789185e-02 -4.2252638936042786e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 92 8.4438512567430735e-04</internalNodes>\n          <leafValues>\n            -1.6640183329582214e-01 1.1608948558568954e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 841 2.9493896290659904e-03</internalNodes>\n          <leafValues>\n            -9.1952294111251831e-02 2.0670032501220703e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 40 3.4696407616138458e-02</internalNodes>\n          <leafValues>\n            -8.0334044992923737e-02 2.8779104351997375e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 893 -3.3343117684125900e-03</internalNodes>\n          <leafValues>\n            -5.9474521875381470e-01 3.6547001451253891e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 761 9.3975086929276586e-04</internalNodes>\n          <leafValues>\n            -1.5703736245632172e-01 1.1884722858667374e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 174 -3.4337402321398258e-03</internalNodes>\n          <leafValues>\n            -5.6122291088104248e-01 3.2535579055547714e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1010 2.6463428512215614e-03</internalNodes>\n          <leafValues>\n            -7.0756055414676666e-02 2.5195503234863281e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 334 -5.4167490452528000e-04</internalNodes>\n          <leafValues>\n            1.2782673537731171e-01 -1.3642209768295288e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 219 2.6469756849110126e-03</internalNodes>\n          <leafValues>\n            4.3448049575090408e-02 -4.2012536525726318e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 467 -3.8945327978581190e-03</internalNodes>\n          <leafValues>\n            -3.4613665938377380e-01 4.6863511204719543e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 258 1.0849055834114552e-03</internalNodes>\n          <leafValues>\n            -7.2841711342334747e-02 2.2674085199832916e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 258 -9.8655023612082005e-04</internalNodes>\n          <leafValues>\n            2.5967630743980408e-01 -8.0196425318717957e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 204 4.3801497668027878e-03</internalNodes>\n          <leafValues>\n            2.8548270463943481e-02 -6.2486541271209717e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 3.1944573856890202e-04</internalNodes>\n          <leafValues>\n            -1.4062304794788361e-01 1.1761485785245895e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 300 6.6440929658710957e-03</internalNodes>\n          <leafValues>\n            3.2654736191034317e-02 -4.6211913228034973e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 42 7.0357543881982565e-04</internalNodes>\n          <leafValues>\n            7.5751155614852905e-02 -1.9804775714874268e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 446 5.4024737328290939e-03</internalNodes>\n          <leafValues>\n            -6.1951220035552979e-02 2.4502439796924591e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 502 7.2796619497239590e-03</internalNodes>\n          <leafValues>\n            -5.9379905462265015e-02 2.5588110089302063e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 169 -1.5059831552207470e-02</internalNodes>\n          <leafValues>\n            -6.6548824310302734e-01 2.2492453455924988e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 270 -4.6248016878962517e-03</internalNodes>\n          <leafValues>\n            -3.4483894705772400e-01 4.2247168719768524e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 290 1.4736279845237732e-03</internalNodes>\n          <leafValues>\n            3.3624436706304550e-02 -4.1066497564315796e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 110 4.0667224675416946e-03</internalNodes>\n          <leafValues>\n            -8.6238399147987366e-02 1.6550070047378540e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 113 -1.2728295987471938e-03</internalNodes>\n          <leafValues>\n            1.9737298786640167e-01 -9.5425128936767578e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 957 -1.5297440811991692e-02</internalNodes>\n          <leafValues>\n            -5.9287589788436890e-01 2.3890895769000053e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 969 -2.9415758326649666e-03</internalNodes>\n          <leafValues>\n            -4.8744291067123413e-01 2.8945079073309898e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 840 9.3173712957650423e-04</internalNodes>\n          <leafValues>\n            -8.9065223932266235e-02 1.6721877455711365e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 791 2.1161064505577087e-03</internalNodes>\n          <leafValues>\n            -5.8501452207565308e-02 2.7767315506935120e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 579 -3.7564497906714678e-03</internalNodes>\n          <leafValues>\n            2.6502594351768494e-01 -5.3400754928588867e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 224 1.9215289503335953e-02</internalNodes>\n          <leafValues>\n            3.6197379231452942e-02 -3.9996260404586792e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 -5.8480387087911367e-04</internalNodes>\n          <leafValues>\n            1.7670612037181854e-01 -8.0434471368789673e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 62 1.7193648964166641e-02</internalNodes>\n          <leafValues>\n            2.1810308098793030e-02 -6.6349571943283081e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 394 -1.5182361006736755e-02</internalNodes>\n          <leafValues>\n            2.4825552105903625e-01 -6.3092373311519623e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 712 3.0793007463216782e-03</internalNodes>\n          <leafValues>\n            2.4977168068289757e-02 -5.3303867578506470e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 410 -2.4421955458819866e-03</internalNodes>\n          <leafValues>\n            -3.6828973889350891e-01 3.3543743193149567e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1011 7.0760864764451981e-04</internalNodes>\n          <leafValues>\n            -7.0839107036590576e-02 1.9299270212650299e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 280 -2.9198618140071630e-03</internalNodes>\n          <leafValues>\n            -4.2773759365081787e-01 3.4788779914379120e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 77 4.9937088042497635e-03</internalNodes>\n          <leafValues>\n            3.5642433911561966e-02 -3.7421676516532898e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 701 3.1980490311980247e-03</internalNodes>\n          <leafValues>\n            -6.5103210508823395e-02 2.1381905674934387e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 320 -1.1253832839429379e-02</internalNodes>\n          <leafValues>\n            1.9790579378604889e-01 -7.1859836578369141e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 496 -3.6279223859310150e-02</internalNodes>\n          <leafValues>\n            1.7960831522941589e-01 -9.7373597323894501e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 606 2.5160997174680233e-03</internalNodes>\n          <leafValues>\n            4.7910790890455246e-02 -2.7035105228424072e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 597 1.2429051566869020e-03</internalNodes>\n          <leafValues>\n            -7.8723609447479248e-02 1.7209371924400330e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 600 -1.6120750457048416e-02</internalNodes>\n          <leafValues>\n            2.6868200302124023e-01 -5.0688084214925766e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 676 1.9487962126731873e-03</internalNodes>\n          <leafValues>\n            4.2773328721523285e-02 -3.2401460409164429e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 371 7.1887858211994171e-04</internalNodes>\n          <leafValues>\n            -9.3979224562644958e-02 1.4450067281723022e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 315 2.4896476417779922e-02</internalNodes>\n          <leafValues>\n            3.0655095353722572e-02 -4.5330229401588440e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1026 -3.9382722228765488e-02</internalNodes>\n          <leafValues>\n            -7.5473642349243164e-01 1.4460344798862934e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 16 1.6916246712207794e-01</internalNodes>\n          <leafValues>\n            1.8219815567135811e-02 -6.0212779045104980e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 327 2.6912155590252951e-05</internalNodes>\n          <leafValues>\n            -1.3110430538654327e-01 1.0080647468566895e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 720 -1.1350987479090691e-03</internalNodes>\n          <leafValues>\n            -3.5285457968711853e-01 3.5424951463937759e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 275 -5.3854554425925016e-04</internalNodes>\n          <leafValues>\n            1.6519539058208466e-01 -8.5205554962158203e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1006 -7.9703063238412142e-04</internalNodes>\n          <leafValues>\n            1.2170238047838211e-01 -1.1191177368164062e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1055 6.4357938244938850e-03</internalNodes>\n          <leafValues>\n            2.3892326280474663e-02 -5.2907115221023560e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 184 3.5384115763008595e-03</internalNodes>\n          <leafValues>\n            1.5895446762442589e-02 -7.3063355684280396e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 503 -5.9715351089835167e-03</internalNodes>\n          <leafValues>\n            -4.9897637963294983e-01 2.2720154374837875e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 500 -1.3486531376838684e-01</internalNodes>\n          <leafValues>\n            4.7622504830360413e-01 -3.0212458223104477e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 824 1.5813487116247416e-03</internalNodes>\n          <leafValues>\n            -6.4366899430751801e-02 1.9106543064117432e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 438 1.2239011703059077e-03</internalNodes>\n          <leafValues>\n            3.5654775798320770e-02 -3.6865225434303284e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 871 1.5586249064654112e-03</internalNodes>\n          <leafValues>\n            -7.6894849538803101e-02 1.7627324163913727e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 807 8.1224087625741959e-03</internalNodes>\n          <leafValues>\n            -9.0349502861499786e-02 1.4695085585117340e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 693 -1.1717316228896379e-03</internalNodes>\n          <leafValues>\n            -4.2172068357467651e-01 3.2626960426568985e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 863 3.1573872547596693e-03</internalNodes>\n          <leafValues>\n            1.6080003231763840e-02 -7.3708915710449219e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 328 -6.0417165514081717e-04</internalNodes>\n          <leafValues>\n            1.3188406825065613e-01 -1.0221557319164276e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 870 5.9989960864186287e-03</internalNodes>\n          <leafValues>\n            -5.6194521486759186e-02 2.4262723326683044e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 285 9.2063043266534805e-03</internalNodes>\n          <leafValues>\n            -7.4052155017852783e-02 1.9847218692302704e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 759 5.9181386604905128e-03</internalNodes>\n          <leafValues>\n            2.7928760275244713e-02 -5.3380137681961060e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 637 2.2121241781860590e-03</internalNodes>\n          <leafValues>\n            -7.4788182973861694e-02 1.9799898564815521e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 634 1.5453733503818512e-03</internalNodes>\n          <leafValues>\n            -8.1615962088108063e-02 1.7845135927200317e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 48 -2.7309993747621775e-03</internalNodes>\n          <leafValues>\n            -2.9415401816368103e-01 4.8099983483552933e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 288 1.5755122527480125e-02</internalNodes>\n          <leafValues>\n            -8.2719191908836365e-02 1.5387716889381409e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 358 -5.5120363831520081e-02</internalNodes>\n          <leafValues>\n            -2.7076271176338196e-01 5.2753895521163940e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 188 2.9593750834465027e-01</internalNodes>\n          <leafValues>\n            -2.5313137099146843e-02 5.3404790163040161e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 755 -1.1218986473977566e-03</internalNodes>\n          <leafValues>\n            1.1400944739580154e-01 -1.1270149052143097e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 12 -3.7802509963512421e-02</internalNodes>\n          <leafValues>\n            3.1571185588836670e-01 -4.9672659486532211e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 122 7.6384171843528748e-03</internalNodes>\n          <leafValues>\n            -1.0544487833976746e-01 1.6579298675060272e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 586 6.8679507821798325e-03</internalNodes>\n          <leafValues>\n            -6.0160953551530838e-02 2.2640766203403473e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 443 5.1510091871023178e-02</internalNodes>\n          <leafValues>\n            2.6919802650809288e-02 -5.1188707351684570e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 997 -1.7317479476332664e-02</internalNodes>\n          <leafValues>\n            2.8218811750411987e-01 -4.4739942997694016e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 430 8.3876429125666618e-03</internalNodes>\n          <leafValues>\n            -5.7016383856534958e-02 2.2617760300636292e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 625 9.2909142374992371e-02</internalNodes>\n          <leafValues>\n            3.1283479183912277e-02 -4.9390810728073120e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 457 4.8232711851596832e-03</internalNodes>\n          <leafValues>\n            2.4896934628486633e-02 -4.5571261644363403e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 484 2.3969253525137901e-03</internalNodes>\n          <leafValues>\n            2.3365976288914680e-02 -4.8319596052169800e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 599 -3.8546645082533360e-03</internalNodes>\n          <leafValues>\n            2.0274488627910614e-01 -5.8264043182134628e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 647 -1.2048919452354312e-03</internalNodes>\n          <leafValues>\n            -3.4361392259597778e-01 3.4746967256069183e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 734 -1.6053356230258942e-02</internalNodes>\n          <leafValues>\n            1.8685258924961090e-01 -6.7979305982589722e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1045 -2.1703056991100311e-02</internalNodes>\n          <leafValues>\n            -5.0804340839385986e-01 2.5113353505730629e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 541 -1.9719875417649746e-03</internalNodes>\n          <leafValues>\n            -2.7325069904327393e-01 4.3638698756694794e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 -1.3189280871301889e-03</internalNodes>\n          <leafValues>\n            2.5198838114738464e-01 -4.8170279711484909e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 1.3257672544568777e-03</internalNodes>\n          <leafValues>\n            -6.6290155053138733e-02 2.6572498679161072e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1024 -2.5993511080741882e-03</internalNodes>\n          <leafValues>\n            -7.1209841966629028e-01 1.9255550578236580e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 926 4.0416182018816471e-03</internalNodes>\n          <leafValues>\n            2.4820772930979729e-02 -4.3810126185417175e-01</leafValues></_></weakClassifiers></_></stages>\n  <features>\n    <_>\n      <rects>\n        <_>\n          0 0 2 4 -1.</_>\n        <_>\n          0 2 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 6 14 -1.</_>\n        <_>\n          0 0 3 7 2.</_>\n        <_>\n          3 7 3 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 1 -1.</_>\n        <_>\n          4 0 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 2 -1.</_>\n        <_>\n          4 0 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 6 -1.</_>\n        <_>\n          0 0 4 3 2.</_>\n        <_>\n          4 3 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 12 -1.</_>\n        <_>\n          0 0 4 6 2.</_>\n        <_>\n          4 6 4 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 14 -1.</_>\n        <_>\n          0 0 4 7 2.</_>\n        <_>\n          4 7 4 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 10 6 -1.</_>\n        <_>\n          0 0 5 3 2.</_>\n        <_>\n          5 3 5 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 10 8 -1.</_>\n        <_>\n          0 0 5 4 2.</_>\n        <_>\n          5 4 5 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 18 13 -1.</_>\n        <_>\n          6 0 6 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 14 10 -1.</_>\n        <_>\n          0 0 7 5 2.</_>\n        <_>\n          7 5 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 24 1 -1.</_>\n        <_>\n          8 0 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 16 6 -1.</_>\n        <_>\n          0 0 8 3 2.</_>\n        <_>\n          8 3 8 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 16 10 -1.</_>\n        <_>\n          0 0 8 5 2.</_>\n        <_>\n          8 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 24 1 -1.</_>\n        <_>\n          12 0 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 24 2 -1.</_>\n        <_>\n          0 0 12 1 2.</_>\n        <_>\n          12 1 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 12 12 -1.</_>\n        <_>\n          0 6 12 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 15 18 -1.</_>\n        <_>\n          0 6 15 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 1 1 6 -1.</_>\n        <_>\n          0 3 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 1 4 6 -1.</_>\n        <_>\n          2 1 2 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 1 15 1 -1.</_>\n        <_>\n          5 1 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 1 10 2 -1.</_>\n        <_>\n          5 1 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 2 24 2 -1.</_>\n        <_>\n          0 2 12 1 2.</_>\n        <_>\n          12 3 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 2 24 10 -1.</_>\n        <_>\n          0 2 12 5 2.</_>\n        <_>\n          12 7 12 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 3 7 3 -1.</_>\n        <_>\n          0 4 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 3 24 2 -1.</_>\n        <_>\n          0 3 12 1 2.</_>\n        <_>\n          12 4 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 4 6 12 -1.</_>\n        <_>\n          0 8 6 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 4 24 6 -1.</_>\n        <_>\n          0 6 24 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 5 2 9 -1.</_>\n        <_>\n          0 8 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 5 24 2 -1.</_>\n        <_>\n          0 5 12 1 2.</_>\n        <_>\n          12 6 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 6 3 -1.</_>\n        <_>\n          0 7 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 24 2 -1.</_>\n        <_>\n          0 6 12 1 2.</_>\n        <_>\n          12 7 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 22 3 -1.</_>\n        <_>\n          0 7 22 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 24 9 -1.</_>\n        <_>\n          0 9 24 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 16 1 -1.</_>\n        <_>\n          8 7 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 24 3 -1.</_>\n        <_>\n          8 7 8 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 24 2 -1.</_>\n        <_>\n          0 7 12 1 2.</_>\n        <_>\n          12 8 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 4 6 -1.</_>\n        <_>\n          2 8 2 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 6 15 -1.</_>\n        <_>\n          3 8 3 15 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 4 9 -1.</_>\n        <_>\n          0 11 4 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 24 1 -1.</_>\n        <_>\n          8 8 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 24 4 -1.</_>\n        <_>\n          0 8 12 2 2.</_>\n        <_>\n          12 10 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 2 3 -1.</_>\n        <_>\n          0 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 2 9 -1.</_>\n        <_>\n          0 12 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 5 3 -1.</_>\n        <_>\n          0 10 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 5 6 -1.</_>\n        <_>\n          0 11 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 7 2 -1.</_>\n        <_>\n          0 10 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 8 2 -1.</_>\n        <_>\n          0 10 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 10 2 -1.</_>\n        <_>\n          0 10 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 22 2 -1.</_>\n        <_>\n          0 9 11 1 2.</_>\n        <_>\n          11 10 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 24 4 -1.</_>\n        <_>\n          0 9 12 2 2.</_>\n        <_>\n          12 11 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 24 15 -1.</_>\n        <_>\n          12 9 12 15 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 15 3 -1.</_>\n        <_>\n          0 10 15 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 2 3 -1.</_>\n        <_>\n          0 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 6 1 -1.</_>\n        <_>\n          3 10 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 6 14 -1.</_>\n        <_>\n          3 10 3 14 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 4 3 -1.</_>\n        <_>\n          0 11 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 24 2 -1.</_>\n        <_>\n          0 10 12 1 2.</_>\n        <_>\n          12 11 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 24 4 -1.</_>\n        <_>\n          0 10 12 2 2.</_>\n        <_>\n          12 12 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 13 3 -1.</_>\n        <_>\n          0 11 13 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 2 3 -1.</_>\n        <_>\n          0 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 6 8 -1.</_>\n        <_>\n          0 11 3 4 2.</_>\n        <_>\n          3 15 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 10 3 -1.</_>\n        <_>\n          0 12 10 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 24 2 -1.</_>\n        <_>\n          0 11 12 1 2.</_>\n        <_>\n          12 12 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 12 3 10 -1.</_>\n        <_>\n          1 12 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 12 22 10 -1.</_>\n        <_>\n          11 12 11 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 13 3 9 -1.</_>\n        <_>\n          1 13 1 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 13 12 10 -1.</_>\n        <_>\n          6 13 6 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 13 24 10 -1.</_>\n        <_>\n          12 13 12 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 14 24 2 -1.</_>\n        <_>\n          0 14 12 1 2.</_>\n        <_>\n          12 15 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 15 3 8 -1.</_>\n        <_>\n          1 15 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 15 12 8 -1.</_>\n        <_>\n          0 15 6 4 2.</_>\n        <_>\n          6 19 6 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 15 10 6 -1.</_>\n        <_>\n          0 17 10 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 16 12 8 -1.</_>\n        <_>\n          0 16 6 4 2.</_>\n        <_>\n          6 20 6 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 17 3 7 -1.</_>\n        <_>\n          1 17 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 18 6 3 -1.</_>\n        <_>\n          0 19 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 19 6 3 -1.</_>\n        <_>\n          0 20 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 20 6 3 -1.</_>\n        <_>\n          0 21 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 21 4 3 -1.</_>\n        <_>\n          0 22 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 21 5 3 -1.</_>\n        <_>\n          0 22 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 22 22 2 -1.</_>\n        <_>\n          11 22 11 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 6 1 -1.</_>\n        <_>\n          4 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 15 13 -1.</_>\n        <_>\n          6 0 5 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 12 6 -1.</_>\n        <_>\n          1 0 6 3 2.</_>\n        <_>\n          7 3 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 1 22 2 -1.</_>\n        <_>\n          1 1 11 1 2.</_>\n        <_>\n          12 2 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 2 23 9 -1.</_>\n        <_>\n          1 5 23 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 3 4 3 -1.</_>\n        <_>\n          1 4 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 3 12 18 -1.</_>\n        <_>\n          5 3 4 18 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 4 8 3 -1.</_>\n        <_>\n          1 5 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 4 23 6 -1.</_>\n        <_>\n          1 6 23 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 6 4 -1.</_>\n        <_>\n          1 6 3 2 2.</_>\n        <_>\n          4 8 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 3 9 -1.</_>\n        <_>\n          1 9 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 4 3 -1.</_>\n        <_>\n          1 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 22 2 -1.</_>\n        <_>\n          1 6 11 1 2.</_>\n        <_>\n          12 7 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 12 8 -1.</_>\n        <_>\n          1 10 12 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 8 4 -1.</_>\n        <_>\n          1 7 4 2 2.</_>\n        <_>\n          5 9 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 20 4 -1.</_>\n        <_>\n          1 7 10 2 2.</_>\n        <_>\n          11 9 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 22 6 -1.</_>\n        <_>\n          1 7 11 3 2.</_>\n        <_>\n          12 10 11 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 22 14 -1.</_>\n        <_>\n          12 7 11 14 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 1 2 -1.</_>\n        <_>\n          1 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 8 2 -1.</_>\n        <_>\n          1 8 4 1 2.</_>\n        <_>\n          5 9 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 7 4 -1.</_>\n        <_>\n          1 10 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 22 4 -1.</_>\n        <_>\n          1 8 11 2 2.</_>\n        <_>\n          12 10 11 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 9 4 3 -1.</_>\n        <_>\n          3 9 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 9 4 6 -1.</_>\n        <_>\n          1 11 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 9 20 2 -1.</_>\n        <_>\n          1 9 10 1 2.</_>\n        <_>\n          11 10 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 3 13 -1.</_>\n        <_>\n          2 10 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 4 6 -1.</_>\n        <_>\n          1 12 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 8 3 -1.</_>\n        <_>\n          1 11 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 20 2 -1.</_>\n        <_>\n          1 10 10 1 2.</_>\n        <_>\n          11 11 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 11 6 2 -1.</_>\n        <_>\n          4 11 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 11 22 2 -1.</_>\n        <_>\n          1 11 11 1 2.</_>\n        <_>\n          12 12 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 12 3 8 -1.</_>\n        <_>\n          2 12 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 12 4 1 -1.</_>\n        <_>\n          3 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 12 20 2 -1.</_>\n        <_>\n          1 12 10 1 2.</_>\n        <_>\n          11 13 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 13 3 8 -1.</_>\n        <_>\n          2 13 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 13 9 3 -1.</_>\n        <_>\n          1 14 9 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 13 21 8 -1.</_>\n        <_>\n          1 17 21 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 15 8 2 -1.</_>\n        <_>\n          5 15 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 17 22 2 -1.</_>\n        <_>\n          1 17 11 1 2.</_>\n        <_>\n          12 18 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 18 3 6 -1.</_>\n        <_>\n          2 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 6 1 -1.</_>\n        <_>\n          5 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 8 6 -1.</_>\n        <_>\n          2 0 4 3 2.</_>\n        <_>\n          6 3 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 12 5 -1.</_>\n        <_>\n          8 0 6 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 3 20 2 -1.</_>\n        <_>\n          2 3 10 1 2.</_>\n        <_>\n          12 4 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 4 3 3 -1.</_>\n        <_>\n          2 5 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 4 20 2 -1.</_>\n        <_>\n          2 4 10 1 2.</_>\n        <_>\n          12 5 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 5 1 3 -1.</_>\n        <_>\n          2 6 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 5 2 3 -1.</_>\n        <_>\n          2 6 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 5 20 2 -1.</_>\n        <_>\n          2 5 10 1 2.</_>\n        <_>\n          12 6 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 6 22 2 -1.</_>\n        <_>\n          2 6 11 1 2.</_>\n        <_>\n          13 7 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 6 22 4 -1.</_>\n        <_>\n          2 6 11 2 2.</_>\n        <_>\n          13 8 11 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 15 3 -1.</_>\n        <_>\n          2 8 15 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 8 8 3 -1.</_>\n        <_>\n          2 9 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 8 20 4 -1.</_>\n        <_>\n          2 8 10 2 2.</_>\n        <_>\n          12 10 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 9 20 8 -1.</_>\n        <_>\n          2 9 10 4 2.</_>\n        <_>\n          12 13 10 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 9 22 2 -1.</_>\n        <_>\n          2 9 11 1 2.</_>\n        <_>\n          13 10 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 9 19 3 -1.</_>\n        <_>\n          2 10 19 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 10 4 1 -1.</_>\n        <_>\n          4 10 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 10 22 2 -1.</_>\n        <_>\n          2 10 11 1 2.</_>\n        <_>\n          13 11 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 10 22 14 -1.</_>\n        <_>\n          13 10 11 14 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 10 20 12 -1.</_>\n        <_>\n          2 16 20 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 11 3 5 -1.</_>\n        <_>\n          3 11 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 11 20 2 -1.</_>\n        <_>\n          2 11 10 1 2.</_>\n        <_>\n          12 12 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 11 22 2 -1.</_>\n        <_>\n          2 11 11 1 2.</_>\n        <_>\n          13 12 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 12 3 5 -1.</_>\n        <_>\n          3 12 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 12 3 9 -1.</_>\n        <_>\n          3 12 1 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 12 3 11 -1.</_>\n        <_>\n          3 12 1 11 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 14 3 3 -1.</_>\n        <_>\n          3 14 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 14 8 8 -1.</_>\n        <_>\n          2 14 4 4 2.</_>\n        <_>\n          6 18 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 17 3 5 -1.</_>\n        <_>\n          3 17 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 17 3 6 -1.</_>\n        <_>\n          3 17 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 17 21 4 -1.</_>\n        <_>\n          9 17 7 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 18 3 5 -1.</_>\n        <_>\n          3 18 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 18 10 4 -1.</_>\n        <_>\n          7 18 5 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 20 6 2 -1.</_>\n        <_>\n          5 20 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 21 12 2 -1.</_>\n        <_>\n          8 21 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 0 3 5 -1.</_>\n        <_>\n          4 0 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 0 9 22 -1.</_>\n        <_>\n          6 0 3 22 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 0 12 4 -1.</_>\n        <_>\n          3 0 6 2 2.</_>\n        <_>\n          9 2 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 1 3 3 -1.</_>\n        <_>\n          4 1 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 1 3 20 -1.</_>\n        <_>\n          4 1 1 20 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 1 6 20 -1.</_>\n        <_>\n          5 1 2 20 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 2 3 3 -1.</_>\n        <_>\n          4 2 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 3 3 3 -1.</_>\n        <_>\n          4 3 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 3 3 9 -1.</_>\n        <_>\n          3 6 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 3 20 19 -1.</_>\n        <_>\n          13 3 10 19 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 3 19 4 -1.</_>\n        <_>\n          3 5 19 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 4 1 3 -1.</_>\n        <_>\n          3 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 4 6 3 -1.</_>\n        <_>\n          5 4 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 4 18 2 -1.</_>\n        <_>\n          3 4 9 1 2.</_>\n        <_>\n          12 5 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 4 16 6 -1.</_>\n        <_>\n          3 6 16 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 3 1 -1.</_>\n        <_>\n          4 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 3 2 -1.</_>\n        <_>\n          4 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 2 3 -1.</_>\n        <_>\n          3 6 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 10 3 -1.</_>\n        <_>\n          8 5 5 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 18 3 -1.</_>\n        <_>\n          9 5 6 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 18 2 -1.</_>\n        <_>\n          3 5 9 1 2.</_>\n        <_>\n          12 6 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 2 1 -1.</_>\n        <_>\n          4 6 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 1 3 -1.</_>\n        <_>\n          3 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 3 3 -1.</_>\n        <_>\n          3 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 6 6 -1.</_>\n        <_>\n          3 8 6 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 18 2 -1.</_>\n        <_>\n          3 6 9 1 2.</_>\n        <_>\n          12 7 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 17 6 -1.</_>\n        <_>\n          3 8 17 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 3 1 -1.</_>\n        <_>\n          4 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 4 2 -1.</_>\n        <_>\n          3 8 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 6 6 -1.</_>\n        <_>\n          3 9 6 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 18 4 -1.</_>\n        <_>\n          3 7 9 2 2.</_>\n        <_>\n          12 9 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 20 11 -1.</_>\n        <_>\n          13 7 10 11 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 17 6 -1.</_>\n        <_>\n          3 9 17 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 3 1 -1.</_>\n        <_>\n          4 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 3 2 -1.</_>\n        <_>\n          4 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 9 2 -1.</_>\n        <_>\n          6 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 18 2 -1.</_>\n        <_>\n          3 9 9 1 2.</_>\n        <_>\n          12 10 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 3 1 -1.</_>\n        <_>\n          4 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 3 13 -1.</_>\n        <_>\n          4 10 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 6 2 -1.</_>\n        <_>\n          3 11 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 2 -1.</_>\n        <_>\n          4 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 3 -1.</_>\n        <_>\n          4 11 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 5 -1.</_>\n        <_>\n          4 11 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 13 -1.</_>\n        <_>\n          4 11 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 6 2 -1.</_>\n        <_>\n          3 11 3 1 2.</_>\n        <_>\n          6 12 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 4 -1.</_>\n        <_>\n          3 13 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 4 8 -1.</_>\n        <_>\n          3 15 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 3 3 -1.</_>\n        <_>\n          4 12 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 3 6 -1.</_>\n        <_>\n          3 15 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 9 7 -1.</_>\n        <_>\n          6 12 3 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 4 8 -1.</_>\n        <_>\n          3 16 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 8 8 -1.</_>\n        <_>\n          3 16 8 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 19 6 -1.</_>\n        <_>\n          3 15 19 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 13 18 2 -1.</_>\n        <_>\n          3 13 9 1 2.</_>\n        <_>\n          12 14 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 15 4 2 -1.</_>\n        <_>\n          5 15 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 15 4 3 -1.</_>\n        <_>\n          5 15 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 15 6 2 -1.</_>\n        <_>\n          6 15 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 16 8 8 -1.</_>\n        <_>\n          3 16 4 4 2.</_>\n        <_>\n          7 20 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 20 3 4 -1.</_>\n        <_>\n          4 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 1 3 8 -1.</_>\n        <_>\n          5 1 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 1 3 12 -1.</_>\n        <_>\n          4 5 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 1 15 10 -1.</_>\n        <_>\n          4 6 15 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 2 3 3 -1.</_>\n        <_>\n          5 2 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 2 6 5 -1.</_>\n        <_>\n          6 2 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 2 16 2 -1.</_>\n        <_>\n          4 2 8 1 2.</_>\n        <_>\n          12 3 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 3 2 -1.</_>\n        <_>\n          5 3 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 6 1 -1.</_>\n        <_>\n          6 3 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 6 5 -1.</_>\n        <_>\n          6 3 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 9 3 -1.</_>\n        <_>\n          7 3 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 16 2 -1.</_>\n        <_>\n          4 3 8 1 2.</_>\n        <_>\n          12 4 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 16 8 -1.</_>\n        <_>\n          4 3 8 4 2.</_>\n        <_>\n          12 7 8 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 17 8 -1.</_>\n        <_>\n          4 7 17 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 1 4 -1.</_>\n        <_>\n          4 6 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 16 2 -1.</_>\n        <_>\n          4 4 8 1 2.</_>\n        <_>\n          12 5 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 16 10 -1.</_>\n        <_>\n          4 4 8 5 2.</_>\n        <_>\n          12 9 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 20 6 -1.</_>\n        <_>\n          4 6 20 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 5 16 2 -1.</_>\n        <_>\n          4 5 8 1 2.</_>\n        <_>\n          12 6 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 5 16 9 -1.</_>\n        <_>\n          4 8 16 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 2 2 -1.</_>\n        <_>\n          4 6 1 1 2.</_>\n        <_>\n          5 7 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 2 2 -1.</_>\n        <_>\n          4 7 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 6 1 -1.</_>\n        <_>\n          6 6 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 2 3 -1.</_>\n        <_>\n          4 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 3 3 -1.</_>\n        <_>\n          4 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 16 2 -1.</_>\n        <_>\n          4 6 8 1 2.</_>\n        <_>\n          12 7 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 15 6 -1.</_>\n        <_>\n          4 8 15 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 2 3 -1.</_>\n        <_>\n          4 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 4 3 -1.</_>\n        <_>\n          6 7 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 4 3 -1.</_>\n        <_>\n          4 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 5 3 -1.</_>\n        <_>\n          4 8 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 5 6 -1.</_>\n        <_>\n          4 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 7 3 -1.</_>\n        <_>\n          4 8 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 18 2 -1.</_>\n        <_>\n          4 7 9 1 2.</_>\n        <_>\n          13 8 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 18 4 -1.</_>\n        <_>\n          4 7 9 2 2.</_>\n        <_>\n          13 9 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 16 3 -1.</_>\n        <_>\n          4 8 16 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 16 6 -1.</_>\n        <_>\n          4 9 16 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 17 2 -1.</_>\n        <_>\n          4 8 17 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 17 3 -1.</_>\n        <_>\n          4 8 17 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 17 6 -1.</_>\n        <_>\n          4 9 17 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 2 2 -1.</_>\n        <_>\n          4 8 1 1 2.</_>\n        <_>\n          5 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 16 2 -1.</_>\n        <_>\n          4 8 8 1 2.</_>\n        <_>\n          12 9 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 18 4 -1.</_>\n        <_>\n          4 8 9 2 2.</_>\n        <_>\n          13 10 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 1 -1.</_>\n        <_>\n          5 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 3 1 -1.</_>\n        <_>\n          5 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 2 -1.</_>\n        <_>\n          4 9 1 1 2.</_>\n        <_>\n          5 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 2 -1.</_>\n        <_>\n          5 9 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 6 1 -1.</_>\n        <_>\n          6 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 9 -1.</_>\n        <_>\n          4 12 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 15 1 -1.</_>\n        <_>\n          9 9 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 5 3 -1.</_>\n        <_>\n          4 10 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 15 2 -1.</_>\n        <_>\n          9 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 15 3 -1.</_>\n        <_>\n          9 9 5 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 16 2 -1.</_>\n        <_>\n          4 9 8 1 2.</_>\n        <_>\n          12 10 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 16 6 -1.</_>\n        <_>\n          4 9 8 3 2.</_>\n        <_>\n          12 12 8 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 18 2 -1.</_>\n        <_>\n          4 9 9 1 2.</_>\n        <_>\n          13 10 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 20 2 -1.</_>\n        <_>\n          4 9 10 1 2.</_>\n        <_>\n          14 10 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 17 9 -1.</_>\n        <_>\n          4 12 17 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 18 3 -1.</_>\n        <_>\n          4 10 18 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 2 1 -1.</_>\n        <_>\n          5 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 3 1 -1.</_>\n        <_>\n          5 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 2 2 -1.</_>\n        <_>\n          4 10 1 1 2.</_>\n        <_>\n          5 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 6 3 -1.</_>\n        <_>\n          7 10 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 18 2 -1.</_>\n        <_>\n          4 10 9 1 2.</_>\n        <_>\n          13 11 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 17 6 -1.</_>\n        <_>\n          4 12 17 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 2 -1.</_>\n        <_>\n          5 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 3 -1.</_>\n        <_>\n          5 11 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 1 8 -1.</_>\n        <_>\n          4 15 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 6 -1.</_>\n        <_>\n          5 11 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 6 3 -1.</_>\n        <_>\n          6 11 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 15 2 -1.</_>\n        <_>\n          4 12 15 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 3 1 -1.</_>\n        <_>\n          5 12 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 4 4 -1.</_>\n        <_>\n          6 12 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 3 8 -1.</_>\n        <_>\n          4 16 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 17 12 -1.</_>\n        <_>\n          4 16 17 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 13 3 1 -1.</_>\n        <_>\n          5 13 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 13 3 9 -1.</_>\n        <_>\n          4 16 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 14 4 2 -1.</_>\n        <_>\n          6 14 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 4 2 -1.</_>\n        <_>\n          6 15 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 9 4 -1.</_>\n        <_>\n          7 15 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 16 4 -1.</_>\n        <_>\n          4 15 8 2 2.</_>\n        <_>\n          12 17 8 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 18 3 5 -1.</_>\n        <_>\n          5 18 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 18 3 6 -1.</_>\n        <_>\n          5 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 18 15 5 -1.</_>\n        <_>\n          9 18 5 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 18 9 6 -1.</_>\n        <_>\n          4 21 9 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 1 14 2 -1.</_>\n        <_>\n          5 1 7 1 2.</_>\n        <_>\n          12 2 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 1 11 8 -1.</_>\n        <_>\n          5 5 11 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 3 3 -1.</_>\n        <_>\n          6 2 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 6 2 -1.</_>\n        <_>\n          7 2 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 14 2 -1.</_>\n        <_>\n          5 2 7 1 2.</_>\n        <_>\n          12 3 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 14 8 -1.</_>\n        <_>\n          5 6 14 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 16 10 -1.</_>\n        <_>\n          5 7 16 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 6 1 -1.</_>\n        <_>\n          7 3 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 6 2 -1.</_>\n        <_>\n          7 3 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 4 10 -1.</_>\n        <_>\n          5 3 2 5 2.</_>\n        <_>\n          7 8 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 9 12 -1.</_>\n        <_>\n          8 3 3 12 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 14 2 -1.</_>\n        <_>\n          5 3 7 1 2.</_>\n        <_>\n          12 4 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 15 8 -1.</_>\n        <_>\n          5 7 15 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 2 4 -1.</_>\n        <_>\n          5 4 1 2 2.</_>\n        <_>\n          6 6 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 6 4 -1.</_>\n        <_>\n          7 4 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 4 12 -1.</_>\n        <_>\n          7 4 2 12 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 12 8 -1.</_>\n        <_>\n          9 4 4 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 14 2 -1.</_>\n        <_>\n          5 4 7 1 2.</_>\n        <_>\n          12 5 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 2 2 -1.</_>\n        <_>\n          5 5 1 1 2.</_>\n        <_>\n          6 6 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 2 4 -1.</_>\n        <_>\n          5 5 1 2 2.</_>\n        <_>\n          6 7 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 6 6 -1.</_>\n        <_>\n          5 7 6 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 14 2 -1.</_>\n        <_>\n          5 5 7 1 2.</_>\n        <_>\n          12 6 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 16 2 -1.</_>\n        <_>\n          5 5 8 1 2.</_>\n        <_>\n          13 6 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 13 6 -1.</_>\n        <_>\n          5 7 13 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 14 6 -1.</_>\n        <_>\n          5 7 14 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 15 6 -1.</_>\n        <_>\n          5 7 15 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 15 9 -1.</_>\n        <_>\n          5 8 15 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 1 2 -1.</_>\n        <_>\n          5 7 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 2 4 -1.</_>\n        <_>\n          5 6 1 2 2.</_>\n        <_>\n          6 8 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 6 1 -1.</_>\n        <_>\n          7 6 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 4 3 -1.</_>\n        <_>\n          5 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 14 2 -1.</_>\n        <_>\n          5 6 7 1 2.</_>\n        <_>\n          12 7 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 2 2 -1.</_>\n        <_>\n          6 7 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 2 6 -1.</_>\n        <_>\n          5 7 1 3 2.</_>\n        <_>\n          6 10 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 1 -1.</_>\n        <_>\n          7 7 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 6 5 -1.</_>\n        <_>\n          7 7 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 2 -1.</_>\n        <_>\n          5 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 3 -1.</_>\n        <_>\n          5 8 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 6 -1.</_>\n        <_>\n          5 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 3 -1.</_>\n        <_>\n          5 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 6 -1.</_>\n        <_>\n          5 9 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 5 6 -1.</_>\n        <_>\n          5 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 14 4 -1.</_>\n        <_>\n          5 7 7 2 2.</_>\n        <_>\n          12 9 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 14 2 -1.</_>\n        <_>\n          5 8 14 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 14 4 -1.</_>\n        <_>\n          5 9 14 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 15 2 -1.</_>\n        <_>\n          5 8 15 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 15 6 -1.</_>\n        <_>\n          5 9 15 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 1 3 -1.</_>\n        <_>\n          5 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 2 2 -1.</_>\n        <_>\n          5 8 1 1 2.</_>\n        <_>\n          6 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 4 5 -1.</_>\n        <_>\n          7 8 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 12 4 -1.</_>\n        <_>\n          9 8 4 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 15 3 -1.</_>\n        <_>\n          10 8 5 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 14 4 -1.</_>\n        <_>\n          5 8 7 2 2.</_>\n        <_>\n          12 10 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 4 4 -1.</_>\n        <_>\n          7 9 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 4 3 -1.</_>\n        <_>\n          5 10 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 8 8 -1.</_>\n        <_>\n          5 9 4 4 2.</_>\n        <_>\n          9 13 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 15 2 -1.</_>\n        <_>\n          10 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 14 2 -1.</_>\n        <_>\n          5 9 7 1 2.</_>\n        <_>\n          12 10 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 14 12 -1.</_>\n        <_>\n          5 9 7 6 2.</_>\n        <_>\n          12 15 7 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 18 2 -1.</_>\n        <_>\n          5 9 9 1 2.</_>\n        <_>\n          14 10 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 13 3 -1.</_>\n        <_>\n          5 10 13 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 15 6 -1.</_>\n        <_>\n          5 12 15 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 2 2 -1.</_>\n        <_>\n          5 10 1 1 2.</_>\n        <_>\n          6 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 3 3 -1.</_>\n        <_>\n          6 10 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 11 3 2 -1.</_>\n        <_>\n          6 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 11 3 3 -1.</_>\n        <_>\n          6 11 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 11 3 13 -1.</_>\n        <_>\n          6 11 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 11 14 2 -1.</_>\n        <_>\n          5 12 14 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 12 1 6 -1.</_>\n        <_>\n          5 15 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 13 15 8 -1.</_>\n        <_>\n          5 17 15 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 14 3 3 -1.</_>\n        <_>\n          5 15 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 15 2 2 -1.</_>\n        <_>\n          6 15 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 19 3 5 -1.</_>\n        <_>\n          6 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 21 3 3 -1.</_>\n        <_>\n          6 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 0 1 6 -1.</_>\n        <_>\n          6 3 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 0 11 10 -1.</_>\n        <_>\n          6 5 11 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 1 6 12 -1.</_>\n        <_>\n          8 1 2 12 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 3 6 -1.</_>\n        <_>\n          7 2 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 6 2 -1.</_>\n        <_>\n          8 2 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 6 10 -1.</_>\n        <_>\n          8 2 2 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 12 4 -1.</_>\n        <_>\n          6 4 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 3 6 4 -1.</_>\n        <_>\n          8 3 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 3 9 1 -1.</_>\n        <_>\n          9 3 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 4 3 3 -1.</_>\n        <_>\n          7 4 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 4 6 4 -1.</_>\n        <_>\n          8 4 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 3 2 -1.</_>\n        <_>\n          7 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 3 3 -1.</_>\n        <_>\n          7 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 2 9 -1.</_>\n        <_>\n          6 8 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 12 2 -1.</_>\n        <_>\n          6 5 6 1 2.</_>\n        <_>\n          12 6 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 6 4 1 -1.</_>\n        <_>\n          8 6 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 6 12 2 -1.</_>\n        <_>\n          6 6 6 1 2.</_>\n        <_>\n          12 7 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 1 6 -1.</_>\n        <_>\n          6 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 2 2 -1.</_>\n        <_>\n          6 8 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 2 3 -1.</_>\n        <_>\n          6 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 2 6 -1.</_>\n        <_>\n          6 9 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 3 6 -1.</_>\n        <_>\n          6 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 12 2 -1.</_>\n        <_>\n          6 7 6 1 2.</_>\n        <_>\n          12 8 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 8 12 -1.</_>\n        <_>\n          6 13 8 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 12 15 -1.</_>\n        <_>\n          6 12 12 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 2 6 -1.</_>\n        <_>\n          6 11 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 3 2 -1.</_>\n        <_>\n          6 9 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 12 3 -1.</_>\n        <_>\n          10 8 4 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 12 2 -1.</_>\n        <_>\n          6 8 6 1 2.</_>\n        <_>\n          12 9 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 2 2 -1.</_>\n        <_>\n          6 10 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 2 3 -1.</_>\n        <_>\n          6 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 6 1 -1.</_>\n        <_>\n          9 9 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 3 3 -1.</_>\n        <_>\n          6 10 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 2 -1.</_>\n        <_>\n          6 9 6 1 2.</_>\n        <_>\n          12 10 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 13 12 -1.</_>\n        <_>\n          6 13 13 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 1 3 -1.</_>\n        <_>\n          6 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 2 -1.</_>\n        <_>\n          7 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 3 -1.</_>\n        <_>\n          7 10 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 3 14 -1.</_>\n        <_>\n          7 10 1 14 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 3 -1.</_>\n        <_>\n          6 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 6 3 -1.</_>\n        <_>\n          8 10 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 3 3 -1.</_>\n        <_>\n          6 11 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 9 5 -1.</_>\n        <_>\n          9 10 3 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 12 1 -1.</_>\n        <_>\n          10 10 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 8 4 -1.</_>\n        <_>\n          6 10 4 2 2.</_>\n        <_>\n          10 12 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 12 2 -1.</_>\n        <_>\n          6 10 6 1 2.</_>\n        <_>\n          12 11 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 12 12 -1.</_>\n        <_>\n          6 10 6 6 2.</_>\n        <_>\n          12 16 6 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 18 1 -1.</_>\n        <_>\n          15 10 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 13 3 -1.</_>\n        <_>\n          6 11 13 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 2 2 -1.</_>\n        <_>\n          6 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 2 3 -1.</_>\n        <_>\n          6 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 3 2 -1.</_>\n        <_>\n          6 12 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 3 3 -1.</_>\n        <_>\n          6 12 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 12 3 -1.</_>\n        <_>\n          6 12 12 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 13 3 -1.</_>\n        <_>\n          6 12 13 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 12 14 2 -1.</_>\n        <_>\n          6 12 7 1 2.</_>\n        <_>\n          13 13 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 12 13 2 -1.</_>\n        <_>\n          6 13 13 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 14 1 3 -1.</_>\n        <_>\n          6 15 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 14 2 2 -1.</_>\n        <_>\n          7 14 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 15 2 3 -1.</_>\n        <_>\n          6 16 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 17 10 6 -1.</_>\n        <_>\n          6 20 10 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 18 3 6 -1.</_>\n        <_>\n          7 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 19 3 5 -1.</_>\n        <_>\n          7 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 20 9 4 -1.</_>\n        <_>\n          6 22 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 23 3 1 -1.</_>\n        <_>\n          7 23 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 0 2 8 -1.</_>\n        <_>\n          7 0 1 4 2.</_>\n        <_>\n          8 4 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 0 10 1 -1.</_>\n        <_>\n          12 0 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 1 2 4 -1.</_>\n        <_>\n          7 3 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 1 10 1 -1.</_>\n        <_>\n          12 1 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 2 4 21 -1.</_>\n        <_>\n          9 2 2 21 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 3 1 3 -1.</_>\n        <_>\n          7 4 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 3 3 5 -1.</_>\n        <_>\n          8 3 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 4 3 10 -1.</_>\n        <_>\n          8 4 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 2 2 -1.</_>\n        <_>\n          8 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 3 2 -1.</_>\n        <_>\n          8 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 3 3 -1.</_>\n        <_>\n          8 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 3 6 -1.</_>\n        <_>\n          8 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 2 7 -1.</_>\n        <_>\n          8 5 1 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 2 6 -1.</_>\n        <_>\n          7 7 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 11 6 -1.</_>\n        <_>\n          7 7 11 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 3 1 -1.</_>\n        <_>\n          8 6 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 1 3 -1.</_>\n        <_>\n          7 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 4 6 -1.</_>\n        <_>\n          9 6 2 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 10 2 -1.</_>\n        <_>\n          7 6 5 1 2.</_>\n        <_>\n          12 7 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 12 2 -1.</_>\n        <_>\n          7 6 6 1 2.</_>\n        <_>\n          13 7 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 1 2 -1.</_>\n        <_>\n          7 8 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 1 3 -1.</_>\n        <_>\n          7 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 1 6 -1.</_>\n        <_>\n          7 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 2 4 -1.</_>\n        <_>\n          7 9 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 10 2 -1.</_>\n        <_>\n          7 7 5 1 2.</_>\n        <_>\n          12 8 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 1 3 -1.</_>\n        <_>\n          7 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 2 2 -1.</_>\n        <_>\n          7 8 1 1 2.</_>\n        <_>\n          8 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 2 4 -1.</_>\n        <_>\n          7 8 1 2 2.</_>\n        <_>\n          8 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 10 2 -1.</_>\n        <_>\n          7 8 5 1 2.</_>\n        <_>\n          12 9 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 1 2 -1.</_>\n        <_>\n          7 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 1 3 -1.</_>\n        <_>\n          7 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 3 3 -1.</_>\n        <_>\n          8 9 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 4 6 -1.</_>\n        <_>\n          7 9 2 3 2.</_>\n        <_>\n          9 12 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 6 10 -1.</_>\n        <_>\n          7 9 3 5 2.</_>\n        <_>\n          10 14 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 12 2 -1.</_>\n        <_>\n          11 9 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 10 2 -1.</_>\n        <_>\n          7 9 5 1 2.</_>\n        <_>\n          12 10 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 12 2 -1.</_>\n        <_>\n          7 9 6 1 2.</_>\n        <_>\n          13 10 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 3 1 -1.</_>\n        <_>\n          8 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 1 3 -1.</_>\n        <_>\n          7 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 2 3 -1.</_>\n        <_>\n          7 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 6 4 -1.</_>\n        <_>\n          9 10 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 10 2 -1.</_>\n        <_>\n          7 10 5 1 2.</_>\n        <_>\n          12 11 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 11 2 1 -1.</_>\n        <_>\n          8 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 11 2 2 -1.</_>\n        <_>\n          7 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 11 6 4 -1.</_>\n        <_>\n          9 11 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 14 1 3 -1.</_>\n        <_>\n          7 15 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 16 10 8 -1.</_>\n        <_>\n          7 20 10 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 18 3 6 -1.</_>\n        <_>\n          8 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 18 9 6 -1.</_>\n        <_>\n          7 20 9 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 19 3 3 -1.</_>\n        <_>\n          8 19 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 3 4 -1.</_>\n        <_>\n          8 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 7 4 -1.</_>\n        <_>\n          7 22 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 11 4 -1.</_>\n        <_>\n          7 22 11 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 22 3 2 -1.</_>\n        <_>\n          8 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 8 2 -1.</_>\n        <_>\n          12 0 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 8 2 -1.</_>\n        <_>\n          8 1 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 8 10 -1.</_>\n        <_>\n          8 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 16 10 -1.</_>\n        <_>\n          8 0 8 5 2.</_>\n        <_>\n          16 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 10 3 -1.</_>\n        <_>\n          8 1 10 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 1 8 1 -1.</_>\n        <_>\n          12 1 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 2 3 2 -1.</_>\n        <_>\n          9 2 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 2 8 20 -1.</_>\n        <_>\n          12 2 4 20 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 3 3 8 -1.</_>\n        <_>\n          9 3 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 3 3 9 -1.</_>\n        <_>\n          9 3 1 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 3 6 1 -1.</_>\n        <_>\n          11 3 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 3 4 3 -1.</_>\n        <_>\n          8 4 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 3 8 2 -1.</_>\n        <_>\n          8 3 4 1 2.</_>\n        <_>\n          12 4 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 3 2 -1.</_>\n        <_>\n          9 4 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 2 8 -1.</_>\n        <_>\n          9 4 1 8 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 3 3 -1.</_>\n        <_>\n          8 5 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 8 2 -1.</_>\n        <_>\n          8 4 4 1 2.</_>\n        <_>\n          12 5 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 7 15 -1.</_>\n        <_>\n          8 9 7 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 2 -1.</_>\n        <_>\n          9 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 2 3 -1.</_>\n        <_>\n          9 5 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 5 -1.</_>\n        <_>\n          9 5 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 2 6 -1.</_>\n        <_>\n          9 5 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 7 -1.</_>\n        <_>\n          9 5 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 4 3 -1.</_>\n        <_>\n          8 6 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 8 12 -1.</_>\n        <_>\n          12 5 4 12 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 8 19 -1.</_>\n        <_>\n          12 5 4 19 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 3 5 -1.</_>\n        <_>\n          9 6 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 10 2 -1.</_>\n        <_>\n          8 6 5 1 2.</_>\n        <_>\n          13 7 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 8 2 2 -1.</_>\n        <_>\n          8 8 1 1 2.</_>\n        <_>\n          9 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 8 1 6 -1.</_>\n        <_>\n          8 10 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 8 3 3 -1.</_>\n        <_>\n          8 9 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 9 1 3 -1.</_>\n        <_>\n          8 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 9 3 2 -1.</_>\n        <_>\n          9 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 9 2 6 -1.</_>\n        <_>\n          8 9 1 3 2.</_>\n        <_>\n          9 12 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 2 1 -1.</_>\n        <_>\n          9 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 3 1 -1.</_>\n        <_>\n          9 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 2 2 -1.</_>\n        <_>\n          8 10 1 1 2.</_>\n        <_>\n          9 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 2 2 -1.</_>\n        <_>\n          9 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 3 2 -1.</_>\n        <_>\n          9 10 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 4 8 -1.</_>\n        <_>\n          8 10 2 4 2.</_>\n        <_>\n          10 14 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 8 2 -1.</_>\n        <_>\n          8 10 4 1 2.</_>\n        <_>\n          12 11 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 11 2 2 -1.</_>\n        <_>\n          8 11 1 1 2.</_>\n        <_>\n          9 12 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 11 4 8 -1.</_>\n        <_>\n          8 11 2 4 2.</_>\n        <_>\n          10 15 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 11 4 10 -1.</_>\n        <_>\n          8 11 2 5 2.</_>\n        <_>\n          10 16 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 13 9 10 -1.</_>\n        <_>\n          8 18 9 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 15 4 4 -1.</_>\n        <_>\n          10 15 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 16 9 3 -1.</_>\n        <_>\n          11 16 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 19 3 5 -1.</_>\n        <_>\n          9 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 20 3 3 -1.</_>\n        <_>\n          9 20 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 1 2 -1.</_>\n        <_>\n          9 1 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 2 4 -1.</_>\n        <_>\n          10 0 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 6 1 -1.</_>\n        <_>\n          12 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 5 4 -1.</_>\n        <_>\n          9 2 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 6 10 -1.</_>\n        <_>\n          9 5 6 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 14 8 -1.</_>\n        <_>\n          9 0 7 4 2.</_>\n        <_>\n          16 4 7 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 7 10 -1.</_>\n        <_>\n          9 5 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 14 10 -1.</_>\n        <_>\n          9 0 7 5 2.</_>\n        <_>\n          16 5 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 14 12 -1.</_>\n        <_>\n          9 0 7 6 2.</_>\n        <_>\n          16 6 7 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 1 3 12 -1.</_>\n        <_>\n          10 1 1 12 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 1 4 15 -1.</_>\n        <_>\n          11 1 2 15 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 1 6 1 -1.</_>\n        <_>\n          12 1 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 2 2 -1.</_>\n        <_>\n          10 2 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 6 18 -1.</_>\n        <_>\n          12 2 3 18 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 15 3 -1.</_>\n        <_>\n          9 3 15 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 3 9 -1.</_>\n        <_>\n          10 3 1 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 8 6 -1.</_>\n        <_>\n          9 6 8 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 15 15 -1.</_>\n        <_>\n          9 8 15 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 4 3 4 -1.</_>\n        <_>\n          10 4 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 4 6 2 -1.</_>\n        <_>\n          9 4 3 1 2.</_>\n        <_>\n          12 5 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 4 14 5 -1.</_>\n        <_>\n          16 4 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 2 5 -1.</_>\n        <_>\n          10 5 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 3 6 -1.</_>\n        <_>\n          10 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 4 15 -1.</_>\n        <_>\n          11 5 2 15 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 3 3 -1.</_>\n        <_>\n          9 6 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 4 3 -1.</_>\n        <_>\n          9 6 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 4 4 -1.</_>\n        <_>\n          11 6 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 3 3 -1.</_>\n        <_>\n          9 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 6 7 -1.</_>\n        <_>\n          12 6 3 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 4 3 -1.</_>\n        <_>\n          9 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 15 10 -1.</_>\n        <_>\n          9 11 15 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 7 6 2 -1.</_>\n        <_>\n          9 7 3 1 2.</_>\n        <_>\n          12 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 8 3 3 -1.</_>\n        <_>\n          9 9 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 8 7 10 -1.</_>\n        <_>\n          9 13 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 2 2 -1.</_>\n        <_>\n          10 9 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 3 3 -1.</_>\n        <_>\n          9 10 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 9 6 -1.</_>\n        <_>\n          12 9 3 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 2 4 -1.</_>\n        <_>\n          9 10 1 2 2.</_>\n        <_>\n          10 12 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 6 2 -1.</_>\n        <_>\n          9 10 3 1 2.</_>\n        <_>\n          12 11 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 8 1 -1.</_>\n        <_>\n          13 10 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 15 3 -1.</_>\n        <_>\n          9 11 15 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 11 2 4 -1.</_>\n        <_>\n          9 11 1 2 2.</_>\n        <_>\n          10 13 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 11 2 6 -1.</_>\n        <_>\n          9 11 1 3 2.</_>\n        <_>\n          10 14 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 13 2 11 -1.</_>\n        <_>\n          10 13 1 11 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 14 6 3 -1.</_>\n        <_>\n          11 14 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 16 4 3 -1.</_>\n        <_>\n          11 16 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 16 6 4 -1.</_>\n        <_>\n          11 16 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 16 6 8 -1.</_>\n        <_>\n          11 16 2 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 16 6 3 -1.</_>\n        <_>\n          9 17 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 17 6 2 -1.</_>\n        <_>\n          11 17 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 17 6 7 -1.</_>\n        <_>\n          11 17 2 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 18 5 3 -1.</_>\n        <_>\n          9 19 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 19 3 5 -1.</_>\n        <_>\n          10 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 19 7 3 -1.</_>\n        <_>\n          9 20 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 3 4 -1.</_>\n        <_>\n          10 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 3 2 -1.</_>\n        <_>\n          9 21 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 5 3 -1.</_>\n        <_>\n          9 21 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 6 3 -1.</_>\n        <_>\n          9 21 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 6 4 -1.</_>\n        <_>\n          9 22 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 7 3 -1.</_>\n        <_>\n          9 21 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 8 4 -1.</_>\n        <_>\n          9 22 8 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 21 3 2 -1.</_>\n        <_>\n          10 21 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 22 3 2 -1.</_>\n        <_>\n          10 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 1 6 -1.</_>\n        <_>\n          10 3 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 6 1 -1.</_>\n        <_>\n          13 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 4 8 -1.</_>\n        <_>\n          10 4 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 14 10 -1.</_>\n        <_>\n          10 0 7 5 2.</_>\n        <_>\n          17 5 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 1 4 2 -1.</_>\n        <_>\n          10 1 2 1 2.</_>\n        <_>\n          12 2 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 2 1 6 -1.</_>\n        <_>\n          10 5 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 3 6 1 -1.</_>\n        <_>\n          13 3 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 3 9 1 -1.</_>\n        <_>\n          13 3 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 3 3 3 -1.</_>\n        <_>\n          10 4 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 4 3 3 -1.</_>\n        <_>\n          11 4 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 4 2 8 -1.</_>\n        <_>\n          11 4 1 8 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 5 3 3 -1.</_>\n        <_>\n          11 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 5 4 11 -1.</_>\n        <_>\n          12 5 2 11 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 6 6 3 -1.</_>\n        <_>\n          10 7 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 7 2 3 -1.</_>\n        <_>\n          10 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 7 4 7 -1.</_>\n        <_>\n          12 7 2 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 7 9 6 -1.</_>\n        <_>\n          13 7 3 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 7 4 3 -1.</_>\n        <_>\n          10 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 8 2 3 -1.</_>\n        <_>\n          10 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 8 4 2 -1.</_>\n        <_>\n          10 9 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 8 8 10 -1.</_>\n        <_>\n          10 13 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 1 3 -1.</_>\n        <_>\n          10 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 2 3 -1.</_>\n        <_>\n          10 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 6 4 -1.</_>\n        <_>\n          13 9 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 10 14 3 -1.</_>\n        <_>\n          10 11 14 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 11 1 3 -1.</_>\n        <_>\n          10 12 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 11 4 3 -1.</_>\n        <_>\n          10 12 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 12 1 3 -1.</_>\n        <_>\n          10 13 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 12 2 8 -1.</_>\n        <_>\n          10 12 1 4 2.</_>\n        <_>\n          11 16 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 15 4 3 -1.</_>\n        <_>\n          10 16 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 15 6 6 -1.</_>\n        <_>\n          10 17 6 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 16 6 8 -1.</_>\n        <_>\n          10 16 3 4 2.</_>\n        <_>\n          13 20 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 16 4 2 -1.</_>\n        <_>\n          10 17 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 16 4 3 -1.</_>\n        <_>\n          10 17 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 17 4 3 -1.</_>\n        <_>\n          10 18 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 17 5 3 -1.</_>\n        <_>\n          10 18 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 18 5 3 -1.</_>\n        <_>\n          10 19 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 19 5 3 -1.</_>\n        <_>\n          10 20 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 3 3 -1.</_>\n        <_>\n          11 20 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 3 4 -1.</_>\n        <_>\n          11 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 4 3 -1.</_>\n        <_>\n          10 21 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 5 3 -1.</_>\n        <_>\n          10 21 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 21 3 1 -1.</_>\n        <_>\n          11 21 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 21 3 3 -1.</_>\n        <_>\n          11 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 21 6 3 -1.</_>\n        <_>\n          12 21 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 21 5 2 -1.</_>\n        <_>\n          10 22 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 22 3 1 -1.</_>\n        <_>\n          11 22 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 22 3 2 -1.</_>\n        <_>\n          11 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 0 2 12 -1.</_>\n        <_>\n          11 4 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 0 12 19 -1.</_>\n        <_>\n          15 0 4 19 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 2 4 20 -1.</_>\n        <_>\n          13 2 2 20 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 3 3 -1.</_>\n        <_>\n          12 3 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 3 5 -1.</_>\n        <_>\n          12 3 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 3 6 -1.</_>\n        <_>\n          12 3 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 3 7 -1.</_>\n        <_>\n          12 3 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 2 3 -1.</_>\n        <_>\n          11 4 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 12 14 -1.</_>\n        <_>\n          15 3 4 14 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 3 5 -1.</_>\n        <_>\n          12 4 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 2 3 -1.</_>\n        <_>\n          11 5 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 9 1 -1.</_>\n        <_>\n          14 4 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 3 3 -1.</_>\n        <_>\n          11 5 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 5 8 4 -1.</_>\n        <_>\n          11 7 8 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 6 2 3 -1.</_>\n        <_>\n          11 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 6 4 3 -1.</_>\n        <_>\n          11 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 1 3 -1.</_>\n        <_>\n          11 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 2 2 -1.</_>\n        <_>\n          11 7 1 1 2.</_>\n        <_>\n          12 8 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 2 3 -1.</_>\n        <_>\n          11 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 4 2 -1.</_>\n        <_>\n          11 7 2 1 2.</_>\n        <_>\n          13 8 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 4 3 -1.</_>\n        <_>\n          11 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 1 3 -1.</_>\n        <_>\n          11 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 1 10 -1.</_>\n        <_>\n          11 13 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 2 3 -1.</_>\n        <_>\n          11 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 3 3 -1.</_>\n        <_>\n          11 9 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 8 8 -1.</_>\n        <_>\n          11 8 4 4 2.</_>\n        <_>\n          15 12 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 7 10 -1.</_>\n        <_>\n          11 13 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 9 6 6 -1.</_>\n        <_>\n          13 9 2 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 9 4 3 -1.</_>\n        <_>\n          11 10 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 6 4 -1.</_>\n        <_>\n          13 10 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 6 8 -1.</_>\n        <_>\n          11 10 3 4 2.</_>\n        <_>\n          14 14 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 4 3 -1.</_>\n        <_>\n          11 11 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 5 3 -1.</_>\n        <_>\n          11 11 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 11 1 3 -1.</_>\n        <_>\n          11 12 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 11 10 10 -1.</_>\n        <_>\n          11 11 5 5 2.</_>\n        <_>\n          16 16 5 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 13 6 2 -1.</_>\n        <_>\n          13 13 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 14 2 9 -1.</_>\n        <_>\n          11 17 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 15 1 2 -1.</_>\n        <_>\n          11 16 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 20 3 4 -1.</_>\n        <_>\n          12 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 20 3 3 -1.</_>\n        <_>\n          11 21 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 21 2 1 -1.</_>\n        <_>\n          12 21 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 21 3 2 -1.</_>\n        <_>\n          12 21 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 21 2 3 -1.</_>\n        <_>\n          12 21 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 21 3 2 -1.</_>\n        <_>\n          11 22 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 23 3 1 -1.</_>\n        <_>\n          12 23 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 0 8 12 -1.</_>\n        <_>\n          12 0 4 6 2.</_>\n        <_>\n          16 6 4 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 0 12 6 -1.</_>\n        <_>\n          12 0 6 3 2.</_>\n        <_>\n          18 3 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 1 1 3 -1.</_>\n        <_>\n          12 2 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 1 2 7 -1.</_>\n        <_>\n          13 1 1 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 1 12 4 -1.</_>\n        <_>\n          12 1 6 2 2.</_>\n        <_>\n          18 3 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 2 3 3 -1.</_>\n        <_>\n          13 2 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 2 3 7 -1.</_>\n        <_>\n          13 2 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 2 6 1 -1.</_>\n        <_>\n          14 2 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 2 6 4 -1.</_>\n        <_>\n          14 2 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 2 6 18 -1.</_>\n        <_>\n          12 8 6 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 3 6 11 -1.</_>\n        <_>\n          14 3 2 11 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 3 9 3 -1.</_>\n        <_>\n          15 3 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 3 12 3 -1.</_>\n        <_>\n          12 4 12 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 4 2 12 -1.</_>\n        <_>\n          13 4 1 12 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 4 2 3 -1.</_>\n        <_>\n          12 5 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 5 3 5 -1.</_>\n        <_>\n          13 5 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 5 4 3 -1.</_>\n        <_>\n          12 6 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 6 1 3 -1.</_>\n        <_>\n          12 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 6 2 3 -1.</_>\n        <_>\n          12 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 6 8 4 -1.</_>\n        <_>\n          12 6 4 2 2.</_>\n        <_>\n          16 8 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 1 3 -1.</_>\n        <_>\n          12 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 2 3 -1.</_>\n        <_>\n          12 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 8 1 3 -1.</_>\n        <_>\n          12 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 8 3 3 -1.</_>\n        <_>\n          12 9 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 8 4 3 -1.</_>\n        <_>\n          12 9 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 9 1 3 -1.</_>\n        <_>\n          12 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 10 2 12 -1.</_>\n        <_>\n          12 10 1 6 2.</_>\n        <_>\n          13 16 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 10 4 10 -1.</_>\n        <_>\n          12 10 2 5 2.</_>\n        <_>\n          14 15 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 11 2 3 -1.</_>\n        <_>\n          12 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 11 4 4 -1.</_>\n        <_>\n          14 11 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 11 4 8 -1.</_>\n        <_>\n          12 11 2 4 2.</_>\n        <_>\n          14 15 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 15 6 5 -1.</_>\n        <_>\n          14 15 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 15 10 4 -1.</_>\n        <_>\n          12 15 5 2 2.</_>\n        <_>\n          17 17 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 16 4 3 -1.</_>\n        <_>\n          14 16 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 17 3 3 -1.</_>\n        <_>\n          13 17 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 17 8 6 -1.</_>\n        <_>\n          12 17 4 3 2.</_>\n        <_>\n          16 20 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 18 12 6 -1.</_>\n        <_>\n          12 18 6 3 2.</_>\n        <_>\n          18 21 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 21 3 3 -1.</_>\n        <_>\n          13 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 0 11 14 -1.</_>\n        <_>\n          13 7 11 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 2 2 3 -1.</_>\n        <_>\n          14 2 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 3 1 4 -1.</_>\n        <_>\n          13 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 3 3 3 -1.</_>\n        <_>\n          14 3 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 3 6 1 -1.</_>\n        <_>\n          15 3 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 4 1 2 -1.</_>\n        <_>\n          13 5 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 4 3 7 -1.</_>\n        <_>\n          14 4 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 4 3 8 -1.</_>\n        <_>\n          14 4 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 5 3 6 -1.</_>\n        <_>\n          14 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 6 1 3 -1.</_>\n        <_>\n          13 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 6 6 -1.</_>\n        <_>\n          15 7 2 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 3 3 -1.</_>\n        <_>\n          13 8 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 8 6 8 -1.</_>\n        <_>\n          15 8 2 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 3 4 -1.</_>\n        <_>\n          14 9 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 4 3 -1.</_>\n        <_>\n          15 9 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 6 4 -1.</_>\n        <_>\n          15 9 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 9 2 -1.</_>\n        <_>\n          16 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 9 2 -1.</_>\n        <_>\n          13 10 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 10 3 2 -1.</_>\n        <_>\n          14 10 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 10 4 1 -1.</_>\n        <_>\n          15 10 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 10 4 4 -1.</_>\n        <_>\n          13 10 2 2 2.</_>\n        <_>\n          15 12 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 11 2 3 -1.</_>\n        <_>\n          13 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 11 3 3 -1.</_>\n        <_>\n          13 12 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 12 3 3 -1.</_>\n        <_>\n          13 13 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 13 2 6 -1.</_>\n        <_>\n          13 13 1 3 2.</_>\n        <_>\n          14 16 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 15 2 5 -1.</_>\n        <_>\n          14 15 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 19 3 3 -1.</_>\n        <_>\n          14 19 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 20 3 3 -1.</_>\n        <_>\n          14 20 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 22 3 2 -1.</_>\n        <_>\n          14 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 1 10 -1.</_>\n        <_>\n          14 5 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 2 7 -1.</_>\n        <_>\n          15 0 1 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 2 22 -1.</_>\n        <_>\n          14 0 1 11 2.</_>\n        <_>\n          15 11 1 11 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 10 6 -1.</_>\n        <_>\n          14 0 5 3 2.</_>\n        <_>\n          19 3 5 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 10 8 -1.</_>\n        <_>\n          14 0 5 4 2.</_>\n        <_>\n          19 4 5 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 10 12 -1.</_>\n        <_>\n          14 0 5 6 2.</_>\n        <_>\n          19 6 5 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 1 2 2 -1.</_>\n        <_>\n          15 1 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 1 4 4 -1.</_>\n        <_>\n          14 3 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 1 10 2 -1.</_>\n        <_>\n          19 1 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 2 6 7 -1.</_>\n        <_>\n          16 2 2 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 3 2 4 -1.</_>\n        <_>\n          14 3 1 2 2.</_>\n        <_>\n          15 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 4 3 3 -1.</_>\n        <_>\n          15 4 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 4 6 1 -1.</_>\n        <_>\n          16 4 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 4 3 3 -1.</_>\n        <_>\n          14 5 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 3 2 -1.</_>\n        <_>\n          15 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 3 3 -1.</_>\n        <_>\n          15 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 4 2 -1.</_>\n        <_>\n          16 5 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 3 10 -1.</_>\n        <_>\n          14 10 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 4 6 -1.</_>\n        <_>\n          14 7 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 6 3 2 -1.</_>\n        <_>\n          15 6 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 6 3 4 -1.</_>\n        <_>\n          15 6 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 6 2 6 -1.</_>\n        <_>\n          15 6 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 6 6 2 -1.</_>\n        <_>\n          16 6 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 6 6 17 -1.</_>\n        <_>\n          16 6 2 17 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 8 2 13 -1.</_>\n        <_>\n          15 8 1 13 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 8 4 6 -1.</_>\n        <_>\n          14 10 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 2 2 -1.</_>\n        <_>\n          15 9 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 3 2 -1.</_>\n        <_>\n          15 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 2 4 -1.</_>\n        <_>\n          14 9 1 2 2.</_>\n        <_>\n          15 11 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 2 3 -1.</_>\n        <_>\n          15 9 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 4 1 -1.</_>\n        <_>\n          16 9 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 6 1 -1.</_>\n        <_>\n          16 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 9 9 -1.</_>\n        <_>\n          14 12 9 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 2 1 -1.</_>\n        <_>\n          15 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 3 1 -1.</_>\n        <_>\n          15 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 2 2 -1.</_>\n        <_>\n          14 10 1 1 2.</_>\n        <_>\n          15 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 2 2 -1.</_>\n        <_>\n          15 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 3 2 -1.</_>\n        <_>\n          15 10 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 3 3 -1.</_>\n        <_>\n          15 10 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 2 6 -1.</_>\n        <_>\n          14 10 1 3 2.</_>\n        <_>\n          15 13 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 12 6 2 -1.</_>\n        <_>\n          16 12 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 12 6 5 -1.</_>\n        <_>\n          16 12 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 14 8 6 -1.</_>\n        <_>\n          14 14 4 3 2.</_>\n        <_>\n          18 17 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 14 10 10 -1.</_>\n        <_>\n          14 14 5 5 2.</_>\n        <_>\n          19 19 5 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 16 10 8 -1.</_>\n        <_>\n          14 16 5 4 2.</_>\n        <_>\n          19 20 5 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 18 8 4 -1.</_>\n        <_>\n          14 18 4 2 2.</_>\n        <_>\n          18 20 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 19 3 4 -1.</_>\n        <_>\n          15 19 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 19 3 5 -1.</_>\n        <_>\n          15 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 20 3 4 -1.</_>\n        <_>\n          15 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 23 3 1 -1.</_>\n        <_>\n          15 23 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 0 8 1 -1.</_>\n        <_>\n          19 0 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 0 8 2 -1.</_>\n        <_>\n          19 0 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 2 2 10 -1.</_>\n        <_>\n          16 2 1 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 2 6 7 -1.</_>\n        <_>\n          17 2 2 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 2 5 3 -1.</_>\n        <_>\n          15 3 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 4 2 6 -1.</_>\n        <_>\n          16 4 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 4 2 8 -1.</_>\n        <_>\n          16 4 1 8 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 4 6 8 -1.</_>\n        <_>\n          18 4 3 8 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 4 8 3 -1.</_>\n        <_>\n          15 5 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 2 2 -1.</_>\n        <_>\n          16 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 3 2 -1.</_>\n        <_>\n          16 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 3 3 -1.</_>\n        <_>\n          16 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 3 6 -1.</_>\n        <_>\n          16 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 6 3 18 -1.</_>\n        <_>\n          15 12 3 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 6 6 7 -1.</_>\n        <_>\n          18 6 3 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 6 8 4 -1.</_>\n        <_>\n          15 6 4 2 2.</_>\n        <_>\n          19 8 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 3 6 -1.</_>\n        <_>\n          15 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 5 4 -1.</_>\n        <_>\n          15 9 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 5 6 -1.</_>\n        <_>\n          15 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 6 6 -1.</_>\n        <_>\n          15 9 6 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 7 3 -1.</_>\n        <_>\n          15 8 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 9 6 -1.</_>\n        <_>\n          15 9 9 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 2 2 -1.</_>\n        <_>\n          15 8 1 1 2.</_>\n        <_>\n          16 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 2 4 -1.</_>\n        <_>\n          15 8 1 2 2.</_>\n        <_>\n          16 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 1 12 -1.</_>\n        <_>\n          15 14 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 9 2 2 -1.</_>\n        <_>\n          15 9 1 1 2.</_>\n        <_>\n          16 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 9 3 4 -1.</_>\n        <_>\n          16 9 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 9 2 3 -1.</_>\n        <_>\n          15 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 9 7 3 -1.</_>\n        <_>\n          15 10 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 2 1 -1.</_>\n        <_>\n          16 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 3 1 -1.</_>\n        <_>\n          16 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 3 4 -1.</_>\n        <_>\n          16 10 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 3 5 -1.</_>\n        <_>\n          16 10 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 12 4 8 -1.</_>\n        <_>\n          15 12 2 4 2.</_>\n        <_>\n          17 16 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 15 4 3 -1.</_>\n        <_>\n          15 16 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 16 5 3 -1.</_>\n        <_>\n          15 17 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 19 3 4 -1.</_>\n        <_>\n          16 19 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 19 9 3 -1.</_>\n        <_>\n          15 20 9 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 20 6 3 -1.</_>\n        <_>\n          18 20 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 1 -1.</_>\n        <_>\n          20 0 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 2 -1.</_>\n        <_>\n          20 0 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 4 -1.</_>\n        <_>\n          16 0 4 2 2.</_>\n        <_>\n          20 2 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 6 -1.</_>\n        <_>\n          16 0 4 3 2.</_>\n        <_>\n          20 3 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 8 -1.</_>\n        <_>\n          16 0 4 4 2.</_>\n        <_>\n          20 4 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 12 -1.</_>\n        <_>\n          16 0 4 6 2.</_>\n        <_>\n          20 6 4 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 1 4 13 -1.</_>\n        <_>\n          18 1 2 13 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 2 3 2 -1.</_>\n        <_>\n          17 2 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 3 2 3 -1.</_>\n        <_>\n          16 4 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 4 1 3 -1.</_>\n        <_>\n          16 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 4 2 2 -1.</_>\n        <_>\n          16 4 1 1 2.</_>\n        <_>\n          17 5 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 5 2 3 -1.</_>\n        <_>\n          17 5 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 6 2 9 -1.</_>\n        <_>\n          16 9 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 6 4 4 -1.</_>\n        <_>\n          18 6 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 6 3 9 -1.</_>\n        <_>\n          16 9 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 6 7 6 -1.</_>\n        <_>\n          16 8 7 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 1 6 -1.</_>\n        <_>\n          16 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 2 3 -1.</_>\n        <_>\n          16 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 2 6 -1.</_>\n        <_>\n          16 9 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 3 2 -1.</_>\n        <_>\n          16 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 3 3 -1.</_>\n        <_>\n          16 8 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 3 6 -1.</_>\n        <_>\n          16 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 6 4 -1.</_>\n        <_>\n          16 7 3 2 2.</_>\n        <_>\n          19 9 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 4 3 -1.</_>\n        <_>\n          16 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 4 6 -1.</_>\n        <_>\n          16 9 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 1 2 -1.</_>\n        <_>\n          16 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 2 2 -1.</_>\n        <_>\n          16 8 1 1 2.</_>\n        <_>\n          17 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 2 2 -1.</_>\n        <_>\n          16 9 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 8 2 -1.</_>\n        <_>\n          16 8 4 1 2.</_>\n        <_>\n          20 9 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 3 1 -1.</_>\n        <_>\n          17 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 1 3 -1.</_>\n        <_>\n          16 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 2 3 -1.</_>\n        <_>\n          17 9 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 4 1 -1.</_>\n        <_>\n          18 9 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 2 2 -1.</_>\n        <_>\n          16 10 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 4 4 -1.</_>\n        <_>\n          18 9 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 6 6 -1.</_>\n        <_>\n          16 9 3 3 2.</_>\n        <_>\n          19 12 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 1 2 -1.</_>\n        <_>\n          16 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 1 3 -1.</_>\n        <_>\n          16 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 2 2 -1.</_>\n        <_>\n          16 10 1 1 2.</_>\n        <_>\n          17 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 2 2 -1.</_>\n        <_>\n          17 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 2 5 -1.</_>\n        <_>\n          17 10 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 3 13 -1.</_>\n        <_>\n          17 10 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 2 3 -1.</_>\n        <_>\n          16 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 3 3 -1.</_>\n        <_>\n          16 11 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 1 2 -1.</_>\n        <_>\n          16 12 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 3 2 -1.</_>\n        <_>\n          17 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 2 2 -1.</_>\n        <_>\n          16 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 2 3 -1.</_>\n        <_>\n          16 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 13 3 3 -1.</_>\n        <_>\n          16 14 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 14 4 1 -1.</_>\n        <_>\n          18 14 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 15 4 3 -1.</_>\n        <_>\n          18 15 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 15 6 2 -1.</_>\n        <_>\n          19 15 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 15 8 3 -1.</_>\n        <_>\n          20 15 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 16 4 1 -1.</_>\n        <_>\n          18 16 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 17 3 7 -1.</_>\n        <_>\n          17 17 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 17 6 3 -1.</_>\n        <_>\n          16 18 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 19 3 4 -1.</_>\n        <_>\n          17 19 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 0 6 1 -1.</_>\n        <_>\n          20 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 2 1 4 -1.</_>\n        <_>\n          17 4 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 3 1 -1.</_>\n        <_>\n          18 3 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 3 2 -1.</_>\n        <_>\n          18 3 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 2 8 -1.</_>\n        <_>\n          17 3 1 4 2.</_>\n        <_>\n          18 7 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 3 3 -1.</_>\n        <_>\n          17 4 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 4 1 3 -1.</_>\n        <_>\n          17 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 4 2 2 -1.</_>\n        <_>\n          18 4 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 4 2 6 -1.</_>\n        <_>\n          17 4 1 3 2.</_>\n        <_>\n          18 7 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 1 6 -1.</_>\n        <_>\n          17 8 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 4 8 -1.</_>\n        <_>\n          17 6 2 4 2.</_>\n        <_>\n          19 10 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 3 3 -1.</_>\n        <_>\n          17 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 5 3 -1.</_>\n        <_>\n          17 7 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 1 3 -1.</_>\n        <_>\n          17 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 1 6 -1.</_>\n        <_>\n          17 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 2 6 -1.</_>\n        <_>\n          17 7 1 3 2.</_>\n        <_>\n          18 10 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 2 3 -1.</_>\n        <_>\n          17 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 8 6 4 -1.</_>\n        <_>\n          17 10 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 3 1 -1.</_>\n        <_>\n          18 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 2 6 -1.</_>\n        <_>\n          17 9 1 3 2.</_>\n        <_>\n          18 12 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 4 2 -1.</_>\n        <_>\n          17 9 2 1 2.</_>\n        <_>\n          19 10 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 3 2 -1.</_>\n        <_>\n          17 10 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 5 3 -1.</_>\n        <_>\n          17 10 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 7 2 -1.</_>\n        <_>\n          17 10 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 1 3 -1.</_>\n        <_>\n          17 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 2 2 -1.</_>\n        <_>\n          17 10 1 1 2.</_>\n        <_>\n          18 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 2 4 -1.</_>\n        <_>\n          18 10 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 3 4 -1.</_>\n        <_>\n          18 10 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 4 2 -1.</_>\n        <_>\n          17 10 2 1 2.</_>\n        <_>\n          19 11 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 1 3 -1.</_>\n        <_>\n          17 12 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 3 2 -1.</_>\n        <_>\n          18 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 3 3 -1.</_>\n        <_>\n          18 11 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 2 2 -1.</_>\n        <_>\n          17 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 4 2 -1.</_>\n        <_>\n          17 11 2 1 2.</_>\n        <_>\n          19 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 12 3 2 -1.</_>\n        <_>\n          18 12 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 13 4 5 -1.</_>\n        <_>\n          19 13 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 14 2 3 -1.</_>\n        <_>\n          17 15 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 14 4 2 -1.</_>\n        <_>\n          19 14 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 15 4 2 -1.</_>\n        <_>\n          19 15 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 16 4 3 -1.</_>\n        <_>\n          19 16 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 17 3 7 -1.</_>\n        <_>\n          18 17 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 19 3 4 -1.</_>\n        <_>\n          18 19 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 21 3 3 -1.</_>\n        <_>\n          18 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 4 1 -1.</_>\n        <_>\n          20 0 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 6 1 -1.</_>\n        <_>\n          21 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 6 4 -1.</_>\n        <_>\n          21 0 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 1 1 12 -1.</_>\n        <_>\n          18 5 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 2 3 3 -1.</_>\n        <_>\n          19 2 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 3 3 2 -1.</_>\n        <_>\n          19 3 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 3 1 9 -1.</_>\n        <_>\n          18 6 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 3 3 4 -1.</_>\n        <_>\n          19 3 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 4 3 2 -1.</_>\n        <_>\n          19 4 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 4 3 4 -1.</_>\n        <_>\n          19 4 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 5 6 15 -1.</_>\n        <_>\n          21 5 3 15 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 2 3 -1.</_>\n        <_>\n          18 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 3 3 -1.</_>\n        <_>\n          18 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 4 3 -1.</_>\n        <_>\n          18 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 7 3 1 -1.</_>\n        <_>\n          19 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 7 2 2 -1.</_>\n        <_>\n          19 7 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 7 3 2 -1.</_>\n        <_>\n          18 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 1 3 -1.</_>\n        <_>\n          18 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 2 2 -1.</_>\n        <_>\n          18 8 1 1 2.</_>\n        <_>\n          19 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 2 3 -1.</_>\n        <_>\n          18 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 3 14 -1.</_>\n        <_>\n          18 15 3 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 3 1 -1.</_>\n        <_>\n          19 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 2 2 -1.</_>\n        <_>\n          18 9 1 1 2.</_>\n        <_>\n          19 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 3 2 -1.</_>\n        <_>\n          19 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 2 1 -1.</_>\n        <_>\n          19 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 2 2 -1.</_>\n        <_>\n          18 10 1 1 2.</_>\n        <_>\n          19 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 2 2 -1.</_>\n        <_>\n          18 11 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 6 4 -1.</_>\n        <_>\n          21 10 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 6 5 -1.</_>\n        <_>\n          21 10 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 3 2 -1.</_>\n        <_>\n          19 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 3 6 -1.</_>\n        <_>\n          19 11 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 3 9 -1.</_>\n        <_>\n          19 11 1 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 3 8 -1.</_>\n        <_>\n          18 15 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 12 3 4 -1.</_>\n        <_>\n          19 12 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 12 2 6 -1.</_>\n        <_>\n          18 15 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 12 6 2 -1.</_>\n        <_>\n          21 12 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 12 3 12 -1.</_>\n        <_>\n          18 16 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 13 3 1 -1.</_>\n        <_>\n          19 13 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 14 6 6 -1.</_>\n        <_>\n          21 14 3 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 20 3 4 -1.</_>\n        <_>\n          19 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 20 6 3 -1.</_>\n        <_>\n          18 21 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 2 2 4 -1.</_>\n        <_>\n          19 2 1 2 2.</_>\n        <_>\n          20 4 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 1 4 -1.</_>\n        <_>\n          19 6 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 1 20 -1.</_>\n        <_>\n          19 14 1 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 2 4 -1.</_>\n        <_>\n          19 6 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 4 3 -1.</_>\n        <_>\n          19 5 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 5 2 2 -1.</_>\n        <_>\n          19 5 1 1 2.</_>\n        <_>\n          20 6 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 1 3 -1.</_>\n        <_>\n          19 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 2 3 -1.</_>\n        <_>\n          19 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 5 3 -1.</_>\n        <_>\n          19 7 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 5 9 -1.</_>\n        <_>\n          19 9 5 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 7 1 12 -1.</_>\n        <_>\n          19 11 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 7 2 3 -1.</_>\n        <_>\n          19 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 8 1 3 -1.</_>\n        <_>\n          19 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 8 2 3 -1.</_>\n        <_>\n          20 8 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 9 2 1 -1.</_>\n        <_>\n          20 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 9 3 2 -1.</_>\n        <_>\n          20 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 10 2 2 -1.</_>\n        <_>\n          19 10 1 1 2.</_>\n        <_>\n          20 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 10 4 1 -1.</_>\n        <_>\n          21 10 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 11 3 7 -1.</_>\n        <_>\n          20 11 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 11 3 10 -1.</_>\n        <_>\n          20 11 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 11 3 11 -1.</_>\n        <_>\n          20 11 1 11 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 11 3 13 -1.</_>\n        <_>\n          20 11 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 14 3 10 -1.</_>\n        <_>\n          20 14 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 15 3 2 -1.</_>\n        <_>\n          19 16 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 18 3 3 -1.</_>\n        <_>\n          20 18 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 18 3 6 -1.</_>\n        <_>\n          20 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 20 5 3 -1.</_>\n        <_>\n          19 21 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 4 1 3 -1.</_>\n        <_>\n          20 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 5 1 2 -1.</_>\n        <_>\n          20 6 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 5 1 3 -1.</_>\n        <_>\n          20 6 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 5 2 3 -1.</_>\n        <_>\n          20 6 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 5 3 9 -1.</_>\n        <_>\n          20 8 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 6 4 9 -1.</_>\n        <_>\n          20 9 4 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 8 4 16 -1.</_>\n        <_>\n          22 8 2 16 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 9 4 6 -1.</_>\n        <_>\n          20 11 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 10 3 10 -1.</_>\n        <_>\n          21 10 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 10 3 9 -1.</_>\n        <_>\n          20 13 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 16 3 3 -1.</_>\n        <_>\n          21 16 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 17 3 7 -1.</_>\n        <_>\n          21 17 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 17 4 6 -1.</_>\n        <_>\n          20 19 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 18 3 3 -1.</_>\n        <_>\n          21 18 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 1 2 4 -1.</_>\n        <_>\n          21 3 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 5 1 3 -1.</_>\n        <_>\n          21 6 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 6 3 9 -1.</_>\n        <_>\n          21 9 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 10 3 3 -1.</_>\n        <_>\n          21 11 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 13 3 7 -1.</_>\n        <_>\n          22 13 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 16 3 3 -1.</_>\n        <_>\n          22 16 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 16 3 7 -1.</_>\n        <_>\n          22 16 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 17 3 5 -1.</_>\n        <_>\n          22 17 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 17 3 6 -1.</_>\n        <_>\n          21 19 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 17 3 6 -1.</_>\n        <_>\n          21 20 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 19 3 3 -1.</_>\n        <_>\n          22 19 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 19 3 5 -1.</_>\n        <_>\n          22 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 10 2 3 -1.</_>\n        <_>\n          22 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 11 2 3 -1.</_>\n        <_>\n          22 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 7 1 3 -1.</_>\n        <_>\n          23 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 9 1 3 -1.</_>\n        <_>\n          23 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 10 1 3 -1.</_>\n        <_>\n          23 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 14 1 9 -1.</_>\n        <_>\n          23 17 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 15 1 9 -1.</_>\n        <_>\n          23 18 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 18 1 6 -1.</_>\n        <_>\n          23 20 1 2 3.</_></rects>\n      <tilted>0</tilted></_></features></cascade>\n</opencv_storage>\n"
        },
        {
          "name": "haarcascade_frontalcatface_extended.xml",
          "type": "blob",
          "size": 374.087890625,
          "content": "<?xml version=\"1.0\"?>\n<!----------------------------------------------------------------------------\n A frontal cat face detector using the full set of Haar features, i.e.\n horizontal, vertical, and diagonal features.\n\n Contributed by Joseph Howse (josephhowse@nummist.com).\n\n More information can be found in the following publications and\n presentations:\n\n Joseph Howse. OpenCV for Secret Agents (book). Packt Publishing, January\n   2015.\n Joseph Howse. \"Training Detectors and Recognizers in Python and OpenCV\"\n   (tutorial). ISMAR 2014. September 9, 2014.\n   http://nummist.com/opencv/Howse_ISMAR_20140909.pdf\n Joseph Howse. \"Training Intelligent Camera Systems with Python and OpenCV\"\n   (webcast). O’Reilly Media. June 17, 2014.\n   http://www.oreilly.com/pub/e/3077\n\n Build scripts and demo applications can be found in the following repository:\n https://bitbucket.org/Joe_Howse/angora-blue\n\n KNOWN LIMITATIONS:\n\n An upright subject is assumed. In situations where the cat's face might be\n sideways or upside down (e.g. the cat is rolling over), try various rotations\n of the input image.\n\n CHANGELOG:\n\n 2016-08-06: Re-trained with more negative samples and more stages. False\n   positives are much rarer now. If you tailored your code for the cascade's\n   previous version, now you should re-adjust the arguments of\n   CascadeClassifier::detectMultiScale. For example, decrease the value of the\n   minNeighbors argument. You do not need to use a human face detector to\n   cross-check the positives anymore.\n 2014-04-25: First release (at https://bitbucket.org/Joe_Howse/angora-blue)\n\n //////////////////////////////////////////////////////////////////////////\n | Contributors License Agreement\n | IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.\n |   By downloading, copying, installing or using the software you agree\n |   to this license.\n |   If you do not agree to this license, do not download, install,\n |   copy or use the software.\n |\n | Copyright (c) 2014-2016, Joseph Howse (Nummist Media Corporation Limited,\n | Halifax, Nova Scotia, Canada). All rights reserved.\n |\n | Redistribution and use in source and binary forms, with or without\n | modification, are permitted provided that the following conditions are\n | met:\n |\n |    * Redistributions of source code must retain the above copyright\n |       notice, this list of conditions and the following disclaimer.\n |    * Redistributions in binary form must reproduce the above\n |      copyright notice, this list of conditions and the following\n |      disclaimer in the documentation and/or other materials provided\n |      with the distribution.\n |    * The name of Contributor may not used to endorse or promote products\n |      derived from this software without specific prior written permission.\n |\n | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n | \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n | LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n | A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n | CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n | EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n | PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n | PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n | LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n | NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n | SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  Back to\n | Top\n //////////////////////////////////////////////////////////////////////////\n ---------------------------------------------------------------------------->\n<opencv_storage>\n<cascade>\n  <stageType>BOOST</stageType>\n  <featureType>HAAR</featureType>\n  <height>24</height>\n  <width>24</width>\n  <stageParams>\n    <boostType>GAB</boostType>\n    <minHitRate>9.9500000476837158e-01</minHitRate>\n    <maxFalseAlarm>5.0000000000000000e-01</maxFalseAlarm>\n    <weightTrimRate>9.4999999999999996e-01</weightTrimRate>\n    <maxDepth>1</maxDepth>\n    <maxWeakCount>100</maxWeakCount></stageParams>\n  <featureParams>\n    <maxCatCount>0</maxCatCount>\n    <featSize>1</featSize>\n    <mode>ALL</mode></featureParams>\n  <stageNum>20</stageNum>\n  <stages>\n    <!-- stage 0 -->\n    <_>\n      <maxWeakCount>13</maxWeakCount>\n      <stageThreshold>-1.4294912815093994e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 394 -1.5126220881938934e-02</internalNodes>\n          <leafValues>\n            7.5887596607208252e-01 -3.4230688214302063e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 737 3.9337221533060074e-03</internalNodes>\n          <leafValues>\n            -3.3288389444351196e-01 5.2361363172531128e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 757 -1.5044892206788063e-02</internalNodes>\n          <leafValues>\n            5.5565774440765381e-01 -2.2505992650985718e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 450 -1.5777055174112320e-02</internalNodes>\n          <leafValues>\n            7.2692525386810303e-01 -1.6206762194633484e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 443 3.0781796202063560e-02</internalNodes>\n          <leafValues>\n            -1.8173390626907349e-01 7.3483395576477051e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 220 1.8483418971300125e-02</internalNodes>\n          <leafValues>\n            -1.8690711259841919e-01 5.0116515159606934e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 681 1.3474167324602604e-02</internalNodes>\n          <leafValues>\n            -1.5681208670139313e-01 5.8611637353897095e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 5.3415738046169281e-02</internalNodes>\n          <leafValues>\n            -1.6418528556823730e-01 6.8128466606140137e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 741 5.4243900813162327e-03</internalNodes>\n          <leafValues>\n            -1.8231739103794098e-01 4.6716138720512390e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 336 1.7689792439341545e-02</internalNodes>\n          <leafValues>\n            -1.3713267445564270e-01 6.0434049367904663e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 187 2.2149257711134851e-04</internalNodes>\n          <leafValues>\n            -2.7738124132156372e-01 2.8165665268898010e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 288 -2.8517641127109528e-02</internalNodes>\n          <leafValues>\n            5.5257320404052734e-01 -1.2970162928104401e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 369 4.3854981660842896e-02</internalNodes>\n          <leafValues>\n            -1.9231440126895905e-01 4.2093500494956970e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 1 -->\n    <_>\n      <maxWeakCount>27</maxWeakCount>\n      <stageThreshold>-1.5509251356124878e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 337 2.4014184251427650e-02</internalNodes>\n          <leafValues>\n            -2.1038578450679779e-01 7.3892170190811157e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 475 -5.5319909006357193e-03</internalNodes>\n          <leafValues>\n            4.4344031810760498e-01 -2.8907662630081177e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 4 2.7481060475111008e-02</internalNodes>\n          <leafValues>\n            -1.9128543138504028e-01 5.1661676168441772e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 457 -1.1628001928329468e-02</internalNodes>\n          <leafValues>\n            5.1978123188018799e-01 -1.7051684856414795e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 393 1.5159824397414923e-03</internalNodes>\n          <leafValues>\n            -2.9784303903579712e-01 3.9050224423408508e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 901 1.3662670738995075e-02</internalNodes>\n          <leafValues>\n            -1.4316783845424652e-01 4.4111710786819458e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 780 -3.6911026109009981e-03</internalNodes>\n          <leafValues>\n            3.2185173034667969e-01 -2.3853960633277893e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 769 3.3176485449075699e-02</internalNodes>\n          <leafValues>\n            -7.4603199958801270e-02 7.5860917568206787e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 317 -5.7046953588724136e-03</internalNodes>\n          <leafValues>\n            -7.5004047155380249e-01 1.0240622609853745e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 73 7.9660946503281593e-03</internalNodes>\n          <leafValues>\n            9.8882928490638733e-02 -7.3491615056991577e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 739 3.0965393409132957e-02</internalNodes>\n          <leafValues>\n            -1.6046196222305298e-01 4.5570060610771179e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 612 -4.0078125894069672e-03</internalNodes>\n          <leafValues>\n            -7.1539020538330078e-01 6.9276176393032074e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 647 -8.2283765077590942e-03</internalNodes>\n          <leafValues>\n            3.2576236128807068e-01 -1.8509653210639954e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 170 3.4253271296620369e-03</internalNodes>\n          <leafValues>\n            1.0964145511388779e-01 -5.8205413818359375e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 434 9.0980646200478077e-04</internalNodes>\n          <leafValues>\n            -2.0425215363502502e-01 2.7488732337951660e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 427 5.9772443026304245e-02</internalNodes>\n          <leafValues>\n            -1.3786207139492035e-01 4.0762668848037720e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 209 -4.1712004691362381e-02</internalNodes>\n          <leafValues>\n            4.9409377574920654e-01 -1.1713714897632599e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 248 -3.0311278998851776e-02</internalNodes>\n          <leafValues>\n            5.1191121339797974e-01 -1.0507214814424515e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 339 -6.5785087645053864e-03</internalNodes>\n          <leafValues>\n            -7.6472043991088867e-01 8.0923363566398621e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 37 1.1685060337185860e-02</internalNodes>\n          <leafValues>\n            5.0379037857055664e-02 -7.9744982719421387e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 423 6.5714016556739807e-02</internalNodes>\n          <leafValues>\n            -1.1398456245660782e-01 4.9489131569862366e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 755 9.7422497346997261e-03</internalNodes>\n          <leafValues>\n            -1.4347794651985168e-01 3.6561754345893860e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 870 4.9857441335916519e-03</internalNodes>\n          <leafValues>\n            7.9834438860416412e-02 -7.2391557693481445e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 735 -1.1547822505235672e-03</internalNodes>\n          <leafValues>\n            4.1867440938949585e-01 -1.2869183719158173e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 519 -4.4658007100224495e-03</internalNodes>\n          <leafValues>\n            -6.7933702468872070e-01 8.2867160439491272e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 862 3.6325352266430855e-03</internalNodes>\n          <leafValues>\n            6.6807270050048828e-02 -6.0182958841323853e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 127 7.4123376980423927e-03</internalNodes>\n          <leafValues>\n            -1.5108695626258850e-01 3.2046884298324585e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 2 -->\n    <_>\n      <maxWeakCount>26</maxWeakCount>\n      <stageThreshold>-1.3890913724899292e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 619 1.7836617305874825e-02</internalNodes>\n          <leafValues>\n            -2.1508488059043884e-01 6.6796410083770752e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 457 -8.5781915113329887e-03</internalNodes>\n          <leafValues>\n            5.0962758064270020e-01 -2.2129471600055695e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 165 3.1586211174726486e-02</internalNodes>\n          <leafValues>\n            -2.1485456824302673e-01 4.2591696977615356e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 518 2.5690056383609772e-02</internalNodes>\n          <leafValues>\n            -1.5910078585147858e-01 6.7842948436737061e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 768 -2.2857591509819031e-02</internalNodes>\n          <leafValues>\n            5.7221925258636475e-01 -1.3710150122642517e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 741 4.7176675871014595e-03</internalNodes>\n          <leafValues>\n            -2.3617559671401978e-01 3.9870622754096985e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 615 -2.3281413596123457e-03</internalNodes>\n          <leafValues>\n            -7.0095318555831909e-01 1.3746888935565948e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 139 1.0266102617606521e-03</internalNodes>\n          <leafValues>\n            -2.6873087882995605e-01 2.6495781540870667e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 2 -7.6808528974652290e-03</internalNodes>\n          <leafValues>\n            3.6925876140594482e-01 -2.1339643001556396e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 454 6.4357556402683258e-02</internalNodes>\n          <leafValues>\n            -1.1779088526964188e-01 5.5030888319015503e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 296 8.9486092329025269e-02</internalNodes>\n          <leafValues>\n            -1.4395782351493835e-01 5.3468054533004761e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 253 -5.6334878318011761e-03</internalNodes>\n          <leafValues>\n            -6.5704786777496338e-01 1.3971389830112457e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 834 -8.0200601369142532e-03</internalNodes>\n          <leafValues>\n            3.6956611275672913e-01 -1.8284171819686890e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 732 8.3984360098838806e-03</internalNodes>\n          <leafValues>\n            -1.3507588207721710e-01 4.4903004169464111e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 246 -5.7764705270528793e-03</internalNodes>\n          <leafValues>\n            -6.5459579229354858e-01 1.1050829291343689e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 630 3.9896301925182343e-02</internalNodes>\n          <leafValues>\n            -1.5822732448577881e-01 3.6069712042808533e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 11 -6.8376958370208740e-02</internalNodes>\n          <leafValues>\n            6.2642019987106323e-01 -8.3647280931472778e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 696 -2.7075063437223434e-02</internalNodes>\n          <leafValues>\n            4.0549215674400330e-01 -1.4247153699398041e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 933 6.8107023835182190e-03</internalNodes>\n          <leafValues>\n            7.7754773199558258e-02 -6.4665120840072632e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 131 3.6659452598541975e-03</internalNodes>\n          <leafValues>\n            7.9356946051120758e-02 -5.4679936170578003e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 182 2.3308303207159042e-02</internalNodes>\n          <leafValues>\n            -1.4383231103420258e-01 3.4179633855819702e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 389 -3.2547116279602051e-02</internalNodes>\n          <leafValues>\n            3.6395668983459473e-01 -1.2551946938037872e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 471 1.6501296311616898e-02</internalNodes>\n          <leafValues>\n            -1.0674661397933960e-01 4.2714300751686096e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 616 -2.9296698048710823e-03</internalNodes>\n          <leafValues>\n            -5.7476091384887695e-01 8.5429534316062927e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 828 1.3306898763403296e-03</internalNodes>\n          <leafValues>\n            -1.2303277105093002e-01 3.7224721908569336e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 18 9.8933260887861252e-03</internalNodes>\n          <leafValues>\n            6.7675270140171051e-02 -6.7935848236083984e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 3 -->\n    <_>\n      <maxWeakCount>31</maxWeakCount>\n      <stageThreshold>-1.4026626348495483e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 876 -1.4927964657545090e-02</internalNodes>\n          <leafValues>\n            6.3834953308105469e-01 -1.8698258697986603e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 467 -1.1759694665670395e-02</internalNodes>\n          <leafValues>\n            5.0763273239135742e-01 -2.0944127440452576e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 775 1.1289508081972599e-02</internalNodes>\n          <leafValues>\n            -1.4533838629722595e-01 5.3039866685867310e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 335 1.3691024854779243e-02</internalNodes>\n          <leafValues>\n            -1.3143934309482574e-01 5.9853446483612061e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 399 -8.6051290854811668e-03</internalNodes>\n          <leafValues>\n            3.1604155898094177e-01 -2.2497664391994476e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 898 1.1611104011535645e-02</internalNodes>\n          <leafValues>\n            -1.7180299758911133e-01 3.6340636014938354e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 919 5.4911419283598661e-04</internalNodes>\n          <leafValues>\n            -2.0625770092010498e-01 3.0243906378746033e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 448 -1.1997690424323082e-02</internalNodes>\n          <leafValues>\n            6.7541980743408203e-01 -1.0784135758876801e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 610 -2.0809918642044067e-03</internalNodes>\n          <leafValues>\n            -5.7404327392578125e-01 1.1769672483205795e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 277 6.8656861782073975e-02</internalNodes>\n          <leafValues>\n            -1.4633083343505859e-01 4.1269731521606445e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 215 -4.5645810663700104e-02</internalNodes>\n          <leafValues>\n            5.4341620206832886e-01 -1.1726979166269302e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 890 -1.8052812665700912e-02</internalNodes>\n          <leafValues>\n            3.6646232008934021e-01 -1.3256482779979706e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 897 9.2329997569322586e-03</internalNodes>\n          <leafValues>\n            9.1808989644050598e-02 -6.4987671375274658e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 142 -2.9587259050458670e-03</internalNodes>\n          <leafValues>\n            2.4805040657520294e-01 -2.0830279588699341e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 151 -7.1467030793428421e-03</internalNodes>\n          <leafValues>\n            -6.6564339399337769e-01 8.8065519928932190e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 756 -5.7738199830055237e-03</internalNodes>\n          <leafValues>\n            2.4252247810363770e-01 -2.1394193172454834e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 207 6.4636822789907455e-03</internalNodes>\n          <leafValues>\n            8.4821723401546478e-02 -6.4125812053680420e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 527 -2.8782974928617477e-02</internalNodes>\n          <leafValues>\n            3.5874211788177490e-01 -1.4370997250080109e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 715 -1.8174832221120596e-03</internalNodes>\n          <leafValues>\n            3.7480926513671875e-01 -1.2761794030666351e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 590 -1.9234847277402878e-03</internalNodes>\n          <leafValues>\n            -5.6678783893585205e-01 9.0299606323242188e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 588 2.8048637323081493e-03</internalNodes>\n          <leafValues>\n            8.5870750248432159e-02 -5.8541411161422729e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 178 7.0693701505661011e-02</internalNodes>\n          <leafValues>\n            -1.2318307906389236e-01 3.9827430248260498e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 6.2659628689289093e-02</internalNodes>\n          <leafValues>\n            -9.1229990124702454e-02 5.0639665126800537e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 321 -3.7420655135065317e-03</internalNodes>\n          <leafValues>\n            3.5059738159179688e-01 -1.2444343417882919e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 273 6.8388320505619049e-03</internalNodes>\n          <leafValues>\n            -1.0419095307588577e-01 4.5085826516151428e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 76 7.1193519979715347e-03</internalNodes>\n          <leafValues>\n            9.1205865144729614e-02 -5.2279585599899292e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 791 -9.8787562455981970e-04</internalNodes>\n          <leafValues>\n            2.8105542063713074e-01 -1.5169830620288849e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 639 1.8099821172654629e-03</internalNodes>\n          <leafValues>\n            6.5428622066974640e-02 -6.9196063280105591e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 726 -6.0212425887584686e-03</internalNodes>\n          <leafValues>\n            -6.2636482715606689e-01 5.1543414592742920e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 818 5.1644006744027138e-03</internalNodes>\n          <leafValues>\n            6.3040286302566528e-02 -6.3455927371978760e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 205 9.4506526365876198e-03</internalNodes>\n          <leafValues>\n            -1.3443979620933533e-01 3.1506177783012390e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 4 -->\n    <_>\n      <maxWeakCount>38</maxWeakCount>\n      <stageThreshold>-1.4621645212173462e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 383 -1.5925668179988861e-02</internalNodes>\n          <leafValues>\n            6.2127149105072021e-01 -1.8520653247833252e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 648 1.0260052047669888e-02</internalNodes>\n          <leafValues>\n            -2.4736632406711578e-01 4.2336893081665039e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 3 5.7025998830795288e-03</internalNodes>\n          <leafValues>\n            -2.3670144379138947e-01 3.3228391408920288e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 264 9.3164276331663132e-03</internalNodes>\n          <leafValues>\n            -1.7946784198284149e-01 4.6311038732528687e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 830 -5.0438079051673412e-03</internalNodes>\n          <leafValues>\n            4.4613519310951233e-01 -1.6072992980480194e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 793 2.8381291776895523e-03</internalNodes>\n          <leafValues>\n            -1.8486896157264709e-01 3.5892590880393982e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 455 6.7377656698226929e-02</internalNodes>\n          <leafValues>\n            -1.7760114371776581e-01 3.9539518952369690e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 44 -8.7916189804673195e-03</internalNodes>\n          <leafValues>\n            -5.9182339906692505e-01 1.1145308613777161e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 874 1.3353329151868820e-02</internalNodes>\n          <leafValues>\n            -1.1993711441755295e-01 4.8862439393997192e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 324 -1.0008489713072777e-02</internalNodes>\n          <leafValues>\n            4.1768664121627808e-01 -1.2453128397464752e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 795 -1.4410717412829399e-03</internalNodes>\n          <leafValues>\n            3.4100320935249329e-01 -1.6849595308303833e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 123 1.1647527664899826e-01</internalNodes>\n          <leafValues>\n            -9.7596585750579834e-02 4.2289251089096069e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 301 -9.8112244158983231e-03</internalNodes>\n          <leafValues>\n            2.6155915856361389e-01 -2.0234876871109009e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 425 6.3042029738426208e-02</internalNodes>\n          <leafValues>\n            -1.2662252783775330e-01 3.6811619997024536e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 553 -1.7675247043371201e-02</internalNodes>\n          <leafValues>\n            4.1690909862518311e-01 -1.1987055838108063e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 105 4.0485346689820290e-03</internalNodes>\n          <leafValues>\n            7.0249855518341064e-02 -7.3556905984878540e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 675 8.2748252898454666e-03</internalNodes>\n          <leafValues>\n            -1.6168670356273651e-01 2.8835350275039673e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 313 -5.0843162462115288e-03</internalNodes>\n          <leafValues>\n            -5.8562570810317993e-01 8.9675068855285645e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 249 6.0826279222965240e-03</internalNodes>\n          <leafValues>\n            4.7766357660293579e-02 -6.8612217903137207e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 48 8.5826087743043900e-03</internalNodes>\n          <leafValues>\n            -1.6963686048984528e-01 2.6875671744346619e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 38 2.4908576160669327e-02</internalNodes>\n          <leafValues>\n            8.5034154355525970e-02 -5.7059210538864136e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 879 2.0448346622288227e-03</internalNodes>\n          <leafValues>\n            -1.8642950057983398e-01 2.3178242146968842e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 16 2.4130716919898987e-02</internalNodes>\n          <leafValues>\n            -1.2823060154914856e-01 3.4394741058349609e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 154 -4.7494415193796158e-03</internalNodes>\n          <leafValues>\n            -7.1827727556228638e-01 6.8053275346755981e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 199 -1.7751917243003845e-02</internalNodes>\n          <leafValues>\n            -5.5972510576248169e-01 5.2141726016998291e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 339 5.5826390162110329e-03</internalNodes>\n          <leafValues>\n            4.8266090452671051e-02 -5.9813541173934937e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 387 1.4416726771742105e-03</internalNodes>\n          <leafValues>\n            -9.2707693576812744e-02 4.1495534777641296e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 192 -2.1779362577944994e-03</internalNodes>\n          <leafValues>\n            2.7112621068954468e-01 -1.5071788430213928e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 607 3.0656920280307531e-03</internalNodes>\n          <leafValues>\n            6.0340058058500290e-02 -6.5465551614761353e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 469 1.9947460293769836e-01</internalNodes>\n          <leafValues>\n            -9.5098674297332764e-02 3.9016976952552795e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 857 -2.0255323499441147e-02</internalNodes>\n          <leafValues>\n            4.3044877052307129e-01 -8.8302992284297943e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 446 5.4685659706592560e-03</internalNodes>\n          <leafValues>\n            -8.7241113185882568e-02 3.9513549208641052e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 463 -1.0883151553571224e-03</internalNodes>\n          <leafValues>\n            2.9802373051643372e-01 -1.3696449995040894e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 655 -5.0911568105220795e-03</internalNodes>\n          <leafValues>\n            -6.2439930438995361e-01 6.2544539570808411e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 221 -5.2395770326256752e-03</internalNodes>\n          <leafValues>\n            -6.9036418199539185e-01 4.5142117887735367e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 955 4.0486194193363190e-02</internalNodes>\n          <leafValues>\n            -7.5753845274448395e-02 5.2426725625991821e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 300 4.1610337793827057e-03</internalNodes>\n          <leafValues>\n            6.6071115434169769e-02 -5.8079534769058228e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 272 -6.4253048039972782e-03</internalNodes>\n          <leafValues>\n            3.0481830239295959e-01 -1.1435022950172424e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 5 -->\n    <_>\n      <maxWeakCount>44</maxWeakCount>\n      <stageThreshold>-1.4235107898712158e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 716 -2.2738082334399223e-03</internalNodes>\n          <leafValues>\n            5.9519726037979126e-01 -1.6779936850070953e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 457 -1.2204157188534737e-02</internalNodes>\n          <leafValues>\n            4.6985983848571777e-01 -1.7339397966861725e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 754 3.1242824625223875e-03</internalNodes>\n          <leafValues>\n            -2.2488421201705933e-01 3.4029743075370789e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 777 -3.9868438616394997e-03</internalNodes>\n          <leafValues>\n            3.8314539194107056e-01 -1.8952924013137817e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 538 -5.4737669415771961e-03</internalNodes>\n          <leafValues>\n            2.4583901464939117e-01 -2.3114782571792603e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 453 1.5154287219047546e-02</internalNodes>\n          <leafValues>\n            -1.0675037652254105e-01 5.8347207307815552e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 397 -1.4294658321887255e-03</internalNodes>\n          <leafValues>\n            3.8292840123176575e-01 -1.2911921739578247e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 750 -7.4405185878276825e-03</internalNodes>\n          <leafValues>\n            2.8356546163558960e-01 -1.7810684442520142e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 786 -4.0357224643230438e-03</internalNodes>\n          <leafValues>\n            2.6303085684776306e-01 -1.6862161457538605e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 618 -5.8342106640338898e-03</internalNodes>\n          <leafValues>\n            3.2040205597877502e-01 -1.4103877544403076e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 161 1.7279960215091705e-02</internalNodes>\n          <leafValues>\n            -1.7433850467205048e-01 2.7985212206840515e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 292 2.2125110030174255e-02</internalNodes>\n          <leafValues>\n            -1.1797516793012619e-01 4.0373948216438293e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 958 -4.4059187173843384e-02</internalNodes>\n          <leafValues>\n            5.2820503711700439e-01 -7.0916719734668732e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 194 -3.8316637277603149e-02</internalNodes>\n          <leafValues>\n            3.8833045959472656e-01 -1.0811555385589600e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 178 4.5704744756221771e-02</internalNodes>\n          <leafValues>\n            -1.7566929757595062e-01 3.4665411710739136e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 434 1.1523386929184198e-03</internalNodes>\n          <leafValues>\n            -1.7257389426231384e-01 2.5989890098571777e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 121 -1.0491746477782726e-02</internalNodes>\n          <leafValues>\n            -6.1285555362701416e-01 7.1230083703994751e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 395 -4.5014433562755585e-03</internalNodes>\n          <leafValues>\n            -5.7712453603744507e-01 5.8887075632810593e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 950 -3.7281280383467674e-03</internalNodes>\n          <leafValues>\n            -6.7359894514083862e-01 5.2957162261009216e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 331 3.4461893141269684e-02</internalNodes>\n          <leafValues>\n            -1.0375578701496124e-01 3.7974634766578674e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 462 -1.3906960375607014e-03</internalNodes>\n          <leafValues>\n            3.9171192049980164e-01 -1.0048408061265945e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 85 1.6332454979419708e-02</internalNodes>\n          <leafValues>\n            8.6256101727485657e-02 -4.5887523889541626e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 356 -6.0738036409020424e-03</internalNodes>\n          <leafValues>\n            -5.2265202999114990e-01 6.5308839082717896e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 486 -3.3630726393312216e-03</internalNodes>\n          <leafValues>\n            -5.6505429744720459e-01 5.5844355374574661e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 418 -1.5329496003687382e-02</internalNodes>\n          <leafValues>\n            3.4475114941596985e-01 -1.0086353123188019e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 587 -9.0496204793453217e-03</internalNodes>\n          <leafValues>\n            2.9553902149200439e-01 -1.1406829208135605e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 794 -3.1109917908906937e-03</internalNodes>\n          <leafValues>\n            -4.4897687435150146e-01 7.3615357279777527e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 939 3.3499556593596935e-03</internalNodes>\n          <leafValues>\n            5.4718658328056335e-02 -5.4810231924057007e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 188 1.8374501960352063e-03</internalNodes>\n          <leafValues>\n            -1.3522666692733765e-01 2.4655479192733765e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 908 2.6134990621358156e-03</internalNodes>\n          <leafValues>\n            6.6369861364364624e-02 -4.7342041134834290e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 65 -7.4155852198600769e-03</internalNodes>\n          <leafValues>\n            2.0866124331951141e-01 -1.5775154531002045e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 515 3.9352793246507645e-03</internalNodes>\n          <leafValues>\n            5.1660846918821335e-02 -6.2589824199676514e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 735 -1.0450070258229971e-03</internalNodes>\n          <leafValues>\n            3.3525371551513672e-01 -1.0084854811429977e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 784 1.2639444321393967e-03</internalNodes>\n          <leafValues>\n            -1.2103077769279480e-01 2.7691018581390381e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 479 7.7577251940965652e-03</internalNodes>\n          <leafValues>\n            4.6813234686851501e-02 -7.3385792970657349e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 18 -1.0632604360580444e-02</internalNodes>\n          <leafValues>\n            -7.1024382114410400e-01 3.3777639269828796e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 183 1.8631946295499802e-02</internalNodes>\n          <leafValues>\n            -1.4613701403141022e-01 2.1491082012653351e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 608 4.9128942191600800e-03</internalNodes>\n          <leafValues>\n            5.3445268422365189e-02 -6.3314527273178101e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 473 -9.8230186849832535e-03</internalNodes>\n          <leafValues>\n            2.6917773485183716e-01 -1.1376978456974030e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 910 -3.0754944309592247e-03</internalNodes>\n          <leafValues>\n            -5.0787961483001709e-01 6.1582125723361969e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 659 -6.7374799400568008e-03</internalNodes>\n          <leafValues>\n            2.3871047794818878e-01 -1.2552142143249512e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 507 -1.1759715154767036e-02</internalNodes>\n          <leafValues>\n            3.3646693825721741e-01 -9.4460532069206238e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 318 -4.1377237066626549e-03</internalNodes>\n          <leafValues>\n            -5.0522220134735107e-01 6.2668189406394958e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 320 1.7267453949898481e-03</internalNodes>\n          <leafValues>\n            -8.0607026815414429e-02 3.8304185867309570e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 6 -->\n    <_>\n      <maxWeakCount>47</maxWeakCount>\n      <stageThreshold>-1.4313566684722900e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 882 -1.1920252814888954e-02</internalNodes>\n          <leafValues>\n            5.6617152690887451e-01 -1.5811842679977417e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 568 -4.3085627257823944e-03</internalNodes>\n          <leafValues>\n            4.4759327173233032e-01 -1.6846470534801483e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 883 1.1177745182067156e-03</internalNodes>\n          <leafValues>\n            -1.5351393818855286e-01 4.3508940935134888e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 798 3.5418532788753510e-02</internalNodes>\n          <leafValues>\n            -1.2973460555076599e-01 3.6943939328193665e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 393 2.2405586205422878e-03</internalNodes>\n          <leafValues>\n            -1.8800468742847443e-01 3.2498928904533386e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 265 -1.7982896417379379e-02</internalNodes>\n          <leafValues>\n            4.5607218146324158e-01 -1.0459473729133606e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 152 -4.9088716506958008e-02</internalNodes>\n          <leafValues>\n            3.4279289841651917e-01 -1.5114119648933411e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 275 7.1780886501073837e-03</internalNodes>\n          <leafValues>\n            6.3825756311416626e-02 -6.2449872493743896e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 849 3.9123920723795891e-03</internalNodes>\n          <leafValues>\n            7.1502417325973511e-02 -6.3956946134567261e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 689 -4.1980943642556667e-03</internalNodes>\n          <leafValues>\n            2.1998657286167145e-01 -1.9890366494655609e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 660 -4.5476644299924374e-03</internalNodes>\n          <leafValues>\n            2.1866278350353241e-01 -1.9852560758590698e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 944 -4.4158436357975006e-03</internalNodes>\n          <leafValues>\n            2.3959043622016907e-01 -1.7090958356857300e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 281 -4.7058244235813618e-03</internalNodes>\n          <leafValues>\n            -5.1537507772445679e-01 9.0310461819171906e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 116 -8.7488889694213867e-03</internalNodes>\n          <leafValues>\n            2.2937677800655365e-01 -1.8315380811691284e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 645 -3.1655649654567242e-03</internalNodes>\n          <leafValues>\n            -7.3091191053390503e-01 6.5193220973014832e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 267 6.4696683548390865e-03</internalNodes>\n          <leafValues>\n            -1.1077737808227539e-01 3.7207809090614319e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 615 2.2985613904893398e-03</internalNodes>\n          <leafValues>\n            7.7800542116165161e-02 -5.1104581356048584e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 359 4.5809363946318626e-03</internalNodes>\n          <leafValues>\n            5.7778771966695786e-02 -5.7898092269897461e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 188 1.1279166210442781e-03</internalNodes>\n          <leafValues>\n            -1.7981146275997162e-01 1.9939005374908447e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 347 -1.2820301577448845e-02</internalNodes>\n          <leafValues>\n            5.1867282390594482e-01 -6.9989629089832306e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 810 4.4866472482681274e-02</internalNodes>\n          <leafValues>\n            -1.4253044128417969e-01 3.0062338709831238e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 412 -3.5413210280239582e-03</internalNodes>\n          <leafValues>\n            -5.7618641853332520e-01 6.0328345745801926e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 362 -7.4678594246506691e-03</internalNodes>\n          <leafValues>\n            -5.0187259912490845e-01 6.1294022947549820e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 678 1.8058011308312416e-02</internalNodes>\n          <leafValues>\n            5.3603217005729675e-02 -5.8919399976730347e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 935 -6.8098572082817554e-03</internalNodes>\n          <leafValues>\n            -5.4100829362869263e-01 5.5898215621709824e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 307 3.6491458304226398e-03</internalNodes>\n          <leafValues>\n            4.7378763556480408e-02 -5.9323132038116455e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 284 1.4524955768138170e-03</internalNodes>\n          <leafValues>\n            -8.8994570076465607e-02 3.8729071617126465e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 219 -6.2408884987235069e-03</internalNodes>\n          <leafValues>\n            -6.6442847251892090e-01 5.1082015037536621e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 744 -9.9360430613160133e-04</internalNodes>\n          <leafValues>\n            3.2972389459609985e-01 -1.0494423657655716e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 285 3.9777760393917561e-03</internalNodes>\n          <leafValues>\n            5.4083213210105896e-02 -6.2114214897155762e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 380 -1.4884659089148045e-02</internalNodes>\n          <leafValues>\n            2.4066454172134399e-01 -1.2317410856485367e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 436 3.3154981210827827e-03</internalNodes>\n          <leafValues>\n            -1.1744727939367294e-01 2.9429042339324951e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 976 -4.7508114948868752e-03</internalNodes>\n          <leafValues>\n            -4.5763325691223145e-01 6.7066885530948639e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 779 -1.1973761022090912e-02</internalNodes>\n          <leafValues>\n            2.5750914216041565e-01 -1.1354148387908936e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 740 4.9072699621319771e-03</internalNodes>\n          <leafValues>\n            -1.1266437917947769e-01 3.0022394657135010e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 56 6.5630510449409485e-02</internalNodes>\n          <leafValues>\n            -1.0180503129959106e-01 3.0517497658729553e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 354 -2.3393325507640839e-02</internalNodes>\n          <leafValues>\n            3.2443770766258240e-01 -9.5363102853298187e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 834 -3.8902116939425468e-03</internalNodes>\n          <leafValues>\n            2.0148487389087677e-01 -1.4944279193878174e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 185 -2.5926973670721054e-02</internalNodes>\n          <leafValues>\n            -4.4917497038841248e-01 6.9752328097820282e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 173 -7.1825529448688030e-03</internalNodes>\n          <leafValues>\n            -5.6838059425354004e-01 4.9584377557039261e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 548 -9.9399685859680176e-03</internalNodes>\n          <leafValues>\n            3.0747908353805542e-01 -1.1064232140779495e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 978 -3.6286246031522751e-03</internalNodes>\n          <leafValues>\n            -6.0276371240615845e-01 5.2405584603548050e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 820 1.5756220091134310e-03</internalNodes>\n          <leafValues>\n            -1.1615782976150513e-01 2.6717522740364075e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 426 3.5662509500980377e-02</internalNodes>\n          <leafValues>\n            -1.0885569453239441e-01 2.9044550657272339e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 5.3282946348190308e-02</internalNodes>\n          <leafValues>\n            -8.1855505704879761e-02 4.0298762917518616e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 988 3.3901704009622335e-03</internalNodes>\n          <leafValues>\n            5.5047694593667984e-02 -5.4021596908569336e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 384 1.3204356655478477e-03</internalNodes>\n          <leafValues>\n            -9.4643965363502502e-02 3.0430349707603455e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 7 -->\n    <_>\n      <maxWeakCount>48</maxWeakCount>\n      <stageThreshold>-1.3744181394577026e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 788 3.9594387635588646e-03</internalNodes>\n          <leafValues>\n            -1.5454453229904175e-01 4.9922767281532288e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 467 -1.6322813928127289e-02</internalNodes>\n          <leafValues>\n            4.2537182569503784e-01 -1.5276345610618591e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 746 1.6230947803705931e-03</internalNodes>\n          <leafValues>\n            -2.2640861570835114e-01 2.5220483541488647e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 115 -6.0441931709647179e-03</internalNodes>\n          <leafValues>\n            2.2711095213890076e-01 -2.1762822568416595e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 6 1.1688062921166420e-02</internalNodes>\n          <leafValues>\n            -1.6991630196571350e-01 2.8343129158020020e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 624 -3.1942571513354778e-03</internalNodes>\n          <leafValues>\n            -6.2475329637527466e-01 7.3184341192245483e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 11 -7.6569117605686188e-02</internalNodes>\n          <leafValues>\n            5.5236744880676270e-01 -7.7832877635955811e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 306 1.8717286875471473e-03</internalNodes>\n          <leafValues>\n            8.4293909370899200e-02 -5.2716743946075439e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 351 3.5880310460925102e-03</internalNodes>\n          <leafValues>\n            -1.2907223403453827e-01 3.3967444300651550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 176 -5.7136151008307934e-03</internalNodes>\n          <leafValues>\n            -5.9208476543426514e-01 7.7793844044208527e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 150 -1.9309867173433304e-02</internalNodes>\n          <leafValues>\n            2.5386241078376770e-01 -1.7397734522819519e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 327 -2.4289516732096672e-03</internalNodes>\n          <leafValues>\n            3.2221227884292603e-01 -1.2751287221908569e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 25 -8.5500031709671021e-02</internalNodes>\n          <leafValues>\n            -7.7962499856948853e-01 5.0715133547782898e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 770 5.7447291910648346e-03</internalNodes>\n          <leafValues>\n            -1.1523491144180298e-01 3.6400210857391357e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 781 5.8936916291713715e-02</internalNodes>\n          <leafValues>\n            -8.7829843163490295e-02 4.1893997788429260e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 984 -4.1379006579518318e-03</internalNodes>\n          <leafValues>\n            -6.3083720207214355e-01 6.4935714006423950e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 565 -4.6407114714384079e-03</internalNodes>\n          <leafValues>\n            -6.5650087594985962e-01 5.4394256323575974e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 877 1.5865347813814878e-03</internalNodes>\n          <leafValues>\n            -1.7255148291587830e-01 2.3248092830181122e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 624 2.8971401043236256e-03</internalNodes>\n          <leafValues>\n            6.0526229441165924e-02 -5.4368048906326294e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 773 1.5737174544483423e-03</internalNodes>\n          <leafValues>\n            -1.1744406074285507e-01 3.0534917116165161e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 609 1.6838097944855690e-03</internalNodes>\n          <leafValues>\n            6.6153712570667267e-02 -5.9224641323089600e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 912 3.2287575304508209e-03</internalNodes>\n          <leafValues>\n            5.2678912878036499e-02 -5.7474386692047119e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 850 -3.1512752175331116e-03</internalNodes>\n          <leafValues>\n            3.7773844599723816e-01 -8.7322145700454712e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 894 8.2073279190808535e-04</internalNodes>\n          <leafValues>\n            -1.0513201355934143e-01 3.4025487303733826e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 603 2.8983387164771557e-03</internalNodes>\n          <leafValues>\n            5.1720291376113892e-02 -6.5431916713714600e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 852 -5.7246205396950245e-03</internalNodes>\n          <leafValues>\n            -7.8483843803405762e-01 3.5195719450712204e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 44 -1.1572695337235928e-02</internalNodes>\n          <leafValues>\n            -6.7286187410354614e-01 3.5210411995649338e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 80 -1.4562263153493404e-02</internalNodes>\n          <leafValues>\n            2.4655815958976746e-01 -1.2278749793767929e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 269 7.8490225132554770e-04</internalNodes>\n          <leafValues>\n            -1.4652141928672791e-01 3.0276218056678772e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 725 -1.4289810787886381e-03</internalNodes>\n          <leafValues>\n            1.8906314671039581e-01 -1.5791040658950806e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 108 -9.4615388661623001e-03</internalNodes>\n          <leafValues>\n            -6.9036215543746948e-01 3.9911076426506042e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 21 2.3225568234920502e-02</internalNodes>\n          <leafValues>\n            5.0278317183256149e-02 -5.2323836088180542e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 959 1.4046948403120041e-02</internalNodes>\n          <leafValues>\n            -7.9005211591720581e-02 4.0158179402351379e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 126 3.7851710803806782e-03</internalNodes>\n          <leafValues>\n            -1.3530673086643219e-01 2.1973098814487457e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 142 -3.6725951358675957e-03</internalNodes>\n          <leafValues>\n            1.9924460351467133e-01 -1.5001934766769409e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 963 -3.1669549643993378e-03</internalNodes>\n          <leafValues>\n            -4.2041611671447754e-01 7.4019186198711395e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 695 -1.3667810708284378e-02</internalNodes>\n          <leafValues>\n            2.5204744935035706e-01 -1.2807497382164001e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 214 -3.5862527787685394e-02</internalNodes>\n          <leafValues>\n            3.2997950911521912e-01 -8.9863941073417664e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 946 -6.2667285092175007e-03</internalNodes>\n          <leafValues>\n            -5.5024039745330811e-01 5.7369034737348557e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 438 -6.4383493736386299e-03</internalNodes>\n          <leafValues>\n            3.3817592263221741e-01 -9.3247875571250916e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 439 5.4173925891518593e-03</internalNodes>\n          <leafValues>\n            -1.0427469760179520e-01 2.9482829570770264e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 400 -1.5132453292608261e-02</internalNodes>\n          <leafValues>\n            3.2000914216041565e-01 -9.8272062838077545e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 606 -1.2513613328337669e-02</internalNodes>\n          <leafValues>\n            2.8962445259094238e-01 -1.2084391713142395e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 91 -9.8966564983129501e-03</internalNodes>\n          <leafValues>\n            -5.8358079195022583e-01 5.1291342824697495e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 932 1.3835988938808441e-02</internalNodes>\n          <leafValues>\n            -9.0702146291732788e-02 3.2527267932891846e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 92 3.6492943763732910e-03</internalNodes>\n          <leafValues>\n            8.4720104932785034e-02 -3.4649613499641418e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 478 -1.3878188095986843e-02</internalNodes>\n          <leafValues>\n            2.9309025406837463e-01 -9.6585884690284729e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 580 2.8816664125770330e-03</internalNodes>\n          <leafValues>\n            -1.0839603841304779e-01 2.5134062767028809e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 8 -->\n    <_>\n      <maxWeakCount>57</maxWeakCount>\n      <stageThreshold>-1.3757541179656982e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 742 -4.1507836431264877e-03</internalNodes>\n          <leafValues>\n            4.7857573628425598e-01 -1.5079282224178314e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 539 -4.2431484907865524e-03</internalNodes>\n          <leafValues>\n            2.7976706624031067e-01 -2.1182695031166077e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 422 7.2727665305137634e-02</internalNodes>\n          <leafValues>\n            -1.1322361230850220e-01 4.6931907534599304e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 120 7.3349894955754280e-03</internalNodes>\n          <leafValues>\n            -2.2507375478744507e-01 2.3486614227294922e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 79 -1.3757663965225220e-01</internalNodes>\n          <leafValues>\n            5.5153369903564453e-01 -8.4895148873329163e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 592 6.8098353222012520e-04</internalNodes>\n          <leafValues>\n            -1.7585472762584686e-01 2.2849111258983612e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 110 2.7579340338706970e-01</internalNodes>\n          <leafValues>\n            -1.1671220511198044e-01 3.2674804329872131e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 921 5.4910051403567195e-04</internalNodes>\n          <leafValues>\n            -2.0603717863559723e-01 1.8896938860416412e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 155 -5.5065844208002090e-03</internalNodes>\n          <leafValues>\n            -5.7701790332794189e-01 6.9212622940540314e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 824 -8.3996364846825600e-03</internalNodes>\n          <leafValues>\n            4.6683028340339661e-01 -7.4202880263328552e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 843 -1.1010931339114904e-03</internalNodes>\n          <leafValues>\n            1.9711431860923767e-01 -1.7736457288265228e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 217 -4.4837296009063721e-03</internalNodes>\n          <leafValues>\n            -6.0108631849288940e-01 4.9327563494443893e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 211 2.5086081586778164e-03</internalNodes>\n          <leafValues>\n            6.9480538368225098e-02 -4.8671180009841919e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 201 1.5808893367648125e-03</internalNodes>\n          <leafValues>\n            -1.0519328713417053e-01 3.2050549983978271e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 1.4971228083595634e-03</internalNodes>\n          <leafValues>\n            -8.4364958107471466e-02 4.3016371130943298e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 343 -2.6089220773428679e-03</internalNodes>\n          <leafValues>\n            -4.2146065831184387e-01 8.8990658521652222e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 42 -7.7147269621491432e-03</internalNodes>\n          <leafValues>\n            -6.6330111026763916e-01 5.0671890377998352e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 85 -1.7141735181212425e-02</internalNodes>\n          <leafValues>\n            -4.8750495910644531e-01 5.6981299072504044e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 146 1.3850606046617031e-02</internalNodes>\n          <leafValues>\n            7.4964463710784912e-02 -4.4079580903053284e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 341 -1.4932476915419102e-03</internalNodes>\n          <leafValues>\n            3.1057041883468628e-01 -1.0369800031185150e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 382 -8.3094676956534386e-03</internalNodes>\n          <leafValues>\n            2.2514784336090088e-01 -1.4621259272098541e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 462 -7.2969077154994011e-04</internalNodes>\n          <leafValues>\n            2.6934301853179932e-01 -1.2512375414371490e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 430 -1.3652374967932701e-02</internalNodes>\n          <leafValues>\n            -4.9215099215507507e-01 7.3141731321811676e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 20 9.4011947512626648e-03</internalNodes>\n          <leafValues>\n            4.1364993900060654e-02 -6.5001028776168823e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 657 4.0921592153608799e-03</internalNodes>\n          <leafValues>\n            4.0478449314832687e-02 -5.9830683469772339e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 847 1.5591707779094577e-03</internalNodes>\n          <leafValues>\n            -9.3049824237823486e-02 3.1007137894630432e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 973 3.4408085048198700e-03</internalNodes>\n          <leafValues>\n            4.7337688505649567e-02 -6.5880972146987915e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 847 -1.3411687687039375e-03</internalNodes>\n          <leafValues>\n            2.8307750821113586e-01 -1.0693576931953430e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 534 -5.7181939482688904e-03</internalNodes>\n          <leafValues>\n            -4.7754487395286560e-01 6.3519261777400970e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 374 -5.0096530467271805e-03</internalNodes>\n          <leafValues>\n            -6.1091655492782593e-01 3.9555240422487259e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1 -4.1508115828037262e-03</internalNodes>\n          <leafValues>\n            2.1694649755954742e-01 -1.3193054497241974e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 844 -1.6968715935945511e-02</internalNodes>\n          <leafValues>\n            2.7644789218902588e-01 -1.0202119499444962e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 103 1.0276203043758869e-02</internalNodes>\n          <leafValues>\n            -9.0598084032535553e-02 2.9703584313392639e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 350 -1.8649294506758451e-03</internalNodes>\n          <leafValues>\n            2.8791305422782898e-01 -9.2735975980758667e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 942 3.3354205079376698e-03</internalNodes>\n          <leafValues>\n            5.3746312856674194e-02 -5.0940161943435669e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 396 -1.4105688314884901e-03</internalNodes>\n          <leafValues>\n            2.4489782750606537e-01 -1.1008579283952713e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 611 2.3928448557853699e-02</internalNodes>\n          <leafValues>\n            5.2839644253253937e-02 -4.9896511435508728e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 807 -3.8580424152314663e-03</internalNodes>\n          <leafValues>\n            -4.8197838664054871e-01 5.3767576813697815e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 679 -3.0590491369366646e-03</internalNodes>\n          <leafValues>\n            -5.2978992462158203e-01 4.6741079539060593e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 468 -2.9391471762210131e-03</internalNodes>\n          <leafValues>\n            -3.4711557626724243e-01 6.9464050233364105e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 667 -7.0184348151087761e-03</internalNodes>\n          <leafValues>\n            3.1962895393371582e-01 -8.3362981677055359e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 664 1.0384586639702320e-03</internalNodes>\n          <leafValues>\n            -1.0797444730997086e-01 2.4896475672721863e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 628 -8.0418614670634270e-03</internalNodes>\n          <leafValues>\n            -7.3527222871780396e-01 3.6740459501743317e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 193 -3.1738542020320892e-02</internalNodes>\n          <leafValues>\n            2.6166516542434692e-01 -1.0992183536291122e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 194 3.6780342459678650e-02</internalNodes>\n          <leafValues>\n            -8.7741106748580933e-02 3.7106978893280029e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 494 -6.4193591475486755e-02</internalNodes>\n          <leafValues>\n            3.1807181239128113e-01 -8.8648937642574310e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 46 3.4801474213600159e-01</internalNodes>\n          <leafValues>\n            -5.5967021733522415e-02 5.3631168603897095e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 490 7.5712919235229492e-02</internalNodes>\n          <leafValues>\n            -5.9786085039377213e-02 4.1973164677619934e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 983 7.8374873846769333e-03</internalNodes>\n          <leafValues>\n            -6.8252839148044586e-02 3.9001336693763733e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 867 3.3967243507504463e-03</internalNodes>\n          <leafValues>\n            5.7270396500825882e-02 -4.7492286562919617e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 158 3.2095968723297119e-02</internalNodes>\n          <leafValues>\n            3.0982470139861107e-02 -7.2973543405532837e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 939 4.1734268888831139e-03</internalNodes>\n          <leafValues>\n            3.0397623777389526e-02 -6.8009066581726074e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 545 3.2336891163140535e-03</internalNodes>\n          <leafValues>\n            -9.4194613397121429e-02 2.5351443886756897e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 55 -3.8070861250162125e-02</internalNodes>\n          <leafValues>\n            2.7447724342346191e-01 -8.3862110972404480e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 358 4.6657784841954708e-03</internalNodes>\n          <leafValues>\n            3.7179920822381973e-02 -6.7654901742935181e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 247 -3.9379103109240532e-03</internalNodes>\n          <leafValues>\n            -5.9923279285430908e-01 3.2963614910840988e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 699 -4.8031057231128216e-03</internalNodes>\n          <leafValues>\n            2.2248022258281708e-01 -1.0560184717178345e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 9 -->\n    <_>\n      <maxWeakCount>55</maxWeakCount>\n      <stageThreshold>-1.3843152523040771e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 456 6.7532630637288094e-03</internalNodes>\n          <leafValues>\n            -1.5934121608734131e-01 5.1630091667175293e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 685 1.6582473181188107e-03</internalNodes>\n          <leafValues>\n            -1.4192129671573639e-01 4.6970281004905701e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 741 8.5381623357534409e-03</internalNodes>\n          <leafValues>\n            -1.4064009487628937e-01 4.3454051017761230e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 711 -5.8347072452306747e-02</internalNodes>\n          <leafValues>\n            4.8053690791130066e-01 -1.1435888707637787e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 200 7.5503322295844555e-04</internalNodes>\n          <leafValues>\n            -1.6613751649856567e-01 3.5059270262718201e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 463 -1.6263198340311646e-03</internalNodes>\n          <leafValues>\n            3.3983412384986877e-01 -1.2952369451522827e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 982 -4.9476943910121918e-02</internalNodes>\n          <leafValues>\n            5.1085108518600464e-01 -7.6757252216339111e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 148 1.5736839268356562e-03</internalNodes>\n          <leafValues>\n            -9.8503805696964264e-02 4.2097148299217224e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 970 2.8940830379724503e-03</internalNodes>\n          <leafValues>\n            8.0476768314838409e-02 -5.9272909164428711e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 470 -8.5198890883475542e-04</internalNodes>\n          <leafValues>\n            2.7713751792907715e-01 -1.2991340458393097e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 513 -3.2718123402446508e-03</internalNodes>\n          <leafValues>\n            3.1215441226959229e-01 -1.2980756163597107e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 244 6.0219354927539825e-03</internalNodes>\n          <leafValues>\n            7.2135269641876221e-02 -5.9813290834426880e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 81 2.3065296933054924e-02</internalNodes>\n          <leafValues>\n            7.1330830454826355e-02 -5.3722465038299561e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 187 2.7176631192560308e-05</internalNodes>\n          <leafValues>\n            -2.6853099465370178e-01 1.4315985143184662e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 401 5.4575498215854168e-03</internalNodes>\n          <leafValues>\n            5.5034745484590530e-02 -5.7176333665847778e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 391 2.5911496777553111e-05</internalNodes>\n          <leafValues>\n            -2.3133303225040436e-01 1.4060766994953156e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 12 2.1752633154392242e-02</internalNodes>\n          <leafValues>\n            5.9929180890321732e-02 -5.0224888324737549e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 860 3.5099866800010204e-03</internalNodes>\n          <leafValues>\n            4.7387380152940750e-02 -5.8126205205917358e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 755 8.6558861657977104e-03</internalNodes>\n          <leafValues>\n            -1.3651072978973389e-01 2.2407715022563934e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 990 3.0432851053774357e-03</internalNodes>\n          <leafValues>\n            5.7905938476324081e-02 -5.5585581064224243e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 240 3.4083288628607988e-03</internalNodes>\n          <leafValues>\n            4.6358574181795120e-02 -5.6204903125762939e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 241 -4.1327420622110367e-03</internalNodes>\n          <leafValues>\n            -4.3748503923416138e-01 6.6312022507190704e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 887 5.4382300004363060e-04</internalNodes>\n          <leafValues>\n            -1.2188895046710968e-01 2.6694831252098083e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 886 2.0359107293188572e-03</internalNodes>\n          <leafValues>\n            -6.9375663995742798e-02 4.1734528541564941e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 894 5.6087510893121362e-04</internalNodes>\n          <leafValues>\n            -1.2235503643751144e-01 2.9018589854240417e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 957 5.4084453731775284e-03</internalNodes>\n          <leafValues>\n            5.1494579762220383e-02 -6.3784217834472656e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 99 1.9748538732528687e-02</internalNodes>\n          <leafValues>\n            -7.0414997637271881e-02 4.8995351791381836e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 147 -2.0231239497661591e-02</internalNodes>\n          <leafValues>\n            -5.9452813863754272e-01 5.5317912250757217e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 763 -8.5184378549456596e-03</internalNodes>\n          <leafValues>\n            -4.9081006646156311e-01 5.1023125648498535e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 952 6.4936149865388870e-03</internalNodes>\n          <leafValues>\n            -8.6577519774436951e-02 3.6036944389343262e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 30 -4.0995404124259949e-02</internalNodes>\n          <leafValues>\n            4.0132537484169006e-01 -7.1912504732608795e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 501 3.1340471468865871e-03</internalNodes>\n          <leafValues>\n            -1.2547470629215240e-01 2.2158138453960419e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 184 -1.9882351160049438e-02</internalNodes>\n          <leafValues>\n            -7.1213179826736450e-01 4.2412471026182175e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 559 2.0461969077587128e-02</internalNodes>\n          <leafValues>\n            -1.0324169695377350e-01 2.9102885723114014e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 686 -1.2761610560119152e-03</internalNodes>\n          <leafValues>\n            2.3810100555419922e-01 -1.1509060114622116e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 549 -3.3783772960305214e-03</internalNodes>\n          <leafValues>\n            -5.6838840246200562e-01 5.6331343948841095e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 302 5.0912564620375633e-03</internalNodes>\n          <leafValues>\n            4.7987211495637894e-02 -4.7997272014617920e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 508 -4.1752815246582031e-02</internalNodes>\n          <leafValues>\n            -5.9290748834609985e-01 4.2219188064336777e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 263 -1.3672109693288803e-02</internalNodes>\n          <leafValues>\n            2.7416154742240906e-01 -9.8633147776126862e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 329 4.5463615097105503e-03</internalNodes>\n          <leafValues>\n            -9.5323033630847931e-02 3.3586710691452026e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 472 -1.1957241222262383e-02</internalNodes>\n          <leafValues>\n            1.6140049695968628e-01 -1.6837921738624573e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 95 -2.4866103194653988e-03</internalNodes>\n          <leafValues>\n            -3.8348227739334106e-01 6.6880211234092712e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 130 3.3222150523215532e-03</internalNodes>\n          <leafValues>\n            4.9669362604618073e-02 -5.2419567108154297e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 767 1.2700627557933331e-03</internalNodes>\n          <leafValues>\n            -1.0981336981058121e-01 2.4314954876899719e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 643 -4.0526064112782478e-03</internalNodes>\n          <leafValues>\n            -5.4617625474929810e-01 4.6236973255872726e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 889 -1.7611857037991285e-03</internalNodes>\n          <leafValues>\n            2.0527404546737671e-01 -1.1924317479133606e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 832 -2.8845192864537239e-03</internalNodes>\n          <leafValues>\n            2.0061042904853821e-01 -1.4499643445014954e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 969 -9.4242449849843979e-03</internalNodes>\n          <leafValues>\n            -7.2513866424560547e-01 3.4894362092018127e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 972 3.7029895465821028e-03</internalNodes>\n          <leafValues>\n            5.5003125220537186e-02 -4.1173446178436279e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 785 -8.4825151134282351e-04</internalNodes>\n          <leafValues>\n            2.6719486713409424e-01 -9.9083028733730316e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 54 1.5727356076240540e-02</internalNodes>\n          <leafValues>\n            -1.2551975250244141e-01 2.0588764548301697e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 106 5.9068910777568817e-03</internalNodes>\n          <leafValues>\n            6.0179408639669418e-02 -4.1827461123466492e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 27 -3.9538964629173279e-02</internalNodes>\n          <leafValues>\n            3.4726879000663757e-01 -7.4968926608562469e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 10 4.7501657158136368e-02</internalNodes>\n          <leafValues>\n            -7.6978117227554321e-02 3.5068345069885254e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 259 -5.9454172151163220e-04</internalNodes>\n          <leafValues>\n            1.6073931753635406e-01 -1.5279982984066010e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 10 -->\n    <_>\n      <maxWeakCount>58</maxWeakCount>\n      <stageThreshold>-1.2862224578857422e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 882 -1.3625519350171089e-02</internalNodes>\n          <leafValues>\n            5.0128185749053955e-01 -1.1663150042295456e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 375 -2.2920668125152588e-03</internalNodes>\n          <leafValues>\n            3.9538189768791199e-01 -1.3872602581977844e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 792 1.0770710650831461e-03</internalNodes>\n          <leafValues>\n            -1.7133137583732605e-01 3.1510788202285767e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 452 -1.2591466307640076e-02</internalNodes>\n          <leafValues>\n            3.9579889178276062e-01 -1.4279782772064209e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 460 -4.7927081584930420e-02</internalNodes>\n          <leafValues>\n            -4.9305588006973267e-01 5.6685980409383774e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 474 -2.5895023718476295e-03</internalNodes>\n          <leafValues>\n            1.6586430370807648e-01 -2.2577352821826935e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 112 9.8585948348045349e-02</internalNodes>\n          <leafValues>\n            -7.2541341185569763e-02 5.3971153497695923e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 521 7.2299325838685036e-03</internalNodes>\n          <leafValues>\n            7.2869211435317993e-02 -6.0541796684265137e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 202 -6.0262705665081739e-04</internalNodes>\n          <leafValues>\n            2.7961328625679016e-01 -1.3374039530754089e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 253 5.3171166218817234e-03</internalNodes>\n          <leafValues>\n            6.1562143266201019e-02 -5.3435516357421875e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 109 -7.3790093883872032e-03</internalNodes>\n          <leafValues>\n            -5.8770626783370972e-01 5.2599798887968063e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 179 2.2994203027337790e-04</internalNodes>\n          <leafValues>\n            -2.2165967524051666e-01 1.6663813591003418e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 366 -2.7968082576990128e-03</internalNodes>\n          <leafValues>\n            -4.5023602247238159e-01 6.7983791232109070e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 949 -4.4262632727622986e-03</internalNodes>\n          <leafValues>\n            -5.4457426071166992e-01 5.3928002715110779e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 431 -6.1236601322889328e-03</internalNodes>\n          <leafValues>\n            2.9386061429977417e-01 -1.0868654400110245e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 364 6.1672870069742203e-03</internalNodes>\n          <leafValues>\n            6.7409984767436981e-02 -4.2896196246147156e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 335 1.5454929322004318e-02</internalNodes>\n          <leafValues>\n            -9.3371987342834473e-02 3.2237896323204041e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 285 -5.5358107201755047e-03</internalNodes>\n          <leafValues>\n            -6.3797932863235474e-01 4.7232467681169510e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 -5.8793288189917803e-04</internalNodes>\n          <leafValues>\n            2.6480975747108459e-01 -1.1852940917015076e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 203 1.2575921136885881e-03</internalNodes>\n          <leafValues>\n            -1.2490244954824448e-01 2.8103300929069519e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 41 3.3034523949027061e-03</internalNodes>\n          <leafValues>\n            6.2105692923069000e-02 -4.5968556404113770e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 45 -2.6582641527056694e-02</internalNodes>\n          <leafValues>\n            -5.0849837064743042e-01 5.3966015577316284e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 49 2.7427850291132927e-02</internalNodes>\n          <leafValues>\n            5.2529457956552505e-02 -5.3614085912704468e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 39 -2.1938718855381012e-03</internalNodes>\n          <leafValues>\n            -5.6713318824768066e-01 4.6497207134962082e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 926 8.5861550178378820e-04</internalNodes>\n          <leafValues>\n            -1.1162154376506805e-01 2.8105884790420532e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 886 -8.4925384726375341e-04</internalNodes>\n          <leafValues>\n            3.1280112266540527e-01 -1.2138028442859650e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 956 2.9905270785093307e-03</internalNodes>\n          <leafValues>\n            6.1607286334037781e-02 -5.1581907272338867e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 968 5.8231391012668610e-03</internalNodes>\n          <leafValues>\n            4.7376025468111038e-02 -5.1492005586624146e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 480 4.2811138555407524e-03</internalNodes>\n          <leafValues>\n            3.2761037349700928e-02 -6.7820072174072266e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 915 9.5272483304142952e-04</internalNodes>\n          <leafValues>\n            -1.5452747046947479e-01 1.7837351560592651e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 270 -2.7698231860995293e-04</internalNodes>\n          <leafValues>\n            1.8924367427825928e-01 -1.3868112862110138e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 370 3.0586202628910542e-03</internalNodes>\n          <leafValues>\n            5.3298473358154297e-02 -4.7908756136894226e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 639 2.0293965935707092e-03</internalNodes>\n          <leafValues>\n            3.1667634844779968e-02 -6.7199909687042236e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 639 -1.8073513638228178e-03</internalNodes>\n          <leafValues>\n            -6.4894622564315796e-01 3.3469315618276596e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 320 -1.1197938583791256e-03</internalNodes>\n          <leafValues>\n            2.2734998166561127e-01 -1.1382233351469040e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 828 1.2703117681667209e-03</internalNodes>\n          <leafValues>\n            -9.7680233418941498e-02 2.9997348785400391e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 835 -1.8036495894193649e-03</internalNodes>\n          <leafValues>\n            2.3566392064094543e-01 -1.1566326767206192e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 222 2.3318463936448097e-03</internalNodes>\n          <leafValues>\n            5.5787801742553711e-02 -4.4648987054824829e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 111 1.8485619220882654e-03</internalNodes>\n          <leafValues>\n            -1.0420991480350494e-01 2.4521166086196899e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 101 8.2633290439844131e-03</internalNodes>\n          <leafValues>\n            5.3129263222217560e-02 -4.8460647463798523e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 760 2.7392050469643436e-05</internalNodes>\n          <leafValues>\n            -1.7487643659114838e-01 1.3620604574680328e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 352 2.6163433212786913e-03</internalNodes>\n          <leafValues>\n            -9.9586494266986847e-02 2.4075058102607727e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 94 3.6149267107248306e-03</internalNodes>\n          <leafValues>\n            4.2312353849411011e-02 -5.5195075273513794e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 403 1.4812931418418884e-02</internalNodes>\n          <leafValues>\n            -6.7619144916534424e-02 3.7573158740997314e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 814 -2.8877586591988802e-03</internalNodes>\n          <leafValues>\n            -5.3493702411651611e-01 5.1065266132354736e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 930 3.5591312916949391e-04</internalNodes>\n          <leafValues>\n            -1.2231220304965973e-01 1.9974029064178467e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 36 -1.0347569361329079e-02</internalNodes>\n          <leafValues>\n            -6.3408315181732178e-01 4.0167611092329025e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 34 -4.4028884731233120e-03</internalNodes>\n          <leafValues>\n            -5.1359844207763672e-01 4.3052427470684052e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 856 -1.6173283802345395e-03</internalNodes>\n          <leafValues>\n            1.4859439432621002e-01 -1.4985026419162750e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 996 -3.1839800067245960e-03</internalNodes>\n          <leafValues>\n            -4.1493499279022217e-01 6.0393124818801880e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 960 -7.9784039407968521e-03</internalNodes>\n          <leafValues>\n            2.8296649456024170e-01 -8.6312569677829742e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 797 2.8750954661518335e-03</internalNodes>\n          <leafValues>\n            -6.7822508513927460e-02 3.2967612147331238e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 992 -1.1433581821620464e-03</internalNodes>\n          <leafValues>\n            -3.4375748038291931e-01 6.8774074316024780e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 668 1.7783213406801224e-03</internalNodes>\n          <leafValues>\n            -8.8273152709007263e-02 2.6904863119125366e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 670 -6.3564153388142586e-03</internalNodes>\n          <leafValues>\n            3.4165042638778687e-01 -7.6342806220054626e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 712 5.8753319084644318e-02</internalNodes>\n          <leafValues>\n            3.6884155124425888e-02 -7.0002478361129761e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 345 -1.2118986342102289e-03</internalNodes>\n          <leafValues>\n            1.8067996203899384e-01 -1.2888990342617035e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 268 -3.4786794334650040e-02</internalNodes>\n          <leafValues>\n            2.8380703926086426e-01 -1.0494612902402878e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 11 -->\n    <_>\n      <maxWeakCount>61</maxWeakCount>\n      <stageThreshold>-1.3526766300201416e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 875 9.3241240829229355e-03</internalNodes>\n          <leafValues>\n            -1.1945860832929611e-01 4.8265087604522705e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 573 -4.0869116783142090e-03</internalNodes>\n          <leafValues>\n            2.7903670072555542e-01 -2.3448269069194794e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 676 8.3140000700950623e-02</internalNodes>\n          <leafValues>\n            -8.5437655448913574e-02 5.4905670881271362e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 802 2.6708254590630531e-03</internalNodes>\n          <leafValues>\n            -1.6097296774387360e-01 3.5868695378303528e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 75 2.2817514836788177e-03</internalNodes>\n          <leafValues>\n            -1.6324259340763092e-01 2.3956388235092163e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 745 6.7889376077800989e-04</internalNodes>\n          <leafValues>\n            -2.5205141305923462e-01 1.6190616786479950e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 811 3.1512721907347441e-03</internalNodes>\n          <leafValues>\n            -1.3325424492359161e-01 2.7017220854759216e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 53 5.7821646332740784e-02</internalNodes>\n          <leafValues>\n            -6.7158013582229614e-02 4.1875806450843811e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 442 2.8442896902561188e-02</internalNodes>\n          <leafValues>\n            5.5711831897497177e-02 -5.8136337995529175e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 644 -1.7370734130963683e-03</internalNodes>\n          <leafValues>\n            -6.7132610082626343e-01 3.2464105635881424e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 324 -1.9680276513099670e-02</internalNodes>\n          <leafValues>\n            3.9044600725173950e-01 -8.8745564222335815e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 224 1.0001409798860550e-02</internalNodes>\n          <leafValues>\n            -1.5947268903255463e-01 2.7087828516960144e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 644 1.2495646951720119e-03</internalNodes>\n          <leafValues>\n            8.3702936768531799e-02 -4.6324184536933899e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 144 3.0510198324918747e-02</internalNodes>\n          <leafValues>\n            -1.0709584504365921e-01 3.2648065686225891e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 995 -3.7916197907179594e-03</internalNodes>\n          <leafValues>\n            -6.1073684692382812e-01 4.7788143157958984e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 880 8.5655774455517530e-04</internalNodes>\n          <leafValues>\n            -2.0807541906833649e-01 1.5517778694629669e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 986 -3.2812850549817085e-03</internalNodes>\n          <leafValues>\n            -5.8795136213302612e-01 4.5926980674266815e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 499 3.6125673796050251e-04</internalNodes>\n          <leafValues>\n            -1.6806155443191528e-01 1.7441834509372711e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 591 -1.2282358948141336e-03</internalNodes>\n          <leafValues>\n            -4.7641313076019287e-01 5.6790668517351151e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 411 9.3263220041990280e-03</internalNodes>\n          <leafValues>\n            -7.4045926332473755e-02 3.7817317247390747e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 591 7.4745330493897200e-04</internalNodes>\n          <leafValues>\n            8.0762349069118500e-02 -3.5692575573921204e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 900 7.4315653182566166e-03</internalNodes>\n          <leafValues>\n            -8.5764542222023010e-02 3.2155406475067139e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 776 2.7057509869337082e-02</internalNodes>\n          <leafValues>\n            6.9296583533287048e-02 -4.2836430668830872e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 504 3.9283365011215210e-02</internalNodes>\n          <leafValues>\n            -1.0806435346603394e-01 2.9007008671760559e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 23 -3.4139624238014221e-01</internalNodes>\n          <leafValues>\n            5.0227731466293335e-01 -6.3795588910579681e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 502 -1.8172953277826309e-02</internalNodes>\n          <leafValues>\n            2.7207729220390320e-01 -1.0322675853967667e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 509 1.5265008434653282e-02</internalNodes>\n          <leafValues>\n            -1.0788526386022568e-01 2.4405729770660400e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 -1.4973650686442852e-03</internalNodes>\n          <leafValues>\n            2.8644701838493347e-01 -1.0436929017305374e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 674 2.1207414101809263e-03</internalNodes>\n          <leafValues>\n            4.5713264495134354e-02 -6.6571021080017090e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 254 1.3393461704254150e-02</internalNodes>\n          <leafValues>\n            -8.4284797310829163e-02 3.6480179429054260e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 560 9.7873376216739416e-04</internalNodes>\n          <leafValues>\n            -1.2960052490234375e-01 2.2095513343811035e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 747 -4.9731796607375145e-03</internalNodes>\n          <leafValues>\n            2.7467787265777588e-01 -1.0236363112926483e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 294 -7.9883169382810593e-03</internalNodes>\n          <leafValues>\n            -5.3638678789138794e-01 5.3369920700788498e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 413 2.3855306208133698e-03</internalNodes>\n          <leafValues>\n            5.4967612028121948e-02 -4.2117682099342346e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 899 -3.0849636532366276e-03</internalNodes>\n          <leafValues>\n            2.6192533969879150e-01 -9.4207443296909332e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 653 4.3416069820523262e-03</internalNodes>\n          <leafValues>\n            -1.5543100237846375e-01 1.6663897037506104e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 451 3.8728015497326851e-03</internalNodes>\n          <leafValues>\n            4.9280565232038498e-02 -4.9337747693061829e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 563 1.8099667504429817e-03</internalNodes>\n          <leafValues>\n            4.2697191238403320e-02 -5.2748012542724609e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 157 -3.3727339468896389e-03</internalNodes>\n          <leafValues>\n            2.0491680502891541e-01 -1.2846539914608002e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 344 3.1393815297633410e-03</internalNodes>\n          <leafValues>\n            -7.3090612888336182e-02 3.4941059350967407e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 851 3.2568261958658695e-03</internalNodes>\n          <leafValues>\n            4.5729346573352814e-02 -5.7302659749984741e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 853 -2.0513155031949282e-03</internalNodes>\n          <leafValues>\n            -5.4655516147613525e-01 3.8907390087842941e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 656 -2.7090720832347870e-03</internalNodes>\n          <leafValues>\n            -5.2781039476394653e-01 3.8093525916337967e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 738 -3.6282267421483994e-02</internalNodes>\n          <leafValues>\n            -5.8760797977447510e-01 3.4759882837533951e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 558 3.7925848737359047e-03</internalNodes>\n          <leafValues>\n            -8.5966393351554871e-02 2.6226586103439331e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 991 -3.7565450184047222e-03</internalNodes>\n          <leafValues>\n            -5.7828390598297119e-01 3.9440535008907318e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 906 -7.8137982636690140e-03</internalNodes>\n          <leafValues>\n            3.5042202472686768e-01 -6.6597603261470795e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 904 -3.1100357882678509e-03</internalNodes>\n          <leafValues>\n            1.8389418721199036e-01 -1.4107073843479156e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 449 9.1797057539224625e-03</internalNodes>\n          <leafValues>\n            -6.2711343169212341e-02 3.4819519519805908e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 255 -2.9698751866817474e-02</internalNodes>\n          <leafValues>\n            2.8956320881843567e-01 -8.5679493844509125e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 720 7.9502481967210770e-03</internalNodes>\n          <leafValues>\n            3.9165180176496506e-02 -6.0753583908081055e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 621 2.2064188960939646e-03</internalNodes>\n          <leafValues>\n            3.5431943833827972e-02 -5.5480444431304932e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 175 -3.1044434756040573e-02</internalNodes>\n          <leafValues>\n            -6.2628567218780518e-01 3.1049268320202827e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 0 -1.3199620880186558e-03</internalNodes>\n          <leafValues>\n            1.5564316511154175e-01 -1.3879336416721344e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 397 -9.6068280981853604e-04</internalNodes>\n          <leafValues>\n            1.9332279264926910e-01 -1.1179215461015701e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 43 7.4608568102121353e-03</internalNodes>\n          <leafValues>\n            5.7219974696636200e-02 -4.2135125398635864e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 293 -4.3320422992110252e-03</internalNodes>\n          <leafValues>\n            -6.8079024553298950e-01 2.9504306614398956e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 274 -6.5548438578844070e-03</internalNodes>\n          <leafValues>\n            2.9043409228324890e-01 -8.7089523673057556e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 204 4.2611984536051750e-03</internalNodes>\n          <leafValues>\n            -8.5929870605468750e-02 3.1930494308471680e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 635 -7.2978977113962173e-03</internalNodes>\n          <leafValues>\n            1.4620631933212280e-01 -1.7617914080619812e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 225 -2.2543172817677259e-03</internalNodes>\n          <leafValues>\n            -5.9305733442306519e-01 3.9764832705259323e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 12 -->\n    <_>\n      <maxWeakCount>70</maxWeakCount>\n      <stageThreshold>-1.3067549467086792e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 742 -5.6160744279623032e-03</internalNodes>\n          <leafValues>\n            4.7913768887519836e-01 -9.8717339336872101e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 536 -5.6263338774442673e-03</internalNodes>\n          <leafValues>\n            2.8639736771583557e-01 -1.7997759580612183e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 795 -1.6268140170723200e-03</internalNodes>\n          <leafValues>\n            3.0874463915824890e-01 -1.3907180726528168e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 802 -1.3920383062213659e-03</internalNodes>\n          <leafValues>\n            3.2034638524055481e-01 -1.3876211643218994e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 826 3.4234612248837948e-03</internalNodes>\n          <leafValues>\n            -1.0860712081193924e-01 3.2174232602119446e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 525 4.3767906725406647e-02</internalNodes>\n          <leafValues>\n            -1.3255064189434052e-01 3.7021124362945557e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 401 -4.4696494005620480e-03</internalNodes>\n          <leafValues>\n            -4.5687621831893921e-01 8.2243621349334717e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 332 -7.1945399977266788e-03</internalNodes>\n          <leafValues>\n            -6.4334297180175781e-01 4.5623987913131714e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 273 6.5287351608276367e-03</internalNodes>\n          <leafValues>\n            -8.9336074888706207e-02 3.3727860450744629e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 771 2.8297028038650751e-03</internalNodes>\n          <leafValues>\n            -1.0177894681692123e-01 3.5831856727600098e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 925 1.1526069603860378e-02</internalNodes>\n          <leafValues>\n            7.5238041579723358e-02 -4.8319393396377563e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 207 4.7937319613993168e-03</internalNodes>\n          <leafValues>\n            5.7682428508996964e-02 -4.7086900472640991e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 395 -3.6777029745280743e-03</internalNodes>\n          <leafValues>\n            -4.2743790149688721e-01 7.4363298714160919e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 839 -8.0760312266647816e-04</internalNodes>\n          <leafValues>\n            1.4320656657218933e-01 -1.9929704070091248e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 233 3.7253312766551971e-03</internalNodes>\n          <leafValues>\n            5.2736207842826843e-02 -5.2105212211608887e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 416 -2.3560712113976479e-02</internalNodes>\n          <leafValues>\n            4.0658730268478394e-01 -7.3024936020374298e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 311 -4.5593185350298882e-03</internalNodes>\n          <leafValues>\n            -6.3590377569198608e-01 3.5127460956573486e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 551 -2.4863984435796738e-03</internalNodes>\n          <leafValues>\n            -4.5599257946014404e-01 5.3035512566566467e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 424 -2.6802124921232462e-03</internalNodes>\n          <leafValues>\n            1.9116453826427460e-01 -1.3404799997806549e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 11 -7.7647715806961060e-02</internalNodes>\n          <leafValues>\n            4.1297465562820435e-01 -6.3970938324928284e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 566 2.3329094983637333e-03</internalNodes>\n          <leafValues>\n            -1.2160944193601608e-01 2.3117628693580627e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 5 -6.6609308123588562e-03</internalNodes>\n          <leafValues>\n            2.2600707411766052e-01 -1.2069495767354965e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 133 -5.0821684300899506e-02</internalNodes>\n          <leafValues>\n            3.2217630743980408e-01 -7.6335281133651733e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 537 -7.0379404351115227e-03</internalNodes>\n          <leafValues>\n            1.8399104475975037e-01 -1.4812190830707550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 134 -3.3276520669460297e-02</internalNodes>\n          <leafValues>\n            -6.0358065366744995e-01 3.5330448299646378e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 392 7.5909225270152092e-03</internalNodes>\n          <leafValues>\n            3.1779482960700989e-02 -6.4767998456954956e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 613 -5.6639023125171661e-02</internalNodes>\n          <leafValues>\n            -4.6455994248390198e-01 4.6072337776422501e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 124 3.7777128163725138e-03</internalNodes>\n          <leafValues>\n            5.7451672852039337e-02 -3.7793967127799988e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 271 8.9145395904779434e-03</internalNodes>\n          <leafValues>\n            -7.5942978262901306e-02 3.1487807631492615e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 841 -1.4818884432315826e-02</internalNodes>\n          <leafValues>\n            2.7122247219085693e-01 -9.8314434289932251e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 381 -5.5922558531165123e-03</internalNodes>\n          <leafValues>\n            -6.4762401580810547e-01 4.1314963251352310e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 595 3.1491921981796622e-04</internalNodes>\n          <leafValues>\n            -1.4864055812358856e-01 1.4411780238151550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 136 -5.7063563726842403e-03</internalNodes>\n          <leafValues>\n            -4.6024248003959656e-01 4.7999884933233261e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 -1.2257394846528769e-03</internalNodes>\n          <leafValues>\n            3.2288366556167603e-01 -7.0425607264041901e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 775 -1.6291948035359383e-02</internalNodes>\n          <leafValues>\n            2.7573275566101074e-01 -8.3055868744850159e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 156 -8.1639690324664116e-04</internalNodes>\n          <leafValues>\n            1.7044979333877563e-01 -1.4129574596881866e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 975 5.1114819943904877e-03</internalNodes>\n          <leafValues>\n            3.3882420510053635e-02 -6.9941717386245728e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 977 -2.8371806256473064e-03</internalNodes>\n          <leafValues>\n            -3.7707236409187317e-01 5.7759616523981094e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 772 5.3479857742786407e-03</internalNodes>\n          <leafValues>\n            4.1541736572980881e-02 -4.8687714338302612e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 735 1.1360908392816782e-03</internalNodes>\n          <leafValues>\n            -7.8717894852161407e-02 2.9692038893699646e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 947 1.4100213302299380e-03</internalNodes>\n          <leafValues>\n            4.3843001127243042e-02 -5.1339787244796753e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 387 8.7079760851338506e-04</internalNodes>\n          <leafValues>\n            -9.8695866763591766e-02 2.2730629146099091e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 211 -5.4065873846411705e-03</internalNodes>\n          <leafValues>\n            -6.3011974096298218e-01 3.7802927196025848e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 816 -1.6894804313778877e-02</internalNodes>\n          <leafValues>\n            -5.0091201066970825e-01 3.5215172916650772e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 766 1.4164673630148172e-03</internalNodes>\n          <leafValues>\n            -8.8441111147403717e-02 2.4102251231670380e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 704 -1.1464871931821108e-03</internalNodes>\n          <leafValues>\n            1.9273723661899567e-01 -1.1090471595525742e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 861 -3.2706123311072588e-03</internalNodes>\n          <leafValues>\n            -4.5202803611755371e-01 4.7059688717126846e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 70 1.1416582390666008e-02</internalNodes>\n          <leafValues>\n            2.6714416220784187e-02 -6.9660711288452148e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 310 2.7643535286188126e-03</internalNodes>\n          <leafValues>\n            4.7252438962459564e-02 -3.9458727836608887e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 435 2.4567130021750927e-03</internalNodes>\n          <leafValues>\n            -7.5188823044300079e-02 2.9944056272506714e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 441 -7.3516201227903366e-03</internalNodes>\n          <leafValues>\n            2.8476437926292419e-01 -9.2367134988307953e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 662 -4.3670929968357086e-02</internalNodes>\n          <leafValues>\n            -6.8588620424270630e-01 3.3353023231029510e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 138 -6.4992159605026245e-02</internalNodes>\n          <leafValues>\n            -7.9678738117218018e-01 2.0331909880042076e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 286 -1.1700032278895378e-02</internalNodes>\n          <leafValues>\n            -6.1183351278305054e-01 2.7328895404934883e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 589 3.0743866227567196e-03</internalNodes>\n          <leafValues>\n            -7.7295452356338501e-02 2.6685911417007446e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 584 -1.5546076931059361e-02</internalNodes>\n          <leafValues>\n            -5.5246621370315552e-01 4.0912687778472900e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 40 6.5568592399358749e-03</internalNodes>\n          <leafValues>\n            -1.0432150214910507e-01 1.9379787147045135e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 29 -8.0047458410263062e-02</internalNodes>\n          <leafValues>\n            3.9228948950767517e-01 -5.2565738558769226e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 227 1.5684183686971664e-02</internalNodes>\n          <leafValues>\n            -1.1151826381683350e-01 1.8633136153221130e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 546 2.3603178560733795e-03</internalNodes>\n          <leafValues>\n            -1.0219112038612366e-01 2.0333246886730194e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 585 -3.5169085022062063e-03</internalNodes>\n          <leafValues>\n            2.7427124977111816e-01 -8.6362943053245544e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 476 9.4871241599321365e-03</internalNodes>\n          <leafValues>\n            3.5626750439405441e-02 -6.2631088495254517e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 629 -9.3261618167161942e-03</internalNodes>\n          <leafValues>\n            -7.1806514263153076e-01 2.4241568520665169e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 666 -6.3302312046289444e-03</internalNodes>\n          <leafValues>\n            2.1094995737075806e-01 -9.2475786805152893e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 598 -2.8244811110198498e-03</internalNodes>\n          <leafValues>\n            2.6596403121948242e-01 -8.0099694430828094e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 145 -1.1591307818889618e-02</internalNodes>\n          <leafValues>\n            2.3619163036346436e-01 -8.5169024765491486e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 117 2.1401243284344673e-03</internalNodes>\n          <leafValues>\n            -1.0995808988809586e-01 2.1230246126651764e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 562 4.2046746239066124e-03</internalNodes>\n          <leafValues>\n            3.6688093096017838e-02 -6.1654287576675415e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 605 1.1085141450166702e-03</internalNodes>\n          <leafValues>\n            -8.0656312406063080e-02 2.7754181623458862e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 829 -8.2805287092924118e-03</internalNodes>\n          <leafValues>\n            -6.5883606672286987e-01 3.6048211157321930e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 13 -->\n    <_>\n      <maxWeakCount>70</maxWeakCount>\n      <stageThreshold>-1.2368309497833252e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 716 -3.3105849288403988e-03</internalNodes>\n          <leafValues>\n            5.0566112995147705e-01 -8.2956805825233459e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 190 4.5855166390538216e-03</internalNodes>\n          <leafValues>\n            -1.3226345181465149e-01 3.9034894108772278e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 576 -2.6665716432034969e-03</internalNodes>\n          <leafValues>\n            2.7508354187011719e-01 -1.3807572424411774e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 734 1.8106825649738312e-02</internalNodes>\n          <leafValues>\n            -1.2738862633705139e-01 3.5449108481407166e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 830 -5.7813120074570179e-03</internalNodes>\n          <leafValues>\n            2.7463605999946594e-01 -1.2951526045799255e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 379 8.9321136474609375e-03</internalNodes>\n          <leafValues>\n            4.8491790890693665e-02 -5.8104276657104492e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 17 6.2806839123368263e-03</internalNodes>\n          <leafValues>\n            -1.3215491175651550e-01 2.1852293610572815e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 9 -4.3670572340488434e-02</internalNodes>\n          <leafValues>\n            3.8786840438842773e-01 -7.4191503226757050e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 -6.2309622764587402e-02</internalNodes>\n          <leafValues>\n            3.3408007025718689e-01 -8.7087221443653107e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 686 -3.2859744969755411e-03</internalNodes>\n          <leafValues>\n            3.3486780524253845e-01 -8.9008949697017670e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 346 -3.9627305231988430e-03</internalNodes>\n          <leafValues>\n            2.6155433058738708e-01 -9.5614455640316010e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 434 1.0877416934818029e-03</internalNodes>\n          <leafValues>\n            -1.4199735224246979e-01 1.8414285778999329e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 249 5.4819821380078793e-03</internalNodes>\n          <leafValues>\n            7.4260123074054718e-02 -5.6989872455596924e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 916 4.9011572264134884e-04</internalNodes>\n          <leafValues>\n            -1.9576059281826019e-01 1.3506270945072174e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 911 -7.7052684500813484e-03</internalNodes>\n          <leafValues>\n            -5.0443643331527710e-01 6.1383318156003952e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 164 4.8691947013139725e-03</internalNodes>\n          <leafValues>\n            4.3469026684761047e-02 -5.2802342176437378e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 344 2.4673391599208117e-03</internalNodes>\n          <leafValues>\n            -8.9178681373596191e-02 3.0606627464294434e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 172 -3.6682826466858387e-03</internalNodes>\n          <leafValues>\n            -6.5514552593231201e-01 4.7427203506231308e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 365 2.5194899644702673e-03</internalNodes>\n          <leafValues>\n            4.9365170300006866e-02 -4.0812951326370239e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 531 5.8970693498849869e-03</internalNodes>\n          <leafValues>\n            3.5579398274421692e-02 -6.4191317558288574e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 842 1.7767311073839664e-03</internalNodes>\n          <leafValues>\n            -8.6629316210746765e-02 2.7705979347229004e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 885 4.0457276627421379e-03</internalNodes>\n          <leafValues>\n            5.6002113968133926e-02 -4.7005215287208557e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 522 3.2862280495464802e-03</internalNodes>\n          <leafValues>\n            -1.2930884957313538e-01 2.0613414049148560e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 322 1.4660503948107362e-03</internalNodes>\n          <leafValues>\n            -9.9395424127578735e-02 3.3950179815292358e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 266 1.9015703350305557e-02</internalNodes>\n          <leafValues>\n            6.0197159647941589e-02 -5.1893943548202515e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 102 -7.1178808808326721e-02</internalNodes>\n          <leafValues>\n            -4.3668299913406372e-01 4.7340013086795807e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 795 -4.6305771684274077e-04</internalNodes>\n          <leafValues>\n            1.4736598730087280e-01 -1.5406486392021179e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 298 -4.7644632868468761e-03</internalNodes>\n          <leafValues>\n            -5.0336647033691406e-01 4.4053792953491211e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 761 -8.5318256169557571e-03</internalNodes>\n          <leafValues>\n            -5.9967356920242310e-01 3.2567754387855530e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 713 -2.7496295515447855e-03</internalNodes>\n          <leafValues>\n            1.3502316176891327e-01 -1.6025592386722565e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 607 4.2666587978601456e-03</internalNodes>\n          <leafValues>\n            2.5802688673138618e-02 -7.8170543909072876e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 216 -2.9856398701667786e-02</internalNodes>\n          <leafValues>\n            2.4982222914695740e-01 -8.8180385529994965e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 226 2.2136634215712547e-03</internalNodes>\n          <leafValues>\n            -1.4314906299114227e-01 1.6945528984069824e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 640 1.6336794942617416e-02</internalNodes>\n          <leafValues>\n            4.6008959412574768e-02 -4.9338266253471375e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 459 7.9861842095851898e-03</internalNodes>\n          <leafValues>\n            -1.1460029333829880e-01 1.9282819330692291e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 650 -1.7455726629123092e-03</internalNodes>\n          <leafValues>\n            1.7520657181739807e-01 -1.2269173562526703e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 124 -6.2451506964862347e-03</internalNodes>\n          <leafValues>\n            -4.5638361573219299e-01 4.8106320202350616e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 406 8.5668899118900299e-03</internalNodes>\n          <leafValues>\n            -8.0403454601764679e-02 3.0411326885223389e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 974 8.6863581091165543e-03</internalNodes>\n          <leafValues>\n            3.4176670014858246e-02 -7.3028022050857544e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 36 1.0814646258950233e-02</internalNodes>\n          <leafValues>\n            2.5131458416581154e-02 -6.7325627803802490e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 709 4.4222913682460785e-02</internalNodes>\n          <leafValues>\n            3.9326712489128113e-02 -5.1067680120468140e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 903 3.7128489930182695e-03</internalNodes>\n          <leafValues>\n            -1.3248492777347565e-01 1.6692358255386353e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 129 -4.6475054696202278e-03</internalNodes>\n          <leafValues>\n            1.7683532834053040e-01 -1.2570241093635559e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 291 4.2433524504303932e-03</internalNodes>\n          <leafValues>\n            3.6985948681831360e-02 -5.8369445800781250e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 315 -5.1774000748991966e-03</internalNodes>\n          <leafValues>\n            5.1487326622009277e-01 -4.1473735123872757e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 855 4.2645614594221115e-03</internalNodes>\n          <leafValues>\n            3.7253957241773605e-02 -5.7676959037780762e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 83 4.8632645048201084e-03</internalNodes>\n          <leafValues>\n            -6.7035257816314697e-02 3.1131938099861145e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 250 2.6089766994118690e-02</internalNodes>\n          <leafValues>\n            -8.2920446991920471e-02 3.0445784330368042e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 625 -1.9001008477061987e-03</internalNodes>\n          <leafValues>\n            -4.3419414758682251e-01 4.6812325716018677e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 891 -6.0952613130211830e-03</internalNodes>\n          <leafValues>\n            -5.1850622892379761e-01 3.6754775792360306e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 564 1.2120242230594158e-02</internalNodes>\n          <leafValues>\n            -7.4773810803890228e-02 2.6738941669464111e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 817 -1.8978580832481384e-02</internalNodes>\n          <leafValues>\n            2.5657230615615845e-01 -8.0304212868213654e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 338 4.3438978493213654e-02</internalNodes>\n          <leafValues>\n            -6.2818735837936401e-02 3.2261833548545837e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 773 9.4384723342955112e-04</internalNodes>\n          <leafValues>\n            -9.8582215607166290e-02 2.2370135784149170e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 519 -4.1803726926445961e-03</internalNodes>\n          <leafValues>\n            -4.9802374839782715e-01 4.3809909373521805e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 195 -9.7246468067169189e-03</internalNodes>\n          <leafValues>\n            2.2823798656463623e-01 -9.8547600209712982e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 658 2.7193846181035042e-03</internalNodes>\n          <leafValues>\n            -9.1188244521617889e-02 2.2684387862682343e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 174 6.2224082648754120e-03</internalNodes>\n          <leafValues>\n            3.2258503139019012e-02 -6.0108250379562378e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 77 -4.8602908849716187e-01</internalNodes>\n          <leafValues>\n            6.3337916135787964e-01 -3.3006772398948669e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 550 -5.3604291751980782e-03</internalNodes>\n          <leafValues>\n            2.9434949159622192e-01 -6.1312302947044373e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 541 5.5021280422806740e-03</internalNodes>\n          <leafValues>\n            4.1839476674795151e-02 -4.5681878924369812e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 326 -1.3823953922837973e-03</internalNodes>\n          <leafValues>\n            1.6067574918270111e-01 -1.1796293407678604e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 514 2.0954519510269165e-02</internalNodes>\n          <leafValues>\n            -5.7253565639257431e-02 3.3830171823501587e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 409 7.4234008789062500e-03</internalNodes>\n          <leafValues>\n            -7.4798591434955597e-02 2.6430690288543701e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 578 2.1767318248748779e-03</internalNodes>\n          <leafValues>\n            -8.0530151724815369e-02 2.5947657227516174e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 623 1.8930230289697647e-03</internalNodes>\n          <leafValues>\n            -8.1788897514343262e-02 2.2988820075988770e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 533 6.9275917485356331e-03</internalNodes>\n          <leafValues>\n            2.6962997391819954e-02 -7.6910203695297241e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 334 6.7140227183699608e-03</internalNodes>\n          <leafValues>\n            2.3244854062795639e-02 -6.8406605720520020e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 632 -3.4494437277317047e-02</internalNodes>\n          <leafValues>\n            -6.5257686376571655e-01 2.4584138765931129e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 787 1.9636256620287895e-03</internalNodes>\n          <leafValues>\n            -9.1118760406970978e-02 2.0629465579986572e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 14 -->\n    <_>\n      <maxWeakCount>80</maxWeakCount>\n      <stageThreshold>-1.3304495811462402e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 572 -9.1053368523716927e-03</internalNodes>\n          <leafValues>\n            4.8031216859817505e-01 -9.3147851526737213e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 715 -2.1384856663644314e-03</internalNodes>\n          <leafValues>\n            3.4027156233787537e-01 -1.4834050834178925e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 953 1.2453617528080940e-02</internalNodes>\n          <leafValues>\n            -8.0359503626823425e-02 4.7585478425025940e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 198 5.0965799018740654e-03</internalNodes>\n          <leafValues>\n            -1.6364066302776337e-01 2.9590085148811340e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 477 -3.1894792336970568e-03</internalNodes>\n          <leafValues>\n            1.7039565742015839e-01 -2.1295401453971863e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 314 -1.4799979981034994e-03</internalNodes>\n          <leafValues>\n            -4.1050529479980469e-01 5.3783610463142395e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 66 6.0710287652909756e-03</internalNodes>\n          <leafValues>\n            -1.5162153542041779e-01 1.8406888842582703e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 401 4.3081510812044144e-03</internalNodes>\n          <leafValues>\n            5.0293717533349991e-02 -4.6324169635772705e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 970 1.8933035898953676e-03</internalNodes>\n          <leafValues>\n            6.5655551850795746e-02 -3.9198148250579834e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 782 -1.6021143645048141e-02</internalNodes>\n          <leafValues>\n            2.2748421132564545e-01 -1.0609938949346542e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 928 -8.9298677630722523e-04</internalNodes>\n          <leafValues>\n            3.1164079904556274e-01 -1.1380065232515335e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 888 -1.4284942299127579e-03</internalNodes>\n          <leafValues>\n            2.7966943383216858e-01 -9.6580952405929565e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 822 2.5015190243721008e-02</internalNodes>\n          <leafValues>\n            4.2534209787845612e-02 -6.2623745203018188e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 583 -2.8645459096878767e-03</internalNodes>\n          <leafValues>\n            -4.1426309943199158e-01 5.1780503243207932e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 902 3.2044243998825550e-03</internalNodes>\n          <leafValues>\n            -1.1883606761693954e-01 1.9546063244342804e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 319 -1.0433372110128403e-02</internalNodes>\n          <leafValues>\n            2.6159819960594177e-01 -9.3164652585983276e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 287 -9.7299478948116302e-03</internalNodes>\n          <leafValues>\n            -4.9464005231857300e-01 5.0998747348785400e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 206 -2.1688457578420639e-02</internalNodes>\n          <leafValues>\n            5.6923902034759521e-01 -4.9958106130361557e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 38 -2.9492072761058807e-02</internalNodes>\n          <leafValues>\n            -6.1336356401443481e-01 4.7003138810396194e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 35 -2.4866596795618534e-03</internalNodes>\n          <leafValues>\n            -3.9986124634742737e-01 5.7781789451837540e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 965 4.0488247759640217e-03</internalNodes>\n          <leafValues>\n            4.6429801732301712e-02 -4.4500553607940674e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 735 -9.3909690622240305e-04</internalNodes>\n          <leafValues>\n            2.4617424607276917e-01 -9.0848781168460846e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 989 -5.2673118188977242e-03</internalNodes>\n          <leafValues>\n            -6.4129960536956787e-01 3.5207435488700867e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 806 -6.1755320057272911e-03</internalNodes>\n          <leafValues>\n            1.7039734125137329e-01 -1.3195209205150604e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 201 1.5832348726689816e-03</internalNodes>\n          <leafValues>\n            -9.2635877430438995e-02 2.5755262374877930e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 914 2.8633023612201214e-03</internalNodes>\n          <leafValues>\n            5.0923369824886322e-02 -4.6171438694000244e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 12 -2.3722708225250244e-02</internalNodes>\n          <leafValues>\n            -4.5609694719314575e-01 4.3677136301994324e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 419 5.8846692554652691e-03</internalNodes>\n          <leafValues>\n            5.1512561738491058e-02 -4.4899132847785950e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 201 -8.2513026427477598e-04</internalNodes>\n          <leafValues>\n            2.4914309382438660e-01 -8.9795768260955811e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 690 -2.9888928402215242e-03</internalNodes>\n          <leafValues>\n            -4.0133482217788696e-01 5.5449619889259338e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 237 1.8384978175163269e-02</internalNodes>\n          <leafValues>\n            4.9513496458530426e-02 -4.2024865746498108e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 947 -2.4238843470811844e-03</internalNodes>\n          <leafValues>\n            -6.7325645685195923e-01 2.8972415253520012e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 724 8.1563717685639858e-04</internalNodes>\n          <leafValues>\n            -1.4400914311408997e-01 1.5184181928634644e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 315 2.1788734011352062e-03</internalNodes>\n          <leafValues>\n            -8.2650899887084961e-02 2.5927037000656128e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 376 3.7263201083987951e-03</internalNodes>\n          <leafValues>\n            -6.3213117420673370e-02 3.8062268495559692e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 631 3.0819473322480917e-03</internalNodes>\n          <leafValues>\n            3.9066124707460403e-02 -6.2055569887161255e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 691 2.7417289093136787e-03</internalNodes>\n          <leafValues>\n            3.2166294753551483e-02 -5.6402361392974854e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 581 -3.8205389864742756e-03</internalNodes>\n          <leafValues>\n            2.5668358802795410e-01 -7.9121366143226624e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 61 -1.2516178190708160e-02</internalNodes>\n          <leafValues>\n            -7.0402121543884277e-01 3.2493114471435547e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 60 4.6941628679633141e-03</internalNodes>\n          <leafValues>\n            4.7352086752653122e-02 -4.0129581093788147e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 483 5.0501096993684769e-03</internalNodes>\n          <leafValues>\n            -1.0563907027244568e-01 2.3647888004779816e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 497 1.5111428685486317e-02</internalNodes>\n          <leafValues>\n            -6.7443214356899261e-02 2.7579694986343384e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 423 7.4835181236267090e-02</internalNodes>\n          <leafValues>\n            -6.2918186187744141e-02 3.6493194103240967e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 498 1.3086002320051193e-02</internalNodes>\n          <leafValues>\n            2.9699811711907387e-02 -7.4420636892318726e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 778 -5.4838880896568298e-03</internalNodes>\n          <leafValues>\n            2.2497597336769104e-01 -8.8018722832202911e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 261 3.3699360210448503e-03</internalNodes>\n          <leafValues>\n            -6.9213069975376129e-02 2.9263094067573547e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 118 7.7881952747702599e-03</internalNodes>\n          <leafValues>\n            5.8034870773553848e-02 -3.9803403615951538e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 421 -1.9298251718282700e-02</internalNodes>\n          <leafValues>\n            2.1273820102214813e-01 -9.6075013279914856e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 440 1.3059679418802261e-02</internalNodes>\n          <leafValues>\n            4.0989801287651062e-02 -4.9787399172782898e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 510 -2.2303011268377304e-02</internalNodes>\n          <leafValues>\n            -6.5915608406066895e-01 2.7258813381195068e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 260 -5.2872681990265846e-03</internalNodes>\n          <leafValues>\n            2.9461637139320374e-01 -6.9564543664455414e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 464 6.0780980857089162e-04</internalNodes>\n          <leafValues>\n            -9.5468334853649139e-02 2.0951601862907410e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 444 4.8917778767645359e-03</internalNodes>\n          <leafValues>\n            3.9317954331636429e-02 -5.3803342580795288e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 238 -1.0402110219001770e-01</internalNodes>\n          <leafValues>\n            5.4199391603469849e-01 -3.9763871580362320e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 687 3.8908584974706173e-03</internalNodes>\n          <leafValues>\n            3.8185238838195801e-02 -5.3280067443847656e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 353 8.0125425010919571e-03</internalNodes>\n          <leafValues>\n            -7.8310973942279816e-02 2.4926608800888062e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 954 -3.4356187097728252e-03</internalNodes>\n          <leafValues>\n            2.3415692150592804e-01 -9.2279240489006042e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 896 -5.2030328661203384e-03</internalNodes>\n          <leafValues>\n            -5.0255048274993896e-01 4.4738721102476120e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 555 -5.5568795651197433e-03</internalNodes>\n          <leafValues>\n            2.8329169750213623e-01 -7.0860259234905243e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 627 -7.6205702498555183e-03</internalNodes>\n          <leafValues>\n            2.5350978970527649e-01 -7.2612494230270386e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 309 2.7379104495048523e-01</internalNodes>\n          <leafValues>\n            -5.6398060172796249e-02 3.6085364222526550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 622 7.3067229241132736e-03</internalNodes>\n          <leafValues>\n            -6.2759615480899811e-02 3.1996127963066101e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 415 3.2574313227087259e-03</internalNodes>\n          <leafValues>\n            4.1181974112987518e-02 -4.9355933070182800e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 57 -1.2764024734497070e-01</internalNodes>\n          <leafValues>\n            2.5147503614425659e-01 -7.5440123677253723e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 530 -3.2227888703346252e-02</internalNodes>\n          <leafValues>\n            3.9548832178115845e-01 -4.7284111380577087e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 764 2.3350853472948074e-02</internalNodes>\n          <leafValues>\n            -7.2977773845195770e-02 2.5172060728073120e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 26 2.7610745746642351e-05</internalNodes>\n          <leafValues>\n            -1.3625738024711609e-01 1.3250400125980377e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 808 6.9611091166734695e-03</internalNodes>\n          <leafValues>\n            2.9794082045555115e-02 -5.8855760097503662e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 -9.9057564511895180e-04</internalNodes>\n          <leafValues>\n            2.5895762443542480e-01 -7.1211874485015869e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 218 -3.7965672090649605e-03</internalNodes>\n          <leafValues>\n            -6.4451014995574951e-01 3.5450231283903122e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 346 3.9518065750598907e-03</internalNodes>\n          <leafValues>\n            -6.3615679740905762e-02 3.0333930253982544e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 282 -5.4976264946162701e-03</internalNodes>\n          <leafValues>\n            -4.3285435438156128e-01 4.7526597976684570e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 721 7.1266246959567070e-03</internalNodes>\n          <leafValues>\n            -6.6810697317123413e-02 2.8491511940956116e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 912 -3.0366722494363785e-03</internalNodes>\n          <leafValues>\n            -4.3046197295188904e-01 4.4313102960586548e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 714 -1.7097850795835257e-03</internalNodes>\n          <leafValues>\n            2.5873449444770813e-01 -7.3857538402080536e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 702 -4.4310283847153187e-03</internalNodes>\n          <leafValues>\n            2.1451152861118317e-01 -8.7626561522483826e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 47 -3.9760642684996128e-03</internalNodes>\n          <leafValues>\n            -4.6889033913612366e-01 3.8441929966211319e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 683 -2.9741778969764709e-02</internalNodes>\n          <leafValues>\n            -5.5860131978988647e-01 3.0309556052088737e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 13 1.3289751112461090e-01</internalNodes>\n          <leafValues>\n            2.8634676709771156e-02 -5.6014162302017212e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 386 -1.1272695846855640e-03</internalNodes>\n          <leafValues>\n            1.7104774713516235e-01 -1.0818520933389664e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 15 -->\n    <_>\n      <maxWeakCount>83</maxWeakCount>\n      <stageThreshold>-1.2789946794509888e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 649 1.3820428401231766e-02</internalNodes>\n          <leafValues>\n            -1.0330537706613541e-01 4.5001628994941711e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 834 -1.0161036625504494e-02</internalNodes>\n          <leafValues>\n            3.2188063859939575e-01 -1.5805941820144653e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 398 -3.8372592534869909e-03</internalNodes>\n          <leafValues>\n            3.2943242788314819e-01 -1.1501405388116837e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 769 3.4624878317117691e-02</internalNodes>\n          <leafValues>\n            -9.8698168992996216e-02 5.4050970077514648e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 437 5.7967011816799641e-03</internalNodes>\n          <leafValues>\n            -1.1608023941516876e-01 2.8170758485794067e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 754 4.7825248911976814e-03</internalNodes>\n          <leafValues>\n            -1.3033217191696167e-01 2.4669390916824341e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 74 7.1141775697469711e-04</internalNodes>\n          <leafValues>\n            -2.0435671508312225e-01 1.1761441081762314e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 22 -2.9168082401156425e-02</internalNodes>\n          <leafValues>\n            -6.2692928314208984e-01 5.5113222450017929e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 796 2.1553519181907177e-03</internalNodes>\n          <leafValues>\n            5.3858544677495956e-02 -4.2096143960952759e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 894 -2.1254396997392178e-03</internalNodes>\n          <leafValues>\n            4.2603659629821777e-01 -5.0405498594045639e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 894 8.4234733367338777e-04</internalNodes>\n          <leafValues>\n            -9.3583315610885620e-02 2.6316204667091370e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 948 -1.6576268244534731e-03</internalNodes>\n          <leafValues>\n            -3.5802370309829712e-01 6.8603202700614929e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 554 6.5620511770248413e-02</internalNodes>\n          <leafValues>\n            -6.4758449792861938e-02 3.8339248299598694e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 361 -1.8485928885638714e-03</internalNodes>\n          <leafValues>\n            1.7337062954902649e-01 -1.3676019012928009e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 305 -1.8170465528964996e-01</internalNodes>\n          <leafValues>\n            4.0350264310836792e-01 -5.3196940571069717e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 848 -3.4317909739911556e-03</internalNodes>\n          <leafValues>\n            -5.2157330513000488e-01 4.6489212661981583e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 800 -2.7482535224407911e-03</internalNodes>\n          <leafValues>\n            -5.1078474521636963e-01 4.3557438999414444e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 731 -4.7894287854433060e-03</internalNodes>\n          <leafValues>\n            3.4981805086135864e-01 -6.5036587417125702e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 706 -3.3211666159331799e-03</internalNodes>\n          <leafValues>\n            2.1143883466720581e-01 -1.1754662543535233e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 677 3.5642951726913452e-02</internalNodes>\n          <leafValues>\n            3.7131600081920624e-02 -6.2165355682373047e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 481 -3.1561930663883686e-03</internalNodes>\n          <leafValues>\n            -4.2197883129119873e-01 4.7645546495914459e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 872 5.2224877290427685e-03</internalNodes>\n          <leafValues>\n            -1.0117106884717941e-01 2.1957167983055115e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 140 2.5758458301424980e-02</internalNodes>\n          <leafValues>\n            -9.6981137990951538e-02 3.0423089861869812e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 567 2.8883803170174360e-03</internalNodes>\n          <leafValues>\n            4.4947806745767593e-02 -5.5540132522583008e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 484 2.6014349423348904e-03</internalNodes>\n          <leafValues>\n            4.5947834849357605e-02 -4.1711980104446411e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 257 -7.8792509157210588e-04</internalNodes>\n          <leafValues>\n            1.5732656419277191e-01 -1.2769798934459686e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 252 4.2199464514851570e-03</internalNodes>\n          <leafValues>\n            -9.4008974730968475e-02 2.6868444681167603e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 571 -2.4246796965599060e-03</internalNodes>\n          <leafValues>\n            -4.9610009789466858e-01 4.6141009777784348e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 465 -1.8996626604348421e-03</internalNodes>\n          <leafValues>\n            2.6260954141616821e-01 -8.5721127688884735e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 945 1.8048105994239450e-03</internalNodes>\n          <leafValues>\n            7.1231566369533539e-02 -3.2751160860061646e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 249 -5.6593962945044041e-03</internalNodes>\n          <leafValues>\n            -5.0264769792556763e-01 4.0275387465953827e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 940 -3.4701074473559856e-03</internalNodes>\n          <leafValues>\n            -4.9033272266387939e-01 3.6995064467191696e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 766 1.1992279905825853e-03</internalNodes>\n          <leafValues>\n            -9.3982182443141937e-02 2.2527951002120972e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 528 -3.3614276908338070e-03</internalNodes>\n          <leafValues>\n            1.5591301023960114e-01 -1.3875743746757507e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 758 9.2923380434513092e-03</internalNodes>\n          <leafValues>\n            2.8368480503559113e-02 -6.3946157693862915e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 98 -1.6806223988533020e-01</internalNodes>\n          <leafValues>\n            -6.3519150018692017e-01 2.4432161822915077e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 614 -1.5483988681808114e-03</internalNodes>\n          <leafValues>\n            -4.9389392137527466e-01 3.4452050924301147e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 961 7.9401559196412563e-04</internalNodes>\n          <leafValues>\n            -1.6395612061023712e-01 1.1427336186170578e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 245 -5.3670424968004227e-03</internalNodes>\n          <leafValues>\n            -5.4615026712417603e-01 3.2274313271045685e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 923 -5.1019818056374788e-04</internalNodes>\n          <leafValues>\n            1.4040225744247437e-01 -1.2673649191856384e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 846 -9.6546392887830734e-04</internalNodes>\n          <leafValues>\n            2.3117446899414062e-01 -7.7826015651226044e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 994 -9.7423873376101255e-04</internalNodes>\n          <leafValues>\n            -4.0673121809959412e-01 4.6749390661716461e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 970 -4.7841384075582027e-03</internalNodes>\n          <leafValues>\n            -5.0288796424865723e-01 3.4186109900474548e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 89 6.8537802435457706e-03</internalNodes>\n          <leafValues>\n            5.0501946359872818e-02 -3.5414797067642212e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 651 4.1695050895214081e-03</internalNodes>\n          <leafValues>\n            -6.8471699953079224e-02 2.8334242105484009e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 391 2.6521178369875997e-05</internalNodes>\n          <leafValues>\n            -1.7646598815917969e-01 1.0057727992534637e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 674 -1.8193974392488599e-03</internalNodes>\n          <leafValues>\n            -5.2059328556060791e-01 3.4266594797372818e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 284 1.1680822353810072e-03</internalNodes>\n          <leafValues>\n            -7.5169444084167480e-02 2.3740953207015991e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 284 -5.8111123507842422e-04</internalNodes>\n          <leafValues>\n            2.4673853814601898e-01 -8.9036554098129272e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 789 5.5753946304321289e-02</internalNodes>\n          <leafValues>\n            -4.8898559063673019e-02 3.7110447883605957e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 388 -6.0947462916374207e-03</internalNodes>\n          <leafValues>\n            -4.8019152879714966e-01 3.6990296095609665e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 988 3.3249799162149429e-03</internalNodes>\n          <leafValues>\n            3.2017692923545837e-02 -4.8544195294380188e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 586 -1.1994136497378349e-02</internalNodes>\n          <leafValues>\n            2.7767661213874817e-01 -6.2677264213562012e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 940 1.9462420605123043e-03</internalNodes>\n          <leafValues>\n            5.7167824357748032e-02 -3.2460683584213257e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 482 -3.5742400214076042e-03</internalNodes>\n          <leafValues>\n            2.1856486797332764e-01 -7.7333562076091766e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 543 3.4013153053820133e-03</internalNodes>\n          <leafValues>\n            -9.4114005565643311e-02 2.3269242048263550e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 859 6.4494553953409195e-03</internalNodes>\n          <leafValues>\n            3.4765381366014481e-02 -5.1627504825592041e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 163 -1.2767435982823372e-02</internalNodes>\n          <leafValues>\n            2.5566741824150085e-01 -6.7411571741104126e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 230 2.2043818607926369e-03</internalNodes>\n          <leafValues>\n            -1.3278621435165405e-01 1.7942063510417938e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 229 -4.0757502429187298e-03</internalNodes>\n          <leafValues>\n            -3.8042715191841125e-01 4.4863421469926834e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 730 2.2066584788262844e-03</internalNodes>\n          <leafValues>\n            -7.0331946015357971e-02 2.5572371482849121e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 700 2.2714279592037201e-02</internalNodes>\n          <leafValues>\n            4.1653785854578018e-02 -4.4101753830909729e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 749 -1.1373223736882210e-02</internalNodes>\n          <leafValues>\n            3.2443967461585999e-01 -5.8059785515069962e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 835 1.8165379296988249e-03</internalNodes>\n          <leafValues>\n            -7.2351627051830292e-02 2.2953742742538452e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 235 -2.8745923191308975e-03</internalNodes>\n          <leafValues>\n            -3.9090758562088013e-01 4.6148840337991714e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 673 -5.7676057331264019e-03</internalNodes>\n          <leafValues>\n            2.4503223598003387e-01 -7.2128646075725555e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 177 1.2852130457758904e-02</internalNodes>\n          <leafValues>\n            -1.1143829673528671e-01 1.6758553683757782e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 141 -4.2651765048503876e-02</internalNodes>\n          <leafValues>\n            2.3846423625946045e-01 -7.9255387187004089e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 24 -6.8766735494136810e-03</internalNodes>\n          <leafValues>\n            -3.9145267009735107e-01 5.2240811288356781e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 15 -1.5351611375808716e-01</internalNodes>\n          <leafValues>\n            -5.4598790407180786e-01 2.9950620606541634e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 280 -1.7586871981620789e-02</internalNodes>\n          <leafValues>\n            2.4160921573638916e-01 -7.7404774725437164e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 557 2.8469474054872990e-03</internalNodes>\n          <leafValues>\n            -7.1562752127647400e-02 2.3895153403282166e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 493 -2.6379337534308434e-02</internalNodes>\n          <leafValues>\n            2.7370086312294006e-01 -6.5483018755912781e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 759 -6.6346197854727507e-04</internalNodes>\n          <leafValues>\n            1.7174075543880463e-01 -1.0841262340545654e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 736 1.4637422282248735e-03</internalNodes>\n          <leafValues>\n            -1.1365657299757004e-01 1.6123561561107635e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 569 -1.3798776781186461e-03</internalNodes>\n          <leafValues>\n            2.3192690312862396e-01 -7.5626462697982788e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 516 -6.8256547674536705e-03</internalNodes>\n          <leafValues>\n            2.4984428286552429e-01 -7.2457753121852875e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 312 -9.0181883424520493e-03</internalNodes>\n          <leafValues>\n            2.0358866453170776e-01 -9.5499873161315918e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 218 3.1383798923343420e-03</internalNodes>\n          <leafValues>\n            4.0804021060466766e-02 -4.9618390202522278e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 171 -1.8526764586567879e-02</internalNodes>\n          <leafValues>\n            2.2743205726146698e-01 -8.6628310382366180e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 594 -2.2562327794730663e-03</internalNodes>\n          <leafValues>\n            -3.2850387692451477e-01 5.9250634163618088e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 432 -4.1183121502399445e-03</internalNodes>\n          <leafValues>\n            -5.0281947851181030e-01 3.2455049455165863e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 96 4.8136096447706223e-03</internalNodes>\n          <leafValues>\n            3.1708184629678726e-02 -4.9248033761978149e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 16 -->\n    <_>\n      <maxWeakCount>90</maxWeakCount>\n      <stageThreshold>-1.2794928550720215e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 568 -4.7569684684276581e-03</internalNodes>\n          <leafValues>\n            4.4339472055435181e-01 -1.0486443340778351e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 795 -2.5423073675483465e-03</internalNodes>\n          <leafValues>\n            3.9922216534614563e-01 -1.0431514680385590e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 649 1.1162508279085159e-02</internalNodes>\n          <leafValues>\n            -1.5686489641666412e-01 2.3129878938198090e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 847 1.7287035007029772e-03</internalNodes>\n          <leafValues>\n            -1.5123696625232697e-01 2.9676723480224609e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 265 2.5025676935911179e-02</internalNodes>\n          <leafValues>\n            -5.1661748439073563e-02 4.8509848117828369e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 78 1.2561861425638199e-02</internalNodes>\n          <leafValues>\n            -1.1817755550146103e-01 2.6937758922576904e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 812 4.6598571352660656e-03</internalNodes>\n          <leafValues>\n            -1.3565555214881897e-01 2.1206009387969971e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 434 7.4310216587036848e-04</internalNodes>\n          <leafValues>\n            -1.7020516097545624e-01 1.5990819036960602e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 231 1.0259399190545082e-02</internalNodes>\n          <leafValues>\n            -1.4796857535839081e-01 1.8798792362213135e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 278 -1.2777388095855713e-02</internalNodes>\n          <leafValues>\n            -5.4041445255279541e-01 4.8501875251531601e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 489 -1.1427352204918861e-02</internalNodes>\n          <leafValues>\n            -5.1071381568908691e-01 4.8088576644659042e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 819 2.8340169592411257e-05</internalNodes>\n          <leafValues>\n            -2.0961570739746094e-01 1.0582420229911804e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 325 -6.4714960753917694e-03</internalNodes>\n          <leafValues>\n            -5.0862830877304077e-01 4.8812258988618851e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 367 1.3540303334593773e-02</internalNodes>\n          <leafValues>\n            2.7134107425808907e-02 -7.1317195892333984e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 1.8916794797405601e-03</internalNodes>\n          <leafValues>\n            -6.2187314033508301e-02 3.6233416199684143e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 51 1.0457850992679596e-02</internalNodes>\n          <leafValues>\n            4.0487006306648254e-02 -5.3173840045928955e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 893 -9.0822251513600349e-04</internalNodes>\n          <leafValues>\n            2.0090451836585999e-01 -1.0807146877050400e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 535 -1.9299473613500595e-02</internalNodes>\n          <leafValues>\n            -6.4914399385452271e-01 4.0790289640426636e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 663 -8.2283990923315287e-04</internalNodes>\n          <leafValues>\n            1.5708251297473907e-01 -1.3143004477024078e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 523 3.7520762998610735e-03</internalNodes>\n          <leafValues>\n            3.8761712610721588e-02 -4.9775493144989014e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 762 8.2424264401197433e-03</internalNodes>\n          <leafValues>\n            3.6369498819112778e-02 -5.1153117418289185e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 805 -1.1945937294512987e-03</internalNodes>\n          <leafValues>\n            1.3862735033035278e-01 -1.3917639851570129e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 985 -1.0589268989861012e-02</internalNodes>\n          <leafValues>\n            3.2981950044631958e-01 -7.6042778789997101e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 128 2.6780981570482254e-02</internalNodes>\n          <leafValues>\n            4.6954374760389328e-02 -4.5390221476554871e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 705 5.2458671852946281e-03</internalNodes>\n          <leafValues>\n            -4.7804936766624451e-02 4.0361502766609192e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 729 1.0518019553273916e-03</internalNodes>\n          <leafValues>\n            -1.0052871704101562e-01 1.9928459823131561e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 407 3.9210864342749119e-03</internalNodes>\n          <leafValues>\n            3.6381114274263382e-02 -5.4954099655151367e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 873 -1.5182888135313988e-02</internalNodes>\n          <leafValues>\n            2.8286656737327576e-01 -7.6106920838356018e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 279 2.7552489191293716e-03</internalNodes>\n          <leafValues>\n            -1.2027227133512497e-01 2.0814672112464905e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 869 1.3051946647465229e-02</internalNodes>\n          <leafValues>\n            3.6561664193868637e-02 -6.8296074867248535e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 849 4.4104140251874924e-03</internalNodes>\n          <leafValues>\n            2.9448021203279495e-02 -5.9994471073150635e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 799 2.3885946720838547e-03</internalNodes>\n          <leafValues>\n            3.9816807955503464e-02 -4.6116915345191956e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 551 2.3683100007474422e-03</internalNodes>\n          <leafValues>\n            4.9801617860794067e-02 -3.9546611905097961e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 707 -4.1178334504365921e-03</internalNodes>\n          <leafValues>\n            1.6903834044933319e-01 -1.1102814227342606e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 466 -2.7111368253827095e-03</internalNodes>\n          <leafValues>\n            2.0166625082492828e-01 -9.3054622411727905e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 360 -2.4442467838525772e-03</internalNodes>\n          <leafValues>\n            1.3419428467750549e-01 -1.4021472632884979e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 104 -6.9398069754242897e-03</internalNodes>\n          <leafValues>\n            -4.7041961550712585e-01 3.8327444344758987e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 14 -7.5376339256763458e-02</internalNodes>\n          <leafValues>\n            3.5196593403816223e-01 -5.8293107897043228e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 270 -7.3061959119513631e-04</internalNodes>\n          <leafValues>\n            2.0563322305679321e-01 -9.7862586379051208e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 339 -4.4864090159535408e-03</internalNodes>\n          <leafValues>\n            -4.3219071626663208e-01 4.6815373003482819e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 679 -3.3369990997016430e-03</internalNodes>\n          <leafValues>\n            -5.7968968152999878e-01 3.2250367105007172e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 636 -5.7756435126066208e-03</internalNodes>\n          <leafValues>\n            -6.3823670148849487e-01 2.6716385036706924e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 352 3.8174313958734274e-03</internalNodes>\n          <leafValues>\n            -7.8204549849033356e-02 2.4104152619838715e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 414 3.9163082838058472e-03</internalNodes>\n          <leafValues>\n            4.0961768478155136e-02 -4.2656800150871277e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 670 -3.7615487817674875e-03</internalNodes>\n          <leafValues>\n            2.0846015214920044e-01 -8.6097449064254761e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 371 -9.5803234726190567e-03</internalNodes>\n          <leafValues>\n            -7.0837384462356567e-01 2.8397833928465843e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 93 1.4632595703005791e-02</internalNodes>\n          <leafValues>\n            1.8669826909899712e-02 -7.4236363172531128e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 234 5.3799869492650032e-03</internalNodes>\n          <leafValues>\n            3.0915707349777222e-02 -4.7074958682060242e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 701 -2.4318110663443804e-03</internalNodes>\n          <leafValues>\n            3.0304560065269470e-01 -5.6169599294662476e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 641 3.8594864308834076e-02</internalNodes>\n          <leafValues>\n            2.5472542271018028e-02 -6.8472218513488770e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 125 1.6673290729522705e-01</internalNodes>\n          <leafValues>\n            -5.9959251433610916e-02 2.9591250419616699e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 854 -5.0129964947700500e-03</internalNodes>\n          <leafValues>\n            1.9718486070632935e-01 -9.4902090728282928e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 960 -9.3115903437137604e-03</internalNodes>\n          <leafValues>\n            2.8306549787521362e-01 -6.8168632686138153e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 804 -2.7176579460501671e-03</internalNodes>\n          <leafValues>\n            2.4883794784545898e-01 -7.3830418288707733e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 787 6.9358374457806349e-04</internalNodes>\n          <leafValues>\n            -1.2474948167800903e-01 1.6316886246204376e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 783 1.3523821253329515e-03</internalNodes>\n          <leafValues>\n            -7.3475763201713562e-02 3.0120497941970825e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 532 -2.6339504867792130e-02</internalNodes>\n          <leafValues>\n            4.7823980450630188e-01 -3.9222836494445801e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 866 3.3510509878396988e-02</internalNodes>\n          <leafValues>\n            -3.8013227283954620e-02 4.1955846548080444e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 694 -2.8097369067836553e-05</internalNodes>\n          <leafValues>\n            1.2249568104743958e-01 -1.4184975624084473e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 988 -4.0141213685274124e-03</internalNodes>\n          <leafValues>\n            -4.5551317930221558e-01 3.6903131753206253e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 934 5.7984986342489719e-03</internalNodes>\n          <leafValues>\n            3.9383981376886368e-02 -4.0305584669113159e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 753 7.5392555445432663e-03</internalNodes>\n          <leafValues>\n            -9.3996182084083557e-02 1.8520636856555939e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 943 4.5007485896348953e-03</internalNodes>\n          <leafValues>\n            4.2565450072288513e-02 -4.0628531575202942e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 500 5.0333794206380844e-03</internalNodes>\n          <leafValues>\n            -6.7051678895950317e-02 2.5224363803863525e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 511 8.7359821191057563e-04</internalNodes>\n          <leafValues>\n            -9.5469102263450623e-02 1.7292767763137817e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 771 3.0778967775404453e-03</internalNodes>\n          <leafValues>\n            -6.1908006668090820e-02 2.5266119837760925e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 835 -2.2874618880450726e-03</internalNodes>\n          <leafValues>\n            1.9187310338020325e-01 -8.5145145654678345e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 634 4.0947222150862217e-03</internalNodes>\n          <leafValues>\n            3.0908439308404922e-02 -5.5290663242340088e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 488 2.1358881145715714e-02</internalNodes>\n          <leafValues>\n            4.0033571422100067e-02 -3.8174301385879517e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 159 -4.5840246602892876e-03</internalNodes>\n          <leafValues>\n            -5.2027910947799683e-01 3.0034648254513741e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 232 9.8655056208372116e-03</internalNodes>\n          <leafValues>\n            2.1588459610939026e-02 -6.3089925050735474e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 223 2.5678081437945366e-03</internalNodes>\n          <leafValues>\n            -1.1046713590621948e-01 1.4713281393051147e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 688 -2.6078277733176947e-03</internalNodes>\n          <leafValues>\n            2.7103677392005920e-01 -5.9257075190544128e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 355 2.6908484287559986e-03</internalNodes>\n          <leafValues>\n            2.7514556422829628e-02 -6.3733005523681641e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 715 -1.3983637327328324e-03</internalNodes>\n          <leafValues>\n            1.5699537098407745e-01 -1.0462216287851334e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 433 1.0498151183128357e-01</internalNodes>\n          <leafValues>\n            3.0471364036202431e-02 -4.9990084767341614e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 491 -1.4592260122299194e-01</internalNodes>\n          <leafValues>\n            3.2007977366447449e-01 -5.2097231149673462e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 825 7.8754723072052002e-03</internalNodes>\n          <leafValues>\n            -6.7778728902339935e-02 2.8044930100440979e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 262 -5.3792521357536316e-03</internalNodes>\n          <leafValues>\n            2.1354769170284271e-01 -8.2902953028678894e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 420 -1.0021779686212540e-02</internalNodes>\n          <leafValues>\n            2.5685080885887146e-01 -7.3165819048881531e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 1 -4.2762188240885735e-03</internalNodes>\n          <leafValues>\n            1.7162682116031647e-01 -9.7696490585803986e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 67 1.0965526103973389e-02</internalNodes>\n          <leafValues>\n            -7.5053967535495758e-02 2.3615135252475739e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 328 -4.4276113621890545e-03</internalNodes>\n          <leafValues>\n            2.5747051835060120e-01 -6.3898853957653046e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 276 -8.6840223520994186e-03</internalNodes>\n          <leafValues>\n            -4.7478455305099487e-01 3.6790292710065842e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 938 2.8339526616036892e-03</internalNodes>\n          <leafValues>\n            4.0944386273622513e-02 -3.6514538526535034e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 790 7.6391562819480896e-02</internalNodes>\n          <leafValues>\n            -4.9489263445138931e-02 3.4142583608627319e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 148 1.9103729864582419e-03</internalNodes>\n          <leafValues>\n            -5.6329321116209030e-02 2.9177185893058777e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 304 5.2499733865261078e-02</internalNodes>\n          <leafValues>\n            2.8848636895418167e-02 -5.9306102991104126e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 956 -5.0793914124369621e-03</internalNodes>\n          <leafValues>\n            -5.0588577985763550e-01 2.8303196653723717e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 967 -7.1491668932139874e-03</internalNodes>\n          <leafValues>\n            -6.2660187482833862e-01 2.3113224655389786e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 17 -->\n    <_>\n      <maxWeakCount>88</maxWeakCount>\n      <stageThreshold>-1.2153301239013672e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 803 3.5730558447539806e-03</internalNodes>\n          <leafValues>\n            -4.2218949645757675e-02 5.5067819356918335e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 520 1.0531613603234291e-02</internalNodes>\n          <leafValues>\n            -1.0848262906074524e-01 4.2079353332519531e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 570 -2.8240748215466738e-03</internalNodes>\n          <leafValues>\n            1.5155430138111115e-01 -2.2742147743701935e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 384 -1.6008135862648487e-03</internalNodes>\n          <leafValues>\n            2.9879093170166016e-01 -1.0573560744524002e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 90 -1.2082614004611969e-02</internalNodes>\n          <leafValues>\n            2.5803449749946594e-01 -1.1197961121797562e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 746 9.8490377422422171e-04</internalNodes>\n          <leafValues>\n            -1.8312133848667145e-01 1.3942104578018188e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 347 1.3184763491153717e-02</internalNodes>\n          <leafValues>\n            -1.0306112468242645e-01 2.5403776764869690e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 143 2.5388993322849274e-02</internalNodes>\n          <leafValues>\n            6.4101323485374451e-02 -4.2444714903831482e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 196 7.8083951957523823e-03</internalNodes>\n          <leafValues>\n            -7.8133262693881989e-02 3.2170715928077698e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 921 1.2125947978347540e-03</internalNodes>\n          <leafValues>\n            -1.4831624925136566e-01 1.6055701673030853e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 920 -5.7722916826605797e-03</internalNodes>\n          <leafValues>\n            -6.2254351377487183e-01 4.7926213592290878e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 987 -6.7740413360297680e-03</internalNodes>\n          <leafValues>\n            -6.4991837739944458e-01 1.9058052450418472e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 291 -2.8847754001617432e-03</internalNodes>\n          <leafValues>\n            -5.1574712991714478e-01 4.2939033359289169e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 922 -5.1092512905597687e-02</internalNodes>\n          <leafValues>\n            -7.1794927120208740e-01 3.0500946566462517e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 303 -3.0863287393003702e-03</internalNodes>\n          <leafValues>\n            -5.1027435064315796e-01 3.7360988557338715e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 593 -3.1833123648539186e-04</internalNodes>\n          <leafValues>\n            1.1626140773296356e-01 -1.7245446145534515e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 1.2636608444154263e-03</internalNodes>\n          <leafValues>\n            -7.4942886829376221e-02 2.7081242203712463e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 693 -2.7436314150691032e-02</internalNodes>\n          <leafValues>\n            -5.7718968391418457e-01 3.3168055117130280e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 342 -1.8837231909856200e-03</internalNodes>\n          <leafValues>\n            -3.0960574746131897e-01 6.1044581234455109e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 797 3.2289433293044567e-03</internalNodes>\n          <leafValues>\n            -6.8203814327716827e-02 2.9658797383308411e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 503 -3.6236688029021025e-03</internalNodes>\n          <leafValues>\n            -4.9605649709701538e-01 4.2492914944887161e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 135 -1.3776571722701192e-03</internalNodes>\n          <leafValues>\n            1.3447758555412292e-01 -1.3678476214408875e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 579 2.9051192104816437e-03</internalNodes>\n          <leafValues>\n            -1.2944447994232178e-01 1.4306847751140594e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 722 4.4553354382514954e-03</internalNodes>\n          <leafValues>\n            3.8421813398599625e-02 -4.5035859942436218e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 622 1.0964765213429928e-02</internalNodes>\n          <leafValues>\n            -4.8769049346446991e-02 3.9813303947448730e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 682 2.8863823972642422e-03</internalNodes>\n          <leafValues>\n            5.1313977688550949e-02 -3.6272794008255005e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 283 8.8652484118938446e-03</internalNodes>\n          <leafValues>\n            -9.4886533915996552e-02 2.1068450808525085e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 333 -1.9646657630801201e-02</internalNodes>\n          <leafValues>\n            2.2927023470401764e-01 -1.0384474694728851e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 684 -2.3328745737671852e-03</internalNodes>\n          <leafValues>\n            -3.0931735038757324e-01 6.4516365528106689e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 8 -4.0204055607318878e-02</internalNodes>\n          <leafValues>\n            2.7381995320320129e-01 -7.6448827981948853e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 100 1.9051276147365570e-02</internalNodes>\n          <leafValues>\n            4.9466736614704132e-02 -3.6089882254600525e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 936 1.1553505435585976e-02</internalNodes>\n          <leafValues>\n            -7.4454858899116516e-02 2.5223839282989502e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 76 6.0810474678874016e-03</internalNodes>\n          <leafValues>\n            4.9583721905946732e-02 -3.6660569906234741e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 212 5.4147411137819290e-03</internalNodes>\n          <leafValues>\n            3.2274514436721802e-02 -4.9895319342613220e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 544 4.6544210053980350e-03</internalNodes>\n          <leafValues>\n            2.5989409536123276e-02 -6.1053085327148438e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 166 2.4446439929306507e-03</internalNodes>\n          <leafValues>\n            -1.2073440849781036e-01 1.4529803395271301e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 698 4.6318914974108338e-04</internalNodes>\n          <leafValues>\n            -1.0553400218486786e-01 1.7337696254253387e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 642 -3.7485856562852859e-02</internalNodes>\n          <leafValues>\n            -4.0581890940666199e-01 4.1759915649890900e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 529 -2.0438145846128464e-02</internalNodes>\n          <leafValues>\n            2.9171264171600342e-01 -6.6287793219089508e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 524 -3.8345486391335726e-03</internalNodes>\n          <leafValues>\n            1.5750087797641754e-01 -1.2569475173950195e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 884 8.8059913832694292e-04</internalNodes>\n          <leafValues>\n            -1.0610871762037277e-01 1.7642241716384888e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 33 2.0514219067990780e-03</internalNodes>\n          <leafValues>\n            3.4303460270166397e-02 -5.5235451459884644e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 851 -3.5282317548990250e-03</internalNodes>\n          <leafValues>\n            -5.3414058685302734e-01 3.0512372031807899e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 506 6.1051873490214348e-03</internalNodes>\n          <leafValues>\n            -8.4812760353088379e-02 1.9969700276851654e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 137 -6.4141638576984406e-03</internalNodes>\n          <leafValues>\n            -4.0772309899330139e-01 4.3864764273166656e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 823 1.7272554337978363e-02</internalNodes>\n          <leafValues>\n            2.1965105086565018e-02 -6.9809681177139282e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 512 -1.9691141787916422e-03</internalNodes>\n          <leafValues>\n            1.8511210381984711e-01 -9.0554594993591309e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 59 -5.5513512343168259e-03</internalNodes>\n          <leafValues>\n            -4.2040807008743286e-01 4.0062893182039261e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 626 -1.1905157566070557e-01</internalNodes>\n          <leafValues>\n            -6.4312189817428589e-01 2.3472266271710396e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 290 4.0823101997375488e-02</internalNodes>\n          <leafValues>\n            -7.3068141937255859e-02 2.4851579964160919e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 119 -8.1011475995182991e-03</internalNodes>\n          <leafValues>\n            2.2747313976287842e-01 -7.5412914156913757e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 87 4.7750310041010380e-03</internalNodes>\n          <leafValues>\n            -7.8901365399360657e-02 2.3182301223278046e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 404 -2.7586806565523148e-02</internalNodes>\n          <leafValues>\n            -6.4926701784133911e-01 2.5375340133905411e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 907 4.3069543316960335e-03</internalNodes>\n          <leafValues>\n            2.4360222741961479e-02 -5.7372909784317017e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 385 -6.1931653181090951e-04</internalNodes>\n          <leafValues>\n            2.2557340562343597e-01 -7.5787223875522614e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 50 -1.1459679901599884e-01</internalNodes>\n          <leafValues>\n            3.0668416619300842e-01 -5.2840072661638260e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 239 3.1560026109218597e-02</internalNodes>\n          <leafValues>\n            -9.5666781067848206e-02 1.7659574747085571e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 871 1.5142546035349369e-03</internalNodes>\n          <leafValues>\n            -9.2694908380508423e-02 2.0833927392959595e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 731 4.7312509268522263e-03</internalNodes>\n          <leafValues>\n            -4.9851816147565842e-02 3.4422698616981506e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 253 -5.9051956050097942e-03</internalNodes>\n          <leafValues>\n            -4.6798244118690491e-01 3.6009732633829117e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 703 3.3569703809916973e-03</internalNodes>\n          <leafValues>\n            -5.1445800811052322e-02 3.3950069546699524e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 966 -1.1821147799491882e-01</internalNodes>\n          <leafValues>\n            4.6877983212471008e-01 -3.2708466053009033e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 363 -8.8651233818382025e-04</internalNodes>\n          <leafValues>\n            1.5177871286869049e-01 -1.0880727320909500e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 680 -2.5330238044261932e-02</internalNodes>\n          <leafValues>\n            1.7184022068977356e-01 -9.8979160189628601e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 770 5.5901473388075829e-03</internalNodes>\n          <leafValues>\n            -7.1004293859004974e-02 2.7359166741371155e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 189 1.2344302609562874e-02</internalNodes>\n          <leafValues>\n            3.2738436013460159e-02 -5.2876019477844238e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 348 -7.4871592223644257e-03</internalNodes>\n          <leafValues>\n            -5.1955360174179077e-01 2.7597136795520782e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 646 -2.6753707788884640e-03</internalNodes>\n          <leafValues>\n            -4.7180628776550293e-01 3.1411368399858475e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 168 -3.2419776543974876e-03</internalNodes>\n          <leafValues>\n            1.5980260074138641e-01 -9.5776490867137909e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 169 8.8083129376173019e-03</internalNodes>\n          <leafValues>\n            -8.2104682922363281e-02 2.0850872993469238e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 58 2.7282098308205605e-03</internalNodes>\n          <leafValues>\n            6.1908718198537827e-02 -2.6338595151901245e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 671 5.0587565638124943e-03</internalNodes>\n          <leafValues>\n            -8.2083821296691895e-02 1.9557759165763855e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 708 -2.1199107170104980e-02</internalNodes>\n          <leafValues>\n            -5.0425887107849121e-01 3.0914928764104843e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 723 3.4958114847540855e-03</internalNodes>\n          <leafValues>\n            -8.2294017076492310e-02 1.9164223968982697e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 842 1.5914414543658495e-03</internalNodes>\n          <leafValues>\n            -6.9352962076663971e-02 2.1474194526672363e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 193 -5.0045788288116455e-02</internalNodes>\n          <leafValues>\n            2.4582423269748688e-01 -6.2959901988506317e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 19 -4.1983526200056076e-02</internalNodes>\n          <leafValues>\n            -6.3210010528564453e-01 2.5985429063439369e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 402 -6.9432961754500866e-04</internalNodes>\n          <leafValues>\n            2.2444137930870056e-01 -7.0591680705547333e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 540 6.0177911072969437e-03</internalNodes>\n          <leafValues>\n            3.7622205913066864e-02 -4.1375440359115601e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 492 4.7936867922544479e-03</internalNodes>\n          <leafValues>\n            -9.0203136205673218e-02 1.7498855292797089e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 390 -4.7484524548053741e-03</internalNodes>\n          <leafValues>\n            -3.9998278021812439e-01 3.8966752588748932e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 620 -7.7324017882347107e-02</internalNodes>\n          <leafValues>\n            -4.8634868860244751e-01 2.9687402769923210e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 417 1.1184449307620525e-02</internalNodes>\n          <leafValues>\n            -4.9598570913076401e-02 3.2780852913856506e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 132 -1.0921864770352840e-02</internalNodes>\n          <leafValues>\n            1.7756749689579010e-01 -8.5219532251358032e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 357 4.5135535299777985e-02</internalNodes>\n          <leafValues>\n            2.8995228931307793e-02 -5.3758519887924194e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 341 -1.1866749264299870e-03</internalNodes>\n          <leafValues>\n            1.8304300308227539e-01 -8.5605643689632416e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 609 2.0626676268875599e-03</internalNodes>\n          <leafValues>\n            2.5438303127884865e-02 -5.9883767366409302e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 251 2.7453177608549595e-05</internalNodes>\n          <leafValues>\n            -1.3831512629985809e-01 1.0590004175901413e-01</leafValues></_></weakClassifiers></_>\n    <!-- stage 18 -->\n    <_>\n      <maxWeakCount>98</maxWeakCount>\n      <stageThreshold>-1.2823635339736938e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 840 -8.7535101920366287e-03</internalNodes>\n          <leafValues>\n            3.7845414876937866e-01 -1.2724789977073669e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 376 -5.7867290452122688e-03</internalNodes>\n          <leafValues>\n            4.6451708674430847e-01 -1.0028645396232605e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 467 -1.5636831521987915e-02</internalNodes>\n          <leafValues>\n            2.7137696743011475e-01 -1.3237486779689789e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 743 7.9419813118875027e-04</internalNodes>\n          <leafValues>\n            -2.2457434237003326e-01 1.8765783309936523e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 511 9.8101666662842035e-04</internalNodes>\n          <leafValues>\n            -1.1674020439386368e-01 2.3788549005985260e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 148 -1.1779682245105505e-03</internalNodes>\n          <leafValues>\n            2.5913080573081970e-01 -8.3949849009513855e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 330 9.6748135983943939e-03</internalNodes>\n          <leafValues>\n            -8.3296068012714386e-02 3.4700453281402588e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 307 2.9431451112031937e-03</internalNodes>\n          <leafValues>\n            4.6826824545860291e-02 -5.1865130662918091e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 918 -1.0496248723939061e-03</internalNodes>\n          <leafValues>\n            -2.9976195096969604e-01 6.9594070315361023e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 697 -1.6385620459914207e-02</internalNodes>\n          <leafValues>\n            2.1480703353881836e-01 -9.7807772457599640e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 910 4.9830954521894455e-03</internalNodes>\n          <leafValues>\n            2.2837642580270767e-02 -7.7743059396743774e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 796 -3.1421617604792118e-03</internalNodes>\n          <leafValues>\n            -5.6898134946823120e-01 3.6988433450460434e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 901 1.6069117933511734e-02</internalNodes>\n          <leafValues>\n            -1.0548119246959686e-01 1.9650301337242126e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 751 1.5043821185827255e-02</internalNodes>\n          <leafValues>\n            -1.0749972611665726e-01 2.0178599655628204e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 295 6.8444460630416870e-03</internalNodes>\n          <leafValues>\n            5.0306834280490875e-02 -4.3162798881530762e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 827 1.1850953102111816e-02</internalNodes>\n          <leafValues>\n            3.2905589789152145e-02 -5.1617246866226196e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 831 2.1246306598186493e-02</internalNodes>\n          <leafValues>\n            -6.3726536929607391e-02 3.0544599890708923e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 256 1.1852337047457695e-02</internalNodes>\n          <leafValues>\n            -8.9553833007812500e-02 2.9359081387519836e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 323 -2.5085010565817356e-03</internalNodes>\n          <leafValues>\n            2.2805334627628326e-01 -9.5263637602329254e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 752 7.5797801837325096e-03</internalNodes>\n          <leafValues>\n            3.8756053894758224e-02 -5.7552194595336914e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 86 5.4980744607746601e-03</internalNodes>\n          <leafValues>\n            4.6144284307956696e-02 -3.6506399512290955e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 208 -3.0190458055585623e-03</internalNodes>\n          <leafValues>\n            -2.9709556698799133e-01 7.5851216912269592e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 552 -7.0441095158457756e-03</internalNodes>\n          <leafValues>\n            1.6086654365062714e-01 -1.1914677917957306e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 364 -6.9178184494376183e-03</internalNodes>\n          <leafValues>\n            -4.1069602966308594e-01 4.4916272163391113e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 351 5.0740875303745270e-03</internalNodes>\n          <leafValues>\n            -7.4677795171737671e-02 2.4945564568042755e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 121 -1.0403880849480629e-02</internalNodes>\n          <leafValues>\n            -5.3336864709854126e-01 3.9480298757553101e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 323 2.3738082963973284e-03</internalNodes>\n          <leafValues>\n            -7.8084513545036316e-02 2.3774850368499756e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 391 2.7033074729843065e-05</internalNodes>\n          <leafValues>\n            -1.8558554351329803e-01 9.6640095114707947e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 167 2.9049259610474110e-03</internalNodes>\n          <leafValues>\n            4.6409133821725845e-02 -3.9720407128334045e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 181 -5.6298477575182915e-03</internalNodes>\n          <leafValues>\n            -4.5908093452453613e-01 3.7730857729911804e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 638 5.0751655362546444e-03</internalNodes>\n          <leafValues>\n            2.3507807403802872e-02 -6.4602053165435791e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 909 -7.5826002284884453e-04</internalNodes>\n          <leafValues>\n            1.2444372475147247e-01 -1.3639765977859497e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 11 -9.7201213240623474e-02</internalNodes>\n          <leafValues>\n            3.9986947178840637e-01 -4.4366274029016495e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 496 -2.3840454220771790e-01</internalNodes>\n          <leafValues>\n            -5.3094118833541870e-01 3.8410611450672150e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 114 -1.3428549282252789e-02</internalNodes>\n          <leafValues>\n            2.2794343531131744e-01 -7.7827021479606628e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 64 -5.0623202696442604e-04</internalNodes>\n          <leafValues>\n            1.5778008103370667e-01 -1.2732668220996857e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 931 -8.6578715126961470e-04</internalNodes>\n          <leafValues>\n            1.4809772372245789e-01 -1.1785575747489929e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 544 -2.7892580255866051e-03</internalNodes>\n          <leafValues>\n            -4.2324438691139221e-01 4.1194166988134384e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 654 2.9110969044268131e-03</internalNodes>\n          <leafValues>\n            -1.2145258486270905e-01 1.4758351445198059e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 122 -1.7908504605293274e-01</internalNodes>\n          <leafValues>\n            4.0684828162193298e-01 -4.6298943459987640e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 894 4.2685694643296301e-04</internalNodes>\n          <leafValues>\n            -9.4548642635345459e-02 1.8615303933620453e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 72 1.9871112704277039e-01</internalNodes>\n          <leafValues>\n            -5.6818448007106781e-02 3.2197028398513794e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 892 1.2496551498770714e-03</internalNodes>\n          <leafValues>\n            -7.0664338767528534e-02 2.5729593634605408e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 447 1.6119793057441711e-02</internalNodes>\n          <leafValues>\n            -5.0713617354631424e-02 3.9684635400772095e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 964 -2.5047704111784697e-03</internalNodes>\n          <leafValues>\n            -3.5733562707901001e-01 4.9460943788290024e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 672 5.2866833284497261e-03</internalNodes>\n          <leafValues>\n            3.2510578632354736e-02 -4.4326359033584595e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 633 -3.4677600488066673e-03</internalNodes>\n          <leafValues>\n            2.3254001140594482e-01 -7.3516972362995148e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 600 -3.3557973802089691e-03</internalNodes>\n          <leafValues>\n            2.3221854865550995e-01 -6.9719336926937103e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 801 -6.3276281580328941e-03</internalNodes>\n          <leafValues>\n            -4.0112924575805664e-01 4.3525256216526031e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 218 -4.3456726707518101e-03</internalNodes>\n          <leafValues>\n            -6.8020933866500854e-01 1.9806224852800369e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 604 6.2400596216320992e-03</internalNodes>\n          <leafValues>\n            1.8352568149566650e-02 -7.0223194360733032e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 979 3.3795731142163277e-03</internalNodes>\n          <leafValues>\n            4.3487045913934708e-02 -3.0831974744796753e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 937 1.3499217107892036e-02</internalNodes>\n          <leafValues>\n            -4.4923197478055954e-02 3.2624542713165283e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 408 -1.0585743002593517e-03</internalNodes>\n          <leafValues>\n            1.6033367812633514e-01 -9.8465800285339355e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 405 -5.3765797056257725e-03</internalNodes>\n          <leafValues>\n            2.6544988155364990e-01 -6.7050188779830933e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 980 -2.4880110286176205e-03</internalNodes>\n          <leafValues>\n            -2.9397118091583252e-01 5.4097402840852737e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 505 -2.1792344748973846e-02</internalNodes>\n          <leafValues>\n            -7.2506862878799438e-01 1.9187789410352707e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 714 4.7056311741471291e-03</internalNodes>\n          <leafValues>\n            -5.2215453237295151e-02 3.1615570187568665e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 669 -4.2645912617444992e-03</internalNodes>\n          <leafValues>\n            2.3567616939544678e-01 -6.8938009440898895e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 774 5.8556320145726204e-03</internalNodes>\n          <leafValues>\n            4.2000979185104370e-02 -4.6045160293579102e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 926 1.3632343616336584e-03</internalNodes>\n          <leafValues>\n            -6.5663956105709076e-02 2.3397234082221985e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 895 -6.0495175421237946e-03</internalNodes>\n          <leafValues>\n            -4.3943586945533752e-01 3.6742802709341049e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 308 6.7223357036709785e-03</internalNodes>\n          <leafValues>\n            1.9922675564885139e-02 -6.8767511844635010e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 917 -5.1960002630949020e-02</internalNodes>\n          <leafValues>\n            -7.5993520021438599e-01 1.5627101063728333e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 542 3.3762669190764427e-03</internalNodes>\n          <leafValues>\n            -7.7943108975887299e-02 1.9545321166515350e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 582 -1.8302195239812136e-03</internalNodes>\n          <leafValues>\n            1.9154363870620728e-01 -9.4946600496768951e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 71 -4.3824277818202972e-03</internalNodes>\n          <leafValues>\n            -5.3172159194946289e-01 2.8438575565814972e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 107 4.8605538904666901e-03</internalNodes>\n          <leafValues>\n            1.8084224313497543e-02 -7.0419138669967651e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 289 -5.0755832344293594e-03</internalNodes>\n          <leafValues>\n            1.3961549103260040e-01 -1.0557857155799866e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 349 9.0303886681795120e-03</internalNodes>\n          <leafValues>\n            -5.6681722402572632e-02 3.0537691712379456e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 52 1.7635107040405273e-01</internalNodes>\n          <leafValues>\n            -3.5581633448600769e-02 3.9358299970626831e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 728 1.1068049352616072e-03</internalNodes>\n          <leafValues>\n            -9.6729792654514313e-02 1.6677951812744141e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 162 1.1059102602303028e-02</internalNodes>\n          <leafValues>\n            2.9283966869115829e-02 -5.1121145486831665e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 236 -5.0462923943996429e-02</internalNodes>\n          <leafValues>\n            -4.2722624540328979e-01 3.1082244589924812e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 316 -3.8071773014962673e-03</internalNodes>\n          <leafValues>\n            2.9747742414474487e-01 -5.1289469003677368e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 373 -1.5183673240244389e-03</internalNodes>\n          <leafValues>\n            1.8215130269527435e-01 -1.0301912575960159e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 258 2.1069757640361786e-02</internalNodes>\n          <leafValues>\n            2.4503789842128754e-02 -5.8991265296936035e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 68 6.6435593180358410e-03</internalNodes>\n          <leafValues>\n            4.3313629925251007e-02 -3.1504327058792114e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 574 -8.2504414021968842e-03</internalNodes>\n          <leafValues>\n            -4.7998124361038208e-01 3.0433293431997299e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 617 -1.0892231017351151e-02</internalNodes>\n          <leafValues>\n            3.1449675559997559e-01 -5.2475348114967346e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 213 8.1554818898439407e-03</internalNodes>\n          <leafValues>\n            3.9224579930305481e-02 -3.8470247387886047e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 838 -5.4475883953273296e-03</internalNodes>\n          <leafValues>\n            -6.5578418970108032e-01 2.0117431879043579e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 487 -2.6005427935160697e-04</internalNodes>\n          <leafValues>\n            1.4328984916210175e-01 -9.8999619483947754e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 461 1.3821206521242857e-03</internalNodes>\n          <leafValues>\n            -5.2590593695640564e-02 2.7557003498077393e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 445 -1.1740636080503464e-02</internalNodes>\n          <leafValues>\n            2.7564841508865356e-01 -5.9799015522003174e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 941 2.7866149321198463e-03</internalNodes>\n          <leafValues>\n            5.0002526491880417e-02 -3.5232934355735779e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 962 6.6179647110402584e-03</internalNodes>\n          <leafValues>\n            -6.3348092138767242e-02 2.3150660097599030e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 297 -1.3244405854493380e-03</internalNodes>\n          <leafValues>\n            -2.6642721891403198e-01 5.5936500430107117e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 485 1.1830568313598633e-02</internalNodes>\n          <leafValues>\n            -6.9061063230037689e-02 2.1172530949115753e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 644 2.5925931986421347e-03</internalNodes>\n          <leafValues>\n            1.9716180860996246e-02 -7.7208590507507324e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 748 -2.8010653331875801e-03</internalNodes>\n          <leafValues>\n            1.3846111297607422e-01 -9.7015053033828735e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 144 -4.7637272626161575e-02</internalNodes>\n          <leafValues>\n            2.1245625615119934e-01 -7.0445045828819275e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 197 1.3677144888788462e-03</internalNodes>\n          <leafValues>\n            -8.5676178336143494e-02 1.9613882899284363e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 556 -1.3261453807353973e-01</internalNodes>\n          <leafValues>\n            4.3639957904815674e-01 -3.4653130918741226e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 69 7.1225965023040771e-01</internalNodes>\n          <leafValues>\n            1.9474601373076439e-02 -8.7232232093811035e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 149 -5.9057516045868397e-03</internalNodes>\n          <leafValues>\n            -3.7135502696037292e-01 3.5206548869609833e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 971 3.5532126203179359e-03</internalNodes>\n          <leafValues>\n            -6.6334858536720276e-02 2.3531165719032288e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 31 -1.9724387675523758e-02</internalNodes>\n          <leafValues>\n            2.5173032283782959e-01 -5.7575348764657974e-02</leafValues></_></weakClassifiers></_>\n    <!-- stage 19 -->\n    <_>\n      <maxWeakCount>100</maxWeakCount>\n      <stageThreshold>-1.3067311048507690e+00</stageThreshold>\n      <weakClassifiers>\n        <_>\n          <internalNodes>\n            0 -1 458 8.1832958385348320e-03</internalNodes>\n          <leafValues>\n            -1.1180391162633896e-01 3.9526882767677307e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 717 -5.5650249123573303e-03</internalNodes>\n          <leafValues>\n            3.3437621593475342e-01 -1.2654128670692444e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 577 8.1406952813267708e-04</internalNodes>\n          <leafValues>\n            -1.7086146771907806e-01 1.8384252488613129e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 113 -2.0645279437303543e-03</internalNodes>\n          <leafValues>\n            1.7057111859321594e-01 -1.7103828489780426e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 864 1.9037863239645958e-03</internalNodes>\n          <leafValues>\n            -1.6791534423828125e-01 1.5749432146549225e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 242 1.1136581189930439e-02</internalNodes>\n          <leafValues>\n            4.0173061192035675e-02 -3.7364640831947327e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 228 5.6379067245870829e-04</internalNodes>\n          <leafValues>\n            -1.6792711615562439e-01 1.4207355678081512e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 797 -3.3720356877893209e-03</internalNodes>\n          <leafValues>\n            2.5698736310005188e-01 -7.5178287923336029e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 710 -1.7311582341790199e-02</internalNodes>\n          <leafValues>\n            -5.2065086364746094e-01 4.7350786626338959e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 845 -3.3407085575163364e-03</internalNodes>\n          <leafValues>\n            -4.5184752345085144e-01 3.2597322016954422e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 661 -3.4317255020141602e-02</internalNodes>\n          <leafValues>\n            2.5700893998146057e-01 -8.3455510437488556e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 423 -6.8267658352851868e-02</internalNodes>\n          <leafValues>\n            2.8288829326629639e-01 -7.8631594777107239e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 951 2.8722581191686913e-05</internalNodes>\n          <leafValues>\n            -1.8466357886791229e-01 1.1576397716999054e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 267 9.9579263478517532e-03</internalNodes>\n          <leafValues>\n            -6.3400641083717346e-02 3.6796927452087402e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 733 -1.8424488604068756e-02</internalNodes>\n          <leafValues>\n            2.4584248661994934e-01 -9.4283707439899445e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 837 6.8876314908266068e-03</internalNodes>\n          <leafValues>\n            -9.9725127220153809e-02 2.8111982345581055e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 657 -2.2637452930212021e-03</internalNodes>\n          <leafValues>\n            -4.1033151745796204e-01 6.1188895255327225e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 191 -8.5531552031170577e-05</internalNodes>\n          <leafValues>\n            1.1543370783329010e-01 -1.6276736557483673e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 32 3.3203132450580597e-02</internalNodes>\n          <leafValues>\n            4.8811107873916626e-02 -3.7535405158996582e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 929 5.1993243396282196e-03</internalNodes>\n          <leafValues>\n            3.9811953902244568e-02 -4.8758861422538757e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 365 4.8818998038768768e-03</internalNodes>\n          <leafValues>\n            2.4118293076753616e-02 -6.7809182405471802e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 82 -7.2956003248691559e-02</internalNodes>\n          <leafValues>\n            1.8825025856494904e-01 -9.5193333923816681e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 836 9.4123989343643188e-02</internalNodes>\n          <leafValues>\n            -7.2761356830596924e-02 2.7999758720397949e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 718 1.0472428984940052e-03</internalNodes>\n          <leafValues>\n            -7.4624419212341309e-02 2.4220877885818481e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 446 8.0979522317647934e-03</internalNodes>\n          <leafValues>\n            -5.4950036108493805e-02 3.0833497643470764e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 463 -2.8517602477222681e-03</internalNodes>\n          <leafValues>\n            3.2442548871040344e-01 -7.1306072175502777e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 63 3.7457090802490711e-03</internalNodes>\n          <leafValues>\n            5.7812750339508057e-02 -3.3119776844978333e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 217 -3.9520347490906715e-03</internalNodes>\n          <leafValues>\n            -4.3750977516174316e-01 3.9293695241212845e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 865 -5.8175362646579742e-03</internalNodes>\n          <leafValues>\n            2.0937338471412659e-01 -8.1724949181079865e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 878 7.8594256192445755e-03</internalNodes>\n          <leafValues>\n            4.8747915774583817e-02 -4.1596582531929016e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 913 -6.7130924435332417e-04</internalNodes>\n          <leafValues>\n            1.4715777337551117e-01 -1.2916122376918793e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 62 -4.2964564636349678e-03</internalNodes>\n          <leafValues>\n            -3.5870963335037231e-01 4.8831127583980560e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 868 -3.8814521394670010e-03</internalNodes>\n          <leafValues>\n            -4.7464737296104431e-01 3.4466378390789032e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 950 -1.8017216352745891e-03</internalNodes>\n          <leafValues>\n            -3.5517925024032593e-01 4.9101348966360092e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 813 7.7566690742969513e-03</internalNodes>\n          <leafValues>\n            2.7035165578126907e-02 -5.5951416492462158e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 886 1.9125882536172867e-03</internalNodes>\n          <leafValues>\n            -6.3309118151664734e-02 2.5223699212074280e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 886 -9.9804997444152832e-04</internalNodes>\n          <leafValues>\n            2.4349449574947357e-01 -8.9007876813411713e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 97 -7.5093598570674658e-04</internalNodes>\n          <leafValues>\n            1.3702079653739929e-01 -1.2293258309364319e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 7 1.0788314975798130e-02</internalNodes>\n          <leafValues>\n            -7.3592424392700195e-02 2.3694764077663422e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 428 -1.2814668007194996e-03</internalNodes>\n          <leafValues>\n            1.7014959454536438e-01 -9.3263216316699982e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 851 3.5997035447508097e-03</internalNodes>\n          <leafValues>\n            2.4880735203623772e-02 -5.7666695117950439e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 410 5.9913634322583675e-03</internalNodes>\n          <leafValues>\n            -6.6571407020092010e-02 2.3750782012939453e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 299 3.7381309084594250e-03</internalNodes>\n          <leafValues>\n            3.7266705185174942e-02 -4.3619966506958008e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 372 8.8815446943044662e-03</internalNodes>\n          <leafValues>\n            3.0544634908437729e-02 -4.6924960613250732e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 243 -3.1860180199146271e-02</internalNodes>\n          <leafValues>\n            -4.8059463500976562e-01 3.1165035441517830e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 881 -5.4914336651563644e-03</internalNodes>\n          <leafValues>\n            1.7584608495235443e-01 -9.0091012418270111e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 821 -1.2325609102845192e-02</internalNodes>\n          <leafValues>\n            3.4678825736045837e-01 -5.6969922035932541e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 281 5.8694169856607914e-03</internalNodes>\n          <leafValues>\n            3.9381653070449829e-02 -4.6237498521804810e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 207 -5.0925426185131073e-03</internalNodes>\n          <leafValues>\n            -4.0191245079040527e-01 4.1170045733451843e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 636 4.5132841914892197e-03</internalNodes>\n          <leafValues>\n            2.7933681383728981e-02 -4.8419687151908875e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 665 2.2130757570266724e-02</internalNodes>\n          <leafValues>\n            2.1358741447329521e-02 -6.0434627532958984e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 597 -1.8624030053615570e-03</internalNodes>\n          <leafValues>\n            1.9556084275245667e-01 -7.8905813395977020e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 599 3.2466566190123558e-03</internalNodes>\n          <leafValues>\n            -8.3141714334487915e-02 2.5859814882278442e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 575 1.9641252234578133e-02</internalNodes>\n          <leafValues>\n            2.1901637315750122e-02 -7.2247391939163208e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 271 1.2722628191113472e-02</internalNodes>\n          <leafValues>\n            -4.9173772335052490e-02 3.1656193733215332e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 210 -3.9457585080526769e-04</internalNodes>\n          <leafValues>\n            1.7969387769699097e-01 -1.0087045282125473e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 88 -3.0111533123999834e-04</internalNodes>\n          <leafValues>\n            1.2916654348373413e-01 -1.5019074082374573e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 84 -4.1901473887264729e-03</internalNodes>\n          <leafValues>\n            1.6727919876575470e-01 -9.4101771712303162e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 186 -2.9096096754074097e-02</internalNodes>\n          <leafValues>\n            2.4397623538970947e-01 -6.5033406019210815e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 815 -3.0687432736158371e-02</internalNodes>\n          <leafValues>\n            -5.3695982694625854e-01 3.6870311945676804e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 596 8.9634142816066742e-02</internalNodes>\n          <leafValues>\n            -4.5044522732496262e-02 3.7668040394783020e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 765 -1.8486939370632172e-02</internalNodes>\n          <leafValues>\n            -4.5869186520576477e-01 3.6696173250675201e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 561 -2.0481455139815807e-03</internalNodes>\n          <leafValues>\n            1.9705456495285034e-01 -8.1085532903671265e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 160 7.9915560781955719e-03</internalNodes>\n          <leafValues>\n            2.6794398203492165e-02 -6.0658437013626099e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 368 -4.5167207717895508e-03</internalNodes>\n          <leafValues>\n            -3.5664665699005127e-01 4.1606105864048004e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 429 -8.8896900415420532e-03</internalNodes>\n          <leafValues>\n            -5.6794744729995728e-01 2.4264462292194366e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 601 -2.7863893657922745e-02</internalNodes>\n          <leafValues>\n            -6.6293621063232422e-01 1.7915287986397743e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 153 1.9837494473904371e-03</internalNodes>\n          <leafValues>\n            -5.5686347186565399e-02 2.7396288514137268e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 624 -2.9144049622118473e-03</internalNodes>\n          <leafValues>\n            -4.3623712658882141e-01 3.1940482556819916e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 924 -1.1720246402546763e-03</internalNodes>\n          <leafValues>\n            1.5299941599369049e-01 -8.8886320590972900e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 927 2.1249109413474798e-03</internalNodes>\n          <leafValues>\n            -7.1360021829605103e-02 2.0698173344135284e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 602 4.6013649553060532e-03</internalNodes>\n          <leafValues>\n            2.5328675284981728e-02 -5.1310408115386963e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 644 -9.4112986698746681e-04</internalNodes>\n          <leafValues>\n            -2.9404127597808838e-01 4.4868268072605133e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 719 5.2681900560855865e-03</internalNodes>\n          <leafValues>\n            -6.4163528382778168e-02 2.2999708354473114e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 652 1.4232876710593700e-03</internalNodes>\n          <leafValues>\n            -7.8037962317466736e-02 1.9061613082885742e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 858 -1.0191567242145538e-02</internalNodes>\n          <leafValues>\n            -5.7409489154815674e-01 2.2581731900572777e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 547 -4.9564028158783913e-03</internalNodes>\n          <leafValues>\n            2.4646909534931183e-01 -5.9094201773405075e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 545 2.2057720925658941e-03</internalNodes>\n          <leafValues>\n            -9.8776444792747498e-02 1.9191808998584747e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 809 -4.7279503196477890e-03</internalNodes>\n          <leafValues>\n            -2.9638877511024475e-01 4.7132529318332672e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 905 1.8900397699326277e-03</internalNodes>\n          <leafValues>\n            -1.2390431761741638e-01 1.2199163436889648e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 692 -3.9616838330402970e-04</internalNodes>\n          <leafValues>\n            -2.0177872478961945e-01 6.7829817533493042e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 378 1.5198520850390196e-03</internalNodes>\n          <leafValues>\n            -5.0418090075254440e-02 2.8014704585075378e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 377 -3.0729006975889206e-03</internalNodes>\n          <leafValues>\n            1.6384753584861755e-01 -9.6394442021846771e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 637 3.3707641065120697e-02</internalNodes>\n          <leafValues>\n            3.3062599599361420e-02 -4.3530252575874329e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 993 -2.7547087520360947e-03</internalNodes>\n          <leafValues>\n            -6.2498420476913452e-01 2.0407166332006454e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 993 1.0800797026604414e-03</internalNodes>\n          <leafValues>\n            4.3235320597887039e-02 -3.1784874200820923e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 981 -2.4060246068984270e-03</internalNodes>\n          <leafValues>\n            1.3923163712024689e-01 -9.8239123821258545e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 727 4.6191983856260777e-03</internalNodes>\n          <leafValues>\n            2.3523205891251564e-02 -6.0865134000778198e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 284 2.1874131634831429e-03</internalNodes>\n          <leafValues>\n            -4.4655255973339081e-02 3.2406413555145264e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 137 7.9257078468799591e-03</internalNodes>\n          <leafValues>\n            2.8643675148487091e-02 -5.0231784582138062e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 340 9.6561573445796967e-03</internalNodes>\n          <leafValues>\n            -6.7481219768524170e-02 2.0780794322490692e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 180 -4.3771188706159592e-02</internalNodes>\n          <leafValues>\n            2.0091144740581512e-01 -8.7350860238075256e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 28 -3.9570517838001251e-02</internalNodes>\n          <leafValues>\n            -6.9823634624481201e-01 2.2996466606855392e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 517 -7.4827047064900398e-03</internalNodes>\n          <leafValues>\n            -3.2485857605934143e-01 4.2747449129819870e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 863 -9.5894857076928020e-04</internalNodes>\n          <leafValues>\n            1.3692225515842438e-01 -1.0624063760042191e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 495 -5.6482471525669098e-02</internalNodes>\n          <leafValues>\n            2.7130955457687378e-01 -5.5133864283561707e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 526 -5.5641448125243187e-03</internalNodes>\n          <leafValues>\n            -6.5910613536834717e-01 2.6108600199222565e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 833 4.5432001352310181e-03</internalNodes>\n          <leafValues>\n            -1.0277131199836731e-01 1.4715240895748138e-01</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 804 -1.9441416952759027e-03</internalNodes>\n          <leafValues>\n            1.7929133772850037e-01 -7.8247167170047760e-02</leafValues></_>\n        <_>\n          <internalNodes>\n            0 -1 615 1.5584268840029836e-03</internalNodes>\n          <leafValues>\n            5.2101351320743561e-02 -2.7727204561233521e-01</leafValues></_></weakClassifiers></_></stages>\n  <features>\n    <_>\n      <rects>\n        <_>\n          0 0 6 1 -1.</_>\n        <_>\n          3 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 1 -1.</_>\n        <_>\n          4 0 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 2 -1.</_>\n        <_>\n          4 0 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 6 -1.</_>\n        <_>\n          0 0 4 3 2.</_>\n        <_>\n          4 3 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 8 12 -1.</_>\n        <_>\n          0 0 4 6 2.</_>\n        <_>\n          4 6 4 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 10 1 -1.</_>\n        <_>\n          5 0 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 10 6 -1.</_>\n        <_>\n          0 0 5 3 2.</_>\n        <_>\n          5 3 5 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 24 1 -1.</_>\n        <_>\n          6 0 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 24 2 -1.</_>\n        <_>\n          6 0 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 14 8 -1.</_>\n        <_>\n          0 0 7 4 2.</_>\n        <_>\n          7 4 7 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 16 8 -1.</_>\n        <_>\n          0 0 8 4 2.</_>\n        <_>\n          8 4 8 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 16 10 -1.</_>\n        <_>\n          0 0 8 5 2.</_>\n        <_>\n          8 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 24 1 -1.</_>\n        <_>\n          12 0 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 0 13 10 -1.</_>\n        <_>\n          0 5 13 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 1 16 10 -1.</_>\n        <_>\n          0 1 8 5 2.</_>\n        <_>\n          8 6 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 1 13 15 -1.</_>\n        <_>\n          0 6 13 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 2 8 12 -1.</_>\n        <_>\n          0 2 4 6 2.</_>\n        <_>\n          4 8 4 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 2 10 4 -1.</_>\n        <_>\n          0 2 5 2 2.</_>\n        <_>\n          5 4 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 4 24 2 -1.</_>\n        <_>\n          0 4 12 1 2.</_>\n        <_>\n          12 5 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 5 4 9 -1.</_>\n        <_>\n          0 8 4 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 5 24 2 -1.</_>\n        <_>\n          0 5 12 1 2.</_>\n        <_>\n          12 6 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 5 24 4 -1.</_>\n        <_>\n          0 5 12 2 2.</_>\n        <_>\n          12 7 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 5 8 -1.</_>\n        <_>\n          0 8 5 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 22 17 -1.</_>\n        <_>\n          11 6 11 17 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 24 2 -1.</_>\n        <_>\n          0 6 12 1 2.</_>\n        <_>\n          12 7 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 6 14 8 -1.</_>\n        <_>\n          0 10 14 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 2 3 -1.</_>\n        <_>\n          0 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 6 16 -1.</_>\n        <_>\n          3 7 3 16 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 4 9 -1.</_>\n        <_>\n          0 10 4 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 8 17 -1.</_>\n        <_>\n          4 7 4 17 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 7 24 2 -1.</_>\n        <_>\n          6 7 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 4 16 -1.</_>\n        <_>\n          2 8 2 16 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 8 24 6 -1.</_>\n        <_>\n          0 8 12 3 2.</_>\n        <_>\n          12 11 12 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 1 3 -1.</_>\n        <_>\n          0 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 7 2 -1.</_>\n        <_>\n          0 10 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 8 2 -1.</_>\n        <_>\n          0 10 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 22 2 -1.</_>\n        <_>\n          0 9 11 1 2.</_>\n        <_>\n          11 10 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 24 2 -1.</_>\n        <_>\n          0 9 12 1 2.</_>\n        <_>\n          12 10 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 9 24 4 -1.</_>\n        <_>\n          0 9 12 2 2.</_>\n        <_>\n          12 11 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 2 2 -1.</_>\n        <_>\n          0 11 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 4 10 -1.</_>\n        <_>\n          2 10 2 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 4 3 -1.</_>\n        <_>\n          0 11 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 5 3 -1.</_>\n        <_>\n          0 11 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 22 2 -1.</_>\n        <_>\n          0 10 11 1 2.</_>\n        <_>\n          11 11 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 24 2 -1.</_>\n        <_>\n          0 10 12 1 2.</_>\n        <_>\n          12 11 12 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 24 4 -1.</_>\n        <_>\n          0 10 12 2 2.</_>\n        <_>\n          12 12 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 10 24 14 -1.</_>\n        <_>\n          12 10 12 14 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 3 3 -1.</_>\n        <_>\n          0 12 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 6 8 -1.</_>\n        <_>\n          0 11 3 4 2.</_>\n        <_>\n          3 15 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 11 24 4 -1.</_>\n        <_>\n          0 11 12 2 2.</_>\n        <_>\n          12 13 12 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 12 18 7 -1.</_>\n        <_>\n          9 12 9 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 12 22 2 -1.</_>\n        <_>\n          0 12 11 1 2.</_>\n        <_>\n          11 13 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 12 24 6 -1.</_>\n        <_>\n          12 12 12 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 13 24 3 -1.</_>\n        <_>\n          6 13 12 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 14 8 7 -1.</_>\n        <_>\n          4 14 4 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 14 12 10 -1.</_>\n        <_>\n          0 14 6 5 2.</_>\n        <_>\n          6 19 6 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 14 18 8 -1.</_>\n        <_>\n          6 14 6 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 14 20 10 -1.</_>\n        <_>\n          10 14 10 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 15 3 8 -1.</_>\n        <_>\n          1 15 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 16 3 7 -1.</_>\n        <_>\n          1 16 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 19 6 3 -1.</_>\n        <_>\n          0 20 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 19 9 3 -1.</_>\n        <_>\n          0 20 9 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 21 6 3 -1.</_>\n        <_>\n          0 22 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          0 21 7 3 -1.</_>\n        <_>\n          0 22 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 1 4 -1.</_>\n        <_>\n          1 2 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 12 3 -1.</_>\n        <_>\n          4 0 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 8 6 -1.</_>\n        <_>\n          1 0 4 3 2.</_>\n        <_>\n          5 3 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 8 4 -1.</_>\n        <_>\n          5 0 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 0 22 2 -1.</_>\n        <_>\n          1 0 11 1 2.</_>\n        <_>\n          12 1 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 3 21 15 -1.</_>\n        <_>\n          8 8 7 5 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 3 11 3 -1.</_>\n        <_>\n          1 4 11 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 5 3 3 -1.</_>\n        <_>\n          1 6 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 5 21 6 -1.</_>\n        <_>\n          8 7 7 2 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 5 22 2 -1.</_>\n        <_>\n          1 5 11 1 2.</_>\n        <_>\n          12 6 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 4 3 -1.</_>\n        <_>\n          1 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 5 3 -1.</_>\n        <_>\n          1 7 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 22 2 -1.</_>\n        <_>\n          1 6 11 1 2.</_>\n        <_>\n          12 7 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 22 17 -1.</_>\n        <_>\n          12 6 11 17 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 6 20 3 -1.</_>\n        <_>\n          1 7 20 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 12 6 -1.</_>\n        <_>\n          5 9 4 2 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 8 6 -1.</_>\n        <_>\n          1 9 8 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 20 4 -1.</_>\n        <_>\n          1 7 10 2 2.</_>\n        <_>\n          11 9 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 7 22 12 -1.</_>\n        <_>\n          1 11 22 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 8 2 -1.</_>\n        <_>\n          1 8 4 1 2.</_>\n        <_>\n          5 9 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 9 3 -1.</_>\n        <_>\n          1 9 9 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 8 22 4 -1.</_>\n        <_>\n          1 8 11 2 2.</_>\n        <_>\n          12 10 11 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 9 20 2 -1.</_>\n        <_>\n          1 9 10 1 2.</_>\n        <_>\n          11 10 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 4 3 -1.</_>\n        <_>\n          3 10 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 4 4 -1.</_>\n        <_>\n          1 11 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 22 2 -1.</_>\n        <_>\n          1 10 11 1 2.</_>\n        <_>\n          12 11 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 10 21 4 -1.</_>\n        <_>\n          1 11 21 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 11 3 13 -1.</_>\n        <_>\n          2 11 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 13 3 10 -1.</_>\n        <_>\n          2 13 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 14 22 2 -1.</_>\n        <_>\n          1 14 11 1 2.</_>\n        <_>\n          12 15 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 16 3 1 -1.</_>\n        <_>\n          2 17 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 17 4 1 -1.</_>\n        <_>\n          2 18 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          1 19 4 1 -1.</_>\n        <_>\n          2 20 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 4 1 -1.</_>\n        <_>\n          4 0 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 12 14 -1.</_>\n        <_>\n          6 0 4 14 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 20 1 -1.</_>\n        <_>\n          7 0 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 0 22 1 -1.</_>\n        <_>\n          13 0 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 2 22 2 -1.</_>\n        <_>\n          2 2 11 1 2.</_>\n        <_>\n          13 3 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 2 22 10 -1.</_>\n        <_>\n          2 2 11 5 2.</_>\n        <_>\n          13 7 11 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 3 20 1 -1.</_>\n        <_>\n          7 3 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 3 20 2 -1.</_>\n        <_>\n          2 3 10 1 2.</_>\n        <_>\n          12 4 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 4 3 3 -1.</_>\n        <_>\n          2 5 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 4 20 2 -1.</_>\n        <_>\n          2 4 10 1 2.</_>\n        <_>\n          12 5 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 5 2 3 -1.</_>\n        <_>\n          2 6 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 5 20 2 -1.</_>\n        <_>\n          2 5 10 1 2.</_>\n        <_>\n          12 6 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 6 20 2 -1.</_>\n        <_>\n          2 6 10 1 2.</_>\n        <_>\n          12 7 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 6 21 18 -1.</_>\n        <_>\n          2 15 21 9 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 6 2 -1.</_>\n        <_>\n          2 7 3 1 2.</_>\n        <_>\n          5 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 9 6 -1.</_>\n        <_>\n          5 9 3 2 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 7 3 -1.</_>\n        <_>\n          2 8 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 18 2 -1.</_>\n        <_>\n          2 8 18 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 18 3 -1.</_>\n        <_>\n          2 8 18 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 7 21 4 -1.</_>\n        <_>\n          2 8 21 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 8 4 2 -1.</_>\n        <_>\n          4 8 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 8 22 2 -1.</_>\n        <_>\n          2 8 11 1 2.</_>\n        <_>\n          13 9 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 9 7 2 -1.</_>\n        <_>\n          2 9 7 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 9 20 3 -1.</_>\n        <_>\n          2 10 20 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 11 22 2 -1.</_>\n        <_>\n          2 11 11 1 2.</_>\n        <_>\n          13 12 11 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 12 22 7 -1.</_>\n        <_>\n          13 12 11 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 12 19 10 -1.</_>\n        <_>\n          2 17 19 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 13 3 8 -1.</_>\n        <_>\n          3 13 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 13 20 10 -1.</_>\n        <_>\n          12 13 10 10 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 15 6 2 -1.</_>\n        <_>\n          5 15 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 15 6 3 -1.</_>\n        <_>\n          5 15 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 15 20 4 -1.</_>\n        <_>\n          2 15 10 2 2.</_>\n        <_>\n          12 17 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 16 6 6 -1.</_>\n        <_>\n          2 16 3 3 2.</_>\n        <_>\n          5 19 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 17 3 1 -1.</_>\n        <_>\n          3 18 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 18 3 5 -1.</_>\n        <_>\n          3 18 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          2 21 12 3 -1.</_>\n        <_>\n          8 21 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 2 20 1 -1.</_>\n        <_>\n          3 2 10 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 3 8 6 -1.</_>\n        <_>\n          5 3 4 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 4 6 4 -1.</_>\n        <_>\n          3 4 3 2 2.</_>\n        <_>\n          6 6 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 4 18 2 -1.</_>\n        <_>\n          3 4 9 1 2.</_>\n        <_>\n          12 5 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 20 2 -1.</_>\n        <_>\n          3 5 10 1 2.</_>\n        <_>\n          13 6 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 5 20 6 -1.</_>\n        <_>\n          3 5 10 3 2.</_>\n        <_>\n          13 8 10 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 3 3 -1.</_>\n        <_>\n          3 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 16 8 -1.</_>\n        <_>\n          3 8 16 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 6 19 6 -1.</_>\n        <_>\n          3 8 19 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 5 4 -1.</_>\n        <_>\n          3 8 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 18 6 -1.</_>\n        <_>\n          3 7 9 3 2.</_>\n        <_>\n          12 10 9 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 17 6 -1.</_>\n        <_>\n          3 9 17 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 7 19 2 -1.</_>\n        <_>\n          3 8 19 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 8 18 4 -1.</_>\n        <_>\n          3 8 9 2 2.</_>\n        <_>\n          12 10 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 8 20 4 -1.</_>\n        <_>\n          3 8 10 2 2.</_>\n        <_>\n          13 10 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 3 1 -1.</_>\n        <_>\n          4 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 3 3 -1.</_>\n        <_>\n          4 10 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 8 9 -1.</_>\n        <_>\n          3 12 8 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 20 2 -1.</_>\n        <_>\n          3 9 10 1 2.</_>\n        <_>\n          13 10 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 9 19 9 -1.</_>\n        <_>\n          3 12 19 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 3 1 -1.</_>\n        <_>\n          4 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 3 1 -1.</_>\n        <_>\n          4 11 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 3 2 -1.</_>\n        <_>\n          4 11 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 2 4 -1.</_>\n        <_>\n          3 11 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 8 3 -1.</_>\n        <_>\n          3 11 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 10 18 4 -1.</_>\n        <_>\n          3 10 9 2 2.</_>\n        <_>\n          12 12 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 1 -1.</_>\n        <_>\n          4 12 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 3 8 -1.</_>\n        <_>\n          4 11 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 4 8 -1.</_>\n        <_>\n          3 15 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 18 2 -1.</_>\n        <_>\n          3 11 9 1 2.</_>\n        <_>\n          12 12 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 11 10 2 -1.</_>\n        <_>\n          3 11 10 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 3 2 -1.</_>\n        <_>\n          4 13 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 12 8 12 -1.</_>\n        <_>\n          3 16 8 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 15 4 3 -1.</_>\n        <_>\n          5 15 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 16 3 1 -1.</_>\n        <_>\n          4 17 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 16 6 4 -1.</_>\n        <_>\n          3 16 3 2 2.</_>\n        <_>\n          6 18 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 16 8 6 -1.</_>\n        <_>\n          3 16 4 3 2.</_>\n        <_>\n          7 19 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          3 20 3 4 -1.</_>\n        <_>\n          4 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 0 6 4 -1.</_>\n        <_>\n          6 2 2 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 2 3 2 -1.</_>\n        <_>\n          5 2 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 2 16 2 -1.</_>\n        <_>\n          4 2 8 1 2.</_>\n        <_>\n          12 3 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 6 1 -1.</_>\n        <_>\n          6 3 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 9 3 -1.</_>\n        <_>\n          7 3 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 16 2 -1.</_>\n        <_>\n          4 3 8 1 2.</_>\n        <_>\n          12 4 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 9 6 -1.</_>\n        <_>\n          4 6 9 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 3 16 8 -1.</_>\n        <_>\n          4 7 16 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 1 4 -1.</_>\n        <_>\n          4 6 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 9 4 -1.</_>\n        <_>\n          7 7 3 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 16 2 -1.</_>\n        <_>\n          4 4 8 1 2.</_>\n        <_>\n          12 5 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 18 6 -1.</_>\n        <_>\n          4 6 18 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 4 20 6 -1.</_>\n        <_>\n          4 6 20 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 5 4 5 -1.</_>\n        <_>\n          6 5 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 5 16 6 -1.</_>\n        <_>\n          4 5 8 3 2.</_>\n        <_>\n          12 8 8 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 5 15 6 -1.</_>\n        <_>\n          4 7 15 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 1 3 -1.</_>\n        <_>\n          4 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 2 3 -1.</_>\n        <_>\n          4 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 6 2 -1.</_>\n        <_>\n          6 6 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 3 3 -1.</_>\n        <_>\n          4 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 6 6 2 -1.</_>\n        <_>\n          4 6 3 1 2.</_>\n        <_>\n          7 7 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 4 3 -1.</_>\n        <_>\n          4 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 15 6 -1.</_>\n        <_>\n          4 9 15 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 16 6 -1.</_>\n        <_>\n          4 9 16 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 7 17 3 -1.</_>\n        <_>\n          4 8 17 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 3 3 -1.</_>\n        <_>\n          5 9 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 2 3 -1.</_>\n        <_>\n          4 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 5 4 -1.</_>\n        <_>\n          4 9 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 8 18 4 -1.</_>\n        <_>\n          4 8 9 2 2.</_>\n        <_>\n          13 10 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 1 -1.</_>\n        <_>\n          5 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 3 1 -1.</_>\n        <_>\n          5 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 2 -1.</_>\n        <_>\n          4 9 1 1 2.</_>\n        <_>\n          5 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 2 4 -1.</_>\n        <_>\n          4 9 1 2 2.</_>\n        <_>\n          5 11 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 3 2 -1.</_>\n        <_>\n          4 9 3 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 6 6 -1.</_>\n        <_>\n          4 9 3 3 2.</_>\n        <_>\n          7 12 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 16 1 -1.</_>\n        <_>\n          8 9 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 16 2 -1.</_>\n        <_>\n          4 9 8 1 2.</_>\n        <_>\n          12 10 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 18 2 -1.</_>\n        <_>\n          4 9 9 1 2.</_>\n        <_>\n          13 10 9 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 9 11 4 -1.</_>\n        <_>\n          4 9 11 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 2 2 -1.</_>\n        <_>\n          4 10 1 1 2.</_>\n        <_>\n          5 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 3 1 -1.</_>\n        <_>\n          5 11 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 3 2 -1.</_>\n        <_>\n          5 11 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 3 14 -1.</_>\n        <_>\n          5 10 1 14 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 9 4 -1.</_>\n        <_>\n          4 10 9 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 10 4 -1.</_>\n        <_>\n          4 10 10 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 10 16 6 -1.</_>\n        <_>\n          4 12 16 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 1 -1.</_>\n        <_>\n          5 12 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 2 -1.</_>\n        <_>\n          5 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 4 -1.</_>\n        <_>\n          5 11 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 11 3 10 -1.</_>\n        <_>\n          4 16 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 3 1 -1.</_>\n        <_>\n          5 13 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 3 2 -1.</_>\n        <_>\n          5 12 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 1 6 -1.</_>\n        <_>\n          4 15 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 12 2 8 -1.</_>\n        <_>\n          4 16 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 13 3 1 -1.</_>\n        <_>\n          5 13 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 13 4 3 -1.</_>\n        <_>\n          6 13 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 13 9 5 -1.</_>\n        <_>\n          7 13 3 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 14 4 1 -1.</_>\n        <_>\n          6 14 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 3 2 -1.</_>\n        <_>\n          5 16 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 4 3 -1.</_>\n        <_>\n          6 15 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 9 4 -1.</_>\n        <_>\n          7 15 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 15 4 4 -1.</_>\n        <_>\n          4 16 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 17 3 1 -1.</_>\n        <_>\n          5 18 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 18 3 6 -1.</_>\n        <_>\n          5 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          4 20 3 4 -1.</_>\n        <_>\n          5 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 0 6 18 -1.</_>\n        <_>\n          7 0 2 18 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 4 12 -1.</_>\n        <_>\n          7 2 2 12 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 14 2 -1.</_>\n        <_>\n          5 2 7 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 2 15 6 -1.</_>\n        <_>\n          5 5 15 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 1 3 -1.</_>\n        <_>\n          4 4 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 2 3 -1.</_>\n        <_>\n          4 4 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 4 9 -1.</_>\n        <_>\n          7 3 2 9 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 9 3 -1.</_>\n        <_>\n          8 4 3 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 3 14 2 -1.</_>\n        <_>\n          5 3 7 1 2.</_>\n        <_>\n          12 4 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 2 3 -1.</_>\n        <_>\n          4 5 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 4 16 2 -1.</_>\n        <_>\n          5 4 8 1 2.</_>\n        <_>\n          13 5 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 1 3 -1.</_>\n        <_>\n          4 6 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 4 9 -1.</_>\n        <_>\n          5 8 4 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 14 2 -1.</_>\n        <_>\n          5 5 7 1 2.</_>\n        <_>\n          12 6 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 5 15 6 -1.</_>\n        <_>\n          5 7 15 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 1 2 -1.</_>\n        <_>\n          5 7 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 4 4 -1.</_>\n        <_>\n          5 7 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 14 2 -1.</_>\n        <_>\n          5 6 7 1 2.</_>\n        <_>\n          12 7 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 14 4 -1.</_>\n        <_>\n          5 7 14 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 14 6 -1.</_>\n        <_>\n          5 8 14 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 6 15 4 -1.</_>\n        <_>\n          5 7 15 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 1 3 -1.</_>\n        <_>\n          5 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 15 -1.</_>\n        <_>\n          6 7 2 15 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 1 -1.</_>\n        <_>\n          7 7 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 2 -1.</_>\n        <_>\n          5 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 3 -1.</_>\n        <_>\n          5 8 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 4 -1.</_>\n        <_>\n          5 8 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 3 6 -1.</_>\n        <_>\n          5 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 4 -1.</_>\n        <_>\n          5 9 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 4 6 -1.</_>\n        <_>\n          5 9 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 16 4 -1.</_>\n        <_>\n          5 7 8 2 2.</_>\n        <_>\n          13 9 8 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 14 2 -1.</_>\n        <_>\n          5 8 14 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 7 16 6 -1.</_>\n        <_>\n          5 9 16 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 1 3 -1.</_>\n        <_>\n          5 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 2 2 -1.</_>\n        <_>\n          5 8 1 1 2.</_>\n        <_>\n          6 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 3 3 -1.</_>\n        <_>\n          4 9 3 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 3 4 -1.</_>\n        <_>\n          4 9 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 4 4 -1.</_>\n        <_>\n          5 9 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 4 3 -1.</_>\n        <_>\n          4 9 4 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 14 2 -1.</_>\n        <_>\n          5 8 7 1 2.</_>\n        <_>\n          12 9 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 16 2 -1.</_>\n        <_>\n          5 8 8 1 2.</_>\n        <_>\n          13 9 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 8 13 16 -1.</_>\n        <_>\n          5 12 13 8 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 4 4 -1.</_>\n        <_>\n          7 9 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 4 3 -1.</_>\n        <_>\n          5 10 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 4 4 -1.</_>\n        <_>\n          5 9 4 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 14 2 -1.</_>\n        <_>\n          5 9 7 1 2.</_>\n        <_>\n          12 10 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 16 2 -1.</_>\n        <_>\n          5 9 8 1 2.</_>\n        <_>\n          13 10 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 9 15 3 -1.</_>\n        <_>\n          5 10 15 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 2 2 -1.</_>\n        <_>\n          5 10 1 1 2.</_>\n        <_>\n          6 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 3 1 -1.</_>\n        <_>\n          6 11 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 3 14 -1.</_>\n        <_>\n          6 10 1 14 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 4 3 -1.</_>\n        <_>\n          7 10 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 12 4 -1.</_>\n        <_>\n          9 10 4 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 14 3 -1.</_>\n        <_>\n          5 11 14 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 10 16 8 -1.</_>\n        <_>\n          5 12 16 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 11 3 2 -1.</_>\n        <_>\n          6 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 11 9 4 -1.</_>\n        <_>\n          5 11 9 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 12 3 2 -1.</_>\n        <_>\n          6 12 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 12 14 2 -1.</_>\n        <_>\n          5 12 7 1 2.</_>\n        <_>\n          12 13 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 13 14 2 -1.</_>\n        <_>\n          5 13 7 1 2.</_>\n        <_>\n          12 14 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 13 14 10 -1.</_>\n        <_>\n          5 18 14 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 15 4 1 -1.</_>\n        <_>\n          6 16 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 15 3 2 -1.</_>\n        <_>\n          6 16 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 19 3 4 -1.</_>\n        <_>\n          6 19 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          5 20 3 4 -1.</_>\n        <_>\n          6 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 1 6 11 -1.</_>\n        <_>\n          8 1 2 11 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 1 12 2 -1.</_>\n        <_>\n          6 1 6 1 2.</_>\n        <_>\n          12 2 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 1 3 -1.</_>\n        <_>\n          5 3 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 4 6 -1.</_>\n        <_>\n          6 2 4 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 2 12 6 -1.</_>\n        <_>\n          6 2 6 6 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 3 1 2 -1.</_>\n        <_>\n          6 3 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 3 1 3 -1.</_>\n        <_>\n          5 4 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 3 6 1 -1.</_>\n        <_>\n          8 3 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 3 18 21 -1.</_>\n        <_>\n          15 3 9 21 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 4 1 3 -1.</_>\n        <_>\n          5 5 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 4 4 3 -1.</_>\n        <_>\n          6 5 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 4 5 4 -1.</_>\n        <_>\n          5 5 5 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 4 6 3 -1.</_>\n        <_>\n          6 5 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 1 3 -1.</_>\n        <_>\n          5 6 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 3 2 -1.</_>\n        <_>\n          7 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 3 3 -1.</_>\n        <_>\n          7 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 5 12 2 -1.</_>\n        <_>\n          6 5 6 1 2.</_>\n        <_>\n          12 6 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 6 10 2 -1.</_>\n        <_>\n          6 6 5 1 2.</_>\n        <_>\n          11 7 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 6 5 3 -1.</_>\n        <_>\n          5 7 5 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 1 3 -1.</_>\n        <_>\n          6 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 1 6 -1.</_>\n        <_>\n          6 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 2 2 -1.</_>\n        <_>\n          6 8 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 2 3 -1.</_>\n        <_>\n          6 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 3 6 -1.</_>\n        <_>\n          6 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 7 12 2 -1.</_>\n        <_>\n          6 7 6 1 2.</_>\n        <_>\n          12 8 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 3 1 -1.</_>\n        <_>\n          7 9 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 2 3 -1.</_>\n        <_>\n          6 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 2 3 -1.</_>\n        <_>\n          5 9 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 3 4 -1.</_>\n        <_>\n          6 9 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 3 3 -1.</_>\n        <_>\n          5 9 3 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 12 3 -1.</_>\n        <_>\n          9 8 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 12 2 -1.</_>\n        <_>\n          6 8 6 1 2.</_>\n        <_>\n          12 9 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 8 13 6 -1.</_>\n        <_>\n          6 10 13 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 2 2 -1.</_>\n        <_>\n          6 9 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 1 -1.</_>\n        <_>\n          9 9 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 2 -1.</_>\n        <_>\n          9 9 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 3 -1.</_>\n        <_>\n          9 9 6 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 2 -1.</_>\n        <_>\n          10 9 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 2 -1.</_>\n        <_>\n          6 9 6 1 2.</_>\n        <_>\n          12 10 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 9 12 3 -1.</_>\n        <_>\n          6 10 12 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 1 3 -1.</_>\n        <_>\n          6 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 3 -1.</_>\n        <_>\n          7 10 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 4 -1.</_>\n        <_>\n          7 10 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 3 -1.</_>\n        <_>\n          6 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 2 4 -1.</_>\n        <_>\n          6 11 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 3 3 -1.</_>\n        <_>\n          6 11 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 12 1 -1.</_>\n        <_>\n          9 10 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 12 2 -1.</_>\n        <_>\n          6 10 6 1 2.</_>\n        <_>\n          12 11 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 10 13 3 -1.</_>\n        <_>\n          6 11 13 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 2 3 -1.</_>\n        <_>\n          6 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 3 2 -1.</_>\n        <_>\n          6 12 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 3 3 -1.</_>\n        <_>\n          6 12 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 11 13 3 -1.</_>\n        <_>\n          6 12 13 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 13 7 4 -1.</_>\n        <_>\n          6 13 7 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 14 1 3 -1.</_>\n        <_>\n          6 15 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 15 3 4 -1.</_>\n        <_>\n          7 16 1 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 15 6 3 -1.</_>\n        <_>\n          6 15 3 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 18 3 1 -1.</_>\n        <_>\n          7 19 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          6 19 3 5 -1.</_>\n        <_>\n          7 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 0 3 4 -1.</_>\n        <_>\n          7 0 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 0 4 2 -1.</_>\n        <_>\n          7 0 4 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 0 10 1 -1.</_>\n        <_>\n          12 0 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 1 2 6 -1.</_>\n        <_>\n          7 1 1 3 2.</_>\n        <_>\n          8 4 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 1 10 1 -1.</_>\n        <_>\n          12 1 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 2 1 3 -1.</_>\n        <_>\n          6 3 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 2 1 4 -1.</_>\n        <_>\n          6 3 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 2 3 4 -1.</_>\n        <_>\n          6 3 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 2 6 3 -1.</_>\n        <_>\n          7 3 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 2 13 10 -1.</_>\n        <_>\n          7 7 13 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 3 1 3 -1.</_>\n        <_>\n          6 4 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 3 2 4 -1.</_>\n        <_>\n          6 4 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 3 4 2 -1.</_>\n        <_>\n          7 3 4 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 4 3 3 -1.</_>\n        <_>\n          8 4 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 4 10 2 -1.</_>\n        <_>\n          7 4 5 1 2.</_>\n        <_>\n          12 5 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 3 2 -1.</_>\n        <_>\n          8 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 3 3 -1.</_>\n        <_>\n          8 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 5 3 5 -1.</_>\n        <_>\n          8 5 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 3 1 -1.</_>\n        <_>\n          8 6 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 1 4 -1.</_>\n        <_>\n          7 6 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 6 10 -1.</_>\n        <_>\n          9 6 2 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 10 2 -1.</_>\n        <_>\n          7 6 5 1 2.</_>\n        <_>\n          12 7 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 5 3 -1.</_>\n        <_>\n          6 7 5 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 6 8 4 -1.</_>\n        <_>\n          6 7 8 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 1 3 -1.</_>\n        <_>\n          7 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 7 2 2 -1.</_>\n        <_>\n          7 7 1 1 2.</_>\n        <_>\n          8 8 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 1 3 -1.</_>\n        <_>\n          7 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 2 2 -1.</_>\n        <_>\n          7 8 1 1 2.</_>\n        <_>\n          8 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 2 2 -1.</_>\n        <_>\n          7 8 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 12 7 -1.</_>\n        <_>\n          11 8 4 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 8 10 2 -1.</_>\n        <_>\n          7 8 5 1 2.</_>\n        <_>\n          12 9 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 1 2 -1.</_>\n        <_>\n          7 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 2 3 -1.</_>\n        <_>\n          7 9 1 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 2 3 -1.</_>\n        <_>\n          7 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 6 10 -1.</_>\n        <_>\n          7 9 3 5 2.</_>\n        <_>\n          10 14 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 9 10 2 -1.</_>\n        <_>\n          7 9 5 1 2.</_>\n        <_>\n          12 10 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 3 1 -1.</_>\n        <_>\n          8 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 1 3 -1.</_>\n        <_>\n          7 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 2 3 -1.</_>\n        <_>\n          7 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 6 5 -1.</_>\n        <_>\n          9 10 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 9 4 -1.</_>\n        <_>\n          10 10 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 10 10 2 -1.</_>\n        <_>\n          7 10 5 1 2.</_>\n        <_>\n          12 11 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 11 1 2 -1.</_>\n        <_>\n          7 12 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 15 5 4 -1.</_>\n        <_>\n          6 16 5 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 16 6 2 -1.</_>\n        <_>\n          9 18 2 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 16 4 2 -1.</_>\n        <_>\n          7 16 4 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 16 4 4 -1.</_>\n        <_>\n          6 17 4 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 17 3 1 -1.</_>\n        <_>\n          8 18 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 17 1 4 -1.</_>\n        <_>\n          7 19 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 17 3 6 -1.</_>\n        <_>\n          7 20 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 17 4 3 -1.</_>\n        <_>\n          6 18 4 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 17 5 2 -1.</_>\n        <_>\n          7 17 5 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 18 3 1 -1.</_>\n        <_>\n          8 19 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 19 3 1 -1.</_>\n        <_>\n          8 20 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 19 3 5 -1.</_>\n        <_>\n          8 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 3 1 -1.</_>\n        <_>\n          8 21 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 9 4 -1.</_>\n        <_>\n          7 22 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 10 4 -1.</_>\n        <_>\n          7 21 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          7 20 10 4 -1.</_>\n        <_>\n          7 22 10 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 8 1 -1.</_>\n        <_>\n          12 0 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 7 4 -1.</_>\n        <_>\n          8 2 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 16 6 -1.</_>\n        <_>\n          8 0 8 3 2.</_>\n        <_>\n          16 3 8 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 8 10 -1.</_>\n        <_>\n          8 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 16 10 -1.</_>\n        <_>\n          8 0 8 5 2.</_>\n        <_>\n          16 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 9 4 -1.</_>\n        <_>\n          8 1 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 0 9 10 -1.</_>\n        <_>\n          8 5 9 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 1 8 8 -1.</_>\n        <_>\n          8 5 8 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 1 12 10 -1.</_>\n        <_>\n          8 6 12 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 2 3 3 -1.</_>\n        <_>\n          9 2 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 2 2 4 -1.</_>\n        <_>\n          7 3 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 2 2 6 -1.</_>\n        <_>\n          6 4 2 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 3 3 8 -1.</_>\n        <_>\n          9 3 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 8 2 -1.</_>\n        <_>\n          8 4 4 1 2.</_>\n        <_>\n          12 5 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 4 7 15 -1.</_>\n        <_>\n          8 9 7 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 2 1 -1.</_>\n        <_>\n          8 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 2 -1.</_>\n        <_>\n          9 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 2 5 -1.</_>\n        <_>\n          9 5 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 2 6 -1.</_>\n        <_>\n          9 5 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 6 -1.</_>\n        <_>\n          9 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 2 7 -1.</_>\n        <_>\n          9 5 1 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 7 -1.</_>\n        <_>\n          9 6 1 7 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 8 -1.</_>\n        <_>\n          9 5 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 3 6 -1.</_>\n        <_>\n          8 5 3 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 4 6 -1.</_>\n        <_>\n          6 7 4 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 10 2 -1.</_>\n        <_>\n          8 5 5 1 2.</_>\n        <_>\n          13 6 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 5 5 3 -1.</_>\n        <_>\n          7 6 5 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 3 6 -1.</_>\n        <_>\n          9 6 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 3 4 -1.</_>\n        <_>\n          7 7 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 4 2 -1.</_>\n        <_>\n          8 6 4 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 4 3 -1.</_>\n        <_>\n          7 7 4 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 4 4 -1.</_>\n        <_>\n          7 7 4 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 6 10 2 -1.</_>\n        <_>\n          8 6 5 1 2.</_>\n        <_>\n          13 7 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 3 3 -1.</_>\n        <_>\n          7 8 3 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 3 4 -1.</_>\n        <_>\n          7 8 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 9 5 -1.</_>\n        <_>\n          11 10 3 5 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 9 8 -1.</_>\n        <_>\n          11 10 3 8 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 4 2 -1.</_>\n        <_>\n          8 7 4 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 4 3 -1.</_>\n        <_>\n          7 8 4 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 5 2 -1.</_>\n        <_>\n          8 7 5 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 8 2 -1.</_>\n        <_>\n          8 7 8 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 7 10 12 -1.</_>\n        <_>\n          8 13 10 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 8 2 2 -1.</_>\n        <_>\n          8 8 1 1 2.</_>\n        <_>\n          9 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 2 1 -1.</_>\n        <_>\n          9 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 3 1 -1.</_>\n        <_>\n          9 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 2 2 -1.</_>\n        <_>\n          8 10 1 1 2.</_>\n        <_>\n          9 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 2 2 -1.</_>\n        <_>\n          9 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 3 2 -1.</_>\n        <_>\n          9 10 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 4 8 -1.</_>\n        <_>\n          8 10 2 4 2.</_>\n        <_>\n          10 14 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 8 2 -1.</_>\n        <_>\n          8 10 4 1 2.</_>\n        <_>\n          12 11 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 10 15 12 -1.</_>\n        <_>\n          13 14 5 4 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 11 2 2 -1.</_>\n        <_>\n          8 11 1 1 2.</_>\n        <_>\n          9 12 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 13 9 3 -1.</_>\n        <_>\n          11 13 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 15 9 6 -1.</_>\n        <_>\n          11 15 3 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 15 8 6 -1.</_>\n        <_>\n          8 17 8 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 16 8 2 -1.</_>\n        <_>\n          10 16 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 16 8 3 -1.</_>\n        <_>\n          10 16 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 17 3 3 -1.</_>\n        <_>\n          9 18 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 17 8 3 -1.</_>\n        <_>\n          10 17 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 17 9 6 -1.</_>\n        <_>\n          8 19 9 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 18 3 6 -1.</_>\n        <_>\n          9 18 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 19 3 1 -1.</_>\n        <_>\n          9 20 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 19 3 4 -1.</_>\n        <_>\n          9 19 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 19 7 3 -1.</_>\n        <_>\n          8 20 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 19 9 4 -1.</_>\n        <_>\n          8 20 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 20 3 3 -1.</_>\n        <_>\n          9 20 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 20 16 4 -1.</_>\n        <_>\n          8 20 8 2 2.</_>\n        <_>\n          16 22 8 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          8 21 3 3 -1.</_>\n        <_>\n          9 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 1 2 -1.</_>\n        <_>\n          9 1 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 3 6 -1.</_>\n        <_>\n          7 2 3 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 6 3 -1.</_>\n        <_>\n          12 0 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 6 9 -1.</_>\n        <_>\n          9 0 3 9 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 8 9 -1.</_>\n        <_>\n          9 0 4 9 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 5 4 -1.</_>\n        <_>\n          9 2 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 5 8 -1.</_>\n        <_>\n          9 4 5 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 14 12 -1.</_>\n        <_>\n          9 0 7 6 2.</_>\n        <_>\n          16 6 7 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 8 10 -1.</_>\n        <_>\n          9 5 8 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 0 15 18 -1.</_>\n        <_>\n          9 6 15 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 1 2 8 -1.</_>\n        <_>\n          9 5 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 1 3 4 -1.</_>\n        <_>\n          8 2 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 2 2 -1.</_>\n        <_>\n          10 2 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 1 6 -1.</_>\n        <_>\n          9 5 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 3 10 -1.</_>\n        <_>\n          10 2 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 8 4 -1.</_>\n        <_>\n          11 4 4 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 6 2 -1.</_>\n        <_>\n          9 2 3 1 2.</_>\n        <_>\n          12 3 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 2 7 8 -1.</_>\n        <_>\n          9 6 7 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 3 7 -1.</_>\n        <_>\n          10 4 1 7 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 3 12 -1.</_>\n        <_>\n          10 3 1 12 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 6 7 -1.</_>\n        <_>\n          11 3 2 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 12 3 -1.</_>\n        <_>\n          13 4 4 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 3 11 4 -1.</_>\n        <_>\n          8 4 11 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 4 3 8 -1.</_>\n        <_>\n          10 5 1 8 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 2 1 -1.</_>\n        <_>\n          9 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 3 4 -1.</_>\n        <_>\n          10 5 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 3 6 -1.</_>\n        <_>\n          10 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 6 4 -1.</_>\n        <_>\n          11 5 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 3 3 -1.</_>\n        <_>\n          9 6 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 5 4 3 -1.</_>\n        <_>\n          8 6 4 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 3 2 -1.</_>\n        <_>\n          10 7 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 2 6 -1.</_>\n        <_>\n          7 8 2 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 4 3 -1.</_>\n        <_>\n          9 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 6 4 3 -1.</_>\n        <_>\n          8 7 4 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 7 2 3 -1.</_>\n        <_>\n          9 7 1 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 7 2 2 -1.</_>\n        <_>\n          9 7 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 7 6 2 -1.</_>\n        <_>\n          9 7 3 1 2.</_>\n        <_>\n          12 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 8 2 3 -1.</_>\n        <_>\n          8 9 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 8 6 5 -1.</_>\n        <_>\n          11 10 2 5 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 8 3 3 -1.</_>\n        <_>\n          9 9 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 8 9 9 -1.</_>\n        <_>\n          12 8 3 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 2 12 -1.</_>\n        <_>\n          9 9 1 6 2.</_>\n        <_>\n          10 15 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 6 3 -1.</_>\n        <_>\n          11 11 2 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 6 4 -1.</_>\n        <_>\n          11 11 2 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 3 3 -1.</_>\n        <_>\n          9 10 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 9 6 4 -1.</_>\n        <_>\n          12 9 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 3 3 -1.</_>\n        <_>\n          9 11 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 5 3 -1.</_>\n        <_>\n          9 11 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 10 14 3 -1.</_>\n        <_>\n          9 11 14 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 13 4 6 -1.</_>\n        <_>\n          9 13 2 3 2.</_>\n        <_>\n          11 16 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 13 9 4 -1.</_>\n        <_>\n          12 13 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 16 6 5 -1.</_>\n        <_>\n          11 16 2 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 17 6 2 -1.</_>\n        <_>\n          11 17 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 18 3 3 -1.</_>\n        <_>\n          10 19 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 19 3 2 -1.</_>\n        <_>\n          10 20 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 19 6 3 -1.</_>\n        <_>\n          9 20 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 19 7 3 -1.</_>\n        <_>\n          9 20 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 3 3 -1.</_>\n        <_>\n          10 20 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 5 3 -1.</_>\n        <_>\n          9 21 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 6 3 -1.</_>\n        <_>\n          9 21 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 7 3 -1.</_>\n        <_>\n          9 21 7 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 20 7 4 -1.</_>\n        <_>\n          9 22 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 21 3 3 -1.</_>\n        <_>\n          10 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          9 21 8 2 -1.</_>\n        <_>\n          9 22 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 4 1 -1.</_>\n        <_>\n          12 0 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 3 12 -1.</_>\n        <_>\n          10 4 3 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 4 8 -1.</_>\n        <_>\n          10 4 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 0 14 10 -1.</_>\n        <_>\n          10 0 7 5 2.</_>\n        <_>\n          17 5 7 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 2 4 6 -1.</_>\n        <_>\n          11 2 2 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 2 6 10 -1.</_>\n        <_>\n          10 2 3 10 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 3 2 5 -1.</_>\n        <_>\n          11 3 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 4 3 5 -1.</_>\n        <_>\n          11 4 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 4 4 19 -1.</_>\n        <_>\n          12 4 2 19 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 5 1 2 -1.</_>\n        <_>\n          10 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 5 4 3 -1.</_>\n        <_>\n          11 5 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 5 3 3 -1.</_>\n        <_>\n          10 6 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 6 1 3 -1.</_>\n        <_>\n          10 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 6 4 6 -1.</_>\n        <_>\n          12 6 2 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 7 4 3 -1.</_>\n        <_>\n          10 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 8 1 2 -1.</_>\n        <_>\n          10 8 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 8 2 2 -1.</_>\n        <_>\n          10 9 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 1 3 -1.</_>\n        <_>\n          9 10 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 2 3 -1.</_>\n        <_>\n          11 9 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 2 12 -1.</_>\n        <_>\n          10 9 1 6 2.</_>\n        <_>\n          11 15 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 2 3 -1.</_>\n        <_>\n          10 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 9 2 3 -1.</_>\n        <_>\n          9 10 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 10 3 3 -1.</_>\n        <_>\n          9 11 3 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 11 5 3 -1.</_>\n        <_>\n          10 12 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 12 14 3 -1.</_>\n        <_>\n          10 13 14 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 17 4 2 -1.</_>\n        <_>\n          11 17 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 17 2 6 -1.</_>\n        <_>\n          10 17 1 3 2.</_>\n        <_>\n          11 20 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 17 3 3 -1.</_>\n        <_>\n          10 18 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 17 6 2 -1.</_>\n        <_>\n          13 17 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 18 5 4 -1.</_>\n        <_>\n          10 19 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 19 5 4 -1.</_>\n        <_>\n          10 20 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 19 6 3 -1.</_>\n        <_>\n          10 20 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 3 4 -1.</_>\n        <_>\n          11 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 6 4 -1.</_>\n        <_>\n          12 20 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 5 4 -1.</_>\n        <_>\n          10 21 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 5 4 -1.</_>\n        <_>\n          10 22 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 20 14 4 -1.</_>\n        <_>\n          10 20 7 2 2.</_>\n        <_>\n          17 22 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 21 3 3 -1.</_>\n        <_>\n          11 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 21 5 2 -1.</_>\n        <_>\n          10 22 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 22 3 2 -1.</_>\n        <_>\n          11 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          10 23 3 1 -1.</_>\n        <_>\n          11 23 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 0 1 2 -1.</_>\n        <_>\n          11 0 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 0 1 4 -1.</_>\n        <_>\n          10 1 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 0 4 1 -1.</_>\n        <_>\n          13 0 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 1 1 2 -1.</_>\n        <_>\n          11 1 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 2 8 9 -1.</_>\n        <_>\n          13 4 4 9 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 3 3 -1.</_>\n        <_>\n          12 3 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 3 3 4 -1.</_>\n        <_>\n          12 3 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 3 4 -1.</_>\n        <_>\n          12 4 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 3 5 -1.</_>\n        <_>\n          12 4 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 3 7 -1.</_>\n        <_>\n          12 5 1 7 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 4 1 -1.</_>\n        <_>\n          13 4 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 2 3 -1.</_>\n        <_>\n          11 5 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 4 4 3 -1.</_>\n        <_>\n          11 5 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 5 3 1 -1.</_>\n        <_>\n          12 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 5 4 11 -1.</_>\n        <_>\n          13 5 2 11 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 6 2 3 -1.</_>\n        <_>\n          11 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 6 4 3 -1.</_>\n        <_>\n          11 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 1 3 -1.</_>\n        <_>\n          11 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 2 3 -1.</_>\n        <_>\n          11 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 2 6 -1.</_>\n        <_>\n          11 7 2 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 3 3 -1.</_>\n        <_>\n          11 8 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 7 3 8 -1.</_>\n        <_>\n          11 7 3 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 1 3 -1.</_>\n        <_>\n          11 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 8 2 3 -1.</_>\n        <_>\n          11 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 9 3 3 -1.</_>\n        <_>\n          11 10 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 4 5 -1.</_>\n        <_>\n          12 11 2 5 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 6 3 -1.</_>\n        <_>\n          13 10 2 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 6 8 -1.</_>\n        <_>\n          11 10 3 4 2.</_>\n        <_>\n          14 14 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 10 8 6 -1.</_>\n        <_>\n          9 12 8 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 11 1 3 -1.</_>\n        <_>\n          11 12 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 14 3 3 -1.</_>\n        <_>\n          10 15 3 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 16 3 3 -1.</_>\n        <_>\n          11 17 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 21 3 3 -1.</_>\n        <_>\n          12 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          11 22 3 2 -1.</_>\n        <_>\n          12 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 0 9 17 -1.</_>\n        <_>\n          15 0 3 17 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 2 2 14 -1.</_>\n        <_>\n          13 2 1 14 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 3 6 1 -1.</_>\n        <_>\n          14 3 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 3 8 3 -1.</_>\n        <_>\n          12 4 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 3 12 6 -1.</_>\n        <_>\n          10 5 12 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 4 2 3 -1.</_>\n        <_>\n          12 5 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 4 9 3 -1.</_>\n        <_>\n          15 5 3 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 5 3 5 -1.</_>\n        <_>\n          13 5 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 5 3 3 -1.</_>\n        <_>\n          12 6 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 5 9 8 -1.</_>\n        <_>\n          15 5 3 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 5 4 3 -1.</_>\n        <_>\n          12 6 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 6 2 8 -1.</_>\n        <_>\n          12 6 2 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 6 3 3 -1.</_>\n        <_>\n          12 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 1 3 -1.</_>\n        <_>\n          12 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 1 8 -1.</_>\n        <_>\n          12 7 1 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 2 6 -1.</_>\n        <_>\n          12 7 2 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 2 8 -1.</_>\n        <_>\n          12 7 2 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 7 3 3 -1.</_>\n        <_>\n          12 8 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 8 1 3 -1.</_>\n        <_>\n          12 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 8 2 3 -1.</_>\n        <_>\n          12 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 9 2 3 -1.</_>\n        <_>\n          12 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 10 6 4 -1.</_>\n        <_>\n          14 10 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 10 4 10 -1.</_>\n        <_>\n          12 10 2 5 2.</_>\n        <_>\n          14 15 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 11 4 8 -1.</_>\n        <_>\n          12 11 2 4 2.</_>\n        <_>\n          14 15 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 13 4 3 -1.</_>\n        <_>\n          13 13 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 14 3 2 -1.</_>\n        <_>\n          13 15 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 15 2 4 -1.</_>\n        <_>\n          12 15 1 2 2.</_>\n        <_>\n          13 17 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 15 4 5 -1.</_>\n        <_>\n          14 15 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 16 6 2 -1.</_>\n        <_>\n          14 16 2 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 19 3 5 -1.</_>\n        <_>\n          13 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 21 3 2 -1.</_>\n        <_>\n          13 21 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          12 21 3 3 -1.</_>\n        <_>\n          13 21 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 0 2 10 -1.</_>\n        <_>\n          13 0 1 5 2.</_>\n        <_>\n          14 5 1 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 0 4 12 -1.</_>\n        <_>\n          14 0 2 12 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 0 6 10 -1.</_>\n        <_>\n          15 0 2 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 0 11 8 -1.</_>\n        <_>\n          11 2 11 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 1 6 8 -1.</_>\n        <_>\n          15 1 2 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 2 4 2 -1.</_>\n        <_>\n          14 2 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 3 2 4 -1.</_>\n        <_>\n          13 3 1 2 2.</_>\n        <_>\n          14 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 3 6 3 -1.</_>\n        <_>\n          15 4 2 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 4 4 7 -1.</_>\n        <_>\n          14 4 2 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 4 3 8 -1.</_>\n        <_>\n          14 4 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 5 3 2 -1.</_>\n        <_>\n          14 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 5 3 5 -1.</_>\n        <_>\n          14 5 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 5 3 6 -1.</_>\n        <_>\n          14 5 1 6 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 5 3 8 -1.</_>\n        <_>\n          14 5 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 5 6 1 -1.</_>\n        <_>\n          15 5 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 6 7 4 -1.</_>\n        <_>\n          13 7 7 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 1 3 -1.</_>\n        <_>\n          13 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 4 8 -1.</_>\n        <_>\n          13 7 2 4 2.</_>\n        <_>\n          15 11 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 9 6 -1.</_>\n        <_>\n          16 9 3 2 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 6 2 -1.</_>\n        <_>\n          13 7 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 7 8 1 -1.</_>\n        <_>\n          13 7 4 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 8 2 3 -1.</_>\n        <_>\n          13 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 8 9 3 -1.</_>\n        <_>\n          16 9 3 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 8 6 8 -1.</_>\n        <_>\n          13 8 3 4 2.</_>\n        <_>\n          16 12 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 2 3 -1.</_>\n        <_>\n          13 10 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 6 4 -1.</_>\n        <_>\n          15 9 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 9 10 2 -1.</_>\n        <_>\n          13 10 10 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 10 3 1 -1.</_>\n        <_>\n          14 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 10 3 2 -1.</_>\n        <_>\n          14 10 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 11 2 3 -1.</_>\n        <_>\n          13 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 13 2 6 -1.</_>\n        <_>\n          13 13 1 3 2.</_>\n        <_>\n          14 16 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 13 4 6 -1.</_>\n        <_>\n          14 14 2 6 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 20 3 4 -1.</_>\n        <_>\n          14 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 22 3 2 -1.</_>\n        <_>\n          14 22 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          13 23 3 1 -1.</_>\n        <_>\n          14 23 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 3 11 -1.</_>\n        <_>\n          15 1 1 11 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 2 3 -1.</_>\n        <_>\n          14 1 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 10 6 -1.</_>\n        <_>\n          14 0 5 3 2.</_>\n        <_>\n          19 3 5 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 0 10 10 -1.</_>\n        <_>\n          14 0 5 5 2.</_>\n        <_>\n          19 5 5 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 1 10 6 -1.</_>\n        <_>\n          14 1 5 3 2.</_>\n        <_>\n          19 4 5 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 2 1 2 -1.</_>\n        <_>\n          14 2 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 2 3 8 -1.</_>\n        <_>\n          15 2 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 2 6 7 -1.</_>\n        <_>\n          16 2 2 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 3 2 4 -1.</_>\n        <_>\n          14 3 1 2 2.</_>\n        <_>\n          15 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 3 2 7 -1.</_>\n        <_>\n          15 3 1 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 3 2 -1.</_>\n        <_>\n          15 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 2 3 -1.</_>\n        <_>\n          15 5 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 3 3 -1.</_>\n        <_>\n          15 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 3 5 -1.</_>\n        <_>\n          15 5 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 2 7 -1.</_>\n        <_>\n          15 5 1 7 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 5 6 4 -1.</_>\n        <_>\n          16 5 2 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 6 6 3 -1.</_>\n        <_>\n          14 6 3 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 7 4 16 -1.</_>\n        <_>\n          15 7 2 16 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 7 6 6 -1.</_>\n        <_>\n          16 9 2 2 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 7 6 16 -1.</_>\n        <_>\n          16 7 2 16 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 7 9 4 -1.</_>\n        <_>\n          14 8 9 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 9 2 4 -1.</_>\n        <_>\n          14 9 1 2 2.</_>\n        <_>\n          15 11 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 3 1 -1.</_>\n        <_>\n          15 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 2 2 -1.</_>\n        <_>\n          15 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 10 3 3 -1.</_>\n        <_>\n          15 10 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 12 2 1 -1.</_>\n        <_>\n          15 12 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 14 3 4 -1.</_>\n        <_>\n          15 15 1 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 14 5 3 -1.</_>\n        <_>\n          14 15 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 15 3 3 -1.</_>\n        <_>\n          15 16 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 19 3 5 -1.</_>\n        <_>\n          15 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          14 21 10 1 -1.</_>\n        <_>\n          19 21 5 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 0 2 2 -1.</_>\n        <_>\n          15 0 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 0 4 2 -1.</_>\n        <_>\n          16 1 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 3 6 3 -1.</_>\n        <_>\n          15 4 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 4 2 3 -1.</_>\n        <_>\n          15 5 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 2 1 -1.</_>\n        <_>\n          15 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 2 2 -1.</_>\n        <_>\n          16 5 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 3 2 -1.</_>\n        <_>\n          16 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 5 3 3 -1.</_>\n        <_>\n          16 5 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 4 4 -1.</_>\n        <_>\n          15 9 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 4 6 -1.</_>\n        <_>\n          15 9 4 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 7 5 6 -1.</_>\n        <_>\n          15 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 2 2 -1.</_>\n        <_>\n          15 8 1 1 2.</_>\n        <_>\n          16 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 2 1 -1.</_>\n        <_>\n          15 8 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 1 12 -1.</_>\n        <_>\n          15 14 1 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 6 2 -1.</_>\n        <_>\n          15 8 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 3 16 -1.</_>\n        <_>\n          15 12 3 8 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 8 5 4 -1.</_>\n        <_>\n          15 9 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 9 3 3 -1.</_>\n        <_>\n          16 10 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 9 3 1 -1.</_>\n        <_>\n          16 10 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 3 1 -1.</_>\n        <_>\n          16 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 2 2 -1.</_>\n        <_>\n          15 10 1 1 2.</_>\n        <_>\n          16 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 2 2 -1.</_>\n        <_>\n          16 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 3 5 -1.</_>\n        <_>\n          16 10 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 3 4 -1.</_>\n        <_>\n          14 11 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 5 4 -1.</_>\n        <_>\n          15 11 5 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 10 5 4 -1.</_>\n        <_>\n          14 11 5 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 15 8 3 -1.</_>\n        <_>\n          19 15 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 15 8 8 -1.</_>\n        <_>\n          15 15 4 4 2.</_>\n        <_>\n          19 19 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 16 5 3 -1.</_>\n        <_>\n          15 17 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          15 18 8 6 -1.</_>\n        <_>\n          15 18 4 3 2.</_>\n        <_>\n          19 21 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 1 -1.</_>\n        <_>\n          20 0 4 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 2 -1.</_>\n        <_>\n          20 0 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 6 -1.</_>\n        <_>\n          16 0 4 3 2.</_>\n        <_>\n          20 3 4 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 0 8 8 -1.</_>\n        <_>\n          16 0 4 4 2.</_>\n        <_>\n          20 4 4 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 1 3 3 -1.</_>\n        <_>\n          17 2 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 1 2 1 -1.</_>\n        <_>\n          16 1 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 2 1 2 -1.</_>\n        <_>\n          16 3 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 2 3 3 -1.</_>\n        <_>\n          17 3 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 2 4 2 -1.</_>\n        <_>\n          17 3 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 2 6 1 -1.</_>\n        <_>\n          18 4 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 3 4 12 -1.</_>\n        <_>\n          17 4 2 12 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 4 6 3 -1.</_>\n        <_>\n          15 5 6 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 5 1 2 -1.</_>\n        <_>\n          16 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 5 3 2 -1.</_>\n        <_>\n          17 5 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 5 3 9 -1.</_>\n        <_>\n          16 8 3 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 6 6 2 -1.</_>\n        <_>\n          18 8 2 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 1 6 -1.</_>\n        <_>\n          16 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 2 3 -1.</_>\n        <_>\n          16 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 2 2 -1.</_>\n        <_>\n          16 7 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 3 2 -1.</_>\n        <_>\n          16 8 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 3 2 -1.</_>\n        <_>\n          16 7 3 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 3 6 -1.</_>\n        <_>\n          16 9 3 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 6 4 -1.</_>\n        <_>\n          16 7 3 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 4 3 -1.</_>\n        <_>\n          16 8 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 5 3 -1.</_>\n        <_>\n          16 8 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 5 6 -1.</_>\n        <_>\n          16 9 5 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 6 4 -1.</_>\n        <_>\n          16 8 6 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 7 8 -1.</_>\n        <_>\n          14 9 7 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 7 8 6 -1.</_>\n        <_>\n          16 9 8 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 1 2 -1.</_>\n        <_>\n          16 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 1 4 -1.</_>\n        <_>\n          16 9 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 2 2 -1.</_>\n        <_>\n          16 8 1 1 2.</_>\n        <_>\n          17 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 3 3 -1.</_>\n        <_>\n          17 9 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 2 1 -1.</_>\n        <_>\n          16 8 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 2 2 -1.</_>\n        <_>\n          16 8 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 5 6 -1.</_>\n        <_>\n          14 10 5 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 8 7 8 -1.</_>\n        <_>\n          14 10 7 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 3 1 -1.</_>\n        <_>\n          17 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 1 3 -1.</_>\n        <_>\n          16 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 5 3 -1.</_>\n        <_>\n          16 10 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 9 8 2 -1.</_>\n        <_>\n          16 10 8 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 1 3 -1.</_>\n        <_>\n          16 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 2 2 -1.</_>\n        <_>\n          17 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 2 3 -1.</_>\n        <_>\n          16 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 10 6 6 -1.</_>\n        <_>\n          14 12 6 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 3 1 -1.</_>\n        <_>\n          17 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 3 2 -1.</_>\n        <_>\n          17 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 3 13 -1.</_>\n        <_>\n          17 11 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 2 2 -1.</_>\n        <_>\n          16 12 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 2 3 -1.</_>\n        <_>\n          16 12 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 11 3 3 -1.</_>\n        <_>\n          16 12 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 14 4 2 -1.</_>\n        <_>\n          18 14 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 14 6 3 -1.</_>\n        <_>\n          19 14 3 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 19 3 5 -1.</_>\n        <_>\n          17 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 19 2 3 -1.</_>\n        <_>\n          15 20 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          16 19 8 3 -1.</_>\n        <_>\n          16 20 8 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 0 6 15 -1.</_>\n        <_>\n          19 2 2 15 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 0 6 1 -1.</_>\n        <_>\n          20 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 0 6 2 -1.</_>\n        <_>\n          20 0 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 2 3 3 -1.</_>\n        <_>\n          18 3 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 3 2 -1.</_>\n        <_>\n          18 3 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 3 9 -1.</_>\n        <_>\n          18 6 1 3 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 6 2 -1.</_>\n        <_>\n          19 5 2 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 3 8 -1.</_>\n        <_>\n          15 5 3 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 3 5 3 -1.</_>\n        <_>\n          17 4 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 4 2 6 -1.</_>\n        <_>\n          17 4 1 3 2.</_>\n        <_>\n          18 7 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 5 1 2 -1.</_>\n        <_>\n          17 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 5 3 4 -1.</_>\n        <_>\n          18 6 1 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 5 6 2 -1.</_>\n        <_>\n          17 5 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 5 7 3 -1.</_>\n        <_>\n          16 6 7 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 2 3 -1.</_>\n        <_>\n          17 6 1 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 3 4 -1.</_>\n        <_>\n          18 7 1 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 3 3 -1.</_>\n        <_>\n          17 7 3 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 6 6 1 -1.</_>\n        <_>\n          17 6 3 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 1 3 -1.</_>\n        <_>\n          17 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 1 3 -1.</_>\n        <_>\n          16 8 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 1 6 -1.</_>\n        <_>\n          17 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 3 6 -1.</_>\n        <_>\n          18 9 1 2 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 3 2 -1.</_>\n        <_>\n          18 8 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 2 3 -1.</_>\n        <_>\n          17 7 1 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 3 3 -1.</_>\n        <_>\n          18 8 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 2 3 -1.</_>\n        <_>\n          17 8 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 7 6 9 -1.</_>\n        <_>\n          14 10 6 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 8 3 3 -1.</_>\n        <_>\n          18 9 1 1 9.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 8 2 4 -1.</_>\n        <_>\n          17 8 1 2 2.</_>\n        <_>\n          18 10 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 8 2 8 -1.</_>\n        <_>\n          17 8 1 4 2.</_>\n        <_>\n          18 12 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 8 3 4 -1.</_>\n        <_>\n          18 9 1 4 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 8 4 6 -1.</_>\n        <_>\n          15 10 4 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 3 1 -1.</_>\n        <_>\n          18 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 2 6 -1.</_>\n        <_>\n          17 9 1 3 2.</_>\n        <_>\n          18 12 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 6 10 -1.</_>\n        <_>\n          17 9 3 5 2.</_>\n        <_>\n          20 14 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 9 7 2 -1.</_>\n        <_>\n          17 10 7 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 3 1 -1.</_>\n        <_>\n          18 10 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 1 3 -1.</_>\n        <_>\n          17 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 2 3 -1.</_>\n        <_>\n          18 10 1 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 2 4 -1.</_>\n        <_>\n          18 10 1 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 10 4 2 -1.</_>\n        <_>\n          17 10 2 1 2.</_>\n        <_>\n          19 11 2 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 3 2 -1.</_>\n        <_>\n          18 11 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 11 3 3 -1.</_>\n        <_>\n          18 11 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 12 3 1 -1.</_>\n        <_>\n          18 12 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 12 6 2 -1.</_>\n        <_>\n          20 12 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 15 2 3 -1.</_>\n        <_>\n          17 16 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 15 4 3 -1.</_>\n        <_>\n          19 15 2 3 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 15 4 4 -1.</_>\n        <_>\n          17 15 2 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 18 2 4 -1.</_>\n        <_>\n          16 19 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 18 5 3 -1.</_>\n        <_>\n          17 19 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 19 1 3 -1.</_>\n        <_>\n          16 20 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 20 1 3 -1.</_>\n        <_>\n          16 21 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          17 20 3 4 -1.</_>\n        <_>\n          18 20 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 2 2 -1.</_>\n        <_>\n          18 0 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 6 1 -1.</_>\n        <_>\n          21 0 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 6 5 -1.</_>\n        <_>\n          21 0 3 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 0 6 12 -1.</_>\n        <_>\n          18 0 3 6 2.</_>\n        <_>\n          21 6 3 6 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 2 3 1 -1.</_>\n        <_>\n          19 3 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 2 4 1 -1.</_>\n        <_>\n          19 3 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 2 4 3 -1.</_>\n        <_>\n          19 3 2 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 4 4 3 -1.</_>\n        <_>\n          18 5 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 5 1 2 -1.</_>\n        <_>\n          18 5 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 2 3 -1.</_>\n        <_>\n          18 6 1 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 4 3 -1.</_>\n        <_>\n          19 7 2 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 4 4 -1.</_>\n        <_>\n          19 7 2 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 2 5 -1.</_>\n        <_>\n          18 6 1 5 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 4 6 -1.</_>\n        <_>\n          19 7 2 6 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 2 3 -1.</_>\n        <_>\n          18 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 4 1 -1.</_>\n        <_>\n          18 6 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 5 3 -1.</_>\n        <_>\n          18 7 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 6 6 3 -1.</_>\n        <_>\n          18 7 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 7 3 2 -1.</_>\n        <_>\n          19 8 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 7 3 5 -1.</_>\n        <_>\n          19 8 1 5 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 1 3 -1.</_>\n        <_>\n          18 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 2 3 -1.</_>\n        <_>\n          18 9 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 8 2 2 -1.</_>\n        <_>\n          18 8 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 3 1 -1.</_>\n        <_>\n          19 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 2 2 -1.</_>\n        <_>\n          18 9 1 1 2.</_>\n        <_>\n          19 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 3 2 -1.</_>\n        <_>\n          19 9 1 2 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 2 4 -1.</_>\n        <_>\n          18 11 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 6 9 -1.</_>\n        <_>\n          21 9 3 9 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 9 6 3 -1.</_>\n        <_>\n          18 10 6 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 2 1 -1.</_>\n        <_>\n          19 10 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 1 3 -1.</_>\n        <_>\n          18 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 2 2 -1.</_>\n        <_>\n          18 10 1 1 2.</_>\n        <_>\n          19 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 10 6 2 -1.</_>\n        <_>\n          18 11 6 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 3 4 -1.</_>\n        <_>\n          19 11 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 3 13 -1.</_>\n        <_>\n          19 11 1 13 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 2 8 -1.</_>\n        <_>\n          18 15 2 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 11 6 1 -1.</_>\n        <_>\n          21 11 3 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 12 6 2 -1.</_>\n        <_>\n          21 12 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 12 3 8 -1.</_>\n        <_>\n          18 16 3 4 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 13 2 4 -1.</_>\n        <_>\n          18 15 2 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 14 4 4 -1.</_>\n        <_>\n          18 16 4 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 15 4 5 -1.</_>\n        <_>\n          20 15 2 5 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 16 2 4 -1.</_>\n        <_>\n          18 16 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 17 2 5 -1.</_>\n        <_>\n          18 17 1 5 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 18 1 3 -1.</_>\n        <_>\n          17 19 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          18 20 1 3 -1.</_>\n        <_>\n          17 21 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 0 2 3 -1.</_>\n        <_>\n          19 0 1 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 2 3 1 -1.</_>\n        <_>\n          20 3 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 2 4 3 -1.</_>\n        <_>\n          20 3 2 3 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 3 3 1 -1.</_>\n        <_>\n          20 4 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 1 2 -1.</_>\n        <_>\n          19 4 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 3 1 -1.</_>\n        <_>\n          20 5 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 1 3 -1.</_>\n        <_>\n          18 5 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 1 4 -1.</_>\n        <_>\n          19 6 1 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 4 5 9 -1.</_>\n        <_>\n          19 7 5 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 5 3 1 -1.</_>\n        <_>\n          20 6 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 1 3 -1.</_>\n        <_>\n          19 7 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 1 3 -1.</_>\n        <_>\n          18 7 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 2 3 -1.</_>\n        <_>\n          19 7 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 6 5 9 -1.</_>\n        <_>\n          19 9 5 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 7 1 3 -1.</_>\n        <_>\n          19 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 7 3 4 -1.</_>\n        <_>\n          20 7 1 4 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 7 2 4 -1.</_>\n        <_>\n          19 7 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 8 1 3 -1.</_>\n        <_>\n          19 9 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 8 3 3 -1.</_>\n        <_>\n          20 8 1 3 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 9 2 1 -1.</_>\n        <_>\n          20 9 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 9 2 2 -1.</_>\n        <_>\n          19 9 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 10 2 2 -1.</_>\n        <_>\n          19 10 1 1 2.</_>\n        <_>\n          20 11 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 10 3 4 -1.</_>\n        <_>\n          19 11 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 12 4 8 -1.</_>\n        <_>\n          20 13 2 8 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 12 3 10 -1.</_>\n        <_>\n          20 12 1 10 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 12 3 12 -1.</_>\n        <_>\n          20 12 1 12 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 13 3 9 -1.</_>\n        <_>\n          20 13 1 9 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 14 4 6 -1.</_>\n        <_>\n          20 15 2 6 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 15 3 6 -1.</_>\n        <_>\n          20 16 1 6 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 17 1 3 -1.</_>\n        <_>\n          18 18 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 18 1 3 -1.</_>\n        <_>\n          18 19 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 19 1 3 -1.</_>\n        <_>\n          18 20 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 19 1 4 -1.</_>\n        <_>\n          18 20 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 20 1 3 -1.</_>\n        <_>\n          18 21 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          19 21 5 3 -1.</_>\n        <_>\n          19 22 5 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 0 4 4 -1.</_>\n        <_>\n          19 1 4 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 3 3 1 -1.</_>\n        <_>\n          21 4 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 3 3 2 -1.</_>\n        <_>\n          21 4 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 4 1 3 -1.</_>\n        <_>\n          20 5 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 4 3 1 -1.</_>\n        <_>\n          21 5 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 4 3 2 -1.</_>\n        <_>\n          21 5 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 5 3 1 -1.</_>\n        <_>\n          21 6 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 6 4 3 -1.</_>\n        <_>\n          20 7 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 8 3 2 -1.</_>\n        <_>\n          21 9 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 8 3 3 -1.</_>\n        <_>\n          21 9 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 9 3 2 -1.</_>\n        <_>\n          21 10 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 9 4 10 -1.</_>\n        <_>\n          20 9 2 10 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 10 1 3 -1.</_>\n        <_>\n          19 11 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 10 2 2 -1.</_>\n        <_>\n          20 10 2 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 11 4 9 -1.</_>\n        <_>\n          20 11 2 9 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 14 4 6 -1.</_>\n        <_>\n          21 15 2 6 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 14 2 7 -1.</_>\n        <_>\n          20 14 1 7 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 15 3 4 -1.</_>\n        <_>\n          19 16 3 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 16 4 4 -1.</_>\n        <_>\n          21 17 2 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 17 3 5 -1.</_>\n        <_>\n          21 17 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 20 1 3 -1.</_>\n        <_>\n          19 21 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          20 20 4 3 -1.</_>\n        <_>\n          20 21 4 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 1 2 16 -1.</_>\n        <_>\n          21 1 2 8 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 1 3 4 -1.</_>\n        <_>\n          21 2 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 3 3 2 -1.</_>\n        <_>\n          22 4 1 2 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 4 3 3 -1.</_>\n        <_>\n          22 5 1 3 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 10 1 3 -1.</_>\n        <_>\n          20 11 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 10 2 2 -1.</_>\n        <_>\n          21 10 1 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 10 3 4 -1.</_>\n        <_>\n          21 11 3 2 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 11 1 2 -1.</_>\n        <_>\n          21 11 1 1 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 15 2 3 -1.</_>\n        <_>\n          20 16 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 16 1 3 -1.</_>\n        <_>\n          20 17 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 16 3 8 -1.</_>\n        <_>\n          22 16 1 8 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 16 2 3 -1.</_>\n        <_>\n          20 17 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 17 1 3 -1.</_>\n        <_>\n          20 18 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 17 3 7 -1.</_>\n        <_>\n          22 17 1 7 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          21 19 3 5 -1.</_>\n        <_>\n          22 19 1 5 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 1 2 4 -1.</_>\n        <_>\n          21 2 2 2 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 2 1 16 -1.</_>\n        <_>\n          22 2 1 8 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 9 2 4 -1.</_>\n        <_>\n          22 9 1 4 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 10 1 3 -1.</_>\n        <_>\n          21 11 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 10 2 7 -1.</_>\n        <_>\n          22 10 1 7 2.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 10 2 3 -1.</_>\n        <_>\n          22 11 2 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 10 2 3 -1.</_>\n        <_>\n          21 11 2 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 11 1 3 -1.</_>\n        <_>\n          21 12 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 12 1 3 -1.</_>\n        <_>\n          21 13 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 13 1 3 -1.</_>\n        <_>\n          21 14 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          22 16 1 3 -1.</_>\n        <_>\n          21 17 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 7 1 3 -1.</_>\n        <_>\n          23 8 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 10 1 3 -1.</_>\n        <_>\n          23 11 1 1 3.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 11 1 2 -1.</_>\n        <_>\n          23 12 1 1 2.</_></rects>\n      <tilted>0</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 11 1 3 -1.</_>\n        <_>\n          22 12 1 1 3.</_></rects>\n      <tilted>1</tilted></_>\n    <_>\n      <rects>\n        <_>\n          23 15 1 4 -1.</_>\n        <_>\n          22 16 1 2 2.</_></rects>\n      <tilted>1</tilted></_></features></cascade>\n</opencv_storage>\n"
        },
        {
          "name": "haarcascade_frontalface_alt.xml",
          "type": "blob",
          "size": 49.169921875,
          "content": "<?xml version=\"1.0\"?>\n<!--\nnumber of positive samples 3000\nnumber of negative samples 1500\n-->\n<opencv_storage>\n<cascade type_id=\"opencv-cascade-classifier\">\n  <stageType>BOOST</stageType>\n  <featureType>LBP</featureType>\n  <height>24</height>\n  <width>24</width>\n  <stageParams>\n    <boostType>GAB</boostType>\n    <minHitRate>0.9950000047683716</minHitRate>\n    <maxFalseAlarm>0.5000000000000000</maxFalseAlarm>\n    <weightTrimRate>0.9500000000000000</weightTrimRate>\n    <maxDepth>1</maxDepth>\n    <maxWeakCount>100</maxWeakCount></stageParams>\n  <featureParams>\n    <maxCatCount>256</maxCatCount></featureParams>\n  <stageNum>20</stageNum>\n  <stages>\n    <!-- stage 0 -->\n    <_>\n      <maxWeakCount>3</maxWeakCount>\n      <stageThreshold>-0.7520892024040222</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 46 -67130709 -21569 -1426120013 -1275125205 -21585\n            -16385 587145899 -24005</internalNodes>\n          <leafValues>\n            -0.6543210148811340 0.8888888955116272</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 13 -163512766 -769593758 -10027009 -262145 -514457854\n            -193593353 -524289 -1</internalNodes>\n          <leafValues>\n            -0.7739216089248657 0.7278633713722229</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 2 -363936790 -893203669 -1337948010 -136907894\n            1088782736 -134217726 -741544961 -1590337</internalNodes>\n          <leafValues>\n            -0.7068563103675842 0.6761534214019775</leafValues></_></weakClassifiers></_>\n    <!-- stage 1 -->\n    <_>\n      <maxWeakCount>4</maxWeakCount>\n      <stageThreshold>-0.4872078299522400</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 84 2147483647 1946124287 -536870913 2147450879\n            738132490 1061101567 243204619 2147446655</internalNodes>\n          <leafValues>\n            -0.8083735704421997 0.7685696482658386</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 21 2147483647 263176079 1879048191 254749487 1879048191\n            -134252545 -268435457 801111999</internalNodes>\n          <leafValues>\n            -0.7698410153388977 0.6592915654182434</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 106 -98110272 1610939566 -285484400 -850010381\n            -189334372 -1671954433 -571026695 -262145</internalNodes>\n          <leafValues>\n            -0.7506558895111084 0.5444605946540833</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 48 -798690576 -131075 1095771153 -237144073 -65569 -1\n            -216727745 -69206049</internalNodes>\n          <leafValues>\n            -0.7775990366935730 0.5465461611747742</leafValues></_></weakClassifiers></_>\n    <!-- stage 2 -->\n    <_>\n      <maxWeakCount>4</maxWeakCount>\n      <stageThreshold>-1.1592328548431396</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 47 -21585 -20549 -100818262 -738254174 -20561 -36865\n            -151016790 -134238549</internalNodes>\n          <leafValues>\n            -0.5601882934570313 0.7743113040924072</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 12 -286003217 183435247 -268994614 -421330945\n            -402686081 1090387966 -286785545 -402653185</internalNodes>\n          <leafValues>\n            -0.6124526262283325 0.6978127956390381</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 26 -50347012 970882927 -50463492 -1253377 -134218251\n            -50364513 -33619992 -172490753</internalNodes>\n          <leafValues>\n            -0.6114496588706970 0.6537628173828125</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 8 -273 -135266321 1877977738 -2088243418 -134217987\n            2146926575 -18910642 1095231247</internalNodes>\n          <leafValues>\n            -0.6854077577590942 0.5403239130973816</leafValues></_></weakClassifiers></_>\n    <!-- stage 3 -->\n    <_>\n      <maxWeakCount>5</maxWeakCount>\n      <stageThreshold>-0.7562355995178223</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 96 -1273 1870659519 -20971602 -67633153 -134250731\n            2004875127 -250 -150995969</internalNodes>\n          <leafValues>\n            -0.4051094949245453 0.7584033608436585</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 33 -868162224 -76810262 -4262145 -257 1465211989\n            -268959873 -2656269 -524289</internalNodes>\n          <leafValues>\n            -0.7388162612915039 0.5340843200683594</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 57 -12817 -49 -541103378 -152950 -38993 -20481 -1153876\n            -72478976</internalNodes>\n          <leafValues>\n            -0.6582943797111511 0.5339496731758118</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 125 -269484161 -452984961 -319816180 -1594032130 -2111\n            -990117891 -488975296 -520947741</internalNodes>\n          <leafValues>\n            -0.5981323719024658 0.5323504805564880</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 53 557787431 670265215 -1342193665 -1075892225\n            1998528318 1056964607 -33570977 -1</internalNodes>\n          <leafValues>\n            -0.6498787999153137 0.4913350641727448</leafValues></_></weakClassifiers></_>\n    <!-- stage 4 -->\n    <_>\n      <maxWeakCount>5</maxWeakCount>\n      <stageThreshold>-0.8085358142852783</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 60 -536873708 880195381 -16842788 -20971521 -176687276\n            -168427659 -16777260 -33554626</internalNodes>\n          <leafValues>\n            -0.5278195738792419 0.6946372389793396</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 7 -1 -62981529 -1090591130 805330978 -8388827 -41945787\n            -39577 -531118985</internalNodes>\n          <leafValues>\n            -0.5206505060195923 0.6329920291900635</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 98 -725287348 1347747543 -852489 -16809993 1489881036\n            -167903241 -1 -1</internalNodes>\n          <leafValues>\n            -0.7516061067581177 0.4232024252414703</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 44 -32777 1006582562 -65 935312171 -8388609 -1078198273\n            -1 733886267</internalNodes>\n          <leafValues>\n            -0.7639313936233521 0.4123568832874298</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 24 -85474705 2138828511 -1036436754 817625855\n            1123369029 -58796809 -1013468481 -194513409</internalNodes>\n          <leafValues>\n            -0.5123769044876099 0.5791834592819214</leafValues></_></weakClassifiers></_>\n    <!-- stage 5 -->\n    <_>\n      <maxWeakCount>5</maxWeakCount>\n      <stageThreshold>-0.5549971461296082</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 42 -17409 -20481 -268457797 -134239493 -17473 -1 -21829\n            -21846</internalNodes>\n          <leafValues>\n            -0.3763174116611481 0.7298233509063721</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 6 -805310737 -2098262358 -269504725 682502698\n            2147483519 1740574719 -1090519233 -268472385</internalNodes>\n          <leafValues>\n            -0.5352765917778015 0.5659480094909668</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 61 -67109678 -6145 -8 -87884584 -20481 -1073762305\n            -50856216 -16849696</internalNodes>\n          <leafValues>\n            -0.5678374171257019 0.4961479902267456</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 123 -138428633 1002418167 -1359008245 -1908670465\n            -1346685918 910098423 -1359010520 -1346371657</internalNodes>\n          <leafValues>\n            -0.5706262588500977 0.4572288393974304</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 9 -89138513 -4196353 1256531674 -1330665426 1216308261\n            -36190633 33498198 -151796633</internalNodes>\n          <leafValues>\n            -0.5344601869583130 0.4672054052352905</leafValues></_></weakClassifiers></_>\n    <!-- stage 6 -->\n    <_>\n      <maxWeakCount>5</maxWeakCount>\n      <stageThreshold>-0.8776460289955139</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 105 1073769576 206601725 -34013449 -33554433 -789514004\n            -101384321 -690225153 -264193</internalNodes>\n          <leafValues>\n            -0.7700348496437073 0.5943940877914429</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 30 -1432340997 -823623681 -49153 -34291724 -269484035\n            -1342767105 -1078198273 -1277955</internalNodes>\n          <leafValues>\n            -0.5043668746948242 0.6151274442672730</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 35 -1067385040 -195758209 -436748425 -134217731\n            -50855988 -129 -1 -1</internalNodes>\n          <leafValues>\n            -0.6808040738105774 0.4667325913906097</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 119 832534325 -34111555 -26050561 -423659521 -268468364\n            2105014143 -2114244 -17367185</internalNodes>\n          <leafValues>\n            -0.4927591383457184 0.5401885509490967</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 82 -1089439888 -1080524865 2143059967 -1114121\n            -1140949004 -3 -2361356 -739516</internalNodes>\n          <leafValues>\n            -0.6445107460021973 0.4227822124958038</leafValues></_></weakClassifiers></_>\n    <!-- stage 7 -->\n    <_>\n      <maxWeakCount>6</maxWeakCount>\n      <stageThreshold>-1.1139287948608398</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 52 -1074071553 -1074003969 -1 -1280135430 -5324817 -1\n            -335548482 582134442</internalNodes>\n          <leafValues>\n            -0.5307556986808777 0.6258179545402527</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 99 -706937396 -705364068 -540016724 -570495027\n            -570630659 -587857963 -33628164 -35848193</internalNodes>\n          <leafValues>\n            -0.5227634310722351 0.5049746036529541</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 18 -2035630093 42119158 -268503053 -1671444 261017599\n            1325432815 1954394111 -805306449</internalNodes>\n          <leafValues>\n            -0.4983572661876679 0.5106441378593445</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 111 -282529488 -1558073088 1426018736 -170526448\n            -546832487 -5113037 -34243375 -570427929</internalNodes>\n          <leafValues>\n            -0.4990860521793366 0.5060507059097290</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 92 1016332500 -606301707 915094269 -1080086049\n            -1837027144 -1361600280 2147318747 1067975613</internalNodes>\n          <leafValues>\n            -0.5695009231567383 0.4460467398166657</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 51 -656420166 -15413034 -141599534 -603435836\n            1505950458 -787556946 -79823438 -1326199134</internalNodes>\n          <leafValues>\n            -0.6590405106544495 0.3616424500942230</leafValues></_></weakClassifiers></_>\n    <!-- stage 8 -->\n    <_>\n      <maxWeakCount>7</maxWeakCount>\n      <stageThreshold>-0.8243625760078430</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 28 -901591776 -201916417 -262 -67371009 -143312112\n            -524289 -41943178 -1</internalNodes>\n          <leafValues>\n            -0.4972776770591736 0.6027074456214905</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 112 -4507851 -411340929 -268437513 -67502145 -17350859\n            -32901 -71344315 -29377</internalNodes>\n          <leafValues>\n            -0.4383158981800079 0.5966237187385559</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 69 -75894785 -117379438 -239063587 -12538500 1485072126\n            2076233213 2123118847 801906927</internalNodes>\n          <leafValues>\n            -0.6386105418205261 0.3977999985218048</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 19 -823480413 786628589 -16876049 -1364262914 242165211\n            1315930109 -696268833 -455082829</internalNodes>\n          <leafValues>\n            -0.5512794256210327 0.4282079637050629</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 73 -521411968 6746762 -1396236286 -2038436114\n            -185612509 57669627 -143132877 -1041235973</internalNodes>\n          <leafValues>\n            -0.6418755054473877 0.3549866080284119</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 126 -478153869 1076028979 -1645895615 1365298272\n            -557859073 -339771473 1442574528 -1058802061</internalNodes>\n          <leafValues>\n            -0.4841901361942291 0.4668019413948059</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 45 -246350404 -1650402048 -1610612745 -788400696\n            1467604861 -2787397 1476263935 -4481349</internalNodes>\n          <leafValues>\n            -0.5855734348297119 0.3879135847091675</leafValues></_></weakClassifiers></_>\n    <!-- stage 9 -->\n    <_>\n      <maxWeakCount>7</maxWeakCount>\n      <stageThreshold>-1.2237116098403931</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 114 -24819 1572863935 -16809993 -67108865 2146778388\n            1433927541 -268608444 -34865205</internalNodes>\n          <leafValues>\n            -0.2518476545810700 0.7088654041290283</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 97 -1841359 -134271049 -32769 -5767369 -1116675 -2185\n            -8231 -33603327</internalNodes>\n          <leafValues>\n            -0.4303432404994965 0.5283288359642029</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 25 -1359507589 -1360593090 -1073778729 -269553812\n            -809512977 1744707583 -41959433 -134758978</internalNodes>\n          <leafValues>\n            -0.4259553551673889 0.5440809130668640</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 34 729753407 -134270989 -1140907329 -235200777\n            658456383 2147467263 -1140900929 -16385</internalNodes>\n          <leafValues>\n            -0.5605589151382446 0.4220733344554901</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 134 -310380553 -420675595 -193005472 -353568129\n            1205338070 -990380036 887604324 -420544526</internalNodes>\n          <leafValues>\n            -0.5192656517028809 0.4399855434894562</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 16 -1427119361 1978920959 -287119734 -487068946\n            114759245 -540578051 -707510259 -671660453</internalNodes>\n          <leafValues>\n            -0.5013077259063721 0.4570254683494568</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 74 -738463762 -889949281 -328301948 -121832450\n            -1142658284 -1863576559 2146417353 -263185</internalNodes>\n          <leafValues>\n            -0.4631414115428925 0.4790246188640595</leafValues></_></weakClassifiers></_>\n    <!-- stage 10 -->\n    <_>\n      <maxWeakCount>7</maxWeakCount>\n      <stageThreshold>-0.5544230937957764</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 113 -76228780 -65538 -1 -67174401 -148007 -33 -221796\n            -272842924</internalNodes>\n          <leafValues>\n            -0.3949716091156006 0.6082032322883606</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 110 369147696 -1625232112 2138570036 -1189900 790708019\n            -1212613127 799948719 -4456483</internalNodes>\n          <leafValues>\n            -0.4855885505676270 0.4785369932651520</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 37 784215839 -290015241 536832799 -402984963\n            -1342414991 -838864897 -176769 -268456129</internalNodes>\n          <leafValues>\n            -0.4620285332202911 0.4989669024944305</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 41 -486418688 -171915327 -340294900 -21938 -519766032\n            -772751172 -73096060 -585322623</internalNodes>\n          <leafValues>\n            -0.6420643329620361 0.3624351918697357</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 117 -33554953 -475332625 -1423463824 -2077230421\n            -4849669 -2080505925 -219032928 -1071915349</internalNodes>\n          <leafValues>\n            -0.4820112884044647 0.4632140696048737</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 65 -834130468 -134217476 -1349314083 -1073803559\n            -619913764 -1449131844 -1386890321 -1979118423</internalNodes>\n          <leafValues>\n            -0.4465552568435669 0.5061788558959961</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 56 -285249779 1912569855 -16530 -1731022870 -1161904146\n            -1342177297 -268439634 -1464078708</internalNodes>\n          <leafValues>\n            -0.5190586447715759 0.4441480338573456</leafValues></_></weakClassifiers></_>\n    <!-- stage 11 -->\n    <_>\n      <maxWeakCount>7</maxWeakCount>\n      <stageThreshold>-0.7161560654640198</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 20 1246232575 1078001186 -10027057 60102 -277348353\n            -43646987 -1210581153 1195769615</internalNodes>\n          <leafValues>\n            -0.4323809444904327 0.5663768053054810</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 15 -778583572 -612921106 -578775890 -4036478\n            -1946580497 -1164766570 -1986687009 -12103599</internalNodes>\n          <leafValues>\n            -0.4588732719421387 0.4547033011913300</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 129 -1073759445 2013231743 -1363169553 -1082459201\n            -1414286549 868185983 -1356133589 -1077936257</internalNodes>\n          <leafValues>\n            -0.5218553543090820 0.4111092388629913</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 102 -84148365 -2093417722 -1204850272 564290299\n            -67121221 -1342177350 -1309195902 -776734797</internalNodes>\n          <leafValues>\n            -0.4920000731945038 0.4326725304126740</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 88 -25694458 67104495 -290216278 -168563037 2083877442\n            1702788383 -144191964 -234882162</internalNodes>\n          <leafValues>\n            -0.4494568109512329 0.4448510706424713</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 59 -857980836 904682741 -1612267521 232279415\n            1550862252 -574825221 -357380888 -4579409</internalNodes>\n          <leafValues>\n            -0.5180826783180237 0.3888972699642181</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 27 -98549440 -137838400 494928389 -246013630 939541351\n            -1196072350 -620603549 2137216273</internalNodes>\n          <leafValues>\n            -0.6081240773200989 0.3333222270011902</leafValues></_></weakClassifiers></_>\n    <!-- stage 12 -->\n    <_>\n      <maxWeakCount>8</maxWeakCount>\n      <stageThreshold>-0.6743940711021423</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 29 -150995201 2071191945 -1302151626 536934335\n            -1059008937 914128709 1147328110 -268369925</internalNodes>\n          <leafValues>\n            -0.1790193915367127 0.6605972051620483</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 128 -134509479 1610575703 -1342177289 1861484541\n            -1107833788 1577058173 -333558568 -136319041</internalNodes>\n          <leafValues>\n            -0.3681024610996246 0.5139749646186829</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 70 -1 1060154476 -1090984524 -630918524 -539492875\n            779616255 -839568424 -321</internalNodes>\n          <leafValues>\n            -0.3217232525348663 0.6171553134918213</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 4 -269562385 -285029906 -791084350 -17923776 235286671\n            1275504943 1344390399 -966276889</internalNodes>\n          <leafValues>\n            -0.4373284578323364 0.4358185231685638</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 76 17825984 -747628419 595427229 1474759671 575672208\n            -1684005538 872217086 -1155858277</internalNodes>\n          <leafValues>\n            -0.4404836893081665 0.4601220190525055</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 124 -336593039 1873735591 -822231622 -355795238\n            -470820869 -1997537409 -1057132384 -1015285005</internalNodes>\n          <leafValues>\n            -0.4294152259826660 0.4452161788940430</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 54 -834212130 -593694721 -322142257 -364892500\n            -951029539 -302125121 -1615106053 -79249765</internalNodes>\n          <leafValues>\n            -0.3973052501678467 0.4854526817798615</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 95 1342144479 2147431935 -33554561 -47873 -855685912 -1\n            1988052447 536827383</internalNodes>\n          <leafValues>\n            -0.7054683566093445 0.2697997391223908</leafValues></_></weakClassifiers></_>\n    <!-- stage 13 -->\n    <_>\n      <maxWeakCount>9</maxWeakCount>\n      <stageThreshold>-1.2042298316955566</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 39 1431368960 -183437936 -537002499 -137497097\n            1560590321 -84611081 -2097193 -513</internalNodes>\n          <leafValues>\n            -0.5905947685241699 0.5101932883262634</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 120 -1645259691 2105491231 2130706431 1458995007\n            -8567536 -42483883 -33780003 -21004417</internalNodes>\n          <leafValues>\n            -0.4449204802513123 0.4490709304809570</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 89 -612381022 -505806938 -362027516 -452985106\n            275854917 1920431639 -12600561 -134221825</internalNodes>\n          <leafValues>\n            -0.4693818688392639 0.4061094820499420</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 14 -805573153 -161 -554172679 -530519488 -16779441\n            2000682871 -33604275 -150997129</internalNodes>\n          <leafValues>\n            -0.3600351214408875 0.5056326985359192</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 67 6192 435166195 1467449341 2046691505 -1608493775\n            -4755729 -1083162625 -71365637</internalNodes>\n          <leafValues>\n            -0.4459891915321350 0.4132415652275085</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 86 -41689215 -3281034 1853357967 -420712635 -415924289\n            -270209208 -1088293113 -825311232</internalNodes>\n          <leafValues>\n            -0.4466069042682648 0.4135067760944367</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 80 -117391116 -42203396 2080374461 -188709 -542008165\n            -356831940 -1091125345 -1073796897</internalNodes>\n          <leafValues>\n            -0.3394956290721893 0.5658645033836365</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 75 -276830049 1378714472 -1342181951 757272098\n            1073740607 -282199241 -415761549 170896931</internalNodes>\n          <leafValues>\n            -0.5346512198448181 0.3584479391574860</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 55 -796075825 -123166849 2113667055 -217530421\n            -1107432194 -16385 -806359809 -391188771</internalNodes>\n          <leafValues>\n            -0.4379335641860962 0.4123645126819611</leafValues></_></weakClassifiers></_>\n    <!-- stage 14 -->\n    <_>\n      <maxWeakCount>10</maxWeakCount>\n      <stageThreshold>-0.8402050137519836</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 71 -890246622 15525883 -487690486 47116238 -1212319899\n            -1291847681 -68159890 -469829921</internalNodes>\n          <leafValues>\n            -0.2670986354351044 0.6014143228530884</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 31 -1361180685 -1898008841 -1090588811 -285410071\n            -1074016265 -840443905 2147221487 -262145</internalNodes>\n          <leafValues>\n            -0.4149844348430634 0.4670888185501099</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 40 1426190596 1899364271 2142731795 -142607505\n            -508232452 -21563393 -41960001 -65</internalNodes>\n          <leafValues>\n            -0.4985891580581665 0.3719584941864014</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 109 -201337965 10543906 -236498096 -746195597\n            1974565825 -15204415 921907633 -190058309</internalNodes>\n          <leafValues>\n            -0.4568729996681213 0.3965812027454376</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 130 -595026732 -656401928 -268649235 -571490699\n            -440600392 -133131 -358810952 -2004088646</internalNodes>\n          <leafValues>\n            -0.4770836830139160 0.3862601518630981</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 66 941674740 -1107882114 1332789109 -67691015\n            -1360463693 -1556612430 -609108546 733546933</internalNodes>\n          <leafValues>\n            -0.4877715110778809 0.3778986334800720</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 49 -17114945 -240061474 1552871558 -82775604 -932393844\n            -1308544889 -532635478 -99042357</internalNodes>\n          <leafValues>\n            -0.3721654713153839 0.4994400143623352</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 133 -655906006 1405502603 -939205164 1884929228\n            -498859222 559417357 -1928559445 -286264385</internalNodes>\n          <leafValues>\n            -0.3934195041656494 0.4769641458988190</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 0 -335837777 1860677295 -90 -1946186226 931096183\n            251612987 2013265917 -671232197</internalNodes>\n          <leafValues>\n            -0.4323300719261169 0.4342164099216461</leafValues></_>\n        <!-- tree 9 -->\n        <_>\n          <internalNodes>\n            0 -1 103 37769424 -137772680 374692301 2002666345 -536176194\n            -1644484728 807009019 1069089930</internalNodes>\n          <leafValues>\n            -0.4993278682231903 0.3665378093719482</leafValues></_></weakClassifiers></_>\n    <!-- stage 15 -->\n    <_>\n      <maxWeakCount>9</maxWeakCount>\n      <stageThreshold>-1.1974394321441650</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 43 -5505 2147462911 2143265466 -4511070 -16450 -257\n            -201348440 -71333206</internalNodes>\n          <leafValues>\n            -0.3310225307941437 0.5624626278877258</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 90 -136842268 -499330741 2015250980 -87107126\n            -641665744 -788524639 -1147864792 -134892563</internalNodes>\n          <leafValues>\n            -0.5266560912132263 0.3704403042793274</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 104 -146800880 -1780368555 2111170033 -140904684\n            -16777551 -1946681885 -1646463595 -839131947</internalNodes>\n          <leafValues>\n            -0.4171888828277588 0.4540435671806335</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 85 -832054034 -981663763 -301990281 -578814081\n            -932319000 -1997406723 -33555201 -69206017</internalNodes>\n          <leafValues>\n            -0.4556705355644226 0.3704262077808380</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 24 -118492417 -1209026825 1119023838 -1334313353\n            1112948738 -297319313 1378887291 -139469193</internalNodes>\n          <leafValues>\n            -0.4182529747486115 0.4267231225967407</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 78 -1714382628 -2353704 -112094959 -549613092\n            -1567058760 -1718550464 -342315012 -1074972227</internalNodes>\n          <leafValues>\n            -0.3625369668006897 0.4684656262397766</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 5 -85219702 316836394 -33279 1904970288 2117267315\n            -260901769 -621461759 -88607770</internalNodes>\n          <leafValues>\n            -0.4742925167083740 0.3689507246017456</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 11 -294654041 -353603585 -1641159686 -50331921\n            -2080899877 1145569279 -143132713 -152044037</internalNodes>\n          <leafValues>\n            -0.3666271567344666 0.4580127298831940</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 32 1887453658 -638545712 -1877976819 -34320972\n            -1071067983 -661345416 -583338277 1060190561</internalNodes>\n          <leafValues>\n            -0.4567637443542481 0.3894708156585693</leafValues></_></weakClassifiers></_>\n    <!-- stage 16 -->\n    <_>\n      <maxWeakCount>9</maxWeakCount>\n      <stageThreshold>-0.5733128190040588</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 122 -994063296 1088745462 -318837116 -319881377\n            1102566613 1165490103 -121679694 -134744129</internalNodes>\n          <leafValues>\n            -0.4055117964744568 0.5487945079803467</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 68 -285233233 -538992907 1811935199 -369234005 -529\n            -20593 -20505 -1561401854</internalNodes>\n          <leafValues>\n            -0.3787897229194641 0.4532003402709961</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 58 -1335245632 1968917183 1940861695 536816369\n            -1226071367 -570908176 457026619 1000020667</internalNodes>\n          <leafValues>\n            -0.4258328974246979 0.4202791750431061</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 94 -1360318719 -1979797897 -50435249 -18646473\n            -608879292 -805306691 -269304244 -17840167</internalNodes>\n          <leafValues>\n            -0.4561023116111755 0.4002747833728790</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 87 2062765935 -16449 -1275080721 -16406 45764335\n            -1090552065 -772846337 -570464322</internalNodes>\n          <leafValues>\n            -0.4314672648906708 0.4086346626281738</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 127 -536896021 1080817663 -738234288 -965478709\n            -2082767969 1290855887 1993822934 -990381609</internalNodes>\n          <leafValues>\n            -0.4174543321132660 0.4249868988990784</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 3 -818943025 168730891 -293610428 -79249354 669224671\n            621166734 1086506807 1473768907</internalNodes>\n          <leafValues>\n            -0.4321364760398865 0.4090838730335236</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 79 -68895696 -67107736 -1414315879 -841676168\n            -619843344 -1180610531 -1081990469 1043203389</internalNodes>\n          <leafValues>\n            -0.5018386244773865 0.3702533841133118</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 116 -54002134 -543485719 -2124882422 -1437445858\n            -115617074 -1195787391 -1096024366 -2140472445</internalNodes>\n          <leafValues>\n            -0.5037505626678467 0.3564981222152710</leafValues></_></weakClassifiers></_>\n    <!-- stage 17 -->\n    <_>\n      <maxWeakCount>9</maxWeakCount>\n      <stageThreshold>-0.4892596900463104</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 132 -67113211 2003808111 1862135111 846461923 -2752\n            2002237273 -273154752 1937223539</internalNodes>\n          <leafValues>\n            -0.2448196411132813 0.5689709186553955</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 62 1179423888 -78064940 -611839555 -539167899\n            -1289358360 -1650810108 -892540499 -1432827684</internalNodes>\n          <leafValues>\n            -0.4633283913135529 0.3587929606437683</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 23 -285212705 -78450761 -656212031 -264050110 -27787425\n            -1334349961 -547662981 -135796924</internalNodes>\n          <leafValues>\n            -0.3731099069118500 0.4290455579757690</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 77 341863476 403702016 -550588417 1600194541\n            -1080690735 951127993 -1388580949 -1153717473</internalNodes>\n          <leafValues>\n            -0.3658909499645233 0.4556473195552826</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 22 -586880702 -204831512 -100644596 -39319550\n            -1191150794 705692513 457203315 -75806957</internalNodes>\n          <leafValues>\n            -0.5214384198188782 0.3221037387847900</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 72 -416546870 545911370 -673716192 -775559454\n            -264113598 139424 -183369982 -204474641</internalNodes>\n          <leafValues>\n            -0.4289036989212036 0.4004956185817719</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 50 -1026505020 -589692154 -1740499937 -1563770497\n            1348491006 -60710713 -1109853489 -633909413</internalNodes>\n          <leafValues>\n            -0.4621542394161224 0.3832748532295227</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 108 -1448872304 -477895040 -1778390608 -772418127\n            -1789923416 -1612057181 -805306693 -1415842113</internalNodes>\n          <leafValues>\n            -0.3711548447608948 0.4612701535224915</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 92 407905424 -582449988 52654751 -1294472 -285103725\n            -74633006 1871559083 1057955850</internalNodes>\n          <leafValues>\n            -0.5180652141571045 0.3205870389938355</leafValues></_></weakClassifiers></_>\n    <!-- stage 18 -->\n    <_>\n      <maxWeakCount>10</maxWeakCount>\n      <stageThreshold>-0.5911940932273865</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 81 4112 -1259563825 -846671428 -100902460 1838164148\n            -74153752 -90653988 -1074263896</internalNodes>\n          <leafValues>\n            -0.2592592537403107 0.5873016119003296</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 1 -285216785 -823206977 -1085589 -1081346 1207959293\n            1157103471 2097133565 -2097169</internalNodes>\n          <leafValues>\n            -0.3801195919513702 0.4718827307224274</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 121 -12465 -536875169 2147478367 2130706303 -37765492\n            -866124467 -318782328 -1392509185</internalNodes>\n          <leafValues>\n            -0.3509117066860199 0.5094807147979736</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 38 2147449663 -20741 -16794757 1945873146 -16710 -1\n            -8406341 -67663041</internalNodes>\n          <leafValues>\n            -0.4068757295608521 0.4130136370658875</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 17 -155191713 866117231 1651407483 548272812 -479201468\n            -447742449 1354229504 -261884429</internalNodes>\n          <leafValues>\n            -0.4557141065597534 0.3539792001247406</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 100 -225319378 -251682065 -492783986 -792341777\n            -1287261695 1393643841 -11274182 -213909521</internalNodes>\n          <leafValues>\n            -0.4117803275585175 0.4118592441082001</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 63 -382220122 -2002072729 -51404800 -371201558\n            -923011069 -2135301457 -2066104743 -1042557441</internalNodes>\n          <leafValues>\n            -0.4008397758007050 0.4034757018089294</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 101 -627353764 -48295149 1581203952 -436258614\n            -105268268 -1435893445 -638126888 -1061107126</internalNodes>\n          <leafValues>\n            -0.5694189667701721 0.2964762747287750</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 118 -8399181 1058107691 -621022752 -251003468 -12582915\n            -574619739 -994397789 -1648362021</internalNodes>\n          <leafValues>\n            -0.3195341229438782 0.5294018983840942</leafValues></_>\n        <!-- tree 9 -->\n        <_>\n          <internalNodes>\n            0 -1 92 -348343812 -1078389516 1717960437 364735981\n            -1783841602 -4883137 -457572354 -1076950384</internalNodes>\n          <leafValues>\n            -0.3365339040756226 0.5067458748817444</leafValues></_></weakClassifiers></_>\n    <!-- stage 19 -->\n    <_>\n      <maxWeakCount>10</maxWeakCount>\n      <stageThreshold>-0.7612916231155396</stageThreshold>\n      <weakClassifiers>\n        <!-- tree 0 -->\n        <_>\n          <internalNodes>\n            0 -1 10 -1976661318 -287957604 -1659497122 -782068 43591089\n            -453637880 1435470000 -1077438561</internalNodes>\n          <leafValues>\n            -0.4204545319080353 0.5165745615959168</leafValues></_>\n        <!-- tree 1 -->\n        <_>\n          <internalNodes>\n            0 -1 131 -67110925 14874979 -142633168 -1338923040\n            2046713291 -2067933195 1473503712 -789579837</internalNodes>\n          <leafValues>\n            -0.3762553930282593 0.4075302779674530</leafValues></_>\n        <!-- tree 2 -->\n        <_>\n          <internalNodes>\n            0 -1 83 -272814301 -1577073 -1118685 -305156120 -1052289\n            -1073813756 -538971154 -355523038</internalNodes>\n          <leafValues>\n            -0.4253497421741486 0.3728055357933044</leafValues></_>\n        <!-- tree 3 -->\n        <_>\n          <internalNodes>\n            0 -1 135 -2233 -214486242 -538514758 573747007 -159390971\n            1994225489 -973738098 -203424005</internalNodes>\n          <leafValues>\n            -0.3601998090744019 0.4563256204128265</leafValues></_>\n        <!-- tree 4 -->\n        <_>\n          <internalNodes>\n            0 -1 115 -261031688 -1330369299 -641860609 1029570301\n            -1306461192 -1196149518 -1529767778 683139823</internalNodes>\n          <leafValues>\n            -0.4034293889999390 0.4160816967487335</leafValues></_>\n        <!-- tree 5 -->\n        <_>\n          <internalNodes>\n            0 -1 64 -572993608 -34042628 -417865 -111109 -1433365268\n            -19869715 -1920939864 -1279457063</internalNodes>\n          <leafValues>\n            -0.3620899617671967 0.4594142735004425</leafValues></_>\n        <!-- tree 6 -->\n        <_>\n          <internalNodes>\n            0 -1 36 -626275097 -615256993 1651946018 805366393\n            2016559730 -430780849 -799868165 -16580645</internalNodes>\n          <leafValues>\n            -0.3903816640377045 0.4381459355354309</leafValues></_>\n        <!-- tree 7 -->\n        <_>\n          <internalNodes>\n            0 -1 93 1354797300 -1090957603 1976418270 -1342502178\n            -1851873892 -1194637077 -1153521668 -1108399474</internalNodes>\n          <leafValues>\n            -0.3591445386409760 0.4624078869819641</leafValues></_>\n        <!-- tree 8 -->\n        <_>\n          <internalNodes>\n            0 -1 91 68157712 1211368313 -304759523 1063017136 798797750\n            -275513546 648167355 -1145357350</internalNodes>\n          <leafValues>\n            -0.4297670423984528 0.4023293554782867</leafValues></_>\n        <!-- tree 9 -->\n        <_>\n          <internalNodes>\n            0 -1 107 -546318240 -1628569602 -163577944 -537002306\n            -545456389 -1325465645 -380446736 -1058473386</internalNodes>\n          <leafValues>\n            -0.5727006793022156 0.2995934784412384</leafValues></_></weakClassifiers></_></stages>\n  <features>\n    <_>\n      <rect>\n        0 0 3 5</rect></_>\n    <_>\n      <rect>\n        0 0 4 2</rect></_>\n    <_>\n      <rect>\n        0 0 6 3</rect></_>\n    <_>\n      <rect>\n        0 1 2 3</rect></_>\n    <_>\n      <rect>\n        0 1 3 3</rect></_>\n    <_>\n      <rect>\n        0 1 3 7</rect></_>\n    <_>\n      <rect>\n        0 4 3 3</rect></_>\n    <_>\n      <rect>\n        0 11 3 4</rect></_>\n    <_>\n      <rect>\n        0 12 8 4</rect></_>\n    <_>\n      <rect>\n        0 14 4 3</rect></_>\n    <_>\n      <rect>\n        1 0 5 3</rect></_>\n    <_>\n      <rect>\n        1 1 2 2</rect></_>\n    <_>\n      <rect>\n        1 3 3 1</rect></_>\n    <_>\n      <rect>\n        1 7 4 4</rect></_>\n    <_>\n      <rect>\n        1 12 2 2</rect></_>\n    <_>\n      <rect>\n        1 13 4 1</rect></_>\n    <_>\n      <rect>\n        1 14 4 3</rect></_>\n    <_>\n      <rect>\n        1 17 3 2</rect></_>\n    <_>\n      <rect>\n        2 0 2 3</rect></_>\n    <_>\n      <rect>\n        2 1 2 2</rect></_>\n    <_>\n      <rect>\n        2 2 4 6</rect></_>\n    <_>\n      <rect>\n        2 3 4 4</rect></_>\n    <_>\n      <rect>\n        2 7 2 1</rect></_>\n    <_>\n      <rect>\n        2 11 2 3</rect></_>\n    <_>\n      <rect>\n        2 17 3 2</rect></_>\n    <_>\n      <rect>\n        3 0 2 2</rect></_>\n    <_>\n      <rect>\n        3 1 7 3</rect></_>\n    <_>\n      <rect>\n        3 7 2 1</rect></_>\n    <_>\n      <rect>\n        3 7 2 4</rect></_>\n    <_>\n      <rect>\n        3 18 2 2</rect></_>\n    <_>\n      <rect>\n        4 0 2 3</rect></_>\n    <_>\n      <rect>\n        4 3 2 1</rect></_>\n    <_>\n      <rect>\n        4 6 2 1</rect></_>\n    <_>\n      <rect>\n        4 6 2 5</rect></_>\n    <_>\n      <rect>\n        4 7 5 2</rect></_>\n    <_>\n      <rect>\n        4 8 4 3</rect></_>\n    <_>\n      <rect>\n        4 18 2 2</rect></_>\n    <_>\n      <rect>\n        5 0 2 2</rect></_>\n    <_>\n      <rect>\n        5 3 4 4</rect></_>\n    <_>\n      <rect>\n        5 6 2 5</rect></_>\n    <_>\n      <rect>\n        5 9 2 2</rect></_>\n    <_>\n      <rect>\n        5 10 2 2</rect></_>\n    <_>\n      <rect>\n        6 3 4 4</rect></_>\n    <_>\n      <rect>\n        6 4 4 3</rect></_>\n    <_>\n      <rect>\n        6 5 2 3</rect></_>\n    <_>\n      <rect>\n        6 5 2 5</rect></_>\n    <_>\n      <rect>\n        6 5 4 3</rect></_>\n    <_>\n      <rect>\n        6 6 4 2</rect></_>\n    <_>\n      <rect>\n        6 6 4 4</rect></_>\n    <_>\n      <rect>\n        6 18 1 2</rect></_>\n    <_>\n      <rect>\n        6 21 2 1</rect></_>\n    <_>\n      <rect>\n        7 0 3 7</rect></_>\n    <_>\n      <rect>\n        7 4 2 3</rect></_>\n    <_>\n      <rect>\n        7 9 5 1</rect></_>\n    <_>\n      <rect>\n        7 21 2 1</rect></_>\n    <_>\n      <rect>\n        8 0 1 4</rect></_>\n    <_>\n      <rect>\n        8 5 2 2</rect></_>\n    <_>\n      <rect>\n        8 5 3 2</rect></_>\n    <_>\n      <rect>\n        8 17 3 1</rect></_>\n    <_>\n      <rect>\n        8 18 1 2</rect></_>\n    <_>\n      <rect>\n        9 0 5 3</rect></_>\n    <_>\n      <rect>\n        9 2 2 6</rect></_>\n    <_>\n      <rect>\n        9 5 1 1</rect></_>\n    <_>\n      <rect>\n        9 11 1 1</rect></_>\n    <_>\n      <rect>\n        9 16 1 1</rect></_>\n    <_>\n      <rect>\n        9 16 2 1</rect></_>\n    <_>\n      <rect>\n        9 17 1 1</rect></_>\n    <_>\n      <rect>\n        9 18 1 1</rect></_>\n    <_>\n      <rect>\n        10 5 1 2</rect></_>\n    <_>\n      <rect>\n        10 5 3 3</rect></_>\n    <_>\n      <rect>\n        10 7 1 5</rect></_>\n    <_>\n      <rect>\n        10 8 1 1</rect></_>\n    <_>\n      <rect>\n        10 9 1 1</rect></_>\n    <_>\n      <rect>\n        10 10 1 1</rect></_>\n    <_>\n      <rect>\n        10 10 1 2</rect></_>\n    <_>\n      <rect>\n        10 14 3 3</rect></_>\n    <_>\n      <rect>\n        10 15 1 1</rect></_>\n    <_>\n      <rect>\n        10 15 2 1</rect></_>\n    <_>\n      <rect>\n        10 16 1 1</rect></_>\n    <_>\n      <rect>\n        10 16 2 1</rect></_>\n    <_>\n      <rect>\n        10 17 1 1</rect></_>\n    <_>\n      <rect>\n        10 21 1 1</rect></_>\n    <_>\n      <rect>\n        11 3 2 2</rect></_>\n    <_>\n      <rect>\n        11 5 1 2</rect></_>\n    <_>\n      <rect>\n        11 5 3 3</rect></_>\n    <_>\n      <rect>\n        11 5 4 6</rect></_>\n    <_>\n      <rect>\n        11 6 1 1</rect></_>\n    <_>\n      <rect>\n        11 7 2 2</rect></_>\n    <_>\n      <rect>\n        11 8 1 2</rect></_>\n    <_>\n      <rect>\n        11 10 1 1</rect></_>\n    <_>\n      <rect>\n        11 10 1 2</rect></_>\n    <_>\n      <rect>\n        11 15 1 1</rect></_>\n    <_>\n      <rect>\n        11 17 1 1</rect></_>\n    <_>\n      <rect>\n        11 18 1 1</rect></_>\n    <_>\n      <rect>\n        12 0 2 2</rect></_>\n    <_>\n      <rect>\n        12 1 2 5</rect></_>\n    <_>\n      <rect>\n        12 2 4 1</rect></_>\n    <_>\n      <rect>\n        12 3 1 3</rect></_>\n    <_>\n      <rect>\n        12 7 3 4</rect></_>\n    <_>\n      <rect>\n        12 10 3 2</rect></_>\n    <_>\n      <rect>\n        12 11 1 1</rect></_>\n    <_>\n      <rect>\n        12 12 3 2</rect></_>\n    <_>\n      <rect>\n        12 14 4 3</rect></_>\n    <_>\n      <rect>\n        12 17 1 1</rect></_>\n    <_>\n      <rect>\n        12 21 2 1</rect></_>\n    <_>\n      <rect>\n        13 6 2 5</rect></_>\n    <_>\n      <rect>\n        13 7 3 5</rect></_>\n    <_>\n      <rect>\n        13 11 3 2</rect></_>\n    <_>\n      <rect>\n        13 17 2 2</rect></_>\n    <_>\n      <rect>\n        13 17 3 2</rect></_>\n    <_>\n      <rect>\n        13 18 1 2</rect></_>\n    <_>\n      <rect>\n        13 18 2 2</rect></_>\n    <_>\n      <rect>\n        14 0 2 2</rect></_>\n    <_>\n      <rect>\n        14 1 1 3</rect></_>\n    <_>\n      <rect>\n        14 2 3 2</rect></_>\n    <_>\n      <rect>\n        14 7 2 1</rect></_>\n    <_>\n      <rect>\n        14 13 2 1</rect></_>\n    <_>\n      <rect>\n        14 13 3 3</rect></_>\n    <_>\n      <rect>\n        14 17 2 2</rect></_>\n    <_>\n      <rect>\n        15 0 2 2</rect></_>\n    <_>\n      <rect>\n        15 0 2 3</rect></_>\n    <_>\n      <rect>\n        15 4 3 2</rect></_>\n    <_>\n      <rect>\n        15 4 3 6</rect></_>\n    <_>\n      <rect>\n        15 6 3 2</rect></_>\n    <_>\n      <rect>\n        15 11 3 4</rect></_>\n    <_>\n      <rect>\n        15 13 3 2</rect></_>\n    <_>\n      <rect>\n        15 17 2 2</rect></_>\n    <_>\n      <rect>\n        15 17 3 2</rect></_>\n    <_>\n      <rect>\n        16 1 2 3</rect></_>\n    <_>\n      <rect>\n        16 3 2 4</rect></_>\n    <_>\n      <rect>\n        16 6 1 1</rect></_>\n    <_>\n      <rect>\n        16 16 2 2</rect></_>\n    <_>\n      <rect>\n        17 1 2 2</rect></_>\n    <_>\n      <rect>\n        17 1 2 5</rect></_>\n    <_>\n      <rect>\n        17 12 2 2</rect></_>\n    <_>\n      <rect>\n        18 0 2 2</rect></_></features></cascade>\n</opencv_storage>"
        },
        {
          "name": "mushroom",
          "type": "tree",
          "content": null
        },
        {
          "name": "shape_sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "stereoData",
          "type": "tree",
          "content": null
        },
        {
          "name": "stuff.jpg",
          "type": "blob",
          "size": 28.6767578125,
          "content": null
        },
        {
          "name": "test.avi",
          "type": "blob",
          "size": 3444.5,
          "content": null
        },
        {
          "name": "tree.avi",
          "type": "blob",
          "size": 1280,
          "content": null
        }
      ]
    }
  ]
}