{
  "metadata": {
    "timestamp": 1736565748502,
    "page": 669,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "scummvm/scummvm",
      "stars": 2350,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.6513671875,
          "content": "{\n    BasedOnStyle: LLVM,\n    UseTab: ForContinuationAndIndentation,\n    IndentWidth: 4,\n    TabWidth: 4,\n    BreakBeforeBraces: Attach,\n    IndentCaseLabels: false,\n    ColumnLimit: 0,\n    AccessModifierOffset: -4,\n    NamespaceIndentation: None,\n    SpaceBeforeParens: ControlStatements,\n    PointerAlignment: Right,\n    SpaceAfterCStyleCast: false,\n    SpaceAfterTemplateKeyword: false,\n    SpaceBeforeAssignmentOperators: true,\n    SpaceBeforeCtorInitializerColon: true,\n    SpaceBeforeInheritanceColon: true,\n    SpaceInEmptyParentheses: false,\n    SpacesInAngles: false,\n    SpacesInParentheses: false,\n    SpacesInSquareBrackets: false,\n    Standard: c++03,\n}\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.2587890625,
          "content": "---\nChecks:          'clang-diagnostic-*,clang-analyzer-*,performance-*,portability-*,bugprone-*'\nCheckOptions:\n  - key:   readability-identifier-naming.MethodCase\n    value: camelBack\n  - key:   readability-identifier-naming.ParameterCase\n    value: camelBack\n...\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.224609375,
          "content": "[*]\nindent_style = tab\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nvc_generate_documentation_comments = doxygen_slash_star\nend_of_line = lf\n\n[*.bat]\nend_of_line = crlf\n\n[*.lingo]\ncharset = macroman\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2041015625,
          "content": "/po/*.po encoding=utf-8\n*.lingo\tencoding=MacRoman\n/engines.awk eol=lf\n*.bat text eol=crlf\n*.cpp text eol=lf\n*.h text eol=lf\n*.hpp text eol=lf\n*.sh text eol=lf\n/config* text eol=lf\nconfigure.engine text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.072265625,
          "content": "\n*~\n.*.swp\n.*.swo\n*.o\n*.o.tmp\n*.dwo\n*.dwp\nlib*.a\n.deps\n*_pch.cpp\n\n/config.log\n/scummvm\n/libscummvm.so\n/scummvm-static\n/ScummVMDockTilePlugin*\n/config.h\n/config.mk\n/configure.stamp\n/.gdb_history\n/dumps\n/Credits.rtf\n/*.mshark\n/*.dSYM\n/MT32_CONTROL.ROM\n/MT32_PCM.ROM\n/ScummVM.app\n/scummvm.docktileplugin\n/\\!ScummVM*\n/*,e1f\n/scummvm-ps3.pkg\n/*.ipk\n/map.txt\n*.elf\n*.nds\n/*.3dsx\n/*.cia\n/*.smdh\n/*.bnr\n/romfs\n/dist_3ds\n/dist-generic\n/.project\n/.cproject\n/.settings\n/.autotools\n/Icon.*\n/scummvm-conf.cpp\n/tmp_*.cpp\n/*.apk\n/CMakeLists.txt\n\n/README\n/README.html*\n/NEWS\n/NEWS.html\n/CONTRIBUTING\n/CONTRIBUTING.html\n/doc/de/NEUES\n/doc/de/NEUES.html\n/doc/docportal/_build\n/ScummVM Manual*.pdf\n\n/build*\n/staging\n/portdist\n\n/backends/platform/3ds/shader.shbin\n/backends/platform/3ds/shader_shbin.h\n\n/backends/platform/dc/gui\n/backends/platform/dc/graphics\n/backends/platform/dc/sound\n/backends/platform/dc/common\n/backends/platform/dc/base\n/backends/platform/dc/backends\n/backends/platform/dc/tools\n/backends/platform/dc/plugins\n/backends/platform/dc/engines\n/backends/platform/dc/scummvm.elf\n/backends/platform/dc/scummvm.bin\n/backends/platform/dc/SCUMMVM.BIN\n/backends/platform/dc/*.PLG\n\n/backends/platform/ds/gfx/*.s\n/backends/platform/ds/gfx/*.h\n\n/backends/platform/maemo/scummvm\n\n/dists/rpl.exe\n\n/dists/codeblocks/*.cbp\n/dists/codeblocks/*.depend\n/dists/codeblocks/*.layout\n/dists/codeblocks/engines/\n/dists/codeblocks/scummvm*\n\n/doc/doxygen/html\n/doc/doxygen/doxygen_warnings.txt\n\n#Ignore XCode user data and build files\nxcuserdata\nproject.xcworkspace\n/dists/macosx/build\n/dists/macosx/scummvm.xcodeproj\n/dists/macosx/create_project\n/dists/ios7/create_project\n/devtools/create_project/xcode/build\n\n/dists/msvc/[Dd]ebug*/\n/dists/msvc/[Rr]elease*/\n/dists/msvc/[Aa]nalysis*/\n/dists/msvc/*.lib\n/dists/msvc/*.SAV\n/dists/msvc/*.dat\n/dists/msvc/*.dll\n/dists/msvc/test_runner.cpp\n\n/dists/engine-data/testbed-audiocd-files/testbed.config\n/dists/engine-data/testbed-audiocd-files/testbed.out\n/dists/engine-data/playground3d\n\n/dists/scummvm_rc_*.rh\n\n\n/doc/*.aux\n/doc/*.dvi\n/doc/*.log\n/doc/*.out\n/doc/*.pdf\n/doc/*.ps\n/doc/*.toc\n\n/plugins\n\n/engines/detection_table.h\n/engines/plugins_table.h\n/engines/engines.mk\n\n/test/runner\n/test/runner.cpp\n/test/*.dSYM\n\n/devtools/convbdf\n/devtools/convbdf.dSYM\n/devtools/md5table\n/devtools/md5table.dSYM\n/devtools/make-scumm-fontdata\n/devtools/make-scumm-fontdata.dSYM\n/devtools/create_access/create_access\n/devtools/create_engine/create_engine\n/devtools/create_cryo/create_cryo_dat\n/devtools/create_cryomni3d/create_cryomni3d_dat\n/devtools/create_drascula/create_drascula\n/devtools/create_glk/create_glk\n/devtools/create_hugo/create_hugo\n/devtools/create_kyradat/create_kyradat\n/devtools/create_lure/create_lure\n/devtools/create_mm/create_xeen/create_mm\n/devtools/create_mm/create_xeen/create_xeen\n/devtools/create_mortdat/create_mortdat\n/devtools/create_myst3/create_myst3\n/devtools/create_nancy/create_nancy\n/devtools/create_neverhood/create_neverhood\n/devtools/create_project/create_project\n/devtools/create_supernova/create_supernova\n/devtools/create_supernova/create_image/create_image\n/devtools/create_teenagent/create_teenagent\n/devtools/create_titanic/create_titanic\n/devtools/create_tony/create_tony\n/devtools/create_toon/create_toon\n/devtools/create_translations/create_translations\n/devtools/create_ultima/create_ultima\n/devtools/extract_mort/extract_mort\n/devtools/qtable/qtable\n/devtools/skycpt/skycpt\n\n/snapshots\n\n#Ignore thumbnails created by Windows\nThumbs.db\n#Ignore files build by Visual Studio\n*.obj\n*.exe\n*.pdb\n*.user\n*.aps\n*.pch\n*.vspscc\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.cache\n*.ilk\n*.log\n*.sbr\n*.sdf\n*.opensdf\n*.opendb\nobj/\n_ReSharper*/\nipch/\n[Tt]est[Rr]esult*\n*.vcproj\n*.sln\n*.vsprops\n*.props\n*.vcxproj*\n*.bat\n*.tss\n*.VC.db\n.vs/\nUpgradeLog.htm\n\n#Ignore default Visual Studio build folders\n[Dd]ebug/\n[Rr]elease/\n[Dd]ebug32/\n[Rr]elease32/\n[Dd]ebug64/\n[Rr]elease64/\nLLVM32/\nLLVM64/\n\n#Ignore files generated by Visual Studio Code\n.vscode/\ncompile_commands.json\n\n#Ignore gettext generated files\n/messages.mo\n\n#Ignore Qt Creator project files\nScummVM.config\nScummVM.creator\nScummVM.files\nScummVM.includes\nScummVM.cflags\nScummVM.cxxflags\n\n#Ignore Komodo IDE/Edit project files\n*.komodoproject\n\n#Ignore Mac DS_Store files\n.DS_Store\n\n#Ignore MS Visual C++ temporary files/subdirectories (except create_project.bat)\ndists/msvc/**\n!dists/msvc/create_project.bat\n\n#Ignore bison debug output\n*.output\n\n#Ignore CMake build files\nCMakeFiles\nCMakeCache.txt\ncmake_install.cmake\n.ninja_*\n*.ninja\n\n#Ignore Xcode output/project files\nout/\n/*.xcodeproj\n\n#Ignore PSP2 files\npsp2pkg/\n*.velf\n*.vpk\n\n#Ignore Switch files\nswitch_release/\nscummvm.elf\nscummvm.nro\nscummvm_switch.zip\n\n#Ignore gmon.out created by gprof\ngmon.out\n/scummvm_libs_2015\n\n#Ignore Eclipse related files (such as a Java plugin for Visual Studio Code)\n.settings\n.project\n\n#Ignore Android Studio files\n.idea\n\n#Ignore temporary Android project folder\nandroid_project\n\n#Ignore snapcraft build artifacts\n.snap\n\n#Ignore emscripten build artifacts\ndists/emscripten/libs/\ndists/emscripten/games/\ndists/emscripten/emsdk-*\n\n#Ignore Atari/FreeMiNT files\nscummvm.gtp\nscummvm.ttp\n\n#Ignore Python generated files\n__pycache__/\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.1201171875,
          "content": "# DESCRIPTION: GitLab CI/CD for libRetro (NOT FOR GitLab-proper)\n\ninclude:\n  - 'backends/platform/libretro/.gitlab-ci.yml'\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1484375,
          "content": "[submodule \"devtools/create_prince\"]\n\tpath = devtools/create_prince\n\turl = https://github.com/scummvm/game-translations\n\tbranch = prince-and-the-coward\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.1953125,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3\"\n\nsphinx:\n  configuration: doc/docportal/conf.py\n\npython:\n  install:\n    - requirements: doc/docportal/requirements.txt\n\nformats:\n  - pdf\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 38.833984375,
          "content": "ScummVM Team\n************\n  Project Leaders\n  ---------------\n     Pawel Kolodziejski\n     Eugene Sandulenko\n     Einar Johan T. Somaaen\n     Lothar Serra Mari\n\n  PR Office\n  ---------\n     Arnaud Boutonne                - Public Relations Officer, Project\n                                      Administrator\n     Eugene Sandulenko              - Project Leader\n\n  Retired Project Leaders\n  -----------------------\n     James Brown\n     Vincent Hamm                   - ScummVM co-founder, Original\n                                      Cruise/CinE author\n     Max Horn\n     Ludvig Strigeus                - Original ScummVM and SimonVM author\n\n  Engine Teams\n  ------------\n    Access:\n       Arnaud Boutonne\n       Paul Gilbert\n\n    ADL:\n       Walter van Niftrik\n\n    AGI:\n       Stuart George\n       Matthew Hoops                  - (retired)\n       Filippos Karapetis\n       Martin Kiewitz\n       Pawel Kolodziejski\n       Walter van Niftrik\n       Kari Salminen\n       Eugene Sandulenko\n       David Symonds                  - (retired)\n\n    AGOS:\n       Torbjorn Andersson\n       Paul Gilbert\n       Travis Howell\n       Oliver Kiehl                   - (retired)\n       Ludvig Strigeus                - (retired)\n\n    AGS:\n       Paul Gilbert\n       Thierry Crozat\n       Walter Agazzi                  - Maintenance, Game archival\n       Chris Jones                    - Creator\n       Alan Van Drake                 - AGS\n       Benjamin Penney                - AGS\n       Benoit Pierre                  - AGS\n       Bernhard Rosenkraenzer         - AGS\n       Cristian Morales Vega          - AGS\n       Edward Rudd                    - AGS\n       Erico Vieira Porto             - AGS\n       Ferdinand Thiessen             - AGS\n       Francesco Ariis                - AGS\n       Gilad Shaham                   - AGS\n       Ivan Mogilko                   - AGS\n       Janet Gilbert                  - AGS\n       Jochen Schleu                  - AGS\n       Joe Lee                        - AGS\n       John Steele Scott              - AGS\n       Martin Sedlak                  - AGS\n       Matthew Gambrell               - AGS\n       Michael Rittenhouse            - AGS\n       Morgan Willcock                - AGS\n       Nick Sonneveld                 - AGS\n       Ori Avtalion                   - AGS\n       Paul Wilkinson                 - AGS\n       Per Olav Flaten                - AGS\n       Piotr Wieczorek                - AGS\n       Ryan O'Connor                  - AGS\n       Scott Baker                    - AGS\n       Shane Stevens                  - AGS\n       Shawn R. Walker                - AGS\n       Stefano Collavini              - AGS\n       Steve McCrea                   - AGS\n       Steven Poulton                 - AGS\n       Sunit Das                      - AGS\n       Tobias Hansen                  - AGS\n       Tom Vandepoele                 - AGS\n       Tzach Shabtay                  - AGS\n       rofl0r                         - AGS\n       Berian Williams                - AgsCreditz\n\n    Asylum:\n       Alex Bevilacqua\n       Alex Fontoura\n       Alexander Panov\n       Benjamin Haisch\n       Filippos Karapetis\n       Joseph Davies\n       Julien Templier\n\n    Avalanche:\n       Peter Bozso\n       Arnaud Boutonne\n\n    Bagel:\n       Arnaud Boutonne\n       Daniel Albano\n       Eugene Sandulenko\n       Paul Gilbert\n\n    BBVS:\n       Benjamin Haisch\n\n    Blade Runner:\n       Thanasis Antoniou\n       Thomas Fach-Pedersen\n       Peter Kohaut\n       Eugene Sandulenko\n\n    Buried:\n       Matthew Hoops\n\n    CGE:\n       Arnaud Boutonne\n       Paul Gilbert\n\n    CGE2:\n       Peter Bozso\n       Arnaud Boutonne\n       Paul Gilbert\n\n    Chamber:\n       Retro-Junk;\n       Eugene Sandulenko\n\n    Chewy:\n       Paul Gilbert\n       Eugene Sandulenko\n       Arnaud Boutonne\n       Filippos Karapetis\n\n    Cine:\n       Vincent Hamm                   - (retired)\n       Pawel Kolodziejski\n       Gregory Montoir                - (retired)\n       Kari Salminen\n       Eugene Sandulenko\n\n    Composer:\n       Alyssa Milburn\n\n    CRAB:\n       Kartik Agarwala\n\n    CruisE:\n       Paul Gilbert\n       Vincent Hamm                   - (retired)\n\n    Cryo:\n       Arnaud Boutonne\n       Filippos Karapetis\n       Retro-Junk;\n       Eugene Sandulenko\n\n    Cryomni3D:\n       Philippe Valembois\n\n    Darkseed:\n       Eric Fry\n\n    DGDS:\n       Matthew Duggan\n       Filippos Karapetis\n       Vasco Alexandre da Silva Costa\n\n    Director:\n       Eugene Sandulenko\n       Crane Yang                     - GSoC Student\n       Dmitry Iskrich\n       Deborah Servilla               - GSoC Student\n       Nathanael Gentry               - GSoC Student\n       Roland van Laar\n       Scott Percival\n       Steven Hoefel\n       Tobia Tesan\n       Misty De Meo\n\n    DM:\n       Arnaud Boutonne\n       Bendeguz Nagy\n\n    Draci:\n       Denis Kasak\n       Robert Spalek\n\n    Dragons:\n       Eric Fry\n       Benjamin Haisch                - Actor pathfinding\n       Angel Eduardo Garcia Hernandez - Help with reverse engineering\n\n    Drascula:\n       Filippos Karapetis\n       Pawel Kolodziejski\n       Thierry Crozat\n\n    DreamWeb:\n       Torbjorn Andersson\n       Bertrand Augereau\n       Filippos Karapetis\n       Vladimir Menshakov\n       Willem Jan Palenstijn\n\n    Efh:\n       Arnaud Boutonne\n\n    Freescape:\n       Chris Allen                    - Sound engine programming\n       Gustavo Grieco\n\n    Glk:\n       Paul Gilbert\n       Tor Andersson                  - GarGlk library\n       Stefan Jokisch                 - Frotz interpreter\n       Andrew Plotkin                 - Glulxe interpreter\n       Alan Cox                       - ScottFree interpreter\n       Michael J. Roberts             - TADS interpreter\n       Avijeet Maurya                 - Scott Sub-engine\n\n    Gnap:\n       Arnaud Boutonne\n       Benjamin Haisch\n\n    Gob:\n       Torbjorn Andersson\n       Arnaud Boutonne\n       Simon Delamarre\n       Sven Hesse\n       Eugene Sandulenko\n\n    Griffon:\n       Eugene Sandulenko\n\n    Grim:\n       James Brown                    - Grim (retired)\n       Giulio Camuffo                 - Grim (retired)\n       Daniel Schepler                - Initial engine contributor\n       Dries Harnie                   - EMI\n       Pawel Kolodziejski             - Grim\n       Christian Krause               - EMI (retired)\n       Einar Johan T. Somaaen         - Grim, EMI\n       Joel Teichroeb                 - EMI\n       Joni Vahamaki                  - EMI (retired)\n\n    Groovie:\n       Henry Bush\n       Ray Carro\n       Scott Thomas\n       Jordi Vilalta Prat\n\n    Hades Challenge:\n       Vladimir Serbinenko/Google\n\n    HDB:\n       Eugene Sandulenko\n       Nipun Garg                     - GSoC student\n\n    Hopkins:\n       Arnaud Boutonne\n       Paul Gilbert\n\n    Hpl1:\n       Emanuele Grisenti\n\n    Hugo:\n       Arnaud Boutonne\n       Oystein Eftevaag\n       Eugene Sandulenko\n\n    Hypno:\n       Gustavo Grieco\n\n    ICB:\n       Pawel Kolodziejski\n       Joost Peters\n       Einar Johan T. Somaaen\n\n    Illusions:\n       Benjamin Haisch\n       Eric Fry\n\n    Immortal:\n       Michael Hayman\n\n    Kingdom:\n       Arnaud Boutonne\n       Thomas Fach-Pedersen\n       Hein-Pieter van Braam-Stewart\n\n    Kyra:\n       Torbjorn Andersson             - VQA Player\n       Oystein Eftevaag\n       Florian Kagerer\n       Gregory Montoir                - (retired)\n       Johannes Schickel              - (retired)\n\n    Lab:\n       Arnaud Boutonne\n       Filippos Karapetis\n       Willem Jan Palenstijn\n       Eugene Sandulenko\n\n    Lastexpress:\n       Matthew Hoops                  - (retired)\n       Jordi Vilalta Prat\n       Julien Templier\n\n    Lilliput:\n       Arnaud Boutonne\n\n    Lure:\n       Paul Gilbert\n\n    M4:\n       Paul Gilbert\n\n    MacVenture:\n       Borja Lorente                  - GSoC student\n\n    MADE:\n       Benjamin Haisch\n       Filippos Karapetis\n\n    MADS:\n       Arnaud Boutonne\n       Paul Gilbert\n       Filippos Karapetis\n\n    MM (Xeen):\n       Paul Gilbert\n       Benoit Pierre\n       TheDrakeRaider                 - (M&M1 Gfx Mod)\n       David Goldsmith                - (Xeen analysis)\n       Matt Taylor                    - (Xeen analysis)\n\n    Mohawk:\n       Bastien Bouclet\n       Matthew Hoops                  - (retired)\n       Filippos Karapetis\n       Alyssa Milburn\n       Eugene Sandulenko\n       David Turner\n       David Fioramonti\n\n    Mortevielle:\n       Arnaud Boutonne\n       Paul Gilbert\n\n    mTropolis:\n       Eric Lasota\n\n    MutationOfJB:\n       Lubomir Remak\n       Miroslav Remak\n\n    Myst 3:\n       Bastien Bouclet\n\n    Nancy:\n       Kaloyan Chehlarski\n       Walter van Niftrik\n\n    Neverhood:\n       Benjamin Haisch\n       Filippos Karapetis\n\n    NGI:\n       Eugene Sandulenko\n\n    Parallaction:\n       peres\n\n    Pegasus:\n       Matthew Hoops                  - (retired)\n\n    Petka:\n       Andrei Prykhodko\n       Eugene Sandulenko\n\n    Pink:\n       Andrei Prykhodko\n       Eugene Sandulenko\n\n    Plumbers:\n       Retro-Junk;\n\n    Prince:\n       Eugene Sandulenko\n       Lukasz Watka\n       Kamil Zbrog\n\n    Private:\n       Gustavo Grieco\n\n    QDEngine:\n       Eugene Sandulenko\n       Kunal Tiwari\n\n    Queen:\n       David Eriksson                 - (retired)\n       Gregory Montoir                - (retired)\n       Joost Peters\n\n    SAGA:\n       Torbjorn Andersson\n       Daniel Balsom                  - Original engine reimplementation\n                                        author (retired)\n       Filippos Karapetis\n       Andrew Kurushin\n       Eugene Sandulenko\n\n    SAGA2:\n       Yuri Guimaraes                 - GSoC Student\n       Eugene Sandulenko\n\n    SCI:\n       Chris Benshoof\n       Greg Frieger\n       Paul Gilbert\n       Max Horn                       - (retired)\n       Filippos Karapetis\n       Martin Kiewitz\n       Walter van Niftrik\n       Willem Jan Palenstijn\n       Jordi Vilalta Prat\n       Lars Skovlund\n       Colin Snover\n\n    SCUMM:\n       Torbjorn Andersson\n       Andrea Boscarino               - Digital iMUSE, SMUSH audio, GUI\n       James Brown                    - (retired)\n       Jonathan Gray                  - (retired)\n       Vincent Hamm                   - (retired)\n       Max Horn                       - (retired)\n       Travis Howell\n       Pawel Kolodziejski             - Codecs, iMUSE, Smush, etc.\n       Gregory Montoir                - (retired)\n       Eugene Sandulenko              - FT INSANE, MM NES, MM C64, game\n                                        detection, Herc/CGA\n       Ludvig Strigeus                - (retired)\n\n    SCUMM HE:\n       Andrea Boscarino               - Digital audio, WIZ graphics system\n       Jonathan Gray                  - (retired)\n       Travis Howell\n       Gregory Montoir                - (retired)\n       Eugene Sandulenko\n\n    Sherlock:\n       Paul Gilbert\n       Martin Kiewitz\n\n    Sky:\n       Robert Goeffringmann           - (retired)\n       Oliver Kiehl                   - (retired)\n       Joost Peters\n\n    SLUDGE:\n       Eugene Sandulenko\n       Simei Yin                      - GSoC Student\n\n    Stark:\n       Bastien Bouclet\n       Einar Johan T. Somaaen\n       Liu Zhaosong\n\n    Star Trek:\n       Matthew Hoops                  - (retired)\n       Filippos Karapetis\n       Matthew Stewart                - GSoC Student\n\n    Supernova:\n       Joseph-Eugene Winzer\n       Jaromir Wysoglad\n       Thierry Crozat\n\n    Sword1:\n       Fabio Battaglia                - PSX version support\n       Andrea Boscarino               - Palette fading, menus, audio\n       Thierry Crozat                 - Mac version support\n       Robert Goeffringmann           - (retired)\n\n    Sword2:\n       Torbjorn Andersson\n       Fabio Battaglia                - PSX version support\n       Jonathan Gray                  - (retired)\n\n    Sword2.5:\n       Torbjorn Andersson\n       Paul Gilbert\n       Max Horn                       - (retired)\n       Filippos Karapetis\n       Eugene Sandulenko\n\n    TeenAgent:\n       Robert Megone                  - Help with callback rewriting\n       Vladimir Menshakov\n\n    Tetraedge:\n       Matthew Duggan\n\n    Tinsel:\n       Torbjorn Andersson\n       Fabio Battaglia                - PSX version support\n       Paul Gilbert\n       Sven Hesse\n       Max Horn                       - (retired)\n       Filippos Karapetis\n       Joost Peters\n\n    Titanic:\n       David Fioramonti\n       Paul Gilbert\n       Colin Snover\n\n    Toltecs:\n       Benjamin Haisch\n       Filippos Karapetis\n\n    Tony:\n       Arnaud Boutonne\n       Paul Gilbert\n       Alyssa Milburn\n\n    Toon:\n       Sylvain Dupont\n\n    Touche:\n       Gregory Montoir                - (retired)\n\n    Trecision:\n       Daniel Albano\n       Arnaud Boutonne\n       Thomas Fach-Pedersen           - Smacker video support\n       Filippos Karapetis\n\n    TsAGE:\n       Arnaud Boutonne\n       Paul Gilbert\n\n    Tucker:\n       Gregory Montoir                - (retired)\n\n    TwinE:\n       Alexandre Fontoura             - (retired)\n       Vincent Hamm                   - (retired)\n       Felipe Sanches                 - (retired)\n       Nikita Tereshin                - (retired)\n       Patrik Dahlstroem              - (retired)\n       Arthur Blot                    - (retired)\n       Kyuubu                         - (retired)\n       Toel Hartmann                  - (retired)\n       Sebastien Viannay              - (retired)\n       Martin Gerhardy\n\n    Thimbleweed Park:\n       Valéry Sablonnière\n\n    Ultima:\n       Paul Gilbert\n       Matthew Duggan\n       Matthew Jimenez\n       Daniel c. Wuerl                - (Nuvie)\n       Eric Fry                       - (Nuvie)\n       Jeremy Newman                  - (Nuvie)\n       Jonathan E. Wright             - (Nuvie)\n       Joseph Applegate               - (Nuvie)\n       Malignant Manor                - (Nuvie)\n       Markus Niemistoe               - (Nuvie)\n       Michael Fink                   - (Nuvie)\n       Pieter Luteijn                 - (Nuvie)\n       Sam Matthews                   - (Nuvie)\n       Travis Howell                  - (Nuvie)\n       Willem Jan Palenstijn          - (Nuvie)\n       Brian Tietz                    - (Pentagram)\n       Dominik Reichardt              - (Pentagram)\n       Max Horn                       - (Pentagram)\n       Patrick Burke                  - (Pentagram)\n       Ryan Nunn                      - (Pentagram)\n       Willem Jan Palenstijn          - (Pentagram)\n\n    V-Cruise:\n       Eric Lasota\n\n    Voyeur:\n       Arnaud Boutonne\n       Paul Gilbert\n\n    WAGE:\n       Eugene Sandulenko\n\n    Watchmaker:\n       Einar Johan Troan Somaen;\n\n    Wintermute:\n       Gunnar Birke                   - Wintermute 3D\n       Pawel Kolodziejski             - Wintermute 3D\n       Einar Johan T. Somaaen\n       Tobia Tesan\n       lolbot-iichan\n\n    Z-Vision:\n       Adrian Astley\n       Filippos Karapetis\n       Anton Yarcev\n\n  Backend Teams\n  -------------\n    Atari:\n       Miro Kropacek\n\n    Android:\n       Andre Heider\n       Angus Lees\n       Lubomyr Lisen\n\n    Dreamcast:\n       Marcus Comstedt\n\n    GCW0:\n       Eugene Sandulenko\n\n    GPH Devices (GP2X, GP2XWiz & Caanoo):\n       John Willis\n\n    iPhone / iPad:\n       Oystein Eftevaag               - (retired)\n       Vincent Benony\n       Thierry Crozat\n       Lars Sundstroem\n\n    LinuxMoto:\n       Lubomyr Lisen\n\n    Maemo:\n       Frantisek Dufka                - (retired)\n       Tarek Soliman\n\n    Nintendo 3DS:\n       Thomas Edvalson\n\n    Nintendo 64:\n       Fabio Battaglia\n\n    Nintendo DS:\n       Bertrand Augereau              - HQ software scaler\n       Cameron Cawley\n       Neil Millstone\n\n    Nintendo Switch:\n       Cpasjuste\n       rsn8887\n\n    OpenPandora:\n       John Willis\n\n    PocketPC / WinCE:\n       Nicolas Bacca                  - (retired)\n       Ismail Khatib                  - (retired)\n       Kostas Nakos                   - (retired)\n\n    PlayStation 2:\n       Robert Goeffringmann           - (retired)\n       Max Lingua\n\n    PSP (PlayStation Portable):\n       Yotam Barnoy\n       Joost Peters\n\n    PlayStation Vita:\n       Cpasjuste\n       rsn8887\n\n    SDL (Win/Linux/macOS/etc.):\n       Max Horn                       - (retired)\n       Eugene Sandulenko              - Asm routines, GFX layers\n\n    SymbianOS:\n       Jurgen Braam\n       Lars Persson\n       Fedor Strizhniou\n\n    Tizen / BADA:\n       Chris Warren-Smith\n\n    Webassembly / Emscripten:\n       Christian Kuendig\n\n    WebOS:\n       Klaus Reimer\n\n    Wii:\n       Andre Heider\n       Alexander Reim\n\n    Raspberry Pi:\n       Manuel Alfayate\n\n    Libretro:\n       Giovanni Cascione\n\n  Other subsystems\n  ----------------\n    Infrastructure:\n       Max Horn                       - Backend & Engine APIs, file API,\n                                        sound mixer, audiostreams, data\n                                        structures, etc. (retired)\n       Eugene Sandulenko\n       Johannes Schickel              - (retired)\n\n    GUI:\n       Max Horn                       - (retired)\n       Vicent Marti\n       Eugene Sandulenko\n       Johannes Schickel              - (retired)\n\n    Miscellaneous:\n       David Corrales-Lopez           - Filesystem access improvements (GSoC\n                                        2007 task) (retired)\n       Jerome Fisher                  - MT-32 emulator\n       Benjamin Haisch                - Heavily improved de-/encoder for DXA\n                                        videos\n       Jochen Hoenicke                - Speaker & PCjr sound support, AdLib\n                                        work (retired)\n       Daniel ter Laan                - Restoring original Drascula tracks,\n                                        and writing convert_dxa.bat\n       Chris Page                     - Return to launcher, savestate\n                                        improvements, leak fixes, ... (GSoC\n                                        2008 task) (retired)\n       Coen Rampen                    - Sound improvements\n       Robin Watts                    - ARM assembly routines for nice\n                                        speedups on several ports;\n                                        improvements to the sound mixer\n       Trembyle                       - Archivist\n       Lothar Serra Mari              - Tackling Tremendously Tedious\n                                        Tasks(tm); ScummVM's Seal of Approval\n                                        (Awp?!)\n\n  Website (code)\n  --------------\n     Fredrik Wendel                 - (retired)\n\n  Website (maintenance)\n  ---------------------\n     James Brown                    - IRC Logs maintainer\n     Thierry Crozat                 - Wiki maintainer\n     Andre Heider                   - Buildbot maintainer\n     Joost Peters                   - Doxygen Project Documentation\n                                      maintainer\n     Jordi Vilalta Prat             - Wiki maintainer\n     Eugene Sandulenko              - Forum, IRC channel, Screen Shots and\n                                      Mailing list maintainer\n     John Willis\n\n  Website (content)\n  -----------------\n     All active team members\n\n  Documentation\n  -------------\n     Thierry Crozat                 - Numerous contributions to documentation\n     Joachim Eberhard               - Numerous contributions to documentation\n                                      (retired)\n     Matthew Hoops                  - Numerous contributions to documentation\n                                      (retired)\n     Cadi Howley                    - User documentation (GSOD 2020)\n\n  Retired Team Members\n  --------------------\n     Chris Apers                    - Former PalmOS porter\n     Ralph Brorsen                  - Help with GUI implementation\n     Jamieson Christian             - iMUSE, MIDI, all things musical\n     Felix Jakschitsch              - Zak256 reverse engineering\n     Mutwin Kraus                   - Original MacOS porter\n     Peter Moraliyski               - Port: GP32\n     Jeremy Newman                  - Former webmaster\n     Lionel Ulmer                   - Port: X11\n     Won Star                       - Former GP32 porter\n     Matan Bareket                  - Website, Infrastructure, UI/UX\n\nOther contributions\n*******************\n  Packages\n  --------\n    AmigaOS 4:\n       Hans-Joerg Frieden             - (retired)\n       Hubert Maier\n       Juha Niemimaki                 - (retired)\n\n    Atari/FreeMiNT:\n       Keith Scroggins\n\n    BeOS:\n       Stefan Parviainen              - (retired)\n       Luc Schrijvers\n\n    Debian GNU/Linux:\n       Tore Anderson                  - (retired)\n       David Weinehall\n\n    Fedora / RedHat:\n       Willem Jan Palenstijn\n\n    Haiku:\n       Luc Schrijvers\n\n    macOS:\n       Max Horn                       - (retired)\n       Oystein Eftevaag               - (retired)\n       Thierry Crozat\n       dwa                            - Tiger/Leopard PPC\n\n    Mandriva:\n       Dominik Scherer                - (retired)\n\n    MorphOS:\n       BeWorld\n       Fabien Coeurjoly\n       Ruediger Hanke                 - (retired)\n\n    OS/2:\n       Paul Smedley\n\n    RISC OS:\n       Cameron Cawley\n\n    SlackWare:\n       Robert Kelsen\n\n    Solaris x86:\n       Laurent Blume\n\n    Solaris SPARC:\n       Markus Strangl\n\n    Win32:\n       Travis Howell\n       Lothar Serra Mari\n\n    Win64:\n       Chris Gray                     - (retired)\n       Johannes Schickel              - (retired)\n       Lothar Serra Mari\n\n  GUI Translations\n  ----------------\n     Thierry Crozat                 - Translation Lead\n\n    Basque:\n       Mikel Iturbe Urretxa\n\n    Belarusian:\n       Ivan Lukyanov\n\n    Catalan:\n       Jordi Vilalta Prat\n\n    Czech:\n       Zbynik Schwarz\n\n    Danish:\n       Steffen Nyeland\n       scootergrisen\n\n    Dutch:\n       Ben Castricum\n\n    Finnish:\n       Linus Virtanen\n       Toni Saarela\n       Timo Mikkolainen\n\n    French:\n       Thierry Crozat\n       Purple T\n\n    Galician:\n       Santiago G. Sanz\n\n    German:\n       Simon Sawatzki\n       Lothar Serra Mari\n\n    Greek:\n       Thanasis Antoniou\n       Filippos Karapetis\n\n    Hungarian:\n       Alex Bevilacqua\n       George Kormendi\n\n    Italian:\n       Matteo Angelino\n       Paolo Bossi\n       Walter Agazzi\n\n    Norwegian (Bokmaal):\n       Einar Johan Somaaen\n\n    Norwegian (Nynorsk):\n       Einar Johan Somaaen\n\n    Polish:\n       GrajPoPolsku.pl Team\n\n    Brazilian Portuguese:\n       ScummBR Team\n       Marcel Souza Lemes\n\n    Portuguese:\n       Daniel Albano\n\n    Russian:\n       Eugene Sandulenko\n\n    Spanish:\n       Tomas Maidagan\n       Jordi Vilalta Prat\n       IlDucci\n       Rodrigo Vegas Sanchez-Ferrero\n\n    Swedish:\n       Hampus Flink\n       Adrian Fruehwirth\n\n    Ukrainian:\n       Lubomyr Lisen\n\n  Game Translations\n  -----------------\n    CGE:\n       Dan Serban                     - Soltys English translation\n       Victor Gonzalez                - Soltys Spanish translation\n       Alejandro Gomez de la Munoza   - Soltys Spanish translation\n\n    CGE2:\n       Arnaud Boutonne                - Sfinx English translation\n       Thierry Crozat                 - Sfinx English translation\n       Peter Bozso                    - Sfinx English translation editor\n       Ryan Clark                     - Sfinx English translation editor\n\n    Drascula:\n       Thierry Crozat                 - Improve French translation\n\n    Mortevielle:\n       Hugo Labrande                  - Improve English translation\n       Thierry Crozat                 - Improve English translation\n\n    Prince:\n       ShinjiGR                       - English translation\n       Eugene Sandulenko              - English translation\n       Anna Baldur                    - English translation\n\n    Supernova:\n       Joseph-Eugene Winzer           - English translation\n       Thierry Crozat                 - English translation\n       Walter Agazzi                  - Italian translation\n\n  Websites (design)\n  -----------------\n     Dobo Balazs                    - Website design\n     William Claydon                - Skins for doxygen, buildbot and wiki\n     Yaroslav Fedevych              - HTML/CSS for the website\n     Jean Marc Gimenez              - ScummVM logo\n     David Jensen                   - SVG logo conversion\n     Raina                          - ScummVM forum buttons\n\n  Icons pack\n  ----------\n     Stefan Philippsen              - Primary contributor and coordination\n     Benjamin Funke\n     Daniel Albano\n     David Calvert\n     Eugene Sandulenko\n     J Moretti\n     Jennifer McMurray\n     Lothar Serra Mari\n     Oleg Ermakov\n     Olly Dean\n     Walter Agazzi\n     beresk137\n     Canuma\n     Thunderforge\n     neuromancer\n     nightm4re94\n     trembyle\n\n  Code contributions\n  ------------------\n     Ori Avtalion                   - Subtitle control options in the GUI;\n                                      BASS GUI fixes\n     Stuart Caie                    - Decoders for Amiga and AtariST data\n                                      files (AGOS engine)\n     Paolo Costabel                 - PSP port contributions\n     Martin Doucha                  - CinE engine objectification\n     Thomas Fach-Pedersen           - ProTracker module player, Smacker video\n                                      decoder\n     Tobias Gunkel                  - Sound support for C64 version of\n                                      MM/Zak, Loom PCE support\n     Dries Harnie                   - Android port for ResidualVM\n     Janne Huttunen                 - V3 actor mask support, Dig/FT SMUSH\n                                      audio\n     Kovacs Endre Janos             - Several fixes for Simon1\n     Jeroen Janssen                 - Numerous readability and bugfix patches\n     Keith Kaisershot               - Several Pegasus Prime patches and DVD\n                                      additions\n     Andreas Karlsson               - Initial port for SymbianOS\n     Stefan Kristiansson            - Initial work on SDL2 support\n     Claudio Matsuoka               - Daily Linux builds\n     Thomas Mayer                   - PSP port contributions\n     Sean Murray                    - ScummVM tools GUI application (GSoC\n                                      2007 task)\n     n0p                            - Windows CE port aspect ratio correction\n                                      scaler and right click input method\n     Mikesch Nepomuk                - MI1 VGA floppy patches\n     Nicolas Noble                  - Config file and ALSA support\n     Tim Phillips                   - Initial MI1 CD music support\n     Quietust                       - Sound support for Amiga SCUMM V2/V3\n                                      games, MM NES support\n     Robert Crossfield              - Improved support for Apple II/C64\n                                      versions of MM\n     Andreas Roever                 - Broken Sword I & II MPEG2 cutscene\n                                      support\n     Edward Rudd                    - Fixes for playing MP3 versions of\n                                      MI1/Loom audio\n     Daniel Schepler                - Final MI1 CD music support, initial Ogg\n                                      Vorbis support\n     Andre Souza                    - SDL-based OpenGL renderer\n     Joel Teichroeb                 - Android port for ResidualVM\n     Tom Frost                      - WebOS port contributions\n\n  FreeSCI Contributors\n  --------------------\n     Francois-R Boyer               - MT-32 information and mapping code\n     Rainer Canavan                 - IRIX MIDI driver and bug fixes\n     Xiaojun Chen\n     Paul David Doherty             - Game version information\n     Vyacheslav Dikonov             - Config script improvements\n     Ruediger Hanke                 - Port to the MorphOS platform\n     Matt Hargett                   - Clean-ups, bugfixes, Hardcore QA, Win32\n     Max Horn                       - SetJump implementation\n     Ravi I.                        - SCI0 sound resource specification\n     Emmanuel Jeandel               - Bugfixes and bug reports\n     Dmitry Jemerov                 - Port to the Win32 platform, numerous\n                                      bugfixes\n     Chris Kehler                   - Makefile enhancements\n     Christopher T. Lansdown        - Original CVS maintainer, Alpha\n                                      compatibility fixes\n     Sergey Lapin                   - Port of Carl's type 2 decompression\n                                      code\n     Rickard Lind                   - MT-32->GM MIDI mapping magic, sound\n                                      research\n     Hubert Maier                   - AmigaOS 4 port\n     Johannes Manhave               - Document format translation\n     Claudio Matsuoka               - CVS snapshots, daily builds, BeOS and\n                                      cygwin ports\n     Dark Minister                  - SCI research (bytecode and parser)\n     Carl Muckenhoupt               - Sources to the SCI resource viewer\n                                      tools that started it all\n     Anders Baden Nielsen           - PPC testing\n     Walter van Niftrik             - Ports to the Dreamcast and GP32\n                                      platforms\n     Rune Orsval                    - Configuration file editor\n     Solomon Peachy                 - SDL ports and much of the sound\n                                      subsystem\n     Robey Pointer                  - Bug tracking system hosting\n     Magnus Reftel                  - Heap implementation, Python class\n                                      viewer, bugfixes\n     Christoph Reichenbach          - UN*X code, VM/Graphics/Sound/other\n                                      infrastructure\n     George Reid                    - FreeBSD package management\n     Lars Skovlund                  - Project maintenance, most\n                                      documentation, bugfixes, SCI1 support\n     Rink Springer                  - Port to the DOS platform, several bug\n                                      fixes\n     Rainer De Temple               - SCI research\n     Sean Terrell\n     Hugues Valois                  - Game selection menu\n     Jordi Vilalta                  - Numerous code and website clean-up\n                                      patches\n     Petr Vyhnak                    - The DCL-INFLATE algorithm, many Win32\n                                      improvements\n     Bas Zoetekouw                  - Man pages, debian package management,\n                                      CVS maintenance\n\n     Special thanks to Prof. Dr. Gary Nutt for allowing the FreeSCI VM\n     extension as a course project in his Advanced OS course.\n\n     Special thanks to Bob Heitman and Corey Cole for their support of\n     FreeSCI.\n\n  ResidualVM Contributors\n  -----------------------\n    Grim:\n       Thomas Allen                   - Various engine code fixes and\n                                        improvements\n       Torbjorn Andersson             - Various code fixes\n       Ori Avtalion                   - Lipsync, LAF support, various code\n                                        fixes\n       Robert Biro                    - Antialiasing support\n       Bastien Bouclet                - Various fixes to engine\n       David Cardwell                 - Few fixes to EMI\n       Marcus Comstedt                - Initial Dreamcast port\n       Andrea Corna                   - Patcher module, various engine\n                                        improvements\n       Jonathan Gray                  - Various code fixes\n       Tobias Gunkel                  - Initial Android port, few engines\n                                        fixes\n       Azamat H. Hackimov             - Configure fix\n       Vincent Hamm                   - Various engine code fixes and\n                                        improvements\n       Sven Hesse                     - Various compilation fixes\n       Matthew Hoops                  - Smush codec48, Grim and EMI engine\n                                        improvements\n       Erich Hoover                   - x86-64 fixes, various code fixes and\n                                        improvements\n       Max Horn                       - Few code fixes\n       Travis Howell                  - Various code fixes, Windows port\n       Joseph Jezak                   - A lot of engine improvements and\n                                        fixes\n       Guillem Jover                  - Few code improvements\n       Filippos Karapetis             - Compilation fixes\n       Ingo van Lil                   - Various fixes and improvements for\n                                        EMI\n       Vincent Pelletier              - Various engine and TinyGL\n                                        improvements\n       Joost Peters                   - Various code fixes\n       George Macon                   - Few fixes\n       Josh Matthews                  - Few fixes to engine\n       Matthieu Milan                 - Various engine improvements\n       Gregory Montoir                - Few fixes to engine\n       Stefano Musumeci               - TinyGL backend and engine driver\n                                        improvements\n       Christian Neumair              - Various optimisation patches\n       Daniel Schepler                - Initial grim engine contributor, LUA\n                                        support\n       Dmitry Smirnov                 - Minor spelling corrections\n       Yaron Tausky                   - Fixes to subtitles\n       Julien Templier                - create_project tool\n       Pino Toscano                   - Debian GNU/Linux package files\n       Lionel Ulmer                   - OpenGL optimisations\n       cmayer0087                     - Various engine code fixes\n       JenniBee                       - Compilation fixes\n       karjonas                       - Various engine code fixes\n       mparnaudeau                    - Various grim engine code fixes\n       PoulpiFr                       - Few fixes to Android port\n       sietschie                      - Few fixes to engine\n\n    Myst 3:\n       David Fioramonti               - Autosave support and few fixes\n       Matthew Hoops                  - Various engine improvements and code\n                                        fixes\n       Stefano Musumeci               - TinyGL engine support\n\n    Stark:\n       Bartosz Dudziak                - Various engine improvements and code\n                                        fixes\n       Matthew Hoops                  - ADPCM decoder\n       Pawel Kolodziejski             - Various engine code fixes\n       Awad Mackie                    - Few fixes to engine\n       Marius Ioan Orban              - Code fix\n       Vincent Pelletier              - Raw sound support\n       Jordi Vilalta Prat             - Initial engine contributor\n       Scott Thomas                   - Initial engine author\n       Will Thomson                   - Few fixes to engine\n       Faalagorn                      - Few code improvements\n       orangeforest11                 - Few engine improvements\n\n   And to all the contributors, users, and beta testers we've missed. Thanks!\n\nSpecial thanks to\n*****************\n   Daniel Balsom     - For the original Reinherit (SAGA) code\n   Sander Buskens    - For his work on the initial reversing of Monkey2\n   Dean Beeler       - For the original MT-32 emulator\n   Kevin Carnes      - For Scumm16, the basis of ScummVM's older gfx codecs\n   Curt Coder        - For the original TrollVM (preAGI) code\n   Patrick Combet    - For the original Gobliiins ADL player\n   Ivan Dubrov       - For contributing the initial version of the Gobliiins\n                       engine\n   Henrik Engqvist   - For generously providing hosting for our buildbot, SVN\n                       repository, planet and doxygen sites as well as tons\n                       of HD space\n   DOSBox Team       - For their awesome OPL2 and OPL3 emulator\n   Yusuke Kamiyamane - For contributing some GUI icons\n   Till Kresslein    - For design of modern ScummVM GUI\n   Jezar Wakefield   - For his freeverb filter implementation\n   Jim Leiterman     - Various info on his FM-TOWNS/Marty SCUMM ports\n   Lloyd Rosen       - For deep tech details about C64 Zak & MM\n   Sarien Team       - Original AGI engine code\n   Jimmi Thogersen   - For ScummRev, and much obscure code/documentation\n   Tristan Matthews  - For additional work on the original MT-32 emulator\n   James Woodcock    - Soundtrack enhancements\n   Anton Yartsev     - For the original re-implementation of the Z-Vision\n                       engine\n\n   Tony Warriner and everyone at Revolution Software Ltd. for sharing with us\n   the source of some of their brilliant games, allowing us to release\n   Beneath a Steel Sky as freeware... and generally being supportive above\n   and beyond the call of duty.\n\n   John Passfield and Steve Stamatiadis for sharing the source of their\n   classic title, Flight of the Amazon Queen and also being incredibly\n   supportive.\n\n   Joe Pearce from The Wyrmkeep Entertainment Co. for sharing the source of\n   their famous title Inherit the Earth, for sharing the source of The\n   Labyrinth of Time and for always replying promptly to our questions.\n\n   Aric Wilmunder, Ron Gilbert, David Fox, Vince Lee, and all those at\n   LucasFilm/LucasArts who made SCUMM the insane mess to reimplement that it\n   is today. Feel free to drop us a line and tell us what you think, guys!\n\n   Alan Bridgman, Simon Woodroffe and everyone at Adventure Soft for sharing\n   the source code of some of their games with us.\n\n   John Young, Colin Smythe and especially Terry Pratchett himself for\n   sharing the source code of Discworld I & II with us.\n\n   Emilio de Paz Aragon from Alcachofa Soft for sharing the source code of\n   Drascula: The Vampire Strikes Back with us and his generosity with\n   freewaring the game.\n\n   David P. Gray from Gray Design Associates for sharing the source code of\n   the Hugo trilogy.\n\n   The mindFactory team for writing Broken Sword 2.5, a splendid fan-made\n   sequel, and for sharing the source code with us.\n\n   Neil Dodwell and David Dew from Creative Reality for providing the source\n   of Dreamweb and for their tremendous support.\n\n   Janusz Wisniewski and Miroslaw Liminowicz from Laboratorium Komputerowe\n   Avalon for providing full source code for Soltys and Sfinx and letting us\n   redistribute the games.\n\n   Jan Nedoma for providing the sources to the Wintermute-engine, and for his\n   support while porting the engine to ScummVM.\n\n   Bob Bell, David Black, Michel Kripalani, and Tommy Yune from Presto\n   Studios for providing the source code of The Journeyman Project: Pegasus\n   Prime and The Journeyman Project 2: Buried in Time.\n\n   Electronic Arts IP Preservation Team, particularly Stefan Serbicki, and\n   Vasyl Tsvirkunov of Electronic Arts for providing the source code of the\n   two Lost Files of Sherlock Holmes games. James M. Ferguson and Barry\n   Duncan for their tenacious efforts to recover the sources.\n\n   John Romero for sharing the source code of Hyperspace Delivery Boy! with\n   us.\n\n   Steffen Dingel for sharing the source code of the Mission Supernova game\n   with us.\n\n   The LUA developers, for creating a nice compact script interpreter.\n\n   Tim Schafer, for obvious reasons, and everybody else who helped make Grim\n   Fandango a brilliant game; and the EMI team for giving it their best try.\n\n   Bret Mogilefsky, for managing to create a SPUTM-style 3D LUA engine, and\n   avoiding the horrible hack it could have been.\n\n   Benjamin Haisch, for emimeshviewer, which our EMI code borrows heavily\n   from.\n\n   Fabrizio Lagorio from Trecision S.p.A., for finding and providing the\n   source code of many of their games.\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.5849609375,
          "content": "Thank you for considering contributing to ScummVM.\n\nPlease make sure to read our guidelines for contributions on our\n[wiki](https://wiki.scummvm.org/index.php/Developer_Central). In particular:\n\n* [Coding style](https://wiki.scummvm.org/index.php/Code_Formatting_Conventions)\n* [Portability](https://wiki.scummvm.org/index.php/Coding_Conventions)\n* [Commit message style](https://wiki.scummvm.org/index.php/Commit_Guidelines)\n* License: GPLv3+\n\nIf you have any questions about code, style, procedure, or anything else, feel\nfree to contact us on our mailing list at scummvm-devel@lists.scummvm.org.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 14.943359375,
          "content": "ScummVM\nCopyright (C) 2001-2025 by the following:\n\nIf you have contributed to this project then you deserve to be on this\nlist.  Contact us (see: AUTHORS) and we'll add you.\n\nDaniel Albano\nManuel Alfayate\nThomas Allen\nTore Anderson\nTor Andersson\nTorbjörn Andersson\nThanasis Antoniou\nChris Apers\nJoseph Applegate\nFrancesco Ariis\nAdrian Astley\nBertrand Augereau\nOri Avtalion\nNicolas Bacca\nScott Baker\nDaniel Balsom\nMatan Bareket\nYotam Barnoy\nFabio Battaglia\nChris Benshoof\nAlex Bevilacqua\nGunnar Birke\nRobert Biro\nArthur Blot\nLaurent Blume\nAndrea Boscarino\nBastien Bouclet\nArnaud Boutonné\nPeter Bozsó\nJurgen Braam\nRalph Brorsen\nJames Brown\nPatrick Burke\nHenry Bush\nVincent Bénony\nGiulio Camuffo\nDavid Cardwell\nRay Carro\nCameron Cawley\nKaloyan Chehlarski\nJamieson Christian\nFabien Coeurjoly\nStefano Collavini\nMarcus Comstedt\nAndrea Corna\nDavid Corrales-Lopez\nAlan Cox\nThierry Crozat\nPatrik Dahlström\nSunit Das\nJoseph Davies\nBartosz Dudziak\nFrantisek Dufka\nMatthew Duggan\nSylvain Dupont\nJonathan E. Wright\nJoachim Eberhard\nÁngel Eduardo García Hernández\nThomas Edvalson\nOystein Eftevaag\nDavid Eriksson\nThomas Fach-Pedersen\nMichael Fink\nDavid Fioramonti\nJerome Fisher\nAlex Fontoura\nAlexandre Fontoura\nHans-Jörg Frieden\nGreg Frieger\nEric Fry\nMatthew Gambrell\nNipun Garg\nNathanael Gentry\nStuart George\nMartin Gerhardy\nJanet Gilbert\nPaul Gilbert\nDavid Goldsmith\nChris Gray\nJonathan Gray\nGustavo Grieco\nYuri Guimaraes\nTobias Gunkel\nRobert Göffringmann\nAzamat H. Hackimov\nBenjamin Haisch\nVincent Hamm\nRüdiger Hanke\nTobias Hansen\nDries Harnie\nToël Hartmann\nAndre Heider\nSven Hesse\nSteven Hoefel\nJochen Hoenicke\nMatthew Hoops\nErich Hoover\nMax Horn\nTravis Howell\nCadi Howley\nMarius Ioan Orban\nDmitry Iskrich\nMichael J. Roberts\nFelix Jakschitsch\nWillem Jan Palenstijn\nJoseph Jezak\nMatthew Jimenez\nEinar Johan T. Sømåen\nStefan Jokisch\nChris Jones\nGuillem Jover\nFlorian Kagerer\nFilippos Karapetis\nDenis Kasak\nRobert Kelsen\nIsmail Khatib\nOliver Kiehl\nMartin Kiewitz\nPeter Kohaut\nPaweł Kołodziejski\nMutwin Kraus\nChristian Krause\nAndrew Kurushin\nChristian Kündig\nKyuubu\nEric Lasota\nJoe Lee\nAngus Lees\nMax Lingua\nLubomyr Lisen\nBorja Lorente\nPieter Luteijn\nAwad Mackie\nGeorge Macon\nHubert Maier\nMalignant Manor\nVicent Marti\nJosh Matthews\nSam Matthews\nAvijeet Maurya\nSteve McCrea\nRobert Megone\nVladimir Menshakov\nMatthieu Milan\nAlyssa Milburn\nNeil Millstone\nIvan Mogilko\nGregory Montoir\nCristian Morales Vega\nPeter Moraliyski\nStefano Musumeci\nBendegúz Nagy\nKostas Nakos\nChristian Neumair\nJeremy Newman\nJuha Niemimäki\nMarkus Niemistö\nRyan Nunn\nRyan O'Connor\nPer Olav Flaten\nChris Page\nAlexander Panov\nStefan Parviainen\nVincent Pelletier\nBenjamin Penney\nScott Percival\nLars Persson\nJoost Peters\nBenoit Pierre\nAndrew Plotkin\nSteven Poulton\nAndrei Prykhodko\nRaina\nCoen Rampen\nDominik Reichardt\nAlexander Reim\nKlaus Reimer\nMiroslav Remák\nĽubomír Remák\nRetro-Junk\nMichael Rittenhouse\nBernhard Rosenkraenzer\nEdward Rudd\nKari Salminen\nFelipe Sanches\nEugene Sandulenko\nDaniel Schepler\nDominik Scherer\nJohannes Schickel\nJochen Schleu\nLuc Schrijvers\nKeith Scroggins\nMartin Sedlak\nVladimir Serbinenko/Google\nLothar Serra Mari\nDeborah Servilla\nTzach Shabtay\nGilad Shaham\nLars Skovlund\nPaul Smedley\nDmitry Smirnov\nColin Snover\nTarek Soliman\nNick Sonneveld\nRobert Špalek\nWon Star\nJohn Steele Scott\nShane Stevens\nMatthew Stewart\nMarkus Strangl\nLudvig Strigeus\nFedor Strizhniou\nDavid Symonds\nYaron Tausky\nMatt Taylor\nJoel Teichroeb\nJulien Templier\nNikita Tereshin\nTobia Tesan\nFerdinand Thiessen\nScott Thomas\nWill Thomson\nBrian Tietz\nPino Toscano\nTrembyle\nDavid Turner\nLionel Ulmer\nPhilippe Valembois\nAlan Van Drake\nTom Vandepoele\nSebástien Viannay\nErico Vieira Porto\nJordi Vilalta Prat\nJoni Vähämäki\nShawn R. Walker\nChris Warren-Smith\nRobin Watts\nDavid Weinehall\nFredrik Wendel\nPiotr Wieczorek\nPaul Wilkinson\nMorgan Willcock\nBerian Williams\nJohn Willis\nJoseph-Eugene Winzer\nJaromír Wysoglad\nŁukasz Wątka\nCrane Yang\nAnton Yarcev\nSimei Yin\nKamil Zbróg\nLiu Zhaosong\nDaniel c. Würl\nDaniël ter Laan\nHein-Pieter van Braam-Stewart\nRoland van Laar\nIngo van Lil\nWalter van Niftrik\n\n\nPatches contributed by:\n\nHenrik \"Henke37\" Andersson\nAnton (Zidane)\nAlex ASP\nLaura Abbott \"sageofminerva\"\nGordon Acocella\nWalter Agazzi\nVikram Aggarwal \"youngelf\"\nDivyam Ahuja\nDaniel Albano\nManuel Alfayate\nFred Almeida\nHenrik Andersson\nTor Andersson\nFedor Antokhin\nAthanasios Antoniou\nJoseph Applegate\nFrancesco Ariis\nEttore Atalan\nAntoniou Athanasios\nIvan Avdeev\nLogan B\nNiv Baehr\nNorbert Bajkó\nGiovanni Bajo\nScott Baker\nMichael Ball\nDaniel Balsom\nLuca Barbato\nMatan Bareket\nDieter Baron \"dillo\"\nRouven Bauer\nHarsh Bawari\nKevin Becker\nAlban Bedel \"albeu\"\nBodo Bellut \"bellut\"\nNagy Bendeguz\nChris Benshoof\nJonny Bergström\nVincent Bernat\nC.W. Betts\nVincent Bénony\nAndreas Bierfert \"awjb\"\nKaustav Biswas\nElio Blanca\nElio Blanca \"eblanca76\"\nDmitry Blau\nLaurent Blume\nMartin Bohm\nPaolo Bossi\nPeter Bozsó\nJurgen Braam\nCarlo Bramini\nChristophe Branchereau\nDavid Breakey \"dbreakey\"\nMichael Brown\nRobert Buchholz \"prendi\"\nLars Buitinck\nPatrick Burke\nTim Burke\nSander Buskens\nVincent Bénony\nMartin Böhm\nRafał Będźkowski\nGiulio Camuffo\nRalph Caraveo III\nSergio Carmona\nKevin Carnes\nMathieu Carot \"yokna\"\nRay Carro\nMilo Casagrande\nBen Castricum\nLittle Cat\nStefano Ceccherini \"jackburton\"\nEduard Chaika\nPragyansh Chaturvedi (r41k0u)\nHyunseo Cho\nDan Church\nJosh Coalson \"jcoalson\"\nCurt Coder\nFabien Coeurjoly\nStefano Collavini\nThomas Combeleran \"hibernatus\"\nPatrick Combet\nKees Cook \"keescook\"\nCarlos Corbacho \"cathectic\"\nDavid Cordero\nAndrea Corna\nGabriel Corona\nDavid Corrales\nDavid Corrales-Lopez\nRoberto Costa \"fiix76\"\nAlan Cox\nRobert Crossfield\nEric Culp\nMichael D\nPatrik Dahlström\nSunit Das\nMisty De Meo\nAlexander Dergunov\nAlexandre Detiste\nJohn Doe\nRoman Donchenko\nIan Douglas Scott\nHeather Douglass\nMichael Drüing \"doc_wagon\"\nBartosz Dudziak\nMatthew Duggan \"stauff1\"\nBarry Duncan\nOlivier Duverne \"richiefs\"\nAndrei Dziahel \"develop7\"\nTomasz Długosz\nJonathan E. Wright\nJohn Eckerdal \"johneck\"\nAnnick Ecuyer\nErich Edgar Hoover\nÁngel Eduardo García Hernández\nAbdeselam El-Haman\nChatziargyriou Eleftheria\nHenrik Engqvist\nBjörn Esser\nMichael Fink\nAlexandre Folle de Menezes\nAlex Fontoura\nIgnaz Forster\nHans-Jörg Frieden\nMike Frysinger \"vapier\"\nAdrian Frühwirth\nAndrea G\nMarkus G\nD G Turner\nSantiago G. Sanz\nMatthew Gambrell\nEdu Garcia\nMatthew Garrett\nBence Gazder\nChris Gelatt \"kreeblah\"\nLafazar Gendibal\nBartosz Gentkowski\nJens Georg \"phako\"\nNicolas George \"cigaes\"\nMartin Gerhardy\nJonathan Gevaryahu \"lord_nightmare\"\nAnubhab Ghosh\nJanet Gilbert\nDmitry Gladkov\nBoris Gnezdilov\nDavid Goldsmith\nChris Gray\nEvgeny Grechnikov\nGustavo Grieco\nTobias Gruetzmacher \"tobig\"\nDamien Guard \"damienguard\"\nYuri Guimaraes\nKrzysztof Głodo\nMatti Hamalainen \"ccrtnsp\"\nRuediger Hanke\nRüdiger Hanke\nTobias Hansen\nZvika Haramaty\nMatt Hargett\nLauri Harsila\nToël Hartmann\nStefan Haubenthal \"polluks\"\nGavin Hayler\nPeter Helbing\nSteven Hoefel\nAlexander Holler \"holler\"\nErich Hoover\nEnrico Horn\nCadi Howley\nFalk Hueffner \"mellum\"\nCasey Hutchinson \"nnooiissee\"\nLauri Härsilä\nMarius Ioan Orban\nMikel Iturbe Urretxa\nMarchukov Ivan\nMichael J. Roberts\nTomas Jakobsson\nAlex Jakovleff\nFelix Jakschitsch\nChristian Jamieson\nMichał Janiszewski\nGregor Jasny \"gjasny\"\nJoachim Jautz\nFrancisco Javier Diéguez Tirado\nFrancisco Javier Trujillo Mata\nPeter Johansson\nMatt Johnson \"mattjon\"\nStefan Jokisch\nNicolas Joly \"njoly\"\nChris Jones\nKastuś K\nKeith Kaisershot\nYauheni Kaliuta\nDaniel Kamil Kozar\nYusuke Kamiyamane\nJonas Karlsson\nFelix Kehrer\nRobert Kelsen\nMartin Kennedy\nStephen Kennedy\nSam Kenny \"sam_k\"\nKalle Kietavainen\nArthur Kiyanovski\nRuud Klaver\nKai Knoblich\nSven Kochmann\nKoen Kooi \"koenkooi\"\nGeorge Kormendi\nChristoph Korn\nMaxim Kovalenko\nPetr Kratina\nChristian Krause\nTill Kresslein\nHenrik Kretzschmar\nStefan Kristiansson\nDaniel Krol\nZygmunt Krynicki \"zygoon\"\nSebastian Krzyszkowiak\nJanne Kujanpaa \"jukuja\"\nNeeraj Kumar\nPavel Kungurtsev\nOleksiy Kurochko\nBernhard Kölbl\nJay Lanagan \"r0ni\"\nNorbert Lange \"nolange\"\nManuel Lauss \"mlau2\"\nGael Le Migno \"kilobug\"\nJoe Lee\nJoohan Lee\nJozef Legény\nRolf Leggewie \"leggewie\"\nJim Leiterman\nMatt Lewandowsky\nChenbo Li\nChristian Lindemann\nLyubomyr Lisen\nDouglas Liu\nRob Loach\nDuncan Lock \"dflock\"\nMark Lodato \"itsr0y\"\nFridvin Logi \"phillip_j_fry\"\nMichael Lojkovic\nBorja Lorente Escobar\nSchrijvers Luc\nGeorg Lukas \"ge0rg\"\nArtem Lukoyanov\nIvan Lukyanov\nPieter Luteijn\nDuane Mach\nMichael Madsen \"pidgeot\"\nMatthias Mailander\nNarek Mailian\nMatthias Mailänder\nChristoph Mallon\nEngin Manap\nMalignant Manor\nDmitry Marakasov \"amdmi3\"\nDominik Marks\nAndrew Martin\nVíctor Martínez Pajares\nAlejandro Marzini \"vgvgf\"\nClaudio Matsuoka\nSam Matthews\nAvijeet Maurya\nChristian Mayer\nSteve McCrea\nTravis McKay\nConnor McLeod \"mcleod2032\"\nJennifer McMurray\nMickey McMurray \"metafox\"\nRobert Megone\nSven Meier\nLaurent Merckx\nAdam Metcalf \"gamblore\"\nNicola Mettifogo\nNicola Mettifogo\nFrank Meyering \"frank_m24\"\nTimo Mikkolainen\nAlexander Miller\nEvan Miller\nEtienne Millon\nIvan Mogilko\nAndy Molloy \"maloi\"\nJoan Montané\nOmer Mor\nCristian Morales Vega\nArmin Mueller \"arm_in\"\nSean Murrau \"lightcast\"\nAndrea Musuruane \"musuruan\"\nKO Myung-Hun \"lvzuufx\"\nMarkus Napp \"meist3r\"\nPeter Naulls \"pnaulls\"\nChristian Neumair \"mannythegnome\"\nHannes Niederhausen\nJuha Niemimäki\nMarkus Niemistö \"niemisto\"\nNicolas Noble\nBastien Nocera\nJody Northup\nRyan Nunn\nSteffen Nyeland\nAno Nymous\nRyan O'Connor\nPer Olav Flaten\nPere Orga\nJulian Ospald\nChristopher Page\nOliver Pahl\nAlexander Panov\nChris Paras \"paras_rasmatazz\"\nMathias Parnaudeau\nStefan Parviainen\nAubin Paul \"outlyer\"\nDennis Payne\nMichael Pearce\nVincent Pelletier \"subdino\"\nBenjamin Penney\nTobias Pfaff\nJonathan Phénix\nJussi Pitkanen\nDaniel Plakhotich\nAndrew Plotkin\nCarsten Pohl \"carstenpohl\"\nSteven Poulton\nTony Puccinelli\nMarkus Pyykko \"mankeli\"\nKamil Páral\nSergi Pérez Labernia\nShawn R. Walker\nJelle Raaijmakers\nMax Raskin\nAryan Rawlani\nRodrigo Rebello\nDominik Reichardt\nAlexander Reim\nNick Renieris\nFrank Richter\nThomas Richter \"thorfdbg\"\nFelix Riemann \"kirschsaft\"\nMichael Rittenhouse\nMorgan Roberts\nStephen Robinson\nTimo Roehling \"t1m0\"\nJonathan Rogers \"jonner\"\nEnrico Rolfi\nJean-Christophe Rona\nDoron Rosenberg\nBernhard Rosenkraenzer\nMarek Roth \"logicdeluxe\"\nEdward Rudd\nDavid Russo\nUwe Ryssel \"uweryssel\"\nRafał Rzepecki\nTravis S Coady \"theealien\"\nFelipe Sanches\nSantiago Sanchez\nVitor Santos\nFernando Sarmento\nSimon Sawatzki\nDario Scarpa\nDominik Scherer\nJochen Schleu\nFlorian Schmitt \"fatpenguin\"\nMartin Schoenmakers\nMark Schreiber \"mark7\"\nLuc Schrijvers\nStian Schultz\nZbyněk Schwarz\nKeith Scroggins\nMartin Sedlak\nDeborah Servilla\nTzach Shabtay\nBen Shadwick \"benshadwick\"\nGilad Shaham\nOrgad Shaneh\nRodrigo Silva\nJean-Yves Simon \"lethalwp\"\nCatarina Simões\nAndrej Sinicyn \"andrej4000\"\nPetter Sjölund\nPaul Smedley\nDmitry Smirnov\nNick Sonneveld\nMarcel Souza Lemes\nThomas Sowell\nChristian Speckner\nJan Sperling\nSteve Stavropoulos \"isnothere\"\nJohn Steele Scott\nDaniel Steinberger \"amorphousshape\"\nShane Stevens\nMarkus Strangl\nFedor Strizhniou\nSven Strothoff \"dataslayer\"\nAndrea Suatoni \"mrhandler\"\nYoshi Sugawara\nPurple T\nMartin T. H. Sandsmark\nMax Tabachenko\nKrzysztof Targoński\nYaron Tausky\nMatt Taylor\nDOSBox Team\nSarien Team\nJonathan Teh\nJoel Teichroeb\nDenis Telyukh\nNikita Tereshin\nJimmi Thogersen\nWill Thomson\nBrian Tietz\nYegor Timoshenko\nPino Toscano\nLuigi Toscano \"ltosky\"\nXavier Trochu \"xtrochu\"\nVasyl Tsvirkunov\nMichal Tulacek \"tutchek\"\nMichael Udaltsov \"cccp99\"\nJoni Vahamaki\nAashwin Vaish\nAlfred Vallés Tortosa\nAlan Van Drake\nTom Vandepoele\nKristof Vansant \"lupusbe\"\nAaryaman Vasishta\nRodrigo Vegas Sánchez-Ferrero\nSebástien Viannay\nErico Vieira Porto\nAapo Vienamo\nMarc Vinyals\nArtem Vorobiev\nJosef Väcklén\nJoni Vähämäki\nLinus Väinämö Virtanen\nBenjamin W. Zale \"junior_aepi\"\nJakob Wagner\nRebecca Wallander\nTim Walters \"realmz\"\nDonovan Watteau\nDavid Weinehall\nEric A. Welsh \"eweish42\"\nFredrik Wendel\nLars Wendler\nYudhi Widyatama \"yudhi97\"\nPiotr Wieczorek\nJakub Wilk\nKieron Wilkinson\nPaul Wilkinson\nStefan Will\nMorgan Willcock\nBerian Williams\nDavid-John Willis\nRobert Wohlrab \"moshroum\"\nDaniel Wolf\nJames Woodcock\nJaromír Wysoglad\nŁukasz Wątka\nCrane Yang\nAnton Yarcev\nJames Ye\nGrant Yeager \"glo_kidd\"\nZhiqi Yin\nKamil Zbrog\nLiu Zhaosong\nXiao Zheng\nMichael Zinn\nMichał Ziąbkowski\nErik Zubiria\nDaniel c. Würl\nMichael du Breuil \"WickedShell\"\ndc france \"erwan2004\"\nthe rara avis \"theraraavis\"\nDaniël ter Laan\nHein-Pieter van Braam\nHein-Pieter van Braam-Stewart\nMax von Werner\nCrane yang\nРоман Донченко\nДенис Телюх\nAReim1982\nAndywinXp\nArius\nAsciiWolf\nAsirome\nAspireONE-zz\nAvijeet\nBLooperZ\nBeWorld\nBendegúz\nBernhard\nBluddy\nBramvandijk \"bramvandijk\"\nCanadacow\nCarlos\nCeRiAl\ncountingpine\nCpasjuste\nCrazyMax\nDamien\nDamien\ndewt \"mncl\"\nDinoWattz\nDivyamAhuja\nDouglasLiuGamer\nDreadnoughtPT\ndubsdj\nFaalagorn\nFederico\nFenyx4\nFlorent \"flobo\"\nFlorob \"florob\"\nGazben\nGilles\nGucek\nGunnarBirke\nIlDucci\nIskrich\nj0tt\nJellby \"jellby\"\nJenniBee\nJoerg \"macdrega\"\nJonas\nKawa\nKawa-oneechan\nKyuubu\nLKramer\nLMerckx\nLenny\nLostech \"lostech\"\nLuis\nManuel\nMarisa-Chan\nMaximRussia\nMestreLion\nMrHuu\nNMIError\nNicos \"anarxia\"\nNitrus\nole\nphi1\nPix2 \"pix2\"\nQuote58\nRaina\nRichard \"trinity78\"\nRichieSams\nRossano\nRyper_Zsolt\nScarlatti \"escarlate\"\nSecularSteve\nShaharAriel\nSnejp\nStrangerke\nSupSuper\nTehGelly\nThunderforge\nTim \"tipabu\"\nTimofonic\nTomFrost\nTomasM\nTrembyle\nTwan\nVAN-Gluon\nvandalo\nVanfanel\nVelocityRa\nVhati\nWammus\nWinterGrascph\nXanathar \"xanathar\"\nXaviu\nYYxsCnnPP\nZerophase\nZibri\nZvika\n\n\nFreeSCI contributors\n\nFrancois-R Boyer\nRainer Canavan\nXiaojun Chen\nPaul David Doherty\nVyacheslav Dikonov\nRuediger Hanke\nMatt Hargett\nMax Horn\nRavi I.\nEmmanuel Jeandel\nDmitry Jemerov\nChris Kehler\nChristopher T. Lansdown\nSergey Lapin\nRickard Lind\nHubert Maier\nJohannes Manhave\nClaudio Matsuoka\nDark Minister\nCarl Muckenhoupt\nAnders Baden Nielsen\nWalter van Niftrik\nRune Orsval\nSolomon Peachy\nRobey Pointer\nMagnus Reftel\nChristoph Reichenbach\nGeorge Reid\nLars Skovlund\nRink Springer\nRainer De Temple\nSean Terrell\nHugues Valois\nJordi Vilalta\nPetr Vyhnak\nBas Zoetekouw\n\n\nResidualVM\nCopyright (C) 2003-2021 by the following:\n\nSome of the code in this project was originally LGPL v2.1 (or later)\nbut is used as GPL v2 (or later) starting from 19 Dec 2012.\n\nIf you have contributed to this project then you deserve to be on this\nlist.  Contact us (see: AUTHORS) and we'll add you.\n\nThomas Allen\nTorbjorn Andersson\nOri Avtalion\nGunnar Birke\nRobert Biro\nElio Blanca\nBastien Bouclet\nJames Brown\nGiulio Camuffo\nDavid Cardwell\nCameron Cawley\nMarcus Comstedt\nAndrea Corna\nBartosz Dudziak\nDavid Fioramonti\nJonathan Gray\nTobias Gunkel\nAzamat H. Hackimov\nVincent Hamm\nDries Harnie\nSven Hesse\nMatthew Hoops\nErich Hoover\nMax Horn\nTravis Howell\nJoseph Jezak\nGuillem Jover\nFilippos Karapetis\nPawel Kolodziejski\nChristian Krause\nIngo van Lil\nDouglas Liu\nJoost Peters\nJordi Vilalta Prat\nAwad Mackie\nGeorge Macon\nHubert Maier\nJosh Matthews\nMatthieu Milan\nGregory Montoir\nStefano Musumeci\nChristian Neumair\nMarius Ioan Orban\nVincent Pelletier\nAryan Rawlani\nDaniel Schepler\nOrgad Shaneh\nDmitry Smirnov\nColin Snover\nEinar Johan T. Somaaen\nYaron Tausky\nJoel Teichroeb\nJulien Templier\nScott Thomas\nWill Thomson\nPino Toscano\nLionel Ulmer\nJoni Vahamaki\nLiu Zhaosong\nArtemVorobiev\naviloria\ncmayer0087\nFaalagorn\nfedericorosso1993\nJenniBee\nkarjonas\nKaede\nLMerckx\nmparnaudeau\norangeforest11\nPoulpiFr\nsietschie\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.126953125,
          "content": "# GNU Make 3.80 and older have bugs that cause parsing issues.\n# Make sure we have at least version 3.81.\nifndef .FEATURES\n$(error GNU Make 3.81 or higher is required)\nendif\n\n#######################################################################\n# Default compilation parameters. Normally don't edit these           #\n#######################################################################\n\nsrcdir      ?= .\n\nDEFINES     := -DHAVE_CONFIG_H\nLDFLAGS     :=\nINCLUDES    := -I. -I$(srcdir) -I$(srcdir)/engines\nLIBS        :=\nOBJS        :=\nDEPDIR      := .deps\n\nMODULES     :=\nMODULE_DIRS :=\n\n# All game detection-related object files for engines\nDETECT_OBJS :=\nLOAD_RULES_MK   := 1\n\n# Load the make rules generated by configure\n-include config.mk\n\nifeq \"$(HAVE_GCC)\" \"1\"\n\tCXXFLAGS:= -Wall $(CXXFLAGS)\n\t# Turn off some annoying and not-so-useful warnings\n\tCXXFLAGS+= -Wno-long-long -Wno-multichar -Wno-unknown-pragmas -Wno-reorder\n\t# Enable even more warnings...\n\tCXXFLAGS+= -Wpointer-arith -Wcast-qual\n\tCXXFLAGS+= -Wnon-virtual-dtor -Wwrite-strings\n\n\t# Currently we disable this gcc flag, since it will also warn in cases,\n\t# where using GCC_PRINTF (means: __attribute__((format(printf, x, y))))\n\t# is not possible, thus it would fail compiliation with -Werror without\n\t# being helpful.\n\t#CXXFLAGS+= -Wmissing-format-attribute\n\n\t# Disable exceptions.\n\tCXXFLAGS+= -fno-exceptions\n\nifneq \"$(HAVE_CLANG)\" \"1\"\n\t# enable checking of pointers returned by \"new\", but only when we do not\n\t# build with clang\n\tCXXFLAGS+= -fcheck-new\nendif\nendif\n\nifeq \"$(HAVE_CLANG)\" \"1\"\n\tCXXFLAGS+= -Wno-conversion -Wno-shorten-64-to-32 -Wno-sign-compare -Wno-four-char-constants\n\t# We use a anonymous nested type declaration in an anonymous union in\n\t# common/str.h. This is no standard construct and clang warns about it.\n\t# It works for all our target systems though, thus we simply disable that\n\t# warning.\n\tCXXFLAGS+= -Wno-nested-anon-types\nendif\n\nifeq \"$(HAVE_ICC)\" \"1\"\n\t# Disable some warnings:\n\t#  161: unrecognized #pragma\n\t# 1899: multicharacter character literal (potential portability problem)\n\tCXXFLAGS+= -diag-disable 161,1899\nendif\n\n#######################################################################\n# Default commands - put the necessary replacements in config.mk      #\n#######################################################################\n\nCAT     ?= cat\nCP      ?= cp\nECHO    ?= printf\nINSTALL ?= install\nMKDIR   ?= mkdir -p\nRM      ?= rm -f\nRM_REC  ?= $(RM) -r\nZIP     ?= zip -q\n\nifeq ($(VERBOSE_BUILD),1)\n\tLS := ls -l\nelse\n\tLS := true\nendif\n\n#######################################################################\n# Misc stuff - you should never have to edit this                     #\n#######################################################################\n\nEXECUTABLE  := $(EXEPRE)scummvm$(EXEEXT)\n\ninclude $(srcdir)/Makefile.common\n\nENGINE_SUBDIRS_CONFIGURE := $(wildcard $(srcdir)/engines/*/configure.engine)\n\nconfig.h:\nSAVED_ENV_VARS = AR AS ASFLAGS CPPFLAGS CXX CXXFLAGS LD LDFLAGS RANLIB SDL_CONFIG STRIP WINDRES WINDRESFLAGS\n\n# The environment variable PKG_CONFIG_LIBDIR has a different meaning\n# for pkg-config when it is empty and when it is not defined.\n# When PKG_CONFIG_LIBDIR is defined but empty, the .pc files cannot\n# be found because the search path is empty.\n# Here we make sure not to define PKG_CONFIG_LIBDIR when automatically\n# running configure and it was not set for the previous run\n# so pkg-config uses the system default search path for the .pc files.\nifneq ($(SAVED_PKG_CONFIG_LIBDIR),unset)\n\tSAVED_ENV_VARS += PKG_CONFIG_LIBDIR\nendif\n\n# check if configure has been run or has been changed since last run\nconfigure.stamp: $(srcdir)/configure $(srcdir)/engines.awk $(ENGINE_SUBDIRS_CONFIGURE)\nifeq \"$(findstring config.mk,$(MAKEFILE_LIST))\" \"config.mk\"\n\t@echo \"Running $(srcdir)/configure with the last specified parameters\"\n\t@sleep 2\n\n\t$(foreach VAR,$(SAVED_ENV_VARS),$(VAR)=\"$(SAVED_$(VAR))\") \\\n\t\t$(srcdir)/configure $(SAVED_CONFIGFLAGS)\nelse\n\t$(error You need to run $(srcdir)/configure before you can run make. Check $(srcdir)/configure --help for a list of parameters)\nendif\n\nconfig.h config.mk engines/plugins_table.h engines/detection_table.h engines/engines.mk: configure.stamp\n\t@if ! test -f $@; then \\\n\t\trm -f configure.stamp; \\\n\t\t$(MAKE) configure.stamp; \\\n\tfi\n\nifneq ($(origin port_mk), undefined)\ninclude $(srcdir)/$(port_mk)\nendif\n\n.PHONY: print-dists print-executables print-version print-distversion\nprint-dists:\n\t@echo $(DIST_FILES_DOCS) $(DIST_FILES_THEMES) $(DIST_FILES_NETWORKING) $(DIST_FILES_VKEYBD) $(DIST_FILES_ENGINEDATA) $(DIST_FILES_ENGINEDATA_BIG) $(DIST_FILES_SOUNDFONTS) $(DIST_FILES_PLATFORM) $(srcdir)/doc\n\nprint-executables:\n\t@echo $(if $(DIST_EXECUTABLES),$(DIST_EXECUTABLES),$(EXECUTABLE) $(PLUGINS))\n\nprint-version:\n\t@echo $(VERSION)\n\nprint-distversion:\n\t@echo $(DISTVERSION)\n\ndevtools/create_project/cmake/build/create_project:\n\tcmake -Hdevtools/create_project/cmake -Bdevtools/create_project/cmake/build/\n\tcmake --build devtools/create_project/cmake/build/\n\nCMakeLists.txt: devtools/create_project/cmake/build/create_project config.mk\n\t./devtools/create_project/cmake/build/create_project . --cmake $(SAVED_CONFIGFLAGS)\n\ncmake: CMakeLists.txt\n\tcmake -H. -Bbuild\n\tcmake --build build\n"
        },
        {
          "name": "Makefile.common",
          "type": "blob",
          "size": 15.6123046875,
          "content": "# This file is used by Makefile and declares common build rules,\n# a list of common object files etc.\n\n######################################################################\n# The default build target: just build the scummvm executable\n######################################################################\n\nall: $(EXECUTABLE) plugins\n\nifdef SPLIT_DWARF\nall: $(EXECUTABLE).dwp\nendif\n\nifdef USE_PANDOC\nall: PANDOC_CONVERT\nendif\n\n######################################################################\n# Module settings\n######################################################################\n\nPLUGINS :=\nMODULES := test devtools base $(MODULES)\n\n-include engines/engines.mk\n\n# After the game specific modules follow the shared modules\nMODULES += \\\n\tengines \\\n\tgui \\\n\tbackends \\\n\tvideo \\\n\timage \\\n\tgraphics \\\n\taudio \\\n\tmath \\\n\tcommon \\\n\tcommon/compression \\\n\tcommon/formats \\\n\tpo \\\n\tdoc\n\nifdef USE_LUA\nMODULES += common/lua\nendif\n\nifdef USE_MT32EMU\nMODULES += audio/softsynth/mt32\nendif\n\n######################################################################\n# The build rules follow - normally you should have no need to\n# touch whatever comes after here.\n######################################################################\n\n# Concat DEFINES and INCLUDES to form the CPPFLAGS\nCPPFLAGS := $(DEFINES) $(INCLUDES)\n\n# Include the build instructions for all modules\n-include $(addprefix $(srcdir)/, $(addsuffix /module.mk,$(MODULES)))\n\n# Store original info\nMODULES_ORIG:= $(MODULES)\nMODULE_DIRS_ORIG := $(MODULE_DIRS)\nKYRARPG_COMMON_OBJ_ORIG := $(KYRARPG_COMMON_OBJ)\n\n# Skip rules for these files, by resetting the LOAD_RULES_MK\nLOAD_RULES_MK :=\n\nifdef DETECTION_FULL\n# Reset detection objects, which uptill now are filled with only\n# enabled engines.\nDETECT_OBJS :=\n\n# Include all engine's module files, which populate DETECT_OBJS\n-include $(srcdir)/engines/*/module.mk\nendif\n\n# Reset stuff\nMODULES := $(MODULES_ORIG)\nMODULE :=\nMODULE_OBJS :=\nMODULE_DIRS := $(MODULE_DIRS_ORIG)\nPLUGIN :=\nKYRARPG_COMMON_OBJ := $(KYRARPG_COMMON_OBJ_ORIG)\n\n# Enable-rules again\nLOAD_RULES_MK := 1\n\nifneq ($(DETECTION_STATIC), 1)\n-include $(srcdir)/base/detection/module.mk\nelse\nMODULE_DIRS += $(sort $(dir $(DETECT_OBJS)))\nendif\n\n# Depdir information\nDEPDIRS = $(addsuffix $(DEPDIR),$(MODULE_DIRS)) dists/$(DEPDIR)\nDEPFILES =\n\n# Make base/version.o depend on all other object files. This way if anything is\n# changed, it causes version.cpp to be recompiled. This in turn ensures that\n# the build date in gScummVMBuildDate is correct.\nbase/version.o: $(filter-out base/libbase.a,$(OBJS))\n\nifdef USE_ELF_LOADER\nbackends/plugins/elf/version.o: $(filter-out base/libbase.a,$(filter-out backends/libbackends.a,$(OBJS)))\nendif\n\n# Replace regular output with quiet messages\nifneq ($(findstring $(MAKEFLAGS),s),s)\nifneq ($(VERBOSE_BUILD),1)\nifneq ($(VERBOSE_BUILD),yes)\nQUIET_CC      = @echo '   ' C '      ' $@;\nQUIET_CXX     = @echo '   ' C++ '    ' $@;\nQUIET_AS      = @echo '   ' AS '     ' $@;\nQUIET_NASM    = @echo '   ' NASM '   ' $@;\nQUIET_PANDOC  = @echo '   ' PANDOC ' ' $@;\nQUIET_AR      = @echo '   ' AR '     ' $@;\nQUIET_RANLIB  = @echo '   ' RANLIB ' ' $@;\nQUIET_PLUGIN  = @echo '   ' PLUGIN ' ' $@;\nQUIET_LINK    = @echo '   ' LINK '   ' $@;\nQUIET_DWP     = @echo '   ' DWP '    ' $@;\nQUIET_WINDRES = @echo '   ' WINDRES '' $@;\nQUIET_CURL\t\t= @echo '   ' CURL '   ' $@;\nQUIET         = @\nendif\nendif\nendif\n\n# The build rule for the ScummVM executable\n$(EXECUTABLE): $(DETECT_OBJS) $(OBJS)\n\t+$(QUIET_LINK)$(LD) $(LDFLAGS) $(PRE_OBJS_FLAGS) $+ $(POST_OBJS_FLAGS) $(LIBS) -o $@\n\t+$(QUIET)$(LS) $@\n\nifdef SPLIT_DWARF\n%.dwp: %\n\t$(QUIET_DWP)$(DWP) -e $< -o $@\nendif\n\n# Grab the ScummVM Manual from Read the Docs\nifdef USE_CURL\nDIST_FILES_MANUAL := ScummVM\\ Manual\\ $(MANUALVERSION).pdf\nmanual:\n\t$(QUIET_CURL)$(CURL) -s https://docs.scummvm.org/_/downloads/en/$(MANUALVERSION)/pdf/ --output $(DIST_FILES_MANUAL)\nelse\nmanual:\nendif\n\ndistclean: clean clean-devtools clean-test\n\t$(RM) config.h config.mk config.log configure.stamp engines/engines.mk engines/detection_table.h engines/plugins_table.h \"ScummVM Manual\"*.pdf\n\nclean: clean-toplevel\nclean-toplevel:\n\t$(RM_REC) $(DEPDIRS)\n\t$(RM) $(OBJS) $(DETECT_OBJS) $(EXECUTABLE) $(PLUGIN_OBJ_FILES)\nifdef SPLIT_DWARF\n\t$(RM) $(OBJS:.o=.dwo) $(DETECT_OBJS:.o=.dwo)\n\t$(RM) $(EXECUTABLE).dwp\nendif\n\n\n#\n# The build rules for object files.\n#\n\nbase/plugins.o: config.mk\n\nifdef CXX_UPDATE_DEP_FLAG\n\n# Build rule for C++ files. Makes use of CXX_UPDATE_DEP_FLAG for advanced\n# dependency tracking.\n%.o: %.c\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET_CC)$(CC) $(CXX_UPDATE_DEP_FLAG) $(CFLAGS) $(CPPFLAGS) -c $(<) -o $@\n%.o: %.cpp\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET_CXX)$(CXX) $(CXX_UPDATE_DEP_FLAG) $(CXXFLAGS) $(CPPFLAGS) -c $(<) -o $@\n\n\n# Build rules for Objective-C and Objective-C++ files. Strictly speaking, this is for macOS only.\n%.o: %.mm\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET_CXX)$(CXX) $(CXX_UPDATE_DEP_FLAG) $(CXXFLAGS) $(CPPFLAGS) -c $(<) -o $@\n\n%.o: %.m\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET_CXX)$(CXX) $(CXX_UPDATE_DEP_FLAG) $(CPPFLAGS) $(OBJCFLAGS) -c $(<) -o $@\n\n# Build rule for assembler files with preprocessing\n%.o: %.S\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET_AS)$(CXX) $(CXX_UPDATE_DEP_FLAG) $(ASFLAGS) -c $(<) -o $@\n\nbase/version.o: base/version.cpp\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET_CXX)$(CXX) $(CXX_UPDATE_DEP_FLAG) $(CXXFLAGS) $(VERFLAGS) $(CPPFLAGS) -c $(<) -o $@\n\nelse\n\n# Dumb compile rule, for C++ compilers that don't allow dependency tracking or\n# where it is broken\n%.o: %.cpp\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET_CXX)$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $(<) -o $@\n\n# Build rule for assembler files with preprocessing\n%.o: %.S\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET_AS)$(CXX) $(ASFLAGS) -c $(<) -o $@\n\nbase/version.o: base/version.cpp\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET_CXX)$(CXX) $(CXXFLAGS) $(VERFLAGS) $(CPPFLAGS) -c $(<) -o $@\nendif\n\n# Build rule for assembler files\n%.o: %.s\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET_AS)$(AS) $(ASFLAGS) $(<) -o $@\n\n# Build rule for Windows resource files\n# This has multiple passes to generate the deps file:\n# First is to include config.h and config.mk\n# Second is to process all #include \"*.h\" form includes into source-tree deps\n# Third is to process all #include \"*.rh\" form includes into build-tree deps\n# Fourth is to process all FILE, ICON, RT_MANIFEST, and DATA lines into source-tree deps\n# The regexes are portable forms of:\n#     ^#include\\s+\"([^\"]*).h\".*$\n#     ^#include\\s+\"([^\"]*).rh\".*$\n#     ^(.*\\s(FILE|ICON|RT_MANIFEST|DATA))\\s+\"([^\"]*)\".*$\n# The first sed removes winresrc.h (system include) and config.h (not in srcdir, printed\n# by the echo before sed), the last strips the trailing backslash on the last line.\n%.o: %.rc\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET)$(MKDIR) $(*D)/$(DEPDIR)\n\t$(QUIET)echo \"$@: $< config.h config.mk \\\\\" > $(*D)/$(DEPDIR)/scummvm.d\n\t$(QUIET)sed -n 's:^\\#include[[:space:]][[:space:]]*\"\\([^\"]*\\.h\\)\".*$$:    $(srcdir)/\\1 \\\\:p; ' $(<) | \\\n\t\tsed '/winresrc\\.h\\|config\\.h/d' >> $(*D)/$(DEPDIR)/scummvm.d\n\t$(QUIET)sed -n 's:^\\#include[[:space:]][[:space:]]*\"\\([^\"]*\\.rh\\)\".*$$:    \\1 \\\\:p; ' $(<) \\\n\t\t>> $(*D)/$(DEPDIR)/scummvm.d\n\t$(QUIET)sed -n 's:^\\(.*[[:space:]]\\(FILE\\|ICON\\|RT_MANIFEST\\|DATA\\)\\)[[:space:]][[:space:]]*\"\\([^\"]*\\)\".*$$:    $(srcdir)/\\3 \\\\:p; ' $(<) | \\\n\t\tsed '$$ s/ \\\\//' >> $(*D)/$(DEPDIR)/scummvm.d\n\t$(QUIET_WINDRES)$(WINDRES) $(WINDRESFLAGS) $(CPPFLAGS) $(<) -o $@\n\nifdef USE_NASM\n# Build rule for NASM assembler files\n%.o: %.asm\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET_NASM)$(NASM) $(NASMFLAGS) -o $@ $(<)\nendif\n\n# Include the dependency tracking files.\n-include $(wildcard $(addsuffix /*.d,$(DEPDIRS)))\n\n# Mark *.d files and most *.mk files as PHONY. This stops make from trying to\n# recreate them (which it can't), and in particular from looking for potential\n# source files. This can save quite a bit of disk access time.\n.PHONY: $(wildcard $(addsuffix /*.d,$(DEPDIRS))) $(addprefix $(srcdir)/, $(addsuffix /module.mk,$(MODULES))) \\\n\t$(srcdir)/$(port_mk) $(srcdir)/rules.mk\n\n######################################################################\n# Get the current version information\n######################################################################\n\n# AmigaOS grep command has a problem with \"./\" in pathnames, so use cat piped into grep instead.\nVERSION = $(shell cat \"${srcdir}/base/internal_version.h\" | grep SCUMMVM_VERSION | cut -d\\\" -f2)\nVER_MAJOR = $(shell echo $(VERSION) | cut -d. -f 1)\nVER_MINOR = $(shell echo $(VERSION) | cut -d. -f 2)\nVER_PATCH = $(shell echo $(VERSION) | cut -d. -f 3 | cut -c1)\nVER_EXTRA = $(shell echo $(VERSION) | cut -d. -f 3 | cut -c2-)\n\nifdef AMIGAOS\n# AmigaOS needs the date in a specific format for the version cookie.\nAMIGA_DATE = $(shell gdate '+%d.%m.%Y')\nVERFLAGS += -DAMIGA_DATE=\\\"$(AMIGA_DATE)\\\"\nendif\nifdef MORPHOS\n# MorphOS needs the date in a specific format for the version cookie.\nAMIGA_DATE = $(shell date +\"%-d.%-m.%Y\")\nVERFLAGS += -DAMIGA_DATE=\\\"$(AMIGA_DATE)\\\"\nendif\n\n######################################################################\n# Get git's working copy information\n######################################################################\n\nifneq ($(shell cd $(srcdir); git rev-parse --verify HEAD 1>/dev/null 2>&1 || echo \"error\"),error)\nGITROOT := $(srcdir)\nifeq ($(origin VER_REV), undefined)\nGIT_VER_MAJOR = $(shell git --version | sed 's/^git version //' | cut -d. -f 1)\n# Are there uncommitted changes? (describe --dirty is only available since 1.6.6)\nifeq ($(GIT_VER_MAJOR),1)\nVER_DIRTY := $(shell cd $(srcdir); git update-index --refresh --unmerged 1>/dev/null 2>&1; git diff-index --quiet HEAD || echo \"-dirty\")\nelse\nGIT_DIRTY_FLAG = --dirty\nendif\n# Get the working copy base revision\nVER_REV := $(shell cd $(srcdir); git describe $(GIT_DIRTY_FLAG) --always --long --match desc/\\* | cut -d '-' -f 2-)$(VER_DIRTY)\nendif\nelse\nGITROOT := git://github.com/scummvm/scummvm.git\nendif\n\n# Define the Subversion revision if available, either autodetected or\n# specified by the user, but only for base/version.cpp.\nifneq ($(origin VER_REV), undefined)\nVERFLAGS += -DSCUMMVM_REVISION=\\\"$(VER_REV)\\\"\nendif\n\n######################################################################\n# Distribution settings\n######################################################################\n\nifeq ($(VER_EXTRA),git)\nifeq ($(origin VER_REV), undefined)\nDISTVERSION = $(shell date '+%Y-%m-%d')\nelse\nDISTVERSION = git$(VER_REV)\nendif\nelse\nDISTVERSION = $(VERSION)\n# Set the manual version to the release tag, unless a manual value was provided\nifeq ($(MANUALVERSION),latest)\nMANUALVERSION = v$(VERSION)\nendif\nendif\n\nDISTNAME := scummvm-$(DISTVERSION)\nDISTDIR := dist\nVERFILE := $(DISTDIR)/$(DISTNAME)/base/internal_version.h\n\nifdef USE_PANDOC\n# Convert README.md and NEWS.md to plain text for any platform that might require it\nPANDOC_CONVERT: README$(PANDOCEXT) CONTRIBUTING$(PANDOCEXT) NEWS$(PANDOCEXT) doc/de/NEUES$(PANDOCEXT)\n\t@sed -i'' -e \"s/NEWS.md/NEWS$(PANDOCEXT)/g\" README$(PANDOCEXT)\n\t@sed -i'' -e \"s/CONTRIBUTING.md/CONTRIBUTING$(PANDOCEXT)/g\" README$(PANDOCEXT)\n\n%$(PANDOCEXT): %.md\n\t$(QUIET)$(MKDIR) $(*D)\n\t$(QUIET_PANDOC)$(PANDOC) -f gfm -t $(PANDOCFORMAT) --metadata pagetitle=$(basename $(notdir $@)) -s -o $@ $<\nendif\n\n# TODO git via $(GITROOT)\n$(VERFILE): $(srcdir)/base/internal_version.h\n\t@$(RM_REC) $(DISTDIR)\n\t@$(MKDIR) $(DISTDIR)\n\tsvn export $(SVNROOT) $(DISTDIR)/$(DISTNAME)\nifneq ($(origin VER_REV), undefined)\n\t@# Use the current SVN revision as a default for the snapshot sources\n\t@svn cat $(SVNROOT)/base/internal_version.h | sed -e \\\n\t\t\"s/^#define SCUMMVM_REVISION$$/#define SCUMMVM_REVISION \\\"$(VER_REV)\\\"/g\" \\\n\t\t> $(VERFILE)\nendif\n\n$(DISTDIR)/$(DISTNAME).tar.gz: $(VERFILE)\n\tcd $(DISTDIR); tar zcf $(DISTNAME).tar.gz $(DISTNAME)\n\n$(DISTDIR)/$(DISTNAME).tar.bz2: $(VERFILE)\n\tcd $(DISTDIR); tar jcf $(DISTNAME).tar.bz2 $(DISTNAME)\n\n$(DISTDIR)/$(DISTNAME).zip: $(VERFILE)\n\tcd $(DISTDIR); zip -qr9 $(DISTNAME).zip $(DISTNAME)\n\ndist-src: \\\n\t$(DISTDIR)/$(DISTNAME).tar.gz \\\n\t$(DISTDIR)/$(DISTNAME).tar.bz2 \\\n\t$(DISTDIR)/$(DISTNAME).zip\n\t@#RPM-src?\n\t@#DEB-src?\n\n# Common files\nDIST_FILES_DOCS:=AUTHORS COPYING COPYRIGHT NEWS.md README.md CONTRIBUTING.md\nDIST_FILES_DOCS+=LICENSES/COPYING.Apache LICENSES/COPYING.BSD LICENSES/COPYING.BSL LICENSES/COPYING.FREEFONT\nDIST_FILES_DOCS+=LICENSES/COPYING.GLAD LICENSES/COPYING.ISC LICENSES/COPYING.LGPL LICENSES/COPYING.LUA\nDIST_FILES_DOCS+=LICENSES/COPYING.MIT LICENSES/COPYING.MKV LICENSES/COPYING.MPL LICENSES/COPYING.OFL LICENSES/COPYING.TINYGL\nDIST_FILES_DOCS+=LICENSES/CatharonLicense.txt\nDIST_FILES_DOCS:=$(addprefix $(srcdir)/,$(DIST_FILES_DOCS))\nifdef USE_PANDOC\nDIST_FILES_DOCS+=README$(PANDOCEXT) NEWS$(PANDOCEXT) CONTRIBUTING$(PANDOCEXT)\nendif\nifdef DIST_FILES_MANUAL\nifneq (\"$(wildcard $(DIST_FILES_MANUAL))\",\"\")\nDIST_FILES_DOCS+=$(DIST_FILES_MANUAL)\nendif\nendif\n\nDIST_FILES_DOCS_languages=cz da de es fr it no-nb se\nDIST_FILES_DOCS_cz:=$(addprefix $(srcdir)/doc/cz/,PrectiMe)\nDIST_FILES_DOCS_da:=$(addprefix $(srcdir)/doc/da/,HurtigStart)\nDIST_FILES_DOCS_de:=$(addprefix $(srcdir)/doc/de/,LIESMICH NEUES.md Schnellstart)\nifdef USE_PANDOC\nDIST_FILES_DOCS_de+=doc/de/NEUES$(PANDOCEXT)\nendif\nDIST_FILES_DOCS_es:=$(addprefix $(srcdir)/doc/es/,InicioRapido)\nDIST_FILES_DOCS_fr:=$(addprefix $(srcdir)/doc/fr/,DemarrageRapide)\nDIST_FILES_DOCS_it:=$(addprefix $(srcdir)/doc/it/,GuidaRapida)\nDIST_FILES_DOCS_no-nb:=$(addprefix $(srcdir)/doc/no-nb/,HurtigStart)\nDIST_FILES_DOCS_se:=$(addprefix $(srcdir)/doc/se/,LasMig Snabbstart)\n\n# Themes files\nDIST_FILES_THEMES=scummmodern.zip scummclassic.zip scummremastered.zip residualvm.zip gui-icons.dat shaders.dat\nifdef USE_TRANSLATION\nDIST_FILES_THEMES+=translations.dat\nendif\nDIST_FILES_THEMES:=$(addprefix $(srcdir)/gui/themes/,$(DIST_FILES_THEMES))\n\n# Networking files\nDIST_FILES_NETWORKING=\nifdef USE_SDL_NET\nDIST_FILES_NETWORKING:=$(addprefix $(srcdir)/dists/networking/,wwwroot.zip)\nendif\n\n# Virtual keyboard files\nDIST_FILES_VKEYBD=\nifdef ENABLE_VKEYBD\nDIST_FILES_VKEYBD:=$(addprefix $(srcdir)/backends/vkeybd/packs/,vkeybd_default.zip vkeybd_small.zip)\nendif\n\n# Engine data files\nDIST_FILES_ENGINEDATA_BASE_CORE_SOURCE:=$(srcdir)/dists/engine-data/engine_data_core.mk\nDIST_FILES_LIST=\n-include $(DIST_FILES_ENGINEDATA_BASE_CORE_SOURCE)\nDIST_FILES_ENGINEDATA_BASE_CORE:=$(DIST_FILES_LIST)\n\nDIST_FILES_ENGINEDATA_BASE_SOURCE:=$(srcdir)/dists/engine-data/engine_data.mk\nDIST_FILES_LIST=\n-include $(DIST_FILES_ENGINEDATA_BASE_SOURCE)\nDIST_FILES_ENGINEDATA_BASE:=$(DIST_FILES_LIST)\n\nDIST_FILES_ENGINEDATA_BASE_BIG_SOURCE:=$(srcdir)/dists/engine-data/engine_data_big.mk\nDIST_FILES_LIST=\n-include $(DIST_FILES_ENGINEDATA_BASE_BIG_SOURCE)\nDIST_FILES_ENGINEDATA_BASE_BIG:=$(DIST_FILES_LIST)\n\nDIST_FILES_ENGINEDATA:=$(addprefix $(srcdir)/,$(DIST_FILES_ENGINEDATA_BASE_CORE) $(DIST_FILES_ENGINEDATA_BASE))\nDIST_FILES_ENGINEDATA_BIG:=$(addprefix $(srcdir)/,$(DIST_FILES_ENGINEDATA_BASE_BIG))\n\n# Shaders: install if USE_OPENGL_SHADERS is defined\nDIST_FILES_SHADERS=\nifneq ($(USE_OPENGL_SHADERS),)\nifdef ENABLE_GRIM\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/grim/shaders/*)\nendif\nifdef ENABLE_MYST3\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/myst3/shaders/*)\nendif\nifdef ENABLE_STARK\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/stark/shaders/*)\nendif\nifdef ENABLE_WINTERMUTE\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/wintermute/base/gfx/opengl/shaders/*)\nendif\nifdef ENABLE_PLAYGROUND3D\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/playground3d/shaders/*)\nendif\nifdef ENABLE_HPL1\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/hpl1/engine/impl/shaders/*)\nendif\nifdef ENABLE_FREESCAPE\nDIST_FILES_SHADERS+=$(wildcard $(srcdir)/engines/freescape/shaders/*)\nendif\nendif\n\n# Soundfonts\nDIST_FILES_SOUNDFONTS=\nifdef USE_FLUIDSYNTH\nDIST_FILES_SOUNDFONTS:=$(addprefix $(srcdir)/dists/soundfonts/,Roland_SC-55.sf2)\nDIST_FILES_DOCS+=$(addprefix $(srcdir)/dists/soundfonts/,COPYRIGHT.Roland_SC-55)\nendif\n\n.PHONY: all clean distclean plugins dist-src clean-toplevel manual\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 155.87890625,
          "content": "For a more comprehensive changelog of the latest experimental code, see:\n        https://github.com/scummvm/scummvm/commits/\n\n#### 2.10.0 (XXXX-XX-XX)\n\n New games:\n   - Added support for Dark Seed.\n\n Nuvie:\n   - Added \"Transfer a Character\" feature to main menu.\n\n SCUMM:\n   - Added support for the classic SE variants of MI1, MI2, DOTT and FT.\n   - Added support for the remastered speech and sound effects in the\n     remastered version of Day of the Tentacle.\n\n\n#### 2.9.0 \"Close Encounters of the 2.9th Kind\" (2024-12-22)\n\n New games:\n   - Added support for Orion Burger.\n   - Added support for Total Eclipse and Total Eclipse 2.\n   - Added support for Thimbleweed Park.\n   - Added support for The Space Bar.\n   - Added support for Moonbase Commander.\n   - Added support for Backyard Basketball.\n   - Added support for Unrest.\n   - Added support for Rise of the Dragon.\n   - Added support for Castle Master.\n   - Added support for Wait for it! Issue 3. Song for a Hare.\n   - Added support for Mask Show.\n   - Added support for Marvellous Mice Adventures: Meeting Sea Rat.\n   - Added support for The Adventures of the Good Soldier Schweik.\n   - Added support for Marvellous Mice Adventures: Sea Rat's Birthday.\n\n New platforms:\n   - Added SailfishOS port.\n\n General:\n   - Fixed GLSL version parsing on some OpenGL ES2 platforms.\n   - The \"Aspect ratio correction\" option within the Global Options section\n     is now active by default.\n   - There is now a checkbox for the --copy-protection command-line option.\n   - Reduced memory usage on platforms with dynamic detection plugins.\n   - Improved GUI usability on small screens.\n   - Added optional dependency for libopenmpt for sound.\n   - Added optional dependency for libmpcdec (musepack) for sound.\n\n ADL:\n   - Added Apple II checkerboard cursor as a visual option.\n   - Removed broken strings in Time Zone.\n   - Fixed picking up all items via \"GET ALL\" from a scene.\n   - Fixed restoring the state of unvisited rooms.\n\n AGI:\n   - Apple II games are now detected. Although not supported yet, most can be started.\n   - Fixed duration of timed text boxes. They were shown only half as long as\n     they should be, making e.g. the King's Quest III intro hard to read.\n   - The predictive input dialog popup when clicking on the prompt line or in an input field\n     is now an optional game setting, disabled by default.\n   - Fixed Black Cauldron witches not disappearing at end of game.\n   - Fixed King's Quest III mice event not occurring after listening to fish.\n   - Fixed Mixed-Up Mother Goose crash after nursery rhyme on certain platforms.\n   - Fixed Gold Rush game clock in Apple IIgs version.\n   - Fixed Donald Duck's Playground audio bugs in PC booter version.\n   - Improved detection for PC booter games.\n   - Added support for sound in CoCo3 games.\n   - Fixed many bugs in Winnie The Pooh In The Hundred Acre Wood, including\n     Tigger never appearing and Eeyore not accepting his balloon.\n\n AGOS:\n   - Added keymapper support.\n   - Fixed timer handling in savegames, addressing issues such as crashing in\n     Waxworks Egypt Level 3 and Power Points not regenerating in Elvira 2.\n\n AGS:\n   - Syncronized with upstream AGS 3.6.1.30.\n   - Added commandline --language option to specify the game language overriding the GUI.\n   - Fixed glitchy staircase in old Maniac Mansion Mania episodes, caused by\n     imperfect pathfinding.\n   - Fixed savescreen not accepting keyboard input in a few games (e.g. An English Haunting).\n   - Fixed colorless texts in games using the SpriteFont plugin (e.g. Detective Gallo).\n   - Updated .mod playback and fixed looping not working in rare occasions.\n   - Fixed misbehaving legacy upscaler in old games.\n   - Fixed rare incorrect tinting when using AVX2 optimizations.\n   - Added a few checks for unsupported videos to prevent crashes.\n   - Multiple updates to the detection tables.\n\n Asylum:\n   - Implemented moving with the arrow keys.\n\n BBVS:\n   - Added keymapper support.\n\n Bladerunner:\n   - Fixed a soft-lock case for Izo at Hawker's Circle.\n   - The \"Designers cut\" setting can be set in advance and persist for a new game.\n   - Improved, reliable application of custom random seeds.\n\n Chewy:\n   - Fixed cyber crown state before Surimy attack.\n   - Fixed changing hotspot subtexts.\n   - Fixed keyboard handling in the inventory screen.\n   - Fixed unlocked cutscenes in cinema screen.\n   - Fixed music in harbor during the second visit.\n   - Fixed movement of Chewy's boat during the boat race.\n   - Fixed room placement of Nichelle after Kong attack.\n\n Cine:\n   - Added keymapper support.\n\n Composer:\n   - Added keymapper support.\n\n Cruise:\n   - Added support for Russian fan-translation.\n   - Added keymapper support.\n\n Draci:\n   - Added keymapper support.\n\n Dreamweb:\n   - Fixed crash when changing scenes, while holding some non-essential game\n     items.\n\n EFH:\n   - Fixed various crashes when exiting in the middle of an interaction.\n\n Freescape:\n   - Added support for Atari/Amiga releases of Dark Side.\n   - Added \"authentic graphics\" mode.\n   - Fixed several glitches in the different render modes.\n   - Improved keymapper support coverage.\n   - Correctly implement aspect ratio correction following dosbox implementation.\n\n GLK/ADVSYS:\n   - Fixed parsing for input commands.\n\n Gob:\n   - Fixed Blount becoming inactive in the Gob3 brain level.\n   - Fixed flickering cursor during some videos in Gob3 and Lost in Time.\n\n Groovie:\n   - Added keymapper support.\n\n Hopkins:\n   - Added keymapper support.\n\n Hugo:\n   - Added keymapper support.\n\n Hypno:\n   - Fixed lagging cursor on some platforms.\n\n Illusions:\n   - Added keymapper support.\n\n Kyra:\n   - (EOB) Added a \"Faithful AD&D rules\" checkbox, to enable improvements and\n     fixes to original Eye of the Beholder I and II game code.\n   - (EOB) Fixed an issue where multi-class characters might gain incorrect HP\n     due to round-off errors.\n   - (EOB) Corrected projectile weapon damage (as per AD&D 2nd Edition rules).\n   - (EOB) Elves get +1 to hit with swords and bows (according to the official\n     game manual).\n   - Fixed NPCs Ileria (female) and Beohram (paladin) in Eye of the Beholder I.\n   - (EOB) Fixed a few small bugs.\n\n Lure:\n   - Added keymapper support.\n\n M4:\n   - Fixed restoring conversation state.\n\n MADE:\n   - Added keymapper support.\n\n MADS:\n   - Added keymapper support.\n\n MM:\n   - Added MT32/LAPC-1 support for Xeen engine.\n   - Fixed Xeen regression which caused some sound effects to stop abruptly.\n   - Fixed spell SP/gem requirements in MM1 enhanced mode, and actually remove\n     spell points & gems when spells are cast.\n\n\n NANCY:\n   - Fixed a startup crash and some broken puzzles in The Vampire Diaries.\n   - Fixed a crash when trying to play the Russian versions of early Nancy Drew games.\n\n NGI:\n   - Added support for Lithuanian version of fullpipe.\n\n PINK:\n   - Fixed crash after the girl turns into a mermaid.\n\n SAGA:\n   - Added keymapper support.\n   - Prevent reaching an unwinnable state when not performing key actions in\n     Nimdok's chapter in IHNM.\n\n SCI:\n   - Added CGA (4 colors and black/white) and Hercules render modes for most\n     SCI 0 DOS games. Also added an EGA dithering mode and a VGA gray scale\n     mode for many SCI 1 DOS games, a 16 colors mode for KQ6 Windows and\n     8 colors modes for all PC-98 games.\n   - Added Gabriel Knight 1 CD speech repair by AllTinker.\n     Fixes the majority of pops and clicks in the DPCM8 speech audio.\n   - Improved PCjr audio.\n   - Improved KQ6 CD settings. The DOS platform now defaults to DOS behavior.\n   - Better support for Mac KQ6.\n   - Implemented KQ5 FM Towns save/restore UI.\n   - Numerous script fixes to different games.\n   - Fixed SCI1.1 picture scaling inaccuracies.\n   - Fixed fallback detection for unknown fan games.\n   - Added support for Spanish SQ3.\n   - Added support for Russian Camelot, Laura Bow, PQ2.\n   - Added support for Russian fan-translation of QFG3.\n\n SCUMM:\n   - Added map generator from Moonbase Console for Moonbase Commander.\n   - Improved graphics support for Macintosh MI1, MI2 and Fate of Atlantis.\n   - Improved audio support for Macintosh Loom, Last Crusade, and MI1.\n\n Sherlock:\n   - Added support for Russian translation of Rose Tattoo.\n\n Stark:\n   - Added keymapper support.\n\n Sword1:\n   - Added a \"Windows audio engine\" mode available within the ScummVM game\n     options, in which we simulate the DirectSound audio drivers powering the\n     Windows 95 executable.\n     This makes the game use softer (logarithmic) audio curves, but removes\n     fade-in and fade-out for sound effects, fade-in for music, and automatic\n     music volume attenuation for when speech is playing. By default the setting\n     is off, since the game was developed with DOS and AIL sound drivers in mind,\n     and it is also not available for Macintosh and PSX versions.\n   - Added keymapper support.\n   - Improved support on big-endian systems.\n   - Added more game variants.\n   - Restored the ability to choose language of subtitles on PC versions.\n\n Sword25:\n   - Fixed looping scene background sounds.\n   - Fixed actor lighting when walking.\n\n Teenagent:\n   - Added support for Polish floppy version.\n\n Tinsel:\n   - Added keymapper support.\n\n Titanic:\n   - Fixed crash if the word 'that' was used in a conversation.\n\n Tony:\n   - Fix crash with rapid cursor switching.\n\n TsAGE:\n   - Added keymapper support.\n   - Added support for Russian CD fan-translation for Ringworld.\n   - Added support for Russian CD fan-translation for Blue Force.\n\n Toon:\n   - Added keymapper support.\n\n Touche:\n   - Added keymapper support.\n\n Trecision:\n   - Added keymapper support.\n\n Tucker:\n   - Added keymapper support.\n   - Fixed being unable to enter the Lower Hall in 2nd Chapter.\n\n TwinE:\n   - Several collision related fixes.\n\n Ultima:\n   - Fix pathfinding not detecting some doors in Ultima VI.\n   - Alter Ultima VIII default gamepad bindings.\n   - Improved Ultima VIII keybind player movement.\n   - Alter Ultima VIII target gump to no longer pause game.\n   - Alter Ultima VIII minimap to use game palette.\n   - Fixed Ultima VIII item splitting & merging on game map.\n   - Fixed Ultima VIII animation, audio, and scene transition issues.\n\n Voyeur:\n   - Added Interplay logo animation.\n\n ZVision:\n   - Improved support of RTL languages.\n\n Android port:\n   - Add support for Android 15.\n   - Add game shortcuts support on Android home screen either from a long press\n     on the ScummVM icon or from the launcher widgets selector.\n   - Rework the gamepad input mode with an improved UI. Add more virtual buttons.\n   - Scale UI according to display density.\n   - Various stability fixes.\n\n macOS port:\n   - Autoupdates now use Sparkle 2.x.\n   - Changed default savegame path to use the Application Support folder.\n\n 3DS port:\n   - Integrated the port-specific options dialog with the main GUI.\n   - Increased available memory on the Old 3DS.\n   - Fixed crashes in new 3DS models due to different memory handling.\n\n iOS/iPadOS port:\n   - Add Apple Pencil support.\n   - Add app icons for “Dark” and “Tinted” modes.\n   - Various stability fixes.\n\n\n#### 2.8.1 \"Oh MMy!\" (2024-03-31)\n\n General:\n   - Fixed GLSL version parsing on some OpenGL ES2 platforms.\n   - Don't try to use shaders on old OpenGL implementations.\n\n AGI:\n   - Fixed Space Quest 1 version 1.0X freezing in the skimmer.\n   - Fixed Mixed-Up Mother Goose message boxes during nursery rhymes.\n   - Fixed Mixed-Up Mother Goose graphics in Amiga version.\n   - Fixed Gold Rush clock time at Fast and Fastest speeds.\n   - Fixed Atari ST version of Manhunter 1 not starting.\n   - Fixed Tandy CoCo3 version of Leisure Suit Larry 1 not starting.\n   - Fixed Tandy CoCo3 unofficial ports not starting.\n   - Fixed Amiga menus in Space Quest 1, Manhunter 1, and Manhunter 2.\n   - Fixed Graham facing away from the king in King's Quest 1.\n   - Fixed Alexander getting stuck on the stairs in King's Quest 3.\n   - Fixed Larry being able to shoplift in Leisure Suit Larry 1.\n   - Fixed ducks not jumping at the start of Donald Duck's Playground.\n   - Fixed instant death in fan game \"Phil's Quest: The Search for Tolbaga\".\n   - Fixed buttons freezing in fan game \"DG: The AGIMouse Adventure\".\n   - Fixed unrecognized words in fan game \"V - The Graphical Adventure\".\n   - Added detection for Macintosh version of Mixed-Up Mother Goose.\n\n AGS:\n   - Updated detection tables.\n   - Simplified character import from Sierra games for QfG2 AGDI.\n   - Fixed graphical glitch affecting Unavowed and Heroine's Quest.\n   - Fixed partial outlines for some letters in Kathy Rain.\n   - Fixed crash in Alum.\n   - Added stub to prevent crash at the beginning of Falcon City.\n\n Broken Sword 2:\n   - Fixed crash when quitting the game while it was paused.\n\n MM:\n   - Enabled engine, allowing MM1 and Xeen to be compiled.\n   - Added MT32/LAPC-1 support for Xeen engine.\n   - Fixed Xeen regression which caused some sound effects to stop abruptly.\n\n mTropolis:\n   - Fixed crash in Muppet Treasure Island on some platforms.\n   - Fixed jewel puzzle in Muppet Treasure Island not being randomized.\n\n NANCY:\n   - Fixed the telephone hints in Secrets Can Kill.\n   - Fixed the crashing and drawing issues on ARM machines when playing\n     Message in a Haunted Mansion's maze minigame.\n   - Fixed the 'M' keyboard key not working in Message in a Haunted Mansion.\n   - Allowed general keymaps to be shown in the engine Keymaps menu.\n   - Virtual keyboard now correctly triggers on/off wherever text input is needed.\n\n SCUMM:\n   - Fixed screen corruption (and sometimes even crashes) in Mac Loom and\n     Indiana Jones and the Last Crusade, most noticeably when using menu\n     shortcut keys.\n   - Fixed enabling/disabling of Open and Save in Mac Indiana Jones and the Last\n     Crusade.\n   - Implemented old-style Macintosh GUI for: Monkey Island 1, Monkey Island 2\n     and Indiana Jones and the Fate of Atlantis.\n   - Implemented EPX graphics smoothing on Macintosh versions of the games.\n   - Restored correct autosaving behavior when using the original GUI option.\n   - Implemented more accurate sound drivers for the following Macintosh games:\n     Indiana Jones and the Last Crusade, Loom and Monkey Island 1.\n   - Made several accuracy fixes on the MIDI iMUSE system.\n   - The graphics system for Humongous Entertainment games has been completely\n     rewritten, leading to a more accurate visual experience on those titles.\n   - Made many more accuracy improvements throughout the engine.\n\n TWINE:\n   - Fix ladder climbing regression.\n   - Fix scenery zoom issue.\n   - Fix animation glitches after using the holomap.\n\n Ultima:\n   - Fix Ultima VIII hidden minimap blocking keyring use.\n   - Fix Ultima VIII page breaks in books.\n   - Fix Ultima VIII text centering for plaques.\n   - Fix Ultima VIII crash on dragging items to screen edge.\n   - Fix Ultima VIII unexpected jumping on left click.\n   - Fix Ultima VIII camera during cutscenes for Shrine of the Ancient Ones.\n   - Fix Ultima VIII invalid placement of items within containers.\n   - Fix Ultima VIII never-ending lava sounds.\n\n V-Cruise:\n   - Fixed crash in Reah: Face the Unknown and Schizm: Mysterious Journey\n     when music is muted.\n\n Android port:\n   - Fixed crash in built-in help with German language.\n\n Atari port:\n   - Fixed crash when exiting ScummVM.\n   - Fixed BBVS (and possibly others) gameplay by using more precise math model.\n\n macOS port:\n   - Fixed a problem where some Mac games would not load resources correctly.\n   - Updated application icon to conform with modern standards.\n\n\n#### 2.8.0 \"Mysteries, Mammoths, and Muppets\" (2023-12-30)\n\n New games:\n   - Added support for macOS versions of Syberia and Syberia II.\n   - Added support for The Vampire Diaries, Nancy Drew: Secrets Can Kill,\n     Nancy Drew: Stay Tuned for Danger, Nancy Drew: Message in a Haunted Mansion,\n\t Nancy Drew: Treasure in the Royal Tower and Nancy Drew: The Final Scene.\n   - Added support for Reah: Face the Unknown and Schizm: Mysterious Journey.\n   - Added support for Might and Magic Book One.\n   - Added support for Muppet Treasure Island.\n   - Added support for Primordia, Shardlight and Technobabylon.\n   - Added support for The Excavation of Hob's Barrow, Strangeland and Whispers\n   of a Machine.\n   - Added support for Stranga and Cloak and Dagger's AGS games.\n   - Added support for Adibou 1.\n   - Added support for Dark Side.\n   - Added support for Kingdom: The Far Reaches.\n   - Added support for Escape From Hell.\n   - Added support for Wrath of the Gods, Gadget: Invention, Travel and Adventure,\n     The Dark Eye, and 4 other Director titles.\n\n New platforms:\n   - Added libretro new shiny port.\n   - Added Atari port.\n\n General:\n   - Added optional dependency for libvpx.\n   - Added optional dependency for libmikmod.\n   - Added support for PC98 font ROM.\n   - Added optional dependency for libsonivox, implementing EAS (Embedded Audio\n     Synthesis) sound driver.\n   - Added YUV422 and YUV444 support to Theora decoder.\n   - Implemented specialized CPU routines for graphics blitting for ManagedSurface.\n   - General MIDI support is now enabled by default.\n\n AGS:\n   - Synced with upstream AGS 3.6.0.53.\n   - Sped up graphics manipulation on modern hardware with CPU-specific code.\n   - Added support for early font rendering, to match the original interpreter.\n   - Added support for playback of transcoded videos in place of unsupported codecs.\n   - Completed implementation of MOD audio playback.\n   - Fixed background music not looping in some games.\n   - Fixed game-breaking bugs in various games (e.g. Strangeland, Chronicle of Innsmouth)\n   - Multiple updates to the game detection tables.\n\n Asylum:\n   - Added support for Chinese Sanitarium.\n\n Dragons:\n   - Implemented localizations for the copyright screen and main menu.\n\n Freescape:\n   - Improved collision and projectile detection using sweepAABB\n\n GrimE:\n   - Added support for Chinese Grim Fandango.\n   - Added support for Russian Grim Fandango translations from Fargus,\n     ENPY and 7Wolf.\n\n Kyra:\n   - Added support for Kyra1 Amiga French release and DOS Czech fan translation.\n   - Improved game controls menu accuracy for all platforms.\n   - Added support for Chinese EOB2.\n   - Added support for the PC-98 version of EOB2.\n\n Mohawk:\n   - Greatly improved the accuracy of the code generation for the Domes in\n     Riven: The Sequel to Myst to match the original game.\n\n Private:\n   - Added support for the Japanese Windows release.\n\n SCUMM:\n   - Added support for unpacked RuSCUMM patches for Russian localizations.\n   - Allow usage of the official Monkey Island 1 Roland MT-32 patch with any\n     EGA version, not just the English release.\n   - Completely rewritten sound code for all Humongous Entertainment games.\n   - Faithfully implemented Mac GUI for Indiana Jones and the Last Crusade,\n     and Loom.\n   - Implemented turning around animation when changing direction for Full\n     Throttle, The Dig and The Curse of Monkey Island.\n   - Added enhancement to Loom: Ctrl+D shows up list of drafts that has been\n     discovered.\n   - Fixed kanji characters rendering issue in Japanese SegaCD version of Monkey\n     Island 1. Text rendering for this game is now pixel perfect.\n   - Implemented complete support for the Macintosh and DOS/V Japanese versions\n     of Indiana Jones and the Fate of Atlantis distributed by MicroMouse.\n   - Implemented network multiplayer support for Backyard Football,\n     Backyard Baseball 2001, and Backyard Football 2002.\n\n Sherlock:\n   - Added support for Chinese Serrated Scalpel.\n   - Added data to savegames whose lack could make savegames unwinnable.\n\n Sword1:\n   - Rewrote the palette fading system and the game timers to match the\n     original DOS version.\n   - Rewrote all the menu code to make it match the original. This includes\n     the restoration of the Speed setting.\n   - Restored the correct fonts and menu texts for all Russian versions of the game.\n   - Rewrote the audio engine to match the original. Compressed files are\n     still supported.\n   - Tweaked the subtitles routine for the PSX version to match the original.\n   - Restored George's idle animation.\n   - Restored pause functionality: press \"P\"!\n   - Restored debug commands: CTRL-G for toggling on-screen walkable grids,\n     CTRL-T for displaying debug information, SHIFT-M for displaying crosshairs\n     for the mouse cursor and George's position, and keys 1 and 4 to toggle\n     respectively slow and fast frame pacing mode.\n   - Restored the correct font for the game over screen.\n   - Fixed other various small inaccuracies.\n   - Overall the PC version of the game on ScummVM shouldn't differ\n     from the original executable anymore.\n   - Implemented credits for the PSX version.\n\n Sword2:\n   - Added support for Chinese translation.\n\n Tinsel:\n   - Fix running out of soundreels error.\n\n TwinE:\n   - Added support for Japanese translation.\n\n Ultima:\n   - Improve Ultima VI responsiveness.\n   - Fix crash loading Ultima VI savegames when dialogs are open.\n   - Fix ordering of generated items in Ultima VI.\n   - Fix auto-readying throwing weapons in Ultima VI.\n   - Fix Ultima VI crash opening new-style spellbook gump.\n   - Fix Ultima VI actor doll and gump colors.\n   - Fix Ultima VI crash using look action on walls.\n   - Fix several other miscellaneous crashes.\n   - Fix spawners and projectiles to more closely match the original.\n   - Improved Ultima VI AdLib support and added Roland MT-32 support.\n   - Fix multiple Ultima VIII render order issues.\n   - Add support for Ultima VIII Spanish fan translation.\n   - Support Pentagram save game files.\n   - Added configurable double-click time for Ultima VIII.\n   - Original behaviour fix for placement of thrown weapons\n   - Original behaviour fix for pushing actors and objects\n   - Original behaviour fix for dropping objects\n   - Original behaviour fix for actor passability\n   - Fix cases of co-ordinates not wrapping around when a map boundary is crossed\n   - Hide menu when creating save thumbnails\n   - Fix some alloctor/deleter mismatches\n\n Voyeur:\n   - Added support for German fan translation.\n\n Xeen:\n   - Renamed 'xeen' engine to 'mm' for Might & Magic.\n   - Added custom engine option to replace the health gems with HP/SP bars.\n\n RISC OS port:\n   - Double buffering is now used in full screen mode when V-sync is enabled.\n   - Added support for hardware palettes.\n\n\n#### 2.7.1 \"Stan's previously broken swords\" (2023-07-31)\n\n General:\n  - Fixed playback speed for Theora videos.\n  - Added scummvm.log file viewer.\n  - Exposed ScummVM debug level in the GUI (Misc tab).\n  - Fixed shader scaler loading failing in certain conditions.\n  - Fixed some screen shaking effects (as in DOTT) causing a crash on SDL1 ports.\n\n AGI:\n   - Restored possibility to pick arbitrary render mode in Game Options.\n\n AGS:\n   - Multiple additions to game detection tables.\n   - Fixed crashes in various games (commercial and freeware).\n   - Fixed graphical priority errors when using computers in Resonance, Kathy Rain and Blackwell Convergence.\n   - Fix for some sounds not playing in \"The Cat Lady\" and other games.\n   - Reintroduced thumbnail creation for all savegames.\n   - Fixed regression for translation setting not being saved.\n   - Fixed translation bug in Zniw Adventure (linux version).\n   - Fixed wrong walkspeed in old games (e.g. Apprentice).\n   - Added small workaround for purple texts appearing transparent.\n   - Minor changes to debug/error messages and code style.\n   - Improved display of text.\n\n CRYOMNI3D:\n   - Fixed files access preventing to finish Versailles.\n\n Freescape:\n   - Added OpenGL shaders renderer.\n   - Games are loading original images from the data files.\n   - Refactored and expanded detection tables for Driller and other unsupported games.\n   - Reimplemented object/player collisions to be more robust.\n\n HDB:\n   - Fixed bug with inability to pick up red envelope with keyboard.\n\n Hypno:\n   - Support rendering Korean font for Wetlands.\n\n Private:\n   - Dropped 16bit engine requirement.\n\n SAGA:\n   - Fixed loading resources from the Amiga release of ITE.\n   - Fixed crash or misbehaviors when handling certain actor actions.\n\n SAGA2:\n   - Fixed crash when hovering over certain spells.\n\n SCUMM:\n   - Fixed music volume regression in Loom.\n   - Fixed a crash in Full Throttle when pressing 'A' in debug mode.\n   - Silence the warning for missing music files in Monkey Island 1 Ultimate Talkie.\n   - Fixed glitched or invisible cursor in Sam & Max when saving and reloading from\n     the classic menu.\n   - Fixed several savegame loading issues and crashes for early FM-Towns games.\n   - Fixed original GUI banners not disappearing properly in some edge cases.\n\n Sword1:\n   - Added detection for Czech and Polish versions with DXA cutscenes.\n   - Added detection for alternative French and Italian versions.\n   - Added detection for Brazilian version published by TecToy.\n\n Sword2:\n   - Added support for GOG.com version.\n   - Added detection for alternate Polish version.\n\n Tinsel:\n   - Fixed reading older Discworld II savegames.\n   - Fixed unaligned accesses.\n\n Tony:\n   - Fixed unaligned accesses.\n\n Touche:\n   - Added support for Russian translation by old-games.ru.\n\n iOS port:\n   - Fix default theme selection on modern devices.\n   - Better support for autostart configurations.\n\n macOS port:\n   - Better support for autostart configurations.\n\n RISC OS port:\n   - Fixed crash on RISC OS 5 with games that require lots of RAM.\n\n\n#### 2.7.0 \"The Real Slim Shader\" (2023-02-26)\n\n New games:\n   - Added support for Soldier Boyz.\n   - Added support for C64 and ZX Spectrum versions of GLK Scott Adams\n     Interactive Fiction games.\n   - Added support for GLK Scott Adams adventures 1-12 in the TI99/4A format.\n   - Added support for Obsidian.\n   - Added support for Pink Panther: Passport to Peril.\n   - Added support for Pink Panther: Hokus Pokus Pink.\n   - Added support for Adibou 2 \"Environment\", \"Read/Count 4 & 5\" and \"Read/Count 6 & 7\".\n   - Added support for Driller/Space Station Oblivion (DOS/EGA/CGA, Amiga, AtariST, ZX Spectrum and Amstrad CPC versions).\n   - Added support for Halls of the Dead: Faery Tale Adventure II.\n   - Added support for Chop Suey, Eastern Mind, and 16 other Director 3 and Director 4 titles.\n\n New platforms:\n   - Added support for the RetroMini RS90 under OpenDingux beta.\n   - Added support for the 1st generation Miyoo (New BittBoy, Pocket Go and PowKiddy Q90-V90-Q20) under TriForceX MiyooCFW.\n   - Added support for the Miyoo Mini.\n   - Added support for KolibriOS.\n\n General:\n   - Reduced amount of false positives in Mass Add.\n   - Updated the Roland MT-32 emulation code to Munt mt32emu 2.7.0.\n   - Added support for shader-based scalers.\n   - Added option for mono sound output (via --output-channels=CHANNELS command\n     line option).\n   - Improved cursor scaling in OpenGL mode.\n   - Fix crash when browsing folders containing files with \\1 in the names.\n   - Added possibility to specify RNG seed via GUI or command line option.\n   - Added possibility to run ScummVM in autodetection mode by renaming the\n     executable starting with 'scummvm-auto' or by providing an empty file\n     named 'scummvm-autorun' next to the ScummVM executable.\n   - Added possibility to supply command line parameters which will be picked\n     up automatically. Put them one per line in a file named 'scummvm-autorun'.\n   - Added possibility to customize the default settings by specifying an initial\n     configuration file to load if no configuration file exists in the usual\n     location (via --initial-cfg=FILE or -i command line option).\n   - Added support for loading game resources which are bigger than 2GB on more\n     platforms.\n\n AGI:\n   - Improved support for French translations.\n\n AGOS:\n   - Added option to disable the fade-out effects on room transition for\n     Simon1 and 2.\n\n AGS:\n   - Added support for the original installer files for Maniac Mansion Deluxe and\n     The New Adventures of Zak McKracken.\n\n Director:\n   - Support for Pippin version of L-Zone.\n   - Fix a bug caused by use of slash in filename.\n\n Dreamweb:\n   - Support playing from the original installer floppies.\n\n Hadesch:\n   - Added support for a 1997 release.\n\n Kyra:\n   - Added support for the Korean version of Legend of Kyrandia 1.\n   - Support multi-floppy mac kyra1 both as installer floppies and as installed directory.\n   - Added support for the Hebrew version of Legend of Kyrandia 3.\n\n MADS:\n   - Added support for original floppy installer file layout for Rex Nebular.\n\n Neverhood:\n   - Added support for Japanese version of Neverhood.\n   - Support localizations by -=CHE@TER=- & Rigel.\n\n Plumbers:\n   - Fixed crash with windows version.\n\n Private:\n   - Allow playing mac version directly from installer CD.\n   - Added support for Japanese/Mac version\n\n Queen:\n   - Added option for using a better font in Hebrew version.\n\n SAGA:\n   - Added support for Chinese Inherit the Earth.\n   - Added support for Chinese I Have no Mouth and I Must Scream.\n   - Added support for Korean I Have no Mouth and I Must Scream.\n   - Added support for playing directly from floppy installer for ITE.\n   - Support for Amiga (AGA/ECS, Retail/Demo, English/German) Inherit the Earth.\n\n SCI:\n   - Improved text rendering for Macintosh titles.\n   - Added support for Casio MT-540, CT-460 and CSM-1 MIDI devices for the SCI0\n     games that originally supported it.\n\n SCUMM:\n   - Added support for CGA, CGA Composite, CGA black & white and Hercules modes\n     for SCUMM 1 versions of Zak McKracken and Maniac Mansion.\n   - Improved accuracy of CGA and Hercules modes for SCUMM 2 (enhanced) versions of\n     Zak McKracken and Maniac Mansion.\n   - Improved accuracy of CGA and Hercules modes for Monkey Island 1 (EGA version\n     only - the VGA version does not have CGA and Hercules modes).\n   - Fixed some minor glitches for the CGA mode of Loom.\n   - Added EGA dithering mode for VGA versions of Loom, Monkey Island 1 and 2 and\n     Indiana Jones 4.\n   - Fixed a possible dead-end in the Ultimate Talkie Edition of Monkey Island 2,\n     if one doesn't pick up a required item before Captain Dread brings Guybrush\n     back to Scabb Island, at the end of Part II.\n   - Fixed various original game bugs, oversights and continuity errors (only\n     when using the \"Enable game-specific enhancements\" setting).\n   - Improved the decoding of some Western European game strings when they're\n     displayed through ScummVM's interface, such as when pausing a game.\n   - Fixed the navigator head not pointing to some directions in Monkey\n     Island 1, in the original releases without the enhanced verb interface.\n   - Fixed slightly inaccurate text position in v4 games and in Loom v3.\n   - For Sam & Max, it is now possible to shoot down the text lines of the\n     final credits with the crosshair mouse cursor, just like in the original.\n   - Fixed lipsync issues in the final scene of Freddi Fish 4.\n   - Fixed The Dig and COMI loading cursors not being shown when they should.\n   - Improved the accuracy of some audio drivers, which was notably impacting\n     the pitch bending effect in the DOTT intro music.\n   - In COMI, only let Guybrush read the clock of Puerto Pollo in the English,\n     Italian and (fan-made) Russian versions of the game, matching the behavior\n     of the original interpreters (probably because of the poor results in the\n     other languages).\n   - Improved support for Hebrew HE game localizations.\n   - Fixed Roland MT-32 support in Sam & Max.\n   - Implemented original GUI and save menus for LucasArts games (DOS, Windows,\n     Amiga, Macintosh, FM-Towns, SegaCD, Atari ST, NES and Commodore 64 versions).\n     Also activate the general \"Ask for confirmation on exit\" option for a more\n     authentic '90s experience!\n   - Fixed minor timing issues for the SMUSH video engine, mostly affecting\n     Full Throttle.\n   - Added a low latency audio mode to Full Throttle, The Dig and The Curse of\n     Monkey Island; this can improve audio performance especially in non-desktop\n     devices, but it is also a little less accurate than the original.\n   - Implemented reloading CD audio for Monkey Island 1 and Loom (CD versions),\n     when reloading a save state.\n\n Sherlock:\n   - Added support for Chinese Rose Tattoo.\n\n Sky:\n   - Added support for Chinese Beneath a Steel Sky.\n\n Sword1:\n   - Support Novy Disk Russian translation.\n   - Fixed launching various demos.\n   - Switched detection to md5-based. Submit your unrecognized versions!\n\n Sword2:\n   - Switched detection to md5-based. Submit your unrecognized versions!\n\n Tinsel:\n   - Fixed Discworld II subtitle colors on big-endian ports.\n\n Toon:\n   - Made game menus behave like in the original.\n\n TwinE:\n   - Fixed rendering issue with doors.\n   - Fixed invalid music pause in behaviour and inventory menu.\n   - Fixed giving kashes instead of hearts as fallback.\n   - Fixed item flashing when they drop.\n   - Fixed meca penguin angle at spawn.\n   - Fixed background redraw when watching cutscenes at the television.\n   - Fixed recenter the screen on activating an inventory item.\n   - Fixed pressing W to talk to people also makes you jump.\n\n Ultima8:\n   - Added support for saving and resizing of minimap.\n   - Adjust cursor to behave closer to the original.\n   - Adjust item quantity slider to behave closer to the original.\n\n Xeen:\n   - Several crash fixes for Clouds of Xeen.\n   - Wait until farewell finishes before leaving shops.\n   - Don't reload map after leaving character creation.\n   - Implement correct clouds falling logic for Swords of Xeen.\n   - Fix GateMaster monster in Underworld map.\n\n 3DS port:\n   - Update relocation parser to support PREL31 that are emitted by new compiler.\n   - Do more autoconfiguration in ./configure.\n\n Android port:\n   - Added Storage Access Framework support.\n   - Improved support for game controllers.\n\n iOS port:\n   - Added pointer device support.\n   - Improved support for touchpad mode.\n   - Added support for games that use 32 bit pixel formats.\n\n Nintendo DS port:\n   - Added a splash screen to the top screen when the launcher is active.\n\n OpenDingux port:\n   - Added support for dynamic plugins.\n\n PS Vita port:\n   - Added support for dynamic plugins.\n\n PSP port:\n   - Improved support for games that use 32 bit pixel formats.\n\n RISC OS port:\n   - Added support for 26-bit versions of RISC OS.\n\n#### 2.6.1 \"Incremental Escapism\" (2022-10-31)\n\n General:\n   - Various improvements to the icon-based grid view in the ScummVM launcher.\n   - Fixed possible graphics corruptions when using the OpenGL renderer.\n\n AGS:\n   - Fixed a crash in AGDI's KQ1 remake (and some other games), on big-endian systems.\n\n AGOS:\n   - Fixed various bugs that lead to crashes in the demo versions of The Feeble Files\n     and Personal Nightmare and in the full version of Waxworks.\n   - Fixed pirate dialogue freeze in Simon the Sorcerer 2.\n\n Asylum:\n   - Fixed the Keyboard Config screen.\n   - Added support for the keymapper feature to the dialog screen.\n   - The in-game menu is now accessible via a keyboard shortcut.\n   - Fixed a bug that caused the controls to be reset when leaving the Hive puzzle.\n   - Fixed animation of floating bodies in Chapter 4.\n\n Ultima:\n   - Fixed rendering issue when moving the minimap off the screen.\n   - Fixed possible crash when using the autosave function.\n\n SCI:\n   - Fixed various bugs and script issues in KQ4, KQ5, LB2, LONGBOW, PQ1, PQ3, QFG2, QFG3, QFG4 and SQ5.\n   - Numerous improvements to various parts of the engine code.\n\n SCUMM:\n   - Fixed potential lockups in games using iMuse.\n   - Prevented crashes caused by missing .SOU/.BUN files.\n   - Fixed crashes in v7-v8 games on strict-alignment platforms.\n   - Fixed speech lipsync for COMI on big-endian ports (such as PS3 or Wii).\n\n Tinsel:\n   - Fixed an issue in Discworld that prevented some items from being placed in the inventory.\n\n Toltecs:\n   - Fixed crashes on some strict-alignment platforms.\n\n Toon:\n   - Fixed music and SFX being muted by default when adding the Toonstruck game.\n\n Android port:\n   - Properly convert mouse coordinates between screen coordinates and virtual ones.\n\n Windows port:\n   - Clearing the icons cache created a duplicate ScummVM folder in the APPDATA directory. Fixed.\n\n#### 2.6.0 \"Insane Escapism\" (2022-08-01)\n\n New games:\n   - Added support for Sanitarium.\n   - Added support for Hades Challenge.\n   - Added support for Marvel Comics Spider-Man: The Sinister Six.\n   - Added support for The 11th Hour.\n   - Added support for Clandestiny.\n   - Added support for Tender Loving Care (CD-ROM Editions).\n   - Added support for Uncle Henry's Playhouse.\n   - Added support for Wetlands.\n   - Added support for Chewy: Esc from F5.\n\n General:\n   - The project license has been upgraded to GPLv3+.\n   - Now ScummVM requires C++11 for building.\n   - Removed support for VS2008, as it doesn't support C++11.\n   - Implemented enhanced filtering in the Search box. See \"Understanding\n     the search box\" in the documentation for details.\n   - Implemented Icon view in GUI (GSoC task).\n   - Added support for the RetroWave OPL3 sound card.\n   - Added OpenDingux beta port.\n   - Removed Symbian port.\n   - Added the create_engine tool to aid when creating new engines.\n   - Fixed mouse capture in HiDPI mode.\n   - The GUI Options dialog now marks settings overridden via command lines in red.\n   - In GUI launcher it is now possible to group games by different categories.\n   - GUI launcher has new game icons grid look.\n\n AGI:\n   - Added support for Macintosh versions of Manhunter 1-2.\n\n AGS:\n   - Synced changes from upstream AGS.\n\n AGOS:\n   - Elvira 1: Added support for Casio MT-540/CT-460/CSM-1 and CMS/GameBlaster.\n   - Elvira 1 & 2, Waxworks, Simon the Sorcerer: Added AdLib OPL3 mode.\n     Depending on the game, this will prevent cut-off notes, add extra notes or\n     instruments and/or add stereo.\n   - Elvira 2, Waxworks: Added support for AdLib and MT-32 sound effects.\n   - Elvira 2, Waxworks, Simon the Sorcerer floppy: Added Mixed MIDI support\n     (MT-32 music with AdLib sound effects).\n   - Simon the Sorcerer floppy: Improved AdLib sound effects accuracy.\n   - Simon the Sorcerer: DOS version music tempos are now accurate. Both DOS\n     and Windows versions now offer the choice of the DOS music tempos or the\n     faster Windows tempos.\n   - Simon the Sorcerer 2: Improved AdLib and GM support.\n   - Simon the Sorcerer 2: Added workaround for the missing MT-32 tracks in the\n     intro.\n\n BBVS:\n   - Fixed the size of the main menu buttons being incorrect in some cases.\n   - Fixed crash at the end of the Hock-A-Loogie mini game.\n\n Buried:\n   - Added support for skipping synchronous audio and video.\n   - The mouse pointer is now hidden during cutscenes.\n   - Implemented game pausing via Control-P.\n   - After saving, the player returns back to the game instead of the Biochip\n     menu.\n   - The game is now always paused when the Biochip menu or the save/restore\n     dialogs are open.\n   - Added metadata to saved games, including thumbnails, creation date and\n     play time.\n   - Saved games are now sorted by slot, like in other engines, instead of\n     being sorted alphabetically.\n   - The currently selected item is now stored in saved games.\n   - Comments from Arthur that play in the background can now be stopped with\n     the space key (the same key that replays Arthur's last comment).\n   - The agent evaluation (current points) can now be shown with Control-D.\n   - Fixed global flag corruption in death screens.\n\n Dreamweb:\n   - Added text to speech for dialogs and object descriptions.\n\n Glk:\n   - Added support for ZX Spectrum games with graphics in the Scott sub-engine.\n\n Kyra:\n   - Added support for the Traditional Chinese versions of Legend of Kyrandia 1 - 3.\n   - Added sound support for the Macintosh version of Legend of Kyrandia.\n   - Added support for playing the Macintosh non-talkie version of Legend\n     of Kyrandia 1 directly from the files on the CD. This means you no longer\n     have to run the installer to extract the data files.\n\n NGI:\n   - Fixed the rolling bridge state in scene 13.\n   - Fixed getting stuck when teleporting to the foot in scene 30.\n   - Fixed inconsistent cactus state.\n\n Private:\n   - Refactored code to allow rendering using the original 256 color palette.\n   - Fixed endianness issues.\n   - Added support for the Korean release.\n\n Supernova:\n   - Added text to speech for dialogs and object descriptions.\n\n SCI:\n   - Added support for Text To Speech in SCI floppy games.\n   - Allow saving from the ScummVM Global Game Menu in the following games:\n     BRAIN1, BRAIN2, ECOQUEST1, ECOQUEST2, FAIRYTALES, PHARKAS, GK1, GK2, ICEMAN,\n     KQ1, KQ4, KQ5, KQ6, KQ7, LB1, LB2, LIGHTHOUSE, LONGBOW, LSL1, LSL2, LSL3,\n     LSL5, LSL6, LSL6HIRES, LSL7, PEPPER, PHANT2, PQ1, PQ2, PQ3, PQ4, PQSWAT,\n     QFG1, QFG1VGA, QFG2, QFG3, QFG4, SHIVERS, SQ1, SQ3, SQ4, SQ5, SQ6, TORIN.\n   - Fixed many script bugs in KQ6, KQ7, GK2, QFG3, QFG4, Hoyle4.\n   - Fixed loading autosaves in Shivers and Phantasmagoria 2.\n   - Added support for Korean fan translations from the scummkor project:\n     EcoQuest 2 and Gabriel Knight 2.\n\n SCUMM:\n   - New Digital iMUSE engine. Support for re-compressed audio files dropped in\n     Full Throttle, The Dig and The Curse of Monkey Island.\n   - Rewrote music player for Amiga versions of Indy3 and Loom in accordance\n     to the original code.\n   - Fix missing cursor in the 16-color Macintosh versions of Loom and Indiana\n     Jones and the Last Crusade after loading a savegame.\n   - It is now possible to replace the music in the floppy versions of Loom\n     with audio tracks. The ScummVM Wiki has a list of which parts of the Swan\n     Lake ballet the game uses: <https://wiki.scummvm.org/index.php/Loom>.\n   - Fixed some MIDI music looping when it shouldn't in EGA/VGA floppy versions\n     of The Secret of Monkey Island.\n   - Fixed the lava flowing in the wrong direction in the VGA floppy version\n     of The Secret of Monkey Island.\n   - Fixed Full Throttle distorted graphics when Ben runs past the Corley\n     Motors entrance.\n   - Fixed the dissolve effect, and Bobbin's palette when leaving the darkened\n     tent in the TurboGrafx-16 version of Loom, to match the original behavior.\n   - Fixed incorrect dark rooms colors in MM NES on strict-alignment ports such\n     as Dreamcast, Apple silicon and various handheld devices.\n   - Rewrote text rendering routines for Full Throttle, The Dig and The Curse\n     of Monkey Island in accordance to the original interpreters.\n   - Rewrote timer handling routines to better approximate both the original\n     hardware behavior and the intepreters' quirks.\n   - Fix lip syncing in Backyard Baseball 2003.\n   - Fixed various original game bugs and oversights in most of the LucasArts\n     titles: <https://wiki.scummvm.org/index.php?title=SCUMM/Game_Enhancements>.\n     Most of these enhancements can now be disabled in the game's settings if\n     one prefers playing with the original behavior.\n   - Added sliders for tweaking the CD audio playback in the MI1 CD intro, as\n     well as VGA CD Loom in general. Loom is particularly sensitive to the\n     amount of silence at the start of the track, and the CD version of MI1\n     never synced the music as well to the intro as previous versions. See the\n     Wiki for more details.\n   - Detect and reject the EGA floppy version of Monkey Island 1 that Limited\n     Run Games sold in their Monkey Island 30th Anniversary Anthology, if using\n     the default DISK4 image, which is corrupted. It's possible to recover a\n     working image from the KryoFlux dumps they also provided.\n   - Fixed random number generation which fixes throwing in Backyard Baseball.\n   - Marked a workaround in Monkey Island 2 (FM-Towns version) as an\n     enhancement; this workaround originally restored a portion of the\n     map chasing puzzle in Booty Island which had been cut in the\n     FM-Towns version of the game.\n   - Made the sentence line in Maniac Mansion work like the manual says, i.e.\n     you can click on it to execute the command.\n\n Sherlock:\n   - Fixed slowdown in Serrated Scalpel intro when playing the game from a small\n     installation.\n   - Fixed UI glitches in Serrated Scalpel.\n\n Titanic:\n   - Fixed not being able to see House in Starfield puzzle.\n\n TwinE:\n   - Fixed a bug in the collision code that made the game unfinishable due to the\n     tank not moving any further in scene 63.\n   - Fixed light angle calculation which produced rendering artifacts in a few\n     scenes.\n   - Fixed polygon rendering method for the boat windows.\n   - Fixed wrong shooting direction for some actors.\n   - Fixed door movement in some situations.\n\n Android port:\n   - Added hardware acceleration for 3D graphics.\n   - Improved touch controls.\n\n macOS port:\n   - Added support for displaying OSD messages on the Touch Bar.\n\n Windows port:\n   - Added \"Portable Mode\" in which the executable's directory is used to store\n     application files if a scummvm.ini file is present, instead of the user's\n     profile directory.\n   - Fixed detection of the Application Data path on Windows 95/98/ME.\n\n RISC OS port:\n   - Added support for dynamic plugins.\n   - Added a native MIDI driver.\n\n Nintendo DS port:\n   - Fixed screen scrolling when using the Load and Save dialogs.\n\n#### 2.5.1 (2022-01-02)\n\n General:\n   - Ported ResidualVM GUI theme to remastered version.\n   - Fixed edge case for Punycode.\n   - Fixed checking for savegame overwrite in autosave slot.\n   - Fixed moving savegame to new slot for most engines.\n   - Scalers are now supported with the OpenGL graphics mode.\n\n AGOS:\n   - Fixed old Waxworks AdLib music regression.\n\n AGS:\n   - Detection list updates.\n\n Grim:\n   - Fixed default \"Talk Speed\" option value.\n   - Fixed black screen while entering save game name.\n   - OpenGL without shaders is preferred as default for Grim Fandango.\n\n Kyra:\n   - Fixed graphical glitch in Legend of Kyrandia 3.\n\n SAGA:\n   - Fixed digitized music not looping in Inherit the Earth.\n\n SCUMM:\n   - Improved support for the high-resolution text in the 16-color Macintosh\n     versions of Loom and Indiana Jones and the Last Crusade.\n   - Improved OPL3 sound emulation for Sam&Max.\n   - Fixed music not looping in The Dig.\n   - Fixed crash when loading savegames from Humongous Entertainment games.\n\n Sherlock:\n   - Fixed crash using matches on lab table.\n   - Fixed character animation in Rose Tattoo.\n   - Fixed glitch opening map in Rose Tattoo.\n   - Fixed bell pull and fog horn sounds in Serrated Scalpel.\n   - Fixed inventory not updating in Serrated Scalpel after examining watch.\n   - Fixed fog overlay at Cleopatra's Needle in Rose Tattoo.\n   - Fixed graphic issues in Serrated Scalpel looking at items whilst inventory is open.\n   - Made Serrated Scalpel darts closer in speed to the original.\n   - Fixed crash when moving cursor past end of string in Rose Tattoo save dialog.\n   - Process pending key presses in the order they were made, not the most\n     recent first.\n   - Fixed crash when using Delete key in Rose Tattoo save dialog.\n   - Fixed rare conversation bug in Serrated Scalpel that would happen when Lord\n     Brumwell started talking to you while the inventory window was open.\n   - Resume animations in Serrated Scalpel after conversations. This fixes the\n     bug where Jock Mahoney or Nobby Charleton would get stuck indefinitely,\n     refusing to talk to you.\n   - Fixed various user interface glitches in both games.\n\n Stark:\n   - Added OpenGL renderer (without shaders).\n   - Added TinyGL renderer.\n   - Fixed autosave handling.\n\n TwinE:\n   - Numerous bugfixes and stability improvements.\n\n Xeen:\n   - Fixed crash on startup loading constants from xeen.ccs.\n   - Fixed spell selection aborting when characters were switched.\n   - Fixed some bad memory accesses.\n   - Various sound fixes.\n   - Fixed the monster item drop probabilities.\n\n#### 2.5.0 \"Twenty years ago today...\" (2021-10-09)\n\n New games:\n   - Added support for Grim Fandango.\n   - Added support for The Longest Journey.\n   - Added support for Myst 3: Exile.\n   - Added support for Little Big Adventure.\n   - Added support for Red Comrades 1: Save the Galaxy.\n   - Added support for Red Comrades 2: For the Great Justice.\n   - Added support for Transylvania.\n   - Added support for Crimson Crown.\n   - Added support for OO-Topos.\n   - Added support for Glulx interactive fiction games.\n   - Added support for Lure of the Temptress Konami release.\n   - Added support for Private Eye.\n   - Added support for Spanish Blue Force.\n   - Added support for Spanish Ringworld.\n   - Added support for Spanish Amazon: Guardians of Eden.\n   - Added support for AGS Games versions 2.5+.\n   - Added support for Nightlong: Union City Conspiracy.\n   - Added support for The Journeyman Project 2: Buried in Time.\n   - Added support for Crusader: No Remorse.\n   - Added support for L-ZONE.\n   - Added support for Spaceship Warlock.\n\n New ports:\n   - The Nintendo DS port got a major rewrite.\n\n General:\n   - Switched ScummVM GUI output to UTF-32.\n   - Updated the Roland MT-32 emulation code to the Munt project's mt32emu 2.5.1.\n   - Updated Dropbox Cloud Storage to use the new Dropbox OAuth workflow.\n   - Major extension to the number of supported graphics scalers.\n   - Display path to scummvm configuration file in GUI -> Options -> Paths.\n   - Added new optional dependency, giflib >= 5.0.0. Used by some version of LBA.\n   - Added HiDPI support to the ScummVM GUI.\n   - Added command line option --window-size for specifying ScummVM window size,\n     applicable only to the OpenGL renderer.\n   - Fixed switching to the default graphics mode. This was sometimes not applied\n     until restarting ScummVM or starting a game.\n   - ScummVM GUI has been fully translated into Korean and Japanese.\n   - Added GUI option for enabling and disabling the Discord RPC integration.\n\n ADL:\n   - Added support for Mystery House French translation.\n   - Added support for several game variants.\n\n AGI:\n   - Added support for Russian versions. Input now works.\n\n AGOS:\n   - Added support for the Japanese PC-98 version of Elvira 1.\n\n CGE:\n   - Added option to use Text To Speech for Soltys.\n\n CGE2:\n   - Added option to use Text To Speech for Sfinx.\n\n Cine:\n   - Added detection for Future Wars CD version with French translation patch.\n   - Added detection for Italian Amiga Operation Stealth.\n   - Fixed crash before entering secret base.\n   - Fixed space missing in verb line.\n   - Fixed vertically overflowing message boxes.\n\n Dreamweb:\n   - Rendering fixes for Russian fan translation.\n\n Glk:\n   - Fixed savegame issues with several subengines.\n   - Fixed memory overrun in Level9 game detector.\n   - Added detections for 2020 IF Comp games.\n   - Enabled Glulx sub-engine.\n\n Gob:\n   - Added support for Bargon Attack Russian translation.\n   - Added support for Woodruff Russian translation.\n\n Griffon:\n   - Fixed Return to Launcher from The Griffon Legend.\n   - Added option to use Text To Speech in The Griffon Legend\n\n Grim:\n   - Added support for Brazillian Portuguese Grim Fandango.\n\n Kyra:\n   - Added support for the Japanese Sega-CD version of Eye of the Beholder.\n   - Added support for the Hebrew fan translation of Legend of Kyrandia.\n   - Added support for the Hebrew fan translation of Legend of Kyrandia 2.\n   - Added support for the Simplified Chinese version of Legend of Kyrandia 3.\n   - Added support for the playable demo of Lands of Lore.\n\n Lure:\n   - Fixed fire animation in first room when loading saves.\n   - Fixed AdLib support.\n   - Fixed MT-32 support.\n\n Pegasus:\n   - Added support for DVD/GOG.com release.\n\n Queen:\n   - Added support for German Amiga floppy release.\n\n SAGA:\n   - Added support for ITE GOG Mac CD v1.1.\n   - Added support for ITE PC-98 Japanese.\n   - Fixed digitized music not looping in Inherit the Earth.\n\n SCI:\n   - Added RGB rendering mode (16/32bpp) for SCI0 - SCI1.1 games, which addresses palette\n     issues in screen transitions and avoids mode changes when playing Mac QuickTime videos.\n   - Added custom palette mods for SQ3 and LSL2 from the FreeSCI project. When enabled, the mods improve the visuals\n     in these two games.\n   - Added support for Macintosh version of Gabriel Knight 1.\n   - Added support for CD-Audio version of Mixed-Up Mother Goose.\n   - Added support for Korean fan translations from the scummkor project: Castle of Dr. Brain,\n     EcoQuest 1, Gabriel Knight 1, King's Quest 1, 5, and 6, Laura Bow 2, and Space Quest 4.\n   - Added support for Space Quest 4 Update 1.3 by New Rising Sun.\n   - Added support for French LSL1VGA.\n   - Added support for Hebrew QFG1VGA.\n   - Added support for Hebrew GK1.\n   - Added support for Russian Longbow.\n   - Added support for Russian LSL6.\n   - Added support for alternate Russian LSL7.\n   - Added support for alternate Polish LSL7 including files packaged with InstallShield.\n   - Added support for alternate Russian SQ5.\n   - Added support for alternate Russian Torin's Passage.\n   - Added support for fan game Soulshade Asylum.\n   - SCI1.1 views are now scaled accurately.\n   - Fixed sounds not stopping or restarting correctly.\n   - Fixed sound issues when restoring SCI0 games.\n   - Fixed corruption when \"Prefer digital sound effects\" was disabled in SCI1 games.\n   - Space Quest 4 CD sound effects now match the selected platform.\n   - Added option to enable Windows cursors in CD versions of King's Quest 5 and Space Quest 4.\n   - Fixed \"Girl In The Tower\" song not playing at the end of King's Quest 6 CD.\n   - Fixed King's Quest 5 Amiga beach error that prevented completing the game.\n   - Fixed over 30 script bugs in GK1, HOYLE4, KQ1DEMO, KQ5, KQ6, KQ7, LB1,\n     LSL3, PEPPER, PQ3, QFG3, SQ1, SQ4, and SQ6.\n   - Unlocked JANE easter egg in Gabriel Knight 1.\n\n SCUMM:\n   - Fixed Chinese, Japanese and Korean text display for The Dig and for The Curse of Monkey Island. These fixes\n     also include some improvements to the common text display (mainly the formatting of wrapped texts).\n   - Fixed display of Chinese, Japanese and Korean pause and restart dialogs.\n   - Added support for numerous Korean translations from scummkor project.\n   - Added support for Russobit-M versions of Pajama2 and SpyOzone.\n   - Fixed speech playback in Akella version of COMI.\n   - Added support for Discord and Humble Bundle versions of Indiana Jones and the Fate of Atlantis.\n   - Added smooth scrolling for FM-TOWNS versions of games.\n   - Added optional trimming to 200 pixels for some FM-TOWNS games, so aspect-ratio correction is possible.\n   - Fixed audio distortion in Loom for PC-Engine.\n   - Added support for the high resolution font and cursor in the 16-color Macintosh version of Loom.\n   - Added support for Japanese Mac version of The Dig.\n   - Added partial support for the high resolution fonts and cursor in the\n     16-color Macintosh version of Indiana Jones and the Last Crusade.\n   - Fixed missing instruments in the m68k Mac versions of Monkey Island 2\n     and Indiana Jones and the Fate of Atlantis.\n   - Added \"Macintosh b/w\" render mode for the 16-color Macintosh versions of\n     Loom and Indiana Jones and the Last Crusade.\n   - Enabled difficulty selection in the version of Monkey Island 2 that was\n     included on the LucasArts Mac CD Game Pack II compilation. (It had been\n     disabled along with the copy protection.)\n   - Repaired clumsy crack in Maniac Mansion (enhanced)'s keypad script.\n     This means that the GOG and Steam versions will no longer accept incorrect\n     numbers, e.g. for Edna's phone number. (Why are they selling a cracked\n     version anyway?!)\n   - Added support for Low quality music in Macintosh version of Loom.\n   - Improved Digital iMUSE accuracy for Full Throttle and The Curse of Monkey Island. These improvements also fix\n     several audio related bugs for both games.\n   - Fixed a very old regression in the walk code for Full Throttle which softlocked the game.\n   - Improved the accuracy of the walk code for The Dig and The Curse of Monkey Island.\n   - Fixed a bug in The Curse of Monkey Island which prevented, during the cannon minigame in Part 1, the destruction\n     of one of the three destroyable turrets in the fort.\n   - Added animated cigar smoke to the close-up of captain Smirk in the CD\n     version of Monkey Island 1. It was present in earlier versions.\n   - Restored some missing Lemonhead lines in the English, Italian, German and Spanish CD\n     versions as well as the English Macintosh, FM-Towns and Sega CD versions\n     of Monkey Island 1.\n   - Made the clock tower in Monkey Island 1 behave the same in the CD version\n     as in earlier versions, i.e. after examining it you have to leave the\n     room and come back again for its description to change.\n\n Tinsel:\n   - Enabled the Return to Launcher feature.\n\n Titanic:\n   - Fixed crashes when asking bots what I should do.\n\n TsAGE:\n   - Added support for uninstalled floppy version.\n\n Stark:\n   - Added support for Hungarian translation.\n\n Supernova:\n   - Added Italian translation for part 1.\n\n Sword25:\n   - Made the extracted version working.\n   - Fixed crash when selecting Croatian language.\n\n Ultima:\n   - Ultima 4: Added several debugger commands.\n   - Ultima 4: Allow Enter key to exit ZStats display.\n   - Ultima 8: Fixed several animation bugs for events and objects.\n   - Ultima 8: Restored original text for the Spell of Resurrection book.\n\n Xeen:\n   - Fixed occasional border corruption during fights.\n   - Improvements to cutscenes to better match the original games.\n   - Fixes for character selection, deselection, and dismissing to better match original.\n   - Added support for Russian version.\n\n AmigaOS port:\n   - Added native system file browser feature.\n   - Re-activated nuked OPL Adlib driver.\n\n Big-endian ports:\n   - Fixed crashes or rendering issues with the Blazing Dragons, Duckman and\n     Full Pipe games.\n\n iOS port:\n   - Fixed using arrow keys on physical keyboard in iOS 15.\n   - Fixed rotating the device while ScummVM is inactive.\n   - Added support for upside down portrait orientation.\n\n macOS port:\n   - Added support for Dark Mode.\n   - Use OpenGL renderer by default, providing better support for HiDPI displays.\n\n MorphOS port:\n   - Added native system file browser feature.\n   - Added Cloud feature.\n   - Re-activate nuked OPL Adlib driver.\n   - Added CAMD MIDI driver support.\n\n  Windows port:\n   - Use OpenGL renderer by default, providing better support for HiDPI displays.\n\n#### 2.2.0 \"Interactive Fantasy\" (2020-09-27)\n\n New games:\n   - Added support for Blazing Dragons.\n   - Added support for Griffon Legend.\n   - Added support for Interactive Fiction games based on the following engines:\n     ADRIFT (except for version 5), AdvSys, AGT, Alan 2 & 3,\n     Archetype (newly reimplemented for Glk from the original Pascal sources),\n     Hugo, JACL, Level 9, Magnetic Scrolls, Quest, Scott Adams,\n     ZCode (all ZCode games except the Infocom graphical version 6 games).\n     Currently, more than 1600 games are detected and supported.\n   - Added support for Operation Stealth.\n   - Added support for Police Quest: SWAT.\n   - Added support for English translation of Prince and the Coward.\n   - Added support for Ultima IV - Quest of the Avatar.\n   - Added support for Ultima VI - The False Prophet.\n   - Added support for Ultima VIII - Pagan.\n\n New ports:\n   - MorphOS port got a major rewrite.\n\n General:\n   - Autosaves are now supported for all the engines.\n   - Errors are more likely to open the debugger, and be displayed, than just crash ScummVM.\n   - Games are sorted in GUI ignoring the articles.\n   - Now Hebrew is displayed correctly in GUI (requires FriBiDi library).\n   - Updated the Roland MT-32 emulation code to Munt 2.4.0.\n   - Added option to select the default voice for ports that support Text-to-Speech.\n   - Added support for Discord Rich Presence integration on supported platforms (Windows Vista+, macOS 10.9+ 64 Bit).\n   - Major improvements to the keymapper.\n   - Games are now recognised by engineid:gameid combination.\n\n BBVS:\n   - Added support for the demo, available from our website.\n   - Added support for the Loogie minigame demo.\n\n Dreamweb:\n   - Added support for Russian fan-translation.\n   - Fixed animation speed.\n\n Illusions:\n   - Fixed subtitle speed (set it to max for good speed).\n   - Added support for Russian Duckman.\n\n Kyra:\n   - Added support for the SegaCD version of Eye of the Beholder I (with CD-Audio, animated\n     cutscenes and map function).\n   - Added support for the PC-98 version of Eye of the Beholder I.\n   - Added support for the Spanish versions of Eye of the Beholder I and II, Legend of\n     Kyrandia 1 (CD-ROM fan translation) and Legend of Kyrandia 2 (floppy version and\n     CD-ROM fan translation). Fix Spanish Lands of Lore support (floppy version and\n     CD-ROM fan translation).\n\n Lab:\n   - Fixed sound looping in some rooms.\n\n Neverhood:\n   - Added support for bigger demo, available from our website.\n\n Prince:\n   - Fixed inventory item descriptions display.\n   - Added English translation.\n   - Fixed bug with infinite loop when looking at some objects.\n\n Queen:\n   - Fixed loading a save game from the launcher.\n   - Fixed random long delays when starting a game.\n\n SCI:\n   - Major improvements to Amiga and Mac sound drivers.\n   - Improved MIDI playback and fixed many audio issues.\n   - Fixed 30 original script bugs in ECO2, GK1, KQ4, KQ5, KQ6, KQ7, LB1, LONGBOW,\n     PHANT2, QFG1, QFG3, QFG4, SQ5 and SQ6.\n   - Fixed a script bug responsible for rare and random lockups in most Sierra\n     games between 1992-1996.\n   - Added support for Inside the Chest / Behind the Developer's Shield.\n   - Added support for German LSL6-Floppy.\n   - Added support for Hebrew Torin's Passage.\n   - Added support for Italian Lighthouse.\n   - Added support for Polish KQ5, LSL2, LSL3, LSL5 and LSL6-Floppy.\n   - Fixed Russian LSL1 error when hailing a taxi.\n   - Fixed Phantasmagoria 2 error when attempting easter eggs.\n   - Fixed QFG3 auto-saves.\n   - Fixed QFG4 and Shivers save game thumbnails being obscured by control panels.\n   - Fixed a random crash in the Windows version when exiting a game.\n   - Added support for Roland D-110 sound driver.\n   - The \"Prefer digital sound effects\" checkbox works correctly now for SCI01/SCI1 games.\n\n SCUMM:\n   - Fixed palette issues leading to incorrect colors in MM NES intro and dark rooms.\n   - Fixed the rendering of the flashlight in MM NES to match the original version.\n   - Replaced the existing NES palette to a more accurate NTSC palette based on Mesen.\n   - Added a new GUI option to switch to an alternative NES palette based on the NES Classic.\n   - Improved colors in Apple //gs Maniac Mansion.\n   - Fixed crash when entering garage in Apple //gs Maniac Mansion.\n   - Added support from Classic Full Throttle from Remastered release.\n\n Supernova:\n   - Improved English translation.\n\n Sky:\n   - Fixed syncing of music volume between native settings panel and ScummVM configuration.\n\n Sword1:\n   - Added support for localized menus in Novy Disk Russian Trilogy release.\n   - Added support for Spanish playable Demo available from our website.\n\n Sword2:\n   - Added support for Spanish playable Demo available from our website.\n\n Titanic:\n   - Fixed Barbot crash after asking what else he needs.\n\n Wintermute:\n   - Added subsystem for tracking achievements, implemented for 10+ games.\n\n Xeen:\n   - Add missing sprite drawer for enemies hit by Energy Blast.\n   - Fixed freeze due to bad mob data at the top of Witches Tower.\n   - Fix crash loading some savegames directly from the launcher.\n   - Fix curing the well in Nightshadow.\n   - Fix loading of wall items from savegames.\n   - Fix U/D keys not working on Quests dialog.\n   - Fix incorrect mirror destination for Dragon Tower.\n   - Fix crash reading book in Great Pyramid safe.\n   - Prevent attributes from going negative.\n   - Fix border faces animation during Clairvoyance.\n\n ZVision:\n   - Fixed regression in the safe puzzle in Zork Nemesis: The Forbidden Lands.\n   - Fixed getting perfect score in Zork: Grand Inquisitor.\n\n Android port:\n   - Added support for immersive fullscreen mode.\n   - Improved keyboard and mouse input.\n\n iOS port:\n   - Fixed unsupported graphic mode for some games (such as SCI games with high\n     quality video scaling enabled).\n   - Removed Quit button to follow the iOS design guidelines.\n   - Removed virtual keyboard input assistant bar. In particular this means that we\n     no longer see a bar at the bottom of the screen when using an external keyboard.\n   - Added save of current game state if possible when switching to a different task\n     and restore game state when returning to the ScummVM task.\n\n Linux port:\n   - Added option to use the system file browser instead of the ScummVM file browser.\n\n MacOS X port:\n   - Fixed blurry on Retina screens. Unfortunately this required dropping support\n     for the dark theme for window decorations.\n   - Fixed Taskbar icon display when running a game (this was broken since ScummVM\n     1.9.0).\n\n RISC OS port:\n   - Added a VFP optimized build for newer hardware.\n\n Windows port:\n   - Added support for using additional OneCore voices for text to speech.\n   - Active support for Windows Vista and lower is now discontinued. While we still provide\n     builds for those systems in the foreseeable future, some newer features might be missing.\n\n#### 2.1.2 \"Fixing Powerful Windows\" (2020-03-31)\n\n Windows port:\n   - Fixed an issue with the Sparkle updater which lead to an infinite update loop.\n\n MacOS X port:\n   - Fixed application freeze on start on Mac OS X 10.5 and older.\n   - Fixed application icon on Mac OS X 10.5 and older.\n\n\n#### 2.1.1 \":More sheep:\" (2020-01-31)\n\n General:\n   - Fixed crash when switching certain languages in GUI.\n   - Fixed ESC erroneously saving the changes in the options dialog.\n   - Improvements in FM-TOWNS/PC-98 audio.\n   - Improved Greek language support in the GUI.\n\n Networking:\n   - Improved error handling.\n   - Only download saves when necessary.\n\n Bladerunner:\n   - Fixed buggy savestate in some scenes.\n   - Added engine checkbox to target 120fps.\n   - Fixed thumbnail portability.\n   - Use virtual keyboard on save screen on relevant platforms.\n\n Kyra:\n   - Fixed EOB1-Amiga ending sequence (which would play only if you achieved all bonus quests).\n   - Fixed monster random item drop chance in EOB1.\n   - Added handling for the secret potion in the Legend of Kyrandia 2.\n   - Fixed sound issues in the Legend of Kyrandia 2.\n   - Fixed graphics glitches in Legend of Kyrandia 1 and 3, EOB1 and EOB2-FM-TOWNS.\n\n Mohawk:\n   - Persist changes in game options across sessions.\n\n Queen:\n   - Fixed regression with the display of the bellboy dialogue.\n\n SCI:\n   - Numerous game script fixes in CAMELOT, ECO2, GK1, GK2,\n     KQ7, PHANT1, PQ1VGA, QFG3, QFG4, SQ5 and SQ6.\n   - Implement horizontal and FM-TOWNS type screen shake.\n   - Added support for Phantasmagoria 1 censored mode.\n   - Added support for Polish LSL7.\n   - Added support for Italian GK2.\n   - Added support for Portuguese GK2.\n   - Added support for Russian KQ7.\n   - Added support for Russian SQ1VGA.\n   - Added support for GK2 fan-made subtitle patches.\n\n SCUMM:\n   - Added support for Pajama2 (UK release).\n\n Supernova:\n   - Hooked F5 to the Main Menu.\n\n Toltecs:\n   - Added Czech version support.\n   - Fixed exiting from game menus when returning to the launcher.\n\n Wintermute:\n   - Added several missing game variants and demos to the detection tables.\n   - Fixed regression with stack handling.\n   - Fixed the behavior of edit boxes.\n   - Improved support for Chinese language game variants.\n\n Xeen:\n   - Fixed display of gold and gem amounts on the Switch.\n   - Fixed tavern exit locations in Swords of Xeen.\n   - Fixed crash loading Deep Mine Alpha in World of Xeen CD.\n\n GUI:\n   - MIDI setting tabs are no longer shown if a game has no music at all.\n\n All ports:\n   - Fixed screen filling in non-paletted screen modes.\n\n 3DS port:\n   - Major improvements.\n\n AmigaOS4 port:\n   - Minor tweaks (stack cookie, build automation).\n\n Android port:\n   - Improved filesystem navigation.\n   - Proper handling of HiDPI displays.\n   - Improved keyboard support.\n\n iOS port:\n   - The home indicator is now automatically hidden on iPhone X and later models.\n\n MacOS X port:\n   - Follow the OS dark theme for window decorations.\n\n RISC OS port:\n   - Fixed crash when accessing an unavailable drive.\n   - Reduced the required DigitalRenderer version.\n\n Switch port:\n   - Added cloud integration.\n\n OpenPandora port:\n   - Minor improvements.\n\n Windows:\n   - Added Text-to-Speech support.\n   - Fix screenshots with Unicode paths.\n\n\n#### 2.1.0 \"Electric Sheep\" (2019-10-11)\n\n New games:\n   - Added support for Blade Runner.\n   - Added support for Duckman: The Graphic Adventures of a Private Dick.\n   - Added support for Hoyle Bridge.\n   - Added support for Hoyle Children's Collection.\n   - Added support for Hoyle Classic Games.\n   - Added support for Hoyle Solitaire.\n   - Added support for Hyperspace Delivery Boy!\n   - Added support for Might and Magic IV - Clouds of Xeen.\n   - Added support for Might and Magic V - Darkside of Xeen.\n   - Added support for Might and Magic - World of Xeen.\n   - Added support for Might and Magic - World of Xeen 2 CD Talkie.\n   - Added support for Might and Magic - Swords of Xeen.\n   - Added support for Mission Supernova Part 1.\n   - Added support for Mission Supernova Part 2.\n   - Added support for Quest for Glory: Shadows of Darkness.\n   - Added support for The Prince and the Coward.\n   - Added support for Versailles 1685.\n\n New ports:\n   - Added Nintendo Switch port.\n\n General:\n   - Improved GUI rendering and overall GUI performance.\n   - Added stretch mode option to control how the display is stretched to the\n     window or screen area.\n   - Fixed incorrect cursor movement when it's controlled using the keyboard.\n   - Updated the Roland MT-32 emulation code to Munt 2.3.0.\n   - Improved unknown game variants reporting.\n   - Enabled cloud support.\n   - Added Text to Speech capabilities for better accessibility on some platforms.\n\n ADL:\n   - Improved color accuracy.\n   - Added a TV emulation mode.\n   - Added support for the WOZ disk image format.\n\n Drascula:\n   - Fixed loading game from launcher when the game had been saved in chapter 1.\n\n Full Pipe:\n   - Fixed playtime not being restored when loading a savegame.\n   - Fixed a bug that leads to enormous memory consumption in scene 22.\n\n Kyra:\n   - Added support for the Amiga version of Eye of the Beholder I + II.\n   - Added support for the FM-Towns version of Eye of the Beholder II.\n   - Several bug fixes.\n\n MOHAWK:\n   - Added a main menu for the 25th anniversary release of Myst ME.\n   - Repurposed the landing menu as a main menu for the 25th anniversary\n     release of Riven.\n   - Added autosave to slot 0 to Myst and Riven.\n   - Added keyboard shortcuts for loading and saving as documented in the game\n     manual to Myst and Riven.\n   - Fixed a crash caused by the observatory viewer random position going out\n     of bounds in Myst.\n   - Fixed a crash caused by Jungle Island flies going out of bounds in Riven.\n   - Fixed missing end credits for the Polish version in Riven.\n   - Improved usability for some puzzles in Myst and Riven.\n   - Fixed various crashes, graphics glitches, and sound imperfections in Myst\n     and Riven.\n\n Mortevielle:\n   - Added speech synthesis on some platforms.\n\n SCI:\n   - Added LarryScale, a high quality cartoon scaler for Leisure Suit Larry 7.\n   - Fixed over 100 original game script bugs in CAMELOT, ECO1, ECO2,\n     FREDDYPHARKAS, GK1, HOYLE5, ICEMAN, KQ6, LB1, LB2, LONGBOW, LSL6,\n     MOTHERGOOSE256, PQ3, PQ4, QFG1VGA, QFG4, and SQ4.\n   - Fixed a bug in version 2.0.0 that prevented the Macintosh versions of\n     Freddy Pharkas, King's Quest 6, and Quest for Glory 1 (VGA) from loading.\n   - Fixed a crash in the Macintosh version of Freddy Pharkas when picking up\n     the shovel which makes the game completable.\n   - Fixed loading autosave games.\n\n SCUMM:\n   - Implemented lipsync for v6 and v7+ games.\n   - Improved Audio quality in Humongous Entertainment games by using the Miles AdLib driver.\n   - Fixed possible stack overflows in The Dig and Full Throttle.\n   - Fixed original speech glitch on submarine in Indiana Jones and the Fate of Atlantis.\n     Users need to recompress their monster.sou using an up-to-date version of scummvm-tools\n     for this to take effect when using compressed audio.\n   - Fixed an issue in the wig maker room in the German version of SPY Fox 3: Operation Ozone\n     which makes the game completable.\n   - Added sound driver for the Amiga versions of Monkey Island 2 and Indiana Jones\n     and the Fate of Atlantis.\n\n Sherlock:\n   - Fixed crash in Spanish version talking to lady in Tailor shop.\n\n SKY:\n   - Added workaround for original game bug to improve intro and not cut off images which exist\n     as fullscreen (320x200px) in the game data files.\n\n Tinsel:\n   - Fix loading Discworld 1 savegames from the launcher where Rincewind had a held item.\n   - Script patch for hang in Discworld 1 GRA using items on Temple big hammer.\n   - In Discworld 1, Held items being released that were never in the Luggage or Rincewind's inventory\n     will now be automatically dropped into the Luggage rather than being lost.\n\n Titanic:\n   - Fixed bug in entering floor numbers numerically that could crash the game.\n   - Fixed parser not getting properly reset across sentences in a conversation.\n   - Fixed endless busy cursor on Titania closeup when brain slots are incorrectly inserted.\n   - Fixed loading saves in front of Barbot could cause him to go into an infinite animation loop.\n   - Fixed crash asking Parrot who sabotaged the ship.\n\n Tucker:\n   - Fixed multiple graphic issues in Bud Tucker in Double Trouble.\n   - Fixed multiple issues with font and subtitle rendering.\n   - Fixed dentist music in mall being played incorrectly.\n   - Fixed wrong sound effects being played.\n   - Fixed a bug that made the bubbles in the Plugs Shop not always visible.\n   - Fixed a missing animation when Ego and Billie are on the boat.\n   - Fixed a bug that caused a dead end in the second museum scene.\n   - Bud is no longer able to walk outside the walkable area when visiting the club.\n   - Bud is also no longer able to walk through closed doors.\n   - Added mouse wheel support for inventory scrolling.\n   - Allow skipping of speech.\n   - Improved savegame handling and added support for autosaves.\n\n ZVISION:\n   - Fixed graphical glitch in Zork: Grand Inquisitor.\n   - Packaged the required fonts with ScummVM.\n   - Enabled hires movies in the DVD version of Zork: Grand Inquisitor (requires\n     libmpeg2 and libac52).\n\n Android port:\n   - Rewrote to make use of the OpenGL Graphics Manager.\n   - Added a button to show the virtual keyboard.\n   - Implemented clipboard support.\n   - Use the dedicated GUI option for enabling the touchpad mode.\n   - Added code for searching accessible external media.\n\n iOS port:\n   - Added support for Smart Keyboard.\n   - Added three-fingers swipe gestures to simulate arrow keys.\n   - Added pinch in and out gestures to show and hide the keyboard.\n   - Added scrollable accessory bar above the keyboard with keys not present on the keyboard.\n\n macOS port:\n   - Added option to use the ScummVM file browser instead of the system file browser.\n   - Added access to documentation from the Help menu.\n\n PS Vita port:\n   - Implemented front touch and optional rear touch controls.\n\n PSP port:\n   - Implemented aspect ratio correction.\n   - Improved smoothness of mouse pointer motion.\n   - Added mouse pointer speed and analog nub deadzone settings.\n\n SDL ports (including Windows, Linux, macOS):\n   - Added support for game controllers.\n   - Added support for adding games via Drag and Drop.\n\n Windows port:\n   - Added option to use the system file browser instead of the ScummVM file browser.\n\n RISC OS port:\n   - Added a StrongHelp manual.\n   - Added error reporting using !Reporter.\n\n\n#### 2.0.0 (2017-12-17)\n\n New Games:\n   - Added support for Full Pipe.\n   - Added support for Hi-Res Adventure #3: Cranston Manor.\n   - Added support for Hi-Res Adventure #4: Ulysses and the Golden Fleece.\n   - Added support for Hi-Res Adventure #5: Time Zone.\n   - Added support for Hi-Res Adventure #6: The Dark Crystal.\n   - Added support for Riven.\n   - Added support for Starship Titanic English & German.\n\n New Games (Sierra SCI2 - SCI3):\n   - Added support for Gabriel Knight.\n   - Added support for Gabriel Knight 2.\n   - Added support for King's Quest VII.\n   - Added support for King's Questions.\n   - Added support for Leisure Suit Larry 6 (hires).\n   - Added support for Leisure Suit Larry 7.\n   - Added support for Lighthouse.\n   - Added support for Mixed-Up Mother Goose Deluxe.\n   - Added support for Phantasmagoria.\n   - Added support for Phantasmagoria 2.\n   - Added support for Police Quest 4.\n   - Added support for RAMA.\n   - Added support for Shivers.\n   - Added support for Space Quest 6.\n   - Added support for Torin's Passage.\n\n New ports:\n   - Added PSP Vita port.\n   - Added RISC OS port.\n\n General:\n   - Added bilinear filtering option for SDL2 fullscreen mode.\n   - Fixed a bug that caused a crash in the options dialog of the GUI.\n   - Added a command-line option to automatically scan for supported games in\n     the current or a specified directory.\n   - Added possibility to apply changes in the options dialog without closing\n     the dialog.\n   - Added support for on-the-fly GUI language switching.\n   - Updated Munt MT-32 emulation code to version 2.0.3.\n   - Improved handling of joysticks.\n   - Improved audio latency.\n   - Improved management of the ScummVM window in games that switch display\n     modes.\n   - Fixed list view drawing over text above it (for example in the save dialog).\n   - Changed location where screenshot are saved. This fixes issues when scummvm\n     is installed in a read-only directory. Also added setting to allow changing\n     this location.\n   - Changed screenshot format to png.\n   - Fixed multithreading issue that could cause a crash in games using MP3 audio.\n\n ADL:\n   - Fixed application freeze when reading sign in rocket in Mission Asteroid.\n\n AGI:\n   - Fixed game script blocking forever after loading a savegame that was saved\n     while music was playing (this could happen for example in Police Quest 1\n     poker back room.\n   - Fixed cursor behaviour in Manhunter.\n   - Fixed nightclub arcade sequence speed for Manhunter Apple IIgs version.\n   - Reduced fastest game speed to a maximum of 40 FPS to ensure the games do\n     not run too fast.\n\n AGOS:\n   - Fixed subtitle speed setting in the Hebrew version of Simon the Sorcerer 1.\n\n Composer:\n   - Added save/load from General Main Menu.\n   - Fixed the detection for the French Gregory.\n   - Added detection for German Baba Yaga.\n\n Cruise:\n   - Fixed font rendering.\n\n Drascula:\n   - Fixed bug that made it impossible to talk to the drunkard more than once in the inn.\n   - Added handling of the master volume and fix volume synchronization between\n     the game and ScummVM options.\n   - Added possibility to load and save games using GMM.\n\n Dreamweb:\n   - Fixed crash when collecting last stones under church.\n   - Fixed detection of Italian CD release.\n\n Kyra:\n   - Fixed a buffer overflow in Lands of Lore.\n   - Fixed crash due to missing palette data for Legend of Kyrandia floppy version.\n\n MADE:\n   - Fixed badly distorted sound (bug #9753).\n\n MADS:\n   - Fixed a bug that caused a crash after starting Rex Nebular and the Cosmic Gender Bender.\n   - Fix rare crash that can happen when Rex is first locked up\n\n MOHAWK:\n   - Added patch to the original data files to correct the vault access\n     instructions in Myst ME.\n   - Fixed situations where Myst could appear to be unresponsive.\n   - Reworked sound handling in Myst to be more accurate.\n   - Fixed crash in Myst piano puzzle.\n\n Neverhood:\n   - Fixed crash in musical hut in Russian DR version.\n   - Fixed late game notes crash in Russian DR version.\n\n Pegasus:\n   - Fixed loading a game from the launcher after returning to the launcher.\n   - Ignored events occurring while the GUI is visible. This for example fixed an\n     issue where closing the GMM using Escape would also opens the game's own\n     menu.\n   - Fixed several crashes when toggling the shared screen space.\n   - Improved performances when fading screen.\n\n SAGA:\n   - Fixed crash when using the give verb on an actor in IHNM.\n   - Fixed Gorrister invisible and stuck when reloading at mooring ring in IHNM.\n   - Fixed the conversation panel background color in IHNM.\n   - Added support French Fan Translation of Inherit the Earth.\n\n SCI:\n   - Fixed a script bug in Laura Bow 2: Dagger of Amon Ra that made it impossible\n     to exit the party room with the large golden head inside the museum (room 350).\n     This bug is also present, when using the original interpreter.\n   - Improved startup speed when using the MT-32 emulator.\n   - Improved handling of MT-32 reverb in SCI0 games.\n   - Improved selection of synthesized sound effects in SCI0 games.\n   - Improved selection of digital audio in SQ4.\n   - Improved resource bounds checking.\n   - Improved error handling of corrupt MIDI data.\n   - Fixed slow leak of small amounts of data into save games over time.\n   - Fixed broken day/night cycle in QFG3.\n   - Fixed a script bug in Police Quest 3 to now grant 10 points when giving the\n     locket to Marie. Now it's possible to beat the game with a perfect score.\n     This bug is also present when using the original interpreter.\n   - Fixed various other script bugs.\n   - Improved audio volume and settings synchronization.\n\n SCUMM:\n   - Fixed crash in amiga games.\n   - Fixed two soundtracks playing at once in Monkey Island 2.\n   - Fixed Caponians dont disguise after using blue crystal in Zak McKracken.\n   - Fixed Dr. Fred facing wrong way in lab cutscene in Maniac Mansion.\n   - Fixed actors being drawn one line too high in V0 and V1 games.\n   - Fixed Purple Tentacle appears in Lab Entry after being chased out in maniac Mansion.\n   - Fixed power not turning back on in Maniac Mansion when entering the lab\n     while Dr. Fred has the power off.\n   - Fixed actors skipping between certain walk-boxes in Maniac Mansion.\n\n Sherlock:\n   - Fixed detection for Italian fan translation of Serrated Scalpel.\n\n Sky:\n   - Fixed collision detection.\n\n Sword1:\n   - Added thumbnail when saving from in-game dialog.\n   - Fixed audio and subtitles settings being changed when open the load/save\n     in-game dialog.\n\n Tinsel:\n   - Fixed some Discworld 2 text/voice not displaying & playing all the way through.\n   - Fix crash in in-game save menu when all slots are used with long names\n\n TsAGE:\n   - Fixed regression preventing animations in Return to Ringworld from playing.\n   - Fixed display issues in Return to Ringworld Demo.\n   - Fixed loading Return to Ringworld savegames with unreferenced dynamic objects.\n   - Fixed deadlock in audio code.\n   - Fixed crash on Return to Launcher.\n\n Voyeur:\n   - Fixed backgrounds not showing for static rooms.\n   - Fixed playback of audio events on VCR.\n   - Fixed exiting game from the VCR screen.\n   - Added workaround for original game bug using invalid hotspot Ids\n\n macOS port:\n   - Added support for selecting any connected MIDI devices instead of automatically\n     using the first one.\n   - Improved behaviour of the file browser.\n\n\n#### 1.9.0 \"Myst-ery U.F.O.s release\" (2016-10-17)\n\n New Games:\n   - Added support for Myst.\n   - Added support for Myst: Masterpiece Edition.\n   - Added support for U.F.O.s.\n   - Added support for Hi-Res Adventure #0: Mission Asteroid.\n   - Added support for Hi-Res Adventure #1: Mystery House.\n   - Added support for Hi-Res Adventure #2: The Wizard and the Princess.\n\n General:\n   - Fixed audio corruption in the MS ADPCM decoder.\n   - Fixed audio pitch in the CMS/GameBlaster emulation.\n   - Switched SDL backend to SDL2 by default. SDL1 is still a fallback.\n\n AGI:\n   - Added support for Hercules rendering. Both green and amber modes are\n     supported.\n   - Added support for the Hercules high resolution font. The font is also\n     usable outside of Hercules rendering.\n   - Added optional \"pause, when entering commands\" feature, that was only\n     available in the original interpreter for Hercules rendering.\n\n Beneath a Steel Sky:\n   - Fixed a bug that could possibly make the game unfinishable due to a\n     wrong animation for Officer Blunt that makes further interaction with\n     this character impossible.\n\n Gob:\n   - Fixed graphical issues in Gobliiins (EGA version).\n\n Kyra:\n   - Updated Italian EOB1 translation.\n   - Fixed a bug that caused a crash in Lands of Lore.\n\n SCI:\n   - Fixed a missing dialog line in QfG3 which awards the player with 3 additional\n     points. This is a bug in the original game interpreter. Due to this bug,\n     it was not possible to get all points in the original game.\n   - Fixed a bug in Space Quest 1 that caused issues with the spider droid.\n   - Fixed a bug in Laura Bow: The Colonel's Bequest that could cause a lock-up when\n     interacting with the armor in room 37 (main house, downstairs). This bug is also\n     present in the original game.\n   - Fixed auto-saving in the fan-made Cascade Quest.\n   - Fixed a game bug in the Conquests of Longbow scripts that could cause crashes in Sherwood Forest.\n   - Added support for the ImagiNation Network (INN) demo.\n\n SCUMM:\n   - Fixed missing translations in the in-game quit and restart dialogs in Pajama Sam 1.\n   - Fixed visual glitches in DOTT that occurred after loading a savegame with the stereo\n     in Green Tentacle's room turned on.\n   - Improved timing and pathfinding in Maniac Mansion (C64 and Apple II versions).\n   - Added support for the Dutch demo of Let's Explore the Airport with Buzzy.\n\n Sherlock:\n   - Fixed a bug that could cause a crash in The Case of the Serrated Scalpel.\n   - Fixed an issue with item hotspots in The Case of the Serrated Scalpel.\n   - Fixed a bug that caused game lockups in the inventory of The Case of the Rose Tattoo.\n\n Amiga port:\n   - Added support for AmiUpdate autoupdates.\n\n Linux port:\n   - Added basic support for the snap packaging system.\n\n Windows port:\n   - Fixed taskbar support on Windows 10 onwards.\n   - Fixed keymapping for non-QWERTY keyboards.\n   - Added support for WinSparkle updater.\n\n\n#### 1.8.1 \"Where Is Your Android?\" (2016-05-25)\n\n New ports:\n   - Added Nintendo 3DS port.\n   - Added Android SDL port.\n\n General:\n   - Removed TESTING flag from several supported games.\n   - Added Chinese Pinyin translation.\n   - Fixed cursor stuttering in the launcher that occurred on some systems.\n\n BBVS:\n   - Fixed game restart.\n\n CinE:\n   - Fixed sound effect loading.\n\n Drascula:\n   - Fixed text alignment to be faithful to the original.\n   - Fixed character walking off screen.\n   - Fixed loading savegames in the Pendulum scene.\n   - Fixed wrong background for inventory items during chapter 6 in the\n     Spanish version.\n   - Fixed animations speed (they were running two times slower than in the\n     original engine).\n   - Fixed noise at start and/or end of speech. This was most noticeable\n     with the Spanish speech.\n   - Fixed delay when interacting with the verb menu and the inventory.\n   - Fixed possibility to pick up the axe in the castle multiple times.\n\n Gob:\n   - Fixed lock up for some games during sound initialization.\n\n KYRA:\n   - Fixed potential crash when using swamp snake potion on the rat in Hand\n     of Fate. (NOTE: This fix was included in version 1.8.0, but it was not\n     added to the NEWS file).\n   - Fixed missing voice reactions when hitting enemies in CD version of\n     Lands of Lore.\n\n Lab:\n   - Fixed lock-up during ending sequence.\n   - Improved internal game controls.\n   - Fixed lock-up during some in-game animations.\n\n SAGA:\n   - Fixed user interface colors in the French and German versions of I Have No\n     Mouth and I Must Scream.\n\n SCI:\n   - Make cursor workarounds work properly on OpenPandora (and other devices, that\n     support touch screen and analog sticks/mouse at the same time).\n   - Script patch to fix broken ending battle in multilingual King's Quest 5\n     (French, German + Spanish versions are all broken).\n   - Fixed invalid memory access, when loading broken King's Quest 5 credit music track.\n   - Fixed lowres/hires issues in King's Quest 6 when saving, changing the lowres/hires\n     setting and restoring the saved game afterwards.\n\n SCUMM:\n   - Fixed detection of Maniac Mansion from Day of the Tentacle in the Windows\n     version of ScummVM.\n   - Fixed a sound effect not stopping in Loom EGA with AdLib.\n\n Broken Sword 2.5:\n   - Added option to use English speech instead of German one when no speech is\n     available for the selected language.\n   - Fixed resource releasing on game exit.\n   - Fixed game restart after language change in-game.\n   - Fixed flickering in main Menu.\n   - Fixed long save time on Windows.\n\n Windows port:\n   - Fixed bug in MIDI device listing affecting cases where MIDI devices were\n     not usable.\n\n Mac OS X port:\n   - Dock menu for ScummVM now lists recently played games when ScummVM is\n     not running and allows starting those games.\n   - Enabled Sparkle application updater.\n\n GCW0 port:\n   - Improved support for built-in ScummVM documentation.\n\n\n#### 1.8.0 \"Lost with Sherlock\" (2016-03-04)\n\n New Games:\n   - Added support for Rex Nebular and the Cosmic Gender Bender.\n   - Added support for Sfinx.\n   - Added support for Zork Nemesis: The Forbidden Lands.\n   - Added support for Zork: Grand Inquisitor.\n   - Added support for The Lost Files of Sherlock Holmes: The Case of the\n     Serrated Scalpel.\n   - Added support for The Lost Files of Sherlock Holmes: The Case of the Rose\n     Tattoo.\n   - Added support for Beavis and Butthead in Virtual Stupidity.\n   - Added support for Amazon: Guardians of Eden.\n   - Added support for Broken Sword 2.5: The Return of the Templars.\n   - Added support for The Labyrinth of Time.\n\n New Ports:\n   - Added Raspberry Pi port.\n   - Added GCW0 port.\n\n General:\n   - Updated Munt MT-32 emulation code to version 1.5.0.\n\n SDL:\n   - Alt-x no longer quits ScummVM. Use Cmd-q/Ctrl-q/Ctrl-z instead; see README.\n   - On POSIX systems we now follow the XDG Base Directory Specification for\n     placement of files for users. This effectively results in new locations\n     for our configuration file, our log file, and our default savegame path.\n     We still support our previous locations. As long as they are present, we\n     continue to use them. Please refer to the README for the new locations.\n     File locations on Mac OS X are not affected by this change.\n\n 3 Skulls of the Toltecs:\n   - Improved AdLib music support.\n\n AGI:\n   - It is now possible to disable mouse support (except for Amiga versions\n     and fanmade games, that require a mouse).\n   - Fixed PCjr sound volumes.\n   - Major rewrite of graphics subsystem.\n   - Support for Apple IIgs, Amiga + Atari ST transitions, fonts and mouse\n     cursors. The Atari ST 8x8 system font is not included with ScummVM.\n   - Added ability to make for example a PC version look like an Apple IIgs\n     version. This includes palette, cursor, transition and even font. Just\n     set corresponding render mode.\n   - Fixed Apple IIgs game versions running too fast.\n   - Added support for automatic saving/restoring used by Mixed Up Mother Goose.\n   - Removed forced two second delay on room changes; replaced with heuristic.\n   - Fixed certain key bindings breaking after saving/reloading.\n\n AGOS:\n   - Fixed arpeggio effect used in music of Amiga version of Elvira 1.\n   - Fixed loading and saving progress in the PC version of Waxworks.\n   - Fixed verb area been removed in Amiga versions of Simon the Sorcerer 1.\n   - Added Accolade AdLib & MT-32 music drivers for the games:\n     Elvira 1, Elvira 2, Waxworks and Simon the Sorcerer 1 demo.\n   - Added Simon the Sorcerer 1 AdLib output. This vastly improves the AdLib\n     output and makes it closer to the original.\n\n Broken Sword 1:\n   - Fixed Macintosh version speech when running on big endian systems.\n   - Fixed loading from Main Menu in bull's head scene, and maybe other scenes.\n\n CinE:\n   - Added support for music in CD version of Future Wars.\n\n MADE:\n   - Improved AdLib music support in Return to Zork.\n\n SAGA:\n   - Improved AdLib music support.\n\n SCI:\n   - Handling of music priority has been greatly improved.\n   - A lot of fixes for original game script bugs that also occurred when\n     using the original interpreter. This affects the following games:\n     KQ6 (Dual Mode), LSL5, PQ1, QfG1 (EGA), QfG1 (VGA), QfG2, QfG3, SQ1,\n     SQ4 (CD).\n   - Restoring from the ScummVM in-game menu should now work all the time.\n   - Improved support for Japanese PC-9801 games.\n   - Default to hi res version of KQ6, changeable using engine option.\n\n SCUMM:\n   - Major improvements to Korean versions text rendering.\n   - Implemented original Maniac Mansion v0-v1 walking code.\n   - It is now possible to play Maniac Mansion from within Day of the\n     Tentacle, with a few caveats. See README for details.\n   - Alt-x can now be used to quit SCUMM games on all platforms.\n   - Improved lip sync animation in later HE games.\n\n Tinsel:\n   - Improved AdLib music support in Discworld 1.\n\n\n#### 1.7.0 \"The Neverrelease\" (2014-07-21)\n\n New Games:\n   - Added support for Chivalry is Not Dead.\n   - Added support for Return to Ringworld.\n   - Added support for The Neverhood.\n   - Added support for Mortville Manor.\n   - Added support for Voyeur.\n\n General:\n   - Updated Munt MT-32 emulation code to version 1.3.0.\n   - Switched from our custom JPEG and PNG decoders to libjpeg(-turbo) and\n     libpng, which are faster and can handle more images.\n     (NOTE: The change to libpng was done in version 1.6.0, but it was not\n     added to the NEWS file).\n   - Added generic OpenGL (ES) output (based on GSoC Task).\n   - The GUI can now be rendered in 32-bits.\n   - The build system has been changed to be more modular and easier to add new\n     engines.\n\n SDL:\n   - Added OpenGL graphics mode based on our generic OpenGL output. This\n     allows for arbitrary output sizes. However, it does not support special\n     filters like AdvMAME, HQ, etc.\n\n AGOS:\n   - Added mouse wheel support for inventory and save game lists.\n   - Enabled verb name display in Simon the Sorcerer 2.\n   - Fixed the Feeble Files loyalty rating in the English 4CD version. (This\n     was apparently a bug in the original game. It is currently unknown if\n     other versions still have the same problem.)\n\n Broken Sword 1:\n   - Added back support for MPEG-2 videos.\n\n Broken Sword 2:\n   - Added back support for MPEG-2 videos.\n\n CGE:\n   - Added an option to enable \"Color Blind Mode\" to the ScummVM GUI.\n\n Gob:\n   - Improved video quality in Urban Runner.\n\n Hopkins:\n   - Added an option to toggle \"Gore Mode\" from the ScummVM GUI.\n   - Fixed bug that could cause the music to stop prematurely.\n\n Pegasus:\n   - Fixed several rare crashes and glitches.\n   - Fixed multiple bugs carried over from the original binary.\n\n SCI:\n   - Added support for the more detailed RAVE lip syncing data in the Windows\n     version of King's Quest 6. Portraits should now be much more expressive\n     when talking.\n   - Added support for simultaneous speech and subtitles in the CD versions\n     of Laura Bow 2 and King's Quest 6 (toggled either in-game with the new\n     \"Dual\" audio state, or via the ScummVM audio options).\n   - Fixed music fading.\n   - Fixed several script bugs in Camelot, Crazy Nick's, Hoyle 3, QFG1VGA, KQ5,\n     KQ6, LB2, LSL2, LSL5, Pharkas, PQ1VGA, SQ4, SQ5.\n   - Improved the MIDI parser so that music event processing is done more\n     properly.\n\n SCUMM:\n   - Changed the saved game naming scheme of HE games to always contain\n     the target name.\n   - Fixed having multiple coaches in Backyard Football.\n   - Improved AdLib support for Loom and Indiana Jones and the Last Crusade.\n     This makes sound effects like, for example, the typewriter and waterfall\n     in Indiana Jones and the Last Crusade sound like in the original.\n   - Added support for the Steam versions of Indiana Jones and the Last\n     Crusade, Indiana Jones and the Fate of Atlantis, Loom and The Dig. Both\n     the Windows and the Macintosh versions are supported.\n\n Tony:\n   - Savegames in Tony Tough now work on big-endian systems.\n\n Tinsel:\n   - Discworld 1 and 2 no longer crash on big-endian systems.\n\n Android port:\n   - Added experimental support for the OUYA console.\n\n PS2 port:\n   - Added configurable TV modes: NTSC and PAL.\n   - Added configurable graphics modes: SDTV progressive, SDTV interlaced, EDTV\n     progressive and VESA.\n   - Added a configuration option for the HDD partition used.\n   - Added a configuration option for the IP address used.\n   - Added a configuration option to toggle USB mass storage.\n\n Tizen port:\n   - The BADA port has been merged/updated into Tizen.\n\n\n#### 1.6.0 \"+4 to engines\" (2013-05-31)\n\n New Games:\n   - Added support for 3 Skulls of the Toltecs.\n   - Added support for Eye of the Beholder.\n   - Added support for Eye of the Beholder II: The Legend of Darkmoon.\n   - Added support for Hopkins FBI.\n   - Added support for Tony Tough and the Night of Roasted Moths.\n   - Added support for The Journeyman Project: Pegasus Prime.\n   - Added support for the Macintosh version of Discworld 1.\n\n General:\n   - Added a new save/load chooser based on a grid of thumbnails. This is only\n     supported for resolutions bigger than 640x400. The old chooser is still\n     available and used for games without thumbnail support. It is possible to\n     select the old one as default too.\n   - Rewrote VideoDecoder subsystem.\n   - Added Galician translation.\n   - Added Finnish translation.\n   - Added Belarusian translation.\n   - Using the mouse wheel on a slider widget now changes the value by the\n     smallest possible amount. This is more predictable than the old behaviour,\n     which was to change the value by \"one pixel\" which would sometimes not\n     change it at all.\n   - Updated MT-32 emulation code to latest munt project snapshot.\n   - Added FluidSynth settings dialog, mainly for reverb and chorus settings.\n   - Fixed crash on certain Smacker movies.\n\n Cine:\n   - Improved audio support for Amiga and AtariST versions of Future Wars.\n     Now music fades out slowly instead of stopping immediately. Sound\n     effects are now properly panned, when requested by the game.\n\n CGE:\n   - Soltys contains a puzzle requiring the ALT key to be pressed while clicking\n     on an object. This puzzle has been disabled on devices not using this key.\n\n Drascula:\n   - Resolved multiple UI issues with the original save/load screen.\n   - Added advanced savegame functionality, including savegame timestamps and\n     thumbnails and the ability to load and delete savegames from the launcher.\n     It's now possible to use the ScummvM save/load dialogs.\n   - The F7 key (previously unmapped) now always shows the ScummVM load screen.\n     The F10 key displays either the original save/load screen, or the ScummVM\n     save screen, if the user has selected to use the ScummVM save/load\n     dialogs.\n\n Dreamweb:\n   - Now that the game is freeware, there is a small extra help text showing\n     the available commands in the in-game terminals when the player uses the\n     'help' command. Previously, players needed to consult the manual for the\n     available commands. Since this reference to the manual is a form of copy\n     protection, this extra line can be toggled by the ScummVM copy protection\n     command line option.\n\n Groovie:\n   - Simplified the movie speed options, and added a custom option for The 7th\n     Guest. Movie options are now \"normal\" and \"fast\", with the latter changing\n     the movie speed in T7G to match the faster movie speed of the iOS version.\n     The game entry might need to be readded in the launcher for the new setting\n     to appear.\n\n SAGA:\n   - Added music support for the Macintosh version of I Have No Mouth and, I\n     Must Scream.\n\n SCUMM:\n   - Implemented Monkey Island 2 Macintosh's audio driver. Now we properly\n     support its sample based audio output. The same output is also used for\n     the m68k Macintosh version of Indiana Jones and the Fate of Atlantis.\n   - Improved music support for the Macintosh version of Monkey Island 1. It\n     now uses the original instruments, rather than approximating them with\n     General MIDI instruments, and should sound a lot closer to the original.\n   - Added sound and music support for the Macintosh version of Loom.\n   - Handle double-clicking in the Macintosh version of Loom.\n   - Major bugfixes in INSANE (the Full Throttle bike fights).\n\n TOUCHE:\n   - Added support for Enhanced Music by James Woodcock\n     (http://www.jameswoodcock.co.uk/category/scummvm-music-enhancement-project/).\n\n\n#### 1.5.0 \"Picnic Basket\" (2012-07-27)\n\n New Games:\n   - Added support for Backyard Baseball 2003.\n   - Added support for Blue Force.\n   - Added support for Darby the Dragon.\n   - Added support for Dreamweb.\n   - Added support for Geisha.\n   - Added support for Gregory and the Hot Air Balloon.\n   - Added support for Magic Tales: Liam Finds a Story.\n   - Added support for Once Upon A Time: Little Red Riding Hood.\n   - Added support for Sleeping Cub's Test of Courage.\n   - Added support for Soltys.\n   - Added support for The Princess and the Crab.\n\n General:\n   - Updated MT-32 emulation code to latest munt project snapshot. The emulation\n     improved dramatically.\n   - Implemented support for TrueType fonts via FreeType2 in our GUI. Along\n     with it GNU FreeFont was also added to our modern theme. Note that not all\n     ports take advantage of this.\n   - Added Basque translation.\n   - Added custom game and engine options in the AGI, DREAMWEB, KYRA, QUEEN,\n     SKY and SCI engines. It is now possible to toggle these options via the\n     Engine tab when adding or editing a configuration for a game. In most\n     cases, you will have to run each game once or readd them all in ScummVM's\n     launcher in order to get the custom options tab.\n   - Improved predictive dialog look.\n   - Various GUI improvements.\n\n Broken Sword 1:\n   - Fixed incorrect sound effects in the DOS/Windows demo.\n   - Added support for PlayStation videos.\n   - Fixed missing subtitles in the demo.\n\n Broken Sword 2:\n   - Added support for PlayStation videos.\n\n Cine:\n   - Implemented Roland MT-32 output driver.\n\n Drascula:\n   - Added Spanish subtitles in the Von Braun cutscene (#5372: no subtitles\n     in scene with \"von Braun\").\n\n Gob:\n   - Fixed a crash in Lost in Time.\n   - Rewrote the AdLib player. Enabled the now working MDY player in\n     Fascination and Geisha.\n\n SCUMM:\n   - Added support for the Macintosh version of SPY Fox in Hold the Mustard.\n   - Added a difficulty selection dialog for Loom FM-TOWNS.\n   - Fixed graphical glitches in HE98 version of Pajama Sam's Lost & Found.\n\n iPhone port:\n   - Changed \"F5 (menu)\" gesture to open up the global main menu instead.\n   - Added support for custom cursor palettes, this makes the modern theme use\n     the red pointer cursor for example.\n   - Added aspect ratio correction feature.\n   - Implemented 16 bits per pixel support for games.\n\n Maemo port:\n   - Added support for Nokia 770 running OS2008 HE.\n   - Added configurable keymap.\n\n Windows port:\n   - Changed default savegames location for Windows NT4/2000/XP/Vista/7.\n     (The migration batch file can be used to copy savegames from the old\n     default location, to the new default location).\n\n\n#### 1.4.1 \"Subwoofer Release\" (2012-01-27)\n\n AGOS:\n   - Fixed loading videos directly from InstallShield cabinets in the Windows\n     version of the The Feeble Files.\n\n BASS:\n   - Added support for Enhanced Music by James Woodcock\n     (http://www.jameswoodcock.co.uk/?p=7695).\n\n Broken Sword 2:\n   - Slight graphics improvement for PSX version.\n\n KYRA:\n   - Fixed bug in the original Lands of Lore GUI which made ScummVM error out\n     in the case the user did not have a contiguous save slot usage.\n   - Add support for original DOS Lands of Lore save files (also applies to save\n     files made with the GOG release).\n\n SCI:\n   - Fixed race condition in SCI1.1 palette changes. This fixes an error in\n     QFG1VGA, when sleeping at Erana's place.\n   - The option to toggle sound effect types between digitized and synthesized\n     has been disabled until a more user-friendly GUI option is possible.\n     Digital sound effects are always preferred for now.\n   - Fixed a case where starting a new song didn't fully reset its channels,\n     thus some notes sounded wrong.\n\n\n#### 1.4.0 \"10th Anniversary\" (2011-11-11)\n\n New Games:\n   - Added support for Lands of Lore: The Throne of Chaos.\n   - Added support for Blue's Birthday Adventure.\n   - Added support for Ringworld: Revenge Of The Patriarch.\n   - Added support for the Amiga version of Conquests of the Longbow.\n\n New Ports:\n   - Added PlayStation 3 port.\n\n General:\n   - Fixed the ARM assembly routine for reverse stereo audio.\n   - Added support for building with MacPorts out of the box.\n\n AGI:\n   - Implemented sound support for the DOS version of Winnie the Pooh in the\n     Hundred Acre Wood.\n\n AGOS:\n   - Implemented support for loading data directly from InstallShield\n     cabinets in The Feeble Files and Simon the Sorcerer's Puzzle Pack.\n   - Fixed loading and saving in the PC version of Waxworks.\n   - Fixed music in the PC versions of Elvira 1/2 and Waxworks.\n\n Groovie:\n   - Added support for the iOS version of The 7th Guest.\n\n Lure:\n   - Fixed crash when trying to talk and ask something at the same time.\n\n SCI:\n   - Added better handling of digital vs. synthesized sound effects. If the\n     \"Mixed AdLib / MIDI mode\" checkbox is checked, the engine will prefer\n     digital sound effects, otherwise their synthesized counterparts will be\n     preferred instead, if both versions of the same effect exist.\n\n SCUMM:\n   - Implemented PC Speaker support for SCUMM v5 games.\n   - Fixed priority bug in iMuse. As a result the AdLib music should sound\n     better, since important notes are not interrupted anymore.\n   - Implemented CMS support for Loom, The Secret of Monkey Island and\n     Indiana Jones and the Last Crusade.\n   - Improved palette handling for the Amiga version of Indiana Jones and the\n     Fate of Atlantis.\n\n Broken Sword 1:\n   - Fix freeze in Windows demo.\n   - Fix crash when using cutscene subtitles pack with the Macintosh version.\n\n Tinsel:\n   - Fixed deleting saved games from the list of saved games (from the launcher\n     and the in-game ScummVM menu).\n   - The US version of Discworld II now shows the correct title screen and\n     language flag.\n\n Android port:\n   - Fixed plugins on Android 3.x.\n   - Moved the default saved game location to the SD card.\n\n\n#### 1.3.1 \"All Your Pitches\" (2011-07-12)\n\n General:\n   - Improved audio device detection and fallback.\n     There should be no more silent errors due to invalid audio devices.\n     Instead ScummVM should pick up a suitable alternative device.\n\n Mohawk:\n   - Added detection entries for more variants of some Living Books\n     games.\n\n Tinsel:\n   - Fixed a regression that made Discworld uncompletable.\n\n SAGA:\n   - Fixed a regression in Inherit the Earth's dragon walk code which\n     was causing crashes there.\n   - Fixed a regression causing various crashes in I Have No Mouth and\n     I Must Scream.\n\n SCI:\n   - Added detection entries for some Macintosh game versions.\n   - Audio settings are now stored correctly for the CD version of EcoQuest 1.\n\n SCUMM:\n   - Fixed graphics bug in FM-TOWNS versions of games on ARM devices\n     (Android, iPhone, etc.).\n\n\n#### 1.3.0 \"Runner\" (2011-05-28)\n\n New Games:\n   - Added support for Backyard Baseball.\n   - Added support for Backyard Baseball 2001.\n   - Added support for Urban Runner.\n   - Added support for Playtoons: Bambou le Sauveur de la Jungle.\n   - Added support for Toonstruck.\n   - Added support for Living Books v1 and v2 games.\n   - Added support for Hugo's House of Horrors, Hugo 2: Whodunit?\n     and Hugo 3: Jungle of Doom.\n   - Added support for Amiga SCI games (except Conquests of the Longbow).\n   - Added support for Macintosh SCI1 games.\n\n New Ports:\n   - Added WebOS port.\n\n General:\n   - Added support for loadable modules on platforms without a dynamic\n     loader (GSoC Task).\n   - Added Danish translation.\n   - Added Norwegian Bokmaal translation.\n   - Added Norwegian Nynorsk translation.\n   - Added Swedish translation.\n   - Added Debug Console to Cine, Draci, Gob, MADE, Sword1, Touche and\n     Tucker Engines.\n   - Closed significant memory leaks. RTL should now be more usable.\n\n AGOS:\n   - Closed memory leaks in Simon 2 and Feeble Files.\n\n Cine:\n   - Corrected memory leaks and invalid memory accesses.\n     Future Wars should be more stable.\n   - Made Operation Stealth completable, though significant graphical\n     glitches remain so not official supported.\n\n Drascula:\n   - Added German and French subtitles in the Von Braun cutscene (#5372:\n     no subtitles in scene with \"von Braun\").\n   - Improved French translation of the game.\n   - Added support for \"Return To Launcher\".\n\n Gob:\n   - Fixed \"Goblin Stuck On Reload\" bugs affecting Gobliiins.\n\n Kyra:\n   - Closed memory leaks.\n\n Parallaction:\n   - Corrected issue which could cause crash at engine exit.\n   - Closed memory leaks in Nippon Safes Amiga.\n\n SCI:\n   - Added a CMS music driver for SCI1 - SCI1.1 games.\n   - Added an option to toggle undithering from the ScummVM GUI.\n   - Added several previously missing parts of the game state in saved games,\n     such as game played time, script created windows, the script string heap\n     and information related to the text parser in old EGA games.\n   - Added support for SCI1.1 magnifier cursors.\n   - Added support for the keypad +/- keys.\n   - Added support for the alternative General MIDI tracks in the Windows CD\n     versions of Eco Quest, Jones in the Fast Lane, King's Quest 5 and Space\n     Quest 4.\n   - Added support for the alternative Windows cursors in the Windows version\n     of King's Quest 6.\n   - Added support for simultaneous speech and subtitles in the CD versions of\n     Space Quest 4 and Freddy Pharkas.\n   - Corrected resource loading leaks.\n   - Corrected several problems and issues in the Skate-O-Rama rooms in Space\n     Quest 4.\n   - Corrected several issues in Hoyle Classic Card Games.\n   - Fixed several graphical glitches (like, for example, parts of the screen\n     that weren't erased correctly under some rare circumstances).\n   - Fixed several script bugs.\n   - Fixed several pathfinding related issues and lockups (like, for example,\n     a lockup in the shower scene of Laura bow 1 and pathfinding in some\n     screens during the chase sequence in Laura Bow 2).\n   - Fixed several music related glitches and possible lockups (like, for\n     example, a rare music lockup that occurred when loading a saved game\n     outside the palace in Quest for Glory 3).\n   - Fixed possible problems and lockups in the character import screens of\n     Quest for Glory 2 and 3.\n   - Fixed a bug that caused a lockup in the SCI1 CD version of Mixed Up Mother\n     Goose, after Tommy Tucker's song.\n   - Fixed a script bug in the CD version of King's Quest 5, which caused a\n     lockup under certain circumstances when going outside the witch's house\n     in the dark forest.\n   - Function keys now work correctly when the num lock key is on.\n   - Improved support for fanmade game scripts.\n   - Improved support for non-English versions of games.\n   - Made several enhancements and fixes related to MT-32 music (e.g. reverb).\n   - Music is no longer out of tune when loading saved games.\n\n SCUMM:\n   - Improved support for FM-TOWNS versions of games.\n\n Sky:\n   - Fixed crashes on sequences for several ports (Android, OpenGL, ...).\n\n Teenagent:\n   - Closed memory leaks.\n\n Tinsel:\n   - Closed memory leaks in Coroutines.\n   - Added enhanced music support for the German CD \"Neon Edition\" re-release\n     of Discworld 1.\n\n Touche:\n   - Corrected memory leaks and minor issues.\n\n Tucker:\n   - Added workarounds for several issues present in the original game.\n\n SDL ports:\n   - Closed memory leaks in Mouse Surfaces.\n\n Android port:\n   - Switched to the official NDK toolchain for building.\n   - Fixed GFX output for various devices.\n   - Fixed various crashes.\n   - Switched to the native screen resolution to improve text readability.\n   - Added support for pause/resume.\n   - Added support for games using 16bit graphics.\n   - Increased the performance significantly.\n   - Added support for the \"Fullscreen mode\" option. Unchecking this keeps the\n     game's aspect ratio.\n   - Added a new graphics mode for linear filtering.\n   - Overhauled the input system (see README.Android).\n   - Added a MIDI driver based on SONiVOX's Embedded Audio Synthesis (EAS).\n\n Nintendo DS port:\n   - Added support for loadable modules.\n\n PSP port:\n   - Added support for loadable modules.\n   - Added image viewer.\n\n PS2 port:\n   - Added support for loadable modules.\n\n Wii/GameCube port:\n   - Added support for loadable modules.\n   - Fixed 16bit mouse cursors on HE games.\n\n\n#### 1.2.1 \"Bork Bork Bork\" (2010-12-19)\n\n General:\n   - Added Hungarian translation.\n   - Added Brazilian Portuguese translation.\n\n Cruise:\n   - Fixed a problem with Raoul appearing when examining the Book.\n\n Groovie:\n   - Fixed a regression that made the Russian version of T7G crash.\n\n Lure:\n   - Fixed several NPC movement bugs.\n\n\n#### 1.2.0 \"FaSCInating release\" (2010-10-15)\n\n New Games:\n   - Added support for Fascination.\n\n New Games (Sierra SCI0 - SCI1.1):\n   - Added support for Castle of Dr. Brain (EGA and VGA).\n   - Added support for Codename: ICEMAN.\n   - Added support for Conquests of Camelot.\n   - Added support for Conquests of the Longbow (EGA and VGA).\n   - Added support for EcoQuest: The Search for Cetus.\n   - Added support for EcoQuest 2: Lost Secret of the Rainforest.\n   - Added support for Freddy Pharkas: Frontier Pharmacist.\n   - Added support for Hoyle's Book of Games 1.\n   - Added support for Hoyle's Book of Games 2.\n   - Added support for Hoyle's Book of Games 3 (EGA and VGA).\n   - Added support for Hoyle Classic Card Games.\n   - Added support for Jones in the Fast Lane.\n   - Added support for King's Quest I (SCI remake).\n   - Added support for King's Quest IV (SCI version).\n   - Added support for King's Quest V (EGA and VGA).\n   - Added support for King's Quest VI (low and hi res).\n   - Added support for Laura Bow: The Colonel's Bequest.\n   - Added support for Laura Bow 2: The Dagger of Amon Ra.\n   - Added support for Leisure Suit Larry 1 (SCI remake) (EGA and VGA).\n   - Added support for Leisure Suit Larry 2.\n   - Added support for Leisure Suit Larry 3.\n   - Added support for Leisure Suit Larry 5 (EGA and VGA).\n   - Added support for Leisure Suit Larry 6 (low res).\n   - Added support for Mixed-up Fairy Tales.\n   - Added support for Mixed-up Mother Goose.\n   - Added support for Pepper's Adventures in Time.\n   - Added support for Police Quest I (SCI remake).\n   - Added support for Police Quest II.\n   - Added support for Police Quest III (EGA and VGA).\n   - Added support for Quest for Glory I/Hero's Quest.\n   - Added support for Quest for Glory I VGA remake.\n   - Added support for Quest for Glory II.\n   - Added support for Quest for Glory III.\n   - Added support for Slater & Charlie go camping.\n   - Added support for Space Quest I (SCI remake) (EGA and VGA).\n   - Added support for Space Quest III.\n   - Added support for Space Quest IV (EGA and VGA).\n   - Added support for Space Quest V.\n   - Added support for The Island of Dr. Brain.\n\n New Ports:\n   - Added Android port.\n   - Added Dingux port.\n   - Added Caanoo port (based on the GP2XWiz port).\n   - Added OpenPandora port.\n\n General:\n   - Removed the outdated PalmOS port.\n   - Switched to the \"fast\" DOSBox OPL emulator.\n   - Fixed a crash in the rjp1 player code affecting the FOTAQ Amiga version.\n   - Added support for more original media layouts.\n   - Added support for GUI localization.\n   - Improved GUI by adding tooltips and radiobuttons.\n   - Improved GUI usability by hiding more irrelevant options not supported by\n     specific games.\n\n AGI:\n   - Fixed number of GFX glitches.\n   - Made PIC drawing code picture perfect.\n   - Added support of MIDI devices.\n   - Added support for accurate Tandy sound emulation. Switched to it as default.\n\n Broken Sword 2:\n   - Fixed missing speech in some cutscenes.\n   - Fixed a memory leak that would eventually cause the game to hang.\n     (#4828 - BS2: Game lockup in British Museum)\n\n Drascula:\n   - Fixed number of GFX glitches.\n   - Made many cutscenes smoother.\n   - Changed behavior of items menu. Now it shows up on mouse up.\n\n Groovie:\n   - Added support for the Macintosh version of The 7th Guest.\n   - Added support for custom MT-32 instruments.\n\n KYRA:\n   - Fixed some minor graphical glitches.\n   - Implemented formerly missing recreation of some in game items.\n   - Added support for playing Kyrandia 3 with the original CD file layout.\n\n LURE:\n   - Fixed bug where Goewin could get stuck in the Weregate.\n   - Fixed issue with Ratpouch repeatedly moving between two rooms.\n   - Fix for Goewin losing her schedule after Were-cave.\n   - Fix for player getting stuck in sewer exit room.\n\n Parallaction:\n   - Made part one of The Big Red Adventure completable.\n\n SAGA:\n   - Fixed graphics glitches in several scenes.\n\n SCUMM:\n   - Several improvements in Maniac Mansion NES.\n\n PSP port:\n   - New backend design: fixed minor graphical issues and enabled 16-bit support.\n   - Enabled playback of MP3 files using the Media Engine. This means that\n     the port is optimized for MP3 files (as opposed to OGG).\n   - Many optimizations. Everything should run faster.\n\n Wii port:\n   - Added support for USB2 mass storage devices (requires The Homebrew Channel\n     >= v1.0.8 with IOS58).\n\n GameCube port:\n   - Added support for DVDs with the ISO9660 file system.\n\n GP2X port:\n   - Added support for dynamic engine plugins (experimental).\n   - Reworked control system and better touchscreen support.\n\n GP2XWiz/Caanoo port:\n   - Improved downscale code to minimise 'tearing' corruption.\n   - Reworked control system and better touchscreen support.\n   - Renamed backend from GP2XWIZ to GPH to better reflect\n     the supported devices.\n\n\n#### 1.1.1 \"Better version\" (2010-05-02)\n\n New Ports:\n   - Added Nintendo 64 port. (Actually added in 1.1.0, but forgot to mention it. oops)\n\n General:\n   - Fixed several minor bugs here and there.\n\n Drascula:\n   - Fixed regression that caused some texts to always be in English, even when\n     using another language. (#4819 - DRASCULA: missing german translation)\n\n KYRA:\n   - Fixed a bug which caused the DOS versions to crash before the credits when\n     AdLib music is selected.\n\n LURE:\n   - Fixed several memory leaks.\n   - Corrected problems in the handling of followers when blocked from performing\n     actions by closed doors between rooms.\n   - Solved issues with Goewin not always correctly following the player out of the caves.\n\n Tinsel:\n   - Fix video playback regression in Discworld 2.\n\n Parallaction:\n   - Fix several crashes and other regressions in Nippon Safes, including\n     bugs 2969211, 2969232, 2969234, 2969257, 2970141.\n\n Wii/GameCube port: (Also forgot to mention in 1.1.0)\n   - Added support for games using 16bit graphics.\n   - Complete GFX overhaul (new video modes, better performance,\n     picture smoothing, fine grained overscan settings).\n   - Added a new options dialog for Wii/Gamecube specific settings.\n   - Fixed a GFX glitch on savegame thumbnails.\n   - Added support for SMB mountpoints (Samba/Windows shares).\n   - Added an on-screen console, which is shown when ScummVM exits abnormally.\n   - Fixed a couple of crashes when using Ogg/Vorbis encoded sound files.\n   See the bundled READMII.txt file for more information.\n\n PSP port: (Also forgot to mention in 1.1.0)\n   - Added plugin support which allows the PSP Phat to run every game.\n   - Added a new virtual keyboard optimized for rapid D-Pad input.\n\n\n#### 1.1.0 \"Beta quadrant\" (2010-04-04)\n\n New Games:\n   - Added support for Blue's Art Time Activities.\n   - Added support for Blue's Reading Time Activities.\n   - Added support for Freddi Fish 5: The Case of the Creature of Coral Cove.\n   - Added support for Pajama Sam: Games to Play on Any Day.\n   - Added support for SPY Fox 3: Operation Ozone.\n   - Added support for Dragon History.\n   - Added support for TeenAgent.\n\n General:\n   - Added support for a custom SJIS font for FM-TOWNS and PC98 games.\n   - Added support for 16bit graphics. (GSoC Task)\n   - Removed QuickTime MIDI backend on Mac OS X; it was buggy and did not\n     compile on modern systems.\n\n CinE:\n   - Added support for Amiga style menus for Amiga versions of Future Wars.\n\n KYRA:\n   - Added support for the Amiga version of The Legend of Kyrandia.\n     (sound support was done as a GSoC Task)\n   - Adapted KYRA to support the custom SJIS font.\n\n SCUMM:\n   - Added support for the PC-Engine version of Loom.\n   - Added support for music and sound effects in the the Amiga version of\n     The Secret of Monkey Island. (GSoC Task)\n   - Fixed some other bugs related to game versions for the Amiga.\n   - Added support for original save/load dialog in MM NES.\n   - Added support for savepoint passcodes for Sega CD MI1 via debugger command 'passcode'.\n   - Added support for Kanji rendering in Japanese version of Monkey Island Sega CD.\n\n\n#### 1.0.0 \"Shiny Logo\" (2009-11-15)\n\n New Ports:\n   - Added MotoEZX and MotoMAGX ports.\n\n General:\n   - Fixed several bugs in GUI.\n   - Updated the project logo and icons.\n   - Clarified licenses for several PS2 port files.\n\n AGI:\n   - Fixed crash on game exit.\n   - Fixed crash at detection of some games.\n\n AGOS:\n   - Fixed load/save code for PC version of Waxworks.\n   - Fixed undo in Puzzle Pack games.\n\n Broken Sword 1:\n   - Fixed missing background sound effects in some rooms.\n\n CinE:\n   - Fixed crashes with Future Wars and Operation Stealth demos.\n\n Cruise:\n   - Fix freeze on game pause.\n\n Gob:\n   - Fixed gfx glitch in Lost in Time.\n   - Fixed hotspot-related regressions in Gob2.\n   - Fixed several regressions in Gob3.\n   - Fixed crash in Bargon Attack intro.\n   - Fixed animations in Win3.1 version of Gob3.\n\n Groovie:\n   - Fixed video performance on PSP.\n   - Fixed menu blanking in some instances.\n\n Kyra:\n   - Fix possible corruption of restart game save in Kyrandia 1.\n   - Fix GFX glitch at the broken bridge.\n   - Fix for brandon turning invisible in some situations in Kyrandia 1.\n\n MADE:\n   - Fixed performance on NDS.\n   - Fixed crash in Return to Zork demo.\n\n Parallaction:\n   - Fixed several regressions in Nippon Safes.\n   - Fixed music in sushi bar in Nippon Safes.\n\n SCUMM:\n   - Fixed crash on Macintosh versions of Putt-Putt Joins the Parade and Fatty\n     Bear's Birthday Surprise.\n   - Fixed game save in Macintosh versions of HE games.\n   - Fixed default save game path in later HE games.\n   - Fixed palette in NES version of Maniac Mansion.\n   - Fixed palette in Amiga version of Secret of Monkey Island.\n   - Fixed cutscenes not stopping music after pressing ESC in DIG.\n   - Fixed lip-sync in Fatty Bear.\n   - Fixed crash in FT when entering inventory.\n\n Tinsel:\n   - Fixed crash in palace.\n   - Fixed crash when talking to the old lady.\n   - Fixed partially off-screen text in DW1.\n\n NDS port:\n   - Added mouse pad undeneath onscreen keyboard.\n   - Added ability to scroll when cursor reaches edge of screen (in mouse pad\n     mode).\n   - Made cd audio read from track01.wav as well as track1.wav.\n   - Fixed bug with switching modes with keyboard active.\n\n PSP port:\n   - Fixed video flickering and stretching in some situations.\n   - Improved suspend/resume support.\n\n WinCE port:\n   - Improved compatibility with VGA devices.\n\n\n#### 1.0.0rc1 \"Grog XD\" (2009-08-31)\n\n New Games:\n   - Added support for Discworld.\n   - Added support for Discworld 2 - Missing Presumed ...!?.\n   - Added support for Return to Zork.\n   - Added support for Leather Goddesses of Phobos 2.\n   - Added support for The Manhole.\n   - Added support for Rodney's Funscreen.\n   - Added support for Cruise for a Corpse.\n\n General:\n   - Added experimental AdLib emulator from DOSBox.\n   - Added quick search to Launcher.\n   - Improved modern GUI theme look.\n   - Added per-game GUI options.\n   - Improved Mass Add dialog.\n\n New Ports:\n   - Added GP2X Wiz port.\n\n AGI:\n   - Increased compatibility for Sierra games.\n   - Implemented all 'unknown' commands.\n\n Beneath a Steel Sky:\n   - Changed the game speed to match the original game (previously\n     it ran too fast).\n\n Broken Sword 1:\n   - Added support for the original cutscenes.\n   - Dropped support for the now obsolete MPEG2 cutscenes.\n   - Added support for the PlayStation version.\n\n Broken Sword 2:\n   - Added support for the original cutscenes.\n   - Dropped support for the now obsolete MPEG2 cutscenes.\n   - Dropped support for playing cutscene sound without the video.\n   - Added support for the PlayStation version.\n\n Gob:\n   - Introduced a new savegame format to fix a fatal flaw of the old one,\n     breaking compatibility with old savegames made on big-endian systems.\n\n Groovie:\n   - Increased microscope puzzle difficulty to match original.\n\n KYRA:\n   - Added support for PC Speaker based music and sound effects.\n   - Added support for 16 color dithering in Kyrandia PC-9801.\n\n PSP port:\n   - Added support for sleep mode (suspend/resume).\n\n WinCE port:\n   - Speed optimized versions of low-res Smartphone and 2x scalers.\n   - New aspect correction scaler for VGA (or higher) devices.\n   - Dropped support for MPEG-2 and FLAC.\n\n\n#### 0.13.1 \"SAGA returns\" (2009-04-27)\n\n AGOS:\n   - Fixed crash after OmniTV video is played in The Feeble Files.\n   - Fixed crashes when exploring Jack the Ripper scene in the PC version of\n     the Waxworks.\n   - Fixed palette glitches in the AtariST version of Elvira 2.\n   - Fixed noise that can occur when sound effects are played, when exploring\n     Pyramid scene in the Waxworks.\n\n Gob:\n   - Fixed a crash in the Italian version of Woodruff.\n\n Groovie:\n   - Fixed some issues with music in The 7th Guest.\n\n Parallaction:\n   - Fixed the sarcophagus puzzle in Nippon Safes.\n\n SAGA:\n   - Fixed a crash in Inherit the Earth.\n   - Fixed glitches in the save/load dialog.\n\n Sword2:\n   - Fixed random sound corruption when using the original sound files.\n\n Game launcher:\n   - Fixed a case where memory could be corrupted.\n   - Fixed the small cursor in the modern theme.\n   - Fixed a bug in the theme engine, which could cause crashes.\n   - Made the file browser bigger in 1x mode.\n\n iPhone port:\n   - Fixed backspace handling on the iPhone soft keyboard.\n\n DS port:\n   - Added support for the Global Main Menu feature.\n\n PS2 port:\n   - Switched to the new GUI and theme code.\n   - All possible devices are supported to store, play and save games\n     (CD, HD, USB, MC and remote).\n   - Optimized cache/read-ahead for every media.\n   - Added support for the Return to Launcher feature.\n\n Symbian port:\n   - Added Bluetooth mouse support.\n   - Added support for the Return to Launcher feature.\n\n WinCE port:\n   - Fixed an issue which could cause random crashes with VGA devices.\n\n\n#### 0.13.0 \"More Guests\" (2009-02-28)\n\n General:\n   - Added MIDI driver for Atari ST / FreeMint.\n   - Added a 'Load' button to the Launcher (not supported by all engines).\n     (GSoC Task)\n   - Added a new global main menu (GMM) dialog usable from all engines.\n     (GSoC Task)\n   - Added the ability to return to the launcher from running games (via\n     the GMM). (GSoC Task)\n   - Rewrote GUI renderer to use an vector based approach. (GSoC Task)\n   - Rewrote GUI configuration to use XML. (GSoC Task)\n\n New Games:\n   - Added support for Blue's 123 Time Activities.\n   - Added support for Blue's ABC Time Activities.\n   - Added support for Bud Tucker in Double Trouble.\n   - Added support for The 7th Guest.\n\n AGOS:\n   - Added support for the original cutscenes of The Feeble Files.\n   - Added support for text compression in the AtariST version of Elvira 1.\n   - Fixed combining items in Waxworks.\n   - Fixed display of spell descriptions in Elvira 2.\n\n KYRA:\n   - Added support for Auto-save feature.\n   - Added support for MIDI music.\n\n Parallaction:\n   - Credits of the Nippon Safes Amiga demo are now shown correctly.\n\n SCUMM:\n   - Implemented radio-chatter effect in The DIG.\n\n\n#### 0.12.0 \"&nbsp;\" (2008-08-31)\n\n New Games:\n   - Added support for The Legend of Kyrandia: Book Two: Hand of Fate.\n   - Added support for The Legend of Kyrandia: Book Three: Malcolm's Revenge.\n   - Added support for Lost in Time.\n   - Added support for The Bizarre Adventures of Woodruff and the Schnibble.\n   - Added support for the PC version of Waxworks.\n   - Added support for the Macintosh version of I Have no Mouth, and I\n     must Scream.\n   - Added support for Drascula: The Vampire Strikes Back.\n\n General:\n   - Added CAMD MIDI driver for AmigaOS4.\n   - Revived the PS2 port (was already in 0.11.1 but was forgotten in the\n     release notes).\n   - Plugged numerous memory leaks in all engines (part of GSoC'08 task).\n   - Added audio double buffering to the SDL backend, which fixes the\n     problems with the MT-32 emulator on Mac OS X (for now only enabled\n     on Mac OS X).\n\n AGOS:\n   - Fixed crashes during certain music in Amiga versions of Elvira 1 and\n     Simon the Sorcerer 1.\n   - Fixed palette issues in Amiga versions of Simon the Sorcerer 1.\n\n Queen:\n   - Speech is played at the correct sample rate. (It used to be pitched a bit\n     too low.)\n\n SCUMM:\n   - Rewrote parts of Digital iMUSE, fixing some bugs.\n   - Rewrote the internal timer code, fixing some speed issues in e.g. COMI.\n   - Improved support for sound effects in Amiga version of Zak McKracken.\n   - Added support for mixed AdLib/MIDI mode in Monkey Island 1 (Floppy).\n\n\n#### 0.11.1 \"Fixed exist()nce\" (2008-02-29)\n\n SCUMM:\n   - Improvements for Digital iMUSE subsystem. This fixes several glitches in\n     The Curse of Monkey Island.\n   - Fixes for cursors in HE games.\n\n AGI:\n   - Fix for zombies in King's Quest 4.\n   - Fix for changing palettes in fanmade games using AGIPAL.\n\n Lure:\n   - Fixed some conversation crashes in the German version.\n   - Fixed operation of the optional copy protection dialog in the German\n     version.\n   - Added saving of conversation flags as to whether a particular conversation\n     option had been previously selected or not.\n   - Fixed glitch that could cause transformation sparkle to happen a second\n     time.\n   - Fixed behavior of Goewin when you rejoin her after meeting the dragon.\n\n SAGA:\n   - Fix for rat maze bug in Inherit the Earth which made game not completable.\n   - Fixes for Inherit the Earth and I Have no Mouth game startup on a number\n     of platforms.\n   - Reduced the number of simultaneous open files in I Have no Mouth, to allow\n     it to run on platforms that can keep a limited amount of files open (e.g.\n     on the PSP).\n   - Fixed graphics glitch in Inherit the Earth with simultaneous speech.\n   - Fixed palette glitch in Inherit the Earth when looking at the map while at\n     the docks.\n\n\n#### 0.11.0 \"Your Palindrome\" (2008-01-15)\n\n New Games:\n   - Added support for Elvira: Mistress of the Dark.\n   - Added support for Elvira 2: The Jaws of Cerberus.\n   - Added support for I Have no Mouth, and I Must Scream (demo and full game).\n   - Added support for preAGI game Mickey's Space Adventure.\n   - Added support for preAGI game Troll's Tale.\n   - Added support for preAGI game Winnie the Pooh in the Hundred Acre Wood.\n   - Added support for Amiga version of Waxworks.\n   - Added support for Lure of the Temptress.\n\n New Ports:\n   - Added iPhone port.\n   - Added Maemo port for Nokia Internet tablets.\n\n General:\n   - Added ARM assembly routines for code in the sound mixer and SCUMM\n     video playback, resulting in some nice speedups on several ports.\n   - Improved the way keyboard input is handled internally, resolving\n     some odd quirks in some game / port combinations.\n   - Added optional 'confirm exit' dialog to the SDL backend.\n   - Added support for TiMidity++ MIDI server.\n   - Added DMedia MIDI driver for IRIX.\n   - Improved detection of new game variants and localized versions.\n   - Completely reworked internal access to files. (GSoC Task)\n   - Added option to delete games from the list with Del key.\n   - Added support for \"~/\" prefix being substituted by $HOME in paths\n     on POSIX systems (Linux, Mac OS X etc.).\n\n AGI:\n   - Added support for AGI256 and AGI256-2 hacks. (GSoC Task)\n   - Added support for Amiga menus and palettes. (GSoC Task)\n   - Better support for early Sierra AGI titles.\n\n AGOS:\n   - Fixed crashes related to OmniTV playback in The Feeble Files.\n   - Improved work on 64-bit systems.\n\n Broken Sword 1:\n   - Added support for FLAC encoded music.\n\n Kyrandia:\n   - Added support for Macintosh version.\n\n Parallaction:\n   - Added support for Amiga version of Nippon Safes, Inc.\n   - Many bugfixes.\n\n Queen:\n   - Added support for AdLib music.\n   - Added missing music patterns playback in Amiga version.\n\n SCUMM:\n   - Added subtitle skipping (via '.' key) in older games which didn't have\n     this feature so far (e.g. Zak, MM, Indy3, Loom).\n   - Added support for Chinese COMI.\n   - Better support for eastern versions of games.\n   - Various fixes for COMI and other games.\n   - Added support for original save menus (browse only). Use Alt-F5 to\n     activate.\n   - Added support for Spanish version of NES Maniac Mansion.\n   - Better support for German version of C64 Maniac Mansion.\n   - Fixed bug with cursors in Windows versions of Humongous Entertainment\n     games.\n\n SAGA:\n   - Added support for compressed sound effects, voices and music.\n\n Touche:\n   - Added workarounds for some glitches/issues present in the original game.\n\n WinCE Port:\n   - Switched compilers again. Now using cegcc (http://cegcc.sourceforge.net/).\n   - Plugins now supported for WinCE (but not used in this release).\n   - Redesigned 'Free Look' action, mainly for the lure engine's requirements.\n   - Smaller optimization setting to counteract the growth of the executable.\n   - Various bug fixes.\n\n GP2X Port:\n   - Support F200 Touchscreen.\n   - Various fixes to input code.\n\n\n#### 0.X.0 \"Tic-tac-toe edition\" (2007-06-20)\n\n New Games:\n   - Added Cinematique evo 1 engine. Currently only Future Wars is supported.\n   - Added Touché: The Adventures of the Fifth Musketeer engine.\n   - Added support for Gobliins 2.\n   - Added support for Simon the Sorcerer's Puzzle Pack.\n   - Added support for Ween: The Prophecy.\n   - Added support for Bargon Attack.\n   - Added Sierra AGI engine.\n   - Added support for Goblins 3.\n   - Added Parallaction engine. Currently only Nippon Safes Inc. is supported.\n\n General:\n   - Added dialog which allows the user to select the GUI theme on runtime.\n   - Added 'Mass Add' feature to the Launcher, which allows you to scan for\n     all games in all subdirectories of a given directory (to use it, press\n     shift then click on \"Add Game\").\n   - Improved the way the auto detector generates target names, it now takes\n     a game's variant, language and platform into account.\n   - Improved compression for DXA movies.\n   - Keyboard repeat is now handled in a centralized way, rather than on a\n     case-by-case basis. (Simply put, all engines now have keyboard repeat.)\n\n Broken Sword 1:\n   - Added support for DXA cutscenes.\n   - Added support for Macintosh version.\n\n Broken Sword 2:\n   - Added support for DXA cutscenes.\n   - Added \"fast mode\" (use Ctrl-f to toggle).\n\n Queen:\n   - Added support for Amiga versions.\n   - Fixed some sound glitches.\n\n SCUMM:\n   - Added support for non-interactive demos of HE games (CUP).\n   - Improved A/V syncing in SMUSH videos (affects Dig, FT, COMI).\n   - Improved speed of the NES sound code.\n   - Fixed many (sometimes serious) actor walking issues, specifically\n     in Zak McKracken and Maniac Mansion, by rewriting the walking code\n     for these games.\n   - Fixed several other issues.\n   - Added support for DXA movies playback in HE games.\n\n Simon:\n   - Renamed Simon engine to AGOS.\n\n Kyrandia:\n   - Added support for FM-TOWNS version (both English and Japanese).\n\n BASS:\n   - Fixed long-standing font bug. We were using the control panel font for\n     LINC space and terminals, and the LINC font in the control panel. This\n     caused many character glitches (some of which we used to work around) in\n     LINC space and terminals, particularly in non-English languages.\n\n Nintendo DS Port:\n   - New engines supported: AGI, CINE, and SAGA.\n   - Option to show the mouse cursor.\n   - Word completion on keyboard for AGI games.\n   - Plenty of optimisations.\n\n Symbian Port:\n   - Added support for MP3 to S60v3 and UIQ3 versions.\n   - Switched to SDL 1.2.11 for bug fixes and improvements.\n   - Improved performance for S60v3 and UIQ3 using ARM target.\n   - Limited support for pre Symbian OS9 devices due to compiler issues.\n   - Updated key mapping handling.\n\n WinCE Port:\n   - Switched to using a GCC toolchain for building.\n   - Major update to the SDL lib. Better, faster, more compatible. :-)\n     The included fixes are too numerous to mention here.\n     Most of the updates in this version have concentrated on infrastructure.\n     This leads to faster execution, greatly increased compatibility and\n     OS friendliness - especially for keyboard/mouse input and display\n     handling (f.ex. no more popups during gameplay).\n\n Windows Port:\n   - The default location of the config file changed, to support multi-user\n     systems.\n\n PalmOS Port:\n   - Now using PalmOS Porting SDK which enables use of the C standard library.\n\n\n#### 0.9.1 \"PalmOS revived\" (2006-10-29)\n\n New Ports:\n   - Added Nintendo DS port.\n   - Added GP2X port.\n   - Added GP32 port.\n\n General:\n   - Fixed potential garbage and/or crash in debug console.\n   - Removed restriction on 27 games per game id when added via launcher.\n\n SCUMM:\n   - Improved support for international versions of HE games.\n   - Fixed rare actor drawing glitches.\n   - Fixed path finding during smart star challendge in Big Thinkers 1st Grade.\n   - Fixed graphical glitches in stomach location of Pajama Sam 3.\n   - Fixed graphical glitches in HE80 version of Putt-Putt Travels Through\n     Time.\n   - Fixed FM-TOWNS version of Indy3 failing on Amiga port.\n   - Fixed crash in MM NES when clicking on top screen area.\n   - Now it is possible to turn on or off subtitles during SMUSH movies.\n\n Simon:\n   - Improved support for international versions of the Feeble Files.\n   - Fixed undefined behaviour when loading music.\n   - Fixed crash when displaying some subtitles in the Feeble Files.\n   - Fixed crackling sound in Mac version of Feeble Files.\n\n BASS:\n   - Fixed character spacing in LINC terminals in floppy version v0.0303.\n   - Fixed a regression which caused incorrect AdLib music emulation.\n\n Broken Sword 1:\n   - Fixed speech-related crashes.\n\n Broken Sword 2:\n   - More robust handling of the optional startup.inf file.\n\n Kyrandia:\n   - Scrolling in the Kyrandia intro is less CPU intensive, at the cost of\n     not being as smooth as before.\n   - Fixed a tiny graphics glitch in the Kyrandia intro.\n   - Improved screen update handling, speeds up drawing on small devices.\n   - Improved resource loading, faster startup.\n\n PSP Port:\n   - Fixed crashes during scrolling scenes in certain SCUMM games.\n   - Added saving of thumbnail in SCUMM savegames.\n\n PS2 Port:\n   - Overlay uses higher resolution now.\n   - Can boot from USB, HDD etc. as well.\n\n WinCE Port:\n   - Several bugfixes.\n   - Re-add support for 2002 based devices.\n\n\n#### 0.9.0 \"The OmniBrain loves you\" (2006-06-25)\n\n New Games:\n   - Added kyra engine (for the Kyrandia series). Currently only the first\n     part of the series is supported.\n   - Added support for The Feeble Files.\n\n General:\n   - Switched from CVS to Subversion.\n   - Restructured our source tree partially.\n   - Fixed a bug that prevented you from overriding the scaler from the command\n     line for 640x480 games.\n   - Added subtitle configuration controls to the Launcher options dialogs.\n   - GUI was completely redesigned and is now themeable.\n\n SCUMM:\n   - Rewrote the detection code, for improved accuracy and better support of\n     fan translations. It should now work much better on games with unknown\n     MD5.\n   - Added subtitle configuration controls to the options dialog.\n   - Fixed graphical glitches in several HE games.\n   - Fixed palette glitches in Big Thinkers 1st Grade.\n   - Fixed songs in the kitchen of Pajama Sam 1.\n\n SAGA:\n   - Fixed sound distortion in the Inherit the Earth demo.\n\n Simon:\n   - Improved Hebrew support.\n   - Lots of long-overdue cleanups and re-structuring were made to accommodate\n     for The Feeble Files.\n   - Fixed a rare MIDI bug that would cause a channel to change volume without\n     adjusting it to the master volume.\n   - Fixed delay after introduction of Simon the Sorcerer 1 demo (with speech).\n   - Fixed music tempo in DOS versions of Simon the Sorcerer 1.\n\n Broken Sword 1:\n   - Added support for the --save-slot option.\n\n Broken Sword 2:\n   - Major rewrite of how game resources are accessed in memory. This\n     should fix alignment issues reported on some platforms.\n   - Missing data files are handled more gracefully.\n\n WinCE Port:\n   - Added: PocketPC: Vertical oversampling scaler 320x200=>320x240 when panel\n     not shown. (n0p)\n   - Added: PocketPC: Right click by double-tapping. (n0p)\n   - Fixed: All: Clipping issues in some cases.\n   - Added: PocketPC: Mouse emulation using keys.\n   - Added: Smartphones: Virtual keyboard popup.\n   - Fixed: Smartphones: Incorrect screen blit in SDL port.\n   - Added: All: Mouse cursor visible on panel if using emulated mouse.\n   - Added: All: Inverse landscape mode.\n   - Fixed: PocketPC: Dialogs cut-off/not redrawn.\n\n\n#### 0.8.2 \"Broken Broken Sword 2\" (2006-02-08)\n\n General:\n   - Fixed OS X bundle building when using GCC 3.3.\n\n SCUMM:\n   - Added support for rotating and scaling of sprites in HE games.\n\n Sword2:\n   - Fixed last-minute crash when playing sound effects.\n\n WinCE Port:\n   - Should fix weird crashes with DOTT stamp and in FOA. (#2439 #2430)\n   - Fixed Monkey Island blocking keyboard panel on Smartphones. (thks Knakos)\n   - Fixed QVGA Smartphone detection (mean it this time :p).\n   - Fixed Smartphone double right click issue.\n\n\n#### 0.8.1 \"Codename: missing\" (2006-01-31)\n\n General:\n   - Fixed compiling with GCC 2.95.\n   - Fixed LaTeX documentation.\n   - Switched to new improved logo which matches new site design.\n   - More descriptive game titles in all engines.\n   - Fixed crash when trying to apply aspect-ratio correction to games that\n     cannot use it.\n   - Fixed potential security vulnerability with oversized PATH environment\n     variables.\n   - Lowered the default gain for the FluidSynth music driver and made it\n     configurable.\n\n SCUMM:\n   - Scrolling fixes in COMI, so it is less CPU-hungry.\n   - Added support for Maniac Mansion NES German version.\n   - Fixed mouse button states in COMI.\n   - Fixed overflow when using control panel for robot in the Dig.\n   - Added support for sound code, used by songs in HE games.\n   - Improved shadows in later HE games.\n   - Fixed subtitles glitches in HE games.\n   - Improved music/sound for HE games.\n   - Improved support for international versions of HE games.\n   - Improved support for Macintosh versions of games.\n   - Fixed several minor bugs.\n\n BASS:\n   - Fix crash when speed/volume sliders are clicked and then dragged out\n     of the scummvm window.\n\n Gob:\n   - Fixed disappearing cursor when level password is typed in.\n   - Warn user if he tries to run CD version directly from CD under Windows.\n\n Queen:\n   - Fixed charset for Spanish version.\n\n SAGA:\n   - Fixed digital music playback under BE systems.\n\n Simon:\n   - Implemented more precise MD5-based game detection.\n   - Added Polish support for Simon the Sorcerer 2.\n   - Fixed fades during ride to goblins camp in Simon the Sorcerer 2.\n   - Fixed palette delay at the end of Simon the Sorcerer 1.\n   - Fixed sound looping in Windows version of Simon the Sorcerer 2.\n\n Sword1:\n   - Fixed a bug where looping sounds would keep playing during cutscenes or\n     when displaying any form of control panel dialog.\n   - The save game dialog would erroneously claim an I/O error occurred if the\n     savegame list had unused slots, and savegames were compressed.\n   - Fixed a scrolling bug which caused the finale sequence to be displayed\n     incorrectly.\n\n Sword2:\n   - Fixes and cleanups to the end credits. The German credits work now.\n   - Fixed missing speech/music in the second half of the game, reported to\n     happen in some versions of the game.\n\n PS2 Port:\n   - Completely reworked and now really goes official.\n\n PSP Port:\n   - Fixed a bug that caused Broken Sword 1, and games that use ripped CDDA\n     tracks (most notably the CD version of Monkey Island 1), to stop\n     functioning properly after a while.\n\n WinCE Port:\n   - Check backends/wince/README-WinCE for the latest news.\n   - Fixed disappearing panel when opening a list widget in GUI.\n   - Knakos patches (QVGA smartphones fix, easier key binding and panel\n     switching).\n\n\n#### 0.8.0 (2005-10-30)\n\n New Games:\n   - Added SAGA engine (for the games \"I Have No Mouth and I Must Scream\"\n     and \"Inherit the Earth\").\n   - Added Gob engine (for the Goblins series). Currently, only the\n     first of the Goblins games is supported.\n\n New Ports:\n   - Added PlayStation 2 port.\n   - Added PlayStation Portable (PSP) port.\n   - Added AmigaOS 4 port.\n   - Added EPOC/SymbianOS port.\n   - Added fixes for OS/2 port.\n\n General:\n   - Reworked cursor handling in SDL backend. Now cursors can have\n     their own palette and scaling. This is used by Humongous\n     Entertainment games now.\n   - Added FluidSynth MIDI driver.\n   - Added GUI for the \"soundfont\" setting. (Currently only used by the\n     CoreAudio and FluidSynth MIDI drivers.)\n   - The MPEG player could hang if the sound ended prematurely.\n   - Improved autoscaling GUI, which takes full advantage of your screen.\n   - Fixes for GCC 4.\n\n SCUMM:\n   - Added support for Mac Humongous Entertainment titles.\n   - Added support for multiple filenames/versions using a single target.\n   - Implemented CGA and Hercules render modes in early LEC titles.\n   - Added dialogs which are shown when you modify the talkspeed or\n     music volume using hotkeys.\n   - Added support for NES version of Maniac Mansion.\n   - Added thumbnail support for savegames.\n   - Broke compatibility with HE savegame (HE v71 and upwards only).\n   - Added possibility to disable building of HE and SCUMM v7 & v8 games\n     support.\n   - Fixed the last few known music glitches in Sam & Max. (There are\n     still some - probably - minor missing features though.)\n   - Added support for Commodore64 version of Zak McKracken.\n   - Eliminated all demos targets and platform-specific targets. Config\n     file is autoupdated.\n\n Sword2:\n   - Made the resource manager expire resources more intelligently.\n   - Improved performance when playing the game from CD instead of hard\n     disk.\n   - Simplified sound effects handling. Again.\n   - Code cleanups and restructuring.\n   - Fixed long-standing bug in decompressing sounds from the\n     speech/music CLU files. It was generating one sample too many,\n     which could be heard as a very slight popping noise at the end of\n     some sounds. Files that have been compressed with older versions\n     of compress_sword2 will, of course, still have the same error. You\n     may want to regenerate them.\n\n\n#### 0.7.1 (2005-03-27)\n\n General:\n   - Added a MT-32 emulator. (It was actually added in 0.7.0 but we\n     forgot to put it into the NEWS file :-).\n   - Less memory-hungry MPEG movie playback for the Broken Sword games.\n\n SCUMM:\n   - Fixed wrong actor animation in Full Throttle INSANE.\n\n Windows Mobile port (PocketPC / Smartphone):\n   - Fixed FOTAQ crash on all platforms when leaving the hotel AGAIN.\n   - Better low quality AdLib emulation for FOTAQ.\n   - Fix randomly broken Hide Toolbar option. (thanks iKi)\n   - Fix first hardware key mapping (was not displayed before).\n   - Fix BASS & Simon hangs on Smartphone when using the Skip hotkey.\n   - Fix Zone key action on Smartphone (now mapped on key 9).\n   - Experimental third party VGA mode (SE-VGA) fix.\n   - Add Key Mapping option in the launcher (Options / Misc / Keys).\n   - Remove AYGSHELL.DLL dependency to work on CE .Net platforms.\n   - Fix key mapping issues introduced in 0.7.0.\n   - Full Throttle interactive action sequences should be more playable.\n   - New key mapping option \"FT Cheat\" to win a Full Throttle action sequence.\n   - Quit Simon game with 'Action key' on Smartphones.\n\n Sword2:\n   - Fixed crash caused by attempting to play music from CD1 and CD2 at the\n     same time.\n   - Fixed crash in the cutscene player if the speech file was missing.\n\n BASS:\n   - Fixed crash when talking to the gardener using spanish text with the\n     floppy version.\n\n\n#### 0.7.0 (2004-12-24)\n\n New Games:\n   - Added 26 Humongous Entertainment titles, only a few are completable.\n\n General:\n   - Added support for FLAC (lossless) encoded audio files.\n   - Added an 'On Screen Display' to the SDL backend.\n   - Partially rewrote the backend API.\n   - Comments and the order of section in config files are preserved now.\n   - Updated AdvMame scalers based on scale2x 2.0 - AdvMame3x looks nicer now,\n     and AdvMame2x is MMX accelerated.\n   - Added MMX i386 assembler versions of the HQ2x and HQ3x scalers.\n   - Added 'Extra Path' option allows for a searching an additional datafile\n     location (for reencoded cutscenes and the like).\n   - Disabled Alt-x and Ctrl-z quit keys in favor of Ctrl-q on unix like\n     operating systems, like Linux (exception: Mac OS X still uses Cmd-q).\n   - Separate smaller font for the console, allowing for more visible\n     information, for example in the SCUMM debugger.\n   - Added support for setting output sample rate at run-time, although there\n     is currently no GUI for it.\n   - The save directory now has a default rather than the current directory on\n     some platforms:\n        - Mac OS X:     $HOME/Documents/ScummVM Savegames/\n        - Other unices: $HOME/.scummvm/\n   - Added a new about dialog with scrolling credits.\n\n SCUMM:\n   - Removed the old zak256 target, use zakTowns instead.\n   - Added native support for Macintosh versions using a special container\n     file. This removes the need for using the 'RESCUMM' program.\n   - Added smooth horizontal scrolling for The Dig, Full Throttle and COMI\n     (matching the original engine).\n   - Partially rewrote the text engine, fixing various bugs, especially in\n     newer games (The Dig, COMI).\n   - Fixed actor drawing glitches in V1 Maniac and Zak.\n   - Fixed ship-to-ship graphic glitches in COMI.\n   - Fixed palette glitches in COMI.\n\n Queen:\n   - Fixed some issues with the Dreamcast backend.\n\n Sword1:\n   - Added support for compressed speech and music.\n   - Added support for the demo.\n   - Better support for the Czech version.\n   - Added workarounds for script and subtitle bugs in some game versions.\n\n Sword2:\n   - Simplified memory/resource management.\n   - Simplified sound effects handling.\n   - Added support for compressed speech and music.\n   - Fixed various minor bugs.\n\n BASS:\n   - Added workarounds for some rare scripting bugs that could render the game\n     unwinnable.\n\n#### 0.6.1b (2004-08-03)\n\n General:\n   - Fixed copy/paste bug in launcher that may corrupt the Savegame Path.\n   - Fixed crashes on 64-bit architectures.\n\n SCUMM:\n   - Fixed VOC crash when playing DOTT Floppy.\n   - Fixed palette issues in Amiga version of MI2.\n\n Simon:\n   - Fixed VOC crash.\n\n#### 0.6.1 (2004-07-25)\n\n General:\n   - Fixed sound glitch when streaming two or more Ogg Vorbis sounds from the\n     same file handle, e.g. in the Sam & Max intro when using monster.sog.\n\n SCUMM:\n   - As usual: many SCUMM game engine fixes.\n   - Added graphics decoders for 3DO Humongous Entertainment games.\n   - Numerous Humongous Entertainment games fixes.\n   - Fixed bug in Full Throttle, so battle difficulty matches original.\n   - Improved Digital iMUSE.\n\n Sword1:\n   - Warn the user if saving fails, instead of crashing.\n   - Slightly more user-friendly save/restore dialog.\n   - Fixed masking glitch outside Nico's apartment.\n\n BASS:\n   - Warn the user if saving a game doesn't work.\n\n Simon:\n   - Fixed crashes in some international versions.\n\n\n#### 0.6.0 (2004-03-14)\n\n New Games:\n   - Added Broken Sword 1 engine.\n   - Added Broken Sword 2 engine.\n   - Added Flight of the Amazon Queen engine.\n   - Added support for V1 SCUMM games 'Maniac Mansion' and 'Zak McKracken'.\n   - SCUMM game Full Throttle is now supported.\n\n General:\n   - Subtitles now default to disabled. '-n' option now enabled subtitles.\n   - Added HQ2x and HQ3x scalers.\n   - Rewrote sound code for more flexibility and performance.\n   - Improved native MT32 support.\n   - AdLib GM emulation table revamped, providing more accurate software MIDI.\n   - Default Makefile now uses configure script.\n   - Greatly improved the launcher and options dialogs (work-in-progress).\n   - Many other \"under the hood\" improvements, like a new config management\n     and plugin capabilities.\n\n Simon:\n   - Added data files decoder for Amiga disk versions.\n   - Added support for inventory graphics in Amiga versions.\n   - Fixed various brief freezes.\n   - Fixed minor glitches in load/save dialog in non-English versions.\n   - Fixed missing inventory arrows in some versions of Simon the Sorcerer 1.\n\n SCUMM:\n   - Many, Many, Many SCUMM game engine fixes. Many of them. And that's a lot.\n   - Added INSANE support for Full Throttle 'action sequences'.\n   - Added option to choose between AdLib, PCjr and PC Speaker in earlier\n     games.\n   - Added AdLib support for indy3ega and loom (ega).\n   - Added MIDI support for loom (ega), monkeyega and monkeyvga.\n   - Added sound effects support for indy3/monkeyega/monkeyvga/pass.\n   - Added FM Towns targets for Loom and Indy3.\n   - Rewrote in-game menu (F5) to be easier to use.\n   - Improved FM Towns SFX support (YM2612 emulation, looping).\n   - Classic V1 versions of Maniac Mansion and Zak McKracken are now supported\n     and completable.\n   - Rewrote Digital iMUSE music system.\n   - Several Analog iMUSE music system bugs fixed.\n   - Improved music/sound for various Amiga versions.\n   - Improved compression of Fate of Atlantis and Simon the Sorcerer 2 sound\n     files.\n   - Keyboard fighting in Fate of Atlantis now works.\n   - Keyboard support for cannon battle in Curse of Monkey Island.\n   - Keyboard support for derby scene in Full Throttle.\n\n\n#### 0.5.1 (2003-08-06)\n\n- Rewrote Beneath a Steel Sky savegame code (see note in READMEs 'Known Bugs').\n- Fixed dialog skipping, music volume and several crashes/freezes in Steel Sky.\n- Fixed dialog skipping in V7 games.\n- Fixed glitch when quitting ScummVM in fullscreen mode on Mac OS X.\n- Fixed various COMI bugs related to actor placement/scaling.\n- Added complete Hebrew support for Simon the Sorcerer 1 and 2.\n- Several MorphOS and DreamCast port fixes.\n- DreamCast now runs Simon the Sorcerer 1 & 2.\n- Fixed a fullscreen problem on Mac OS X were you couldn't use the mouse in\n  the top part of the screen by linking to a bugfixed version of SDL.\n\n\n#### 0.5.0 (2003-08-02)\n\n- Enhanced versions of Maniac Mansion and Zak McKracken are now supported and\n  completable.\n- Beneath A Steel Sky is now supported and completable.\n- Added support for Amiga version of Monkey Island 1.\n- Initial unplayable support for V1 version of Maniac Mansion/Zak McKracken.\n- Curse of Monkey Island (COMI) support for playing from CD improved on Mac\n  OS X.\n- Loading COMI savegames for disk 2 doesn't anymore require disk 1 first.\n- Rewritten iMUSE engine, and many Music fixes (exp. Monkey Island 2).\n- Support for music in DOS versions of Humongous Entertainment games and\n  Simon the Sorcerer 2 (XMIDI format).\n- Support for music in floppy demo of Simon the Sorcerer 1 (Proprietary\n  format).\n- Complete music support for Simon the Sorcerer 2.\n- Improved music and sound support in Zak256.\n- Added Aspect Ratio option.\n- Many other bug fixes, improvements and optimizations.\n\n\n#### 0.4.1 (2003-05-25)\n\n- Added AdvMame3x filter.\n- Fixed crash in Curse of Monkey Island (and possibly other games as well).\n- Fixed airport doors in Zak256.\n- Fixed crash in SDL backend.\n- Fixed various iMUSE bugs.\n\n\n#### 0.4.0 (2003-05-11)\n\n- Curse of Monkey Island (comi) support (experimental).\n- Added support for the EGA versions of Loom, Monkey Island and Indy3.\n- Improved music support in Indy3 and the floppy versions of Monkey Island.\n- Many Simon the Sorcerer 1 & 2 improvements and fixes.\n- Very pre-alpha Beneath a Steel Sky code. Don't expect it to do anything.\n- Even more pre-alpha support for V2 SCUMM games (Maniac Mansion and Zak).\n- Preliminary support for early Humongous Entertainment titles (very\n  experimental).\n- New debug console and several GUI/Launcher enhancements.\n- New Save/Load code (easier to expand while retaining compatibility).\n- DreamCast port now works with new games added for 0.3.0b.\n- New official PalmOS port.\n- Various minor and not so minor SCUMM game fixes.\n- Large memory leak fixed for The Dig/ComI.\n- SMUSH code optimised, frame dropping added for slower machines.\n- Code cleanups.\n\n\n#### 0.3.0b (2002-12-08)\n\n- Massive cleanup work for iMUSE. Sam and Max music now plays correctly.\n- Many bugfixes for Zak256, + sound and music support.\n- Music support for Simon the Sorcerer on any platform with real MIDI.\n- Experimental support for Indy3 (VGA) - Indiana Jones + Last Crusade.\n- Completed support for Monkey1 VGA Floppy, The Dig.\n- Added akos16 implementation for The Dig and Full Throttle costumes.\n- Added Digital iMUSE implementation for The Dig and Full Throttle music.\n- Loom CD speech+music syncronisation improved greatly.\n- Added midi-emulation via AdLib, for platforms without sequencer support.\n- Code separation of various engine parts into several libraries.\n- Several fixes to prevent Simon the Sorcerer crashing and hanging.\n- Hundreds of bugfixes for many other games.\n- New SMUSH video engine, for Full Throttle and The Dig.\n- New in-game GUI.\n- Launcher dialog.\n\n\n#### 0.2.0 (2002-04-14)\n\n- Core engine rewrite.\n- Enhanced ingame GUI, including options/volume settings.\n- Auto-save feature.\n- Added more command-line options, and configuration file.\n- New ports and platforms (MorphOS, Macintosh, Dreamcast, Solaris, IRIX, etc).\n- Graphics filtering added (2xSAI, Super2xSAI, SuperEagle, AdvMame2x).\n- Support for MAD MP3 compressed audio.\n- Support for first non-SCUMM games (Simon the Sorcerer).\n- Support for V4 games (Loom CD).\n- Enhanced V6 game support (Sam and Max is now completable).\n- Experimental support for V7 games (Full Throttle/The Dig).\n- Experimental support for V3 games (Zak256/Indy3).\n\n\n#### 0.1.0 (2002-01-13)\n\n- Loads of changes.\n\n\n#### 0.0.2 (2001-10-12)\n\n- Bug fixes.\n- Save & load support.\n\n\n#### 0.0.1 (2001-10-08)\n\n- Initial version.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.19140625,
          "content": "# [ScummVM README](https://www.scummvm.org/) · [![CI](https://github.com/scummvm/scummvm/actions/workflows/ci.yml/badge.svg)](https://github.com/scummvm/scummvm/actions/workflows/ci.yml) [![Translation status](https://translations.scummvm.org/widgets/scummvm/-/scummvm/svg-badge.svg)](https://translations.scummvm.org/engage/scummvm/?utm_source=widget) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md#pull-requests) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/e06e5b18f8464fef859b5a7f78d10357)](https://www.codacy.com/gh/scummvm/scummvm/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=scummvm/scummvm&amp;utm_campaign=Badge_Grade)\n\n## About ScummVM\n\nScummVM allows you to play classic graphic point-and-click adventure games, text adventure games, and RPGs, as long as you already have the game data files. ScummVM replaces the executable files shipped with the games, which means you can now play your favorite games on all your favorite devices.\n\nSo how did ScummVM get its name? Many of the famous LucasArts adventure games, such as Maniac Mansion and the Monkey Island series, were created using a utility called SCUMM (Script Creation Utility for Maniac Mansion). The ‘VM’ in ScummVM stands for Virtual Machine.\n\nWhile ScummVM was originally designed to run LucasArts’ SCUMM games, over time support has been added for many other games: see the full list [on our wiki](https://wiki.scummvm.org/index.php?title=Category:Supported_Games). Noteworthy titles include Broken Sword, Myst and Blade Runner, although there are countless other hidden gems to explore.\n\nFor more information, compatibility lists, details on donating, the\nlatest release, progress reports and more, please visit the ScummVM [home\npage](https://www.scummvm.org/).\n\n## Quickstart\n\nFor the impatient among you, here is how to get ScummVM running in five simple steps.\n\n1. Download ScummVM from [our website](https://www.scummvm.org/downloads/) and install it.\n\n2. Create a directory on your hard drive and copy the game datafiles from the original media to this directory. Repeat this for every game you want to play.\n\n3. Start ScummVM, choose 'Add game', select the directory containing the game datafiles (do not try to select the datafiles themselves!) and press Choose.\n\n4. The Game Options dialog opens to allow configuration of various settings for the game. These can be reconfigured at any time, but for now everything should be OK at the default settings.\n\n5. Select the game you want to play in the list, and press Start. To play a game next time, skip to step 5, unless you want to add more games.\n\n>\n> Hint:\n>\n> To add multiple games in one go, press and hold the shift key, then click 'Add game' -- the label will change to 'Mass Add' and if you press it, you are again asked to select a directory, only this time ScummVM will search through all subdirectories for supported games.\n\n\n\n## Reporting a bug\n\nTo report a bug, go to the ScummVM [Issue Tracker](https://bugs.scummvm.org/) and log in with your GitHub account.\n\nPlease make sure the bug is reproducible, and still occurs in the latest git/[Daily build](https://buildbot.scummvm.org/#/dailybuilds) version. Also check the [compatibility list](https://www.scummvm.org/compatibility/) for that game, to ensure the issue is not already known. Please do not report bugs for games that are not listed as completable on the [Supported Games](https://wiki.scummvm.org/index.php?title=Category:Supported_Games) wiki page, or on the compatibility list. We already know those games have bugs!\n\nPlease include the following information in the bug report:\n\n- ScummVM version (test the latest git/[Daily build](https://buildbot.scummvm.org/#/dailybuilds))\n- Bug details, including instructions for how to reproduce the bug. If possible, include log files, screenshots, and any other relevant information.\n- Game language\n- Game version (for example, talkie or floppy)\n- Platform and Compiler (for example, Win32, Linux or FreeBSD)\n- An attached saved game, if possible.\n- If this bug only occurred recently, include the last version without the bug, and the first version with the bug. That way we can fix it quicker by looking at the changes made.\n\nFinally, please report each issue separately; do not file multiple issues on the same ticket. It is difficult to track the status of each individual bug when they aren't on their own tickets.\n\n## Documentation\n\n### User documentation\n\nFor everything you need to know about how to use ScummVM, see our [user documentation](https://docs.scummvm.org/).\n\n### The ScummVM Wiki\n\n[The wiki](https://wiki.scummvm.org/) is the place to go for information about every game supported by ScummVM. If you're a developer, there's also some very handy information in the Developer section.\n\n### Changelog\n\nOur extensive change log is available [here](NEWS.md).\n\n## SAST Tools\n\n[PVS-Studio](https://pvs-studio.com/en/pvs-studio/?utm_source=github&utm_medium=organic&utm_campaign=open_source) - static analyzer for C, C++, C#, and Java code.\n\n## Credits\n\nA massive thank you to the entire team for making the ScummVM project possible. See the credits [here](AUTHORS)!\n\n-----\n\n> Good Luck and Happy Adventuring\\!\n> The ScummVM team.\n> <https://www.scummvm.org/>\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.111328125,
          "content": "We moved TODO list to our Wiki. You may find it at the following link:\n\n  https://wiki.scummvm.org/index.php/TODO\n"
        },
        {
          "name": "audio",
          "type": "tree",
          "content": null
        },
        {
          "name": "backends",
          "type": "tree",
          "content": null
        },
        {
          "name": "base",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.guess",
          "type": "blob",
          "size": 48.767578125,
          "content": "#! /bin/sh\n# Attempt to guess a canonical system name.\n#   Copyright 1992-2022 Free Software Foundation, Inc.\n\n# shellcheck disable=SC2006,SC2268 # see below for rationale\n\ntimestamp='2022-09-17'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n\n\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n\nOutput the configuration name of the system \\`$me' is run on.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.guess ($timestamp)\n\nOriginally written by Per Bothner.\nCopyright 1992-2022 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n    * )\n       break ;;\n  esac\ndone\n\nif test $# != 0; then\n  echo \"$me: too many arguments$help\" >&2\n  exit 1\nfi\n\n# Just in case it came from the environment.\nGUESS=\n\n# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n# compiler to aid in system detection is discouraged as it requires\n# temporary files to be created and, as you can see below, it is a\n# headache to deal with in a portable fashion.\n\n# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n# use `HOST_CC' if defined, but it is deprecated.\n\n# Portable tmp directory creation inspired by the Autoconf team.\n\ntmp=\n# shellcheck disable=SC2172\ntrap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n\nset_cc_for_build() {\n    # prevent multiple calls if $tmp is already set\n    test \"$tmp\" && return 0\n    : \"${TMPDIR=/tmp}\"\n    # shellcheck disable=SC2039,SC3028\n    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n    dummy=$tmp/dummy\n    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n\t,,)    echo \"int x;\" > \"$dummy.c\"\n\t       for driver in cc gcc c89 c99 ; do\n\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n\t\t       CC_FOR_BUILD=$driver\n\t\t       break\n\t\t   fi\n\t       done\n\t       if test x\"$CC_FOR_BUILD\" = x ; then\n\t\t   CC_FOR_BUILD=no_compiler_found\n\t       fi\n\t       ;;\n\t,,*)   CC_FOR_BUILD=$CC ;;\n\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\nfi\n\nUNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\nUNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\nUNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\nUNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n\ncase $UNAME_SYSTEM in\nLinux|GNU|GNU/*)\n\tLIBC=unknown\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#include <features.h>\n\t#if defined(__UCLIBC__)\n\tLIBC=uclibc\n\t#elif defined(__dietlibc__)\n\tLIBC=dietlibc\n\t#elif defined(__GLIBC__)\n\tLIBC=gnu\n\t#else\n\t#include <stdarg.h>\n\t/* First heuristic to detect musl libc.  */\n\t#ifdef __DEFINED_va_list\n\tLIBC=musl\n\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n\tif [ \"$LIBC\" = unknown ] &&\n\t   command -v ldd >/dev/null &&\n\t   ldd --version 2>&1 | grep -q ^musl; then\n\t\tLIBC=musl\n\tfi\n\n\t# If the system lacks a compiler, then just pick glibc.\n\t# We could probably try harder.\n\tif [ \"$LIBC\" = unknown ]; then\n\t\tLIBC=gnu\n\tfi\n\t;;\nesac\n\n# Note: order is significant - the case branches are not exclusive.\n\ncase $UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION in\n    *:NetBSD:*:*)\n\t# NetBSD (nbsd) targets should (where applicable) match one or\n\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n\t# switched to ELF, *-*-netbsd* would select the old\n\t# object file format.  This provides both forward\n\t# compatibility and a consistent mechanism for selecting the\n\t# object file format.\n\t#\n\t# Note: NetBSD doesn't particularly care about the vendor\n\t# portion of the name.  We always set it to \"unknown\".\n\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n\t    /sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n\t    /usr/sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n\t    echo unknown)`\n\tcase $UNAME_MACHINE_ARCH in\n\t    aarch64eb) machine=aarch64_be-unknown ;;\n\t    armeb) machine=armeb-unknown ;;\n\t    arm*) machine=arm-unknown ;;\n\t    sh3el) machine=shl-unknown ;;\n\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n\t    *) machine=$UNAME_MACHINE_ARCH-unknown ;;\n\tesac\n\t# The Operating System including object format, if it has switched\n\t# to ELF recently (or will in the future) and ABI.\n\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\tos=netbsdelf\n\t\t;;\n\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n\t\t    os=netbsd\n\t\telse\n\t\t    os=netbsdelf\n\t\tfi\n\t\t;;\n\t    *)\n\t\tos=netbsd\n\t\t;;\n\tesac\n\t# Determine ABI tags.\n\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n\t# Debian GNU/NetBSD machines have a different userland, and\n\t# thus, need a distinct triplet. However, they do not need\n\t# kernel version information, so it can be replaced with a\n\t# suitable tag, in the style of linux-gnu.\n\tcase $UNAME_VERSION in\n\t    Debian*)\n\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n\t# contains redundant information, the shorter form:\n\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n\tGUESS=$machine-${os}${release}${abi-}\n\t;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE\n\t;;\n    *:MidnightBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-midnightbsd$UNAME_RELEASE\n\t;;\n    *:ekkoBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-ekkobsd$UNAME_RELEASE\n\t;;\n    *:SolidBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-solidbsd$UNAME_RELEASE\n\t;;\n    *:OS108:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-os108_$UNAME_RELEASE\n\t;;\n    macppc:MirBSD:*:*)\n\tGUESS=powerpc-unknown-mirbsd$UNAME_RELEASE\n\t;;\n    *:MirBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-mirbsd$UNAME_RELEASE\n\t;;\n    *:Sortix:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-sortix\n\t;;\n    *:Twizzler:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-twizzler\n\t;;\n    *:Redox:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-redox\n\t;;\n    mips:OSF1:*.*)\n\tGUESS=mips-dec-osf1\n\t;;\n    alpha:OSF1:*:*)\n\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n\ttrap '' 0\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV4.5 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"LCA4 (21066/21068)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV5 (21164)\")\n\t\tUNAME_MACHINE=alphaev5 ;;\n\t    \"EV5.6 (21164A)\")\n\t\tUNAME_MACHINE=alphaev56 ;;\n\t    \"EV5.6 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca56 ;;\n\t    \"EV5.7 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca57 ;;\n\t    \"EV6 (21264)\")\n\t\tUNAME_MACHINE=alphaev6 ;;\n\t    \"EV6.7 (21264A)\")\n\t\tUNAME_MACHINE=alphaev67 ;;\n\t    \"EV6.8CB (21264C)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8AL (21264B)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8CX (21264D)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.9A (21264/EV69A)\")\n\t\tUNAME_MACHINE=alphaev69 ;;\n\t    \"EV7 (21364)\")\n\t\tUNAME_MACHINE=alphaev7 ;;\n\t    \"EV7.9 (21364A)\")\n\t\tUNAME_MACHINE=alphaev79 ;;\n\tesac\n\t# A Pn.n version is a patched version.\n\t# A Vn.n version is a released version.\n\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\tOSF_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tGUESS=$UNAME_MACHINE-dec-osf$OSF_REL\n\t;;\n    Amiga*:UNIX_System_V:4.0:*)\n\tGUESS=m68k-unknown-sysv4\n\t;;\n    *:[Aa]miga[Oo][Ss]:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-amigaos\n\t;;\n    *:[Mm]orph[Oo][Ss]:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-morphos\n\t;;\n    *:OS/390:*:*)\n\tGUESS=i370-ibm-openedition\n\t;;\n    *:z/VM:*:*)\n\tGUESS=s390-ibm-zvmoe\n\t;;\n    *:OS400:*:*)\n\tGUESS=powerpc-ibm-os400\n\t;;\n    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n\tGUESS=arm-acorn-riscix$UNAME_RELEASE\n\t;;\n    arm*:riscos:*:*|arm*:RISCOS:*:*)\n\tGUESS=arm-unknown-riscos\n\t;;\n    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n\tGUESS=hppa1.1-hitachi-hiuxmpp\n\t;;\n    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n\tcase `(/bin/universe) 2>/dev/null` in\n\t    att) GUESS=pyramid-pyramid-sysv3 ;;\n\t    *)   GUESS=pyramid-pyramid-bsd   ;;\n\tesac\n\t;;\n    NILE*:*:*:dcosx)\n\tGUESS=pyramid-pyramid-svr4\n\t;;\n    DRS?6000:unix:4.0:6*)\n\tGUESS=sparc-icl-nx6\n\t;;\n    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n\tcase `/usr/bin/uname -p` in\n\t    sparc) GUESS=sparc-icl-nx7 ;;\n\tesac\n\t;;\n    s390x:SunOS:*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris2$SUN_REL\n\t;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n\tGUESS=i386-pc-auroraux$UNAME_RELEASE\n\t;;\n    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n\tset_cc_for_build\n\tSUN_ARCH=i386\n\t# If there is a compiler, see if it is configured for 64-bit objects.\n\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n\t# This test works for both compilers.\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$SUN_ARCH-pc-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:6*:*)\n\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris3$SUN_REL\n\t;;\n    sun4*:SunOS:*:*)\n\tcase `/usr/bin/arch -k` in\n\t    Series*|S4*)\n\t\tUNAME_RELEASE=`uname -v`\n\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like `4.1.3-JL'.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/'`\n\tGUESS=sparc-sun-sunos$SUN_REL\n\t;;\n    sun3*:SunOS:*:*)\n\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase `/bin/arch` in\n\t    sun3)\n\t\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t\t;;\n\t    sun4)\n\t\tGUESS=sparc-sun-sunos$UNAME_RELEASE\n\t\t;;\n\tesac\n\t;;\n    aushp:SunOS:*:*)\n\tGUESS=sparc-auspex-sunos$UNAME_RELEASE\n\t;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n    # MiNT.  But MiNT is downward compatible to TOS, so this should\n    # be no problem.\n    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n\tGUESS=m68k-atari-mint$UNAME_RELEASE\n\t;;\n    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n\tGUESS=m68k-atari-mint$UNAME_RELEASE\n\t;;\n    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n\tGUESS=m68k-atari-mint$UNAME_RELEASE\n\t;;\n    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n\tGUESS=m68k-milan-mint$UNAME_RELEASE\n\t;;\n    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n\tGUESS=m68k-hades-mint$UNAME_RELEASE\n\t;;\n    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n\tGUESS=m68k-unknown-mint$UNAME_RELEASE\n\t;;\n    m68k:machten:*:*)\n\tGUESS=m68k-apple-machten$UNAME_RELEASE\n\t;;\n    powerpc:machten:*:*)\n\tGUESS=powerpc-apple-machten$UNAME_RELEASE\n\t;;\n    RISC*:Mach:*:*)\n\tGUESS=mips-dec-mach_bsd4.3\n\t;;\n    RISC*:ULTRIX:*:*)\n\tGUESS=mips-dec-ultrix$UNAME_RELEASE\n\t;;\n    VAX*:ULTRIX*:*:*)\n\tGUESS=vax-dec-ultrix$UNAME_RELEASE\n\t;;\n    2020:CLIX:*:* | 2430:CLIX:*:*)\n\tGUESS=clipper-intergraph-clix$UNAME_RELEASE\n\t;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n#else\n\tint main (argc, argv) int argc; char *argv[]; {\n#endif\n\t#if defined (host_mips) && defined (MIPSEB)\n\t#if defined (SYSTYPE_SYSV)\n\t  printf (\"mips-mips-riscos%ssysv\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_SVR4)\n\t  printf (\"mips-mips-riscos%ssvr4\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n\t  printf (\"mips-mips-riscos%sbsd\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#endif\n\t  exit (-1);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=mips-mips-riscos$UNAME_RELEASE\n\t;;\n    Motorola:PowerMAX_OS:*:*)\n\tGUESS=powerpc-motorola-powermax\n\t;;\n    Motorola:*:4.3:PL8-*)\n\tGUESS=powerpc-harris-powermax\n\t;;\n    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n\tGUESS=powerpc-harris-powermax\n\t;;\n    Night_Hawk:Power_UNIX:*:*)\n\tGUESS=powerpc-harris-powerunix\n\t;;\n    m88k:CX/UX:7*:*)\n\tGUESS=m88k-harris-cxux7\n\t;;\n    m88k:*:4*:R4*)\n\tGUESS=m88k-motorola-sysv4\n\t;;\n    m88k:*:3*:R3*)\n\tGUESS=m88k-motorola-sysv3\n\t;;\n    AViiON:dgux:*:*)\n\t# DG/UX returns AViiON for all architectures\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tif test \"$UNAME_PROCESSOR\" = mc88100 || test \"$UNAME_PROCESSOR\" = mc88110\n\tthen\n\t    if test \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx || \\\n\t       test \"$TARGET_BINARY_INTERFACE\"x = x\n\t    then\n\t\tGUESS=m88k-dg-dgux$UNAME_RELEASE\n\t    else\n\t\tGUESS=m88k-dg-dguxbcs$UNAME_RELEASE\n\t    fi\n\telse\n\t    GUESS=i586-dg-dgux$UNAME_RELEASE\n\tfi\n\t;;\n    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n\tGUESS=m88k-dolphin-sysv3\n\t;;\n    M88*:*:R3*:*)\n\t# Delta 88k system running SVR3\n\tGUESS=m88k-motorola-sysv3\n\t;;\n    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n\tGUESS=m88k-tektronix-sysv3\n\t;;\n    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n\tGUESS=m68k-tektronix-bsd\n\t;;\n    *:IRIX*:*:*)\n\tIRIX_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/g'`\n\tGUESS=mips-sgi-irix$IRIX_REL\n\t;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n\tGUESS=romp-ibm-aix    # uname -m gives an 8 hex-code CPU id\n\t;;                    # Note that: echo \"'`uname -s`'\" gives 'AIX '\n    i*86:AIX:*:*)\n\tGUESS=i386-ibm-aix\n\t;;\n    ia64:AIX:*:*)\n\tif test -x /usr/bin/oslevel ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n\tGUESS=$UNAME_MACHINE-ibm-aix$IBM_REV\n\t;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n\t\t\t{\n\t\t\tif (!__power_pc())\n\t\t\t\texit(1);\n\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n\t\t\texit(0);\n\t\t\t}\nEOF\n\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n\t\tthen\n\t\t\tGUESS=$SYSTEM_NAME\n\t\telse\n\t\t\tGUESS=rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tGUESS=rs6000-ibm-aix3.2.4\n\telse\n\t\tGUESS=rs6000-ibm-aix3.2\n\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n\tGUESS=$IBM_ARCH-ibm-aix$IBM_REV\n\t;;\n    *:AIX:*:*)\n\tGUESS=rs6000-ibm-aix\n\t;;\n    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)\n\tGUESS=romp-ibm-bsd4.4\n\t;;\n    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n\tGUESS=romp-ibm-bsd$UNAME_RELEASE    # 4.3 with uname added to\n\t;;                                  # report: romp-ibm BSD 4.3\n    *:BOSX:*:*)\n\tGUESS=rs6000-bull-bosx\n\t;;\n    DPX/2?00:B.O.S.:*:*)\n\tGUESS=m68k-bull-sysv3\n\t;;\n    9000/[34]??:4.3bsd:1.*:*)\n\tGUESS=m68k-hp-bsd\n\t;;\n    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n\tGUESS=m68k-hp-bsd4.4\n\t;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tcase $UNAME_MACHINE in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n\t    9000/[678][0-9][0-9])\n\t\tif test -x /usr/bin/getconf; then\n\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n\t\t    case $sc_cpu_version in\n\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n\t\t      532)                      # CPU_PA_RISC2_0\n\t\t\tcase $sc_kernel_bits in\n\t\t\t  32) HP_ARCH=hppa2.0n ;;\n\t\t\t  64) HP_ARCH=hppa2.0w ;;\n\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n\t\t\tesac ;;\n\t\t    esac\n\t\tfi\n\t\tif test \"$HP_ARCH\" = \"\"; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\t\t{\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n\t\t#endif\n\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n\n\t\t    switch (cpu)\n\t\t\t{\n\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n\t\t\tcase CPU_PA_RISC2_0:\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t\t    switch (bits)\n\t\t\t\t{\n\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n\t\t\t\t} break;\n\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n\t\t\t    puts (\"hppa2.0\"); break;\n\t\t#endif\n\t\t\tdefault: puts (\"hppa1.0\"); break;\n\t\t\t}\n\t\t    exit (0);\n\t\t}\nEOF\n\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n\t\tfi ;;\n\tesac\n\tif test \"$HP_ARCH\" = hppa2.0w\n\tthen\n\t    set_cc_for_build\n\n\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n\t    #\n\t    # $ CC_FOR_BUILD=cc ./config.guess\n\t    # => hppa2.0w-hp-hpux11.23\n\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n\t\tHP_ARCH=hppa64\n\t    fi\n\tfi\n\tGUESS=$HP_ARCH-hp-hpux$HPUX_REV\n\t;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tGUESS=ia64-hp-hpux$HPUX_REV\n\t;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n\t{\n\t  long cpu = sysconf (_SC_CPU_VERSION);\n\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n\t     results, however.  */\n\t  if (CPU_IS_PA_RISC (cpu))\n\t    {\n\t      switch (cpu)\n\t\t{\n\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n\t\t}\n\t    }\n\t  else if (CPU_IS_HP_MC68K (cpu))\n\t    puts (\"m68k-hitachi-hiuxwe2\");\n\t  else puts (\"unknown-hitachi-hiuxwe2\");\n\t  exit (0);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=unknown-hitachi-hiuxwe2\n\t;;\n    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)\n\tGUESS=hppa1.1-hp-bsd\n\t;;\n    9000/8??:4.3bsd:*:*)\n\tGUESS=hppa1.0-hp-bsd\n\t;;\n    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n\tGUESS=hppa1.0-hp-mpeix\n\t;;\n    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)\n\tGUESS=hppa1.1-hp-osf\n\t;;\n    hp8??:OSF1:*:*)\n\tGUESS=hppa1.0-hp-osf\n\t;;\n    i*86:OSF1:*:*)\n\tif test -x /usr/sbin/sysversion ; then\n\t    GUESS=$UNAME_MACHINE-unknown-osf1mk\n\telse\n\t    GUESS=$UNAME_MACHINE-unknown-osf1\n\tfi\n\t;;\n    parisc*:Lites*:*:*)\n\tGUESS=hppa1.1-hp-lites\n\t;;\n    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n\tGUESS=c1-convex-bsd\n\t;;\n    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n\tif getsysinfo -f scalar_acc\n\tthen echo c32-convex-bsd\n\telse echo c2-convex-bsd\n\tfi\n\texit ;;\n    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n\tGUESS=c34-convex-bsd\n\t;;\n    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n\tGUESS=c38-convex-bsd\n\t;;\n    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n\tGUESS=c4-convex-bsd\n\t;;\n    CRAY*Y-MP:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=ymp-cray-unicos$CRAY_REL\n\t;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=craynv-cray-unicosmp$CRAY_REL\n\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n\tGUESS=$UNAME_MACHINE-pc-bsdi$UNAME_RELEASE\n\t;;\n    sparc*:BSD/OS:*:*)\n\tGUESS=sparc-unknown-bsdi$UNAME_RELEASE\n\t;;\n    *:BSD/OS:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-bsdi$UNAME_RELEASE\n\t;;\n    arm:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabihf\n\tfi\n\t;;\n    *:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tcase $UNAME_PROCESSOR in\n\t    amd64)\n\t\tUNAME_PROCESSOR=x86_64 ;;\n\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\tFREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL\n\t;;\n    i*:CYGWIN*:*)\n\tGUESS=$UNAME_MACHINE-pc-cygwin\n\t;;\n    *:MINGW64*:*)\n\tGUESS=$UNAME_MACHINE-pc-mingw64\n\t;;\n    *:MINGW*:*)\n\tGUESS=$UNAME_MACHINE-pc-mingw32\n\t;;\n    *:MSYS*:*)\n\tGUESS=$UNAME_MACHINE-pc-msys\n\t;;\n    i*:PW*:*)\n\tGUESS=$UNAME_MACHINE-pc-pw32\n\t;;\n    *:SerenityOS:*:*)\n        GUESS=$UNAME_MACHINE-pc-serenity\n        ;;\n    *:Interix*:*)\n\tcase $UNAME_MACHINE in\n\t    x86)\n\t\tGUESS=i586-pc-interix$UNAME_RELEASE\n\t\t;;\n\t    authenticamd | genuineintel | EM64T)\n\t\tGUESS=x86_64-unknown-interix$UNAME_RELEASE\n\t\t;;\n\t    IA64)\n\t\tGUESS=ia64-unknown-interix$UNAME_RELEASE\n\t\t;;\n\tesac ;;\n    i*:UWIN*:*)\n\tGUESS=$UNAME_MACHINE-pc-uwin\n\t;;\n    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n\tGUESS=x86_64-pc-cygwin\n\t;;\n    prep*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=powerpcle-unknown-solaris2$SUN_REL\n\t;;\n    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)\n\tGUESS=\"$UNAME_MACHINE-pc-managarm-mlibc\"\n\t;;\n    *:[Mm]anagarm:*:*)\n\tGUESS=\"$UNAME_MACHINE-unknown-managarm-mlibc\"\n\t;;\n    *:Minix:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-minix\n\t;;\n    aarch64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    aarch64_be:Linux:*:*)\n\tUNAME_MACHINE=aarch64_be\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    alpha:Linux:*:*)\n\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' /proc/cpuinfo 2>/dev/null` in\n\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    arc:Linux:*:* | arceb:Linux:*:* | arc32:Linux:*:* | arc64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabi\n\t    else\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabihf\n\t    fi\n\tfi\n\t;;\n    avr32*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    cris:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-axis-linux-$LIBC\n\t;;\n    crisv32:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-axis-linux-$LIBC\n\t;;\n    e2k:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    frv:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    hexagon:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    i*86:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-pc-linux-$LIBC\n\t;;\n    ia64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    k1om:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    loongarch32:Linux:*:* | loongarch64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    m32r*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    m68*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    mips:Linux:*:* | mips64:Linux:*:*)\n\tset_cc_for_build\n\tIS_GLIBC=0\n\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef mips\n\t#undef mipsel\n\t#undef mips64\n\t#undef mips64el\n\t#if ${IS_GLIBC} && defined(_ABI64)\n\tLIBCABI=gnuabi64\n\t#else\n\t#if ${IS_GLIBC} && defined(_ABIN32)\n\tLIBCABI=gnuabin32\n\t#else\n\tLIBCABI=${LIBC}\n\t#endif\n\t#endif\n\n\t#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n\tCPU=mipsisa64r6\n\t#else\n\t#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n\tCPU=mipsisa32r6\n\t#else\n\t#if defined(__mips64)\n\tCPU=mips64\n\t#else\n\tCPU=mips\n\t#endif\n\t#endif\n\t#endif\n\n\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n\tMIPS_ENDIAN=el\n\t#else\n\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n\tMIPS_ENDIAN=\n\t#else\n\tMIPS_ENDIAN=\n\t#endif\n\t#endif\nEOF\n\tcc_set_vars=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\n\teval \"$cc_set_vars\"\n\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n\t;;\n    mips64el:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    openrisc*:Linux:*:*)\n\tGUESS=or1k-unknown-linux-$LIBC\n\t;;\n    or32:Linux:*:* | or1k*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    padre:Linux:*:*)\n\tGUESS=sparc-unknown-linux-$LIBC\n\t;;\n    parisc64:Linux:*:* | hppa64:Linux:*:*)\n\tGUESS=hppa64-unknown-linux-$LIBC\n\t;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) GUESS=hppa1.1-unknown-linux-$LIBC ;;\n\t  PA8*) GUESS=hppa2.0-unknown-linux-$LIBC ;;\n\t  *)    GUESS=hppa-unknown-linux-$LIBC ;;\n\tesac\n\t;;\n    ppc64:Linux:*:*)\n\tGUESS=powerpc64-unknown-linux-$LIBC\n\t;;\n    ppc:Linux:*:*)\n\tGUESS=powerpc-unknown-linux-$LIBC\n\t;;\n    ppc64le:Linux:*:*)\n\tGUESS=powerpc64le-unknown-linux-$LIBC\n\t;;\n    ppcle:Linux:*:*)\n\tGUESS=powerpcle-unknown-linux-$LIBC\n\t;;\n    riscv32:Linux:*:* | riscv32be:Linux:*:* | riscv64:Linux:*:* | riscv64be:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    s390:Linux:*:* | s390x:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-ibm-linux-$LIBC\n\t;;\n    sh64*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    sh*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    sparc:Linux:*:* | sparc64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    tile*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    vax:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-dec-linux-$LIBC\n\t;;\n    x86_64:Linux:*:*)\n\tset_cc_for_build\n\tCPU=$UNAME_MACHINE\n\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __i386__\n\t    ABI=x86\n\t    #else\n\t    #ifdef __ILP32__\n\t    ABI=x32\n\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n\t\tx32) LIBCABI=${LIBC}x32 ;;\n\t    esac\n\tfi\n\tGUESS=$CPU-pc-linux-$LIBCABI\n\t;;\n    xtensa*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    i*86:DYNIX/ptx:4*:*)\n\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n\t# earlier versions are messed up and put the nodename in both\n\t# sysname and nodename.\n\tGUESS=i386-sequent-sysv4\n\t;;\n    i*86:UNIX_SV:4.2MP:2.*)\n\t# Unixware is an offshoot of SVR4, but it has its own version\n\t# number series starting with 2...\n\t# I am not positive that other SVR4 systems won't match this,\n\t# I just have to hope.  -- rms.\n\t# Use sysv4.2uw... so that sysv4* matches it.\n\tGUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION\n\t;;\n    i*86:OS/2:*:*)\n\t# If we were able to find `uname', then EMX Unix compatibility\n\t# is probably installed.\n\tGUESS=$UNAME_MACHINE-pc-os2-emx\n\t;;\n    i*86:XTS-300:*:STOP)\n\tGUESS=$UNAME_MACHINE-unknown-stop\n\t;;\n    i*86:atheos:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-atheos\n\t;;\n    i*86:syllable:*:*)\n\tGUESS=$UNAME_MACHINE-pc-syllable\n\t;;\n    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n\tGUESS=i386-unknown-lynxos$UNAME_RELEASE\n\t;;\n    i*86:*DOS:*:*)\n\tGUESS=$UNAME_MACHINE-pc-msdosdjgpp\n\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv$UNAME_REL\n\tfi\n\t;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n\tesac\n\tGUESS=$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n\t;;\n    i*86:*:3.2:*)\n\tif test -f /usr/options/cb.name; then\n\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n\t\tGUESS=$UNAME_MACHINE-pc-isc$UNAME_REL\n\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i586\n\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\tGUESS=$UNAME_MACHINE-pc-sco$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv32\n\tfi\n\t;;\n    pc:*:*:*)\n\t# Left here for compatibility:\n\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\tGUESS=i586-pc-msdosdjgpp\n\t;;\n    Intel:Mach:3*:*)\n\tGUESS=i386-pc-mach3\n\t;;\n    paragon:*:*:*)\n\tGUESS=i860-intel-osf1\n\t;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  GUESS=i860-stardent-sysv$UNAME_RELEASE    # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  GUESS=i860-unknown-sysv$UNAME_RELEASE     # Unknown i860-SVR4\n\tfi\n\t;;\n    mini*:CTIX:SYS*5:*)\n\t# \"miniframe\"\n\tGUESS=m68010-convergent-sysv\n\t;;\n    mc68k:UNIX:SYSTEM5:3.51m)\n\tGUESS=m68k-convergent-sysv\n\t;;\n    M680?0:D-NIX:5.3:*)\n\tGUESS=m68k-diab-dnix\n\t;;\n    M68*:*:R3V[5678]*:*)\n\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n\tGUESS=m68k-unknown-lynxos$UNAME_RELEASE\n\t;;\n    mc68030:UNIX_System_V:4.*:*)\n\tGUESS=m68k-atari-sysv4\n\t;;\n    TSUNAMI:LynxOS:2.*:*)\n\tGUESS=sparc-unknown-lynxos$UNAME_RELEASE\n\t;;\n    rs6000:LynxOS:2.*:*)\n\tGUESS=rs6000-unknown-lynxos$UNAME_RELEASE\n\t;;\n    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n\tGUESS=powerpc-unknown-lynxos$UNAME_RELEASE\n\t;;\n    SM[BE]S:UNIX_SV:*:*)\n\tGUESS=mips-dde-sysv$UNAME_RELEASE\n\t;;\n    RM*:ReliantUNIX-*:*:*)\n\tGUESS=mips-sni-sysv4\n\t;;\n    RM*:SINIX-*:*:*)\n\tGUESS=mips-sni-sysv4\n\t;;\n    *:SINIX-*:*:*)\n\tif uname -p 2>/dev/null >/dev/null ; then\n\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\t\tGUESS=$UNAME_MACHINE-sni-sysv4\n\telse\n\t\tGUESS=ns32k-sni-sysv\n\tfi\n\t;;\n    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n\tGUESS=i586-unisys-sysv4\n\t;;\n    *:UNIX_System_V:4*:FTX*)\n\t# From Gerald Hewes <hewes@openmarket.com>.\n\t# How about differentiating between stratus architectures? -djm\n\tGUESS=hppa1.1-stratus-sysv4\n\t;;\n    *:*:*:FTX*)\n\t# From seanf@swdc.stratus.com.\n\tGUESS=i860-stratus-sysv4\n\t;;\n    i*86:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\tGUESS=$UNAME_MACHINE-stratus-vos\n\t;;\n    *:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\tGUESS=hppa1.1-stratus-vos\n\t;;\n    mc68*:A/UX:*:*)\n\tGUESS=m68k-apple-aux$UNAME_RELEASE\n\t;;\n    news*:NEWS-OS:6*:*)\n\tGUESS=mips-sony-newsos6\n\t;;\n    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n\tif test -d /usr/nec; then\n\t\tGUESS=mips-nec-sysv$UNAME_RELEASE\n\telse\n\t\tGUESS=mips-unknown-sysv$UNAME_RELEASE\n\tfi\n\t;;\n    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n\tGUESS=powerpc-be-beos\n\t;;\n    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n\tGUESS=powerpc-apple-beos\n\t;;\n    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n\tGUESS=i586-pc-beos\n\t;;\n    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n\tGUESS=i586-pc-haiku\n\t;;\n    ppc:Haiku:*:*)\t# Haiku running on Apple PowerPC\n\tGUESS=powerpc-apple-haiku\n\t;;\n    *:Haiku:*:*)\t# Haiku modern gcc (not bound by BeOS compat)\n\tGUESS=$UNAME_MACHINE-unknown-haiku\n\t;;\n    SX-4:SUPER-UX:*:*)\n\tGUESS=sx4-nec-superux$UNAME_RELEASE\n\t;;\n    SX-5:SUPER-UX:*:*)\n\tGUESS=sx5-nec-superux$UNAME_RELEASE\n\t;;\n    SX-6:SUPER-UX:*:*)\n\tGUESS=sx6-nec-superux$UNAME_RELEASE\n\t;;\n    SX-7:SUPER-UX:*:*)\n\tGUESS=sx7-nec-superux$UNAME_RELEASE\n\t;;\n    SX-8:SUPER-UX:*:*)\n\tGUESS=sx8-nec-superux$UNAME_RELEASE\n\t;;\n    SX-8R:SUPER-UX:*:*)\n\tGUESS=sx8r-nec-superux$UNAME_RELEASE\n\t;;\n    SX-ACE:SUPER-UX:*:*)\n\tGUESS=sxace-nec-superux$UNAME_RELEASE\n\t;;\n    Power*:Rhapsody:*:*)\n\tGUESS=powerpc-apple-rhapsody$UNAME_RELEASE\n\t;;\n    *:Rhapsody:*:*)\n\tGUESS=$UNAME_MACHINE-apple-rhapsody$UNAME_RELEASE\n\t;;\n    arm64:Darwin:*:*)\n\tGUESS=aarch64-apple-darwin$UNAME_RELEASE\n\t;;\n    *:Darwin:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tcase $UNAME_PROCESSOR in\n\t    unknown) UNAME_PROCESSOR=powerpc ;;\n\tesac\n\tif command -v xcode-select > /dev/null 2> /dev/null && \\\n\t\t! xcode-select --print-path > /dev/null 2> /dev/null ; then\n\t    # Avoid executing cc if there is no toolchain installed as\n\t    # cc will be a stub that puts up a graphical alert\n\t    # prompting the user to install developer tools.\n\t    CC_FOR_BUILD=no_compiler_found\n\telse\n\t    set_cc_for_build\n\tfi\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tcase $UNAME_PROCESSOR in\n\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n\t\tesac\n\t    fi\n\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_PPC >/dev/null\n\t    then\n\t\tUNAME_PROCESSOR=powerpc\n\t    fi\n\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n\t    # uname -m returns i386 or x86_64\n\t    UNAME_PROCESSOR=$UNAME_MACHINE\n\tfi\n\tGUESS=$UNAME_PROCESSOR-apple-darwin$UNAME_RELEASE\n\t;;\n    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tif test \"$UNAME_PROCESSOR\" = x86; then\n\t\tUNAME_PROCESSOR=i386\n\t\tUNAME_MACHINE=pc\n\tfi\n\tGUESS=$UNAME_PROCESSOR-$UNAME_MACHINE-nto-qnx$UNAME_RELEASE\n\t;;\n    *:QNX:*:4*)\n\tGUESS=i386-pc-qnx\n\t;;\n    NEO-*:NONSTOP_KERNEL:*:*)\n\tGUESS=neo-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSE-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nse-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSR-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nsr-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSV-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nsv-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSX-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nsx-tandem-nsk$UNAME_RELEASE\n\t;;\n    *:NonStop-UX:*:*)\n\tGUESS=mips-compaq-nonstopux\n\t;;\n    BS2000:POSIX*:*:*)\n\tGUESS=bs2000-siemens-sysv\n\t;;\n    DS/*:UNIX_System_V:*:*)\n\tGUESS=$UNAME_MACHINE-$UNAME_SYSTEM-$UNAME_RELEASE\n\t;;\n    *:Plan9:*:*)\n\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n\t# is converted to i386 for consistency with other x86\n\t# operating systems.\n\tif test \"${cputype-}\" = 386; then\n\t    UNAME_MACHINE=i386\n\telif test \"x${cputype-}\" != x; then\n\t    UNAME_MACHINE=$cputype\n\tfi\n\tGUESS=$UNAME_MACHINE-unknown-plan9\n\t;;\n    *:TOPS-10:*:*)\n\tGUESS=pdp10-unknown-tops10\n\t;;\n    *:TENEX:*:*)\n\tGUESS=pdp10-unknown-tenex\n\t;;\n    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n\tGUESS=pdp10-dec-tops20\n\t;;\n    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n\tGUESS=pdp10-xkl-tops20\n\t;;\n    *:TOPS-20:*:*)\n\tGUESS=pdp10-unknown-tops20\n\t;;\n    *:ITS:*:*)\n\tGUESS=pdp10-unknown-its\n\t;;\n    SEI:*:*:SEIUX)\n\tGUESS=mips-sei-seiux$UNAME_RELEASE\n\t;;\n    *:DragonFly:*:*)\n\tDRAGONFLY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-dragonfly$DRAGONFLY_REL\n\t;;\n    *:*VMS:*:*)\n\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\tcase $UNAME_MACHINE in\n\t    A*) GUESS=alpha-dec-vms ;;\n\t    I*) GUESS=ia64-dec-vms ;;\n\t    V*) GUESS=vax-dec-vms ;;\n\tesac ;;\n    *:XENIX:*:SysV)\n\tGUESS=i386-pc-xenix\n\t;;\n    i*86:skyos:*:*)\n\tSKYOS_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\n\tGUESS=$UNAME_MACHINE-pc-skyos$SKYOS_REL\n\t;;\n    i*86:rdos:*:*)\n\tGUESS=$UNAME_MACHINE-pc-rdos\n\t;;\n    i*86:Fiwix:*:*)\n\tGUESS=$UNAME_MACHINE-pc-fiwix\n\t;;\n    *:AROS:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-aros\n\t;;\n    x86_64:VMkernel:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-esx\n\t;;\n    amd64:Isilon\\ OneFS:*:*)\n\tGUESS=x86_64-unknown-onefs\n\t;;\n    *:Unleashed:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-unleashed$UNAME_RELEASE\n\t;;\nesac\n\n# Do we have a guess based on uname results?\nif test \"x$GUESS\" != x; then\n    echo \"$GUESS\"\n    exit\nfi\n\n# No uname command or uname output not recognized.\nset_cc_for_build\ncat > \"$dummy.c\" <<EOF\n#ifdef _SEQUENT_\n#include <sys/types.h>\n#include <sys/utsname.h>\n#endif\n#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n#include <signal.h>\n#if defined(_SIZE_T_) || defined(SIGLOST)\n#include <sys/utsname.h>\n#endif\n#endif\n#endif\nmain ()\n{\n#if defined (sony)\n#if defined (MIPSEB)\n  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n     I don't know....  */\n  printf (\"mips-sony-bsd\\n\"); exit (0);\n#else\n#include <sys/param.h>\n  printf (\"m68k-sony-newsos%s\\n\",\n#ifdef NEWSOS4\n  \"4\"\n#else\n  \"\"\n#endif\n  ); exit (0);\n#endif\n#endif\n\n#if defined (NeXT)\n#if !defined (__ARCHITECTURE__)\n#define __ARCHITECTURE__ \"m68k\"\n#endif\n  int version;\n  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n  if (version < 4)\n    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n  else\n    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n  exit (0);\n#endif\n\n#if defined (MULTIMAX) || defined (n16)\n#if defined (UMAXV)\n  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n#else\n#if defined (CMU)\n  printf (\"ns32k-encore-mach\\n\"); exit (0);\n#else\n  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n#endif\n#endif\n#endif\n\n#if defined (__386BSD__)\n  printf (\"i386-pc-bsd\\n\"); exit (0);\n#endif\n\n#if defined (sequent)\n#if defined (i386)\n  printf (\"i386-sequent-dynix\\n\"); exit (0);\n#endif\n#if defined (ns32000)\n  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n#endif\n#endif\n\n#if defined (_SEQUENT_)\n  struct utsname un;\n\n  uname(&un);\n  if (strncmp(un.version, \"V2\", 2) == 0) {\n    printf (\"i386-sequent-ptx2\\n\"); exit (0);\n  }\n  if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n    printf (\"i386-sequent-ptx1\\n\"); exit (0);\n  }\n  printf (\"i386-sequent-ptx\\n\"); exit (0);\n#endif\n\n#if defined (vax)\n#if !defined (ultrix)\n#include <sys/param.h>\n#if defined (BSD)\n#if BSD == 43\n  printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n#else\n#if BSD == 199006\n  printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n#else\n  printf (\"vax-dec-bsd\\n\"); exit (0);\n#endif\n#endif\n#else\n  printf (\"vax-dec-bsd\\n\"); exit (0);\n#endif\n#else\n#if defined(_SIZE_T_) || defined(SIGLOST)\n  struct utsname un;\n  uname (&un);\n  printf (\"vax-dec-ultrix%s\\n\", un.release); exit (0);\n#else\n  printf (\"vax-dec-ultrix\\n\"); exit (0);\n#endif\n#endif\n#endif\n#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n#if defined(_SIZE_T_) || defined(SIGLOST)\n  struct utsname *un;\n  uname (&un);\n  printf (\"mips-dec-ultrix%s\\n\", un.release); exit (0);\n#else\n  printf (\"mips-dec-ultrix\\n\"); exit (0);\n#endif\n#endif\n#endif\n\n#if defined (alliant) && defined (i860)\n  printf (\"i860-alliant-bsd\\n\"); exit (0);\n#endif\n\n  exit (1);\n}\nEOF\n\n$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`\"$dummy\"` &&\n\t{ echo \"$SYSTEM_NAME\"; exit; }\n\n# Apollos put the system type in the environment.\ntest -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n\necho \"$0: unable to guess system type\" >&2\n\ncase $UNAME_MACHINE:$UNAME_SYSTEM in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\nEOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\nand\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\nEOF\n\nour_year=`echo $timestamp | sed 's,-.*,,'`\nthisyear=`date +%Y`\n# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\nif test \"$script_age\" -lt 3 ; then\n   cat >&2 <<EOF\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\nprovide the necessary information to handle your system.\n\nconfig.guess timestamp = $timestamp\n\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n\nhostinfo               = `(hostinfo) 2>/dev/null`\n/bin/universe          = `(/bin/universe) 2>/dev/null`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n/bin/arch              = `(/bin/arch) 2>/dev/null`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n\nUNAME_MACHINE = \"$UNAME_MACHINE\"\nUNAME_RELEASE = \"$UNAME_RELEASE\"\nUNAME_SYSTEM  = \"$UNAME_SYSTEM\"\nUNAME_VERSION = \"$UNAME_VERSION\"\nEOF\nfi\n\nexit 1\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "config.sub",
          "type": "blob",
          "size": 34.9794921875,
          "content": "#! /bin/sh\n# Configuration validation subroutine script.\n#   Copyright 1992-2022 Free Software Foundation, Inc.\n\n# shellcheck disable=SC2006,SC2268 # see below for rationale\n\ntimestamp='2022-09-17'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n\n\n# Please send patches to <config-patches@gnu.org>.\n#\n# Configuration subroutine to validate and canonicalize a configuration type.\n# Supply the specified configuration type as an argument.\n# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n\n# This file is supposed to be the same for all GNU packages\n# and recognize all the CPU types, system types and aliases\n# that are meaningful with *any* GNU software.\n# Each package is responsible for reporting which valid configurations\n# it does not support.  The user should be able to distinguish\n# a failure to support a valid configuration from a meaningless\n# configuration.\n\n# The goal of this file is to map all the various variations of a given\n# machine specification into a single specification in the form:\n#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or in some cases, the newer four-part form:\n#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# It is wrong to echo any other type of specification.\n\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n\nCanonicalize a configuration name.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.sub ($timestamp)\n\nCopyright 1992-2022 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n\n    *local*)\n       # First pass through any local machine types.\n       echo \"$1\"\n       exit ;;\n\n    * )\n       break ;;\n  esac\ndone\n\ncase $# in\n 0) echo \"$me: missing argument$help\" >&2\n    exit 1;;\n 1) ;;\n *) echo \"$me: too many arguments$help\" >&2\n    exit 1;;\nesac\n\n# Split fields of configuration type\n# shellcheck disable=SC2162\nsaved_IFS=$IFS\nIFS=\"-\" read field1 field2 field3 field4 <<EOF\n$1\nEOF\nIFS=$saved_IFS\n\n# Separate into logical components for further validation\ncase $1 in\n\t*-*-*-*-*)\n\t\techo Invalid configuration \\`\"$1\"\\': more than four components >&2\n\t\texit 1\n\t\t;;\n\t*-*-*-*)\n\t\tbasic_machine=$field1-$field2\n\t\tbasic_os=$field3-$field4\n\t\t;;\n\t*-*-*)\n\t\t# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two\n\t\t# parts\n\t\tmaybe_os=$field2-$field3\n\t\tcase $maybe_os in\n\t\t\tnto-qnx* | linux-* | uclinux-uclibc* \\\n\t\t\t| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \\\n\t\t\t| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \\\n\t\t\t| storm-chaos* | os2-emx* | rtmk-nova* | managarm-*)\n\t\t\t\tbasic_machine=$field1\n\t\t\t\tbasic_os=$maybe_os\n\t\t\t\t;;\n\t\t\tandroid-linux)\n\t\t\t\tbasic_machine=$field1-unknown\n\t\t\t\tbasic_os=linux-android\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\tbasic_os=$field3\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\t*-*)\n\t\t# A lone config we happen to match not fitting any pattern\n\t\tcase $field1-$field2 in\n\t\t\tdecstation-3100)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\t*-*)\n\t\t\t\t# Second component is usually, but not always the OS\n\t\t\t\tcase $field2 in\n\t\t\t\t\t# Prevent following clause from handling this valid os\n\t\t\t\t\tsun*os*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tbasic_os=$field2\n\t\t\t\t\t\t;;\n\t\t\t\t\tzephyr*)\n\t\t\t\t\t\tbasic_machine=$field1-unknown\n\t\t\t\t\t\tbasic_os=$field2\n\t\t\t\t\t\t;;\n\t\t\t\t\t# Manufacturers\n\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n\t\t\t\t\t| microblaze* | sim | cisco \\\n\t\t\t\t\t| oki | wec | wrs | winbond)\n\t\t\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\t\t\tbasic_os=\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tbasic_os=$field2\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\t# Convert single-component short-hands not valid as part of\n\t\t# multi-component configurations.\n\t\tcase $field1 in\n\t\t\t386bsd)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\ta29khif)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=udi\n\t\t\t\t;;\n\t\t\tadobe68k)\n\t\t\t\tbasic_machine=m68010-adobe\n\t\t\t\tbasic_os=scout\n\t\t\t\t;;\n\t\t\talliant)\n\t\t\t\tbasic_machine=fx80-alliant\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\taltos | altos3068)\n\t\t\t\tbasic_machine=m68k-altos\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tam29k)\n\t\t\t\tbasic_machine=a29k-none\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tamdahl)\n\t\t\t\tbasic_machine=580-amdahl\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tamiga)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tamigaos | amigados)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=amigaos\n\t\t\t\t;;\n\t\t\tamigaunix | amix)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=sysv4\n\t\t\t\t;;\n\t\t\tapollo68)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tapollo68bsd)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\taros)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=aros\n\t\t\t\t;;\n\t\t\taux)\n\t\t\t\tbasic_machine=m68k-apple\n\t\t\t\tbasic_os=aux\n\t\t\t\t;;\n\t\t\tbalance)\n\t\t\t\tbasic_machine=ns32k-sequent\n\t\t\t\tbasic_os=dynix\n\t\t\t\t;;\n\t\t\tblackfin)\n\t\t\t\tbasic_machine=bfin-unknown\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tcegcc)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tbasic_os=cegcc\n\t\t\t\t;;\n\t\t\tconvex-c1)\n\t\t\t\tbasic_machine=c1-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c2)\n\t\t\t\tbasic_machine=c2-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c32)\n\t\t\t\tbasic_machine=c32-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c34)\n\t\t\t\tbasic_machine=c34-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c38)\n\t\t\t\tbasic_machine=c38-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tcray)\n\t\t\t\tbasic_machine=j90-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\tcrds | unos)\n\t\t\t\tbasic_machine=m68k-crds\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tda30)\n\t\t\t\tbasic_machine=m68k-da30\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tdelta88)\n\t\t\t\tbasic_machine=m88k-motorola\n\t\t\t\tbasic_os=sysv3\n\t\t\t\t;;\n\t\t\tdicos)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=dicos\n\t\t\t\t;;\n\t\t\tdjgpp)\n\t\t\t\tbasic_machine=i586-pc\n\t\t\t\tbasic_os=msdosdjgpp\n\t\t\t\t;;\n\t\t\tebmon29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=ebmon\n\t\t\t\t;;\n\t\t\tes1800 | OSE68k | ose68k | ose | OSE)\n\t\t\t\tbasic_machine=m68k-ericsson\n\t\t\t\tbasic_os=ose\n\t\t\t\t;;\n\t\t\tgmicro)\n\t\t\t\tbasic_machine=tron-gmicro\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tgo32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=go32\n\t\t\t\t;;\n\t\t\th8300hms)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tbasic_os=hms\n\t\t\t\t;;\n\t\t\th8300xray)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tbasic_os=xray\n\t\t\t\t;;\n\t\t\th8500hms)\n\t\t\t\tbasic_machine=h8500-hitachi\n\t\t\t\tbasic_os=hms\n\t\t\t\t;;\n\t\t\tharris)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tbasic_os=sysv3\n\t\t\t\t;;\n\t\t\thp300 | hp300hpux)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tbasic_os=hpux\n\t\t\t\t;;\n\t\t\thp300bsd)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\thppaosf)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tbasic_os=osf\n\t\t\t\t;;\n\t\t\thppro)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tbasic_os=proelf\n\t\t\t\t;;\n\t\t\ti386mach)\n\t\t\t\tbasic_machine=i386-mach\n\t\t\t\tbasic_os=mach\n\t\t\t\t;;\n\t\t\tisi68 | isi)\n\t\t\t\tbasic_machine=m68k-isi\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tm68knommu)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tmagnum | m3230)\n\t\t\t\tbasic_machine=mips-mips\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tmerlin)\n\t\t\t\tbasic_machine=ns32k-utek\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tmingw64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tbasic_os=mingw64\n\t\t\t\t;;\n\t\t\tmingw32)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=mingw32\n\t\t\t\t;;\n\t\t\tmingw32ce)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tbasic_os=mingw32ce\n\t\t\t\t;;\n\t\t\tmonitor)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tbasic_os=coff\n\t\t\t\t;;\n\t\t\tmorphos)\n\t\t\t\tbasic_machine=powerpc-unknown\n\t\t\t\tbasic_os=morphos\n\t\t\t\t;;\n\t\t\tmoxiebox)\n\t\t\t\tbasic_machine=moxie-unknown\n\t\t\t\tbasic_os=moxiebox\n\t\t\t\t;;\n\t\t\tmsdos)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=msdos\n\t\t\t\t;;\n\t\t\tmsys)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=msys\n\t\t\t\t;;\n\t\t\tmvs)\n\t\t\t\tbasic_machine=i370-ibm\n\t\t\t\tbasic_os=mvs\n\t\t\t\t;;\n\t\t\tnacl)\n\t\t\t\tbasic_machine=le32-unknown\n\t\t\t\tbasic_os=nacl\n\t\t\t\t;;\n\t\t\tncr3000)\n\t\t\t\tbasic_machine=i486-ncr\n\t\t\t\tbasic_os=sysv4\n\t\t\t\t;;\n\t\t\tnetbsd386)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=netbsd\n\t\t\t\t;;\n\t\t\tnetwinder)\n\t\t\t\tbasic_machine=armv4l-rebel\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tnews | news700 | news800 | news900)\n\t\t\t\tbasic_machine=m68k-sony\n\t\t\t\tbasic_os=newsos\n\t\t\t\t;;\n\t\t\tnews1000)\n\t\t\t\tbasic_machine=m68030-sony\n\t\t\t\tbasic_os=newsos\n\t\t\t\t;;\n\t\t\tnecv70)\n\t\t\t\tbasic_machine=v70-nec\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tnh3000)\n\t\t\t\tbasic_machine=m68k-harris\n\t\t\t\tbasic_os=cxux\n\t\t\t\t;;\n\t\t\tnh[45]000)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tbasic_os=cxux\n\t\t\t\t;;\n\t\t\tnindy960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tbasic_os=nindy\n\t\t\t\t;;\n\t\t\tmon960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tbasic_os=mon960\n\t\t\t\t;;\n\t\t\tnonstopux)\n\t\t\t\tbasic_machine=mips-compaq\n\t\t\t\tbasic_os=nonstopux\n\t\t\t\t;;\n\t\t\tos400)\n\t\t\t\tbasic_machine=powerpc-ibm\n\t\t\t\tbasic_os=os400\n\t\t\t\t;;\n\t\t\tOSE68000 | ose68000)\n\t\t\t\tbasic_machine=m68000-ericsson\n\t\t\t\tbasic_os=ose\n\t\t\t\t;;\n\t\t\tos68k)\n\t\t\t\tbasic_machine=m68k-none\n\t\t\t\tbasic_os=os68k\n\t\t\t\t;;\n\t\t\tparagon)\n\t\t\t\tbasic_machine=i860-intel\n\t\t\t\tbasic_os=osf\n\t\t\t\t;;\n\t\t\tparisc)\n\t\t\t\tbasic_machine=hppa-unknown\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tpsp)\n\t\t\t\tbasic_machine=mipsallegrexel-sony\n\t\t\t\tbasic_os=psp\n\t\t\t\t;;\n\t\t\tpw32)\n\t\t\t\tbasic_machine=i586-unknown\n\t\t\t\tbasic_os=pw32\n\t\t\t\t;;\n\t\t\trdos | rdos64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tbasic_os=rdos\n\t\t\t\t;;\n\t\t\trdos32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=rdos\n\t\t\t\t;;\n\t\t\trom68k)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tbasic_os=coff\n\t\t\t\t;;\n\t\t\tsa29200)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=udi\n\t\t\t\t;;\n\t\t\tsei)\n\t\t\t\tbasic_machine=mips-sei\n\t\t\t\tbasic_os=seiux\n\t\t\t\t;;\n\t\t\tsequent)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsps7)\n\t\t\t\tbasic_machine=m68k-bull\n\t\t\t\tbasic_os=sysv2\n\t\t\t\t;;\n\t\t\tst2000)\n\t\t\t\tbasic_machine=m68k-tandem\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tstratus)\n\t\t\t\tbasic_machine=i860-stratus\n\t\t\t\tbasic_os=sysv4\n\t\t\t\t;;\n\t\t\tsun2)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsun2os3)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tbasic_os=sunos3\n\t\t\t\t;;\n\t\t\tsun2os4)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tbasic_os=sunos4\n\t\t\t\t;;\n\t\t\tsun3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsun3os3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tbasic_os=sunos3\n\t\t\t\t;;\n\t\t\tsun3os4)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tbasic_os=sunos4\n\t\t\t\t;;\n\t\t\tsun4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsun4os3)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=sunos3\n\t\t\t\t;;\n\t\t\tsun4os4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=sunos4\n\t\t\t\t;;\n\t\t\tsun4sol2)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=solaris2\n\t\t\t\t;;\n\t\t\tsun386 | sun386i | roadrunner)\n\t\t\t\tbasic_machine=i386-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsv1)\n\t\t\t\tbasic_machine=sv1-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\tsymmetry)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tbasic_os=dynix\n\t\t\t\t;;\n\t\t\tt3e)\n\t\t\t\tbasic_machine=alphaev5-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\tt90)\n\t\t\t\tbasic_machine=t90-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\ttoad1)\n\t\t\t\tbasic_machine=pdp10-xkl\n\t\t\t\tbasic_os=tops20\n\t\t\t\t;;\n\t\t\ttpf)\n\t\t\t\tbasic_machine=s390x-ibm\n\t\t\t\tbasic_os=tpf\n\t\t\t\t;;\n\t\t\tudi29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=udi\n\t\t\t\t;;\n\t\t\tultra3)\n\t\t\t\tbasic_machine=a29k-nyu\n\t\t\t\tbasic_os=sym1\n\t\t\t\t;;\n\t\t\tv810 | necv810)\n\t\t\t\tbasic_machine=v810-nec\n\t\t\t\tbasic_os=none\n\t\t\t\t;;\n\t\t\tvaxv)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tvms)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tbasic_os=vms\n\t\t\t\t;;\n\t\t\tvsta)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=vsta\n\t\t\t\t;;\n\t\t\tvxworks960)\n\t\t\t\tbasic_machine=i960-wrs\n\t\t\t\tbasic_os=vxworks\n\t\t\t\t;;\n\t\t\tvxworks68)\n\t\t\t\tbasic_machine=m68k-wrs\n\t\t\t\tbasic_os=vxworks\n\t\t\t\t;;\n\t\t\tvxworks29k)\n\t\t\t\tbasic_machine=a29k-wrs\n\t\t\t\tbasic_os=vxworks\n\t\t\t\t;;\n\t\t\txbox)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=mingw32\n\t\t\t\t;;\n\t\t\tymp)\n\t\t\t\tbasic_machine=ymp-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$1\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Decode 1-component or ad-hoc basic machines\ncase $basic_machine in\n\t# Here we handle the default manufacturer of certain CPU types.  It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tw89k)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\t;;\n\top50n)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\top60c)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\tibm*)\n\t\tcpu=i370\n\t\tvendor=ibm\n\t\t;;\n\torion105)\n\t\tcpu=clipper\n\t\tvendor=highlevel\n\t\t;;\n\tmac | mpw | mac-mpw)\n\t\tcpu=m68k\n\t\tvendor=apple\n\t\t;;\n\tpmac | pmac-mpw)\n\t\tcpu=powerpc\n\t\tvendor=apple\n\t\t;;\n\n\t# Recognize the various machine names and aliases which stand\n\t# for a CPU type and a company and sometimes even an OS.\n\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n\t\tcpu=m68000\n\t\tvendor=att\n\t\t;;\n\t3b*)\n\t\tcpu=we32k\n\t\tvendor=att\n\t\t;;\n\tbluegene*)\n\t\tcpu=powerpc\n\t\tvendor=ibm\n\t\tbasic_os=cnk\n\t\t;;\n\tdecsystem10* | dec10*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tbasic_os=tops10\n\t\t;;\n\tdecsystem20* | dec20*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tbasic_os=tops20\n\t\t;;\n\tdelta | 3300 | motorola-3300 | motorola-delta \\\n\t      | 3300-motorola | delta-motorola)\n\t\tcpu=m68k\n\t\tvendor=motorola\n\t\t;;\n\tdpx2*)\n\t\tcpu=m68k\n\t\tvendor=bull\n\t\tbasic_os=sysv3\n\t\t;;\n\tencore | umax | mmax)\n\t\tcpu=ns32k\n\t\tvendor=encore\n\t\t;;\n\telxsi)\n\t\tcpu=elxsi\n\t\tvendor=elxsi\n\t\tbasic_os=${basic_os:-bsd}\n\t\t;;\n\tfx2800)\n\t\tcpu=i860\n\t\tvendor=alliant\n\t\t;;\n\tgenix)\n\t\tcpu=ns32k\n\t\tvendor=ns\n\t\t;;\n\th3050r* | hiux*)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tbasic_os=hiuxwe2\n\t\t;;\n\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k2[0-9][0-9] | hp9k31[0-9])\n\t\tcpu=m68000\n\t\tvendor=hp\n\t\t;;\n\thp9k3[2-9][0-9])\n\t\tcpu=m68k\n\t\tvendor=hp\n\t\t;;\n\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k78[0-9] | hp78[0-9])\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][13679] | hp8[0-9][13679])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=solaris2\n\t\t;;\n\tj90 | j90-cray)\n\t\tcpu=j90\n\t\tvendor=cray\n\t\tbasic_os=${basic_os:-unicos}\n\t\t;;\n\tiris | iris4d)\n\t\tcpu=mips\n\t\tvendor=sgi\n\t\tcase $basic_os in\n\t\t    irix*)\n\t\t\t;;\n\t\t    *)\n\t\t\tbasic_os=irix4\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tminiframe)\n\t\tcpu=m68000\n\t\tvendor=convergent\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n\t\tcpu=m68k\n\t\tvendor=atari\n\t\tbasic_os=mint\n\t\t;;\n\tnews-3600 | risc-news)\n\t\tcpu=mips\n\t\tvendor=sony\n\t\tbasic_os=newsos\n\t\t;;\n\tnext | m*-next)\n\t\tcpu=m68k\n\t\tvendor=next\n\t\tcase $basic_os in\n\t\t    openstep*)\n\t\t        ;;\n\t\t    nextstep*)\n\t\t\t;;\n\t\t    ns2*)\n\t\t      basic_os=nextstep2\n\t\t\t;;\n\t\t    *)\n\t\t      basic_os=nextstep3\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnp1)\n\t\tcpu=np1\n\t\tvendor=gould\n\t\t;;\n\top50n-* | op60c-*)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\tbasic_os=proelf\n\t\t;;\n\tpa-hitachi)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tbasic_os=hiuxwe2\n\t\t;;\n\tpbd)\n\t\tcpu=sparc\n\t\tvendor=tti\n\t\t;;\n\tpbb)\n\t\tcpu=m68k\n\t\tvendor=tti\n\t\t;;\n\tpc532)\n\t\tcpu=ns32k\n\t\tvendor=pc532\n\t\t;;\n\tpn)\n\t\tcpu=pn\n\t\tvendor=gould\n\t\t;;\n\tpower)\n\t\tcpu=power\n\t\tvendor=ibm\n\t\t;;\n\tps2)\n\t\tcpu=i386\n\t\tvendor=ibm\n\t\t;;\n\trm[46]00)\n\t\tcpu=mips\n\t\tvendor=siemens\n\t\t;;\n\trtpc | rtpc-*)\n\t\tcpu=romp\n\t\tvendor=ibm\n\t\t;;\n\tsde)\n\t\tcpu=mipsisa32\n\t\tvendor=sde\n\t\tbasic_os=${basic_os:-elf}\n\t\t;;\n\tsimso-wrs)\n\t\tcpu=sparclite\n\t\tvendor=wrs\n\t\tbasic_os=vxworks\n\t\t;;\n\ttower | tower-32)\n\t\tcpu=m68k\n\t\tvendor=ncr\n\t\t;;\n\tvpp*|vx|vx-*)\n\t\tcpu=f301\n\t\tvendor=fujitsu\n\t\t;;\n\tw65)\n\t\tcpu=w65\n\t\tvendor=wdc\n\t\t;;\n\tw89k-*)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\tbasic_os=proelf\n\t\t;;\n\tnone)\n\t\tcpu=none\n\t\tvendor=none\n\t\t;;\n\tleon|leon[3-9])\n\t\tcpu=sparc\n\t\tvendor=$basic_machine\n\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n\t\t# shellcheck disable=SC2162\n\t\tsaved_IFS=$IFS\n\t\tIFS=\"-\" read cpu vendor <<EOF\n$basic_machine\nEOF\n\t\tIFS=$saved_IFS\n\t\t;;\n\t# We use `pc' rather than `unknown'\n\t# because (1) that's what they normally are, and\n\t# (2) the word \"unknown\" tends to confuse beginning users.\n\ti*86 | x86_64)\n\t\tcpu=$basic_machine\n\t\tvendor=pc\n\t\t;;\n\t# These rules are duplicated from below for sake of the special case above;\n\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n\tpc98)\n\t\tcpu=i386\n\t\tvendor=pc\n\t\t;;\n\tx64 | amd64)\n\t\tcpu=x86_64\n\t\tvendor=pc\n\t\t;;\n\t# Recognize the basic CPU types without company name.\n\t*)\n\t\tcpu=$basic_machine\n\t\tvendor=unknown\n\t\t;;\nesac\n\nunset -v basic_machine\n\n# Decode basic machines in the full and proper CPU-Company form.\ncase $cpu-$vendor in\n\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tcraynv-unknown)\n\t\tvendor=cray\n\t\tbasic_os=${basic_os:-unicosmp}\n\t\t;;\n\tc90-unknown | c90-cray)\n\t\tvendor=cray\n\t\tbasic_os=${Basic_os:-unicos}\n\t\t;;\n\tfx80-unknown)\n\t\tvendor=alliant\n\t\t;;\n\tromp-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tmmix-unknown)\n\t\tvendor=knuth\n\t\t;;\n\tmicroblaze-unknown | microblazeel-unknown)\n\t\tvendor=xilinx\n\t\t;;\n\trs6000-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tvax-unknown)\n\t\tvendor=dec\n\t\t;;\n\tpdp11-unknown)\n\t\tvendor=dec\n\t\t;;\n\twe32k-unknown)\n\t\tvendor=att\n\t\t;;\n\tcydra-unknown)\n\t\tvendor=cydrome\n\t\t;;\n\ti370-ibm*)\n\t\tvendor=ibm\n\t\t;;\n\torion-unknown)\n\t\tvendor=highlevel\n\t\t;;\n\txps-unknown | xps100-unknown)\n\t\tcpu=xps100\n\t\tvendor=honeywell\n\t\t;;\n\n\t# Here we normalize CPU types with a missing or matching vendor\n\tarmh-unknown | armh-alt)\n\t\tcpu=armv7l\n\t\tvendor=alt\n\t\tbasic_os=${basic_os:-linux-gnueabihf}\n\t\t;;\n\tdpx20-unknown | dpx20-bull)\n\t\tcpu=rs6000\n\t\tvendor=bull\n\t\tbasic_os=${basic_os:-bosx}\n\t\t;;\n\n\t# Here we normalize CPU types irrespective of the vendor\n\tamd64-*)\n\t\tcpu=x86_64\n\t\t;;\n\tblackfin-*)\n\t\tcpu=bfin\n\t\tbasic_os=linux\n\t\t;;\n\tc54x-*)\n\t\tcpu=tic54x\n\t\t;;\n\tc55x-*)\n\t\tcpu=tic55x\n\t\t;;\n\tc6x-*)\n\t\tcpu=tic6x\n\t\t;;\n\te500v[12]-*)\n\t\tcpu=powerpc\n\t\tbasic_os=${basic_os}\"spe\"\n\t\t;;\n\tmips3*-*)\n\t\tcpu=mips64\n\t\t;;\n\tms1-*)\n\t\tcpu=mt\n\t\t;;\n\tm68knommu-*)\n\t\tcpu=m68k\n\t\tbasic_os=linux\n\t\t;;\n\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n\t\tcpu=s12z\n\t\t;;\n\topenrisc-*)\n\t\tcpu=or32\n\t\t;;\n\tparisc-*)\n\t\tcpu=hppa\n\t\tbasic_os=linux\n\t\t;;\n\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n\t\tcpu=i586\n\t\t;;\n\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)\n\t\tcpu=i686\n\t\t;;\n\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n\t\tcpu=i686\n\t\t;;\n\tpentium4-*)\n\t\tcpu=i786\n\t\t;;\n\tpc98-*)\n\t\tcpu=i386\n\t\t;;\n\tppc-* | ppcbe-*)\n\t\tcpu=powerpc\n\t\t;;\n\tppcle-* | powerpclittle-*)\n\t\tcpu=powerpcle\n\t\t;;\n\tppc64-*)\n\t\tcpu=powerpc64\n\t\t;;\n\tppc64le-* | powerpc64little-*)\n\t\tcpu=powerpc64le\n\t\t;;\n\tsb1-*)\n\t\tcpu=mipsisa64sb1\n\t\t;;\n\tsb1el-*)\n\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n\t\t;;\n\tstrongarm-* | thumb-*)\n\t\tcpu=arm\n\t\t;;\n\ttx39-*)\n\t\tcpu=mipstx39\n\t\t;;\n\ttx39el-*)\n\t\tcpu=mipstx39el\n\t\t;;\n\tx64-*)\n\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\tarm64-* | aarch64le-*)\n\t\tcpu=aarch64\n\t\t;;\n\n\t# Recognize the canonical CPU Types that limit and/or modify the\n\t# company names they are paired with.\n\tcr16-*)\n\t\tbasic_os=${basic_os:-elf}\n\t\t;;\n\tcrisv32-* | etraxfs*-*)\n\t\tcpu=crisv32\n\t\tvendor=axis\n\t\t;;\n\tcris-* | etrax*-*)\n\t\tcpu=cris\n\t\tvendor=axis\n\t\t;;\n\tcrx-*)\n\t\tbasic_os=${basic_os:-elf}\n\t\t;;\n\tneo-tandem)\n\t\tcpu=neo\n\t\tvendor=tandem\n\t\t;;\n\tnse-tandem)\n\t\tcpu=nse\n\t\tvendor=tandem\n\t\t;;\n\tnsr-tandem)\n\t\tcpu=nsr\n\t\tvendor=tandem\n\t\t;;\n\tnsv-tandem)\n\t\tcpu=nsv\n\t\tvendor=tandem\n\t\t;;\n\tnsx-tandem)\n\t\tcpu=nsx\n\t\tvendor=tandem\n\t\t;;\n\tmipsallegrexel-sony)\n\t\tcpu=mipsallegrexel\n\t\tvendor=sony\n\t\t;;\n\ttile*-*)\n\t\tbasic_os=${basic_os:-linux-gnu}\n\t\t;;\n\n\t*)\n\t\t# Recognize the canonical CPU types that are allowed with any\n\t\t# company name.\n\t\tcase $cpu in\n\t\t\t1750a | 580 \\\n\t\t\t| a29k \\\n\t\t\t| aarch64 | aarch64_be \\\n\t\t\t| abacus \\\n\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n\t\t\t| am33_2.0 \\\n\t\t\t| amdgcn \\\n\t\t\t| arc | arceb | arc32 | arc64 \\\n\t\t\t| arm | arm[lb]e | arme[lb] | armv* \\\n\t\t\t| avr | avr32 \\\n\t\t\t| asmjs \\\n\t\t\t| ba \\\n\t\t\t| be32 | be64 \\\n\t\t\t| bfin | bpf | bs2000 \\\n\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n\t\t\t| d10v | d30v | dlx | dsp16xx \\\n\t\t\t| e2k | elxsi | epiphany \\\n\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n\t\t\t| h8300 | h8500 \\\n\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n\t\t\t| hexagon \\\n\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n\t\t\t| ip2k | iq2000 \\\n\t\t\t| k1om \\\n\t\t\t| le32 | le64 \\\n\t\t\t| lm32 \\\n\t\t\t| loongarch32 | loongarch64 \\\n\t\t\t| m32c | m32r | m32rle \\\n\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n\t\t\t| microblaze | microblazeel \\\n\t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n\t\t\t| mips16 \\\n\t\t\t| mips64 | mips64eb | mips64el \\\n\t\t\t| mips64octeon | mips64octeonel \\\n\t\t\t| mips64orion | mips64orionel \\\n\t\t\t| mips64r5900 | mips64r5900el \\\n\t\t\t| mips64vr | mips64vrel \\\n\t\t\t| mips64vr4100 | mips64vr4100el \\\n\t\t\t| mips64vr4300 | mips64vr4300el \\\n\t\t\t| mips64vr5000 | mips64vr5000el \\\n\t\t\t| mips64vr5900 | mips64vr5900el \\\n\t\t\t| mipsisa32 | mipsisa32el \\\n\t\t\t| mipsisa32r2 | mipsisa32r2el \\\n\t\t\t| mipsisa32r3 | mipsisa32r3el \\\n\t\t\t| mipsisa32r5 | mipsisa32r5el \\\n\t\t\t| mipsisa32r6 | mipsisa32r6el \\\n\t\t\t| mipsisa64 | mipsisa64el \\\n\t\t\t| mipsisa64r2 | mipsisa64r2el \\\n\t\t\t| mipsisa64r3 | mipsisa64r3el \\\n\t\t\t| mipsisa64r5 | mipsisa64r5el \\\n\t\t\t| mipsisa64r6 | mipsisa64r6el \\\n\t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n\t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n\t\t\t| mipsr5900 | mipsr5900el \\\n\t\t\t| mipstx39 | mipstx39el \\\n\t\t\t| mmix \\\n\t\t\t| mn10200 | mn10300 \\\n\t\t\t| moxie \\\n\t\t\t| mt \\\n\t\t\t| msp430 \\\n\t\t\t| nds32 | nds32le | nds32be \\\n\t\t\t| nfp \\\n\t\t\t| nios | nios2 | nios2eb | nios2el \\\n\t\t\t| none | np1 | ns16k | ns32k | nvptx \\\n\t\t\t| open8 \\\n\t\t\t| or1k* \\\n\t\t\t| or32 \\\n\t\t\t| orion \\\n\t\t\t| picochip \\\n\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n\t\t\t| pru \\\n\t\t\t| pyramid \\\n\t\t\t| riscv | riscv32 | riscv32be | riscv64 | riscv64be \\\n\t\t\t| rl78 | romp | rs6000 | rx \\\n\t\t\t| s390 | s390x \\\n\t\t\t| score \\\n\t\t\t| sh | shl \\\n\t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n\t\t\t| sparclite \\\n\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n\t\t\t| spu \\\n\t\t\t| tahoe \\\n\t\t\t| thumbv7* \\\n\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n\t\t\t| tron \\\n\t\t\t| ubicom32 \\\n\t\t\t| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n\t\t\t| vax \\\n\t\t\t| visium \\\n\t\t\t| w65 \\\n\t\t\t| wasm32 | wasm64 \\\n\t\t\t| we32k \\\n\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n\t\t\t| xstormy16 | xtensa* \\\n\t\t\t| ymp \\\n\t\t\t| z8k | z80)\n\t\t\t\t;;\n\n\t\t\t*)\n\t\t\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$cpu-$vendor\"\\' not recognized 1>&2\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Here we canonicalize certain aliases for manufacturers.\ncase $vendor in\n\tdigital*)\n\t\tvendor=dec\n\t\t;;\n\tcommodore*)\n\t\tvendor=cbm\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# Decode manufacturer-specific aliases for certain operating systems.\n\nif test x$basic_os != x\nthen\n\n# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just\n# set os.\ncase $basic_os in\n\tgnu/linux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n\t\t;;\n\t*-*)\n\t\t# shellcheck disable=SC2162\n\t\tsaved_IFS=$IFS\n\t\tIFS=\"-\" read kernel os <<EOF\n$basic_os\nEOF\n\t\tIFS=$saved_IFS\n\t\t;;\n\t# Default OS when just kernel was specified\n\tnto*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n\t\t;;\n\tlinux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n\t\tos=`echo \"$basic_os\" | sed -e 's|managarm|mlibc|'`\n\t\t;;\n\t*)\n\t\tkernel=\n\t\tos=$basic_os\n\t\t;;\nesac\n\n# Now, normalize the OS (knowing we just have one component, it's not a kernel,\n# etc.)\ncase $os in\n\t# First match some system type aliases that might get confused\n\t# with valid system types.\n\t# solaris* is a basic system type, with this one exception.\n\tauroraux)\n\t\tos=auroraux\n\t\t;;\n\tbluegene*)\n\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n\t\t;;\n\tunixware*)\n\t\tos=sysv4.2uw\n\t\t;;\n\t# es1800 is here to avoid being matched by es* (a different OS)\n\tes1800*)\n\t\tos=ose\n\t\t;;\n\t# Some version numbers need modification\n\tchorusos*)\n\t\tos=chorusos\n\t\t;;\n\tisc)\n\t\tos=isc2.2\n\t\t;;\n\tsco6)\n\t\tos=sco5v6\n\t\t;;\n\tsco5)\n\t\tos=sco3.2v5\n\t\t;;\n\tsco4)\n\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco*v* | scout)\n\t\t# Don't match below\n\t\t;;\n\tsco*)\n\t\tos=sco3.2v2\n\t\t;;\n\tpsos*)\n\t\tos=psos\n\t\t;;\n\tqnx*)\n\t\tos=qnx\n\t\t;;\n\thiux*)\n\t\tos=hiuxwe2\n\t\t;;\n\tlynx*178)\n\t\tos=lynxos178\n\t\t;;\n\tlynx*5)\n\t\tos=lynxos5\n\t\t;;\n\tlynxos*)\n\t\t# don't get caught up in next wildcard\n\t\t;;\n\tlynx*)\n\t\tos=lynxos\n\t\t;;\n\tmac[0-9]*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n\t\t;;\n\tos400*)\n\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n\t\t;;\n\tutek*)\n\t\tos=bsd\n\t\t;;\n\tdynix*)\n\t\tos=bsd\n\t\t;;\n\tacis*)\n\t\tos=aos\n\t\t;;\n\tatheos*)\n\t\tos=atheos\n\t\t;;\n\tsyllable*)\n\t\tos=syllable\n\t\t;;\n\t386bsd)\n\t\tos=bsd\n\t\t;;\n\tctix* | uts*)\n\t\tos=sysv\n\t\t;;\n\tnova*)\n\t\tos=rtmk-nova\n\t\t;;\n\tns2)\n\t\tos=nextstep2\n\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n\t\t;;\n\ttpf*)\n\t\tos=tpf\n\t\t;;\n\ttriton*)\n\t\tos=sysv3\n\t\t;;\n\toss*)\n\t\tos=sysv3\n\t\t;;\n\tsvr4*)\n\t\tos=sysv4\n\t\t;;\n\tsvr3)\n\t\tos=sysv3\n\t\t;;\n\tsysvr4)\n\t\tos=sysv4\n\t\t;;\n\tose*)\n\t\tos=ose\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n\t\tos=mint\n\t\t;;\n\tdicos*)\n\t\tos=dicos\n\t\t;;\n\tpikeos*)\n\t\t# Until real need of OS specific support for\n\t\t# particular features comes up, bare metal\n\t\t# configurations are quite functional.\n\t\tcase $cpu in\n\t\t    arm*)\n\t\t\tos=eabi\n\t\t\t;;\n\t\t    *)\n\t\t\tos=elf\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\t# No normalization, but not necessarily accepted, that comes below.\n\t\t;;\nesac\n\nelse\n\n# Here we handle the default operating systems that come with various machines.\n# The value should be what the vendor currently ships out the door with their\n# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\nkernel=\ncase $cpu-$vendor in\n\tscore-*)\n\t\tos=elf\n\t\t;;\n\tspu-*)\n\t\tos=elf\n\t\t;;\n\t*-acorn)\n\t\tos=riscix1.2\n\t\t;;\n\tarm*-rebel)\n\t\tkernel=linux\n\t\tos=gnu\n\t\t;;\n\tarm*-semi)\n\t\tos=aout\n\t\t;;\n\tc4x-* | tic4x-*)\n\t\tos=coff\n\t\t;;\n\tc8051-*)\n\t\tos=elf\n\t\t;;\n\tclipper-intergraph)\n\t\tos=clix\n\t\t;;\n\thexagon-*)\n\t\tos=elf\n\t\t;;\n\ttic54x-*)\n\t\tos=coff\n\t\t;;\n\ttic55x-*)\n\t\tos=coff\n\t\t;;\n\ttic6x-*)\n\t\tos=coff\n\t\t;;\n\t# This must come before the *-dec entry.\n\tpdp10-*)\n\t\tos=tops20\n\t\t;;\n\tpdp11-*)\n\t\tos=none\n\t\t;;\n\t*-dec | vax-*)\n\t\tos=ultrix4.2\n\t\t;;\n\tm68*-apollo)\n\t\tos=domain\n\t\t;;\n\ti386-sun)\n\t\tos=sunos4.0.2\n\t\t;;\n\tm68000-sun)\n\t\tos=sunos3\n\t\t;;\n\tm68*-cisco)\n\t\tos=aout\n\t\t;;\n\tmep-*)\n\t\tos=elf\n\t\t;;\n\tmips*-cisco)\n\t\tos=elf\n\t\t;;\n\tmips*-*)\n\t\tos=elf\n\t\t;;\n\tor32-*)\n\t\tos=coff\n\t\t;;\n\t*-tti)\t# must be before sparc entry or we get the wrong os.\n\t\tos=sysv3\n\t\t;;\n\tsparc-* | *-sun)\n\t\tos=sunos4.1.1\n\t\t;;\n\tpru-*)\n\t\tos=elf\n\t\t;;\n\t*-be)\n\t\tos=beos\n\t\t;;\n\t*-ibm)\n\t\tos=aix\n\t\t;;\n\t*-knuth)\n\t\tos=mmixware\n\t\t;;\n\t*-wec)\n\t\tos=proelf\n\t\t;;\n\t*-winbond)\n\t\tos=proelf\n\t\t;;\n\t*-oki)\n\t\tos=proelf\n\t\t;;\n\t*-hp)\n\t\tos=hpux\n\t\t;;\n\t*-hitachi)\n\t\tos=hiux\n\t\t;;\n\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n\t\tos=sysv\n\t\t;;\n\t*-cbm)\n\t\tos=amigaos\n\t\t;;\n\t*-dg)\n\t\tos=dgux\n\t\t;;\n\t*-dolphin)\n\t\tos=sysv3\n\t\t;;\n\tm68k-ccur)\n\t\tos=rtu\n\t\t;;\n\tm88k-omron*)\n\t\tos=luna\n\t\t;;\n\t*-next)\n\t\tos=nextstep\n\t\t;;\n\t*-sequent)\n\t\tos=ptx\n\t\t;;\n\t*-crds)\n\t\tos=unos\n\t\t;;\n\t*-ns)\n\t\tos=genix\n\t\t;;\n\ti370-*)\n\t\tos=mvs\n\t\t;;\n\t*-gould)\n\t\tos=sysv\n\t\t;;\n\t*-highlevel)\n\t\tos=bsd\n\t\t;;\n\t*-encore)\n\t\tos=bsd\n\t\t;;\n\t*-sgi)\n\t\tos=irix\n\t\t;;\n\t*-siemens)\n\t\tos=sysv4\n\t\t;;\n\t*-masscomp)\n\t\tos=rtu\n\t\t;;\n\tf30[01]-fujitsu | f700-fujitsu)\n\t\tos=uxpv\n\t\t;;\n\t*-rom68k)\n\t\tos=coff\n\t\t;;\n\t*-*bug)\n\t\tos=coff\n\t\t;;\n\t*-apple)\n\t\tos=macos\n\t\t;;\n\t*-atari*)\n\t\tos=mint\n\t\t;;\n\t*-wrs)\n\t\tos=vxworks\n\t\t;;\n\t*)\n\t\tos=none\n\t\t;;\nesac\n\nfi\n\n# Now, validate our (potentially fixed-up) OS.\ncase $os in\n\t# Sometimes we do \"kernel-libc\", so those need to count as OSes.\n\tmusl* | newlib* | relibc* | uclibc*)\n\t\t;;\n\t# Likewise for \"kernel-abi\"\n\teabi* | gnueabi*)\n\t\t;;\n\t# VxWorks passes extra cpu info in the 4th filed.\n\tsimlinux | simwindows | spe)\n\t\t;;\n\t# Now accept the basic system types.\n\t# The portable systems comes first.\n\t# Each alternative MUST end in a * to match a version number.\n\tgnu* | android* | bsd* | mach* | minix* | genix* | ultrix* | irix* \\\n\t     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]* \\\n\t     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \\\n\t     | sym* |  plan9* | psp* | sim* | xray* | os68k* | v88r* \\\n\t     | hiux* | abug | nacl* | netware* | windows* \\\n\t     | os9* | macos* | osx* | ios* \\\n\t     | mpw* | magic* | mmixware* | mon960* | lnews* \\\n\t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n\t     | aos* | aros* | cloudabi* | sortix* | twizzler* \\\n\t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n\t     | mirbsd* | netbsd* | dicos* | openedition* | ose* \\\n\t     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \\\n\t     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \\\n\t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n\t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n\t     | udi* | lites* | ieee* | go32* | aux* | hcos* \\\n\t     | chorusrdb* | cegcc* | glidix* | serenity* \\\n\t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n\t     | midipix* | mingw32* | mingw64* | mint* \\\n\t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n\t     | interix* | uwin* | mks* | rhapsody* | darwin* \\\n\t     | openstep* | oskit* | conix* | pw32* | nonstopux* \\\n\t     | storm-chaos* | tops10* | tenex* | tops20* | its* \\\n\t     | os2* | vos* | palmos* | uclinux* | nucleus* | morphos* \\\n\t     | scout* | superux* | sysv* | rtmk* | tpf* | windiss* \\\n\t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n\t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n\t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \\\n\t     | fiwix* | mlibc* )\n\t\t;;\n\t# This one is extra strict with allowed versions\n\tsco3.2v2 | sco3.2v[4-9]* | sco5v6*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\t;;\n\tnone)\n\t\t;;\n\tkernel* )\n\t\t# Restricted further below\n\t\t;;\n\t*)\n\t\techo Invalid configuration \\`\"$1\"\\': OS \\`\"$os\"\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# As a final step for OS-related things, validate the OS-kernel combination\n# (given a valid OS), if there is a kernel.\ncase $kernel-$os in\n\tlinux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* \\\n\t\t   | linux-musl* | linux-relibc* | linux-uclibc* | linux-mlibc* )\n\t\t;;\n\tuclinux-uclibc* )\n\t\t;;\n\tmanagarm-mlibc* | managarm-kernel* )\n\t\t;;\n\t-dietlibc* | -newlib* | -musl* | -relibc* | -uclibc* | -mlibc* )\n\t\t# These are just libc implementations, not actual OSes, and thus\n\t\t# require a kernel.\n\t\techo \"Invalid configuration \\`$1': libc \\`$os' needs explicit kernel.\" 1>&2\n\t\texit 1\n\t\t;;\n\t-kernel* )\n\t\techo \"Invalid configuration \\`$1': \\`$os' needs explicit kernel.\" 1>&2\n\t\texit 1\n\t\t;;\n\t*-kernel* )\n\t\techo \"Invalid configuration \\`$1': \\`$kernel' does not support \\`$os'.\" 1>&2\n\t\texit 1\n\t\t;;\n\tkfreebsd*-gnu* | kopensolaris*-gnu*)\n\t\t;;\n\tvxworks-simlinux | vxworks-simwindows | vxworks-spe)\n\t\t;;\n\tnto-qnx*)\n\t\t;;\n\tos2-emx)\n\t\t;;\n\t*-eabi* | *-gnueabi*)\n\t\t;;\n\t-*)\n\t\t# Blank kernel with real OS is always fine.\n\t\t;;\n\t*-*)\n\t\techo \"Invalid configuration \\`$1': Kernel \\`$kernel' not known to work with OS \\`$os'.\" 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# Here we handle the case where we know the os, and the CPU type, but not the\n# manufacturer.  We pick the logical manufacturer.\ncase $vendor in\n\tunknown)\n\t\tcase $cpu-$os in\n\t\t\t*-riscix*)\n\t\t\t\tvendor=acorn\n\t\t\t\t;;\n\t\t\t*-sunos*)\n\t\t\t\tvendor=sun\n\t\t\t\t;;\n\t\t\t*-cnk* | *-aix*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-beos*)\n\t\t\t\tvendor=be\n\t\t\t\t;;\n\t\t\t*-hpux*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t*-mpeix*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t*-hiux*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t*-unos*)\n\t\t\t\tvendor=crds\n\t\t\t\t;;\n\t\t\t*-dgux*)\n\t\t\t\tvendor=dg\n\t\t\t\t;;\n\t\t\t*-luna*)\n\t\t\t\tvendor=omron\n\t\t\t\t;;\n\t\t\t*-genix*)\n\t\t\t\tvendor=ns\n\t\t\t\t;;\n\t\t\t*-clix*)\n\t\t\t\tvendor=intergraph\n\t\t\t\t;;\n\t\t\t*-mvs* | *-opened*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-os400*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\ts390-* | s390x-*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-ptx*)\n\t\t\t\tvendor=sequent\n\t\t\t\t;;\n\t\t\t*-tpf*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-vxsim* | *-vxworks* | *-windiss*)\n\t\t\t\tvendor=wrs\n\t\t\t\t;;\n\t\t\t*-aux*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t*-hms*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t*-mpw* | *-macos*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t*-*mint | *-mint[0-9]* | *-*MiNT | *-MiNT[0-9]*)\n\t\t\t\tvendor=atari\n\t\t\t\t;;\n\t\t\t*-vos*)\n\t\t\t\tvendor=stratus\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\necho \"$cpu-$vendor-${kernel:+$kernel-}$os\"\nexit\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 207.822265625,
          "content": "#!/bin/sh\n#\n# configure -- custom configure script for ScummVM.\n#\n# ScummVM is the legal property of its developers, whose names\n# are too numerous to list here. Please refer to the COPYRIGHT\n# file distributed with this source distribution.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nset -a\n\n# NLS nuisances.\nLC_ALL=C\nLANGUAGE=C\n\n# Save the current environment variables for next runs\nSAVED_CONFIGFLAGS=$@\nSAVED_AR=$AR\nSAVED_AS=$AS\nSAVED_ASFLAGS=$ASFLAGS\nSAVED_CPPFLAGS=$CPPFLAGS\nSAVED_CXX=$CXX\nSAVED_CXXFLAGS=$CXXFLAGS\nSAVED_DWP=$DWP\nSAVED_LD=$LD\nSAVED_LDFLAGS=$LDFLAGS\nSAVED_PKG_CONFIG_LIBDIR=${PKG_CONFIG_LIBDIR:-unset}\nSAVED_RANLIB=$RANLIB\nSAVED_SDL_CONFIG=$SDL_CONFIG\nSAVED_STRIP=$STRIP\nSAVED_WINDRES=$WINDRES\nSAVED_WINDRESFLAGS=$WINDRESFLAGS\n\n# Use environment vars if set\nCXXFLAGS=\"$CXXFLAGS $CPPFLAGS\"\nPLUGIN_LDFLAGS=$LDFLAGS\n\n# Backslashes into forward slashes:\n# The following OS/2 specific code is performed to deal with handling of backslashes by ksh.\n# Borrowed from the Sane configure script\n\nif test \"$ac_emxsupport\" != \"no\" -a \"$ac_emxsupport\" != \"NO\"; then\n\tac_save_IFS=\"$IFS\"\n\tIFS=\"\\\\\"\n\tac_TEMP_PATH=\n\tfor ac_dir in $PATH; do\n\t\tIFS=$ac_save_IFS\n\t\tif test -z \"$ac_TEMP_PATH\"; then\n\t\t\tac_TEMP_PATH=\"$ac_dir\"\n\t\telse\n\t\t\tac_TEMP_PATH=\"$ac_TEMP_PATH/$ac_dir\"\n\t\tfi\n\tdone\n\tPATH=\"$ac_TEMP_PATH\"\n\tunset ac_TEMP_PATH\nfi\n\nset_var() {\n\teval ${1}='${2}'\n}\n\nget_var() {\n\teval echo \\$${1}\n}\n\nappend_var() {\n\tVAR=${1}\n\tshift\n\tif eval test -z \\\"\\$${VAR}\\\" ; then\n\t\teval ${VAR}='$@'\n\telse\n\t\teval ${VAR}=\\\"\\$${VAR} \\\"'$@'\n\tfi\n}\n\nprepend_var() {\n\tVAR=${1}\n\tshift\n\tif eval test -z \\\"\\$${VAR}\\\" ; then\n\t\teval ${VAR}='$@'\n\telse\n\t\teval ${VAR}='$@'\\\" \\$${VAR}\\\"\n\tfi\n}\n\n# Add an engine: id name build subengines base-games dependencies\nadd_engine() {\n\t_engines=\"${_engines} ${1}\"\n\tif test \"${3}\" = \"no\" ; then\n\t\tset_var _wip_engines \"${_wip_engines} ${1}\"\n\tfi\n\tset_var _engine_${1}_name \"${2}\"\n\tset_var _engine_${1}_build \"${3}\"\n\tset_var _engine_${1}_build_default \"${3}\"\n\tset_var _engine_${1}_subengines \"${4}\"\n\tset_var _engine_${1}_base \"${5}\"\n\tset_var _engine_${1}_deps \"${6}\"\n\tset_var _engine_${1}_components \"${7}\"\n\tfor sub in ${4}; do\n\t\tset_var _engine_${sub}_sub \"yes\"\n\t\tset_var _engine_${sub}_parent \"${1}\"\n\tdone\n}\n\n# Add a feature: id name settings-list\nadd_feature() {\n\tset_var _feature_${1}_name \"${2}\"\n\t# This is a list of settings, where one must be \"yes\" for the feature to\n\t# be enabled\n\tset_var _feature_${1}_settings \"${3}\"\n}\n\n# Add a component: id name settings-list use-define\nadd_component() {\n\tadd_feature \"$1\" \"$2\" \"$3\"\n\n\tset_var _components \"$(get_var _components) ${1}\"\n\n\tset_var _component_${1}_define \"${4}\"\n}\n\n_srcdir=`dirname $0`\n\n# Read list of engines\nfor i in $_srcdir/engines/*/configure.engine; do\n\t. \"$i\"\ndone\n\n#\n# Default settings\n#\n# Default lib behavior yes/no/auto\n_sdl=no\n_ogg=auto\n_vorbis=auto\n_sdlnet=auto\n_libcurl=auto\n_enet=yes\n_tremor=auto\n_tremolo=no\n_flac=auto\n_mad=auto\n_opl2lpt=no\n_retrowave=auto\n_alsa=auto\n_seq_midi=auto\n_sndio=auto\n_timidity=auto\n_zlib=auto\n_mpeg2=auto\n_a52=auto\n_sparkle=auto\n_osxdockplugin=auto\n_jpeg=auto\n_png=auto\n_gif=auto\n_theoradec=auto\n_vpx=auto\n_faad=auto\n_fluidsynth=auto\n_fluidlite=auto\n_sonivox=auto\n_opengl_mode=auto\n_opengl_game_classic=auto\n_opengl_game_shaders=auto\n_tinygl=yes\n_readline=auto\n_freetype2=auto\n_libmikmod=auto\n_libopenmpt=auto\n_libmpcdec=auto\n_taskbar=auto\n_updates=no\n_libunity=auto\n_dialogs=auto\n_tts=auto\n_gtk=auto\n_fribidi=auto\n_discord=auto\n_test_cxx11=no\n# Default option behavior yes/no\n_debug_build=auto\n_release_build=auto\n_optimizations=auto\n_verbose_build=no\n_werror_build=no\n_text_console=no\n_mt32emu=yes\n_lua=yes\n_build_scalers=yes\n_build_hq_scalers=yes\n_build_edge_scalers=yes\n_build_aspect=yes\n_enable_prof=no\n_enable_asan=no\n_enable_tsan=no\n_enable_ubsan=no\n_bink=yes\n_cloud=auto\n_dlc=no\n_scummvmdlc=no\n_pandoc=no\n_curl=yes\n_lld=no\n_mold=no\n_gold=yes\n# Default vkeybd/eventrec options\n_vkeybd=no\n_eventrec=no\n# GUI translation options\n_translation=yes\n# Default platform settings\n_backend=sdl\n_16bit=auto\n_highres=auto\n_savegame_timestamp=auto\n_dynamic_modules=no\n_elf_loader=no\n_plugins_default=static\n_plugin_prefix=\n_plugin_suffix=\n_nasm=auto\n_optimization_level=\n_default_optimization_level=-O2\n_nuked_opl=yes\n_builtin_resources=yes\n_windows_console=yes\n_windows_unicode=yes\n_cygwin_build=no\n_ext_sse2=auto\n_ext_avx2=auto\n_ext_neon=auto\n# Default commands\n_ranlib=ranlib\n_strip=strip\n_ar=\"ar cr\"\n_as=\"as\"\n_dwp=dwp\n_windres=windres\n_ldd=ldd\n_stagingpath=\"staging\"\n_amigaospath=\"install\"\n_morphospath=\"PROGDIR:\"\n_staticlibpath=\n_xcodetoolspath=\n_sparklepath=\n_pkgconfig=pkg-config\n_sdlconfig=sdl2-config\n_libcurlconfig=curl-config\n_libmikmodconfig=libmikmod-config\n_freetypeconfig=freetype-config\n_freetype_found=\"false\"\n_sdlpath=\"$PATH\"\n_freetypepath=\"$PATH\"\n_libcurlpath=\"$PATH\"\n_libmikmodpath=\"$PATH\"\n_nasmpath=\"$PATH\"\nNASMFLAGS=\"\"\nNASM=\"\"\n_tainted_build=no\n_pandocformat=\"default\"\n_pandocext=\"default\"\n_manualversion=\"latest\"\n# Detection features to be linked into executable or not\n_detection_features_static=yes\n_detection_features_full=yes\n# The following variables are automatically detected, and should not\n# be modified otherwise. Consider them read-only.\n_3d=no\n_posix=no\n_has_posix_spawn=no\n_has_fseeko_offt_64=no\n_has_fseeko64=no\n_has_fopen64=no\n_endian=unknown\n_need_memalign=yes\n_have_x86=no\n_have_amd64=no\n_imgui=yes\n_indeo3=auto\n_indeo45=auto\n_hnm=auto\n_fmtowns_pc98_audio=auto\n_sid_audio=auto\n_vgmtrans_audio=auto\n_midi=auto\n_universaltracker=auto\n\n# Add (virtual) features\nadd_feature 16bit \"16bit color\" \"_16bit\"\nadd_feature 3d \"3D rendering\" \"_3d\"\nadd_feature bink \"Bink\" \"_bink\"\nadd_feature cloud \"cloud\" \"_cloud\"\nadd_feature faad \"libfaad\" \"_faad\"\nadd_feature flac \"FLAC\" \"_flac\"\nadd_feature fribidi \"FriBidi\" \"_fribidi\"\nadd_feature freetype2 \"FreeType2\" \"_freetype2\"\nadd_feature highres \"high resolution\" \"_highres\"\nadd_feature jpeg \"JPEG\" \"_jpeg\"\nadd_feature mad \"MAD\" \"_mad\"\nadd_feature opengl_game_classic \"OpenGL (classic)\" \"_opengl_game_classic\"\nadd_feature opengl_game_shaders \"OpenGL with shaders\" \"_opengl_game_shaders\"\nadd_feature png \"PNG\" \"_png\"\nadd_feature vorbis \"Vorbis file support\" \"_vorbis _tremor\"\nadd_feature zlib \"zlib\" \"_zlib\"\nadd_feature test_cxx11 \"Test C++11\" \"_test_cxx11\"\n\n# Components are features which may be disabled if unused by the engines\nadd_component enet \"ENet\" \"_enet\" \"USE_ENET\"\nadd_component fmtowns_pc98_audio \"FM-TOWNS/PC98 audio\" \"_fmtowns_pc98_audio\" \"USE_FMTOWNS_PC98_AUDIO\"\nadd_component gif \"GIF\" \"_gif\" \"USE_GIF\"\nadd_component hnm \"HNM\" \"_hnm\" \"USE_HNM\"\nadd_component imgui \"Dear ImGui based debugger\" \"_imgui\" \"USE_IMGUI\"\nadd_component indeo3 \"Indeo 3\" \"_indeo3\" \"USE_INDEO3\"\nadd_component indeo45 \"Indeo 4&5\" \"_indeo45\" \"USE_INDEO45\"\nadd_component lua \"Lua\" \"_lua\" \"USE_LUA\"\nadd_component vpx \"libvpx\" \"_vpx\" \"USE_VPX\"\nadd_component theoradec \"libtheoradec\" \"_theoradec\" \"USE_THEORADEC\"\nadd_component midi \"MIDI synthesis\" \"_midi\" \"USE_MIDI\"\nadd_component mpc \"MPC\" \"_libmpcdec\" \"USE_MPCDEC\"\nadd_component mpeg2 \"mpeg2\" \"_mpeg2\" \"USE_MPEG2\"\nadd_component sid_audio \"SID audio\" \"_sid_audio\" \"USE_SID_AUDIO\"\nadd_component tinygl \"TinyGL\" \"_tinygl\" \"USE_TINYGL\"\nadd_component universaltracker \"External Tracker Libraries\" \"_universaltracker\" \"USE_UNIVERSALTRACKER\"\nadd_component vgmtrans_audio \"VGMTrans Soundfont audio\" \"_vgmtrans_audio\" \"USE_VGMTRANS_AUDIO\"\n\n# The following list of features cannot be declared as components\n# because they are used in the common code:\n# 16bit: used by the GUI\n# 3d: not a real feature\n# cloud: used by the GUI\n# flac: used by DefaultAudioCDManager\n# fribidi: used by the GUI\n# freetype2: used by the GUI\n# highres: not a real feature\n# mad: used by DefaultAudioCDManager\n# png: used by the GUI\n# vorbis: used by DefaultAudioCDManager\n# zlib: used by the GUI\n# test_cxx11: used by the build system\n\n# Directories for installing ScummVM.\n# This list is closely based on what GNU autoconf does,\n# although the default value for datadir differs.\n# Like GNU autoconf, we distinguish datadir and datarootdir\n# to make it possible to change e.g. the location of the\n# man pages independently of that of the engine data files,\n# which are placed inside $datadir/scummvm\nprefix=NONE\nexec_prefix=NONE\nbindir='${exec_prefix}/bin'\nlibdir='${exec_prefix}/lib'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}/scummvm'\nmandir='${datarootdir}/man'\ndocdir='${datarootdir}/doc/scummvm'\n#localedir='${datarootdir}/locale'\n\n# For cross compiling\n_host=\"\"\n_host_cpu=\"\"\n_host_vendor=\"\"\n_host_os=\"\"\n_host_alias=\"\"\n\n_port_mk=\"ports.mk\"\n\n# Use temp files in the build directory\nTMPO=./scummvm-conf\nTMPC=${TMPO}.cpp\nTMPLOG=config.log\n\ncc_check_no_clean() {\n\techo >> \"$TMPLOG\"\n\tcat \"$TMPC\" >> \"$TMPLOG\"\n\techo >> \"$TMPLOG\"\n\techo \"$CXX $LDFLAGS $CXXFLAGS $TMPC -o $TMPO$HOSTEXEEXT $@\" >> \"$TMPLOG\"\n\trm -f \"$TMPO$HOSTEXEEXT\"\n\tif test \"-c\" = \"$*\" ; then\n\t\t( $CXX $CXXFLAGS \"$TMPC\" -o \"$TMPO$HOSTEXEEXT\" \"$@\" ) >> \"$TMPLOG\" 2>&1\n\telse\n\t\t( $CXX $LDFLAGS $CXXFLAGS \"$TMPC\" -o \"$TMPO$HOSTEXEEXT\" \"$@\" ) >> \"$TMPLOG\" 2>&1\n\tfi\n\tTMPR=\"$?\"\n\techo \"return code: $TMPR\" >> \"$TMPLOG\"\n\techo >> \"$TMPLOG\"\n\treturn \"$TMPR\"\n}\n\ncc_check_clean() {\n\trm -rf $TMPC $TMPO $TMPO.o $TMPO.dwo $TMPO.dSYM $TMPO$HOSTEXEEXT \"$@\"\n}\n\ncc_check() {\n\tcc_check_no_clean \"$@\"\n\tTMPR=\"$?\"\n\tcc_check_clean\n\treturn \"$TMPR\"\n}\n\ncc_check_define() {\ncat > $TMPC << EOF\nint main(void) {\n\t#ifndef $1\n\tsyntax error\n\t#endif\n\treturn 0;\n}\nEOF\n\tcc_check -c\n\treturn $?\n}\n\ngcc_get_define() {\n\techo \"\" | $CXX -dM -E - | grep -F \"$1\" | head -n1 | cut -d ' ' -f 3-\n}\n\n#\n# Function to provide echo -n for bourne shells that don't have it\n#\necho_n() {\n\tprintf \"$@\"\n}\n\nechocheck() {\n\techo_n \"Checking for $@... \"\n}\n\n# Add a line of data to config.mk.\nadd_line_to_config_mk() {\n\t_config_mk_data=\"$_config_mk_data\"'\n'\"$1\"\n}\n\n# Add a line of data to config.h.\nadd_line_to_config_h() {\n\t_config_h_data=\"$_config_h_data\"'\n'\"$1\"\n}\n\n# Conditionally add a line of data to config.h. Takes two parameters:\n# The first one can be set to 'no' to \"comment out\" the line, i.e.\n# make it ineffective, use 'yes' otherwise.\n# The second param is the line to insert.\nadd_to_config_h_if_yes() {\n\tif test \"$1\" = yes ; then\n\t\tadd_line_to_config_h \"$2\"\n\telse\n\t\tadd_line_to_config_h \"/* $2 */\"\n\tfi\n}\n\n# Conditionally add a line of data to config.mk. Takes two parameters:\n# The first one can be set to 'no' to \"comment out\" the line, i.e.\n# make it ineffective, use 'yes' otherwise.\n# The second param is the line to insert.\nadd_to_config_mk_if_yes() {\n\tif test \"$1\" = yes ; then\n\t\tadd_line_to_config_mk \"$2\"\n\telse\n\t\tadd_line_to_config_mk \"# $2\"\n\tfi\n}\n\n# Conditionally add a '#define' line to config.h. Takes two parameters:\n# The first one can be set to 'yes' or 'no'. If 'yes' is used, then\n# the line \"#define $2\" is added to config.h, otherwise \"#undef $2\".\ndefine_in_config_h_if_yes() {\n\tif test \"$1\" = yes ; then\n\t\tadd_line_to_config_h \"#define $2\"\n\telse\n\t\tadd_line_to_config_h \"#undef $2\"\n\tfi\n}\n\n# Conditionally add definitions to config.h and config.mk. Takes two parameters:\n# The first one can be set to 'yes' or 'no'. If 'yes' is used, then\n# the line \"#define $2\" is added to config.h and \"$2 = 1\" to config.mk.\n# Otherwise \"#undef $2\" is added to config.h and \"# $2 = 1\" to config.mk\ndefine_in_config_if_yes() {\n\tif test \"$1\" = yes ; then\n\t\tadd_line_to_config_h \"#define $2\"\n\t\tadd_line_to_config_mk \"$2 = 1\"\n\telse\n\t\tadd_line_to_config_h \"#undef $2\"\n\t\tadd_line_to_config_mk \"# $2 = 1\"\n\tfi\n}\n\ndefine_in_config_if_no() {\n\tif test \"$1\" = no ; then\n\t\tadd_line_to_config_h \"#define $2\"\n\t\tadd_line_to_config_mk \"$2 = 1\"\n\telse\n\t\tadd_line_to_config_h \"#undef $2\"\n\t\tadd_line_to_config_mk \"# $2 = 1\"\n\tfi\n}\n\n#\n# Determine sdl-config\n#\n# TODO: small bit of code to test sdl usability\nfind_sdlconfig() {\n\techo_n \"Looking for sdl-config... \"\n\tsdlconfigs=\"$SDL_CONFIG:$_sdlconfig:sdl2-config:sdl12-config:sdl11-config:sdl-config\"\n\t_sdlconfig=\n\n\tIFS=\"${IFS=   }\"; ac_save_ifs=\"$IFS\"; IFS=\"$SEPARATOR\"\n\tfor path_dir in $_sdlpath; do\n\t\t#reset separator to parse sdlconfigs\n\t\tIFS=\":\"\n\t\tfor sdlconfig in $sdlconfigs; do\n\t\t\tif test -f \"$path_dir/$sdlconfig\" ; then\n\t\t\t\t_sdlconfig=\"$path_dir/$sdlconfig\"\n\t\t\t\techo $_sdlconfig\n\t\t\t\t# break at first sdl-config found in path\n\t\t\t\tbreak 2\n\t\t\tfi\n\t\tdone\n\tdone\n\n\tIFS=\"$ac_save_ifs\"\n\n\tif test -z \"$_sdlconfig\"; then\n\t\techo \"none found!\"\n\t\texit 1\n\tfi\n}\n\n#\n# Determine freetype-config\n#\nfind_freetypeconfig() {\n\techo_n \"Looking for freetype-config... \"\n\tfreetypeconfigs=\"$_freetypeconfig\"\n\t_freetypeconfig=\n\n\tIFS=\"${IFS=   }\"; ac_save_ifs=\"$IFS\"; IFS=\"$SEPARATOR\"\n\tfor path_dir in $_freetypepath; do\n\t\t#reset separator to parse freetypeconfigs\n\t\tIFS=\":\"\n\t\tfor freetypeconfig in $freetypeconfigs; do\n\t\t\tif test -f \"$path_dir/$freetypeconfig\" ; then\n\t\t\t\t_freetypeconfig=\"$path_dir/$freetypeconfig\"\n\t\t\t\techo $_freetypeconfig\n\t\t\t\t# Save the prefix\n\t\t\t\t_freetypepath=$path_dir\n\t\t\t\tif test `basename $path_dir` = bin ; then\n\t\t\t\t\t_freetypepath=`dirname $path_dir`\n\t\t\t\tfi\n\t\t\t\t# break at first freetype-config found in path\n\t\t\t\tbreak 2\n\t\t\tfi\n\t\tdone\n\tdone\n\n\tIFS=\"$ac_save_ifs\"\n\n\tif test -z \"$_freetypeconfig\"; then\n\t\techo \"none found!\"\n\tfi\n}\n\n#\n# Determine curl-config\n#\nfind_libcurlconfig() {\n\techo_n \"Looking for curl-config... \"\n\tlibcurlconfigs=\"$_libcurlconfig\"\n\t_libcurlconfig=\n\n\tIFS=\"${IFS=   }\"; ac_save_ifs=\"$IFS\"; IFS=\"$SEPARATOR\"\n\tfor path_dir in $_libcurlpath; do\n\t\t#reset separator to parse sdlconfigs\n\t\tIFS=\":\"\n\t\tfor libcurlconfig in $libcurlconfigs; do\n\t\t\tif test -f \"$path_dir/$libcurlconfig\" ; then\n\t\t\t\t_libcurlconfig=\"$path_dir/$libcurlconfig\"\n\t\t\t\techo $_libcurlconfig\n\t\t\t\t# Save the prefix\n\t\t\t\t_libcurlpath=$path_dir\n\t\t\t\tif test `basename $path_dir` = bin ; then\n\t\t\t\t\t_libcurlpath=`dirname $path_dir`\n\t\t\t\tfi\n\t\t\t\t# break at first curl-config found in path\n\t\t\t\tbreak 2\n\t\t\tfi\n\t\tdone\n\tdone\n\n\tIFS=\"$ac_save_ifs\"\n\n\tif test -z \"$_libcurlconfig\"; then\n\t\techo \"none found!\"\n\tfi\n}\n\n#\n# Determine libmikmod-config\n#\nfind_libmikmodconfig() {\n\techo_n \"Looking for mikmod-config... \"\n\tlibmikmodconfigs=\"$_libmikmodconfig\"\n\t_libmikmodconfig=\n\n\tIFS=\"${IFS=   }\"; ac_save_ifs=\"$IFS\"; IFS=\"$SEPARATOR\"\n\tfor path_dir in $_libmikmodpath; do\n\t\t#reset separator to parse mikmodconfig\n\t\tIFS=\":\"\n\t\tfor libmikmodconfig in $libmikmodconfigs; do\n\t\t\tif test -f \"$path_dir/$libmikmodconfig\" ; then\n\t\t\t\t_libmikmodconfig=\"$path_dir/$libmikmodconfig\"\n\t\t\t\techo $_libmikmodconfig\n\t\t\t\t# Save the prefix\n\t\t\t\t_libmikmodpath=$path_dir\n\t\t\t\tif test `basename $path_dir` = bin ; then\n\t\t\t\t\t_libmikmodpath=`dirname $path_dir`\n\t\t\t\tfi\n\t\t\t\t# break at first mikmod-config found in path\n\t\t\t\tbreak 2\n\t\t\tfi\n\t\tdone\n\tdone\n\n\tIFS=\"$ac_save_ifs\"\n\n\tif test -z \"$_libmikmodconfig\"; then\n\t\techo \"none found!\"\n\tfi\n}\n\n#\n# Determine extension used for executables\n#\nget_system_exe_extension() {\n\tcase $1 in\n\triscos)\n\t\t_exeext=\",e1f\"\n\t\t;;\n\t3ds | dreamcast | ds | gamecube | n64 | psp | switch | wii)\n\t\t_exeext=\".elf\"\n\t\t;;\n\tkolibrios | kos32)\n\t\t_exeext=\".dll\"\n\t\t;;\n\tmingw* | *os2-emx)\n\t\t_exeext=\".exe\"\n\t\t;;\n\tmint)\n\t\tif test \"$_backend\" = \"atari\"; then\n\t\t\t# ATARI backend\n\t\t\t_exeext=\".ttp\"\n\t\telse\n\t\t\t# SDL backend\n\t\t\t_exeext=\".gtp\"\n\t\tfi\n\t\t;;\n\temscripten)\n\t\t_exeext=\".html\"\n\t\t;;\n\t*)\n\t\t_exeext=\"\"\n\t\t;;\n\tesac\n}\n\n#\n# Generic options functions\n#\n\n# Show the configure help line for an option\noption_help() {\n\toption=$(echo \"${3:---}${1}                       \" | sed -e \"s/\\(.\\{23\\}\\).*/\\1/\" -e \"s/_/-/g\")\n\techo \"  ${option}  ${2}\"\n}\n\n# Show an error about an unknown option\noption_error() {\n\techo \"error: unrecognized option: $ac_option\nTry \\`$0 --help' for more information.\" >&2\n\texit 1\n}\n\n# Show an error about an unknown engine\nengine_option_error() {\n\techo \"error: unrecognized engine: $1\nTry \\`$0 --help' for more information.\" >&2\n\texit 1\n}\n\n# Show an error about an invalid subengine option\nsubengine_option_error() {\n\techo \"error: this option is invalid for the subengine $1: $ac_option\nTry \\`$0 --help' for more information.\" >&2\n\texit 1\n}\n\n\n#\n# Engine handling functions\n#\n\n# Get the name of the engine\nget_engine_name() {\n\tget_var _engine_$1_name\n}\n\n# Will this engine be built?\nget_engine_build() {\n\tget_var _engine_$1_build\n}\n\n# Was this engine set to be built by default?\nget_engine_build_default() {\n\tget_var _engine_$1_build_default\n}\n\n# Get the subengines\nget_engine_subengines() {\n\tget_var _engine_$1_subengines\n}\n\n# Ask if this is a subengine\ncheck_is_subengine() {\n\tif test -z \"$(get_var _engine_$1_sub)\" ; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Get a subengine's parent (undefined for non-subengines)\nget_subengine_parent() {\n\tget_var _engine_$1_parent\n}\n\n# Enable *all* engines\nengine_enable_all() {\n\tfor engine in $_engines; do\n\t\tset_var _engine_${engine}_build \"yes\"\n\tdone\n}\n\n# Disable *all* engines\nengine_disable_all() {\n\tfor engine in $_engines; do\n\t\tset_var _engine_${engine}_build \"no\"\n\tdone\n}\n\n# Enable all unstable engines\nengine_enable_all_unstable() {\n\tfor engine in $_engines; do\n\t\tengine_build_default=`get_engine_build_default $engine`\n\t\tif test $engine_build_default = no ; then\n\t\t\tset_var _engine_${engine}_build \"yes\"\n\t\tfi\n\tdone\n}\n\n# Disable all unstable engines\nengine_disable_all_unstable() {\n\tfor engine in $_engines; do\n\t\tengine_build_default=`get_engine_build_default $engine`\n\t\tif test $engine_build_default = no ; then\n\t\t\tset_var _engine_${engine}_build \"no\"\n\t\tfi\n\tdone\n}\n\n# Enable the given engine\nengine_enable() {\n\t# Get the parameter\n\tif ( echo $1 | grep ':' ) 2> /dev/null > /dev/null ; then\n\t\teng=`echo $1 | cut -d ':' -f 1`\n\t\topt=`echo $1 | cut -d ':' -f 2`\n\telse\n\t\teng=$1\n\t\topt=yes\n\tfi\n\tengine=`echo $eng | sed 's/-/_/g'`\n\n\t# Filter the parameter for the subengines\n\tif check_is_subengine ${engine} ; then\n\t\tif test \"$opt\" != \"yes\" ; then\n\t\t\tsubengine_option_error ${engine}\n\t\t\treturn\n\t\tfi\n\t\tparent=`get_subengine_parent ${engine}`\n\t\tif test `get_engine_build ${parent}` = \"no\" ; then\n\t\t\tset_var _engine_${parent}_build \"yes\"\n\t\tfi\n\tfi\n\n\tif test \"$opt\" != \"static\" -a \"$opt\" != \"dynamic\" -a \"$opt\" != \"yes\" ; then\n\t\toption_error\n\t\treturn\n\tfi\n\n\tsubengines=\n\tif test \"${engine%_all}\" != \"${engine}\" ; then\n\t\tengine=\"${engine%_all}\"\n\t\tsubengines=$(get_engine_subengines ${engine})\n\t\tif test \"$subengines\" = \"\" ; then\n\t\t\tengine_option_error \"${engine}*\"\n\t\t\treturn\n\t\tfi\n\tfi\n\n\tif test \"`get_engine_name ${engine}`\" = \"\" ; then\n\t\tengine_option_error ${engine}\n\t\treturn\n\tfi\n\n\tset_var _engine_${engine}_build \"$opt\"\n\tfor subengine in $subengines ; do\n\t\tset_var _engine_${subengine}_build \"$opt\"\n\tdone\n}\n\n# Disable the given engine\nengine_disable() {\n\t# Filter malformed options\n\tif ( echo $1 | grep '=' ) 2> /dev/null > /dev/null ; then\n\t\toption_error\n\t\treturn\n\tfi\n\n\tengine=`echo $1 | sed 's/-/_/g'`\n\tif test \"`get_engine_name ${engine}`\" != \"\" ; then\n\t\tset_var _engine_${engine}_build \"no\"\n\telse\n\t\tengine_option_error ${engine}\n\tfi\n}\n\n# Show the configure help line for a given engine\nshow_engine_help() {\n\tname=`get_engine_name $1`\n\toption_help \"${1}\" \"${name} engine\" \"  \"\n\tfor sub in `get_engine_subengines $1`; do\n\t\tshow_subengine_help $sub $1\n\tdone\n}\n\n# Show the configure help line for a given subengine\nshow_subengine_help() {\n\tname=`get_engine_name $1`\n\tparent=`get_engine_name $2`\n\toption_help \"- ${1}\" \"${name} in ${parent} engine\" \"  \"\n}\n\n# Copy first argument to second one if they are different. Otherwise, delete the first one.\n# Touch the optional third argument on change\ncopy_if_changed() {\n\tif cmp -s $1 $2; then\n\t\trm -f $1\n\telse\n\t\tmv -f $1 $2\n\t\tif test -n \"$3\" ; then\n\t\t\ttouch \"$3\"\n\t\tfi\n\tfi\n}\n\n#\n# Check any parameters we received\n#\n# TODO:\n# * Change --disable-mad / --enable-mad to the way it's done in autoconf:\n#  That is, --without-mad / --with-mad=/prefix/to/mad. Useful for people\n#  who have Mad/Vorbis/ALSA installed in a non-standard locations.\n#\n\nfor parm in \"$@\" ; do\n\tif test \"$parm\" = \"--help\" || test \"$parm\" = \"-help\" || test \"$parm\" = \"-h\" ; then\n\t\tfor engine in $_engines; do\n\t\t\tif ! check_is_subengine $engine ; then\n\t\t\t\tengines_help=\"$engines_help`show_engine_help $engine`\n\"\n\t\t\tfi\n\t\tdone\n\t\tcat << EOF\n\nUsage: $0 [OPTIONS]...\n\nConfiguration:\n  -h, --help              display this help and exit\n  --backend=BACKEND       backend to build (3ds, atari, android, dc, ds,\n                          ios7, maemo, n64, null, opendingux, openpandora,\n                          psp, psp2, samsungtv, sdl, switch, wii) [sdl]\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [/usr/local]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, \\`make install' will install all the files in\n\\`/usr/local/bin', \\`/usr/local/lib' etc.  You can specify\nan installation prefix other than \\`/usr/local' using \\`--prefix',\nfor instance \\`--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data\n                          [DATAROOTDIR/scummvm]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/scummvm]\n\nSpecial configuration feature:\n  --host=HOST             cross-compile to target HOST (arm-linux, ...)\n                          special targets: 3ds for Nintendo 3DS\n                                           android-arm-v7a for Android ARMv7-A (armeabi-v7a)\n                                           android-arm64-v8a for Android ARMv8-A (arm64-v8a)\n                                           android-x86 for Android x86\n                                           android-x86_64 for Android x86_64\n                                           raspberrypi for Raspberry Pi\n                                           dreamcast for Sega Dreamcast\n                                           ds for Nintendo DS\n                                           gamecube for Nintendo GameCube\n                                           ios7 for Apple iPhone / iPad (iOS >= 7)\n                                           ios7-arm64 for Apple iPhone / iPad (iOS >= 7, 64-bit)\n                                           kos32 for Kolibri OS\n                                           maemo for Nokia Maemo\n                                           miyoo for 1st generation Miyoo\n                                           miyoomini for Miyoo Mini\n                                           n64 for Nintendo 64\n                                           opendingux-gcw0 for GCW0 with Opendingux Beta\n                                           opendingux-lepus for Lepus with Opendingux Beta\n                                           opendingux-rs90 for RS90 and RG99 with Opendingux Beta\n                                           openpandora for OpenPandora\n                                           ouya for OUYA\n                                           ps3 for PlayStation 3\n                                           psp2 for PlayStation Vita\n                                           psp for PlayStation Portable\n                                           sailfish for SailfishOS\n                                           samsungtv for Samsung TV\n                                           switch for Nintendo Switch\n                                           tvos for Apple TV (tvOS 9.0+)\n                                           wasm32-unknown-emscripten for WebAssembly\n                                           wii for Nintendo Wii\n\nGame engines:\n  --enable-all-engines     enable all engines, including those which are\n                           broken or unsupported\n  --disable-all-engines    disable all engines\n  --enable-all-unstable-engines     enable the engines which are\n                                    broken or unsupported\n  --disable-all-unstable-engines    disable only the engines which are\n                                    broken or unsupported\n  --enable-engine=<engine name>[,<engine name>...] enable engine(s) listed\n  --disable-engine=<engine name>[,<engine name>...] disable engine(s) listed\n  --enable-engine-static=<engine name>[,<engine name>...]\n      enable engine(s) listed as static builtin (when plugins are enabled)\n  --enable-engine-dynamic=<engine name>[,<engine name>...]\n      enable engine(s) listed as dynamic plugin (when plugins are enabled)\n    The values of <engine name> for these options are as follows:\n$engines_help\nOptional Features:\n  --enable-static          build a static binary instead of using shared objects\n  --enable-detection-static  build detection features into executable (default)\n  --enable-detection-dynamic build detection features into a library\n  --disable-detection-full add detection only for the engines which were enabled\n  --disable-debug          disable building with debugging symbols\n  --enable-Werror          treat warnings as errors\n  --enable-release         enable building in release mode (this activates\n                           optimizations)\n  --enable-release-mode    enable building in release mode (without optimizations)\n  --enable-optimizations   enable optimizations\n  --enable-asan            enable Address Sanitizer for memory-related debugging\n  --enable-tsan            enable Thread Sanitizer for thread-related debugging\n  --enable-ubsan           enable Undefined Behavior Sanitizer for undefined-behavior-related debugging\n  --enable-profiling       enable profiling\n  --enable-plugins         enable the support for dynamic plugins\n  --default-dynamic        make plugins dynamic by default\n  --disable-mt32emu        don't enable the integrated MT-32 emulator\n  --disable-lua            don't enable Lua support\n  --disable-nuked-opl      don't build Nuked OPL driver\n  --disable-16bit          don't enable 16bit color support\n  --disable-highres        don't enable support for high resolution engines >320x240\n  --disable-savegame-timestamp don't use timestamps for blank savegame descriptions\n  --disable-scalers        exclude scalers\n  --disable-hq-scalers     exclude HQ2x and HQ3x scalers (disables Edge scalers as well)\n  --disable-edge-scalers   exclude Edge2x and Edge3x scalers\n  --disable-aspect         exclude aspect ratio correction\n  --disable-translation    don't build support for translated messages\n  --disable-taskbar        don't build support for taskbar and launcher integration\n  --disable-cloud          don't build cloud support\n  --disable-system-dialogs don't build support for system dialogs\n  --enable-vkeybd          build virtual keyboard support\n  --enable-dlc             build scummvm dlc downloading support\n  --enable-scummvmdlc      build scummvm dlc downloading support using ScummVM Cloud\n  --enable-eventrecorder   enable event recording functionality\n  --disable-eventrecorder  disable event recording functionality\n  --enable-updates         build support for updates\n  --enable-text-console    use text console instead of graphical console\n  --enable-verbose-build   enable regular echoing of commands during build\n                           process\n  --enable-tts             build support for text to speech\n  --disable-tts            don't build support for text to speech\n  --disable-bink           don't build with Bink video support\n  --opengl-mode=MODE       OpenGL (ES) mode to use for OpenGL output [auto]\n                           available modes: auto for autodetection\n                                            none for disabling any OpenGL usage\n                                            any for runtime detection\n                                            gl for forcing OpenGL\n                                            gles for forcing OpenGL ES\n                                            gles2 for forcing OpenGL ES 2\n                           WARNING: only specify this manually if you know what\n                           you are doing!\n  --no-builtin-resources   do not include additional resources (e.g. engine data, fonts)\n                           into the ScummVM binary\n  --enable-windows-console  show console output on Windows (default)\n  --disable-windows-console do not show console output on Windows\n  --enable-windows-unicode  use Windows Unicode APIs (default)\n  --disable-windows-unicode use Windows ANSI APIs\n  --enable-ext-sse2         allow code to use sse2 extensions on x86/amd64\n  --enable-ext-avx2         allow code to use avx2 extensions on x86/amd64\n  --enable-ext-neon         allow code to use neon extensions on ARM\n\nOptional Documentation Options:\n  --with-manual-version=VERSION version to use when generating the manual (optional)\n  --with-pandoc-format=FORMAT   pandoc format to use during the conversion (optional)\n\nOptional Libraries:\n  --with-alsa-prefix=DIR   prefix where alsa is installed (optional)\n  --disable-alsa           disable ALSA midi sound support [autodetect]\n\n  --with-ogg-prefix=DIR    prefix where libogg is installed (optional)\n  --disable-ogg            disable Ogg support [autodetect]\n\n  --with-vorbis-prefix=DIR prefix where libvorbis is installed (optional)\n  --disable-vorbis         disable Vorbis support [autodetect]\n\n  --with-tremor-prefix=DIR prefix where tremor is installed (optional)\n  --disable-tremor         disable tremor support [autodetect]\n\n  --with-mad-prefix=DIR    prefix where libmad is installed (optional)\n  --disable-mad            disable libmad (MP3) support [autodetect]\n\n  --with-fribidi-prefix=DIR    prefix where libfribidi is installed\n  --disable-fribidi            disable libfribidi support [autodetect]\n\n  --with-flac-prefix=DIR   prefix where libFLAC is installed (optional)\n  --disable-flac           disable FLAC support [autodetect]\n\n  --with-zlib-prefix=DIR   prefix where zlib is installed (optional)\n  --disable-zlib           disable zlib (compression) support [autodetect]\n\n  --with-mpeg2-prefix=DIR  prefix where libmpeg2 is installed (optional)\n  --enable-mpeg2           enable mpeg2 codec for cutscenes [autodetect]\n\n  --with-mikmod-prefix=DIR    Prefix where libmikmod is installed (optional)\n  --enable-mikmod             enable mikmod module for playing various sound formats like impulsetracker [autodetect]\n\n  --with-openmpt-prefix=DIR    Prefix where libopenmpt is installed (optional)\n  --enable-openmpt             enable openmpt module for playing various sound formats like impulsetracker [autodetect]\n\n  --with-mpcdec-prefix=DIR    Prefix where libmpcdec is installed (optional)\n  --enable-mpcdec             enable libmpcdec for playing musepack format audio [autodetect]\n\n  --with-a52-prefix=DIR    Prefix where liba52 is installed (optional)\n  --enable-a52             enable a52 codec for MPEG decoder [autodetect]\n\n  --with-opengl-prefix=DIR      prefix where OpenGL (ES) is installed (optional)\n  --disable-opengl-game         disable OpenGL (ES) support in game [autodetect]\n  --disable-opengl-game-classic disable OpenGL classic support in game\n  --disable-opengl-game-shaders disable use of modern OpenGL with shaders in game\n\n  --with-jpeg-prefix=DIR   Prefix where libjpeg is installed (optional)\n  --disable-jpeg           disable JPEG decoder [autodetect]\n\n  --with-png-prefix=DIR    prefix where libpng is installed (optional)\n  --disable-png            disable PNG decoder [autodetect]\n\n  --with-gif-prefix=DIR    prefix where giflib is installed (optional)\n  --disable-gif            disable GIF decoder [autodetect]\n\n  --with-theoradec-prefix=DIR  prefix where libtheoradec is installed (optional)\n  --disable-theoradec      disable Theora decoder [autodetect]\n\n  --with-vpx-prefix=DIR    prefix where libtvpx is installed (optional)\n  --disable-vpx            disable VP8/VP9 decoder [autodetect]\n\n  --with-faad-prefix=DIR   prefix where libfaad is installed (optional)\n  --disable-faad           disable AAC decoder [autodetect]\n\n  --with-fluidsynth-prefix=DIR prefix where libfluidsynth is\n                           installed (optional)\n  --disable-fluidsynth     disable fluidsynth MIDI driver [autodetect]\n\n  --with-fluidlite-prefix=DIR prefix where libfluidlite is\n                           installed (optional)\n  --disable-fluidlite      disable fluidlite MIDI driver [autodetect]\n\n  --with-sonivox-prefix=DIR prefix where libsonivox is\n                           installed (optional)\n  --disable-sonivox        disable EAS MIDI driver [autodetect]\n\n  --with-ieee1284-prefix=DIR prefix where libieee1284 is installed (optional)\n  --enable-opl2lpt         enable OPL2LPT support\n\n  --with-retrowave-prefix=DIR prefix where libretrowave is installed (optional)\n  --enable-retrowave       enable RetroWave OPL3 support\n\n  --with-sparkle-prefix=DIR    prefix where sparkle is installed\n                           (macOS/Windows only - optional)\n  --disable-sparkle        disable sparkle automatic update support\n                           [macOS/Windows only - autodetect]\n\n  --disable-osx-dock-plugin    disable the NSDockTilePlugin support\n                               [macOS only - autodetect]\n\n  --with-sdl-prefix=DIR    prefix where the SDL package is installed (optional)\n                           e.g., if sdl-config script is at:\n                           /opt/mxe/usr/i686-w64-mingw32.static/bin/sdl2-config\n                           then you should pass:\n                           '--with-sdl-prefix=/opt/mxe/usr/i686-w64-mingw32.static'\n\n  --with-freetype2-prefix=DIR  prefix where the freetype-config script is\n                               installed (optional)\n  --disable-freetype2      disable freetype2 TTF library usage [autodetect]\n\n  --with-nasm-prefix=DIR   prefix where nasm executable is installed (optional)\n  --disable-nasm           disable assembly language optimizations [autodetect]\n\n  --with-readline-prefix=DIR   prefix where readline is installed (optional)\n  --disable-readline       disable readline support in text console [autodetect]\n\n  --with-libunity-prefix=DIR   prefix where libunity is installed (optional)\n  --disable-libunity       disable Unity launcher integration [autodetect]\n\n  --with-gtk-prefix=DIR   prefix where gtk is installed (optional)\n  --disable-gtk       disable GTK dialog integration [autodetect]\n\n  --with-sndio-prefix=DIR  prefix where sndio is installed (optional)\n  --disable-sndio          disable sndio MIDI driver [autodetect]\n\n  --with-sdlnet-prefix=DIR prefix where SDL_Net is installed (optional)\n  --disable-sdlnet         disable SDL_Net networking library [autodetect]\n\n  --with-libcurl-prefix=DIR    prefix where libcurl is installed (optional)\n  --disable-libcurl        disable libcurl networking library [autodetect]\n\n  --disable-enet         don't enable ENet networking support\n\n  --with-discord-prefix=DIR   prefix where discord-rpc is installed (optional)\n  --disable-discord       disable Discord rich presence integration [autodetect]\n\nSome influential environment variables:\n  AR                 archiver command\n  AS                 assembler command\n  ASFLAGS            assembler flags\n  CONFIGURE_NO_HOST  Ignore the cross-compile target set by the --host= option\n  CPPFLAGS           C++ preprocessor flags, e.g. -I<include dir> if you have\n                     headers in a nonstandard directory <include dir>\n  CXX                C++ compiler command\n  CXXFLAGS           C++ compiler flags\n  DWP                DWARF packing utility command\n  LD                 linker command\n  LDFLAGS            linker flags, e.g. -L<lib dir> if you have libraries in a\n                     nonstandard directory <lib dir>\n  PKG_CONFIG_LIBDIR  list of directories where pkg-config '.pc' files are\n                     looked up\n  RANLIB             archive indexer command\n  SDL_CONFIG         SDL configurer script name (not path)\n  STRIP              symbol stripper command\n  WINDRES            Windows resource compiler command\n  WINDRESFLAGS       Windows resource compiler flags\n\nEOF\n\t\texit 0\n\tfi\ndone # for parm in ...\n\n\n#\n# If we're not showing help, greet the user and start the log file\n#\necho \"Running ScummVM configure...\"\necho \"Configure run on\" `date` > $TMPLOG\ncat >> $TMPLOG <<EOF\nInvocation command line was:\n$0 $@\nSaved environment variables:\nAR=\"$SAVED_AR\" AS=\"$SAVED_AS\" ASFLAGS=\"$SAVED_ASFLAGS\" CPPFLAGS=\"$SAVED_CPPFLAGS\" CXX=\"$SAVED_CXX\" CXXFLAGS=\"$SAVED_CXXFLAGS\" DWP=\"$SAVED_DWP\" LD=\"$SAVED_LD\" LDFLAGS=\"$SAVED_LDFLAGS\" PKG_CONFIG_LIBDIR=\"$SAVED_PKG_CONFIG_LIBDIR\" RANLIB=\"$SAVED_RANLIB\" SDL_CONFIG=\"$SAVED_SDL_CONFIG\" STRIP=\"$SAVED_STRIP\" WINDRES=\"$SAVED_WINDRES\" WINDRESFLAGS=\"$SAVED_WINDRESFLAGS\"\nEOF\n\nJPEG_LIBS=-ljpeg\nFLAC_LIBS=-lFLAC\nTHEORADEC_LIBS=-ltheoradec\n\nfor ac_option in $@; do\n\tcase \"$ac_option\" in\n\t# Silently ignore options valid for Autotools configure.\n\t--build=*)                                           ;;\n\t--program-prefix=*)                                  ;;\n\t--sbindir=*)                                         ;;\n\t--sysconfdir=*)                                      ;;\n\t--includedir=*)                                      ;;\n\t--libexecdir=*)                                      ;;\n\t--localstatedir=*)                                   ;;\n\t--runstatedir=*)                                     ;;\n\t--sharedstatedir=*)                                  ;;\n\t--infodir=*)                                         ;;\n\t--disable-dependency-tracking)                       ;;\n\t--enable-dependency-tracking)                        ;;\n\t# End of ignored options.\n\t--enable-static)              _static_build=yes      ;;\n\t--enable-detection-static)    _detection_features_static=yes;;\n\t--enable-detection-dynamic)   _detection_features_static=no;;\n\t--enable-detection-full)      _detection_features_full=yes;;\n\t--disable-detection-full)     _detection_features_full=no;;\n\t--disable-16bit)              _16bit=no              ;;\n\t--enable-highres)             _highres=yes           ;;\n\t--disable-highres)            _highres=no            ;;\n\t--disable-savegame-timestamp) _savegame_timestamp=no ;;\n\t--disable-scalers)            _build_scalers=no      ;;\n\t--disable-hq-scalers)         _build_hq_scalers=no   ;;\n\t--disable-edge-scalers)       _build_edge_scalers=no ;;\n\t--disable-aspect)             _build_aspect=no       ;;\n\t--enable-alsa)                _alsa=yes              ;;\n\t--disable-alsa)               _alsa=no               ;;\n\t--enable-seq-midi)            _seq_midi=yes          ;;\n\t--disable-seq-midi)           _seq_midi=no           ;;\n\t--enable-sndio)               _sndio=yes             ;;\n\t--disable-sndio)              _sndio=no              ;;\n\t--enable-timidity)            _timidity=yes          ;;\n\t--disable-timidity)           _timidity=no           ;;\n\t--enable-ogg)                 _ogg=yes               ;;\n\t--disable-ogg)                _ogg=no                ;;\n\t--enable-vorbis)              _vorbis=yes            ;;\n\t--disable-vorbis)             _vorbis=no             ;;\n\t--enable-tremor)              _tremor=yes            ;;\n\t--disable-tremor)             _tremor=no             ;;\n\t--enable-opl2lpt)             _opl2lpt=yes           ;;\n\t--disable-opl2lpt)            _opl2lpt=no            ;;\n\t--enable-retrowave)           _retrowave=yes         ;;\n\t--disable-retrowave)          _retrowave=no          ;;\n\t--enable-flac)                _flac=yes              ;;\n\t--disable-flac)               _flac=no               ;;\n\t--enable-mad)                 _mad=yes               ;;\n\t--disable-mad)                _mad=no                ;;\n\t--enable-fribidi)             _fribidi=yes           ;;\n\t--disable-fribidi)            _fribidi=no            ;;\n\t--enable-test-c++11)          _test_cxx11=yes        ;;\n\t--disable-test-c++11)         _test_cxx11=no         ;;\n\t--enable-zlib)                _zlib=yes              ;;\n\t--disable-zlib)               _zlib=no               ;;\n\t--enable-sparkle)             _sparkle=yes           ;;\n\t--disable-sparkle)            _sparkle=no            ;;\n\t--enable-osx-dock-plugin)     _osxdockplugin=yes     ;;\n\t--disable-osx-dock-plugin)    _osxdockplugin=no      ;;\n\t--enable-nasm)                _nasm=yes              ;;\n\t--disable-nasm)               _nasm=no               ;;\n\t--enable-mpeg2)               _mpeg2=yes             ;;\n\t--disable-mpeg2)              _mpeg2=no              ;;\n\t--enable-mikmod)              _libmikmod=yes         ;;\n\t--disable-mikmod)             _libmikmod=no          ;;\n\t--enable-openmpt)             _libopenmpt=yes        ;;\n\t--disable-openmpt)            _libopenmpt=no         ;;\n\t--enable-mpcdec)              _libmpcdec=yes        ;;\n\t--disable-mpcdec)             _libmpcdec=no         ;;\n\t--enable-a52)                 _a52=yes               ;;\n\t--disable-a52)                _a52=no                ;;\n\t--disable-jpeg)               _jpeg=no               ;;\n\t--enable-jpeg)                _jpeg=yes              ;;\n\t--disable-png)                _png=no                ;;\n\t--enable-png)                 _png=yes               ;;\n\t--disable-gif)                _gif=no                ;;\n\t--enable-gif)                 _gif=yes               ;;\n\t--disable-theoradec)          _theoradec=no          ;;\n\t--enable-theoradec)           _theoradec=yes         ;;\n\t--disable-vpx)                _vpx=no                ;;\n\t--enable-vpx)                 _vpx=yes               ;;\n\t--disable-faad)               _faad=no               ;;\n\t--enable-faad)                _faad=yes              ;;\n\t--disable-fluidsynth)         _fluidsynth=no         ;;\n\t--enable-fluidsynth)          _fluidsynth=yes        ;;\n\t--disable-fluidlite)          _fluidlite=no          ;;\n\t--enable-fluidlite)           _fluidlite=yes         ;;\n\t--disable-sonivox)            _sonivox=no            ;;\n\t--enable-sonivox)             _sonivox=yes           ;;\n\t--enable-readline)            _readline=yes          ;;\n\t--disable-readline)           _readline=no           ;;\n\t--enable-freetype2)           _freetype2=yes         ;;\n\t--disable-freetype2)          _freetype2=no          ;;\n\t--enable-taskbar)             _taskbar=yes           ;;\n\t--disable-taskbar)            _taskbar=no            ;;\n\t--enable-system-dialogs)      _dialogs=yes           ;;\n\t--disable-system-dialogs)     _dialogs=no            ;;\n\t--enable-sdlnet)              _sdlnet=yes            ;;\n\t--disable-sdlnet)             _sdlnet=no             ;;\n\t--enable-libcurl)             _libcurl=yes           ;;\n\t--disable-libcurl)            _libcurl=no            ;;\n\t--enable-enet)                _enet=yes              ;;\n\t--disable-enet)               _enet=no               ;;\n\t--enable-cloud)               _cloud=yes             ;;\n\t--disable-cloud)              _cloud=no              ;;\n\t--enable-dlc)                 _dlc=yes               ;;\n\t--disable-dlc)                _dlc=no                ;;\n\t--enable-scummvmdlc)          _scummvmdlc=yes        ;;\n\t--disable-scummvmdlc)         _scummvmdlc=no         ;;\n\t--enable-lld)                 _lld=yes               ;;\n\t--disable-lld)                _lld=no                ;;\n\t--enable-mold)                _mold=yes              ;;\n\t--disable-mold)               _mold=no               ;;\n\t--enable-gold)                _gold=yes              ;;\n\t--disable-gold)               _gold=no               ;;\n\t--enable-updates)             _updates=yes           ;;\n\t--disable-updates)            _updates=no            ;;\n\t--enable-libunity)            _libunity=yes          ;;\n\t--disable-libunity)           _libunity=no           ;;\n\t--enable-tts)                 _tts=yes               ;;\n\t--disable-tts)                _tts=no                ;;\n\t--enable-gtk)                 _gtk=yes               ;;\n\t--disable-gtk)                _gtk=no                ;;\n\t--disable-imgui)              _imgui=no              ;;\n\t--enable-imgui)               _imgui=yes             ;;\n\t--opengl-mode=*)\n\t\t_opengl_mode=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--disable-opengl-game)\n\t\t_opengl_game_classic=no\n\t\t_opengl_game_shaders=no\n\t\t;;\n\t--disable-opengl-game-classic) _opengl_game_classic=no ;;\n\t--disable-opengl-game-shaders) _opengl_game_shaders=no ;;\n\t--enable-tinygl)              _tinygl=yes            ;;\n\t--disable-tinygl)             _tinygl=no             ;;\n\t--enable-bink)                _bink=yes              ;;\n\t--disable-bink)               _bink=no               ;;\n\t--enable-discord)             _discord=yes           ;;\n\t--disable-discord)            _discord=no            ;;\n\t--enable-verbose-build)      _verbose_build=yes      ;;\n\t--enable-cygwin-build)       _cygwin_build=yes       ;;\n\t--enable-plugins)            _dynamic_modules=yes    ;;\n\t--default-dynamic)           _plugins_default=dynamic;;\n\t--enable-mt32emu)            _mt32emu=yes            ;;\n\t--disable-mt32emu)           _mt32emu=no             ;;\n\t--enable-lua)                _lua=yes                ;;\n\t--disable-lua)               _lua=no                 ;;\n\t--enable-nuked-opl)          _nuked_opl=yes          ;;\n\t--disable-nuked-opl)         _nuked_opl=no           ;;\n\t--enable-translation)        _translation=yes        ;;\n\t--disable-translation)       _translation=no         ;;\n\t--enable-vkeybd)             _vkeybd=yes             ;;\n\t--disable-vkeybd)            _vkeybd=no              ;;\n\t--enable-eventrecorder)      _eventrec=yes           ;;\n\t--disable-eventrecorder)     _eventrec=no            ;;\n\t--enable-text-console)       _text_console=yes       ;;\n\t--disable-text-console)      _text_console=no        ;;\n\t--enable-ext-sse2)           _ext_sse2=yes           ;;\n\t--disable-ext-sse2)          _ext_sse2=no            ;;\n\t--enable-ext-avx2)           _ext_avx2=yes           ;;\n\t--disable-ext-avx2)          _ext_avx2=no            ;;\n\t--enable-ext-neon)           _ext_neon=yes           ;;\n\t--disable-ext-neon)          _ext_neon=no            ;;\n\t--with-fluidsynth-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tFLUIDSYNTH_CFLAGS=\"-I$arg/include\"\n\t\tFLUIDSYNTH_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-fluidlite-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tFLUIDLITE_CFLAGS=\"-I$arg/include\"\n\t\tFLUIDLITE_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-sonivox-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tSONIVOX_CFLAGS=\"-I$arg/include\"\n\t\tSONIVOX_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-mpeg2-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tMPEG2_CFLAGS=\"-I$arg/include\"\n\t\tMPEG2_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-a52-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tA52_CFLAGS=\"-I$arg/include\"\n\t\tA52_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-mpcdec-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tLIBMPCDEC_CFLAGS=\"-I$arg/include\"\n\t\tLIBMPCDEC_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-alsa-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tALSA_CFLAGS=\"-I$arg/include\"\n\t\tALSA_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-sndio-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tSNDIO_CFLAGS=\"-I$arg/include\"\n\t\tSNDIO_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-ogg-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tOGG_CFLAGS=\"-I$arg/include\"\n\t\tOGG_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-vorbis-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tVORBIS_CFLAGS=\"-I$arg/include\"\n\t\tVORBIS_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-tremor-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tTREMOR_CFLAGS=\"-I$arg/include\"\n\t\tTREMOR_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-ieee1284-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tIEEE1284_CFLAGS=\"-I$arg/include\"\n\t\tIEEE1284_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-retrowave-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tRETROWAVE_CFLAGS=\"-I$arg/include\"\n\t\tRETROWAVE_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-flac-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tFLAC_CFLAGS=\"-I$arg/include\"\n\t\tFLAC_LIBS=\"-L$arg/lib -lFLAC\"\n\t\tFLAC_PREFIX=\"$arg\"\n\t\t;;\n\t--with-mad-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tMAD_CFLAGS=\"-I$arg/include\"\n\t\tMAD_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-fribidi-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tFRIBIDI_CFLAGS=\"-I$arg/include\"\n\t\tFRIBIDI_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-jpeg-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tJPEG_CFLAGS=\"-I$arg/include\"\n\t\tJPEG_LIBS=\"-L$arg/lib -ljpeg\"\n\t\tJPEG_PREFIX=\"$arg\"\n\t\t;;\n\t--with-png-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tPNG_CFLAGS=\"-I$arg/include\"\n\t\tPNG_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-gif-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tGIF_CFLAGS=\"-I$arg/include\"\n\t\tGIF_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-theoradec-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tTHEORADEC_CFLAGS=\"-I$arg/include\"\n\t\tTHEORADEC_LIBS=\"-L$arg/lib -ltheoradec\"\n\t\tTHEORADEC_PREFIX=\"$arg\"\n\t\t;;\n\t--with-vpx-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tVPX_CFLAGS=\"-I$arg/include\"\n\t\tVPX_LIBS=\"-L$arg/lib\"\n\t\tVPX_STATIC_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-faad-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tFAAD_CFLAGS=\"-I$arg/include\"\n\t\tFAAD_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-zlib-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tZLIB_CFLAGS=\"-I$arg/include\"\n\t\tZLIB_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-sparkle-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_sparklepath=$arg\n\t\t;;\n\t--with-readline-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tREADLINE_CFLAGS=\"-I$arg/include\"\n\t\tREADLINE_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-libunity-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tLIBUNITY_CFLAGS=\"-I$arg/include\"\n\t\tLIBUNITY_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-gtk-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tGTK_CFLAGS=\"-I$arg/include\"\n\t\tGTK_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-sdlnet-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tSDL_NET_CFLAGS=\"-I$arg/include\"\n\t\tSDL_NET_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-opengl-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tOPENGL_CFLAGS=\"-I$arg/include\"\n\t\tOPENGL_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--with-discord-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\tDISCORD_CFLAGS=\"-I$arg/include\"\n\t\tDISCORD_LIBS=\"-L$arg/lib\"\n\t\t;;\n\t--backend=*)\n\t\t_backend=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--enable-debug)\n\t\t_debug_build=yes\n\t\t;;\n\t--disable-debug)\n\t\t_debug_build=no\n\t\t;;\n\t--enable-Werror)\n\t\t_werror_build=yes\n\t\t;;\n\t--enable-release-mode)\n\t\t_release_build=yes\n\t\t;;\n\t--disable-release-mode)\n\t\t_release_build=no\n\t\t;;\n\t--enable-release)\n\t\t_release_build=yes\n\t\t_optimizations=yes\n\t\t_updates=yes\n\t\t;;\n\t--disable-release)\n\t\t_release_build=no\n\t\t_optimizations=no\n\t\t;;\n\t--enable-optimizations)\n\t\t_optimizations=yes\n\t\t;;\n\t--disable-optimizations)\n\t\t_optimizations=no\n\t\t;;\n\t--enable-profiling)\n\t\t_enable_prof=yes\n\t\t;;\n\t--enable-asan)\n\t\t_enable_asan=yes\n\t\t;;\n\t--enable-tsan)\n\t\t_enable_tsan=yes\n\t\t;;\n\t--enable-ubsan)\n\t\t_enable_ubsan=yes\n\t\t;;\n\t--no-builtin-resources)\n\t\t_builtin_resources=no\n\t\t;;\n\t--enable-windows-console)\n\t\t_windows_console=yes\n\t\t;;\n\t--disable-windows-console)\n\t\t_windows_console=no\n\t\t;;\n\t--enable-windows-unicode)\n\t\t_windows_unicode=yes\n\t\t;;\n\t--disable-windows-unicode)\n\t\t_windows_unicode=no\n\t\t;;\n\t--with-sdl-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_sdlpath=\"$arg:$arg/bin\"\n\t\t;;\n\t--with-freetype2-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_freetypepath=\"$arg:$arg/bin\"\n\t\t;;\n\t--with-libcurl-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_libcurlpath=\"$arg:$arg/bin\"\n\t\t;;\n\t--with-mikmod-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_libmikmodpath=\"$arg:$arg/bin\"\n\t\t;;\n\t--with-nasm-prefix=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_nasmpath=\"$arg:$arg/bin\"\n\t\t;;\n\t--with-pandoc-format=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_pandocformat=\"$arg\"\n\t\t_pandoc=yes\n\t\t;;\n\t--with-manual-version=*)\n\t\targ=`echo $ac_option | cut -d '=' -f 2`\n\t\t_manualversion=\"$arg\"\n\t\t;;\n\t--with-staticlib-prefix=*)\n\t\t_staticlibpath=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--with-xcodetools-path=*)\n\t\t_xcodetoolspath=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--host=*)\n\t\tif test -z \"$CONFIGURE_NO_HOST\"; then\n\t\t\t_host=`echo $ac_option | cut -d '=' -f 2`\n\t\telse\n\t\t\techo \"Ignoring --host option!\" >&2\n\t\tfi\n\t\t;;\n\t--prefix=*)\n\t\tprefix=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--exec-prefix=*)\n\t\texec_prefix=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--bindir=*)\n\t\tbindir=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--libdir=*)\n\t\tlibdir=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--datarootdir=*)\n\t\tdatarootdir=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--datadir=*)\n\t\tdatadir=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--mandir=*)\n\t\tmandir=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--docdir=*)\n\t\tdocdir=`echo $ac_option | cut -d '=' -f 2`\n\t\t;;\n\t--enable-all-engines)\n\t\tengine_enable_all\n\t\t;;\n\t--disable-all-engines)\n\t\tengine_disable_all\n\t\t;;\n\t--enable-all-unstable-engines)\n\t\tengine_enable_all_unstable\n\t\t;;\n\t--disable-all-unstable-engines)\n\t\tengine_disable_all_unstable\n\t\t;;\n\t--enable-engine=* | --enable-engines=*)\n\t\tfor engine_name in `echo $ac_option | cut -d '=' -f 2- | tr ',' '\\n'`; do\n\t\t\tengine_enable \"${engine_name}\"\n\t\tdone\n\t\t;;\n\t--enable-engine-static=* | --enable-engines-static=*)\n\t\tfor engine_name in `echo $ac_option | cut -d '=' -f 2- | tr ',' '\\n'`; do\n\t\t\tengine_enable \"${engine_name}:static\"\n\t\tdone\n\t\t;;\n\t--enable-engine-dynamic=* | --enable-engines-dynamic=*)\n\t\tfor engine_name in `echo $ac_option | cut -d '=' -f 2- | tr ',' '\\n'`; do\n\t\t\tengine_enable \"${engine_name}:dynamic\"\n\t\tdone\n\t\t;;\n\t--disable-engine=* | --disable-engines=*)\n\t\tfor engine_name in `echo $ac_option | cut -d '=' -f 2 | tr ',' '\\n'`; do\n\t\t\tengine_disable ${engine_name}\n\t\tdone\n\t\t;;\n\t*)\n\t\toption_error\n\t\t;;\n\tesac\ndone\n\nguessed_host=`$_srcdir/config.guess`\nget_system_exe_extension $guessed_host\nNATIVEEXEEXT=$_exeext\n\ncase $_host in\n3ds)\n\t_host_os=3ds\n\t_host_cpu=arm\n\t_host_alias=arm-none-eabi\n\n\ttest \"x$prefix\" = xNONE && prefix=romfs:\n\n\tdatarootdir='${prefix}'\n\tdatadir='${datarootdir}'\n\tdocdir='${prefix}/doc'\n\t;;\nandroid-arm-v7a | android-armeabi-v7a | ouya)\n\t_host_os=android\n\t_host_cpu=arm\n\t_host_alias=arm-linux-androideabi\n\t;;\nandroid-arm64-v8a)\n\t_host_os=android\n\t_host_cpu=aarch64\n\t_host_alias=aarch64-linux-android\n\t;;\nandroid-x86)\n\t_host_os=android\n\t_host_cpu=i686\n\t_host_alias=i686-linux-android\n\t;;\nandroid-x86_64)\n\t_host_os=android\n\t_host_cpu=x86_64\n\t_host_alias=x86_64-linux-android\n\t;;\narm-vfp-riscos)\n\t_host_os=riscos\n\t_host_cpu=arm\n\t_host_alias=arm-unknown-riscos\n\tdatarootdir='/\\<ScummVM\\$$Dir\\>'\n\tdatadir='${datarootdir}/data'\n\tdocdir='${datarootdir}/docs'\n\t;;\narm-*riscos)\n\t_host_os=riscos\n\t_host_cpu=arm\n\t_host_alias=$_host\n\tdatarootdir='/\\<ScummVM\\$$Dir\\>'\n\tdatadir='${datarootdir}/data'\n\tdocdir='${datarootdir}/docs'\n\t;;\nraspberrypi)\n\t_host_os=linux\n\t_host_cpu=arm\n\t# This tuple is the one used by the official Rpi toolchain.\n\t# It may change in the future.\n\t_host_alias=arm-linux-gnueabihf\n\t;;\nopendingux-*)\n\t_host_os=linux\n\t_host_cpu=mipsel\n\t_host_alias=mipsel-linux\n\t;;\ndreamcast)\n\t_host_os=dreamcast\n\t_host_cpu=sh\n\t_host_alias=sh-elf\n\tappend_var CXXFLAGS \"-ml -m4-single-only\"\n\tappend_var LDFLAGS \"-ml -m4-single-only\"\n\t;;\nds)\n\t_host_os=ds\n\t_host_cpu=arm\n\t_host_alias=arm-none-eabi\n\t;;\ngamecube)\n\t_host_os=gamecube\n\t_host_cpu=powerpc\n\t_host_alias=powerpc-eabi\n\t;;\ni586-mingw32msvc)\n\t_host_os=mingw32msvc\n\t_host_cpu=i586\n\t;;\nios7)\n\t_host_os=iphoneos\n\t_host_cpu=arm\n\t_host_alias=arm-apple-darwin11\n\t;;\nios7-arm64)\n\t_host_os=iphoneos\n\t# Remains of configure not knowing about arm64\n\t_host_cpu=aarch64\n\t_host_alias=arm64-apple-darwin11\n\t;;\nkos32)\n\t_host_os=kolibrios\n\t_host_cpu=i686\n\t_host_alias=kos32\n\t;;\nm68k-atari-mint*)\n\t_host_os=mint\n\t_host_cpu=m68k\n\t_host_alias=$_host\n\t;;\nmaemo)\n\t_host_os=maemo\n\t_host_cpu=arm\n\t_host_alias=arm-none-linux-gnueabi\n\n\t# The prefix is always the same on Maemo so we hardcode the default\n\t# here. It is still possible to define a custom prefix which is\n\t# needed when packaging the app with a user-specific app ID.\n\ttest \"x$prefix\" = xNONE && prefix=/opt/scummvm\n\t# Maemo apps are installed into app-specific directories. The\n\t# default directory structure of ScummVM makes no sense here so we\n\t# hardcode Maemo specific directories here.\n\tdatarootdir='${prefix}/share'\n\tdatadir=/opt/scummvm/share\n\tdocdir='${datarootdir}/doc/scummvm'\n\t;;\nmiyoo)\n\t_host_os=linux\n\t_host_cpu=arm\n\t_host_alias=arm-linux\n\t;;\nmiyoomini)\n\t_host_os=linux\n\t_host_cpu=arm\n\t_host_alias=arm-linux-gnueabihf\n\t;;\nn64)\n\t_host_os=n64\n\t_host_cpu=mips\n\t_host_alias=mips64\n\t;;\nneuros)\n\t_host_os=linux\n\t_host_cpu=arm\n\t;;\nopenpandora)\n\t_host_os=linux\n\t_host_cpu=arm\n\t_host_alias=arm-angstrom-linux-gnueabi\n\t;;\nppc-amigaos)\n\t_host_os=amigaos\n\t_host_cpu=powerpc\n\t_host_alias=$_host\n\t;;\nppc-morphos)\n\t_host_os=morphos\n\t_host_cpu=powerpc\n\t_host_alias=$_host\n\t;;\nps3)\n\t_host_os=ps3\n\t_host_cpu=powerpc\n\t_host_alias=powerpc64-ps3-elf\n\n\t# The prefix is always the same on PS3 so we hardcode the default\n\t# here. It is still possible to define a custom prefix which is\n\t# needed when packaging the app with a user-specific app ID.\n\ttest \"x$prefix\" = xNONE && prefix=/dev_hdd0/game/SCUM12000/USRDIR\n\t# PS3 apps are installed into app-specific directories. The\n\t# default directory structure of ScummVM makes no sense here so we\n\t# hardcode PS3 specific directories here.\n\tdatarootdir='${prefix}/data'\n\tdatadir='${datarootdir}'\n\tdocdir='${prefix}/doc'\n\t;;\npsp2)\n\t_host_os=psp2\n\t_host_cpu=arm\n\t_host_alias=arm-vita-eabi\n\n\t# The prefix is always the same on PSP2 so we hardcode the default\n\t# here. It is still possible to define a custom prefix which is\n\t# needed when packaging the app with a user-specific app ID.\n\ttest \"x$prefix\" = xNONE && prefix=app0:\n\t# PSP2 apps are installed into app-specific directories. The\n\t# default directory structure of ScummVM makes no sense here so we\n\t# hardcode PSP2 specific directories here.\n\tdatarootdir='${prefix}/data'\n\tdatadir='${datarootdir}'\n\tdocdir='${prefix}/doc'\n\t;;\npsp)\n\t_host_os=psp\n\t_host_cpu=mipsallegrexel\n\t_host_alias=psp\n\t;;\nsamsungtv)\n\t_host_os=linux\n\t_host_cpu=arm\n\t_host_alias=arm-linux-gnueabi\n\t;;\nsailfish)\n        _host_os=linux\n\ttest \"x$prefix\" = xNONE && prefix=/usr\n\tdatarootdir='/usr/share/org.scummvm.scummvm'\n\tdatadir='${datarootdir}/scummvm'\n\tdocdir='/usr/share/org.scummvm.scummvm/doc/scummvm'\n\t# Use static libraries on Sailfish. Sailfish limits our\n\t# ability to link with libraries from other packages. And if we ship\n\t# dynamic library but always load it and no one else uses it, then we're\n\t# no better off than using static libraries. Additionally shipping\n\t# libraries is a hassle.\n\tif [ -n \"$JPEG_PREFIX\" ]; then\n\t    JPEG_LIBS=\"$JPEG_PREFIX/lib/libjpeg.a\"\n\tfi\n\tif [ -n \"$FLAC_PREFIX\" ]; then\n\t    FLAC_LIBS=\"$FLAC_PREFIX/lib/libFLAC.a\"\n\tfi\n\tif [ -n \"$THEORADEC_PREFIX\" ]; then\n\t    THEORADEC_LIBS=\"$THEORADEC_PREFIX/lib/libtheoradec.a\"\n\tfi\n\n\t;;\nswitch)\n\t_host_os=switch\n\t_host_cpu=aarch64\n\t_host_alias=aarch64-none-elf\n\ttest \"x$prefix\" = xNONE && prefix=.\n\tdatarootdir='${prefix}/data'\n\tdatadir='${datarootdir}'\n\tdocdir='${prefix}/doc'\n\t;;\ntvos)\n\t_host_os=iphoneos\n\t# Remains of configure not knowing about arm64\n\t_host_cpu=aarch64\n\t_host_alias=arm64-apple-darwin11\n\t;;\nwasm32-*)\n\t_endian=little # the endian check below fails, but emscripten is always little endian anyway\n\t_host_os=emscripten\n\t_host_cpu=wasm32\n\tdatadir='/data'\n\tCXX=\"em++\"\n\t;;\nwii)\n\t_host_os=wii\n\t_host_cpu=powerpc\n\t_host_alias=powerpc-eabi\n\t;;\n*)\n\tif test -n \"$_host\"; then\n\t\tguessed_host=`$_srcdir/config.sub $_host`\n\tfi\n\t_host_cpu=`echo $guessed_host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\1/'`\n\t_host_vendor=`echo $guessed_host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\2/'`\n\t_host_os=`echo $guessed_host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n\t;;\nesac\n\nif test -z \"$_host_alias\"; then\n\t_host_alias=\"$_host_cpu-$_host_os\"\nelse\n\t# if _host_alias was set, default to the standard GNU tools\n\t_ranlib=$_host_alias-ranlib\n\t_strip=$_host_alias-strip\n\t_ar=\"$_host_alias-ar cr\"\n\t_as=\"$_host_alias-as\"\n\t_dwp=$_host_alias-dwp\n\t_windres=$_host_alias-windres\nfi\n\ncase $_host in\narm-*riscos | ds | openpandora | psp | psp2 | switch)\n\tif test \"$_debug_build\" = auto; then\n\t\t# If you want to debug one of these platforms, use '--disable-optimizations --enable-debug'\n\t\t_debug_build=no\n\tfi\n\n\tif test \"$_optimizations\" = auto; then\n\t\t# Enable optimizations by default.\n\t\t_optimizations=yes\n\tfi\n\t;;\nesac\n\n#\n# Determine extension used for executables\n#\nget_system_exe_extension $_host_os\nHOSTEXEPRE=\nHOSTEXEEXT=$_exeext\n\n#\n# Determine separator used for $PATH\n#\ncase $_host_os in\nos2-emx*)\n\tSEPARATOR=\";\"\n\t;;\n*)\n\tSEPARATOR=\":\"\n\t;;\nesac\n\n#\n# Platform specific sanity checks\n#\ncase $_host_os in\nandroid)\n\tif test -z \"$ANDROID_SDK_ROOT\"; then\n\t\techo \"Please set ANDROID_SDK_ROOT in your environment: export ANDROID_SDK_ROOT=<path to Android SDK>\"\n \t\texit 1\n\tfi\n\tif test -z \"$ANDROID_NDK_ROOT\"; then\n\t\techo \"Please set ANDROID_NDK_ROOT in your environment: export ANDROID_NDK_ROOT=<path to Android NDK>\"\n \t\texit 1\n \tfi\n\t;;\n3ds)\n\tif test -z \"$DEVKITPRO\"; then\n\t\techo \"Please set DEVKITPRO in your environment. export DEVKITPRO=<path to devkitPRO>\"\n\t\texit 1\n\tfi\n    \t_as=\"$DEVKITPRO/devkitARM/bin/arm-none-eabi-as\"\n\t_ar=\"$DEVKITPRO/devkitARM/bin/arm-none-eabi-ar cr\"\n\t_ranlib=\"$DEVKITPRO/devkitARM/bin/arm-none-eabi-ranlib\"\n\t_strip=\"$DEVKITPRO/devkitARM/bin/arm-none-eabi-strip\"\n\tif test -z \"$CXX\"; then\n\t\tCXX=\"$DEVKITPRO/devkitARM/bin/arm-none-eabi-g++\"\n\tfi\n\tif test -z \"$PKG_CONFIG_LIBDIR\"; then\n\t\tPKG_CONFIG_LIBDIR=\"$DEVKITPRO/portlibs/3ds/lib/pkgconfig\"\n\tfi\n\tif test -z \"$PKG_CONFIG_PATH\"; then\n\t\tPKG_CONFIG_PATH=\"$DEVKITPRO/portlibs/3ds/lib/pkgconfig\"\n\tfi\n\t;;\n\nds | gamecube | switch | wii)\n\tif test -z \"$DEVKITPRO\"; then\n\t\techo \"Please set DEVKITPRO in your environment. export DEVKITPRO=<path to devkitPRO>\"\n\t\texit 1\n\tfi\n\t;;\ndreamcast)\n\tif test -z \"$RONINDIR\"; then\n\t\techo \"Please set RONINDIR in your environment. export RONINDIR=<path to libronin>\"\n\t\texit 1\n\tfi\n\t;;\nemscripten)\n\tif test -z \"$EMSDK\"; then\n\t\techo \"Please set EMSDK in your environment. export EMSDK=<path to emscripten sdk>\"\n\t\texit 1\n\tfi\n\t;;\nkolibrios)\n\tif test -z \"$KOS32_SDK_DIR\" || test -z \"$KOS32_AUTOBUILD\"; then\n\t\techo \"Please set KOS32_SDK_DIR and KOS32_AUTOBUILD in your environment. export KOS32_SDK_DIR=<path to KOS32 SDK> and export KOS32_AUTOBUILD=<path to KOS32 build>\"\n\t\texit 1\n\tfi\n\t_as=\"${KOS32_AUTOBUILD}/tools/win32/bin/kos32-as\"\n\t_ar=\"${KOS32_AUTOBUILD}/tools/win32/bin/kos32-ar cr\"\n\t_ranlib=\"${KOS32_AUTOBUILD}/tools/win32/bin/kos32-ar -s\"\n\t_strip=\"${KOS32_AUTOBUILD}/tools/win32/bin/kos32-strip\"\n\tif test -z \"$CXX\"; then\n\t\tCXX=\"${KOS32_AUTOBUILD}/tools/win32/bin/kos32-g++\"\n\tfi\n\tappend_var DEFINES \"-U__WIN32__ -U_Win32 -U_WIN32 -U__MINGW32__ -UWIN32 -DKOLIBRIOS=1 -D_POSIX_C_SOURCE=1 -D_XOPEN_SOURCE=1\"\n\tappend_var CXXFLAGS \"-I${KOS32_SDK_DIR}/sources/newlib/libc/include -I${KOS32_SDK_DIR}/sources/libstdc++-v3/include -fno-ident -fomit-frame-pointer\"\n\t# Final executable will be a DLL but for tests we need to stick to a standard binary because DLLs having a main function trigger a build failure\n\t# We will add the -shared option at the end\n\tappend_var LDFLAGS \"-specs=$_srcdir/backends/platform/sdl/kolibrios/kolibrios.spec\"\n\t;;\nn64)\n\tif test -z \"$N64SDK\"; then\n\t\techo \"Please set N64SDK in your environment. export N64SDK=<path to n64 sdk>\"\n\t\texit 1\n\tfi\n\t;;\nps3)\n\tif test -z \"$PS3DEV\"; then\n\t\techo \"Please set PS3DEV in your environment. export PS3DEV=<path to ps3 toolchain>\"\n\t\texit 1\n\tfi\n\tif test -z \"$PSL1GHT\"; then\n\t\techo \"Please set PSL1GHT in your environment. export PSL1GHT=<path to psl1ght>\"\n\t\texit 1\n\tfi\n\t;;\npsp2)\n\tif test -z \"$VITASDK\"; then\n\t\techo \"Please set VITASDK in your environment. export VITASDK=<path to psp2 toolchain>\"\n\t\texit 1\n\tfi\n\t;;\npsp)\n\tif test -z \"$PSPDEV\"; then\n\t\tPSPDEV=`psp-config --pspdev-path`\n\tfi\n\t# TODO: Should we also insist on a valid PSPDEV value?\n\tif test -z \"$PSPSDK\"; then\n\t\tPSPSDK=`psp-config --pspsdk-path`\n\tfi\n\tif test -z \"$PSPSDK\"; then\n\t\techo \"Please set PSPSDK in your environment. export PSPSDK=<path to psp sdk>\"\n\t\texit 1\n\tfi\n\n\t# These have to be set early because the compiler will not link successfully\n\t# during testing otherwise\n\tif test -d \"$PSPDEV/psp/lib\"; then\n\t\tappend_var LDFLAGS \"-L$PSPDEV/psp/lib\"\n\tfi\n\tappend_var LDFLAGS \"-L$PSPSDK/lib\"\n\tappend_var LDFLAGS \"-specs=$_srcdir/backends/platform/psp/psp.spec\"\n\n\t;;\nriscos)\n\tif test -z \"$GCCSDK_INSTALL_ENV\"; then\n\t\techo \"Please set GCCSDK_INSTALL_ENV in your environment. export GCCSDK_INSTALL_ENV=<path to GCCSDK_INSTALL_ENV>\"\n\t\texit 1\n\tfi\n\n\tif test -e \"$GCCSDK_INSTALL_ENV/bin/tokenize\"; then\n\t\tadd_line_to_config_mk \"TOKENIZE := $GCCSDK_INSTALL_ENV/bin/tokenize\"\n\telif `which tokenize >/dev/null 2>&1`; then\n\t\tadd_line_to_config_mk \"TOKENIZE := tokenize\"\n\tfi\n\tif test -e \"$GCCSDK_INSTALL_ENV/bin/makerun\"; then\n\t\tadd_line_to_config_mk \"MAKERUN := $GCCSDK_INSTALL_ENV/bin/makerun\"\n\telif `which makerun >/dev/null 2>&1`; then\n\t\tadd_line_to_config_mk \"MAKERUN := makerun\"\n\tfi\n\t;;\n*)\n\t;;\nesac\n\n\n# Toolchain for Android is in NDK and is using different naming convention\nif test \"$_host_os\" = android; then\n\n\t# Check that we have the correct NDK version\n\techo_n \"Checking NDK version... \"\n\t_ndk_gradle=$(grep \"^[[:space:]]*ndkVersion\" $_srcdir/dists/android/build.gradle | sed 's/[^0-9\\.]//g')\n\t_ndk_version=$(grep \"Pkg.Revision\" $ANDROID_NDK_ROOT/source.properties | sed 's/[^0-9\\.]//g' | sed 's/.//')\n\tif test \"$_ndk_version\" = \"$_ndk_gradle\"; then\n\t\techo \"$_ndk_version\"\n\telse\n\t\techo \"$_ndk_version (Expected $_ndk_gradle)\"\n\t\texit 1\n\tfi\n\n\t# Try to use a known to work toolchain\n\tandroid_toolchains=\"windows-x86_64 darwin-x86_64 linux-x86_64\"\n\tfor toolchain in $android_toolchains; do\n\t\t_android_toolchain=\"$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/$toolchain\"\n\n\t\tif test -d \"$_android_toolchain\"; then\n\t\t\tbreak\n\t\tfi\n\tdone\n\n\t# See if an explicit toolchain is used\n\tif test -n \"$ANDROID_TOOLCHAIN\"; then\n\t\t_android_toolchain=\"$ANDROID_TOOLCHAIN\"\n\tfi\n\n\tcase $_host_cpu in\n\tarm | i686)\n\t\t_android_version=16\n\t\t;;\n\taarch64 | x86_64)\n\t\t# Platform version 21 is needed as earlier versions of platform do not support this architecture.\n\t\t_android_version=21\n\t\t;;\n\tesac\n\n\t# If CXX environment variable is not set, try to set known to work defaults\n\tif test -z \"$CXX\"; then\n\t\tcase $_host_cpu in\n\t\tarm)\n\t\t\t_android_target=\"armv7a-linux-androideabi$_android_version\"\n\t\t\t;;\n\t\taarch64)\n\t\t\t_android_target=\"aarch64-linux-android$_android_version\"\n\t\t\t;;\n\t\ti686)\n\t\t\t_android_target=\"i686-linux-android$_android_version\"\n\t\t\t;;\n\t\tx86_64)\n\t\t\t_android_target=\"x86_64-linux-android$_android_version\"\n\t\t\t;;\n\t\tesac\n\n\t\tCXX=\"$_android_toolchain/bin/clang++\"\n\t\t# If CXX is defined, don't alter CXXFLAGS and LDFLAGS as it can be done by the user explicitly\n\t\tappend_var CXXFLAGS \"-target ${_android_target}\"\n\t\tappend_var LDFLAGS \"-target ${_android_target}\"\n\tfi\n\n\tcase $_host_cpu in\n\taarch64)\n\t\t;;\n\tarm|i686|x86_64)\n\t\tadd_line_to_config_mk 'NEED_ANDROID_CPUFEATURES = 1'\n\t\t;;\n\tesac\n\n\t# These values can get overriden below by environments variables\n\t_ar=\"$_android_toolchain/bin/llvm-ar cr\"\n\t_as=\"$_android_toolchain/bin/llvm-as\"\n\t_dwp=\"$_android_toolchain/bin/llvm-dwp\"\n\t_ranlib=\"$_android_toolchain/bin/llvm-ranlib\"\n\t_strip=\"$_android_toolchain/bin/llvm-strip\"\n\tif test -z \"$STRINGS\"; then\n\t\tSTRINGS=\"$_android_toolchain/bin/llvm-strings\"\n\tfi\n\tif test -z \"$PKG_CONFIG_LIBDIR\"; then\n\t\tPKG_CONFIG_LIBDIR=\"$_android_toolchain/sysroot/usr/lib/$_host_alias/$_android_version/pkgconfig\"\n\tfi\n\t_libcurlpath=\"$_android_toolchain/sysroot/usr/bin/$_host_alias/$_android_version:$_libcurlpath\"\nfi\n\n#\n# Determine the C++ compiler\n#\necho_n \"Looking for C++ compiler... \"\n\n# Check whether the given command is a working C++ compiler\ntest_compiler() {\n\tcat > tmp_cxx_compiler.cpp << EOF\n\tclass Foo { int a; };\n\tint main(int argc, char **argv) {\n\t\tFoo *a = new Foo(); delete a; return 0;\n\t}\nEOF\n\n\techo \"testing compiler: $1\" >> \"$TMPLOG\"\n\n\tif test -n \"$_host\"; then\n\t\t# In cross-compiling mode, we cannot run the result\n\t\teval \"$1 $CXXFLAGS -o $TMPO.o -c tmp_cxx_compiler.cpp\" 2>> \"$TMPLOG\" && cc_check_clean tmp_cxx_compiler.cpp\n\telse\n\t\teval \"$1 $CXXFLAGS $LDFLAGS -o $TMPO$HOSTEXEEXT tmp_cxx_compiler.cpp\" 2>> \"$TMPLOG\" && eval \"$TMPO$HOSTEXEEXT 2>> $TMPLOG\" && cc_check_clean tmp_cxx_compiler.cpp\n\tfi\n}\n\n# Prepare a list of candidates for the C++ compiler\nif test -n \"$CXX\" && test_compiler \"$CXX\"; then\n\t# Use the compiler specified in CXX\n\techo $CXX\nelse\n        # Sailfish is a cross-compile environment but it uses g++ name\n        # Yes, it's black magic what they do.\n\tif test -n \"$_host\" && test \"$_host\" != sailfish ; then\n\t\tcompilers=\"$_host_alias-g++ $_host_alias-c++ $_host_alias-clang++ $_host-g++ $_host-c++ $_host-clang++\"\n\telse\n\t\tcompilers=\"g++ c++ clang++\"\n\tfi\n\n\t# Iterate over all candidates, pick the first working one\n\tCXX=\n\tfor compiler in $compilers; do\n\t\tif test_compiler $compiler; then\n\t\t\techo \"success testing compiler: $compiler\" >> \"$TMPLOG\"\n\t\t\tCXX=$compiler\n\t\t\techo $CXX\n\t\t\tbreak\n\t\telse\n\t\t\techo \"failure testing compiler: $compiler\" >> \"$TMPLOG\"\n\t\tfi\n\tdone\nfi\n\nif test -z \"$CXX\"; then\n\techo \"none found!\"\n\texit 1\nfi\n\nif test -n \"$RANLIB\"; then\n\t_ranlib=$RANLIB\nfi\n\nif test -n \"$STRIP\"; then\n\t_strip=$STRIP\nfi\n\nif test -n \"$AR\"; then\n\t_ar=\"$AR cr\"\nfi\n\nif test -n \"$AS\"; then\n\t_as=$AS\nfi\n\nif test -n \"$DWP\"; then\n\t_dwp=$DWP\nfi\n\nif test -n \"$WINDRES\"; then\n\t_windres=$WINDRES\nfi\n\nLD=$CXX\n\n#\n# Check whether the compiler supports C++11\n#\necho_n \"Checking if compiler supports C++11... \"\nhave_cxx11=no\ncat > $TMPC << EOF\nint main(int argc, char *argv[]) { if (argv == nullptr) return -1; else return 0; }\nEOF\ncc_check -std=c++11 && have_cxx11=yes\necho $have_cxx11\n\nif test \"$have_cxx11\" = \"no\" ; then\n\techo\n\techo \"ScummVM requires C++11 compiler support. Please ensure your compiler supports it\"\n\texit 1\nfi\n\n#\n# Determine the compiler version\n#\nechocheck \"compiler version\"\n\n# Some compilers pretend to be gcc to ease compatibility with\n# common Linux etc. programs. We first check for some of these here.\nhave_gcc=no\ncc_check_define __GNUC__ && have_gcc=yes\nhave_icc=no\ncc_check_define __INTEL_COMPILER && have_icc=yes\nhave_clang=no\ncc_check_define __clang__ && have_clang=yes\n\nif test \"$have_icc\" = yes; then\n\tadd_line_to_config_mk 'HAVE_ICC = 1'\n\n\t# Make ICC error out on unknown command line options instead of printing\n\t# a warning. This is for example required to make the -Wglobal-constructors\n\t# detection work correctly.\n\tappend_var CXXFLAGS \"-diag-error 10006,10148\"\n\n\t# ICC doesn't accept all gcc options, so we disable have_gcc, even if\n\t# ICC does have the gcc-compatibility defines.\n\thave_gcc=no\nfi\n\nif test \"$have_clang\" = yes; then\n\tadd_line_to_config_mk 'HAVE_CLANG = 1'\n\n\t# clang does accept all gcc options we use, so we keep have_gcc\nfi\n\nif test \"$have_gcc\" = yes; then\n\tadd_line_to_config_mk 'HAVE_GCC = 1'\n\t_cxx_major=`gcc_get_define __GNUC__`\n\t_cxx_minor=`gcc_get_define __GNUC_MINOR__`\n\tcxx_version=\"`( $CXX -dumpversion ) 2>&1`\"\n\n\tif test \"$have_clang\" = yes; then\n\t\t# Clang sets a gcc version number for compatibility.\n\t\t# We keep that as _cxx_minor/_cxx_major for later\n\t\t# compiler version checks.\n\n\t\t# For the version reported in the configure log (cxx_version),\n\t\t# we get the actual clang version.\n\t\tcxx_version=`gcc_get_define __clang_version__`\n\t\tcxx_version=\"`echo \"${cxx_version}\" | sed -e 's/\"\\([^ ]*\\) .*/\\1/'`\"\n\t\tcxx_version=\"clang $cxx_version, ok\"\n\n\t\t_clang_major=`gcc_get_define __clang_major__`\n\t\t_clang_minor=`gcc_get_define __clang_minor__`\n\n\t\tappend_var CXXFLAGS \"-Wshadow\"\n\telse\n\t\tcxx_version=\"GCC $cxx_version, ok\"\n\n\t\t# Some warnings exist in earlier GCC releases, but produce way\n\t\t# too many false positives...\n\n\t\tif test $_cxx_major -ge 5; then\n\t\t\tappend_var CXXFLAGS \"-Wshadow\"\n\t\telse\n\t\t\tappend_var CXXFLAGS \"-Wno-missing-field-initializers\"\n\n\t\t\tif test $_cxx_major -eq 4; then\n\t\t\t\t# Many false positives with templates\n\t\t\t\tif test $_cxx_minor -le 7; then\n\t\t\t\t\tappend_var CXXFLAGS \"-Wno-type-limits\"\n\t\t\t\t\tappend_var CXXFLAGS \"-Wno-uninitialized\"\n\t\t\t\t\tappend_var CXXFLAGS \"-Wno-array-bounds\"\n\t\t\t\tfi\n\n\t\t\t\tif test $_cxx_minor -le 8; then\n\t\t\t\t\tappend_var CXXFLAGS \"-Wno-maybe-uninitialized\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\nelif test \"$have_icc\" = yes; then\n\tcxx_version=\"`( $CXX -dumpversion ) 2>/dev/null`\"\n\t_cxx_major=\"`echo \"${cxx_version}\" | sed -ne 's/\\([0-9][0-9]*\\)\\..*/\\1/gp'`\"\n\t_cxx_minor=\"`echo \"${cxx_version}\" | sed -ne 's/[0-9][0-9]*\\.\\([0-9][0-9]*\\)/\\1/gp'`\"\n\tcxx_version=\"ICC $cxx_version, ok\"\nelse\n\t# TODO: Big scary warning about unsupported compilers\n\tcxx_version=`( $CXX -version ) 2>&1`\n\tif test \"$?\" -eq 0; then\n\t\tcxx_version=\"`echo \"${cxx_version}\" | sed -ne 's/^.*[^0-9]\\([0-9][0-9]*\\.[0-9][0-9]*\\.[0-9][0-9]*\\).*$/\\1/gp'`\"\n\t\tif test -z \"${cxx_version}\"; then\n\t\t\tcxx_version=\"not found\"\n\t\tfi\n\t\techo non-gcc compiler version ${cxx_version}\n\telse\n\t\tcxx_version=\"not found\"\n\t\techo non-gcc compiler version ${cxx_version}\n\tfi\n\tcxx_verc_fail=yes\n\tcxx_version=\"$cxx_version, bad\"\nfi\n\necho \"$cxx_version\"\n\n#\n# Bail out now if no useable compiler was found.\n#\nif test \"$cxx_verc_fail\" = yes ; then\n\techo\n\techo \"The version of your compiler is not supported at this time\"\n\texit 1\nfi\n\n#\n# Setup compiler specific CXXFLAGS now that we know the compiler version.\n# Foremost, this means enabling various warnings.\n# In addition, we set CXX_UPDATE_DEP_FLAG for GCC and ICC.\n#\n# By default compile with strict C++\nstd_variant=c++\npedantic=no\nif test \"$have_gcc\" = yes ; then\n\t# By default, we add -pedantic to the CXXFLAGS to catch some potentially\n\t# non-portable constructs, like use of GNU extensions.\n\t# However, some platforms use GNU extensions in system header files, so\n\t# for these we must not use -pedantic.\n\tpedantic=yes\n\n\tcase $_host_os in\n\t# newlib-based system include files suppress non-C89 function\n\t# declarations under __STRICT_ANSI__, undefine it\n\t3ds | android | gamecube | kolibrios | psp | switch | wii)\n\t\tstd_variant=gnu++\n\t\tpedantic=no\n\t\t;;\n\tamigaos* | dreamcast | ds | mingw* | mint* | morphos | n64 | ps3 | psp2)\n\t\tstd_variant=gnu++\n\t\t;;\n\topenbsd*)\n\t\tpedantic=no\n\t\t;;\n\triscos)\n\t\t# -Wformat complains about '%z' and so on. Don't know if it's related to\n\t\t# the older compiler not being completely C+11-aware, or something else.\n\t\tif test \"$have_gcc\" = yes && test $_cxx_major -eq 4 && test $_cxx_minor -le 7; then\n\t\t\tstd_variant=gnu++\n\t\t\tpedantic=no\n\t\tfi\n\t\t;;\n\t*)\n\t\t;;\n\tesac\n\n\tif test -n \"$_host\"; then\n\t\tcase \"$_host\" in\n\t\traspberrypi)\n\t\t\tpedantic=no\n\t\t\t;;\n\t\tesac\n\tfi\n\n\tappend_var CXXFLAGS \"-W -Wno-unused-parameter\"\n\tadd_line_to_config_mk 'CXX_UPDATE_DEP_FLAG = -MMD -MF \"$(*D)/$(DEPDIR)/$(*F).d\" -MQ \"$@\" -MP'\n\n\tappend_var CXXFLAGS \"-Wno-empty-body\"\n\tappend_var CXXFLAGS \"-fno-operator-names\"\nelif test \"$have_icc\" = yes ; then\n\t# ICC does not support pedantic, while GCC and clang do.\n\tadd_line_to_config_mk 'CXX_UPDATE_DEP_FLAG = -MMD -MF \"$(*D)/$(DEPDIR)/$(*F).d\" -MQ \"$@\" -MP'\nfi\n\n#\n# Set status about C++11 mode\n#\nappend_var CXXFLAGS \"-std=${std_variant}11\"\n\nif test \"$pedantic\" = yes ; then\n\tappend_var CXXFLAGS \"-pedantic\"\nfi\n\n#\n# Additional tests for C++11 features that may not be present\n#\n\n# Check if initializer list is available\necho_n \"Checking if C++11 initializer list is available... \"\ncat > $TMPC << EOF\n#include <initializer_list>\n#include <cstddef>\nclass FOO {\npublic:\n\tFOO(std::initializer_list<int> list) : _size(list.size()) {}\n\tsize_t _size;\n};\nint main(int argc, char *argv[]) { return 0; }\nEOF\ncc_check\nif test \"$TMPR\" -eq 0; then\n\techo yes\nelse\n\techo no\n\tdefine_in_config_if_yes yes 'NO_CXX11_INITIALIZER_LIST'\nfi\n\n# Check if std::nullptr_t is available\necho_n \"Checking if C++11 std::nullptr_t is available... \"\ncat > $TMPC << EOF\n#include <cstddef>\nint main(int argc, char *argv[]) {\n\tstd::nullptr_t i = nullptr;\n\treturn 0;\n}\nEOF\ncc_check\nif test \"$TMPR\" -eq 0; then\n\techo yes\nelse\n\techo no\n\tdefine_in_config_if_yes yes 'NO_CXX11_NULLPTR_T'\nfi\n\n# Check if alignas and alignof are available\necho_n \"Checking if C++11 alignas and alignof keywords are available... \"\ncat > $TMPC << EOF\n#include <stddef.h>\nstruct test {\n\tchar c;\n\talignas(max_align_t) size_t _size;\n};\nstatic const size_t LENGTH = alignof(max_align_t);\nint main(int argc, char *argv[]) { return 0; }\nEOF\ncc_check\nif test \"$TMPR\" -eq 0; then\n\techo yes\nelse\n\techo no\n\tdefine_in_config_if_yes yes 'NO_CXX11_ALIGNAS'\nfi\n\n#\n# Determine extra build flags for debug and/or release builds\n#\nif test \"$_debug_build\" = auto && test \"$_release_build\" = yes; then\n\t_debug_build=no\nfi\nif test \"$_debug_build\" != no; then\n\t# debug mode not explicitly disabled -> compile with debug information\n\techo_n \"Checking best debug mode... \"\n\n\tdebug_mode=-g\n\ttest \"$_host_os\" = amigaos && debug_mode=-gstabs\n\tappend_var CXXFLAGS \"$debug_mode\"\n\techo_n -- \"$debug_mode\"\n\n\techo \"int main() { return 0; }\" > $TMPC\n\n\t# HACK: The default DWARF version \"for most targets\" is 5. However,\n\t#       that version causes dwp to segfault. According to\n\t#       https://sourceware.org/bugzilla/show_bug.cgi?id=26219 it just\n\t#       isn't implemented, and there's no fix in sight. So we force\n\t#       DWARF version 4 and hope that works for, well... \"most targets\".\n\n\tif `which $_dwp >/dev/null 2>&1` && cc_check_no_clean $debug_mode -gsplit-dwarf -gdwarf-4 && `$_dwp -e $TMPO -o /dev/null >/dev/null 2>&1`; then\n\t\tappend_var CXXFLAGS \"-gsplit-dwarf -gdwarf-4\"\n\t\tadd_line_to_config_mk \"SPLIT_DWARF = 1\"\n\t\techo_n -- \" + split DWARF\"\n\t\tif test \"$_lld\" = yes && cc_check_no_clean $debug_mode -gsplit-dwarf -fuse-ld=lld -Wl,--gdb-index; then\n\t\t\tappend_var LDFLAGS \"-fuse-ld=lld\"\n\t\t\tappend_var LDFLAGS \"-Wl,--gdb-index\"\n\t\t\techo_n -- \" + LLD\"\n\t\telif test \"$_mold\" = yes && cc_check_no_clean $debug_mode -gsplit-dwarf -fuse-ld=mold -Wl,--gdb-index; then\n\t\t\tappend_var LDFLAGS \"-fuse-ld=mold\"\n\t\t\tappend_var LDFLAGS \"-Wl,--gdb-index\"\n\t\t\techo_n -- \" + Mold\"\n\t\telif test \"$_gold\" = yes && cc_check_no_clean $debug_mode -gsplit-dwarf -fuse-ld=gold -Wl,--gdb-index; then\n\t\t\tappend_var LDFLAGS \"-fuse-ld=gold\"\n\t\t\tappend_var LDFLAGS \"-Wl,--gdb-index\"\n\t\t\techo_n -- \" + Gold\"\n\t\tfi\n\tfi\n\n\tif cc_check_no_clean $debug_mode -fvar-tracking-assignments; then\n\t\tappend_var CXXFLAGS \"-fvar-tracking-assignments\"\n\t\techo_n -- \" + var tracking\"\n\tfi\n\tcc_check_clean\n\techo \"\"\nfi\n\nif ! echo \"$LDFLAGS\" | grep -q -e -fuse-ld; then\n\techo \"Using LLD linker... $_lld\"\n\tif test \"$_lld\" = yes ; then\n\t\tappend_var LDFLAGS -fuse-ld=lld\n\tfi\nfi\n\nif ! echo \"$LDFLAGS\" | grep -q -e -fuse-ld; then\n\techo \"Using Mold linker... $_mold\"\n\tif test \"$_mold\" =  yes ; then\n\t\tappend_var LDFLAGS -fuse-ld=mold\n\tfi\nfi\n\nif test \"$_release_build\" = yes; then\n\t# Add a define, which indicates we are doing\n\t# a build for a release version.\n\tappend_var DEFINES \"-DRELEASE_BUILD\"\nfi\n\nset_flag_if_supported() {\n\techocheck \"whether C++ compiler accepts $1\"\n\tcat > $TMPC << EOF\n\tint main() { return 0; }\nEOF\n\t# Note: we check for -Wxxx instead of -Wno-xxx as not all compilers error\n\t# out on unknown -Wno-xxx flags.\n\tif cc_check $(echo $1 | sed 's/-Wno-/-W/') -Werror; then\n\t\tappend_var CXXFLAGS \"$1\"\n\t\techo yes\n\telse\n\t\techo no\n\tfi\n}\n\nset_flag_if_supported -Wglobal-constructors\n\n# If the compiler supports the -Wundefined-var-template flag, silence that warning.\n# We get this warning a lot with regard to the Singleton class as we explicitly\n# instantiate each specialisation. An alternate way to deal with it would be to\n# change the way we instantiate the singleton classes as done in PR #967.\n# Note: we check the -Wundefined-var-template as gcc does not error out on unknown\n# -Wno-xxx flags.\nset_flag_if_supported -Wno-undefined-var-template\n\n# Vanilla clang 6 enables the new -Wpragma-pack which warns when leaving an\n# included file which changes the current alignment.\n# As our common/pack-{start,end}.h trigger this we disable this warning.\n# Because there is no correlation between the version reported by Apple Xcode\n# clang and vanilla clang we cannot rely on the __clang_major__/clang_minor__\n# macros.\nset_flag_if_supported -Wno-pragma-pack\n\nset_flag_if_supported -Wno-address-of-packed-member\n\nif test -n \"$STRINGS\"; then\n\t_strings=$STRINGS\nelse\n\techo_n \"Checking for $_host_alias-strings... \" >> \"$TMPLOG\"\n\tif `which $_host_alias-strings >/dev/null 2>&1`; then\n\t\t_strings=$_host_alias-strings\n\t\techo yes >> \"$TMPLOG\"\n\telse\n\t\t_strings=strings\n\t\techo no >> \"$TMPLOG\"\n\tfi\nfi\n\n#\n# Check for endianness\n#\necho_n \"Checking endianness... \"\ncat > tmp_endianness_check.cpp << EOF\n#ifndef __GNUC__\n#define __attribute__(x)\n#endif\n__attribute__ ((used)) unsigned short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n__attribute__ ((used)) unsigned short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\nconst char * _ascii() { char* s = (char*) ascii_mm; s = (char*) ascii_ii; return s; }\n__attribute__ ((used)) unsigned short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n__attribute__ ((used)) unsigned short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\nconst char * _ebcdic() { char* s = (char*) ebcdic_mm; s = (char*) ebcdic_ii; return s; }\nint main() { _ascii (); _ebcdic (); return 0; }\nEOF\n# Make sure that this particular object always has regular machine code content,\n# so that the checks below can be done, even with LTO on.\ntest \"$have_gcc\" = yes && no_lto_regular_machine_code_removal=-ffat-lto-objects\n$CXX $LDFLAGS $CXXFLAGS $no_lto_regular_machine_code_removal -o $TMPO$HOSTEXEEXT tmp_endianness_check.cpp >> \"$TMPLOG\" 2>&1\nif $_strings $TMPO$HOSTEXEEXT 2>> \"$TMPLOG\"| grep BIGenDianSyS >/dev/null; then\n\t_endian=big\nelif $_strings $TMPO$HOSTEXEEXT 2>> \"$TMPLOG\" | grep LiTTleEnDian >/dev/null; then\n\t_endian=little\nfi\necho $_endian\ncc_check_clean tmp_endianness_check.cpp $TMPO-tmp_endianness_check.dwo tmp_endianness_check.dwo\n\ncase $_endian in\n\tbig)\n\t\tadd_line_to_config_h '#undef SCUMM_LITTLE_ENDIAN'\n\t\tadd_line_to_config_h '#define SCUMM_BIG_ENDIAN'\n\t\t;;\n\tlittle)\n\t\tadd_line_to_config_h '#define SCUMM_LITTLE_ENDIAN'\n\t\tadd_line_to_config_h '#undef SCUMM_BIG_ENDIAN'\n\t\t;;\n\t*)\n\t\texit 1\n\t\t;;\nesac\n\n#\n# Check whether memory alignment is required\n#\n# For some CPU types, unaligned memory access is either not supported at\n# all (and so leads to a crash), requires a super-slow emulation via an\n# exception handler, or just results in incorrect results.\n# On the other hand, accessing data in a manner that works regardless of\n# alignment can be a lot slower than regular access, so we don't want\n# to use it if we don't have to.\n#\n# So we do the following: For CPU families where we know whether unaligned\n# access is safe & fast, we enable / disable unaligned access accordingly.\n# Otherwise, we just disable memory alignment.\n#\n# NOTE: In the past, for non-cross compiled builds, we would also run some code\n# which would try to test whether unaligned access worked or not. But this test\n# could not reliably determine whether unaligned access really worked in all\n# situations (and across different implementations of the target CPU arch), nor\n# whether it was fast (as opposed to slowly emulated by fault handlers). Hence,\n# we do not use this approach anymore.\n#\n# NOTE: The only kinds of unaligned access we allow are for 2 byte and 4\n# byte loads / stores. No promises are made for bigger sizes, such as 8\n# or 16 byte loads, for which architectures may behave differently than\n# for the smaller sizes.\necho_n \"Alignment required... \"\ncase $_host_cpu in\n\ti[3-6]86 | amd64 | x86_64 | powerpc* | ppc* | m68k)\n\t\t# Unaligned access should work\n\t\t_need_memalign=no\n\t\t;;\n\talpha* | arm* | bfin* | hp* | mips* | sh* | sparc* | ia64 | nv1*)\n\t\t# Unaligned access is not supported or extremely slow.\n\t\t_need_memalign=yes\n\t\t;;\n\t*)\n\t\t# Status of unaligned access is unknown, so assume the worst.\n\t\t_need_memalign=yes\n\t\t;;\nesac\nif test \"$_enable_ubsan\" = yes ; then\n\t# UBSan implies -fsanitize=alignment, so avoid false positives.\n\t_need_memalign=yes\nfi\necho \"$_need_memalign\"\n\ndefine_in_config_h_if_yes $_need_memalign 'SCUMM_NEED_ALIGNMENT'\n\n#\n# Check the CPU architecture\n#\necho_n \"Checking host CPU architecture... \"\ncase $_host_cpu in\n\taarch64)\n\t\techo \"aarch64\"\n\t\t;;\n\talpha*)\n\t\techo \"Alpha\"\n\t\t;;\n\tarm*)\n\t\techo \"ARM\"\n\t\tcase $_host in\n\t\t\topenpandora)\n\t\t\t\tdefine_in_config_if_yes yes 'USE_ARM_NEON_ASPECT_CORRECTOR'\n\t\t\t\t;;\n\t\t\tmaemo )\n\t\t\t\tdefine_in_config_if_yes yes 'USE_ARM_SCALER_ASM'\n\t\t\t\tdefine_in_config_if_yes yes 'USE_ARM_SMUSH_ASM'\n\t\t\t\tdefine_in_config_if_yes yes 'USE_ARM_GFX_ASM'\n\t\t\t\t# FIXME: The following feature exhibits a bug during the intro scene of Indy 4\n\t\t\t\t# (on Pandora and iPhone at least)\n\t\t\t\t#define_in_config_if_yes yes 'USE_ARM_COSTUME_ASM'\n\t\t\t\t;;\n\t\tesac\n\n\t\tappend_var DEFINES \"-DARM_TARGET\"\n\t\t;;\n\thppa* | parisc*)\n\t\techo \"PA-RISC\"\n\t\t;;\n\ti[3-6]86)\n\t\techo \"x86\"\n\t\t_have_x86=yes\n\t\tdefine_in_config_h_if_yes $_have_x86 'HAVE_X86'\n\t\t;;\n\tia64*)\n\t\techo \"Itanium\"\n\t\t;;\n\tm68*)\n\t\techo \"m68k\"\n\t\t;;\n\tmips*)\n\t\techo \"MIPS\"\n\t\tappend_var DEFINES \"-DMIPS_TARGET\"\n\t\t;;\n\tpowerpc* | ppc*)\n\t\techo \"PowerPC\"\n\t\tappend_var DEFINES \"-DPPC_TARGET\"\n\t\t;;\n\triscv*)\n\t\techo \"RISC-V\"\n\t\t;;\n\tsh*)\n\t\techo \"SuperH\"\n\t\t;;\n\tsparc*)\n\t\techo \"SPARC\"\n\t\t;;\n\twasm32)\n\t\techo \"wasm32\"\n\t\t;;\n\tx86_64 | amd64)\n\t\techo \"x86_64\"\n\t\t_have_amd64=yes\n\t\tdefine_in_config_h_if_yes $_have_amd64 'HAVE_AMD64'\n\t\t;;\n\t*)\n\t\techo \"unknown ($_host_cpu)\"\n\t\t;;\nesac\n\n\n#\n# Determine build settings\n#\necho_n \"Checking hosttype... \"\necho $_host_os\ncase $_host_os in\n\t3ds)\n\t\t_optimization_level=-O2\n\t\tappend_var DEFINES \"-D__3DS__\"\n\t\tappend_var DEFINES \"-DARM\"\n\t\tappend_var DEFINES \"-DARM11\"\n\t\tappend_var CXXFLAGS \"-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=soft\"\n\t\tappend_var CXXFLAGS \"-mword-relocations\"\n\t\tappend_var CXXFLAGS \"-ffunction-sections\"\n\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/libctru/include\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/portlibs/3ds/include\"\n\t\tappend_var LDFLAGS \"-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=soft\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/libctru/lib\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/portlibs/3ds/lib\"\n\t\tappend_var LDFLAGS \"-specs=3dsx.specs -lctru\"\n\t\tappend_var LIBS \"-lcitro3d\"\n\t\t;;\n\tamigaos*)\n\t\t_port_mk=\"backends/platform/sdl/amigaos/amigaos.mk\"\n\t\tadd_line_to_config_mk 'AMIGAOS = 1'\n\t\t# -mlongcall is needed to fix relocation errors,\n\t\t# otherwise we crash with big engines (i.e. AGS)\n\t\tappend_var CXXFLAGS \"-mlongcall\"\n\t\t# Dependencies might also be compiled with stack protection\n\t\tappend_var LDFLAGS \"-fstack-protector\"\n\t\t# Enable full optimizations for non-debug builds\n\t\tif test \"$_debug_build\" = no; then\n\t\t\t_optimization_level=-O3\n\t\telse\n\t\t\t_optimization_level=-O0\n\t\t\tdefine_in_config_if_yes \"$_debug_build\" 'DEBUG_BUILD'\n\t\tfi\n\t\t# dynamic builds will leave out resources to save binary size\n\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t_builtin_resources=no\n\t\t\t_detection_features_static=no\n\t\t\t_plugins_default=dynamic\n\t\tfi\n\t\t# AmigaOS already typedefs uint32 as long unsigned int\n\t\t# suppress the noisy [-Wformat=] warnings caused by it\n\t\tappend_var CXXFLAGS \"-Wno-format\"\n\t\t;;\n\tandroid)\n\t\tcase $_host in\n\t\t\tandroid-arm-v7a | android-armeabi-v7a)\n\t\t\t\t# Disable NEON for older devices (like with Tegra 2)\n\t\t\t\tappend_var CXXFLAGS \"-mfpu=vfp\"\n\t\t\t\t# This is really old CPU but might be still used with android 4.1, it slightly increases code size and decreases performance.\n\t\t\t\tappend_var LDFLAGS \"-Wl,--fix-cortex-a8\"\n\t\t\t\t# Allow NEON optimized code after runtime detection\n\t\t\t\t_ext_neon=yes\n\t\t\t\tABI=\"armeabi-v7a\"\n\t\t\t\t;;\n\t\t\tandroid-arm64-v8a)\n\t\t\t\tABI=\"arm64-v8a\"\n\t\t\t\t;;\n\t\t\tandroid-x86)\n\t\t\t\tABI=\"x86\"\n\t\t\t\t;;\n\t\t\tandroid-x86_64)\n\t\t\t\tABI=\"x86_64\"\n\t\t\t\t;;\n\t\t\touya)\n\t\t\t\tappend_var CXXFLAGS \"-mtune=cortex-a9\"\n\t\t\t\tABI=\"armeabi-v7a\"\n\t\t\t\t;;\n\t\tesac\n\n\t\tappend_var CXXFLAGS \"-Wno-inconsistent-missing-override\"\n\n\t\tappend_var CXXFLAGS \"-fpic\"\n\t\tappend_var CXXFLAGS \"-ffunction-sections\"\n\t\tappend_var CXXFLAGS \"-funwind-tables\"\n\t\tif test \"$_optimizations\" = \"yes\"; then\n\t\t\t_optimization_level=-Os\n\t\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\t\tappend_var CXXFLAGS \"-fstrict-aliasing\"\n\t\telse\n\t\t\t_optimization_level=-O0\n\t\t\tappend_var CXXFLAGS \"-fno-omit-frame-pointer\"\n\t\t\tappend_var CXXFLAGS \"-fno-strict-aliasing\"\n\t\tfi\n\n\t\t# Build ID is needed for native debugging in Android Studio\n\t\tappend_var LDFLAGS \"-Wl,--build-id=sha1\"\n\n\t\tadd_line_to_config_mk \"ANDROID_SDK_ROOT := $ANDROID_SDK_ROOT\"\n\t\tadd_line_to_config_mk \"ANDROID_NDK_ROOT := $ANDROID_NDK_ROOT\"\n\n\t\t_seq_midi=no\n\t\t;;\n\tbeos*)\n\t\tappend_var DEFINES \"-DSYSTEM_NOT_SUPPORTING_D_TYPE\"\n\t\t# Needs -lbind -lsocket for the timidity MIDI driver\n\t\tLDFLAGS=\"-L/boot/home/config/lib\"\n\t\tCFLAGS=\"-I/boot/home/config/include\"\n\t\tappend_var CXXFLAGS \"-fhuge-objects\"\n\t\tappend_var LIBS \"-lbind -lsocket\"\n\t\t_seq_midi=no\n\t\t;;\n\tcygwin*)\n\t\tif test \"$_cygwin_build\" = no; then\n\t\t\techo ERROR: Cygwin building is not supported by ScummVM anymore. Consider using MinGW.\n\t\t\texit 1\n\t\telse\n\t\t\techo WARNING: Cygwin building is not supported by ScummVM anymore.\n\t\t\techo Cygwin should be used only for development purposes and testing POSIX code on Windows.\n\t\t\techo Consider using MinGW instead.\n\t\t\tappend_var DEFINES \"-D_GNU_SOURCE\"\n\t\tfi\n\t\t;;\n\tdarwin*)\n\t\tcase $_host_cpu in\n\t\tpowerpc*)\n\t\t\tif test \"$_dynamic_modules\" = no ; then\n\t\t\t\techo \"WARNING: Building static engines will probably fail at link time on Mac PowerPC\"\n\t\t\tfi\n\t\t\t;;\n\t\tesac\n\n\t\tappend_var DEFINES \"-DMACOSX\"\n\t\tappend_var LIBS \"-framework AudioUnit -framework AudioToolbox -framework Carbon -framework CoreMIDI\"\n\t\t# SDL2 doesn't seem to add Cocoa for us.\n\t\tappend_var LIBS \"-framework Cocoa\"\n\t\tadd_line_to_config_mk 'MACOSX = 1'\n\t\t_seq_midi=no\n\n\t\t# Now we may have MacPorts or Fink installed\n\t\t# Which put libraries and headers in non-standard places\n\t\t# Checking them here\n\n\t\t# MacPorts\n\t\t# There is no way to get the prefix, so implementing a hack here\n\t\tmacport_version=`port version 2>/dev/null`\n\t\tif test \"$?\" -eq 0; then\n\t\t\tmacport_version=\"`echo \"${macport_version}\" | sed -ne 's/Version: \\([0-9]\\.[0-9]\\.[0-9]\\)/\\1/gp'`\"\n\t\t\techo_n \"You seem to be running MacPorts version ${macport_version}...\"\n\n\t\t\tmacport_prefix=`which port`\n\t\t\t# strip off /bin/port from /opt/local/bin/port\n\t\t\tmacport_prefix=`dirname ${macport_prefix}`\n\t\t\tmacport_prefix=`dirname ${macport_prefix}`\n\n\t\t\techo \"adding ${macport_prefix} to paths\"\n\n\t\t\tLDFLAGS=\"-L${macport_prefix}/lib $LDFLAGS\"\n\t\t\tCXXFLAGS=\"-I${macport_prefix}/include $CXXFLAGS\"\n\n\t\t\tif test -z \"$_staticlibpath\"; then\n\t\t\t\t_staticlibpath=${macport_prefix}\n\t\t\t\techo \"Set staticlib-prefix to ${_staticlibpath}\"\n\t\t\tfi\n\t\tfi\n\n\t\t# Fink\n\t\t# There is no way to get the prefix, so implementing a hack here\n\t\tfink_version=`fink -V 2>/dev/null`\n\t\tif test \"$?\" -eq 0; then\n\t\t\tfink_version=\"`echo \"${fink_version}\" | sed -ne 's/Package manager version: \\([0-9.]*\\)/\\1/gp'`\"\n\t\t\techo_n \"You seem to be running Fink version ${fink_version}...\"\n\n\t\t\tfink_prefix=`which fink`\n\t\t\t# strip off /bin/fink from /sw/bin/port\n\t\t\tfink_prefix=`dirname ${fink_prefix}`\n\t\t\tfink_prefix=`dirname ${fink_prefix}`\n\n\t\t\techo \"adding ${fink_prefix} to paths\"\n\n\t\t\tLDFLAGS=\"-L${fink_prefix}/lib $LDFLAGS\"\n\t\t\tCXXFLAGS=\"-I${fink_prefix}/include $CXXFLAGS\"\n\n\t\t\tif test -z \"$_staticlibpath\"; then\n\t\t\t\t_staticlibpath=${fink_prefix}\n\t\t\t\techo \"Set staticlib-prefix to ${_staticlibpath}\"\n\t\t\tfi\n\t\tfi\n\n\t\t# Homebrew\n\t\tbrew_version=`brew -v 2>/dev/null`\n\t\tif test \"$?\" -eq 0; then\n\t\t\tbrew_version=\"`echo \"${brew_version}\" | sed -ne 's/Homebrew \\([0-9.]*\\)/\\1/gp'`\"\n\t\t\techo_n \"You seem to be running Homebrew version ${brew_version}...\"\n\n\t\t\tbrew_prefix=`brew --prefix`\n\n\t\t\techo \"adding ${brew_prefix} to paths\"\n\n\t\t\tLDFLAGS=\"-L${brew_prefix}/lib $LDFLAGS\"\n\t\t\tCXXFLAGS=\"-I${brew_prefix}/include $CXXFLAGS\"\n\n\t\t\tif test -z \"$_staticlibpath\"; then\n\t\t\t\t_staticlibpath=${brew_prefix}\n\t\t\t\techo \"Set staticlib-prefix to ${_staticlibpath}\"\n\t\t\tfi\n\t\tfi\n\n\t\t# If _staticlibpath is not set yet try first /sw (fink) then /usr/local\n\t\t# (the macports case is handled above).\n\t\tif test -z \"$_staticlibpath\"; then\n\t\t\tif test -d \"/sw\"; then\n\t\t\t\t_staticlibpath=/sw\n\t\t\t\techo \"Set staticlib-prefix to ${_staticlibpath}\"\n\t\t\telif test -d \"/usr/local\"; then\n\t\t\t\t_staticlibpath=/usr/local\n\t\t\t\techo \"Set staticlib-prefix to ${_staticlibpath}\"\n\t\t\telse\n\t\t\t\techo \"Could not determine prefix for static libraries\"\n\t\t\tfi\n\t\tfi\n\n\t\t# If _xcodetoolspath is not set yet use xcode-select to get the path\n\t\tif test -z \"$_xcodetoolspath\"; then\n\t\t\t_xcodetoolspath=\n\t\t\tif command -v xcode-select >/dev/null 2>&1; then\n\t\t\t\t_xcodetoolspath=`xcode-select -print-path`/Tools\n\t\t\t\tif test -d \"$_xcodetoolspath\"; then\n\t\t\t\t\techo \"Set xcodetools-path to ${_xcodetoolspath}\"\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif test -z \"$_xcodetoolspath\"; then\n\t\t\t\techo \"Could not determine path for Xcode Tools\"\n\t\t\tfi\n\t\tfi\n\n\t\techocheck \"macOS deployment target\"\n\t\tcat > $TMPC << EOF\n#include \"AvailabilityMacros.h\"\n\n#define _DIGIT(x) #x\n#define DIGIT(x) _DIGIT(x)\n\nconst char version[] = \"Version:\" DIGIT(MAC_OS_X_VERSION_MIN_REQUIRED);\nconst char *_version() { char *s = (char *)version; return s; }\n\nint main(int argc, char *argv[]) { _version(); return 0; }\nEOF\n\t\tcc_check_no_clean\n\t\tif $_strings $TMPO$HOSTEXEEXT | grep Version: >/dev/null; then\n\t\t\t_macos_min_version=`$_strings $TMPO$HOSTEXEEXT | grep Version:`\n\t\t\t_macos_min_version=\"${_macos_min_version#Version:}\"\n\t\tfi\n\t\tcc_check_clean\n\n\t\t# Also get a dot version of the min version\n\t\t_macos_min_version_dot=undefined\n\t\tif test -n \"$_macos_min_version\" ; then\n\t\t\tif test \"$_macos_min_version\" -lt 101000; then\n\t\t\t\t_macos_min_ver_major=$((${_macos_min_version}/100))\n\t\t\t\t_macos_min_ver_minor=$((${_macos_min_version}/10 - 10*${_macos_min_ver_major}))\n\t\t\t\t_macos_min_version_dot=${_macos_min_ver_major}.${_macos_min_ver_minor}\n\t\t\telse\n\t\t\t\t_macos_min_ver_major=$((${_macos_min_version}/10000))\n\t\t\t\t_macos_min_ver_minor=$((${_macos_min_version}/100 - 100*${_macos_min_ver_major}))\n\t\t\t\t_macos_min_version_dot=${_macos_min_ver_major}.${_macos_min_ver_minor}\n\t\t\tfi\n\t\tfi\n\t\techo $_macos_min_version_dot\n\n\t\t# Version-specific quirks\n\t\tif test -n \"$_macos_min_version\" ; then\n\t\t\t# When building for MacOS X 10.5 or below\n\t\t\tif test \"$_macos_min_version\" -lt 1060 ; then\n\t\t\t\tadd_line_to_config_mk 'MACOSX_LEOPARD_OR_BELOW = 1'\n\n\t\t\t\t# OSX 10.4/10.5 has no native C++11 support, thus we need to\n\t\t\t\t# embed an updated libstdc++ in the bundle, and fix its\n\t\t\t\t# dynamic references with install_name_tool(1), which requires\n\t\t\t\t# linking with a bit of padding for the updated references.\n\t\t\t\tappend_var LDFLAGS \"-Wl,-headerpad_max_install_names\"\n\n\t\t\t\tif test \"$_debug_build\" != no ; then\n\t\t\t\t\t# Prefer DWARF over stabs on older OSX; this requires a\n\t\t\t\t\t# newer GDB, but we need it for the updated toolchain\n\t\t\t\t\t# anyway. This improves the debugging experience quite\n\t\t\t\t\t# a lot, and it still creates meaningful traces for the\n\t\t\t\t\t# Crash Reporter of OSX 10.4.\n\t\t\t\t\tappend_var CXXFLAGS \"-gdwarf-2\"\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\t# When building with SDK 10.14 or above, we cannot compile the 32 bits dock plugin\n\t\t\t# Assume the SDK version is the same as the min version.\n\t\t\tif test \"$_macos_min_version\" -gt 101399 ; then\n\t\t\t\tadd_line_to_config_mk 'MACOSX_64_BITS_ONLY = 1'\n\t\t\tfi\n\t\tfi\n\n\t\tcase $_host_cpu in\n\t\tpowerpc*)\n\t\t\t# We use -force_cpusubtype_ALL to ensure the binary runs on every\n\t\t\t# PowerPC machine.\n\t\t\tappend_var LDFLAGS \"-force_cpusubtype_ALL\"\n\t\t\t;;\n\t\taarch64)\n\t\t\tadd_line_to_config_mk 'MACOSX_ARM64 = 1'\n\t\t\t;;\n\t\tesac\n\n\t\t# Avoid \"file has no symbols\" noise from ranlib, if it's new enough\n\t\tranlib_version=`$_ranlib -V 2>/dev/null`\n\t\tif test -n \"$ranlib_version\" ; then\n\t\t\tranlib_version=\"`echo \"${ranlib_version}\" | sed -ne 's/.*cctools-\\([0-9]\\{1,\\}\\).*/\\1/gp'`\"\n\t\t\tif test -n \"$ranlib_version\" && test \"$ranlib_version\" -ge 862 ; then\n\t\t\t\tappend_var _ranlib \"-no_warning_for_no_symbols\"\n\t\t\t\t# Also tell ar not to do its own calls to ranlib\n\t\t\t\tappend_var _ar \"-S\"\n\t\t\tfi\n\t\tfi\n\n\t\t# Use pandoc to generate README and NEWS file for the bundle\n\t\t# Also default to HTML rather than plain text as it gives a nicer\n\t\t# formating, especially for the README. We could consider using RTF\n\t\t# as well, but TextEdit does not support links within the document,\n\t\t# and having a TOC with links, which we do with html, is quite convenient.\n\t\t_pandoc=yes\n\t\tif test \"$_pandocformat\" = \"default\"; then\n\t\t\t_pandocformat=\"html\"\n\t\tfi\n\t\t;;\n\tdreamcast)\n\t\tappend_var DEFINES \"-D__DC__\"\n\t\tappend_var DEFINES \"-DNONSTANDARD_PORT\"\n\t\t_detection_features_full=no\n\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t_detection_features_static=no\n\t\tfi\n\t\t# XXX: Enabling SCUMM v7+ hasn't been useful on DC for many years (bug #6008),\n\t\t# and may confuse users, since this is one of the most popular engines, so make\n\t\t# sure that it won't be enabled (until a better backend capability requirement\n\t\t# feature is implemented). This may also help SCUMMv6 and below behave better\n\t\t# on this very memory-limited platform.\n\t\tengine_disable scumm_7_8\n\t\t;;\n\tds)\n\t\t_optimization_level=-Os\n\t\tappend_var DEFINES \"-D__DS__\"\n\t\tappend_var DEFINES \"-DNDS\"\n\t\tappend_var DEFINES \"-DARM9\"\n\t\tappend_var DEFINES \"-DARM\"\n\t\tappend_var DEFINES \"-DNONSTANDARD_PORT\"\n\t\tappend_var CXXFLAGS \"-isystem $DEVKITPRO/libnds/include\"\n\t\tappend_var CXXFLAGS \"-isystem $DEVKITPRO/portlibs/nds/include\"\n\t\tappend_var CXXFLAGS \"-isystem $DEVKITPRO/portlibs/armv5te/include\"\n\t\tappend_var CXXFLAGS \"-march=armv5te\"\n\t\tappend_var CXXFLAGS \"-mtune=arm946e-s\"\n\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\tappend_var CXXFLAGS \"-mthumb\"\n\t\tappend_var CXXFLAGS \"-mthumb-interwork\"\n\t\tappend_var CXXFLAGS \"-ffunction-sections\"\n\t\tappend_var CXXFLAGS \"-fdata-sections\"\n\t\tappend_var CXXFLAGS \"-fno-strict-aliasing\"\n\t\tappend_var CXXFLAGS \"-fno-threadsafe-statics\"\n\t\tappend_var CXXFLAGS \"-fuse-cxa-atexit\"\n\t\t# Suppress format warnings as the long 4 byte causes noisy warnings.\n\t\tappend_var CXXFLAGS \"-Wno-format\"\n\t\tappend_var LDFLAGS \"-mthumb\"\n\t\tappend_var LDFLAGS \"-mthumb-interwork\"\n\t\tappend_var LDFLAGS \"-mfloat-abi=soft\"\n\t\tappend_var LDFLAGS \"-Wl,-Map,map.txt\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/libnds/lib\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/portlibs/nds/lib\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/portlibs/armv5te/lib\"\n\t\tappend_var LIBS \"-specs=ds_arm9.specs\"\n\t\tappend_var LIBS \"-lfilesystem\"\n\t\tappend_var LIBS \"-lfat\"\n\t\tappend_var LIBS \"-lmm9\"\n\t\tappend_var LIBS \"-lnds9\"\n\t\t;;\n\temscripten)\n\t\tappend_var DEFINES \"-DEMSCRIPTEN\"\n\t\tadd_line_to_config_mk 'EMSCRIPTEN = 1'\n\t\t_port_mk=\"backends/platform/sdl/emscripten/emscripten.mk\"\n\t\tappend_var LDFLAGS \"-s FORCE_FILESYSTEM\"\n\t\tappend_var LDFLAGS \"-s INITIAL_MEMORY=128MB -s TOTAL_STACK=32MB -s ALLOW_MEMORY_GROWTH=1\"\n\t\tappend_var LDFLAGS \"-s ASYNCIFY=1 -s ASYNCIFY_STACK_SIZE=1048576\"\n\n\t\tif test \"$_debug_build\" = yes; then\n\t\t\t_optimization_level=-O2\n\t\t\tappend_var LDFLAGS \"-O2 -g3 -s ASSERTIONS=2\"\n\t\telse\n\t\t\t_optimization_level=-O3\n\t\t\tappend_var LDFLAGS \"-O3\"\n\t\tfi\n\n\t\t# activate emscripten-ports\n\t\tif test \"$_sdl\" != no; then # we enable SDL2 by default\n\t\t\tappend_var LDFLAGS \"-s USE_SDL=2 \"\n\t\tfi\n\n\t\t# We explicitly disable optional libraries if not enabled. \"auto\" would depend\n\t\t# on whether the port has been used before (and is detected) which is unpredictable.\n\t\tif test \"$_freetype2\" = yes; then\n\t\t\t# neither pkg-config nor freetype-config work, so we setup freetype manually\n\t\t\tappend_var LDFLAGS \"-s USE_FREETYPE=1\"\n\t\t\t_freetype_found=\"true\"\n\t\t\t_freetypepath=\"$EMSDK/upstream/emscripten/cache/sysroot/include/freetype2/\"\n\t\t\tFREETYPE2_CFLAGS=\"-I$_freetypepath\"\n\t\telse\n\t\t\t_freetype2=no\n\t\tfi\n\t\tif test \"$_gif\" = yes; then\n\t\t \tappend_var LDFLAGS \"-s USE_GIFLIB=1\"\n\t\telse\n\t\t\t_gif=no\n\t\tfi\n\t\tif test \"$_jpeg\" = yes; then\n\t\t\tappend_var LDFLAGS \"-s USE_LIBJPEG=1\"\n\t\telse\n\t\t\t_jpeg=no\n\t\tfi\n\t\tif test \"$_ogg\" = yes; then\n\t\t\tappend_var LDFLAGS \"-s USE_OGG=1\"\n\t\telse\n\t\t\t_ogg=no\n\t\tfi\n\t\tif test \"$_png\" = yes; then\n\t\t\tappend_var LDFLAGS \"-s USE_LIBPNG=1\"\n\t\telse\n\t\t\t_png=no\n\t\tfi\n\t\tif test \"$_vorbis\" = yes; then\n\t\t\tappend_var LDFLAGS \"-s USE_VORBIS=1\"\n\t\telse\n\t\t\t_vorbis=no\n\t\tfi\n\t\tif test \"$_zlib\" = yes; then\n\t\t\tappend_var LDFLAGS \"-s USE_ZLIB=1\"\n\t\telse\n\t\t\t_zlib=no\n\t\tfi\n\t;;\n\tfreebsd* | dragonfly*)\n\t\tappend_var LDFLAGS \"-L/usr/local/lib\"\n\t\tappend_var CXXFLAGS \"-I/usr/local/include\"\n\t\t;;\n\tgamecube)\n\t\t_optimization_level=-Os\n\t\tappend_var CXXFLAGS \"-mogc\"\n\t\tappend_var CXXFLAGS \"-mcpu=750\"\n\t\tappend_var CXXFLAGS \"-meabi\"\n\t\tappend_var CXXFLAGS \"-mhard-float\"\n\t\tappend_var CXXFLAGS \"-ffunction-sections\"\n\t\tappend_var CXXFLAGS \"-fdata-sections\"\n\t\tappend_var CXXFLAGS \"-fmodulo-sched\"\n\t\tappend_var CXXFLAGS \"-fuse-cxa-atexit\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/libogc/include\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/portlibs/ppc/include\"\n\t\t# libogc is required to link the cc tests (includes _start())\n\t\tappend_var LDFLAGS \"-mogc\"\n\t\tappend_var LDFLAGS \"-mcpu=750\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/libogc/lib/cube\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/portlibs/ppc/lib\"\n\t\tappend_var LDFLAGS \"-logc\"\n\t\tif test \"$_dynamic_modules\" = \"yes\" ; then\n\t\t\t# retarded toolchain patch forces --gc-sections, overwrite it\n\t\t\tappend_var LDFLAGS \"-Wl,--no-gc-sections\"\n\t\tfi\n\t\t;;\n\thaiku*)\n\t\tappend_var DEFINES \"-DSYSTEM_NOT_SUPPORTING_D_TYPE\"\n\t\tappend_var DEFINES \"-D_GNU_SOURCE\"\n\t\t# Needs -lnetwork for the timidity MIDI driver\n\t\tappend_var LIBS \"-lnetwork\"\n\t\t_seq_midi=no\n\t\t;;\n\tirix*)\n\t\tappend_var DEFINES \"-DIRIX\"\n\t\tappend_var DEFINES \"-DSYSTEM_NOT_SUPPORTING_D_TYPE\"\n\t\tappend_var LIBS \"-lmd -lfastm -lm\"\n\t\t_ranlib=:\n\t\t;;\n\tlinux* | uclinux*)\n\t\t;;\n\tmingw*)\n\t\tappend_var DEFINES \"-DWIN32\"\n\t\t# append_var DEFINES \"-D__USE_MINGW_ANSI_STDIO=0\"  # Modern MinGW does not need it\n\t\tappend_var LDFLAGS \"-static-libgcc -static-libstdc++\"\n\t\tappend_var LIBS \"-lmingw32 -lwinmm -lgdi32\"\n\t\tappend_var OBJS \"dists/scummvm.o\"\n\t\tadd_line_to_config_mk 'WIN32 = 1'\n\t\t_port_mk=\"backends/platform/sdl/win32/win32.mk\"\n\t\t;;\n\tmint*)\n\t\tappend_var DEFINES \"-DSYSTEM_NOT_SUPPORTING_D_TYPE\"\n\t\tappend_var DEFINES \"-D_GNU_SOURCE\"\n\t\tappend_var DEFINES \"-D_ISOC11_SOURCE\"\n\t\t;;\n\tmorphos*)\n\t\tif test \"$_debug_build\" = no; then\n\t\t\t_optimization_level=-O2\n\t\tfi\n\t\tappend_var LDFLAGS \"-Wl,--export-dynamic\"\n\t\tappend_var LDFLAGS \"-L/usr/local/lib\"\n\t\tappend_var CXXFLAGS \"-D__MORPHOS_SHAREDLIBS\"\n\t\t# Suppress format warnings as the long 4 byte causes noisy warnings.\n\t\tappend_var CXXFLAGS \"-Wno-format\"\n\t\tadd_line_to_config_mk 'MORPHOS = 1'\n\t\t_port_mk=\"backends/platform/sdl/morphos/morphos.mk\"\n\t\t# use SDL2\n\t\t_sdlconfig=sdl2-config\n\t\t;;\n\tmsys)\n\t\techo ERROR: Using the MSYS shell in msys mode is not supported. Please use the MSYS shell in mingw mode instead.\n\t\texit 1\n\t\t;;\n\tn64)\n\t\tappend_var DEFINES \"-D__N64__\"\n\t\tappend_var DEFINES \"-DLIMIT_FPS\"\n\t\tappend_var DEFINES \"-DNONSTANDARD_PORT\"\n\t\tappend_var DEFINES \"-DDISABLE_COMMAND_LINE\"\n\t\tappend_var DEFINES \"-DDISABLE_DEFAULT_SAVEFILEMANAGER\"\n\t\tappend_var DEFINES \"-DDISABLE_DOSBOX_OPL\"\n\t\tappend_var DEFINES \"-DDISABLE_FANCY_THEMES\"\n\t\tappend_var DEFINES \"-DDISABLE_NES_APU\"\n\t\tappend_var DEFINES \"-DREDUCE_MEMORY_USAGE\"\n\t\tadd_line_to_config_mk 'N64 = 1'\n\t\t_detection_features_full=no\n\t\t_nuked_opl=no\n\t\t_sid_audio=no\n\t\t;;\n\topenbsd*)\n\t\tappend_var LDFLAGS \"-L/usr/local/lib\"\n\t\tappend_var CXXFLAGS \"-I/usr/local/include\"\n\t\t_seq_midi=no\n\t\t;;\n\tps3)\n\t\t# Force use of SDL and freetype from the ps3 toolchain\n\t\t_sdlpath=\"$PS3DEV/portlibs/ppu:$PS3DEV/portlibs/ppu/bin\"\n\t\t_freetypepath=\"$PS3DEV/portlibs/ppu:$PS3DEV/portlibs/ppu/bin\"\n\t\t_libcurlpath=\"$PS3DEV/portlibs/ppu:$PS3DEV/portlibs/ppu/bin\"\n\n\t\tappend_var DEFINES \"-DPLAYSTATION3\"\n\t\tappend_var CXXFLAGS \"-mcpu=cell -mno-fp-in-toc -I$PSL1GHT/ppu/include -I$PS3DEV/portlibs/ppu/include\"\n\t\tappend_var LDFLAGS \"-L$PSL1GHT/ppu/lib -L$PS3DEV/portlibs/ppu/lib\"\n\t\t# The network libraries are statically linked and need to be specified in the following order\n\t\tappend_var SDL_NET_LIBS \"-lSDL2_net -lnet -lnetctl -lsysmodule\"\n\t\tadd_line_to_config_mk 'PLAYSTATION3 = 1'\n\t\tadd_line_to_config_h \"#define PREFIX \\\"${prefix}\\\"\"\n\t\t# PS3 has no OpenGL support at all even though it's SDL based\n\t\t_opengl_mode=none\n\t\t;;\n\tpsp2)\n\t\t_freetypepath=\"$VITASDK/arm-vita-eabi/bin\"\n\t\t_freetype2=yes\n\t\t_libcurlpath=\"$VITASDK/arm-vita-eabi/bin\"\n\t\tappend_var CXXFLAGS \"--sysroot=$VITASDK/arm-vita-eabi\"\n\t\tappend_var LDFLAGS \"--sysroot=$VITASDK/arm-vita-eabi\"\n\t\tappend_var DEFINES \"-DPSP2 -DSYSTEM_NOT_SUPPORTING_D_TYPE\"\n\t\tappend_var CXXFLAGS \"-Wl,-q -I$VITASDK/arm-vita-eabi/include\"\n\t\tappend_var CXXFLAGS \"-march=armv7-a -mtune=cortex-a9 -mfpu=neon -mfloat-abi=hard\"\n\t\tappend_var LDFLAGS \"-Wl,-q -L$VITASDK/arm-vita-eabi/lib\"\n\t\t#the next line fixes a crash when starting scumm-7-8 games (The Dig etc.)\n\t\t#when either -O2, -O3 or -Os optimizations are enabled\n\t\tappend_var CXXFLAGS \"-fno-optimize-sibling-calls\"\n\t\t#the next line fixes \"branch out of range\" error in gob engine when -Os is used\n\t\tappend_var CXXFLAGS \"-mlong-calls\"\n\t\tappend_var CXXFLAGS \"-mword-relocations\"\n\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\t#ensure verbose output during linking to prevent buildbot kills after 1200 seconds\n\t\tif test \"$_verbose_build\" = yes ; then\n\t\t\tappend_var LDFLAGS \"-Wl,-v --verbose\"\n\t\tfi\n\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t_detection_features_static=no\n\t\t\t_plugins_default=dynamic\n\t\tfi\n\t\tif test \"$_debug_build\" = no; then\n\t\t#optimize for smallest file size. This is necessary to prevent a crash on startup\n\t\t#due to the large executable file size when many engines are enabled\n\t\t#for example when --enable-all-engines is used to enable all the unstable engines\n\t\t\t_optimization_level=-Os\n\t\tfi\n\t\tif test \"$_debug_build\" = yes; then\n\t\t\t_optimization_level=-O0\n\t\t\tappend_var DEFINES \"-D__PSP2_DEBUG__\"\n\t\t\tappend_var LIBS \"-lpsp2shell\"\n\t\tfi\n\t\tadd_line_to_config_mk 'PSP2 = 1'\n\t\tadd_line_to_config_h \"#define PREFIX \\\"${prefix}\\\"\"\n\t\t;;\n\tpsp)\n\t\t_optimization_level=-O3\n\t\t_freetypepath=\"$PSPDEV/psp/bin\"\n\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t_detection_features_static=no\n\t\t\t_plugins_default=dynamic\n\t\tfi\n\t\tappend_var CXXFLAGS \"-I$PSPSDK/include\"\n\t\t# FIXME: Why is the following in CXXFLAGS and not in DEFINES? Change or document this.\n\t\tappend_var CXXFLAGS \"-D_PSP_FW_VERSION=150\"\n\t\tappend_var CXXFLAGS \"-mno-gpopt\"\n\t\tadd_line_to_config_mk 'PSP = 1'\n\t\t;;\n\triscos)\n\t\tdefine_in_config_if_yes yes 'RISCOS'\n\t\tappend_var LDFLAGS \"-static\"\n\t\t_optimization_level=-O3\n\t\t_port_mk=\"backends/platform/sdl/riscos/riscos.mk\"\n\t\t_pandoc=yes\n\t\t_sdlconfig=sdl-config\n\t\t# RiscOS has no OpenGL support at all even though it's SDL based\n\t\t_opengl_mode=none\n\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t_plugins_default=dynamic\n\t\tfi\n\t\t_detection_features_full=no\n\t\t;;\n\tsolaris*)\n\t\tappend_var DEFINES \"-DSOLARIS\"\n\t\tappend_var DEFINES \"-DSYSTEM_NOT_SUPPORTING_D_TYPE\"\n\t\t# Needs -lbind -lsocket for the timidity MIDI driver\n\t\tappend_var LIBS \"-lnsl -lsocket\"\n\t\t;;\n\tswitch)\n\t\t_pkgconfig=\"$DEVKITPRO/portlibs/switch/bin/aarch64-none-elf-pkg-config\"\n\t\t_libcurlpath=\"$DEVKITPRO/portlibs/switch/bin\"\n\t\t_sdlpath=\"$DEVKITPRO/portlibs/switch/bin\"\n\t\tappend_var DEFINES \"-DSWITCH -D__SWITCH__ -DNINTENDO_SWITCH\"\n\t\tappend_var CXXFLAGS \"-march=armv8-a -mtune=cortex-a57 -mtp=soft -fPIE -ftls-model=local-exec\"\n\t\tappend_var CXXFLAGS \"-ffunction-sections -fdata-sections\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/libnx/include -I$DEVKITPRO/portlibs/switch/include\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/libnx/lib -L$DEVKITPRO/portlibs/switch/lib\"\n\t\tappend_var LDFLAGS \"-specs=$DEVKITPRO/libnx/switch.specs\"\n\t\tadd_line_to_config_mk 'SWITCH = 1'\n\t\tif test \"$_debug_build\" = yes; then\n\t\t\tappend_var DEFINES \"-D__SWITCH_DEBUG__\"\n\t\telse\n\t\t\t_optimization_level=-O3\n\t\tfi\n\t\t;;\n\twii)\n\t\t_optimization_level=-Os\n\t\tappend_var CXXFLAGS \"-mrvl\"\n\t\tappend_var CXXFLAGS \"-mcpu=750\"\n\t\tappend_var CXXFLAGS \"-meabi\"\n\t\tappend_var CXXFLAGS \"-mhard-float\"\n\t\tappend_var CXXFLAGS \"-ffunction-sections\"\n\t\tappend_var CXXFLAGS \"-fdata-sections\"\n\t\tappend_var CXXFLAGS \"-fmodulo-sched\"\n\t\tappend_var CXXFLAGS \"-fuse-cxa-atexit\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/libogc/include\"\n\t\tappend_var CXXFLAGS \"-I$DEVKITPRO/portlibs/ppc/include\"\n\t\t# libogc is required to link the cc tests (includes _start())\n\t\tappend_var LDFLAGS \"-mrvl\"\n\t\tappend_var LDFLAGS \"-mcpu=750\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/libogc/lib/wii\"\n\t\tappend_var LDFLAGS \"-L$DEVKITPRO/portlibs/ppc/lib\"\n\t\tappend_var LDFLAGS \"-logc\"\n\t\tif test \"$_dynamic_modules\" = \"yes\" ; then\n\t\t\t# retarded toolchain patch forces --gc-sections, overwrite it\n\t\t\tappend_var LDFLAGS \"-Wl,--no-gc-sections\"\n\t\tfi\n\t\t;;\nesac\n\nif test -n \"$_host\"; then\n\t# Cross-compiling mode - add your target here if needed\n\techo \"Cross-compiling to $_host\"\n\tcase \"$_host\" in\n\t\t3ds)\n\t\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t\t_detection_features_static=no\n\t\t\t\t_plugins_default=dynamic\n\t\t\telse\n\t\t\t\t_detection_features_full=no\n\t\t\tfi\n\t\t\tappend_var DEFINES \"-DDISABLE_FANCY_THEMES\"\n\t\t\tappend_var DEFINES \"-DDISABLE_HELP_STRINGS\"\n\t\t\tappend_var DEFINES \"-DDISABLE_NES_APU\"\n\t\t\t_backend=\"3ds\"\n\t\t\t_build_scalers=no\n\t\t\t_vkeybd=yes\n\t\t\t_seq_midi=no\n\t\t\t_mt32emu=no\n\t\t\t_timidity=no\n\t\t\t# Should use Tremor instead of Vorbis\n\t\t\t_vorbis=no\n\t\t\t_port_mk=\"backends/platform/3ds/3ds.mk\"\n\t\t\t;;\n\t\tandroid-* | ouya)\n\t\t\t# __ANDROID__ is defined by Clang in the NDK\n\t\t\t# we link a .so as default\n\t\t\tappend_var LDFLAGS \"-shared\"\n\t\t\tappend_var LDFLAGS \"-Wl,-Bsymbolic,--no-undefined\"\n\t\t\tappend_var LDFLAGS \"-static-libstdc++\"\n\t\t\tHOSTEXEPRE=lib\n\t\t\tHOSTEXEEXT=.so\n\t\t\t_backend=\"android\"\n\t\t\t_port_mk=\"backends/platform/$_backend/android.mk\"\n\t\t\t_build_aspect=no\n\t\t\t_seq_midi=no\n\t\t\t_timidity=no\n\t\t\t;;\n\t\tarm-linux|arm*-linux-gnueabi|arm-*-linux)\n\t\t\t;;\n\t\tarm-vfp-riscos)\n\t\t\tappend_var LDFLAGS \"-L$GCCSDK_INSTALL_ENV/vfp/lib\"\n\t\t\tappend_var PLUGIN_LDFLAGS \"-L$GCCSDK_INSTALL_ENV/vfp/lib\"\n\t\t\tappend_var CXXFLAGS \"-isystem $GCCSDK_INSTALL_ENV/vfp/include\"\n\t\t\tif test -z \"$PKG_CONFIG_LIBDIR\"; then\n\t\t\t\tPKG_CONFIG_LIBDIR=\"$GCCSDK_INSTALL_ENV/vfp/lib/pkgconfig\"\n\t\t\tfi\n\t\t\t_sdlpath=$GCCSDK_INSTALL_ENV/vfp/bin\n\t\t\t_freetypepath=$GCCSDK_INSTALL_ENV/vfp/bin\n\t\t\t_libcurlpath=$GCCSDK_INSTALL_ENV/vfp/bin\n\t\t\tappend_var CXXFLAGS \"-march=armv6zk\"\n\t\t\tappend_var CXXFLAGS \"-mtune=cortex-a9\"\n\t\t\tappend_var CXXFLAGS \"-mfpu=vfp\"\n\t\t\tappend_var LDFLAGS \"-mfpu=vfp\"\n\t\t\tappend_var PLUGIN_LDFLAGS \"-mfpu=vfp\"\n\t\t\tappend_var ASFLAGS \"-mfpu=vfp\"\n\t\t\t;;\n\t\tarm-*riscos)\n\t\t\tappend_var LDFLAGS \"-L$GCCSDK_INSTALL_ENV/lib\"\n\t\t\tappend_var PLUGIN_LDFLAGS \"-L$GCCSDK_INSTALL_ENV/lib\"\n\t\t\tappend_var CXXFLAGS \"-isystem $GCCSDK_INSTALL_ENV/include\"\n\t\t\tif test -z \"$PKG_CONFIG_LIBDIR\"; then\n\t\t\t\tPKG_CONFIG_LIBDIR=\"$GCCSDK_INSTALL_ENV/lib/pkgconfig\"\n\t\t\tfi\n\t\t\t_sdlpath=$GCCSDK_INSTALL_ENV/bin\n\t\t\t_freetypepath=$GCCSDK_INSTALL_ENV/bin\n\t\t\t_libcurlpath=$GCCSDK_INSTALL_ENV/bin\n\t\t\tappend_var CXXFLAGS \"-march=armv3m\"\n\t\t\tappend_var CXXFLAGS \"-mtune=xscale\"\n\t\t\t_vorbis=no\n\t\t\t;;\n\t\tbfin*)\n\t\t\t;;\n\t\t*darwin*)\n\t\t\t_ranlib=$_host-ranlib\n\t\t\t_strip=$_host-strip\n\t\t\t;;\n\t\twasm*-emscripten)\n\t\t\t_backend=\"sdl\"\n\t\t\t# Disable cloud and SDL_Net as this is handled in the browser\n\t\t\t_cloud=no\n\t\t\t_sdlnet=no\n\t\t\t_libcurl=no\n\t\t\t_curl=no\n\t\t\t_enet=no\n\t\t\t_ar=\"emar cr\"\n\t\t\t_ranlib=\"emranlib\"\n\t\t\t;;\n\t\traspberrypi)\n\t\t\t_libcurlpath=$RPI_ROOT/usr/bin\n\t\t\t# This is needed because the official cross compiler doesn't have multiarch enabled\n\t\t\t# but Raspbian does.\n\t\t\t# Be careful as it's the linker (LDFLAGS) which must know about sysroot.\n\t\t\t# These are needed to build against Raspbian's libSDL.\n\t\t\tappend_var LDFLAGS \"--sysroot=$RPI_ROOT\"\n\t\t\tappend_var LDFLAGS \"-B$RPI_ROOT/usr/lib/arm-linux-gnueabihf\"\n\t\t\tappend_var LDFLAGS \"-Xlinker --rpath-link=$RPI_ROOT/usr/lib/arm-linux-gnueabihf/pulseaudio\"\n\t\t\tappend_var LDFLAGS \"-Xlinker --rpath-link=$RPI_ROOT/usr/lib/arm-linux-gnueabihf\"\n\t\t\tappend_var LDFLAGS \"-Xlinker --rpath-link=$RPI_ROOT/lib/arm-linux-gnueabihf\"\n\t\t\tappend_var CXXFLAGS \"-isystem $RPI_ROOT/usr/include/arm-linux-gnueabihf\"\n\t\t\tappend_var CXXFLAGS \"-I$RPI_ROOT/usr/include\"\n\t\t\t# We prefer SDL2 on the Raspberry Pi: acceleration now depends on it\n\t\t\t# since SDL2 manages dispmanx/GLES2 very well internally.\n\t\t\t# SDL1 is bit-rotten on this platform.\n\t\t\t_sdlconfig=sdl2-config\n\t\t\t;;\n\t\tdreamcast)\n\t\t\tappend_var DEFINES \"-DDISABLE_DEFAULT_SAVEFILEMANAGER\"\n\t\t\tappend_var DEFINES \"-DDISABLE_TEXT_CONSOLE\"\n\t\t\tappend_var DEFINES \"-DDISABLE_COMMAND_LINE\"\n\t\t\t# Enable serial debugging output only when --enable-debug is passed\n\t\t\tif test \"$_release_build\" = yes -o \"$_debug_build\" != yes; then\n\t\t\t\tappend_var DEFINES \"-DNOSERIAL\"\n\t\t\tfi\n\t\t\t_optimization_level=-O3\n\t\t\tappend_var CXXFLAGS \"-funroll-loops\"\n\t\t\tappend_var CXXFLAGS \"-fschedule-insns2\"\n\t\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\t\tappend_var CXXFLAGS \"-fdelete-null-pointer-checks\"\n\t\t\t_backend=\"dc\"\n\t\t\t_build_scalers=no\n\t\t\t_build_aspect=no\n\t\t\t_tinygl=no\n\t\t\t# These two are needed due to shortcomings of the\n\t\t\t# detection systems.  Do not remove until auto-\n\t\t\t# detection works correctly.\n\t\t\t_mad=yes\n\t\t\t_zlib=yes\n\t\t\t_port_mk=\"backends/platform/dc/dreamcast.mk\"\n\t\t\t;;\n\t\tds)\n\t\t\tif test \"$_dynamic_modules\" = yes ; then\n\t\t\t\t_detection_features_static=no\n\t\t\t\t_plugins_default=dynamic\n\t\t\tfi\n\t\t\t_detection_features_full=no\n\t\t\tif test \"$_debug_build\" != yes; then\n\t\t\t\tappend_var DEFINES \"-DDISABLE_TEXT_CONSOLE\"\n\t\t\tfi\n\t\t\tappend_var DEFINES \"-DDISABLE_HELP_STRINGS\"\n\t\t\tappend_var DEFINES \"-DDISABLE_DOSBOX_OPL\"\n\t\t\tappend_var DEFINES \"-DDISABLE_FANCY_THEMES\"\n\t\t\tappend_var DEFINES \"-DDISABLE_NES_APU\"\n\t\t\tappend_var DEFINES \"-DREDUCE_MEMORY_USAGE\"\n\t\t\tappend_var DEFINES \"-DSTREAM_AUDIO_FROM_DISK\"\n\t\t\tappend_var DEFINES \"-DVECTOR_RENDERER_FORMAT=1555\"\n\t\t\t_backend=\"ds\"\n\t\t\t_build_scalers=no\n\t\t\t_build_aspect=no\n\t\t\t_mt32emu=no\n\t\t\t_nuked_opl=no\n\t\t\t_tinygl=no\n\t\t\t_bink=no\n\t\t\t_lua=no\n\t\t\t_png=no\n\t\t\t_freetype2=no\n\t\t\t_port_mk=\"backends/platform/ds/ds.mk\"\n\t\t\t;;\n\t\tgamecube)\n\t\t\t_backend=\"wii\"\n\t\t\t_build_scalers=no\n\t\t\t_build_aspect=no\n\t\t\t_vkeybd=yes\n\t\t\t_mt32emu=no\n\t\t\t_port_mk=\"backends/platform/wii/wii.mk\"\n\t\t\tadd_line_to_config_mk 'GAMECUBE = 1'\n\t\t\tadd_line_to_config_h '#define AUDIO_REVERSE_STEREO'\n\t\t\tadd_line_to_config_h '#define GAMECUBE'\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_USBGECKO */\"\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_MEMSTATS */\"\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_GDB */\"\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_GDB_NETWORK */\"\n\t\t\tadd_line_to_config_h \"#define USE_WII_DI\"\n\t\t\t;;\n\t\tios7*)\n\t\t\tadd_line_to_config_mk 'IPHONE = 1'\n\t\t\tappend_var DEFINES \"-DIPHONE -DIPHONE_IOS7\"\n\t\t\t_backend=\"ios7\"\n\t\t\t_seq_midi=no\n\t\t\t_timidity=no\n\t\t\t_ext_neon=yes\n\t\t\t;;\n\t\tkos32)\n\t\t\t# neither pkg-config nor *-config work, so we setup everything manually\n\t\t\t_pkgconfig=/bin/false\n\t\t\t_pkg_config=no\n\n\t\t\tZLIB_CFLAGS=\"-I${KOS32_SDK_DIR}/sources/zlib\"\n\t\t\tif test \"$_png\" != no; then\n\t\t\t\tPNG_CFLAGS=\"-I${KOS32_SDK_DIR}/sources/libpng\"\n\t\t\t\tPNG_LIBS=\"-lpng16 -lz\"\n\t\t\t\t_png=yes\n\t\t\tfi\n\t\t\tJPEG_CFLAGS=\"-I${KOS32_SDK_DIR}/sources/libjpeg\"\n\n\t\t\tFREETYPE2_STATIC_LIBS=\"-lfreetype\"\n\t\t\tFREETYPE2_CFLAGS=\"-I${KOS32_SDK_DIR}/sources/freetype/include\"\n\t\t\t_freetypeconfig=\n\t\t\t_freetype_found=\"true\"\n\n\t\t\tSDL_CFLAGS=\"-I${KOS32_SDK_DIR}/sources/SDL-1.2.2_newlib/include\"\n\t\t\tSDL_LIBS=\"-lSDLn -lsound\"\n\t\t\t_sdl=yes\n\t\t\t_sdlversion=1.2.2\n\t\t\t_backend=\"kolibrios\"\n\n\t\t\t_timidity=no\n\t\t\tadd_line_to_config_mk 'KOLIBRIOS = 1'\n\t\t\tadd_line_to_config_mk 'KOS32_AUTOBUILD = '\"${KOS32_AUTOBUILD}\"\n\t\t\tadd_line_to_config_mk 'KOS32_SDK_DIR = '\"${KOS32_SDK_DIR}\"\n\t\t\t_port_mk=\"backends/platform/sdl/kolibrios/kolibrios.mk\"\n\t\t\t;;\n\t\tm68k-atari-mint*)\n\t\t\t# auto -> yes (overriden by $_release_build = yes)\n\t\t\t#if test \"$_debug_build\" = \"no\"; then\n\t\t\t#\t# --disable-debug\n\t\t\t#\tappend_var LDFLAGS \"-s\"\n\t\t\t#fi\n\n\t\t\t# auto -> no\n\t\t\tif test \"$_optimizations\" = \"yes\"; then\n\t\t\t\t# --enable-release, --enable-optimizations\n\t\t\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\t\t\tappend_var CXXFLAGS \"-fno-exceptions\"\n\t\t\t\tappend_var CXXFLAGS \"-ffast-math -fno-unsafe-math-optimizations\"\n\t\t\tfi\n\n\t\t\t# auto -> no\n\t\t\tif test \"$_release_build\" = \"yes\"; then\n\t\t\t\t# --enable-release\n\t\t\t\tappend_var DEFINES  \"-DNDEBUG\"\n\t\t\t\tappend_var DEFINES  \"-DDISABLE_TEXT_CONSOLE\"\n\t\t\tfi\n\n\t\t\tappend_var LDFLAGS \"-Wl,--msuper-memory\"\n\n\t\t\t_seq_midi=no\n\t\t\t_timidity=no\n\t\t\t;;\n\t\tmaemo)\n\t\t\t_optimization_level=-Os\n\t\t\tappend_var CXXFLAGS \"-mcpu=arm926ej-s\"\n\t\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\t\tappend_var INCLUDES \"-I/usr/X11R6/include\"\n\t\t\tappend_var LIBS \"-L/usr/lib\"\n\n\t\t\t_backend=\"maemo\"\n\t\t\t_vkeybd=yes\n\t\t\t_build_hq_scalers=no\n\t\t\t_mt32emu=no\n\t\t\t_alsa=no\n\t\t\t_mad=yes\n\t\t\t_tremor=yes\n\t\t\t_zlib=yes\n\t\t\t;;\n\t\t*mingw32*)\n\t\t\t_sdlconfig=$_host-sdl2-config\n\t\t\t_libcurlconfig=$_host-curl-config\n\t\t\t_pkgconfig=$_host-pkg-config\n\t\t\t_windres=$_host-windres\n\t\t\t_ar=\"$_host-ar cr\"\n\t\t\t_ranlib=$_host-ranlib\n\t\t\t_strip=$_host-strip\n\t\t\tif `which $_host-peldd >/dev/null 2>&1`; then\n\t\t\t\t_ldd=\"$_host-peldd -t --ignore-errors\"\n\t\t\tfi\n\t\t\t;;\n\t\tmips-sgi*)\n\t\t\tappend_var LDFLAGS \"-static-libgcc\"\n\t\t\tappend_var LIBS \"-laudio\"\n\t\t\t;;\n\t\tmiyoo)\n\t\t\t_sysroot=`$CXX --print-sysroot`\n\t\t\t_sdlpath=$_sysroot/usr/bin\n\t\t\tappend_var DEFINES  \"-DMIYOO -DREDUCE_MEMORY_USAGE -DUNCACHED_PLUGINS\"\n\t\t\tappend_var CXXFLAGS \"-march=armv5te -mtune=arm926ej-s -ffast-math -fomit-frame-pointer -ffunction-sections -fdata-sections\"\n\t\t\tappend_var LDFLAGS  \"-march=armv5te -mtune=arm926ej-s -ffast-math -fomit-frame-pointer -ffunction-sections -fdata-sections\"\n\t\t\tappend_var LDFLAGS  \"-O3 -Wl,--as-needed,--gc-sections\"\n\t\t\t_vkeybd=yes\n\t\t\t_alsa=no\n\t\t\t# Explicitly use tremor\n\t\t\t_vorbis=no\n\t\t\t_tremor=yes\n\t\t\t_mt32emu=no\n\t\t\t_timidity=no\n\t\t\t_fluidsynth=no\n\t\t\t_highres=no\n\t\t\t# TODO: There's some problem with libFLAC availability. Fix and reenable\n\t\t\t_flac=no\n\t\t\t_seq_midi=no\n\t\t\t_nuked_opl=no\n\t\t\t_curl=no\n\t\t\t_optimization_level=-O3\n\t\t\t_backend=\"miyoo\"\n\t\t\t_port_mk=\"backends/platform/sdl/miyoo/miyoo.mk\"\n\t\t\tadd_line_to_config_mk 'MIYOO = 1'\n\t\t\tadd_line_to_config_mk \"MIYOO_TARGET = miyoo\"\n\t\t\t;;\n\t\tmiyoomini)\n\t\t\t_sysroot=`$CXX --print-sysroot`\n\t\t\t_sdlpath=$_sysroot/usr/bin\n\t\t\tappend_var DEFINES  \"-DMIYOOMINI -DREDUCE_MEMORY_USAGE -DUNCACHED_PLUGINS\"\n\t\t\tappend_var CXXFLAGS \"-marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -O3 -march=armv7ve -ffast-math -fomit-frame-pointer -fno-strength-reduce\"\n\t\t\tappend_var LDFLAGS  \"-marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -O3 -march=armv7ve -ffast-math -fomit-frame-pointer -fno-strength-reduce\"\n\t\t\tappend_var LDFLAGS  \"-O3 -Wl,--as-needed,--gc-sections\"\n\t\t\t_vkeybd=yes\n\t\t\t_alsa=no\n\t\t\t_mt32emu=no\n\t\t\t_timidity=no\n\t\t\t_fluidsynth=no\n\t\t\t_highres=yes\n\t\t\t_seq_midi=no\n\t\t\t_nuked_opl=no\n\t\t\t_curl=no\n\t\t\t_optimization_level=-O3\n\t\t\t_backend=\"miyoo\"\n\t\t\t_port_mk=\"backends/platform/sdl/miyoo/miyoo.mk\"\n\t\t\tadd_line_to_config_mk 'MIYOO = 1'\n\t\t\tadd_line_to_config_mk \"MIYOO_TARGET = miyoomini\"\n\t\t\t;;\n\t\tn64)\n\t\t\tappend_var CXXFLAGS \"-mno-extern-sdata\"\n\t\t\tappend_var CXXFLAGS \"--param max-inline-insns-auto=20\"\n\t\t\tappend_var CXXFLAGS \"-fomit-frame-pointer\"\n\t\t\tappend_var CXXFLAGS \"-march=vr4300\"\n\t\t\tappend_var CXXFLAGS \"-mtune=vr4300\"\n\t\t\tappend_var CXXFLAGS \"-mhard-float\"\n\t\t\tappend_var LDFLAGS \"-march=vr4300\"\n\t\t\tappend_var LDFLAGS \"-mtune=vr4300\"\n\t\t\tappend_var LDFLAGS \"-nodefaultlibs\"\n\t\t\tappend_var LDFLAGS \"-nostartfiles\"\n\t\t\tappend_var LDFLAGS \"-mno-crt0\"\n\t\t\tappend_var LDFLAGS \"-L$N64SDK/hkz-libn64\"\n\t\t\tappend_var LDFLAGS \"-L$N64SDK/lib\"\n\t\t\tappend_var LDFLAGS \"-T n64ld_cpp.x -Xlinker -Map -Xlinker scummvm.map\"\n\t\t\t_backend=\"n64\"\n\t\t\t_mt32emu=no\n\t\t\t_build_scalers=no\n\t\t\t_build_aspect=no\n\t\t\t_savegame_timestamp=no\n\t\t\t_translation=no\n\t\t\t_text_console=no\n\t\t\t_vkeybd=yes\n\t\t\t_dynamic_modules=no\n\t\t\t_plugins_default=static\n\t\t\t# Force use of libmad, libtremor and zlib\n\t\t\t_mad=no\n\t\t\t_tremor=yes\n\t\t\t_zlib=yes\n\t\t\t_port_mk=\"backends/platform/n64/n64.mk\"\n\t\t\t;;\n\t\tneuros)\n\t\t\tappend_var DEFINES \"-DNEUROS\"\n\t\t\t_backend='null'\n\t\t\t_build_hq_scalers=no\n\t\t\t_mt32emu=no\n\t\t\t;;\n\t\topendingux-*)\n\t\t\t_sysroot=`$CXX --print-sysroot`\n\t\t\t_sdlpath=$_sysroot/usr/bin\n\t\t\tappend_var DEFINES  \"-DDINGUX -DOPENDINGUX -DREDUCE_MEMORY_USAGE -DUNCACHED_PLUGINS\"\n\t\t\tappend_var CXXFLAGS \"-fdata-sections -ffunction-sections -mplt\"\n\t\t\tappend_var LDFLAGS  \"-fdata-sections -ffunction-sections -mplt\"\n\t\t\tappend_var LDFLAGS  \"-O3 -Wl,--as-needed,--gc-sections\"\n\t\t\tif [ x\"$_dynamic_modules\" != xyes ]; then\n\t\t\t\tappend_var CXXFLAGS \"-mno-shared\"\n\t\t\t\tappend_var LDFLAGS  \"-mno-shared\"\n\t\t\tfi\n\t\t\t_vkeybd=yes\n\t\t\t_alsa=no\n\t\t\t_vorbis=no\n\t\t\t_mt32emu=no\n\t\t\t_timidity=no\n\t\t\t_fluidsynth=no\n\t\t\t_theoradec=no\n\t\t\t_seq_midi=no\n\t\t\t_nuked_opl=no\n\t\t\t_curl=no\n\t\t\t_optimization_level=-O3\n\t\t\t_backend=\"opendingux\"\n\t\t\t_port_mk=\"backends/platform/sdl/opendingux/opendingux.mk\"\n\t\t\tadd_line_to_config_mk 'OPENDINGUX = 1'\n\t\t\tadd_line_to_config_mk \"OPENDINGUX_TARGET = ${_host#opendingux-}\"\n\t\t\tcase \"$_host\" in\n\t\t\t\topendingux-gcw0)\n\t\t\t\t\t;;\n\t\t\t\topendingux-lepus)\n\t\t\t\t\tappend_var DEFINES \"-DLEPUS\"\n\t\t\t\t\t_highres=no\n\t\t\t\t\t_build_hq_scalers=no\n\t\t\t\t\t;;\n\t\t\t\topendingux-rs90)\n\t\t\t\t\tappend_var DEFINES \"-DRS90 -DDISABLE_FANCY_THEMES\"\n\t\t\t\t\t_16bit=no\n\t\t\t\t\t_highres=no\n\t\t\t\t\t# Scaling is handled by IPU\n\t\t\t\t\t_build_scalers=no\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\techo \"WARNING: Unknown OpenDingux target\"\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\topenpandora)\n\t\t\t# Use -O3 on the OpenPandora for optimized builds.\n\t\t\tif test \"$_optimizations\" = yes; then\n\t\t\t\t_optimization_level=-O3\n\t\t\tfi\n\n\t\t\tappend_var CXXFLAGS \"-march=armv7-a\"\n\t\t\tappend_var CXXFLAGS \"-mtune=cortex-a8\"\n\t\t\tappend_var CXXFLAGS \"-mfloat-abi=softfp\"\n\t\t\tappend_var CXXFLAGS \"-mfpu=neon\"\n\t\t\tappend_var CXXFLAGS \"-fsingle-precision-constant\"\n\t\t\tappend_var ASFLAGS \"-mfloat-abi=softfp\"\n\t\t\t_backend=\"openpandora\"\n\t\t\t_build_hq_scalers=yes\n\t\t\t_build_edge_scalers=no\n\t\t\t_vkeybd=no\n\t\t\t_mt32emu=no\n\t\t\t_seq_midi=no\n\t\t\t_port_mk=\"backends/platform/openpandora/op-bundle.mk\"\n\t\t\t;;\n\t\tppc-amigaos)\n\t\t\t# PPC Linker requires this to fix relocation errors\n\t\t\tappend_var CXXFLAGS \"-mlongcall\"\n\n\t\t\t_port_mk=\"backends/platform/sdl/amigaos/amigaos.mk\"\n\t\t\t;;\n\t\tppc-morphos)\n\t\t\t# PPC Linker requires this to fix relocation errors\n\t\t\tappend_var CXXFLAGS \"-mlongcall\"\n\n\t\t\t_port_mk=\"backends/platform/sdl/morphos/morphos.mk\"\n\t\t\t;;\n\t\tps3)\n\t\t\t_timidity=no\n\t\t\t_vkeybd=yes\n\t\t\t_port_mk=\"backends/platform/sdl/ps3/ps3.mk\"\n\t\t\t;;\n\t\tpsp2)\n\t\t\t_backend=\"psp2\"\n\t\t\t_vkeybd=yes\n\t\t\t_build_scalers=yes\n\t\t\t_build_hq_scalers=no\n\t\t\t_mt32emu=no\n\t\t\t_timidity=no\n\t\t\t_port_mk=\"backends/platform/sdl/psp2/psp2.mk\"\n\t\t\t#the -gcc- variants allow link time optimization\n\t\t\t_ar=\"$_host_alias-gcc-ar cr\"\n\t\t\t_ranlib=$_host_alias-gcc-ranlib\n\t\t\t;;\n\t\tpsp)\n\t\t\t_backend=\"psp\"\n\t\t\t_build_scalers=no\n\t\t\t_build_aspect=no\n\t\t\t_mt32emu=no\n\t\t\t_port_mk=\"backends/platform/psp/psp.mk\"\n\t\t\t_pkgconfig=\"${PSPDEV}/bin/psp-pkg-config\"\n\t\t\t;;\n\t\ttvos)\n\t\t\tadd_line_to_config_mk 'IPHONE = 1'\n\t\t\tappend_var DEFINES \"-DIPHONE -DIPHONE_IOS7\"\n\t\t\t_backend=\"ios7\"\n\t\t\t_seq_midi=no\n\t\t\t_timidity=no\n\t\t\t;;\n\t\tsailfish)\n                        append_var DEFINES \"-DSAILFISH\"\n                        append_var LDFLAGS \"-Wl,-rpath,/usr/share/org.scummvm.scummvm/lib\"\n                        _vkeybd=yes\n                        HOSTEXEPRE=org.scummvm.\n\t\t\t_backend=\"sailfish\"\n                        add_line_to_config_mk 'SAILFISH = 1'\n                        ;;\n\t\tsamsungtv)\n\t\t\tappend_var DEFINES \"-DSAMSUNGTV\"\n\t\t\tappend_var DEFINES \"-DDISABLE_COMMAND_LINE\"\n\t\t\tappend_var ASFLAGS \"-mfpu=vfp\"\n\t\t\tHOSTEXEEXT=\".so\"\n\t\t\t_backend=\"samsungtv\"\n\t\t\t_mt32emu=no\n\t\t\t_vkeybd=yes\n\t\t\t;;\n\t\tswitch)\n\t\t\t_backend=\"switch\"\n\t\t\t# Switch port crashes when switching between SDL2 and OpenGL\n\t\t\t# graphics. But OpenGL works when it is enabled from the start.\n\t\t\t# This might be related to a known crash on OpenGL de-init due\n\t\t\t# to the OpenGL implementation on this platform.\n\t\t\t_vkeybd=yes\n\t\t\t_seq_midi=no\n\t\t\t_timidity=no\n\t\t\t_port_mk=\"backends/platform/sdl/switch/switch.mk\"\n\t\t\t;;\n\t\twii)\n\t\t\t_backend=\"wii\"\n\t\t\t_build_scalers=no\n\t\t\t_build_aspect=no\n\t\t\t_tinygl=no\n\t\t\t_nuked_opl=no\n\t\t\t_mt32emu=no\n\t\t\t_vkeybd=yes\n\t\t\t_port_mk=\"backends/platform/wii/wii.mk\"\n\t\t\tadd_line_to_config_mk 'GAMECUBE = 0'\n\t\t\tadd_line_to_config_h '#define AUDIO_REVERSE_STEREO'\n\t\t\tadd_line_to_config_h \"#define DEBUG_WII_USBGECKO\"\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_MEMSTATS */\"\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_GDB */\"\n\t\t\tadd_line_to_config_h \"/* #define DEBUG_WII_GDB_NETWORK */\"\n\t\t\tadd_line_to_config_h \"#define USE_WII_DI\"\n\t\t\tadd_line_to_config_h \"#define USE_WII_SMB\"\n\t\t\tadd_line_to_config_h \"#define USE_WII_KBD\"\n\t\t\t;;\n\t\t*)\n\t\t\techo \"WARNING: Unknown target, continuing with auto-detected values\"\n\t\t\t;;\n\tesac\nfi\n\n#\n# Backend related stuff\n#\ncase $_backend in\n\t3ds)\n\t\t;;\n\tandroid)\n\t\tappend_var DEFINES \"-DREDUCE_MEMORY_USAGE\"\n\t\tappend_var DEFINES \"-DNONSTANDARD_PORT\"\n\t\tappend_var DEFINES \"-DANDROID_BACKEND\"\n\t\tappend_var INCLUDES '-I$(srcdir)/backends/platform/'$_backend\n\t\tappend_var CXXFLAGS \"-Wa,--noexecstack\"\n\t\tappend_var LDFLAGS \"-Wl,-z,noexecstack\"\n\t\t# Newer Android devices will have 16K pages so we must be aligned\n\t\tappend_var LDFLAGS \"-Wl,-z,max-page-size=16384\"\n\t\t# removed the following directive - was causing compilation issues when not also explicitly using --disable-mt32emu\n\t\t# append_var INCLUDES \"-isystem $ANDROID_NDK/sources/cxx-stl/system/include\"\n\t\t_sdl=no\n\t\tif test \"$_host\" = ouya; then\n\t\t\t_sdlnet=no\n\t\tfi\n\t\t;;\n\tatari)\n\t\tdefine_in_config_if_yes yes \"ATARI\"\n\t\tappend_var DEFINES \"-DDISABLE_LAUNCHERDISPLAY_GRID\"\n\t\tappend_var DEFINES \"-DDISABLE_NES_APU\"\n\t\t#append_var DEFINES \"-DDISABLE_DOSBOX_OPL\"\n\t\tappend_var LIBS \"-lgem\"\n\t\t_sid_audio=no\n\t\t;;\n\tdc)\n\t\tappend_var INCLUDES '-I$(srcdir)/backends/platform/dc'\n\t\tappend_var INCLUDES \"-isystem $RONINDIR/include\"\n\t\tappend_var LDFLAGS \"-Wl,-Ttext,0x8c010000\"\n\t\tappend_var LDFLAGS \"-nostartfiles\"\n\t\tappend_var LDFLAGS \"-L$RONINDIR/lib\"\n\t\tappend_var LDFLAGS \"$RONINDIR/lib/crt0.o\"\n\t\t# Enable serial debugging output only when --enable-debug is passed\n\t\tif test \"$_release_build\" = yes -o \"$_debug_build\" != yes; then\n\t\t\tappend_var LIBS \"-lronin-noserial -lm\"\n\t\t\tappend_var LDFLAGS \"-lronin-noserial -lm\"\n\t\telse\n\t\t\tappend_var LIBS \"-lronin -lm\"\n\t\t\tappend_var LDFLAGS \"-lronin -lm\"\n\t\tfi\n\t\t;;\n\tds)\n\t\tappend_var INCLUDES '-I$(srcdir)/backends/platform/ds'\n\t\t;;\n\tios7)\n\t\tappend_var LIBS \"-lobjc -framework UIKit -framework CoreGraphics -framework OpenGLES\"\n\t\tappend_var LIBS \"-framework QuartzCore -framework CoreFoundation -framework Foundation\"\n\t\tappend_var LIBS \"-framework AudioToolbox -framework CoreAudio -framework SystemConfiguration \"\n\t\tappend_var LIBS \"-framework GameController\"\n\t\tif test \"$_host\" = 'tvos'; then\n\t\t\tappend_var LDFLAGS \"-mtvos-version-min=9 -arch arm64\"\n\t\t\tappend_var CFLAGS \"-mtvos-version-min=9 -arch arm64\"\n\t\t\tappend_var CXXFLAGS \"-mtvos-version-min=9 -arch arm64\"\n\t\telif test \"$_host_cpu\" = 'aarch64' ; then\n\t\t\tappend_var LDFLAGS \"-miphoneos-version-min=7.1 -arch arm64\"\n\t\t\tappend_var CFLAGS \"-miphoneos-version-min=7.1 -arch arm64\"\n\t\t\tappend_var CXXFLAGS \"-miphoneos-version-min=7.1 -arch arm64\"\n\t\telse\n\t\t\tappend_var LDFLAGS \"-miphoneos-version-min=7.1 -arch armv7\"\n\t\t\tappend_var CFLAGS \"-miphoneos-version-min=7.1 -arch armv7\"\n\t\t\tappend_var CXXFLAGS \"-miphoneos-version-min=7.1 -arch armv7\"\n\t\tfi\n\t\tif test -n \"$SDKROOT\"; then\n\t\t\tappend_var LDFLAGS \"-mlinker-version=134.9 -B/usr/local/bin/arm-apple-darwin11-\"\n\t\t\tappend_var CFLAGS \"-isysroot $SDKROOT -F$SDKROOT/System/Library/Frameworks\"\n\t\t\tappend_var CXXFLAGS \"-isysroot $SDKROOT -I$SDKROOT/usr/include/c++/4.2.1 -F$SDKROOT/System/Library/Frameworks\"\n\t\tfi\n\t\t;;\n\tkolibrios)\n\t\t_sdl=yes\n\t\tappend_var MODULES \"backends/platform/sdl\"\n\t\t;;\n\tmaemo)\n\t\tappend_var DEFINES \"-DMAEMO\"\n\t\tappend_var LIBS \"-lX11\"\n\t\t_sdlconfig=sdl-config\n\t\t_sdl=auto\n\t\t;;\n\tn64)\n\t\tappend_var INCLUDES '-I$(N64SDK)/include'\n\t\tappend_var INCLUDES '-I$(N64SDK)/mips64/include'\n\t\tappend_var INCLUDES '-I$(N64SDK)/hkz-libn64'\n\t\tappend_var INCLUDES '-I$(srcdir)/backends/platform/n64'\n\t\tappend_var LIBS \"-lpakfs -lframfs -ln64 -ln64utils -lromfs\"\n\t\tappend_var LIBS \"-lm -lstdc++ -lz\"\n\t\t;;\n\tnull)\n\t\tappend_var DEFINES \"-DUSE_NULL_DRIVER\"\n\t\t_text_console=yes\n\t\t;;\n\topendingux | miyoo | miyoomini | sailfish)\n\t\t_sdlconfig=sdl-config\n\t\t_sdl=auto\n\t\tappend_var MODULES \"backends/platform/sdl\"\n\t\t;;\n\topenpandora)\n\t\tappend_var DEFINES \"-DOPENPANDORA\"\n\t\tappend_var DEFINES \"-DREDUCE_MEMORY_USAGE\"\n\t\tif test \"$_release_build\" = no; then\n\t\t\tappend_var DEFINES \"-DOP_DEBUG\"\n\t\tfi\n\t\t_sdl=auto\n\t\t;;\n\tpsp)\n\t\tappend_var DEFINES \"-D__PSP__\"\n\t\tappend_var DEFINES \"-DDISABLE_COMMAND_LINE\"\n\t\tappend_var DEFINES \"-DDISABLE_DOSBOX_OPL\"\n\t\tappend_var LIBS \"-lpng\"\n\t\tappend_var LIBS \"-Wl,-Map,mapfile.txt\"\n\t\t_nuked_opl=no\n\t\t;;\n\tpsp2)\n\t\tappend_var LIBS \"-lSDL2 -lSceCommonDialog_stub\"\n\t\tappend_var LIBS \"-lSceSysmodule_stub -lSceDisplay_stub -lSceGxm_stub\"\n\t\tappend_var LIBS \"-lSceAudio_stub -lSceAudioIn_stub -lSceCtrl_stub -lScePower_stub\"\n\t\tappend_var LIBS \"-lSceNet_stub -lSceNetCtl_stub\"\n\t\tappend_var LIBS \"-lSceAppMgr_stub -lSceAppUtil_stub -lScePgf_stub\"\n\t\tappend_var LIBS \"-lSceTouch_stub -lSceHid_stub -lSceMotion_stub\"\n\t\t_sdl=yes\n\t\t_sdlversion=2.0.0\n\t\tappend_var MODULES \"backends/platform/sdl\"\n\t\tappend_var INCLUDES \"-I$VITASDK/arm-vita-eabi/include/SDL2\"\n\t\t;;\n\tsamsungtv)\n\t\tappend_var DEFINES \"-DSAMSUNGTV\"\n\t\tappend_var LDFLAGS \"-shared\"\n\t\tappend_var LDFLAGS \"-fpic\"\n\t\t_sdl=auto\n\t\t;;\n\tsdl)\n\t\t_sdl=auto\n\t\t;;\n\tswitch)\n\t\t_sdl=auto\n\t\tappend_var MODULES \"backends/platform/sdl\"\n\t\t;;\n\twii)\n\t\tappend_var DEFINES \"-D__WII__\"\n\t\tappend_var DEFINES \"-DGEKKO\"\n\t\tcase $_host_os in\n\t\tgamecube)\n\t\t\tappend_var LIBS \"-lgxflux -liso9660 -lfat -logc -ldb\"\n\t\t\t;;\n\t\t*)\n\t\t\tappend_var LIBS \"-lgxflux -ldi -liso9660 -ltinysmb -lfat -lwiiuse -lbte -logc -lwiikeyboard -ldb\"\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\techo \"support for $_backend backend not implemented in configure script yet\"\n\t\texit 1\n\t\t;;\nesac\n\nappend_var MODULES \"backends/platform/$_backend\"\n\n#\n# Check if specific components are not used by enabled engines and disable them\n#\necho \"Checking for unused components...\"\nawk -f \"$_srcdir/engines.awk\" -v _pass=pass1 < /dev/null\n\n. ./engines.awk.out\n\nfor f in $_features_disabled; do\n    set_var $(get_var _feature_${f}_settings) \"no\"\ndone\n\n# Special cases for pseudo-components\nif test \"$_midi\" = no ; then\n\t_mt32emu=no\n\t_fluidsynth=no\n\t_fluidlite=no\n\t_timidity=no\n\t_sonivox=no\n\n\techo \"   Disabling mt32emu, fluidsynth, fluidlite, timidity and sonivox because MIDI is unused by enabled engines\"\nfi\n\nif test \"$_universaltracker\" = no ; then\n\t_libmikmod=no\n\t_libopenmpt=no\n\n\techo \"   Disabling MikMod and OpenMPT because Universal Tracker playback is unused by enabled engines\"\nfi\n\nrm -f engines.awk.out\n\necho \"...check complete\"\n\n#\n# Check for pkg-config\n#\nechocheck \"pkg-config\"\n_pkg_config=no\ncommand -v $_pkgconfig >/dev/null 2>&1 && _pkg_config=yes\necho \"$_pkg_config\"\n\nif test \"$_pkg_config\" = yes && test -n \"$_host\" && test -z \"$PKG_CONFIG_LIBDIR\" && test \"$_pkgconfig\" = pkg-config; then\n\techo \"WARNING: When cross-compiling PKG_CONFIG_LIBDIR must be set to the location of the .pc files for the target\"\nfi\n\n#\n# Setup SDL specifics for SDL based backends\n#\nif test \"$_sdl\" = auto ; then\n\tfind_sdlconfig\n\tappend_var SDL_CFLAGS \"`$_sdlconfig --cflags | sed 's/[[:space:]]*-Dmain=SDL_main//g'`\"\n\tif test \"$_static_build\" = yes ; then\n\t\tappend_var SDL_LIBS \"`$_sdlconfig --static-libs`\"\n\telse\n\t\tappend_var SDL_LIBS \"`$_sdlconfig --libs`\"\n\tfi\n\t_sdlversion=`$_sdlconfig --version`\n\n\techocheck \"SDL\"\n\t_sdl=no\n\tcat > $TMPC << EOF\n#include \"SDL.h\"\nint main(int argc, char *argv[]) { SDL_Init(0); return 0; }\nEOF\n\tcc_check $LIBS $SDL_LIBS $INCLUDES $SDL_CFLAGS && _sdl=yes\n\techo \"$_sdl\"\n\tif test \"$_sdl\" = no ; then\n\t\texit 1\n\tfi\nfi\n\n_sdlMajorVersionNumber=0\nif test \"$_sdl\" = yes ; then\n\tappend_var DEFINES \"-DSDL_BACKEND\"\n\tadd_line_to_config_mk \"SDL_BACKEND = 1\"\n\tappend_var INCLUDES \"$SDL_CFLAGS\"\n\tappend_var LIBS \"$SDL_LIBS\"\n\tcase $_sdlversion in\n\t\t2.*.*)\n\t\t\tappend_var DEFINES \"-DUSE_SDL2\"\n\t\t\tadd_line_to_config_mk \"USE_SDL2 = 1\"\n\t\t\t_sdlMajorVersionNumber=2\n\t\t\t;;\n\t\t1.2.*)\n\t\t\t_sdlMajorVersionNumber=1\n\t\t\t;;\n\t\t*)\n\t\t\techo \"support for SDL $_sdlversion not implemented yet\"\n\t\t\texit 1\n\t\t\t;;\n\tesac\nfi\n\n#\n# Some platforms (eg. Android, iOS) may use an edited version\n# of SDL-net or SDL2-net that does not require SDL or SDL2 respectively\n#\nif test \"$_sdlnet\" = auto ; then\n\t# If SDL2 was detected, then test for SDL2_net exclusively\n\t# If SDL was detected, then test for SDL_net exclusively\n\t# If neither SDL nor SDL2 detected, then test for both (SDL2_net success takes priority)\n\tset_var SDL2_NET_LIBS   \"$SDL_NET_LIBS\"\n\tset_var SDL2_NET_CFLAGS \"$SDL_NET_CFLAGS\"\n\tset_var SDL1_NET_LIBS   \"$SDL_NET_LIBS\"\n\tset_var SDL1_NET_CFLAGS \"$SDL_NET_CFLAGS\"\n\n\tif test \"$_sdl\" = no || test \"$_sdlMajorVersionNumber\" = 2; then\n\t\tif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists SDL2_net; then\n\t\t\tappend_var SDL2_NET_LIBS \"`$_pkgconfig --libs SDL2_net`\"\n\t\t\tappend_var SDL2_NET_CFLAGS \"`$_pkgconfig --cflags SDL2_net | sed 's/[[:space:]]*-Dmain=SDL_main//g'`\"\n\t\telse\n\t\t\tappend_var SDL2_NET_LIBS \"-lSDL2_net\"\n\t\tfi\n\tfi\n\n\tif test \"$_sdl\" = no || test \"$_sdlMajorVersionNumber\" = 1; then\n\t\tif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists SDL_net; then\n\t\t\tappend_var SDL1_NET_LIBS \"`$_pkgconfig --libs SDL_net`\"\n\t\t\tappend_var SDL1_NET_CFLAGS \"`$_pkgconfig --cflags SDL_net | sed 's/[[:space:]]*-Dmain=SDL_main//g'`\"\n\t\telse\n\t\t\tappend_var SDL1_NET_LIBS \"-lSDL_net\"\n\t\tfi\n\tfi\n\n\t# Check for SDL_Net\n\techocheck \"SDL_Net\"\n\t_sdlnet=no\n\tcat > $TMPC << EOF\n#include \"SDL_net.h\"\nint main(int argc, char *argv[]) { SDLNet_Init(); return 0; }\nEOF\n\n\tcc_check $SDL2_NET_LIBS $LIBS $INCLUDES $SDL2_NET_CFLAGS && _sdlnet=yes\n\tif test \"$_sdlnet\" = yes ; then\n\t\tset_var SDL_NET_LIBS   \"$SDL2_NET_LIBS\"\n\t\tset_var SDL_NET_CFLAGS \"$SDL2_NET_CFLAGS\"\n\t\tadd_line_to_config_mk \"SDL_NET_MAJOR = 2\"\n\telse\n\t\tcat > $TMPC << EOF\n#include \"SDL_net.h\"\nint main(int argc, char *argv[]) { SDLNet_Init(); return 0; }\nEOF\n\t\tcc_check $SDL1_NET_LIBS $LIBS $INCLUDES $SDL1_NET_CFLAGS && _sdlnet=yes\n\t\tif test \"$_sdlnet\" = yes ; then\n\t\t\tset_var SDL_NET_LIBS   \"$SDL1_NET_LIBS\"\n\t\t\tset_var SDL_NET_CFLAGS \"$SDL1_NET_CFLAGS\"\n\t\t\tadd_line_to_config_mk \"SDL_NET_MAJOR = 1\"\n\t\tfi\n\tfi\n\n\tif test \"$_sdlnet\" = yes ; then\n\t\t# Some platforms require SDL to be after SDL_Net, thus we prepend var\n\t\tprepend_var LIBS \"$SDL_NET_LIBS\"\n\t\tappend_var INCLUDES \"$SDL_NET_CFLAGS\"\n\tfi\n\tdefine_in_config_if_no \"$_sdl\" 'WITHOUT_SDL'\n\tdefine_in_config_if_yes \"$_sdlnet\" 'USE_SDL_NET'\n\techo \"$_sdlnet\"\nfi\n\n#\n# Check for stuff required for ENet to compile\n#\nif test \"$_enet\" = yes ; then\n\tcase \"$_host_os\" in\n\t\tmingw*)\n\t\t\t# Skip for mingw.\n\t\t\t;;\n\t\t*)\n\t\t\techo \"Checks for ENet...\"\n\n\t\t\t\techo_n \"   \"\n\t\t\t\techocheck \"sendmsg\"\n\t\t\t\tcat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\nint main(void) { return sendmsg(0, 0, 0); }\nEOF\n\t\t\t\tcc_check\n\t\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\t\techo \"yes\"\n\t\t\t\telse\n\t\t\t\t\techo \"no, required for ENet.  Disabling.\"\n\t\t\t\t\t_enet=no\n\t\t\t\tfi\n\n\t\t\t\techo_n \"   \"\n\t\t\t\techocheck \"recvmsg\"\n\t\t\t\tcat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\nint main(void) { return recvmsg(0, 0, 0); }\nEOF\n\t\t\t\tcc_check\n\t\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\t\techo \"yes\"\n\t\t\t\telse\n\t\t\t\t\techo \"no, required for ENet.  Disabling.\"\n\t\t\t\t\t_enet=no\n\t\t\t\tfi\n\t\t\t;;\n\tesac\nfi\n\n#\n# Check and set additional stuff needed for ENet.\n#\nif test \"$_enet\" = yes ; then\n\tcase \"$_host_os\" in\n\t\tmingw*)\n\t\t\t# Additional libraries.\n\t\t\tappend_var LIBS \"-lwinmm -lws2_32\"\n\t\t\t;;\n\n\t\t*)\n\t\t\t# Check for features and define.\n\t\t\techo \"Optional checks for ENet...\"\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"getaddrinfo\"\n\t\t\tcat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\nint main(void) { return getaddrinfo(0, 0, 0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_GETADDRINFO\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"getnameinfo\"\n\t\t\tcat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\nint main(void) { return getnameinfo(0, 0, 0, 0, 0, 0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_GETNAMEINFO\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"gethostbyaddr_r\"\n\t\t\tcat > $TMPC << EOF\n#include <netdb.h>\nint main(void) { return gethostbyaddr_r(0, 0, 0, 0, 0, 0, 0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_GETHOSTBYADDR_R\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"gethostbyname_r\"\n\t\t\tcat > $TMPC << EOF\n#include <netdb.h>\nint main(void) { return gethostbyname_r(0, 0, 0, 0, 0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_GETHOSTBYNAME_R\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"poll\"\n\t\t\tcat > $TMPC << EOF\n#include <poll.h>\nint main(void) { return poll(0, 0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_POLL\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"fcntl\"\n\t\t\tcat > $TMPC << EOF\n#include <unistd.h>\n#include <fcntl.h>\nint main(void) { return fcntl(0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_FCNTL\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"inet_pton\"\n\t\t\tcat > $TMPC << EOF\n#include <sys/socket.h>\n#include <arpa/inet.h>\nint main(void) { return inet_pton(0, 0, 0); }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_INET_PTON\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"inet_ntop\"\n\t\t\tcat > $TMPC << EOF\n#include <sys/socket.h>\n#include <arpa/inet.h>\nint main(void) { inet_ntop(0, 0, 0, 0); return 0; }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_INET_NTOP\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"msghdr.msg_flags\"\n\t\t\tcat > $TMPC << EOF\n#include <sys/socket.h>\nstruct msghdr msg;\nint main(void) { return msg.msg_flags; }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_MSGHDR_FLAGS\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\n\t\t\techo_n \"   \"\n\t\t\techocheck \"socklen_t\"\n\t\t\tcat > $TMPC << EOF\n#include <sys/socket.h>\nint main(void) { socklen_t len = 0; return 0; }\nEOF\n\t\t\tcc_check\n\t\t\tif test \"$TMPR\" -eq 0; then\n\t\t\t\tappend_var DEFINES \"-DHAS_SOCKLEN_T\"\n\t\t\t\techo \"yes\"\n\t\t\telse\n\t\t\t\techo \"no\"\n\t\t\tfi\n\t\t\t;;\n\tesac\nfi\n\n#\n# Enable 16bit support only for backends which support it\n#\ncase $_backend in\n\t3ds | android | dc | ds | ios7 | kolibrios | maemo | null | opendingux | miyoomini | miyoo | openpandora | psp | psp2 | sailfish | samsungtv | sdl | switch | wii)\n\t\tif test \"$_16bit\" = auto ; then\n\t\t\t_16bit=yes\n\t\telse\n\t\t\t_16bit=no\n\t\tfi\n\t\t;;\n\t*)\n\t\t_16bit=no\n\t\t;;\nesac\n\n#\n# Enable High resolution engines (>320x240) support only for backends which support it\n#\ncase $_host in\n\tds)\n\t\tif test \"$_highres\" = yes ; then\n\t\t\t_highres=yes\n\t\telse\n\t\t\t_highres=no\n\t\tfi\n\t\t;;\n\t*)\n\t\tif test \"$_highres\" = no ; then\n\t\t\t_highres=no\n\t\telse\n\t\t\t_highres=yes\n\t\tfi\n\t\t;;\nesac\n\n#\n# Enable Event Recorder only for backends that support it\n#\ncase $_backend in\n\tsdl)\n\t\t;;\n\t*)\n\t\t_eventrec=no\n\t\t;;\nesac\n\n#\n# Disable savegame timestamp support for backends which don't have a reliable real time clock\n#\ncase $_backend in\n\tn64)\n\t\tif test \"$_savegame_timestamp\" = auto ; then\n\t\t\t_savegame_timestamp=no\n\t\telse\n\t\t\t_savegame_timestamp=yes\n\t\tfi\n\t\t;;\n\t*)\n\t\tif test \"$_savegame_timestamp\" = auto ; then\n\t\t\t_savegame_timestamp=yes\n\t\telse\n\t\t\t_savegame_timestamp=no\n\t\tfi\n\t\t;;\nesac\n\n#\n# Determine whether host is POSIX compliant, or at least POSIX\n# compatible enough to support our POSIX code (including dlsym(),\n# mkdir() and some other APIs).\n#\n# TODO: Instead of basing this on the host name, we should really base\n# this on the presence of features (such as the dlsym and mkdir APIs).\n#\necho_n \"Checking if host is POSIX compliant... \"\ncase $_host_os in\n\tamigaos* | dreamcast | ds | gamecube | kolibrios | mingw* | morphos | n64 | ps3 | psp2 | psp | riscos | wii)\n\t\t_posix=no\n\t\t;;\n\t3ds | android | beos* | bsd* | cygwin* | darwin* | dragonfly* | freebsd* | gnu* | haiku* | hpux* | iphoneos | irix*| k*bsd*-gnu* | linux* | maemo | mint* | netbsd* | openbsd* | redox* | serenity* | solaris* | sunos* | switch | uclinux*)\n\t\t_posix=yes\n\t\t;;\n\tos2-emx*)\n\t\t_posix=yes\t# FIXME: Really???\n\t\t;;\n\temscripten)\n\t\t_posix=yes\n\t\t;;\n\t*)\n\t\t# given this is a shell script, we might assume some type of posix.\n\t\t# However, the host system might be a totally different one, so\n\t\t# we can assume nothing about it.\n\t\t# Indeed, as mentioned further above, we really should test for the\n\t\t# presences of relevant APIs on the host anyway...\n\t\t_posix=no\n\t\t;;\nesac\necho $_posix\n\nif test \"$_posix\" = yes ; then\n\tappend_var DEFINES \"-DPOSIX\"\n\tadd_line_to_config_mk 'POSIX = 1'\n\n\techo_n \"Checking if posix_spawn is supported... \"\n\t\tcat > $TMPC << EOF\n#include <spawn.h>\nint main(void) { return posix_spawn(0, 0, 0, 0, 0, 0); }\nEOF\n\tcc_check && test \"$_host_os\" != \"emscripten\" && _has_posix_spawn=yes\n\techo $_has_posix_spawn\n\tif test \"$_has_posix_spawn\" = yes ; then\n\t\tappend_var DEFINES \"-DHAS_POSIX_SPAWN\"\n\tfi\nfi\n\n#\n# Check for 64-bit file offset compatibility\n#\n# This is currently only used by StdioStream. If nothing is found,\n# you'll be limited to <2GB files, which still covers the vast majority\n# of supported games.\n#\ncase $_host_os in\n\tmingw*)\n\t\t# StdioStream just uses _ftelli64\n\t\t;;\n\t*)\n\t\techo_n \"Checking if fseeko with 64-bit off_t is supported... \"\n\t\tcat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/types.h> /* off_t on legacy systems */\nint main() {\n\tstatic int test_array[1 - 2 * !(sizeof(off_t) >= 8)];\n\tfseeko(stdin, 0, SEEK_SET);\n\ttest_array[0] = 0;\n\treturn 0;\n}\nEOF\n\t\tcc_check_no_clean && _has_fseeko_offt_64=yes\n\t\t# Good, there's fseeko with a 64-bit off_t by default\n\t\tif test \"$_has_fseeko_offt_64\" = yes ; then\n\t\t\techo yes\n\t\t\tappend_var DEFINES \"-DHAS_FSEEKO_OFFT_64\"\n\t\telse\n\t\t\t# Otherwise, when not cross-compiling, try with LFS_CFLAGS\n\t\t\tif test -z \"$_host\"; then\n\t\t\t\tTMPFLAGS=`getconf LFS_CFLAGS 2>/dev/null`\n\t\t\t\tif test $? -eq 0 && test ! -z \"$TMPFLAGS\" && test \"$TMPFLAGS\" != undefined ; then\n\t\t\t\t\tcc_check_no_clean $TMPFLAGS && _has_fseeko_offt_64=yes\n\t\t\t\t\tif test \"$_has_fseeko_offt_64\" = yes ; then\n\t\t\t\t\t\techo \"yes (adding $TMPFLAGS)\"\n\t\t\t\t\t\tappend_var DEFINES \"-DHAS_FSEEKO_OFFT_64\"\n\t\t\t\t\t\tappend_var CXXFLAGS \"$TMPFLAGS\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\t# Otherwise, try the usual magical suspects\n\t\t\tif test \"$_has_fseeko_offt_64\" = no ; then\n\t\t\t\t# note: -D__LARGE64_FILES is another option, but it may be broken on\n\t\t\t\t# some platforms, so add it to your platform defines instead, if it\n\t\t\t\t# requires it and you've checked that the result works.\n\t\t\t\tfor largeflag in \"-D_FILE_OFFSET_BITS=64\" \"-D_LARGE_FILES\" \"-D_LARGEFILE_SOURCE\" ; do\n\t\t\t\t\tcc_check_no_clean $largeflag && _has_fseeko_offt_64=yes\n\t\t\t\t\tif test \"$_has_fseeko_offt_64\" = yes ; then\n\t\t\t\t\t\techo \"yes (adding $largeflag)\"\n\t\t\t\t\t\tappend_var DEFINES \"-DHAS_FSEEKO_OFFT_64\"\n\t\t\t\t\t\tappend_var CXXFLAGS \"$largeflag\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\n\t\t\t# Otherwise, fseeko64 is your last chance\n\t\t\tif test \"$_has_fseeko_offt_64\" = no ; then\n\t\t\t\techo no\n\t\t\t\techo_n \"Checking if fseeko64 is supported... \"\n\t\t\t\tcat > $TMPC << EOF\n#include <stdio.h>\nint main() { fseeko64(stdin, 0, SEEK_SET); return 0; }\nEOF\n\t\t\t\tcc_check_no_clean -D_LARGEFILE64_SOURCE && _has_fseeko64=yes\n\t\t\t\techo $_has_fseeko64\n\t\t\t\tif test \"$_has_fseeko64\" = yes ; then\n\t\t\t\t\tappend_var DEFINES \"-DHAS_FSEEKO64\"\n\t\t\t\t\tappend_var CXXFLAGS \"-D_LARGEFILE64_SOURCE\"\n\n\t\t\t\t\t# On some platforms, fopen64 is required in addition to fseeko64/ftello64\n\t\t\t\t\techo_n \"Checking if fopen64 is supported... \"\n\t\t\t\t\tcat > $TMPC << EOF\n#include <stdio.h>\nint main() { FILE *f = fopen64(\"file\", \"rb\"); return (f != NULL); }\nEOF\n\t\t\t\t\tcc_check_no_clean && _has_fopen64=yes\n\t\t\t\t\techo $_has_fopen64\n\t\t\t\t\tif test \"$_has_fopen64\" = yes ; then\n\t\t\t\t\t\tappend_var DEFINES \"-DHAS_FOPEN64\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\t\tcc_check_clean\n\t\t;;\nesac\n\n#\n# Check whether to enable a verbose build\n#\necho_n \"Checking whether to have a verbose build... \"\necho \"$_verbose_build\"\nadd_to_config_mk_if_yes \"$_verbose_build\" 'VERBOSE_BUILD = 1'\n\n\n#\n# If a specific optimization level was requested, enable optimizations\n#\nif test -n \"$_optimization_level\" ; then\n\t# Ports will specify an optimization level and expect that to be enabled\n\tif test \"$_optimizations\" != no ; then\n\t\t_optimizations=yes\n\tfi\nelse\n\t_optimization_level=$_default_optimization_level\nfi\n\n#\n# Check whether to enable optimizations\n#\nif test \"$_optimizations\" = yes ; then\n\t# Enable optimizations\n\tappend_var CXXFLAGS \"$_optimization_level\"\n\n\t# Optimizations make it possible to use -Wuninitialized, so let's do that\n\t# (but only when the compiler has a reliable -Wuninitialized, see the\n\t# other _cxx_major/_cxx_minor checks above)\n\tif test \"$have_gcc\" = yes && test $_cxx_major -eq 4 && test $_cxx_minor -le 7; then\n\t\t: nothing\n\telse\n\t\tappend_var CXXFLAGS \"-Wuninitialized\"\n\tfi\nfi\n\n#\n# Check whether plugin support is requested and possible\n#\necho_n \"Checking whether building plugins was requested... \"\necho \"$_dynamic_modules\"\n_mak_plugins=\n\nif test \"$_dynamic_modules\" = yes ; then\n\techo_n \"Checking whether building plugins is supported... \"\n\tcase $_host_os in\n\t3ds)\n\t\t_elf_loader=yes\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n_mak_plugins='\nPLUGIN_LDFLAGS\t\t+= -Wl,-T$(srcdir)/backends/plugins/3ds/plugin.ld -march=armv6k -mfloat-abi=hard\n'\n\t\t;;\n\tamigaos)\n\t\t_plugin_prefix=\"\"\n\t\t_plugin_suffix=\".plugin\"\n\t\tappend_var CXXFLAGS \"-fPIC\"\n\t\tappend_var LIBS \"-use-dynld\"\n\t\tappend_var LIBS \"-lauto\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS =\nPLUGIN_LDFLAGS  += -shared\nPRE_OBJS_FLAGS  := -Wl,-export-dynamic -Wl,-whole-archive\nPOST_OBJS_FLAGS := -Wl,-no-whole-archive\n'\n\t\t;;\n\tandroid)\n\t\t_plugin_prefix=\"lib\"\n\t\t_plugin_suffix=\".so\"\n\t\tappend_var CXXFLAGS \"-fpic\"\n\t\tappend_var LIBS \"-ldl\"\n# Work around an Android 2.0+ run-time linker bug:\n# The linker doesn't actually look in previously\n# loaded libraries when trying to resolve symbols -\n# effectively turning all dlopen(RTLD_GLOBAL) calls\n# into dlopen(RTLD_LOCAL). It *does* look in\n# DT_NEEDED libraries, so the workaround is to add an\n# (otherwise unnecessary) dependency from plugins back\n# to the main libscummvm.so.\n_mak_plugins='\nPLUGIN_EXTRA_DEPS = libscummvm.so\nPLUGIN_LDFLAGS  += $(LDFLAGS) -L. -lscummvm\nPRE_OBJS_FLAGS  := -Wl,-export-dynamic -Wl,-whole-archive\nPOST_OBJS_FLAGS := -Wl,-no-whole-archive\n'\n\t\t;;\n\tdarwin*)\n\t\t_plugin_prefix=\"\"\n\t\t_plugin_suffix=\".plugin\"\n\t\tappend_var LIBS \"-ldl\"\n\t\tappend_var _strip \"-x\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS = $(EXECUTABLE)\nPLUGIN_LDFLAGS  += -bundle -bundle_loader $(EXECUTABLE) -exported_symbols_list \"$(srcdir)/plugin.exp\"\nPRE_OBJS_FLAGS  := -all_load\nPOST_OBJS_FLAGS :=\n'\n\t\t;;\n\tdreamcast)\n\t\t_plugin_prefix=\"\"\n\t\t_plugin_suffix=\".plg\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS\t= $(abspath $(srcdir)/backends/platform/dc/plugin.x $(srcdir)/backends/platform/dc/plugin.syms) $(EXECUTABLE) backends/platform/dc/plugin_head.o\nPLUGIN_LDFLAGS\t\t+= -ml -m4-single-only -nostartfiles -Wl,-q,-T$(srcdir)/backends/platform/dc/plugin.x,--just-symbols,$(EXECUTABLE),--retain-symbols-file,$(srcdir)/backends/platform/dc/plugin.syms backends/platform/dc/plugin_head.o\nPRE_OBJS_FLAGS\t\t:= -Wl,--whole-archive\nPOST_OBJS_FLAGS\t\t:= -Wl,--no-whole-archive\n'\n\t\t;;\n\tds)\n\t\t_elf_loader=yes\n\t\tappend_var DEFINES \"-DELF_LOADER_CXA_ATEXIT\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n\t\tappend_var DEFINES \"-DELF_NO_MEM_MANAGER\"\n_mak_plugins='\nPLUGIN_LDFLAGS\t\t+= -Wl,-T$(srcdir)/backends/plugins/ds/plugin.ld -mthumb -mthumb-interwork -mfloat-abi=soft\n'\n\t\t;;\n\temscripten)\n\t\t_plugin_prefix=\"lib\"\n\t\t_plugin_suffix=\".so\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n\t\tappend_var CXXFLAGS \"-fPIC\"\n\t\tappend_var LIBS \"\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS =\nPLUGIN_LDFLAGS  += -s SIDE_MODULE=1 -s ASYNCIFY=1 -s ASYNCIFY_IMPORTS=[\"*\"] -s EXPORT_ALL=1\nPRE_OBJS_FLAGS  := -s MAIN_MODULE=1 -s EXPORT_ALL=1\nPOST_OBJS_FLAGS :=\n'\n\t\t;;\n\tfreebsd* | openbsd*)\n\t\t_plugin_prefix=\"lib\"\n\t\t_plugin_suffix=\".so\"\n\t\tappend_var CXXFLAGS \"-fPIC\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS =\nPLUGIN_LDFLAGS  += -shared\nPRE_OBJS_FLAGS  := -Wl,-export-dynamic -Wl,-whole-archive\nPOST_OBJS_FLAGS := -Wl,-no-whole-archive\n'\n\t\t;;\n\tgamecube | wii)\n\t\t_elf_loader=yes\n\t\tappend_var DEFINES \"-DELF_LOADER_CXA_ATEXIT\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n_mak_plugins='\nPLUGIN_LDFLAGS\t\t+= -Wl,-T$(srcdir)/backends/plugins/wii/plugin.ld\n'\n\t\t;;\n\tirix*)\n\t\t_plugin_prefix=\"lib\"\n\t\t_plugin_suffix=\".so\"\n\t\tappend_var CXXFLAGS \"-fpic\"\n\t\tappend_var LIBS \"-ldl\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS =\nPLUGIN_LDFLAGS  += -shared -static-libgcc\nPRE_OBJS_FLAGS  := -Wl,-export-dynamic -Wl,-whole-archive\nPOST_OBJS_FLAGS := -Wl,-no-whole-archive\n'\n\t\t;;\n\tkolibrios)\n\t\t_plugin_suffix=\".svm.dll\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS   = $(EXECUTABLE)\nPLUGIN_LDFLAGS      += -specs=$(srcdir)/backends/platform/sdl/kolibrios/kolibrios.spec -mdll -Wl,-q,--retain-symbols-file,$(srcdir)/backends/plugins/elf/plugin.syms -Wl,--enable-auto-import ./libscummvm.a\nPRE_OBJS_FLAGS      := -Wl,--whole-archive\nPOST_OBJS_FLAGS     := -Wl,--export-all-symbols -Wl,--no-whole-archive -Wl,--out-implib,./libscummvm.a\n'\n\t\t;;\n\n\tlinux* | gnu* | k*bsd*-gnu*)\n\t\t_plugin_prefix=\"lib\"\n\t\t_plugin_suffix=\".so\"\n\t\tappend_var CXXFLAGS \"-fPIC\"\n\t\tappend_var LIBS \"-ldl\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS =\nPLUGIN_LDFLAGS  += -shared\nPRE_OBJS_FLAGS  := -Wl,-export-dynamic -Wl,-whole-archive\nPOST_OBJS_FLAGS := -Wl,-no-whole-archive\n'\n\t\t;;\n\t*cygwin* | *mingw32* | mingw64)\n\t\t_plugin_prefix=\"\"\n\t\t_plugin_suffix=\".dll\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS\t= $(EXECUTABLE)\nPLUGIN_LDFLAGS\t\t+= -Wl,--enable-auto-import -shared ./libscummvm.a\nPRE_OBJS_FLAGS\t\t:= -Wl,--whole-archive\nPOST_OBJS_FLAGS\t\t:= -Wl,--export-all-symbols -Wl,--no-whole-archive -Wl,--out-implib,./libscummvm.a\n'\n\t\t;;\n\tmorphos)\n\t\t_plugin_prefix=\"lib\"\n\t\t_plugin_suffix=\".so\"\n\t\tappend_var CXXFLAGS \"-fPIC\"\n\t\tappend_var LIBS \"-use-dynld\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS =\nPLUGIN_LDFLAGS  += -shared\nPRE_OBJS_FLAGS  := -Wl,-export-dynamic -Wl,-whole-archive\nPOST_OBJS_FLAGS := -Wl,-no-whole-archive\n'\n\t\t;;\n\tpsp)\n\t\t_elf_loader=yes\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n_mak_plugins='\nLDFLAGS\t\t\t\t+= -Wl,-T$(srcdir)/backends/plugins/psp/main_prog.ld  -Wl,-zmax-page-size=128\nPLUGIN_LDFLAGS\t\t+= -Wl,-T$(srcdir)/backends/plugins/psp/plugin.ld -Wl,-zmax-page-size=128 -lstdc++\n'\n\t\t;;\n\tpsp2)\n\t\t_plugin_prefix=\"\"\n\t\t# This will create an ELF with a suprx extension which we will have to mangle when packaging\n\t\t_plugin_suffix=\".suprx\"\n\t\tappend_var CXXFLAGS \"-fuse-cxa-atexit\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS\t= $(EXECUTABLE) backends/plugins/psp2/plugin.o\nPLUGIN_OBJ_FILES    += backends/plugins/psp2/plugin.o\nPLUGIN_LDFLAGS\t\t+= -nostartfiles -nodefaultlibs backends/plugins/psp2/plugin.o -Wl,-q -Xlinker --just-symbols -Xlinker $(EXECUTABLE) -lgcc\nPRE_OBJS_FLAGS\t\t:= -Wl,--whole-archive\nPOST_OBJS_FLAGS\t\t:= -Wl,--no-whole-archive\n'\n\t\t;;\n\triscos)\n\t\t_elf_loader=yes\n\t\tappend_var DEFINES \"-DELF_LOADER_CXA_ATEXIT\"\n\t\tappend_var CXXFLAGS \"-fuse-cxa-atexit\"\n\t\tappend_var DEFINES \"-DUNCACHED_PLUGINS\"\n\t\tappend_var DEFINES \"-DELF_NO_MEM_MANAGER\"\n_mak_plugins='\nPLUGIN_EXTRA_DEPS\t+= backends/plugins/riscos/plugin.o\nPLUGIN_OBJ_FILES    += backends/plugins/riscos/plugin.o\nPLUGIN_LDFLAGS\t\t+= -static -Wl,-T$(srcdir)/backends/plugins/riscos/plugin.ld backends/plugins/riscos/plugin.o -Wl,--wrap=__rt_stkovf_split_small -Wl,--wrap=__rt_stkovf_split_big\n'\n\t\t;;\n\t*)\n\t\t_dynamic_modules=no\n\t\t_mak_plugins=\n\t\t;;\n\tesac\n\techo \"$_dynamic_modules\"\nfi\n\n#\n# Check whether integrated ELF loader support is requested\n#\ndefine_in_config_if_yes \"$_elf_loader\" 'USE_ELF_LOADER'\n\nif test \"$_elf_loader\" = yes; then\n\t_plugin_prefix=\"\"\n\t_plugin_suffix=\".plg\"\n\t_mak_plugins='\nPLUGIN_EXTRA_DEPS\t= $(EXECUTABLE)\nPLUGIN_LDFLAGS\t\t+= -nostartfiles backends/plugins/elf/version.o -Wl,-q,--retain-symbols-file,$(srcdir)/backends/plugins/elf/plugin.syms -Xlinker --just-symbols -Xlinker $(EXECUTABLE)\nPRE_OBJS_FLAGS\t\t:= -Wl,--whole-archive\nPOST_OBJS_FLAGS\t\t:= -Wl,--no-whole-archive\n'\"$_mak_plugins\"\nfi\n\n#\n# Set up some common plugin settings in config.h and config.mk, if enabled\n#\ndefine_in_config_if_yes \"$_dynamic_modules\" 'DYNAMIC_MODULES'\n\nif test \"$_dynamic_modules\" = yes ; then\n\tadd_line_to_config_h \"#define PLUGIN_PREFIX\t\\\"$_plugin_prefix\\\"\"\n\tadd_line_to_config_h \"#define PLUGIN_SUFFIX\t\\\"$_plugin_suffix\\\"\"\n\tadd_line_to_config_mk \"PLUGIN_PREFIX := $_plugin_prefix\"\n\tadd_line_to_config_mk \"PLUGIN_SUFFIX := $_plugin_suffix\"\nfi\n\nif test \"$_detection_features_static\" = no ; then\n\tif test \"$_dynamic_modules\" = no ; then\n\t\techo \"Inconsistency detected: dynamic detection plugin enabled while static plugins are requested.\"\n\t\techo \"   ...forcing detection plugin to be static too. Add --enable-plugins if you really want it\"\n\n\t\t_detection_features_static=yes\n\tfi\nfi\n\n#\n# Set up a define for detection to be used as static or not\n#\ndefine_in_config_if_yes \"$_detection_features_static\" \"DETECTION_STATIC\"\necho_n \"Checking if detection features building statically... \"\necho \"$_detection_features_static\"\n\n#\n# Set up a define for detection to be used as static or not\n#\ndefine_in_config_if_yes \"$_detection_features_full\" \"DETECTION_FULL\"\necho_n \"Checking if building detection features for all engines... \"\necho \"$_detection_features_full\"\n\n#\n# Check whether integrated MT-32 emulator support is requested\n#\ndefine_in_config_if_yes \"$_mt32emu\" 'USE_MT32EMU'\n\n#\n# Check whether Nuked OPL emulator support is disabled\n#\ndefine_in_config_if_no \"$_nuked_opl\" 'DISABLE_NUKED_OPL'\n\n#\n# Check whether 16bit color support is requested\n#\ndefine_in_config_if_yes \"$_16bit\" 'USE_RGB_COLOR'\n\n#\n# Check whether High resolution graphics support is requested\n#\ndefine_in_config_if_yes \"$_highres\" 'USE_HIGHRES'\n\n#\n# Check whether save games use the current time as default description\n#\ndefine_in_config_if_yes \"$_savegame_timestamp\" 'USE_SAVEGAME_TIMESTAMP'\n\n#\n# Check whether to enable the (hq (and edge)) scalers\n#\nif test \"$_build_scalers\" = no ; then\n\t_build_hq_scalers=no\n\t_build_edge_scalers=no\nelif test \"$_build_hq_scalers\" = no ; then\n\t_build_edge_scalers=no\nfi\n\ndefine_in_config_if_yes \"$_build_scalers\" 'USE_SCALERS'\n\ndefine_in_config_if_yes \"$_build_hq_scalers\" 'USE_HQ_SCALERS'\n\ndefine_in_config_if_yes \"$_build_edge_scalers\" 'USE_EDGE_SCALERS'\n\ndefine_in_config_if_yes \"$_build_aspect\" 'USE_ASPECT'\n\n#\n# Check for math lib\n#\ncat > $TMPC << EOF\nint main(void) { return 0; }\nEOF\ncc_check -lm && append_var LIBS \"-lm\"\n\n#\n# Check for Ogg\n#\nechocheck \"Ogg\"\nif test \"$_ogg\" = auto ; then\n\t_ogg=no\n\tcat > $TMPC << EOF\n#include <ogg/ogg.h>\nint main(void) { return 0; }\nEOF\n\tcc_check $OGG_CFLAGS $OGG_LIBS -logg && _ogg=yes\nfi\ndefine_in_config_if_yes \"$_ogg\" 'USE_OGG'\necho \"$_ogg\"\n#\n# Check for TTS\n#\nechocheck \"TTS libraries\"\nif test \"$_tts\" = auto ; then\n\t_tts=no\n\tcase $_host_os in\n\t\tmingw*)\n\t\t\tcat > $TMPC << EOF\n#include <windows.h>\n#include <servprov.h>\n#include <sapi.h>\nint main(void) { return 0; }\nEOF\n\t\t\tcc_check -lsapi -lole32 && _tts=yes\n\t\t\t;;\n\t\tlinux* | freebsd* | openbsd*)\n\t\t\tcat > $TMPC << EOF\n#include <speech-dispatcher/libspeechd.h>\nint main(void) { return 0; }\nEOF\n\t\t\tcc_check -lspeechd && _tts=yes\n\t\t\t;;\n\t\tdarwin*)\n\t\t\t# Check the API is available. The most recent API we need is for the NSSpeechSynthesizerDelegate protocol\n\t\t\tcat > $TMPC << EOF\n#include <AppKit/NSSpeechSynthesizer.h>\n@interface SpeechDelegate : NSObject<NSSpeechSynthesizerDelegate> {\n}\n@end\nint main(void) { return 0; }\nEOF\n\t\t\tcc_check -ObjC++ -lobjc && _tts=yes\n\t\t\t;;\n\tesac\nfi\necho \"$_tts\"\n\n#\n# Check for Vorbis\n#\nechocheck \"Vorbis\"\nVORBISFILE=-lvorbisfile\nif test \"$_host_os\" = kolibrios ; then\n    VORBISFILE=\nfi\nif test \"$_vorbis\" = auto ; then\n\t_vorbis=no\n\tcat > $TMPC << EOF\n#include <vorbis/codec.h>\nint main(void) { vorbis_packet_blocksize(0,0); return 0; }\nEOF\n\tif test \"$_ogg\" = yes ; then\n\t\tcc_check $OGG_CFLAGS $OGG_LIBS $VORBIS_CFLAGS $VORBIS_LIBS \\\n\t\t\t$VORBISFILE -lvorbis -logg && _vorbis=yes\n\telse\n\t\tcc_check $VORBIS_CFLAGS $VORBIS_LIBS \\\n\t\t\t$VORBISFILE -lvorbis && _vorbis=yes\n\tfi\nfi\nif test \"$_vorbis\" = yes ; then\n\tappend_var LIBS \"$VORBIS_LIBS $VORBISFILE -lvorbis\"\n\tappend_var INCLUDES \"$VORBIS_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_vorbis\" 'USE_VORBIS'\necho \"$_vorbis\"\n\n#\n# Check for Tremor\n#\nechocheck \"Tremor\"\nif test \"$_tremolo\" = yes ; then\n\t_tremor=yes\nfi\n\nif test \"$_tremor\" = auto ; then\n\t_tremor=no\n\tcat > $TMPC << EOF\n#include <tremor/ivorbiscodec.h>\nint main(void) { vorbis_info_init(0); return 0; }\nEOF\n\tif test \"$_ogg\" = yes ; then\n\t\tcc_check $TREMOR_CFLAGS $TREMOR_LIBS $OGG_CFLAGS $OGG_LIBS \\\n\t\t\t-lvorbisidec -logg && _tremor=yes\n\telse\n\t\tcc_check $TREMOR_CFLAGS $TREMOR_LIBS -lvorbisidec && \\\n\t\t_tremor=yes\n\tfi\nfi\nif test \"$_tremor\" = yes && test \"$_vorbis\" = no; then\n\tadd_line_to_config_h '#define USE_TREMOR'\n\tadd_line_to_config_h '#define USE_VORBIS'\n\tif test \"$_tremolo\" = yes ; then\n\t\tadd_line_to_config_h '#define USE_TREMOLO'\n\t\tappend_var LIBS \"$TREMOR_LIBS -ltremolo\"\n\telse\n\t\tappend_var LIBS \"$TREMOR_LIBS -lvorbisidec\"\n\tfi\n\tappend_var INCLUDES \"$TREMOR_CFLAGS\"\nelse\n\tif test \"$_vorbis\" = yes; then\n\t\t_tremor=\"no (Vorbis/Tremor support is mutually exclusive)\"\n\tfi\n\tadd_line_to_config_h '#undef USE_TREMOR'\nfi\nadd_to_config_mk_if_yes \"$_tremor\" 'USE_TREMOR = 1'\necho \"$_tremor\"\n\n#\n# Check for IEEE1284 for OPL2lPT\n#\nechocheck \"OPL2LPT\"\nif test \"$_opl2lpt\" = yes ; then\n\t_opl2lpt=no\n\tcat > $TMPC << EOF\n#include <ieee1284.h>\nstruct parport_list parports;\nint main(void) { ieee1284_find_ports(&parports, 0); return 0; }\nEOF\n\tcc_check $IEEE1284_CFLAGS $IEEE1284_LIBS -lieee1284 && \\\n\t_opl2lpt=yes\nfi\nif test \"$_opl2lpt\" = yes; then\n\tappend_var LIBS \"$IEEE1284_LIBS -lieee1284\"\n\tappend_var INCLUDES \"$IEEE1284_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_opl2lpt\" 'ENABLE_OPL2LPT'\necho \"$_opl2lpt\"\n\n#\n# Check for retrowave for RetroWave OPL3\n#\nechocheck \"RetroWave OPL3\"\nif test \"$_retrowave\" = auto ; then\n\t_retrowave=no\n\tcat > $TMPC << EOF\n#include <RetroWaveLib/RetroWave.h>\nRetroWaveContext context;\nint main(void) { retrowave_init(&context); return 0; }\nEOF\n\tcc_check $RETROWAVE_CFLAGS $RETROWAVE_LIBS -lRetroWave && \\\n\t_retrowave=yes\nfi\nif test \"$_retrowave\" = yes; then\n\tappend_var LIBS \"$RETROWAVE_LIBS -lRetroWave\"\n\tappend_var INCLUDES \"$RETROWAVE_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_retrowave\" 'USE_RETROWAVE'\necho \"$_retrowave\"\n\n#\n# Check for FLAC\n#\nechocheck \"FLAC >= 1.1.3\"\nif test \"$_flac\" = auto ; then\n\t_flac=no\n\tcat > $TMPC << EOF\n#define FLAC__NO_DLL // Like in audio/decoders/flac.cpp\n\n#include <FLAC/export.h>\n#include <FLAC/stream_decoder.h>\n#include <FLAC/format.h>\n\nint main(void) {\n#if !defined(FLAC_API_VERSION_CURRENT) || FLAC_API_VERSION_CURRENT < 8\n\tsyntax error\n#endif\n\tFLAC__StreamDecoder *decoder = FLAC__stream_decoder_new();\n\tFLAC__stream_decoder_delete(decoder);\n\treturn FLAC__STREAM_SYNC_LEN >> 30; /* guaranteed to be 0 */\n}\nEOF\n\tif test \"$_ogg\" = yes ; then\n\t\tcc_check $FLAC_CFLAGS $FLAC_LIBS $OGG_CFLAGS $OGG_LIBS \\\n\t\t\t-logg && _flac=yes\n\telse\n\t\tcc_check $FLAC_CFLAGS $FLAC_LIBS \\\n\t\t\t&& _flac=yes\n\tfi\nfi\nif test \"$_flac\" = yes ; then\n\tappend_var LIBS \"$FLAC_LIBS\"\n\tappend_var INCLUDES \"$FLAC_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_flac\" 'USE_FLAC'\necho \"$_flac\"\n\n# Add the link to ogg only after vorbis, tremor and flac as it might be used by those.\nif test \"$_ogg\" = yes ; then\n\tappend_var LIBS \"$OGG_LIBS -logg\"\n\tappend_var INCLUDES \"$OGG_CFLAGS\"\nfi\n\n#\n# Check for MAD (MP3 library)\n#\nechocheck \"MAD\"\nif test \"$_mad\" = auto ; then\n\t_mad=no\n\tcat > $TMPC << EOF\n#include <mad.h>\nint main(void) { return 0; }\nEOF\n\tcc_check $MAD_CFLAGS $MAD_LIBS -lmad && _mad=yes\nfi\nif test \"$_mad\" = yes ; then\n\tappend_var LIBS \"$MAD_LIBS -lmad\"\n\tappend_var INCLUDES \"$MAD_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_mad\" 'USE_MAD'\necho \"$_mad\"\n\n#\n# Check for ALSA\n#\nechocheck \"ALSA >= 0.9\"\nif test \"$_alsa\" = auto ; then\n\t_alsa=no\n\tcat > $TMPC << EOF\n#include <alsa/asoundlib.h>\nint main(void) { return (!(SND_LIB_MAJOR==0 && SND_LIB_MINOR==9)); }\nEOF\n\tcc_check $ALSA_CFLAGS $ALSA_LIBS -lasound && _alsa=yes\nfi\nif test \"$_alsa\" = yes ; then\n\tappend_var LIBS \"$ALSA_LIBS -lasound\"\n\tappend_var INCLUDES \"$ALSA_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_alsa\" 'USE_ALSA'\necho \"$_alsa\"\n\n#\n# Check for libjpeg\n#\nechocheck \"libjpeg >= v6b\"\nif test \"$_jpeg\" = auto ; then\n\t_jpeg=no\n\tcat > $TMPC << EOF\n#include <stdio.h>\n#include <jpeglib.h>\nint main(void) {\n#if JPEG_LIB_VERSION >= 62\n#else\n  syntax error\n#endif\n  return 0;\n}\nEOF\n\tcc_check $JPEG_CFLAGS $JPEG_LIBS && _jpeg=yes\nfi\nif test \"$_jpeg\" = yes ; then\n\tappend_var LIBS \"$JPEG_LIBS\"\n\tappend_var INCLUDES \"$JPEG_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_jpeg\" 'USE_JPEG'\necho \"$_jpeg\"\n\n#\n# Check for PNG\n#\nechocheck \"PNG >= 1.2.8\"\nif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists libpng; then\n\tappend_var PNG_LIBS \"`$_pkgconfig --libs libpng`\"\n\tappend_var PNG_CFLAGS \"`$_pkgconfig --cflags libpng`\"\nelse\n\tappend_var PNG_LIBS \"-lpng -lz\"\nfi\nif test \"$_png\" = auto ; then\n\t_png=no\n\tcat > $TMPC << EOF\n#include <png.h>\nint main(void) {\n#if PNG_LIBPNG_VER >= 10208\n#else\n  syntax error\n#endif\n  return 0;\n}\nEOF\n\tcc_check $PNG_CFLAGS $PNG_LIBS && _png=yes\nfi\nif test \"$_png\" = yes ; then\n\tappend_var LIBS \"$PNG_LIBS\"\n\tappend_var INCLUDES \"$PNG_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_png\" 'USE_PNG'\necho \"$_png\"\n\n#\n# Check for GIF\n#\nechocheck \"GIF >= 5.0.0\"\nif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists libgif; then\n\tappend_var GIF_LIBS \"`$_pkgconfig --libs libgif`\"\n\tappend_var GIF_CFLAGS \"`$_pkgconfig --cflags libgif`\"\nelse\n\tappend_var GIF_LIBS \"-lgif\"\nfi\nif test \"$_gif\" = auto ; then\n\t_gif=no\n\tcat > $TMPC << EOF\n#include <gif_lib.h>\nint main(void) {\n#if GIFLIB_MAJOR >= 5\n#else\n  syntax error\n#endif\n  return 0;\n}\nEOF\n\tcc_check $GIF_CFLAGS $GIF_LIBS && _gif=yes\nfi\nif test \"$_gif\" = yes ; then\n\tappend_var LIBS \"$GIF_LIBS\"\n\tappend_var INCLUDES \"$GIF_CFLAGS\"\nfi\necho \"$_gif\"\n\n#\n# Check for Theora Decoder\n#\nechocheck \"libtheoradec >= 1.0\"\nif test \"$_vorbis\" = no && test \"$_tremor\" = no ; then\n\techo \"skipping. no vorbis\"\n\t_theoradec=notsupported\nfi\nif test \"$_theoradec\" = auto ; then\n\t_theoradec=no\n\tcat > $TMPC << EOF\n#include <theora/theoradec.h>\nint main(void) { th_ycbcr_buffer yuv; th_decode_ycbcr_out(NULL, yuv);  }\nEOF\n\tcc_check $THEORADEC_CFLAGS $THEORADEC_LIBS && _theoradec=yes\nfi\nif test \"$_theoradec\" = yes ; then\n\tappend_var LIBS \"$THEORADEC_LIBS\"\n\tappend_var INCLUDES \"$THEORADEC_CFLAGS\"\nfi\n\nif test ! \"$_theoradec\" = notsupported ; then\n\techo \"$_theoradec\"\nfi\n\n#\n# Check for VP8/VP9 Decoder\n#\nechocheck \"libvpx >= 1.6\"\nif test \"$_vorbis\" = no && test \"$_tremor\" = no ; then\n\techo \"skipping. no vorbis\"\n\t_vpx=notsupported\nfi\nif test \"$_vpx\" = auto ; then\n\t_vpx=no\n\n\tif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists vpx; then\n\t\tappend_var VPX_LIBS \"`$_pkgconfig --libs vpx`\"\n\t\tappend_var VPX_STATIC_LIBS \"`$_pkgconfig --static --libs vpx`\"\n\t\tappend_var VPX_CFLAGS \"`$_pkgconfig --cflags vpx`\"\n\telse\n\t\tappend_var VPX_LIBS \"-lvpx\"\n\tfi\n\n\tcat > $TMPC << EOF\n#include \"vpx/vpx_decoder.h\"\n#include \"vpx/vp8dx.h\"\nint main(void) {\n\tvpx_codec_ctx_t codec;\n\tvpx_codec_dec_init(&codec, &vpx_codec_vp8_dx_algo, NULL, 0);\n\n#if VPX_DECODER_ABI_VERSION >= 10 // Check for 1.6\n#else\n  syntax error\n#endif\n\treturn 0;\n}\nEOF\n\tcc_check_no_clean $VPX_CFLAGS $VPX_LIBS && _vpx=yes\n\t# If it fails, try with static libs, it may help\n\tif test \"$_vpx\" != \"yes\"; then\n\t\tVPX_LIBS=\"$VPX_STATIC_LIBS\"\n\t\tcc_check_no_clean $VPX_CFLAGS $VPX_LIBS && _vpx=yes\n\tfi\n\tcc_check_clean\nfi\nif test \"$_vpx\" = yes ; then\n\tappend_var LIBS \"$VPX_LIBS -lvpx\"\n\tappend_var INCLUDES \"$VPX_CFLAGS\"\nfi\n\nif test ! \"$_vpx\" = notsupported ; then\n\techo \"$_vpx\"\nfi\n\n#\n# Check for the AAC decoder\n#\nechocheck \"libfaad\"\nif test \"$_faad\" = auto ; then\n\t_faad=no\n\tcat > $TMPC << EOF\n#include <neaacdec.h>\nint main(void) { NeAACDecGetCapabilities(); return 0; }\nEOF\n\tcc_check $FAAD_CFLAGS $FAAD_LIBS -lfaad && _faad=yes\nfi\nif test \"$_faad\" = yes ; then\n\tappend_var LIBS \"$FAAD_LIBS -lfaad\"\n\tappend_var INCLUDES \"$FAAD_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_faad\" 'USE_FAAD'\necho \"$_faad\"\n\n#\n# Check for SEQ MIDI\n#\nechocheck \"SEQ MIDI\"\nif test \"$_seq_midi\" = auto ; then\n\t# TODO: Test for /dev/sequencer presence? Or maybe just for /dev ?\n\t# For now, we just always enable it when \"posix\" mode is on (backends\n\t# that do not want it can disable it by setting _seq_midi=no).\n\t_seq_midi=\"$_posix\"\nfi\ndefine_in_config_h_if_yes \"$_seq_midi\" 'USE_SEQ_MIDI'\necho \"$_seq_midi\"\n\n#\n# Check for sndio\n#\nechocheck \"sndio\"\nif test \"$_sndio\" = auto ; then\n\t_sndio=no\n\tcat > $TMPC << EOF\n#include <sndio.h>\nint main(void) { struct sio_par par; sio_initpar(&par); return 0; }\nEOF\n\tcc_check $SNDIO_CFLAGS $SNDIO_LIBS -lsndio && _sndio=yes\nfi\nif test \"$_sndio\" = yes ; then\n\tappend_var LIBS \"$SNDIO_LIBS -lsndio\"\n\tappend_var INCLUDES \"$SNDIO_CFLAGS\"\nfi\ndefine_in_config_h_if_yes \"$_sndio\" 'USE_SNDIO'\necho \"$_sndio\"\n\n#\n# Check for TiMidity(++)\n#\nechocheck \"TiMidity\"\nif test \"$_timidity\" = auto ; then\n\t# TODO: Is there a good possibility of auto detecting whether we\n\t# should include TiMidity support? It can only be used on Unix\n\t# currently so we use that as \"detection\" for now.\n\t_timidity=\"$_posix\"\nfi\ndefine_in_config_h_if_yes \"$_timidity\" 'USE_TIMIDITY'\necho \"$_timidity\"\n\n#\n# Check for ZLib\n#\nechocheck \"zlib\"\nif test \"$_zlib\" = auto ; then\n\t_zlib=no\n\tcat > $TMPC << EOF\n#include <string.h>\n#include <zlib.h>\nint main(void) { return strcmp(ZLIB_VERSION, zlibVersion()); }\nEOF\n\tcc_check $ZLIB_CFLAGS $ZLIB_LIBS -lz && _zlib=yes\nfi\nif test \"$_zlib\" = yes ; then\n\tappend_var ZLIB_LIBS \"-lz\"\n\tappend_var LIBS \"$ZLIB_LIBS\"\n\tappend_var INCLUDES \"$ZLIB_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_zlib\" 'USE_ZLIB'\necho \"$_zlib\"\n\n#\n# Check for LibMPEG2\n#\nechocheck \"libmpeg2 >= 0.4.0\"\nif test \"$_mpeg2\" = auto ; then\n\t_mpeg2=no\n\tcat > $TMPC << EOF\n#include <inttypes.h>\nextern \"C\" {\n#include <mpeg2dec/mpeg2.h>\n}\n\nint main(void) {\n\t#if MPEG2_RELEASE < MPEG2_VERSION(0, 4, 0)\n\t#error libmpeg2 version too low\n\t#endif\n\n\t/* mpeg2_state_t first appears in 0.4.0 */\n\tmpeg2_state_t state;\n\n\treturn 0;\n}\nEOF\n\n\tif test -n \"$_host\"; then\n\t\t# don't execute while cross compiling\n\t\tcc_check $MPEG2_CFLAGS $MPEG2_LIBS -lmpeg2 && _mpeg2=yes\n\telse\n\t\tcc_check_no_clean $MPEG2_CFLAGS $MPEG2_LIBS -lmpeg2 && $TMPO$HOSTEXEEXT && _mpeg2=yes\n\t\tcc_check_clean\n\tfi\nfi\nif test \"$_mpeg2\" = yes ; then\n\tappend_var INCLUDES \"$MPEG2_CFLAGS\"\n\tappend_var LIBS \"$MPEG2_LIBS -lmpeg2\"\nfi\necho \"$_mpeg2\"\n\n#\n# Check for liba52\n#\nechocheck \"liba52\"\nif test \"$_a52\" = auto ; then\n\t_a52=no\n\tcat > $TMPC << EOF\n#include <inttypes.h>\nextern \"C\" {\n#include <a52dec/a52.h>\n}\n\nint main(void) {\n\ta52_state_t *state = a52_init(0);\n\ta52_free(state);\n\treturn 0;\n}\nEOF\n\n\tif test -n \"$_host\"; then\n\t\t# don't execute while cross compiling\n\t\tcc_check $A52_CFLAGS $A52_LIBS -la52 && _a52=yes\n\telse\n\t\tcc_check_no_clean $A52_CFLAGS $A52_LIBS -la52 && $TMPO$HOSTEXEEXT 2>/dev/null && _a52=yes\n\t\tcc_check_clean\n\tfi\nfi\nif test \"$_a52\" = yes ; then\n\tINCLUDES=\"$INCLUDES $A52_FLAGS\"\n\tLIBS=\"$LIBS $A52_LIBS -la52\"\nfi\ndefine_in_config_if_yes \"$_a52\" 'USE_A52'\necho \"$_a52\"\n\n#\n# Check for Sparkle if updates support is enabled\n#\ncase $_host_os in\n\tdarwin*)\n\t\techocheck \"Sparkle >= 2.0\"\n\t\tif test \"$_updates\" = no; then\n\t\t\t_sparkle=no\n\t\telse\n\t\t\tif test -z $_sparklepath; then\n\t\t\t\t_sparklepath=/Library/Frameworks\n\t\t\tfi\n\t\t\tSPARKLE_CFLAGS=\"-F$_sparklepath\"\n\t\t\tSPARKLE_LIBS=\"-F$_sparklepath\"\n\t\t\tif test \"$_sparkle\" = auto ; then\n\t\t\t\t_sparkle=no\n\t\t\t\tcat > $TMPC << EOF\n#include <Cocoa/Cocoa.h>\n#include <Sparkle/Sparkle.h>\nint main(void) { SPUStandardUpdaterController *updater = [[SPUStandardUpdaterController alloc] initWithUpdaterDelegate:nil userDriverDelegate:nil]; return 0; }\nEOF\n\t\t\t\tcc_check $SPARKLE_CFLAGS $SPARKLE_LIBS -framework Sparkle -ObjC++ -lobjc && _sparkle=yes\n\t\t\tfi\n\t\t\tif test \"$_sparkle\" = yes ; then\n\t\t\t\tappend_var LIBS \"$SPARKLE_LIBS -framework Sparkle\"\n\t\t\t\tappend_var INCLUDES \"$SPARKLE_CFLAGS\"\n\t\t\tfi\n\t\t\tdefine_in_config_if_yes \"$_sparkle\" 'USE_SPARKLE'\n\t\tfi\n\t\techo \"$_sparkle\"\n\t;;\n\tmingw*)\n\t\techocheck \"Sparkle\"\n\t\tif test \"$_updates\" = no; then\n\t\t\t_sparkle=no\n\t\telse\n\t\t\tif test ! -z $_sparklepath ; then\n\t\t\t\tSPARKLE_CFLAGS=\"-I$_sparklepath/include\"\n\t\t\t\tSPARKLE_LIBS=\"-L$_sparklepath/Release -L$_sparklepath/x64/Release\"\n\t\t\tfi\n\t\t\tif test \"$_sparkle\" = auto ; then\n\t\t\t\t_sparkle=no\n\t\t\t\tcat > $TMPC << EOF\n#include <winsparkle.h>\nint main(void) { win_sparkle_get_update_check_interval(); return 0; }\nEOF\n\t\t\t\tcc_check $SPARKLE_CFLAGS $SPARKLE_LIBS -lWinSparkle && _sparkle=yes\n\t\t\tfi\n\t\t\tif test \"$_sparkle\" = yes ; then\n\t\t\t\tappend_var LIBS \"$SPARKLE_LIBS -lWinSparkle\"\n\t\t\t\tappend_var INCLUDES \"$SPARKLE_CFLAGS\"\n\t\t\tfi\n\t\t\tdefine_in_config_if_yes \"$_sparkle\" 'USE_SPARKLE'\n\t\tfi\n\t\techo \"$_sparkle\"\n\t;;\n\t*)\n\t\t_sparkle=no\n\t;;\nesac\n\n#\n# Check for libcurl to be present\n#\nif test \"$_libcurl\" != \"no\"; then\n\n\t# Look for the curl-config script\n\tfind_libcurlconfig\n\n\tif test -z \"$_libcurlconfig\"; then\n\t\t_libcurl=no\n\telse\n\t\tif test -n \"$_staticlibpath\"; then\n\t\t\tLIBCURL_LIBS=`$_libcurlconfig --static-libs`\n\t\telse\n\t\t\tLIBCURL_LIBS=`$_libcurlconfig --libs`\n\t\tfi\n\t\tLIBCURL_CFLAGS=`$_libcurlconfig --cflags`\n\n\t\tcase $_host_os in\n\t\t\tamigaos* | morphos*)\n\t\t\t\tappend_var LIBCURL_LIBS \"-lpthread\"\n\t\t\t;;\n\t\t\t# macOS does not allow static libs, overriding\n\t\t\tdarwin*)\n\t\t\t\tLIBCURL_LIBS=`$_libcurlconfig --libs`\n\t\t\t;;\n\t\t\tmingw*)\n\t\t\t\t# Needed for select (used in socket.cpp), when curl is linked dynamically\n\t\t\t\tappend_var LIBCURL_LIBS \"-lws2_32\"\n\t\t\t\t;;\n\t\t\tpsp2*)\n\t\t\t\tappend_var LIBCURL_LIBS \"-lssl -lcrypto\"\n\t\t\t;;\n\t\tesac\n\n\t\tif test \"$_libcurl\" = \"auto\"; then\n\t\t\t_libcurl=no\n\n\t\t\tcat > $TMPC << EOF\n\t\t\t#include <curl/curl.h>\n\t\t\tint main(int argc, char *argv[]) {\n\t\t\t\tint x;\n\t\t\t\tcurl_easy_setopt(NULL,CURLOPT_URL,NULL);\n\t\t\t\tx=CURL_ERROR_SIZE;\n\t\t\t\tx=CURLOPT_WRITEFUNCTION;\n\t\t\t\tx=CURLOPT_WRITEDATA;\n\t\t\t\tx=CURLOPT_ERRORBUFFER;\n\t\t\t\tx=CURLOPT_STDERR;\n\t\t\t\tx=CURLOPT_VERBOSE;\n\n\t\t\t\tcurl_version_info_data *data = curl_version_info(CURLVERSION_NOW);\n\t\t\t\tif (data->features & CURL_VERSION_SSL)\n\t\t\t\t\treturn 0;\n\t\t\t\treturn 1;\n\t\t\t}\nEOF\n\n\t\t\tcc_check_no_clean $LIBCURL_CFLAGS $LIBCURL_LIBS\n\t\t\tif test \"$?\" -eq 0; then\n\t\t\t\tif test -n \"$_host\"; then\n\t\t\t\t\t# In cross-compiling mode, we cannot run the result, assume SSL is available\n\t\t\t\t\t_libcurl=yes\n\t\t\t\telse\n\t\t\t\t\t$TMPO$HOSTEXEEXT\n\t\t\t\t\tif test \"$?\" -eq 0; then\n\t\t\t\t\t\t_libcurl=yes\n\t\t\t\t\telse\n\t\t\t\t\t\t_libcurl=\"no SSL support\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tcc_check_clean\n\t\tfi\n\n\t\tif test \"$_libcurl\" = \"yes\"; then\n\t\t\tappend_var LIBS \"$LIBCURL_LIBS\"\n\t\t\tappend_var INCLUDES \"$LIBCURL_CFLAGS\"\n\t\tfi\n\tfi\n\nfi\n\nechocheck \"libcurl\"\necho \"$_libcurl\"\n\ndefine_in_config_if_yes \"$_libcurl\" \"USE_LIBCURL\"\n\n#\n# Check for libopenmpt to be present\n#\nechocheck \"libopenmpt\"\n\nif test \"$_libopenmpt\" != \"no\"; then\n\tif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists libopenmpt; then\n\t\tappend_var LIBOPENMPT_LIBS \"`$_pkgconfig --libs libopenmpt`\"\n\t\tappend_var LIBOPENMPT_CFLAGS \"`$_pkgconfig --cflags libopenmpt`\"\n\telse\n\t\tappend_var LIBOPENMPT_LIBS \"-lopenmpt\"\n\tfi\n\n\tif test \"$_libopenmpt\" = \"auto\"; then\n\t\t_libopenmpt=no\n\t\tcat > $TMPC << EOF\n\t\t#include <libopenmpt/libopenmpt.h>\n\t\t#include <libopenmpt/libopenmpt_stream_callbacks_file.h>\n\t\tint main(void) {\n\t\t\topenmpt_module *mod = 0;\n\t\t\tFILE *file = 0;\n\n\t\t\tfile = fopen(\"abc\", \"rb\");\n\t\t\tmod = openmpt_module_create2( openmpt_stream_get_file_callbacks2(), file, NULL, NULL, NULL, NULL, NULL, NULL, NULL );\n\n\t\t\tfclose(file);\n\t\t\treturn 0;\n\t\t}\nEOF\n\t\tcc_check $LIBOPENMPT_CFLAGS $LIBOPENMPT_LIBS && _libopenmpt=yes\n\tfi\n\n\tif test \"$_libopenmpt\" = \"yes\"; then\n\t\tappend_var LIBS \"$LIBOPENMPT_LIBS\"\n\t\tappend_var INCLUDES \"$LIBOPENMPT_CFLAGS\"\n\tfi\nfi\n\ndefine_in_config_if_yes \"$_libopenmpt\" \"USE_OPENMPT\"\necho \"$_libopenmpt\"\n\n#\n# Check for libmikmod to be present\n#\nif test \"$_libmikmod\" != no && test \"$_libopenmpt\" = no; then\n\t# Look for the mikmod-config script\n\tfind_libmikmodconfig\n\n\techocheck \"libmikmod\"\n\n\tif test -z \"$_libmikmodconfig\"; then\n\t\t_libmikmod=no\n\telse\n\t\tLIBMIKMOD_LIBS=`$_libmikmodconfig --libs`\n\t\tLIBMIKMOD_CFLAGS=`$_libmikmodconfig --cflags`\n\n\t\tif test \"$_libmikmod\" = \"auto\"; then\n\t\t\t_libmikmod=no\n\n\t\t\tcat > $TMPC << EOF\n\t\t\t#include <mikmod.h>\n\t\t\tint main(void) {\n\t\t\t\tSAMPLE *spl = Sample_Load(\"abcd\");\n\t\t\t\tSample_Free(spl);\n\t\t\t\treturn 0;\n\t\t\t}\nEOF\n\t\t\tcc_check $LIBMIKMOD_CFLAGS $LIBMIKMOD_LIBS && _libmikmod=yes\n\t\tfi\n\n\t\tif test \"$_libmikmod\" = \"yes\"; then\n\t\t\tappend_var LIBS \"$LIBMIKMOD_LIBS\"\n\t\t\tappend_var INCLUDES \"$LIBMIKMOD_CFLAGS\"\n\t\tfi\n\tfi\nelse\n\techocheck \"libmikmod\"\n\n\t# Skip mikmod detection if openmpt is detected\n\t_libmikmod=\"no (OpenMPT/MikMod support is mutually exclusive)\"\nfi\n\necho \"$_libmikmod\"\ndefine_in_config_if_yes \"$_libmikmod\" \"USE_MIKMOD\"\n\n#\n# Check for libmpcdec to be present\n#\nechocheck \"libmpcdec\"\n\nif test \"$_libmpcdec\" != \"no\"; then\n\tappend_var LIBMPCDEC_LIBS \"-lmpcdec\"\n\n\tif test \"$_libmpcdec\" = \"auto\"; then\n\t\t_libmpcdec=no\n\t\tcat > $TMPC << EOF\n\t\t#include <mpc/mpcdec.h>\n\t\tint main(void) {\n\t\t\tmpc_streaminfo info;\n\n\t\t\tmpc_decoder *decoder = mpc_decoder_init(&info);\n\n\t\t\treturn 0;\n\t\t}\nEOF\n\t\tif cc_check $LIBMPCDEC_CFLAGS $LIBMPCDEC_LIBS; then\n\t\t\t_libmpcdec=yes\n\t\telse\n\t\t\tcat > $TMPC << EOF\n\t\t\t#include <mpcdec/mpcdec.h>\n\t\t\tint main(void) {\n\t\t\t\tmpc_decoder decoder;\n\t\t\t\tmpc_reader reader;\n\t\t\t\tmpc_streaminfo info;\n\n\t\t\t\tmpc_decoder_setup(&decoder, &reader);\n\t\t\t\tmpc_decoder_initialize(&decoder, &info);\n\n\t\t\t\treturn 0;\n\t\t\t}\nEOF\n\t\t\tif cc_check $LIBMPCDEC_CFLAGS $LIBMPCDEC_LIBS; then\n\t\t\t\t_libmpcdec=yes\n\t\t\t\tadd_line_to_config_h '#define USE_MPCDEC_OLD_API'\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif test \"$_libmpcdec\" = \"yes\"; then\n\t\tappend_var LIBS \"$LIBMPCDEC_LIBS\"\n\t\tappend_var INCLUDES \"$LIBMPCDEC_CFLAGS\"\n\tfi\nfi\n\necho \"$_libmpcdec\"\n\n#\n# Check whether to build cloud integration support\n#\necho_n \"Cloud integration... \"\nif test \"$_cloud\" = \"no\"; then\n\techo \"no\"\nelse\n\t_cloud=no\n\tif test \"$_sdlnet\" = \"yes\"; then\n\t\t_cloud=yes\n\t\techo_n \"local\"\n\tfi\n\tif test \"$_libcurl\" = \"yes\"; then\n\t\tif test \"$_cloud\" = \"yes\"; then echo_n \", \"; fi\n\t\t_cloud=yes\n\t\techo_n \"servers\"\n\tfi\n\tif test \"$_cloud\" = \"no\"; then\n\t\techo_n \"no\"\n\tfi\n\techo  # newline\nfi\ndefine_in_config_if_yes $_cloud 'USE_CLOUD'\n\nif test \"$_scummvmdlc\" = \"yes\"; then\n\tif test \"$_libcurl\" = \"yes\"; then\n\t\t_dlc=yes\n\tfi\nfi\n\ndefine_in_config_if_yes $_dlc 'USE_DLC'\ndefine_in_config_if_yes $_scummvmdlc 'USE_SCUMMVMDLC'\n\n#\n# Check is NSDockTilePlugIn protocol is supported\n#\ncase $_host_os in\n\tdarwin*)\n\t\t# NSDockTilePlugIn was added in OS X 10.6, so will not be available when compiling on older macOS versions.\n\t\techocheck \"DockTilePlugin\"\n\t\tif test \"$_osxdockplugin\" = auto ; then\n\t\t\t_osxdockplugin=no\n\t\t\tcat > $TMPC << EOF\n#include <Cocoa/Cocoa.h>\n@interface ScummVMDockTilePlugIn : NSObject <NSDockTilePlugIn> {\n}\n@end\nEOF\n\t\t\tcc_check -c -ObjC++ && _osxdockplugin=yes\n\t\tfi\n\t\tdefine_in_config_if_yes \"$_osxdockplugin\" 'USE_DOCKTILEPLUGIN'\n\t\techo \"$_osxdockplugin\"\n\t;;\n\t*)\n\t\t_osxdockplugin=no\n\t;;\nesac\n\n#\n# Check for FluidSynth\n#\nechocheck \"FluidSynth\"\n\nappend_var FLUIDSYNTH_LIBS \"-lfluidsynth\"\ncase $_host_os in\n\tmingw*)\n\t\tFLUIDSYNTH_STATIC_LIBS=\"$FLUIDSYNTH_LIBS -lglib-2.0 -lintl -liconv -lws2_32 -lole32 -lshlwapi -lpcre -ldsound -lwinmm\"\n\t;;\n\n\tdarwin*)\n\t\tFLUIDSYNTH_STATIC_LIBS=\"$FLUIDSYNTH_LIBS -framework Foundation -framework CoreServices -framework CoreMIDI -framework CoreAudio -framework AudioToolbox -lglib-2.0 -lintl -liconv -lreadline\"\n\t;;\n\n\tiphoneos)\n\t\tFLUIDSYNTH_STATIC_LIBS=\"$FLUIDSYNTH_LIBS -framework Foundation -framework CoreMIDI -lglib-2.0 -lintl -liconv\"\n\t;;\n\n\tswitch)\n\t\tFLUIDSYNTH_STATIC_LIBS=\"$FLUIDSYNTH_LIBS -lnx\"\n\t;;\n\n\tpsp2)\n\t\tFLUIDSYNTH_STATIC_LIBS=\"$FLUIDSYNTH_LIBS -lpthread\"\n\t;;\n\n\t*)\n\t\tFLUIDSYNTH_STATIC_LIBS=\"$FLUIDSYNTH_LIBS -lglib-2.0 -lintl -liconv\"\n\t;;\nesac\n\nif test \"$_fluidsynth\" = auto; then\n\t_fluidsynth=no\n\tcat > $TMPC << EOF\n#include <fluidsynth.h>\nint main(void) { delete_fluid_settings(new_fluid_settings()); return 0; }\nEOF\n\tcc_check_no_clean $FLUIDSYNTH_CFLAGS $FLUIDSYNTH_LIBS && _fluidsynth=yes\n\tif test \"$_fluidsynth\" != yes && test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists fluidsynth; then\n\t\tFLUIDSYNTH_LIBS=\"`$_pkgconfig --static --libs fluidsynth`\"\n\t\tcc_check_no_clean $FLUIDSYNTH_CFLAGS $FLUIDSYNTH_LIBS && _fluidsynth=yes\n\tfi\n\tif test \"$_fluidsynth\" != yes; then\n\t\tFLUIDSYNTH_LIBS=\"$FLUIDSYNTH_STATIC_LIBS\"\n\t\tcc_check_no_clean $FLUIDSYNTH_CFLAGS $FLUIDSYNTH_LIBS && _fluidsynth=yes\n\tfi\n\tcc_check_clean\nfi\nif test \"$_fluidsynth\" = yes; then\n\tappend_var LIBS \"$FLUIDSYNTH_LIBS\"\n\tappend_var INCLUDES \"$FLUIDSYNTH_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_fluidsynth\" 'USE_FLUIDSYNTH'\necho \"$_fluidsynth\"\n\n#\n# Check for FluidLite\n#\nechocheck \"FluidLite\"\n\nappend_var FLUIDLITE_LIBS \"-lfluidlite\"\nif test \"$_fluidlite\" = auto; then\n\t_fluidlite=no\n\tcat > $TMPC << EOF\n#include <fluidlite.h>\nint main(void) { delete_fluid_settings(new_fluid_settings()); return 0; }\nEOF\n\tcc_check_no_clean $FLUIDLITE_CFLAGS $FLUIDLITE_LIBS && _fluidlite=yes\n\tif test \"$_fluidlite\" != yes && test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists fluidlite; then\n\t\tFLUIDLITE_LIBS=\"`$_pkgconfig --static --libs fluidlite`\"\n\t\tcc_check_no_clean $FLUIDLITE_CFLAGS $FLUIDLITE_LIBS && _fluidlite=yes\n\tfi\n\tcc_check_clean\nfi\nif test \"$_fluidlite\" = yes && test \"$_fluidsynth\" = no; then\n\tdefine_in_config_if_yes \"$_fluidlite\" 'USE_FLUIDLITE'\n\tdefine_in_config_if_yes \"$_fluidlite\" 'USE_FLUIDSYNTH'\n\tappend_var LIBS \"$FLUIDLITE_LIBS\"\n\tappend_var INCLUDES \"$FLUIDLITE_CFLAGS\"\nelse\n\tif test \"$_fluidsynth\" = yes; then\n\t\t_fluidlite=\"no (FluidSynth/FluidLite support is mutually exclusive)\"\n\tfi\n\tadd_line_to_config_h '#undef USE_FLUIDLITE'\nfi\necho \"$_fluidlite\"\n\n#\n# Check for Sonivox\n#\nechocheck \"Sonivox >= 3.6.12\"\n\nappend_var SONIVOX_LIBS \"-lsonivox\"\nif test \"$_sonivox\" = auto; then\n\t_sonivox=no\n\tcat > $TMPC << EOF\n#include <stddef.h>\n#include <sonivox/eas.h>\n\nEAS_DATA_HANDLE mEASDataHandle = NULL;\n\nint main(void) {\n\tEAS_Init(&mEASDataHandle);\n\tEAS_LoadDLSCollection(mEASDataHandle, NULL, NULL);\n\n\treturn 0;\n}\nEOF\n\tcc_check_no_clean $SONIVOX_CFLAGS $SONIVOX_LIBS && _sonivox=yes\n\tif test \"$_sonivox\" != yes && test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists sonivox; then\n\t\tSONIVOX_LIBS=\"`$_pkgconfig --static --libs sonivox`\"\n\t\tcc_check_no_clean $SONIVOX_CFLAGS $SONIVOX_LIBS && _sonivox=yes\n\tfi\n\tif test \"$_sonivox\" != yes ; then\n\t\tif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists sonivox-static; then\n\t\t\tSONIVOX_LIBS=\"`$_pkgconfig --static --libs sonivox-static`\"\n\t\t\tcc_check_no_clean $SONIVOX_CFLAGS $SONIVOX_LIBS && _sonivox=yes\n\t\tfi\n\n\t\tif test \"$_sonivox\" != yes ; then\n\t\t\tSONIVOX_LIBS=\"-lsonivox-static\"\n\t\t\tcc_check_no_clean $SONIVOX_CFLAGS $SONIVOX_LIBS && _sonivox=yes\n\t\tfi\n\tfi\n\tcc_check_clean\nfi\nif test \"$_sonivox\" = yes; then\n\tappend_var LIBS \"$SONIVOX_LIBS\"\n\tappend_var INCLUDES \"$SONIVOX_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_sonivox\" 'USE_SONIVOX'\necho \"$_sonivox\"\n\n#\n# Check for readline if text_console is enabled\n#\nechocheck \"readline\"\nif test \"$_text_console\" = yes ; then\n\t_READLINE_LIBS=\"-lreadline\"\n\tif test \"$_readline\" = auto ; then\n\t\t_readline=no\n\t\tcat > $TMPC << EOF\n#include <stdio.h>\n#include <readline/readline.h>\n#include <readline/history.h>\n\nint main(void) {\n\trl_hook_func_t f; // not present in apple's libedit\n\tchar *x = readline(\"\");\n}\nEOF\n\t\tcc_check_no_clean $READLINE_CFLAGS $READLINE_LIBS $_READLINE_LIBS && _readline=yes\n\t\tif test \"$_readline\" = no ; then\n\t\t\t_READLINE_LIBS=\"-lreadline -ltermcap\"\n\t\t\tcc_check_no_clean $READLINE_CFLAGS $READLINE_LIBS $_READLINE_LIBS && _readline=yes\n\t\tfi\n\tfi\n\tcc_check_clean\n\techo \"$_readline\"\nelse\n\t_readline=no\n\techo \"skipping (text console disabled)\"\nfi\n\nif test \"$_readline\" = yes ; then\n\t#\n\t# Check the type of rl_completion_entry_function.\n\t# It can be int(*)(const char *, int) or char *(*)(const char *, int).\n\t#\n\tcat > $TMPC << EOF\n#include <stdio.h>\n#include <readline/readline.h>\n#include <readline/history.h>\n\nint readline_completionFunction(const char *, int);\n\nint main(void) {\n\tchar *x = readline(\"\");\n\trl_completion_entry_function = &readline_completionFunction;\n}\nEOF\n\tcc_check $READLINE_CFLAGS $READLINE_LIBS $_READLINE_LIBS -c && add_line_to_config_h '#define USE_READLINE_INT_COMPLETION'\n\nfi\n\nif test \"$_readline\" = yes ; then\n\tappend_var LIBS \"$READLINE_LIBS $_READLINE_LIBS\"\n\tappend_var INCLUDES \"$READLINE_CFLAGS\"\nfi\n\ndefine_in_config_h_if_yes \"$_readline\" 'USE_READLINE'\n\ndefine_in_config_h_if_yes \"$_text_console\" 'USE_TEXT_CONSOLE_FOR_DEBUGGER'\n\n#\n# Check for Unity if taskbar integration is enabled\n#\nechocheck \"libunity\"\nif test \"$_unix\" = no || test \"$_taskbar\" = no || test \"$_pkg_config\" = no; then\n\t_libunity=no\nelse\nif test \"$_libunity\" = auto ; then\n\tcase $_host_os in\n\t\tmingw*)\n\t\t\t# unity is not supported on mingw\n\t\t\t_libunity=no\n\t\t\t;;\n\t\t*)\n\t\t\t# Unity has a lot of dependencies, update the libs and cflags var with them\n\t\t\tLIBUNITY_LIBS=\"$LIBUNITY_LIBS `$_pkgconfig --libs 'unity > 3.8.1' 2>> \"$TMPLOG\"`\"\n\t\t\tLIBUNITY_CFLAGS=\"$LIBUNITY_CFLAGS `$_pkgconfig --cflags 'unity > 3.8.1' 2>> \"$TMPLOG\"`\"\n\t\t\t_libunity=no\n\t\t\tcat > $TMPC << EOF\n#include <unity.h>\nint main(void) {\n\tunity_launcher_entry_get_for_desktop_id(\"scummvm.desktop\");\n\treturn 0;\n}\nEOF\n\t\t\tcc_check $LIBUNITY_CFLAGS $LIBUNITY_LIBS && _libunity=yes\n\t\t\t;;\n\tesac\nfi\nif test \"$_libunity\" = yes ; then\n\tif test \"$LIBUNITY_CFLAGS\" = \"\" || test \"$LIBUNITY_LIBS\" = \"\"; then\n\t\tLIBUNITY_LIBS=\"$LIBUNITY_LIBS `$_pkgconfig --libs 'unity > 3.8.1' 2>> \"$TMPLOG\"`\"\n\t\tLIBUNITY_CFLAGS=\"$LIBUNITY_CFLAGS `$_pkgconfig --cflags 'unity > 3.8.1' 2>> \"$TMPLOG\"`\"\n\tfi\n\tappend_var LIBS \"$LIBUNITY_LIBS\"\n\tappend_var CXXFLAGS \"$LIBUNITY_CFLAGS\"\nfi\ndefine_in_config_h_if_yes \"$_libunity\" 'USE_UNITY'\nfi\necho \"$_libunity\"\n\n#\n# Check for GTK if system dialogs are enabled\n#\nechocheck \"gtk\"\nif test \"$_unix\" = no || test \"$_dialogs\" = no || test \"$_pkg_config\" = no; then\n\t_gtk=no\nelse\nif test \"$_gtk\" = auto ; then\n\tcase $_host_os in\n\t\tmingw*)\n\t\t\t# gtk is not required on mingw\n\t\t\t_gtk=no\n\t\t\t;;\n\t\t*)\n\t\t\t# GTK has a lot of dependencies, update the libs and cflags var with them\n\t\t\tGTK_LIBS=\"$GTK_LIBS `$_pkgconfig --libs gtk+-3.0 2>> \"$TMPLOG\"`\"\n\t\t\tGTK_CFLAGS=\"$GTK_CFLAGS `$_pkgconfig --cflags gtk+-3.0 2>> \"$TMPLOG\"`\"\n\t\t\t_gtk=no\n\t\t\tcat > $TMPC << EOF\n#include <gtk/gtk.h>\nint main(void) {\n\tgtk_init_check(NULL, NULL);\n\treturn 0;\n}\nEOF\n\t\t\tcc_check $GTK_CFLAGS $GTK_LIBS && _gtk=yes\n\t\t\t;;\n\tesac\nfi\nif test \"$_gtk\" = yes ; then\n\tif test \"$GTK_CFLAGS\" = \"\" || test \"$GTK_LIBS\" = \"\"; then\n\t\tGTK_LIBS=\"$GTK_LIBS `$_pkgconfig --libs gtk+-3.0 2>> \"$TMPLOG\"`\"\n\t\tGTK_CFLAGS=\"$GTK_CFLAGS `$_pkgconfig --cflags gtk+-3.0 2>> \"$TMPLOG\"`\"\n\tfi\n\tappend_var LIBS \"$GTK_LIBS\"\n\tappend_var CXXFLAGS \"$GTK_CFLAGS\"\nfi\ndefine_in_config_h_if_yes \"$_gtk\" 'USE_GTK'\nfi\necho \"$_gtk\"\n\n#\n# Check for FreeType2 to be present\n#\nfind_freetype() {\n\t# Wrapper function which tries to find freetype\n\t# either by calling freetype-config or by using\n\t# pkg-config.\n\t# As of freetype-2.9.1 the freetype-config file\n\t# no longer gets installed by default.\n\tif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists freetype2; then\n\t\tFREETYPE2_LIBS=`$_pkgconfig --libs freetype2`\n\t\tFREETYPE2_CFLAGS=`$_pkgconfig --cflags freetype2`\n\t\tFREETYPE2_STATIC_LIBS=`$_pkgconfig --static --libs freetype2`\n\t\t_freetype_found=\"true\"\n\telse\n\t\t# Look for the freetype-config script\n\t\tfind_freetypeconfig\n\t\tif test -n \"$_freetypeconfig\"; then\n\t\t\t# Since 2.3.12, freetype-config prepends $SYSROOT to everything.\n\t\t\t# This means we can't pass it a --prefix that includes $SYSROOT.\n\t\t\tfreetypeprefix=\"$_freetypepath\"\n\t\t\tif test -n \"$SYSROOT\" -a \"$SYSROOT\" != \"/\"; then\n\t\t\t\tteststring=VeryImplausibleSysrootX1Y2Z3\n\t\t\t\tif ( env SYSROOT=/$teststring \"$_freetypeconfig\" --cflags | grep $teststring 2> /dev/null > /dev/null ); then\n\t\t\t\t\techo \"Adapting FreeType prefix to SYSROOT\" >> \"$TMPLOG\"\n\t\t\t\t\tfreetypeprefix=\"${freetypeprefix##$SYSROOT}\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tFREETYPE2_LIBS=`$_freetypeconfig --prefix=\"$freetypeprefix\" --libs`\n\t\t\tFREETYPE2_CFLAGS=`$_freetypeconfig --prefix=\"$freetypeprefix\" --cflags`\n\t\t\tFREETYPE2_STATIC_LIBS=`$_freetypeconfig --prefix=\"$freetypeprefix\" --static --libs 2>/dev/null`\n\t\t\t_freetype_found=\"true\"\n\t\tfi\n\tfi\n}\n\nif test \"$_freetype2\" != \"no\"; then\n\tfind_freetype\n\tif test $_freetype_found != true; then\n\t\t_freetype2=no\n\telse\n\t\tif test \"$_freetype2\" = \"auto\"; then\n\t\t\t_freetype2=no\n\n\t\t\tcat > $TMPC << EOF\n#include <ft2build.h>\n#include FT_FREETYPE_H\n\nint main(int argc, char *argv[]) {\n\tFT_Library library;\n\tFT_Error error = FT_Init_FreeType(&library);\n\tFT_Done_FreeType(library);\n}\nEOF\n\n\t\t\tcc_check_no_clean $FREETYPE2_CFLAGS $FREETYPE2_LIBS && _freetype2=yes\n\t\t\t# Modern freetype-config scripts accept --static to get all\n\t\t\t# required flags for static linking. We abuse this to detect\n\t\t\t# FreeType2 builds which are static themselves.\n\t\t\tif test \"$_freetype2\" != \"yes\"; then\n\t\t\t\tFREETYPE2_LIBS=\"$FREETYPE2_STATIC_LIBS\"\n\t\t\t\tcc_check_no_clean $FREETYPE2_CFLAGS $FREETYPE2_LIBS && _freetype2=yes\n\t\t\tfi\n\t\t\tcc_check_clean\n\t\tfi\n\n\t\tif test \"$_freetype2\" = \"yes\"; then\n\t\t\tappend_var LIBS \"$FREETYPE2_LIBS\"\n\t\t\tappend_var CXXFLAGS \"$FREETYPE2_CFLAGS\"\n\t\tfi\n\tfi\n\nfi\n\nechocheck \"FreeType2\"\necho \"$_freetype2\"\n\ndefine_in_config_if_yes \"$_freetype2\" \"USE_FREETYPE2\"\n\n\n#\n# Check for OpenGL (ES)\n#\nechocheck \"OpenGL\"\n\n_opengl_glad=no\n\nif test \"$_opengl_mode\" != none ; then\n\tcase $_backend in\n\t\tandroid)\n\t\t\t# We require API level 16 while GLES2 APIs have been added in level 8 so we are safe for compilation\n\t\t\t_opengl_mode=gles2\n\t\t\t_opengl_glad=yes\n\t\t\t;;\n\t\tios7)\n\t\t\t_opengl_mode=gles2\n\t\t\t_opengl_glad=yes\n\t\t\t;;\n\t\topenpandora)\n\t\t\t# Enable GLES only if user explicitely requested it\n\t\t\t# Backend is SDL based so GLAD is supported\n\t\t\ttest \"$_opengl_mode\" != \"gles\" && _opengl_mode=none\n\t\t\ttest \"$_opengl_mode\" != \"none\" && _opengl_glad=yes\n\t\t\t;;\n\t\tsdl)\n\t\t\t# This case is for pure SDL backend. Many platforms overload it and create a new backend\n\t\t\t# They still make use of SDL but it's handled below in the default case\n\t\t\t_opengl_glad=yes\n\t\t\tcase $_sdlversion in\n\t\t\t\t1.2.*)\n\t\t\t\t\t# Stock SDL 1.2 only supports OpenGL contexts.\n\t\t\t\t\t_opengl_mode=gl\n\t\t\t\t\t;;\n\n\t\t\t\t*)\n\t\t\t\t\t# SDL2 supports both OpenGL + OpenGL ES contexts.\n\t\t\t\t\t# However, macOS only allows OpenGL context creation at\n\t\t\t\t\t# this time, thus we limit us to OpenGL on that platform.\n\t\t\t\t\tcase $_host_os in\n\t\t\t\t\t\tdarwin*)\n\t\t\t\t\t\t\t_opengl_mode=gl\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\temscripten)\n\t\t\t\t\t\t\t_opengl_mode=gles2\n\t\t\t\t\t\t\t_opengl_glad=no # https://github.com/Dav1dde/glad-web/issues/12\n\t\t\t\t\t\t\tappend_var OPENGL_LIBS \"-s FULL_ES2=1 -s MAX_WEBGL_VERSION=1\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t# As SDL2 supports everything, let the user choose if he wants to\n\t\t\t\t\t\t\ttest \"$_opengl_mode\" = \"auto\" && _opengl_mode=any\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tsailfish)\n\t\t        _opengl_mode=gles2\n\t\t        _opengl_glad=yes\n\t\t\t;;\n\t\tswitch)\n\t\t\t_opengl_mode=gles2\n\t\t\t_opengl_glad=yes\n\t\t\t;;\n\t\t*)\n\t\t\t# On all other platforms, by default don't enable OpenGL\n\t\t\ttest \"$_opengl_mode\" = \"auto\" && _opengl_mode=none\n\t\t\t# We only support OpenGL on SDL based backends and Android (already handled)\n\t\t\ttest \"$_sdl\" = \"no\" && _opengl_mode=none\n\t\t\t# If it's a SDL based backend and OpenGL is really enabled, use GLAD\n\t\t\ttest \"$_opengl_mode\" != \"none\" && test \"$_sdl\" != \"no\" && _opengl_glad=yes\n\t\t\t;;\n\tesac\nfi\n\nif test \"$_opengl_glad\" = \"no\" -a \"$_opengl_mode\" != \"none\"; then\n\t# Try different header filenames\n\t# 1) GL/gl.h         This is usually used on POSIX and Windows systems\n\t# 2) OpenGL/gl.h     This is used on macOS\n\t# 3) GLES2/gl2.h     This is used for OpenGL ES 2.x\n\t# 3) GLES/gl.h       This is used for OpenGL ES 1.x\n\t_opengl_can_compile=no\n\tfor i in \"GL/gl.h\" \"OpenGL/gl.h\" \"GLES2/gl2.h\" \"GLES/gl.h\"; do\n\t\t# Test the current header for OpenGL\n\t\tif test \"$_opengl_mode\" = \"gl\" -o \"$_opengl_mode\" = \"any\" ; then\n\t\t\tcat > $TMPC << EOF\n#include <$i>\n#include <stdio.h>\nint main(void) { printf(\"ANTIVIRUS FALSE POSITIVE WORKAROUND\"); return GL_VERSION_1_1; }\nEOF\n\t\t\tcc_check $DEFINES $OPENGL_CFLAGS $OPENGL_LIBS && _opengl_can_compile=yes && break\n\t\t\t# Desktop often has multiple implementations GL/GLES/GLES2\n\t\tfi\n\n\t\t# Test the current header for OpenGL ES2\n\t\tif test \"$_opengl_mode\" = \"gles2\" -o \"$_opengl_mode\" = \"any\" ; then\n\t\t\tcat > $TMPC << EOF\n#include <$i>\nint main(void) { return GL_ES_VERSION_2_0; }\nEOF\n\t\t\tcc_check $DEFINES $OPENGL_CFLAGS $OPENGL_LIBS && _opengl_can_compile=yes && _opengl_mode=gles2 && break\n\t\tfi\n\n\t\t# Test the current header for OpenGL ES\n\t\tif test \"$_opengl_mode\" = \"gles\" -o \"$_opengl_mode\" = \"any\" ; then\n\t\t\tcat > $TMPC << EOF\n#include <$i>\nint main(void) { return GL_VERSION_ES_CM_1_0; }\nEOF\n\t\t\tcc_check $DEFINES $OPENGL_CFLAGS $OPENGL_LIBS && _opengl_can_compile=yes && _opengl_mode=gles && break\n\t\tfi\n\tdone\n\n\tif test \"$_opengl_can_compile\" = yes; then\n\t\t# Our simple test case\n\t\tcat > $TMPC << EOF\nint main(void) { return 0; }\nEOF\n\t\t_opengl_can_compile=no\n\t\t# Try different library names\n\t\tif test \"$_opengl_mode\" = \"gles2\" ; then\n\t\t\t# GLESv2    This is generally used by nearly all platforms for OpenGL ES 2\n\t\t\tfor lib in \"-lGLESv2\"; do\n\t\t\t\tif cc_check_no_clean $DEFINES $OPENGL_CFLAGS $OPENGL_LIBS $lib; then\n\t\t\t\t\tappend_var OPENGL_LIBS \"$lib\"\n\t\t\t\t\t_opengl_can_compile=yes\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\telif test \"$_opengl_mode\" = \"gles\" ; then\n\t\t\tOPENGL_LIBS=\"-lGLESv1_CM\"\n\t\t\tif cc_check_no_clean $DEFINES $OPENGL_CFLAGS $OPENGL_LIBS; then\n\t\t\t\t_opengl_can_compile=yes\n\t\t\tfi\n\t\telse\n\t\t\tcase $_host_os in\n\t\t\tdarwin*)\n\t\t\t\tOPENGL_LIBS=\"-framework OpenGL\"\n\t\t\t\t;;\n\t\t\tmingw*)\n\t\t\t\tOPENGL_LIBS=\"-lopengl32\"\n\t\t\t\t;;\n\t\t\tserenity*)\n\t\t\t\tOPENGL_LIBS=\"-lgl\"\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tOPENGL_LIBS=\"-lGL\"\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tif cc_check_no_clean $DEFINES $OPENGL_CFLAGS $OPENGL_LIBS; then\n\t\t\t\t_opengl_can_compile=yes\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif test \"$_opengl_can_compile\" = yes ; then\n\t\tappend_var INCLUDES \"$OPENGL_CFLAGS\"\n\t\tappend_var LIBS \"$OPENGL_LIBS\"\n\t\tappend_var LIBS_3D \"$OPENGL_LIBS\"\n\tfi\n\tcc_check_clean\nelif test \"$_opengl_glad\" = \"yes\"; then\n\t_opengl_can_compile=yes\nfi\n\n_opengl=yes\ncase $_opengl_mode in\n\tnone)\n\t\techo \"no\"\n\t\t_opengl=no\n\t\t;;\n\n\tany)\n\t\techo \"yes (runtime detection)\"\n\t\tadd_line_to_config_h \"#undef USE_GLES_MODE\"\n\t\t;;\n\n\tgl)\n\t\techo \"yes (OpenGL)\"\n\t\tadd_line_to_config_h \"#define USE_GLES_MODE 0\"\n\t\t;;\n\n\tgles)\n\t\techo \"yes (OpenGL ES)\"\n\t\tadd_line_to_config_h \"#define USE_GLES_MODE 1\"\n\t\t;;\n\n\tgles2)\n\t\techo \"yes (OpenGL ES 2)\"\n\t\tadd_line_to_config_h \"#define USE_GLES_MODE 2\"\n\t\t;;\n\n\t*)\n\t\techo \"invalid mode specification '$_opengl_mode'. Aborting.\"\n\t\texit 1\n\t\t;;\nesac\n\n\n#\n# Check for OpenGL (ES) for game\n#\nechocheck \"OpenGL for game\"\n\nif test \"$_opengl_can_compile\" = \"yes\"; then\n\tif test \"$_opengl_mode\" = \"gles\"; then\n\t\t# GLES 1.x is not supported for 3D games\n\t\t_opengl_game_classic=no\n\t\t_opengl_game_shaders=no\n\telif test \"$_opengl_mode\" = \"gles2\"; then\n\t\t# GLES2 doesn't support GL classic\n\t\t_opengl_game_classic=no\n\t\tif test \"$_opengl_game_shaders\" != \"no\"; then\n\t\t\t_opengl_game_shaders=yes\n\t\tfi\n\telse\n\t\t# We can compile GL desktop\n\t\tif test \"$_opengl_game_classic\" != \"no\"; then\n\t\t\t_opengl_game_classic=yes\n\t\tfi\n\t\tif test \"$_opengl_game_shaders\" != \"no\"; then\n\t\t\t_opengl_game_shaders=yes\n\t\tfi\n\tfi\nelse\n\t_opengl_game_classic=no\n\t_opengl_game_shaders=no\nfi\n\nif test \"$_opengl_game_shaders\" = \"yes\" ; then\n\tif test \"$_opengl_mode\" = \"gles2\" ; then\n\t\techo \"yes (OpenGL ES2)\"\n\telse\n\t\techo \"yes (shaders enabled)\"\n\tfi\nelif test \"$_opengl_game_classic\" = \"yes\" ; then\n\techo \"yes (shaders disabled)\"\nelse\n\techo \"no\"\nfi\n\ndefine_in_config_if_yes \"$_opengl\" \"USE_OPENGL\"\ndefine_in_config_if_yes \"$_opengl_glad\" \"USE_GLAD\"\ndefine_in_config_if_yes \"$_opengl_game_classic\" \"USE_OPENGL_GAME\"\ndefine_in_config_if_yes \"$_opengl_game_shaders\" \"USE_OPENGL_SHADERS\"\n\nif test \"$_dynamic_modules\" = yes ; then\n\tcase $_host_os in\n\t\tamigaos*)\n\t\t\t# miniGL on AmigaOS is a static library so don't link with it in plugins\n\t\t\t# instead link against it and include all symbols\n\t\t\tappend_var LIBS \"-Wl,-whole-archive $LIBS_3D -Wl,-no-whole-archive\"\n\t\t\tLIBS_3D=\n\t\t\t;;\n\t\t*)\n\t\t\t;;\n\tesac\nfi\n\n# If we have OpenGL libraries, then add them to plugins\n# so they could link\nif test -n \"$LIBS_3D\" ; then\n\t_mak_plugins=$_mak_plugins\"PLUGIN_LDFLAGS  += $LIBS_3D\"\nfi\n\n\n#\n# Check for Linux CD-ROM support\n#\ncase $_host_os in\n\t*linux*)\n\t\techocheck \"Linux CD-ROM\"\n\t\tlinuxcd=no\n\t\tcat > $TMPC << EOF\n#include <linux/cdrom.h>\n#include <sys/sysmacros.h>\n#include <sys/types.h>\nint main(void) {\n\tint x = CDROMREADAUDIO;\n\tdev_t dev;\n\treturn major(dev) + x;\n}\nEOF\n\t\tcc_check && linuxcd=yes\n\t\tdefine_in_config_if_yes \"$linuxcd\" 'USE_LINUXCD'\n\t\techo \"$linuxcd\"\n\t\t;;\nesac\n\n\n#\n# Check for nasm\n#\nif test \"$_have_x86\" = yes ; then\n\techocheck \"nasm\"\n\tif test \"$_nasm\" = no ; then\n\t\techo \"disabled\"\n\telse\n\t\tIFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=$SEPARATOR\n\n\t\tfor path_dir in $_nasmpath; do\n\t\t\tif test -x \"$path_dir/nasm$NATIVEEXEEXT\" ; then\n\t\t\t\tNASM=\"$path_dir/nasm$NATIVEEXEEXT\"\n\t\t\t\tNASMFLAGS=\"-O1 -g\"\n\t\t\t\techo $NASM\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\n\t\t# fallback to the nasm compatible yasm\n\t\tif test x$NASM = x -o x$NASM = x'\"$NASM\"'; then\n\t\t\tfor path_dir in $_nasmpath; do\n\t\t\t\tif test -x \"$path_dir/yasm$NATIVEEXEEXT\" ; then\n\t\t\t\t\tNASM=\"$path_dir/yasm$NATIVEEXEEXT\"\n\t\t\t\t\tNASMFLAGS=\"-a x86 -m x86\"\n\t\t\t\t\techo $NASM\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\n\t\tIFS=\"$ac_save_ifs\"\n\n\t\tif test x$NASM = x -o x$NASM = x'\"$NASM\"'; then\n\t\t\techo \"not found\"\n\t\t\t_nasm=no\n\t\telse\n\t\t\tcase $_host_os in\n\t\t\t\tdarwin*)\n\t\t\t\t\tappend_var NASMFLAGS \"-f macho\"\n\t\t\t\t;;\n\t\t\t\tmingw* | kolibrios)\n\t\t\t\t\tappend_var NASMFLAGS \"-f win32\"\n\t\t\t\t;;\n\t\t\t\tos2-emx*)\n\t\t\t\t\tappend_var NASMFLAGS \"-f aout\"\n\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tappend_var NASMFLAGS \"-f elf\"\n\t\t\t\t\tif $LD $LDFLAGS -Wl,--version 2>/dev/null | grep -q -e 'GNU gold'; then\n\t\t\t\t\t\t# gold throws an internal error when nasm uses dwarf, force older stabs in this case\n\t\t\t\t\t\tappend_var NASMFLAGS \"-F stabs\"\n\t\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tesac\n\t\t\t_nasm=yes\n\t\tfi\n\tfi\nfi\n\ndefine_in_config_if_yes $_nasm 'USE_NASM'\n\n#\n# Check for pandoc\n#\nif test \"$_pandoc\" = yes ; then\n\techocheck \"pandoc\"\n\n\tcommand -v pandoc >/dev/null 2>&1 && _pandoc=yes || _pandoc=no\n\n\techo $_pandoc\nfi\n\ndefine_in_config_if_yes $_pandoc 'USE_PANDOC'\n\n#\n# Check for curl\n#\nif test \"$_curl\" = yes ; then\n\techocheck \"curl\"\n\n\tcommand -v curl >/dev/null 2>&1 && _curl=yes || _curl=no\n\n\techo $_curl\nfi\n\ndefine_in_config_if_yes $_curl 'USE_CURL'\n\n#\n# Check for FriBidi\n#\nechocheck \"FriBidi\"\nif test \"$_pkg_config\" = \"yes\" && $_pkgconfig --exists fribidi; then\n\tappend_var FRIBIDI_LIBS \"`$_pkgconfig --libs fribidi`\"\n\tappend_var FRIBIDI_CFLAGS \"`$_pkgconfig --cflags fribidi`\"\nelse\n\tappend_var FRIBIDI_LIBS \"-lfribidi\"\nfi\nif test \"$_fribidi\" = auto ; then\n\t_fribidi=no\n\tcat > $TMPC << EOF\n#include <fribidi/fribidi.h>\nint main(void) { return 0; }\nEOF\n\tcc_check $FRIBIDI_CFLAGS $FRIBIDI_LIBS && _fribidi=yes\nfi\nif test \"$_fribidi\" = yes ; then\n\tappend_var LIBS \"$FRIBIDI_LIBS\"\n\tappend_var INCLUDES \"$FRIBIDI_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_fribidi\" 'USE_FRIBIDI'\necho \"$_fribidi\"\n\n#\n# Test C++11 Compatibility\n#\ndefine_in_config_if_yes \"$_test_cxx11\" 'ENABLE_TEST_CPP_11'\necho_n \"Test C++11 compatibility during compilation... \"\necho \"$_test_cxx11\"\n\n# Default to plain text output for pandoc\nif test -z \"$_pandocformat\" -o \"$_pandocformat\" = \"default\"; then\n\t_pandocformat=\"plain\"\nfi\n\nif test \"$_pandocext\" = \"default\"; then\n\tif test \"$_pandocformat\" = plain; then\n\t\t_pandocext=\"\"\n\telse\n\t\t_pandocext=\".$_pandocformat\"\n\tfi\nfi\n\n#\n# Check for Discord\n#\nechocheck \"Discord RPC\"\nif test \"$_discord\" = auto ; then\n\t_discord=no\n\tcat > $TMPC << EOF\n#include <discord_rpc.h>\nint main(void) { Discord_Shutdown(); return 0; }\nEOF\n\tcc_check $DISCORD_CFLAGS $DISCORD_LIBS -ldiscord-rpc && _discord=yes\nfi\nif test \"$_discord\" = yes ; then\n\tappend_var LIBS \"$DISCORD_LIBS -ldiscord-rpc\"\n\tappend_var INCLUDES \"$DISCORD_CFLAGS\"\nfi\ndefine_in_config_if_yes \"$_discord\" 'USE_DISCORD'\necho \"$_discord\"\n\n\n#\n# Check for ImGui\n#\nechocheck \"ImGui\"\n\nif test \"$_imgui\" != no ; then\n\tif test \"$_freetype2\" = yes ; then\n\t\tcase $_backend in\n\t\t\tsdl | sailfish)\n\t\t\t\tif test \"$_sdlMajorVersionNumber\" -ge 2 ; then\n\t\t\t\t\tcat > $TMPC << EOF\n#include \"SDL.h\"\n#if !SDL_VERSION_ATLEAST(2,0,18)\n#error Missing SDL_RenderGeometryRaw() function\n#endif\nint main(int argc, char *argv[]) { return 0; }\nEOF\n\t\t\t\t\tif cc_check $LIBS $SDL_LIBS $INCLUDES $SDL_CFLAGS; then\n\t\t\t\t\t\tdefine_in_config_if_yes yes 'USE_IMGUI_SDLRENDERER2'\n\t\t\t\t\t\t_imgui=yes\n\t\t\t\t\t\techo \"yes\"\n\t\t\t\t\telif test \"$_opengl\" = yes; then\n\t\t\t\t\t\t_imgui=yes\n\t\t\t\t\t\techo \"yes\"\n\t\t\t\t\telse\n\t\t\t\t\t\t_imgui=no\n\t\t\t\t\t\techo \"no (requires OpenGL or recent SDL)\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\t_imgui=no\n\t\t\t\t\techo \"no (backend unsupported)\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\t# For now, only SDL supports ImGui\n\t\t\t\t_imgui=no\n\t\t\t\techo \"no (backend unsupported)\"\n\t\t\t\t;;\n\t\tesac\n\telse\n\t\t_imgui=no\n\t\techo \"no (requires FreeType2)\"\n\tfi\nelse\n\techo \"$_imgui\"\nfi\n\n#\n# Enable vkeybd / event recorder\n#\ndefine_in_config_if_yes $_vkeybd 'ENABLE_VKEYBD'\ndefine_in_config_if_yes $_eventrec 'ENABLE_EVENTRECORDER'\n\n# Check whether to build translation support\n#\necho_n \"Building translation support... \"\ndefine_in_config_if_yes $_translation 'USE_TRANSLATION'\nif test \"$_translation\" = no ; then\n\techo \"no\"\nelse\n\techo_n \"yes (\"\n\n\tif test \"$_detectlang\" != yes ; then\n\t\tcat > $TMPC << EOF\n#include <locale.h>\nint main(void) { setlocale(LC_ALL, \"\"); return 0; }\nEOF\n\t\t_detectlang=no\n\t\tcc_check && _detectlang=yes\n\tfi\n\n\tdefine_in_config_h_if_yes $_detectlang 'USE_DETECTLANG'\n\tif test \"$_detectlang\" = yes ; then\n\t\techo \"with runtime language detection)\"\n\telse\n\t\techo \"without runtime language detection)\"\n\tfi\nfi\n\n#\n# Check whether to build taskbar integration support\n#\necho_n \"Building taskbar integration support... \"\nif test \"$_taskbar\" = \"no\"; then\n\techo \"no\"\nelse\n\tcase $_host_os in\n\tmingw*)\n\t\tappend_var LIBS \"-lole32 -luuid\"\n\t\techo \"win32\"\n\t\t_taskbar=yes\n\t\t;;\n\tdarwin*)\n\t\techo \"osx\"\n\t\t_taskbar=yes\n\t\t;;\n\t*)\n\t\tif test \"$_libunity\" = yes; then\n\t\t\techo \"unity\"\n\t\t\t_taskbar=yes\n\t\telse\n\t\t\techo \"no\"\n\t\t\t_taskbar=no\n\t\tfi\n\t\t;;\n\tesac\nfi\ndefine_in_config_if_yes $_taskbar 'USE_TASKBAR'\n\n#\n# Check whether to build system dialogs support\n#\necho_n \"Building system dialogs support... \"\nif test \"$_dialogs\" = \"no\"; then\n\techo \"no\"\nelse\n\tcase $_host_os in\n\tamigaos* | morphos*)\n\t\techo \"asl\"\n\t\t_dialogs=yes\n\t\t;;\n\tdarwin*)\n\t\techo \"osx\"\n\t\t_dialogs=yes\n\t\t;;\n\tmingw*)\n\t\tappend_var LIBS \"-lole32 -luuid\"\n\t\techo \"win32\"\n\t\t_dialogs=yes\n\t\t;;\n\t*)\n\t\tif test \"$_gtk\" = yes; then\n\t\t\techo \"gtk\"\n\t\t\t_dialogs=yes\n\t\telse\n\t\t\techo \"no\"\n\t\t\t_dialogs=no\n\t\tfi\n\t\t;;\n\tesac\nfi\ndefine_in_config_if_yes $_dialogs 'USE_SYSDIALOGS'\n\n#\n# Check whether to build TTS integration support\n#\necho_n \"Building text-to-speech support... \"\nif test \"$_tts\" = \"no\"; then\n\techo \"no\"\nelse\n\tcase $_host_os in\n\tlinux* | freebsd* | openbsd*)\n\t\techo \"speech dispatcher\"\n\t\t_tts=yes\n\t\tdefine_in_config_if_yes $_tts 'USE_SPEECH_DISPATCHER'\n\t\tappend_var LIBS '-lspeechd -lpthread'\n\t\t;;\n\tmingw*)\n\t\techo \"win32\"\n\t\t_tts=yes\n\t\tappend_var LIBS '-lsapi -lole32'\n\t\t;;\n\tdarwin*)\n\t\techo \"osx\"\n\t\t_tts=yes\n\t\t;;\n\t*)\n\t\techo \"no\"\n\t\t_tts=no\n\t\t;;\n\tesac\nfi\ndefine_in_config_if_yes $_tts 'USE_TTS'\n\n#\n# Check whether to build with TinyGL support\n#\necho_n \"Building TinyGL support... \"\nif test \"$_16bit\" = \"no\"; then\n\t_tinygl=no\nfi\necho \"$_tinygl\"\n\necho_n \"Building any 3D game... \"\nif (test \"$_tinygl\" = yes || test \"$_opengl_game_classic\" = yes || test \"$_opengl_game_shaders\" = yes); then\n\t_3d=yes\nelse\n\t_3d=no\nfi\necho \"$_3d\"\n\n#\n# Check whether to build Bink video support\n#\necho_n \"Building Bink video support... \"\ndefine_in_config_if_yes $_bink 'USE_BINK'\necho \"$_bink\"\n\n#\n# Check whether to build updates support\n#\necho_n \"Building updates support... \"\nif test \"$_updates\" = yes; then\n\tif test \"$_sparkle\" = yes; then\n\t\techo \"Sparkle\"\n\telse\n\t\t_updates=no;\n\t\techo \"$_updates\"\n\tfi\nelse\n\techo \"$_updates\"\nfi\ndefine_in_config_if_yes $_updates 'USE_UPDATES'\n\n#\n# Check whether to create a build with all resources files linked into the binary\n#\ndefine_in_config_if_yes \"$_builtin_resources\" 'BUILTIN_RESOURCES'\n\n#\n# Figure out installation directories\n#\ntest \"x$prefix\" = xNONE && prefix=/usr/local\ntest \"x$exec_prefix\" = xNONE && exec_prefix='${prefix}'\n\ncase $_host_os in\n\tandroid | ds | mingw*)\n\t\t# Android don't have a fixed prefix\n\t\t# Windows stores all the external data files in executable file.\n\t\t;;\n\t*)\n\t\tappend_var DEFINES \"-DDATA_PATH=\\\\\\\"$datadir\\\\\\\"\"\n\t\t;;\nesac\n\ncase $_host in\n\t3ds)\n\t\tappend_var DEFINES \"-DPLUGIN_DIRECTORY=\\\\\\\"$datadir/plugins\\\\\\\"\"\n\t\t;;\n\tandroid-*)\n\t\t# Android don't have a fixed prefix\n\t\t;;\n\tds)\n\t\t;;\n\t*-emscripten)\n\t\tappend_var DEFINES \"-DPLUGIN_DIRECTORY=\\\\\\\"$datadir/plugins\\\\\\\"\"\n\t\t;;\n\topenpandora)\n\t\t# Add ../plugins as a path so plugins can be found when running from a .PND.\n\t\tappend_var DEFINES \"-DPLUGIN_DIRECTORY=\\\\\\\"../plugins\\\\\\\"\"\n\t\t;;\n\tmaemo)\n\t\t# The Maemo apps want the plugins in the \"lib\" directory\n\t\t# without a scummvm sub directory.\n\t\tappend_var DEFINES \"-DPLUGIN_DIRECTORY=\\\\\\\"$libdir\\\\\\\"\"\n\t\t;;\n\tarm-*riscos)\n\t\tappend_var DEFINES \"-DPLUGIN_DIRECTORY=\\\\\\\"\\${datarootdir}/plugins\\\\\\\"\"\n\t\t;;\n\t*)\n\t\tappend_var DEFINES \"-DPLUGIN_DIRECTORY=\\\\\\\"$libdir/scummvm\\\\\\\"\"\n\t\t;;\nesac\n\n#\n# Set variables for profiling.\n# We need to do it here to prevent mess-ups with the tests e.g. on the PSP\n#\nif test \"$_enable_prof\" = yes ; then\n\tappend_var CXXFLAGS \"-pg\"\n\tappend_var LDFLAGS \"-pg\"\n\tappend_var DEFINES \"-DENABLE_PROFILING\"\nfi\n\necho_n \"Enabling Address Sanitizer... \"\n\nif test \"$_enable_asan\" = yes ; then\n\tif test \"$_enable_tsan\" = yes ; then\n\t\techo_n \"conflicting with tsan, disabling... \"\n\t\t_enable_asan=no\n\telse\n\t\tappend_var CXXFLAGS \"-fsanitize=address -fno-omit-frame-pointer\"\n\t\tappend_var LDFLAGS \"-fsanitize=address -fno-omit-frame-pointer\"\n\t\tappend_var PLUGIN_LDFLAGS \"-fsanitize=address -fno-omit-frame-pointer\"\n\tfi\nfi\necho \"$_enable_asan\"\n\necho_n \"Enabling Thread Sanitizer... \"\n\nif test \"$_enable_tsan\" = yes ; then\n\tappend_var CXXFLAGS \"-fsanitize=thread\"\n\tappend_var LDFLAGS \"-fsanitize=thread\"\n\tappend_var PLUGIN_LDFLAGS \"-fsanitize=thread\"\nfi\necho \"$_enable_tsan\"\n\necho_n \"Enabling Undefined Behavior Sanitizer... \"\n\nif test \"$_enable_ubsan\" = yes ; then\n\tappend_var CXXFLAGS \"-fsanitize=undefined\"\n\tappend_var LDFLAGS \"-fsanitize=undefined\"\n\tappend_var PLUGIN_LDFLAGS \"-fsanitize=undefined\"\nfi\necho \"$_enable_ubsan\"\n\n#\n# Whether to add compiler options and preprocessor defines for SIMD extensions\n#\n\n# Automatically detect if SSE2, NEON, AVX2 can be compiled (not if they can\n# be run at runtime)\ncase $_host_cpu in\n\tx86_64 | amd64)\n\t\tif test \"$_ext_sse2\" = auto ; then\n\t\t\t_ext_sse2=yes\n\t\tfi\n\t\tif test \"$_ext_avx2\" = auto ; then\n\t\t\t_ext_avx2=yes\n\t\tfi\n\t\t_ext_neon=no\n\t\t# SSE2 is always available on x86_64\n\t\tif ! (test \"$have_clang\" = yes && (test $_clang_major -gt 5 || (test $_clang_major -eq 5 && test $_clang_minor -gt 0))) &&\n\t\t   ! (test \"$have_gcc\"   = yes && (test $_cxx_major   -gt 4 || (test $_cxx_major   -eq 4 && test $_cxx_minor   -gt 9))); then\n\t\t\t# Need GCC 4.9+ or Clang 5.0+ for target pragma\n\t\t\t_ext_avx2=no\n\t\tfi\n\t\t;;\n\ti[3-6]86)\n\t\tif test \"$_ext_sse2\" = auto ; then\n\t\t\t_ext_sse2=yes\n\t\tfi\n\t\tif test \"$_ext_avx2\" = auto ; then\n\t\t\t_ext_avx2=no\n\t\tfi\n\t\t_ext_neon=no\n\t\tif ! (test \"$have_clang\" = yes && (test $_clang_major -gt 5 || (test $_clang_major -eq 5 && test $_clang_minor -gt 0))) &&\n\t\t   ! (test \"$have_gcc\"   = yes && (test $_cxx_major   -gt 4 || (test $_cxx_major   -eq 4 && test $_cxx_minor   -gt 9))); then\n\t\t\t# Need GCC 4.9+ or Clang 5.0+ for target pragma\n\t\t\t_ext_sse2=no\n\t\t\t_ext_avx2=no\n\t\tfi\n\t\t;;\n\taarch64)\n\t\tif test \"$_ext_neon\" = auto ; then\n\t\t\t_ext_neon=yes\n\t\tfi\n\t\t_ext_sse2=no\n\t\t_ext_avx2=no\n\t\t# On aarch64 neon is always available and doesn't need a target pragma\n\t\t;;\n\tarm*)\n\t\tif test \"$_ext_neon\" = auto ; then\n\t\t\t_ext_neon=no\n\t\tfi\n\t\t_ext_sse2=no\n\t\t_ext_avx2=no\n\t\tif ! (test \"$have_clang\" = yes && (test $_clang_major -gt 19 || (test $_clang_major -eq 19 && test $_clang_minor -gt 1))) &&\n\t\t   ! (test \"$have_gcc\"   = yes && (test $_cxx_major   -gt  4 || (test $_cxx_major   -eq  4 && test $_cxx_minor   -gt 9))); then\n\t\t\t# Need GCC 4.9+ or Clang 19.1+ for target pragma\n\t\t\t_ext_neon=no\n\t\tfi\n\t\t;;\n\t*)\n\t\t_ext_sse2=no\n\t\t_ext_avx2=no\n\t\t_ext_neon=no\n\t\t;;\nesac\n\ndefine_in_config_if_yes \"$_ext_sse2\" 'SCUMMVM_SSE2'\necho_n \"Enabling x86/amd64 SSE2... \"\necho \"$_ext_sse2\"\ndefine_in_config_if_yes \"$_ext_avx2\" 'SCUMMVM_AVX2'\necho_n \"Enabling x86/amd64 AVX2... \"\necho \"$_ext_avx2\"\ndefine_in_config_if_yes \"$_ext_neon\" 'SCUMMVM_NEON'\necho_n \"Enabling ARM NEON... \"\necho \"$_ext_neon\"\n\necho_n \"Backend... \"\necho_n \"$_backend\"\n\nif test \"$_sdl\" = yes -a -n \"$_sdlversion\"; then\n\tif test \"$_backend\" = sdl; then\n\t\techo_n \" ($_sdlversion)\"\n\telse\n\t\techo_n \" (SDL $_sdlversion)\"\n\tfi\nfi\n\nif test \"$_nasm\" = yes ; then\n\techo_n \", assembly routines\"\nfi\n\nif test \"$_16bit\" = yes ; then\n\techo_n \", 16bit color\"\nfi\n\nif test \"$_highres\" = yes ; then\n\techo_n \", high resolution\"\nfi\n\nif test \"$_tinygl\" = yes ; then\n\techo_n \", TinyGL\"\nfi\n\nif test \"$_savegame_timestamp\" = yes ; then\n\techo_n \", savegame timestamp\"\nfi\n\nif test \"$_build_scalers\" = yes ; then\n\tif test \"$_build_hq_scalers\" = yes ; then\n\t\tif test \"$_build_edge_scalers\" = yes ; then\n\t\t\techo_n \", HQ and Edge scalers\"\n\t\telse\n\t\t\techo_n \", HQ scalers\"\n\t\tfi\n\telse\n\t\techo_n \", scalers\"\n\tfi\nfi\n\nif test \"$_build_aspect\" = yes; then\n\techo_n \", aspect ratio correction\"\nfi\n\nif test \"$_mt32emu\" = yes ; then\n\techo_n \", MT-32 emulator\"\nfi\n\nif test \"$_lua\" = yes ; then\n\techo_n \", Lua\"\nfi\n\nif test \"$_nuked_opl\" = yes ; then\n\techo_n \", Nuked OPL emulator\"\nfi\n\nif test \"$_text_console\" = yes ; then\n\techo_n \", text console\"\n\tif test \"$_windows_console\" = no ; then\n\t\tcase \"$_host_os\" in\n\t\t\tmingw*)\n\t\t\t\t_windows_console=yes\n\t\t\t\t;;\n\t\tesac\n\tfi\nfi\n\nif test \"$_windows_console\" = yes ; then\n\tcase \"$_host_os\" in\n\t\tmingw*)\n\t\t\techo_n \", Windows console\"\n\t\t\t;;\n\tesac\nfi\n\nif test \"$_vkeybd\" = yes ; then\n\techo_n \", virtual keyboard\"\nfi\n\nif test \"$_eventrec\" = yes ; then\n\techo_n \", event recorder\"\nfi\n\nif test \"$_cloud\" = yes ; then\n\techo_n \", cloud\"\nfi\n\nif test \"$_dlc\" = yes ; then\n\techo_n \", dlc\"\nfi\n\nif test \"$_scummvmdlc\" = yes ; then\n\techo_n \", scummvmdlc\"\nfi\n\nif test \"$_enet\" = yes ; then\n\techo \", ENet\"\nelse\n\techo\nfi\n\n#\n# Some last-minute platform specific stuff, executed\n# after all of CXXFLAGS, LDFLAGS, LIBS etc. have been setup\n#\ncase $_host_os in\n\t3ds)\n\t\tif test \"$_freetype2\" = yes -a \"$_png\" = yes; then\n\t\t\tappend_var LIBS \"-lbz2\"\n\t\t\tappend_var LIBS \"-lpng\"\n\t\tfi\n\t\tif test \"$_tremor\" = yes -o \"$_flac\" = yes; then\n\t\t\tappend_var LIBS \"-logg\"\n\t\tfi\n\n\t\t# Moved -Wl,--gc-sections here to avoid it interfering with the library checks\n\t\tif test \"$_dynamic_modules\" = no ; then\n\t\t\tappend_var LDFLAGS \"-Wl,--gc-sections\"\n\t\telse\n\t\t\tappend_var LDFLAGS \"-Wl,--no-gc-sections\"\n\t\tfi\n\t\t;;\n\tamigaos*)\n\t\t# In release mode use LTO to improve performance\n\t\tif test \"$_release_build\" = yes; then\n\t\t\tappend_var CXXFLAGS \"-flto\"\n\t\t\tappend_var PLUGIN_LDFLAGS \"-flto=jobserver\"\n\t\tfi\n\t\t;;\n\tandroid)\n\t\t# Force treating unqualified char variables as signed by default.\n\t\t# NDK compiler for ARM will treat them as unsigned otherwise, which creates bugs in the code.\n\t\t# We apply this to all Android architectures (arm, arm64, and x86, x86-64)\n\t\t# albeit only the ARM architectures really required it (the others are not affected by this addition).\n\t\techo \"(Android) Treating char as signed char by default\"\n\t\tappend_var CXXFLAGS \"-fsigned-char\"\n\t\t# ssp at this point so the cxxtests link\n\t\tif test \"$_debug_build\" = yes; then\n\t\t\tappend_var CXXFLAGS \"-fstack-protector\"\n\t\telse\n\t\t\tappend_var CXXFLAGS \"-fno-stack-protector\"\n\t\tfi\n\n\t\tstatic_libs=''\n\t\tsystem_libs=''\n\t\tfor lib in $LIBS; do\n\t\t\tcase $lib in\n\t\t\t-lz|-lm|-ldl)\n\t\t\t\tsystem_libs=\"$system_libs $lib\"\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tstatic_libs=\"$static_libs $lib\"\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\n\t\tLIBS=\"-Wl,-Bstatic $static_libs -Wl,-Bdynamic $system_libs -llog -landroid -ljnigraphics -lEGL\"\n\t\t;;\n\tds)\n\t\t# Moved -Wl,--gc-sections here to avoid it interfering with the library checks\n\t\tif test \"$_dynamic_modules\" = no ; then\n\t\t\tappend_var LDFLAGS \"-Wl,--gc-sections\"\n\t\telse\n\t\t\tappend_var LDFLAGS \"-Wl,--no-gc-sections\"\n\t\t\t# TODO: automate this required 2 step linking phase\n\t\t\t# append_var LDFLAGS \"-Wl,--retain-symbols-file,ds.syms\"\n\t\tfi\n\t\t;;\n\temscripten)\n\t\tappend_var LDFLAGS \"--pre-js ./dists/emscripten/custom_shell-pre.js --post-js ./dists/emscripten/custom_shell-post.js --shell-file ./dists/emscripten/custom_shell.html\"\n\t\t# we remove some linker flags for libs which will be added by emscripten from emscripten-ports to avoid duplicate symbols\n\t\tif test \"${LDFLAGS#*-s USE_GIFLIB=1}\" != \"$LDFLAGS\"; then\n\t\t\tLIBS=`echo ${LIBS} | sed 's/-lgif//g'`\n\t\tfi\n\t\tif test \"${LDFLAGS#*-s USE_LIBJPEG=1}\" != \"$LDFLAGS\"; then\n    \t\tLIBS=`echo ${LIBS} | sed 's/-ljpeg//g'`\n\t\tfi\n\t\tif test \"${LDFLAGS#*-s USE_OGG=1}\" != \"$LDFLAGS\"; then\n\t\t\tLIBS=`echo ${LIBS} | sed 's/-logg//g'`\n\t\tfi\n\t\tif test \"${LDFLAGS#*-s USE_LIBPNG=1}\" != \"$LDFLAGS\"; then\n\t\t\tLIBS=`echo ${LIBS} | sed 's/-lpng -lz//g'`\n\t\tfi\n\t\tif test \"${LDFLAGS#*-s USE_VORBIS=1}\" != \"$LDFLAGS\"; then\n\t\t\tLIBS=`echo ${LIBS} | sed 's/-lvorbisfile//g;'`\n\t\t\tLIBS=`echo ${LIBS} | sed 's/-lvorbis//g'`\n\t\tfi\n\t\tif test \"${LDFLAGS#*-s USE_ZLIB=1}\" != \"$LDFLAGS\"; then\n\t\t\tLIBS=`echo ${LIBS} | sed 's/-lz//g'`\n\t\tfi\n\t\t;;\n\tkolibrios)\n\t\t# In reality we will build a DLL\n\t\tappend_var LDFLAGS \"-shared\"\n\t\t# kos32 toolchain only has libpng16\n\t\tLIBS=`echo ${LIBS} | sed 's/-lpng //g'`\n\t\t;;\n\tmingw*)\n\t\tif test \"$_windows_unicode\" = yes; then\n\t\t\tappend_var DEFINES \"-DUNICODE -D_UNICODE\"\n\t\tfi\n\t\t# SDL2 sets -mwindows flag by default in sdl2.pc\n\t\t# We need to directly replace this in the SDL pkg-config\n\t\tif test \"$_windows_console\" = yes; then\n\t\t\tLIBS=`echo $LIBS | sed -e 's/-mconsole//g' -e 's/-mwindows//g'`\n\t\tfi\n\t\t;;\n\triscos)\n\t\tif test \"$_dynamic_modules\" = no ; then\n\t\t\tappend_var LDFLAGS \"-Wl,--gc-sections\"\n\t\t\tappend_var CXXFLAGS \"-ffunction-sections\"\n\t\t\tappend_var CXXFLAGS \"-fdata-sections\"\n\t\telse\n\t\t\t# toolchain asks for gc-sections\n\t\t\tappend_var LDFLAGS \"-Wl,--no-gc-sections\"\n\t\t\tappend_var PLUGIN_LDFLAGS \"-Wl,--no-gc-sections\"\n\t\t\tappend_var CXXFLAGS \"-mlong-calls\"\n\t\tfi\n\t\t;;\n\tn64)\n\t\t# Move some libs down here, otherwise some symbols required by libvorbis aren't found\n\t\t# during linking stage\n\t\tappend_var LIBS \"-lc -lgcc -lnosys\"\n\t\t;;\n\tpsp2)\n\t\tif test \"$_dynamic_modules\" = no ; then\n\t\t\t#use link time optimization to further reduce exe size\n\t\t\tappend_var CXXFLAGS \"-flto\"\n\t\t\tappend_var LDFLAGS \"-flto=jobserver\"\n\t\t\t#use linker dead code elimination to further reduce exe size\n\t\t\tappend_var CXXFLAGS \"-ffunction-sections -fdata-sections\"\n\t\t\tappend_var LDFLAGS \"-Wl,--gc-sections\"\n\t\tfi\n\t\t;;\nesac\n\n\nif test \"$_werror_build\" = yes; then\n\t# --enable-Werror shouldn't be applied before being done testing all system\n\t# features and libraries. Otherwise, some of them could just end up being silently\n\t# disabled, when any small warning appears in a test.\n\tappend_var CXXFLAGS \"-Werror\"\nfi\n\n#\n# Engine selection\n#\n_engines_built_static=\"\"\n_engines_built_dynamic=\"\"\n_engines_skipped=\"\"\n\nawk -f \"$_srcdir/engines.awk\" -v _pass=pass2 < /dev/null\n\necho \"Creating config.h\"\ncat > config.h.new << EOF\n/* This file is automatically generated by configure */\n/* DO NOT EDIT MANUALLY */\n\n#ifndef CONFIG_H\n#define CONFIG_H\n\n$_config_h_data\n$(cat config.h.engines)\n\n#endif /* CONFIG_H */\nEOF\nrm -f config.h.engines\ncopy_if_changed config.h.new config.h\n\n\necho \"Creating config.mk\"\ncat > config.mk.new << EOF\n# -------- Generated by configure -----------\n\nSAVED_CONFIGFLAGS       := $SAVED_CONFIGFLAGS\nSAVED_AR                := $SAVED_AR\nSAVED_AS                := $SAVED_AS\nSAVED_ASFLAGS           := $SAVED_ASFLAGS\nSAVED_CPPFLAGS          := $SAVED_CPPFLAGS\nSAVED_CXX               := $SAVED_CXX\nSAVED_CXXFLAGS          := $SAVED_CXXFLAGS\nSAVED_DWP               := $SAVED_DWP\nSAVED_LD                := $SAVED_LD\nSAVED_LDFLAGS           := $SAVED_LDFLAGS\nSAVED_PKG_CONFIG_LIBDIR := $SAVED_PKG_CONFIG_LIBDIR\nSAVED_RANLIB            := $SAVED_RANLIB\nSAVED_SDL_CONFIG        := $SAVED_SDL_CONFIG\nSAVED_STRIP             := $SAVED_STRIP\nSAVED_WINDRES           := $SAVED_WINDRES\nSAVED_WINDRESFLAGS      := $SAVED_WINDRESFLAGS\n\nCXX := $CXX\nCXXFLAGS := $CXXFLAGS\nLD := $LD\nLIBS += $LIBS\nRANLIB := $_ranlib\nSTRIP := $_strip\nAR := $_ar\nAS := $_as\nASFLAGS := $ASFLAGS\nDWP := $_dwp\nWINDRES := $_windres\nLDD := $_ldd\nWINDRESFLAGS := $WINDRESFLAGS\nSTAGINGPATH=$_stagingpath\nAMIGAOSPATH=$_amigaospath\nMORPHOSPATH=$_morphospath\nSTATICLIBPATH=$_staticlibpath\nXCODETOOLSPATH=$_xcodetoolspath\nSPARKLEPATH=$_sparklepath\nSDLCONFIG=$_sdlconfig\n\nABI := $ABI\n\nBACKEND := $_backend\nMODULES += $MODULES\nMODULE_DIRS += $MODULE_DIRS\nEXEPRE := $HOSTEXEPRE\nEXEEXT := $HOSTEXEEXT\nNASM := $NASM\nNASMFLAGS := $NASMFLAGS\nPANDOC := pandoc\nCURL := curl\nPANDOCFORMAT := $_pandocformat\nPANDOCEXT := $_pandocext\nMANUALVERSION := $_manualversion\nZLIB_LIBS := $ZLIB_LIBS\nZLIB_CFLAGS := $ZLIB_CFLAGS\n\nprefix = $prefix\nexec_prefix = $exec_prefix\nbindir = $bindir\nlibdir = $libdir\ndatarootdir = $datarootdir\ndatadir = $datadir\nmandir = $mandir\ndocdir = $docdir\n\n$_config_mk_data\n$(cat config.mk.engines)\n\nINCLUDES += $INCLUDES\nOBJS += $OBJS\nDEFINES += $DEFINES\nLDFLAGS += $LDFLAGS\n\nPLUGIN_LDFLAGS = $PLUGIN_LDFLAGS\n$_mak_plugins\n\nport_mk = $_port_mk\nEOF\nrm -f config.mk.engines\ncopy_if_changed config.mk.new config.mk config.h\n\n#\n# Create a custom Makefile when building outside the source tree\n# TODO: Add a better check than just looking for 'Makefile'\n#\nif test ! -f Makefile.common ; then\necho \"Creating Makefile\"\n\ncat > Makefile.new << EOF\n# -------- Generated by configure -----------\nsrcdir = $_srcdir\nvpath %.h \\$(srcdir)\nvpath %.cpp \\$(srcdir)\nvpath %.c \\$(srcdir)\nvpath %.m \\$(srcdir)\nvpath %.mm \\$(srcdir)\nvpath %.asm \\$(srcdir)\nvpath %.s \\$(srcdir)\nvpath %.S \\$(srcdir)\nvpath %.rc \\$(srcdir)\nvpath %.md \\$(srcdir)\ninclude \\$(srcdir)/Makefile\nEOF\ncopy_if_changed Makefile.new Makefile\n\nfi\n\ncopy_if_changed engines/engines.mk.new engines/engines.mk\ncopy_if_changed engines/detection_table.h.new engines/detection_table.h\ncopy_if_changed engines/plugins_table.h.new engines/plugins_table.h\n\ntouch configure.stamp\n"
        },
        {
          "name": "devtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "dists",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "engines.awk",
          "type": "blob",
          "size": 14.810546875,
          "content": "#!/bin/awk -f\n#\n# engines.awk -- processor for configure.engine directives\n#\n# ScummVM is the legal property of its developers, whose names\n# are too numerous to list here. Please refer to the COPYRIGHT\n# file distributed with this source distribution.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nfunction get_values(var, arr) {\n\treturn split(ENVIRON[var], arr, \" \")\n}\n\n# Add a line of data to config.mk.\nfunction add_line_to_config_mk(line) {\n\tprint(line) >> config_mk\n}\n\nfunction add_to_config_h_if_yes(value, define) {\n\tif (value == \"yes\")\n\t\tprint(define) >> config_h\n\telse\n\t\tprint(\"/* \" define \" */\") >> config_h\n}\n\nfunction add_line_to_config_h(line) {\n\tprint(line) >> config_h\n}\n\n#\n# Feature handling functions\n#\n\n# Get the name of the feature\nfunction get_feature_name(feature) {\n\treturn ENVIRON[\"_feature_\" feature \"_name\"]\n}\n\n# Check whether the feature is enabled\nfunction get_feature_state(feature) {\n\tget_values(\"_feature_\" feature \"_settings\", settings)\n\tfor (i in settings) {\n\t\tif (ENVIRON[settings[i]] == \"yes\" || ENVIRON[settings[i]] == \"auto\")\n\t\t\treturn \"yes\"\n\t}\n\treturn \"no\"\n}\n\nfunction have_feature(feature) {\n\tif (length(ENVIRON[\"_feature_\" feature \"_settings\"]) == 0)\n\t\treturn \"no\"\n\n\treturn \"yes\"\n}\n\nfunction disable_feature(feature) {\n\tENVIRON[\"_feature_\" feature \"_settings\"] = \"no\"\n\n\t_features_disabled = _features_disabled feature \" \"\n}\n\n#\n# Engine handling functions\n#\n\n# Get the name of the engine\nfunction get_engine_name(engine) {\n\treturn ENVIRON[\"_engine_\" engine \"_name\"]\n}\n\n# Will this engine be built?\nfunction get_engine_build(engine) {\n\treturn ENVIRON[\"_engine_\" engine \"_build\"]\n}\n\n# Was this engine set to be built by default?\nfunction get_engine_build_default(engine) {\n\treturn ENVIRON[\"_engine_\" engine \"_build_default\"]\n}\n\n# Get the subengines\nfunction get_engine_subengines(engine, subengines) {\n\treturn get_values(\"_engine_\" engine \"_subengines\", subengines)\n}\n\n# Get the dependencies\nfunction get_engine_dependencies(engine, deps) {\n\treturn get_values(\"_engine_\" engine \"_deps\", deps)\n}\n\n# Get the components\nfunction get_engine_components(engine, deps) {\n\treturn get_values(\"_engine_\" engine \"_components\", components)\n}\n\n# Get the base engine game support description\nfunction get_engine_base(engine) {\n\treturn ENVIRON[\"_engine_\" engine \"_base\"]\n}\n\n# Ask if this is a subengine\nfunction get_engine_sub(engine) {\n\tsubeng = ENVIRON[\"_engine_\" engine \"_sub\"]\n\tif (subeng == \"\")\n\t\tsubeng = \"no\"\n\treturn subeng\n}\n\n# Get a subengine's parent (undefined for non-subengines)\nfunction get_subengine_parent(engine) {\n\treturn ENVIRON[\"_engine_\" engine \"_parent\"]\n}\n\nfunction disable_engine(engine) {\n\tENVIRON[\"_engine_\" engine \"_build\"] = \"no\"\n}\n\nfunction enable_component(comp) {\n\tENVIRON[\"_component_\" comp \"_enabled\"] = \"yes\"\n}\n\nfunction get_component_enabled(comp) {\n\treturn ENVIRON[\"_component_\" comp \"_enabled\"]\n}\n\nfunction get_component_define(comp) {\n\treturn ENVIRON[\"_component_\" comp \"_define\"]\n}\n\nfunction have_component(comp) {\n\tif (length(ENVIRON[\"_component_\" comp \"_define\"]) == 0)\n\t\treturn \"no\"\n\n\treturn \"yes\"\n}\n\nfunction check_engine_deps(engine) {\n\tunmet_deps = \"\"\n\n\t# Check whether the engine is enabled\n\tif (get_engine_build(engine) != \"no\") {\n\t\t# Collect unmet dependencies\n\t\tdepcount = get_engine_dependencies(engine, deps)\n\t\tfor (d = 1; d <= depcount; d++) {\n\t\t\tif (get_feature_state(deps[d]) == \"no\")\n\t\t\t\tunmet_deps = unmet_deps get_feature_name(deps[d]) \" \"\n\t\t}\n\n\t\t# Check whether there is any unmet dependency\n\t\tif (unmet_deps) {\n\t\t\tprint(\"WARNING: Disabling engine \" get_engine_name(engine) \" because the following dependencies are unmet: \" unmet_deps)\n\t\t\tdisable_engine(engine)\n\t\t}\n\t}\n}\n\nfunction check_engine_components(engine) {\n\t# Check whether the engine is enabled\n\tif (get_engine_build(engine) != \"no\") {\n\t\t# Collect components\n\t\tcompcount = get_engine_components(engine, components)\n\t\tfor (c = 1; c <= compcount; c++) {\n\t\t\tif (get_feature_state(components[c]) != \"no\")\n\t\t\t\tenable_component(components[c])\n\t\t}\n\n\t\t# And collect those features that also declared as components\n\t\tdepcount = get_engine_dependencies(engine, deps)\n\t\tfor (d = 1; d <= depcount; d++) {\n\t\t\tif (have_component(deps[d]) == \"yes\")\n\t\t\t\tenable_component(deps[d])\n\t\t}\n\t}\n}\n\n# Prepare the strings about the engines to build\nfunction prepare_engine_build_strings(engine) {\n\tif (string = get_engine_build_string(engine, \"static\"))\n\t\t_engines_built_static[++_static] = string\n\n\tif (string = get_engine_build_string(engine, \"dynamic\"))\n\t\t_engines_built_dynamic[++_dynamic] = string\n\n\tif (string = get_engine_build_string(engine, \"no\"))\n\t\t_engines_skipped[++_skipped] = string\n\n\tif (string = get_engine_build_string(engine, \"wip\"))\n\t\t_engines_built_wip[++_wip] = string\n}\n\n# Get the string about building an engine\nfunction get_engine_build_string(engine, request_status) {\n\tengine_build = get_engine_build(engine)\n\tengine_build_default = get_engine_build_default(engine)\n\tshow = 0\n\n\t# Convert static/dynamic to yes to ease the check of subengines\n\tif (engine_build == \"no\")\n\t\tsubengine_filter = \"no\"\n\telse\n\t\tsubengine_filter = \"yes\"\n\n\t# Check if the current engine should be shown for the current status\n\tif (engine_build == request_status) {\n\t\tshow = 1\n\t} else {\n\t\t# Test for disabled sub-engines\n\t\tif (request_status == \"no\") {\n\t\t\tget_engine_subengines(engine, subengines)\n\t\t\tfor (subeng in subengines) {\n\t\t\t\tif (get_engine_build(subengines[subeng]) == \"no\") {\n\t\t\t\t\t# In this case we to display _disabled_ subengines\n\t\t\t\t\tsubengine_filter = \"no\"\n\t\t\t\t\tshow = 1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# Test for enabled wip sub-engines\n\t\tif (request_status == \"wip\") {\n\t\t\tget_engine_subengines(engine, subengines)\n\t\t\tfor (subeng in subengines) {\n\t\t\t\tif (get_engine_build(subengines[subeng]) != \"no\" && get_engine_build_default(subengines[subeng]) == \"no\") {\n\t\t\t\t\tshow = 1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t# Check if it is a wip engine\n\tif (request_status == \"wip\" && engine_build != \"no\" && engine_build_default == \"no\")\n\t\tshow = 1\n\n\t# The engine should be shown, build the string\n\tif (show)\n\t\treturn get_engine_name(engine) \" \" get_subengines_build_string(engine, subengine_filter, request_status)\n}\n\n# Get the string about building subengines\nfunction get_subengines_build_string(parent_engine, subengine_filter, request_status) {\n\tparent_engine_build_default = get_engine_build_default(parent_engine)\n\tsubengine_string = \"\"\n\n\t# If the base engine isn't built at all, no need to list subengines\n\t# in any of the possible categories.\n\tif (get_engine_build(parent_engine) == \"no\")\n\t\treturn\n\n\tall = 1\n\tsubeng_count = get_engine_subengines(parent_engine, subengines)\n\t# If there are no subengines, never display \"[all games]\" (for brevity).\n\tif (!subeng_count)\n\t\tall = 0\n\t# If the base engine does not fit the category we're displaying here\n\t# (WIP or Skipped), we should never show \"[all games]\"\n\tif (request_status == \"wip\" && parent_engine_build_default == \"yes\")\n\t\tall = 0\n\tif (request_status == \"no\") {\n\t\t# If we're here, the parent engine is built, so no need to check that.\n\t\tall = 0\n\t}\n\n\n\t# In the static/dynamic categories, also display the engine's base games.\n\tif (subeng_count && request_status != \"no\" && request_status != \"wip\")\n\t\tsubengine_string = \"[\" get_engine_base(parent_engine) \"]\"\n\n\tfor (s = 1; s <= subeng_count; s++) {\n\t\tsubeng = subengines[s]\n\t\tsubengine_build = get_engine_build(subeng)\n\t\tsubengine_build_default = get_engine_build_default(subeng)\n\n\t\t# Display this subengine if it matches the filter, unless it is\n\t\t# a stable subengine in the WIP request.\n\t\tif ((subengine_build == subengine_filter) && !(request_status == \"wip\" && subengine_build_default == \"yes\")) {\n\t\t\tname = \"[\" get_engine_name(subeng) \"]\"\n\t\t\tif (subengine_string)\n\t\t\t\tsubengine_string = subengine_string \" \" name\n\t\t\telse\n\t\t\t\tsubengine_string = name\n\t\t} else {\n\t\t\tall = 0\n\t\t}\n\t}\n\n\t# Summarize the full list, where applicable\n\tif (all)\n\t\tsubengine_string = \"[all games]\"\n\n\treturn subengine_string\n}\n\nfunction print_engines(headline, engines, count) {\n\tif (!count)\n\t\treturn\n\tprint(\"\\n\" headline)\n\tfor (e = 1; e <= count; e++)\n\t\tprint(\"    \" engines[e])\n}\n\nfunction print_components(headline, components, count) {\n\tif (!count)\n\t\treturn\n\tprint(\"\\n\" headline)\n\tfor (c = 1; c <= count; c++)\n\t\tprint(\"    \" get_feature_name(components[c]))\n}\n\nBEGIN {\n\tconfig_mk = \"config.mk.engines\"\n\tconfig_h = \"config.h.engines\"\n\n\tif (_pass == \"pass1\")\n\t\tpass = 1\n\telse\n\t\tpass = 2\n\n\tif (pass == 2) {\n\t\t# Clear previous contents if any\n\t\tprintf(\"\") > config_h\n\t\tprintf(\"\") > config_mk\n\t}\n}\n\nEND {\n\tengine_count = get_values(\"_engines\", engines)\n\tfor (e = 1; e <= engine_count; e++) {\n\t\tengine = engines[e]\n\n\t\tif (pass == 2)\n\t\t\tcheck_engine_deps(engine)\n\n\t\tcheck_engine_components(engine)\n\n\t\tif (get_engine_sub(engine) == \"no\") {\n\t\t\t# It's a main engine\n\t\t\tif (get_engine_build(engine) == \"no\") {\n\t\t\t\tisbuilt = \"no\"\n\t\t\t} else {\n\t\t\t\t# If dynamic plugins aren't supported, mark\n\t\t\t\t# all the engines as static\n\t\t\t\tif (ENVIRON[\"_dynamic_modules\"] == \"no\") {\n\t\t\t\t\tENVIRON[\"_engine_\" engine \"_build\"] = \"static\"\n\t\t\t\t} else {\n\t\t\t\t\t# If it wasn't explicitly marked as static or\n\t\t\t\t\t# dynamic, use the configured default\n\t\t\t\t\tif (get_engine_build(engine) == \"yes\")\n\t\t\t\t\t\tENVIRON[\"_engine_\" engine \"_build\"] = ENVIRON[\"_plugins_default\"]\n\t\t\t\t}\n\n\t\t\t\t# Prepare the defines\n\t\t\t\tif (get_engine_build(engine) == \"dynamic\") {\n\t\t\t\t\tisbuilt = \"DYNAMIC_PLUGIN\"\n\t\t\t\t} else {\n\t\t\t\t\tENVIRON[\"_engine_\" engine \"_build\"] = \"static\"\n\t\t\t\t\tisbuilt = \"STATIC_PLUGIN\"\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t# It's a subengine, just say yes or no\n\t\t\tif (get_engine_build(engine) == \"no\")\n\t\t\t\tisbuilt = \"no\"\n\t\t\telse\n\t\t\t\tisbuilt = \"1\"\n\t\t}\n\n\t\tif (pass == 2) {\n\t\t\t# Save the settings\n\t\t\tdefname = \"ENABLE_\" toupper(engine)\n\t\t\tif (isbuilt == \"no\")\n\t\t\t\tadd_line_to_config_mk(\"# \" defname)\n\t\t\telse\n\t\t\t\tadd_line_to_config_mk(defname \" = \" isbuilt)\n\t\t}\n\t}\n\n\tif (pass == 1) {\n\t\tcomponents_count = get_values(\"_components\", components)\n\n\t\tfor (c = 1; c <= components_count; c++) {\n\t\t\tif (get_component_enabled(components[c]) != \"yes\") {\n\t\t\t\tif (have_feature(components[c])) {\n\t\t\t\t\tif (get_feature_state(components[c]) == \"yes\" || get_feature_state(components[c]) == \"auto\") {\n\t\t\t\t\t\tdisable_feature(components[c])\n\t\t\t\t\t\tprint(\"   Feature \" get_feature_name(components[c]) \" is disabled as unused by enabled engines\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprint(\"_features_disabled=\\\"\" _features_disabled \"\\\"\") > \"engines.awk.out\"\n\n\t\texit 0\n\t}\n\n\n\t# Sort engines to place our headline engine at start...\n\t# No technical reason, just historical convention\n\theadline_engine = \"scumm\"\n\tsorted_engines[++sorted] = headline_engine\n\tfor (e = 1; e <= engine_count; e++) {\n\t\tif (engines[e] != headline_engine)\n\t\t\tsorted_engines[++sorted] = engines[e]\n\t}\n\n\t# Prepare the information to be shown\n\tfor (e = 1; e <= engine_count; e++) {\n\t\tengine = sorted_engines[e]\n\t\tif (get_engine_sub(engine) == \"no\") {\n\t\t\t# It's a main engine\n\t\t\tprepare_engine_build_strings(engine)\n\t\t}\n\t}\n\n\t#\n\t# Detection of WIP/unstable engines\n\t#\n\tfor (e in engines) {\n\t\tengine = engines[e]\n\t\tif (get_engine_build(engine) != \"no\" && get_engine_build_default(engine) == \"no\") {\n\t\t\t_tainted_build = \"yes\"\n\t\t\tbreak\n\t\t}\n\t}\n\n\t#\n\t# Process components\n\t#\n\tadd_line_to_config_h(\"\\n/* components */\")\n\tadd_line_to_config_mk(\"\\n# components\")\n\tcomponents_count = get_values(\"_components\", components)\n\tfor (c = 1; c <= components_count; c++) {\n\t\tdefine = get_component_define(components[c])\n\t\tadd_to_config_h_if_yes(get_component_enabled(components[c]), \"#define \" define)\n\n\t\tif (get_component_enabled(components[c]) == \"yes\") {\n\t\t\tadd_line_to_config_mk(define \"=1\")\n\t\t\t_comp_enabled[++_comp_enabled_count] = components[c]\n\t\t} else {\n\t\t\tadd_line_to_config_mk(\"# \" define)\n\t\t\t_comp_disabled[++_comp_disabled_count] = components[c]\n\t\t}\n\t}\n\tadd_line_to_config_h(\"/* end of components */\")\n\tadd_line_to_config_mk(\"# end of components\")\n\n\n\tadd_to_config_h_if_yes(_tainted_build, \"#define TAINTED_BUILD\")\n\tprint_engines(\"Engines (builtin):\", _engines_built_static, _static)\n\tprint_engines(\"Engines (plugins):\", _engines_built_dynamic, _dynamic)\n\tprint_engines(\"Engines Skipped:\", _engines_skipped, _skipped)\n\tprint_engines(\"WARNING: This ScummVM build contains the following UNSTABLE engines:\", _engines_built_wip, _wip)\n\n\tprint_components(\"Components Enabled: \", _comp_enabled, _comp_enabled_count)\n\tprint_components(\"Components Disabled: \", _comp_disabled, _comp_disabled_count)\n\n\t# Ensure engines folder exists prior to trying to generate\n\t# files into it (used for out-of-tree-builds)\n\tsystem(\"mkdir -p engines\")\n\n\tprint(\"\")\n\tprint(\"Creating engines/engines.mk\")\n\tengines_mk = \"engines/engines.mk.new\"\n\tprint(\"# This file is automatically generated by configure\\n\" \\\n\t      \"# DO NOT EDIT MANUALLY\\n\" \\\n\t      \"# This file is being included by \\\"Makefile.common\\\"\") > engines_mk\n\n\tfor (e = 1; e <= engine_count; e++) {\n\t\tengine = sorted_engines[e]\n\t\tj = toupper(engine)\n\t\tif (get_engine_sub(engine) == \"no\") {\n\t\t\t# main engine\n\t\t\tprint(\"\\n\" \\\n\t\t\t      \"ifdef ENABLE_\" j \"\\n\" \\\n\t\t\t      \"DEFINES += -DENABLE_\" j \"=$(ENABLE_\" j \")\\n\" \\\n\t\t\t      \"MODULES += engines/\" engine) >> engines_mk\n\n\t\t\tsubeng_count = get_engine_subengines(engine, subengines)\n\t\t\tfor (s = 1; s <= subeng_count; s++) {\n\t\t\t\tk = toupper(subengines[s])\n\t\t\t\tprint(\"\\n\" \\\n\t\t\t\t      \"ifdef ENABLE_\" k \"\\n\" \\\n\t\t\t\t      \"DEFINES += -DENABLE_\" k \"\\n\" \\\n\t\t\t\t      \"endif\") >> engines_mk\n\t\t\t}\n\n\t\t\tprint(\"endif\") >> engines_mk\n\t\t}\n\t}\n\n\t# Name which is suffixed to each detection plugin\n\tdetectId = \"_DETECTION\"\n\tdet_table = \"engines/detection_table.h.new\"\n\n\tprint(\"Creating engines/detection_table.h\")\n\tprint(\"/* This file is automatically generated by configure */\\n\" \\\n\t      \"/* DO NOT EDIT MANUALLY */\\n\" \\\n\t      \"// This file is being included by \\\"base/plugins.cpp\\\"\") > det_table\n\n\tfor (e = 1; e <= engine_count; e++) {\n\t\tengine = sorted_engines[e]\n\t\tif (get_engine_sub(engine) == \"no\") {\n\t\t\tj = toupper(engine)\n\t\t\tdetectEngine = j detectId\n\t\t\tprint(\"#if defined(ENABLE_\" j \") || defined(DETECTION_FULL)\\n\" \\\n\t\t\t      \"LINK_PLUGIN(\" j detectId \")\\n\" \\\n\t\t\t      \"#endif\") >> det_table\n\t\t}\n\t}\n\n\tplugins_table = \"engines/plugins_table.h.new\"\n\tprint(\"Creating engines/plugins_table.h\")\n\tprint(\"/* This file is automatically generated by configure */\\n\" \\\n\t      \"/* DO NOT EDIT MANUALLY */\\n\" \\\n\t      \"// This file is being included by \\\"base/plugins.cpp\\\"\") > plugins_table\n\n\tfor (e = 1; e <= engine_count; e++) {\n\t\tengine = sorted_engines[e]\n\t\tif (get_engine_sub(engine) == \"no\") {\n\t\t\tj = toupper(engine)\n\t\t\tprint(\"#if PLUGIN_ENABLED_STATIC(\" j \")\\n\" \\\n\t\t\t      \"LINK_PLUGIN(\" j \")\\n\" \\\n\t\t\t      \"#endif\") >> plugins_table\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "engines",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "math",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin.exp",
          "type": "blob",
          "size": 0.07421875,
          "content": "_PLUGIN_getVersion\n_PLUGIN_getType\n_PLUGIN_getTypeVersion\n_PLUGIN_getObject\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "ports.mk",
          "type": "blob",
          "size": 29.048828125,
          "content": "# This file contains port specific Makefile rules. It is automatically\n# included by the default (main) Makefile.\n#\n\n#\n# POSIX specific\n#\ninstall-data:\n\t$(INSTALL) -d \"$(DESTDIR)$(mandir)/man6/\"\n\t$(INSTALL) -c -m 644 \"$(srcdir)/dists/scummvm.6\" \"$(DESTDIR)$(mandir)/man6/scummvm.6\"\n\t$(INSTALL) -d \"$(DESTDIR)$(datarootdir)/pixmaps/\"\n\t$(INSTALL) -c -m 644 \"$(srcdir)/icons/scummvm.xpm\" \"$(DESTDIR)$(datarootdir)/pixmaps/org.scummvm.scummvm.xpm\"\n\t$(INSTALL) -d \"$(DESTDIR)$(datarootdir)/icons/hicolor/scalable/apps/\"\n\t$(INSTALL) -c -m 644 \"$(srcdir)/icons/scummvm.svg\" \"$(DESTDIR)$(datarootdir)/icons/hicolor/scalable/apps/org.scummvm.scummvm.svg\"\n\t$(INSTALL) -d \"$(DESTDIR)$(docdir)\"\n\t$(INSTALL) -c -m 644 $(DIST_FILES_DOCS) \"$(DESTDIR)$(docdir)\"\n\t$(INSTALL) -d \"$(DESTDIR)$(datadir)\"\n\t$(INSTALL) -c -m 644 $(DIST_FILES_THEMES) $(DIST_FILES_NETWORKING) $(DIST_FILES_VKEYBD) $(DIST_FILES_ENGINEDATA) $(DIST_FILES_ENGINEDATA_BIG)  $(DIST_FILES_SOUNDFONTS) \"$(DESTDIR)$(datadir)/\"\n\t$(INSTALL) -d \"$(DESTDIR)$(datarootdir)/applications\"\n\t$(INSTALL) -c -m 644 \"$(srcdir)/dists/org.scummvm.scummvm.desktop\" \"$(DESTDIR)$(datarootdir)/applications/org.scummvm.scummvm.desktop\"\n\t$(INSTALL) -d \"$(DESTDIR)$(datarootdir)/metainfo\"\n\t$(INSTALL) -c -m 644 \"$(srcdir)/dists/org.scummvm.scummvm.metainfo.xml\" \"$(DESTDIR)$(datarootdir)/metainfo/org.scummvm.scummvm.metainfo.xml\"\nifneq ($(DIST_FILES_SHADERS),)\n\t$(INSTALL) -d \"$(DESTDIR)$(datadir)/shaders\"\n\t$(INSTALL) -c -m 644 $(DIST_FILES_SHADERS) \"$(DESTDIR)$(datadir)/shaders\"\nendif\n\ninstall: $(EXECUTABLE) $(PLUGINS) install-data\n\t$(INSTALL) -d \"$(DESTDIR)$(bindir)\"\n\t$(INSTALL) -c -m 755 \"./$(EXECUTABLE)\" \"$(DESTDIR)$(bindir)/$(EXECUTABLE)\"\nifdef DYNAMIC_MODULES\n\t$(INSTALL) -d \"$(DESTDIR)$(libdir)/scummvm/\"\n\t$(INSTALL) -c -m 644 $(PLUGINS) \"$(DESTDIR)$(libdir)/scummvm/\"\nendif\n\ninstall-strip: $(EXECUTABLE) $(PLUGINS) install-data\n\t$(INSTALL) -d \"$(DESTDIR)$(bindir)\"\n\t$(INSTALL) -c -s -m 755 \"./$(EXECUTABLE)\" \"$(DESTDIR)$(bindir)/$(EXECUTABLE)\"\nifdef DYNAMIC_MODULES\n\t$(INSTALL) -d \"$(DESTDIR)$(libdir)/scummvm/\"\n\t$(INSTALL) -c -s -m 644 $(PLUGINS) \"$(DESTDIR)$(libdir)/scummvm/\"\nendif\n\nuninstall:\n\trm -f \"$(DESTDIR)$(bindir)/$(EXECUTABLE)\"\n\trm -f \"$(DESTDIR)$(mandir)/man6/scummvm.6\"\n\trm -f \"$(DESTDIR)$(datarootdir)/pixmaps/scummvm.xpm\"\n\trm -f \"$(DESTDIR)$(datarootdir)/icons/hicolor/scalable/apps/scummvm.svg\"\n\trm -rf \"$(DESTDIR)$(docdir)\"\n\trm -rf \"$(DESTDIR)$(datadir)\"\n\trm -f \"$(DESTDIR)$(datarootdir)/applications/org.scummvm.scummvm.desktop\"\n\trm -f \"$(DESTDIR)$(datarootdir)/metainfo/org.scummvm.scummvm.metainfo.xml\"\nifdef DYNAMIC_MODULES\n\trm -rf \"$(DESTDIR)$(libdir)/scummvm/\"\nendif\n\n# Special generic target for simple archive distribution\n\ndist-generic: $(EXECUTABLE) $(PLUGINS)\n\tmkdir -p ./dist-generic/scummvm/data\n\tmkdir -p ./dist-generic/scummvm/doc\n\trm -f ./dist-generic/scummvm/$(EXECUTABLE)\n\t$(STRIP) \"$(EXECUTABLE)\" -o \"./dist-generic/scummvm/$(EXECUTABLE)\"\n\tcp $(DIST_FILES_DOCS) ./dist-generic/scummvm/doc\n\tcp $(DIST_FILES_THEMES) ./dist-generic/scummvm/data\nifdef DIST_FILES_ENGINEDATA\n\tcp $(DIST_FILES_ENGINEDATA) ./dist-generic/scummvm/data\nendif\nifdef DIST_FILES_ENGINEDATA_BIG\n\tcp $(DIST_FILES_ENGINEDATA_BIG) ./dist-generic/scummvm/data\nendif\nifdef DIST_FILES_NETWORKING\n\tcp $(DIST_FILES_NETWORKING) ./dist-generic/scummvm/data\nendif\nifdef DIST_FILES_VKEYBD\n\tcp $(DIST_FILES_VKEYBD) ./dist-generic/scummvm/data\nendif\nifdef DIST_FILES_SOUNDFONTS\n\tcp $(DIST_FILES_SOUNDFONTS) ./dist-generic/scummvm/data\nendif\nifdef DIST_FILES_SHADERS\n\tmkdir -p ./dist-generic/scummvm/data/shaders\n\tcp $(DIST_FILES_SHADERS) ./dist-generic/scummvm/data/shaders\nendif\nifeq ($(DYNAMIC_MODULES),1)\n\t@for i in $(PLUGINS); do cp $$i ./dist-generic/scummvm; done\nendif\n\n# Special target to create a application wrapper for macOS\n\nifdef USE_DOCKTILEPLUGIN\n\n# The NsDockTilePlugIn needs to be compiled in both 32 and 64 bits irrespective of how ScummVM itself is compiled.\n# Therefore do not use $(CXXFLAGS) and $(LDFLAGS).\n\nifdef MACOSX_ARM64\n\nScummVMDockTilePlugin.o:\n\t$(CXX) -mmacosx-version-min=11.0 -arch arm64 -O2 -c $(srcdir)/backends/taskbar/macosx/dockplugin/dockplugin.m -o ScummVMDockTilePlugin.o\n\nScummVMDockTilePlugin: ScummVMDockTilePlugin.o\n\t$(CXX) -mmacosx-version-min=11.0 -arch arm64 -bundle -framework Foundation -framework AppKit -fobjc-link-runtime ScummVMDockTilePlugin.o -o ScummVMDockTilePlugin\n\nelse  # MACOSX_ARM64\n\nScummVMDockTilePlugin32.o:\n\t$(CXX) -mmacosx-version-min=10.6 -arch i386 -O2 -c $(srcdir)/backends/taskbar/macosx/dockplugin/dockplugin.m -o ScummVMDockTilePlugin32.o\n\nScummVMDockTilePlugin32: ScummVMDockTilePlugin32.o\n\t$(CXX) -mmacosx-version-min=10.6 -arch i386 -bundle -framework Foundation -framework AppKit -fobjc-link-runtime ScummVMDockTilePlugin32.o -o ScummVMDockTilePlugin32\n\nScummVMDockTilePlugin64.o:\n\t$(CXX) -mmacosx-version-min=10.6 -arch x86_64 -O2 -c $(srcdir)/backends/taskbar/macosx/dockplugin/dockplugin.m -o ScummVMDockTilePlugin64.o\n\nScummVMDockTilePlugin64: ScummVMDockTilePlugin64.o\n\t$(CXX) -mmacosx-version-min=10.6 -arch x86_64 -bundle -framework Foundation -framework AppKit -fobjc-link-runtime ScummVMDockTilePlugin64.o -o ScummVMDockTilePlugin64\n\nifdef MACOSX_64_BITS_ONLY\nScummVMDockTilePlugin: ScummVMDockTilePlugin64\n\tcp ScummVMDockTilePlugin64 ScummVMDockTilePlugin\nelse  # MACOSX_64_BITS_ONLY\nScummVMDockTilePlugin: ScummVMDockTilePlugin32 ScummVMDockTilePlugin64\n\tlipo -create ScummVMDockTilePlugin32 ScummVMDockTilePlugin64 -output ScummVMDockTilePlugin\nendif # MACOSX_64_BITS_ONLY\n\nendif # MACOSX_ARM64\n\nscummvm.docktileplugin: ScummVMDockTilePlugin\n\tmkdir -p scummvm.docktileplugin/Contents\n\tcp $(srcdir)/dists/macosx/dockplugin/Info.plist scummvm.docktileplugin/Contents\n\tmkdir -p scummvm.docktileplugin/Contents/MacOS\n\tcp ScummVMDockTilePlugin scummvm.docktileplugin/Contents/MacOS/\n\tchmod 644 scummvm.docktileplugin/Contents/MacOS/ScummVMDockTilePlugin\n\nendif\n\nbundle_name = ScummVM.app\n\nbundle-pack:\n\tmkdir -p $(bundle_name)/Contents/MacOS\n\tmkdir -p $(bundle_name)/Contents/Resources\n\techo \"APPL????\" > $(bundle_name)/Contents/PkgInfo\n\tsed -e 's/$$(PRODUCT_BUNDLE_IDENTIFIER)/org.scummvm.app/' $(srcdir)/dists/macosx/Info.plist >$(bundle_name)/Contents/Info.plist\nifdef USE_SPARKLE\n\tmkdir -p $(bundle_name)/Contents/Frameworks\n\tcp $(srcdir)/dists/macosx/dsa_pub.pem $(bundle_name)/Contents/Resources/\n\trm -rf $(bundle_name)/Contents/Frameworks/Sparkle.framework\n\tcp -RP $(SPARKLEPATH)/Sparkle.framework $(bundle_name)/Contents/Frameworks/\n\trm -f $(bundle_name)/Contents/Frameworks/Sparkle.framework/XPCServices\n\trm -rf $(bundle_name)/Contents/Frameworks/Sparkle.framework/Versions/Current/XPCServices/\nendif\nifdef MACOSX_LEOPARD_OR_BELOW\n\tcp $(srcdir)/icons/scummvm_legacy.icns $(bundle_name)/Contents/Resources/scummvm.icns\nelse\n\tcp $(srcdir)/icons/scummvm.icns $(bundle_name)/Contents/Resources/scummvm.icns\nendif\n\tcp $(DIST_FILES_DOCS) $(bundle_name)/Contents/Resources/\n\tcp $(DIST_FILES_THEMES) $(bundle_name)/Contents/Resources/\nifdef DIST_FILES_NETWORKING\n\tcp $(DIST_FILES_NETWORKING) $(bundle_name)/Contents/Resources/\nendif\nifdef DIST_FILES_ENGINEDATA\n\tcp $(DIST_FILES_ENGINEDATA) $(bundle_name)/Contents/Resources/\nendif\nifdef DIST_FILES_ENGINEDATA_BIG\n\tcp $(DIST_FILES_ENGINEDATA_BIG) $(bundle_name)/Contents/Resources/\nendif\nifdef DIST_FILES_VKEYBD\n\tcp $(DIST_FILES_VKEYBD) $(bundle_name)/Contents/Resources/\nendif\nifdef DIST_FILES_SOUNDFONTS\n\tcp $(DIST_FILES_SOUNDFONTS) $(bundle_name)/Contents/Resources/\nendif\nifneq ($(DIST_FILES_SHADERS),)\n\tmkdir -p $(bundle_name)/Contents/Resources/shaders\n\tcp $(DIST_FILES_SHADERS) $(bundle_name)/Contents/Resources/shaders/\nendif\n\t$(srcdir)/devtools/credits.pl --rtf > $(bundle_name)/Contents/Resources/AUTHORS.rtf\n\trm $(bundle_name)/Contents/Resources/AUTHORS\n\t@sed -i'.sed-orig' -e \"s/AUTHORS/AUTHORS.rtf/g\" $(bundle_name)/Contents/Resources/README.md\nifdef USE_PANDOC\n\t@sed -i'.sed-orig' -e \"s|href=\\\"AUTHORS\\\"|href=\\\"https://www.scummvm.org/credits/\\\"|g\" $(bundle_name)/Contents/Resources/README$(PANDOCEXT)\nendif\n\t@rm $(bundle_name)/Contents/Resources/*.sed-orig\n\tcp $(bundle_name)/Contents/Resources/COPYING.Apache $(bundle_name)/Contents/Resources/COPYING-Apache\n\tcp $(bundle_name)/Contents/Resources/COPYING.BSD $(bundle_name)/Contents/Resources/COPYING-BSD\n\tcp $(bundle_name)/Contents/Resources/COPYING.BSL $(bundle_name)/Contents/Resources/COPYING-BSL\n\tcp $(bundle_name)/Contents/Resources/COPYING.FREEFONT $(bundle_name)/Contents/Resources/COPYING-FREEFONT\n\tcp $(bundle_name)/Contents/Resources/COPYING.GLAD $(bundle_name)/Contents/Resources/COPYING-GLAD\n\tcp $(bundle_name)/Contents/Resources/COPYING.ISC $(bundle_name)/Contents/Resources/COPYING-ISC\n\tcp $(bundle_name)/Contents/Resources/COPYING.LGPL $(bundle_name)/Contents/Resources/COPYING-LGPL\n\tcp $(bundle_name)/Contents/Resources/COPYING.LUA $(bundle_name)/Contents/Resources/COPYING-LUA\n\tcp $(bundle_name)/Contents/Resources/COPYING.MIT $(bundle_name)/Contents/Resources/COPYING-MIT\n\tcp $(bundle_name)/Contents/Resources/COPYING.MKV $(bundle_name)/Contents/Resources/COPYING-MKV\n\tcp $(bundle_name)/Contents/Resources/COPYING.MPL $(bundle_name)/Contents/Resources/COPYING-MPL\n\tcp $(bundle_name)/Contents/Resources/COPYING.OFL $(bundle_name)/Contents/Resources/COPYING-OFL\n\tcp $(bundle_name)/Contents/Resources/COPYING.TINYGL $(bundle_name)/Contents/Resources/COPYING-TINYGL\n\tcp $(bundle_name)/Contents/Resources/CatharonLicense.txt $(bundle_name)/Contents/Resources/CatharonLicense-txt\n\nifdef DYNAMIC_MODULES\n\tcp $(PLUGINS) $(bundle_name)/Contents/Resources/\nendif\n\tchmod 644 $(bundle_name)/Contents/Resources/*\nifneq ($(DIST_FILES_SHADERS),)\n\tchmod 755 $(bundle_name)/Contents/Resources/shaders\nendif\n\tcp scummvm-static $(bundle_name)/Contents/MacOS/scummvm\n\tchmod 755 $(bundle_name)/Contents/MacOS/scummvm\n\t$(STRIP) $(bundle_name)/Contents/MacOS/scummvm\nifdef USE_DOCKTILEPLUGIN\n\tmkdir -p $(bundle_name)/Contents/PlugIns\n\tcp -r scummvm.docktileplugin $(bundle_name)/Contents/PlugIns/\nendif\nifndef MACOSX_LEOPARD_OR_BELOW\n\tcodesign -s - --deep --force $(bundle_name)\nendif\n\nifdef USE_DOCKTILEPLUGIN\nbundle: scummvm-static plugins scummvm.docktileplugin bundle-pack\nelse\nbundle: scummvm-static plugins bundle-pack\nendif\n\nios7bundle: scummvm-static-ios\n\tmkdir -p $(bundle_name)\n\tawk 'BEGIN {s=0}\\\n\t\t/<key>CFBundleIcons<\\/key>/ {\\\n\t\t\tprint $$0;\\\n\t\t\tprint \"\\t<dict>\";\\\n\t\t\tprint \"\\t\\t<key>CFBundlePrimaryIcon</key>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>CFBundleIconFiles</key>\";\\\n\t\t\tprint \"\\t\\t\\t<array>\";\\\n\t\t\tprint \"\\t\\t\\t\\t<string>AppIcon29x29</string>\";\\\n\t\t\tprint \"\\t\\t\\t\\t<string>AppIcon40x40</string>\";\\\n\t\t\tprint \"\\t\\t\\t\\t<string>AppIcon60x60</string>\";\\\n\t\t\tprint \"\\t\\t\\t</array>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t</dict>\";\\\n\t\t\ts=2}\\\n\t\t/<key>CFBundleIcons~ipad<\\/key>/ {\\\n\t\t\tprint $$0;\\\n\t\t\tprint \"\\t<dict>\";\\\n\t\t\tprint \"\\t\\t<key>CFBundlePrimaryIcon</key>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>CFBundleIconFiles</key>\";\\\n\t\t\tprint \"\\t\\t\\t<array>\";\\\n\t\t\tprint \"\\t\\t\\t\\t<string>AppIcon76x76</string>\";\\\n\t\t\tprint \"\\t\\t\\t\\t<string>AppIcon83.5x83.5</string>\";\\\n\t\t\tprint \"\\t\\t\\t</array>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t</dict>\";\\\n\t\t\ts=2}\\\n\t\t/<key>UILaunchImages<\\/key>/ {\\\n\t\t\tprint $$0;\\\n\t\t\tprint \"\\t<array>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>8.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage-800-Portrait-736h</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Portrait</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{414, 736}</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>8.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage-800-Landscape-736h</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Landscape</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{414, 736}</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>8.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage-800-667h</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Portrait</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{375, 667}</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>7.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage-700-568h</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Portrait</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{320, 568}</string>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>7.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage-700-Portrait</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Portrait</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{768, 1024}</string>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>7.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage-700-Landscape</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Landscape</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{768, 1024}</string>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t</array>\";\\\n\t\t\ts=2}\\\n\t\ts==0 {print $$0}\\\n\t\ts > 0 { s-- }' $(srcdir)/dists/ios7/Info.plist >$(bundle_name)/Info.plist\n\tsed -i'' -e 's/$$(PRODUCT_BUNDLE_IDENTIFIER)/org.scummvm.scummvm/' $(bundle_name)/Info.plist\n\tsed -i'' -e 's/$$(EXECUTABLE_NAME)/ScummVM/' $(bundle_name)/Info.plist\n\tsed -i'' -e '/UILaunchStoryboardName/{N;d;}' $(bundle_name)/Info.plist\n\tcp $(DIST_FILES_DOCS) $(bundle_name)/\n\tcp $(DIST_FILES_THEMES) $(bundle_name)/\nifdef DIST_FILES_NETWORKING\n\tcp $(DIST_FILES_NETWORKING) $(bundle_name)/\nendif\nifdef DIST_FILES_ENGINEDATA\n\tcp $(DIST_FILES_ENGINEDATA) $(bundle_name)/\nendif\nifdef DIST_FILES_ENGINEDATA_BIG\n\tcp $(DIST_FILES_ENGINEDATA_BIG) $(bundle_name)/\nendif\nifdef DIST_FILES_VKEYBD\n\tcp $(DIST_FILES_VKEYBD) $(bundle_name)/\nendif\nifdef DIST_FILES_SOUNDFONTS\n\tcp $(DIST_FILES_SOUNDFONTS) $(bundle_name)/\nendif\nifneq ($(DIST_FILES_SHADERS),)\n\tcp $(DIST_FILES_SHADERS) $(bundle_name)/\nendif\n\t$(STRIP) scummvm\n\tchmod 755 scummvm\n\tcp scummvm $(bundle_name)/ScummVM\n\tcp $(srcdir)/dists/ios7/ios-help.zip $(bundle_name)/ios-help.zip\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-29.png $(bundle_name)/AppIcon29x29~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-40.png $(bundle_name)/AppIcon40x40~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-76.png $(bundle_name)/AppIcon76x76~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-29@2x.png $(bundle_name)/AppIcon29x29@2x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-29@2x.png $(bundle_name)/AppIcon29x29@2x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-29@3x.png $(bundle_name)/AppIcon29x29@3x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-29@3x.png $(bundle_name)/AppIcon29x29@3x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-40@2x.png $(bundle_name)/AppIcon40x40@2x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-40@2x.png $(bundle_name)/AppIcon40x40@2x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-40@3x.png $(bundle_name)/AppIcon40x40@3x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-40@3x.png $(bundle_name)/AppIcon40x40@3x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-60@2x.png $(bundle_name)/AppIcon60x60@2x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-60@3x.png $(bundle_name)/AppIcon60x60@3x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-76@2x.png $(bundle_name)/AppIcon76x76@2x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/AppIcon.appiconset/icon4-83.5@2x.png $(bundle_name)/AppIcon83.5x83.5@2x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-640x1136-1.png $(bundle_name)/LaunchImage-700-568h@2x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-2048x1536.png $(bundle_name)/LaunchImage-700-Landscape@2x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-1024x768.png $(bundle_name)/LaunchImage-700-Landscape~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-1536x2048.png $(bundle_name)/LaunchImage-700-Portrait@2x~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-768x1024.png $(bundle_name)/LaunchImage-700-Portrait~ipad.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-1242x2208.png $(bundle_name)/LaunchImage-800-Portrait-736h@3x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-2208x1242.png $(bundle_name)/LaunchImage-800-Landscape-736h@3x.png\n\tcp $(srcdir)/dists/ios7/Images.xcassets/LaunchImage.launchimage/ScummVM-splash-750x1334.png $(bundle_name)/LaunchImage-800-667h@2x.png\n\tcp $(srcdir)/dists/ios7/Assets.car $(bundle_name)/Assets.car\n\tcp $(srcdir)/dists/ios7/PrivacyInfo.xcprivacy $(bundle_name)/PrivacyInfo.xcprivacy\n\tcodesign -s - --deep --force $(bundle_name)\n\ntvosbundle: scummvm-static-ios\n\tmkdir -p $(bundle_name)\n\tawk 'BEGIN {s=0}\\\n\t\t/<key>CFBundleIcons<\\/key>/ {\\\n\t\t\tprint $$0;\\\n\t\t\tprint \"\\t<dict>\";\\\n\t\t\tprint \"\\t\\t<key>CFBundlePrimaryIcon</key>\";\\\n\t\t\tprint \"\\t\\t<string>App Icon</string>\";\\\n\t\t\tprint \"\\t</dict>\";\\\n\t\t\ts=2}\\\n\t\t/<key>TVTopShelfImage<\\/key>/ {\\\n\t\t\tprint $$0;\\\n\t\t\tprint \"\\t<dict>\";\\\n\t\t\tprint \"\\t\\t<key>TVTopShelfPrimaryImageWide</key>\";\\\n\t\t\tprint \"\\t\\t<string>Top Shelf Image</string>\";\\\n\t\t\tprint \"\\t\\t<key>TVTopShelfPrimaryImage</key>\";\\\n\t\t\tprint \"\\t\\t<string>Top Shelf Image Wide</string>\";\\\n\t\t\tprint \"\\t</dict>\";\\\n\t\t\ts=2}\\\n\t\t/<key>UILaunchImages<\\/key>/ {\\\n\t\t\tprint $$0;\\\n\t\t\tprint \"\\t<array>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>9.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Landscape</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{1920, 1080}</string>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t\\t<dict>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageMinimumOSVersion</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>11.0</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageName</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>LaunchImage</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageOrientation</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>Landscape</string>\";\\\n\t\t\tprint \"\\t\\t\\t<key>UILaunchImageSize</key>\";\\\n\t\t\tprint \"\\t\\t\\t<string>{1920, 1080}</string>\";\\\n\t\t\tprint \"\\t\\t</dict>\";\\\n\t\t\tprint \"\\t</array>\";\\\n\t\t\ts=2}\\\n\t\ts==0 {print $$0}\\\n\t\ts > 0 { s-- }' $(srcdir)/dists/tvos/Info.plist >$(bundle_name)/Info.plist\n\tsed -i'' -e 's/$$(PRODUCT_BUNDLE_IDENTIFIER)/org.scummvm.scummvm/' $(bundle_name)/Info.plist\n\tsed -i'' -e 's/$$(EXECUTABLE_NAME)/ScummVM/' $(bundle_name)/Info.plist\n\tsed -i'' -e '/UILaunchStoryboardName/{N;d;}' $(bundle_name)/Info.plist\n\tcp $(DIST_FILES_DOCS) $(bundle_name)/\n\tcp $(DIST_FILES_THEMES) $(bundle_name)/\nifdef DIST_FILES_NETWORKING\n\tcp $(DIST_FILES_NETWORKING) $(bundle_name)/\nendif\nifdef DIST_FILES_ENGINEDATA\n\tcp $(DIST_FILES_ENGINEDATA) $(bundle_name)/\nendif\nifdef DIST_FILES_ENGINEDATA_BIG\n\tcp $(DIST_FILES_ENGINEDATA_BIG) $(bundle_name)/\nendif\nifdef DIST_FILES_VKEYBD\n\tcp $(DIST_FILES_VKEYBD) $(bundle_name)/\nendif\nifdef DIST_FILES_SOUNDFONTS\n\tcp $(DIST_FILES_SOUNDFONTS) $(bundle_name)/\nendif\nifneq ($(DIST_FILES_SHADERS),)\n\tcp $(DIST_FILES_SHADERS) $(bundle_name)/\nendif\n\t$(STRIP) scummvm\n\tchmod 755 scummvm\n\tcp scummvm $(bundle_name)/ScummVM\n\tcp -r $(srcdir)/dists/tvos/Assets.car $(bundle_name)/Assets.car\n\tcp $(srcdir)/dists/tvos/PrivacyInfo.xcprivacy $(bundle_name)/PrivacyInfo.xcprivacy\n\tcodesign -s - --deep --force $(bundle_name)\n\nifndef WITHOUT_SDL\nOSX_STATIC_LIBS := `$(SDLCONFIG) --prefix=$(STATICLIBPATH) --static-libs`\n\nifdef USE_SDL_NET\nifdef USE_SDL2\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libSDL2_net.a\nelse\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libSDL_net.a\nendif\nendif\n\n# With sdl2-config we don't always get the OpenGL framework\nOSX_STATIC_LIBS += -framework OpenGL\n\nelse # WITHOUT_SDL\n\n# Special SDL_Net library without SDL (iPhone)\nifdef USE_SDL_NET\nifeq ($(SDL_NET_MAJOR),1)\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libSDL_net.a\nelse\nifeq ($(SDL_NET_MAJOR),2)\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libSDL2_net.a\nendif\nendif\nendif # USE_SDL_NET\n\nendif # WITHOUT_SDL\n\nifdef USE_LIBCURL\nOSX_STATIC_LIBS += -lcurl -framework Security\nendif\n\nifdef USE_FREETYPE2\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libfreetype.a $(STATICLIBPATH)/lib/libbz2.a\nendif\n\nifdef USE_FRIBIDI\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libfribidi.a\nendif\n\nifdef USE_VORBIS\nOSX_STATIC_LIBS += \\\n\t\t$(STATICLIBPATH)/lib/libvorbisfile.a \\\n\t\t$(STATICLIBPATH)/lib/libvorbis.a\nendif\n\nifdef USE_TREMOR\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libvorbisidec.a\nendif\n\nifdef USE_FLAC\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libFLAC.a\nendif\n\nifdef USE_OGG\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libogg.a\nendif\n\nifdef USE_FLUIDLITE\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libfluidlite.a\nelse\nifdef USE_FLUIDSYNTH\nOSX_STATIC_LIBS += -liconv \\\n                -framework CoreMIDI -framework CoreAudio\\\n                $(STATICLIBPATH)/lib/libfluidsynth.a \\\n                $(STATICLIBPATH)/lib/libglib-2.0.a \\\n                $(STATICLIBPATH)/lib/libintl.a\n\nifneq ($(BACKEND), ios7)\nOSX_STATIC_LIBS += -lreadline -framework AudioUnit\nendif\nendif\nendif\n\nifdef USE_MAD\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libmad.a\nendif\n\nifdef USE_PNG\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libpng.a\nendif\n\nifdef USE_GIF\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libgif.a\nendif\n\nifdef USE_THEORADEC\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libtheoradec.a\nendif\n\nifdef USE_FAAD\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libfaad.a\nendif\n\nifdef USE_MIKMOD\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libmikmod.a\nendif\n\nifdef USE_OPENMPT\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libopenmpt.a $(STATICLIBPATH)/lib/libmpg123.a\nendif\n\nifdef USE_MPEG2\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libmpeg2.a\nendif\n\nifdef USE_A52\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/liba52.a\nendif\n\nifdef USE_MPCDEC\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libmpcdec.a\nendif\n\nifdef USE_VPX\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libvpx.a\nendif\n\nifdef USE_JPEG\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libjpeg.a\nendif\n\nifdef USE_ZLIB\nOSX_ZLIB ?= $(STATICLIBPATH)/lib/libz.a\nendif\n\nifdef USE_DISCORD\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libdiscord-rpc.a\nendif\n\nifdef USE_RETROWAVE\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libRetroWave.a\nendif\n\nifdef USE_SONIVOX\nOSX_STATIC_LIBS += $(STATICLIBPATH)/lib/libsonivox-static.a\nendif\n\nifdef USE_SPARKLE\nifdef MACOSX\nifneq ($(SPARKLEPATH),)\nOSX_STATIC_LIBS += -F$(SPARKLEPATH)\nendif\nOSX_STATIC_LIBS += -framework Sparkle -Wl,-rpath,@loader_path/../Frameworks\nendif\nendif\n\n# Special target to create a static linked binary for macOS.\nscummvm-static: $(DETECT_OBJS) $(OBJS)\n\t+$(LD) $(LDFLAGS) -o scummvm-static $(PRE_OBJS_FLAGS) $(DETECT_OBJS) $(OBJS) $(POST_OBJS_FLAGS) \\\n\t\t-framework CoreMIDI \\\n\t\t$(OSX_STATIC_LIBS) \\\n\t\t$(OSX_ZLIB)\n\n# Special target to create a static linked binary for the iOS and tvOS devices (ios7 backend)\nscummvm-static-ios: $(DETECT_OBJS) $(OBJS)\n\t+$(LD) $(LDFLAGS) -o scummvm $(DETECT_OBJS) $(OBJS) \\\n\t\t$(OSX_STATIC_LIBS) \\\n\t\t-framework UIKit -framework CoreGraphics -framework OpenGLES -framework GameController \\\n\t\t-framework CoreFoundation -framework QuartzCore -framework Foundation \\\n\t\t-framework AudioToolbox -framework CoreAudio -framework SystemConfiguration -lobjc -lz\n\n# Special target to create a snapshot disk image for macOS\n# TODO: Replace AUTHORS by Credits.rtf\nosxsnap: bundle\n\tmkdir ScummVM-snapshot\n\tcp $(DIST_FILES_DOCS) ./ScummVM-snapshot/\n\tmv ./ScummVM-snapshot/COPYING ./ScummVM-snapshot/License\\ \\(GPL\\)\n\tmv ./ScummVM-snapshot/COPYING.Apache ./ScummVM-snapshot/License\\ \\(Apache\\)\n\tmv ./ScummVM-snapshot/COPYING.BSD ./ScummVM-snapshot/License\\ \\(BSD\\)\n\tmv ./ScummVM-snapshot/COPYING.BSL ./ScummVM-snapshot/License\\ \\(BSL\\)\n\tmv ./ScummVM-snapshot/COPYING.FREEFONT ./ScummVM-snapshot/License\\ \\(FREEFONT\\)\n\tmv ./ScummVM-snapshot/COPYING.GLAD ./ScummVM-snapshot/License\\ \\(Glad\\)\n\tmv ./ScummVM-snapshot/COPYING.ISC ./ScummVM-snapshot/License\\ \\(ISC\\)\n\tmv ./ScummVM-snapshot/COPYING.LGPL ./ScummVM-snapshot/License\\ \\(LGPL\\)\n\tmv ./ScummVM-snapshot/COPYING.LUA ./ScummVM-snapshot/License\\ \\(Lua\\)\n\tmv ./ScummVM-snapshot/COPYING.MIT ./ScummVM-snapshot/License\\ \\(MIT\\)\n\tmv ./ScummVM-snapshot/COPYING.MKV ./ScummVM-snapshot/License\\ \\(MKV\\)\n\tmv ./ScummVM-snapshot/COPYING.MPL ./ScummVM-snapshot/License\\ \\(MPL\\)\n\tmv ./ScummVM-snapshot/COPYING.OFL ./ScummVM-snapshot/License\\ \\(OFL\\)\n\tmv ./ScummVM-snapshot/COPYING.TINYGL ./ScummVM-snapshot/License\\ \\(TinyGL\\)\n\tmv ./ScummVM-snapshot/CatharonLicense.txt ./ScummVM-snapshot/CatharonLicense.txt\n\t$(XCODETOOLSPATH)/SetFile -t ttro -c ttxt ./ScummVM-snapshot/*\n\tmkdir ScummVM-snapshot/doc\n\tcp $(srcdir)/doc/QuickStart ./ScummVM-snapshot/doc/QuickStart\n\tmkdir ScummVM-snapshot/doc/cz\n\tcp $(DIST_FILES_DOCS_cz) ./ScummVM-snapshot/doc/cz/\n\tmkdir ScummVM-snapshot/doc/da\n\tcp $(DIST_FILES_DOCS_da) ./ScummVM-snapshot/doc/da/\n\tmkdir ScummVM-snapshot/doc/de\n\tcp $(DIST_FILES_DOCS_de) ./ScummVM-snapshot/doc/de/\n\tmkdir ScummVM-snapshot/doc/es\n\tcp $(DIST_FILES_DOCS_es) ./ScummVM-snapshot/doc/es/\n\tmkdir ScummVM-snapshot/doc/fr\n\tcp $(DIST_FILES_DOCS_fr) ./ScummVM-snapshot/doc/fr/\n\tmkdir ScummVM-snapshot/doc/it\n\tcp $(DIST_FILES_DOCS_it) ./ScummVM-snapshot/doc/it/\n\tmkdir ScummVM-snapshot/doc/no-nb\n\tcp $(DIST_FILES_DOCS_no-nb) ./ScummVM-snapshot/doc/no-nb/\n\tmkdir ScummVM-snapshot/doc/se\n\tcp $(DIST_FILES_DOCS_se) ./ScummVM-snapshot/doc/se/\n\t$(XCODETOOLSPATH)/SetFile -t ttro -c ttxt ./ScummVM-snapshot/doc/QuickStart\n\t$(XCODETOOLSPATH)/SetFile -t ttro -c ttxt ./ScummVM-snapshot/doc/*/*\nifndef MACOSX_LEOPARD_OR_BELOW\n\txattr -w \"com.apple.TextEncoding\" \"utf-8;134217984\" ./ScummVM-snapshot/doc/*/*\nendif\n\tcp -RP $(bundle_name) ./ScummVM-snapshot/\n\tcp $(srcdir)/dists/macosx/DS_Store ./ScummVM-snapshot/.DS_Store\n\tcp $(srcdir)/dists/macosx/background.jpg ./ScummVM-snapshot/background.jpg\n\t$(XCODETOOLSPATH)/SetFile -a V ./ScummVM-snapshot/.DS_Store\n\t$(XCODETOOLSPATH)/SetFile -a V ./ScummVM-snapshot/background.jpg\n\thdiutil create -ov -format UDZO -imagekey zlib-level=9 -fs HFS+ \\\n\t\t\t\t\t-srcfolder ScummVM-snapshot \\\n\t\t\t\t\t-volname \"ScummVM\" \\\n\t\t\t\t\tScummVM-snapshot.dmg\n\trm -rf ScummVM-snapshot\n\npublish-appcast:\n\tcp dists/macosx/scummvm_appcast.xml ../scummvm-web/public_html/appcasts/macosx/release.xml\n\n\nAPPDIR = AppDir\n\n# AppImage tool doesn't check for metainfo.xml, only appdata.xml\nappimage:\n\t@if [ -z \"${LINUXDEPLOY}\" -a -z \"${APPIMAGETOOL}\" ]; then echo \"LINUXDEPLOY or APPIMAGETOOL variables must be set to the path of linuxdeploy or go-appimage binaries\" >&2; exit 1; fi\n\t@if [ \"$(prefix)\" != '/usr' ]; then echo \"Please re-run configure with --prefix=/usr\" >&2; exit 1; fi\n\trm -rf \"$(APPDIR)\"\n\t$(MAKE) install DESTDIR=\"$(APPDIR)\"\n\tln -s org.scummvm.scummvm.metainfo.xml \"$(APPDIR)/$(datarootdir)/metainfo/org.scummvm.scummvm.appdata.xml\"\n\tif [ -n \"${APPIMAGETOOL}\" ]; then \\\n\t\t\"${APPIMAGETOOL}\" -s deploy \"$(APPDIR)/$(datarootdir)/applications/org.scummvm.scummvm.desktop\" && \\\n\t\tLD_LIBRARY_PATH='' find AppDir -type f -exec ldd {} 2>&1 \\; | grep '=>' | ( ! grep -v AppDir ) && \\\n\t\tVERSION=\"$(VERSION)$(VER_REV)\" \"${APPIMAGETOOL}\" \"$(APPDIR)\" ; \\\n\telse \\\n\t\tVERSION=\"$(VERSION)$(VER_REV)\" \"${LINUXDEPLOY}\" --appdir=\"$(APPDIR)\" -o appimage ; \\\n\tfi\n\n#\n# Special target to generate project files for various IDEs\n# Mainly Win32-specific\n#\n\n# The release branch is in form 'heads/branch-1-4-1', for this case\n# $CUR_BRANCH will be equal to '1', for the rest cases it will be empty\nCUR_BRANCH := $(shell cd $(srcdir); git describe --all |cut -d '-' -f 4-)\n\nideprojects: devtools/create_project\nifeq ($(VER_DIRTY), -dirty)\n\t$(error You have uncommitted changes)\nendif\nifeq \"$(CUR_BRANCH)\" \"heads/master\"\n\t$(error You cannot do it on master)\nelse ifeq \"$(CUR_BRANCH)\" \"\"\n\t$(error You must be on a release branch)\nendif\n\t@echo Creating Code::Blocks project files...\n\t@cd $(srcdir)/dists/codeblocks && $(PWD)/devtools/create_project/create_project ../.. --codeblocks >/dev/null && git add -f engines/*.h *.workspace *.cbp\n\t@echo Creating MSVC project files...\n\t@cd $(srcdir)/dists/msvc && $(PWD)/devtools/create_project/create_project ../.. --msvc-version 12 --msvc >/dev/null && git add -f engines/*.h *.sln *.vcxproj *.vcxproj.filters *.props\n\t@echo\n\t@echo All is done.\n\t@echo Now run\n\t@echo -e \"\\tgit commit -m 'DISTS: Generated Code::Blocks and MSVC project files'\"\n\nrelease-checks:\n\tdevtools/release-checks.sh\n\n# Mark special targets as phony\n.PHONY: install-data install install-strip uninstall dist-generic\n.PHONY: bundle-pack bundle iphonebundle ios7bundle tvosbundle iphone osxsnap publish-appcast\n.PHONY: appimage ideprojects release-checks\n"
        },
        {
          "name": "response.json",
          "type": "blob",
          "size": 0.1953125,
          "content": "{\n\t\"files\": [\n\t\t{\n\t\t\t\"status\": \"ok\",\n\t\t\t\"name\": \"Packet.001\"\n\t\t},\n\t\t{\n\t\t\t\"status\": \"ok\",\n\t\t\t\"name\": \"drascula.doc\"\n\t\t},\n\t\t{\n\t\t\t\"status\": \"size_mismatch\",\n\t\t\t\"name\": \"readme.txt\"\n\t\t}\n\t],\n\t\"error\": 1\n}\n"
        },
        {
          "name": "rules.mk",
          "type": "blob",
          "size": 3.228515625,
          "content": "###############################################\n# Common build rules, used by the sub modules and their module.mk files\n#\n###############################################\n\nifeq ($(LOAD_RULES_MK), 1)\n\n# Copy the list of objects to a new variable. The name of the new variable\n# contains the module name, a trick we use so we can keep multiple different\n# module object lists, one for each module.\nMODULE_OBJS-$(MODULE) := $(addprefix $(MODULE)/, $(MODULE_OBJS))\n\n# Add all involved directories to the MODULE_DIRS list\nMODULE_DIRS += $(sort $(dir $(MODULE_OBJS-$(MODULE))))\n\n\n\nifdef TOOL_EXECUTABLE\n################################################\n# Build rule for (tool) executables.\n# TODO: Refactor this, so that even our master executable can use this rule?\n################################################\nTOOL-$(MODULE) := $(MODULE)/$(TOOL_EXECUTABLE)$(EXEEXT)\nTOOL_LIBS-$(TOOL-$(MODULE)) := $(TOOL_LIBS)\nTOOL_CFLAGS-$(TOOL-$(MODULE)) := $(TOOL_CFLAGS)\n\n$(TOOL-$(MODULE)): $(MODULE_OBJS-$(MODULE)) $(TOOL_DEPS)\n\t+$(QUIET_LINK)$(LD) $(LDFLAGS) $(TOOL_CFLAGS-$@) $+ $(TOOL_LIBS-$@) -o $@\n\n# Reset TOOL_* vars\nTOOL_EXECUTABLE:=\nTOOL_DEPS:=\nTOOL_CFLAGS:=\nTOOL_LIBS:=\n\n# Add to \"devtools\" target\ndevtools: $(TOOL-$(MODULE))\n\n# Pseudo target for comfort, allows for \"make devtools/skycpt\", etc.\n$(MODULE): $(TOOL-$(MODULE))\nclean-devtools: clean-$(MODULE)\n\nelse\nifdef PLUGIN\n################################################\n# Build rule for dynamic (loadable) plugins\n################################################\nPLUGIN-$(MODULE) := plugins/$(PLUGIN_PREFIX)$(notdir $(MODULE))$(PLUGIN_SUFFIX)\n$(PLUGIN-$(MODULE)): $(MODULE_OBJS-$(MODULE)) $(PLUGIN_EXTRA_DEPS)\n\t$(QUIET)$(MKDIR) plugins\n\t+$(QUIET_PLUGIN)$(LD) $(filter-out $(PLUGIN_EXTRA_DEPS),$+) $(PLUGIN_LDFLAGS) -o $@\n\n# Reset PLUGIN var\nPLUGIN:=\n\n# Add to \"plugins\" target\nplugins: $(PLUGIN-$(MODULE))\n\nifdef SPLIT_DWARF\nplugins: $(PLUGIN-$(MODULE)).dwp\nendif\n\n# Add to the PLUGINS variable\nPLUGINS += $(PLUGIN-$(MODULE))\n\n# Pseudo target for comfort, allows for \"make common\", \"make gui\" etc.\n$(MODULE): $(PLUGIN-$(MODULE))\nclean-plugins: clean-$(MODULE)\n\nelse\n################################################\n# Build rule for static modules/plugins\n################################################\nMODULE_LIB-$(MODULE) := $(MODULE)/lib$(notdir $(MODULE)).a\n\n# If not building as a plugin, add the object files to the main OBJS list\nOBJS += $(MODULE_LIB-$(MODULE))\n\n# Convenience library target\n$(MODULE_LIB-$(MODULE)): $(MODULE_OBJS-$(MODULE))\n\t$(QUIET)-$(RM) $@\n\t$(QUIET_AR)$(AR) $@ $+\n\t$(QUIET_RANLIB)$(RANLIB) $@\n\t$(QUIET)$(LS) $@\n\n# Pseudo target for comfort, allows for \"make common\", \"make gui\" etc.\n$(MODULE): $(MODULE_LIB-$(MODULE))\n\nendif # PLUGIN\nendif # TOOL_EXECUTABLE\n\n###############################################\n# Clean target, removes all object files. This looks a bit hackish, as we have to\n# copy the content of MODULE_OBJS to another unique variable (the next module.mk\n# will overwrite it after all). The same for the libMODULE.a library file.\n###############################################\nclean: clean-$(MODULE)\nclean-$(MODULE): clean-% :\n\t-$(RM) $(MODULE_OBJS-$*) $(MODULE_LIB-$*) $(PLUGIN-$*) $(TOOL-$*)\nifdef SPLIT_DWARF\n\t-$(RM) $(MODULE_OBJS-$*:.o=.dwo)\nendif\n\n.PHONY: clean-$(MODULE) $(MODULE)\n\nendif # LOAD_RULES_MK\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 0.3916015625,
          "content": "{\n  \"name\": \"scummvm\",\n  \"version-string\": \"latest\",\n  \"dependencies\": [\n    \"curl\",\n    \"discord-rpc\",\n    \"faad2\",\n    \"fluidsynth\",\n    \"freetype\",\n    \"fribidi\",\n    \"giflib\",\n    \"libflac\",\n    \"libjpeg-turbo\",\n    \"libmad\",\n    \"libmikmod\",\n    \"libopenmpt\",\n    \"libmpeg2\",\n    \"libogg\",\n    \"libpng\",\n    \"libtheora\",\n    \"libvorbis\",\n    \"libvpx\",\n    \"sdl2\",\n    \"sdl2-net\",\n    \"zlib\"\n  ]\n}"
        },
        {
          "name": "video",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}