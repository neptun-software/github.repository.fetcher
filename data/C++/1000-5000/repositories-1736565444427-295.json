{
  "metadata": {
    "timestamp": 1736565444427,
    "page": 295,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "letscontrolit/ESPEasy",
      "stars": 3322,
      "defaultBranch": "mega",
      "files": [
        {
          "name": ".atom-build.yml",
          "type": "blob",
          "size": 0.658203125,
          "content": "# cmd: \"cd {PROJECT_PATH}; platformio\"\ncmd: \"platformio\"\nname: \"Build with error highlighting (dev_ESP8266_4096)\"\nargs:\n  - run --environment dev_ESP8266_4096\nsh: true\ncwd: \"{PROJECT_PATH}\"\n# env:\n#   VARIABLE1: \"VALUE1\"\n#   VARIABLE2: \"VALUE2\"\nerrorMatch:\n  - \"(?<file>[\\\\/0-9a-zA-Z\\\\._]+):(?<line>\\\\d+):(?<col>\\\\d+):\\\\s+error:\\\\s+(?<message>.+)\"\n\nwarningMatch:\n  - \"(?<file>[\\\\/0-9a-zA-Z\\\\._]+):(?<line>\\\\d+):(?<col>\\\\d+):\\\\s+warning:\\\\s+(?<message>.+)\"\n# keymap: <keymap string>\n# atomCommandName: namespace:command\n# targets:\n#   extraTargetName:\n#       cmd: \"<command to execute>\"\n#       args:\n#       # (any previous options are viable here except `targets` itself)\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.08984375,
          "content": "## OS Specific Hidden Files ####\r\n\r\n# MacOSX Finder *****\r\n.DS_Store\r\n\r\n# Fuse FileSystem ***\r\n.fuse_hidden*\r\n\r\n\r\n## PlatformIO ##################\r\n.pioenvs\r\n.clang_complete\r\n.gcc-flags.json\r\n.piolibdeps\r\npre_extra_script.py\r\n*.code-workspace\r\n.pio\r\n.piopm\r\n\r\n## Project #####################\r\nlib/readme.txt\r\nsrc/Custom.h\r\n/ESPEasy\r\ntest/output_export.cpp\r\n.vscode\r\n.vscode/.browse.c_cpp.db*\r\n.vscode/c_cpp_properties.json\r\n.vscode/launch.json\r\nsrc/ESPEasy.ino.cpp\r\n\r\ndocs/build/\r\n\r\n\\.pio/\r\n\r\ndocs/source/_build/\r\n\r\nvenv/\r\n\r\n.idea/\r\n\r\ntools/vagrant/.vagrant/\r\n\r\ntools/vagrant/build/\r\n\r\ntools/vagrant/Custom.h\r\n\r\n\r\n.buildcache/\r\n\r\ntools/vagrant/pio_envlist.txt\r\n\r\nbuild_output/\r\n\r\n**/__tmpfile.cpp\r\n\r\nsrc/_Custom.h\r\nsrc/*_*Custom.h\r\n\r\ndist/Espressif_flash_download_tool_v3.8.5/logs/\r\n\r\ndist/Espressif_flash_download_tool_v3.8.5/dl_temp/bin_tmp/\r\n\r\ndist/Espressif_flash_download_tool_v3.8.5/dl_temp/_temp_by_dltool/\r\n\r\ndist/Espressif_flash_download_tool_v3.8.5/configure/esp32/spi_download.conf\r\nsrc/CustomIR.h\r\n\r\n\r\ndocs/source/Plugin/_plugin_sets_overview.repl\r\n*.PVS-Studio.stacktrace.txt\r\n\r\n\r\n.platformio/\r\n.pio/\r\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".gitpod.Dockerfile",
          "type": "blob",
          "size": 0.369140625,
          "content": "FROM gitpod/workspace-full\n                    \nUSER gitpod\n\n# Install custom tools, runtime, etc. using apt-get\n# For example, the command below would install \"bastet\" - a command line tetris clone:\n#\n# RUN sudo apt-get -q update && #     sudo apt-get install -yq bastet && #     sudo rm -rf /var/lib/apt/lists/*\n#\n# More information: https://www.gitpod.io/docs/config-docker/\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.458984375,
          "content": "tasks:\n  - before: pip install -U platformio && brew install uncrustify && pip3 install -r ./requirements.txt\n\nimage:\n  file: .gitpod.Dockerfile\n\nvscode:\n  extensions:\n    - ms-vscode.cpptools@0.26.3:u3GsZ5PK12Ddr79vh4TWgQ==\n    - eamodio.gitlens@10.2.1:e0IYyp0efFqVsrZwsIe8CA==\n    - LaurentTreguier.uncrustify@2.18.0:/k8Osjj/XSuz09F+pEu7wg==\n    - Atishay-Jain.All-Autocomplete@0.0.23:fbZNfSpnd8XkAHGfAPS2rA==\n    - 2gua.rainbow-brackets@0.0.6:Tbu8dTz0i+/bgcKQTQ5b8g=="
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.04296875,
          "content": "# Read the Docs configuration file for Sphinx projects\r\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\r\n\r\n# Required\r\nversion: 2\r\n\r\n# Set the OS, Python version and other tools you might need\r\nbuild:\r\n  os: ubuntu-22.04\r\n  tools:\r\n    python: \"3.12\"\r\n    # You can also specify other tool versions:\r\n    # nodejs: \"20\"\r\n    # rust: \"1.70\"\r\n    # golang: \"1.20\"\r\n\r\n# Build documentation in the \"docs/\" directory with Sphinx\r\nsphinx:\r\n  configuration: docs/source/conf.py\r\n  # You can configure Sphinx to use a different builder, for instance use the dirhtml builder for simpler URLs\r\n  # builder: \"dirhtml\"\r\n  # Fail on all warnings to avoid broken references\r\n  # fail_on_warning: true\r\n\r\n# Optionally build your docs in additional formats such as PDF and ePub\r\n# formats:\r\n#   - pdf\r\n#   - epub\r\n\r\n# Optional but recommended, declare the Python requirements required\r\n# to build your documentation\r\n# See https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\r\npython:\r\n  install:\r\n    - requirements: docs/requirements.txt"
        },
        {
          "name": ".theia",
          "type": "tree",
          "content": null
        },
        {
          "name": "License.txt",
          "type": "blob",
          "size": 43.6630859375,
          "content": "/*****************************************************************************************************************************\\\r\n * Arduino project \"ESP Easy\" © Copyright 2018-2020 github.com/letscontrolit\r\n *\r\n * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty\r\n * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n * You received a copy of the GNU General Public License along with this program in file 'License.txt'.\r\n *\r\n * Additional information about licensing can be found at : http://www.gnu.org/licenses\r\n\\*****************************************************************************************************************************/\r\n\r\n // This project incorporates work covered by the following copyrights and permission notices:\r\n //\r\n // Notes:\r\n // - Parts of the source files in this repository are made available under different licenses.\r\n //   Refer to each individual source file/directory for more details.\r\n // - Your copy of this product may not contain code covered by one or more of the licenses listed here,\r\n //   depending on the exact product and version you choose.\r\n\r\n/*****************************************************************************************************************************\\\r\n* Arduino project \"Nodo\" © Copyright 2010..2015 Paul Tonkes \r\n* \r\n* This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License \r\n* as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n* This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty \r\n* of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n* You received a copy of the GNU General Public License along with this program in file 'License.txt'.\r\n*\r\n* Voor toelichting op de licentievoorwaarden zie    : http://www.gnu.org/licenses\r\n* Uitgebreide documentatie is te vinden op          : http://www.nodo-domotica.nl\r\n* bugs kunnen worden gelogd op                      : https://code.google.com/p/arduino-nodo/\r\n* Compiler voor deze programmacode te downloaden op : http://arduino.cc\r\n* Voor vragen of suggesties, mail naar              : p.k.tonkes@gmail.com\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * esp8266/Arduino is licensed under the\r\n * GNU Lesser General Public License v2.1\r\n *\r\n * Additional information about licensing can be found at : https://github.com/esp8266/Arduino/blob/master/LICENSE\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * espressif/arduino-esp32 is licensed under the\r\n * GNU Lesser General Public License v2.1\r\n *\r\n * Additional information about licensing can be found at : https://github.com/espressif/arduino-esp32/blob/master/LICENSE.md\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * platformio/platformio-core        © Copyright 2014-present PlatformIO <contact@platformio.org>\r\n * platformio/platform-espressif8266 © Copyright 2014-present PlatformIO <contact@platformio.org>\r\n * platformio/platform-espressif32   © Copyright 2014-present PlatformIO <contact@platformio.org>\r\n *\r\n * is licensed under the Apache License 2.0\r\n *\r\n * Additional information about licensing can be found at : https://github.com/platformio/platformio-core/blob/develop/LICENSE\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * espressif/esptool is licensed under the\r\n * GNU General Public License v2.0\r\n *\r\n * Additional information about licensing can be found at : https://github.com/espressif/esptool/blob/master/LICENSE\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * Grovkillen/ESP_Easy_Flasher is licensed under the\r\n * GNU General Public License v3.0\r\n *\r\n * Additional information about licensing can be found at : https://github.com/Grovkillen/ESP_Easy_Flasher/blob/master/LICENSE\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * ESPRESSIF MIT License\r\n *\r\n * Copyright (c) 2018 <ESPRESSIF SYSTEMS (SHANGHAI) PTE LTD>\r\n *\r\n * Permission is hereby granted for use on all ESPRESSIF SYSTEMS products, in which case,\r\n * it is free of charge, to any person obtaining a copy of this software and associated\r\n * documentation files (the \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the Software is furnished\r\n * to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or\r\n * substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * Additional information about licensing can be found at : https://github.com/espressif/esp-at/blob/master/LICENSE\r\n\\*****************************************************************************************************************************/\r\n\r\n/*****************************************************************************************************************************\\\r\n * sphinx-doc/sphinx © Copyright 2007-2020 by the Sphinx team (see AUTHORS file). All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n * - Redistributions of source code must retain the above copyright\r\n *   notice, this list of conditions and the following disclaimer.\r\n *\r\n * - Redistributions in binary form must reproduce the above copyright\r\n *   notice, this list of conditions and the following disclaimer in the\r\n *   documentation and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * Additional information about licensing can be found at : https://github.com/sphinx-doc/sphinx/blob/3.x/LICENSE\r\n\\*****************************************************************************************************************************/\r\n\r\n\r\n                     GNU GENERAL PUBLIC LICENSE\r\n                       Version 3, 29 June 2007\r\n\r\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n                            Preamble\r\n\r\n  The GNU General Public License is a free, copyleft license for\r\nsoftware and other kinds of works.\r\n\r\n  The licenses for most software and other practical works are designed\r\nto take away your freedom to share and change the works.  By contrast,\r\nthe GNU General Public License is intended to guarantee your freedom to\r\nshare and change all versions of a program--to make sure it remains free\r\nsoftware for all its users.  We, the Free Software Foundation, use the\r\nGNU General Public License for most of our software; it applies also to\r\nany other work released this way by its authors.  You can apply it to\r\nyour programs, too.\r\n\r\n  When we speak of free software, we are referring to freedom, not\r\nprice.  Our General Public Licenses are designed to make sure that you\r\nhave the freedom to distribute copies of free software (and charge for\r\nthem if you wish), that you receive source code or can get it if you\r\nwant it, that you can change the software or use pieces of it in new\r\nfree programs, and that you know you can do these things.\r\n\r\n  To protect your rights, we need to prevent others from denying you\r\nthese rights or asking you to surrender the rights.  Therefore, you have\r\ncertain responsibilities if you distribute copies of the software, or if\r\nyou modify it: responsibilities to respect the freedom of others.\r\n\r\n  For example, if you distribute copies of such a program, whether\r\ngratis or for a fee, you must pass on to the recipients the same\r\nfreedoms that you received.  You must make sure that they, too, receive\r\nor can get the source code.  And you must show them these terms so they\r\nknow their rights.\r\n\r\n  Developers that use the GNU GPL protect your rights with two steps:\r\n(1) assert copyright on the software, and (2) offer you this License\r\ngiving you legal permission to copy, distribute and/or modify it.\r\n\r\n  For the developers' and authors' protection, the GPL clearly explains\r\nthat there is no warranty for this free software.  For both users' and\r\nauthors' sake, the GPL requires that modified versions be marked as\r\nchanged, so that their problems will not be attributed erroneously to\r\nauthors of previous versions.\r\n\r\n  Some devices are designed to deny users access to install or run\r\nmodified versions of the software inside them, although the manufacturer\r\ncan do so.  This is fundamentally incompatible with the aim of\r\nprotecting users' freedom to change the software.  The systematic\r\npattern of such abuse occurs in the area of products for individuals to\r\nuse, which is precisely where it is most unacceptable.  Therefore, we\r\nhave designed this version of the GPL to prohibit the practice for those\r\nproducts.  If such problems arise substantially in other domains, we\r\nstand ready to extend this provision to those domains in future versions\r\nof the GPL, as needed to protect the freedom of users.\r\n\r\n  Finally, every program is threatened constantly by software patents.\r\nStates should not allow patents to restrict development and use of\r\nsoftware on general-purpose computers, but in those that do, we wish to\r\navoid the special danger that patents applied to a free program could\r\nmake it effectively proprietary.  To prevent this, the GPL assures that\r\npatents cannot be used to render the program non-free.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.\r\n\r\n                       TERMS AND CONDITIONS\r\n\r\n  0. Definitions.\r\n\r\n  \"This License\" refers to version 3 of the GNU General Public License.\r\n\r\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\r\nworks, such as semiconductor masks.\r\n\r\n  \"The Program\" refers to any copyrightable work licensed under this\r\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\r\n\"recipients\" may be individuals or organizations.\r\n\r\n  To \"modify\" a work means to copy from or adapt all or part of the work\r\nin a fashion requiring copyright permission, other than the making of an\r\nexact copy.  The resulting work is called a \"modified version\" of the\r\nearlier work or a work \"based on\" the earlier work.\r\n\r\n  A \"covered work\" means either the unmodified Program or a work based\r\non the Program.\r\n\r\n  To \"propagate\" a work means to do anything with it that, without\r\npermission, would make you directly or secondarily liable for\r\ninfringement under applicable copyright law, except executing it on a\r\ncomputer or modifying a private copy.  Propagation includes copying,\r\ndistribution (with or without modification), making available to the\r\npublic, and in some countries other activities as well.\r\n\r\n  To \"convey\" a work means any kind of propagation that enables other\r\nparties to make or receive copies.  Mere interaction with a user through\r\na computer network, with no transfer of a copy, is not conveying.\r\n\r\n  An interactive user interface displays \"Appropriate Legal Notices\"\r\nto the extent that it includes a convenient and prominently visible\r\nfeature that (1) displays an appropriate copyright notice, and (2)\r\ntells the user that there is no warranty for the work (except to the\r\nextent that warranties are provided), that licensees may convey the\r\nwork under this License, and how to view a copy of this License.  If\r\nthe interface presents a list of user commands or options, such as a\r\nmenu, a prominent item in the list meets this criterion.\r\n\r\n  1. Source Code.\r\n\r\n  The \"source code\" for a work means the preferred form of the work\r\nfor making modifications to it.  \"Object code\" means any non-source\r\nform of a work.\r\n\r\n  A \"Standard Interface\" means an interface that either is an official\r\nstandard defined by a recognized standards body, or, in the case of\r\ninterfaces specified for a particular programming language, one that\r\nis widely used among developers working in that language.\r\n\r\n  The \"System Libraries\" of an executable work include anything, other\r\nthan the work as a whole, that (a) is included in the normal form of\r\npackaging a Major Component, but which is not part of that Major\r\nComponent, and (b) serves only to enable use of the work with that\r\nMajor Component, or to implement a Standard Interface for which an\r\nimplementation is available to the public in source code form.  A\r\n\"Major Component\", in this context, means a major essential component\r\n(kernel, window system, and so on) of the specific operating system\r\n(if any) on which the executable work runs, or a compiler used to\r\nproduce the work, or an object code interpreter used to run it.\r\n\r\n  The \"Corresponding Source\" for a work in object code form means all\r\nthe source code needed to generate, install, and (for an executable\r\nwork) run the object code and to modify the work, including scripts to\r\ncontrol those activities.  However, it does not include the work's\r\nSystem Libraries, or general-purpose tools or generally available free\r\nprograms which are used unmodified in performing those activities but\r\nwhich are not part of the work.  For example, Corresponding Source\r\nincludes interface definition files associated with source files for\r\nthe work, and the source code for shared libraries and dynamically\r\nlinked subprograms that the work is specifically designed to require,\r\nsuch as by intimate data communication or control flow between those\r\nsubprograms and other parts of the work.\r\n\r\n  The Corresponding Source need not include anything that users\r\ncan regenerate automatically from other parts of the Corresponding\r\nSource.\r\n\r\n  The Corresponding Source for a work in source code form is that\r\nsame work.\r\n\r\n  2. Basic Permissions.\r\n\r\n  All rights granted under this License are granted for the term of\r\ncopyright on the Program, and are irrevocable provided the stated\r\nconditions are met.  This License explicitly affirms your unlimited\r\npermission to run the unmodified Program.  The output from running a\r\ncovered work is covered by this License only if the output, given its\r\ncontent, constitutes a covered work.  This License acknowledges your\r\nrights of fair use or other equivalent, as provided by copyright law.\r\n\r\n  You may make, run and propagate covered works that you do not\r\nconvey, without conditions so long as your license otherwise remains\r\nin force.  You may convey covered works to others for the sole purpose\r\nof having them make modifications exclusively for you, or provide you\r\nwith facilities for running those works, provided that you comply with\r\nthe terms of this License in conveying all material for which you do\r\nnot control copyright.  Those thus making or running the covered works\r\nfor you must do so exclusively on your behalf, under your direction\r\nand control, on terms that prohibit them from making any copies of\r\nyour copyrighted material outside their relationship with you.\r\n\r\n  Conveying under any other circumstances is permitted solely under\r\nthe conditions stated below.  Sublicensing is not allowed; section 10\r\nmakes it unnecessary.\r\n\r\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\r\n\r\n  No covered work shall be deemed part of an effective technological\r\nmeasure under any applicable law fulfilling obligations under article\r\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\r\nsimilar laws prohibiting or restricting circumvention of such\r\nmeasures.\r\n\r\n  When you convey a covered work, you waive any legal power to forbid\r\ncircumvention of technological measures to the extent such circumvention\r\nis effected by exercising rights under this License with respect to\r\nthe covered work, and you disclaim any intention to limit operation or\r\nmodification of the work as a means of enforcing, against the work's\r\nusers, your or third parties' legal rights to forbid circumvention of\r\ntechnological measures.\r\n\r\n  4. Conveying Verbatim Copies.\r\n\r\n  You may convey verbatim copies of the Program's source code as you\r\nreceive it, in any medium, provided that you conspicuously and\r\nappropriately publish on each copy an appropriate copyright notice;\r\nkeep intact all notices stating that this License and any\r\nnon-permissive terms added in accord with section 7 apply to the code;\r\nkeep intact all notices of the absence of any warranty; and give all\r\nrecipients a copy of this License along with the Program.\r\n\r\n  You may charge any price or no price for each copy that you convey,\r\nand you may offer support or warranty protection for a fee.\r\n\r\n  5. Conveying Modified Source Versions.\r\n\r\n  You may convey a work based on the Program, or the modifications to\r\nproduce it from the Program, in the form of source code under the\r\nterms of section 4, provided that you also meet all of these conditions:\r\n\r\n    a) The work must carry prominent notices stating that you modified\r\n    it, and giving a relevant date.\r\n\r\n    b) The work must carry prominent notices stating that it is\r\n    released under this License and any conditions added under section\r\n    7.  This requirement modifies the requirement in section 4 to\r\n    \"keep intact all notices\".\r\n\r\n    c) You must license the entire work, as a whole, under this\r\n    License to anyone who comes into possession of a copy.  This\r\n    License will therefore apply, along with any applicable section 7\r\n    additional terms, to the whole of the work, and all its parts,\r\n    regardless of how they are packaged.  This License gives no\r\n    permission to license the work in any other way, but it does not\r\n    invalidate such permission if you have separately received it.\r\n\r\n    d) If the work has interactive user interfaces, each must display\r\n    Appropriate Legal Notices; however, if the Program has interactive\r\n    interfaces that do not display Appropriate Legal Notices, your\r\n    work need not make them do so.\r\n\r\n  A compilation of a covered work with other separate and independent\r\nworks, which are not by their nature extensions of the covered work,\r\nand which are not combined with it such as to form a larger program,\r\nin or on a volume of a storage or distribution medium, is called an\r\n\"aggregate\" if the compilation and its resulting copyright are not\r\nused to limit the access or legal rights of the compilation's users\r\nbeyond what the individual works permit.  Inclusion of a covered work\r\nin an aggregate does not cause this License to apply to the other\r\nparts of the aggregate.\r\n\r\n  6. Conveying Non-Source Forms.\r\n\r\n  You may convey a covered work in object code form under the terms\r\nof sections 4 and 5, provided that you also convey the\r\nmachine-readable Corresponding Source under the terms of this License,\r\nin one of these ways:\r\n\r\n    a) Convey the object code in, or embodied in, a physical product\r\n    (including a physical distribution medium), accompanied by the\r\n    Corresponding Source fixed on a durable physical medium\r\n    customarily used for software interchange.\r\n\r\n    b) Convey the object code in, or embodied in, a physical product\r\n    (including a physical distribution medium), accompanied by a\r\n    written offer, valid for at least three years and valid for as\r\n    long as you offer spare parts or customer support for that product\r\n    model, to give anyone who possesses the object code either (1) a\r\n    copy of the Corresponding Source for all the software in the\r\n    product that is covered by this License, on a durable physical\r\n    medium customarily used for software interchange, for a price no\r\n    more than your reasonable cost of physically performing this\r\n    conveying of source, or (2) access to copy the\r\n    Corresponding Source from a network server at no charge.\r\n\r\n    c) Convey individual copies of the object code with a copy of the\r\n    written offer to provide the Corresponding Source.  This\r\n    alternative is allowed only occasionally and noncommercially, and\r\n    only if you received the object code with such an offer, in accord\r\n    with subsection 6b.\r\n\r\n    d) Convey the object code by offering access from a designated\r\n    place (gratis or for a charge), and offer equivalent access to the\r\n    Corresponding Source in the same way through the same place at no\r\n    further charge.  You need not require recipients to copy the\r\n    Corresponding Source along with the object code.  If the place to\r\n    copy the object code is a network server, the Corresponding Source\r\n    may be on a different server (operated by you or a third party)\r\n    that supports equivalent copying facilities, provided you maintain\r\n    clear directions next to the object code saying where to find the\r\n    Corresponding Source.  Regardless of what server hosts the\r\n    Corresponding Source, you remain obligated to ensure that it is\r\n    available for as long as needed to satisfy these requirements.\r\n\r\n    e) Convey the object code using peer-to-peer transmission, provided\r\n    you inform other peers where the object code and Corresponding\r\n    Source of the work are being offered to the general public at no\r\n    charge under subsection 6d.\r\n\r\n  A separable portion of the object code, whose source code is excluded\r\nfrom the Corresponding Source as a System Library, need not be\r\nincluded in conveying the object code work.\r\n\r\n  A \"User Product\" is either (1) a \"consumer product\", which means any\r\ntangible personal property which is normally used for personal, family,\r\nor household purposes, or (2) anything designed or sold for incorporation\r\ninto a dwelling.  In determining whether a product is a consumer product,\r\ndoubtful cases shall be resolved in favor of coverage.  For a particular\r\nproduct received by a particular user, \"normally used\" refers to a\r\ntypical or common use of that class of product, regardless of the status\r\nof the particular user or of the way in which the particular user\r\nactually uses, or expects or is expected to use, the product.  A product\r\nis a consumer product regardless of whether the product has substantial\r\ncommercial, industrial or non-consumer uses, unless such uses represent\r\nthe only significant mode of use of the product.\r\n\r\n  \"Installation Information\" for a User Product means any methods,\r\nprocedures, authorization keys, or other information required to install\r\nand execute modified versions of a covered work in that User Product from\r\na modified version of its Corresponding Source.  The information must\r\nsuffice to ensure that the continued functioning of the modified object\r\ncode is in no case prevented or interfered with solely because\r\nmodification has been made.\r\n\r\n  If you convey an object code work under this section in, or with, or\r\nspecifically for use in, a User Product, and the conveying occurs as\r\npart of a transaction in which the right of possession and use of the\r\nUser Product is transferred to the recipient in perpetuity or for a\r\nfixed term (regardless of how the transaction is characterized), the\r\nCorresponding Source conveyed under this section must be accompanied\r\nby the Installation Information.  But this requirement does not apply\r\nif neither you nor any third party retains the ability to install\r\nmodified object code on the User Product (for example, the work has\r\nbeen installed in ROM).\r\n\r\n  The requirement to provide Installation Information does not include a\r\nrequirement to continue to provide support service, warranty, or updates\r\nfor a work that has been modified or installed by the recipient, or for\r\nthe User Product in which it has been modified or installed.  Access to a\r\nnetwork may be denied when the modification itself materially and\r\nadversely affects the operation of the network or violates the rules and\r\nprotocols for communication across the network.\r\n\r\n  Corresponding Source conveyed, and Installation Information provided,\r\nin accord with this section must be in a format that is publicly\r\ndocumented (and with an implementation available to the public in\r\nsource code form), and must require no special password or key for\r\nunpacking, reading or copying.\r\n\r\n  7. Additional Terms.\r\n\r\n  \"Additional permissions\" are terms that supplement the terms of this\r\nLicense by making exceptions from one or more of its conditions.\r\nAdditional permissions that are applicable to the entire Program shall\r\nbe treated as though they were included in this License, to the extent\r\nthat they are valid under applicable law.  If additional permissions\r\napply only to part of the Program, that part may be used separately\r\nunder those permissions, but the entire Program remains governed by\r\nthis License without regard to the additional permissions.\r\n\r\n  When you convey a copy of a covered work, you may at your option\r\nremove any additional permissions from that copy, or from any part of\r\nit.  (Additional permissions may be written to require their own\r\nremoval in certain cases when you modify the work.)  You may place\r\nadditional permissions on material, added by you to a covered work,\r\nfor which you have or can give appropriate copyright permission.\r\n\r\n  Notwithstanding any other provision of this License, for material you\r\nadd to a covered work, you may (if authorized by the copyright holders of\r\nthat material) supplement the terms of this License with terms:\r\n\r\n    a) Disclaiming warranty or limiting liability differently from the\r\n    terms of sections 15 and 16 of this License; or\r\n\r\n    b) Requiring preservation of specified reasonable legal notices or\r\n    author attributions in that material or in the Appropriate Legal\r\n    Notices displayed by works containing it; or\r\n\r\n    c) Prohibiting misrepresentation of the origin of that material, or\r\n    requiring that modified versions of such material be marked in\r\n    reasonable ways as different from the original version; or\r\n\r\n    d) Limiting the use for publicity purposes of names of licensors or\r\n    authors of the material; or\r\n\r\n    e) Declining to grant rights under trademark law for use of some\r\n    trade names, trademarks, or service marks; or\r\n\r\n    f) Requiring indemnification of licensors and authors of that\r\n    material by anyone who conveys the material (or modified versions of\r\n    it) with contractual assumptions of liability to the recipient, for\r\n    any liability that these contractual assumptions directly impose on\r\n    those licensors and authors.\r\n\r\n  All other non-permissive additional terms are considered \"further\r\nrestrictions\" within the meaning of section 10.  If the Program as you\r\nreceived it, or any part of it, contains a notice stating that it is\r\ngoverned by this License along with a term that is a further\r\nrestriction, you may remove that term.  If a license document contains\r\na further restriction but permits relicensing or conveying under this\r\nLicense, you may add to a covered work material governed by the terms\r\nof that license document, provided that the further restriction does\r\nnot survive such relicensing or conveying.\r\n\r\n  If you add terms to a covered work in accord with this section, you\r\nmust place, in the relevant source files, a statement of the\r\nadditional terms that apply to those files, or a notice indicating\r\nwhere to find the applicable terms.\r\n\r\n  Additional terms, permissive or non-permissive, may be stated in the\r\nform of a separately written license, or stated as exceptions;\r\nthe above requirements apply either way.\r\n\r\n  8. Termination.\r\n\r\n  You may not propagate or modify a covered work except as expressly\r\nprovided under this License.  Any attempt otherwise to propagate or\r\nmodify it is void, and will automatically terminate your rights under\r\nthis License (including any patent licenses granted under the third\r\nparagraph of section 11).\r\n\r\n  However, if you cease all violation of this License, then your\r\nlicense from a particular copyright holder is reinstated (a)\r\nprovisionally, unless and until the copyright holder explicitly and\r\nfinally terminates your license, and (b) permanently, if the copyright\r\nholder fails to notify you of the violation by some reasonable means\r\nprior to 60 days after the cessation.\r\n\r\n  Moreover, your license from a particular copyright holder is\r\nreinstated permanently if the copyright holder notifies you of the\r\nviolation by some reasonable means, this is the first time you have\r\nreceived notice of violation of this License (for any work) from that\r\ncopyright holder, and you cure the violation prior to 30 days after\r\nyour receipt of the notice.\r\n\r\n  Termination of your rights under this section does not terminate the\r\nlicenses of parties who have received copies or rights from you under\r\nthis License.  If your rights have been terminated and not permanently\r\nreinstated, you do not qualify to receive new licenses for the same\r\nmaterial under section 10.\r\n\r\n  9. Acceptance Not Required for Having Copies.\r\n\r\n  You are not required to accept this License in order to receive or\r\nrun a copy of the Program.  Ancillary propagation of a covered work\r\noccurring solely as a consequence of using peer-to-peer transmission\r\nto receive a copy likewise does not require acceptance.  However,\r\nnothing other than this License grants you permission to propagate or\r\nmodify any covered work.  These actions infringe copyright if you do\r\nnot accept this License.  Therefore, by modifying or propagating a\r\ncovered work, you indicate your acceptance of this License to do so.\r\n\r\n  10. Automatic Licensing of Downstream Recipients.\r\n\r\n  Each time you convey a covered work, the recipient automatically\r\nreceives a license from the original licensors, to run, modify and\r\npropagate that work, subject to this License.  You are not responsible\r\nfor enforcing compliance by third parties with this License.\r\n\r\n  An \"entity transaction\" is a transaction transferring control of an\r\norganization, or substantially all assets of one, or subdividing an\r\norganization, or merging organizations.  If propagation of a covered\r\nwork results from an entity transaction, each party to that\r\ntransaction who receives a copy of the work also receives whatever\r\nlicenses to the work the party's predecessor in interest had or could\r\ngive under the previous paragraph, plus a right to possession of the\r\nCorresponding Source of the work from the predecessor in interest, if\r\nthe predecessor has it or can get it with reasonable efforts.\r\n\r\n  You may not impose any further restrictions on the exercise of the\r\nrights granted or affirmed under this License.  For example, you may\r\nnot impose a license fee, royalty, or other charge for exercise of\r\nrights granted under this License, and you may not initiate litigation\r\n(including a cross-claim or counterclaim in a lawsuit) alleging that\r\nany patent claim is infringed by making, using, selling, offering for\r\nsale, or importing the Program or any portion of it.\r\n\r\n  11. Patents.\r\n\r\n  A \"contributor\" is a copyright holder who authorizes use under this\r\nLicense of the Program or a work on which the Program is based.  The\r\nwork thus licensed is called the contributor's \"contributor version\".\r\n\r\n  A contributor's \"essential patent claims\" are all patent claims\r\nowned or controlled by the contributor, whether already acquired or\r\nhereafter acquired, that would be infringed by some manner, permitted\r\nby this License, of making, using, or selling its contributor version,\r\nbut do not include claims that would be infringed only as a\r\nconsequence of further modification of the contributor version.  For\r\npurposes of this definition, \"control\" includes the right to grant\r\npatent sublicenses in a manner consistent with the requirements of\r\nthis License.\r\n\r\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\r\npatent license under the contributor's essential patent claims, to\r\nmake, use, sell, offer for sale, import and otherwise run, modify and\r\npropagate the contents of its contributor version.\r\n\r\n  In the following three paragraphs, a \"patent license\" is any express\r\nagreement or commitment, however denominated, not to enforce a patent\r\n(such as an express permission to practice a patent or covenant not to\r\nsue for patent infringement).  To \"grant\" such a patent license to a\r\nparty means to make such an agreement or commitment not to enforce a\r\npatent against the party.\r\n\r\n  If you convey a covered work, knowingly relying on a patent license,\r\nand the Corresponding Source of the work is not available for anyone\r\nto copy, free of charge and under the terms of this License, through a\r\npublicly available network server or other readily accessible means,\r\nthen you must either (1) cause the Corresponding Source to be so\r\navailable, or (2) arrange to deprive yourself of the benefit of the\r\npatent license for this particular work, or (3) arrange, in a manner\r\nconsistent with the requirements of this License, to extend the patent\r\nlicense to downstream recipients.  \"Knowingly relying\" means you have\r\nactual knowledge that, but for the patent license, your conveying the\r\ncovered work in a country, or your recipient's use of the covered work\r\nin a country, would infringe one or more identifiable patents in that\r\ncountry that you have reason to believe are valid.\r\n\r\n  If, pursuant to or in connection with a single transaction or\r\narrangement, you convey, or propagate by procuring conveyance of, a\r\ncovered work, and grant a patent license to some of the parties\r\nreceiving the covered work authorizing them to use, propagate, modify\r\nor convey a specific copy of the covered work, then the patent license\r\nyou grant is automatically extended to all recipients of the covered\r\nwork and works based on it.\r\n\r\n  A patent license is \"discriminatory\" if it does not include within\r\nthe scope of its coverage, prohibits the exercise of, or is\r\nconditioned on the non-exercise of one or more of the rights that are\r\nspecifically granted under this License.  You may not convey a covered\r\nwork if you are a party to an arrangement with a third party that is\r\nin the business of distributing software, under which you make payment\r\nto the third party based on the extent of your activity of conveying\r\nthe work, and under which the third party grants, to any of the\r\nparties who would receive the covered work from you, a discriminatory\r\npatent license (a) in connection with copies of the covered work\r\nconveyed by you (or copies made from those copies), or (b) primarily\r\nfor and in connection with specific products or compilations that\r\ncontain the covered work, unless you entered into that arrangement,\r\nor that patent license was granted, prior to 28 March 2007.\r\n\r\n  Nothing in this License shall be construed as excluding or limiting\r\nany implied license or other defenses to infringement that may\r\notherwise be available to you under applicable patent law.\r\n\r\n  12. No Surrender of Others' Freedom.\r\n\r\n  If conditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot convey a\r\ncovered work so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you may\r\nnot convey it at all.  For example, if you agree to terms that obligate you\r\nto collect a royalty for further conveying from those to whom you convey\r\nthe Program, the only way you could satisfy both those terms and this\r\nLicense would be to refrain entirely from conveying the Program.\r\n\r\n  13. Use with the GNU Affero General Public License.\r\n\r\n  Notwithstanding any other provision of this License, you have\r\npermission to link or combine any covered work with a work licensed\r\nunder version 3 of the GNU Affero General Public License into a single\r\ncombined work, and to convey the resulting work.  The terms of this\r\nLicense will continue to apply to the part which is the covered work,\r\nbut the special requirements of the GNU Affero General Public License,\r\nsection 13, concerning interaction through a network will apply to the\r\ncombination as such.\r\n\r\n  14. Revised Versions of this License.\r\n\r\n  The Free Software Foundation may publish revised and/or new versions of\r\nthe GNU General Public License from time to time.  Such new versions will\r\nbe similar in spirit to the present version, but may differ in detail to\r\naddress new problems or concerns.\r\n\r\n  Each version is given a distinguishing version number.  If the\r\nProgram specifies that a certain numbered version of the GNU General\r\nPublic License \"or any later version\" applies to it, you have the\r\noption of following the terms and conditions either of that numbered\r\nversion or of any later version published by the Free Software\r\nFoundation.  If the Program does not specify a version number of the\r\nGNU General Public License, you may choose any version ever published\r\nby the Free Software Foundation.\r\n\r\n  If the Program specifies that a proxy can decide which future\r\nversions of the GNU General Public License can be used, that proxy's\r\npublic statement of acceptance of a version permanently authorizes you\r\nto choose that version for the Program.\r\n\r\n  Later license versions may give you additional or different\r\npermissions.  However, no additional obligations are imposed on any\r\nauthor or copyright holder as a result of your choosing to follow a\r\nlater version.\r\n\r\n  15. Disclaimer of Warranty.\r\n\r\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\r\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\r\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\r\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\r\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\r\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\r\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\r\n\r\n  16. Limitation of Liability.\r\n\r\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\r\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\r\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\r\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\r\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\r\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\r\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\r\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\r\nSUCH DAMAGES.\r\n\r\n  17. Interpretation of Sections 15 and 16.\r\n\r\n  If the disclaimer of warranty and limitation of liability provided\r\nabove cannot be given local legal effect according to their terms,\r\nreviewing courts shall apply local law that most closely approximates\r\nan absolute waiver of all civil liability in connection with the\r\nProgram, unless a warranty or assumption of liability accompanies a\r\ncopy of the Program in return for a fee.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n\r\n            How to Apply These Terms to Your New Programs\r\n\r\n  If you develop a new program, and you want it to be of the greatest\r\npossible use to the public, the best way to achieve this is to make it\r\nfree software which everyone can redistribute and change under these terms.\r\n\r\n  To do so, attach the following notices to the program.  It is safest\r\nto attach them to the start of each source file to most effectively\r\nstate the exclusion of warranty; and each file should have at least\r\nthe \"copyright\" line and a pointer to where the full notice is found.\r\n\r\n    <one line to give the program's name and a brief idea of what it does.>\r\n    Copyright (C) <year>  <name of author>\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nAlso add information on how to contact you by electronic and paper mail.\r\n\r\n  If the program does terminal interaction, make it output a short\r\nnotice like this when it starts in an interactive mode:\r\n\r\n    <program>  Copyright (C) <year>  <name of author>\r\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\r\n    This is free software, and you are welcome to redistribute it\r\n    under certain conditions; type `show c' for details.\r\n\r\nThe hypothetical commands `show w' and `show c' should show the appropriate\r\nparts of the General Public License.  Of course, your program's commands\r\nmight be different; for a GUI interface, you would use an \"about box\".\r\n\r\n  You should also get your employer (if you work as a programmer) or school,\r\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\r\nFor more information on this, and how to apply and follow the GNU GPL, see\r\n<http://www.gnu.org/licenses/>.\r\n\r\n  The GNU General Public License does not permit incorporating your program\r\ninto proprietary programs.  If your program is a subroutine library, you\r\nmay consider it more useful to permit linking proprietary applications with\r\nthe library.  If this is what you want to do, use the GNU Lesser General\r\nPublic License instead of this License.  But first, please read\r\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\r\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.3212890625,
          "content": "The scripts in this directory are so called GIT hooks.\nPurpose is to do automatic changes after merge, commit and checkout.\n\nThose files are for a Linux-like environment with basic tools ln, grep, sed and bash.\n\nWindows users can see them as template.\n\nTo use them simply copy those files into your ESPEasy/.git/hooks directory.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.1318359375,
          "content": "|Latest Nightly  | Build Status | Downloads | Docs | Patreon | Ko-Fi | PayPal |\n|-------|-------|-------|-------|-------|-------|-------|\n| [![GitHub version](https://img.shields.io/github/release/letscontrolit/ESPEasy/all.svg)](https://github.com/letscontrolit/ESPEasy/releases/latest) | ![Build status](https://github.com/letscontrolit/ESPEasy/actions/workflows/build.yml/badge.svg) | [![Downloads](https://img.shields.io/github/downloads/letscontrolit/ESPEasy/total.svg)](https://github.com/letscontrolit/ESPEasy/releases) | [![Documentation Status](https://readthedocs.org/projects/espeasy/badge/?version=latest)](https://espeasy.readthedocs.io/en/latest/?badge=latest) | [![donate](https://img.shields.io/badge/donate-Patreon-blue.svg)](https://www.patreon.com/GrovkillenTDer) | [![donate](https://img.shields.io/badge/donate-KoFi-blue.svg)](https://ko-fi.com/grovkillentder) | [![donate](https://img.shields.io/badge/donate-PayPal-blue.svg)](https://www.paypal.me/espeasy) |\n\nFor ways to *support* us, see [this announcement on the forum](https://www.letscontrolit.com/forum/viewtopic.php?f=14&t=5787), or have a look at the [Patreon](https://www.patreon.com/GrovkillenTDer), [Ko-Fi](https://ko-fi.com/grovkillentder) or [PayPal](https://www.paypal.me/espeasy) links above.\n\n# ESPEasy (development branch)\n\n\nIntroduction https://espeasy.readthedocs.io/en/latest/ (and, mostly outdated, wiki: https://www.letscontrolit.com/wiki/index.php/ESPEasy#Introduction)\n\n**MEGA**\nThis is the development branch of ESPEasy. All new features go into this branch, and it has become the current stable branch. If you want to do a bugfix, do it on this branch.\n\n\nCheck here to learn how to use this branch and help us improving ESPEasy: [Starter guide for (local) development on ESPEasy](https://espeasy.readthedocs.io/en/latest/Participate/PlatformIO.html#starter-guide-for-local-development-on-espeasy)\n\n## Web based flasher (experimental)\n\nTo make it easier to get started, one may flash a build directly to the ESP from your browser.\nCurrently only Chrome and Edge are supported.\n\nSee [this flash page](https://td-er.nl/ESPEasy/) to try the new web flash feature.\n\nThe web flasher is using [ESP Web Tools](https://esphome.github.io/esp-web-tools/) made by the people behind ESPHome and Home Assistant.\n\n\n## Binary releases\n\nOn demand, controlled by the repo owner, our build-bot will build a new binary release: https://github.com/letscontrolit/ESPEasy/releases\n\nThe releases are named something like 'mega-20220626' (last number is the build date)\n\nDepending on your needs, we release different types of files:\n\nThe name is built up from a few key parts:\n\nESPEasy_mega\\_*[releasedate]*\\_*[build-type]*\\_*[opt-arduino-library]*\\_*[hardware-type]*\\_*[flash-size][filesystem-size]*\\_*[opt-build-features]*.bin\n\n*[build-type]* can be any of:\nBuild type   | Description                               | included plugins                 |\n-------------|-------------------------------------------|----------------------------------|\nclimate      | All plugins related to climate measurement| Stable + Climate                 |\ncustom       | Custom predefined set/Defined in Custom.h | Specific                         |\nnormal       | Standard plugins                          | Stable                           |\ncollection_A | Normal + plugin collection A              | Stable + Collection base + set A |\ncollection_B | Normal + plugin collection B              | Stable + Collection base + set B |\ncollection_C | Normal + plugin collection C              | Stable + Collection base + set C |\ncollection_D | Normal + plugin collection D              | Stable + Collection base + set D |\ncollection_E | Normal + plugin collection E              | Stable + Collection base + set E |\ncollection_F | Normal + plugin collection F              | Stable + Collection base + set F |\ncollection_G | Normal + plugin collection G              | Stable + Collection base + set G |\nmax          | All available plugins                     | All available                    |\nenergy       | All plugins related to energy measurement | Stable + Energy measurement      |\ndisplay      | All plugins related to displays           | Stable + Displays                |\nneopixel     | All plugins related to neopixel           | Stable + Neopixel                |\nhard         | hardware specific builds                  | Minimal                          |\nminimal      | minimal plugins for specific use-cases    | Switch and Controller            |\nspec_*       | specialized technical builds              | Not intended for regular use     |\nIRext        | Infra-red hardware specific               | Sending and receiving IR cmd     |\nsafeboot     | (Experimental) `safeboot` build to enable<br>most/all plugins on 4MB Flash boards | None                             |\n\n\n*[opt-arduino-library]* (optional) can be any of:\nArduino library | Description                        |\n----------------|------------------------------------|\nalt_wifi        | Alternative WiFi configuration     |\nbeta            | Arduino Beta release               |\nsdk3            | Arduino SDK v.3                    |\ncore_274        | Arduino Core 2.7.4 release         |\ncore_312        | Arduino Core 3.1.2 release         |\ncore_274_sdk3   | Arduino Core 2.7.4 SDK v.3 release |\n\n\n*[hardware-type]* can be any of:\nHardware type    | Description                                 |\n-----------------|---------------------------------------------|\nESP8266          | Espressif ESP8266/ESP8285 generic boards    |\nWROOM02          | Espressif ESP8266 WRoom02 boards            |\nESP32            | Espressif ESP32 generic boards              |\nESP32solo1       | Espressif ESP32-Solo1 generic boards        |\nESP32s2          | Espressif ESP32-S2 generic boards           |\nESP32c3          | Espressif ESP32-C3 generic boards           |\nESP32s3          | Espressif ESP32-S3 generic boards           |\nESP32c2          | Espressif ESP32-C2 generic boards           |\nESP32c6          | Espressif ESP32-C6 generic boards           |\nESP32-wrover-kit | Espressif ESP32 wrover-kit boards           |\nSONOFF           | Sonoff hardware specific                    |\nother_POW        | Switch with power measurement               |\nShelly_1         | Shelly 1 switch                             |\nShelly_PLUG_S    | Shelly plug S switch with power measurement |\nVentus           | Ventus W266 weather station                 |\nLCtech_relay     | LC-tech serial switch                       |\n\nN.B. Starting 2022/07/23, 1M ESP8266 builds can also be used on ESP8285 units and thus there is no longer a specific ESP8285 build anymore.\n\n\n*[flash-size]* can be any of:\nFlash size | Description                 |\n-----------|-----------------------------|\n1M         | 1 MB with 128 kB filesystem |\n2M         | 2 MB with 128 kB filesystem |\n2M256      | 2 MB with 256 kB filesystem |\n2M320k     | 2 MB with 320 kB filesystem |\n4M1M       | 4 MB with 1 MB filesystem   |\n4M2M       | 4 MB with 2 MB filesystem   |\n16M        | 16 MB with 14 MB filesystem |\n4M316k     | 4 MB with 316 kB filesystem |\n8M1M       | 8 MB with 1 MB filesystem   |\n16M1M      | 16 MB with 1 MB filesystem  |\n16M8M      | 16 MB with 8 MB filesystem  |\n\nN.B. Starting with release 2023/12/25, All ESP32 LittleFS builds use IDF 5.3, to support newer ESP32 chips like ESP32-C2 and ESP32-C6, and SPI Ethernet. Other SPIFFS based ESP32 builds will be migrated to LittleFS as SPIFFS is no longer officially available in IDF 5 and later. As a temporary solution, a specially crafted IDF 5.1 build that still includes SPIFFS, is used for the SPIFFS builds. A migration plan will be made available in 2025.\n\n*[opt-build-features]* can be any of:\nBuild features  | Description                                                                                               |\n----------------|-----------------------------------------------------------------------------------------------------------|\nLittleFS        | Use LittleFS instead of SPIFFS filesystem (SPIFFS is unstable \\> 2 MB, and no longer supported in IDF \\> 5) |\nVCC             | Analog input configured to measure VCC voltage (ESP8266 only)                                             |\nOTA             | Arduino OTA (Over The Air) update feature enabled                                                         |\nDomoticz        | Only Domoticz controllers (HTTP) and plugins included                                                     |\nDomoticz_MQTT   | Only Domoticz controllers (MQTT) and plugins included                                                     |\nFHEM_HA         | Only FHEM/OpenHAB/Home Assistant (MQTT) controllers and plugins included                                  |\nETH             | Ethernet interface enabled (ESP32-classic and IDF 5.x based builds)                                       |\nOPI_PSRAM       | Specific configuration to enable PSRAM detection, ESP32-S3 only                                           |\nCDC             | Support USBCDC/HWCDC-serial console on ESP32-C3, ESP32-S2, ESP32-S3 and ESP32-C6                          |\nnoOTA/NO_OTA    | Does not support OTA (Over The Air-updating of the firmware) Use [the flash page](https://td-er.nl/ESPEasy/) or ESPTool via USB Serial |\n\nSome example firmware names:\nFirmware name                                                         | Hardware                                        | Included plugins                 |\n----------------------------------------------------------------------|-------------------------------------------------|----------------------------------|\nESPEasy_mega-20230822_normal_ESP8266_1M.bin                           | ESP8266/ESP8285 with 1MB flash                  | Stable                           |\nESPEasy_mega-20230822_normal_ESP8266_4M1M.bin                         | ESP8266 with 4MB flash                          | Stable                           |\nESPEasy_mega-20230822_collection_A_ESP8266_4M1M.bin                   | ESP8266 with 4MB flash                          | Stable + Collection base + set A |\nESPEasy_mega-20230822_normal_ESP32_4M316k.bin                         | ESP32 with 4MB flash                            | Stable                           |\nESPEasy_mega-20230822_collection_A_ESP32_4M316k.bin                   | ESP32 with 4MB flash                            | Stable + Collection base + set A |\nESPEasy_mega-20230822_collection_B_ESP32_4M316k.bin                   | ESP32 with 4MB flash                            | Stable + Collection base + set B |\nESPEasy_mega-20230822_max_ESP32s3_8M1M_LittleFS_CDC_ETH.bin           | ESP32-S3 with 8MB flash, CDC-serial, Ethernet   | All available plugins            |\nESPEasy_mega-20230822_max_ESP32s3_8M1M_LittleFS_OPI_PSRAM_CDC_ETH.bin | ESP32-S3 8MB flash, PSRAM, CDC-serial, Ethernet | All available plugins            |\nESPEasy_mega-20230822_max_ESP32_16M1M.bin                             | ESP32 with 16MB flash                           | All available plugins            |\nESPEasy_mega-20230822_max_ESP32_16M8M_LittleFS_ETH.bin                | ESP32 with 16MB flash, Ethernet                 | All available plugins            |\n\nThe binary files for the different ESP32 variants (S2, C3, S3, C2, C6, Solo1, 'Classic') are available in separate archives.\n\nTo see what plugins are included in which collection set, you can find that on the [ESPEasy Plugin overview page](https://espeasy.readthedocs.io/en/latest/Plugin/_Plugin.html)\n\n## Documentation & more info\n\nOur new, in-depth documentation can be found at [ESPEasy.readthedocs.io](https://espeasy.readthedocs.io/en/latest/). Automatically built, so always up-to-date according to the contributed contents. The old Wiki documentation can be found at [letscontrolit.com/wiki](https://www.letscontrolit.com/wiki/index.php?title=ESPEasy).\n\nAdditional details and discussion are on the \"Experimental\" section of the forum: https://www.letscontrolit.com/forum/viewforum.php?f=18\n\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/letscontrolit/ESPEasy) \n\n## SAST Tools\n\n[PVS-Studio](https://pvs-studio.com/en/pvs-studio/?utm_source=website&utm_medium=github&utm_campaign=open_source) - static analyzer for C, C++, C#, and Java code.\n\n## Icons used\n\nIcons on courtesy of [ICONS8](https://icons8.com/).\n"
        },
        {
          "name": "before_deploy",
          "type": "blob",
          "size": 2.3798828125,
          "content": "#!/bin/bash\n\nVERSION=$(git describe)\nTMP_DIR=`mktemp -d`\nif [ $? -eq 0 ]; then\n    # Make sure coreutils is installed.\n    # if not, these terrible things may happen:\n    # https://www.letscontrolit.com/forum/viewtopic.php?f=6&t=8542\n    echo \"Created ${TMP_DIR}\"\nelse\n    echo \"Could not create tmp dir, mktemp -d failed\"\n    exit 1\nfi\n\nTMP_DIST=`echo \"${TMP_DIR}/ESPEasy_collect_dist\"`\nmkdir -p ${TMP_DIST}\nif [ $? -eq 0 ]; then\n    echo \"Created ${TMP_DIST}\"\nelse\n    echo \"Could not create tmp dir: ${TMP_DIST}\"\n    exit 1\nfi\n\nCURPATH=`pwd`\nBUILD_LOG=`echo \"${TMP_DIST}/buildlog.txt\"`\n\n# PIO 3.x :\n# BINARY_PATH=\".pioenvs\"\n\n# PIO 4.0 and newer:\nBINARY_PATH=\".pio/build\"\n\nwhile getopts d: option\ndo\ncase \"${option}\"\nin\nd) VERSION=${OPTARG};;\nesac\ndone\n\n\nif [ ! -d ${TMP_DIST} ]; then\n  # Could not create temp dir, so exit\n  exit 1\nfi\n\necho \"### Creating zip archives\"\n\n#Naming convention:\n# ESP_Easy_[github version]_[plugin set]_[chip type]_[flash memory].bin\n\nif [ -d \"build_output/reject\" ]; then\n  zip -qq ${CURPATH}/ESPEasy_ELF_files_$VERSION.zip build_output/reject/*\nfi\n\nzip -qq ${CURPATH}/ESPEasy_ELF_files_$VERSION.zip build_output/debug/*\necho \"### Created ESPEasy_ELF_files_$VERSION.zip\"\n\n\nmkdir -p ${TMP_DIST}\ncp -r dist/* ${TMP_DIST}/\n\nif [ -d \"docs/build\" ]; then\n  # Docs have been created\n  zip -r -qq ${CURPATH}/ESPEasy_docs_$VERSION.zip docs/build/*\n  echo \"### Created ESPEasy_docs_$VERSION.zip\"\nfi\n\n#create a source structure that is the same as the original ESPEasy project (and works with the howto on the wiki)\n#rm -rf dist/Source 2>/dev/null\n\nmkdir -p ${TMP_DIST}/source\ncp -r lib ${TMP_DIST}/source/\ncp -r src ${TMP_DIST}/source/\ncp -r misc ${TMP_DIST}/source/\ncp -r static ${TMP_DIST}/source/\ncp -r tools ${TMP_DIST}/source/\ncp platformio*.ini ${TMP_DIST}/source/\ncp *.txt ${TMP_DIST}/source/\ncp *.csv ${TMP_DIST}/source/\ncp README* ${TMP_DIST}/source/\n\ncp -r build_output/bin/* ${TMP_DIST}/bin\nrm -f ${TMP_DIST}/bin/*ESP32*\n\ncd ${TMP_DIST}\n\nif [ \"$(ls -A ${TMP_DIST}/bin/)\"  ]; then\n  echo\n  zip -qq ${CURPATH}/ESPEasy_ESP82xx_$VERSION.zip -r .\n  echo \"### Created ESPEasy_ESP82xx_$VERSION.zip\"\nfi\n\ncd ${CURPATH}\nrm -f ${TMP_DIST}/bin/*\ncp -r build_output/bin/*ESP32* ${TMP_DIST}/bin\n\ncd ${TMP_DIST}\n\nif [ \"$(ls -A ${TMP_DIST}/bin/)\"  ]; then\n  echo\n  zip -qq ${CURPATH}/ESPEasy_ESP32_$VERSION.zip -r .\n  echo \"### Created ESPEasy_ESP32_$VERSION.zip\"\nfi\n\nrm -Rf ${TMP_DIST}/* 2>/dev/null\nrmdir ${TMP_DIST}\n"
        },
        {
          "name": "boards",
          "type": "tree",
          "content": null
        },
        {
          "name": "crc2.py",
          "type": "blob",
          "size": 5.0458984375,
          "content": "﻿\r\nimport sys\r\nimport binascii\r\nimport struct\r\nfrom hashlib import md5\r\nimport os\r\nMD5DUMMY      = \"MD5_MD5_MD5_MD5_BoundariesOfTheSegmentsGoHere...\" #48 chars\r\nFILENAMEDUMMY = \"ThisIsTheDummyPlaceHolderForTheBinaryFilename64ByteLongFilenames\" #64 chars\r\n\r\nMemorySegmentStart,MemorySegmentEnd,MemoryContent=[],[],[]\r\n\r\n##################################################################\r\n# this subroutine shows the segments of a  part\r\n##################################################################\r\ndef showSegments (fileContent,offset):\r\n    global MemorySegmentStart, MemorySegmentEnd, MemoryContent\r\n    header = struct.unpack(\"ii\", fileContent[offset:offset+8])\r\n    herestr =\"\"\r\n    herestr2 =\"\"\r\n    MemorySegmentStart.append(struct.pack(\"I\",header[0]))\r\n    MemorySegmentEnd.append(struct.pack(\"I\",header[0]+header[1]))\r\n    MemoryContent.append(fileContent[offset+8:offset+8+header[1]])\r\n    if  fileContent.find( MD5DUMMY, offset+8, offset+8+header[1]) >0 :\r\n        herestr= \" <-- CRC is here.\"\r\n    if  fileContent.find( FILENAMEDUMMY, offset+8, offset+8+header[1]) >0 :\r\n        herestr2= \" <-- filename is here.\"\r\n    print (\"SEGMENT \"+ str(len(MemorySegmentStart)-1)+ \": memory position: \" + hex(header[0])+\" to \" + hex(header[0]+header[1]) +  \" length: \" + hex(header[1])+herestr+herestr2)\r\n    #print (\"first byte positoin in file: \" + hex( offset+8))\r\n    #print (\"last byte postion in file: \" + hex(offset+8+header[1]-1))\r\n    return (8+offset+ header[1]); # return start of next segment\r\n\r\n##################################################################\r\n# this subroutine shows the  parts of a binary file\r\n##################################################################\r\ndef showParts(fileContent, offset):\r\n    header = struct.unpack(\"BBBBi\", fileContent[offset:offset+8])\r\n    print ('\\n\\nBINARY PART\\nSegments: ') + (hex(header[1]))\r\n    nextpos =offset+8\r\n    for x in range (0,header[1]):\r\n        nextpos = showSegments(fileContent,nextpos)\r\n    nextSegmentOffset = (fileContent.find(\"\\xe9\", nextpos))\r\n    return nextSegmentOffset\r\n\r\n##################################################################\r\n# MAIN\r\n##################################################################\r\n\r\n#if len(sys.argv) !=2 :\r\n#    print (\"please give a filename\")\r\n#    k=input(\"press close to exit\")\r\n#    sys.exit(1)\r\nFileName = sys.argv[1]\r\n#FileName =  \"C:/ArduinoPortable/sketchbooks/build/sketch_jan15a.ino.bin\"\r\nprint( \"\\n\\nReplacing dummy MD5 checksum in .bin file\")\r\n\r\nwith open(FileName, mode='rb') as file: # b is important -> binary\r\n    fileContent = file.read()\r\n\r\nfirmware_esp8266 = fileContent.find(\"ID_EASY_ESP8266\") >= 0\r\nfirmware_esp32   = fileContent.find(\"ID_EASY_ESP32\") >= 0\r\n\r\nif firmware_esp8266:\r\n  print(\"ESP8266 build\")\r\nif firmware_esp32:\r\n  print(\"ESP32 build\")\r\n\r\n# TODO: showParts does not work for esp32\r\nif firmware_esp8266:\r\n  nextpos =0;\r\n  while nextpos >=0:\r\n        nextpos = showParts(fileContent,nextpos)\r\n\r\nstartArray,endArray,hashString = \"\",\"\",\"\"\r\nincludeStr = \"hash includes segments:\"\r\n# memory sections:\r\n# 0: bootloader (not readable)\r\n# 1: program memory (SPI flash)\r\n# 2: unknown but stable\r\n# 3: RAM (initialized by bin file. Can be read but changes as you go :-( )\r\n# 4: RAM\r\n\r\nif firmware_esp8266:\r\n  for i in (1,2 ):     # use only stable segments, must be 4 in total. We use 2.\r\n    startArray =startArray + MemorySegmentStart[i]\r\n    endArray =  endArray   + MemorySegmentEnd[i]\r\n    hashString =hashString + MemoryContent[i]\r\n    with open(FileName+str(i), mode='wb') as file: # b is important -> binary\r\n      file.write(MemoryContent[i])\r\n    includeStr = includeStr +\" \"+ str(i)\r\n  print (includeStr)\r\n  \r\n  # IMPORTANT: pad array with zeros if you use only 3 segments (see above)\r\n  while len(startArray) < 16 :\r\n    startArray =startArray + struct.pack(\"I\",0)\r\n    endArray =  endArray   + struct.pack(\"I\",0)\r\n  # debug print (binascii.hexlify(startArray))\r\n  # debug print (binascii.hexlify(endArray))\r\n  if (len(endArray) + len (startArray)) != 32 :\r\n    print(\"ERROR: please make sure you add / remove padding if you change the semgents.\")\r\n\r\nif  fileContent.find( FILENAMEDUMMY) < 0:\r\n    print(\"ERROR: FILENAMEDUMMY dummy not found in binary\")\r\nelse:\r\n    BinaryFileName=os.path.basename(FileName) +\"\\0\"\r\n    if len(BinaryFileName) >64:\t\t\t\t\t\t\t\t# check that filename is <48 chars\r\n        BinaryFileName=BinaryFileName[0:64]\t\t\t\t\t# truncate if necessary. 49th char in ESP is zero already\r\n    else:\r\n        BinaryFileName= BinaryFileName.ljust(64,'\\0');\t\t# pad with zeros.\r\n    \r\n    fileContent=fileContent.replace(FILENAMEDUMMY,BinaryFileName)\r\n\r\nif firmware_esp8266:\r\n  if  fileContent.find( MD5DUMMY) < 0:\r\n    print(\"ERROR: MD5 dummy not found in binary\")\r\n  else:\r\n    hashString=hashString.replace (MD5DUMMY,\"\",1)\r\n    m = md5(hashString) #use segment 1\r\n    md5hash = m.digest()\r\n    print(\"MD5 hash: \"+ m.hexdigest())\r\n    fileContent=fileContent.replace(MD5DUMMY,md5hash+startArray+endArray)\r\n\r\nprint(\"\\nwriting output file:\\n\" + FileName)\r\nwith open(FileName, mode='wb') as file: # b is important -> binary\r\n  file.write(fileContent)\r\n\r\n#k=input(\"press close to exit\")\r\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "embed_files.sh",
          "type": "blob",
          "size": 3.7734375,
          "content": "#!/bin/bash\n\n#\n# This script walks through the assets folder and minifys all JS, HTML, CSS and SVG files. It also generates\n# the corresponding constants that are added to the data.h file on esp8266_deauther folder.\n#\n# @Author Erick B. Tedeschi < erickbt86 [at] gmail [dot] com >\n# @Author Wandmalfarbe https://github.com/Wandmalfarbe\n#\n# See: https://github.com/letscontrolit/ESPEasy/issues/1671#issuecomment-415144898\n\ncd static\noutputfile=\"$(pwd)/data_h_temp\"\nrm $outputfile\n\nfunction minify_html {\n\tfile=$1\n\tpost_To https://www.toptal.com/developers/html-minifier/api/raw $file\n}\n\nfunction minify_css {\n\tfile=$1\n\tpost_To https://www.toptal.com/developers/cssminifier/api/raw $file\n}\n\nfunction minify_js {\n\tfile=$1\n\tpost_To https://www.toptal.com/developers/javascript-minifier/api/raw $file\n}\n\nfunction post_To {\n\turl=$1\n\tfile=$2\n\tRESPONSE=/tmp/response.txt\n\tHEADERS=/tmp/headers.txt\n\tcurl -X POST -s --data-urlencode \"input@$file\" $url -D $HEADERS -o $RESPONSE\n\tstatus=$(cat $HEADERS | grep '^HTTP/2' | tail -1 | awk '{print $2}')\n\tif [[ \"$status\" == \"200\" ]]; then\n\t\tcat $RESPONSE > /tmp/converter.temp\n\t\trm $RESPONSE\n\t\trm $HEADERS\n\telse\n\t\techo \"can not minify $file error $status\"\n\t\texit 1\n\tfi\n}\n\nfunction minify_svg {\n\tfile=$1\n\tsvgo -i /Users/User/Desktop/icons/tools.svg -o - > /tmp/converter.temp\n}\n\nfunction ascii2hexCstyle { # fold at column 135 so VSCode can 'color-highlight' the array\n\tfile_name=$(constFileName $1)\n\tresult=$(cat /tmp/converter.temp | hexdump -ve '1/1 \"0x%.2x,\"')\n\tresult=$(echo $result | sed 's/,$//' | fold -w 135)\n\techo \"static const char DATA_${file_name}[] PROGMEM = {\"\n\techo \"$result,0\"\n\techo \"};\"\n\techo\n\techo\n}\n\n# split text in 132 character chunks, replace \\ by \\\\, replace \" by ', replace temp linebreak by real linebreak, wrap in quoted PROGMEM char array\nfunction ascii2stringCstyle {\n\tfile_name=$(constFileName $1)\n\tresult=$(cat /tmp/converter.temp)\n\t# s/\\\"/\\\\\\\"/g # double-quote \" to escaped double-quote \\\", can use for .js but increases byte count\n\t# s/\\\"/'\"'\"'/g # replace double-quote by single-quote, in a single-quoted string, can not be used for js\n\tresult=$(echo $result | sed -r 's/(.{132})/\\1\\x02/g; s/\\\\/\\\\\\\\/g; s/\\\"/'\"'\"'/g; s/\\x02/\\\"\\n\\\"/g')\n\techo \"static const char DATA_${file_name}[] PROGMEM = {\"\n\techo \"\\\"$result\\\"\"\n\techo \"};\"\n\techo\n\techo\n}\n\nfunction constFileName {\n\textension=$(echo $1 | egrep -io \"(json|svg|css|js|html)$\" | tr \"[:lower:]\" \"[:upper:]\")\n\tfile=$(echo $1 | sed 's/\\.json//; s/\\.svg//; s/\\.css//; s/\\.html//; s/\\.js//; s/\\.\\///' | tr '/' '_' | tr '.' '_' | tr '-' '_' | tr \"[:lower:]\" \"[:upper:]\")\n\tunderscore=\"_\"\n\techo $file$underscore$extension\n}\nfunction keepMinifiedFile {\n\tfile=$1\n\tfile=$( echo $file | sed -r 's/^(.*)\\.(.*?)$/\\1.min.\\2/' )\n\tcp /tmp/converter.temp $file\n\techo \"  Keeps Minified file as: $file\"\n}\n\n\nfile_list=$(find . -type f)\n\nfor file in $file_list; do\n\techo \"Processing: $file\"\n\tfile_name=$(constFileName $file)\n\techo \"  Array Name: $file_name\"\n\n\tif [[ \"$file\" == *.min.js ]]; then\n\t\techo \"  JS already minified\"\n\t\tcat $file > /tmp/converter.temp\n\t\tascii2hexCstyle $file >> $outputfile\n\telif [[ \"$file\" == *.js ]]; then\n\t\techo \"  JS minify\"\n\t\tminify_js $file\n\t\tascii2hexCstyle $file >> $outputfile\n\telif [[ \"$file\" == *.min.css ]]; then\n\t\techo \"  CSS already minified\"\n\t\tcat $file > /tmp/converter.temp\n\t\tascii2stringCstyle $file >> $outputfile\n\telif [[ \"$file\" == *.css ]]; then\n\t\techo \"  CSS minify\"\n\t\tminify_css $file\n\t\tkeepMinifiedFile $file\n\t\tascii2stringCstyle $file >> $outputfile\n\telif [[ \"$file\" == *.html ]]; then\n\t\techo \"  HTML minify\"\n\t\tminify_html $file\n\t\tascii2hexCstyle $file >> $outputfile\n\telif [[ \"$file\" == *.svg ]]; then\n\t\techo \"  SVG minify\"\n\t\tminify_svg $file\n\t\tascii2hexCstyle $file >> $outputfile\n\telse\n\t\techo \"  without minifier\"\n\t\tcat $file > /tmp/converter.temp\n\t\tascii2hexCstyle $file >> $outputfile\n\tfi\n\techo \"\"\n\tsleep 1\ndone\ncd ..\n"
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "memanalyzer.py",
          "type": "blob",
          "size": 5.1845703125,
          "content": "#!/usr/bin/env python\n########################################################\n#\n# ESPEasy plugin memory analyser\n# edwin@datux.nl\n#\n###\n#  Based on:\n#  https://raw.githubusercontent.com/SmingHub/Sming/develop/tools/memanalyzer.py\n#  Memory Analyzer\n#  Author: Slavey Karadzhov <slav@attachix.com>\n#  Based on https://github.com/Sermus/ESP8266_memory_analyzer\n#\n########################################################\nfrom collections import OrderedDict\nimport os.path\nimport shlex\nimport subprocess\nimport sys\nimport glob\nimport os\n\nTOTAL_IRAM = 32786;\nTOTAL_DRAM = 81920;\n\nenv=\"spec_memanalyze_ESP8266\"\n\nsections = OrderedDict([\n    (\"data\", \"Initialized Data (RAM)\"),\n    (\"rodata\", \"ReadOnly Data (RAM)\"),\n    (\"bss\", \"Uninitialized Data (RAM)\"),\n    (\"text\", \"Cached Code (IRAM)\"),\n    (\"irom0_text\", \"Uncached Code (SPI)\")\n])\n\n\ndef abort(txt):\n    raise(Exception(\"error: \"+txt))\n\ndef analyse_memory(elfFile):\n    command = \"%s -t '%s' \" % (objectDumpBin, elfFile)\n    response = subprocess.check_output(shlex.split(command))\n    if isinstance(response, bytes):\n        response = response.decode('utf-8')\n    lines = response.split('\\n')\n\n    # print(\"{0: >10}|{1: >30}|{2: >12}|{3: >12}|{4: >8}\".format(\"Section\", \"Description\", \"Start (hex)\", \"End (hex)\", \"Used space\"));\n    # print(\"------------------------------------------------------------------------------\");\n    ret={}\n    usedRAM = 0\n    usedIRAM = 0\n\n    i = 0\n    for (id, descr) in list(sections.items()):\n        sectionStartToken = \" _%s_start\" %  id\n        sectionEndToken   = \" _%s_end\" % id\n        sectionStart = -1\n        sectionEnd = -1\n        for line in lines:\n            if sectionStartToken in line:\n                data = line.split(' ')\n                sectionStart = int(data[0], 16)\n\n            if sectionEndToken in line:\n                data = line.split(' ')\n                sectionEnd = int(data[0], 16)\n\n            if sectionStart != -1 and sectionEnd != -1:\n                break\n\n        sectionLength = sectionEnd - sectionStart\n        # if i < 3:\n        #     usedRAM += sectionLength\n        # if i == 3:\n        #     usedIRAM = TOTAL_IRAM - sectionLength;\n\n        ret[id]=sectionLength\n        # print(\"{0: >10}|{1: >30}|{2:12X}|{3:12X}|{4:8}\".format(id, descr, sectionStart, sectionEnd, sectionLength))\n        # i += 1\n\n    # print(\"Total Used RAM : %d\" % usedRAM)\n    # print(\"Free RAM : %d\" % (TOTAL_DRAM - usedRAM))\n    # print(\"Free IRam : %d\" % usedIRAM)\n    return(ret)\n\n\n\ntry:\n\n    ################### start\n    if len(sys.argv) <= 1:\n        print(\"Usage: \\n\\t%s%s <path_to_objdump>\" % sys.argv[0])\n        print(\" e.g.\")\n        print(\"  ~/.platformio/packages/toolchain-xtensa/bin/xtensa-lx106-elf-objdump\")\n        print(\"  c:/Users/gijs/.platformio/packages/toolchain-xtensa/bin/xtensa-lx106-elf-objdump.exe\")\n\n        sys.exit(1)\n\n    # e.g.\n    # ~/.platformio/packages/toolchain-xtensa/bin/xtensa-lx106-elf-objdump\n    # c:/Users/gijs/.platformio/packages/toolchain-xtensa/bin/xtensa-lx106-elf-objdump.exe\n    objectDumpBin = sys.argv[1]\n\n    #get list of all plugins\n    #which plugins to test?\n\n\n    tmpplugins = []\n    plugins = []\n    pluginnames = {}\n    plugins.append('CORE_ONLY')\n    if len(sys.argv)>2:\n        tmpplugins=sys.argv[2:]\n    else:\n        tmpplugins=glob.glob(\"src/_[CPN][0-9][0-9][0-9]*.ino\")\n    tmpplugins.sort()\n\n    for plugin in tmpplugins:\n        pluginname=plugin[plugin.find('_'):]\n        buildflag= \"USES{}\".format(pluginname[:5])\n        pluginnames[buildflag] = plugin\n        plugins.append(buildflag)\n\n    plugins.append('MQTT_ONLY')\n    plugins.append('FEATURE_SETTINGS_ARCHIVE=1')\n    plugins.append('WEBSERVER_RULES_DEBUG=1')\n    plugins.append('WEBSERVER_TIMINGSTATS')\n    plugins.append('WEBSERVER_NEW_UI')\n\n    \n\n    print(\"Analysing ESPEasy memory usage for env {} ...\\n\".format(env))\n\n    output_format=\"{:<30}|{:<11}|{:<11}|{:<11}|{:<11}|{:<11}\"\n    print(output_format.format(\n        \"module\",\n        \"cache IRAM\",\n        \"init RAM\",\n        \"r.o. RAM\",\n        \"uninit RAM\",\n        \"Flash ROM\",\n    ))\n\n\n    ##### test per plugin\n    results={}\n    base = {}\n    for plugin in plugins:\n        buildflag= \"-D{}\".format(plugin)\n        my_env = os.environ.copy()\n        my_env[\"PLATFORMIO_BUILD_FLAGS\"] = buildflag\n        subprocess.check_call(\"platformio run --silent --environment {}\".format(env), shell=True, env=my_env)\n        res = analyse_memory(\".pio/build/\"+env+\"/firmware.elf\")\n        if plugin == 'CORE_ONLY':\n            base = res\n            print(output_format.format(\n                \"CORE\",\n                base['text'],\n                base['data'],\n                base['rodata'],\n                base['bss'],\n                base['irom0_text'],\n            ))\n        else:\n            results[plugin] = res\n            name = plugin\n            if plugin in pluginnames:\n                name = pluginnames[plugin]\n            print(output_format.format(\n                name,\n                results[plugin]['text']-base['text'],\n                results[plugin]['data']-base['data'],\n                results[plugin]['rodata']-base['rodata'],\n                results[plugin]['bss']-base['bss'],\n                results[plugin]['irom0_text']-base['irom0_text'],\n        ))\n\nexcept:\n\n    raise\n\n\nprint(\"\\n\")\n"
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "platformio.ini",
          "type": "blob",
          "size": 3.859375,
          "content": ";\r\n; PlatformIO Project Configuration File\r\n;\r\n; Please make sure to read documentation with examples first\r\n; http://docs.platformio.org/en/stable/projectconf.html\r\n;\r\n\r\n; *********************************************************************;\r\n; You can uncomment or add here Your favorite environment you want to work on at the moment\r\n; (uncomment only one !)\r\n; *********************************************************************;\r\n\r\n[platformio]\r\ncore_dir = .platformio\r\ndescription   = Firmware for ESP82xx/ESP32/ESP32-S2/ESP32-S3/ESP32-C3 for easy IoT deployment of sensors.\r\nboards_dir    = boards\r\nlib_dir       = lib\r\nextra_configs =\r\n  platformio_core_defs.ini\r\n  platformio_esp82xx_base.ini\r\n  platformio_esp82xx_envs.ini\r\n  platformio_esp32_envs.ini\r\n  platformio_esp32_solo1.ini\r\n  platformio_esp32c3_envs.ini\r\n  platformio_esp32s2_envs.ini\r\n  platformio_esp32s3_envs.ini\r\n  platformio_special_envs.ini\r\n  platformio_esp32c2_envs.ini\r\n  platformio_esp32c6_envs.ini\r\n\r\n\r\n;default_envs = normal_ESP32_4M\r\ndefault_envs = max_ESP32_16M8M_LittleFS_ETH\r\n;default_envs = normal_ESP32c6_4M316k_LittleFS_CDC\r\n; default_envs = custom_ESP8266_4M1M\r\n\r\n;default_envs = normal_ESP8266_4M1M\r\n;default_envs = test_beta_ESP8266_4M1M\r\n; ..etc\r\n;build_cache_dir = $PROJECT_DIR\\.buildcache\r\n\r\n\r\n; add these:\r\n; -Werror -Wall -Wextra -pedantic -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wlogical-op\r\n;                    -Wmissing-include-dirs -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-promo -Wstrict-null-sentinel\r\n;                    -Wstrict-overflow=5 -Wundef -Wno-unused -Wno-variadic-macros -Wno-parentheses -fdiagnostics-show-option\r\n; thanks @chouffe103\r\n[compiler_warnings]\r\nbuild_flags = -Wall -Wno-parentheses -fdiagnostics-show-option\r\n\r\n\r\n[minimal_size]\r\nbuild_flags =\r\n  -Os\r\n  -ffunction-sections\r\n  -fdata-sections\r\n  -Wl,--gc-sections\r\n  -s\r\n\r\n\r\n[espota]\r\nupload_protocol = espota\r\n; each flag in a new line\r\n; Do not use port 8266 for OTA, since that's used for ESPeasy p2p\r\nupload_flags_esp8266 =\r\n  --port=18266\r\nupload_flags_esp32 =\r\n  --port=3232\r\nbuild_flags = -DFEATURE_ARDUINO_OTA=1\r\nupload_port = 192.168.1.152\r\n\r\n\r\n[debug_flags]\r\n;build_flags               = -Wstack-usage=300\r\nbuild_flags               =\r\n\r\n[mqtt_flags]\r\nbuild_flags               = -DMQTT_MAX_PACKET_SIZE=1024\r\n\r\n[extra_scripts_default]\r\nextra_scripts             = pre:tools/pio/install-requirements.py\r\n                            pre:tools/pio/set-ci-defines.py\r\n                            pre:tools/pio/generate-compiletime-defines.py\r\n                            tools/pio/copy_files.py\r\n\r\n[extra_scripts_esp8266]\r\nextra_scripts             = tools/pio/gzip-firmware.py\r\n                            pre:tools/pio/remove_concat_cpp_files.py\r\n                            pre:tools/pio/concat_cpp_files.py\r\n                            ${extra_scripts_default.extra_scripts}\r\n\r\n\r\n[common]\r\nlib_archive               = false\r\nlib_ldf_mode              = chain\r\nlib_compat_mode           = strict\r\nshared_libdeps_dir        = lib\r\nframework                 = arduino\r\nupload_speed              = 115200\r\nmonitor_speed             = 115200\r\n;targets                   = size, checkprogsize\r\ntargets                   =\r\nsrc_filter                = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<*/Commands_tmp/> -<*/ControllerQueue_tmp/> -<*/DataStructs_tmp/> -<*/DataTypes_tmp/>  -<*/ESPEasyCore_tmp/>  -<*/Globals_tmp/> -<*/Helpers_tmp/> -<*/PluginStructs_tmp/>  -<*/WebServer_tmp/>\r\n\r\n; Backwards compatibility: https://github.com/platformio/platformio-core/issues/4270\r\n;build_src_filter  = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<*/Commands/> -<*/ControllerQueue/> -<*/DataStructs/> -<*/DataTypes/> -<*/Globals/> -<*/Helpers/> -<*/PluginStructs/>  -<*/WebServer/>\r\n\r\n\r\n[env]\r\nextends                   = common\r\n\r\n"
        },
        {
          "name": "platformio_core_defs.ini",
          "type": "blob",
          "size": 10.3212890625,
          "content": "; *********************************************************************\n\n; **** Definition cheat sheet:\n; board_build.flash_mode in terms of performance: QIO > QOUT > DIO > DOUT\n; for lib_ldf_mode, see http://docs.platformio.org/en/latest/librarymanager/ldf.html;ldf\n\n; **** Frequently used build flags:\n; Use Custom.h file to override default settings for ESPeasy: -D USE_CUSTOM_H (set via python script when needed)\n; Set VCC mode to measure Vcc of ESP chip :                   -D FEATURE_ADC_VCC=1\n\n; Build Flags:\n;  -DUSE_CONFIG_OVERRIDE\n; lwIP 1.4 (Default)\n;  -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH\n; lwIP 2 - Low Memory\n;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY\n; lwIP 2 - Higher Bandwitdh\n;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH\n; VTABLES in Flash (default)\n;  -DVTABLES_IN_FLASH\n; VTABLES in Heap\n;  -DVTABLES_IN_DRAM\n; VTABLES in IRAM\n;  -DVTABLES_IN_IRAM\n; NO_EXTRA_4K_HEAP - this forces the default NONOS-SDK user's heap location\n;     Default currently overlaps cont stack (Arduino) with sys stack (System)\n;     to save up-to 4 kB of heap. (starting core_2.4.2)\n; ESP8266_DISABLE_EXTRA4K  - Calls disable_extra4k_at_link_time() from setup\n;                            to force the linker keep user's stack in user ram.\n; CONT_STACKSIZE to set the 'cont' (Arduino) stack size. Default = 4096\n; -mtarget-align  see: https://github.com/arendst/Sonoff-Tasmota/issues/3678#issuecomment-419712437\n\n[esp82xx_defaults]\nbuild_flags               = -D NDEBUG\n                            -lstdc++ -lsupc++\n                            -mtarget-align\n                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY\n                            -DVTABLES_IN_FLASH\n                            -DPUYA_SUPPORT=1\n                            -DDISABLE_SC16IS752_SPI\n                            -DCRON_USE_LOCAL_TIME\n                            -fno-strict-aliasing\n                            -I$PROJECT_DIR/src/include\n                            -include \"ESPEasy_config.h\"\n\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ESP32HTTPUpdateServer\n                            ServoESP32\n                            IRremoteESP8266\n                            HeatpumpIR\n                            TinyWireM\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n                            LittleFS\n                            ArduinoOTA\n                            ESP8266mDNS\n                            I2C AXP192 Power management\n;                            EspSoftwareSerial\n\n\n\n; Keep optimization flag to -O2\n; See: https://github.com/platformio/platform-espressif8266/issues/288\n; For \"-fno-strict-aliasing\"\n; See: https://github.com/esp8266/Arduino/issues/8261\n[esp82xx_2_7_x]\nbuild_flags               = -DNDEBUG\n                            -mtarget-align\n                            -DVTABLES_IN_FLASH\n                            -fno-exceptions\n                            -lstdc++\n                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH\n                            -DPUYA_SUPPORT=1\n                            -DCORE_POST_2_5_0\n                            -DDISABLE_SC16IS752_SPI\n                            -DCRON_USE_LOCAL_TIME\n                            -fno-strict-aliasing\n                            -DLIBRARIES_NO_LOG=1\n                            -DNO_GLOBAL_I2S\n                            -I$PROJECT_DIR/src/include\n                            -include \"ESPEasy_config.h\"\n                            -O2\n                            -s\n                            -DBEARSSL_SSL_BASIC\n                            -DCORE_POST_2_6_0 \n                            -DPR_9453_FLUSH_TO_CLEAR=flush\n                            ; remove the 4-bytes alignment for PSTR()\n                            -DPSTR_ALIGN=1\n                            -Werror=return-type\nbuild_unflags             = ${esp82xx_common.build_unflags}\nlib_ignore                = ${esp82xx_defaults.lib_ignore}\n                            EspSoftwareSerial\n\n\n[esp82xx_3_0_x]\nbuild_flags               = ${esp82xx_2_7_x.build_flags} \n                            -DCORE_POST_3_0_0\n                            -Wno-deprecated-declarations\n;                            -flto=auto\n;                            -Wl,-flto\nbuild_unflags             = -DDEBUG_ESP_PORT\n                            -fexceptions\n                            -Wall\n;                            -fno-lto\nlib_ignore                = ${esp82xx_defaults.lib_ignore}\nextra_scripts             = pre:tools/pio/pre_custom_esp8266_toolchain.py\n\n\n\n; See for SDK flags: https://github.com/esp8266/Arduino/blob/master/tools/platformio-build.py\n\n[core_2_7_4]\nextends                   = esp82xx_2_7_x\nplatform                  = espressif8266@2.6.3\nplatform_packages         =\n\tframework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#2.7.4\nbuild_flags               = ${esp82xx_2_7_x.build_flags} \n                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703\n                            -DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=0\n                            -Wno-deprecated-declarations\n                            -DLIBRARIES_NO_LOG=1\nlib_ignore                = ${esp82xx_2_7_x.lib_ignore}\nbuild_unflags             = ${esp82xx_2_7_x.build_unflags}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n\n[core_stage]\nextends                   = esp82xx_3_0_x\nplatform                  = espressif8266@4.2.1\nplatform_packages         = \nbuild_flags               = ${esp82xx_3_0_x.build_flags}\n                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3\n                            -DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=1\n                            -DLIBRARIES_NO_LOG=1\n                            -DFP_IN_IRAM\n                            -DPHASE_LOCKED_WAVEFORM\nbuild_unflags             = ${esp82xx_3_0_x.build_unflags}\nlib_ignore                = ${esp82xx_defaults.lib_ignore}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n\n\n; See: https://arduino-esp8266.readthedocs.io/en/latest/mmu.html\n[core_stage_2ndheap]\nextends                   = esp82xx_3_0_x\nplatform                  = espressif8266@4.2.1\nplatform_packages         = \nbuild_flags               = ${esp82xx_3_0_x.build_flags}\n                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3\n                            -DUSES_LATEST_SOFTWARE_SERIAL_LIBRARY=1\n                            -DLIBRARIES_NO_LOG=1\n                            -DPHASE_LOCKED_WAVEFORM\n                            -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED\n                            -DUSE_SECOND_HEAP\nbuild_unflags             = ${esp82xx_3_0_x.build_unflags}\nlib_ignore                = ${core_stage.lib_ignore}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n\n\n; Updated ESP-IDF to the latest stable 4.0.1\n; See: https://github.com/platformio/platform-espressif32/releases\n; IDF 4.4 = platform-espressif32 3.4.x = espressif/arduino-esp32 tag 2.0.4\n; Just for those who lost track of the extremely confusing numbering schema.\n; For MUSTFIX_CLIENT_TIMEOUT_IN_SECONDS See: https://github.com/espressif/arduino-esp32/pull/6676\n[core_esp32_IDF5_1_4__3_1_0_SPIFFS]\nplatform                    = https://github.com/tasmota/platform-espressif32/releases/download/2024.09.10/platform-espressif32.zip\nplatform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/3202/framework-arduinoespressif32-all-release_v5.1-41a885b.zip\nbuild_flags                 = -DESP32_STAGE\n                              -DESP_IDF_VERSION_MAJOR=5\n                              -DLIBRARIES_NO_LOG=1\n                              -DDISABLE_SC16IS752_SPI\n                              -DCONFIG_PM_ENABLE\n                              -DESP_IDF_STILL_NEEDS_SPI_REGISTERS_FIXED\n                              -DPR_9453_FLUSH_TO_CLEAR=clear\n\n                              ;-DETH_TYPE_JL1101_SUPPORTED\n;                              -DCONFIG_LWIP_L2_TO_L3_COPY\n;                              -DETH_SPI_SUPPORTS_NO_IRQ=1\n                              -DCONFIG_FREERTOS_USE_TICKLESS_IDLE=1\n                              -DCONFIG_FREERTOS_IDLE_TIME_BEFORE_SLEEP=3\n                              -DNEOPIXEL_ESP32_RMT_DEFAULT\n                              -DCRON_USE_LOCAL_TIME\n                              -I$PROJECT_DIR/src/include\n                              -include \"sdkconfig.h\"\n                              -include \"ESPEasy_config.h\"\n                              -include \"esp32x_fixes.h\"\n                              -Wnull-dereference\nlib_ignore =\nlib_extra_dirs            =\n                            lib/lib_ssl\n\n\n; ESP_IDF 5.3.1\n[core_esp32_IDF5_3_2__3_1_0_LittleFS]\nplatform                    = https://github.com/Jason2866/platform-espressif32.git\nplatform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/3203/framework-arduinoespressif32-all-release_v5.3-ddc10306.zip\nbuild_flags                 = -DESP32_STAGE\n                              -DESP_IDF_VERSION_MAJOR=5\n                              -DLIBRARIES_NO_LOG=1\n                              -DDISABLE_SC16IS752_SPI\n                              -DCONFIG_PM_ENABLE\n                              -DETH_TYPE_JL1101_SUPPORTED\n                              ; PR_9453_FLUSH_TO_CLEAR_REVERTED\n                              -DPR_9453_FLUSH_TO_CLEAR=clear\n;                              -DCONFIG_LWIP_L2_TO_L3_COPY\n;                              -DETH_SPI_SUPPORTS_NO_IRQ=1\n                              -DCONFIG_FREERTOS_USE_TICKLESS_IDLE=1\n                              -DCONFIG_FREERTOS_IDLE_TIME_BEFORE_SLEEP=3\n                              -DNEOPIXEL_ESP32_RMT_DEFAULT\n                              -DCRON_USE_LOCAL_TIME\n                              -I$PROJECT_DIR/src/include\n                              -include \"sdkconfig.h\"\n                              -include \"ESPEasy_config.h\"\n                              -include \"esp32x_fixes.h\"\n                              -Wnull-dereference\nlib_ignore                = \nlib_extra_dirs            =\n                            lib/lib_ssl\n\n; Regarding the define PR_9453_FLUSH_TO_CLEAR\n; See: \n;  https://github.com/espressif/arduino-esp32/pull/8871/files\n;  https://github.com/espressif/arduino-esp32/pull/9453/files"
        },
        {
          "name": "platformio_esp32_envs.ini",
          "type": "blob",
          "size": 24.294921875,
          "content": ";;; ESP32 test build ********************************************************************;\r\n; Status of the ESP32 support is still considered \"beta\"                                 ;\r\n; Most plugins work just fine on ESP32.                                                  ;\r\n; Especially some plugins using serial may not run very well  (GPS does run fine).       ;\r\n; ***************************************************************************************;\r\n\r\n\r\n[esp32_base]\r\nextends                   = common, core_esp32_IDF5_1_4__3_1_0_SPIFFS\r\nupload_speed              = 460800\r\nupload_before_reset       = default_reset\r\nupload_after_reset        = hard_reset\r\nextra_scripts             = post:tools/pio/post_esp32.py\r\n                            ${extra_scripts_default.extra_scripts}\r\n; you can disable debug linker flag to reduce binary size (comment out line below), but the backtraces will become less readable\r\n;                            tools/pio/extra_linker_flags.py\r\n; fix the platform package to use gcc-ar and gcc-ranlib to enable lto linker plugin\r\n; more detail: https://embeddedartistry.com/blog/2020/04/13/prefer-gcc-ar-to-ar-in-your-buildsystems/\r\n;                            pre:tools/pio/apply_patches.py\r\nbuild_unflags             = -Wall\r\n                            -fno-lto\r\nbuild_flags               = ${core_esp32_IDF5_1_4__3_1_0_SPIFFS.build_flags}\r\n;                            ${mqtt_flags.build_flags}\r\n                            -DMQTT_MAX_PACKET_SIZE=2048\r\n                            -DCONFIG_FREERTOS_ASSERT_DISABLE\r\n                            -DCONFIG_LWIP_ESP_GRATUITOUS_ARP\r\n                            -fno-strict-aliasing\r\n                            -flto=auto\r\n                            -Wswitch\r\n                            -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE\r\nmonitor_filters           = esp32_exception_decoder\r\nlib_ignore                = \r\n                            ${core_esp32_IDF5_1_4__3_1_0_SPIFFS.lib_ignore}\r\n\r\n\r\n[esp32_base_idf5]\r\nextends                   = common, core_esp32_IDF5_3_2__3_1_0_LittleFS\r\nupload_speed              = 460800\r\nupload_before_reset       = default_reset\r\nupload_after_reset        = hard_reset\r\nextra_scripts             = post:tools/pio/post_esp32.py\r\n                            ${extra_scripts_default.extra_scripts}\r\n; you can disable debug linker flag to reduce binary size (comment out line below), but the backtraces will become less readable\r\n;                            tools/pio/extra_linker_flags.py\r\n; fix the platform package to use gcc-ar and gcc-ranlib to enable lto linker plugin\r\n; more detail: https://embeddedartistry.com/blog/2020/04/13/prefer-gcc-ar-to-ar-in-your-buildsystems/\r\n;                            pre:tools/pio/apply_patches.py\r\n\r\n; When using LTO, make sure NOT to use -mtext-section-literals\r\n; -mtext-section-literals may be required when building large builds\r\n; However LTO cannot optimize builds with text section literals and thus will result in quite a lot larger builds (80k - 140k larger)\r\nbuild_unflags             = -Wall\r\n                            -fno-lto\r\nbuild_flags               = ${core_esp32_IDF5_3_2__3_1_0_LittleFS.build_flags}\r\n;                            ${mqtt_flags.build_flags}\r\n                            -DMQTT_MAX_PACKET_SIZE=2048\r\n                            -DCONFIG_FREERTOS_ASSERT_DISABLE\r\n                            -DCONFIG_LWIP_ESP_GRATUITOUS_ARP\r\n                            -fno-strict-aliasing\r\n                            -flto=auto\r\n                            -Wswitch\r\n                            -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE\r\n;                            -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO\r\n;                            -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE\r\n                            -DLWIP_IPV6=1\r\nmonitor_filters           = esp32_exception_decoder\r\nlib_ignore                = \r\n                            ${core_esp32_IDF5_3_2__3_1_0_LittleFS.lib_ignore}\r\n\r\n\r\n; -flto cannot be used for ESP32 C3!\r\n; See: https://github.com/letscontrolit/ESPEasy/pull/3845#issuecomment-1014857366\r\n; TD-er: 2022-01-20: Disabled for now as it also resulted in obscure linker errors on ESP32-S2 and ESP32 running custom builds.\r\n;build_flags               = ${esp32_base.build_flags}\r\n;                            -flto\r\n;build_unflags             = ${esp32_base.build_unflags}\r\n;                            -fexceptions\r\n;                            -fno-lto\r\n\r\n\r\n[esp32_always]\r\nlib_ignore                = ESP8266Ping\r\n                            ESP8266HTTPUpdateServer\r\n                            ESP8266WiFi\r\n                            ESP8266WebServer\r\n                            ESP8266mDNS\r\n                            ESPEasy_ESP8266Ping\r\n                            RABurton ESP8266 Mutex\r\n                            TinyWireM\r\n                            LittleFS_esp32\r\n                            Adafruit NeoPixel\r\n                            ${esp32_base.lib_ignore}\r\n\r\n\r\n[esp32_common]\r\nextends                   = esp32_base\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${no_ir.lib_ignore}\r\n                            ESP32 BLE Arduino\r\nbuild_flags               = ${esp32_base.build_flags}\r\n                            -DESP32_CLASSIC\r\nextra_scripts             = ${esp32_base.extra_scripts}\r\nbuild_unflags             = ${esp32_base.build_unflags}\r\n                            -fexceptions\r\n\r\n[esp32_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n;                            -mtext-section-literals\r\n                            -DESP32_CLASSIC\r\n                            -DUSE_LITTLEFS\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\nextra_scripts             = ${esp32_common.extra_scripts}\r\nboard_build.filesystem    = littlefs\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ESP32 BLE Arduino\r\n                            ${core_esp32_IDF5_3_2__3_1_0_LittleFS.lib_ignore}\r\n\r\n\r\n[esp32_IRExt]\r\nextends                   = esp32_common\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\nbuild_flags               = ${esp32_common.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_NORMAL_IRext\r\n                            -DCOLLECTION_USE_RTTTL\r\nextra_scripts             = ${esp32_common.extra_scripts}\r\n                            pre:tools/pio/ir_build_check.py\r\n\r\n\r\n[esp32_custom_base]\r\nextends                   = esp32_common\r\nbuild_flags               = ${esp32_common.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\nextra_scripts             = ${esp32_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n[esp32_custom_base_LittleFS]\r\nextends                   = esp32_common_LittleFS\r\nbuild_flags               = ${esp32_common_LittleFS.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\nextra_scripts             = ${esp32_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n\r\n[env:custom_ESP32_4M316k]\r\nextends                   = esp32_custom_base\r\nboard                     = esp32_4M\r\n\r\n; [env:custom_ESP32_4M316k_LittleFS]\r\n; extends                   = esp32_custom_base_LittleFS\r\n; board                     = esp32_4M\r\n\r\n[env:custom_ESP32_16M8M_LittleFS_ETH]\r\nextends                   = esp32_custom_base_LittleFS\r\nboard                     = esp32_16M8M\r\nboard_upload.flash_size   = 16MB\r\nbuild_flags               = ${esp32_custom_base_LittleFS.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:custom_IR_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_IR\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\nextra_scripts             = ${esp32_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32_IR.py\r\n                            pre:tools/pio/ir_build_check.py\r\n\r\n[env:custom_ESP32_4M2M_NO_OTA_LittleFS_ETH]\r\nextends                   = esp32_custom_base_LittleFS\r\nboard                     = esp32_4M2M\r\nbuild_flags               = ${esp32_custom_base_LittleFS.build_flags}\r\n                            -DNO_HTTP_UPDATER\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n[env:normal_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nlib_ignore                = ${esp32_common.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n; [env:normal_ESP32_4M316k_LittleFS]\r\n; extends                   = esp32_common_LittleFS\r\n; board                     = esp32_4M\r\n; lib_ignore                = ${esp32_common_LittleFS.lib_ignore}\r\n;                             ${no_ir.lib_ignore}\r\n\r\n[env:collection_A_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_B_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_B_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_C_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_C_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_D_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_D_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_E_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_E_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_F_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_F_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_G_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_SET_COLLECTION_G_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n\r\n[env:collection_A_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_ESP32\r\n\r\n[env:collection_B_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_B_ESP32\r\n\r\n[env:collection_C_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_C_ESP32\r\n\r\n[env:collection_D_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_D_ESP32\r\n\r\n[env:collection_E_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_E_ESP32\r\n\r\n[env:collection_F_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_F_ESP32\r\n\r\n[env:collection_G_ESP32_IRExt_4M316k]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DPLUGIN_SET_COLLECTION_G_ESP32\r\n\r\n[env:energy_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_ENERGY_COLLECTION\r\n\r\n[env:display_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_DISPLAY_COLLECTION\r\n\r\n[env:climate_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_CLIMATE_COLLECTION\r\n\r\n[env:neopixel_ESP32_4M316k]\r\nextends                   = esp32_common\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_common.build_flags}  \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -D PLUGIN_NEOPIXEL_COLLECTION\r\n\r\n\r\n[env:custom_ESP32_4M316k_ETH]\r\nextends                   = env:custom_ESP32_4M316k\r\nbuild_flags               = ${env:custom_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:custom_ESP32_4M316k_LittleFS_ETH]\r\nextends                   = esp32_custom_base_LittleFS\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_custom_base_LittleFS.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n[env:custom_IR_ESP32_4M316k_ETH]\r\nextends                   = env:custom_IR_ESP32_4M316k\r\nbuild_flags               = ${env:custom_IR_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\nextra_scripts             = ${env:custom_IR_ESP32_4M316k.extra_scripts}\r\n\r\n[env:custom_IR_ESP32_16M8M_LittleFS_ETH]\r\nextends                   = esp32_common_LittleFS\r\nboard                     = esp32_16M8M\r\nboard_upload.flash_size   = 16MB\r\nbuild_flags               = ${esp32_common_LittleFS.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_IR\r\n                            -DFEATURE_ETHERNET=1\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${esp32_common_LittleFS.lib_ignore}\r\nextra_scripts             = ${esp32_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32_IR.py\r\n                            pre:tools/pio/ir_build_check.py\r\n\r\n[env:normal_ESP32_4M316k_ETH]\r\nextends                   = env:normal_ESP32_4M316k\r\nbuild_flags               = ${env:normal_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n[env:normal_ESP32_4M316k_LittleFS_ETH]\r\nextends                   = esp32_common_LittleFS\r\nboard                     = esp32_4M\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${esp32_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\nbuild_flags               = ${esp32_common_LittleFS.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n[env:normal_ESP32_IRExt_4M316k_ETH]\r\nextends                   = esp32_IRExt\r\nboard                     = esp32_4M\r\nbuild_flags               = ${esp32_IRExt.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:collection_A_ESP32_4M316k_ETH]\r\nextends                   = env:collection_A_ESP32_4M316k\r\nbuild_flags               = ${env:collection_A_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_B_ESP32_4M316k_ETH]\r\nextends                   = env:collection_B_ESP32_4M316k\r\nbuild_flags               = ${env:collection_B_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_C_ESP32_4M316k_ETH]\r\nextends                   = env:collection_C_ESP32_4M316k\r\nbuild_flags               = ${env:collection_C_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_D_ESP32_4M316k_ETH]\r\nextends                   = env:collection_D_ESP32_4M316k\r\nbuild_flags               = ${env:collection_D_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_E_ESP32_4M316k_ETH]\r\nextends                   = env:collection_E_ESP32_4M316k\r\nbuild_flags               = ${env:collection_E_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_F_ESP32_4M316k_ETH]\r\nextends                   = env:collection_F_ESP32_4M316k\r\nbuild_flags               = ${env:collection_F_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_G_ESP32_4M316k_ETH]\r\nextends                   = env:collection_G_ESP32_4M316k\r\nbuild_flags               = ${env:collection_G_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:energy_ESP32_4M316k_ETH]\r\nextends                   = env:energy_ESP32_4M316k\r\nbuild_flags               = ${env:energy_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:display_ESP32_4M316k_ETH]\r\nextends                   = env:display_ESP32_4M316k\r\nbuild_flags               = ${env:display_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:climate_ESP32_4M316k_ETH]\r\nextends                   = env:climate_ESP32_4M316k\r\nbuild_flags               = ${env:climate_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:neopixel_ESP32_4M316k_ETH]\r\nextends                   = env:neopixel_ESP32_4M316k\r\nbuild_flags               = ${env:neopixel_ESP32_4M316k.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_A_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_B_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_B_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_C_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_C_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_D_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_D_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_E_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_E_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_F_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_F_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:collection_G_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_SET_COLLECTION_G_ESP32\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:energy_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_ENERGY_COLLECTION\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:display_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_DISPLAY_COLLECTION\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:climate_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -DPLUGIN_CLIMATE_COLLECTION\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n; [env:neopixel_ESP32_IRExt_4M316k_ETH]\r\n; extends                   = esp32_IRExt\r\n; board                     = esp32_4M\r\n; build_flags               = ${esp32_IRExt.build_flags}\r\n;                             -D PLUGIN_NEOPIXEL_COLLECTION\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n\r\n; ESP32 MAX builds 16M flash ------------------------------\r\n\r\n; A Lolin D32 PRO with 16MB Flash, allowing 4MB sketch size, and file storage using the default (SPIFFS) filesystem\r\n[env:max_ESP32_16M1M]\r\nextends                   = esp32_common\r\nboard                     = esp32_16M1M\r\nboard_upload.flash_size   = 16MB\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\nbuild_flags               = ${esp32_common.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\n\r\n[env:max_ESP32_16M1M_ETH]\r\nextends                   = env:max_ESP32_16M1M\r\nbuild_flags               = ${env:max_ESP32_16M1M.build_flags}\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n; A Lolin D32 PRO with 16MB Flash, allowing 4MB sketch size, and file storage using LittleFS filesystem\r\n[env:max_ESP32_16M8M_LittleFS_ETH]\r\nextends                   = esp32_common_LittleFS\r\nboard                     = esp32_16M8M\r\nboard_upload.flash_size   = 16MB\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${esp32_common_LittleFS.lib_ignore}\r\nbuild_flags               = ${esp32_common_LittleFS.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\n                            -DFEATURE_ETHERNET=1\r\nextra_scripts             = ${esp32_common.extra_scripts}\r\nboard_build.filesystem    = littlefs\r\n\r\n; If you have a board with Ethernet integrated and 16MB Flash, then this configuration could be enabled, it's based on the max_ESP32_16M8M_LittleFS definition\r\n; [env:max_ESP32_16M8M_LittleFS_ETH]\r\n; extends                   = env:max_ESP32_16M8M_LittleFS\r\n; board                     = ${env:max_ESP32_16M8M_LittleFS.board}\r\n; build_flags               = ${env:max_ESP32_16M8M_LittleFS.build_flags}\r\n;                             -DFEATURE_ETHERNET=1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "name": "platformio_esp32_solo1.ini",
          "type": "blob",
          "size": 2.248046875,
          "content": "\r\n; IDF 5.3.1\r\n[esp32_solo1_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nplatform                  = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF53\r\nplatform_packages         = framework-arduino-solo1 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/3204/framework-arduinoespressif32-solo1-release_v5.3-ddc10306.zip\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DUSE_LITTLEFS\r\n                            -DCORE32SOLO1\r\nextra_scripts             = ${esp32_base_idf5.extra_scripts}\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\n                            -fexceptions\r\nboard_build.filesystem    = littlefs\r\n\r\n\r\n[env:custom_ESP32solo1_4M316k_LittleFS_ETH]\r\nextends                   = esp32_solo1_common_LittleFS\r\nboard                     = esp32_solo1_4M\r\nbuild_flags               = ${esp32_solo1_common_LittleFS.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DFEATURE_ETHERNET=1\r\nextra_scripts             = ${esp32_solo1_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n\r\n[env:normal_ESP32solo1_4M316k_LittleFS_ETH]\r\nextends                   = esp32_solo1_common_LittleFS\r\nboard                     = esp32_solo1_4M\r\nbuild_flags               = ${esp32_solo1_common_LittleFS.build_flags} \r\n                            -DFEATURE_ETHERNET=1\r\nlib_ignore                = ${esp32_solo1_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n\r\n[env:energy_ESP32solo1_4M316k_LittleFS_ETH]\r\nextends                   = esp32_solo1_common_LittleFS\r\nboard                     = esp32_solo1_4M\r\nbuild_flags               = ${esp32_solo1_common_LittleFS.build_flags}  \r\n                            -D PLUGIN_ENERGY_COLLECTION\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:climate_ESP32solo1_4M316k_LittleFS_ETH]\r\nextends                   = esp32_solo1_common_LittleFS\r\nboard                     = esp32_solo1_4M\r\nbuild_flags               = ${esp32_solo1_common_LittleFS.build_flags}  \r\n                            -D PLUGIN_CLIMATE_COLLECTION\r\n                            -DFEATURE_ETHERNET=1\r\n"
        },
        {
          "name": "platformio_esp32c2_envs.ini",
          "type": "blob",
          "size": 2.37890625,
          "content": "; No Ethernet for ESP32-C2 as this one already hasn't much RAM.\r\n; Thus Jason removed Ethernet support for ESP32-C2 from the PIO platform_packages\r\n[esp32c2_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DUSE_LITTLEFS\r\n                            -DESP32C2\r\nextra_scripts             = ${esp32_base_idf5.extra_scripts}\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\n                            -fexceptions\r\nboard_build.filesystem    = littlefs\r\nlib_ignore                = ${esp32_base_idf5.lib_ignore}\r\n                            NeoPixelBus\r\n                            NeoPixelBus_wrapper\r\n                            Adafruit NeoMatrix via NeoPixelBus\r\n\r\n\r\n[env:safeboot_ESP32c2_4M_LittleFS]\r\nextends                   = esp32c2_common_LittleFS\r\nboard                     = esp32c2\r\nbuild_flags               = ${esp32c2_common_LittleFS.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_SAFEBOOT\r\nextra_scripts             = ${esp32c2_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_safeboot_esp32c2.py\r\nlib_ignore                = ${esp32c2_common_LittleFS.lib_ignore}\r\n\r\n\r\n[env:custom_ESP32c2_2M320k_LittleFS_noOTA]\r\nextends                   = esp32c2_common_LittleFS\r\nboard                     = esp32c2_2M\r\nbuild_flags               = ${esp32c2_common_LittleFS.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\nextra_scripts             = ${esp32c2_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32c2.py\r\n\r\n[env:custom_ESP32c2_4M316k_LittleFS]\r\nextends                   = esp32c2_common_LittleFS\r\nboard                     = esp32c2\r\nbuild_flags               = ${esp32c2_common_LittleFS.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\nextra_scripts             = ${esp32c2_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32c2.py\r\n\r\n[env:normal_ESP32c2_4M316k_LittleFS]\r\nextends                   = esp32c2_common_LittleFS\r\nboard                     = esp32c2\r\nbuild_flags               = ${esp32c2_common_LittleFS.build_flags} \r\nlib_ignore                = ${esp32c2_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n"
        },
        {
          "name": "platformio_esp32c3_envs.ini",
          "type": "blob",
          "size": 7.1162109375,
          "content": "\r\n\r\n\r\n[esp32c3_common]\r\nextends                   = esp32_base\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${no_ir.lib_ignore}\r\n                            ESP32 BLE Arduino\r\nbuild_flags               = ${esp32_base.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DESP32C3\r\nextra_scripts             = ${esp32_base.extra_scripts}\r\nbuild_unflags             = ${esp32_base.build_unflags}\r\n                            -fexceptions\r\n\r\n[esp32c3_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DUSE_LITTLEFS\r\n                            -DESP32C3\r\nextra_scripts             = ${esp32_base_idf5.extra_scripts}\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\n                            -fexceptions\r\nboard_build.filesystem    = littlefs\r\n\r\n\r\n[env:custom_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\nextra_scripts             = ${esp32c3_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n\r\n[env:custom_IR_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_IR\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\nextra_scripts             = ${esp32c3_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32_IR.py\r\n                            pre:tools/pio/ir_build_check.py\r\n\r\n; [env:custom_ESP32c3_4M316k_LittleFS_CDC]\r\n; extends                   = esp32c3_common_LittleFS\r\n; board                     = esp32c3cdc\r\n; build_flags               = ${esp32c3_common_LittleFS.build_flags} \r\n;                             -DPLUGIN_BUILD_CUSTOM\r\n; extra_scripts             = ${esp32c3_common_LittleFS.extra_scripts}\r\n;                             pre:tools/pio/pre_custom_esp32.py\r\n\r\n[env:custom_ESP32c3_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32c3_common_LittleFS\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common_LittleFS.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DFEATURE_ETHERNET=1\r\nextra_scripts             = ${esp32c3_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n\r\n\r\n[env:normal_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nlib_ignore                = ${esp32_common.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n\r\n[env:normal_ESP32c3_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32c3_common_LittleFS\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common_LittleFS.build_flags} \r\n                            -DFEATURE_ETHERNET=1\r\nlib_ignore                = ${esp32c3_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n[env:collection_A_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_B_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_B_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_C_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_C_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_D_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_D_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_E_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_E_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_F_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_F_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_G_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_G_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n\r\n[env:energy_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -D PLUGIN_ENERGY_COLLECTION\r\n\r\n[env:energy_ESP32c3_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32c3_common_LittleFS\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common_LittleFS.build_flags}  \r\n                            -D PLUGIN_ENERGY_COLLECTION\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n[env:display_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -D PLUGIN_DISPLAY_COLLECTION\r\n\r\n[env:climate_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags}  \r\n                            -D PLUGIN_CLIMATE_COLLECTION\r\n\r\n[env:neopixel_ESP32c3_4M316k_CDC]\r\nextends                   = esp32c3_common\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common.build_flags} \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -DPLUGIN_NEOPIXEL_COLLECTION\r\n\r\n[env:neopixel_ESP32c3_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32c3_common_LittleFS\r\nboard                     = esp32c3cdc\r\nbuild_flags               = ${esp32c3_common_LittleFS.build_flags} \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -DFEATURE_ETHERNET=1\r\n                            -DPLUGIN_NEOPIXEL_COLLECTION\r\n"
        },
        {
          "name": "platformio_esp32c6_envs.ini",
          "type": "blob",
          "size": 2.2607421875,
          "content": "\r\n\r\n[esp32c6_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DUSE_LITTLEFS\r\n                            -DESP32C6\r\nextra_scripts             = ${esp32_base_idf5.extra_scripts}\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\n                            -fexceptions\r\nboard_build.filesystem    = littlefs\r\nlib_ignore                = ${esp32_base_idf5.lib_ignore}\r\nboard                     = esp32c6cdc\r\n\r\n\r\n[env:custom_ESP32c6_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32c6_common_LittleFS\r\nbuild_flags               = ${esp32c6_common_LittleFS.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DFEATURE_ETHERNET=1\r\nextra_scripts             = ${esp32c6_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32c6.py\r\n\r\n\r\n[env:normal_ESP32c6_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32c6_common_LittleFS\r\nbuild_flags               = ${esp32c6_common_LittleFS.build_flags} \r\n                            -DFEATURE_ETHERNET=1\r\nlib_ignore                = ${esp32c6_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n\r\n[env:max_ESP32c6_8M1M_LittleFS_CDC_ETH]\r\nextends                   = esp32c6_common_LittleFS\r\nboard                     = esp32c6cdc-8M\r\nbuild_flags               = ${esp32c6_common_LittleFS.build_flags}  \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\nextra_scripts             = ${esp32c6_common_LittleFS.extra_scripts}\r\n\r\n\r\n[env:max_ESP32c6_16M8M_LittleFS_CDC_ETH]\r\nextends                   = esp32c6_common_LittleFS\r\nboard                     = esp32c6cdc-16M\r\nbuild_flags               = ${esp32c6_common_LittleFS.build_flags}  \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\nextra_scripts             = ${esp32c6_common_LittleFS.extra_scripts}\r\n\r\n\r\n"
        },
        {
          "name": "platformio_esp32s2_envs.ini",
          "type": "blob",
          "size": 6.685546875,
          "content": "\r\n\r\n\r\n\r\n[esp32s2_common]\r\nextends                   = esp32_base\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${no_ir.lib_ignore}\r\n                            ESP32 BLE Arduino\r\nbuild_flags               = ${esp32_base.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DESP32S2\r\nextra_scripts             = ${esp32_base.extra_scripts}\r\nbuild_unflags             = ${esp32_base.build_unflags}\r\n                            -fexceptions\r\n\r\n[esp32s2_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DUSE_LITTLEFS\r\n                            -DESP32S2\r\nextra_scripts             = ${esp32_base_idf5.extra_scripts}\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\n                            -fexceptions\r\nboard_build.filesystem    = littlefs\r\n\r\n\r\n[env:custom_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DESP_CONSOLE_USB_CDC=y\r\nextra_scripts             = ${esp32s2_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n[env:neopixel_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags} \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -DPLUGIN_NEOPIXEL_COLLECTION\r\n\r\n[env:neopixel_ESP32s2_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32s2_common_LittleFS\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common_LittleFS.build_flags} \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -DPLUGIN_NEOPIXEL_COLLECTION\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n[env:custom_IR_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_IR\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\nextra_scripts             = ${esp32s2_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32_IR.py\r\n                            pre:tools/pio/ir_build_check.py\r\n\r\n\r\n\r\n[env:normal_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nlib_ignore                = ${esp32s2_common.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n[env:custom_ESP32s2_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32s2_common_LittleFS\r\nboard                     = esp32s2cdc\r\nlib_ignore                = ${esp32s2_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\nbuild_flags               = ${esp32s2_common_LittleFS.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DESP_CONSOLE_USB_CDC=y\r\n                            -DFEATURE_ETHERNET=1\r\nextra_scripts             = ${esp32s2_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n\r\n\r\n[env:normal_ESP32s2_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32s2_common_LittleFS\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common_LittleFS.build_flags}\r\n                            -DESP_CONSOLE_USB_CDC=y\r\n                            -DFEATURE_ETHERNET=1\r\nlib_ignore                = ${esp32s2_common_LittleFS.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n[env:collection_A_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_B_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_B_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_C_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_C_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_D_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_D_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_E_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_E_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_F_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_F_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_G_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_G_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n\r\n[env:energy_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -D PLUGIN_ENERGY_COLLECTION\r\n\r\n[env:display_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -D PLUGIN_DISPLAY_COLLECTION\r\n\r\n[env:climate_ESP32s2_4M316k_CDC]\r\nextends                   = esp32s2_common\r\nboard                     = esp32s2cdc\r\nbuild_flags               = ${esp32s2_common.build_flags}  \r\n                            -D PLUGIN_CLIMATE_COLLECTION\r\n\r\n"
        },
        {
          "name": "platformio_esp32s3_envs.ini",
          "type": "blob",
          "size": 9.103515625,
          "content": "\r\n\r\n\r\n\r\n[esp32s3_common]\r\nextends                   = esp32_base\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\n                            ${no_ir.lib_ignore}\r\n                            ESP32 BLE Arduino\r\nbuild_flags               = ${esp32_base.build_flags}\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DESP32S3\r\nextra_scripts             = ${esp32_base.extra_scripts}\r\nbuild_unflags             = ${esp32_base.build_unflags}\r\n                            -fexceptions\r\n\r\n[esp32s3_common_LittleFS]\r\nextends                   = esp32_base_idf5\r\nlib_ignore                = ${esp32_common_LittleFS.lib_ignore}\r\n                            ESP32_ping\r\n                            ${esp32_base_idf5.lib_ignore}\r\nbuild_flags               = ${esp32_base_idf5.build_flags}\r\n;                            -mtext-section-literals\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DUSE_LITTLEFS\r\n                            -DESP32S3\r\nextra_scripts             = ${esp32_base_idf5.extra_scripts}\r\nbuild_unflags             = ${esp32_base_idf5.build_unflags}\r\n                            -fexceptions\r\nboard_build.filesystem    = littlefs\r\n\r\n\r\n[env:custom_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags} \r\n                            -DPLUGIN_BUILD_CUSTOM\r\nextra_scripts             = ${esp32s3_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n\r\n[env:custom_IR_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_IR\r\nlib_ignore                = ${esp32_always.lib_ignore}\r\n                            ESP32_ping\r\nextra_scripts             = ${esp32s3_common.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32_IR.py\r\n                            pre:tools/pio/ir_build_check.py\r\n\r\n\r\n\r\n[env:normal_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nlib_ignore                = ${esp32s3_common.lib_ignore}\r\n                            ${no_ir.lib_ignore}\r\n\r\n\r\n[env:collection_A_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_B_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_B_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_C_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_C_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_D_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_D_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_E_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_E_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_F_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_F_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n[env:collection_G_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -DPLUGIN_SET_COLLECTION_G_ESP32\r\n                            -DCOLLECTION_USE_RTTTL\r\n\r\n\r\n[env:energy_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -D PLUGIN_ENERGY_COLLECTION\r\n\r\n[env:display_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -D PLUGIN_DISPLAY_COLLECTION\r\n\r\n[env:climate_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags}  \r\n                            -D PLUGIN_CLIMATE_COLLECTION\r\n\r\n[env:neopixel_ESP32s3_4M316k_CDC]\r\nextends                   = esp32s3_common\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common.build_flags} \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -DPLUGIN_NEOPIXEL_COLLECTION\r\n\r\n[env:neopixel_ESP32s3_4M316k_LittleFS_CDC_ETH]\r\nextends                   = esp32s3_common_LittleFS\r\nboard                     = esp32s3cdc-qio_qspi\r\nbuild_flags               = ${esp32s3_common_LittleFS.build_flags} \r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DFEATURE_SD=1\r\n                            -DPLUGIN_NEOPIXEL_COLLECTION\r\n                            -DFEATURE_ETHERNET=1\r\n\r\n\r\n[env:custom_ESP32s3_8M1M_LittleFS_CDC_ETH]\r\nextends                   = esp32s3_common_LittleFS\r\nboard                     = esp32s3cdc-qio_qspi-8M\r\nbuild_flags               = ${esp32s3_common_LittleFS.build_flags} \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DFEATURE_SD=1\r\nextra_scripts             = ${esp32s3_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n[env:custom_ESP32s3_8M1M_LittleFS_OPI_PSRAM_CDC_ETH]\r\nextends                   = env:custom_ESP32s3_8M1M_LittleFS_CDC_ETH\r\nboard                     = esp32s3cdc-qio_opi-8M\r\n\r\n\r\n[env:max_ESP32s3_8M1M_LittleFS_CDC_ETH]\r\nextends                   = esp32s3_common_LittleFS\r\nboard                     = esp32s3cdc-qio_qspi-8M\r\nbuild_flags               = ${esp32s3_common_LittleFS.build_flags}  \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\nextra_scripts             = ${esp32s3_common_LittleFS.extra_scripts}\r\n\r\n\r\n[env:max_ESP32s3_8M1M_LittleFS_OPI_PSRAM_CDC_ETH]\r\nextends                   = env:max_ESP32s3_8M1M_LittleFS_CDC_ETH\r\nboard                     = esp32s3cdc-qio_opi-8M\r\n\r\n\r\n[env:custom_ESP32s3_16M8M_LittleFS_CDC_ETH]\r\nextends                   = esp32s3_common_LittleFS\r\nboard                     = esp32s3cdc-qio_qspi-16M\r\nbuild_flags               = ${esp32s3_common_LittleFS.build_flags} \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_CUSTOM\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\n                            -DFEATURE_SD=1\r\nextra_scripts             = ${esp32s3_common_LittleFS.extra_scripts}\r\n                            pre:tools/pio/pre_custom_esp32.py\r\n\r\n[env:custom_ESP32s3_16M8M_LittleFS_OPI_PSRAM_CDC_ETH]\r\nextends                   = env:custom_ESP32s3_16M8M_LittleFS_CDC_ETH\r\nboard                     = esp32s3cdc-qio_opi-16M\r\n\r\n\r\n[env:max_ESP32s3_16M8M_LittleFS_CDC_ETH]\r\nextends                   = esp32s3_common_LittleFS\r\nboard                     = esp32s3cdc-qio_qspi-16M\r\nbuild_flags               = ${esp32s3_common_LittleFS.build_flags}  \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\nextra_scripts             = ${esp32s3_common_LittleFS.extra_scripts}\r\n\r\n\r\n[env:max_ESP32s3_16M8M_LittleFS_OPI_PSRAM_CDC_ETH]\r\nextends                   = esp32s3_common_LittleFS\r\nboard                     = esp32s3cdc-qio_opi-16M\r\nbuild_flags               = ${esp32s3_common_LittleFS.build_flags}  \r\n                            -DFEATURE_ETHERNET=1\r\n                            -DFEATURE_ARDUINO_OTA=1\r\n                            -DPLUGIN_BUILD_MAX_ESP32\r\n                            -DPLUGIN_BUILD_IR_EXTENDED\r\nextra_scripts             = ${esp32s3_common_LittleFS.extra_scripts}\r\n\r\n\r\n"
        },
        {
          "name": "platformio_esp82xx_base.ini",
          "type": "blob",
          "size": 10.5146484375,
          "content": ";;; ESP82xx base definitions*******************************************\n; Basic definitions used in ESP82xx environments                      ;\n; *********************************************************************\n\n\n[core274_platform]\nbuild_flags               = ${core_2_7_4.build_flags}\nplatform                  = ${core_2_7_4.platform}\nplatform_packages         = ${core_2_7_4.platform_packages}\nlib_ignore                = ${core_2_7_4.lib_ignore}\nbuild_unflags             = ${core_2_7_4.build_unflags}\nextra_scripts             = ${core_2_7_4.extra_scripts}\n\n\n[core312_platform]\nbuild_flags               = ${core_stage.build_flags}\nplatform                  = ${core_stage.platform}\nplatform_packages         = ${core_stage.platform_packages}\nlib_ignore                = ${core_stage.lib_ignore}\nbuild_unflags             = ${core_stage.build_unflags}\nextra_scripts             = ${core_stage.extra_scripts}\n\n[regular_platform]\nbuild_flags               = ${core_2_7_4.build_flags}\nplatform                  = ${core_2_7_4.platform}\nplatform_packages         = ${core_2_7_4.platform_packages}\nlib_ignore                = ${core_2_7_4.lib_ignore}\nbuild_unflags             = ${core_2_7_4.build_unflags}\nextra_scripts             = ${core_2_7_4.extra_scripts}\n\n\n[beta_platform_2ndheap]\nbuild_flags               = ${core_stage_2ndheap.build_flags}\nplatform                  = ${core_stage_2ndheap.platform}\nplatform_packages         = ${core_stage_2ndheap.platform_packages}\nlib_ignore                = ${core_stage_2ndheap.lib_ignore}\nbuild_unflags             = ${core_stage_2ndheap.build_unflags}\nextra_scripts             = ${core_stage_2ndheap.extra_scripts}\n\n[beta_platform]\nbuild_flags               = ${core_stage.build_flags}\nplatform                  = ${core_stage.platform}\nplatform_packages         = ${core_stage.platform_packages}\nlib_ignore                = ${core_stage.lib_ignore}\nbuild_unflags             = ${core_stage.build_unflags}\nextra_scripts             = ${core_stage.extra_scripts}\n\n\n[no_ir]\nlib_ignore                = IRremoteESP8266\n                            HeatpumpIR\n\n[no_sd]\nlib_ignore                = ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n\n[no_littlefs]\nlib_ignore                = LittleFS(esp8266)\n\n[generic_build]\nlib_ignore                = ${no_ir.lib_ignore}\n                            ${no_sd.lib_ignore}\n                            ${no_littlefs.lib_ignore}\n\n[esp82xx_common]\nlib_archive               = ${common.lib_archive}\nframework                 = ${common.framework} \nupload_speed              = ${common.upload_speed}\nmonitor_speed             = ${common.monitor_speed}\ntargets                   = ${common.targets}\nbuild_flags               = ${minimal_size.build_flags}\n                            ${mqtt_flags.build_flags}\n                            -DHTTPCLIENT_1_1_COMPATIBLE=0\nbuild_unflags             = -DDEBUG_ESP_PORT\n                            -fexceptions\nmonitor_filters           = esp8266_exception_decoder\nextra_scripts             = ${extra_scripts_esp8266.extra_scripts}\n                            pre:tools/pio/pre_default_check.py\nsrc_filter                = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<*/Commands/> -<*/ControllerQueue/> -<*/DataStructs/> -<*/DataTypes/> -<*/ESPEasyCore/> -<*/Globals/> -<*/Helpers/> -<*/PluginStructs/>  -<*/WebServer/>\n\n\n\n\n;;; NORMAL (STABLE) ***************************************************\n; normal version with stable plugins                                  ;\n; *********************************************************************\n\n[normal]\nplatform                  = ${regular_platform.platform}\nplatform_packages         = ${regular_platform.platform_packages}\nbuild_flags               = ${regular_platform.build_flags}\n                            -DBUILD_NO_DEBUG\n                            -D WEBSERVER_USE_CDN_JS_CSS\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ${no_ir.lib_ignore}\n\n\n\n[normal_beta]\nplatform                  = ${beta_platform.platform}\nplatform_packages         = ${beta_platform.platform_packages}\nbuild_flags               = ${beta_platform.build_flags}\n                            -DBUILD_NO_DEBUG\nlib_ignore                = ${beta_platform.lib_ignore}\n                            ${no_ir.lib_ignore}\n\n;;; COLLECTION  ********************************************************\n; additional plugins (and dependend code) that is marked as COLLECTION ;\n; Includes \"normal\" + \"collection\" plugins                             ;\n; **********************************************************************\n\n[collection]\nplatform                  = ${regular_platform.platform}\nplatform_packages         = ${regular_platform.platform_packages}\nbuild_flags               = ${regular_platform.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION\n                            -DLIMIT_BUILD_SIZE\n                            -DDISABLE_SC16IS752_Serial\nlib_ignore                = ${regular_platform.lib_ignore}\n\n\n\n;;; IR      ***********************************************************\n; IR builds                                                           ;\n; *********************************************************************\n\n[ir]\nbuild_flags               = ${core_2_7_4.build_flags}\nplatform                  = ${core_2_7_4.platform}\nplatform_packages         = ${core_2_7_4.platform_packages}\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ESP32HTTPUpdateServer\n                            ServoESP32\n                            TinyWireM\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n                            LittleFS\n                            ArduinoOTA\n                            ESP8266mDNS\n                            I2C AXP192 Power management\n                            EspSoftwareSerial\n\n\n\n[minimal_ir]\nextends                   = ir\nbuild_flags               = ${ir.build_flags}\n                            -DPLUGIN_BUILD_MINIMAL_IR\n\n[minimal_ir_extended]\nextends                   = ir\nbuild_flags               = ${ir.build_flags}\n                            -DPLUGIN_BUILD_MINIMAL_IRext\n\n[normal_ir]\nextends                   = ir\nbuild_flags               = ${ir.build_flags}\n                            -DPLUGIN_BUILD_NORMAL_IR\n\n[normal_ir_extended]\nextends                   = ir\nbuild_flags               = ${ir.build_flags}\n                            -DPLUGIN_BUILD_IR_EXTENDED\n\n[normal_ir_extended_no_rx]\nextends                   = ir\nbuild_flags               = ${ir.build_flags}\n                            -DPLUGIN_BUILD_IR_EXTENDED_NO_RX\n\n\n\n;;; 1MB flash nodes  **************************************************\n; Layout for 1M flash nodes                                           ;\n; *********************************************************************\n\n; Keep optimization flag to -O2\n; See: https://github.com/platformio/platform-espressif8266/issues/288\n\n[esp82xx_1M]\nextends                   = esp82xx_common\nbuild_flags               = -DBUILD_NO_DEBUG\n                            -DFEATURE_SD=0\n                            -O2\n                            -s\n                            -DNO_GLOBAL_MDNS\n                            ${esp82xx_common.build_flags}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n\n[esp8266_1M]\nextends                   = esp82xx_1M\nboard                     = esp8266_1M128k\nbuild_flags               = ${esp82xx_1M.build_flags}\nextra_scripts             = ${esp82xx_1M.extra_scripts}\n\n\n;;; Minimal ***********************************************************\n; Minimal build size for OTA                                          ;\n; *********************************************************************\n[esp8266_1M_OTA]\nextends                   = esp82xx_1M\nboard                     = esp8266_1M128k_OTA\nbuild_flags               = ${esp82xx_1M.build_flags}\n                            -DPLUGIN_BUILD_MINIMAL_OTA\n                            -DDISABLE_SC16IS752_Serial\n                            -DFEATURE_GPIO_USE_ESP8266_WAVEFORM=0\nextra_scripts             = ${esp82xx_1M.extra_scripts}\n;lib_ignore                = ${esp82xx_1M.lib_ignore}\n; Adding the libs below to the lib_ignore will even increase build size\n;                            Adafruit TCS34725\n;                            RN2xx3 Arduino Library\n\n\n\n\n;;; 2MB flash nodes  **************************************************\n; Layout for 2M flash nodes                                           ;\n; *********************************************************************\n\n[esp8266_2M256]\nextends                   = esp82xx_common\nboard                     = esp8266_2M256\nbuild_flags               = ${esp82xx_common.build_flags}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n[espWroom2M256]\nextends                   = esp82xx_common\nboard_build.flash_mode    = dout\nboard_upload.maximum_size = 1044464\nboard                     = esp_wroom_02\nboard_build.ldscript      = eagle.flash.2m256.ld\nbuild_flags               = ${esp82xx_common.build_flags}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n;;; 4MB flash nodes  **************************************************\n; Layout for 4M flash nodes                                           ;\n; *********************************************************************\n\n[esp8266_4M1M]\nextends                   = esp82xx_common\nboard                     = esp8266_4M1M_board\nbuild_flags               = ${esp82xx_common.build_flags}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n[esp8266_4M2M]\nextends                   = esp82xx_common\nboard                     = esp8266_4M2M_board\nbuild_flags               = ${esp82xx_common.build_flags}\nextra_scripts             = ${esp82xx_common.extra_scripts}\n\n\n\n;;; 16MB flash nodes  *************************************************\n; Layout for 16M flash nodes                                          ;\n; *********************************************************************\n\n; Configuration for the Wemos D1 mini pro (16M)\n; This configuration can only be used with core versions 2.5.0 or newer.\n; Performance of 14M SPIFFS is really slow.\n; See https://github.com/esp8266/Arduino/issues/5932\n[esp8266_16M]\nextends                   = esp82xx_common\nboard                     = esp8266_16M14M_board\nbuild_flags               = -DSPIFFS_MAX_OPEN_FILES=20\n                            ${esp82xx_common.build_flags}\n\n"
        },
        {
          "name": "platformio_esp82xx_envs.ini",
          "type": "blob",
          "size": 32.36328125,
          "content": ";;; Custom builds *****************************************************\n; Use either the plugins defined in                                   ;\n; pre_custom_esp82xx.py or Custom.h                                   ;\n; *********************************************************************\n[limited_build_size]\nbuild_flags               = -DNO_GLOBAL_MDNS\n\n\n\n[hard_esp82xx]\nlib_ignore                = ${core_stage.lib_ignore}\nplatform                  = ${core_stage.platform}\nplatform_packages         = ${core_stage.platform_packages}\nbuild_flags               = ${core_stage.build_flags}\n                            -DBUILD_NO_DEBUG\n                            -DPLUGIN_BUILD_CUSTOM\n                            -DFEATURE_DEFINE_SERIAL_CONSOLE_PORT=0\nextra_scripts             = ${extra_scripts_esp8266.extra_scripts}\n\n\n\n[esp8266_custom_common_274]\nbuild_flags               = ${core_2_7_4.build_flags}\nplatform                  = ${core_2_7_4.platform}\nplatform_packages         = ${core_2_7_4.platform_packages}\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ESP32HTTPUpdateServer\n                            ServoESP32\n                            ${no_ir.lib_ignore}\n                            TinyWireM\n                            I2C AXP192 Power management\n                            EspSoftwareSerial\n                            LittleFS\n                            LittleFS(esp8266)\nextra_scripts             = pre:tools/pio/pre_custom_esp82xx.py\n                            ${extra_scripts_esp8266.extra_scripts}\n\n[esp8266_custom_common_312]\nbuild_flags               = ${core_stage.build_flags}\nplatform                  = ${core_stage.platform}\nplatform_packages         = ${core_stage.platform_packages}\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ESP32HTTPUpdateServer\n                            ServoESP32\n                            ${no_ir.lib_ignore}\n                            TinyWireM\n                            I2C AXP192 Power management\n                            LittleFS\n                            LittleFS(esp8266)\nextra_scripts             = pre:tools/pio/pre_custom_esp82xx.py\n                            ${extra_scripts_esp8266.extra_scripts}\n\n\n\n; Custom: 4M1M version --------------------------\n[env:custom_274_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nplatform                  = ${esp8266_custom_common_274.platform}\nplatform_packages         = ${esp8266_custom_common_274.platform_packages}\nbuild_flags               = ${esp8266_custom_common_274.build_flags} \n                            ${esp8266_4M1M.build_flags} \n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_274.lib_ignore}\nextra_scripts             = ${esp8266_custom_common_274.extra_scripts}\n\n[env:custom_IR_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nplatform                  = ${ir.platform}\nplatform_packages         = ${ir.platform_packages}\nbuild_flags               = ${ir.build_flags} \n                            ${esp8266_4M1M.build_flags} \n                            -DPLUGIN_BUILD_CUSTOM\n                            -DPLUGIN_BUILD_IR\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ServoESP32\n                            ESP32HTTPUpdateServer\n                            adafruit/Adafruit GFX Library@^1.11.1\n                            LOLIN_EPD\n                            Adafruit ILI9341 ESPEasy\n                            adafruit/Adafruit BusIO\n                            Adafruit NeoPixel\n                            NeoPixelBus_wrapper\n                            NeoPixelBus by Makuna\n                            Adafruit NeoMatrix via NeoPixelBus\n                            Adafruit Motor Shield V2 Library\n                            Adafruit_ST77xx\n                            Adafruit NeoMatrix\n                            I2C AXP192 Power management\n                            EspSoftwareSerial\nextra_scripts             = pre:tools/pio/pre_custom_esp82xx_IR.py\n                            ${extra_scripts_esp8266.extra_scripts}\n                            pre:tools/pio/ir_build_check.py\n\n[env:custom_IR_ESP8266_1M]\nextends                   = esp8266_1M\nplatform                  = ${ir.platform}\nplatform_packages         = ${ir.platform_packages}\nbuild_flags               = ${ir.build_flags} \n                            ${esp8266_1M.build_flags} \n                            -D NO_HTTP_UPDATER\n                            -DPLUGIN_BUILD_CUSTOM\n                            -DPLUGIN_BUILD_IR\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ServoESP32\n                            ESP32HTTPUpdateServer\n                            adafruit/Adafruit GFX Library@^1.11.1\n                            LOLIN_EPD\n                            Adafruit ILI9341 ESPEasy\n                            adafruit/Adafruit BusIO\n                            Adafruit NeoPixel\n                            NeoPixelBus_wrapper\n                            NeoPixelBus by Makuna\n                            Adafruit NeoMatrix via NeoPixelBus\n                            Adafruit Motor Shield V2 Library\n                            Adafruit_ST77xx\n                            Adafruit NeoMatrix\n                            I2C AXP192 Power management\n                            EspSoftwareSerial\nextra_scripts             = pre:tools/pio/pre_custom_esp82xx_IR.py\n                            ${extra_scripts_esp8266.extra_scripts}\n                            pre:tools/pio/ir_build_check.py\n\n\n\n[env:custom_312_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nplatform                  = ${esp8266_custom_common_312.platform}\nplatform_packages         = ${esp8266_custom_common_312.platform_packages}\nbuild_flags               = ${esp8266_custom_common_312.build_flags}\n                            ${esp8266_4M1M.build_flags} \n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_312.lib_ignore}\nextra_scripts             = ${esp8266_custom_common_312.extra_scripts}\n\n\n[env:custom_beta_2ndheap_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nplatform                  = ${beta_platform_2ndheap.platform}\nplatform_packages         = ${beta_platform_2ndheap.platform_packages}\nbuild_flags               = ${beta_platform_2ndheap.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_312.lib_ignore}\nextra_scripts             = ${esp8266_custom_common_312.extra_scripts}\n\n\n; Custom: 4M2M version -- SPIFFS --------------\n[env:custom_312_ESP8266_4M2M]\nextends                   = esp8266_4M2M\nplatform                  = ${esp8266_custom_common_312.platform}\nplatform_packages         = ${esp8266_custom_common_312.platform_packages}\nbuild_flags               = ${esp8266_custom_common_312.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_312.lib_ignore}\nextra_scripts             = ${esp8266_custom_common_312.extra_scripts}\n\n; Custom: 4M2M version -- LittleFS --------------\n; LittleFS is determined by using \"LittleFS\" in the pio env name\n[env:custom_312_ESP8266_4M2M_LittleFS]\nextends                   = esp8266_4M2M\nplatform                  = ${esp8266_custom_common_312.platform}\nplatform_packages         = ${esp8266_custom_common_312.platform_packages}\nbuild_flags               = ${esp8266_custom_common_312.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ESP32HTTPUpdateServer\n                            ServoESP32\n                            ${no_ir.lib_ignore}\n                            TinyWireM\n                            I2C AXP192 Power management\nextra_scripts             = ${esp8266_custom_common_312.extra_scripts}\n\n\n; Custom: 1M version --------------------------\n[env:custom_274_ESP8266_1M]\nextends                   = esp8266_1M\nplatform                  = ${esp8266_custom_common_274.platform}\nplatform_packages         = ${esp8266_custom_common_274.platform_packages}\nbuild_flags               = ${esp8266_custom_common_274.build_flags} \n                            ${esp8266_1M.build_flags} \n                            -D NO_HTTP_UPDATER\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_274.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\nextra_scripts             = ${esp8266_custom_common_274.extra_scripts}\n\n\n\n[env:custom_beta_ESP8266_1M]\nextends                   = esp8266_1M\nplatform                  = ${beta_platform.platform}\nplatform_packages         = ${beta_platform.platform_packages}\nbuild_flags               = ${beta_platform.build_flags}\n                            ${esp8266_1M.build_flags}\n                            -D NO_HTTP_UPDATER\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_312.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\nextra_scripts             = ${esp8266_custom_common_312.extra_scripts}\n\n\n; Custom: 2M version --------------------------\n[env:custom_274_ESP8266_2M256]\nextends                   = espWroom2M256\nplatform                  = ${esp8266_custom_common_274.platform}\nplatform_packages         = ${esp8266_custom_common_274.platform_packages}\nbuild_flags               = ${esp8266_custom_common_274.build_flags} \n                            ${espWroom2M256.build_flags} \n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${esp8266_custom_common_274.lib_ignore}\nextra_scripts             = ${esp8266_custom_common_274.extra_scripts}\n\n\n\n;;; NORMAL (STABLE) ***************************************************\n; normal version with stable plugins                                  ;\n; *********************************************************************\n\n; NORMAL: 1024k version --------------------------\n[env:normal_ESP8266_1M]\nextends                   = esp8266_1M\nplatform                  = ${normal.platform}\nplatform_packages         = ${normal.platform_packages}\nbuild_flags               = ${normal.build_flags}\n                            ${esp8266_1M.build_flags}\n                            -D NO_HTTP_UPDATER\nlib_ignore                = ${normal.lib_ignore}\n\n\n;[env:normal_312_ESP8266_1M]\n;extends                   = esp8266_1M\n;platform                  = ${core312_platform.platform}\n;platform_packages         = ${core312_platform.platform_packages}\n;build_flags               = ${core312_platform.build_flags}\n;                            ${esp8266_1M.build_flags}\n\n\n[env:normal_ESP8266_1M_VCC]\nextends                   = esp8266_1M\nplatform                  = ${normal.platform}\nplatform_packages         = ${normal.platform_packages}\nbuild_flags               = ${normal.build_flags}\n                            ${esp8266_1M.build_flags}\n                            -D NO_HTTP_UPDATER\n                            -D FEATURE_ADC_VCC=1\nlib_ignore                = ${normal.lib_ignore}\n\n\n\n; NORMAL: 2048k WROOM02 version --------------------------\n;[env:normal_WROOM02_2M]\n;extends                   = espWroom2M\n;platform                  = ${normal.platform}\n;platform_packages         = ${normal.platform_packages}\n;build_flags               = ${normal.build_flags}\n;                            ${espWroom2M.build_flags}\n\n\n; NORMAL: 2048k WROOM02 version 256k SPIFFS --------------------------\n[env:normal_WROOM02_2M256]\nextends                   = espWroom2M256\nplatform                  = ${normal.platform}\nplatform_packages         = ${normal.platform_packages}\nbuild_flags               = ${normal.build_flags}\n                            ${espWroom2M256.build_flags}\nlib_ignore                = ${normal.lib_ignore}\n\n\n; NORMAL: 4096k version --------------------------\n[env:normal_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nplatform                  = ${normal.platform}\nplatform_packages         = ${normal.platform_packages}\nbuild_flags               = ${normal.build_flags}\n                            ${esp8266_4M1M.build_flags}\nlib_ignore                = ${normal.lib_ignore}\n\n[env:normal_ESP8266_4M1M_VCC]\nextends                   = esp8266_4M1M\nplatform                  = ${normal.platform}\nplatform_packages         = ${normal.platform_packages}\nbuild_flags               = ${normal.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -D FEATURE_ADC_VCC=1\n                            -D NO_LIMIT_BUILD_SIZE\nlib_ignore                = ${normal.lib_ignore}\n\n\n; NORMAL: 16M version --- LittleFS --------------\n; LittleFS is determined by using \"LittleFS\" in the pio env name\n[env:normal_beta_ESP8266_16M_LittleFS]\nextends                   = esp8266_16M\nplatform                  = ${normal_beta.platform}\nplatform_packages         = ${normal_beta.platform_packages}\nbuild_flags               = ${normal_beta.build_flags}\n                            ${esp8266_16M.build_flags}\n                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22y\nlib_ignore                = ESP32_ping\n                            ESP32WebServer\n                            ESP32HTTPUpdateServer\n                            ServoESP32\n                            ${no_ir.lib_ignore}\n                            TinyWireM\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            ArduinoOTA\n                            ESP8266mDNS\n                            I2C AXP192 Power management\n\n\n\n;;; Minimal ***********************************************************\n; Minimal build size for OTA                                          ;\n; *********************************************************************\n\n[minimal_OTA_domoticz]\nbuild_flags               = ${esp8266_1M_OTA.build_flags}\n                            -DFEATURE_DOMOTICZ=1\n\n[minimal_OTA_domoticz_MQTT]\nbuild_flags               = ${esp8266_1M_OTA.build_flags}\n                            -DFEATURE_DOMOTICZ=1\n                            -DFEATURE_NO_HTTP_CLIENT=1\n\n[minimal_OTA_FHEM_HA]\nbuild_flags               = ${esp8266_1M_OTA.build_flags}\n                            -DFEATURE_FHEM=1\n                            -DFEATURE_HOMEASSISTANT_OPENHAB=1\n                            -DFEATURE_NO_HTTP_CLIENT=1\n\n\n[env:minimal_core_274_ESP8266_1M_OTA_Domoticz]\nextends                   = esp8266_1M_OTA, core274_platform\nbuild_flags               = ${core274_platform.build_flags} \n                            ${minimal_OTA_domoticz.build_flags}\nlib_ignore                = ${core274_platform.lib_ignore}\n\n\n[env:minimal_core_274_ESP8266_1M_OTA_Domoticz_MQTT]\nextends                   = esp8266_1M_OTA, core274_platform\nbuild_flags               = ${core274_platform.build_flags} \n                            ${minimal_OTA_domoticz_MQTT.build_flags}\nlib_ignore                = ${core274_platform.lib_ignore}\n\n\n[env:minimal_core_274_ESP8266_1M_OTA_FHEM_HA]\nextends                   = esp8266_1M_OTA, core274_platform\nbuild_flags               = ${core274_platform.build_flags} \n                            ${minimal_OTA_FHEM_HA.build_flags}\nlib_ignore                = ${core274_platform.lib_ignore}\n\n\n[env:minimal_core_312_ESP8266_1M_OTA_Domoticz]\nextends                   = esp8266_1M_OTA, core312_platform\nbuild_flags               = ${core312_platform.build_flags} \n                            ${minimal_OTA_domoticz.build_flags}\nbuild_unflags             = ${core312_platform.build_unflags}\n                            \n\n[env:minimal_core_312_ESP8266_1M_OTA_Domoticz_MQTT]\nextends                   = esp8266_1M_OTA, core312_platform\nbuild_flags               = ${core312_platform.build_flags} \n                            ${minimal_OTA_domoticz_MQTT.build_flags}\nbuild_unflags             = ${core312_platform.build_unflags}\n\n\n[env:minimal_core_312_ESP8266_1M_OTA_FHEM_HA]\nextends                   = esp8266_1M_OTA, core312_platform\nbuild_flags               = ${core312_platform.build_flags} \n                            ${minimal_OTA_FHEM_HA.build_flags}\nbuild_unflags             = ${core312_platform.build_unflags}\n\n\n\n;;; IR      ***********************************************************\n; IR builds                                                           ;\n; *********************************************************************\n\n; TD-er: disabled as it no longer fits in 1M builds\n\n; Minimal IR: 1024k version --------------------------\n; Build including IR libraries, including extended AC commands\n; Minimal set of other plugins\n;[env:minimal_IRext_ESP8266_1M]\n;extends                   = esp8266_1M\n;platform                  = ${ir.platform}\n;platform_packages         = ${ir.platform_packages}\n;lib_ignore                = ${ir.lib_ignore}  \n;build_flags               = ${minimal_ir_extended.build_flags} \n;                            ${esp8266_1M.build_flags}\n;build_unflags             = ${esp8266_1M_OTA.build_unflags} -DPLUGIN_BUILD_NORMAL_IR\n;extra_scripts             = ${esp8266_1M.extra_scripts}\n;                            pre:tools/pio/ir_build_check.py\n\n\n; Minimal IR: 4096k version --------------------------\n; Build including IR libraries, INCLUDING extended AC commands\n; Includes Extended IR AC commands (takes a lot more program space)\n; 4M flash, 1M SPIFFS\n[env:minimal_IRext_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nplatform                  = ${ir.platform}\nplatform_packages         = ${ir.platform_packages}\nlib_ignore                = ${ir.lib_ignore}  \nbuild_flags               = ${minimal_ir_extended.build_flags} \n                            ${esp8266_4M1M.build_flags}\nextra_scripts             = ${esp8266_4M1M.extra_scripts}\n                            pre:tools/pio/ir_build_check.py\n\n; 4M flash, 2M SPIFFS\n[env:minimal_IRext_ESP8266_4M2M]\nextends                   = esp8266_4M2M\nplatform                  = ${ir.platform}\nplatform_packages         = ${ir.platform_packages}\nlib_ignore                = ${ir.lib_ignore}  \nbuild_flags               = ${minimal_ir_extended.build_flags}\n                            ${esp8266_4M2M.build_flags}\nextra_scripts             = ${esp8266_4M2M.extra_scripts}\n                            pre:tools/pio/ir_build_check.py\n\n\n; NORMAL IR: 4096k version --------------------------\n; Build including IR libraries, INCLUDING extended AC commands\n; Includes Extended IR AC commands (takes a lot more program space)\n; 4M flash, 2M SPIFFS\n[env:normal_IRext_no_rx_ESP8266_4M2M]\nextends                   = esp8266_4M2M\nplatform                  = ${ir.platform}\nplatform_packages         = ${ir.platform_packages}\nlib_ignore                = ${ir.lib_ignore}\nbuild_flags               = ${normal_ir_extended_no_rx.build_flags}\n                            ${esp8266_4M2M.build_flags}\n                            ${limited_build_size.build_flags}\n                            -DLIMIT_BUILD_SIZE\n                            -DFEATURE_TARSTREAM_SUPPORT=0\n                            ; -DKEEP_RTTTL\nextra_scripts             = ${esp8266_4M2M.extra_scripts}\n                            pre:tools/pio/ir_build_check.py\n\n\n\n;;; COLLECTION  *********************************************************\n; additional plugins (and dependend code) that is grouped as COLLECTION ;\n; Includes \"normal\" + \"collection\" plugins                              ;\n; ***********************************************************************\n\n[collection_ESP8266_4M1M]\nextends                   = esp8266_4M1M, collection\nbuild_flags               = ${collection.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            ${limited_build_size.build_flags}\n\n\n[env:collection_A_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_B_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION_B\n\n[env:collection_C_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION_C\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_D_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION_D\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_E_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION_E\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_F_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION_F\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_G_ESP8266_4M1M]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_COLLECTION_G\n                            -DCOLLECTION_USE_RTTTL\n\n\n; COLL: 4096k version + FEATURE_ADC_VCC ----------\n[env:collection_A_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_B_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DPLUGIN_BUILD_COLLECTION_B\n\n[env:collection_C_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DPLUGIN_BUILD_COLLECTION_C\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_D_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DPLUGIN_BUILD_COLLECTION_D\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_E_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DPLUGIN_BUILD_COLLECTION_E\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_F_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DPLUGIN_BUILD_COLLECTION_F\n                            -DCOLLECTION_USE_RTTTL\n\n[env:collection_G_ESP8266_4M1M_VCC]\nextends                   = collection_ESP8266_4M1M\nbuild_flags               = ${collection_ESP8266_4M1M.build_flags}\n                            -DFEATURE_ADC_VCC=1\n                            -DPLUGIN_BUILD_COLLECTION_G\n                            -DCOLLECTION_USE_RTTTL\n\n\n\n;;; Collection builds  ************************************************\n; Collection of similar plugins for a specific use case               ;\n; for example \"Display\", \"energy meter\" or \"NeoPixel\"                 ;\n; *********************************************************************\n\n; energy : 4096k version ----------------------------\n[env:energy_ESP8266_4M1M]\nextends                   = esp8266_4M1M, regular_platform\nbuild_flags               = ${regular_platform.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -D PLUGIN_ENERGY_COLLECTION\n                            -D LIMIT_BUILD_SIZE\n                            -D WEBSERVER_USE_CDN_JS_CSS\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\nextra_scripts             = ${regular_platform.extra_scripts}\n\n\n; display : 4096k version ----------------------------\n[env:display_ESP8266_4M1M]\nextends                   = esp8266_4M1M, regular_platform\nbuild_flags               = ${regular_platform.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -D BUILD_NO_DEBUG\n                            -D PLUGIN_DISPLAY_COLLECTION\n                            -D WEBSERVER_USE_CDN_JS_CSS\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n\n\n; climate : 4096k version ----------------------------\n[env:climate_ESP8266_4M1M]\nextends                   = esp8266_4M1M, regular_platform\nbuild_flags               = ${regular_platform.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -D PLUGIN_CLIMATE_COLLECTION\n                            -D KEEP_RTTTL\n                            -D WEBSERVER_USE_CDN_JS_CSS\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n\n\n; neopixel : 4096k version ----------------------------\n[env:neopixel_ESP8266_4M1M]\nextends                   = esp8266_4M1M, regular_platform\nbuild_flags               = ${regular_platform.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -D PLUGIN_NEOPIXEL_COLLECTION\n                            -D LIMIT_BUILD_SIZE\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n\n\n; neopixel : 1024k version ----------------------------\n[env:neopixel_ESP8266_1M_Domoticz]\nextends                   = esp8266_1M_OTA, regular_platform\nbuild_flags               = ${regular_platform.build_flags} \n                            ${esp8266_1M_OTA.build_flags}\n                            ${minimal_OTA_domoticz.build_flags}\n                            -D PLUGIN_NEOPIXEL_COLLECTION\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n\n\n[env:neopixel_ESP8266_1M_FHEM_HA]\nextends                   = esp8266_1M_OTA, regular_platform\nbuild_flags               = ${regular_platform.build_flags} \n                            ${esp8266_1M_OTA.build_flags}\n                            ${minimal_OTA_FHEM_HA.build_flags}\n                            -D PLUGIN_NEOPIXEL_COLLECTION\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ESP8266SdFat\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)\n\n\n\n;;; HARDWARE SPECIFIC VERSIONS ***********************************************************\n; versions specially designed to fit, and contents only needed plugins for each hardware ;\n; ****************************************************************************************\n\n; ITEAD Products\n\n; ITEAD / SONOFF BASIC version ------------------\n;[env:hard_SONOFF_BASIC_1M]\n;extends                   = esp8266_1M, hard_esp82xx\n;platform                  = ${hard_esp82xx.platform}\n;platform_packages         = ${hard_esp82xx.platform_packages}\n;build_flags               = ${hard_esp82xx.build_flags} ${esp8266_1M.build_flags} -D PLUGIN_SET_SONOFF_BASIC\n\n\n; ITEAD / SONOFF TH10/TH16 version -------------------\n;[env:hard_SONOFF_TH1x_1M]\n;extends                   = esp8266_1M, hard_esp82xx\n;platform                  = ${hard_esp82xx.platform}\n;platform_packages         = ${hard_esp82xx.platform_packages}\n;build_flags               = ${hard_esp82xx.build_flags} ${esp8266_1M.build_flags} -D PLUGIN_SET_SONOFF_TH1x\n\n; ITEAD / SONOFF POW & POW R2 version --------------------\n; Sonoff Pow (ESP8266 - HLW8012)\n; GPIO00 Button\n; GPIO05 HLW8012 Sel output\n; GPIO12 Red Led and Relay (0 = Off, 1 = On)\n; GPIO13 HLW8012 CF1 voltage / current\n; GPIO14 HLW8012 CF power\n; GPIO15 Blue Led (0 = On, 1 = Off)\n\n; Sonoff Pow R2 (ESP8266 4M flash - CSE7766)\n; GPIO00 Button\n; GPIO01 Serial RXD 4800 baud 8E1 CSE7766 energy sensor\n; GPIO03 Serial TXD\n; GPIO12 Red Led and Relay (0 = Off, 1 = On)\n; GPIO13 Blue Led (0 = On, 1 = Off)\n[env:hard_SONOFF_POW_4M1M]\nextends                   = esp8266_4M1M, hard_esp82xx\nplatform                  = ${core_2_7_4.platform}\nplatform_packages         = ${core_2_7_4.platform_packages}\nbuild_flags               = ${core_2_7_4.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -DBUILD_NO_DEBUG\n                            -DPLUGIN_BUILD_CUSTOM\n                            -DPLUGIN_SET_SONOFF_POW\n                            -DFEATURE_IMPROV=0\n                            -DPLUGIN_STATS_NR_ELEMENTS=64\nlib_ignore                = ${esp8266_custom_common_274.lib_ignore}\n\n\n\n; Build including power measurement plugins for those devices that have only 1M flash.\n; For example those made by BlitzWolf SHP\n[env:hard_other_POW_ESP8285_1M]\nextends                   = esp8266_1M_OTA, hard_esp82xx\nplatform                  = ${hard_esp82xx.platform}\nplatform_packages         = ${hard_esp82xx.platform_packages}\nbuild_flags               = ${hard_esp82xx.build_flags} \n                            ${esp8266_1M_OTA.build_flags}\n                            -D PLUGIN_SET_SONOFF_POW\nlib_ignore                = ${hard_esp82xx.lib_ignore}\n\n\n; Shelly1 Open Source (ESP8266-2MB)\n; https://shelly.cloud/shelly1-open-source/\n; GPIO04 Relay (non inverted)\n; GPIO05 Button\n[env:hard_Shelly_1_2M256]\nextends                   = esp8266_2M256, hard_esp82xx\nplatform                  = ${hard_esp82xx.platform}\nplatform_packages         = ${hard_esp82xx.platform_packages}\nbuild_flags               = ${hard_esp82xx.build_flags} \n                            ${esp8266_2M256.build_flags}\n                            -D PLUGIN_SET_SHELLY_1\nlib_ignore                = ${hard_esp82xx.lib_ignore}\n\n\n[env:hard_Shelly_PLUG_S_2M256]\nextends                   = esp8266_2M256, hard_esp82xx\nplatform                  = ${hard_esp82xx.platform}\nplatform_packages         = ${hard_esp82xx.platform_packages}\nbuild_flags               = ${hard_esp82xx.build_flags} \n                            ${esp8266_2M256.build_flags}\n                            -D PLUGIN_SET_SHELLY_PLUG_S\nlib_ignore                = ${hard_esp82xx.lib_ignore}\n\n\n\n; Ventus W266 weather station\n; https://www.letscontrolit.com/wiki/index.php/VentusW266\n[env:hard_Ventus_W266_1M]\nextends                   = esp8266_1M, hard_esp82xx\nplatform                  = ${hard_esp82xx.platform}\nplatform_packages         = ${hard_esp82xx.platform_packages}\nbuild_flags               = ${hard_esp82xx.build_flags}\n                            ${esp8266_1M_OTA.build_flags}\n                            -D PLUGIN_SET_VENTUS_W266\nlib_ignore                = ${hard_esp82xx.lib_ignore}\n\n\n[env:hard_LCtech_relay_x2_1M]\nextends                   = esp8266_1M, hard_esp82xx\nplatform                  = ${hard_esp82xx.platform}\nplatform_packages         = ${hard_esp82xx.platform_packages}\nbuild_flags               = ${hard_esp82xx.build_flags}\n                            ${esp8266_1M.build_flags}\n                            -D NO_HTTP_UPDATER\n                            -D PLUGIN_SET_LC_TECH_RELAY_X2\nlib_ignore                = ${hard_esp82xx.lib_ignore}\n\n\n"
        },
        {
          "name": "platformio_special_envs.ini",
          "type": "blob",
          "size": 6.9072265625,
          "content": ";Special build environment definitions.\n;These are used for analysis and debugging.\n;\n;!! DO NOT LOAD THESE ONTO A MODULE !!\n\n[debug_pio]\nbuild_type                = debug\n;check_tool                = clangtidy\ncheck_tool = pvs-studio\ncheck_flags =\n  pvs-studio: --analysis-mode=4 --errors-off=V532,V586,V795,V1042 --lic-file=../pvs_studio.lic\nbuild_flags               = ${compiler_warnings.build_flags}\n\n\n[env:spec_debug_custom_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nplatform                  = ${regular_platform.platform}\nplatform_packages         = ${regular_platform.platform_packages}\nbuild_flags               = ${regular_platform.build_flags}\n                            ${debug_pio.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ${no_ir.lib_ignore}\n                            LittleFS(esp8266)\nextra_scripts             = ${extra_scripts_esp8266.extra_scripts}\n\n\n[env:spec_debug_beta_custom_ESP8266_4M1M]\nextends                   = esp8266_4M1M\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nplatform                  = ${beta_platform.platform}\nplatform_packages         = ${beta_platform.platform_packages}\nbuild_flags               = ${beta_platform.build_flags}\n                            ${debug_pio.build_flags}\n                            ${esp8266_4M1M.build_flags}\n                            -DPLUGIN_BUILD_CUSTOM\nlib_ignore                = ${regular_platform.lib_ignore}\n                            ${no_ir.lib_ignore}\n                            SD(esp8266)\n                            SD\n                            SDFS\n                            LittleFS(esp8266)                           \nextra_scripts             = ${extra_scripts_esp8266.extra_scripts}\n\n\n[env:spec_debug_custom_ESP32_16M8M]\nextends                   = esp32_common_LittleFS\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nplatform                  = ${esp32_common_LittleFS.platform}\nbuild_flags               = ${esp32_common_LittleFS.build_flags} ${debug_pio.build_flags}   -DPLUGIN_BUILD_CUSTOM\nboard                     = esp32_16M8M\nextra_scripts             = ${esp32_common_LittleFS.extra_scripts}\n                            pre:tools/pio/pre_custom_esp32.py\n\n[env:spec_debug_max_ESP32_16M8M]\nextends                   = esp32_base_idf5\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nlib_ignore                = ${esp32_common_LittleFS.lib_ignore}\nbuild_flags               = ${esp32_base_idf5.build_flags}\n                            ${debug_pio.build_flags}\n                            -DESP32_CLASSIC\n                            -DUSE_LITTLEFS\n                            -DFEATURE_ARDUINO_OTA=1\n                            -DPLUGIN_BUILD_MAX_ESP32\n                            -DPLUGIN_BUILD_IR_EXTENDED\nboard_build.filesystem    = littlefs\n\n; TODO: To enable PS-RAM Support needs more build flags than these 2, for now define BOARD_HAS_PSRAM is used to en/disable detecting PS-Ram size on Info page\n;                            -DBOARD_HAS_PSRAM // both flags already enabled for Lolin D32 Pro board by PlatformIO\n;                            -mfix-esp32-psram-cache-issue\n;board                     = lolin_d32_pro\nboard                     = esp32_16M8M\n\n\n[env:spec_debug_minimal_ESP32_16M8M]\nextends                   = esp32_base_idf5\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nlib_ignore                = ${esp32_common_LittleFS.lib_ignore}\nbuild_flags               = ${esp32_base_idf5.build_flags}\n                            ${debug_pio.build_flags}\n                            -DESP32_CLASSIC\n                            -DUSE_LITTLEFS\n                            -DPLUGIN_BUILD_MINIMAL_OTA\nboard_build.filesystem    = littlefs\n\n; TODO: To enable PS-RAM Support needs more build flags than these 2, for now define BOARD_HAS_PSRAM is used to en/disable detecting PS-Ram size on Info page\n;                            -DBOARD_HAS_PSRAM // both flags already enabled for Lolin D32 Pro board by PlatformIO\n;                            -mfix-esp32-psram-cache-issue\n;board                     = lolin_d32_pro\nboard                     = esp32_16M8M\n\n\n[env:spec_debug_display_ESP32_16M8M]\nextends                   = esp32_base_idf5\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nlib_ignore                = ${esp32_common_LittleFS.lib_ignore}\nbuild_flags               = ${esp32_base_idf5.build_flags}\n                            ${debug_pio.build_flags}\n                            -DESP32_CLASSIC\n                            -DUSE_LITTLEFS\n                            -D PLUGIN_DISPLAY_COLLECTION\n                            -D WEBSERVER_USE_CDN_JS_CSS\n                            -D BUILD_NO_DEBUG\nboard_build.filesystem    = littlefs\n\n; TODO: To enable PS-RAM Support needs more build flags than these 2, for now define BOARD_HAS_PSRAM is used to en/disable detecting PS-Ram size on Info page\n;                            -DBOARD_HAS_PSRAM // both flags already enabled for Lolin D32 Pro board by PlatformIO\n;                            -mfix-esp32-psram-cache-issue\n;board                     = lolin_d32_pro\nboard                     = esp32_16M8M\n\n[env:spec_debug_neopixel_ESP32_16M8M]\nextends                   = esp32_base_idf5\nbuild_type                = ${debug_pio.build_type}\ncheck_tool                = ${debug_pio.check_tool}\ncheck_flags               = ${debug_pio.check_flags}\nlib_ignore                = ${esp32_common_LittleFS.lib_ignore}\nbuild_flags               = ${esp32_base_idf5.build_flags}\n                            ${debug_pio.build_flags}\n                            -DESP32_CLASSIC\n                            -DUSE_LITTLEFS\n                            -D PLUGIN_DISPLAY_COLLECTION\n                            -D WEBSERVER_USE_CDN_JS_CSS\n                            -D BUILD_NO_DEBUG\nboard_build.filesystem    = littlefs\n\n; TODO: To enable PS-RAM Support needs more build flags than these 2, for now define BOARD_HAS_PSRAM is used to en/disable detecting PS-Ram size on Info page\n;                            -DBOARD_HAS_PSRAM // both flags already enabled for Lolin D32 Pro board by PlatformIO\n;                            -mfix-esp32-psram-cache-issue\n;board                     = lolin_d32_pro\nboard                     = esp32_16M8M\n\n"
        },
        {
          "name": "preflight.sh",
          "type": "blob",
          "size": 0.80078125,
          "content": "#!/bin/bash\n\n# Check for documentation only changes.\n# Source: https://github.com/dev-id/Magic-Spoiler/blob/8111a06ab6682e020169991d5e2aa4fa503d787f/preflight.sh\n\nset -e\nMAIN_BRANCH=\"mega\"\nMD=\".md$\"\nDOCS=\"^docs/\"\n\nCHANGED_FILES=`git diff --name-only ${MAIN_BRANCH}...${TRAVIS_COMMIT}`\nONLY_READMES=True\nDOCUMENTATION_CHANGED=False\n\nfor CHANGED_FILE in $CHANGED_FILES; do\n  if ! [[ $CHANGED_FILE =~ $MD || $CHANGED_FILE =~ $DOCS ]]; then\n    ONLY_READMES=False\n#    break\n  else\n    DOCUMENTATION_CHANGED=True\n  fi\ndone\n\n#if [[ $ONLY_READMES == True ]]; then\n#  echo \"Only documentation files found, exiting.\"\n#  travis_terminate 0\n#  exit 1\n#else\n#  echo \"Non-documentation files found, continuing with build.\"\n#fi\n\nif [[ $DOCUMENTATION_CHANGED == True ]]; then\n  echo \"Generate documentation.\"\n  cd docs\n  make html\nfi\n"
        },
        {
          "name": "release",
          "type": "blob",
          "size": 1.162109375,
          "content": "#!/bin/bash\nset -e\nNEW=\"$1\"\n\n[ \"$NEW\" != \"\" ] || exit 1\n\necho \"Creating release $NEW\"\n\n\nif git describe \"$NEW\" &>/dev/null; then\n  echo \"Release already exists\"\n  exit 1\nfi\n\nNEWBASE=`echo \"$NEW\"|cut -f1 -d'-'`\nPREV=`git tag --sort=creatordate|grep \"^$NEWBASE\"|tail -1`\n\n############## update Release_notes.txt\nNOTES=\"dist/Release_notes.txt\"\necho \"-------------------------------------------------\" > \"$NOTES.new\"\necho \"Changes in release $NEW (since $PREV)\" >> \"$NOTES.new\"\necho \"-------------------------------------------------\" >> \"$NOTES.new\"\necho -e \"\\nRelease date: `date`\\n\" >> \"$NOTES.new\"\n\ngit shortlog --no-merges $PREV..HEAD >> \"$NOTES.new\"\n\necho >> \"$NOTES.new\"\ncat \"$NOTES\" >> \"$NOTES.new\"\nmv \"$NOTES.new\" \"$NOTES\"\n\ngit add \"$NOTES\"\ngit commit -m \"automatically updated release notes for $NEW\"\n\n\n################ tag and add tag message\necho > /tmp/tagmessage\necho \"Release $NEW\" >> /tmp/tagmessage\necho >> /tmp/tagmessage\necho \"Changes in $NEW (since $PREV):\" >> /tmp/tagmessage\necho >> /tmp/tagmessage\ngit shortlog --no-merges $PREV..HEAD >> /tmp/tagmessage\ngit tag -a \"$NEW\" -m \"`cat /tmp/tagmessage`\"\n\n\n################ push everything\ngit push origin HEAD\ngit push --tags\n"
        },
        {
          "name": "releasebot",
          "type": "blob",
          "size": 0.2880859375,
          "content": "#!/bin/bash\n\n# Call this from a cronjob every day to trigger a nightly build via travis.\n\ngit pull\n\n#new commits since last tag?\nBRANCH=`git rev-parse --abbrev-ref HEAD`\nif ! git describe --exact-match 2>/dev/null | grep \"^$BRANCH\"; then\n    TAG=\"$BRANCH-`date +%Y%m%d`\"\n    ./release \"$TAG\"\nfi\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0625,
          "content": "platformio>=6.1.9\npygit2>=1.10.1\ncryptography==43.0.1\nsetuptools"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "uncrustify.cfg",
          "type": "blob",
          "size": 108.458984375,
          "content": "# Uncrustify-0.69.0-1-72de5fdb\n\n#\n# General options\n#\n\n# The type of line endings.\n#\n# Default: auto\nnewlines                        = auto     # lf/crlf/cr/auto\n\n# The original size of tabs in the input.\n#\n# Default: 8\ninput_tab_size                  = 8        # unsigned number\n\n# The size of tabs in the output (only used if align_with_tabs=true).\n#\n# Default: 8\noutput_tab_size                 = 8        # unsigned number\n\n# The ASCII value of the string escape char, usually 92 (\\) or (Pawn) 94 (^).\n#\n# Default: 92\nstring_escape_char              = 92       # unsigned number\n\n# Alternate string escape char (usually only used for Pawn).\n# Only works right before the quote char.\nstring_escape_char2             = 0        # unsigned number\n\n# Replace tab characters found in string literals with the escape sequence \\t\n# instead.\nstring_replace_tab_chars        = false    # true/false\n\n# Allow interpreting '>=' and '>>=' as part of a template in code like\n# 'void f(list<list<B>>=val);'. If true, 'assert(x<0 && y>=3)' will be broken.\n# Improvements to template detection may make this option obsolete.\ntok_split_gte                   = false    # true/false\n\n# Specify the marker used in comments to disable processing of part of the\n# file.\n#\n# Default:  *INDENT-OFF*\ndisable_processing_cmt          = \" *INDENT-OFF*\"      # string\n\n# Specify the marker used in comments to (re)enable processing in a file.\n#\n# Default:  *INDENT-ON*\nenable_processing_cmt           = \" *INDENT-ON*\"     # string\n\n# Enable parsing of digraphs.\nenable_digraphs                 = false    # true/false\n\n# Add or remove the UTF-8 BOM (recommend 'remove').\nutf8_bom                        = ignore   # ignore/add/remove/force\n\n# If the file contains bytes with values between 128 and 255, but is not\n# UTF-8, then output as UTF-8.\nutf8_byte                       = false    # true/false\n\n# Force the output encoding to UTF-8.\nutf8_force                      = false    # true/false\n\n#\n# Spacing options\n#\n\n# Add or remove space around non-assignment symbolic operators ('+', '/', '%',\n# '<<', and so forth).\nsp_arith                        = add      # ignore/add/remove/force\n\n# Add or remove space around arithmetic operators '+' and '-'.\n#\n# Overrides sp_arith.\nsp_arith_additive               = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment operator '=', '+=', etc.\nsp_assign                       = add      # ignore/add/remove/force\n\n# Add or remove space around '=' in C++11 lambda capture specifications.\n#\n# Overrides sp_assign.\nsp_cpp_lambda_assign            = ignore   # ignore/add/remove/force\n\n# Add or remove space after the capture specification in C++11 lambda.\nsp_cpp_lambda_square_paren             = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment operator '=' in a prototype.\n#\n# If set to ignore, use sp_assign.\nsp_assign_default               = ignore   # ignore/add/remove/force\n\n# Add or remove space before assignment operator '=', '+=', etc.\n#\n# Overrides sp_assign.\nsp_before_assign                = ignore   # ignore/add/remove/force\n\n# Add or remove space after assignment operator '=', '+=', etc.\n#\n# Overrides sp_assign.\nsp_after_assign                 = ignore   # ignore/add/remove/force\n\n# Add or remove space in 'NS_ENUM ('.\nsp_enum_paren                   = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment '=' in enum.\nsp_enum_assign                  = add      # ignore/add/remove/force\n\n# Add or remove space before assignment '=' in enum.\n#\n# Overrides sp_enum_assign.\nsp_enum_before_assign           = ignore   # ignore/add/remove/force\n\n# Add or remove space after assignment '=' in enum.\n#\n# Overrides sp_enum_assign.\nsp_enum_after_assign            = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment ':' in enum.\nsp_enum_colon                   = ignore   # ignore/add/remove/force\n\n# Add or remove space around preprocessor '##' concatenation operator.\n#\n# Default: add\nsp_pp_concat                    = add      # ignore/add/remove/force\n\n# Add or remove space after preprocessor '#' stringify operator.\n# Also affects the '#@' charizing operator.\nsp_pp_stringify                 = add      # ignore/add/remove/force\n\n# Add or remove space before preprocessor '#' stringify operator\n# as in '#define x(y) L#y'.\nsp_before_pp_stringify          = ignore   # ignore/add/remove/force\n\n# Add or remove space around boolean operators '&&' and '||'.\nsp_bool                         = add      # ignore/add/remove/force\n\n# Add or remove space around compare operator '<', '>', '==', etc.\nsp_compare                      = add      # ignore/add/remove/force\n\n# Add or remove space inside '(' and ')'.\nsp_inside_paren                 = remove   # ignore/add/remove/force\n\n# Add or remove space between nested parentheses, i.e. '((' vs. ') )'.\nsp_paren_paren                  = remove   # ignore/add/remove/force\n\n# Add or remove space between back-to-back parentheses, i.e. ')(' vs. ') ('.\nsp_cparen_oparen                = ignore   # ignore/add/remove/force\n\n# Whether to balance spaces inside nested parentheses.\nsp_paren_paren                  = false    # true/false\n\n# Add or remove space between ')' and '{'.\nsp_paren_brace                  = add      # ignore/add/remove/force\n\n# Add or remove space between nested braces, i.e. '{{' vs '{ {'.\nsp_brace_brace                  = ignore   # ignore/add/remove/force\n\n# Add or remove space before pointer star '*'.\nsp_before_ptr_star              = add      # ignore/add/remove/force\n\n# Add or remove space before pointer star '*' that isn't followed by a\n# variable name. If set to 'ignore', sp_before_ptr_star is used instead.\nsp_before_unnamed_ptr_star      = add      # ignore/add/remove/force\n\n# Add or remove space between pointer stars '*'.\nsp_between_ptr_star             = remove   # ignore/add/remove/force\n\n# Add or remove space after pointer star '*', if followed by a word.\nsp_after_ptr_star               = remove   # ignore/add/remove/force\n\n# Add or remove space after pointer caret '^', if followed by a word.\nsp_after_ptr_block_caret        = ignore   # ignore/add/remove/force\n\n# Add or remove space after pointer star '*', if followed by a qualifier.\nsp_after_ptr_star_qualifier     = ignore   # ignore/add/remove/force\n\n# Add or remove space after a pointer star '*', if followed by a function\n# prototype or function definition.\nsp_after_ptr_star_func          = add      # ignore/add/remove/force\n\n# Add or remove space after a pointer star '*', if followed by an open\n# parenthesis, as in 'void* (*)().\nsp_ptr_star_paren               = ignore   # ignore/add/remove/force\n\n# Add or remove space before a pointer star '*', if followed by a function\n# prototype or function definition.\nsp_before_ptr_star_func         = remove   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&'.\nsp_before_byref                 = remove   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&' that isn't followed by a\n# variable name. If set to 'ignore', sp_before_byref is used instead.\nsp_before_unnamed_byref         = remove   # ignore/add/remove/force\n\n# Add or remove space after reference sign '&', if followed by a word.\nsp_after_byref                  = add      # ignore/add/remove/force\n\n# Add or remove space after a reference sign '&', if followed by a function\n# prototype or function definition.\nsp_after_byref_func             = add      # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&', if followed by a function\n# prototype or function definition.\nsp_before_byref_func            = remove   # ignore/add/remove/force\n\n# Add or remove space between type and word.\n#\n# Default: force\nsp_after_type                   = add      # ignore/add/remove/force\n\n# Add or remove space between 'decltype(...)' and word.\nsp_after_decltype               = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space before the parenthesis in the D constructs\n# 'template Foo(' and 'class Foo('.\nsp_before_template_paren        = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'template' and '<'.\n# If set to ignore, sp_before_angle is used.\nsp_template_angle               = ignore   # ignore/add/remove/force\n\n# Add or remove space before '<'.\nsp_before_angle                 = remove   # ignore/add/remove/force\n\n# Add or remove space inside '<' and '>'.\nsp_inside_angle                 = remove   # ignore/add/remove/force\n\n# Add or remove space inside '<>'.\nsp_inside_angle_empty           = ignore   # ignore/add/remove/force\n\n# Add or remove space between '>' and ':'.\nsp_angle_colon                  = ignore   # ignore/add/remove/force\n\n# Add or remove space after '<>'.\nsp_after_angle                  = remove   # ignore/add/remove/force\n\n# Add or remove space between '>' and '(' as found in 'new List<byte>(foo);'.\nsp_angle_paren                  = remove   # ignore/add/remove/force\n\n# Add or remove space between '>' and '()' as found in 'new List<byte>();'.\nsp_angle_paren_empty            = ignore   # ignore/add/remove/force\n\n# Add or remove space between '>' and a word as in 'List<byte> m;' or\n# 'template <typename T> static ...'.\nsp_angle_word                   = remove   # ignore/add/remove/force\n\n# Add or remove space between '>' and '>' in '>>' (template stuff).\n#\n# Default: add\nsp_angle_shift                  = add      # ignore/add/remove/force\n\n# (C++11) Permit removal of the space between '>>' in 'foo<bar<int> >'. Note\n# that sp_angle_shift cannot remove the space without this option.\nsp_permit_cpp11_shift           = false    # true/false\n\n# Add or remove space before '(' of control statements ('if', 'for', 'switch',\n# 'while', etc.).\nsp_before_sparen                = add      # ignore/add/remove/force\n\n# Add or remove space inside '(' and ')' of control statements.\nsp_inside_sparen                = remove   # ignore/add/remove/force\n\n# Add or remove space after '(' of control statements.\n#\n# Overrides sp_inside_sparen.\nsp_inside_sparen_open           = ignore   # ignore/add/remove/force\n\n# Add or remove space before ')' of control statements.\n#\n# Overrides sp_inside_sparen.\nsp_inside_sparen_close          = ignore   # ignore/add/remove/force\n\n# Add or remove space after ')' of control statements.\nsp_after_sparen                 = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of of control statements.\nsp_sparen_brace                 = add      # ignore/add/remove/force\n\n# (D) Add or remove space between 'invariant' and '('.\nsp_invariant_paren              = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space after the ')' in 'invariant (C) c'.\nsp_after_invariant_paren        = ignore   # ignore/add/remove/force\n\n# Add or remove space before empty statement ';' on 'if', 'for' and 'while'.\nsp_special_semi                 = remove   # ignore/add/remove/force\n\n# Add or remove space before ';'.\n#\n# Default: remove\nsp_before_semi                  = remove   # ignore/add/remove/force\n\n# Add or remove space before ';' in non-empty 'for' statements.\nsp_before_semi_for              = remove   # ignore/add/remove/force\n\n# Add or remove space before a semicolon of an empty part of a for statement.\nsp_before_semi_for_empty        = remove   # ignore/add/remove/force\n\n# Add or remove space after ';', except when followed by a comment.\n#\n# Default: add\nsp_after_semi                   = add      # ignore/add/remove/force\n\n# Add or remove space after ';' in non-empty 'for' statements.\n#\n# Default: force\nsp_after_semi_for               = force    # ignore/add/remove/force\n\n# Add or remove space after the final semicolon of an empty part of a for\n# statement, as in 'for ( ; ; <here> )'.\nsp_after_semi_for_empty         = remove   # ignore/add/remove/force\n\n# Add or remove space before '[' (except '[]').\nsp_before_square                = remove   # ignore/add/remove/force\n\n# Add or remove space before '[]'.\nsp_before_squares               = remove   # ignore/add/remove/force\n\n# Add or remove space before C++17 structured bindings.\nsp_cpp_before_struct_binding    = ignore   # ignore/add/remove/force\n\n# Add or remove space inside a non-empty '[' and ']'.\nsp_inside_square                = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space inside a non-empty Objective-C boxed array '@[' and\n# ']'. If set to ignore, sp_inside_square is used.\nsp_inside_square_oc_array       = ignore   # ignore/add/remove/force\n\n# Add or remove space after ',', i.e. 'a,b' vs. 'a, b'.\nsp_after_comma                  = add      # ignore/add/remove/force\n\n# Add or remove space before ','.\n#\n# Default: remove\nsp_before_comma                 = remove   # ignore/add/remove/force\n\n# (C#) Add or remove space between ',' and ']' in multidimensional array type\n# like 'int[,,]'.\nsp_after_mdatype_commas         = ignore   # ignore/add/remove/force\n\n# (C#) Add or remove space between '[' and ',' in multidimensional array type\n# like 'int[,,]'.\nsp_before_mdatype_commas        = ignore   # ignore/add/remove/force\n\n# (C#) Add or remove space between ',' in multidimensional array type\n# like 'int[,,]'.\nsp_between_mdatype_commas       = ignore   # ignore/add/remove/force\n\n# Add or remove space between an open parenthesis and comma,\n# i.e. '(,' vs. '( ,'.\n#\n# Default: force\nsp_paren_comma                  = force    # ignore/add/remove/force\n\n# Add or remove space before the variadic '...' when preceded by a\n# non-punctuator.\nsp_before_ellipsis              = ignore   # ignore/add/remove/force\n\n# Add or remove space between a type and '...'.\nsp_type_ellipsis                = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space between a type and '?'.\nsp_before_ptr_star              = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and '...'.\nsp_paren_ellipsis               = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and a qualifier such as 'const'.\nsp_paren_qualifier              = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and 'noexcept'.\nsp_paren_noexcept               = ignore   # ignore/add/remove/force\n\n# Add or remove space after class ':'.\nsp_after_class_colon            = add      # ignore/add/remove/force\n\n# Add or remove space before class ':'.\nsp_before_class_colon           = add      # ignore/add/remove/force\n\n# Add or remove space after class constructor ':'.\nsp_after_constr_colon           = ignore   # ignore/add/remove/force\n\n# Add or remove space before class constructor ':'.\nsp_before_constr_colon          = ignore   # ignore/add/remove/force\n\n# Add or remove space before case ':'.\n#\n# Default: remove\nsp_before_case_colon            = remove   # ignore/add/remove/force\n\n# Add or remove space between 'operator' and operator sign.\nsp_after_operator               = remove   # ignore/add/remove/force\n\n# Add or remove space between the operator symbol and the open parenthesis, as\n# in 'operator ++('.\nsp_after_operator_sym           = remove   # ignore/add/remove/force\n\n# Overrides sp_after_operator_sym when the operator has no arguments, as in\n# 'operator *()'.\nsp_after_operator_sym_empty     = ignore   # ignore/add/remove/force\n\n# Add or remove space after C/D cast, i.e. 'cast(int)a' vs. 'cast(int) a' or\n# '(int)a' vs. '(int) a'.\nsp_after_cast                   = remove   # ignore/add/remove/force\n\n# Add or remove spaces inside cast parentheses.\nsp_inside_paren_cast            = remove   # ignore/add/remove/force\n\n# Add or remove space between the type and open parenthesis in a C++ cast,\n# i.e. 'int(exp)' vs. 'int (exp)'.\nsp_cpp_cast_paren               = remove   # ignore/add/remove/force\n\n# Add or remove space between 'sizeof' and '('.\nsp_sizeof_paren                 = remove   # ignore/add/remove/force\n\n# Add or remove space between 'sizeof' and '...'.\nsp_sizeof_ellipsis              = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'sizeof...' and '('.\nsp_sizeof_ellipsis_paren        = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'decltype' and '('.\nsp_decltype_paren               = ignore   # ignore/add/remove/force\n\n# (Pawn) Add or remove space after the tag keyword.\nsp_after_tag                    = ignore   # ignore/add/remove/force\n\n# Add or remove space inside enum '{' and '}'.\nsp_inside_braces_enum           = add      # ignore/add/remove/force\n\n# Add or remove space inside struct/union '{' and '}'.\nsp_inside_braces_struct         = add      # ignore/add/remove/force\n\n# (OC) Add or remove space inside Objective-C boxed dictionary '{' and '}'\nsp_inside_braces_oc_dict        = ignore   # ignore/add/remove/force\n\n# Add or remove space after open brace in an unnamed temporary\n# direct-list-initialization.\nsp_after_type_brace_init_lst_open = ignore   # ignore/add/remove/force\n\n# Add or remove space before close brace in an unnamed temporary\n# direct-list-initialization.\nsp_before_type_brace_init_lst_close = ignore   # ignore/add/remove/force\n\n# Add or remove space inside an unnamed temporary direct-list-initialization.\nsp_inside_type_brace_init_lst   = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '{' and '}'.\nsp_inside_braces                = add      # ignore/add/remove/force\n\n# Add or remove space inside '{}'.\nsp_inside_braces_empty          = remove   # ignore/add/remove/force\n\n# Add or remove space between return type and function name. A minimum of 1\n# is forced except for pointer return types.\nsp_type_func                    = add      # ignore/add/remove/force\n\n# Add or remove space between type and open brace of an unnamed temporary\n# direct-list-initialization.\nsp_type_brace_init_lst          = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function declaration.\nsp_func_proto_paren             = remove   # ignore/add/remove/force\n\n# Add or remove space between function name and '()' on function declaration\n# without parameters.\nsp_func_proto_paren_empty       = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function definition.\nsp_func_def_paren               = remove   # ignore/add/remove/force\n\n# Add or remove space between function name and '()' on function definition\n# without parameters.\nsp_func_def_paren_empty         = ignore   # ignore/add/remove/force\n\n# Add or remove space inside empty function '()'.\nsp_inside_fparens               = remove   # ignore/add/remove/force\n\n# Add or remove space inside function '(' and ')'.\nsp_inside_fparen                = remove   # ignore/add/remove/force\n\n# Add or remove space inside the first parentheses in a function type, as in\n# 'void (*x)(...)'.\nsp_inside_tparen                = ignore   # ignore/add/remove/force\n\n# Add or remove space between the ')' and '(' in a function type, as in\n# 'void (*x)(...)'.\nsp_after_tparen_close           = ignore   # ignore/add/remove/force\n\n# Add or remove space between ']' and '(' when part of a function call.\nsp_square_fparen                = remove   # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of function.\nsp_fparen_brace                 = add      # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of s function call in object\n# initialization.\n#\n# Overrides sp_fparen_brace.\nsp_fparen_brace_initializer     = ignore   # ignore/add/remove/force\n\n# (Java) Add or remove space between ')' and '{{' of double brace initializer.\nsp_fparen_dbrace                = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function calls.\nsp_func_call_paren              = remove   # ignore/add/remove/force\n\n# Add or remove space between function name and '()' on function calls without\n# parameters. If set to 'ignore' (the default), sp_func_call_paren is used.\nsp_func_call_paren_empty        = ignore   # ignore/add/remove/force\n\n# Add or remove space between the user function name and '(' on function\n# calls. You need to set a keyword to be a user function in the config file,\n# like:\n#   set func_call_user tr _ i18n\nsp_func_call_user_paren         = remove   # ignore/add/remove/force\n\n# Add or remove space inside user function '(' and ')'.\nsp_func_call_user_inside_fparen = ignore   # ignore/add/remove/force\n\n# Add or remove space between nested parentheses with user functions,\n# i.e. '((' vs. '( ('.\nsp_func_call_user_paren_paren   = ignore   # ignore/add/remove/force\n\n# Add or remove space between a constructor/destructor and the open\n# parenthesis.\nsp_func_class_paren             = remove   # ignore/add/remove/force\n\n# Add or remove space between a constructor without parameters or destructor\n# and '()'.\nsp_func_class_paren_empty       = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'return' and '('.\nsp_return_paren                 = add      # ignore/add/remove/force\n\n# Add or remove space between 'return' and '{'.\nsp_return_brace                 = ignore   # ignore/add/remove/force\n\n# Add or remove space between '__attribute__' and '('.\nsp_attribute_paren              = remove   # ignore/add/remove/force\n\n# Add or remove space between 'defined' and '(' in '#if defined (FOO)'.\nsp_defined_paren                = remove   # ignore/add/remove/force\n\n# Add or remove space between 'throw' and '(' in 'throw (something)'.\nsp_throw_paren                  = remove   # ignore/add/remove/force\n\n# Add or remove space between 'throw' and anything other than '(' as in\n# '@throw [...];'.\nsp_after_throw                  = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'catch' and '(' in 'catch (something) { }'.\n# If set to ignore, sp_before_sparen is used.\nsp_catch_paren                  = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space between '@catch' and '('\n# in '@catch (something) { }'. If set to ignore, sp_catch_paren is used.\nsp_oc_catch_paren               = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space between class name and '('\n# in '@interface className(categoryName)<ProtocolName>:BaseClass'\nsp_oc_classname_paren           = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space between 'version' and '('\n# in 'version (something) { }'. If set to ignore, sp_before_sparen is used.\nsp_version_paren                = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space between 'scope' and '('\n# in 'scope (something) { }'. If set to ignore, sp_before_sparen is used.\nsp_scope_paren                  = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'super' and '(' in 'super (something)'.\n#\n# Default: remove\nsp_super_paren                  = remove   # ignore/add/remove/force\n\n# Add or remove space between 'this' and '(' in 'this (something)'.\n#\n# Default: remove\nsp_this_paren                   = remove   # ignore/add/remove/force\n\n# Add or remove space between a macro name and its definition.\nsp_macro                        = add      # ignore/add/remove/force\n\n# Add or remove space between a macro function ')' and its definition.\nsp_macro_func                   = remove   # ignore/add/remove/force\n\n# Add or remove space between 'else' and '{' if on the same line.\nsp_else_brace                   = add      # ignore/add/remove/force\n\n# Add or remove space between '}' and 'else' if on the same line.\nsp_brace_else                   = add      # ignore/add/remove/force\n\n# Add or remove space between '}' and the name of a typedef on the same line.\nsp_brace_typedef                = add      # ignore/add/remove/force\n\n# Add or remove space before the '{' of a 'catch' statement, if the '{' and\n# 'catch' are on the same line, as in 'catch (decl) <here> {'.\nsp_catch_brace                  = add      # ignore/add/remove/force\n\n# (OC) Add or remove space before the '{' of a '@catch' statement, if the '{'\n# and '@catch' are on the same line, as in '@catch (decl) <here> {'.\n# If set to ignore, sp_catch_brace is used.\nsp_oc_catch_brace               = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and 'catch' if on the same line.\nsp_brace_catch                  = add      # ignore/add/remove/force\n\n# (OC) Add or remove space between '}' and '@catch' if on the same line.\n# If set to ignore, sp_brace_catch is used.\nsp_oc_brace_catch               = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'finally' and '{' if on the same line.\nsp_finally_brace                = add      # ignore/add/remove/force\n\n# Add or remove space between '}' and 'finally' if on the same line.\nsp_brace_finally                = add      # ignore/add/remove/force\n\n# Add or remove space between 'try' and '{' if on the same line.\nsp_try_brace                    = add      # ignore/add/remove/force\n\n# Add or remove space between get/set and '{' if on the same line.\nsp_getset_brace                 = add      # ignore/add/remove/force\n\n# Add or remove space between a variable and '{' for C++ uniform\n# initialization.\n#\n# Default: add\nsp_type_brace_init_lst                   = add      # ignore/add/remove/force\n\n# Add or remove space between a variable and '{' for a namespace.\n#\n# Default: add\nsp_word_brace_ns                = add      # ignore/add/remove/force\n\n# Add or remove space before the '::' operator.\nsp_before_dc                    = remove   # ignore/add/remove/force\n\n# Add or remove space after the '::' operator.\nsp_after_dc                     = remove   # ignore/add/remove/force\n\n# (D) Add or remove around the D named array initializer ':' operator.\nsp_d_array_colon                = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '!' (not) unary operator.\n#\n# Default: remove\nsp_not                          = remove   # ignore/add/remove/force\n\n# Add or remove space after the '~' (invert) unary operator.\n#\n# Default: remove\nsp_inv                          = remove   # ignore/add/remove/force\n\n# Add or remove space after the '&' (address-of) unary operator. This does not\n# affect the spacing after a '&' that is part of a type.\n#\n# Default: remove\nsp_addr                         = remove   # ignore/add/remove/force\n\n# Add or remove space around the '.' or '->' operators.\n#\n# Default: remove\nsp_member                       = remove   # ignore/add/remove/force\n\n# Add or remove space after the '*' (dereference) unary operator. This does\n# not affect the spacing after a '*' that is part of a type.\n#\n# Default: remove\nsp_deref                        = remove   # ignore/add/remove/force\n\n# Add or remove space after '+' or '-', as in 'x = -5' or 'y = +7'.\n#\n# Default: remove\nsp_sign                         = remove   # ignore/add/remove/force\n\n# Add or remove space between '++' and '--' the word to which it is being\n# applied, as in '(--x)' or 'y++;'.\n#\n# Default: remove\nsp_incdec                       = remove   # ignore/add/remove/force\n\n# Add or remove space before a backslash-newline at the end of a line.\n#\n# Default: add\nsp_before_nl_cont               = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space after the scope '+' or '-', as in '-(void) foo;'\n# or '+(int) bar;'.\nsp_after_oc_scope               = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space after the colon in message specs,\n# i.e. '-(int) f:(int) x;' vs. '-(int) f: (int) x;'.\nsp_after_oc_colon               = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space before the colon in message specs,\n# i.e. '-(int) f: (int) x;' vs. '-(int) f : (int) x;'.\nsp_before_oc_colon              = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space after the colon in immutable dictionary expression\n# 'NSDictionary *test = @{@\"foo\" :@\"bar\"};'.\nsp_after_oc_dict_colon          = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space before the colon in immutable dictionary expression\n# 'NSDictionary *test = @{@\"foo\" :@\"bar\"};'.\nsp_before_oc_dict_colon         = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space after the colon in message specs,\n# i.e. '[object setValue:1];' vs. '[object setValue: 1];'.\nsp_after_send_oc_colon          = add      # ignore/add/remove/force\n\n# (OC) Add or remove space before the colon in message specs,\n# i.e. '[object setValue:1];' vs. '[object setValue :1];'.\nsp_before_send_oc_colon         = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space after the (type) in message specs,\n# i.e. '-(int)f: (int) x;' vs. '-(int)f: (int)x;'.\nsp_after_oc_type                = remove   # ignore/add/remove/force\n\n# (OC) Add or remove space after the first (type) in message specs,\n# i.e. '-(int) f:(int)x;' vs. '-(int)f:(int)x;'.\nsp_after_oc_return_type         = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space between '@selector' and '(',\n# i.e. '@selector(msgName)' vs. '@selector (msgName)'.\n# Also applies to '@protocol()' constructs.\nsp_after_oc_at_sel              = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space between '@selector(x)' and the following word,\n# i.e. '@selector(foo) a:' vs. '@selector(foo)a:'.\nsp_after_oc_at_sel_parens       = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space inside '@selector' parentheses,\n# i.e. '@selector(foo)' vs. '@selector( foo )'.\n# Also applies to '@protocol()' constructs.\nsp_inside_oc_at_sel_parens      = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space before a block pointer caret,\n# i.e. '^int (int arg){...}' vs. ' ^int (int arg){...}'.\nsp_before_oc_block_caret        = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space after a block pointer caret,\n# i.e. '^int (int arg){...}' vs. '^ int (int arg){...}'.\nsp_after_oc_block_caret         = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space between the receiver and selector in a message,\n# as in '[receiver selector ...]'.\nsp_after_oc_msg_receiver        = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space after '@property'.\nsp_after_oc_property            = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove space between '@synchronized' and the open parenthesis,\n# i.e. '@synchronized(foo)' vs. '@synchronized (foo)'.\nsp_after_oc_synchronized        = ignore   # ignore/add/remove/force\n\n# Add or remove space around the ':' in 'b ? t : f'.\nsp_cond_colon                   = add      # ignore/add/remove/force\n\n# Add or remove space before the ':' in 'b ? t : f'.\n#\n# Overrides sp_cond_colon.\nsp_cond_colon_before            = ignore   # ignore/add/remove/force\n\n# Add or remove space after the ':' in 'b ? t : f'.\n#\n# Overrides sp_cond_colon.\nsp_cond_colon_after             = ignore   # ignore/add/remove/force\n\n# Add or remove space around the '?' in 'b ? t : f'.\nsp_cond_question                = add      # ignore/add/remove/force\n\n# Add or remove space before the '?' in 'b ? t : f'.\n#\n# Overrides sp_cond_question.\nsp_cond_question_before         = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '?' in 'b ? t : f'.\n#\n# Overrides sp_cond_question.\nsp_cond_question_after          = ignore   # ignore/add/remove/force\n\n# In the abbreviated ternary form '(a ?: b)', add or remove space between '?'\n# and ':'.\n#\n# Overrides all other sp_cond_* options.\nsp_cond_ternary_short           = ignore   # ignore/add/remove/force\n\n# Fix the spacing between 'case' and the label. Only 'ignore' and 'force' make\n# sense here.\nsp_case_label                   = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space around the D '..' operator.\nsp_range                        = ignore   # ignore/add/remove/force\n\n# Add or remove space after ':' in a Java/C++11 range-based 'for',\n# as in 'for (Type var : expr)'.\nsp_after_for_colon              = ignore   # ignore/add/remove/force\n\n# Add or remove space before ':' in a Java/C++11 range-based 'for',\n# as in 'for (Type var : expr)'.\nsp_before_for_colon             = ignore   # ignore/add/remove/force\n\n# (D) Add or remove space between 'extern' and '(' as in 'extern (C)'.\nsp_extern_paren                 = ignore   # ignore/add/remove/force\n\n# Add or remove space after the opening of a C++ comment,\n# i.e. '// A' vs. '//A'.\nsp_cmt_cpp_start                = add      # ignore/add/remove/force\n\n# If true, space is added with sp_cmt_cpp_start will be added after doxygen\n# sequences like '///', '///<', '//!' and '//!<'.\nsp_cmt_cpp_doxygen              = false    # true/false\n\n# If true, space is added with sp_cmt_cpp_start will be added after Qt\n# translator or meta-data comments like '//:', '//=', and '//~'.\nsp_cmt_cpp_qttr                 = false    # true/false\n\n# Add or remove space between #else or #endif and a trailing comment.\nsp_endif_cmt                    = ignore   # ignore/add/remove/force\n\n# Add or remove space after 'new', 'delete' and 'delete[]'.\nsp_after_new                    = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'new' and '(' in 'new()'.\nsp_between_new_paren            = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and type in 'new(foo) BAR'.\nsp_after_newop_paren            = ignore   # ignore/add/remove/force\n\n# Add or remove space inside parenthesis of the new operator\n# as in 'new(foo) BAR'.\nsp_inside_newop_paren           = ignore   # ignore/add/remove/force\n\n# Add or remove space after the open parenthesis of the new operator,\n# as in 'new(foo) BAR'.\n#\n# Overrides sp_inside_newop_paren.\nsp_inside_newop_paren_open      = ignore   # ignore/add/remove/force\n\n# Add or remove space before the close parenthesis of the new operator,\n# as in 'new(foo) BAR'.\n#\n# Overrides sp_inside_newop_paren.\nsp_inside_newop_paren_close     = ignore   # ignore/add/remove/force\n\n# Add or remove space before a trailing or embedded comment.\nsp_before_tr_cmt                = ignore   # ignore/add/remove/force\n\n# Number of spaces before a trailing or embedded comment.\nsp_num_before_tr_cmt            = 0        # unsigned number\n\n# (Java) Add or remove space between an annotation and the open parenthesis.\nsp_annotation_paren             = ignore   # ignore/add/remove/force\n\n# If true, vbrace tokens are dropped to the previous token and skipped.\nsp_skip_vbrace_tokens           = false    # true/false\n\n# Add or remove space after 'noexcept'.\nsp_after_noexcept               = ignore   # ignore/add/remove/force\n\n# Add or remove space after '_'.\nsp_vala_after_translation       = ignore   # ignore/add/remove/force\n\n# If true, a <TAB> is inserted after #define.\nforce_tab_after_define          = false    # true/false\n\n#\n# Indenting options\n#\n\n# The number of columns to indent per level. Usually 2, 3, 4, or 8.\n#\n# Default: 8\nindent_columns                  = 2        # unsigned number\n\n# The continuation indent. If non-zero, this overrides the indent of '(', '['\n# and '=' continuation indents. Negative values are OK; negative value is\n# absolute and not increased for each '(' or '[' level.\n#\n# For FreeBSD, this is set to 4.\nindent_continue                 = 0        # number\n\n# The continuation indent, only for class header line(s). If non-zero, this\n# overrides the indent of 'class' continuation indents.\nindent_continue_class_head      = 0        # unsigned number\n\n# Whether to indent empty lines (i.e. lines which contain only spaces before\n# the newline character).\nindent_single_newlines          = false    # true/false\n\n# The continuation indent for func_*_param if they are true. If non-zero, this\n# overrides the indent.\nindent_param                    = 0        # unsigned number\n\n# How to use tabs when indenting code.\n#\n# 0: Spaces only\n# 1: Indent with tabs to brace level, align with spaces (default)\n# 2: Indent and align with tabs, using spaces when not on a tabstop\n#\n# Default: 1\nindent_with_tabs                = 0        # unsigned number\n\n# Whether to indent comments that are not at a brace level with tabs on a\n# tabstop. Requires indent_with_tabs=2. If false, will use spaces.\nindent_cmt_with_tabs            = false    # true/false\n\n# Whether to indent strings broken by '\\' so that they line up.\nindent_align_string             = true     # true/false\n\n# The number of spaces to indent multi-line XML strings.\n# Requires indent_align_string=true.\nindent_xml_string               = 0        # unsigned number\n\n# Spaces to indent '{' from level.\nindent_brace                    = 0        # unsigned number\n\n# Whether braces are indented to the body level.\nindent_braces                   = false    # true/false\n\n# Whether to disable indenting function braces if indent_braces=true.\nindent_braces_no_func           = false    # true/false\n\n# Whether to disable indenting class braces if indent_braces=true.\nindent_braces_no_class          = false    # true/false\n\n# Whether to disable indenting struct braces if indent_braces=true.\nindent_braces_no_struct         = false    # true/false\n\n# Whether to indent based on the size of the brace parent,\n# i.e. 'if' => 3 spaces, 'for' => 4 spaces, etc.\nindent_brace_parent             = false    # true/false\n\n# Whether to indent based on the open parenthesis instead of the open brace\n# in '({\\n'.\nindent_paren_open_brace         = false    # true/false\n\n# (C#) Whether to indent the brace of a C# delegate by another level.\nindent_cs_delegate_brace        = false    # true/false\n\n# (C#) Whether to indent a C# delegate (to handle delegates with no brace) by\n# another level.\nindent_cs_delegate_body         = false    # true/false\n\n# Whether to indent the body of a 'namespace'.\nindent_namespace                = false    # true/false\n\n# Whether to indent only the first namespace, and not any nested namespaces.\n# Requires indent_namespace=true.\nindent_namespace_single_indent  = false    # true/false\n\n# The number of spaces to indent a namespace block.\n# If set to zero, use the value indent_columns\nindent_namespace_level          = 0        # unsigned number\n\n# If the body of the namespace is longer than this number, it won't be\n# indented. Requires indent_namespace=true. 0 means no limit.\nindent_namespace_limit          = 0        # unsigned number\n\n# Whether the 'extern \"C\"' body is indented.\nindent_extern                   = false    # true/false\n\n# Whether the 'class' body is indented.\nindent_class                    = true     # true/false\n\n# Whether to indent the stuff after a leading base class colon.\nindent_class_colon              = true     # true/false\n\n# Whether to indent based on a class colon instead of the stuff after the\n# colon. Requires indent_class_colon=true.\nindent_class_on_colon           = false    # true/false\n\n# Whether to indent the stuff after a leading class initializer colon.\nindent_constr_colon             = false    # true/false\n\n# Virtual indent from the ':' for member initializers.\n#\n# Default: 2\nindent_ctor_init_leading        = 2        # unsigned number\n\n# Additional indent for constructor initializer list.\n# Negative values decrease indent down to the first column.\nindent_ctor_init                = 0        # number\n\n# Whether to indent 'if' following 'else' as a new block under the 'else'.\n# If false, 'else\\nif' is treated as 'else if' for indenting purposes.\nindent_else_if                  = false    # true/false\n\n# Amount to indent variable declarations after a open brace.\n#\n#  <0: Relative\n# >=0: Absolute\nindent_var_def_blk              = 0        # number\n\n# Whether to indent continued variable declarations instead of aligning.\nindent_var_def_cont             = false    # true/false\n\n# Whether to indent continued shift expressions ('<<' and '>>') instead of\n# aligning. Set align_left_shift=false when enabling this.\nindent_shift                    = 0    # true/false\n\n# Whether to force indentation of function definitions to start in column 1.\nindent_func_def_force_col1      = false    # true/false\n\n# Whether to indent continued function call parameters one indent level,\n# rather than aligning parameters under the open parenthesis.\nindent_func_call_param          = false    # true/false\n\n# Same as indent_func_call_param, but for function definitions.\nindent_func_def_param           = false    # true/false\n\n# Same as indent_func_call_param, but for function prototypes.\nindent_func_proto_param         = false    # true/false\n\n# Same as indent_func_call_param, but for class declarations.\nindent_func_class_param         = false    # true/false\n\n# Same as indent_func_call_param, but for class variable constructors.\nindent_func_ctor_var_param      = false    # true/false\n\n# Same as indent_func_call_param, but for template parameter lists.\nindent_template_param           = false    # true/false\n\n# Double the indent for indent_func_xxx_param options.\n# Use both values of the options indent_columns and indent_param.\nindent_func_param_double        = false    # true/false\n\n# Indentation column for standalone 'const' qualifier on a function\n# prototype.\nindent_func_const               = 0        # unsigned number\n\n# Indentation column for standalone 'throw' qualifier on a function\n# prototype.\nindent_func_throw               = 0        # unsigned number\n\n# The number of spaces to indent a continued '->' or '.'.\n# Usually set to 0, 1, or indent_columns.\nindent_member                   = 0        # unsigned number\n\n# Whether lines broken at '.' or '->' should be indented by a single indent.\n# The indent_member option will not be effective if this is set to true.\nindent_member_single            = false    # true/false\n\n# Spaces to indent single line ('//') comments on lines before code.\nindent_single_line_comments_before       = 0        # unsigned number\n\n# Whether to indent trailing single line ('//') comments relative to the code\n# instead of trying to keep the same absolute column.\nindent_relative_single_line_comments = false    # true/false\n\n# Spaces to indent 'case' from 'switch'. Usually 0 or indent_columns.\nindent_switch_case              = 2        # unsigned number\n\n# Whether to indent preprocessor statements inside of switch statements.\n#\n# Default: true\nindent_switch_pp                = true     # true/false\n\n# Spaces to shift the 'case' line, without affecting any other lines.\n# Usually 0.\nindent_case_shift               = 0        # unsigned number\n\n# Spaces to indent '{' from 'case'. By default, the brace will appear under\n# the 'c' in case. Usually set to 0 or indent_columns. Negative values are OK.\nindent_case_brace               = 0        # number\n\n# Whether to indent comments found in first column.\nindent_col1_comment             = true     # true/false\n\n# Whether to indent multi string literal in first column.\nindent_col1_multi_string_literal = false    # true/false\n\n# How to indent goto labels.\n#\n#  >0: Absolute column where 1 is the leftmost column\n# <=0: Subtract from brace indent\n#\n# Default: 1\nindent_label                    = 1        # number\n\n# Same as indent_label, but for access specifiers that are followed by a\n# colon.\n#\n# Default: 1\nindent_access_spec              = 1        # number\n\n# Whether to indent the code after an access specifier by one level.\n# If true, this option forces 'indent_access_spec=0'.\nindent_access_spec_body         = false    # true/false\n\n# If an open parenthesis is followed by a newline, whether to indent the next\n# line so that it lines up after the open parenthesis (not recommended).\nindent_paren_nl                 = false    # true/false\n\n# How to indent a close parenthesis after a newline.\n#\n# 0: Indent to body level (default)\n# 1: Align under the open parenthesis\n# 2: Indent to the brace level\nindent_paren_close              = 0        # unsigned number\n\n# Whether to indent the open parenthesis of a function definition,\n# if the parenthesis is on its own line.\nindent_paren_after_func_def     = false    # true/false\n\n# Whether to indent the open parenthesis of a function declaration,\n# if the parenthesis is on its own line.\nindent_paren_after_func_decl    = false    # true/false\n\n# Whether to indent the open parenthesis of a function call,\n# if the parenthesis is on its own line.\nindent_paren_after_func_call    = false    # true/false\n\n# Whether to indent a comma when inside a parenthesis.\n# If true, aligns under the open parenthesis.\nindent_comma_paren              = 0    # true/false\n\n# Whether to indent a Boolean operator when inside a parenthesis.\n# If true, aligns under the open parenthesis.\nindent_bool_paren               = 0    # true/false\n\n# Whether to indent a semicolon when inside a for parenthesis.\n# If true, aligns under the open for parenthesis.\nindent_semicolon_for_paren      = false    # true/false\n\n# Whether to align the first expression to following ones\n# if indent_bool_paren=true.\nindent_first_bool_expr          = false    # true/false\n\n# Whether to align the first expression to following ones\n# if indent_semicolon_for_paren=true.\nindent_first_for_expr           = false    # true/false\n\n# If an open square is followed by a newline, whether to indent the next line\n# so that it lines up after the open square (not recommended).\nindent_square_nl                = false    # true/false\n\n# (ESQL/C) Whether to preserve the relative indent of 'EXEC SQL' bodies.\nindent_preserve_sql             = false    # true/false\n\n# Whether to align continued statements at the '='. If false or if the '=' is\n# followed by a newline, the next line is indent one tab.\n#\n# Default: true\nindent_align_assign             = true     # true/false\n\n# Whether to align continued statements at the '('. If false or the '(' is\n# followed by a newline, the next line indent is one tab.\n#\n# Default: true\nindent_align_paren              = true     # true/false\n\n# (OC) Whether to indent Objective-C blocks at brace level instead of usual\n# rules.\nindent_oc_block                 = false    # true/false\n\n# (OC) Indent for Objective-C blocks in a message relative to the parameter\n# name.\n#\n# =0: Use indent_oc_block rules\n# >0: Use specified number of spaces to indent\nindent_oc_block_msg             = 0        # unsigned number\n\n# (OC) Minimum indent for subsequent parameters\nindent_oc_msg_colon             = 0        # unsigned number\n\n# (OC) Whether to prioritize aligning with initial colon (and stripping spaces\n# from lines, if necessary).\n#\n# Default: true\nindent_oc_msg_prioritize_first_colon = true     # true/false\n\n# (OC) Whether to indent blocks the way that Xcode does by default\n# (from the keyword if the parameter is on its own line; otherwise, from the\n# previous indentation level). Requires indent_oc_block_msg=true.\nindent_oc_block_msg_xcode_style = false    # true/false\n\n# (OC) Whether to indent blocks from where the brace is, relative to a\n# message keyword. Requires indent_oc_block_msg=true.\nindent_oc_block_msg_from_keyword = false    # true/false\n\n# (OC) Whether to indent blocks from where the brace is, relative to a message\n# colon. Requires indent_oc_block_msg=true.\nindent_oc_block_msg_from_colon  = false    # true/false\n\n# (OC) Whether to indent blocks from where the block caret is.\n# Requires indent_oc_block_msg=true.\nindent_oc_block_msg_from_caret  = false    # true/false\n\n# (OC) Whether to indent blocks from where the brace caret is.\n# Requires indent_oc_block_msg=true.\nindent_oc_block_msg_from_brace  = false    # true/false\n\n# When indenting after virtual brace open and newline add further spaces to\n# reach this minimum indent.\nindent_min_vbrace_open          = 0        # unsigned number\n\n# Whether to add further spaces after regular indent to reach next tabstop\n# when identing after virtual brace open and newline.\nindent_vbrace_open_on_tabstop   = false    # true/false\n\n# How to indent after a brace followed by another token (not a newline).\n# true:  indent all contained lines to match the token\n# false: indent all contained lines to match the brace\n#\n# Default: true\nindent_token_after_brace        = true     # true/false\n\n# Whether to indent the body of a C++11 lambda.\nindent_cpp_lambda_body          = false    # true/false\n\n# (C#) Whether to indent a 'using' block if no braces are used.\n#\n# Default: true\nindent_using_block              = true     # true/false\n\n# How to indent the continuation of ternary operator.\n#\n# 0: Off (default)\n# 1: When the `if_false` is a continuation, indent it under `if_false`\n# 2: When the `:` is a continuation, indent it under `?`\nindent_ternary_operator         = 0        # unsigned number\n\n# If true, the indentation of the chunks after a `return new` sequence will be set at return indentation column.\nindent_off_after_return_new     = false    # true/false\n\n# If true, the tokens after return are indented with regular single indentation. By default (false) the indentation is after the return token.\nindent_single_after_return      = false    # true/false\n\n# Whether to ignore indent and alignment for 'asm' blocks (i.e. assume they\n# have their own indentation).\nindent_ignore_asm_block         = false    # true/false\n\n#\n# Newline adding and removing options\n#\n\n# Whether to collapse empty blocks between '{' and '}'.\nnl_collapse_empty_body          = true     # true/false\n\n# Don't split one-line braced assignments, as in 'foo_t f = { 1, 2 };'.\nnl_assign_leave_one_liners      = false    # true/false\n\n# Don't split one-line braced statements inside a 'class xx { }' body.\nnl_class_leave_one_liners       = false    # true/false\n\n# Don't split one-line enums, as in 'enum foo { BAR = 15 };'\nnl_enum_leave_one_liners        = false    # true/false\n\n# Don't split one-line get or set functions.\nnl_getset_leave_one_liners      = false    # true/false\n\n# (C#) Don't split one-line property get or set functions.\nnl_cs_property_leave_one_liners = false    # true/false\n\n# Don't split one-line function definitions, as in 'int foo() { return 0; }'.\nnl_func_leave_one_liners        = false    # true/false\n\n# Don't split one-line C++11 lambdas, as in '[]() { return 0; }'.\nnl_cpp_lambda_leave_one_liners  = false    # true/false\n\n# Don't split one-line if/else statements, as in 'if(...) b++;'.\nnl_if_leave_one_liners          = false    # true/false\n\n# Don't split one-line while statements, as in 'while(...) b++;'.\nnl_while_leave_one_liners       = false    # true/false\n\n# Don't split one-line for statements, as in 'for(...) b++;'.\nnl_for_leave_one_liners         = false    # true/false\n\n# (OC) Don't split one-line Objective-C messages.\nnl_oc_msg_leave_one_liner       = false    # true/false\n\n# (OC) Add or remove newline between method declaration and '{'.\nnl_oc_mdef_brace                = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove newline between Objective-C block signature and '{'.\nnl_oc_block_brace               = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove newline between '@interface' and '{'.\nnl_oc_interface_brace           = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove newline between '@implementation' and '{'.\nnl_oc_implementation_brace      = ignore   # ignore/add/remove/force\n\n# Add or remove newlines at the start of the file.\nnl_start_of_file                = ignore   # ignore/add/remove/force\n\n# The minimum number of newlines at the start of the file (only used if\n# nl_start_of_file is 'add' or 'force').\nnl_start_of_file_min            = 0        # unsigned number\n\n# Add or remove newline at the end of the file.\nnl_end_of_file                  = add      # ignore/add/remove/force\n\n# The minimum number of newlines at the end of the file (only used if\n# nl_end_of_file is 'add' or 'force').\nnl_end_of_file_min              = 1        # unsigned number\n\n# Add or remove newline between '=' and '{'.\nnl_assign_brace                 = ignore   # ignore/add/remove/force\n\n# (D) Add or remove newline between '=' and '['.\nnl_assign_square                = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '[]' and '{'.\nnl_tsquare_brace                = ignore   # ignore/add/remove/force\n\n# (D) Add or remove newline after '= ['. Will also affect the newline before\n# the ']'.\nnl_after_square_assign          = ignore   # ignore/add/remove/force\n\n# Add or remove newline between a function call's ')' and '{', as in\n# 'list_for_each(item, &list) { }'.\nnl_fcall_brace                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum' and '{'.\nnl_enum_brace                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum' and 'class'.\nnl_enum_class                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum class' and the identifier.\nnl_enum_class_identifier        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum class' type and ':'.\nnl_enum_identifier_colon        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum class identifier :' and type.\nnl_enum_colon_type              = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'struct and '{'.\nnl_struct_brace                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'union' and '{'.\nnl_union_brace                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'if' and '{'.\nnl_if_brace                     = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'else'.\nnl_brace_else                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else if' and '{'. If set to ignore,\n# nl_if_brace is used instead.\nnl_elseif_brace                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else' and '{'.\nnl_else_brace                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else' and 'if'.\nnl_else_if                      = ignore   # ignore/add/remove/force\n\n# Add or remove newline before 'if'/'else if' closing parenthesis.\nnl_before_if_closing_paren      = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'finally'.\nnl_brace_finally                = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'finally' and '{'.\nnl_finally_brace                = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'try' and '{'.\nnl_try_brace                    = ignore   # ignore/add/remove/force\n\n# Add or remove newline between get/set and '{'.\nnl_getset_brace                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'for' and '{'.\nnl_for_brace                    = ignore   # ignore/add/remove/force\n\n# Add or remove newline before the '{' of a 'catch' statement, as in\n# 'catch (decl) <here> {'.\nnl_catch_brace                  = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove newline before the '{' of a '@catch' statement, as in\n# '@catch (decl) <here> {'. If set to ignore, nl_catch_brace is used.\nnl_oc_catch_brace               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'catch'.\nnl_brace_catch                  = ignore   # ignore/add/remove/force\n\n# (OC) Add or remove newline between '}' and '@catch'. If set to ignore,\n# nl_brace_catch is used.\nnl_oc_brace_catch               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and ']'.\nnl_brace_square                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and ')' in a function invocation.\nnl_brace_fparen                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'while' and '{'.\nnl_while_brace                  = ignore   # ignore/add/remove/force\n\n# (D) Add or remove newline between 'scope (x)' and '{'.\nnl_scope_brace                  = ignore   # ignore/add/remove/force\n\n# (D) Add or remove newline between 'unittest' and '{'.\nnl_unittest_brace               = ignore   # ignore/add/remove/force\n\n# (D) Add or remove newline between 'version (x)' and '{'.\nnl_version_brace                = ignore   # ignore/add/remove/force\n\n# (C#) Add or remove newline between 'using' and '{'.\nnl_using_brace                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline between two open or close braces. Due to general\n# newline/brace handling, REMOVE may not work.\nnl_brace_brace                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'do' and '{'.\nnl_do_brace                     = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'while' of 'do' statement.\nnl_brace_while                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'switch' and '{'.\nnl_switch_brace                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'synchronized' and '{'.\nnl_synchronized_brace           = ignore   # ignore/add/remove/force\n\n# Add a newline between ')' and '{' if the ')' is on a different line than the\n# if/for/etc.\n#\n# Overrides nl_for_brace, nl_if_brace, nl_switch_brace, nl_while_switch and\n# nl_catch_brace.\nnl_multi_line_cond              = false    # true/false\n\n# Force a newline in a define after the macro name for multi-line defines.\nnl_multi_line_define            = false    # true/false\n\n# Whether to add a newline before 'case', and a blank line before a 'case'\n# statement that follows a ';' or '}'.\nnl_before_case                  = false    # true/false\n\n# Whether to add a newline after a 'case' statement.\nnl_after_case                   = false    # true/false\n\n# Add or remove newline between a case ':' and '{'.\n#\n# Overrides nl_after_case.\nnl_case_colon_brace             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between ')' and 'throw'.\nnl_before_throw                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'namespace' and '{'.\nnl_namespace_brace              = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'template<>' and whatever follows.\nnl_template_class               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'class' and '{'.\nnl_class_brace                  = remove   # ignore/add/remove/force\n\n# Add or remove newline before or after (depending on pos_class_comma,\n# may not be IGNORE) each',' in the base class list.\nnl_class_init_args              = add      # ignore/add/remove/force\n\n# Add or remove newline after each ',' in the constructor member\n# initialization. Related to nl_constr_colon, pos_constr_colon and\n# pos_constr_comma.\nnl_constr_init_args             = ignore   # ignore/add/remove/force\n\n# Add or remove newline before first element, after comma, and after last\n# element, in 'enum'.\nnl_enum_own_lines               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name in a function\n# definition.\nnl_func_type_name               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name inside a class\n# definition. If set to ignore, nl_func_type_name or nl_func_proto_type_name\n# is used instead.\nnl_func_type_name_class         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between class specification and '::'\n# in 'void A::f() { }'. Only appears in separate member implementation (does\n# not appear with in-line implementation).\nnl_func_class_scope             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between function scope and name, as in\n# 'void A :: <here> f() { }'.\nnl_func_scope_name              = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name in a prototype.\nnl_func_proto_type_name         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '(' in the\n# declaration.\nnl_func_paren                   = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_paren for functions with no parameters.\nnl_func_paren_empty             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '(' in the\n# definition.\nnl_func_def_paren               = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_paren for functions with no parameters.\nnl_func_def_paren_empty         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '(' in the\n# call.\nnl_func_call_paren              = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_call_paren for functions with no parameters.\nnl_func_call_paren_empty        = ignore   # ignore/add/remove/force\n\n# Add or remove newline after '(' in a function declaration.\nnl_func_decl_start              = ignore   # ignore/add/remove/force\n\n# Add or remove newline after '(' in a function definition.\nnl_func_def_start               = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_decl_start when there is only one parameter.\nnl_func_decl_start_single       = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_start when there is only one parameter.\nnl_func_def_start_single        = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after '(' in a function declaration if '(' and ')'\n# are in different lines. If false, nl_func_decl_start is used instead.\nnl_func_decl_start_multi_line   = false    # true/false\n\n# Whether to add a newline after '(' in a function definition if '(' and ')'\n# are in different lines. If false, nl_func_def_start is used instead.\nnl_func_def_start_multi_line    = false    # true/false\n\n# Add or remove newline after each ',' in a function declaration.\nnl_func_decl_args               = add      # ignore/add/remove/force\n\n# Add or remove newline after each ',' in a function definition.\nnl_func_def_args                = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after each ',' in a function declaration if '('\n# and ')' are in different lines. If false, nl_func_decl_args is used instead.\nnl_func_decl_args_multi_line    = false    # true/false\n\n# Whether to add a newline after each ',' in a function definition if '('\n# and ')' are in different lines. If false, nl_func_def_args is used instead.\nnl_func_def_args_multi_line     = false    # true/false\n\n# Add or remove newline before the ')' in a function declaration.\nnl_func_decl_end                = ignore   # ignore/add/remove/force\n\n# Add or remove newline before the ')' in a function definition.\nnl_func_def_end                 = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_decl_end when there is only one parameter.\nnl_func_decl_end_single         = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_end when there is only one parameter.\nnl_func_def_end_single          = ignore   # ignore/add/remove/force\n\n# Whether to add a newline before ')' in a function declaration if '(' and ')'\n# are in different lines. If false, nl_func_decl_end is used instead.\nnl_func_decl_end_multi_line     = false    # true/false\n\n# Whether to add a newline before ')' in a function definition if '(' and ')'\n# are in different lines. If false, nl_func_def_end is used instead.\nnl_func_def_end_multi_line      = false    # true/false\n\n# Add or remove newline between '()' in a function declaration.\nnl_func_decl_empty              = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '()' in a function definition.\nnl_func_def_empty               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '()' in a function call.\nnl_func_call_empty              = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after '(' in a function call,\n# has preference over nl_func_call_start_multi_line.\nnl_func_call_start              = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after '(' in a function call if '(' and ')' are in\n# different lines.\nnl_func_call_start_multi_line   = false    # true/false\n\n# Whether to add a newline after each ',' in a function call if '(' and ')'\n# are in different lines.\nnl_func_call_args_multi_line    = false    # true/false\n\n# Whether to add a newline before ')' in a function call if '(' and ')' are in\n# different lines.\nnl_func_call_end_multi_line     = false    # true/false\n\n# (OC) Whether to put each Objective-C message parameter on a separate line.\n# See nl_oc_msg_leave_one_liner.\nnl_oc_msg_args                  = false    # true/false\n\n# Add or remove newline between function signature and '{'.\nnl_fdef_brace                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between function signature and '{',\n# if signature ends with ')'. Overrides nl_fdef_brace.\nnl_fdef_brace_cond              = ignore   # ignore/add/remove/force\n\n# Add or remove newline between C++11 lambda signature and '{'.\nnl_cpp_ldef_brace               = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'return' and the return expression.\nnl_return_expr                  = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after semicolons, except in 'for' statements.\nnl_after_semicolon              = false    # true/false\n\n# (Java) Add or remove newline between the ')' and '{{' of the double brace\n# initializer.\nnl_paren_dbrace_open            = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after the type in an unnamed temporary\n# direct-list-initialization.\nnl_type_brace_init_lst          = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after the open brace in an unnamed temporary\n# direct-list-initialization.\nnl_type_brace_init_lst_open     = ignore   # ignore/add/remove/force\n\n# Whether to add a newline before the close brace in an unnamed temporary\n# direct-list-initialization.\nnl_type_brace_init_lst_close    = ignore   # ignore/add/remove/force\n\n# Whether to add a newline after '{'. This also adds a newline before the\n# matching '}'.\nnl_after_brace_open             = false    # true/false\n\n# Whether to add a newline between the open brace and a trailing single-line\n# comment. Requires nl_after_brace_open=true.\nnl_after_brace_open_cmt         = false    # true/false\n\n# Whether to add a newline after a virtual brace open with a non-empty body.\n# These occur in un-braced if/while/do/for statement bodies.\nnl_after_vbrace_open            = false    # true/false\n\n# Whether to add a newline after a virtual brace open with an empty body.\n# These occur in un-braced if/while/do/for statement bodies.\nnl_after_vbrace_open_empty      = false    # true/false\n\n# Whether to add a newline after '}'. Does not apply if followed by a\n# necessary ';'.\nnl_after_brace_close            = false    # true/false\n\n# Whether to add a newline after a virtual brace close,\n# as in 'if (foo) a++; <here> return;'.\nnl_after_vbrace_close           = false    # true/false\n\n# Add or remove newline between the close brace and identifier,\n# as in 'struct { int a; } <here> b;'. Affects enumerations, unions and\n# structures. If set to ignore, uses nl_after_brace_close.\nnl_brace_struct_var             = ignore   # ignore/add/remove/force\n\n# Whether to alter newlines in '#define' macros.\nnl_define_macro                 = true     # true/false\n\n# Whether to alter newlines between consecutive parenthesis closes. The number\n# of closing parentheses in a line will depend on respective open parenthesis\n# lines.\nnl_squeeze_paren_close          = false    # true/false\n\n# Whether to remove blanks after '#ifxx' and '#elxx', or before '#elxx' and\n# '#endif'. Does not affect top-level #ifdefs.\nnl_squeeze_ifdef                = false    # true/false\n\n# Makes the nl_squeeze_ifdef option affect the top-level #ifdefs as well.\nnl_squeeze_ifdef_top_level      = false    # true/false\n\n# Add or remove blank line before 'if'.\nnl_before_if                    = add      # ignore/add/remove/force\n\n# Add or remove blank line after 'if' statement. Add/Force work only if the\n# next token is not a closing brace.\nnl_after_if                     = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'for'.\nnl_before_for                   = add      # ignore/add/remove/force\n\n# Add or remove blank line after 'for' statement.\nnl_after_for                    = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'while'.\nnl_before_while                 = add      # ignore/add/remove/force\n\n# Add or remove blank line after 'while' statement.\nnl_after_while                  = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'switch'.\nnl_before_switch                = add      # ignore/add/remove/force\n\n# Add or remove blank line after 'switch' statement.\nnl_after_switch                 = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'synchronized'.\nnl_before_synchronized          = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'synchronized' statement.\nnl_after_synchronized           = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'do'.\nnl_before_do                    = add      # ignore/add/remove/force\n\n# Add or remove blank line after 'do/while' statement.\nnl_after_do                     = ignore   # ignore/add/remove/force\n\n# Whether to put a blank line before 'return' statements, unless after an open\n# brace.\nnl_before_return                = false    # true/false\n\n# Whether to put a blank line after 'return' statements, unless followed by a\n# close brace.\nnl_after_return                 = false    # true/false\n\n# Whether to double-space commented-entries in 'struct'/'union'/'enum'.\nnl_ds_struct_enum_cmt           = true     # true/false\n\n# Whether to force a newline before '}' of a 'struct'/'union'/'enum'.\n# (Lower priority than eat_blanks_before_close_brace.)\nnl_ds_struct_enum_close_brace   = true     # true/false\n\n# Add or remove newline before or after (depending on pos_class_colon) a class\n# colon, as in 'class Foo <here> : <or here> public Bar'.\nnl_class_colon                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline around a class constructor colon. The exact position\n# depends on nl_constr_init_args, pos_constr_colon and pos_constr_comma.\nnl_constr_colon                 = ignore   # ignore/add/remove/force\n\n# Whether to collapse a two-line namespace, like 'namespace foo\\n{ decl; }'\n# into a single line. If true, prevents other brace newline rules from turning\n# such code into four lines.\nnl_namespace_two_to_one_liner   = false    # true/false\n\n# Whether to remove a newline in simple unbraced if statements, turning them\n# into one-liners, as in 'if(b)\\n i++;' => 'if(b) i++;'.\nnl_create_if_one_liner          = true     # true/false\n\n# Whether to remove a newline in simple unbraced for statements, turning them\n# into one-liners, as in 'for (...)\\n stmt;' => 'for (...) stmt;'.\nnl_create_for_one_liner         = true     # true/false\n\n# Whether to remove a newline in simple unbraced while statements, turning\n# them into one-liners, as in 'while (expr)\\n stmt;' => 'while (expr) stmt;'.\nnl_create_while_one_liner       = true     # true/false\n\n# Whether to collapse a function definition whose body (not counting braces)\n# is only one line so that the entire definition (prototype, braces, body) is\n# a single line.\nnl_create_func_def_one_liner    = false    # true/false\n\n# Whether to split one-line simple unbraced if statements into two lines by\n# adding a newline, as in 'if(b) <here> i++;'.\nnl_split_if_one_liner           = false    # true/false\n\n# Whether to split one-line simple unbraced for statements into two lines by\n# adding a newline, as in 'for (...) <here> stmt;'.\nnl_split_for_one_liner          = false    # true/false\n\n# Whether to split one-line simple unbraced while statements into two lines by\n# adding a newline, as in 'while (expr) <here> stmt;'.\nnl_split_while_one_liner        = false    # true/false\n\n#\n# Blank line options\n#\n\n# The maximum number of consecutive newlines (3 = 2 blank lines).\nnl_max                          = 3        # unsigned number\n\n# The maximum number of consecutive newlines in a function.\nnl_max_blank_in_func            = 0        # unsigned number\n\n# The number of newlines before a function prototype.\nnl_before_func_body_proto       = 0        # unsigned number\n\n# The number of newlines before a multi-line function definition.\nnl_before_func_body_def         = 0        # unsigned number\n\n# The number of newlines before a class constructor/destructor prototype.\nnl_before_func_class_proto      = 0        # unsigned number\n\n# The number of newlines before a class constructor/destructor definition.\nnl_before_func_class_def        = 0        # unsigned number\n\n# The number of newlines after a function prototype.\nnl_after_func_proto             = 0        # unsigned number\n\n# The number of newlines after a function prototype, if not followed by\n# another function prototype.\nnl_after_func_proto_group       = 0        # unsigned number\n\n# The number of newlines after a class constructor/destructor prototype.\nnl_after_func_class_proto       = 0        # unsigned number\n\n# The number of newlines after a class constructor/destructor prototype,\n# if not followed by another constructor/destructor prototype.\nnl_after_func_class_proto_group = 0        # unsigned number\n\n# Whether one-line method definitions inside a class body should be treated\n# as if they were prototypes for the purposes of adding newlines.\n#\n# Requires nl_class_leave_one_liners=true. Overrides nl_before_func_body_def\n# and nl_before_func_class_def for one-liners.\nnl_class_leave_one_liner_groups = false    # true/false\n\n# The number of newlines after '}' of a multi-line function body.\nnl_after_func_body              = 2        # unsigned number\n\n# The number of newlines after '}' of a multi-line function body in a class\n# declaration. Also affects class constructors/destructors.\n#\n# Overrides nl_after_func_body.\nnl_after_func_body_class        = 0        # unsigned number\n\n# The number of newlines after '}' of a single line function body. Also\n# affects class constructors/destructors.\n#\n# Overrides nl_after_func_body and nl_after_func_body_class.\nnl_after_func_body_one_liner    = 2        # unsigned number\n\n# The number of blank lines after a block of variable definitions at the top\n# of a function body.\n#\n# 0 = No change (default).\nnl_var_def_blk_end_func_top             = 1        # unsigned number\n\n# The number of newlines before a block of typedefs. If nl_after_access_spec\n# is non-zero, that option takes precedence.\n#\n# 0 = No change (default).\nnl_typedef_blk_start            = 0        # unsigned number\n\n# The number of newlines after a block of typedefs.\n#\n# 0 = No change (default).\nnl_typedef_blk_end              = 0        # unsigned number\n\n# The maximum number of consecutive newlines within a block of typedefs.\n#\n# 0 = No change (default).\nnl_typedef_blk_in               = 0        # unsigned number\n\n# The number of newlines before a block of variable definitions not at the top\n# of a function body. If nl_after_access_spec is non-zero, that option takes\n# precedence.\n#\n# 0 = No change (default).\nnl_var_def_blk_start            = 0        # unsigned number\n\n# The number of newlines after a block of variable definitions not at the top\n# of a function body.\n#\n# 0 = No change (default).\nnl_var_def_blk_end              = 0        # unsigned number\n\n# The maximum number of consecutive newlines within a block of variable\n# definitions.\n#\n# 0 = No change (default).\nnl_var_def_blk_in               = 0        # unsigned number\n\n# The minimum number of newlines before a multi-line comment.\n# Doesn't apply if after a brace open or another multi-line comment.\nnl_before_block_comment         = 2        # unsigned number\n\n# The minimum number of newlines before a single-line C comment.\n# Doesn't apply if after a brace open or other single-line C comments.\nnl_before_c_comment             = 2        # unsigned number\n\n# The minimum number of newlines before a CPP comment.\n# Doesn't apply if after a brace open or other CPP comments.\nnl_before_cpp_comment           = 2        # unsigned number\n\n# Whether to force a newline after a multi-line comment.\nnl_after_multiline_comment      = true     # true/false\n\n# Whether to force a newline after a label's colon.\nnl_after_label_colon            = false    # true/false\n\n# The number of newlines after '}' or ';' of a struct/enum/union definition.\nnl_after_struct                 = 0        # unsigned number\n\n# The number of newlines before a class definition.\nnl_before_class                 = 0        # unsigned number\n\n# The number of newlines after '}' or ';' of a class definition.\nnl_after_class                  = 0        # unsigned number\n\n# The number of newlines before an access specifier label. This also includes\n# the Qt-specific 'signals:' and 'slots:'. Will not change the newline count\n# if after a brace open.\n#\n# 0 = No change (default).\nnl_before_access_spec           = 2        # unsigned number\n\n# The number of newlines after an access specifier label. This also includes\n# the Qt-specific 'signals:' and 'slots:'. Will not change the newline count\n# if after a brace open.\n#\n# 0 = No change (default).\n#\n# Overrides nl_typedef_blk_start and nl_var_def_blk_start.\nnl_after_access_spec            = 2        # unsigned number\n\n# The number of newlines between a function definition and the function\n# comment, as in '// comment\\n <here> void foo() {...}'.\n#\n# 0 = No change (default).\nnl_comment_func_def             = 1        # unsigned number\n\n# The number of newlines after a try-catch-finally block that isn't followed\n# by a brace close.\n#\n# 0 = No change (default).\nnl_after_try_catch_finally      = 1        # unsigned number\n\n# (C#) The number of newlines before and after a property, indexer or event\n# declaration.\n#\n# 0 = No change (default).\nnl_around_cs_property           = 0        # unsigned number\n\n# (C#) The number of newlines between the get/set/add/remove handlers.\n#\n# 0 = No change (default).\nnl_between_get_set              = 0        # unsigned number\n\n# (C#) Add or remove newline between property and the '{'.\nnl_property_brace               = ignore   # ignore/add/remove/force\n\n# The number of newlines after '{' of a namespace. This also adds newlines\n# before the matching '}'.\n#\n# 0 = Apply eat_blanks_after_open_brace or eat_blanks_before_close_brace if\n#     applicable, otherwise no change.\n#\n# Overrides eat_blanks_after_open_brace and eat_blanks_before_close_brace.\nnl_inside_namespace             = 0        # unsigned number\n\n# Whether to remove blank lines after '{'.\neat_blanks_after_open_brace     = true     # true/false\n\n# Whether to remove blank lines before '}'.\neat_blanks_before_close_brace   = true     # true/false\n\n# How aggressively to remove extra newlines not in preprocessor.\n#\n# 0: No change (default)\n# 1: Remove most newlines not handled by other config\n# 2: Remove all newlines and reformat completely by config\nnl_remove_extra_newlines        = 0        # unsigned number\n\n# (Java) Add or remove newline after an annotation statement. Only affects\n# annotations that are after a newline.\nnl_after_annotation             = ignore   # ignore/add/remove/force\n\n# (Java) Add or remove newline between two annotations.\nnl_between_annotation           = ignore   # ignore/add/remove/force\n\n#\n# Positioning options\n#\n\n# The position of arithmetic operators in wrapped expressions.\npos_arith                       = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of assignment in wrapped expressions. Do not affect '='\n# followed by '{'.\npos_assign                      = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of Boolean operators in wrapped expressions.\npos_bool                        = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of comparison operators in wrapped expressions.\npos_compare                     = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of conditional operators, as in the '?' and ':' of\n# 'expr ? stmt : stmt', in wrapped expressions.\npos_conditional                 = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of the comma in wrapped expressions.\npos_comma                       = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of the comma in enum entries.\npos_enum_comma                  = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of the comma in the base class list if there is more than one\n# line. Affects nl_class_init_args.\npos_class_comma                 = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of the comma in the constructor initialization list.\n# Related to nl_constr_colon, nl_constr_init_args and pos_constr_colon.\npos_constr_comma                = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of trailing/leading class colon, between class and base class\n# list. Affects nl_class_colon.\npos_class_colon                 = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n# The position of colons between constructor and member initialization.\n# Related to nl_constr_colon, nl_constr_init_args and pos_constr_comma.\npos_constr_colon                = ignore   # ignore/break/force/lead/trail/join/lead_break/lead_force/trail_break/trail_force\n\n#\n# Line splitting options\n#\n\n# Try to limit code width to N columns.\ncode_width                      = 142      # unsigned number\n\n# Whether to fully split long 'for' statements at semi-colons.\nls_for_split_full               = false    # true/false\n\n# Whether to fully split long function prototypes/calls at commas.\n# The option ls_code_width has priority over the option ls_func_split_full.\nls_func_split_full              = true     # true/false\n\n# Whether to split lines as close to code_width as possible and ignore some\n# groupings.\n# The option ls_code_width has priority over the option ls_func_split_full.\nls_code_width                   = false    # true/false\n\n#\n# Code alignment options (not left column spaces/tabs)\n#\n\n# Whether to keep non-indenting tabs.\nalign_keep_tabs                 = false    # true/false\n\n# Whether to use tabs for aligning.\nalign_with_tabs                 = false    # true/false\n\n# Whether to bump out to the next tab when aligning.\nalign_on_tabstop                = false    # true/false\n\n# Whether to right-align numbers.\nalign_number_right              = false    # true/false\n\n# Whether to keep whitespace not required for alignment.\nalign_keep_extra_space          = false    # true/false\n\n# Whether to align variable definitions in prototypes and functions.\nalign_func_params               = true     # true/false\n\n# The span for aligning parameter definitions in function on parameter name.\n#\n# 0 = Don't align (default).\nalign_func_params_span          = 0        # unsigned number\n\n# The threshold for aligning function parameter definitions.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_func_params_thresh        = 0        # number\n\n# The gap for aligning function parameter definitions.\nalign_func_params_gap           = 0        # unsigned number\n\n# The span for aligning constructor value.\n#\n# 0 = Don't align (default).\nalign_constr_value_span         = 0        # unsigned number\n\n# The threshold for aligning constructor value.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_constr_value_thresh       = 0        # number\n\n# The gap for aligning constructor value.\nalign_constr_value_gap          = 0        # unsigned number\n\n# Whether to align parameters in single-line functions that have the same\n# name. The function names must already be aligned with each other.\nalign_same_func_call_params     = true     # true/false\n\n# The span for aligning function-call parameters for single line functions.\n#\n# 0 = Don't align (default).\nalign_same_func_call_params_span = 0        # unsigned number\n\n# The threshold for aligning function-call parameters for single line\n# functions.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_same_func_call_params_thresh = 0        # number\n\n# The span for aligning variable definitions.\n#\n# 0 = Don't align (default).\nalign_var_def_span              = 1        # unsigned number\n\n# How to consider (or treat) the '*' in the alignment of variable definitions.\n#\n# 0: Part of the type     'void *   foo;' (default)\n# 1: Part of the variable 'void     *foo;'\n# 2: Dangling             'void    *foo;'\n# Dangling: the '*' will not be taken into account when aligning.\nalign_var_def_star_style        = 2        # unsigned number\n\n# How to consider (or treat) the '&' in the alignment of variable definitions.\n#\n# 0: Part of the type     'long &   foo;' (default)\n# 1: Part of the variable 'long     &foo;'\n# 2: Dangling             'long    &foo;'\n# Dangling: the '&' will not be taken into account when aligning.\nalign_var_def_amp_style         = 2        # unsigned number\n\n# The threshold for aligning variable definitions.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_var_def_thresh            = 3        # number\n\n# The gap for aligning variable definitions.\nalign_var_def_gap               = 1        # unsigned number\n\n# Whether to align the colon in struct bit fields.\nalign_var_def_colon             = true     # true/false\n\n# The gap for aligning the colon in struct bit fields.\nalign_var_def_colon_gap         = 0        # unsigned number\n\n# Whether to align any attribute after the variable name.\nalign_var_def_attribute         = true     # true/false\n\n# Whether to align inline struct/enum/union variable definitions.\nalign_var_def_inline            = true     # true/false\n\n# The span for aligning on '=' in assignments.\n#\n# 0 = Don't align (default).\nalign_assign_span               = 1        # unsigned number\n\n# The span for aligning on '=' in function prototype modifier.\n#\n# 0 = Don't align (default).\nalign_assign_func_proto_span    = 0        # unsigned number\n\n# The threshold for aligning on '=' in assignments.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_assign_thresh             = 0        # number\n\n# How to apply align_assign_span to function declaration \"assignments\", i.e.\n# 'virtual void foo() = 0' or '~foo() = {default|delete}'.\n#\n# 0: Align with other assignments (default)\n# 1: Align with each other, ignoring regular assignments\n# 2: Don't align\nalign_assign_decl_func          = 0        # unsigned number\n\n# The span for aligning on '=' in enums.\n#\n# 0 = Don't align (default).\nalign_enum_equ_span             = 1        # unsigned number\n\n# The threshold for aligning on '=' in enums.\n# Use a negative number for absolute thresholds.\n#\n# 0 = no limit (default).\nalign_enum_equ_thresh           = 0        # number\n\n# The span for aligning class member definitions.\n#\n# 0 = Don't align (default).\nalign_var_class_span            = 0        # unsigned number\n\n# The threshold for aligning class member definitions.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_var_class_thresh          = 0        # number\n\n# The gap for aligning class member definitions.\nalign_var_class_gap             = 0        # unsigned number\n\n# The span for aligning struct/union member definitions.\n#\n# 0 = Don't align (default).\nalign_var_struct_span           = 1        # unsigned number\n\n# The threshold for aligning struct/union member definitions.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_var_struct_thresh         = 0        # number\n\n# The gap for aligning struct/union member definitions.\nalign_var_struct_gap            = 0        # unsigned number\n\n# The span for aligning struct initializer values.\n#\n# 0 = Don't align (default).\nalign_struct_init_span          = 1        # unsigned number\n\n# The span for aligning single-line typedefs.\n#\n# 0 = Don't align (default).\nalign_typedef_span              = 1        # unsigned number\n\n# The minimum space between the type and the synonym of a typedef.\nalign_typedef_gap               = 0        # unsigned number\n\n# How to align typedef'd functions with other typedefs.\n#\n# 0: Don't mix them at all (default)\n# 1: Align the open parenthesis with the types\n# 2: Align the function type name with the other type names\nalign_typedef_func              = 0        # unsigned number\n\n# How to consider (or treat) the '*' in the alignment of typedefs.\n#\n# 0: Part of the typedef type, 'typedef int * pint;' (default)\n# 1: Part of type name:        'typedef int   *pint;'\n# 2: Dangling:                 'typedef int  *pint;'\n# Dangling: the '*' will not be taken into account when aligning.\nalign_typedef_star_style        = 2        # unsigned number\n\n# How to consider (or treat) the '&' in the alignment of typedefs.\n#\n# 0: Part of the typedef type, 'typedef int & intref;' (default)\n# 1: Part of type name:        'typedef int   &intref;'\n# 2: Dangling:                 'typedef int  &intref;'\n# Dangling: the '&' will not be taken into account when aligning.\nalign_typedef_amp_style         = 2        # unsigned number\n\n# The span for aligning comments that end lines.\n#\n# 0 = Don't align (default).\nalign_right_cmt_span            = 4        # unsigned number\n\n# Minimum number of columns between preceding text and a trailing comment in\n# order for the comment to qualify for being aligned. Must be non-zero to have\n# an effect.\nalign_right_cmt_gap             = 0        # unsigned number\n\n# If aligning comments, whether to mix with comments after '}' and #endif with\n# less than three spaces before the comment.\nalign_right_cmt_mix             = false    # true/false\n\n# Whether to only align trailing comments that are at the same brace level.\nalign_right_cmt_same_level      = false    # true/false\n\n# Minimum column at which to align trailing comments. Comments which are\n# aligned beyond this column, but which can be aligned in a lesser column,\n# may be \"pulled in\".\n#\n# 0 = Ignore (default).\nalign_right_cmt_at_col          = 1        # unsigned number\n\n# The span for aligning function prototypes.\n#\n# 0 = Don't align (default).\nalign_func_proto_span           = 3        # unsigned number\n\n# The threshold for aligning function prototypes.\n# Use a negative number for absolute thresholds.\n#\n# 0 = No limit (default).\nalign_func_proto_thresh         = 0        # number\n\n# Minimum gap between the return type and the function name.\nalign_func_proto_gap            = 0        # unsigned number\n\n# Whether to align function prototypes on the 'operator' keyword instead of\n# what follows.\nalign_on_operator               = true     # true/false\n\n# Whether to mix aligning prototype and variable declarations. If true,\n# align_var_def_XXX options are used instead of align_func_proto_XXX options.\nalign_mix_var_proto             = false    # true/false\n\n# Whether to align single-line functions with function prototypes.\n# Uses align_func_proto_span.\nalign_single_line_func          = true     # true/false\n\n# Whether to align the open brace of single-line functions.\n# Requires align_single_line_func=true. Uses align_func_proto_span.\nalign_single_line_brace         = true     # true/false\n\n# Gap for align_single_line_brace.\nalign_single_line_brace_gap     = 0        # unsigned number\n\n# (OC) The span for aligning Objective-C message specifications.\n#\n# 0 = Don't align (default).\nalign_oc_msg_spec_span          = 0        # unsigned number\n\n# Whether to align macros wrapped with a backslash and a newline. This will\n# not work right if the macro contains a multi-line comment.\nalign_nl_cont                   = 1     # true/false\n\n# Whether to align macro functions and variables together.\nalign_pp_define_together        = false    # true/false\n\n# The span for aligning on '#define' bodies.\n#\n# =0: Don't align (default)\n# >0: Number of lines (including comments) between blocks\nalign_pp_define_span            = 0        # unsigned number\n\n# The minimum space between label and value of a preprocessor define.\nalign_pp_define_gap             = 0        # unsigned number\n\n# Whether to align lines that start with '<<' with previous '<<'.\n#\n# Default: true\nalign_left_shift                = true     # true/false\n\n# Whether to align text after 'asm volatile ()' colons.\nalign_asm_colon                 = false    # true/false\n\n# (OC) Span for aligning parameters in an Objective-C message call\n# on the ':'.\n#\n# 0 = Don't align.\nalign_oc_msg_colon_span         = 0        # unsigned number\n\n# (OC) Whether to always align with the first parameter, even if it is too\n# short.\nalign_oc_msg_colon_first        = false    # true/false\n\n# (OC) Whether to align parameters in an Objective-C '+' or '-' declaration\n# on the ':'.\nalign_oc_decl_colon             = false    # true/false\n\n#\n# Comment modification options\n#\n\n# Try to wrap comments at N columns.\ncmt_width                       = 140      # unsigned number\n\n# How to reflow comments.\n#\n# 0: No reflowing (apart from the line wrapping due to cmt_width) (default)\n# 1: No touching at all\n# 2: Full reflow\ncmt_reflow_mode                 = 0        # unsigned number\n\n# Whether to convert all tabs to spaces in comments. If false, tabs in\n# comments are left alone, unless used for indenting.\ncmt_convert_tab_to_spaces       = false    # true/false\n\n# Whether to apply changes to multi-line comments, including cmt_width,\n# keyword substitution and leading chars.\n#\n# Default: true\ncmt_indent_multi                = true     # true/false\n\n# Whether to group c-comments that look like they are in a block.\ncmt_c_group                     = false    # true/false\n\n# Whether to put an empty '/*' on the first line of the combined c-comment.\ncmt_c_nl_start                  = false    # true/false\n\n# Whether to add a newline before the closing '*/' of the combined c-comment.\ncmt_c_nl_end                    = false    # true/false\n\n# Whether to change cpp-comments into c-comments.\ncmt_cpp_to_c                    = false    # true/false\n\n# Whether to group cpp-comments that look like they are in a block. Only\n# meaningful if cmt_cpp_to_c=true.\ncmt_cpp_group                   = false    # true/false\n\n# Whether to put an empty '/*' on the first line of the combined cpp-comment\n# when converting to a c-comment.\n#\n# Requires cmt_cpp_to_c=true and cmt_cpp_group=true.\ncmt_cpp_nl_start                = false    # true/false\n\n# Whether to add a newline before the closing '*/' of the combined cpp-comment\n# when converting to a c-comment.\n#\n# Requires cmt_cpp_to_c=true and cmt_cpp_group=true.\ncmt_cpp_nl_end                  = false    # true/false\n\n# Whether to put a star on subsequent comment lines.\ncmt_star_cont                   = false    # true/false\n\n# The number of spaces to insert at the start of subsequent comment lines.\ncmt_sp_before_star_cont         = 0        # unsigned number\n\n# The number of spaces to insert after the star on subsequent comment lines.\ncmt_sp_after_star_cont          = 0        # unsigned number\n\n# For multi-line comments with a '*' lead, remove leading spaces if the first\n# and last lines of the comment are the same length.\n#\n# Default: true\ncmt_multi_check_last            = true     # true/false\n\n# For multi-line comments with a '*' lead, remove leading spaces if the first\n# and last lines of the comment are the same length AND if the length is\n# bigger as the first_len minimum.\n#\n# Default: 4\ncmt_multi_first_len_minimum     = 4        # unsigned number\n\n# Path to a file that contains text to insert at the beginning of a file if\n# the file doesn't start with a C/C++ comment. If the inserted text contains\n# '$(filename)', that will be replaced with the current file's name.\ncmt_insert_file_header          = \"\"         # string\n\n# Path to a file that contains text to insert at the end of a file if the\n# file doesn't end with a C/C++ comment. If the inserted text contains\n# '$(filename)', that will be replaced with the current file's name.\ncmt_insert_file_footer          = \"\"         # string\n\n# Path to a file that contains text to insert before a function definition if\n# the function isn't preceded by a C/C++ comment. If the inserted text\n# contains '$(function)', '$(javaparam)' or '$(fclass)', these will be\n# replaced with, respectively, the name of the function, the javadoc '@param'\n# and '@return' stuff, or the name of the class to which the member function\n# belongs.\ncmt_insert_func_header          = \"\"         # string\n\n# Path to a file that contains text to insert before a class if the class\n# isn't preceded by a C/C++ comment. If the inserted text contains '$(class)',\n# that will be replaced with the class name.\ncmt_insert_class_header         = \"\"         # string\n\n# Path to a file that contains text to insert before an Objective-C message\n# specification, if the method isn't preceded by a C/C++ comment. If the\n# inserted text contains '$(message)' or '$(javaparam)', these will be\n# replaced with, respectively, the name of the function, or the javadoc\n# '@param' and '@return' stuff.\ncmt_insert_oc_msg_header        = \"\"         # string\n\n# Whether a comment should be inserted if a preprocessor is encountered when\n# stepping backwards from a function name.\n#\n# Applies to cmt_insert_oc_msg_header, cmt_insert_func_header and\n# cmt_insert_class_header.\ncmt_insert_before_preproc       = false    # true/false\n\n# Whether a comment should be inserted if a function is declared inline to a\n# class definition.\n#\n# Applies to cmt_insert_func_header.\n#\n# Default: true\ncmt_insert_before_inlines       = true     # true/false\n\n# Whether a comment should be inserted if the function is a class constructor\n# or destructor.\n#\n# Applies to cmt_insert_func_header.\ncmt_insert_before_ctor_dtor     = false    # true/false\n\n#\n# Code modifying options (non-whitespace)\n#\n\n# Add or remove braces on a single-line 'do' statement.\nmod_full_brace_do               = add      # ignore/add/remove/force\n\n# Add or remove braces on a single-line 'for' statement.\nmod_full_brace_for              = add      # ignore/add/remove/force\n\n# (Pawn) Add or remove braces on a single-line function definition.\nmod_full_brace_function         = ignore   # ignore/add/remove/force\n\n# Add or remove braces on a single-line 'if' statement. Braces will not be\n# removed if the braced statement contains an 'else'.\nmod_full_brace_if               = add      # ignore/add/remove/force\n\n# Whether to enforce that all blocks of an 'if'/'else if'/'else' chain either\n# have, or do not have, braces. If true, braces will be added if any block\n# needs braces, and will only be removed if they can be removed from all\n# blocks.\n#\n# Overrides mod_full_brace_if.\nmod_full_brace_if_chain         = 0    # true/false\n\n# Whether to add braces to all blocks of an 'if'/'else if'/'else' chain.\n# If true, mod_full_brace_if_chain will only remove braces from an 'if' that\n# does not have an 'else if' or 'else'.\nmod_full_brace_if_chain_only    = false    # true/false\n\n# Add or remove braces on single-line 'while' statement.\nmod_full_brace_while            = add      # ignore/add/remove/force\n\n# Add or remove braces on single-line 'using ()' statement.\nmod_full_brace_using            = ignore   # ignore/add/remove/force\n\n# Don't remove braces around statements that span N newlines\nmod_full_brace_nl               = 1        # unsigned number\n\n# Whether to prevent removal of braces from 'if'/'for'/'while'/etc. blocks\n# which span multiple lines.\n#\n# Affects:\n#   mod_full_brace_for\n#   mod_full_brace_if\n#   mod_full_brace_if_chain\n#   mod_full_brace_if_chain_only\n#   mod_full_brace_while\n#   mod_full_brace_using\n#\n# Does not affect:\n#   mod_full_brace_do\n#   mod_full_brace_function\nmod_full_brace_nl_block_rem_mlcond = false    # true/false\n\n# Add or remove unnecessary parenthesis on 'return' statement.\nmod_paren_on_return             = remove   # ignore/add/remove/force\n\n# (Pawn) Whether to change optional semicolons to real semicolons.\nmod_pawn_semicolon              = false    # true/false\n\n# Whether to fully parenthesize Boolean expressions in 'while' and 'if'\n# statement, as in 'if (a && b > c)' => 'if (a && (b > c))'.\nmod_full_paren_if_bool          = true     # true/false\n\n# Whether to remove superfluous semicolons.\nmod_remove_extra_semicolon      = true     # true/false\n\n# If a function body exceeds the specified number of newlines and doesn't have\n# a comment after the close brace, a comment will be added.\nmod_add_long_function_closebrace_comment = 0        # unsigned number\n\n# If a namespace body exceeds the specified number of newlines and doesn't\n# have a comment after the close brace, a comment will be added.\nmod_add_long_namespace_closebrace_comment = 0        # unsigned number\n\n# If a class body exceeds the specified number of newlines and doesn't have a\n# comment after the close brace, a comment will be added.\nmod_add_long_class_closebrace_comment = 0        # unsigned number\n\n# If a switch body exceeds the specified number of newlines and doesn't have a\n# comment after the close brace, a comment will be added.\nmod_add_long_switch_closebrace_comment = 0        # unsigned number\n\n# If an #ifdef body exceeds the specified number of newlines and doesn't have\n# a comment after the #endif, a comment will be added.\nmod_add_long_ifdef_endif_comment = 1        # unsigned number\n\n# If an #ifdef or #else body exceeds the specified number of newlines and\n# doesn't have a comment after the #else, a comment will be added.\nmod_add_long_ifdef_else_comment = 1        # unsigned number\n\n# Whether to sort consecutive single-line 'import' statements.\nmod_sort_import                 = false    # true/false\n\n# (C#) Whether to sort consecutive single-line 'using' statements.\nmod_sort_using                  = false    # true/false\n\n# Whether to sort consecutive single-line '#include' statements (C/C++) and\n# '#import' statements (Objective-C). Be aware that this has the potential to\n# break your code if your includes/imports have ordering dependencies.\nmod_sort_include                = false    # true/false\n\n# Whether to move a 'break' that appears after a fully braced 'case' before\n# the close brace, as in 'case X: { ... } break;' => 'case X: { ... break; }'.\nmod_move_case_break             = true     # true/false\n\n# Add or remove braces around a fully braced case statement. Will only remove\n# braces if there are no variable declarations in the block.\nmod_case_brace                  = ignore   # ignore/add/remove/force\n\n# Whether to remove a void 'return;' that appears as the last statement in a\n# function.\nmod_remove_empty_return         = true     # true/false\n\n# Add or remove the comma after the last value of an enumeration.\nmod_enum_last_comma             = ignore   # ignore/add/remove/force\n\n# (OC) Whether to organize the properties. If true, properties will be\n# rearranged according to the mod_sort_oc_property_*_weight factors.\nmod_sort_oc_properties          = false    # true/false\n\n# (OC) Weight of a class property modifier.\nmod_sort_oc_property_class_weight = 0        # number\n\n# (OC) Weight of 'atomic' and 'nonatomic'.\nmod_sort_oc_property_thread_safe_weight = 0        # number\n\n# (OC) Weight of 'readwrite' when organizing properties.\nmod_sort_oc_property_readwrite_weight = 0        # number\n\n# (OC) Weight of a reference type specifier ('retain', 'copy', 'assign',\n# 'weak', 'strong') when organizing properties.\nmod_sort_oc_property_reference_weight = 0        # number\n\n# (OC) Weight of getter type ('getter=') when organizing properties.\nmod_sort_oc_property_getter_weight = 0        # number\n\n# (OC) Weight of setter type ('setter=') when organizing properties.\nmod_sort_oc_property_setter_weight = 0        # number\n\n# (OC) Weight of nullability type ('nullable', 'nonnull', 'null_unspecified',\n# 'null_resettable') when organizing properties.\nmod_sort_oc_property_nullability_weight = 0        # number\n\n#\n# Preprocessor options\n#\n\n# Add or remove indentation of preprocessor directives inside #if blocks\n# at brace level 0 (file-level).\npp_indent                       = ignore   # ignore/add/remove/force\n\n# Whether to indent #if/#else/#endif at the brace level. If false, these are\n# indented from column 1.\npp_indent_at_level              = false    # true/false\n\n# Specifies the number of columns to indent preprocessors per level\n# at brace level 0 (file-level). If pp_indent_at_level=false, also specifies\n# the number of columns to indent preprocessors per level\n# at brace level > 0 (function-level).\n#\n# Default: 1\npp_indent_count                 = 1        # unsigned number\n\n# Add or remove space after # based on pp_level of #if blocks.\npp_space_after                        = add      # ignore/add/remove/force\n\n# Sets the number of spaces per level added with pp_space.\npp_space_count                  = 0        # unsigned number\n\n# The indent for '#region' and '#endregion' in C# and '#pragma region' in\n# C/C++. Negative values decrease indent down to the first column.\npp_indent_region                = 0        # number\n\n# Whether to indent the code between #region and #endregion.\npp_region_indent_code           = false    # true/false\n\n# If pp_indent_at_level=true, sets the indent for #if, #else and #endif when\n# not at file-level. Negative values decrease indent down to the first column.\n#\n# =0: Indent preprocessors using output_tab_size\n# >0: Column at which all preprocessors will be indented\npp_indent_if                    = 0        # number\n\n# Whether to indent the code between #if, #else and #endif.\npp_if_indent_code               = false    # true/false\n\n# Whether to indent '#define' at the brace level. If false, these are\n# indented from column 1.\npp_define_at_level              = false    # true/false\n\n# Whether to ignore the '#define' body while formatting.\npp_ignore_define_body           = false    # true/false\n\n# Whether to indent case statements between #if, #else, and #endif.\n# Only applies to the indent of the preprocesser that the case statements\n# directly inside of.\n#\n# Default: true\npp_indent_case                  = true     # true/false\n\n# Whether to indent whole function definitions between #if, #else, and #endif.\n# Only applies to the indent of the preprocesser that the function definition\n# is directly inside of.\n#\n# Default: true\npp_indent_func_def              = true     # true/false\n\n# Whether to indent extern C blocks between #if, #else, and #endif.\n# Only applies to the indent of the preprocesser that the extern block is\n# directly inside of.\n#\n# Default: true\npp_indent_extern                = true     # true/false\n\n# Whether to indent braces directly inside #if, #else, and #endif.\n# Only applies to the indent of the preprocesser that the braces are directly\n# inside of.\n#\n# Default: true\npp_indent_brace                 = 1     # true/false\n\n# Sets the number of spaces per level added with pp_space_after.\npp_space_count                  = 1        # unsigned number\n\n#\n# Sort includes options\n#\n\n# The regex for include category with priority 0.\ninclude_category_0              = \"\"         # string\n\n# The regex for include category with priority 1.\ninclude_category_1              = \"\"         # string\n\n# The regex for include category with priority 2.\ninclude_category_2              = \"\"         # string\n\n#\n# Use or Do not Use options\n#\n\n# true:  indent_func_call_param will be used (default)\n# false: indent_func_call_param will NOT be used\n#\n# Default: true\nuse_indent_func_call_param      = true     # true/false\n\n# The value of the indentation for a continuation line is calculated\n# differently if the statement is:\n# - a declaration: your case with QString fileName ...\n# - an assignment: your case with pSettings = new QSettings( ...\n#\n# At the second case the indentation value might be used twice:\n# - at the assignment\n# - at the function call (if present)\n#\n# To prevent the double use of the indentation value, use this option with the\n# value 'true'.\n#\n# true:  indent_continue will be used only once\n# false: indent_continue will be used every time (default)\nuse_indent_continue_only_once   = false    # true/false\n\n# The value might be used twice:\n# - at the assignment\n# - at the opening brace\n#\n# To prevent the double use of the indentation value, use this option with the\n# value 'true'.\n#\n# true:  indentation will be used only once\n# false: indentation will be used every time (default)\nindent_cpp_lambda_only_once     = false    # true/false\n\n# Whether to apply special formatting for Qt SIGNAL/SLOT macros. Essentially,\n# this tries to format these so that they match Qt's normalized form (i.e. the\n# result of QMetaObject::normalizedSignature), which can slightly improve the\n# performance of the QObject::connect call, rather than how they would\n# otherwise be formatted.\n#\n# See options_for_QT.cpp for details.\n#\n# Default: true\nuse_options_overriding_for_qt_macros = true     # true/false\n\n#\n# Warn levels - 1: error, 2: warning (default), 3: note\n#\n\n# (C#) Warning is given if doing tab-to-\\t replacement and we have found one\n# in a C# verbatim string literal.\n#\n# Default: 2\nwarn_level_tabs_found_in_verbatim_string_literals = 2        # unsigned number\n\n# Meaning of the settings:\n#   Ignore - do not do any changes\n#   Add    - makes sure there is 1 or more space/brace/newline/etc\n#   Force  - makes sure there is exactly 1 space/brace/newline/etc,\n#            behaves like Add in some contexts\n#   Remove - removes space/brace/newline/etc\n#\n#\n# - Token(s) can be treated as specific type(s) with the 'set' option:\n#     `set tokenType tokenString [tokenString...]`\n#\n#     Example:\n#       `set BOOL __AND__ __OR__`\n#\n#     tokenTypes are defined in src/token_enum.h, use them without the\n#     'CT_' prefix: 'CT_BOOL' => 'BOOL'\n#\n#\n# - Token(s) can be treated as type(s) with the 'type' option.\n#     `type tokenString [tokenString...]`\n#\n#     Example:\n#       `type int c_uint_8 Rectangle`\n#\n#     This can also be achieved with `set TYPE int c_uint_8 Rectangle`\n#\n#\n# To embed whitespace in tokenStrings use the '\\' escape character, or quote\n# the tokenStrings. These quotes are supported: \"'`\n#\n#\n# - Support for the auto detection of languages through the file ending can be\n#   added using the 'file_ext' command.\n#     `file_ext langType langString [langString..]`\n#\n#     Example:\n#       `file_ext CPP .ch .cxx .cpp.in`\n#\n#     langTypes are defined in uncrusify_types.h in the lang_flag_e enum, use\n#     them without the 'LANG_' prefix: 'LANG_CPP' => 'CPP'\n#\n#\n# - Custom macro-based indentation can be set up using 'macro-open',\n#   'macro-else' and 'macro-close'.\n#     `(macro-open | macro-else | macro-close) tokenString`\n#\n#     Example:\n#       `macro-open  BEGIN_TEMPLATE_MESSAGE_MAP`\n#       `macro-open  BEGIN_MESSAGE_MAP`\n#       `macro-close END_MESSAGE_MAP`\n#\n#\n# option(s) with 'not default' value: 164\n#\n"
        }
      ]
    }
  ]
}