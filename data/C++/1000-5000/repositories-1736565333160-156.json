{
  "metadata": {
    "timestamp": 1736565333160,
    "page": 156,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "blynkkk/blynk-library",
      "stars": 3879,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.125,
          "content": "/extras export-ignore\n/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1826171875,
          "content": "linux/blynk\nlinux/wiringPi\nscripts/certs/client.*\nextras/ide-tools/BlynkUpdater/*\nextras/ide-tools/BlynkUsbScript/*\n*.orig\n*.log\n*.bak\n*.pyc\n*.o\n.cproject\n.project\n.settings\n.development\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 12.431640625,
          "content": "language: python\npython:\n    - \"3.8\"\n\n# Cache PlatformIO packages using Travis CI container-based infrastructure\n#sudo: false\ncache:\n    directories:\n        - \"~/.platformio\"\n\nenv:\n    - LINUX_SRC=linux\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Adafruit_Bluefruit_LE\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Adafruit_Feather_32u4_BLE PLATFORMIO_CI_EXTRA_ARGS=\"--board=feather32u4 --project-option='lib_deps=SoftwareSerial'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Arduino_101_BLE PLATFORMIO_CI_EXTRA_ARGS=\"--board=genuino101\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/BBC_MicroBit PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno --project-option='lib_deps=SPI'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/DFRobot_Bluno_BLE_Link PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Energia_BLE PLATFORMIO_CI_EXTRA_ARGS=\"--board=...\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/LightBlue_Bean PLATFORMIO_CI_EXTRA_ARGS=\"--board=lightblue-bean\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Microduino_BLE PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/RFDuino_BLE PLATFORMIO_CI_EXTRA_ARGS=\"--board=rfduino\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/RedBearLab_BLE_Mini PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/RedBearLab_BLE_Nano PLATFORMIO_CI_EXTRA_ARGS=\"--board=redBearLabBLENano --project-option='framework=arduino'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/RedBearLab_BlendMicro PLATFORMIO_CI_EXTRA_ARGS=\"--board=blendmicro8\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/RedBear_Duo_BLE\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Serial_HC05_HC06\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Serial_HM10_HC08 PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/Simblee_BLE\n    # - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/TheAirBoard_BLE_Link PLATFORMIO_CI_EXTRA_ARGS=\"--board=fio\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Bluetooth/nRF8001\n    - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/Arduino_Ethernet\n    # - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/Arduino_Ethernet2\n    - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/Arduino_Ethernet_Manual\n    - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/ENC28J60 PLATFORMIO_CI_EXTRA_ARGS=\"--board=nanoatmega328\"\n    - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/Energia_Ethernet PLATFORMIO_CI_EXTRA_ARGS=\"--board=lptm4c1294ncpdt\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/Intel_Galileo\n    # - PLATFORMIO_CI_SRC=examples/Boards_Ethernet/Seeed_EthernetV2_0\n    - PLATFORMIO_CI_SRC=examples/Boards_GSM/TinyGSM_SIM800_SIM900 PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/ATtiny85 PLATFORMIO_CI_EXTRA_ARGS=\"--board=attiny85\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Arduino_Serial_USB\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Arduino_SoftwareSerial\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Arduino_Zero_M0_Serial PLATFORMIO_CI_EXTRA_ARGS=\"--board=zero\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Blue_Pill_STM32F103C PLATFORMIO_CI_EXTRA_ARGS=\"--board=bluepill_f103c8 --project-option='framework=arduino'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Digistump_Digispark PLATFORMIO_CI_EXTRA_ARGS=\"--board=digispark-pro\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Energia_Serial_USB PLATFORMIO_CI_EXTRA_ARGS=\"--board=lplm4f120h5qr\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/Teensy3 PLATFORMIO_CI_EXTRA_ARGS=\"--board=teensy31\"\n    - PLATFORMIO_CI_SRC=examples/Boards_USB_Serial/chipKIT_Uno32 PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno_pic32\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Adafruit_Feather_M0_WiFi PLATFORMIO_CI_EXTRA_ARGS=\"--board=adafruit_feather_m0 --project-option='lib_deps=SPI, WiFi101'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Arduino_MKR1000 PLATFORMIO_CI_EXTRA_ARGS=\"--board=mkr1000USB --project-option='lib_deps=WiFi101'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Arduino_WiFi_Shield\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Arduino_WiFi_Shield_101 PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno --project-option='lib_deps=WiFi101'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Arduino_Yun PLATFORMIO_CI_EXTRA_ARGS=\"--board=yun\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Arduino_org_UNO_WiFi PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno --project-option='lib_deps=WiFi Link' --project-option='build_flags=-DESP_CH_SPI'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/CC3000 PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno --project-option='lib_deps=Adafruit CC3000 Library'\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Digistump_Oak\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/ESP32_WiFi PLATFORMIO_CI_EXTRA_ARGS=\"--board=esp32dev --project-option='framework=arduino'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/ESP8266_Shield PLATFORMIO_CI_EXTRA_ARGS=\"--board=megaatmega2560\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/ESP8266_Standalone PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/ESP8266_Standalone_Manual_IP PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/ESP8266_Standalone_SSL PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/ESP8266_Standalone_SmartConfig PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Energia_WiFi PLATFORMIO_CI_EXTRA_ARGS=\"--board=lpmsp430f5529\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Fishino\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Intel_Edison_WiFi\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/LinkItONE\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/NodeMCU PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/RN_XV_WiFly PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/RedBear_Duo_WiFi\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/Sparkfun_Blynk_Board PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/TheAirBoard_WiFly PLATFORMIO_CI_EXTRA_ARGS=\"--board=fio\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/TinyDuino_WiFi PLATFORMIO_CI_EXTRA_ARGS=\"--board=tinyduino --project-option='lib_deps=Adafruit CC3000 Library'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/WildFire_V3 PLATFORMIO_CI_EXTRA_ARGS=\"--board=wildfirev3 --project-option='lib_deps=WildFire-CC3000'\"\n    # - PLATFORMIO_CI_SRC=examples/Boards_WiFi/WildFire_V4\n    - PLATFORMIO_CI_SRC=examples/Boards_WiFi/WizFi310 PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno --project-option='lib_deps=WizFi310'\"\n    - PLATFORMIO_CI_SRC=examples/Boards_With_HTTP_API/Arduino_Ethernet\n    - PLATFORMIO_CI_SRC=examples/Boards_With_HTTP_API/Arduino_GSM\n    - PLATFORMIO_CI_SRC=examples/Boards_With_HTTP_API/ESP8266 PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/Boards_With_HTTP_API/SIM800_SIM900 PLATFORMIO_CI_EXTRA_ARGS=\"--board=leonardo\"\n    - PLATFORMIO_CI_SRC=examples/Blynk.Inject/Template_ESP8266 PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2 --project-option='build_flags=-DBOARD_LED_PIN_WS2812 -DUSE_TICKER'\"\n    - PLATFORMIO_CI_SRC=examples/Blynk.Inject/Template_ESP32 PLATFORMIO_CI_EXTRA_ARGS=\"--board=esp32dev --project-option='framework=arduino'\"\n    - PLATFORMIO_CI_SRC=examples/Blynk.Inject/Template_MKR1000 PLATFORMIO_CI_EXTRA_ARGS=\"--board=mkr1000USB --project-option='lib_deps=WiFi101' --project-option='build_flags=-DUSE_TIMER_FIVE'\"\n    - PLATFORMIO_CI_SRC=examples/Blynk.Inject/myPlant_ESP8266 PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2 --project-option='build_flags=-DBOARD_LED_PIN_WS2812 -DUSE_TICKER'\"\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/BlynkBlink\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/GetData\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/PushData\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/PushDataOnRequest\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/Servo\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/VirtualPinRead\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/VirtualPinReply\n    - PLATFORMIO_CI_SRC=examples/GettingStarted/VirtualPinWrite\n    - PLATFORMIO_CI_SRC=examples/More/AppConnectedEvents\n    - PLATFORMIO_CI_SRC=examples/More/ArduinoClient/Arduino_Ethernet\n    - PLATFORMIO_CI_SRC=examples/More/ArduinoClient/ESP8266_WiFi PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/More/DHT11 PLATFORMIO_CI_EXTRA_ARGS=\"--board=uno --project-option='lib_deps=Adafruit Unified Sensor'\"\n    - PLATFORMIO_CI_SRC=examples/More/DirectConnect/ESP8266_AccessPoint PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/More/DirectConnect/ESP8266_Station PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/More/FormatString\n    - PLATFORMIO_CI_SRC=examples/More/HandleDisconnect PLATFORMIO_CI_EXTRA_ARGS=\"--board=nodemcuv2\"\n    - PLATFORMIO_CI_SRC=examples/More/NeoPixel\n    - PLATFORMIO_CI_SRC=examples/More/PrintAllVirtual\n    - PLATFORMIO_CI_SRC=examples/More/ServerAsDataStorage/ServerAsDataStorage_MultiValue\n    - PLATFORMIO_CI_SRC=examples/More/ServerAsDataStorage/ServerAsDataStorage_SingleValue\n    - PLATFORMIO_CI_SRC=examples/More/SetProperty/SetProperty_MultiValue\n    - PLATFORMIO_CI_SRC=examples/More/SetProperty/SetProperty_SingleValue\n    - PLATFORMIO_CI_SRC=examples/More/Stroboscope\n    - PLATFORMIO_CI_SRC=examples/More/Sync/ButtonInterrupt\n    - PLATFORMIO_CI_SRC=examples/More/Sync/ButtonPoll\n    - PLATFORMIO_CI_SRC=examples/More/Sync/HardwareSyncStateFromApp\n    - PLATFORMIO_CI_SRC=examples/More/Sync/SyncPhysicalButton\n    - PLATFORMIO_CI_SRC=examples/Widgets/Bridge\n    - PLATFORMIO_CI_SRC=examples/Widgets/Email\n    - PLATFORMIO_CI_SRC=examples/Widgets/Eventor\n    - PLATFORMIO_CI_SRC=examples/Widgets/GPS_Stream\n    - PLATFORMIO_CI_SRC=examples/Widgets/JoystickTwoAxis\n    - PLATFORMIO_CI_SRC=examples/Widgets/LCD/LCD_AdvancedMode\n    - PLATFORMIO_CI_SRC=examples/Widgets/LCD/LCD_SimpleModePushing\n    - PLATFORMIO_CI_SRC=examples/Widgets/LCD/LCD_SimpleModeReading\n    - PLATFORMIO_CI_SRC=examples/Widgets/LED/LED_Blink\n    - PLATFORMIO_CI_SRC=examples/Widgets/LED/LED_Color\n    - PLATFORMIO_CI_SRC=examples/Widgets/LED/LED_Fade\n    - PLATFORMIO_CI_SRC=examples/Widgets/LED/LED_StatusOfButton\n    - PLATFORMIO_CI_SRC=examples/Widgets/Map\n    - PLATFORMIO_CI_SRC=examples/Widgets/Menu\n    - PLATFORMIO_CI_SRC=examples/Widgets/Player\n    - PLATFORMIO_CI_SRC=examples/Widgets/PushNotification/PushNotification_Button\n    - PLATFORMIO_CI_SRC=examples/Widgets/PushNotification/PushNotification_Interval\n    - PLATFORMIO_CI_SRC=examples/Widgets/RTC\n    - PLATFORMIO_CI_SRC=examples/Widgets/RTC_Advanced\n    - PLATFORMIO_CI_SRC=examples/Widgets/Table/Table_Advanced\n    - PLATFORMIO_CI_SRC=examples/Widgets/Table/Table_Simple\n    - PLATFORMIO_CI_SRC=examples/Widgets/Terminal\n    - PLATFORMIO_CI_SRC=examples/Widgets/TimeInput/AdvancedTimeInput\n    - PLATFORMIO_CI_SRC=examples/Widgets/TimeInput/SimpleTimeInput\n    - PLATFORMIO_CI_SRC=examples/Widgets/TimeInput/UpdateTimeInputState\n    - PLATFORMIO_CI_SRC=examples/Widgets/Timer\n    - PLATFORMIO_CI_SRC=examples/Widgets/Twitter\n    - PLATFORMIO_CI_SRC=examples/Widgets/WebHook/WebHook_GET\n\ninstall:\n    # ChipKIT issue: install 32-bit support for GCC PIC32\n    - sudo apt-get install libc6-i386\n\n    - pip install -U platformio\n\n    #\n    # Libraries from PlatformIO Library Registry:\n    #\n    # https://platformio.org/lib/show/28/SPI4Teensy3\n    # https://platformio.org/lib/show/31/Adafruit%20Unified%20Sensor\n    # https://platformio.org/lib/show/91/UIPEthernet\n    # https://platformio.org/lib/show/418/WildFireCore\n    # https://platformio.org/lib/show/65/WiFlyHQ\n    # https://platformio.org/lib/show/44/Time\n    # https://platformio.org/lib/show/31/Adafruit%20Unified%20Sensor\n    # https://platformio.org/lib/show/19/Adafruit-DHT\n    # https://platformio.org/lib/show/259/BLEPeripheral\n    # https://platformio.org/lib/show/177/Adafruit_BluefruitLE_nRF51\n    # https://platformio.org/lib/show/1192/FlashStorage\n    # https://platformio.org/lib/show/1285/Timer5\n    # https://platformio.org/lib/show/1287/TinyGSM\n    # https://platformio.org/lib/show/870/WiFi\n    # https://platformio.org/lib/show/871/GSM\n    # https://platformio.org/lib/show/872/Ethernet\n    # https://platformio.org/lib/show/883/Servo\n    # https://platformio.org/lib/show/945/Bridge\n\n    - platformio lib -g install 28 31 91 418 65 44 31 19 259 177 1192 1285 1287 870 871 872 883 945\n    - platformio lib -g install https://github.com/vshymanskyy/BlynkESP8266.git\n\nscript: make travis-build\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.2978515625,
          "content": "cmake_minimum_required(VERSION 3.3)\n\nif(ESP_PLATFORM)\n    # Build Blynk as an ESP-IDF component\n    file(GLOB_RECURSE SOURCES \"src/*.cpp\" \"src/*.c\")\n\n    idf_component_register(SRCS ${SOURCES}\n                           INCLUDE_DIRS \"src\"\n                           REQUIRES arduino)\n    return()\nendif()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "\nThe MIT License (MIT)\n\nCopyright (c) 2015 Volodymyr Shymanskyy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.6416015625,
          "content": ".PHONY: docs format-examples cloc travis-build build-examples build-boards build-tools update-travis update-ver spaces clean check\n\nexport ARDUINO_IDE_PATH=/data2/arduino-1.8.5\nexport ENERGIA_IDE_PATH=/data2/energia-1.6.10E18\n\n\ndocs:\n\tdoxygen extras/doxygen.config\n\nformat-examples:\n\tfind examples tests -name '*.ino' -exec astyle --options=extras/formatter.conf {} \\;\n\ncloc:\n\tcloc ./\n\nbuild-examples:\n\tpython extras/build-examples.py\n\nbuild-boards:\n\tpython extras/build-boards.py\n\nbuild-tools:\n\tcd ./extras/ide-tools/; ./build.sh BlynkUpdater\n\tcd ./extras/ide-tools/; ./build.sh BlynkUsbScript\n\nspaces:\n\tfind ./src ./linux -name '*.cpp' -o -name '*.h' -exec sed -i 's/\\t/    /g' {} \\;\n\tfind ./examples ./tests -name '*.ino' -o -name '*.h' -exec sed -i 's/\\t/  /g' {} \\;\n\nupdate-travis:\n\tpython extras/travis-generate.py > .travis.yml.new\n\tmeld .travis.yml .travis.yml.new\n\nupdate-ver:\n\tsed -i 's/\"version\": \"[0-9\\.]*\"/\"version\": \"$(VER)\"/g' library.json\n\tsed -i 's/version=[0-9\\.]*/version=$(VER)/g' library.properties\n\tsed -i 's/BLYNK_VERSION        \"[0-9\\.]*\"/BLYNK_VERSION        \"$(VER)\"/g' src/Blynk/BlynkConfig.h\n\nclean:\n\t-rm .travis.yml.new\n\t-find . -type f -name \"*.orig\" -exec rm -f {} \\;\n\ncheck: spaces format-examples\n\t@echo '******************************************'\n\t@echo ' Files with no \"YourAuthToken\":'\n\t@echo '******************************************'\n\t@find ./examples -name \"*.ino\" -exec grep -L \"YourAuthToken\" {} \\;\n\ntravis-build:\nifdef PLATFORMIO_CI_SRC\n\t-rm -rf ./linux\nifdef PLATFORMIO_CI_EXTRA_ARGS\n\tplatformio ci --lib=\".\" $(PLATFORMIO_CI_EXTRA_ARGS)\nelse\n\tplatformio ci --lib=\".\" --board=uno\nendif\nendif\nifdef LINUX_SRC\n\tmake -C $(LINUX_SRC)\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4580078125,
          "content": "[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine)\r\n\r\n# Blynk C++ Library [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Build%20your%20IoT%20App%20in%20minutes,%20right%20on%20your%20smartphone!&url=https://github.com/blynkkk/blynk-library&via=blynk_app&hashtags=IoT,iOS,Android,Arduino,ESP8266,ESP32,RaspberryPi)\r\n\r\n[![GitHub version](https://img.shields.io/github/release/blynkkk/blynk-library.svg)](https://github.com/blynkkk/blynk-library/releases/latest)\r\n[![GitHub download](https://img.shields.io/github/downloads/blynkkk/blynk-library/total.svg)](https://github.com/blynkkk/blynk-library/releases/latest)\r\n[![GitHub stars](https://img.shields.io/github/stars/blynkkk/blynk-library.svg)](https://github.com/blynkkk/blynk-library/stargazers)\r\n[![GitHub issues](https://img.shields.io/github/issues/blynkkk/blynk-library.svg)](https://github.com/blynkkk/blynk-library/issues)\r\n[![Build Status](https://img.shields.io/travis/blynkkk/blynk-library.svg)](https://travis-ci.org/blynkkk/blynk-library)\r\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/blynkkk/blynk-library/blob/master/LICENSE)\r\n\r\nIf you like **Blynk** - give it a star, or fork it and contribute! \r\n[![GitHub stars](https://img.shields.io/github/stars/blynkkk/blynk-library.svg?style=social&label=Star)](https://github.com/blynkkk/blynk-library/stargazers) \r\n[![GitHub forks](https://img.shields.io/github/forks/blynkkk/blynk-library.svg?style=social&label=Fork)](https://github.com/blynkkk/blynk-library/network)\r\n__________\r\n\r\n### Blynk is a unique IoT platform for connecting any hardware to the cloud, designing apps to control them, and managing your deployed products at scale.\r\n\r\n- With Blynk Library you can connect **over 400 hardware models** (including ESP8266, ESP32, NodeMCU, all Arduinos, Raspberry Pi, Particle, Texas Instruments, etc.) to the Blynk Cloud.\r\n\r\n- With Blynk apps for **iOS** and **Android** apps you can easily drag-n-drop graphic interfaces for any DIY or commercial project. It's a pure WYSIWG experience: no coding on iOS or Android required. \r\n\r\n- Hardware can connect to Blynk Cloud over the Internet using hardware connectivity available on your board (like ESP32), or with the use of various shields (Ethernet, WiFi, GSM, LTE, etc). Blynk Cloud is available for every user of Blynk **for free**.\r\n\r\n![Blynk Banner](https://github.com/blynkkk/blynkkk.github.io/raw/master/images/GithubBanner.jpg)\r\n\r\n## Downloads\r\n\r\n**Blynk [Arduino Library](https://github.com/blynkkk/blynk-library/releases/latest)**\r\n\r\n**Blynk Mobile App: \r\n[<img src=\"https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/googleplay.svg\" width=\"18\" height=\"18\" /> Google Play](https://play.google.com/store/apps/details?id=cloud.blynk) | \r\n[<img src=\"https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/apple.svg\" width=\"18\" height=\"18\" /> App Store](https://apps.apple.com/us/app/blynk-iot/id1559317868)**\r\n\r\n## Quickstart: Arduino + Ethernet shield\r\n\r\n* Download the Blynk app ([App Store](https://apps.apple.com/us/app/blynk-iot/id1559317868), [Google Play](https://play.google.com/store/apps/details?id=cloud.blynk))\r\n* Get the Auth Token from the app\r\n* Import this library to Arduino IDE. Guide [here](http://arduino.cc/en/guide/libraries)\r\n* In Arduino IDE, select `File -> Examples -> Blynk -> Boards_Ethernet -> Arduino_Ethernet`\r\n* Update Auth Token in the sketch and upload it to Arduino\r\n* Connect your Arduino with Ethernet shield to the internet\r\n\r\nWhen you are connected - check the included examples on how to use different types of connections (transports) and explore Blynk features. You can combine any example for your hardware + transport + features.\r\n\r\n## Documentation and other helpful links\r\n\r\n[The list of supported hardware](https://docs.blynk.io/en/blynk.edgent-firmware-api/supported-boards) - supported boards, Ethernet, WiFi, Cellular...  \r\n[Full Blynk Documentation](https://docs.blynk.io) - a complete guide on Blynk features  \r\n[Community (Forum)](http://community.blynk.cc) - join a 500,000 Blynk community to ask questions and share ideas  \r\n[Code Examples Browser](http://examples.blynk.cc) - browse examples to explore Blynk possibilities  \r\n[Official Website](https://blynk.io)\r\n\r\n**Social Media:**\r\n\r\n[Facebook](https://www.fb.com/blynkapp) | \r\n[Twitter](https://twitter.com/blynk_app) | \r\n[Youtube](https://www.youtube.com/blynk) | \r\n[Instagram](https://www.instagram.com/blynk.iot/) | \r\n[LinkedIn](https://www.linkedin.com/company/b-l-y-n-k/)\r\n\r\n## Blynk libraries for other platforms\r\n* [Python, MicroPython](https://github.com/blynkkk/lib-python)\r\n\r\n## Libraries by community\r\n* [Python, MicroPython](https://github.com/vshymanskyy/blynk-library-python)\r\n* [Particle](https://github.com/vshymanskyy/blynk-library-particle)\r\n* [Lua, OpenWrt, NodeMCU](https://github.com/vshymanskyy/blynk-library-lua)\r\n* [OpenWrt packages](https://github.com/vshymanskyy/blynk-library-openwrt)\r\n* [MBED](https://developer.mbed.org/users/vshymanskyy/code/Blynk/)\r\n* [Node-RED for Blynk IoT](https://flows.nodered.org/node/node-red-contrib-blynk-iot)\r\n\r\n## Contributing\r\nWe accept contributions from our community: stability bugfixes, new hardware support, or any other improvements.  \r\n[Here](https://github.com/blynkkk/blynk-library/labels/help%20wanted) is a list of what you could help with.\r\n\r\n### License\r\nThis project is released under The MIT License (MIT)\r\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "keywords.txt",
          "type": "blob",
          "size": 3.5888671875,
          "content": "#######################################\n# Data types (KEYWORD1)\n#######################################\nBlynk\tKEYWORD1\nBlynkTimer\tKEYWORD1\nWidgetLCD\tKEYWORD1\nWidgetLED\tKEYWORD1\nWidgetRTC\tKEYWORD1\nWidgetTerminal\tKEYWORD1\nWidgetMap\tKEYWORD1\nBlynkParam\tKEYWORD1\nBlynkParamAllocated\tKEYWORD1\nBlynkConsole\tKEYWORD1\nBlynkTime\tKEYWORD1\nBlynkDateTime\tKEYWORD1\n\n#######################################\n# Methods and Functions (KEYWORD2)\n#######################################\nbegin\tKEYWORD2\nconfig\tKEYWORD2\nrun\tKEYWORD2\nconnect\tKEYWORD2\nconnected\tKEYWORD2\nvirtualWrite\tKEYWORD2\nvirtualWriteBinary\tKEYWORD2\nsyncAll\tKEYWORD2\nsyncVirtual\tKEYWORD2\nsetProperty\tKEYWORD2\nlogEvent\tKEYWORD2\nresolveEvent\tKEYWORD2\nresolveAllEvents\tKEYWORD2\nbeginGroup\tKEYWORD2\nendGroup\tKEYWORD2\n\n# Handler helpers\nBLYNK_READ\tKEYWORD2\nBLYNK_WRITE\tKEYWORD2\nBLYNK_READ_DEFAULT\tKEYWORD2\nBLYNK_WRITE_DEFAULT\tKEYWORD2\nBLYNK_ATTACH_WIDGET\tKEYWORD2\nBLYNK_CONNECTED\tKEYWORD2\n#BLYNK_DISCONNECTED\tKEYWORD2\nBLYNK_APP_CONNECTED\tKEYWORD2\nBLYNK_APP_DISCONNECTED\tKEYWORD2\n\nBLYNK_OUTPUT\tKEYWORD2\nBLYNK_INPUT\tKEYWORD2\nBLYNK_OUTPUT_DEFAULT\tKEYWORD2\nBLYNK_INPUT_DEFAULT\tKEYWORD2\n\n# Variables binding\nBLYNK_VAR_INT\tKEYWORD2\nBLYNK_VAR_LONG\tKEYWORD2\nBLYNK_VAR_DOUBLE\tKEYWORD2\nBLYNK_VAR_STRING\tKEYWORD2\n\n# Special defines\nBLYNK_DEBUG\tKEYWORD2\nBLYNK_DEBUG_ALL\tKEYWORD2\nBLYNK_PRINT\tKEYWORD2\n\nBLYNK_AUTH_TOKEN\tKEYWORD2\nBLYNK_TEMPLATE_ID\tKEYWORD2\nBLYNK_TEMPLATE_NAME\tKEYWORD2\nBLYNK_FIRMWARE_VERSION\tKEYWORD2\nBLYNK_FIRMWARE_TYPE\tKEYWORD2\n\nBLYNK_HEARTBEAT\tKEYWORD2\nBLYNK_EXPERIMENTAL\tKEYWORD2\nBLYNK_NO_BUILTIN\tKEYWORD2\nBLYNK_NO_FLOAT\tKEYWORD2\nBLYNK_NO_FANCY_LOGO\tKEYWORD2\nBLYNK_FANCY_LOGO_3D\tKEYWORD2\nBLYNK_USE_DIRECT_CONNECT\tKEYWORD2\nBLYNK_MAX_SENDBYTES\tKEYWORD2\nBLYNK_MAX_READBYTES\tKEYWORD2\n\n# Periodic actions\n#BLYNK_EVERY_N_MILLIS\tKEYWORD2\n#BLYNK_EVERY_N_SECONDS\tKEYWORD2\n#BLYNK_EVERY_N_MINUTES\tKEYWORD2\n#BLYNK_EVERY_N_HOURS\tKEYWORD2\n\n#######################################\n# Literals (LITERAL1)\n#######################################\n\n# Virtual pins\nV0\tLITERAL1\nV1\tLITERAL1\nV2\tLITERAL1\nV3\tLITERAL1\nV4\tLITERAL1\nV5\tLITERAL1\nV6\tLITERAL1\nV7\tLITERAL1\nV8\tLITERAL1\nV9\tLITERAL1\nV10\tLITERAL1\nV11\tLITERAL1\nV12\tLITERAL1\nV13\tLITERAL1\nV14\tLITERAL1\nV15\tLITERAL1\nV16\tLITERAL1\nV17\tLITERAL1\nV18\tLITERAL1\nV19\tLITERAL1\nV20\tLITERAL1\nV21\tLITERAL1\nV22\tLITERAL1\nV23\tLITERAL1\nV24\tLITERAL1\nV25\tLITERAL1\nV26\tLITERAL1\nV27\tLITERAL1\nV28\tLITERAL1\nV29\tLITERAL1\nV30\tLITERAL1\nV31\tLITERAL1\nV32\tLITERAL1\nV33\tLITERAL1\nV34\tLITERAL1\nV35\tLITERAL1\nV36\tLITERAL1\nV37\tLITERAL1\nV38\tLITERAL1\nV39\tLITERAL1\nV40\tLITERAL1\nV41\tLITERAL1\nV42\tLITERAL1\nV43\tLITERAL1\nV44\tLITERAL1\nV45\tLITERAL1\nV46\tLITERAL1\nV47\tLITERAL1\nV48\tLITERAL1\nV49\tLITERAL1\nV50\tLITERAL1\nV51\tLITERAL1\nV52\tLITERAL1\nV53\tLITERAL1\nV54\tLITERAL1\nV55\tLITERAL1\nV56\tLITERAL1\nV57\tLITERAL1\nV58\tLITERAL1\nV59\tLITERAL1\nV60\tLITERAL1\nV61\tLITERAL1\nV62\tLITERAL1\nV63\tLITERAL1\nV64\tLITERAL1\nV65\tLITERAL1\nV66\tLITERAL1\nV67\tLITERAL1\nV68\tLITERAL1\nV69\tLITERAL1\nV70\tLITERAL1\nV71\tLITERAL1\nV72\tLITERAL1\nV73\tLITERAL1\nV74\tLITERAL1\nV75\tLITERAL1\nV76\tLITERAL1\nV77\tLITERAL1\nV78\tLITERAL1\nV79\tLITERAL1\nV80\tLITERAL1\nV81\tLITERAL1\nV82\tLITERAL1\nV83\tLITERAL1\nV84\tLITERAL1\nV85\tLITERAL1\nV86\tLITERAL1\nV87\tLITERAL1\nV88\tLITERAL1\nV89\tLITERAL1\nV90\tLITERAL1\nV91\tLITERAL1\nV92\tLITERAL1\nV93\tLITERAL1\nV94\tLITERAL1\nV95\tLITERAL1\nV96\tLITERAL1\nV97\tLITERAL1\nV98\tLITERAL1\nV99\tLITERAL1\nV100\tLITERAL1\nV101\tLITERAL1\nV102\tLITERAL1\nV103\tLITERAL1\nV104\tLITERAL1\nV105\tLITERAL1\nV106\tLITERAL1\nV107\tLITERAL1\nV108\tLITERAL1\nV109\tLITERAL1\nV110\tLITERAL1\nV111\tLITERAL1\nV112\tLITERAL1\nV113\tLITERAL1\nV114\tLITERAL1\nV115\tLITERAL1\nV116\tLITERAL1\nV117\tLITERAL1\nV118\tLITERAL1\nV119\tLITERAL1\nV120\tLITERAL1\nV121\tLITERAL1\nV122\tLITERAL1\nV123\tLITERAL1\nV124\tLITERAL1\nV125\tLITERAL1\nV126\tLITERAL1\nV127\tLITERAL1\n"
        },
        {
          "name": "library.json",
          "type": "blob",
          "size": 1.0576171875,
          "content": "{\n  \"name\": \"Blynk\",\n  \"version\": \"1.3.2\",\n  \"description\": \"Build a smartphone app for your project in minutes. Blynk allows creating IoT solutions easily. It supports  WiFi, Ethernet, Cellular connectivity. Works with over 400 boards like ESP8266, ESP32, Arduino, Raspberry Pi, Particle, etc.\",\n  \"keywords\": \"sensors, control, device, smartphone, mobile, app, web, cloud, communication, protocol, iot, m2m, wifi, ble, bluetooth, ethernet, usb, serial, gsm, gprs, 3g, data, esp8266, http\",\n  \"authors\": [\n    {\n      \"name\":  \"Blynk\",\n      \"url\":   \"https://github.com/blynkkk\"\n    },\n    {\n      \"name\":  \"Volodymyr Shymanskyy\",\n      \"url\":   \"https://github.com/vshymanskyy\",\n      \"maintainer\": true\n    }\n  ],\n  \"repository\":\n  {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/blynkkk/blynk-library.git\"\n  },\n  \"homepage\": \"https://blynk.io\",\n  \"export\": {\n    \"exclude\": [\n      \"linux\",\n      \"extras\",\n      \"tests\"\n    ]\n  },\n  \"dependencies\": {\n    \"blynkkk/BlynkNcpDriver\": \"^0.6.3\"\n  },\n  \"frameworks\": \"*\",\n  \"platforms\": \"*\",\n  \"examples\": \"examples/*/*/*.ino\"\n}\n"
        },
        {
          "name": "library.properties",
          "type": "blob",
          "size": 0.4052734375,
          "content": "name=Blynk\nversion=1.3.2\nauthor=Blynk\nlicense=MIT\nmaintainer=Volodymyr Shymanskyy <vshymanskyi@gmail.com>\nsentence=Build a smartphone app for your project in minutes!\nparagraph=It supports  WiFi, Ethernet, Cellular connectivity. Works with over 400 boards like ESP8266, ESP32, Arduino, Raspberry Pi, Particle, etc.\ncategory=Communication\nurl=https://blynk.io\narchitectures=*\nincludes=Blynk.h\ndepends=BlynkNcpDriver\n"
        },
        {
          "name": "linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}