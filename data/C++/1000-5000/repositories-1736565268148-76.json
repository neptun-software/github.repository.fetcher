{
  "metadata": {
    "timestamp": 1736565268148,
    "page": 76,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "KhronosGroup/Vulkan-Samples",
      "stars": 4440,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.0703125,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: true\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel: true\n  AfterClass:      true\n  AfterControlStatement: true\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  AfterExternBlock: true\n  BeforeCatch:     true\n  BeforeElse:      true\n  IndentBraces:    false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: AfterColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     0\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: true\nIndentPPDirectives: AfterHash\nIndentWidth:     4\nIndentWrappedFunctionNames: true\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 8\nSpacesInAngles:  false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        4\nUseTab:          ForIndentation\n---\nLanguage: ObjC\nDisableFormat: true\n...\n"
        },
        {
          "name": ".copyrightignore",
          "type": "blob",
          "size": 0.4072265625,
          "content": ".clang-format\n.gitignore\n.snakeignore\n.yml\n.gitmodules\n.jpg\n.png\n.ttf\n.github\n.jar\n.json\ndoxyfile\ndownload_vvl.gradle\nbuild.gradle.in\napp.build.gradle.in\nsettings.gradle.in\ngradle.properties.in\nlocal.properties.in\ngradlew\ngradlew.bat\ngradle.properties.in\ngradle-wrapper.properties.in\npull_request_template.md\nglad.h\nglad.c\nkhrplatform.h\nclang_format.py\nrun-clang-tidy.py\npackage-list.txt\n.spv\n.pre-commit-config.yaml\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1982421875,
          "content": "assets/scenes\nbuild\n.vs\n.vscode\n.idea\nimgui.ini\ndoxygen/\ntests/system_test/artifacts\ntests/system_test/tmp\noutput/*\n.mypy_cache\ntags\n\n# vim backup and temp files\n*~\n.*.sw*\n.sw*\n.tracy\n\n# macOS\n.DS_Store\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 4.3076171875,
          "content": "stages:\n  - Check\n  - Build\n  - Test\n  - Package\n\nDoxygen:\n  stage: Check\n  image: ghcr.io/khronosgroup/vulkan-samples\n  tags:\n    - linux\n    - docker\n  script:\n    - mkdir -p doxygen\n    - doxygen docs/doxygen/doxyfile\n    - if [ $(stat -c%s doxygen/warnings.txt) -gt 0 ]; then cat doxygen/warnings.txt; exit 1; fi\n\nCopyrightHeaders:\n  stage: Check\n  image: ghcr.io/khronosgroup/vulkan-samples\n  tags:\n    - linux\n    - docker\n  script:\n    - python3 /usr/local/bin/check_copyright_headers.py $TARGET_BRANCH\n\nSnakeCase:\n  stage: Check\n  image: ghcr.io/khronosgroup/vulkan-samples\n  tags:\n    - linux\n    - docker\n  script:\n    - python3 /usr/local/bin/snake_case.py $TARGET_BRANCH > snake-report.txt\n    - if [ $(grep -c '@@' snake-report.txt) -gt 0 ]; then cat snake-report.txt; exit 1; fi\n  allow_failure: true\n\nClangFormat:\n  stage: Check\n  image: ghcr.io/khronosgroup/vulkan-samples\n  tags:\n    - linux\n    - docker\n  script:\n    - python3 /usr/local/bin/clang_format.py -v --diff $TARGET_BRANCH > clang-format-report.txt\n    - if [ $(grep -c 'clang-format did not modify any files' clang-format-report.txt) -eq 0  ] && [ $(grep -c 'no modified files to format' clang-format-report.txt) -eq 0  ]; then cat clang-format-report.txt; exit 1; fi\n\nClangTidy:\n  stage: Check\n  image: ghcr.io/khronosgroup/vulkan-samples\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  tags:\n    - linux\n    - docker\n  script:\n    - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -Bbuild/clang\n    - python3 /usr/local/bin/run-clang-tidy.py -j $(($(nproc)/2+1)) -p build/clang -clang-tidy-binary=clang-tidy-10 -isystem third_party -header-filter=framework,samples,vulkan_samples -checks=-*,google-*,-google-runtime-references -quiet framework/* samples/* vulkan_samples/* tests/*\n\nLinux:\n  stage: Build\n  image: ghcr.io/khronosgroup/vulkan-samples\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  artifacts:\n    paths:\n      - build/linux\n    expire_in: 2h\n  tags:\n    - linux\n    - docker\n  script:\n    - cmake -G \"Unix Makefiles\" -Bbuild/linux -DCMAKE_BUILD_TYPE=Release -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON\n    - cmake --build build/linux --target vulkan_samples --config Release -- -j$(($(nproc)/2+1))\n\nWindows:\n  stage: Build\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  artifacts:\n    paths:\n      - build/windows\n    expire_in: 2h\n  tags:\n    - gpu\n    - windows\n  script:\n    - cmake -G\"Visual Studio 15 2017 Win64\" -Bbuild/windows -DVKB_BUILD_TESTS:BOOL=ON -DVKB_BUILD_SAMPLES:BOOL=ON\n    - cmake --build build/windows --target vulkan_samples --config Release\n\nAndroid:\n  stage: Build\n  image: ghcr.io/khronosgroup/vulkan-samples\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  artifacts:\n    paths:\n      - build/android\n    expire_in: 2h\n  tags:\n    - linux\n    - docker\n  script:\n    - cmake -G \"Unix Makefiles\" -Bbuild/android -DCMAKE_TOOLCHAIN_FILE=bldsys/toolchain/android_gradle.cmake -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON\n    - cmake --build build/android --config Release --target vulkan_samples_package -- -j$(($(nproc)/2+1))\n\nGenerateSample:\n  stage: Test\n  image: ghcr.io/khronosgroup/vulkan-samples\n  variables:\n   GIT_SUBMODULE_STRATEGY: recursive\n  dependencies:\n    - Linux\n  tags:\n   - linux\n   - docker\n  script:\n   - cd tests/generate_sample\n   - python3 generate_sample_test.py\n\nSystemTest:\n  stage: Test\n  variables:\n   GIT_SUBMODULE_STRATEGY: recursive\n  artifacts:\n    paths:\n      - tests/system_test/artifacts\n    expire_in: 1d\n    when: on_failure\n  dependencies:\n   - Windows\n  tags:\n   - gpu\n   - windows\n  script:\n   - cd tests/system_test\n   - python system_test.py -Bbuild/windows -CRelease -D -P\n\nLinuxExternalProject:\n  stage: Package\n  image: ghcr.io/khronosgroup/vulkan-samples\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  tags:\n    - linux\n    - docker\n  script:\n    - cmake tests/external_project -Bbuild -DVKB_BUILD_SAMPLES=OFF\n\nWindowsExternalProject:\n  stage: Package\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  tags:\n    - gpu\n    - windows\n  script:\n    - cmake tests/external_project -Bbuild -DVKB_BUILD_SAMPLES=OFF\n\nAndroidExternalProject:\n  stage: Package\n  image: ghcr.io/khronosgroup/vulkan-samples\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n  tags:\n    - linux\n    - docker\n  script:\n    - cmake -DCMAKE_TOOLCHAIN_FILE=../../bldsys/toolchain/android_gradle.cmake tests/external_project -Bbuild -DVKB_BUILD_SAMPLES=OFF\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.1416015625,
          "content": "[submodule \"third_party/volk\"]\n\tpath = third_party/volk\n\turl = https://github.com/zeux/volk\n[submodule \"third_party/glm\"]\n\tpath = third_party/glm\n\turl = https://github.com/g-truc/glm\n[submodule \"third_party/stb\"]\n\tpath = third_party/stb\n\turl = https://github.com/nothings/stb\n[submodule \"third_party/imgui\"]\n\tpath = third_party/imgui\n\turl = https://github.com/ocornut/imgui\n[submodule \"third_party/tinygltf\"]\n\tpath = third_party/tinygltf\n\turl = https://github.com/syoyo/tinygltf\n[submodule \"third_party/glfw\"]\n\tpath = third_party/glfw\n\turl = https://github.com/glfw/glfw\n[submodule \"third_party/glslang\"]\n\tpath = third_party/glslang\n\turl = https://github.com/KhronosGroup/glslang\n[submodule \"third_party/spirv-cross\"]\n\tpath = third_party/spirv-cross\n\turl = https://github.com/KhronosGroup/SPIRV-Cross\n[submodule \"third_party/hwcpipe\"]\n\tpath = third_party/hwcpipe\n\turl = https://github.com/ARM-software/HWCPipe\n[submodule \"third_party/vma\"]\n\tpath = third_party/vma\n\turl = https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator\n[submodule \"third_party/spdlog\"]\n\tpath = third_party/spdlog\n\turl = https://github.com/gabime/spdlog\n[submodule \"third_party/ktx\"]\n\tpath = third_party/ktx\n\turl = https://github.com/KhronosGroup/KTX-Software\n[submodule \"third_party/astc\"]\n\tpath = third_party/astc\n\turl = https://github.com/ARM-software/astc-encoder\n[submodule \"third_party/CTPL\"]\n\tpath = third_party/CTPL\n\turl = https://github.com/vit-vit/CTPL\n[submodule \"third_party/vulkan\"]\n\tpath = third_party/vulkan\n\turl = https://github.com/KhronosGroup/Vulkan-Headers\n[submodule \"assets\"]\n\tpath = assets\n\turl = https://github.com/KhronosGroup/Vulkan-Samples-Assets\n\tshallow = true\n[submodule \"third_party/cli11\"]\n\tpath = third_party/cli11\n\turl = https://github.com/CLIUtils/CLI11.git\n[submodule \"third_party/opencl\"]\n\tpath = third_party/opencl\n\turl = https://github.com/KhronosGroup/OpenCL-Headers.git\n[submodule \"third_party/catch2\"]\n\tpath = third_party/catch2\n\turl = https://github.com/catchorg/Catch2.git\n[submodule \"third_party/fmt\"]\n\tpath = third_party/fmt\n\turl = https://github.com/fmtlib/fmt\n[submodule \"third_party/tracy\"]\n\tpath = third_party/tracy\n\turl = https://github.com/wolfpld/tracy.git\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.5810546875,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v2.3.0\n    hooks:\n    -   id: check-yaml\n    -   id: end-of-file-fixer\n    -   id: check-added-large-files\n    -   id: trailing-whitespace\n-   repo: https://github.com/pre-commit/mirrors-clang-format\n    rev: 'v15.0.7'\n    hooks:\n    -   id: clang-format\n        'types_or': [c++, c]\n-   repo: local\n    hooks:\n    -   id: copyright-check\n        name: copyright-check\n        entry: ./scripts/copyright.py main --fix\n        language: python\n        types: [python]\n        pass_filenames: false\n        always_run: true\n"
        },
        {
          "name": ".snakeignore",
          "type": "blob",
          "size": 0.0107421875,
          "content": "glfw*\nglad*"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.494140625,
          "content": "# Copyright (c) 2020-2024, Arm Limited and Contributors\n# Copyright (c) 2024, Mobica Limited\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 the \"License\";\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nlist(INSERT CMAKE_MODULE_PATH 0 \"${CMAKE_SOURCE_DIR}/bldsys/cmake/module\")\n\nif(NOT DEFINED CMAKE_C_COMPILER_LAUNCHER AND NOT DEFINED CMAKE_CXX_COMPILER_LAUNCHER)\n    find_program(CCACHE_FOUND ccache)\n    find_program(SCCACHE_FOUND sccache)\n    if (SCCACHE_FOUND)\n        message(\"setting SCCACHE to ${SCCACHE_FOUND}\")\n        set(CMAKE_C_COMPILER_LAUNCHER ${SCCACHE_FOUND})\n        set(CMAKE_CXX_COMPILER_LAUNCHER ${SCCACHE_FOUND})\n    elseif(CCACHE_FOUND)\n        message(\"setting CCACHE to ${CCACHE_FOUND}\")\n        set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE_FOUND})\n        set(CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE_FOUND})\n    endif()\nendif()\n\ncmake_minimum_required(VERSION 3.16)\n\nproject(vulkan_samples)\n\n# search for Vulkan SDK\nfind_package(Vulkan)\n\nif(Vulkan_FOUND)\n    if(NOT Vulkan_dxc_exe_FOUND)\n        find_program(Vulkan_dxc_EXECUTABLE\n                    NAMES dxc\n                    HINTS\n                    \"$ENV{VULKAN_SDK}/Bin\"\n                    \"$ENV{VULKAN_SDK}/bin\"\n                    )\n    endif()\n    if(Vulkan_dxc_EXECUTABLE)\n        message(STATUS \"Found DirectX Shader Compiler under ${Vulkan_dxc_EXECUTABLE}\")\n    else()\n        message(STATUS \"Couldn't find DirectX Shader Compiler executable, make sure it is present in Vulkan SDK or add it manually via Vulkan_dxc_EXECUTABLE cmake variable. HLSL shaders won't be compiled.\")\n    endif()\nendif()\n\n# globally add VKB_DEBUG for the debug build\nadd_compile_definitions($<$<CONFIG:DEBUG>:VKB_DEBUG>)\n\n# globally set -fno-strict-aliasing, needed due to using reinterpret_cast\nif (NOT MSVC)\n  add_compile_options(-fno-strict-aliasing)\nendif()\n\nif(MSVC AND (DEFINED CMAKE_C_COMPILER_LAUNCHER))\n    message(DEBUG \"Setting MSVC flags to /Z7 for ccache compatibility.  Current flags: ${CMAKE_CXX_FLAGS_DEBUG}\")\n    string(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\")\n    string(REPLACE \"/Zi\" \"/Z7\" CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG}\")\n    string(REPLACE \"/Zi\" \"/Z7\" CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n    string(REPLACE \"/Zi\" \"/Z7\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n    message(DEBUG \"New flags: ${CMAKE_CXX_FLAGS_DEBUG}\")\nendif()\n\n# create output folder\nfile(MAKE_DIRECTORY output)\n\n# Add path for local cmake scripts\nlist(APPEND CMAKE_MODULE_PATH\n    ${CMAKE_CURRENT_SOURCE_DIR}/bldsys/cmake\n    ${CMAKE_CURRENT_SOURCE_DIR}/bldsys/cmake/module)\n\ninclude(utils)\ninclude(global_options)\ninclude(sample_helper)\ninclude(check_atomic)\ninclude(component_helper)\n\n# Add third party libraries\nadd_subdirectory(third_party)\n\nvkb__enable_testing()\n\n# Framework v2.0 components directory\nadd_subdirectory(components)\n\n# Add vulkan framework\nadd_subdirectory(framework)\n\nif(VKB_BUILD_SAMPLES)\n    # Add vulkan samples\n    add_subdirectory(samples)\nendif()\n\n# Add vulkan app (runs all samples)\nadd_subdirectory(app)\n\nadd_subdirectory(antora)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.adoc",
          "type": "blob",
          "size": 0.9111328125,
          "content": "////\n- Copyright (c) 2019-2023, Arm Limited and Contributors\n-\n- SPDX-License-Identifier: Apache-2.0\n-\n- Licensed under the Apache License, Version 2.0 the \"License\";\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n-\n////\n\nA reminder that this issue tracker is managed by the Khronos Group.\nInteractions here should follow the Khronos Code of Conduct (https://www.khronos.org/developers/code-of-conduct), which prohibits aggressive or derogatory language.\nPlease keep the discussion friendly and civil.\n"
        },
        {
          "name": "CONTRIBUTING.adoc",
          "type": "blob",
          "size": 8.2353515625,
          "content": "////\n- Copyright (c) 2019-2024, Arm Limited and Contributors\n-\n- SPDX-License-Identifier: Apache-2.0\n-\n- Licensed under the Apache License, Version 2.0 the \"License\";\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n-\n////\n= Contributing\n:pp: {plus}{plus}\n\nContributions are encouraged!\nThis repository welcomes samples of the following types:\n\n* Vulkan API Usage\n* Vulkan Extension Usage\n* Vulkan Best Practices and/or Performance Guidance\n* Unique Vulkan use case or project\n\nIf you have a sample that demonstrates Vulkan like any of the above points, then consider contributing to the Vulkan samples repository.\n\nBefore you start, check out the requirements and guidelines below.\nFollowing these guidelines can help ensure that your contribution ends up being approved by reviewers and most importantly becomes a valuable addition to the Vulkan Samples repository.\n\n== Quality Checks\n\nVulkan Samples has a range of quality checks to ensure that we maintain a consistent quality and style across all samples. These include formatting, linting and copyright checks.\n\nTo make this process as painless for contributors as possible we use xref:https://pre-commit.com/[pre-commit]. To install pre-commit and the hooks for this repository, run the following commands:\n\n----\npip install pre-commit\npre-commit install\n----\n\nIf you prefer not to use pre-commit, you can run the checks manually using the following commands:\n\n----\n# Run clang-format\n./scripts/clang_format.py main\n# Run copyright checks\n./scripts/copyright.py main --fix\n----\n\nFuture tooling may be added in the future. If you have any suggestions or feedback, please open an issue on the repository.\n\n== Repository Structure\n\n|===\n| folder | description\n\n| `/samples/api/`\n| folder containing samples that demonstrate API usage\n\n| `/samples/extensions/`\n| folder containing samples that demonstrate API Extensions usage\n\n| `/samples/performance/`\n| folder containing samples that demonstrate performance best-practices\n\n| `/shaders/`\n| folder containing shaders used by the samples\n\n| `/assets/`\n| GIT sub-module with models, scenes and fonts\n\n| `/third_party/`\n| folder with commonly used external libraries\n|===\n\n== Creating a sample\n\nFollow xref:scripts/README.adoc[this guide] to create a dummy sample and associated build files automatically.\nThis new sample will be based on the framework of wrapper classes that provide an optimized and convenient system to manage Vulkan objects.\n\n== General Requirements\n\n* Sample folder and description:\n ** Each sample must be placed in a separate sub-folder within `/samples/api/`, `/samples/performance/` or `/samples/extensions/`.\n ** Each sample should use a short folder name, using snake_case, that best describes the sample.\n ** Each sample must be well-documented, include a README.adoc file and ideally include a tutorial file in the root of the sample's folder with a detailed explanation of the sample and a 'best-practice' summary if applicable.\nAny images used in the tutorial should be stored in an images/ sub-folder in the sample folder.\n* Vendor samples:\n ** By default each sample is assumed to run on all supported platforms.\nOtherwise note any platform restrictions in the sample's documentation.\n ** If a sample is vendor-specific (i.e.\nonly runs on certain hardware) please add a `TAG` with the vendor's name in the sample's `CMakeLists.txt`.\n* Framework:\n ** Make use of the available framework whenever possible.\n ** Do not introduce any new wrapper code.\nIf what you need is not already a part of the framework, please extend it rather than introduce anything new.\n ** Alternatively you may use raw Vulkan API calls.\n* Code and assets:\n ** Single source file samples with minimal build complexity are encouraged to make porting to different platforms easier.\n ** Compiling the sample with the highest warning level and warnings-as-errors (-Wall -Wextra -Werror, or /Wall /WX) is highly recommended.\n ** Shaders are saved in the `/shaders/` folder, in a separate sub-folder with the same name as the sample sub-folder in `/samples/api/`, `/samples/performance/` or `/samples/extensions/`.\n ** Assets should be saved in https://github.com/KhronosGroup/Vulkan-Samples-Assets[vulkan-samples-assets].\n* License:\n ** Samples are licensed under the link:LICENSE[LICENSE] file in the root folder.\n ** The current Contributor License Agreement (CLA) only allows samples to be licensed under the Apache 2.0 license.\n ** Every source code file must have a Copyright notice and license at the top of the file as described below.\n ** Assets must have their own license.\n* Third party libraries:\n ** A sample may not depend on a separate installation of a third party library.\n ** Any third party library that is used needs to be available under a compatible open source license i.e.\nMIT or Apache 2.0.\n ** Any third party library that is used must be included as a sub-module in the `/third_party/` folder.\n\n== Copyright Notice and License Template\n\nTo apply the Apache 2.0 License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information for the copyright year or years.\n_Don't include the brackets!_ The text should be enclosed in the appropriate comment syntax for the file format.\nWe also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\nWhen contributing to an existing file you may add a new copyright year line under the existing ones.\n\n....\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n....\n\n== Code Style\n\nA common code style like, for instance, the one described by the https://google.github.io/styleguide/cppguide.html[Google C{pp} Style Guide] is recommended.\nA sample must consistently apply a single code style.\n\nA `.clang-format` file is included with this repository, please use `clang-format -style=file` to verify the code style.\nIt is recommended to use `clang-format-15`, which is compatible with the styles in our `.clang-format` file.\n\n== Procedure for Contributing\n\n. Fork the KhronosGroup/Vulkan-Samples repository.\n. Add the contribution to the new fork (see <<creating-a-sample,Creating a sample>>).\n. Make sure the above requirements are met.\n. Make sure the sample is in compliance with the Vulkan specification.\n. Make sure the sample code builds and runs on Windows, Linux, macOS and Android.\nIf you cannot verify on all these target platforms, please note platform restrictions in the sample's README.\n. Verify the sample against a recent version of the Vulkan validation layers, either built from source or from the most recent available Vulkan SDK.\n. Submit a pull request via github for the contribution, including electronically signing the Khronos Contributor License Agreement (CLA) for the repository using CLA-Assistant.\n\n== Code Reviews\n\nAll submissions, including those by project members, are subject to a code review by the Khronos Membership.\nGitHub pull requests are used to facilitate the review process, please submit a pull request with your contribution ready for review.\nFor more information on the review process visit this https://github.com/KhronosGroup/Vulkan-Samples/wiki/Review-Process[link].\n\n== Maintenance\n\nOnce a new sample is merged the author is expected to maintain it whenever possible.\nOtherwise they should identify a new maintainer that has agreed to take on the responsibility.\n"
        },
        {
          "name": "CONTRIBUTORS.adoc",
          "type": "blob",
          "size": 1.0703125,
          "content": "////\n- Copyright (c) 2019-2023, Arm Limited and Contributors\n-\n- SPDX-License-Identifier: Apache-2.0\n-\n- Licensed under the Apache License, Version 2.0 the \"License\";\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n-\n////\n= Contributors to the initial release (sorted alphabetically)\n\n* Adam Sawicki\n* Alon Or-bach\n* Antonio Caggiano\n* Attilio Provenzano\n* Gary Sweet\n* Ioan-Cristian Szabo\n* Jeff Bolz\n* Jose-Emilio Munoz-Lopez\n* Kris Rose\n* Lou Kramer\n* Marton Tamas\n* Matthew Rusch\n* Michael Parkin-White\n* Peter Harris\n* Ryan O'Shea\n* Sascha Willems\n* Spencer Fricke\n* Steven Winston\n* Tobias Hector\n* Tom Atkinson\n* Wasim Abbas\n* William Lohry\n* Zandro Fargnoli\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0888671875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 Wasim Abbas (Arm Limited)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 6.77734375,
          "content": "////\n- Copyright (c) 2019-2024, Arm Limited and Contributors\n-\n- SPDX-License-Identifier: Apache-2.0\n-\n- Licensed under the Apache License, Version 2.0 the \"License\";\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n-\n////\n= Vulkan Samples\n// omit in toc\n:pp: {plus}{plus}\nifndef::site-gen-antora[]\n:toc:\nendif::[]\n\nimage::banner.jpg[Vulkan Samples banner]\n\nifndef::site-gen-antora[]\n== Vulkan Documentation Site\n\nDocumentation for the samples is best viewed at the new link:https://docs.vulkan.org/samples/latest/README.html[Vulkan Documentation Site]. The documentation uses AsciiDoc which isn't fully supported by github.\n\nendif::[]\n\n== Introduction\n\nThe Vulkan Samples is collection of resources to help you develop optimized Vulkan applications.\n\nIf you are new to Vulkan the xref:samples/api/README.adoc[API samples] are the right place to start.\nAdditionally you may find the following links useful:\n\nifdef::site-gen-antora[]\n* xref:guide:ROOT:index.adoc[Vulkan Guide]\n* xref:tutorial:ROOT:00_Introduction.adoc[Get Started in Vulkan]\nendif::[]\n\nifndef::site-gen-antora[]\n* https://docs.vulkan.org/guide/latest/index.html[Vulkan Guide]\n* https://docs.vulkan.org/tutorial/latest/index.html[Get Started in Vulkan]\nendif::[]\n\nxref:samples/performance/README.adoc[Performance samples] show the recommended best practice together with real-time profiling information.\nThey are more advanced but also contain a detailed tutorial with more in-detail explanations.\n\n=== Goals\n\n* Create a collection of resources that demonstrate best-practice recommendations in Vulkan\n* Create tutorials that explain the implementation of best-practices and include performance analysis guides\n* Create a xref:framework/README.adoc[framework] that can be used as reference material and also as a sandbox for advanced experimentation with Vulkan\n\n== Samples\n\n* xref:./samples/README.adoc[Listing of all samples available in this repository]\n\n== General information\n\n* *Project Basics*\n ** xref:./docs/misc.adoc#controls[Controls]\n ** xref:./docs/misc.adoc#debug-window[Debug window]\n ** xref:./scripts/README.adoc[Create a Sample]\n* *Vulkan Essentials*\n ** xref:./samples/vulkan_basics.adoc[How does Vulkan compare to OpenGL ES?\nWhat should you expect when targeting Vulkan?]\n* *Misc*\n ** xref:./docs/misc.adoc#driver-version[Driver version]\n ** xref:./docs/memory_limits.adoc[Memory limits]\n\n== Setup\n\nPrerequisites: https://git-scm.com/downloads[git] with https://docs.github.com/en/repositories/working-with-files/managing-large-files/installing-git-large-file-storage[git large file storage (git-lfs)].\n\nClone the repo with submodules using the following command:\n\n----\ngit clone --recurse-submodules https://github.com/KhronosGroup/Vulkan-Samples.git\ncd Vulkan-Samples\n----\n\nFollow build instructions for your platform below.\n\n[NOTE]\n====\nThe full repository is very large, and some ISPs appear to have trouble\nproviding a robust connection to github while the clone is being made.\n\nIf you notice problems such as submodules downloading at reported rates in\nthe tens of kB/s, or fatal timeout errors occurring, these may be due to\nnetwork routing issues to github within your ISP's internal network, rather\nthan anything wrong in your own networking setup.\n\nIt can be very difficult to get ISPs to acknowledge such problems exist, much\nless to fix them.\n\nOne workaround is to switch the repository to use ssh protocol prior to the\nsubmodule download, which can be done via e.g.\n\n[source,sh]\n----\ngit clone git@github.com:KhronosGroup/Vulkan-Samples.git\ncd Vulkan-Samples\nperl -i -p -e 's|https://(.*?)/|git@\\1:|g' .gitmodules\ngit submodule sync\ngit submodule update\n----\n\nWhile this can be a good alternative if you are running into this connection\nissue, you must have GitHub ssh key authentication setup to use ssh\nprotocol - see\nlink:https://docs.github.com/en/authentication/connecting-to-github-with-ssh[Connecting\nto GitHub with SSH] for details.\nSo it is a not a solution we can implement as the repository default.\n\nAnother option which may help is to run github through a VPN service.\n====\n\n\n== Build\n\n=== Supported Platforms\n\n* Windows - xref:./docs/build.adoc#windows[Build Guide]\n* Linux - xref:./docs/build.adoc#linux[Build Guide]\n* Android - xref:./docs/build.adoc#android[Build Guide]\n* macOS - xref:./docs/build.adoc#macos[Build Guide]\n* iOS - xref:./docs/build.adoc#ios[Build Guide]\n\n== Usage\n\nThe following shows some example command line usage on how to configure and run the Vulkan Samples.\n\n> Make sure that you are running the samples from the root directory of the repository.\n> Otherwise the samples will not be able to find the assets.\n> ./build/app/bin/<BuildType>/<Arch>/vulkan_samples\n\n----\n# For the entire usage use\nvulkan_samples --help\n\n# For subcommand usage use\nvulkan_samples <sub_command> --help\n\n# Run Swapchain Images sample\nvulkan_samples sample swapchain_images\n\n# Run AFBC sample in benchmark mode for 5000 frames\nvulkan_samples sample afbc --benchmark --stop-after-frame 5000\n\n# Run compute nbody using headless_surface and take a screenshot of frame 5 \n# Note: headless_surface uses VK_EXT_headless_surface.\n# This will create a surface and a Swapchain, but present will be a no op.\n# The extension is supported by Swiftshader(https://github.com/google/swiftshader).\n# It allows to quickly test content in environments without a GPU.\nvulkan_samples sample compute_nbody --headless_surface -screenshot 5\n\n# Run all the performance samples for 10 seconds in each configuration\nvulkan_samples batch --category performance --duration 10\n\n# Run Swapchain Images sample on an Android device\nadb shell am start-activity -n com.khronos.vulkan_samples/com.khronos.vulkan_samples.SampleLauncherActivity -e sample swapchain_images\n----\n\n== License\n\nSee link:LICENSE[LICENSE].\n\nThis project has several xref:./third_party/README.adoc[third-party dependencies]\n\nThis project uses assets from https://github.com/KhronosGroup/Vulkan-Samples-Assets[vulkan-samples-assets].\nEach one has its own license.\n\n=== Trademarks\n\nVulkan is a registered trademark of the Khronos Group Inc.\n\n== Contributions\n\nDonated to Khronos by Arm, with further contributions by Sascha Willems and Adam Sawicki.\nSee xref:CONTRIBUTORS.adoc[CONTRIBUTORS] for the full contributor list.\n\nAlso see xref:CONTRIBUTING.adoc[CONTRIBUTING] for contribution guidelines.\n\n== Related resources\n\n* https://developer.arm.com/documentation/101897/latest/[Mali GPU Best Practices]: A document with recommendations for efficient API usage\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0478515625,
          "content": "theme: jekyll-theme-slate\nexclude: [third_party]\n"
        },
        {
          "name": "antora",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "commit",
          "content": null
        },
        {
          "name": "banner.jpg",
          "type": "blob",
          "size": 250.3759765625,
          "content": null
        },
        {
          "name": "bldsys",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "shaders",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}