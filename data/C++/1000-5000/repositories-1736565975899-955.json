{
  "metadata": {
    "timestamp": 1736565975899,
    "page": 955,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebookarchive/LogDevice",
      "stars": 1899,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0927734375,
          "content": ".git/\ndocker/\nlogdevice/build/\nlogdevice/external/folly/.git/\nlogdevice/external/rocksdb/.git/\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.291015625,
          "content": "_build/\n*~\n.DS_Store\nwebsite/translated_docs\nwebsite/build/\nwebsite/yarn.lock\nwebsite/node_modules\nwebsite/package-lock.json\nwebsite/i18n\nwebsite/i18n/*\n!website/i18n/en.json\nwebsite/yarn-error.log\nlogdevice_*.deb\nlogdevice_*.build\nlogdevice_*.buildinfo\nlogdevice_*.changes\nlogdevice-dbgsym_*.ddeb\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.5966796875,
          "content": "[submodule \"logdevice/external/rocksdb\"]\n\tpath = logdevice/external/rocksdb\n\turl = https://github.com/facebook/rocksdb/\n\tbranch = 6.6.fb\n[submodule \"logdevice/external/folly\"]\n\tpath = logdevice/external/folly\n\turl = https://github.com/facebook/folly/\n[submodule \"logdevice/external/fizz\"]\n\tpath = logdevice/external/fizz\n\turl = https://github.com/facebookincubator/fizz/\n[submodule \"logdevice/external/wangle\"]\n\tpath = logdevice/external/wangle\n\turl = https://github.com/facebook/wangle/\n[submodule \"logdevice/external/fbthrift\"]\n\tpath = logdevice/external/fbthrift\n\turl = https://github.com/facebook/fbthrift/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.31640625,
          "content": "# Facebook projects that use `fbcode_builder` for continuous integration\n# share this Travis configuration to run builds via Docker.\n\n# Docker disables IPv6 in containers by default. Enable it for unit tests that need [::1].\nbefore_script:\n  - if [[ \"$TRAVIS_OS_NAME\" != \"osx\" ]];\n    then\n      sudo build/fbcode_builder/docker_enable_ipv6.sh;\n    fi\n\nenv:\n  global:\n    - travis_cache_dir=$HOME/travis_ccache\n    # Travis times out after 50 minutes. Very generously leave 10 minutes\n    # for setup (e.g.  cache download, compression, and upload), so we never\n    # fail to cache the progress we made.\n    - docker_build_timeout=40m\n\ncache:\n  # Our build caches can be 200-300MB, so increase the timeout to 7 minutes\n  # to make sure we never fail to cache the progress we made.\n  timeout: 420\n  directories:\n  - $HOME/travis_ccache  # see docker_build_with_ccache.sh\n\n# Ugh, `services:` must be in the matrix, or we get `docker: command not found`\n#   https://github.com/travis-ci/travis-ci/issues/5142\nmatrix:\n  include:\n    - env: ['os_image=ubuntu:18.04', gcc_version=7]\n      services: [docker]\n\naddons:\n  apt:\n    packages: python2.7\n\nscript:\n  # We don't want to write the script inline because of Travis kludginess --\n  # it looks like it escapes \" and \\ in scripts when using `matrix:`.\n  - ./build/fbcode_builder/travis_docker_build.sh\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.01171875,
          "content": "logdevice.io"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.765625,
          "content": "# Contributing to LogDevice\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Our Development Process\nThe LogDevice source on GitHub is replicated from the internally\nmanaged LogDevice code. Pull requests are reviewed by the LogDevice team and,\nwhen accepted, imported to the internal version. Once the change is imported,\nexport to GitHub is automatically triggered, and the pull request is closed.\nBranch history may be \"squashed\" through this process, eliminating merges\nand resulting in a single commit.\n\nIn the open source build, most third-party libraries are expected to be\npreinstalled in system locations. The exceptions are:\n\n**folly** changes relatively often and we want to be mostly up-to-date with it.\nFor this reason we include it in our repository as a git submodule. The git\nsubmodule is updated as changes are made to folly. In practice this seems to\nhappen every few hours.\n\n**RocksDB**: We use features from newer versions or RocksDB than what\ndistributions prepackage. For this reason we include it in our repository as a\ngit submodule. The git submodule is manually updated as needed.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `master`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Test Suite\nTo build the test suite, after you have [run the build process](https://logdevice.io/docs/Installation.html),\nrun make from `LogDevice/_build` directory.\n\n```shell\nmake ARGS=\"-j 8\" test\n```\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## Coding Style\n\nFor the LogDevice C++ code a [clang-format](https://clang.llvm.org/docs/ClangFormat.html)\nfile has been provided, [logdevice/.clang-format](logdevice/.clang-format). For\nthe Python code in LogDevice we use python [black formatting](https://github.com/ambv/black).\nPlease ensure your code is formatted with the appropriate formatter before\nsubmitting the pull request.\n\n## Documentation\n\nThis web site is created with [Docusaurus](https://docusaurus.io/).\nThe simplest way to test documentation changes or changes to the structure\nof the site is to install Docusaurus locally as follows:\n\n* [install Node.js](https://nodejs.org/en/download/)\n* [install Yarn](https://yarnpkg.com/en/docs/install) (a package manager\nfor Node)\n\nDocusarus requires Node.js >= 8.2 and Yarn >= 1.5.\n\n* `cd LogDevice/website` (where `LogDevice` is the root of your local LogDevice\nsource tree)\n* `yarn add docusaurus --dev` This creates the LogDevice/website/node_modules\ndirectory with much Javascript. It may also update website/package.json with\nthe then-current version number of Docusaurus.\n\nTo start a Node.js server and load the doc site in a new browser tab,\n`cd LogDevice/website` and run `yarn run start`. To stop the server,\nCtrl+C the process.\n\nMost of the LogDevice documentation lives in `LogDevice/docs`. The API reference\nin `LogDevice/website/static/api` is generated with Doxygen.\n\n## License\nBy contributing to LogDevice, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.513671875,
          "content": "BSD License\n\nFor LogDevice software\n\nCopyright (c) 2017-present, Facebook, Inc. and its affiliates. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.259765625,
          "content": "# LogDevice\n[![Build Status](https://circleci.com/gh/facebookincubator/LogDevice.svg?style=shield&circle-token=1a68ba9a5f81ea693f341726bc4039980490f16e)](https://circleci.com/gh/facebookincubator/LogDevice) [![Gitter](https://badges.gitter.im/facebookincubator/LogDevice.svg)](https://gitter.im/facebookincubator/LogDevice?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n> Note: This is an archived project and is no longer supported or updated by Facebook.\n\nLogDevice is a scalable and fault tolerant distributed log system. While a\nfile-system stores and serves data organized as files, a log system stores and\ndelivers data organized as logs. The log can be viewed as a record-oriented,\nappend-only, and trimmable file.\n\nLogDevice is designed from the ground up to serve many types of logs with high\nreliability and efficiency at scale. It's also highly tunable, allowing each use\ncase to be optimized for the right set of trade-offs in the durability-efficiency\nand consistency-availability space. Here are some examples of workloads supported\n by LogDevice:\n\n* Write-ahead logging for durability\n* Transaction logging in a distributed database\n* Event logging\n* Stream processing\n* ML training pipelines\n* Replicated state machines\n* Journals of deferred work items\n\nFor full documentation, please visit [logdevice.io](https://logdevice.io/). \n\n## Requirements\nLogDevice is only supported on Ubuntu 18.04 (Bionic Beaver). However, it should\nbe possible to build it on any other Linux distribution without significant\nchallenges. LogDevice relies on some c++17 features, so building LogDevice\nrequires a compiler that supports c++17.\n\n## Quick Start\n* [Run a local cluster in Docker](https://logdevice.io/docs/LocalCluster.html)\n\n## Documentation\n* [Overview](https://logdevice.io/docs/Overview.html)\n* [Concepts and Architecture](https://logdevice.io/docs/Concepts.html)\n\n## Build LogDevice\n* [Build](https://logdevice.io/docs/Installation.html)\n\n## Join the LogDevice community\n* Facebook: [LogDevice Users Group](https://www.facebook.com/groups/logdevice.oss/)\n* [GitHub Issues](https://github.com/facebookincubator/LogDevice/issues)\n\n## Contributors\nSee the [CONTRIBUTING](CONTRIBUTING.md) file for how to help out.\n\n## License\nLogDevice is BSD licensed, as found in the [LICENSE](LICENSE) file.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "logdevice",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}