{
  "metadata": {
    "timestamp": 1736565327005,
    "page": 146,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ceres-solver/ceres-solver",
      "stars": 3939,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.16015625,
          "content": "BasedOnStyle: Google\nStandard: Cpp11\nBinPackArguments: false\nBinPackParameters: false\nPointerAlignment: Left\nDerivePointerAlignment: false\nCommentPragmas: NOLINT.*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2724609375,
          "content": "*~\n.*.swp\nCMakeLists.txt.user*\n*.kdev*\n*.bak\n*.orig\nbuild/\nbuild-release/\nbuild-debug/\ndocs/html\n*.aux\n*.blg\n*.toc\n*.fdb_latexmk\n*.bbl\n*.log\n*.synctex.gz\nceres.pdf\nceres-solver.pdf\ndocs/minted.sty\nobj/\njni/libs/\n.buildinfo\nbazel-*\n*.pyc\n.idea*\n\ncmake-build*\nsmall-blas-benchmarks"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2646484375,
          "content": "[submodule \"third_party/googletest\"]\n\tpath = third_party/googletest\n\turl = https://github.com/google/googletest.git\n\tbranch = v1.14.x\n[submodule \"third_party/abseil-cpp\"]\n\tpath = third_party/abseil-cpp\n\turl = https://github.com/abseil/abseil-cpp\n\tbranch = lts_2024_01_16\n"
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 6.046875,
          "content": "# Ceres Solver - A fast non-linear least squares minimizer\n# Copyright 2023 Google Inc. All rights reserved.\n# http://ceres-solver.org/\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# * Redistributions of source code must retain the above copyright notice,\n#   this list of conditions and the following disclaimer.\n# * Redistributions in binary form must reproduce the above copyright notice,\n#   this list of conditions and the following disclaimer in the documentation\n#   and/or other materials provided with the distribution.\n# * Neither the name of Google Inc. nor the names of its contributors may be\n#   used to endorse or promote products derived from this software without\n#   specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n# POSSIBILITY OF SUCH DAMAGE.\n#\n# Author: mierle@gmail.com (Keir Mierle)\n#\n# These are Bazel rules to build Ceres. It's currently in Alpha state, and does\n# not support parameterization around threading choice or sparse backends.\nload(\"//:bazel/ceres.bzl\", \"ceres_library\")\n\nceres_library(\n    name = \"ceres\",\n    restrict_schur_specializations = False,\n)\n\ncc_library(\n    name = \"test_util\",\n    srcs = [\"internal/ceres/\" + x for x in [\n        \"evaluator_test_utils.cc\",\n        \"numeric_diff_test_utils.cc\",\n        \"test_util.cc\",\n    ]],\n    copts = [\n        \"-Wno-sign-compare\",\n        \"-DCERES_TEST_SRCDIR_SUFFIX=\\\\\\\"_main/data/\\\\\\\"\",\n    ],\n    includes = [\n        \"internal\",\n        \"internal/ceres\",\n    ],\n    deps = [\n        \"//:ceres\",\n        \"@googletest//:gtest_main\",\n    ],\n)\n\nCERES_TESTS = [\n    \"array_utils\",\n    \"autodiff_cost_function\",\n    \"autodiff_manifold\",\n    \"autodiff\",\n    \"block_jacobi_preconditioner\",\n    \"block_random_access_dense_matrix\",\n    \"block_random_access_diagonal_matrix\",\n    \"block_random_access_sparse_matrix\",\n    \"block_sparse_matrix\",\n    \"canonical_views_clustering\",\n    \"c_api\",\n    \"compressed_col_sparse_matrix_utils\",\n    \"compressed_row_sparse_matrix\",\n    \"concurrent_queue\",\n    \"conditioned_cost_function\",\n    \"conjugate_gradients_solver\",\n    \"corrector\",\n    \"cost_function_to_functor\",\n    \"covariance\",\n    \"cubic_interpolation\",\n    \"dense_cholesky\",\n    \"dense_linear_solver\",\n    \"dense_sparse_matrix\",\n    \"detect_structure\",\n    \"dogleg_strategy\",\n    \"dynamic_autodiff_cost_function\",\n    \"dynamic_compressed_row_sparse_matrix\",\n    \"dynamic_numeric_diff_cost_function\",\n    \"dynamic_sparse_normal_cholesky_solver\",\n    \"dynamic_sparsity\",\n    \"evaluation_callback\",\n    \"evaluator\",\n    \"gradient_checker\",\n    \"gradient_checking_cost_function\",\n    \"gradient_problem_solver\",\n    \"gradient_problem\",\n    \"graph_algorithms\",\n    \"graph\",\n    \"householder_vector\",\n    \"implicit_schur_complement\",\n    \"inner_product_computer\",\n    \"invert_psd_matrix\",\n    \"is_close\",\n    \"iterative_refiner\",\n    \"iterative_schur_complement_solver\",\n    \"jet\",\n    \"levenberg_marquardt_strategy\",\n    \"line_search_minimizer\",\n    \"line_search_preprocessor\",\n    \"loss_function\",\n    \"minimizer\",\n    \"normal_prior\",\n    \"numeric_diff_cost_function\",\n    \"ordered_groups\",\n    \"parallel_for\",\n    \"parallel_utils\",\n    \"parameter_block_ordering\",\n    \"parameter_block\",\n    \"partitioned_matrix_view\",\n    \"polynomial\",\n    \"problem\",\n    \"program\",\n    \"reorder_program\",\n    \"residual_block\",\n    \"residual_block_utils\",\n    \"rotation\",\n    \"schur_complement_solver\",\n    \"schur_eliminator\",\n    \"single_linkage_clustering\",\n    \"small_blas\",\n    \"solver\",\n    \"sparse_cholesky\",\n    \"sparse_normal_cholesky_solver\",\n    \"subset_preconditioner\",\n    \"system\",\n    \"thread_pool\",\n    \"tiny_solver_autodiff_function\",\n    \"tiny_solver_cost_function_adapter\",\n    \"tiny_solver\",\n    \"triplet_sparse_matrix\",\n    \"trust_region_minimizer\",\n    \"trust_region_preprocessor\",\n    \"visibility_based_preconditioner\",\n    \"visibility\",\n]\n\nTEST_DEPS = [\n    \"//:ceres\",\n    \"//:test_util\",\n    \"@eigen//:eigen\",\n]\n\n# Instantiate all the tests with a template.\n[cc_test(\n    name = test_name + \"_test\",\n    timeout = \"short\",\n    srcs = [\"internal/ceres/\" + test_name + \"_test.cc\"],\n    deps = TEST_DEPS,\n) for test_name in CERES_TESTS]\n\n# Instantiate all the bundle adjustment tests. These are separate to\n# parallelize the execution of the tests; otherwise the tests take a long time.\n#\n# Note: While it is possible to run the Python script to generate the .cc files\n# as part of the build, it introduces an undesirable build-time Python\n# dependency that we'd prefer to avoid.\n[cc_test(\n    name = test_filename.split(\"/\")[-1][:-3],  # Remove .cc.\n    timeout = \"long\",\n    srcs = [test_filename],\n    # This is the data set that is bundled for the testing.\n    data = [\":data/problem-16-22106-pre.txt\"],\n    deps = TEST_DEPS,\n) for test_filename in glob([\n    \"internal/ceres/generated_bundle_adjustment_tests/*_test.cc\",\n])]\n\n# Build the benchmarks.\n[cc_binary(\n    name = benchmark_name,\n    srcs = [\"internal/ceres/\" + benchmark_name + \".cc\"],\n    copts = [\"-mllvm -inlinehint-threshold=1000000\"],\n    deps = TEST_DEPS + [\"@google_benchmark//:benchmark\"],\n\n) for benchmark_name in [\n    \"evaluation_benchmark\",\n    \"invert_psd_matrix_benchmark\",\n    \"schur_eliminator_benchmark\",\n    \"jet_operator_benchmark\",\n    \"dense_linear_solver_benchmark\",\n    \"parallel_vector_operations_benchmark\",\n    \"small_blas_gemm_benchmark\",\n    \"small_blas_gemv_benchmark\",\n]]\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.439453125,
          "content": "cff-version: 1.2.0\nmessage: If you use Ceres Solver for a publication, please cite it as below.\ntitle: Ceres Solver\nabstract: A large scale non-linear optimization library\nauthors:\n- family-names: Agarwal\n  given-names: Sameer\n- family-names: Mierle\n  given-names: Keir\n- name: The Ceres Solver Team\nversion: 2.2\ndate-released: 2023-10-13\nlicense: Apache-2.0\nrepository-code: https://github.com/ceres-solver/ceres-solver\nurl: http://ceres-solver.org\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 36.24609375,
          "content": "# Ceres Solver - A fast non-linear least squares minimizer\n# Copyright 2024 Google Inc. All rights reserved.\n# http://ceres-solver.org/\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# * Redistributions of source code must retain the above copyright notice,\n#   this list of conditions and the following disclaimer.\n# * Redistributions in binary form must reproduce the above copyright notice,\n#   this list of conditions and the following disclaimer in the documentation\n#   and/or other materials provided with the distribution.\n# * Neither the name of Google Inc. nor the names of its contributors may be\n#   used to endorse or promote products derived from this software without\n#   specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n# POSSIBILITY OF SUCH DAMAGE.\n#\n# Authors: keir@google.com (Keir Mierle)\n#          alexs.mac@gmail.com (Alex Stewart)\n\ncmake_minimum_required(VERSION 3.16...3.29)\nproject(Ceres C CXX)\n\n# Always build position-independent code (PIC), even when building Ceres as a\n# static library so that shared libraries can link against it, not just\n# executables (PIC does not apply on Windows). Global variable can be overridden\n# by the user whereas target properties can be not.\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\n# NOTE: The 'generic' CMake variables CMAKE_[SOURCE/BINARY]_DIR should not be\n#       used.  Always use the project-specific variants (generated by CMake):\n#       <PROJECT_NAME_MATCHING_CASE>_[SOURCE/BINARY]_DIR, e.g.\n#       Ceres_SOURCE_DIR (note, *not* CERES_SOURCE_DIR) instead, as these will\n#       always point to the correct directories for the Ceres project, even if\n#       it is nested inside another source tree, whereas the 'generic'\n#       CMake variables refer to the *first* project() declaration, i.e. the\n#       top-level project, not Ceres, if Ceres is nested.\n\n# Make CMake aware of the cmake folder for local FindXXX scripts,\n# append rather than set in case the user has passed their own\n# additional paths via -D.\nlist(APPEND CMAKE_MODULE_PATH \"${Ceres_SOURCE_DIR}/cmake\")\ninclude(AddCompileFlagsIfSupported)\ninclude(CheckCXXCompilerFlag)\ninclude(CheckLibraryExists)\ninclude(GNUInstallDirs)\ninclude(UpdateCacheVariable)\n\ncheck_cxx_compiler_flag(/bigobj HAVE_BIGOBJ)\ncheck_library_exists(m pow \"\" HAVE_LIBM)\n\n# Xcode 11.0-1 with macOS 10.15 (Catalina) broke alignment.\ninclude(DetectBrokenStackCheckMacOSXcodePairing)\ndetect_broken_stack_check_macos_xcode_pairing()\n\n# Set up the git hook to make Gerrit Change-Id: lines in commit messages.\ninclude(AddGerritCommitHook)\nadd_gerrit_commit_hook(${Ceres_SOURCE_DIR} ${Ceres_BINARY_DIR})\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${Ceres_BINARY_DIR}/bin)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${Ceres_BINARY_DIR}/lib)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${Ceres_BINARY_DIR}/lib)\n# Set postfixes for generated libraries based on buildtype.\nset(CMAKE_RELEASE_POSTFIX \"\")\nset(CMAKE_DEBUG_POSTFIX \"-debug\")\n\n# Read the Ceres version from the source, such that we only ever have a single\n# definition of the Ceres version.\ninclude(ReadCeresVersionFromSource)\nread_ceres_version_from_source(${Ceres_SOURCE_DIR})\n\nenable_testing()\n\ninclude(CMakeDependentOption)\ninclude(PrettyPrintCMakeList)\n\noption(SUITESPARSE \"Enable SuiteSparse.\" ON)\nif (APPLE)\n  option(ACCELERATESPARSE\n    \"Enable use of sparse solvers in Apple's Accelerate framework.\" ON)\n  option(ENABLE_BITCODE\n    \"Enable bitcode for iOS builds (disables inline optimizations for Eigen).\" OFF)\nendif()\n# We can't have an option called 'CUDA' since that is a reserved word -- a\n# language definition.\nset(USE_CUDA \"default\" CACHE STRING \"Enable use of CUDA linear algebra solvers.\")\noption(LAPACK \"Enable use of LAPACK directly within Ceres.\" ON)\n# Template specializations for the Schur complement based solvers. If\n# compile time, binary size or compiler performance is an issue, you\n# may consider disabling this.\noption(SCHUR_SPECIALIZATIONS \"Enable fixed-size schur specializations.\" ON)\noption(CUSTOM_BLAS\n       \"Use handcoded BLAS routines (usually faster) instead of Eigen.\"\n       ON)\n# Enable the use of Eigen as a sparse linear algebra library for\n# solving the nonlinear least squares problems.\noption(EIGENSPARSE \"Enable Eigen as a sparse linear algebra library.\" ON)\ncmake_dependent_option(EIGENMETIS \"Enable Eigen METIS support.\" ON EIGENSPARSE OFF)\noption(EXPORT_BUILD_DIR\n  \"Export build directory using CMake (enables external use without install).\" OFF)\noption(BUILD_TESTING \"Enable tests\" ON)\noption(BUILD_DOCUMENTATION \"Build User's Guide (html)\" OFF)\noption(BUILD_EXAMPLES \"Build examples\" ON)\noption(BUILD_BENCHMARKS \"Build Ceres benchmarking suite\" ON)\noption(BUILD_SHARED_LIBS \"Build Ceres as a shared library.\" OFF)\noption(PROVIDE_UNINSTALL_TARGET \"Add a custom target to ease removal of installed targets\" ON)\nset(SANITIZERS \"\" CACHE STRING \"Semicolon-separated list of sanitizers to use (e.g address, memory, thread)\")\ninclude(EnableSanitizer)\nenable_sanitizer(${SANITIZERS})\nif (ANDROID)\n  option(ANDROID_STRIP_DEBUG_SYMBOLS \"Strip debug symbols from Android builds (reduces file sizes)\" ON)\nendif()\n\n# Abseil\nif (EXISTS \"${Ceres_SOURCE_DIR}/third_party/abseil-cpp/CMakeLists.txt\")\n  # extract submodule absl_VERSION\n  file(STRINGS \"${Ceres_SOURCE_DIR}/third_party/abseil-cpp/CMakeLists.txt\" project_calls REGEX \"[ \\t]*project\\\\([ \\t]*absl\")\n  foreach(project_call IN LISTS project_calls)\n    string(REGEX MATCH \"VERSION[ ]+([0-9]+(\\.(rc)?[0-9]+)?)\" version_param \"${project_call}\")\n      if (version_param)\n        set(absl_VERSION \"${CMAKE_MATCH_1}\")\n        message(\"-- Using the version of abseil in ceres-solver/third_party/abseil-cpp with version ${absl_VERSION}\")\n        break ()\n      endif()\n  endforeach()\n  unset(project_calls)\n  unset(project_call)\n  unset(version_param)\n  if (NOT absl_VERSION)\n    message(\"-- Using the version of abseil in ceres-solver/third_party/abseil-cpp\")\n  endif()\n\n  # In the normal course of things, we would not need the following constraint.\n  # However, if we do not set the standard, then std::basic_string_view is not\n  # available, which absl depends on and linking the test fails.\n  set(CMAKE_CXX_STANDARD 17)\n  # Abseil does not handle symbol visibility correctly. As a workaround, we let it\n  # expose all the symbols to avoid linker errors.\n  set(CMAKE_CXX_VISIBILITY_PRESET default)\n  # ABSL plans to enable this flag to be on by default in the future. If it is not\n  # set, then it issues a warning. We force enable it, both to silence the warning\n  # but to also be safe going forward.\n\n  option(ABSL_PROPAGATE_CXX_STD \"Use CMake C++ standard meta features\n  (e.g. cxx_std_14) that propagate to targets that link to Abseil\" ON)\n  option(ABSL_ENABLE_INSTALL \"Enable install rules\" ON)\n\n  add_subdirectory(third_party/abseil-cpp)\n\n  unset(CMAKE_CXX_STANDARD)\n  unset(CMAKE_CXX_VISIBILITY_PRESET)\n\n  # Set the default symbol visibility to hidden to unify the behavior among\n  # the various compilers and to get smaller binaries\n  set(CMAKE_C_VISIBILITY_PRESET hidden)\n  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n  set(CMAKE_VISIBILITY_INLINES_HIDDEN ON)\n\n  set(CERES_USE_SYSTEM_ABSL NO)\nelse()\n  message(\"-- ceres-solver/third_party/abseil-cpp is empty, so falling back to system installed abseil\")\n  find_package(absl REQUIRED 20240116)\n  message(\"-- Found abseil version ${absl_VERSION}: ${absl_DIR}\")\n  if (NOT absl_VERSION)\n    # In some installs, abseil will not export the version number, in\n    # which case we check for vlog_is_on, which is a feature we need\n    # before being able to use abseil.\n    if (NOT TARGET absl::absl_vlog_is_on)\n      message(FATAL_ERROR \"The version of abseil installed on the system provides no version info and is missing TARGET 'absl::absl_vlog_is_on', need at least 20240116\")\n    endif()\n  endif()\n  set(CERES_USE_SYSTEM_ABSL YES)\nendif()\nif (NOT absl_VERSION)\n  if (EXPORT_BUILD_DIR)\n    message(FATAL_ERROR \"Cannot generate CeresConfig.cmake due to missing Abseil version. Using resulting package configuration will likely result in integration errors. Set absl_VERSION manually to disable this error message\")\n  endif()\n  install (CODE [=[message (FATAL_ERROR \"Cannot generate CeresConfig.cmake due to missing Abseil version. Using resulting package configuration will likely result in integration errors. Set absl_VERSION manually to disable this error message.\")]=])\nendif()\n\n# Google Test\nif (BUILD_TESTING)\n  if (EXISTS \"${Ceres_SOURCE_DIR}/third_party/googletest/CMakeLists.txt\")\n    message(\"-- Using the version of googletest in ceres-solver/third_party/googletest\")\n    # Now that we have absl as a dependency, it would make sense to tell\n    # googletest to use absl also, but doing so seems to be problematic\n    # for now, since if there is a version of absl and re2 installed in\n    # the system then we start getting errors because we maybe using the\n    # absl from our submodule, but the re2 installed on the system only\n    # sees the absl installed on the system. It is possible that we will\n    # need to include re2 as a submodule also, for the following to\n    # work.\n\n    # set(GTEST_HAS_ABSL ON CACHE BOOL \"Use ABSL when building gtest\")\n    add_subdirectory(${Ceres_SOURCE_DIR}/third_party/googletest ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/googletest)\n  else()\n    message(\"-- ceres-solver/third_party/googletest is empty, so falling back to system installed googletest\")\n    find_package(GTest 1.14.0 REQUIRED)\n  endif()\nendif(BUILD_TESTING)\n\n# IOS is defined iff using the iOS.cmake CMake toolchain to build a static\n# library for iOS.\nif (IOS)\n  message(STATUS \"Building Ceres for iOS platform: ${IOS_PLATFORM}\")\n\n  # Ceres requires at least iOS 7.0+.\n  if (IOS_DEPLOYMENT_TARGET VERSION_LESS 7.0)\n    message(FATAL_ERROR \"Unsupported iOS version: ${IOS_DEPLOYMENT_TARGET}, Ceres \"\n      \"requires at least iOS version 7.0\")\n  endif()\n\n  # Apple claims that the BLAS call dsyrk_ is a private API, and will not allow\n  # you to submit to the Apple Store if the symbol is present.\n  update_cache_variable(LAPACK OFF)\n  message(STATUS \"Building for iOS: SuiteSparse, LAPACK are not available.\")\n\n  update_cache_variable(BUILD_EXAMPLES OFF)\n  message(STATUS \"Building for iOS: Will not build examples.\")\nendif (IOS)\n\nunset(CERES_COMPILE_OPTIONS)\n\n# Eigen.\n# Eigen delivers Eigen3Config.cmake since v3.3.3\nfind_package(Eigen3 3.3 REQUIRED)\nif (Eigen3_FOUND)\n  message(\"-- Found Eigen version ${Eigen3_VERSION}: ${Eigen3_DIR}\")\n  if (CMAKE_SYSTEM_PROCESSOR MATCHES \"^(aarch64.*|AARCH64.*)\" AND\n      Eigen3_VERSION VERSION_LESS 3.3.4)\n    # As per issue #289: https://github.com/ceres-solver/ceres-solver/issues/289\n    # the bundle_adjustment_test will fail for Eigen < 3.3.4 on aarch64.\n    message(FATAL_ERROR \"-- Ceres requires Eigen version >= 3.3.4 on aarch64. \"\n      \"Detected version of Eigen is: ${Eigen3_VERSION}.\")\n  endif()\n\n  if (EIGENSPARSE)\n    message(\"-- Enabling use of Eigen as a sparse linear algebra library.\")\n    list(APPEND CERES_COMPILE_OPTIONS CERES_USE_EIGEN_SPARSE)\n  else (EIGENSPARSE)\n    message(\"-- Disabling use of Eigen as a sparse linear algebra library.\")\n    message(\"   This does not affect the covariance estimation algorithm \")\n    message(\"   which can still use the EIGEN_SPARSE_QR algorithm.\")\n    add_definitions(-DEIGEN_MPL2_ONLY)\n  endif (EIGENSPARSE)\nendif (Eigen3_FOUND)\n\nif (CMAKE_VERSION VERSION_LESS 3.17)\n  set_property(CACHE USE_CUDA PROPERTY STRINGS OFF default)\nelse (CMAKE_VERSION VERSION_LESS 3.17)\n  set_property(CACHE USE_CUDA PROPERTY STRINGS OFF default static)\nendif (CMAKE_VERSION VERSION_LESS 3.17)\n\nif (USE_CUDA)\n  if (CMAKE_VERSION VERSION_LESS 3.17)\n    # On older versions of CMake (20.04 default is 3.16) FindCUDAToolkit was\n    # not available, but FindCUDA was deprecated. To avoid special-case handling\n    # elsewhere, emulate the effects of FindCUDAToolkit locally in terms of the\n    # expected CMake imported targets and defined variables. This can be removed\n    # from as soon as the min CMake version is >= 3.17.\n    find_package(CUDA QUIET)\n    if (CUDA_FOUND)\n      message(\"-- Found CUDA version ${CUDA_VERSION} installed in: \"\n        \"${CUDA_TOOLKIT_ROOT_DIR} via legacy (< 3.17) CMake module. \"\n        \"Using the legacy CMake module means that any installation of \"\n        \"Ceres will require that the CUDA libraries be installed in a \"\n        \"location included in the LD_LIBRARY_PATH.\")\n      enable_language(CUDA)\n\n      macro(DECLARE_IMPORTED_CUDA_TARGET COMPONENT)\n        add_library(CUDA::${COMPONENT} INTERFACE IMPORTED)\n        target_include_directories(\n          CUDA::${COMPONENT} INTERFACE ${CUDA_INCLUDE_DIRS})\n        target_link_libraries(\n          CUDA::${COMPONENT} INTERFACE ${CUDA_${COMPONENT}_LIBRARY} ${ARGN})\n      endmacro()\n\n      declare_imported_cuda_target(cublas)\n      declare_imported_cuda_target(cusolver)\n      declare_imported_cuda_target(cusparse)\n      declare_imported_cuda_target(cudart ${CUDA_LIBRARIES})\n\n      set(CERES_CUDA_TARGET_SUFFIX \"\")\n      set(CUDAToolkit_BIN_DIR ${CUDA_TOOLKIT_ROOT_DIR}/bin)\n\n    else (CUDA_FOUND)\n      message(\"-- Did not find CUDA, disabling CUDA support.\")\n      update_cache_variable(USE_CUDA OFF)\n    endif (CUDA_FOUND)\n  else (CMAKE_VERSION VERSION_LESS 3.17)\n    find_package(CUDAToolkit QUIET)\n    if (CUDAToolkit_FOUND)\n      message(\"-- Found CUDA version ${CUDAToolkit_VERSION} installed in: \"\n        \"${CUDAToolkit_TARGET_DIR}\")\n      set(CUDAToolkit_DEPENDENCY\n        \"find_dependency(CUDAToolkit ${CUDAToolkit_VERSION})\")\n      enable_language(CUDA)\n      if (CMAKE_VERSION VERSION_GREATER_EQUAL \"3.18\")\n        # Support Maxwell GPUs (Default).\n        set(CMAKE_CUDA_ARCHITECTURES \"50\")\n        # Support other architectures depending on CUDA toolkit version.\n        if (CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"8.0\")\n          # Support Pascal GPUs.\n          list(APPEND CMAKE_CUDA_ARCHITECTURES \"60\")\n        endif(CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"8.0\")\n        if (CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"9.0\")\n          # Support Volta GPUs.\n          list(APPEND CMAKE_CUDA_ARCHITECTURES \"70\")\n        endif(CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"9.0\")\n        if (CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"10.0\")\n          # Support Turing  GPUs.\n          list(APPEND CMAKE_CUDA_ARCHITECTURES \"75\")\n        endif(CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"10.0\")\n        if (CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"11.0\")\n          # Support Ampere GPUs.\n          list(APPEND CMAKE_CUDA_ARCHITECTURES \"80\")\n        endif(CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"11.0\")\n        if (CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"11.8\")\n          # Support Hopper GPUs.\n          list(APPEND CMAKE_CUDA_ARCHITECTURES \"90\")\n        endif(CUDAToolkit_VERSION VERSION_GREATER_EQUAL \"11.8\")\n        message(\"-- Setting CUDA Architecture to ${CMAKE_CUDA_ARCHITECTURES}\")\n      endif()\n\n      if (USE_CUDA STREQUAL \"static\")\n        set(CERES_CUDA_TARGET_SUFFIX \"_static\")\n      else (USE_CUDA STREQUAL \"static\")\n        set(CERES_CUDA_TARGET_SUFFIX \"\")\n      endif (USE_CUDA STREQUAL \"static\")\n    else (CUDAToolkit_FOUND)\n      message(\"-- Did not find CUDA, disabling CUDA support.\")\n      update_cache_variable(USE_CUDA OFF)\n    endif (CUDAToolkit_FOUND)\n  endif (CMAKE_VERSION VERSION_LESS 3.17)\nendif (USE_CUDA)\n\nif (USE_CUDA)\n  list(APPEND CERES_CUDA_LIBRARIES\n    CUDA::cublas${CERES_CUDA_TARGET_SUFFIX}\n    CUDA::cudart${CERES_CUDA_TARGET_SUFFIX}\n    CUDA::cusolver${CERES_CUDA_TARGET_SUFFIX}\n    CUDA::cusparse${CERES_CUDA_TARGET_SUFFIX})\n\n  find_package(cudss CONFIG)\n  if (cudss_FOUND)\n    set(cudss_DEPENDENCY \"find_dependency(cudss ${cudss_VERSION})\")\n    list(APPEND CERES_CUDA_LIBRARIES cudss${CERES_CUDA_TARGET_SUFFIX})\n  else (cudss_FOUND)\n    list(APPEND CERES_COMPILE_OPTIONS CERES_NO_CUDSS)\n    message(\"-- Did not find cuDSS, SPARSE_SCHUR and SPARSE_NORMAL_CHOLESKY with CUDA_SPARSE will not be available.\")\n  endif (cudss_FOUND)\n\n  unset (CERES_CUDA_TARGET_SUFFIX)\n  set(CMAKE_CUDA_RUNTIME_LIBRARY NONE)\nelse (USE_CUDA)\n  message(\"-- Building without CUDA.\")\n  list(APPEND CERES_COMPILE_OPTIONS CERES_NO_CUDSS)\n  list(APPEND CERES_COMPILE_OPTIONS CERES_NO_CUDA)\nendif (USE_CUDA)\n\nif (LAPACK)\n  find_package(LAPACK QUIET)\n  if (LAPACK_FOUND)\n    message(\"-- Found LAPACK library: ${LAPACK_LIBRARIES}\")\n  else (LAPACK_FOUND)\n    message(\"-- Did not find LAPACK library, disabling LAPACK support.\")\n    update_cache_variable(LAPACK OFF)\n    list(APPEND CERES_COMPILE_OPTIONS CERES_NO_LAPACK)\n  endif (LAPACK_FOUND)\nelse (LAPACK)\n  message(\"-- Building without LAPACK.\")\n  list(APPEND CERES_COMPILE_OPTIONS CERES_NO_LAPACK)\nendif (LAPACK)\n\n# Set the install path for the installed CeresConfig.cmake configuration file\n# relative to CMAKE_INSTALL_PREFIX.\nset(RELATIVE_CMAKECONFIG_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/Ceres)\n\nif (SUITESPARSE)\n  # By default, if SuiteSparse and all dependencies are found, Ceres is\n  # built with SuiteSparse support.\n\n  # Check for SuiteSparse and dependencies.\n  find_package(SuiteSparse 4.5.6 COMPONENTS CHOLMOD SPQR\n    OPTIONAL_COMPONENTS Partition)\n  if (SuiteSparse_FOUND)\n    set(SuiteSparse_DEPENDENCY \"find_dependency(SuiteSparse ${SuiteSparse_VERSION})\")\n    # By default, if all of SuiteSparse's dependencies are found, Ceres is\n    # built with SuiteSparse support.\n    message(\"-- Found SuiteSparse ${SuiteSparse_VERSION}, \"\n            \"building with SuiteSparse.\")\n\n    if (SuiteSparse_VERSION VERSION_LESS 7.4.0)\n      list(APPEND CERES_COMPILE_OPTIONS CERES_NO_CHOLMOD_FLOAT)\n    else()\n      message(\"-- CHOLMOD supports single precision factorization\")\n    endif()\n    if (SuiteSparse_NO_CMAKE OR NOT SuiteSparse_DIR)\n      install(FILES ${Ceres_SOURCE_DIR}/cmake/FindSuiteSparse.cmake\n                    ${Ceres_SOURCE_DIR}/cmake/FindMETIS.cmake\n              DESTINATION ${RELATIVE_CMAKECONFIG_INSTALL_DIR})\n    endif (SuiteSparse_NO_CMAKE OR NOT SuiteSparse_DIR)\n  else (SuiteSparse_FOUND)\n    # Disable use of SuiteSparse if it cannot be found and continue.\n    message(\"-- Did not find all SuiteSparse dependencies, disabling \"\n      \"SuiteSparse support.\")\n    update_cache_variable(SUITESPARSE OFF)\n    list(APPEND CERES_COMPILE_OPTIONS CERES_NO_SUITESPARSE)\n  endif (SuiteSparse_FOUND)\nelse (SUITESPARSE)\n  message(\"-- Building without SuiteSparse.\")\n  list(APPEND CERES_COMPILE_OPTIONS CERES_NO_SUITESPARSE)\nendif (SUITESPARSE)\n\nif (NOT SuiteSparse_Partition_FOUND)\n  list (APPEND CERES_COMPILE_OPTIONS CERES_NO_CHOLMOD_PARTITION)\nendif (NOT SuiteSparse_Partition_FOUND)\n\nif (EIGENMETIS)\n  find_package (METIS)\n  if (METIS_FOUND)\n    # Since METIS is a private dependency of Ceres, it requires access to the\n    # link-only METIS::METIS target to avoid undefined linker errors in projects\n    # relying on Ceres. We do not actually need to propagate anything besides\n    # the link libraries (such as include directories.)\n    set(METIS_DEPENDENCY \"find_dependency(METIS ${METIS_VERSION})\")\n    # METIS find module must be installed unless a package config is being used.\n    if (NOT METIS_DIR)\n      install(FILES ${Ceres_SOURCE_DIR}/cmake/FindMETIS.cmake\n              DESTINATION ${RELATIVE_CMAKECONFIG_INSTALL_DIR})\n    endif (NOT METIS_DIR)\n  else (METIS_FOUND)\n    message(\"-- Did not find METIS, disabling Eigen METIS support.\")\n    update_cache_variable(EIGENMETIS OFF)\n    list (APPEND CERES_COMPILE_OPTIONS CERES_NO_EIGEN_METIS)\n  endif (METIS_FOUND)\nelse (EIGENMETIS)\n  message(\"-- Building without Eigen METIS support.\")\n  list (APPEND CERES_COMPILE_OPTIONS CERES_NO_EIGEN_METIS)\nendif (EIGENMETIS)\n\nif (ACCELERATESPARSE)\n  find_package(AccelerateSparse)\n  if (AccelerateSparse_FOUND)\n    message(\"-- Found Apple's Accelerate framework with sparse solvers, \"\n      \"building with Accelerate sparse support.\")\n  else()\n    message(\"-- Failed to find Apple's Accelerate framework with sparse solvers, \"\n      \"building without Accelerate sparse support.\")\n    update_cache_variable(ACCELERATESPARSE OFF)\n    list(APPEND CERES_COMPILE_OPTIONS CERES_NO_ACCELERATE_SPARSE)\n  endif()\nelse()\n  message(\"-- Building without Apple's Accelerate sparse support.\")\n  list(APPEND CERES_COMPILE_OPTIONS CERES_NO_ACCELERATE_SPARSE)\n  mark_as_advanced(FORCE AccelerateSparse_INCLUDE_DIR\n                         AccelerateSparse_LIBRARY)\nendif()\n\n# Ensure that the user understands they have disabled all sparse libraries.\nif (NOT SUITESPARSE AND NOT EIGENSPARSE AND NOT ACCELERATESPARSE AND NOT cudss_FOUND)\n  message(\"   ===============================================================\")\n  message(\"   Compiling without any sparse library: SuiteSparse, EigenSparse\")\n  message(\"   Apple's Accelerate & cuDSS are all disabled or unavailable.  \")\n  message(\"   No sparse linear solvers (SPARSE_NORMAL_CHOLESKY & SPARSE_SCHUR)\")\n  message(\"   will be available when Ceres is used.\")\n  message(\"   ===============================================================\")\nendif()\n\n# ANDROID define is set by the Android CMake toolchain file.\nif (ANDROID)\n  message(\"  ================================================================\")\n  if (ANDROID_STRIP_DEBUG_SYMBOLS)\n    # Strip debug information unconditionally to avoid +200MB library file sizes.\n    set( CMAKE_EXE_LINKER_FLAGS  \"${CMAKE_EXE_LINKER_FLAGS} -s\" )\n    set( CMAKE_SHARED_LINKER_FLAGS  \"${CMAKE_SHARED_LINKER_FLAGS} -s\" )\n    message(\"  Stripping debug information from Android build of Ceres library \")\n    message(\"  to avoid +200MB library files.\")\n  else()\n    message(\"  Warning: not stripping debug information from Android build of \")\n    message(\"  Ceres library.  This will result in a large (+200MB) library.\")\n  endif()\n  message(\"\")\n  message(\"  You can control whether debug information is stripped via the \")\n  message(\"  ANDROID_STRIP_DEBUG_SYMBOLS CMake option when configuring Ceres.\")\n  message(\"  ================================================================\")\nendif()\n\nif (NOT SCHUR_SPECIALIZATIONS)\n  list(APPEND CERES_COMPILE_OPTIONS CERES_RESTRICT_SCHUR_SPECIALIZATION)\n  message(\"-- Disabling Schur specializations (faster compiles)\")\nendif (NOT SCHUR_SPECIALIZATIONS)\n\nif (NOT CUSTOM_BLAS)\n  list(APPEND CERES_COMPILE_OPTIONS CERES_NO_CUSTOM_BLAS)\n  message(\"-- Disabling custom blas\")\nendif (NOT CUSTOM_BLAS)\n\nif (BUILD_BENCHMARKS)\n  # Version 1.3 was first to provide import targets\n  find_package(benchmark 1.3 QUIET)\n  if (benchmark_FOUND)\n     message(\"-- Found Google benchmark library. Building Ceres benchmarks.\")\n  else()\n     message(\"-- Failed to find Google benchmark library, disabling build of benchmarks.\")\n     update_cache_variable(BUILD_BENCHMARKS OFF)\n  endif()\n  mark_as_advanced(benchmark_DIR)\nendif()\n\n# TODO Report features using the FeatureSummary CMake module\nif (BUILD_SHARED_LIBS)\n  message(\"-- Building Ceres as a shared library.\")\nelse (BUILD_SHARED_LIBS)\n  message(\"-- Building Ceres as a static library.\")\nendif (BUILD_SHARED_LIBS)\n\n# Change the default build type from Debug to Release, while still\n# supporting overriding the build type.\n#\n# The CACHE STRING logic here and elsewhere is needed to force CMake\n# to pay attention to the value of these variables.\nif (NOT CMAKE_BUILD_TYPE)\n  message(\"-- No build type specified; defaulting to CMAKE_BUILD_TYPE=Release.\")\n  set(CMAKE_BUILD_TYPE Release CACHE STRING\n    \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.\"\n    FORCE)\nelse (NOT CMAKE_BUILD_TYPE)\n  if (CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n    message(\"\\n=================================================================================\")\n    message(\"\\n-- Build type: Debug. Performance will be terrible!\")\n    message(\"-- Add -DCMAKE_BUILD_TYPE=Release to the CMake command line to get an optimized build.\")\n    message(\"\\n=================================================================================\")\n  endif (CMAKE_BUILD_TYPE STREQUAL \"Debug\")\nendif (NOT CMAKE_BUILD_TYPE)\n\nif (MINGW)\n  # MinGW produces code that segfaults when performing matrix multiplications\n  # in Eigen when compiled with -O3 (see [1]), as such force the use of -O2\n  # which works.\n  #\n  # [1] http://eigen.tuxfamily.org/bz/show_bug.cgi?id=556\n  message(\"-- MinGW detected, forcing -O2 instead of -O3 in Release for Eigen due \"\n          \"to a MinGW bug: http://eigen.tuxfamily.org/bz/show_bug.cgi?id=556\")\n  string(REPLACE \"-O3\" \"-O2\" CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n  update_cache_variable(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\nendif (MINGW)\n\n# After the tweaks for the compile settings, disable some warnings on MSVC.\nif (MSVC)\n  # Insecure standard library functions\n  add_compile_definitions(_CRT_SECURE_NO_WARNINGS)\n  # std::numeric_limits<T>::has_denorm is deprecated in C++23\n  add_compile_definitions($<$<COMPILE_LANGUAGE:CXX>:_SILENCE_CXX23_DENORM_DEPRECATION_WARNING>)\n  # std::aligned_storage is deprecated in C++23\n  add_compile_definitions($<$<COMPILE_LANGUAGE:CXX>:_SILENCE_CXX23_ALIGNED_STORAGE_DEPRECATION_WARNING>)\n  # Disable signed/unsigned int conversion warnings.\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/wd4018>)\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/wd4267>)\n  # Disable warning about using struct/class for the same symbol.\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/wd4099>)\n  # Disable performance warning about int-to-bool conversion.\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/wd4800>)\n  # Disable warning about int64 to int32 conversion. Disabling\n  # this warning may not be correct; needs investigation.\n  # TODO(keir): Investigate these warnings in more detail.\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/wd4244>)\n  # It's not possible to use STL types in DLL interfaces in a portable and\n  # reliable way. However, that's what happens with Google Log and Google Flags\n  # on Windows. MSVC gets upset about this and throws warnings that we can't do\n  # much about. The real solution is to link static versions of Google Log and\n  # Google Test, but that seems tricky on Windows. So, disable the warning.\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/wd4251>)\n\n  # Add bigobj flag otherwise the build would fail due to large object files\n  # probably resulting from generated headers (like the fixed-size schur\n  # specializations).\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:/bigobj>)\n\n  # Google Flags doesn't have their DLL import/export stuff set up correctly,\n  # which results in linker warnings. This is irrelevant for Ceres, so ignore\n  # the warnings.\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /ignore:4049\")\n\n  # Tuple sizes of 10 are used by Gtest.\n  add_definitions(\"-D_VARIADIC_MAX=10\")\nendif (MSVC)\n\nif (UNIX)\n  # Flags which we add to GCC to make it more picky about stuff\n  # we do care about,\n  add_cxx_compiler_flag_if_supported(CERES_STRICT_CXX_FLAGS\n                                     -Wmissing-declarations)\n  # Flags which we add to GCC to silence lots of annoying false-positives.\n  add_cxx_compiler_flag_if_supported(CERES_STRICT_CXX_FLAGS\n                                     -Wno-unknown-pragmas)\n  add_cxx_compiler_flag_if_supported(CERES_STRICT_CXX_FLAGS\n                                     -Wno-sign-compare)\n  add_cxx_compiler_flag_if_supported(CERES_STRICT_CXX_FLAGS\n                                     -Wno-unused-parameter)\n  add_cxx_compiler_flag_if_supported(CERES_STRICT_CXX_FLAGS\n                                     -Wno-missing-field-initializers)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CERES_STRICT_CXX_FLAGS}\")\nendif (UNIX)\n\nif (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\") # Matches Clang & AppleClang.\n  # Optimize for Eigen OR enable bitcode; you cannot do both since bitcode is an\n  # intermediate representation.\n  if (ENABLE_BITCODE)\n    set(CMAKE_CXX_FLAGS\n      \"${CMAKE_CXX_FLAGS} -fembed-bitcode\")\n  else ()\n    # Use a larger inlining threshold for Clang, since it hobbles Eigen,\n    # resulting in an unreasonably slow version of the blas routines. The\n    # -Qunused-arguments is needed because CMake passes the inline\n    # threshold to the linker and clang complains about it and dies.\n    set(CMAKE_CXX_FLAGS\n      \"${CMAKE_CXX_FLAGS} -Qunused-arguments -mllvm -inline-threshold=600\")\n  endif ()\n  # Older versions of Clang (<= 2.9) do not support the 'return-type-c-linkage'\n  # option, so check for its presence before adding it to the default flags set.\n  check_cxx_compiler_flag(\"-Wno-return-type-c-linkage\"\n                          HAVE_RETURN_TYPE_C_LINKAGE)\n  if (HAVE_RETURN_TYPE_C_LINKAGE)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-return-type-c-linkage\")\n  endif(HAVE_RETURN_TYPE_C_LINKAGE)\nendif ()\n\nadd_compile_definitions($<$<BOOL:${WIN32}>:NOMINMAX>)\n\n# Configure the Ceres config.h compile options header using the current\n# compile options and put the configured header into the Ceres build\n# directory.  Note that the ceres/internal subdir in <build>/config where\n# the configured config.h is placed is important, because Ceres will be\n# built against this configured header, it needs to have the same relative\n# include path as it would if it were in the source tree (or installed).\nlist(REMOVE_DUPLICATES CERES_COMPILE_OPTIONS)\ninclude(CreateCeresConfig)\ncreate_ceres_config(\"${CERES_COMPILE_OPTIONS}\"\n  ${Ceres_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR}/ceres/internal)\n\nadd_subdirectory(internal/ceres)\n\nif (BUILD_DOCUMENTATION)\n  find_package (Sphinx REQUIRED COMPONENTS sphinx_rtd_theme)\n  if (NOT Sphinx_FOUND)\n    message(\"-- Failed to find Sphinx and/or its dependencies, disabling build of documentation.\")\n    update_cache_variable(BUILD_DOCUMENTATION OFF)\n  else()\n    # Generate the User's Guide (html).\n    # The corresponding target is ceres_docs, but is included in ALL.\n    message(\"-- Build the HTML documentation.\")\n    add_subdirectory(docs)\n  endif()\nendif (BUILD_DOCUMENTATION)\n\nif (BUILD_EXAMPLES)\n  message(\"-- Build the examples.\")\n  add_subdirectory(examples)\nelse (BUILD_EXAMPLES)\n  message(\"-- Do not build any example.\")\nendif (BUILD_EXAMPLES)\n\n# Setup installation of Ceres public headers.\nfile(GLOB CERES_HDRS ${Ceres_SOURCE_DIR}/include/ceres/*.h)\ninstall(FILES ${CERES_HDRS} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/ceres)\n\nfile(GLOB CERES_PUBLIC_INTERNAL_HDRS ${Ceres_SOURCE_DIR}/include/ceres/internal/*.h)\ninstall(FILES ${CERES_PUBLIC_INTERNAL_HDRS} DESTINATION\n  ${CMAKE_INSTALL_INCLUDEDIR}/ceres/internal)\n\n# Also setup installation of Ceres config.h configured with the current\n# build options and export.h into the installed headers directory.\ninstall(DIRECTORY ${Ceres_BINARY_DIR}/${CMAKE_INSTALL_INCLUDEDIR}/\n        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n# Ceres supports two mechanisms by which it can be detected & imported into\n# client code which uses CMake via find_package(Ceres):\n#\n#   1) Installation (e.g. to /usr/local), using CMake's install() function.\n#\n#   2) (Optional) Export of the current build directory into the local CMake\n#      package registry, using CMake's export() function.  This allows use of\n#      Ceres from other projects without requiring installation.\n#\n# In both cases, we need to generate a configured CeresConfig.cmake which\n# includes additional autogenerated files which in concert create an imported\n# target for Ceres in a client project when find_package(Ceres) is invoked.\n# The key distinctions are where this file is located, and whether client code\n# references installed copies of the compiled Ceres headers/libraries,\n# (option #1: installation), or the originals in the source/build directories\n# (option #2: export of build directory).\n#\n# NOTE: If Ceres is both exported and installed, provided that the installation\n#       path is present in CMAKE_MODULE_PATH when find_package(Ceres) is called,\n#       the installed version is preferred.\n\n# Build the list of Ceres components for CeresConfig.cmake from the current set\n# of compile options.\ninclude(CeresCompileOptionsToComponents)\nceres_compile_options_to_components(\"${CERES_COMPILE_OPTIONS}\"\n  CERES_COMPILED_COMPONENTS)\n\ninclude(CMakePackageConfigHelpers)\n\n# Create a CeresConfigVersion.cmake file containing the version information,\n# used by both export() & install().\nwrite_basic_package_version_file(\"${Ceres_BINARY_DIR}/CeresConfigVersion.cmake\"\n  VERSION ${CERES_VERSION}\n  COMPATIBILITY SameMajorVersion)\n\n# Install method #1: Put Ceres in CMAKE_INSTALL_PREFIX: /usr/local or equivalent.\n\n# This \"exports\" for installation all targets which have been put into the\n# export set \"CeresExport\". This generates a CeresTargets.cmake file which,\n# when read in by a client project as part of find_package(Ceres) creates\n# imported library targets for Ceres (with dependency relations) which can be\n# used in target_link_libraries() calls in the client project to use Ceres.\n#\ninstall(EXPORT CeresExport\n        NAMESPACE Ceres::\n        DESTINATION ${RELATIVE_CMAKECONFIG_INSTALL_DIR} FILE CeresTargets.cmake)\n\n# Save the relative path from the installed CeresConfig.cmake file to the\n# install prefix.  We do not save an absolute path in case the installed package\n# is subsequently relocated after installation (on Windows).\nfile(RELATIVE_PATH INSTALL_ROOT_REL_CONFIG_INSTALL_DIR\n     ${CMAKE_INSTALL_PREFIX}/${RELATIVE_CMAKECONFIG_INSTALL_DIR}\n     ${CMAKE_INSTALL_PREFIX})\n\n# Configure a CeresConfig.cmake file for an installed version of Ceres from the\n# template, reflecting the current build options.\n#\n# NOTE: The -install suffix is necessary to distinguish the install version from\n#       the exported version, which must be named CeresConfig.cmake in\n#       Ceres_BINARY_DIR to be detected.  The suffix is removed when\n#       it is installed.\nset(SETUP_CERES_CONFIG_FOR_INSTALLATION TRUE)\nconfigure_file(\"${Ceres_SOURCE_DIR}/cmake/CeresConfig.cmake.in\"\n               \"${Ceres_BINARY_DIR}/CeresConfig-install.cmake\" @ONLY)\n\n# Install the configuration files into the same directory as the autogenerated\n# CeresTargets.cmake file.  We include the find_package() scripts for libraries\n# whose headers are included in the public API of Ceres and should thus be\n# present in CERES_INCLUDE_DIRS.\ninstall(FILES \"${Ceres_BINARY_DIR}/CeresConfig-install.cmake\"\n        RENAME CeresConfig.cmake\n        DESTINATION ${RELATIVE_CMAKECONFIG_INSTALL_DIR})\ninstall(FILES \"${Ceres_BINARY_DIR}/CeresConfigVersion.cmake\"\n        DESTINATION ${RELATIVE_CMAKECONFIG_INSTALL_DIR})\n\nif (PROVIDE_UNINSTALL_TARGET)\n  # Create an uninstall target to remove all installed files.\n  configure_file(\"${Ceres_SOURCE_DIR}/cmake/uninstall.cmake.in\"\n                 \"${Ceres_BINARY_DIR}/cmake/uninstall.cmake\"\n                 @ONLY)\n  add_custom_target(uninstall\n                    COMMAND ${CMAKE_COMMAND} -P ${Ceres_BINARY_DIR}/cmake/uninstall.cmake)\nendif()\n\n# Install method #2: Put Ceres build into local CMake registry.\n#\n# Optionally export the Ceres build directory into the local CMake package\n# registry (~/.cmake/packages on *nix & OS X).  This allows the detection &\n# use of Ceres without requiring that it be installed.\nif (EXPORT_BUILD_DIR)\n  message(\"-- Export Ceres build directory to local CMake package registry.\")\n\n  # Save the relative path from the build directory to the source directory.\n  file(RELATIVE_PATH INSTALL_ROOT_REL_CONFIG_INSTALL_DIR\n    ${Ceres_BINARY_DIR}\n    ${Ceres_SOURCE_DIR})\n\n  set (Ceres_EXPORT_TARGETS ceres)\n\n  if (TARGET ceres_cuda_kernels)\n    # The target ceres depends on ceres_cuda_kernels requiring the latter to be\n    # exported as part of the same export set.\n    list (APPEND Ceres_EXPORT_TARGETS ceres_cuda_kernels)\n  endif (TARGET ceres_cuda_kernels)\n\n  # Analogously to install(EXPORT ...), export the Ceres target from the build\n  # directory as a package called Ceres into the local CMake package registry.\n  export(TARGETS ${Ceres_EXPORT_TARGETS}\n         NAMESPACE Ceres::\n         FILE ${Ceres_BINARY_DIR}/CeresTargets.cmake)\n  export(PACKAGE ${CMAKE_PROJECT_NAME})\n\n  unset (Ceres_EXPORT_TARGETS)\n\n  # Configure a CeresConfig.cmake file for the export of the Ceres build\n  # directory from the template, reflecting the current build options.\n  set(SETUP_CERES_CONFIG_FOR_INSTALLATION FALSE)\n  configure_file(\"${Ceres_SOURCE_DIR}/cmake/CeresConfig.cmake.in\"\n    \"${Ceres_BINARY_DIR}/CeresConfig.cmake\" @ONLY)\n\nendif (EXPORT_BUILD_DIR)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.4326171875,
          "content": "---------------------------------\nDo not make GitHub pull requests!\n---------------------------------\n\nCeres development happens on\n[Gerrit](https://ceres-solver.googlesource.com/), including both\nrepository hosting and code reviews.\n\nThis GitHub Repository is a continuously updated mirror which is\nprimarily meant for issue tracking.\n\nPlease see our\n[Contributing to Ceres Guide](http://ceres-solver.org/contributing.html)\nfor more details.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.0185546875,
          "content": "Ceres Solver - A fast non-linear least squares minimizer\nCopyright 2023 Google Inc. All rights reserved.\nhttp://ceres-solver.org/\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n* Neither the name of Google Inc. nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------------------------------------------------------------\n\n                              Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n-------------------------------------------------------------------------------------------------------------------------------\n\nSome of the code in the examples directory derives from libmv, which is\ndistributed under the MIT license as described below\n\n\nCopyright (c) 2007-2011 libmv authors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 0.21875,
          "content": "\n# MODULE.bazel\n\nbazel_dep(name = \"abseil-cpp\", version = \"20240116.0\")\nbazel_dep(name = \"googletest\", version = \"1.14.0\")\nbazel_dep(name = \"eigen\", version = \"3.4.0\")\nbazel_dep(name = \"google_benchmark\", version = \"1.8.4\")\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.142578125,
          "content": "[![Android](https://github.com/ceres-solver/ceres-solver/actions/workflows/android.yml/badge.svg)](https://github.com/ceres-solver/ceres-solver/actions/workflows/android.yml)\n[![Linux](https://github.com/ceres-solver/ceres-solver/actions/workflows/linux.yml/badge.svg)](https://github.com/ceres-solver/ceres-solver/actions/workflows/linux.yml)\n[![macOS](https://github.com/ceres-solver/ceres-solver/actions/workflows/macos.yml/badge.svg)](https://github.com/ceres-solver/ceres-solver/actions/workflows/macos.yml)\n[![Windows](https://github.com/ceres-solver/ceres-solver/actions/workflows/windows.yml/badge.svg)](https://github.com/ceres-solver/ceres-solver/actions/workflows/windows.yml)\n\nCeres Solver\n============\n\nCeres Solver is an open source C++ library for modeling and solving\nlarge, complicated optimization problems. It is a feature rich, mature\nand performant library which has been used in production at Google\nsince 2010. Ceres Solver can solve two kinds of problems.\n\n1. Non-linear Least Squares problems with bounds constraints.\n2. General unconstrained optimization problems.\n\nPlease see [ceres-solver.org](http://ceres-solver.org/) for more\ninformation.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 1.71484375,
          "content": "# Ceres Solver - A fast non-linear least squares minimizer\n# Copyright 2023 Google Inc. All rights reserved.\n# http://ceres-solver.org/\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# * Redistributions of source code must retain the above copyright notice,\n#   this list of conditions and the following disclaimer.\n# * Redistributions in binary form must reproduce the above copyright notice,\n#   this list of conditions and the following disclaimer in the documentation\n#   and/or other materials provided with the distribution.\n# * Neither the name of Google Inc. nor the names of its contributors may be\n#   used to endorse or promote products derived from this software without\n#   specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n# POSSIBILITY OF SUCH DAMAGE.\n#\n# Authors: mierle@gmail.com (Keir Mierle)\n#\n# Bazel workspace file to enable building Ceres with Bazel.\n\nworkspace(name = \"com_google_ceres_solver\")\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.xml",
          "type": "blob",
          "size": 2.1181640625,
          "content": "<?xml version=\"1.0\"?>\n<!--\n  Copyright 2024 Google Inc. All rights reserved.\n  http://ceres-solver.org/\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n  * Neither the name of Google Inc. nor the names of its contributors may be\n    used to endorse or promote products derived from this software without\n    specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  POSSIBILITY OF SUCH DAMAGE.\n-->\n\n<package format=\"2\">\n  <name>ceres-solver</name>\n  <version>2.3.0</version>\n  <description>A large scale non-linear optimization library.</description>\n  <maintainer email=\"ceres-solver@googlegroups.com\">\n    The Ceres Solver Authors\n  </maintainer>\n  <license>New BSD</license>\n  <url type=\"website\">http://ceres-solver.org/</url>\n\n  <buildtool_depend>cmake</buildtool_depend>\n\n  <build_depend>atlas</build_depend>\n  <build_depend>gfortran</build_depend>\n  <build_depend>suitesparse</build_depend>\n  <depend>eigen</depend>\n\n  <export>\n    <build_type>cmake</build_type>\n  </export>\n</package>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}