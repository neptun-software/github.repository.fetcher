{
  "metadata": {
    "timestamp": 1736565644278,
    "page": 532,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yanyiwu/cppjieba",
      "stars": 2641,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.095703125,
          "content": "tags\n*.demo\n*swp\n*.out\n*.o\n*.d\n*.ut\nlog\nmain\nlib*.a\n*_demo\nsegdict*\nprior.gbk\ntmp\nt.*\n*.pid\nbuild\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0888671875,
          "content": "[submodule \"deps/limonp\"]\n\tpath = deps/limonp\n\turl = https://github.com/yanyiwu/limonp.git\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.294921875,
          "content": "# CHANGELOG\n\n## v5.4.0\n\n+ unittest: class Jiaba add default argument input\n+ class Jieba: support default dictpath\n+ cmake: avoid testing when FetchContent by other project\n+ class DictTrie: removed unused var\n\n## v5.3.2\n\n+ removed test/demo.cpp and linked https://github.com/yanyiwu/cppjieba-demo\n+ Update Demo Link in README.md\n+ [github/actions] stale 1 year ago issues\n+ limonp v0.9.0 -> v1.0.0\n\n## v5.3.1\n\n+ [cmake] fetch googletest\n+ [submodules] rm test/googletest\n\n## v5.3.0\n\n+ [c++17,c++20] compatibility\n+ limonp version 0.6.7 -> 0.9.0\n\n## v5.2.0\n\n+ [CI] windows-[2019,2022]\n+ [googletest] v1.6.0->v1.10.0\n+ [CI] ubuntu version from 20 to 22, macos version from 12 to 14\n+ [CMake] mini_required 2.6->3.5 and fix CXX_VERSION variable passed from cmd\n+ [CI] matrix and multi cpp version [11, 14]\n\n## v5.1.3\n\n+ [googletest] git submodule add googletest-1.6.0\n\n## v5.1.2\n\n+ [submodule:deps/limonp] upgrade to v0.6.7\n\n## v5.1.1\n\n+ Merged [pr-186](https://github.com/yanyiwu/cppjieba/pull/186)\n\n## v5.1.0\n\n+ Merged [feature: add RemoveWord api from gojieba/pull/99 #172](https://github.com/yanyiwu/cppjieba/pull/172)\n\n## v5.0.5\n\n+ Merged [pr-171 submodule update limonp to v0.6.6 #171](https://github.com/yanyiwu/cppjieba/pull/171)\n\n## v5.0.4\n\n+ Merged [pr-168 limonp as submodule #168](https://github.com/yanyiwu/cppjieba/pull/168)\n\n## v5.0.3\n\n+ Upgrade [limonp](https://github.com/yanyiwu/limonp) -> v0.6.3\n\n## v5.0.2\n\n+ Upgrade [limonp](https://github.com/yanyiwu/limonp) -> v0.6.1\n\n## v5.0.1\n\n+ Make Compiler Happier.\n+ Add PHP, DLang Links.\n\n## v5.0.0\n\n+ Notice(**api changed**) : Jieba class 3 arguments -> 5 arguments, and use KeywordExtractor in Jieba\n\n## v4.8.1\n\n+ add TextRankExtractor by [@questionfish] in [pull request 65](https://github.com/yanyiwu/cppjieba/pull/65)\n+ add Jieba::ResetSeparators api for some special situation, for example in [issue67](https://github.com/yanyiwu/cppjieba/issues/67)\n+ fix [issue70](https://github.com/yanyiwu/cppjieba/issues/70)\n+ support (word, freq, tag) format in user_dict, see details in [pr74](https://github.com/yanyiwu/cppjieba/pull/74)\n\n## v4.8.0\n\n+ rewrite QuerySegment, make `Jieba::CutForSearch` behaves the same as [jieba] `cut_for_search` api\n+ remove Jieba::SetQuerySegmentThreshold\n\n## v4.7.0\n\napi changes:\n\n+ override Cut functions, add location information into Word results;\n+ remove LevelSegment;\n+ remove Jieba::Locate;\n\nupgrade:\n\n+ limonp -> v0.6.1\n\n## v4.6.0\n\n+ Change Jieba::Locate(deprecated) to be static function.\n+ Change the return value of KeywordExtractor::Extract from bool to void.\n+ Add KeywordExtractor::Word and add more overrided KeywordExtractor::Extract\n\n## v4.5.3\n\n+ Upgrade limonp to v0.6.0\n\n## v4.5.2\n\n+ Upgrade limonp to v0.5.6 to fix hidden trouble.\n\n## v4.5.1\n\n+ Upgrade limonp to v0.5.5 to solve macro name conficts in some special case. \n\n## v4.5.0\n\n+ 在 Trie 中去除之前糟糕的针对 uint16 优化的用数组代替 map 的设计，\n该设计的主要问题是前提 unicode 每个字符必须是 uint16 ，则无法更全面得支持 unicode 多国字符。 \n+ Rune 类型从 16bit 更改为 32bit ，支持更多 Unicode 字符，包括一些罕见汉字。\n\n## v4.4.1\n\n+ 使用 valgrind 检查内存泄露的问题，定位出一个HMM模型初始化的问题导致内存泄露的bug，不过此内存泄露不是致命问题，\n因为只会在词典载入的时候发生，而词典载入通常情况下只会被运行一次，故不会导致严重问题。\n+ 感谢 [qinwf] 帮我发现这个bug，非常感谢。\n\n## v4.4.0\n\n+ 加代码容易删代码难，思索良久，还是决定把 Server 功能的源码剥离出这个项目。\n+ 让 [cppjieba] 回到当年情窦未开时清纯的感觉，删除那些无关紧要的server代码，让整个项目轻装上阵，专注分词的核心代码。\n+ By the way, 之前的 server 相关的代码，如果你真的需要它，就去新的项目仓库 [cppjieba-server](https://github.com/yanyiwu/cppjieba-server) 找它们。\n\n## v4.3.3\n\n+ Yet Another Incompatibility Problem Repair: Upgrade [limonp] to version v0.5.3, fix incompatibility problem in Windows\n\n## v4.3.2\n\n+ Upgrade [limonp] to version v0.5.2, fix incompatibility problem in Windows\n\n## v4.3.1\n\n+ 重载 KeywordExtractor 的构造函数，可以传入 Jieba 进行字典和模型的构造。 \n\n## v4.3.0\n\n源码目录布局调整：\n\n1. src/ -> include/cppjieba/\n2. src/limonp/ -> deps/limonp/\n3. server/husky -> deps/husky/\n4. test/unittest/gtest -> deps/gtest\n\n依赖库升级：\n\n1. [limonp] to version v0.5.1\n2. [husky] to version v0.2.0\n\n## v4.2.1\n\n1. Upgrade [limonp] to version v0.4.1, [husky] to version v0.2.0\n\n## v4.2.0\n\n1. 修复[issue50]提到的多词典分隔符在Windows环境下存在的问题，从':'修改成'|'或';'。\n\n## v4.1.2\n\n1. 新增 Jieba::Locate 函数接口，作为计算分词结果的词语位置信息，在某些场景下有用，比如搜索结果高亮之类的。\n\n## v4.1.1\n\n1. 在 class Jieba 中新增词性标注的接口函数 Jieba::Tag\n\n## v4.1.0\n\n1. QuerySegment切词时加一层判断，当长词满足IsAllAscii(比如英文单词)时，不进行细粒度分词。\n2. QuerySegment新增SetMaxWordLen和GetMaxWordLen接口，用来设置二次分词条件被触发的词长阈值。\n3. Jieba新增SetQuerySegmentThreshold设置CutForSearch函数的词长阈值。\n\n## v4.0.0\n\n1. 支持多个userdict载入，多词典路径用英文冒号(:)作为分隔符，就当是向环境变量PATH致敬，哈哈。\n2. userdict是不带权重的，之前对于新的userword默认设置词频权重为最大值，现已支持可配置，默认使用中位值。\n3. 【兼容性预警】修改一些代码风格，比如命名空间小写化，从CppJieba变成cppjieba。\n4. 【兼容性预警】弃用Application.hpp, 取而代之使用Jieba.hpp ，接口也进行了大幅修改，函数风格更统一，和python版本的Jieba分词更一致。\n\n## v3.2.1\n\n1. 修复 Jieba.hpp 头文件保护写错导致的 bug。\n\n## v3.2.0\n\n1. 使用工程上比较 tricky 的 Trie树优化办法。废弃了之前的 `Aho-Corasick-Automation` 实现，可读性更好，性能更高。\n2. 新增层次分词器: LevelSegment 。\n3. 增加MPSegment的细粒度分词功能。\n4. 增加 class Jieba ，提供可读性更好的接口。\n5. 放弃了统一接口ISegment，因为统一的接口限制了分词方式的灵活性，限制了一些功能的增加。\n6. 增加默认开启新词发现功能的可选参数hmm，让MixSegment和QuerySegment都支持开关新词发现功能。\n\n## v3.1.0\n\n1. 新增可动态增加词典的API: insertUserWord\n2. cut函数增加默认参数，默认使用Mix切词算法。关于切词算法详见README.md\n\n## v3.0.1\n\n1. 提升兼容性，修复在某些特定环境下的编译错误问题。 \n\n## v3.0.0\n\n1. 使得 QuerySegment 支持自定义词典（可选参数）。\n2. 使得 KeywordExtractor 支持自定义词典（可选参数）。\n3. 修改 Code Style ，参照 google code style 。 \n4. 增加更详细的错误日志，在初始化过程中合理使用LogFatal。\n5. 增加 Application 这个类，整合了所有CppJieba的功能进去，以后用户只需要使用这个类即可。\n6. 修改 cjserver 服务，可以通过http参数使用不同切词算法进行切词。\n7. 修改 make install 的安装目录，统一安装到同一个目录 /usr/local/cppjieba 。\n\n## v2.4.4\n\n1. 修改两条更细粒度的特殊过滤规则，将连续的数字（包括浮点数）和连续的字母单独切分出来（而不会混在一起）。\n2. 修改最大概率法时动态规划过程需要使用的 DAG 数据结构（同时也修改 Trie 的 DAG 查询函数），提高分词速度 8% 。\n3. 使用了 `Aho-Corasick-Automation` 算法提速 Trie 查找的过程等优化，提升性能。\n4. 增加词性标注的两条特殊规则。\n\n## v2.4.3\n\n1. 更新 [husky] 服务代码，新 [husky] 为基于线程池的服务器简易框架。并且修复当 HTTP POST 请求时 body 过长数据可能丢失的问题。\n2. 修改 PosTagger 的参数结构，删除暂时无用的参数。并添加使用自定义字典的参数，也就是支持 **自定义词性**。\n3. 更好的支持 `mac osx` (原谅作者如此屌丝，这么晚才买 `mac` )。\n4. 支持 `Docker` ，具体请见 `Dockerfile` 。\n\n## v2.4.2\n\n1. 适当使用 `vector`， 的基础上，使用`limonp/LocalVector.hpp`作为`Unicode`的类型等优化，约提高性能 `30%`。\n2. 使 `cjserver` 支持用户自定义词典，通过在 `conf/server.conf` 里面配置 `user_dict_path` 来实现。\n3. 修复 `MPSegment` 切词时，当句子中含有特殊字符时，切词结果不完整的问题。\n4. 修改 `FullSegment` 减少内存使用。 \n5. 修改 `-std=c++0x` 或者 `-std=c++11` 时编译失败的问题。\n\n## v2.4.1\n\n1. 完善一些特殊字符和字母串的切词效果。\n2. 提高关键词抽取的速度。\n3. 提供用户自定义词典的接口。\n4. 将server相关的代码独立出来，单独放在`server/`目录下。\n5. 修复用户自定义词典中单字会被MixSegment的新词发现功能给忽略的问题。也就是说，现在的词典是用户词典优先级最高，其次是自带的词典，再其次是新词发现出来的词。\n\n## v2.4.0\n\n1. 适配更低级版本的`g++`和`cmake`，已在`g++ 4.1.2`和`cmake 2.6`上测试通过。\n2. 修改一些测试用例的文件，减少测试时编译的时间。\n3. 修复`make install`相关的问题。\n4. 增加HTTP服务的POST请求接口。\n5. 拆分`Trie.hpp`成`DictTrie.hpp`和`Trie.hpp`，将trie树这个数据结构抽象出来，并且修复Trie这个类潜在的bug并完善单元测试。\n6. 重写cjserver的启动和停止，新启动和停止方法详见README.md。\n\n## v2.3.4\n\n1. 修改了设计上的问题，删除了`TrieManager`这个类，以避免造成一些可能的隐患。\n2. 增加`stop_words.utf8`词典，并修改`KeywordExtractor`的初始化函数用以使用此词典。\n3. 优化了`Trie`树相关部分代码结构。\n\n## v2.3.3\n\n1. 修复因为使用unordered_map导致的在不同机器上结果不一致的问题。\n2. 将部分数据结果从unordered_map改为map，提升了差不多1/6的切词速度。(因为unordered_map虽然查找速度快，但是在范围迭代的效率较低。)\n\n## v2.3.2\n\n1. 修复单元测试的问题，有些case在x84和x64中结果不一致。\n2. merge进词性标注的简单版本。\n\n## v2.3.1\n\n1. 修复安装时的服务启动问题（不过安装切词服务只是linux下的一个附加功能，不影响核心代码。）\n\n## v2.3.0 \n\n1. 增加`KeywordExtractor.hpp`来进行关键词抽取。\n2. 使用`gtest`来做单元测试。\n\n## v2.2.0\n\n1. 性能优化，提升切词速度约6倍。\n2. 其他暂时也想不起来了。\n\n## v2.1.1 (v2.1.1之前的统统一起写在 v2.1.1里面了)\n\n1. 完成__最大概率分词算法__和__HMM分词算法__，并且将他们结合起来成效果最好的`MixSegment`。\n2. 进行大量的代码重构，将主要的功能性代码都写成了hpp文件。\n3. 使用`cmake`工具来管理项目。\n4. 使用 [limonp]作为工具函数库，比如日志，字符串操作等常用函数。\n5. 使用 [husky] 搭简易分词服务的服务器框架。\n\n[limonp]:http://github.com/yanyiwu/limonp.git\n[husky]:http://github.com/yanyiwu/husky.git\n[issue50]:https://github.com/yanyiwu/cppjieba/issues/50\n[qinwf]:https://github.com/yanyiwu/cppjieba/pull/53#issuecomment-176264929\n[jieba]:https://github.com/fxsjy/jieba\n[@questionfish]:https://github.com/questionfish\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.0634765625,
          "content": "CMAKE_MINIMUM_REQUIRED (VERSION 3.5)\nPROJECT(CPPJIEBA)\n\nINCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/deps/limonp/include\n  ${PROJECT_SOURCE_DIR}/include)\n\nif (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n    set (CMAKE_INSTALL_PREFIX \"/usr/local/cppjieba\" CACHE PATH \"default install path\" FORCE )\nendif()\n\nif(NOT DEFINED CMAKE_CXX_STANDARD)\n    set(CMAKE_CXX_STANDARD 11)\nendif()\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nADD_DEFINITIONS(-O3 -g)\n\n# Define a variable to check if this is the top-level project\nif(NOT DEFINED CPPJIEBA_TOP_LEVEL_PROJECT)\n    if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n        set(CPPJIEBA_TOP_LEVEL_PROJECT ON)\n    else()\n        set(CPPJIEBA_TOP_LEVEL_PROJECT OFF)\n    endif()\nendif()\n\n\noption(CPPJIEBA_BUILD_TESTS \"Build cppjieba tests\" ${CPPJIEBA_TOP_LEVEL_PROJECT})\n\nif(CPPJIEBA_BUILD_TESTS)\n  ENABLE_TESTING()\n\n  ADD_SUBDIRECTORY(test)\n  if(NOT MSVC)\n    ADD_TEST(NAME ./test/test.run COMMAND ./test/test.run)\n    ADD_TEST(NAME ./load_test COMMAND ./load_test)\n  endif()\nendif()\n\n\n# ... other CMake configurations ...\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.5009765625,
          "content": "# CppJieba\n\n[![CMake](https://github.com/yanyiwu/cppjieba/actions/workflows/cmake.yml/badge.svg)](https://github.com/yanyiwu/cppjieba/actions/workflows/cmake.yml)\n[![Author](https://img.shields.io/badge/author-@yanyiwu-blue.svg?style=flat)](http://yanyiwu.com/) \n[![Platform](https://img.shields.io/badge/platform-Linux,macOS,Windows-green.svg?style=flat)](https://github.com/yanyiwu/cppjieba)\n[![Performance](https://img.shields.io/badge/performance-excellent-brightgreen.svg?style=flat)](http://yanyiwu.com/work/2015/06/14/jieba-series-performance-test.html) \n[![Tag](https://img.shields.io/github/v/tag/yanyiwu/cppjieba.svg)](https://github.com/yanyiwu/cppjieba/releases)\n\n## 简介\n\nCppJieba是\"结巴(Jieba)\"中文分词的C++版本\n\n## 特性\n\n+ 源代码都写进头文件`include/cppjieba/*.hpp`里，`include`即可使用。\n+ 支持`utf8`编码。\n+ 项目自带较为完善的单元测试，核心功能中文分词(utf8)的稳定性接受过线上环境检验。\n+ 支持载自定义用户词典，多路径时支持分隔符'|'或者';'分隔。\n+ 支持 `Linux` , `Mac OSX`, `Windows` 操作系统。\n\n## 用法\n\n### 依赖软件\n\n* `g++ (version >= 4.1 is recommended) or clang++`;\n* `cmake (version >= 2.6 is recommended)`;\n\n### 下载和编译\n\n```sh\ngit clone https://github.com/yanyiwu/cppjieba.git\ncd cppjieba\ngit submodule init\ngit submodule update\nmkdir build\ncd build\ncmake ..\nmake\n```\n\n有兴趣的可以跑跑测试(可选):\n\n```\nmake test\n```\n\n## Demo\n\n```\n./demo\n```\n\n结果示例：\n\n```\n[demo] Cut With HMM\n他/来到/了/网易/杭研/大厦\n[demo] Cut Without HMM\n他/来到/了/网易/杭/研/大厦\n我来到北京清华大学\n[demo] CutAll\n我/来到/北京/清华/清华大学/华大/大学\n小明硕士毕业于中国科学院计算所，后在日本京都大学深造\n[demo] CutForSearch\n小明/硕士/毕业/于/中国/科学/学院/科学院/中国科学院/计算/计算所/，/后/在/日本/京都/大学/日本京都大学/深造\n[demo] Insert User Word\n男默/女泪\n男默女泪\n[demo] CutForSearch Word With Offset\n[{\"word\": \"小明\", \"offset\": 0}, {\"word\": \"硕士\", \"offset\": 6}, {\"word\": \"毕业\", \"offset\": 12}, {\"word\": \"于\", \"offset\": 18}, {\"word\": \"中国\", \"offset\": 21}, {\"word\": \"科学\", \"offset\": 27}, {\"word\": \"学院\", \"offset\": 30}, {\"word\": \"科学院\", \"offset\": 27}, {\"word\": \"中国科学院\", \"offset\": 21}, {\"word\": \"计算\", \"offset\": 36}, {\"word\": \"计算所\", \"offset\": 36}, {\"word\": \"，\", \"offset\": 45}, {\"word\": \"后\", \"offset\": 48}, {\"word\": \"在\", \"offset\": 51}, {\"word\": \"日本\", \"offset\": 54}, {\"word\": \"京都\", \"offset\": 60}, {\"word\": \"大学\", \"offset\": 66}, {\"word\": \"日本京都大学\", \"offset\": 54}, {\"word\": \"深造\", \"offset\": 72}]\n[demo] Tagging\n我是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。\n[我:r, 是:v, 拖拉机:n, 学院:n, 手扶拖拉机:n, 专业:n, 的:uj, 。:x, 不用:v, 多久:m, ，:x, 我:r, 就:d, 会:v, 升职:v, 加薪:nr, ，:x, 当上:t, CEO:eng, ，:x, 走上:v, 人生:n, 巅峰:n, 。:x]\n[demo] Keyword Extraction\n我是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。\n[{\"word\": \"CEO\", \"offset\": [93], \"weight\": 11.7392}, {\"word\": \"升职\", \"offset\": [72], \"weight\": 10.8562}, {\"word\": \"加薪\", \"offset\": [78], \"weight\": 10.6426}, {\"word\": \"手扶拖拉机\", \"offset\": [21], \"weight\": 10.0089}, {\"word\": \"巅峰\", \"offset\": [111], \"weight\": 9.49396}]\n```\n\nFor more details, please see [demo](https://github.com/yanyiwu/cppjieba-demo).\n\n### 分词结果示例\n\n**MPSegment**\n\nOutput:\n```\n我来到北京清华大学\n我/来到/北京/清华大学\n\n他来到了网易杭研大厦\n他/来到/了/网易/杭/研/大厦\n\n小明硕士毕业于中国科学院计算所，后在日本京都大学深造\n小/明/硕士/毕业/于/中国科学院/计算所/，/后/在/日本京都大学/深造\n\n```\n\n**HMMSegment**\n\n```\n我来到北京清华大学\n我来/到/北京/清华大学\n\n他来到了网易杭研大厦\n他来/到/了/网易/杭/研大厦\n\n小明硕士毕业于中国科学院计算所，后在日本京都大学深造\n小明/硕士/毕业于/中国/科学院/计算所/，/后/在/日/本/京/都/大/学/深/造\n\n```\n\n**MixSegment**\n\n```\n我来到北京清华大学\n我/来到/北京/清华大学\n\n他来到了网易杭研大厦\n他/来到/了/网易/杭研/大厦\n\n小明硕士毕业于中国科学院计算所，后在日本京都大学深造\n小明/硕士/毕业/于/中国科学院/计算所/，/后/在/日本京都大学/深造\n\n```\n\n**FullSegment**\n\n```\n我来到北京清华大学\n我/来到/北京/清华/清华大学/华大/大学\n\n他来到了网易杭研大厦\n他/来到/了/网易/杭/研/大厦\n\n小明硕士毕业于中国科学院计算所，后在日本京都大学深造\n小/明/硕士/毕业/于/中国/中国科学院/科学/科学院/学院/计算/计算所/，/后/在/日本/日本京都大学/京都/京都大学/大学/深造\n\n```\n\n**QuerySegment**\n\n```\n我来到北京清华大学\n我/来到/北京/清华/清华大学/华大/大学\n\n他来到了网易杭研大厦\n他/来到/了/网易/杭研/大厦\n\n小明硕士毕业于中国科学院计算所，后在日本京都大学深造\n小明/硕士/毕业/于/中国/中国科学院/科学/科学院/学院/计算所/，/后/在/中国/中国科学院/科学/科学院/学院/日本/日本京都大学/京都/京都大学/大学/深造\n\n```\n\n以上依次是MP,HMM,Mix三种方法的效果。  \n\n可以看出效果最好的是Mix，也就是融合MP和HMM的切词算法。即可以准确切出词典已有的词，又可以切出像\"杭研\"这样的未登录词。\n\nFull方法切出所有字典里的词语。\n\nQuery方法先使用Mix方法切词，对于切出来的较长的词再使用Full方法。\n\n### 自定义用户词典\n\n自定义词典示例请看`dict/user.dict.utf8`。\n\n没有使用自定义用户词典时的结果:\n\n```\n令狐冲/是/云/计算/行业/的/专家\n```\n\n使用自定义用户词典时的结果:\n\n```\n令狐冲/是/云计算/行业/的/专家\n```\n\n### 关键词抽取\n\n```\n我是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。\n[\"CEO:11.7392\", \"升职:10.8562\", \"加薪:10.6426\", \"手扶拖拉机:10.0089\", \"巅峰:9.49396\"]\n```\n\nFor more details, please see [demo](https://github.com/yanyiwu/cppjieba-demo).\n\n### 词性标注\n\n```\n我是蓝翔技工拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上总经理，出任CEO，迎娶白富美，走上人生巅峰。\n[\"我:r\", \"是:v\", \"拖拉机:n\", \"学院:n\", \"手扶拖拉机:n\", \"专业:n\", \"的:uj\", \"。:x\", \"不用:v\", \"多久:m\", \"，:x\", \"我:r\", \"就:d\", \"会:v\", \"升职:v\", \"加薪:nr\", \"，:x\", \"当上:t\", \"CEO:eng\", \"，:x\", \"走上:v\", \"人生:n\", \"巅峰:n\", \"。:x\"]\n```\n\nFor more details, please see [demo](https://github.com/yanyiwu/cppjieba-demo).\n\n支持自定义词性。\n比如在(`dict/user.dict.utf8`)增加一行\n\n```\n蓝翔 nz\n```\n\n结果如下：\n\n```\n[\"我:r\", \"是:v\", \"蓝翔:nz\", \"技工:n\", \"拖拉机:n\", \"学院:n\", \"手扶拖拉机:n\", \"专业:n\", \"的:uj\", \"。:x\", \"不用:v\", \"多久:m\", \"，:x\", \"我:r\", \"就:d\", \"会:v\", \"升职:v\", \"加薪:nr\", \"，:x\", \"当:t\", \"上:f\", \"总经理:n\", \"，:x\", \"出任:v\", \"CEO:eng\", \"，:x\", \"迎娶:v\", \"白富美:x\", \"，:x\", \"走上:v\", \"人生:n\", \"巅峰:n\", \"。:x\"]\n```\n\n## 其它词典资料分享\n\n+ [dict.367W.utf8] iLife(562193561 at qq.com)\n\n## 应用\n\n+ [GoJieba] go语言版本的结巴中文分词。\n+ [NodeJieba] Node.js 版本的结巴中文分词。\n+ [simhash] 中文文档的的相似度计算\n+ [exjieba] Erlang 版本的结巴中文分词。\n+ [jiebaR] R语言版本的结巴中文分词。\n+ [cjieba] C语言版本的结巴分词。\n+ [jieba_rb] Ruby 版本的结巴分词。\n+ [iosjieba] iOS 版本的结巴分词。\n+ [SqlJieba] MySQL 全文索引的结巴中文分词插件。\n+ [pg_jieba] PostgreSQL 数据库的分词插件。\n+ [simple] SQLite3 FTS5 数据库的分词插件。\n+ [gitbook-plugin-search-pro] 支持中文搜索的 gitbook 插件。\n+ [ngx_http_cppjieba_module] Nginx 分词插件。\n+ [cppjiebapy] 由 [jannson] 开发的供 python 模块调用的项目 [cppjiebapy], 相关讨论 [cppjiebapy_discussion] .\n+ [cppjieba-py] 由 [bung87] 基于 pybind11 封装的 python 模块,使用体验上接近于原jieba。\n+ [KeywordServer] 50行搭建一个中文关键词抽取服务。\n+ [cppjieba-server] CppJieba HTTP 服务器。\n+ [phpjieba] php版本的结巴分词扩展。\n+ [perl5-jieba] Perl版本的结巴分词扩展。\n+ [jieba-dlang] D 语言的结巴分词 Deimos Bindings。\n\n## 性能评测\n\n[Jieba中文分词系列性能评测]\n\n## Sponsorship\n\n[![sponsorship](http://images.gitads.io/cppjieba)](https://tracking.gitads.io/?campaign=gitads&repo=cppjieba&redirect=gitads.io)\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute.\n<a href=\"https://github.com/yanyiwu/cppjieba/graphs/contributors\"><img src=\"https://opencollective.com/cppjieba/contributors.svg?width=890&button=false\" /></a>\n\n[GoJieba]:https://github.com/yanyiwu/gojieba\n[CppJieba]:https://github.com/yanyiwu/cppjieba\n[jannson]:https://github.com/jannson\n[cppjiebapy]:https://github.com/jannson/cppjiebapy\n[bung87]:https://github.com/bung87\n[cppjieba-py]:https://github.com/bung87/cppjieba-py\n[cppjiebapy_discussion]:https://github.com/yanyiwu/cppjieba/issues/1\n[NodeJieba]:https://github.com/yanyiwu/nodejieba\n[jiebaR]:https://github.com/qinwf/jiebaR\n[simhash]:https://github.com/yanyiwu/simhash\n[代码详解]:https://github.com/yanyiwu/cppjieba/wiki/CppJieba%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3\n[issue25]:https://github.com/yanyiwu/cppjieba/issues/25\n[exjieba]:https://github.com/falood/exjieba\n[KeywordServer]:https://github.com/yanyiwu/keyword_server\n[ngx_http_cppjieba_module]:https://github.com/yanyiwu/ngx_http_cppjieba_module\n[dict.367W.utf8]:https://github.com/qinwf/BigDict\n[cjieba]:http://github.com/yanyiwu/cjieba\n[jieba_rb]:https://github.com/altkatz/jieba_rb\n[iosjieba]:https://github.com/yanyiwu/iosjieba\n[SqlJieba]:https://github.com/yanyiwu/sqljieba\n[Jieba中文分词系列性能评测]:http://yanyiwu.com/work/2015/06/14/jieba-series-performance-test.html\n[pg_jieba]:https://github.com/jaiminpan/pg_jieba\n[gitbook-plugin-search-pro]:https://plugins.gitbook.com/plugin/search-pro\n[cppjieba-server]:https://github.com/yanyiwu/cppjieba-server\n[phpjieba]:https://github.com/jonnywang/phpjieba\n[perl5-jieba]:https://metacpan.org/pod/distribution/Lingua-ZH-Jieba/lib/Lingua/ZH/Jieba.pod\n[jieba-dlang]:https://github.com/shove70/jieba\n[simple]:https://github.com/wangfenjin/simple\n\n\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "dict",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}