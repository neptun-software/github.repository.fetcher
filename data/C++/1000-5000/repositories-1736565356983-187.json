{
  "metadata": {
    "timestamp": 1736565356983,
    "page": 187,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vslavik/diff-pdf",
      "stars": 3758,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2646484375,
          "content": "admin/config.guess\nadmin/config.sub\nadmin/depcomp\nadmin/install-sh\nadmin/missing\n\n# generated by configure\n.deps/*\nconfig.log\nconfig.status\nMakefile\nMakefile.in\n\nconfigure\nautom4te.cache\naclocal.m4\nmingw\n\n# compiled (and unlinked) objects\n*.o\n# the final binary\ndiff-pdf\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.060546875,
          "content": "\n Developers:\n-------------\n\nVaclav Slavik <vaclav@slavik.io>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.580078125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.icons",
          "type": "blob",
          "size": 0.0947265625,
          "content": "\n\nThe gtk-zoom-in.xpm and gtk-zoom-out.xpm icons are under LGPL and were taken\nfrom GTK+ 2.16.5.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.6142578125,
          "content": "\nbin_PROGRAMS = diff-pdf\n\ndiff_pdf_SOURCES = \\\n\t\t\tdiff-pdf.cpp \\\n\t\t\tbmpviewer.cpp \\\n\t\t\tbmpviewer.h \\\n\t\t\tgutter.cpp \\\n\t\t\tgutter.h\n\ndiff_pdf_CXXFLAGS = $(POPPLER_CFLAGS) $(WX_CXXFLAGS)\ndiff_pdf_LDADD = $(POPPLER_LIBS) $(WX_LIBS)\n\nEXTRA_DIST = bootstrap gtk-zoom-in.xpm gtk-zoom-out.xpm README.md win32/fonts.conf win32/collect-dlls.sh\n\nwindows-dist: diff-pdf-win-$(VERSION).zip\n\ndiff-pdf-win-$(VERSION).zip: all\n\trm -rf $@ windist\n\t$(srcdir)/win32/collect-dlls.sh windist diff-pdf.exe\n\tmkdir -p windist/fonts && cp -a $(srcdir)/win32/fonts.conf windist/fonts/\n\t(cd windist && zip -9r ../$@ .)\n\trm -rf windist\n\n.PHONY: windows-dist\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.984375,
          "content": "*Note: this repository is provided **as-is** and the code is not being actively\ndeveloped. If you wish to improve it, that's greatly appreciated: please make\nthe changes and submit a pull request, I'll gladly merge it or help you out\nwith finishing it. However, please do not expect any kind of support, including\nimplementation of feature requests or fixes. If you're not a developer and/or\nwilling to get your hands dirty, this tool is probably not for you.*\n\n[![Build](https://github.com/vslavik/diff-pdf/actions/workflows/build.yml/badge.svg)](https://github.com/vslavik/diff-pdf/actions/workflows/build.yml)\n\n## Usage\n\ndiff-pdf is a tool for visually comparing two PDFs.\n\nIt takes two PDF files as arguments. By default, its only output is its return\ncode, which is 0 if there are no differences and 1 if the two PDFs differ. If\ngiven the `--output-diff` option, it produces a PDF file with visually\nhighlighted differences:\n\n```\n$ diff-pdf --output-diff=diff.pdf a.pdf b.pdf\n```\n\nAnother option is to compare the two files visually in a simple GUI, using\nthe `--view` argument:\n\n```\n$ diff-pdf --view a.pdf b.pdf\n```\n\nThis opens a window that lets you view the files' pages and zoom in on details.\nIt is also possible to shift the two pages relatively to each other using\nCtrl-arrows (Cmd-arrows on MacOS). This is useful for identifying translation-only differences.\n\nSee the output of `$ diff-pdf --help` for complete list of options.\n\n\n## Obtaining the binaries\n\nPrecompiled version of the tool for Windows is available as part of\n[the latest release](https://github.com/vslavik/diff-pdf/releases/latest/)\nas a ZIP archive, which contains everything you need to run diff-pdf. It will\nwork from any place you unpack it to.\n\nAlternatively, if you use [Chocolatey](https://chocolatey.org/), you can install\ndiff-pdf on Windows with:\n```\n$ choco install diff-pdf\n```\nOn Mac, if you use [Homebrew](https://brew.sh), you can use it to install diff-pdf with it:\n```\n$ brew install diff-pdf\n```\nOn Mac, if you use [Macports](https://macports.org), you can install diff-pdf with:\n```\n$ port install diff-pdf\n```\nOn  Fedora and CentOS 8:\n```\n$ sudo dnf install diff-pdf\n```\nPrecompiled version for openSUSE can be downloaded from the\n[openSUSE build service](http://software.opensuse.org).\n\n\n## Compiling from sources\n\nThe build system uses Automake and so a Unix or Unix-like environment (Cygwin\nor MSYS) is required. Compilation is done in the usual way:\n\n```\n$ ./bootstrap\n$ ./configure\n$ make\n$ make install\n```\n\n(Note that the first step, running the `./bootstrap` script, is only required\nwhen building sources checked from version control system, i.e. when `configure`\nand `Makefile.in` files are missing.)\n\nAs for dependencies, diff-pdf requires the following libraries:\n\n- wxWidgets >= 3.0\n- Cairo >= 1.4\n- Poppler >= 0.10\n\n#### CentOS:\n\n```\n$ sudo yum groupinstall \"Development Tools\"\n$ sudo yum install wxGTK wxGTK-devel poppler-glib poppler-glib-devel\n```\n\n#### Ubuntu 24.04 / Debian 12 or newer:\n\n```\n$ sudo apt-get install make automake g++\n$ sudo apt-get install libpoppler-glib-dev poppler-utils libwxgtk3.2-dev\n```\n\n#### Older versions of Ubuntu / Debian:\n\n```\n$ sudo apt-get install make automake g++\n$ sudo apt-get install libpoppler-glib-dev poppler-utils libwxgtk3.0-gtk3-dev\n```\n\n#### macOS:\nInstall Command Line Tools for Xcode:\n\n```\n$ xcode-select --install\n```\n\nand install [Homebrew](https://brew.sh) or [MacPorts](https://www.macports.org) to manage dependencies, then:\n\n```\n$ brew install automake autoconf wxmac poppler cairo pkg-config\n```\n\nor\n\n```\n$ sudo port install automake autoconf wxWidgets-3.0 poppler cairo pkgconfig\n```\n\nNote that many more libraries are required on Windows, where none of the\nlibraries Cairo and Poppler use are normally available. At the time of writing,\ntransitive cover of the above dependencies included fontconfig, freetype, glib,\nlibpng, pixman, gettext, libiconv, libjpeg and zlib.\n\n\n### Compiling on Windows using MSYS + MinGW\n\n1. First of all, you will need working MinGW installation with MSYS2 environment\nand C++ compiler. Install MSYS2 by following [their instructions](https://www.msys2.org).\n\n1. Once installed, launch the MSYS2 MinGW shell. It will open a terminal window;\ntype `cd /c/directory/with/diff-pdf` to go to the directory with diff-pdf\nsources.\n\n1. You will need to install additional MSYS components that are not normally\nincluded with MSYS, using these commands:\n\n    ```\n    $ pacman -Syu\n    $ pacman -S automake autoconf pkg-config make zip pactoys\n    $ pacboy -S gcc:p poppler:p wxWidgets:p\n    ```\n\n1. Build diff-pdf in the same way as in the instructions for Unix above:\n\n    ```\n    $ ./bootstrap  # only if building from git repository\n    $ ./configure\n    $ make\n    ```\n\n1. To build a ZIP archive will all DLLs, run\n    ```\n    $ make windows-dist\n    ```\n\n\n## Installing\n\nOn Unix, the usual `make install` is sufficient.\n\nOn Windows, installation is not necessary, just copy the files somewhere. If\nyou built it following the instructions above, all the necessary files will be\nin the created ZIP archive.\n"
        },
        {
          "name": "admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bmpviewer.cpp",
          "type": "blob",
          "size": 5.3583984375,
          "content": "/*\n * This file is part of diff-pdf.\n *\n * Copyright (C) 2009 TT-Solutions.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"bmpviewer.h\"\n#include \"gutter.h\"\n\n#include <wx/sizer.h>\n\nBEGIN_EVENT_TABLE(BitmapViewer, wxScrolledWindow)\n    EVT_LEFT_DOWN(BitmapViewer::OnMouseDown)\n    EVT_LEFT_UP(BitmapViewer::OnMouseUp)\n    EVT_MOTION(BitmapViewer::OnMouseMove)\n    EVT_MOUSE_CAPTURE_LOST(BitmapViewer::OnMouseCaptureLost)\n    EVT_SCROLLWIN(BitmapViewer::OnScrolling)\n    EVT_SIZE(BitmapViewer::OnSizeChanged)\nEND_EVENT_TABLE()\n\nBitmapViewer::BitmapViewer(wxWindow *parent)\n    : wxScrolledWindow(parent,\n                       wxID_ANY,\n                       wxDefaultPosition, wxDefaultSize,\n                       wxFULL_REPAINT_ON_RESIZE)\n{\n    m_gutter = NULL;\n    m_zoom_factor = 1.0;\n\n    SetScrollRate(1, 1);\n\n    wxBitmap dummyBitmap(16, 16);\n    m_content = new wxStaticBitmap(this, wxID_ANY, dummyBitmap);\n\n    wxBoxSizer *sizer = new wxBoxSizer(wxVERTICAL);\n    sizer->Add(m_content, wxSizerFlags(1).Expand());\n    SetSizer(sizer);\n\n    // we need to bind mouse-down event to m_content, as this scrolled window\n    // will never see mouse events otherwise\n    m_content->Connect\n               (\n                   wxEVT_LEFT_DOWN,\n                   wxMouseEventHandler(BitmapViewer::OnMouseDown),\n                   NULL,\n                   this\n               );\n}\n\n\nvoid BitmapViewer::SetBestFitZoom()\n{\n    // compute highest scale factor that still doesn't need scrollbars:\n\n    float scale_x = float(GetSize().x) / float(m_orig_image.GetWidth());\n    float scale_y = float(GetSize().y) / float(m_orig_image.GetHeight());\n\n    SetZoom(std::min(scale_x, scale_y));\n}\n\n\nvoid BitmapViewer::UpdateBitmap()\n{\n    int new_w = int(m_orig_image.GetWidth() * m_zoom_factor);\n    int new_h = int(m_orig_image.GetHeight() * m_zoom_factor);\n\n    if ( new_w != m_orig_image.GetWidth() ||\n         new_h != m_orig_image.GetHeight() )\n    {\n        wxImage scaled =\n            m_orig_image.Scale\n                         (\n                             new_w,\n                             new_h,\n                             // we don't need HQ filtering when upscaling\n                             m_zoom_factor < 1.0\n                                ? wxIMAGE_QUALITY_HIGH\n                                : wxIMAGE_QUALITY_NORMAL\n                         );\n        m_content->SetBitmap(wxBitmap(scaled));\n    }\n    else\n    {\n        m_content->SetBitmap(wxBitmap(m_orig_image));\n    }\n\n    GetSizer()->FitInside(this);\n\n    if ( m_gutter )\n        m_gutter->UpdateViewPos(this);\n}\n\n\nvoid BitmapViewer::Set(const wxImage& image)\n{\n    m_orig_image = image;\n    UpdateBitmap();\n}\n\n\nvoid BitmapViewer::Set(cairo_surface_t *surface)\n{\n    // Cairo's RGB24 surfaces use 32 bits per pixel, while wxImage uses\n    // 24 bits per pixel, so we need to convert between the two representations\n    // manually. Moreover, channels order is different too, RGB vs. BGR.\n\n    const int w = cairo_image_surface_get_width(surface);\n    const int h = cairo_image_surface_get_height(surface);\n\n    wxImage img(w, h, false);\n\n    unsigned char *p_out = img.GetData();\n    const unsigned char *p_in = cairo_image_surface_get_data(surface);\n    const int stride = cairo_image_surface_get_stride(surface);\n\n    for ( int y = 0; y < h; y++, p_in += stride )\n    {\n        for ( int x = 0; x < w; x++ )\n        {\n            *(p_out++) = *(p_in + 4 * x + 2);\n            *(p_out++) = *(p_in + 4 * x + 1);\n            *(p_out++) = *(p_in + 4 * x + 0);\n        }\n    }\n\n    Set(img);\n}\n\n\nvoid BitmapViewer::AttachGutter(Gutter *g)\n{\n    m_gutter = g;\n    if ( g )\n        g->UpdateViewPos(this);\n}\n\n\nvoid BitmapViewer::OnMouseDown(wxMouseEvent& event)\n{\n    wxPoint view_origin;\n    GetViewStart(&view_origin.x, &view_origin.y);\n\n    const wxPoint pos = event.GetPosition();\n\n    m_draggingPage = true;\n    m_draggingLastMousePos = pos;\n    CaptureMouse();\n}\n\n\nvoid BitmapViewer::OnMouseUp(wxMouseEvent&)\n{\n    m_draggingPage = false;\n    ReleaseMouse();\n}\n\n\nvoid BitmapViewer::OnMouseMove(wxMouseEvent& event)\n{\n    event.Skip();\n\n    if ( !m_draggingPage )\n        return;\n\n    wxPoint view_origin;\n    GetViewStart(&view_origin.x, &view_origin.y);\n\n    const wxPoint pos = event.GetPosition();\n    wxPoint new_pos = view_origin + (m_draggingLastMousePos - pos);\n\n    Scroll(new_pos.x, new_pos.y);\n    if ( m_gutter )\n        m_gutter->UpdateViewPos(this);\n\n    m_draggingLastMousePos = pos;\n}\n\n\nvoid BitmapViewer::OnMouseCaptureLost(wxMouseCaptureLostEvent& event)\n{\n    m_draggingPage = false;\n    event.Skip();\n}\n\n\nvoid BitmapViewer::OnScrolling(wxScrollWinEvent& event)\n{\n    if ( m_gutter )\n        m_gutter->UpdateViewPos(this);\n\n    event.Skip();\n}\n\nvoid BitmapViewer::OnSizeChanged(wxSizeEvent& event)\n{\n    if ( m_gutter )\n        m_gutter->UpdateViewPos(this);\n\n    event.Skip();\n}\n"
        },
        {
          "name": "bmpviewer.h",
          "type": "blob",
          "size": 2.216796875,
          "content": "/*\n * This file is part of diff-pdf.\n *\n * Copyright (C) 2009 TT-Solutions.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef _bmpviewer_h_\n#define _bmpviewer_h_\n\n#include <cairo/cairo.h>\n\n#include <wx/image.h>\n#include <wx/bitmap.h>\n#include <wx/statbmp.h>\n#include <wx/scrolwin.h>\n#include <wx/event.h>\n\nclass Gutter;\n\n// widget for comfortable viewing of a bitmap, with high-quality zooming\nclass BitmapViewer : public wxScrolledWindow\n{\npublic:\n    BitmapViewer(wxWindow *parent);\n\n    // set the bitmap to be shown\n    void Set(const wxImage& image);\n    void Set(cairo_surface_t *surface);\n\n    float GetZoom() const\n    {\n        return m_zoom_factor;\n    }\n\n    void SetZoom(float factor)\n    {\n        m_zoom_factor = factor;\n        UpdateBitmap();\n    }\n\n    // sets the zoom value to \"best fit\" for current window size\n    void SetBestFitZoom();\n\n    // attaches a gutter that shows current scrolling position to the window\n    void AttachGutter(Gutter *g);\n\nprivate:\n    // update the content after some change (bitmap, zoom factor, ...)\n    void UpdateBitmap();\n\n    void OnMouseDown(wxMouseEvent& event);\n    void OnMouseUp(wxMouseEvent& event);\n    void OnMouseMove(wxMouseEvent& event);\n    void OnMouseCaptureLost(wxMouseCaptureLostEvent& event);\n    void OnScrolling(wxScrollWinEvent& event);\n    void OnSizeChanged(wxSizeEvent& event);\n\nprivate:\n    wxStaticBitmap *m_content;\n    wxImage m_orig_image;\n    float m_zoom_factor;\n\n    // is the user currently dragging the page around with the mouse?\n    bool m_draggingPage;\n    wxPoint m_draggingLastMousePos;\n\n    Gutter *m_gutter;\n\n    DECLARE_EVENT_TABLE()\n};\n\n#endif // _bmpviewer_h_\n"
        },
        {
          "name": "bootstrap",
          "type": "blob",
          "size": 2.537109375,
          "content": "#!/bin/sh\n\n# Script to execute to initialize diff-pdf build system after checking out\n# pristine sources from a version control system: this script creates all\n# generated files which are needed for the build but not stored under version\n# control.\n\n# Copyright (C) 2005, 2006, 2007, 2008 Vadim Zeitlin\n# All Rights Reserved\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions\n# are met:\n#\n# 1. Redistributions of source code must retain the above copyright\n#    notice, this list of conditions and the following disclaimer.\n# 2. Redistributions in binary form must reproduce the above copyright\n#    notice, this list of conditions and the following disclaimer in\n#    the documentation and/or other materials provided with the\n#    distribution.\n# 3. Neither the name of the Author nor the names of its contributors\n#    may be used to endorse or promote products derived from this software\n#    without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS''\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n# PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR\n# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\n# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n# SUCH DAMAGE.\n\n# $Id$\n\nif [ ! -f configure.ac -o ! -f Makefile.am ]; then\n    echo \"Please run this script from the diff-pdf source directory.\"\n    exit 2\nfi\n\n# use --foreign with automake because we lack standard GNU NEWS and AUTHOR\n# files, if they're added we can \"upgrade\" to (default) GNU strictness. Use\n# --copy to allow simultaneous use on windows under mingw and cygwin platforms.\n# Symlinking of files under mingw does not work out for cygwin and vice-versa.\necho \"Setting up build system for diff-pdf:\"\necho \" - aclocal \" && aclocal ${wx+-I} $wx -I admin && \\\necho \" - autoconf \" && autoconf && \\\necho \" - automake \" && automake --add-missing --copy --foreign && \\\necho \"Build setup successful, type \\\"./configure\\\" to configure diff-pdf now.\" && \\\nexit 0\n\necho \"Automatic build files setup failed!\"\n\nexit 1\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 1.5087890625,
          "content": "\ndnl This file is part of diff-pdf.\ndnl\ndnl Copyright (C) 2009 TT-Solutions.\ndnl\ndnl This program is free software; you can redistribute it and/or modify\ndnl it under the terms of the GNU General Public License as published by\ndnl the Free Software Foundation; either version 2 of the License, or\ndnl (at your option) any later version.\ndnl\ndnl This program is distributed in the hope that it will be useful,\ndnl but WITHOUT ANY WARRANTY; without even the implied warranty of\ndnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\ndnl GNU General Public License for more details.\ndnl\ndnl You should have received a copy of the GNU General Public License\ndnl along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nAC_PREREQ(2.61)\nAC_INIT(diff-pdf, 0.5.2, [vaclav@slavik.io])\n\nAC_CONFIG_SRCDIR([diff-pdf.cpp])\nAC_CONFIG_AUX_DIR([admin])\n\nAM_INIT_AUTOMAKE\nAM_MAINTAINER_MODE\n\nm4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])\n\ndnl remember, \"build\" is where we compile, \"host\" is where the resulting\ndnl program runs (which may be different from \"build\" for cross-compilation)\nAC_CANONICAL_HOST\n\n\ndnl === Program checks ===\n\nAC_PROG_CXX\nAC_LANG(C++)\n\ndnl === Library checks ===\n\nPKG_CHECK_MODULES(POPPLER,\n                  [glib-2.0 >= 2.36 poppler-glib >= 0.10 cairo-pdf])\n\nAM_OPTIONS_WXCONFIG\nAM_PATH_WXCONFIG([3.0.0], [wxfound=1], [wxfound=0], [core,base])\nif test \"$wxfound\" != 1 ; then\n    AC_MSG_ERROR([wxWidgets is required])\nfi\n\ndnl === Generate output files ===\n\nAC_CONFIG_FILES([\n    Makefile\n])\nAC_OUTPUT\n"
        },
        {
          "name": "diff-pdf.cpp",
          "type": "blob",
          "size": 31.5029296875,
          "content": "/*\n * This file is part of diff-pdf.\n *\n * Copyright (C) 2009 TT-Solutions.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"bmpviewer.h\"\n#include \"gutter.h\"\n\n#include <stdio.h>\n#include <assert.h>\n\n#include <vector>\n\n#include <glib.h>\n#include <poppler.h>\n#include <cairo/cairo.h>\n#include <cairo/cairo-pdf.h>\n\n#include <wx/app.h>\n#include <wx/evtloop.h>\n#include <wx/cmdline.h>\n#include <wx/filename.h>\n#include <wx/log.h>\n#include <wx/frame.h>\n#include <wx/sizer.h>\n#include <wx/toolbar.h>\n#include <wx/artprov.h>\n#include <wx/progdlg.h>\n#include <wx/filesys.h>\n\n// ------------------------------------------------------------------------\n// PDF rendering functions\n// ------------------------------------------------------------------------\n\nbool g_verbose = false;\nbool g_skip_identical = false;\nbool g_mark_differences = false;\nlong g_channel_tolerance = 0;\nlong g_per_page_pixel_tolerance = 0;\nbool g_grayscale = false;\n// Resolution to use for rasterization, in DPI\n#define DEFAULT_RESOLUTION 300\nlong g_resolution = DEFAULT_RESOLUTION;\n\ninline unsigned char to_grayscale(unsigned char r, unsigned char g, unsigned char b)\n{\n    return (unsigned char)(0.2126 * r + 0.7152 * g + 0.0722 * b);\n}\n\ncairo_surface_t *render_page(PopplerPage *page)\n{\n    double w, h;\n    poppler_page_get_size(page, &w, &h);\n\n    const int w_px = int((int)g_resolution * w / 72.0);\n    const int h_px = int((int)g_resolution * h / 72.0);\n\n    cairo_surface_t *surface =\n        cairo_image_surface_create(CAIRO_FORMAT_RGB24, w_px, h_px);\n\n    cairo_t *cr = cairo_create(surface);\n\n    // clear the surface to white background:\n    cairo_save(cr);\n    cairo_set_source_rgb(cr, 1, 1, 1);\n    cairo_rectangle(cr, 0, 0, w_px, h_px);\n    cairo_fill(cr);\n    cairo_restore(cr);\n\n    // Scale so that PDF output covers the whole surface. Image surface is\n    // created with transformation set up so that 1 coordinate unit is 1 pixel;\n    // Poppler assumes 1 unit = 1 point.\n    cairo_scale(cr, (int)g_resolution / 72.0, (int)g_resolution / 72.0);\n\n    poppler_page_render(page, cr);\n\n    cairo_show_page(cr);\n\n    cairo_destroy(cr);\n\n    return surface;\n}\n\n\n// Creates image of differences between s1 and s2. If the offset is specified,\n// then s2 is displaced by it. If thumbnail and thumbnail_width are specified,\n// then a thumbnail with highlighted differences is created too.\ncairo_surface_t *diff_images(int page, cairo_surface_t *s1, cairo_surface_t *s2,\n                             int offset_x = 0, int offset_y = 0,\n                             wxImage *thumbnail = NULL, int thumbnail_width = -1)\n{\n    assert( s1 || s2 );\n\n    long pixel_diff_count = 0;\n    wxRect r1, r2;\n\n    if ( s1 )\n    {\n        r1 = wxRect(0, 0,\n                    cairo_image_surface_get_width(s1),\n                    cairo_image_surface_get_height(s1));\n    }\n    if ( s2 )\n    {\n        r2 = wxRect(offset_x, offset_y,\n                    cairo_image_surface_get_width(s2),\n                    cairo_image_surface_get_height(s2));\n    }\n\n    // compute union rectangle starting at [0,0] position\n    wxRect rdiff(r1);\n    rdiff.Union(r2);\n    r1.Offset(-rdiff.x, -rdiff.y);\n    r2.Offset(-rdiff.x, -rdiff.y);\n    rdiff.Offset(-rdiff.x, -rdiff.y);\n\n    bool changes = false;\n\n    cairo_surface_t *diff =\n        cairo_image_surface_create(CAIRO_FORMAT_RGB24, rdiff.width, rdiff.height);\n\n    float thumbnail_scale;\n    int thumbnail_height;\n\n    if ( thumbnail )\n    {\n        thumbnail_scale = float(thumbnail_width) / float(rdiff.width);\n        thumbnail_height = int(rdiff.height * thumbnail_scale);\n        thumbnail->Create(thumbnail_width, thumbnail_height);\n        // initalize the thumbnail with a white rectangle:\n        thumbnail->SetRGB(wxRect(), 255, 255, 255);\n    }\n\n    // clear the surface to white background if the merged images don't fully\n    // overlap:\n    if ( r1 != r2 )\n    {\n        changes = true;\n\n        cairo_t *cr = cairo_create(diff);\n        cairo_set_source_rgb(cr, 1, 1, 1);\n        cairo_rectangle(cr, 0, 0, rdiff.width, rdiff.height);\n        cairo_fill(cr);\n        cairo_destroy(cr);\n    }\n\n    const int stride1 = s1 ? cairo_image_surface_get_stride(s1) : 0;\n    const int stride2 = s2 ? cairo_image_surface_get_stride(s2) : 0;\n    const int stridediff = cairo_image_surface_get_stride(diff);\n\n    const unsigned char *data1 = s1 ? cairo_image_surface_get_data(s1) : NULL;\n    const unsigned char *data2 = s2 ? cairo_image_surface_get_data(s2) : NULL;\n    unsigned char *datadiff = cairo_image_surface_get_data(diff);\n\n    // we visualize the differences by taking one channel from s1\n    // and the other two channels from s2:\n\n    // first, copy s1 over:\n    if ( s1 )\n    {\n        unsigned char *out = datadiff + r1.y * stridediff + r1.x * 4;\n        for ( int y = 0;\n              y < r1.height;\n              y++, data1 += stride1, out += stridediff )\n        {\n            memcpy(out, data1, r1.width * 4);\n        }\n    }\n\n    // then, copy B channel from s2 over it; also compare the two versions\n    // to see if there are any differences:\n    if ( s2 )\n    {\n        unsigned char *out = datadiff + r2.y * stridediff + r2.x * 4;\n        for ( int y = 0;\n              y < r2.height;\n              y++, data2 += stride2, out += stridediff )\n        {\n            bool linediff = false;\n\n            for ( int x = 0; x < r2.width * 4; x += 4 )\n            {\n                unsigned char cr1 = *(out + x + 0);\n                unsigned char cg1 = *(out + x + 1);\n                unsigned char cb1 = *(out + x + 2);\n\n                unsigned char cr2 = *(data2 + x + 0);\n                unsigned char cg2 = *(data2 + x + 1);\n                unsigned char cb2 = *(data2 + x + 2);\n\n                if ( cr1 > (cr2+g_channel_tolerance) || cr1 < (cr2-g_channel_tolerance)\n                  || cg1 > (cg2+g_channel_tolerance) || cg1 < (cg2-g_channel_tolerance)\n                  || cb1 > (cb2+g_channel_tolerance) || cb1 < (cb2-g_channel_tolerance)\n                   )\n                {\n                    pixel_diff_count++;\n                    changes = true;\n                    linediff = true;\n\n                    if ( thumbnail )\n                    {\n                        // calculate the coordinates in the thumbnail\n                        int tx = int((r2.x + x/4.0) * thumbnail_scale);\n                        int ty = int((r2.y + y) * thumbnail_scale);\n\n                        // Limit the coordinates to the thumbnail size (may be\n                        // off slightly due to rounding errors).\n                        // See https://github.com/vslavik/diff-pdf/pull/58\n                        tx = std::min(tx, thumbnail_width - 1);\n                        ty = std::min(ty, thumbnail_height - 1);\n\n                        // mark changes with red\n                        thumbnail->SetRGB(tx, ty, 255, 0, 0);\n                    }\n                }\n\n                if (g_grayscale)\n                {\n                    // convert both images to grayscale, use blue for s1, red for s2\n                    unsigned char gray1 = to_grayscale(cr1, cg1, cb1);\n                    unsigned char gray2 = to_grayscale(cr2, cg2, cb2);\n                    *(out + x + 0) = gray2;\n                    *(out + x + 1) = (gray1 + gray2) / 2;\n                    *(out + x + 2) = gray1;\n                }\n                else\n                {\n                    // change the B channel to be from s2; RG will be s1\n                    *(out + x + 2) = cb2;\n                }\n            }\n\n            if (g_mark_differences && linediff)\n            {\n                for (int x = 0; x < (10 < r2.width ? 10 : r2.width) * 4; x+=4)\n                {\n                   *(out + x + 0) = 0;\n                   *(out + x + 1) = 0;\n                   *(out + x + 2) = 255;\n                }\n            }\n        }\n    }\n\n    // add background image of the page to the thumbnails\n    if ( thumbnail )\n    {\n        // copy the 'diff' surface into wxImage:\n        wxImage bg(rdiff.width, rdiff.height);\n        unsigned char *in = datadiff;\n        unsigned char *out = bg.GetData();\n        for ( int y = 0; y < rdiff.height; y++, in += stridediff )\n        {\n            for ( int x = 0; x < rdiff.width * 4; x += 4 )\n            {\n                // cairo_surface_t uses BGR order, wxImage has RGB\n                *(out++) = *(in + x + 2);\n                *(out++) = *(in + x + 1);\n                *(out++) = *(in + x + 0);\n            }\n        }\n\n        // scale it to thumbnail size:\n        bg.Rescale(thumbnail_width, thumbnail_height, wxIMAGE_QUALITY_HIGH);\n\n        // and merge with the diff markers in *thumbnail, making it much\n        // lighter in the process:\n        in = bg.GetData();\n        out = thumbnail->GetData();\n        for ( int i = thumbnail_width * thumbnail_height; i > 0; i-- )\n        {\n            if ( out[1] == 0 ) // G=0 ==> not white\n            {\n                // marked with red color, as place with differences -- don't\n                // paint background image here, make the red as visible as\n                // possible\n                out += 3;\n                in += 3;\n            }\n            else\n            {\n                // merge in lighter background image\n                *(out++) = 128 + *(in++) / 2;\n                *(out++) = 128 + *(in++) / 2;\n                *(out++) = 128 + *(in++) / 2;\n            }\n        }\n\n        // If there were no changes, indicate it by using green\n        // (170,230,130) color for the thumbnail in gutter control:\n        if ( !changes )\n        {\n            out = thumbnail->GetData();\n            for ( int i = thumbnail_width * thumbnail_height;\n                  i > 0;\n                  i--, out += 3 )\n            {\n                out[0] = 170/2 + out[0] / 2;\n                out[1] = 230/2 + out[1] / 2;\n                out[2] = 130/2 + out[2] / 2;\n            }\n        }\n    }\n\n    if ( g_verbose )\n        printf(\"page %d has %ld pixels that differ\\n\", page, pixel_diff_count);\n\n    // If we specified a tolerance, then return if we have exceeded that for this page\n    if ( g_per_page_pixel_tolerance == 0 ? changes : pixel_diff_count > g_per_page_pixel_tolerance)\n    {\n        return diff;\n    }\n    else\n    {\n        cairo_surface_destroy(diff);\n        return NULL;\n    }\n}\n\n\n// Compares given two pages. If cr_out is not NULL, then the diff image (either\n// differences or unmodified page, if there are no diffs) is drawn to it.\n// If thumbnail and thumbnail_width are specified, then a thumbnail with\n// highlighted differences is created too.\nbool page_compare(int page, cairo_t *cr_out,\n                  PopplerPage *page1, PopplerPage *page2,\n                  wxImage *thumbnail = NULL, int thumbnail_width = -1)\n{\n    cairo_surface_t *img1 = page1 ? render_page(page1) : NULL;\n    cairo_surface_t *img2 = page2 ? render_page(page2) : NULL;\n\n    cairo_surface_t *diff = diff_images(page, img1, img2, 0, 0,\n                                        thumbnail, thumbnail_width);\n    const bool has_diff = (diff != NULL);\n\n    if ( cr_out )\n    {\n        if ( diff )\n        {\n            // render the difference as high-resolution bitmap\n\n            cairo_save(cr_out);\n            cairo_scale(cr_out, 72.0 / g_resolution, 72.0 / g_resolution);\n\n            cairo_set_source_surface(cr_out, diff ? diff : img1, 0, 0);\n            cairo_paint(cr_out);\n\n            cairo_restore(cr_out);\n        }\n        else\n        {\n            // save space (as well as improve rendering quality) in diff pdf\n            // by writing unchanged pages in their original form rather than\n            // a rasterized one\n\n            if (!g_skip_identical)\n               poppler_page_render(page1, cr_out);\n        }\n\n        if (diff || !g_skip_identical)\n            cairo_show_page(cr_out);\n    }\n\n    if ( diff )\n        cairo_surface_destroy(diff);\n\n    if ( img1 )\n        cairo_surface_destroy(img1);\n    if ( img2 )\n        cairo_surface_destroy(img2);\n\n    return !has_diff;\n}\n\n\n// Compares two documents, writing diff PDF into file named 'pdf_output' if\n// not NULL. if 'differences' is not NULL, puts a map of which pages differ\n// into it. If 'progress' is provided, it is updated to reflect comparison's\n// progress. If 'gutter' is set, then all the pages are added to it, with\n// their respective thumbnails (the gutter must be empty beforehand).\nbool doc_compare(PopplerDocument *doc1, PopplerDocument *doc2,\n                 const char *pdf_output,\n                 std::vector<bool> *differences,\n                 wxProgressDialog *progress = NULL,\n                 Gutter *gutter = NULL)\n{\n    int pages_differ = 0;\n\n    cairo_surface_t *surface_out = NULL;\n    cairo_t *cr_out = NULL;\n\n    if ( pdf_output )\n    {\n        double w, h;\n        poppler_page_get_size(poppler_document_get_page(doc1, 0), &w, &h);\n        surface_out = cairo_pdf_surface_create(pdf_output, w, h);\n        cr_out = cairo_create(surface_out);\n    }\n\n    int pages1 = poppler_document_get_n_pages(doc1);\n    int pages2 = poppler_document_get_n_pages(doc2);\n    int pages_total = pages1 > pages2 ? pages1 : pages2;\n\n    if ( pages1 != pages2 )\n    {\n        if ( g_verbose )\n            printf(\"pages count differs: %d vs %d\\n\", pages1, pages2);\n    }\n\n    for ( int page = 0; page < pages_total; page++ )\n    {\n        if ( progress )\n        {\n            progress->Update\n                      (\n                          page,\n                          wxString::Format\n                          (\n                              \"Comparing page %d of %d...\",\n                              page+1,\n                              pages_total\n                          )\n                       );\n        }\n\n        if ( pdf_output && page != 0 )\n        {\n            double w, h;\n            poppler_page_get_size(poppler_document_get_page(doc1, page), &w, &h);\n            cairo_pdf_surface_set_size(surface_out, w, h);\n        }\n\n        PopplerPage *page1 = page < pages1\n                             ? poppler_document_get_page(doc1, page)\n                             : NULL;\n        PopplerPage *page2 = page < pages2\n                             ? poppler_document_get_page(doc2, page)\n                             : NULL;\n\n        bool page_same;\n\n        if ( gutter )\n        {\n            wxImage thumbnail;\n            page_same = page_compare(page, cr_out, page1, page2,\n                                     &thumbnail, Gutter::WIDTH);\n\n            wxString label1(\"(null)\");\n            wxString label2(\"(null)\");\n\n            if ( page1 )\n            {\n                gchar *label;\n                g_object_get(page1, \"label\", &label, NULL);\n                label1 = wxString::FromUTF8(label);\n                g_free(label);\n            }\n            if ( page2 )\n            {\n                gchar *label;\n                g_object_get(page2, \"label\", &label, NULL);\n                label2 = wxString::FromUTF8(label);\n                g_free(label);\n            }\n\n\n            wxString label;\n            if ( label1 == label2 )\n                label = label1;\n            else\n                label = label1 + \" / \" + label2;\n\n            gutter->AddPage(label, thumbnail);\n        }\n        else\n        {\n            page_same = page_compare(page, cr_out, page1, page2);\n        }\n\n        if ( differences )\n            differences->push_back(!page_same);\n\n        if ( !page_same )\n        {\n\t    pages_differ ++;\n\n            if ( g_verbose )\n                printf(\"page %d differs\\n\", page);\n\n            // If we don't need to output all different pages in any\n            // form (including verbose report of differing pages!), then\n            // we can stop comparing the PDFs as soon as we find the first\n            // difference.\n            if ( !g_verbose && !pdf_output && !differences && !gutter )\n                break;\n        }\n    }\n\n    if ( pdf_output )\n    {\n        cairo_destroy(cr_out);\n        cairo_surface_destroy(surface_out);\n    }\n\n    if (g_verbose)\n        printf(\"%d of %d pages differ.\\n\", pages_differ, pages_total);\n\n    // are doc1 and doc1 the same?\n    return (pages_differ == 0) && (pages1 == pages2);\n}\n\n\n// ------------------------------------------------------------------------\n// wxWidgets GUI\n// ------------------------------------------------------------------------\n\nconst int ID_PREV_PAGE = wxNewId();\nconst int ID_NEXT_PAGE = wxNewId();\nconst int ID_ZOOM_IN = wxNewId();\nconst int ID_ZOOM_OUT = wxNewId();\nconst int ID_OFFSET_LEFT = wxNewId();\nconst int ID_OFFSET_RIGHT = wxNewId();\nconst int ID_OFFSET_UP = wxNewId();\nconst int ID_OFFSET_DOWN = wxNewId();\nconst int ID_GUTTER = wxNewId();\n\n#define BMP_ARTPROV(id) wxArtProvider::GetBitmap(id, wxART_TOOLBAR)\n\n#define BMP_PREV_PAGE      BMP_ARTPROV(wxART_GO_BACK)\n#define BMP_NEXT_PAGE      BMP_ARTPROV(wxART_GO_FORWARD)\n\n#define BMP_OFFSET_LEFT    BMP_ARTPROV(wxART_GO_BACK)\n#define BMP_OFFSET_RIGHT   BMP_ARTPROV(wxART_GO_FORWARD)\n#define BMP_OFFSET_UP      BMP_ARTPROV(wxART_GO_UP)\n#define BMP_OFFSET_DOWN    BMP_ARTPROV(wxART_GO_DOWN)\n\n#ifdef __WXGTK__\n    #define BMP_ZOOM_IN    BMP_ARTPROV(\"gtk-zoom-in\")\n    #define BMP_ZOOM_OUT   BMP_ARTPROV(\"gtk-zoom-out\")\n#else\n    #include \"gtk-zoom-in.xpm\"\n    #include \"gtk-zoom-out.xpm\"\n    #define BMP_ZOOM_IN    wxBitmap(gtk_zoom_in_xpm)\n    #define BMP_ZOOM_OUT   wxBitmap(gtk_zoom_out_xpm)\n#endif\n\nstatic const float ZOOM_FACTOR_STEP = 1.2f;\n\nclass DiffFrame : public wxFrame\n{\npublic:\n    DiffFrame(const wxString& title)\n        : wxFrame(NULL, wxID_ANY, title)\n    {\n        m_cur_page = -1;\n\n        CreateStatusBar(2);\n        SetStatusBarPane(0);\n        const int stat_widths[] = { -1, 150 };\n        SetStatusWidths(2, stat_widths);\n\n        wxToolBar *toolbar =\n            new wxToolBar\n                (\n                    this, wxID_ANY,\n                    wxDefaultPosition, wxDefaultSize,\n                    wxTB_HORIZONTAL | wxTB_FLAT | wxTB_HORZ_TEXT\n                );\n\n        toolbar->AddTool(ID_PREV_PAGE, \"Previous\", BMP_PREV_PAGE,\n                         \"Go to previous page (PgUp)\");\n        toolbar->AddTool(ID_NEXT_PAGE, \"Next\", BMP_NEXT_PAGE,\n                         \"Go to next page (PgDown)\");\n        toolbar->AddTool(ID_ZOOM_IN, \"Zoom in\", BMP_ZOOM_IN,\n                         \"Make the page larger (Ctrl +)\");\n        toolbar->AddTool(ID_ZOOM_OUT, \"Zoom out\", BMP_ZOOM_OUT,\n                         \"Make the page smaller (Ctrl -)\");\n        toolbar->AddTool(ID_OFFSET_LEFT, \"\", BMP_OFFSET_LEFT,\n                         \"Offset one of the pages to the left (Ctrl left)\");\n        toolbar->AddTool(ID_OFFSET_RIGHT, \"\", BMP_OFFSET_RIGHT,\n                         \"Offset one of the pages to the right (Ctrl right)\");\n        toolbar->AddTool(ID_OFFSET_UP, \"\", BMP_OFFSET_UP,\n                         \"Offset one of the pages up (Ctrl up)\");\n        toolbar->AddTool(ID_OFFSET_DOWN, \"\", BMP_OFFSET_DOWN,\n                         \"Offset one of the pages down (Ctrl down)\");\n\n        toolbar->Realize();\n        SetToolBar(toolbar);\n\n        wxAcceleratorEntry accels[8];\n        accels[0].Set(wxACCEL_NORMAL, WXK_PAGEUP, ID_PREV_PAGE);\n        accels[1].Set(wxACCEL_NORMAL, WXK_PAGEDOWN, ID_NEXT_PAGE);\n        accels[2].Set(wxACCEL_CTRL, (int)'=', ID_ZOOM_IN);\n        accels[3].Set(wxACCEL_CTRL, (int)'-', ID_ZOOM_OUT);\n        accels[4].Set(wxACCEL_CTRL, WXK_LEFT, ID_OFFSET_LEFT);\n        accels[5].Set(wxACCEL_CTRL, WXK_RIGHT, ID_OFFSET_RIGHT);\n        accels[6].Set(wxACCEL_CTRL, WXK_UP, ID_OFFSET_UP);\n        accels[7].Set(wxACCEL_CTRL, WXK_DOWN, ID_OFFSET_DOWN);\n\n        wxAcceleratorTable accel_table(8, accels);\n        SetAcceleratorTable(accel_table);\n\n        m_gutter = new Gutter(this, ID_GUTTER);\n\n        m_viewer = new BitmapViewer(this);\n        m_viewer->AttachGutter(m_gutter);\n        m_viewer->SetFocus();\n\n        wxBoxSizer *sizer = new wxBoxSizer(wxHORIZONTAL);\n        sizer->Add(m_gutter, wxSizerFlags(0).Expand().Border(wxALL, 2));\n        sizer->Add(m_viewer, wxSizerFlags(1).Expand());\n        SetSizer(sizer);\n    }\n\n    void SetDocs(PopplerDocument *doc1, PopplerDocument *doc2)\n    {\n        m_doc1 = doc1;\n        m_doc2 = doc2;\n\n        wxProgressDialog progress(\"Comparing documents\",\n                                  \"Comparing documents...\",\n                                  wxMax(poppler_document_get_n_pages(m_doc1),\n                                        poppler_document_get_n_pages(m_doc2)),\n                                  this,\n                                  wxPD_SMOOTH | wxPD_REMAINING_TIME);\n\n\n        doc_compare(m_doc1, m_doc2, NULL, &m_pages, &progress, m_gutter);\n\n        progress.Pulse();\n\n        m_diff_count = 0;\n        for ( std::vector<bool>::const_iterator i = m_pages.begin();\n              i != m_pages.end();\n              ++i )\n        {\n            if ( *i )\n                m_diff_count++;\n        }\n\n        GoToPage(0);\n\n        progress.Pulse();\n\n        m_viewer->SetBestFitZoom();\n        UpdateStatus();\n\n        progress.Hide();\n    }\n\n    void GoToPage(int n)\n    {\n        m_cur_page = n;\n        m_gutter->SetSelection(n);\n        DoUpdatePage();\n    }\n\nprivate:\n    void DoUpdatePage()\n    {\n        wxBusyCursor wait;\n\n        const int pages1 = poppler_document_get_n_pages(m_doc1);\n        const int pages2 = poppler_document_get_n_pages(m_doc2);\n\n        PopplerPage *page1 = m_cur_page < pages1\n                             ? poppler_document_get_page(m_doc1, m_cur_page)\n                             : NULL;\n        PopplerPage *page2 = m_cur_page < pages2\n                             ? poppler_document_get_page(m_doc2, m_cur_page)\n                             : NULL;\n\n        cairo_surface_t *img1 = page1 ? render_page(page1) : NULL;\n        cairo_surface_t *img2 = page2 ? render_page(page2) : NULL;\n\n        wxImage thumbnail;\n        cairo_surface_t *diff = diff_images\n                                (\n                                    m_cur_page,\n                                    img1, img2,\n                                    m_offset.x, m_offset.y,\n                                    &thumbnail, Gutter::WIDTH\n                                );\n\n        m_viewer->Set(diff ? diff : img1);\n\n        // Always update the diff map. It will be all-white if there were\n        // no differences.\n        m_gutter->SetThumbnail(m_cur_page, thumbnail);\n\n        if ( img1 )\n            cairo_surface_destroy(img1);\n        if ( img2 )\n            cairo_surface_destroy(img2);\n        if ( diff )\n            cairo_surface_destroy(diff);\n\n        UpdateStatus();\n    }\n\n    void UpdateStatus()\n    {\n        SetStatusText\n        (\n            wxString::Format\n            (\n                \"Page %d of %d; %d of them %s different, this page %s\",\n                m_cur_page + 1 /* humans prefer 1-based counting*/,\n                (int)m_pages.size(),\n                m_diff_count,\n                m_diff_count == 1 ? \"is\" : \"are\",\n                m_pages[m_cur_page] ? \"differs\" : \"is unchanged\"\n            ),\n            0\n        );\n\n        SetStatusText\n        (\n            wxString::Format\n            (\n                \"%.1f%% [offset %d,%d]\",\n                m_viewer->GetZoom() * 100.0,\n                m_offset.x, m_offset.y\n            ),\n            1\n        );\n    }\n\n    void OnSetPage(wxCommandEvent& event)\n    {\n        GoToPage(event.GetSelection());\n    }\n\n    void OnPrevPage(wxCommandEvent&)\n    {\n        if ( m_cur_page > 0 )\n            GoToPage(m_cur_page - 1);\n    }\n\n    void OnNextPage(wxCommandEvent&)\n    {\n        if ( m_cur_page < m_pages.size() - 1 )\n            GoToPage(m_cur_page + 1);\n    }\n\n    void OnUpdatePrevPage(wxUpdateUIEvent& event)\n    {\n        event.Enable(m_cur_page > 0);\n    }\n\n    void OnUpdateNextPage(wxUpdateUIEvent& event)\n    {\n        event.Enable(m_cur_page < m_pages.size() - 1);\n    }\n\n    void OnZoomIn(wxCommandEvent&)\n    {\n        wxBusyCursor wait;\n        m_viewer->SetZoom(m_viewer->GetZoom() * ZOOM_FACTOR_STEP);\n        UpdateStatus();\n    }\n\n    void OnZoomOut(wxCommandEvent&)\n    {\n        wxBusyCursor wait;\n        m_viewer->SetZoom(m_viewer->GetZoom() / ZOOM_FACTOR_STEP);\n        UpdateStatus();\n    }\n\n    void DoOffset(int x, int y)\n    {\n        m_offset.x += x;\n        m_offset.y += y;\n        DoUpdatePage();\n    }\n\n    void OnOffsetLeft(wxCommandEvent&) { DoOffset(-1, 0); }\n    void OnOffsetRight(wxCommandEvent&) { DoOffset(1, 0); }\n    void OnOffsetUp(wxCommandEvent&) { DoOffset(0, -1); }\n    void OnOffsetDown(wxCommandEvent&) { DoOffset(0, 1); }\n\n    DECLARE_EVENT_TABLE()\n\nprivate:\n    BitmapViewer *m_viewer;\n    Gutter *m_gutter;\n    PopplerDocument *m_doc1, *m_doc2;\n    std::vector<bool> m_pages;\n    int m_diff_count;\n    int m_cur_page;\n    wxPoint m_offset;\n};\n\nBEGIN_EVENT_TABLE(DiffFrame, wxFrame)\n    EVT_LISTBOX  (ID_GUTTER,       DiffFrame::OnSetPage)\n    EVT_TOOL     (ID_PREV_PAGE,    DiffFrame::OnPrevPage)\n    EVT_TOOL     (ID_NEXT_PAGE,    DiffFrame::OnNextPage)\n    EVT_UPDATE_UI(ID_PREV_PAGE,    DiffFrame::OnUpdatePrevPage)\n    EVT_UPDATE_UI(ID_NEXT_PAGE,    DiffFrame::OnUpdateNextPage)\n    EVT_TOOL     (ID_ZOOM_IN,      DiffFrame::OnZoomIn)\n    EVT_TOOL     (ID_ZOOM_OUT,     DiffFrame::OnZoomOut)\n    EVT_TOOL     (ID_OFFSET_LEFT,  DiffFrame::OnOffsetLeft)\n    EVT_TOOL     (ID_OFFSET_RIGHT, DiffFrame::OnOffsetRight)\n    EVT_TOOL     (ID_OFFSET_UP,    DiffFrame::OnOffsetUp)\n    EVT_TOOL     (ID_OFFSET_DOWN,  DiffFrame::OnOffsetDown)\nEND_EVENT_TABLE()\n\n\nclass DiffPdfApp : public wxApp\n{\npublic:\n    DiffPdfApp() : m_tlw(NULL) {}\n\n    virtual bool OnInit()\n    {\n        m_tlw = new DiffFrame(m_title);\n\n        // like in LMI, maximize the window\n        m_tlw->Maximize();\n        m_tlw->Show();\n\n        // yield so that size changes above take effect immediately (and so we\n        // can query the window for its size)\n        Yield();\n\n        return true;\n    }\n\n    void SetData(const wxString& file1, PopplerDocument *doc1,\n                 const wxString& file2, PopplerDocument *doc2)\n    {\n        m_title = wxString::Format(\"Differences between %s and %s\", file1.c_str(), file2.c_str());\n        m_doc1 = doc1;\n        m_doc2 = doc2;\n    }\n\nprotected:\n    virtual void OnEventLoopEnter(wxEventLoopBase *loop)\n    {\n        wxApp::OnEventLoopEnter(loop);\n\n        if ( loop->IsMain() )\n            SetFrameDocs();\n    }\n\n    void SetFrameDocs()\n    {\n        wxASSERT( m_tlw );\n        wxASSERT( m_doc1 );\n        wxASSERT( m_doc2 );\n\n        m_tlw->SetDocs(m_doc1, m_doc2);\n    }\n\nprivate:\n    DiffFrame *m_tlw;\n    wxString m_title;\n    PopplerDocument *m_doc1, *m_doc2;\n};\n\nIMPLEMENT_APP_NO_MAIN(DiffPdfApp);\n\n\n// ------------------------------------------------------------------------\n// main()\n// ------------------------------------------------------------------------\n\nint main(int argc, char *argv[])\n{\n    wxAppConsole::CheckBuildOptions(WX_BUILD_OPTIONS_SIGNATURE, \"diff-pdf\");\n    wxInitializer wxinitializer(argc, argv);\n\n    static const wxCmdLineEntryDesc cmd_line_desc[] =\n    {\n        { wxCMD_LINE_SWITCH,\n                  \"h\", \"help\", \"show this help message\",\n                  wxCMD_LINE_VAL_NONE, wxCMD_LINE_OPTION_HELP },\n\n        { wxCMD_LINE_SWITCH,\n                  \"v\", \"verbose\", \"be verbose\" },\n\n        { wxCMD_LINE_SWITCH,\n                  \"s\", \"skip-identical\", \"only output pages with differences\" },\n\n        { wxCMD_LINE_SWITCH,\n                  \"m\", \"mark-differences\", \"additionally mark differences on left side\" },\n\n        { wxCMD_LINE_SWITCH,\n                  \"g\", \"grayscale\", \"only differences will be in color, unchanged parts will show as gray\" },\n\n        { wxCMD_LINE_OPTION,\n                  NULL, \"output-diff\", \"output differences to given PDF file\",\n                  wxCMD_LINE_VAL_STRING },\n\n        { wxCMD_LINE_OPTION,\n                  NULL, \"channel-tolerance\", \"consider channel values to be equal if within specified tolerance\",\n                  wxCMD_LINE_VAL_NUMBER },\n\n        { wxCMD_LINE_OPTION,\n                  NULL, \"per-page-pixel-tolerance\", \"total number of pixels allowed to be different per page before specifying the page is different\",\n                  wxCMD_LINE_VAL_NUMBER },\n\n        { wxCMD_LINE_OPTION,\n                  NULL, \"dpi\", \"rasterization resolution (default: \" wxSTRINGIZE(DEFAULT_RESOLUTION) \" dpi)\",\n                  wxCMD_LINE_VAL_NUMBER },\n\n        { wxCMD_LINE_SWITCH,\n                  NULL, \"view\", \"view the differences in a window\" },\n\n        { wxCMD_LINE_PARAM,\n                  NULL, NULL, \"file1.pdf\", wxCMD_LINE_VAL_STRING },\n        { wxCMD_LINE_PARAM,\n                  NULL, NULL, \"file2.pdf\", wxCMD_LINE_VAL_STRING },\n\n        { wxCMD_LINE_NONE }\n    };\n\n    wxCmdLineParser parser(cmd_line_desc, argc, argv);\n\n    switch ( parser.Parse() )\n    {\n        case -1: // --help\n            return 0;\n\n        case 0: // everything is ok; proceed\n            break;\n\n        default: // syntax error\n            return 2;\n    }\n\n    if ( parser.Found(\"verbose\") )\n        g_verbose = true;\n\n    if ( parser.Found(\"skip-identical\") )\n        g_skip_identical = true;\n\n    if ( parser.Found(\"mark-differences\") )\n        g_mark_differences = true;\n\n    if ( parser.Found(\"grayscale\") )\n        g_grayscale = true;\n\n    wxFileName file1(parser.GetParam(0));\n    wxFileName file2(parser.GetParam(1));\n    file1.MakeAbsolute();\n    file2.MakeAbsolute();\n    const wxString url1 = wxFileSystem::FileNameToURL(file1);\n    const wxString url2 = wxFileSystem::FileNameToURL(file2);\n\n    GError *err = NULL;\n\n    PopplerDocument *doc1 = poppler_document_new_from_file(url1.utf8_str(), NULL, &err);\n    if ( !doc1 )\n    {\n        fprintf(stderr, \"Error opening %s: %s\\n\", (const char*) parser.GetParam(0).c_str(), err->message);\n        g_error_free(err);\n        return 3;\n    }\n\n    PopplerDocument *doc2 = poppler_document_new_from_file(url2.utf8_str(), NULL, &err);\n    if ( !doc2 )\n    {\n        fprintf(stderr, \"Error opening %s: %s\\n\", (const char*) parser.GetParam(1).c_str(), err->message);\n        g_error_free(err);\n        return 3;\n    }\n\n    if ( parser.Found(\"per-page-pixel-tolerance\", &g_per_page_pixel_tolerance) )\n    {\n        if (g_per_page_pixel_tolerance < 0) {\n            fprintf(stderr, \"Invalid per-page-pixel-tolerance: %ld. Must be 0 or more\\n\", g_per_page_pixel_tolerance);\n            return 2;\n        }\n    }\n\n    if ( parser.Found(\"channel-tolerance\", &g_channel_tolerance) )\n    {\n        if (g_channel_tolerance < 0 || g_channel_tolerance > 255) {\n            fprintf(stderr, \"Invalid channel-tolerance: %ld. Valid range is 0(default, exact matching)-255\\n\", g_channel_tolerance);\n            return 2;\n\t}\n    }\n\n\tif ( parser.Found(\"dpi\", &g_resolution) )\n    {\n        if (g_resolution < 1 || g_resolution > 2400) {\n            fprintf(stderr, \"Invalid dpi: %ld. Valid range is 1-2400 (default: %d)\\n\", g_resolution, DEFAULT_RESOLUTION);\n            return 2;\n\t}\n    }\n\n\n    int retval = 0;\n\n    wxString pdf_file;\n    if ( parser.Found(\"output-diff\", &pdf_file) )\n    {\n        retval = doc_compare(doc1, doc2, pdf_file.utf8_str(), NULL) ? 0 : 1;\n    }\n    else if ( parser.Found(\"view\") )\n    {\n        wxGetApp().SetData(parser.GetParam(0), doc1,\n                           parser.GetParam(1), doc2);\n        retval = wxEntry(argc, argv);\n    }\n    else\n    {\n        retval = doc_compare(doc1, doc2, NULL, NULL) ? 0 : 1;\n    }\n\n    g_object_unref(doc1);\n    g_object_unref(doc2);\n\n    // MinGW doesn't reliably flush streams on exit, so flush them explicitly:\n    fflush(stdout);\n    fflush(stderr);\n\n    return retval;\n}\n"
        },
        {
          "name": "gtk-zoom-in.xpm",
          "type": "blob",
          "size": 1.7978515625,
          "content": "/* XPM */\nstatic const char *gtk_zoom_in_xpm[] = {\n/* columns rows colors chars-per-pixel */\n\"24 24 70 1\",\n\"  c #2D3436\",\n\". c #2E3436\",\n\"X c #2E3536\",\n\"o c #2F3537\",\n\"O c #2F3538\",\n\"+ c #2F3638\",\n\"@ c #313537\",\n\"# c #303638\",\n\"$ c #363B3B\",\n\"% c #363B3D\",\n\"& c #353C3C\",\n\"* c #373D3F\",\n\"= c #383C3E\",\n\"- c #3B4142\",\n\"; c #3C4242\",\n\": c #424544\",\n\"> c #4B4F4B\",\n\", c #525350\",\n\"< c #555753\",\n\"1 c #585A56\",\n\"2 c #616564\",\n\"3 c #666B69\",\n\"4 c #666C69\",\n\"5 c #6D7171\",\n\"6 c #6F7373\",\n\"7 c #777B7A\",\n\"8 c #8F908D\",\n\"9 c #8F9290\",\n\"0 c #989C98\",\n\"q c #999E9A\",\n\"w c #ACAFAB\",\n\"e c #ACAEAC\",\n\"r c #B2B4B1\",\n\"t c #B8BBB5\",\n\"y c #BEC1BC\",\n\"u c #BEC0BD\",\n\"i c #D1D4CF\",\n\"p c #D2D6CF\",\n\"a c #CED0D0\",\n\"s c #CFD0D0\",\n\"d c #D1D2D1\",\n\"f c #D3D6D0\",\n\"g c #D4D6D2\",\n\"h c #D4D7D2\",\n\"j c #D5D6D3\",\n\"k c #D5D7D3\",\n\"l c #D5D9D1\",\n\"z c #D6DAD2\",\n\"x c #D9DCD5\",\n\"c c #DCDED8\",\n\"v c #DDDFD9\",\n\"b c #DDE0DA\",\n\"n c #DFE1DC\",\n\"m c #DFE2DC\",\n\"M c #E0E2DC\",\n\"N c #E2E4DF\",\n\"B c #E3E4E0\",\n\"V c #E5E7E3\",\n\"C c #E6E7E3\",\n\"Z c #E8E9E6\",\n\"A c #E9EAE6\",\n\"S c #E9EAE7\",\n\"D c #EAEAE7\",\n\"F c #EBECE9\",\n\"G c #ECECE9\",\n\"H c #ECECEA\",\n\"J c #ECEDEA\",\n\"K c #EDEDEB\",\n\"L c #EEEEEC\",\n\"P c None\",\n/* pixels */\n\"PPPPPPPPPPPPPPPPPPPPPPPP\",\n\"PPPPPP   @ .PPPPPPPPPPPP\",\n\"PPPPP 6eklt9%PPPPPPPPPPP\",\n\"PPP ;dHDCBMvd2 PPPPPPPPP\",\n\"PPP;GLHHGGDMxl4PPPPPPPPP\",\n\"PP sLLLL88LLBld=PPPPPPPP\",\n\"P 5GGLLL11LLGbxq PPPPPPP\",\n\"P wDLLLL<1LLLAby PPPPPPP\",\n\"P dZG81<<<<18Gmk@PPPPPPP\",\n\"P zBL81<<<118GBk PPPPPPP\",\n\"P tmDLLL<<GLLHBr PPPPPPP\",\n\"P 8bmLLL11LLLSS7 PPPPPPP\",\n\"PP=dxNLL88LLHHa@PPPPPPPP\",\n\"PPP2lxbDHGHDHH;PPPPPPPPP\",\n\"PPP 4dxcmBCZs;&PPPPPPPPP\",\n\"PPPPP&quhkr7+PP:+#PPPPPP\",\n\"PPPPPP +  @ PPP#>&@PPPPP\",\n\"PPPPPPPPPPPPPPP#&,&@PPPP\",\n\"PPPPPPPPPPPPPPPP@&,$+PPP\",\n\"PPPPPPPPPPPPPPPPP+&,&#PP\",\n\"PPPPPPPPPPPPPPPPPP@&> PP\",\n\"PPPPPPPPPPPPPPPPPPP#@@PP\",\n\"PPPPPPPPPPPPPPPPPPPPPPPP\",\n\"PPPPPPPPPPPPPPPPPPPPPPPP\"\n};\n"
        },
        {
          "name": "gtk-zoom-out.xpm",
          "type": "blob",
          "size": 1.798828125,
          "content": "/* XPM */\nstatic const char *gtk_zoom_out_xpm[] = {\n/* columns rows colors chars-per-pixel */\n\"24 24 70 1\",\n\"  c #2D3436\",\n\". c #2E3436\",\n\"X c #2E3536\",\n\"o c #2F3537\",\n\"O c #2F3538\",\n\"+ c #2F3638\",\n\"@ c #313537\",\n\"# c #303638\",\n\"$ c #363B3B\",\n\"% c #363B3D\",\n\"& c #353C3C\",\n\"* c #373D3F\",\n\"= c #383C3E\",\n\"- c #3B4142\",\n\"; c #3C4242\",\n\": c #424544\",\n\"> c #4B4F4B\",\n\", c #525350\",\n\"< c #555753\",\n\"1 c #585A56\",\n\"2 c #616564\",\n\"3 c #666B69\",\n\"4 c #666C69\",\n\"5 c #6D7171\",\n\"6 c #6F7373\",\n\"7 c #777B7A\",\n\"8 c #8F908D\",\n\"9 c #8F9290\",\n\"0 c #989C98\",\n\"q c #999E9A\",\n\"w c #ACAFAB\",\n\"e c #ACAEAC\",\n\"r c #B2B4B1\",\n\"t c #B8BBB5\",\n\"y c #BEC1BC\",\n\"u c #BEC0BD\",\n\"i c #D1D4CF\",\n\"p c #D2D6CF\",\n\"a c #CED0D0\",\n\"s c #CFD0D0\",\n\"d c #D1D2D1\",\n\"f c #D3D6D0\",\n\"g c #D4D6D2\",\n\"h c #D4D7D2\",\n\"j c #D5D6D3\",\n\"k c #D5D7D3\",\n\"l c #D5D9D1\",\n\"z c #D6DAD2\",\n\"x c #D9DCD5\",\n\"c c #DCDED8\",\n\"v c #DDDFD9\",\n\"b c #DDE0DA\",\n\"n c #DFE1DC\",\n\"m c #DFE2DC\",\n\"M c #E0E2DC\",\n\"N c #E2E4DF\",\n\"B c #E3E4E0\",\n\"V c #E5E7E3\",\n\"C c #E6E7E3\",\n\"Z c #E8E9E6\",\n\"A c #E9EAE6\",\n\"S c #E9EAE7\",\n\"D c #EAEAE7\",\n\"F c #EBECE9\",\n\"G c #ECECE9\",\n\"H c #ECECEA\",\n\"J c #ECEDEA\",\n\"K c #EDEDEB\",\n\"L c #EEEEEC\",\n\"P c None\",\n/* pixels */\n\"PPPPPPPPPPPPPPPPPPPPPPPP\",\n\"PPPPPP   @ .PPPPPPPPPPPP\",\n\"PPPPP 6eklt9%PPPPPPPPPPP\",\n\"PPP ;dHDCBMvd2 PPPPPPPPP\",\n\"PPP;GLHHGGDMxl4PPPPPPPPP\",\n\"PP sLLLLLLLLBld=PPPPPPPP\",\n\"P 5GGLLLLLLLGbxq PPPPPPP\",\n\"P wDLLLLLLLLLAby PPPPPPP\",\n\"P dZG81<1<<18Gmk@PPPPPPP\",\n\"P zBL81<<<118GBk PPPPPPP\",\n\"P tmDLLLGLLLLHBr PPPPPPP\",\n\"P 8bmLLLLLLLLSS7 PPPPPPP\",\n\"PP=dxNLLLLLLHHa@PPPPPPPP\",\n\"PPP2lxbDHGHDHH;PPPPPPPPP\",\n\"PPP 4dxcmBCZs;&PPPPPPPPP\",\n\"PPPPP&quhkr7+PP:+#PPPPPP\",\n\"PPPPPP +  @ PPP#>&@PPPPP\",\n\"PPPPPPPPPPPPPPP#&,&@PPPP\",\n\"PPPPPPPPPPPPPPPP@&,$+PPP\",\n\"PPPPPPPPPPPPPPPPP+&,&#PP\",\n\"PPPPPPPPPPPPPPPPPP@&> PP\",\n\"PPPPPPPPPPPPPPPPPPP#@@PP\",\n\"PPPPPPPPPPPPPPPPPPPPPPPP\",\n\"PPPPPPPPPPPPPPPPPPPPPPPP\"\n};\n"
        },
        {
          "name": "gutter.cpp",
          "type": "blob",
          "size": 3.1806640625,
          "content": "/*\n * This file is part of diff-pdf.\n *\n * Copyright (C) 2009 TT-Solutions.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include \"gutter.h\"\n\n#include <wx/dcclient.h>\n#include <wx/scrolwin.h>\n#include <wx/settings.h>\n\n#define EXTRA_ROOM_FOR_SCROLLBAR  20\n\nGutter::Gutter(wxWindow *parent, wxWindowID winid)\n    : wxVListBox(parent, winid)\n{\n    m_fontHeight = -1;\n\n    SetFont(wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT));\n\n    SetMinSize(wxSize(WIDTH + 2 * BORDER + EXTRA_ROOM_FOR_SCROLLBAR, -1));\n}\n\n\nvoid Gutter::AddPage(const wxString& label, const wxImage& thumbnail)\n{\n    m_labels.push_back(label);\n    m_backgrounds.push_back(wxBitmap(thumbnail));\n    SetItemCount(m_backgrounds.size());\n    Refresh();\n}\n\nvoid Gutter::SetThumbnail(int page, const wxImage& thumbnail)\n{\n    m_backgrounds[page] = wxBitmap(thumbnail);\n    Refresh();\n}\n\n\nvoid Gutter::UpdateViewPos(wxScrolledWindow *win)\n{\n    int sel = GetSelection();\n    if ( sel == wxNOT_FOUND )\n        return;\n\n    int total_x, total_y;\n    win->GetVirtualSize(&total_x, &total_y);\n\n    float scale_x = float(m_backgrounds[sel].GetWidth()) / float(total_x);\n    float scale_y = float(m_backgrounds[sel].GetHeight()) / float(total_y);\n\n    win->GetViewStart(&m_viewPos.x, &m_viewPos.y);\n    win->GetClientSize(&m_viewPos.width, &m_viewPos.height);\n\n    m_viewPos.x = int(m_viewPos.x * scale_x);\n    m_viewPos.y = int(m_viewPos.y * scale_y);\n    m_viewPos.width = int(m_viewPos.width * scale_x);\n    m_viewPos.height = int(m_viewPos.height * scale_y);\n\n    Refresh();\n}\n\n\nwxCoord Gutter::OnMeasureItem(size_t n) const\n{\n    if ( m_fontHeight == -1 )\n        wxConstCast(this, Gutter)->m_fontHeight = GetCharHeight();\n\n    return m_backgrounds[n].GetHeight() + 3 * BORDER + m_fontHeight;\n}\n\n\nvoid Gutter::OnDrawItem(wxDC& dc, const wxRect& rect, size_t n) const\n{\n    const int xoffset = (GetClientSize().x - WIDTH) / 2;\n    const int yoffset = BORDER;\n\n\n    dc.DrawBitmap(m_backgrounds[n], rect.x + xoffset, rect.y + yoffset);\n\n    const wxString label = m_labels[n];\n    int tw;\n    dc.GetTextExtent(label, &tw, NULL);\n    dc.SetFont(GetFont());\n    dc.DrawText\n       (\n           label,\n           rect.x + xoffset + (WIDTH - tw) / 2,\n           rect.y + yoffset + m_backgrounds[n].GetHeight() + BORDER\n       );\n\n    if ( GetSelection() == n )\n    {\n        // draw current position\n        if ( m_viewPos.IsEmpty() )\n            return;\n\n        wxRect view(m_viewPos);\n        view.Offset(rect.GetTopLeft());\n        view.Offset(wxPoint(xoffset, yoffset));\n\n        dc.SetBrush(*wxTRANSPARENT_BRUSH);\n        dc.SetPen(wxPen(*wxBLUE));\n        dc.DrawRectangle(view);\n    }\n}\n"
        },
        {
          "name": "gutter.h",
          "type": "blob",
          "size": 1.9208984375,
          "content": "/*\n * This file is part of diff-pdf.\n *\n * Copyright (C) 2009 TT-Solutions.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#ifndef _gutter_h_\n#define _gutter_h_\n\n#include <vector>\n\n#include <wx/image.h>\n#include <wx/bitmap.h>\n#include <wx/vlbox.h>\n\nclass WXDLLIMPEXP_FWD_CORE wxScrolledWindow;\n\n// widget showing places of differences as well as scroll window's position\nclass Gutter : public wxVListBox\n{\npublic:\n    // standard width of the gutter image in pixels\n    static const int WIDTH = 100;\n\n    // standard border\n    static const int BORDER = 5;\n\n    Gutter(wxWindow *parent, wxWindowID winid);\n\n    // Add a new page to the gutter, with thumbnail's background to be shown\n    void AddPage(const wxString& label, const wxImage& thumbnail);\n\n    // Set the bitmap with thumbnail's background to be shown\n    void SetThumbnail(int page, const wxImage& thumbnail);\n\n    // Updates shown view position, i.e. the visible subset of scrolled window.\n    // The gutter will indicate this area with a blue rectangle.\n    void UpdateViewPos(wxScrolledWindow *win);\n\nprotected:\n    virtual wxCoord OnMeasureItem(size_t n) const;\n    virtual void OnDrawItem(wxDC& dc, const wxRect& rect, size_t n) const;\n\nprivate:\n    std::vector<wxString> m_labels;\n    std::vector<wxBitmap> m_backgrounds;\n    wxRect m_viewPos;\n    int m_fontHeight;\n};\n\n#endif // _gutter_h_\n"
        },
        {
          "name": "win32",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}