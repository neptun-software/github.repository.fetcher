{
  "metadata": {
    "timestamp": 1736565425093,
    "page": 270,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "visualboyadvance-m/visualboyadvance-m",
      "stars": 3413,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.9833984375,
          "content": "version: '{build}'\n\nimage:\n  - Visual Studio 2017\n\nbuild:\n  verbosity: detailed\n\nconfiguration:\n  - Debug\n  - Release\n\nplatform:\n  - x64\n  - x86\n\nenvironment:\n  matrix:\n    - STATIC: \" \"\n    - STATIC: \"-static\"\n\nmatrix:\n  fast_finish: true\n\ninstall:\n  - set NINJA_URL=\"https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip\"\n  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip\n  - 7z x ninja.zip -oc:\\projects\\ninja > nul\n  - set PATH=c:\\projects\\ninja;%PATH%\n  - ninja --version\n\nbefore_build:\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" %PLATFORM%\n\nbuild_script:\n  - mkdir build\n  - cd build\n  - cmake .. -DVCPKG_TARGET_TRIPLET=%PLATFORM%-windows%STATIC% -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DENABLE_SDL=TRUE -G Ninja\n  - ninja\n\n# only debug builds are console mode apps, in them test --help\ntest_script:\n  - if not %CONFIGURATION%==Release .\\visualboyadvance-m.exe --help\n  - ctest -V\n\ncache:\n  - c:\\vcpkg\\installed\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1552734375,
          "content": "/*build*/*\n.vs/*\n.idea\n*.o\n*.so\n*.dll\n*.exe\n.vscode/\n\n# clangd files\ncompile_commands.json\n.cache/\n\n# vim swap files\n*.sw?\n*.un~\n\n# mac finder crap\n*.DS_Store\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 4.9755859375,
          "content": "# DESCRIPTION: GitLab CI/CD for libRetro (NOT FOR GitLab-proper)\r\n\r\n##############################################################################\r\n################################# BOILERPLATE ################################\r\n##############################################################################\r\n\r\n# Core definitions\r\n.core-defs:\r\n  variables:\r\n    GIT_SUBMODULE_STRATEGY: recursive\r\n    JNI_PATH: src/libretro\r\n    MAKEFILE_PATH: src/libretro\r\n    CORENAME: vbam\r\n\r\n# Inclusion templates, required for the build to work\r\ninclude:\r\n  ################################## DESKTOPS ################################\r\n  # Windows 64-bit\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/windows-x64-mingw.yml'\r\n    \r\n  # Windows 32-bit\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/windows-i686-mingw.yml'\r\n    \r\n  # Linux 64-bit\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/linux-x64.yml'\r\n\r\n  # Linux 32-bit\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/linux-i686.yml'\r\n\r\n  # MacOS 64-bit\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/osx-x64.yml'\r\n\r\n  # MacOS ARM 64-bit\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/osx-arm64.yml'\r\n    \r\n  ################################## CELLULAR ################################\r\n  # Android\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/android-jni.yml'\r\n\r\n  # iOS\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/ios-arm64.yml'\r\n\r\n  # iOS (armv7)\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/ios9.yml'\r\n\r\n  ################################## CONSOLES ################################\r\n  # PlayStation Vita\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/vita-static.yml'\r\n\r\n  # Nintendo GameCube\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/ngc-static.yml'\r\n\r\n  # Nintendo Wii\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/wii-static.yml'\r\n\r\n  # Nintendo WiiU\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/wiiu-static.yml'\r\n\r\n  # Nintendo Switch\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/libnx-static.yml'\r\n\r\n  # tvOS (AppleTV)\r\n  - project: 'libretro-infrastructure/ci-templates'\r\n    file: '/tvos-arm64.yml'\r\n\r\n  #################################### MISC ##################################\r\n\r\n# Stages for building\r\nstages:\r\n  - build-prepare\r\n  - build-shared\r\n  - build-static\r\n\r\n##############################################################################\r\n#################################### STAGES ##################################\r\n##############################################################################\r\n#\r\n################################### DESKTOPS #################################\r\n# Windows 64-bit\r\nlibretro-build-windows-x64:\r\n  extends:\r\n    - .libretro-windows-x64-mingw-make-default\r\n    - .core-defs\r\n    \r\n# Windows 32-bit\r\nlibretro-build-windows-i686:\r\n  extends:\r\n    - .libretro-windows-i686-mingw-make-default\r\n    - .core-defs\r\n    \r\n# Linux 64-bit\r\nlibretro-build-linux-x64:\r\n  extends:\r\n    - .libretro-linux-x64-make-default\r\n    - .core-defs\r\n\r\n# Linux 32-bit\r\nlibretro-build-linux-i686:\r\n  extends:\r\n    - .libretro-linux-i686-make-default\r\n    - .core-defs\r\n\r\n# MacOS 64-bit\r\nlibretro-build-osx-x64:\r\n  extends:\r\n    - .libretro-osx-x64-make-default\r\n    - .core-defs\r\n\r\n# MacOS ARM 64-bit\r\nlibretro-build-osx-arm64:\r\n  extends:\r\n    - .libretro-osx-arm64-make-default\r\n    - .core-defs\r\n    \r\n################################### CELLULAR #################################\r\n# Android ARMv7a\r\nandroid-armeabi-v7a:\r\n  extends:\r\n    - .libretro-android-jni-armeabi-v7a\r\n    - .core-defs\r\n\r\n# Android ARMv8a\r\nandroid-arm64-v8a:\r\n  extends:\r\n    - .libretro-android-jni-arm64-v8a\r\n    - .core-defs\r\n\r\n# Android 64-bit x86\r\nandroid-x86_64:\r\n  extends:\r\n    - .libretro-android-jni-x86_64\r\n    - .core-defs\r\n\r\n# Android 32-bit x86\r\nandroid-x86:\r\n  extends:\r\n    - .libretro-android-jni-x86\r\n    - .core-defs\r\n\r\n# iOS\r\nlibretro-build-ios-arm64:\r\n  extends:\r\n    - .libretro-ios-arm64-make-default\r\n    - .core-defs\r\n\r\n# iOS (armv7) [iOS 9 and up]\r\nlibretro-build-ios9:\r\n  extends:\r\n    - .libretro-ios9-make-default\r\n    - .core-defs\r\n    \r\n# tvOS\r\nlibretro-build-tvos-arm64:\r\n  extends:\r\n    - .libretro-tvos-arm64-make-default\r\n    - .core-defs\r\n\r\n################################### CONSOLES #################################\r\n# PlayStation Vita\r\nlibretro-build-vita:\r\n  extends:\r\n    - .libretro-vita-static-retroarch-master\r\n    - .core-defs\r\n    \r\n# Nintendo GameCube\r\nlibretro-build-ngc:\r\n  extends:\r\n    - .libretro-ngc-static-retroarch-master\r\n    - .core-defs\r\n\r\n# Nintendo Wii\r\nlibretro-build-wii:\r\n  extends:\r\n    - .libretro-wii-static-retroarch-master\r\n    - .core-defs\r\n\r\n# Nintendo WiiU\r\nlibretro-build-wiiu:\r\n  extends:\r\n    - .libretro-wiiu-static-retroarch-master\r\n    - .core-defs\r\n\r\n# Nintendo Switch\r\nlibretro-build-libnx-aarch64:\r\n  extends:\r\n    - .libretro-libnx-static-retroarch-master\r\n    - .core-defs\r\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.21484375,
          "content": "[submodule \"win32-deps\"]\n\tpath = win32-deps\n\turl = https://github.com/visualboyadvance-m/win32-deps.git\n[submodule \"third_party/googletest\"]\n\tpath = third_party/googletest\n\turl = https://github.com/google/googletest.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.2275390625,
          "content": "---\ncache: ccache\ndist: xenial\nlanguage: cpp\nservices: xvfb\nsudo: required\n\nmatrix:\n    fast_finish: true\n    include:\n        - env: BUILD_ENV=ubuntu-bionic XVFB_RUN=1\n          dist: bionic\n#        - env: BUILD_ENV=utf8 XVFB_RUN=1\n#          dist: bionic\n#        - env: BUILD_ENV=nostl XVFB_RUN=1\n#          dist: bionic\n        - env: BUILD_ENV=ubuntu-xenial XVFB_RUN=1\n        - env: BUILD_ENV=ubuntu-xenial-minimal INSTALLDEPS_ARGS=\"--no-openal --no-ffmpeg\" XVFB_RUN=1\n        - env: BUILD_ENV=ubuntu-xenial XVFB_RUN=1 CC=clang CXX=clang++\n        - env: BUILD_ENV=mingw-w64\n        - env: BUILD_ENV=mingw-w32\n        - env: BUILD_ENV=libretro\n        - env: BUILD_ENV=libretro CC=clang CXX=clang++\n        - env: BUILD_ENV=mac\n          os: osx\n          osx_image: xcode12\n          install: export PATH=\"/usr/local/opt/ccache/libexec:$PATH\"\n\nbefore_install:\n    - |\n        case \"$BUILD_ENV\" in\n            mingw-w64 )\n                ARG=MinGW-w64-x86_64\n                CMAKE=/usr/lib/mxe/usr/bin/x86_64-w64-mingw32.static-cmake\n                PATH=\"$PATH:/usr/lib/mxe/usr/bin\"\n            ;;\n            mingw-w32 )\n                ARG=MinGW-w64-i686\n                CMAKE=/usr/lib/mxe/usr/bin/i686-w64-mingw32.static-cmake\n                PATH=\"$PATH:/usr/lib/mxe/usr/bin\"\n            ;;\n            * )\n                CMAKE=cmake\n            ;;\n        esac\n    - |\n        if [ \"$BUILD_ENV\" != libretro ]; then\n            ./installdeps $INSTALLDEPS_ARGS $ARG\n            DIR=build\n        else\n            DIR=src/libretro\n        fi\n\nbefore_script:\n    - |\n        if [ -n \"$ENABLE_SDL\" ]; then\n            CMAKE_ARGS=\"$CMAKE_ARGS -DENABLE_SDL=ON\"\n        fi\n        case \"$BUILD_ENV\" in\n            utf8|nostl)\n                sudo apt-get -y install stow libwxgtk3.0-gtk3-dev\n                (\n                    cd /\n                    sudo curl -LO 'http://cachemiss.com/files/wxWidgets-gtk3-'\"$BUILD_ENV\"'-3.0.5.tar.gz'\n                    sudo tar zxvf wxWidgets-gtk3-\"$BUILD_ENV\"-3.0.5.tar.gz\n                    cd /usr/local/stow\n                    sudo stow wxWidgets-gtk3-\"$BUILD_ENV\"-3.0.5\n                )\n                export LD_LIBRARY_PATH=/usr/local/lib\n                CMAKE_ARGS=\"$CMAKE_ARGS -DwxWidgets_CONFIG_EXECUTABLE=/usr/local/bin/wx-config -DWXRC=/usr/local/bin/wxrc\"\n                ;;\n        esac\n\nscript:\n    - mkdir -p -- \"$DIR\"\n    - cd -- \"$DIR\"\n    - if [ \"$BUILD_ENV\" != libretro ]; then $CMAKE $CMAKE_ARGS ..; fi\n    - if [ \"$BUILD_ENV\" != libretro ]; then ninja; else make; fi\n    - if [ \"$BUILD_ENV\" != libretro ]; then DESTDIR=/tmp/VBAM ninja install; fi\n    - |\n        if [ \"$BUILD_ENV\" = mac ]; then\n            ./$PRGNAM.app/Contents/MacOS/$PRGNAM --help\n        elif [ -n \"$XVFB_RUN\" ]; then\n            xvfb-run -a ./$PRGNAM --help\n        fi\n        ctest -V\n\nenv:\n    global:\n        - CMAKE_ARGS=\"-G Ninja\"\n        - ENABLE_SDL=1\n        - MAKEFLAGS=\"-j2\"\n        - PRGNAM=visualboyadvance-m\n\nnotifications:\n    webhooks:\n        urls:\n            - https://webhooks.gitter.im/e/b273e1f74f164855d115\n        on_success: change  # options: [always|never|change] default: always\n        on_failure: always  # options: [always|never|change] default: always\n        on_start: never     # options: [always|never|change] default: always\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 62.134765625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [2.1.11] - 2024-09-15 \n\n==========================\n* 3eea90af - build: set BUILD_TESTING=OFF when not git checkout [rkitover]\n* b3952d74 - build: fix ENABLE_LIRC=ON [rkitover]\n* f264e7f8 - Fix Help -> Translations URL [rkitover]\n* 61f427de - Write shortcuts in the proper section (#1335) [Steelskin]\n* d619ee2b - build: fix installing GoogleTest [rkitover]\n* 26207038 - Update WinSparkle to 0.8.1 and add ARM64 [rkitover]\n\n## [2.1.10] - 2024-09-08 \n\n==========================\n* 7f06428d - Disable dialog position save/restore on wxGTK (#1331) [Steelskin]\n* e4ef4aa6 - Propagate key events (#1323) [Steelskin]\n* e2cf6ecb - Add option to mute sound during speedup [rkitover]\n* d516683a - build: fix for wx using GTK2 [rkitover]\n* 834c7de8 - build: update macOS builder dists [rkitover]\n* fc82e062 - build: do not build SDL bin on Windows or macOS [rkitover]\n* d543784a - [UserInput] Filter key events globally [steelskin]\n* 902c6c8e - [UserInput] Only process shortcut commands once [steelskin]\n* b7765092 - [bindings] Set default shortcut for recent file 3 [steelskin]\n* cc65ef28 - doc: add system requirements to README.md [danialhorton]\n* 32627f6b - [Dialogs] Save and restore dialog positions [steelskin]\n* 41952d06 - build: update macOS linker tool to 1.5 [rkitover]\n* 0c39a5ba - build: override FindGettext to not update po files [rkitover]\n* 1b77d659 - build: update macOS build to ffmpeg 7.0 [rkitover]\n* 8d08223d - build: fix compatibility with older ffmpeg [rkitover]\n* af6028a9 - build: fix build for nix on macOS [rkitover]\n* b52edf52 - build: fix building on macOS with Homebrew [rkitover]\n* 6766b9ca - build: fix ffmpeg 7.x compat [rkitover]\n* 795f25bb - build: fix nix deps for OpenGL [rkitover]\n* 647be137 - gba: set cpsr=spsr when switching to FIQ mode [40356555+Aikku93]\n* 8abe3e79 - build: remove -lgcc from static link flags [rkitover]\n* f4835674 - [Audio] Rework audio devices enumeration [steelskin]\n* 775a571f - build: fix detecting Visual Studio default vcpkg [rkitover]\n* 64abd3e8 - [Audio] Remove manual memory allocations [steelskin]\n* 047ad277 - [Dialogs] Prevent viewers from causing a crash [steelskin]\n* 045c98d8 - build: only use -Werror=lto-type-mismatch on gcc [rkitover]\n* 3518dc6a - build: fix LTO on Linux [rkitover]\n* cc9a03ce - Add toggle: SDL GameController mode for joysticks [rkitover]\n* 8576733c - [Build] Remove lingering references to OpenAl [steelskin]\n* 05561922 - build: fix MSYS2 check [rkitover]\n* d9432ebb - build: fix build on MINGW{64,32}/UCRT64 on MSYS2 [rkitover]\n* f57cad67 - build: fix static linking on MSYS2 CLANG64 [rkitover]\n* 23e15734 - build: set wxWidgets_DIR with vcpkg [rkitover]\n* 98b51910 - [Build] Remove ENABLE_NLS, fix TRANSLATIONS_ONLY [steelskin]\n* a565cea8 - [Build] Remove the OpenGL check [steelskin]\n* f96e42fe - build: cmake refactor and improvements [Steelskin]\n* 07e49025 - Fix most remaining release warnings (#1243) [Steelskin]\n* 18b97b43 - Fix various build warnings (#1242) [Steelskin]\n* 13a16eb7 - Fix various warnings in filters and headers (#1241) [Steelskin]\n* f46da1c5 - build: remove our version of FindSDL2.cmake [rkitover]\n* 404e9a1a - build: add clang to ./installdeps for MSYS2 [rkitover]\n* 613bd403 - Make menu more reasonably organized (#1230) [wwrustc]\n* 215e3c5a - build: use find_program() to find powershell [rkitover]\n* e5aa685f - build: don't use wx utils as UNIX cmds on Windows [rkitover]\n* 9e4c8e17 - build: fix gentoo dependency namespaces [68k]\n* 5f853b99 - Update metainfo.xml to new standards [jhonny.oliveira]\n* e7d135db - Update links to new domain visualboyadvance-m.org [rkitover]\n* 60fc096f - build: add libglu-devel for solus in installdeps [rkitover]\n\n## [2.1.9] - 2024-02-03\n=======================\n* 84b0a3e3 - Remove SDL sound driver [rkitover]\n* 2ad7dd1a - Fix wav audio recording [40356555+Aikku93]\n* 23ef8ef0 - Dialog appearance improvements + link warning [zachbacon]\n* a0452701 - build: don't fseeko64()/ftello64() on musl libc [rkitover]\n* 9e9fe812 - visualboyadvance-m.metainfo.xml: add screenshots to the metainfo [zachbacon]\n\n## [2.1.8] - 2023-12-13\n\n========================\n* beab0881 - Store the PC register at the appropriate offset [steelskin]\n* bf2452aa - Resize GameArea after MainFrame initialization [steelskin]\n* 71ca0fb2 - Properly hide the status bar at startup [steelskin]\n* 7e1afcd3 - Fix reading joystick hat config values [rkitover]\n* 32581966 - Link: Fix menu not refreshing correctly [74248064+nuive]\n\n## [2.1.7] - 11.09.2023\n\n=========================\n* aca206a7 - Launch on xwayland under Wayland if no EGL [rkitover]\n* 93a24bee - Disable mirroring for ROMs > 32MB [rkitover]\n* 0f4ec575 - [Build] Fix the NO_LINK build [steelskin]\n* 803ab352 - [GB] Save MBC7 EEPROM data to `gbRam` [steelskin]\n* 24b6ac5a - [GBA] Implement missing Thumb instruction [steelskin]\n* 14a4b6f8 - [dialogs] Move JoypadConfig to its own class. [steelskin]\n\n## [2.1.6] - 09.07.2023 \n\n=========================\n* 7561ca97 - Fix Discord streaming for OpenGL [danialhorton]\n* e26f8073 - [bios] Fix lz77 and add BIOS_SndDriverVsyncOn [steelskin]\n* d1f65000 - Refactor accelerator / global shortcuts handling [steelskin]\n* fda429fc - [GBA] Do not draw BG tiles from outside of BG VRAM [steelskin]\n* 5aa3ea92 - Properly initialize wxAcceleratorTable [steelskin]\n* 0e29be87 - Support multiple RAM sizes for MBC7 [steelskin]\n* 75b79d91 - Change MBC7 reported RAM size to 512 bytes [steelskin]\n* 36e88faf - Fix dsound looping when moving/resizing window [rkitover]\n* 019fcda9 - Sanitize and improve the GB header parsing (#1109) [Steelskin]\n* 7005b928 - Sanitize allocations in the Game Boy emulator (#1105) [Steelskin]\n* 3cef52b7 - Fix pause/next-frame [rkitover]\n* d3f8cc17 - Option to suspend the X11 screensaver when running [2306079+multiSnow]\n* df819598 - builder: update macOS build to 10.10, Wx 3.2.2.1 [rkitover]\n* 1ab46f70 - Update SIOCNT when the link driver is disconnected [steelskin]\n* 1d7e8ae4 - build: fix build with new OpenAL [rkitover]\n* a9284b3d - workaround for Stuart Little 2 crashing when set to none [danialhorton]\n* 166299cd - Implements Read/Writes for HUC3 [danialhorton]\n* 640ce453 - Change SOUND_CLOCK_TICKS to 280896 cycles - ~1074 samples per frame [reallibretroretroarch]\n* f1d3f631 - Fix automatic dynamic frame skipping [steelskin]\n* d756f671 - translations: fix some source strings [stanley.udr.kid]\n* 91873254 - Add INI file versioning [steelskin]\n* 7d9cb2b5 - Default GBA LCD filter to off. [rkitover]\n* be1e5ca1 - Check for wx < 3.2.2 for EGL move fix backport [rkitover]\n* 1fb18b32 - Rename appdata to metainfo [polynomial-c]\n* ca7ae336 - Fix regression in bios, port DMA fix from libretro [danialhorton]\n* b34448c9 - Fix record/play dialogs for native recordings [danialhorton]\n* 6307348c - build: support MSVC arm64 cross build on x86 [rkitover]\n* 87bdc93e - Revert \"translations: use %% instead of percent\" [rkitover]\n* ab4ae96e - Clarify/set condition: wayland && !wayland_egl [rkitover]\n* 8e4acfc9 - Fix build w/wxUSE_GLCANVAS_EGL=0, on Fedora [rkitover]\n* 3c41b68d - Fix the Windows ARM64 build [steelskin]\n* 22578d02 - Increase MAX_CART_SIZE from 32MiB to 128MiB [rkitover]\n\n## [2.1.5] - 2022-12-15\n=======================\n* ea2a929f - Backport 800d6ed69b from wx to fix Wayland EGL pos [rkitover]\n* c40a1417 - Write vsync toggle msg to debug log not OSD [rkitover]\n* 5d2dd01e - Call Layout() after DrawingPanel OnSize event [rkitover]\n* da686a48 - Reinit panel on vsync toggle. [rkitover]\n* ec27885c - Support EGL VSync on Wayland. [rkitover]\n* c27d384a - Enable GL on Wayland for wx 3.2+, no vsync. [rkitover]\n* c249115b - build: set -mtune=generic [rkitover]\n* 297d7c06 - [hidpi] Use wxWidgets 3.2 on Windows [steelskin]\n* 0d86432a - [hidpi] Implement full HiDPI support [steelskin]\n* 69d24fb5 - [build][msvc] Fix debug information and set hidpi support [steelskin]\n* 90fc3e12 - Default CTRL+I to change interframe blender [rkitover]\n* a57d81e1 - Show name of interframe blender not num in OSD [rkitover]\n* 13c558ac - Disable wireless link type [rkitover]\n* 639003a8 - Show pixel filter name not number on cycle [rkitover]\n* 236cffb4 - Make another adjustment to glXQueryExtensions [rkitover]\n* 643ec0f7 - Pass DefaultScreen(display) to glXQueryExtensions [rkitover]\n* 60d7ead5 - Fix menu state after playing a movie [laqieer]\n* d2fee771 - Add VBA Movie Version 2 [laqieer]\n* 3f2d3c13 - Remove manual joystick polling [steelskin]\n* 7726d26f - Enable full optimizations and fix x86 builds [danialhorton]\n* 73223445 - MSVC opt /fp:fast /Oi, intrinsic sqrt() w/ XBRZ. [rkitover]\n* 972f1513 - Enable GB colorization hack support in GUI. [danialhorton]\n* 1741fa32 - Fix autosaveloadcheat and rename pref [danialhorton]\n* a31a7a30 - in Wx, the Option is Enable MMX, make the variable also enableMMX and set its default to on. [danialhorton]\n* 983ea451 - Flash : Erased memory is FFh-filled [negativeExponent]\n* 18e387d1 - Fix Flash chip's erase operation: erased memory is FFh-filled, not zero-filled. [laqieer]\n* c05056ab - HuC3: Update [negativeExponent]\n* 93084990 - HuC3: Refactoring to avoid breaking savestates [negativeExponent]\n* 05a046e7 - HuC3: Enable battery save, update RTC support [negativeExponent]\n* 70477dcd - GBA:Fix serial emulation if compiled with NO_LINK [negativeExponent]\n* 15bcad13 - GB:Fix serial emulation when compiled with NO_LINK [negativeExponent]\n* 025f3079 - GBA:Fix a few memory read/write issues [negativeExponent]\n* 210e79bb - Add descriptions for the 'Interframe Blending' and 'LCD Color Filter' options [jrb22x]\n* 8a3456f8 - Default to not change battery on state load. [rkitover]\n* b50ff858 - add a missing break in half word reads [danialhorton]\n* 064fa7b0 - Fix SDL audio delay [Clownacy]\n* 7db3c817 - Fixed SDL audio using the wrong audio specification [Clownacy]\n* cb0933bf - Stop changing plane ptrs in rec. audio frames. [rkitover]\n* 80634683 - Force a panel update when configuring bilinear. [briansrls]\n* 6a714281 - Differentiate between SDL joy index/instance_id. [rkitover]\n* 11693d83 - Clean up GB MBC30 check. [rkitover]\n* 020daad8 - Fix joy accels when emulation is paused. [rkitover]\n* def5d3e4 - Stop timer when game is loaded again. [rkitover]\n* e0816b0e - Fix weird input/buttons memory leak. [edenisfa]\n* 7031c1d1 - [LINUX,WINDOWS] Key/Joy background input. [edenisfa]\n* 84f3e8ce - Allow joystick background input. [edenisfa]\n* 40741580 - Add GUI cmd line option for config file. (#724) [Steelskin]\n* c169420f - Turbo/throttle config and DirectSound fixes. [rkitover]\n* 378c9493 - Fix joystick config when game is loaded. [rkitover]\n* 95213a6d - GB: Only use mapperLastTime to see if RTC data was loaded [negativeExponent]\n* 86fcffef - GB: Add support for 4MB MBC30 [negativeExponent]\n* 2f9933ae - GBA BIOS: ArcTan/ArcTan2 fixes for HLE bios [negativeExponent]\n* d9732f68 - Fix clock cycle count for MUL, MLA instructions...  (https://github.com/libretro/vba-next/commit/b91f39c787cc99ace97546cb94985f3b658c8b57) - backport Fix clock cycle count for some arm/thumb instructions (https://github.com/libretro/vba-next/commit/5243b2d8064dd2145888ced7cbfe127594ecf6db) - backport Fix base cycle count for MUL, MLA series (https://github.com/libretro/vba-next/commit/b91f39c787cc99ace97546cb94985f3b658c8b57) [negativeExponent]\n* c07d5b65 - Fix vram 16/32 bit unaligned reads(backport https://github.com/libretro/vba-next/commit/7f18771165dd4a6d71a598c51d91668920572eaa) [negativeExponent]\n* 18c2ea61 - Further fixing Multi Buffer formatting. [briansrls]\n* 1e569300 - Addressing audio plugin crash [briansrls]\n* 9c314a15 - Use proper string `\"wglGetExtensionsStringEXT\"`. [edenisfa]\n* 3ba05295 - Improve BIOS Math tests score from 425 to 625. [edenisfa]\n* 6f2e320d - Improve clock cycle count for THUMB operations. [edenisfa]\n* 9e537a8f - Improve cycle count for MUL, MLA. [edenisfa]\n* 306f92f5 - Check game kbd input with wxGetKeyState() again. [rkitover]\n* 6b257d52 - Avoid override of variable `throttle` for turbo. [edenisfa]\n* bd2483ca - Allow changing connection type without restart. [edenisfa]\n* d379a076 - Decrease mouse sensitivity for menu hiding. [rkitover]\n* 0c5ee994 - Fix PNG capture screen. [edenisfa]\n* 1347026d - Turbo config refactor followup. [rkitover]\n* 1bced474 - Codesign fix for mac. [rkitover]\n* 07064c87 - [Windows,MacOS] Auto-updater refactoring. (#639) [denisfa]\n* 09e8da43 - Joystick refactor pt. Deux: Support Joysticks. [rkitover]\n* 504ca08b - Hide menubar + minor UI refactor. [rkitover]\n* 2868c1b7 - Fix changing aspect ratio option. [rkitover]\n* 045e95ab - GB: Support 4MiB MBC30 ROM bank select. [rkitover]\n* 0b14e9f8 - [WINDOWS] Add function to open unicode files. (#644) [denisfa]\n* 8e3978b3 - Speedup/Turbo/Throttle fixes. [rkitover]\n* 166cf446 - Disable menu LCD filter unless playing GB or GBA. [edenisfa]\n* 06001069 - Init systemColorMaps after output module init. [edenisfa]\n* cd029ae6 - Fix video recording with frame skip enabled. [edenisfa]\n* 008aecde - [LINUX] Fix display of `RGB` values on viewers. [edenisfa]\n* 834d1537 - Fix accel shortcuts when using some menu options. [edenisfa]\n* 994726dd - Do not pause while opening configuration windows. [edenisfa]\n* 54335dc6 - [WINDOWS] Fix weird WX errors messages. [edenisfa]\n* 7bac34ed - Remove duplicate variable `winFlashSize`. [edenisfa]\n* 8d62a790 - Change default options for GB. [edenisfa]\n* 99b66e13 - Expose LCD filter for GBA and GB color saturation. [edenisfa]\n* c789020e - Fix `Save` button on OAM Viewer for GB and GBA. [edenisfa]\n* dcaa1b9a - Fix `Save` button on Tile Viewer for GB and GBA. [edenisfa]\n* d05e8fc1 - Make AGBPrint output to our Logging. [edenisfa]\n* abb82341 - Allow binding specific server IP. (#633) [rkitover]\n* 6c64db07 - cmake: Windows codesigning refactor. [rkitover]\n* 4f1a351d - Try to configure vsync for multiple options. [edenisfa]\n* ed8a9af2 - Use proper functions and checks for OpenGL VSYNC. [edenisfa]\n* 6092082e - Fix Save Failed error for Super Monkey Ball Jr. [54053706+negativeExponent]\n* f1099a21 - Check return value of soundInit(). [rkitover]\n* 410ede54 - Check for null pointer in soundReset(). [alexjnewt]\n* 9d1d707c - Limit ROM size to 32 MiB. [negativeExponent]\n* fd319d21 - GB: Check header for a valid ROM file. [negativeExponent]\n* 513af13d - Replace `libpng` code for `stb_image` one. [edenisfa]\n* 8f48c1f0 - Fix weird `wxWidgets>=3.0` error message. [edenisfa]\n* 2f065382 - Enable XAudio2 for Windows vcpkg build. [rkitover]\n* a3203770 - Fix: a issue with loading e-Reader dot code (#608) [sony.pcv.s520]\n* 83614290 - Turn on winsparkle update checking support. [rkitover]\n* 4aab08c4 - Set link timeout default to 500ms, fix prev. dflt. [rkitover]\n* 136c094f - Add option to set link network port. [rkitover]\n* f69febfd - Add `.wav` support for sound recording. [edenisfa]\n* 6a8a9e62 - Fix integer overflow in cheatsImportGSACodeFile length check. [zack.ref]\n* b50d4845 - GBA: Fix crash when new size is larger than rom size after soft-patching [negativeExponent]\n* 9e1a63af - support for patches in BPS format [ArtiiP]\n* 72d0725b - Allow game window to resize on-the-fly when enabling/disabling borders [negativeExponent]\n* 225e4dc9 - Remove top border black line when using filters. [edenisfa]\n* 0535d5c7 - Optimize CRC32. [mudlord]\n* 4bc9bb84 - Implement joystick rumble. #522 [rkitover]\n* 384f4487 - Fix key accel overriding menus and dialogs. [edenisfa]\n* af0de1c4 - xbrz: fix inline asm check [rkitover]\n\n## [2.1.4]\n=======================\n* c93e017d - builder: minor changes to support mac 32 bit (4 days ago)\n* c1636d1b - builder: fixes for ffmpeg + misc. (4 days ago)\n* aec23e35 - builder: re-enable ffmpeg, update dists (2 weeks ago)\n* 806dd7da - Fix circular `--config` for SDL port. (7 days ago)\n* 1aa8afb4 - Drop dead code entirely. (7 days ago)\n* 531172c4 - Fix displaying of link menu when `ENABLE_LINK=NO`. (2 weeks ago)\n* 07107096 - [Windows] Fix crash when setting weekly updates. (2 weeks ago)\n* efa09bdb - Add faster sqrt code for xBRZ filters. (2 weeks ago)\n* 10f5576e - Fix config file when removing system accels. (3 weeks ago)\n* 1c6b0168 - [Windows] Fix remaining UTF-8 issues. (3 weeks ago)\n* a2f3126e - transifex pull (3 weeks ago)\n* 1e9d1675 - builder: pause before codesigning for win targets (3 weeks ago)\n* 0af5965e - builder: work on linux static binary (3 weeks ago)\n* 33c43e3a - add -p:BuildInParallel=true to appveyor.yml (3 weeks ago)\n* 61141ebd - add -p:BuildInParallel=true to VS instructions (3 weeks ago)\n* 9ee6b54a - cmake: remove invalid opt /std:c++11 for MSVC (3 weeks ago)\n* 0f2c8cab - win: check APPDATA if LOCALAPPDATA is not found (3 weeks ago)\n* 32fbfec4 - transifex pull (3 weeks ago)\n* cc516229 - transifex push/pull (4 weeks ago)\n* 528c37f9 - Allow \"Browse\" to be translated. (4 weeks ago)\n* d8c981fb - Fix toggles for video/audio layer options on menu. (4 weeks ago)\n* c0f96425 - Show all commands available on menu. (4 weeks ago)\n* 51fa150f - Adjust MMX menu variable and position. (4 weeks ago)\n* 27b038b3 - Show messages about operations of state slot. (4 weeks ago)\n* 2e248457 - Allow translation of the words `Open` and `Quit`. (4 weeks ago)\n* 54991c5b - Add extra keys default input when using GUI. (4 weeks ago)\n* b358c051 - Fix compilation issue when `ENABLE_DEBUGGER=Off`. (4 months ago)\n* 2a2be953 - builder: msys2 fixes (4 weeks ago)\n* f1438e0f - Check ASAN support when `ENABLE_ASAN=ON`. (4 weeks ago)\n* ade64db7 - transifex pull (4 weeks ago)\n* 8b347050 - cmake: check for ffmpeg >= 4.0.4 (4 weeks ago)\n* 0b9c7710 - travis: more ubuntu dists, fix mac cache (5 weeks ago)\n* d9e4a087 - build fixes: ffmpeg, xbrz, travis, C++ version (5 weeks ago)\n* 23224fba - update factory reset instructions in README.md (5 weeks ago)\n* 381a7bfe - /std:c++latest for MSVC, fix bool flip, warn opts (5 weeks ago)\n* 234f1e9b - Update to xBRZ `1.7`. (6 weeks ago)\n* 290012d1 - transifex pull (6 weeks ago)\n* 06a9d786 - Allow UPS patch for GBA games. (6 weeks ago)\n* 1949cdb3 - transifex push/pull (6 weeks ago)\n* 03121c69 - Add support for autohold buttons. (6 weeks ago)\n* e87213e3 - Fix indentation. (6 weeks ago)\n* cf47942f - Fix Autofire {L,R}. (6 weeks ago)\n* 4993cb88 - remove tea-ci .drone.yml and installer.nsi (6 weeks ago)\n* d9a7e0c9 - cmake: auto-detect sfml, ffmpeg and openal (6 weeks ago)\n* c64dd259 - Update README.md (6 weeks ago)\n* 8ceef90f - fix appveyor visual studio build (6 weeks ago)\n* a8b7b72d - transifex pull (6 weeks ago)\n* f5eabb35 - builder: disable LTO on 64 bit mingw (6 weeks ago)\n* fc2eb38f - Fix behaviour of `Tools` > `Memory Viewer` (#486) (6 weeks ago)\n* 2958af01 - builder: mingw improvements + misc. (6 weeks ago)\n* 3923b28f - transifex pull/push (6 weeks ago)\n* 51f61a3a - Merge remote-tracking branch 'vbam-libretro/master' (6 weeks ago)\n* 6bdd6d1b - Merge pull request #77 from negativeExponent/fix_cheat_search (7 weeks ago)\n* dc8d36a0 - minor fix for stl wx builds (7 weeks ago)\n* 51a4f74b - Merge remote-tracking branch 'vbam-libretro/master' (7 weeks ago)\n* 9ccdeac3 - Add missing break; lines for switch statements (7 weeks ago)\n* b8afa8c5 - Merge pull request #76 from RobLoach/intl (7 weeks ago)\n* a17eb471 - Merge branch 'master' of github.com:fpscan/vbam-libretro into intl (7 weeks ago)\n* 9b043daa - libretro: Update core options API (7 weeks ago)\n* 6b18c1f9 - Fix warning about frames left in queue. (8 weeks ago)\n* f5b19475 - [IDEA] Fix recording when using `speedup/turbo`. (8 weeks ago)\n* 738494a2 - Support all sample rate available on GUI. (8 weeks ago)\n* aa3ecaf7 - Add new output formats for recording audio/video. (9 weeks ago)\n* 5848feae - Fix video/audio recording. (2 months ago)\n* 9e3c2615 - Update libretro_core_options.h (7 weeks ago)\n* 6c60ac33 - Turkish Language option (7 weeks ago)\n* d92ca688 - Merge pull request #74 from retro-wertz/update (7 weeks ago)\n* ad43b32b - Fix \"index out of bounds\" runtime error (7 weeks ago)\n* 36f3a739 - Merge pull request #73 from retro-wertz/libretro_cleanup (8 weeks ago)\n* 82e723a5 - MBC3: Update mapper to check if RTC is present before running RTC functions (8 weeks ago)\n* 03184dd5 - libretro: Use GB RTC data when available (8 weeks ago)\n* b3744b3b - Simplify GB border core option (8 weeks ago)\n* 9757a880 - Core options cleanup and a few readability-related updates (8 weeks ago)\n* cfb03d8b - Set default keybinding when key does not exist. (9 weeks ago)\n* 1ef09126 - Merge pull request #72 from retro-wertz/enable_rtc (8 weeks ago)\n* 496b372d - Allow enabling GBA RTC regardless of rom types (8 weeks ago)\n* 4dbdf87d - Merge pull request #71 from retro-wertz/patch-3 (8 weeks ago)\n* bb109544 - Update Makefile (8 weeks ago)\n* 3e640443 - Merge pull request #70 from retro-wertz/update_makefiles (8 weeks ago)\n* 98313652 - Update Makefile (8 weeks ago)\n* 34de0579 - Merge pull request #67 from retro-wertz/update_makefiles (8 weeks ago)\n* 71e4b7b3 - Merge pull request #69 from retro-wertz/master (8 weeks ago)\n* d9f8396c - Cleanup (8 weeks ago)\n* 9a134497 - Update Makefiles (8 weeks ago)\n* 38b7613e - Setting up basic appveyor (9 weeks ago)\n* 408cab71 - Merge pull request #66 from retro-wertz/libretro (9 weeks ago)\n* d8982881 - Automatically hide some core options depending on rom image type (9 weeks ago)\n* c3edd6d4 - Merge pull request #65 from retro-wertz/libretro (9 weeks ago)\n* 2084a63e - Update GB/GBC memory maps (retro_memory_descriptors) (9 weeks ago)\n* 90b051ee - Update libretro_core_options.h (9 weeks ago)\n* a727e222 - GB: Rename this variable to isolate from a global variable of the same name (10 weeks ago)\n* 0d423b98 - Cleanup GB palette struct and update retro_get_memory_data/size (10 weeks ago)\n* bc80ecdb - UtilRetro.cpp: Cleanup (10 weeks ago)\n* 855db11d - Fix wxWidgets assertion error on `Logging...` menu. (10 weeks ago)\n* c886b6a1 - remove wrong and unnecessary #define (10 weeks ago)\n* 38561b57 - Merge remote-tracking branch 'vbam-libretro/master' (2 months ago)\n* 770b9c1c - Add left analog bind to D-PAD for joystick. (2 months ago)\n* 6de45d4e - Set default binding for keyboard. (3 months ago)\n* 78bbe148 - Add individual clear buttons for input config. (3 months ago)\n* 53002e54 - Use hats from joystick as default D-PAD. (3 months ago)\n* 57b7ddf5 - Fix small memory leak. (3 months ago)\n* 060da968 - [LINUX] Add option to disable the online updater. (3 months ago)\n* dbb5914f - Show which BIOS file is currently selected. (3 months ago)\n* 76756ef9 - Fix key shortcuts for toggle menu actions. (3 months ago)\n* 4622f1b8 - Whitespace fix. (3 months ago)\n* 3dc738b5 - Set default keys for input on first run. (3 months ago)\n* 9bc8f33c - Disable using volume {+,-} actions in main menu. (3 months ago)\n* d1fcffc8 - Merge pull request #63 from retro-wertz/fix_gba_siocnt (2 months ago)\n* 7df7b190 - Merge pull request #64 from retro-wertz/patch-2 (2 months ago)\n* 7f105da3 - Update README.md (2 months ago)\n* 53ce6fb0 - libretro: add SIO Control register (GBA) (2 months ago)\n* 2e96f59e - Merge pull request #62 from retro-wertz/gb_timing_updates (2 months ago)\n* e50812dc - GB: input, audio, video timing updates (2 months ago)\n* 1532f555 - GB: Reduce input lag by 1 frame, video and audio timing updates... (2 months ago)\n* f09a9aa9 - builder: add python3 to msys2 deps (2 months ago)\n* 2fcad3f8 - joysticks: hack to better support 360 triggers (3 months ago)\n* 352eb149 - Merge remote-tracking branch 'vbam-libretro/master' (3 months ago)\n* 2e97b27f - Use --config option to load configuration file. (3 months ago)\n* bdd43868 - Merge pull request #61 from retro-wertz/gb (3 months ago)\n* bd5ba431 - Cleanup: Remove previous core option struct and unused variables etc (3 months ago)\n* aac30c72 - Add GB Color Correction core option (3 months ago)\n* 02a7a48b - GB: Fix selected palette not applied when loading content... (3 months ago)\n* 8462ca76 - Merge pull request #59 from retro-wertz/gb (3 months ago)\n* 1fa78e69 - Fix android build (3 months ago)\n* 6dcf016d - GB: Allow support for colorizer patched games - a new core option is provided since enabling this support means allowing invalid access to vram and palette - works in GBC/GBA hardware mode only (3 months ago)\n* 85bd86cf - GB: Send LCD interrupt only if there is no INT 48h signal (3 months ago)\n* b147e912 - Merge pull request #57 from retro-wertz/sync (3 months ago)\n* d808297b - Fix crash caused by incorrect variable index for analog sticks (3 months ago)\n* 7e882898 - libretro: Add core option sublabels (3 months ago)\n* ce11403b - builder: updates for mingw (3 months ago)\n* c5e6a340 - Libretro: Update GBC memory map (3 months ago)\n* fa45ccdf - builder: fix command(), update c2man url (3 months ago)\n* e64b9904 - builder: fix msys2 (3 months ago)\n* 58022078 - builder: make zip + sig on win + minor changes (3 months ago)\n* 296255d4 - handle SDL joystick query errors #451 (3 months ago)\n* 95658f57 - transifex sync (3 months ago)\n* 86c4dc7d - transifex sync (3 months ago)\n* bcc8b540 - transifex sync (3 months ago)\n* 7569242f - Fix pause behaviour with `Pause when inactive`. (3 months ago)\n* 030740ee - Fix some memory leak. (3 months ago)\n* 8ea607e1 - remove translation from joystick keys (3 months ago)\n* cec32a61 - travis: mac: disable --help check, it segfaults (3 months ago)\n* f54dd25b - travis: fix gettext on mac + brew (3 months ago)\n* e2f06210 - update Visual Studio support (3 months ago)\n* 91501bec - Fix small memory leak. (3 months ago)\n* c366907f - Temporary fix for #65. (3 months ago)\n* d585a610 - followup on kbd trans issues fix in 30b92724 (3 months ago)\n* eaf1ad24 - Merge remote-tracking branch 'vbam-libretro/master' (3 months ago)\n* 30b92724 - hopefully fix kbd control translation issues (3 months ago)\n* 90b3f354 - Add hotkeys for changing sizes (1x ... 6x). (3 months ago)\n* fa77010f - Fix pause toggle keybinding when unmuting. (3 months ago)\n* 8cb42003 - Merge pull request #56 from webgeek1234/master (3 months ago)\n* 8b8efa1b - fix key shortcuts for save/load states (3 months ago)\n* 9fa20b49 - joystick cleanups #444 (3 months ago)\n* 684b1bb7 - fix mem error for config global `homeDir` (3 months ago)\n* ccc91fa0 - quick fix for unicode filenames on windows (3 months ago)\n* dfa4fec3 - Fix missing shortcuts from key bindings. (4 months ago)\n* 69b581f7 - Handle key{bindings,shortcuts} correctly on frame. (4 months ago)\n* cec1dbfd - Split configuration for default keys. (4 months ago)\n* d655031a - Fix removing multiple system keys shortcuts. (4 months ago)\n* 996d5b9d - Do not set these options on `MainMenu.xrc`. (4 months ago)\n* 019ab5a7 - Fix \"Joybus host invalid; disabling\" warning. (3 months ago)\n* f6bfe676 - Have better support for maximized window. (4 months ago)\n* dcc0afa0 - Fix window size when {en,dis}abling status bar. (4 months ago)\n* bf6f2d4a - Change where the config dir is created. (4 months ago)\n* 3490620e - travis: use Mac OS 10.14 and Xcode 10.2.1 (4 months ago)\n* b0ec8469 - fix stuck keys on ubuntu and on focus loss #142 (4 months ago)\n* 3d57750c - Follow-up work on #142. (4 months ago)\n* 055b7c4d - libretro: jni: Switch to clang compiler in preparation for ndk r20 (4 months ago)\n* 2e1333e1 - regparm is an x86 only attribute, only define it there (4 months ago)\n* 500506cb - travis: disable link/SFML for mac (4 months ago)\n* 22307de6 - Fix continuous sprinting when using a modifier key as a mapping key (#142). (4 months ago)\n* 50459712 - wx: only rename config if new file doesn't exist (5 months ago)\n* 0a95486f - Sound.cpp: Update (5 months ago)\n* a4eae802 - cmake: use LEGACY OpenGL on FreeBSD only 2fedaa63 (5 months ago)\n* 240257a0 - wx: Change max volume from 400 to 200 (5 months ago)\n* 57ed465e - builder: better mac automation (5 months ago)\n* 15f040f3 - cmake: missing space in wx util function (5 months ago)\n* 2fedaa63 - support FreeBSD (5 months ago)\n* a0c375b6 - Merge remote-tracking branch 'vbam-libretro/master' (6 months ago)\n* c013d499 - Merge pull request #55 from Classicmods/master (6 months ago)\n* a8b38681 - remove some old visual studio project files (6 months ago)\n* b6bb24e0 - Merge pull request #1 from libretro/master (6 months ago)\n* 5012969a - Bump version to 2.1.1 (7 months ago)\n* 755f4767 - Fix #52 (8 months ago)\n* f87e0850 - added a8a35 (7 months ago)\n* 286c8ff4 - Fix #52 (8 months ago)\n\n## [2.1.3] Windows Geometry Fix\n=======================\n* ac35e37c - fix game geometry on windows (4 hours ago)\n* 9fa544d1 - cmake: wxWidgets Release config for visual studio (4 hours ago)\n* 3cacb363 - libretro: put \" \" between version and git sha (25 hours ago)\n* c2656f13 - libretro: remove \"-\" between version and git sha (26 hours ago)\n* 4203bb53 - libretro: set version with git sha (27 hours ago)\n* 8abbb070 - cmake: use Win32Deps when mingw cross compiling (28 hours ago)\n* ffc93092 - builder: freetype 2.9.1 -> 2.10.0, verbose make (28 hours ago)\n* d08dd6cd - builder: opensuse update 2 (2 days ago)\n* 9b38a384 - builder: updates for opensuse, refactor cross deps (2 days ago)\n* d28fd302 - cmake: only link SetupAPI on win32 if it's found (2 days ago)\n* af63a119 - cmake: add -lSetupAPI to SDL2 libs for win32 (3 days ago)\n* 04c77a26 - update win32 dependencies submodule (4 days ago)\n* 5dfb36ad - remove .clang-format, update .travis.yml (4 days ago)\n* ed16d625 - add unistd.h compat header for visual studio (4 days ago)\n* 5019a201 - [SDL Front] MSVC doesn't have an unistd.h system file, closest is io.h, this will fix building the SDL frontend with msvc again. (7 days ago)\n* 2ae72f38 - fix starting game pos and geometry #406 (8 days ago)\n* 2beb5618 - cmake: move wx funcs and macros into separate file (9 days ago)\n* 468fe266 - fix lang in changelog, add bios to issue template (11 days ago)\n\n## [2.1.2] Analog stick fix\n=======================\n* 95433f6c - release v2.1.2 (81 minutes ago)\n* 5b9d1a71 - cmake: improve finding wx utils (19 hours ago)\n* 836b74a1 - remove DOS line-ends from src/wx/xrc/*.xrc (2 days ago)\n* 49205bf2 - remove unused \"multithread filter\" menu item (2 days ago)\n* 331d9d33 - Fix compilation warnings for MacOS build. (3 days ago)\n* 5540790f - fix some compilation warnings (12 days ago)\n* d9197281 - Fix for resizing window geometry when loading games. (3 days ago)\n* 64a9c094 - fix analog stick regression from e57beed8 #400 (5 days ago)\n* 0f0d2400 - more specific check for 3.1.2 xrc error (5 days ago)\n* d9a7df61 - fix if statement in SDL sound driver #396 (5 days ago)\n* 41ee35f2 - add *.dll to .gitignore (5 days ago)\n* 6ec46678 - installdeps: centos: do not install wx 2.8 (9 days ago)\n* 2097b5aa - wx 2.8 compat fixes, centos support, cmake fixes (9 days ago)\n* b69fced7 - cmake: refactor, better clang support (11 days ago)\n* 7fb27c4d - cmake: check for broken LTO (11 days ago)\n* f2e9dc55 - cmake: check for policy CMP0077 existence (11 days ago)\n* ae38a70d - cmake: gcc/clang colors with ninja, fix warnings (12 days ago)\n* 23fe13d8 - cmake: fix syntax error in Win32Deps.cmake (2 weeks ago)\n* 59e9c690 - reset Xorg screensaver on joy events (2 weeks ago)\n* a0283ead - fix game panel size on wxGTK #325 (2 weeks ago)\n* f1ecd7c3 - auto deps for visual studio, take 1 (2 weeks ago)\n* 3da07f40 - detect llvm toolchain utilities #392 (3 weeks ago)\n* c714ff82 - fix problems of command line parameters (3 weeks ago)\n* a1f0c34a - XDG followup work #94 (3 weeks ago)\n* 2142a46d - Revert \"travis: try re-enabling binary check\" (3 weeks ago)\n* 101fac59 - travis: try re-enabling binary sanity check (3 weeks ago)\n* 6ca59412 - travis: disable mxe pkg key (3 weeks ago)\n* a57e51f6 - Return non-error code for given command line parameters. (3 weeks ago)\n* 3fd444da - XDG related cleanups #94 (3 weeks ago)\n* 513b0559 - minor travis update for mingw jobs (4 weeks ago)\n* 1ebb8efd - Fix to set correctly position Y. (4 weeks ago)\n* 944c263e - auto save/load geometry for wx GUI #94 (4 weeks ago)\n* 36fbf715 - travis update attempt 5 (4 weeks ago)\n* 77bcbbf4 - travis update attempt 4 (4 weeks ago)\n* 7b3a3a0c - travis update attempt 3 (4 weeks ago)\n* 8f0a578a - travis update attempt 2 (4 weeks ago)\n* dbd1d8c1 - attempt to re-enable travis mingw slaves (4 weeks ago)\n* 530af140 - rpi plugins fix + paths enhancements #94 (4 weeks ago)\n* 6a98f3c2 - define S_ISDIR for win32 #94 (4 weeks ago)\n* 7373da15 - Fix segmentation fault issue when using WX port command line on Linux and MacOS. (4 weeks ago)\n* 36453885 - XDG Base Dir Spec followup #383 (4 weeks ago)\n* 39fd3f65 - add note to README.md about translations (5 weeks ago)\n* 24fd4e91 - move factory reset to help menu (5 weeks ago)\n* 5835dafe - translate battery save error #318 (5 weeks ago)\n* d2922cfc - stop showing \"wrote battery\" msg on panel #318 (5 weeks ago)\n* 646557e2 - Add support for the XDG Base Dir Spec for Linux with legacy support. (5 weeks ago)\n\n## [2.1.1] Various fixes to core and GUI\n=======================\n* 286d7ee9 - builder: fix 32bit mac build (16 hours ago) <Rafael Kitover>\n* eaa9b6c5 - Map Viewer: Fix crash when running  a gb/gbc game, (26 hours ago) <retro-wertz>\n* 91ee8cad - installdeps: check gtk3-classic on arch/manjaro (2 days ago) <Rafael Kitover>\n* 98cb298e - GB: fix 32/64 bit save/state incompatibility (2 days ago) <Rafael Kitover>\n* b9d6f35f - add build32/ to .gitignore (for 32bit builds) (3 days ago) <Rafael Kitover>\n* 6e76fcef - cmake: fix finding 32 bit wxWidgets on gentoo (3 days ago) <Rafael Kitover>\n* 0674b41b - cmake: remove <INCLUDES> from nasm definition (4 days ago) <Rafael Kitover>\n* 7dda5809 - cmake: do not use -fPIC on 32 bit x86, breaks asm (4 days ago) <Rafael Kitover>\n* 3c28a189 - installdeps: support -m32 builds on opensuse (4 days ago) <Rafael Kitover>\n* d7cf15e0 - implement factory reset option #368 (5 days ago) <Rafael Kitover>\n* 12fa61af - cmake: refactor FindSSP.cmake (9 days ago) <Rafael Kitover>\n* 5a77d8f4 - cmake: don't use ccache on msys2+ninja (11 days ago) <Rafael Kitover>\n* ed29b9c4 - Merge pull request #364 from laqieer/master (3 weeks ago) <Zach Bacon>\n* 7b350c09 - bugfix: crash when loading elf (3 weeks ago) <laqieer>\n* eb6dfb4b - fix libretro build broken in 16dd5d40 #339 (3 weeks ago) <Rafael Kitover>\n* 16dd5d40 - make speedup/turbo configurable + misc #339 (3 weeks ago) <Rafael Kitover>\n* 5379708f - I guess I'll try the gtk2 build of wxwidgets instead (3 weeks ago) <ZachBacon>\n* d70dd373 - Let's use the proper wxwidgets package (3 weeks ago) <ZachBacon>\n* ede6b371 - Fix snap deps (3 weeks ago) <ZachBacon>\n* 44208c82 - Add basic snapcraft yaml for building a snap (3 weeks ago) <ZachBacon>\n* ba678f4f - GB: Make gbTimerOn an INT type instead of BOOL (4 weeks ago) <retro-wertz>\n* 43647d32 - GB: Prevent gbSpritesTicks from going out-of-bounds (4 weeks ago) <retro-wertz>\n* f8c69531 - fix drawing panel alignment in frame #325 (4 weeks ago) <Rafael Kitover>\n* c6fa7246 - cmake: use color gcc/clang output when possible (4 weeks ago) <Rafael Kitover>\n* e912c359 - GBA: Remove some magic numbers for main pointers and save types size (4 weeks ago) <retro-wertz>\n* 06979221 - Update libretro.cpp (4 weeks ago) <retro-wertz>\n* 4700a2c1 - libretro: Enable mirroring for classic/famicom games for GBA and update (4 weeks ago) <retro-wertz>\n* f2b34962 - GB: Add missing battery save for MMM01 cart (4 weeks ago) <retro-wertz>\n* a0cec107 - Update GBA save type detection and cleanup... (4 weeks ago) <retro-wertz>\n* 2a796d48 - libretro: Add GB color palettes (4 weeks ago) <retro-wertz>\n* 4f900311 - persist chosen audio device in config file #353 (5 weeks ago) <Rafael Kitover>\n* d94d6d53 - osx builder: add -stdlib=libc++ to CFLAGS/LDFLAGS (5 weeks ago) <Rafael Kitover>\n* 3eb591ca - Update wxwidgets to 3.1.2 (5 weeks ago) <ZachBacon>\n* 3b87576e - GB: Fix rumble support (MBC5) - Fix missing call to rumble function on MBC5 - fix rumble flag gets disabled causing rumble not to work at all. (5 weeks ago) <retro-wertz>\n* 089d7a40 - libretro: Add support for tilt, gyro sensors and rumble pak (WIP) - Uses analog stick to simulate tilt and gyro hw. By default, tilt uses the right analog stick while gyro uses the left. The analog stick can be swapped using a core option provided and with separate sensitivity level for both sensors. WIP and will be fine tuned later (Kirby was fun to play at least) - Minor retro_run() cleanup and some minor stuff i forgot. (5 weeks ago) <retro-wertz>\n* 6330555c - Merge pull request #350 from retro-wertz/libretro (5 weeks ago) <Zach Bacon>\n* a2b3dd76 - libretro: Update input descriptors for 4-player SGB and cleanup... - Updates descriptors for 4-player SGB - Remove alternate gamepad layouts for GBA - Prevent crash when SGB border option executes at startup when GB is not initialized yet - Update input turbo function for 4-player support - Minor cleanups (texts, style nits, etc)... (5 weeks ago) <retro-wertz>\n* 9d058abb - libretro: don't include getopt.h in configmanager (6 weeks ago) <Rafael Kitover>\n* d5642fa3 - libretro: Android buildfix (#348) (6 weeks ago) <retro-wertz>\n* 093818a1 - GBA: Resolve shifting negative value issue in some thumb/arm opcodes (6 weeks ago) <retro-wertz>\n* 59f76d05 - libretro: Use gbWram[] for $C000 in CGB mode (6 weeks ago) <retro-wertz>\n* f9efb79a - libretro: Fix GB games that uses serial (WIP) (6 weeks ago) <retro-wertz>\n* af3fe018 - libretro: Update GB's memory map, expose all usuable ram (6 weeks ago) <retro-wertz>\n* 470d86f5 - libretro: Cleanup (6 weeks ago) <retro-wertz>\n* ad432a6f - libretro: Silence warning (6 weeks ago) <retro-wertz>\n* bff08eaf - libretro: Update Makefile, fix ASAN (6 weeks ago) <retro-wertz>\n* 8628db13 - Revert faudio inclusion, causing builder to fail because I didn't properly hook up the build instructions, will try and fix later (7 weeks ago) <ZachBacon>\n* c2b31635 - GBA: Only use eepromReset/flashReset during reset event (CPUReset) (7 weeks ago) <retro-wertz>\n* 0d73da01 - GBA: Get rid of blip_time() (7 weeks ago) <retro-wertz>\n* 83b3ebd7 - fix audio api radio buttons (7 weeks ago) <Rafael Kitover>\n* 327611b7 - installdeps: add gcc-libgfortran to msys2 deps (7 weeks ago) <Rafael Kitover>\n* f6ad9a8c - remove bad hardcoded keybinds #298 #334 (7 weeks ago) <Rafael Kitover>\n* 6462ce59 - pull transifex updates (8 weeks ago) <Rafael Kitover>\n* ab3d9236 - add vim undo files to .gitignore (8 weeks ago) <Rafael Kitover>\n* a7773bc9 - Bump FAudio to 19.01 (8 weeks ago) <ZachBacon>\n* de0e8d6b - cmake: support libasan/-fsanitize (8 weeks ago) <Rafael Kitover>\n* ff2d31bf - faudio: minor change (8 weeks ago) <Rafael Kitover>\n* 964f086b - fix audioapi opt enum, reorder xrc (8 weeks ago) <Rafael Kitover>\n* 8cb3f5a7 - fix sound api config on linux/mac (8 weeks ago) <Rafael Kitover>\n* 55a60e3e - only block key event propagation for game keys #88 (8 weeks ago) <Rafael Kitover>\n* f8b5627b - fix support for old SDL versions (9 weeks ago) <Rafael Kitover>\n* e57beed8 - ignore depressed gamepad triggers #88 (9 weeks ago) <Rafael Kitover>\n* 979ef8eb - cmake: fix building without FAudio (9 weeks ago) <Rafael Kitover>\n* a91f0664 - disable travis mingw jobs for now (9 weeks ago) <Rafael Kitover>\n* edf2c0c4 - fix xaudio2 when openal is disabled (9 weeks ago) <Rafael Kitover>\n* 3ed08e8d - finish connecting new faudio driver (9 weeks ago) <Rafael Kitover>\n* 296e8e16 - fix valid sound driver config values + faudio fix (9 weeks ago) <Rafael Kitover>\n* 1f4487b8 - faudio: add gui code for selecting driver (9 weeks ago) <Rafael Kitover>\n* 39622766 - add some missing faudio initialization code (9 weeks ago) <Rafael Kitover>\n* 0c2906d0 - fix SDL sound defaulting code (9 weeks ago) <Rafael Kitover>\n* 580a11e3 - Let's not force FAudio just yet (9 weeks ago) <ZachBacon>\n* 969046ea - Add faudio to the build script (9 weeks ago) <ZachBacon>\n* d6f3fd23 - Finish hooking up FAudio to the rest of the frontend (9 weeks ago) <ZachBacon>\n* 539027ca - remove problematic default joy binds #88 (9 weeks ago) <Rafael Kitover>\n* 5da48769 - fixed a typo and added faudio, but there's still persisting issues (9 weeks ago) <ZachBacon>\n* 514f3556 - Merge pull request #337 from visualboyadvance-m/light-weight (9 weeks ago) <Zach Bacon>\n* 429b8ceb - I'm pretty sure some of this is very hacky and needs correcting, but it compiles at least. (9 weeks ago) <ZachBacon>\n* 53e16e04 - Need to hook up the effects chain parameters (9 weeks ago) <ZachBacon>\n* 8939455b - Next on the list is adding a few more arguments for certain functions (9 weeks ago) <ZachBacon>\n* a8c44364 - Next on the list is correcting the incomplete types (9 weeks ago) <ZachBacon>\n* 4b664c69 - Still not quite ready for d3d, but this one header mingw has anyways. (9 weeks ago) <ZachBacon>\n* 14815135 - we need to release with the proper function in faudio (9 weeks ago) <ZachBacon>\n* 0bfbcfa3 - Needed the FAudio Processor in FAudioCreate (9 weeks ago) <ZachBacon>\n* af98f532 - Inbound FAudio fixes (9 weeks ago) <ZachBacon>\n* 5f38c0da - cmake: static: check for link file when editing (9 weeks ago) <Rafael Kitover>\n* ebd2e74a - installdeps: fix for a01deb28: use msys2 ccache (9 weeks ago) <Rafael Kitover>\n* a01deb28 - installdeps: also install ccache (9 weeks ago) <Rafael Kitover>\n* ba563c71 - Add FAudio to the xrc (9 weeks ago) <ZachBacon>\n* 5d7dfa49 - Merge pull request #335 from retro-wertz/fix_crash (9 weeks ago) <Zach Bacon>\n* 0c579b20 - Revert to a default audio api (SDL) when config is invalid (9 weeks ago) <retro-wertz>\n* 4361c45b - Fixed a few things, still have lots to fix though before it's a usable state. (10 weeks ago) <ZachBacon>\n* 99795b27 - cmake hookup is done, there are some issues that I'll be trying to fix within faudio.cpp before it's ready for mainstream (2 months ago) <ZachBacon>\n* eab039cd - This should allow faudio to be supported in vba-m, next is to further modify cmake to find faudio (2 months ago) <ZachBacon>\n* e00aca18 - Initial work on switching to faudio, WIP (2 months ago) <ZachBacon>\n* 0a40ca7a - initial inclusion of stb_image to begin migration from libpng to stb, let's trim some fat (2 months ago) <ZachBacon>\n* 0d1b23c5 - Merge pull request #331 from retro-wertz/gba_timings (3 months ago) <Zach Bacon>\n* 85891fc7 - Reduce input delay by 1 frame and audio timing fix (3 months ago) <retro-wertz>\n* 3cb38420 - builder: add patch for glibc 2.28 compat to m4 (3 months ago) <Rafael Kitover>\n* 61b3084e - builder: set host cc for libgpg-error to gcc (3 months ago) <Rafael Kitover>\n* 00b04692 - add travis hook for gitter (3 months ago) <Rafael Kitover>\n* b60a6343 - Merge pull request #326 from knightsc/tasks/add-lldb-support (3 months ago) <Rafael Kitover>\n* 27a874e3 - Merge branch 'master' into tasks/add-lldb-support (3 months ago) <Rafael Kitover>\n* a52eddb5 - Handle debugger disconnect and reconnect properly (3 months ago) <Scott Knight>\n* 6ba3b779 - Set correct register number in gdb stop reply (3 months ago) <Scott Knight>\n* f385fb2f - Update gdb remote query support (3 months ago) <Scott Knight>\n* 3b185e23 - builder: libvorbis fix (3 months ago) <Rafael Kitover>\n* c68f372e - fix wrong copy-pasta in 36e412df (3 months ago) <Rafael Kitover>\n* 16ccad07 - Merge pull request #330 from retro-wertz/libretro_updates (3 months ago) <Zach Bacon>\n* 36e412df - builder: mingw: fix libffi for i686 + improvemnts (3 months ago) <Rafael Kitover>\n* 5b0f2e8a - builder: msys2: fix links to host binaries (3 months ago) <Rafael Kitover>\n* 72760642 - Update ISSUE_TEMPLATE.md (3 months ago) <retro-wertz>\n* ca56ccff - libretro: Simplify cheats, add multiline support for GB/GBC (3 months ago) <retro-wertz>\n* a2d5c260 - libretro: Add turbo buttons (3 months ago) <retro-wertz>\n* 3484ecc4 - Add support for LLDB qHostInfo packet (3 months ago) <Scott Knight>\n* dd2a1d9b - Fix stack overflow in remoteMemoryRead (3 months ago) <Scott Knight>\n* 4f28e846 - Fix stack overflow in remotePutPacket (3 months ago) <Scott Knight>\n* db8aaeca - builder: mingw: build zlib-target after cmake (3 months ago) <Rafael Kitover>\n* beaf9340 - builder: bump libxslt 1.1.33-rc1 -> 1.1.33-rc2 (3 months ago) <Rafael Kitover>\n* afbe647a - builder: catgets fix for msys2 + minor changes (3 months ago) <Rafael Kitover>\n* a6034ddf - builder: disable building openssl tests (3 months ago) <Rafael Kitover>\n* 9ebc3fc2 - builder: build mingw dlfcn after cmake (3 months ago) <Rafael Kitover>\n* 115fce69 - builder: do not defer env eval for msys2 host hook (3 months ago) <Rafael Kitover>\n* b9911a57 - builder: fix regressions from 37869441..a3ec309b (3 months ago) <Rafael Kitover>\n* a3ec309b - builder: more minor mingw cross fixes (4 months ago) <Rafael Kitover>\n* d725978a - builder: fix openssl parallel make patch (4 months ago) <Rafael Kitover>\n* cf3ed8f3 - builder: fix quoting issues introduced in 37869441 (4 months ago) <Rafael Kitover>\n* 37869441 - builder: msys2 fixes + misc improvements (4 months ago) <Rafael Kitover>\n* 975a1866 - cmake: support linuxbrew mingw toolchain (4 months ago) <Rafael Kitover>\n* 453fa0de - add visual studio .vs/ directory to .gitignore (4 months ago) <Rafael Kitover>\n* eee4add6 - Add localizations to installer, next will be adding portable mode so users can install to a custom location without the shortcuts being installed (4 months ago) <Zach Bacon>\n* 2e5235af - Initial rework of the installer framework, this is very incomplete, but it'll hopefully allow individual selection of translations as well as offer a portable mode installer (4 months ago) <Zach Bacon>\n* 6f1df2dd - rename mingw include dir mingw-include in deps (4 months ago) <Rafael Kitover>\n* 5e58e4c3 - when it comes to cross compiling, Most unices like linux are case sensitive (4 months ago) <Zach Bacon>\n* 26b15b2c - add mingw dependencies/include to include path (4 months ago) <Rafael Kitover>\n* 9cb9ce86 - fix Windows XP Compatibility #315 (4 months ago) <Rafael Kitover>\n* 1bf51ec1 - builder: 32 bit mingw fixes (4 months ago) <Rafael Kitover>\n* ed8c928a - builder: support gentoo crossdev + misc fixes (5 months ago) <Rafael Kitover>\n* b60cd332 - Update openal to use github url (5 months ago) <ZachBacon>\n* aebda1b7 - debian: update dependency (5 months ago) <retro-wertz>\n* 58083d9d - Gonna use universaldxsdk for xaudio (5 months ago) <ZachBacon>\n* 721c1b7c - Revert \"hopefully fix bin2c for msvc\" (5 months ago) <Rafael Kitover>\n* 01a75e8e - hopefully fix bin2c for msvc (5 months ago) <Rafael Kitover>\n* b9d0f818 - builder: fix ccache on msys2 (5 months ago) <Rafael Kitover>\n* be0d49a3 - builder: msys2 fixes (6 months ago) <Rafael Kitover>\n* 3aa00bfb - builder: fix libuuid_mingw for mingw cross (6 months ago) <Rafael Kitover>\n* 5b5e3193 - builder: don't install cpanm with local::lib (6 months ago) <Rafael Kitover>\n* 88f66ef6 - builder: fix building ccache for win targets (6 months ago) <Rafael Kitover>\n* d1c82cac - fix typo in builder core (6 months ago) <Rafael Kitover>\n* dcd7d5e0 - support 32/64 bit mac builds, build improvements (6 months ago) <Rafael Kitover>\n* b4dd06a1 - Merge pull request #302 from retro-wertz/libretro (6 months ago) <Zach Bacon>\n* 916c091a - Libretro: Add GB/GBC cheat support... (6 months ago) <retro-wertz>\n* 14086d00 - Libretro: Fix crash on some linux systems (6 months ago) <retro-wertz>\n* 0e338617 - update translations, add new langs from transifex (7 months ago) <Rafael Kitover>\n* e67b513e - rename mac-localizations to mac-translations.cmake (7 months ago) <Rafael Kitover>\n* bf4606fc - install translations into mac .app (7 months ago) <Rafael Kitover>\n* 0092dc16 - msys2: don't try to link msys librt and libpthread (7 months ago) <Rafael Kitover>\n* 65e1ab04 - disable gcc stack protector, segfault on 8.2.0 (7 months ago) <Rafael Kitover>\n* 6cbad61f - fix cmake regression introduced in bfe21aee (7 months ago) <Rafael Kitover>\n* bfe21aee - remove -fpermissive compiler flag (7 months ago) <Rafael Kitover>\n* 571ecbe3 - support mac-hosted mingw builds, misc. fixes (7 months ago) <Rafael Kitover>\n* e32e7c5d - installdeps: Add zip to openSuse dependency (7 months ago) <retro-wertz>\n* f45935af - Add vbam_libretro.info (7 months ago) <retro-wertz>\n* be508eb2 - simplify check for renamed wx-config, fix gentoo (7 months ago) <Rafael Kitover>\n* 3b44a299 - cmake: fix wrong unset syntax #295 from f78d45c0 (7 months ago) <Rafael Kitover>\n* 56443391 - installdeps gentoo: don't eselect wxwidgets (7 months ago) <Rafael Kitover>\n* 7a054b45 - installdeps: support gentoo (7 months ago) <Rafael Kitover>\n* f78d45c0 - cmake: fix regression in finding wx from 2efcb620 (7 months ago) <Rafael Kitover>\n* 594ecc39 - msys2 builder: redo fontconfig patch, bumb wx (7 months ago) <Rafael Kitover>\n* 2cece6ac - Updated Translations, finally added transifex support to pull in new translations (7 months ago) <ZachBacon>\n* 6bc30101 - update msys2 builder (7 months ago) <Rafael Kitover>\n* 14d13153 - Merge pull request #292 from retro-wertz/updates (7 months ago) <Zach Bacon>\n* ddea50d3 - GB: Cleanup sound registers (7 months ago) <retro-wertz>\n* faf01db2 - GB: Backport STAT register behavior (7 months ago) <retro-wertz>\n* d9e0d0f8 - GB: Remove references to gbReadOpcode (7 months ago) <retrowertz>\n* eb20bb4a - We don't have a forum anymore (7 months ago) <Zach Bacon>\n* fca7e175 - Libretro: Prevent crash when loading an incompatible state file (7 months ago) <retro-wertz>\n* 1289e08c - Libretro: Enable battery save ram support for MBC2 and MBC7 (7 months ago) <retro-wertz>\n* a9ab09f7 - Libretro: Fix realtime clock not updating in GB/GBC... (7 months ago) <retro-wertz>\n* 6cda6c0c - Libretro: Show basic details in log window during rom loading (7 months ago) <retro-wertz>\n* de25e9d7 - include zip for arch based systems (7 months ago) <Zach Bacon>\n* 5016fd6c - Merge pull request #286 from retro-wertz/libretro_gb (7 months ago) <Zach Bacon>\n* 6ef938fc - Libretro: Add memory descriptors for GB/GBC (7 months ago) <retro-wertz>\n* bb64e8d8 - Libretro: Use retro_get_memory_data/size for battery-enabled roms (7 months ago) <retro-wertz>\n* 119e1f5c - Libretro: Add core options for GB border and hardware overrides (7 months ago) <retro-wertz>\n* 76ad84fd - Opps, accidentally broke borders in standalone (7 months ago) <retro-wertz>\n* bf447bf8 - Libretro: Add GB/GBC core (7 months ago) <retro-wertz>\n* f05a05e6 - Libretro: Refactoring for adding GB/GBC core (8 months ago) <retro-wertz>\n* 0e60c34a - Fix this (8 months ago) <retro-wertz>\n* 52f5a02b - fix installdeps for Ubuntu 18 (8 months ago) <Rafael Kitover>\n* cc43db35 - fix installdeps for Ubuntu (8 months ago) <Rafael Kitover>\n* 3f903cf0 - Merge pull request #278 from retro-wertz/patch-4 (8 months ago) <Zach Bacon>\n* 02e5f0bd - Libretro: Bump version number (8 months ago) <retro-wertz>\n* fc42f88b - GB: Fix SIO related issue (8 months ago) <retro-wertz>\n* a8d0508c - use GetWindow()->Refresh() in Wayland only (8 months ago) <Rafael Kitover>\n* 459a1fbe - builder: fix ccache, mingw-cross (8 months ago) <Rafael Kitover>\n* f937aa72 - builder: disable ccache for openssl (8 months ago) <Rafael Kitover>\n\n## [2.1.0] Vulnerability fixes\n=======================\n* 68028b50 - (HEAD -> master, origin/master, origin/HEAD) minor fix for mingw cross build (9 hours ago) <Rafael Kitover>\n* 498019a3 - (origin/osx-32bit) support older 32 bit macs running 10.7, fix build (11 hours ago) <Rafael Kitover>\n* 6b486258 - fix some ELF parsing vulnerabilities #255 (30 hours ago) <Rafael Kitover>\n* c63d3640 - travis: add job for libretro module (2 days ago) <Rafael Kitover>\n* ef8c89fc - Libretro: Do not compile arm disassembly module (2 days ago) <retro-wertz>\n* 63431916 - fix 2 broken URLs in builder script (3 days ago) <Rafael Kitover>\n* 48af3829 - travis: move cache key for ccache into jobs (3 days ago) <Rafael Kitover>\n* 21b718b8 - Add Coverity Badge (4 days ago) <ZachBacon>\n* 8778837c - add Travis CI support (4 days ago) <Rafael Kitover>\n* fde9d731 - installdeps: add ccache to list of deps (4 days ago) <Rafael Kitover>\n* 77a3673d - installdeps: install wx-common for mxe for wxrc (4 days ago) <Rafael Kitover>\n* 90188e88 - installdeps: fix build instructions for mxe (4 days ago) <Rafael Kitover>\n* 816aab99 - fix installdeps for ubuntu:trusty (4 days ago) <Rafael Kitover>\n* e4923e72 - fix save dialogs on Mac #268 (4 days ago) <Rafael Kitover>\n* 66a50e35 - note how to reset config in windows in README.md (7 days ago) <Rafael Kitover>\n* ed00dc77 - use GetWindow()->Refresh() on non-GTK too #260 (12 days ago) <Rafael Kitover>\n* 89228b06 - fix high CPU usage under wxgtk2 #260 (12 days ago) <Rafael Kitover>\n* d1603218 - fix $ENV{WX_CONFIG} check yet again (12 days ago) <Rafael Kitover>\n* 0489756d - fix $ENV{WX_CONFIG} check in 46f52941 (12 days ago) <Rafael Kitover>\n* 46f52941 - do not prefer wxgtk3 if $ENV{WX_CONFIG} is set (12 days ago) <Rafael Kitover>\n* 437b366e - clean up wxgtk3 finding cmake code (12 days ago) <Rafael Kitover>\n* 2efcb620 - support and default to wxgtk3 not gtk2 on arch (13 days ago) <Rafael Kitover>\n* 430b5d63 - fix Mac OS 10.13 build issues (13 days ago) <Rafael Kitover>\n* 9222894c - Merge pull request #263 from retro-wertz/patch-2 (2 weeks ago) <Zach Bacon>\n* 02e1f49a - Add couple of file ext on .gitignore (2 weeks ago) <retro-wertz>\n* fad1dd15 - Merge pull request #262 from retro-wertz/libretro (2 weeks ago) <Zach Bacon>\n* 9c859917 - Opps (2 weeks ago) <retro-wertz>\n* 009c09ef - GBA: Show log when rom uses SRAM of FLASH save types (2 weeks ago) <retro-wertz>\n* 90bc79f2 - Libretro: implement vbam logging using libretro logging api (2 weeks ago) <retro-wertz>\n* f4b88ba6 - Libretro: Remove GBA LCD filter (2 weeks ago) <retro-wertz>\n* 76389d8e - RTC: Change this #ifdef to GBA_LOGGING (2 weeks ago) <retro-wertz>\n* 710d2f3e - UtilRetro: Remove LCD filter (2 weeks ago) <retro-wertz>\n* e0fe8365 - Makefile: Add option for sanitizer, add -DNO_DEBUGGER (2 weeks ago) <retro-wertz>\n* 94d07676 - Makefile: Remove sources we dont need (2 weeks ago) <retro-wertz>\n* 50e91f79 - Remove unrelated function during rom load (2 weeks ago) <retro-wertz>\n* 3c0e88bc - Remove wrong #ifdef decleration (2 weeks ago) <retro-wertz>\n* 3791b0a0 - Libretro: Fix samplerate not passed correctly to gba core (2 weeks ago) <retro-wertz>\n* 3385be25 - Silence some warnings (2 weeks ago) <retro-wertz>\n* 4d4819f0 - Libretro: Add core options for Sound Interpolation and Filtering (2 weeks ago) <retro-wertz>\n* 94f11023 - Libretro: Add core option to mute sound channels (2 weeks ago) <retro-wertz>\n* 5a4c788d - Merge pull request #256 from retro-wertz/patch-1 (2 weeks ago) <Zach Bacon>\n* bdb164bd - Set mirroringEnable to false (2 weeks ago) <retro-wertz>\n* 0047fa1a - Merge pull request #253 from retro-wertz/libretro (2 weeks ago) <Zach Bacon>\n* 17b681b8 - ereader.cpp: Silence warning (2 weeks ago) <retro-wertz>\n* 27fa30b4 - Libretro: Disable cheats by default, update to bios loading (2 weeks ago) <retro-wertz>\n* 01c5f465 - Libretro: Cleanup controller layout binds (2 weeks ago) <retro-wertz>\n* 319a4869 - Libretro: Do not allow opposing directions (2 weeks ago) <retro-wertz>\n* 2c46522e - Libretro: Add Solar Sensor (3 weeks ago) <U-DESKTOP-UVBJEGH\\Cloud>\n* 037e3771 - let's place these in the correct spot shall we? (3 weeks ago) <ZachBacon>\n* 90d2f5c8 - Added retro-wertz for his contributions in bringing in libretro back to speed and other things (3 weeks ago) <ZachBacon>\n* 03bc7c24 - Merge pull request #249 from retro-wertz/updates (3 weeks ago) <Zach Bacon>\n* 991fc749 - Do this for GBA sound enhancements too (3 weeks ago) <retro-wertz>\n* 4e4424e8 - GB: Fix sound options not working (3 weeks ago) <retro-wertz>\n* abb62df6 - pause on menu pulldown on windows only (FIXED) (3 weeks ago) <Rafael Kitover>\n* cb3e9e32 - pause on menu pulldown on windows only (3 weeks ago) <Rafael Kitover>\n* 1115be12 - Merge pull request #248 from retro-wertz/updates (3 weeks ago) <Zach Bacon>\n* bc0e169d - Add missing file (3 weeks ago) <U-DESKTOP-UVBJEGH\\Cloud>\n* edf939e9 - Gfx: Add #ifdef _MSC_VER, fix tiled rendering on windows (3 weeks ago) <retro-wertz>\n* 57dc0c25 - Move gfxDrawTextScreen() into GBAGfx.cpp (3 weeks ago) <retro-wertz>\n* 27aeb6dc - Re-add Types.h, remove some more #ifdef (3 weeks ago) <retro-wertz>\n* 9ec142da - Add header guard (3 weeks ago) <U-DESKTOP-UVBJEGH\\Cloud>\n* 7a194fb2 - do not pause games when menus are pulled down (3 weeks ago) <Rafael Kitover>\n* 6e18c3c2 - exclude headers for now (3 weeks ago) <ZachBacon>\n* 947cd10e - minor OSD code cleanup (3 weeks ago) <Rafael Kitover>\n* 0dc3e06c - update installdeps for opensuse (3 weeks ago) <Rafael Kitover>\n* cafe905b - Fix a cast for msvc compilers (4 weeks ago) <ZachBacon>\n*   07bc2ee4 - Merge pull request #246 from retro-wertz/libretro (4 weeks ago) <Zach Bacon>\n* 1606ea74 - libretro: Cleanup some #ifdefs (4 weeks ago) <retro-wertz>\n* 1d4dacc6 - Merge pull request #244 from retro-wertz/fix_gba_cheats (4 weeks ago) <Zach Bacon>\n* e2dff89d - Fix cheats not working in GBA (4 weeks ago) <retro-wertz>\n* a3510c90 - Merge pull request #243 from retro-wertz/fix_opcode (4 weeks ago) <Zach Bacon>\n* 9ab2ee67 - Fix some opcodes in arm (4 weeks ago) <retro-wertz>\n* a5e717a2 - add brace so it doesn't break compilation (4 weeks ago) <Zach Bacon>\n* 4a615ab3 - Gonna take my time and actually work on a D3D9 panel. Documentation here I come. (4 weeks ago) <ZachBacon>\n* fdb39a1c - Merge pull request #242 from retro-wertz/fix_alignments (4 weeks ago) <Zach Bacon>\n* 26c8c61b - Fix some formatting alignments in arm/thumb opcodes (4 weeks ago) <retro-wertz>\n* 7c3d8d02 - Merge pull request #241 from retro-wertz/libretro (4 weeks ago) <Zach Bacon>\n* 8edd4ce5 - libretro: Fix save types not properly set using overrides (4 weeks ago) <retro-wertz>\n* 893269d8 - Merge pull request #239 from retro-wertz/libretro (4 weeks ago) <Zach Bacon>\n* 3411aa33 - libretro: Use stdint.h instead in most cases (4 weeks ago) <retro-wertz>\n* 1f20ba81 - libretro: Update (4 weeks ago) <retro-wertz>\n* b0982ac8 - Always apply map masks (4 weeks ago) <retro-wertz>\n* ff4f1235 - libretro: Fix wrong file pointer (4 weeks ago) <retro-wertz>\n* 8f6e5de5 - libretro: Fix error : narrowing conversion (4 weeks ago) <retro-wertz>\n* 8a1fd587 - libretro: Add header guard to UtilRetro.h (4 weeks ago) <retro-wertz>\n* 85dea8a5 - add cygwin cross build support (9 weeks ago) <Rafael Kitover>\n* 8638c769 - require pkg-config in cmake for gtk checks #227 (9 weeks ago) <Rafael Kitover>\n* 60f2bd3f - remove ffmpeg from suse installdeps (9 weeks ago) <Rafael Kitover>\n* 9933b6bb - if cross compiling openssl, need to add --cross-compile-prefix=- (2 months ago) <ZachBacon>\n* 55caf62e - win cross script: pass RANLIB to openssl make (2 months ago) <Rafael Kitover>\n* 9cd26b25 - windows cross build script: use autoconf for bzip2 (2 months ago) <Rafael Kitover>\n* d5f90f0a - fix SDL sound on windows (3 months ago) <Rafael Kitover>\n* fe9f0641 - fix msys2 builder script (3 months ago) <Rafael Kitover>\n* 70c8dee8 - cmake: default ENABLE_OPENAL to OFF (3 months ago) <Rafael Kitover>\n* d992cfa2 - Finalize vertical draw fixes and code cleanup (3 months ago) <Eleuin>\n* 62e8098f - Fix forbidden conversion in remote.cpp (3 months ago) <Lucas>\n* edb2fd26 - Merge pull request #214 from Eleuin/name-fixes (3 months ago) <Zach Bacon>\n* 9843af2b - Fix cmake directory in installdeps (3 months ago) <Eleuin>\n* 80bcdab9 - Fix draw height across rendering modes (3 months ago) <Eleuin>\n* f3f6ee7b - fix compile errors with ffmpeg git (3 months ago) <Rafael Kitover>\n* 5ae853a9 - fix installdeps for OpenSUSE (3 months ago) <Rafael Kitover>\n* 8540860a - adjust changelog version regex for cur. version (4 months ago) <Rafael Kitover>\n* 61e2f3b2 - Merge pull request #204 from Eleuin/filter-bounds-fix (4 months ago) <Zach Bacon>\n* d7a4eddb - Fixed filter draw bounds (4 months ago) <Eleuin>  \n\n\n## [2.0.2] Bug fix release 03/13/2018\n=======================\n1. 480541a - Eleuin - Modify max_threads sanity check to better handle erroneous values\n2. d5c9c6b - rkitover - change default audio driver to SDL\n\n## [67c6ad6] developmental release 02/25/2018\n========================\n\n1. 67c6ad6 - ZachBacon - implemented the fix from nhdailey, should\nresolve #153. Will put up a test build soon - 02/25/2018\n2. 669893 - rkitover - add multi-platform build system - 02/24/2018\n3. 3e052c9 - obea and rkitover - cmake: Fix -DENABLE_FFMPEG=OFF -\n01/18/2018\n4. df0bd43 - rkitover - fix deps submodule init on windows - 10/25/2017\n5. 7dca069 - ZachBacon - Added some windows specific stuff to builder\n10/22/2017\n    ..+ f527d0a - ZachBacon - The not so finished builder script for\nwindows\n    ..+ 4204502 - rkitover - mac build/builder improvements\n6. c3fc4e7 - ZachBacon - Added basic windows script. 10/21/2017\n7. 21926d6 - rkitover - add -mfpmath=sse -msse2 compiler flags:\nx86/amd64 10/17/2017\n8. d7ff2af - rkitover - add mac release builder script 10/12/2017\n    ..+ 5e63398 - rkitover - mac builder refactor/improvements\n    ..+ afb1cd3 - automate codesign/zip for mac build, add xz dep\n9. 30b6ecf - ZachBacon - add a changelog 10/11/2017\n    ..+ 4648638 - rkitover - read version from CHANGELOG.md if no git\n## [2.0.1] - 10/11/2017\n### Added\n- initial installer script\n- gitter.im badge in readme\n- 32bit cross compiling support on 64bit linux\n- added support for GNUInstallDirs to cmake\n- Include new translations from transifex\n- Added WxWidgets ABI compiler check\n- Add linux Joystick reference to issue template\n- Add #ubckyde <cmath> fir std::cell()\n- \n\n### Changed\n- Fix 2xSaImmx.asm linking issue\n- cmake: default to ENABLE_ASM_CORE=OFF\n- libretro merging from upstream libretro fork.\n- better fix for clipped video in GL Fullscreen.\n- Fix flibc crash: add log message on fopen failure\n- fix gameboy header-detection in libretro interface\n- hotfix for potential buffer-overflow\n- delete memory in common/array.h on destruction\n- SDL: improve error msg for unwritable config\n- SDL: fix deflt bat saving, improve dir checking\n- fix portability issue with strerror_r()\n- Windows doesn't have sterror_r\n- wx/wxvbam: fix GetAbsolutePath \n- fix a memory leak due to wrong syntax\n- regenerate translation files\n- fix errors reported by SUSE's post build linter\n- SUSE Lint: fix a few classes of warnings\n- let cmake escape -D preproc. definitions\n- fix memory viewer xrc on wx 3.1+\n- Improving README\n- SoundSDL: lock conditional code cleanup\n- remove the default F11 keybinding for save state\n- hopefully fix resize artifacts on game panel\n- soundSDL: write silence when paused\n- cleanup SoundSDL  #139 #130 #97 #67 #65 #46 #47\n- document how to provice symbolic backtraces\n- \"no throttle\" fixes/cleanup\n- only use -mtune=generic on x86/amd64\n- installdeps: use -j$(nproc) not -j8 in info\n- use -fabi-version=2 for GCC turn off LTO\n- installdeps: minor refactoring/cleanup\n- improve Wx GCC ABI check\n- minor improvements for Wx Compile tests\n- fix wx ABI check for Win32/MinGW\n- installdeps: fedora fixes, including m32\n- cmake: wx and cross compiling fixes\n- restore wx 2.7 compat, improve string processing\n- rename CMakeScripts/ to cmake/\n- work around gcc lto wrappers bug with gcc 7.x\n- update README.md\n- remove doctoc title from README.md TOC\n- improve win32 dependencies git submodule handling\n- use num cpu cores to parallelize LTO link with gcc\n- fix huge app icon in Win volume settings\n- fix deadlock in SoundSDL:deinit()\n- added executable extension for sdl binary\n- default LTO to off on 64bit MinGW\n- minor code cleanup\n- deps: dont check result of apt-get update \n- read version and subversion info from Git\n- fix error and version info in shallow git clones\n- refactor/cleanup GitTagVersion.cmake\n\n### Removed\n- Cairo Renderer: it never performed well to begin with\n\n\n\n[2.0.1]: https://github.com/olivierlacan/keep-a-changelog/compare/throttle...v2.0.1\n\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.890625,
          "content": "cmake_minimum_required(VERSION 3.19)\ncmake_policy(VERSION 3.19...3.28.3)\n\nset(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)\n\nif(WIN32)\n    include(RemoveStrawberryPerlFromPATH)\n\n    find_program(POWERSHELL\n        NAMES powershell.exe pwsh.exe\n        HINTS \"/Windows/System32/WindowsPowerShell/v1.0\"\n        REQUIRED)\nelse()\n    find_program(POWERSHELL pwsh)\nendif()\n\nif(UPDATE_APPCAST)\n    include(UpdateAppcast)\nendif()\n\nif(TAG_RELEASE)\n    include(MakeReleaseCommitAndTag)\nendif()\n\nset(VCPKG_DEPS pkgconf zlib pthreads \"sdl2[samplerate]\" gettext wxwidgets)\n\nset(VCPKG_DEPS_OPTIONAL\n    sfml   ENABLE_LINK\n    ffmpeg ENABLE_FFMPEG\n    faudio ENABLE_FAUDIO\n)\n\ninclude(Set-Toolchain-vcpkg)\n\n# Use ccache if available and not already enabled on the command line.\n# This has to be done before the project() call.\nif(NOT CMAKE_CXX_COMPILER_LAUNCHER)\n    find_program(CCACHE_EXECUTABLE ccache)\n    if(CCACHE_EXECUTABLE)\n        message(STATUS \"Enabling ccache\")\n\n        set(CMAKE_C_COMPILER_LAUNCHER        ${CCACHE_EXECUTABLE} CACHE STRING \"C compiler launcher\"     FORCE)\n        set(CMAKE_CXX_COMPILER_LAUNCHER      ${CCACHE_EXECUTABLE} CACHE STRING \"C++ compiler launcher\"   FORCE)\n        set(CMAKE_ASM_NASM_COMPILER_LAUNCHER ${CCACHE_EXECUTABLE} CACHE STRING \"nasm assembler launcher\" FORCE)\n    endif()\nendif()\n\nfind_package(Git)\n\n# Make sure we pull in the submodules on windows and mingw.\nif(GIT_FOUND AND WIN32)\n    # Win32 deps submodule\n    set(SUBMODULE_MANUAL_UPDATE FALSE)\n\n    if(EXISTS \"${CMAKE_SOURCE_DIR}/.git\" AND NOT EXISTS \"${CMAKE_SOURCE_DIR}/win32-deps/mingw-xaudio/include\")\n        set(SUBMODULE_MANUAL_UPDATE TRUE)\n        execute_process(\n            COMMAND \"${GIT_EXECUTABLE}\" submodule update --init --remote --recursive\n            RESULT_VARIABLE SUBMODULE_UPDATE_STATUS\n            WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n        )\n    endif()\n\n    if(NOT EXISTS \"${CMAKE_SOURCE_DIR}/win32-deps/mingw-xaudio/include\")\n        if(NOT (SUBMODULE_MANUAL_UPDATE AND SUBMODULE_UPDATE_STATUS EQUAL 0))\n            message(FATAL_ERROR \"Please pull in git submodules, e.g.\\nrun: git submodule update --init --remote --recursive\")\n        endif()\n    endif()\nendif()\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED True)\nset(CMAKE_C_STANDARD 11)\nset(CMAKE_C_STANDARD_REQUIRED True)\n\nproject(VBA-M C CXX)\n\ninclude(CTest)\ninclude(FetchContent)\ninclude(GNUInstallDirs)\ninclude(Architecture)\ninclude(Options)\ninclude(Toolchain)\ninclude(Dependencies)\n\n# Disable tests when not in a git checkout.\nif(NOT EXISTS \"${CMAKE_SOURCE_DIR}/.git\")\n    set(BUILD_TESTING OFF)\nendif()\n\n# Configure gtest\nif(BUILD_TESTING)\n    set(gtest_force_shared_crt ON CACHE BOOL \"\" FORCE)\n    set(INSTALL_GTEST OFF CACHE BOOL \"\" FORCE)\n\n    if(NOT EXISTS third_party/googletest/CMakeLists.txt)\n        execute_process(\n            COMMAND git submodule update --init --recursive -- third_party/googletest\n            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n        )\n    endif()\n\n    if(EXISTS third_party/googletest/CMakeLists.txt)\n        add_subdirectory(./third_party/googletest)\n        include(GoogleTest)\n    else()\n        set(BUILD_TESTING OFF)\n    endif()\nendif()\n\nif(NOT CMAKE_PREFIX_PATH AND (NOT (\"$ENV{CMAKE_PREFIX_PATH}\" STREQUAL \"\")))\n    set(CMAKE_PREFIX_PATH \"$ENV{CMAKE_PREFIX_PATH}\")\nendif()\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE \"Debug\" CACHE STRING \"Build Type\" FORCE)\nelseif(NOT CMAKE_BUILD_TYPE MATCHES \"^(Release|Debug|RelWithDebInfo|MinSizeRel)$\")\n    message(FATAL_ERROR \"Invalid CMAKE_BUILD_TYPE: '${CMAKE_BUILD_TYPE}', must be one of: 'Release', 'Debug', 'RelWithDebInfo' or 'MinSizeRel'\")\nendif()\n\nset(MSYS OFF)\nif(NOT \"$ENV{MSYSTEM_PREFIX}\" STREQUAL \"\")\n    set(MSYS ON)\nendif()\n\nif(EXISTS \"${CMAKE_SOURCE_DIR}/.git\")\n    include(GitTagVersion)\n    git_version(VBAM_VERSION VBAM_REVISION VBAM_VERSION_RELEASE)\n\n    # only use the plugin to tie the configure state to the sha to force rebuilds\n    # of files that depend on version.h\n    include(GetGitRevisionDescription)\n    get_git_head_revision(REFSPEC COMMITHASH)\n\n    # Make sure old tags are gone from all clones.\n    execute_process(\n        COMMAND ${GIT_EXECUTABLE} tag -l\n        OUTPUT_VARIABLE git_tags\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n    )\n\n    string(REGEX REPLACE \";\"     \"\\\\\\\\;\" git_tags_lines \"${git_tags}\")\n    string(REGEX REPLACE \"\\r?\\n\" \";\"     git_tags_lines \"${git_tags_lines}\")\n\n    set(found_old_tags FALSE)\n\n    foreach(tag ${git_tags_lines})\n        if(NOT tag MATCHES \"^v[0-9]\")\n            set(found_old_tags TRUE)\n            break()\n        endif()\n    endforeach()\n\n    if(found_old_tags)\n        # Delete all tags and fetch them from the origin.\n\n        foreach(tag ${git_tags_lines})\n            execute_process(\n                COMMAND ${GIT_EXECUTABLE} tag -d ${tag}\n                OUTPUT_QUIET\n                ERROR_QUIET\n                WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n            )\n        endforeach()\n\n        execute_process(\n            COMMAND ${GIT_EXECUTABLE} fetch --tags origin\n            OUTPUT_QUIET\n            ERROR_QUIET\n            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n        )\n    endif()\nendif()\n\n# no git or no tags, use ChangeLog\nif(NOT VBAM_VERSION)\n    include(ChangeLogVersion)\n    changelog_version(VBAM_VERSION VBAM_REVISION VBAM_VERSION_RELEASE)\nendif()\n\n# Enable internationalization\nset(LOCALEDIR ${CMAKE_INSTALL_PREFIX}/share/locale)\n\nif(NOT TRANSLATIONS_ONLY)\n    add_subdirectory(third_party/include/nonstd)\n    add_subdirectory(third_party/include/stb)\n    add_subdirectory(src/core)\n    add_subdirectory(src/components)\n    add_subdirectory(src/sdl)\nendif()\n\nadd_subdirectory(src/wx)\nadd_subdirectory(po/wxvbam)\n\nset(CPACK_GENERATOR \"ZIP\")\nset(CPACK_SOURCE_GENERATOR \"TGZ\")\nset(CPACK_PACKAGE_VERSION_MAJOR \"2\")\nset(CPACK_PACKAGE_VERSION_MINOR \"0\")\nset(CPACK_PACKAGE_VERSION_PATCH \"0-Git-${COMMITHASH}\")\nlist(APPEND CPACK_SOURCE_IGNORE_FILES \"${CMAKE_CURRENT_SOURCE_DIR}/win32-deps\")\ninclude(CPack)\n"
        },
        {
          "name": "CMakeSettings.json",
          "type": "blob",
          "size": 3.9287109375,
          "content": "{\n  \"configurations\": [\n    {\n      \"name\": \"x64-static-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"inheritEnvironments\": [\n        \"msvc_x64\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=x64-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"x64-static-Release\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Release\",\n      \"inheritEnvironments\": [\n        \"msvc_x64\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=x64-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"x64-static-RelWithDebInfo\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"RelWithDebInfo\",\n      \"inheritEnvironments\": [\n        \"msvc_x64\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=x64-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"x86-static-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"inheritEnvironments\": [\n        \"msvc_x86\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=x86-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"x86-static-Release\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Release\",\n      \"inheritEnvironments\": [\n        \"msvc_x86\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=x86-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"x86-static-RelWithDebInfo\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"RelWithDebInfo\",\n      \"inheritEnvironments\": [\n        \"msvc_x86\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=x86-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"arm64-static-Debug\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Debug\",\n      \"inheritEnvironments\": [\n        \"msvc_arm64\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=arm64-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"arm64-static-Release\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"Release\",\n      \"inheritEnvironments\": [\n        \"msvc_arm64\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=arm64-windows-static -DENABLE_SDL=TRUE\"\n    }, {\n      \"name\": \"arm64-static-RelWithDebInfo\",\n      \"generator\": \"Ninja\",\n      \"configurationType\": \"RelWithDebInfo\",\n      \"inheritEnvironments\": [\n        \"msvc_arm64\"\n      ],\n      \"buildRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\build\\\\${name}\",\n      \"installRoot\": \"${env.USERPROFILE}\\\\CMakeBuilds\\\\${workspaceHash}\\\\install\\\\${name}\",\n      \"cmakeCommandArgs\": \"-DVCPKG_TARGET_TRIPLET=arm64-windows-static -DENABLE_SDL=TRUE\"\n    }\n  ]\n}\n"
        },
        {
          "name": "DEVELOPER-MANUAL.md",
          "type": "blob",
          "size": 12.599609375,
          "content": "<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [visualboyadvance-m Developer Manual](#visualboyadvance-m-developer-manual)\n  - [Issues Policies](#issues-policies)\n    - [Processing New Issues](#processing-new-issues)\n    - [Resolving Issues](#resolving-issues)\n  - [Pull Request and Commit Policies](#pull-request-and-commit-policies)\n    - [Commit Message](#commit-message)\n    - [Collaboration on a Branch](#collaboration-on-a-branch)\n    - [Commits from Maintainers](#commits-from-maintainers)\n  - [Miscellaneous](#miscellaneous)\n    - [Debug Messages](#debug-messages)\n  - [Release Process](#release-process)\n    - [Certificates](#certificates)\n    - [Release Commit and Tag](#release-commit-and-tag)\n    - [64-bit Windows Binary](#64-bit-windows-binary)\n    - [32-bit Windows Binary](#32-bit-windows-binary)\n    - [ARM64 Windows Binary](#arm64-windows-binary)\n    - [macOS Binary](#macos-binary)\n    - [Final steps](#final-steps)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## visualboyadvance-m Developer Manual\n\nHere we will keep notes about our development process, policies and environment\nsetup guides.\n\n### Issues Policies\n\n#### Processing New Issues\n\nFollow the following steps to process newly submitted issues:\n\n- Edit the user's post to remove unused template sections etc.. Rephrase the\n  issue title if it needs to be clarified.\n\n- Label the issue as a question, bug or enhancement. This label can be changed\n  later upon clarification if necessary.\n\n- Add any other relevant labels, for example for the code subsystem.\n\n- If it is strongly related to a work by a developer that you know of, assign\n  them to the issue. If this is not the case, they can be unassigned.\n\n- Ask the user for clarification of any details if needed.\n\n#### Resolving Issues\n\n- An issue is resolved by closing it in github. A commit that fixes the issue\n  should have the following line near the end of the body of the commit message:\n```\nFix #999.\n```\n  This will automatically close the issue and assign the closing commit in the\n  github metadata when it is merged to master. The issue can be reopened if\n  needed.\n\n- A commit that is work towards resolving an issue, should have the issue number\n  preceded by a pound sign either at the end of a commit message title, if it is\n  of primary relevance to the issue, or the body otherwise.\n\n### Pull Request and Commit Policies\n\n#### Commit Message\n\nFollow these guidelines always:\n\nhttps://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n\n, the description of your work should be in the **commit message NOT the pull\nrequest description**.\n\nThe title line must be no more than 50 characters and the description must be\nwrapped at 72 characters. Most commit message editor interfaces will help you\nwith this. The title line must not end with a period.\n\nWrite everything in the imperative mood, e.g. change, fix, **NOT** changes,\nchanged, fixed, fixes etc..\n\nA commit message must always have a title and a description, the description\nmust be independent of the title line, if necessary repeat the information in\nthe title line in the description.\n\nMake sure the git history in your branch is clean and logical, edit when\nnecessary with `rebase -i`.\n\nUse one commit per logical change if necessary, most work can be squashed into\none commit when you are done. It is not necessary to have separate commits\nper-file if they are one logical change. We are less strict about this than\nother projects, fewer is better.\n\nThe commit title line should be prefixed with an area, unless it involves the\nwxWidgets GUI app, in which case it should **NOT** have a prefix.\n\nIf the commit is a user-facing functionality change or enhancement, the title\nline of the commit must be a non-technical description of this change. For\nexample \"Mute on speedup\" because this will go into the changelog.\n\nThe text after the area prefix should not be capitalized.\n\nPlease use one of these area prefixes for non-main-GUI-app commits:\n\n- doc: documentation, README.md etc.\n- build: cmake, installdeps, preprocessor compatibility defines, compatibility\n  headers, etc.\n- gb: the GameBoy emulator core\n- gba: the GameBoy Advance emulator core\n- libretro: the libretro core glue and build\n- sdl: anything for the SDL port\n- translations: anything related to translations\n\n. Add other areas here if needed.\n\nIf a commit fixes a regression, use a title line such as:\n\n```console\nFix regression <PROBLEM> in <SHORT-SHA>\n```\n, you can get the short sha from `git log --oneline -100` or similar.\n\nThe commit description for a regression must refer to the breaking change in\nreference format, which you can get from e.g. `git log --format=reference -20`.\n\nYou can refer to github issues using `#<ISSUE-NUMBER>` freely in the description\ntext.\n\nIf a commit fixes an issue, add a line at the end of the description such as:\n\n```console\nFix #<ISSUE-NUMBER>.\n```\n.\n\n#### Collaboration on a Branch\n\nTo update when multiple people are working on a git branch, keep a couple of\nthings in mind:\n\n- Always `push -f` unless you're adding a commit on top. And it's almost always\n  better to edit the history than to add more commits. Never add commits fixing\n  previous commits, only improving or adding to them.\n\n- To update when someone else updated the branch with a `push -f`\n```bash\ngit status # should be clean, with your work having been already pushed\ngit fetch --all --prune\ngit reset --hard origin/<branch-name>\n```\n.\n\n- While actively working on a branch, keep it rebased on top of master.\n\n#### Commits from Maintainers\n\nMaintainers and project members have the power to commit directly to master.\nThis power must be used responsibly.\n\nMake your best attempt to follow these general guidelines to keep our\nhistory clean:\n\n- Things that are a minor fix or improvement that does not require discussion\n  can be committed directly, keeping the following guidelines in mind.\n\n- Bigger new features, code refactors and changes in architecture should go\n  through the PR process.\n\n- Push code changes to a branch first, so they can run through the CI. When you\n  open the commit in GitHub there is a little icon in the upper left corner that\n  shows the CI status for this commit. Differences in what different compilers\n  allow is a problem that comes up **VERY** frequently. As well as\n  incompatibilities between different configurations for both the C++ code and\n  any supporting code.\n\n### Miscellaneous\n\n#### Debug Messages\n\nWe have an override for `wxLogDebug()` to make it work even in non-debug builds\nof wx and on windows, even in mintty.\n\nIt works like `printf()`, e.g.:\n\n```cpp\nint foo = 42;\nwxLogDebug(wxT(\"the value of foo = %d\"), foo);\n```\n\nFrom the core etc. the usual:\n\n```cpp\nfprintf(stderr, \"...\", ...);\n```\n, will work fine.\n\nYou need a debug build for this to work or to even have a console on Windows.\nPass `-DCMAKE_BUILD_TYPE=Debug` to cmake.\n\n### Release Process\n\n#### GnuPG Key\n\nYou will need to create a GnuPG key for signing your commits and release tags,\nand upload it to a keyserver.\n\nMake sure to install GnuPG on all environments where you will be making commits\nand tags.\n\n#### Certificates\n\nMake sure you have set up a Windows code signing certificate with the right\npassword and a Mac 'Developer ID Application' certificate.\n\nPut the Windows certificate into `~/.codesign/windows_comodo.pkcs12` as a PKCS12\nfile that is password protected, and put the password for it into\n`~/.codesign/windows_comodo.pkcs12.password`.\n\n#### Release Commit and Tag\n\nOnce you are sure you're ready to release, and you are in a git clone on master\nwith a clean working tree, use the cmake script to make the release commit and\ntag:\n\n```bash\nmkdir build && cd build\ncmake .. -DTAG_RELEASE=TRUE\n```\n, follow the instructions to edit the `CHANGELOG.md` and then push the release:\n\nTo reiterate, **make sure you edit the `CHANGELOG.md`** to remove any\nnon-user-facing changes before you make the release commit.\n\n```bash\ngit push\ngit push --tags\n```\n\nIf you don't want to push the release, to back out the change do:\n\n```bash\ncmake .. -DTAG_RELEASE=UNDO\n```\n\n#### 64-bit Windows Binary\n\nFor this you will preferably need the PowerShell environment setup described\n[here](https://github.com/rkitover/windows-dev-guide), or by starting the `x64\nNative Tools Command Prompt` from your Start Menu.\n\n```powershell\nmkdir build-msvc64\ncd build-msvc64\ncmake .. -DCMAKE_BUILD_TYPE=Release -DUPSTREAM_RELEASE=TRUE -G Ninja\nninja\n```\n\nCollect the following files for the release:\n\n- `visualboyadvance-m-Win-x86_64.zip`\n- `translations.zip`\n\nRepeat the process for the debug build, with `-DCMAKE_BUILD_TYPE=Debug` and\ncollect this file:\n\n- `visualboyadvance-m-Win-x86_64-debug.zip`\n.\n\n#### 32-bit Windows Binary\n\nThe 32-bit build is a legacy build for Windows XP compatibility. You will need\nthe MinGW toolchain to build it. The easiest method is to use the MINGW32 MSYS2\nenvironment.\n\nMake sure the Visual Studio `signtool.exe` is in your path, you can start MSYS2\nwith an inherited `PATH` from a Visual Studio enabled environment or add it to\nyour shell configuration.\n\nFirst install dependencies with:\n\n```bash\n./installdeps\n```\n. Then build the 32-bit binary as follows:\n\n```bash\nmkdir build-mingw32\ncd build-mingw32\ncmake .. -DCMAKE_BUILD_TYPE=Release -DUPSTREAM_RELEASE=TRUE -G Ninja\nninja\n```\n. Collect this file for the release:\n\n- `visualboyadvance-m-Win-x86_32.zip`\n\n. Then repeat the process for the debug build with `-DCMAKE_BUILD_TYPE=Debug`,\nand collect this file:\n\n- `visualboyadvance-m-Win-x86_32-debug.zip`\n.\n\n#### ARM64 Windows Binary\n\nYou will need the MSVC ARM64 cross toolchain to build this binary, if you used\nthe install script from [here](https://github.com/rkitover/windows-dev-guide)\nyou will have it installed, otherwise run Visual Studio Installer and install\nthe component.\n\nTo enter the ARM64 cross environment, edit the PowerShell profile described\n[here](https://github.com/rkitover/windows-dev-guide) or use the `vcvarsall.bat`\nscript with the `amd64_arm64` argument as described\n[here](https://learn.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170).\n\nFrom there the process is the same as for the 64-bit build, collect the\nfollowing files for the release:\n\n- `visualboyadvance-m-Win-arm64.zip`\n- 'visualboyadvance-m-Win-arm64-debug.zip'\n.\n\n#### macOS Binary\n\nInstall the latest Xcode for your OS.\n\nYou will need bash from Homebrew/nix/MacPorts/whatever to run the build script.\n\nYou will need a codesigning certificate from Apple, which you will be able to\ngenerate once you join their developer program from XCode. This is the\ncertificate of the type 'Developer ID Application' stored in your login\nkeychain.\n\nIf you are not using a GUI session, you will need to use a method to unlock your\nlogin keychain before building so that your codesigning certificate can be used.\nAdding the certificate and key to the System keychain is also a method that some\npeople use.\n\nTo unlock your keychain on login, you can add something like this to your\n`~/.zshrc`:\n\n```bash\nsecurity unlock-keychain -p \"$(cat ~/.login-keychain-password)\" login.keychain\n```\n, with your login password in that file.\n\nFor notarization to work, you will need to create an app-specific password on\nhttps://appleid.apple.com , get your Team ID from your Apple Developer account,\nand store them with this command:\n\n```bash\nxcrun notarytool store-credentials AC_PASSWORD \\\n               --apple-id you@domain.com \\\n               --team-id <DeveloperTeamID> \\\n               --password <secret_app_specific_2FA_password>\n```\n. Once all of this is set up, run:\n\n```bash\ntools/osx/builder\n```\n, this will take a while because it builds all of the dependencies.\n\nCollect the following files from `~/vbam-build-mac-64bit/project`:\n\n- `visualboyadvance-m-Mac-x86_64.zip`\n- `visualboyadvance-m-Mac-x86_64-debug.zip`\n.\n\n#### Final steps\n\nGo to the github releases tab, and make a release for the tag you pushed\nearlier.\n\nPut any notes to users and distro maintainers into the description as well as\nthe generated entries from `CHANGELOG.md` you edited earlier.\n\nUpload all files collected during the earlier builds, the complete list is:\n\n\n- `translations.zip`\n- `visualboyadvance-m-Win-x86_64.zip`\n- `visualboyadvance-m-Win-x86_64-debug.zip`\n- `visualboyadvance-m-Win-x86_32.zip`\n- `visualboyadvance-m-Win-x86_32-debug.zip`\n- `visualboyadvance-m-Win-arm64.zip`\n- 'visualboyadvance-m-Win-arm64-debug.zip'\n- `visualboyadvance-m-Mac-x86_64.zip`\n- `visualboyadvance-m-Mac-x86_64-debug.zip`\n\nUpdate the winsparkle `appcast.xml` by running this cmake command:\n\n```bash\ncmake .. -DUPDATE_APPCAST=TRUE\n```\n, follow the instructions to push the change to the web data repo.\n\nAnnounce the release on reddit r/emulation and the forum.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.0751953125,
          "content": "<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [Visual Boy Advance - M](#visual-boy-advance---m)\n  - [System Requirements](#system-requirements)\n  - [Building](#building)\n  - [Building a Libretro core](#building-a-libretro-core)\n  - [Visual Studio Support](#visual-studio-support)\n  - [Visual Studio Code Support](#visual-studio-code-support)\n  - [Dependencies](#dependencies)\n  - [Cross compiling for 32 bit on a 64 bit host](#cross-compiling-for-32-bit-on-a-64-bit-host)\n  - [Cross Compiling for Win32](#cross-compiling-for-win32)\n  - [CMake Options](#cmake-options)\n  - [MSys2 Notes](#msys2-notes)\n  - [Debug Messages](#debug-messages)\n  - [Reporting Crash Bugs](#reporting-crash-bugs)\n  - [Contributing](#contributing)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\nOur bridged Discord server is [Here](https://discord.gg/EpfxEuGMKH).\n\nWe are also on *`#vba-m`* on [Libera IRC](https://libera.chat/) which has a [Web\nChat](https://web.libera.chat/).\n\n[![Get it from flathub](https://dl.flathub.org/assets/badges/flathub-badge-en.svg)](https://flathub.org/apps/com.vba_m.visualboyadvance-m)\n[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/visualboyadvance-m)\n\n***Want to know where you can install visualboyadvance-m in your linux distribution?***\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/visualboyadvance-m.svg)](https://repology.org/project/visualboyadvance-m/versions)\n\n# Visual Boy Advance - M\n\nGame Boy and Game Boy Advance Emulator\n\nThe forums are [here](https://board.visualboyadvance-m.org/).\n\nWindows and Mac builds are in the [releases tab](https://github.com/visualboyadvance-m/visualboyadvance-m/releases).\n\nNightly builds for Windows and macOS are at [https://nightly.visualboyadvance-m.org/](https://nightly.visualboyadvance-m.org/).\n\n**PLEASE TEST THE NIGHTLY OR MASTER WITH A FACTORY RESET BEFORE REPORTING\nISSUES**\n\nYour distribution may have packages available as well, search for\n`visualboyadvance-m` or `vbam`.\n\nIt is also generally very easy to build from source, see below.\n\nIf you are using the windows binary release and you need localization, unzip\nthe `translations.zip` to the same directory as the executable.\n\nIf you are having issues, try resetting the config file first, go to `Help ->\nFactory Reset`.\n\n## System Requirements\n\nWindows XP, Vista, 7, 8.1 or 10/11, Linux distros or macOS.\n\n2Ghz x86 (or x86-64) Intel Core 2 or AMD Athlon processor with SSE, Snapdragon 835 \nor newer CPU compatible with Arm for Windows.\n\n- Just a guideline, lower clock speeds and Celeron processors may be able to run at full\nspeed on lower settings, and Linux based ARM Operating systems have wider CPU support.\n\nDirectX June 2010 Redist\n[Full](https://www.microsoft.com/en-au/download/details.aspx?id=8109) /\n[Websetup](https://www.microsoft.com/en-au/download/details.aspx?id=35) for\nXaudio (Remember to uncheck Bing on the websetup.)\n\n## Building\n\nThe basic formula to build vba-m is:\n\n```bash\ncd ~ && mkdir src && cd src\ngit clone https://github.com/visualboyadvance-m/visualboyadvance-m.git\ncd visualboyadvance-m\n\n./installdeps # On Linux or macOS\n\nmkdir build\ncd build\ncmake .. -DCMAKE_BUILD_TYPE=Release -G Ninja\nninja\n```\n\n`./installdeps` is supported on MSYS2, Linux (Debian/Ubuntu, Fedora, Arch,\nSolus, OpenSUSE, Gentoo and RHEL/CentOS) and Mac OS X (homebrew, MacPorts or\nFink.)\n\n## Building a Libretro core\n\nClone this repo and then,\n\n```bash\ncd src/libretro\nmake -j`nproc`\n```\n\nCopy `vbam_libretro.so` to your RetroArch cores directory.\n\n## Visual Studio Support\n\nFor visual studio, dependency management is handled automatically with vcpkg,\nFrom the Visual Studio GUI, just clone the repository with git and build with\nthe cmake configurations provided.\n\nIf the GUI does not detect cmake, go to `File -> Open -> CMake` and open the\n`CMakeLists.txt`.\n\nIf you are using 2017, make sure you have all the latest updates, some issues\nwith cmake projects in the GUI have been fixed.\n\nYou can also build from the developer command prompt or powershell with the\nenvironment loaded.\n\nUsing your own user-wide installation of vcpkg is supported, just make sure the\nenvironment variable `VCPKG_ROOT` is set.\n\nTo build in the Visual Studio `x64 Native Tools Command Prompt`, use something\nlike this:\n\n```\nmkdir build\ncd build\ncmake .. -DCMAKE_BUILD_TYPE=Release -G Ninja\nninja\n```\n.\n\n## Visual Studio Code Support\n\nMake sure the\n[C/C++](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)\nand [CMake\nTools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cmake-tools)\nextensions are installed.\n\nAdd the following to your `settings.json`:\n\n```json\n{\n    \"cmake.configureOnOpen\": true,\n    \"cmake.preferredGenerators\": [ \"Ninja\" ]\n}\n```\n.\n\n## Dependencies\n\nIf your OS is not supported, you will need the following:\n\n- C++ compiler and binutils\n- [make](https://en.wikipedia.org/wiki/Make_(software))\n- [CMake](https://cmake.org/)\n- [git](https://git-scm.com/)\n- [nasm](https://www.nasm.us/) (optional, for 32 bit builds)\n\nAnd the following development libraries:\n\n- [zlib](https://zlib.net/) (required)\n- [mesa](https://mesa3d.org/) (if using X11 or any OpenGL otherwise)\n- [ffmpeg](https://ffmpeg.org/) (optional, at least version `4.0.4`, for game recording)\n- [gettext](https://www.gnu.org/software/gettext/) and gettext-tools\n- [SDL2](https://www.libsdl.org/) (required)\n- [SFML](https://www.sfml-dev.org/) (optional, for link)\n- [openal-soft](https://kcat.strangesoft.net/openal.html) (required, a sound interface)\n- [wxWidgets](https://wxwidgets.org/) (required for GUI, 2.8 and non-stl builds are no longer supported)\n\nOn Linux and similar, you also need the version of GTK your wxWidgets is linked\nto (usually 2 or 3) and the xorg development libraries.\n\nSupport for more OSes/distributions for `./installdeps` is planned.\n\n## Cross compiling for 32 bit on a 64 bit host\n\n`./installdeps m32` will set things up to build a 32 bit binary.\n\nThis is supported on Fedora, Arch, Solus and MSYS2.\n\n## Cross Compiling for Win32\n\n`./installdeps` takes one optional parameter for cross-compiling target, which\nmay be `win32` which is an alias for `mingw-w64-i686` to target 32 bit Windows,\nor `mingw-w64-x86_64` for 64 bit Windows targets.\n\nThe target is implicit on MSYS2 depending on which MINGW shell you started (the\nvalue of `$MSYSTEM`.)\n\nOn Debian/Ubuntu this uses the MXE apt repository and works quite well.\n\n## CMake Options\n\nThe CMake code tries to guess reasonable defaults for options, but you can\noverride them, for example:\n\n```shell\ncmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_LINK=NO -G Ninja\n```\n. Here is the complete list:\n\n| **CMake Option**      | **What it Does**                                                     | **Defaults**          |\n|-----------------------|----------------------------------------------------------------------|-----------------------|\n| `ENABLE_SDL`            | Build the SDL port                                                   | OFF                   |\n| `ENABLE_WX`             | Build the wxWidgets port                                             | ON                    |\n| `ENABLE_DEBUGGER`       | Enable the debugger                                                  | ON                    |\n| `ENABLE_ASM_CORE`       | Enable x86 ASM CPU cores (**BUGGY AND DANGEROUS**)                   | OFF                   |\n| `ENABLE_ASM`            | Enable the following two ASM options                                 | ON for 32 bit builds  |\n| `ENABLE_ASM_SCALERS`    | Enable x86 ASM graphic filters                                       | ON for 32 bit builds  |\n| `ENABLE_MMX`            | Enable MMX                                                           | ON for 32 bit builds  |\n| `ENABLE_LINK`           | Enable GBA linking functionality (requires SFML)                     | AUTO                  |\n| `ENABLE_LIRC`           | Enable LIRC support                                                  | OFF                   |\n| `ENABLE_FFMPEG`         | Enable ffmpeg A/V recording                                          | AUTO                  |\n| `ENABLE_ONLINEUPDATES`  | Enable online update checks                                          | ON                    |\n| `ENABLE_LTO`            | Compile with Link Time Optimization (gcc and clang only)             | ON for release build  |\n| `ENABLE_GBA_LOGGING`    | Enable extended GBA logging                                          | ON                    |\n| `ENABLE_XAUDIO2`        | Enable xaudio2 sound output for wxWidgets (Windows only)             | ON                    |\n| `ENABLE_FAUDIO`         | Enable faudio sound output for wxWidgets,                            | ON, not 32 bit Win    |\n| `ENABLE_ASAN`           | Enable libasan sanitizers (by default address, only in debug mode)   | OFF                   |\n| `UPSTREAM_RELEASE`      | Do some release tasks, like codesigning, making zip and gpg sigs.    | OFF                   |\n| `BUILD_TESTING`         | Build the tests and enable ctest support.                            | ON                    |\n| `VBAM_STATIC`           | Try link all libs statically (the following are set to ON if ON)     | OFF                   |\n| `SDL2_STATIC`           | Try to link static SDL2 libraries                                    | OFF                   |\n| `SFML_STATIC_LIBRARIES` | Try to link static SFML libraries                                    | OFF                   |\n| `FFMPEG_STATIC`         | Try to link static ffmpeg libraries                                  | OFF                   |\n| `OPENAL_STATIC`         | Try to link static OpenAL libraries                                  | OFF                   |\n| `TRANSLATIONS_ONLY`     | Build only the translations.zip and nothing else                     | OFF                   |\n\nNote for distro packagers, we use the CMake module\n[GNUInstallDirs](https://cmake.org/cmake/help/v2.8.12/cmake.html#module:GNUInstallDirs)\nto configure installation directories.\n\nOn Unix to use a different version of wxWidgets, set\n`wxWidgets_CONFIG_EXECUTABLE` to the path to the `wx-config` script you want to\nuse.\n\n## Reporting Crash Bugs\n\nIf the emulator crashes and you wish to report the bug, a backtrace made with\ndebug symbols would be immensely helpful.\n\nTo generate one (on Linux and MSYS2) first build in debug mode by invoking\n`cmake` as:\n\n```shell\ncmake .. -DCMAKE_BUILD_TYPE=Debug\n```\n\nAfter you've reproduced the crash, you need the core dump file, you may need to\ndo something such as:\n\n```shell\nulimit -c unlimited\n```\n, in your shell to enable core files.\n\n[This\npost](https://ask.fedoraproject.org/en/question/98776/where-is-core-dump-located/?answer=98779#post-id-98779)\nexplains how to retrieve core dump on some distributions, when they are managed\nby systemd.\n\nOnce you have the core file, open it with `gdb`, for example:\n\n```shell\ngdb -c core ./visualboyadvance-m\n```\n. In the `gdb` shell, to start the process and print the backtrace, type:\n\n```\nrun\nbt\n```\n. This may be a bit of a hassle, but it helps us out immensely.\n\n## Contributing\n\nSee the [Developer Manual](/DEVELOPER-MANUAL.md).\n"
        },
        {
          "name": "cmake-variants.yaml",
          "type": "blob",
          "size": 1.01171875,
          "content": "buildType:\n  default: debug\n  choices:\n    debug:\n      short: Debug\n      long: Emit debug information\n      buildType: Debug\n    release:\n      short: Release\n      long: Optimize generated code\n      buildType: Release\n\nlinkage:\n  default: static\n  choices:\n    static:\n      short: Static\n      long: Create static libraries\n      linkage: static\n    shared:\n      short: Shared\n      long: Create shared libraries/DLLs\n      linkage: shared\n\nuseLink:\n  default: withlink\n  choices:\n    withlink:\n      short: WithLink\n      long: Enable the Link feature\n      settings:\n        ENABLE_LINK: ON\n    nolink:\n      short: NoLink\n      long: Disable the Link feature\n      settings:\n        ENABLE_LINK: OFF\n\nuseDebugger:\n  default: withdebugger\n  choices:\n    withdebugger:\n      short: WithDebugger\n      long: Enable the Debugger feature\n      settings:\n        ENABLE_DEBUGGER: ON\n    nodebugger:\n      short: NoDebugger\n      long: Disable the Debugger feature\n      settings:\n        ENABLE_DEBUGGER: OFF\n        ENABLE_SDL: OFF\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.8427734375,
          "content": "with import <nixpkgs> {};\nstdenv.mkDerivation {\n    name = \"visualboyadvance-m\";\n    buildInputs = if stdenv.isDarwin then\n        [ ninja cmake gcc nasm faudio gettext libintl pkg-config zip sfml zlib openal ffmpeg wxGTK32 SDL2 pcre pcre2 darwin.apple_sdk.frameworks.System darwin.apple_sdk.frameworks.IOKit darwin.apple_sdk.frameworks.Carbon darwin.apple_sdk.frameworks.Cocoa darwin.apple_sdk.frameworks.QuartzCore darwin.apple_sdk.frameworks.AudioToolbox darwin.apple_sdk.frameworks.OpenGL darwin.apple_sdk.frameworks.OpenAL llvmPackages_latest.clang llvmPackages_latest.bintools ]\n    else\n        [ ninja cmake gcc nasm faudio gettext libintl pkg-config zip sfml zlib openal ffmpeg wxGTK32 libGL libGLU glfw SDL2 gtk3-x11 pcre pcre2 util-linuxMinimal libselinux libsepol libthai libdatrie xorg.libXdmcp xorg.libXtst libxkbcommon epoxy dbus at-spi2-core ];\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "installdeps",
          "type": "blob",
          "size": 37.8359375,
          "content": "#!/bin/sh\n\nCMAKE=cmake\nENABLE_FFMPEG=1\n\nmain() {\n    cd \"$(dirname $0)\"\n\n    check_command_line_args \"$@\"\n\n    mktmp\n\n    check_os\n\n    ${os}_installdeps\n\n    quit 0\n}\n\ncheck_command_line_args() {\n    while [ $# -gt 0 ]; do\n        case \"$1\" in\n            -h|--help|--usage)\n                usage\n                quit 0\n                ;;\n            --no-ffmpeg)\n                ENABLE_FFMPEG=\n                shift\n                ;;\n            *)\n                target=$1\n                break\n                ;;\n        esac\n    done\n\n    if [ $# -gt 1 ]; then\n        usage\n        quit 1\n    fi\n}\n\ncheck_os() {\n    case \"$(uname -s)\" in\n        Linux)\n            os=linux\n            ;;\n        Darwin)\n            os=mac\n            ;;\n        FreeBSD)\n            os=freebsd\n            ;;\n        MINGW*|MSYS*)\n            os=windows\n            ;;\n        *)\n            error \"Don't know how to install deps on your OS\"\n            ;;\n    esac\n}\n\nmktmp() {\n    tmp=\"/tmp/installdeps_$$\"\n    mkdir \"$tmp\" || quit 1\n    chmod 700 \"$tmp\" 2>/dev/null\n    trap \"quit 1\" PIPE HUP INT QUIT ILL TRAP KILL BUS TERM\n}\n\nquit() {\n    [ -n \"$tmp\" ] && rm -rf \"$tmp\" 2>/dev/null\n    exit ${1:-0}\n}\n\nusage() {\n    cat <<'EOF'\nUsage: \u001b[32m./installdeps \u001b[1;35m[TARGET]\u001b[0m\n\nTry to install the dependencies needed for this project appropriately on the host OS.\n\nThis program may require \u001b[1;35msudo\u001b[0m.\n\nA cross-compile target may be specified as the only parameter, of either \u001b[1;35mm32\u001b[0m which targets the host in 32 bit mode (e.g. x86 on an amd64 host) or \u001b[1;35mwin32\u001b[0m, \u001b[1;35mMinGW-w64-i686\u001b[0m or \u001b[1;35mMinGW-w64-x86_64\u001b[0m.  \u001b[1;35mwin32\u001b[0m is an alias for \u001b[1;35mMinGW-w64-i686\u001b[0m to target Windows via MinGW.  Cross compiling for Windows is only supported on Debian/Ubuntu, Fedora, Arch Linux and MSYS2.\n\nOn MSYS2 the \u001b[1;35mMinGW-w64-clang-x86_64\u001b[0m target for CLANG64 and the \u001b[1;35mMinGW-w64-clang-i686\u001b[0m target for CLANG32 are also supported, as well as \u001b[1;35mMinGW-w64-ucrt-x86_64\u001b[0m for UCRT64.\n\nOn MSYS2 dependencies are installed for 32 or 64 bit native Windows targets based on which shell you started (the value of $MSYSTEM) unless you specify one or the other. You can specify a cross target of \u001b[1;35mm32\u001b[0m or \u001b[1;35mm64\u001b[0m as aliases for the 32 bit or 64 bit MinGW gcc targets respectively. MSYS2 POSIX layer builds are not supported.\n\n  \u001b[1m-h, --help, --usage\u001b[0m                Show this help screen and exit.\n  \u001b[1m--no-openal\u001b[0m                        Do not install OpenAL dependencies.\n  \u001b[1m--no-ffmpeg\u001b[0m                        Do not install ffmpeg dependencies.\n\nExamples:\n  \u001b[32m./installdeps\u001b[0m                        # install dependencies for a host build\n  \u001b[32m./installdeps \u001b[1;35mm32\u001b[0m                    # make a 32 bit binary for the host OS\n  \u001b[32m./installdeps \u001b[1;35mwin32\u001b[0m                  # cross-compile for 32 bit windows (Debian/Ubuntu, Arch Linux or MSYS2)\n  \u001b[32m./installdeps \u001b[1;35mMinGW-w64-i686\u001b[0m         # likewise\n  \u001b[32m./installdeps \u001b[1;35mwin64\u001b[0m                  # cross-compile for 64 bit windows (Debian/Ubuntu, Arch Linux or MSYS2)\n  \u001b[32m./installdeps \u001b[1;35mMinGW-w64-x86_64\u001b[0m       # likewise\nEOF\n}\n\nerror() {\n    printf '\\n\u001b[31mERROR\u001b[0m: %s.\\n\\n' \"$1\" >&2\n    [ -z \"$2\" ] && quit 1\n}\n\nwarning() {\n    [ -z \"$1\" ] && return 0\n    printf '\\n\u001b[35mWARNING\u001b[0m: %s.\\n\\n' \"$1\" >&2\n}\n\n\ninfo_msg() {\n    [ -z \"$1\" ] && return 0\n    printf '\\n\u001b[32mINFO\u001b[0m: %s.\\n\\n' \"$1\" >&2\n}\n\ninstalling() {\n    echo '\u001b[32mInstalling deps...\u001b[0m'\n    echo\n}\n\ncheck() {\n    \"$@\"\n    if [ $? -ne 0 ]; then\n        error 'command failed' NOQUIT\n        echo 'The failing command was:'\n        echo \"$@\"\n        quit 1\n    fi\n}\n\ncountdown() {\n    secs=$1\n    echo\n    while [ \"$secs\" -ne 0 ]; do\n        printf '%s\\r' \"Starting in $secs seconds...\"\n        sleep 1\n        secs=$((secs-1))\n    done\n    printf '\\n\\n'\n}\n\nlinux_installdeps() {\n    # detect host architecture\n    case \"$(uname -a)\" in\n        *x86_64*)\n            amd64=1\n            ;;\n        *i686*)\n            i686=1\n            ;;\n    esac\n\n    if [ -f /etc/debian_version ]; then\n        debian_installdeps\n    elif [ -f /etc/fedora-release ]; then\n        fedora_installdeps\n    elif [ -f /etc/redhat-release ] || [ -f /etc/centos-release ]; then\n        rhel_installdeps\n    elif [ -f /etc/solus-release ]; then\n        solus_installdeps\n    elif [ -f /etc/gentoo-release ]; then\n        gentoo_installdeps\n    elif [ -x /usr/bin/pacman ]; then\n        archlinux_installdeps\n    elif [ -f /etc/os-release ]; then\n        case \"$(. /etc/os-release; echo \"${ID_LIKE:-$ID}\")\" in\n            *suse*)\n                suse_installdeps\n                ;;\n            nixos)\n                nixos_installdeps\n                ;;\n            alpine)\n                alpine_installdeps\n                ;;\n            *)\n                error \"Don't know how to install deps on your version of Linux\"\n                ;;\n        esac\n    else\n        error \"Don't know how to install deps on your version of Linux\"\n    fi\n}\n\nfreebsd_installdeps() {\n    installing\n\n    check sudo pkg update\n\n    pkgs=\"llvm-devel cmake ccache nasm ffmpeg gettext-tools gettext pkgconf sdl2 sfml wx31-gtk3 iconv zip ninja\"\n\n    [ -n \"$ENABLE_FFMPEG\" ] && pkgs=\"$pkgs ffmpeg\"\n\n    # currently the wx30 and wx31 packages produce GTK errors on CURRENT (as of 04/2019)\n    check sudo pkg install -y $pkgs\n\n    build_instructions\n}\n\n# the -j flag for make parameter, empty if 1\njobs_flag() {\n    if [ $(num_cpus) -gt 1 ]; then\n        echo \"-j$(num_cpus)\"\n    fi\n}\n\n# number of CPUs to use for jobs, 1 less than total to not overload resources\nnum_cpus() {\n    if [ -n \"$_num_cpus\" ]; then\n        if [ $((_num_cpus - 1)) -lt 1 ]; then\n            echo 1\n        else\n            echo $((_num_cpus - 1))\n        fi\n        return 0\n    fi\n\n    # determine number of CPUs and cache it\n    if command -v nproc >/dev/null; then\n        _num_cpus=$(nproc)\n    elif [ $os = linux -o $os = windows ]; then\n        _num_cpus=$(grep '^processor\t\t*:' /proc/cpuinfo | wc -l)\n    elif [ $os = mac ] || [ $os = freebsd ]; then\n        _num_cpus=$(sysctl -n hw.ncpu)\n    fi\n\n    [ -z \"$_num_cpus\" ] && _num_cpus=1\n\n    num_cpus\n}\n\ncheck_cross() {\n    target=$(echo \"$target\" | tr 'A-Z' 'a-z')\n\n    if [ -z \"$target\" ]; then\n        if [ -n \"$msys2\" ]; then\n            case \"$MSYSTEM\" in\n                MINGW32)\n                    target='mingw-w64-i686'\n                    ;;\n                MINGW64)\n                    target='mingw-w64-x86_64'\n                    ;;\n                CLANG32)\n                    target='mingw-w64-clang-i686'\n                    ;;\n                CLANG64)\n                    target='mingw-w64-clang-x86_64'\n                    ;;\n                UCRT64)\n                    target='mingw-w64-ucrt-x86_64'\n                    ;;\n                MSYS)\n                    error 'host builds in MSYS mode are not supported, supply a target or start a MINGW shell'\n                    ;;\n                *)\n                    error 'unknown value for $MSYSTEM: '\"$MSYSTEM\"' '\n                    ;;\n            esac\n        else\n            return\n        fi\n    fi\n\n    case \"$target\" in\n        win32|win64|mingw*)\n            if [ -z \"$arch_linux\" -a -z \"$msys2\" -a -z \"$debian\" -a -z \"$fedora\" ]; then\n                error 'win32 cross compiling targets are only supported on Debian/Ubuntu, Fedora, Arch and MSYS2 at the moment'\n            fi\n\n            case \"$target\" in\n                win32)\n                    target='mingw-w64-i686'\n                    ;;\n                win64)\n                    target='mingw-w64-x86_64'\n                    ;;\n                mingw-w64-x86_64|mingw-w64-i686|mingw-w64-clang-x86_64|mingw-w64-ucrt-x86_64|mingw-w64-clang-i686)\n                    ;;\n                *)\n                    error \"target must be one of 'm32', 'win32', 'win64', or one of the MinGW/clang/ucrt targets supported by MSYS2: mingw-w64-[clang|ucrt]-(x86_64|i686).\"\n                    ;;\n            esac\n            ;;\n        m32|-m32)\n            target=m32\n            if [ -z \"$msys2\" -a -z \"$fedora\" -a -z \"$arch_linux\" -a -z \"$solus\" -a -z \"$suse\" ]; then\n                error '32 bit builds are only supported on Fedora, OpenSUSE, Arch, Solus and MSYS2 at the moment'\n            fi\n\n            if [ -n \"$msys2\" ]; then\n                target='mingw-w64-i686'\n            else\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-m32.cmake\"\n            fi\n            ;;\n        m64)\n            if [ -z \"$msys2\" ]; then\n                error '64 bit cross target only supported on MSYS2 at the moment'\n            fi\n            target='mingw-w64-x86_64'\n            ;;\n        *)\n            error \"unknown cross target: '$target' \"\n            ;;\n    esac\n}\n\ndebian_installdeps() {\n    debian=1\n    check_cross\n    installing\n\n    if [ -z \"$target\" ]; then\n        sudo apt-get -qq -y update\n\n        sfml_libs=\n\n        for lib in graphics window network; do\n            sfml_libs=\"$sfml_libs $(apt-cache search \"libsfml-$lib\" | sed 's/ - .*//' | sort -r | head -1)\"\n        done\n\n        glew_lib=$(apt-cache search libglew | grep '^libglew[0-9]' | sed 's/ - .*//' | sort -r | head -1)\n\n        sdl_lib=$(apt-cache search '^libsdl2-2.0' | sed 's/ - .*//' | sort -r | head -1)\n\n        # not present in trusty\n        if [ -n \"$ENABLE_FFMPEG\" ]; then\n            libswresample_dev=$(apt-cache search libswresample-dev | awk '{print $1}')\n        fi\n\n        wx_libs=$(apt-cache search 'libwxgtk[0-9]' | sed 's/ - .*//')\n\n        # Use -gtk3 variant on older distros.\n        case \"$wx_libs\" in\n            *-gtk3*)\n                new_wx_libs=\n                for pkg in $wx_libs; do\n                    case \"$pkg\" in\n                        *-gtk3*)\n                            new_wx_libs=\"$new_wx_libs $pkg\"\n                            ;;\n                    esac\n                done\n                wx_libs=$new_wx_libs\n                ;;\n        esac\n\n        pkgs=\"build-essential g++ nasm cmake ccache gettext zlib1g-dev libgl1-mesa-dev libgettextpo-dev libsdl2-dev $sdl_lib libglu1-mesa-dev libglu1-mesa libgles2-mesa-dev libsfml-dev $sfml_libs $glew_lib $wx_libs libgtk2.0-dev libgtk-3-dev ccache zip ninja-build libopenal-dev\"\n\n        [ -n \"$ENABLE_FFMPEG\" ] && pkgs=\"$pkgs libavcodec-dev libavformat-dev libswscale-dev libavutil-dev $libswresample_dev\"\n\n        check sudo apt-get -qy install $pkgs\n    else\n        case \"$target\" in\n            mingw-w64-i686)\n                target='i686-w64-mingw32.static'\n                CMAKE=\"/usr/lib/mxe/usr/bin/i686-w64-mingw32.static-cmake\"\n                ;;\n            mingw-w64-x86_64)\n                target='x86-64-w64-mingw32.static'\n                CMAKE=\"/usr/lib/mxe/usr/bin/x86_64-w64-mingw32.static-cmake\"\n                ;;\n            *)\n                error \"unknown cross target (you shouldn't see this)\"\n                ;;\n        esac\n\n        pre_build='export PATH=\"$PATH:/usr/lib/mxe/usr/bin\"'\n\n        debian_rel=$(lsb_release -a 2>/dev/null | sed -En 's/^Codename:[[:space:]]*//p')\n\n        case \"$debian_rel\" in\n            bionic|stretch|trusty|xenial)\n                ;;\n            yakkety|zesty|artful)\n                debian_rel=xenial\n                ;;\n            utopic|vivid|wily)\n                debian_rel=trusty\n                ;;\n            *)\n                debian_rel=bionic\n                ;;\n        esac\n\n        mxe_apt_sources=/etc/apt/sources.list.d/mxeapt.list\n\n        sudo apt-get -qq -y update\n\n        if [ -z \"$(apt-cache search '^mxe-source$')\" ]; then\n            if [ ! -f \"$mxe_apt_sources\" ]; then\n                echo \"deb http://pkg.mxe.cc/repos/apt $debian_rel main\" | sudo -- sh -c \"cat > $mxe_apt_sources\"\n                sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C6BF758A33A3A276 || :\n            else\n                error \"$mxe_apt_sources exists but mxe packages are not found in apt, either delete it or fix it\"\n            fi\n        fi\n\n        deps=\"gcc zlib ffmpeg gettext sdl2 sfml openal wxwidgets openal\"\n        [ -n \"$ENABLE_FFMPEG\" ] && deps=\"$deps ffmpeg\"\n\n        set --\n        for dep in $deps; do\n            set -- \"$@\" \"mxe-${target}-$dep\"\n        done\n        check sudo apt-get --allow-unauthenticated -qq -y update\n\n        # Native wx-common needed for wxrc executable.\n        check sudo apt-get --allow-unauthenticated -qy install build-essential cmake ninja-build ccache wx-common git \"$@\"\n\n        # The ccache symlink is broken in some versions of these mxe packages.\n        ccache_link=/usr/lib/mxe/.ccache/bin/ccache\n\n        if [ ! -e \"$ccache_link\" ]; then\n            sudo mkdir -p ${ccache_link%/*}\n            sudo ln -sf /usr/bin/ccache \"$ccache_link\"\n        fi\n\n        # get the necessary win32 headers\n        git submodule update --init --remote --recursive\n    fi\n\n    build_instructions\n}\n\nfedora_installdeps() {\n    fedora=1\n    ffmpeg=ffmpeg-devel\n    rpms_installed=\n\n    check_cross\n    installing\n\n    warning=\n\n    if [ -n \"$ENABLE_FFMPEG\" ]; then\n        # using --nogpgcheck with dnf because keys can be a problem on rawhide\n\n        fedora_release=$(rpm -E %fedora)\n        tries=3\n        curdir=$(pwd)\n\n        # make sure rpmfusion is installed for ffmpeg\n        while [ $tries -gt 0 ]; do\n            mkdir -p \"${tmp}/fusion\"\n            cd \"${tmp}/fusion\"\n            if ! curl -fLO https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-${fedora_release}.noarch.rpm; then\n                fedora_release=$((fedora_release - 1))\n                tries=$((tries - 1))\n                continue\n            fi\n            if ! curl -fLO https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-${fedora_release}.noarch.rpm; then\n                tries=0\n                break\n            fi\n            # check if already installed\n            if rpm -q rpmfusion-free-release-${fedora_release} >/dev/null 2>&1 && rpm -q rpmfusion-nonfree-release-${fedora_release} >/dev/null 2>&1; then\n                info_msg 'rpmfusion already installed, good'\n                break\n            fi\n            # otherwise try to install\n            if ! sudo rpm --nodeps -Uvh ./rpmfusion-*.rpm; then\n                tries=0\n                break\n            fi\n            break\n        done\n        cd \"$curdir\"\n        if [ $tries -eq 0 ]; then\n            warning 'installing rpmfusion repos failed, continuing without ffmpeg'\n            no_ffmpeg=1\n        fi\n    fi\n\n    # non-multiarch packages first\n    check sudo dnf -y --nogpgcheck --best --allowerasing install gcc gcc-c++ make cmake ccache git nasm redhat-rpm-config pkgconfig ccache ninja-build\n\n    # try to install multiarch libgcc, glibc-devel and pkgconfig if available\n    if [ -n \"$amd64\" ]; then\n        for pkg in pkgconfig libgcc glibc-devel; do\n            if [ \"$target\" = m32 ]; then\n                sudo dnf -y --nogpgcheck --best --allowerasing install \"$pkg\".i686\n            else\n                sudo dnf -y --nogpgcheck --best --allowerasing install \"$pkg\".x86_64\n            fi\n        done\n    fi\n\n    set --\n    if [ -z \"$target\" -o \"$target\" = m32 ]; then\n        # try to install both 64 bit and 32 bit versions on 64 bit hosts (see below)\n        if [ -n \"$amd64\" ]; then\n            # this is sometimes necessary for rawhide\n            set -- --exclude='glibc32*'\n        fi\n        for pkg in zlib-devel mesa-libGL-devel ffmpeg-devel gettext-devel SDL2-devel SFML-devel openal-soft-devel wxGTK-devel gtk3-devel; do\n            case $pkg in\n                *ffmpeg*)\n                    [ -z \"$ENABLE_FFMPEG\" ] && continue\n                    ;;\n            esac\n\n            pkg_arch=\n            if [ -n \"$amd64\" ]; then\n                pkg_arch=.x86_64\n\n                if [ \"$target\" = m32 ]; then\n                    pkg_arch=.i686\n                fi\n            fi\n\n            # Check which is newer, wxGTK or wxGTK3.\n            if [ \"$pkg\" = wxGTK-devel ]; then\n                pkg=$(dnf -q --releasever=$(rpm -E %fedora) --showduplicates list wxGTK-devel wxGTK3-devel 2>/dev/null | awk '{ print $1 \"\\t\" $2 }' | grep -Ev '^(Installed|Available)' | sort -rVu -k 2,2 | head -1 | awk '{ print $1 }' | sed -E 's/\\.[^.]+//')\n\n                [ -z \"$pkg\" ] && pkg=wxGTK3-devel\n            fi\n\n            set -- \"$@\" \"${pkg}${pkg_arch}\"\n        done\n\n        # fedora has a bug where all necessary -devel packages are not pulled in for 32 bit direct -devel deps\n        # this hack adds them to the list\n        if [ -n \"$amd64\" -a \"$target\" = m32 ]; then\n            info_msg 'Calculating dependencies, this will take a while..'\n            curdeps=\n            newdeps=$@\n            while [ \"$curdeps\" != \"$newdeps\" ]; do\n                curdeps=$newdeps\n                set -- $(echo \"$@\" $(sudo dnf -y --nogpgcheck repoquery --deplist \"$@\" 2>/dev/null | sed -n 's/\\.x86_64$/.i686/; s/^ *provider: *\\([^ ]*-devel-.*\\)$/\\1/p' | sort -u) | sed 's/  */\\n/g' | sort -u)\n                newdeps=$@\n                printf '%s' .\n            done\n\n            echo\n            info_msg 'Done'\n\n            ## install the RPMs with rpm --force get around file conflicts\n\n            host_rpms=$(echo \"$@\" | sed 's/\\.i686//g')\n\n            # first update the host arch versions to reduce chances of conflicts\n            check sudo dnf -y --nogpgcheck --allowerasing --best install $host_rpms\n\n            oldcwd=$PWD\n            mkdir \"$tmp/rpms\"\n            cd \"$tmp/rpms\"\n\n            check sudo dnf -y --nogpgcheck --allowerasing --best download \"$@\"\n\n            # first try installing with dnf to pull in deps\n            check sudo dnf -y --nogpgcheck --allowerasing --best --skip-broken install *.rpm\n\n            # follow up with rpm --force to ignore conflicts\n            check sudo rpm -Uvh --force *.rpm\n\n            rm -f *.rpm\n\n            # reinstall the host rpms to make sure any overwritten files are the host version\n            check sudo dnf -y --nogpgcheck --allowerasing --best download $host_rpms\n\n            check sudo dnf -y --nogpgcheck --allowerasing --best --skip-broken install *.rpm\n\n            check sudo rpm -Uvh --force *.rpm\n\n            cd \"$oldcwd\"\n            rm -rf \"$tmp/rpms\"\n\n            ffmpeg=ffmpeg-devel.i686\n\n            rpms_installed=1\n        fi\n    else # mingw build\n        set -- \"$@\" pkgconfig\n        case \"$target\" in\n            mingw-w64-i686)\n                target=mingw32\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-MinGW-w64-i686-static.cmake\"\n                ;;\n            mingw-w64-x86_64)\n                target=mingw64\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-MinGW-w64-x86_64-static.cmake\"\n                ;;\n            *)\n                error 'unknown cross target (this should not happen)'\n                ;;\n        esac\n        # install static deps\n        for pkg in zlib gettext SDL2 wxWidgets3 openal-soft; do\n            set -- \"$@\" \"${target}-${pkg}-static\"\n        done\n\n        # get the necessary win32 headers\n        git submodule update --init --remote --recursive\n\n        warning='SFML is required for LINK support, Fedora does not currently have a MinGW SFML package, if you want LINK support you will need to install it manually'\n    fi\n\n    [ -z \"$rpms_installed\" ] && check sudo dnf -y --nogpgcheck --best --allowerasing install \"$@\"\n\n    if [ -n \"$ENABLE_FFMPEG\" ] && ! rpm -q $ffmpeg >/dev/null 2>&1; then\n        warning 'ffmpeg failed to install (probably due to conflicts)'\n    fi\n\n    [ -n \"$warning\" ] && warning \"$warning\"\n\n    build_instructions\n}\n\nrhel_installdeps() {\n    rhel=1\n    ffmpeg=ffmpeg-devel\n    rpms_installed=\n\n    check_cross\n    installing\n\n    warning=\n\n    rhel_release=$(rpm -E %rhel)\n    tries=3\n    curdir=$(pwd)\n\n    # this source is necessary for mingw packages on rhel, and may be for other things in the future\n    check sudo yum -y install epel-release\n\n    # make sure rpmfusion is installed for ffmpeg\n    if [ -n \"$ENABLE_FFMPEG\" ]; then\n        while [ $tries -gt 0 ]; do\n            mkdir -p \"${tmp}/fusion\"\n            cd \"${tmp}/fusion\"\n            if ! curl -fLO https://download1.rpmfusion.org/free/el/rpmfusion-free-release-${rhel_release}.noarch.rpm; then\n                rhel_release=$((rhel_release - 1))\n                tries=$((tries - 1))\n                continue\n            fi\n            if ! curl -fLO https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-${rhel_release}.noarch.rpm; then\n                tries=0\n                break\n            fi\n            # check if already installed\n            if rpm -q rpmfusion-free-release-${rhel_release} >/dev/null 2>&1 && rpm -q rpmfusion-nonfree-release-${rhel_release} >/dev/null 2>&1; then\n                info_msg 'rpmfusion already installed, good'\n                break\n            fi\n            # otherwise try to install\n            if ! sudo rpm --nodeps -Uvh ./rpmfusion-*.rpm; then\n                tries=0\n                break\n            fi\n            break\n        done\n        cd \"$curdir\"\n        if [ $tries -eq 0 ]; then\n            warning 'installing rpmfusion repos failed, continuing without ffmpeg'\n        fi\n    fi\n\n    # non-multiarch packages first\n    CMAKE=cmake3\n    check sudo yum -y install gcc gcc-c++ make cmake3 ccache git nasm redhat-rpm-config pkgconfig ccache ninja-build\n\n    # try to install multiarch libgcc, glibc-devel and pkgconfig if available\n    if [ -n \"$amd64\" ]; then\n        for pkg in pkgconfig libgcc glibc-devel; do\n            if [ \"$target\" = m32 ]; then\n                sudo yum -y install \"$pkg\".i686\n            else\n                sudo yum -y install \"$pkg\".x86_64\n            fi\n        done\n    fi\n\n    set --\n    if [ -z \"$target\" -o \"$target\" = m32 ]; then\n        # try to install both 64 bit and 32 bit versions on 64 bit hosts (see below)\n        if [ -n \"$amd64\" ]; then\n            # this is sometimes necessary for rawhide\n            set -- --exclude='glibc32*'\n        fi\n\n        warning='RHEL does not currently have SFML packages, LINK support will be disabled'\n\n        for pkg in zlib-devel mesa-libGL-devel ffmpeg-devel gettext-devel SDL2-devel openal-soft-devel wxGTK3-devel gtk3-devel; do\n            case $pkg in\n                *ffmpeg*)\n                    [ -z \"$ENABLE_FFMPEG\" ] && continue\n                    ;;\n            esac\n\n            if [ -n \"$amd64\" ]; then\n                if [ \"$target\" = m32 ]; then\n                    set -- \"$@\" \"${pkg}.i686\"\n                else\n                    set -- \"$@\" \"${pkg}.x86_64\"\n                fi\n            else\n                set -- \"$@\" \"$pkg\"\n            fi\n        done\n\n        # redhat has a bug where all necessary -devel packages are not pulled in for 32 bit direct -devel deps\n        # this hack adds them to the list\n        if [ -n \"$amd64\" -a \"$target\" = m32 ]; then\n            info_msg 'Calculating dependencies, this will take a while..'\n            curdeps=\n            newdeps=$@\n            while [ \"$curdeps\" != \"$newdeps\" ]; do\n                curdeps=$newdeps\n                set -- $(echo \"$@\" $(repoquery --deplist \"$@\" 2>/dev/null | sed -n 's/\\.x86_64$/.i686/; s/^ *provider: *\\([^ ]*-devel-.*\\)$/\\1/p' | sort -u) | sed 's/  */\\n/g' | sort -u)\n                newdeps=$@\n                printf '%s' .\n            done\n\n            echo\n            info_msg 'Done'\n\n            ## install the RPMs with rpm --force get around file conflicts\n\n            host_rpms=$(echo \"$@\" | sed 's/\\.i686//g')\n\n            # first update the host arch versions to reduce chances of conflicts\n            check sudo yum -y install $host_rpms\n\n            oldcwd=$PWD\n            mkdir \"$tmp/rpms\"\n            cd \"$tmp/rpms\"\n\n            check sudo yum -y download \"$@\"\n\n            # first try installing with yum to pull in deps\n            check sudo yum -y --skip-broken install *.rpm\n\n            # follow up with rpm --force to ignore conflicts\n            check sudo rpm -Uvh --force *.rpm\n\n            rm -f *.rpm\n\n            # reinstall the host rpms to make sure any overwritten files are the host version\n            check sudo yum -y download $host_rpms\n\n            check sudo yum -y --skip-broken install *.rpm\n\n            check sudo rpm -Uvh --force *.rpm\n\n            cd \"$oldcwd\"\n            rm -rf \"$tmp/rpms\"\n\n            ffmpeg=ffmpeg-devel.i686\n\n            rpms_installed=1\n        fi\n    else # mingw build\n        set -- \"$@\" pkgconfig\n        case \"$target\" in\n            mingw-w64-i686)\n                target=mingw32\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-MinGW-w64-i686.cmake\"\n                ;;\n            mingw-w64-x86_64)\n                target=mingw64\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-MinGW-w64-x86_64.cmake\"\n                ;;\n            *)\n                error 'unknown cross target (this should not happen)'\n                ;;\n        esac\n        # install static deps\n        for pkg in zlib gettext SDL2 wxWidgets openal-soft; do\n            set -- \"$@\" \"${target}-${pkg}-static\"\n        done\n\n        # get the necessary win32 headers\n        git submodule update --init --remote --recursive\n\n        warning='SFML is required for LINK support, RHEL/EPEL does not currently have a MinGW SFML package, if you want LINK support you will need to install it manually'\n    fi\n\n    [ -z \"$rpms_installed\" ] && check sudo yum -y install \"$@\"\n\n    if [ -n \"$ENABLE_FFMPEG\" ] && ! rpm -q $ffmpeg >/dev/null 2>&1; then\n        warning 'ffmpeg failed to install (probably due to conflicts)'\n    fi\n\n    [ -n \"$warning\" ] && warning \"$warning\"\n\n    build_instructions\n}\n\nsuse_installdeps() {\n    suse=1\n    check_cross\n    installing\n\n    tools=\"make cmake ccache nasm gettext-tools pkg-config ccache zip sfml2-devel ninja\"\n\n    libs=\"gcc gcc-c++ libSDL2-devel wxWidgets-3_0-devel openal-soft-devel\" # ffmpeg-devel\n\n    # ffmpeg requires packman repos\n\n    if [ \"$target\" = m32 ]; then\n        libs=$(echo \"$libs\" | sed -E 's/([^ ]) ([^ ])/\\1-32bit \\2/g; s/$/-32bit/;')\n    fi\n\n    check sudo zypper in -y $tools $libs\n\n    build_instructions\n}\n\nnixos_installdeps() {\n    nixos=1\n\n    cat <<EOF\n\n\u001b[32mTo build run:\u001b[0m\n\nnix-shell --command 'mkdir build; cd build; $CMAKE .. $cmake_flags -G Ninja; ninja'\n\nEOF\n}\n\narchlinux_require_yaourt() {\n    if ! command -v yaourt >/dev/null; then\n        (\n            cd \"$tmp\"\n            git clone https://aur.archlinux.org/package-query.git\n            cd package-query\n            makepkg --noconfirm -si\n            cd ..\n            git clone https://aur.archlinux.org/yaourt.git\n            cd yaourt\n            makepkg --noconfirm -si\n        )\n        [ $? -ne 0 ] && error 'could not install yaourt'\n    fi\n    pacman='yaourt --aur --m-arg=--skipinteg'\n}\n\narchlinux_installdeps() {\n    arch_linux=1\n\n    pacman='sudo pacman'\n    command -v pacaur >/dev/null && pacman='pacaur --noedit'\n    command -v yaourt >/dev/null && pacman='yaourt --aur --m-arg=--skipinteg'\n\n    check_cross\n    installing\n\n    # check for gcc-multilib\n    gcc_pkg=gcc\n    if $pacman -Q gcc-multilib >/dev/null 2>&1; then\n        gcc_pkg=gcc-multilib\n    fi\n\n    # update catalogs\n    check $pacman -Sy\n\n    # common needed dev packages\n    # not using the base-devel group because it can break gcc-multilib\n    check $pacman --noconfirm --needed -S binutils file grep gawk gzip libtool make patch sed util-linux nasm cmake ccache pkg-config git ccache zip ninja\n\n    gtk=gtk3\n\n    $pacman -Q gtk3-classic >/dev/null 2>&1 && gtk=gtk3-classic\n\n    libs=\"zlib mesa gettext sdl2 wxgtk3 $gtk sfml openal\"\n\n    [ -n \"$ENABLE_FFMPEG\" ] && libs=\"$libs ffmpeg\"\n\n    if [ -z \"$target\" -o \"$target\" = m32 ]; then\n        if [ -z \"$target\" -o -z \"$amd64\" ]; then\n            # Native build.\n            #\n            # On newer versions wxgtk2 may have to be manually removed.\n            if ! $pacman --noconfirm --needed -S \"$gcc_pkg\" $libs; then\n                $pacman --noconfirm -R wxgtk2\n            fi\n            $pacman --noconfirm --needed -S \"$gcc_pkg\" $libs\n        else\n            # try to build 32 bit binaries\n\n            # lib32-sfml and lib32-ffmpeg are in AUR\n            archlinux_require_yaourt\n\n            # enable multilib repos if not enabled\n            cp /etc/pacman.conf ${tmp}/pacman.conf\n            cat <<'EOF' >> ${tmp}/pacman.conf\n[multilib-testing]\nInclude = /etc/pacman.d/mirrorlist\n[multilib]\nInclude = /etc/pacman.d/mirrorlist\nEOF\n            pacman=\"$pacman --config ${tmp}/pacman.conf\"\n\n            # pull in multilib repo info\n            $pacman -Sy\n\n            yes | check $pacman --needed -S gcc-multilib\n\n            libs32=\n            for lib in $libs; do\n                libs32=\"$libs32 lib32-$lib\"\n            done\n\n            check $pacman --noconfirm --needed -S $libs32\n        fi\n    else\n        # windows cross build\n        case \"$target\" in\n            *i686*)\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-MinGW-w64-i686.cmake\"\n                ;;\n            *x86_64*)\n                cmake_flags=\"$cmake_flags -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-MinGW-w64-x86_64.cmake\"\n                ;;\n            *)\n                # this will never be reached, it's checked in check_cross()\n                error 'unknown cross target (you should not see this)'\n                ;;\n        esac\n\n        check $pacman --noconfirm --needed -S \"$gcc_pkg\"\n\n        archlinux_require_yaourt\n\n        pkg_prefix='mingw-w64-'\n\n        # cross toolchain (without headers and crt, we'll use -git versions)\n        set --\n        for p in binutils gcc winpthreads; do\n            set -- \"$@\" \"${pkg_prefix}${p}\"\n        done\n        check $pacman --noconfirm --needed -S \"$@\"\n\n        # build library deps from AUR\n\n        info_msg 'We will now build dependencies from AUR, this will take quite a while and has a high probability of failure. In fact, it is definitely broken at the time of this writing. Press CTRL-C now to abort'\n\n        countdown 16\n\n        # pass appropriate make -jX flag through makepkg\n        export MAKEPKG_CONF=${MAKEPKG_CONF:-/etc/makepkg.conf}\n\n        grep -Ev '^[ \t]*MAKEFLAGS=' \"$MAKEPKG_CONF\" > \"$tmp/makepkg.conf\"\n\n        export MAKEFLAGS=$(jobs_flag)\n        echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> \"$tmp/makepkg.conf\"\n\n        export MAKEPKG_CONF=\"$tmp/makepkg.conf\"\n\n        # now do the AUR builds\n\n        # first we need -headers-git and -crt-git (unless the non-git packages are installed)\n        for p in \"${pkg_prefix}headers\" \"${pkg_prefix}crt\"; do\n          if ! $pacman -Q \"$p\" >/dev/null 2>&1; then\n              check $pacman --noconfirm --needed -S \"${p}-git\"\n          else\n              warning \"${pkg_prefix}headers-git and ${pkg_prefix}crt-git are recommended over the regular versions, if you have build failures try to install them\"\n          fi\n        done\n\n        deps=\"zlib gettext pkg-config sdl2 wxmsw openal\"\n\n        # and the actual deps\n        for p in $deps; do\n            pkg=\"${pkg_prefix}${p}\"\n            # check if already installed\n            if ! $pacman -Q \"$pkg\" >/dev/null 2>&1; then\n                set -- \"$@\" \"${pkg_prefix}${p}\"\n            fi\n        done\n        [ $# -gt 0 ] && check $pacman --noconfirm --needed -S \"$@\"\n\n        # get the necessary win32 headers\n        git submodule update --init --remote --recursive\n\n        warning 'SFML is required for LINK support, the SFML package in AUR is currently broken, if you want LINK support you will need to install it manually'\n    fi\n\n    build_instructions\n}\n\nsolus_installdeps() {\n    solus=1\n\n    check_cross\n    installing\n\n    check sudo eopkg -y update-repo\n    check sudo eopkg -y install -c system.devel\n    check sudo eopkg -y install git ccache ninja\n\n    set -- sdl2-devel wxwidgets-devel libgtk-2-devel libgtk-3-devel libglu-devel openal-soft-devel\n\n    if [ -n \"$amd64\" -a \"$target\" = m32 ]; then\n        info_msg 'Calculating dependencies, this will take a while..'\n\n        # first expand all dep lists recursively for -devel packages\n        curdeps=\n        newdeps=$@\n        while [ \"$curdeps\" != \"$newdeps\" ]; do\n            curdeps=$newdeps\n            set -- $(echo \"$@\" $(sudo eopkg info \"$@\" 2>/dev/null | sed -n 's/^Dependencies  *:  *\\(.*\\)/\\1/p' | sort -u) | sed 's/  */\\n/g' | grep -- '-devel$' | sort -u)\n            newdeps=$@\n        done\n\n        # transform to 32bit package names\n        first=1\n        for pkg in \"$@\"; do\n            if [ \"$first\" = 1 ]; then\n                set --\n                first=0\n            fi\n            case \"$pkg\" in\n                *-32bit-devel)\n                    # already 32 bit\n                    ;;\n                *-devel)\n                    set -- \"$@\" \"${pkg%-devel}-32bit-devel\"\n                    ;;\n                *)\n                    set -- \"$@\" \"$pkg\"\n                    ;;\n            esac\n        done\n\n        # prune the ones that don't exist\n        first=1\n        for pkg in \"$@\"; do\n            if [ \"$first\" = 1 ]; then\n                set --\n                first=0\n            fi\n            if ! sudo eopkg info \"$pkg\" | grep -q 'not found in binary repositories'; then\n                set -- \"$@\" \"$pkg\"\n            fi\n        done\n    else\n        # no 32bit versions of these\n        set -- \"$@\" SFML-devel ffmpeg-devel\n    fi\n\n    check sudo eopkg -y install \"$@\"\n\n    if [ -n \"$amd64\" -a \"$target\" = m32 ]; then\n        warning 'SFML is required for LINK support, there is no 32 bit SFML package in Solus currently, if you want LINK support you will need to install it manually'\n        warning 'ffmpeg is required for game recording, there is no 32 bit ffmpeg package in Solus currently, you may wish to install it manually'\n    fi\n\n    build_instructions\n}\n\ngentoo_installdeps() {\n    installing\n\n    check sudo emerge-webrsync\n\n    # We want the gtk3 slot for wxWidgets.\n    wx_slot=$(equery -qC list -p -F '$slot' x11-libs/wxGTK | grep gtk3 | sort -rV | head -1)\n\n    ebuilds=\"\\\n      sys-devel/gcc \\\n      dev-build/make \\\n      dev-build/cmake \\\n      dev-util/ccache \\\n      sys-devel/binutils \\\n      media-libs/libsdl2 \\\n      media-libs/libsfml \\\n      media-libs/openal \\\n      x11-libs/wxGTK:$wx_slot \\\n      sys-libs/zlib \\\n      dev-util/pkgconf \\\n      dev-lang/nasm \\\n      dev-build/ninja\"\n\n    [ -n \"$ENABLE_FFMPEG\" ] && ebuilds=\"$ebuilds media-video/ffmpeg\"\n\n    check sudo emerge -vna $ebuilds\n\n    build_instructions\n}\n\nalpine_installdeps() {\n    installing\n\n    check sudo apk add cmake ninja g++ ccache nasm gettext-dev zlib-dev mesa-dev sdl2-dev glu-dev sfml-dev wxwidgets-dev gtk+3.0-dev zip\n\n    build_instructions\n}\n\n\nwindows_installdeps() {\n    msys2=1\n\n    check_cross\n    installing\n\n    # update catalogs\n    check pacman -Sy\n\n    pkgs=\n\n    case \"$target\" in\n        *clang*)\n            pkgs=\"lldb clang\"\n            ;;\n        *)\n            pkgs=\"gcc gcc-libs gcc-libgfortran\"\n            ;;\n    esac\n\n    case \"$target\" in\n        *i686*)\n            pkgs=\"$pkgs nasm\"\n            ;;\n        *)\n            pkgs=\"$pkgs FAudio\"\n            ;;\n    esac\n\n    pkgs=\"$pkgs SDL2 sfml wxWidgets3.2 zlib binutils cmake crt-git headers-git make pkgconf tools-git windows-default-manifest libmangle-git ninja gdb ccache openal\"\n\n    case \"$target\" in\n        *x86_64)\n            pkgs=\"$pkgs extra-cmake-modules\"\n            ;;\n    esac\n\n    [ -n \"$ENABLE_FFMPEG\" ] && pkgs=\"$pkgs ffmpeg\"\n\n    set --\n    for p in $pkgs; do\n        set -- \"$@\" \"${target}-${p}\"\n    done\n\n    case \"$target\" in\n        *clang*)\n            # We use gcc windres for now, llvm-rc is sometimes broken.\n            set -- \"$@\" mingw-w64-x86_64-binutils\n        ;;\n    esac\n\n    # install\n    check pacman --noconfirm --needed -S git make zip \"$@\"\n\n    # get the necessary win32 headers\n    check git submodule update --init --remote --recursive\n\n    if [ \"$MSYSTEM\" = MSYS ]; then\n        case \"$target\" in\n            *i686)\n                pre_build=\\\n\"MSYSTEM=MINGW32 bash -l\ncd $(pwd)\"\n                ;;\n            *x86_64)\n                pre_build=\\\n\"MSYSTEM=MINGW64 bash -l\ncd $(pwd)\"\n                ;;\n        esac\n        post_build=exit\n    fi\n\n    build_instructions\n}\n\nmac_installdeps() {\n    if ! xcode-select -p >/dev/null 2>&1 && \\\n       ! pkgutil --pkg-info=com.apple.pkg.CLTools_Executables >/dev/null 2>&1 && \\\n       ! pkgutil --pkg-info=com.apple.pkg.DeveloperToolsCLI >/dev/null 2>&1; then\n\n        error 'Please install XCode and the XCode Command Line Tools, then run this script again. On newer systems this can be done with: xcode-select --install   '\n    fi\n\n    if command -v brew >/dev/null; then\n        brew_installdeps\n    elif command -v port >/dev/null; then\n        macports_installdeps\n    elif command -v fink >/dev/null; then\n        fink_installdeps\n    else\n        error 'You have no package manager, please install homebrew, macports or fink'\n    fi\n}\n\nbrew_installdeps() {\n    check_cross\n    installing\n\n    check brew -v update\n\n    brews=\"nasm cmake ccache gettext pkg-config sdl2 wxwidgets faudio ccache ninja zlib\"\n\n    [ -n \"$ENABLE_FFMPEG\" ] && brews=\"$brews ffmpeg\"\n\n    # sfml brew currently broken in the travis mac environment\n#    if [ -z \"$TRAVIS\" ]; then\n        brews=\"$brews sfml\"\n#    fi\n\n    # This is necessary for the GitHub Actions CI:\n    brew -v install python\n    brew link --overwrite python\n\n    check brew -v install -f $brews\n\n    for brew in gettext wxwidgets; do\n        brew unlink $brew\n        brew link   $brew --force\n    done\n\n    brew -v cleanup\n\n    build_instructions\n}\n\nmacports_installdeps() {\n    check_cross\n    installing\n\n    check sudo port -v selfupdate\n\n    ports=\"cmake ccache nasm gettext pkgconfig libsdl2 sfml wxWidgets-3.0 libiconv ninja\"\n\n    [ -n \"$ENABLE_FFMPEG\" ] && ports=\"$ports ffmpeg\"\n\n    check sudo port -v install $ports\n    check sudo port select wxWidgets wxWidgets-3.0\n\n    build_instructions\n}\n\nfink_installdeps() {\n    check_cross\n    installing\n\n    check sudo fink -vy selfupdate\n\n    pkgs=\"cmake ccache nasm libgettext8-dev gettext-tools pkgconfig sdl2 wxwidgets300-osxcocoa libiconv-dev sfml24-dev ccache ninja\"\n\n    [ -n \"$ENABLE_FFMPEG\" ] && pkgs=\"$pkgs ffmpeg\"\n\n    check sudo fink -vy install $pkgs\n\n    build_instructions\n}\n\nbuild_instructions() {\n    cat <<EOF\n\n\u001b[32mDone! To build do:\u001b[0m\n\n$pre_build\nmkdir build && cd build\n$CMAKE .. -DCMAKE_BUILD_TYPE=Release $cmake_flags -G Ninja\nninja\n$post_build\n\nEOF\n}\n\nmain \"$@\"\n\n# vim:et sw=4:\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "snapcraft.yaml",
          "type": "blob",
          "size": 1.796875,
          "content": "name: visualboyadvance-m\nsummary: Nintendo Game Boy Advance Emulator\ndescription: |\n  An open-source Nintendo Game Boy, Super Game Boy, Game Boy Advance Emulators.\n\nadopt-info: vbam\ngrade: devel\nconfinement: strict\nbase: core22\nparts:\n  vbam:\n    source: https://github.com/visualboyadvance-m/visualboyadvance-m.git\n    override-pull: |\n      snapcraftctl pull\n      last_commit=\"$(git describe | sed 's/^v//; s/-.*-/-/')\"\n      snapcraftctl set-version \"${last_commit}\"\n      sed -i.bak -e 's|Icon=visualboyadvance-m|Icon=/usr/share/icons/hicolor/scalable/apps/visualboyadvance-m.svg|g' src/wx/visualboyadvance-m.desktop\n    plugin: cmake\n    cmake-generator: Ninja\n    stage-packages:\n      - libsdl2-2.0-0\n      - libsfml-network2.5\n      - libsfml-system2.5\n      - libnotify4\n      - libsm6\n      - libopenal1\n      - libpng16-16\n      - libpulse0\n      - zlib1g\n      - libgtk-3-0\n      - libgl1\n      - libglvnd0\n      - libglx0\n      - libopengl0\n      - libwxgtk3.0-gtk3-0v5\n\n    build-packages:\n      - g++\n      - gcc\n      - gettext\n      - make\n      - cmake\n      - nasm\n      - pkg-config\n      - git\n      - zip\n      - libnotify-dev\n      - libsdl2-dev\n      - libsfml-dev\n      - libgtk-3-dev\n      - libopenal-dev\n      - libwxgtk3.0-gtk3-dev\n    cmake-parameters:\n      - -DENABLE_SDL=OFF\n      - -DCMAKE_INSTALL_PREFIX=/usr\n\napps:\n  visualboyadvance-m:\n    plugs:\n      - desktop\n      - desktop-legacy\n      - audio-playback\n      - opengl\n      - joystick\n      - raw-usb\n      - screen-inhibit-control\n      - home\n      - removable-media\n      - network\n      - wayland\n      - x11\n    command: usr/bin/visualboyadvance-m\n    desktop: usr/share/applications/visualboyadvance-m.desktop\n    extensions: [gnome]\n    environment:\n      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "todo.md",
          "type": "blob",
          "size": 2.525390625,
          "content": "# The Visualboyadvance-M todo list for those that care\n\n- [x] remove silly type defs, Come on... It's 2016\n- [ ] Fix the updater in the wxwidgets interface, some people have been reporting issues of timing out with not internet.\n- [ ] Fix the libretro interface\n- [ ] Next will be removing the majority of the interface code and going straight libretro (Will make it easier to maintain one interface that's platform independent.\n- [ ] add OnSize handler for GLDrawingPanel in wx back to reset the GL viewport, and set viewport on init as well\n- [x] fix wx accels that are a game key with a modifier, e.g. ALT+ENTER when ENTER is a game key \n- [ ] add an option to the video config dialog to choose native or non-native fullscreen for Mac (and check if the OS supports it)\n- [ ] fix SFML cmake stuff so that static linking works on Mac\n- [ ] update FindSDL2.cmake to use sdl2-config if available and pkg-config is not, get PR merged upstream\n- [ ] optimize all options defaults for modern hardware\n- [ ] fix filter options in wx to apply to both fullscreen and window mode\n- [ ] update homebrew wxmac formula to also make static libs, this will allow static linking of wx, not really as necessary anymore but would still be nice\n- [ ] submit Mac homebrew formula, and make sure everything for \"make install\" works on Mac\n- [ ] update Mac .app plist stuffs\n- [ ] make full set of quality icons\n- [ ] update cmake code to allow building fully-redistributable binaries with msys2 on windows, possibly with an installer\n- [ ] write a ./quickbuild script that installs all deps and builds the project, for mac, msys2, and some linux dists\n- [ ] use SDL2 input introspection to automatically create a sane set of default control bindings\n- [ ] fix the literally hundreds of fucking warnings, and start using -Wall\n- [ ] set up automatic builds for all platforms\n- [ ] see what code we can steal from other emu folks, e.g. filters etc.\n- [ ] update config handling, to switch to XDG on linux etc.\n- [ ] add simple 'mute audio' option for wx interface\n- [ ] HiDPI support on Windows\n- [ ] ./installdeps for more platforms\n- [ ] console-mode Wx app on Windows in debug mode\n- [ ] fix keyboard game input on msys2 builds\n- [ ] fix the -D\\*DIR defines to have the correct paths on various platforms\n\n# Coding Guidelines (for those that want to help out and send a pull request.)\n\nCoding guidelines, well I've switched to webkit's style meaning we use spaces and not hard tabs\nC has 8 spaces to an indent and c++ 4 spaces for an indent as well. This makes for cleaner code to read and to maintain. \n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "win32-deps",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}