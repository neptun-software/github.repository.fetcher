{
  "metadata": {
    "timestamp": 1736565839422,
    "page": 779,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kuroni/bongocat-osu",
      "stars": 2161,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.052734375,
          "content": "*.res\n*.exe\n*.o\nMakefile\nbongo\nbin/*\nNOTE\nconfig.json\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "MIT License\n\nCopyright (c) 2018 Đặng Đoàn Đức Trung\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile.linux",
          "type": "blob",
          "size": 0.5615234375,
          "content": "CXX := g++\nSRCDIR := src\nOBJDIR := obj\nICODIR := ico\nSRC := $(wildcard $(SRCDIR)/*.cpp)\nOBJ := $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SRC))\nCXXFLAGS := -std=c++17 -O2\nLDFLAGS := -lxdo -lsfml-graphics -lsfml-window -lsfml-system -lSDL2 -lX11 -lXrandr\nINCFLAGS := -Iinclude\n\n.PHONY: test create clean\n\nall: create bin/bongo\n\nbin/bongo: $(OBJ)\n\t$(CXX) -o $@ $^ $(INCFLAGS) $(CXXFLAGS) $(LDFLAGS)\n\n$(OBJDIR)/%.o: $(SRCDIR)/%.cpp\n\t$(CXX) -c -o $@ $^ $(INCFLAGS) $(CXXFLAGS) $(LDFLAGS)\n\ncreate:\n\tmkdir -p $(OBJDIR)\n\tmkdir -p bin\n\ntest:\n\tbin/bongo\n\nclean:\n\trm $(OBJ) || true\n\n"
        },
        {
          "name": "Makefile.windows",
          "type": "blob",
          "size": 0.9267578125,
          "content": "SRCDIR := src\nOBJDIR := obj\nICODIR := ico\nSRC := $(wildcard $(SRCDIR)/*.cpp)\nOBJ := $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SRC))\nICO := $(ICODIR)/ico.res\nCXXFLAGS := -std=c++17 -s -O2 -mwindows\nLDFLAGS := -lsfml-graphics-s -lsfml-window-s -lsfml-system-s -lopengl32 -lfreetype -lwinmm -lgdi32 -static-libgcc -static-libstdc++ -Wl,-Bstatic -lstdc++ -lpthread -Wl,-Bdynamic\nINCFLAGS := -I<SFML-folder>/include -Iinclude\nLIBFLAGS := -L<SFML-folder>/lib\nDEFINES := -DSFML_STATIC\n\n.PHONY: test create clean\n\nall: create bin/bongo.exe\n\nbin/bongo.exe: $(OBJ) $(ICO)\n\t$(CXX) -o $@ $^ $(DEFINES) $(INCFLAGS) $(LIBFLAGS) $(CXXFLAGS) $(LDFLAGS)\n\n$(OBJDIR)/%.o: $(SRCDIR)/%.cpp\n\t$(CXX) -c -o $@ $^ $(DEFINES) $(INCFLAGS) $(LIBFLAGS) $(CXXFLAGS) $(LDFLAGS)\n\n$(ICODIR)/ico.res: $(ICODIR)/ico.rc\n\twindres -O coff -o $@ $^\n\ncreate:\n\tmkdir $(OBJDIR) && exit 0\n\tmkdir bin && exit 0\n\ntest:\n\tbin/bongo.exe\n\nclean:\n\tdel $(OBJ) && exit 0\n\tdel ico/ico.res && exit 0\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.51171875,
          "content": "# Description\nAn osu! Bongo Cat overlay with smooth paw movement and simple skinning ability, written in C++. Originally created by [HamishDuncanson](https://github.com/HamishDuncanson).\n\nYou can find how to configure the application in our [wiki](https://github.com/kuroni/bongocat-osu/wiki/Settings).\n\nDownload the program [here](https://github.com/kuroni/bongocat-osu/releases).\n\nHugs and kisses to [CSaratakij](https://github.com/CSaratakij) for creating the Linux port for this project!\n\nAny suggestion and/or collaboration, especially that relating to sprites, is welcomed! Thank you!\n\n[Original post](https://www.reddit.com/r/osugame/comments/9hrkte/i_know_bongo_cat_is_getting_old_but_heres_a_nicer/) by [Kuvster](https://github.com/Kuvster).\n\n## Further information\nIn order to play with fullscreen on Windows 10, run both osu! and this application in Windows 7 compability mode.\n\nPress Ctrl + R to reload configuration and images (will only reload configurations when the window is focused).\n\nSupported operating system:\n* Windows\n* Linux (tested with Arch Linux with WINE Staging 5). Note: You **must** use WINE Staging, because for whatever reason on stable WINE bongocat-osu doesn't register keyboard input from other windows.\n\n_Notice_: If you're using WINE on Linux, make sure that osu! and this application run in the same `WINEPREFIX`.\n\n## For developers\nThis project uses [SFML](https://www.sfml-dev.org/index.php) and [JsonCpp](https://github.com/open-source-parsers/jsoncpp). JsonCpp libraries are directly included in the source using the provided `amalgamation.py` from the developers.\n\n### Libraries and dependency\n\n#### Windows and MinGW\nTo build the source, download the SFML libraries [here](https://www.sfml-dev.org/index.php), copy `Makefile.windows` to `Makefile`, then replace *`<SFML-folder>`* in `Makefile` with the desired folder.\n\n#### Linux\nYou need to have these dependencies installed. Check with your package manager for the exact name of these dependencies on your distro:\n- g++\n- libxdo\n- sdl2\n- sfml\n- x11\n- xrandr\n\nThen, copy `Makefile.linux` to `Makefile`.\n\n### Building and testing\nTo build, run this command from the base directory:\n\n```sh\nmake\n```\n\nTo test the program, run this from the base directory:\n\n```sh\nmake test\n```\n\nAlternatively, you can copy the newly-compiled `bin/bongo.exe` or `bin/bongo` into the base directory and execute it.\n\nIf you have troubles compiling, it can be due to version mismatch between your compiler and SFML. See [#43](https://github.com/kuroni/bongocat-osu/issues/43) for more information.\n\n"
        },
        {
          "name": "font",
          "type": "tree",
          "content": null
        },
        {
          "name": "ico",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}