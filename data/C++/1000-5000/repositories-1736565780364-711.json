{
  "metadata": {
    "timestamp": 1736565780364,
    "page": 711,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "isledecomp/isle",
      "stars": 2284,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.8603515625,
          "content": "BasedOnStyle: Microsoft\n\nAccessModifierOffset: -4\nAlignAfterOpenBracket: BlockIndent\nAllowAllArgumentsOnNextLine: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortFunctionsOnASingleLine: InlineOnly\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBracedInitializerIndentWidth: 4\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: Never\n  AfterEnum: false\n  AfterStruct: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nEmptyLineBeforeAccessModifier: Always\nIncludeBlocks: Regroup\nIndentAccessModifiers: false\nIndentWidth: 4\nInsertBraces: true\nInsertNewlineAtEOF: true\nPointerAlignment: Left\nQualifierAlignment: Custom\nQualifierOrder:\n  - inline\n  - static\n  - friend\n  - const\n  - volatile\n  - type\nRemoveSemicolon: true\nSpaceAfterCStyleCast: true\nTabWidth: 4\nUseTab: ForContinuationAndIndentation\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.1875,
          "content": "Checks: >\n  -*,\n  readability-redundant-inline-specifier,\n  modernize-use-override\nWarningsAsErrors: '-*,readability-redundant-inline-specifier,modernize-use-override'\nHeaderFilterRegex: \".*\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.294921875,
          "content": "root = true\r\n\r\n[*.{py,txt,editorconfig}]\r\nindent_style = space\r\nindent_size = 4\r\ninsert_final_newline = true\r\ntrim_trailing_whitespace = true\r\n\r\n[*.{cpp,h}]\r\nindent_style = tab\r\ntab_width = 4\r\ninsert_final_newline = true\r\ntrim_trailing_whitespace = true\r\n\r\n[{CMakeLists.txt,*.cmake}]\r\nindent_size = 2\r\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1865234375,
          "content": "*.MD    text eol=lf diff=markdown\n*.cpp   text eol=lf diff=cpp\n*.h     text eol=lf diff=cpp\n*.py    text eol=lf diff=python\n*.html  text eol=lf diff=html\n*.mdp   binary\n*.mak   text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3876953125,
          "content": "reccmp-user.yml\nreccmp-build.yml\nDebug/\nRelease/\n*.ncb\n/.vs\n/.vscode\n/.idea\n.env\n.venv\nenv/\nvenv/\nENV/\nVENV/\nenv.bak/\nvenv.bak/\n/build/\n/build_debug/\n/legobin/\n*.swp\nLEGO1PROGRESS.*\nISLEPROGRESS.*\n*.pyc\ntools/ghidra_scripts/import.log\n\n# By convention we put the retail binaries into ./legobin.\n# These entries are kept for now since that convention has not always been around.\nISLE.EXE\nLEGO1.DLL\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 20.91015625,
          "content": "[MAIN]\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Clear in-memory caches upon conclusion of linting. Useful if running pylint\n# in a server-like mode.\nclear-cache-post-run=no\n\n# Load and enable all available extensions. Use --list-extensions to see a list\n# all available extensions.\n#enable-all-extensions=\n\n# In error mode, messages with a category besides ERROR or FATAL are\n# suppressed, and no reports are done by default. Error mode is compatible with\n# disabling specific errors.\n#errors-only=\n\n# Always return a 0 (non-error) status code, even if lint errors are found.\n# This is primarily useful in continuous integration scripts.\n#exit-zero=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-allow-list=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code. (This is an alternative name to extension-pkg-allow-list\n# for backward compatibility.)\nextension-pkg-whitelist=\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10\n\n# Interpret the stdin as a python script, whose filename needs to be passed as\n# the module_or_package argument.\n#from-stdin=\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=CVS\n\n# Add files or directories matching the regular expressions patterns to the\n# ignore-list. The regex matches against paths and can be in Posix or Windows\n# format. Because '\\\\' represents the directory delimiter on Windows systems,\n# it can't be used as an escape character.\nignore-paths=\n\n# Files or directories matching the regular expression patterns are skipped.\n# The regex matches against base names, not paths. The default value ignores\n# Emacs file locks\nignore-patterns=^\\.#\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=ghidra\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\ninit-hook='import sys; sys.path.append(\"tools/isledecomp\"); sys.path.append(\"tools/ghidra_scripts\")'\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use, and will cap the count on Windows to\n# avoid hangs.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Minimum Python version to use for version dependent checks. Will default to\n# the version used to run pylint.\npy-version=3.11\n\n# Discover python modules and packages in the file system subtree.\nrecursive=no\n\n# Add paths to the list of the source roots. Supports globbing patterns. The\n# source root is an absolute path or a path relative to the current working\n# directory used to determine a package namespace for modules located under the\n# source root.\nsource-roots=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# In verbose mode, extra non-checker-related info will be displayed.\n#verbose=\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\n#class-attribute-rgx=\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type alias names. If left empty, type\n# alias names will be checked with the set naming style.\n#typealias-rgx=\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\n#variable-rgx=\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      asyncSetUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make,os._exit\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# List of regular expressions of class ancestor names to ignore when counting\n# public methods (see R0903)\nexclude-too-few-public-methods=\n\n# List of qualified class names to ignore when counting class parents (see\n# R0901)\nignored-parents=\n\n# Maximum number of arguments for function / method.\nmax-args=6\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=30\n\n# Maximum number of locals for function / method body.\nmax-locals=30\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=75\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=0\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when caught.\novergeneral-exceptions=builtins.BaseException,builtins.Exception\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=2\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=200\n\n# Maximum number of lines in a module.\nmax-module-lines=1000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow explicit reexports by alias from a package __init__.\nallow-reexport-from-package=no\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=\n\n# Output a graph (.gv or any supported image format) of external dependencies\n# to the given file (report RP0402 must not be disabled).\next-import-graph=\n\n# Output a graph (.gv or any supported image format) of all (i.e. internal and\n# external) dependencies to the given file (report RP0402 must not be\n# disabled).\nimport-graph=\n\n# Output a graph (.gv or any supported image format) of internal dependencies\n# to the given file (report RP0402 must not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,\n# UNDEFINED.\nconfidence=HIGH,\n           CONTROL_FLOW,\n           INFERENCE,\n           INFERENCE_FAILURE,\n           UNDEFINED\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=raw-checker-failed,\n        bad-inline-option,\n        locally-disabled,\n        file-ignored,\n        suppressed-message,\n        useless-suppression,\n        deprecated-pragma,\n        use-symbolic-message-instead,\n        missing-class-docstring,\n        missing-function-docstring,\n        missing-module-docstring,\n        fixme\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[METHOD_ARGS]\n\n# List of qualified names (i.e., library.method) which require a timeout\n# parameter e.g. 'requests.api.get,requests.api.post'\ntimeout-methods=requests.api.delete,requests.api.get,requests.api.head,requests.api.options,requests.api.patch,requests.api.post,requests.api.put,requests.api.request\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n# Regular expression of note tags to take in consideration.\nnotes-rgx=\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'fatal', 'error', 'warning', 'refactor',\n# 'convention', and 'info' which contain the number of messages in each\n# category, as well as 'statement' which is the total number of statements\n# analyzed. This score is used by the global evaluation report (RP0004).\nevaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\nmsg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\n#output-format=\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[SIMILARITIES]\n\n# Comments are removed from the similarity computation\nignore-comments=yes\n\n# Docstrings are removed from the similarity computation\nignore-docstrings=yes\n\n# Imports are removed from the similarity computation\nignore-imports=yes\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=16\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. No available dictionaries : You need to install\n# both the python package and the system dependency for enchant to work..\nspelling-dict=\n\n# List of comma separated words that should be considered directives if they\n# appear at the beginning of a comment and should not be checked.\nspelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of symbolic message names to ignore for Mixin members.\nignored-checks-for-mixins=no-member,\n                          not-async-context-manager,\n                          not-context-manager,\n                          attribute-defined-outside-init\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local,argparse.Namespace\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# Regex pattern to define which classes are considered mixins.\nmixin-class-rgx=.*[Mm]ixin\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 28.25390625,
          "content": "cmake_minimum_required(VERSION 3.15 FATAL_ERROR)\n\n# MSVC runtime library flags are selected by an abstraction\ncmake_policy(SET CMP0091 NEW)\n\nproject(isle CXX)\n\ninclude(CheckCXXSourceCompiles)\ninclude(CMakeDependentOption)\ninclude(CMakePushCheckState)\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/cmake/reccmp.cmake\")\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)\noption(ENABLE_CLANG_TIDY \"Enable clang-tidy\")\nif (ENABLE_CLANG_TIDY)\n  find_program(CLANG_TIDY_BIN NAMES \"clang-tidy\")\n  set(CMAKE_C_CLANG_TIDY \"${CLANG_TIDY_BIN}\")\n  set(CMAKE_CXX_CLANG_TIDY \"${CLANG_TIDY_BIN}\")\nendif()\n\nmath(EXPR bits \"8 * ${CMAKE_SIZEOF_VOID_P}\")\nmessage(STATUS \"Building ${bits}-bit LEGO Island\")\nif (NOT bits EQUAL 32)\n  message(WARNING \"Only 32-bit executables are supported\")\nendif()\n\nset(MSVC_FOR_DECOMP FALSE)\nif (MSVC)\n  # Visual C++ 4.2 -> cl version 10.2.0\n  if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS \"11.0\")\n    set(MSVC_FOR_DECOMP TRUE)\n  endif()\nendif()\n\nfunction(add_cxx_warning WARNING)\n  if(ISLE_WERROR)\n    set(compiler_option \"-Werror=${WARNING}\")\n  else()\n    set(compiler_option \"-W${WARNING}\")\n  endif()\n  string(MAKE_C_IDENTIFIER \"COMPILER_SUPPORTS${compiler_option}\" varname)\n\n  cmake_push_check_state(RESET)\n  set(CMAKE_REQUIRED_FLAGS \"${compiler_option} \")\n  if(MSVC)\n    string(APPEND CMAKE_REQUIRED_FLAGS \"/WX\")\n  else()\n    string(APPEND CMAKE_REQUIRED_FLAGS \"-Werror\")\n  endif()\n  check_cxx_source_compiles(\"int main() { return 0; }\" ${varname})\n  cmake_pop_check_state()\n\n  if(${varname})\n    add_compile_options(${compiler_option})\n  endif()\nendfunction()\n\nmessage(STATUS \"MSVC for decompilation: ${MSVC_FOR_DECOMP}\")\n\noption(ISLE_WERROR \"Treat warnings as errors\" OFF)\noption(ISLE_BUILD_APP \"Build ISLE.EXE application\" ON)\ncmake_dependent_option(ISLE_BUILD_CONFIG \"Build CONFIG.EXE application\" ON \"NOT MINGW\" OFF)\noption(ISLE_USE_SMARTHEAP \"Build LEGO1.DLL with SmartHeap\" ${MSVC_FOR_DECOMP})\noption(ISLE_USE_DX5 \"Build with internal DirectX 5 SDK\" ON)\noption(ISLE_DECOMP_ASSERT \"Assert struct size\" ${MSVC_FOR_DECOMP})\ncmake_dependent_option(ISLE_USE_DX5_LIBS \"Build with internal DirectX 5 SDK Libraries\" ON ISLE_USE_DX5 OFF)\noption(ISLE_BUILD_LEGO1 \"Build LEGO1.DLL library\" ON)\noption(ISLE_BUILD_BETA10 \"Build BETA10.DLL library\" OFF)\n\nif(NOT (ISLE_BUILD_LEGO1 OR ISLE_BUILD_BETA10))\n  message(FATAL_ERROR \"ISLE_BUILD_LEGO1 AND ISLE_BUILD_BETA10 cannot be both disabled\")\nendif()\n\nadd_cxx_warning(parentheses)\n\nadd_library(DirectX5::DirectX5 INTERFACE IMPORTED)\ntarget_include_directories(DirectX5::DirectX5 INTERFACE \"${PROJECT_SOURCE_DIR}/3rdparty/dx5/inc\")\nif(ISLE_USE_DX5_LIBS)\n  target_link_directories(DirectX5::DirectX5 INTERFACE \"${PROJECT_SOURCE_DIR}/3rdparty/dx5/lib\")\nendif()\n\nadd_library(Smacker::Smacker STATIC IMPORTED)\nset_property(TARGET Smacker::Smacker PROPERTY IMPORTED_LOCATION \"${PROJECT_SOURCE_DIR}/3rdparty/smacker/smack.lib\")\nset_property(TARGET Smacker::Smacker PROPERTY INTERFACE_INCLUDE_DIRECTORIES \"${PROJECT_SOURCE_DIR}/3rdparty/smacker\")\n\nadd_library(Vec::Vec INTERFACE IMPORTED)\ntarget_include_directories(Vec::Vec INTERFACE \"${PROJECT_SOURCE_DIR}/3rdparty/vec\")\n\nadd_library(SmartHeap::SmartHeap STATIC IMPORTED)\nset_property(TARGET SmartHeap::SmartHeap PROPERTY IMPORTED_LOCATION \"${PROJECT_SOURCE_DIR}/3rdparty/smartheap/SHLW32MT.LIB\")\nset_property(TARGET SmartHeap::SmartHeap PROPERTY INTERFACE_INCLUDE_DIRECTORIES \"${PROJECT_SOURCE_DIR}/3rdparty/smartheap\")\nset_property(TARGET SmartHeap::SmartHeap PROPERTY INTERFACE_COMPILE_OPTIONS \"/FI${PROJECT_SOURCE_DIR}/3rdparty/smartheap/SMRTHEAP.HPP\")\n\nfunction(add_lego_libraries NAME)\n  cmake_parse_arguments(ARG \"\" \"SUFFIX;OUT_TARGETS;DLL_OUTPUT_NAME;DLL_PREFIX;DLL_SUFFIX\" \"LINK_LIBRARIES\" ${ARGN})\n\n  set(list_targets )\n\n  set(SUFFIX \"${ARG_SUFFIX}\")\n\n  add_library(tglrl${ARG_SUFFIX} STATIC\n    LEGO1/tgl/d3drm/renderer.cpp\n    LEGO1/tgl/d3drm/texture.cpp\n    LEGO1/tgl/d3drm/view.cpp\n    LEGO1/tgl/d3drm/device.cpp\n    LEGO1/tgl/d3drm/group.cpp\n    LEGO1/tgl/d3drm/camera.cpp\n    LEGO1/tgl/d3drm/light.cpp\n    LEGO1/tgl/d3drm/meshbuilder.cpp\n    LEGO1/tgl/d3drm/mesh.cpp\n  )\n  list(APPEND list_targets tglrl${ARG_SUFFIX})\n  set_property(TARGET tglrl${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"tglrl40$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(tglrl${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(tglrl${ARG_SUFFIX} PRIVATE d3drm)\n\n  add_library(realtime${ARG_SUFFIX} STATIC\n    LEGO1/realtime/orientableroi.cpp\n    LEGO1/realtime/realtime.cpp\n    LEGO1/realtime/realtimeview.cpp\n  )\n  list(APPEND list_targets realtime${ARG_SUFFIX})\n  set_property(TARGET realtime${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"realtime$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(realtime${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(realtime${ARG_SUFFIX} PRIVATE Vec::Vec)\n\n  add_library(viewmanager${ARG_SUFFIX} STATIC\n    LEGO1/viewmanager/viewlod.cpp\n    LEGO1/viewmanager/viewmanager.cpp\n    LEGO1/viewmanager/viewlodlist.cpp\n    LEGO1/viewmanager/viewroi.cpp\n  )\n  list(APPEND list_targets viewmanager${ARG_SUFFIX})\n  set_property(TARGET viewmanager${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"viewmanager$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(viewmanager${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(viewmanager${ARG_SUFFIX} PRIVATE Vec::Vec)\n\n  add_library(mxdirectx${ARG_SUFFIX} STATIC\n    LEGO1/mxdirectx/mxdirect3d.cpp\n    LEGO1/mxdirectx/mxdirectxinfo.cpp\n    LEGO1/mxdirectx/legodxinfo.cpp\n    LEGO1/mxdirectx/mxdirectdraw.cpp\n  )\n  list(APPEND list_targets mxdirectx${ARG_SUFFIX})\n  set_property(TARGET mxdirectx${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"MxDirectX$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(mxdirectx${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(mxdirectx${ARG_SUFFIX} PRIVATE ddraw)\n\n  add_library(roi${ARG_SUFFIX} STATIC\n    LEGO1/lego/sources/roi/legoroi.cpp\n    LEGO1/lego/sources/roi/legolod.cpp\n  )\n  list(APPEND list_targets roi${ARG_SUFFIX})\n  set_property(TARGET roi${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"roi$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(roi${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\" \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/LEGO1/lego/sources\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(roi${ARG_SUFFIX} PRIVATE viewmanager${ARG_SUFFIX} Vec::Vec)\n\n  add_library(geom${ARG_SUFFIX} STATIC\n    LEGO1/lego/sources/geom/legoedge.cpp\n    LEGO1/lego/sources/geom/legoweedge.cpp\n    LEGO1/lego/sources/geom/legounkown100db7f4.cpp\n    LEGO1/lego/sources/geom/legowegedge.cpp\n  )\n  list(APPEND list_targets geom${ARG_SUFFIX})\n  set_property(TARGET geom${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"geom$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(geom${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\" \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/LEGO1/lego/sources\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(geom${ARG_SUFFIX} PRIVATE)\n\n  add_library(shape${ARG_SUFFIX} STATIC\n    LEGO1/lego/sources/shape/legobox.cpp\n    LEGO1/lego/sources/shape/legosphere.cpp\n    LEGO1/lego/sources/shape/legovertex.cpp\n    LEGO1/lego/sources/shape/legomesh.cpp\n    LEGO1/lego/sources/shape/legocolor.cpp\n  )\n  list(APPEND list_targets shape${ARG_SUFFIX})\n  set_property(TARGET shape${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"shape$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(shape${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\" \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/LEGO1/lego/sources\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(shape${ARG_SUFFIX} PRIVATE)\n\n  add_library(anim${ARG_SUFFIX} STATIC\n    LEGO1/lego/sources/anim/legoanim.cpp\n  )\n  list(APPEND list_targets anim${ARG_SUFFIX})\n  set_property(TARGET anim${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"anim$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(anim${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\" \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/LEGO1/lego/sources\" \"${PROJECT_SOURCE_DIR}/util\")\n\n  add_library(misc${ARG_SUFFIX} STATIC\n    LEGO1/lego/sources/misc/legotexture.cpp\n    LEGO1/lego/sources/misc/legostorage.cpp\n    LEGO1/lego/sources/misc/legoimage.cpp\n    LEGO1/lego/sources/misc/legocontainer.cpp\n    LEGO1/lego/sources/misc/legotree.cpp\n    LEGO1/lego/sources/misc/legounknown.cpp\n  )\n  list(APPEND list_targets misc${ARG_SUFFIX})\n  set_property(TARGET misc${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"misc$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(misc${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\" \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/LEGO1/lego/sources\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(misc${ARG_SUFFIX} PRIVATE)\n\n  add_library(3dmanager${ARG_SUFFIX} STATIC\n    LEGO1/lego/sources/3dmanager/lego3dview.cpp\n    LEGO1/lego/sources/3dmanager/lego3dmanager.cpp\n    LEGO1/lego/sources/3dmanager/legoview1.cpp\n    LEGO1/lego/sources/3dmanager/tglsurface.cpp\n  )\n  list(APPEND list_targets 3dmanager${ARG_SUFFIX})\n  set_property(TARGET 3dmanager${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"3dmanager$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(3dmanager${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(3dmanager${ARG_SUFFIX} PRIVATE Vec::Vec)\n\n  add_library(omni${ARG_SUFFIX} STATIC\n    LEGO1/omni/src/notify/mxnotificationmanager.cpp\n    LEGO1/omni/src/common/mxdebug.cpp\n    LEGO1/omni/src/common/mxmisc.cpp\n    LEGO1/omni/src/common/mxatom.cpp\n    LEGO1/omni/src/action/mxdsaction.cpp\n    LEGO1/omni/src/common/mxtimer.cpp\n    LEGO1/omni/src/common/mxcore.cpp\n    LEGO1/omni/src/common/mxstring.cpp\n    LEGO1/omni/src/audio/mxsoundmanager.cpp\n    LEGO1/omni/src/main/mxomni.cpp\n    LEGO1/omni/src/notify/mxactionnotificationparam.cpp\n    LEGO1/omni/src/main/mxomnicreateflags.cpp\n    LEGO1/omni/src/main/mxomnicreateparam.cpp\n    LEGO1/omni/src/common/mxobjectfactory.cpp\n    LEGO1/omni/src/audio/mxsoundpresenter.cpp\n    LEGO1/omni/src/audio/mxwavepresenter.cpp\n    LEGO1/omni/src/video/mxvideopresenter.cpp\n    LEGO1/omni/src/video/mxflcpresenter.cpp\n    LEGO1/omni/src/video/mxsmkpresenter.cpp\n    LEGO1/omni/src/video/mxloopingflcpresenter.cpp\n    LEGO1/omni/src/video/mxloopingsmkpresenter.cpp\n    LEGO1/omni/src/common/mxpresenter.cpp\n    LEGO1/omni/src/common/mxmediapresenter.cpp\n    LEGO1/omni/src/common/mxcompositepresenter.cpp\n    LEGO1/omni/src/system/mxcriticalsection.cpp\n    LEGO1/omni/src/common/mxutilities.cpp\n    LEGO1/omni/src/common/mxvariabletable.cpp\n    LEGO1/omni/src/stream/mxdssubscriber.cpp\n    LEGO1/omni/src/common/mxmediamanager.cpp\n    LEGO1/omni/src/system/mxticklethread.cpp\n    LEGO1/omni/src/audio/mxaudiomanager.cpp\n    LEGO1/omni/src/system/mxautolock.cpp\n    LEGO1/omni/src/stream/mxstreamer.cpp\n    LEGO1/omni/src/video/mxstillpresenter.cpp\n    LEGO1/omni/src/video/mxdisplaysurface.cpp\n    LEGO1/omni/src/video/mxbitmap.cpp\n    LEGO1/omni/src/video/flic.cpp\n    LEGO1/omni/src/common/mxticklemanager.cpp\n    LEGO1/omni/src/stream/mxdschunk.cpp\n    LEGO1/omni/src/video/mxvideomanager.cpp\n    LEGO1/omni/src/video/mxvideoparamflags.cpp\n    LEGO1/omni/src/video/mxvideoparam.cpp\n    LEGO1/omni/src/video/mxpalette.cpp\n    LEGO1/omni/src/system/mxscheduler.cpp\n    LEGO1/omni/src/system/mxthread.cpp\n    LEGO1/omni/src/action/mxdsobject.cpp\n    LEGO1/omni/src/event/mxeventmanager.cpp\n    LEGO1/omni/src/audio/mxmusicmanager.cpp\n    LEGO1/omni/src/stream/mxstreamcontroller.cpp\n    LEGO1/omni/src/audio/mxmusicpresenter.cpp\n    LEGO1/omni/src/audio/mxmidipresenter.cpp\n    LEGO1/omni/src/audio/mxloopingmidipresenter.cpp\n    LEGO1/omni/src/event/mxeventpresenter.cpp\n    LEGO1/omni/src/stream/mxstreamchunk.cpp\n    LEGO1/omni/src/video/mxregioncursor.cpp\n    LEGO1/omni/src/video/mxregion.cpp\n    LEGO1/omni/src/video/mxsmk.cpp\n    LEGO1/omni/src/stream/mxramstreamcontroller.cpp\n    LEGO1/omni/src/stream/mxdsbuffer.cpp\n    LEGO1/omni/src/stream/mxdiskstreamcontroller.cpp\n    LEGO1/omni/src/system/mxsemaphore.cpp\n    LEGO1/omni/src/action/mxdsobjectaction.cpp\n    LEGO1/omni/src/action/mxdsmediaaction.cpp\n    LEGO1/omni/src/action/mxdsanim.cpp\n    LEGO1/omni/src/action/mxdssound.cpp\n    LEGO1/omni/src/action/mxdsevent.cpp\n    LEGO1/omni/src/action/mxdsstill.cpp\n    LEGO1/omni/src/action/mxdsmultiaction.cpp\n    LEGO1/omni/src/action/mxdsserialaction.cpp\n    LEGO1/omni/src/action/mxdsparallelaction.cpp\n    LEGO1/omni/src/action/mxdsselectaction.cpp\n    LEGO1/omni/src/stream/mxdsfile.cpp\n    LEGO1/omni/src/stream/mxio.cpp\n    LEGO1/omni/src/action/mxdsstreamingaction.cpp\n    LEGO1/omni/src/stream/mxramstreamprovider.cpp\n    LEGO1/omni/src/stream/mxdiskstreamprovider.cpp\n  )\n  list(APPEND list_targets omni${ARG_SUFFIX})\n  set_property(TARGET omni${ARG_SUFFIX} PROPERTY ARCHIVE_OUTPUT_NAME \"omni$<$<CONFIG:Debug>:d>${ARG_SUFFIX}\")\n  target_include_directories(omni${ARG_SUFFIX} PRIVATE \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\" \"${PROJECT_SOURCE_DIR}/LEGO1\" \"${PROJECT_SOURCE_DIR}/util\")\n  target_link_libraries(omni${ARG_SUFFIX} PRIVATE dsound winmm Smacker::Smacker)\n\n  add_library(${NAME} SHARED\n    LEGO1/lego/legoomni/src/worlds/score.cpp\n    LEGO1/lego/legoomni/src/actors/helicopter.cpp\n    LEGO1/lego/legoomni/src/worlds/gasstation.cpp\n    LEGO1/lego/legoomni/src/audio/legocachsound.cpp\n    LEGO1/lego/legoomni/src/common/legoobjectfactory.cpp\n    LEGO1/lego/legoomni/src/actors/skateboard.cpp\n    LEGO1/lego/legoomni/src/entity/legoentity.cpp\n    LEGO1/lego/legoomni/src/audio/lego3dsound.cpp\n    LEGO1/lego/legoomni/src/entity/legocameracontroller.cpp\n    LEGO1/lego/legoomni/src/race/legoracers.cpp\n    LEGO1/lego/legoomni/src/race/legoraceactor.cpp\n    LEGO1/lego/legoomni/src/common/legostate.cpp\n    LEGO1/lego/legoomni/src/actors/buildingentity.cpp\n    LEGO1/lego/legoomni/src/actors/buildings.cpp\n    LEGO1/lego/legoomni/src/common/misc.cpp\n    LEGO1/lego/legoomni/src/race/legorace.cpp\n    LEGO1/lego/legoomni/src/race/jetskirace.cpp\n    LEGO1/lego/legoomni/src/race/carrace.cpp\n    LEGO1/lego/legoomni/src/actors/pizzeria.cpp\n    LEGO1/lego/legoomni/src/worlds/elevatorbottom.cpp\n    LEGO1/lego/legoomni/src/audio/legoloadcachesoundpresenter.cpp\n    LEGO1/lego/legoomni/src/actors/act2genactor.cpp\n    LEGO1/lego/legoomni/src/actors/act2actor.cpp\n    LEGO1/lego/legoomni/src/actors/islepathactor.cpp\n    LEGO1/lego/legoomni/src/paths/legopathstruct.cpp\n    LEGO1/lego/legoomni/src/paths/legoanimactor.cpp\n    LEGO1/lego/legoomni/src/entity/legoworld.cpp\n    LEGO1/lego/legoomni/src/build/legocarbuild.cpp\n    LEGO1/lego/legoomni/src/common/legoplantmanager.cpp\n    LEGO1/lego/legoomni/src/actors/bumpbouy.cpp\n    LEGO1/modeldb/modeldb.cpp\n    LEGO1/lego/legoomni/src/actors/racecar.cpp\n    LEGO1/lego/legoomni/src/control/legocontrolmanager.cpp\n    LEGO1/lego/legoomni/src/audio/legosoundmanager.cpp\n    LEGO1/lego/legoomni/src/paths/legoextraactor.cpp\n    LEGO1/lego/legoomni/src/actors/isleactor.cpp\n    LEGO1/lego/legoomni/src/actors/radio.cpp\n    LEGO1/lego/legoomni/src/entity/legoactor.cpp\n    LEGO1/lego/legoomni/src/paths/legopathactor.cpp\n    LEGO1/lego/legoomni/src/common/legobuildingmanager.cpp\n    LEGO1/lego/legoomni/src/worlds/isle.cpp\n    LEGO1/lego/legoomni/src/actors/ambulance.cpp\n    LEGO1/lego/legoomni/src/actors/pizza.cpp\n    LEGO1/lego/legoomni/src/actors/motorcycle.cpp\n    LEGO1/lego/legoomni/src/actors/act3ammo.cpp\n    LEGO1/lego/legoomni/src/audio/legocachesoundmanager.cpp\n    LEGO1/lego/legoomni/src/worlds/infocenterdoor.cpp\n    LEGO1/lego/legoomni/src/common/legogamestate.cpp\n    LEGO1/lego/legoomni/src/common/legobackgroundcolor.cpp\n    LEGO1/lego/legoomni/src/common/legofullscreenmovie.cpp\n    LEGO1/lego/legoomni/src/common/legoutils.cpp\n    LEGO1/lego/legoomni/src/actors/act3actors.cpp\n    LEGO1/lego/legoomni/src/control/legometerpresenter.cpp\n    LEGO1/lego/legoomni/src/common/legoactioncontrolpresenter.cpp\n    LEGO1/lego/legoomni/src/common/mxcontrolpresenter.cpp\n    LEGO1/lego/legoomni/src/paths/legopathpresenter.cpp\n    LEGO1/lego/legoomni/src/common/legophoneme.cpp\n    LEGO1/lego/legoomni/src/paths/legopathcontroller.cpp\n    LEGO1/lego/legoomni/src/entity/legojetskiraceactor.cpp\n    LEGO1/lego/legoomni/src/audio/lego3dwavepresenter.cpp\n    LEGO1/lego/legoomni/src/common/legoanimmmpresenter.cpp\n    LEGO1/lego/legoomni/src/common/mxtransitionmanager.cpp\n    LEGO1/lego/legoomni/src/actors/towtrack.cpp\n    LEGO1/lego/legoomni/src/entity/act2policestation.cpp\n    LEGO1/lego/legoomni/src/video/legophonemepresenter.cpp\n    LEGO1/lego/legoomni/src/video/legotexturepresenter.cpp\n    LEGO1/lego/legoomni/src/worlds/legoact2.cpp\n    LEGO1/lego/legoomni/src/common/legovariables.cpp\n    LEGO1/lego/legoomni/src/main/scripts.cpp\n    LEGO1/lego/legoomni/src/entity/legoentitypresenter.cpp\n    LEGO1/lego/legoomni/src/entity/legonavcontroller.cpp\n    LEGO1/lego/legoomni/src/paths/legopathboundary.cpp\n    LEGO1/lego/legoomni/src/main/legomain.cpp\n    LEGO1/lego/legoomni/src/input/legoinputmanager.cpp\n    LEGO1/lego/legoomni/src/race/legoracemap.cpp\n    LEGO1/lego/legoomni/src/worlds/jukebox.cpp\n    LEGO1/lego/legoomni/src/video/legoflctexturepresenter.cpp\n    LEGO1/lego/legoomni/src/worlds/police.cpp\n    LEGO1/lego/legoomni/src/common/legoanimationmanager.cpp\n    LEGO1/lego/legoomni/src/build/legocarbuildpresenter.cpp\n    LEGO1/lego/legoomni/src/entity/legopovcontroller.cpp\n    LEGO1/lego/legoomni/src/common/legotextureinfo.cpp\n    LEGO1/lego/legoomni/src/actors/doors.cpp\n    LEGO1/lego/legoomni/src/entity/legoworldpresenter.cpp\n    LEGO1/lego/legoomni/src/actors/dunebuggy.cpp\n    LEGO1/lego/legoomni/src/video/legoanimpresenter.cpp\n    LEGO1/lego/legoomni/src/video/legoloopinganimpresenter.cpp\n    LEGO1/lego/legoomni/src/video/legolocomotionanimpresenter.cpp\n    LEGO1/lego/legoomni/src/video/legohideanimpresenter.cpp\n    LEGO1/lego/legoomni/src/worlds/infocenter.cpp\n    LEGO1/lego/legoomni/src/race/raceskel.cpp\n    LEGO1/lego/legoomni/src/worlds/act3.cpp\n    LEGO1/lego/legoomni/src/video/legomodelpresenter.cpp\n    LEGO1/lego/legoomni/src/common/mxcompositemediapresenter.cpp\n    LEGO1/lego/legoomni/src/worlds/hospital.cpp\n    LEGO1/lego/legoomni/src/actors/bike.cpp\n    LEGO1/lego/legoomni/src/entity/legoactorpresenter.cpp\n    LEGO1/lego/legoomni/src/worlds/registrationbook.cpp\n    LEGO1/lego/legoomni/src/video/legopalettepresenter.cpp\n    LEGO1/lego/legoomni/src/entity/act2brick.cpp\n    LEGO1/lego/legoomni/src/video/legovideomanager.cpp\n    LEGO1/lego/legoomni/src/video/legopartpresenter.cpp\n    LEGO1/lego/legoomni/src/actors/jetski.cpp\n    LEGO1/lego/legoomni/src/audio/mxbackgroundaudiomanager.cpp\n    LEGO1/lego/legoomni/src/race/legoracespecial.cpp\n    LEGO1/lego/legoomni/src/worlds/historybook.cpp\n    LEGO1/lego/legoomni/src/common/legocharactermanager.cpp\n    LEGO1/lego/legoomni/src/actors/jukeboxentity.cpp\n    LEGO1/main.cpp\n    # We need to get rid of / refactor the below units into existing/other ones\n    LEGO1/lego/legoomni/src/entity/legolocations.cpp\n    LEGO1/lego/legoomni/src/notify/legoeventnotificationparam.cpp\n    LEGO1/lego/legoomni/src/common/legoactors.cpp\n    LEGO1/define.cpp\n    LEGO1/lego/legoomni/src/common/legoplants.cpp\n  )\n  list(APPEND list_targets ${NAME})\n\n  if (MINGW)\n    target_compile_definitions(${NAME} PRIVATE DIRECTINPUT_VERSION=0x0500)\n  endif()\n\n  if (MSVC)\n    target_sources(${NAME} PRIVATE LEGO1/LegoOmni.def)\n  else()\n    target_sources(${NAME} PRIVATE LEGO1/LegoOmni.mingw.def)\n  endif()\n\n  target_include_directories(${NAME} PUBLIC \"${PROJECT_SOURCE_DIR}/util\")\n  target_include_directories(${NAME} PUBLIC \"${PROJECT_SOURCE_DIR}/LEGO1\")\n  target_include_directories(${NAME} PUBLIC \"${PROJECT_SOURCE_DIR}/LEGO1/omni/include\")\n  target_include_directories(${NAME} PUBLIC \"${PROJECT_SOURCE_DIR}/LEGO1/lego/sources\")\n  target_include_directories(${NAME} PUBLIC \"${PROJECT_SOURCE_DIR}/LEGO1/lego/legoomni/include\")\n  target_include_directories(${NAME} PUBLIC \"${PROJECT_SOURCE_DIR}/LEGO1/lego/legoomni/include/actions\")\n\n  # Link libraries\n  target_link_libraries(${NAME} PRIVATE\n    dinput\n    misc${ARG_SUFFIX}\n    geom${ARG_SUFFIX}\n    mxdirectx${ARG_SUFFIX}\n    anim${ARG_SUFFIX}\n    tglrl${ARG_SUFFIX}\n    realtime${ARG_SUFFIX}\n    viewmanager${ARG_SUFFIX}\n    roi${ARG_SUFFIX}\n    3dmanager${ARG_SUFFIX}\n    omni${ARG_SUFFIX}\n    shape${ARG_SUFFIX}\n    Vec::Vec\n    dxguid\n  )\n\n  foreach(tgt IN LISTS list_targets)\n    target_link_libraries(${tgt} PRIVATE ${ARG_LINK_LIBRARIES})\n    target_link_libraries(${tgt} PRIVATE $<$<BOOL:${ISLE_USE_DX5}>:DirectX5::DirectX5>)\n    target_compile_definitions(${tgt} PRIVATE $<$<BOOL:${ISLE_USE_DX5}>:DIRECTX5_SDK>)\n  endforeach()\n\n  # Make sure filenames are ALL CAPS\n  set_property(TARGET ${NAME} PROPERTY OUTPUT_NAME \"${ARG_DLL_OUTPUT_NAME}\")\n  set_property(TARGET ${NAME} PROPERTY PREFIX \"${ARG_DLL_PREFIX}\")\n  set_property(TARGET ${NAME} PROPERTY SUFFIX \"${ARG_DLL_SUFFIX}\")\n\n  set(${ARG_OUT_TARGETS} ${list_targets} PARENT_SCOPE)\nendfunction()\n\nset(lego1_link_libraries )\nif (ISLE_USE_SMARTHEAP)\n  list(APPEND lego1_link_libraries SmartHeap::SmartHeap)\nendif()\n\nif(ISLE_BUILD_LEGO1)\n  add_lego_libraries(lego1\n    LINK_LIBRARIES ${lego1_link_libraries}\n    DLL_OUTPUT_NAME \"LEGO1\"\n    DLL_PREFIX \"\"\n    DLL_SUFFIX \".DLL\"\n    OUT_TARGETS lego1_targets\n  )\n  reccmp_add_target(lego1 ID LEGO1)\nendif()\n\nif(ISLE_BUILD_BETA10)\n  add_lego_libraries(beta10\n    SUFFIX \"-beta10\"\n    DLL_OUTPUT_NAME \"BETA10\"\n    DLL_PREFIX \"\"\n    DLL_SUFFIX \".DLL\"\n    OUT_TARGETS beta10_targets\n  )\n  reccmp_add_target(beta10 ID BETA10)\n  target_compile_definitions(beta10 PRIVATE BETA10)\nendif()\n\nif (ISLE_BUILD_APP)\n  add_executable(isle WIN32\n    ISLE/res/isle.rc\n    ISLE/isleapp.cpp\n  )\n  reccmp_add_target(isle ID ISLE)\n\n  target_compile_definitions(isle PRIVATE ISLE_APP)\n\n  # Use internal DirectX 5 if required\n  target_link_libraries(isle PRIVATE $<$<BOOL:${ISLE_USE_DX5}>:DirectX5::DirectX5>)\n\n  if (ISLE_USE_SMARTHEAP)\n    target_link_libraries(isle PRIVATE SmartHeap::SmartHeap)\n  endif()\n\n  # Link DSOUND, WINMM, and LEGO1\n  target_link_libraries(isle PRIVATE dsound winmm)\n  if(ISLE_BUILD_LEGO1)\n    target_link_libraries(isle PRIVATE lego1)\n  else()\n    target_link_libraries(isle PRIVATE beta10)\n  endif()\n\n  # Make sure filenames are ALL CAPS\n  set_property(TARGET isle PROPERTY OUTPUT_NAME ISLE)\n  set_property(TARGET isle PROPERTY SUFFIX \".EXE\")\nendif()\n\nif (ISLE_BUILD_CONFIG)\n  add_executable(config WIN32\n    LEGO1/mxdirectx/mxdirectxinfo.cpp\n    LEGO1/mxdirectx/legodxinfo.cpp\n    CONFIG/config.cpp\n    CONFIG/ConfigCommandLineInfo.cpp\n    CONFIG/AboutDlg.cpp\n    CONFIG/MainDlg.cpp\n    CONFIG/detectdx5.cpp\n    CONFIG/StdAfx.cpp\n    CONFIG/res/config.rc\n  )\n  reccmp_add_target(config ID CONFIG)\n  target_compile_definitions(config PRIVATE _AFXDLL MXDIRECTX_FOR_CONFIG)\n  target_include_directories(config PRIVATE \"${CMAKE_CURRENT_SOURCE_DIR}/util\" \"${CMAKE_CURRENT_SOURCE_DIR}/LEGO1\")\n  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 14)\n    target_link_libraries(config PRIVATE DirectX5::DirectX5)\n  endif()\n  target_compile_definitions(config PRIVATE DIRECT3D_VERSION=0x500)\n  target_link_libraries(config PRIVATE ddraw dxguid)\n  set_property(TARGET config PROPERTY OUTPUT_NAME \"CONFIG\")\n  set_property(TARGET config PROPERTY SUFFIX \".EXE\")\n  set_property(TARGET config PROPERTY MSVC_RUNTIME_LIBRARY MultiThreaded$<$<CONFIG:Debug>:Debug>DLL)\nendif()\n\nif (MSVC)\n  if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL \"15\")\n    set_property(TARGET ${lego1_targets} ${beta10_targets} APPEND PROPERTY COMPILE_DEFINITIONS \"_CRT_SECURE_NO_WARNINGS\")\n    if (TARGET isle)\n      target_compile_definitions(isle PRIVATE \"_CRT_SECURE_NO_WARNINGS\")\n    endif()\n    if (TARGET config)\n      target_compile_definitions(config PRIVATE \"_CRT_SECURE_NO_WARNINGS\")\n    endif()\n  endif()\n  # Visual Studio 2017 version 15.7 needs \"/Zc:__cplusplus\" for __cplusplus\n  if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL \"19.14.26428\")\n    foreach(tgt IN LISTS lego1_targets beta10_targets)\n      target_compile_options(${tgt} PRIVATE \"-Zc:__cplusplus\")\n    endforeach()\n    if (TARGET isle)\n      target_compile_options(isle PRIVATE \"-Zc:__cplusplus\")\n    endif()\n    if (TARGET config)\n      target_compile_options(config PRIVATE \"-Zc:__cplusplus\")\n    endif()\n  endif()\nendif()\n\nif (ISLE_DECOMP_ASSERT)\n    message(STATUS \"Decomp asserts enabled\")\n    foreach(tgt IN LISTS lego1_targets beta10_targets)\n      target_compile_definitions(${tgt} PRIVATE \"ENABLE_DECOMP_ASSERTS\")\n    endforeach()\n\n    if (TARGET isle)\n      target_compile_definitions(isle PRIVATE \"ENABLE_DECOMP_ASSERTS\")\n    endif()\n    if (TARGET config)\n      target_compile_definitions(config PRIVATE \"ENABLE_DECOMP_ASSERTS\")\n    endif()\nendif()\n\nif (MSVC_FOR_DECOMP)\n  # These flags have been taken from the defaults for a Visual C++ 4.20 project (the compiler the\n  # game was originally built with) and tweaked slightly to produce more debugging info for reccmp.\n  # They ensure a recompilation that can be byte/instruction accurate to the original binaries.\n  if (ISLE_BUILD_APP)\n    target_link_options(isle PRIVATE \"/OPT:REF\")\n    set_property(TARGET isle ${lego1_targets} PROPERTY MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n  endif()\n\n  if(TARGET lego1)\n    target_link_options(lego1 PRIVATE \"/OPT:REF\")\n    # Equivalent to target_compile_options(... PRIVATE \"/MT$<$<CONFIG:Debug>:d>\")\n    set_property(TARGET lego1 ${lego1_targets} ${beta10_targets} PROPERTY MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n  endif()\n\n  set(CMAKE_CXX_FLAGS \"/W3 /GX /D \\\"WIN32\\\" /D \\\"_WINDOWS\\\"\")\n  set(CMAKE_CXX_FLAGS_DEBUG \"/Gm /Zi /Od /D \\\"_DEBUG\\\"\")\n  set(CMAKE_CXX_FLAGS_RELEASE \"/O2 /D \\\"NDEBUG\\\"\")\n  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"/Zi /O2 /D \\\"NDEBUG\\\"\")\n  set(CMAKE_CXX_FLAGS_MINSIZEREL \"/Os /D \\\"NDEBUG\\\"\")\n\n  set(CMAKE_EXE_LINKER_FLAGS \"/machine:I386\")\n  set(CMAKE_EXE_LINKER_FLAGS_DEBUG \"/incremental:yes /debug\")\n  set(CMAKE_EXE_LINKER_FLAGS_RELEASE \"/incremental:no\")\n  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/incremental:no /debug\")\n  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL \"/incremental:no\")\n\n  set(CMAKE_STATIC_LINKER_FLAGS \"/machine:I386\")\n\n  set(CMAKE_SHARED_LINKER_FLAGS \"/machine:I386\")\n  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG \"/incremental:yes /debug\")\n  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE \"/incremental:no\")\n  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"/incremental:no /debug\")\n  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL \"/incremental:no\")\n\n  # Older MSVC versions don't support building in parallel.\n  # Force non-parallel builds of isle and lego1 by putting them in a pool with 1 available job.\n  if (CMAKE_CXX_COMPILER_ID VERSION_LESS 12)\n    foreach(tgt IN LISTS lego1_targets beta10_targets)\n      set_property(GLOBAL APPEND PROPERTY JOB_POOLS \"msvc_${tgt}=1\")\n      set_property(TARGET ${tgt} PROPERTY JOB_POOL_COMPILE \"msvc_${tgt}\")\n      set_property(TARGET ${tgt} PROPERTY JOB_POOL_LINK \"msvc_${tgt}\")\n    endforeach()\n    if (TARGET isle)\n      set_property(GLOBAL APPEND PROPERTY JOB_POOLS \"msvc_isle=1\")\n      set_property(TARGET isle PROPERTY JOB_POOL_COMPILE \"msvc_isle\")\n      set_property(TARGET isle PROPERTY JOB_POOL_LINK \"msvc_isle\")\n    endif()\n    if (TARGET config)\n      set_property(GLOBAL APPEND PROPERTY JOB_POOLS \"msvc_config=1\")\n      set_property(TARGET config PROPERTY JOB_POOL_COMPILE \"msvc_config\")\n      set_property(TARGET config PROPERTY JOB_POOL_LINK \"msvc_config\")\n    endif()\n  endif()\nendif()\n\nfind_program(CLANGFORMAT_BIN NAMES clang-format)\nif(EXISTS \"${CLANGFORMAT_BIN}\")\n  execute_process(COMMAND \"${CLANGFORMAT_BIN}\" --version\n    OUTPUT_VARIABLE \"CLANGFORMAT_VERSION_OUTPUT\"\n    RESULT_VARIABLE \"CLANGFORMAT_RESULT\"\n  )\n  if(CLANGFORMAT_RESULT EQUAL 0 AND CLANGFORMAT_VERSION_OUTPUT MATCHES \"version ([0-9\\\\.]+)\")\n    set(CLANGFORMAT_VERSION \"${CMAKE_MATCH_1}\")\n    set(CLANGFORMAT_VERSION_REQUIRED \"17.0\")\n    message(DEBUG \"Found clang-format version ${CLANGFORMAT_VERSION} (needs ${CLANGFORMAT_VERSION_REQUIRED}\")\n    if(CLANGFORMAT_VERSION VERSION_GREATER_EQUAL \"${CLANGFORMAT_VERSION_REQUIRED}\")\n      file(GLOB_RECURSE isle_sources\n        \"${PROJECT_SOURCE_DIR}/ISLE/*.cpp\"\n        \"${PROJECT_SOURCE_DIR}/ISLE/*.h\"\n        \"${PROJECT_SOURCE_DIR}/LEGO1/*.cpp\"\n        \"${PROJECT_SOURCE_DIR}/LEGO1/*.h\"\n      )\n      string(REPLACE \";\" \"\\n\" isle_sources_lines \"${isle_sources}\")\n      file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/isle_sources.txt\" \"${isle_sources_lines}\\n\")\n      add_custom_target(clang-format ${CLANGFORMAT_BIN} -i \"--files=${CMAKE_CURRENT_BINARY_DIR}/isle_sources.txt\")\n    endif()\n  endif()\nendif()\n\nreccmp_configure()\n"
        },
        {
          "name": "CONFIG",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.173828125,
          "content": "# Contributing\n\n## Important Note\n\nWhile we're thrilled that there is so much interest in reverse engineering LEGO Island and are happy to accept contributions from anyone who would like to help progress us further to our goal of a complete codebase, proposed changes to this repository must adhere to a certain degree of engineering quality. While the established contributors here are more than happy to provide code reviews and constructive criticism, it is not their job to teach potential contributors C++ or decompilation fundamentals. As a project that is largely an artifact of the free time of its contributors, the more of that (often scarce) resource that can be dedicated to efficient work, the faster the decompilation will progress. Unfortunately, this results in well-intentioned but poorly constructed contributions actually hurting progress in the long-term. While we are greatly appreciative of the sentiment, if you aren't very confident in your decompilation abilities, it is generally in the project's best interest that you return when you have a better grasp over the process.\n\nGenerally, decompilation is a fairly advanced skill. Depending on your current proficiency with C/C++ and x86 assembly, it could take you months or even years to learn the skills necessary to do it adequately. If you're still interested in learning, [part 1 of the decompilation vlog](https://www.youtube.com/watch?v=MToTEqoVv3I) covers the overall process and should give you a starting point that you can dive in from. Once again, please make yourself familiar with this process before attempting to contribute code to this project.\n\n## Ghidra Server\n\nFor documenting the original binaries and generating pseudocode that we decompile with, we primarily use [Ghidra](https://ghidra-sre.org/) (it's free and open source). To help with collaboration, we have a shared Ghidra repository with all of our current work. You are free to check it out and mess around with it locally, however to prevent sabotage, you will need to request permission before you can push your changes back to the server (ask in the Matrix room).\n\nTo access the Ghidra repository, use the following details:\n\n- Address: `server.mattkc.com`\n- Port: `13100`\n\n**Please note that at the time of writing, much of the information found on the Ghidra server is severely outdated**. Generally, the source code found in this repository represents the latest \"source of truth\" and should be referenced whenever possible.\n\n## General Guidelines\n\nIf you feel fit to contribute, feel free to create a pull request! Someone will review and merge it (or provide feedback) as soon as possible.\n\nPlease keep your pull requests small and understandable; you may be able to shoot ahead and make a lot of progress in a short amount of time, but this is a collaborative project, so you must allow others to catch up and follow along. Large pull requests become significantly more unwieldy to review, and as such make it exponentially more likely for a mistake or error to go undetected. They also make it harder to merge other pull requests because the more files you modify, the more likely it is for a merge conflict to occur. A general guideline is to keep submissions limited to one class at a time. Sometimes two or more classes may be too interlinked for this to be feasible, so this is not a hard rule, however if your PR is starting to modify more than 10 or so files, it's probably getting too big.\n\nThis repository currently has only one goal: accuracy to the original executables. We are byte/instruction matching as much as possible, which means the priority is making the original compiler (MSVC 4.20) produce code that matches the original game. As such, modernizations and bug fixes will probably be rejected for the time being.\n\n## Overview\n\n* [`3rdparty`](/3rdparty): Contains code obtained from third parties, not including Mindscape. Generally, these are libraries that have been placed in the public domain or are freely available on the web. As these are unaltered files, our style guide (see below) does not apply.\n* [`CONFIG`](/CONFIG): Decompilation of `CONFIG.EXE`. It depends on some code in `LEGO1`.\n* [`ISLE`](/ISLE): Decompilation of `ISLE.EXE`. It depends on some code in `LEGO1`.\n* [`LEGO1`](/LEGO1): Decompilation of `LEGO1.DLL`. This folder contains code from Mindscape's custom in-house engine called **Omni** (file pattern: `mx*`), the LEGO Island-specific extensions for Omni and the game's code (file pattern: `lego*`) as well as several utility libraries developed by Mindscape.\n* [`tools`](/tools): A set of tools aiding in the decompilation effort.\n* [`util`](/util): Utility headers aiding in the decompilation effort.\n\n## Tooling\n\nPlease make yourself familiar with the [available tooling and annotations](/tools/README.md). These are generally required to contribute to the project.\n\n## Notes on MSVC 4.20\n\nAs outlined in the [`README`](/README.md), Microsoft Visual C++ 4.20 is the compiler we use to build the game. \n\nOne important aspect to know about this compiler in the context of the decompilation project is that the assembly code generation is somewhat erratic. We call this peculiarity \"compiler randomness\" or entropy. In essence, what it comes down to is that changes to the code base, for instance in a header, can pseudo-randomly affect the code generation of functions in compilation units that include this header, even if the changes are completely unrelated to those functions. For example, by adding an extra (unused) inline function or an enum declaration in a header, the code in some functions may unexpectedly wind up looking different and our main tool, [`reccmp`](/tools/README.md), will report either a (significantly) reduced or increased accuracy for those functions. This issue roughly affects around ~5% of all decompiled functions.\n\nWe are currently unaware of the exact nature of this phenomenon. Unfortunately it represents a significant obstacle in our effort to achieve 100% matching binaries. If you or anyone you know has knowledge about the compiler internals that lead to the described observations, please contact us.\n\n## Code Style\n\nIn general, we're not exhaustively strict about coding style, but there are some preferable guidelines to follow that have been adopted from what we know about the original codebase:\n\n### Formatting\n\nWe are currently using [clang-format](https://clang.llvm.org/docs/ClangFormat.html) and [clang-tidy](https://clang.llvm.org/extra/clang-tidy/) with configuration files that aim to replicate the code formatting employed by the original developers. There are [integrations](https://clang.llvm.org/docs/ClangFormat.html#vim-integration) available for most editors and IDEs. The required `clang` toolchain version is `18.x`.\n\n### Naming conventions\n\nWe are currently using a customized version of [ncc](https://github.com/nithinn/ncc) with a configuration file that aims to replicate the naming conventions employed by the original developers. `ncc` requires Clang `16.x`; please refer to the [tool](/tools/ncc) and the [GitHub action](/.github/workflows/naming.yml) for guidance.\n\n## Questions?\n\nFor any further questions, feel free to ask in either the [Matrix chatroom](https://matrix.to/#/#isledecomp:matrix.org) or on the [forum](https://forum.mattkc.com/viewforum.php?f=1).\n"
        },
        {
          "name": "ISLE",
          "type": "tree",
          "content": null
        },
        {
          "name": "LEGO1",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.736328125,
          "content": "# LEGO Island Decompilation\n\n[Development Vlog](https://www.youtube.com/playlist?list=PLbpl-gZkNl2COf_bB6cfgTapD5WduAfPz) | [Contributing](/CONTRIBUTING.md) | [Matrix](https://matrix.to/#/#isledecomp:matrix.org) | [Forums](https://forum.mattkc.com/viewforum.php?f=1) | [Patreon](https://www.patreon.com/mattkc)\n  \nThis is a functionally complete decompilation of LEGO Island (Version 1.1, English). It aims to be as accurate as possible, matching the recompiled instructions to the original machine code as much as possible. The goal is to provide a workable codebase that can be modified, improved, and ported to other platforms later on.\n\n## Status\n\n<img src=\"https://legoisland.org/progress/ISLEPROGRESS.SVG\" width=\"50%\"><img src=\"https://legoisland.org/progress/LEGO1PROGRESS.SVG\" width=\"50%\">\n\nBoth `ISLE.EXE` and `LEGO1.DLL` are completely decompiled and, to the best of our knowledge, are functionally identical to the originals. However, work is still ongoing to improve the accuracy, naming, documentation, and structure of the source code. While there may still be unresolved bugs that are not present in retail, the game should be fully playable with the binaries derived from this source code.\n\nDue to various complexities with regard to the compiler, these binaries are not a byte-for-byte match of the original executables. We remain hopeful that this can be resolved at some point.\n\n## Building\n\nThis project uses the [CMake](https://cmake.org/) build system, which allows for a high degree of versatility regarding compilers and development environments. For the most accurate results, Microsoft Visual C++ 4.20 (the same compiler used to build the original game) is recommended. Since we're trying to match the output of this code to the original executables as closely as possible, all contributions will be graded with the output of this compiler.\n\n\nThese instructions will outline how to compile this repository using Visual C++ 4.2 into highly-accurate binaries where the majority of functions are instruction-matching with retail. If you wish, you can try using other compilers, but this is at your own risk and won't be covered in this guide.\n\n#### Prerequisites\n\nYou will need the following software installed:\n\n- Microsoft Visual C++ 4.2. This can be found on many abandonware sites, but the installer can be a little iffy on modern versions of Windows. For convenience, a [portable version](https://github.com/itsmattkc/msvc420) is available that can be downloaded and used quickly instead.\n- [CMake](https://cmake.org/). A copy is often included with the \"Desktop development with C++\" workload in newer versions of Visual Studio; however, it can also be installed as a standalone app.\n\n#### Compiling\n\n1. Open a Command Prompt (`cmd`).\n1. From Visual C++ 4.2, run `BIN/VCVARS32.BAT x86` to populate the path and other environment variables for compiling with MSVC.\n1. Make a folder for compiled objects to go, such as a `build` folder inside the source repository (the folder you cloned/downloaded to).\n1. In your Command Prompt, `cd` to the build folder.\n1. Configure the project with CMake by running:\n```\ncmake <path-to-source> -G \"NMake Makefiles\" -DCMAKE_BUILD_TYPE=RelWithDebInfo\n```\n  - **Visual C++ 4.2 has issues with paths containing spaces**. If you get configure or build errors, make sure neither CMake, the repository, nor Visual C++ 4.2 is in a path that contains spaces.\n  - Replace `<path-to-source>` with the source repository. This can be `..` if your build folder is inside the source repository.\n  - `RelWithDebInfo` is recommended because it will produce debug symbols useful for further decompilation work. However, you can change this to `Release` if you don't need them. While `Debug` builds can be compiled and used, they are not recommended as the primary goal is to match the code to the original binary. This is because the retail binaries were compiled as `Release` builds.\n  - `NMake Makefiles` is most recommended because it will be immediately compatible with Visual C++ 4.2. For faster builds, you can use `Ninja` (if you have it installed), however due to limitations in Visual C++ 4.2, you can only build `Release` builds this way (debug symbols cannot be generated with `Ninja`).\n1. Build the project by running `nmake` or `cmake --build <build-folder>`\n1. When this is done, there should be a recompiled `ISLE.EXE` and `LEGO1.DLL` in the build folder.\n1. Note that `nmake` must be run twice under certain conditions, so it is advisable to always (re-)compile using `nmake && nmake`.\n\nIf you have a CMake-compatible IDE, it should be pretty straightforward to use this repository, as long as you can use `VCVARS32.BAT` and set the generator to `NMake Makefiles`.\n\n### Docker\n\nAlternatively, we support Docker as a method of compilation. This is ideal for users on Linux and macOS who do not wish to manually configure a Wine environment for compiling this project.\n\nCompilation should be as simple as configuring and running the following command:\n\n```\ndocker run -d \\\n\t-e CMAKE_FLAGS=\"-DCMAKE_BUILD_TYPE=RelWithDebInfo\" \\\n\t-v <path-to-source>:/isle:rw \\\n\t-v <build-folder>:/build:rw \\\n\tghcr.io/isledecomp/isle:latest\n```\n\n`<path-to-source>` should be replaced with the path to the source code directory (ie: the root of this repository).\n`<build-folder>` should be replaced with the path to the build folder you'd like CMake to use during compilation.\n\nYou can pass as many CMake flags as you'd like in the `CMAKE_FLAGS` environment variable, but the default configuration provided in the command is already ideal for building highly-accurate binaries.\n\n## Usage\n\nThe simplest way to use the recompiled binaries is to swap the original executables (`ISLE.EXE`, `LEGO1.DLL`, and `CONFIG.EXE`) in LEGO Island's installation directory for the ones that you've built from this source code. By default, LEGO Island is installed to `C:\\Program Files\\LEGO Island` on 32-bit operating systems and `C:\\Program Files (x86)\\LEGO Island` on 64-bit operating systems.\n\nFor advanced users, you can get LEGO Island to run from anywhere as long as `ISLE.EXE` and `LEGO1.DLL` are in the same directory and the `cdpath` and `diskpath` registry keys (usually found in `HKEY_LOCAL_MACHINE\\Software\\Mindscape\\LEGO Island` on 32-bit operating systems and `HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Mindscape\\LEGO Island` on 64-bit operating systems) point to the correct location for the asset files (the directory that contains the `LEGO` folder).\n\nIf you see an error about `d3drm.dll`, you will need to acquire a copy and place it in the same directory as the game executables, as it has not shipped with Windows since Windows XP. We have published a [known good copy here](https://legoisland.org/download/d3drm.zip) that works with LEGO Island.\n\n## Contributing\n\nIf you're interested in helping or contributing to this project, check out the [CONTRIBUTING](/CONTRIBUTING.md) page.\n\n## Additional Information\n\n### Which version of LEGO Island do I have?\n\nRight click on `LEGO1.DLL`, select `Properties`, and switch to the `Details` tab. Under `Version` you should either see `1.0.0.0` (1.0) or `1.1.0.0` (1.1). Additionally, you can look at the game disc files; 1.0's files will all say August 8, 1997, and 1.1's files will all say September 8, 1997. Version 1.1 is by far the most common, especially if you're not using the English or Japanese versions, so that's most likely the version you have.\n\nPlease note that some localized versions of LEGO Island were recompiled with small changes despite maintaining a version number parallel with other versions; this decompilation specifically targets the English release of version 1.1 of LEGO Island. You can verify you have the correct version using the checksums below:\n\n* ISLE.EXE `md5: f6da12249e03eed1c74810cd23beb9f5`\n* LEGO1.DLL `md5: 4e2f6d969ea2ef8655ba3fc221a0c8fe`\n* CONFIG.EXE `md5: 92d958a64a273662c591c88b09100f4a`\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[flake8]\nmax-line-length = 120\n"
        },
        {
          "name": "reccmp-project.yml",
          "type": "blob",
          "size": 1,
          "content": "targets:\n  ISLE:\n    filename: ISLE.EXE\n    source-root: .\n    hash:\n      sha256: 5cf57c284973fce9d14f5677a2e4435fd989c5e938970764d00c8932ed5128ca\n  LEGO1:\n    filename: LEGO1.DLL\n    source-root: LEGO1\n    hash:\n      sha256: 14645225bbe81212e9bc1919cd8a692b81b8622abb6561280d99b0fc4151ce17\n  CONFIG:\n    filename: CONFIG.EXE\n    source-root: .\n    hash:\n      sha256: 864766d024d78330fed5e1f6efb2faf815f1b1c3405713a9718059dc9a54e52c\n  BETA10:\n    filename: BETA10.DLL\n    source-root: LEGO1\n    hash:\n      sha256: d91435a40fa31f405fba33b03bd3bd40dcd4ca36ccf8ef6162c6c5ca0d7190e7\n    ghidra:\n      ignore-types:\n        # these classes have been changed by hand to account for changes between LEGO1 and BETA10\n        - Act2Actor\n        - Act2Brick\n        - LegoAct2\n        - LegoCarBuild\n        - LegoCarBuildAnimPresenter\n        - LegoRace\n        - LegoWorld\n      ignore-functions:\n        # strcpy, strlen, ... (arguments are imported incorrectly)\n        - 0x100f8ad0\n        - 0x100fa200\n        - 0x100f9780\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}