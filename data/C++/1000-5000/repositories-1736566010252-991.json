{
  "metadata": {
    "timestamp": 1736566010252,
    "page": 991,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "toggl-open-source/toggldesktop",
      "stars": 1864,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.455078125,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* -text\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.984375,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n*.so.*\nthird_party/*.dylib\n\n# Compiled Static libraries\n*.lai\n*.la\nthird_party/*.a\n\n# Pod macOS\nsrc/ui/osx/Pods/\n\ntmp/*\nbuild/*\nsrc/lib/osx/build\nsrc/ui/*/TogglDesktop/build/\nsrc/ui/*/TogglDesktop/bin/\ntoggl\ntest/*\n*.bak\n\nthird_party/bugsnag-qt/.git\nthird_party/bugsnag-qt/build\nthird_party/bugsnag-qt/moc_*.h\n\nthird_party/openssl/**/*.o-*\nthird_party/openssl/stnrUhYw\nthird_party/openssl/Makefile*\nthird_party/openssl/test/*test\nthird_party/openssl/*/lib\nthird_party/openssl/*/*/lib\nthird_party/openssl/**/*.bak\nthird_party/openssl/apps/openssl\nthird_party/openssl/crypto/buildinf.h\nthird_party/openssl/test/sha*t\nthird_party/openssl/crypto/**/*.s\nthird_party/openssl/MINFO\nthird_party/openssl/inc32\nthird_party/openssl/ms/bcb.mak\nthird_party/openssl/ms/libeay32.def\nthird_party/openssl/ms/nt.mak\nthird_party/openssl/ms/ntdll.mak\nthird_party/openssl/ms/ssleay32.def\nthird_party/openssl/ms/version32.def\nthird_party/openssl/ms/version32.rc\nthird_party/openssl/crypto/x86_64cpuid.s\n/\n*.0\n*.pc\n*.time\n\n.dep\n\n*.db\n*.db-wal\n*.db-shm\n\n\n.DS_Store\n*.xcuserstate\n*.xcuserdatad/\n*.log\n*.zip\nTogglDesktop.app\n\ncoverage\n\nthird_party/TFDatePicker/TFDatePicker/build/\n\n*.obj\n*.tlog\n*.exe\n*.idb\n*.pch\n\ntmp32\nobj\nobj64\n\n# IntelliJ/Rider cache\n.idea\n\n# Visual Studio cache\n.vs\n\nsrc/ui/windows/**/bin\nsrc/ui/windows/TogglDesktop/TogglDesktop.Package/AppPackages\nsrc/ui/windows/TogglDesktop/TogglDesktop.Package/BundleArtifacts\nsrc/ui/windows/TogglDesktop/TogglDesktop.Package/Release\nsrc/ui/windows/TogglDesktop/TogglDesktop.Package/_pkginfo.txt\nsrc/ui/windows/TogglDesktop/Release\nsrc/ui/windows/TogglDesktop/x64/Release\nsrc/lib/windows/**/bin\nsrc/lib/windows/**/Debug\nsrc/lib/windows/**/Release\nsrc/lib/windows/**/StoreRelease\nsrc/lib/windows/**/StoreDebug\n\n*.dSYM\n\nthird_party/plcrashreporter/build\n\n*.sdf\n*.opensdf\n*.suo\n*.vcxproj.user\n*.csproj.user\n*.wapproj.user\n\nCMakeLists.txt.user*\n\nthird_party/google-astyle/build/\n\nout32dll\ntmp32dll\n\nipch\n\n# Nuget\nsrc/ui/windows/TogglDesktop/packages\n\n# QT projects\nbuild-*-Debug\n*.pro.user\n.qmake.stash\n\n# QT project specific\nsrc/ui/linux/TogglDesktop/TogglDesktop\nsrc/ui/linux/TogglDesktop/ui_*.h\nsrc/ui/linux/TogglDesktop/moc_*.cpp\nsrc/ui/linux/TogglDesktop/moc_*.h\nsrc/ui/linux/TogglDesktop/cacert.pem\n\n# qt generated makefiles\nsrc/ui/linux/TogglDesktop/Makefile\nsrc/lib/linux/TogglDesktopLibrary/Makefile\n\n# qt generated resources\nqrc_*.*\n\n# installer\nsrc/branding/\ndeb\n*.deb\nrpm\n*.tar.gz\n*.dmg\n\n# built lua\nthird_party/lua-5.2.3/src/lua\nthird_party/lua-5.2.3/src/luac\n\n# code coverage\napp.info\n\n*.autosave\n\n# packaged build\nout\n\n# Built Lua\nthird_party/lua/src/lua\nthird_party/lua/src/luac\nthird_party/lua/install\n\n# Sublime text\n*.sublime-workspace\n*.sublime-project\n\n# Qt Creator\n.*.swp\n\n# poco binaries\nthird_party/poco/bin\nthird_party/poco/bin64\nthird_party/poco/lib\nthird_party/poco/lib64\n\n# autogenerated files\nthird_party/poco/Foundation/src/pocomsg.h\nthird_party/poco/Foundation/src/pocomsg.rc\n\n# Resharper user settings\n*.DotSettings.user\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.7998046875,
          "content": "Alari Aho <alari@toggl.com>\nErvin Weber <ervin@toggl.com>\nIndrek Vändrik <indzuliin@gmail.com>\nIndrek Vändrik <indzuliin@gmail.com>\tIndrek Vändrik <indrek@toggl.com>\nIndrek Vändrik <indzuliin@gmail.com>\tIndrek Vändrik <indrekv@batman.lan>\nIndrek Vändrik <indzuliin@gmail.com>\tIndrekV <indzuliin@gmail.com>\nMarcel Schaeben <mts@geraet.lan>\nMarko Burjek <s0mebody.slo@gmail.com>\nMathias Larsen <tripox@tripox.dk>\nSam Ford <sam@quietstuff.com>\nTambet Masik <tambet@toggl.com>\nTanel Lebedev <tanel.lebedev@gmail.com>\nTanel Lebedev <tanel.lebedev@gmail.com>\t\tTanel Lebedev <tanellebedev@Tanels-MBP.lan>\nTanel Lebedev <tanel.lebedev@gmail.com>\t\tbuildbot <buildbot@localhost.localdomain>\nTanel Lebedev <tanel.lebedev@gmail.com>\t\t= <tanel.lebedev@gmail.com>\nPaul Scharf <amul@amulware.net>\t\t\tamulware <amul@amulware.net>\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.48046875,
          "content": "language: cpp\ncompiler:\n  - gcc\n  - clang\ninstall: make deps > /dev/null\nscript:\n  - source /opt/qt55/bin/qt55-env.sh && make clean && make qa\nbranches:\n  only:\n    - master\nnotifications:\n  recipients:\n    - tanel.lebedev@gmail.com\n  email:\n    on_success: change\n    on_failure: always\nbefore_install:\n  - sudo apt-get install lcov\n  - sudo apt-add-repository -y ppa:beineri/opt-qt55\n  - sudo apt-get -qq update\n  - sudo apt-get -qq install qt55tools qt55svg qt55webkit libxss-dev xorg-dev\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.359375,
          "content": "Alari Aho <alari@toggl.com>\nCody Boisclair <cody@zone38.net>\nErvin Weber <ervin@toggl.com>\nIndrek Vändrik <indzuliin@gmail.com>\nMarcel Schaeben <mts@geraet.lan>\nMarko Burjek <s0mebody.slo@gmail.com>\nMathias Larsen <tripox@tripox.dk>\nPaul Scharf <amul@amulware.net>\nSam Ford <sam@quietstuff.com>\nTambet Masik <tambet@toggl.com>\nTanel Lebedev <tanel.lebedev@gmail.com>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.8916015625,
          "content": "cmake_minimum_required(VERSION 3.2)\nproject(TogglDesktop)\n\nset(CMAKE_CXX_STANDARD 17)\n\n# Set up automatic resource generation to make Qt development easier\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTOUIC ON)\nset(CMAKE_AUTORCC ON)\n\nset(TOGGL_VERSION \"7.0.0\" CACHE STRING \"TogglDesktop version string\")\nset(TOGGL_VERSION_RELEASE_DATE \"1970-01-01\" CACHE STRING \"TogglDesktop version release date string\")\nset(TOGGL_VERSION_DESCRIPTION \"<p>With this update, Toggl Desktop brings general bug fixes and usability improvements</p>\" CACHE STRING \"TogglDesktop version description\")\nset(TOGGL_BUILD_TYPE \"manual\" CACHE STRING \"Build type (manual/flatpak/snap/deb/...)\")\noption(TOGGL_BUILD_TESTS \"Build tests\" ON)\noption(TOGGL_PRODUCTION_BUILD \"Use production servers in the app\" OFF)\noption(TOGGL_ALLOW_UPDATE_CHECK \"Allow the app to check for updates\" OFF)\noption(USE_BUNDLED_LIBRARIES \"Prefer bundled libraries to bundled ones\" OFF)\noption(INSTALL_HIRES_ICONS \"Do not install icons over 512x512\" OFF)\n\nset(ENV{OPENSSL_ROOT_DIR} ${OPENSSL_ROOT_DIR})\nif (NOT \"${OPENSSL_ROOT_DIR}\" STREQUAL \"\")\n    include_directories(\"${OPENSSL_ROOT_DIR}/include\")\nendif()\n\nif (\"${TOGGL_VERSION}\" STREQUAL \"7.0.0\")\n    find_package (Git)\n    if (GIT_FOUND)\n        message(\"git found: ${GIT_EXECUTABLE} in version ${GIT_VERSION_STRING}\")\n        execute_process(\n            COMMAND ${GIT_EXECUTABLE} --git-dir=${CMAKE_SOURCE_DIR}/.git --work-tree=${CMAKE_SOURCE_DIR} describe --tags\n            RESULT_VARIABLE RESULT_GIT\n            OUTPUT_VARIABLE OUTPUT_GIT\n            ERROR_VARIABLE ERROR_GIT)\n        string (REGEX REPLACE \"^v\" \"\" OUTPUT_GIT \"${OUTPUT_GIT}\")\n        string (REGEX REPLACE \"-([0-9]+)-.*\" \".\\\\1\" OUTPUT_GIT \"${OUTPUT_GIT}\")\n        string (REGEX REPLACE \"\\n\" \"\"  TOGGL_VERSION \"${OUTPUT_GIT}\")\n        if (\"${TOGGL_VERSION}\" STREQUAL \"\")\n            message(WARNING \"Version was not set by the user and it could not be retrieved from git - it will default to 7.0.0.\")\n            set (TOGGL_VERSION \"7.0.0\")\n        endif()\n    else(GIT_FOUND)\n        message(WARNING \"Version was not set by the user and it could not be retrieved from git - it will default to 7.0.0.\")\n    endif (GIT_FOUND)\nendif()\n\n# Use PkgConfig to look for packages without native CMake support\ninclude(FindPkgConfig)\n\n# Look for Qt\nfind_package(Qt5Widgets CONFIG REQUIRED)\nfind_package(Qt5DBus CONFIG REQUIRED)\nfind_package(Qt5Network CONFIG REQUIRED)\nfind_package(Qt5NetworkAuth CONFIG REQUIRED)\n# We need to include private headers manually\ninclude_directories( ${Qt5Widgets_PRIVATE_INCLUDE_DIRS} )\nif (UNIX AND NOT APPLE)\n    find_package(Qt5X11Extras CONFIG REQUIRED)\nendif()\n\nif(NOT USE_BUNDLED_LIBRARIES)\n    # Look for Poco\n    find_package(Poco COMPONENTS Crypto DataSQLite NetSSL)\n\n    # Look for JSON\n    find_package(jsoncpp CONFIG)\n    if(jsoncpp_FOUND)\n        set(JSONCPP_LIBRARIES jsoncpp_lib)\n    endif()\n\n    # Look for Qxt\n    pkg_search_module(QXT_CORE QxtCore-qt5)\n    pkg_search_module(QXT_WIDGETS QxtWidgets-qt5)\n    set(QXT_LIBRARIES\n        ${QXT_CORE_LIBRARIES} \n        ${QXT_WIDGETS_LIBRARIES}\n    )\n    set(QXT_INCLUDE_DIRS\n        ${QXT_CORE_INCLUDE_DIRS} ${QXT_WIDGETS_INCLUDE_DIRS}\n    )\nendif()\n\n\nset(TOGGLDESKTOP_BUILDROOT\n    ${CMAKE_CURRENT_BINARY_DIR}/buildroot\n)\n\nset(TOGGL_BINARY_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE STRING \"Binary install directory\")\nset(TOGGL_DATA_DIR \"${CMAKE_INSTALL_PREFIX}/share/toggldesktop\" CACHE STRING \"Runtime data install directory\")\nset(TOGGL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE STRING \"Library install directory\")\nset(TOGGL_INTERNAL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE STRING \"Bundled library install directory\")\nset(CMAKE_INSTALL_RPATH \"${TOGGL_LIB_DIR};${TOGGL_INTERNAL_LIB_DIR}\" CACHE STRING \"Custom RPATH for the binaries and libraries\")\n\nadd_subdirectory(third_party)\nadd_subdirectory(src)\nif (TOGGL_BUILD_TESTS)\n    add_subdirectory(src/test)\nendif()\nadd_subdirectory(src/ui/linux/TogglDesktop)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4384765625,
          "content": "Copyright (c) 2019, TOGGL LLC\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the TOGGL LLC nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 17.076171875,
          "content": "$(shell mkdir -p build/test build/test src/lib/osx/build)\n\npwd=$(shell pwd)\nuname=$(shell uname)\narchitecture=$(shell uname -m)\ntimestamp=$(shell date \"+%Y-%m-%d-%H-%M-%S\")\n\nrootdir=$(shell pwd)\npocodir=third_party/poco\nopenssldir=third_party/openssl\njsoncppdir=third_party/jsoncpp/dist\npocoversion=$(shell cat third_party/poco/libversion)\nmacosdir=src/ui/osx\nGTEST_ROOT=third_party/googletest-read-only\n\nsource_dirs=src/*.cc src/*.h src/test/*.cc src/test/*.h \\\n\tsrc/ui/linux/TogglDesktop/aboutdialog.h src/ui/linux/TogglDesktop/aboutdialog.cpp \\\n\tsrc/ui/linux/TogglDesktop/autocompleteview.h src/ui/linux/TogglDesktop/autocompleteview.cpp \\\n\tsrc/ui/linux/TogglDesktop/clickablelabel.h src/ui/linux/TogglDesktop/clickablelabel.cpp \\\n\tsrc/ui/linux/TogglDesktop/errorviewcontroller.h src/ui/linux/TogglDesktop/errorviewcontroller.cpp \\\n\tsrc/ui/linux/TogglDesktop/feedbackdialog.h src/ui/linux/TogglDesktop/feedbackdialog.cpp \\\n\tsrc/ui/linux/TogglDesktop/genericview.h src/ui/linux/TogglDesktop/genericview.cpp \\\n\tsrc/ui/linux/TogglDesktop/loginwidget.h src/ui/linux/TogglDesktop/loginwidget.cpp \\\n\tsrc/ui/linux/TogglDesktop/main.cpp \\\n\tsrc/ui/linux/TogglDesktop/mainwindowcontroller.h src/ui/linux/TogglDesktop/mainwindowcontroller.cpp \\\n\tsrc/ui/linux/TogglDesktop/preferencesdialog.h src/ui/linux/TogglDesktop/preferencesdialog.cpp \\\n\tsrc/ui/linux/TogglDesktop/settingsview.h src/ui/linux/TogglDesktop/settingsview.cpp \\\n\tsrc/ui/linux/TogglDesktop/singleapplication.h src/ui/linux/TogglDesktop/singleapplication.cpp \\\n\tsrc/ui/linux/TogglDesktop/timeentrycellwidget.h src/ui/linux/TogglDesktop/timeentrycellwidget.cpp \\\n\tsrc/ui/linux/TogglDesktop/timeentryeditorwidget.h src/ui/linux/TogglDesktop/timeentryeditorwidget.cpp \\\n\tsrc/ui/linux/TogglDesktop/timeentrylistwidget.h src/ui/linux/TogglDesktop/timeentrylistwidget.cpp \\\n\tsrc/ui/linux/TogglDesktop/timeentryview.h src/ui/linux/TogglDesktop/timeentryview.cpp \\\n\tsrc/ui/linux/TogglDesktop/timerwidget.h src/ui/linux/TogglDesktop/timerwidget.cpp \\\n\tsrc/ui/linux/TogglDesktop/toggl.h src/ui/linux/TogglDesktop/toggl.cpp\n\nxcodebuild_command=xcodebuild \\\n\t\t\t\t  -scheme TogglDesktop \\\n\t\t\t\t  -workspace src/ui/osx/TogglDesktop.xcworkspace  \\\n\t\t\t\t  -configuration Debug\nxcodebuild_command_release=xcodebuild \\\n\t\t\t\t  -scheme TogglDesktop \\\n\t\t\t\t  -workspace src/ui/osx/TogglDesktop.xcworkspace  \\\n\t\t\t\t  -configuration Release\n\nifeq ($(uname), Linux)\nexecutable=./build/src/ui/linux/TogglDesktop/TogglDesktop\nelse\nexecutable=$(shell $(xcodebuild_command) \\\n\t\t\t -showBuildSettings \\\n \t\t\t| grep -w 'BUILT_PRODUCTS_DIR' \\\n \t\t\t| cut -d'=' -f 2)/TogglDesktop.app/Contents/MacOS/TogglDesktop\nendif\nexecutable_release=$(shell $(xcodebuild_command_release) \\\n\t\t\t -showBuildSettings \\\n\t\t\t| grep -w 'BUILT_PRODUCTS_DIR' \\\n\t\t\t| cut -d'=' -f 2)/TogglDesktop.app/Contents/MacOS/TogglDesktop\npocolib=$(pocodir)/lib/Darwin/x86_64/\nosname=mac\n\npococflags = \\\n\t-I$(pocodir)/Foundation/include \\\n\t-I$(pocodir)/Util/include \\\n\t-I$(pocodir)/Data/include \\\n\t-I$(pocodir)/Data/SQLite/include \\\n\t-I$(pocodir)/Crypto/include \\\n\t-I$(pocodir)/Net/include \\\n\t-I$(pocodir)/NetSSL_OpenSSL/include\n\npocolibs = -L$(pocolib)\n\npococonfigure = --cflags=-fPIC --sqlite-thread-safe=1\n\npocolibs += \\\n\t-lPocoDataSQLite \\\n\t-lPocoData \\\n\t-lPocoNet \\\n\t-lPocoNetSSL \\\n\t-lPocoCrypto \\\n\t-lPocoUtil \\\n\t-lPocoXML \\\n\t-lPocoJSON \\\n\t-lPocoFoundation\n\nopensslincdirname = include\n\nopensslcflags = -I$(openssldir)/$(opensslincdirname)\nopenssllibs = -L$(openssldir)\nopensslconfigure = --include-path=$(pwd)/$(openssldir)/$(opensslincdirname) --library-path=$(pwd)/$(openssldir)\n\ncflags=-g -Wall -Wextra -Wno-deprecated -Wno-unused-parameter -Wunreachable-code -DLUA_USE_MACOSX \\\n\t-mmacosx-version-min=10.11 \\\n\t$(pococflags) $(opensslcflags) \\\n\t-I$(GTEST_ROOT)/include \\\n\t-I$(GTEST_ROOT) \\\n\t-I$(jsoncppdir) \\\n\t-Ithird_party/lua/install/include \\\n\t-DNDEBUG\n\nlibs=-framework Carbon \\\n\t$(pocolibs) \\\n\t-lpthread \\\n\t$(openssllibs) \\\n\t-lssl \\\n\t-lcrypto \\\n  -Lthird_party/lua/install/lib \\\n\t-llua \\\n\t-ldl\n\ncxx=g++ -fprofile-arcs -ftest-coverage -std=gnu++0x\n\nUNAME_S := $(shell uname -s)\nifeq ($(UNAME_S),Darwin)\ndefault: fmt app\nelse\ndefault:\n\t$(error this platform is not supported by Makefile.)\nendif\n\ncsapi: generate_cs_api fmt\n\ngenerate_cs_api:\n\tgo run src/script/generate_cs_api.go\n\nclean: clean_ui clean_lib clean_test\n\trm -rf build coverage\n\nclean_lib:\n\trm -rf src/lib/osx/build\n\nclean_ui:\n\trm -rf src/ui/osx/TogglDesktop/build third_party/TFDatePicker/TFDatePicker/build TogglDesktop*.dmg TogglDesktop*.tar.gz\n\nclean_test:\n\trm -rf test/*\n\tmkdir -p test\n\nlint:\n\t./third_party/cpplint/cpplint.py $(source_dirs)\n\ncppclean:\n\t./third_party/cppclean/cppclean -q --include-path=src/lib/include --include-path=third_party/poco/Crypto/include --include-path=third_party/poco/Net/include --include-path=third_party/poco/NetSSL_OpenSSL/include --include-path=third_party/poco/Foundation/include --include-path=third_party/poco/Util/include --include-path=third_party/poco/Data/include --include-path=third_party/poco/Data/SQLite/include --include-path=third_party/poco/Data/SQLite/src --include-path=third_party/lua/install/include src/*.*\n\nqa: lint fmt cppclean test\n\nfmt: fmt_lib fmt_ui\n\nifeq ($(uname), Linux)\napp:\n\tmkdir -p build && cd build && cmake .. && make\nelse\napp: init_cocoapods lib ui\nendif\n\napp_release: lib_release ui_release\n\nlib:\n\txcodebuild -project src/lib/osx/TogglDesktopLibrary.xcodeproj -configuration Debug\nlib_release:\n\txcodebuild -project src/lib/osx/TogglDesktopLibrary.xcodeproj -configuration Release build\n\nui:\n\t$(xcodebuild_command)\nui_release:\n\t$(xcodebuild_command_release)\n\nclean-bugsnag-qt:\n\trm -rf third_party/bugsnag-qt/build && \\\n\tcd third_party/bugsnag-qt && $(QMAKE) && make clean\n\nbugsnag-qt: clean-bugsnag-qt\n\tcd third_party/bugsnag-qt && $(QMAKE) && make\n\nrun: app\n\t$(executable)\n\nrun_release: app_release\n\t$(executable_release)\n\nclean_deps:\n\tcd $(pocodir) && (make clean || true)\n\trm -rf $(pocodir)/**/.dep\n\tcd $(openssldir) && (make clean || true)\n\ndeps: clean_deps openssl poco lua\n\ninit_cocoapods:\n\tcd $(macosdir) && bundle install && bundle exec pod install && cd $(rootdir)\n\nlua:\n\tcd third_party/lua && make macosx && make local\n\nopenssl:\n\tcd $(openssldir) && ./config -fPIC no-shared no-dso && ./Configure darwin64-x86_64-cc && make $(LEGACYMACOSSDK)\n\npoco:\n\tcd $(pocodir) && \\\n\t./configure --config=Darwin64-clang-libc++ --omit=Data/ODBC,Data/MySQL,Zip,JSON,MongoDB,PageCompiler,PageCompiler/File2Page,CppUnit --no-tests --no-samples \\\n\t$(pococonfigure) \\\n\t$(opensslconfigure) \\\n\t&& \\\n\tmake clean && \\\n\tmake $(LEGACYMACOSSDK)\n\nthird_party/google-astyle/build/google-astyle:\n\tcd third_party/google-astyle && mkdir -p build && g++ *.cpp -o build/google-astyle\n\nfmt_lib: third_party/google-astyle/build/google-astyle\n\tthird_party/google-astyle/build/google-astyle -n $(source_dirs)\n\nfmt_ui:\n\t./third_party/Xcode-formatter/CodeFormatter/scripts/formatAllSources.sh src/ui/osx/TogglDesktop\n\tthird_party/google-astyle/build/google-astyle -n src/ui/windows/TogglDesktop/TogglDesktop/TogglApi.cs\n\nbuild/jsoncpp.o: $(jsoncppdir)/jsoncpp.cpp\n\t$(cxx) $(cflags) -c $(jsoncppdir)/jsoncpp.cpp -o build/jsoncpp.o\n\nbuild/proxy.o: src/proxy.cc\n\t$(cxx) $(cflags) -c src/proxy.cc -o build/proxy.o\n\nbuild/netconf.o: src/netconf.cc\n\t$(cxx) $(cflags) -c src/netconf.cc -o build/netconf.o\n\nbuild/https_client.o: src/https_client.cc\n\t$(cxx) $(cflags) -c src/https_client.cc -o build/https_client.o\n\nbuild/websocket_client.o: src/websocket_client.cc\n\t$(cxx) $(cflags) -c src/websocket_client.cc -o build/websocket_client.o\n\nbuild/base_model.o: src/base_model.cc\n\t$(cxx) $(cflags) -c src/base_model.cc -o build/base_model.o\n\nbuild/user.o: src/user.cc\n\t$(cxx) $(cflags) -c src/user.cc -o build/user.o\n\nbuild/workspace.o: src/workspace.cc\n\t$(cxx) $(cflags) -c src/workspace.cc -o build/workspace.o\n\nbuild/client.o: src/client.cc\n\t$(cxx) $(cflags) -c src/client.cc -o build/client.o\n\nbuild/project.o: src/project.cc\n\t$(cxx) $(cflags) -c src/project.cc -o build/project.o\n\nbuild/task.o: src/task.cc\n\t$(cxx) $(cflags) -c src/task.cc -o build/task.o\n\nbuild/obm_action.o: src/obm_action.cc\n\t$(cxx) $(cflags) -c src/obm_action.cc -o build/obm_action.o\n\nbuild/help_article.o: src/help_article.cc\n\t$(cxx) $(cflags) -c src/help_article.cc -o build/help_article.o\n\nbuild/time_entry.o: src/time_entry.cc\n\t$(cxx) $(cflags) -c src/time_entry.cc -o build/time_entry.o\n\nbuild/tag.o: src/tag.cc\n\t$(cxx) $(cflags) -c src/tag.cc -o build/tag.o\n\nbuild/related_data.o: src/related_data.cc\n\t$(cxx) $(cflags) -c src/related_data.cc -o build/related_data.o\n\nbuild/batch_update_result.o: src/batch_update_result.cc\n\t$(cxx) $(cflags) -c src/batch_update_result.cc -o build/batch_update_result.o\n\nbuild/formatter.o: src/formatter.cc\n\t$(cxx) $(cflags) -c src/formatter.cc -o build/formatter.o\n\nbuild/model_change.o: src/model_change.cc\n\t$(cxx) $(cflags) -c src/model_change.cc -o build/model_change.o\n\nbuild/migrations.o: src/migrations.cc\n\t$(cxx) $(cflags) -c src/migrations.cc -o build/migrations.o\n\nbuild/database.o: src/database.cc\n\t$(cxx) $(cflags) -c src/database.cc -o build/database.o\n\nbuild/feedback.o: src/feedback.cc\n\t$(cxx) $(cflags) -c src/feedback.cc -o build/feedback.o\n\nbuild/gui.o: src/gui.cc\n\t$(cxx) $(cflags) -c src/gui.cc -o build/gui.o\n\nbuild/error.o: src/error.cc\n\t$(cxx) $(cflags) -c src/error.cc -o build/error.o\n\nbuild/idle.o: src/idle.cc\n\t$(cxx) $(cflags) -c src/idle.cc -o build/idle.o\n\nbuild/analytics.o: src/analytics.cc\n\t$(cxx) $(cflags) -c src/analytics.cc -o build/analytics.o\n\nbuild/urls.o: src/urls.cc\n\t$(cxx) $(cflags) -c src/urls.cc -o build/urls.o\n\nbuild/timeline_event.o: src/timeline_event.cc\n\t$(cxx) $(cflags) -c src/timeline_event.cc -o build/timeline_event.o\n\nbuild/context.o: src/context.cc\n\t$(cxx) $(cflags) -c src/context.cc -o build/context.o\n\nbuild/rectangle.o: src/rectangle.cc\n\t$(cxx) $(cflags) -c src/rectangle.cc -o build/rectangle.o\n\nbuild/settings.o: src/settings.cc\n\t$(cxx) $(cflags) -c src/settings.cc -o build/settings.o\n\nbuild/autotracker.o: src/autotracker.cc\n\t$(cxx) $(cflags) -c src/autotracker.cc -o build/autotracker.o\n\nbuild/toggl_api_private.o: src/toggl_api_private.cc\n\t$(cxx) $(cflags) -c src/toggl_api_private.cc -o build/toggl_api_private.o\n\nbuild/toggl_api.o: src/toggl_api.cc\n\t$(cxx) $(cflags) -c src/toggl_api.cc -o build/toggl_api.o\n\nbuild/test/test_data.o: src/test/test_data.cc\n\t$(cxx) $(cflags) -c src/test/test_data.cc -o build/test/test_data.o\n\nbuild/test/toggl_api_test.o: src/test/toggl_api_test.cc\n\t$(cxx) $(cflags) -c src/test/toggl_api_test.cc -o build/test/toggl_api_test.o\n\nbuild/test/app_test.o: src/test/app_test.cc\n\t$(cxx) $(cflags) -c src/test/app_test.cc -o build/test/app_test.o\n\nbuild/get_focused_window_$(osname).o: src/get_focused_window_$(osname).cc\n\t$(cxx) $(cflags) -c src/get_focused_window_$(osname).cc -o build/get_focused_window_$(osname).o\n\nbuild/timeline_uploader.o: src/timeline_uploader.cc\n\t$(cxx) $(cflags) -c src/timeline_uploader.cc -o build/timeline_uploader.o\n\nbuild/window_change_recorder.o: src/window_change_recorder.cc\n\t$(cxx) $(cflags) -c src/window_change_recorder.cc -o build/window_change_recorder.o\n\nbuild/color_convert.o: src/color_convert.cc\n\t$(cxx) $(cflags) -c src/color_convert.cc -o build/color_convert.o\n\nbuild/test/gtest-all.o: $(GTEST_ROOT)/src/gtest-all.cc\n\t$(cxx) $(cflags) -c $(GTEST_ROOT)/src/gtest-all.cc -o build/test/gtest-all.o\n\nbuild/onboarding_service.o: src/onboarding_service.cpp\n\t$(cxx) $(cflags) -c src/onboarding_service.cpp -o build/onboarding_service.o\n\t\nbuild/alpha_features.o: src/alpha_features.cpp\n\t$(cxx) $(cflags) -c src/alpha_features.cpp -o build/alpha_features.o\n\nobjects: build/jsoncpp.o \\\n\tbuild/related_data.o \\\n\tbuild/proxy.o \\\n\tbuild/netconf.o \\\n\tbuild/https_client.o \\\n\tbuild/websocket_client.o \\\n\tbuild/base_model.o \\\n\tbuild/user.o \\\n\tbuild/workspace.o \\\n\tbuild/client.o \\\n\tbuild/project.o \\\n\tbuild/task.o \\\n\tbuild/obm_action.o \\\n\tbuild/help_article.o \\\n\tbuild/time_entry.o \\\n\tbuild/tag.o \\\n\tbuild/batch_update_result.o \\\n\tbuild/formatter.o \\\n\tbuild/model_change.o \\\n\tbuild/database.o \\\n\tbuild/feedback.o \\\n\tbuild/error.o \\\n\tbuild/gui.o \\\n\tbuild/idle.o \\\n\tbuild/analytics.o \\\n\tbuild/autotracker.o \\\n\tbuild/settings.o \\\n\tbuild/urls.o \\\n\tbuild/timeline_event.o \\\n\tbuild/migrations.o \\\n\tbuild/context.o \\\n\tbuild/rectangle.o \\\n\tbuild/toggl_api_private.o \\\n\tbuild/toggl_api.o \\\n\tbuild/get_focused_window_$(osname).o \\\n\tbuild/timeline_uploader.o \\\n\tbuild/color_convert.o \\\n\tbuild/window_change_recorder.o \\\n\tbuild/onboarding_service.o \\\n\tbuild/alpha_features.o\n\ntest_objects: build/test/gtest-all.o \\\n\tbuild/test/test_data.o \\\n\tbuild/test/app_test.o \\\n\tbuild/test/toggl_api_test.o\n\nuitest: clean_test\n\t$(executable) \\\n\t\t--script-path $(pwd)/src/test/uitest.lua \\\n\t\t--log-path $(pwd)/test/uitest.log \\\n\t\t--db-path $(pwd)/test/uitest.db\n\ntoggl_test: clean_test objects test_objects\n\tmkdir -p test\n\t$(cxx) -coverage -o test/toggl_test build/*.o build/test/*.o $(libs)\n\ntest_lib: lua toggl_test\n\tcp src/ssl/cacert.pem test/.\n\tcp -r $(pocolib)/* test/.\n\tcp $(openssldir)/libssl.1.1.dylib test/.\n\tcp $(openssldir)/libcrypto.1.1.dylib test/.\n\tinstall_name_tool -change /usr/local/lib/libPocoCrypto.$(pocoversion).dylib @loader_path/libPocoCrypto.$(pocoversion).dylib test/libPocoNetSSL.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoCrypto.$(pocoversion).dylib @loader_path/libPocoCrypto.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoData.$(pocoversion).dylib @loader_path/libPocoData.$(pocoversion).dylib test/libPocoDataSQLite.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoData.$(pocoversion).dylib @loader_path/libPocoData.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoData.$(pocoversion).dylib @loader_path/libPocoData.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoDataSQLite.$(pocoversion).dylib @loader_path/libPocoDataSQLite.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoCrypto.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoData.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoDataSQLite.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoNet.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoNetSSL.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoUtil.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoXML.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoFoundation.$(pocoversion).dylib @loader_path/libPocoFoundation.$(pocoversion).dylib test/libPocoJSON.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoJSON.$(pocoversion).dylib @loader_path/libPocoJSON.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoNet.$(pocoversion).dylib @loader_path/libPocoNet.$(pocoversion).dylib test/libPocoNetSSL.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoNet.$(pocoversion).dylib @loader_path/libPocoNet.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoNetSSL.$(pocoversion).dylib @loader_path/libPocoNetSSL.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoUtil.$(pocoversion).dylib @loader_path/libPocoUtil.$(pocoversion).dylib test/libPocoNetSSL.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoUtil.$(pocoversion).dylib @loader_path/libPocoUtil.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoXML.$(pocoversion).dylib @loader_path/libPocoXML.$(pocoversion).dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libPocoXML.$(pocoversion).dylib @loader_path/libPocoXML.$(pocoversion).dylib test/libPocoUtil.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libPocoJSON.$(pocoversion).dylib @loader_path/libPocoJSON.$(pocoversion).dylib test/libPocoUtil.$(pocoversion).dylib\n\tinstall_name_tool -change /usr/local/lib/libssl.1.1.dylib @loader_path/libssl.1.1.dylib test/toggl_test\n\tinstall_name_tool -change /usr/local/lib/libcrypto.1.1.dylib @loader_path/libcrypto.1.1.dylib test/toggl_test\n\tcd test && ./toggl_test --gtest_shuffle\n\ntest: test_lib\n\nlcov: test\n\tlcov -q -d . -c -o app.info\n\tgenhtml -q -o coverage app.info\n\ncoverage: lcov\n\t@echo \"open coverage/index.html to view coverage report\"\n\nloco:\n\txcodebuild -exportLocalizations -localizationPath src/ui/osx/localization -project src/ui/osx/TogglDesktop/TogglDesktop.xcodeproj -exportLanguage et\n\npackage:\n\t./src/ui/linux/package.sh\n\nauthors:\n\tgit log --all --format='%aN <%cE>' | sort -u > AUTHORS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4853515625,
          "content": "### ⚠️ Project Status: Superseded by new rewritten apps.\n\nWe have rewritten our MacOS and Windows apps and for that reason **we will no longer implement nor accept pull requests** implementing new features in this repository.\n\nIf you'd like to try these rewritten native apps, visit:\n\n* [ ] 🍏 [MacOS Toggl Track](https://toggl.com/track/time-tracking-mac)\n* [ ] 🖥 [Windows Toggl Track](https://toggl.com/track/time-tracking-windows/)\n\n<h1></h1>\n\n<h1 align=\"center\">\n  <a href=\"https://toggl.com\"><img src=\"https://raw.githubusercontent.com/toggl-open-source/toggldesktop/gh-pages/assets/toggl-track-wide.png\" alt=\"Toggl Track\"></a>\n</h1>\n\n<h4 align=\"center\">Native desktop applications for the leading time tracking tool <a href=\"https://toggl.com\" target=\"_blank\">Toggl</a>.</h4>\n\n<p align=\"center\">\n    <a href=\"https://github.com/toggl-open-source/toggldesktop/commits/master\">\n    <img src=\"https://img.shields.io/github/last-commit/toggl-open-source/toggldesktop.svg?style=flat&logo=github&logoColor=white\"\n         alt=\"GitHub last commit\">\n    <a href=\"https://github.com/toggl/toggldesktop/issues\">\n    <img src=\"https://img.shields.io/github/issues-raw/toggl-open-source/toggldesktop.svg?style=flat&logo=github&logoColor=white\"\n         alt=\"GitHub issues\">\n    <a href=\"https://github.com/toggl/toggldesktop/pulls\">\n    <img src=\"https://img.shields.io/github/issues-pr-raw/toggl-open-source/toggldesktop.svg?style=flat&logo=github&logoColor=white\"\n         alt=\"GitHub pull requests\">\n    <img src=\"https://img.shields.io/badge/licence-BSD--3-green\"\n         alt=\"Licence BSD-3\">\n</p>\n\n<p align=\"center\">\n  <a href=\"#about\">About</a> •\n  <a href=\"#download\">Download</a> •\n  <a href=\"#build\">Build</a> •\n  <a href=\"#change-log\">Change log</a> •\n  <a href=\"#contribute\">Contribute</a>\n</p>\n\n# About\n\n  **Toggl Desktop** is a Toggl time tracking client with many helper functions that make tracking time more effortless and smooth. Features such as Idle detection, reminders to track and Pomodoro Timer make this app a great companion when productivity and efficiency is the goal.\n\n<img src=\"https://user-images.githubusercontent.com/842229/63856838-3a869580-c9ab-11e9-9e36-7db23059ce29.png\"\n         alt=\"Toggl Desktop apps\">\n\n# Download\n\nToggl built and signed apps for all platforms\n\n## Mac\n\n<br>\n<a href=\"https://toggl.github.io/toggldesktop/download/macos-stable/\">64bit dmg</a>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://itunes.apple.com/ee/app/toggl-desktop/id957734279?mt=12'>\n  Mac App Store</a>\n<br/>\n<br/>\n<i>Officially macOS 10.11 and newer stable macOS versions are supported.</i>\n\n## Windows\n\n<br/>\n<a href=\"https://toggl.github.io/toggldesktop/download/windows64-stable/\">64bit installer</a>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://toggl.github.io/toggldesktop/download/windows-stable/\">32bit installer</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://chocolatey.org/packages/toggl\">Chocolatey</a>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;<a href='//www.microsoft.com/store/apps/9nk3rf9nbjnp?cid=storebadge&ocid=badge'>Microsoft Store</a>\n<br/>\n<br/>\n<i>App has been tested on Windows 7, 8, 8.1 and 10. Toggl Desktop Windows app has not been tested on Surface type touchscreen environments.</i>\n\n## Linux\n\n<br>\n<a href=\"https://toggl.github.io/toggldesktop/download/linux_tar.gz-stable/\">Tarball</a>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://flathub.org/apps/details/com.toggl.TogglDesktop'>Flathub</a>&nbsp;&nbsp;&nbsp;&nbsp;\n<br/>\n<br/>\n<i>Only 64bit is supported</i>\n\n# Build\n\nPlease check OS specific requirements below.\n\n_By default the app builds for testing server. To use the compiled app with live server see this guide [https://github.com/toggl-open-source/toggldesktop/wiki/Building-Toggl-Desktop-from-source-for-usage-with-live-servers](https://github.com/toggl-open-source/toggldesktop/wiki/Building-Toggl-Desktop-from-source-for-usage-with-live-servers)_\n\n## macOS\n### Requirements\n- macOS 11+, Xcode 12.2+ and Swift 5+\n- Install Bundler\n```bash\n$ sudo gem install bundler\n```\n\n### Build\n```bash\n# Prepare cocoapod\n$ make init_cocoapods\n```\nRun `bundle exec pod repo update` in case there is an error about out-of-date source repos (some pod version is missing).\n\n- Open workspace at `src/ui/osx/TogglDesktop.xcworkspace`\n- Select TogglDesktop scheme and build.\n\n## Linux\n\n### Dependencies\n\nYou'll need these Qt (at version 5.12 or higher) modules: QtWidgets (with private headers), QtNetwork, QtNetworkAuth, QtDBus, QtX11Extras\n\nIf Qt is not installed from your distribution's package manager, you will need to set the `CMAKE_PREFIX_PATH` environment variable to point to the `lib/cmake` folder in the Qt version you wish to use.\n\nThese dependencies are mandatory:\n * libXScrnSaver (`libxss-dev` in deb-based distros and `libXScrnSaver-devel` in rpm-based)\n\n You can install them all in debian with a command:\n```bash\n $ sudo apt install libxss-dev build-essential libgl-dev libreadline-dev\n\n ```\n \nThese dependencies are optional and will be bundled if the `USE_BUNDLED_LIBRARIES` CMake argument is set or your system does NOT have their development packages installed:\n * POCO\n * Lua\n * jsoncpp\n * Qxt\n\nThese libraries will be bundled regardless of your system:\n * bugsnag-qt\n * qt-oauth-lib\n\n### Build the app\n\n*in the toggldesktop source tree root*\n```bash\nmkdir -p build && pushd build             # Create build directory\ncmake ..                                  # Setup cmake configs\nmake -j8                                  # Build the app. The number defines the count of parallel jobs (number of your CPU cores is a good value for that)\n./src/ui/linux/TogglDesktop/TogglDesktop  # Run the built app\n```\n\n## Windows\n\nInstall Visual Studio 2019 with `.NET desktop development`, `Desktop development with C++` and `Universal Windows Platform development` components checked during installation. You can download free Visual Studio Community [here](https://visualstudio.microsoft.com/vs/community/).\n\nThen open the solution file `src\\ui\\windows\\TogglDesktop\\TogglDesktop.sln` and run it in `Debug` mode.\n\nThe solution is using OpenSSL binaries. To rebuild OpenSSL from sources refer to [this page](docs/win/build-openSSL.md).\n\n\n# Change log\n\nChange log can be viewed at [http://toggl.github.io/toggldesktop/](http://toggl.github.io/toggldesktop/)\n\n# Contribute\n\nBefore sending us a pull request, please format the source code:\n\n```bash\n$ make fmt\n```\n\nAlso, please check for any cpplint issues:\n\n```bash\n$ make lint\n```\n\nCheck if unit tests continue to pass:\n\n```bash\n$ make test\n```\n\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testdata",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "update_authors.sh",
          "type": "blob",
          "size": 0.0478515625,
          "content": "git log --format=\"%aN <%aE>\"|sort|uniq > AUTHORS\n"
        }
      ]
    }
  ]
}