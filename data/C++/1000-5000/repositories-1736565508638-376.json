{
  "metadata": {
    "timestamp": 1736565508638,
    "page": 376,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alicevision/AliceVision",
      "stars": 3049,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.0380859375,
          "content": "BasedOnStyle: Mozilla\r\nAlignTrailingComments: true\r\nAllowAllConstructorInitializersOnNextLine: true\r\nAllowAllParametersOfDeclarationOnNextLine: false\r\nAllowShortBlocksOnASingleLine: true\r\nAllowShortCaseLabelsOnASingleLine: false\r\nAllowShortFunctionsOnASingleLine: All\r\nAllowShortIfStatementsOnASingleLine: false\r\nAllowShortLoopsOnASingleLine: false\r\nAlwaysBreakAfterReturnType: None\r\nAlwaysBreakAfterDefinitionReturnType: None\r\nAlwaysBreakTemplateDeclarations: true\r\nBinPackArguments: false\r\nBinPackParameters: false\r\nBreakBeforeBraces: Custom\r\nBraceWrapping:\r\n  AfterCaseLabel: true\r\n  AfterClass: true\r\n  AfterControlStatement: true\r\n  AfterEnum: true\r\n  AfterFunction: true\r\n  AfterNamespace: false\r\n  AfterObjCDeclaration: false\r\n  AfterStruct: true\r\n  AfterUnion: true\r\n  AfterExternBlock: true\r\n  BeforeCatch: true\r\n  BeforeElse: true\r\n  IndentBraces: false\r\n  SplitEmptyFunction: false\r\n  SplitEmptyRecord: false\r\n  SplitEmptyNamespace: false\r\nBreakBeforeInheritanceComma: false\r\nBreakConstructorInitializers: BeforeColon\r\nBreakInheritanceList: BeforeColon\r\nColumnLimit: 150\r\nCompactNamespaces: false\r\nConstructorInitializerAllOnOneLineOrOnePerLine: false\r\nCpp11BracedListStyle: true\r\nDerivePointerAlignment: false\r\nExperimentalAutoDetectBinPacking: false\r\nFixNamespaceComments: true\r\nIncludeBlocks: Regroup\r\nIndentCaseLabels: true\r\nIndentPPDirectives: BeforeHash\r\nIndentWidth: 4\r\nKeepEmptyLinesAtTheStartOfBlocks: false\r\nLanguage: Cpp\r\nPackConstructorInitializers: Never\r\nPointerAlignment: Left\r\nReflowComments: true\r\nSpaceAfterLogicalNot: false\r\nSpaceBeforeAssignmentOperators: true\r\nSpaceBeforeParens: ControlStatements\r\nSpacesBeforeTrailingComments: 2\r\nSpaceInEmptyParentheses: false\r\nSpacesInContainerLiterals: false\r\nSpacesInParentheses: false\r\nSpacesInSquareBrackets: false\r\nStandard: \"c++17\"\r\nIncludeCategories:\r\n  - Regex:           '^\".*\"'\r\n    Priority:        1\r\n  - Regex:           '^<aliceVision/.*>'\r\n    Priority:        2\r\n  - Regex:           '^<boost/.*>'\r\n    Priority:        3\r\n  - Regex:           '^<.*\\..*>'\r\n    Priority:        4\r\nSortIncludes: false\r\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.337890625,
          "content": "Checks: '-*,readability-identifier-naming'\nCheckOptions:\n  - { key: readability-identifier-naming.FunctionCase, value: camelBack }\n  - { key: readability-identifier-naming.VariableCase, value: camelBack }\n  - { key: readability-identifier-naming.ClassCase, value: CamelCase }\n  - { key: readability-identifier-naming.StructCase, value: CamelCase}"
        },
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "service_name: travis-ci"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 2.6630859375,
          "content": "# [aliceVision] Reformat src/aliceVision with latest clang-format rules\n0fb0a02b75142bcf3b23009428028e2198917275\n# [software] Reformat src/software with latest clang-format rules\nea46ddca23332c115790c02105372bda37d943e3\n# Apply `clang-format` on modified files\n807034b1eb101b19b3bc9b9078a1635460591959\n# Estimator states in SfMData: Apply clang-format across all files\n938c0e83497c94ef6506c00ded61cf1da00e4ca5\n# Reformat src/aliceVision with latest clang-format rules\n580ebb7f344787126008af972f765aea9eacb2ac\n# [sfmData] imageInfo: Clean-up: Harmonize and use 4-space indentation everywhere\n68e253d510ba2c7cf3fadaf7b49e69d37fb95d2e\n# Clean-up CMakeLists.txt and Dependencies.cmake\nd9e5c931bda22e951cfbce32da8fede71f8d244c\n# [software] SfMMerge/SfMToRig: Code clean-up and constness\n17d93b2460f1b928ad5d3c7e27bda822754be5b7\n# [depthMap] DepthMapEstimator: Clean-up code\n4dda8dffcca4e5dbcb30a2157f5433c1fe27f83a\n# [sfmDataIO] Clean-up: Use 4-space indentation across all \"viewIO\" files\nede373fe7d3e42577069f67ec61828e7d0d9ec7d\n# [geometry] Clean-up: Use 4-space indentations and fix documentation\n1dfcb1fd793de38539d3da3157bbf9b14d133d77\n# [hdr] Brackets: Clean-up: Improve docstrings and overall readability\n51bfbb0caf1ba40f8fa3e638d1a4a3be74d77b0a\n# [pipeline] HDR Fusion: Code clean-up and logs harmonization\n2f674d25e84bcefe8103330d5d118e9fc761c02d\n# [software] StereoPhotometry: Clean-up executables\n6cee093489f073f1f7bf847959651ff83f1bec43\n# [photometricStereo] Clean-up: Update documentation and harmonize syntax\n2a13d91815da900134fce56478ec1e3ebdde3128\n# [lightingCalibration] Clean-up: Update documentation and harmonize syntax\n369510dd630758535d1fb8fad61f810ffa888fe7\n# [sphereDetection] Clean-up: Update documentation and harmonize syntax\ndeb1e6ee7c294c228a07a1ac522e1fe689def588\n# [sfmData] Clean-up: Harmonize syntax and use 4-space indentation\n814006054860208998ee7f1cd8fa6abdbc71921a\n# [dataio] Clean-up trailing whitespaces\n23cef09db83435f6eeb7eb1ec7e0b51895c559d2\n# [software] FeatureExtraction: Formatting: Use 4-space based indentation\n6e3d3cabcb615bf9f6abdeb82360ab9ff352dcff\n# [software] PrepareDenseScene: Formatting: Use 4-space based indentation\n5e2b5b42335da0fbc1ca8de31507a962e751cd52\n# [software] CameraCalibration: Use 4-space indentation instead of 2\n2ac0c2545701e07585f4490875eb69ce3ace5db7\n# [software] PanoramaInit: Format file with clang-format\nb2684b81a5a8711ef19d525c7f47de3fd3cc2467\n# [dataio] Use 4-spaces indentation for all the module's files\nd796b45cd8a8db71423c009380faa096120f8fb5\n# [calibration] checker detector: code formatting and improving readability\nf16dd598945794662719d56f3165de31654ee1d4\n# [software] panorama: formatting and constness\n3c487027657ed89483b43975ad9334d7a8a9a8e4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.64453125,
          "content": "# temporary files\n*~\n.nfs*\n.*.swp # vim\n*.flc # xemacs\n.DS_Store # MacOS\nThumbs.db # Windows\n*.out\n\n*.aux\n*.toc\n*.bbl\n*.blg\n*.xml\n*.dot\n*.log\n\n# python\n*.pyc\n\n# Binary files\n*.o\n*.os\n*.so\n*.a\n*.dll\n*.exe\n*.db\n\n# folder receiving the compilation products\nbuild*\ninstall\nlib\nbin\nx64\ndl\n\n# CMake\nCMakeFiles  # intermediate folders\n\n# user files\n*.user*\n\n# netbeans projects\n/nbproject\nnbproject\n.idea\n\n# visual projects\n#*.sln\n#*.vcxproj*\n*.suo\n*.vcproj*\n*.ncb\n*.rc\n*.rules\n*.XML\n*.VC.db\n*.VC.opendb\n*ipch\n*.pdb\n\n*.cbp*\n*.layout*\n\n# visual projects create log files into directories\nDebug\nRelease\nProduction\n\n# Archives\n*.zip\n*.gz\n*.tgz\n*.tar*\n\n**/.vscode\n**/.vs\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.263671875,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nsphinx:\n  builder: html\n  configuration: docs/sphinx/conf.py\n\nbuild:\n  os: \"ubuntu-20.04\"\n  tools:\n    python: \"3\"\n"
        },
        {
          "name": "BIBLIOGRAPHY.md",
          "type": "blob",
          "size": 5.2744140625,
          "content": "# Bibliography\n\n[Kneip] **A Novel Parametrization of the P3P-Problem for a Direct Computation of Absolute Camera Position and Orientation.**\n    Kneip, L.; Scaramuzza, D. ; Siegwart, R.\n    CVPR 2011\n    \n[EPnP] **EPnP: An Accurate O(n) Solution to the PnP Problem.**\n    V. Lepetit and F. Moreno-Noguer and P. Fua, IJCV 2009. vol. 81, no. 2.\n    \n[HZ] **Multiple view geometry in computer vision.**\n    Hartley, Richard, and Andrew Zisserman. \n    Vol. 2. Cambridge, 2000.\n    \n[Stewenius] **Recent Developments on Direct Relative Orientation.**\n      H. Stewenius, C. Engels and D. Nister.\n      ISPRS 2006\n\n[Nister] **An Efficient Solution to the Five-Point Relative Pose.**\n    D. Nister\n    PAMI 2004\n    \n[Longuet] **A computer algorithm for reconstructing a scene from two projections.**\n    Longuet-Higgins, H. C.\n    Readings in Computer Vision: Issues, Problems, Principles, and Paradigms, MA Fischler and O. Firschein, eds (1987): 61-62.\n    \n[Chatterjee] **Efficient and Robust Large-Scale Rotation Averaging.**\n    Avishek Chatterjee and Venu Madhav Govindu, ICCV 2013.\n\n[Kyle2014] **Robust Global Translations with 1DSfM.**\n    Kyle Wilson and Noah Snavely, ECCV 2014.\n\n[Martinec] **Robust Multiview Reconstruction.**\n    Daniel Martinec, 2008.\n    \n[ACSfM] **Adaptive structure from motion with a contrario model estimation.**\n    Pierre Moulon, Pascal Monasse, and Renaud Marlet.\n    In ACCV, 2012.\n\n[GlobalACSfM] **Global Fusion of Relative Motions for Robust, Accurate and Scalable Structure from Motion.**\n    Pierre Moulon, Pascal Monasse and Renaud Marlet.\n    In ICCV, 2013.\n    \n[TracksCVMP12] **Unordered feature tracking made fast and easy**\n    Pierre Moulon and Pascal Monasse, CVMP 2012.\n    \n[KVLD12] **Virtual Line Descriptor and Semi-Local Graph Matching Method for Reliable Feature Correspondence.**\n    Zhe LIU and Renaud MARLET, BMVC 2012.\n    \n[Moulon13] **Global Multiple-View Color Consistency.**\n    Pierre Moulon, Bruno Duisit and Pascal Monasse, CVMP 2013.\n    \n[PMVS] **Accurate, dense, and robust multi-view stereopsis.**\n    Yasutaka Furukawa and Jean Ponce.\n    IEEE Trans. on Pattern Analysis and Machine Intelligence, 32(8):1362-1376, 2010.\n\n[CMPMVS] **Multi-View Reconstruction Preserving Weakly-Supported Surfaces.**\n    M. Jancosek, T. Pajdla, CVPR 2011.\n\n[Waechter2014] **Let There Be Color! Large-Scale Texturing of 3D Reconstructions.**\n    M. Waechter, N. Moehrle, and M. Goesele, ECCV 2014.\n\n[FLANN] **Fast Approximate Nearest Neighbors with Automatic Algorithm Configuration.**\n    Muja, Marius, and David G. Lowe.  VISAPP (1). 2009.\n \n[LinfNorm] **L infinity Minimization in Geometric Reconstruction Problems.**\n    Richard I. Hartley, Frederik Schaffalitzky. CVPR 2004.\n\n[LinfNormGeneric] **Multiple-View Geometry under the L infty Norm; Multiple View Geometry and the L infty -norm.**\n    Fredrik Kahl, Richard Hartley, 2008; and Fredrik Kahl, ICCV 2005.\n\n[Arnak] **Robust estimation for an inverse problem arising in multiview geometry.**\n    Arnak S. Dalalyan, Renaud Keriven. In J. Math. Imaging Vision, 2012.\n\n[RANSAC] **Random sample consensus: a paradigm for model fitting with applications to image analysis and automated cartography.**\n    Fischler, Martin A., and Robert C. Bolles. \n    Communications of the ACM 24.6 (1981): 381-395.\n    \n[ACRANSAC] **Automatic homographic registration of a pair of images, with a contrario elimination of outliers.**\n    Moisan, Lionel, Pierre Moulon, and Pascal Monasse.\n    Image Processing On Line 10 (2012)\n\n[VLFEAT]  **VLFeat: An Open and Portable Library of Computer Vision Algorithms**\n    A. Vedaldi and B. Fulkerson, 2008. http://www.vlfeat.org/, http://www.vlfeat.org/overview/sift.html.\n\n[OlssonDuality] **Outlier Removal Using Duality.**\n    Carl Olsson, Anders Eriksson and Richard Hartley, Richard. CVPR 2010.\n    \n[CASCADEHASHING] **Fast and Accurate Image Matching with Cascade Hashing for 3D Reconstruction**\n   Jian Cheng, Cong Leng, Jiaxiang Wu, Hainan Cui, Hanqing Lu. CVPR 2014. \n \n[Ceres] **Ceres Solver**\n    Sameer Agarwal and Keir Mierle and Others, http://ceres-solver.org\n\n[CppUnitLite] **CppUnitLite** http://c2.com/cgi/wiki?CppUnitLite\n\n[Eigen] **Eigen** http://eigen.tuxfamily.org/index.php?title=Main_Page\n\n[LEMON] **Lemon** http://lemon.cs.elte.hu/trac/lemon\n\n[STLplus] **STLplus** http://stlplus.sourceforge.net/\n\n[LP] **Linear Programming** http://en.wikipedia.org/wiki/Linear_programming\n\n[ROCHADE] **ROCHADE: Robust Checkerboard Advanced Detection for Camera Calibration**\n    Simon Placht, Peter Fürsattel, Etienne Assoumou Mengue, Hannes Hofmann, Christian Schaller, Michael Balda & Elli Angelopoulou.\n\n[Geiger] **Automatic Calibration of Range and Camera Sensors using a single Shot**\n    Andreas Geiger and Frank Moosmann and Oemer Car and Bernhard Schuster.\n\n[Chen] **A New Sub-Pixel Detector for X-Corners in Camera Calibration Targets**\n    Chen, Dazhi and Zhang, Guangjun\n\n[Liu] **Automatic chessboard corner detection method**\n    Liu, Y., Liu, S., Cao, Y., & Wang, Z. (2016).\n    IET Image Processing, 10(1), 16-23.\n\n[Abdulrahman] **X-Corner Detection for Camera Calibration Using Saddle Points**\n    Abdulrahman S. Alturki, John S. Loomis.\n\n[Bok] **Automated checkerboard detection and indexing using circular boundaries**\n    Yunsu Bok, Hyowon Ha, In So Kweon.\n\n[Zhang] **A flexible new technique for camera calibration**\n    Zhengyou Zhang (1998).\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 67.958984375,
          "content": "# AliceVision Changelog\n\n## Release 3.2.0 (2023/12/07)\n\n### Major Features\n\n- New software for intrinsics and rig calibration using a multiview acquisition of a checkerboard [PR](https://github.com/alicevision/AliceVision/pull/1524)\n- New semantic image segmentation module [PR](https://github.com/alicevision/AliceVision/pull/1476)\n\n### Features\n\n- Support pixel aspect ratio [PR](https://github.com/alicevision/AliceVision/pull/1448)\n- Automatically align the sfm result [PR](https://github.com/alicevision/AliceVision/pull/1546)\n- New pipeline for pure rotation tracking [PR](https://github.com/alicevision/AliceVision/pull/1548)\n- KeyframeSelection: Add support for masks [PR](https://github.com/alicevision/AliceVision/pull/1518)\n\n### Other Improvements\n\n- Start Development 3.2 [PR](https://github.com/alicevision/AliceVision/pull/1479)\n- Split SFMData between reconstructed and other views [PR](https://github.com/alicevision/AliceVision/pull/1409)\n- Noise reduction in HDR merging [PR](https://github.com/alicevision/AliceVision/pull/1469)\n- Add a new optional command to export textured mesh to a USD format [PR](https://github.com/alicevision/AliceVision/pull/1455)\n- Enable multiple calibrations on hdr [PR](https://github.com/alicevision/AliceVision/pull/1484)\n- [Panorama] Enforce priors after estimation [PR](https://github.com/alicevision/AliceVision/pull/1371)\n- tolerant bracket size estimation [PR](https://github.com/alicevision/AliceVision/pull/1488)\n- Make sure openexr does not use too many threads [PR](https://github.com/alicevision/AliceVision/pull/1489)\n- HDR default number of brackets should be 0 [PR](https://github.com/alicevision/AliceVision/pull/1490)\n- Remove limits on outliers for brackets detection [PR](https://github.com/alicevision/AliceVision/pull/1491)\n- Correctly count the best brackets count [PR](https://github.com/alicevision/AliceVision/pull/1492)\n- Compositing does not fail on range error [PR](https://github.com/alicevision/AliceVision/pull/1498)\n- [software] panoramaPostProcessing: export downscaled panorama levels [PR](https://github.com/alicevision/AliceVision/pull/1496)\n- [meshing] export computed bounding box [PR](https://github.com/alicevision/AliceVision/pull/1473)\n- [software] sfmTransform: Increase precision of coefficients in the log [PR](https://github.com/alicevision/AliceVision/pull/1486)\n- Limit EXR multi-threading for texturing [PR](https://github.com/alicevision/AliceVision/pull/1509)\n- [fuseCut] Fix adding helper points [PR](https://github.com/alicevision/AliceVision/pull/1465)\n- add memory use constraint in texturing [PR](https://github.com/alicevision/AliceVision/pull/1511)\n- Manage LCP in imageProcessing [PR](https://github.com/alicevision/AliceVision/pull/1459)\n- Camera exposure update [PR](https://github.com/alicevision/AliceVision/pull/1508)\n- Masking: Handle different file extensions for masks and allow mask inversion in `ImageSegmentation` [PR](https://github.com/alicevision/AliceVision/pull/1517)\n- [keyframe] Do not fail when there are consecutive missing frames for the smart Keyframe Selection method [PR](https://github.com/alicevision/AliceVision/pull/1510)\n- Keyframe Selection: Add multi-threading and improve overall performances [PR](https://github.com/alicevision/AliceVision/pull/1512)\n- [camera] refactorize and clean up code [PR](https://github.com/alicevision/AliceVision/pull/1515)\n- Meshing: fix in graphcut weighting and minor sampling improvements [PR](https://github.com/alicevision/AliceVision/pull/1520)\n- bundle adjustment improvement [PR](https://github.com/alicevision/AliceVision/pull/1477)\n- Add automatic method for HDR calibration [PR](https://github.com/alicevision/AliceVision/pull/1521)\n- [sfmTransform] Rewrite check on ambiguity in sfmTransform [PR](https://github.com/alicevision/AliceVision/pull/1525)\n- [image] ImageCache: refine mutex usage [PR](https://github.com/alicevision/AliceVision/pull/1504)\n- Pose3 internal representation [PR](https://github.com/alicevision/AliceVision/pull/1472)\n- [SFM] New incremental logic for sfm [PR](https://github.com/alicevision/AliceVision/pull/1377)\n- ImageInfo class for sfmData [PR](https://github.com/alicevision/AliceVision/pull/1533)\n- Clean symbolic bundle code [PR](https://github.com/alicevision/AliceVision/pull/1531)\n- fix flann randomSeed [PR](https://github.com/alicevision/AliceVision/pull/1530)\n- SFM bootstraping [PR](https://github.com/alicevision/AliceVision/pull/1432)\n- PanoramaPostProcessing: Use the generated panorama's name for the downscaled pyramid levels [PR](https://github.com/alicevision/AliceVision/pull/1542)\n- Fix View copy constructor and remove unused control points [PR](https://github.com/alicevision/AliceVision/pull/1536)\n- [Cleanup] Remove pointers [PR](https://github.com/alicevision/AliceVision/pull/1549)\n- [DSPSIFT] Change orientation value [PR](https://github.com/alicevision/AliceVision/pull/1551)\n- Code cleanup [PR](https://github.com/alicevision/AliceVision/pull/1556)\n- Deal with multiple brackets with same score [PR](https://github.com/alicevision/AliceVision/pull/1493)\n- Remove unused gamma functions [PR](https://github.com/alicevision/AliceVision/pull/1516)\n- [clean] Ransac containers [PR](https://github.com/alicevision/AliceVision/pull/1566)\n- Cleaning up ACRansac [PR](https://github.com/alicevision/AliceVision/pull/1573)\n- Input color space setting [PR](https://github.com/alicevision/AliceVision/pull/1571)\n- Fallback when camera motion is not distinctive enough [PR](https://github.com/alicevision/AliceVision/pull/1563)\n- [sfmData] imageInfo: Retrieve focal length when it's available in non-standard metadata keys [PR](https://github.com/alicevision/AliceVision/pull/1583)\n- Reformat with clang [PR](https://github.com/alicevision/AliceVision/pull/1580)\n- Binary format type for ply IO [PR](https://github.com/alicevision/AliceVision/pull/1576)\n- Automatic reorientation [PR](https://github.com/alicevision/AliceVision/pull/1585)\n- Fov compute for intrinsics [PR](https://github.com/alicevision/AliceVision/pull/1588)\n- Upgrade tracks to allow more advanced storage and reduce indirections [PR](https://github.com/alicevision/AliceVision/pull/1594)\n- Color space conversion update [PR](https://github.com/alicevision/AliceVision/pull/1591)\n- fixed unnecessary descriptor load for sequential image matching [PR](https://github.com/alicevision/AliceVision/pull/1599)\n- [sfm] SequentialSfM: Initialize the resection ID in the constructor and set it for the initial pair [PR](https://github.com/alicevision/AliceVision/pull/1593)\n- Add ancestor images info in view [PR](https://github.com/alicevision/AliceVision/pull/1582)\n- Intrinsics update after auto reorientation [PR](https://github.com/alicevision/AliceVision/pull/1595)\n- [sfmData] Ensure copies of SfMData are deep instead of shallow [PR](https://github.com/alicevision/AliceVision/pull/1604)\n- New utility nodes to create camera rigs and merge two sfmData [PR](https://github.com/alicevision/AliceVision/pull/1568)\n\n### Bugfixes\n\n- [segmentation] fix windows build [PR](https://github.com/alicevision/AliceVision/pull/1480)\n- [segmentation] fix crash when resized image is too small [PR](https://github.com/alicevision/AliceVision/pull/1485)\n- Bugfix on dng reading [PR](https://github.com/alicevision/AliceVision/pull/1502)\n- [sfmDataIO] getViewIntrinsics corrections [PR](https://github.com/alicevision/AliceVision/pull/1522)\n- [Fix] transformsRt function [PR](https://github.com/alicevision/AliceVision/pull/1541)\n- [software] imageSegmentation: read images in sRGB colorspace [PR](https://github.com/alicevision/AliceVision/pull/1543)\n- [software] LdrToHdrMerge: fix bug introduced in PR 1536 [PR](https://github.com/alicevision/AliceVision/pull/1557)\n- [sfmDataIO] restore focal ratio support [PR](https://github.com/alicevision/AliceVision/pull/1559)\n- [build][windows] fix for OpenMP error causing build issue on Windows [PR](https://github.com/alicevision/AliceVision/pull/1552)\n- [sfmDataIO] remove declared/referenced poses validation [PR](https://github.com/alicevision/AliceVision/pull/1529)\n- getSensorSize update [PR](https://github.com/alicevision/AliceVision/pull/1519)\n- [sfmDataIO] Fix unhandled exception when parsing images with large numbers in the filenames [PR](https://github.com/alicevision/AliceVision/pull/1565)\n- [depthMap] DepthMapEstimator: Correctly limit the number of simultaneous RCs [PR](https://github.com/alicevision/AliceVision/pull/1569)\n- [sfm] add try-catch for feature/region loading [PR](https://github.com/alicevision/AliceVision/pull/1575)\n- [fuseCut] Fix export debug mesh [PR](https://github.com/alicevision/AliceVision/pull/1538)\n- Fixup panoramaInit manual init [PR](https://github.com/alicevision/AliceVision/pull/1577)\n- [keyframe] fix intrinsics UID [PR](https://github.com/alicevision/AliceVision/pull/1579)\n- Fix: Add missing 3DEAnamorphic4 camera type [PR](https://github.com/alicevision/AliceVision/pull/1581)\n- Bugfix when checking raw format [PR](https://github.com/alicevision/AliceVision/pull/1572)\n- camera Lock is correctly casted to int in json [PR](https://github.com/alicevision/AliceVision/pull/1584)\n- Sequential SfM: Replayable initial pair [PR](https://github.com/alicevision/AliceVision/pull/1592)\n- [sfm] Sequential ReconstructionEngine: Use SfM Params' `nbFirstUnstableCameras` instead of a constant [PR](https://github.com/alicevision/AliceVision/pull/1602)\n- [sfmData] Add const accessor for getView [PR](https://github.com/alicevision/AliceVision/pull/1606)\n- [build] Add an option to disable the use of the GPU with ONNX [PR](https://github.com/alicevision/AliceVision/pull/1608)\n- fix applyCalibration [PR](https://github.com/alicevision/AliceVision/pull/1609)\n- Fix errors on sfm with applyCalibration [PR](https://github.com/alicevision/AliceVision/pull/1613)\n- fix sfm with undistortion [PR](https://github.com/alicevision/AliceVision/pull/1615)\n- [mesh] Texturing fix: specify a name for the materials to avoid issues in Maya [PR](https://github.com/alicevision/AliceVision/pull/1617)\n\n### CI, Build and Documentation\n\n- [ci] Update GitHub actions for the Continuous Integration on Windows [PR](https://github.com/alicevision/AliceVision/pull/1483)\n- [docker] Update version of the AV dependencies image [PR](https://github.com/alicevision/AliceVision/pull/1482)\n- [doc] INSTALL.md: Fix typo in \"nonfree\" module for OpenCV in vcpkg install [PR](https://github.com/alicevision/AliceVision/pull/1487)\n- [build] Download, copy and export the semantic segmentation model [PR](https://github.com/alicevision/AliceVision/pull/1481)\n- Remove internal flann [PR](https://github.com/alicevision/AliceVision/pull/1495)\n- [build] Update OIIO to 2.4.13.0 [PR](https://github.com/alicevision/AliceVision/pull/1527)\n- Fixes for osx [PR](https://github.com/alicevision/AliceVision/pull/1463)\n- Make sure one can deactivate part of modules [PR](https://github.com/alicevision/AliceVision/pull/1534)\n- [ci] Windows: Stop building modules that are not tested [PR](https://github.com/alicevision/AliceVision/pull/1537)\n- [CI] Don't run CI on draft PR [PR](https://github.com/alicevision/AliceVision/pull/1553)\n- [docker] Add Python in the Docker image of the dependencies [PR](https://github.com/alicevision/AliceVision/pull/1540)\n- [docker] Dependencies: Remove duplicated `gcc` install  [PR](https://github.com/alicevision/AliceVision/pull/1564)\n- [ci] Update vcpkg archive with boost-geometry and liblemon [PR](https://github.com/alicevision/AliceVision/pull/1561)\n- [ci] Update functional tests [PR](https://github.com/alicevision/AliceVision/pull/1535)\n- Remove lemon from internal dependencies [PR](https://github.com/alicevision/AliceVision/pull/1547)\n- Clean dependencies in CMakeLists [PR](https://github.com/alicevision/AliceVision/pull/1570)\n- Remove lemon from public links [PR](https://github.com/alicevision/AliceVision/pull/1587)\n- Run CI on draft pull requests [PR](https://github.com/alicevision/AliceVision/pull/1600)\n\n### Updates to the Sensor Database\n\n- Added Zed2i StereoLabs Zed2i sensor info [PR](https://github.com/alicevision/AliceVision/pull/1359)\n- Update cameraSensors.db [PR](https://github.com/alicevision/AliceVision/pull/1528)\n\n### Contributors\n\n[almarouk](https://github.com/almarouk), [cbentejac](https://github.com/cbentejac), [demoulinv](https://github.com/demoulinv), [emanuelenencioni](https://github.com/emanuelenencioni), [fabiencastan](https://github.com/fabiencastan), [Kokika](https://github.com/Kokika), [mh0g](https://github.com/mh0g), [mugulmd](https://github.com/mugulmd), [serguei-k](https://github.com/serguei-k), [servantftechnicolor](https://github.com/servantftechnicolor), [simogasp](https://github.com/simogasp), [unageek](https://github.com/unageek)\n\n\n## Release 3.1.0 (2023/06/21)\n\n### Major Features\n\n- New Photometric Stereo software [PR](https://github.com/alicevision/AliceVision/pull/999)\n- [calibration] Checkerboard detection [PR](https://github.com/alicevision/AliceVision/pull/1331)\n- [depthMap] New option for multi-resolution similarity estimation and optimizations [PR](https://github.com/alicevision/AliceVision/pull/1351)\n- [utils] split360Images: support SfMData input and output [PR](https://github.com/alicevision/AliceVision/pull/1382)\n- [sfmTransform] Creation of auto mode [PR](https://github.com/alicevision/AliceVision/pull/1402)\n- Distortion calibration [PR](https://github.com/alicevision/AliceVision/pull/1415)\n\n### Features\n\n- Add rec709 color space definition [PR](https://github.com/alicevision/AliceVision/pull/1412)\n- SfM: Expose new parameters to the command line [PR](https://github.com/alicevision/AliceVision/pull/1413)\n- [image] New image cache [PR](https://github.com/alicevision/AliceVision/pull/1310)\n- [sfmTransform] rewrite auto_from_cameras [PR](https://github.com/alicevision/AliceVision/pull/1376)\n- Stitching color space [PR](https://github.com/alicevision/AliceVision/pull/1380)\n- [panoramaInit]  add generation of contact sheet using xml input [PR](https://github.com/alicevision/AliceVision/pull/1392)\n- Add compression option for exr and jpg images [PR](https://github.com/alicevision/AliceVision/pull/1408)\n- [cmake] Update CXX standard from 14 to 17 [PR](https://github.com/alicevision/AliceVision/pull/1428)\n- ColorTemperatureAsImageProcessingParameter [PR](https://github.com/alicevision/AliceVision/pull/1433)\n\n### Other Improvements\n\n- Start Development Version 3.1.0 [PR](https://github.com/alicevision/AliceVision/pull/1401)\n- [panorama] compositing common scale selection [PR](https://github.com/alicevision/AliceVision/pull/1394)\n- Move cmdline from system to dedicated module [PR](https://github.com/alicevision/AliceVision/pull/1410)\n- [cameraInit] Reject input if multiple frames have same frame id [PR](https://github.com/alicevision/AliceVision/pull/1259)\n- Keyframe Selection: Add support for SfMData files as inputs and outputs [PR](https://github.com/alicevision/AliceVision/pull/1406)\n- [panorama] Generate a preview panorama [PR](https://github.com/alicevision/AliceVision/pull/1388)\n- add tracksbuilder app [PR](https://github.com/alicevision/AliceVision/pull/1418)\n- HDR filenames [PR](https://github.com/alicevision/AliceVision/pull/1424)\n- IncrementalSfM: expose nbOutliersThreshold param [PR](https://github.com/alicevision/AliceVision/pull/1436)\n- Fixed separator in CMAKE_INSTALL_RPATH [PR](https://github.com/alicevision/AliceVision/pull/1427)\n- oiio gammaX.Y color spaces management [PR](https://github.com/alicevision/AliceVision/pull/1445)\n- Exposure and format adjustment [PR](https://github.com/alicevision/AliceVision/pull/1414)\n- Ground level alignment based on sfm point cloud [PR](https://github.com/alicevision/AliceVision/pull/1438)\n- [image] ImageCache improvements [PR](https://github.com/alicevision/AliceVision/pull/1419)\n- [software] applyCalibration: simply copy input data when calibrated data filename is empty [PR](https://github.com/alicevision/AliceVision/pull/1450)\n- [gitignore] Update .gitignore [PR](https://github.com/alicevision/AliceVision/pull/1453)\n- [software] Do not fail if range start is larger than the number of views [PR](https://github.com/alicevision/AliceVision/pull/1457)\n- KeyframeSelection: Add new parameter value to disable the export of keyframes [PR](https://github.com/alicevision/AliceVision/pull/1454)\n- Disable libraw flip  [PR](https://github.com/alicevision/AliceVision/pull/1301)\n- Stereo Photometry: Add robustness to unexpected inputs [PR](https://github.com/alicevision/AliceVision/pull/1452)\n- Set LibRaw options [PR](https://github.com/alicevision/AliceVision/pull/1468)\n\n### Bugfixes, CI, Build and Documentation\n\n- [cmake] housekeeping [PR](https://github.com/alicevision/AliceVision/pull/1407)\n- [software] ldrTohdrSampling: fix error when using jpg, rawColorInterpretation was wrongly interpreted [PR](https://github.com/alicevision/AliceVision/pull/1420)\n- [doc] RELEASING: Add example command to generate the release note [PR](https://github.com/alicevision/AliceVision/pull/1421)\n- Build: Add dependency to Boost.JSON and make the Calibration module Boost1.81-compliant [PR](https://github.com/alicevision/AliceVision/pull/1416)\n- Fix command line parsing for executables that used the old one [PR](https://github.com/alicevision/AliceVision/pull/1422)\n- Fix small compilation issue in trackIO on Windows [PR](https://github.com/alicevision/AliceVision/pull/1429)\n- [pipeline] cameraInit: fix rigHasUniqueFrameIds [PR](https://github.com/alicevision/AliceVision/pull/1430)\n- Fix .clang-format after updating CXX standard [PR](https://github.com/alicevision/AliceVision/pull/1446)\n- [doc] INSTALL.md: remove geogram broken link [PR](https://github.com/alicevision/AliceVision/pull/1451)\n- [Meshing] Fix to avoid small holes in the final mesh [PR](https://github.com/alicevision/AliceVision/pull/1447)\n- [sfmDataIO] Alembic Import: initialize intrinsics properly [PR](https://github.com/alicevision/AliceVision/pull/1456)\n- [ci] Update docker image for dependencies to fix runtime issue in CI [PR](https://github.com/alicevision/AliceVision/pull/1458)\n- Debug in camera object [PR](https://github.com/alicevision/AliceVision/pull/1461)\n- Panorama was using too much memory for no reason [PR](https://github.com/alicevision/AliceVision/pull/1462)\n- [mvsUtils] fix writing metadata for filtered depthmaps [PR](https://github.com/alicevision/AliceVision/pull/1467)\n- [docker] Download, copy and export the sphere detection model [PR](https://github.com/alicevision/AliceVision/pull/1470)\n- [image] readImageSpec: perform safety check before anything else [PR](https://github.com/alicevision/AliceVision/pull/1474)\n- CameraPose lock was not correctly loaded [PR](https://github.com/alicevision/AliceVision/pull/1475)\n\n### Updates to the Sensor Database\n\n- Update cameraSensors.db [PR](https://github.com/alicevision/AliceVision/pull/1442)\n- Add Google Pixel 7/7 Pro main camera to cameraSensors.db [PR](https://github.com/alicevision/AliceVision/pull/1444)\n- Update cameraSensors.db [PR](https://github.com/alicevision/AliceVision/pull/1443)\n\n### Contributors\n\n[almarouk](https://github.com/almarouk), [cbentejac](https://github.com/cbentejac), [demoulinv](https://github.com/demoulinv), [earlywill](https://github.com/earlywill), [erikjwaxx](https://github.com/erikjwaxx), [fabiencastan](https://github.com/fabiencastan), [gregoire-dl](https://github.com/gregoire-dl), [ICIbrahim](https://github.com/ICIbrahim), [jmelou](https://github.com/jmelou), [mugulmd](https://github.com/mugulmd), [serguei-k](https://github.com/serguei-k), [servantftechnicolor](https://github.com/servantftechnicolor), [simogasp](https://github.com/simogasp)\n\n\n## Release 3.0.0 (2023/03/20)\n\n### Release Notes Summary\n\n- Depth map improvements [PR](https://github.com/alicevision/AliceVision/pull/1296)\n- Depth map refactoring [PR](https://github.com/alicevision/AliceVision/pull/619)\n- RAW advanced processing [PR](https://github.com/alicevision/AliceVision/pull/1368)\n- Color management for RAW images [PR](https://github.com/alicevision/AliceVision/pull/1180)\n- Color Space management [PR](https://github.com/alicevision/AliceVision/pull/1170)\n- Output color space in ACES or ACEScg [PR](https://github.com/alicevision/AliceVision/pull/1169)\n- Update panorama pipeline for very large panoramas [PR](https://github.com/alicevision/AliceVision/pull/1244)\n- [Feature Matching] Add an option to remove matches without enough motion [PR](https://github.com/alicevision/AliceVision/pull/1198)\n- GPS alignment from exif metadata [PR](https://github.com/alicevision/AliceVision/pull/1069)\n- Generate NormalMaps and HeightMaps [PR](https://github.com/alicevision/AliceVision/pull/1092)\n- Use assimp as mesh importer and exporter [PR](https://github.com/alicevision/AliceVision/pull/1090)\n- Integration of AprilTag library [PR](https://github.com/alicevision/AliceVision/pull/950)\n- New node to import known poses for various file formats [PR](https://github.com/alicevision/AliceVision/pull/1078)\n- New ImageMasking and MeshMasking software and some cameras rig improvements [PR](https://github.com/alicevision/AliceVision/pull/1083)\n\n### Other Improvements and Bug Fixes\n\n- Fix crash when output extension is missing in image processing. [PR](https://github.com/alicevision/AliceVision/pull/1395)\n- Fix reading non raw image format in imageProcessing. [PR](https://github.com/alicevision/AliceVision/pull/1381)\n- [sfmTransform] fix issue on referenceView if some poses are missing [PR](https://github.com/alicevision/AliceVision/pull/1374)\n- Texturing Color Space [PR](https://github.com/alicevision/AliceVision/pull/1379)\n- [software] fix split dual fisheye [PR](https://github.com/alicevision/AliceVision/pull/1378)\n- Keyframe Selection: Rework and add new selection methods [PR](https://github.com/alicevision/AliceVision/pull/1343)\n- Add support for Lens Camera Profiles (LCP) [PR](https://github.com/alicevision/AliceVision/pull/1215)\n- Add missing build option to build assimp with gltf [PR](https://github.com/alicevision/AliceVision/pull/1370)\n- [panorama] force pyramid levels count in compositing [PR](https://github.com/alicevision/AliceVision/pull/1369)\n- [Panorama] New option to disable compositing tiling [PR](https://github.com/alicevision/AliceVision/pull/1367)\n- [panorama] Propagate metadatas [PR](https://github.com/alicevision/AliceVision/pull/1361)\n- Panorama alignment with a reference camera [PR](https://github.com/alicevision/AliceVision/pull/1334)\n- [image] io: add missing check in isRawFormat [PR](https://github.com/alicevision/AliceVision/pull/1354)\n- HDR luminance statistics bugfix [PR](https://github.com/alicevision/AliceVision/pull/1353)\n- Add option to apply DCP metadata in imageProcessing [PR](https://github.com/alicevision/AliceVision/pull/1340)\n- [hdr] Compute the center exposure of the hdr automatically [PR](https://github.com/alicevision/AliceVision/pull/1315)\n- add missing config.hpp include [PR](https://github.com/alicevision/AliceVision/pull/1341)\n- Views ancestors for hdr [PR](https://github.com/alicevision/AliceVision/pull/1337)\n- [software] New triangulation tool [PR](https://github.com/alicevision/AliceVision/pull/1314)\n- DCP error management [PR](https://github.com/alicevision/AliceVision/pull/1328)\n- [software] remove \"utils\" from executables names [PR](https://github.com/alicevision/AliceVision/pull/1318)\n- read image with missing cam_mul metadata [PR](https://github.com/alicevision/AliceVision/pull/1323)\n- Raw Images: minor adjustments [PR](https://github.com/alicevision/AliceVision/pull/1320)\n- Raw Images: minor update [PR](https://github.com/alicevision/AliceVision/pull/1317)\n- Add NLMeans denoiser in ImageProcessing [PR](https://github.com/alicevision/AliceVision/pull/1181)\n- [system] minor fix on HardwareContext log [PR](https://github.com/alicevision/AliceVision/pull/1313)\n- Fix and harmonize command lines' descriptions [PR](https://github.com/alicevision/AliceVision/pull/1311)\n- Allow parameters to limit the number of Cores used and Memory available information [PR](https://github.com/alicevision/AliceVision/pull/1304)\n- Updates for compatibility with recent ceres versions [PR](https://github.com/alicevision/AliceVision/pull/1305)\n- [sfmColorHarmonize] update selection method enum and command-line argument [PR](https://github.com/alicevision/AliceVision/pull/1306)\n- Factorize command line code for utils and export apps [PR](https://github.com/alicevision/AliceVision/pull/1303)\n- Replace command line parsing code with a class to factorize [PR](https://github.com/alicevision/AliceVision/pull/1302)\n- [sfm] make sure we give other chances to candidates [PR](https://github.com/alicevision/AliceVision/pull/1200)\n- Reuse image pair io functionality [PR](https://github.com/alicevision/AliceVision/pull/1281)\n- Optimize distortion calibration by 1.25x for certain problems [PR](https://github.com/alicevision/AliceVision/pull/1285)\n- Replace usage of std::vector as storage of pixel data with image::Image [PR](https://github.com/alicevision/AliceVision/pull/1282)\n- (trivial) Improve parallel `ctest` speed by 1.5x by splitting sfm_panorama test into several executables [PR](https://github.com/alicevision/AliceVision/pull/1272)\n- (trivial) Extract removePoorlyOverlappingImagePairs() [PR](https://github.com/alicevision/AliceVision/pull/1288)\n- Resurrect hdr test [PR](https://github.com/alicevision/AliceVision/pull/1276)\n- Optimize voctree build by up to 40 times for certain problems [PR](https://github.com/alicevision/AliceVision/pull/1277)\n- (trivial) Cleanup std::pow usages [PR](https://github.com/alicevision/AliceVision/pull/1274)\n- Merge mvsData image and pixel classes with what's in image module [PR](https://github.com/alicevision/AliceVision/pull/1257)\n- [image] Introduce a function to retrieve ALICEVISION_ROOT [PR](https://github.com/alicevision/AliceVision/pull/1268)\n- [imageMatching] bug fix: file format exporter [PR](https://github.com/alicevision/AliceVision/pull/1280)\n- [sfmDataIO] Missing fstream include [PR](https://github.com/alicevision/AliceVision/pull/1278)\n- (trivial) Extract some code out of pipeline executables to reusable modules [PR](https://github.com/alicevision/AliceVision/pull/1270)\n- Fix ceres-solver deprecations [PR](https://github.com/alicevision/AliceVision/pull/1249)\n- Consistently use divideRoundUp() for integer division with rounding up [PR](https://github.com/alicevision/AliceVision/pull/1266)\n- Don't use deprecated filesystem copy options [PR](https://github.com/alicevision/AliceVision/pull/1264)\n- Fix wrong integer division where rounding up was intended [PR](https://github.com/alicevision/AliceVision/pull/1254)\n- (trivial) Avoid repeated calls to std::min() or std::max() [PR](https://github.com/alicevision/AliceVision/pull/1253)\n- (trivial) Drop code catering to old OpenImageIO versions [PR](https://github.com/alicevision/AliceVision/pull/1251)\n- Fix broken openmp atomic usage [PR](https://github.com/alicevision/AliceVision/pull/1234)\n- [sfm] Reduce code duplication in sequential sfm triangulation [PR](https://github.com/alicevision/AliceVision/pull/1217)\n- [image] Fix deprecated use of oiio computePixelStats() [PR](https://github.com/alicevision/AliceVision/pull/1247)\n- [system] Fix deprecated uses of boost::progress_display [PR](https://github.com/alicevision/AliceVision/pull/1248)\n- [bugfix] fix getColmapCompatibleViews  [PR](https://github.com/alicevision/AliceVision/pull/1245)\n- [sift] Remove dependency on glibc memcpy [PR](https://github.com/alicevision/AliceVision/pull/1231)\n- [fuseCut] Pick isnormal() from std namespace [PR](https://github.com/alicevision/AliceVision/pull/1228)\n- Make DisplayProgress class thread safe [PR](https://github.com/alicevision/AliceVision/pull/1235)\n- Avoid unnecessary string copies [PR](https://github.com/alicevision/AliceVision/pull/1187)\n- Always use external CoinUtils, Osi and Clp libraries [PR](https://github.com/alicevision/AliceVision/pull/1237)\n- Fixes #1202: Added an available memory check to constrain the number of CPU c… [PR](https://github.com/alicevision/AliceVision/pull/1203)\n- [software] Add colmap exporter [PR](https://github.com/alicevision/AliceVision/pull/1184)\n- [sift] Fix building on platforms without SSE2 [PR](https://github.com/alicevision/AliceVision/pull/1220)\n- Upgrade dependencies in submodules [PR](https://github.com/alicevision/AliceVision/pull/1226)\n- Introduce API for displaying progress [PR](https://github.com/alicevision/AliceVision/pull/1211)\n- Remove uses of features removed from C++17 standard [PR](https://github.com/alicevision/AliceVision/pull/1221)\n- [sfm] Use opengl coordinate system in Alembic & Meshes and add new alignment from Cameras X Axis [PR](https://github.com/alicevision/AliceVision/pull/1030)\n- Fix duplicate symbols across executables [PR](https://github.com/alicevision/AliceVision/pull/1209)\n- Improve test reproducibility [PR](https://github.com/alicevision/AliceVision/pull/1195)\n- Switch to non-deprecated overload of oiio::ImageBufAlgo::make_kernel() [PR](https://github.com/alicevision/AliceVision/pull/1199)\n- [multiview] Fix memory leak in resection test [PR](https://github.com/alicevision/AliceVision/pull/1197)\n- Fix typo: temporay -> temporary [PR](https://github.com/alicevision/AliceVision/pull/1193)\n- Remove uses of fscanf [PR](https://github.com/alicevision/AliceVision/pull/1190)\n- [mvsUtils] Remove trivial boost::filesystem wrappers [PR](https://github.com/alicevision/AliceVision/pull/1189)\n- Remove using namespace std and add std:: qualifications where needed [PR](https://github.com/alicevision/AliceVision/pull/1185)\n- added fstream to fix build issues [PR](https://github.com/alicevision/AliceVision/pull/1178)\n- Change focal length in sfmData file formats [PR](https://github.com/alicevision/AliceVision/pull/1098)\n- update zlib dependency [PR](https://github.com/alicevision/AliceVision/pull/1166)\n- [hdr] new ExposureSetting class [PR](https://github.com/alicevision/AliceVision/pull/1165)\n- [software] incrementalSfM: Add option computeStructureColor [PR](https://github.com/alicevision/AliceVision/pull/1151)\n- Add new instruction for vs 2022 [PR](https://github.com/alicevision/AliceVision/pull/1152)\n- bad computation for stmap output [PR](https://github.com/alicevision/AliceVision/pull/1154)\n- [depthMap] Code simplification [PR](https://github.com/alicevision/AliceVision/pull/1130)\n- [sfmData] fix uid: avoid conflicts between very close shots [PR](https://github.com/alicevision/AliceVision/pull/1124)\n- [io] Alembic: uint/int compatibility [PR](https://github.com/alicevision/AliceVision/pull/1121)\n- [camera] fix principal point correction in undistort [PR](https://github.com/alicevision/AliceVision/pull/1115)\n- Add support for Canon R5 [PR](https://github.com/alicevision/AliceVision/pull/1111)\n- [image] io: use zips compression for exr [PR](https://github.com/alicevision/AliceVision/pull/1110)\n- [sfm] loRansac debug for PnP [PR](https://github.com/alicevision/AliceVision/pull/1004)\n- [mesh] use file extension to choose the file format [PR](https://github.com/alicevision/AliceVision/pull/1106)\n- Optical center relative to the image center [PR](https://github.com/alicevision/AliceVision/pull/1072)\n- Update symbolic Bundle Adjustment [PR](https://github.com/alicevision/AliceVision/pull/1060)\n- [sfmDataIO] sample scene generation for I/O version check [PR](https://github.com/alicevision/AliceVision/pull/1093)\n- [mesh] Replacing custom code for mesh::saveToObj by using assimp library [PR](https://github.com/alicevision/AliceVision/pull/1094)\n- [sw] middlebury import [PR](https://github.com/alicevision/AliceVision/pull/1065)\n- Add frameId from image path & new function for feature loading [PR](https://github.com/alicevision/AliceVision/pull/1057)\n- [sfm] rmse: bug fix if there is no data at all [PR](https://github.com/alicevision/AliceVision/pull/1043)\n- New lens distortion calibration software [PR](https://github.com/alicevision/AliceVision/pull/1035)\n- GCC11: fix missing <limits> header. [PR](https://github.com/alicevision/AliceVision/pull/1051)\n- [software] Some adjustments to export animated camera [PR](https://github.com/alicevision/AliceVision/pull/1047)\n- [matching] fix unsigned index issue in guided matching [PR](https://github.com/alicevision/AliceVision/pull/1042)\n- [software] New ColorChecker Detection and Correction [PR](https://github.com/alicevision/AliceVision/pull/973)\n- [camera] Allow PINHOLE_CAMERA to be chosen as default model [PR](https://github.com/alicevision/AliceVision/pull/1027)\n- [feature] dspsift: if image resolution is small, adjust first octave for extraction [PR](https://github.com/alicevision/AliceVision/pull/1026)\n- [software] LdrToHdrMerge: more explicit error message [PR](https://github.com/alicevision/AliceVision/pull/1023)\n- [panorama] automatic alignment of up vector [PR](https://github.com/alicevision/AliceVision/pull/1021)\n- [software] split360: some fixes [PR](https://github.com/alicevision/AliceVision/pull/1006)\n- [matching/sfm] IO: do not call \"canonical\" on non-existing files [PR](https://github.com/alicevision/AliceVision/pull/1007)\n- [sfm] in place rotation of point is not allowed in ceres [PR](https://github.com/alicevision/AliceVision/pull/1001)\n\n### Build, CI, Documentation\n\n- [doc] coin libs are required [PR](https://github.com/alicevision/AliceVision/pull/1397)\n- [build] Fix building without opencv [PR](https://github.com/alicevision/AliceVision/pull/1393)\n- [docker] Use dates to identify versions of prebuild dependencies [PR](https://github.com/alicevision/AliceVision/pull/1390)\n- [doc] CONTRIBUTORS: Add Candice Bentejac and Loic Vital [PR](https://github.com/alicevision/AliceVision/pull/1389)\n- [doc] add RELEASING.md [PR](https://github.com/alicevision/AliceVision/pull/1387)\n- [doc] INSTALL: Update the list of vcpkg packages to install [PR](https://github.com/alicevision/AliceVision/pull/1385)\n- [cmake] all-in-one: upgrade dependencies [PR](https://github.com/alicevision/AliceVision/pull/1325)\n- [doc] update INSTALL as osi is not internal anymore [PR](https://github.com/alicevision/AliceVision/pull/1363)\n- [cmake] cannot have opencv contrib without opencv [PR](https://github.com/alicevision/AliceVision/pull/1352)\n- [cmake] fix for `ALICEVISION_HAVE_OPENCV_CONTRIB` [PR](https://github.com/alicevision/AliceVision/pull/1349)\n- [image] Fix build failure with Boost 1.81.0 [PR](https://github.com/alicevision/AliceVision/pull/1335)\n- [doc] INSTALL: replace geogram broken link [PR](https://github.com/alicevision/AliceVision/pull/1327)\n- [cmake] Add support for cuda-12 [PR](https://github.com/alicevision/AliceVision/pull/1324)\n- [build] Use Boost's pi constant instead of M_PI in Geometry [PR](https://github.com/alicevision/AliceVision/pull/1322)\n- [cmake] propagate dependencies [PR](https://github.com/alicevision/AliceVision/pull/1312)\n- [cmake] all-in-one: add boost json [PR](https://github.com/alicevision/AliceVision/pull/1307)\n- [cmake][dep] update TBB to oneAPI version [PR](https://github.com/alicevision/AliceVision/pull/1271)\n- [docs] Update documentation structure with markdown files [PR](https://github.com/alicevision/AliceVision/pull/1300)\n- [cmake][dep] some fixes for openexr [PR](https://github.com/alicevision/AliceVision/pull/1294)\n- [cmake][dep] missing iostreams in boost 1.76 [PR](https://github.com/alicevision/AliceVision/pull/1295)\n- [cmake][dep] bump zlib to 1.2.13 [PR](https://github.com/alicevision/AliceVision/pull/1292)\n- [CMake] Add option to disable usage of modules from OpenCV contrib repo [PR](https://github.com/alicevision/AliceVision/pull/1287)\n- [doc] add new contributors [PR](https://github.com/alicevision/AliceVision/pull/1273)\n- [doc] INSTALL: remove duplicated information [PR](https://github.com/alicevision/AliceVision/pull/1290)\n- [github] Append to vcpkg cache key to expire broken CI cache [PR](https://github.com/alicevision/AliceVision/pull/1269)\n- [cmake] Fixes to build on Silicon [PR](https://github.com/alicevision/AliceVision/pull/1241)\n- [dep] add PCL as dependency [PR](https://github.com/alicevision/AliceVision/pull/1258)\n- [cmake] Add clp dependencies to AliceVisionConfig.cmake.in [PR](https://github.com/alicevision/AliceVision/pull/1262)\n- Fix several compile-time warnings [PR](https://github.com/alicevision/AliceVision/pull/1210)\n- Remove duplicate description of ALICEVISION_USE_OPENMP in INSTALL.md [PR](https://github.com/alicevision/AliceVision/pull/1230)\n- Update vcpkg dependency for Windows [PR](https://github.com/alicevision/AliceVision/pull/1238)\n- [doc] Install: update minimal version of mosek [PR](https://github.com/alicevision/AliceVision/pull/1242)\n- [build] fixes for recent g++ compiler [PR](https://github.com/alicevision/AliceVision/pull/1239)\n- [CMake] Add support for using Eigen alignment with AppleClang [PR](https://github.com/alicevision/AliceVision/pull/1219)\n- [ci] do not trigger ci rebuild for .db files [PR](https://github.com/alicevision/AliceVision/pull/1227)\n- [CI] Upgrade deps: opencv, expat [PR](https://github.com/alicevision/AliceVision/pull/1224)\n- [CMake] Check AV_EIGEN_MEMORY_ALIGNMENT when building dependencies [PR](https://github.com/alicevision/AliceVision/pull/1214)\n- [CMake] Add option to build dependencies in parallel [PR](https://github.com/alicevision/AliceVision/pull/1218)\n- Add option to compile Eigen with alignment enabled [PR](https://github.com/alicevision/AliceVision/pull/1196)\n- [ci] upgrade vcpkg version [PR](https://github.com/alicevision/AliceVision/pull/1179)\n- Update actions/stale to latest version v5 [PR](https://github.com/alicevision/AliceVision/pull/1174)\n- [cmake] all-in-one: Upgrade dependencies [PR](https://github.com/alicevision/AliceVision/pull/1127)\n- Add ca-certificates update to Ubuntu docker build. [PR](https://github.com/alicevision/AliceVision/pull/1118)\n- [doc] now aligned with cmake BUILD_SHARED_LIBS [PR](https://github.com/alicevision/AliceVision/pull/1134)\n- [doc] fix bibtex [PR](https://github.com/alicevision/AliceVision/pull/1109)\n- [doc] readme: update citation [PR](https://github.com/alicevision/AliceVision/pull/1105)\n- [ci] fixing a commit id issue in windows github action [PR](https://github.com/alicevision/AliceVision/pull/1089)\n- [ci] launch unit tests on windows [PR](https://github.com/alicevision/AliceVision/pull/1087)\n- [ci] Add Windows CI on Github Actions [PR](https://github.com/alicevision/AliceVision/pull/1067)\n- [doc] install update for windows [PR](https://github.com/alicevision/AliceVision/pull/1079)\n- [cmake] Move to C++14 [PR](https://github.com/alicevision/AliceVision/pull/1080)\n- [sensorDB] Many updates to the sensor database [List of PRs](https://github.com/alicevision/AliceVision/issues?q=label%3Asensordb+is%3Aclosed+milestone%3A3.0.0)\n\n### Contributors\n\nThanks to [Fabien Servant](https://github.com/servantftechnicolor), [Gregoire De Lillo](https://github.com/gregoire-dl), [Vincent Demoulin](https://github.com/demoulinv), [Thomas Zorroche](https://github.com/Thomas-Zorroche), [Povilas Kanapickas](https://github.com/p12tic), [Simone Gasparini](https://github.com/simogasp), [Candice Bentejac](https://github.com/cbentejac), [Loic Vital](https://github.com/mugulmd), [Jean Melou](https://github.com/jmelou), [Matthieu Hog](https://github.com/mh0g), [Simon Schuette](https://github.com/natowi), [Ludwig Chieng](https://github.com/ludchieng), [Vincent Scavinner](https://github.com/vscav), [Stella Tan](https://github.com/tanstella) for the major contributions.\n\nAll the release contributors:\n[a-yonenaga](https://github.com/a-yonenaga), [aidalgol](https://github.com/aidalgol), [AutomatonGeo](https://github.com/AutomatonGeo), [bartoszek](https://github.com/bartoszek), [caiotizio](https://github.com/caiotizio), [camillem](https://github.com/camillem), [canonex](https://github.com/canonex), [chb-jibald](https://github.com/chb-jibald), [Chuardo](https://github.com/Chuardo), [dadul96](https://github.com/dadul96), [DanielDelaporus](https://github.com/DanielDelaporus), [DanielMartin100](https://github.com/DanielMartin100), [Davidsonssilva](https://github.com/Davidsonssilva), [Demarcobank](https://github.com/Demarcobank), [drkoller](https://github.com/drkoller), [ecty99](https://github.com/ecty99), [Ednaordinary](https://github.com/Ednaordinary), [elektrokokke](https://github.com/elektrokokke), [emmanuejtorres](https://github.com/emmanuejtorres), [fabiencastan](https://github.com/fabiencastan), [Garoli](https://github.com/Garoli), [ghost](https://github.com/ghost), [hammady](https://github.com/hammady), [jmenlow](https://github.com/jmenlow), [lapo-luchini](https://github.com/lapo-luchini), [leohumnew](https://github.com/leohumnew), [loqs](https://github.com/loqs), [LRNKN](https://github.com/LRNKN), [object71](https://github.com/object71), [Ogloppi](https://github.com/Ogloppi), [Phoenix-64](https://github.com/Phoenix-64), [PixlEmly](https://github.com/PixlEmly), [remmel](https://github.com/remmel), [rody052](https://github.com/rody052), [sanchayanghosh](https://github.com/sanchayanghosh), [shanji97](https://github.com/shanji97), [SM-26](https://github.com/SM-26), [stellarpower](https://github.com/stellarpower), [techcavy](https://github.com/techcavy), [ThalissonD](https://github.com/ThalissonD), [Tigwin](https://github.com/Tigwin), [Toast-arch](https://github.com/Toast-arch), [Tonycopy](https://github.com/Tonycopy), [tralalafiala](https://github.com/tralalafiala), [tzr250-1kt](https://github.com/tzr250-1kt), [xzuyn](https://github.com/xzuyn)\n\n\n## Release 2.4.0 (2021/02/26)\n\n### Release Notes Summary\n\n - [panorama] PanoramaCompositing: new algorithm with tiles to deal with large panoramas [PR](https://github.com/alicevision/AliceVision/pull/947)\n - [feature] Improve robustness of sift features extraction on challenging images: update default values, add new filtering and add dsp-sift variation [PR](https://github.com/alicevision/AliceVision/pull/935)\n - [fuseCut] Reduce mesh artefacts from numerical issues by improving the tetrahedral intersection [PR](https://github.com/alicevision/AliceVision/pull/848) [PR](https://github.com/alicevision/AliceVision/pull/972) [PR](https://github.com/alicevision/AliceVision/pull/984)\n - [fuseCut] Improve mesh quality with a new graphcut post-processing: cells status filtering by solid angle ratio [PR](https://github.com/alicevision/AliceVision/pull/977)\n - [software] Texturing: improve memory estimation [PR](https://github.com/alicevision/AliceVision/pull/982)\n - [panorama] New options to init with known poses [PR](https://github.com/alicevision/AliceVision/pull/964)\n\n### Other Improvements and Bug Fixes\n\n - [fuseCut] added a parameter to filter points based on number of observations [PR](https://github.com/alicevision/AliceVision/pull/885)\n - [hdr] minor code cleanup in sampling [PR](https://github.com/alicevision/AliceVision/pull/976)\n - [matching] implement cross check for feature matching [PR](https://github.com/alicevision/AliceVision/pull/980)\n - [meshing] Digging using shape from silhouette principle [PR](https://github.com/alicevision/AliceVision/pull/971)\n - [meshing] More control on graph cut post processing [PR](https://github.com/alicevision/AliceVision/pull/987)\n - [software] Add mesh utilities softwares [PR](https://github.com/alicevision/AliceVision/pull/969)\n - [software] MeshFiltering: smoothing and filtering options on subset of the geometry [PR](https://github.com/alicevision/AliceVision/pull/970)\n - [software] sfmTransform: new from_center_camera [PR](https://github.com/alicevision/AliceVision/pull/986)\n - [software] CameraInit: allow to assign the same pose to multiple images [PR](https://github.com/alicevision/AliceVision/pull/951)\n - [software] ExportAnimatedCamera: Export distortion map in exr format [PR](https://github.com/alicevision/AliceVision/pull/963)\n - [depthMap] bug fix on image export if image already computed [PR](https://github.com/alicevision/AliceVision/pull/944)\n - [texturing] segfault fix [PR](https://github.com/alicevision/AliceVision/pull/923)\n - [image] Remove reference to potentially destroyed object [PR](https://github.com/alicevision/AliceVision/pull/937)\n - [sfmData] Support for unavailable folder in sfmData [PR](https://github.com/alicevision/AliceVision/pull/765)\n - Move PRNG initialization out of library [PR](https://github.com/alicevision/AliceVision/pull/934)\n - White balance [PR](https://github.com/alicevision/AliceVision/pull/932)\n - Preliminary work for lighting estimation from normal maps and albedo [PR](https://github.com/alicevision/AliceVision/pull/797)\n\n### Build, CI, Documentation\n\n - [cmake] Update deps [PR](https://github.com/alicevision/AliceVision/pull/985) [PR](https://github.com/alicevision/AliceVision/pull/978)\n - [cmake] fix sm86 only for cuda >= 11.1 [PR](https://github.com/alicevision/AliceVision/pull/925)\n - [cmake] Use modern cmake to manage OpenGV [PR](https://github.com/alicevision/AliceVision/pull/994)\n - [cmake] update flags for Intel i9-10900K [PR](https://github.com/alicevision/AliceVision/pull/993)\n - [ci] speedup functional tests [PR](https://github.com/alicevision/AliceVision/pull/958)\n - [sensorDB] Many updates to cameraSensors.db\n\n\n## Release 2.3.1 (2020.10.14)\n\n - [software] FeatureExtraction: minor update to SIFT memory estimation [PR](https://github.com/alicevision/AliceVision/pull/917)\n\n\n## Release 2.3.0 (2020.10.09)\n\n### Release Notes Summary\n\n - [hdr] Improved HDR calibration, including new LdrToHdrSampling for optimal sample selection\n[PR](https://github.com/alicevision/AliceVision/pull/835) [PR](https://github.com/alicevision/AliceVision/pull/749) [PR](https://github.com/alicevision/AliceVision/pull/899)\n - [panorama] New Panorama Stitching nodes with support for fisheye lenses\n[PR](https://github.com/alicevision/AliceVision/pull/678) [PR](https://github.com/alicevision/AliceVision/pull/749) [PR](https://github.com/alicevision/AliceVision/pull/844) [PR](https://github.com/alicevision/AliceVision/pull/857) [PR](https://github.com/alicevision/AliceVision/pull/871)\n - [texturing] Improve texturing quality on (low-poly) user mesh after retopology [PR](https://github.com/alicevision/AliceVision/pull/677)\n - [multiview] Addition of 10 points relative pose solver [PR](https://github.com/alicevision/AliceVision/pull/474)\n - [sfm] Coordinate system alignment to specific markers or between scenes [PR](https://github.com/alicevision/AliceVision/pull/695)\n - [matching] Add methods in imageMatching [PR](https://github.com/alicevision/AliceVision/pull/730)\n - [sfmData] More generic metadata support [PR](https://github.com/alicevision/AliceVision/pull/820) [PR](https://github.com/alicevision/AliceVision/pull/865)\n - [software] New ImageProcessing software [PR](https://github.com/alicevision/AliceVision/pull/741) [PR](https://github.com/alicevision/AliceVision/pull/763) [PR](https://github.com/alicevision/AliceVision/pull/826) [PR](https://github.com/alicevision/AliceVision/pull/825)\n\n### Other Improvements and Bug Fixes\n\n - [cameraInit] Support more extensions and add new viewId generation method [PR](https://github.com/alicevision/AliceVision/pull/823)\n - [depthMap] Fixed potential index out of range exception in PlaneSweepingCuda [PR](https://github.com/alicevision/AliceVision/pull/694) \n - [feature] Fix popsift static release [PR](https://github.com/alicevision/AliceVision/pull/807)\n - [fuseCut] Improve delaunayGraphCut [PR](https://github.com/alicevision/AliceVision/pull/832) \n - [fuseCut] Similarity map is optional [PR](https://github.com/alicevision/AliceVision/pull/831) \n - [hdr] Update compensation of aperture and ISO change in HDR fusion [PR](https://github.com/alicevision/AliceVision/pull/863)\n - [image] Fix bug with input RGBA Images [PR](https://github.com/alicevision/AliceVision/pull/743)\n - [keyframe] KeyframeSelector: add padding in created filenames [PR](https://github.com/alicevision/AliceVision/pull/740)\n - [matching] Fix unmatching declaration and definitions [PR](https://github.com/alicevision/AliceVision/pull/810)\n - [meshing] Fix load of depth maps without metadata [PR](https://github.com/alicevision/AliceVision/pull/738)\n - [meshing] Simplify input depth map folders [PR](https://github.com/alicevision/AliceVision/pull/815)\n - [panorama] HDR Panorama: Handle very high intensities [PR](https://github.com/alicevision/AliceVision/pull/891)\n - [panorama] Panorama: Add Graphcut in compositing [PR](https://github.com/alicevision/AliceVision/pull/850) [PR](https://github.com/alicevision/AliceVision/pull/876)\n - [sfm] Add scale as parameter in functions for sfm [PR](https://github.com/alicevision/AliceVision/pull/736)\n - [sfm] Bugfix: ceres::AngleAxisRotatePoint cannot be used in-place [PR](https://github.com/alicevision/AliceVision/pull/696)\n - [sfm] Performance improvements: optimize RemoveOutliers_AngleError [PR](https://github.com/alicevision/AliceVision/pull/841)\n - [sfm] SfM statistics [PR](https://github.com/alicevision/AliceVision/pull/774)\n - [sfmDataIO] Add Observation scale in IO [PR](https://github.com/alicevision/AliceVision/pull/766)\n - [sfmSfM] Major bug fix on BlockOrder in BACeres [PR](https://github.com/alicevision/AliceVision/pull/849)\n - [software] ConvertSfMFormat: bug fix: remove pose only if it exists [PR](https://github.com/alicevision/AliceVision/pull/859)\n - [software] Image matching: fix min nb images [PR](https://github.com/alicevision/AliceVision/pull/739) \n - [software] ImageProcessing: add option to fix non finite pixels [PR](https://github.com/alicevision/AliceVision/pull/890)\n - [software] ImageProcessing: add storageDataType option [PR](https://github.com/alicevision/AliceVision/pull/896)\n - [software] PanoramaCompositing: option to select the percentage of upscaled pixels:[PR](https://github.com/alicevision/AliceVision/pull/864)\n - [software] PanoramaEstimation: sort input images by shooting time to select the center camera [PR](https://github.com/alicevision/AliceVision/pull/868)\n - [software] PanoramaInit: Add an extra image rotation to each camera declared the input xml [PR](https://github.com/alicevision/AliceVision/pull/867)\n - [software] PanoramaInit: Add new restriction to circle detection [PR](https://github.com/alicevision/AliceVision/pull/872)\n - [software] PanoramaInit: improve fisheye circle detection[PR](https://github.com/alicevision/AliceVision/pull/897)\n - [software] SfMTransfer: New option to copy intrinsics from one sfmdata to another [PR](https://github.com/alicevision/AliceVision/pull/882)\n - [tracks] Fix tracks filtering [PR](https://github.com/alicevision/AliceVision/pull/761)\n - [voctree] Fix possible overflow in unsigned subtraction [PR](https://github.com/alicevision/AliceVision/pull/786)\n - [windows] Add main function wrapper to catch exceptions and avoid annoying error popup on windows [PR](https://github.com/alicevision/AliceVision/pull/768)\n - [sensorDB] Many updates to cameraSensors.db\n\n### Build, CI, Documentation\n\n - [matching] Build fix for MSVC 2019 [PR](https://github.com/alicevision/AliceVision/pull/805)\n - [build] Avoid circular dependency [PR](https://github.com/alicevision/AliceVision/pull/839)\n - [build] Fix build against cuda<=11 [PR](https://github.com/alicevision/AliceVision/pull/851)\n - [build] Fix offset logging against boost 1.71 [PR](https://github.com/alicevision/AliceVision/pull/709)\n - [build] Fix prettyprint MSVC compatibility [PR](https://github.com/alicevision/AliceVision/pull/784)\n - [build] Fix unit test includes [PR](https://github.com/alicevision/AliceVision/pull/773)  \n - [build] Make sure suitesparse build with jenkins pipeline [PR](https://github.com/alicevision/AliceVision/pull/801)\n - [build] Remove unused embedded cxsparse [PR](https://github.com/alicevision/AliceVision/pull/770)\n - [build] Workaround for a build incompatibility between prettyprint and eigen [PR](https://github.com/alicevision/AliceVision/pull/705) \n - [ci] Add github actions CI [PR](https://github.com/alicevision/AliceVision/pull/782)\n - [ci] AppVeyor: Build with VS 2019, Cuda 11 [PR](https://github.com/alicevision/AliceVision/pull/776) \n - [ci] Build alicevision snapshot binaries (win) [PR](https://github.com/alicevision/AliceVision/pull/753)\n - [ci] remove travis [PR](https://github.com/alicevision/AliceVision/pull/843) \n - [cmake] All-in-one: update geogram to 1.7.3 [PR](https://github.com/alicevision/AliceVision/pull/732) \n - [cmake] Build all-in-one: add gmp, mpfr, ffmpeg [PR](https://github.com/alicevision/AliceVision/pull/892)\n - [cmake] Fix eigen flags [PR](https://github.com/alicevision/AliceVision/pull/791)\n - [cmake] Fix findOpenEXR missing  escapes [PR](https://github.com/alicevision/AliceVision/pull/788) \n - [cmake] Missing Boost::boost dependency [PR](https://github.com/alicevision/AliceVision/pull/771)\n - [cmake] Update required CMake version [PR](https://github.com/alicevision/AliceVision/pull/811) \n - [cmake] Using modern cmake for boost [PR](https://github.com/alicevision/AliceVision/pull/719)\n - [cmake] Add cuda support for SM 86 [PR](https://github.com/alicevision/AliceVision/pull/911)\n - [doc] Build: add notice that english language pack is required for VS/vcpkg [PR](https://github.com/alicevision/AliceVision/pull/804)\n - [doc] Fixed citation [PR](https://github.com/alicevision/AliceVision/pull/716)\n - [doc] INSTALL.md: add boost-timer and lz4 to vcpkg install command [PR](https://github.com/alicevision/AliceVision/pull/704)\n - [docker] Clean docker images for centos and ubuntu [PR](https://github.com/alicevision/AliceVision/pull/881)\n - [docker] Fix ubuntu dockerfile [PR](https://github.com/alicevision/AliceVision/pull/800)\n - [docker] Fixes docker and all-in-one cmake build [PR](https://github.com/alicevision/AliceVision/pull/785)\n - [docker] Minor Changes in the docker build command [PR](https://github.com/alicevision/AliceVision/pull/760)\n - [docker] Release docker [PR](https://github.com/alicevision/AliceVision/pull/762) \n - [github] Added actions for stale issues [PR](https://github.com/alicevision/AliceVision/pull/693)\n - [github] Fix stale.yml [PR](https://github.com/alicevision/AliceVision/pull/781)\n - [meshing] Code refactoring [PR](https://github.com/alicevision/AliceVision/pull/667)\n - [sensor] Replace deprecated basestring with str (Py3) [PR](https://github.com/alicevision/AliceVision/pull/722)\n - [sfmDataIO] Throw if we try to load an abc file and AliceVision is built without Alembic support [PR](https://github.com/alicevision/AliceVision/pull/878)\n - [system] Logger levels were not case insensitive [PR](https://github.com/alicevision/AliceVision/pull/711)\n - [windows] Fixing vs2019 build options [PR](https://github.com/alicevision/AliceVision/pull/796)\n\nFor more details see all PR merged: https://github.com/alicevision/AliceVision/milestone/31\n\n\n## Release 2.2.0 (2019.08.08)\n\nRelease Notes Summary:\n\n - Texturing: Largely improve the Texturing quality using Multi-Band Blending technique. [PR](https://github.com/alicevision/AliceVision/pull/629)\n - Texturing: Support for RAW image files: Libraw update and fix its usage in OpenImageIO (fix color shift and use correct gamma). [PR](https://github.com/alicevision/AliceVision/pull/645)\n - Texturing: Performance optimization by iterating over multiple output textures at the same time. [PR](https://github.com/alicevision/AliceVision/pull/615)\n - Texturing: Add support for UDIM in UV mapping and use it by default. [PR](https://github.com/alicevision/AliceVision/pull/596)\n - Meshing: Export the dense point cloud in Alembic and computes the points colors [PR](https://github.com/alicevision/AliceVision/pull/597).\n - Meshing: New option to export the full raw dense point cloud in the Meshing software (with all 3D points candidates before cut and filtering). [PR](https://github.com/alicevision/AliceVision/pull/597)\n - Meshing: Adds an option to export color data per vertex and MeshFiltering correctly preserves colors. [PR](https://github.com/alicevision/AliceVision/pull/661).\n - HDR: New HDR module for the fusion of multiple LDR images with the corresponding new software LDR2HDR. It implements linear fusion as well as Camera Response Function (CRF) calibration with Robertson, Debevec or Grossberg methods. [PR](https://github.com/alicevision/AliceVision/pull/613)\n - PrepareDenseScene: Add experimental option to correct Exposure Values (EV) of input images to uniformize dataset exposures. [PR](https://github.com/alicevision/AliceVision/pull/652)\n - FeatureExtraction: Include CCTag in the release binaries both on Linux and Windows. [PR](https://github.com/alicevision/AliceVision/pull/657)\n\nFull Release Notes:\n\n - DepthMap: Bug fix if no nearby cameras (a big bottleneck of the release 2019.1). [PR](https://github.com/alicevision/AliceVision/pull/616)\n - DepthMap: Bug fix: missing allocation when reducing the number of planes. [PR](https://github.com/alicevision/AliceVision/pull/642)\n - DepthMap: Bug fix: SGM early stop condition could provide an unallocated buffer to the refine step [PR](https://github.com/alicevision/AliceVision/pull/671)\n - FeatureExtraction: Bug fix in AKAZE filtering (sort keypoints by size before grid filtering). [PR](https://github.com/alicevision/AliceVision/pull/635)\n - FeatureMatching: Bug fix: use ranges prefix to avoid overwrites of matching files when using ImageMatching. [PR](https://github.com/alicevision/AliceVision/pull/628)\n - SfM: Improve SfM colorization performances. [PR](https://github.com/alicevision/AliceVision/pull/597)\n - SfM: Fix intrinsics edges management in the Local Bundle Adjustment (LBA). [PR](https://github.com/alicevision/AliceVision/pull/624)\n - Texturing: UVAtlas: downscale charts to fit in texture to avoid bug with small \"Texture Side\". Apply downscale factor to fit larger charts into the texture, and use it when filling atlases and computing final UV textures. [PR](https://github.com/alicevision/AliceVision/pull/598)\n - SfM: Fix management of intrinsics related connections in the local bundle adjustment graph which could lead to removal of wrong edges and potential corruption of the graph. This could end up with the SfM going in an infinite loop and/or undefined behavior. [PR](https://github.com/alicevision/AliceVision/pull/624)\n - DepthMap: Remove useless remaining image transpositions. [PR](https://github.com/alicevision/AliceVision/pull/653)\n - CCTag: Major update to get Windows compatibility. [PR](https://github.com/alicevision/CCTag/pull/78)\n - SfMDataIO: Change root nodes (XForms instead of untyped objects) of Alembic SfMData for better interoperability with other 3D graphics applications (in particular Blender and Houdini). [PR](https://github.com/alicevision/AliceVision/pull/659)\n - DepthMap: Add option to create Normal Maps in DepthMapEstimation (not used in other part of the pipeline for now). [PR](https://github.com/alicevision/AliceVision/pull/604)\n - DepthMap: Add option to export similarity volumes in Alembic files (for research analysis). [PR](https://github.com/alicevision/AliceVision/pull/603)\n - DepthMap: remove useless images transpositions. [PR](https://github.com/alicevision/AliceVision/pull/653), [and fix](https://github.com/alicevision/AliceVision/pull/666)\n - Texturing: Add option to choose the internal colorspace used for color fusion. [PR](https://github.com/alicevision/AliceVision/pull/651)\n - Texturing: Add option to correct exposure values during Texturing. [PR](https://github.com/alicevision/AliceVision/pull/656)\n - FeatureExtraction: include CCTag in the release binaries. [PR](https://github.com/alicevision/AliceVision/pull/657).\n - Travis: Update libraries dependencies. [PR](https://github.com/alicevision/AliceVision/pull/637)\n - SensorDB: Add more than 100 new models. [PR](https://github.com/alicevision/AliceVision/pull/618)\n - CMake: New doxygen documentation target. [PR](https://github.com/alicevision/AliceVision/pull/627)\n - CMake: Improve usage as third-party library. [PR](https://github.com/alicevision/AliceVision/pull/672)\n\nFor more details see all PR merged: https://github.com/alicevision/AliceVision/milestone/30\n\n\n## Release 2.1.0 (2019.01.30)\n\nRelease Notes Summary:\n - More complete sensor database and better matching as well as explicit status for lens initialization\n - Add support for rig of cameras. This enables to add more contraints if you make acquisition with multiple synchronized devices.\n - Support for reconstruction with projected light patterns and texturing with another images set.\n - Better estimation of the space to reconstruct to limit the reconstruction zone. This avoid to reconstruct low quality and useless areas around the main object/environment.\n - New option to directly mesh the SfM results. This provides a quick solution to get a draft mesh (without cuda requirement).\n - Reduce IO and intermediate files in MVS part of the pipeline.\n\nFull Release Notes:\n - sensorDB: Update the sensors database with much more models\n - sensorDB: Use `FocalLengthIn35mmFilm` metadata as a fallback if available\n - sensorDB: Improve matching of metadata make/model with sensor database\n - CameraInit: New management of intrinsics (serial number, error/warning log) with an explicit InstrinsicInitMode enum\n - CameraInit: Fix intrinsics grouping with serial number as expected and add metadata \"AliceVision::SensorWidth\"\n               (or \"AliceVision::SensorWidthEstimated\" if estimated from `FocalLength`/`FocalLengthIn35mmFilm`)\n - CameraInit: Explicit warning if serial number is missing\n - SfM: Add support for rig of cameras. This information is used as a new constraint in the SfM. This option can now be combined with localBA.\n        You need to use a specific folder hierarchy in the input images files (for instance: “/my/dataset/rig/0/DSLR_0001.JPG”, “/my/dataset/rig/1/DSLR_0001.JPG”) to provide this information.\n - PrepareDenseScene: New `imagesFolders` option to override input images. This enables to use images with light patterns projected for SfM and MVS parts\n                      and do the Texturing with another set of images.\n - Meshing fusion: New option to use SfM landmarks (mesh from sparse point cloud) or combine them with depth maps\n - Meshing: Add option `estimateSpaceFromSfM` to better estimate the bounding box of the reconstruction and avoid useless reconstruction of the environment\n - MVS: Reduce IO and intermediate files. Use sfmData in the MVS pipeline (instead of MVS seeds, ini file) and do not export depthmap files before refine\n - ExportAnimatedCamera: Improved solution to export an SfM result into an animated camera\n - PrepareDenseScene: Remove hackish software `CameraConnection` (now properly done in PrepareDenseScene)\n - PrepareDenseScene: Allow parallelization on renderfarm\n - FeatureExtraction: Add grid filtering in AKAZE (to avoid unmanageable number of keypoints on well textured images)\n - DepthMap: Fix memory leak in SGMVolume\n - Meshing: Fix loading of OBJ with normals\n - System: Improve gpu detection and logging\n - DepthMap: Enable usage of multiple GPUs by default with an option to add a limit\n - DepthMap: Fuse estimate & refine in a single loop (fuse “computeDepthMapsPSSGM” with “refineDepthMaps”)  and use the same image cache\n - DepthMap: Remove depthMapInfo files and use image metadata instead\n - DepthMap: Initial refactoring for better readability to prepare the optimization work\n - SfM: Refactoring of localBA (now fused with the standard BA code to avoid redundancy)\n - ConvertSfMFormat: Users can now specify a view whitelist to filter views\n - SfM: The user can provide only one image of the initial pair and it will choose the 2nd image automatically.\n        This allows to ensure that the reconstruction start from a specific part of the scene without choosing the image pair manually.\n - SfMTransform: Allow to choose one view as the origin for the coordinate system\n - SfM Augmentation from known poses: When the sfm starts with existing cameras poses but without landmarks, it now does the triangulation first.\n - LightingEstimation: New module with preliminary low-level methods for lighting estimation (spherical harmonics)\n - MeshDenoising: Fix ignored parameter denoising outer iteration\n - Meshing: Bug fix (infinity loop) in Meshing when the BBox is empty\n - SfM LocalBA: reduce minimum number of images to use sparse BA (change threshold from 100 to 20) to speedup large reconstructions when localBA is used.\n - Minor build fix for compatibility with ceres 2.\n\n\n## Release 2.0.0 (2018.08.09)\n\nRelease of the full 3D reconstruction pipeline.\n\n### 2018.07\n\n - New Docker images for Centos 7 and Ubuntu 18\n - New \"make bundle\" for packaging\n - Refactor split sfm / sfmData / sfmDataIO\n - New visibility remapping methods: Push, PullPush\n - Improve texturing quality with better image selection\n - SfM support multiple folders for features and matches\n - PopSiftImageDescriber: no initialization if not used\n - Offline camera tracking improvements\n - Export animated camera ABC\n - Export undistorted images and filter option\n - MeshroomMaya script integration Image Plane\n - Minor fixes in cameraSensors DB search\n - New fallback if no sensor width info available but FocalLengthIn35mmFilm metadata is present\n - ImageMatchingMultiSfM: add “a_a+a_b” option\n\n### 2018.06\n\n - SfM Augmentation: lock cameras from the initial reconstruction\n - SfM: Add option in order to disable the cleaning of tracks forks\n\n### 2018.03\n\n - Merge the MVS pipeline in the main branch\n - New options for better auto UVs based on geogram (needs reasonable mesh size in input)\n - Use full resolution images in the MVS pipeline: PrepareDenseScene creates full resolution undistorted images, DepthMap computes downscale when loading images and Texturing can be done in full resolution.\n - New depth map fusion with a multi-scale approach (using nanoflann)\n - ImageMatching: Fix conflict if multiple images with the same UID\n - Add SIFT_UPRIGHT as an ImageDescriber\n\n## Release 1.0.0 (2018.03.07)\n\nRelease of the Structure-From-Motion pipeline.\n\n### 2018.02\n\n - Support Raw and Exr input files\n - Texturing: add multithreading / clean iteration over pixels in triangle\n - MVS: use UIDs\n - Major MVS refactoring\n - New Mesh Denoiser and Decimate based on MeshSDFilter\n - Integration of Uncertainty computation step\n\n### 2018.01\n\n - Meshing: Remove facets with helper points but limit holes creation\n - Texturing: Don’t modify the topology\n - Meshing: Add an option to keep only the largest facets group\n - cmake: Geogram as a submodule of cmpmvs\n - Update SfM\n - Modify Image Matching\n - SfM Reorientation software\n - Use OpenMP for featureExtraction with a new imageDescriber memory needs estimation\n - Rewrite “Identify the track to triangulate” in triangulateMultiViews_LORANSAC\n - popSIFT directly on floating point images\n - Use relative path for features and matches in SfM\n - Remove cereal dependency\n - Remove static functions in headers\n - MVS: Add namespace per module\n - MVS: Build as dynamic libraries\n - MVS: Remove unneeded intermediate images\n\n### 2017.12\n\n - Reduce the amount of storage for intermediate files and improve robustness to kill/restart jobs on renderfarm\n - New software to create simplified versions of the mesh\n - Use OpenImageIO in MVS\n - Use floating point image in texturing\n\n### 2017.11\n\n - New Local Bundle Adjustment to speedup SfM on large scenes\n - Retexturing on an external user mesh with a retopology (no visibility information and support user UVs) with a first visibilities remapping method.\n - Add new images to a previous SfM reconstruction\n - Use OpenImageIO in SfM\n\n### 2017.10\n\n - Reduce memory usage on Meshing\n\n### 2017.10\n\n - SfM: Support for RIG of synchronized cameras/DSLR with a new constraint between rigidly fixed cameras\n - New software utility for 360° cameras\n\n### 2017.08\n\n - Tetrahedralization scoring with boost maxflow\n\n### 2017.07\n\n - Meshing tetrahedralization with geogram\n - Texturing speedup\n - Rewrite CUDA layer\n\n### 2017.06\n\n - SfM: Weighting on image describers to combine them correctly\n\n### 2017.03\n\n - MVS: Support for multiple image resolutions\n\n### 2017.02\n\n - MVS: Code comments and documentation\n - MVS: Performance improvements\n - Texturing: Fix UV coords\n - MVS: Split Meshing and Texturing steps\n - Texturing: Rewrite edge padding for performance reasons\n\n### 2017.01\n\n - MVS: Linux code porting\n\n### 2016\n\n - Integration of PopSift: a new GPU SIFT implementation\n - SfM: Add LoRansac\n - SfM: New next best view strategy to promote good repartition in images. Same rule in image pair selection.\n - SfM: Optional filtering of the input tracks with a minimal track length\n - SfM: Optional limitation on the number of input matches from an image pair\n - Sort features and matches\n - FeatureExtraction: Limit the number of features per image with grid filtering to ensure good repartition\n - New software to align reconstructions based on common cameras (using UID)\n\n### 2015\n\n - New Alembic file format to store sparse point cloud and cameras\n - Integration of new CCTag markers with CPU and CPU implementations\n - SfM use UID\n - Support for cameras RIG calibration and localization based on opengv\n - Camera lens calibration based on opencv\n - New camera localization module\n - SfM speedup by precomputing tracks visibilities and adjusting BA thresholds\n - New Image Matching based on vocabulary tree approach\n - Features extraction and features matching parallelization on multiple computers for renderfarm usage\n\n### 2014\n\n - First public source code release of the SfM pipeline\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.2275390625,
          "content": "cmake_minimum_required(VERSION 3.12)\nproject(aliceVision LANGUAGES C CXX)\n\noption(ALICEVISION_BUILD_DEPENDENCIES \"Build all AliceVision dependencies\" OFF)\noption(AV_BUILD_ALICEVISION \"Enable building of AliceVision\" ON)\noption(AV_EIGEN_MEMORY_ALIGNMENT \"Enable Eigen memory alignment\" ON)\noption(ALICEVISION_BUILD_TESTS \"Build AliceVision tests\" OFF)\noption(AV_USE_CUDA \"Enable CUDA\" ON)\noption(AV_USE_OPENMP \"Enable OpenMP\" $<$<CXX_COMPILER_ID:\"AppleClang\">,OFF,ON>) # disable by default for AppleClang\noption(BUILD_SHARED_LIBS \"Build shared libraries\" ON)\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Build type for AliceVision\" FORCE)\nendif()\n\n# set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Build type for AliceVision\")\nset(DEPS_CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Build type for all external libraries (only used if ALICEVISION_BUILD_DEPENDENCIES=ON)\")\nstring(TOLOWER ${DEPS_CMAKE_BUILD_TYPE} DEPS_CMAKE_BUILD_TYPE_LOWERCASE)\nset(ALICEVISION_BUNDLE_PREFIX \"${CMAKE_INSTALL_PREFIX}/bundle\" CACHE STRING \"Path for bundle installation\")\nset(ALICEVISION_ROOT ${PROJECT_BINARY_DIR})\n\n# ==============================================================================\n# GNUInstallDirs CMake module\n# - Define GNU standard installation directories\n# - Provides install directory variables as defined by the GNU Coding Standards.\n# ==============================================================================\ninclude(GNUInstallDirs)\n\nif(CMAKE_BUILD_TYPE MATCHES Release)\n    message(STATUS \"Force CMAKE_INSTALL_DO_STRIP in Release\")\n    set(CMAKE_INSTALL_DO_STRIP TRUE)\nendif()\n\nmessage(STATUS \"----------------------------------------\")\nmessage(STATUS \"ALICEVISION_BUILD_DEPENDENCIES: ${ALICEVISION_BUILD_DEPENDENCIES}\")\nmessage(STATUS \"ALICEVISION_BUILD_TESTS: ${ALICEVISION_BUILD_TESTS}\")\nmessage(STATUS \"\")\nmessage(STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\nmessage(STATUS \"DEPS_CMAKE_BUILD_TYPE: ${DEPS_CMAKE_BUILD_TYPE}\")\nmessage(STATUS \"CMAKE_INSTALL_LIBDIR: ${CMAKE_INSTALL_LIBDIR}\")\nmessage(STATUS \"CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}\")\nmessage(STATUS \"CMAKE_INSTALL_RPATH: ${CMAKE_INSTALL_RPATH}\")\nmessage(STATUS \"CMAKE_INSTALL_DO_STRIP: ${CMAKE_INSTALL_DO_STRIP}\")\nmessage(STATUS \"----------------------------------------\")\n\n# Eigen requires overaligned buffers for maximum efficiency (e.g. on AVX512 buffers may need to\n# be aligned to 64 bytes). Fortunately this is fixed in C++17.\n# See https://eigen.tuxfamily.org/dox/group__TopicUnalignedArrayAssert.html\n# Only change this option to disable it for older compilers or for debug purposes.\nif(NOT AV_EIGEN_MEMORY_ALIGNMENT)\n    set(EIGEN_CMAKE_ALIGNMENT_FLAGS\n        \"-DCMAKE_CXX_FLAGS:STRING=-DEIGEN_MAX_ALIGN_BYTES=0 -DEIGEN_MAX_STATIC_ALIGN_BYTES=0\"\n        \"-DCMAKE_C_FLAGS:STRING=-DEIGEN_MAX_ALIGN_BYTES=0 -DEIGEN_MAX_STATIC_ALIGN_BYTES=0\")\nendif()\n\n\n# ==============================================================================\n# Enable cmake UNIT TEST framework\n# ==============================================================================\nif(ALICEVISION_BUILD_TESTS)\n    include(CTest)\n    enable_testing()\nendif()\n\n\nif(ALICEVISION_BUILD_DEPENDENCIES)\n    include(src/cmake/Dependencies.cmake)\nelse()\n\n# ==============================================================================\n# Standard cmake project without internal support for dependencies\n# ==============================================================================\n\n# Add sources\nadd_subdirectory(src)\n\ninstall(\n    FILES \n        LICENSE-MPL2.md \n        LICENSE-MIT-libmv.md \n        COPYING.md \n        CONTRIBUTORS.md\n    DESTINATION ${CMAKE_INSTALL_DATADIR}/aliceVision\n)\n\nendif()\n\n# Bundle target (see src/cmake/MakeBundle.cmake)\n# Note: require that the install rule has been executed\n# Include VCPKG installed dir for runtime dependencies lookup\nset(BUNDLE_LIBS_PATHS \"\")\nif(_VCPKG_INSTALLED_DIR)\n    set(BUNDLE_LIBS_PATHS ${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}$<$<CONFIG:Debug>:/debug>/bin)\nendif()\n\nadd_custom_target(bundle\n    ${CMAKE_COMMAND}\n    -DBUNDLE_INSTALL_PREFIX=${ALICEVISION_BUNDLE_PREFIX}\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}\n    -DBUNDLE_LIBS_PATHS=${BUNDLE_LIBS_PATHS}\n    -P ${CMAKE_CURRENT_SOURCE_DIR}/src/cmake/MakeBundle.cmake\n)\n\nset_target_properties(bundle PROPERTIES FOLDER Packaging)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.13671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team privately at alicevision-team@googlegroups.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct/\n\n[homepage]: https://www.contributor-covenant.org\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.517578125,
          "content": "Contributing to AliceVision\n===========================\n\nAlice Vision relies on a friendly and community-driven effort to create an open source photogrammetry solution.\nIn order to foster a friendly atmosphere where technical collaboration can flourish,\nwe recommend you to read the [code of conduct](CODE_OF_CONDUCT.md).\n\n\nContributing Workflow\n---------------------\n\nThe contributing workflow relies on [Github Pull Requests](https://help.github.com/articles/using-pull-requests/).\n\n1. If it is an important change, we recommend you to discuss it on the mailing-list\nbefore starting implementation. This ensure that the development is aligned with other developments already started and will be efficiently integrated.\n\n2. Create the corresponding issues.\n\n3. Create a branch and start a PR starting by [WIP], like \"[WIP] My new feature\" so everyone can follow the development.\nExplain the implementation in the PR description with links to issues.\n\n4. Implement the new feature(s). Add unit test if needed.\nOne feature per PR is ideal for review, but linked features can be part of the same PR.\n\n5. When it is ready for review, remove \"WIP\" from the PR name.\n\n6. The reviewers will look over the code and ask for changes, explain problems they found,\ncongratulate the author, etc. using the github comments.\n\n7. After approval, one of the developers with commit approval to the official main repository\nwill merge your fixes into the \"develop\" branch.\n\n8. If not already the case, your name will be added to the [contributors list](CONTRIBUTORS.md).\n\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 3.251953125,
          "content": "AliceVision Contributors\n========================\n\nThe project is released under [MPLv2](LICENSE-MPL2.md).\n\nIndividuals\n-----------\n\n- Abdelrahman Al Marouk\n- Candice Bentejac\n- Carsten Griwodz\n- Cenek Albl\n- Clement Aymard\n- Clement Debize\n- Cyril Pichard\n- Enguerrand De Smet\n- Fabien Castan\n- Fabien Servant\n- Gregoire De Lillo\n- Havard Espeland\n- Jean Melou\n- Julien Haudegond\n- Lilian Calvet\n- Loic Vital\n- Michal Polic\n- Nicolas Rondaud\n- Pierre Gurdjos\n- Povilas Kanapickas\n- Simone Gasparini\n- Théo Leplomb\n- Tomas Pajdla\n- Vincent Demoulin\n- Yann Lanthony\n- Zeljko Vrba\n\nInstitutions\n------------\n\n- Czech Technical University (CTU) in Prague, Czech Republic  \n  http://cmp.felk.cvut.cz\n- Institut National Polytechnique de Toulouse (Toulouse INP), France  \n  http://www.inp-toulouse.fr\n- Mikros Image, Post-Production Company in Paris, France  \n  http://www.mikrosimage.com\n- Simula Research Laboratory AS in Oslo, Norway  \n  https://www.simula.no\n- Quine in Oslo, Norway  \n  http://www.quine.no\n- This project has received funding from the European Union’s Horizon 2020 research and innovation programme  \n  [POPART](http://www.alicevision.org/popart) and [LADIO](http://www.alicevision.org/ladio).\n\n\nCMPMVS Contributors\n===================\n\n[CMPMVS](http://people.ciirc.cvut.cz/~pajdla/) has been the first step to build the AliceVision MVS pipeline.\nThis part was CTU proprietary solution.\n\nIndividuals\n-----------\n\n- Cenek Albl\n- Michal Jancosek\n- Tomas Pajdla\n\nInstitutions\n------------\n\n- Czech Technical University (CTU) in Prague, Czech Republic\n  http://cmp.felk.cvut.cz\n\n\nOpenMVG Contributors\n====================\n\n[openMVG](https://github.com/openMVG/openMVG) has been the first step to build the AliceVision SfM pipeline.\nThis part was released under [MPLv2](LICENSE-MPL2.md).\n\nIndividuals\n-----------\n\n- anhtuann\n- Bruno Duisit\n- cdcseacave\n- Chris Sweeney\n- Iivari Aikas\n- Kevin Cain\n- Kyle Wilson\n- luxigo\n- Michael Holroyd\n- Pascal Monasse\n- Pierre Moulon\n- Renaud Marlet\n- rhiestan\n- Romain Janvier\n- Romuald Perrot\n- Rory McCann\n- Sergi Pujades-Rocamora\n- Stephane Flotron\n- vincentweb\n- Yohann Salaun\n\nInstitutions\n------------\n- IMAGINE from the Universite Paris Est, LIGM Gaspard-Monge, France\n  http://imagine.enpc.fr\n- Mikros Image, Post-Production Company in Paris, France\n  http://www.mikrosimage.com\n\n\nlibmv Contributors\n==================\n\n[libmv](https://github.com/libmv/libmv) has been an important source of inspiration for the design of the SfM modules and part of the code from the \"multiview\" and \"robustEstimation\" modules are based on libmv code and continue to evolve.\nThis part was released under [MIT](LICENSE-MIT-libmv.md).\n\n- Andrew Chant <andrew.chant@gmail.com>\n- Daniel Waterworth <da.waterworth@gmail.com>\n- Darius Blaszyk <dblaszyk@gmail.com>\n- David Roberts <dvdr18@gmail.com>\n- Jose Gonzalez <de0a100@gmail.com>\n- Julien Michot <julien.michot.fr@gmail.com>\n- Keir Mierle <mierle@gmail.com>\n- Marco Molteni <marco.molteni@laposte.net>\n- Matthias Fauconneau <matthias.fauconneau@gmail.com>\n- Nathan Wiegand <nathanwiegand@gmail.com>\n- Pau Gargallo <pau.gargallo@gmail.com>\n- Pierre Moulon <pmoulon@gmail.com>\n- Rehno Lindeque <errantkid@gmail.com>\n- Slava Vishnyakov <bomboze@gmail.com>\n- Vess Perfanov <vessper@gmail.com>\n- W. James MacLean <w.james.maclean@gmail.com>\n\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 8.3359375,
          "content": "## AliceVision License\n\nAliceVision is licensed under the [MPL2 license](LICENSE-MPL2.md).\n\n[CMPMVS](http://people.ciirc.cvut.cz/~pajdla/) has been the first step to build the AliceVision MVS pipeline and was CTU proprietary solution before being part of AliceVision.  \n[openMVG](https://github.com/openMVG/openMVG) has been the first step to build the AliceVision SfM pipeline and was released under [MPLv2](LICENSE-MPL2.md).  \n[libmv](https://github.com/libmv/libmv) has been an important source of inspiration for the design and part of the code of the \"multiview\" and \"robustEstimation\"\nmodules are based on the libmv code released under MIT, see [LICENSE-MIT-libmv.md](LICENSE-MIT-libmv.md).\n\n\nIt also contains one file with different license:\n\n*   __kvld__  \n    [src/aliceVision/matching/kvld](src/aliceVision/matching/kvld)  \n    Copyright (C) 2011-12 Zhe Liu and Pierre Moulon.  \n    This file was first released under BSD-2-Clause license, see [LICENSE-BSD-2-Clause](http://opensource.org/licenses/BSD-2-Clause).\n\n\n## Third parties licenses\n\nThis program is based on works distributed under the terms of another license(s) and other copyright notice(s).\n\n*   __Alembic__ (optional)  \n    [http://www.alembic.io](http://www.alembic.io)  \n    Copyright 2009-2015 Lucasfilm Entertainment Company Ltd. or Lucasfilm Ltd.  \n    Copyright 2009-2015 Sony Pictures Imageworks Inc.  \n    Distributed under the [BSD-3-Clause](https://github.com/alembic/alembic/blob/master/LICENSE.txt).\n\n*   __Boost__  \n    [http://www.boost.org](http://www.boost.org)  \n    Distributed under the [Boost Software License](http://www.boost.org/users/license.html).\n\n*   __CCTag__ (optional)  \n    [https://github.com/alicevision/CCTag](https://github.com/alicevision/CCTag)  \n    Copyright 2016, Simula Research Laboratory  \n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __Ceres-Solver__  \n    [http://ceres-solver.org](http://ceres-solver.org)  \n    Copyright 2015 Google Inc. All rights reserved.  \n    Distributed under the [New BSD licence](http://ceres-solver.org/license.html).\n\n*   __Clp__  \n    Copyright (C) 2002, 2003 International Business Machines Corporation  \n    and others.  All Rights Reserved.  \n    Distributed under the terms of the Eclipse Public License (EPL).\n\n*   __CoinUtils__  \n    Copyright (C) 1987, 2009 International Business Machines Corporation  \n    and others.  All Rights Reserved.  \n    Distributed under the terms of the Eclipse Public License (EPL).\n\n*   __CUDA__ (required for the depth map computation)  \n    See [License](https://docs.nvidia.com/cuda/eula/index.html#license-driver).\n\n*   __cxsparse__  (optional)  \n    Copyright (c) 2006-2012, Timothy A. Davis.  \n    Distributed under the [GNU LGPL license](http://opensource.org/licenses/lgpl-license).\n\n*   __Eigen__  \n    [http://eigen.tuxfamily.org](http://eigen.tuxfamily.org)  \n    Copyright (c) Eigen authors.  \n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).  \n    Compiled with EIGEN_MPL2_ONLY to ensure MPL2 compatible code.\n\n*   __Expat__  \n    https://libexpat.github.io/\n    Copyright (c) 1998-2000 Thai Open Source Software Center Ltd and Clark Cooper\n    Copyright (c) 2001-2022 Expat maintainers\n    Distributed under the MIT/X Consortium license\n\n*   __Flann__  \n    [https://www.cs.ubc.ca/research/flann](https://www.cs.ubc.ca/research/flann)  \n    Copyright (c) 2008-2011  Marius Muja (mariusm@cs.ubc.ca). All rights reserved.  \n    Copyright (c) 2008-2011  David G. Lowe (lowe@cs.ubc.ca). All rights reserved.  \n    Distributed under the [BSD License](http://www.opensource.org/licenses/bsd-license.php).\n\n*   __Geogram__  \n    [http://alice.loria.fr/software/geogram/doc/html/index.html](http://alice.loria.fr/software/geogram/doc/html/index.html)  \n    Copyright (c) 2012-2014 Bruno Levy. All rights reserved.  \n    Distributed under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n\n*   __Histogram__  \n    Copyright (c) Jansson Consulting & Pierre Moulon.  \n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __HtmlDoc__  \n    Copyright (c) Pierre Moulon.  \n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __Lemon__  \n    [http://lemon.cs.elte.hu/trac/lemon](http://lemon.cs.elte.hu/trac/lemon)  \n    Copyright (c) Lemon authors.  \n    Distributed under the [Boost License 1.0](http://www.boost.org/LICENSE_1_0.txt).\n\n*   __libE57Format__  \n    [https://github.com/asmaloney/libE57Format](https://github.com/asmaloney/libE57Format)  \n    Copyright (c) libE57Format authors.  \n    Distributed under the [BSL-1.0 license](https://opensource.org/licenses/BSL-1.0).   \n\n*   __MeshSDFilter__  \n    [https://github.com/bldeng/MeshSDFilter](https://github.com/bldeng/MeshSDFilter)  \n    Copyright (c) 2017, Bailin Deng. All rights reserved.  \n    Distributed under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n\n*   __Nanoflann__  \n    [https://github.com/jlblancoc/nanoflann](https://github.com/jlblancoc/nanoflann)  \n    Copyright 2008-2009  Marius Muja (mariusm@cs.ubc.ca). All rights reserved.  \n    Copyright 2008-2009  David G. Lowe (lowe@cs.ubc.ca). All rights reserved.  \n    Copyright 2011 Jose L. Blanco (joseluisblancoc@gmail.com). All rights reserved.  \n    Distributed under the [BSD License](http://www.opensource.org/licenses/bsd-license.php).\n\n*   __OpenCV__ (optional)  \n    [https://opencv.org](https://opencv.org)  \n    Copyright (C) 2000-2016, Intel Corporation, all rights reserved.  \n    Copyright (C) 2009-2011, Willow Garage Inc., all rights reserved.  \n    Copyright (C) 2009-2016, NVIDIA Corporation, all rights reserved.  \n    Copyright (C) 2010-2013, Advanced Micro Devices, Inc., all rights reserved.  \n    Copyright (C) 2015-2016, OpenCV Foundation, all rights reserved.  \n    Copyright (C) 2015-2016, Itseez Inc., all rights reserved.  \n    Distributed under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n\n*   __OpenEXR__ (required by OpenImageIO and used in the pipeline)  \n    [http://www.openexr.com](http://www.openexr.com)  \n    Copyright (c) 2002, Industrial Light & Magic, a division of Lucas Digital Ltd. LLC  \n    Distributed under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n\n*   __OpenGV__ (optional)  \n    [https://laurentkneip.github.io/opengv](https://laurentkneip.github.io/opengv)  \n    Copyright (c) 2013 Laurent Kneip, The Australian National University ANU. All rights reserved  \n    Distributed under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n\n*   __OpenImageIO__  \n    [https://openimageio.org](https://openimageio.org)  \n    Copyright 2008-2016 Larry Gritz et al.  \n    Distributed under the [BSD-3-Clause](https://github.com/OpenImageIO/oiio/blob/master/LICENSE).\n\n*   __OpenMesh__ (required by MeshSDFilter)  \n    [http://openmesh.org](http://openmesh.org)  \n    Copyright (c) 2001-2015, RWTH-Aachen University.  \n    Department of Computer Graphics and Multimedia. All rights reserved.  \n    Distributed under the [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n\n*   __Osi__  \n    Copyright (C) 2000 International Business Machines Corporation  \n    and others.  All Rights Reserved.  \n    Distributed under the terms of the Eclipse Public License (EPL).\n\n*   __PopSift__ (optional)  \n    [https://github.com/alicevision/popsift](https://github.com/alicevision/popsift)  \n    Copyright 2016, Simula Research Laboratory  \n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n    SIFT was patented in the United States from 1999-03-08 to 2020-03-28. See the [patent link](https://patents.google.com/patent/US6711293B1/en) for more information.\n*   __vectorGraphics__  \n    Copyright (c) Pierre Moulon  \n    Distributed under the [MPL2 license](http://opensource.org/licenses/MPL-2.0).\n\n*   __vlfeat__  \n    [http://www.vlfeat.org](http://www.vlfeat.org)  \n    Copyright (C) 2007-12 Andrea Vedaldi and Brian Fulkerson. All rights reserved.  \n    Distributed under the [BSD License](http://www.opensource.org/licenses/bsd-license.php).\n    SIFT was patented in the United States from 1999-03-08 to 2020-03-28. See the [patent link](https://patents.google.com/patent/US6711293B1/en) for more information.\n\n*   __zlib__  (optional)  \n    [https://zlib.net](https://zlib.net)  \n    Copyright (C) 1995-2005 Jean-loup Gailly  \n    Distributed under the [zlib license](http://opensource.org/licenses/Zlib).\n\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 15.9580078125,
          "content": "AliceVision\n===========\n\nBuild instructions\n------------------\n\nRequired tools:\n* CMake >= 3.11\n* Git\n* C/C++ compiler (gcc or visual studio or clang) with C++17 support (i.e. gcc >= 7, clang >= 5, msvc >= 19.15, cuda >= 11.0).\n\n### Compile the project\n\nGetting the sources:\n\n```bash\ngit clone https://github.com/alicevision/AliceVision.git --recursive\n```\n\nDependencies\n------------\n\nAliceVision depends on external libraries:\n\n* [Assimp >= 5.0.0](https://github.com/assimp/assimp)\n* [Boost >= 1.74.0](https://www.boost.org)\n* [Ceres >= 1.10.0](https://github.com/ceres-solver/ceres-solver)\n* CoinUtils >= 2.9.3 use [our fork](https://github.com/alicevision/CoinUtils) with a CMake build system so that it can be easily found\n* Coin-or linear programming (Clp) use [our fork](https://github.com/alicevision/Clp) with a CMake build system\n* [Eigen >= 3.3.4](https://gitlab.com/libeigen/eigen)\n* [Expat >= 2.4.8](https://libexpat.github.io/)\n* Flann >= 1.8.4, use [our fork](https://github.com/alicevision/flann) with a CMake build system\n* [Geogram >= 1.7.5 (recommended >= 1.8.8)](https://github.com/BrunoLevy/geogram)\n* [nanoflann >= 1.5.4](https://github.com/jlblancoc/nanoflann)\n* [OpenEXR >= 2.5](https://github.com/AcademySoftwareFoundation/openexr)\n* [OpenImageIO >= 2.1.0 (recommended >= 2.4.13)](https://github.com/OpenImageIO/oiio)\n* [OpenMesh >= 9.0](https://www.graphics.rwth-aachen.de/software/openmesh/)\n* Open Solver Interface (Osi) >= 0.106.10 use [our fork](https://github.com/alicevision/Osi)) with a CMake build system\n* [zlib](https://www.zlib.net)\n\nOther optional libraries can enable specific features (check \"CMake Options\" for enabling them):\n\n* Alembic (data I/O)\n* CCTag (feature extraction/matching and localization on CPU or GPU)\n* Cuda >= 11.0 (feature extraction and depth map computation)\n* Magma (required for UncertaintyTE)\n* Mosek >= 6 (linear programming)\n* OpenCV >= 3.4.11 (feature extraction, calibration module, video IO), >= 4.5 for colorchecker (mcc)\n* OpenGV (rig calibration and localization)\n* OpenMP (enable multi-threading)\n* PCL (Point Cloud Library) >= 1.12.1 for the registration module\n* PopSift (feature extraction on GPU)\n* UncertaintyTE (Uncertainty computation)\n* Lemon >= 1.3\n* libe57format (support reading .e57 files)\n\n\nAliceVision also depends on some embedded libraries:\n\n* MeshSDFilter (internal)\n\n\n\nBuilding the project using vcpkg (recommended on Windows)\n--------------------------------\n[Vcpkg](https://github.com/alicevision/vcpkg) is a package manager that helps in acquiring, building, and managing C/C++ libraries.\nAliceVision's required dependencies can be built with it.\nVcpkg evolved from being a Windows-only project to becoming cross-platform.\nIn the scope of AliceVision, vcpkg has only been tested on Windows.\n\n1. Install vcpkg itself\n\nSee the reference [installation guide](https://github.com/alicevision/vcpkg/blob/alicevision_master/README.md#quick-start-windows) to setup vcpkg.\nWe recommend to use our vcpkg fork, where dependencies have been validated by the AliceVision development team but it should work with the latest version.\n```bash\ngit clone https://github.com/alicevision/vcpkg --branch alicevision_master\ncd vcpkg\n.\\bootstrap-vcpkg.bat\n```\n\n2. Build the required dependencies\n```bash\ncd <VCPKG_INSTALL_DIR>\nset VCPKG_ROOT=%cd%\n\nvcpkg install ^\n          boost-algorithm boost-accumulators boost-atomic boost-container boost-date-time boost-exception ^\n          boost-geometry boost-graph boost-json boost-log boost-program-options boost-property-tree ^\n          boost-ptr-container boost-regex boost-serialization boost-system boost-test boost-thread boost-timer ^\n          boost-format ^\n          lz4 ^\n          liblemon ^\n          openexr ^\n          alembic ^\n          geogram ^\n          eigen3 ^\n          expat ^\n          flann nanoflann ^\n          onnxruntime-gpu ^\n          opencv[eigen,ffmpeg,webp,contrib,nonfree,cuda] ^\n          openimageio[opencolorio,pybind11,libraw,ffmpeg,freetype,opencv,gif,openjpeg,webp] ^\n          openmesh ^\n          ceres[suitesparse,cxsparse] ^\n          cuda ^\n          tbb ^\n          assimp ^\n          pcl ^\n          clp ^\n          libe57format ^\n          --triplet x64-windows\n```\n\n3. Build AliceVision\n```bash\n# With VCPKG_ROOT being the path to the root of vcpkg installation\ncd /path/to/aliceVision/\nmkdir build && cd build\n\n# Windows: Visual 2022 + Powershell\ncmake .. -DCMAKE_TOOLCHAIN_FILE=\"$env:VCPKG_ROOT\"\\scripts\\buildsystems\\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -G \"Visual Studio 17 2022\" -A x64 -T host=x64\n\n# Windows: Visual 2022\ncmake .. -DCMAKE_TOOLCHAIN_FILE=%VCPKG_ROOT%\\scripts\\buildsystems\\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -G \"Visual Studio 17 2022\" -A x64 -T host=x64\n\n# Windows: Visual 2017\ncmake .. -DCMAKE_TOOLCHAIN_FILE=%VCPKG_ROOT%\\scripts\\buildsystems\\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -G \"Visual Studio 15 2017\" -A x64 -T host=x64\n```\n\nThis generates a \"aliceVision.sln\" solution inside the build folder that you can open in Visual Studio to launch the build. Do not forget to switch the build type to \"Release\".\n\n\nBuilding the project with embedded dependencies (recommended on linux)\n-----------------------------------------------\n\n```bash\ngit clone https://github.com/alicevision/AliceVision.git --recursive\nmkdir build && cd build\ncmake -DALICEVISION_BUILD_DEPENDENCIES=ON -DCMAKE_INSTALL_PREFIX=$PWD/../install ../AliceVision\nmake -j10\n```\n\n* JPEG\nYou need `autoreconf`, `libtool` and `nasm` to compile `libturbo-jpeg`.\nElse if you have jpeg already install on your OS, you can disable the JPEG build with `-DAV_BUILD_JPEG=OFF`.\n\n* PNG\nYou need `automake` to compile `libpng`.\nElse if you have png already install on your OS, you can disable the PNG build with `-DAV_BUILD_PNG=OFF`.\n\n\nBuilding the project using external dependencies\n------------------------------------------------\n\nIn order to build the library with existing versions of the dependencies (e.g. system installed libraries or user built libraries), and thus reduce the compilation time and favour the modularization, the paths where to find such libraries can be given at cmake command line. In particular:\n\n* For Ceres solver library, `Ceres_DIR` can be passed pointing to where CeresConfig.cmake can be found.\n  e.g. `-DCeres_DIR:PATH=/path/to/ceres/install/share/Ceres/`\n\n* For FLANN library, `FLANN_INCLUDE_DIR_HINTS` can be passed pointing to the include directory, e.g.\n  `-DFLANN_INCLUDE_DIR_HINTS:PATH=/path/to/flann/1.8.4/include/`\n\n* For Eigen library, `CMAKE_MODULE_PATH` should be passed pointing at the `<EigenInstallDir>/share/cmake/Modules/` directory of the Eigen installation, in which `Eigen-config.cmake` or `FindEigen3.cmake` can be found.\n  In case only `FindEigen3.cmake` is available (e.g. Homebrew installations), an environment variable `EIGEN_ROOT_DIR` must be set pointing at Eigen install directory.\n  For example,\n\n  `-DCMAKE_MODULE_PATH:PATH=/usr/local/Cellar/eigen/3.3.4/share/cmake/Modules/`\n\n  may require to set the environment variable if only `FindEigen3.cmake`, i.e.\n\n  `export EIGEN_ROOT_DIR=/usr/local/Cellar/eigen/3.3.4/`\n\n* For OpenEXR library, `OPENEXR_HOME` can be passed pointing to the install directory, e.g.\n  `-DOPENEXR_HOME:PATH=/path/to/openexr/install`\n\n* For OpenImageIO library, library and include dir paths can be passed, e.g.\n  `-DOPENIMAGEIO_LIBRARY_DIR_HINTS:PATH=/path/to/oiio/install/lib/`\nand `-DOPENIMAGEIO_INCLUDE_DIR:PATH=/path/to/oiio/install/include/`\n\n\n\nAt the end of the cmake process, a report shows for each library which version (internal/external) will be used in the building process, e.g.:\n\n```\n-- EIGEN: 3.3.4\n-- CERES: 1.10.0\n-- FLANN: 1.8.4\n-- LEMON: 1.3\n```\n\n\nCMake Options\n-------------\n\n* GEOGRAM\n  `-DGEOGRAM_INSTALL_PREFIX:PATH=path/to/geogram/install`\n\n* OPENIMAGEIO\n  `-DOPENIMAGEIO_LIBRARY_DIR_HINTS:PATH=/path/to/oiio/install/lib/`\n  `-DOPENIMAGEIO_INCLUDE_DIR:PATH=/path/to/oiio/install/include/`\n\n* `BOOST_NO_CXX11` (default `OFF`)\n  If your Boost binaries are compiled without C++11 support, you need to set this option to avoid compilation errors.\n  This is most likely to be the case if you use the system packages to install boost.\n\n* `ALICEVISION_USE_OPENMP` (default `ON`)\n  Use OpenMP parallelization (huge impact on performances)\n  **OSX**: if you are compiling with clang shipped with XCode, please note that OpenMP is not supported and you need to\n  disable OpenMP passing `-DALICEVISION_USE_OPENMP:BOOL=OFF`.\n\n* `ALICEVISION_USE_CCTAG` (default: `AUTO`)\n  Build with CCTag markers support.\n  `-DCCTag_DIR:PATH=/path/to/cctag/install/lib/cmake/CCTag` (where CCTagConfig.cmake can be found)\n\n* `ALICEVISION_USE_APRILTAG` (default: `AUTO`)\n  Build with AprilTag markers support.\n  `-Dapriltag_DIR:PATH=/path/to/apriltag/install/share/apriltag/cmake` (where apriltagConfig.cmake can be found)\n\n* `ALICEVISION_USE_OPENGV` (default `AUTO`)\n  Enable use of OpenGV algorithms. Build with openGV for multi-cameras localization.\n  `-DOPENGV_DIR:PATH=/path/to/opengv/install/` (where \"include\" and \"lib\" folders can be found)\n  We recommend: `git clone https://github.com/alicevision/opengv.git --branch=cmake_fix_install`\n\n* `ALICEVISION_USE_ALEMBIC` (default `AUTO`)\n  Build with Alembic file format support (required version >= 1.7).\n  `-DAlembic_DIR:PATH=/path/to/alembic/install/lib/cmake/Alembic/` (where AlembicConfig.cmake can be found)\n  With old Alembic versions (<1.6), you need to set many variables: `ALEMBIC_ROOT`, `ALEMBIC_HDF5_ROOT`, `ALEMBIC_ILMBASE_ROOT`, `ALEMBIC_OPENEXR_ROOT`.\n\n* `ALICEVISION_USE_CUDA` (default: `ON`)\n  Enable build with CUDA (for feature extraction and depth map computation)\n  `-DCUDA_TOOLKIT_ROOT_DIR:PATH=/usr/local/cuda-9.1` (adjust the path to your cuda installation)\n\n* `ALICEVISION_USE_POPSIFT` (default: `AUTO`)\n  Enable GPU SIFT implementation.\n  `-DPopSift_DIR:PATH=/path/to/popsift/install/lib/cmake/PopSift` (where PopSiftConfig.cmake can be found)\n\n* `ALICEVISION_USE_UNCERTAINTYTE` (default: `AUTO`)\n  Enable Uncertainty computation.\n  `-DUNCERTAINTYTE_DIR:PATH=/path/to/uncertaintyTE/install/` (where `inlude` and `lib` can be found)\n  `-DMAGMA_ROOT:PATH=/path/to/magma/install/` (where `inlude` and `lib` can be found)\n\n* `ALICEVISION_USE_OPENCV` (default: `OFF`)\n  Build with openCV\n  `-DOpenCV_DIR:PATH=/path/to/opencv/install/share/OpenCV/` (where OpenCVConfig.cmake can be found)\n\n* `ALICEVISION_REQUIRE_CERES_WITH_SUITESPARSE` (default: `ON`)\n  By default, aliceVision requires Ceres built with SuiteSparse to ensure best performances but you can make SuiteSparse optional with this flag.\n\n* `BUILD_SHARED_LIBS` (default `ON`)\n  Build AliceVision as shared libs (instead of static libs)\n\n* `ALICEVISION_BUILD_TESTS` (default `OFF`)\n  Build AliceVision tests\n\n* `ALICEVISION_BUILD_DOC` (default `AUTO`)\n  Build AliceVision documentation\n\n* `ALICEVISION_BUILD_COVERAGE` (default `OFF`)\n  Enable code coverage generation (gcc only)\n\n\nLinux compilation\n-----------------\n\n### Setup the required external library.\n\n* `sudo apt-get install libpng-dev libjpeg-dev libtiff-dev libxxf86vm1 libxxf86vm-dev libxi-dev libxrandr-dev`\n\n* If you want see the view graph svg logs\n  `sudo apt-get install graphviz`\n\n### Clone and configure the project:\n\n```bash\n git clone --recursive https://github.com/alicevision/AliceVision.git\n mkdir build && cd build\n cmake -DCMAKE_BUILD_TYPE=Release . ../AliceVision\n```\n\nIf you want enable unit tests to the build:\n```bash\ncmake -DCMAKE_BUILD_TYPE=Release -DALICEVISION_BUILD_TESTS=ON ../AliceVision\n```\n\nIn order to use the MOSEK 6 back-end for the linear programming aliceVision module:\n\n- Check that you have an up-to-date MOSEK licence, else aliceVision MOSEK unit test will fail.\n\n- Then:\n\n  ```bash\n  cmake -DCMAKE_BUILD_TYPE=Release \\\n        -DMOSEK_SEARCH_HEADER=\"~/Documents/Lib/mosek/6/tools/platform/linux64x86/h\" \\\n        -DMOSEK_SEARCH_LIB=\"~/Documents/Lib/mosek/6/tools/platform/linux64x86/bin\" \\\n        ../AliceVision\n  ```\n\nIf you want to have an IDE openable project with codeblocks:\n\n```bash\ncmake -G \"CodeBlocks - Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release ../AliceVision\n```\n\n### Compile the project\n\n```bash\nmake\n```\n\nFor a multi-core compilation (Replace NBcore with the number of threads)\n```bash\nmake -j NBcore\n```\n\nLaunch unity tests (if asked at cmake step)\n```bash\nmake test\n```\n\n\nWindows compilation\n-------------------\n\n* Checkout the project\n  `git clone --recursive https://github.com/alicevision/aliceVision.git`\n* Open cmake-gui\n  * Fill the source path with the AliceVision path.\n  * Fill the build path with a new directory\n  * Select your Visual Studio IDE and click configure and then generate\n* Open the .sln solution created in your build directory.\n  * Change the target to Release.\n  * Compile the libraries and binaries samples.\n\n-------------------\n\n\nMac OSX compilation\n-------------------\n```bash\ngit clone --recursive https://github.com/alicevision/AliceVision.git\nmkdir build && cd build\ncmake -DCMAKE_BUILD_TYPE=Release -G \"Xcode\" ../AliceVision\n```\nIf you want enable unit tests to the build:\n```bash\ncmake -DCMAKE_BUILD_TYPE=Release \\\n      -DALICEVISION_BUILD_TESTS=ON \\\n      -G \"Xcode\" \\\n      ../AliceVision\nxcodebuild -configuration Release\n```\n--------------------\n\n\nUsing AliceVision as a third party library dependency in cmake\n--------------------------------------------------------------\n\nAliceVision can be used as a third party once it have been installed.\nConsider using the `CMAKE_INSTALL_PREFIX` cmake variable to specify a local installation directory.\nHere the syntax to add the variable to the cmake command line (use absolute path), e.g.:\n```bash\n-DCMAKE_INSTALL_PREFIX=\"/home/user/dev/AliceVision_install\"\n```\n\nPerform `make` and `make install`\n\nThen you will be able to use AliceVision as an external library in your `CMakeLists.txt` using\nthe modern CMake approach as imported target. For example, if your target `main` depends on the\nAliceVision module `aliceVision_sfmDataIO`:\n\n```cmake\nfind_package(AliceVision CONFIG REQUIRED)\nmessage(STATUS \"Found AliceVision : ${AliceVision_FOUND}\")\nmessage(STATUS \"Found AliceVision version: ${AliceVision_VERSION}\")\nadd_executable(main main.cpp)\ntarget_link_libraries(main PUBLIC aliceVision_sfmDataIO)\n```\n\nIn general, you need to specify the list of the AliceVision modules that your library or executable\ndepends on.\n\nSpecify to CMake where AliceVision is installed by using the `AliceVision_DIR` cmake variable: `-DAliceVision_DIR:PATH=\"YourInstallPath\"/share/aliceVision/cmake`\nor by simply adding the installation path to your `CMAKE_PREFIX_PATH`, i.e. `-DCMAKE_PREFIX_PATH:PATH=\"YourInstallPath\"`.\nCheck the sample in [samples](src/samples/aliceVisionAs3rdParty) for an example of use.\n\n### Docker image\n\nA docker image can be built using the Ubuntu or Rocky Linux Dockerfiles.\nThe Dockerfiles are based on `nvidia/cuda` images (https://hub.docker.com/r/nvidia/cuda/)\n\nTo generate the docker image, just run:\n```\n./docker/build-rocky.sh\n```\n\nTo do it manually, parameters `ROCKY_VERSION`/`UBUNTU_VERSION` and `CUDA_TAG` should be passed to choose the OS and CUDA versions.\nFor example, the first line of the commands below shows the example to create docker for a Rocky 9 with Cuda 12.1.0 and the second line for Ubuntu 16.04 with Cuda 11.0:\n\n```\ndocker build --build-arg ROCKY_VERSION=9 --build-arg CUDA_TAG=12.1.0 --tag alicevision:rocky9-cuda12.1.0 -f Dockerfile_rocky .\ndocker build --build-arg UBUNTU_VERSION=22.04 --build-arg CUDA_TAG=12.1.0 --build-arg NPROC=8 --tag alicevision:ubuntu22.04-cuda12.1.0 -f Dockerfile_ubuntu .\n```\n\nIn order to run the image [nvidia docker](https://github.com/nvidia/nvidia-docker/wiki/Installation-(version-2.0)) is needed.\n\n```\ndocker run -it --runtime=nvidia alicevision:rocky9-cuda12.1.0\n```\n\nTo retrieve the generated files:\n\n```\n# Create an instance of the image, copy the files and remove the temporary docker instance.\nCID=$(docker create alicevision:rocky9-cuda12.1.0) && docker cp ${CID}:/opt/AliceVision_install . && docker cp ${CID}:/opt/AliceVision_bundle . && docker rm ${CID}\n```\n\nEnvironment variable\n--------------------\n\nWhatever the way AliceVision has been installed, before using it, an environment variable named ALICEVISION_ROOT must be created and set with the local installation directory. \n\n"
        },
        {
          "name": "LICENSE-MIT-libmv.md",
          "type": "blob",
          "size": 1.0390625,
          "content": "Copyright (c) 2007-2011 libmv authors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\n"
        },
        {
          "name": "LICENSE-MPL2.md",
          "type": "blob",
          "size": 16.333984375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.1181640625,
          "content": "# ![AliceVision - Photogrammetric Computer Vision Framework](https://github.com/alicevision/AliceVision/raw/develop/docs/logo/AliceVision_banner.png)\n\n[AliceVision](http://alicevision.github.io) is a Photogrammetric Computer Vision Framework which provides a 3D Reconstruction and Camera Tracking algorithms.\nAliceVision aims to provide strong software basis with state-of-the-art computer vision algorithms that can be tested, analyzed and reused.\nThe project is a result of collaboration between academia and industry to provide cutting-edge algorithms with the robustness and the quality required for production usage.\n\nLearn more details about the pipeline and tools based on it on [AliceVision website](http://alicevision.github.io).\n\nSee [results of the pipeline on sketchfab](http://sketchfab.com/AliceVision).\n\n\n## Photogrammetry\n\nPhotogrammetry is the science of making measurements from photographs.\nIt infers the geometry of a scene from a set of unordered photographies or videos.\nPhotography is the projection of a 3D scene onto a 2D plane, losing depth information.\nThe goal of photogrammetry is to reverse this process.\n\nSee the [presentation of the pipeline steps](http://alicevision.github.io/#photogrammetry).\n\n\n## License\n\nThe project is released under MPLv2, see [**COPYING.md**](COPYING.md).\n\n\n## Citation\n\nIf you use this project for a publication, please cite the [paper](https://hal.archives-ouvertes.fr/hal-03351139):\n  ```\n  @inproceedings{alicevision2021,\n    title={{A}liceVision {M}eshroom: An open-source {3D} reconstruction pipeline},\n    author={Carsten Griwodz and Simone Gasparini and Lilian Calvet and Pierre Gurdjos and Fabien Castan and Benoit Maujean and Gregoire De Lillo and Yann Lanthony},\n    booktitle={Proceedings of the 12th ACM Multimedia Systems Conference - {MMSys '21}},\n    doi = {10.1145/3458305.3478443},\n    publisher = {ACM Press},\n    year = {2021}\n  }\n  ```\n\n\n## Bibliography\n\nSee [**Bibliography**](BIBLIOGRAPHY.md) for the list of research papers and tools used in this project.\n\n\n## Get the project\n\nGet the source code: `git clone --recursive git://github.com/alicevision/AliceVision`\n\nSee [**INSTALL.md**](INSTALL.md) to build the project.\n\nContinuous integration status: [![Build Status](https://travis-ci.org/alicevision/AliceVision.png?branch=develop)](https://travis-ci.org/alicevision/AliceVision) [![Coverage Status](https://coveralls.io/repos/github/alicevision/AliceVision/badge.png?branch=develop)](https://coveralls.io/github/alicevision/AliceVision?branch=develop).\n\n\n## Launch 3D reconstructions\n\nUse [Meshroom](https://github.com/alicevision/meshroom) to launch the AliceVision pipeline.\n - Meshroom provides a User Interface to create 3D reconstructions.\n - Meshroom provides a command line to launch all the steps of the pipeline.\n - Meshroom is written in python and can be used to create your own python scripts to customize the pipeline or create custom automation.\n\nThe User Interface of Meshroom relies on Qt and PySide. The Meshroom engine and command line has no dependency to Qt.\n\n\n## Contact\n\nUse the public mailing-list to ask questions or request features. It is also a good place for informal discussions like sharing results, interesting related technologies or publications:\n> [alicevision@googlegroups.com](mailto:alicevision@googlegroups.com)\n> [http://groups.google.com/group/alicevision](http://groups.google.com/group/alicevision)\n\nYou can also contact the core team privately on: [alicevision-team@googlegroups.com](mailto:alicevision-team@googlegroups.com).\n\n\n## Contributing\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2995/badge)](https://bestpractices.coreinfrastructure.org/projects/2995)\n\nBeyond open source interest to foster developments, open source is a way of life. The project has started as a collaborative project and aims to continue. We love to exchange ideas, improve ourselves while making improvements for other people and discover new collaboration opportunities to expand everybody’s horizon.\nContributions are welcome. We integrate all contributions as soon as it is useful for someone, don't create troubles for others and the code quality is good enough for maintainance.\n\nPlease have a look at the [project code of conduct](CODE_OF_CONDUCT.md) to provide a friendly, motivating and welcoming environment for all.\nPlease have a look at the [project contributing guide](CONTRIBUTING.md) to provide an efficient workflow that minimize waste of time for contributors and maintainers as well as maximizing the project quality and efficiency.\n\nUse github Pull Requests to submit contributions:\n> [http://github.com/alicevision/AliceVision/issues](http://github.com/alicevision/AliceVision/issues)\n\nUse the public mailing-list to ask questions or request features and use github issues to report bugs:\n> [http://github.com/alicevision/AliceVision/pulls](http://github.com/alicevision/AliceVision/pulls)\n\n\n## Project history\n\nIn 2009, CMP research team from CTU started the PhD thesis of Michal Jancosek supervised by Tomas Pajdla. They released windows binaries of their MVS pipeline, called CMPMVS, in 2012.\nIn 2009, Toulouse INP, INRIA and Duran Duboi started a French ANR project to create a model based Camera Tracking solution based on natural features and a new marker design called CCTag.\nIn 2010, Mikros Image and IMAGINE research team (a joint research group between Ecole des Ponts ParisTech and Centre Scientifique et Technique du Batiment) started a partnership around Pierre Moulon’s thesis, supervised by Renaud Marlet and Pascal Monasse on the academic side and Benoit Maujean on the industrial side. In 2013, they released an open source SfM pipeline, called openMVG (“Multiple View Geometry”), to provide the basis of a better solution for the creation of visual effects matte-paintings.\nIn 2015, Simula, Toulouse INP and Mikros Image joined their efforts in the EU project POPART to create a Previz system based on AliceVision.\nIn 2017, CTU join the team in the EU project LADIO to create a central hub with structured access to all data generated on set based on AliceVision.\n\nSee [CONTRIBUTORS.md](CONTRIBUTORS.md) for the full list of contributors. We hope to see you in this list soon!\n\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 2.0849609375,
          "content": "\n### Versioning\n\nVersion = MAJOR (>=1 year), MINOR (>= 1 month), PATCH\n\nVersion Status = Dev / Release\n\n\n### Git\n\nBranches\n    develop: active development branch\n    master: latest release\n    vMAJOR.MINOR: release branch\n\nTags\n    vMAJOR.MINOR.PATCH: tag for each release\n\n\n### Release Process\n\n - Check if we need to upgrade some dependencies\n   - CMake all-in-one\n     - CMakeLists.txt in the root folder (use docker/check_dependencies_releases.py)\n     - Push updates to https://hub.docker.com/r/alicevision/alicevision-deps/tags\n   - Check vcpkg\n     - Update https://github.com/alicevision/vcpkg branch: alicevision_master\n     - Upload result on gdrive and update INSTALL.md\n   - Update INSTALL.md\n     - Update minimal versions if needed\n     - Update vcpkg install command if needed\n - Source code\n   - Create branch from develop: \"rcMAJOR.MINOR\"\n   - Modify version in code, version status to RELEASE (src/aliceVision/version.hpp)\n   - Create Release note (using https://github.com/cbentejac/github-generate-release-note)\n     - ```\n\t   ./github-generate-release-note.py -o alicevision -r AliceVision -m MAJOR.MINOR.PATCH --highlights majorFeature feature --label-include bugfix scope:ci,scope:doc,scope:build sensordb -s updated-asc\n\t   ```\n   - PR to develop: \"Release MAJOR.MINOR\"\n - Build\n   - Build docker & push to dockerhub\n   - Build windows & update pre-compiled dependencies on gdrive if needed\n - Git\n   - Merge \"rcMAJOR.MINOR\" into \"develop\"\n   - Push \"develop\" into \"master\"\n   - Create branch: vMAJOR.MINOR\n   - Create tag: vMAJOR.MINOR.PATCH\n   - Create branch from develop: \"startMAJOR.MINOR\"\n - Upload binaries on fosshub\n - Fill up Github release note\n - Prepare \"develop\" for new developments\n   - Upgrade MINOR and reset version status to DEV\n   - PR to develop: \"Start Development MAJOR.MINOR\"\n\n\n### Upgrade a Release with a PATCH version\n\n - Source code\n   - Create branch from rcMAJOR.MINOR: \"rcMAJOR.MINOR.PATCH\"\n   - Cherry-pick specific commits or rebase required PR\n   - Modify version in code (src/aliceVision/version.hpp)\n   - Update release note\n - Build step\n - Uploads\n - Github release note\n\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cudaInstallAppveyor.cmd",
          "type": "blob",
          "size": 1.173828125,
          "content": "@echo off\n\nset CUDA_VERSION_MAJOR=11\nset CUDA_VERSION_MINOR=0\nset CUDA_VERSION_MICRO=1\nset DRIVER_VERSION=451.22\nset OS_PLATFORM=win10\n\nset CUDA_VERSION=%CUDA_VERSION_MAJOR%.%CUDA_VERSION_MINOR%\nset CUDA_VERSION_FULL=%CUDA_VERSION%.%CUDA_VERSION_MICRO%\nset CUDA_SDK_FILENAME=cuda_%CUDA_VERSION_FULL%_%DRIVER_VERSION%_%OS_PLATFORM%\nset CUDA_SDK_URL=https://developer.download.nvidia.com/compute/cuda/%CUDA_VERSION_FULL%/local_installers/%CUDA_SDK_FILENAME%.exe\n\necho Downloading CUDA toolkit %CUDA_VERSION_FULL%\necho -- url: %CUDA_SDK_URL%\n\nappveyor DownloadFile %CUDA_SDK_URL% -FileName %CUDA_SDK_FILENAME%.exe\ndir\n\necho Installing CUDA toolkit %CUDA_VERSION_FULL%\n%CUDA_SDK_FILENAME%.exe -s nvcc_%CUDA_VERSION% ^\n                           cublas_%CUDA_VERSION% ^\n                           cublas_dev_%CUDA_VERSION% ^\n                           cudart_%CUDA_VERSION% ^\n                           curand_%CUDA_VERSION% ^\n                           curand_dev_%CUDA_VERSION%\n\necho CUDA toolkit installed\n\ndir \"%ProgramFiles%\"\n\nset CUDA_PATH=%ProgramFiles%\\NVIDIA GPU Computing Toolkit\\CUDA\\v%CUDA_VERSION%\nset CUDA_BIN_PATH=%CUDA_PATH%\\bin\n\nset PATH=%CUDA_BIN_PATH%;%CUDA_PATH%\\libnvvp;%PATH%\n\nnvcc -V\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}