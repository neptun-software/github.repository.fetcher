{
  "metadata": {
    "timestamp": 1736565392393,
    "page": 232,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "XMuli/QtExamples",
      "stars": 3543,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 12.5986328125,
          "content": "# Created by https://www.toptal.com/developers/gitignore/api/qt,cmake,c++,visualstudio,visualstudiocode,clion,macos,windows,linux\r\n# Edit at https://www.toptal.com/developers/gitignore?templates=qt,cmake,c++,visualstudio,visualstudiocode,clion,macos,windows,linux\r\n\r\n### C++ ###\r\n# Prerequisites\r\n*.d\r\n\r\n# Compiled Object files\r\n*.slo\r\n*.lo\r\n*.o\r\n*.obj\r\n\r\n# Precompiled Headers\r\n*.gch\r\n*.pch\r\n\r\n# Compiled Dynamic libraries\r\n*.so\r\n*.dylib\r\n*.dll\r\n\r\n# Fortran module files\r\n*.mod\r\n*.smod\r\n\r\n# Compiled Static libraries\r\n*.lai\r\n*.la\r\n*.a\r\n*.lib\r\n\r\n# Executables\r\n*.exe\r\n*.out\r\n*.app\r\n\r\n### CLion ###\r\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff\r\n.idea/**/workspace.xml\r\n.idea/**/tasks.xml\r\n.idea/**/usage.statistics.xml\r\n.idea/**/dictionaries\r\n.idea/**/shelf\r\n\r\n# AWS User-specific\r\n.idea/**/aws.xml\r\n\r\n# Generated files\r\n.idea/**/contentModel.xml\r\n\r\n# Sensitive or high-churn files\r\n.idea/**/dataSources/\r\n.idea/**/dataSources.ids\r\n.idea/**/dataSources.local.xml\r\n.idea/**/sqlDataSources.xml\r\n.idea/**/dynamic.xml\r\n.idea/**/uiDesigner.xml\r\n.idea/**/dbnavigator.xml\r\n\r\n# Gradle\r\n.idea/**/gradle.xml\r\n.idea/**/libraries\r\n\r\n# Gradle and Maven with auto-import\r\n# When using Gradle or Maven with auto-import, you should exclude module files,\r\n# since they will be recreated, and may cause churn.  Uncomment if using\r\n# auto-import.\r\n# .idea/artifacts\r\n# .idea/compiler.xml\r\n# .idea/jarRepositories.xml\r\n# .idea/modules.xml\r\n# .idea/*.iml\r\n# .idea/modules\r\n# *.iml\r\n# *.ipr\r\n\r\n# CMake\r\ncmake-build-*/\r\nbuild*/\r\n\r\n# Mongo Explorer plugin\r\n.idea/**/mongoSettings.xml\r\n\r\n# File-based project format\r\n*.iws\r\n\r\n# IntelliJ\r\nout/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Cursive Clojure plugin\r\n.idea/replstate.xml\r\n\r\n# SonarLint plugin\r\n.idea/sonarlint/\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n\r\n# Editor-based Rest Client\r\n.idea/httpRequests\r\n\r\n# Android studio 3.1+ serialized cache file\r\n.idea/caches/build_file_checksums.ser\r\n\r\n### CLion Patch ###\r\n# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721\r\n\r\n# *.iml\r\n# modules.xml\r\n# .idea/misc.xml\r\n# *.ipr\r\n\r\n# Sonarlint plugin\r\n# https://plugins.jetbrains.com/plugin/7973-sonarlint\r\n.idea/**/sonarlint/\r\n\r\n# SonarQube Plugin\r\n# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin\r\n.idea/**/sonarIssues.xml\r\n\r\n# Markdown Navigator plugin\r\n# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced\r\n.idea/**/markdown-navigator.xml\r\n.idea/**/markdown-navigator-enh.xml\r\n.idea/**/markdown-navigator/\r\n\r\n# Cache file creation bug\r\n# See https://youtrack.jetbrains.com/issue/JBR-2257\r\n.idea/$CACHE_FILE$\r\n\r\n# CodeStream plugin\r\n# https://plugins.jetbrains.com/plugin/12206-codestream\r\n.idea/codestream.xml\r\n\r\n# Azure Toolkit for IntelliJ plugin\r\n# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij\r\n.idea/**/azureSettings.xml\r\n\r\n### CMake ###\r\nCMakeLists.txt.user\r\nCMakeCache.txt\r\nCMakeFiles\r\nCMakeScripts\r\nTesting\r\nMakefile\r\ncmake_install.cmake\r\ninstall_manifest.txt\r\ncompile_commands.json\r\nCTestTestfile.cmake\r\n_deps\r\n\r\n### CMake Patch ###\r\n# External projects\r\n*-prefix/\r\n\r\n### Linux ###\r\n*~\r\n\r\n# temporary files which can be created if a process still has a handle open of a deleted file\r\n.fuse_hidden*\r\n\r\n# KDE directory preferences\r\n.directory\r\n\r\n# Linux trash folder which might appear on any partition or disk\r\n.Trash-*\r\n\r\n# .nfs files are created when an open file is removed but is still being accessed\r\n.nfs*\r\n\r\n### macOS ###\r\n# General\r\n.DS_Store\r\n.AppleDouble\r\n.LSOverride\r\n\r\n# Icon must end with two \\r\r\nIcon\r\n\r\n\r\n# Thumbnails\r\n._*\r\n\r\n# Files that might appear in the root of a volume\r\n.DocumentRevisions-V100\r\n.fseventsd\r\n.Spotlight-V100\r\n.TemporaryItems\r\n.Trashes\r\n.VolumeIcon.icns\r\n.com.apple.timemachine.donotpresent\r\n\r\n# Directories potentially created on remote AFP share\r\n.AppleDB\r\n.AppleDesktop\r\nNetwork Trash Folder\r\nTemporary Items\r\n.apdisk\r\n\r\n### macOS Patch ###\r\n# iCloud generated files\r\n*.icloud\r\n\r\n### Qt ###\r\n# C++ objects and libs\r\n*.so.*\r\n\r\n# Qt-es\r\nobject_script.*.Release\r\nobject_script.*.Debug\r\n*_plugin_import.cpp\r\n/.qmake.cache\r\n/.qmake.stash\r\n*.pro.user\r\n*.pro.user.*\r\n*.qbs.user\r\n*.qbs.user.*\r\n*.moc\r\nmoc_*.cpp\r\nmoc_*.h\r\nqrc_*.cpp\r\nui_*.h\r\n*.qmlc\r\n*.jsc\r\nMakefile*\r\n*build-*\r\n*.qm\r\n*.prl\r\n\r\n# Qt unit tests\r\ntarget_wrapper.*\r\n\r\n# QtCreator\r\n*.autosave\r\n\r\n# QtCreator Qml\r\n*.qmlproject.user\r\n*.qmlproject.user.*\r\n\r\n# QtCreator CMake\r\nCMakeLists.txt.user*\r\n\r\n# QtCreator 4.8< compilation database\r\n\r\n# QtCreator local machine specific files for imported projects\r\n*creator.user*\r\n\r\n*_qmlcache.qrc\r\n\r\n### VisualStudioCode ###\r\n.vscode/*\r\n!.vscode/settings.json\r\n!.vscode/tasks.json\r\n!.vscode/launch.json\r\n!.vscode/extensions.json\r\n!.vscode/*.code-snippets\r\n\r\n# Local History for Visual Studio Code\r\n.history/\r\n\r\n# Built Visual Studio Code Extensions\r\n*.vsix\r\n\r\n### VisualStudioCode Patch ###\r\n# Ignore all local history of files\r\n.history\r\n.ionide\r\n\r\n### Windows ###\r\n# Windows thumbnail cache files\r\nThumbs.db\r\nThumbs.db:encryptable\r\nehthumbs.db\r\nehthumbs_vista.db\r\n\r\n# Dump file\r\n*.stackdump\r\n\r\n# Folder config file\r\n[Dd]esktop.ini\r\n\r\n# Recycle Bin used on file shares\r\n$RECYCLE.BIN/\r\n\r\n# Windows Installer files\r\n*.cab\r\n*.msi\r\n*.msix\r\n*.msm\r\n*.msp\r\n\r\n# Windows shortcuts\r\n*.lnk\r\n\r\n### VisualStudio ###\r\n## Ignore Visual Studio temporary files, build results, and\r\n## files generated by popular Visual Studio add-ons.\r\n##\r\n## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\r\n\r\n# User-specific files\r\n*.rsuser\r\n*.suo\r\n*.user\r\n*.userosscache\r\n*.sln.docstates\r\n\r\n# User-specific files (MonoDevelop/Xamarin Studio)\r\n*.userprefs\r\n\r\n# Mono auto generated files\r\nmono_crash.*\r\n\r\n# Build results\r\n[Dd]ebug/\r\n[Dd]ebugPublic/\r\n[Rr]elease/\r\n[Rr]eleases/\r\nx64/\r\nx86/\r\n[Ww][Ii][Nn]32/\r\n[Aa][Rr][Mm]/\r\n[Aa][Rr][Mm]64/\r\nbld/\r\n[Bb]in/\r\n[Oo]bj/\r\n[Ll]og/\r\n[Ll]ogs/\r\n\r\n# Visual Studio 2015/2017 cache/options directory\r\n.vs/\r\n# Uncomment if you have tasks that create the project's static files in wwwroot\r\n#wwwroot/\r\n\r\n# Visual Studio 2017 auto generated files\r\nGenerated\\ Files/\r\n\r\n# MSTest test Results\r\n[Tt]est[Rr]esult*/\r\n[Bb]uild[Ll]og.*\r\n\r\n# NUnit\r\n*.VisualState.xml\r\nTestResult.xml\r\nnunit-*.xml\r\n\r\n# Build Results of an ATL Project\r\n[Dd]ebugPS/\r\n[Rr]eleasePS/\r\ndlldata.c\r\n\r\n# Benchmark Results\r\nBenchmarkDotNet.Artifacts/\r\n\r\n# .NET Core\r\nproject.lock.json\r\nproject.fragment.lock.json\r\nartifacts/\r\n\r\n# ASP.NET Scaffolding\r\nScaffoldingReadMe.txt\r\n\r\n# StyleCop\r\nStyleCopReport.xml\r\n\r\n# Files built by Visual Studio\r\n*_i.c\r\n*_p.c\r\n*_h.h\r\n*.ilk\r\n*.meta\r\n*.iobj\r\n*.pdb\r\n*.ipdb\r\n*.pgc\r\n*.pgd\r\n*.rsp\r\n*.sbr\r\n*.tlb\r\n*.tli\r\n*.tlh\r\n*.tmp\r\n*.tmp_proj\r\n*_wpftmp.csproj\r\n*.log\r\n*.tlog\r\n*.vspscc\r\n*.vssscc\r\n.builds\r\n*.pidb\r\n*.svclog\r\n*.scc\r\n\r\n# Chutzpah Test files\r\n_Chutzpah*\r\n\r\n# Visual C++ cache files\r\nipch/\r\n*.aps\r\n*.ncb\r\n*.opendb\r\n*.opensdf\r\n*.sdf\r\n*.cachefile\r\n*.VC.db\r\n*.VC.VC.opendb\r\n\r\n# Visual Studio profiler\r\n*.psess\r\n*.vsp\r\n*.vspx\r\n*.sap\r\n\r\n# Visual Studio Trace Files\r\n*.e2e\r\n\r\n# TFS 2012 Local Workspace\r\n$tf/\r\n\r\n# Guidance Automation Toolkit\r\n*.gpState\r\n\r\n# ReSharper is a .NET coding add-in\r\n_ReSharper*/\r\n*.[Rr]e[Ss]harper\r\n*.DotSettings.user\r\n\r\n# TeamCity is a build add-in\r\n_TeamCity*\r\n\r\n# DotCover is a Code Coverage Tool\r\n*.dotCover\r\n\r\n# AxoCover is a Code Coverage Tool\r\n.axoCover/*\r\n!.axoCover/settings.json\r\n\r\n# Coverlet is a free, cross platform Code Coverage Tool\r\ncoverage*.json\r\ncoverage*.xml\r\ncoverage*.info\r\n\r\n# Visual Studio code coverage results\r\n*.coverage\r\n*.coveragexml\r\n\r\n# NCrunch\r\n_NCrunch_*\r\n.*crunch*.local.xml\r\nnCrunchTemp_*\r\n\r\n# MightyMoose\r\n*.mm.*\r\nAutoTest.Net/\r\n\r\n# Web workbench (sass)\r\n.sass-cache/\r\n\r\n# Installshield output folder\r\n[Ee]xpress/\r\n\r\n# DocProject is a documentation generator add-in\r\nDocProject/buildhelp/\r\nDocProject/Help/*.HxT\r\nDocProject/Help/*.HxC\r\nDocProject/Help/*.hhc\r\nDocProject/Help/*.hhk\r\nDocProject/Help/*.hhp\r\nDocProject/Help/Html2\r\nDocProject/Help/html\r\n\r\n# Click-Once directory\r\npublish/\r\n\r\n# Publish Web Output\r\n*.[Pp]ublish.xml\r\n*.azurePubxml\r\n# Note: Comment the next line if you want to checkin your web deploy settings,\r\n# but database connection strings (with potential passwords) will be unencrypted\r\n*.pubxml\r\n*.publishproj\r\n\r\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\r\n# checkin your Azure Web App publish settings, but sensitive information contained\r\n# in these scripts will be unencrypted\r\nPublishScripts/\r\n\r\n# NuGet Packages\r\n*.nupkg\r\n# NuGet Symbol Packages\r\n*.snupkg\r\n# The packages folder can be ignored because of Package Restore\r\n**/[Pp]ackages/*\r\n# except build/, which is used as an MSBuild target.\r\n!**/[Pp]ackages/build/\r\n# Uncomment if necessary however generally it will be regenerated when needed\r\n#!**/[Pp]ackages/repositories.config\r\n# NuGet v3's project.json files produces more ignorable files\r\n*.nuget.props\r\n*.nuget.targets\r\n\r\n# Microsoft Azure Build Output\r\ncsx/\r\n*.build.csdef\r\n\r\n# Microsoft Azure Emulator\r\necf/\r\nrcf/\r\n\r\n# Windows Store app package directories and files\r\nAppPackages/\r\nBundleArtifacts/\r\nPackage.StoreAssociation.xml\r\n_pkginfo.txt\r\n*.appx\r\n*.appxbundle\r\n*.appxupload\r\n\r\n# Visual Studio cache files\r\n# files ending in .cache can be ignored\r\n*.[Cc]ache\r\n# but keep track of directories ending in .cache\r\n!?*.[Cc]ache/\r\n\r\n# Others\r\nClientBin/\r\n~$*\r\n*.dbmdl\r\n*.dbproj.schemaview\r\n*.jfm\r\n*.pfx\r\n*.publishsettings\r\norleans.codegen.cs\r\n\r\n# Including strong name files can present a security risk\r\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\r\n#*.snk\r\n\r\n# Since there are multiple workflows, uncomment next line to ignore bower_components\r\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\r\n#bower_components/\r\n\r\n# RIA/Silverlight projects\r\nGenerated_Code/\r\n\r\n# Backup & report files from converting an old project file\r\n# to a newer Visual Studio version. Backup files are not needed,\r\n# because we have git ;-)\r\n_UpgradeReport_Files/\r\nBackup*/\r\nUpgradeLog*.XML\r\nUpgradeLog*.htm\r\nServiceFabricBackup/\r\n*.rptproj.bak\r\n\r\n# SQL Server files\r\n*.mdf\r\n*.ldf\r\n*.ndf\r\n\r\n# Business Intelligence projects\r\n*.rdl.data\r\n*.bim.layout\r\n*.bim_*.settings\r\n*.rptproj.rsuser\r\n*- [Bb]ackup.rdl\r\n*- [Bb]ackup ([0-9]).rdl\r\n*- [Bb]ackup ([0-9][0-9]).rdl\r\n\r\n# Microsoft Fakes\r\nFakesAssemblies/\r\n\r\n# GhostDoc plugin setting file\r\n*.GhostDoc.xml\r\n\r\n# Node.js Tools for Visual Studio\r\n.ntvs_analysis.dat\r\nnode_modules/\r\n\r\n# Visual Studio 6 build log\r\n*.plg\r\n\r\n# Visual Studio 6 workspace options file\r\n*.opt\r\n\r\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\r\n*.vbw\r\n\r\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\r\n*.vbp\r\n\r\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\r\n*.dsw\r\n*.dsp\r\n\r\n# Visual Studio 6 technical files\r\n\r\n# Visual Studio LightSwitch build output\r\n**/*.HTMLClient/GeneratedArtifacts\r\n**/*.DesktopClient/GeneratedArtifacts\r\n**/*.DesktopClient/ModelManifest.xml\r\n**/*.Server/GeneratedArtifacts\r\n**/*.Server/ModelManifest.xml\r\n_Pvt_Extensions\r\n\r\n# Paket dependency manager\r\n.paket/paket.exe\r\npaket-files/\r\n\r\n# FAKE - F# Make\r\n.fake/\r\n\r\n# CodeRush personal settings\r\n.cr/personal\r\n\r\n# Python Tools for Visual Studio (PTVS)\r\n__pycache__/\r\n*.pyc\r\n\r\n# Cake - Uncomment if you are using it\r\n# tools/**\r\n# !tools/packages.config\r\n\r\n# Tabs Studio\r\n*.tss\r\n\r\n# Telerik's JustMock configuration file\r\n*.jmconfig\r\n\r\n# BizTalk build output\r\n*.btp.cs\r\n*.btm.cs\r\n*.odx.cs\r\n*.xsd.cs\r\n\r\n# OpenCover UI analysis results\r\nOpenCover/\r\n\r\n# Azure Stream Analytics local run output\r\nASALocalRun/\r\n\r\n# MSBuild Binary and Structured Log\r\n*.binlog\r\n\r\n# NVidia Nsight GPU debugger configuration file\r\n*.nvuser\r\n\r\n# MFractors (Xamarin productivity tool) working folder\r\n.mfractor/\r\n\r\n# Local History for Visual Studio\r\n.localhistory/\r\n\r\n# Visual Studio History (VSHistory) files\r\n.vshistory/\r\n\r\n# BeatPulse healthcheck temp database\r\nhealthchecksdb\r\n\r\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\r\nMigrationBackup/\r\n\r\n# Ionide (cross platform F# VS Code tools) working folder\r\n.ionide/\r\n\r\n# Fody - auto-generated XML schema\r\nFodyWeavers.xsd\r\n\r\n# VS Code files for those working on multiple tools\r\n*.code-workspace\r\n\r\n# Local History for Visual Studio Code\r\n\r\n# Windows Installer files from build outputs\r\n\r\n# JetBrains Rider\r\n*.sln.iml\r\n\r\n### VisualStudio Patch ###\r\n# Additional files built by Visual Studio\r\n\r\n# End of https://www.toptal.com/developers/gitignore/api/qt,cmake,c++,visualstudio,visualstudiocode,clion,macos,windows,linux"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.115234375,
          "content": "[submodule \"ExPicShot/3rdparty/spdlog\"]\n\tpath = ExPicShot/3rdparty/spdlog\n\turl = https://github.com/gabime/spdlog.git\n"
        },
        {
          "name": "CustomQch",
          "type": "tree",
          "content": null
        },
        {
          "name": "DbSigSlot",
          "type": "tree",
          "content": null
        },
        {
          "name": "DeDuplication",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExCRLF",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExChangeSVGColor",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExIntelDete",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExPicShot",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExThreadSafety",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1044921875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019~2024 Zhang Wengeng <xmulitech@gmail.com>\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. \n"
        },
        {
          "name": "QToolButtonAutoRaiseEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtComboModeShow",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtConnect",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtCustomDialogEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtCustomTypeAndQMetaType",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtDateTimeEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtEvent",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtHttpEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtMDIEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtMeatObjectEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtMetaAboutClass",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtMyStyleEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtObjectTree",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtProperty",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQDialogEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQFileSystemModelEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQHostInfoEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQMetaProperty",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQProgressBarEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQSliderEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQStandardItemModelEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQStringEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQStringFunEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQStringListModelEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQTableWidgetEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQTreeWidgetEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQVariant",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQ_OBJECT",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQcomboBoxEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQdialQLCDEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtQlistWidgetEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtSigSlot",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtTcpEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "QtUdpEx",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.435546875,
          "content": "<img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2023/20230618195256.png\" width=\"80%\"/>\r\n\r\n　　　　　　　　　　　　　　　　　　　　　　　　　 我也不知道为什么，当初就是想放这么一张图在这里~\r\n\r\n# QtExamples\r\n\r\n![](https://img.shields.io/badge/language-C%2B%2B%20%2F%20QT-orange) ![](https://img.shields.io/github/license/XMuli/QtExamples) ![](https://img.shields.io/badge/powered%20by-偕臧-ff69b4) \r\n\r\n![](https://img.shields.io/github/languages/code-size/XMuli/QtExamples)   ![](https://img.shields.io/github/stars/XMuli/QtExamples?style=social) ![](https://img.shields.io/github/forks/XMuli/QtExamples?style=social&label=Fork)\r\n\r\n<br>\r\n\r\n[TOC]\r\n\r\n <br>\r\n\r\n## 目录\r\n\r\n- [项目介绍](#项目介绍)\r\n- [构建环境](#构建环境)\r\n- [正文](#正文)\r\n- [新手过来](#新手过来)\r\n- [分享所想](#分享所想)\r\n- [我所想说🙋‍♀️](#我所想说🙋‍♀️)\r\n- [贡献](#贡献)\r\n- [作者](#作者)\r\n- [协议](#协议)\r\n\r\n<br>\r\n\r\n## 项目介绍\r\n\r\n- [x] `Qt` 的 `GUI` 基础控件用法，网络；\r\n\r\n- [x] `DTK` 重绘控件方式的框架解析；\r\n\r\n- [x] `QtCreator` 使用和一些小技巧；\r\n\r\n- [x] `Qt` 原理/运行机制理解\r\n\r\n　　自己所学记录，亦可以互相交流共享学习，<font color=#D0087E size=4 face=\"幼圆\">**有朋自远方互联网而来，不亦悦乎？**</font>\r\n\r\n<br>\r\n\r\n## 构建环境\r\n\r\n该系列的源码，知识文章等均托管于此仓库；主线目标是讲解 QT5 的相关文章。\r\n\r\n<font color=#70AD47 size=4 face=\"幼圆\">**开发系统：**</font>   `MacOS 10.14-15.x`  |  `win 10-11`  |  `UOS/Deepin 20-23.x`\r\n\r\n<font color=#70AD47 size=4 face=\"幼圆\">**编码软件：** </font> `Qt 5.9-5.15`  | `Visual Studio 2015-2022` \r\n\r\n<br>\r\n\r\n## 热门作品\r\n\r\n**较火 /  高规格的完整项目** 🔥🔥🔥 【属第10章】\r\n\r\n- [极简的电脑管家，一键关闭 Windows Defender (Anti-Virus).](https://github.com/XMuli/windows-defender-close)  【windows-defender-close】[★★]\r\n\r\n- 截图三部曲，入门至商业级水准作品：  难 → 易\r\n  1. [SunnyCapturer 跨平台的截图软件，支持离线OCR，图片翻译，贴图，钉图](https://blog.csdn.net/qq_33154343/article/details/136373241)  [★★★★★ 2023-2025] ：👉 [SunnyCapturer](https://sunnycapturer.xmuli.tech)\r\n  2. [FLIPPED 一款简易且漂亮的跨平台截图和贴图的软件](https://blog.csdn.net/qq_33154343/article/details/130053230) [★★★]\r\n  3. [ShotX 一个轻量级的 跨平台截图](https://github.com/XMuli/ShotX)  [★]\r\n\r\n\r\n  - [简洁且易用的ChatGPT&AI的桌面应用程序ThinkyMate → 不需登录](https://blog.csdn.net/qq_33154343/article/details/135488438)  [★★★★★ 2024]\r\n  - [Sunny 截图上架 Microsoft Store 及Linux等商店的指北](https://blog.csdn.net/qq_33154343/article/details/136334975)\r\n  - [分享如何拥有一份私人的『开源代码签名证书』](https://blog.csdn.net/qq_33154343/article/details/135487951)\r\n\r\n<br><br>\r\n\r\n# 正文\r\n\r\n## 「第 1 章」  预备知识\r\n\r\n- **Windows 系统**\r\n  - [在 Win10 环境下安装 QtCreator 5.9.8 作 C++ 的 IDE 开发工具](https://blog.csdn.net/qq_33154343/article/details/103674579)\r\n  - [QtCreator 安装 SDK，在 MSVC 编译模式下使用 CDB 调试器](https://blog.csdn.net/qq_33154343/article/details/98779698) \r\n  - [Win10 安装 QtCreator + Visual Studio 2015 作为 C++ 的 IDE 开发工具](https://blog.csdn.net/qq_33154343/article/details/103755569)\r\n  - [Visual Studio 2017 专业版使用最新版 Qt 5.9.2 教程](https://blog.csdn.net/qq_33154343/article/details/78587699)  \r\n  - [Win10 安装 CLion + CMake + MSVC / MinGW 作 QT 开发](https://blog.csdn.net/qq_33154343/article/details/120070828) \r\n\r\n- **MacOS 系统**\r\n  - [ MacOS 安装 QtCreator 5.9.8 作 C++ 的 IDE 开发工具](https://blog.csdn.net/qq_33154343/article/details/103231202)\r\n\r\n- **Linux 系统**\r\n  - [Win10 的 VMware 中安装 UOS 20，在 UOS 中安装 QtCreator 及搭建 DTK 开发环境](https://blog.csdn.net/qq_33154343/article/details/103733327)\r\n  - [MacOS 安装 Parallels Desktop，再安装 UOS 20 + QtCreaor，及搭建 DTK 开发环境](https://blog.csdn.net/qq_33154343/article/details/104180794)\r\n  - [MacOS 的 VMware Fusionlimian 中安装 Linux Deepin15.11](https://blog.csdn.net/qq_33154343/article/details/102789047)\r\n  - [Deepin / UOS 中配置 DTK 开发环境](https://blog.csdn.net/qq_33154343/article/details/112239518)\r\n  - [重装 UOS / Deepin V20 后必安装软件（个人习惯）](https://xmuli.blog.csdn.net/article/details/106510975)\r\n  - [ArchLinux + DDE 安装教程](https://xmuli.blog.csdn.net/article/details/107696563)\r\n  - [对 GNU/Linux 介绍、ArchLinux社区氛围、DDE移植Arch流程](https://blog.csdn.net/qq_33154343/article/details/108378441)\r\n\r\n- **通用命令交互**\r\n  - [Shell、Bash、CMD、PowerShell 的区别](https://blog.csdn.net/qq_33154343/article/details/123366377)\r\n  - [Windows-Terminal 配置 OhMyPosh 美化 GitBash](https://blog.csdn.net/qq_33154343/article/details/120661945)\r\n  - [WWindows 打造颜值和实用可媲美 Linux 的终端：Pwsh7 + OhMyPosh](https://blog.csdn.net/qq_33154343/article/details/124030501)\r\n\r\n<br>\r\n\r\n- **IDE 对 Qt 源码函数进行单步调试**\r\n  - [VS2022 And QtCreator 10 调试 Qt 源码教程](https://blog.csdn.net/qq_33154343/article/details/131491715) [★★★★★]\r\n\r\n<br>\r\n\r\n## 「第 2 章」  QT 生成原理/运行机制\r\n\r\n- [Make、Makefile、Cmake、QMake 的区别](https://blog.csdn.net/qq_33154343/article/details/98170236) \r\n- [QT 编程中 namespace Ui { class Widget; } 解析](https://blog.csdn.net/qq_33154343/article/details/98122981) \r\n\r\n<br>\r\n\r\n## 「第 3 章」  常规 GUI 控件\r\n\r\n**原生控件**\r\n\r\n- 一个默认的`Qt Widget`项目 【空】\r\n- [元对象系统 MOC (Meta-Object System) 的对象 MetaObject 和(含动态)属性 Propert 的用法](https://xmuli.blog.csdn.net/article/details/105925608) 【QtMeatObjectEx】\r\n- [QString 在2 ／8／10／16 进制之间转换](https://blog.csdn.net/qq_33154343/article/details/100860030) 【QtQStringEx】\r\n- [QString 常用的功能函数的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/100860270) 【QtQStringFunEx】\r\n- [QSlider + QAbstractSlider 滑动条的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/100944831)【QtQSliderEx】\r\n- [QSlider + QScrollBar + QProgressBar （ 移动条、滚动条 、进度条）的联动](https://blog.csdn.net/qq_33154343/article/details/101003081)【QtQProgressBarEx】\r\n- [QSlider 仪表盘 + QLCD_NUmber 数值显示 的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/101003115)【QtQdialQLCDEx】\r\n- [QTime / QDate / QDateTime 时间日期 +  QTimer 定时器的的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/101040841)【QtDateTimeEx】\r\n- [QComboBox 下拉列表框 + QPlainTextEdit 多行富文本编辑器的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/101127870) 【QtQcomboBoxEx】\r\n- [QListWidget 列表控件 + QToolButton 工具按钮的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/101314908)【QtQListWidgetEx】\r\n- [QTreeWidget 目录树组件 + QDockWidget 停靠区域组件的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/103467757)【QtQTreeWidgetEx】\r\n- [QTableWidget 表格组件的的介绍及用法](https://blog.csdn.net/qq_33154343/article/details/103485154)【QtQTableWidgetEx】\r\n- [QFileSystemModel 数据模型获取本机文件系统用法](https://blog.csdn.net/qq_33154343/article/details/103544820)【QtQFileSystemModelEx】 \r\n- [getOpenFileName 标准对话框和自定义对话框的用法](https://blog.csdn.net/qq_33154343/article/details/103545066)【QtQDialogEx】\r\n- [QTableView 表格视图 + QStandardItemModel 标准项模型的用法](https://blog.csdn.net/qq_33154343/article/details/103572418)【QtQStandardItemModelEx】\r\n- [自定义和标准对话框的用法](https://blog.csdn.net/qq_33154343/article/details/103606981)【QtCustomDialogEx】\r\n- [MDI(Multi-document Interface) 多文档界面的实现 + QMdiArea 的用法](https://blog.csdn.net/qq_33154343/article/details/103625380)【QtMDIEx】\r\n- [创建 QKeySequenceEdit() 后，显示方块■◆乱码](https://blog.csdn.net/qq_33154343/article/details/125775732)\r\n- Qt 修改 `*.svg` 文件的颜色【ExChangeSVGColor】\r\n\r\n**高级自绘和组合控件**\r\n\r\n- [Qt 使用亚克力的透明磨砂效果的窗口思路和解决方案，三种实现思路，支持全平台](https://github.com/XMuli/AcrylicWindow) 【AcrylicWindow】\r\n\r\n- [使用 QListWidget 创建的一个 气泡聊天窗口消息的控件 BubbleMessage，且自适应大小](https://github.com/XMuli/BubbleMessage) 【BubbleChat】 [★★★★]\r\n\r\n<br>\r\n\r\n## 「第 4 章」  网络编程\r\n\r\n- [QHostInfo 主机信息查询 + QNetworkInterface 查询 IP 等](https://blog.csdn.net/qq_33154343/article/details/103707035)【QtQHostInfoEx】\r\n- [TCP 通信之 QTcpServer + QTcpSocket，服务器和客户端通讯](https://blog.csdn.net/qq_33154343/article/details/103759735)【QtTcpEx】\r\n- [UDP 通信之 QUdpSocket + unicast 单播 / broadcast 广播 / multicast 组播](https://blog.csdn.net/qq_33154343/article/details/103789843)【QtUdpEx】\r\n- [QNetworkAccessManager + QNetworkReply + QNetworkRequest 协同实现高层网络的操作 HTTP](https://blog.csdn.net/qq_33154343/article/details/103811638) 【QtHttpEx】\r\n\r\n<br>\r\n\r\n## 「第 5 章」  DTK 重绘控件原理解析 / 自定义 QStyle\r\n\r\n- **DTK 历史发展**\r\n  - [DTK 的历史起源、发展，和简单入门](https://xmuli.blog.csdn.net/article/details/106189533) [★★]\r\n  - [Deepin、DDE 的历史起源与发展(附 Deepin 所有版本的 DDE 效果图)](https://xmuli.blog.csdn.net/article/details/106195055) [★★]\r\n  - [UOS/Deepin 中配置 DTK 开发环境](https://xmuli.blog.csdn.net/article/details/112239518) [★]\r\n  - [Deepin / DTK 文档参考资料集合](https://xmuli.blog.csdn.net/article/details/112244150)  [★★★]\r\n- **背景知识**\r\n  - QStyle与QPen、QPush、QPalette、QPainter之间的区别 \r\n  - [DTK 基础教程：自定义控件规范](https://xmuli.blog.csdn.net/article/details/108536588)  [★]\r\n  - [QStyle 设置界面的外观和 QCommonStyle 继承关系图讲解和使用](https://blog.csdn.net/qq_33154343/article/details/104367878) [★★]\r\n  - [Qt 之 proxy() 代理函数探究](https://blog.csdn.net/qq_33154343/article/details/101571843)\r\n- **感性理解👀**\r\n  - [QT 控件在 UOS 20 + MacOS10.14 下的显示不同的 QStyle「即样式换肤效果」](https://blog.csdn.net/qq_33154343/article/details/104305154)\r\n  - [QT 控件在 Win 10 + Deepin 10.15 下的显示不同的 QStyle「即样式换肤效果」](https://blog.csdn.net/qq_33154343/article/details/100148552) \r\n- **DTK 源码解析架构🤔**\r\n  - [QStyle / DTK 重绘 Qt-GUI 已有控件，举例 QScrollBar](https://blog.csdn.net/qq_33154343/article/details/104537944) [★★]\r\n  - [QStyle / DTK重绘自定义需求控件，举例 MySwitchButton](https://blog.csdn.net/qq_33154343/article/details/104987446) [★★] \r\n  - [DTK 基础教程：自定义控件规范](https://xmuli.blog.csdn.net/article/details/108536588) [★★]\r\n  - [DTK常用和测试代码片 ](https://xmuli.blog.csdn.net/article/details/106187959) \r\n  - [DTK 每日自动更新其 API 文档](https://xmuli.blog.csdn.net/article/details/108756933)\r\n- **DTK 项目实战**\r\n  - [更换 QT 应用程序的界面 UI，实现换肤，展示自带其它 QStyle 样式](https://blog.csdn.net/qq_33154343/article/details/100148552) \r\n  - [QStyle 自定义重绘 QScrollBar](https://blog.csdn.net/qq_33154343/article/details/100943187) \r\n  - [QStyle 自定义重绘 QRubberBand 控件](https://blog.csdn.net/qq_33154343/article/details/100588428) \r\n  - [QStyle 自定义重绘滑动条 QSlider 控件](https://blog.csdn.net/qq_33154343/article/details/100545769) \r\n  - [ QStyle 自定义重绘滑动条 QSlider 控件二](https://blog.csdn.net/qq_33154343/article/details/100942637) \r\n  - [QStyle 重绘时 sizeFromContents() 未被调用的分析](https://blog.csdn.net/qq_33154343/article/details/100941134) \r\n  - [QStyle 之 PenStyle 的 CustomDashLine 使用](https://blog.csdn.net/qq_33154343/article/details/100659576) \r\n  - [Deepin 开发任务栏网速插件 lfxSpeed](https://xmuli.blog.csdn.net/article/details/110672252) [★]\r\n  - [Deepin 任务栏网速插件推荐  NetSpeed  (重构 lfxSpeed)](https://xmuli.blog.csdn.net/article/details/113573870) [★★]\r\n  - [Deepin 自定义修改窗口圆角大小](https://xmuli.blog.csdn.net/article/details/109232878)  [商业开源项目示例 ★★]\r\n  - [Deepin 愿望墙：社区插件等需求调研结果](https://xmuli.blog.csdn.net/article/details/112243878) [社区练手参考]\r\n\r\n\r\n<br>\r\n\r\n## 「第 6 章」  QT / IDE 乱码根因和解决\r\n\r\n- **此两篇足够**\r\n- 极简图表解释 -->  [古文码、口字码、符号码、问号码、棍拷码](https://blog.csdn.net/qq_33154343/article/details/99617767) [★★★★★]\r\n  \r\n- 极繁根因分析 -->  [愿编程不再乱码(含Qt)-根因深究](https://blog.csdn.net/qq_33154343/article/details/120661967) [★★★★★]\r\n\r\n\r\n- **产出 “极繁根因分析” 一文的途中的曲折认知**\r\n\r\n  - [QT 中文乱码问题](https://blog.csdn.net/qq_33154343/article/details/78686103)  [★★]\r\n  - [乱码原因产生和解决方案](https://xmuli.blog.csdn.net/article/details/109567352) \r\n  - [借 QT 中文乱码谈谈 Coding 中的编码问题](https://blog.csdn.net/qq_33154343/article/details/78686075) \r\n  - [QT5 中文乱码解决](https://blog.csdn.net/qq_33154343/article/details/95344312) \r\n\r\n\r\n<br>\r\n\r\n## 「第 7 章」  IDE 技巧\r\n\r\n- **Qt Creator**\r\n  - [QtCreator 界面的基本组成简介和入门使用讲解(Win + Linux + MacOS)](https://blog.csdn.net/qq_33154343/article/details/103942733)\r\n\r\n  - [QtCreator 设置代码美化 Astyle 之 Artistic](https://blog.csdn.net/qq_33154343/article/details/101397429)\r\n\r\n  - [QtCreator 关闭 .cpp 文件右侧的黄色警告](https://blog.csdn.net/qq_33154343/article/details/102943623)\r\n\r\n  - [QtCreator 中自定义项目例子置于“欢迎-实例”中](https://blog.csdn.net/qq_33154343/article/details/115049715)\r\n\r\n  - [QtCreator 中自定义项目例子置于“欢迎-实例”中](https://xmuli.blog.csdn.net/article/details/115049715)\r\n\r\n  - [Qt 项目用 Doxygen 生成 .qch，嵌入文档到 Assistants](https://blog.csdn.net/qq_33154343/article/details/114580630)\r\n\r\n  - [小技巧：Design 设计师里，无法拖拽 action 到 toolbar 里](https://blog.csdn.net/qq_33154343/article/details/100168170) \r\n\r\n  - [小技巧：QtCreator 用快捷键秒实现，声明在基类中重写的派生类(纯)虚函数](https://blog.csdn.net/qq_33154343/article/details/104457739) \r\n\r\n  - [小技巧：设置 QToolBox 的每一页 page 的使用单独的布局（QTabWidget 同理）](https://blog.csdn.net/qq_33154343/article/details/100185025) \r\n\r\n  - [小技巧：使用 Qt Design 提升自定义控件，报错找不到头文件， <QtCreator - 经验1>](./WINDOWS_MSVC_MinGW%20%26%20LINUX_GCC%20%26%20MACOS_CLANG%20所遇到奇葩问题集锦.md)\r\n- **Visual Studio**\r\n  - [VS2017 调试 Qt 源码，安装 PDB](https://blog.csdn.net/qq_33154343/article/details/120339797)\r\n  - [VS2019 调试 Qt5 时 QString 显示为内存地址而非字符串](https://xmuli.blog.csdn.net/article/details/116244865) \r\n  - [VS2022 And QtCreator10调试Qt源码教程](https://blog.csdn.net/qq_33154343/article/details/131491715) [★★★★★]\r\n  - [Visual Studio 实际仅增删数行，却显示文件所有行均发生变更](https://blog.csdn.net/qq_33154343/article/details/123366419)\r\n  - [Visual Studio 生成 .vs 隐藏文件夹，导致 Git 命令错误](https://blog.csdn.net/qq_33154343/article/details/123366493)\r\n  - [Win10 的 20H2 使用 VS 2019，拖曳窗口会崩溃](https://blog.csdn.net/qq_33154343/article/details/116244656)\r\n  - [Visual Studio 2019 进行远程调试](https://blog.csdn.net/qq_33154343/article/details/123855765)\r\n  - [Visual Studio 断点调试之箭头偏移进错函数，捉🐛记](https://blog.csdn.net/qq_33154343/article/details/124482152)\r\n  - [微软 SDK 导致的项目编译失败哦~](https://blog.csdn.net/qq_33154343/article/details/124736720)\r\n  - [一个微软自带的 Notepad 所导致的问题](https://blog.csdn.net/qq_33154343/article/details/123508220) 【ExCRLF】\r\n- **WinDbg 调试**\r\n  - [WinDbg：入门分析 dmp 文件『一』](https://xmuli.blog.csdn.net/article/details/123563647)\r\n  - [WinDbg：调试之附加进程生成 dmp『二』](https://xmuli.blog.csdn.net/article/details/123563753)\r\n\r\n\r\n<br>\r\n\r\n## 「第 8 章」  提交规范和发布 QT 程序\r\n\r\n- [约定式提交规范](https://www.conventionalcommits.org/)\r\n- [修改 Doxygen 主题，生成 Qt 风格的文档](https://xmuli.blog.csdn.net/article/details/114591725) \r\n- [QT 项目在 Windows 平台上面发布成可执行程序](https://blog.csdn.net/qq_33154343/article/details/96448388) \r\n- [QT 项目在 MacOS 平台上面发布成可执行程序](https://xmuli.blog.csdn.net/article/details/96448938#comments) \r\n- [QT 项目在 Linux 平台上面发布成可执行程序](https://blog.csdn.net/qq_33154343/article/details/96448621) \r\n- [Linux 中用 dh_make 将 Qt + CMake 项目打包为 deb 文件](https://blog.csdn.net/qq_33154343/article/details/123778207)\r\n\r\n上架 App Store\r\n\r\n- [分享如何拥有一份私人的『开源代码签名证书』](https://blog.csdn.net/qq_33154343/article/details/135487951) [★★★★★]\r\n\r\n- [Sunny 截图上架 Microsoft Store 及Linux等商店的指北](https://blog.csdn.net/qq_33154343/article/details/136334975)\r\n\r\n  \r\n\r\n<br>\r\n\r\n## 「第 9 章」  高级\r\n\r\n- [Lambda 表达式详解](https://blog.csdn.net/qq_33154343/article/details/125775706)\r\n\r\n- [Qt 信号和槽原理分析，手写实现信号和槽，模拟 moc 生成 moc_xxx.cpp 过程](https://xmuli.blog.csdn.net/article/details/115305903) [★★★]\r\n- [QT 项目 CMake 设置国际化支持](https://xmuli.blog.csdn.net/article/details/114439385) \r\n- [Qt4 和 Qt5 的信号和槽的用法差异](https://xmuli.blog.csdn.net/article/details/118346008) \r\n- [高分屏、分辨率、DPI、PPI，及 Qt 处理高分屏](https://xmuli.blog.csdn.net/article/details/108905279) [★★]\r\n- [如何给上游 QT 提交 BUG 反馈和贡献代码 PATCH？](https://xmuli.blog.csdn.net/article/details/107220867)  [★★★★]\r\n\r\n- [如何构建 QT5（5.15）](https://xmuli.blog.csdn.net/article/details/114259155) \r\n- [在 Mac 编译成功运行 QT 5.15 源码：Debug + Release 版本](https://xmuli.blog.csdn.net/article/details/114259186)\r\n\r\n<br>\r\n\r\n## 「第 10 章」  项目 / 商业级别\r\n\r\n**较火 /  高规格的完整项目** 🔥🔥🔥\r\n\r\n- [极简的电脑管家，一键关闭 Windows Defender (Anti-Virus).](https://github.com/XMuli/windows-defender-close)  【windows-defender-close】[★★]\r\n\r\n- 截图三部曲，入门至商业级水准作品：  难 → 易\r\n  1. [SunnyCapturer 跨平台的截图软件，支持离线OCR，图片翻译，贴图，钉图](https://blog.csdn.net/qq_33154343/article/details/136373241)  [★★★★★ 2023-2025] ：👉 [SunnyCapturer 官网](https://sunnycapturer.xmuli.tech)\r\n  2. [FLIPPED 一款简易且漂亮的跨平台截图和贴图的软件](https://blog.csdn.net/qq_33154343/article/details/130053230) [★★★]\r\n  3. [ShotX 一个轻量级的 跨平台截图](https://github.com/XMuli/ShotX)  [★]\r\n\r\n\r\n  - [简洁且易用的ChatGPT&AI的桌面应用程序ThinkyMate → 不需登录](https://blog.csdn.net/qq_33154343/article/details/135488438)  [★★★★★ 2024]\r\n  - [Sunny 截图上架 Microsoft Store 及Linux等商店的指北](https://blog.csdn.net/qq_33154343/article/details/136334975)\r\n  - [分享如何拥有一份私人的『开源代码签名证书』](https://blog.csdn.net/qq_33154343/article/details/135487951)\r\n\r\n<br>\r\n\r\n**新人友好的项目**\r\n\r\n- [项目实战：仿 QQ 的单聊，属 GUI 界面 ](https://blog.csdn.net/qq_33154343/article/details/79341062)\r\n- [项目实战：仿 QQ 的群聊，属 GUI 界面](https://blog.csdn.net/qq_33154343/article/details/96437681)\r\n- [项目实战：C 语言写 Socket 的 TCP 聊天，属 CUI 控制台](https://blog.csdn.net/qq_33154343/article/details/81808722)\r\n- [项目实战：C 语言写 Socket 的 UDP 聊天，属 CUI 控制台](https://blog.csdn.net/qq_33154343/article/details/81809168)\r\n- [项目实战：QT5 的 Quick 仿写 QQ  2019 简洁版的登录界面，含 GUI 界面](https://blog.csdn.net/qq_33154343/article/details/80448144)\r\n- [QT5/C++项目：QT象棋【初版】](https://xmuli.blog.csdn.net/article/details/80931400) [★★★★★]\r\n- [QT5/C++项目：基于QT的跨平台网络对战象棋（一）](https://blog.csdn.net/qq_33154343/article/details/89284983) [★★★★★]\r\n- [QT5/C++项目：基于QT的跨平台网络对战象棋（二）](https://blog.csdn.net/qq_33154343/article/details/89285968) [★★★★★]\r\n- [QT5/C++项目：基于QT的跨平台网络对战象棋（三）](https://blog.csdn.net/qq_33154343/article/details/89286553) [★★★★★]\r\n\r\n\r\n\r\n**硬件**\r\n\r\n- [小米AX6S刷OpenWrt和开启OpenClash，及刷回官网固件](https://blog.csdn.net/qq_33154343/article/details/128268719)\r\n\r\n- [小米路由器 R4A 刷原生 OpenWrt 后的风景](https://blog.csdn.net/qq_33154343/article/details/128523087)\r\n\r\n<br>\r\n\r\n## 「第 11 章」  经验总结\r\n\r\n- [Linux / Unix 学习完整系列（基础 / 编译 / 进程间通信 / 信号 / 守护进程 / 多线程等）](https://xmuli.blog.csdn.net/article/details/105847532)【[linuxExample](https://github.com/xmuli/linuxExample)】[★★★★★]\r\n\r\n- [WINDOWS_MSVC_MinGW & LINUX_GCC & MACOS_CLANG 所遇到奇葩问题集锦](./WINDOWS_MSVC_MinGW%20%26%20LINUX_GCC%20%26%20MACOS_CLANG%20%E6%89%80%E9%81%87%E5%88%B0%E5%A5%87%E8%91%A9%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6.md) [🦄🎣🎁🎁🎁]\r\n\r\n<br>\r\n\r\n## 新手过来\r\n\r\n　　<font color=#D0087E size=4 face=\"幼圆\">**新手**</font> 在深思熟虑后踏入的编程，容易遭遇如下如下几点:\r\n\r\n1. 语言语法不熟悉🤦‍♀️\r\n2. 相关 IDE 安装、配置不会；不懂如何创建自己所需的工程项目🤦‍♀️\r\n3. 基础控件不认识，不会用🤦‍♀️\r\n4. 难以🔍可阅读、成体系的低级博客，多为高热度Title文章🤦‍♀️\r\n5. ...开始步入正轨👣\r\n6. 也不知学编程到是底在学习什么❓👀\r\n7. ...修行靠个人👩‍💻\r\n\r\n<br>\r\n\r\n## 分享所想\r\n\r\n1. 自己想学一遍 GUI 控件\r\n2. 帮助真的新手实现0→1的入门，解决👆的1，2，3，4，6问题\r\n3. 学习于网络，回馈于网络\r\n4. 希望永久被🔍引擎检索到，以博客形式发表📝\r\n\r\n<br>\r\n\r\n**Star 增长**\r\n\r\n[![Star History Chart](https://api.star-history.com/svg?repos=XMuli/QtExamples&type=Date)](https://star-history.com/#XMuli/QtExamples&Date)\r\n\r\n<br>\r\n\r\n## 我所想说🙋‍♀️\r\n\r\n<font color=#D0087E size=4 face=\"幼圆\">虽然不盈利，会累，但因自由和开源软件而写的开心ya， 鸭鸭</font>\r\n\r\n<br>\r\n\r\n## 贡献\r\n\r\n若是帮助到了你，或者觉得有用，可以点击该项目的的 <font color=#D0087E size=4 face=\"幼圆\">**⭐Star** </font>和<font color=#D0087E size=4 face=\"幼圆\">**🍴 Fork**</font> 的两个图标，方便抬手之间，表示点个赞，手有余香\r\n\r\n<details>\r\n    <summary> <b>当然也可以赠与一杯冰阔落[捐赠/打赏  ← 点击展开二维码]</b></summary>\r\n  <p> - If you have something to learn from the project, you can also invite me to share a glass of Fat House Ice and Coke. - </p>\r\n  <pre><img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2022/202302282339037.png\" width=\"80%\"/></pre>\r\n</details>\r\n<br>\r\n\r\n## 作者\r\n\r\n[![alt text](https://img.shields.io/badge/QQ-%E5%81%95%E8%87%A7-brightgreen)](https://sighttp.qq.com/authd?IDKEY=31f3ef7312b39e2c8dc822ae2f4c3b3118e1a6f31cc83373) : 直接和我聊天~\r\n\r\n[![alt text](https://img.shields.io/badge/GitHub-XMuli-brightgreen)](https://github.com/XMuli) : 查看我的主页\r\n\r\n[![alt text](https://img.shields.io/badge/Blog-%E5%81%95%E8%87%A7%E7%9A%84%E5%B0%8F%E7%AB%99-ff69b4)](https://ifmet.cn/) : 好奇我的小窝\r\n\r\n[![alt text](https://img.shields.io/badge/Blog-国内镜像-ff69b4)](https://blog.csdn.net/qq_33154343) ：浏览量 100W+\r\n\r\n<br>\r\n\r\n## 协议\r\n\r\n<img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2023/20230618194948.png\" width=\"50%\"/>\r\n\r\n博客代码基于Apache License 2.0 协议进行分发和使用，更多信息参见 [协议文件](/LICENSE)。\r\n\r\n所含文章使用以下协议进行保护：[署名-非商业性使用-禁止演绎](http://creativecommons.org/licenses/by-nc-nd/3.0/cn/)。\r\n\r\n"
        },
        {
          "name": "Studio",
          "type": "tree",
          "content": null
        },
        {
          "name": "TestHotKey",
          "type": "tree",
          "content": null
        },
        {
          "name": "WINDOWS_MSVC_MinGW & LINUX_GCC & MACOS_CLANG 所遇到奇葩问题集锦.md",
          "type": "blob",
          "size": 17.529296875,
          "content": "---\ntitle: WINDOWS_MSVC_MinGW & LINUX_GCC & MACOS_CLANG 所遇到奇葩问题集锦\ndate: 2023-05-01 12:22:28\nupdated: 2023-06-29 16:34:28\n---\n\n\n\n\n\n\n\n**目录**\n\n[toc]\n\n最开始，都是在 Linux 上开发：UOS/Deepin， Ubuntu，ArchLinux；后来喜欢 MacOS 系统，间歇性偶尔续续折腾；当前，主要以 Windows 上折腾为主，天天重度使用。主要记录这几年中，开发过程中的问题，和一些办公软件、开发工具相关的问题；疑难杂症和经验之谈，涉及面：\n\n1. WINDOWS & MSVC & MinGW\n2. LINUX & GCC\n3.  MACOS & CLANG\n4. 办公 & 居家 & 生产力 的软件\n5. ~~后续：人生 & 职场 & 感悟 & 哲学 （以后有时间写）~~\n\n<br>\n\n## PUBLIC  所遇到奇葩问题集锦\n\n### QtCreator\n\n1. 使用 Qt Creator 提升控件自定义控件时，操作如下， MSVC 和 WinGW 都可编译通过，亲测出来的方案；通常报错如下\n\n   ```bash\n   通常报错 ”ui_mainui.h:22:10: fatal error: chatinputedit.h: No such file or directory\n    #include \"chatinputedit.h\"\n             ^~~~~~~~~~~~~~~~~“\n   ```\n\n   <details>\n       <summary> [解] 不添加 Global，且 CMake 添加 include_directories 说明此提升的头文件路径 </summary>\n     <p>  </p>\n     <pre>1. `promoted to` 提升自定控件操作如图，然后在 CMakeLists.txt  中添加包含此头文件的路径，添加 `include_directories(${PROJECT_SOURCE_DIR}/widgets)`，用于修复 Qt Design 使用提升自定义控件后， MinGW 找不到而编译失败。\n         <img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2023/20230619010003.png\" width=\"100%\"/>\n      - 若是要降低会原本的 Q控件，使用 `Demote to`\n      - 若仅仅只用 MSVC 编译，上图片中的 `Promoted class name:` 添加自定义类名后，在 `Header file:` 后面自动生成文件后，补上其相对路径的部分，然后 不用写 include_directories 这一行，也可以直接编译通过\n     </pre>\n   </details>\n\n2.  Mac 13 上用 Clang64 编译 Qt+CMake 报错：`:-1: error: ninja: build stopped: subcommand failed.`\n\n   [解] 1.可能得 kit 没有设置好 2. CMake 没有安装好 3. CMakeList.txt 里面的语法存在错误，屏蔽排查（通常是）\n\n3. xx\n\n<br>\n\n## WINDOWS 所遇到奇葩问题集锦\n\n### NT/MSVC 编译开发问题\n\n1. 如何设置安装 Visual Studio Install 使用英文语言运行？ \n\n   [解] 程序运行后添加 ` --locale en-US` 即可\n\n2. `QString` 转 `char *` 莫名其妙会失败？！！！\n\n   <details>\n       <summary> [解] 转换分为两步来完成一定没有问题，但是一步直接到， MSVC 下会偶尔有问题 </summary>\n     <p> 在 https://github.com/feiyangqingyun/qtkaifajingyan 的 185 条已总结，同遇到和排查出来，真滴是血的教训，操操操 </p>\n     <pre>\n     QString text = \"xxxxx\";\n     //下面这样转换很可能会有问题\n     char *data = text.toUtf8().data();\n     //分两步转换肯定不会有问题\n     QByteArray buffer = text.toUtf8();\n     char *data = buffer.data();\n     const char *data = buffer.constData();\n     </pre>\n   </details>\n\n3. 微软 SDK 导致的项目编译失败哦~                                                                                                                    [[解]](https://blog.csdn.net/qq_33154343/article/details/124736720)\n\n4. Win10的20H2使用VS2019，拖曳窗口会崩溃！！！                                                                                      [[解]](https://blog.csdn.net/qq_33154343/article/details/116244656)\n\n5. VS2019调试Qt5时QString显示为内存地址而非字符串！！！                                                                       [[解]](https://xmuli.blog.csdn.net/article/details/116244865)\n\n6. 一个微软自带的 Notepad 所导致的问题，回车符（CR）和换行符（LF）。                                               [[解]](https://blog.csdn.net/qq_33154343/article/details/123508220)\n\n7. Visual Studio 断点调试之箭头偏移进错函数，捉虫记                                                                                    [[解]](https://blog.csdn.net/qq_33154343/article/details/124482152)\n\n8. Qt Creator(Qt 15.2) 使用 MinGW 则会编译成功，改用 MSVC 2022 却编译失败！！！\n\n   <details>\n       <summary> [解] 某些中文注释会导致编译失败 （操！！！） </summary>\n     <p> MSVC 的 .h.cpp 都采用 UTF8-BOM 格式， </p>\n     <pre><img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2023/%E4%B8%8D%E5%8F%AF%E5%88%A0%E9%99%A4Snipaste_2023-05-13_21-04-59.png\" width=\"100%\"/>\n     </pre>\n   </details>\n\n9. Qt Creator(Qt 15.2) 使用 MinGW 终端的中文不会乱码，改用 MSVC 2022 却中文乱码\n\n   <details>\n       <summary> [解] 某些中文注释会导致编译失败 （操！！！），CMake 中设置 utf-8 </summary>\n     <p> MSVC 的 .h.cpp 都采用 UTF8-BOM 格式。同时可参考 8 条 </p>\n     <pre>\n     # 采用 MSVC 终端上的中文不乱码\n   if (MSVC)\n       set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /utf-8\")\n       add_compile_options(/source-charset:utf-8 /execution-charset:utf-8) // 根据实际可注释\n   endif()\n     </pre>\n   </details>\n\n10. Qt 5.15 获取音频的输入输出，使用 MinGW 则会编译仅仅会获取一份，改用 MSVC 2022 却编译却会获得信息重复\n\n    <details>\n        <summary> [解] 详细参数确实有不同，如何去重的方法还在寻找中。 已解决，手动写了一个算法进行去重。 </summary>\n      <p> MSVC 和 MinGW 的又一个不相同，哔了狗 </p>\n      <pre>\n      【问题源码和打印显示】\n        // 获取音频输入设备列表\n        QList<QAudioDeviceInfo> inputDevices = QAudioDeviceInfo::availableDevices(QAudio::AudioInput);\n        qDebug() << \"音频输入设备列表：\";\n        for (const QAudioDeviceInfo& deviceInfo : inputDevices) {\n            qDebug() << \"设备名称：\" << deviceInfo.deviceName();\n    \t\tqDebug() << \"支持的采样率：\" << deviceInfo.supportedSampleRates();\n    \t\tqDebug() << \"支持的声道数：\" << deviceInfo.supportedChannelCounts();\n    \t\tqDebug() << \"支持的采样大小：\" << deviceInfo.supportedSampleSizes();\n    \t\tqDebug() << \"支持的编码格式：\" << deviceInfo.supportedCodecs();\n    \t\tqDebug() << \"-------------------------------------\";\n        }\n        // 获取音频输出设备列表\n        QList<QAudioDeviceInfo> outputDevices = QAudioDeviceInfo::availableDevices(QAudio::AudioOutput);\n        qDebug() << \"音频输出设备列表：\";\n        for (const QAudioDeviceInfo& deviceInfo : outputDevices) {\n            qDebug() << \"设备名称：\" << deviceInfo.deviceName();\n    \t\tqDebug() << \"支持的采样率：\" << deviceInfo.supportedSampleRates();\n    \t\tqDebug() << \"支持的声道数：\" << deviceInfo.supportedChannelCounts();\n    \t\tqDebug() << \"支持的采样大小：\" << deviceInfo.supportedSampleSizes();\n    \t\tqDebug() << \"支持的编码格式：\" << deviceInfo.supportedCodecs();\n    \t\tqDebug() << \"-------------------------------------\";\n        }\n    🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣\n    ***********************************MSVC 编译器输出***********************************\n    [debug]  m_microphoneDevices设备名称： \"麦克风阵列 (适用于数字麦克风的英特尔? 智音技术)\"\n    [debug] 支持的采样率： (8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 192000)\n    [debug] 支持的声道数： (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 48, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug]  m_microphoneDevices设备名称： \"麦克风阵列 (适用于数字麦克风的英特尔? 智音技术)\"\n    [debug] 支持的采样率： ()\n    [debug] 支持的声道数： (1, 2)\n    [debug] 支持的采样大小： ()\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug] m_speakerDevices 设备名称： \"扬声器 (Realtek(R) Audio)\"\n    [debug] 支持的采样率： (8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 192000)\n    [debug] 支持的声道数： (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 48, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug] m_speakerDevices 设备名称： \"P27q-30 (NVIDIA High Definition Audio)\"\n    [debug] 支持的采样率： (8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 192000)\n    [debug] 支持的声道数： (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 48, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug] m_speakerDevices 设备名称： \"P27q-30 (NVIDIA High Definition Audio)\"\n    [debug] 支持的采样率： (48000)\n    [debug] 支持的声道数： (2)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug] m_speakerDevices 设备名称： \"扬声器 (Realtek(R) Audio)\"\n    [debug] 支持的采样率： (48000)\n    [debug] 支持的声道数： (2)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣\n    ***********************************MinGW 编译器输出***********************************\n    [debug]  m_microphoneDevices设备名称： \"麦克风阵列 (适用于数字麦克风的英特尔? 智音技术)\"\n    [debug] 支持的采样率： (8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 192000)\n    [debug] 支持的声道数： (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 48, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug] m_speakerDevices 设备名称： \"扬声器 (Realtek(R) Audio)\"\n    [debug] 支持的采样率： (8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 192000)\n    [debug] 支持的声道数： (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 48, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    [debug] m_speakerDevices 设备名称： \"P27q-30 (NVIDIA High Definition Audio)\"\n    [debug] 支持的采样率： (8000, 11025, 16000, 22050, 32000, 44100, 48000, 88200, 96000, 192000)\n    [debug] 支持的声道数： (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n    [debug] 支持的采样大小： (8, 16, 24, 32, 48, 64)\n    [debug] 支持的编码格式： (\"audio/pcm\")\n    [debug] -------------------------------------\n    🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣🤣\n    【解决方案】还在找中，或者看如何去重\n    </pre>\n    </details>\n\n11. xxx\n\n    \n\n<br>\n\n### WINDOWS 问题\n\n1. Teams 始终无法登录，提示如图：我们无法连接到你。 HTTP 404  login.micsoftonline.com\n\n   <details>\n       <summary> [解] Teams 安装应用程序-属性-运行兼容性疑难解答 </summary>\n     <p> [含详细报错图片 和 解决图] </p>\n     <pre><img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2023/Snipaste_2023-05-15_11-05-48.png\" width=\"50%\"/>解决方案：<img src=\"https://fastly.jsdelivr.net/gh/XMuli/xmuliPic@pic/2023/20230515161422.png\" width=\"50%\"/>\n     </pre>\n   </details>\n\n2. Office 365 企业版，无法登录账号\n\n   [解] 关掉系统代理（代理直连也不行，必须要关掉），[ref1 评论](https://zhuanlan.zhihu.com/p/392977620)\n\n3. 重装系统后，自动更新后，托盘的喇叭🔈图标错误，且无法打开\n\n   <details>\n       <summary> [解] 运行命令如下，亲测可用 </summary>\n     <p> 参考 https://blog.csdn.net/Bigotry_1/article/details/121957884 </p>\n     <pre> \n   1.首先按下“win+R”打开运行的窗口，点击输入命令“cmd”，并以管理员身份进入\n   2.然后在弹出来的窗口中点击输入“DISM.exe /Online /Cleanup-image /Scanhealth”，回车确定扫描映像是否完整\n   3.然后完成后再检测映像，输入：DISM.exe /Online /Cleanup-image /Checkhealth。\n   4.然后再修复映像，输入：DISM.exe /Online /Cleanup-image /Restorehealth。\n   5.最后检查系统并修复：sfc /scannow。\n   6.重启电脑，然后就完成了\n     </pre>\n   </details>\n\n<br>\n\n---\n\n## LINUX & GCC 所遇到奇葩问题集锦\n\n**简  述：**　当初记录一些使用和开发 `Deepin/UOS V20`   过程中的一些奇怪的 `Bug`、或者记录一些奇怪知识。\n\n\n\n1. `Debug` 编译运行成功、`Releas`编译成功、运行崩溃\n\n   <details>\n       <summary> [解] 变量的值未初始化，在 Debug 模式会自动赋值，但是 Release  模式下会，不会自动赋初值； </summary>\n     <p>  </p>\n     <pre>在写 `dde-dock` 的时候，遇到编译的网速插件在 Debug 模式下会编译成功、运行成功；在 Release 下也可以编译成功，但运行会崩溃。环境如下:　💻：  uos20 amd64 📎 Qt 5.11.3 📎 gcc/g++ 9.0 📎 gdb8.0\n     **本次错误的三个原因：**\n   - 重写了虚函数，但是里面没有写具体的内容\n   - 函数有 bool 返回值，但是函数体内部没有写\n   - 很多虚函数只搭建了框架，里面都是空着的，运行一会后突然崩溃\n     </pre>\n   </details>\n\n2. UOS V20 控制中心编译成功、运行崩溃\n\n   <details>\n       <summary> [解] 然后将 `main.cpp`  的下面此处此行修改为`new` 的形式后，成功运行了 </summary>\n     <p>  </p>\n     <pre>控制中心  `dde-control-center`  从  `gerrit` 上面新下载的源码， 切换到 `maintain/5.2` 分支，编译成功，运行失败，一定崩溃，界面不会显示出来；后来切换到 `uos` 分支也是一样的结果。\n   报错如下：\n   <img src=\"https://cdn.jsdelivr.net/gh/xmuli/xmuliPic@pic/2020/image-20201120171014490.png\" width=\"70%\"/>\n   <img src=\"https://cdn.jsdelivr.net/gh/xmuli/xmuliPic@pic/2020/image-20201120170952187.png\" width=\"70%\"/>\n   #### 分析\n   - 重新在 gerrit 上拉取一份新的最新代码，旧的可能被未知污染了；同时再找一份电脑编译运行此项目，作为对比验证\n   - 控制中心运行显示， 后面要加参数 `-s`\n   - 怀疑可能 dtk 版本过低，`dtkcore、dtkgui、dtkwidget` 都升级到最新的版本，对应的 `-dev` 包也升级了一下；\n   - 然后重启系统；\n   - 重建构建生成依赖 `sudo apt build-dep dde-control-center`  或者  `dpkg-checkbuilddeps` ；\n   - 删除 `.user` 临时文件；然后重来一轮 **重新 清理、构建、运行** 再次尝试；\n   #### 解决一\n   然后将 `main.cpp`  的下面此处此行修改为`new` 的形式后，成功运行了：\n   ```cpp\n   int main(int argc, char *argv[])\n   {\n       DApplication *app = DApplication::globalApplication(argc, argv);\n   ...省略\n   int main(int argc, char *argv[])\n   {\n       DApplication *app = new DApplication(argc, argv);\n   ```\n   #### 解决二\n   依旧怀疑是 `DTK` 的问题，安装了符号调试包准备调试 `DTK` 时候；运行之后 `sudo apt install libdtkwidget5-dbgsym` 之后，发现不用修改**解决一** ，此 Bug 没有再次复现，也可以成功运行。\n   #### 其它\n   如何使用 gdb 带参数调试，fpc 有一篇 markdown 文档；systemd-coredump 是干啥用的，学习一下。\n     </pre>\n   </details>\n\n3. 显示器外接而苹果 3.5mm 耳机，显示没有声音，不能听歌；以为是 `dde-control-center` 的 bug ，升级到最新版本；依旧无效\n\n   <details>\n       <summary> [解] 显示器使用 `VGA` 连接机箱，没有音频输出，所以耳机没有显示，改为插入 机箱的耳机接口，即回复正常。\n   PS： 若用 `HTMI` 连接，是自带音频，直接外接显示器 </summary>\n     <p>  </p>\n     <pre>\n   属于硬件的数据线不知，原报错图\n   <img src=\"https://cdn.jsdelivr.net/gh/xmuli/xmuliPic@pic/2020/image-20201120171014490.png\" width=\"70%\"/>\n     </pre>\n   </details>\n\n4. QtCreator 项目，过量的调试信息；发现控制台有很多调试信息刷屏，很烦。想屏蔽这个消息\n\n   <img src=\"https://cdn.jsdelivr.net/gh/xmuli/xmuliPic@pic/2020/20210106172513.png\" width=\"50%\"/>\n\n   [解] 在 `/etc/X11/Xsession.d/00deepin-dde-env ` 中注释掉 `QT_LOGGING_RULES=\"*.debug=true\"` 即可，然后注销之后生效。可在 QtCreator 中，`项目-Build & Run-Run-Run Environment` 中，查看到该环境变量。\n\n   若为 false 就是啥都不打印， 包括你自己的 qDebug()<< ；为 true 所有的 qtdebug 日志都会打印。\n\n5. xxx\n\n<br>\n\n---\n\n## MACOS & CLANG 所遇到奇葩问题集锦\n\n1. xxx\n\n\n\n## Further Information\n\n另外发现几个甚是出彩的开发 Qt， CMake， Windows 相关的经验总结，可以多观摩和体会，很多问题，经过自己不懈的熬夜调试，发现都是前人已经遇到且总结出来的，去搜搜关键词，通常会有意外之喜；\n\n人生苦短，疼爱自己，多陪家人。\n\n\n\n- [飞扬青云，自己总结的这十多年来做Qt开发以来的经验](https://github.com/feiyangqingyun/qtkaifajingyan)\n- [偕臧， QtExamples，控件使用和原理，DTK 重绘控件框架解析；常见IDE技巧](https://github.com/XMuli/QtExamples)\n- [wangwenx190，学习编程过程中所记的笔记，CMAKE，Qt，MSVC 等](https://github.com/wangwenx190/notes)\n\n\n\n若有质量较佳的集合，欢迎提 PR 补充\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "www.regexlab.com_zh_encoding.htm.png",
          "type": "blob",
          "size": 999.169921875,
          "content": null
        }
      ]
    }
  ]
}