{
  "metadata": {
    "timestamp": 1736565957793,
    "page": 937,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Corvusoft/restbed",
      "stars": 1935,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.541015625,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.c text\n*.cc text\n*.cpp text\n*.h text\n*.hpp test\n*.txt text\n*.htm text\n*.html text\n*.py text\n*.pyw text\n*.cmake text\nCMakeLists.txt text\n\n# batch files are specific to windows and always crlf\n*.bat eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.pem binary\n*.a binary\n*.so binary\n*.dll binary\n*.dylib binary\n*.lib binary\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.462890625,
          "content": "# Project Files\nbuild/\ndistribution/\n\n# Compiled source\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.so\n*.dylib\n*.pyc\n*.cab\n*.msi\n*.msm\n*.msp\n*.slo\n*.lo\n*.obj\n*.lai\n*.la\n*.a\n*.lib\n*.exe\n*.out\n*.app\n*.gch\n*.pch\n\n# Packages\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n\n# Logs and databases\n*.log\n*.sql\n*.sqlite\n*.bak\n*.swp\n\n# OS generated files\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\nThumbs.db\nDesktop.ini\n$RECYCLE.BIN/\n*.lnk\n\n# IDE Related\n\n.vscode/\n.idea/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3857421875,
          "content": "[submodule \"dependency/asio\"]\n\tpath = dependency/asio\n\turl = https://github.com/corvusoft/asio-dependency\n\tbranch = master\n[submodule \"dependency/catch\"]\n\tpath = dependency/catch\n\turl = https://github.com/corvusoft/catch-dependency\n\tbranch = master\n[submodule \"dependency/openssl\"]\n\tpath = dependency/openssl\n\turl = https://github.com/corvusoft/openssl-dependency\n\tbranch = OpenSSL_1_0_2-stable\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.4814453125,
          "content": "cmake_minimum_required( VERSION 3.22.0 FATAL_ERROR )\n\nproject( \"restbed\" VERSION 4.8.0 LANGUAGES CXX )\nmessage( \"                                                              \" )\nmessage( \"##############################################################\" )\nmessage( \"#                                                            #\" )\nmessage( \"#  Copyright 2013-2024, Corvusoft Ltd, All Rights Reserved.  #\" )\nmessage( \"#                                                            #\" )\nmessage( \"#  Restbed is dual-licensed requiring commerical entities    #\" )\nmessage( \"#  to acquire a Corvusoft Permissive License, Contact        #\" )\nmessage( \"#  sales@corvusoft.co.uk for details.                        #\" )\nmessage( \"#                                                            #\" )\nmessage( \"##############################################################\" )\nmessage( \"                                                              \" )\n\n#\n# Build Options\n#\noption( BUILD_TESTS \"Build unit tests.\" ON )\noption( BUILD_SSL \"Build secure socket layer support.\" ON )\noption( BUILD_IPC \"Build unix domain socket layer support.\" OFF )\noption( BUILD_STATIC_LIBRARY \"Build static library\" ON )\noption( BUILD_SHARED_LIBRARY \"Build shared library\" ON )\noption( BUILD_DEVEL_PACKAGE \"Build development package (including C++ header files)\" ON )\n\n#\n# Configuration\n#\nset( CMAKE_CXX_STANDARD 14 )\nset( INCLUDE_DIR \"${PROJECT_SOURCE_DIR}/source\" )\nset( SOURCE_DIR  \"${PROJECT_SOURCE_DIR}/source/corvusoft/${PROJECT_NAME}\" )\n\nif ( NOT DEFINED CMAKE_INSTALL_LIBDIR )\n    set( CMAKE_INSTALL_LIBDIR \"library\")\nendif ( )\n\nif ( CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT )\n    set( CMAKE_INSTALL_PREFIX \"${PROJECT_SOURCE_DIR}/distribution\" CACHE PATH \"Install path prefix\" FORCE )\nendif ( )\n\nif( ${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC )\n    set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /D_WIN32_WINNT=0x0A00 /W4 /wd4068 /wd4702 /wd4996 /wd4265\" )\nendif ( )\n\nif( NOT WIN32 )\n    set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Weffc++ -pedantic -Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-non-virtual-dtor\" )\nendif ( )\n\nif ( UNIX AND NOT APPLE )\n    set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -pthread\" )\nendif ( )\n\nif ( APPLE )\n    set( CMAKE_MACOSX_RPATH ON )\nendif ( )\n\nset( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${PROJECT_SOURCE_DIR}/cmake\" )\n\nfind_package( asio REQUIRED )\n\nif ( BUILD_SSL )\n    add_definitions( \"-DBUILD_SSL\" )\n    find_package( openssl REQUIRED )\nendif ( )\n\nif ( BUILD_IPC )\n    add_definitions( \"-DBUILD_IPC\" )\nendif ( )\n\nif ( WIN32 )\n\tadd_definitions( -DWIN_DLL_EXPORT )\nendif ( )\n\n#\n# Build\n#\nfile( GLOB_RECURSE MANIFEST \"${SOURCE_DIR}/*.cpp\" )\n\nif ( BUILD_STATIC_LIBRARY )\n    set( STATIC_LIBRARY_NAME \"${PROJECT_NAME}-static\" )\n    add_library( ${STATIC_LIBRARY_NAME} STATIC ${MANIFEST} )\n    set_property( TARGET ${STATIC_LIBRARY_NAME} PROPERTY CXX_STANDARD 14 )\n    set_property( TARGET ${STATIC_LIBRARY_NAME} PROPERTY CXX_STANDARD_REQUIRED ON )\n    set_target_properties( ${STATIC_LIBRARY_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} )\n\n    target_include_directories(${STATIC_LIBRARY_NAME} SYSTEM PUBLIC ${asio_INCLUDE} ${ssl_INCLUDE} ${INCLUDE_DIR})\n\n    if ( BUILD_SSL )\n        target_link_libraries( ${STATIC_LIBRARY_NAME} LINK_PRIVATE ${ssl_LIBRARY_STATIC} ${crypto_LIBRARY_STATIC} ${CMAKE_DL_LIBS} )\n    else ( )\n        target_link_libraries( ${STATIC_LIBRARY_NAME} ${CMAKE_DL_LIBS} )\n    endif ( )\nendif ( )\n\nif ( BUILD_SHARED_LIBRARY )\n    set( SHARED_LIBRARY_NAME \"${PROJECT_NAME}-shared\" )\n    add_library( ${SHARED_LIBRARY_NAME} SHARED ${MANIFEST} )\n    set_property( TARGET ${SHARED_LIBRARY_NAME} PROPERTY CXX_STANDARD 14 )\n    set_property( TARGET ${SHARED_LIBRARY_NAME} PROPERTY CXX_STANDARD_REQUIRED ON )\n    if ( WIN32 )\n        # Workaround to avoid name clash of static lib and dynamic import lib under windows.\n        set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES OUTPUT_NAME \"${PROJECT_NAME}-shared\" )\n    else ( )\n        set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} )\n    endif ( )\n    set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR} VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR} )\n\n    target_include_directories(${SHARED_LIBRARY_NAME} SYSTEM PUBLIC ${asio_INCLUDE} ${ssl_INCLUDE} ${INCLUDE_DIR})\n\n    if ( BUILD_SSL )\n        target_link_libraries( ${SHARED_LIBRARY_NAME} LINK_PRIVATE ${ssl_LIBRARY_SHARED} ${crypto_LIBRARY_SHARED} )\n    else ( )\n        target_link_libraries( ${SHARED_LIBRARY_NAME} )\n    endif ( )\nendif ( )\n\nif ( BUILD_TESTS )\n    find_package( catch REQUIRED )\n\n    enable_testing( )\n    add_subdirectory( \"${PROJECT_SOURCE_DIR}/test/unit\" )\n    add_subdirectory( \"${PROJECT_SOURCE_DIR}/test/feature\" )\n    add_subdirectory( \"${PROJECT_SOURCE_DIR}/test/regression\" )\n    add_subdirectory( \"${PROJECT_SOURCE_DIR}/test/integration\" )\nendif ( )\n\n#\n# Install\n#\nif ( BUILD_DEVEL_PACKAGE )\n    file( GLOB ARTIFACTS \"${SOURCE_DIR}/*.hpp\" )\n    install( FILES \"${INCLUDE_DIR}/${PROJECT_NAME}\" DESTINATION \"${CMAKE_INSTALL_PREFIX}/include\" )\n    install( FILES ${ARTIFACTS} DESTINATION \"${CMAKE_INSTALL_PREFIX}/include/corvusoft/${PROJECT_NAME}\" )\nendif ( )\n\nif ( BUILD_STATIC_LIBRARY )\n    install( TARGETS ${STATIC_LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library )\nendif ( )\n\nif ( BUILD_SHARED_LIBRARY )\n    install( TARGETS ${SHARED_LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library )\nendif ( )\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4755859375,
          "content": "        Copyright 2013-2020 Corvusoft Limited, United Kingdom.\n                     All rights reserved.\n\n Everyone is permitted to copy and distribute verbatim copies of this\n license document, but changing it is not allowed.\n\n\n This work is part of Corvusoft's Restbed Framework (the \"Software\").\n\n You may at your option receive a license to the Software under either \n the terms of the GNU Affero General Public License (AGPL) or the\n Corvusoft Permissive License (CPL), as explained in the note below.\n\n The Software may be used under the terms of the GNU Affero General Public\n License version 3 or (at your option) any later version as published by \n the Free Software Foundation and appearing in the file LICENSE.AGPL \n included in the packaging of the Software.\n\n The Software is provided AS IS WITHOUT WARRANTY OF ANY KIND; without even\n the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n See the GNU Affero General Public License for more details.\n\n **NOTE:**\n\n Using the AGPL requires that your work based on the Software must be \n licensed under the AGPL. If you wish to develop a work based on the\n Software but desire to license it under your own terms, e.g. a closed source\n license, you MUST purchase a Corvusoft Permissive License.\n\n Purchasing the CPL, gives you -- under certain conditions -- the rights\n appearing in the file LICENSE.CPL included in the packaging of the Software.\n\n For full terms and conditions of the CPL, please contact sales@corvusoft.co.uk.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.208984375,
          "content": "Restbed [![Build Status](https://ci.appveyor.com/api/projects/status/naho4wmrxd47vko8/branch/master?svg=true)](https://ci.appveyor.com/project/Corvusoft/restbed/branch/master)\n=============================================================================================================================\n\n---\n\nRestbed is a comprehensive and consistent programming model for building applications that require seamless and secure communication over HTTP, with the ability to model a range of business processes, designed to target mobile, tablet, desktop and embedded production environments.\n\n> It's akin to embedding NGINX into your companies own product line. -- Solutions Architect, Bellrock Technology\n\nFeatures\n--------\n\n| Feature                                                                                                                                                                                                       | Description                                                                                                                                                                                                                                                                                          |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [WebSockets](https://github.com/Corvusoft/restbed/blob/master/documentation/example/WEB_SOCKET.md)                                                                                                          | Full-duplex communication channels over a single TCP connection.                                                                                                                                                                                                                                     |\n| [Server-Sent Events](https://github.com/Corvusoft/restbed/blob/master/documentation/example/SERVER_SIDE_EVENTS.md)                                                                                          | Server-Sent Events enables efficient server-to-client streaming of text-based event data—e.g., real-time notifications or updates generated on the server.                                                                                                                                           |\n| [Comet](https://github.com/Corvusoft/restbed/blob/master/documentation/example/HTTP_PERSISTENT_CONNECTION.md)                                                                                                    | Long polling model to allow long-held HTTP requests for pushing data from the server to client.                                                                                                                                                                                                      |\n| [SSL/TLS](https://github.com/Corvusoft/restbed/blob/master/documentation/example/HTTPS_SERVICE.md)                                                                                                          | Secure over the wire communication allowing you to transmit private data online.                                                                                                                                                                                                                     |\n| [Session Management](https://github.com/Corvusoft/restbed/blob/master/documentation/example/SESSION_MANAGER.md)                                                                                             | Create custom HTTP session persistence and management logic.                                                                                                                                                                                                                                         |\n| [HTTP Pipelining](https://github.com/Corvusoft/restbed/blob/master/documentation/example/HTTP_PIPELINING.md)                                                                                                | A technique allowing multiple HTTP requests to be sent on a single TCP connection without waiting for the corresponding responses.                                                                                                                                                                   |\n| [Path Parameters](https://github.com/Corvusoft/restbed/blob/master/documentation/example/PATH_PARAMETERS.md)                                                                                                | Annotate URIs with custom path parameters such as resource keys, revisions, etc...                                                                                                                                                                                                                   |\n| Query Parameters                                                                                                                                                                                              | Automated query parameter parsing.                                                                                                                                                                                                                                                                   |\n| [Header Filters](https://github.com/Corvusoft/restbed/blob/master/documentation/example/RESOURCE_FILTERING.md)                                                                                              | Filter incoming HTTP requests by headers.                                                                                                                                                                                                                                                            |\n| [Logging](https://github.com/Corvusoft/restbed/blob/master/documentation/example/LOGGING.md)                                                                                                                | Customise how and where log entries are created.                                                                                                                                                                                                                                                     |\n| [Multi-Path Resources](https://github.com/Corvusoft/restbed/blob/master/documentation/example/MULTIPATH_RESOURCES.md)                                                                            | Give a resource multiple paths for improved readability.                                                                                                                                                                                                                                             |\n| [Customisable Methods](https://github.com/Corvusoft/restbed/blob/master/documentation/example/CUSTOM_HTTP_METHOD.md)                                                                                            | Add your own custom HTTP methods.                                                                                                                                                                                                                                                                    |\n| [Compression](https://github.com/Corvusoft/restbed/blob/master/documentation/example/COMPRESSION.md)                                                                                                        | Adaptability to address any form of compression GZip, Deflate, etc...                                                                                                                                                                                                                                |\n| Encoding                                                                                                                                                                                                      | Adaptability to address any form of encoding UTF-32, ASCII, etc...                                                                                                                                                                                                                                   |\n| [Rules Engine](https://github.com/Corvusoft/restbed/blob/master/documentation/example/RULES_ENGINE.md)                                                                                                      | Reduce complexity by processing incoming requests with readable units of code.                                                                                                                                                                                                                       |\n| [HTTP](https://github.com/Corvusoft/restbed/blob/master/documentation/example/HTTP_CLIENT.md)/[HTTPS](https://github.com/Corvusoft/restbed/blob/master/example/https_client/source/verify_none.cpp) | Built in client capabilities with optional SSL peer certificate verification. Deprecated                                                                                                                                                                                                                       |\n| IPv4/IPv6                                                                                                                                                                                                     | Internet Protocol Version 4/6 Network Support.                                                                                                                                                                                                                                                       |\n| Architecture                                                                                                                                                                                                  | Asynchronous [single](https://github.com/Corvusoft/restbed/blob/master/example/publishing_resources/source/example.cpp) or [multi-threaded](https://github.com/Corvusoft/restbed/blob/master/documentation/example/MULTITHREADED_SERVICE.md) architecture, capable of addressing the C10K problem. |\n| Converters                                                                                                                                                                                                    | Built-in Path, Query, and Header conversions for primary data-types.                                                                                                                                                                                                                                 |\n| [Authentication](https://github.com/Corvusoft/restbed/blob/master/documentation/example/DIGEST_AUTHENTICATION.md)                                                                                                  | Separate Service and/or Resource level authentication.                                                                                                                                                                                                                                               |\n| [Error Handling](https://github.com/Corvusoft/restbed/blob/master/documentation/example/ERROR_HANDLING.md)                                                                                                  | Separate Service and/or Resource level error handling.                                                                                                                                                                                                                                               |\n| [Address Binding](https://github.com/Corvusoft/restbed/blob/master/documentation/example/ADDRESS_BINDING.md)                                                                                           | Bind HTTP and/or HTTPS services to separate IP addresses.                                                                                                                                                                                                                                            |\n| [Signal Handling](https://github.com/Corvusoft/restbed/blob/master/documentation/example/SIGNAL_HANDLING.md)                                                                                                | Capture OS generated process signals.                                                                                                                                                                                                                                                                |\n| [Documentation](https://github.com/Corvusoft/restbed/tree/master/documentation)                                                                                                                               | High-quality documentation covering the architecture and API.                                                                                                                                                                                                                                        |\n| Compliance                                                                                                                                                                                                    | Flexibility to address HTTP 1.0/1.1+ compliance.                                                                                                                                                                                                                                                     |\n| Mature                                                                                                                                                                                                        | Secure, Stable, and extensively tested since 2013.                                                                                                                                                                                                                                                   |\n| Community                                                                                                                                                                                                     | Active, vibrant and energetic open source community.                                                                                                                                                                                                                                                 |\n| Support                                                                                                                                                                                                       | Commercial support is available from [Corvusoft](http://www.corvusoft.co.uk).                                                                                                                                                                                                                        |\n\nExample\n-------\n\n```C++\n#include <memory>\n#include <cstdlib>\n#include <restbed>\n\nusing namespace std;\nusing namespace restbed;\n\nvoid post_method_handler( const shared_ptr< Session > session )\n{\n    const auto request = session->get_request( );\n\n    int content_length = request->get_header( \"Content-Length\", 0 );\n\n    session->fetch( content_length, [ ]( const shared_ptr< Session > session, const Bytes & body )\n    {\n        fprintf( stdout, \"%.*s\\n\", ( int ) body.size( ), body.data( ) );\n        session->close( OK, \"Hello, World!\", { { \"Content-Length\", \"13\" } } );\n    } );\n}\n\nint main( const int, const char** )\n{\n    auto resource = make_shared< Resource >( );\n    resource->set_path( \"/resource\" );\n    resource->set_method_handler( \"POST\", post_method_handler );\n\n    auto settings = make_shared< Settings >( );\n    settings->set_port( 1984 );\n    settings->set_default_header( \"Connection\", \"close\" );\n\n    Service service;\n    service.publish( resource );\n    service.start( settings );\n\n    return EXIT_SUCCESS;\n}\n```\n\nMore in-depth examples can be found [here](https://github.com/Corvusoft/restbed/tree/master/documentation/example). To see Restbed used in anger, please visit Corvusoft's [RestQ](https://github.com/corvusoft/restq) project.\n\nLicense\n-------\n\n&copy; 2013-2020 Corvusoft Limited, United Kingdom. All rights reserved.\n\nThe Restbed framework is dual licensed; See [LICENSE](LICENSE) for full details.\n\nSupport\n-------\n\nPlease contact sales@corvusoft.co.uk, for support and licensing options including bespoke software development, testing, design consultation, training, mentoring and code review.\n\nPlease submit all enhancements, proposals, and defects via the [issue](http://github.com/corvusoft/restbed/issues) tracker; Alternatively ask a question on [StackOverflow](http://stackoverflow.com/questions/ask) tagged [#restbed](http://stackoverflow.com/questions/tagged/restbed).\n\nBuild\n-----\n\n```bash\ngit clone --recursive https://github.com/corvusoft/restbed.git\nmkdir restbed/build\ncd restbed/build\ncmake [-DBUILD_SSL=NO] [-DBUILD_TESTS=NO] ..\nmake install\nmake test\n```\n\nYou will now find all required components installed in the distribution sub-folder.\n\nBuild Options\n-------------\n\n| Option               | Description                                | Default  |\n| :------------------- | :----------------------------------------- | :------: |\n| BUILD_SSL            | Enable SSL/TLS support.                    | Enabled  |\n| BUILD_IPC            | Enable Unix domain sockets.                | Disabled |\n| BUILD_TESTS          | Build project test suites.                 | Enabled  |\n| BUILD_DEVEL_PACKAGE  | Install headers into CMAKE_INSTALL_PREFIX. | Enabled  |\n| BUILD_SHARED_LIBRARY | Produce a shared build of restbed.         | Enabled  |\n| BUILD_STATIC_LIBRARY | Produce a static build of restbed.         | Enabled  |\n\nWindows Build Instructions\n--------------------------\n\nPrerequisites: Visual Studio 2022, CMake, GIT, Perl.\n\nUsing the x64 Native Tools Command Prompt begin by, if required, building OpenSSL.\n```cmd\ngit clone --recursive https://github.com/corvusoft/restbed.git\n\ncd restbed\\dependency\\openssl\nperl Configure [no-]shared\nnmake\nnmake test\n```\n\nIf you selected to use the default OpenSSL build (shared), you'll need to include the installation path in your environment.\n\n```cmd\nset PATH=restbed\\dependency\\openssl;%PATH%\n```\n\nIf you selected to use the static OpenSSL build (no-shared), you'll need to include additional dependencies when linking your application code; See [OpenSSL project](https://github.com/openssl/openssl/pull/1062/files) for futher details.\n\n```cmd\ntarget_link_libraries( my_microservice restbed-static.lib ws2_32.lib advapi32.lib crypt32.lib gdi32.lib user32.lib )\n```\n\nNow proceed with the following Restbed build instructions.\n\n```cmd\nmkdir restbed\\build\ncd restbed\\build\ncmake -G \"Visual Studio 17 2022\" [-DBUILD_SSL=NO] [-DBUILD_TESTS=NO] ..\ncmake --build . --target ALL_BUILD --config Release\nctest\n```\n\nFor Microsoft Visual Studio 14 2015 instructions, and further details, please see feature [#17](https://github.com/Corvusoft/restbed/issues/17).\n\nBuilding Restbed - Using vcpkg\n------------------------------\n\nYou can download and install restbed using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n``` shell\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.sh\n./vcpkg integrate install\n./vcpkg install restbed\n```\n\nThe restbed port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n\nDocumentation\n-------------\n\nThis codebase is intended to be as self documenting as possible. We have supplied many [examples](https://github.com/Corvusoft/restbed/tree/master/documentation/example) and [test suites](https://github.com/corvusoft/restbed/tree/master/test) to help aid developers.\n\nYou can locate the latest design and API documentation [here](https://github.com/Corvusoft/restbed/tree/master/documentation).\n\nMinimum Requirements\n--------------------\n\n| Resource | Requirement                                     |\n|:--------:|:-----------------------------------------------:|\n| Compiler |            C++14 compliant or above             |\n|    OS    | BSD, Linux, Mac OSX, Windows, Raspbian          |\n\nRoad Map\n--------\n\n| Milestone                                                                           | Feature                                 | Status      |\n|:-----------------------------------------------------------------------------------:|:---------------------------------------:|:-----------:|\n|                                         0.0                                         |        Asynchronous HTTP Service        |  complete   |\n|                                         1.0                                         |           HTTP 1.0 Compliance           |  complete   |\n|                                         2.0                                         |           HTTP 1.1 Compliance           |  complete   |\n|                                         2.5                                         |           Secure Socket Layer           |  complete   |\n|                                         2.5                                         | Simultaneous Network Ports (HTTP/HTTPS) |  complete   |\n|                                         3.0                                         |              Rules Engine               |  complete   |\n| [3.5](https://github.com/Corvusoft/restbed/issues?utf8=%E2%9C%93&q=milestone%3A3.5) |   Schedule Tasks on Service run-loop    |  complete   |\n| [3.5](https://github.com/Corvusoft/restbed/issues?utf8=%E2%9C%93&q=milestone%3A3.5) |    Multi-Threaded service capability    |  complete   |\n| [3.5](https://github.com/Corvusoft/restbed/issues?utf8=%E2%9C%93&q=milestone%3A3.5) |    Bind Service to specific Address     |  complete   |\n| [3.5](https://github.com/Corvusoft/restbed/issues?utf8=%E2%9C%93&q=milestone%3A3.5) |           Session Management            |  complete   |\n|             [4.0](https://github.com/Corvusoft/restbed/milestones/4.0)              |               HTTP Client               |  complete   |\n|             [4.0](https://github.com/Corvusoft/restbed/milestones/4.0)              |             Signal Handling             |  complete   |\n|             [4.5](https://github.com/Corvusoft/restbed/milestones/4.5)              |            API Documentation            |  complete   |\n|             [4.5](https://github.com/Corvusoft/restbed/milestones/4.5)              |               Web Sockets               |  complete   |\n|             [5.0](https://github.com/Corvusoft/restbed/milestones/5.0)              |      Client-side SSL certificates       | development |\n|             [5.0](https://github.com/Corvusoft/restbed/milestones/5.0)              |            Resource Caching             | development |\n|             [5.0](https://github.com/Corvusoft/restbed/milestones/5.0)              |          Runtime Modifications          | development |\n|             [5.0](https://github.com/Corvusoft/restbed/milestones/5.0)              |            HTTP 2 compliance            | development |\n|             [5.0](https://github.com/Corvusoft/restbed/milestones/5.0)              |         Refactor, Reduce, Reuse         |   active    |\n\nContact\n-------\n\n| Method                                      | Description                                 |\n|:--------------------------------------------|:--------------------------------------------|\n| [Twitter](http://www.twitter.com/corvusoft) | Tweet us your questions & feature requests. |\n| support@corvusoft.co.uk                     | Support related queries.                    |\n| sales@corvusoft.co.uk                       | Sale related queries.                       |\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.515625,
          "content": "version: 4.8.0/{branch}-{build}\nimage:\n- Visual Studio 2022\n- Ubuntu\n- macOS\nconfiguration: Release\nplatform: Any CPU\n\ninit:\n- cmd: '\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_x64'\ninstall:\n- git submodule update --init --recursive\n- mkdir build\n- cd build\nbuild_script:\n- sh: >-\n    cmake ..\n\n    make\n- cmd: >-\n    cmake -G \"Visual Studio 17 2022\" -DBUILD_SSL=NO -DBUILD_TESTS=YES ..\n\n    cmake --build . --target ALL_BUILD --config Release\ntest_script:\n- ctest\ndeploy: off\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependency",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "legal",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}