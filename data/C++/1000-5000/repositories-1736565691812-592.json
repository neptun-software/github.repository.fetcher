{
  "metadata": {
    "timestamp": 1736565691812,
    "page": 592,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "contour-terminal/contour",
      "stars": 2509,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.080078125,
          "content": "---\nBasedOnStyle: Microsoft\nAccessModifierOffset: '-2'\nAlignAfterOpenBracket: Align\nAlignConsecutiveMacros: 'true'\nAlignConsecutiveDeclarations: 'false'\nAlignEscapedNewlines: Left\nAlignOperands: 'true'\nAlignTrailingComments: 'true'\nAllowAllArgumentsOnNextLine: 'true'\nAllowAllConstructorInitializersOnNextLine: 'true'\nAllowAllParametersOfDeclarationOnNextLine: 'true'\nAllowShortBlocksOnASingleLine: 'false'\nAllowShortCaseLabelsOnASingleLine: 'true'\nAllowShortFunctionsOnASingleLine: InlineOnly\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: Inline\nAllowShortLoopsOnASingleLine: 'false'\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: 'false'\nAlwaysBreakTemplateDeclarations: 'Yes'\nBinPackArguments: 'false'\nBinPackParameters: 'false'\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: 'true'\nBreakConstructorInitializers: AfterColon\nBreakInheritanceList: AfterColon\nBreakStringLiterals: 'true'\nColumnLimit: '110'\nCompactNamespaces: 'false'\nConstructorInitializerAllOnOneLineOrOnePerLine: 'true'\nConstructorInitializerIndentWidth: '4'\nContinuationIndentWidth: '4'\nCpp11BracedListStyle: 'false'\nDerivePointerAlignment: 'false'\nFixNamespaceComments: 'true'\nIncludeBlocks: Regroup\nIndentCaseLabels: true\nIndentPPDirectives: BeforeHash\nIndentWidth: '4'\nIndentWrappedFunctionNames: 'false'\nLanguage: Cpp\nMaxEmptyLinesToKeep: '1'\nNamespaceIndentation: Inner\nPenaltyBreakAssignment: '0'\nPointerAlignment: Left\nReflowComments: 'true'\nSortIncludes: 'true'\nSortUsingDeclarations: 'true'\nSpaceAfterCStyleCast: 'true'\nSpaceAfterLogicalNot: 'false'\nSpaceAfterTemplateKeyword: 'true'\nSpaceBeforeAssignmentOperators: 'true'\nSpaceBeforeCpp11BracedList: 'true'\nSpaceBeforeCtorInitializerColon: 'false'\nSpaceBeforeInheritanceColon: 'false'\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: 'false'\nSpaceInEmptyParentheses: 'false'\nSpacesInAngles: 'false'\nSpacesInCStyleCastParentheses: 'false'\nSpacesInContainerLiterals: 'false'\nSpacesInParentheses: 'false'\nSpacesInSquareBrackets: 'false'\nStandard: Cpp11\nTabWidth: '4'\nUseTab: Never\nIncludeCategories:\n  - Regex:     '^<(contour)/'\n    Priority:  0\n  - Regex:     '^<(vtbackend)/'\n    Priority:  1\n  - Regex:     '^<(vtparser)/'\n    Priority:  2\n  - Regex:     '^<(vtpty)/'\n    Priority:  3\n  - Regex:     '^<(vtrasterizer)/'\n    Priority:  4\n  - Regex:     '^<(text_shaper)/'\n    Priority:  5\n  - Regex:     '^<(crispy)/'\n    Priority:  6\n  - Regex:     '^<(libunicode)/'\n    Priority:  40\n  - Regex:     '^<(fmt)/'\n    Priority:  42\n  - Regex:     '^<(yaml-cpp)/'\n    Priority:  44\n  - Regex:     '^<(range)/'\n    Priority:  46\n  - Regex:     '^<gsl/'\n    Priority:  48\n  - Regex:     '^<fontconfig/'\n    Priority:  52\n  - Regex:     '^<harfbuzz/'\n    Priority:  53\n  - Regex:     '^<(QtCore|QtGui|QtDBus|QtWidgets|QtQml|QtQuick|QtNetwork|QtMultimedia)/'\n    Priority:  64\n  - Regex:     '^<catch2/'\n    Priority:  70\n  - Regex:     '^<sys/'\n    Priority:  80\n  - Regex:     '^<[[:alnum:]_]+>'\n    Priority:  81\n  - Regex:     '<[[:alnum:]_]+\\.h>'\n    Priority:  82\n  - Regex:     '.*'\n    Priority:  99\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.404296875,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n\n  status:\n    project: yes\n    patch: yes\n    changes: no\n\n  ignore:\n    - src/vtbackend/*_test.cpp\n    - 3rdparty/*\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"header, diff\"\n  behavior: default\n  require_changes: no\n"
        },
        {
          "name": ".ecrc",
          "type": "blob",
          "size": 0.373046875,
          "content": "{\n  \"Verbose\": false,\n  \"Debug\": false,\n  \"IgnoreDefaults\": false,\n  \"SpacesAftertabs\": false,\n  \"NoColor\": false,\n  \"Exclude\": [\"docs.*\"],\n  \"AllowedContentTypes\": [],\n  \"PassedFiles\": [],\n  \"Disable\": {\n    \"EndOfLine\": false,\n    \"Indentation\": false,\n    \"IndentSize\": true,\n    \"InsertFinalNewline\": false,\n    \"TrimTrailingWhitespace\": false,\n    \"MaxLineLength\": false\n  }\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2265625,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\n\n[*.md]\nindent_size = 2\n\n[*.xml]\nindent_size = 2\n\n[.github/**/*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9853515625,
          "content": "# Visual Studio Code\n.vscode\n.vscode/**\n_deps\n_deps/**\n[bB]uild\n[bB]uild/**\n[rR]elease\n[rR]elease/**\n[tT]arget\n\n# Visual Studio\n.vs\n.vs/**\nout\nout/**\nCMakeSettings.json\nvcpkg_installed/**\n\n# VIM: code completion / IntelliSense\n.clangd\n.clangd/**\n.cache\n.cache/**\ncompile_commands.json\n.vimspector.json\n\n# CMake (CTest)\n/Testing/\nCMakeUserPresets.json\n\n# This is a workspace-local sandbox directory with test files not to be included in Git.\nsandbox\nsandbox/**\n\n# Never add any log files.\n*.log\n\n# Never accidentally add any screenshot files.\n*.vt\n\n# NVIDIA Nsight Graphics (Debugger, project files)\n*.nsight-gfxproj\n\n# OS X\n.DS_Store\n\n# Linux/KDE\n.directory\n\n# Python virtual environment\n.venv\n\n# debian: dpkg-buildpackage intermediates\ndebian/files\ndebian/tmp/**\ndebian/.debhelper/**\ndebian/contour.substvars\ndebian/contour/**\nconfigure-stamp\nbuild-stamp\ninstall-stamp\n\nsrc/contour/ui/RequestPermission.qml\nsrc/contour/ui/Terminal.qml\nsrc/contour/ui/main.qml\n\n# mkdocs\ndocs/vt-sequence/index.md\n\nversion.txt\n"
        },
        {
          "name": ".spellcheck.yml",
          "type": "blob",
          "size": 0.4052734375,
          "content": "matrix:\n- name: Markdown\n  aspell:\n    lang: en\n  dictionary:\n    encoding: utf-8\n  pipeline:\n  - pyspelling.filters.markdown:\n  - pyspelling.filters.html:\n      comments: false\n      ignores:\n      - code\n      - pre\n  sources:\n  - '**/*.md'\n  wordlists:\n  - .wordlist.txt\n  default_encoding: utf-8\n- name: cpp\n  sources:\n  - '**/*.{cpp,hpp,c,h}'\n  pipeline:\n  - pyspelling.filters.cpp:\n      line_comments: false\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.7744140625,
          "content": "cmake_minimum_required(VERSION 3.16 FATAL_ERROR)\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\n\ninclude(Version)\nGetVersionInformation(CONTOUR_VERSION CONTOUR_VERSION_STRING)\nfile(WRITE \"${CMAKE_BINARY_DIR}/version.txt\" \"${CONTOUR_VERSION_STRING}\")\nproject(contour VERSION \"${CONTOUR_VERSION}\" LANGUAGES CXX)\n\n# setting defaults\nif (NOT(CMAKE_CXX_STANDARD))\n    set(CMAKE_CXX_STANDARD 20)\nendif()\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\nset(CMAKE_COLOR_DIAGNOSTICS ON)\n\nset(QT_VERSION_DEFAULT  \"6\")\n\nif(NOT CONTOUR_QT_VERSION)\n    set(CONTOUR_QT_VERSION \"${QT_VERSION_DEFAULT}\")\nendif()\n\nif((CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\") OR (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\"))\n    set(CMAKE_CXX_FLAGS_DEBUG \"-Og -g\")\nendif()\n\ninclude(EnableCcache)\ninclude(ClangTidy)\n\nif(NOT WIN32 AND NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    set(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING \"Choose the build mode.\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\nendif()\n\nfind_package(Threads)\n\nif(DEFINED MSVC)\n    add_definitions(-D_USE_MATH_DEFINES)\n    add_definitions(-DNOMINMAX)\n    add_compile_options(/utf-8)\n    add_compile_options(/nologo)\nendif()\n\nif (CONTOUR_BUILD_WITH_MIMALLOC)\n    add_definitions(-DCONTOUR_BUILD_WITH_MIMALLOC)\nendif()\n\n# Enables STL container checker if not building a release.\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n    add_definitions(-D_GLIBCXX_ASSERTIONS)\nendif()\n\nfind_program(ADDR2LINE NAMES addr2line llvm-addr2line)\nset(ADDR2LINE_DEFAULT OFF)\nif(NOT(\"${ADDR2LINE}\" STREQUAL \"\"))\n    set(ADDR2LINE_DEFAULT ON)\nendif()\nmessage(STATUS \"addr2line: ${ADDR2LINE}\")\n\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n    set(MAINTAINER_MODE ON)\nelse()\n    set(MAINTAINER_MODE OFF)\nendif()\n\noption(CONTOUR_TESTING \"Enables building of unittests for libterminal [default: ${MAINTAINER_MODE}]\" ${MAINTAINER_MODE})\noption(CONTOUR_FRONTEND_GUI \"Enables GUI frontend.\" ON)\noption(CONTOUR_COVERAGE \"Builds with codecov [default: OFF]\" OFF)\noption(CONTOUR_SANITIZE \"Builds with Address sanitizer enabled [default: OFF]\" \"OFF\")\noption(CONTOUR_STACKTRACE_ADDR2LINE \"Uses addr2line to pretty-print SEGV stacktrace.\" ${ADDR2LINE_DEFAULT})\noption(CONTOUR_BUILD_WITH_MIMALLOC \"Builds with mimalloc [default: OFF]\" OFF)\noption(CONTOUR_INSTALL_TOOLS \"Installs tools, if built [default: OFF]\" OFF)\noption(CONTOUR_PACKAGE_TERMINFO \"Package terminfo files\" ON)\noption(CONTOUR_WITH_UTEMPTER \"Build with utempter support [default: ON]\" ON)\noption(CONTOUR_USE_CPM \"Use CPM to fetch dependencies [default: OFF]\" OFF)\noption(CONTOUR_BUILD_STATIC \"Link to static libraries [default: OFF]\" OFF)\n\n\nif(CONTOUR_BUILD_STATIC)\n    set(BUILD_SHARED_LIBS OFF)\n    set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n    set(CMAKE_LINK_SEARCH_END_STATIC ON)\n    set(CMAKE_EXE_LINKER_FLAGS \"-static-libgcc -static-libstdc++\")\nendif()\n\nif(NOT WIN32 AND NOT CONTOUR_SANITIZE AND NOT CMAKE_CONFIGURATION_TYPES)\n    set(CONTOUR_SANITIZE \"OFF\" CACHE STRING \"Choose the sanitizer mode.\" FORCE)\n    set_property(CACHE CONTOUR_SANITIZE PROPERTY STRINGS OFF address thread)\nendif()\n\n# ----------------------------------------------------------------------------\n# code coverage\n\nif(CONTOUR_COVERAGE AND NOT MSVC)\n    add_compile_options(-g --coverage)\n    set(CMAKE_EXE_LINKER_FLAGS \"--coverage ${CMAKE_EXE_LINKER_FLAGS}\")\n    set(CONTOUR_CODE_COVERAGE_ENABLED ON)\nelse()\n    set(CONTOUR_CODE_COVERAGE_ENABLED OFF)\nendif()\n\nif(NOT(CONTOUR_SANITIZE STREQUAL \"OFF\"))\n    message(STATUS \"Enabling ${san} sanitizer.\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer -fsanitize=address -fsanitize-address-use-after-scope\")\nelse()\n    message(STATUS \"No sanitizer enabled.\")\nendif()\n\nif(CONTOUR_TESTING)\n    enable_testing()\nendif()\n# ----------------------------------------------------------------------------\n\nif(CONTOUR_USE_CPM)\n    # download CPM.cmake\n    file(\n        DOWNLOAD\n        https://github.com/cpm-cmake/CPM.cmake/releases/download/v0.38.3/CPM.cmake\n        ${CMAKE_CURRENT_BINARY_DIR}/cmake/CPM.cmake\n        EXPECTED_HASH SHA256=cc155ce02e7945e7b8967ddfaff0b050e958a723ef7aad3766d368940cb15494\n    )\n    include(${CMAKE_CURRENT_BINARY_DIR}/cmake/CPM.cmake)\nendif()\n\n\ninclude(ContourThirdParties)\nadd_subdirectory(src)\nadd_subdirectory(examples)\n\n# ----------------------------------------------------------------------------\n# Summary\n\nif(\"${CCACHE}\" STREQUAL \"\")\n    set(USING_CCACHE_STRING \"OFF\")\nelse()\n    set(USING_CCACHE_STRING \"${CCACHE}\")\nendif()\n\nif(\"${CMAKE_CXX_CLANG_TIDY}\" STREQUAL \"\")\n    set(USING_TIDY_STRING \"OFF\")\nelse()\n    set(USING_TIDY_STRING \"ON (${CMAKE_CXX_CLANG_TIDY})\")\nendif()\n\nif(CONTOUR_FRONTEND_GUI)\n    find_package(Qt${CONTOUR_QT_VERSION} COMPONENTS Core QUIET)\n    if (NOT Qt${CONTOUR_QT_VERSION}_FOUND)\n        set(QT_VERSION ${Qt5_VERSION})\n    else()\n        set(QT_VERSION ${Qt6_VERSION})\n    endif()\nendif()\n\nadd_custom_target(package-verbose\n    COMMAND ${CMAKE_CPACK_COMMAND} --config CPackConfig.cmake --verbose\n    COMMENT \"Build package with verbose output\"\n    VERBATIM\n    USES_TERMINAL\n)\n\nmacro(ContourConfigurationSummary)\n    message(STATUS \"==============================================================================\")\n    message(STATUS \"    Contour (${CONTOUR_VERSION_STRING})\")\n    message(STATUS \"------------------------------------------------------------------------------\")\n    message(STATUS \"System:                                             ${CMAKE_SYSTEM_PROCESSOR} (${CMAKE_SYSTEM_NAME})\")\n    message(STATUS \"Build type:                                         ${CMAKE_BUILD_TYPE}\")\n    message(STATUS \"C++ standard:                                       C++${CMAKE_CXX_STANDARD} (${CMAKE_CXX_COMPILER_ID})\")\n    message(STATUS \"Using ccache:                                       ${USING_CCACHE_STRING}\")\n    message(STATUS \"Build with sanitizer:                               ${CONTOUR_SANITIZE}\")\n    message(STATUS \"Build unit tests:                                   ${CONTOUR_TESTING}\")\n    message(STATUS \"Enable with code coverage:                          ${CONTOUR_CODE_COVERAGE_ENABLED}\")\n    message(STATUS \"Build contour frontend GUI:                         ${CONTOUR_FRONTEND_GUI}\")\n    if(CONTOUR_FRONTEND_GUI)\n        message(STATUS \"Build contour using Qt:                             ${CONTOUR_QT_VERSION} (${QT_VERSION})\")\n    endif()\n    message(STATUS \"Build contour using mimalloc:                       ${CONTOUR_BUILD_WITH_MIMALLOC}\")\n    message(STATUS \"Clang Tidy:                                         ${USING_TIDY_STRING}\")\n    message(STATUS \"|> Enable performance metrics:                      ${CONTOUR_PERF_STATS}\")\n    message(STATUS \"------------------------------------------------------------------------------\")\nendmacro()\n\nContourThirdPartiesSummary2()\nContourConfigurationSummary()\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 0.25390625,
          "content": "{\n    \"version\": 6,\n    \"cmakeMinimumRequired\": {\n        \"major\": 3,\n        \"minor\": 27,\n        \"patch\": 0\n    },\n    \"include\": [\n        \"cmake/presets/os-linux.json\",\n        \"cmake/presets/os-windows.json\",\n        \"cmake/presets/os-macos.json\"\n    ]\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.361328125,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at christian@parpart.family.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.0556640625,
          "content": "# Contour - a modern & actually fast Terminal Emulator\n[![CI Build](https://github.com/contour-terminal/contour/actions/workflows/build.yml/badge.svg)](https://github.com/contour-terminal/contour/actions/workflows/build.yml)\n[![codecov](https://codecov.io/gh/contour-terminal/contour/branch/master/graph/badge.svg)](https://codecov.io/gh/contour-terminal/contour)\n[![C++20](https://img.shields.io/badge/standard-C%2B%2B%2020-blue.svg?logo=C%2B%2B)](https://isocpp.org/)\n[![Discord](https://img.shields.io/discord/479301317337284608.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/ncv4pG9)\n[![Twitch Live Stream](https://img.shields.io/badge/Twitch-Live%20Stream-blue?style=flat-square)](https://twitch.tv/christianparpart)\n<img alt=\"open collective badge\" src=\"https://opencollective.com/contour-terminal-emulator/tiers/backer/badge.svg?label=backer&color=brightgreen\" />\n\n![screenshot showcasing notcurses ncneofetch on KDE/Fedora](docs/screenshots/contour-notcurses-ncneofetch.png \"Screenshot\")\n\n`contour` is a modern and actually fast, modal, virtual terminal emulator,\nfor everyday use. It is aiming for power users with a modern feature mindset.\n\n## Features\n\n- ✅ Available on all major platforms, Linux, macOS, FreeBSD, OpenBSD, Windows.\n- ✅ GPU-accelerated rendering.\n- ✅ Font ligatures support (such as in Fira Code).\n- ✅ Unicode: Emoji support (-: 🌈 💝 😛 👪 - including ZWJ, VS15, VS16 emoji :-)\n- ✅ Unicode: Grapheme cluster support\n- ✅ Terminal tabs\n- ✅ Bold and italic fonts\n- ✅ High-DPI support.\n- ✅ Vertical Line Markers (quickly jump to markers in your history!)\n- ✅ Vi-like input modes for improved selection and copy'n'paste experience and Vi-like `scrolloff` feature.\n- ✅ Blurred behind transparent background support for Windows 10 and above as well as the KDE and GNOME desktop environment on Linux.\n- ✅ Blurrable Background image support.\n- ✅ Runtime configuration reload\n- ✅ 256-color and Truecolor support\n- ✅ Key binding customization\n- ✅ Color Schemes\n- ✅ Profiles (grouped customization of: color scheme, login shell, and related behaviours)\n- ✅ [Synchronized rendering](https://contour-terminal.org/vt-extensions/synchronized-output/) (via `SM ? 2026` / `RM ? 2026`)\n- ✅ Text reflow (configurable via `SM ? 2028` / `RM ? 2028`)\n- ✅ Clickable hyperlinks via [OSC 8](https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n- ✅ Clipboard setting via OSC 52\n- ✅ Sixel inline images\n- ✅ Terminal page [buffer capture VT extension](https://contour-terminal.org/vt-extensions/buffer-capture/) to quickly extract contents.\n- ✅ Builtin [Fira Code inspired progress bar](https://github.com/contour-terminal/contour/issues/521) support.\n- ✅ Read-only mode, protecting against accidental user-input to the running application, such as <kbd>Ctrl</kbd>+<kbd>C</kbd>.\n- ✅ VT320 Host-programmable and Indicator status line support.\n- ✅ and much more ...\n\n## Installation\n\n`contour` is packaged and available for installation on multiple distributions:\n - `Fedora` use official [package](https://packages.fedoraproject.org/pkgs/contour-terminal/contour-terminal/)\n - `Arch` use official [package](https://archlinux.org/packages/extra/x86_64/contour/)\n - `Void` use official [package](https://github.com/void-linux/void-packages/tree/master/srcpkgs/contour)\n - `openSUSE` use official [package](https://build.opensuse.org/package/show/X11:terminals/contour-terminal)\n\nAdditional packages can be found on the release [page](https://github.com/contour-terminal/contour/releases) including:\n - ubuntu package\n - AppImage\n - static build\n - MacOS bundle\n - Windows installer and zipped app\n\n\n### Installing via Flatpak\n\n#### Install from Flathub\n\nClick the following button to install Contour from the Flathub store.\n\n[![Get it on Flathub](https://raw.githubusercontent.com/flatpak-design-team/flathub-mockups/master/assets/download-button/download.svg?sanitize=true)](https://flathub.org/apps/details/org.contourterminal.Contour)\n\n\n#### Prerequisites\n\n- Make sure you have flatpak installed in your system ([here is a tutorial on how to install it](https://flatpak.org/getting.html)), and make sure that the version is >= 0.10 (check it using this command: `flatpak --version`)\n- Add the [flathub](https://flathub.org) repository using the following command: `flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo`.\n- Proceed with one of the following options:\n  - [Install from Flathub](#install-from-flathub)\n  - [Install from GitHub release](https://github.com/contour-terminal/contour/releases)\n\n## Requirements\n\n- **operating system**: A *recent* operating system (macOS, Windows 10+, an up-to-date Linux, FreeBSD or OpenBSD)\n- **GPU**: driver must support at least OpenGL 3.3 hardware accelerated or as software rasterizer.\n- **CPU**: x86-64 AMD or Intel with AES-NI instruction set or ARMv8 with crypto extensions.\n\n## Configuration\n\nIn order to configure Contour, it is necessary to modify the configuration file\n`contour.yml`, which is initially generated in the `$HOME/.config/contour`\ndirectory. Some features also require shell integration. These can be generated\nvia the CLI (see below), these currently exist for zsh, fish and tcsh.\n\n## Installing from source\n\nContour is best installed from supported package managers, but you can build\nfrom source by following the instructions below. You can use Qt 5 or Qt 6,\nby default contour will be compiled with Qt 6, to change Qt version use\n`QTVER=5 ./scripts/install-deps.sh` to fetch dependencies and cmake flag\n`-D CONTOUR_QT_VERSION=5`.\n\n### UNIX-like systems (Linux, FreeBSD, OpenBSD, macOS)\n\n#### Prerequisites\n\n```sh\n./scripts/install-deps.sh\n```\n\nThis script *might* ask you for the administrator password if a package dependency\ncan be insalled via the system package manager.\n\n#### Compile\n\nYou can use cmake presets to compile contour. The full list of available presets can be seen using `cmake --list-presets`. To compile release build for linux or MacOs use `linux-release` or `macos-release` accordingly. FreeBSD and OpenBSD users can use `linux-release` or configure cmake manually.\n\n```sh\ncmake --preset linux-release\ncmake --build --preset linux-release\n\n# Optionally, if you want to install from source\ncmake --build --preset linux-release --target install\n```\n\n#### Windows 10 or newer\n\n#### Prerequisites\n\nFor Windows, you must have Windows 10, 2018 Fall Creators Update, and Visual Studio 2019, installed.\nIt will neither build nor run on any prior Windows OS, due to libterminal making use of [ConPTY API](https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/).\n\n1. Set up [vcpkg](https://vcpkg.io/en/getting-started.html), preferably somewhere high up in the folder hierarchy, and add the folder to your `PATH`.\n\n```\ncd C:\\\ngit clone https://github.com/Microsoft/vcpkg.git\n.\\vcpkg\\bootstrap-vcpkg.bat\n```\n\n2. Install Visual Studio Build Tools (make sure to select the CLI tools for\n   C++, which you might need to do in the separate components tab).\n3. Install Qt6 (i.e. to C:\\Qt)\n4. Open the _developer_ version of Powershell.\n5. In the `contour` source folder execute `.\\scripts\\install-deps.ps1`. This step may take a _very_ long time.\n\n\n#### Compile\n\nIn the _developer_ version of Powershell:\n\n```psh\n# change paths accordingly if you installed QT and vcpkg to somewhere else\ncmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake -DCMAKE_PREFIX_PATH=C:\\Qt\\6.5.0\\msvc2019_64\\lib\\cmake\ncmake --build build/\n\n# Optionally, if you want to install from source\ncmake --build build/ --target install\n```\n\n#### Distribution Packages\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/contour-terminal.svg)](https://repology.org/project/contour-terminal/versions)\n\n## CLI - Command Line Interface\n\n```txt\n  Usage:\n\n    contour [terminal] [config FILE] [profile NAME] [debug TAGS] [live-config] [dump-state-at-exit PATH]\n                       [early-exit-threshold UINT] [working-directory DIRECTORY] [class WM_CLASS]\n                       [platform PLATFORM[:OPTIONS]] [session SESSION_ID] [PROGRAM ARGS...]\n    contour font-locator [config FILE] [profile NAME] [debug TAGS]\n    contour info vt\n    contour help\n    contour version\n    contour license\n    contour parser-table\n    contour list-debug-tags\n    contour generate terminfo to FILE\n    contour generate config to FILE\n    contour generate integration shell SHELL to FILE\n    contour capture [logical] [words] [timeout SECONDS] [lines COUNT] to FILE\n    contour set profile [to NAME]\n\n```\n\n# References\n\n* [VT510](https://vt100.net/docs/vt510-rm/): VT510 Manual, see Chapter 5.\n* [ECMA-35](http://www.ecma-international.org/publications-and-standards/standards/ecma-35):\n    Character Code Structure and Extension Techniques\n* [ECMA-43](http://www.ecma-international.org/publications-and-standards/standards/ecma-43):\n    8-bit Coded Character Set Structure and Rules\n* [ECMA-48](http://www.ecma-international.org/publications-and-standards/standards/ecma-48):\n    Control Functions for Coded Character Sets\n* [ISO/IEC 8613-6](https://www.iso.org/standard/22943.html):\n    Character content architectures\n* [xterm](https://invisible-island.net/xterm/ctlseqs/ctlseqs.html): xterm control sequences\n* [console\\_codes](http://man.he.net/man4/console_codes) Linux console codes\n* [Summary of ANSI standards for ASCII terminals](http://www.inwap.com/pdp10/ansicode.txt)\n* [Text Terminal HOWTO (Chapter 7.2, PTY)](http://tldp.org/HOWTO/Text-Terminal-HOWTO-7.html#ss7.2)\n* [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) in Wikipedia\n\n### License\n\n```\nContour - A modern C++ Terminal Emulator\n-------------------------------------------\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.833984375,
          "content": "# Security Policy\n\n## Supported Versions\n\nContour is a young project and under active development. Thus, only the latest master build and\nthe latest `0.x.*` at least version `0.2.0` are supported.\nWe highly recommend using the latest stable release builds.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| master  | :white_check_mark: |\n| 0.2.x   | :white_check_mark: |\n| < 0.2.0 | :x:                |\n\n## Reporting a Vulnerability\n\nIf you have found a vulnerability, please either directly contact us at Discord\nor go to our Github Issues page at https://github.com/contour-terminal/contour/\nand create a ticket with the necessary details.\n\nWe are aware that this project is by far not perfect. Reporting bugs as well as\nvunerabilities helps us creating a great product for all of us.\n\nMany thanks for taking part in the community.\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 9.947265625,
          "content": "- [x] box drawing (e.g. helping fira code to not look shit w/ p10k zsh prompts): https://github.com/s417-lama/terminal-glyph-patcher#preset-glyphs\n- [ ] dump creation should create (overwrite) symlink to always point to the latest dump (`.../dump/latest` -> `.../dump/TIMESTAMP`)\n- [ ] reduce font cache key capacity. `notcurses-demo u` generates 10 atlases just for glyphs. That's too much and makes it slow. what makes it slow exactly?\n- [ ] enusre LRU rolling works on the atlas-side, too\n- [ ] [FEATURE;PERF] Do not evict ASCII (32..127?) from cache! Aka. have a speed-optimization code path for ASCII in glyph image caching.\n\n- [x] get screenshot before exit working\n- [ ] CI: notcureses test for each scene\n- [ ] rolling local state dump dir? (configurable to last N=10 dumps)\n\n# TODO requirements before merge\n\n- [ ] line reflow seems to be broken on shrink \"sometimes\"?\n- [ ] ring: add negative and overflowing (r)iterator tests (should wrap around & succeed)\n- [ ] notify on dirty screen regions should become an area-test: `is (x,y) within ((x0,y0), (x1,y1))`\n- [x] frontend: scrolling up/down works as expected (currently overflowing and inverted)\n- [x] Terminal: Writing text, leading to page-scroll properly updates active selection.\n- [x] grid: revive logical line iterators, try to make them zero-copy\n- [x] Terminal: Writing text, leading to page-scroll properly updates scrollbar.\n\n# FIXMEs / CODEHALTH checklist\n\n- [ ] double-click line select on empty line selects everything to the right - should maybe not select anything?\n- [ ] SEGV handler should probably only use `backtrace_symbols_fd()`\n- [ ] code health (get compiler warnings branch merged, have it compile-time optional `CONTOUR_PEDANTIC=OFF/ON`\n- [ ] improve unit tests (InputGenerator)\n- [x] CHECK: profile change upon shortcut\n- [x] TEST: RenderBuffer ops testable (esp. 2026)?\n- [ ] BUG? wrt RenderBuffer: maybe problem with vte emoji asset test? (one emoji)\n- [ ] BUG? hidden scrollbar in alt screen causes render artifacts sometimes?\n- [ ] BUG? eval need of `Terminal::shouldRender` and friends\n- [ ] CHECK: CopyLastMarkRange seems to not copy last 2 lines instead (due to zsh double line prompt?) (- try with zsh single line prompts | - ensure unit tests for that)\n- [ ] RENDER-BUG: \"template...\" is segmented as \"template.\" and \"..\" but should be \"template...\" (or \"template\" and \"...\")\n- [ ] BUG? showNotification: not working (because not connected, not ported)\n- [ ] move scrollbar into profile\n- [ ] dotted underline could be prettier. Not as circles but as squares (because circles w/o AA look bad)\n- [ ] FIXME: `reset` resets screen size to 80x25, should remain actual one.\n- [ ] BUG/SECURITY: DCS without ST is problematic (what are other TEs doing?)\n- [ ] resizing font to HUGE and then moving back instantly (Ctrl+0) may cause SEGV b/c of word-wrap\n- [ ] fix '🇯🇵' when surrounded with text (roflmao)\n- [ ] contour-cli deb package (without terminal GUI)\n- [ ] config option to disable reflow entirely\n- [ ] `ls -l --color=yes /` with wrapping on a bg-colored file (vmlinuz...) will cause the rest of the line to be bg-colored, too. that's wrong. SGR should be empty.This problem only exists when not having resized yet.\n- [ ] vim's wrap mode with multiline text seems to have rendering issues.\n- [ ] debuglog: filter by logging tags (in a somewhat performant way), so the debuglog (when enabled) is not flooding.\n- [x] Font: support DirectWrite backend\n- [ ] Font: fix framed underline\n- [x] Font: hasColor should not determine whether a glyph is emoji or not\n- [x] logger: on win32 the function name is too verbose.\n- [ ] SGR underline not visible when inverse is set\n- [ ] Don't perform pressure-performance optimization when in alt-buffer\n- [ ] charset SCS/SS not well tested (i.e.: write unit tests)\n- [ ] walk through the source code and apply cleanups & coding style\n- [ ] cleanup config (and contour.yml) from dead options (logging?)\n- [ ] debug log must include software git sha (and version)\n\n```\n* and at start of debug-logging, dump initial state once.\n* log debug-logging start/end events to the debug log, too.\n```\n\n### U+26A0\n\nU+26A0 width = 1, why 1 and not 2? cursor offsetting glitch between contour and rest of world\nhttps://www.unicode.org/reports/tr11/tr11-36.html#Recommendations\nChapter 5 (Recommendations), last bullet point!\n\n- provide VT sequence to get/set unicode (width) conformance level (pre unicode 9, and unicode 9+)\n- see https://gitlab.freedesktop.org/terminal-wg/specifications/-/issues/9\n\n# Features\n\n- [ ] trigger config reload via VT sequence (as SIGUSR1 won't work on windows).  This function is behind permission gate and triggers a popup dialog when set to \"ask\".\n- [ ] move to profile: `word_delimiters`\n- [ ] move to profile: `scrollbar.*`\n- [ ] move to profile: `images.*`\n- [ ] `input_mapping` becomes default, `profiles.NAME.overrides.input_mapping` is used for overrides/additions\n- [ ] make sure `input_mapping` overrides can also remove mappings\n- [ ] move to ranges-v3 (eliminating some crispy helpers)\n- [ ] \"The impossible happened\" in TerminalWidget\n- [ ] contour: provide `--mono` (or alike) CLI flag to \"just\" provide a QOpenGLWindow for best performance,\n      lacking UI features as compromise.\n\n### Usability Improvements\n\n- ? Images: copy action should uxe U+FFFC (object replacement) on grid cells that contain an image for text-based clipboard action\n- ? Images: Selecting grid cells that contain an image should colorize/tint this cell.\n- don't `throw` but send notifications to `Terminal::warning(...)` and `Terminal::error(...)`;\n  These notifications can then be bubbles or overlay-text (or whatever) per terminal view.\n- mouse wheel: if configured action was executed, don't forward mouse action to terminal. example: alt+wheel in vim\n- I-beam cursor thickness configurable (in pt, properly scaling with DPI)\n- cursor box thicknes configurable (like I-beam)\n- fade screen cursor when window/view is not in focus\n- upon config reload, preserve currently active profile\n- curly underline default amplitude too small in smaler font? (not actually visible that it's curly)\n- hyperlink-opened files in new terminal should also preserve same profile\n- double/tripple click action should heppen on ButtonPress, not on ButtonRelease.\n- reset selection upon primary/alternate screen switch\n\n### QA: Refactoring:\n\n- move `string TerminalWindow::extractLastMarkRange()` into Screen and add tests\n- Refactor tests so that they could run automated against any terminal emulator,\n  which requires special DCS for requesting screen buffer and states.\n  Target could be a real terminal as well as a mocked version for headless testing libterminal.\n- terminal::Mode to have enum values being consecutively increasing;\n  then refactor Modes to make use of a bitset instead; vector<bool> or at least array<Mode>;\n- savedLines screen history should be paged for 2 reasons (performance & easy on-disk swapping)\n    - implement on-disk paging on top of that.\n- Make use of MagicEnums\n- Make use of the one ranges-v3\n- yaml-cpp: see if we can use system package instead of git submodule here\n- Functions: move C0 into it too (via FunctionCategory::Control)\n- have all schedule() calls that require a color to directly pass calculated color\n- flip OpenGL textures so that they're better introspectible in qrenderdoc\n- font fallback into a list of fonts, iterate instead of recurse until success or done\n\n### Quality of code improvements:\n\n- See if we can gracefully handle `GL_OUT_OF_MEMORY`\n- QA/TEST: Ensure os/x rendering is working (wrt. @AYNSTAYN)\n- QA/TEST: make decoration parameter configurable in contour.yml (incl. hot reload)\n- QA/APIDOC: Document as much as possible of the public API and potential algorithms\n- QA: unit test: InputGenerator: `char32_t` 0 .. 31 equals to A-Za-z (and the others) and modifiers=Ctrl\n- QA: unit test for verifying the new function handling properly processes `CSI s` vs `CSI Ps ; Ps s`\n- QA: Font ctor: if `FT_Select_Charmap` failed, we shouldn't throw? Happens to `pl_PL` users e.g.?\n- QA: error messages needs improvements so that I can relate them to source code locations\n- QA: CUB (Cursor Backward) into wide characters. what's the right behaviour?\n- QA: positioning the cursor into the middle/end of a wide column, flush left side on write.\n- QA: enable/disable Ligature by VT sequence (so only certain apps will / won't use it)\n- PERF: Use EBO in OpenGL to further reduce upload size, since grid is always fixed until screen resize.\n\n### VT conformance\n\n- CSI Pl ; Pc \" p (Set conformance level (DECSCL), VT220 and up.)\n\n### Features\n\n- Configuration: ability to disable ligatures globally (or enable selectively by unicode range?)\n- respect aspect ratio of colored (emoji) glyph (y-offset / bearing)?\n- normal-mode cursor (that can be used for selection, basic vim movements)\n- [Tab/Decoration styling](https://gitlab.gnome.org/GNOME/gnome-terminal/-/issues/142)\n- OSC 6: [Set/unset current working document WTF?](https://gitlab.freedesktop.org/terminal-wg/specifications/-/merge_requests/7)\n- OSC 777: OSC Growl\n- OSC 777: Windows Toast\n- decorator: CrossedOut (draw line at y = baseline + (hight - baseline) / 2, with std thickness again\n- curly line thickness should adapt to font size\n- Windows Font Matching (fontconfig equivalent?) - https://docs.microsoft.com/en-us/windows/win32/directwrite/custom-font-sets-win10\n- mouse shift-clicks\n- `DCS + q Pt ST` (Request Termcap/Terminfo String (XTGETTCAP), xterm.)\n- `DCS + p Pt ST` (Set Termcap/Terminfo Data (XTSETTCAP), xterm.)\n- create own terminfo file (ideally auto-generated from source code's knowledge)\n- INVESTIGATE: is VT color setting for CMY and CMYK supported by other VTEs (other than mintty?)? What apps use that?\n- \"Option-Click moves cursor\" from https://www.iterm2.com/documentation-preferences-pointer.html\n- TMUX control mode: https://github.com/tmux/tmux/wiki/Control-Mode\n- Rethink an easily adaptable keyboard input protocol (CSI based)\n  - should support any key with modifier information (ctrl,alt,meta,SHIFT)\n- Evaluate Shell Integration proposals from: http://per.bothner.com/blog/2019/shell-integration-proposal/\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 2.0517578125,
          "content": "#! /bin/sh\nset -ex\n\n# Minor helper to avoid repeating myself,\n# This shortcut allows you to simply invoke ../../autogen.sh when being\n# in directories like:\n#     ./target/{Debug,RelWithDebInfo,Release}\nif [ -e ../../autogen.sh ] && [ \"x$1\" == \"x\" ] &&\n   [ -x \"$(command -v realpath)\" ] &&\n   [ \"$(basename $(realpath ${PWD}/..))\" = \"target\" ]\nthen\n    exec ../../autogen.sh $(basename $(realpath ${PWD}))\nfi\n\nif [ -x \"$(command -v realpath)\" ]; then\n    ROOTDIR=\"$(realpath $(dirname $0))\"\nelse\n    ROOTDIR=\"$(dirname $0)\"\nfi\n\nCXX=${CXX=\"g++\"}\nCXX_NAME=$(basename $CXX)\n\nBUILD_TYPE=\"${1:-Debug}\"\nBUILD_DIR=\"${ROOTDIR}/target/$(uname -m)-$(uname -s)-${CXX_NAME}-${BUILD_TYPE}\"\n\nEXTRA_CMAKE_FLAGS=\"$EXTRA_CMAKE_FLAGS -DLIBUNICODE_UCD_BASE_DIR=$ROOTDIR/_ucd\"\n\nif test x$QTVER = x; then\n    QTVER=6\nfi\n\nif test v$QTVER = v6; then\n    EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DCONTOUR_QT_VERSION=6\"\nelse\n    EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DCONTOUR_QT_VERSION=5\"\nfi\n\ncase \"$OSTYPE\" in\n    darwin*)\n        if test v$QTVER = v6; then\n            EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DCMAKE_PREFIX_PATH=$(brew --prefix qt@6)\"\n            #EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DQt6_DIR=$(brew --prefix qt6)/lib/cmake/Qt6\"\n            #EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DQt6_DIR=$HOME/Qt/6.5.3/macos/lib/cmake/Qt6\"\n        else\n            EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DQt5_DIR=$(brew --prefix qt5)/lib/cmake/Qt5\"\n        fi\n        ;;\n    *)\n        ;;\nesac\n\n# if [ \"${BUILD_TYPE}\" != \"Debug\" ]; then\n#     EXTRA_CMAKE_FLAGS=\"${EXTRA_CMAKE_FLAGS} -DCMAKE_INSTALL_PREFIX=~/usr/opt/contour\"\n# fi\n\necho \"EXTRA_CMAKE_FLAGS: ${EXTRA_CMAKE_FLAGS}\"\n\nexec cmake \"${ROOTDIR}\" \\\n           -DCMAKE_BUILD_TYPE=\"${BUILD_TYPE}\" \\\n           -DCMAKE_CXX_COMPILER=\"${CXX}\" \\\n           -DLIBTERMINAL_BUILD_BENCH_HEADLESS=ON \\\n           -DPEDANTIC_COMPILER=ON \\\n           -DPEDANTIC_COMPILER_WERROR=ON \\\n           -DCMAKE_CXX_STANDARD=20 \\\n           -DCODE_SIGN_CERTIFICATE_ID=\"${CODE_SIGN_ID:-}\" \\\n           ${EXTRA_CMAKE_FLAGS} \\\n           -B \"${BUILD_DIR}\" \\\n           -GNinja\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "metainfo.xml",
          "type": "blob",
          "size": 63.373046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<component type=\"desktop\">\n  <id>org.contourterminal.Contour</id>\n  <metadata_license>CC0-1.0</metadata_license>\n  <project_license>Apache-2.0</project_license>\n  <content_rating type=\"oars-1.0\" />\n  <name>Contour Terminal Emulator</name>\n  <developer_name>Christian Parpart</developer_name>\n  <url type=\"homepage\">https://github.com/contour-terminal/contour/</url>\n  <url type=\"bugtracker\">https://github.com/contour-terminal/contour/issues</url>\n\n  <launchable type=\"desktop-id\">org.contourterminal.Contour.desktop</launchable>\n\n  <supports>\n    <control>pointing</control>\n    <control>keyboard</control>\n    <control>console</control>\n  </supports>\n\n  <provides>\n    <binary>contour</binary>\n    <mediatype>inode/directory</mediatype>\n  </provides>\n\n  <categories>\n    <category>System</category>\n  </categories>\n\n  <summary>\n    Contour is a modern and actually fast, modal, virtual terminal emulator, for everyday use\n  </summary>\n\n  <icon type=\"remote\" width=\"256\" height=\"256\">https://raw.githubusercontent.com/contour-terminal/contour/4f565357720915402aca5ca63ca1fa812ed4741f/src/contour/res/images/contour-logo.png</icon>\n\n  <description>\n    <p>\n      Contour is a modern and actually fast, modal, virtual terminal emulator,\n      for everyday use. It is aiming for power users with a modern feature mindset.\n    </p>\n    <ul>\n      <li>Available on all major platforms, Linux, macOS, FreeBSD, OpenBSD, Windows.</li>\n      <li>GPU-accelerated rendering.</li>\n      <li>Font ligatures support (such as in Fira Code).</li>\n      <li>Unicode: Emoji support (-: 🌈 💝 😛 👪 - including ZWJ, VS15, VS16 emoji :-)</li>\n      <li>Unicode: Grapheme cluster support</li>\n      <li>Bold and italic fonts</li>\n      <li>High-DPI support.</li>\n      <li>Vertical Line Markers (quickly jump to markers in your history!)</li>\n      <li>Vi-like input modes for improved selection and copy'n'paste experience and Vi-like scrolloff feature.</li>\n      <li>Blurred behind transparent background when using Windows 10 or KDE window manager on Linux.</li>\n      <li>Blurrable Background image support.</li>\n      <li>Runtime configuration reload</li>\n      <li>256-color and Truecolor support</li>\n      <li>Key binding customization</li>\n      <li>Color Schemes</li>\n      <li>Profiles (grouped customization of: color scheme, login shell, and related behaviours)</li>\n      <li>Synchronized rendering</li>\n      <li>Text reflow (configurable via SM ? 2028 / RM ? 2028)</li>\n      <li>Clickable hyperlinks via OSC 8</li>\n      <li>Clipboard setting via OSC 52</li>\n      <li>Sixel inline images</li>\n      <li>Terminal page buffer capture VT extension</li>\n      <li>Builtin Fira Code inspired progress bar support.</li>\n      <li>Read-only mode, protecting against accidental user-input to the running application, such as Ctrl+C.</li>\n      <li>VT320 Host-programmable and Indicator status line support.</li>\n      <li>Size indicator on resize.</li>\n      <li>and much more ...</li>\n    </ul>\n  </description>\n\n  <screenshots>\n    <screenshot type=\"default\">\n      <image>https://raw.githubusercontent.com/contour-terminal/contour/4f565357720915402aca5ca63ca1fa812ed4741f/docs/screenshots/contour-screenshots-0.1.0-pre2.png</image>\n      <caption>Contour Terminal emulator being used to show some of its features</caption>\n    </screenshot>\n    <screenshot type=\"default\">\n      <image>https://raw.githubusercontent.com/contour-terminal/contour/4f565357720915402aca5ca63ca1fa812ed4741f/docs/screenshots/contour-notcurses-ncneofetch.png</image>\n      <caption>Demonstrating (notcurses) neofetch tool on Fedora with a semi transparent image in the terminal</caption>\n    </screenshot>\n  </screenshots>\n\n  <keywords>\n    <keyword>CLI</keyword>\n    <keyword>administration</keyword>\n    <keyword>development</keyword>\n    <keyword>programming</keyword>\n    <keyword>shell</keyword>\n    <keyword>terminal</keyword>\n  </keywords>\n\n  <releases>\n\n    <!-- unreleased: TODO: Don't forget to add date attribute to it. -->\n    <!--\n\n    <release version=\"x.y.z\" urgency=\"medium\" type=\"development\">\n      <description>\n        <ul>\n          <li> ... </li>\n        </ul>\n      </description>\n    </release>\n\n    -->\n\n    <release version=\"0.6.2\" urgency=\"medium\" type=\"development\">\n      <description>\n        <ul>\n          <li>Fixes `CreateTab` to sometimes spawn more than one tab (#1695)</li>\n          <li>Ensure inserting new tabs happens right next to the currently active tab (#1695)</li>\n          <li>Adds `MoveTabToLeft` and `MoveTabToRight` actions to move tabs around (#1695)</li>\n          <li>Adds `MoveTabTo` action to move tabs to a specific position (#1695)</li>\n          <li>Adds handling of control codes for Ctrl+5|6|7|8 (#1701)</li>\n          <li>Adds CenterCursor (`zz`) vi motion</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.6.1\" urgency=\"medium\" date=\"2024-12-31\">\n      <description>\n        <ul>\n          <li>Do not abort when failing to create `XDG_STATE_HOME/contour/crash` directory</li>\n          <li>Fixes DECRQSS for SGR (#1696)</li>\n          <li>Fixes tab switch crash after resize</li>\n          <li>Fixes tab shrinking after tab creation/switches when a non-zero horizontal window margin is configured</li>\n          <li>Fixes startup crash when window is not yet fully initialized</li>\n          <li>Fixes backtab (Shift+Tab) handling (#1685)</li>\n          <li>Fixes various spelling typos across the codebase (#1688)</li>\n          <li>Improve tab close handling to better select previously focused tab</li>\n          <li>Change `colors` terminfo entry from 256 up to 32767 colors</li>\n          <li>Add action `SwitchToPreviousTab` to switch to the previously focused tab</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.6.0\" urgency=\"medium\" date=\"2024-12-26\">\n      <description>\n        <ul>\n          <li>Fixes search editor preservation bug on exit from search mode</li>\n          <li>Expose current profile's name through env var `CONTOUR_PROFILE` (#1637)</li>\n          <li>Add terminal tabs (#90)</li>\n          <li>Add `SaveScreenshot` and `CopyScreenshot` action (#210)</li>\n          <li>Protect user from accidentally pasting too large input (#1198)</li>\n          <li>Add binding to exit normal mode with `Esc` (#1604)</li>\n          <li>Add config option to switch into insert mode after yank (#1604)</li>\n          <li>Add vi-like normal mode Jumps. `''`, `C-O` and `C-I` motions (#1101)</li>\n          <li>Improves window size/resize handling on HiDPI monitor settings (#1628)</li>\n          <li>Improves macOS key handling for Option+Left|Right keys to jump between words in the shell</li>\n          <li>Fixes cropping of underscore character for some fonts (#1603)</li>\n          <li>Fixes DECFRA limits (#1664)</li>\n          <li>Fixes underline styles not being reset on switching to a new style (#1365)</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.5.1\" urgency=\"medium\" date=\"2024-09-30\">\n      <description>\n        <ul>\n          <li>Fixes vi-mode motions like `viW`, `yiW`, `oiW` as well as `B` and `W`</li>\n          <li>Fixes rendered backend loading from config</li>\n          <li>Fixes mouse wheel scrolling on High-DPI screens feeling too slow</li>\n          <li>Enable support for Unicode version 16.0.0 (#1606)</li>\n          <li>Port to C++20's `std::format()` (#1598)</li>\n          <li>Drop support for Ubuntu 23.10 and older. In order to have less burdain of maintencne, we only support the latest LTS of Ubuntu, which currently is 24.04 (#1607)</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.5.0\" urgency=\"medium\" date=\"2024-09-18\">\n      <description>\n        <ul>\n          <li>macOS package is now Apple Silicon native</li>\n          <li>Add CoreText font fallback implementation for macOS (#1533)</li>\n          <li>Add Ubuntu-24.04 in github actions (#1460)</li>\n          <li>Add 'early_exit_threshold' config option (#1460)</li>\n          <li>Add AppImage package with Qt6 support (#586)</li>\n          <li>Add ability to customize the indicator statusline through configuration (#687)</li>\n          <li>Add generation of config file from internal state (#1282)</li>\n          <li>Add SGRSAVE and SGRRESTORE VT sequences to save and restore SGR state (They intentionally conflict with XTPUSHSGR and XTPOPSGR)</li>\n          <li>Add extended word selection feature (#1023)</li>\n          <li>Add some more missing vi input motions, such as `y$`, `o$`, and many others as initiated by `y` and `o` (#1441)</li>\n          <li>Add CPM fallback for the dependencies</li>\n          <li>Add static build</li>\n          <li>Add shell integration for bash shell.</li>\n          <li>Add better bell sound (#1378)</li>\n          <li>Add config entry to configure behaviour on exit from search mode</li>\n          <li>Add config entry to configure font fallback (#225)</li>\n          <li>Add handling of different input commands (#629)</li>\n          <li>Add key bindings disabled indicator for status line (#783)</li>\n          <li>Add support for highlighting matches of the currently selected text area (beyond double click)</li>\n          <li>When switching to normal mode screen will stay in same position (#808)</li>\n          <li>Add customizable per-input-mode default text/background coloring for indicator statusline (#1528)</li>\n          <li>Add option PasteSelection to paste text as a shell input (#1549)</li>\n          <li>Add case-insensitive smart search (#1410)</li>\n          <li>Add OpenBSD support</li>\n          <li>Add new CLI command: `contour info config` to list missing entries from config file (#1125).</li>\n          <li>Add xdg-terminal-exec support (#1570).</li>\n          <li>Add predefined color palettes (monokai, gruvbox-light/dark, solarized-light/dark, papercolor-light/dark, one-light, one-dark) (#1285).</li>\n          <li>Update of contour.desktop file (#1423)</li>\n          <li>Changed configuration entry values for `font_locator` down to `native` and `mock` only (#1538).</li>\n          <li>Do not export the `TERM` environment variable on Windows OS (when using ConPTY).</li>\n          <li>Fixes line corruption after resize (#883)</li>\n          <li>Fixes resize of trivial line (#916)</li>\n          <li>Fixes copying of wrapped line</li>\n          <li>Fixes deletion of spaces on resize </li>\n          <li>Fixes forwarding of input while in normal mode (#1468)</li>\n          <li>Fixes OSC-8 link id collision (#1499)</li>\n          <li>Fixed overlap of glyphs for long codepoints (#1349)</li>\n          <li>Fixed too verbose info during ssh session login (#1447)</li>\n          <li>Fixes corruption of sixel image on high resolution (#1049)</li>\n          <li>Fixes bad wording of OS/X to macOS (#1462)</li>\n          <li>Fixes key bindings and search prompt collision (#1472)</li>\n          <li>Fixes `CSI 8 ; (COLS) ; (ROWS) t` to resize the terminal with respect to High-DPI</li>\n          <li>Fixes screen sampling with multiple monitors (#940)</li>\n          <li>Fixes bell sound in spawned window in same process (#1515)</li>\n          <li>Fixes status line crush (#1511)</li>\n          <li>Fixes application window icon on (KDE) Wayland</li>\n          <li>Fixes missing keymapping for numpad (#1325)</li>\n          <li>Improves handling of constant bell sound spawning</li>\n          <li>Fixes yW (yank WORD) not working properly in normal mode (#1448)</li>\n          <li>Fixes key mapping Shift+Tab (#1578)</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.4.3\" urgency=\"medium\" date=\"2024-02-04\">\n      <description>\n        <ul>\n          <li>Fixes dead lock bug on mouse selection.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.4.2\" urgency=\"medium\" date=\"2024-02-03\">\n      <description>\n        <ul>\n          <li>Fixes Windows alt/control key modifiers (#1408).</li>\n          <li>Fixes Windows built accidentally not including builtin-SSH support (#1427).</li>\n          <li>Fixes some text run segmentation problems, e.g., not making use of some programming ligatures (#395).</li>\n          <li>Fixes mouse scroll wheel events going into the wrong direction if `Alt` modifier was pressed at the same time (#394).</li>\n          <li>Fixes `scripts/install-deps.sh` for openSuSE (Tumbleweed) to install the correct dependencies.</li>\n          <li>Fixes missing dependencies for release .deb packages (#1397).</li>\n          <li>Fixes legacy keyboard input protocol not reporting non-Alt modifier (#1411).</li>\n          <li>Fixes thread safety issue on mouse move event handling (#1444).</li>\n          <li>Digitally sign MacOS release binaries using a valid Apple ID.</li>\n          <li>Add support for authenticating to SSH servers with a private key without a password and without requesting for one - also allow password retry (#1425).</li>\n          <li>Default history limit is now 1000 lines rather than 0 lines.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.4.1\" urgency=\"medium\" date=\"2023-12-31\">\n      <description>\n        <ul>\n          <li>Fixes fast scrolling when using trackpad (#1360)</li>\n          <li>Fixes variable fonts loading</li>\n          <li>Fixes Command modifier for input mappings, such as Command+C or Command+V on on MacOS (#1379).</li>\n          <li>Fixes CSIu encoding of shift modifier produced characters (#1373).</li>\n          <li>Fixes screen destruction on sibling cells when overwriting wide characters, such as Emoji, Kanji, etc.</li>\n          <li>Changes VT sequence `DECSCUSR` (`CSI ? 0 SP q` and `CSI ? SP q`) to reset to user-configured cursor style (#1377).</li>\n          <li>Remove `contour-latest` terminfo file. Please use `contour` terminfo instead.</li>\n          <li>Adds `Command` as modifier to input mappings on MacOS to work along with `Meta` for convenience reasons (#1379).</li>\n          <li>Adds config option `profiles.*.margins` to allow customizing the horizontal / vertical margins (#1384).</li>\n          <li>Adds config option for colorscheme `default.bright_foreground` and `default.dimmed_foreground` to configure bright and dimmed default foreground text respectively (#1383).</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.4.0\" urgency=\"medium\" date=\"2023-12-19\">\n      <description>\n        <ul>\n          <li>Fixes GUI terminating on idle input in some conditions.</li>\n          <li>Fixes search term rendering highlighting for search terms containing whitespaces (#966).</li>\n          <li>Fixes rendering in cases of glyphs with inverted orientation (#1115).</li>\n          <li>Fixes Emoji rendering being too small on macOS (#1215)</li>\n          <li>Fixes config option `show_title_bar` (#1153)</li>\n          <li>Fixes VT sequence DECSTBM and DECSLRM defaulting parameters (#1164).</li>\n          <li>Fixes VT sequence DECFRA (#1189).</li>\n          <li>Fixes VT sequence DECSCPP and DECCOLM (#1205).</li>\n          <li>Fixes VT sequence DECALN to properly reset margins when statusline is shown</li>\n          <li>Fixes VT sequence ED (CSI J) when statusline is shown.</li>\n          <li>Fixes VT sequence SM ?1003 (Any Event mouse tracking) not reporting mouse move events.</li>\n          <li>Fixes VT sequence XTWINOPS (`CSI 22 t` and `CSI 23 t`) to not assert and terminate the terminal but default to missing paramter `0` instead (#1369).</li>\n          <li>Fixes VT sequences CUU/CUD/CUF/CUB to better respect margins (#1201)</li>\n          <li>Fixes printing over 2nd cell of a wide character should delete wide character (#1268)</li>\n          <li>Fixes URI re-encoding of local files in `OSC 8` (#1199)</li>\n          <li>Fixes LCD subpixel rendering for overly wide US-ASCII glyphs (#1022)</li>\n          <li>Fixes alive process when GUI is closed</li>\n          <li>Fixes vi mode `f` action freeze on last line</li>\n          <li>Fixes AltGr handling on Windows (#150)</li>\n          <li>Fixes rarely happening bad access to GPU texture atlas (#1309)</li>\n          <li>Fixes terminal session not being terminated when the process terminated, but the PTY handle was still open (e.g. by other processes).</li>\n          <li>Fixes setting window class (`app_id`) on Wayland (#1336)</li>\n          <li>Fixes screen margins not being shared across primary and alt screen, as it should be.</li>\n          <li>Do not clear search term when entering search editor again.</li>\n          <li>Clear search term when switch to insert vi mode (#1135)</li>\n          <li>Delete dpi_scale entry in configuration (#1137)</li>\n          <li>Removes the ability to inline colorschemes within a configuration profile. Colorschemes must now always be referenced by their name.</li>\n          <li>Moves the vi-like cursor with the viewport when scrolling up/down.</li>\n          <li>Adds normal mode motion `Ctrl+e` and `Ctrl+y` to vertically move the viewport.</li>\n          <li>Adds the ability to chose a color scheme based on the operating systems's dark/light mode setting. This will change live whenever the OS's dark/light mode setting changes as well (#604).</li>\n          <li>Adds VT sequence DECSSCLS (change scroll speed) and properly handle DECSCLM (enable slow scrolling mode) (#1204)</li>\n          <li>Adds VT sequence parameter ?996 to DSR to request a report of current color scheme dark/light mode hint.</li>\n          <li>Adds VT sequence `SM ?2031` and `RM ?2031` to enable/disable unsolicited DSR for color scheme updates by the user or OS.</li>\n          <li>Adds support the extended `CSIu` keyboard protocol to better report key modifiers.</li>\n          <li>Adds extended keyboard protocol support (CSI u) to better report key modifiers.</li>\n          <li>Adds support vor horizontal mouse scrolling event reporting sequences.</li>\n          <li>Adds percentage value to Indicator Statusline to indicate scroll offset in scrollback buffer.</li>\n          <li>Adds inheritance of profiles in configuration file based on default profile (#1063).</li>\n          <li>Adds config option `profiles.*.bell` to adjust BEL behavior (#1348) and fixes (#1162) and (#1163).</li>\n          <li>Adds config option `profiles.*.frozen_dec_modes` to permanently enable/disable certain DEC modes.</li>\n          <li>Adds config option `profiles.*.option_as_meta` to allow remapping Option key to Alt on MacOS.</li>\n          <li>Adds config option `profiles.*.ssh` to allow connecting to an SSH server directly from Contour.</li>\n          <li>Adds capital `A` and `I` keys to switch from normal mode back to insert mode, too.</li>\n          <li>Adds size indicator window on resize (#1203).</li>\n          <li>Adds config entry `profile.*.size_indicator_on_resize` to control size indicator on resize and makes resize indicator small.</li>\n          <li>Adds OpenSelection action, and honor case in the configuration bindings</li>\n          <li>Adds open resource (URL, local file) feature also to vi mode.</li>\n          <li>Adds configurable window alerts on terminal bells.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.12\" urgency=\"medium\" date=\"2023-05-29\">\n      <description>\n        <ul>\n          <li>Fixes terminfo `tsl` to how todays apps are using it (e.g. zsh) to simply set the window title.</li>\n          <li>Fixes selecting a single character not working easily (#1066).</li>\n          <li>Fixes cycling between different selection modes (by speed-clicking) not properly working.</li>\n          <li>Fixes tcsh shell integration not working (#1074).</li>\n          <li>Fixes `[count]w` ignoring the `[count]` parameter in modal mode.</li>\n          <li>Fixes statusline being misplaced after resize when being in alt screen (#1091).</li>\n          <li>Fixes hyperlinks with IDs (#1088)</li>\n          <li>Fixes hyperlink highlight when screen has been scrolled (#1084)</li>\n          <li>Fixes cursor shape changes when entering vi-like normal mode or visual mode.</li>\n          <li>Improves mouse selection to be more natural extending into new grid cells.</li>\n          <li>Modal mode: Improves how `[m` jumps from the current prompt to the next prompt above it.</li>\n          <li>Adds `profiles.*.permissions.display_host_writable_statusline` to allow the user to intervene in `DECSSDT 2` VT sequence to show the host writable statusline.</li>\n          <li>Adds config entry `input_method_editor` colorscheme key to allow customization of the IME (input method editor) region (#1058).</li>\n          <li>Adds `gui.shader` log option for the output of shader configuration procedure (#715).</li>\n          <li>Adds config entry `profiles.*.status_line.position` to change statusline position to be either bottom (default) or top.</li>\n          <li>Adds config entry `profiles.*.status_line.sync_to_window_title` to synchronize the window title with the host writable statusline (if it was denied to be shown).</li>\n          <li>Linux: Adds support for writing to utmp/wtmp.</li>\n          <li>Extends `ViNormalMode` to toggle between insert and normal mode rather than just entering normal mode.</li>\n          <li>Modal mode: Adds Return key to also move the cursor down (like vim).</li>\n          <li>Model mode: Adds text object `im` and `am` to select the range between two line marks.</li>\n          <li>Model mode: Adds handling of `Home` and `End` keys (#1098).</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.11\" urgency=\"medium\" date=\"2023-03-01\">\n      <description>\n        <ul>\n          <li>Fixes normal mode motion `J` and `K` that got accidentally unimplemented and make it also available to visual mode.</li>\n          <li>Fixes use of config `bypass_mouse_protocol_modifier` that was ignored.</li>\n          <li>Fixes abnormal termination on incomplete foreground/background color-pair specification.</li>\n          <li>Fixes `SendChars` input acion to actually send the chars as-is to the standard input of the connected application.</li>\n          <li>Fixes mouse selection to only be initiated if actually meant to, i.e. in alt screen mode only if bypass-modifier was pressed (#1017).</li>\n          <li>Fixes mouse selection within scrolloff setting to not cause the viewport to jump anymore (#1019).</li>\n          <li>Fixes rendering sixel image when status line is active (#1050).</li>\n          <li>Adds normal mode motion `[[`, `]]`, `[]`, `][` mimmicking exactly what vim does.</li>\n          <li>Adds normal mode motion `[m` and `]m` to jump line marks up/down.</li>\n          <li>Adds normal mode motion `mm` to toggle the line mark at the current active cursor position.</li>\n          <li>Adds normal mode motion `t{char}`, `T{char}`, `f{char}`, `F{char}`, `;`, `,` to move cursor in line till before/after or to given `{char}`.</li>\n          <li>Adds config entry `vi_mode_highlight` to color palette to highlight current cursor's line when not in insert mode (aka. in Vi-mode).</li>\n          <li>Adds shell integration for fish shell.</li>\n          <li>Adds shell integration for tcsh shell.</li>\n          <li>Improve performance of parsing UTF-8 text on ARM64 platfroms through the use SIMD instructions.</li>\n          <li>Contour can now run on platforms not supporting hardware crypto extension for ARM64 nor AES-NI for x86-64. Hardware acceleration support can be configured to be included at compile time.</li>\n          <li>Fixes scroll up when infinte history limit is set</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.10\" urgency=\"medium\" date=\"2023-01-22\">\n      <description>\n        <ul>\n          <li>Fixes `initial_working_directory` setting being ignored (#946).</li>\n          <li>Fixes background image being accidentally inverted (Bug introduced in 0.3.3.204).</li>\n          <li>Fixes crash in some corner cases of too small fonts (#949).</li>\n          <li>Fixes linefeed not inheriting graphics attributes when scrolling up to create a new line (#945).</li>\n          <li>Fixes normal mode's motion `[count]|` that was off by one.</li>\n          <li>Fixes switching to normal mode sometimes placing the vi cursor wrong.</li>\n          <li>Fixes vi-like normal mode's word motions `w`, `e`, and `b` to better emulate vim's behaviour.</li>\n          <li>Fixes copying text to clipboard stripping TAB-character generated spaces (#982).</li>\n          <li>Fixes `BEL`'s audio feedback not working on some platform by streamlineing the behaviour with a custom bell sound.</li>\n          <li>Adds new config option `word_highlight_current` and `word_highlight_other` to better distinguish between double-click initiated word highlights and actual searches / selections.</li>\n          <li>Adds trace mode to single-step through each VT sequence. New actions: `TraceEnter`, `TraceLeave`, `TraceStep`, `TraceBreakAtEmptyQueue` and new mode flag `Trace`.</li>\n          <li>Adds implementation for `SO` and `SI` control codes.</li>\n          <li>Adds ability to explicitly disable a font feature by prefixing the feature with a `-`, such as `-calt`, explicitly enabling via `+` prefix was added as well.</li>\n          <li>Adds terminal capability `hs` and `es` to improve status-line feature detection via terminfo.</li>\n          <li>Adds normal mode motion: `B`, `B`, `E`.</li>\n          <li>Adds support for mouse in normal mode for selection and normal-mode's cursor placement.</li>\n          <li>Changes terminfo entries `tsl`, `fsl` and `dsl` to make use of the host-writable statusline.</li>\n          <li>Improvements to text objects in vi-like normal mode (`i)`, `a)`, `i>`, `a>`, `i]`, `a]`, `i}`, `a}`).</li>\n          <li>Improvements to vi-like normal mode: yank-motions (`yw`, `y$`, etc).</li>\n          <li>Improvements to vi-like normal mode: support nested matching pairs, such as `{`, `(` etc in text objects.</li>\n          <li>Improvements to vi-like normal mode: Add `%` motion to jump to matching symbol pairs.</li>\n          <li>Improvements to vi-like normal mode: Add `M` motion to jump to middle screen line (same column).</li>\n          <li>Improvements to vi-like normal mode: Add `P` to paste the clipboard with newlines stripped.</li>\n          <li>Improvements to vi-like normal mode: Add `SP` and `BS` to move left/right.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.9\" urgency=\"medium\" date=\"2022-12-24\">\n      <description>\n        <ul>\n          <li>Fixes statusline clock to show the correct local time.</li>\n          <li>Fixes running within OpenGL/ES context.</li>\n          <li>Fixes failing startup due to `background_image.path` pointing to a non-existing file (#928).</li>\n          <li>Fixes terminfo entries `Se`, and adds missing entries `Rmol`, `Sync` (#936).</li>\n          <li>Fixes rendering glitches (reverting PR #918 until a better solution has been found).</li>\n          <li>Fixes loading TTC (TrueType Collection) font files not honor which face to load within the collection (#939).</li>\n          <li>Adds config entry `mouse.hide_while_typing` to specify mouse behavior while typing whether hide it or not.</li>\n          <li>Adds config entry `indicator_statusline_inactive` colorscheme key to colorize the status line differently when the terminal is currently not in focus.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.8\" urgency=\"medium\" date=\"2022-12-18\">\n      <description>\n        <ul>\n          <li>Fixes restoring the cursor visibility after leaving alternate screen when application wasn't restoring mode switches in reverse order.</li>\n          <li>Fixes country flags rendering due to misleading grapheme cluster segmentation in corner cases.</li>\n          <li>Fixes mouse reporting in primary screen when viewport has been scrolled into the scrollback area.</li>\n          <li>Fixes VT sequence `DECSTR` (soft reset) to not move the cursor to home position.</li>\n          <li>Fixes cursor movements for the vi-like cursor (normal mode).</li>\n          <li>Fixes Alt+Backspace on macOS.</li>\n          <li>Fixes default config entry `profiles.*.draw_bold_text_with_bright_colors` (it was renamed from `profiles.*.bold_is_bright`). Please rename this in your existing configuration if not done yet.</li>\n          <li>Fixes sometimes rendering two cursors when statusline is shown.</li>\n          <li>Fixes normal mode's page top (S-H)/ page bottom (S-L) cursor movements to respect scroll offset.</li>\n          <li>Fixes VT sequences `RIS` and action `ClearHistoryAndReset` when statusline is shown.</li>\n          <li>Fixes cursor going beyond the terminal screnn in vim mode, move right motion (#917).</li>\n          <li>Fixes selection while statusline is shown. (#910)</li>\n          <li>Improves hard-reset (`RIS`) to restore initial statusline state.</li>\n          <li>Improves `$` motion in vi-like normal mode to point to the last non-empty grid cell in the current line instead of the right page margin.</li>\n          <li>Vi Mode search can handle line wrapping and searchText larger than line length (#869) (#870).</li>\n          <li>Adds ability to highlight same words on double click via `profile.*.highlight_word_and_matches_on_double_click`.</li>\n          <li>Adds color scheme key `indicator_statusline.foreground` and `indicator_statusline.background` to customize indicator statusline colors.</li>\n          <li>Adds clock to indicator status line.</li>\n          <li>Adds current viewport position in scrollback buffer to indicator status line.</li>\n          <li>Adds optional parameter `strip` to PasteClipboard configuration action to allow stripping newlines and normalizing whitespaces.</li>\n          <li>EXPERIMENTAL: Adds VT extension to enable passive mouse tracking via `CSI ? 2029 h` / `CSI ? 2029 l`. Passive mouse tracking enables the application to get notified on mouse events while still allowing mouse selection.</li>\n          <li>EXPERIMENTAL: Adds VT extension to enable text selection tracking via `CSI ? 2030 h` / `CSI ? 2030 l`.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.7\" urgency=\"medium\" date=\"2022-11-01\">\n      <description>\n        <ul>\n          <li>Fixes display of non-insert mode (vi-like) cursor on monochrome lines.</li>\n          <li>Fixes cursor movements on wide characters for the vi-like cursor.</li>\n          <li>Fixes TERM value resolving in Flatpak environment when not escaping the sandbox.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.6\" urgency=\"medium\" date=\"2022-10-30\">\n      <description>\n        <ul>\n          <li>Fixes ground-state infinite loop in corner case + refactor and tiny optimization.</li>\n          <li>Fixes assertion in optimized bulk text processing.</li>\n          <li>Fixes rare displacement of characters following a wide character (e.g. Emoji) in some cases.</li>\n          <li>Fixes IME (input method editor) background rendering for wide characters (e.g. Kanji).</li>\n          <li>Fixes `escape_sandbox` config option that wasn't set to `true` by default as documented.</li>\n          <li>Improve throughput performance for scroll-up when custom vertical margins are in effect.</li>\n          <li>Improve rendering performance slightly for so called trivial lines.</li>\n          <li>Adds menu entry to Dolphin file manager to open Contour at current working directory.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.5\" urgency=\"medium\" date=\"2022-10-21\">\n      <description>\n        <ul>\n          <li>Fixes a problem with oversized glyphs being wrongly cut off (#821).</li>\n          <li>Fixes Sixel handling of non-standard aspect ratio (#827).</li>\n          <li>Fixes Sixel mode, when updating the color palette with a new color, that color must also be used for subsequent paints.</li>\n          <li>Fixes vertical cursor movement for Sixel graphics with only newlines (#822).</li>\n          <li>Fixes Sixel rendering for images with aspect ratios other than 1:1.</li>\n          <li>Fixes Sixel rendering for images that show below but should be rendered above text (#831).</li>\n          <li>Fixes cursor highlight in VI mode</li>\n          <li>Removes `images.sixel_cursor_conformance` config option.</li>\n          <li>Adds VT sequence DECSCA, DECSEL, DECSED and DECSERA to support protected grid areas during erase operations (#29, #30, #31).</li>\n          <li>Improve Input Method (IME) handling, visualizing preedit-text.</li>\n          <li>Improve throughput performance of arbitrary complex Unicode.</li>\n          <li>Update Unicode data to version 15.0.0 (release). See Announcing The Unicode® Standard, Version 15.0.0.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.4\" urgency=\"medium\" date=\"2022-09-13\">\n      <description>\n        <ul>\n          <li>Fixes selection magically deselecting when indicator status line was shown and the top page line was selected.</li>\n          <li>Fixes interpretation of VT sequence DECSDM to disable Sixel auto-scrolling, if enabled.</li>\n          <li>Fixes visibility of the cursor in some situation when blending too much into the background color.</li>\n          <li>Fixes dim/faint coloring to not affect background and default text coloring when feint SGR attribute is set (#786).</li>\n          <li>Fixes SGR 9 (crossed out) and 53 (overline) to both look like underline.</li>\n          <li>Fixes size of drawn sixel image if no size is given beforehand (#809).</li>\n          <li>Fixes glyph rendering for some unexpectly oversized glyphs (#423).</li>\n          <li>Adds `line#24` to terminfo file for backwards compatibility.</li>\n          <li>Adds configuration key `live_config` to determine whether or not to reload running terminal instances on every config file change.</li>\n          <li>Adds DEC-mode 2027 for enabling/discovering Unicode support as per draft specification (Terminal Unicode Core).</li>\n          <li>Adds `CreateDebugDump` action to dump terminal state for debugging purposes.</li>\n          <li>[Flatpak] Adds configuration key `profiles.*.escape_sandbox` to decide whether or not to escape the sandbox.</li>\n          <li>[Packaging] Adding AppImage files to Github release page and CI artifacts and bump Ubuntu packages using Ubuntu 22.04 LTS</li>\n          <li>[Linux] Changes context menu icon for \"Run in Contour\" action to be the Contour logo.</li>\n          <li>Improve startup-time by not pre-rasterizing all printable US-ASCII codepoints at once.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.3.204\" date=\"2022-08-30\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Fixes a screen buffer manipulation bug that may happen on non-stylyzed but interactive command prompts (#787).</li>\n          <li>Fixes viewport misalignment when in scrollback area white new lines are being added to the main page area.</li>\n          <li>Fixes logging file toggle.</li>\n          <li>Adds VT sequence `CSI 5m` (blink) and `CSI 6m` (rapid blink).</li>\n          <li>Adds vim-like `scrolloff` feature to normal mode cursor movements to ensure a line padding when scrolling up/down.</li>\n          <li>Adds vim-like incremental search functionality with realtime highlighting and cycling through the matches.</li>\n          <li>Adds ability to initiate search via configuration action `SearchReverse` in input mappings.</li>\n          <li>Adds ability to cancel highlighted search terms via configuration action `NoSearchHighlight` in input mappings.</li>\n          <li>Adds input mapping mode `Search` to conditionally enable input mapping when a search term is present.</li>\n          <li>Adds support for HSL colorspace in Sixel images.</li>\n          <li>Adds configuration key `colorscheme.*.search_highlight` for coloring search matches.</li>\n          <li>Adds configuration key `colorscheme.*.search_highlight_focused` for coloring the active search match, containing the cursor.</li>\n          <li>Adds alpha value to `colorscheme.*.vi_mode_highlight` color configuration.</li>\n          <li>Adds VT sequence for ANSI mode NLM (NewLine Mode).</li>\n          <li>Always show indicator status line when ANSI mode KAM is enabled (which can be toggled via action `ToggleInputProtection`).</li>\n          <li>Always show indicator status line when in non-insert mode.</li>\n          <li>[Linux] Changes the .desktop file name and icon file name to conform to the flatpak recommendations.</li>\n          <li>[Linux] Provide an AppStream XML file.</li>\n          <li>[Linux] Drop KDE/KWin dependency on the binary by implementing enabling blur-behind background manually.</li>\n          <li>[Linux] Adds support for blur-behind window on GNOME shell.</li>\n          <li>[Flatpak] Also pass stdout-fastpipe (`3`) to shell.</li>\n          <li>[Flatpak] Do not set controlling terminal in order to allow TTY abilities like Ctrl+C. This seems to be a known bug in flatpak.</li>\n          <li>[Flatpak] Exposes TERMINFO environment variable pointing to a valid path containing the contour terminfo file.</li>\n          <li>Changes behavior of PTY (and shell process) creation until only when a PTY is required by the terminal emulator during instanciation, possibly avoiding problems with xdotool running too early.</li>\n          <li>Internal: Y-axis inverted to match GUI coordinate systems where (0, 0) is top left rather than bottom left.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.2.202\" date=\"2022-07-07\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Fixes writing to a non-empty line sometimes destroying the contents of that line (#702).</li>\n          <li>Fixes underline decoration for wide character cells.</li>\n          <li>Fixes SGR 8 (Conceal/Hidden) attribute doesn't work as expected (#699).</li>\n          <li>Fixes Synchronized Updates (`SM/RM ? 2026`) sometimes lagging behind in rendering.</li>\n          <li>Fixes SGR and text breakage when altering charsets via `ESC ( 0` VT sequence (#661).</li>\n          <li>Fixes SEGV when closing the terminal via GUI close button.</li>\n          <li>Fixes scrolling in alt-screen.</li>\n          <li>Fixes VT sequence for setting indexed color from palette.</li>\n          <li>Fixes some config false positives error messages.</li>\n          <li>Fixes command line arguments parser handling of `--` for switching to verbatim mode (#670).</li>\n          <li>Fixes rendering of U+E0B2  in pixel-perfect box drawing mode (#707).</li>\n          <li>Fixes rendering of cursor sometimes being almost invisible when foreground and background colors are similar/equal (#691).</li>\n          <li>Fixes line based selection sometimes not selecting the full line when wrapped over multiple lines.</li>\n          <li>Fixes warning message on terminal's console output when enabling blurred background images.</li>\n          <li>Fixes Win32 command output: Attaches to parent console if present, so typing `contour help` in a terminal actually shows something.</li>\n          <li>Changes `XTSMGRAPHICS` to match implementation of xterm *exactly* when querying sixel image limits, to be capped at terminal viewport dimensions (#656).</li>\n          <li>Changes CLI syntax for `contour parser-table` to `contour generate parser-table`.</li>\n          <li>Implements UTF-8 encoded mouse transport (`CSI ? 1005 h`)</li>\n          <li>Modal mode: Improved vi-like input modes.</li>\n          <li>Modal mode: Fixed the text cursor not being visible during selection.</li>\n          <li>Modal mode: Don't leak but actually support cursor keys up/down/left/right/page-up/page-down.</li>\n          <li>Modal mode: Added `vip`, `vap` (and `yip` / `yap`) motions.</li>\n          <li>Modal mode: Adds `^` motion.</li>\n          <li>Modal mode: When being in normal mode, pressing `a` also puts you back to insert mode.</li>\n          <li>Modal mode: Properly show cursor if it was hidden in insert mode and restore visibility &amp; shape when going back to insert mode.</li>\n          <li>Modal mode: Shift+K and Shift+J don't just move the cursor up/down but also move the terminal's viewport respectively (inspired by tmux).</li>\n          <li>Modal mode: Shift+H and Shift+L to move cursor to the current viewport's page top/bottom (inspired by tmux).</li>\n          <li>Modal mode: and more...</li>\n          <li>Adds new config option `profile.*.vi_mode_highlight_timeout` and `colorscheme.*.vi_mode_highlight` and adds cell highlighting on yank (#669).</li>\n          <li>Adds support for running on ARMv8 platform with crypto extensions (#611).</li>\n          <li>Adds back support OpenGL ES (3.1).</li>\n          <li>Adds E3 capability, so `clear` now defaults to clearing screen and scrollback (#693).</li>\n          <li>Adds specialized PTY implementation for Linux operating system utilizing OS-specific kernel APIs.</li>\n          <li>Adds basic support for Indicator status line and their VT sequences `DECSASD` and `DECSSDT`, and `DECRQSS` has been adapted (#687).</li>\n          <li>Adds configuration option `profiles.*.status_line.display` to be either `none` or `indicator` to reflect the initial state of the status line (more customizability of the Indicator status-line will come in future releases).</li>\n          <li>Adds new action `ToggleInputProtection` to protect terminal application against accidental input (#697).</li>\n          <li>Adds configuration options `logging.enabled` as well as `logging.file`.</li>\n          <li>Adds VT sequences `XTPUSHCOLORS`, `XTPOPCOLORS`, `XTREPORTCOLORS` (#714).</li>\n          <li>Adds CLI syntax `contour info vt` to print list of supported VT sequences (#730).</li>\n          <li>Adds VT sequence `DECPS` (#237).</li>\n          <li>Adds new config option `colorscheme.selection.foreground_alpha` and `colorscheme.selection.background_alpha` to enable somewhat more eye-candy visual looks on text selection.</li>\n          <li>Extends config option `colorscheme.selection.foreground` and `colorscheme.selection.background` to also accept `CellForeground` and `CellBackground` as value.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.1.200\" date=\"2022-05-01\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Adds Vi-like input modes for improved selection and copy'n'paste experience.</li>\n          <li>Adds contour executable to search path for spawned shell process on macOS and Windows.</li>\n          <li>Adds customizability to dim colors (#664).</li>\n          <li>Adds the profile configuration option: `draw_bold_text_with_bright_colors`.</li>\n          <li>Fixes `CSI K` accidentally removing line flags, e.g. line marks (#658).</li>\n          <li>Fixes wrong-spacing rendering bug on some lines.</li>\n          <li>Fixes assertion on font resize when a (Sixel) image is currently being rendered (#642).</li>\n          <li>Fixes assertion on too quick shell terminations (#647).</li>\n          <li>Fixes fallback shell execution on UNIX-like systems when the reuqested shell cannot be spawned (#647).</li>\n          <li>Fixes selection being wrongly rendered when viewport is scrolled (#641).</li>\n          <li>Fixes full-line selection not properly injecting linefeeds between the lines.</li>\n          <li>Changes behaviour of full-line selection to include a trailing linefeed for the last line (#641).</li>\n          <li>Changes behaviour of bold text to by rendered using normal colors by default (was forced to bright before, and is now configurable via `draw_bold_text_with_bright_colors`).</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.3.0.198\" date=\"2022-04-18\" urgency=\"medium\">\n      <description>\n        <p>\n          TLDR; Many thanks to all for the great support and feedback. This release\n          marks a huge milestone for me especially with regards to VT backend performance(!),\n          improved rendering architecture, and a more complete list of pixel perfect box drawings.\n        </p>\n\n        <ul>\n          <li>Fixes installation from `.deb` (missing terminfo dependency)</li>\n          <li>Fixes PTY write race condition.</li>\n          <li>Fixes VT sequence `DECFI`.</li>\n          <li>Fixes VT sequence `ICH` (#559).</li>\n          <li>Fixes VT sequence `OSC 4`'s response.</li>\n          <li>Fixes VT sequence `OESC 4` to also support setting color via `#RRGGBB`.</li>\n          <li>Fixes VT sequence extension: capture buffer (#493).</li>\n          <li>Fixes `DECRC` with respect to `DECSTBM` enabled and `DECOM` being inverted interpreted.</li>\n          <li>Fixes `XTGETTCAP` (#582).</li>\n          <li>Fixes `SU` in combination with `DECLRM` (#593).</li>\n          <li>Fixes an assertion in text renderer.</li>\n          <li>Fixes wrongly advertising DEC locator mode (it is not supported).</li>\n          <li>Improved VT backend performance (#342).</li>\n          <li>Improved text selection behaviour.</li>\n          <li>Improved detection of runtime DPI changes for KDE (Plasma) desktop environment.</li>\n          <li>Improves Window manipulation VT sequence for saving/restoring window title (`CSI 22 ; Ps t`, `CSI 23 ; Ps t`)</li>\n          <li>Adds pixel-perfect box-drawing for U+EE00 .. U+EE05 for progress bar glyphs as first introduced by Fira Code (#521).</li>\n          <li>Adds pixel-perfect box-drawing for U+E0B0, U+E0B2, U+E0BA (Triangle Powerline glyphs).</li>\n          <li>Adds preliminary implementation of `DA3` VT sequence.</li>\n          <li>Adds new configuration option `mouse_block_selection_modifier`.</li>\n          <li>Adds new configuration option `profiles.*.copy_last_mark_range_offset` (default `0`) to adjust where to start looking upwards for the `CopyPreviousMarkRange` action. This is useful for multi-line prompts.</li>\n          <li>Adds new configuration option `platform_plugin`.</li>\n          <li>Adds new configuration option `renderer.backend` for explicitly setting renderer to one of: `OpenGL`, `software`, `default`.</li>\n          <li>Adds new configuration option `renderer.tile_hashtable_slots` to configure texture atlas hashtable capacity.</li>\n          <li>Adds new configuration option `renderer.tile_cache_count` to configure texture atlas cache capacity.</li>\n          <li>Adds new configuration option `renderer.tile_direct_mapping` to enable/disalbe texture atlas direct mapping.</li>\n          <li>Adds new colorscheme setting `background_image.path` and `background_image.opacity` to optionally render a terminal background image.</li>\n          <li>Adds stdout-fastpipe support on new shell file descriptor `3` and exposing availability via environment variable `STDOUT_FASTPIPE` (with value `3`). When writing to this file descriptor rather than to stdout (file descriptor `1`), the full performance of Contour can be explored.</li>\n          <li>Adds new configuration option `pty_buffer_size` for tweaking the new size in bytes for the PTY buffer objects.</li>\n          <li>Adds `mock` font locator (mostly interesting for advanced use for CI testing).</li>\n          <li>Adds VT sequence `SM ? 8452 h` / `RM ? 8452 l` for enabling/disabling sixel cursor placement conformance (xterm extension).</li>\n          <li>Adds SGR-Pixels support, VT sequence `SM ? 1016 h` / `RM ? 1016 l` (#574).</li>\n          <li>Adds VT sequence DECCARA, Change Attributes in Rectangular Area, with the extension that it applies to *all* SGR attributes. (#15).</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.2.3.183\" date=\"2022-01-09\" urgency=\"medium\">\n      <description>\n        <p>\n          Important: It is recommended to also use the latest `contour` termcap file if you are already using one\n          from a previous release.\n        </p>\n\n        <ul>\n          <li>Fixes Sixel image rendering when scrolling is needed and ANSI cursor is not on left margin.</li>\n          <li>Fixes Qt-related CLI options that that were largely ignored.</li>\n          <li>Fixes crash caused by VT sequence PM and SOS (#513).</li>\n          <li>Fixes parsing VT sequence RGB color parsing for cell decoratioins (e.g. underline).</li>\n          <li>Fixes double-underline to not look like a very thick line on small font sizes.</li>\n          <li>Applies antialiasing to curly underline.</li>\n          <li>Changes `contour` exit code to reflect the shell's exit code of the last closed window.</li>\n          <li>Improves text cursor rendering and extends cursor configuration accordingly (#526).</li>\n          <li>Improves visual appearance of dotted underline SGR.</li>\n          <li>Adds CLI option `terminal early-exit-threshold SECS` (defaulting to 6) to only report and wait if the process did exit below this threshold seconds.</li>\n          <li>Adds CLI option `terminal dump-state-at-exit` to auto-dump internal state at exit.</li>\n          <li>Adds support for CoreText for matching font descriptions and font fallback (#479).</li>\n          <li>Adds support for font feature settings. This is currently only implemented for `openshaper`, not yet for `dwrite` (#520).</li>\n          <li>Adds pixel-perfect box-drawing for U+E0B4, U+E0B6, U+E0BC, U+E0BE (some Powerline extended codepoints).</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.2.2.175\" date=\"2021-11-19\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Fixes input mapping containing `Control` modifier.</li>\n          <li>Fixes input mapping mode `Select` being ignored.</li>\n          <li>Fixes Modifier+Enter input mapping not being catched.</li>\n          <li>Fixes slant detection for DirectWrite.</li>\n          <li>Changes `DECCOLM` to only switch back to 80 when it was 132 before.</li>\n          <li>Adds new config option `spawn_new_process` to define new terminal window behavior.</li>\n          <li>Adds action `CancelSelection` to allow actively canceling selection via input mappings.</li>\n          <li>Adds key bindings to default configuration to allow simply pressing Ctrl+C/Ctrl+V (without Shift modifier) when an active selection is present.</li>\n          <li>Adds process current working directory on macOS.</li>\n          <li>Adds `contour license` CLI command to show project license but also an overview of all dependencies.</li>\n          <li>Adds a proper CLI to `bench-headless`. Building the headless benchmark tool is not shipped by default.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.2.1.174\" date=\"2021-11-14\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Reverts change from 0.2.0: \"Changes behaviour when receiving `U+FE0E` (VS15) to not enforce the width of 1 but leave it as is (usually 2). This seems to match what the web browser is doing, too.\"</li>\n          <li>Adds support for loading terminal color schemes from an external file, such as `~/.config/contour/colorschemes/onedark.yml` for the scheme `onedark` (file file format is simply a sub-tree of how colors can be specified inline).</li>\n          <li>Adds some more tmux-extension entries to the terminfo database that are supported by contour (`Ss`, `Se`, `Cs`, `Smol`, `Smulx`, `Setulc`).</li>\n          <li>Adds `Sync` capability entry to terminfo file.</li>\n          <li>Adds many more pixel-perfect graphical characters: `23A1`..`23A6`, `2580`..`2590`, `2594`..`259F`, `1FB00`..`1FB3B`, `1FB3C`..`1FBAF`, `1FBF0`..`1FBF9`.</li>\n          <li>Adds support for building with embedded FreeType and HarfBuzz (experimental, disabled by default).</li>\n          <li>Adds a shell early-exit-guard to not instantly close the terminal window but print a message instead and wait for any key press in order to close.</li>\n          <li>Adds missing config option `read_buffer_size` to default `contour.yml`.</li>\n          <li>Adds new config option `reflow_on_resize` to mandate whether or not text reflow is enabled on primary screen. If this option is false, it cannot be enabled programmatically either.</li>\n          <li>Adds new config option `on_mouse_select` to decide what action to pick when text has been selected (copy to clipboard or copy to selection-clipboard, or do nothing)</li>\n          <li>Unicode data updated to version 14.0 (release). See Announcing The Unicode® Standard, Version 14.0.</li>\n          <li>Do not force OpenGL ES on Linux anymore.</li>\n          <li>Changes default (Sixel) image size limits to the primary screen's pixel dimensions (#408).</li>\n          <li>Changes font locator engine default on Windows to DirectWrite (#452).</li>\n          <li>Changes tcap-query feature from experimental to always enabled (not configurable anymore).</li>\n          <li>Automatically detect if `contour` or `contour-latest` terminfo entries are present use that as default.</li>\n          <li>Fixes VT sequences that cause a cursor restore to sometimes crash.</li>\n          <li>Fixes terminfo installation path on macOS and tries to auto-set `TERMINFO_DIRS` to it on startup (#443).</li>\n          <li>Fixes terminfo entry `pairs`.</li>\n          <li>Fixes SGR 24 to remove any kind of underline (#451).</li>\n          <li>Fixes font fallback for `open_shaper` where in rare cases the text was not rendered at all.</li>\n          <li>Fixes CPU load going up on mouse move inside terminal window (#407).</li>\n          <li>Fixes terminfo entries accidentally double-escaping `\\E` to `\\\\E` (#399).</li>\n          <li>Fixes RGB color parsing via ':2::Pr:Pg:Pb' syntax and also adapt setrgbf &amp; setrgbb accordingly.</li>\n          <li>Fixes SEGV with overflowing (Sixel) images (#409).</li>\n          <li>Fixes XTSMGRAPHICS for invalid SetValue actions and setting Sixel image size limits (#422).</li>\n          <li>Fixes internal pixel width/height tracking in VT screen, which did affect sizes of rendered Sixel images (#408).</li>\n          <li>Fixes configuring a custom shell on macOS (#425).</li>\n          <li>Fixes off-by-one bug in builtin box drawing (#424).</li>\n          <li>Fixes assertion in text renderer with regards to colored glyphs.</li>\n          <li>Fixes Sixel background select to support transparency (#450).</li>\n          <li>Fixes session resuming on KDE desktop envionment which is respawing all Contour instances upon re-login but failed due to invalid command line parameters (#461).</li>\n          <li>Fixes Meta+Key keyboard inputs being ignored.</li>\n          <li>Changes DECSDM such that it works like a real VT340; also xterm, as of version 369, changed that recently (#287).</li>\n          <li>Adds context menu support for KDE.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.2.0.173\" date=\"2021-08-17\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Improved performance (optimized render loop, optimized grapheme cluster segmentation algorithm)</li>\n          <li>Improves selection to better automatically deselect on selected area corruption.</li>\n          <li>Fixes `ioctl(..., TIOCGWINSZ, ...)` pixel values that were only set during resize but not initially.</li>\n          <li>Fixes mouse in VIM+Vimspector to also change the document position when moving the mouse.</li>\n          <li>Fixes SGR decorations to use designated underline thickness and underline position.</li>\n          <li>Fixes font glyph render in some corner cases where the rendered glyph did result in rectangle garbage on the screen.</li>\n          <li>Fixes copying the selection containing trailing whitespaces.</li>\n          <li>Fixes hard-reset with regards to default tab width.</li>\n          <li>Fixes VT sequence `DECRQPSR` for `DECTABSR`.</li>\n          <li>Fixes keyboard keys for `F1`..`F4` when pressed with and without modifiers.</li>\n          <li>Fixes OSC 8 hyperlink rendering when scrolled.</li>\n          <li>Fixes SGR 1 (bold) wrongly applied on indexed background colors.</li>\n          <li>Fixes text shaping sometimes showing missing glyphs instead of the actual glyphs (by changing the last-resort font fallback mechanism to chape each cluster individually with its own font fallback).</li>\n          <li>Preserve active profile when reloading config, and forces redraw after config reload.</li>\n          <li>Changes config entry `profile.*.font_size` to `profile.*.font.size`.</li>\n          <li>Changes config entries `scrollbar.*` to `profile.*.scrollbar.*`.</li>\n          <li>Changes behavior of live configuration reload, which is not default anymore and must be explicitly enabled via CLI parameter `--live-config`.</li>\n          <li>Changes behaviour when receiving `U+FE0E` (VS15) to not enforce the width of 1 but leave it as is (usually 2). This seems to match what the web browser is doing, too.</li>\n          <li>Changes the CLI command line interface syntax.</li>\n          <li>Removes `tab_width` configuration. Tab width cannot be configured anymore but remaints by default at 8.</li>\n          <li>Adds basic automatically created archive for Arch Linux to the CI build artifacts page and release page.</li>\n          <li>Adds support for bypassing the mouse protocol via Shift-click (configurable via `bypass_mouse_protocol_modifier`)</li>\n          <li>Adds improved debug logging. via CLI flag `-d` (`--enable-debug`) to accept a comma seperated list of tags to enable logging for. Appending a `*` at the end of a debug tag will enable all debug tags that match prefix its prefix.  The list of available debuglog tags can be found via CLI flag `-D` (`--list-debug-tags`).</li>\n          <li>Adds support for different font render modes: `lcd`, `light`, `gray`, `monochrome` in `profiles.NAME.font.render_mode` (default: `lcd`).</li>\n          <li>Adds support for different text render engines: `OpenShaper`, `DirectWrite` and `CoreText` for upcoming native platform support on Windows (and later macOS).</li>\n          <li>Adds support for different font location engines: `fontconfig` (others will follow).</li>\n          <li>Adds experimental text reflow.</li>\n          <li>Adds OpenFileManager action to configuration.</li>\n          <li>Adds terminal identification environment variables `TERMINAL_NAME`, `TERMINAL_VERSION_TRIPLE` and `TERMINAL_VERSION_STRING`.</li>\n          <li>Adds config option `mode` to input modifiers for additionally filtering based on modes (alt screen, app cursor/keypad, text selection modes, ...).</li>\n          <li>Adds config option `profile.*.terminal_id: STR` to set the terminal identification to one of VT100, VT220, VT340, etc.</li>\n          <li>Adds config option `profile.*.maximized: BOOL` to indicate maximized state during profile activation.</li>\n          <li>Adds config option `profile.*.fullscreen: BOOL` to indicate fullscreen state during profile activation.</li>\n          <li>Adds config option `profile.*.font.strict_spacing: BOOL` to indicate that only monospace fonts may be used.</li>\n          <li>Adds config option `profile.*.font.TYPE.weight: WEIGHT` and `profile.*.fonts.TYPE.slant: SLANT` options (optional) along with `profile.*.fonts.TYPE.family: STRING`.</li>\n          <li>Adds config option `profile.*.font.TYPE.weight: WEIGHT` and `profile.*.fonts.TYPE.slant: SLANT` options (optional) along with `profile.*.fonts.TYPE.family: STRING`.</li>\n          <li>Adds config option `profile.*.font.dpi_scale: FLOAT` to apply some additional DPI scaling on fonts.</li>\n          <li>Adds config option `profile.*.font.builtin_box_drawing: BOOL` to use pixel-perfect builtin box drawing instead of font provided box drawing characters.</li>\n          <li>Adds config option `profile.*.refresh_rate: FLOAT` to configure how often the terminal screen will be rendered at most when currently under heavy screen changes. A value of `\"auto\"` will use the currently connected monitor's refresh rate.</li>\n          <li>Adds configuration's action `ToggleAllKeyMaps` to enable/disable intercepting and interpreting keybinds. The one that did toggle it will not be disabled.</li>\n          <li>Adds configuration's action `ClearHistoryAndReset` to clear the history, and resetting the terminal.</li>\n          <li>Adds VT sequence for enabling/disabling debug logging. `CSI ? 46 h` and `CSI ? 46 l` and CLI option `-d`.</li>\n          <li>Adds VT sequence for querying/setting current font `OSC 50 ; ? ST` and `OSC 50 ; Font ST` (and `OSC 60 Ps Ps Ps Ps Ps ST` for a more fine grained font query/setting control).</li>\n          <li>Adds VT sequence `CSI 18 t` and `CSI 19 t` for getting screen character size. Responds with `CSI 8 ; $columns ; $rows t` and  `CSI 9 ; $columns ; $rows t` respectively.</li>\n          <li>Adds VT sequence to capture the current screen buffer `CSI > LineMode ; StartLine ; LineCount t` giving the respone back on stdin via `OSC 314 ; $screen_buffer ST`, and feature detection via `DA1` number `314`.</li>\n          <li>Adds VT sequence `DECSNLS` for setting number of lines to display.</li>\n          <li>Adds VT sequence `CSI Ps b` (`REP`) for repeating the last graphical character `Ps` times.</li>\n          <li>Adds VT sequence `OSC 4 ; INDEX ; COLOR ST` for setting or querying color palette (if COLOR is `?` instead of a color spec).</li>\n          <li>Adds VT sequence `OSC 104 ; INDEX ST` for resetting color palette entry or complete palette (if no (index is given).</li>\n          <li>Adds VT sequence `DECCRA` to copy a rectangular area.</li>\n          <li>Adds VT sequence `DECERA` to erase a rectangular area.</li>\n          <li>Adds VT sequence `DECFRA` to fill a rectangular area.</li>\n          <li>Adds VT sequence `CSI > q` (XTVERSION) to query terminal identification (name and version). Response comes as `DCS >| Contour ContourVersion ST`.</li>\n          <li>Adds VT sequence `DECRQM` to request ANSI/DEC modes states (set / unset / not recognized).</li>\n          <li>Adds new CLI command: `contour capture ...` to capture the screen buffer.</li>\n          <li>Adds new CLI command: `contour set profile to NAME` to change the profile on the fly.</li>\n          <li>Adds new CLI command: `contour generate terminfo output OUTPUT_FILE` to create a Contour terminfo file.</li>\n          <li>Adds new CLI command: `contour generate config output OUTPUT_FILE` to create a new default config.</li>\n          <li>Adds new CLI command: `contour generate integration shell SHELL output OUTPUT_FILE` to create the shell integreation file for the given shell (only zsh supported for now). Also adds a pre-generated shell integration file for Linux (and macOS) to `/usr/share/contour/shell-integration.zsh`.</li>\n          <li>Unicode data updated to version 14.0 beta.</li>\n          <li>Adds support for building with Qt 6 (disabled by default).</li>\n          <li>Adds support for building with mimalloc (experimental, disabled by default).</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.1.1\" date=\"2020-12-31\" urgency=\"medium\">\n      <description>\n        <ul>\n          <li>Fixes race condition when displaying image animations (e.g. gifs via sixel).</li>\n          <li>Fixes `NewTerminal` action to also inherit the active configuration file.</li>\n          <li>Fixes restoring cursor position in `RM ?1049`.</li>\n          <li>Fixes `DECSTR` resetting saved-cursor state and active cursor-position.</li>\n          <li>Fixes selecting text not being pushed into the selection-clipboard.</li>\n          <li>Adds VT sequence `OSC 7` (set current working directory).</li>\n          <li>Adds VT sequence `DCS $ p $Name ST` to change config profile name to `$Name`.</li>\n        </ul>\n      </description>\n    </release>\n\n    <release version=\"0.1.0\" date=\"2020-12-24\">\n      <description>\n        <ul>\n          <li>Available on all 3 major platforms, Linux, macOS, Windows.</li>\n          <li>Emoji support (-: 🌈 💝 😛 👪 :-)</li>\n          <li>Font ligatures support (such as in Fira Code).</li>\n          <li>Bold and italic fonts</li>\n          <li>GPU-accelerated rendering.</li>\n          <li>Vertical Line Markers (quickly jump to markers in your history!)</li>\n          <li>Blurred behind transparent background when using Windows 10 or KDE window manager on Linux.</li>\n          <li>Runtime configuration reload</li>\n          <li>256-color and Truecolor support</li>\n          <li>Key binding customization</li>\n          <li>Color Schemes</li>\n          <li>Profiles (grouped customization of: color scheme, login shell, and related behaviours)</li>\n          <li>Clickable hyperlinks via OSC 8</li>\n          <li>Sixel inline images</li>\n        </ul>\n      </description>\n    </release>\n\n  </releases>\n\n</component>\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 3.603515625,
          "content": "site_name: Contour Terminal Emulator\ndev_addr: 0.0.0.0:8080\ndocs_dir: docs\nrepo_url: https://github.com/contour-terminal/contour/\nrepo_name: contour-terminal/contour\nsite_description: Technical Landing Page for Contour Terminal Emulator\nsite_author: Christian Parpart\ntheme:\n  name: material\n  logo: /assets/contour-logo.png\n  favicon: /assets/contour-logo.png\n  palette:\n  - media: \"(prefers-color-scheme: light)\"\n    scheme: default\n    primary: deep red\n    accent: deep red\n    toggle:\n      icon: material/weather-sunny\n      name: Switch to dark mode\n\n  - media: \"(prefers-color-scheme: dark)\"\n    scheme: slate\n    primary: deep red\n    accent: red\n    toggle:\n      icon: material/weather-night\n      name: Switch to light mode\n  features:\n    - content.action.edit\n    - content.action.view\n    - content.code.copy\n    - content.tabs.link\n    - navigation.expand # Do we want this?\n    - navigation.footer\n    - navigation.indexes\n    # - navigation.instant # conflicts with colorscheme preview\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.top\n    - navigation.sections\n    - navigation.tracking\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\nextra_css:\n  - stylesheets/extra.css\nmarkdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - admonition\n  - pymdownx.details\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n  - pymdownx.caret\n  - pymdownx.mark\n  - pymdownx.tilde\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n\nplugins:\n  - mkdocs-video:\n      is_video: True\n      video_muted: True\n      video_controls: True\n      css_style:\n        width: \"100%\"\n  - glightbox\n  - exclude:\n      glob:\n        - 'drafts/*'\n        - 'configuration/advanced/*' # disabled until ready\n  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])'\n\n#Page tree\nnav:\n  - Home:\n    - index.md\n    - CONTRIBUTING.md\n  - Getting started:\n    - Installation: install.md\n    - Release Notes: release-notes.md # This page is auto-generated from metainfo.xml by the CI/CD pipeline\n  - Configuration:\n    - configuration/index.md\n    - configuration/profiles.md\n    - configuration/colors.md\n    - configuration/indicator-statusline.md\n    - configuration/key-mapping.md\n    #- Images (Advanced) : configuration/advanced/images.md\n    #- Mouse (Advanced) : configuration/advanced/images.md\n    #- Misc (Advanced) : configuration/advanced/mouse.md\n    #- Rendered (Advanced) : configuration/advanced/rendered.md\n  - Features:\n    - List of features: features.md\n    - Font ligatures: demo/font-ligatures.md\n    - Images: demo/images.md\n    - Input method editor (IME): demo/ime.md\n    - Line marks: demo/line-marks.md\n    - Status line: demo/statusline.md\n    - Input modes: input-modes.md\n    - Size indicator: demo/size_indicator.md\n  - VT sequence reference:\n    - vt-sequence/index.md\n  - VT extensions:\n    - vt-extensions/index.md\n    - vt-extensions/clickable-links.md\n    - vt-extensions/unicode-core.md\n    - vt-extensions/vertical-line-marks.md\n    - vt-extensions/color-palette-update-notifications.md\n    # TODO(publish when ready): - vt-extensions/csi-u-extended-keyboard-protocol.md\n    - vt-extensions/synchronized-output.md\n    - vt-extensions/buffer-capture.md\n    - vt-extensions/font-settings.md\n    - vt-extensions/line-reflow-mode.md\n    - vt-extensions/save-and-restore-sgr-attributes.md\n  - Internals:\n    - internals/index.md\n    - internals/CODING_STYLE.md\n    - internals/text-stack.md\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg-configuration.json",
          "type": "blob",
          "size": 0.33984375,
          "content": "{\n  \"default-registry\": {\n    \"kind\": \"git\",\n    \"baseline\": \"000d1bda1ffa95a73e0b40334fa4103d6f4d3d48\",\n    \"repository\": \"https://github.com/microsoft/vcpkg\"\n  },\n  \"registries\": [\n    {\n      \"kind\": \"artifact\",\n      \"location\": \"https://github.com/microsoft/vcpkg-ce-catalog/archive/refs/heads/main.zip\",\n      \"name\": \"microsoft\"\n    }\n  ]\n}\n"
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 0.4521484375,
          "content": "{\n    \"$schema\": \"https://raw.githubusercontent.com/microsoft/vcpkg-tool/main/docs/vcpkg.schema.json\",\n    \"builtin-baseline\": \"80403036a665cb8fcc1a1b3e17593d20b03b2489\",\n    \"dependencies\": [\n        { \"name\": \"catch2\", \"version>=\": \"3.4.0\" },\n        { \"name\": \"libssh2\", \"version>=\": \"1.11.0\" },\n        { \"name\": \"ms-gsl\" },\n        { \"name\": \"range-v3\", \"version>=\": \"0.12.0\" },\n        { \"name\": \"yaml-cpp\" },\n        \"freetype\",\n        \"harfbuzz\"\n    ]\n}\n"
        }
      ]
    }
  ]
}