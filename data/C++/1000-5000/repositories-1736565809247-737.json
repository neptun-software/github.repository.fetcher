{
  "metadata": {
    "timestamp": 1736565809247,
    "page": 737,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jackaudio/jack2",
      "stars": 2242,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 1.1123046875,
          "content": "task:\n  freebsd_instance:\n    matrix:\n      - image_family: freebsd-13-3\n      - image_family: freebsd-14-1\n\n  environment:\n    CFLAGS: -O2 -pipe -fPIC -fstack-protector-strong -fno-strict-aliasing -I/usr/local/include\n    CPPFLAGS: -O2 -pipe -fPIC -fstack-protector-strong -fno-strict-aliasing -I/usr/local/include\n    LDFLAGS: -L/usr/local/lib -fstack-protector-strong\n  prepare_script:\n    - mkdir /Install\n\n  matrix:\n    - name: FreeBSD Minimal Build\n      dependencies_script:\n        - pkg install -y pkgconf python3 libsamplerate libsysinfo expat\n      config_script:\n        - python3 ./waf configure --celt=no --samplerate=yes --alsa=no --classic --opus=no --prefix /Install --pkgconfigdir libdata/pkgconfig\n    - name: FreeBSD All Options\n      dependencies_script:\n        - pkg install -y pkgconf python3 libsamplerate libsysinfo alsa-lib dbus expat opus\n      config_script:\n        - python3 ./waf configure --celt=no --samplerate=yes --alsa=yes --dbus --classic --autostart=dbus --opus=yes --prefix /Install --pkgconfigdir libdata/pkgconfig\n\n  build_script:\n    - python3 ./waf\n  install_script:\n    - python3 ./waf install\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.087890625,
          "content": "[flake8]\nmax-line-length = 120\noutput-file = flake8.txt\nexclude = .git,waflib,autooptions\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3369140625,
          "content": ".lock*\n.stamp_*\n.DS_Store\n__pycache__\n*.dll\n*.pyc\n*.pkg\nflake8.txt\ncodeBlocks\n/android/.server/\n/android/.client/\n/build/\n/man/*.1\n\n# common release files\n/destdir/\n\n# macos release files\n/macos/package.xml\n/macos/package-welcome.txt\n\n# windows release files\n/innosetup/\n/is.exe\n/windows/inno/version.iss\n/windows/inno/win32\n/windows/inno/win64\n"
        },
        {
          "name": ".wafupdaterc",
          "type": "blob",
          "size": 1.6181640625,
          "content": "# This file is sourced by wafupdate when waf is updated.\n# wafupdate home page: https://gitlab.com/karllinden/wafupdate\n\nWAFLIB_STRIP_TOOLS=\"\n    asm\n    bison\n    compiler_d\n    compiler_fc\n    cs\n    d\n    d_config\n    d_scan\n    dbus\n    dmd\n    fc\n    fc_config\n    fc_scan\n    flex\n    g95\n    gas\n    gdc\n    gfortran\n    glib2\n    gnu_dirs\n    ifort\n    intltool\n    javaw\n    ldc2\n    lua\n    md5_tstamp\n    nasm\n    nobuild\n    perl\n    python\n    qt5\n    ruby\n    tex\n    vala\n    winres\n\"\n\nWAFLIB_STRIP_EXTRAS=\"\n    biber\n    bjam\n    blender\n    boo\n    boost\n    buildcopy\n    c_dumbpreproc\n    c_emscripten\n    cabal\n    cfg_altoptions\n    clang_compilation_database\n    codelite\n    compat15\n    color_gcc\n    color_rvct\n    cppcheck\n    cpplint\n    cross_gnu\n    cython\n    dcc\n    distnet\n    doxygen\n    dpapi\n    eclipse\n    erlang\n    fast_partial\n    fc_bgxlf\n    fc_cray\n    fc_nag\n    fc_nec\n    fc_open64\n    fc_pgfortran\n    fc_solstudio\n    fc_xlf\n    file_to_object\n    fluid\n    freeimage\n    fsb\n    fsc\n    gccdeps\n    gdbus\n    gob2\n    halide\n    javatest\n    kde4\n    local_rpath\n    make\n    midl\n    msvcdeps\n    msvs\n    netcache_client\n    objcopy\n    ocaml\n    package\n    parallel_debug\n    pch\n    pep8\n    pgicc\n    pgicxx\n    proc\n    protoc\n    pyqt5\n    pytest\n    qnxnto\n    qt4\n    relocation\n    remote\n    resx\n    review\n    rst\n    run_do_script\n    run_m_script\n    run_py_script\n    run_r_script\n    sas\n    satellite_assembly\n    scala\n    slow_qt4\n    softlink_libs\n    stale\n    stracedeps\n    swig\n    syms\n    ticgt\n    unity\n    use_config\n    valadoc\n    waf_xattr\n    why\n    win32_opts\n    wix\n\"\n"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 1.5556640625,
          "content": "Authors\n#######\n(Ordered alphabetically)\n\nAdrian Knoth\nAlba Mendez\nAlexander Graf\nAlexandre Prokoudine\nAlexandru Tofan\nAndreas Müller\nAndrew Kelley\nAndrzej Szombierski\nAndy Wingo\nAnthony Van Groningen\nArnout Diels\nArnaud Rebillout\nArnold Krille\nBernhard M. Wiedemann\nBruno Vernay\nCédric Schieli\nChris Caudle\nDavid Garcia Garzon\nDavid Robillard\nDavid Runge\nDeven Lahoti\nDevin Anderson\nDmitry Baikov\nEdward Betts\nEliot Blennerhassett\nFernando Lopez-Lezcano\nFilipe Coelho <falktx@falktx.com>\nFlorian Faber\nFrancis Pinteric\nGabriel M. Beddingfield\nGaël Portay\nHolger Dehnhardt\nHunter L. Allen\nIan Esten\nJacek Konieczny\nJack O'Quin\nJames Cowgill\nJames P. Thomas\nJan Engelhardt\nJaroslav Kysela\nJeremy Hall\nJohn Emmas\nJohnny Petrantoni\nJonathan Woithe\nJosh Green\nJoshua Moyerman\nJulien Acroute\nJussi Laako\nJuuso Alasuutari\nKai Vehmanen\nKarl Lindén\nKarsten Wiese\nKim Jeong Yeon\nKjetil S. Matheussen\nLars-Peter Clausen\nLee Revell\nMaks Naumov\nMarc-Olivier Barre\nMario Lang\nMarkus Seeber\nMatt Flax\nMatthias Geier\nMaxim Grishin\nMelanie Thielker\nMichael Voigt\nMichał Szymański\nNedko Arnaudov\nOlaf Hering\nOlivier Humbert\nPaul Davis\nPeter Bridgman\nPeter L Jones\nPieter Palmers\nRicardo Crudo\nRobert Ham\nRobin Gareus\nRohan Drape\nRomain Moret\nRui Nuno Capela\nSamuel Martin\nSamuel Tracol\nStefan Schwandter\nStéphane Letz <letz@grame.fr>\nSteve Harris\nSteven Chamberlain\nTaybin Rutkin\nThibault LeMeur\nThomas Brand <tom@trellis.ch>\nThomas Petazzoni\nThom Johansen\nTilman Linneweh\nTim Blechmann\nTimo Wischer\nTom Szilagyi\nTorben Hohn\nValentin David\nValerio Pilo\nViktor Wilhelmsson\nYasuhiro Fujii\nYouri Westerman\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 14.86328125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "ChangeLog.rst",
          "type": "blob",
          "size": 41.458984375,
          "content": "ChangeLog\n#########\n\n* 1.9.22 (2023-02-02)\n\n  * The waf autooption ``--example-tools`` has been removed.\n    The example clients and tools are no longer part of the jack2 project.\n  * Drop dependencies that were only used for example clients and tools (readline, sndfile and zita libs)\n  * Fix build with python3.11+\n  * Fix compatibility with macOS 12+\n  * Fix ringbuffer thread safety on ARM\n\n* 1.9.21 (2022-04-15)\n\n  * Add shell mode to ``jack_control`` (executes commands from stdin until EOF)\n  * The waf autooption ``--example-tools`` introduced in 1.9.20 is now off by default,\n    To get the previous behavior back pass ``--example-tools`` during build.\n    This flag (and the related tools and their code) are going to be removed in the next release.\n  * Fix alignas() on non-packed architectures\n  * Fix build of jack-example-tools man pages (1.9.20 regression)\n  * Fix compatibility with macOS 12\n  * Fix missing symbols from jack client library (error and info callback pointers)\n  * Fix potential memory corruption in midi_latency_test tool\n  * Fix JackWeakAPI on Windows\n  * Use predefined variables in pkg-config file (required for mingw)\n\nExternal changes, related to macOS/Windows installer:\n  * Fix application style in QJackCtl (qwindowsvistastyle.dll was missing)\n  * Update QjackCtl used in macOS/Windows installers to 0.9.7\n\n* 1.9.20 (2022-01-15)\n\n  * Add waf autooption ``--example-tools`` to allow optional build of\n    executables, libraries and man pages provided by `jack-example-tools\n    <https://github.com/jackaudio/jack-example-tools>`_ (the files are built by\n    default). Building and installing the additional files can be disabled by\n    using ``--example-tools=no`` or ``--no-example-tools``.\n  * Fix 32-bit support in ALSA driver\n  * Fix incomplete ASIO support on Windows\n  * Fix metadata usage with multiple users\n  * Fix netsource tool missing on Windows\n  * Fix semaphore usage on macOS\n  * Official FreeBSD support\n\nExternal changes, related to macOS/Windows installer:\n  * Update Qt5 used in macOS/Windows installers to 5.12.12\n  * Update QjackCtl used in macOS/Windows installers to 0.9.6\n\n* 1.9.19 (2021-07-15)\n\n  * Add jack_position_t::tick_double, and flags around it\n  * Add zalsa \"-w\" argument to wait for soundcard to be available\n  * Bump internal protocol version to 9 (due to struct alignment)\n  * Fix alignment of fields for atomic accesses\n  * Fix build for platforms needing __STDC_FORMAT_MACROS\n  * Fix compilation of documentation\n\n* 1.9.18 (2021-04-15)\n\n  * Add zalsa_in/out as internal client (based on zita-a2j/j2a and jack1 code)\n  * Fix jack_midi_dump deadlock on close after the jack server is restarted\n  * Fix interrupt signal for linux futex waits\n  * Fix usage of meta-data in official macOS builds (private DB errors)\n  * Log error message when cleaning previous DB (macOS and Windows)\n\n* 1.9.17 (2021-01-15)\n\n  * Fix jack_control stopping after first command iteration\n  * Fix library compat/current version under macOS\n  * Fix return codes of jackd on success\n  * Ignore DB_VERSION_MISMATCH error on windows, it is expected\n  * Remove old workaround for asio4all, as it breaks with jack-router\n\nExternal changes, related to macOS/Windows installer:\n  * Add jack-router to Windows installer, opt-in\n  * Fix registry keys for Windows, add 32bit compat ones on 64bit\n  * Support for arm64 macOS builds\n  * Show welcome and license pages on windows installer\n  * Update QjackCtl used in macOS/Windows installers to v0.9.0, with some commits cherry-picked from develop branch\n\n* 1.9.16 (2020-10-16)\n\n  * Fix/revert a change in how meta-data definitions were exposed (regression in 1.9.15)\n  * Remove jack-router Windows code from the repository\n\n* 1.9.15 (2020-10-15)\n\n  * Automated builds for macOS and Windows (see jackaudio/jack2-releases repository)\n  * Adapt wscript Windows build configuration to match old v1.9.11 installer\n  * Bump maximum default number of clients and ports (now 256 clients and 2048 ports)\n  * Delete various macOS and Windows-related files from the source code (no longer relevant)\n  * Mark JACK-Session as deprecated, please use NSM instead\n  * Remove unnecessary GPL include from LGPL code\n  * Split example-clients and tools, as done in JACK1 many years ago (WIP)\n  * Write Windows registry key during installation, so 3rd parties can find jackd.exe (as HKLM\\\\Software\\\\JACK\\\\Location)\n  * jack_control: Fix handling of dbus bytes\n  * jack_control: Return a proper exit status on DBus exception\n  * jack_property: Fix possible crash with \"-l\" argument usage\n  * jack_wait: Add client name option -n/--name\n  * Fix compilation of documentation\n  * Fix compilation of mixed mode with meta-data enabled\n  * Fix compilation with mingw\n  * Fix client-side crash if initial meta-data DB setup fails\n  * Fix macOS semaphore usage, so it works again\n  * Several fixes for Windows (with contributions from Kjetil S. Matheussen)\n  * Several minor fixes and grammar corrections (with contributions from Adam Miartus and Timo Wischer)\n\n* 1.9.14 (2019-10-28)\n\n  * Fix ARM build\n  * Fix mixed mode build when meta-data is enabled\n  * Fix blocking DBus device reservation, so it plays nice with others (like PipeWire)\n  * Use python3 for the waf build scripts\n\n* 1.9.13 (2019-10-06)\n\n  * Meta-data API implementation. (and a few tools updated with support for it)\n  * Correct GPL licence to LGPL for files needed to build libjack.\n  * Remove FreeBoB backend (superseded by FFADO).\n  * define JACK_LIB_EXPORT, useful for internal clients.\n  * Mark jack_midi_reset_buffer as deprecated.\n  * Add example systemd unit file\n  * Signal to systemd when jackd is ready.\n  * Set \"seq\" alsa midi driver to maximum resolution possible.\n  * Fix loading internal clients from another internal client.\n  * Code cleanup and various fixes. (too many to mention here, see git log for details)\n\n* 1.9.12 (2017-12-13)\n\n  * Fix Windows build issues.\n  * Fix build with gcc-7.\n  * Show hint when DBus device reservation fails.\n  * Add support for internal session files.\n\n* 1.9.11-RC1 (2017-06-13)\n\n  * Various corrections in NetJack2 code. Partial buffers can now be\n    transmitted with libjacknet API.\n  * Including S24_LE/BE formats to linux ALSA driver.\n  * More robust shared memory allocator.\n  * Allow autostart of jackd on OSX where device-names can contain spaces.\n  * Correct CoreAudio devices aggregation code.\n  * Waf and wscripts improvement and update.\n  * More flexible RT priority setup on Windows.\n  * New JackProxyDriver.\n  * Various fixes in JACK MIDI code.\n  * Fix return value of SetTimebaseCallback().\n  * Correct netmanager latency reporting.\n  * Implement new jack_port_rename and JackPortRenameCallback API.\n  * For OSX El Capitan support, use of Posix semaphore and move of Frameworks\n    in /Library folder.\n  * Fix CPU hogging of the midi_thread().\n  * Release audio devices when alsa_driver_new fails.\n  * String management fix.\n  * Correct JackDriver::Open: call to fGraphManager->SetBufferSize has to use\n    current fEngineControl->fBufferSize value.\n  * Use ARM neon intrinsics for AudioBufferMixdown.\n  * Fix Netjack alignment.\n  * Various wscript improvements and cleanup.\n  * Fix initialization of several class variables.\n  * Heap-allocate client matrix in topo sort.\n  * Add a toggle command to transport utility, to allow toggling between play\n    and stop state.\n  * Avoid side effects from parsing of \"version\" option in jackd.\n  * Allow firewire device be selected via -d.\n  * Add ARM-NEON acceleration for all non-dithering sample conversion\n    functions.\n  * Add jack_simdtest utility.\n  * Use Linux futex as JackSynchro.\n  * Add autoclose option to jack_load.\n\n* 1.9.10 (2014-07-19)\n\n  * More robust code in JackPortAudioDriver to handle buffer size change and\n    backend switching.\n  * Fix bus error on ARM platforms.\n  * Dynamically scan and print backend and internal names in jackd.\n  * CoreMIDI driver fixes.\n  * Rework NetJack2 code (OPUS codec on OSX, latency management, libjacknet\n    code).\n  * Correct auto-connect for audioadapter.\n  * Add IIO driver.\n  * Merge of Nedko no-self-connect branch.\n  * Fix freewheel mode.\n  * JackServer::SwitchMaster now correctly notify buffer_size and sample_rate\n    changes, cleanup/improvements in JackNetDriver.\n  * Tim Mayberry : Add support for building with mingw compiler.\n  * Merge of Kim Jeong Yeon Android branch.\n  * Partial port of metadata API.\n\n* 1.9.9.5 (2012-11-26)\n\n  * Adrian Knoth fix in midiseq.c.\n  * Fix library symbols export issue.\n  * Cleanup drivers and internals loading code.\n  * jackctl_driver_params_parse API moved in public control.h.\n  * More general drivers/internals loading model on Windows.\n  * Factorize code the server/client request in JackRequestDecoder class.\n  * More robust server/client protocol.\n  * Implement shutdown for in server clients.\n  * Better time-out management in NetJack2.\n  * Experimental system port alias use in Windows JackRouter.\n  * Improve ShutDown in NetManager.\n  * Correct ShutDown in JackInternalClient and JackLibClient.\n  * Fix NetJack2 initialisation bug.\n  * Add EndTime function (especially for Windows).\n  * Rename JackProcessSync in JackPosixProcessSync.\n  * A bit more robust JackMessageBuffer implementation (in progress).\n  * Check server API callback from notification thread.\n  * Use a time-out in notification channel write function.\n  * Fix lock management in JackEngine.\n  * In control API, UNIX like sigset_t replaced by more abstract\n    jackctl_sigmask_t * opaque struct.\n  * Improve libjacknet master mode.\n  * Remove JACK_32_64 flag, so POST_PACKED_STRUCTURE now always used.\n    POST_PACKED_STRUCTURE used for jack_latency_range_t type.\n  * Rework JackMessageBuffer. [firewire]\n\n  * Introduce UpdateLatencies() in FFADO backend. [firewire]\n\n  * Allow FFADO backend to change the buffer size.\n  * Update waf.\n  * New jack_get_cycle_times() implementation from Fons Adriennsen.\n  * Align buffers to 32 byte boundaries to allow AVX processing.\n  * Extend jack_control to have parameter reset commands.\n  * Fix alsa driver parameter order.\n  * Control API: Enforce driver/internal parameter order.\n  * Fix in ALSA adapter.\n  * Devin Anderson patch for Jack/CoreMIDI duplicated messages.\n  * Change framework installation hierarchy for OSX Mountain Lion.\n  * Update JackCoreAudioDriver and JackCoreAudioAdapter with more recent API.\n  * jack_control: fix epr command.\n  * Add opus support to NetJack2.\n  * More robust channel mapping handling in JackCoreAudioDriver.\n  * netjack1/netone opus support.\n  * controlapi: fix double free on master switch.\n  * Use string ids in the alsa device list.\n  * netjack/opus: don't re-init en/decoders.\n  * Correct JackPortAudioDriver::Open: special case for ASIO drivers.\n\n* 1.9.8 (2011-12-19)\n\n  * Merge newer-midi branch (Devin Anderson redesign of the MIDI drivers:\n    alsarawmidi, ffado, coremidi and winmme).\n  * Correction in jackdmp.cpp: notify_server_stop should be done after server\n    destruction.\n  * Correct driver lifetime management.\n  * Add XRun detection in PortAudio driver.\n  * CELT code for NetJack2.\n  * Merge branch switch-master-port-registration-notifications: correct driver\n    port registration.\n  * Libjacknet in progress.\n  * Correct MIDI in NetJack2.\n  * Correct OSX real-time thread setup.\n  * Correct rd_acquire in dbus code.\n  * Correct NetJack2 connection handling.\n  * SaveConnections/RestoreConnections in NetDriver and JackAudioDriver.\n  * Special version of jack_attach_shm/jack_release_shm on client side for\n    POSIX shared memory, to solve a memory leak issue.\n  * Another round of code improvements to handle completely buggy Digidesign\n    CoreAudio user-land driver.\n  * Special CATCH_CLOSE_EXCEPTION_RETURN to handle Close API calls.\n  * Add JACK_NETJACK_PORT and JACK_NETJACK_MULTICAST environment variables for\n    NetJack2. NetJack2 now only send data on network only is ports are\n    connected both sides.\n  * Fix for \"starting two instances of same app in parallel does not work\"\n    bug.\n  * Enable explicit channel mapping in CoreAudio driver.\n  * New JackTimedDriver class to be used by JackDummyDriver, JackNetDriver and\n    JackNetOneDriver classes.\n  * More robust code in synchronization primitives and in JackMessageBuffer.\n  * More robust Control API implementation. Add jackctl_driver_get_type in\n    Control API.\n  * Singleton behaviour for JackCoreMidiDriver and JackWinMMEDriver.\n  * John Emmas patch for DSP CPU computation.\n  * John Emmas Windows server launching patch.\n  * Fix jack_set_port_name API.\n  * Enable local access in NetJack2 code.\n  * Dynamic port management in JACK/CoreMidi bridge.\n\n* 1.9.7 (2011-03-30)\n\n  * Sync JackAlsaDriver::alsa_driver_check_card_type with JACK1 backend.\n  * Correct JackServer::Open to avoid a race when control API is used on OSX.\n  * Improve backend error handling: fatal error returned by Read/Write now\n    cause a Process failure (so a thread exit for blocking backends).\n    Recoverable ones (XRuns..) are now treated internally in ALSA, FreeBob and\n    FFADO backends.\n  * In jackdmp.cpp, jackctl_setup_signals moved before jackctl_server_start.\n  * Correct symbols export in backends on OSX. ALSA backend: suspend/resume\n    handling.\n  * Correct dummy driver.\n  * Adrian Knoth jack_lsp patch.\n  * Remove JackPortIsActive flag.\n  * New latency API implementation.\n  * ComputeTotalLatencies now a client/server call.\n  * Add latent test client for latency API.\n  * Also print playback and capture latency in jack_lsp.\n    jack_client_has_session_callback implementation.\n  * Check requested buffer size and limit to 1..8192 - avoids weird behaviour\n    caused by jack_bufsize foobar.\n  * jack_port_type_get_buffer_size implementation.\n  * Stop using alloca and allocate buffer on the heap for alsa_io.\n  * Rename jdelay to jack_iodelay as per Fons' request.\n  * Call buffer size callback in activate (actually this is done on client side\n    in the RT thread Init method).\n  * Add jack_midi_dump client.\n  * Synchronize net JACK1 with JACK1 version.\n  * Synchronize jack_connect/jack_disconnect with JACK1 version.\n  * Correct JackNetMaster::SetBufferSize.\n  * Use jack_default_audio_sample_t instead of float consistently, fix ticket\n    #201.\n  * -X now allows to add several slave backends, add -I to load several\n    internal clients.\n  * Rework internal slave driver management, JackServerGlobals now handle same\n    parameters as jackdmp.\n  * Correct JackEngine::NotifyGraphReorder, update JackDebugClient with latest\n    API.\n  * Devin Anderson server-ctl-proposal branch merged on trunk: improved control\n    API, slave backend reworked. Implement renaming in JackDriver::Open to\n    avoid name collision (thanks Devin Anderson).\n  * Correct alsa_driver_restart (thanks Devin Anderson). Correction of\n    jack_connect/jack_disconnect: use of jack_activate and volatile keyword for\n    thread shared variable.\n  * Correction of JackNetOneDriver for latest CELT API.\n  * Synchronize JackWeakAPI.cpp with new APIs.\n\n* 1.9.6 (2010-08-30)\n\n  * Improve JackCoreAudioDriver and JackCoreAudioAdapter : when no devices are\n    described, takes default input and output and aggregate them.\n  * Correct JackGraphManager::DeactivatePort.\n  * Correct JackMachServerChannel::Execute : keep running even in error cases.\n    Raise JACK_PROTOCOL_VERSION number.\n  * Arnold Krille firewire patch.\n  * Raise JACK_DRIVER_PARAM_STRING_MAX and JACK_PARAM_STRING_MAX to 127\n    otherwise some audio drivers cannot be loaded on OSX.\n  * Fix some file header to have library side code use LGPL.\n  * On Windows, now use TRE library for regexp (BSD license instead of GPL\n    license).\n  * ffado-portname-sync.patch from ticket #163 applied.\n  * Remove call to exit in library code.\n  * Make jack_connect/jack_disconnect wait for effective port\n    connection/disconnection.\n  * Add tests to validate intclient.h API.\n  * On Linux, inter-process synchronization primitive switched to POSIX\n    semaphore.\n  * In JackCoreAudioDriver, move code called in MeasureCallback to be called\n    once in IO thread.\n  * David Garcia Garzon netone patch.\n  * Fix from Fernando Lopez-Lezcano for compilation on fc13.\n  * Fix JackPosixSemaphore::TimedWait : same behavior as\n    JackPosixSemaphore::Wait regarding EINTR.\n  * David Garcia Garzon unused_pkt_buf_field_jack2 netone patch.\n  * Arnold Krille firewire snooping patch.\n  * Jan Engelhardt patch for get_cycles on SPARC.\n  * Adrian Knoth hurd.patch, kfreebsd-fix.patch and alpha_ia64-sigsegv.patch\n    from ticket 177.\n  * Adrian Knoth fix for linux cycle.h (ticket 188).\n  * In JackCoreAudioDriver, fix an issue when no value is given for input.\n\n* 1.9.5 (2010-02-12)\n\n  * Dynamic choice of maximum port number.\n  * More robust sample rate change handling code in JackCoreAudioDriver.\n  * Devin Anderson patch for Jack FFADO driver issues with lost MIDI bytes\n    between periods (and more).\n  * Fix port_rename callback: now both old name and new name are given as\n    parameters.\n  * Special code in JackCoreAudio driver to handle completely buggy Digidesign\n    CoreAudio user-land driver.\n  * Ensure that client-side message buffer thread calls thread_init callback\n    if/when it is set by the client (backport of JACK1 rev 3838).\n  * Check dynamic port-max value.\n  * Fix JackCoreMidiDriver::ReadProcAux when ring buffer is full (thanks Devin\n    Anderson).\n  * Josh Green ALSA driver capture only patch.\n  * When threads are cancelled, the exception has to be rethrown.\n  * Use a QUIT notification to properly quit the server channel, the server\n    channel thread can then be 'stopped' instead of 'canceled'.\n  * Mario Lang alsa_io time calculation overflow patch. Shared memory manager\n    was calling abort in case of fatal error, now return an error in caller.\n  * Change JackEngineProfiling and JackAudioAdapterInterface gnuplot scripts\n    to output SVG instead of PDF.\n\n* 1.9.4 (2009-11-19)\n\n  * Solaris boomer backend now working in capture or playback only mode.\n  * Add a -G parameter in CoreAudio backend (the computation value in RT\n    thread expressed as percent of period).\n  * Use SNDCTL_DSP_SYNCGROUP/SNDCTL_DSP_SYNCSTART API to synchronize input and\n    output in Solaris boomer backend.\n  * Big endian bug fix in memops.c.\n  * Fix issues in JackNetDriver::DecodeTransportData and\n    JackNetDriver::Initialize.\n  * Correct CPU timing in JackNetDriver, now take cycle begin time after Read.\n  * Simplify transport in NetJack2: master only can control transport.\n  * Change CoreAudio notification thread setup for OSX Snow Leopard.\n  * Correct server temporary mode: now set a global and quit after\n    server/client message handling is finished.\n  * Add a string parameter to server ==> client notification, add a new\n    JackInfoShutdownCallback type.\n  * CoreAudio backend now issue a JackInfoShutdownCallback when an\n    unrecoverable error is detected (sampling rate change, stream\n    configuration change).\n  * Correct jackdmp.cpp (failures case were not correct..).\n  * Improve JackCoreAudioDriver code.\n  * Raise default port number to 2048.\n  * Correct JackProcessSync::LockedTimedWait.\n  * Correct JACK_MESSAGE_SIZE value, particularly in OSX RPC code.\n  * Now start server channel thread only when backend has been started (so in\n    JackServer::Start).\n  * Should solve race conditions at start time.\n  * jack_verbose moved to JackGlobals class.\n  * Improve aggregate device management in JackCoreAudioDriver: now a\n    \"private\" device only and cleanup properly.\n  * Aggregate device code added to JackCoreAudioAdapter.\n  * Implement \"hog mode\" (exclusive access of the audio device) in\n    JackCoreAudioDriver.\n  * Fix jack_set_sample_rate_callback to have he same behavior as in JACK1.\n  * Dynamic system version detection in JackCoreAudioDriver to either create\n    public or private aggregate device.\n  * In JackCoreAudioDriver, force the SR value to the wanted one *before*\n    creating aggregate device (otherwise creation will fail).\n  * In JackCoreAudioDriver, better cleanup of AD when intermediate open\n    failure.\n  * In JackCoreAudioDriver::Start, wait for the audio driver to effectively\n    start (use the MeasureCallback).\n  * In JackCoreAudioDriver, improve management of input/output channels: -1 is\n    now used internally to indicate a wanted max value.\n  * In JackCoreAudioDriver::OpenAUHAL, correct stream format setup and\n    cleanup.\n  * Correct crash bug in JackAudioAdapterInterface when not input is used in\n    adapter (temporary fix).\n  * Sync JackCoreAudioAdapter code on JackCoreAudioDriver one.\n  * JACK_SCHED_POLICY switched to SCHED_FIFO.\n  * Now can aggregate device that are themselves AD.\n  * No reason to make jack_on_shutdown deprecated, so revert the incorrect\n    change.\n  * Thread AcquireRealTime and DropRealTime were (incorrectly) using fThread\n    field.\n  * Use pthread_self()) (or GetCurrentThread() on Windows) to get the calling\n    thread.\n  * Correctly save and restore RT mode state in freewheel mode.\n  * Correct freewheel code on client side.\n  * Fix AcquireRealTime and DropRealTime: now distinguish when called from\n    another thread (AcquireRealTime/DropRealTime) and from the thread itself\n    (AcquireSelfRealTime/DropSelfRealTime).\n  * Correct JackPosixThread::StartImp: thread priority setting now done in the\n    RT case only.\n  * Correct JackGraphManager::GetBuffer for the \"client loop with one\n    connection\" case: buffer must be copied.\n  * Correct JackInfoShutdownCallback prototype, two new\n    JackClientProcessFailure and JackClientZombie JackStatus code.\n  * Correct JackCoreAudio driver when empty strings are given as -C, -P or -d\n    parameter.\n  * Better memory allocation error checking on client (library) side.\n  * Better memory allocation error checking in ringbuffer.c, weak import\n    improvements.\n  * Memory allocation error checking for jack_client_new and jack_client_open\n    (server and client side).\n  * Memory allocation error checking in server for RPC.\n  * Simplify server temporary mode: now use a JackTemporaryException.\n  * Lock/Unlock shared memory segments (to test...).\n  * Sync with JACK1 : -r parameter now used for no-realtime, realtime (-R) is\n    now default, usable backend given vie platform.\n  * In JackCoreAudio driver, (possibly) clock drift compensation when needed\n    in aggregated devices.\n  * In JackCoreAudio driver, clock drift compensation in aggregated devices\n    working.\n  * In JackCoreAudio driver, clock drift compensation semantic changed a bit:\n    when on, does not activate if not needed (same clock domain).\n  * Sync JackCoreAudioAdapter code with JackCoreAudioDriver.\n\n* 1.9.3 (2009-07-21)\n\n  * New JackBoomerDriver class for Boomer driver on Solaris.\n  * Add mixed 32/64 bits mode (off by default).\n  * Native MIDI backend (JackCoreMidiDriver, JackWinMMEDriver).\n  * In ALSA audio card reservation code, tries to open the card even if\n    reservation fails.\n  * Clock source setting on Linux.\n  * Add jackctl_server_switch_master API.\n  * Fix transport callback (timebase master, sync) issue when used after\n    jack_activate (RT thread was not running).\n  * D-Bus access for jackctl_server_add_slave/jackctl_server_remove_slave API.\n  * Cleanup \"loopback\" stuff in server.\n  * Torben Hohn fix for InitTime and GetMicroSeconds in JackWinTime.c.\n  * New jack_free function added in jack.h.\n  * Reworked Torben Hohn fix for server restart issue on Windows.\n  * Correct jack_set_error_function, jack_set_info_function and\n    jack_set_thread_creator functions.\n  * Correct JackFifo::TimedWait for EINTR handling.\n  * Move DBus based audio device reservation code in ALSA backend compilation.\n  * Correct JackTransportEngine::MakeAllLocating, sync callback has to be\n    called in this case also.\n  * NetJack2 code: better error checkout, method renaming.\n  * Tim Bechmann patch: hammerfall, only release monitor thread, if it has\n    been created.\n  * Tim Bechmann memops.c optimization patches.\n  * In combined --dbus and --classic compilation code, use PulseAudio\n    acquire/release code.\n  * Big rewrite of Solaris boomer driver, seems to work in duplex mode at\n    least.\n  * Loopback backend reborn as a dynamically loadable separated backend.\n\n* 1.9.2 (2009-02-11)\n\n  * Solaris version.\n  * New \"profiling\" tools.\n  * Rework the mutex/signal classes.\n  * Support for BIG_ENDIAN machines in NetJack2.\n  * D-BUS based device reservation to better coexist with PulseAudio on Linux.\n  * Add auto_connect parameter in netmanager and netadapter.\n  * Use Torben Hohn PI controler code for adapters.\n  * Client incorrect re-naming fixed : now done at socket and fifo level.\n  * Virtualize and allow overriding of thread creation function, to allow Wine\n    support (from JACK1).\n\n* 1.9.1 (2008-11-14)\n\n  * Fix jackctl_server_unload_internal.\n  * Filter SIGPIPE to avoid having client get a SIGPIPE when trying to access\n    a died server.\n  * Libjack shutdown handler does not \"deactivate\" (fActive = false) the\n    client anymore, so that jack_deactivate correctly does the job later on.\n  * Better isolation of server and clients system resources to allow starting\n    the server in several user account at the same time.\n  * Report ringbuffer.c fixes from JACK1.\n  * Client and library global context cleanup in case of incorrect shutdown\n    handling (that is applications not correctly closing client after server\n    has shutdown).\n  * Use JACK_DRIVER_DIR variable in internal clients loader.\n  * For ALSA driver, synchronize with latest JACK1 memops functions.\n  * Synchronize JACK2 public headers with JACK1 ones.\n  * Implement jack_client_real_time_priority and\n    jack_client_max_real_time_priority API.\n  * Use up to BUFFER_SIZE_MAX frames in midi ports, fix for ticket #117.\n  * Cleanup server starting code for clients directly linked with\n    libjackserver.so.\n  * JackMessageBuffer was using thread \"Stop\" scheme in destructor, now use\n    the safer thread \"Kill\" way.\n  * Synchronize ALSA backend code with JACK1 one.\n  * Set default mode to 'slow' in JackNetDriver and JackNetAdapter.\n  * Simplify audio packet order verification.\n  * Fix JackNetInterface::SetNetBufferSize for socket buffer size computation\n    and JackNetMasterInterface::DataRecv if synch packet is received, various\n    cleanup.\n  * Better recovery of network overload situations, now \"resynchronize\" by\n    skipping cycles.\".\n  * Support for BIG_ENDIAN machines in NetJack2.\n  * Support for BIG_ENDIAN machines in NetJack2 for MIDI ports.\n  * Support for \"-h\" option in internal clients to print the parameters.\n  * In NetJack2, fix a bug when capture or playback only channels are used.\n  * Add a JACK_INTERNAL_DIR environment variable to be used for internal\n    clients.\n  * Add a resample quality parameter in audioadapter.\n  * Now correctly return an error if JackServer::SetBufferSize could not\n    change the buffer size (and was just restoring the current one).\n  * Use PRIu32 kind of macro in JackAlsaDriver again.\n  * Add a resample quality parameter in netadapter.\n\n* 1.9.0 (2008-03-18)\n\n  * Waf based build system: Nedko Arnaudov, Grame for preliminary OSX support.\n  * Control API, dbus based server control access: Nedko Arnaudov, Grame.\n  * NetJack2 components (in progress): jack_net backend, netmanager,\n    audioadapter, netadapter : Romain Moret, Grame.\n  * Code restructuring to help port on other architectures: Michael Voigt.\n  * Code cleanup/optimization: Tim Blechmann.\n  * Improve handling of server internal clients that can now be\n    loaded/unloaded using the new server control API: Grame.\n  * A lot of bug fix and improvements.\n\n* 0.72 (2008-04-10)\n\n* 0.71 (2008-02-14)\n\n  * Add port register/unregister notification in JackAlsaDriver.\n  * Correct JACK_port_unregister in MIDI backend.\n  * Add TimeCallback in JackDebugClient class.\n  * Correct jack_get_time propotype.\n  * Correct JackSocketClientChannel::ClientClose to use ServerSyncCall instead\n    of ServerAsyncCall.\n  * Better documentation in jack.h. libjackdmp.so renamed to\n    libjackservermp.so and same for OSX framework.\n  * Define an internal jack_client_open_aux needed for library wrapper feature.\n  * Remove unneeded jack_port_connect API.\n  * Correct jack_port_get_connections function (should return NULL when no\n    connections).\n  * In thread model, execute a dummy cycle to be sure thread has the correct\n    properties (ensure thread creation is finished).\n  * Fix engine real-time notification (was broken since ??).\n  * Implements wrapper layer.\n  * Correct jack_port_get_total_latency.\n  * Correct all backend playback port latency in case of \"asynchronous\" mode\n    (1 buffer more).\n  * Add test for jack_cycle_wait, jack_cycle_wait and jack_set_process_thread\n    API.\n  * RT scheduling for OSX thread (when used in dummy driver).\n  * Add -L (extra output latency in aynchronous mode) in CoreAudio driver.\n  * New JackLockedEngine decorator class to serialize access from ALSA Midi\n    thread, command thread and in-server clients.\n  * Use engine in JackAlsaDriver::port_register and\n    JackAlsaDriver::port_unregister.\n  * Fix connect notification to deliver *one* notification only.\n  * Correct JackClient::Activate so that first kGraphOrderCallback can be\n    received by the client notification thread.\n  * New jack_server_control client to test notifications when linked to the\n    server library.\n  * Synchronise transport.h with latest jackd version (Video handling).\n  * Transport timebase fix.\n  * Dmitry Baikov patch for alsa_rawmidi driver.\n  * Pieter Palmers patch for FFADO driver.\n  * Add an Init method for blocking drivers to be decorated using\n    JackThreadedDriver class.\n  * Correct PortRegister, port name checking must be done on server side.\n  * Correct a missing parameter in the usage message of jack_midiseq.\n  * New SetNonBlocking method for JackSocket.\n  * Correct a dirty port array issue in JackGraphManager::GetPortsAux.\n\n* 0.70 (2008-01-24)\n\n  * Updated API to match jack 0.109.0 version.\n  * Update in usx2y.c and JackPort.cpp to match jackd 0.109.2.\n  * Latest jack_lsp code from jack SVN.\n  * Add jack_mp_thread_wait client example.\n  * Add jack_thread_wait client example.\n  * Remove checking thread in CoreAudio driver, better device state change\n    recovery strategy: the driver is stopped and restarted.\n  * Move transport related methods from JackEngine to JackServer.\n\n\n  * Tim Blechmann sse optimization patch for JackaudioPort::MixAudioBuffer,\n    use of Apple Accelerate framework on OSX.\n  * Remove use of assert in JackFifo, JackMachSemaphore, and\n    JackPosixSemaphore: print an error instead.\n  * Correct \"server_connect\": close the communication channel.\n  * More robust external API.\n  * Use SetAlias for port naming.\n  * Use jackd midi port naming scheme.\n  * Notify ports unregistration in JackEngine::ClientCloseAux.\n  * Fix in JackClient::Error(): when RT thread is failing and calling\n    Shutdown, Shutdown was not desactivating the client correctly.\n\n* 0.69\n\n  * On OSX, use CFNotificationCenterPostNotificationWithOptions with\n    kCFNotificationDeliverImmediately | kCFNotificationPostToAllSessions for\n    server ==> JackRouter plugin notification.\n  * On OSX, use jack server name in notification system.\n  * Correct fPeriodUsecs computation in JackAudioDriver::SetBufferSize and\n    JackAudioDriver::SetSampleRate.\n  * Correct JackMachNotifyChannel::ClientNotify.\n  * Correct bug in CoreAudio driver sample rate management.\n  * Add a sample_rate change listener in CoreAudio driver.\n  * Correct sample_rate management in JackCoreAudioDriver::Open.\n  * Better handling in sample_rate change listener.\n  * Pieter Palmers FFADO driver and scons based build.\n  * Pieter Palmers second new build system: scons and Makefile based build.\n  * Tim Blechmann scons patch.\n  * Change string management for proper compilation with gcc 4.2.2.\n  * JackLog cleanup.\n  * Cleanup in CoreAudio driver.\n  * Tim Blechmann patch for JackGraphManager::GetPortsAux memory leak, Tim\n    Blechmann patch for scons install.\n  * Dmitry Baikov MIDI patch: alsa_seqmidi and alsa_rammidi drivers.\n  * CoreAudio driver improvement: detect and notify abnormal situations\n    (stopped driver in case of SR change...).\n\n* 0.68 (2007-10-16)\n\n  * Internal loadable client implementation, winpipe version added.\n  * Reorganize jack headers.\n  * Improve Linux install/remove scripts.\n  * Use LIB_DIR variable for 64 bits related compilation (drivers location).\n  * More generic Linux script.\n  * Correct jack_acquire_real_time_scheduling on OSX.\n  * Merge of Dmitry Baikov MIDI branch.\n  * Correct JackGraphManager::GetPortsAux to use port type.\n  * Remove JackEngineTiming class: code moved in JackEngineControl.\n  * Add midiseq and midisine examples.\n  * Cleanup old zombification code.\n  * Linux Makefile now install jack headers.\n  * Use of JACK_CLIENT_DEBUG environment variable to activate debug client\n    mode.\n  * Definition of JACK_LOCATION variable using -D in the Makefile.\n  * Restore jack 0.103.0 MIDI API version.\n  * Fix a bug in freewheel management in async mode: drivers now receive the\n    kStartFreewheelCallback and kStopFreewheelCallback notifications.\n  * Server and user directory related code moved in a JackTools file.\n  * Client name rewriting to remove path characters (used in fifo naming).\n  * Correct ALSA driver Attach method: internal driver may have changed the\n    buffer_size and sample_rate values.\n  * Add JackWinSemaphore class.\n  * Add an implementation for obsolete jack_internal_client_new and\n    jack_internal_client_close.\n  * Add missing jack_port_type_size.\n  * Use of JackWinSemaphore instead of JackWinEvent for inter-process\n    synchronization.\n  * Correct types.h for use with MINGW on Windows.\n  * Move OSX start/stop notification mechanism in Jackdmp.cpp.\n  * Correct CheckPort in JackAPI.cpp.\n\n* 0.67 (2007-09-28)\n\n  * Correct jack_client_open \"status\" management.\n  * Rename server_name from \"default\" to \"jackdmp_default\" to avoid conflict\n    with regular jackd server.\n  * Fix a resource leak issue in JackCoreAudioDriver::Close().\n  * Better implement \"jack_client_open\" when linking a client with the server\n    library.\n  * Correct \"jack_register_server\" in shm.c.\n  * Add missing timestamps.c and timestamps.h files.\n  * Correctly export public headers in OSX frameworks.\n  * Suppress JackEngine::ClientInternalCloseIm method.\n  * Use .jackdrc file (instead of .jackdmprc).\n  * Install script now creates a link \"jackd ==> jackdmp\" so that automatic\n    launch can work correctly.\n  * Paul Davis patch for -r (--replace-registry) feature.\n  * Internal loadable client implementation.\n  * Fix JackEngine::Close() method.\n  * Windows JackRouter.dll version 0.17: 32 integer sample format.\n\n* 0.66 (2007-09-06)\n\n  * Internal cleanup.\n  * Windows JackRouter.dll version 0.16: use of \"jack_client_open\" API to\n    allow automatic client renaming, better Windows VISTA support, new\n    JackRouter.ini file.\n\n* 0.65 (2007-08-30)\n\n  * Fix backend port alias management (renaming in system:xxx).\n  * Fix a bug in JackLibClient::Open introduced when adding automatic client\n    renaming.\n  * Fix a bug in jack_test.\n  * Correct JackShmMem destructor.\n  * Correct end case in JackClient::Execute.\n  * Correct JackMachSemaphore::Disconnect.\n  * Implement server temporary (-T) mode.\n  * Make \"Rename\" a method of JackPort class, call it from driver Attach\n    method.\n  * Server/library protocol checking implementation.\n\n* 0.64 (2007-07-26)\n\n  * Checking in the server to avoid calling the clients if no callback are\n    registered.\n  * Correct deprecated jack_set_sample_rate_callback to return 0 instead of\n    -1.\n  * Dmitry Baikov buffer size patch.\n  * Correct notification for kActivateClient event. Correct\n    JackEngine::ClientCloseAux (when called from\n    JackEngine::ClientExternalOpen).\n  * Correct JackWinEvent::Allocate.\n  * Automatic client renaming.\n  * Add \"systemic\" latencies management in CoreAudio driver.\n  * Automatic server launch.\n  * Removes unneeded 'volatile' for JackTransportEngine::fWriteCounter.\n\n* 0.63 (2007-04-05)\n\n  * Correct back JackAlsaDriver::Read method.\n  * Dmitry Baikov patch for JackGraphManager.cpp. Merge JackGraphManager Remove\n    and Release method in a unique Release method.\n  * Dmitry Baikov jackmp-time patch : add jack_get_time, jack_time_to_frames,\n    jack_frames_to_time. Add missing -D__SMP__in OSX project.  Add new\n    jack_port_set_alias, jack_port_unset_alias and jack_port_get_aliases API.\n  * Steven Chamberlain patch to fix jack_port_by_id export.\n  * Steven Chamberlain patch to fix jack_port_type. Test for jack_port_type\n    behaviour in jack_test.cpp tool. Add jack_set_client_registration_callback\n    API. Add \"callback exiting\" and \"jack_frame_time\" tests in jack_test.\n\n* 0.62 (2007-02-16)\n\n  * More client debug code: check if the client is still valid in every\n    JackDebugClient method, check if the library context is still valid in\n    every API call.\n  * Uses a time out value of 10 sec in freewheel mode (like jack).\n  * More robust activation/deactivation code, especially in case of client\n    crash.\n  * New LockAllMemory and UnlockAllMemory functions.\n  * Use pthread_attr_setstacksize in JackPosixThread class.\n  * Add Pieter Palmers FreeBob driver.\n  * Thibault LeMeur ALSA driver patch.\n  * Thom Johansen fix for port buffer alignment issues.\n  * Better error checking in PortAudio driver.\n\n* 0.61 (2006-12-18)\n\n  * Tom Szilagyi memory leak fix in ringbuffer.c.\n  * Move client refnum management in JackEngine.\n  * Shared_ports renamed to shared_graph.\n  * Add call to the init callback (set up using the\n    jack_set_thread_init_callback API) in Real-Time and Notification threads.\n  * Define a new 'kActivateClient' notification.\n  * New server/client data transfer model to fix a 64 bits system bug.\n  * Fix a device name reversal bug in ALSA driver.\n  * Implement thread.h API.\n\n* 0.60 (2006-11-23)\n\n  * Improve audio driver synchronous code to better handle possible time-out\n    cases.\n  * Correct JackWinEnvent::Allocate (handle the ERROR_ALREADY_EXISTS case).\n  * Correct JackEngine::ClientExternalNew.\n\n* 0.59 (2006-09-22)\n\n  * Various fixes in Windows version.\n  * Signal handling in the Windows server.\n  * Improved JackRouter ASIO/Jack bridge on Windows.\n  * Rename global \"verbose\" in \"jack_verbose\" to avoid symbol clash with\n    PureData.\n  * Add a new cpu testing/loading client.\n  * Correct server SetBufferSize in case of failure.\n  * Correct PortAudio driver help.\n  * Use -D to setup ADDON_DIR on OSX and Linux.\n  * Synchronize ALSA backend with jack one.\n\n* 0.58 (2006-09-06)\n\n  * Correct a bug introduced in 0.55 version that was preventing coreaudio\n    audio inputs to work.\n  * Restructured code structure after import on svn.\n\n* 0.57\n\n  * Correct bug in Mutex code in JackClientPipeThread::HandleRequest.\n  * ASIO JackRouter driver supports more applications.\n  * Updated HTML documentation.\n  * Windows dll binaries are compiled in \"release\" mode.\n\n* 0.56\n\n  * Correct SetBufferSize in coreaudio driver, portaudio driver and\n    JackServer.\n  * Real-time notifications for Windows version.\n  * In the PortAudio backend, display more informations for installed WinMME,\n\n  * DirectSound and ASIO drivers.\n\n* 0.55\n\n  * Windows version.\n  * Correct management of monitor ports in ALSA driver.\n  * Engine code cleanup.\n  * Apply Rui patch for more consistent parameter naming in coreaudio driver.\n  * Correct JackProcessSync::TimedWait: time-out was not computed correctly.\n  * Check the return code of NotifyAddClient in JackEngine. \n\n* 0.54\n\n  * Use the latest shm implementation that solve the uncleaned shm segment\n    problem on OSX.\n  * Close still opened file descriptors (report from Giso Grimm). Updated html\n    documentation.\n\n* 0.53\n\n  * Correct JackPilotMP tool on OSX.\n  * Correct CoreAudio driver for half duplex cases.\n  * Fix a bug in transport for \"unactivated\" clients.\n  * Fix a bug when removing \"unactivated\" clients from the server. Tested on\n    Linux/PPC.\n\n* 0.52\n\n  * Universal version for Mac Intel and PPC.\n  * Improvement of CoreAudio driver for half duplex cases.\n\n* 0.51\n\n  * Correct bugs in transport API implementation.\n\n* 0.50\n\n  * Transport API implementation.\n\n* 0.49\n\n  * Internal connection manager code cleanup.\n\n* 0.48\n\n  * Finish software monitoring implementation for ALSA and CoreAudio drivers.\n  * Simpler shared library management on OSX.\n\n* 0.47\n\n  * More fix for 64 bits compilation.\n  * Correct ALSA driver.\n  * Create a specific folder for jackdmp drivers.\n  * Use /dev/shm as default for fifo and sockets.\n  * \"Install\" and \"Remove\" script for smoother use with regular jack.\n\n* 0.46\n\n  * Fix a bug in loop management.\n  * Fix a bug in driver loading/unloading code.\n  * Internal code cleanup for better 64 bits architecture support.\n  * Compilation on OSX/Intel.\n  * Add the -d option for coreaudio driver (display CoreAudio devices internal\n    name).\n\n* 0.45\n\n  * Script to remove the OSX binary stuff.\n  * Correct an export symbol issue that was preventing QjackCtl to work on OSX.\n  * Fix the consequences of the asynchronous semantic of\n    connections/disconnections.\n\n* 0.44\n\n  * Patch from Dmitry Daikov: use clock_gettime by default for timing.\n  * Correct dirty buffer issue in CoreAudio driver. Updated doc.\n\n* 0.43\n\n  * Correct freewheel mode.\n  * Optimize ALSA and coreaudio drivers.\n  * Correct OSX installation script.\n\n* 0.42\n\n  * Patch from Nick Mainsbridge.\n  * Correct default mode for ALSA driver.\n  * Correct XCode project.\n\n* 0.41\n\n  * Add the ALSA MMAP_COMPLEX support for ALSA driver.\n  * Patch from Dmitry Daikov: compilation option to choose between\n    \"get_cycles\" and \"gettimeofday\" to measure timing.\n\n* 0.4\n\n  * Linux version, code cleanup, new -L parameter to activate the loopback\n    driver (see Documentation), a number of loopback ports can be defined.\n    Client validation tool.\n\n* 0.31\n\n  * Correct bug in mixing code that caused Ardour + jackdmp to crash...\n\n* 0.3\n\n  * Implement client zombification + correct feedback loop management + code\n    cleanup.\n\n* 0.2\n\n  * Implements jack_time_frame, new -S (sync) mode: when \"synch\" mode is\n    activated, the jackdmp server waits for the graph to be finished in the\n    current cycle before writing the output buffers. Note: To experiment with\n    the -S option, jackdmp must be launched in a console.\n\n* 0.1\n\n  * First published version\n\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.12109375,
          "content": "`JACK2 <https://jackaudio.org/>`_\n################################\n\n.. image:: https://travis-ci.org/jackaudio/jack2.svg?branch=master\n   :target: https://travis-ci.org/jackaudio/jack2  \n.. image:: https://repology.org/badge/tiny-repos/jack-audio-connection-kit.svg\n   :target: https://repology.org/metapackage/jack-audio-connection-kit/versions\n   \nJACK2 aka jackdmp is a C++ version of the JACK low-latency audio server for\nmulti-processor machines. It is a new implementation of the JACK server core\nfeatures that aims at removing some limitations of the JACK1 design. The\nactivation system has been changed for a data flow model and lock-free\nprogramming techniques for graph access have been used to have a more dynamic\nand robust system.\n\n- uses a new client activation model, that allows simultaneous client\n  execution (on a SMP machine) when parallel clients exist in the graph (client\n  that have the same inputs). This activation model allows to better use\n  available CPU on a smp machine, but also works on mono-processor machine.\n\n- uses a lock-free way to access (read/write) the client graph, thus\n  allowing connections/disconnection to be done without interrupting the audio\n  stream. The result is that connections/disconnections are glitch-free.\n\n- can work in two different modes at the server level:\n\n  - *synchronous activation*: in a given cycle, the server waits for all\n    clients to be finished (similar to normal jackd)\n\n  - *asynchronous activation*: in a given cycle, the server does not wait for\n    all clients to be finished and use output buffer computed the previous\n    cycle.\n    The audible result of this mode is that if a client is not activated\n    during one cycle, other clients may still run and the resulting audio\n    stream will still be produced (even if its partial in some way). This\n    mode usually result in fewer (less audible) audio glitches in a loaded\n    system.\n\nFor further information, see the JACK `homepage <https://jackaudio.org/>`_ and `wiki <https://github.com/jackaudio/jackaudio.github.com/wiki>`_. There are also the #jack and #lad chat channels on `Libera Chat IRC <https://web.libera.chat/#jack>`_.\n\n"
        },
        {
          "name": "README_NETJACK2",
          "type": "blob",
          "size": 10.12890625,
          "content": "-------------------------------\nNetJack2 for Jack2\n-------------------------------\n\n\nThis release includes a version of netjack designed for jack2. Indeed, the original concept has been completely redesigned to better fit to the Jack2 architecture, but also in order to provide additional capabilities, and ultimately a greater robustness.\n\nThis document describes the major changes between those two systems, then a simple how-to for setting up a basic usage of 'netjack2'.\n\n\n-------------------------------\nMajor changes and architecture\n-------------------------------\n\n\nThe biggest difference between netjack1 and netjack2 is the way of slicing audio and midi streams into network packets. For one audio cycle, netjack1 used to take all audio and midi buffers (one per channel), put butt all of them, then send it over the network. The problem is that a network packet has a fixed maximum size, depending on the network infrastructure (for 100mb, it reaches 1500bytes - MTU of the network). The solution is then to slice those buffers into smaller ones, and then send as many packets as we need. This cutting up can be done by network equipment, but it's more efficient and secure to include it in the software data management. Still this slicing brings another issue : all the packets are not pleased with any emission order and are unfortunately received in a random order, thanks to UDP. So we can't deal with data as it comes, we need to re-bufferize incoming streams in order to rebuild complete audio buffers.\n\nIn netjack2, the main idea is to make this slicing depending on the network capabilities. If we can put only 128 complete audio frames (128 samples for all audio channels) in a network packet, the elementary packet will so carry 128 frames, and in one cycle, we will transmit as many packet as we need. We take the example of 128 frames because it's the current value for 2 channels. This value is determined by taking the maximum 'power of 2' frames we can put in a packet. If we take 2 channels, 4 bytes per sample (float values), we get 8 bytes per frame, with 128 frames, we now have 1024 bytes, so we can put these 1024 bytes in one packet, and add a small header which identify the packet. This technique allows to separate the packets (in time) so they can be received in the order they have been emitted. If the master is running at 512 frames per second, four audio packets are sent per cycle and the slave deals with them as they arrive. With gigabytes networks, the MTU is larger, so we can put more data in one packet (in this example, we can even put the complete cycle in one packet).\n\nFor midi data, netjack1 used to send the whole buffer, in this example, 512 frames * 4 bytes per sample and per midi port. Those 2048 bytes are in 99% of the time filled to a few bytes, but rarely more. This means that if we have 2 audio and 2 midi channels to transmit, everything happens as if we had 4 audio channels, which is quite a waste of bandwidth. In netjack2, the idea is to take into account that fact, by sending only the useful bytes, and not more. It's completely inappropriate to overload the network with useless data. So we now have : 99% of the time one midi packet (of a few dozen of bytes), followed by four audio packets (in this example).\n\nThis way of separating audio and midi is quite important. We deal here with network transmissions, and also need to be 'realtime'. We need a system which allow to carry as many audio and midi data streams as we need and can, as if the distant computer was in fact a simple jack client. With all those constraints, we can't avoid packets loss. The better thing to do is to deal with it. But to loose an audio packet is different from skipping a midi one. Indeed, an audio loss leads to audio click, or undesirable, but very short side effect. Whereas a midi data loss can be completely disastrous. Imagine that we play some notes, with sustain, and we loose the sustain 0 value, which stops the effect. The sustain keeps going on on all following notes until the next 'sustain off' event. A simple missing byte can put all the midi system offside (that's the purpose of all the big PANIC buttons on midi software...). That's why we need to separate audio (more than one per cycle) from midi (one packet at 99% of the time). If we loose an audio packet, we probably still have an available midi packet, so we can use what we received, even if some audio is missing.\n\nThose audio and midi packets are preceded by a synchronization packet, which will make the slave directly synchronized on the master's cycle rhythm. This packet also carries transport data. Thus it's actually possible to synchronize also transport. This feature goes a little further than in netjack1. The idea here is to make every computer of the network fully synchronized on the master's transport. That means the master needs to know the state of every slow sync clients of each of its slaves. The master can now manage the transport state (especially the 'rolling' state) of each slave thus the main transport waits for the last slow sync client before turning 'rolling'. By doing this, the transport can start (roll) in the same cycle for every computers managed by the master.\n\n\nThe second main difference between netjack1 and netjack2 is the way the two computers (master and slave) synchronize their parameters and launch. In netjack1, once the slave configured (by the command line) and launched, it was waiting for the first incoming packet to synchronize (launch its first audio cycle) then run. The two computers needed to be configured separately but with the same parameters to run correctly.\n\nIn netjack2, the only thing you have to set for the slave is its number of in/out midi and audio channels. No more need to choose and set parameters depending on the master, they are automatically determined and communicated to the slave. This first synchronization step uses a multicast communication, no more need to know by advance all the IP addresses. The slave says on a multicast address \"hey, I'm available\". A master get the message, and communicate parameterers to the slave. Once synchronization done, data transfers can start. Moreover, the master being still listening on the multicast address, it can catch other slaves and manage them (create a jack client to communicate with the slave, and neatly close everything when the slave is gone).\n\nThe loaded internal client is no longer only an interface for the slave, like in netjack1. It's now called 'network manager', it doesn't deal with audio or midi, just with some kind of 'network logistical messages'. The manager automatically create a new internal client as soon as a new slave is seen on the network (by sending messages on the multicast address the manager is listening on). This manager is also able to remove one of its internal client as soon as a slave has left the network. This conception allow a complete separation of audio exchanges from parameterers and management.\n\nThe 'unloading' of the internal client (the manager) will cause a full cleaning of the infrastructure. The jack clients are all removed from the server, the slave are all turned available again, ready to be caught by another master etc. When a slave quits, it's also automatically removed from the manager's slaves list.\n\n\n-------------------------------\nHow-to use this ?\n-------------------------------\n\n\nNetjackmp is very simple to use. On the master's side, an internal client deals with the slaves, and the slaves themselves are classical jack servers running under a 'network audio driver'. The difference between the two versions is that the master now has a manager, which takes care of the slaves, while listening on the multicast address and create a new master as soon as a slave is available. But everything is transparent to the user, that's why it uses multicast (someone says \"hello\", and anyone who wants to hear it just has to listen).\n\nSo, just compile and install Jack2 as you are used to, on linux, using './waf configure', './waf' and './waf install' as root. On macosx, you can use the xcode project. On Windows, you can use the Code::Blocks workspace (you also have a small script to make an all in one installer).\n\nOn the master, just launch a classical jack server, the period size doesn't matter. Then, load the network manager using jack_load :\n\n'jack_load netmanager'\n\nThis will load the internal client, which will wait for an available slave (see the message window on QjackCtl - or the console output). If you want to listen to a specific multicast socket, you can add some options. To specify a complete command line, you can use :\n\n'jack_load netmanager -i\"-a xxx.xxx.xxx.xxx -p udp_port\"'\n\nIf you set another multicast address or port, you have to set the same on the slave's side. The default value should be working in many cases.\n\nOn the slave, just launch a new jack server using :\n\n'jackd -R -d net'\n\nAs in a standard backend in Jack2, you can use '-S' (synchronous mode). The asynchronous mode (without '-S') allows to send the computed data during the next cycle. In synchronous mode, data are sent back at the end of the cycle, that means after the process. You can specify some options, like '-n name' (will give a name to the slave, default is the network hostname), '-C input_ports' (the number of master-->slave channels), '-P output_ports' (the number of slave-->master channels), default is 2 ; or '-i midi_in_ports' and '-o midi_out_ports', default is 0. If you set multicast address or port on the master, you can add '-a xxx.xxx.xxx.xxx' and '-p udp_port'.\n\nLatency (-n) is the number of buffers added in network transmission. Zero is for cases when the audio buffers can be sent to the other size, transformed by the process and returned in the same cycle. By default latency is 5 buffers.\n\nFor additional information, you can go to the NetJack2 Wiki at : http://trac.jackaudio.org/wiki/WalkThrough/User/NetJack2.\n\n\n-------------------------------\nWhat's next ?\n-------------------------------\n\nThe development of netjack2 continues and some things are always moving... If you use it, please report encountered bugs, ideas or anything you think about.\n\nIf you have any question, you can subscribe the jackaudio developers mailing list at http://www.jackaudio.org/ or join the IRC channel '#jack' on FreeNode.\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "autooptions",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "compat",
          "type": "tree",
          "content": null
        },
        {
          "name": "dbus",
          "type": "tree",
          "content": null
        },
        {
          "name": "doxyfile.in",
          "type": "blob",
          "size": 63.90234375,
          "content": " # Doxyfile 1.6.2\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project\n#\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \")\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all\n# text before the first occurrence of this tag. Doxygen uses libiconv (or the\n# iconv built into libc) for the transcoding. See\n# http://www.gnu.org/software/libiconv for the list of possible encodings.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded\n# by quotes) that should identify the project.\n\nPROJECT_NAME           = \"Jack2\"\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number.\n# This could be handy for archiving the generated documentation or\n# if some version control system is used.\n\nPROJECT_NUMBER         = @VERSION@\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)\n# base path where the generated documentation will be put.\n# If a relative path is entered, it will be relative to the location\n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = default/\n\n# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create\n# 4096 sub-directories (in 2 levels) under the output directory of each output\n# format and will distribute the generated files over these directories.\n# Enabling this option can be useful when feeding doxygen a huge amount of\n# source files, where putting all generated files in the same directory would\n# otherwise cause performance problems for the file system.\n\nCREATE_SUBDIRS         = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# The default language is English, other supported languages are:\n# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,\n# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German,\n# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English\n# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian,\n# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrilic, Slovak,\n# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will\n# include brief member descriptions after the members that are listed in\n# the file and class documentation (similar to JavaDoc).\n# Set to NO to disable this.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend\n# the brief description of a member or function before the detailed description.\n# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator\n# that is used to form the text in various listings. Each string\n# in this list, if found as the leading text of the brief description, will be\n# stripped from the text and the result after processing the whole list, is\n# used as the annotated text. Otherwise, the brief description is used as-is.\n# If left blank, the following values are used (\"$name\" is automatically\n# replaced with the name of the entity): \"The $name class\" \"The $name widget\"\n# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\"\n# \"represents\" \"a\" \"an\" \"the\"\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# Doxygen will generate a detailed section even if there is only a brief\n# description.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full\n# path before files name in the file list and in the header files. If set\n# to NO the shortest path that makes the file name unique will be used.\n\nFULL_PATH_NAMES        = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag\n# can be used to strip a user-defined part of the path. Stripping is\n# only done if one of the specified strings matches the left-hand part of\n# the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the\n# path to strip.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of\n# the path mentioned in the documentation of a class, which tells\n# the reader which header file to include in order to use a class.\n# If left blank only the name of the header file containing the class\n# definition is used. Otherwise one should specify the include paths that\n# are normally passed to the compiler using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter\n# (but less readable) file names. This can be useful is your file systems\n# doesn't support long names like on DOS, Mac, or CD-ROM.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen\n# will interpret the first line (until the first dot) of a JavaDoc-style\n# comment as the brief description. If set to NO, the JavaDoc\n# comments will behave just like regular Qt-style comments\n# (thus requiring an explicit @brief command for a brief description.)\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then Doxygen will\n# interpret the first line (until the first dot) of a Qt-style\n# comment as the brief description. If set to NO, the comments\n# will behave just like regular Qt-style comments (thus requiring\n# an explicit \\brief command for a brief description.)\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n# comments) as a brief description. This used to be the default behaviour.\n# The new default is to treat a multi-line C++ comment block as a detailed\n# description. Set this tag to YES if you prefer the old behaviour instead.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented\n# member inherits the documentation from any documented member that it\n# re-implements.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce\n# a new page for each member. If set to NO, the documentation of a member will\n# be part of the file/class/namespace that contains it.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab.\n# Doxygen uses this value to replace tabs by spaces in code fragments.\n\nTAB_SIZE               = 8\n\n# This tag can be used to specify a number of aliases that acts\n# as commands in the documentation. An alias has the form \"name=value\".\n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to\n# put the command \\sideeffect (or @sideeffect) in the documentation, which\n# will result in a user-defined paragraph with heading \"Side Effects:\".\n# You can put \\n's in the value part of an alias to insert newlines.\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C\n# sources only. Doxygen will then generate output that is more tailored for C.\n# For instance, some of the names that are used will be different. The list\n# of all members will be omitted, etc.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java\n# sources only. Doxygen will then generate output that is more tailored for\n# Java. For instance, namespaces will be presented as packages, qualified\n# scopes will look different, etc.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources only. Doxygen will then generate output that is more tailored for\n# Fortran.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for\n# VHDL.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it parses.\n# With this tag you can assign which parser to use for a given extension.\n# Doxygen has a built-in mapping, but you can override or extend it using this tag.\n# The format is ext=language, where ext is a file extension, and language is one of\n# the parsers supported by doxygen: IDL, Java, Javascript, C#, C, C++, D, PHP,\n# Objective-C, Python, Fortran, VHDL, C, C++. For instance to make doxygen treat\n# .inc files as Fortran files (default is PHP), and .f files as C (default is Fortran),\n# use: inc=Fortran f=C. Note that for custom extensions you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.\n\nEXTENSION_MAPPING      =\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should\n# set this tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.\n# func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.\n# Doxygen will parse them like normal C++ but will assume all classes use public\n# instead of private inheritance when no explicit protection keyword is present.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate getter\n# and setter methods for a property. Setting this option to YES (the default)\n# will make doxygen to replace the get and set methods by a property in the\n# documentation. This will only work if the methods are indeed getting or\n# setting a simple type. If this is not the case, or you want to show the\n# methods anyway, you should set this option to NO.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# Set the SUBGROUPING tag to YES (the default) to allow class member groups of\n# the same type (for instance a group of public functions) to be put as a\n# subgroup of that type (e.g. under the Public Functions section). Set it to\n# NO to prevent subgrouping. Alternatively, this can be done per class using\n# the \\nosubgrouping command.\n\nSUBGROUPING            = YES\n\n# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum\n# is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically\n# be useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to\n# determine which symbols to keep in memory and which to flush to disk.\n# When the cache is full, less often used symbols will be written to disk.\n# For small to medium size projects (<1000 input files) the default value is\n# probably good enough. For larger projects a too small cache size can cause\n# doxygen to be busy swapping symbols to and from disk most of the time\n# causing a significant performance penality.\n# If the system has enough physical memory increasing the cache will improve the\n# performance by keeping more symbols in memory. Note that the value works on\n# a logarithmic scale so increasing the size by one will rougly double the\n# memory usage. The cache size is given by this formula:\n# 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0,\n# corresponding to a cache size of 2^16 = 65536 symbols\n\nSYMBOL_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available.\n# Private class members and static file members will be hidden unless\n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class\n# will be included in the documentation.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file\n# will be included in the documentation.\n\nEXTRACT_STATIC         = NO\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n# defined locally in source files will be included in the documentation.\n# If set to NO only classes defined in header files are included.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. When set to YES local\n# methods, which are defined in the implementation section but not in\n# the interface are included in the documentation.\n# If set to NO (the default) only methods in the interface are included.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base\n# name of the file that contains the anonymous namespace. By default\n# anonymous namespace are hidden.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all\n# undocumented members of documented classes, files or namespaces.\n# If set to NO (the default) these members will be included in the\n# various overviews, but no documentation section is generated.\n# This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy.\n# If set to NO (the default) these classes will be included in the various\n# overviews. This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n# friend (class|struct|union) declarations.\n# If set to NO (the default) these declarations will be included in the\n# documentation.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any\n# documentation blocks found inside the body of a function.\n# If set to NO (the default) these blocks will be appended to the\n# function's detailed documentation block.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation\n# that is typed after a \\internal command is included. If the tag is set\n# to NO (the default) then the documentation will be excluded.\n# Set it to YES to include the internal documentation.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate\n# file names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen\n# will show members with their full class and namespace scopes in the\n# documentation. If set to YES the scope will be hidden.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen\n# will put a list of the files that are included by a file in the documentation\n# of that file.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen\n# will list include files with double quotes in the documentation\n# rather than with sharp brackets.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]\n# is inserted in the documentation for inline members.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen\n# will sort the (detailed) documentation of file and class members\n# alphabetically by member name. If set to NO the members will appear in\n# declaration order.\n\nSORT_MEMBER_DOCS       = NO\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the\n# brief documentation of file, namespace and class members alphabetically\n# by member name. If set to NO (the default) the members will appear in\n# declaration order.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the (brief and detailed) documentation of class members so that constructors and destructors are listed first. If set to NO (the default) the constructors will appear in the respective orders defined by SORT_MEMBER_DOCS and SORT_BRIEF_DOCS. This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the\n# hierarchy of group names into alphabetical order. If set to NO (the default)\n# the group names will appear in their defined order.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be\n# sorted by fully-qualified names, including namespaces. If set to\n# NO (the default), the class list will be sorted only by class name,\n# not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the\n# alphabetical list.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or\n# disable (NO) the todo list. This list is created by putting \\todo\n# commands in the documentation.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or\n# disable (NO) the test list. This list is created by putting \\test\n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or\n# disable (NO) the bug list. This list is created by putting \\bug\n# commands in the documentation.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n# disable (NO) the deprecated list. This list is created by putting\n# \\deprecated commands in the documentation.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional\n# documentation sections, marked by \\if sectionname ... \\endif.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines\n# the initial value of a variable or define consists of for it to appear in\n# the documentation. If the initializer consists of more lines than specified\n# here it will be hidden. Use a value of 0 to hide initializers completely.\n# The appearance of the initializer of individual variables and defines in the\n# documentation can be controlled using \\showinitializer or \\hideinitializer\n# command in the documentation regardless of this setting.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated\n# at the bottom of the documentation of classes and structs. If set to YES the\n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n\n# If the sources in your project are distributed over multiple directories\n# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy\n# in the documentation. The default is NO.\n\nSHOW_DIRECTORIES       = NO\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page.\n# This will remove the Files entry from the Quick Index and from the\n# Folder Tree View (if specified). The default is YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the\n# Namespaces page.\n# This will remove the Namespaces entry from the Quick Index\n# and from the Folder Tree View (if specified). The default is YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command <command> <input-file>, where <command> is the value of\n# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file\n# provided by doxygen. Whatever the program writes to standard output\n# is used as the file version. See the manual for examples.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed by\n# doxygen. The layout file controls the global structure of the generated output files\n# in an output format independent way. The create the layout file that represents\n# doxygen's defaults, run doxygen with the -l option. You can optionally specify a\n# file name after the option, if omitted DoxygenLayout.xml will be used as the name\n# of the layout file.\n\nLAYOUT_FILE            =\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated\n# by doxygen. Possible values are YES and NO. If left blank NO is used.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated by doxygen. Possible values are YES and NO. If left blank\n# NO is used.\n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings\n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will\n# automatically be disabled.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some\n# parameters in a documented function, or documenting parameters that\n# don't exist or using markup commands wrongly.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be abled to get warnings for\n# functions that are documented, but have no documentation for their parameters\n# or return value. If set to NO (the default) doxygen will only warn about\n# wrong or incomplete parameter documentation, but not about the absence of\n# documentation.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that\n# doxygen can produce. The string should contain the $file, $line, and $text\n# tags, which will be replaced by the file and line number from which the\n# warning originated and the warning text. Optionally the format may contain\n# $version, which will be replaced by the version of the file (if it could\n# be obtained via FILE_VERSION_FILTER)\n\nWARN_FORMAT            =\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning\n# and error messages should be written. If left blank the output is written\n# to stderr.\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain\n# documented source files. You may enter file names like \"myfile.cpp\" or\n# directories like \"/usr/src/myproject\". Separate the files or directories\n# with spaces.\n\nINPUT                  = @SRCDIR@/common/jack/\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is\n# also the default input encoding. Doxygen uses libiconv (or the iconv built\n# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for\n# the list of possible encodings.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank the following patterns are tested:\n# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx\n# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py *.f90\n\nFILE_PATTERNS          = *.cpp \\\n                         *.h\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories\n# should be searched for input files as well. Possible values are YES and NO.\n# If left blank NO is used.\n\nRECURSIVE              = NO\n\n# The EXCLUDE tag can be used to specify files and/or directories that should\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n\nEXCLUDE                = RPC\n\n# The EXCLUDE_SYMLINKS tag can be used select whether or not files or\n# directories that are symbolic links (a Unix filesystem feature) are excluded\n# from the input.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories. Note that the wildcards are matched\n# against the file with absolute path, so to exclude all test directories\n# for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or\n# directories that contain example code fragments that are included (see\n# the \\include command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank all files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\don'tinclude\n# commands irrespective of the value of the RECURSIVE tag.\n# Possible values are YES and NO. If left blank NO is used.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or\n# directories that contain image that are included in the documentation (see\n# the \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command <filter> <input-file>, where <filter>\n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an\n# input file. Doxygen will then use the output that the filter program writes\n# to standard output.\n# If FILTER_PATTERNS is specified, this tag will be\n# ignored.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis.\n# Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match.\n# The filters are a list of the form:\n# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further\n# info on how filters are used. If FILTER_PATTERNS is empty, INPUT_FILTER\n# is applied to all files.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will be used to filter the input files when producing source\n# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\nFILTER_SOURCE_FILES    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will\n# be generated. Documented entities will be cross-referenced with these sources.\n# Note: To get rid of all source code in the generated output, make sure also\n# VERBATIM_HEADERS is set to NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body\n# of functions and classes directly in the documentation.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct\n# doxygen to hide any special comment blocks from generated source code\n# fragments. Normal C and C++ comments will always remain visible.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES\n# then for each documented function all documented\n# functions referencing it will be listed.\n\nREFERENCED_BY_RELATION = NO\n\n# If the REFERENCES_RELATION tag is set to YES\n# then for each documented function all documented entities\n# called/used by that function will be listed.\n\nREFERENCES_RELATION    = NO\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)\n# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from\n# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will\n# link to the source code.\n# Otherwise they will link to the documentation.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code\n# will point to the HTML generated by the htags(1) tool instead of doxygen\n# built-in source browser. The htags tool is part of GNU's global source\n# tagging system (see http://www.gnu.org/software/global/global.html). You\n# will need version 4.8.6 or higher.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen\n# will generate a verbatim copy of the header file for each class for\n# which an include is specified. Set to NO to disable this.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index\n# of all compounds will be generated. Enable this if the project\n# contains a lot of classes, structs, unions or interfaces.\n\nALPHABETICAL_INDEX     = NO\n\n# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then\n# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns\n# in which this list will be split (can be a number in the range [1..20])\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all\n# classes will be put under the same header in the alphabetical index.\n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that\n# should be ignored while generating the index headers.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will\n# generate HTML output.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `html' will be used as the default path.\n\nHTML_OUTPUT            = @HTML_BUILD_DIR@\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for\n# each generated HTML page (for example: .htm,.php,.asp). If it is left blank\n# doxygen will generate files with .html extension.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard header.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard footer.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading\n# style sheet that is used by each HTML page. It can be used to\n# fine-tune the look of the HTML output. If the tag is left blank doxygen\n# will generate a default style sheet. Note that doxygen will try to copy\n# the style sheet file to the HTML output directory, so don't put your own\n# stylesheet in the HTML output directory as well, or it will be erased!\n\nHTML_STYLESHEET        =\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting\n# this to NO can help when comparing the output of multiple runs.\n\nHTML_TIMESTAMP         = NO\n\n# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes,\n# files or namespaces will be aligned in HTML using tables. If set to\n# NO a bullet list will be used.\n\nHTML_ALIGN_MEMBERS     = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded. For this to work a browser that supports\n# JavaScript and DHTML is required (for instance Mozilla 1.0+, Firefox\n# Netscape 6.0+, Internet explorer 5.0+, Konqueror, or Safari).\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files\n# will be generated that can be used as input for Apple's Xcode 3\n# integrated development environment, introduced with OSX 10.5 (Leopard).\n# To create a documentation set, doxygen will generate a Makefile in the\n# HTML output directory. Running make will produce the docset in that\n# directory and running \"make install\" will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find\n# it at startup.\n# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html for more information.\n\nGENERATE_DOCSET        = NO\n\n# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the\n# feed. A documentation feed provides an umbrella under which multiple\n# documentation sets from a single provider (such as a company or product suite)\n# can be grouped.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that\n# should uniquely identify the documentation set bundle. This should be a\n# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen\n# will append .docset to the name.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# If the GENERATE_HTMLHELP tag is set to YES, additional index files\n# will be generated that can be used as input for tools like the\n# Microsoft HTML help workshop to generate a compiled HTML help file (.chm)\n# of the generated HTML documentation.\n\nGENERATE_HTMLHELP      = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can\n# be used to specify the file name of the resulting .chm file. You\n# can add a path in front of the file if the result should not be\n# written to the html output directory.\n\nCHM_FILE               =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can\n# be used to specify the location (absolute path including file name) of\n# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run\n# the HTML help compiler on the generated index.hhp.\n\nHHC_LOCATION           =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag\n# controls if a separate .chi index file is generated (YES) or that\n# it should be included in the master .chm file (NO).\n\nGENERATE_CHI           = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING\n# is used to encode HtmlHelp index (hhk), content (hhc) and project file\n# content.\n\nCHM_INDEX_ENCODING     =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag\n# controls whether a binary table of contents is generated (YES) or a\n# normal table of contents (NO) in the .chm file.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members\n# to the contents of the HTML help documentation and to the tree view.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and QHP_VIRTUAL_FOLDER\n# are set, an additional index file will be generated that can be used as input for\n# Qt's qhelpgenerator to generate a Qt Compressed Help (.qch) of the generated\n# HTML documentation.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can\n# be used to specify the file name of the resulting .qch file.\n# The path specified is relative to the HTML output folder.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating\n# Qt Help Project output. For more information please see\n# http://doc.trolltech.com/qthelpproject.html#namespace\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating\n# Qt Help Project output. For more information please see\n# http://doc.trolltech.com/qthelpproject.html#virtual-folders\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to add.\n# For more information please see\n# http://doc.trolltech.com/qthelpproject.html#custom-filters\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the custom filter to add.For more information please see\n# <a href=\"http://doc.trolltech.com/qthelpproject.html#custom-filters\">Qt Help Project / Custom Filters</a>.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this project's\n# filter section matches.\n# <a href=\"http://doc.trolltech.com/qthelpproject.html#filter-attributes\">Qt Help Project / Filter Attributes</a>.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can\n# be used to specify the location of Qt's qhelpgenerator.\n# If non-empty doxygen will try to run qhelpgenerator on the generated\n# .qhp file.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files\n#  will be generated, which together with the HTML files, form an Eclipse help\n#  plugin. To install this plugin and make it available under the help contents\n# menu in Eclipse, the contents of the directory containing the HTML and XML\n# files needs to be copied into the plugins directory of eclipse. The name of\n# the directory within the plugins directory should be the same as\n# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before the help appears.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have\n# this name.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at\n# top of each HTML page. The value NO (the default) enables the index and\n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n\n# This tag can be used to set the number of enum values (range [1..20])\n# that doxygen will group on one line in the generated HTML documentation.\n\nENUM_VALUES_PER_LINE   = 4\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information.\n# If the tag value is set to YES, a side panel will be generated\n# containing a tree-like index structure (just like the one that\n# is generated for HTML Help). For this to work a browser that supports\n# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser).\n# Windows users are probably better off using the HTML help feature.\n\nGENERATE_TREEVIEW      = NO\n\n# By enabling USE_INLINE_TREES, doxygen will generate the Groups, Directories,\n# and Class Hierarchy pages using a tree view instead of an ordered list.\n\nUSE_INLINE_TREES       = NO\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be\n# used to set the initial width (in pixels) of the frame in which the tree\n# is shown.\n\nTREEVIEW_WIDTH         = 250\n\n# Use this tag to change the font size of Latex formulas included\n# as images in the HTML documentation. The default is 10. Note that\n# when you change the font size after a successful doxygen run you need\n# to manually remove any form_*.png images from the HTML output directory\n# to force them to be regenerated.\n\nFORMULA_FONTSIZE       = 10\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for the HTML output. The underlying search engine uses javascript\n# and DHTML and should work on any modern browser. Note that when using HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET) there is already a search function so this one should\n# typically be disabled. For large projects the javascript based search engine\n# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.\n\nSEARCHENGINE           = NO\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be implemented using a PHP enabled web server instead of at the web client using Javascript. Doxygen will generate the search PHP script and index\n# file to put on the web server. The advantage of the server based approach is that it scales better to large projects and allows full text search. The disadvances is that it is more difficult to setup\n# and does not have live searching capabilities.\n\nSERVER_BASED_SEARCH    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will\n# generate Latex output.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `latex' will be used as the default path.\n\nLATEX_OUTPUT           =\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked. If left blank `latex' will be used as the default command name.\n# Note that when enabling USE_PDFLATEX this option is only used for\n# generating bitmaps for formulas in the HTML output, but not in the\n# Makefile that is written to the output directory.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to\n# generate index for LaTeX. If left blank `makeindex' will be used as the\n# default command name.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact\n# LaTeX documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used\n# by the printer. Possible values are: a4, a4wide, letter, legal and\n# executive. If left blank a4wide will be used.\n\nPAPER_TYPE             = a4wide\n\n# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX\n# packages that should be included in the LaTeX output.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for\n# the generated latex document. The header should contain everything until\n# the first chapter. If it is left blank doxygen will generate a\n# standard header. Notice: only use this tag if you know what you are doing!\n\nLATEX_HEADER           =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated\n# is prepared for conversion to pdf (using ps2pdf). The pdf file will\n# contain links (just like the HTML output) instead of page references\n# This makes the output suitable for online browsing using a pdf viewer.\n\nPDF_HYPERLINKS         = NO\n\n# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of\n# plain latex in the generated Makefile. Set this option to YES to get a\n# higher quality PDF documentation.\n\nUSE_PDFLATEX           = NO\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode.\n# command to the generated LaTeX files. This will instruct LaTeX to keep\n# running if errors occur, instead of asking the user for help.\n# This option is also used when generating formulas in HTML.\n\nLATEX_BATCHMODE        = NO\n\n# If LATEX_HIDE_INDICES is set to YES then doxygen will not\n# include the index chapters (such as File Index, Compound Index, etc.)\n# in the output.\n\nLATEX_HIDE_INDICES     = NO\n\n# If LATEX_SOURCE_CODE is set to YES then doxygen will include source code with syntax highlighting in the LaTeX output. Note that which sources are shown also depends on other settings such as SOURCE_BROWSER.\n\nLATEX_SOURCE_CODE      = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output\n# The RTF output is optimized for Word 97 and may not look very pretty with\n# other RTF readers or editors.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `rtf' will be used as the default path.\n\nRTF_OUTPUT             =\n\n# If the COMPACT_RTF tag is set to YES Doxygen generates more compact\n# RTF documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated\n# will contain hyperlink fields. The RTF file will\n# contain links (just like the HTML output) instead of page references.\n# This makes the output suitable for online browsing using WORD or other\n# programs which support those fields.\n# Note: wordpad (write) and others do not support links.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# config file, i.e. a series of assignments. You only have to provide\n# replacements, missing definitions are set to their default value.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an rtf document.\n# Syntax is similar to doxygen's config file.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES (the default) Doxygen will\n# generate man pages\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `man' will be used as the default path.\n\nMAN_OUTPUT             =\n\n# The MAN_EXTENSION tag determines the extension that is added to\n# the generated man pages (default is the subroutine's section .3)\n\nMAN_EXTENSION          =\n\n# If the MAN_LINKS tag is set to YES and Doxygen generates man output,\n# then it will generate one additional man file for each entity\n# documented in the real man page(s). These additional files\n# only source the real man page, but without them the man command\n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES Doxygen will\n# generate an XML file that captures the structure of\n# the code including all documentation.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `xml' will be used as the default path.\n\nXML_OUTPUT             = xml\n\n# The XML_SCHEMA tag can be used to specify an XML schema,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_SCHEMA             =\n\n# The XML_DTD tag can be used to specify an XML DTD,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_DTD                =\n\n# If the XML_PROGRAMLISTING tag is set to YES Doxygen will\n# dump the program listings (including syntax highlighting\n# and cross-referencing information) to the XML output. Note that\n# enabling this will significantly increase the size of the XML output.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will\n# generate an AutoGen Definitions (see autogen.sf.net) file\n# that captures the structure of the code including all\n# documentation. Note that this feature is still experimental\n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will\n# generate a Perl module file that captures the structure of\n# the code including all documentation. Note that this\n# feature is still experimental and incomplete at the\n# moment.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate\n# the necessary Makefile rules, Perl scripts and LaTeX code to be able\n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be\n# nicely formatted so it can be parsed by a human reader.\n# This is useful\n# if you want to understand what is going on.\n# On the other hand, if this\n# tag is set to NO the size of the Perl module output will be much smaller\n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file\n# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.\n# This is useful so different doxyrules.make files included by the same\n# Makefile don't overwrite each other's variables.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will\n# evaluate all C-preprocessor directives found in the sources and include\n# files.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro\n# names in the source code. If set to NO (the default) only conditional\n# compilation will be performed. Macro expansion can be done in a controlled\n# way by setting EXPAND_ONLY_PREDEF to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES\n# then the macro expansion is limited to the macros specified with the\n# PREDEFINED and EXPAND_AS_DEFINED tags.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files\n# in the INCLUDE_PATH (see below) will be search if a #include is found.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by\n# the preprocessor.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will\n# be used.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that\n# are defined before the preprocessor is started (similar to the -D option of\n# gcc). The argument of the tag is a list of macros of the form: name\n# or name=definition (no spaces). If the definition and the = are\n# omitted =1 is assumed. To prevent a macro definition from being\n# undefined via #undef or recursively expanded use the := operator\n# instead of the = operator.\n\nPREDEFINED             =\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then\n# this tag can be used to specify a list of macro names that should be expanded.\n# The macro definition that is found in the sources will be used.\n# Use the PREDEFINED tag if you want to use a different macro definition.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then\n# doxygen's preprocessor will remove all function-like macros that are alone\n# on a line, have an all uppercase name, and do not end with a semicolon. Such\n# function macros are typically used for boiler-plate code, and will confuse\n# the parser if not removed.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES option can be used to specify one or more tagfiles.\n# Optionally an initial location of the external documentation\n# can be added for each tagfile. The format of a tag file without\n# this location is as follows:\n#\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n#\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where \"loc1\" and \"loc2\" can be relative or absolute paths or\n# URLs. If a location is present for each tag, the installdox tool\n# does not have to be run to correct the links.\n# Note that each tag file must have a unique name\n# (where the name does NOT include the path)\n# If a tag file is not located in the directory in which doxygen\n# is run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create\n# a tag file that is based on the input files it reads.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed\n# in the class index. If set to NO only the inherited external classes\n# will be listed.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will\n# be listed.\n\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will\n# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base\n# or super classes. Setting the tag to NO turns the diagrams off. Note that\n# this option is superseded by the HAVE_DOT option below. This is only a\n# fallback. It is recommended to install and use dot, since it yields more\n# powerful graphs.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see\n# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# If set to YES, the inheritance and collaboration graphs will hide\n# inheritance and usage relations if the target is undocumented\n# or is not a class.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz, a graph visualization\n# toolkit from AT&T and Lucent Bell Labs. The other options in this section\n# have no effect if this option is set to NO (the default)\n\nHAVE_DOT               = NO\n\n# By default doxygen will write a font called FreeSans.ttf to the output\n# directory and reference it in all dot files that doxygen generates. This\n# font does not include all possible unicode characters however, so when you need\n# these (or just want a differently looking font) you can specify the font name\n# using DOT_FONTNAME. You need need to make sure dot is able to find the font,\n# which can be done by putting it in a standard location or by setting the\n# DOTFONTPATH environment variable or by setting DOT_FONTPATH to the directory\n# containing the font.\n\nDOT_FONTNAME           = FreeSans\n\n# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs.\n# The default size is 10pt.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the output directory to look for the\n# FreeSans.ttf font (which doxygen will put there itself). If you specify a\n# different font using DOT_FONTNAME you can set the path where dot\n# can find it using this tag.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect inheritance relations. Setting this tag to YES will force the\n# the CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect implementation dependencies (inheritance, containment, and\n# class references variables) of the class with other documented classes.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for groups, showing the direct groups dependencies\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n\nUML_LOOK               = NO\n\n# If set to YES, the inheritance and collaboration graphs will show the\n# relations between templates and their instances.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n# tags are set to YES then doxygen will generate a graph for each documented\n# file showing the direct and indirect include dependencies of the file with\n# other documented files.\n\nINCLUDE_GRAPH          = YES\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and\n# HAVE_DOT tags are set to YES then doxygen will generate a graph for each\n# documented header file showing the documented files that directly or\n# indirectly include this file.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH and HAVE_DOT options are set to YES then\n# doxygen will generate a call dependency graph for every global function\n# or class method. Note that enabling this option will significantly increase\n# the time of a run. So in most cases it will be better to enable call graphs\n# for selected functions only using the \\callgraph command.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then\n# doxygen will generate a caller dependency graph for every global function\n# or class method. Note that enabling this option will significantly increase\n# the time of a run. So in most cases it will be better to enable caller\n# graphs for selected functions only using the \\callergraph command.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen\n# will graphical hierarchy of all classes instead of a textual one.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH, SHOW_DIRECTORIES and HAVE_DOT tags are set to YES\n# then doxygen will show the dependencies a directory has on other directories\n# in a graphical way. The dependency relations are determined by the #include\n# relations between the files in the directories.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. Possible values are png, jpg, or gif\n# If left blank png will be used.\n\nDOT_IMAGE_FORMAT       = png\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the\n# \\dotfile command).\n\nDOTFILE_DIRS           =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of\n# nodes that will be shown in the graph. If the number of nodes in a graph\n# becomes larger than this value, doxygen will truncate the graph, which is\n# visualized by representing a node as a red box. Note that doxygen if the\n# number of direct children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note\n# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the\n# graphs generated by dot. A depth value of 3 means that only nodes reachable\n# from the root by following a path via at most 3 edges will be shown. Nodes\n# that lay further from the root node will be omitted. Note that setting this\n# option to 1 or 2 may greatly reduce the computation time needed for large\n# code bases. Also note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not\n# seem to support this out of the box. Warning: Depending on the platform used,\n# enabling this option may lead to badly anti-aliased labels on the edges of\n# a graph (i.e. they become hard to read).\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10)\n# support this, this feature is disabled by default.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will\n# generate a legend page explaining the meaning of the various boxes and\n# arrows in the dot generated graphs.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will\n# remove the intermediate dot files that are used to generate\n# the various graphs.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "freebsd",
          "type": "tree",
          "content": null
        },
        {
          "name": "jack.pc.in",
          "type": "blob",
          "size": 0.322265625,
          "content": "prefix=@PREFIX@\nexec_prefix=@PREFIX@\nlibdir=@LIBDIR@\nincludedir=@INCLUDEDIR@\nserver_libs=-L@LIBDIR@ -l@SERVERLIB@\njack_implementation=jack2\n\nName: jack\nDescription: the Jack Audio Connection Kit: a low-latency synchronous callback-based media server\nVersion: @JACK_VERSION@\nLibs: -L${libdir} -l@CLIENTLIB@\nCflags: -I${includedir}\n"
        },
        {
          "name": "linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "macosx",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "posix",
          "type": "tree",
          "content": null
        },
        {
          "name": "solaris",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "waf",
          "type": "blob",
          "size": 4.146484375,
          "content": "#!/usr/bin/env python\n# encoding: latin-1\n# Thomas Nagy, 2005-2018\n#\n\"\"\"\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. The name of the author may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\"\"\"\n\nimport os, sys, inspect\n\nVERSION=\"2.0.26\"\nREVISION=\"x\"\nGIT=\"x\"\nINSTALL=\"x\"\nC1='x'\nC2='x'\nC3='x'\ncwd = os.getcwd()\njoin = os.path.join\n\nif sys.hexversion<0x206000f:\n\traise ImportError('Python >= 2.6 is required to create the waf file')\n\nWAF='waf'\ndef b(x):\n\treturn x\nif sys.hexversion>0x300000f:\n\tWAF='waf3'\n\tdef b(x):\n\t\treturn x.encode()\n\ndef err(m):\n\tprint(('\\033[91mError: %s\\033[0m' % m))\n\tsys.exit(1)\n\ndef unpack_wafdir(dir, src):\n\tf = open(src,'rb')\n\tc = 'corrupt archive (%d)'\n\twhile 1:\n\t\tline = f.readline()\n\t\tif not line: err('run waf-light from a folder containing waflib')\n\t\tif line == b('#==>\\n'):\n\t\t\ttxt = f.readline()\n\t\t\tif not txt: err(c % 1)\n\t\t\tif f.readline() != b('#<==\\n'): err(c % 2)\n\t\t\tbreak\n\tif not txt: err(c % 3)\n\ttxt = txt[1:-1].replace(b(C1), b('\\n')).replace(b(C2), b('\\r')).replace(b(C3), b('\\x00'))\n\n\timport shutil, tarfile\n\ttry: shutil.rmtree(dir)\n\texcept OSError: pass\n\ttry:\n\t\tfor x in ('Tools', 'extras'):\n\t\t\tos.makedirs(join(dir, 'waflib', x))\n\texcept OSError:\n\t\terr(\"Cannot unpack waf lib into %s\\nMove waf in a writable directory\" % dir)\n\n\tos.chdir(dir)\n\ttmp = 't.bz2'\n\tt = open(tmp,'wb')\n\ttry: t.write(txt)\n\tfinally: t.close()\n\n\ttry:\n\t\tt = tarfile.open(tmp)\n\texcept:\n\t\ttry:\n\t\t\tos.system('bunzip2 t.bz2')\n\t\t\tt = tarfile.open('t')\n\t\t\ttmp = 't'\n\t\texcept:\n\t\t\tos.chdir(cwd)\n\t\t\ttry: shutil.rmtree(dir)\n\t\t\texcept OSError: pass\n\t\t\terr(\"Waf cannot be unpacked, check that bzip2 support is present\")\n\n\ttry:\n\t\tfor x in t: t.extract(x)\n\tfinally:\n\t\tt.close()\n\n\tfor x in ('Tools', 'extras'):\n\t\tos.chmod(join('waflib',x), 493)\n\n\tif sys.hexversion<0x300000f:\n\t\tsys.path = [join(dir, 'waflib')] + sys.path\n\t\timport fixpy2\n\t\tfixpy2.fixdir(dir)\n\n\tos.remove(tmp)\n\tos.chdir(cwd)\n\n\ttry: dir = unicode(dir, 'mbcs')\n\texcept: pass\n\ttry:\n\t\tfrom ctypes import windll\n\t\twindll.kernel32.SetFileAttributesW(dir, 2)\n\texcept:\n\t\tpass\n\ndef test(dir):\n\ttry:\n\t\tos.stat(join(dir, 'waflib'))\n\t\treturn os.path.abspath(dir)\n\texcept OSError:\n\t\tpass\n\ndef find_lib():\n\tsrc = os.path.abspath(inspect.getfile(inspect.getmodule(err)))\n\tbase, name = os.path.split(src)\n\n\t#devs use $WAFDIR\n\tw=test(os.environ.get('WAFDIR', ''))\n\tif w: return w\n\n\t#waf-light\n\tif name.endswith('waf-light'):\n\t\tw = test(base)\n\t\tif w: return w\n\t\tfor dir in sys.path:\n\t\t\tif test(dir):\n\t\t\t\treturn dir\n\t\terr('waf-light requires waflib -> export WAFDIR=/folder')\n\n\tdirname = '%s-%s-%s' % (WAF, VERSION, REVISION)\n\tfor i in (INSTALL,'/usr','/usr/local','/opt'):\n\t\tw = test(i + '/lib/' + dirname)\n\t\tif w: return w\n\n\t#waf-local\n\tdir = join(base, (sys.platform != 'win32' and '.' or '') + dirname)\n\tw = test(dir)\n\tif w: return w\n\n\t#unpack\n\tunpack_wafdir(dir, src)\n\treturn dir\n\nwafdir = find_lib()\nsys.path.insert(0, wafdir)\n\nif __name__ == '__main__':\n\t#import waflib.extras.compat15#PRELUDE\n\tfrom waflib import Scripting\n\tScripting.waf_entry_point(cwd, VERSION, wafdir)\n\n"
        },
        {
          "name": "waflib-macos-mods.patch",
          "type": "blob",
          "size": 0.66015625,
          "content": "diff --git a/waflib/Tools/ccroot.py b/waflib/Tools/ccroot.py\nindex cfef8bf5..484846f5 100644\n--- a/waflib/Tools/ccroot.py\n+++ b/waflib/Tools/ccroot.py\n@@ -575,12 +575,10 @@ def apply_vnum(self):\n \n \tcnum = getattr(self, 'cnum', str(nums[0]))\n \tcnums = cnum.split('.')\n-\tif len(cnums)>len(nums) or nums[0:len(cnums)] != cnums:\n-\t\traise Errors.WafError('invalid compatibility version %s' % cnum)\n \n \tlibname = node.name\n \tif libname.endswith('.dylib'):\n-\t\tname3 = libname.replace('.dylib', '.%s.dylib' % self.vnum)\n+\t\tname3 = libname.replace('.dylib', '.%s.dylib' % cnums[0])\n \t\tname2 = libname.replace('.dylib', '.%s.dylib' % cnum)\n \telse:\n \t\tname3 = libname + '.' + self.vnum\n"
        },
        {
          "name": "waflib",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "wscript",
          "type": "blob",
          "size": 30.251953125,
          "content": "#! /usr/bin/python3\n# encoding: utf-8\nfrom __future__ import print_function\n\nimport os\nimport shutil\nimport sys\n\nfrom waflib import Logs, Options, TaskGen\nfrom waflib.Build import BuildContext, CleanContext, InstallContext, UninstallContext\n\n# see also common/JackConstants.h\nVERSION = '1.9.22'\nAPPNAME = 'jack'\nJACK_API_VERSION = '0.1.0'\n\n# these variables are mandatory ('/' are converted automatically)\ntop = '.'\nout = 'build'\n\n# lib32 variant name used when building in mixed mode\nlib32 = 'lib32'\n\n\ndef display_feature(conf, msg, build):\n    if build:\n        conf.msg(msg, 'yes', color='GREEN')\n    else:\n        conf.msg(msg, 'no', color='YELLOW')\n\n\ndef check_for_celt(conf):\n    found = False\n    for version in ['11', '8', '7', '5']:\n        define = 'HAVE_CELT_API_0_' + version\n        if not found:\n            try:\n                conf.check_cfg(\n                        package='celt >= 0.%s.0' % version,\n                        args='--cflags --libs')\n                found = True\n                conf.define(define, 1)\n                continue\n            except conf.errors.ConfigurationError:\n                pass\n        conf.define(define, 0)\n\n    if not found:\n        raise conf.errors.ConfigurationError\n\n\ndef options(opt):\n    # options provided by the modules\n    opt.load('compiler_cxx')\n    opt.load('compiler_c')\n    opt.load('autooptions')\n\n    opt.load('xcode6')\n\n    opt.recurse('compat')\n\n    # install directories\n    opt.add_option(\n        '--htmldir',\n        type='string',\n        default=None,\n        help='HTML documentation directory [Default: <prefix>/share/jack-audio-connection-kit/reference/html/',\n    )\n    opt.add_option('--libdir', type='string', help='Library directory [Default: <prefix>/lib]')\n    opt.add_option('--libdir32', type='string', help='32bit Library directory [Default: <prefix>/lib32]')\n    opt.add_option('--pkgconfigdir', type='string', help='pkg-config file directory [Default: <libdir>/pkgconfig]')\n    opt.add_option('--mandir', type='string', help='Manpage directory [Default: <prefix>/share/man/man1]')\n\n    # options affecting binaries\n    opt.add_option(\n        '--platform',\n        type='string',\n        default=sys.platform,\n        help='Target platform for cross-compiling, e.g. cygwin or win32',\n    )\n    opt.add_option('--mixed', action='store_true', default=False, help='Build with 32/64 bits mixed mode')\n    opt.add_option('--debug', action='store_true', default=False, dest='debug', help='Build debuggable binaries')\n    opt.add_option(\n        '--static',\n        action='store_true',\n        default=False,\n        dest='static',\n        help='Build static binaries (Windows only)',\n    )\n\n    # options affecting general jack functionality\n    opt.add_option(\n        '--classic',\n        action='store_true',\n        default=False,\n        help='Force enable standard JACK (jackd) even if D-Bus JACK (jackdbus) is enabled too',\n    )\n    opt.add_option('--dbus', action='store_true', default=False, help='Enable D-Bus JACK (jackdbus)')\n    opt.add_option(\n        '--autostart',\n        type='string',\n        default='default',\n        help='Autostart method. Possible values: \"default\", \"classic\", \"dbus\", \"none\"',\n    )\n    opt.add_option('--profile', action='store_true', default=False, help='Build with engine profiling')\n    opt.add_option('--clients', default=256, type='int', dest='clients', help='Maximum number of JACK clients')\n    opt.add_option(\n        '--ports-per-application',\n        default=2048,\n        type='int',\n        dest='application_ports',\n        help='Maximum number of ports per application',\n    )\n    opt.add_option('--systemd-unit', action='store_true', default=False, help='Install systemd units.')\n\n    opt.set_auto_options_define('HAVE_%s')\n    opt.set_auto_options_style('yesno_and_hack')\n\n    # options with third party dependencies\n    doxygen = opt.add_auto_option(\n            'doxygen',\n            help='Build doxygen documentation',\n            conf_dest='BUILD_DOXYGEN_DOCS',\n            default=False)\n    doxygen.find_program('doxygen')\n    alsa = opt.add_auto_option(\n            'alsa',\n            help='Enable ALSA driver',\n            conf_dest='BUILD_DRIVER_ALSA')\n    alsa.check_cfg(\n            package='alsa >= 1.0.18',\n            args='--cflags --libs')\n    firewire = opt.add_auto_option(\n            'firewire',\n            help='Enable FireWire driver (FFADO)',\n            conf_dest='BUILD_DRIVER_FFADO')\n    firewire.check_cfg(\n            package='libffado >= 1.999.17',\n            args='--cflags --libs')\n    iio = opt.add_auto_option(\n            'iio',\n            help='Enable IIO driver',\n            conf_dest='BUILD_DRIVER_IIO')\n    iio.check_cfg(\n            package='gtkIOStream >= 1.4.0',\n            args='--cflags --libs')\n    iio.check_cfg(\n            package='eigen3 >= 3.1.2',\n            args='--cflags --libs')\n    portaudio = opt.add_auto_option(\n            'portaudio',\n            help='Enable Portaudio driver',\n            conf_dest='BUILD_DRIVER_PORTAUDIO')\n    portaudio.check_cfg(\n            package='portaudio-2.0 >= 19',\n            uselib_store='PORTAUDIO',\n            args='--cflags --libs')\n    winmme = opt.add_auto_option(\n            'winmme',\n            help='Enable WinMME driver',\n            conf_dest='BUILD_DRIVER_WINMME')\n    winmme.check(\n            header_name=['windows.h', 'mmsystem.h'],\n            msg='Checking for header mmsystem.h')\n\n    celt = opt.add_auto_option(\n            'celt',\n            help='Build with CELT')\n    celt.add_function(check_for_celt)\n    opt.add_auto_option(\n            'tests',\n            help='Build tests',\n            conf_dest='BUILD_TESTS',\n            default=False,\n    )\n\n    # Suffix _PKG to not collide with HAVE_OPUS defined by the option.\n    opus = opt.add_auto_option(\n            'opus',\n            help='Build Opus netjack2')\n    opus.check(header_name='opus/opus_custom.h')\n    opus.check_cfg(\n            package='opus >= 0.9.0',\n            args='--cflags --libs',\n            define_name='HAVE_OPUS_PKG')\n\n    samplerate = opt.add_auto_option(\n            'samplerate',\n            help='Build with libsamplerate')\n    samplerate.check_cfg(\n            package='samplerate',\n            args='--cflags --libs')\n\n    sd = opt.add_auto_option(\n            'systemd',\n            help='Use systemd notify')\n    sd.check(header_name='systemd/sd-daemon.h')\n    sd.check(lib='systemd')\n\n    db = opt.add_auto_option(\n            'db',\n            help='Use Berkeley DB (metadata)')\n    db.check(header_name='db.h')\n    db.check(lib='db')\n\n    libdbus = opt.add_auto_option(\n            'libdbus',\n            help='Build with DBus device reservation')\n    libdbus.check_cfg(\n            package='dbus-1 >= 1.0.0',\n            args='--cflags --libs')\n\n    # dbus options\n    opt.recurse('dbus')\n\n    # this must be called before the configure phase\n    opt.apply_auto_options_hack()\n\n\ndef detect_platform(conf):\n    # GNU/kFreeBSD and GNU/Hurd are treated as Linux\n    platforms = [\n        # ('KEY, 'Human readable name', ['strings', 'to', 'check', 'for'])\n        ('IS_LINUX',   'Linux',   ['gnu0', 'gnukfreebsd', 'linux', 'posix']),\n        ('IS_FREEBSD', 'FreeBSD', ['freebsd']),\n        ('IS_MACOSX',  'MacOS X', ['darwin']),\n        ('IS_SUN',     'SunOS',   ['sunos']),\n        ('IS_WINDOWS', 'Windows', ['cygwin', 'msys', 'win32'])\n    ]\n\n    for key, name, strings in platforms:\n        conf.env[key] = False\n\n    conf.start_msg('Checking platform')\n    platform = Options.options.platform\n    for key, name, strings in platforms:\n        for s in strings:\n            if platform.startswith(s):\n                conf.env[key] = True\n                conf.end_msg(name, color='CYAN')\n                break\n\n\ndef configure(conf):\n    conf.load('compiler_cxx')\n    conf.load('compiler_c')\n\n    detect_platform(conf)\n\n    if conf.env['IS_WINDOWS']:\n        conf.env.append_unique('CCDEFINES', '_POSIX')\n        conf.env.append_unique('CXXDEFINES', '_POSIX')\n        if Options.options.platform in ('msys', 'win32'):\n            conf.env.append_value('INCLUDES', ['/mingw64/include'])\n            conf.check(\n                header_name='pa_asio.h',\n                msg='Checking for PortAudio ASIO support',\n                define_name='HAVE_ASIO',\n                mandatory=False)\n\n    conf.env.append_unique('CFLAGS', '-Wall')\n    conf.env.append_unique('CXXFLAGS', ['-Wall', '-Wno-invalid-offsetof'])\n    conf.env.append_unique('CXXFLAGS', '-std=gnu++11')\n\n    if conf.env['IS_FREEBSD']:\n        conf.check(lib='execinfo', uselib='EXECINFO', define_name='EXECINFO')\n        conf.check_cfg(package='libsysinfo', args='--cflags --libs')\n\n    if not conf.env['IS_MACOSX']:\n        conf.env.append_unique('LDFLAGS', '-Wl,--no-undefined')\n    else:\n        conf.check(lib='aften', uselib='AFTEN', define_name='AFTEN')\n        conf.check_cxx(\n            fragment=''\n            + '#include <aften/aften.h>\\n'\n            + 'int\\n'\n            + 'main(void)\\n'\n            + '{\\n'\n            + 'AftenContext fAftenContext;\\n'\n            + 'aften_set_defaults(&fAftenContext);\\n'\n            + 'unsigned char *fb;\\n'\n            + 'float *buf=new float[10];\\n'\n            + 'int res = aften_encode_frame(&fAftenContext, fb, buf, 1);\\n'\n            + '}\\n',\n            lib='aften',\n            msg='Checking for aften_encode_frame()',\n            define_name='HAVE_AFTEN_NEW_API',\n            mandatory=False)\n\n        # TODO\n        conf.env.append_unique('CXXFLAGS', '-Wno-deprecated-register')\n\n    conf.load('autooptions')\n\n    conf.recurse('compat')\n\n    # Check for functions.\n    conf.check(\n            fragment=''\n            + '#define _GNU_SOURCE\\n'\n            + '#include <poll.h>\\n'\n            + '#include <signal.h>\\n'\n            + '#include <stddef.h>\\n'\n            + 'int\\n'\n            + 'main(void)\\n'\n            + '{\\n'\n            + '   ppoll(NULL, 0, NULL, NULL);\\n'\n            + '}\\n',\n            msg='Checking for ppoll',\n            define_name='HAVE_PPOLL',\n            mandatory=False)\n\n    # Check for backtrace support\n    conf.check(\n        header_name='execinfo.h',\n        define_name='HAVE_EXECINFO_H',\n        mandatory=False)\n\n    conf.recurse('common')\n    if Options.options.dbus:\n        conf.recurse('dbus')\n        if not conf.env['BUILD_JACKDBUS']:\n            conf.fatal('jackdbus was explicitly requested but cannot be built')\n    if conf.env['IS_LINUX']:\n        if Options.options.systemd_unit:\n            conf.recurse('systemd')\n        else:\n            conf.env['SYSTEMD_USER_UNIT_DIR'] = None\n\n    # test for the availability of ucontext, and how it should be used\n    for t in ['gp_regs', 'uc_regs', 'mc_gregs', 'gregs']:\n        fragment = '#include <ucontext.h>\\n'\n        fragment += 'int main() { ucontext_t *ucontext; return (int) ucontext->uc_mcontext.%s[0]; }' % t\n        confvar = 'HAVE_UCONTEXT_%s' % t.upper()\n        conf.check_cc(fragment=fragment, define_name=confvar, mandatory=False,\n                      msg='Checking for ucontext->uc_mcontext.%s' % t)\n        if conf.is_defined(confvar):\n            conf.define('HAVE_UCONTEXT', 1)\n\n    fragment = '#include <ucontext.h>\\n'\n    fragment += 'int main() { return NGREG; }'\n    conf.check_cc(fragment=fragment, define_name='HAVE_NGREG', mandatory=False,\n                  msg='Checking for NGREG')\n\n    conf.env['LIB_PTHREAD'] = ['pthread']\n    conf.env['LIB_DL'] = ['dl']\n    conf.env['LIB_RT'] = ['rt']\n    conf.env['LIB_M'] = ['m']\n    conf.env['LIB_STDC++'] = ['stdc++']\n    conf.env['JACK_API_VERSION'] = JACK_API_VERSION\n    conf.env['JACK_VERSION'] = VERSION\n\n    conf.env['BUILD_WITH_PROFILE'] = Options.options.profile\n    conf.env['BUILD_WITH_32_64'] = Options.options.mixed\n    conf.env['BUILD_CLASSIC'] = Options.options.classic\n    conf.env['BUILD_DEBUG'] = Options.options.debug\n    conf.env['BUILD_STATIC'] = Options.options.static\n\n    if conf.env['BUILD_JACKDBUS']:\n        conf.env['BUILD_JACKD'] = conf.env['BUILD_CLASSIC']\n    else:\n        conf.env['BUILD_JACKD'] = True\n\n    conf.env['BINDIR'] = conf.env['PREFIX'] + '/bin'\n\n    if Options.options.htmldir:\n        conf.env['HTMLDIR'] = Options.options.htmldir\n    else:\n        # set to None here so that the doxygen code can find out the highest\n        # directory to remove upon install\n        conf.env['HTMLDIR'] = None\n\n    if Options.options.libdir:\n        conf.env['LIBDIR'] = Options.options.libdir\n    else:\n        conf.env['LIBDIR'] = conf.env['PREFIX'] + '/lib'\n\n    if Options.options.pkgconfigdir:\n        conf.env['PKGCONFDIR'] = Options.options.pkgconfigdir\n    else:\n        conf.env['PKGCONFDIR'] = conf.env['LIBDIR'] + '/pkgconfig'\n\n    if Options.options.mandir:\n        conf.env['MANDIR'] = Options.options.mandir\n    else:\n        conf.env['MANDIR'] = conf.env['PREFIX'] + '/share/man/man1'\n\n    if conf.env['BUILD_DEBUG']:\n        conf.env.append_unique('CXXFLAGS', '-g')\n        conf.env.append_unique('CFLAGS', '-g')\n        conf.env.append_unique('LINKFLAGS', '-g')\n\n    if Options.options.autostart not in ['default', 'classic', 'dbus', 'none']:\n        conf.fatal('Invalid autostart value \"' + Options.options.autostart + '\"')\n\n    if Options.options.autostart == 'default':\n        if conf.env['BUILD_JACKD']:\n            conf.env['AUTOSTART_METHOD'] = 'classic'\n        else:\n            conf.env['AUTOSTART_METHOD'] = 'dbus'\n    else:\n        conf.env['AUTOSTART_METHOD'] = Options.options.autostart\n\n    if conf.env['AUTOSTART_METHOD'] == 'dbus' and not conf.env['BUILD_JACKDBUS']:\n        conf.fatal('D-Bus autostart mode was specified but jackdbus will not be built')\n    if conf.env['AUTOSTART_METHOD'] == 'classic' and not conf.env['BUILD_JACKD']:\n        conf.fatal('Classic autostart mode was specified but jackd will not be built')\n\n    if conf.env['AUTOSTART_METHOD'] == 'dbus':\n        conf.define('USE_LIBDBUS_AUTOLAUNCH', 1)\n    elif conf.env['AUTOSTART_METHOD'] == 'classic':\n        conf.define('USE_CLASSIC_AUTOLAUNCH', 1)\n\n    conf.define('CLIENT_NUM', Options.options.clients)\n    conf.define('PORT_NUM_FOR_CLIENT', Options.options.application_ports)\n\n    if conf.env['IS_WINDOWS']:\n        # we define this in the environment to maintain compatibility with\n        # existing install paths that use ADDON_DIR rather than have to\n        # have special cases for windows each time.\n        conf.env['ADDON_DIR'] = conf.env['LIBDIR'] + '/jack'\n        if Options.options.platform in ('msys', 'win32'):\n            conf.define('ADDON_DIR', 'jack')\n            conf.define('__STDC_FORMAT_MACROS', 1)  # for PRIu64\n        else:\n            # don't define ADDON_DIR in config.h, use the default 'jack'\n            # defined in windows/JackPlatformPlug_os.h\n            pass\n    else:\n        conf.env['ADDON_DIR'] = os.path.normpath(os.path.join(conf.env['LIBDIR'], 'jack'))\n        conf.define('ADDON_DIR', conf.env['ADDON_DIR'])\n        conf.define('JACK_LOCATION', os.path.normpath(os.path.join(conf.env['PREFIX'], 'bin')))\n\n    if not conf.env['IS_WINDOWS']:\n        conf.define('USE_POSIX_SHM', 1)\n    conf.define('JACKMP', 1)\n    if conf.env['BUILD_JACKDBUS']:\n        conf.define('JACK_DBUS', 1)\n    if conf.env['BUILD_WITH_PROFILE']:\n        conf.define('JACK_MONITOR', 1)\n    conf.write_config_header('config.h', remove=False)\n\n    if Options.options.mixed:\n        conf.setenv(lib32, env=conf.env.derive())\n        conf.env.append_unique('CFLAGS', '-m32')\n        conf.env.append_unique('CXXFLAGS', '-m32')\n        conf.env.append_unique('CXXFLAGS', '-DBUILD_WITH_32_64')\n        conf.env.append_unique('LINKFLAGS', '-m32')\n        if Options.options.libdir32:\n            conf.env['LIBDIR'] = Options.options.libdir32\n        else:\n            conf.env['LIBDIR'] = conf.env['PREFIX'] + '/lib32'\n\n        if conf.env['IS_WINDOWS'] and conf.env['BUILD_STATIC']:\n            def replaceFor32bit(env):\n                for e in env:\n                    yield e.replace('x86_64', 'i686', 1)\n            for env in ('AR', 'CC', 'CXX', 'LINK_CC', 'LINK_CXX'):\n                conf.all_envs[lib32][env] = list(replaceFor32bit(conf.all_envs[lib32][env]))\n            conf.all_envs[lib32]['LIB_REGEX'] = ['tre32']\n\n        # libdb does not work in mixed mode\n        conf.all_envs[lib32]['HAVE_DB'] = 0\n        conf.all_envs[lib32]['HAVE_DB_H'] = 0\n        conf.all_envs[lib32]['LIB_DB'] = []\n        # no need for opus in 32bit mixed mode clients\n        conf.all_envs[lib32]['LIB_OPUS'] = []\n        # someone tell me where this file gets written please..\n        conf.write_config_header('config.h')\n\n    print()\n    print('JACK ' + VERSION)\n\n    conf.msg('Maximum JACK clients', Options.options.clients, color='NORMAL')\n    conf.msg('Maximum ports per application', Options.options.application_ports, color='NORMAL')\n\n    conf.msg('Install prefix', conf.env['PREFIX'], color='CYAN')\n    conf.msg('Library directory', conf.all_envs['']['LIBDIR'], color='CYAN')\n    if conf.env['BUILD_WITH_32_64']:\n        conf.msg('32-bit library directory', conf.all_envs[lib32]['LIBDIR'], color='CYAN')\n    conf.msg('Drivers directory', conf.env['ADDON_DIR'], color='CYAN')\n    display_feature(conf, 'Build debuggable binaries', conf.env['BUILD_DEBUG'])\n\n    tool_flags = [\n        ('C compiler flags',   ['CFLAGS', 'CPPFLAGS']),\n        ('C++ compiler flags', ['CXXFLAGS', 'CPPFLAGS']),\n        ('Linker flags',       ['LINKFLAGS', 'LDFLAGS'])\n    ]\n    for name, vars in tool_flags:\n        flags = []\n        for var in vars:\n            flags += conf.all_envs[''][var]\n        conf.msg(name, repr(flags), color='NORMAL')\n\n    if conf.env['BUILD_WITH_32_64']:\n        conf.msg('32-bit C compiler flags', repr(conf.all_envs[lib32]['CFLAGS']))\n        conf.msg('32-bit C++ compiler flags', repr(conf.all_envs[lib32]['CXXFLAGS']))\n        conf.msg('32-bit linker flags', repr(conf.all_envs[lib32]['LINKFLAGS']))\n    display_feature(conf, 'Build with engine profiling', conf.env['BUILD_WITH_PROFILE'])\n    display_feature(conf, 'Build with 32/64 bits mixed mode', conf.env['BUILD_WITH_32_64'])\n\n    display_feature(conf, 'Build standard JACK (jackd)', conf.env['BUILD_JACKD'])\n    display_feature(conf, 'Build D-Bus JACK (jackdbus)', conf.env['BUILD_JACKDBUS'])\n    conf.msg('Autostart method', conf.env['AUTOSTART_METHOD'])\n\n    if conf.env['BUILD_JACKDBUS'] and conf.env['BUILD_JACKD']:\n        print(Logs.colors.RED + 'WARNING !! mixing both jackd and jackdbus may cause issues:' + Logs.colors.NORMAL)\n        print(Logs.colors.RED + 'WARNING !! jackdbus does not use .jackdrc nor qjackctl settings' + Logs.colors.NORMAL)\n\n    conf.summarize_auto_options()\n\n    if conf.env['BUILD_JACKDBUS']:\n        conf.msg('D-Bus service install directory', conf.env['DBUS_SERVICES_DIR'], color='CYAN')\n\n        if conf.env['DBUS_SERVICES_DIR'] != conf.env['DBUS_SERVICES_DIR_REAL']:\n            print()\n            print(Logs.colors.RED + 'WARNING: D-Bus session services directory as reported by pkg-config is')\n            print(Logs.colors.RED + 'WARNING:', end=' ')\n            print(Logs.colors.CYAN + conf.env['DBUS_SERVICES_DIR_REAL'])\n            print(Logs.colors.RED + 'WARNING: but service file will be installed in')\n            print(Logs.colors.RED + 'WARNING:', end=' ')\n            print(Logs.colors.CYAN + conf.env['DBUS_SERVICES_DIR'])\n            print(\n                Logs.colors.RED + 'WARNING: You may need to adjust your D-Bus configuration after installing jackdbus'\n            )\n            print('WARNING: You can override dbus service install directory')\n            print('WARNING: with --enable-pkg-config-dbus-service-dir option to this script')\n            print(Logs.colors.NORMAL, end=' ')\n    print()\n\n\ndef init(ctx):\n    for y in (BuildContext, CleanContext, InstallContext, UninstallContext):\n        name = y.__name__.replace('Context', '').lower()\n\n        class tmp(y):\n            cmd = name + '_' + lib32\n            variant = lib32\n\n\ndef obj_add_includes(bld, obj):\n    if bld.env['BUILD_JACKDBUS'] or bld.env['HAVE_DBUS_1']:\n        obj.includes += ['dbus']\n\n    if bld.env['IS_LINUX']:\n        obj.includes += ['linux', 'posix']\n\n    if bld.env['IS_FREEBSD']:\n        obj.includes += ['freebsd', 'posix']\n\n    if bld.env['IS_MACOSX']:\n        obj.includes += ['macosx', 'posix']\n\n    if bld.env['IS_SUN']:\n        obj.includes += ['posix', 'solaris']\n\n    if bld.env['IS_WINDOWS']:\n        obj.includes += ['windows']\n\n\n# FIXME: Is SERVER_SIDE needed?\ndef build_jackd(bld):\n    jackd = bld(\n        features=['cxx', 'cxxprogram'],\n        defines=['HAVE_CONFIG_H', 'SERVER_SIDE'],\n        includes=['.', 'common', 'common/jack'],\n        target='jackd',\n        source=['common/Jackdmp.cpp'],\n        use=['serverlib', 'SYSTEMD']\n    )\n\n    if bld.env['BUILD_JACKDBUS'] or bld.env['HAVE_DBUS_1']:\n        jackd.source += ['dbus/audio_reserve.c', 'dbus/reserve.c']\n        jackd.use += ['DBUS-1']\n\n    if bld.env['IS_LINUX']:\n        jackd.use += ['DL', 'M', 'PTHREAD', 'RT', 'STDC++']\n\n    if bld.env['IS_FREEBSD']:\n        jackd.use += ['M', 'PTHREAD']\n\n    if bld.env['IS_MACOSX']:\n        jackd.use += ['DL', 'PTHREAD']\n        jackd.framework = ['CoreFoundation']\n\n    if bld.env['IS_SUN']:\n        jackd.use += ['DL', 'PTHREAD']\n\n    obj_add_includes(bld, jackd)\n\n    return jackd\n\n\n# FIXME: Is SERVER_SIDE needed?\ndef create_driver_obj(bld, **kw):\n    if 'use' in kw:\n        kw['use'] += ['serverlib']\n    else:\n        kw['use'] = ['serverlib']\n\n    driver = bld(\n        features=['c', 'cxx', 'cshlib', 'cxxshlib'],\n        defines=['HAVE_CONFIG_H', 'SERVER_SIDE'],\n        includes=['.', 'common', 'common/jack'],\n        install_path='${ADDON_DIR}/',\n        **kw)\n\n    if bld.env['IS_WINDOWS']:\n        driver.env['cxxshlib_PATTERN'] = 'jack_%s.dll'\n    else:\n        driver.env['cxxshlib_PATTERN'] = 'jack_%s.so'\n\n    obj_add_includes(bld, driver)\n\n    return driver\n\n\ndef build_drivers(bld):\n    # Non-hardware driver sources. Lexically sorted.\n    dummy_src = [\n        'common/JackDummyDriver.cpp'\n    ]\n\n    loopback_src = [\n        'common/JackLoopbackDriver.cpp'\n    ]\n\n    net_src = [\n        'common/JackNetDriver.cpp'\n    ]\n\n    netone_src = [\n        'common/JackNetOneDriver.cpp',\n        'common/netjack.c',\n        'common/netjack_packet.c'\n    ]\n\n    proxy_src = [\n        'common/JackProxyDriver.cpp'\n    ]\n\n    # Hardware driver sources. Lexically sorted.\n    alsa_src = [\n        'common/memops.c',\n        'linux/alsa/JackAlsaDriver.cpp',\n        'linux/alsa/alsa_rawmidi.c',\n        'linux/alsa/alsa_seqmidi.c',\n        'linux/alsa/alsa_midi_jackmp.cpp',\n        'linux/alsa/generic_hw.c',\n        'linux/alsa/hdsp.c',\n        'linux/alsa/alsa_driver.c',\n        'linux/alsa/hammerfall.c',\n        'linux/alsa/ice1712.c'\n    ]\n\n    alsarawmidi_src = [\n        'linux/alsarawmidi/JackALSARawMidiDriver.cpp',\n        'linux/alsarawmidi/JackALSARawMidiInputPort.cpp',\n        'linux/alsarawmidi/JackALSARawMidiOutputPort.cpp',\n        'linux/alsarawmidi/JackALSARawMidiPort.cpp',\n        'linux/alsarawmidi/JackALSARawMidiReceiveQueue.cpp',\n        'linux/alsarawmidi/JackALSARawMidiSendQueue.cpp',\n        'linux/alsarawmidi/JackALSARawMidiUtil.cpp'\n    ]\n\n    boomer_src = [\n        'common/memops.c',\n        'solaris/oss/JackBoomerDriver.cpp'\n    ]\n\n    coreaudio_src = [\n        'macosx/coreaudio/JackCoreAudioDriver.mm',\n        'common/JackAC3Encoder.cpp'\n    ]\n\n    coremidi_src = [\n        'macosx/coremidi/JackCoreMidiInputPort.mm',\n        'macosx/coremidi/JackCoreMidiOutputPort.mm',\n        'macosx/coremidi/JackCoreMidiPhysicalInputPort.mm',\n        'macosx/coremidi/JackCoreMidiPhysicalOutputPort.mm',\n        'macosx/coremidi/JackCoreMidiVirtualInputPort.mm',\n        'macosx/coremidi/JackCoreMidiVirtualOutputPort.mm',\n        'macosx/coremidi/JackCoreMidiPort.mm',\n        'macosx/coremidi/JackCoreMidiUtil.mm',\n        'macosx/coremidi/JackCoreMidiDriver.mm'\n    ]\n\n    ffado_src = [\n        'linux/firewire/JackFFADODriver.cpp',\n        'linux/firewire/JackFFADOMidiInputPort.cpp',\n        'linux/firewire/JackFFADOMidiOutputPort.cpp',\n        'linux/firewire/JackFFADOMidiReceiveQueue.cpp',\n        'linux/firewire/JackFFADOMidiSendQueue.cpp'\n    ]\n\n    freebsd_oss_src = [\n        'common/memops.c',\n        'freebsd/oss/JackOSSDriver.cpp'\n    ]\n\n    iio_driver_src = [\n        'linux/iio/JackIIODriver.cpp'\n    ]\n\n    oss_src = [\n        'common/memops.c',\n        'solaris/oss/JackOSSDriver.cpp'\n    ]\n\n    portaudio_src = [\n        'windows/portaudio/JackPortAudioDevices.cpp',\n        'windows/portaudio/JackPortAudioDriver.cpp',\n    ]\n\n    winmme_src = [\n        'windows/winmme/JackWinMMEDriver.cpp',\n        'windows/winmme/JackWinMMEInputPort.cpp',\n        'windows/winmme/JackWinMMEOutputPort.cpp',\n        'windows/winmme/JackWinMMEPort.cpp',\n    ]\n\n    # Create non-hardware driver objects. Lexically sorted.\n    create_driver_obj(\n        bld,\n        target='dummy',\n        source=dummy_src)\n\n    create_driver_obj(\n        bld,\n        target='loopback',\n        source=loopback_src)\n\n    create_driver_obj(\n        bld,\n        target='net',\n        source=net_src,\n        use=['CELT'])\n\n    create_driver_obj(\n        bld,\n        target='netone',\n        source=netone_src,\n        use=['SAMPLERATE', 'CELT'])\n\n    create_driver_obj(\n        bld,\n        target='proxy',\n        source=proxy_src)\n\n    # Create hardware driver objects. Lexically sorted after the conditional,\n    # e.g. BUILD_DRIVER_ALSA.\n    if bld.env['BUILD_DRIVER_ALSA']:\n        create_driver_obj(\n            bld,\n            target='alsa',\n            source=alsa_src,\n            use=['ALSA'])\n        create_driver_obj(\n            bld,\n            target='alsarawmidi',\n            source=alsarawmidi_src,\n            use=['ALSA'])\n\n    if bld.env['BUILD_DRIVER_FFADO']:\n        create_driver_obj(\n            bld,\n            target='firewire',\n            source=ffado_src,\n            use=['LIBFFADO'])\n\n    if bld.env['BUILD_DRIVER_IIO']:\n        create_driver_obj(\n            bld,\n            target='iio',\n            source=iio_driver_src,\n            use=['GTKIOSTREAM', 'EIGEN3'])\n\n    if bld.env['BUILD_DRIVER_PORTAUDIO']:\n        create_driver_obj(\n            bld,\n            target='portaudio',\n            source=portaudio_src,\n            use=['PORTAUDIO'])\n\n    if bld.env['BUILD_DRIVER_WINMME']:\n        create_driver_obj(\n            bld,\n            target='winmme',\n            source=winmme_src,\n            use=['WINMME'])\n\n    if bld.env['IS_MACOSX']:\n        create_driver_obj(\n            bld,\n            target='coreaudio',\n            source=coreaudio_src,\n            use=['AFTEN'],\n            framework=['AudioUnit', 'CoreAudio', 'CoreServices'])\n\n        create_driver_obj(\n            bld,\n            target='coremidi',\n            source=coremidi_src,\n            use=['serverlib'],  # FIXME: Is this needed?\n            framework=['AudioUnit', 'CoreMIDI', 'CoreServices', 'Foundation'])\n\n    if bld.env['IS_FREEBSD']:\n        create_driver_obj(\n            bld,\n            target='oss',\n            source=freebsd_oss_src)\n\n    if bld.env['IS_SUN']:\n        create_driver_obj(\n            bld,\n            target='boomer',\n            source=boomer_src)\n        create_driver_obj(\n            bld,\n            target='oss',\n            source=oss_src)\n\n\ndef build(bld):\n    if not bld.variant and bld.env['BUILD_WITH_32_64']:\n        Options.commands.append(bld.cmd + '_' + lib32)\n\n    # process subfolders from here\n    bld.recurse('common')\n\n    if bld.variant:\n        # only the wscript in common/ knows how to handle variants\n        return\n\n    bld.recurse('compat')\n\n    if bld.env['BUILD_JACKD']:\n        build_jackd(bld)\n\n    build_drivers(bld)\n\n    if bld.env['IS_LINUX'] or bld.env['IS_FREEBSD']:\n        bld.recurse('man')\n        bld.recurse('systemd')\n    if not bld.env['IS_WINDOWS'] and bld.env['BUILD_TESTS']:\n        bld.recurse('tests')\n    if bld.env['BUILD_JACKDBUS']:\n        bld.recurse('dbus')\n\n    if bld.env['BUILD_DOXYGEN_DOCS']:\n        html_build_dir = bld.path.find_or_declare('html').abspath()\n\n        bld(\n            features='subst',\n            source='doxyfile.in',\n            target='doxyfile',\n            HTML_BUILD_DIR=html_build_dir,\n            SRCDIR=bld.srcnode.abspath(),\n            VERSION=VERSION\n        )\n\n        # There are two reasons for logging to doxygen.log and using it as\n        # target in the build rule (rather than html_build_dir):\n        # (1) reduce the noise when running the build\n        # (2) waf has a regular file to check for a timestamp. If the directory\n        #     is used instead waf will rebuild the doxygen target (even upon\n        #     install).\n        def doxygen(task):\n            doxyfile = task.inputs[0].abspath()\n            logfile = task.outputs[0].abspath()\n            cmd = '%s %s &> %s' % (task.env['DOXYGEN'][0], doxyfile, logfile)\n            return task.exec_command(cmd)\n\n        bld(\n            rule=doxygen,\n            source='doxyfile',\n            target='doxygen.log'\n        )\n\n        # Determine where to install HTML documentation. Since share_dir is the\n        # highest directory the uninstall routine should remove, there is no\n        # better candidate for share_dir, but the requested HTML directory if\n        # --htmldir is given.\n        if bld.env['HTMLDIR']:\n            html_install_dir = bld.options.destdir + bld.env['HTMLDIR']\n            share_dir = html_install_dir\n        else:\n            share_dir = bld.options.destdir + bld.env['PREFIX'] + '/share/jack-audio-connection-kit'\n            html_install_dir = share_dir + '/reference/html/'\n\n        if bld.cmd == 'install':\n            if os.path.isdir(html_install_dir):\n                Logs.pprint('CYAN', 'Removing old doxygen documentation installation...')\n                shutil.rmtree(html_install_dir)\n                Logs.pprint('CYAN', 'Removing old doxygen documentation installation done.')\n            Logs.pprint('CYAN', 'Installing doxygen documentation...')\n            shutil.copytree(html_build_dir, html_install_dir)\n            Logs.pprint('CYAN', 'Installing doxygen documentation done.')\n        elif bld.cmd == 'uninstall':\n            Logs.pprint('CYAN', 'Uninstalling doxygen documentation...')\n            if os.path.isdir(share_dir):\n                shutil.rmtree(share_dir)\n            Logs.pprint('CYAN', 'Uninstalling doxygen documentation done.')\n        elif bld.cmd == 'clean':\n            if os.access(html_build_dir, os.R_OK):\n                Logs.pprint('CYAN', 'Removing doxygen generated documentation...')\n                shutil.rmtree(html_build_dir)\n                Logs.pprint('CYAN', 'Removing doxygen generated documentation done.')\n\n\n@TaskGen.extension('.mm')\ndef mm_hook(self, node):\n    \"\"\"Alias .mm files to be compiled the same as .cpp files, gcc will do the right thing.\"\"\"\n    return self.create_compiled_task('cxx', node)\n"
        }
      ]
    }
  ]
}