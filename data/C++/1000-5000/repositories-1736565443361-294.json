{
  "metadata": {
    "timestamp": 1736565443361,
    "page": 294,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PurpleI2P/i2pd",
      "stars": 3322,
      "defaultBranch": "openssl",
      "files": [
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 0.0654296875,
          "content": "((c++-mode . ((indent-tabs-mode . t)))\n (c-mode . ((mode . c++))))\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.53125,
          "content": "# editorconfig.org\n\nroot = true\n\n[*]\n# Unix style files\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[Makefile,Makefile.*]\nindent_style = tab\nindent_size = 4\n\n[*.cmd]\nindent_style = space\nindent_size = 2\nend_of_line = crlf\n\n[*.{h,cpp}]\nindent_style = tab\nindent_size = 4\n\n[*.rc]\nindent_style = space\nindent_size = 4\n\n[*.{md,markdown}]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[*.patch]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0302734375,
          "content": "/build/build_mingw.cmd eol=crlf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.1875,
          "content": "# i2pd\n*.o\nrouter.info\nrouter.keys\ni2p\nnetDb\n/i2pd\n/libi2pd.a\n/libi2pdclient.a\n/libi2pdlang.a\n/libi2pd.so\n/libi2pdclient.so\n/libi2pdlang.so\n/libi2pd.dll\n/libi2pdclient.dll\n/libi2pdlang.dll\n*.exe\n\n\n# Autotools\nautom4te.cache\n.deps\nstamp-h1\n#Makefile\nconfig.h\nconfig.h.in~\nconfig.log\nconfig.status\nconfig.sub\n\n#################\n## Eclipse\n#################\n\n*.pydevproject\n.project\n.metadata\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.classpath\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# PDT-specific\n.buildpath\n\n\n#################\n## Visual Studio\n#################\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n\n[Dd]ebug/\n[Rr]elease/\nx64/\n[Bb]in/\n[Oo]bj/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.log\n*.scc\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n.*crunch*.local.xml\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.Publish.xml\n*.pubxml\n\n# NuGet Packages Directory\n## TODO: If you have NuGet Package Restore enabled, uncomment the next line\n#packages/\n\n# Windows Azure Build Output\ncsx\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.[Pp]ublish.xml\n*.pfx\n*.publishsettings\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\nApp_Data/*.mdf\nApp_Data/*.ldf\n\n#############\n## Windows detritus\n#############\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Mac crap\n.DS_Store\n\n\n#############\n## Python\n#############\n\n*.py[co]\n\n# Packages\n*.egg\n*.egg-info\ndist/\neggs/\nparts/\nvar/\nsdist/\ndevelop-eggs/\n.installed.cfg\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n\n# Sphinx\ndocs/_build\n/androidIdea/\n\n# Doxygen\ndocs/generated\n\n# emacs files\n*~\n*\\#*\n\n# gdb files\n.gdb_history\n\n# cmake makefile\nbuild/Makefile\n\n# debian stuff\ndebian/i2pd.1.gz\n.pc/\n\n# qt \n\nqt/i2pd_qt/*.autosave\nqt/i2pd_qt/*.ui.bk*\nqt/i2pd_qt/*.ui_*\n\n#unknown android stuff\nandroid/libs/\n\n#various logs\n*LOGS/\n\nqt/build-*.sh*\n\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 43.97265625,
          "content": "# for this file format description,\n# see https://github.com/olivierlacan/keep-a-changelog\n\n## [2.55.0] - 2024-12-30\n### Added\n- Support boost 1.87\n- \"i2p.streaming.maxConcurrentStreams\" tunnel's param to limit number of simultaneous streams\n- Separate thread for tunnel build requests\n- Show next peer and connectivity on \"Transit tunnels\" page\n- Tunnel name for local destination thread\n- Throttle incoming ECIESx25519 sessions\n- Send tunnel data to transport session directly if possible\n- Publish 'R' cap for yggdrasil-only routers, and 'U' cap for routers through proxy\n- Random tunnel rejection when medium congestion\n- Save unreachable router's endpoint to use it next time without introducers\n- Recognize symmetric NAT from peer test message 7\n- Resend HolePunch and RelayResponse messages\n### Changed\n- Removed own implementation of AESNI and always use one from openssl\n- Renamed main thread to i2pd-daemon\n- Set i2p.streaming.profile=2 for shared local destination\n- Reduced LeaseSet and RouterInfo lookup timeouts\n- Cleanup ECIES sessions and tags more often\n- Check LeaseSet expiration time\n- Handle NTCP2 session handshakes in separate thread\n- Limit last decline time by 1.5 hours in router's profile\n- Don't handle RelayRequest and RelayIntro with same nonce twice\n- Increased hole punch expiration interval\n- Send peer test message 6 with delay if message 4 was received before message 5\n- Pre-calculate more x25519 keys for transports in runtime\n- Don't request LeaseSet for incoming stream\n- Terminate incoming stream right away if no remote LeaseSet\n- Handle choked, new RTO and window size calculation and resetting algorithm for streams\n### Fixed\n- Empty string in addressbook subscriptions\n- ECIESx25519 sessions without destination\n- Missing RouterInfo buffer in NetDb\n- Invalid I2PControl certificate\n- Routers disappear from NetDb when offline\n- Peer test message 6 sent to unknown endpoint\n- Race condition with LeaseSet update\n- Excessive CPU usage by streams\n- Crash on shutdown\n\n## [2.54.0] - 2024-10-06\n### Added\n- Maintain recently connected routers list to avoid false-positive peer test\n- Limited connectivity mode(through proxy)\n- \"i2p.streaming.profile\" tunnel's param to let tunnel select also low-bandwidth routers\n- Limit stream's inbound speed\n- Periodic ack requests in ratchets session\n- Set congestion cap G immediately if through proxy\n- Show tunnel's routers bandwidth caps in web console\n- Handle immediate ack requested flag in SSU2 data packets\n- Resend and ack peer test and relay messages\n- \"senduseragent\" HTTP proxy's param to pass through user's User-Agent\n### Changed\n- Exclude 'N' routers from high-bandwidth routers for client tunnels\n- C++11 support has been dropped, the minimal requirement is C++17 now, C++20 for some compilers\n- Removed dependency from boost::date_time and boost::filesystem\n- Set default i2cp.leaseSetEncType to 0,4 and to 4 for server tunnels\n- Handle i2cp.inboundlimit and i2cp.outboundlimit params in I2CP\n- Publish LeaseSet with new timestamp update if tunnel was replaced in the same second\n- Increase max number of generated tags to 800 per tagset\n- Routing path expiration by time instead num attempts \n- Save timestamp from epoch instead local time to profiles\n- Update introducer's iTag if session to introducer was replaced to new one\n- RTT, window size and number of NACKs calculation for streaming\n- Don't select same peer for tunnel too often\n- Use WinApi for data path UTF-8 conversion for Windows \n### Fixed\n- Jump link crash if address book is disabled\n- Race condition if connect through an introducer\n- \"Date\" header in I2PControl response\n- Incomplete response from web console\n- AEAD verification with LibreSSL\n- Number of generated tags and new keys for follow-on tagsets\n- Expired leases in LeaseSet\n- Attempts to send HolePunch to 0.0.0.0\n- Incorrect options size in quick ack streaming packet\n- Low bandwidth router appeared as first peer in high-bandwidth client tunnel\n\n## [2.53.1] - 2024-07-29\n### Changed\n- I2CP performance improvement\n### Fixed\n- 100% CPU usage after I2CP/SAM/BOB session termination\n- Incorrect client limits returned through I2CP\n- Build with LibreSSL\n\n## [2.53.0] - 2024-07-19\n### Added\n- New congestion control algorithm for streaming\n- Support miniupnp-2.2.8\n- Limit stream's outbound speed\n- Flood to next day closest floodfills before UTC midnight\n- Recognize duplicated routers and bypass them\n- Random SSU2 resend interval\n### Changed\n- Set minimal version to 0.9.69 for floodfills and 0.9.58 for client tunnels\n- Removed openssl 1.0.2 support\n- Move unsent I2NP messages to the new session if replaced\n- Use mt19937 RNG instead rand()\n- Update router's congestion caps before initial publishing\n- Don't try introducer with invalid address\n- Select newest introducers to publish\n- Don't request relay tag for every session if we have enough introducers\n- Update timestamp for non-reachable or hidden router\n- Reset streaming routing path if duplicated SYN received\n- Update LeaseSet if inbound tunnel failed\n- Reseeds list\n### Fixed\n- Crash when a destination gets terminated\n- Expired offline signature upon destination creation\n- Race condition between local RouterInfo buffer creation and sending it through the transports\n\n## [2.52.0] - 2024-05-12\n### Added\n- Separate threads for persisting RouterInfos and profiles to disk\n- Give preference to address with direct connection\n- Exclude addresses with incorrect static or intro key\n- Avoid two firewalled routers in the row in tunnel\n- Drop unsolicited database search replies\n### Changed\n- Increase number of hashes to 16 in exploratory lookup reply\n- Reduce number of a RouterInfo lookup attempts to 5\n- Reset stream RTO if outbound tunnel was changed\n- Insert previously excluded floodfill back when successfully connected\n- Increase maximum stream resend attempts to 9\n- Reply to exploratory lookups with only confirmed routers if low tunnel build rate\n- Don't accept too old RouterInfo\n- Build client tunnels through confirmed routers only if low tunnel build rate\n- Manage netDb requests more frequently\n- Don't reply with closer than us only floodfills for lookup\n### Fixed\n- Crash on router lookup if exploratory pool is not ready\n- Race condition in excluded peers for next lookup\n- Excessive number of lookups for same destination\n- Race condition with transport peers during shutdown\n- Corrupted RouterInfo files\n\n## [2.51.0] - 2024-04-06\n### Added\n- Non-blocking mode for UDP sockets\n- Set SSU2 socket buffer size based on bandwidth limit\n- Encrypted tunnel tests\n- Support for multiple UDP server tunnels on one destination\n- Publish medium congestion indication\n- Local domain sockets for SOCKS proxy upstream\n- Tunnel status \"declined\" in web console\n- SAM error reply \"Incompatible crypto\" if remote destination has incompatible crypto\n- Reduce amount of traffic by handling local message drops\n- Keep SSU2 socket open even if it fails to bind\n- Lower SSU2 resend traffic spikes\n- Expiration for messages in SSU2 send queue\n- Use EWMA for stream RTT estimation\n- Request choking delay if too many NACKs in stream\n- Allow 0ms latency for tunnel\n- Randomize tunnels selection for tests\n### Changed\n- Upstream SOCKS proxy from SOCKS4 to SOCKS5\n- Transit tunnels limit to 4 bytes. Default value to 10K\n- Reply CANT_REACH_PEER if connect to ourselves in SAM\n- Don't send already expired I2NP messages\n- Use monotonic timer to measure tunnel test latency\n- Standard NTCP2 frame doesn't exceed 16K\n- Always send request through tunnels in case of restricted routes\n- Don't delete connected routers from NetDb\n- Send lookup reply directly to reply tunnel gateway if possible\n- Reduce unreachable router ban interval to 8 minutes\n- Don't request banned routers / don't try to connect to unreachable router\n- Consider 'M' routers as low bandwidth\n- Limit minimal received SSU2 packet size to 40 bytes\n- Bob picks peer test session only if Charlie's address supports peer testing\n- Reject peer test msg 2 if peer testing is not supported\n- Don't request termination if SSU2 session was not established\n- Set maximum SSU2 queue size depending on RTT value\n- New streaming RTT calculation algorithm\n- Don't double initial RTO for streams when changing tunnels\n- Restore failed tunnel if test or data for inbound tunnel received\n- Don't fail last remaining tunnel in pool\n- Publish LeasetSet again if local destination was not ready or no tunnels\n- Make more attempts to pick high bandwidth hop for client tunnel\n- Reduced SSU2 session termination timeout to 165 seconds\n- Reseeds list\n### Fixed\n- ECIESx25519 symmetric key tagset early expiration\n- Encrypted LeaseSet lookup\n- Outbound tunnel build fails if it's endpoint is the same as reply tunnel gateway\n- I2PControl RouterManager returns invalid JSON when unknown params are passed\n- Mix of data between different UDP sessions on the same server\n- TARGET_OS_SIMULATOR check\n- Handling of \"reservedrange\" param\n- New NTCP2 session gets teminated upon termination of old one\n- New SSU2 session gets teminated upon termination of old one\n- Peer test to non-supporting router\n- Streaming ackThrough off 1 if number of NACKs exceeds 255\n- Race condition in ECIESx25519 tags table\n- Good tunnel becomes failed\n- Crash when packet comes to terminated stream\n- Stream hangs during LeaseSet update\n\n## [2.50.2] - 2024-01-06\n###Fixed\n- Crash with OpenSSL 3.2.0\n- False positive clock skew detection\n\n## [2.50.1] - 2023-12-23\n###Fixed\n- Support for new EdDSA usage behavior in OpenSSL 3.2.0\n\n## [2.50.0] - 2023-12-18\n### Added\n- Support of concurrent ACCEPTs on SAM 3.1\n- Haiku OS support\n- Low bandwidth and far routers can expire before 1 hour\n### Changed\n- Don't pick too active peer for first hop\n- Try peer test again if status is Unknown\n- Send peer tests with random delay\n- Reseeds list\n### Fixed\n- XSS vulnerability in addresshelper\n- Publishing NAT64 ipv6 addresses\n- Deadlock in AsyncSend callback\n\n## [2.49.0] - 2023-09-18\n### Added\n- Handle SOCK5 authorization with empty user/password\n- Drop incoming transport sessions from too old or from future routers\n- Memory pool for router profiles\n- Allow 0 hops in explicitPeers\n### Changed\n- Separate network and testing status\n- Remove AVX code\n- Improve NTCP2 transport session logging\n- Select router with ipv4 for tunnel endpoint\n- Consider all addresses non-published for U and H routers even if they have host/port\n- Don't pick completely unreachable routers for tunnels\n- Exclude SSU1 introducers from SSU2 addresses\n- Don't create paired inbound tunnel if length is different\n- Remove introducer from RouterInfo after 60 minutes\n- Reduce SSU2 keep alive interval and add keep alive interval variance\n- Don't pick too old sessions for introducer\n### Fixed\n- Version of the subnegotiation in user/password SOCKS5 response\n- Send keepalive for existing session with introducer\n- Buffer offset for EVP_EncryptFinal_ex() to include outlen\n- Termination block size processing for transport sessions\n- Crash if deleted BOB destination was shared between few BOB sessions\n- Introducers with zero tag\n- Padding for SSU2 path response\n\n## [2.48.0] - 2023-06-12\n### Added\n- Allow user/password authentication method for SOCK5 proxy\n- Publish reject all congestion cap 'G' if transit is not accepted\n- 'critical' log level\n- Print b32 on webconsole destination page\n- Webconsole button to drop a remote LeaseSet\n- limits.zombies param - minimum percentage of successfully created tunnels for routers cleanup\n- Recognize real routers if successfully connected or responded to tunnel build request\n### Changed\n- Bypass slow transport sessions for first hop selection\n- Limit AESNI inline asm to x86/x64\n- Create smaller I2NP packets if possible\n- Make router unreachable if AEAD tag verification fails in SessionCreated\n- Don't include a router to floodfills list until it's confirmed as real\n- Drop LeaseSet store request if not floodfill\n- Bypass medium congestion('D') routers for client tunnels\n- Publish encrypted RouterInfo through tunnels\n- Check if s is valid x25519 public key\n- Check if socket is open before sending data in SSU2\n### Fixed\n- Webconsole empty page if destination is not found\n- i2p.streaming.answerPings param\n- Reload tunnels\n- Address caps for unspecified ipv6 address\n- Incomplete HTTP headers in I2P tunnels\n- SSU2 socket network exceptions on Windows\n- Use of 'server' type tunnel port as inport (#1936)\n\n## [2.47.0] - 2023-03-11\n### Added\n- Congestion caps\n- SAM UDP port parameter\n- Support domain addresses for yggdrasil reseeds\n### Changed\n- DHT for floodfills instead plain list\n- Process router's messages in separate thread\n- Don't publish non-reachable router\n- Send and check target destination in first streaming SYN packet\n- Reseeds list\n### Fixed\n- Memory leak in windows network state detection\n- Reseed attempts from invalid address\n\n## [2.46.1] - 2023-02-20\n### Fixed\n- Race condition while getting router's peer profile\n- Creation of new router.info\n- Displaying LeaseSets in the webconsole\n- Crash when processing ACK request\n\n## [2.46.0] - 2023-02-15\n### Added\n- Limit number of acked SSU2 packets to 511\n- Localization to Swedish, Portuguese, Turkish, Polish\n- Periodically send Datetime block in NTCP2 and SSU2\n- Don't select random port from reserved\n- In memory table for peer profiles\n- Store if router was unreachable in it's peer profile\n- Show IPv6 addresses in square brackets in webconsole\n- Check referer when processing Addresshelper\n### Changed\n- Algorithm for tunnel creation success rate calculation\n- Drop incoming NTCP2 and SSU2 connection if published IP doesn't match actual endpoint\n- Exclude actually unreachable router from netdb for 2 hours\n- Select first hop from high bandwidth peers for client tunnels\n- Drop too long or too short LeaseSet\n- Delete router from netdb if became invalid after update\n- Terminate existing session if clock skew detected\n- Close previous UDP socket if open before reopening\n- Minimal version for floodfill is 0.9.51\n- Sort transports by endpoints in webconsole\n### Fixed\n- Deadlock during processing I2NP block with Garlic in ECIES encrypted message to router\n- Race condition with encrypted LeaseSets\n- HTTP query detection\n- Connection attempts to IPs from invalid ranges\n- Publish \"0.0.0.0\" in RouterInfo\n- Crash upon receiving PeerTest 7\n- Tunnels for closed SAM session socket\n- Missing NTCP2 address in RouterInfo if enabled back\n\n## [2.45.1] - 2023-01-11\n### Added\n- Full Cone NAT status error\n### Changed\n- Drop duplicated I2NP messages in SSU2\n- Set rejection code 30 if tunnel with id already exists\n- Network status is always OK if peer test msg 5 received\n### Fixed\n- UPnP crash if SSU2 or NTCP2 is disabled\n- Crash on termination for some platforms\n\n## [2.45.0] - 2023-01-03\n### Added\n- Test for Symmetric NAT with peer test msgs 6 and 7\n- Webconsole \"No Descriptors\" router error state\n- 1 and 15 seconds bandwidth calculation for i2pcontrol\n- Show non-zero send queue size for transports in web console\n- Compressible padding for I2P addresses\n- Localization to Czech\n- Don't accept incoming session from invalid/reserved addresses for NTCP2 and SSU2\n- Limit simultaneous tunnel build requests by 4 per pool\n### Changed\n- Removed SSU support\n- Reduced bandwidth calculation interval from 60 to 15 seconds\n- Increased default max transit tunnels number from 2500 to 5000 or 10000 for floodfill\n- Transit tunnels limit is doubled if floodfill mode is enabled\n- NTCP2 and SSU2 timestamps are rounded to seconds\n- Drop RouterInfos and LeaseSets with timestamp from future\n- Don't delete unreachable routers if tunnel creation success rate is too low\n- Refuse duplicated incoming pending NTCP2 session from same IP\n- Don't send SSU2 termination again if termination received block received\n- Handle standard network error for SSU2 without throwing an exception\n- Don't select overloaded peer for next tunnel\n- Remove \"X-Requested-With\" in HTTP Proxy for non-AJAX requests\n### Fixed\n- File descriptors leak\n- Random crash on AddressBook update\n- Crash if incorrect LeaseSet size\n- Spamming to log if no descriptors\n- ::1 address in RouterInfo\n- SSU2 network error handling (especially for Windows)\n- Race condition with pending outgoing SSU2 sessions\n- RTT self-reduction for long-live streams\n\n## [2.44.0] - 2022-11-20\n### Added\n- SSL connection for server I2P tunnels\n- Localization to Italian and Spanish\n- SSU2 through SOCKS5 UDP proxy\n- Reload tunnels through web console\n- SSU2 send immediate ack request flag\n- SSU2 send and verify path challenge\n- Configurable ssu2.mtu4 and ssu2.mtu6\n### Changed\n- SSU2 is enabled and SSU is disabled by default\n- Separate network status and error\n- Random selection between NTCP2 and SSU2 priority\n- Added notbob.i2p to jump services\n- Remove DoNotTrack flag from HTTP Request header\n- Skip addresshelper page if destination was not changed\n- SSU2 allow different ports from RelayReponse and HolePunch\n- SSU2 resend PeerTest msg 1 and msg 2\n- SSU2 Send Retry instead SessionCreated if clock skew detected\n### Fixed\n- Long HTTP headers for HTTP proxy and HTTP server tunnel\n- SSU2 resends and resend limits\n- Crash at startup if addressbook is disabled\n- NTCP2 ipv6 connection through SOCKS5 proxy\n- SSU2 SessionRequest with zero token\n- SSU2 MTU less than 1280\n- SSU2 port=1\n- Incorrect addresses from network interfaces\n- Definitions for Darwin PPC; do not use pthread_setname_np\n\n## [2.43.0] - 2022-08-22\n### Added\n- Complete SSU2 implementation\n- Localization to Chinese\n- Send RouterInfo update for long live sessions\n- Explicit ipv6 ranges of known tunnel brokers for MTU detection\n- Always send \"Connection: close\" and strip out Keep-Alive for server HTTP tunnel\n- Show ports for all transports in web console\n- Translation of webconsole site title\n- Support for Windows ProgramData path when running as service\n- Ability to turn off address book\n- Handle signals TSTP and CONT to stop and resume network\n### Changed\n- Case insensitive headers for server HTTP tunnel\n- Do not show 'Address registration' line if LeaseSet is encrypted\n- SSU2 transports have higher priority than SSU\n- Disable ElGamal precalculated table if no SSU\n- Deprecate limits.ntcpsoft, limits.ntcphard and limits.ntcpthreads config options\n- SSU2 is enabled and SSU is disabled by default for new installations\n### Fixed\n- Typo with Referer header name in HTTP proxy\n- Can't handle garlic message from an exploratory tunnel\n- Incorrect encryption key for exploratory lookup reply\n- Bound checks issues in LeaseSets code\n- MTU detection on Windows\n- Crash on stop of active server tunnel\n- Send datagram to wrong destination in SAM\n- Incorrect static key in RouterInfo if the keys were regenerated\n- Duplicated sessions in BOB\n\n## [2.42.1] - 2022-05-24\n### Fixed\n- Incorrect jump link in HTTP Proxy\n\n## [2.42.0] - 2022-05-22\n### Added\n- Preliminary SSU2 implementation\n- Tunnel length variance\n- Localization to French\n- Daily cleanup of obsolete peer profiles\n- Ordered jump services list in HTTP proxy\n- Win32 service\n- Show port for local non-published SSU addresses in web console\n### Changed\n- Maximum RouterInfo length increased to 3K\n- Skip unknown addresses in RouterInfo\n- Don't pick own router for peer test\n- Reseeds list\n- Internal numeric id for families\n- Use ipv6 preference only when netinet headers not used\n- Close stream if delete requested\n- Remove version from title in web console\n- Drop MESHNET build option\n- Set data path before initialization\n- Don't show registration block in web console if token is not provided\n### Fixed\n- Encrypted LeaseSet for EdDSA signature\n- Clients tunnels are not built if clock is not synced on start\n- Incorrect processing of i2cp.dontPublishLeaseSet param\n- UDP tunnels reload\n- Build for LibreSSL 3.5.2\n- Race condition in short tunnel build message\n- Race condition in local RouterInfo buffer allocation\n\n## [2.41.0] - 2022-02-20\n### Added\n- Clock syncronization through SSU\n- Drop routers older than 6 months on start\n- Localization to German\n- Don't send streaming ack too frequently\n- Select compatible outbound tunnel for I2CP messages\n- Restart webconsole's acceptor in case of exception\n### Changed\n- Use builtin bitswap for endian on windows\n- Send SessionCreated before connection close if clock skew\n- Try another floodfill for publishing if no compatible tunnels found\n- Reduce memory usage for RouterInfo structures\n- Avoid duplicated addresses in RouterInfo. Check presence of netId and version\n- Use TCP/IP sockets for I2CP on Android instead local sockets\n- Return uptime as integer in I2PControl\n- Reseed servers list/cerificates\n- Webconsole's dark style colors\n### Fixed\n- Attempt to use Yggdrasil on start on Android\n- Attempts to send peer tests to itself\n- Severe packets drop in SSU\n- Crash on tunnel tests\n- Loading addressbook subscriptions from config\n- Multiple I2CP session to the same destination\n- Build on Apple Silicon\n\n## [2.40.0] - 2021-11-29\n### Added\n- Keep alive parameter for client tunnels\n- Support openssl 3.0.0\n- Localization to Armenian\n- Show git commit info in version\n- Windows menu item for opening datadir\n- Reseed if too few floodfills\n- Don't publish old and replacing tunnel in LeaseSet\n- Webconsole light/dark theme depending on system settings (via CSS)\n### Changed\n- Set gzip compression to false by default\n- Build tunnel through ECIES routers only\n- Removed ElGamal support for tunnels\n- Moved webconsole resources to separate file\n- Pick tunnels with compatible transport with another tunnel of floodfill\n- Use common cleanup timer for all SSU sessions\n- Reduced memory usage\n- Reseed servers list\n- i18n code called from ClientContext\n### Fixed\n- Tunnels reload\n- Some typos in log messages\n- Cleanup relay requests table\n- Server tunnel is not published\n- Build on GNU/Hurd. Disable pthread_setname_np\n- Crash when incorrect sigtype used with blinding\n\n## [2.39.0] - 2021-08-23\n### Added\n- Short tunnel build messages\n- Localization. To: Russian, Ukrainian, Turkmen, Uzbek and Afrikaans\n- Custom CSS styles for webconsole\n- Avoid slow tunnels with more than 250 ms per hop\n- Process DELAY_REQUESTED streaming option\n- \"certsdir\" options for certificates location\n- Keep own RouterInfo in NetBb\n- Pick ECIES routers only for tunnels on non-x64\n- NTP sync through ipv6\n- Allow ipv6 addresses for UDP server tunnels\n### Changed\n- Rekey of all routers to ECIES\n- Better distribution for random tunnel's peer selection\n- Yggdrasil reseed for v0.4, added two more\n- Encryption type 0,4 by default for server tunnels\n- Handle i2cp.dontPublishLeaseSet param for all destinations\n- reg.i2p for subscriptions\n- LeaseSet type 3 by default\n- Don't allocate payload buffer for every single ECIESx25519 message\n- Prefer public ipv6 instead rfc4941\n- Optimal padding for one-time ECIESx25519 message\n- Don't send datetime block for one-time ECIESx25519 message with one-time key\n- Router with expired introducer is still valid\n- Don't disable floodfill if still reachable by ipv6\n- Set minimal version for floodfill to 0.9.38\n- Eliminate extra lookups for sequential fragments on tunnel endpoint\n- Consistent path for explicit peers\n- Always create new tunnel from exploratory pool\n- Don't try to connect to a router not reachable from us\n- Mark additional ipv6 addresses/nets as reserved (#1679)\n### Fixed\n- Zero-hop tunnels\n- Crash upon SAM session termination\n- Build with boost < 1.55.0\n- Address type for NTCP2 acceptors\n- Check of ipv4/ipv6 address\n- Request router to send to if not in NetDb\n- Count outbound traffic for zero-hop tunnels\n- URLdecode domain for registration string generator in webconsole\n\n## [2.38.0] - 2021-05-17\n### Added\n- Publish ipv6 introducers\n- Bind ipv6 or yggdrasil NTCP2 acceptor to specified address\n- Support .b32.i2p addresses and hostnames for SAM STREAM CREATE\n- ipv6 peer tests\n- Publish iexp param for introducers\n- Show ipv6 network status on the webconsole\n- EdDSA signing keys can also be blinded\n- Show router version on the webconsole\n### Changed\n- Rekey of all routers but floodfills to ECIES\n- Increased number of precalculated x25519 keys to 15\n- Don't publish LeaseSet without inbound tunnels\n- Reseed from compatible address(ipv4 or ipv6)\n- Recongnize v4 and v6 SSU addresses without host\n- Inbound tunnel gateway must be ipv4 compatible\n- Don't select next introducers from existing sessions\n- Set X bandwidth for floodfill by default\n### Fixed\n- Incoming ECIES-x25519 session doesn't send updated LeaseSet\n- Unique local address for server tunnels\n- Race condition for LeaseSet creation in I2CP\n- Relay tag for ipv6 introducer\n- Already expired introducers\n- Find connected router for first peer in tunnel\n- Failed outgoing ECIES-x25519 session's tagset stays forever\n- Yggdrasil address disappears if router becomes unreachable through ipv6\n- Ignore SSU address/introducers if port is not specified\n- Check identity and signature length for SSU SessionConfirmed\n\n## [2.37.0] - 2021-03-15\n### Added\n- Address registration line for reg.i2p and stats.i2p through the web console\n- \"4\" and \"6\" caps for addresses without published IP address\n- Mesh and Proxy network statuses\n- Symmetric NAT network status error\n- Bind server tunnel connection to specified address\n- lookuplocal BOB extended command\n- address4 and address6 parameters to bind outgoing connections to\n- Rekey of low-bandwidth routers to ECIES\n- Popup notification windows when unable to parse config for Windows\n### Changed\n- Floodfills with \"U\" cap are not ignored anymore\n- Check transports reachability between tunnel peers and between router and floodfill\n- NTCP2 and reseed HTTP proxy support authorization now\n- Show actual IP addresses for proxy connections\n- Publish and handle SSU addreses without host\n- Outbound tunnel endpoint must be ipv4 compatible\n- Logging optimization\n- Removed Windows service\n### Fixed\n- Incoming SSU session terminates after 5 seconds\n- Outgoing NTCP2 ipv4 session even if ipv4 is disabled\n- No incoming Yggdrasil connection if connected through NTCP2 proxy\n- Race condition between tunnel build and floodfill requests decryption for ECIES routers\n- Numeric bandwidth limitation\n- Yggdrasil for Android\n\n## [2.36.0] - 2021-02-15\n### Added\n- Encrypted lookup and publications to ECIES-x25519 floodfiils\n- Yggdrasil transports and reseeds\n- Dump addressbook in hosts.txt format\n- Request RouterInfo through exploratory tunnels if direct connection to fllodfill is not possible\n- Threads naming\n- Check if public x25519 key is valid\n- ECIES-X25519-AEAD-Ratchet for shared local destination\n- LeaseSet creation timeout for I2CP session\n- Resend RouterInfo after some interval for longer NTCP2 sessions\n- Select reachable router of inbound tunnel gateway\n- Reseed if no compatible routers in netdb\n- Refresh on swipe in Android webconsole\n### Changed\n- reg.i2p for default addressbook instead inr.i2p\n- ECIES-x25519 (crypto type 4) for new routers\n- Try to connect to all compatible addresses from peer's RouterInfo\n- Replace LeaseSet completely if store type changes\n- Try ECIES-X25519-AEAD-Ratchet tag before ElGamal\n- Don't detach ECIES-X25519-AEAD-Ratchet session from destination immediately\n- Viewport and styles on error in HTTP proxy\n- Don't create notification when Windows taskbar restarted\n- Cumulative SSU ACK bitfields\n- limit tunnel length to 8 hops\n- Limit tunnels quantity to 16\n### Fixed\n- Handling chunked HTTP response in addressbook\n- Missing ECIES-X25519-AEAD-Ratchet tags for multiple streams with the same destination\n- Correct NAME for NAMING REPLY in SAM\n- SSU crash on termination\n- Offline signature length for stream close packet\n- Don't send updated LeaseSet through a terminated session\n- Decryption of follow-on ECIES-X25519-AEAD-Ratchet NSR messages\n- Non-confirmed LeaseSet is resent too late for ECIES-X25519-AEAD-Ratchet session\n\n## [2.35.0] - 2020-11-30\n### Added\n- ECIES-x25519 routers\n- Random intro keys for SSU\n- Graceful shutdown timer for windows\n- Send queue for I2CP messages\n- Update DSA router keys to EdDSA\n- TCP_QUICKACK for NTCP2 sockets on Linux\n### Changed\n- Exclude floodfills with DSA signatures and < 0.9.28\n- Random intervals between tunnel tests and manage for tunnel pools\n- Don't replace an addressbook record by one with DSA signature\n- Publish RouterInfo after update\n- Create paired inbound tunnels if no inbound tunnels yet\n- Reseed servers list\n### Fixed\n- Transient signature length, if different from identity\n- Terminate I2CP session if destroyed\n- RouterInfo publishing confirmation\n- Check if ECIES-X25519-AEAD-Ratchet session expired before generating more tags\n- Correct block size for delivery type local for ECIES-X25519-AEAD-Ratchet\n\n## [2.34.0] - 2020-10-27\n### Added\n- Ping responses for streaming\n- STREAM FORWARD for SAM\n- Tunnels through ECIES-x25519 routers\n- Single thread for I2CP\n- Shared transient destination between proxies\n- Database lookups from ECIES destinations with ratchets response\n- Handle WebDAV HTTP methods\n- Don't try to connect or build tunnels if offline\n- Validate IP when trying connect to remote peer\n- Handle ICMP responses and WinAPI errors for SSU\n### Changed\n- Removed NTCP\n- Dropped gcc 4.7 support\n- Encyption type 0,4 by default for client tunnels\n- Stripped out some HTTP header for HTTP server response\n- HTTP 1.1 addressbook requests\n- Set LeaseSet type to 3 for ratchets if not specified\n- Handle SSU v4 and v6 messages in one thread\n- Eliminate DH keys thread\n### Fixed\n- Random crashes on I2CP session disconnect\n- Stream through racthets hangs if first SYN was not acked\n- Check \"Last-Modified\" instead \"If-Modified-Since\" for addressbook reponse\n- Trim behind ECIESx25519 tags\n- Few bugs with Android main activity\n- QT visual and layout issues\n\n## [2.33.0] - 2020-08-24\n### Added\n- Shared transient addresses\n- crypto.ratchet.inboundTags paramater\n- Multiple encryption keys through I2CP\n- Pre-calculated x25519 ephemeral keys\n- Change datagram routing path if nothing comes back in 10 seconds\n- Shared routing path for datagram session\n### Changed\n- UDP tunnels send mix of repliable and raw datagrams in bulk\n- Encrypt SSU packet again upon resend\n- Start new tunnel message if remaining buffer is too small\n- Use LeaseSet2 for ECIES-X25519-AEAD-Ratchet automatically\n- Save new ECIES-X25519-AEAD-Ratchet session with NSR tagset\n- Generate random padding lengths for ECIES-X25519-AEAD-Ratchet in bulk\n- Webconsole layout\n- Reseed servers list\n### Fixed\n- Don't connect through terminated SAM destination\n- Differentiate UDP server sessions by port\n- ECIES-X25519-AEAD-Ratchet through I2CP\n- Don't save invalid address to AddressBook\n- ECDSA signatures names in SAM\n- AppArmor profile\n\n## [2.32.1] - 2020-06-02\n### Added\n- Read explicit peers in tunnels config\n### Fixed\n- Generation of tags for detached sessions\n- Non-updating LeaseSet1\n- Start when deprecated websocket options present in i2pd.conf\n\n## [2.32.0] - 2020-05-25\n### Added\n- Multiple encryption types for local destinations\n- Next key and tagset for ECIES-X25519-AEAD-Ratchet\n- NTCP2 through SOCKS proxy\n- Throw error message if any port to bind is occupied\n- gzip parameter for UDP tunnels\n- Show ECIES-X25519-AEAD-Ratchet sessions and tags on the web console\n- Simplified implementation of gzip for no compression mode\n- Allow ECIES-X25519-AEAD-Ratchet session restart after 2 minutes\n- Added logrotate config for rpm package\n### Changed\n- Select peers for client tunnels among routers >= 0.9.36\n- Check ECIES flag for encrypted lookup reply\n- Streaming MTU size 1812 for ECIES-X25519-AEAD-Ratchet\n- Don't calculate checksum for Data message send through ECIES-X25519-AEAD-Ratchet\n- Catch network connectivity status for Windows\n- Stop as soon as no more transit tunnels during graceful shutdown for Android\n- RouterInfo gzip compression level depends on size\n- Send response to received datagram from ECIES-X25519-AEAD-Ratchet session\n- Update webconsole functional\n- Increased max transit tunnels limit\n- Reseeds list\n- Dropped windows support in cmake\n### Fixed\n- Correct timestamp check for LeaseSet2\n- Encrypted leaseset without authentication\n- Change SOCKS proxy connection response for clients without socks5h support (#1336)\n\n## [2.31.0] - 2020-04-10\n### Added\n- NTCP2 through HTTP proxy\n- Publish LeaseSet2 for I2CP destinations\n- Show status page on main activity for android\n- Handle ECIESFlag in DatabaseLookup at floodfill\n- C++17 features for eligible compilers\n### Changed\n- Droped Websockets and Lua support\n- Send DeliveryStatusMsg for LeaseSet for ECIES-X25519-AEAD-Ratchet\n- Keep sending new session reply until established for ECIES-X25519-AEAD-Ratchet\n- Updated SSU log messages\n- Reopen SSU socket on exception\n- Security hardening headers in web console\n- Various web console changes\n- Various QT changes\n### Fixed\n- NTCP2 socket descriptors leak\n- Race condition with router's identity in transport sessions\n- Not terminated streams remain forever\n\n## [2.30.0] - 2020-02-25\n### Added\n- Single threaded SAM\n- Experimental support of ECIES-X25519-AEAD-Ratchet crypto type\n### Changed\n- Minimal MTU size is 1280 for ipv6\n- Use unordered_map instead map for destination's sessions and tags list\n- Use std::shuffle instead std::random_shuffle\n- SAM is single threaded by default\n- Reseeds list\n### Fixed\n- Correct termination of streaming destination\n- Extra ',' in RouterInfo response in I2PControl\n- SAM crash on session termination\n- Storage for Android 10\n\n## [2.29.0] - 2019-10-21\n### Added\n- Client auth flag for b33 address\n### Changed\n- Remove incoming NTCP2 session from pending list when established\n- Handle errors for NTCP2 SessionConfrimed send\n### Fixed\n- Failure to start on Windows XP\n- SAM crash if invalid lookup address\n- Possible crash when UPnP enabled on shutdown\n\n## [2.28.0] - 2019-08-27\n### Added\n- RAW datagrams in SAM\n- Publishing encrypted LeaseSet2 with DH or PSH authentication\n- Ability to disable battery optimization for Android\n- Transport Network ID Check\n### Changed\n- Set and handle published encrypted flag for LeaseSet2\n### Fixed\n- ReceiveID changes in the same stream\n- \"\\r\\n\" command terminator in SAM\n- Addressbook lines with signatures\n\n## [2.27.0] - 2019-07-03\n### Added\n- Support of PSK and DH authentication for encrypted LeaseSet2\n### Changed\n- Uptime is based on monotonic timer\n### Fixed\n- BOB status command response\n- Correct NTCP2 port if NTCP is disabled\n- Flood encrypted LeaseSet2 with store hash\n\n## [2.26.0] - 2019-06-07\n### Added\n- HTTP method \"PROPFIND\"\n- Detection of external ipv6 address through the SSU\n- NTCP2 publishing depends on network status\n### Changed\n- ntcp is disabled by default, ntcp2 is published by default\n- Response to BOB's \"list\" command\n- ipv6 address is not longer NTCP's local endpoint's address\n- Reseeds list\n- HTTP_REFERER stripping in httpproxy (#823)\n### Fixed\n- Check and handle incorrect BOB input\n- Ignore introducers for NTCP or NTCP2 addresses\n- RouterInfo check from NTCP2\n\n## [2.25.0] - 2019-05-09\n### Added\n- Create, publish and handle encrypted LeaseSet2\n- Support of b33 addresses\n- RedDSA key blinding\n- .b32.i2p addresses in jump links\n- ntcp2.addressv6 parameter\n### Changed\n- Allow HTTP headers without value\n- Set data directory from external storage path for Android\n- addresshelper support is configurable per tunnel\n- gradlew script for android build\n### Fixed\n- Deletion of expired encrypted LeaseSet2 on floodfills\n- ipv6 fallback address\n- SSU incoming packets routing\n\n## [2.24.0] - 2019-03-21\n### Added\n- Support of transient keys for LeaseSet2\n- Support of encrypted LeaseSet2\n- Recognize signature type 11 (RedDSA)\n- Support websocket connections over HTTP proxy\n- Ability to disable full addressbook persist\n### Changed\n- Don't load peer profiles if non-persistant\n- REUSE_ADDR for ipv6 acceptors\n- Reset eTags if addressbook can't be loaded\n### Fixed\n- Build with boost 1.70\n- Filter out unspecified addresses from RouterInfo\n- Check floodfill status change\n- Correct SAM response for invalid key\n- SAM crash on termination for Windows\n- Race condition for publishing\n\n## [2.23.0] - 2019-01-21\n### Added\n- Standard LeaseSet2 support\n- Ability to adjust timestamps through the NTP\n- Ability to disable peer profile persist\n- Request permission for android >= 6\n- Initial addressbook to android assets\n- Cancel graceful shutdown for android\n- Russian translation for android\n### Changed\n- Chacha20 and Poly1305 implementation\n- Eliminate extra copy of NTCP2 send buffers\n- Extract content of tunnel.d from assets on android\n- Removed name resolvers from transports\n- Update reseed certificates\n### Fixed\n- LeaseSet published content verification\n- Exclude invalid LeaseSets from the list on a floodfill\n- Build for OpenWrt with openssl 1.1.1\n\n## [2.22.0] - 2018-11-09\n### Added\n- Multiple tunnel config files from tunnels.d folder\n### Changed\n- Fetch own RouterInfo upon SessionRequest for NTCP2\n- Faster XOR between AES blocks for non AVX capable CPUs\n### Fixed\n- Fixed NTCP2 termination send\n\n## [2.21.1] - 2018-10-22\n### Changed\n- cost=13 for unpublished NTCP2 address\n### Fixed\n- Handle I2NP messages longer than 32K\n\n## [2.21.0] - 2018-10-04\n### Added\n- EdDSA, x25519 and SipHash from openssl 1.1.1\n- NTCP2 ipv6 incoming connections\n- Show total number of destination's outgoing tags in the web console\n### Changed\n- Android build with openssl 1.1.1/boost 1.64\n- Bandwidth classes 'P' and 'X' don't add 'O' anymore\n### Fixed\n- Update own RouterInfo if no SSU\n- Recognize 'P' and 'X' routers as high bandwidth without 'O'\n- NTCP address doesn't disappear if NTCP2 enabled\n- Android with api 26+\n\n## [2.20.0] - 2018-08-23\n### Added\n- Full implementation of NTCP2\n- Assets for android\n### Changed\n- armeabi-v7a and x86 in one apk for android\n- NTCP2 is enabled by default\n- Show lease's expiration time in readable format in the web console\n### Fixed\n- Correct names for transports in the web console\n\n## [2.19.0] - 2018-06-26\n### Added\n- ECIES support for RouterInfo\n- HTTP outproxy authorization\n- AVX/AESNI runtime detection\n- Initial implementation of NTCP2\n- I2CP session reconfigure\n- I2CP method ClientServicesInfo\n- Datagrams to websocks\n### Changed\n- RouterInfo uses EdDSA signature by default\n- Remove stream bans\n- Android build system changed to gradle\n- Multiple changes in QT GUI\n- Dockerfile\n### Fixed\n- zero tunnelID issue\n- tunnels reload\n- headers in webconsole\n- XSS in webconsole from SAM session name\n- build for gcc 8\n- cmake build scripts\n- systemd service files\n- some netbsd issues\n\n## [2.18.0] - 2018-01-30\n### Added\n- Show tunnel nicknames for I2CP destination in WebUI\n- Re-create HTTP and SOCKS proxy by tunnel reload\n- Graceful shutdown as soon as no more transit tunnels\n### Changed\n- Regenerate shared local destination by tunnel reload\n- Use transient local destination by default if not specified\n- Return correct code if pid file can't be created\n- Timing and number of attempts for adressbook requests\n- Certificates list\n### Fixed\n- Malformed addressbook subsctiption request\n- Build with boost 1.66\n- Few race conditions for SAM\n- Check LeaseSet's signature before update\n\n## [2.17.0] - 2017-12-04\n### Added\n- Reseed through HTTP and SOCKS proxy\n- Show status of client services through web console\n- Change log level through web connsole\n- transient keys for tunnels\n- i2p.streaming.initialAckDelay parameter\n- CRYPTO_TYPE for SAM destination\n- signature and crypto type for newkeys BOB command\n### Changed\n- Correct publication of ECIES destinations\n- Disable RSA signatures completely\n### Fixed\n- CVE-2017-17066\n- Possible buffer overflow for RSA-4096\n- Shutdown from web console for Windows\n- Web console page layout\n## [2.16.0] - 2017-11-13\n### Added\n- https and \"Connect\" method for HTTP proxy\n- outproxy for HTTP proxy\n- initial support of ECIES crypto\n- NTCP soft and hard descriptors limits\n- Support full timestamps in logs\n### Changed\n- Faster implementation of GOST R 34.11 hash\n- Reject routers with RSA signtures\n- Reload config and shudown from Windows GUI\n- Update tunnels address(destination) without restart\n### Fixed\n- BOB crashes if destination is not set\n- Correct SAM tunnel name\n- QT GUI issues\n\n## [2.15.0] - 2017-08-17\n### Added\n- QT GUI\n- Ability to add and remove I2P tunnels without restart\n- Ability to disable SOCKS outproxy option\n### Changed\n- Strip-out Accept-* hedaers in HTTP proxy\n- Don't run peer test if nat=false\n- Separate output of NTCP and SSU sessions in Transports tab\n### Fixed\n- Handle lines with comments in hosts.txt file for address book\n- Run router with empty netdb for testnet\n- Skip expired introducers by iexp\n\n## [2.14.0] - 2017-06-01\n### Added\n- Transit traffic bandwidth limitation\n- NTCP connections through HTTP and SOCKS proxies\n- Ability to disable address helper for HTTP proxy\n### Changed\n- Reseed servers list\n- Minimal required version is 4.0 for Android\n### Fixed\n- Ignore comments in addressbook feed\n\n## [2.13.0] - 2017-04-06\n### Added\n- Persist local destination's tags\n- GOST signature types 9 and 10\n- Exploratory tunnels configuration\n### Changed\n- Reseed servers list\n- Inactive NTCP sockets get closed faster\n- Some EdDSA speed up\n### Fixed\n- Multiple acceptors for SAM\n- Follow on data after STREAM CREATE for SAM\n- Memory leaks\n\n## [2.12.0] - 2017-02-14\n### Added\n- Additional HTTP and SOCKS proxy tunnels\n- Reseed from ZIP archive\n- Some stats in a main window for Windows version\n### Changed\n- Reseed servers list\n- MTU of 1488 for ipv6\n- Android and Mac OS X versions use OpenSSL 1.1\n- New logo for Android\n### Fixed\n- Multiple memory leaks\n- Incomptibility of some EdDSA private keys with Java\n- Clock skew for Windows XP\n- Occasional crashes with I2PSnark\n\n## [2.11.0] - 2016-12-18\n### Added\n- Websockets support\n- Reseed through a floodfill\n- Tunnel configuration for HTTP and SOCKS proxy\n- Zero-hops tunnels for destinations\n- Multiple acceptors for SAM\n### Changed\n- Reseed servers list\n- DHT uses AVX if applicable\n- New logo\n- LeaseSet lookups\n### Fixed\n- HTTP Proxy connection reset for Windows\n- Crash upon SAM session termination\n- Can't connect to a destination for a longer time after restart\n- Mass packet loss for UDP tunnels\n\n## [2.10.2] - 2016-12-04\n### Fixed\n- Fixes UPnP discovery bug, producing excessive CPU usage\n- Fixes sudden SSU thread stop for Windows.\n\n## [2.10.1] - 2016-11-07\n### Fixed\n- Fixed some performance issues for Windows and Android\n\n## [2.10.0] - 2016-10-17\n### Added\n- Datagram i2p tunnels\n- Unique local addresses for server tunnels\n- Configurable list of reseed servers and initial addressbook\n- Configurable netid\n- Initial iOS support\n\n### Changed\n- Reduced file descriptors usage\n- Strict reseed checks enabled by default\n\n## Fixed\n- Multiple fixes in I2CP and BOB implementations\n\n## [2.9.0] - 2016-08-12\n### Changed\n- Proxy refactoring & speedup\n- Transmission-I2P support\n- Graceful shutdown for Windows\n- Android without QT\n- Reduced number of timers in SSU\n- ipv6 peer test support\n- Reseed from SU3 file\n\n## [2.8.0] - 2016-06-20\n### Added\n- Basic Android support\n- I2CP implementation\n- 'doxygen' target\n\n### Changed\n- I2PControl refactoring & fixes (proper jsonrpc responses on errors)\n- boost::regex no more needed\n\n### Fixed\n- initscripts: added openrc one, in sysv-ish make I2PD_PORT optional\n- properly close NTCP sessions (memleak)\n\n## [2.7.0] - 2016-05-18\n### Added\n- Precomputed El-Gamal/DH tables\n- Configurable limit of transit tunnels\n\n### Changed\n- Speed-up of asymmetric crypto for non-x64 platforms\n- Refactoring of web-console\n\n## [2.6.0] - 2016-03-31\n### Added\n- Graceful shutdown on SIGINT\n- Numeric bandwidth limits (was: by router class)\n- Jumpservices in web-console\n- Logging to syslog\n- Tray icon for windows application\n\n### Changed\n- Logs refactoring\n- Improved statistics in web-console\n\n### Deprecated:\n- Renamed main/tunnels config files (will use old, if found, but emits warning)\n\n## [2.5.1] - 2016-03-10\n### Fixed\n- Doesn't create ~/.i2pd dir if missing\n\n## [2.5.0] - 2016-03-04\n### Added\n- IRC server tunnels\n- SOCKS outproxy support\n- Support for gzipped addressbook updates\n- Support for router families\n\n### Changed\n- Shared RTT/RTO between streams\n- Filesystem work refactoring\n\n## [2.4.0] - 2016-02-03\n### Added\n- X-I2P-* headers for server http-tunnels\n- I2CP options for I2P tunnels\n- Show I2P tunnels in webconsole\n\n### Changed\n- Refactoring of cmdline/config parsing\n\n## [2.3.0] - 2016-01-12\n### Added\n- Support for new router bandwidth class codes (P and X)\n- I2PControl supports external webui\n- Added --pidfile and --notransit parameters\n- Ability to specify signature type for i2p tunnel\n\n### Changed\n- Fixed multiple floodfill-related bugs\n- New webconsole layout\n\n## [2.2.0] - 2015-12-22\n### Added\n- Ability to connect to router without ip via introducer\n\n### Changed\n- Persist temporary encryption keys for local destinations\n- Performance improvements for EdDSA\n- New addressbook structure\n\n## [2.1.0] - 2015-11-12\n### Added\n- Implementation of EdDSA\n\n### Changed\n- EdDSA is default signature type for new RouterInfos\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.462890625,
          "content": "Copyright (c) 2013-2023, The PurpleI2P Project\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of\nconditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of\nconditions and the following disclaimer in the documentation and/or other materials\nprovided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used\nto endorse or promote products derived from this software without specific prior written\npermission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.3974609375,
          "content": ".DEFAULT_GOAL := all\n\nSYS := $(shell $(CXX) -dumpmachine)\n\nifneq (, $(findstring darwin, $(SYS)))\n\tSHARED_SUFFIX = dylib\nelse ifneq (, $(findstring mingw, $(SYS))$(findstring windows-gnu, $(SYS))$(findstring cygwin, $(SYS)))\n\tSHARED_SUFFIX = dll\nelse\n\tSHARED_SUFFIX = so\nendif\n\nSHLIB := libi2pd.$(SHARED_SUFFIX)\nARLIB := libi2pd.a\nSHLIB_LANG := libi2pdlang.$(SHARED_SUFFIX)\nARLIB_LANG := libi2pdlang.a\nSHLIB_CLIENT := libi2pdclient.$(SHARED_SUFFIX)\nARLIB_CLIENT := libi2pdclient.a\nSHLIB_WRAP := libi2pdwrapper.$(SHARED_SUFFIX)\nARLIB_WRAP := libi2pdwrapper.a\nI2PD := i2pd\n\nLIB_SRC_DIR := libi2pd\nLIB_CLIENT_SRC_DIR := libi2pd_client\nWRAP_SRC_DIR := libi2pd_wrapper\nLANG_SRC_DIR := i18n\nDAEMON_SRC_DIR := daemon\n\n# import source files lists\ninclude filelist.mk\n\nUSE_STATIC      := $(or $(USE_STATIC),no)\nUSE_UPNP        := $(or $(USE_UPNP),no)\nDEBUG           := $(or $(DEBUG),yes)\n\n# for debugging purposes only, when commit hash needed in trunk builds in i2pd version string\nUSE_GIT_VERSION := $(or $(USE_GIT_VERSION),no)\n\n# for MacOS only, waiting for \"1\", not \"yes\"\nHOMEBREW        := $(or $(HOMEBREW),0)\n\nifeq ($(DEBUG),yes)\n\tCXX_DEBUG = -g\nelse\n\tCXX_DEBUG = -Os\n\tLD_DEBUG = -s\nendif\n\nifneq (, $(DESTDIR))\n\tPREFIX = $(DESTDIR)\nendif\n\nifneq (, $(findstring darwin, $(SYS)))\n\tDAEMON_SRC += $(DAEMON_SRC_DIR)/UnixDaemon.cpp\n\tifeq ($(HOMEBREW),1)\n\t\tinclude Makefile.homebrew\n\telse\n\t\tinclude Makefile.osx\n\tendif\nelse ifneq (, $(findstring mingw, $(SYS))$(findstring windows-gnu, $(SYS))$(findstring cygwin, $(SYS)))\n\tDAEMON_SRC += Win32/DaemonWin32.cpp Win32/Win32App.cpp Win32/Win32Service.cpp Win32/Win32NetState.cpp\n\tinclude Makefile.mingw\nelse ifneq (, $(findstring linux, $(SYS))$(findstring gnu, $(SYS)))\n\tDAEMON_SRC += $(DAEMON_SRC_DIR)/UnixDaemon.cpp\n\tinclude Makefile.linux\nelse ifneq (, $(findstring freebsd, $(SYS))$(findstring openbsd, $(SYS)))\n\tDAEMON_SRC += $(DAEMON_SRC_DIR)/UnixDaemon.cpp\n\tinclude Makefile.bsd\nelse ifneq (, $(findstring haiku, $(SYS)))\n\tDAEMON_SRC += $(DAEMON_SRC_DIR)/UnixDaemon.cpp\n\tinclude Makefile.haiku\nelse # not supported\n\t$(error Not supported platform)\nendif\n\nINCFLAGS += -I$(LIB_SRC_DIR) -I$(LIB_CLIENT_SRC_DIR) -I$(LANG_SRC_DIR)\nDEFINES += -DOPENSSL_SUPPRESS_DEPRECATED\nNEEDED_CXXFLAGS += -MMD -MP\n\nifeq ($(USE_GIT_VERSION),yes)\n\tGIT_VERSION := $(shell git describe --tags)\n\tDEFINES += -DGITVER=$(GIT_VERSION)\nendif\n\nLIB_OBJS        += $(patsubst %.cpp,obj/%.o,$(LIB_SRC))\nLIB_CLIENT_OBJS += $(patsubst %.cpp,obj/%.o,$(LIB_CLIENT_SRC))\nLANG_OBJS       += $(patsubst %.cpp,obj/%.o,$(LANG_SRC))\nDAEMON_OBJS     += $(patsubst %.cpp,obj/%.o,$(DAEMON_SRC))\nWRAP_LIB_OBJS   += $(patsubst %.cpp,obj/%.o,$(WRAP_LIB_SRC))\nDEPS            += $(LIB_OBJS:.o=.d) $(LIB_CLIENT_OBJS:.o=.d) $(LANG_OBJS:.o=.d) $(DAEMON_OBJS:.o=.d) $(WRAP_LIB_OBJS:.o=.d)\n\n## Build all code (libi2pd, libi2pdclient, libi2pdlang), link it to .a and build binary\nall: $(ARLIB) $(ARLIB_CLIENT) $(ARLIB_LANG) $(I2PD)\n\nmk_obj_dir:\n\t@mkdir -p obj/$(LIB_SRC_DIR)\n\t@mkdir -p obj/$(LIB_CLIENT_SRC_DIR)\n\t@mkdir -p obj/$(LANG_SRC_DIR)\n\t@mkdir -p obj/$(DAEMON_SRC_DIR)\n\t@mkdir -p obj/$(WRAP_SRC_DIR)\n\t@mkdir -p obj/Win32\n\napi: $(SHLIB) $(ARLIB)\nclient: $(SHLIB_CLIENT) $(ARLIB_CLIENT)\nlang:  $(SHLIB_LANG) $(ARLIB_LANG)\napi_client: api client lang\nwrapper: api_client $(SHLIB_WRAP) $(ARLIB_WRAP)\n\n## NOTE: The NEEDED_CXXFLAGS are here so that CXXFLAGS can be specified at build time\n## **without** overwriting the CXXFLAGS which we need in order to build.\n## For example, when adding 'hardening flags' to the build\n## (e.g. -fstack-protector-strong -Wformat -Werror=format-security), we do not want to remove\n## -std=c++11. If you want to remove this variable please do so in a way that allows setting\n## custom FLAGS to work at build-time.\n\nobj/%.o: %.cpp | mk_obj_dir\n\t$(CXX) $(CXXFLAGS) $(NEEDED_CXXFLAGS) $(DEFINES) $(INCFLAGS) -c -o $@ $<\n\n# '-' is 'ignore if missing' on first run\n-include $(DEPS)\n\n$(I2PD): $(DAEMON_OBJS) $(ARLIB) $(ARLIB_CLIENT) $(ARLIB_LANG)\n\t$(CXX) $(DEFINES) $(LDFLAGS) -o $@ $^ $(LDLIBS)\n\n$(SHLIB): $(LIB_OBJS)\nifneq ($(USE_STATIC),yes)\n\t$(CXX) $(LDFLAGS) -shared -o $@ $^ $(LDLIBS)\nendif\n\n$(SHLIB_CLIENT): $(LIB_CLIENT_OBJS) $(SHLIB) $(SHLIB_LANG)\nifneq ($(USE_STATIC),yes)\n\t$(CXX) $(LDFLAGS) -shared -o $@ $^ $(LDLIBS) $(SHLIB) $(SHLIB_LANG)\nendif\n\n$(SHLIB_WRAP): $(WRAP_LIB_OBJS)\nifneq ($(USE_STATIC),yes)\n\t$(CXX) $(LDFLAGS) -shared -o $@ $^ $(LDLIBS)\nendif\n\n$(SHLIB_LANG): $(LANG_OBJS)\nifneq ($(USE_STATIC),yes)\n\t$(CXX) $(LDFLAGS) -shared -o $@ $^ $(LDLIBS)\nendif\n\n$(ARLIB): $(LIB_OBJS)\n\t$(AR) -r $@ $^\n\n$(ARLIB_CLIENT): $(LIB_CLIENT_OBJS)\n\t$(AR) -r $@ $^\n\n$(ARLIB_WRAP): $(WRAP_LIB_OBJS)\n\t$(AR) -r $@ $^\n\n$(ARLIB_LANG): $(LANG_OBJS)\n\t$(AR) -r $@ $^\n\nclean:\n\t$(RM) -r obj\n\t$(RM) -r docs/generated\n\t$(RM) $(I2PD) $(SHLIB) $(ARLIB) $(SHLIB_CLIENT) $(ARLIB_CLIENT) $(SHLIB_LANG) $(ARLIB_LANG) $(SHLIB_WRAP) $(ARLIB_WRAP)\n\nstrip: $(I2PD) $(SHLIB) $(SHLIB_CLIENT) $(SHLIB_LANG)\n\tstrip $^\n\nLATEST_TAG=$(shell git describe --tags --abbrev=0 openssl)\nBRANCH=$(shell git rev-parse --abbrev-ref HEAD)\ndist:\n\tgit archive --format=tar.gz -9 --worktree-attributes \\\n\t    --prefix=i2pd_$(LATEST_TAG)/ $(LATEST_TAG) -o i2pd_$(LATEST_TAG).tar.gz\n\nlast-dist:\n\tgit archive --format=tar.gz -9 --worktree-attributes \\\n\t    --prefix=i2pd_$(LATEST_TAG)/ $(BRANCH) -o ../i2pd_$(LATEST_TAG).orig.tar.gz\n\ndoxygen:\n\tdoxygen -s docs/Doxyfile\n\n.PHONY: all\n.PHONY: clean\n.PHONY: doxygen\n.PHONY: dist\n.PHONY: last-dist\n.PHONY: api\n.PHONY: api_client\n.PHONY: client\n.PHONY: lang\n.PHONY: mk_obj_dir\n.PHONY: install\n.PHONY: strip\n"
        },
        {
          "name": "Makefile.bsd",
          "type": "blob",
          "size": 1.04296875,
          "content": "CXX = clang++\nCXXFLAGS ?= ${CXX_DEBUG} -Wall -Wextra -Wno-unused-parameter -pedantic -Wno-misleading-indentation\nDEFINES = -D_GLIBCXX_USE_NANOSLEEP=1\nINCFLAGS = -I/usr/include/ -I/usr/local/include/\nLDFLAGS = ${LD_DEBUG} -Wl,-rpath,/usr/local/lib -L/usr/local/lib\nLDLIBS = -lcrypto -lssl -lz -lpthread -lboost_system -lboost_program_options\n\n## NOTE: NEEDED_CXXFLAGS is here so that custom CXXFLAGS can be specified at build time\n## **without** overwriting the CXXFLAGS which we need in order to build.\n## For example, when adding 'hardening flags' to the build\n## (e.g. -fstack-protector-strong -Wformat -Werror=format-security), we do not want to remove\n## -std=c++11. If you want to remove this variable please do so in a way that allows setting\n## custom FLAGS to work at build-time.\nCXXVER := $(shell $(CXX) -dumpversion|cut -c 1-2)\nifeq (${CXXVER}, \"4.\") # older clang always returned 4.2.1\n\t$(error Compiler too old)\nelse ifeq (${CXXVER}, ${filter ${CXXVER},16 17 18 19})  # clang 16 - 19\n\tNEEDED_CXXFLAGS = -std=c++20\nelse\n\tNEEDED_CXXFLAGS = -std=c++17\nendif\n\n"
        },
        {
          "name": "Makefile.haiku",
          "type": "blob",
          "size": 0.28515625,
          "content": "CXX = g++\nCXXFLAGS := -Wall -std=c++17\nINCFLAGS = -I/system/develop/headers\nDEFINES = -D_DEFAULT_SOURCE -D_GNU_SOURCE\nLDLIBS = -lbe -lbsd -lnetwork -lz -lcrypto -lssl -lboost_system -lboost_program_options -lpthread\n\nifeq ($(USE_UPNP),yes)\n\tDEFINES += -DUSE_UPNP\n\tLDLIBS += -lminiupnpc\nendif\n"
        },
        {
          "name": "Makefile.homebrew",
          "type": "blob",
          "size": 2.0771484375,
          "content": "# root directory holding homebrew\nBREWROOT = /opt/homebrew\nBOOSTROOT = ${BREWROOT}/opt/boost\nSSLROOT = ${BREWROOT}/opt/openssl@1.1\nUPNPROOT = ${BREWROOT}/opt/miniupnpc\n\nCXXFLAGS ?= ${CXX_DEBUG} -Wall -Wno-overloaded-virtual\nNEEDED_CXXFLAGS ?= -std=c++17\nINCFLAGS ?= -I${SSLROOT}/include -I${BOOSTROOT}/include\nLDFLAGS ?= ${LD_DEBUG}\nDEFINES += -DMAC_OSX\n\nifeq ($(USE_STATIC),yes)\n\tLDLIBS = -lz ${SSLROOT}/lib/libcrypto.a ${SSLROOT}/lib/libssl.a ${BOOSTROOT}/lib/libboost_system.a ${BOOSTROOT}/lib/libboost_filesystem.a ${BOOSTROOT}/lib/libboost_program_options.a\nifeq ($(USE_UPNP),yes)\n\tLDLIBS += ${UPNPROOT}/lib/libminiupnpc.a\nendif\n\tLDLIBS +=  -lpthread -ldl\nelse\n\tLDFLAGS += -L${SSLROOT}/lib -L${BOOSTROOT}/lib\n\tLDLIBS = -lz -lcrypto -lssl -lboost_system -lboost_filesystem -lboost_program_options -lpthread\nifeq ($(USE_UPNP),yes)\n\tLDFLAGS += -L${UPNPROOT}/lib\n\tLDLIBS += -lminiupnpc\nendif\nendif\n\nifeq ($(USE_UPNP),yes)\n\tDEFINES += -DUSE_UPNP\n\tINCFLAGS += -I${UPNPROOT}/include\nendif\n\ninstall: all\n\tinstall -d ${PREFIX}/bin\n\tinstall -m 755 ${I2PD} ${PREFIX}/bin\n\tinstall -d ${PREFIX}/etc ${PREFIX}/etc/i2pd ${PREFIX}/etc/i2pd/tunnels.conf.d\n\tinstall -m 644 contrib/i2pd.conf contrib/subscriptions.txt contrib/tunnels.conf ${PREFIX}/etc/i2pd\n\tinstall -d ${PREFIX}/share ${PREFIX}/share/doc ${PREFIX}/share/doc/i2pd\n\tinstall -m 644 ChangeLog LICENSE README.md contrib/i2pd.conf contrib/subscriptions.txt contrib/tunnels.conf ${PREFIX}/share/doc/i2pd\n\tinstall -d ${PREFIX}/share/i2pd\n\t@cp -R contrib/certificates ${PREFIX}/share/i2pd/\n\tinstall -d ${PREFIX}/share/man ${PREFIX}/share/man/man1\n\t@gzip -kf debian/i2pd.1 && install debian/i2pd.1.gz ${PREFIX}/share/man/man1\n\tinstall -d ${PREFIX}/var ${PREFIX}/var/lib ${PREFIX}/var/lib/i2pd\n\t@ln -sf ${PREFIX}/share/i2pd/certificates ${PREFIX}/var/lib/i2pd/certificates\n\t@ln -sf ${PREFIX}/etc/i2pd/tunnels.conf.d ${PREFIX}/var/lib/i2pd/tunnels.d\n\t@ln -sf ${PREFIX}/etc/i2pd/i2pd.conf ${PREFIX}/var/lib/i2pd/i2pd.conf\n\t@ln -sf ${PREFIX}/etc/i2pd/subscriptions.txt ${PREFIX}/var/lib/i2pd/subscriptions.txt\n\t@ln -sf ${PREFIX}/etc/i2pd/tunnels.conf ${PREFIX}/var/lib/i2pd/tunnels.conf\n"
        },
        {
          "name": "Makefile.linux",
          "type": "blob",
          "size": 2.9296875,
          "content": "# set defaults instead redefine\nCXXFLAGS ?= ${CXX_DEBUG} -Wall -Wextra -Wno-unused-parameter -pedantic -Wno-psabi\nLDFLAGS ?= ${LD_DEBUG}\n\n## NOTE: The NEEDED_CXXFLAGS are here so that custom CXXFLAGS can be specified at build time\n## **without** overwriting the CXXFLAGS which we need in order to build.\n## For example, when adding 'hardening flags' to the build\n## (e.g. -fstack-protector-strong -Wformat -Werror=format-security), we do not want to remove\n## -std=c++11. If you want to remove this variable please do so in a way that allows setting\n## custom FDLAGS to work at build-time.\n\n# detect proper flag for c++17 support by compilers\nCXXVER := $(shell $(CXX) -dumpversion)\nifeq ($(shell expr match $(CXX) 'clang'),5)\n\tNEEDED_CXXFLAGS += -std=c++17\nelse ifeq ($(shell expr match ${CXXVER} \"[8-9]\"),1) # gcc 8 - 9\n\tNEEDED_CXXFLAGS += -std=c++17\n\tLDLIBS = -lboost_system -lstdc++fs\nelse ifeq ($(shell expr match ${CXXVER} \"1[0-2]\"),2) # gcc 10 - 12\n\tNEEDED_CXXFLAGS += -std=c++17\nelse ifeq ($(shell expr match ${CXXVER} \"1[3-9]\"),2) # gcc 13+\n\tNEEDED_CXXFLAGS += -std=c++20\nelse # not supported\n$(error Compiler too old)\nendif\n\nNEEDED_CXXFLAGS += -fPIC\n\nifeq ($(USE_STATIC),yes)\n# NOTE: on glibc you will get this warning:\n#   Using 'getaddrinfo' in statically linked applications requires at runtime\n#   the shared libraries from the glibc version used for linking\n\tLIBDIR := /usr/lib/$(SYS)\n\tLDLIBS += $(LIBDIR)/libboost_program_options.a\n\tLDLIBS += $(LIBDIR)/libssl.a\n\tLDLIBS += $(LIBDIR)/libcrypto.a\n\tLDLIBS += $(LIBDIR)/libz.a\nifeq ($(USE_UPNP),yes)\n\tLDLIBS += $(LIBDIR)/libminiupnpc.a\nendif\n\tLDLIBS += -lpthread -ldl\nelse\n\tLDLIBS += -lcrypto -lssl -lz -lboost_program_options -lpthread -latomic\nifeq ($(USE_UPNP),yes)\n\tLDLIBS += -lminiupnpc\nendif\nendif\n\n# UPNP Support (miniupnpc 1.5 and higher)\nifeq ($(USE_UPNP),yes)\n\tDEFINES += -DUSE_UPNP\nendif\n\ninstall: all\n\tinstall -d ${PREFIX}/bin\n\tinstall -m 755 ${I2PD} ${PREFIX}/bin\n\tinstall -d ${PREFIX}/etc ${PREFIX}/etc/i2pd ${PREFIX}/etc/i2pd/tunnels.conf.d\n\tinstall -m 644 contrib/i2pd.conf contrib/subscriptions.txt contrib/tunnels.conf ${PREFIX}/etc/i2pd\n\tinstall -d ${PREFIX}/share ${PREFIX}/share/doc ${PREFIX}/share/doc/i2pd\n\tinstall -m 644 ChangeLog LICENSE README.md contrib/i2pd.conf contrib/subscriptions.txt contrib/tunnels.conf ${PREFIX}/share/doc/i2pd\n\tinstall -d ${PREFIX}/share/i2pd\n\t@cp -R contrib/certificates ${PREFIX}/share/i2pd/\n\tinstall -d ${PREFIX}/share/man ${PREFIX}/share/man/man1\n\t@gzip -kf debian/i2pd.1 && install debian/i2pd.1.gz ${PREFIX}/share/man/man1\n\tinstall -d ${PREFIX}/var ${PREFIX}/var/lib ${PREFIX}/var/lib/i2pd\n\t@ln -sf ${PREFIX}/share/i2pd/certificates ${PREFIX}/var/lib/i2pd/certificates\n\t@ln -sf ${PREFIX}/etc/i2pd/tunnels.conf.d ${PREFIX}/var/lib/i2pd/tunnels.d\n\t@ln -sf ${PREFIX}/etc/i2pd/i2pd.conf ${PREFIX}/var/lib/i2pd/i2pd.conf\n\t@ln -sf ${PREFIX}/etc/i2pd/subscriptions.txt ${PREFIX}/var/lib/i2pd/subscriptions.txt\n\t@ln -sf ${PREFIX}/etc/i2pd/tunnels.conf ${PREFIX}/var/lib/i2pd/tunnels.conf\n"
        },
        {
          "name": "Makefile.mingw",
          "type": "blob",
          "size": 1.1865234375,
          "content": "# Build application with GUI (tray, main window)\nUSE_WIN32_APP := yes\n\nWINDRES = windres\n\nCXXFLAGS := $(CXX_DEBUG) -fPIC -msse\nINCFLAGS := -I$(DAEMON_SRC_DIR) -IWin32\nLDFLAGS := ${LD_DEBUG} -static -fPIC -msse\n\nNEEDED_CXXFLAGS += -std=c++20\nDEFINES += -DWIN32_LEAN_AND_MEAN\n\n# UPNP Support\nifeq ($(USE_UPNP),yes)\n\tDEFINES += -DUSE_UPNP -DMINIUPNP_STATICLIB\n\tLDLIBS = -lminiupnpc\nendif\n\nifeq ($(USE_WINXP_FLAGS), yes)\n\tDEFINES += -DWINVER=0x0501 -D_WIN32_WINNT=0x0501\nendif\n\nLDLIBS += \\\n\t$(MINGW_PREFIX)/lib/libboost_filesystem-mt.a \\\n\t$(MINGW_PREFIX)/lib/libboost_program_options-mt.a \\\n\t$(MINGW_PREFIX)/lib/libssl.a \\\n\t$(MINGW_PREFIX)/lib/libcrypto.a \\\n\t$(MINGW_PREFIX)/lib/libz.a \\\n\t-lwsock32 \\\n\t-lws2_32 \\\n\t-liphlpapi \\\n\t-lcrypt32 \\\n\t-lgdi32 \\\n\t-lole32 \\\n\t-luuid \\\n\t-lpthread\n\nifeq ($(USE_WIN32_APP), yes)\n\tDEFINES += -DWIN32_APP\n\tLDFLAGS += -mwindows\n\tDAEMON_RC += Win32/Resource.rc\n\tDAEMON_OBJS += $(patsubst %.rc,obj/%.o,$(DAEMON_RC))\nendif\n\nifeq ($(USE_ASLR),yes)\n\tLDFLAGS += -Wl,--nxcompat -Wl,--high-entropy-va -Wl,--dynamicbase,--export-all-symbols\nendif\n\nobj/%.o : %.rc | mk_obj_dir\n\t$(WINDRES) $(DEFINES) $(INCFLAGS) --preprocessor-arg=-MMD --preprocessor-arg=-MP --preprocessor-arg=-MF$@.d -i $< -o $@\n"
        },
        {
          "name": "Makefile.osx",
          "type": "blob",
          "size": 0.78125,
          "content": "CXX = clang++\nCXXFLAGS := ${CXX_DEBUG} -Wall -std=c++17\nINCFLAGS = -I/usr/local/include\nDEFINES := -DMAC_OSX\nLDFLAGS := -Wl,-rpath,/usr/local/lib -L/usr/local/lib\nLDFLAGS += -Wl,-dead_strip\nLDFLAGS += -Wl,-dead_strip_dylibs\n\nifeq ($(USE_STATIC),yes)\n\tLDLIBS = -lz /usr/local/lib/libcrypto.a /usr/local/lib/libssl.a /usr/local/lib/libboost_system.a /usr/local/lib/libboost_filesystem.a /usr/local/lib/libboost_program_options.a -lpthread\nelse\n\tLDLIBS = -lz -lcrypto -lssl -lboost_system -lboost_filesystem -lboost_program_options -lpthread\nendif\n\nifeq ($(USE_UPNP),yes)\n\tLDFLAGS += -ldl\n\tDEFINES += -DUSE_UPNP\n\tifeq ($(USE_STATIC),yes)\n\t\tLDLIBS += /usr/local/lib/libminiupnpc.a\n\telse\n\t\tLDLIBS += -lminiupnpc\n\tendif\nendif\n\nOSARCH = $(shell uname -p)\n\nifneq ($(OSARCH),powerpc)\n\tCXXFLAGS += -msse\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.814453125,
          "content": "[![GitHub release](https://img.shields.io/github/release/PurpleI2P/i2pd.svg?label=latest%20release)](https://github.com/PurpleI2P/i2pd/releases/latest)\n[![Snapcraft release](https://snapcraft.io/i2pd/badge.svg)](https://snapcraft.io/i2pd)\n[![License](https://img.shields.io/github/license/PurpleI2P/i2pd.svg)](https://github.com/PurpleI2P/i2pd/blob/openssl/LICENSE)\n[![Packaging status](https://repology.org/badge/tiny-repos/i2pd.svg)](https://repology.org/project/i2pd/versions)\n[![Docker Pulls](https://img.shields.io/docker/pulls/purplei2p/i2pd)](https://hub.docker.com/r/purplei2p/i2pd)\n[![Crowdin](https://badges.crowdin.net/i2pd/localized.svg)](https://crowdin.com/project/i2pd)\n\n*note: i2pd for Android can be found in [i2pd-android](https://github.com/PurpleI2P/i2pd-android) repository and with Qt GUI in [i2pd-qt](https://github.com/PurpleI2P/i2pd-qt) repository*\n\ni2pd\n====\n\n[Русская версия](https://github.com/PurpleI2P/i2pd_docs_ru/blob/master/README.md)\n\ni2pd (I2P Daemon) is a full-featured C++ implementation of I2P client.  \n\nI2P (Invisible Internet Protocol) is a universal anonymous network layer.  \nAll communications over I2P are anonymous and end-to-end encrypted, participants\ndon't reveal their real IP addresses.  \n\nI2P client is a software used for building and using anonymous I2P\nnetworks. Such networks are commonly used for anonymous peer-to-peer\napplications (filesharing, cryptocurrencies) and anonymous client-server\napplications (websites, instant messengers, chat-servers).  \n\nI2P allows people from all around the world to communicate and share information\nwithout restrictions.  \n\nFeatures\n--------\n\n* Distributed anonymous networking framework  \n* End-to-end encrypted communications  \n* Small footprint, simple dependencies, fast performance  \n* Rich set of APIs for developers of secure applications  \n\nResources\n---------\n\n* [Website](http://i2pd.website)\n* [Documentation](https://i2pd.readthedocs.io/en/latest/)\n* [Wiki](https://github.com/PurpleI2P/i2pd/wiki)\n* [Tickets/Issues](https://github.com/PurpleI2P/i2pd/issues)\n* [Specifications](https://geti2p.net/spec)\n* [Twitter](https://twitter.com/hashtag/i2pd)\n\nInstalling\n----------\n\nThe easiest way to install i2pd is by using precompiled packages and binaries.\nYou can fetch most of them on [release](https://github.com/PurpleI2P/i2pd/releases/latest) page.  \nPlease see [documentation](https://i2pd.readthedocs.io/en/latest/user-guide/install/) for more info.\n\nBuilding\n--------\nSee [documentation](https://i2pd.readthedocs.io/en/latest/) for how to build\ni2pd from source on your OS.  \n\nnote: i2pd with Qt GUI can be found in [i2pd-qt](https://github.com/PurpleI2P/i2pd-qt) repository and for android in [i2pd-android](https://github.com/PurpleI2P/i2pd-android) repository.\n\n\nBuild instructions:\n\n* [unix](https://i2pd.readthedocs.io/en/latest/devs/building/unix/)\n* [windows](https://i2pd.readthedocs.io/en/latest/devs/building/windows/)\n* [iOS](https://i2pd.readthedocs.io/en/latest/devs/building/ios/)\n* [android](https://i2pd.readthedocs.io/en/latest/devs/building/android/)\n\n\n**Supported systems:**\n\n* GNU/Linux (Debian, Ubuntu, etc) - [![Build on Ubuntu](https://github.com/PurpleI2P/i2pd/actions/workflows/build.yml/badge.svg)](https://github.com/PurpleI2P/i2pd/actions/workflows/build.yml)\n* CentOS, Fedora, Mageia - [![Build Status](https://copr.fedorainfracloud.org/coprs/supervillain/i2pd/package/i2pd-git/status_image/last_build.png)](https://copr.fedorainfracloud.org/coprs/supervillain/i2pd/package/i2pd-git/)\n* Alpine, ArchLinux, openSUSE, Gentoo, etc.\n* Windows - [![Build on Windows](https://github.com/PurpleI2P/i2pd/actions/workflows/build-windows.yml/badge.svg)](https://github.com/PurpleI2P/i2pd/actions/workflows/build-windows.yml)\n* Mac OS - [![Build on OSX](https://github.com/PurpleI2P/i2pd/actions/workflows/build-osx.yml/badge.svg)](https://github.com/PurpleI2P/i2pd/actions/workflows/build-osx.yml)\n* Docker image - [![Build containers](https://github.com/PurpleI2P/i2pd/actions/workflows/docker.yml/badge.svg)](https://github.com/PurpleI2P/i2pd/actions/workflows/docker.yml)\n* Snap - [![i2pd](https://snapcraft.io/i2pd/badge.svg)](https://snapcraft.io/i2pd) [![i2pd](https://snapcraft.io/i2pd/trending.svg?name=0)](https://snapcraft.io/i2pd)\n* FreeBSD - [![Build on FreeBSD](https://github.com/PurpleI2P/i2pd/actions/workflows/build-freebsd.yml/badge.svg)](https://github.com/PurpleI2P/i2pd/actions/workflows/build-freebsd.yml)\n* Android - [![Android CI](https://github.com/PurpleI2P/i2pd-android/actions/workflows/android.yml/badge.svg)](https://github.com/PurpleI2P/i2pd-android/actions/workflows/android.yml)\n* iOS\n\nUsing i2pd\n----------\n\nSee [documentation](https://i2pd.readthedocs.io/en/latest/user-guide/run/) and\n[example config file](https://github.com/PurpleI2P/i2pd/blob/openssl/contrib/i2pd.conf).\n\nLocalization\n------------\n\nYou can help us with translation i2pd to your language using Crowdin platform!\nTranslation project can be found [here](https://crowdin.com/project/i2pd).\n\nNew languages can be requested on project's [discussion page](https://crowdin.com/project/i2pd/discussions).\n\nCurrent status: [![Crowdin](https://badges.crowdin.net/i2pd/localized.svg)](https://crowdin.com/project/i2pd)\n\nDonations\n---------\n\n**E-Mail**: ```i2porignal at yandex.com```\n\n**BTC**: ```3MDoGJW9TLMTCDGrR9bLgWXfm6sjmgy86f```\n\n**LTC**: ```LKQirrYrDeTuAPnpYq5y7LVKtywfkkHi59```\n\n**ETH**: ```0x9e5bac70d20d1079ceaa111127f4fb3bccce379d```\n\n**GST**: ```GbD2JSQHBHCKLa9WTHmigJRpyFgmBj4woG```\n\n**DASH**: ```Xw8YUrQpYzP9tZBmbjqxS3M97Q7v3vJKUF```\n\n**ZEC**: ```t1cTckLuXsr1dwVrK4NDzfhehss4NvMadAJ```\n\n**ANC**: ```AQJYweYYUqM1nVfLqfoSMpUMfzxvS4Xd7z```\n\n**XMR**: ```497pJc7X4xqKvcLBLpSUtRgWqMMyo24u4btCos3cak6gbMkpobgSU6492ztUcUBghyeHpYeczB55s38NpuHoH5WGNSPDRMH```\n\nLicense\n-------\n\nThis project is licensed under the BSD 3-clause license, which can be found in the file\nLICENSE in the root of the project source code.  \n"
        },
        {
          "name": "Win32",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "filelist.mk",
          "type": "blob",
          "size": 1.060546875,
          "content": "#LIB_SRC = \\\n#  BloomFilter.cpp Gzip.cpp Crypto.cpp Datagram.cpp Garlic.cpp I2NPProtocol.cpp LeaseSet.cpp \\\n#  Log.cpp NTCPSession.cpp NetDb.cpp NetDbRequests.cpp Profiling.cpp \\\n#  Reseed.cpp RouterContext.cpp RouterInfo.cpp Signature.cpp SSU.cpp \\\n#  SSUSession.cpp SSUData.cpp Streaming.cpp Identity.cpp TransitTunnel.cpp \\\n#  Transports.cpp Tunnel.cpp TunnelEndpoint.cpp TunnelPool.cpp TunnelGateway.cpp \\\n#  Destination.cpp Base.cpp I2PEndian.cpp FS.cpp Config.cpp Family.cpp \\\n#  Config.cpp HTTP.cpp Timestamp.cpp util.cpp api.cpp Gost.cpp\n\nLIB_SRC = $(wildcard $(LIB_SRC_DIR)/*.cpp)\n\n#LIB_CLIENT_SRC = \\\n#\tAddressBook.cpp BOB.cpp ClientContext.cpp I2PTunnel.cpp I2PService.cpp MatchedDestination.cpp \\\n#\tSAM.cpp SOCKS.cpp HTTPProxy.cpp I2CP.cpp\n\nLIB_CLIENT_SRC = $(wildcard $(LIB_CLIENT_SRC_DIR)/*.cpp)\n\n# also: Daemon{Linux,Win32}.cpp will be added later\n#DAEMON_SRC = \\\n#\tHTTPServer.cpp I2PControl.cpp UPnP.cpp Daemon.cpp i2pd.cpp\n\nLANG_SRC = $(wildcard $(LANG_SRC_DIR)/*.cpp)\n\nWRAP_LIB_SRC = $(wildcard $(WRAP_SRC_DIR)/*.cpp)\n\nDAEMON_SRC = $(wildcard $(DAEMON_SRC_DIR)/*.cpp)\n"
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "libi2pd",
          "type": "tree",
          "content": null
        },
        {
          "name": "libi2pd_client",
          "type": "tree",
          "content": null
        },
        {
          "name": "libi2pd_wrapper",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}