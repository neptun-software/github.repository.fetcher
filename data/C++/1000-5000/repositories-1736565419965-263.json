{
  "metadata": {
    "timestamp": 1736565419965,
    "page": 263,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nmslib/nmslib",
      "stars": 3435,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 2.134765625,
          "content": "version: '{build}'\n# If changed sync with the command in the install section\nimage: Visual Studio 2019\nplatform:\n# It is hardcoded 32 won't work\n- x64\nenvironment:\n  global:\n    DISTUTILS_USE_SDK: 1\n    MSSdk: 1\n    # SSE2 is the default in recent VS, but let's keep for older versions, see, e.g.: https://github.com/weidai11/cryptopp/issues/445\n    ARCH: SSE2\n  matrix:\n  - PYTHON: 37\n  - PYTHON: 312\n  - PYTHON: 38\n  - PYTHON: 310\n  - PYTHON: 39\n  - PYTHON: 311\n  pypipassword:\n    # https://ci.appveyor.com/tools/encrypt\n    secure: 7hxZ+XinYPLuIS1aHZbTcA==\ninstall:\n- cmd: '\"c:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" %PLATFORM%'\n- cmd: git config core.symlinks true\n- cmd: git reset --hard\n- cmd: rmdir \"C:\\cygwin\" /s /q\n- cmd: rmdir \"C:\\cygwin64\" /s /q\n- ps: |\n    $env:PYTHON = \"$env:PYTHON-x64\" \n    $env:PATH = \"C:\\Python$env:PYTHON\\;C:\\Python$env:PYTHON\\Scripts\\;$env:PATH\"\n    echo $env:PATH\n    python -m pip install --disable-pip-version-check --upgrade pip\n    python -m pip install -qq setuptools six psutil scikit-learn pytest pytest-runner\n- cmd: |\n    ECHO Platform : %PLATFORM%\n    ECHO Python : %PYTHON%\n    ECHO PATH : %PATH%\n    set\n    python --version\n    python -m pip --version\nbuild_script:\n- ps: cd python_bindings\n- cmd: |\n    python -m pip install -qq -r requirements.txt\n    python setup.py build_ext\n    python -m pip install -U .\n- ps: cd ..\n\ntest_script:\n- ps: cd python_bindings\n- cmd: pytest tests\n- ps: cd ..\n\ndeploy_script: \n- ps: |\n    if ($env:APPVEYOR_REPO_TAG -ne \"true\") {\n      echo \"Skipping deployment because this is not a tagged commit\"\n      return\n    }\n    # Specify account details for PyPI\n    echo \"Deploying...\"\n    mv .pypirc $env:USERPROFILE\\\\.pypirc\n    # Workaround required to ensure setup.py finds the .pypirc under Windows\n    $env:HOME=$env:USERPROFILE\n    # Install wheel-building support\n    python -m pip install --user wheel twine\n    # Build wheel and upload\n    cd python_bindings\n    python setup.py build_ext\n    python setup.py sdist bdist_wheel\n    python -m twine upload -r testpypi -p $env:pypipassword --skip-existing dist/*\n    echo \"Deployment complete\"\n\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.388671875,
          "content": "CMakeFiles\nCMakeCache.txt\ncmake_install.cmake\nsimilarity_search/debug\nsimilarity_search/release\nsimilarity_search/src/Makefile\nsimilarity_search/Makefile\nsimilarity_search/apps/Makefile\nsimilarity_search/test/Makefile\nsimilarity_search/NonMetricSpaceLib.cbp\nsimilarity_search/cmake-build-debug\nsimilarity_search/tmp_out_file.txt\nsimilarity_search/tmpfile.bin\n*.o\n*.so\n*.pyc\n*.egg-info/\n.idea\ndist/\n"
        },
        {
          "name": ".pypirc",
          "type": "blob",
          "size": 0.1953125,
          "content": "[distutils]\nindex-servers =\n    pypi\n    testpypi\n\n[pypi]\nrepository=https://upload.pypi.org/legacy/\nusername=searchivarius\n\n[testpypi]\nrepository=https://test.pypi.org/legacy/\nusername=searchivarius\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 6.404296875,
          "content": "language: cpp\n\nsudo: required\n\naddons:\n  apt:\n    packages: &core_build\n    - g++\n    - libblas-dev\n    - liblapack-dev\n    - gfortran\n    - cmake\n    - libboost-all-dev\n    - libgsl0-dev\n    - libeigen3-dev\n  homebrew:\n    packages:\n    - pyenv\n    update: true\n\nmatrix:\n  fast_finish: true\n  include:\n  - os: linux\n    env: PYTHON=3.5\n    dist: bionic\n    services:\n    - docker\n    addons:\n      apt:\n        update: true\n        sources:\n        - ubuntu-toolchain-r-test\n        - deadsnakes\n        packages:\n        - *core_build\n        - python3.5-dev\n  - os: linux\n    env: PYTHON=3.6\n    dist: bionic\n    services:\n    - docker\n    addons:\n      apt:\n        update: true\n        sources:\n        - ubuntu-toolchain-r-test\n        - deadsnakes\n        packages:\n        - *core_build\n        - python3.6-dev\n  - os: linux\n    env: PYTHON=3.7\n    dist: bionic\n    services:\n    - docker\n    addons:\n      apt:\n        update: true\n        sources:\n        - ubuntu-toolchain-r-test\n        - deadsnakes\n        packages:\n        - *core_build\n        - python3.7-dev\n  - os: linux\n    env: PYTHON=3.8\n    dist: bionic\n    services:\n    - docker\n    addons:\n      apt:\n        update: true\n        sources:\n        - ubuntu-toolchain-r-test\n        - deadsnakes\n        packages:\n        - *core_build\n        - python3.8-dev\n        - python3.8-distutils\n  - os: linux\n    env: PYTHON=3.9\n    dist: bionic\n    services:\n    - docker\n    addons:\n      apt:\n        update: true\n        sources:\n        - ubuntu-toolchain-r-test\n        - deadsnakes\n        packages:\n        - *core_build\n        - python3.9-dev\n        - python3.9-distutils\n  - os: linux\n    env: PYTHON=3.10\n    dist: bionic\n    services:\n    - docker\n    addons:\n      apt:\n        update: true\n        sources:\n        - ubuntu-toolchain-r-test\n        - deadsnakes\n        packages:\n        - *core_build\n        - python3.10-dev\n        - python3.10-distutils\n  - os: linux\n    dist: bionic\n    env: PYTHON=3.5\n    arch: arm64\n    services:\n    - docker\n    addons:\n      apt:\n       update: true\n       sources:\n       - deadsnakes\n       - sourceline: 'ppa:ubuntu-toolchain-r/test'\n       packages:\n         - *core_build\n         - python3.5-dev\n  - os: linux\n    dist: bionic\n    env: PYTHON=3.6\n    arch: arm64\n    services:\n    - docker\n    addons:\n      apt:\n       update: true\n       sources:\n       - deadsnakes\n       - sourceline: 'ppa:ubuntu-toolchain-r/test'\n       packages:\n         - *core_build\n         - python3.6-dev\n  - os: linux\n    dist: bionic\n    env: PYTHON=3.7\n    arch: arm64\n    services:\n    - docker\n    addons:\n      apt:\n       update: true\n       sources:\n       - deadsnakes\n       - sourceline: 'ppa:ubuntu-toolchain-r/test'\n       packages:\n         - *core_build\n         - python3.7-dev\n  - os: linux\n    dist: bionic\n    env: PYTHON=3.8\n    arch: arm64\n    services:\n    - docker\n    addons:\n      apt:\n       update: true\n       sources:\n       - deadsnakes\n       - sourceline: 'ppa:ubuntu-toolchain-r/test'\n       packages:\n         - *core_build\n         - python3.8-dev\n         - python3.8-distutils\n  - os: linux\n    dist: bionic\n    env: PYTHON=3.9\n    arch: arm64\n    services:\n    - docker\n    addons:\n      apt:\n       update: true\n       sources:\n       - deadsnakes\n       - sourceline: 'ppa:ubuntu-toolchain-r/test'\n       packages:\n         - *core_build\n         - python3.9-dev\n         - python3.9-distutils\n  - os: linux\n    dist: bionic\n    env: PYTHON=3.10\n    arch: arm64\n    services:\n    - docker\n    addons:\n      apt:\n       update: true\n       sources:\n       - deadsnakes\n       - sourceline: 'ppa:ubuntu-toolchain-r/test'\n       packages:\n         - *core_build\n         - python3.10-dev\n         - python3.10-distutils\n\n  - os: osx\n    env: PYTHON=3.5-dev\n    osx_image: xcode11\n  - os: osx\n    env: PYTHON=3.6-dev\n    osx_image: xcode11\n  - os: osx\n    env: PYTHON=3.7-dev\n    osx_image: xcode11\n  - os: osx\n    env: PYTHON=3.8-dev\n    osx_image: xcode11\n  - os: osx\n    env: PYTHON=3.9-dev\n    osx_image: xcode11\n  - os: osx\n    env: PYTHON=3.10-dev\n    osx_image: xcode11\n  #allow_failures:\n  #- os: osx\n\nbefore_install:\n- |\n  PY=python\n  echo \"TRAVIS_OS_NAME=$TRAVIS_OS_NAME\"\n  echo \"PYTHON=$PYTHON\"\n  if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then \n    export CXX=g++ CC=gcc\n    if [ $(echo \"$PYTHON\" | grep \"^3\\.\") ]; then\n      echo \"bootstrapping pip module\"\n      PY=python${PYTHON}\n      # For older PYTHON need a separate script or else it may fail\n      if [ \"$PYTHON\" = \"3.5\" ] ; then\n        GET_PIP_SCRIPT=\"https://bootstrap.pypa.io/pip/3.5/get-pip.py\"\n      else\n        if [ \"$PYTHON\" = \"3.6\" ] ; then\n          GET_PIP_SCRIPT=\"https://bootstrap.pypa.io/pip/3.6/get-pip.py\"\n        else\n          GET_PIP_SCRIPT=\"https://bootstrap.pypa.io/get-pip.py\"\n        fi\n      fi\n      echo \"Using PIP bootstrapping script $GET_PIP_SCRIPT\"\n      curl  \"$GET_PIP_SCRIPT\" | sudo -H $PY\n    fi\n  fi\n\n  if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then\n    pyenv install $PYTHON\n    PY=/Users/travis/.pyenv/versions/${PYTHON}/bin/python\n  fi\n\n  PIP=\"$PY -m pip\"\n  sudo -H $PIP install --upgrade pip\n\ninstall:\n- |\n  #if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then\n    #cmake similarity_search -DWITH_EXTRAS=1\n  #else\n    cmake similarity_search\n  #fi\n  travis_wait make -j 2\n  travis_wait $PIP install --user scipy six flake8 psutil\n  cd python_bindings\n  travis_wait $PIP install --user -r requirements.txt\n  travis_wait $PY setup.py build_ext\n  travis_wait $PIP install --user .\n  cd ..\n\nscript:\n- $PY --version\n- cd python_bindings && $PY setup.py test && cd ..\n- |\n  if [ \"$TRAVIS_OS_NAME\" = \"linux\" ] ; then\n      set -e\n      cd similarity_search;\n      ./release/bunit\n      travis_retry ./release/test_integr integr.log \n      cd ..\n      set +e\n  fi\n\nafter_script:\n  - |\n    if [ \"$TRAVIS_TAG\" ]; then\n      export TRAVIS_OS_NAME\n      export PY\n      export PIP\n      export PYTHON\n      travis_wait bash travis/deploy.sh\n      travis_wait $PIP install --user \"six>=1.9.0\"\n      travis_wait $PIP install --user twine\n      cp .pypirc ~/.pypirc\n      pwd\n      ls python_bindings/\n      ls python_bindings/dist/\n      $PY -m twine upload -r testpypi -p $PYPI_PASSWORD --skip-existing python_bindings/dist/* &>/dev/null\n      echo \"Twine upload status: $?\"\n    else\n      echo \"Skipping deployment because this is not a tagged commit\"\n    fi\n\nbefore_cache:\n  - if [ \"${TRAVIS_OS_NAME}\" = \"osx\" ]; then brew cleanup; fi\n\ncache:\n  - apt\n  - directories:\n    - $HOME/.cache/pip\n    - $HOME/Library/Caches/Homebrew\n\n"
        },
        {
          "name": "LICENSE-Apache-2.0",
          "type": "blob",
          "size": 11.0927734375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.0380859375,
          "content": "[![Pypi version](https://img.shields.io/pypi/v/nmslib.svg)](http://pypi.python.org/pypi/nmslib)\n[![Downloads](https://pepy.tech/badge/nmslib)](https://pepy.tech/project/nmslib)\n[![Downloads](https://pepy.tech/badge/nmslib/month)](https://pepy.tech/project/nmslib)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/wd63b9doe7xco81t/branch/master?svg=true)](https://ci.appveyor.com/project/searchivarius/nmslib)\n[![Join the chat at https://gitter.im/nmslib/Lobby](https://badges.gitter.im/nmslib/Lobby.svg)](https://gitter.im/nmslib/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# Non-Metric Space Library (NMSLIB) \n\n## Important Notes\n\n* NMSLIB is generic but fast, see the results of [ANN benchmarks](https://github.com/erikbern/ann-benchmarks).\n* A standalone implementation of our fastest method HNSW [also exists as a header-only library](https://github.com/nmslib/hnswlib).\n* **All the documentation** (including using **Python bindings** and the query server, description of methods and spaces, building the library, etc) can be found [on this page](/manual/README.md).\n* For **generic questions/inquiries**, please, use [**the Gitter chat**](https://gitter.im/nmslib/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge): GitHub issues page is for bugs and feature requests.\n\n## Objectives\n\nNon-Metric Space Library (NMSLIB) is an **efficient** cross-platform similarity search library and a toolkit for evaluation of similarity search methods. The core-library does **not** have any third-party dependencies. It has been gaining popularity recently. In particular, it has become a part of [Amazon Elasticsearch Service](https://aws.amazon.com/about-aws/whats-new/2020/03/build-k-nearest-neighbor-similarity-search-engine-with-amazon-elasticsearch-service/).\n\nThe goal of the project is to create an effective and **comprehensive** toolkit for searching in **generic and non-metric** spaces.\nEven though the library contains a variety of metric-space access methods,\nour main focus is on **generic** and **approximate** search methods,\nin particular, on methods for non-metric spaces.\nNMSLIB is possibly the first library with a principled support for non-metric space searching.\n\nNMSLIB is an **extendible library**, which means that is possible to add new search methods and distance functions. NMSLIB can be used directly in C++ and Python (via Python bindings). In addition, it is also possible to build a query server, which can be used from Java (or other languages supported by Apache Thrift (**version 0.12**). Java has a native client, i.e., it works on many platforms without requiring a C++ library to be installed.\n\n**Authors**: Bilegsaikhan Naidan, Leonid Boytsov, Yury Malkov, David Novak. **With contributions from** Ben Frederickson, Lawrence Cayton, Wei Dong, Avrelin Nikita, Dmitry Yashunin, Bob Poekert, @orgoro, @gregfriedland, \nScott Gigante, Maxim Andreev, Daniel Lemire, Nathan Kurz, Alexander Ponomarenko.\n\n## Brief History\n\nNMSLIB started as a personal project of Bilegsaikhan Naidan, who created the initial code base, the Python bindings,\nand participated in earlier evaluations. \nThe most successful class of methods--neighborhood/proximity graphs--is represented by the Hierarchical Navigable Small World Graph (HNSW) due to Malkov and Yashunin (see the publications below). Other most useful methods, include a modification of the VP-tree due to Boytsov and Naidan (2013), a Neighborhood APProximation index (NAPP) proposed by Tellez et al. (2013) and improved by David Novak, as well as a vanilla uncompressed inverted file.\n\n\n## Credits and Citing\n\nIf you find this library useful, feel free to cite our SISAP paper [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/sisap/BoytsovN13) as well as other papers listed in the end. One **crucial contribution** to cite is the fast Hierarchical Navigable World graph (HNSW) method [**[BibTex]**](https://dblp.uni-trier.de/rec/bibtex/journals/corr/MalkovY16). Please, [also check out the stand-alone HNSW implementation by Yury Malkov](https://github.com/nmslib/hnswlib), which is released as a header-only HNSWLib library.\n\n## License\n\nThe code is released under the Apache License Version 2.0 http://www.apache.org/licenses/. \nOlder versions of the library include additional components, which have different licenses (but this does not apply to NMLISB 2.x):\n\nOlder versions of the library included the following components:\n* The LSHKIT, which is embedded in our library, is distributed under the GNU General Public License, see http://www.gnu.org/licenses/. \n* The k-NN graph construction algorithm *NN-Descent* due to Dong et al. 2011 (see the links below), which is also embedded in our library, seems to be covered by a free-to-use license, similar to Apache 2.\n* FALCONN library's licence is MIT.\n\n## Funding\n\nLeonid Boytsov was supported by the [Open Advancement of Question Answering Systems (OAQA) group](https://github.com/oaqa) and the following NSF grant #1618159: \"[Matching and Ranking via Proximity Graphs: Applications to Question Answering and Beyond](https://www.nsf.gov/awardsearch/showAward?AWD_ID=1618159&HistoricalAwards=false)\". Bileg was supported by the [iAd Center](https://web.archive.org/web/20160306011711/http://www.iad-center.com/).\n\n## Related Publications\n\nMost important related papers are listed below in the chronological order: \n* L. Boytsov, D. Novak, Y. Malkov, E. Nyberg  (2016). [Off the Beaten Path: Let’s Replace Term-Based Retrieval\nwith k-NN Search.](http://boytsov.info/pubs/cikm2016.pdf) In proceedings of CIKM'16. [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/cikm/BoytsovNMN16) We use a special branch of this library, plus [the following Java code](https://github.com/oaqa/knn4qa/tree/cikm2016).\n* Malkov, Y.A., Yashunin, D.A.. (2016). [Efficient and robust approximate nearest neighbor search using Hierarchical Navigable Small World graphs. CoRR](http://arxiv.org/abs/1603.09320), abs/1603.09320. [**[BibTex]**](http://adsabs.harvard.edu/cgi-bin/nph-bib_query?bibcode=2016arXiv160309320M&data_type=BIBTEX&db_key=PRE&nocookieset=1)\n* Bilegsaikhan, N., Boytsov, L. 2015 [Permutation Search Methods are Efficient, Yet Faster Search is Possible](http://boytsov.info/pubs/p2332-naidan-arxiv.pdf) PVLDB, 8(12):1618--1629, 2015 [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/journals/corr/NaidanBN15)\n* Ponomarenko, A., Averlin, N., Bilegsaikhan, N., Boytsov, L., 2014. [Comparative Analysis of Data Structures for Approximate Nearest Neighbor Search.](http://boytsov.info/pubs/da2014.pdf) [**[BibTex]**](http://scholar.google.com/scholar.bib?q=info:yOjNiT2Ql4AJ:scholar.google.com/&output=citation&hl=en&ct=citation&cd=0)\n* Malkov, Y., Ponomarenko, A., Logvinov, A., & Krylov, V., 2014. [Approximate nearest neighbor algorithm based on navigable small world graphs.](http://www.sciencedirect.com/science/article/pii/S0306437913001300) Information Systems, 45, 61-68. [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/journals/is/MalkovPLK14)\n* Boytsov, L., Bilegsaikhan, N., 2013. [Engineering Efficient and Effective Non-Metric Space Library.](http://boytsov.info/pubs/sisap2013.pdf)   In Proceedings of the 6th International Conference on Similarity Search and Applications (SISAP 2013). [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/sisap/BoytsovN13)  \n* Boytsov, L., Bilegsaikhan, N., 2013. [Learning to Prune in Metric and Non-Metric Spaces.](http://boytsov.info/pubs/nips2013.pdf)   In Advances in Neural Information Processing Systems 2013. [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/nips/BoytsovN13)\n* Tellez, Eric Sadit, Edgar Chávez, and Gonzalo Navarro. [Succinct nearest neighbor search.](http://www.dcc.uchile.cl/~gnavarro/ps/is12.pdf) Information Systems 38.7 (2013): 1019-1030. [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/journals/is/TellezCN13)\n* A. Ponomarenko, Y. Malkov, A. Logvinov, and V. Krylov  [Approximate nearest\nneighbor search small world approach.](http://www.iiis.org/CDs2011/CD2011IDI/ICTA_2011/Abstract.asp?myurl=CT175ON.pdf) ICTA 2011 \n* Dong, Wei, Charikar Moses, and Kai Li. 2011. [Efficient k-nearest neighbor graph construction for generic similarity measures.](http://wwwconference.org/proceedings/www2011/proceedings/p577.pdf) Proceedings of the 20th international conference on World wide web. ACM, 2011.\n[**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/mir/DongWCL12)\n* L. Cayton, 2008 [Fast nearest neighbor retrieval for bregman divergences.](http://lcayton.com/bbtree.pdf) Twenty-Fifth International Conference on Machine Learning (ICML). [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/icml/Cayton08)\n* Amato, Giuseppe, and Pasquale Savino. 2008 Approximate similarity search in metric spaces using inverted files. [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/conf/infoscale/AmatoS08)\n* Gonzalez, Edgar Chavez, Karina Figueroa, and Gonzalo Navarro. [Effective proximity retrieval by ordering permutations.](http://www.dcc.uchile.cl/~gnavarro/ps/tpami07.pdf) Pattern Analysis and Machine Intelligence, IEEE Transactions on 30.9 (2008): 1647-1658. [**[BibTex]**](http://dblp.uni-trier.de/rec/bibtex/journals/pami/ChavezFN08)\n\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "manual",
          "type": "tree",
          "content": null
        },
        {
          "name": "previous_releases_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "python_bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "query_server",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample_standalone_app",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "similarity_search",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_batch_app",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}