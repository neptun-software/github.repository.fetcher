{
  "metadata": {
    "timestamp": 1736565668282,
    "page": 566,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ispc/ispc",
      "stars": 2562,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".appveyor-clean-cache.txt",
          "type": "blob",
          "size": 0.8876953125,
          "content": "#  Copyright (c) 2019-2023, Intel Corporation\n#\n#  SPDX-License-Identifier: BSD-3-Clause\n\nThis is the file to explicitely trigger Appveyor cache invalidation caused \nby updates of docker files.\n\n04/25/2019: Updated dockers with LLVM ARM target\n05/01/2019: Updated dockers with LLVM AARCH64 target\n06/07/2019: Updated LLVM 8.0 dockers after modyfing 8_0_r362675.patch\n08/27/2019: Updated dockers with tools for cross compilation\n11/26/2019: Updated docker to include fix for #1595\n01/07/2020: Updated LLVM 9.0 docker to use VS2019\n01/16/2020: Updated LLVM 8.0 docker with r372480 patch and LLVM 9.0 docker with 9.0.1 version instead of 9.0\n01/30/2020: Added dockers for LLVM 10.0. Switched latest to LLVM 9.0\n03/18/2020: Updated LLVM 10.0 docker\n04/02/2020: Updated Windows dockers with LLVM built for x64\n04/29/2020: Updated LLVM 9.0/10.0 with backport fix from trunk for #1767.\n06/21/2020: Do not cache LLVM\n"
        },
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 5.404296875,
          "content": "#  Copyright (c) 2018-2024, Intel Corporation\n#\n#  SPDX-License-Identifier: BSD-3-Clause\n\nconfiguration: Release\n\nenvironment:\n  LLVM_LATEST: 18.1\n  DOCKER_PATH: \"ispc/test_repo\"\n  matrix:\n    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204\n      LLVM_VERSION: latest\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      LLVM_VERSION: latest\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      LLVM_VERSION: 17.0\n\nfor:\n-\n  matrix:\n    only:\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n  init:\n    - cmd: |-\n        set ISPC_HOME=%APPVEYOR_BUILD_FOLDER%\n        set LLVM_HOME=C:\\projects\\llvm\n        set CROSS_TOOLS=C:\\projects\\cross\n        set CHOCO_DIR=%ProgramData%\\chocolatey\n        set WASM=OFF\n        if \"%LLVM_VERSION%\"==\"latest\" (set WASM=ON)\n        if \"%APPVEYOR_BUILD_WORKER_IMAGE%\"==\"Visual Studio 2019\" ( (set generator=\"Visual Studio 16\") & (set vspath=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\"))\n        if \"%APPVEYOR_BUILD_WORKER_IMAGE%\"==\"Visual Studio 2022\" ( (set generator=\"Visual Studio 17\") & (set vspath=\"C:\\Program Files\\Microsoft Visual Studio\\2022\"))\n        set LLVM_TAR=llvm-18.1.8-win.vs2019-Release+Asserts-x86.arm.wasm.tar.7z\n        if \"%LLVM_VERSION%\"==\"17.0\" (set LLVM_TAR=llvm-17.0.6-win.vs2019-Release+Asserts-x86.arm.wasm.tar.7z)\n        if \"%LLVM_VERSION%\"==\"16.0\" (set LLVM_TAR=llvm-16.0.6-win.vs2019-Release+Asserts-x86.arm.wasm.tar.7z)\n  install:\n    - ps: choco install --no-progress winflexbison3 wget 7zip\n    - cmd: |-\n        if exist \"%CROSS_TOOLS%\\gnuwin32\\\" set NONEEDDOCKER=rem\n        if \"%LLVM_VERSION%\" == \"latest\" set LLVM_VERSION=%LLVM_LATEST%\n        set LLVM_SHORT_VER=%LLVM_VERSION:.=%\n        cd %ISPC_HOME%\n        if \"%WASM%\" == \"ON\" ( call scripts\\install_emscripten.bat )\n        if \"%WASM%\" == \"ON\" ( emcc --version )\n        set DOCKER_NAME=%DOCKER_PATH%:win_llvm100\n        %NONEEDDOCKER% docker pull %DOCKER_NAME%\n        %NONEEDDOCKER% docker run -d %DOCKER_NAME% > container_id.txt\n        %NONEEDDOCKER% set /p CONTAINER=<container_id.txt\n        %NONEEDDOCKER% docker cp %CONTAINER%:%CROSS_TOOLS% %CROSS_TOOLS%\n        set PATH=%LLVM_HOME%\\bin;%PATH%\n        mkdir %LLVM_HOME% && cd %LLVM_HOME%\n        wget -q https://github.com/ispc/ispc.dependencies/releases/download/llvm-%LLVM_VERSION%-ispc-dev/%LLVM_TAR%\n        7z.exe x -t7z %LLVM_TAR%\n        7z.exe x -ttar llvm*tar\n        set PATH=%LLVM_HOME%\\bin-%LLVM_VERSION%\\bin;%PATH%\n  before_build:\n    - cmd: |-\n        call %vspath%\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\n        cd %ISPC_HOME%\n        mkdir build && cd build\n        cmake .. -Thost=x64 -G %generator% -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_INSTALL_PREFIX=%ISPC_HOME%\\install -DISPC_PREPARE_PACKAGE=ON -DM4_EXECUTABLE=C:\\cygwin64\\bin\\m4.exe -DISPC_CROSS=ON -DISPC_GNUWIN32_PATH=%CROSS_TOOLS%\\gnuwin32 -DWASM_ENABLED=%WASM% -DISPC_INCLUDE_BENCHMARKS=ON\n  build_script:\n    - cmd: msbuild %ISPC_HOME%\\build\\PACKAGE.vcxproj /p:Platform=x64 /p:Configuration=%configuration%\n  test_script:\n  # Perf tests require Win64 configuration. \"Visual Studio 16\" generator is Win64 by default but for older versions\n  # we need to specify it manually.\n    - cmd: |-\n        set PATH=%ISPC_HOME%\\build\\bin\\%configuration%;%PATH%\n        cd %ISPC_HOME%\n        check_isa.exe\n        ispc --support-matrix\n        python scripts\\perf.py -n 1 -g %generator% && msbuild %ISPC_HOME%\\build\\tests\\check-all.vcxproj /t:Build /p:Platform=x64 /p:Configuration=%configuration% && msbuild %ISPC_HOME%\\build\\RUN_TESTS.vcxproj /t:Build /p:Platform=x64 /p:Configuration=%configuration%\n\n-\n  matrix:\n    only:\n      - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204\n  init:\n    - sh: |-\n        export ISPC_HOME=$APPVEYOR_BUILD_FOLDER\n        export LLVM_HOME=$APPVEYOR_BUILD_FOLDER/llvm\n        export CROSS_TOOLS=/usr/local/src/cross\n        export WASM=OFF\n        export LLVM_TAR=llvm-18.1.8-ubuntu22.04-Release+Asserts-x86.arm.wasm.tar.xz\n  install:\n    - sh: |-\n        sudo apt-get update\n        sudo apt-get install -y flex libc6-dev-i386 g++-multilib lib32stdc++6 libtbb-dev\n        if [ \"$LLVM_VERSION\" = \"latest\" ]; then\n          export LLVM_VERSION=$LLVM_LATEST\n          export WASM=ON\n        fi;\n        if [ \"$WASM\" == \"ON\" ]; then source scripts/install_emscripten.sh && emcc --version; fi\n        LLVM_SHORT_VER=${LLVM_VERSION/\\.}\n        export DOCKER_NAME=$DOCKER_PATH:ubuntu_llvm$LLVM_SHORT_VER\n        if [ ! -d \"$CROSS_TOOLS\" ]; then\n          docker pull \"$DOCKER_NAME\"\n          export CONTAINER=`docker run -d \"$DOCKER_NAME\"`\n          sudo docker cp $CONTAINER:$CROSS_TOOLS $CROSS_TOOLS\n        fi\n        mkdir $LLVM_HOME && cd $LLVM_HOME\n        wget https://github.com/ispc/ispc.dependencies/releases/download/llvm-$LLVM_VERSION-ispc-dev/$LLVM_TAR\n        tar xvf $LLVM_TAR\n        export PATH=$LLVM_HOME/bin-$LLVM_VERSION/bin:$PATH\n  before_build:\n    - sh: |-\n        cd $ISPC_HOME && mkdir build && cd build\n        cmake ../ -DISPC_PREPARE_PACKAGE=ON -DCMAKE_INSTALL_PREFIX=$ISPC_HOME/install -DISPC_CROSS=ON -DWASM_ENABLED=$WASM -DCMAKE_CXX_FLAGS=\"-Werror\"\n  build_script:\n    - sh: make package -j4\n\n  test_script:\n    # Run only lit testing here since we have full testing in Travis\n    - sh: |-\n        bin/ispc --support-matrix\n        make check-all\n\ncache:\n  - '%CHOCO_DIR%\\bin -> .appveyor.yml'\n  - '%CHOCO_DIR%\\lib -> .appveyor.yml'\n  - '%CROSS_TOOLS%\\gnuwin32 -> .appveyor-clean-cache.txt'\n\nartifacts:\n  - path: build/ispc-*\n    name: ispc\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0830078125,
          "content": "Language:        Cpp\nBasedOnStyle:  LLVM\nColumnLimit: 120\nIndentWidth: 4\nTabWidth: 4\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.4521484375,
          "content": "Checks: '-*,\n         hicpp-braces-around-statements,\n         clang-analyzer-*,\n         -clang-analyzer-core.UndefinedBinaryOperatorResult,\n         -clang-analyzer-core.NonNullParamChecker,\n         -clang-analyzer-core.CallAndMessage,\n         -clang-analyzer-core.uninitialized.Assign,\n         -clang-analyzer-optin.cplusplus.VirtualCall,\n         -clang-analyzer-optin.core.EnumCastOutOfRange,\n         -clang-analyzer-core.NullDereference,\n         -clang-analyzer-core.uninitialized.Branch,\n         -clang-analyzer-unix.Malloc,\n         bugprone-*,\n         -bugprone-unchecked-optional-access,\n         -bugprone-easily-swappable-parameters,\n         -bugprone-assignment-in-if-condition,\n         -bugprone-reserved-identifier,\n         -bugprone-narrowing-conversions,\n         -bugprone-switch-missing-default-case,\n         -bugprone-suspicious-include,\n         -bugprone-branch-clone,\n         -bugprone-signed-char-misuse,\n         -bugprone-implicit-widening-of-multiplication-result,\n         cppcoreguidelines-*,\n         -cppcoreguidelines-pro-type-const-cast,\n         -cppcoreguidelines-avoid-do-while,\n         -cppcoreguidelines-special-member-functions,\n         -cppcoreguidelines-pro-type-vararg,\n         -cppcoreguidelines-pro-bounds-constant-array-index,\n         -cppcoreguidelines-owning-memory,\n         -cppcoreguidelines-avoid-magic-numbers,\n         -cppcoreguidelines-avoid-c-arrays,\n         -cppcoreguidelines-pro-bounds-array-to-pointer-decay,\n         -cppcoreguidelines-pro-bounds-pointer-arithmetic,\n         -cppcoreguidelines-avoid-non-const-global-variables,\n         -cppcoreguidelines-pro-type-static-cast-downcast,\n         -cppcoreguidelines-pro-type-cstyle-cast,\n         -cppcoreguidelines-narrowing-conversions,\n         -cppcoreguidelines-macro-usage,\n         -cppcoreguidelines-no-malloc,\n         -cppcoreguidelines-pro-type-union-access,\n         -cppcoreguidelines-pro-type-member-init,\n         -cppcoreguidelines-prefer-member-initializer'\n\n# misc-include-cleaner\n# misc-unused-parameters\n\nWarningsAsErrors: '*'\n\nCheckOptions:\n  - key:     readability-function-cognitive-complexity.Threshold\n    value:   15\n  - key:     readability-function-cognitive-complexity.DescribeBasicIncrements\n    value:   false\n  - key:     readability-function-size.LineThreshold\n    value:   100\n  - key:     readability-function-size.StatementThreshold\n    value:   50\n  - key:     cppcoreguidelines-avoid-do-while.IgnoreMacros\n    value:   'true'\n\nFormatStyle: file\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2236328125,
          "content": "*.pyc\n*~\ndepend\nispc\nispc_test\nispc_ref\nobjs\ndocs/*.html\ntests*/*cpp\ntests*/*run\nlogs/\nnotify_log.log\nalloy_results_*\nexamples/*/*.png\nexamples/*/*.ppm\nexamples/*/objs/*\nexamples/*/ref\nexamples/*/test\n*.swp\ncheck_isa.exe\nbuild*\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2744140625,
          "content": "[submodule \"benchmarks/vendor/google/benchmark\"]\n\tpath = benchmarks/vendor/google/benchmark\n\turl = https://github.com/google/benchmark\n[submodule \"ispcrt/tests/vendor/google/googletest\"]\n\tpath = ispcrt/tests/vendor/google/googletest\n\turl = https://github.com/google/googletest.git\n"
        },
        {
          "name": ".trivyignore",
          "type": "blob",
          "size": 0.0908203125,
          "content": "# In docker files:\n# We're not hosting any application with usage of the dockers.\nAVD-DS-0026"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 40.904296875,
          "content": "#\n#  Copyright (c) 2018-2025, Intel Corporation\n#\n#  SPDX-License-Identifier: BSD-3-Clause\n\n#\n# ispc CMakeLists.txt\n#\ncmake_minimum_required(VERSION 3.15)\n\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\n\n# Set C++ standard to C++17.\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\n\n# Set C standard to C11\nset(CMAKE_C_STANDARD   11)\nset(CMAKE_C_STANDARD_REQUIRED   ON)\nset(CMAKE_C_EXTENSIONS OFF)\n\n\nif (UNIX)\n    if (NOT CMAKE_C_COMPILER)\n        set(CMAKE_C_COMPILER \"clang\")\n    endif()\n    if (NOT CMAKE_CXX_COMPILER)\n        set(CMAKE_CXX_COMPILER \"clang++\")\n    endif()\nendif()\n\n# Generate compile_commands.json by default - this enables VSCode to do better job interpretting\n# C++ files form the project.\nset(CMAKE_EXPORT_COMPILE_COMMANDS \"ON\" CACHE BOOL \"Export compile commands\")\n\nif (APPLE)\n    # Setting ISPC_MACOS_UNIVERSAL_BINARIES to ON is conventional way of building ISPC as Universal Binary.\n    # If cross compilation is needed (arm64->x86_64 or x86_64->arm64), specify CMAKE_OSX_ARCHITECTURES\n    # on the command line explicitly\n    option(ISPC_MACOS_UNIVERSAL_BINARIES \"Build Universal Binaries on macOS\" OFF)\n    if (ISPC_MACOS_UNIVERSAL_BINARIES)\n        message(STATUS \"Building Universal Binaries (x86_64+arm64)\")\n        set(CMAKE_OSX_ARCHITECTURES \"x86_64;arm64\" CACHE STRING \"OSX architectures\")\n    endif()\n\n    # We need to target different minimum macOS versions on x86 and arm by default, but before\n    # we execute project() command, the regular CMAKE_* variables with host info are not initialized,\n    # so we do this hack to detect the platform. It's not perfect, but good enough.\n    execute_process(COMMAND uname -m OUTPUT_VARIABLE UNAME)\n    if (UNAME MATCHES \"x86_64\" OR CMAKE_OSX_ARCHITECTURES MATCHES \"x86_64\")\n        # Note: it's ok to have 10.12 for Universal Binaries.\n        set(CMAKE_OSX_DEPLOYMENT_TARGET \"10.12\" CACHE STRING \"Minimum macOS version to support\")\n    else()\n        set(CMAKE_OSX_DEPLOYMENT_TARGET \"11.0\" CACHE STRING \"Minimum macOS version to support\")\n    endif()\n    message(STATUS \"Targeting minimum macOS version: ${CMAKE_OSX_DEPLOYMENT_TARGET}\")\n\nendif()\n\nset(PROJECT_NAME ispc)\nset(ISPC_BUILD TRUE)\nproject(${PROJECT_NAME})\n\n## Check PIE support\ninclude(CheckPIESupported)\ncheck_pie_supported(OUTPUT_VARIABLE CHECK_PIE_OUTPUT LANGUAGES CXX)\nif(NOT CMAKE_CXX_LINK_PIE_SUPPORTED)\n    message(WARNING \"PIE is not supported at link time: ${CHECK_PIE_OUTPUT}.\\n\"\n                    \"PIE link options will not be passed to linker.\")\nendif()\n\nset(X86_HOST FALSE)\nif (${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES \"amd64|AMD64|86\")\n    set(X86_HOST TRUE)\nendif()\n\noption(X86_ENABLED \"Enable x86 support\" ${X86_HOST})\noption(ARM_ENABLED \"Enable ARM support\" ON)\noption(WASM_ENABLED \"Enable experimental Web Assembly support\" OFF)\noption(XE_ENABLED \"Enable Intel Xe support\" OFF)\noption(ISPC_INCLUDE_EXAMPLES \"Generate build targets for the ISPC examples\" ON)\noption(ISPC_INCLUDE_DPCPP_EXAMPLES \"Generate build targets for the ISPC/DPCPP interoperability examples\" OFF)\noption(ISPC_INCLUDE_TESTS \"Generate build targets for the ISPC tests.\" ON)\noption(ISPC_INCLUDE_BENCHMARKS \"Generate build targets for the ISPC tests.\" OFF)\noption(ISPC_INCLUDE_RT \"Generate build targets for ISPC runtime.\" ON)\noption(ISPC_INCLUDE_UTILS \"Generate build targets for the utils.\" ON)\noption(ISPC_INCLUDE_UTILS_ONLY \"Generate build targets only for the utils.\" OFF)\noption(ISPC_PREPARE_PACKAGE \"Generate build targets for ispc package\" OFF)\noption(ISPC_PACKAGE_EXAMPLES \"Pack examples into the ISPC package\" ON)\noption(ISPC_SLIM_BINARY \"Build ISPC as slim binary\" OFF)\n\noption(ISPC_CROSS \"Build ISPC with cross compilation support\" OFF)\n# Default settings for cross compilation\nif (ISPC_CROSS)\n    option(ISPC_WINDOWS_TARGET \"Build ISPC with windows target support\" ON)\n    option(ISPC_LINUX_TARGET \"Build ISPC with linux target support\" ON)\n    option(ISPC_FREEBSD_TARGET \"Build ISPC with freebsd target support\" ON)\n    # It's possbile to build macOS target on Windows or Linux, but we don't do that by default.\n    option(ISPC_MACOS_TARGET \"Build ISPC with macos target support\" OFF)\n    option(ISPC_IOS_TARGET \"Build ISPC with ios target support\" ON)\n    option(ISPC_ANDROID_TARGET \"Build ISPC with android target support\" ON)\n    option(ISPC_PS_TARGET \"Build ISPC with ps4 and ps5 targets support\" ON)\n    # We silently disable some of cross targets. We should probably warn user or issue an error,\n    # but it seems good enough.\n    if (WIN32)\n        set(ISPC_IOS_TARGET OFF)\n        if ((ISPC_LINUX_TARGET OR ISPC_ANDROID_TARGET OR ISPC_PS_TARGET) AND NOT ISPC_GNUWIN32_PATH)\n            message (FATAL_ERROR \"Set ISPC_GNUWIN32_PATH variable for cross compilation to Linux/Android/PS4 e.g. C:/gnuwin32\")\n        endif()\n        if (ISPC_MACOS_TARGET AND NOT ISPC_MACOS_SDK_PATH)\n            message (FATAL_ERROR \"Set ISPC_MACOS_SDK_PATH variable for cross compilation to MacOS e.g. C:/iusers/MacOSX10.14.sdk\")\n        endif()\n    elseif (APPLE)\n        set(ISPC_MACOS_TARGET ON)\n        set(ISPC_WINDOWS_TARGET OFF)\n        set(ISPC_PS_TARGET OFF)\n        set(ISPC_FREEBSD_TARGET OFF)\n        if ((ISPC_LINUX_TARGET OR ISPC_ANDROID_TARGET) AND NOT ISPC_ANDROID_NDK_PATH)\n            message (FATAL_ERROR \"Set ISPC_ANDROID_NDK_PATH variable for cross compilation to Linux/Android e.g. /Users/Shared/android-ndk-r20\")\n        endif()\n        if (ISPC_IOS_TARGET AND NOT ISPC_IOS_SDK_PATH)\n            # Use standard iOS SDK location if this is not specified.\n            set(command \"xcrun\" \"--show-sdk-path\" \"--sdk\" \"iphoneos\")\n            execute_process(COMMAND ${command}\n                OUTPUT_VARIABLE ISPC_IOS_SDK_PATH\n                OUTPUT_STRIP_TRAILING_WHITESPACE\n            )\n            message(STATUS \"Using iOS SDK path ${ISPC_IOS_SDK_PATH}\")\n        endif()\n    else()\n        set(ISPC_WINDOWS_TARGET OFF)\n        set(ISPC_PS_TARGET OFF)\n        set(ISPC_IOS_TARGET OFF)\n        if (ISPC_MACOS_TARGET AND NOT ISPC_MACOS_SDK_PATH)\n            message (FATAL_ERROR \"Set ISPC_MACOS_SDK_PATH variable for cross compilation to MacOS e.g. /iusers/MacOSX10.14.sdk\")\n        endif()\n    endif()\nelse()\n    if (WIN32)\n        set(ISPC_WINDOWS_TARGET ON)\n    elseif (APPLE)\n        set(ISPC_MACOS_TARGET ON)\n    elseif (CMAKE_SYSTEM_NAME STREQUAL \"FreeBSD\")\n        set(ISPC_FREEBSD_TARGET ON)\n    else()\n        set(ISPC_LINUX_TARGET ON)\n    endif()\nendif()\nif (ISPC_LINUX_TARGET OR ISPC_ANDROID_TARGET OR ISPC_PS_TARGET\n    OR ISPC_FREEBSD_TARGET OR ISPC_IOS_TARGET OR ISPC_MACOS_TARGET)\n    set(ISPC_UNIX_TARGET ON)\nelse()\n    set(ISPC_UNIX_TARGET OFF)\nendif()\n\nif (APPLE)\n    # Use standard macOS SDK location if this is not specified.\n    if (NOT ISPC_MACOS_SDK_PATH)\n        set(command \"xcrun\" \"--show-sdk-path\")\n        execute_process(COMMAND ${command}\n            OUTPUT_VARIABLE ISPC_MACOS_SDK_PATH\n            OUTPUT_STRIP_TRAILING_WHITESPACE\n        )\n        message(STATUS \"Using macOS SDK path ${ISPC_MACOS_SDK_PATH}\")\n    endif()\n\n    # Workaround CMake/CPack issue https://gitlab.kitware.com/cmake/cmake/-/issues/24601\n    # When llvm toolchain is presented in PATH, llvm-strip is preferred over\n    # macOS strip. However, CPack fails to correctly call llvm-strip because it\n    # adds flags like `-u` that are macOS strip specific.\n    # It may be removed later when CMake fixes ambiguity.\n    if (${CMAKE_VERSION} VERSION_LESS \"3.27.0\")\n        set(CMAKE_STRIP strip)\n    endif()\nendif()\n\nset(ISPC_MACOS_ARM_TARGET OFF)\nif (ISPC_MACOS_TARGET AND ISPC_MACOS_SDK_PATH)\n    # Get macOS SDK version.\n    # xcrun is known not to work for standalone SDK or in the default environment\n    # on some systems (without explicitly running \"xcode-select -s <path>\" first).\n    # So we try to get the version from the SDK path first, and then fall back\n    # to looking at the SDK folder name.\n    set(command \"xcrun\" \"--sdk\" ${ISPC_MACOS_SDK_PATH} \"--show-sdk-version\")\n    execute_process(COMMAND ${command}\n        OUTPUT_VARIABLE SDK_VER\n        RESULT_VARIABLE XCRUN_RESULT\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\n\n    if (NOT XCRUN_RESULT STREQUAL \"0\")\n        if (IS_SYMLINK ${ISPC_MACOS_SDK_PATH})\n            # Follow symlinks, relative and absolute.\n            file(READ_SYMLINK \"${ISPC_MACOS_SDK_PATH}\" ISPC_MACOS_SDK_PATH_NEW)\n            if (NOT IS_ABSOLUTE \"${ISPC_MACOS_SDK_PATH_NEW}\")\n                get_filename_component(ISPC_MACOS_SDK_PATH_DIR \"${ISPC_MACOS_SDK_PATH}\" DIRECTORY)\n                set(ISPC_MACOS_SDK_PATH_NEW \"${ISPC_MACOS_SDK_PATH_DIR}/${ISPC_MACOS_SDK_PATH_NEW}\")\n            endif()\n            set(ISPC_MACOS_SDK_PATH \"${ISPC_MACOS_SDK_PATH_NEW}\")\n        endif()\n\n        string(REGEX MATCH \"MacOSX([0-9]*.[0-9]*).sdk\" _ ${ISPC_MACOS_SDK_PATH})\n        set(SDK_VER \"${CMAKE_MATCH_1}\")\n    endif()\n\n    message(STATUS \"MacOS_SDK version: ${SDK_VER}\")\n\n    if (\"${SDK_VER}\" STREQUAL \"\")\n        message(WARNING \"MacOS SDK version was not detected, assuming 11.0 or later, enabling ARM support\")\n        set(ISPC_MACOS_ARM_TARGET ON)\n    elseif(\"${SDK_VER}\" VERSION_GREATER_EQUAL \"11.0\")\n        message(STATUS \"MacOS_SDK supports ARM (SDK ver >= 11.0)\")\n        set(ISPC_MACOS_ARM_TARGET ON)\n    else()\n        message(STATUS \"MacOS_SDK does NOT supports ARM (SDK ver < 11.0)\")\n    endif()\nendif()\n\n# If Xe target is enabled, generate build targets for Xe examples and ISPCRT on Linux\nif (XE_ENABLED)\n    option(ISPC_INCLUDE_XE_EXAMPLES \"Generate build targets for the ISPC Xe examples\" ON)\nendif()\n\nif (UNIX)\n    option(ISPC_STATIC_STDCXX_LINK \"Link statically with libstdc++ and libgcc\" OFF)\n    if (ISPC_PREPARE_PACKAGE AND (NOT APPLE))\n        option(ISPC_STATIC_LINK \"Link statically (all except glibc)\" ON)\n    else()\n        option(ISPC_STATIC_LINK \"Link statically (all except glibc)\" OFF)\n    endif()\n    option(ISPC_USE_ASAN \"Build ispc with address sanitizer instrumentation using clang compiler\" OFF)\nendif()\n\n# Use solution folders.\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\nset(OUTPUT_DEBUG Debug/bin)\nset(OUTPUT_RELEASE Release/bin)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin )\n\nif(CMAKE_BUILD_TYPE)\n    # Validate build type\n    set(CONFIGURATION_TYPES \"Debug;Release;RelWithDebInfo\")\n\n    string(FIND \"${CONFIGURATION_TYPES}\" \"${CMAKE_BUILD_TYPE}\" MATCHED_CONFIG)\n    if (${MATCHED_CONFIG} EQUAL -1)\n         message(FATAL_ERROR \"CMAKE_BUILD_TYPE (${CMAKE_BUILD_TYPE}) allows only the following values: ${CONFIGURATION_TYPES}\")\n    endif()\nelse(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE \"Release\")\n    message(STATUS \"Build type not specified: Use Release by default.\")\nendif(CMAKE_BUILD_TYPE)\n\n\n# Build target for utility checking host ISA\nif (ISPC_INCLUDE_UTILS)\n    add_executable(check_isa \"\")\n    target_sources(check_isa PRIVATE tools/check_isa.cpp)\n    set_target_properties(check_isa PROPERTIES FOLDER \"Utils\")\n    if (NOT ISPC_PREPARE_PACKAGE)\n        install (TARGETS check_isa DESTINATION bin)\n    endif()\n    if (ISPC_INCLUDE_UTILS_ONLY)\n        # Skip the below part of CMake. It is useful when only check_isa compiling is needed.\n        return()\n    endif()\nendif()\n\nset(BITCODE2CPP \"${CMAKE_CURRENT_SOURCE_DIR}/scripts/bitcode2cpp.py\")\n\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/ispcrt/cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/FixWindowsPath.cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindLLVM.cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/Git.cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/CommonStdlibBuiltins.cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/GenerateBuiltins.cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/Stdlib.cmake)\ninclude(${CMAKE_CURRENT_SOURCE_DIR}/cmake/Version.cmake)\n\n# Get ispc version\nget_ispc_version(\"${CMAKE_CURRENT_SOURCE_DIR}/common/version.h\")\n\nfind_package(Python3 REQUIRED)\n    if (NOT Python3_Interpreter_FOUND)\n        message(FATAL_ERROR \"Python interpreter is not found\")\n    endif()\n\nfind_package(BISON 3.0 REQUIRED)\n    if (BISON_FOUND)\n        set(BISON_INPUT src/parse.yy)\n        set(BISON_CPP_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/parse.cc)\n        set(BISON_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/parse.hh\n                         ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/parse.output)\n        add_custom_command (\n            OUTPUT ${BISON_CPP_OUTPUT} ${BISON_OUTPUT}\n            COMMAND ${BISON_EXECUTABLE} -d -t -v\n                --output=${BISON_CPP_OUTPUT}\n                ${BISON_INPUT}\n            MAIN_DEPENDENCY ${BISON_INPUT}\n            COMMENT \"Generating parse.cc\"\n            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n    )\n    endif()\n\nfind_package(FLEX 2.6 REQUIRED)\n    if (FLEX_FOUND)\n        set(FLEX_INPUT  src/lex.ll)\n        set(FLEX_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/lex.cpp)\n        add_custom_command(\n            OUTPUT ${FLEX_OUTPUT}\n            COMMAND ${FLEX_EXECUTABLE}\n                --outfile=${FLEX_OUTPUT}\n                ${FLEX_INPUT}\n            MAIN_DEPENDENCY ${FLEX_INPUT}\n            COMMENT \"Generating lex.cpp\"\n            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        )\n    endif()\n\nif (NOT X86_ENABLED AND NOT ARM_ENABLED AND NOT WASM_ENABLED AND NOT XE_ENABLED)\n    message( FATAL_ERROR \"Either X86, ARM, WASM or XE targets need to be enabled.\")\nendif ()\n\n# All possible ISPC targets\nlist(APPEND X86_TARGETS\n    sse2-i32x4 sse2-i32x8\n    sse4-i32x4 sse4-i32x8 sse4-i8x16 sse4-i16x8\n    # Note here that avx1-i32x4 is aliased to sse4-i32x4 plus avx attribute,\n    # sse41* targets are aliased to corresponding sse4 targets.\n    avx1-i32x8 avx1-i32x16 avx1-i64x4\n    avx2-i8x32 avx2-i16x16\n    avx2-i32x4 avx2-i32x8 avx2-i32x16 avx2-i64x4\n    avx2vnni-i32x4 avx2vnni-i32x8 avx2vnni-i32x16\n    avx512skx-x4 avx512skx-x8 avx512skx-x16\n    avx512skx-x32 avx512skx-x64\n    avx512icl-x4 avx512icl-x8 avx512icl-x16\n    avx512icl-x32 avx512icl-x64\n    avx512spr-x4 avx512spr-x8 avx512spr-x16 avx512spr-x32 avx512spr-x64)\n\n# LLVM is removing support for Xeon Phi in 19.0\nif (${LLVM_VERSION_NUMBER} VERSION_LESS \"19.0.0\")\n    list(APPEND X86_TARGETS avx512knl-x16)\nendif()\n\nlist(APPEND ARM_TARGETS neon-i8x16 neon-i16x8 neon-i32x4 neon-i32x8)\nlist(APPEND WASM_TARGETS wasm-i32x4)\nlist(APPEND XE_TARGETS gen9-x16 gen9-x8 xelp-x16 xelp-x8 xehpg-x16 xehpg-x8 xehpc-x16 xehpc-x32 xelpg-x16 xelpg-x8\n                       xe2hpg-x16 xe2hpg-x32 xe2lpg-x16 xe2lpg-x32)\n\nif (X86_ENABLED)\n    list(APPEND ISPC_TARGETS ${X86_TARGETS})\nendif()\nif (ARM_ENABLED)\n    list(APPEND ISPC_TARGETS ${ARM_TARGETS})\nendif()\nif (WASM_ENABLED)\n    list(APPEND ISPC_TARGETS ${WASM_TARGETS})\nendif()\nif (XE_ENABLED)\n    list(APPEND ISPC_TARGETS ${XE_TARGETS})\nendif()\n\nif (WASM_ENABLED)\n    find_program(EMCC_EXECUTABLE emcc)\n    if (NOT EMCC_EXECUTABLE)\n        message(FATAL_ERROR \"emcc not found!\")\n    endif()\n    message(STATUS \"EMCC_EXECUTABLE: ${EMCC_EXECUTABLE}\")\nendif()\n\nif (${LLVM_VERSION_NUMBER} VERSION_LESS \"16.0.0\")\n    message(FATAL_ERROR \"ISPC requires LLVM 16.0.0 or later\")\nendif()\n\nset(CLANG_LIBRARY_LIST clangFrontend clangBasic clangEdit clangLex clangSupport clangASTMatchers)\n\nset(LLVM_COMPONENTS engine ipo bitreader bitwriter instrumentation linker option frontendopenmp passes)\n\n# windowsdriver is a small library introduced in LLVM 15. While it's targeted at Windows only,\n# it's used in the LLVM code without any ifdef and is needed on all platforms.\n# An interesting fact, that on Linux it is not required, because linker is smart enough to optimize out\n# the calls to unresolved symbols. It's not the case on macOS though.\nlist(APPEND LLVM_COMPONENTS windowsdriver)\n\nif (X86_ENABLED)\n    list(APPEND LLVM_COMPONENTS x86)\nendif()\nif (ARM_ENABLED)\n    list(APPEND LLVM_COMPONENTS arm aarch64)\nendif()\nif (WASM_ENABLED)\n    list(APPEND LLVM_COMPONENTS webassembly)\nendif()\nif (XE_ENABLED)\n    if(CMAKE_SIZEOF_VOID_P EQUAL 4)\n        set(TARGET_MODIFIER \"32\")\n        set(PB_PATH_MODIFIER \"x86\")\n    else()\n        set(TARGET_MODIFIER \"64\")\n        set(PB_PATH_MODIFIER \"x64\")\n    endif()\n\n    list(APPEND XE_LIBRARY_LIST LLVMGenXIntrinsics LLVMSPIRVLib)\nendif()\n\nget_llvm_libfiles(LLVM_LIBRARY_LIST ${LLVM_COMPONENTS})\nget_llvm_cppflags(LLVM_CPP_FLAGS)\n\nif(CMAKE_GENERATOR MATCHES \"Visual Studio\")\n    # Visual Studio generator places binaries under bin/$(Configuration) subdirectory.\n    set(BITCODE_FOLDER ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/share/ispc)\n    set(INCLUDE_FOLDER ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/include)\nelse()\n    set(BITCODE_FOLDER ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/../share/ispc)\n    set(INCLUDE_FOLDER ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/../include)\nendif()\nmessage(STATUS \"BITCODE_FOLDER is ${BITCODE_FOLDER}\")\nfile(MAKE_DIRECTORY ${BITCODE_FOLDER})\n\n# Defines builtin target\ngenerate_builtins()\n\n# Common sources between ispc-opt and ispc\nlist(APPEND COMMON_SOURCES\n    common/version.rc\n    common/version.h\n    src/bitcode_lib.cpp\n    src/bitcode_lib.h\n    src/builtins-decl.cpp\n    src/builtins-decl.h\n    src/ispc.cpp\n    src/ispc.h\n    src/ispc_version.h\n    src/llvmutil.cpp\n    src/llvmutil.h\n    src/target_enums.cpp\n    src/target_enums.h\n    src/target_registry.cpp\n    src/target_registry.h\n    src/util.cpp\n    src/util.h\n)\n\n# Source files used only in ispc\nlist(APPEND FRONTEND_SOURCES\n    ${STDLIB_FILES}\n    ${BISON_CPP_OUTPUT}\n    ${FLEX_OUTPUT}\n    ${CMAKE_CURRENT_SOURCE_DIR}/stdlib/stdlib.ispc\n    src/ast.cpp\n    src/ast.h\n    src/builtins.cpp\n    src/builtins.h\n    src/ctx.cpp\n    src/ctx.h\n    src/decl.cpp\n    src/decl.h\n    src/expr.cpp\n    src/expr.h\n    src/func.cpp\n    src/func.h\n    src/intrinsics.cpp\n    src/module.cpp\n    src/module.h\n    src/stmt.cpp\n    src/stmt.h\n    src/sym.cpp\n    src/sym.h\n    src/type.cpp\n    src/type.h\n    src/parse.yy\n    src/lex.ll\n)\n\n# ISPC optimization passes shared between ispc and ispc-opt\nlist(APPEND OPT_SOURCES\n    src/opt.cpp\n    src/opt.h\n    src/opt/CheckIRForXeTarget.cpp\n    src/opt/CheckIRForXeTarget.h\n    src/opt/GatherCoalescePass.cpp\n    src/opt/GatherCoalescePass.h\n    src/opt/IsCompileTimeConstant.cpp\n    src/opt/IsCompileTimeConstant.h\n    src/opt/ImproveMemoryOps.cpp\n    src/opt/ImproveMemoryOps.h\n    src/opt/InstructionSimplify.cpp\n    src/opt/InstructionSimplify.h\n    src/opt/IntrinsicsOptPass.cpp\n    src/opt/IntrinsicsOptPass.h\n    src/opt/LowerISPCIntrinsics.cpp\n    src/opt/LowerISPCIntrinsics.h\n    src/opt/MangleOpenCLBuiltins.cpp\n    src/opt/MangleOpenCLBuiltins.h\n    src/opt/PeepholePass.cpp\n    src/opt/PeepholePass.h\n    src/opt/RemovePersistentFuncs.cpp\n    src/opt/RemovePersistentFuncs.h\n    src/opt/ReplaceMaskedMemOps.cpp\n    src/opt/ReplaceMaskedMemOps.h\n    src/opt/ReplacePseudoMemoryOps.cpp\n    src/opt/ReplacePseudoMemoryOps.h\n    src/opt/ReplaceStdlibShiftPass.cpp\n    src/opt/ReplaceStdlibShiftPass.h\n    src/opt/ScalarizePass.cpp\n    src/opt/ScalarizePass.h\n    src/opt/XeGatherCoalescePass.cpp\n    src/opt/XeGatherCoalescePass.h\n    src/opt/XeReplaceLLVMIntrinsics.cpp\n    src/opt/XeReplaceLLVMIntrinsics.h\n)\n\nset(STDLIB_HEADERS core.isph stdlib.isph)\nset(ALL_STDLIB_HEADERS\n  builtins.isph\n  core.isph\n  stdlib.isph\n  svml.isph\n  target.isph\n)\nset(STDLIB_ISPC_FILES stdlib/stdlib.ispc)\nforeach (header ${ALL_STDLIB_HEADERS})\n    list(APPEND STDLIB_ISPC_FILES stdlib/include/${header})\nendforeach()\n\n# To show stdlib.ispc in VS solution:\nif (WIN32)\n    set_source_files_properties(\"${CMAKE_CURRENT_SOURCE_DIR}/stdlib/stdlib.ispc\" PROPERTIES HEADER_FILE_ONLY TRUE)\n    source_group(\"ISPC\" FILES \"${CMAKE_CURRENT_SOURCE_DIR}/stdlib/stdlib.ispc\")\nendif()\n\n# Build definitions\nstring(TIMESTAMP BUILD_DATE \"%Y%m%d\" UTC)\nlist(APPEND COMPILE_DEFINITIONS\n    BUILD_DATE=\\\"${BUILD_DATE}\\\"\n    BUILD_VERSION=\\\"${GIT_COMMIT_HASH}\\\"\n)\nif (UNIX)\n    if (NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n        # Compile-time protection against static sized buffer overflows.\n        list(APPEND COMPILE_DEFINITIONS _FORTIFY_SOURCE=2)\n    endif()\nelse()\n    list(APPEND COMPILE_DEFINITIONS NOMINMAX)\n    if (NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n        list(APPEND COMPILE_DEFINITIONS NDEBUG)\n    endif()\nendif()\n\n# TODO: It may be confusing that some CMake variables start with ISPC but some\n# not. It can be also useful to have same name for CMake var and the\n# corresponding macro definition. It is not clear why it make sense to have\n# different ones.\nif (X86_ENABLED)\n    list(APPEND COMPILE_DEFINITIONS ISPC_X86_ENABLED)\nendif()\n\nif (ARM_ENABLED)\n    list(APPEND COMPILE_DEFINITIONS ISPC_ARM_ENABLED)\nendif()\n\nif (XE_ENABLED)\n    list(APPEND COMPILE_DEFINITIONS ISPC_XE_ENABLED)\nendif()\n\nif (WASM_ENABLED)\n    list(APPEND COMPILE_DEFINITIONS ISPC_WASM_ENABLED)\nendif()\n\n# Compile definitions for cross compilation\nif (ISPC_WINDOWS_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_WINDOWS_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_WINDOWS_TARGET_OFF)\nendif()\nif (ISPC_LINUX_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_LINUX_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_LINUX_TARGET_OFF)\nendif()\nif (ISPC_FREEBSD_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_FREEBSD_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_FREEBSD_TARGET_OFF)\nendif()\nif (ISPC_MACOS_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_MACOS_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_MACOS_TARGET_OFF)\nendif()\nif (ISPC_IOS_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_IOS_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_IOS_TARGET_OFF)\nendif()\nif (ISPC_ANDROID_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_ANDROID_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_ANDROID_TARGET_OFF)\nendif()\nif (ISPC_PS_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_PS_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_PS_TARGET_OFF)\nendif()\nif (ISPC_UNIX_TARGET)\n    list(APPEND COMPILE_DEFINITIONS ISPC_UNIX_TARGET_ON)\nelse()\n    list(APPEND COMPILE_DEFINITIONS ISPC_UNIX_TARGET_OFF)\nendif()\n\n\n# Include directories\nlist(APPEND INCLUDE_DIRECTORIES\n    ${LLVM_INCLUDE_DIRS}\n    ${XE_DEPS_DIR}/include\n    ${CMAKE_CURRENT_SOURCE_DIR}/src\n    ${CMAKE_CURRENT_SOURCE_DIR}/common\n    ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}\n    ${CMAKE_BINARY_DIR}\n)\n\nlist(APPEND COMPILE_OPTIONS)\n# Compile options\nif (MSVC)\n    list(APPEND COMPILE_OPTIONS\n        /W3\n        /wd4018\n        /wd4146\n        /wd4244\n        /wd4267\n        /wd4624\n        /wd4996\n    )\n    # Security options\n    list(APPEND COMPILE_OPTIONS\n        /GS\n        /EHsc\n    )\n    set_source_files_properties(${FLEX_OUTPUT} PROPERTIES COMPILE_FLAGS /wd4005)\n    set_source_files_properties(${BISON_OUTPUT} PROPERTIES COMPILE_FLAGS /wd4005)\nelse()\n    list(APPEND COMPILE_OPTIONS\n        -Wall\n        -Wextra\n        -Wno-unused-parameter\n        -Wno-sign-compare\n        -Wno-unused-function\n        ${LLVM_CPP_FLAGS}\n    )\n    # Security options for both Debug and Release builds\n    list(APPEND COMPILE_OPTIONS\n        -fstack-protector-strong\n        -fno-delete-null-pointer-checks\n        -Wformat\n        -Wformat-security\n        -fwrapv\n    )\n    # Additional security options for Release mode\n    # Should be combined with link-time optimization (-Wl,--gc-sections during the linking phase)\n    if (CMAKE_BUILD_TYPE STREQUAL \"Release\")\n        list(APPEND COMPILE_OPTIONS\n            -fdata-sections\n            -ffunction-sections\n        )\n    endif()\n    # Since 14.0 LLVM has switched default DWARF version from v4 to v5\n    # but gdb < 10.1 can't read DWARF v5.\n    # https://discourse.llvm.org/t/gdb-10-1-cant-read-clangs-dwarf-v5/6035\n    # Use DWARF v4 for ISPC build to allow debugging of ispc binary with gdb\n    # on Ubuntu 20.04\n    if (NOT CMAKE_BUILD_TYPE STREQUAL \"Release\")\n        list(APPEND COMPILE_OPTIONS -gdwarf-4)\n    endif()\nendif()\n\n\nif (NOT MSVC)\n    list(APPEND COMPILE_OPTIONS -fno-rtti)\n    if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n        list(APPEND COMPILE_OPTIONS\n            -Wno-register\n            -Wno-error=comment\n        )\n        # The GCC warning issues false positives when one of the allocation and\n        # deallocation functions is inlined into its caller but not the other.\n        list(APPEND COMPILE_OPTIONS -Wno-mismatched-new-delete)\n    else()\n        list(APPEND COMPILE_OPTIONS\n            -Wno-c99-extensions\n            -Wno-deprecated-register\n        )\n    endif()\n    if (ISPC_USE_ASAN)\n        list(APPEND COMPILE_OPTIONS -fsanitize=address)\n    endif()\nendif()\n\n\nlist(APPEND LINK_OPTIONS_PRIVATE)\nlist(APPEND LINK_OPTIONS_PUBLIC)\n# Link options\nif (WIN32)\n    list(APPEND LINK_OPTIONS_PRIVATE /DYNAMICBASE)\n    # Control flow guard\n    list(APPEND LINK_OPTIONS_PRIVATE /GUARD:CF)\n    # When resolving statically linked import dependencies of the module, limit\n    # the module search path to %windows%\\system32 directory only.\n    list(APPEND LINK_OPTIONS_PRIVATE /DEPENDENTLOADFLAG:0x800)\n    if (MSVC AND NOT CMAKE_BUILD_TYPE STREQUAL \"DEBUG\" )\n        list(APPEND LINK_OPTIONS_PUBLIC /OPT:REF /OPT:ICF)\n    endif()\nelseif (APPLE)\n    if(CMAKE_BUILD_TYPE MATCHES Release)\n        list(APPEND LINK_OPTIONS_PUBLIC \"SHELL: -Wl,-dead_strip\")\n    endif()\nelse()\n    # Common security hardening options for both Debug and Release\n    list(APPEND LINK_OPTIONS_PUBLIC\n        \"SHELL: -z noexecstack\"\n        \"SHELL: -z relro\"\n        \"SHELL: -z now\"\n    )\n    # Additional options for Release mode\n    if(CMAKE_BUILD_TYPE MATCHES Release)\n        list(APPEND LINK_OPTIONS_PUBLIC \"SHELL: -Wl,--gc-sections\")\n    endif()\nendif()\n\nif (ISPC_STATIC_STDCXX_LINK OR ISPC_STATIC_LINK)\n    list(APPEND LINK_OPTIONS_PUBLIC\n        -static-libgcc\n        -static-libstdc++\n    )\nendif()\n\nif (ISPC_USE_ASAN)\n    list(APPEND LINK_OPTIONS_PUBLIC -fsanitize=address)\nendif()\n\n\nlist(APPEND LINK_LIBRARIES)\nif (NOT WIN32 AND NOT APPLE)\n    # To resolve circular dependencies between libraries use --start-group/--end-group\n    list(APPEND LINK_LIBRARIES \"-Wl,--start-group\")\nendif()\n\n# Link against Clang libraries\nforeach(clangLib ${CLANG_LIBRARY_LIST})\n    # Preferred way to build ISPC is to link it with individual clang static\n    # libraries. However, when they omitted it can be link with shared library\n    # libclang-cpp.so. Second approach would be utilized in some controlled\n    # environments, like in package managers for particular OSes (issue 2418).\n    find_library(${clangLib}Path\n                 NAMES\n                    \"${CMAKE_STATIC_LIBRARY_PREFIX}${clangLib}${CMAKE_STATIC_LIBRARY_SUFFIX}\"\n                    clang-cpp\n                 HINTS ${LLVM_LIBRARY_DIRS})\n    if (NOT ${${clangLib}Path} IN_LIST CLANG_LIBRARY_FULL_PATH_LIST)\n        list(APPEND CLANG_LIBRARY_FULL_PATH_LIST ${${clangLib}Path})\n    endif()\nendforeach()\nlist(APPEND LINK_LIBRARIES ${CLANG_LIBRARY_FULL_PATH_LIST})\n\n# Link against LLVM libraries\nlist(APPEND LINK_LIBRARIES ${LLVM_LIBRARY_LIST} ${CMAKE_DL_LIBS})\n\nif (XE_ENABLED)\n    # Link against Xe libraries\n    foreach(xeLib ${XE_LIBRARY_LIST})\n        find_library(${xeLib}Path NAMES ${xeLib} HINTS ${XE_DEPS_DIR}/lib)\n        list(APPEND XE_LIBRARY_FULL_PATH_LIST ${${xeLib}Path})\n    endforeach()\n    list(APPEND LINK_LIBRARIES ${XE_LIBRARY_FULL_PATH_LIST})\nendif()\n\nif (NOT WIN32 AND NOT APPLE)\n    list(APPEND LINK_LIBRARIES \"-Wl,--end-group\")\nendif()\n\n# System libraries, our own and transitive dependencies from LLVM libs.\nif (WIN32)\n    list(APPEND LINK_LIBRARIES version.lib shlwapi.lib odbc32.lib odbccp32.lib)\n    # Required after LLVM commit a5ffabc\n    if (${LLVM_VERSION_NUMBER} VERSION_GREATER_EQUAL \"18.1.0\")\n        list(APPEND LINK_LIBRARIES ws2_32.lib)\n    endif()\n    # Required after LLVM commit cb7690a\n    if (${LLVM_VERSION_NUMBER} VERSION_GREATER_EQUAL \"19.1.0\")\n        list(APPEND LINK_LIBRARIES ntdll.lib)\n    endif()\nelse()\n    run_llvm_config(LLVM_SYSTEM_LIBS \"--system-libs\")\n    if (LLVM_SYSTEM_LIBS MATCHES \"pthread\")\n        # ISPC doesn't use pthreads directly, but some LLVM does. Although, it\n        # looks like we do not use LLVM code that depend on pthreads, don't we?\n        find_library(PTHREAD_LIB REQUIRED NAMES pthread)\n        message(STATUS \"Link with pthread library ${PTHREAD_LIB}\")\n        list(APPEND LINK_LIBRARIES ${PTHREAD_LIB})\n    endif()\n    if (LLVM_SYSTEM_LIBS MATCHES \"tinfo\" OR LLVM_SYSTEM_LIBS MATCHES \"curses\")\n        find_library(TINFO_LIB REQUIRED NAMES terminfo tinfo curses ncurses ncursesw)\n        message(STATUS \"Link with tinfo library ${TINFO_LIB}\")\n        list(APPEND LINK_LIBRARIES ${TINFO_LIB})\n    endif()\nendif()\n\n# This function configures compile definitions, options and include dirs.\n# It can be used for any objects or libraries that are built in the project.\nfunction(configure_ispc_obj TARGET)\n    target_compile_definitions(${TARGET} PRIVATE ${COMPILE_DEFINITIONS})\n    target_include_directories(${TARGET} PRIVATE ${INCLUDE_DIRECTORIES})\n    target_compile_options(${TARGET} PRIVATE ${COMPILE_OPTIONS})\n\n    # Set hidden visibility for inline functions. This is needed to be in sync\n    # with LLVM libraries, we do include some template code from LLVM that requires\n    # this options to be in sync with LLVM. Otherwise it causes link warnings.\n    set_target_properties(${TARGET} PROPERTIES VISIBILITY_INLINES_HIDDEN ON)\n    if (NOT MSVC)\n        set_target_properties(${TARGET} PROPERTIES CXX_EXTENSIONS OFF)\n    endif()\nendfunction()\n\n# This function configures executable targets.\nfunction(configure_ispc_exe TARGET)\n    configure_ispc_obj(${TARGET})\n    target_link_options(${TARGET} PRIVATE ${LINK_OPTIONS_PRIVATE})\n    target_link_options(${TARGET} PUBLIC ${LINK_OPTIONS_PUBLIC})\nendfunction()\n\n# This function creates and configures ispc-slim executable target under the given NAME.\nfunction(add_ispc_slim NAME)\n    # Defines stdlib target\n    generate_stdlibs(${NAME})\n\n    # Defines targets for generic builtin implementations\n    generate_generic_builtins(${NAME})\n\n    # stdlib, stdlibs-bc, stdlibs-cpp targets are created in Stdlib.cmake\n    configure_ispc_obj(stdlib)\n\n    add_executable(${NAME} src/main.cpp src/binary_slim.cpp)\n    configure_ispc_exe(${NAME})\n    target_link_libraries(${NAME} ${LINK_LIBRARIES} optimization common frontend)\n    add_dependencies(${NAME} builtins-bc)\n    add_dependencies(generic-target-bc ${NAME})\n    if (${NAME} STREQUAL \"ispc\")\n        set_target_properties(generic-target-bc PROPERTIES EXCLUDE_FROM_ALL OFF)\n        set_target_properties(stdlibs-bc PROPERTIES EXCLUDE_FROM_ALL OFF)\n    endif()\nendfunction()\n\n# Define libraries that are built in the project. Some of them are shared across multiple executable targets.\nadd_library(optimization OBJECT EXCLUDE_FROM_ALL ${OPT_SOURCES})\nconfigure_ispc_obj(optimization)\n\nadd_library(common OBJECT EXCLUDE_FROM_ALL ${COMMON_SOURCES})\nconfigure_ispc_obj(common)\n\nadd_library(frontend OBJECT EXCLUDE_FROM_ALL ${FRONTEND_SOURCES})\nconfigure_ispc_obj(frontend)\n\n# builtin target is created in GenerateBuiltins.cmake\nconfigure_ispc_obj(builtin)\n\n# Define executable targets\nadd_executable(ispc-opt tools/ispc-opt.cpp)\nconfigure_ispc_exe(ispc-opt)\n# TODO! should we link against all the same LLVM/Clang libraries? Clang libs is definetely not needed\ntarget_link_libraries(ispc-opt ${LINK_LIBRARIES} builtin optimization common)\n\n# The final target has to be ispc due to two use-cases we do not want to\n# interfere with: make ispc and $<TARGET_FILE:ispc>.\nif (ISPC_SLIM_BINARY)\n    add_ispc_slim(ispc)\n    message(STATUS \"ISPC will be built as a slim binary\")\nelse()\n    add_ispc_slim(ispc-slim)\n    configure_ispc_obj(generic-target)\n\n    add_executable(ispc src/main.cpp src/binary_composite.cpp)\n    configure_ispc_exe(ispc)\n    target_link_libraries(ispc ${LINK_LIBRARIES} builtin stdlib optimization common frontend generic-target)\n    add_dependencies(ispc ispc-slim)\n    message(STATUS \"ISPC will be built as a composite binary\")\nendif()\n\ninstall (TARGETS ispc DESTINATION bin)\nif (ISPC_SLIM_BINARY)\n    foreach (header ${STDLIB_HEADERS})\n        install (FILES \"stdlib/include/${header}\" DESTINATION include)\n    endforeach()\n    install(DIRECTORY ${BITCODE_FOLDER} DESTINATION share)\nendif()\n\n\nif (ISPC_INCLUDE_TESTS)\n    add_subdirectory(tests)\nendif()\n\nif (ISPC_INCLUDE_BENCHMARKS)\n    enable_testing()\n    add_subdirectory(benchmarks)\nendif()\n\nif (ISPC_INCLUDE_RT)\n    add_subdirectory(ispcrt)\nendif()\n\nif (NOT X86_ENABLED)\n    # examples use x86 targets\n    set(ISPC_INCLUDE_EXAMPLES OFF)\nendif()\n\nif (ISPC_INCLUDE_EXAMPLES AND NOT ISPC_PREPARE_PACKAGE)\n    include(ExternalProject)\n    ExternalProject_Add(ispc_cpu_examples\n        PREFIX cpu_examples\n        DEPENDS ispc stdlibs-bc stdlib-headers\n        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/examples/cpu\"\n        CMAKE_CACHE_ARGS\n            -DISPC_BUILD:BOOL=TRUE\n            -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}\n            -DCMAKE_ISPC_COMPILER:PATH=$<TARGET_FILE:ispc>\n            -DISPC_EXECUTABLE:PATH=$<TARGET_FILE:ispc>\n            -DCMAKE_C_COMPILER:PATH=${CMAKE_C_COMPILER}\n            -DCMAKE_CXX_COMPILER:PATH=${CMAKE_CXX_COMPILER}\n        INSTALL_COMMAND \"\"\n    )\nendif()\n\nif (ISPC_INCLUDE_XE_EXAMPLES AND ISPC_INCLUDE_RT AND NOT ISPC_PREPARE_PACKAGE)\n    include(ExternalProject)\n    if (WIN32)\n        set(ISPCRT_LIB ${CMAKE_CURRENT_BINARY_DIR}/ispcrt/${CMAKE_CFG_INTDIR}/ispcrt.lib)\n    else()\n        set(ISPCRT_LIB $<TARGET_FILE:ispcrt>)\n    endif()\n    if (ISPC_INCLUDE_BENCHMARKS)\n        # Duplicated ExternalProject_Add for xpu examples when\n        # ISPC_INCLUDE_BENCHMARKS is on and off since all efforts of\n        # using cmake generator conditional expressions were unsuccessful.\n        ExternalProject_Add(ispc_xpu_examples\n            PREFIX xpu_examples\n            DEPENDS ispc stdlibs-bc stdlib-headers ispcrt benchmark\n            SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/examples/xpu\"\n            CMAKE_CACHE_ARGS\n                -DISPC_BUILD:BOOL=TRUE\n                -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}\n                -DCMAKE_ISPC_COMPILER:PATH=$<TARGET_FILE:ispc>\n                -DISPC_EXECUTABLE:PATH=$<TARGET_FILE:ispc>\n                -DISPCRT_LIB:PATH=${ISPCRT_LIB}\n                -DLEVEL_ZERO_ROOT:PATH=${LEVEL_ZERO_ROOT}\n                -DBENCHMARK_LIB:PATH=$<TARGET_FILE:benchmark>\n                -DCMAKE_C_COMPILER:PATH=${CMAKE_C_COMPILER}\n                -DCMAKE_CXX_COMPILER:PATH=${CMAKE_CXX_COMPILER}\n                -DCMAKE_C_FLAGS:PATH=${CMAKE_C_FLAGS}\n                -DCMAKE_CXX_FLAGS:PATH=${CMAKE_CXX_FLAGS}\n                -DISPC_INCLUDE_BENCHMARKS:BOOL=${ISPC_INCLUDE_BENCHMARKS}\n            INSTALL_COMMAND \"\"\n        )\n    else()\n        ExternalProject_Add(ispc_xpu_examples\n            PREFIX xpu_examples\n            DEPENDS ispc stdlibs-bc stdlib-headers ispcrt\n            SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/examples/xpu\"\n            CMAKE_CACHE_ARGS\n                -DISPC_BUILD:BOOL=TRUE\n                -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}\n                -DCMAKE_ISPC_COMPILER:PATH=$<TARGET_FILE:ispc>\n                -DISPC_EXECUTABLE:PATH=$<TARGET_FILE:ispc>\n                -DISPCRT_LIB:PATH=${ISPCRT_LIB}\n                -DLEVEL_ZERO_ROOT:PATH=${LEVEL_ZERO_ROOT}\n                -DCMAKE_C_COMPILER:PATH=${CMAKE_C_COMPILER}\n                -DCMAKE_CXX_COMPILER:PATH=${CMAKE_CXX_COMPILER}\n                -DCMAKE_C_FLAGS:PATH=${CMAKE_C_FLAGS}\n                -DCMAKE_CXX_FLAGS:PATH=${CMAKE_CXX_FLAGS}\n            INSTALL_COMMAND \"\"\n    )\n    endif()\nendif()\n\nif (ISPC_PREPARE_PACKAGE)\n    if (ISPC_PACKAGE_EXAMPLES)\n        if (XE_ENABLED)\n            install (DIRECTORY \"${PROJECT_SOURCE_DIR}/examples/\" DESTINATION examples)\n        else()\n            install (DIRECTORY \"${PROJECT_SOURCE_DIR}/examples/\" DESTINATION examples PATTERN \"xpu\" EXCLUDE)\n        endif()\n    endif()\n    install (DIRECTORY \"${PROJECT_SOURCE_DIR}/contrib/\" DESTINATION contrib)\n    install (FILES \"${PROJECT_SOURCE_DIR}/LICENSE.txt\" DESTINATION .)\n    install (FILES \"${PROJECT_SOURCE_DIR}/third-party-programs.txt\" DESTINATION .)\n    install (FILES \"${PROJECT_SOURCE_DIR}/docs/ReleaseNotes.txt\" DESTINATION .)\n\n    # Clone corresponding version of documentation\n    include(ExternalProject)\n    ExternalProject_Add(ispc_web\n      GIT_REPOSITORY    https://github.com/ispc/ispc.github.com.git\n      GIT_TAG ${ISPC_DOC_REPO_TAG}\n      PREFIX ispc_web\n      SOURCE_DIR ispc_web/repo\n      CONFIGURE_COMMAND cmake -E echo \"Skipping configure step.\"\n      BUILD_COMMAND cmake -E echo \"Skipping build step.\"\n      INSTALL_COMMAND cmake -E echo \"Skipping install step.\"\n    )\n    ExternalProject_Get_Property(ispc_web SOURCE_DIR)\n    set(ISPC_WEB_SOURCE_DIR \"${SOURCE_DIR}\")\n    set(ISPC_DOCS  ${ISPC_WEB_SOURCE_DIR}/faq.html\n                   ${ISPC_WEB_SOURCE_DIR}/ispc.html\n                   ${ISPC_WEB_SOURCE_DIR}/perfguide.html)\n\n    install(FILES ${ISPC_DOCS} DESTINATION .)\n    install(DIRECTORY \"${ISPC_WEB_SOURCE_DIR}/css\" DESTINATION .)\n\n    # CPack configuration\n    if (WIN32)\n        set(CPACK_GENERATOR \"ZIP\")\n        set(ISPC_SYSTEM_NAME \"windows\")\n        # WIX generator is currently turned off.\n        # To turn it on uncomment code below:\n        # set(CPACK_GENERATOR \"WIX\" \"ZIP\")\n        # set(CPACK_WIX_UPGRADE_GUID \"EDD858F2-19B0-4E5B-B9B9-2A09B85D451C\")\n        # set(CPACK_WIX_CMAKE_PACKAGE_REGISTRY \"ISPC\")\n        # WIX generator expects version in format x.y.z where x, y, z are numbers\n        set(CPACK_PACKAGE_VERSION \"${ISPC_VERSION_MAJOR}.${ISPC_VERSION_MINOR}.${ISPC_VERSION_PATCH}\")\n    else()\n        set(CPACK_GENERATOR \"TGZ\")\n        if (APPLE)\n            set(ISPC_SYSTEM_NAME \"macOS\")\n        elseif(CMAKE_SYSTEM_NAME STREQUAL \"FreeBSD\")\n            set(ISPC_SYSTEM_NAME \"freebsd\")\n        else()\n            set(ISPC_SYSTEM_NAME \"linux\")\n        endif()\n    endif()\n    set(CPACK_PACKAGE_NAME \"Intel(R) Implicit SPMD Program Compiler\")\n    set(CPACK_PACKAGE_DESCRIPTION \"Intel(R) Implicit SPMD Program Compiler\")\n    set(CPACK_PACKAGE_VERSION_MAJOR ${ISPC_VERSION_MAJOR})\n    set(CPACK_PACKAGE_VERSION_MINOR ${ISPC_VERSION_MINOR})\n    set(CPACK_PACKAGE_VERSION_PATCH ${ISPC_VERSION_PATCH}${ISPC_VERSION_SUFFIX})\n    set(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.txt\")\n    set(CPACK_RESOURCE_FILE_README \"${CMAKE_CURRENT_SOURCE_DIR}/README.md\")\n\n    # Sign files in the package if ISPC_SIGN_KEY is set\n    if (DEFINED ISPC_SIGN_KEY)\n        configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/Signing.cmake.in\"\n                       \"${CMAKE_CURRENT_BINARY_DIR}/Signing.cmake\" @ONLY)\n        set(CPACK_PRE_BUILD_SCRIPTS \"${CMAKE_CURRENT_BINARY_DIR}/Signing.cmake\")\n    endif()\n    # Allow use custom package name with -DISPC_PACKAGE_NAME\n    if (NOT ISPC_PACKAGE_NAME)\n        set(ISPC_ARCH_SUFFIX)\n        if (APPLE)\n            if (CMAKE_OSX_ARCHITECTURES MATCHES \"x86_64\" AND CMAKE_OSX_ARCHITECTURES MATCHES \"arm64\")\n                set(ISPC_ARCH_SUFFIX \".universal\")\n            elseif(CMAKE_OSX_ARCHITECTURES MATCHES \"x86_64\" OR\n                   (CMAKE_OSX_ARCHITECTURES STREQUAL \"\" AND CMAKE_HOST_SYSTEM_PROCESSOR MATCHES \"x86_64\"))\n                set(ISPC_ARCH_SUFFIX \".x86_64\")\n            elseif(CMAKE_OSX_ARCHITECTURES MATCHES \"arm64\" OR\n                   (CMAKE_OSX_ARCHITECTURES STREQUAL \"\" AND CMAKE_HOST_SYSTEM_PROCESSOR MATCHES \"arm64\"))\n                set(ISPC_ARCH_SUFFIX \".arm64\")\n            else()\n                message (FATAL_ERROR \"Was not able to detect package architecture\")\n            endif()\n        elseif (UNIX)\n            # Add .aarch64 suffix if the package is built on AARCH64 system.\n\t    # On Linux we don't build cross packages, so host corresponds to target platform.\n            if(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64\")\n                set(ISPC_ARCH_SUFFIX \".aarch64\")\n            endif()\n        endif()\n\n        if (${CPACK_PACKAGE_VERSION_PATCH} MATCHES \".*dev\")\n            string(CONCAT CPACK_PACKAGE_FILE_NAME \"${PROJECT_NAME}\"\n                                \"-trunk\"\n                                \"-${ISPC_SYSTEM_NAME}\"\n                                \"${ISPC_ARCH_SUFFIX}\")\n            string(CONCAT EXAMPLES_PACKAGE_FILE_NAME \"ispc-examples-trunk\")\n        else()\n            string(CONCAT CPACK_PACKAGE_FILE_NAME \"${PROJECT_NAME}\"\n                                \"-v${CPACK_PACKAGE_VERSION_MAJOR}\"\n                                \".${CPACK_PACKAGE_VERSION_MINOR}\"\n                                \".${CPACK_PACKAGE_VERSION_PATCH}\"\n                                \"-${ISPC_SYSTEM_NAME}\"\n                                \"${ISPC_ARCH_SUFFIX}\")\n            string(CONCAT EXAMPLES_PACKAGE_FILE_NAME \"ispc-examples\"\n                                \"-v${CPACK_PACKAGE_VERSION_MAJOR}\"\n                                \".${CPACK_PACKAGE_VERSION_MINOR}\"\n                                \".${CPACK_PACKAGE_VERSION_PATCH}\")\n        endif()\n    else()\n        set (CPACK_PACKAGE_FILE_NAME ${ISPC_PACKAGE_NAME})\n    endif()\n\n    if (WIN32)\n        set(CPACK_PACKAGE_INSTALL_DIRECTORY \"ISPC/${CPACK_PACKAGE_FILE_NAME}\")\n    endif()\n    set(CPACK_PACKAGE_VENDOR \"Intel Corporation\")\n\n    # Strip binaries\n    set(CPACK_STRIP_FILES TRUE)\n\n    include(CPack)\n\n    # Custom target to pack only examples\n    if (WIN32)\n        add_custom_target(package-examples\n            COMMENT \"Package examples directory to ${EXAMPLES_PACKAGE_FILE_NAME}.zip\"\n            COMMAND ${CMAKE_COMMAND} -E tar cf \"${CMAKE_BINARY_DIR}/${EXAMPLES_PACKAGE_FILE_NAME}.zip\" --format=zip examples\n            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n            )\n    else()\n        add_custom_target(package-examples\n            COMMENT \"Package examples directory to ${EXAMPLES_PACKAGE_FILE_NAME}.tar.gz\"\n            COMMAND ${CMAKE_COMMAND} -E tar cfz \"${CMAKE_BINARY_DIR}/${EXAMPLES_PACKAGE_FILE_NAME}.tar.gz\" examples\n            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n            )\n    endif()\n\nendif()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.5205078125,
          "content": "[![License](https://img.shields.io/github/license/ispc/ispc)](https://github.com/ispc/ispc)\n\nWelcome to Intel® ISPC contributing guide\n=========================================\n\nThank you for your interest in contributing to our project!\n\nWe are looking for all kinds of contributions ranging from [submitting a bug](https://github.com/ispc/ispc/issues) or\nparticipating in the [discussions](https://github.com/ispc/ispc/discussions) to submitting a bug fix, a feature or\nmaintaining part of the compiler.\n\nIn this guide you will get an overview of the contribution workflow from opening an issue to merging the PR.\n\nHere are some important resources:\n- To get an overview of the project, read the [README](README.md).\n- Review our plans for the upcoming releases in [ISPC project](https://github.com/orgs/ispc/projects/1).\n- Submit an [issue](https://github.com/ispc/ispc/issues) or participate in\n  [discussions](https://github.com/ispc/ispc/discussions) on GitHub.\n- Check [Wiki pages](https://github.com/ispc/ispc/wiki) for additional information on development process, setting up\n  environment instructions, etc.\n- Use [Compiler Explorer](https://godbolt.org/) to interactively compile ISPC program.\n\nHow to contribute\n-----------------\n### Create an issue\n\n[File an issue](https://github.com/ispc/ispc/issues/new) if you:\n- Spotted a stability or performance bug.\n- Would like to request a feature or suggest an improvement.\n\nBefore filing a new issue search through existing ones at [ISPC Issues](https://github.com/ispc/ispc/issues). If the\nissue exists, give it a like, subscribe for updates, contribute to investigation or add details about your specific\ncase.\n\nWhen creating an issue, try to be specific and give all the relevant details. If this is a bug, provide steps to\nreproduce, ISPC version and information about your environment that is relevant to the problem. Try to have a minimal\nreproducer, so it is clear where the problem is. An ideal reproducer is a code snippet pasted to the issue with the\ncommand line to compile and execute it. If it's duplicated by the link to [Compiler Explorer](https://godbolt.org/) - it\nis even better. If it's a feature request, describe what is needed and why you need it or think it is useful.\n\nIf the bug or the feature is important to you, for example it blocks something in your project or affects how/where you\nuse ISPC - don't hesitate to mention it, this will help prioritizing the bug higher.\n\n### Start a discussion\n\nIf you have a question about ISPC, need help or advice, then starting a\n[Discussion](https://github.com/ispc/ispc/discussions) is the best way proceed.\n\nIf you have a success story applying ISPC in your project, get expected (or unexpected!) performance gain due to using\nISPC - please post it in Discussions as well, [Show and tell](https://github.com/ispc/ispc/discussions/categories/show-and-tell)\ncategory is there for you. If you evaluated ISPC and it didn't work for you for some reason and you think it worth\nsharing your story, you are also very welcome. We love feedback and willing to improve!\n\n### Find an issue to fix\n\nScan through our [existing issues](https://github.com/ispc/ispc/issues) to find one that interests you. You can narrow\ndown the search using `labels` as filters. If you don't know where to start use issues with\n[good first issue](https://github.com/ispc/ispc/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) label.\n\nFeel free to comment on the issues asking for guidance or help with the fix.\n\n### Make changes\n\nReview our [ISPC Development Guide](https://github.com/ispc/ispc/wiki/ISPC-Development-Guide) for build and test instructions.\n\nNote, that every compiler change should be covered by [lit test](https://github.com/ispc/ispc/wiki/ISPC-Development-Guide#ISPC_lit_tests)\nAlso look into [existing lit tests](https://github.com/ispc/ispc/tree/main/tests/lit-tests) to learn how to write them.\n\nIf you made a language change new [functional tests](https://github.com/ispc/ispc/tree/main/tests) checking compiler\nbehavior in runtime are needed.\n\n### Submitting PR\n\nFollow [Working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks)\napproach to submit a PR to ISPC.  Describe the change you've made in the PR description, put an issue number if exists.\n\nBefore submitting a PR, format the changed .cpp/.c/.h files with `clang-format` (included into LLVM distribution). For\nexample: `clang-format -i src/ispc.cpp`.\n\nSquash git history to meaningful commits. One commit is responsible for one change for easier review.\n\n\n### Contribute a feature or maintain a target\n\nWe are looking for individual, academic and institutional contributors who are interested in more significant\ncontributions than a single fix as well. The possible list of topic include:\n- Fine-tuning existing targets, x86 and non-x86. Contributions to ARM targets are especially appreciated, as the core\n  team doesn't have enough bandwidth to fully cover this.\n- Adding and maintaining new hardware targets - Webassembly (WASM), RISC-V, ARM v9, etc.\n- Adding and/or maintaining a new OS/platform - PS4/PS5 (hey Sony, I'm calling for you!), Windows on ARM, FreeBSD, etc.\n- Adding new optimizations or doing an experimental implementation for a novel research idea - for example, adding a\n  [superoptimization](https://en.wikipedia.org/wiki/Superoptimization) pass.\n\nIf you are a professor teaching a compiler class or advising undergraduate or graduate student, who is looking for a\ntopic for their thesis, feel free to use our project as a playground or a potential target for applying your research.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.478515625,
          "content": "Copyright Intel Corporation\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the name of Intel Corporation nor the names of its\n      contributors may be used to endorse or promote products derived from\n      this software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.951171875,
          "content": "[![Appveyor build status (Windows)](https://ci.appveyor.com/api/projects/status/xfllw9vkp3lj4l0v/branch/main?svg=true)](https://ci.appveyor.com/project/ispc/ispc/branch/main)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9395/badge)](https://www.bestpractices.dev/projects/9395)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/ispc/ispc/badge)](https://securityscorecards.dev/viewer/?uri=github.com/ispc/ispc)\n[![Bandit](https://github.com/ispc/ispc/actions/workflows/bandit.yml/badge.svg)](https://github.com/ispc/ispc/actions/workflows/bandit.yml)\n[![Coverity](https://scan.coverity.com/projects/30508/badge.svg)](https://scan.coverity.com/projects/intel-ispc)\n[![Trivy](https://github.com/ispc/ispc/actions/workflows/trivy.yml/badge.svg)](https://github.com/ispc/ispc/actions/workflows/trivy.yml)\n[![Cve-bin](https://github.com/ispc/ispc/actions/workflows/cve-bin.yml/badge.svg)](https://github.com/ispc/ispc/actions/workflows/cve-bin.yml)\n[![ClamAV](https://github.com/ispc/ispc/actions/workflows/clamav.yml/badge.svg)](https://github.com/ispc/ispc/actions/workflows/clamav.yml)\n[![Hardening Checks](https://github.com/ispc/ispc/actions/workflows/hardening-check.yml/badge.svg)](https://github.com/ispc/ispc/actions/workflows/hardening-check.yml)\n\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=1931356)\n\n# Intel® Implicit SPMD Program Compiler (Intel® ISPC)\n\n`ispc` is a compiler for a variant of the C programming language, with\nextensions for [single program, multiple\ndata](http://en.wikipedia.org/wiki/SPMD) programming.  Under the SPMD model,\nthe programmer writes a program that generally appears to be a regular serial\nprogram, though the execution model is actually that a number of *program\ninstances* execute in parallel on the hardware.\n\n## Overview\n\n`ispc` compiles a C-based SPMD programming language to run on the SIMD units of\nCPUs and GPUs; it frequently provides a 3x or more speedup on architectures\nwith 4-wide vector SSE units and 5x-6x on architectures with 8-wide AVX vector\nunits, without any of the difficulty of writing intrinsics code.\nParallelization across multiple cores is also supported by `ispc`, making it\npossible to write programs that achieve performance improvement that scales by\nboth number of cores and vector unit size.\n\nThere are a few key principles in the design of `ispc`:\n\n  * To build a small set of extensions to the C language that would deliver\n    excellent performance to performance-oriented programmers who want to run\n    SPMD programs on the CPU and GPU.\n\n  * To provide a thin abstraction layer between the programmer and the\n    hardware--in particular, to have an execution and data model where the\n    programmer can cleanly reason about the mapping of their source program to\n    compiled assembly language and the underlying hardware.\n\n  * To make it possible to harness the computational power of SIMD vector units\n    without the extremely low-programmer-productivity activity of directly\n    writing intrinsics.\n\n  * To explore opportunities from close coupling between C/C++ application code\n    and SPMD `ispc` code running on the same processor--to have lightweight\n    function calls between the two languages and to share data directly via\n    pointers without copying or reformatting.\n\n`ispc` is an open source compiler with the BSD license.  It uses the remarkable\n[LLVM Compiler Infrastructure](http://llvm.org) for back-end code generation\nand optimization and is [hosted on github](http://github.com/ispc/ispc). It\nsupports Windows, macOS, and Linux as a host operating system and also capable\nto target Android, iOS, and PS4/PS5.  It currently supports multiple flavours\nof x86 (SSE2, SSE4, AVX, AVX2, and AVX512), ARM (NEON), and Intel® GPU\narchitectures (Gen9 and Xe family).\n\n## Features\n\n`ispc` provides a number of key features to developers:\n\n  * Familiarity as an extension of the C programming language: `ispc` supports\n    familiar C syntax and programming idioms, while adding the ability to write\n    SPMD programs.\n\n  * High-quality SIMD code generation: the performance of code generated by\n    `ispc` is often close to that of hand-written intrinsics code.\n\n  * Ease of adoption with existing software systems: functions written in\n    `ispc` directly interoperate with application functions written in C/C++\n    and with application data structures.\n            \n  * Portability across over a decade of CPU generations: `ispc` has targets for\n    x86 SSE2, SSE4, AVX, AVX2, and AVX512, as well as ARM NEON and recent\n    Intel® GPUs.\n\n  * Portability across operating systems: Microsoft Windows, macOS, Linux, and\n    FreeBSD are all supported by `ispc`.\n\n  * Debugging with standard tools: `ispc` programs can be debugged with\n    standard debuggers.\n\n## Installation\n### Official Release Binaries\n\nYou can download the official release binaries from [the latest release\npage](https://github.com/ispc/ispc/releases/latest). Choose the appropriate version\nfor your operating system and architecture.\n\n### Linux (Snap Store)\n\nLinux users can install `ispc` using the Snap Store:\n\n```bash\nsnap install ispc\n```\n\n### Intel® oneAPI Distribution\n\n`ispc` is distributed as part of the Intel® oneAPI. You can install it from the\ncorresponding repositories for DEB-based and RPM-based Linux distributions.\nFollow the instructions below:\n\nDEB-based Linux (Ubuntu, Debian, etc.)\nFirst, download the key to the system keyring:\n\n```bash\nwget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null\n```\n\nNext, add the signed entry to apt sources and configure the APT client to use\nthe Intel repository:\n\n```bash\necho \"deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main\" | sudo tee /etc/apt/sources.list.d/oneAPI.list\n```\n\nUpdate the package list and install `ispc`:\n\n```bash\nsudo apt-get update\nsudo apt-get install intel-oneapi-ispc\n```\n\nThe installation location is inside the `/opt/intel/` directory. To use `ispc`,\neither use the full path `/opt/intel/oneapi/ispc/latest/bin/ispc` or add the\n`bin`  directory to your `PATH`:\n\n```bash\nsource /opt/intel/oneapi/ispc/latest/env/vars.sh\n```\n\n### Other Package Managers\n\nThanks to community support, `ispc` is also available through a variety of\npackage managers on multiple operating systems.\n\n### Windows\n\nTo install `ispc` on Windows, you can download the latest release as `zip`\narchive from\n[the latest release page](https://github.com/ispc/ispc/releases/latest).\nThen you need to unpack that to some directory. It is user's responsibility to\nset-up permissions for this directory according to the principle of least\nprivilege.\n\nMoreover, `ispc` depends on run-time components of Visual C++ (DLLs). These\nlibraries can be installed with Microsoft Visual C++ Redistributable package.\nInstruction to install them can be found\n[here](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist).\n\n## Additional Resources\n\nLatest `ispc` binaries corresponding to `main` branch can be downloaded from\nAppveyor for\n[Linux](https://ci.appveyor.com/api/projects/ispc/ispc/artifacts/build%2Fispc-trunk-linux.tar.gz?job=Environment%3A%20APPVEYOR_BUILD_WORKER_IMAGE%3DUbuntu1804%2C%20LLVM_VERSION%3Dlatest)\nand\n[Windows](https://ci.appveyor.com/api/projects/ispc/ispc/artifacts/build%2Fispc-trunk-windows.zip?job=Environment%3A%20APPVEYOR_BUILD_WORKER_IMAGE%3DVisual%20Studio%202019%2C%20LLVM_VERSION%3Dlatest)\nSee also additional [documentation](https://ispc.github.io/documentation.html)\nand additional [performance information](https://ispc.github.io/perf.html).  If\nyou have a bug report and have a question, you are welcome to open an\n[issue](https://github.com/ispc/ispc/issues) or start a\n[discussion](https://github.com/ispc/ispc/discussions) on GitHub.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.39453125,
          "content": "# Security Policy\nIntel is committed to rapidly addressing security vulnerabilities affecting\nour customers and providing clear guidance on the solution, impact, severity\nand mitigation.\n\n## Reporting a Vulnerability\nPlease report any security vulnerabilities in this project utilizing\nthe guidelines [here](https://www.intel.com/content/www/us/en/security-center/vulnerability-handling-guidelines.html)."
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "builtins",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ispcrt",
          "type": "tree",
          "content": null
        },
        {
          "name": "llvm_patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stdlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "superbuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party-programs.txt",
          "type": "blob",
          "size": 92.6845703125,
          "content": "﻿Intel(R) Implicit SPMD Program Compiler (Intel(R) ISPC) Third Party Programs\nFile.\n\nThis file contains the list of third party software (\"third party programs\")\ncontained in the Intel software and their required notices and/or license\nterms. This third party software, even if included with the distribution of the\nIntel software, may be governed by separate license terms, including without\nlimitation, third party license terms, other Intel software license terms, and\nopen source software license terms. These separate license terms govern your use\nof the third party programs as set forth in the “third-party-programs.txt” or\nother similarly named text file.\n\nThird party programs and their corresponding required notices and/or license\nterms are listed below.\n\n--------------------------------------------------------------------------------\n\n1. LLVM Project.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n    1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n    2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n    3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n    4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n    5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n    6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n    7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n    8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n    9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n    END OF TERMS AND CONDITIONS\n\n    APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n    Copyright [yyyy] [name of copyright owner]\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n---- LLVM Exceptions to the Apache 2.0 License ----\n\nAs an exception, if, as a result of your compiling your source code, portions\nof this Software are embedded into an Object form of such source code, you\nmay redistribute such embedded portions in such Object form without complying\nwith the conditions of Sections 4(a), 4(b) and 4(d) of the License.\n\nIn addition, if you combine or link compiled forms of this Software with\nsoftware that is licensed under the GPLv2 (\"Combined Software\") and if a\ncourt of competent jurisdiction determines that the patent provision (Section\n3), the indemnity provision (Section 9) or other Section of the License\nconflicts with the conditions of the GPLv2, you may retroactively and\nprospectively choose to deem waived or otherwise exclude such Section(s) of\nthe License, but only in their entirety and only with respect to the Combined\nSoftware.\n\n==============================================================================\nLegacy LLVM License (https://llvm.org/docs/DeveloperPolicy.html#legacy):\n==============================================================================\nUniversity of Illinois/NCSA\nOpen Source License\n\nCopyright (c) 2003-2019 University of Illinois at Urbana-Champaign.\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\n--------------------------------------------------------------------------------\n\n2. Syrah library.\n\nCopyright (c) 2009, Stanford University, and authors listed below.\nAll rights reserved.\n\nOriginal authors:\n  Solomon Boulos\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nNeither the name of Stanford University nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\n3. IEEE 754r Half Precision Floating Point Converter.\n   (c) 2009 by James Tursa, All Rights Reserved\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the distribution\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\n4. GNU libstdc++\n\n   libgcc\n\nGCC is Copyright (C) 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,\n1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019\nFree Software Foundation, Inc.\n\nGCC is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGCC is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nFiles that have exception clauses are licensed under the terms of the\nGNU General Public License; either version 3, or (at your option) any\nlater version.\n\nOn Debian GNU/Linux systems, the complete text of the GNU General\nPublic License is in `/usr/share/common-licenses/GPL', version 3 of this\nlicense in `/usr/share/common-licenses/GPL-3'.\n\nThe following runtime libraries are licensed under the terms of the\nGNU General Public License (v3 or later) with version 3.1 of the GCC\nRuntime Library Exception (included in this file):\n\n - libgcc (libgcc/, gcc/libgcc2.[ch], gcc/unwind*, gcc/gthr*,\n   gcc/coretypes.h, gcc/crtstuff.c, gcc/defaults.h, gcc/dwarf2.h,\n   gcc/emults.c, gcc/gbl-ctors.h, gcc/gcov-io.h, gcc/libgcov.c,\n   gcc/tsystem.h, gcc/typeclass.h).\n - libatomic\n - libdecnumber\n - libgomp\n - libitm\n - libssp\n - libstdc++-v3\n - libobjc\n - libgfortran\n - The libgnat-9 Ada support library and libgnatvsn library.\n - Various config files in gcc/config/ used in runtime libraries.\n - libvtv\n\nThe libbacktrace library is licensed under the following terms:\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    (1) Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n    (2) Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\n    (3) The name of the author may not be used to\n    endorse or promote products derived from this software without\n    specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n\nThe libsanitizer libraries (libasan, liblsan, libtsan, libubsan) are\nlicensed under the following terms:\n\nCopyright (c) 2009-2014 by the LLVM contributors.\n\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\nThe libffi library is licensed under the following terms:\n\n    libffi - Copyright (c) 1996-2003  Red Hat, Inc.\n\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    ``Software''), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n\n\nThe documentation is licensed under the GNU Free Documentation License (v1.2).\nOn Debian GNU/Linux systems, the complete text of this license is in\n`/usr/share/common-licenses/GFDL-1.2'.\n\n\nGCC RUNTIME LIBRARY EXCEPTION\n\nVersion 3.1, 31 March 2009\n\nCopyright (C) 2009 Free Software Foundation, Inc. <http://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nThis GCC Runtime Library Exception (\"Exception\") is an additional\npermission under section 7 of the GNU General Public License, version\n3 (\"GPLv3\"). It applies to a given file (the \"Runtime Library\") that\nbears a notice placed by the copyright holder of the file stating that\nthe file is governed by GPLv3 along with this Exception.\n\nWhen you use GCC to compile a program, GCC may combine portions of\ncertain GCC header files and runtime libraries with the compiled\nprogram. The purpose of this Exception is to allow compilation of\nnon-GPL (including proprietary) programs to use, in this way, the\nheader files and runtime libraries covered by this Exception.\n\n0. Definitions.\n\nA file is an \"Independent Module\" if it either requires the Runtime\nLibrary for execution after a Compilation Process, or makes use of an\ninterface provided by the Runtime Library, but is not otherwise based\non the Runtime Library.\n\n\"GCC\" means a version of the GNU Compiler Collection, with or without\nmodifications, governed by version 3 (or a specified later version) of\nthe GNU General Public License (GPL) with the option of using any\nsubsequent versions published by the FSF.\n\n\"GPL-compatible Software\" is software whose conditions of propagation,\nmodification and use would permit combination with GCC in accord with\nthe license of GCC.\n\n\"Target Code\" refers to output from any compiler for a real or virtual\ntarget processor architecture, in executable form or suitable for\ninput to an assembler, loader, linker and/or execution\nphase. Notwithstanding that, Target Code does not include data in any\nformat that is used as a compiler intermediate representation, or used\nfor producing a compiler intermediate representation.\n\nThe \"Compilation Process\" transforms code entirely represented in\nnon-intermediate languages designed for human-written code, and/or in\nJava Virtual Machine byte code, into Target Code. Thus, for example,\nuse of source code generators and preprocessors need not be considered\npart of the Compilation Process, since the Compilation Process can be\nunderstood as starting with the output of the generators or\npreprocessors.\n\nA Compilation Process is \"Eligible\" if it is done using GCC, alone or\nwith other GPL-compatible software, or if it is done without using any\nwork based on GCC. For example, using non-GPL-compatible Software to\noptimize any GCC intermediate representations would not qualify as an\nEligible Compilation Process.\n\n1. Grant of Additional Permission.\n\nYou have permission to propagate a work of Target Code formed by\ncombining the Runtime Library with Independent Modules, even if such\npropagation would otherwise violate the terms of GPLv3, provided that\nall Target Code was generated by Eligible Compilation Processes. You\nmay then convey such a combination under terms of your choice,\nconsistent with the licensing of the Independent Modules.\n\n2. No Weakening of GCC Copyleft.\n\nThe availability of this Exception does not imply any general\npresumption that third-party software is unaffected by the copyleft\nrequirements of the license of GCC.\n\n\nlibquadmath/*.[hc]:\n\n   Copyright (C) 2010 Free Software Foundation, Inc.\n   Written by Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n   Written by Tobias Burnus  <burnus@net-b.de>\n\nThis file is part of the libiberty library.\nLibiberty is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Library General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nLibiberty is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLibrary General Public License for more details.\n\nlibquadmath/math:\n\natanq.c, expm1q.c, j0q.c, j1q.c, log1pq.c, logq.c:\n    Copyright 2001 by Stephen L. Moshier <moshier@na-net.ornl.gov>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\ncoshq.c, erfq.c, jnq.c, lgammaq.c, powq.c, roundq.c:\n   Changes for 128-bit __float128 are\n   Copyright (C) 2001 Stephen L. Moshier <moshier@na-net.ornl.gov>\n   and are incorporated herein by permission of the author.  The author\n   reserves the right to distribute this material elsewhere under different\n   copying permissions.  These modifications are distributed here under\n   the following terms:\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\nldexpq.c:\n   * Conversion to long double by Ulrich Drepper,\n   * Cygnus Support, drepper@cygnus.com.\n\ncosq_kernel.c, expq.c, sincos_table.c, sincosq.c, sincosq_kernel.c,\nsinq_kernel.c, truncq.c:\n   Copyright (C) 1997, 1999 Free Software Foundation, Inc.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\nisinfq.c:\n * Written by J.T. Conklin <jtc@netbsd.org>.\n * Change for long double by Jakub Jelinek <jj@ultra.linux.cz>\n * Public domain.\n\nllroundq.c, lroundq.c, tgammaq.c:\n   Copyright (C) 1997, 1999, 2002, 2004 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997 and\n                  Jakub Jelinek <jj@ultra.linux.cz>, 1999.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\nlog10q.c:\n   Cephes Math Library Release 2.2:  January, 1991\n   Copyright 1984, 1991 by Stephen L. Moshier\n   Adapted for glibc November, 2001\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\nremaining files:\n\n * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n *\n * Developed at SunPro, a Sun Microsystems, Inc. business.\n * Permission to use, copy, modify, and distribute this\n * software is freely granted, provided that this notice\n * is preserved.\n\n\ngcc/go/gofrontend, libgo:\n\nCopyright (c) 2009 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nD:\ngdc-9                         GNU D Compiler\nlibphobos-9-dev               D standard runtime library\n\nThe D source package is made up of the following components.\n\nThe D front-end for GCC:\n - d/*\n\nCopyright (C) 2004-2007 David Friedman\nModified by Vincenzo Ampolo, Michael Parrot, Iain Buclaw, (C) 2009, 2010\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nOn Debian GNU/Linux systems, the complete text of the GNU General\nPublic License is in `/usr/share/common-licenses/GPL', version 2 of this\nlicense in `/usr/share/common-licenses/GPL-2'.\n\n\nThe DMD Compiler implementation of the D programming language:\n - d/dmd/*\n\nCopyright (c) 1999-2010 by Digital Mars\nAll Rights Reserved\nwritten by Walter Bright\nhttp://www.digitalmars.com\nLicense for redistribution is by either the Artistic License or\nthe GNU General Public License (v1).\n\nOn Debian GNU/Linux systems, the complete text of the GNU General\nPublic License is in `/usr/share/common-licenses/GPL', the Artistic\nlicense in `/usr/share/common-licenses/Artistic'.\n\n\nThe Zlib data compression library:\n - d/phobos/etc/c/zlib/*\n\n (C) 1995-2004 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n\nThe Phobos standard runtime library:\n - d/phobos/*\n\nUnless otherwise marked within the file, each file in the source\nis under the following licenses:\n\nCopyright (C) 2004-2005 by Digital Mars, www.digitalmars.com\nWritten by Walter Bright\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, in both source and binary form, subject to the following\nrestrictions:\n\n o  The origin of this software must not be misrepresented; you must not\n    claim that you wrote the original software. If you use this software\n    in a product, an acknowledgment in the product documentation would be\n    appreciated but is not required.\n o  Altered source versions must be plainly marked as such, and must not\n    be misrepresented as being the original software.\n o  This notice may not be removed or altered from any source\n    distribution.\n\nBy plainly marking modifications, something along the lines of adding to each\nfile that has been changed a \"Modified by Foo Bar\" line\nunderneath the \"Written by\" line would be adequate.\n\nThe libhsail-rt library is licensed under the following terms:\n\n   Copyright (C) 2015-2017 Free Software Foundation, Inc.\n   Contributed by Pekka Jaaskelainen <pekka.jaaskelainen@parmance.com>\n   for General Processor Tech.\n\n   Permission is hereby granted, free of charge, to any person obtaining a\n   copy of this software and associated documentation files\n   (the \"Software\"), to deal in the Software without restriction, including\n   without limitation the rights to use, copy, modify, merge, publish,\n   distribute, sublicense, and/or sell copies of the Software, and to\n   permit persons to whom the Software is furnished to do so, subject to\n   the following conditions:\n\n   The above copyright notice and this permission notice shall be included\n   in all copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n   DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n   OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n   USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nlibhsail-rt/rt/fp16.c is licensed under the following terms:\n\n   Copyright (C) 2008-2017 Free Software Foundation, Inc.\n   Contributed by CodeSourcery.\n\n   This file is free software; you can redistribute it and/or modify it\n   under the terms of the GNU General Public License as published by the\n   Free Software Foundation; either version 3, or (at your option) any\n   later version.\n\n   This file is distributed in the hope that it will be useful, but\n   WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   General Public License for more details.\n\n   Under Section 7 of GPL version 3, you are granted additional\n   permissions described in the GCC Runtime Library Exception, version\n   3.1, as published by the Free Software Foundation.\n\n   You should have received a copy of the GNU General Public License and\n   a copy of the GCC Runtime Library Exception along with this program;\n   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   <http://www.gnu.org/licenses/>.\n\ngcc/gm2:\nCopyright (C) 2007-2019 Free Software Foundation, Inc.\nContributed by Gaius Mulley <gaius@glam.ac.uk>.\n\nThis file is part of GNU Modula-2.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3, or (at your option)\nany later version.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\ngcc/gm2/**/*.texi:\nCopyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n2011, 2012, 2012, 2013 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, no Front-Cover Texts, and no Back-Cover Texts.\n\ngcc/gm2/gm2-coroutines:\nCopyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n              Free Software Foundation, Inc.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\ngcc/gm2/ulm-lib-gm2:\nCopyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n              Free Software Foundation, Inc.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nThis file was originally part of the University of Ulm library\n\nUlm's Modula-2 Library\nCopyright (C) 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,\n1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\nby University of Ulm, SAI, D-89069 Ulm, Germany\n\ngcc/gm2/ulm-lib-gm2/std/M2RTS.mod:\ngcc/gm2/ulm-lib-gm2/std/Storage.mod:\ngcc/gm2/ulm-lib-gm2/std/RTExceptions.mod:\n\nCopyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\ngcc/gm2/gm2-libs:\nCopyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\nFree Software Foundation, Inc.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\n./gm2-libs/cbuiltin.def:\n./gm2-libs/MathLib0.def:\n./gm2-libs/SYSTEM.def:\n./gm2-libs/sckt.def:\n./gm2-libs/Indexing.def:\n./gm2-libs/Builtins.mod:\n./gm2-libs/SFIO.mod:\n./gm2-libs/MathLib0.mod:\n./gm2-libs/gdbif.mod:\n./gm2-libs/M2EXCEPTION.mod:\n./gm2-libs/SFIO.def:\n./gm2-libs/StringConvert.mod:\n./gm2-libs/StringConvert.def:\n./gm2-libs/config-host.in:\n./gm2-libs/Indexing.mod:\n./gm2-libs/errno.def:\n\nCopyright (C) 2001-2019 Free Software Foundation, Inc.\nContributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3, or (at your option)\nany later version.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\n./gm2-libs/M2EXCEPTION.def:\nLibrary module defined by the International Standard\nInformation technology - programming languages\nBS ISO/IEC 10514-1:1996E Part 1: Modula-2, Base Language.\n\nCopyright ISO/IEC (International Organization for Standardization\nand International Electrotechnical Commission) 1996, 1997, 1998,\n1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n\ngcc/gm2/gm2-libiberty/:\nCopyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n              Free Software Foundation, Inc.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\ngcc/gm2/gm2-libs-iso/:\nThis has a mix of licenses, both LGPL-2.1 and GPL-3.0, plus the apparently\nunmodified definition modules from ISO/IEC.\n\ngcc/gm2/gm2-libs-iso/*.def:\n\nLibrary module defined by the International Standard\nInformation technology - programming languages\nBS ISO/IEC 10514-1:1996E Part 1: Modula-2, Base Language.\n\nCopyright ISO/IEC (International Organization for Standardization\nand International Electrotechnical Commission) 1996, 1997, 1998,\n1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n\ngcc/gm2/gm2-libs-iso/*.def:\n\nCopyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n\ngcc/gm2/gm2-libs-iso/*.def:\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\ngcc/gm2/gm2-libs-iso/*.mod:\n\nCopyright (C) 2012 Free Software Foundation, Inc.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\ngcc/gm2/gm2-libs-iso/*.mod:\n\nCopyright (C) 2009, 2010 Free Software Foundation, Inc.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\ngcc/gm2/gm2-libs-min/*:\nCopyright (C) 2001-2019 Free Software Foundation, Inc.\nmix of GPL-3.0 and LGPL-3.0\n\ngcc/gm2/gm2-libs-pim/*:\nCopyright (C) 2001-2019 Free Software Foundation, Inc.\nmix of GPL-3.0 and LGPL-2.1/3\n\ngcc/gm2/gm2-libs-ch/*:\nCopyright (C) 2001-2019 Free Software Foundation, Inc.\nmix of GPL-3.0 and LGPL-2.1/3\n\ngcc/gm2/examples:\nCopyright (C) 2005-2015 Free Software Foundation, Inc.\nMix of LGPL-2.1 and GPL-3.0.\n\ngcc/gm2/images:\nGPL-3+\n\ngcc/gm2/el/gm2-mode.el:\n;; Everyone is granted permission to copy, modify and redistribute\n;; GNU Emacs, but only under the conditions described in the\n;; GNU Emacs General Public License.   A copy of this license is\n;; supposed to have been given to you along with GNU Emacs so you\n;; can know your rights and responsibilities.  It should be in a\n;; file named COPYING.  Among other things, the copyright notice\n;; and this notice must be preserved on all copies.\n\ngcc/gm2/mc-boot/:\nCopyright (C) 2001-2018 Free Software Foundation, Inc.\nContributed by Gaius Mulley <gaius@glam.ac.uk>.\nMix of GPL-3 and LGPL-2.1.\n\ngcc/testsuite/gm2/:\nCopyright (C) 2001-2019 Free Software Foundation, Inc.\nMix of GPL-2+ and GPL-3+\n\nlibgm2:\n\nlibgm2/libiso/:\nCopyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nlibgm2/libpim/:\nCopyright (C) 2005-2014 Free Software Foundation, Inc.\nMix of LGPL-2.1, LGPL-3 and GPL-3.\n\nlibgm2/liblog/:\nCopyright (C) 2005-2018 Free Software Foundation, Inc.\nMix of LGPL-2.1 and LGPL-3.\n\nlibgm2/libpth/:\nCopyright: (C) 1999-2006 Ralf S. Engelschall <rse@gnu.org>\nLicense: LGPL-2.1+\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Library General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n .\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n Library General Public License for more details.\n\nlibgm2/libulm/:\nCopyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n              Free Software Foundation, Inc.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nlibgm2/libcor/:\nCopyright (C) 2005-2019 Free Software Foundation, Inc.\nContributed by Gaius Mulley <gaius@glam.ac.uk>.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3, or (at your option)\nany later version.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nlibgm2/libmin/:\nCopyright (C) 2010, 2011, 2012, 2013 Free Software Foundation, Inc.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nlibgm2/p2c/:\nCopyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n              Free Software Foundation, Inc.\n\nGNU Modula-2 is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3, or (at your option)\nany later version.\n\nGNU Modula-2 is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nnewlib-X.Y.Z/:\n\nUpstream Authors:\nnewlib@sources.redhat.com\nJeff Johnston <jjohnstn@redhat.com>\nTom Fitzsimmons <fitzsim@redhat.com>\n\nThe newlib subdirectory is a collection of software from several sources.\nEach file may have its own copyright/license that is embedded in the source\nfile.\n\nThis list documents those licenses which are more restrictive than\na BSD-like license or require the copyright notice\nto be duplicated in documentation and/or other materials associated with\nthe distribution.  Certain licenses documented here only apply to\nspecific targets.  Certain clauses only apply if you are building the\ncode as part of your binary.\n\nNote that this list may omit certain licenses that\nonly pertain to the copying/modifying of the individual source code.\nIf you are distributing the source code, then you do not need to\nworry about these omitted licenses, so long as you do not modify the\ncopyright information already in place.\n\nParts of this work are licensed under the terms of the GNU General\nPublic License. On Debian systems, the complete text of this license\ncan be found in /usr/share/common-licenses/GPL.\n\nParts of this work are licensed under the terms of the GNU Library\nGeneral Public License. On Debian systems, the complete text of this\nlicense be found in /usr/share/common-licenses/LGPL.\n\n(1) University of California, Berkeley\n\n[1a]\n\nCopyright (c) 1990 The Regents of the University of California.\nAll rights reserved.\n\nRedistribution and use in source and binary forms are permitted\nprovided that the above copyright notice and this paragraph are\nduplicated in all such forms and that any documentation,\nand other materials related to such distribution and use\nacknowledge that the software was developed\nby the University of California, Berkeley.  The name of the\nUniversity may not be used to endorse or promote products derived\nfrom this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n\n[1b]\n\nCopyright (c) 1990 The Regents of the University of California.\nAll rights reserved.\n\nRedistribution and use in source and binary forms are permitted\nprovided that the above copyright notice and this paragraph are\nduplicated in all such forms and that any documentation,\nadvertising materials, and other materials related to such\ndistribution and use acknowledge that the software was developed\nby the University of California, Berkeley.  The name of the\nUniversity may not be used to endorse or promote products derived\nfrom this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n\n[1c]\n\nCopyright (c) 1981, 1983, 1986, 1988, 1989, 1991, 1992, 1993, 1994\nThe Regents of the University of California.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n     This product includes software developed by the University of\n     California, Berkeley and its contributors.\n4. Neither the name of the University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n[1d]\n\nCopyright (c) 1988, 1990, 1993 Regents of the University of California.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. Neither the name of the University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n[1e]\n\nCopyright (c) 1982, 1986, 1989, 1991, 1993, 1994\nThe Regents of the University of California.  All rights reserved.\n(c) UNIX System Laboratories, Inc.\nAll or some portions of this file are derived from material licensed\nto the University of California by American Telephone and Telegraph\nCo. or Unix System Laboratories, Inc. and are reproduced herein with\nthe permission of UNIX System Laboratories, Inc.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n     This product includes software developed by the University of\n     California, Berkeley and its contributors.\n4. Neither the name of the University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n[1f]\n\nCopyright (c) 1987, 1988, 2000 Regents of the University of California.\nAll rights reserved.\n\nRedistribution and use in source and binary forms are permitted\nprovided that: (1) source distributions retain this entire copyright\nnotice and comment, and (2) distributions including binaries display\nthe following acknowledgement:  ``This product includes software\ndeveloped by the University of California, Berkeley and its contributors''\nin the documentation or other materials provided with the distribution\nand in all advertising materials mentioning features or use of this\nsoftware. Neither the name of the University nor the names of its\ncontributors may be used to endorse or promote products derived\nfrom this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n\n-------------------------------------------------------------\n Please note that in some of the above alternate licenses, there is a\n statement regarding that acknowledgement must be made in any\n advertising materials for products using the code.  This restriction\n no longer applies due to the following license change:\n\n  ftp://ftp.cs.berkeley.edu/pub/4bsd/README.Impt.License.Change\n\n In some cases the defunct clause has been removed in modified newlib code and\n in some cases, the clause has been left as-is.\n-------------------------------------------------------------\n\n(2) Cygwin (cygwin targets only)\n\nCopyright 2001 Red Hat, Inc.\n\nThis software is a copyrighted work licensed under the terms of the\nCygwin license.  Please consult the file \"CYGWIN_LICENSE\" for\ndetails.\n\n(3) David M. Gay at AT&T\n\nThe author of this software is David M. Gay.\n\nCopyright (c) 1991 by AT&T.\n\nPermission to use, copy, modify, and distribute this software for any\npurpose without fee is hereby granted, provided that this entire notice\nis included in all copies of any software which is or includes a copy\nor modification of this software and in all copies of the supporting\ndocumentation for such software.\n\nTHIS SOFTWARE IS BEING PROVIDED \"AS IS\", WITHOUT ANY EXPRESS OR IMPLIED\nWARRANTY.  IN PARTICULAR, NEITHER THE AUTHOR NOR AT&T MAKES ANY\nREPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY\nOF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.\n\n(4) Advanced Micro Devices\n\nCopyright 1989, 1990 Advanced Micro Devices, Inc.\n\nThis software is the property of Advanced Micro Devices, Inc  (AMD)  which\nspecifically  grants the user the right to modify, use and distribute this\nsoftware provided this notice is not removed or altered.  All other rights\nare reserved by AMD.\n\nAMD MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH REGARD TO THIS\nSOFTWARE.  IN NO EVENT SHALL AMD BE LIABLE FOR INCIDENTAL OR CONSEQUENTIAL\nDAMAGES IN CONNECTION WITH OR ARISING FROM THE FURNISHING, PERFORMANCE, OR\nUSE OF THIS SOFTWARE.\n\nSo that all may benefit from your experience, please report  any  problems\nor  suggestions about this software to the 29K Technical Support Center at\n800-29-29-AMD (800-292-9263) in the USA, or 0800-89-1131  in  the  UK,  or\n0031-11-1129 in Japan, toll free.  The direct dial number is 512-462-4118.\n\nAdvanced Micro Devices, Inc.\n29K Support Products\nMail Stop 573\n5900 E. Ben White Blvd.\nAustin, TX 78741\n800-292-9263\n\n(5) C.W. Sandmann\n\nCopyright (C) 1993 C.W. Sandmann\n\nThis file may be freely distributed as long as the author's name remains.\n\n(6) Eric Backus\n\n(C) Copyright 1992 Eric Backus\n\nThis software may be used freely so long as this copyright notice is\nleft intact.  There is no warrantee on this software.\n\n(7) Sun Microsystems\n\nCopyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n\nDeveloped at SunPro, a Sun Microsystems, Inc. business.\nPermission to use, copy, modify, and distribute this\nsoftware is freely granted, provided that this notice\nis preserved.\n\n(8) Hewlett Packard\n\n(c) Copyright 1986 HEWLETT-PACKARD COMPANY\n\nTo anyone who acknowledges that this file is provided \"AS IS\"\nwithout any express or implied warranty:\n    permission to use, copy, modify, and distribute this file\nfor any purpose is hereby granted without fee, provided that\nthe above copyright notice and this notice appears in all\ncopies, and that the name of Hewlett-Packard Company not be\nused in advertising or publicity pertaining to distribution\nof the software without specific, written prior permission.\nHewlett-Packard Company makes no representations about the\nsuitability of this software for any purpose.\n\n(9) Hans-Peter Nilsson\n\nCopyright (C) 2001 Hans-Peter Nilsson\n\nPermission to use, copy, modify, and distribute this software is\nfreely granted, provided that the above copyright notice, this notice\nand the following disclaimer are preserved with no changes.\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.\n\n(10) Stephane Carrez (m68hc11-elf/m68hc12-elf targets only)\n\nCopyright (C) 1999, 2000, 2001, 2002 Stephane Carrez (stcarrez@nerim.fr)\n\nThe authors hereby grant permission to use, copy, modify, distribute,\nand license this software and its documentation for any purpose, provided\nthat existing copyright notices are retained in all copies and that this\nnotice is included verbatim in any distributions. No written agreement,\nlicense, or royalty fee is required for any of the authorized uses.\nModifications to this software may be copyrighted by their authors\nand need not follow the licensing terms described here, provided that\nthe new terms are clearly indicated on the first page of each file where\nthey apply.\n\n(11) Christopher G. Demetriou\n\nCopyright (c) 2001 Christopher G. Demetriou\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. The name of the author may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(12) SuperH, Inc.\n\nCopyright 2002 SuperH, Inc. All rights reserved\n\nThis software is the property of SuperH, Inc (SuperH) which specifically\ngrants the user the right to modify, use and distribute this software\nprovided this notice is not removed or altered.  All other rights are\nreserved by SuperH.\n\nSUPERH MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH REGARD TO\nTHIS SOFTWARE.  IN NO EVENT SHALL SUPERH BE LIABLE FOR INDIRECT, SPECIAL,\nINCIDENTAL OR CONSEQUENTIAL DAMAGES IN CONNECTION WITH OR ARISING FROM\nTHE FURNISHING, PERFORMANCE, OR USE OF THIS SOFTWARE.\n\nSo that all may benefit from your experience, please report any problems\nor suggestions about this software to the SuperH Support Center via\ne-mail at softwaresupport@superh.com .\n\nSuperH, Inc.\n405 River Oaks Parkway\nSan Jose\nCA 95134\nUSA\n\n(13) Royal Institute of Technology\n\nCopyright (c) 1999 Kungliga Tekniska Hgskolan\n(Royal Institute of Technology, Stockholm, Sweden).\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. Neither the name of KTH nor the names of its contributors may be\n   used to endorse or promote products derived from this software without\n   specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY KTH AND ITS CONTRIBUTORS ``AS IS'' AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL KTH OR ITS CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(14) Alexey Zelkin\n\nCopyright (c) 2000, 2001 Alexey Zelkin <phantom@FreeBSD.org>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n(15) Andrey A. Chernov\n\nCopyright (C) 1997 by Andrey A. Chernov, Moscow, Russia.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n(16) FreeBSD\n\nCopyright (c) 1997-2002 FreeBSD Project.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n(17) S. L. Moshier\n\nAuthor:  S. L. Moshier.\n\nCopyright (c) 1984,2000 S.L. Moshier\n\nPermission to use, copy, modify, and distribute this software for any\npurpose without fee is hereby granted, provided that this entire notice\nis included in all copies of any software which is or includes a copy\nor modification of this software and in all copies of the supporting\ndocumentation for such software.\n\nTHIS SOFTWARE IS BEING PROVIDED \"AS IS\", WITHOUT ANY EXPRESS OR IMPLIED\nWARRANTY.  IN PARTICULAR,  THE AUTHOR MAKES NO REPRESENTATION\nOR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY OF THIS\nSOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.\n\n(18) Citrus Project\n\nCopyright (c)1999 Citrus Project,\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n(19) Todd C. Miller\n\nCopyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. The name of the author may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\nTHE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\nOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(20) DJ Delorie (i386)\n\nCopyright (C) 1991 DJ Delorie\nAll rights reserved.\n\nRedistribution and use in source and binary forms is permitted\nprovided that the above copyright notice and following paragraph are\nduplicated in all such forms.\n\nThis file is distributed WITHOUT ANY WARRANTY; without even the implied\nwarranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n(21) Free Software Foundation LGPL License (*-linux* targets only)\n\n   Copyright (C) 1990-1999, 2000, 2001\n   Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n   Contributed by Mark Kettenis <kettenis@phys.uva.nl>, 1997.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, write to the Free\n   Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n   02110-1301 USA\n\n(22) Xavier Leroy LGPL License (i[3456]86-*-linux* targets only)\n\nCopyright (C) 1996 Xavier Leroy (Xavier.Leroy@inria.fr)\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Library General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Library General Public License for more details.\n\n(23) Intel (i960)\n\nCopyright (c) 1993 Intel Corporation\n\nIntel hereby grants you permission to copy, modify, and distribute this\nsoftware and its documentation.  Intel grants this permission provided\nthat the above copyright notice appears in all copies and that both the\ncopyright notice and this permission notice appear in supporting\ndocumentation.  In addition, Intel grants this permission provided that\nyou prominently mark as \"not part of the original\" any modifications\nmade to this software or documentation, and that the name of Intel\nCorporation not be used in advertising or publicity pertaining to\ndistribution of the software or the documentation without specific,\nwritten prior permission.\n\nIntel Corporation provides this AS IS, WITHOUT ANY WARRANTY, EXPRESS OR\nIMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY\nOR FITNESS FOR A PARTICULAR PURPOSE.  Intel makes no guarantee or\nrepresentations regarding the use of, or the results of the use of,\nthe software and documentation in terms of correctness, accuracy,\nreliability, currentness, or otherwise; and you rely on the software,\ndocumentation and results solely at your own risk.\n\nIN NO EVENT SHALL INTEL BE LIABLE FOR ANY LOSS OF USE, LOSS OF BUSINESS,\nLOSS OF PROFITS, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES\nOF ANY KIND.  IN NO EVENT SHALL INTEL'S TOTAL LIABILITY EXCEED THE SUM\nPAID TO INTEL FOR THE PRODUCT LICENSED HEREUNDER.\n\n(24) Hewlett-Packard  (hppa targets only)\n\n(c) Copyright 1986 HEWLETT-PACKARD COMPANY\n\nTo anyone who acknowledges that this file is provided \"AS IS\"\nwithout any express or implied warranty:\n    permission to use, copy, modify, and distribute this file\nfor any purpose is hereby granted without fee, provided that\nthe above copyright notice and this notice appears in all\ncopies, and that the name of Hewlett-Packard Company not be\nused in advertising or publicity pertaining to distribution\nof the software without specific, written prior permission.\nHewlett-Packard Company makes no representations about the\nsuitability of this software for any purpose.\n\n(25) Henry Spencer (only *-linux targets)\n\nCopyright 1992, 1993, 1994 Henry Spencer.  All rights reserved.\nThis software is not subject to any license of the American Telephone\nand Telegraph Company or of the Regents of the University of California.\n\nPermission is granted to anyone to use this software for any purpose on\nany computer system, and to alter it and redistribute it, subject\nto the following restrictions:\n\n1. The author is not responsible for the consequences of use of this\n   software, no matter how awful, even if they arise from flaws in it.\n\n2. The origin of this software must not be misrepresented, either by\n   explicit claim or by omission.  Since few users ever read sources,\n   credits must appear in the documentation.\n\n3. Altered versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.  Since few users\n   ever read sources, credits must appear in the documentation.\n\n4. This notice may not be removed or altered.\n\n(26) Mike Barcroft\n\nCopyright (c) 2001 Mike Barcroft <mike@FreeBSD.org>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n(27) Konstantin Chuguev (--enable-newlib-iconv)\n\nCopyright (c) 1999, 2000\n   Konstantin Chuguev.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n   iconv (Charset Conversion Library) v2.0\n\n(27) Artem Bityuckiy (--enable-newlib-iconv)\n\nCopyright (c) 2003, Artem B. Bityuckiy, SoftMine Corporation.\nRights transferred to Franklin Electronic Publishers.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n(28) Red Hat Incorporated\n\nUnless otherwise stated in each remaining newlib file, the remaining\nfiles in the newlib subdirectory default to the following copyright.\nIt should be noted that Red Hat Incorporated now owns copyrights\nbelonging to Cygnus Solutions and Cygnus Support.\n\nCopyright (c) 1994, 1997, 2001, 2002, 2003, 2004 Red Hat Incorporated.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n    Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n    The name of Red Hat Incorporated may not be used to endorse\n    or promote products derived from this software without specific\n    prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED.  IN NO EVENT SHALL RED HAT INCORPORATED BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n--------------------------------------------------------------------------------\n\n5. libLLVMGenXIntrinsics\n    MIT License\n    Copyright (c) 2020 Intel Corporation\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\n6. libLLVMSPIRVLib\n\t==============================================================================\n\tLLVM Release License\n\t==============================================================================\n\tUniversity of Illinois/NCSA\n\tOpen Source License\n\n\tCopyright (c) 2003-2014 University of Illinois at Urbana-Champaign.\n\tAll rights reserved.\n\n\tDeveloped by:\n\n\t\tLLVM Team\n\n\t\tUniversity of Illinois at Urbana-Champaign\n\n\t\thttp://llvm.org\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of\n\tthis software and associated documentation files (the \"Software\"), to deal with\n\tthe Software without restriction, including without limitation the rights to\n\tuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do\n\tso, subject to the following conditions:\n\n\t\t* Redistributions of source code must retain the above copyright notice,\n\t\t  this list of conditions and the following disclaimers.\n\n\t\t* Redistributions in binary form must reproduce the above copyright notice,\n\t\t  this list of conditions and the following disclaimers in the\n\t\t  documentation and/or other materials provided with the distribution.\n\n\t\t* Neither the names of the LLVM Team, University of Illinois at\n\t\t  Urbana-Champaign, nor the names of its contributors may be used to\n\t\t  endorse or promote products derived from this Software without specific\n\t\t  prior written permission.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\tFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\tCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n\tSOFTWARE.\n\n\t==============================================================================\n\tCopyrights and Licenses for Third Party Software Distributed with LLVM:\n\t==============================================================================\n\tThe LLVM software contains code written by third parties.  Such software will\n\thave its own individual LICENSE.TXT file in the directory in which it appears.\n\tThis file will describe the copyrights, license, and restrictions which apply\n\tto that code.\n\n\tThe disclaimer of warranty in the University of Illinois Open Source License\n\tapplies to all code in the LLVM Distribution, and nothing in any of the\n\tother licenses gives permission to use the names of the LLVM Team or the\n\tUniversity of Illinois to endorse or promote products derived from this\n\tSoftware.\n\n\tThe following pieces of software have additional or alternate copyrights,\n\tlicenses, and/or restrictions:\n\n\tProgram             Directory\n\t-------             ---------\n\tAutoconf            llvm/autoconf\n\t\t\t\t\t\t     llvm/projects/ModuleMaker/autoconf\n\tGoogle Test         llvm/utils/unittest/googletest\n\tOpenBSD regex       llvm/lib/Support/{reg*, COPYRIGHT.regex}\n\tpyyaml tests        llvm/test/YAMLParser/{*.data, LICENSE.TXT}\n\tARM contributions   llvm/lib/Target/ARM/LICENSE.TXT\n\tmd5 contributions   llvm/lib/Support/MD5.cpp llvm/include/llvm/Support/MD5.h\n\n\n--------------------------------------------------------------------------------\n\nOther names and brands may be claimed as the property of others.\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}