{
  "metadata": {
    "timestamp": 1736565738809,
    "page": 655,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/s2geometry",
      "stars": 2372,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.1142578125,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: Google\n# Always use `T* p`.\nDerivePointerAlignment: false\nPointerAlignment: Left\n...\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.4521484375,
          "content": "# This is the official list of glog authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n#\n# Names should be added to this file as:\n#\tName or Organization <email address>\n# The email address is not required for organizations.\n#\n# Please keep the list sorted.\n\nDan Larkin-York <dan@arangodb.com>\nGoogle Inc.\nKoordinates Limited\nMike Playle <mike@mythik.co.uk>\nTiago Brito <tiago.brito@90poe.io>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 24.265625,
          "content": "cmake_minimum_required(VERSION 3.18)\n\nproject(s2-geometry\n        VERSION 0.12.0)\n\ninclude(CMakeDependentOption)\ninclude(CheckCXXCompilerFlag)\ninclude(FeatureSummary)\ninclude(FindPackageHandleStandardArgs)\ninclude(GNUInstallDirs)\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# Avoid \"Policy CMP0042 is not set\" warning on macOS.\nif (APPLE)\n    set(CMAKE_MACOSX_RPATH TRUE)\nendif()\n\n# s2geometry needs to use the same C++ standard that absl used to avoid\n# undefined symbol errors since ABSL_HAVE_STD_STRING_VIEW etc will\n# end up defined differently.  There is probably a better way to achieve\n# this than assuming what absl used.  We default to c++17, but support\n# c++14 (like abseil).\n# Using CACHE allows the user to override the default.\nset(CMAKE_CXX_STANDARD 17 CACHE STRING \"The C++ standard to build with\")\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n# No compiler-specific extensions, i.e. -std=c++17, not -std=gnu++17.\nset(CMAKE_CXX_EXTENSIONS OFF)\n\noption(BUILD_SHARED_LIBS \"Build shared libraries instead of static.\" ON)\nadd_feature_info(SHARED_LIBS BUILD_SHARED_LIBS\n                 \"builds shared libraries instead of static.\")\n\noption(BUILD_EXAMPLES \"Build s2 documentation examples.\" ON)\noption(BUILD_TESTS \"Build s2 unittests.\" ON)\n\noption(WITH_PYTHON \"Add python interface\" OFF)\nadd_feature_info(PYTHON WITH_PYTHON \"provides python interface to S2\")\n\noption(S2_USE_SYSTEM_INCLUDES\n    \"Silence warnings in s2 headers by marking them as SYSTEM includes.\" OFF)\nadd_feature_info(S2_USE_SYSTEM_INCLUDES S2_USE_SYSTEM_INCLUDES\n    \"Silence warnings in s2 headers by marking them as SYSTEM includes.\")\n\nfeature_summary(WHAT ALL)\n\n# Don't output anything for LOG(INFO).\nadd_definitions(-DABSL_MIN_LOG_LEVEL=1)\n\n# If we already have abseil we don't need to find it, for an example:\n# add_subdirectory(absl-submbodule)\n# add_subdirectory(s2-submodule)\nif (NOT TARGET absl::base)\n    find_package(absl REQUIRED)\nendif()\nfind_package(OpenSSL REQUIRED)\n# pthreads isn't used directly, but this is still required for std::thread.\nfind_package(Threads REQUIRED)\n\nif (NOT TARGET absl::vlog_is_on)\n    message(FATAL_ERROR \"Could not find absl vlog module. Are you using an older version?\")\nendif()\n\nif (WITH_PYTHON)\n    # Should be easy to make it work with swig3, but some args to %pythonprepend\n    # seem to be different and were changed.\n    find_package(SWIG 4.0)\n    # Use Python3_ROOT_DIR to help find python3, if the correct location is not\n    # being found by default.\n    find_package(Python3 COMPONENTS Interpreter Development.Module)\nendif()\n\nif (MSVC)\n    # Use unsigned characters\n    add_definitions(-J)\n    # Make sure cmath header defines things like M_PI\n    add_definitions(-D_USE_MATH_DEFINES)\n    # Make sure Windows doesn't define min/max macros that interfere with STL\n    add_definitions(-DNOMINMAX)\nelse()\n    # Avoid megabytes of warnings like:\n    # util/math/vector.h:178:16: warning: optimization attribute on\n    # ‘double sqrt(double)’ follows definition but the attribute doesn’t\n    # match [-Wattributes]\n    add_definitions(-Wno-attributes)\n    add_definitions(-Wno-deprecated-declarations)\nendif()\n\n# If OpenSSL is installed in a non-standard location, configure with\n# something like:\n# OPENSSL_ROOT_DIR=/usr/local/opt/openssl cmake ..\ninclude_directories(${OPENSSL_INCLUDE_DIR})\n\nif (WITH_PYTHON)\n    include_directories(${Python3_INCLUDE_DIRS})\nendif()\n\ninclude_directories(src)\n\nadd_library(s2\n            src/s2/base/malloc_extension.cc\n            src/s2/encoded_s2cell_id_vector.cc\n            src/s2/encoded_s2point_vector.cc\n            src/s2/encoded_s2shape_index.cc\n            src/s2/encoded_string_vector.cc\n            src/s2/id_set_lexicon.cc\n            src/s2/internal/s2incident_edge_tracker.cc\n            src/s2/internal/s2index_cell_data.cc\n            src/s2/mutable_s2shape_index.cc\n            src/s2/r2rect.cc\n            src/s2/s1angle.cc\n            src/s2/s1chord_angle.cc\n            src/s2/s1interval.cc\n            src/s2/s2boolean_operation.cc\n            src/s2/s2buffer_operation.cc\n            src/s2/s2builder.cc\n            src/s2/s2builder_graph.cc\n            src/s2/s2builderutil_closed_set_normalizer.cc\n            src/s2/s2builderutil_find_polygon_degeneracies.cc\n            src/s2/s2builderutil_get_snapped_winding_delta.cc\n            src/s2/s2builderutil_lax_polygon_layer.cc\n            src/s2/s2builderutil_lax_polyline_layer.cc\n            src/s2/s2builderutil_s2point_vector_layer.cc\n            src/s2/s2builderutil_s2polygon_layer.cc\n            src/s2/s2builderutil_s2polyline_layer.cc\n            src/s2/s2builderutil_s2polyline_vector_layer.cc\n            src/s2/s2builderutil_snap_functions.cc\n            src/s2/s2cap.cc\n            src/s2/s2cell.cc\n            src/s2/s2cell_id.cc\n            src/s2/s2cell_index.cc\n            src/s2/s2cell_union.cc\n            src/s2/s2centroids.cc\n            src/s2/s2chain_interpolation_query.cc\n            src/s2/s2closest_cell_query.cc\n            src/s2/s2closest_edge_query.cc\n            src/s2/s2closest_point_query.cc\n            src/s2/s2contains_vertex_query.cc\n            src/s2/s2convex_hull_query.cc\n            src/s2/s2coords.cc\n            src/s2/s2crossing_edge_query.cc\n            src/s2/s2debug.cc\n            src/s2/s2density_tree.cc\n            src/s2/s2earth.cc\n            src/s2/s2edge_clipping.cc\n            src/s2/s2edge_crosser.cc\n            src/s2/s2edge_crossings.cc\n            src/s2/s2edge_distances.cc\n            src/s2/s2edge_tessellator.cc\n            src/s2/s2error.cc\n            src/s2/s2fractal.cc\n            src/s2/s2furthest_edge_query.cc\n            src/s2/s2hausdorff_distance_query.cc\n            src/s2/s2latlng.cc\n            src/s2/s2latlng_rect.cc\n            src/s2/s2latlng_rect_bounder.cc\n            src/s2/s2lax_loop_shape.cc\n            src/s2/s2lax_polygon_shape.cc\n            src/s2/s2lax_polyline_shape.cc\n            src/s2/s2loop.cc\n            src/s2/s2loop_measures.cc\n            src/s2/s2max_distance_targets.cc\n            src/s2/s2measures.cc\n            src/s2/s2memory_tracker.cc\n            src/s2/s2metrics.cc\n            src/s2/s2min_distance_targets.cc\n            src/s2/s2padded_cell.cc\n            src/s2/s2point_compression.cc\n            src/s2/s2point_region.cc\n            src/s2/s2pointutil.cc\n            src/s2/s2polygon.cc\n            src/s2/s2polyline.cc\n            src/s2/s2polyline_alignment.cc\n            src/s2/s2polyline_measures.cc\n            src/s2/s2polyline_simplifier.cc\n            src/s2/s2predicates.cc\n            src/s2/s2projections.cc\n            src/s2/s2r2rect.cc\n            src/s2/s2random.cc\n            src/s2/s2region_coverer.cc\n            src/s2/s2region_intersection.cc\n            src/s2/s2region_sharder.cc\n            src/s2/s2region_term_indexer.cc\n            src/s2/s2region_union.cc\n            src/s2/s2shape_index.cc\n            src/s2/s2shape_index_buffered_region.cc\n            src/s2/s2shape_index_measures.cc\n            src/s2/s2shape_measures.cc\n            src/s2/s2shape_nesting_query.cc\n            src/s2/s2shapeutil_build_polygon_boundaries.cc\n            src/s2/s2shapeutil_coding.cc\n            src/s2/s2shapeutil_contains_brute_force.cc\n            src/s2/s2shapeutil_conversion.cc\n            src/s2/s2shapeutil_count_vertices.cc\n            src/s2/s2shapeutil_edge_iterator.cc\n            src/s2/s2shapeutil_edge_wrap.cc\n            src/s2/s2shapeutil_get_reference_point.cc\n            src/s2/s2shapeutil_visit_crossing_edge_pairs.cc\n            src/s2/s2text_format.cc\n            src/s2/s2wedge_relations.cc\n            src/s2/s2winding_operation.cc\n            src/s2/util/bits/bit-interleave.cc\n            src/s2/util/coding/coder.cc\n            src/s2/util/coding/varint.cc\n            src/s2/util/math/exactfloat/exactfloat.cc\n            src/s2/util/math/mathutil.cc\n            src/s2/util/units/length-units.cc)\n\nif (GOOGLETEST_ROOT)\n  add_library(s2testing STATIC\n              src/s2/gmock_matchers.cc\n              src/s2/s2builderutil_testing.cc\n              src/s2/s2shapeutil_testing.cc\n              src/s2/s2testing.cc\n              src/s2/thread_testing.cc)\nendif()\n\ntarget_link_libraries(\n    s2\n    ${OPENSSL_LIBRARIES}\n    absl::base\n    absl::btree\n    absl::check\n    absl::config\n    absl::core_headers\n    absl::dynamic_annotations\n    absl::endian\n    absl::fixed_array\n    absl::flags\n    absl::flat_hash_map\n    absl::flat_hash_set\n    absl::hash\n    absl::inlined_vector\n    absl::int128\n    absl::log\n    absl::log_severity\n    absl::memory\n    absl::span\n    absl::status\n    absl::str_format\n    absl::strings\n    absl::type_traits\n    absl::utility\n    absl::vlog_is_on\n    ${CMAKE_THREAD_LIBS_INIT})\n\nif (GOOGLETEST_ROOT)\n  target_link_libraries(\n      s2testing\n      absl::check\n      absl::flags\n      absl::log\n      absl::memory\n      absl::strings)\nendif()\n\n# Allow other CMake projects to use this one with:\n# list(APPEND CMAKE_MODULE_PATH \"<path_to_s2geometry_dir>/third_party/cmake\")\n# add_subdirectory(<path_to_s2geometry_dir> s2geometry)\n# target_link_libraries(<target_name> s2)\nif (S2_USE_SYSTEM_INCLUDES)\n    target_include_directories(s2 SYSTEM PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)\nelse ()\n    target_include_directories(s2 PUBLIC\n      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>\n      $<INSTALL_INTERFACE:include>)\nendif ()\n\n# Add version information to the target\nset_target_properties(s2 PROPERTIES\n    SOVERSION ${PROJECT_VERSION_MAJOR}\n    VERSION ${PROJECT_VERSION})\n\n# We don't need to install all headers, only those\n# transitively included by s2 headers we are exporting.\ninstall(FILES src/s2/_fp_contract_off.h\n              src/s2/encoded_s2cell_id_vector.h\n              src/s2/encoded_s2point_vector.h\n              src/s2/encoded_s2shape_index.h\n              src/s2/encoded_string_vector.h\n              src/s2/encoded_uint_vector.h\n              src/s2/gmock_matchers.h\n              src/s2/id_set_lexicon.h\n              src/s2/mutable_s2shape_index.h\n              src/s2/r1interval.h\n              src/s2/r2.h\n              src/s2/r2rect.h\n              src/s2/s1angle.h\n              src/s2/s1chord_angle.h\n              src/s2/s1interval.h\n              src/s2/s2boolean_operation.h\n              src/s2/s2buffer_operation.h\n              src/s2/s2builder.h\n              src/s2/s2builder_graph.h\n              src/s2/s2builder_layer.h\n              src/s2/s2builderutil_closed_set_normalizer.h\n              src/s2/s2builderutil_find_polygon_degeneracies.h\n              src/s2/s2builderutil_get_snapped_winding_delta.h\n              src/s2/s2builderutil_graph_shape.h\n              src/s2/s2builderutil_lax_polygon_layer.h\n              src/s2/s2builderutil_lax_polyline_layer.h\n              src/s2/s2builderutil_s2point_vector_layer.h\n              src/s2/s2builderutil_s2polygon_layer.h\n              src/s2/s2builderutil_s2polyline_layer.h\n              src/s2/s2builderutil_s2polyline_vector_layer.h\n              src/s2/s2builderutil_snap_functions.h\n              src/s2/s2builderutil_testing.h\n              src/s2/s2cap.h\n              src/s2/s2cell.h\n              src/s2/s2cell_id.h\n              src/s2/s2cell_index.h\n              src/s2/s2cell_iterator.h\n              src/s2/s2cell_iterator_join.h\n              src/s2/s2cell_range_iterator.h\n              src/s2/s2cell_union.h\n              src/s2/s2centroids.h\n              src/s2/s2chain_interpolation_query.h\n              src/s2/s2closest_cell_query.h\n              src/s2/s2closest_cell_query_base.h\n              src/s2/s2closest_edge_query.h\n              src/s2/s2closest_edge_query_base.h\n              src/s2/s2closest_point_query.h\n              src/s2/s2closest_point_query_base.h\n              src/s2/s2coder.h\n              src/s2/s2contains_point_query.h\n              src/s2/s2contains_vertex_query.h\n              src/s2/s2convex_hull_query.h\n              src/s2/s2coords.h\n              src/s2/s2coords_internal.h\n              src/s2/s2crossing_edge_query.h\n              src/s2/s2debug.h\n              src/s2/s2density_tree.h\n              src/s2/s2density_tree_internal.h\n              src/s2/s2distance_target.h\n              src/s2/s2earth.h\n              src/s2/s2edge_clipping.h\n              src/s2/s2edge_crosser.h\n              src/s2/s2edge_crossings.h\n              src/s2/s2edge_crossings_internal.h\n              src/s2/s2edge_distances.h\n              src/s2/s2edge_tessellator.h\n              src/s2/s2edge_vector_shape.h\n              src/s2/s2error.h\n              src/s2/s2fractal.h\n              src/s2/s2furthest_edge_query.h\n              src/s2/s2hausdorff_distance_query.h\n              src/s2/s2latlng.h\n              src/s2/s2latlng_rect.h\n              src/s2/s2latlng_rect_bounder.h\n              src/s2/s2lax_loop_shape.h\n              src/s2/s2lax_polygon_shape.h\n              src/s2/s2lax_polyline_shape.h\n              src/s2/s2loop.h\n              src/s2/s2loop_measures.h\n              src/s2/s2max_distance_targets.h\n              src/s2/s2measures.h\n              src/s2/s2memory_tracker.h\n              src/s2/s2metrics.h\n              src/s2/s2min_distance_targets.h\n              src/s2/s2padded_cell.h\n              src/s2/s2point.h\n              src/s2/s2point_compression.h\n              src/s2/s2point_index.h\n              src/s2/s2point_region.h\n              src/s2/s2point_span.h\n              src/s2/s2point_vector_shape.h\n              src/s2/s2pointutil.h\n              src/s2/s2polygon.h\n              src/s2/s2polyline.h\n              src/s2/s2polyline_alignment.h\n              src/s2/s2polyline_measures.h\n              src/s2/s2polyline_simplifier.h\n              src/s2/s2predicates.h\n              src/s2/s2predicates_internal.h\n              src/s2/s2projections.h\n              src/s2/s2r2rect.h\n              src/s2/s2random.h\n              src/s2/s2region.h\n              src/s2/s2region_coverer.h\n              src/s2/s2region_intersection.h\n              src/s2/s2region_sharder.h\n              src/s2/s2region_term_indexer.h\n              src/s2/s2region_union.h\n              src/s2/s2shape.h\n              src/s2/s2shape.h\n              src/s2/s2shape_index.h\n              src/s2/s2shape_index_buffered_region.h\n              src/s2/s2shape_index_region.h\n              src/s2/s2shape_measures.h\n              src/s2/s2shape_nesting_query.h\n              src/s2/s2shapeutil_build_polygon_boundaries.h\n              src/s2/s2shapeutil_coding.h\n              src/s2/s2shapeutil_contains_brute_force.h\n              src/s2/s2shapeutil_conversion.h\n              src/s2/s2shapeutil_count_edges.h\n              src/s2/s2shapeutil_count_vertices.h\n              src/s2/s2shapeutil_edge_iterator.h\n              src/s2/s2shapeutil_edge_wrap.h\n              src/s2/s2shapeutil_get_reference_point.h\n              src/s2/s2shapeutil_shape_edge.h\n              src/s2/s2shapeutil_shape_edge_id.h\n              src/s2/s2shapeutil_testing.h\n              src/s2/s2shapeutil_visit_crossing_edge_pairs.h\n              src/s2/s2testing.h\n              src/s2/s2text_format.h\n              src/s2/s2validation_query.h\n              src/s2/s2wedge_relations.h\n              src/s2/s2winding_operation.h\n              src/s2/s2wrapped_shape.h\n              src/s2/sequence_lexicon.h\n              src/s2/thread_testing.h\n              src/s2/value_lexicon.h\n        DESTINATION include/s2)\ninstall(FILES src/s2/internal/s2disjoint_set.h\n              src/s2/internal/s2incident_edge_tracker.h\n              src/s2/internal/s2index_cell_data.h\n              src/s2/internal/s2meta.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/internal\")\ninstall(FILES src/s2/base/casts.h\n              src/s2/base/commandlineflags.h\n              src/s2/base/commandlineflags_declare.h\n              src/s2/base/log_severity.h\n              src/s2/base/malloc_extension.h\n              src/s2/base/port.h\n              src/s2/base/spinlock.h\n              src/s2/base/types.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/base\")\ninstall(FILES src/s2/testing/gtest_prod.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/testing\")\ninstall(FILES src/s2/util/bitmap/bitmap.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/bitmap\")\ninstall(FILES src/s2/util/bits/bits.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/bits\")\ninstall(FILES src/s2/util/coding/coder.h\n              src/s2/util/coding/varint.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/coding\")\ninstall(FILES src/s2/util/endian/endian.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/endian\")\ninstall(FILES src/s2/util/gtl/compact_array.h\n              src/s2/util/gtl/container_logging.h\n              src/s2/util/gtl/dense_hash_set.h\n              src/s2/util/gtl/densehashtable.h\n              src/s2/util/gtl/hashtable_common.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/gtl\")\ninstall(FILES src/s2/util/hash/mix.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/hash\")\ninstall(FILES src/s2/util/math/mathutil.h\n              src/s2/util/math/matrix3x3.h\n              src/s2/util/math/vector.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/math\")\ninstall(FILES src/s2/util/math/exactfloat/exactfloat.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/math/exactfloat\")\ninstall(FILES src/s2/util/units/length-units.h\n              src/s2/util/units/physical-units.h\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/s2/util/units\")\n\nif (GOOGLETEST_ROOT)\n  set(S2_TARGETS s2 s2testing)\nelse()\n  set(S2_TARGETS s2)\nendif()\n\ninstall(TARGETS ${S2_TARGETS}\n        RUNTIME DESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n        ARCHIVE DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n        LIBRARY DESTINATION \"${CMAKE_INSTALL_LIBDIR}\")\n\n# Create an export type \"s2Targets\" detailing the targetable artifacts created\n# by this project.\ninstall(TARGETS s2 EXPORT s2Targets)\n# Install the export targets as a CMake config file in the share/s2 folder so\n# that they can referenced  by downstream projects as `s2::s2` after a\n# successful `find_package` call.\ninstall(EXPORT s2Targets\n        NAMESPACE s2::\n        FILE s2Targets.cmake\n        DESTINATION share/s2/)\n\nif (BUILD_TESTS)\n  if (NOT GOOGLETEST_ROOT)\n    message(FATAL_ERROR \"BUILD_TESTS requires GOOGLETEST_ROOT\")\n  endif()\n  message(\"GOOGLETEST_ROOT: ${GOOGLETEST_ROOT}\")\n\n  add_subdirectory(${GOOGLETEST_ROOT}/googlemock build_gmock)\n  include_directories(${GOOGLETEST_ROOT}/googlemock/include)\n  include_directories(${GOOGLETEST_ROOT}/googletest/include)\n\n  set(S2TestFiles\n      src/s2/encoded_s2cell_id_vector_test.cc\n      src/s2/encoded_s2point_vector_test.cc\n      src/s2/encoded_s2shape_index_test.cc\n      src/s2/encoded_string_vector_test.cc\n      src/s2/encoded_uint_vector_test.cc\n      src/s2/gmock_matchers_test.cc\n      src/s2/id_set_lexicon_test.cc\n      src/s2/internal/s2disjoint_set_test.cc\n      src/s2/internal/s2index_cell_data_test.cc\n      src/s2/mutable_s2shape_index_test.cc\n      src/s2/r1interval_test.cc\n      src/s2/r2rect_test.cc\n      src/s2/s1angle_test.cc\n      src/s2/s1chord_angle_test.cc\n      src/s2/s1interval_test.cc\n      src/s2/s2boolean_operation_test.cc\n      src/s2/s2buffer_operation_test.cc\n      src/s2/s2builder_graph_test.cc\n      src/s2/s2builder_test.cc\n      src/s2/s2builderutil_closed_set_normalizer_test.cc\n      src/s2/s2builderutil_find_polygon_degeneracies_test.cc\n      src/s2/s2builderutil_get_snapped_winding_delta_test.cc\n      src/s2/s2builderutil_lax_polygon_layer_test.cc\n      src/s2/s2builderutil_lax_polyline_layer_test.cc\n      src/s2/s2builderutil_s2point_vector_layer_test.cc\n      src/s2/s2builderutil_s2polygon_layer_test.cc\n      src/s2/s2builderutil_s2polyline_layer_test.cc\n      src/s2/s2builderutil_s2polyline_vector_layer_test.cc\n      src/s2/s2builderutil_snap_functions_test.cc\n      src/s2/s2builderutil_testing_test.cc\n      src/s2/s2cap_test.cc\n      src/s2/s2cell_id_test.cc\n      src/s2/s2cell_index_test.cc\n      src/s2/s2cell_iterator_join_test.cc\n      src/s2/s2cell_iterator_testing_test.cc\n      src/s2/s2cell_range_iterator_test.cc\n      src/s2/s2cell_test.cc\n      src/s2/s2cell_union_test.cc\n      src/s2/s2centroids_test.cc\n      src/s2/s2chain_interpolation_query_test.cc\n      src/s2/s2closest_cell_query_base_test.cc\n      src/s2/s2closest_cell_query_test.cc\n      src/s2/s2closest_edge_query_base_test.cc\n      src/s2/s2closest_edge_query_test.cc\n      src/s2/s2closest_point_query_base_test.cc\n      src/s2/s2closest_point_query_test.cc\n      src/s2/s2contains_point_query_test.cc\n      src/s2/s2contains_vertex_query_test.cc\n      src/s2/s2convex_hull_query_test.cc\n      src/s2/s2coords_test.cc\n      src/s2/s2crossing_edge_query_test.cc\n      src/s2/s2density_tree_test.cc\n      src/s2/s2earth_test.cc\n      src/s2/s2edge_clipping_test.cc\n      src/s2/s2edge_crosser_test.cc\n      src/s2/s2edge_crossings_test.cc\n      src/s2/s2edge_distances_test.cc\n      src/s2/s2edge_tessellator_test.cc\n      src/s2/s2edge_vector_shape_test.cc\n      src/s2/s2error_test.cc\n      src/s2/s2fractal_test.cc\n      src/s2/s2furthest_edge_query_test.cc\n      src/s2/s2hausdorff_distance_query_test.cc\n      src/s2/s2latlng_rect_bounder_test.cc\n      src/s2/s2latlng_rect_test.cc\n      src/s2/s2latlng_test.cc\n      src/s2/s2lax_loop_shape_test.cc\n      src/s2/s2lax_polygon_shape_test.cc\n      src/s2/s2lax_polyline_shape_test.cc\n      src/s2/s2loop_measures_test.cc\n      src/s2/s2loop_test.cc\n      src/s2/s2max_distance_targets_test.cc\n      src/s2/s2measures_test.cc\n      src/s2/s2memory_tracker_test.cc\n      src/s2/s2metrics_test.cc\n      src/s2/s2min_distance_targets_test.cc\n      src/s2/s2padded_cell_test.cc\n      src/s2/s2point_compression_test.cc\n      src/s2/s2point_index_test.cc\n      src/s2/s2point_region_test.cc\n      src/s2/s2point_test.cc\n      src/s2/s2point_vector_shape_test.cc\n      src/s2/s2pointutil_test.cc\n      src/s2/s2polygon_test.cc\n      src/s2/s2polyline_alignment_test.cc\n      src/s2/s2polyline_measures_test.cc\n      src/s2/s2polyline_simplifier_test.cc\n      src/s2/s2polyline_test.cc\n      src/s2/s2predicates_test.cc\n      src/s2/s2projections_test.cc\n      src/s2/s2r2rect_test.cc\n      src/s2/s2random_test.cc\n      src/s2/s2region_coverer_test.cc\n      src/s2/s2region_sharder_test.cc\n      src/s2/s2region_term_indexer_test.cc\n      src/s2/s2region_test.cc\n      src/s2/s2region_union_test.cc\n      src/s2/s2shape_index_buffered_region_test.cc\n      src/s2/s2shape_index_measures_test.cc\n      src/s2/s2shape_index_region_test.cc\n      src/s2/s2shape_index_test.cc\n      src/s2/s2shape_measures_test.cc\n      src/s2/s2shape_nesting_query_test.cc\n      src/s2/s2shapeutil_build_polygon_boundaries_test.cc\n      src/s2/s2shapeutil_coding_test.cc\n      src/s2/s2shapeutil_contains_brute_force_test.cc\n      src/s2/s2shapeutil_conversion_test.cc\n      src/s2/s2shapeutil_count_edges_test.cc\n      src/s2/s2shapeutil_count_vertices_test.cc\n      src/s2/s2shapeutil_edge_iterator_test.cc\n      src/s2/s2shapeutil_edge_wrap_test.cc\n      src/s2/s2shapeutil_get_reference_point_test.cc\n      src/s2/s2shapeutil_shape_edge_id_test.cc\n      src/s2/s2shapeutil_visit_crossing_edge_pairs_test.cc\n      src/s2/s2text_format_test.cc\n      src/s2/s2validation_query_test.cc\n      src/s2/s2wedge_relations_test.cc\n      src/s2/s2winding_operation_test.cc\n      src/s2/s2wrapped_shape_test.cc\n      src/s2/sequence_lexicon_test.cc\n      src/s2/value_lexicon_test.cc)\n\n  enable_testing()\n\n  foreach (test_cc ${S2TestFiles})\n    get_filename_component(test ${test_cc} NAME_WE)\n    add_executable(${test} ${test_cc})\n    target_link_libraries(\n        ${test}\n        s2testing s2\n        absl::base\n        absl::btree\n        absl::check\n        absl::core_headers\n        absl::flags\n        absl::flags_reflection\n        absl::log\n        absl::memory\n        absl::random_random\n        absl::span\n        absl::status\n        absl::strings\n        absl::synchronization\n        gmock_main)\n    add_test(${test} ${test})\n  endforeach()\nendif()\n\nif (BUILD_EXAMPLES AND TARGET s2testing)\n  add_subdirectory(\"doc/examples\" examples)\nendif()\n\nif (${SWIG_FOUND} AND ${Python3_FOUND})\n  add_subdirectory(\"src/python\" python)\nendif()\n\ninclude(CMakePackageConfigHelpers)\n\n# Generate the config file that includes the exports.\nconfigure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in\n  \"${CMAKE_CURRENT_BINARY_DIR}/s2Config.cmake\"\n  INSTALL_DESTINATION \"share/s2/\"\n  NO_SET_AND_CHECK_MACRO\n  NO_CHECK_REQUIRED_COMPONENTS_MACRO)\n\nwrite_basic_package_version_file(\n  \"${CMAKE_CURRENT_BINARY_DIR}/s2ConfigVersion.cmake\"\n  VERSION ${PROJECT_VERSION}\n  COMPATIBILITY SameMinorVersion)\n\ninstall(FILES ${CMAKE_CURRENT_BINARY_DIR}/s2Config.cmake\n              ${CMAKE_CURRENT_BINARY_DIR}/s2ConfigVersion.cmake\n        DESTINATION \"share/s2/\")\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1123046875,
          "content": "# How to contribute #\n\nWe'd love to accept your patches and contributions to this project.  There are\na just a few small guidelines you need to follow.\n\n\n## Contributor License Agreement ##\n\nContributions to any Google project must be accompanied by a Contributor\nLicense Agreement.  This is not a copyright **assignment**, it simply gives\nGoogle permission to use and redistribute your contributions as part of the\nproject.\n\n  * If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual\n    CLA][].\n\n  * If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA][].\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n\n[individual CLA]: https://developers.google.com/open-source/cla/individual\n[corporate CLA]: https://developers.google.com/open-source/cla/corporate\n\nOnce your CLA is submitted (or if you already submitted one for\nanother Google project), make a commit adding yourself to the\n[AUTHORS][] and [CONTRIBUTORS][] files. This commit can be part\nof your first [pull request][].\n\n[AUTHORS]: AUTHORS\n[CONTRIBUTORS]: CONTRIBUTORS\n\n\n## Submitting a patch ##\n\n  1. It's generally best to start by opening a new issue describing the bug or\n     feature you're intending to fix.  Even if you think it's relatively minor,\n     it's helpful to know what people are working on.  Mention in the initial\n     issue that you are planning to work on that bug or feature so that it can\n     be assigned to you.\n\n  1. Follow the normal process of [forking][] the project, and setup a new\n     branch to work in.  It's important that each group of changes be done in\n     separate branches in order to ensure that a pull request only includes the\n     commits related to that bug or feature.\n\n  1. Do your best to have [well-formed commit messages][] with a [good\n     description][] for each change.  This provides consistency throughout\n     the project, and ensures that commit messages are able to be formatted\n     properly by various git tools.\n\n  1. Keep PRs [small and focused][] on a single issue.  Do not make unrelated\n     changes in the same PR \"because you're there\"; this includes reformatting\n     of code, whether automatically or manually.\n\n  1. Finally, push the commits to your fork and submit a [pull request][].\n\n[forking]: https://help.github.com/articles/fork-a-repo\n[well-formed commit messages]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n[good description]: https://google.github.io/eng-practices/review/developer/cl-descriptions.html\n[pull request]: https://help.github.com/articles/creating-a-pull-request\n[small and focused]: https://google.github.io/eng-practices/review/developer/small-cls.html\n\n\n## Style ##\n\nContributions should follow the [Google C++ Style Guide].  Code may be\n[formatted] with `git clang-format`.\n\n[Google C++ Style Guide]: http://google.github.io/styleguide/cppguide.html\n[formatted]: http://google.github.io/styleguide/cppguide.html#Formatting\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.2314453125,
          "content": "# People who have agreed to one of the CLAs and can contribute patches.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n#\n# Names should be added to this file only after verifying that\n# the individual or the individual's organization has agreed to\n# the appropriate Contributor License Agreement, found here:\n#\n# https://developers.google.com/open-source/cla/individual\n# https://developers.google.com/open-source/cla/corporate\n#\n# The agreement for individuals can be filled out on the web.\n#\n# When adding J Random Contributor's name to this file,\n# either J's name or J's organization's name should be\n# added to the AUTHORS file, depending on whether the\n# individual or corporate CLA was used.\n#\n# Names should be added to this file as:\n#     Name <email address>\n#\n# Please keep the list sorted.\n\nDan Larkin-York <dan@arangodb.com>\nEric Veach <ericv@google.com>\nJesse Rosenstock <jmr@google.com>\nJulien Basch <julienbasch@google.com>\nMike Playle <mike@mythik.co.uk>\nPhil Elson <pelson.pub@gmail.com>\nRobert Coup <robert.coup@koordinates.com>\nTiago Brito <tiago.brito@90poe.io>\nZachary Burnett <zachary.r.burnett@gmail.com>\n"
        },
        {
          "name": "Config.cmake.in",
          "type": "blob",
          "size": 0.1298828125,
          "content": "@PACKAGE_INIT@\n\ninclude(CMakeFindDependencyMacro)\nfind_dependency(absl CONFIG)\n\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/s2Targets.cmake\")\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.14453125,
          "content": "S2 Geometry Library\nCopyright 2017 Google Inc.  All Rights Reserved.\n\nThis product includes software developed at\nGoogle (https://www.google.com/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.7998046875,
          "content": "# S2 Geometry Library\n\n## Overview\n\nThis is a package for manipulating geometric shapes. Unlike many geometry\nlibraries, S2 is primarily designed to work with _spherical geometry_, i.e.,\nshapes drawn on a sphere rather than on a planar 2D map. This makes it\nespecially suitable for working with geographic data.\n\nIf you want to learn more about the library, start by reading the\n[overview](http://s2geometry.io/about/overview) and [quick start\ndocument](http://s2geometry.io/devguide/cpp/quickstart), then read the\nintroduction to the [basic types](http://s2geometry.io/devguide/basic_types).\n\nS2 documentation can be found on [s2geometry.io](http://s2geometry.io).\n\n## API/ABI Stability\n\nNote that all [releases](https://github.com/google/s2geometry/releases) are\nversion 0.x, so there are\n[no API or ABI stability guarantees](https://semver.org/#spec-item-4).\nStarting with 1.0 we will adhere to [SemVer](https://semver.org/).\n\nThe Python API is particularly unstable, and it is planned that the SWIGged\nAPI will be replaced by a pybind11 version with more Pythonic names and more\ncomplete functionality.\n\n## Requirements for End Users using Bazel\n\n## Build\n\nThis bazel build requires 7.0.0 – bzlmod default. Builds were tested using \nC++20 as set in .bazelrc. This setup relies on abseil-cpp, boringssl, and \ngoogletest from the bazel central repository as set in MODULE.bazel.\n\nTo build and test using bazel, from within s2geometry/src, run:\n\n`bazel test \"//:*\"`\n\nTo build the libary without testing, from within s2geometry/src, run:\n\n`bazel build //:s2`\n\n## Status\n\nAll tests enumerated in the BUILD.bazel file pass on x86 machines. On \nApple M1, s2loop_measures_test fails due to a 6% excess accumlated error. \nThis issue may require revision of boringssl or exactfloat.\n\n## Requirements for End Users using CMake\n\n*   [CMake](http://www.cmake.org/) >= 3.5\n*   A C++ compiler with C++14 support, such as [g++ >= 5](https://gcc.gnu.org/)\n*   [Abseil](https://github.com/abseil/abseil-cpp) >= LTS\n    [`20240722`](https://github.com/abseil/abseil-cpp/releases/tag/20240722.0)\n    (standard library extensions)\n*   [OpenSSL](https://github.com/openssl/openssl) (for its bignum library)\n*   [googletest testing framework >= 1.10](https://github.com/google/googletest)\n    (to build tests and example programs, optional)\n\nOn Ubuntu, all of these other than abseil can be installed via apt-get:\n\n```\nsudo apt-get install cmake googletest libssl-dev\n```\n\nabseil-cpp may need to be installed from source if an LTS release is not\npackaged for the platform.  See the use of `-DCMAKE_PREFIX_PATH` in the\n[build instructions below](#building).\n\nOn macOS, use [MacPorts](http://www.macports.org/) or\n[Homebrew](http://brew.sh/).  For MacPorts:\n\n```\nsudo port install cmake abseil gtest openssl\n```\n\nthen use\n\n```\ncmake -DGOOGLETEST_ROOT=/opt/local/src -DCMAKE_PREFIX_PATH=/opt/local ..\n```\n\nin the build instructions below.\n\nThorough testing has only been done on Ubuntu 14.04.3 and macOS 10.13.\n\n## Build and Install\n\nYou may either download the source as a ZIP archive, or [clone the git\nrepository](https://help.github.com/articles/cloning-a-repository/).\n\n### Via ZIP archive\n\nDownload [ZIP file](https://github.com/google/s2geometry/archive/master.zip)\n\n```\ncd [parent of directory where you want to put S2]\nunzip [path to ZIP file]/s2geometry-master.zip\ncd s2geometry-master\n```\n\n### Via `git clone`\n\n```\ncd [parent of directory where you want to put S2]\ngit clone https://github.com/google/s2geometry.git\ncd s2geometry\n```\n\n### Building\n\nFirst, [install Abseil](https://github.com/abseil/abseil-cpp/blob/master/CMake/README.md#traditional-cmake-set-up).\nIt must be configured with `-DCMAKE_POSITION_INDEPENDENT_CODE=ON`.\ns2geometry must be configured to use the same C++ version that\nabseil uses.  The easiest way to achieve this is to pass\n`-DCMAKE_CXX_STANDARD=14` (or `-DCMAKE_CXX_STANDARD=17`) to `cmake`\nwhen compiling both abseil and s2geometry.\n\nFrom the appropriate directory depending on how you got the source:\n\n```\nmkdir build\ncd build\n# You can omit -DGOOGLETEST_ROOT to skip tests; see above for macOS.\n# Use the same CMAKE_CXX_STANDARD value that was used with absl.\ncmake -DGOOGLETEST_ROOT=/usr/src/googletest -DCMAKE_PREFIX_PATH=/path/to/absl/install -DCMAKE_CXX_STANDARD=14 ..\nmake -j $(nproc)\nmake test ARGS=\"-j$(nproc)\"  # If GOOGLETEST_ROOT specified above.\nsudo make install\n```\n\nOn macOS, `sysctl -n hw.logicalcpu` is the equivalent of `nproc`.\n\nDisable building of shared libraries with `-DBUILD_SHARED_LIBS=OFF`.\n\nEnable the python interface with `-DWITH_PYTHON=ON`.\n\nIf OpenSSL is installed in a non-standard location set `OPENSSL_ROOT_DIR`\nbefore running configure, for example on macOS:\n```\nOPENSSL_ROOT_DIR=/opt/homebrew/Cellar/openssl@3/3.1.0 cmake -DCMAKE_PREFIX_PATH=/opt/homebrew -DCMAKE_CXX_STANDARD=17\n```\n\n## Installing\n\nFrom `build` subdirectory:\n\n```\nmake install\n```\n\nPrefix it with `sudo` if needed:\n\n```\nsudo make install\n```\n\n_NOTE_: There is not `uninstall` target but `install_manifest.txt` may be helpful.\n\nAll files will be installed at location specified in `CMAKE_INSTALL_PREFIX` variable.\n\nSeveral suffix variables used for some file groups:\n\nVariable | Default | Description\n-------- | ------- | -----------\n`CMAKE_INSTALL_INCLUDEDIR` | `include` | For header files\n`CMAKE_INSTALL_BINDIR`     | `bin`     | For executables and `*.dll` files on `DLL`-based platforms\n`CMAKE_INSTALL_LIBDIR`     | `lib`     | For library files (`*.so`, `*.a`, `*.lib` etc)\n\nIf needed set this variables on command line as `cmake` arguments with `-D` prefix or edit from `build` subdirectory:\n\n```\nmake edit_cache\n```\n\nFor more info read: [The CMake Cache](https://cmake.org/cmake/help/latest/guide/user-interaction/index.html#the-cmake-cache).\n\n## Python\n\nIf you want the Python interface, you need to run cmake using\n`-DWITH_PYTHON=ON`. You will also need to install the following dependencies:\n\n* [SWIG 4](https://github.com/swig/swig) (for Python support, optional)\n* python3-dev (for Python support, optional)\n\nwhich can be installed via\n\n```\nsudo apt-get install swig python3-dev\n```\n\nor on macOS:\n\n```\nsudo port install swig\n```\nVersion 4.0 is required, but it should be easy to make it work 3.0 or probably\neven 2.0.\n\nPython 3 is required.\n\n### Creating wheels\nFirst, make a virtual environment and install `build` into it:\n```\npython3 -m venv venv\nsource venv/bin/activate\npip install build\n```\n\nThen build the wheel:\n```\npython -m build\n```\n\nThe resulting wheel will be in the `dist` directory.\n\n> If OpenSSL is in a non-standard location make sure to set `OPENSSL_ROOT_DIR`; \n> see above for more information.\n\n## Other S2 implementations\n\n* [Go](https://github.com/golang/geo) (Approximately 40% complete.)\n* [Java](https://github.com/google/s2-geometry-library-java)\n* [Kotlin](https://github.com/Enovea/s2-geometry-kotlin) (Complete except binary serialization)\n\n## Disclaimer\n\nThis is not an official Google product.\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.388671875,
          "content": "[project]\nname = \"s2geometry\"\ndescription = \"Computational geometry and spatial indexing on the sphere\"\nauthors = [\n    { name = \"Dan Larkin-York\", email = \"dan@arangodb.com\" },\n    { name = \"Eric Veach\", email = \"ericv@google.com\" },\n    { name = \"Jesse Rosenstock\", email = \"jmr@google.com\" },\n    { name = \"Julien Basch\", email = \"julienbasch@google.com\" },\n    { name = \"Mike Playle\", email = \"mike@mythik.co.uk\" },\n    { name = \"Phil Elson\", email = \"pelson.pub@gmail.com\" },\n    { name = \"Robert Coup\", email = \"robert.coup@koordinates.com\" },\n    { name = \"Tiago Brito\", email = \"tiago.brito@90poe.io\" },\n    { name = \"Zachary Burnett\", email = \"zachary.r.burnett@gmail.com\" },\n]\nrequires-python = \">=3.7\"\nclassifiers = [\n    \"Programming Language :: Python :: 3\",\n    \"Operating System :: POSIX\",\n    \"License :: OSI Approved :: Apache Software License\",\n]\ndynamic = [\n    \"version\",\n]\n\n[project.license]\nfile = \"LICENSE\"\ncontent-type = \"text/plain\"\n\n[project.urls]\nSource = \"https://github.com/google/s2geometry\"\n\n[project.optional-dependencies]\ntest = [\n    \"pytest\",\n]\n\n[build-system]\nrequires = [\n    \"wheel\",\n    \"setuptools\",\n    \"setuptools_scm[toml]\",\n    \"cmake_build_extension\",\n]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools]\nzip-safe = false\ninclude-package-data = false\n\n[tool.setuptools.packages.find]\nwhere = [\n    \"src\",\n]\nnamespaces = false\n\n[tool.setuptools.package-dir]\n\"\" = \"src\"\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.345703125,
          "content": "import sys\nfrom pathlib import Path\n\nimport cmake_build_extension\nimport setuptools\n\n\nsetuptools.setup(\n    ext_modules=[\n        cmake_build_extension.CMakeExtension(\n            # This could be anything you like, it is used to create build folders\n            name=\"SwigBindings\",\n            # Name of the resulting package name (import s2geometry)\n            install_prefix=\"s2geometry\",\n            # Selects the folder where the main CMakeLists.txt is stored\n            # (it could be a subfolder)\n            source_dir=str(Path(__file__).parent.absolute()),\n            cmake_configure_options=[\n                                        # This option points CMake to the right Python interpreter, and helps\n                                        # the logic of FindPython3.cmake to find the active version\n                                        f\"-DPython3_ROOT_DIR={Path(sys.prefix)}\",\n                                        '-DCALL_FROM_SETUP_PY:BOOL=ON',\n                                        '-DBUILD_SHARED_LIBS:BOOL=OFF',\n                                        '-DCMAKE_POSITION_INDEPENDENT_CODE=ON',\n                                        '-DWITH_PYTHON=ON'\n                                    ]\n        )\n    ],\n    cmdclass=dict(\n        # Enable the CMakeExtension entries defined above\n        build_ext=cmake_build_extension.BuildExtension,\n    ),\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}