{
  "metadata": {
    "timestamp": 1736565914792,
    "page": 881,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aws/aws-sdk-cpp",
      "stars": 2000,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 5.9560546875,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: None\nAlignConsecutiveMacros: None\nAlignConsecutiveAssignments: None\nAlignConsecutiveBitFields: None\nAlignConsecutiveDeclarations: None\nAlignEscapedNewlines: Left\nAlignOperands:   Align\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortEnumsOnASingleLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: WithoutElse\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: Yes\nAttributeMacros:\n  - __capability\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: Never\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeConceptDeclarations: true\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     140\nCommentPragmas:  '^ IWYU pragma:'\nQualifierAlignment: Leave\nCompactNamespaces: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDeriveLineEnding: true\nDerivePointerAlignment: true\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: false\nPackConstructorInitializers: NextLine\nBasedOnStyle:    ''\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nAllowAllConstructorInitializersOnNextLine: true\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIfMacros:\n  - KJ_IF_MAYBE\nIncludeBlocks:   Regroup\nIncludeCategories:\n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^<.*'\n    Priority:        2\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '.*'\n    Priority:        3\n    SortPriority:    0\n    CaseSensitive:   false\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIncludeIsMainSourceRegex: ''\nIndentAccessModifiers: false\nIndentCaseLabels: true\nIndentCaseBlocks: false\nIndentGotoLabels: true\nIndentPPDirectives: None\nIndentExternBlock: AfterExternBlock\nIndentRequires:  false\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nInsertTrailingCommas: None\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nLambdaBodyIndentation: Signature\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Never\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPenaltyIndentedWhitespace: 0\nPointerAlignment: Left\nPPIndentWidth:   -1\nRawStringFormats:\n  - Language:        Cpp\n    Delimiters:\n      - cc\n      - CC\n      - cpp\n      - Cpp\n      - CPP\n      - 'c++'\n      - 'C++'\n    CanonicalDelimiter: ''\n    BasedOnStyle:    google\n  - Language:        TextProto\n    Delimiters:\n      - pb\n      - PB\n      - proto\n      - PROTO\n    EnclosingFunctions:\n      - EqualsProto\n      - EquivToProto\n      - PARSE_PARTIAL_TEXT_PROTO\n      - PARSE_TEST_PROTO\n      - PARSE_TEXT_PROTO\n      - ParseTextOrDie\n      - ParseTextProtoOrDie\n      - ParseTestProto\n      - ParsePartialTestProto\n    CanonicalDelimiter: pb\n    BasedOnStyle:    google\nReferenceAlignment: Pointer\nReflowComments:  true\nRemoveBracesLLVM: false\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSortIncludes:    CaseSensitive\nSortJavaStaticImport: Before\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: true\n  AfterFunctionDefinitionName: false\n  AfterFunctionDeclarationName: false\n  AfterIfMacros:   true\n  AfterOverloadedOperator: false\n  BeforeNonEmptyParentheses: false\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  Never\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInLineCommentPrefix:\n  Minimum:         1\n  Maximum:         -1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSpaceBeforeSquareBrackets: false\nBitFieldColonSpacing: Both\nStandard:        Auto\nStatementAttributeLikeMacros:\n  - Q_EMIT\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth:        8\nUseCRLF:         false\nUseTab:          Never\nWhitespaceSensitiveMacros:\n  - STRINGIZE\n  - PP_STRINGIZE\n  - BOOST_PP_STRINGIZE\n  - NS_SWIFT_NAME\n  - CF_SWIFT_NAME\n...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.494140625,
          "content": "---\nChecks:          'clang-diagnostic-*,clang-analyzer-*,performance-*,readability-*,modernize-*,bugprone-*,misc-*'\nWarningsAsErrors: 'performance-*'\nHeaderFilterRegex: ''\nFormatStyle: 'none'\nCheckOptions:\n  - key:             modernize-pass-by-value.ValuesOnly\n    value:           '1'\n  - key:             readability-implicit-bool-conversion.AllowPointerConditions\n    value:           '1'\n  - key:             readability-implicit-bool-conversion.AllowIntegerConditions\n    value:           '1'\n\n\n...\n"
        },
        {
          "name": ".cspell.json",
          "type": "blob",
          "size": 4.76171875,
          "content": "{\n  \"version\": \"0.1\",\n  \"language\": \"en-US,en-GB\",\n  \"words\": [\n    // C++ STL\n    \"smatch\",\n    // General\n    \"SDK's\",\n    \"sdks\",\n    \"awssdk\",\n    \"executables\",\n    \"debuggable\",\n    \"sdkutils\",\n    \"presigning\",\n    \"Presign\",\n    \"queryxml\",\n    \"retryable\",\n    \"payloadless\",\n    \"Subclassing\",\n    \"BASECLASS\",\n    \"Millis\",\n    \"hashcode\",\n    \"LOGSTREAM\",\n    \"timepoint\",\n    \"Bytebuf\",\n    \"backbuf\",\n    \"bitslen\",\n    \"CLSCTX\",\n    \"openrequest\",\n    \"logtag\",\n    \"stdext\",\n    \"CPPRTTI\",\n    \"backbuffer\",\n    \"Bodyless\",\n    \"HTTPGET\",\n    \"ratelimiter\",\n    \"Ratelimiter\",\n    \"STDMETHODCALLTYPE\",\n    \"CANTSAVE\",\n    \"OLECHAR\",\n    \"DISPID\",\n    \"UNKNOWNNAME\",\n    \"DISPPARAMS\",\n    \"XMLHTTP\",\n    \"comptr\",\n    \"Metadataservice\",\n    \"Streamfn\",\n    \"HWAVEOUT\",\n    \"matdesc\",\n    \"Presigner\",\n    \"xindex\",\n    \"errortype\",\n    \"waveout\",\n    \"WAVEOUTCAPSA\",\n    \"ALLOWSYNC\",\n    \"WAVEHDR\",\n    \"MMSYSERR\",\n    \"WAVEFORMATEX\",\n    \"Unprepare\",\n    \"DDISABLE\",\n    \"SENDREQUEST\",\n    \"threadpool\",\n    \"stdlib\",\n    \"ALLOC\",\n    \"ISOE\",\n    \"isoe\",\n    // AWS general\n    \"Arns\",\n    \"AMZN\",\n    \"amzn\",\n    \"Paulo\",\n    \"Ningxia\",\n    \"ISOB\",\n    \"isob\",\n    \"AWSXML\",\n    \"IMDSV\",\n    \"AWSSTL\",\n    // AWS Signature\n    \"SIGV\",\n    \"AUTHV\",\n    // CMake\n    \"cmake\",\n    \"DCMAKE\",\n    \"AUTORUN\",\n    \"DEPS\",\n    \"STREQUAL\",\n    \"RPATH\",\n    \"STREQUAL\",\n    \"DTARGET\",\n    \"TOOLCHAIN\",\n    \"DANDROID\",\n    \"DBUILD\",\n    \"DDEBUG\",\n    \"DGIT\",\n    \"DLEGACY\",\n    \"SYSROOT\",\n    \"DSTATIC\",\n    \"BINDIR\",\n    \"LIBDIR\",\n    \"INCLUDEDIR\",\n    \"DHAS\",\n    \"PythonInterp\",\n    \"DWAVE\",\n    \"Winmm\",\n    \"DPULSE\",\n    \"pulseaudio\",\n    \"MSVC\",\n    \"NOTFOUND\",\n    \"libpulse\",\n    \"COREAUDIO\",\n    \"devel\",\n    \"AUDIOTOOLBOX\",\n    \"DCORE\",\n    \"CONCAT\",\n    \"DNON\",\n    \"FULLPATCH\",\n    \"setopt\",\n    \"CURLOPT\",\n    \"SSLCERT\",\n    \"CROSSCOMPILING\",\n    \"nullptr\",\n    \"DWORD\",\n    \"lpsz\",\n    \"commoncrypto\",\n    \"COMMONCRYPTO\",\n    \"endforeach\",\n    \"pkgconfig\",\n    \"MGMT\",\n    \"DENABLED\",\n    \"DENFORCE\",\n    // Compiler and linker\n    \"Wpedantic\",\n    \"Wextra\",\n    \"Werror\",\n    \"xldscope\",\n    \"Wtype\",\n    \"Wunused\",\n    \"RTTI\",\n    \"ffunction\",\n    \"fdata\",\n    \"fsanitize\",\n    \"pathconf\",\n    \"unistd\",\n    \"umask\",\n    \"GNUCXX\",\n    \"libasan\",\n    \"SUNPRO\",\n    \"gnustl\",\n    \"libgnustl\",\n    \"Wmissing\",\n    // Android NDK\n    \"JNIEXPORT\",\n    \"jint\",\n    \"JNICALL\",\n    \"jobject\",\n    \"jclass\",\n    \"jmethod\",\n    \"Ljava\",\n    \"Logcat\",\n    // XML parser\n    \"QNXNTO\",\n    \"TIXMLASSERT\",\n    \"TIXML\",\n    \"Untracked\",\n    \"TINYXML\",\n    \"tinyxml\",\n    \"xmltest\",\n    \"gccxmltest\",\n    \"debugbreak\",\n    \"grinliz\",\n    \"endverbatim\",\n    \"xmlcstr\",\n    \"callfopen\",\n    \"overengineered\",\n    \"callfopen\",\n    // Json parser\n    \"Jsonize\",\n    \"CJSON\",\n    \"cjson\",\n    \"valuestring\",\n    \"valueint\",\n    \"valuedouble\",\n    \"prebuffer\",\n    \"subentities\",\n    \"newitem\",\n    \"printbuffer\",\n    \"newbuffer\",\n    \"cinput\",\n    \"Predeclare\",\n    \"newchild\",\n    \"crosswire\",\n    \"oneline\",\n    // IXMLHTTPRequest2\n    \"IXML\",\n    \"IXMLHTTP\",\n    \"HRESULT\",\n    \"REFIID\",\n    \"EXCEPINFO\",\n    \"CLSID\",\n    \"INPROC\",\n    \"ONDATA\",\n    // MSVC\n    \"msvc\",\n    \"MSFT\",\n    \"LPDWORD\",\n    \"DATAW\",\n    \"mkgmtime\",\n    \"vscprintf\",\n    \"wtoi\",\n    \"msxml\",\n    \"runtimeobject\",\n    \"winhttp\",\n    \"Wininet\",\n    \"HINTERNET\",\n    \"ADDREQ\",\n    \"LPCSTR\",\n    \"MAKELANGID\",\n    \"SUBLANG\",\n    \"WSADATA\",\n    \"Initate\",\n    \"ioctlsocket\",\n    \"dupenv\",\n    \"USERPROFILE\",\n    \"subblock\",\n    \"LANGANDCODEPAGE\",\n    \"CPPUNWIND\",\n    \"keepalivetime\",\n    \"keepaliveinterval\",\n    // Crypto\n    \"decryptor\",\n    \"encryptor\",\n    \"NTSTATUS\",\n    \"PBYTE\",\n    \"PUCHAR\",\n    \"noconf\",\n    \"HAMC\",\n    \"PBCRYPT\",\n    \"BCRYPT\",\n    \"libcrypto\",\n    \"AWSLC\",\n    \"CBCCTS\",\n    \"tweaklen\",\n    \"taglen\",\n    \"blockcipher\",\n    \"AESGCM\",\n    \"compated\",\n    \"outdata\",\n    \"Decrypto\",\n    \"GCMAAD\",\n    \"CEKGCM\",\n    \"HMACRAII\",\n    \"OSSL\",\n    \"ossl\",\n    \"ccrng\",\n    \"KEYWRAP\",\n    \"NVME\",\n    // EC2\n    \"IMDS\",\n    // Eventstream\n    \"EVENTSTREAM\",\n    \"eventstream\",\n    \"signedmsg\",\n    // Cognito\n    \"cognito\",\n    // SSO\n    \"sso\",\n    \"SSO\",\n    \"oidc\",\n    \"OIDC\",\n    // License and Notice\n    \"SPDX\",\n    \"grinninglizard\",\n    \"Thomason\",\n    \"Lepilleur\",\n    \"Sidebotham\",\n    \"Rublee\",\n    \"Andrey\",\n    \"Kamaev\",\n    // Dependencies\n    \"openssl\",\n    \"libcurl\",\n    // Aws common runtime libraries\n    \"mqtt\",\n    // Aws common runtime API\n    \"Mtls\",\n    // Opentelemetry\n    \"Otel\",\n    \"opentelemetry\",\n    \"nostd\",\n    \"OPTEL\",\n    \"tparam\",\n    \"OTLP\"\n  ],\n  \"ignoreWords\": [\n    // variables defined in ConcurrentStreamBuf\n    \"pbegin\",\n    \"gbegin\",\n    // functions defined in UUID\n    \"hexify\",\n    // enums defined in HttpResponse\n    \"UNPROC\",\n    // in DefaultRateLimiter\n    \"renormalize\",\n    // parameters defined in tinyxml2\n    \"uval\"\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0283203125,
          "content": "# IDE Artifacts\n.metadata\n.build\n.idea\n*.d\ncompile_commands.json\nDebug\nRelease\n*~\n*#\n*.iml\ntags\n.vscode\n\n# CI Artifacts\nBuildSpec.json\nBuildSpec.zip\n\n#vim swap file\n*.swp\n\n#compiled python files\n*.pyc\n\n#Vagrant stuff\nVagrantfile\n.vagrant\n\n#Mac stuff\n.DS_Store\n\n#doxygen\ndoxygen/html/\ndoxygen/latex/\n\n\n#cmake artifacts\ndependencies\n_build\nbuild\n_build_*\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Android Junk\nAndroidTestOutput.txt\ncurl\nexternal\nopenssl\nzlib\ncredentials\ntoolchains/android/\n\n# codegen\ntools/code-generation/generator/target/\ntools/code-generation/smithy/codegen/gradle/\ntools/code-generation/smithy/codegen/.gradle/\n\n#config output\naws-cpp-sdk-core/include/aws/core/SDKConfig.h\nsrc/aws-cpp-sdk-core/include/aws/core/SDKConfig.h\n\n#nuget\n*.nupkg\n\n#temp codegen files\ntools/code-generation/smithy/codegen/cpp-smoke-tests/codegen_output/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1162109375,
          "content": "[submodule \"aws-common-runtime/aws-crt-cpp\"]\n\tpath = crt/aws-crt-cpp\n\turl = https://github.com/awslabs/aws-crt-cpp.git\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.025390625,
          "content": "# Breaking changes in AWS SDK for C++\n## [1.11.0](https://github.com/aws/aws-sdk-cpp/tree/1.11.0) (2022-01-24)\nThis release introduces a refactored Asynchronous API and restructures the File Hierarchy of the project source code. Additionally, the minimum required version of cmake was raised to 3.13.\n* Asynchronous API refactoring is a partially breaking, backward incompatible change: all client methods such as OperationAsync and OperationCallable are no longer virtual methods but instead are conditionally compiled template methods. Having these methods as templates reduces the total binary size of the SDK by 40%. Individual client binary size may vary. In addition, it reduces build time of the SDK by up to 50% (release, unity build, SDK clients only).\n  A code change may be required if your code inherits SDK’s Client classes and overrides the virtual async methods. Regular synchronous/blocking call methods are still available for override.\n  Code changes are not required and SDK API are backward compatible if virtual async methods were not overwritten before.\n* Scripts and IDE project files not using the provided cmake build infrastructure must be reviewed and updated to reflect source tree changes.\n\n## [1.10.0](https://github.com/aws/aws-sdk-cpp/tree/1.10.0) (2021-11-07)\nThis release introduces a new endpoint resolution based on client configuration and request input parameters. Endpoint Discovery and ARN Resource APIs are deprecated.\n\n## [1.9.0](https://github.com/aws/aws-sdk-cpp/tree/1.9.0) (2021-04-19)\nThis release introduces a new Amazon S3 client, providing high throughput for Amazon S3 GET and PUT operations. The all new S3 Client is implemented on the top of the AWS Common Runtime (CRT) libraries, and is aptly named the \"S3 CRT client\". Lastly, there are also configuration updates related to Endpoint Discovery.\n\n## [1.8.0](https://github.com/aws/aws-sdk-cpp/tree/1.8.0) (2020-06-30)\nCheck our [Wiki](https://github.com/aws/aws-sdk-cpp/wiki/What’s-New-in-AWS-SDK-for-CPP-Version-1.8) for a comprehensive list of the featuers introduced on this version.\n\n## [1.7.0](https://github.com/aws/aws-sdk-cpp/tree/1.7.0) (2018-11-15)\n\n### aws-cpp-sdk-core\nAdd new dependencies: [aws-c-common](https://github.com/awslabs/aws-c-common), [aws-checksums](https://github.com/awslabs/aws-checksums) and [aws-c-event-stream](https://github.com/awslabs/aws-c-event-stream) to support S3 select streaming API. The API is implemented in C99 via libraries that are developed by AWS as well.\n\nThese libraries are downloaded and built as part of the CMake configure step. That can be disabled via the new switch `-DBUILD_DEPS=OFF`. The switch is set to ON by default.\n\n### aws-cpp-sdk-s3\nAdd support for S3 `SelectContentObject` API.\n\n## [1.6.0](https://github.com/aws/aws-sdk-cpp/tree/1.6.0) (2018-08-28)\n\n### aws-cpp-sdk-core\n\nCode for future SDK instrumentation and telemetry\n\n## [1.5.0](https://github.com/aws/aws-sdk-cpp/tree/1.5.0) (2018-07-25)\n\n### aws-cpp-sdk-core\n\n`cJSON` is now the underlying JSON parser, replacing JsonCpp.\n\n`JsonValue` is now strictly a DOM manipulation class. All reads and serialization must be done through the new\n`JsonView` class. The `JsonView` is lightweight and follows the `string_view` concept from C++17 such that, it does not\nextend the lifetime of its underlying DOM (the `JsonValue`).\n\n## [1.4.0](https://github.com/aws/aws-sdk-cpp/tree/1.4.0) (2018-02-19)\n\n### aws-cpp-sdk-s3\n\nFixed bug in Aws::S3::Model::CopyObjectResult, added CopyObjectResultDetails as a member of CopyObjectResult.\n\nWe were missing a member of CopyObjectResult because of name conflict and related files are overwritten when we generate the source code.\n\nWe renamed this member to CopyObjectResultDetails.\n\n### aws-cpp-sdk-config\n\nRemoved unused enum values.\n\nFrom the service release notes:\n> AWS Config updated the ConfigurationItemStatus enum values. The values prior to this update did not represent appropriate values returned by GetResourceConfigHistory. You must update your code to enumerate the new enum values so this is a breaking change. To map old properties to new properties, use the following descriptions: New discovered resource - Old property: Discovered, New property: ResourceDiscovered. Updated resource - Old property: Ok, New property: OK. Deleted resource - Old property: Deleted, New property: ResourceDeleted or ResourceDeletedNotRecorded. Not-recorded resource - Old property: N/A, New property: ResourceNotRecorded or ResourceDeletedNotRecorded.\n\n\n## [1.3.0](https://github.com/aws/aws-sdk-cpp/tree/1.3.0) (2017-11-09)\n\n### aws-cpp-sdk-s3\n\nChanged the constructor of AWSAuthV4Signer to use PayloadSigningPolicy instead of a boolean.\n\n\n## [1.2.0](https://github.com/aws/aws-sdk-cpp/tree/1.2.0) (2017-09-24)\n\n### aws-cpp-sdk-transfer\n\nChanged ownership of thread executor in TransferManager.\n\n\n## [1.1.1](https://github.com/aws/aws-sdk-cpp/tree/1.1.1) (2017-06-22)\n\n### aws-cpp-sdk-transfer\n\nIntroduced a builder function to instantiate TransferManager\nas a shared_ptr. That ensures that other threads can increase\nTransferManager's lifetime until all the callbacks have finished.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 21.1435546875,
          "content": "# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: Apache-2.0.\n#\n\ncmake_minimum_required(VERSION 3.13 FATAL_ERROR)\n\noption(LEGACY_BUILD \"If enabled, the SDK will use 1.11.0 version of CMake files to build\" ON)\nif (LEGACY_BUILD)\n    message(WARNING \"In 1.11 releases, we are releasing experimental alternative building mode.\"\n            \"By setting -DLEGACY_BUILD=OFF you can test our advances in modern CMake building and \"\n            \"provide early feedback. \"\n            \"The legacy support is set by default in 1.11, when you complete build updating scripts please \"\n            \"update the build flags as mentioned in README.md and set -DLEGACY_BUILD=OFF. \"\n            \"The legacy support will be removed at 1.12.0 release.\")\n\n    if (POLICY CMP0077)\n        cmake_policy(SET CMP0077 OLD) # CMP0077: option() honors normal variables. Introduced in 3.13\n    endif ()\n\n    get_filename_component(AWS_NATIVE_SDK_ROOT \"${CMAKE_CURRENT_SOURCE_DIR}\" ABSOLUTE)\n\n    # Cmake invocation variables:\n    #   BUILD_ONLY - only build project identified by this variable, a semi-colon delimited list, if this is set we will build only the projects listed. Core will always be built as will its unit tests.\n    #                    Also if a high level client is specified then we will build its dependencies as well. If a project has tests, the tests will be built.\n    #   ADD_CUSTOM_CLIENTS - semi-colon delimited list of format serviceName=<yourServiceName>,version=<theVersionNumber>;serviceName2=<yourOtherServiceName>,version=<versionNumber2>\n    #                          to use these arguments, you should add the api definition .normal.json file for your service to the api-description folder in the generator.\n    #   NDK_DIR - directory where the android NDK is installed; if not set, the location will be read from the ANDROID_NDK environment variable\n    #   CUSTOM_PLATFORM_DIR - directory where custom platform scripts, modules, and source resides\n    #   AWS_SDK_ADDITIONAL_LIBRARIES - names of additional libraries to link into aws-cpp-sdk-core in order to support unusual/unanticipated linking setups (static curl against static-something-other-than-openssl for example)\n\n    option(ENABLE_UNITY_BUILD \"If enabled, the SDK will be built using a single unified .cpp file for each service library.  Reduces the size of static library binaries on Windows and Linux\" ON)\n    option(MINIMIZE_SIZE \"If enabled, the SDK will be built via a unity aggregation process that results in smaller static libraries; additionally, release binaries will favor size optimizations over speed\" OFF)\n    option(BUILD_SHARED_LIBS \"If enabled, all aws sdk libraries will be build as shared objects; otherwise all Aws libraries will be built as static objects\" ON)\n    option(FORCE_SHARED_CRT \"If enabled, will unconditionally link the standard libraries in dynamically, otherwise the standard library will be linked in based on the BUILD_SHARED_LIBS setting\" ON)\n    option(SIMPLE_INSTALL \"If enabled, removes all the additional indirection (platform/cpu/config) in the bin and lib directories on the install step\" ON)\n    option(USE_CRT_HTTP_CLIENT \"If enabled, the common runtime HTTP client will be used, and the legacy systems such as WinHttp and libcurl will not be built or included\" OFF)\n    option(NO_HTTP_CLIENT \"If enabled, no platform-default http client will be included in the library.  For the library to be used you will need to provide your own platform-specific implementation\" OFF)\n    option(NO_ENCRYPTION \"If enabled, no platform-default encryption will be included in the library.  For the library to be used you will need to provide your own platform-specific implementations\" OFF)\n    option(USE_IXML_HTTP_REQUEST_2 \"If enabled on windows, the com object IXmlHttpRequest2 will be used for the http stack\" OFF)\n    option(ENABLE_RTTI \"Flag to enable/disable rtti within the library\" ON)\n    option(ENABLE_TESTING \"Flag to enable/disable building unit and integration tests\" ON)\n    option(AUTORUN_UNIT_TESTS \"Flag to enable/disable automatically run unit tests after building\" ON)\n    option(ANDROID_BUILD_CURL \"When building for Android, should curl be built as well\" ON)\n    option(ANDROID_BUILD_OPENSSL \"When building for Android, should Openssl be built as well\" ON)\n    option(ANDROID_BUILD_ZLIB \"When building for Android, should Zlib be built as well\" ON)\n    option(FORCE_CURL \"Forces usage of the Curl client rather than the default OS-specific api\" OFF)\n    option(ENABLE_ADDRESS_SANITIZER \"Flags to enable/disable Address Sanitizer for gcc or clang\" OFF)\n    option(BYPASS_DEFAULT_PROXY \"Bypass the machine's default proxy settings when using IXmlHttpRequest2\" ON)\n    option(BUILD_DEPS \"Build third-party dependencies\" ON)\n    option(USE_OPENSSL \"Set this if you want to use your system's OpenSSL 1.0.2/1.1.1 compatible libcrypto\" ON)\n    option(ENABLE_CURL_LOGGING \"If enabled, Curl's internal log will be piped to SDK's logger\" ON)\n    option(ENABLE_HTTP_CLIENT_TESTING \"If enabled, corresponding http client test suites will be built and run\" OFF)\n    option(CUSTOM_MEMORY_MANAGEMENT \"If set to ON, generates the sdk project files with custom memory management enabled, otherwise disables it\" OFF)\n    option(REGENERATE_CLIENTS \"If set to ON, all clients being built on this run will be regenerated from the api definitions, this option involves some setup of python, java 8+, and maven\" OFF)\n    option(ENABLE_VIRTUAL_OPERATIONS \"This option usually works with REGENERATE_CLIENTS. \\\n                                If enabled when doing code generation, operation related functions in service clients will be marked as virtual. \\\n                                If disabled when doing code generation, virtual will not be added to operation functions and service client class will be marked as final. \\\n                                If disabled, SDK will add compiler flags '-ffunction-sections -fdata-sections' for gcc and clang when compiling. \\\n                                You can utilize this feature to work with your linker to reduce binary size of your application on Unix platforms when doing static linking in Release mode.\" ON)\n    option(REGENERATE_DEFAULTS \"If set to ON, defaults mode configuration will be regenerated from the JSON definitions, this option involves some setup of python, java 8+, and maven\" OFF)\n    option(ENABLE_ZLIB_REQUEST_COMPRESSION \"For services that support it, request content will be compressed. On by default if dependency available\" ON)\n    option(DISABLE_INTERNAL_IMDSV1_CALLS \"Disables IMDSv1 internal client calls\" OFF)\n    option(BUILD_BENCHMARKS \"Enables building the benchmark executable\" OFF)\n    option(BUILD_OPTEL \"Enables building the open telemetry implementation of tracing\" OFF)\n    option(AWS_SDK_WARNINGS_ARE_ERRORS \"Compiler warning is treated as an error. Try turning this off when observing errors on a new or uncommon compiler\" ON)\n    option(BUILD_OPTEL_OTLP_BENCHMARKS \"Enables building the benchmark tests with open telemetry OTLP clients\" OFF)\n    option(USE_TLS_V1_2 \"Set http client to enforce TLS 1.2\" ON)\n    option(USE_TLS_V1_3 \"Set http client to enforce TLS 1.3\" OFF)\n    option(ENABLE_SMOKE_TESTS \"Enable smoke tests\" OFF)\n    option(DISABLE_DNS_REQUIRED_TESTS \"Disable unit tests that require DNS lookup to succeed, useful when using a http client that does not perform DNS lookup\" OFF)\n\n\n    set(AWS_USER_AGENT_CUSTOMIZATION \"\" CACHE STRING \"User agent extension\")\n    set(AWS_TEST_REGION \"US_EAST_1\" CACHE STRING \"Region to target integration tests against\")\n    set(AWS_AUTORUN_LD_LIBRARY_PATH CACHE STRING \"Path to append into LD_LIBRARY_PATH for unit tests autorun by cmake. Set this if custom runtime libs are required for overridden dependencies.\")\n    set(BUILD_ONLY \"\" CACHE STRING \"A semi-colon delimited list of the projects to build\")\n    set(CPP_STANDARD \"11\" CACHE STRING \"Flag to upgrade the C++ standard used. The default is 11. The minimum is 11.\")\n\n    get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n    if (NOT ${is_multi_config})\n        set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Release build by default.\")\n    endif ()\n    if (DISABLE_INTERNAL_IMDSV1_CALLS)\n        add_definitions(-DDISABLE_IMDSV1)\n    endif ()\n    if (USE_TLS_V1_2)\n        add_definitions(-DENFORCE_TLS_V1_2)\n    endif ()\n    if (USE_TLS_V1_3)\n        add_definitions(-DENFORCE_TLS_V1_3)\n    endif ()\n\n    if (DISABLE_DNS_REQUIRED_TESTS)\n        add_definitions(-DDISABLE_DNS_REQUIRED_TESTS)\n    endif ()\n\n    #From https://stackoverflow.com/questions/18968979/how-to-get-colorized-output-with-cmake\n    if (NOT WIN32)\n        string(ASCII 27 Esc)\n        set(ColourReset \"${Esc}[m\")\n        set(ColourBold \"${Esc}[1m\")\n        set(Red \"${Esc}[31m\")\n        set(Green \"${Esc}[32m\")\n        set(Yellow \"${Esc}[33m\")\n        set(Blue \"${Esc}[34m\")\n        set(Magenta \"${Esc}[35m\")\n        set(Cyan \"${Esc}[36m\")\n        set(White \"${Esc}[37m\")\n        set(BoldRed \"${Esc}[1;31m\")\n        set(BoldGreen \"${Esc}[1;32m\")\n        set(BoldYellow \"${Esc}[1;33m\")\n        set(BoldBlue \"${Esc}[1;34m\")\n        set(BoldMagenta \"${Esc}[1;35m\")\n        set(BoldCyan \"${Esc}[1;36m\")\n        set(BoldWhite \"${Esc}[1;37m\")\n    endif ()\n\n    # backwards compatibility with old command line params\n    if (\"${STATIC_LINKING}\" STREQUAL \"1\")\n        set(BUILD_SHARED_LIBS OFF)\n    endif ()\n\n    if (MINIMIZE_SIZE)\n        message(STATUS \"MINIMIZE_SIZE enabled\")\n        set(ENABLE_UNITY_BUILD ON) # MINIMIZE_SIZE always implies UNITY_BUILD\n    endif ()\n\n    set(PYTHON_CMD \"python\")\n\n    # CMAKE_MODULE_PATH is a CMAKE variable. It contains a list of paths\n    # which could be used to search CMAKE modules by \"include()\" or \"find_package()\", but the default value is empty.\n    # Add ${CMAKE_INSTALL_LIBDIR}/cmake and ${CMAKE_PREFIX_PATH}/lib/cmake to search list\n    list(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/cmake\")\n    set(AWS_MODULE_DIR \"/${CMAKE_INSTALL_LIBDIR}/cmake\")\n    string(REPLACE \";\" \"${AWS_MODULE_DIR};\" AWS_MODULE_PATH \"${CMAKE_PREFIX_PATH}${AWS_MODULE_DIR}\")\n    list(APPEND CMAKE_MODULE_PATH ${AWS_MODULE_PATH})\n\n    # include() will \"load and run\" cmake script\n    include(resolve_platform)\n    include(CMakePackageConfigHelpers)\n\n    if (REGENERATE_CLIENTS AND NOT ENABLE_VIRTUAL_OPERATIONS)\n        if (PLATFORM_LINUX OR PLATFORM_APPLE)\n            Message(STATUS \"${BoldYellow}You are regenerating service client's source code and is turning ENABLE_VIRTUAL_OPERATIONS off. If you are targeting smaller binary size, read description string of ENABLE_VIRTUAL_OPERATIONS.${ColourReset}\")\n        endif ()\n    endif ()\n\n    # use response files to prevent command-line-too-big errors for large libraries like iam\n    set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1)\n    set(CMAKE_CXX_USE_RESPONSE_FILE_FOR_INCLUDES 1)\n    set(CMAKE_CXX_RESPONSE_FILE_LINK_FLAG \"@\")\n\n    if (COMMAND apply_pre_project_platform_settings)\n        apply_pre_project_platform_settings()\n    endif ()\n\n    include(initialize_project_version)\n\n    if (BUILD_SHARED_LIBS OR FORCE_SHARED_CRT)\n        set(STATIC_CRT OFF)\n    else ()\n        set(STATIC_CRT ON)\n    endif ()\n\n    # build the sdk targets\n    project(\"aws-cpp-sdk-all\" VERSION \"${PROJECT_VERSION}\" LANGUAGES CXX)\n\n    find_package(Python3 COMPONENTS Interpreter Development)\n    set(PYTHON3_CMD ${PYTHON_EXECUTABLE})\n\n    # ENABLE_ZLIB_REQUEST_COMPRESSION should be ON by default if ZLIB is available\n    if(ENABLE_ZLIB_REQUEST_COMPRESSION)\n        find_package(ZLIB QUIET)\n        if ( NOT ZLIB_FOUND)\n            set(ENABLE_ZLIB_REQUEST_COMPRESSION\n                    OFF CACHE BOOL\n                    \"For services that support it, request content will be compressed. On by default if dependency available\"\n                    FORCE)\n            message(WARNING \"ZLIB is not available, it will not be used to compress requests\")\n        else()\n            #Passing the information that we want zlib request compression support to C++\n            add_definitions(\"-DENABLED_ZLIB_REQUEST_COMPRESSION\" \"-DENABLED_REQUEST_COMPRESSION\")\n        endif()\n    endif()\n\n    if (UNIX AND NOT APPLE)\n        include(GNUInstallDirs)\n    elseif (NOT DEFINED CMAKE_INSTALL_LIBDIR)\n        set(CMAKE_INSTALL_LIBDIR \"lib\")\n    endif ()\n\n    if (DEFINED CMAKE_PREFIX_PATH)\n        file(TO_CMAKE_PATH \"${CMAKE_PREFIX_PATH}\" CMAKE_PREFIX_PATH)\n    endif ()\n\n    add_definitions(\"-DAWS_TEST_REGION=${AWS_TEST_REGION}\")\n    if (NOT AWS_USER_AGENT_CUSTOMIZATION STREQUAL \"\")\n        message(STATUS \"Adding user agent customization ${AWS_USER_AGENT_CUSTOMIZATION}\")\n        add_definitions(\"-DAWS_USER_AGENT_CUSTOMIZATION=${AWS_USER_AGENT_CUSTOMIZATION}\")\n    endif()\n    if (DEFINED CMAKE_INSTALL_PREFIX)\n        file(TO_CMAKE_PATH \"${CMAKE_INSTALL_PREFIX}\" CMAKE_INSTALL_PREFIX)\n    endif ()\n\n    # http client, encryption, zlib\n    include(external_dependencies)\n    include(build_external)\n\n    if (COMMAND apply_post_project_platform_settings)\n        apply_post_project_platform_settings()\n    endif ()\n\n    set(CMAKE_CONFIGURATION_TYPES\n            Debug                   # Setup for easy debugging. No optimizations.\n            DebugOpt                # An optimized version of Debug.\n            Release                 # Fully optimized, no debugging information.\n            RelWithDebInfo          # A debuggable version of Release.\n            MinSizeRel              # Like Release, but optimized for memory rather than speed.\n            )\n\n    # build third-party targets\n    if (BUILD_DEPS)\n        set(CMAKE_INSTALL_RPATH \"$ORIGIN\")\n        list(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/crt/aws-crt-cpp/crt/aws-c-common/cmake\")\n        include(AwsFindPackage)\n        set(IN_SOURCE_BUILD ON)\n        set(BUILD_TESTING_PREV ${BUILD_TESTING})\n        set(BUILD_TESTING OFF CACHE BOOL \"Disable all tests in dependencies.\")\n        # TODO: Use same BUILD_SHARED_LIBS for Aws Common Runtime dependencies.\n        # libcurl and aws-sdk-cpp-core may link to different libcrypto, which leads to some issues for shared build.\n        if (ENABLE_OPENSSL_ENCRYPTION)\n            set(BUILD_SHARED_LIBS_PREV ${BUILD_SHARED_LIBS})\n            set(BUILD_SHARED_LIBS OFF)\n        endif ()\n        set(CRT_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})\n        add_subdirectory(crt/aws-crt-cpp)\n        set(BUILD_TESTING ${BUILD_TESTING_PREV})\n        if (ENABLE_OPENSSL_ENCRYPTION)\n            set(BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS_PREV})\n        endif ()\n    else ()\n        # This is required in order to append /lib/cmake to each element in CMAKE_PREFIX_PATH\n        set(AWS_MODULE_DIR \"/${CMAKE_INSTALL_LIBDIR}/cmake\")\n        string(REPLACE \";\" \"${AWS_MODULE_DIR};\" AWS_MODULE_PATH \"${CMAKE_PREFIX_PATH}${AWS_MODULE_DIR}\")\n        # Append that generated list to the module search path\n        list(APPEND CMAKE_MODULE_PATH ${AWS_MODULE_PATH})\n        include(AwsFindPackage)\n        set(IN_SOURCE_BUILD OFF)\n    endif ()\n    aws_use_package(aws-crt-cpp)\n    aws_use_package(aws-c-http)\n    aws_use_package(aws-c-mqtt)\n    aws_use_package(aws-c-cal)\n    aws_use_package(aws-c-auth)\n    aws_use_package(aws-c-common)\n    aws_use_package(aws-c-io)\n    aws_use_package(aws-checksums)\n    aws_use_package(aws-c-event-stream)\n    aws_use_package(aws-c-s3)\n    aws_use_package(aws-c-compression)\n    aws_use_package(aws-c-sdkutils)\n    set(AWS_COMMON_RUNTIME_LIBS ${DEP_AWS_LIBS})\n\n    include(compiler_settings)\n    # Instead of calling functions/macros inside included cmake scripts, we should call them in our main CMakeList.txt\n    set_msvc_flags()\n    set_msvc_warnings()\n\n    include(sdks)\n\n    include(utilities)\n\n    if (ENABLE_OPENSSL_ENCRYPTION)\n        set(CRYPTO_LIBS ${OPENSSL_LIBRARIES} ${ZLIB_LIBRARIES})\n        set(CRYPTO_LIBS_ABSTRACT_NAME crypto ssl z)\n    endif ()\n\n    if (ENABLE_CURL_CLIENT)\n        set(CLIENT_LIBS ${CURL_LIBRARIES})\n        set(CLIENT_LIBS_ABSTRACT_NAME curl)\n    elseif (ENABLE_WINDOWS_CLIENT)\n        if (USE_IXML_HTTP_REQUEST_2)\n            set(CLIENT_LIBS msxml6 runtimeobject)\n            set(CLIENT_LIBS_ABSTRACT_NAME msxml6 runtimeobject)\n            if (BYPASS_DEFAULT_PROXY)\n                list(APPEND CLIENT_LIBS winhttp)\n                list(APPEND CLIENT_LIBS_ABSTRACT_NAME winhttp)\n            endif ()\n        else ()\n            set(CLIENT_LIBS Wininet winhttp)\n            set(CLIENT_LIBS_ABSTRACT_NAME Wininet winhttp)\n        endif ()\n    endif ()\n\n    # setup user specified installation directory if any, regardless previous platform default settings\n    if (CMAKE_INSTALL_BINDIR)\n        set(BINARY_DIRECTORY \"${CMAKE_INSTALL_BINDIR}\")\n    endif ()\n\n    if (CMAKE_INSTALL_LIBDIR)\n        set(LIBRARY_DIRECTORY \"${CMAKE_INSTALL_LIBDIR}\")\n    endif ()\n\n    if (CMAKE_INSTALL_INCLUDEDIR)\n        set(INCLUDE_DIRECTORY \"${CMAKE_INSTALL_INCLUDEDIR}\")\n    endif ()\n\n    if (BUILD_SHARED_LIBS)\n        set(ARCHIVE_DIRECTORY \"${BINARY_DIRECTORY}\")\n    else ()\n        set(ARCHIVE_DIRECTORY \"${LIBRARY_DIRECTORY}\")\n    endif ()\n\n    if (ENABLE_ADDRESS_SANITIZER)\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -g -fno-omit-frame-pointer\")\n        if (CMAKE_COMPILER_IS_GNUCXX AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.1)\n            message(STATUS \"adding libasan as static explicitly for GCC 7+\")\n            set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -static-libasan\")\n        endif ()\n    endif ()\n\n    include(CheckCXXSymbolExists)\n\n    check_cxx_symbol_exists(\"pathconf\" \"unistd.h\" HAS_PATHCONF)\n    if (HAS_PATHCONF)\n        add_definitions(-DHAS_PATHCONF)\n    endif ()\n\n    check_cxx_symbol_exists(\"umask\" \"sys/stat.h\" HAS_UMASK)\n    if (HAS_UMASK)\n        add_definitions(-DHAS_UMASK)\n    endif ()\n\n    if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.0)\n        add_definitions(-DLEGACY_GCC)\n    endif ()\n\n    add_definitions(\"-DAWS_TEST_REGION=${AWS_TEST_REGION}\")\n\n    add_sdks()\n\n    # for user friendly cmake usage\n    include(setup_cmake_find_module)\n\n    # for generating make uninstall target\n    if (NOT TARGET uninstall)\n        ADD_CUSTOM_TARGET(uninstall \"${CMAKE_COMMAND}\" -P \"${AWS_NATIVE_SDK_ROOT}/cmake/make_uninstall.cmake\")\n    else ()\n        ADD_CUSTOM_TARGET(uninstall-awssdk \"${CMAKE_COMMAND}\" -P \"${AWS_NATIVE_SDK_ROOT}/cmake/make_uninstall.cmake\")\n    endif ()\nelse () #  End of Legacy Build\n    # -- Preamble --\n    message(STATUS \"Building with new CMake scripts.\")\n    string(CONCAT DESCRIPTION_STRING \"The AWS SDK for C++ provides a modern C++ (standard version C++11 or later) \"\n            \"interface for Amazon Web Services (AWS).\")\n\n    list(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/cmake\")\n\n    find_package(Git QUIET) # Adding development helper tools as git_hash built when available.\n\n    include(project_version)\n    obtain_project_version(SDK_PROJECT_VERSION aws-cpp-sdk_GIT_HASH)\n\n    project(\"aws-cpp-sdk\"\n            LANGUAGES CXX\n            VERSION ${SDK_PROJECT_VERSION}\n            DESCRIPTION ${DESCRIPTION_STRING}\n            HOMEPAGE_URL \"https://docs.aws.amazon.com/sdk-for-cpp\"\n            )\n    include(CTest)\n\n    # -- Project wide setup --\n    # Setting C++ minimum requirements\n    set(CMAKE_CXX_STANDARD 11)\n    set(CMAKE_CXX_EXTENSIONS OFF)\n    set(CMAKE_CXX_STANDARD_REQUIRED ON)\n\n    # Setting flags for telling compiler this is a non-legacy build\n    add_definitions(-DNON_LEGACY_BUILD)\n\n    # Setting build to hide symbols in targets by default\n    set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n    set(CMAKE_VISIBILITY_INLINES_HIDDEN YES)\n\n    # Preventing writes to package registry by default\n    set(CMAKE_EXPORT_NO_PACKAGE_REGISTRY YES)\n\n    # Validating config type and setting default if needed\n    get_property(is_multi_conf_build GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n    if (NOT is_multi_conf_build)\n        set(allowed_build_types Debug Release RelWithDebInfo MinSizeRel)\n        # cmake-gui helper\n        set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"${allowed_build_types}\")\n        if (NOT CMAKE_BUILD_TYPE)\n            message(STATUS \"Setting build type to 'RelWithDebInfo' as none was specified.\")\n            set(CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING \"Choose the type of build.\" FORCE)\n        elseif (NOT CMAKE_BUILD_TYPE IN_LIST allowed_build_types)\n            message(FATAL_ERROR \"Unknown build type: ${CMAKE_BUILD_TYPE}\")\n        endif ()\n    endif ()\n\n    # Options definition\n    option(BUILD_TESTING \"If enabled, the SDK will include tests in the build\" OFF)\n\n    # Next to be included\n    #    # -- Dependencies --\n    #    include(dependencies)\n\n    # Configuring the encryption tools used\n\n    #    # -- main build targets --\n    #    add_subdirectory(src)\n    #    add_subdirectory(generated)\n\n    # -- Tests and packaging if running this as top project --\n    #    if (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)\n    #        # Testing Dependencies\n    #        if (BUILD_TESTING)\n    #            add_subdirectory(tests)\n    #        endif ()\n    #        add_subdirectory(packaging)\n    #    endif ()\n\n    # Adding integration tests build and run\n    # Adding end-points tests build and run\n    # Add support for static analysis\n    # Building client libraries.\n    # Doc generation review\n    # Add support support for old SDK build flags\n    # Add previously available options.\n\n    message(WARNING \"This is work in progress build script. No SDK is built so far.\"\n            \"If you need to build the SDK, you need to use LEGACY_BUILD mode at this time. \"\n            )\nendif ()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.302734375,
          "content": "## Code of Conduct\nThis project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct). \nFor more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact \nopensource-codeofconduct@amazon.com with any additional questions or comments."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.09765625,
          "content": "## Contributing Back\n**Please Do!**\n\n__Jump To:__\n* [Bug Reports](#bug-reports)\n* [Feature Requests](#feature-requests)\n* [Code Contributions](#code-contributions)\n* [Contribution Guidelines](#Contribution-Guidelines)\n\n## Bug Reports\nBug reports are accepted through the [Issues][issues] page.\n\n### Before Submitting a Bug Report\n\nBefore submitting a bug report, please do the following:\n\n1. Do a search through the existing issues to make sure it has not already been reported. If there's an existing one, be sure give a +1 reaction which will help us prioritize which issues to address first.\n\n2. If possible, upgrade to the latest release of the SDK. The SDK has a near daily release cadence so it's possible the bug has already been fixed in the latest version.\n\nIf, after doing the above steps, you determine that you need to submit a bug report, refer to the next section.\n\n### Submitting a Bug Report\nSo that we are able to assist you as effectively as possible with the issue, please ensure that your bug report has the following:\n\n* A short, descriptive title. Ideally, other community members should be able to get a good idea of the issue just from reading the title.\n* A succint, detailed description of the problem you're experiencing. This should include:\n  * Expected behavior of the SDK and the actual behavior exhibited.\n  * Any details of your application environment that may be relevant. At minimum, this should include the __SDK version__ and __Operating System__ you're using.\n  * If applicable, the exception stacktrace.\n  * If you are able to create one, include a [Minimal Working Example][mwe] that reproduces the issue.\n* [Markdown][markdown] formatting as appropriate to make the report easier to read; for example use code blocks when pasting a code snippet and exception stacktraces.\n\n## Feature Requests\nLike bug reports, feature requests are submitted through the [Issues][issues] page.\n\nAs with Bug Reports, please do a search of the open requests first before submitting a new one to avoid duplicates. If you find an existing one, give it a +1.\n\n__NOTE:__ If this is a feature you intend to implement, please submit the feature request *before* working on any code changes. This will allow members on the SDK team to have a discussion with you to ensure that it's the right design and that it makes sense to include in the SDK. Keep in mind that other concerns like source and binary compatibility will also play a deciding factor.\n\n### Submitting a Feature Request\nOpen an [issue][issues] with the following:\n\n* A short, descriptive title. s should be able to get a good idea of the feature just from reading the title.Ideally, other community member\n* A detailed description of the the proposed feature. Include justification for why it should be added to the SDK, and possibly example code to illustrate how it should work.\n* [Markdown][markdown] formatting as appropriate to make the request easier to read.\n* If you intend to implement this feature, indicate that you'd like to the issue to be assigned to you\n\n\n## Code Contributions\nCode contributions to the SDK are done through [Pull Requests][pull-requests]. Please keep the following in mind when considering a code contribution:\n\n* The SDK is released under the [Apache 2.0 License][license].\n\n   Any code you submit will be released under this license. If you are contributing a large/substantial feature, you may be asked to sign a Contributor License Agreement (CLA).\n* For anything but very small or quick changes, you should always start by checking the [Issues][issues] page to see if the work is already being done by another person.\n\n  If you're working on a bug fix, check to see if the bug has already been reported. If it has but no one is assigned to it, ask one of the maintainers to assign it to you before beginning work.  If you're confident the bug hasn't been reported yet, create a new [Bug Report](#bug-reports) then ask to be assigned to it.\n\n  If you are thinking about adding entirely new functionality, open a [Feature Request](#feature-requests) first before beginning work; again this is to make sure that no one else is already working on it, and also that it makes sense to be included in the SDK.\n* All code contributions must be accompanied with new or modified tests that verify that the code works as expected; i.e. that the issue has been fixed or that the functionality works as intended.\n\n## Your First Code Change\nBefore submitting your pull request, refer to the pull request readiness\nchecklist below:\n\n* [ ] Includes tests to exercise the new behavior\n* [ ] Code is documented, especially public and user-facing constructs\n* [ ] Git commit message is detailed and includes context behind the change\n* [ ] If the change is related to an existing Bug Report or Feature Request, the issue number is referenced\n\n__Note__: Some changes have additional requirements. Refer to the section below\nto see if your change will require additional work to be accepted.\n\nAll Pull Requests must be approved by at least one member of the SDK team before it can be merged in. The members only have limited bandwitdth to review Pull Requests so it's not unusual for a Pull Request to go unreviewed for a few days, especially if it's a large or complex one. If, after a week, your Pull Request has not had any engagement from the SDK team, feel free to comment and tag a member to ask for a review.\n\nIf your branch has more than one commit when it's approved, you will also be asked to squash them into a single commit before it is merged in.\n\n## Contribution Guidelines\n* Don't make changes to generated clients directly, make your changes in the generator. Changes to Core, Scripts, and High-Level interfaces are fine directly in the code.\n* Do not use non-trivial statics anywhere. This will cause custom memory managers to crash in random places.\n* Use 4 spaces for indents and never use tabs.\n* No exceptions.... no exceptions. Use the Outcome pattern for returning data if you need to also return an optional error code.\n* Always think about platform independence. If this is impossible, put a nice abstraction on top of it and use an abstract factory.\n* Use RAII, Aws::New and Aws::Delete should only appear in constructors and destructors.\n* Be sure to follow the rule of 5.\n* Use the C++ 11 standard where possible.\n* Use UpperCamelCase for custom type names and function names. Use m_* for member variables. Don't use statics. If you must, use UpperCamelCase for static variables\n* Always be const correct, and be mindful of when you need to support r-values. We don't trust compilers to optimize this uniformly across builds so please be explicit.\n* Namespace names should be UpperCammelCase. Never put a using namespace statement in a header file unless it is scoped by a class. It is fine to use a using namespace statement in a cpp file.\n* Use enum class, not enum\n* Prefer `#pragma once` for include guards.\n* Forward declare whenever possible.\n* Use nullptr instead of NULL.\n\n[license]: ./LICENSE.txt\n[mwe]: https://en.wikipedia.org/wiki/Minimal_Working_Example\n[markdown]: https://guides.github.com/features/mastering-markdown/\n[issues]: https://github.com/aws/aws-sdk-cpp/issues\n[pull-requests]: https://github.com/aws/aws-sdk-cpp/pulls"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 10.5390625,
          "content": "Apache License\nVersion 2.0, January 2004\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\n   1.   You must give any other recipients of the Work or Derivative Works a copy of this License; and\n   2.   You must cause any modified files to carry prominent notices stating that You changed the files; and\n   3.   You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n   4.   If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nNote: Other license terms may apply to certain, identified software files contained within or distributed with the accompanying software if such terms are included in the directory containing the accompanying software. Such other license terms will then apply in lieu of the terms of the software license above.\n\nJSON processing code subject to the MIT License from http://en.wikipedia.org/wiki/MIT_License\nXML processing code is subject to the license at (www.grinninglizard.com)\nAndroid build logic code is subject to the MIT License from http://en.wikipedia.org/wiki/MIT_License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nThe Software shall be used for Good, not Evil.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.791015625,
          "content": "AWS SDK for C++\nCopyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\nThis product includes software developed by\nAmazon Technologies, Inc (http://www.amazon.com/).\n\n**********************\nTHIRD PARTY COMPONENTS\n**********************\nThis software includes third party software subject to the following copyrights:\n- XML parsing and utility functions from TinyXml2 - Lee Thomason.\n- JSON support from cJSON - Copyright (c) 2009-2017 Dave Gamble and cJSON contributors\n- OpenSSL build files for cmake used for Android Builds - Copyright (C) 2007-2012 LuaDist and Copyright (C) 2013 Brian Sidebotham\n- Android tool chain cmake build files - Copyright (c) 2010-2011, Ethan Rublee and Copyright (c) 2011-2014, Andrey Kamaev\n\nThe licenses for these third party components are included in LICENSE.txt\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5615234375,
          "content": "# AWS SDK for C++\nThe AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).\n\nAWS SDK for C++ is now in General Availability and recommended for production use. We invite our customers to join the development efforts by submitting pull requests and sending us feedback and ideas via GitHub Issues.\n\n## __Jump To:__\n* [Change log](https://github.com/aws/aws-sdk-cpp/tags)\n* [API Docs](https://sdk.amazonaws.com/cpp/api/LATEST/index.html)\n* [Getting Started](#getting-started)\n* [Getting Help](#getting-help)\n* [Using the SDK and Other Topics](#using-the-sdk-and-other-topics)\n\n# Getting Started\n\n## Building the SDK:\n\n### Minimum Requirements:\n* Visual Studio 2015 or later\n* OR GNU Compiler Collection (GCC) 4.9 or later\n* OR Clang 3.3 or later\n* 4GB of RAM (required for building some of the larger clients; SDK build may fail on EC2 instance types t2.micro, t2.small, and other small instance types due to insufficient memory)\n* Supported platforms\n  * Amazon Linux\n  * Windows\n  * Mac\n\n### Building From Source:\n\n#### To create an **out-of-source build**:\n1. Install CMake and the relevant build tools for your platform. Ensure these are available in your executable path.\n2. Clone this repository with submodules\n\n    ```sh\n    git clone --recurse-submodules https://github.com/aws/aws-sdk-cpp\n    ```\n\n3. Create your build directory. Replace `<BUILD_DIR>` with your build directory name:\n4. Build the project:\n\n    ```sh\n   cd <BUILD_DIR>\n   cmake <path-to-root-of-this-source-code> \\\n    -DCMAKE_BUILD_TYPE=Debug \\\n    -DCMAKE_INSTALL_PREFIX=<path-to-install> \\\n    -DBUILD_ONLY=\"s3\"\n   cmake --build . --config=Debug\n   cmake --install . --config=Debug\n   ```\n\n   **_NOTE:_** BUILD_ONLY is an optional flag used to list only the services you are using. Building the whole SDK can take a long time. Also, check out the list of [CMake parameters](./docs/CMake_Parameters.md)\n\n#### Other Dependencies:\nTo compile in Linux, you must have the header files for libcurl, libopenssl. The packages are typically available in your package manager.\n\nDebian based Linux distributions example:\n   `sudo apt-get install libcurl-dev`\n\nRPM based Linux distributions example:\n   `sudo [yum|dnf|zypper] install libcurl-devel`\n\n### Building for MacOS\n\nBuilding for macOS is largely the same as building on a *nix system except for how the system consumes the curl dependency and compilers.\n\nYou must install the [xcode command line tools](https://mac.install.guide/commandlinetools/4.html). This is required for Apple clang and gcc. This also installs libcurl as well.\n\n> :warning: If you are using macOS Sonoma, there is a [known issue](https://github.com/aws/aws-sdk-cpp/issues/2804) where using libcurl version 8.4.0 on macOS can lead to issues. [This issue is being tracked with curl and Apple](https://github.com/curl/curl/issues/12525). In the meanwhile, please use an updated version of [curl from Homebrew](https://formulae.brew.sh/formula/curl). You can include this in your project via the CMAKE_PREFIX_PATH.\n>\n> ```\n> cmake -DCMAKE_PREFIX_PATH=\"/opt/homebrew/opt/curl/\" \\\n>  -DAUTORUN_UNIT_TESTS=OFF \\\n>  -DBUILD_ONLY=\"s3\" \\\n>  -DCMAKE_INSTALL_PREFIX=\"~/sdk-install\" \\\n>  ..\n> ```\n\n### Building for Android\nTo build for Android, add `-DTARGET_ARCH=ANDROID` to your CMake command line. Currently, we support Android APIs from 19 to 28 with Android NDK 19c, and we are using the built-in CMake toolchain file supplied by Android NDK, assuming you have the appropriate environment variables (ANDROID_NDK) set.\n\n##### Android on Windows\nBuilding for Android on Windows requires some additional setup. In particular, you will need to run CMake from a Visual Studio developer command prompt (2015 or higher). Additionally, you will need 'git' and 'patch' in your path. If you have Git installed on a Windows system, then the patch is likely found in a sibling directory (.../Git/usr/bin/). Once you've verified these requirements, your CMake command line will change slightly to use nmake:\n\n   ```sh\n   cmake -G \"NMake Makefiles\" `-DTARGET_ARCH=ANDROID` <other options> ..\n   ```\n\nNmake builds targets in a serial fashion. To make things quicker, we recommend installing JOM as an alternative to nmake and then changing the CMake invocation to:\n\n   ```sh\n   cmake -G \"NMake Makefiles JOM\" `-DTARGET_ARCH=ANDROID` <other options> ..\n   ```\n\n### Building aws-sdk-cpp - Using vcpkg\n\nYou can download and install aws-sdk-cpp using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install aws-sdk-cpp\n\nThe aws-sdk-cpp port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n# Maintenance and support for SDK major versions\n\nFor information about maintenance and support for SDK major versions and our underlying dependencies, see the following in the AWS SDKs and Tools Shared Configuration and Credentials Reference Guide\n\n* [AWS SDKs and Tools Maintenance Policy](https://docs.aws.amazon.com/credref/latest/refdocs/maint-policy.html)\n* [AWS SDKs and Tools Version Support Matrix](https://docs.aws.amazon.com/credref/latest/refdocs/version-support-matrix.html)\n\n\n# Getting Help\n\nThe best way to interact with our team is through GitHub. You can open a [discussion](https://github.com/aws/aws-sdk-cpp/discussions/new/choose) for guidance questions or an [issue](https://github.com/aws/aws-sdk-cpp/issues/new/choose) for bug reports or feature requests.\n\nYou may also find help on community resources such as [StackOverFlow](https://stackoverflow.com/) with the tag [#aws-sdk-cpp](https://stackoverflow.com/questions/tagged/aws-sdk-cpp). If you have a support plan with [AWS Support](https://aws.amazon.com/premiumsupport/), you can also create a new support case.\n\nPlease make sure to check out our resources too before opening an issue:\n* [Developer Guide](https://docs.aws.amazon.com/sdk-for-cpp/v1/developer-guide/welcome.html) and [API reference](http://sdk.amazonaws.com/cpp/api/LATEST/index.html)\n* [Changelog](./CHANGELOG.md) for recent breaking changes.\n* [Contribution](./CONTRIBUTING.md) guide.\n* [samples repo](https://github.com/awsdocs/aws-doc-sdk-examples/tree/master/cpp).\n\n\n# Using the SDK and Other Topics\n* Other docs for how to build the sdk\n  * [CMake Parameters](./docs/CMake_Parameters.md)\n  * [Add as CMake external project](./docs/CMake_External_Project.md)\n  * [Building for Docker](https://github.com/aws/aws-sdk-cpp/tree/master/CI/docker-file) (To build for Docker, ensure your container meets the [minimum requirements](#minimum-requirements))\n  * [Building on an EC2 instance](https://github.com/aws/aws-sdk-cpp/wiki/Building-the-SDK-from-source-on-EC2)\n  * [Visual Studio building and debugging](./docs/Visual_Studio_building_and_debugging.md)\n* SDK usage\n  * [API Docs](https://sdk.amazonaws.com/cpp/api/LATEST/index.html)\n  * [Using the SDK](./docs/SDK_usage_guide.md)\n  * [Credentials Providers](./docs/Credentials_Providers.md)\n  * [Client Configuration Parameters](./docs/ClientConfiguration_Parameters.md)\n  * [Service Client](./docs/Service_Client.md)\n  * [Memory Management](./docs/Memory_Management.md)\n  * [Advanced Topics](./docs/Advanced_topics.md)\n* [Coding Standards](./docs/CODING_STANDARDS.md)\n* [License](./LICENSE)\n* [Code of Conduct](./CODE_OF_CONDUCT.md)\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0078125,
          "content": "1.11.483"
        },
        {
          "name": "attribution",
          "type": "blob",
          "size": 0.115234375,
          "content": "/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "crt",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "generated",
          "type": "tree",
          "content": null
        },
        {
          "name": "prefetch_crt_dependency.sh",
          "type": "blob",
          "size": 2.841796875,
          "content": "#!/bin/sh\n# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: Apache-2.0.\n\nCRT_URI_PREFIX=https://codeload.github.com/awslabs\nCRT_URI=${CRT_URI_PREFIX}/aws-crt-cpp/zip/b5577fa39c3a11f09c06db10ac6eaaca3910cbe2  # v0.29.7\n\nAWS_C_AUTH_URI=${CRT_URI_PREFIX}/aws-c-auth/zip/3982bd75fea74efd8f9b462b27fedd4599db4f53  # v0.8.0\nAWS_C_CAL_URI=${CRT_URI_PREFIX}/aws-c-cal/zip/fbbe2612a3385d1ded02a52d20ad7fd2da4501f4  # v0.8.1\nAWS_C_COMMON_URI=${CRT_URI_PREFIX}/aws-c-common/zip/fadfef492042ae53387d4369a6de652c930a5be4  # v0.10.5\nAWS_C_COMPRESSION_URI=${CRT_URI_PREFIX}/aws-c-compression/zip/c6c1191e525e5aa6ead9e1afc392e35d3b50331e  # v0.3.0\nAWS_C_EVENT_STREAM_URI=${CRT_URI_PREFIX}/aws-c-event-stream/zip/d2dcc9344dae24de320866045d85166d8a91a0d1  # v0.5.0\nAWS_C_HTTP_URI=${CRT_URI_PREFIX}/aws-c-http/zip/fc3eded2465c37d07fd9cc15e9b5b011224c9c9a  # v0.9.2\nAWS_C_IO_URI=${CRT_URI_PREFIX}/aws-c-io/zip/fcb38c804364dd627c335da752a99a125a88f6e9  # v0.15.3\nAWS_C_MQTT_URI=${CRT_URI_PREFIX}/aws-c-mqtt/zip/627c3334e52021aa8d5772b6ca076884610f3219  # v0.11.0\nAWS_C_S3_URI=${CRT_URI_PREFIX}/aws-c-s3/zip/337155f6c07d39e61234e705ed6e58c31d4841eb  # v0.7.5\nAWS_C_SDKUTILS_URI=${CRT_URI_PREFIX}/aws-c-sdkutils/zip/ce09f79768653dbdc810fc14cad8685dd90acba1  # v0.2.1\nAWS_CHECKSUMS_URI=${CRT_URI_PREFIX}/aws-checksums/zip/3e4101b9f85a2c090774d27ae2131fca1082f522  # v0.2.2\nAWS_LC_URI=${CRT_URI_PREFIX}/aws-lc/zip/59828538a790094113eacd5dd23d01be2885b36a  # v1.40.0\nS2N_URI=${CRT_URI_PREFIX}/s2n/zip/493b77167dc367c394de23cfe78a029298e2a254  # v1.5.9\n\n\necho \"Removing CRT\"\nrm -rf crt\n\necho \"Downloading and expanding CRT CPP\"\nmkdir -p crt/tmp\ncurl ${CRT_URI} --output crt/tmp/crt.zip\nunzip crt/tmp/crt -d crt\nCRT_DIR_TMP=`ls -d crt/aws-crt-cpp*`\nmv ${CRT_DIR_TMP} crt/aws-crt-cpp\n\necho \"Downloading and expanding CRT dependencies\"\ncurl ${AWS_C_AUTH_URI} --output crt/tmp/1.zip\ncurl ${AWS_C_CAL_URI} --output crt/tmp/2.zip\ncurl ${AWS_C_COMMON_URI} --output crt/tmp/3.zip\ncurl ${AWS_C_COMPRESSION_URI} --output crt/tmp/4.zip\ncurl ${AWS_C_EVENT_STREAM_URI} --output crt/tmp/5.zip\ncurl ${AWS_C_HTTP_URI} --output crt/tmp/6.zip\ncurl ${AWS_C_IO_URI} --output crt/tmp/7.zip\ncurl ${AWS_C_MQTT_URI} --output crt/tmp/8.zip\ncurl ${AWS_C_S3_URI} --output crt/tmp/9.zip\ncurl ${AWS_C_SDKUTILS_URI} --output crt/tmp/10.zip\ncurl ${AWS_CHECKSUMS_URI} --output crt/tmp/11.zip\ncurl ${AWS_LC_URI} --output crt/tmp/12.zip\ncurl ${S2N_URI} --output crt/tmp/13.zip\n\n\nfor a in `seq 1 13`; do\n    unzip crt/tmp/${a} -d crt/tmp\ndone\n\nrm -rf crt/aws-crt-cpp/crt\nmkdir crt/aws-crt-cpp/crt\n\nfor a in `ls crt/tmp |grep -v '.zip$' |grep -v aws-crt-cpp`; do\n    mv crt/tmp/$a \"crt/aws-crt-cpp/crt/\"`echo $a | sed 's/-[0-9a-f]\\{40\\}$//'`\ndone\n\necho \"Adjust S2N location\"\nmv crt/aws-crt-cpp/crt/s2n-tls crt/aws-crt-cpp/crt/s2n\n\necho \"To complete setup run cmake -Bbuild; cmake --build build; cmake --build --target install\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolchains",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}