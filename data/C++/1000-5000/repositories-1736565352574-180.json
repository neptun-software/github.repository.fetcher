{
  "metadata": {
    "timestamp": 1736565352574,
    "page": 180,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LUX-Core/lux",
      "stars": 3798,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0341796875,
          "content": "src/clientversion.cpp export-subst\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6513671875,
          "content": ".gitignore\n*.sublime-project\n*.sublime-workspace\ntodo.txt\nreset-files.bash\n\n*.tar.gz\n\n*.exe\nsrc/lux\nsrc/luxd\nsrc/lux-cli\nsrc/lux-tx\nsrc/test/test_lux\nsrc/qt/test/test_lux-qt\n\n# autoreconf\nMakefile.in\naclocal.m4\nautom4te.cache/\nbuild-aux/config.guess\nbuild-aux/config.sub\nbuild-aux/depcomp\nbuild-aux/install-sh\nbuild-aux/ltmain.sh\nbuild-aux/m4/libtool.m4\nbuild-aux/m4/lt~obsolete.m4\nbuild-aux/m4/ltoptions.m4\nbuild-aux/m4/ltsugar.m4\nbuild-aux/m4/ltversion.m4\nbuild-aux/missing\nbuild-aux/compile\nbuild-aux/test-driver\nconfig.log\nconfig.status\nconfigure\nlibtool\nsrc/config/lux-config.h\nsrc/config/lux-config.h.in\nsrc/config/stamp-h1\nshare/setup.nsi\nshare/qt/Info.plist\n\nsrc/univalue/gen\n\nsrc/qt/*.moc\nsrc/qt/forms/ui_*.h\nsrc/lux-installer/src/forms/ui_*.h\nmoc_*.cpp\n\n.deps\n.dirstamp\n.libs\n.*.swp\n*.*~*\n*.bak\n*.rej\n*.orig\n*.pyc\n*.o\n*.o-*\n.lux\n*.a\n*.pb.cc\n*.pb.h\n\n*.log\n*.trs\n*.dmg\n\n*.json.h\n*.raw.h\n\n#libtool object files\n*.lo\n*.la\n\n# Compilation and Qt preprocessor part\n*.qm\nMakefile\nlux-qt\nLUX-Qt.app\n\n# Unit-tests\nMakefile.test\nlux-qt_test\nsrc/test/buildenv.py\n\n# Resources cpp\nqrc_*.cpp\n\n# Qt creator\n*.pro.user\n\n# Mac specific\n.DS_Store\nbuild\n\n#lcov\n*.gcno\n/*.info\ntest_lux.coverage/\ntotal.coverage/\ncoverage_percent.txt\n\n#build tests\nlinux-coverage-build\nlinux-build\nwin32-build\nqa/pull-tester/run-bitcoind-for-test.sh\nqa/pull-tester/tests-config.sh\nqa/pull-tester/cache/*\nqa/pull-tester/test.*/*\n\n!src/leveldb*/Makefile\n\n.cproject\n.project\n/doc/doxygen/\n/nbproject/\n\n.idea\n\ncontrib/devtools/split-debug.sh\n\ndepends/built/\ndepends/Release/\ndepends/sources/\ndepends/i686-w64-mingw32/\ndepends/x86_64-w64-mingw32/\n\n/src/DEBUG_DUMP_STAKING_INFO.hpp\ndepends/built\ndepends/sources\ndepends/x86_*"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 4.517578125,
          "content": "sudo: required\ndist: trusty\n\naddons:\n  hosts:\n    - lux-tester\n  hostname: lux-tester\n\ngit:\n  submodules: false\n\nos: linux\nlanguage: generic\ncache:\n  apt: true\n  ccache: true\n  directories:\n  - depends/built\n  - depends/sdk-sources\n  - $HOME/.ccache\nenv:\n  global:\n    - MAKEJOBS=-j6\n    - RUN_TESTS=false\n    - CHECK_DOC=0\n    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n    - CCACHE_SIZE=400M\n    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n    - CCACHE_COMPRESS=1\n    - CCACHE_DIR=$HOME/.ccache\n    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n    - PYTHON_DEBUG=1\n    - WINEDEBUG=fixme-all\n    - DEPENDS_TIMEOUT=900\n  matrix:\n# ARM\n    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf libprotobuf-dev protobuf-compiler libqrencode-dev\" CHECK_DOC=0 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports --disable-tests --disable-zmq --disable-updater\"\n# Win32\n#   - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" PACKAGES=\"nsis wine1.6 cmake libevent-dev libminiupnpc-dev libzmq3-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libqrencode-dev qttools5-dev-tools qttools5-dev qtbase5-dev libprotobuf-dev -y\" RUN_TESTS=false BITCOIN_CONFIG=\"--with-gui=qt5 --disable-shared --enable-reduce-exports --disable-updater\" GOAL=\"src/qt/lux-qt.exe\"\n    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=0\" PACKAGES=\"nsis wine1.6 cmake g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev -y\" RUN_TESTS=false BITCOIN_CONFIG=\"--enable-reduce-exports --disable-zmq --without-miniupnpc --disable-updater\" GOAL=\"install\"\n# Cross-Mac\n#   - HOST=x86_64-apple-darwin14 PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"cmake libcap-dev librsvg2-bin libz-dev libtiff-tools python3-setuptools-git\" BITCOIN_CONFIG=\"--with-gui=qt5 --enable-reduce-exports --disable-tests --disable-zmq --disable-updater\" OSX_SDK=10.11 GOAL=\"src/qt/lux-qt\"\n    - HOST=x86_64-apple-darwin14 PPA=\"ppa:bitcoin/bitcoin\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"cmake libcap-dev librsvg2-bin libz-dev libtiff-tools\" BITCOIN_CONFIG=\"--without-gui --enable-reduce-exports --disable-tests --disable-zmq --disable-updater\" OSX_SDK=10.11 GOAL=\"src/luxd\"\n\nbefore_install:\n    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\ninstall:\n    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update --allow-unauthenticated; fi\n    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade --allow-unauthenticated -m -q $PACKAGES; fi\nbefore_script:\n    - unset CC; unset CXX\n    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n    - mkdir -p depends/SDKs depends/sdk-sources\n    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n\n  \nscript:\n    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n    - ./configure CFLAGS=\"-std=c99\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n    - make distdir PACKAGE=bitcoin VERSION=$HOST\n    - cd bitcoin-$HOST\n    - ./configure CFLAGS=\"-std=c99\" --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n    - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi\n    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n    - rm -rf .gitignore\nafter_script:\n    - echo $TRAVIS_COMMIT_RANGE\n    - echo $TRAVIS_COMMIT_LOG\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.7451171875,
          "content": "cmake_minimum_required(VERSION 3.10.3)\nproject(lux)\n\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\nadd_custom_target(build-lux ALL\n        COMMAND ./autogen.sh\n        COMMAND ./configure --disable-debug\n        COMMAND $(MAKE) WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        COMMAND $(MAKE))\n\nadd_custom_target(debug-luxd ALL\n        COMMAND ./autogen.sh\n        COMMAND ./configure --enable-debug --without-gui\n        COMMAND $(MAKE) WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        COMMAND $(MAKE))\n\nadd_custom_target(debug-lux-qt ALL\n        COMMAND ./autogen.sh\n        COMMAND ./configure --enable-debug --with-gui\n        COMMAND $(MAKE) WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        COMMAND $(MAKE))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.513671875,
          "content": "Contributing to Luxcore\n============================\n\nThe Luxcore project operates an open contributor model where anyone is\nwelcome to contribute towards development in the form of peer review, testing\nand patches. This document explains the practical process and guidelines for\ncontributing.\n\nFirstly in terms of structure, there is no particular concept of \"Core\ndevelopers\" in the sense of privileged people. Open source often naturally\nrevolves around meritocracy where longer term contributors gain more trust from\nthe developer community. However, some hierarchy is necessary for practical\npurposes. As such there are repository \"maintainers\" who are responsible for\nmerging pull requests as well as a \"lead maintainer\" who is responsible for the\nrelease cycle, overall merging, moderation and appointment of maintainers.\n\n\nContributor Workflow\n--------------------\n\nThe codebase is maintained using the \"contributor workflow\" where everyone\nwithout exception contributes patch proposals using \"pull requests\". This\nfacilitates social contribution, easy testing and peer review.\n\nTo contribute a patch, the workflow is as follows:\n\n  - Fork repository\n  - Create topic branch\n  - Commit patches\n\nThe project coding conventions in the [developer notes](doc/developer-notes.md)\nmust be adhered to.\n\nIn general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\nand diffs should be easy to read. For this reason do not mix any formatting\nfixes or code moves with actual code changes.\n\nCommit messages should be verbose by default consisting of a short subject line\n(50 chars max), a blank line and detailed explanatory text as separate\nparagraph(s), unless the title alone is self-explanatory (like \"Corrected typo\nin init.cpp\") in which case a single title line is sufficient. Commit messages should be\nhelpful to people reading your code in the future, so explain the reasoning for\nyour decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n\nIf a particular commit references another issue, please add the reference, for\nexample `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords\nwill cause the corresponding issue to be closed when the pull request is merged.\n\nPlease refer to the [Git manual](https://git-scm.com/doc) for more information\nabout Git.\n\n  - Push changes to your fork\n  - Create pull request\n\nThe title of the pull request should be prefixed by the component or area that\nthe pull request affects. Valid areas as:\n\n  - *Consensus* for changes to consensus critical code\n  - *Docs* for changes to the documentation\n  - *Qt* for changes to lux-qt\n  - *Minting* for changes to the minting code\n  - *Net* or *P2P* for changes to the peer-to-peer network code\n  - *RPC/REST* for changes to the RPC or REST APIs\n  - *Scripts and tools* for changes to the scripts and tools\n  - *Tests* for changes to the lux unit tests or QA tests\n  - *Trivial* should **only** be used for PRs that do not change generated\n    executable code. Notably, refactors (change of function arguments and code\n    reorganization) and changes in behavior should **not** be marked as trivial.\n    Examples of trivial PRs are changes to:\n    - comments\n    - whitespace\n    - variable names\n    - logging and messages\n  - *Utils and libraries* for changes to the utils and libraries\n  - *Wallet* for changes to the wallet code\n\nExamples:\n\n    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n    Net: Automatically create hidden service, listen on Tor\n    Qt: Add feed bump button\n    Trivial: Fix typo in init.cpp\n\nIf a pull request is specifically not to be considered for merging (yet) please\nprefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\nin the body of the pull request to indicate tasks are pending.\n\nThe body of the pull request should contain enough description about what the\npatch does together with any justification/reasoning. You should include\nreferences to any discussions (for example other tickets or mailing list\ndiscussions).\n\nAt this stage one should expect comments and review from other contributors. You\ncan add more commits to your pull request by committing them locally and pushing\nto your fork until you have satisfied all feedback.\n\nSquashing Commits\n---------------------------\nIf your pull request is accepted for merging, you may be asked by a maintainer\nto squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\nbefore it will be merged. The basic squashing workflow is shown below.\n\n    git checkout your_branch_name\n    git rebase -i HEAD~n\n    # n is normally the number of commits in the pull\n    # set commits from 'pick' to 'squash', save and quit\n    # on the next screen, edit/refine commit messages\n    # save and quit\n    git push -f # (force push to GitHub)\n\nIf you have problems with squashing (or other workflows with `git`), you can\nalternatively enable \"Allow edits from maintainers\" in the right GitHub\nsidebar and ask for help in the pull request.\n\nPlease refrain from creating several pull requests for the same change.\nUse the pull request that is already open (or was created earlier) to amend\nchanges. This preserves the discussion and review that happened earlier for\nthe respective change set.\n\nThe length of time required for peer review is unpredictable and will vary from\npull request to pull request.\n\n\nPull Request Philosophy\n-----------------------\n\nPatch sets should always be focused. For example, a pull request could add a\nfeature, fix a bug, or refactor code; but not a mixture. Please also avoid super\npull requests which attempt to do too much, are overly large, or overly complex\nas this makes review difficult.\n\n\n### Features\n\nWhen adding a new feature, thought must be given to the long term technical debt\nand maintenance that feature may require after inclusion. Before proposing a new\nfeature that will require maintenance, please consider if you are willing to\nmaintain it (including bug fixing). If features get orphaned with no maintainer\nin the future, they may be removed by the Repository Maintainer.\n\n\n### Refactoring\n\nRefactoring is a necessary part of any software project's evolution. The\nfollowing guidelines cover refactoring pull requests for the project.\n\nThere are three categories of refactoring, code only moves, code style fixes,\ncode refactoring. In general refactoring pull requests should not mix these\nthree kinds of activity in order to make refactoring pull requests easy to\nreview and uncontroversial. In all cases, refactoring PRs must not change the\nbehavior of code within the pull request (bugs must be preserved as is).\n\nProject maintainers aim for a quick turnaround on refactoring pull requests, so\nwhere possible keep them short, un-complex and easy to verify.\n\n\n\"Decision Making\" Process\n-------------------------\n\nThe following applies to code changes to the Luxcore project, and is not to be\nconfused with overall LUX Network Protocol consensus changes.\n\nWhether a pull request is merged into Luxcore rests with the project merge\nmaintainers and ultimately the project lead.\n\nMaintainers will take into consideration if a patch is in line with the general\nprinciples of the project; meets the minimum standards for inclusion; and will\njudge the general consensus of contributors.\n\nIn general, all pull requests must:\n\n  - have a clear use case, fix a demonstrable bug or serve the greater good of\n    the project (for example refactoring for modularisation);\n  - be well peer reviewed;\n  - follow code style guidelines;\n\nPatches that change LUX consensus rules are considerably more involved than\nnormal because they affect the entire ecosystem and so must be preceded by\nextensive discussions and clear detailing. While each case will be different,\none should be prepared to expend more time and effort than for other kinds of\npatches because of increased peer review and consensus building requirements.\n\n\n### Peer Review\n\nAnyone may participate in peer review which is expressed by comments in the pull\nrequest. Typically reviewers will review the code for obvious errors, as well as\ntest out the patch set and opine on the technical merits of the patch. Project\nmaintainers take into account the peer review when determining if there is\nconsensus to merge a pull request (remember that discussions may have been\nspread out over GitHub, forums, email, and Slack discussions). The following\nlanguage is used within pull-request comments:\n\n  - ACK means \"I have tested the code and I agree it should be merged\";\n  - NACK means \"I disagree this should be merged\", and must be accompanied by\n    sound technical justification (or in certain cases of copyright/patent/licensing\n    issues, legal justification). NACKs without accompanying reasoning may be\n    disregarded;\n  - utACK means \"I have not tested the code, but I have reviewed it and it looks\n    OK, I agree it can be merged\";\n  - Concept ACK means \"I agree in the general principle of this pull request\";\n  - Nit refers to trivial, often non-blocking issues.\n\nReviewers should include the commit hash which they reviewed in their comments.\n\nProject maintainers reserve the right to weigh the opinions of peer reviewers\nusing common sense judgement and also may weight based on meritocracy: Those\nthat have demonstrated a deeper commitment and understanding towards the project\n(over time) or have clear domain expertise may naturally have more weight, as\none would expect in all walks of life.\n\nWhere a patch set affects consensus critical code, the bar will be set much\nhigher in terms of discussion and peer review requirements, keeping in mind that\nmistakes could be very costly to the wider community. This includes refactoring\nof consensus critical code.\n\nWhere a patch set proposes to change the LUX consensus, it must have been\ndiscussed extensively on the forums and Slack, be accompanied by a widely\ndiscussed Proposal and have a generally widely perceived technical consensus of being\na worthwhile change based on the judgement of the maintainers.\n\n### Finding Reviewers\n\nAs most reviewers are themselves developers with their own projects, the review\nprocess can be quite lengthy, and some amount of patience is required. If you find\nthat you've been waiting for a pull request to be given attention for several\nmonths, there may be a number of reasons for this, some of which you can do something\nabout:\n\n  - It may be because of a feature freeze due to an upcoming release. During this time,\n    only bug fixes are taken into consideration. If your pull request is a new feature,\n    it will not be prioritized until the release is over. Wait for release.\n  - It may be because the changes you are suggesting do not appeal to people. Rather than\n    nits and critique, which require effort and means they care enough to spend time on your\n    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n    (because people don't assume *others* won't actually like the proposal). Don't take\n    that personally, though! Instead, take another critical look at what you are suggesting\n    and see if it: changes too much, is too broad, doesn't adhere to the\n    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n    Identify and address any of the issues you find. Then ask e.g. on Slack if someone could give\n    their opinion on the concept itself.\n  - It may be because your code is too complex for all but a few people. And those people\n    may not have realized your pull request even exists. A great way to find people who\n    are qualified and care about the code you are touching is the\n    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n    find the person touching the code you are touching before you and see if you can find\n    them and give them a nudge. Don't be incessant about the nudging though.\n  - Finally, if all else fails, ask on Slack or elsewhere for someone to give your pull request\n    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n    when someone else is asking for feedback on their code, and universe balances out.\n\n\nRelease Policy\n--------------\n\nThe project leader is the release manager for each Luxcore release.\n\nCopyright\n---------\n\nBy contributing to this repository, you agree to license your work under the\nMIT license unless specified otherwise in `contrib/debian/copyright` or at\nthe top of the file itself. Any work contributed where you are not the original\nauthor must contain its license header with the original author(s) and source.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 0.291015625,
          "content": "Building LUX\n\nUse the autogen script to prepare the build environment.\n\n    ./autogen.sh\n    ./configure\n    make\n\nAlways verify the signatures and checksums.\n\nSee doc/build-*.md for instructions on building luxd,\nthe intended-for-services, no-graphical-interface, reference\nimplementation of LUX.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 8.25390625,
          "content": "ACLOCAL_AMFLAGS = -I build-aux/m4\nSUBDIRS = src\n.PHONY: deploy FORCE\n\nGZIP_ENV=\"-9n\"\nexport PYTHONPATH\n\nBITCOIND_BIN=$(top_builddir)/src/luxd$(EXEEXT)\nBITCOIN_QT_BIN=$(top_builddir)/src/qt/lux-qt$(EXEEXT)\nBITCOIN_CLI_BIN=$(top_builddir)/src/lux-cli$(EXEEXT)\nBITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n\nempty :=\nspace := $(empty) $(empty)\n\nOSX_APP=LUX-Qt.app\nOSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\nOSX_DMG = $(OSX_VOLNAME).dmg\nOSX_BACKGROUND_SVG=background.svg\nOSX_BACKGROUND_IMAGE=background.tiff\nOSX_BACKGROUND_IMAGE_DPIS=36 72\nOSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\nOSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\nOSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\nOSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\nOSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\nOSX_QT_TRANSLATIONS = da,de,es,fr,hu,ru,uk,zh_CN,zh_TW\n\nDIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n\nWINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n  $(top_srcdir)/doc/README_windows.txt\n\nOSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n  $(OSX_DSSTORE_GEN) \\\n  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n\nCOVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n  leveldb_baseline.info test_lux_filtered.info total_coverage.info \\\n  baseline_filtered.info block_test_filtered.info \\\n  leveldb_baseline_filtered.info test_lux_coverage.info test_lux.info\n\ndist-hook:\n\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n\ndistcheck-hook:\n\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n\ndistcleancheck:\n\t@:\n\n$(BITCOIN_WIN_INSTALLER): all-recursive\n\t$(MKDIR_P) $(top_builddir)/release\n\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n\t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n\t  echo error: could not build $@\n\n$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n\t$(MAKE) -C src $(patsubst src/%,%,$@)\n\n$(OSX_APP)/Contents/PkgInfo:\n\t$(MKDIR_P) $(@D)\n\t@echo \"APPL????\" > $@\n\n$(OSX_APP)/Contents/Resources/empty.lproj:\n\t$(MKDIR_P) $(@D)\n\t@touch $@\n\n$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n\t$(MKDIR_P) $(@D)\n\t$(INSTALL_DATA) $< $@\n\n$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n\t$(MKDIR_P) $(@D)\n\t$(INSTALL_DATA) $< $@\n\n$(OSX_APP)/Contents/MacOS/LUX-Qt: $(BITCOIN_QT_BIN)\n\t$(MKDIR_P) $(@D)\n\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n\n$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n\t$(MKDIR_P) $(@D)\n\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n\nOSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n  $(OSX_APP)/Contents/MacOS/LUX-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n\nosx_volname:\n\techo $(OSX_VOLNAME) >$@\n\nif BUILD_DARWIN\n$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -add-resources contrib/macdeploy/libs/libboost_system-mt.dylib\n\n$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n\ttiffutil -cathidpicheck $^ -out $@\n\ndeploydir: $(OSX_DMG)\nelse\nAPP_DIST_DIR=$(top_builddir)/dist\nAPP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n\n$(APP_DIST_DIR)/Applications:\n\t@rm -f $@\n\t@cd $(@D); $(LN_S) /Applications $(@F)\n\n$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/LUX-Qt\n\n$(OSX_DMG): $(APP_DIST_EXTRAS)\n\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n\ndpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\nOSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n\t$(MKDIR_P) $(@D)\n\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n\n$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n\n$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/LUX-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n\ndeploydir: $(APP_DIST_EXTRAS)\nendif\n\nif TARGET_DARWIN\nappbundle: $(OSX_APP_BUILT)\ndeploy: $(OSX_DMG)\nendif\nif TARGET_WINDOWS\ndeploy: $(BITCOIN_WIN_INSTALLER)\nendif\n\n$(BITCOIN_QT_BIN): FORCE\n\t$(MAKE) -C src qt/$(@F)\n\n$(BITCOIND_BIN): FORCE\n\t$(MAKE) -C src $(@F)\n\n$(BITCOIN_CLI_BIN): FORCE\n\t$(MAKE) -C src $(@F)\n\nif USE_LCOV\n\nbaseline.info:\n\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n\nbaseline_filtered.info: baseline.info\n\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n\nleveldb_baseline.info: baseline_filtered.info\n\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n\nleveldb_baseline_filtered.info: leveldb_baseline.info\n\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n\nbaseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n\ntest_lux.info: baseline_filtered_combined.info\n\t$(MAKE) -C src/ check\n\t$(LCOV) -c -d $(abs_builddir)/src -t test_lux -o $@\n\t$(LCOV) -z -d $(abs_builddir)/src\n\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n\ntest_lux_filtered.info: test_lux.info\n\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n\nblock_test.info: test_lux_filtered.info\n\t$(MKDIR_P) qa/tmp\n\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool 0\n\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n\t$(LCOV) -z -d $(abs_builddir)/src\n\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n\nblock_test_filtered.info: block_test.info\n\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n\ntest_lux_coverage.info: baseline_filtered_combined.info test_lux_filtered.info\n\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_lux_filtered.info -o $@\n\ntotal_coverage.info:  baseline_filtered_combined.info test_lux_filtered.info block_test_filtered.info\n\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_lux_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n\ntest_lux.coverage/.dirstamp:  test_lux_coverage.info\n\t$(GENHTML) -s $< -o $(@D)\n\t@touch $@\n\ntotal.coverage/.dirstamp: total_coverage.info\n\t$(GENHTML) -s $< -o $(@D)\n\t@touch $@\n\ncov: test_lux.coverage/.dirstamp total.coverage/.dirstamp\n\nendif\n\nif USE_COMPARISON_TOOL\ncheck-local:\n\t$(MKDIR_P) qa/tmp\n\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\nendif\n\nEXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/pull-tester/run-bitcoin-cli qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n\nCLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n\n.INTERMEDIATE: $(COVERAGE_INFO)\n\nclean-local:\n\trm -rf test_lux.coverage/ total.coverage/ $(OSX_APP)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.212890625,
          "content": "![LUX Logo](src/qt/res/images/lux_logo_horizontal.png)\n\nEMPOWERING PEOPLE\n\nLuxcore is GNU AGPLv3 licensed.\n\n[![Build Status](https://travis-ci.org/LUX-Core/lux.svg?branch=master)](https://travis-ci.org/LUX-Core/lux) [![GitHub version](https://badge.fury.io/gh/LUX-Core%2Flux.png)](https://badge.fury.io/gh/LUX-Core%2Flux.png) [![HitCount](http://hits.dwyl.io/LUX-Core/lux.svg)](http://hits.dwyl.io/LUX-Core/lux)\n<a href=\"https://discord.gg/ndUg9va\"><img src=\"https://discordapp.com/api/guilds/364500397999652866/embed.png\" alt=\"Discord server\" /></a> <a href=\"https://twitter.com/intent/follow?screen_name=LUX_COIN\"><img src=\"https://img.shields.io/twitter/follow/LUX_COIN.svg?style=social&logo=twitter\" alt=\"follow on Twitter\"></a>\n                                                                                                                                                     \n[![Build history](https://buildstats.info/travisci/chart/LUX-Core/lux?branch=master)](https://travis-ci.org/LUX-Core/lux?branch=master)\n\n[Website](https://luxcore.io) — [Luxgate](https://luxcore.io/luxgate/) - [PoS Web Wallet](https://www.luxcore.io/poswebwallet/) — [Block Explorer](https://explorer.luxcore.io/) — [Blog](https://reddit.com/r/LUXCoin) — [Forum](https://bitcointalk.org/index.php?topic=2254046.0) — [Telegram](https://t.me/LUXcoinOfficialChat) — [Twitter](https://twitter.com/LUX_Coin)\n\nFeatures\n=============\n\n* Hybrid PoW/PoS\n* Hybrid masternode\n* Smart contract\n* New RX2 algorithm\n* Luxgate\n\n\nDeveloped by Luxcore, LUX (LUX Coin) is a hybrid cryptocurrency utilizing both proof-of-stake and proof-of-work algorithms to enhance blockchain security and decentralization. Luxcore's hybrid consensus model employs masternodes to provide specialized functions and further secure the chain while providing additional rewards to coin holders. The LUX blockchain enables developers to utilize smart contracts and decentralized applications.\n\nLuxcore continues to develop products for the LUX blockchain including Luxgate (a trustless, peer to peer decentralized exchange) and Luxedge (a decentralized software development platform and repository).\n\nLUX was created in 2017 as a fork of the Bitcoin codebase, and aims to introduce new innovations and services to the broader crypto community with cross-chain and decentralized solutions.\n\n\n## Coin Specifications\n\n| Specification | Value |\n|:-----------|:-----------|\n| Total Blocks | `6,000,000` |\n| Block Size | `4MB` |\n| Block Time | `60s` |\n| PoW Block Time | `120s`   |\n| PoW Reward | `5 (POW) + 2 (MN) + 1 (DEV FEE)` |\n| PoS Reward | `1 LUX` |\n| Stake Time | `36 hours` | \n| Masternode Requirement | `16,120 LUX` |\n| Masternode Reward | `25% PoW/PoS` |\n| Port | `26969` |\n| RPC Port | `9888` |\n| Masternode Port | `26969` |\n| Lux legacy address start with | `L` |\n| p2sh-segwit address start with | `S` |\n| Bech32 address start with | `bc` |\n\n* NOTE: \"getrawchangeaddress p2sh-segwit\" to get p2sh-segwit address \n\nInstructions\n-----------\n* [Win-Lux-qt](https://docs.luxcore.io/docs/user-guide-windows)\n\n* [Mac-Lux-qt](https://docs.luxcore.io/docs/user-guide-mac)\n\n* [Lux Masternode](https://docs.luxcore.io/docs/how-to-setup-a-masternode)\n\n\nBuild Lux wallet\n----------\n\n### Building for 32-bit Windows\n\nThe next three steps are an example of how to acquire the source and build in an appropriate way.\n        \nAcquire the source and install dependencies.\n\n    git clone https://github.com/LUX-Core/lux\n    sudo chmod -R a+rw lux\n    cd lux/depends\n    ./install-dependencies.sh\n    \nSet the default mingw-w32 g++ compiler option to auto (option 0) by default.\n\n    sudo update-alternatives --config i686-w64-mingw32-g++\n    \nBuild in the usual way.\n\n    ./build-wins.sh\n    \n### Building for 64-bit Windows   \n\nThe next three steps are an example of how to acquire the source and build in an appropriate way.\n        \nAcquire the source and install dependencies.\n\n    git clone https://github.com/LUX-Core/lux\n    sudo chmod -R a+rw lux\n    cd lux/depends\n    ./install-dependencies.sh\n    \nSet the default mingw-w64 g++ compiler option to posix (option 1).\n\n    sudo update-alternatives --config x86_64-w64-mingw32-g++\n    \nBuild in the usual way.\n\n    ./build-wins.sh x64\n\n### Build on Ubuntu\n\nUse\n\n    sudo add-apt-repository ppa:bitcoin/bitcoin; git clone https://github.com/LUX-Core/lux; cd lux; depends/install-dependencies.sh; ./autogen.sh; ./configure --disable-tests --with-boost-libdir=/usr/local/lib; make clean; make -j$(nproc)\n\n\nAdd bitcoin repository for Berkeley DB 4.8\n\n    sudo add-apt-repository ppa:bitcoin/bitcoin\n\nClone lux repository\n\n    git clone https://github.com/LUX-Core/lux\n\nBuild lux \n\n    cd lux\n    ./depends/install-dependencies.sh\n    ./autogen.sh\n    ./configure --disable-tests\n    make -j$(nproc)\n\n### Build on OSX\n\nThe commands in this guide should be executed in a Terminal application.\nThe built-in one is located in `/Applications/Utilities/Terminal.app`.\n\n#### Preparation\n\nInstall the OS X command line tools:\n\n`xcode-select --install`\n\nWhen the popup appears, click `Install`.\n\nIf you're running macOS Mojave 10.14/Xcode 10.0 or later, and want to use the depends system, you'll also need to use the following script to install the macOS system headers into /usr/include.\n\n    open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg\n\nThen install [Homebrew](https://brew.sh)\n\n    /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n#### Dependencies\n\n    brew install cmake automake berkeley-db4 leveldb libtool boost@1.64 --c++11 --without-single --without-static miniupnpc openssl pkg-config protobuf qt5 libevent imagemagick --with-librsvg\n\nLink boost 1.64\n\n    brew link boost@1.64 --force\n\n#### Build Luxcore\n\nClone the Lux source code and cd into lux\n\n        git clone https://github.com/LUX-Core/lux\n        cd lux\n        ./building/mac/requirements.sh\n        ./building/mac/build.sh\n\nSetup and Build: Arch Linux\n-----------------------------------\nThis example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n\n    pacman -S git base-devel boost libevent python\n    git clone https://github.com/LUX-Core/lux\n    cd lux/\n    ./autogen.sh\n    ./configure --without-miniupnpc --disable-tests\n    make -j$(nproc)\n\nNote:\nEnabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\nor building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n`--with-incompatible-bdb` according to the\nAs mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\nnode software is desired, Berkeley DB 4.8 must be used.\n\n\nARM Cross-compilation\n-------------------\nThese steps can be performed on, for example, an Ubuntu VM. The depends system\nwill also work on other Linux distributions, however the commands for\ninstalling the toolchain will be different.\n\nMake sure you install the build requirements mentioned above.\nThen, install the toolchain and curl:\n\n    sudo apt-get install g++-arm-linux-gnueabihf curl\n\nTo build executables for ARM:\n\n    cd depends\n    make HOST=arm-linux-gnueabihf NO_QT=1\n    cd ..\n    ./configure --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\n    make -j$(nproc)\n\nFor further documentation on the depends system see [README.md](../depends/README.md) in the depends directory.\n\nBuilding on FreeBSD\n--------------------\n\nClang is installed by default as `cc` compiler, this makes it easier to get\nstarted than on [OpenBSD](build-openbsd.md). Installing dependencies:\n\n    pkg install autoconf automake libtool pkgconf\n    pkg install boost-libs openssl libevent\n    pkg install gmake\n\nYou need to use GNU make (`gmake`) instead of `make`.\n(`libressl` instead of `openssl` will also work)\n\nFor the wallet (optional):\n\n    ./contrib/install_db4.sh `pwd`\n    setenv BDB_PREFIX $PWD/db4\n\nThen build using:\n\n    ./autogen.sh\n    ./configure BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx\"\n    gmake\n\nDevelopment Process\n-------------------\n\nThe `master` branch is regularly built and tested, but is not guaranteed to be\ncompletely stable. [Tags](https://github.com/LUX-Core/lux/tags) are created\nregularly to indicate new official, stable release versions of Lux.\n\nThe contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n\n\nTesting\n-------\n\nTesting and code review is the bottleneck for development; we get more pull\nrequests than we can review and test on short notice. Please be patient and help out by testing\nother people's pull requests, and remember this is a security-critical project where any mistake might cost people\nlots of money.\n\n### Automated Testing\n\nDevelopers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\nsubmit new unit tests for old code. Unit tests can be compiled and run\n(assuming they weren't disabled in configure) with: `make check`. Further details on running\nand extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n\nThere are also [regression and integration tests](/qa) of the RPC interface, written\nin Python, that are run automatically on the build server.\nThese tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`\n\n### Manual Quality Assurance (QA) Testing\n\nChanges should be tested by somebody other than the developer who wrote the\ncode. This is especially important for large or high-risk changes. It is useful\nto add a test plan to the pull request description if testing the changes is\nnot straightforward.\n\n### Issue\n\n We try to prompt our users for the basic information We always need for new issues.\n Please fill out the issue template below and submit it to our discord channel\n  <a href=\"https://discord.gg/ndUg9va\"><img src=\"https://discordapp.com/api/guilds/364500397999652866/embed.png\" alt=\"Discord server\" /></a>\n \n [ISSUE_TEMPLATE](doc/template/ISSUE_TEMPLATE_example.md)\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FLUX-Core%2Flux.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2FLUX-Core%2Flux?ref=badge_large)\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.326171875,
          "content": "#!/bin/sh\nset -e\nsrcdir=\"$(dirname $0)\"\ncd \"$srcdir\"\nif [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n  export LIBTOOLIZE\nfi\nwhich autoreconf >/dev/null || \\\n  (echo \"configuration failed, please install autoconf first\" && exit 1)\nautoreconf --install --force --warnings=all"
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "building",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 45.3681640625,
          "content": "dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\nAC_PREREQ([2.60])\ndefine(_CLIENT_VERSION_MAJOR, 5)\ndefine(_CLIENT_VERSION_MINOR, 5)\ndefine(_CLIENT_VERSION_REVISION, 1)\ndefine(_CLIENT_VERSION_BUILD, 0)\ndefine(_CLIENT_VERSION_IS_RELEASE, true)\ndefine(_COPYRIGHT_YEAR, 2021)\ndefine(_COPYRIGHT_HOLDERS,[The %s developers])\ndefine(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Luxcore]])\nAC_INIT([Luxcore],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/lux-core/lux/issues],[lux],[https://luxcore.io/])\nAC_CONFIG_SRCDIR([src/main.cpp])\nAC_CONFIG_HEADERS([src/config/lux-config.h])\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_MACRO_DIR([build-aux/m4])\n\nBITCOIN_DAEMON_NAME=luxd\nBITCOIN_GUI_NAME=lux-qt\nBITCOIN_CLI_NAME=lux-cli\nBITCOIN_TX_NAME=lux-tx\n\ndnl Unless the user specified ARFLAGS, force it to be cr\nAC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\nif test \"x${ARFLAGS+set}\" != \"xset\"; then\n  ARFLAGS=\"cr\"\nfi\n\nAM_PROG_AS\nAC_CANONICAL_HOST\n\nAH_TOP([#ifndef LUX_CONFIG_H])\nAH_TOP([#define LUX_CONFIG_H])\nAH_BOTTOM([#endif //LUX_CONFIG_H])\n\ndnl faketime breaks configure and is only needed for make. Disable it here.\nunset FAKETIME\n\nif test \"x${CXXFLAGS+set}\" = \"xset\"; then\n  CXXFLAGS_overridden=yes\nelse\n  CXXFLAGS_overridden=no\nfi\n\nif test \"x${CFLAGS+set}\" = \"xset\"; then\n  CFLAGS_overridden=yes\nelse\n  CFLAGS_overridden=no\nfi\n\ndnl ==============================================================\ndnl Setup for automake\ndnl ==============================================================\n\nAM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n\ndnl faketime messes with timestamps and causes configure to be re-run.\ndnl --disable-maintainer-mode can be used to bypass this.\nAM_MAINTAINER_MODE([enable])\n\ndnl make the compilation flags quiet unless V=1 is used\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\ndnl Compiler checks (here before libtool).\nif test \"x${CXXFLAGS+set}\" = \"xset\"; then\n  CXXFLAGS_overridden=yes\nelse\n  CXXFLAGS_overridden=no\nfi\nAC_PROG_CXX\ndnl ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n\ndnl By default, libtool for mingw refuses to link static libs into a dll for\ndnl fear of mixing pic/non-pic objects, and import/export complications. Since\ndnl we have those under control, re-enable that functionality.\ncase $host in\n  *mingw*)\n     lt_cv_deplibs_check_method=\"pass_all\"\n  ;;\nesac\ndnl Require C++11 compiler (no GNU extensions)\nAX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\ndnl Check if -latomic is required for <std::atomic>\nCHECK_ATOMIC\n\ndnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\ndnl that we get the same -std flags for both.\nm4_ifdef([AC_PROG_OBJCXX],[\nif test \"x${OBJCXX+set}\" = \"x\"; then\n  OBJCXX=\"${CXX}\"\nfi\nAC_PROG_OBJCXX\n])\n\ndnl Libtool init checks.\nLT_INIT([pic-only])\n\ndnl Check/return PATH for base programs.\nAC_PATH_TOOL(AR, ar)\nAC_PATH_TOOL(RANLIB, ranlib)\nAC_PATH_TOOL(STRIP, strip)\nAC_PATH_TOOL(GCOV, gcov)\nAC_PATH_PROG(LCOV, lcov)\nAC_PATH_PROG(JAVA, java)\nAC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\nAC_PATH_PROG(GENHTML, genhtml)\nAC_PATH_PROG([GIT], [git])\nAC_PATH_PROG(CCACHE,ccache)\nAC_PATH_PROG(XGETTEXT,xgettext)\nAC_PATH_PROG(HEXDUMP,hexdump)\nAC_PATH_TOOL(READELF, readelf)\nAC_PATH_TOOL(CPPFILT, c++filt)\nAC_PATH_TOOL(OBJCOPY, objcopy)\n\nAC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n\n# This m4 will only be used if a system copy cannot be found. This is helpful\n# on systems where autotools are installed but the pkg-config macros are not in\n# a default location. It is currently used for building on OSX where autotools\n# are preinstalled but pkg-config comes from macports or homebrew. It should\n# probably be removed when building on <= 10.6 is no longer supported.\nm4_include([pkg.m4])\n\ndnl pkg-config check.\nPKG_PROG_PKG_CONFIG\n\n# Enable wallet\nAC_ARG_ENABLE([wallet],\n  [AS_HELP_STRING([--enable-wallet],\n  [enable wallet (default is yes)])],\n  [enable_wallet=$enableval],\n  [enable_wallet=yes])\n\n#enable auto-update feature\nAC_ARG_ENABLE([updater],\n  [AS_HELP_STRING([--enable-updater],\n  [enable auto-update (default is no)])],\n  [enable_updater=$enableval],\n  [enable_updater=no])\n\n\nAC_ARG_WITH([miniupnpc],\n  [AS_HELP_STRING([--with-miniupnpc],\n  [enable UPNP (default is yes if libminiupnpc is found)])],\n  [use_upnp=$withval],\n  [use_upnp=auto])\n\nAC_ARG_ENABLE([upnp-default],\n  [AS_HELP_STRING([--enable-upnp-default],\n  [if UPNP is enabled, turn it on at startup (default is no)])],\n  [use_upnp_default=$enableval],\n  [use_upnp_default=no])\n\nAC_ARG_ENABLE(tests,\n    AS_HELP_STRING([--enable-tests],[compile tests (default is no)]),\n    [use_tests=$enableval],\n    [use_tests=no])\n\nAC_ARG_WITH([comparison-tool],\n    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n    [use_comparison_tool=$withval],\n    [use_comparison_tool=no])\n\nAC_ARG_ENABLE([comparison-tool-reorg-tests],\n    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n    [use_comparison_tool_reorg_tests=$enableval],\n    [use_comparison_tool_reorg_tests=no])\n\nAC_ARG_WITH([qrencode],\n  [AS_HELP_STRING([--with-qrencode],\n  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n  [use_qr=$withval],\n  [use_qr=auto])\n\nAC_ARG_ENABLE([hardening],\n  [AS_HELP_STRING([--enable-hardening],\n  [attempt to harden the resulting executables (default is yes)])],\n  [use_hardening=$enableval],\n  [use_hardening=yes])\n\nAC_ARG_ENABLE([reduce-exports],\n  [AS_HELP_STRING([--enable-reduce-exports],\n  [attempt to reduce exported symbols in the resulting executables (default is yes)])],\n  [use_reduce_exports=$enableval],\n  [use_reduce_exports=auto])\n\nAC_ARG_ENABLE([ccache],\n  [AS_HELP_STRING([--enable-ccache],\n  [use ccache for building (default is yes if ccache is found)])],\n  [use_ccache=$enableval],\n  [use_ccache=auto])\n\nAC_ARG_ENABLE([lcov],\n  [AS_HELP_STRING([--enable-lcov],\n  [enable lcov testing (default is no)])],\n  [use_lcov=yes],\n  [use_lcov=no])\n\nAC_ARG_ENABLE([glibc-back-compat],\n  [AS_HELP_STRING([--enable-glibc-back-compat],\n  [enable backwards compatibility with glibc and libstdc++])],\n  [use_glibc_compat=$enableval],\n  [use_glibc_compat=no])\n\nAC_ARG_ENABLE([asm],\n  [AS_HELP_STRING([--enable-asm],\n  [Enable assembly routines (default is yes)])],\n  [use_asm=$enableval],\n  [use_asm=yes])\n\nif test \"x$use_asm\" = xyes; then\n  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\nfi\n\nAC_ARG_ENABLE([zmq],\n  [AS_HELP_STRING([--disable-zmq],\n  [disable ZMQ notifications])],\n  [use_zmq=$enableval],\n  [use_zmq=yes])\n\nAC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n\n# Enable debug\nAC_ARG_ENABLE([debug],\n    [AS_HELP_STRING([--enable-debug],\n                    [use debug compiler flags and macros (default is no)])],\n    [enable_debug=$enableval],\n    [enable_debug=no])\n\nif test \"x$enable_debug\" = xyes; then\n    if test \"x$GCC\" = xyes; then\n        CFLAGS=\"-g -ggdb -DDEBUG\"\n        CPPFLAGS=\"-g -ggdb -DDEBUG\"\n    fi\n    if test \"x$GXX\" = xyes; then\n        CXXFLAGS=\"-g -ggdb -DDEBUG\"\n    fi\nfi\n\n# Enable dump extra debug info\nAC_ARG_ENABLE([debug-xdump],\n    [AS_HELP_STRING([--enable-xdebug],\n                    [dump extra debug info on stderr (or stdout) (default is no)])],\n    [enable_debug_xdump=$enableval],\n    [enable_debug_xdump=no])\nif test \"x$enable_debug_xdump\" = xyes; then\n    if test \"x$GCC\" = xyes; then\n        CFLAGS=\"$CFLAGS -DDEBUG_DUMP_STAKING_INFO\"\n    fi\n    if test \"x$GXX\" = xyes; then\n        CXXFLAGS=\"$CXXFLAGS -DDEBUG_DUMP_STAKING_INFO\"\n    fi\nfi\n\n# Enable change addresses by default\nAC_ARG_ENABLE([change-addresses-default],\n  [AS_HELP_STRING([--enable-change-addresses-default],\n  [enable change addresses (default is no)])],\n  [enable_change_addresses_default=$enableval],\n  [enable_change_addresses_default=no])\n\n# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n# compatibility.\nAX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse -msse2 -msse4.1 -msse4.2\"]],,[[$CXXFLAG_WERROR]])\n\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\nAC_MSG_CHECKING(for assembler crc32 support)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <stdint.h>\n    #if defined(_MSC_VER)\n    #include <intrin.h>\n    #elif defined(__GNUC__) && defined(__SSE4_2__)\n    #include <nmmintrin.h>\n    #endif\n  ]],[[\n    uint64_t l = 0;\n    l = _mm_crc32_u8(l, 0);\n    l = _mm_crc32_u32(l, 0);\n    l = _mm_crc32_u64(l, 0);\n    return l;\n  ]])],\n [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\n## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n##       compatibility with the legacy buildsystem.\n##\nif test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\nfi\nCPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n\nAC_ARG_WITH([utils],\n  [AS_HELP_STRING([--with-utils],\n  [build lux-cli lux-tx (default=yes)])],\n  [build_bitcoin_utils=$withval],\n  [build_bitcoin_utils=yes])\n\nAC_ARG_WITH([libs],\n  [AS_HELP_STRING([--with-libs],\n  [build libraries (default=no)])],\n  [build_bitcoin_libs=$withval],\n  [build_bitcoin_libs=no])\n\nAC_ARG_WITH([daemon],\n  [AS_HELP_STRING([--with-daemon],\n  [build luxd daemon (default=yes)])],\n  [build_bitcoind=$withval],\n  [build_bitcoind=yes])\n\nAC_LANG_PUSH([C++])\n\nuse_pkgconfig=yes\ncase $host in\n  *mingw*)\n\n     #pkgconfig does more harm than good with MinGW\n     use_pkgconfig=no\n\n     TARGET_OS=windows\n     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n\n     # -static is interpreted by libtool, where it has a different meaning.\n     # In libtool-speak, it's -all-static.\n     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n\n     AC_PATH_PROG([MAKENSIS], [makensis], none)\n     if test x$MAKENSIS = xnone; then\n       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n     fi\n\n     AC_PATH_TOOL(WINDRES, windres, none)\n     if test x$WINDRES = xnone; then\n       AC_MSG_ERROR(\"windres not found\")\n     fi\n\n     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n      LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n       CXXFLAGS=\"$CXXFLAGS -w\"\n     fi\n     case $host in\n       i?86-*) WINDOWS_BITS=32 ;;\n       x86_64-*) WINDOWS_BITS=64 ;;\n       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n     esac\n     AC_SUBST(WINDOWS_BITS)\n\n     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n     dnl also overridden to prevent their insertion later.\n     dnl This should only affect dll's.\n     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n     postdeps_CXX=\n\n     ;;\n  *darwin*)\n     TARGET_OS=darwin\n     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n     if  test x$cross_compiling != xyes; then\n       BUILD_OS=darwin\n       AC_CHECK_PROG([PORT],port, port)\n       if test x$PORT = xport; then\n         dnl add default macports paths\n         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n         LIBS=\"$LIBS -L/opt/local/lib\"\n         if test -d /opt/local/include/db48; then\n           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n         fi\n       fi\n\n       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n       AC_CHECK_PROG([BREW],brew, brew)\n       if test x$BREW = xbrew; then\n         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n         dnl in expected paths because they may conflict with system files. Ask\n         dnl Homebrew where each one is located, then adjust paths accordingly.\n         dnl It's safe to add these paths even if the functionality is disabled by\n         dnl the user (--without-wallet or --without-gui for example).\n\n         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n         if test x$openssl_prefix != x; then\n           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n           export PKG_CONFIG_PATH\n         fi\n         if test x$bdb_prefix != x; then\n           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n         fi\n         if test x$qt5_prefix != x; then\n           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n           export PKG_CONFIG_PATH\n         fi\n       fi\n     else\n       case $build_os in\n         *darwin*)\n           BUILD_OS=darwin\n           ;;\n         *)\n           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n           AC_PATH_TOOL([OTOOL], [otool], otool)\n           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n\n           dnl libtool will try to strip the static lib, which is a problem for\n           dnl cross-builds because strip attempts to call a hard-coded ld,\n           dnl which may not exist in the path. Stripping the .a is not\n           dnl necessary, so just disable it.\n           old_striplib=\n           ;;\n       esac\n     fi\n\n     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n     OBJCXXFLAGS=\"$CXXFLAGS\"\n     ;;\n     *linux*)\n        LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n        ;;\n      *)\n        OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n        LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n        CPPFLAGS=\"$CPPFLAGS\"\n     ;;\nesac\n\nif test x$TARGET_OS = xwindows; then\n\tCPPFLAGS=\"-Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-deprecated -Wno-cpp $CPPFLAGS -DLUX_BUILD\"\n\tCXXFLAGS=\"-Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-deprecated -Wno-cpp $CXXFLAGS\"\nelif test x$TARGET_OS = xdarwin; then\n\tCPPFLAGS=\"-Wno-inconsistent-missing-override -Wno-deprecated-declarations -Wno-unknown-pragmas -Wno-implicit-fallthrough $CPPFLAGS -DLUX_BUILD\"\n\tCXXFLAGS=\"-Wno-inconsistent-missing-override -Wno-deprecated-declarations -Wno-unknown-pragmas -Wno-implicit-fallthrough $CXXFLAGS\"\nelse\n\tCPPFLAGS=\"-Wno-unknown-pragmas -Wno-deprecated -Wno-deprecated-declarations -Wno-cpp -Wno-implicit-fallthrough $CPPFLAGS -DLUX_BUILD\"\n\tCXXFLAGS=\"-Wno-unknown-pragmas -Wno-deprecated-declarations -Wno-cpp $CXXFLAGS\"\nfi\n\n\nif test x$use_pkgconfig = xyes; then\n  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])\n  m4_ifdef([PKG_PROG_PKG_CONFIG], [\n  PKG_PROG_PKG_CONFIG\n  if test x\"$PKG_CONFIG\" = \"x\"; then\n    AC_MSG_ERROR(pkg-config not found.)\n  fi\n  ])\nfi\n\nif test x$use_comparison_tool != xno; then\n  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\nfi\n\nif test x$use_comparison_tool_reorg_tests != xno; then\n  if test x$use_comparison_tool == x; then\n    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n  fi\n  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\nelse\n  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\nfi\n\nif test x$use_lcov == xyes; then\n  if test x$LCOV == x; then\n    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n  fi\n  if test x$GCOV == x; then\n    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n  fi\n  if test x$JAVA == x; then\n    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n  fi\n  if test x$GENHTML == x; then\n    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n  fi\n  if test x$use_comparison_tool == x; then\n    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n  fi\n  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n  CXXFLAGS=\"$CXXFLAGS -Og\"\nfi\n\ndnl Require little endian\nAC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n\ndnl Check for pthread compile/link requirements\nAX_PTHREAD\nINCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n\n# The following macro will add the necessary defines to lux-config.h, but\n# they also need to be passed down to any subprojects. Pull the results out of\n# the cache and add them to CPPFLAGS.\nAC_SYS_LARGEFILE\n# detect POSIX or GNU variant of strerror_r\nAC_FUNC_STRERROR_R\n\nif test x$ac_cv_sys_file_offset_bits != x &&\n   test x$ac_cv_sys_file_offset_bits != xno &&\n   test x$ac_cv_sys_file_offset_bits != xunknown; then\n  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\nfi\n\nif test x$ac_cv_sys_large_files != x &&\n   test x$ac_cv_sys_large_files != xno &&\n   test x$ac_cv_sys_large_files != xunknown; then\n  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\nfi\n\nAX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n\nAX_GCC_FUNC_ATTRIBUTE([visibility])\nAX_GCC_FUNC_ATTRIBUTE([dllexport])\nAX_GCC_FUNC_ATTRIBUTE([dllimport])\n\nif test x$use_glibc_compat != xno; then\n\n  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n  #in anyway for back-compat.\n  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n\n  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n  # See which one is present here.\n  AC_MSG_CHECKING(__fdelt_chk type)\n  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n                    #undef _FORTIFY_SOURCE\n                  #endif\n                  #define _FORTIFY_SOURCE 2\n                  #include <sys/select.h>\n     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n    [ fdelt_type=\"long unsigned int\"],\n    [ fdelt_type=\"long int\"])\n  AC_MSG_RESULT($fdelt_type)\n  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\nelse\n  AC_SEARCH_LIBS([clock_gettime],[rt])\nfi\n\nif test x$TARGET_OS != xwindows; then\n  # All windows code is PIC, forcing it on just adds useless compile warnings\n  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\nfi\n\nif test x$use_hardening != xno; then\n  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n\n  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n    ])\n    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n  ])\n\n  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n\n  if test x$TARGET_OS != xwindows; then\n    # All windows code is PIC, forcing it on just adds useless compile warnings\n    AX_CHECK_COMPILE_FLAG([-fPIC],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIC\"])\n    AX_CHECK_LINK_FLAG([[-pic]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pic\"])\n  fi\n\n  case $host in\n    *mingw*)\n       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n    ;;\n  esac\n\n  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n  OBJCXXFLAGS=\"$CXXFLAGS\"\nfi\n\nif test x$TARGET_OS = xwindows; then\nLDFLAGS=\"$LDFLAGS -Wl,--stack,16777216\"\nfi\n\ndnl this flag screws up non-darwin gcc even when the check fails. special-case it.\nif test x$TARGET_OS = xdarwin; then\n  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\nfi\n\nAC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n\nAC_CHECK_DECLS([strnlen])\n\n# Check for daemon(3), unrelated to --with-daemon (although used by it)\nAC_CHECK_DECLS([daemon])\n\nAC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n\t\t[#if HAVE_ENDIAN_H\n                 #include <endian.h>\n                 #elif HAVE_SYS_ENDIAN_H\n                 #include <sys/endian.h>\n                 #endif])\n\nAC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n\t\t[#if HAVE_BYTESWAP_H\n                 #include <byteswap.h>\n                 #endif])\n\ndnl Check for MSG_NOSIGNAL\nAC_MSG_CHECKING(for MSG_NOSIGNAL)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n [[ int f = MSG_NOSIGNAL; ]])],\n [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n [ AC_MSG_RESULT(no)]\n)\n\nAC_SEARCH_LIBS([clock_gettime],[rt])\n\nAC_MSG_CHECKING([for visibility attribute])\nAC_LINK_IFELSE([AC_LANG_SOURCE([\n  int foo_def( void ) __attribute__((visibility(\"default\")));\n  int main(){}\n  ])],\n  [\n    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n    AC_MSG_RESULT(yes)\n  ],\n  [\n    AC_MSG_RESULT(no)\n    if test x$use_reduce_exports = xyes; then\n      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduced-exports.])\n    fi\n      AC_MSG_WARN([Cannot find a working visibility attribute. Disabling reduced exports.])\n      use_reduce_exports=no\n  ]\n)\n# Check thread_local\nTEMP_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\nAC_MSG_CHECKING([for thread_local support])\nAC_LINK_IFELSE([AC_LANG_SOURCE([\n  #include <thread>\n  static thread_local int foo = 0;\n  static void run_thread() { foo++;}\n  int main(){\n  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n  return foo;\n  }\n  ])],\n  [\n    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n    AC_MSG_RESULT(yes)\n  ],\n  [\n    AC_MSG_RESULT(no)\n  ]\n)\nLDFLAGS=\"$TEMP_LDFLAGS\"\n\n# Check for reduced exports\nif test x$use_reduce_exports = xyes; then\n  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\nfi\n\ndnl This can go away when we require c++11\nTEMP_CXXFLAGS=\"$CXXFLAGS\"\nCXXFLAGS=\"$CXXFLAGS -std=c++0x\"\nAC_MSG_CHECKING(for c++11 atomics)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n  #include <atomic>\n  ]],[[]])],\n  [ AC_MSG_RESULT(yes); LEVELDB_ATOMIC_CPPFLAGS=\"-DLEVELDB_ATOMIC_PRESENT\"; LEVELDB_ATOMIC_CXXFLAGS=\"-std=c++0x\"],\n  [ AC_MSG_RESULT(no)]\n)\nCXXFLAGS=\"$TEMP_CXXFLAGS\"\n\nLEVELDB_CPPFLAGS=\nLIBLEVELDB=\nLIBMEMENV=\nAM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\nAC_SUBST(LEVELDB_CPPFLAGS)\nAC_SUBST(LIBLEVELDB)\nAC_SUBST(LIBMEMENV)\n\n\nCRYPTOPP_CPPFLAGS=\nLIBCRYPTOPP=\nAM_CONDITIONAL([EMBEDDED_CRYPTOPP],[true])\nAC_SUBST(CRYPTOPP_CPPFLAGS)\nAC_SUBST(LIBCRYPTOPP)\n\n\nif test x$enable_wallet != xno; then\n    dnl Check for libdb_cxx only if wallet enabled\n    BITCOIN_FIND_BDB48\nfi\n\ndnl Check for libminiupnpc (optional)\nif test x$use_upnp != xno; then\n  AC_CHECK_HEADERS(\n    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n    [have_miniupnpc=no]\n  )\nfi\n\nBITCOIN_QT_INIT\n\ndnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\nBITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n\nif test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n    use_boost=no\nelse\n    use_boost=yes\nfi\n\nif test x$bitcoin_enable_qt = xyes; then\ndnl enable tradingdialog\n  AC_MSG_CHECKING([if the trading dialog should be enabled])\n    if test x$bitcoin_qt_got_major_vers = x5; then\n      AC_MSG_RESULT(yes)\n      AC_DEFINE_UNQUOTED([HAVE_QT5],[1],[Define to 1 to enable trading dialog])\n\n    else\n      AC_MSG_RESULT(no)\n    fi\nfi\n\nif test x$use_boost = xyes; then\n\ndnl Minimum required Boost version\ndefine(MINIMUM_REQUIRED_BOOST, 1.58.0)\n\ndnl Check for boost libs\nAX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\nAX_BOOST_SYSTEM\nAX_BOOST_FILESYSTEM\nAX_BOOST_PROGRAM_OPTIONS\nAX_BOOST_THREAD\nAX_BOOST_RANDOM\nAX_BOOST_CHRONO\n\ndnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\ndnl counter implementations. In 1.63 and later the std::atomic approach is default.\nm4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\nBOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n\nif test x$use_reduce_exports != xno; then\n  AC_MSG_CHECKING([for working boost reduced exports])\n  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n      @%:@include <boost/version.hpp>\n    ]], [[\n      #if BOOST_VERSION >= 104900\n      // Everything is okay\n      #else\n      #  error Boost version is too old\n      #endif\n    ]])],[\n      AC_MSG_RESULT(yes)\n    ],[:\n    if test x$use_reduce_exports = xauto; then\n      use_reduce_exports=no\n    else\n      if test x$use_reduce_exports = xyes; then\n        AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduced-exports.])\n      fi\n    fi\n    AC_MSG_RESULT(no)\n    AC_MSG_WARN([boost versions < 1.49 are known to have symbol visibility issues. Disabling reduced exports.])\n  ])\n  CPPFLAGS=\"$TEMP_CPPFLAGS\"\nfi\n\nelif test x$use_reduce_exports = xauto; then\n    use_reduce_exports=yes\nfi\n\nif test x$use_reduce_exports != xno; then\n    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\nfi\n\nif test x$use_tests = xyes; then\n\n  if test x$HEXDUMP = x; then\n    AC_MSG_ERROR(hexdump is required for tests)\n  fi\n\n\n  if test x$use_boost = xyes; then\n\n  AX_BOOST_UNIT_TEST_FRAMEWORK\n\n  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n  AC_MSG_CHECKING([for dynamic linked boost test])\n  TEMP_LIBS=\"$LIBS\"\n  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n  AC_LINK_IFELSE([AC_LANG_SOURCE([\n       #define BOOST_TEST_DYN_LINK\n       #define BOOST_TEST_MAIN\n        #include <boost/test/unit_test.hpp>\n\n       ])],\n    [AC_MSG_RESULT(yes)]\n    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n    [AC_MSG_RESULT(no)])\n  LIBS=\"$TEMP_LIBS\"\n  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n\n  fi\nfi\n\nif test x$use_boost = xyes; then\n\nBOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB $BOOST_RANDOM_LIB\"\n\ndnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\ndnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\ndnl a working version is available, else fall back to sleep. sleep was removed\ndnl after 1.56.\ndnl If neither is available, abort.\ndnl If sleep_for is used, boost_chrono becomes a requirement.\nif test x$ax_cv_boost_chrono = xyes; then\nTEMP_LIBS=\"$LIBS\"\nLIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB $LIBS\"\nTEMP_CPPFLAGS=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[\n  #include <boost/thread/thread.hpp>\n  #include <boost/version.hpp>\n  ]],[[\n  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n  #else\n   choke me\n  #endif\n  ]])],\n  [boost_sleep=yes; BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\";\n     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n  [boost_sleep=no])\nLIBS=\"$TEMP_LIBS\"\nCPPFLAGS=\"$TEMP_CPPFLAGS\"\nfi\n\nif test x$boost_sleep != xyes; then\nTEMP_LIBS=\"$LIBS\"\nLIBS=\"$BOOST_LIBS $LIBS\"\nTEMP_CPPFLAGS=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[\n  #include <boost/version.hpp>\n  #include <boost/thread.hpp>\n  #include <boost/date_time/posix_time/posix_time_types.hpp>\n  ]],[[\n  #if BOOST_VERSION <= 105600\n      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n  #else\n   choke me\n  #endif\n  ]])],\n  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n  [boost_sleep=no])\nLIBS=\"$TEMP_LIBS\"\nCPPFLAGS=\"$TEMP_CPPFLAGS\"\nfi\n\nif test x$boost_sleep != xyes; then\n  AC_MSG_ERROR(No working boost sleep implementation found.)\nfi\n\nfi\n\nif test x$use_pkgconfig = xyes; then\n  : dnl\n  m4_ifdef(\n    [PKG_CHECK_MODULES],\n    [\n      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n      if test x$use_qr != xno; then\n        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n      fi\n      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n        if test x$TARGET_OS != xwindows; then\n          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n        fi\n      fi\n\n      if test \"x$use_zmq\" = \"xyes\"; then\n        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n           use_zmq=no])\n      else\n          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n      fi\n\n    ]\n  )\nelse\n  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n\n  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n\n  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n    if test x$TARGET_OS != xwindows; then\n      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n    fi\n  fi\n\n  if test \"x$use_zmq\" = \"xyes\"; then\n    AC_CHECK_HEADER([zmq.h],\n      [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n      [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n       use_zmq=no\n       AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n    AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n      [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n       use_zmq=no\n       AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n  else\n    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n  fi\n\n  if test \"x$use_zmq\" = \"xyes\"; then\n    dnl Assume libzmq was built for static linking\n    case $host in\n      *mingw*)\n        ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n      ;;\n    esac\n  fi\n\n  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n  if test x$use_qr != xno; then\n    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n  fi\nfi\n\nAC_CHECK_LIB([crypto],[EVP_DecryptFinal_ex],[],[\n  AC_ARG_WITH([libressl],\n    [AS_HELP_STRING([--with-libressl],[Build with system LibreSSL (default is no; DANGEROUS; NOT SUPPORTED)])],\n    [AC_MSG_WARN([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])],\n    [AC_MSG_ERROR([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])]\n  )\n])\n\nCFLAGS_TEMP=\"$CFLAGS\"\nLIBS_TEMP=\"$LIBS\"\nCFLAGS=\"$CFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\nLIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\nAC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\nCFLAGS=\"$CFLAGS_TEMP\"\nLIBS=\"$LIBS_TEMP\"\n\ndnl univalue check\n\nneed_bundled_univalue=yes\n\nif test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n  need_bundled_univalue=no\nelse\n\nif test x$system_univalue != xno ; then\n  found_univalue=no\n  if test x$use_pkgconfig = xyes; then\n    : #NOP\n    m4_ifdef(\n      [PKG_CHECK_MODULES],\n      [\n        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n      ]\n    )\n  else\n    AC_CHECK_HEADER([univalue.h],[\n      AC_CHECK_LIB([univalue],  [main],[\n        UNIVALUE_LIBS=-lunivalue\n        found_univalue=yes\n      ],[true])\n    ],[true])\n  fi\n\n  if test x$found_univalue = xyes ; then\n    system_univalue=yes\n    need_bundled_univalue=no\n  elif test x$system_univalue = xyes ; then\n    AC_MSG_ERROR([univalue not found])\n  else\n    system_univalue=no\n  fi\nfi\n\nif test x$need_bundled_univalue = xyes ; then\n  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n  UNIVALUE_LIBS='univalue/libunivalue.la'\nfi\n\nfi\n\nAM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\nAC_SUBST(UNIVALUE_CFLAGS)\nAC_SUBST(UNIVALUE_LIBS)\n\nBITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n\nAC_MSG_CHECKING([whether to build luxd])\nAM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\nAC_MSG_RESULT($build_bitcoind)\n\nAC_MSG_CHECKING([whether to build utils (lux-cli lux-tx)])\nAM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\nAC_MSG_RESULT($build_bitcoin_utils)\n\nAC_MSG_CHECKING([whether to build libraries])\nAM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\nif test x$build_bitcoin_libs = xyes; then\n  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\nfi\nAC_MSG_RESULT($build_bitcoin_libs)\n\nAC_LANG_POP\n\nif test \"x$use_ccache\" != \"xno\"; then\n  AC_MSG_CHECKING(if ccache should be used)\n  if test x$CCACHE = x; then\n    if test \"x$use_ccache\" = \"xyes\"; then\n      AC_MSG_ERROR([ccache not found.]);\n    else\n      use_ccache=no\n    fi\n  else\n    use_ccache=yes\n    CC=\"$ac_cv_path_CCACHE $CC\"\n    CXX=\"$ac_cv_path_CCACHE $CXX\"\n  fi\n  AC_MSG_RESULT($use_ccache)\nfi\nif test \"x$use_ccache\" = \"xyes\"; then\n    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\nfi\n\ndnl enable wallet\nAC_MSG_CHECKING([if wallet should be enabled])\nif test x$enable_wallet != xno; then\n  AC_MSG_RESULT(yes)\n  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n\nelse\n  AC_MSG_RESULT(no)\nfi\n\ndnl enable updater\nAC_MSG_CHECKING([if updater should be enabled])\nif test x$enable_updater != xno; then\n  AC_MSG_RESULT(yes)\n  AC_DEFINE_UNQUOTED([ENABLE_UPDATER],[1],[Define to 1 to enable auto-update functions])\n\nelse\n  AC_MSG_RESULT(no)\nfi\n\n\ndnl enable upnp support\nAC_MSG_CHECKING([whether to build with support for UPnP])\nif test x$have_miniupnpc = xno; then\n  if test x$use_upnp = xyes; then\n     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n  fi\n  AC_MSG_RESULT(no)\nelse\n  if test x$use_upnp != xno; then\n    AC_MSG_RESULT(yes)\n    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n    use_upnp=yes\n    upnp_setting=0\n    if test x$use_upnp_default != xno; then\n      use_upnp_default=yes\n      upnp_setting=1\n    fi\n    AC_MSG_RESULT($use_upnp_default)\n    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n    if test x$TARGET_OS = xwindows; then\n      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n    fi\n  else\n    AC_MSG_RESULT(no)\n  fi\nfi\n\ndnl change addresses by default\nAC_MSG_CHECKING([if change addresses should be enabled by default])\nif test x$enable_change_addresses_default != xno; then\n  AC_MSG_RESULT(yes)\n  AC_DEFINE_UNQUOTED([ENABLE_CHANGE_ADDRESSES_DEFAULT],[1],[Define to 1 to enable change addresses by default])\nelse\n  AC_MSG_RESULT(no)\nfi\n\ndnl these are only used when qt is enabled\nif test x$bitcoin_enable_qt != xno; then\n  BUILD_QT=qt\n  dnl enable dbus support\n  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n  if test x$bitcoin_enable_qt_dbus != xno; then\n    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n  fi\n  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n\n  dnl enable qr support\n  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n  if test x$have_qrencode = xno; then\n    if test x$use_qr = xyes; then\n     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n    fi\n    AC_MSG_RESULT(no)\n  else\n    if test x$use_qr != xno; then\n      AC_MSG_RESULT(yes)\n      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n      use_qr=yes\n    else\n      AC_MSG_RESULT(no)\n    fi\n  fi\n\n  if test x$XGETTEXT = x; then\n    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n  fi\n\n  AC_MSG_CHECKING([whether to build test_lux-qt])\n  if test x$use_tests$bitcoin_enable_qt_test = xyesyes; then\n    AC_MSG_RESULT([yes])\n    BUILD_TEST_QT=\"yes\"\n  else\n    AC_MSG_RESULT([no])\n  fi\nfi\n\nAM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n\nAC_MSG_CHECKING([whether to build test_lux])\nif test x$use_tests = xyes; then\n  AC_MSG_RESULT([yes])\n  BUILD_TEST=\"test\"\nelse\n  AC_MSG_RESULT([no])\nfi\n\nAC_MSG_CHECKING([whether to reduce exports])\nif test x$use_reduce_exports != xno; then\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\nif test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\nfi\n\nAM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\nAM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\nAM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\nAM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\nAM_CONDITIONAL([ENABLE_UPDATER],[test x$enable_updater = xyes])\nAM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\nAM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\nAM_CONDITIONAL([HAVE_QT5], [test x$bitcoin_qt_got_major_vers = x5])\nAM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\nAM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\nAM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\nAM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\nAM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\nAM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\nAM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\nAM_CONDITIONAL([USE_LIBSECP256K1],[test x$use_libsecp256k1 = xyes])\nAM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\nAM_CONDITIONAL([ENABLE_CHANGE_ADDRESSES_DEFAULT],[test x$enable_change_addresses_default = xyes])\n\nAC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\nAC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\nAC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\nAC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\nAC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\nAC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\nAC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\nAC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\ndefine(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\nAC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\nAC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\nAC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\nAC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\nAC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\nAC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\nAC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\nAC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\nAC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\nAC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\nAC_SUBST(BITCOIN_DAEMON_NAME)\nAC_SUBST(BITCOIN_GUI_NAME)\nAC_SUBST(BITCOIN_CLI_NAME)\nAC_SUBST(BITCOIN_TX_NAME)\n\nAC_SUBST(RELDFLAGS)\nAC_SUBST(SSE42_CXXFLAGS)\nAC_SUBST(LIBTOOL_APP_LDFLAGS)\nAC_SUBST(USE_UPNP)\nAC_SUBST(USE_QRCODE)\nAC_SUBST(BOOST_LIBS)\nAC_SUBST(TESTDEFS)\nAC_SUBST(LEVELDB_TARGET_FLAGS)\nAC_SUBST(BUILD_TEST)\nAC_SUBST(BUILD_QT)\nAC_SUBST(EVENT_LIBS)\nAC_SUBST(EVENT_PTHREADS_LIBS)\nAC_SUBST(BUILD_TEST_QT)\nAC_SUBST(MINIUPNPC_CPPFLAGS)\nAC_SUBST(MINIUPNPC_LIBS)\nAC_SUBST(LEVELDB_ATOMIC_CPPFLAGS)\nAC_SUBST(LEVELDB_ATOMIC_CXXFLAGS)\nAC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\nAC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\nAC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\nAC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n\ndnl boost's m4 checks do something really nasty: they export these vars. As a\ndnl result, they leak into secp256k1's configure and crazy things happen.\ndnl Until this is fixed upstream and we've synced, we'll just un-export them.\nCPPFLAGS_TEMP=\"$CPPFLAGS\"\nunset CPPFLAGS\nCPPFLAGS=\"$CPPFLAGS_TEMP\"\n\nLDFLAGS_TEMP=\"$LDFLAGS\"\nunset LDFLAGS\nLDFLAGS=\"$LDFLAGS_TEMP\"\n\nLIBS_TEMP=\"$LIBS\"\nunset LIBS\nLIBS=\"$LIBS_TEMP\"\n\nPKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\nunset PKG_CONFIG_PATH\nPKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n\nPKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\nunset PKG_CONFIG_LIBDIR\nPKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n\nac_configure_args=\"${ac_configure_args} --disable-shared --with-bignum=no --enable-module-recovery --enable-module-ecdh --enable-experimental --disable-jni\"\nif test \"$TARGET_OS\" = \"windows\"; then\nac_configure_args=\"$ac_configure_args --with-asm=no --with-field=32bit --with-scalar=32bit\"\nfi\nAC_CONFIG_SUBDIRS([src/secp256k1])\n\nAC_OUTPUT\n\ndnl Taken from https://wiki.debian.org/RpathIssue\ncase $host in\n   *-*-linux-gnu)\n     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n     sed < libtool > libtool-2 \\\n     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n     mv libtool-2 libtool\n     chmod 755 libtool\n   ;;\nesac\n\ndnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\ncase ${OS} in\n   *Windows*)\n     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n   ;;\nesac\n\necho\necho \"Options used to compile and link:\"\necho \"  with wallet           = $enable_wallet\"\necho \"  with auto-update      = $enable_updater\"\necho \"  with gui / qt         = $bitcoin_enable_qt\"\necho \"  with change addresses = $enable_change_addresses_default\"\nif test x$bitcoin_enable_qt != xno; then\necho \"  qt version            = $bitcoin_qt_got_major_vers\"\necho \"  with qr               = $use_qr\"\nfi\necho \"  with zmq              = $use_zmq\"\necho \"  with test             = $use_tests\"\necho \"  with upnp             = $use_upnp\"\necho \"  use asm               = $use_asm\"\necho \"  use hardware CRC32    = $enable_hwcrc32\"\necho \"  debug enabled         = $enable_debug\"\necho\necho \"  target os             = $TARGET_OS\"\necho \"  build os              = $BUILD_OS\"\necho\necho \"  CC                    = $CC\"\necho \"  CFLAGS                = $CFLAGS\"\necho \"  CPPFLAGS              = $CPPFLAGS\"\necho \"  CXX                   = $CXX\"\necho \"  CXXFLAGS              = $CXXFLAGS\"\necho \"  LDFLAGS               = $LDFLAGS\"\necho \"  ARFLAGS               = $ARFLAGS\"\necho\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "depends",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg.m4",
          "type": "blob",
          "size": 7.6162109375,
          "content": "# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-\n# serial 1 (pkg-config-0.24)\n# \n# Copyright © 2004 Scott James Remnant <scott@netsplit.com>.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n# ----------------------------------\nAC_DEFUN([PKG_PROG_PKG_CONFIG],\n[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\nm4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\nm4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\nAC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\nAC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\nAC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n\nif test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\nfi\nif test -n \"$PKG_CONFIG\"; then\n\t_pkg_min_version=m4_default([$1], [0.9.0])\n\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n\t\tAC_MSG_RESULT([yes])\n\telse\n\t\tAC_MSG_RESULT([no])\n\t\tPKG_CONFIG=\"\"\n\tfi\nfi[]dnl\n])# PKG_PROG_PKG_CONFIG\n\n# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n#\n# Check to see whether a particular set of modules exists.  Similar\n# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n#\n# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n# only at the first occurence in configure.ac, so if the first place\n# it's called might be skipped (such as if it is within an \"if\", you\n# have to call PKG_CHECK_EXISTS manually\n# --------------------------------------------------------------\nAC_DEFUN([PKG_CHECK_EXISTS],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\nif test -n \"$PKG_CONFIG\" && \\\n    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n  m4_default([$2], [:])\nm4_ifvaln([$3], [else\n  $3])dnl\nfi])\n\n# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n# ---------------------------------------------\nm4_define([_PKG_CONFIG],\n[if test -n \"$$1\"; then\n    pkg_cv_[]$1=\"$$1\"\n elif test -n \"$PKG_CONFIG\"; then\n    PKG_CHECK_EXISTS([$3],\n                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n\t\t     [pkg_failed=yes])\n else\n    pkg_failed=untried\nfi[]dnl\n])# _PKG_CONFIG\n\n# _PKG_SHORT_ERRORS_SUPPORTED\n# -----------------------------\nAC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\nif $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n        _pkg_short_errors_supported=yes\nelse\n        _pkg_short_errors_supported=no\nfi[]dnl\n])# _PKG_SHORT_ERRORS_SUPPORTED\n\n\n# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n# [ACTION-IF-NOT-FOUND])\n#\n#\n# Note that if there is a possibility the first call to\n# PKG_CHECK_MODULES might not happen, you should be sure to include an\n# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n#\n#\n# --------------------------------------------------------------\nAC_DEFUN([PKG_CHECK_MODULES],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\nAC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\nAC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n\npkg_failed=no\nAC_MSG_CHECKING([for $1])\n\n_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n\nm4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\nand $1[]_LIBS to avoid the need to call pkg-config.\nSee the pkg-config man page for more details.])\n\nif test $pkg_failed = yes; then\n   \tAC_MSG_RESULT([no])\n        _PKG_SHORT_ERRORS_SUPPORTED\n        if test $_pkg_short_errors_supported = yes; then\n\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n        else \n\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n        fi\n\t# Put the nasty error message in config.log where it belongs\n\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n\n\tm4_default([$4], [AC_MSG_ERROR(\n[Package requirements ($2) were not met:\n\n$$1_PKG_ERRORS\n\nConsider adjusting the PKG_CONFIG_PATH environment variable if you\ninstalled software in a non-standard prefix.\n\n_PKG_TEXT])[]dnl\n        ])\nelif test $pkg_failed = untried; then\n     \tAC_MSG_RESULT([no])\n\tm4_default([$4], [AC_MSG_FAILURE(\n[The pkg-config script could not be found or is too old.  Make sure it\nis in your PATH or set the PKG_CONFIG environment variable to the full\npath to pkg-config.\n\n_PKG_TEXT\n\nTo get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n        ])\nelse\n\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n        AC_MSG_RESULT([yes])\n\t$3\nfi[]dnl\n])# PKG_CHECK_MODULES\n\n\n# PKG_INSTALLDIR(DIRECTORY)\n# -------------------------\n# Substitutes the variable pkgconfigdir as the location where a module\n# should install pkg-config .pc files. By default the directory is\n# $libdir/pkgconfig, but the default can be changed by passing\n# DIRECTORY. The user can override through the --with-pkgconfigdir\n# parameter.\nAC_DEFUN([PKG_INSTALLDIR],\n[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\nm4_pushdef([pkg_description],\n    [pkg-config installation directory @<:@]pkg_default[@:>@])\nAC_ARG_WITH([pkgconfigdir],\n    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n    [with_pkgconfigdir=]pkg_default)\nAC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\nm4_popdef([pkg_default])\nm4_popdef([pkg_description])\n]) dnl PKG_INSTALLDIR\n\n\n# PKG_NOARCH_INSTALLDIR(DIRECTORY)\n# -------------------------\n# Substitutes the variable noarch_pkgconfigdir as the location where a\n# module should install arch-independent pkg-config .pc files. By\n# default the directory is $datadir/pkgconfig, but the default can be\n# changed by passing DIRECTORY. The user can override through the\n# --with-noarch-pkgconfigdir parameter.\nAC_DEFUN([PKG_NOARCH_INSTALLDIR],\n[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\nm4_pushdef([pkg_description],\n    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\nAC_ARG_WITH([noarch-pkgconfigdir],\n    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n    [with_noarch_pkgconfigdir=]pkg_default)\nAC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\nm4_popdef([pkg_default])\nm4_popdef([pkg_description])\n]) dnl PKG_NOARCH_INSTALLDIR\n\n\n# PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n# [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n# -------------------------------------------\n# Retrieves the value of the pkg-config variable for the given module.\nAC_DEFUN([PKG_CHECK_VAR],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\nAC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n\n_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\nAS_VAR_COPY([$1], [pkg_cv_][$1])\n\nAS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n])# PKG_CHECK_VAR\n"
        },
        {
          "name": "qa",
          "type": "tree",
          "content": null
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}