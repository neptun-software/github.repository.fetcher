{
  "metadata": {
    "timestamp": 1736566401290,
    "page": 160,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nasa/fprime",
      "stars": 10138,
      "defaultBranch": "devel",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0810546875,
          "content": "---\nBasedOnStyle: Chromium\nIndentWidth: 4\nColumnLimit: 120\nAccessModifierOffset: -2"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.3681640625,
          "content": "# Clang-tidy configuration used on the whole code base, including tests and flight code\n\nChecks: >\n    bugprone-unhandled-self-assignment,\n    modernize-deprecated-headers,\n    modernize-redundant-void-arg,\n    modernize-use-bool-literals,\n    modernize-use-nullptr,\n    readability-braces-around-statements\n    -clang-analyzer-security.insecureAPI.rand,\nWarningsAsErrors: '*'\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.96484375,
          "content": "build/\nbuild*/\ngtest/\ndocs-cache/\nCMakePresets.json\n\nAutoXML/\ntest_harness/src/test_harness-C/application.out\n/.project\n/.cproject\n*.pyc\n*.o\n*Ac.*\n*ComponentReport.txt\nlib*.a\n*-bin\nac_dep\n*~\n.metadata\nRemoteSystemsTempFiles\n*.py.bak\n~*\n*.hash\n.DS_Store\n*.stackdump\nDict\n*.core\n\n*.gcov\n!**/test/ut/output/*.gcov\nGTestBase.*\nTesterBase.*\nTester.*\n!**/test/ut/GTestBase.*\n!**/test/ut/TesterBase.*\n!**/test/ut/Tester.*\nseed-history\n\n*.sconsign.dblite\n*.class\n.classpath\ndoxygen\n.scrub*\n.coverity*\ncoverity.out\n#*#\n.#*\n\n**/docs/*.html\n/docs/UsersGuide/api/*\n*.template.*\n\nlogs\n\ntest_harness/.autotools\ncore\n\n*.swp4\n\n*AppDictionary.xml\n*TopologyAppID.csv\n*TopologyAppAi_IDTableLog.txt\n\n.vscode\npy_dict\n.settings\nbuild-fprime-automatic*\n\n/Ref/bin\n/RPI/bin\n/ci-venv/\n/ci-logs*\n/ci-Framework-logs*\n/ci-Ref-logs*\nTesterBase.*\nGTestBase.*\n**/DefaultDict/serializable/*\n\nfprime-venv\nxml\ndepend\n\n/.idea/\n/venv/\n\nPacket-Views\ndocs/documentation/reference/api/cpp\ndocs/documentation/reference/api/cmake\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.08984375,
          "content": "[submodule \"googletest\"]\n\tpath = googletest\n\turl = https://github.com/google/googletest.git\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.341796875,
          "content": "repos:\n    -   repo: https://github.com/psf/black\n        rev: 19.3b0\n        hooks:\n        -   id: black\n            name: Format Python Code (black) in Fw/Python/\n            files: '^Fw/Python/'\n        -   id: black\n            name: Format Python Code (black) in Gds/\n            files: '^Gds/'\n            exclude: '^Gds/src/fprime_gds/wxgui/'"
        },
        {
          "name": "Autocoders",
          "type": "tree",
          "content": null
        },
        {
          "name": "CFDP",
          "type": "tree",
          "content": null
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.2421875,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - name: \"The F´ Framework Team\"\ntitle: \"F´: A Flight-Proven, Multi-Platform, Open-Source Flight Software Framework\"\nurl: \"https://github.com/nasa/fprime\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.947265625,
          "content": "####\n# CMakeLists.txt:\n#\n# Build core F prime.\n####\ncmake_minimum_required(VERSION 3.16)\nproject(FPrime C CXX)\nset(FPRIME_FRAMEWORK_PATH \"${CMAKE_CURRENT_LIST_DIR}\" CACHE PATH \"Location of F prime framework\" FORCE)\nset(FPRIME_PROJECT_ROOT \"${CMAKE_CURRENT_LIST_DIR}\" CACHE PATH \"Root path of F prime project\" FORCE)\n\n# Include the build for F prime.\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/cmake/FPrime.cmake\")\n\n# This cmake project is only intended to be used by CI and developers to test F-prime. We enable\n# -Wall and -Wextra on this particular project as a canary to warn about compilation\n# errors without impacting real projects, where a warning from an untested compiler could break the\n# build.\n\nadd_compile_options(\n    -Wall\n    -Wextra\n    -Werror\n    $<$<COMPILE_LANGUAGE:CXX>:-Wold-style-cast>\n    -Wno-unused-parameter\n)\n\n# Add -Wshadow, -Wconversion and -pedantic only for framework code, not the unit tests\n# TODO: uncomment -Wdouble-promotion once fpp is fixed\nif (NOT BUILD_TESTING)\n    add_compile_options(\n        -Wshadow\n        -pedantic\n        -Wconversion\n#        -Wdouble-promotion\n    )\nendif()\n\n# Turn on pedantic checks for clang, but disable specific checks that F' doesn't comply with.\n# GCC doesn't support disabling specific pedantic checks, so skip pedantic on GCC for now.\n#\n# -Wno-unused-parameter: Disable the unused parameter warning for now. F' has a lot of interfaces,\n# so unused method parameters are common in the F prime code base. Eventually all intentionally\n# unused parameters should be annotated to avoid this error.\n#\n# -Wno-gnu-zero-variadic-macro-arguments: gnu extension required to allow FW_ASSERT to support 0+\n# optional arguments\n#\n# -Wno-vla-extension: Variable length arrays are required to support sending to async serializable\n# ports. https://github.com/nasa/fprime/issues/945\n#\n# -Wno-zero-length-array: maximum port message size calculated by using sizeof on an array the size\n# of all the port's arguments. When port has no argument array is zero sized. Array is used at\n# compile time only.\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n    add_compile_options(\n        -pedantic\n        -Wno-gnu-zero-variadic-macro-arguments\n        $<$<COMPILE_LANGUAGE:CXX>:-Wno-vla-extension>\n        $<$<COMPILE_LANGUAGE:CXX>:-Wno-zero-length-array>\n    )\nelseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU\" AND NOT DEFINED CMAKE_CXX_CLANG_TIDY)\n    # The following is not supported by clang, which also causes issues when using clang-tidy\n    add_compile_options(\n        -Wno-format-truncation\n    )\nendif()\n\nfind_program(VALGRIND valgrind) # Find valgrind, and use it instead of leak check\n# For this testing cmake project, enable AddressSanitizer, a runtime memory sanitizer, on all unit tests\nif (BUILD_TESTING AND NOT VALGRIND)\n    add_compile_options(-fno-omit-frame-pointer -fsanitize=address -fsanitize=undefined)\n    add_link_options(-fno-omit-frame-pointer -fsanitize=address -fsanitize=undefined)\nendif()\n\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/cmake/FPrime-Code.cmake\")\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 1.8828125,
          "content": "{\n    \"version\": 4,\n    \"configurePresets\": [\n    {\n      \"name\": \"fprime\",\n      \"displayName\": \"F´ Release Preset\",\n      \"description\": \"F´ release build using local fprime-venv\",\n      \"binaryDir\": \"${sourceDir}/build-fprime-automatic-native\",\n      \"environment\": {\n        \"VIRTUAL_ENV\": \"${fileDir}/fprime-venv\",\n        \"PATH\": \"$env{VIRTUAL_ENV}/bin:$penv{PATH}\"\n      },\n      \"cacheVariables\": {\n          \"CMAKE_EXPORT_COMPILE_COMMANDS\": \"ON\",\n          \"CMAKE_BUILD_TYPE\": \"Release\"\n      }\n    },\n    {\n      \"name\": \"fprime-debug\",\n      \"inherits\": \"fprime\",\n      \"displayName\": \"F´ Debug Preset\",\n      \"description\": \"F´ debug build using local fprime-venv\",\n      \"cacheVariables\": {\n          \"CMAKE_BUILD_TYPE\": \"Debug\"\n      }\n    },\n    {\n      \"name\": \"fprime-ut\",\n      \"inherits\": \"fprime-debug\",\n      \"displayName\": \"F´ Unit Test Preset\",\n      \"description\": \"F´ debug build including unit tests using local fprime-venv\",\n      \"binaryDir\": \"${sourceDir}/build-fprime-automatic-native-ut\",\n      \"cacheVariables\": {\n          \"BUILD_TESTING\": \"ON\"\n      }\n    },\n      {\n        \"name\": \"fprime-ninja\",\n        \"inherits\": \"fprime\",\n        \"displayName\": \"F´ Release (Ninja) Preset\",\n        \"description\": \"F´ release build using ninja and local fprime-venv\",\n        \"generator\": \"Ninja\"\n      },\n      {\n        \"name\": \"fprime-debug-ninja\",\n        \"inherits\": \"fprime-debug\",\n        \"displayName\": \"F´ Debug (Ninja) Preset\",\n        \"description\": \"F´ debug build using ninja and local fprime-venv\",\n        \"generator\": \"Ninja\"\n      },\n      {\n        \"name\": \"fprime-ut-ninja\",\n        \"inherits\": \"fprime-ut\",\n        \"displayName\": \"F´ Unit Test (Ninja) Preset\",\n        \"description\": \"F´ debug build including unit tests using ninja and local fprime-venv\",\n        \"binaryDir\": \"${sourceDir}/build-fprime-automatic-native-ut\",\n        \"generator\": \"Ninja\"\n      }\n    ]\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3857421875,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official email address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[fprime@jpl.nasa.gov](mailto:fprime@jpl.nasa.gov).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.9091796875,
          "content": "# Contributing Guidelines\n\nF´ is a free and open source project used to build embedded software!  Are you ready to contribute?\n\nIn this file you can find basic information on contributing to [F´](https://github.com/nasa/fprime). We will walk\nthrough how to contribute and the process contributions follow. Remember, we may ask for changes or adjustments to make\nyour submission the best it can be. Fear not! Your submission is still valued! You may even comment on other submissions\nto help them improve.\n\n## Ways of Contributing\n\nThe best way to contribute to F´ is to remain positive and engaged. Just about every contribution needs some improvement\nbefore it is ready to be folded in. Stand behind your work, push it forward, and work with us!\n\nSpecific Ways to Contribute:\n- [Ask a Question or Suggest Improvements](https://github.com/nasa/fprime/discussions/new)\n- [Report a Bug or Mistake](https://github.com/nasa/fprime/issues/new/choose)\n- [Review Contributions](https://github.com/nasa/fprime/pulls)\n- Submit a Pull Request\n- Contribute to Ongoing Discussions and Reviews\n\nFeel free to contribute any way that suits your skills and enjoy.\n\n\n> **Note:** [F´ Autocoder Python](https://github.com/nasa/fprime/tree/master/Autocoders) is being actively replaced\n> by [FPP](https://github.com/fprime-community/fpp). Thus we will no longer accept changes to this code except for\n> security and critical bug fixes done in the most minimal fashion.\n>\n> We do love Python fixes, please consider contributing to\n> [fprime-tools](https://github.com/fprime-community/fprime-tools) or\n> [fprime-gds](https://github.com/fprime-community/fprime-gds)\n\n## Where to Start\n\nFirst, contributors should build some understanding of F´. Read through the documentation, try a tutorial, or run a\nreference application. Contributors can find information in our [documentation](https://nasa.github.io/fprime/). Keep\ntrack of inconsistencies or bugs as these should be reported!\n\nWhen you are ready to join discussions and submit bug reports use one of the above links!\n\nTo contribute to the F´ framework directly, consider writing\n[needed documentation](https://github.com/nasa/fprime/issues?q=is%3Aissue+is%3Aopen+label%3ADocumentation) or starting\nwith an [easy first issue](https://github.com/nasa/fprime/issues?q=is%3Aissue+is%3Aopen+label%3A%22Easy+First+Issue%22).\nWhen starting to modify F´ directly, ask questions, seek help, and be patient. Remember to review the project structure,\ndevelopment process, and helpful tips sections below.\n\n## Project Structure\n\nThe F´ project is designed as a base software [framework](https://github.com/nasa/fprime) with additional\n[packages](https://github.com/fprime-community) designed to extend the framework. This means that occasionally we may\nmove contributions in or out of these packages.\n\nKey packages include:\n\n- [fpp](https://github.com/fprime-community/fpp): fpp development repository\n- [fprime-tools](https://github.com/fprime-community/fprime-tools): `fprime-util` development repository\n- [fprime-gds](https://github.com/fprime-community/fprime-gds): `fprime-gds` development repository\n\n\n### F´ Repository Structure\n\nContributors to the [fprime](https://github.com/nasa/fprime) repository should understand the following key folders:\n\n- [docs/UsersGuide](https://github.com/nasa/fprime/tree/devel/docs/UsersGuide): add new documentation in this or a subfolder\n- [Fw](https://github.com/nasa/fprime/tree/devel/Fw): changes here will be reviewed carefully because this code is critical across F\n- [Ref](https://github.com/nasa/fprime/tree/devel/Ref): update and maintain the Reference application here\n\n## Development Process\n\nF´ follows a standard git flow development model. Developers should start with a\n[fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo) of one of the F´ repositories and then develop\naccording to [git flow](https://docs.github.com/en/get-started/quickstart/github-flow). Remember to add an\n[upstream remote](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/configuring-a-remote-repository-for-a-fork) to your fork such that you may fetch the latest changes.\n\nFor each contribution, developers should first fetch the latest changes from upstream. Then create a new branch off\n`devel` and submit back to F´ using a pull request as described above.\n\n**Preparing A New Branch**\n```\ngit fetch upstream\ngit checkout upstream/devel\ngit checkout -b <desired branch name>\n```\n\nOnce a pull request has been submitted the following process will begin.\n\n### Submission Review\n\nThe pull request changes will be reviewed by the team and community supporting F´. Often this means that a discussion on\nhow to improve the submission will arise. Engage in the conversation and work with reviewers to improve the code.\nRemember, F´ is flight software running in remote environments. This means we hold submissions to very high standards.\nDo not fear, we are happy to work with contributors to help meet these standards!\n\nSubmission reviews can take some time for the team to complete. These reviews may take additional time for pull requests\nthat are very large, touch sensitive code, or have not been [discussed](https://github.com/nasa/fprime/discussions)\nbeforehand. Sometimes changes are determined to best fit in another repository or package. Please be patient with us and\nremember we are all one team.\n\nAnyone can review code on F´ but an approved review from a maintainer will be required to complete the submission.\n\n### Automated Checking\n\nOnce the submission has been reviewed by a maintainer, automated checking will begin. There are many checks that must\npass on submitted code to ensure that it is not going to introduce a bug or regression to F´. These checks ensure unit\ntests pass, development environments remain supported, code runs without crashing, software and documentation quality is\nupheld, and more!\n\nThese checks can be a bit pedantic and this often is the point. Do your best to correct errors or ask for help. Don't be\nsurprised if an F´ maintainer pushes some commits to your branch to help correct minor issues (e.g. spelling errors). In\nthe end, these checks must pass for the submission to continue.\n\nIf something seems amiss with one of these checks ask for help on your PR and a maintainer will do their best to help\nget the submission moving forward.\n\n### Automated Checks on Reference Repositories\n\nSome of the above-mentioned automated checks run on reference applications that are not part of the core F´ repository, such as our [tutorial repositories](https://github.com/fprime-community#tutorials). This serves two main purposes: running more tests, and making sure our suite of reference applications and tutorials do not go out-of-date.\nBecause of this pattern, users who submit a pull request which introduces breaking changes on _how_ F´ is used in those external repositories will need to submit associated pull requests to introduce a fix on said external repositories.\n\nThe checks are configured to run on the `devel` branch of each external repository, but will prioritize the branch `pr-<PR_NUMBER>` if it exists, with `PR_NUMBER` being the number of the pull request that has been opened in nasa/fprime.\n\nMaintainers will gladly help you in this process.\n\n## Final Approval and Submission\n\nOnce all corrections have been made, automated checks are passing, and a maintainer has given final approval, it is time\nto contribute the submission. A maintainer will handle this final step and once complete changes should appear in the\n`devel` branch. You can help this process by submitting any deferred or future work items as issues using the links\nabove.\n\n## Helpful Tips\n\nThis section will describe some helpful tips for contributing to F´.\n\n### Keep Submissions Small\n\nLarge submissions are difficult to review. Incredibly large pull requests can be very difficult to review and often need\nto be broken up. Try to keep submissions small, focus on one issue or change in a pull request, and avoid lots of minor\nchanges across many files.\n\nKeep in mind that editors that fix whitespace automatically can cause many small changes. Even with advanced GitHub\ntools this can increase the effort required to review a submission. Be careful with the changes you are submitting.\n\n## Run Tests\n\nThe automatic checking system will run all our unit tests and integration tests across several systems. However, this\nprocess will take time. Try to run the unit tests locally during development before submitting a PR and use the\nautomatic checks as a safety net.\n\nThe tests can be run using the following commands:\n\n```bash\n# Go into the fprime directory\ncp MY_FPRIME_DIRECTORY\n\n# Run CI tests on fprime\n./ci/tests/Framework.bash\n\n# Run CI tests on the reference application\n./ci/tests/Ref.bash\n\n# Run the static analyzer with the basic configuration\n# Purge unit test directory\nfprime-util purge\n# Generate the build files for clang-tidy. Make sure clang-tidy is installed.\nfprime-util generate --ut -DCMAKE_CXX_CLANG_TIDY=clang-tidy-12\n# Build fprime with the static analyzer\nfprime-util build --all --ut -j16\n\n# Run the static analyzer with additional flight code checks\n# Purge release directory\nfprime-util purge\n# Generate the build files for clang-tidy. Make sure clang-tidy is installed.\nfprime-util generate -DCMAKE_CXX_CLANG_TIDY=\"clang-tidy-12;--config-file=$PWD/release.clang-tidy\"\n# Build fprime with the static analyzer\nfprime-util build --all -j16\n```\n\n## Development with modified FPP version\n\nIn case FPP needs to be locally changed, first uninstall all `fprime-fpp-*` `pip` packages, and install FPP\nusing the procedure mentioned in the [FPP readme](https://github.com/nasa/fpp/blob/main/compiler/README.adoc).\n\nThen, `fprime-util generate` needs to be run using `-DFPRIME_SKIP_TOOLS_VERSION_CHECK=1`\n\nFor example, to generate and build F´:\n```bash\n# Go into the fprime directory\ncp MY_FPRIME_DIRECTORY\n# Generate the build files without checking the FPP version\nfprime-util generate -DFPRIME_SKIP_TOOLS_VERSION_CHECK=1\n# Build the project\nfprime-util build -j4\n```"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 1.396484375,
          "content": "**NOTE:** a full list of contributors is here <https://github.com/nasa/fprime/graphs/contributors>.\n\nThis file contains a list of contributors and authors prior to proper tracking using the publicly available GitHub. The above link is a better representation\nof F´ contributors since the transition to open source.  This file will be removed in future releases.\n\nJPL Contributors to the F' Software Framework:\n\n* Adams, Derek\n* Anderson, Joshua\n* Bocchino, Robert\n* Campuzano, Brian\n* Canham, Timothy\n* Catchen, Michael\n* Chase, Matthew\n* Chen, Victor\n* Daruwala, Rohan\n* Daugherty, Daniel\n* Day, Leonard\n* Deerin, Jake\n* Dinkel, Jack\n* Dinkel, Kevin\n* Duerschmid, Tobias\n* Gandhi, Gorang\n* Gangianpour, Mehran\n* Harriman, Blake\n* Hofman, James\n* Huynh, Thomas\n* Ishii, Jordan\n* Kaye, Warren\n* Kooi, David\n* Klemm, Roger\n* Kubiak, Gerik\n* Levison, Jeffrey\n* Manglapus, Lloyd\n* Merewether, Eugene\n* Mueller, David\n* Nicolich, Eric\n* Nowicki, Robert\n* Oran, Kevin\n* Ortega, Kevin\n* Pandian, Prashanth\n* Paulson, Hunter\n* Ramanan, Saikiran\n* Reder, Leonard\n* Rizvi, Aadil\n* Roche, Michael\n* Sinha, Sanchit\n* Starch, Michael\n* Perez, Joseph\n* Shenker, Boris\n* Smith, Celeste\n* Tuszynski, Marek\n* Uchenik, Igor\n* Watney, Garth\n* Wang, Eric\n* Whitaker, William\n* Wong, Vincent\n\nNon-JPL Contributors to the F' Software Framework:\n\n* AaronMcDaniel\n* acxz\n* jasonduley\n* keck-in-space\n* sommercharles\n* SterlingPeet\n* arijitdas123student\n"
        },
        {
          "name": "CPPLINT.cfg",
          "type": "blob",
          "size": 1.8642578125,
          "content": "#\n# Cpplint is a command-line tool to check C/C++ files for style issues following Google's C++ style guide.\n# https://github.com/cpplint/cpplint\n#\n# Type the command below for details about supported options in CPPLINT.cfg.\n# > cpplint --help\n#\n\n# Do not look for additional CPPLINT.cfg in the parent directories.\nset noparent\nroot=.\nextensions=cpp,hpp,c,h\n\n# Limit line length.\nlinelength=120\n\n# Adjust the following error categories as specified by the filter:\n# (filter parameters are concatenated together)\n\n# `build` rules\n# Enable a warning about C++ features that were not in the original\n# C++11 specification (and so might not be well-supported).  In the\n# case of F´, the minimum supported platforms are potentially not\n# new enough to afford to do without this warning.\nfilter=+build/c++11\n\n# F´ uses `#ifndef FOO_H` guard not the `#pragma once`.\nfilter=-build/pragma_once\n\n# Do not enforce including header files in both .h and .cpp.\nfilter=-build/header_guard\nfilter=-build/include\nfilter=-build/include_alpha\nfilter=-build/include_order\nfilter=-build/include_subdir\nfilter=-build/include_what_you_use\nfilter=-build/namespaces\n\nfilter=-legal/copyright\n\nfilter=-readability/braces\nfilter=-readability/casting\nfilter=-readability/namespace\nfilter=-readability/todo\n\nfilter=-runtime/indentation_namespace\nfilter=-runtime/int\nfilter=-runtime/references\n\nfilter=-whitespace/blank_line\nfilter=-whitespace/braces\nfilter=-whitespace/comma\nfilter=-whitespace/comments\nfilter=-whitespace/end_of_line\nfilter=-whitespace/indent\nfilter=-whitespace/line_length\nfilter=-whitespace/newline\nfilter=-whitespace/operators\nfilter=-whitespace/parens\nfilter=-whitespace/tab\n\n# There is no need for lint-gardening in the documentation.\nexclude_files=Autocoders\nexclude_files=ci\nexclude_files=cmake\nexclude_files=docs\nexclude_files=Fpp\nexclude_files=FppTest\nexclude_files=gtest\nexclude_files=build-fprime-automatic-*\n"
        },
        {
          "name": "Drv",
          "type": "tree",
          "content": null
        },
        {
          "name": "Fpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "FppTest",
          "type": "tree",
          "content": null
        },
        {
          "name": "Fw",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.505859375,
          "content": "Copyright (c) 2023 California Institute of Technology (“Caltech”). U.S. Government sponsorship acknowledged.\n\nAll rights reserved.\n\nNeither the name of Caltech nor its operating division, the Jet Propulsion Laboratory, nor the names of its\ncontributors may be used to endorse or promote products derived from this software without specific prior written\npermission.\n\nThis product includes cryptographic software written by  Eric Young (eay@cryptsoft.com)\nThis product includes pyparsing written by Paul T. McGuire\n"
        },
        {
          "name": "Os",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1982421875,
          "content": "<h2 align=\"center\">A Flight-Proven, Multi-Platform, Open-Source Flight Software Framework</h2>\n<p align=\"center\"><br/>\n<img width=\"200em\" src=\"docs/img/fprime-logo.svg\"><br/>\n</p>\n\n#\nF´ (F Prime) is a component-driven framework that enables rapid development and deployment of spaceflight and other embedded software applications. Originally developed at the [Jet Propulsion Laboratory](https://www.jpl.nasa.gov/), F´ has been successfully deployed on [several space applications](https://nasa.github.io/fprime/projects.html). It is tailored but not limited to small-scale spaceflight systems such as CubeSats, SmallSats, and instruments.\n\n**Please Visit the F´ Website:** [https://fprime.jpl.gov/latest](https://fprime.jpl.nasa.gov/latest/) for more information.\n\n\n## What does F´ provide\n\n- An architecture that decomposes flight software into discrete components with well-defined interfaces\n- A C++ framework that provides core capabilities such as message queues and threads\n- Modeling tools for specifying components and connections and automatically generating code\n- A growing collection of ready-to-use components\n- Testing tools for testing flight software at the unit and integration levels.\n\nLearn more about [F´ key features](https://fprime.jpl.nasa.gov/latest/).\n\n\n## System Requirements\n\n1. Linux, Windows with WSL, or macOS operating system\n2. [git](https://git-scm.com/)\n3. [CMake 3.16+](https://cmake.org/download/). CLI tool must be available on the system path.\n4. [Clang](https://clang.llvm.org/) or [GNU C and C++ compilers](https://gcc.gnu.org/) (e.g. gcc and g++)\n5. [Python 3.8+](https://www.python.org/downloads/), [virtual environments](https://docs.python.org/3/library/venv.html), and [PIP](https://pypi.org/project/pip/)\n\n\n## Getting Started\n\nTo get started with F´, install the F´ bootstrapping tool with:\n```\npip install fprime-bootstrap\n```\n\nThen, create a new project with:\n```\nfprime-bootstrap project\n```\n\nSee the [HelloWorld Tutorial](https://fprime-community.github.io/fprime-tutorial-hello-world/) to guide you through all the steps of developing an F´ project.\n\nNew users are encouraged to read through the [User Guide](https://nasa.github.io/fprime/UsersGuide/guide.html) and explore the [other tutorials](https://nasa.github.io/fprime/Tutorials/README.html).\n\n\n## Getting Help\n\n### Discussions\nTo ask questions, discuss improvements, and ask for help please use the project's [GitHub Discussions](https://github.com/nasa/fprime/discussions).\n### Bug reports\nTo report bugs and issues, [open an issue here](https://github.com/nasa/fprime/issues).\n### Community\nThe [F´ Community](https://github.com/fprime-community) GitHub Organization contains third party contributions, more documentation of flight software development, and additional resources.\n\n\n## Resources\n- [User Guide](https://nasa.github.io/fprime/UsersGuide/guide.html)\n- [Tutorials](https://nasa.github.io/fprime/Tutorials/README.html)\n- [Discussions](https://github.com/nasa/fprime/discussions)\n- [Submit an Issue](https://github.com/nasa/fprime/issues)\n- [F´ Community](https://github.com/fprime-community)\n\n\n## Release Notes\n\nThe version history and artifacts associated with the project can be found at [Releases](https://github.com/nasa/fprime/releases).\n"
        },
        {
          "name": "RPI",
          "type": "tree",
          "content": null
        },
        {
          "name": "Ref",
          "type": "tree",
          "content": null
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.98828125,
          "content": "# Security Policy\n\nThe F´ team secures our code base using a combination of code review, dependency review, and static analysis performed during automated pull request\nverification. We welcome general bug reports and vulnerability reports from the larger community.\n\n### Reporting a Vulnerability\n\nFor general defects, please submit a [Bug Report](https://github.com/nasa/fprime/issues/new/choose)\n\nTo report a vulnerability for F´ please use the [vulnerability report form](https://github.com/nasa/fprime/security/advisories/new) or send a detailed\nreport to [fprime@jpl.nasa.gov](mailto:fprime@jpl.nasa.gov). \n\n### Static Analysis Checks\n\nThe [GitHub Actions workflows](https://github.com/nasa/fprime/blob/devel/.github/workflows/) are available to the public. To review the results, fork the\nrepository and run the workflows. \n\nThese checks are run on each pull request submitted to F´.\n\n### General Support\n\nFor additional support, please open a [Discussion](https://github.com/nasa/fprime/discussions). \n"
        },
        {
          "name": "STest",
          "type": "tree",
          "content": null
        },
        {
          "name": "Svc",
          "type": "tree",
          "content": null
        },
        {
          "name": "TestUtils",
          "type": "tree",
          "content": null
        },
        {
          "name": "Utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "googletest",
          "type": "commit",
          "content": null
        },
        {
          "name": "release.clang-tidy",
          "type": "blob",
          "size": 0.11328125,
          "content": "# Clang-tidy configuration used only for flight code\n\nChecks: >\n    -*,\n    misc-no-recursion\nWarningsAsErrors: '*'\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.49609375,
          "content": "aniso8601==9.0.1\nannotated-types==0.7.0\nargcomplete==3.5.1\narrow==1.3.0\nbinaryornot==0.4.4\nblinker==1.8.2\nBrotli==1.1.0\ncertifi==2024.8.30\nchardet==5.2.0\ncharset-normalizer==3.4.0\nclick==8.1.7\ncolorlog==6.8.2\ncookiecutter==2.6.0\nCT3==3.3.3.post1\net-xmlfile==1.1.0\nFlask==3.0.3\nFlask-Compress==1.15\nFlask-RESTful==0.3.10\nfprime-fpl-convert-xml==1.0.3\nfprime-fpl-extract-xml==1.0.3\nfprime-fpl-layout==1.0.3\nfprime-fpl-write-pic==1.0.3\nfprime-fpp-check==2.3.0a1\nfprime-fpp-depend==2.3.0a1\nfprime-fpp-filenames==2.3.0a1\nfprime-fpp-format==2.3.0a1\nfprime-fpp-from-xml==2.3.0a1\nfprime-fpp-locate-defs==2.3.0a1\nfprime-fpp-locate-uses==2.3.0a1\nfprime-fpp-syntax==2.3.0a1\nfprime-fpp-to-cpp==2.3.0a1\nfprime-fpp-to-dict==2.3.0a1\nfprime-fpp-to-json==2.3.0a1\nfprime-fpp-to-xml==2.3.0a1\nfprime-gds==3.5.2a1\nfprime-tools==3.5.1\nfprime-visual==1.0.2\ngcovr==8.2\nidna==3.10\nimportlib-metadata==6.7.0\niniconfig==2.0.0\nitsdangerous==2.2.0\nJinja2==3.1.4\nlegacy-cgi==2.6.1; python_version >= \"3.13\"\nlxml==5.3.0\nMarkdown==3.7\nmarkdown-it-py==3.0.0\nMarkupSafe==2.1.5\nmdurl==0.1.2\nopenpyxl==3.1.5\npackaging==24.1\npexpect==4.9.0\npluggy==1.5.0\nptyprocess==0.7.0\npydantic==2.9.2\npydantic_core==2.23.4\nPygments==2.18.0\npyserial==3.5\npytest==8.3.3\npython-dateutil==2.9.0.post0\npython-slugify==8.0.4\npytz==2024.2\nPyYAML==6.0.2\npyzmq==26.2.0\nrequests==2.32.3\nrich==13.9.2\nsetuptools==75.3.0\nsix==1.16.0\ntext-unidecode==1.3\ntomli==2.0.1\ntypes-python-dateutil==2.9.0.20241003\ntyping-extensions==4.12.2\nurllib3==1.26.20\nWerkzeug==3.0.4\nzipp==3.15.0\nzstandard==0.23.0\n"
        },
        {
          "name": "settings.ini",
          "type": "blob",
          "size": 0.0263671875,
          "content": "[fprime]\nframework_path: .\n"
        }
      ]
    }
  ]
}