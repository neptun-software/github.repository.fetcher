{
  "metadata": {
    "timestamp": 1736566309307,
    "page": 61,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bkaradzic/bgfx",
      "stars": 15285,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.373046875,
          "content": "root = true\n\n[*]\ncharset      = utf-8\nindent_style = tab\nindent_size  = 4\nend_of_line  = lf\nmax_line_length = 100\ninsert_final_newline     = true\ntrim_trailing_whitespace = true\n\n[include/bgfx/c99/*.h]\nindent_style = space\n\n[*.ninja]\nindent_style = space\n\n[*.md]\ntrim_trailing_whitespace = false\nmax_line_length = 80\n\n[.github/workflows/*.yml]\nindent_style = space\nindent_size  = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1640625,
          "content": "*.bin binary diff=hex\n*.c   eol=lf\n*.cpp eol=lf\n*.h   eol=lf\n*.lua eol=lf\n*.m   eol=lf\n*.md  eol=lf\n*.mk  eol=lf\n*.mm  eol=lf\n*.sc  eol=lf\n*.sh  eol=lf\nmakefile eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": "*.TMP\n*.dxvk-cache\n*.log\n.DS_Store\n.build\n.debug\n.gdb_history\n.git\n.svn\n.vscode\ntags\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.140625,
          "content": "*                            @bkaradzic\n\n# Metal\nsrc/renderer_mtl.*           @attilaz\n\n# Vulkan\nsrc/renderer_vk.*            @rinthel @pezcode\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1552734375,
          "content": "## How to contribute?\n\nEveryone is welcome to contribute to bgfx by submitting bug reports, testing on\ndifferent platforms, writing examples (see [Help Needed](https://github.com/bkaradzic/bgfx/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+needed%22)\nfor ideas), improving documentation, profiling and optimizing, helping\nnewcomers, telling others about bgfx, etc.\n\nIf you have just quick oneliner question it's preferable to ask it at chat\nhttps://discord.gg/9eMbv7J instead opening new issue.\n\n## Submitting bugs\n\nUnless bug is trivial, and easy to explain and understand, the fastest way to\nfix bug is to get repro case. In most of cases it's enough to modify existing\nexample (with minimal number of changes) and reproduce bug there.\n\n## Contributing code\n\n**When contributing to the bgfx project you must agree to the BSD 2-clause\nlicensing terms.**\n\nPull request checklist:\n\n - Make sure you test your code with provided examples before creating PR.\n - Create focused PR with minimal number of changes relevant to feature added\n   or bug fixed.\n - Use [EditorConfig](http://editorconfig.org/) in your editor of choice to\n   apply the same editor settings used by bgfx project.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2685546875,
          "content": "Copyright 2010-2024 Branimir Karadzic\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this\n      list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 28.03125,
          "content": "<p align=\"center\">\n<img src=\"https://repository-images.githubusercontent.com/3925242/a4566200-912a-11ea-984f-c387546a3126\">\n</p>\n\n[bgfx](https://github.com/bkaradzic/bgfx) - Cross-platform rendering library\n============================================================================\n\n<p align=\"center\">\n    <a href=\"#what-is-it\">What is it?</a> -\n    <a href=\"https://bkaradzic.github.io/bgfx/build.html\">Building</a> -\n    <a href=\"https://bkaradzic.github.io/bgfx/overview.html#getting-involved\">Getting Involved</a> -\n    <a href=\"https://bkaradzic.github.io/bgfx/examples.html\">Examples</a> -\n    <a href=\"https://bkaradzic.github.io/bgfx/bgfx.html\">API Reference</a> -\n    <a href=\"https://bkaradzic.github.io/bgfx/tools.html\">Tools</a> -\n    <a href=\"#who-is-using-it-madewithbgfx\">Who is using it?</a> -\n    <a href=\"#license-bsd-2-clause\">License</a>\n</p>\n\n[![GitHub Actions](https://github.com/bkaradzic/bgfx/actions/workflows/main.yml/badge.svg)](https://github.com/bkaradzic/bgfx/actions)\n[![License](https://img.shields.io/badge/license-BSD--2%20clause-blue.svg)](https://bkaradzic.github.io/bgfx/license.html)\n[![Join the chat at https://discord.gg/9eMbv7J](https://img.shields.io/discord/712512073522872352?color=%237289DA&label=bgfx&logo=discord&logoColor=white)](https://discord.gg/9eMbv7J)\n\n * [GitHub Discussions](https://github.com/bkaradzic/bgfx/discussions)\n * [Discord Chat](https://discord.gg/g99upRc9pf)\n * [GitHub Actions](https://github.com/bkaradzic/bgfx/actions)\n\n[What is it?](https://bkaradzic.github.io/bgfx/overview.html)\n-------------------------------------------------------------\n\nCross-platform, graphics API agnostic, \"Bring Your Own Engine/Framework\" style\nrendering library.\n\nSupported rendering backends:\n\n * Direct3D 11\n * Direct3D 12\n * GNM (only for licensed PS4 developers, search DevNet forums for source)\n * Metal\n * OpenGL 2.1\n * OpenGL 3.1+\n * OpenGL ES 2\n * OpenGL ES 3.1\n * Vulkan\n * WebGL 1.0\n * WebGL 2.0\n\nSupported platforms:\n\n * Android (14+)\n * iOS/iPadOS/tvOS (16.0+)\n * Linux\n * macOS (13.0+)\n * PlayStation 4\n * RaspberryPi\n * UWP (Universal Windows, Xbox One)\n * Wasm/Emscripten\n * Windows (7+)\n\nSupported compilers:\n\n * Clang 11 and above\n * GCC 11 and above\n * VS2019 and above\n * Apple clang 12 and above\n\nLanguages:\n\n * [C/C++ API documentation](https://bkaradzic.github.io/bgfx/bgfx.html)\n * [Beef API bindings](https://github.com/bkaradzic/bgfx/tree/master/bindings/bf)\n * [C# language API bindings #1](https://github.com/bkaradzic/bgfx/tree/master/bindings/cs)\n * [D language API bindings](https://github.com/BindBC/bindbc-bgfx)\n * [Go language API bindings](https://github.com/james4k/go-bgfx)\n * [Haskell language API bindings](https://github.com/haskell-game/bgfx)\n * [Lightweight Java Game Library 3 bindings](https://github.com/LWJGL/lwjgl3)\n * [Lua language API bindings](https://github.com/cloudwu/lua-bgfx)\n * [Nim language API bindings](https://github.com/Halsys/nim-bgfx)\n * [Pascal language API bindings](https://github.com/Akira13641/PasBGFX)\n * [Python language API bindings #1](https://github.com/fbertola/bgfx-python#-----bgfx-python--)\n * [Python language API bindings #2](https://github.com/jnadro/pybgfx#pybgfx)\n * [Rust language API bindings (new)](https://github.com/emoon/bgfx-rs)\n * [Swift language API bindings](https://github.com/stuartcarnie/SwiftBGFX)\n * [Zig language API bindings](https://github.com/bkaradzic/bgfx/tree/master/bindings/zig)\n\nWho is using it? [#madewithbgfx](https://twitter.com/search?q=%23madewithbgfx&src=typed_query&f=live)\n-----------------------------------------------------------------------------------------------------\n\n## AirMech\n\nhttps://www.carbongames.com/airmech-strike - AirMech is a free-to-play\nfuturistic action real-time strategy video game developed and published by\nCarbon Games.\n\n![AirMech screenshot](https://www.mobygames.com/images/shots/l/830630-airmech-playstation-4-screenshot-blue-bar-on-your-mech-indicates.jpg)\n\n## cmftStudio\n\nhttps://github.com/dariomanesku/cmftStudio - cmftStudio - Cubemap filtering\ntool.\n\n![cmftStudio screenshot](https://github.com/dariomanesku/cmftStudio/raw/master/screenshots/cmftStudio_small.jpg)\n\n## Crown\n\nhttps://github.com/dbartolini/crown - Crown is a general purpose data-driven\ngame engine, written from scratch with a minimalistic and data-oriented design\nphilosophy in mind.\n\n![Crown screenshot](https://raw.githubusercontent.com/dbartolini/crown/master/docs/shots/level-editor.png)\n\n## Offroad Legends 2\n\nhttp://www.dogbytegames.com/ - Dogbyte Games is an indie mobile developer studio\nfocusing on racing games.\n\n![Offroad Legends 2](http://www.dogbytegames.com/bgfx/offroadlegends2_bgfx_ipad2.jpg)\n\n## Torque6\n\nhttps://github.com/andr3wmac/Torque6 - Torque 6 is an MIT licensed 3D engine\nloosely based on Torque2D. Being neither Torque2D or Torque3D it is the 6th\nderivative of the original Torque Engine.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=p4LTM_QGK34\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/p4LTM_QGK34/0.jpg\"\nalt=\"Torque 6 Material Editor\" width=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Kepler Orbits\n\nhttps://github.com/podgorskiy/KeplerOrbits - KeplerOrbits - Tool that calculates\npositions of celestial bodies using their orbital elements.\n\n## CETech\n\nhttps://github.com/cyberegoorg/cetech - CETech is a data-driven game engine and\ntoolbox inspired by Bitsquid/Stingray engine.\n\n![CETech screenshot](https://github.com/cyberegoorg/cetech/raw/master/docs/img/prototyp.png)\n\n## ioquake3\n\nhttps://github.com/jpcy/ioq3-renderer-bgfx - A renderer for ioquake3 written in\nC++ and using bgfx to support multiple rendering APIs.\n\n![ioq3-renderer-bgfx screenshot](https://camo.githubusercontent.com/052aa40c05120e56306294d3a1bb5f99f97de8c8/687474703a2f2f692e696d6775722e636f6d2f64364f6856594b2e6a7067)\n\n## DLS\n\nhttp://makingartstudios.itch.io/dls - DLS, the digital logic simulator game.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=6o1-sQRNqcA\n\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/6o1-sQRNqcA/0.jpg\"\nalt=\"DLS - Creating a 4-bit Register \"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\nhttp://dls.makingartstudios.com/sandbox/ - DLS: The Sandbox.\n\n![DLS: The Sandbox screenshot](https://pbs.twimg.com/media/DBaFwOKWAAEq0mp.jpg:large)\n\n## MAME\n\nhttps://github.com/mamedev/mame - MAME - Multiple Arcade Machine Emulator.\n\n![MAME screenshot](https://raw.githubusercontent.com/mamedev/www.mamedev.org/d8d716dbb63919a11964b5d47b9b7f6cfa006b56/bgfx/Raiden.png)\n\n## Blackshift\n\nhttps://blackshift.itch.io/blackshift - Blackshift is a grid-based, space-themed\naction puzzle game which isn't afraid of complexity - think Chip's Challenge on\ncrack.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=PUl8612Y-ds\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/PUl8612Y-ds/0.jpg\"\nalt=\"Blackshift Trailer, May 2016\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n\nhttps://eheitzresearch.wordpress.com/415-2/ - Real-Time Polygonal-Light Shading\nwith Linearly Transformed Cosines, Eric Heitz, Jonathan Dupuy, Stephen Hill and\nDavid Neubelt, ACM SIGGRAPH 2016.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=ZLRgEN7AQgM\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/ZLRgEN7AQgM/0.jpg\"\nalt=\"Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Dead Venture\n\nhttp://www.dogbytegames.com/dead_venture.html - Dead Venture is a new Drive 'N\nGun game where you help a handful of survivals reach the safe haven: a military\nbase on a far island.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=CgMr1g12yXw\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/CgMr1g12yXw/0.jpg\"\nalt=\"Dead Venture - Gameplay Teaser (iOS / Android)\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## REGoth\n\nhttps://github.com/degenerated1123/REGoth - REGoth is an open-source\nreimplementation of the zEngine, used by the game \"Gothic\" and \"Gothic II\".\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=8bLAGttYYpY\n\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/8bLAGttYYpY/0.jpg\"\nalt=\"REGoth Engine\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Ethereal Engine\n\nhttps://github.com/volcoma/EtherealEngine - EtherealEngine is a C++ game engine\nand WYSIWYG editor.\n\n![EtherealEngine screenshot](https://user-images.githubusercontent.com/1499411/29488403-ff3c3df6-8512-11e7-869f-32a783530cc3.png)\n\n## Go Rally\n\nhttp://gorallygame.com/ - Go Rally is top-down rally game with a career mode,\nmultiplayer time challenges, and a track creator.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=ckbkQsB6RVY\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/ckbkQsB6RVY/0.jpg\"\nalt=\"Go Rally\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## vg-renderer\n\nhttps://github.com/jdryg/vg-renderer#vg-renderer - vg-renderer is a vector\ngraphics renderer for bgfx, based on ideas from both NanoVG and ImDrawList (Dear\nImGUI).\n\n![vg-renderer screenshot](https://raw.githubusercontent.com/jdryg/vg-renderer/master/img/vgrenderer_tiger.png)\n\n## Zombie Safari\n\nhttp://www.dogbytegames.com/zombie_safari.html - Do what you please in this\nopen-world offroad driving game: explore massive landscapes, complete\nchallenges, smash zombies, find secret locations, unlock and upgrade cars and\nweapons, it's up to you!\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=LSiH0lRkw8g\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/LSiH0lRkw8g/0.jpg\"\nalt=\"Zombie Safari - Official Gameplay Trailer (Android)\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Smith and Winston\n\nhttp://www.smithandwinston.com/ - Smith and Winston is an exploration twin stick\nshooter for PC, PS4 & XBoxOne arriving in late 2018. Smith and Winston features\na massively destructible voxel world, rapid twin stick combat, physics puzzles\nand Metroid-style discovery.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=Mr_L7KuiByU\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/Mr_L7KuiByU/0.jpg\"\nalt=\"Smith and Winston: Gameplay Video\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Football Manager 2018\n\nhttp://www.footballmanager.com/ - Football Manager 2018 is a 2017 football\nmanagement simulation video game developed by Sports Interactive and published\nby Sega.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=1Woak1Bl_KI\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/1Woak1Bl_KI/0.jpg\"\nalt=\"Match Engine | Football Manager 2018\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## WonderWorlds\n\nhttp://wonderworlds.me/ - WonderWorlds is a place to play thousands of\nuser-created levels and stories, make your own using the extensive in-game tools\nand share them with whomever you want.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=nY8y_dFolKo\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/nY8y_dFolKo/0.jpg\"\nalt=\"WonderWorlds\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## two-io / mud\n\nhttps://hugoam.github.io/two-io/ - An all-purpose c++ app prototyping library,\nfocused towards live graphical apps and games.\n\n![two-io / mud screenshot](https://raw.githubusercontent.com/hugoam/mud-io/master/media/14_live_gfx.png)\n\n## Talking Tom Pool\n\nhttps://outfit7.com/apps/talking-tom-pool/ - A \"sling and match\" puzzle game for\nmobile devices.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=eNSI45zDEo0\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/eNSI45zDEo0/0.jpg\"\nalt=\"Talking Tom Pool\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## GPlayEngine\n\nhttps://github.com/fredakilla/GPlayEngine#gplayengine - GPlayEngine is a C++\ncross-platform game engine for creating 2D/3D games based on the GamePlay 3D\nengine v3.0.\n\n![GPlayEngine screenshot](https://camo.githubusercontent.com/d89a364fb306f208ca14a58267c8303f60f0f0cf/68747470733a2f2f692e696d6775722e636f6d2f306569395932382e706e67)\n\n## Off The Road\n\nhttp://www.dogbytegames.com/off_the_road.html - A sandbox off-road driving\nsimulator.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=RgnIReFkbyU\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/RgnIReFkbyU/hq720.jpg\"\nalt=\"Off The Road\"\nwidth=\"640\" height=\"360\" border=\"0\" /></a>\n\n## Coal Burnout\n\nhttps://beardsvibe.com/ - A multiplayer PVP rhythm game.\n\n![Coal Burnout screenshot](https://beardsvibe.com/scr/0l.png)\n\n## My Talking Tom 2\n\nhttps://outfit7.com/apps/my-talking-tom-2/ - Many mini games for mobile devices.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=I0U7EQKKDjw\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/I0U7EQKKDjw/0.jpg\"\nalt=\"My Talking Tom 2\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## NeoAxis Engine\n\nhttps://www.neoaxis.com/ - Versatile 3D project development environment.\n\n![NeoAxis Engine screenshot](https://www.neoaxis.com/files/NeoAxisEngine04.jpg)\n\n## xatlas\n\nhttps://github.com/jpcy/xatlas#xatlas - Mesh parameterization library.\n\n![xatlas screenshot](https://user-images.githubusercontent.com/3744372/43034066-53a62dee-8d18-11e8-9767-0b38ed3fa2d3.png)\n\n## Heroes of Hammerwatch\n\nhttps://store.steampowered.com/app/677120/Heroes_of_Hammerwatch/ - Heroes of\nHammerwatch is a rogue-lite action-adventure game set in the same universe as\nHammerwatch. Encounter endless hordes of enemies, traps, puzzles, secrets and\nlots of loot, as you battle your way through procedurally generated levels to\nreach the top of the Forsaken Spire.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=uTIVDKdNvms\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/uTIVDKdNvms/0.jpg\"\nalt=\"Heroes of Hammerwatch\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Babylon Native\n\nhttps://github.com/BabylonJS/BabylonNative#babylon-native - Build cross-platform\nnative applications with the power of the Babylon.js JavaScript framework.\n\n## Nira\n\nhttps://nira.app/ - Instantly load and view assets on any device. All you need\nis a web browser.\n\nSIGGRAPH 2019: Project Nira: Instant Interactive Real-Time Access to\nMulti-Gigabyte Sized 3D Assets on Any Device:\nhttps://s2019.siggraph.org/presentation/?sess=sess104&id=real_130#038;id=real_130\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=Gz9weuemhDA&t=3350\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/Gz9weuemhDA/0.jpg\"\nalt=\"Heroes of Hammerwatch\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## openblack\n\nhttps://github.com/openblack/openblack#openblack - An open-source\nreimplementation of the game Black & White (2001).\n\n![openblack screenshot](https://user-images.githubusercontent.com/32263167/184559293-56cfc6a7-a7da-4876-8fce-434ba8827eae.png)\n\n## Cluster\n\nhttps://github.com/pezcode/Cluster#cluster - Implementation of Clustered Shading\nand Physically Based Rendering with the bgfx rendering library.\n\n![Cluster screenshot](https://raw.githubusercontent.com/pezcode/Cluster/master/images/sponza.jpg)\n\n## NIMBY Rails\n\nhttps://store.steampowered.com/app/1134710/NIMBY_Rails/ - NIMBY Rails is a\nmanagement and design sandbox game for railways you build in the real world.\n\n![NIMBY Rails screenshot](https://user-images.githubusercontent.com/28320/78472283-03d5e200-7727-11ea-8bd4-db8754f52dc3.jpg)\n\n## Minecraft\n\nhttps://www.minecraft.net/zh-hant/attribution/\n\n![Minecraft screenshot](https://user-images.githubusercontent.com/814772/79185288-57050000-7dcb-11ea-87b4-2126fcd1545b.jpg)\n\n\n## FFNx\n\nhttps://github.com/julianxhokaxhiu/FFNx#ffnx - Next generation driver for Final\nFantasy VII and Final Fantasy VIII (with native Steam 2013 release support!)\n\n![FFVIII screenshot](https://raw.githubusercontent.com/julianxhokaxhiu/FFNx/master/.screens/ff8.png)\n\n\n## Shadow Gangs\n\nhttps://www.microsoft.com/en-gb/p/shadow-gangs/9n6hkcr65qdq - Shadow Gangs is an\narcade style ninja action game.\n\n![Shadow Gangs screenshot](https://user-images.githubusercontent.com/814772/94508248-64ba1080-01c6-11eb-800f-47dc374ef054.jpeg)\n\n## Growtopia\n\nhttps://growtopiagame.com/ - Growtopia is a free-to-play sandbox MMO game with\nalmost endless possibilities for world creation, customization and having fun\nwith your friends. Enjoy thousands of items, challenges and events.\n\n![Growtopia screenshot](https://s3.eu-west-1.amazonaws.com/cdn.growtopiagame.com/website/resources/assets/images/grow_header.jpg)\n\n## Galaxy Trucker\n\nhttps://galaxytrucker.com/ - Digital implementation of tabletop spaceship\nbuilding in real-time or turn-based mode, then surviving space adventures, with\nAI opponents, multiplayer, achievements and solo campaign.\n\n![Galaxy Trucker screenshot](https://press.galaxytrucker.com/images/GTAT_junk.png)\n\n## Through the Ages\n\nhttps://throughtheages.com/ - The card tabletop deep strategy game in your\ndevices. Lead your civilization from pyramids to space flights. Challenges,\nachievements, skilled AIs and online multiplayer.\n\n![Through the Ages screenshot](https://press.throughtheages.com/images/tta01.png)\n\n## Codenames\n\nhttps://codenamesgame.com/ - One of the best party games. Two rival spymasters\nknow the secret identities of 25 agents. Their teammates know the agents only by\ntheir codenames. Simple to explain, easy to understand, challenging gameplay.\n\n![Codenames screenshot](https://codenamesgame.com/img/game-features-img-1.jpg)\n\n## PeakFinder\n\nhttps://www.peakfinder.org/ - PeakFinder shows the names of all mountains and\npeaks with a 360° panorama display. More than 850'000 peaks - from Mount Everest\nto the little hill around the corner.\n\n![PeakFinder screenshot](https://pfweb-c125.kxcdn.com/videos/mobile/manual/v4/light/en/peakfinder-trecime.jpg)\n\n## Ember Sword\n\nhttps://embersword.com - Ember Sword is a free to play MMORPG running directly\nin your browser and is being developed and published by Bright Star Studios.\n\n![Ember Sword screenshot](https://user-images.githubusercontent.com/814772/120714133-a860ca80-c477-11eb-8680-f5a948dfd050.png)\n\n## Off The Road Unleashed\n\nhttps://www.nintendo.com/games/detail/off-the-road-unleashed-switch/ - Off The\nRoad Unleashed is a sandbox driving game for the Nintendo Switch. If you see a\nvehicle you bet you can hop into it! Pilot big rigs, helicopters, boats,\nairplanes or even trains. Sand dunes, frozen plains, mountains to climb and\nconquer.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=cwDR0Wj3LO4\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/cwDR0Wj3LO4/0.jpg\"\nalt=\"Off The Road Unleashed\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Guild Wars 2\n\nhttps://www.guildwars2.com/ - Guild Wars 2 is an online role-playing game with\nfast-paced action combat, a rich and detailed universe of stories, awe-inspiring\nlandscapes to explore, two challenging player vs. player modes—and no\nsubscription fees!\n\n![Guild Wars 2 screenshot](https://d3b4yo2b5lbfy.cloudfront.net/wp-content/uploads/2017/07/1a684WvW_ArmorT3.jpg)\n\n## Griftlands\n\nhttps://klei.com/games/griftlands - Griftlands is a roguelike deck-building game\nwith role-playing story elements in a science fiction setting, developed and\npublished by Klei Entertainment.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=ufl14_Ne5Lg\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/ufl14_Ne5Lg/0.jpg\"\nalt=\"Griftlands\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## HARFANG 3D\n\nhttps://www.harfang3d.com - HARFANG® 3D is a **BGFX-powered** 3D visualization\nframework for C++, Python, Go, and Lua. It comes with a 3D editor, HARFANG\nStudio.\n\n![HARFANG Studio screenshot](https://raw.githubusercontent.com/harfang3d/image-storage/main/portfolio/3.2.2/harfang-studio-cyber-city.png)\n\n## Marine Melodies / Resistance\n\nhttps://www.pouet.net/prod.php?which=91906 - Demoscene musicdisk released at\nEvoke 2022 demoparty.\n\nhttps://github.com/astrofra/demo-marine-melodies\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=Ma1-UBa3f2E\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/Ma1-UBa3f2E/0.jpg\"\nalt=\"Marine Melodies\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Activeworlds\n\nhttps://www.activeworlds.com/ - Activeworlds is an online VR platform with rich\nmultimedia and presentation features. Create your own worlds or build in free\ncommunity worlds, hold your own event / meeting or join inworld events!\n\n![Activeworlds screenshot](http://www.activeworlds.com/img/181107-213544_small_enkii.jpg)\n\n## Equilibrium Engine\n\nhttps://github.com/clibequilibrium/EquilibriumEngine - Equilibrium Engine is a\ndata-oriented and multi-threaded C11 Game Engine with libraries & shaders\nhot-reloading.\n\n![Equilibrium Engine screenshot](https://raw.githubusercontent.com/clibequilibrium/EquilibriumEngine/master/docs/city.png)\n\n## Pinhole Universe\n\nhttps://festina-lente-productions.com/pinhole-universe/ - Explore a generated\nworld where you can zoom in on anything, forever.\n\n![Pinhole Universe capsule image](https://festina-lente-productions.com/ext/capsule_small.jpg)\n\n## Unavowed (Nintendo Switch version only)\n\nhttps://www.nintendo.com/us/store/products/unavowed-switch/ - A demon has possessed you\nand used your body to tear a swath of bloodshed through New York. You are now free, but\nlife as you knew it is over. Your only path forward is joining the Unavowed - an ancient\nsociety dedicated to stopping evil. No matter what the cost.\n\n![Unavowed Title](https://assets.nintendo.com/image/upload/c_limit,f_auto,h_1000,q_auto,w_1700/v1/ncom/en_US/games/switch/u/unavowed-switch/Video/posters/Unavowed_Switch_Trailer_NOA)\n\n## The Excavation of Hob's Barrow (Nintendo Switch version only)\n\nhttps://www.nintendo.com/us/store/products/the-excavation-of-hobs-barrow-switch/ - A folk\nhorror narrative-driven adventure. Explore the isolated moors of rural Victorian England\nas you uncover the mysteries of Hob's Barrow. The answers lie in the soil...\n\n![The Excavation of Hob's Barrow Title](https://assets.nintendo.com/image/upload/c_limit,f_auto,h_1000,q_auto,w_1700/v1/ncom/en_US/games/switch/t/the-excavation-of-hobs-barrow-switch/Video/posters/The_Excavation_of_Hob_s_Barrow)\n\n## Primordia (Nintendo Switch version only)\n\nhttps://www.nintendo.com/us/store/products/primordia-switch/ - Life has ceased. Man is\nbut a myth. And now, even the machines have begun to fail. Lead Horatio Nullbuilt and his\nsarcastic sidekick Crispin on a journey through the crumbling world of Primordia, facing\nmalfunctioning robots, ancient secrets, and an implacable, power-hungry foe.\n\n![Primordia Title](https://assets.nintendo.com/image/upload/c_limit,f_auto,h_1000,q_auto,w_1700/v1/ncom/en_US/games/switch/p/primordia-switch/Video/posters/Primordia_Trailer)\n\n## ProtoTwin\n\nhttps://prototwin.com - Online industrial simulation software for manufacturing and material handling.\n\n![ProtoTwin - Simulation for Industrial Automation](https://github.com/bkaradzic/bgfx/assets/37254625/7aac600f-2687-468f-8d60-441c45ec14a3)\n\n## WARCANA\n\nWARCANA is a fantasy inspired base defence, RTS game with a deck-building mechanic.\nFace hundreds of thousands of unrelenting monsters in a battle royale between 30 other\nmighty magicians. Build your deck. Prepare your defences. Summon your armies.\nSurvive the onslaught.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=UioR5ptCFYU\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/UioR5ptCFYU/0.jpg\"\nalt=\"WARCANA Announcement Trailer\" width=\"640\" height=\"480\" border=\"0\" /></a>\n\n## DiskBoard\n\nhttps://www.diskboard.com - DiskBoard is the ultimate tool that can help you measure\nthe performance and monitor the health of your hardware. All of your devices are\npresented in a clean and easy to understand view. The tests offer extensive\ncustomization options, allowing you to simulate various workloads. The intuitive\nvisuals provide clear insights, benchmark comparisons, and performance guidelines.\nJoin a community of tech enthusiasts, compare your device's prowess, and witness\nyour hardware shine!\n\n![Diskboard screenshot](https://www.diskboard.com/assets/diskboard3.png)\n\n## Ant\n\nhttps://github.com/ejoy/ant - Ant is an open-source game engine focused on mobile platforms. It is implemented\nbased on Lua, with excellent performance and easy customization.\n\n[Red Frontier Game using Ant Game Engine](https://github.com/ejoy/vaststars)\n\n![RedFrontier](https://github.com/ejoy/vaststars/blob/master/screenshot/startup.jpg)\n\n## Crypt of the NecroDancer\n\nhttps://braceyourselfgames.com/crypt-of-the-necrodancer/ - Crypt of the NecroDancer\nis an award-winning hardcore roguelike rhythm game. Move to the music and deliver\nbeatdowns to the beat! The game uses bgfx on Windows, macOS, Linux, Nintendo\nSwitch and PlayStation 4.\n\n![Crypt of the NecroDancer screenshot](https://raw.githubusercontent.com/Marukyu/marukyu.github.io/misc-assets/247080_20240322072858_1.png)\n\n## Tomb4Plus\n\nhttps://www.github.com/SaracenOne/Tomb4Plus - Tomb4Plus is an open source\nreimplementation of the Tomb Raider: The Last Revelation engine. It is an\nenhanced fork of the original [Tomb4](https://github.com/Trxyebeep/TOMB4)\nreimplementation project which focuses on supporting the Level Editor runtime\nand aims for full compatibility with the unofficial binary-patched scripting\nextensions used by many custom levels. Tomb4Plus also replaces the original\nlegacy Direct3D renderer with bgfx.\n\n![Tomb4Plus screenshot](https://raw.githubusercontent.com/SaracenOne/Tomb4Plus/level_editor_v2/.github/images/preview.png)\n\n## Braid, Anniversary Edition\n\nhttps://play.google.com/store/apps/details?id=com.netflix.NGP.BraidAnniversaryEdition -\nbgfx is used only in Android version of the game.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=U738YZG1k1I\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/U738YZG1k1I/0.jpg\"\nalt=\"Braid, Anniversary Edition\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Rotwood\n\nhttps://store.steampowered.com/app/2015270/Rotwood/ - Rotwood is an upcoming\nbeat'em up, rogouelike video game developed and published by Klei Entertainment.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=SoTNhVPzmC8\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/SoTNhVPzmC8/0.jpg\"\nalt=\"Rotwood\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n## Cubzh\n\nhttps://app.cu.bzh/ - Cubzh is a User Generated Social Universe, an online\nplatform where all items, avatars, games, and experiences are made by users\nfrom the community.\n\nSource: https://github.com/cubzh/cubzh\n\n![Cubzh screenshot](https://camo.githubusercontent.com/154159f42f526cc87357d24419133d99d8996ee2a16513ae5b5d31bd7e06bc5d/68747470733a2f2f6672616d657275736572636f6e74656e742e636f6d2f696d616765732f4957384c7147575239496e696b7542534a6c5a664578647631412e77656270)\n\n## World Of Goo 2\n\nhttps://store.epicgames.com/en-US/p/world-of-goo-2 - Build bridges,\ngrow towers, terraform terrain, and fuel flying machines in\nthe stunning followup to the multi-award winning World of Goo.\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=q3XVl53Ajsk\"\ntarget=\"_blank\"><img src=\"http://img.youtube.com/vi/q3XVl53Ajsk/0.jpg\"\nalt=\"World Of Goo 2\"\nwidth=\"640\" height=\"480\" border=\"0\" /></a>\n\n[License (BSD 2-clause)](https://bkaradzic.github.io/bgfx/license.html)\n-----------------------------------------------------------------------\n\n<a href=\"http://opensource.org/licenses/BSD-2-Clause\" target=\"_blank\">\n<img align=\"right\" src=\"https://opensource.org/wp-content/uploads/2022/10/osi-badge-dark.svg\" width=\"100\" height=\"137\">\n</a>\n\n\tCopyright 2010-2024 Branimir Karadzic\n\n\tRedistribution and use in source and binary forms, with or without modification,\n\tare permitted provided that the following conditions are met:\n\n\t   1. Redistributions of source code must retain the above copyright notice, this\n\t      list of conditions and the following disclaimer.\n\n\t   2. Redistributions in binary form must reproduce the above copyright notice,\n\t      this list of conditions and the following disclaimer in the documentation\n\t      and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\tANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\tIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n\tINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\tBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\tDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\tOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n\tOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n\tOF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 9.5400390625,
          "content": "#\n# Copyright 2011-2024 Branimir Karadzic. All rights reserved.\n# License: https://github.com/bkaradzic/bgfx/blob/master/LICENSE\n#\n\nUNAME := $(shell uname)\nifeq ($(UNAME),$(filter $(UNAME),Linux Darwin))\nifeq ($(UNAME),$(filter $(UNAME),Darwin))\nOS=darwin\nelse\nOS=linux\nendif\n\nhelp:\n\t@echo Available targets:\n\t@grep -E \"^[a-zA-Z0-9_-]+:.*?## .*$$\" $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\nelse\nOS=windows\n\nhelp: projgen\n\nendif\n\n# $(info $(OS))\n\nBX_DIR?=../bx\nGENIE?=$(BX_DIR)/tools/bin/$(OS)/genie $(EXTRA_GENIE_ARGS)\nNINJA?=$(BX_DIR)/tools/bin/$(OS)/ninja\n\n.PHONY: help\n\nclean: ## Clean all intermediate files.\n\t@echo Cleaning...\n\t-@rm -rf .build\n\t@mkdir .build\n\nprojgen: ## Generate project files for all configurations.\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib                       vs2022\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=mingw-gcc       gmake\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=mingw-clang     gmake\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=linux-gcc       gmake\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=linux-clang     gmake\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=osx-arm64       gmake\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --xcode=osx           xcode9\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --xcode=ios           xcode9\n\t$(GENIE)              --with-combined-examples --with-shared-lib --gcc=android-arm64   gmake\n\t$(GENIE)              --with-combined-examples                   --gcc=ios-arm64       gmake\n\t$(GENIE)              --with-combined-examples                   --gcc=rpi             gmake\n\nidl: ## Generate code from IDL.\n\t@echo Generating code from IDL.\n\tcd scripts && ../$(GENIE) idl\n\n.build/projects/gmake-android-arm64:\n\t$(GENIE) --gcc=android-arm64 --with-combined-examples --with-shared-lib gmake\nandroid-arm64-debug: .build/projects/gmake-android-arm64 ## Build - Android ARM64 Debug\n\t$(MAKE) -R -C .build/projects/gmake-android-arm64 config=debug\nandroid-arm64-release: .build/projects/gmake-android-arm64 ## Build - Android ARM64 Release\n\t$(MAKE) -R -C .build/projects/gmake-android-arm64 config=release\nandroid-arm64: android-arm64-debug android-arm64-release ## Build - Android ARM64 Debug and Release\n\n.build/projects/gmake-wasm:\n\t$(GENIE) --gcc=wasm --with-combined-examples gmake\nwasm-debug: .build/projects/gmake-wasm ## Build - Emscripten Debug\n\t$(MAKE) -R -C .build/projects/gmake-wasm config=debug\nwasm-release: .build/projects/gmake-wasm ## Build - Emscripten Release\n\t$(MAKE) -R -C .build/projects/gmake-wasm config=release\nwasm: wasm-debug wasm-release ## Build - Emscripten Debug and Release\n\n.build/projects/gmake-linux-gcc:\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=linux-gcc gmake\nlinux-gcc-debug64: .build/projects/gmake-linux-gcc ## Build - Linux GCC x64 Debug\n\t$(MAKE) -R -C .build/projects/gmake-linux-gcc config=debug64\nlinux-gcc-release64: .build/projects/gmake-linux-gcc ## Build - Linux GCC x64 Release\n\t$(MAKE) -R -C .build/projects/gmake-linux-gcc config=release64\nlinux-gcc: linux-gcc-debug64 linux-gcc-release64 ## Build - Linux GCC x86/x64 Debug and Release\n\n.build/projects/gmake-linux-clang:\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=linux-clang gmake\nlinux-clang-debug64: .build/projects/gmake-linux-clang ## Build - Linux Clang x64 Debug\n\t$(MAKE) -R -C .build/projects/gmake-linux-clang config=debug64\nlinux-clang-release64: .build/projects/gmake-linux-clang ## Build - Linux Clang x64 Release\n\t$(MAKE) -R -C .build/projects/gmake-linux-clang config=release64\nlinux-clang: linux-clang-debug64 linux-clang-release64 ## Build - Linux Clang x86/x64 Debug and Release\n\n.build/projects/gmake-mingw-gcc:\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=mingw-gcc gmake\nmingw-gcc-debug32: .build/projects/gmake-mingw-gcc ## Build - MinGW GCC x86 Debug\n\t$(MAKE) -R -C .build/projects/gmake-mingw-gcc config=debug32\nmingw-gcc-release32: .build/projects/gmake-mingw-gcc ## Build - MinGW GCC x86 Release\n\t$(MAKE) -R -C .build/projects/gmake-mingw-gcc config=release32\nmingw-gcc-debug64: .build/projects/gmake-mingw-gcc ## Build - MinGW GCC x64 Debug\n\t$(MAKE) -R -C .build/projects/gmake-mingw-gcc config=debug64\nmingw-gcc-release64: .build/projects/gmake-mingw-gcc ## Build - MinGW GCC x64 Release\n\t$(MAKE) -R -C .build/projects/gmake-mingw-gcc config=release64\nmingw-gcc: mingw-gcc-debug32 mingw-gcc-release32 mingw-gcc-debug64 mingw-gcc-release64 ## Build - MinGW GCC x86/x64 Debug and Release\n\n.build/projects/gmake-mingw-clang:\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=mingw-clang gmake\nmingw-clang-debug32: .build/projects/gmake-mingw-clang ## Build - MinGW Clang x86 Debug\n\t$(MAKE) -R -C .build/projects/gmake-mingw-clang config=debug32\nmingw-clang-release32: .build/projects/gmake-mingw-clang ## Build - MinGW Clang x86 Release\n\t$(MAKE) -R -C .build/projects/gmake-mingw-clang config=release32\nmingw-clang-debug64: .build/projects/gmake-mingw-clang ## Build - MinGW Clang x64 Debug\n\t$(MAKE) -R -C .build/projects/gmake-mingw-clang config=debug64\nmingw-clang-release64: .build/projects/gmake-mingw-clang ## Build - MinGW Clang x64 Release\n\t$(MAKE) -R -C .build/projects/gmake-mingw-clang config=release64\nmingw-clang: mingw-clang-debug32 mingw-clang-release32 mingw-clang-debug64 mingw-clang-release64 ## Build - MinGW Clang x86/x64 Debug and Release\n\n.build/projects/vs2022:\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib vs2022\nvs2022-debug32: .build/projects/vs2022 ## Build - vs2022 x86 Debug\n\tdevenv .build/projects/vs2022/bgfx.sln /Build \"Debug|Win32\"\nvs2022-release32: .build/projects/vs2022 ## Build - vs2022 x86 Release\n\tdevenv .build/projects/vs2022/bgfx.sln /Build \"Release|Win32\"\nvs2022-debug64: .build/projects/vs2022 ## Build - vs2022 x64 Debug\n\tdevenv .build/projects/vs2022/bgfx.sln /Build \"Debug|x64\"\nvs2022-release64: .build/projects/vs2022 ## Build - vs2022 x64 Release\n\tdevenv .build/projects/vs2022/bgfx.sln /Build \"Release|x64\"\nvs2022: vs2022-debug32 vs2022-release32 vs2022-debug64 vs2022-release64 ## Build - vs2022 x86/x64 Debug and Release\n\n.build/projects/gmake-osx-arm64:\n\t$(GENIE) --with-tools --with-combined-examples --with-shared-lib --gcc=osx-arm64 gmake\nosx-arm64-debug: .build/projects/gmake-osx-arm64 ## Build - macOS ARM Debug\n\t$(MAKE) -C .build/projects/gmake-osx-arm64 config=debug\nosx-arm64-release: .build/projects/gmake-osx-arm64 ## Build - macOS ARM Release\n\t$(MAKE) -C .build/projects/gmake-osx-arm64 config=release\nosx-arm64: osx-arm64-debug osx-arm64-release ## Build - macOS ARM Debug and Release\n\n.build/projects/gmake-ios-arm64:\n\t$(GENIE) --gcc=ios-arm64 gmake\nios-arm64-debug: .build/projects/gmake-ios-arm64 ## Build - iOS ARM64 Debug\n\t$(MAKE) -R -C .build/projects/gmake-ios-arm64 config=debug\nios-arm64-release: .build/projects/gmake-ios-arm64 ## Build - iOS ARM64 Release\n\t$(MAKE) -R -C .build/projects/gmake-ios-arm64 config=release\nios-arm64: ios-arm64-debug ios-arm64-release ## Build - iOS ARM64 Debug and Release\n\n.build/projects/gmake-rpi:\n\t$(GENIE) --gcc=rpi gmake\nrpi-debug: .build/projects/gmake-rpi ## Build - RasberryPi Debug\n\t$(MAKE) -R -C .build/projects/gmake-rpi config=debug\nrpi-release: .build/projects/gmake-rpi ## Build - RasberryPi Release\n\t$(MAKE) -R -C .build/projects/gmake-rpi config=release\nrpi: rpi-debug rpi-release ## Build - RasberryPi Debug and Release\n\n###\n\nSILENT ?= @\n\nUNAME := $(shell uname)\nifeq ($(UNAME),$(filter $(UNAME),Linux Darwin))\nifeq ($(UNAME),$(filter $(UNAME),Darwin))\nOS=darwin\nBUILD_PROJECT_DIR=gmake-osx-arm64\nBUILD_OUTPUT_DIR=osx-arm64\nBUILD_TOOLS_CONFIG=release\nBUILD_TOOLS_SUFFIX=Release\nEXE=\nelse\nOS=linux\nBUILD_PROJECT_DIR=gmake-linux-gcc\nBUILD_OUTPUT_DIR=linux64_gcc\nBUILD_TOOLS_CONFIG=release64\nBUILD_TOOLS_SUFFIX=Release\nEXE=\nendif\nelse\nOS=windows\nBUILD_PROJECT_DIR=gmake-mingw-gcc\nBUILD_OUTPUT_DIR=win64_mingw-gcc\nBUILD_TOOLS_CONFIG=release64\nBUILD_TOOLS_SUFFIX=Release\nEXE=.exe\nendif\n\ngeometryc: .build/projects/$(BUILD_PROJECT_DIR) ## Build geometryc tool.\n\t$(SILENT) $(MAKE) -C .build/projects/$(BUILD_PROJECT_DIR) geometryc config=$(BUILD_TOOLS_CONFIG)\n\t$(SILENT) cp .build/$(BUILD_OUTPUT_DIR)/bin/geometryc$(BUILD_TOOLS_SUFFIX)$(EXE) tools/bin/$(OS)/geometryc$(EXE)\n\ngeometryv: .build/projects/$(BUILD_PROJECT_DIR) ## Build geometryv tool.\n\t$(SILENT) $(MAKE) -C .build/projects/$(BUILD_PROJECT_DIR) geometryv config=$(BUILD_TOOLS_CONFIG)\n\t$(SILENT) cp .build/$(BUILD_OUTPUT_DIR)/bin/geometryv$(BUILD_TOOLS_SUFFIX)$(EXE) tools/bin/$(OS)/geometryv$(EXE)\n\nshaderc: .build/projects/$(BUILD_PROJECT_DIR) ## Build shaderc tool.\n\t$(SILENT) $(MAKE) -C .build/projects/$(BUILD_PROJECT_DIR) shaderc config=$(BUILD_TOOLS_CONFIG)\n\t$(SILENT) cp .build/$(BUILD_OUTPUT_DIR)/bin/shaderc$(BUILD_TOOLS_SUFFIX)$(EXE) tools/bin/$(OS)/shaderc$(EXE)\n\ntexturec: .build/projects/$(BUILD_PROJECT_DIR) ## Build texturec tool.\n\t$(SILENT) $(MAKE) -C .build/projects/$(BUILD_PROJECT_DIR) texturec config=$(BUILD_TOOLS_CONFIG)\n\t$(SILENT) cp .build/$(BUILD_OUTPUT_DIR)/bin/texturec$(BUILD_TOOLS_SUFFIX)$(EXE) tools/bin/$(OS)/texturec$(EXE)\n\ntexturev: .build/projects/$(BUILD_PROJECT_DIR) ## Build texturev tool.\n\t$(SILENT) $(MAKE) -C .build/projects/$(BUILD_PROJECT_DIR) texturev config=$(BUILD_TOOLS_CONFIG)\n\t$(SILENT) cp .build/$(BUILD_OUTPUT_DIR)/bin/texturev$(BUILD_TOOLS_SUFFIX)$(EXE) tools/bin/$(OS)/texturev$(EXE)\n\ntools: geometryc geometryv shaderc texturec texturev ## Build tools.\n\nclean-tools: ## Clean tools projects.\n\t-$(SILENT) rm -r .build/projects/$(BUILD_PROJECT_DIR)\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}