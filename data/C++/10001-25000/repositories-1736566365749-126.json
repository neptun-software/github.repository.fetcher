{
  "metadata": {
    "timestamp": 1736566365749,
    "page": 126,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hrydgard/ppsspp",
      "stars": 11609,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.71484375,
          "content": "# http://editorconfig.org/\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = tab\ninsert_final_newline = true\n# Would be nice, but don't want to change files unnecessarily.\n#trim_trailing_whitespace = true\n\n[*.{py,yml}]\nindent_style = space\nindent_size = 2\n\n[*.sh]\nend_of_line = lf\n\n[*.rc]\nindent_style = space\nindent_size = 4\n\n[Core/Dialog/PSPOskDialog.cpp]\ncharset = utf-8-bom\n\n[ext/native/tools/kanjifilter.h]\n# This file may need to force a BOM so compilers treat as utf-8.\ncharset = utf-8-bom\n\n[Windows/{aboutbox.rc,version.rc}]\ncharset = utf-8\n\n[ext/at3_standalone/**.{cpp,h}]\nindent_style = space\nindent_size = 4\n\n[libretro/**.{cpp,h}]\nindent_style = space\nindent_size = 3\n\n[SDL/SDLMain.mm]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3984375,
          "content": "*.cpp            text diff=cpp\n*.h              text diff=cpp\n*.mm             text diff=objc\n*.m              text diff=objc\n*.java           text diff=java\n*.sh             text eol=lf\n*.vcproj         text eol=crlf\n*.vcproj.filters text eol=crlf\n*.sln            text eol=crlf\n*.properties     text\n*.xml            text\n\n# To avoid mucking up the utf-8 characters.\nCore/Dialog/PSPOskConstants.cpp binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.76171875,
          "content": "# For MSVC\n*.lastcodeanalysissucceeded\n*.pdb\n*.ilk\n*.obj\n*.pch\n*.log\n*.dll\n*.rar\n*.exe\n*.map\n*.lib\n*.user\n*.sdf\n*.ncb\n*.opensdf\n*.suo\n*.aps\n*.exp\n*.qdact\ncontrols.ini\ndesktop.ini\nDebug\nRelease\nWindows/.vs\nWindows/x64\nWindows/ARM\nWindows/ARM64\nWindows/ipch\nWindows/bin-release\nWindows/win-version.h\nWindows/win-version-*.tmp\nandroid/assets\next/_Output\nandroid/lint.xml\nPPSSPPWindows64.exe.manifest\nPPSSPPWindows.exe.manifest\nPPSSPPWindowsARM64.exe.manifest\nPPSSPPWindowsARM.exe.manifest\nPPSSPPDebug64.exe.manifest\nPPSSPPDebug.exe.manifest\nPPSSPPDebugARM64.exe.manifest\nPPSSPPDebugARM.exe.manifest\nassets/flash0\nUWP/icph\nUWP/*.ipch\nUWP/Content/*\n!UWP/Content/.empty\nUWP/.vs\n.vs\n.vscode\n\n# For Mac\n.DS_Store\nPPSSPPSDL.app\ninclude/glslang/build_info.h\n\n# For ppsspp.ini, etc.\nppsspp.ini\nimgui.ini\nPPSSPPControls.dat\n\n# Qt Linguist files\n*.qm\n\n# Gradle/Android Studio\n.gradle\n.idea\n*.iml\nbuild\n/build*/\nversionname.txt\nversioncode.txt\nandroid/.cxx\n\n# Temp file used by jenkins windows build (TODO: remove)\ndesc.txt\n\nLogs\nMemstick\n/memstick*\nCheats\n\n/git-version.cpp\n/git-version-*.tmp\n\n.pspsh.hist\n__testoutput.txt\n__testerror.txt\n__testfinish.txt\n__testfailure.bmp\n__testcompare.png\nGameLogNotes.txt\nscreenshots\nandroid/assets/lang\nandroid/assets/flash0\nui_atlas.zim.png\nfont_atlas.zim.png\nasciifont_atlas.zim.png\nppge_atlas.zim.png\nlocal.properties\nr.sh\nWindows/compileData*\nWindows/*.ipch\nWindows/imgui.ini\nimgui.ini\n\n# For vim\n*.swp\ntags\n*.ctags\n\n# Other VCS\n.bzr/\n.bzrignore\n\n# Debian build\ndebian/files\ndebian/ppsspp.substvars\ndebian/ppsspp/\n\n# Libretro build\n*.o\n*.tmp\n*.a\n\n# YouCompleteMe file\n.ycm_extra_conf.pyc\n\n# RenderDoc\n*.rdc\n\n# CMake stuff\nCMakeFiles\n\n# Clangd \n.cache/\nbuild\nlibretro/obj/local\n\nppsspp_retroachievements.dat\nRACache\nRAPrefs_PPSSPP.cfg\n\n# For CLion\ncmake-build-*/\n\r\n/.vscode/\r\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 3.8623046875,
          "content": "# DESCRIPTION: GitLab CI/CD for libRetro (NOT FOR GitLab-proper)\n\n##############################################################################\n################################# BOILERPLATE ################################\n##############################################################################\n\n# Core definitions\nvariables:\n  GIT_SUBMODULE_STRATEGY: recursive\n\n.core-defs:\n  variables:\n    CORENAME: ppsspp\n    CORE_ARGS: -DLIBRETRO=ON\n\n.cmake-defs:\n  variables:\n    EXTRA_PATH: lib\n\n.make-defs:\n  variables:\n    MAKEFILE_PATH: libretro\n\n# Inclusion templates, required for the build to work\ninclude:\n  ################################## DESKTOPS ################################\n  # Windows 64bit\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/windows-x64-msvc19-msys2.yml'\n    \n  # Windows 32bit\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/windows-i686-msvc19-msys2.yml'\n\n  # Linux\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/linux-cmake.yml'\n\n  # MacOS 64-bit\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/osx-cmake-x86.yml'\n\n  # MacOS arm64\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/osx-cmake-arm64.yml'\n    \n  ################################## CELLULAR ################################\n  # Android  \n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/android-cmake.yml'\n\n  # iOS\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/ios-cmake.yml'\n\n  # tvOS\n  - project: 'libretro-infrastructure/ci-templates'\n    file: '/tvos-cmake.yml'\n\n  ################################## CONSOLES ################################\n  \n  #################################### MISC ##################################\n\n# Stages for building\nstages:\n  - build-prepare\n  - build-shared\n\n##############################################################################\n#################################### STAGES ##################################\n##############################################################################\n#\n################################### DESKTOPS #################################\n# Windows 64-bit\nlibretro-build-windows-x64:\n  extends:\n    - .libretro-windows-x64-msvc19-msys2-make-default\n    - .core-defs\n    - .make-defs\n\n# Windows 32-bit\nlibretro-build-windows-i686:\n  extends:\n    - .libretro-windows-i686-msvc19-msys2-make-default\n    - .core-defs\n    - .make-defs\n\n# Linux 64-bit\nlibretro-build-linux-x64:\n  extends:\n    - .libretro-linux-cmake-x86_64\n    - .core-defs\n    - .cmake-defs\n\n# Linux 32-bit\nlibretro-build-linux-i686:\n  extends:\n    - .libretro-linux-cmake-x86\n    - .core-defs\n    - .cmake-defs\n\n# MacOS 64-bit\nlibretro-build-osx-x64:\n  variables:\n    CORE_ARGS: -DLIBRETRO=ON -DUSE_SYSTEM_LIBPNG=OFF\n  extends:\n    - .libretro-osx-cmake-x86_64\n    - .core-defs\n    - .cmake-defs\n\n# MacOS 64-bit\nlibretro-build-osx-arm64:\n  extends:\n    - .libretro-osx-cmake-arm64\n    - .core-defs\n    - .cmake-defs\n\n################################### CELLULAR #################################\n# Android ARMv7a\nlibretro-build-android-armeabi-v7a:\n  extends:\n    - .libretro-android-cmake-armeabi-v7a\n    - .core-defs\n\n# Android ARMv8a\nlibretro-build-android-arm64-v8a:\n  extends:\n    - .libretro-android-cmake-arm64-v8a\n    - .core-defs\n\n# Android 64-bit x86\nlibretro-build-android-x86_64:\n  extends:\n    - .libretro-android-cmake-x86_64\n    - .core-defs\n\n# Android 32-bit x86\nlibretro-build-android-x86:\n  extends:\n    - .libretro-android-cmake-x86\n    - .core-defs\n\n# iOS arm64\nlibretro-build-ios-arm64:\n  extends:\n    - .libretro-ios-cmake-arm64\n    - .core-defs\n    - .cmake-defs\n  variables:\n    CORE_ARGS: -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/ios.cmake -DLIBRETRO=ON\n\n# tvOS arm64\nlibretro-build-tvos-arm64:\n  extends:\n    - .libretro-tvos-cmake-arm64\n    - .core-defs\n    - .cmake-defs\n  variables:\n    CORE_ARGS: -DIOS_PLATFORM=TVOS -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/ios.cmake -DLIBRETRO=ON\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.171875,
          "content": "[submodule \"libretro/libretro-common\"]\n\tpath = libretro/libretro-common\n\turl = https://github.com/libretro/libretro-common.git\n[submodule \"pspautotests\"]\n\tpath = pspautotests\n\turl = https://github.com/hrydgard/pspautotests.git\n[submodule \"ffmpeg\"]\n\tpath = ffmpeg\n\turl = https://github.com/hrydgard/ppsspp-ffmpeg.git\n[submodule \"dx9sdk\"]\n\tpath = dx9sdk\n\turl = https://github.com/hrydgard/minidx9.git\n[submodule \"ext/armips\"]\n\tpath = ext/armips\n\turl = https://github.com/Kingcom/armips.git\n[submodule \"ext/glslang\"]\n\tpath = ext/glslang\n\turl = https://github.com/KhronosGroup/glslang.git\n[submodule \"ext/SPIRV-Cross\"]\n\tpath = ext/SPIRV-Cross\n\turl = https://github.com/KhronosGroup/SPIRV-Cross.git\n[submodule \"ext/discord-rpc\"]\n\tpath = ext/discord-rpc\n\turl = https://github.com/discordapp/discord-rpc.git\n[submodule \"ext/rapidjson\"]\n\tpath = ext/rapidjson\n\turl = https://github.com/Tencent/rapidjson.git\n[submodule \"ext/native/tools/prebuilt\"]\n\tpath = ext/native/tools/prebuilt\n\turl = https://github.com/hrydgard/ppsspp-freetype.git\n[submodule \"ext/miniupnp\"]\n\tpath = ext/miniupnp\n\turl = https://github.com/miniupnp/miniupnp.git\n[submodule \"zstd\"]\n\tpath = ext/zstd\n\turl = https://github.com/facebook/zstd.git\n[submodule \"SDL/macOS\"]\n\tpath = SDL/macOS\n\turl = https://github.com/hrydgard/ppsspp-mac-sdl\n[submodule \"ppsspp-debugger\"]\n\tpath = assets/debugger\n\turl = https://github.com/unknownbrackets/ppsspp-debugger.git\n\tbranch = bundled\n[submodule \"cpu_features\"]\n\tpath = ext/cpu_features\n\turl = https://github.com/google/cpu_features.git\n[submodule \"ext/rcheevos\"]\n\tpath = ext/rcheevos\n\turl = https://github.com/RetroAchievements/rcheevos.git\n[submodule \"ext/naett\"]\n\tpath = ext/naett\n\turl = https://github.com/erkkah/naett.git\n[submodule \"ext/libchdr\"]\n\tpath = ext/libchdr\n\turl = https://github.com/rtissera/libchdr.git\n[submodule \"ext/libadrenotools\"]\n\tpath = ext/libadrenotools\n\turl = https://github.com/bylaws/libadrenotools.git\n[submodule \"ext/OpenXR-SDK\"]\n\tpath = ext/OpenXR-SDK\n\turl = https://github.com/KhronosGroup/OpenXR-SDK.git\n[submodule \"ios/MoltenVK\"]\n\tpath = ios/MoltenVK\n\turl = https://github.com/hrydgard/ppsspp-moltenvk.git\n[submodule \"ext/lua\"]\n\tpath = ext/lua\n\turl = https://github.com/hrydgard/ppsspp-lua.git\n"
        },
        {
          "name": ".ycm_extra_conf.py",
          "type": "blob",
          "size": 6.4521484375,
          "content": "# A simple YouCompleteMe (vim plugin) configuration that works well with PPSSPP.\n\n# This file (.ycm_extra_conf.py, to which all the below applies, and nothing else)\n# is free and unencumbered software released into the public domain.\n#\n# Anyone is free to copy, modify, publish, use, compile, sell, or\n# distribute this software, either in source code form or as a compiled\n# binary, for any purpose, commercial or non-commercial, and by any\n# means.\n#\n# In jurisdictions that recognize copyright laws, the author or authors\n# of this software dedicate any and all copyright interest in the\n# software to the public domain. We make this dedication for the benefit\n# of the public at large and to the detriment of our heirs and\n# successors. We intend this dedication to be an overt act of\n# relinquishment in perpetuity of all present and future rights to this\n# software under copyright law.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n# OTHER DEALINGS IN THE SOFTWARE.\n#\n# For more information, please refer to <http://unlicense.org/>\n\nimport os\nimport ycm_core\n\n# These are the compilation flags that will be used in case there's no\n# compilation database set (by default, one is not set).\n# CHANGE THIS LIST OF FLAGS. YES, THIS IS THE DROID YOU HAVE BEEN LOOKING FOR.\nflags = [\n'-Wall',\n'-Werror',\n'-Wno-long-long',\n'-Wno-variadic-macros',\n'-Wno-missing-field-initializers',\n'-fexceptions',\n'-DNDEBUG',\n'-Iext/native',\n'-Iext',\n'-Iext/glew',\n'-ICommon',\n# THIS IS IMPORTANT! Without a \"-std=<something>\" flag, clang won't know which\n# language to use when compiling headers. So it will guess. Badly. So C++\n# headers will be compiled as C headers. You don't want that so ALWAYS specify\n# a \"-std=<something>\".\n# For a C project, you would set this to something like 'c99' instead of\n# 'c++11'.\n'-std=c++11',\n# ...and the same thing goes for the magic -x option which specifies the\n# language that the files to be compiled are written in. This is mostly\n# relevant for c++ headers.\n# For a C project, you would set this to 'c' instead of 'c++'.\n'-x',\n'c++',\n'-isystem',\n'../BoostParts',\n'-isystem',\n# This path will only work on OS X, but extra paths that don't exist are not\n# harmful\n'/System/Library/Frameworks/Python.framework/Headers',\n'-isystem',\n'../llvm/include',\n'-isystem',\n'../llvm/tools/clang/include',\n'-I',\n'.',\n'-I',\n'./ClangCompleter',\n'-isystem',\n'./tests/gmock/gtest',\n'-isystem',\n'./tests/gmock/gtest/include',\n'-isystem',\n'./tests/gmock',\n'-isystem',\n'./tests/gmock/include',\n'-isystem',\n'/usr/include',\n'-isystem',\n'/usr/local/include',\n'-isystem',\n'/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1',\n'-isystem',\n'/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include',\n]\n\n\n# Set this to the absolute path to the folder (NOT the file!) containing the\n# compile_commands.json file to use that instead of 'flags'. See here for\n# more details: http://clang.llvm.org/docs/JSONCompilationDatabase.html\n#\n# You can get CMake to generate this file for you by adding:\n#   set( CMAKE_EXPORT_COMPILE_COMMANDS 1 )\n# to your CMakeLists.txt file.\n#\n# Most projects will NOT need to set this to anything; you can just change the\n# 'flags' list of compilation flags. Notice that YCM itself uses that approach.\ncompilation_database_folder = ''\n\nif os.path.exists( compilation_database_folder ):\n  database = ycm_core.CompilationDatabase( compilation_database_folder )\nelse:\n  database = None\n\nSOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]\n\ndef DirectoryOfThisScript():\n  return os.path.dirname( os.path.abspath( __file__ ) )\n\n\ndef MakeRelativePathsInFlagsAbsolute( flags, working_directory ):\n  if not working_directory:\n    return list( flags )\n  new_flags = []\n  make_next_absolute = False\n  path_flags = [ '-isystem', '-I', '-iquote', '--sysroot=' ]\n  for flag in flags:\n    new_flag = flag\n\n    if make_next_absolute:\n      make_next_absolute = False\n      if not flag.startswith( '/' ):\n        new_flag = os.path.join( working_directory, flag )\n\n    for path_flag in path_flags:\n      if flag == path_flag:\n        make_next_absolute = True\n        break\n\n      if flag.startswith( path_flag ):\n        path = flag[ len( path_flag ): ]\n        new_flag = path_flag + os.path.join( working_directory, path )\n        break\n\n    if new_flag:\n      new_flags.append( new_flag )\n  return new_flags\n\n\ndef IsHeaderFile( filename ):\n  extension = os.path.splitext( filename )[ 1 ]\n  return extension in [ '.h', '.hxx', '.hpp', '.hh' ]\n\n\ndef GetCompilationInfoForFile( filename ):\n  # The compilation_commands.json file generated by CMake does not have entries\n  # for header files. So we do our best by asking the db for flags for a\n  # corresponding source file, if any. If one exists, the flags for that file\n  # should be good enough.\n  if IsHeaderFile( filename ):\n    basename = os.path.splitext( filename )[ 0 ]\n    for extension in SOURCE_EXTENSIONS:\n      replacement_file = basename + extension\n      if os.path.exists( replacement_file ):\n        compilation_info = database.GetCompilationInfoForFile(\n          replacement_file )\n        if compilation_info.compiler_flags_:\n          return compilation_info\n    return None\n  return database.GetCompilationInfoForFile( filename )\n\n\ndef FlagsForFile( filename, **kwargs ):\n  if database:\n    # Bear in mind that compilation_info.compiler_flags_ does NOT return a\n    # python list, but a \"list-like\" StringVec object\n    compilation_info = GetCompilationInfoForFile( filename )\n    if not compilation_info:\n      return None\n\n    final_flags = MakeRelativePathsInFlagsAbsolute(\n      compilation_info.compiler_flags_,\n      compilation_info.compiler_working_dir_ )\n\n    # NOTE: This is just for YouCompleteMe; it's highly likely that your project\n    # does NOT need to remove the stdlib flag. DO NOT USE THIS IN YOUR\n    # ycm_extra_conf IF YOU'RE NOT 100% SURE YOU NEED IT.\n    try:\n      final_flags.remove( '-stdlib=libc++' )\n    except ValueError:\n      pass\n  else:\n    relative_to = DirectoryOfThisScript()\n    final_flags = MakeRelativePathsInFlagsAbsolute( flags, relative_to )\n\n  return {\n    'flags': final_flags,\n    'do_cache': True\n  }\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 92.341796875,
          "content": "# vim:noexpandtab:\ncmake_minimum_required(VERSION 3.16)\nproject(PPSSPP)\nenable_testing()\n\n#This is supposed to work but doesn't!\nif(NOT ANDROID)\n\tset(CMAKE_CXX_STANDARD 17)\n\tset(CMAKE_CXX_STANDARD_REQUIRED ON)\nendif()\n\nenable_language(ASM)\n\nadd_definitions(-D__STDC_CONSTANT_MACROS)\n\n# Include AppleClang and Clang.\nif(${CMAKE_CXX_COMPILER_ID} MATCHES \"Clang\")\n\tset(CLANG ON)\n\tmessage(\"Clang enabled\")\nendif()\n\nif(FORCED_CPU)\n\tmessage(\"Detected CPU (${CMAKE_SYSTEM_PROCESSOR}) overridden as: ${FORCED_CPU}\")\n\tset(CMAKE_SYSTEM_PROCESSOR ${FORCED_CPU})\nendif()\n\n# Detect CPU from CMAKE configuration. Toolchains should set this up\nif(CMAKE_SYSTEM_PROCESSOR)\n\tif(CMAKE_OSX_ARCHITECTURES)\n\t\tif(\"${CMAKE_OSX_ARCHITECTURES}\" MATCHES \".*86.*\")\n\t\t\tset(X86_DEVICE ON)\n\t\t\tset(X86_64_DEVICE ON)\n\t\tendif()\n\t\tif(\"${CMAKE_OSX_ARCHITECTURES}\" MATCHES \"arm64\")\n\t\t\tset(ARM64 ON)\n\t\tendif()\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^aarch64\")\n\t\tset(ARM64 ON)\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^arm64\")\n\t\t# M1 Mac\n\t\tset(ARM64 ON)\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^arm\")\n\t\tmessage(\"ARM_DEVICE is a go\")\n\t\tset(ARM_DEVICE ON)\n\t\tif(UNIX AND NOT APPLE)\n\t\t\texecute_process(COMMAND cat /proc/cpuinfo OUTPUT_VARIABLE OUTSTR)\n\t\t\tstring(FIND \"${OUTSTR}\" \"ODROID-XU\" pos)\n\t\t\tif(NOT (pos LESS 0))\n\t\t\t\tadd_compile_options(-mfloat-abi=hard -marm -mtune=cortex-a15.cortex-a7 -mcpu=cortex-a15 -fomit-frame-pointer)\n\t\t\t\tset(ARM_NO_VULKAN ON)\n\t\t\tendif()\n\t\tendif()\n\t\tif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^armv7\")\n\t\t\tset(ARMV7_DEVICE ON)\n\t\t\tadd_compile_options(-mfpu=neon)\n\t\t\t# Horrifying workaround for bug in android cmake stuff for asm files\n\t\t\tif(ANDROID)\n\t\t\t\tset(CMAKE_ASM_FLAGS \"${CMAKE_ASM_FLAGS} -target armv7a-none-linux-android\")\n\t\t\tendif()\n\t\tendif()\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^amd64\" OR ${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^x86_64\" OR ${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^AMD64\")\n\t\tset(X86_DEVICE ON)\n\t\tset(X86_64_DEVICE ON)\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^x86\" OR ${CMAKE_SYSTEM_PROCESSOR} MATCHES \"i.86\")\n\t\tset(X86_DEVICE ON)\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^mips\")\n\t\tset(MIPS_DEVICE ON)\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^riscv64\")\n\t\tset(RISCV64_DEVICE ON)\n\telseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"^loongarch64\")\n\t\tset(LOONGARCH64_DEVICE ON)\n\telse()\n\t\tmessage(\"Unknown CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}\")\n\tendif()\nendif()\n\n# the libraries in the ffmpeg/ directory are not compatible with mingw\nif(MINGW AND NOT DEFINED USE_SYSTEM_FFMPEG)\n\tset(USE_SYSTEM_FFMPEG ON)\nendif()\n\nif(NOT ANDROID AND NOT IOS)\n\tif(ARM_DEVICE OR SIMULATOR)\n\t\tset(USING_EGL ON)\n\tendif()\nendif()\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Linux\" AND NOT USE_LIBNX)\n\tset(LINUX ON)\n\tadd_definitions(-D__STDC_CONSTANT_MACROS)\nendif()\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n\tset(MACOSX ON)\n\tset(USING_EGL OFF)\nendif()\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Android\")\n\tset(ANDROID ON)\nendif()\n\n# We only support Vulkan on Unix, macOS (by MoltenVK), Android and Windows.\nif(ANDROID OR WIN32 OR (UNIX AND NOT ARM_NO_VULKAN))\n\tset(VULKAN ON)\nendif()\n\n# Default to bundled SDL2 on macOS, system SDL2 elsewhere.\nif(APPLE AND NOT IOS)\n\tset(DEFAULT_USE_SYSTEM_LIBSDL2 OFF)\nelse()\n\tset(DEFAULT_USE_SYSTEM_LIBSDL2 ON)\nendif()\n\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/Modules)\nif(NOT IOS)\n\tlist(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/sdl)\nendif()\n\ninclude(CheckCXXSourceCompiles)\ninclude(GNUInstallDirs)\n\nadd_definitions(-DASSETS_DIR=\"${CMAKE_INSTALL_FULL_DATADIR}/ppsspp/assets/\")\n\nif(OPENXR AND NOT ARMV7_DEVICE)\n\tadd_definitions(-DOPENXR)\n\tadd_subdirectory(ext/OpenXR-SDK)\n\tmessage(\"OpenXR enabled\")\nendif()\n\nif(GOLD)\n\tadd_definitions(-DGOLD)\n\tmessage(\"Gold Build\")\nelse()\n\tmessage(\"Non-gold Build\")\nendif()\n\nif(IOS_APP_STORE)\n\tadd_definitions(-DPPSSPP_PLATFORM_IOS_APP_STORE)\n\tadd_definitions(-DGLES_SILENCE_DEPRECATION)\n\t# Set a global default to not generate schemes for each target.\n\t# Makes using XCode sligthly more sane.\n\tset(CMAKE_XCODE_GENERATE_SCHEME NO)\n\tset(CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION FALSE)\n\tset(CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE DISABLED)\n\tmessage(\"iOS App Store build\")\nelseif(IOS)\n\tmessage(\"iOS sideload build\")\nendif()\n\n# User-editable options (go into CMakeCache.txt)\n# :: Processors\noption(ARMV7 \"Set to ON if targeting an ARMv7 processor\" ${ARMV7_DEVICE})\noption(ARM \"Set to ON if targeting an ARM processor\" ${ARM_DEVICE})\noption(MIPS \"Set to ON if targeting a MIPS processor\" ${MIPS_DEVICE})\noption(RISCV64 \"Set to ON if targeting a RISCV64 processor\" ${RISCV64_DEVICE})\noption(LOONGARCH64 \"Set to ON if targeting a LOONGARCH64 processor\" ${LOONGARCH64_DEVICE})\noption(X86 \"Set to ON if targeting an X86 processor\" ${X86_DEVICE})\noption(X86_64 \"Set to ON if targeting an X86_64 processor\" ${X86_64_DEVICE})\n# :: Environments\noption(USING_EGL \"Set to ON if target environment uses EGL\" ${USING_EGL})\noption(USING_FBDEV \"Set to ON if target environment uses fbdev (eg. Pandora)\" ${USING_FBDEV})\noption(USING_GLES2 \"Set to ON if target device uses OpenGL ES 2.0\" ${USING_GLES2})\noption(USING_X11_VULKAN \"Set to OFF if target environment doesn't use X11 for Vulkan\" ON)\noption(USE_WAYLAND_WSI \"Enable or disable Wayland WSI support for Vulkan\" ON)\noption(USE_VULKAN_DISPLAY_KHR \"Enable or disable full screen display of Vulkan\" ${USE_VULKAN_DISPLAY_KHR})\n# :: Frontends\noption(USING_QT_UI \"Set to ON if you wish to use the Qt frontend wrapper\" ${USING_QT_UI})\noption(MOBILE_DEVICE \"Set to ON when targeting a mobile device\" ${MOBILE_DEVICE})\noption(HEADLESS \"Set to OFF to not generate the PPSSPPHeadless target\" ${HEADLESS})\noption(UNITTEST \"Set to ON to generate the unittest target\" ${UNITTEST})\noption(SIMULATOR \"Set to ON when targeting an x86 simulator of an ARM platform\" ${SIMULATOR})\noption(LIBRETRO \"Set to ON to generate the libretro target\" OFF)\n# :: Options\noption(USE_LIBNX \"Set to ON to build for Switch(libnx)\" OFF)\noption(USE_FFMPEG \"Build with FFMPEG support\" ON)\noption(USE_DISCORD \"Build with Discord support\" ON)\noption(USE_MINIUPNPC \"Build with miniUPnPc support\" ON)\noption(USE_ARMIPS \"Build with armips support in API/debuggerdebugger\" ON)\noption(USE_SYSTEM_SNAPPY \"Dynamically link against system snappy\" ${USE_SYSTEM_SNAPPY})\noption(USE_SYSTEM_FFMPEG \"Dynamically link against system FFMPEG\" ${USE_SYSTEM_FFMPEG})\noption(USE_SYSTEM_LIBZIP \"Dynamically link against system libzip\" ${USE_SYSTEM_LIBZIP})\noption(USE_SYSTEM_LIBSDL2 \"Dynamically link against system SDL2\" ${DEFAULT_USE_SYSTEM_LIBSDL2})\noption(USE_SYSTEM_LIBPNG \"Dynamically link against system libpng\" ON)\noption(USE_SYSTEM_ZSTD \"Dynamically link against system zstd\" ${USE_SYSTEM_ZSTD})\noption(USE_SYSTEM_MINIUPNPC \"Dynamically link against system miniUPnPc\" ${USE_SYSTEM_MINIUPNPC})\noption(USE_ASAN \"Use address sanitizer\" OFF)\noption(USE_UBSAN \"Use undefined behaviour sanitizer\" OFF)\noption(USE_CCACHE \"Use ccache if detected\" ON)\noption(USE_NO_MMAP \"Disable mmap usage\" OFF)\n\nif(USE_CCACHE)\n\tinclude(ccache)\nendif()\n\nif(UNIX AND NOT (APPLE OR ANDROID) AND VULKAN)\n\tif(USING_X11_VULKAN)\n\t\tmessage(\"Using X11 for Vulkan\")\n\t\tfind_package(X11)\n\t\tinclude_directories(${X11_Xlib_INCLUDE_PATH})\n\t\tadd_definitions(-DVK_USE_PLATFORM_XLIB_KHR)\n\telse()\n\t\tmessage(\"NOT using X11 for Vulkan\")\n\tendif()\n\n\t# add_definitions(-DVK_USE_PLATFORM_XCB_KHR)\n\tfind_package(Wayland)\n\tif(NOT WAYLAND_FOUND)\n\t\tmessage(STATUS \"Could not find Wayland libraries, disabling Wayland WSI support for Vulkan.\")\n\telseif(USE_WAYLAND_WSI)\n\t\tinclude_directories(${WAYLAND_INCLUDE_DIR})\n\t\tadd_definitions(-DVK_USE_PLATFORM_WAYLAND_KHR)\n\tendif()\n\n\tif(USE_VULKAN_DISPLAY_KHR)\n\t\tmessage(STATUS \"Using experimental full-screen display for Vulkan.\")\n\t\tadd_definitions(-DVK_USE_PLATFORM_DISPLAY_KHR)\n\tendif()\nendif()\n\nif(LIBRETRO)\n\tadd_definitions(-D__LIBRETRO__)\n\tadd_definitions(-DGLEW_NO_GLU)\n\tif(NOT MSVC)\n\t\tadd_compile_options(-fPIC)\n\tendif()\nendif()\n\nif(ANDROID)\n\tset(MOBILE_DEVICE ON)\n\tset(USING_GLES2 ON)\nendif()\n\nif(ANDROID AND NOT LIBRETRO)\n\tset(CoreLibName ppsspp_jni)\n\tset(CoreLinkType SHARED)\nelse()\n\tset(CoreLibName Core)\n\tset(CoreLinkType STATIC)\nendif()\n\nif(NOT ANDROID AND NOT WIN32 AND (NOT APPLE OR IOS))\n\tset(HTTPS_NOT_AVAILABLE ON)\nendif()\n\n# Made this flag negative because it's hopefully quite temporary and didn't\n# want to have to update all build systems.\nif(HTTPS_NOT_AVAILABLE)\n\tadd_definitions(-DHTTPS_NOT_AVAILABLE)\nendif()\n\n# Disable the usage of MMAP for the memory system.\n# It is not tested on all platforms and can cause issues.\nif(USE_NO_MMAP)\n\tadd_definitions(-DNO_MMAP -DMASKED_PSP_MEMORY)\nendif()\n\n# Work around for some misfeature of the current glslang build system\ninclude_directories(ext/glslang)\n\n# Not sure if this is the best way - what about system glew?\n# Anyway, glew will be going away anyway.\ninclude_directories(ext/glew)\n\nif(OPENXR AND NOT ARMV7_DEVICE)\n\tset(OPENGL_LIBRARIES GLESv3 EGL)\nelseif(NOT OPENGL_LIBRARIES AND USING_GLES2)\n\tset(OPENGL_LIBRARIES GLESv2 EGL)\nendif()\n\nif(NOT OPENGL_LIBRARIES)\n\tif(POLICY CMP0072)\n\t\tcmake_policy(SET CMP0072 NEW)\n\tendif()\n\tfind_package(OpenGL REQUIRED)\nendif()\n\nif(USING_EGL)\n\tif(NOT EGL_LIBRARIES)\n\t\tset(EGL_LIBRARIES EGL)\n\tendif()\n\tset(OPENGL_LIBRARIES ${OPENGL_LIBRARIES} ${EGL_LIBRARIES})\nendif()\n\nif(NOT LIBRETRO AND NOT IOS AND NOT MACOSX)\n\tfind_package(SDL2)\n\tfind_package(SDL2_ttf)\n\tfind_package(Fontconfig)\n\n\t# TODO: this can be removed once CI supports newer SDL2_ttf\n\tif (NOT SDL2_ttf_FOUND)\n\t\tfind_package(PkgConfig)\n\t\tif(PkgConfig_FOUND)\n\t\t\tpkg_check_modules(SDL2_ttf_PKGCONFIG IMPORTED_TARGET SDL2_ttf)\n\t\tendif()\n\tendif()\nendif()\n\nif(MACOSX AND NOT IOS)\n\tif(USE_SYSTEM_LIBSDL2)\n\t\tfind_package(SDL2)\n\t\tfind_package(SDL2_ttf)\n\telse()\n\t\tfind_library(SDL2Fwk SDL2 REQUIRED PATHS SDL/macOS)\n\t\tmessage(STATUS \"found SDL2Fwk=${SDL2Fwk}\")\n\t\tadd_definitions(-DHAVE_SYSCTLBYNAME)\n\tendif()\nendif()\n\ninclude(FindThreads)\n\nif(APPLE)\n\tfind_library(COCOA_LIBRARY Cocoa)\n\tfind_library(IOKIT_LIBRARY IOKit)\n\tfind_library(QUARTZ_CORE_LIBRARY QuartzCore)\nendif()\n\ninclude_directories(\"${CMAKE_SOURCE_DIR}\")\n\nif(USING_EGL)\n\tadd_definitions(-DUSING_EGL)\nendif()\nif(USING_FBDEV)\n\tadd_definitions(-DUSING_FBDEV -DEGL_NO_X11)\nendif()\nif(USING_GLES2)\n\tadd_definitions(-DUSING_GLES2)\nendif()\nif(MOBILE_DEVICE)\n\tadd_definitions(-DMOBILE_DEVICE)\nendif()\n\nif(NOT CMAKE_BUILD_TYPE)\n\tmessage(STATUS \"No build type selected, default to Release\")\n\tset(CMAKE_BUILD_TYPE \"Release\")\nelse()\n\tmessage(STATUS \"Build type: ${CMAKE_BUILD_TYPE}\")\nendif()\n\nmessage(\"CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}\")\n\n# Let's not use elseif here so we can catch dupes.\nif(ARMV7)\n\tmessage(\"Generating for ARMv7, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(ARM)\n\tmessage(\"Generating for ARM, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(MIPS AND X86)\n\tmessage(\"Generating for MIPS in x86 mode, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(MIPS)\n\tmessage(\"Generating for MIPS, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(RISCV64)\n\tmessage(\"Generating for RISCV64, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(LOONGARCH64)\n\tmessage(\"Generating for LOONGARCH64, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(X86)\n\tmessage(\"Generating for x86, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(X86_64)\n\tmessage(\"Generating for x86_64, ${CMAKE_BUILD_TYPE}\")\nendif()\nif(ARM64)\n\tmessage(\"Generating for ARMv8, ${CMAKE_BUILD_TYPE}\")\nendif()\n\n# It looks like the flags for the selected build type are written to the cache after each run, which causes some of the operations\n# below to keep expanding them with the same flags over and over on every run, leading to a rebuild of the majority of the files.\n# To work around this, remember the initial state of the variables from the first run and reset the variables to that.\n# TODO: Setting the attributes per target would probably be a better solution.\nforeach (LANGUAGE C CXX)\n\tforeach (BUILD_TYPE DEBUG MINSIZEREL RELEASE RELWITHDEBINFO)\n\t\tset(_CMAKE_${LANGUAGE}_FLAGS_${BUILD_TYPE}_INITIAL ${CMAKE_${LANGUAGE}_FLAGS_${BUILD_TYPE}} CACHE STRING \"\")\n\t\tset(CMAKE_${LANGUAGE}_FLAGS_${BUILD_TYPE} ${_CMAKE_${LANGUAGE}_FLAGS_${BUILD_TYPE}_INITIAL})\n\tendforeach()\nendforeach()\n\nif(NOT MSVC)\n\t# NEON optimizations in libpng17 seem to cause PNG load errors, see #14485.\n\tadd_definitions(-DPNG_ARM_NEON_OPT=0)\n\n\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Werror=return-type -Wno-unused-function -Wno-sign-compare -Wno-unused-but-set-variable -Wno-reorder -Wno-unknown-pragmas -Wno-unused-value -Wno-unused-variable\")\n\tif(NOT CLANG)\n\t\t# This one is very useful but has many false positives.\n\t\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-class-memaccess\")\n\telse()\n\t\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations\")\n\tendif()\n\n\tif(ANDROID)\n\t\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++17\")\n\tendif()\n\tif(CLANG)\n\t\tadd_definitions(\n\t\t\t-Wno-nullability-completeness\n\t\t\t-Wno-tautological-pointer-compare\n\t\t\t-Wno-deprecated-register\n\t\t\t-Wno-sign-conversion\n\t\t\t-Wno-shorten-64-to-32\n\t\t)\n\t\tif(MACOSX OR IOS)\n\t\t\t# Hack around a bad check for __GNUC__ in basis_universal that makes it use old stuff on iOS\n\t\t\tadd_definitions(-Wno-deprecated-builtins)\n\t\tendif()\n\tendif()\n\n\tif(USE_ASAN)\n\t\tmessage(\"Address sanitizer enabled (DEBUG only)\")\n\t\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address\")\n\t\tset(CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_LINKER_FLAGS_DEBUG} -fsanitize=address\")\n\t\tadd_definitions(-DUSE_ASAN)\n\tendif()\n\tif(USE_UBSAN)\n\t\tmessage(\"Undefined behaviour sanitizer enabled (DEBUG only)\")\n\t\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=undefined\")\n\t\tset(CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_LINKER_FLAGS_DEBUG} -fsanitize=undefined\")\n\n\t\t# UBSAN is a collection of sanitizers, including vtpr, which reqiuires RTTI.\n\t\t# ext/glslang disables RTTI by default using the `ENABLE_RTTI` option.\n\t\t# If RTTI is disabled, we must also disable the vtpr sanitizer.\n\t\tif(NOT ENABLE_RTTI)\n\t\t\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-sanitize=vptr\")\n\t\t\tset(CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_LINKER_FLAGS_DEBUG} -fno-sanitize=vptr\")\n\t\tendif()\n\tendif()\n\n\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -g -D_DEBUG\")\n\tset(CMAKE_CXX_FLAGS_MINSIZEREL \"${CMAKE_CXX_FLAGS_MINSIZEREL} -Os -D_NDEBUG\")\n\tset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -O2 -D_NDEBUG\")\n\tset(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -O2 -g -D_NDEBUG\")\n\tset(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -g -D_DEBUG\")\n\tset(CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL} -Os -D_NDEBUG\")\n\tset(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} -O2 -D_NDEBUG\")\n\tset(CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -O2 -g -D_NDEBUG\")\n\n\t# Enable checking printf-like format strings (also works for logging functions)\n\tadd_definitions(-Wformat)\n\n\t# Disable some warnings\n\tadd_definitions(-Wno-multichar)\n\n\t# Don't compile with strict aliasing, we're not 100% aliasing-safe\n\tadd_compile_options(-fno-strict-aliasing)\n\tif(${CMAKE_C_COMPILER_ID} STREQUAL \"Intel\")\n\t\tset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -parallel -fopenmp\")\n\tendif()\n\n\tadd_definitions(-fno-math-errno)\n\n\tif(X86 OR X86_64)\n\t\t# enable sse2 code generation\n\t\tadd_definitions(-msse2)\n\t\tif(NOT X86_64 AND NOT CLANG)\n\t\t\tadd_definitions(-mfpmath=sse)\n\t\t\t# add_definitions(-mstackrealign)\n\t\t endif()\n\tendif()\n\n\tif(IOS)\n\t\tset(CMAKE_OSX_DEPLOYMENT_TARGET \"12.0\")\n\telseif(APPLE AND NOT CMAKE_CROSSCOMPILING)\n\t\tif(LIBRETRO AND ARM64)\n\t\t\tset(CMAKE_OSX_DEPLOYMENT_TARGET \"10.14\")\n\t\telse()\n\t\t\tset(CMAKE_OSX_DEPLOYMENT_TARGET \"10.13\")\n\t\tendif()\n\t\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++ -U__STRICT_ANSI__\")\n\t\tset(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY \"libc++\")\n\telseif(NOT ANDROID)\n\t\t# TODO: See if we can get rid of no-psabi\n\t\tif(NOT ${CMAKE_C_COMPILER_ID} STREQUAL \"Intel\" AND NOT ${CMAKE_CXX_COMPILER_ID} MATCHES \"Clang\")\n\t\t\tadd_definitions(-Wno-psabi)\n\t\tendif()\n\t\tadd_definitions(-D_XOPEN_SOURCE=700)\n\t\tadd_definitions(-D_XOPEN_SOURCE_EXTENDED -D__BSD_VISIBLE=1 -D_BSD_SOURCE -D_DEFAULT_SOURCE)\n\t\tif(CMAKE_SYSTEM_NAME MATCHES \"Linux|SunOS\" OR MINGW)\n\t\t\tadd_definitions(-D_LARGEFILE64_SOURCE=1 -D_FILE_OFFSET_BITS=64)\n\t\tendif()\n\t\tif(${CMAKE_SYSTEM_NAME} STREQUAL \"NetBSD\")\n\t\t\tadd_definitions(-D_NETBSD_SOURCE)\n\t\tendif()\n\telseif(ANDROID)\n\t\tadd_definitions(-fsigned-char)\n\tendif()\nelse()\n\t# Disable warnings about MS-specific _s variants of libc functions\n\tadd_definitions(-D_CRT_SECURE_NO_WARNINGS)\n\tif (NOT CLANG)\n\t\tadd_compile_options(-MP)\n\tendif()\n\tset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG\")\n\tset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -D_NDEBUG\")\n\tset(CMAKE_EXE_LINKER_FLAGS /NODEFAULTLIB:\"libcmt.lib\")\nendif()\n\nif(WIN32)\n\tadd_definitions(-D_UNICODE -DUNICODE)\n\tadd_definitions(-DUSING_WIN_UI)\nendif()\n\nif(NOT ANDROID)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/lib\")\nendif()\n\n# This sets up the MSVC project dirs according to the physical project dirs\nmacro(setup_target_project TargetName ProjectDir)\n\tget_property(TargetSources TARGET \"${TargetName}\" PROPERTY SOURCES)\n\tforeach(Source ${TargetSources})\n\t\t# Figure out the file's path relative to the ProjectDir\n\t\t# NOTE: &#$@ double-quoted regexps\n\t\tstring(REGEX REPLACE \"${ProjectDir}\" \"\" RelativePath \"${Source}\")\n\t\tstring(REGEX REPLACE \"[\\\\\\\\/][^\\\\\\\\/]*$\" \"\" RelativePath \"${RelativePath}\")\n\t\tstring(REGEX REPLACE \"^[\\\\\\\\/]\" \"\" RelativePath \"${RelativePath}\")\n\t\tstring(REGEX REPLACE \"/\" \"\\\\\\\\\\\\\\\\\" RelativePath \"${RelativePath}\")\n\t\t# put the source file in a source_group equivalent to the relative path\n\t\tsource_group(\"${RelativePath}\" FILES ${Source})\n\tendforeach()\nendmacro()\n\nadd_subdirectory(ext)\n\nif(WIN32)\n\tinclude_directories(dx9sdk/Include)\n\tinclude_directories(dx9sdk/Include/DX11)\nendif()\n\n\nset(CommonJIT\n\tCore/MIPS/JitCommon/JitCommon.cpp\n\tCore/MIPS/JitCommon/JitCommon.h\n\tCore/MIPS/JitCommon/JitBlockCache.cpp\n\tCore/MIPS/JitCommon/JitBlockCache.h\n\tCore/MIPS/JitCommon/JitState.cpp\n\tCore/MIPS/JitCommon/JitState.h\n)\n\nset(CommonX86\n\tCommon/ABI.cpp\n\tCommon/ABI.h\n\tCommon/CPUDetect.cpp\n\tCommon/CPUDetect.h\n\tCommon/Thunk.cpp\n\tCommon/Thunk.h\n\tCommon/x64Analyzer.cpp\n\tCommon/x64Analyzer.h\n\tCommon/x64Emitter.cpp\n\tCommon/x64Emitter.h\n)\nsource_group(x86 FILES ${CommonX86})\n\nset(CommonARM\n\tCommon/ArmCPUDetect.cpp\n\tCommon/ArmEmitter.h\n\tCommon/ArmEmitter.cpp\n)\nsource_group(ARM FILES ${CommonARM})\n\nset(CommonARM64\n\tCommon/Arm64Emitter.h\n\tCommon/Arm64Emitter.cpp\n\tCommon/ArmEmitter.h\n\tCommon/ArmEmitter.cpp\n\tCore/Util/DisArm64.h\n\tCore/Util/DisArm64.cpp\n)\nsource_group(ARM64 FILES ${CommonARM64})\n\nset(CommonMIPS\n\tCommon/MipsCPUDetect.cpp\n\tCommon/MipsEmitter.cpp\n\tCommon/MipsEmitter.h\n)\nsource_group(MIPS FILES ${CommonMIPS})\n\nset(CommonRISCV64\n\t${CommonJIT}\n\tCommon/RiscVCPUDetect.cpp\n\tCommon/RiscVEmitter.cpp\n\tCommon/RiscVEmitter.h\n\tCore/MIPS/fake/FakeJit.cpp\n\tCore/MIPS/fake/FakeJit.h\n)\nsource_group(RISCV64 FILES ${CommonRISCV64})\n\nset(CommonLOONGARCH64\n\t${CommonJIT}\n\tCommon/LoongArchCPUDetect.cpp\n\tCore/MIPS/fake/FakeJit.cpp\n\tCore/MIPS/fake/FakeJit.h\n)\nsource_group(LOONGARCH64 FILES ${CommonLOONGARCH64})\n\nif(WIN32)\n\tset(CommonD3D\n\t\tCommon/GPU/D3D9/D3D9ShaderCompiler.cpp\n\t\tCommon/GPU/D3D9/D3D9ShaderCompiler.h\n\t\tCommon/GPU/D3D9/D3D9StateCache.cpp\n\t\tCommon/GPU/D3D9/D3D9StateCache.h\n\t\tCommon/GPU/D3D9/thin3d_d3d9.cpp\n\t\tCommon/GPU/D3D9/D3DCompilerLoader.cpp\n\t\tCommon/GPU/D3D11/thin3d_d3d11.cpp\n\t\tCommon/GPU/D3D11/D3D11Loader.cpp\n\t\tCommon/GPU/D3D11/D3D11Loader.h\n\t)\nendif()\n\nset(CommonVR\n\tCommon/VR/OpenXRLoader.cpp\n\tCommon/VR/OpenXRLoader.h\n\tCommon/VR/PPSSPPVR.cpp\n\tCommon/VR/PPSSPPVR.h\n\tCommon/VR/VRBase.cpp\n\tCommon/VR/VRBase.h\n\tCommon/VR/VRFramebuffer.cpp\n\tCommon/VR/VRFramebuffer.h\n\tCommon/VR/VRInput.cpp\n\tCommon/VR/VRInput.h\n\tCommon/VR/VRMath.cpp\n\tCommon/VR/VRMath.h\n\tCommon/VR/VRRenderer.cpp\n\tCommon/VR/VRRenderer.h\n)\ninclude_directories(ext/OpenXR-SDK/include)\n\nadd_library(Common STATIC\n\t${CommonX86}\n\t${CommonARM}\n\t${CommonARM64}\n\t${CommonMIPS}\n\t${CommonRISCV64}\n\t${CommonLOONGARCH64}\n\t${CommonD3D}\n\t${CommonVR}\n\tCommon/Serialize/Serializer.cpp\n\tCommon/Serialize/Serializer.h\n\tCommon/Serialize/SerializeDeque.h\n\tCommon/Serialize/SerializeFuncs.h\n\tCommon/Serialize/SerializeList.h\n\tCommon/Serialize/SerializeMap.h\n\tCommon/Serialize/SerializeSet.h\n\tCommon/Crypto/md5.cpp\n\tCommon/Crypto/md5.h\n\tCommon/Crypto/sha1.cpp\n\tCommon/Crypto/sha1.h\n\tCommon/Crypto/sha256.cpp\n\tCommon/Crypto/sha256.h\n\tCommon/Data/Collections/ConstMap.h\n\tCommon/Data/Collections/FixedSizeQueue.h\n\tCommon/Data/Collections/Hashmaps.h\n\tCommon/Data/Collections/TinySet.h\n\tCommon/Data/Collections/FastVec.h\n\tCommon/Data/Collections/CharQueue.h\n\tCommon/Data/Collections/CyclicBuffer.h\n\tCommon/Data/Collections/ThreadSafeList.h\n\tCommon/Data/Color/RGBAUtil.cpp\n\tCommon/Data/Color/RGBAUtil.h\n\tCommon/Data/Convert/ColorConv.cpp\n\tCommon/Data/Convert/ColorConv.h\n\tCommon/Data/Convert/SmallDataConvert.cpp\n\tCommon/Data/Convert/SmallDataConvert.h\n\tCommon/Data/Encoding/Base64.cpp\n\tCommon/Data/Encoding/Base64.h\n\tCommon/Data/Encoding/Compression.cpp\n\tCommon/Data/Encoding/Compression.h\n\tCommon/Data/Encoding/Shiftjis.h\n\tCommon/Data/Encoding/Utf8.cpp\n\tCommon/Data/Encoding/Utf8.h\n\tCommon/Data/Encoding/Utf16.h\n\tCommon/Data/Format/RIFF.cpp\n\tCommon/Data/Format/RIFF.h\n\tCommon/Data/Format/IniFile.cpp\n\tCommon/Data/Format/IniFile.h\n\tCommon/Data/Format/JSONReader.h\n\tCommon/Data/Format/JSONReader.cpp\n\tCommon/Data/Format/JSONWriter.h\n\tCommon/Data/Format/JSONWriter.cpp\n\tCommon/Data/Format/DDSLoad.cpp\n\tCommon/Data/Format/DDSLoad.h\n\tCommon/Data/Format/PNGLoad.cpp\n\tCommon/Data/Format/PNGLoad.h\n\tCommon/Data/Format/ZIMLoad.cpp\n\tCommon/Data/Format/ZIMLoad.h\n\tCommon/Data/Format/ZIMSave.cpp\n\tCommon/Data/Format/ZIMSave.h\n\tCommon/Data/Hash/Hash.cpp\n\tCommon/Data/Hash/Hash.h\n\tCommon/Data/Text/I18n.cpp\n\tCommon/Data/Text/I18n.h\n\tCommon/Data/Text/Parsers.cpp\n\tCommon/Data/Text/Parsers.h\n\tCommon/Data/Text/WrapText.cpp\n\tCommon/Data/Text/WrapText.h\n\tCommon/Data/Random/Rng.h\n\tCommon/File/VFS/VFS.h\n\tCommon/File/VFS/VFS.cpp\n\tCommon/File/VFS/ZipFileReader.cpp\n\tCommon/File/VFS/ZipFileReader.h\n\tCommon/File/VFS/DirectoryReader.cpp\n\tCommon/File/VFS/DirectoryReader.h\n\tCommon/File/AndroidStorage.h\n\tCommon/File/AndroidStorage.cpp\n\tCommon/File/AndroidContentURI.h\n\tCommon/File/AndroidContentURI.cpp\n\tCommon/File/DiskFree.h\n\tCommon/File/DiskFree.cpp\n\tCommon/File/Path.h\n\tCommon/File/Path.cpp\n\tCommon/File/PathBrowser.h\n\tCommon/File/PathBrowser.cpp\n\tCommon/File/FileUtil.cpp\n\tCommon/File/FileUtil.h\n\tCommon/File/DirListing.cpp\n\tCommon/File/DirListing.h\n\tCommon/File/FileDescriptor.cpp\n\tCommon/File/FileDescriptor.h\n\tCommon/GPU/DataFormat.h\n\tCommon/GPU/MiscTypes.h\n\tCommon/GPU/GPUBackendCommon.cpp\n\tCommon/GPU/GPUBackendCommon.h\n\tCommon/GPU/thin3d.cpp\n\tCommon/GPU/thin3d.h\n\tCommon/GPU/thin3d_create.h\n\tCommon/GPU/Shader.cpp\n\tCommon/GPU/Shader.h\n\tCommon/GPU/ShaderWriter.cpp\n\tCommon/GPU/ShaderWriter.h\n\tCommon/GPU/ShaderTranslation.h\n\tCommon/GPU/ShaderTranslation.cpp\n\tCommon/GPU/OpenGL/GLCommon.h\n\tCommon/GPU/OpenGL/GLDebugLog.cpp\n\tCommon/GPU/OpenGL/GLDebugLog.h\n\tCommon/GPU/OpenGL/GLSLProgram.cpp\n\tCommon/GPU/OpenGL/GLSLProgram.h\n\tCommon/GPU/OpenGL/gl3stub.c\n\tCommon/GPU/OpenGL/gl3stub.h\n\tCommon/GPU/OpenGL/GLFeatures.cpp\n\tCommon/GPU/OpenGL/GLFeatures.h\n\tCommon/GPU/OpenGL/GLFrameData.cpp\n\tCommon/GPU/OpenGL/GLFrameData.h\n\tCommon/GPU/OpenGL/thin3d_gl.cpp\n\tCommon/GPU/OpenGL/GLMemory.cpp\n\tCommon/GPU/OpenGL/GLMemory.h\n\tCommon/GPU/OpenGL/GLRenderManager.cpp\n\tCommon/GPU/OpenGL/GLRenderManager.h\n\tCommon/GPU/OpenGL/GLQueueRunner.cpp\n\tCommon/GPU/OpenGL/GLQueueRunner.h\n\tCommon/GPU/OpenGL/DataFormatGL.cpp\n\tCommon/GPU/OpenGL/DataFormatGL.h\n\tCommon/GPU/Vulkan/VulkanBarrier.cpp\n\tCommon/GPU/Vulkan/VulkanBarrier.h\n\tCommon/GPU/Vulkan/VulkanDebug.cpp\n\tCommon/GPU/Vulkan/VulkanDebug.h\n\tCommon/GPU/Vulkan/VulkanContext.cpp\n\tCommon/GPU/Vulkan/VulkanContext.h\n\tCommon/GPU/Vulkan/VulkanDescSet.cpp\n\tCommon/GPU/Vulkan/VulkanDescSet.h\n\tCommon/GPU/Vulkan/VulkanFramebuffer.cpp\n\tCommon/GPU/Vulkan/VulkanFramebuffer.h\n\tCommon/GPU/Vulkan/VulkanImage.cpp\n\tCommon/GPU/Vulkan/VulkanImage.h\n\tCommon/GPU/Vulkan/VulkanLoader.cpp\n\tCommon/GPU/Vulkan/VulkanLoader.h\n\tCommon/GPU/Vulkan/VulkanMemory.cpp\n\tCommon/GPU/Vulkan/VulkanMemory.h\n\tCommon/GPU/Vulkan/VulkanProfiler.cpp\n\tCommon/GPU/Vulkan/VulkanProfiler.h\n\tCommon/GPU/Vulkan/thin3d_vulkan.cpp\n\tCommon/GPU/Vulkan/VulkanRenderManager.cpp\n\tCommon/GPU/Vulkan/VulkanRenderManager.h\n\tCommon/GPU/Vulkan/VulkanQueueRunner.cpp\n\tCommon/GPU/Vulkan/VulkanQueueRunner.h\n\tCommon/GPU/Vulkan/VulkanFrameData.cpp\n\tCommon/GPU/Vulkan/VulkanFrameData.h\n\tCommon/Input/GestureDetector.cpp\n\tCommon/Input/GestureDetector.h\n\tCommon/Input/KeyCodes.h\n\tCommon/Input/InputState.cpp\n\tCommon/Input/InputState.h\n\tCommon/Math/fast/fast_matrix.c\n\tCommon/Math/SIMDHeaders.h\n\tCommon/Math/SIMDHeaders.h\n\tCommon/Math/curves.cpp\n\tCommon/Math/curves.h\n\tCommon/Math/expression_parser.cpp\n\tCommon/Math/expression_parser.h\n\tCommon/Math/lin/matrix4x4.cpp\n\tCommon/Math/lin/matrix4x4.h\n\tCommon/Math/lin/vec3.cpp\n\tCommon/Math/lin/vec3.h\n\tCommon/Math/math_util.cpp\n\tCommon/Math/math_util.h\n\tCommon/Math/Statistics.h\n\tCommon/Math/Statistics.cpp\n\tCommon/Net/HTTPClient.cpp\n\tCommon/Net/HTTPClient.h\n\tCommon/Net/HTTPHeaders.cpp\n\tCommon/Net/HTTPHeaders.h\n\tCommon/Net/HTTPNaettRequest.cpp\n\tCommon/Net/HTTPNaettRequest.h\n\tCommon/Net/HTTPRequest.cpp\n\tCommon/Net/HTTPRequest.h\n\tCommon/Net/HTTPServer.cpp\n\tCommon/Net/HTTPServer.h\n\tCommon/Net/NetBuffer.cpp\n\tCommon/Net/NetBuffer.h\n\tCommon/Net/Resolve.cpp\n\tCommon/Net/Resolve.h\n\tCommon/Net/Sinks.cpp\n\tCommon/Net/Sinks.h\n\tCommon/Net/SocketCompat.h\n\tCommon/Net/URL.cpp\n\tCommon/Net/URL.h\n\tCommon/Net/WebsocketServer.cpp\n\tCommon/Net/WebsocketServer.h\n\tCommon/Profiler/Profiler.cpp\n\tCommon/Profiler/Profiler.h\n\tCommon/Render/TextureAtlas.cpp\n\tCommon/Render/TextureAtlas.h\n\tCommon/Render/DrawBuffer.cpp\n\tCommon/Render/DrawBuffer.h\n\tCommon/Render/ManagedTexture.cpp\n\tCommon/Render/ManagedTexture.h\n\tCommon/Render/Text/draw_text.cpp\n\tCommon/Render/Text/draw_text.h\n\tCommon/Render/Text/draw_text_android.cpp\n\tCommon/Render/Text/draw_text_android.h\n\tCommon/Render/Text/draw_text_sdl.cpp\n\tCommon/Render/Text/draw_text_sdl.h\n\tCommon/Render/Text/draw_text_win.cpp\n\tCommon/Render/Text/draw_text_win.h\n\tCommon/Render/Text/draw_text_uwp.cpp\n\tCommon/Render/Text/draw_text_uwp.h\n\tCommon/System/Display.cpp\n\tCommon/System/Display.h\n\tCommon/System/System.h\n\tCommon/System/NativeApp.h\n\tCommon/System/Request.cpp\n\tCommon/System/Request.h\n\tCommon/System/OSD.cpp\n\tCommon/System/OSD.h\n\tCommon/Thread/Channel.h\n\tCommon/Thread/ParallelLoop.cpp\n\tCommon/Thread/ParallelLoop.h\n\tCommon/Thread/Promise.h\n\tCommon/Thread/ThreadUtil.cpp\n\tCommon/Thread/ThreadUtil.h\n\tCommon/Thread/ThreadManager.cpp\n\tCommon/Thread/ThreadManager.h\n\tCommon/UI/AsyncImageFileView.cpp\n\tCommon/UI/AsyncImageFileView.h\n\tCommon/UI/Root.cpp\n\tCommon/UI/Root.h\n\tCommon/UI/Screen.cpp\n\tCommon/UI/Screen.h\n\tCommon/UI/UI.cpp\n\tCommon/UI/UI.h\n\tCommon/UI/Context.cpp\n\tCommon/UI/Context.h\n\tCommon/UI/IconCache.cpp\n\tCommon/UI/IconCache.h\n\tCommon/UI/UIScreen.cpp\n\tCommon/UI/UIScreen.h\n\tCommon/UI/Tween.cpp\n\tCommon/UI/Tween.h\n\tCommon/UI/View.cpp\n\tCommon/UI/View.h\n\tCommon/UI/ViewGroup.cpp\n\tCommon/UI/ViewGroup.h\n\tCommon/UI/ScrollView.cpp\n\tCommon/UI/ScrollView.h\n\tCommon/UI/PopupScreens.cpp\n\tCommon/UI/PopupScreens.h\n\tCommon/BitScan.h\n\tCommon/BitSet.h\n\tCommon/Buffer.h\n\tCommon/Buffer.cpp\n\tCommon/CodeBlock.h\n\tCommon/Common.h\n\tCommon/CommonFuncs.h\n\tCommon/CommonTypes.h\n\tCommon/DbgNew.h\n\tCommon/FakeEmitter.h\n\tCommon/FakeCPUDetect.cpp\n\tCommon/ExceptionHandlerSetup.cpp\n\tCommon/ExceptionHandlerSetup.h\n\tCommon/GhidraClient.h\n\tCommon/GhidraClient.cpp\n\tCommon/Log.h\n\tCommon/Log.cpp\n\tCommon/Log/ConsoleListener.cpp\n\tCommon/Log/ConsoleListener.h\n\tCommon/Log/LogManager.cpp\n\tCommon/Log/LogManager.h\n\tCommon/LogReporting.cpp\n\tCommon/LogReporting.h\n\tCommon/MemArenaAndroid.cpp\n\tCommon/MemArenaDarwin.cpp\n\tCommon/MemArenaPosix.cpp\n\tCommon/MemArenaWin32.cpp\n\tCommon/MemArenaHorizon.cpp\n\tCommon/MemArena.h\n\tCommon/MemoryUtil.cpp\n\tCommon/MemoryUtilHorizon.cpp\n\tCommon/MemoryUtil.h\n\tCommon/OSVersion.cpp\n\tCommon/OSVersion.h\n\tCommon/StringUtils.cpp\n\tCommon/StringUtils.h\n\tCommon/SysError.h\n\tCommon/SysError.cpp\n\tCommon/TimeUtil.cpp\n\tCommon/TimeUtil.h\n\tCommon/Battery/Battery.h\n)\n\ninclude_directories(Common)\nsetup_target_project(Common Common)\n\nif(IOS)\n\ttarget_compile_definitions(Common PUBLIC GLES_SILENCE_DEPRECATION)\nendif()\n\ntarget_link_libraries(Common Ext::Snappy cpu_features imgui)\n\nif(ARM64)\n    if(ANDROID)\n        target_link_libraries(Common adrenotools)\n    endif()\nendif()\n\nif(USING_GLES2 OR (USING_EGL AND NOT USING_FBDEV))\n\tfind_package(X11)\nendif()\n\nadd_library(gason STATIC\n    ext/gason/gason.cpp\n    ext/gason/gason.h\n)\n\nadd_library(vma STATIC\n    ext/vma/vk_mem_alloc.cpp\n    ext/vma/vk_mem_alloc.h\n)\n\nif(USE_FFMPEG)\n\tif(NOT FFMPEG_DIR)\n\t\tif(NOT USE_SYSTEM_FFMPEG)\n\t\t\tif(ANDROID)\n\t\t\t\tif(ARMV7)\n\t\t\t\t\tset(PLATFORM_ARCH \"android/armv7\")\n\t\t\t\telseif(ARM64)\n\t\t\t\t\tset(PLATFORM_ARCH \"android/arm64\")\n\t\t\t\telseif(X86_64)\n\t\t\t\t\tset(PLATFORM_ARCH \"android/x86_64\")\n\t\t\t\telseif(X86)\n\t\t\t\t\tset(PLATFORM_ARCH \"android/x86\")\n\t\t\t\tendif()\n\t\t\telseif(IOS)\n\t\t\t\tif(IOS_PLATFORM STREQUAL \"TVOS\")\n\t\t\t\t\tset(PLATFORM_ARCH \"tvos/arm64\")\n\t\t\t\telse()\n\t\t\t\t\tset(PLATFORM_ARCH \"ios/universal\")\n\t\t\t\tendif()\n\t\t\telseif(MACOSX)\n\t\t\t\tset(PLATFORM_ARCH \"macosx/universal\")\n\t\t\telseif(LINUX)\n\t\t\t\tif(ARMV7)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/armv7\")\n\t\t\t\telseif(ARM64)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/aarch64\")\n\t\t\t\telseif(ARM)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/arm\")\n\t\t\t\telseif(MIPS)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/mips32\")\n\t\t\t\telseif(RISCV64)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/riscv64\")\n\t\t\t\telseif(LOONGARCH64)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/loongarch64\")\n\t\t\t\telseif(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/x86_64\")\n\t\t\t\telseif(X86)\n\t\t\t\t\tset(PLATFORM_ARCH \"linux/x86\")\n\t\t\t\tendif()\n\t\t\telseif(WIN32)\n\t\t\t\tif(X86_64)\n\t\t\t\t\tset(PLATFORM_ARCH \"Windows/x86_64\")\n\t\t\t\telseif(X86)\n\t\t\t\t\tset(PLATFORM_ARCH \"Windows/x86\")\n\t\t\t\tendif()\n\t\t\tendif()\n\t\t\tif(PLATFORM_ARCH)\n\t\t\t\tset(FFMPEG_DIR \"ffmpeg/${PLATFORM_ARCH}\")\n\t\t\telse()\n\t\t\t\tmessage(\"Couldn't find an internal FFmpeg build, using system FFmpeg instead\")\n\t\t\tendif()\n\t\tendif()\n\tendif()\n\n\tfind_package(FFmpeg REQUIRED avcodec avformat avutil swresample swscale)\n\t# Check if we need to use avcodec_(alloc|free)_frame instead of av_frame_(alloc|free)\n\t# Check if we need to use const AVCodec\n\tset(CMAKE_REQUIRED_INCLUDES ${FFmpeg_INCLUDE_avcodec};${FFmpeg_INCLUDE_avformat})\n\tset(CMAKE_REQUIRED_LIBRARIES FFmpeg::avcodec;FFmpeg::avformat)\n\tset(CMAKE_REQUIRED_FLAGS \"-pedantic -Wall -Werror -Wno-unused-variable\")\n\tcheck_cxx_source_compiles(\"extern \\\"C\\\" {\n\t\t#include <libavcodec/avcodec.h>\n\t\t#include <libavformat/avformat.h>\n\t\t}\n\t\tstatic AVCodecContext *s_codec_context = NULL;\n\t\tint main() {\n\t\t\tconst AVCodec *codec = avcodec_find_encoder(s_codec_context->codec_id);\n\t\t\treturn 0;\n\t\t}\n\t\t\" HAVE_LIBAVCODEC_CONST_AVCODEC FAIL_REGEX \"invalid conversion\")\n\n\t# Check if we need to use avcodec_alloc_context3 instead of stream->codec\n\t# Check if we need to use av_frame_get_buffer instead of avcodec_default_get_buffer\nendif(USE_FFMPEG)\n\nfind_package(ZLIB)\nif(ZLIB_FOUND AND NOT ANDROID)\n\tinclude_directories(${ZLIB_INCLUDE_DIR})\n\tadd_definitions(-DSHARED_ZLIB)\nelse()\n\tadd_library(zlib STATIC\n\t\text/zlib/adler32.c\n\t\text/zlib/compress.c\n\t\text/zlib/crc32.c\n\t\text/zlib/crc32.h\n\t\text/zlib/deflate.c\n\t\text/zlib/deflate.h\n\t\text/zlib/gzclose.c\n\t\text/zlib/gzguts.h\n\t\text/zlib/gzlib.c\n\t\text/zlib/gzread.c\n\t\text/zlib/gzwrite.c\n\t\text/zlib/infback.c\n\t\text/zlib/inffast.c\n\t\text/zlib/inffast.h\n\t\text/zlib/inffixed.h\n\t\text/zlib/inflate.c\n\t\text/zlib/inflate.h\n\t\text/zlib/inftrees.c\n\t\text/zlib/inftrees.h\n\t\text/zlib/make_vms.com\n\t\text/zlib/trees.c\n\t\text/zlib/trees.h\n\t\text/zlib/uncompr.c\n\t\text/zlib/zconf.h\n\t\text/zlib/zlib.h\n\t\text/zlib/zutil.c\n\t\text/zlib/zutil.h\n\t)\n\tinclude_directories(ext/zlib)\n\tset(ZLIB_LIBRARY zlib)\nendif()\n\nadd_library(cityhash STATIC\n\text/cityhash/city.cpp\n\text/cityhash/city.h\n\text/cityhash/citycrc.h\n)\ntarget_include_directories(cityhash PRIVATE ext/cityhash)\n\nif(NOT MSVC)\n\t# These can be fast even for debug.\n\tset_target_properties(udis86 PROPERTIES COMPILE_FLAGS \"-O2\")\n\tset_target_properties(cityhash PROPERTIES COMPILE_FLAGS \"-O2\")\n\tif(NOT ZLIB_FOUND)\n\t\tset_target_properties(zlib PROPERTIES COMPILE_FLAGS \"-O2\")\n\tendif()\nendif()\n\n\nfind_package(LIBZIP)\nif(LIBZIP_FOUND AND USE_SYSTEM_LIBZIP)\n\tinclude_directories(${LIBZIP_INCLUDE_DIRS})\n\tadd_definitions(-DSHARED_LIBZIP)\nelse()\n\tadd_library(libzip STATIC\n\t\text/libzip/zip_add.c\n\t\text/libzip/zip_add_dir.c\n\t\text/libzip/zip_add_entry.c\n\t\text/libzip/zip_algorithm_deflate.c\n\t\text/libzip/zip_buffer.c\n\t\text/libzip/zip_close.c\n\t\text/libzip/zip_delete.c\n\t\text/libzip/zip_dir_add.c\n\t\text/libzip/zip_dirent.c\n\t\text/libzip/zip_discard.c\n\t\text/libzip/zip_entry.c\n\t\text/libzip/zip_error.c\n\t\text/libzip/zip_error_clear.c\n\t\text/libzip/zip_error_get.c\n\t\text/libzip/zip_error_get_sys_type.c\n\t\text/libzip/zip_error_strerror.c\n\t\text/libzip/zip_error_to_str.c\n\t\text/libzip/zip_extra_field.c\n\t\text/libzip/zip_extra_field_api.c\n\t\text/libzip/zip_fclose.c\n\t\text/libzip/zip_fdopen.c\n\t\text/libzip/zip_file_add.c\n\t\text/libzip/zip_file_error_clear.c\n\t\text/libzip/zip_file_error_get.c\n\t\text/libzip/zip_file_get_comment.c\n\t\text/libzip/zip_file_get_external_attributes.c\n\t\text/libzip/zip_file_get_offset.c\n\t\text/libzip/zip_file_rename.c\n\t\text/libzip/zip_file_replace.c\n\t\text/libzip/zip_file_set_comment.c\n\t\text/libzip/zip_file_set_encryption.c\n\t\text/libzip/zip_file_set_external_attributes.c\n\t\text/libzip/zip_file_set_mtime.c\n\t\text/libzip/zip_file_strerror.c\n\t\text/libzip/zip_fopen.c\n\t\text/libzip/zip_fopen_encrypted.c\n\t\text/libzip/zip_fopen_index.c\n\t\text/libzip/zip_fopen_index_encrypted.c\n\t\text/libzip/zip_fread.c\n\t\text/libzip/zip_fseek.c\n\t\text/libzip/zip_ftell.c\n\t\text/libzip/zip_get_archive_comment.c\n\t\text/libzip/zip_get_archive_flag.c\n\t\text/libzip/zip_get_encryption_implementation.c\n\t\text/libzip/zip_get_file_comment.c\n\t\text/libzip/zip_get_name.c\n\t\text/libzip/zip_get_num_entries.c\n\t\text/libzip/zip_get_num_files.c\n\t\text/libzip/zip_hash.c\n\t\text/libzip/zip_io_util.c\n\t\text/libzip/zip_libzip_version.c\n\t\text/libzip/zip_memdup.c\n\t\text/libzip/zip_name_locate.c\n\t\text/libzip/zip_new.c\n\t\text/libzip/zip_open.c\n\t\text/libzip/zip_pkware.c\n\t\text/libzip/zip_progress.c\n\t\text/libzip/zip_rename.c\n\t\text/libzip/zip_replace.c\n\t\text/libzip/zip_set_archive_comment.c\n\t\text/libzip/zip_set_archive_flag.c\n\t\text/libzip/zip_set_default_password.c\n\t\text/libzip/zip_set_file_comment.c\n\t\text/libzip/zip_set_file_compression.c\n\t\text/libzip/zip_set_name.c\n\t\text/libzip/zip_source_accept_empty.c\n\t\text/libzip/zip_source_begin_write.c\n\t\text/libzip/zip_source_begin_write_cloning.c\n\t\text/libzip/zip_source_buffer.c\n\t\text/libzip/zip_source_call.c\n\t\text/libzip/zip_source_close.c\n\t\text/libzip/zip_source_commit_write.c\n\t\text/libzip/zip_source_compress.c\n\t\text/libzip/zip_source_crc.c\n\t\text/libzip/zip_source_error.c\n\t\text/libzip/zip_source_file_common.c\n\t\text/libzip/zip_source_file_stdio.c\n\t\text/libzip/zip_source_free.c\n\t\text/libzip/zip_source_function.c\n\t\text/libzip/zip_source_get_file_attributes.c\n\t\text/libzip/zip_source_is_deleted.c\n\t\text/libzip/zip_source_layered.c\n\t\text/libzip/zip_source_open.c\n\t\text/libzip/zip_source_pkware_decode.c\n\t\text/libzip/zip_source_pkware_encode.c\n\t\text/libzip/zip_source_read.c\n\t\text/libzip/zip_source_remove.c\n\t\text/libzip/zip_source_rollback_write.c\n\t\text/libzip/zip_source_seek.c\n\t\text/libzip/zip_source_seek_write.c\n\t\text/libzip/zip_source_stat.c\n\t\text/libzip/zip_source_supports.c\n\t\text/libzip/zip_source_tell.c\n\t\text/libzip/zip_source_tell_write.c\n\t\text/libzip/zip_source_window.c\n\t\text/libzip/zip_source_write.c\n\t\text/libzip/zip_source_zip.c\n\t\text/libzip/zip_source_zip_new.c\n\t\text/libzip/zip_stat.c\n\t\text/libzip/zip_stat_index.c\n\t\text/libzip/zip_stat_init.c\n\t\text/libzip/zip_strerror.c\n\t\text/libzip/zip_string.c\n\t\text/libzip/zip_unchange.c\n\t\text/libzip/zip_unchange_all.c\n\t\text/libzip/zip_unchange_archive.c\n\t\text/libzip/zip_unchange_data.c\n\t\text/libzip/zip_utf-8.c\n\t\text/libzip/zip_err_str.c\n\t)\n\tif(WIN32)\n\t\ttarget_sources(libzip PRIVATE\n\t\t\text/libzip/zip_source_file_win32.c\n\t\t\text/libzip/zip_source_file_win32_named.c\n\t\t\text/libzip/zip_source_file_win32_utf16.c\n\t\t\text/libzip/zip_source_file_win32_utf8.c\n\t\t)\n\t\tif(CMAKE_SYSTEM_NAME MATCHES WindowsPhone OR CMAKE_SYSTEM_NAME MATCHES WindowsStore)\n\t\t\ttarget_sources(libzip PRIVATE ext/libzip/zip_random_uwp.c)\n\t\telse()\n\t\t\ttarget_sources(libzip PRIVATE ext/libzip/zip_source_file_win32_ansi.c ext/libzip/zip_random_win32.c)\n\t\tendif()\n\telse()\n\t\ttarget_sources(libzip PRIVATE\n\t\t\text/libzip/zip_mkstempm.c\n\t\t\text/libzip/zip_source_file_stdio_named.c\n\t\t\text/libzip/zip_random_unix.c\n\t\t)\n\tendif()\n\ttarget_link_libraries(libzip)\n\tinclude_directories(ext/libzip)\n\tset(LIBZIP_LIBRARY libzip)\nendif()\n\n# Arm platforms require at least libpng17.\nif(ANDROID OR ARMV7 OR ARM64 OR ARM OR IOS)\n\tset(PNG_REQUIRED_VERSION 1.7)\nelse()\n\tset(PNG_REQUIRED_VERSION 1.6)\nendif()\n\nif(USE_SYSTEM_LIBPNG)\nfind_package(PNG ${PNG_REQUIRED_VERSION})\nendif()\nif(PNG_FOUND)\n\tinclude_directories(${PNG_INCLUDE_DIRS})\nelse()\n\tif(ARM)\n\t\tset(PNG_ARM_INCLUDES\n\t\t\text/libpng17/arm/arm_init.c\n\t\t\text/libpng17/arm/filter_neon.S\n\t\t\text/libpng17/arm/filter_neon_intrinsics.c\n\t\t)\n\telseif(ARM64)\n\t\tset(PNG_ARM_INCLUDES\n\t\t\text/libpng17/arm/arm_init.c\n\t\t\text/libpng17/arm/filter_neon_intrinsics.c\n\t\t)\n\tendif()\n\tadd_library(png17 STATIC\n\t\text/libpng17/pngconf.h\n\t\text/libpng17/pngdebug.h\n\t\text/libpng17/png.c\n\t\text/libpng17/png.h\n\t\text/libpng17/pngerror.c\n\t\text/libpng17/pngget.c\n\t\text/libpng17/pnginfo.h\n\t\text/libpng17/pnglibconf.h\n\t\text/libpng17/pngmem.c\n\t\text/libpng17/pngpread.c\n\t\text/libpng17/pngpriv.h\n\t\text/libpng17/pngread.c\n\t\text/libpng17/pngrio.c\n\t\text/libpng17/pngrtran.c\n\t\text/libpng17/pngrutil.c\n\t\text/libpng17/pngset.c\n\t\text/libpng17/pngstruct.h\n\t\text/libpng17/pngtrans.c\n\t\text/libpng17/pngwio.c\n\t\text/libpng17/pngwrite.c\n\t\text/libpng17/pngwtran.c\n\t\text/libpng17/pngwutil.c\n\t\t${PNG_ARM_INCLUDES}\n\t)\n\tset(PNG_LIBRARIES png17)\n\tinclude_directories(ext/libpng17)\nendif()\n\nadd_library(basis_universal STATIC\n\text/basis_universal/basisu.h\n\text/basis_universal/basisu_containers.h\n\text/basis_universal/basisu_containers_impl.h\n\text/basis_universal/basisu_file_headers.h\n\text/basis_universal/basisu_transcoder.cpp\n\text/basis_universal/basisu_transcoder.h\n\text/basis_universal/basisu_transcoder_internal.h\n\text/basis_universal/basisu_transcoder_tables_astc.inc\n\text/basis_universal/basisu_transcoder_tables_astc_0_255.inc\n\text/basis_universal/basisu_transcoder_tables_atc_55.inc\n\text/basis_universal/basisu_transcoder_tables_atc_56.inc\n\text/basis_universal/basisu_transcoder_tables_bc7_m5_alpha.inc\n\text/basis_universal/basisu_transcoder_tables_bc7_m5_color.inc\n\text/basis_universal/basisu_transcoder_tables_dxt1_5.inc\n\text/basis_universal/basisu_transcoder_tables_dxt1_6.inc\n\text/basis_universal/basisu_transcoder_tables_pvrtc2_45.inc\n\text/basis_universal/basisu_transcoder_tables_pvrtc2_alpha_33.inc\n\text/basis_universal/basisu_transcoder_uastc.h\n)\nset(BASISU_LIBRARIES basis_universal)\n\nset(nativeExtra)\nset(nativeExtraLibs)\n\nif(OPENXR AND NOT ARMV7_DEVICE)\n\tset(nativeExtraLibs ${nativeExtraLibs} openxr_loader)\nendif()\n\nif(IOS OR MACOSX)\n\tset(nativeExtra ${nativeExtra}\n\t\tCommon/Render/Text/draw_text_cocoa.mm\n\t\tCommon/Render/Text/draw_text_cocoa.h)\nendif()\n\nif(ANDROID)\n\tset(NativeAppSource ${NativeAppSource}\n\t\tandroid/jni/app-android.cpp\n\t\tandroid/jni/AndroidJavaGLContext.cpp\n\t\tandroid/jni/AndroidJavaGLContext.h\n\t\tandroid/jni/AndroidVulkanContext.cpp\n\t\tandroid/jni/AndroidVulkanContext.h\n\t\tandroid/jni/AndroidGraphicsContext.h\n\t\tandroid/jni/AndroidAudio.cpp\n\t\tandroid/jni/AndroidAudio.h\n\t\tandroid/jni/OpenSLContext.cpp\n\t\tandroid/jni/OpenSLContext.h\n\t)\n\t# No target\nelseif(IOS AND NOT LIBRETRO)\n\tset(nativeExtra ${nativeExtra}\n\t\tios/main.mm\n\t\tios/AppDelegate.mm\n\t\tios/AppDelegate.h\n\t\tios/DisplayManager.h\n\t\tios/DisplayManager.mm\n\t\tios/Controls.h\n\t\tios/Controls.mm\n\t\tios/ViewControllerCommon.h\n\t\tios/ViewController.mm\n\t\tios/ViewController.h\n\t\tios/ViewControllerMetal.mm\n\t\tios/ViewControllerMetal.h\n\t\tios/iOSCoreAudio.mm\n\t\tios/iOSCoreAudio.h\n\t\tios/CameraHelper.mm\n\t\tios/CameraHelper.h\n\t\tios/LocationHelper.mm\n\t\tios/LocationHelper.h\n\t\tios/PPSSPPUIApplication.h\n\t\tios/PPSSPPUIApplication.mm\n\t\tios/SmartKeyboardMap.cpp\n\t\tios/SmartKeyboardMap.hpp\n\t\tios/iCade/iCadeReaderView.h\n\t\tios/iCade/iCadeReaderView.m\n\t\tios/iCade/iCadeState.h\n\t\tUI/DarwinFileSystemServices.mm\n\t\tUI/DarwinFileSystemServices.h\n\t\tCommon/Battery/AppleBatteryClient.m\n\t)\n\n\tset(nativeExtraLibs ${nativeExtraLibs} \"-framework Foundation -framework MediaPlayer -framework AudioToolbox -framework CoreGraphics -framework CoreMotion -framework QuartzCore -framework UIKit -framework GLKit -framework OpenAL -framework AVFoundation -framework CoreLocation -framework CoreText -framework CoreVideo -framework CoreMedia -framework CoreServices -framework Metal -framework IOSurface\" )\n\tif(EXISTS \"${CMAKE_IOS_SDK_ROOT}/System/Library/Frameworks/GameController.framework\")\n\t\tset(nativeExtraLibs ${nativeExtraLibs} \"-weak_framework GameController\")\n\tendif()\n\n\tif(NOT ICONV_LIBRARY)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} iconv)\n\tendif()\n\n\t# TODO: Enable arc globally?\n\tset_source_files_properties(ios/AppDelegate.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/ViewController.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/ViewControllerMetal.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/iOSCoreAudio.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/PPSSPPUIApplication.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/iCade/iCadeReaderView.m PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/main.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/CameraHelper.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/AudioEngine.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/LocationHelper.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/DisplayManager.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(ios/Controls.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(UI/DarwinFileSystemServices.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(Common/Battery/AppleBatteryClient.m PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\tset_source_files_properties(Common/Render/Text/draw_text_cocoa.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\n\tset(TargetBin PPSSPP)\nelseif(IOS AND LIBRETRO)\n    set(nativeExtraLibs ${nativeExtraLibs} \"-framework GLKit\")\nelseif(USING_QT_UI)\n\tset(CMAKE_AUTOMOC ON)\n\tfind_package(Qt5 COMPONENTS OpenGL Gui Core Multimedia)\n\tlist(APPEND NativeAppSource\n\t\tQt/QtMain.cpp\n\t\tQt/QtMain.h\n\t\tQt/mainwindow.cpp\n\t\tQt/mainwindow.h\n\t)\n\tadd_definitions(-DUSING_QT_UI)\n\tif(USING_GLES2)\n\t\tadd_definitions(-DQT_OPENGL_ES -DQT_OPENGL_ES_2)\n\tendif()\n\tif(APPLE)\n\t\tlist(APPEND NativeAppSource\n\t\t\tUI/DarwinFileSystemServices.mm\n\t\t\tUI/DarwinFileSystemServices.h\n\t\t\tCommon/Battery/AppleBatteryClient.m)\n\t\tset_source_files_properties(Common/Battery/AppleBatteryClient.m PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(UI/DarwinFileSystemServices.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(Common/Render/Text/draw_text_cocoa.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} ${COCOA_LIBRARY} ${QUARTZ_CORE_LIBRARY} ${IOKIT_LIBRARY})\n\tendif()\n\tinclude_directories(Qt)\n\tinclude_directories(${CMAKE_CURRENT_BINARY_DIR})\n\tset(nativeExtraLibs ${nativeExtraLibs} Qt5::OpenGL Qt5::Gui Qt5::Core Qt5::Multimedia)\n\tset(TargetBin PPSSPPQt)\n\n\t# Enable SDL joystick if SDL is found\n\tif(SDL2_FOUND)\n\t\tadd_definitions(-DSDL)\n\t\tset(nativeExtra ${nativeExtra}\n\t\t\tSDL/SDLJoystick.h\n\t\t\tSDL/SDLJoystick.cpp\n\t\t)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} SDL2::SDL2)\n\tendif()\n\nelseif(WIN32)\n\t# Don't care about SDL.\n\tset(TargetBin PPSSPPWindows)\n\tif(X86_64)\n\t\tlink_directories(dx9sdk/Lib/x64)\n\telse()\n\t\tlink_directories(dx9sdk/Lib/x86)\n\tendif()\nelseif(LIBRETRO)\nelse()\n\tif(GOLD)\n\t\tset(TargetBin PPSSPPGold)\n\telse()\n\t\tset(TargetBin PPSSPPSDL)\n\tendif()\n\t# Require SDL\n\tadd_definitions(-DSDL)\n\tset(nativeExtra ${nativeExtra}\n\t\tSDL/SDLJoystick.h\n\t\tSDL/SDLJoystick.cpp\n\t\tSDL/SDLMain.cpp\n\t\tSDL/SDLGLGraphicsContext.cpp\n\t)\n\tif(NOT USE_LIBNX)\n\t\tset(nativeExtra ${nativeExtra}\n\t\t\tSDL/SDLVulkanGraphicsContext.cpp\n\t\t)\n\tendif()\n\tif(SDL2_ttf_FOUND OR\n\t\t(SDL2_ttf_PKGCONFIG_FOUND AND\n\t\t SDL2_ttf_PKGCONFIG_VERSION VERSION_GREATER_EQUAL \"2.0.18\"))\n\t\tadd_definitions(-DUSE_SDL2_TTF)\n\t\tif(FONTCONFIG_FOUND)\n\t\t\tadd_definitions(-DUSE_SDL2_TTF_FONTCONFIG)\n\t\t\tset(nativeExtraLibs ${nativeExtraLibs} Fontconfig::Fontconfig)\n\t\tendif()\n\telseif(SDL2_ttf_PKGCONFIG_FOUND)\n\t\tmessage(WARNING \"Found SDL2_ttf <2.0.18 - this is too old, falling back to atlas\")\n\tendif()\n\tif(SDL2_ttf_FOUND)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} SDL2_ttf::SDL2_ttf)\n\telseif(SDL2_ttf_PKGCONFIG_FOUND)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} PkgConfig::SDL2_ttf_PKGCONFIG)\n\tendif()\n\tif(APPLE)\n\t\tset(nativeExtra ${nativeExtra}\n\t\tSDL/SDLMain.h\n\t\tSDL/SDLMain.mm\n\t\tSDL/SDLCocoaMetalLayer.h\n\t\tSDL/SDLCocoaMetalLayer.mm\n\t\tSDL/CocoaBarItems.mm\n\t\tSDL/CocoaBarItems.h\n\t\tSDL/PPSSPPAboutViewController.m\n\t\tSDL/PPSSPPAboutViewController.h\n\t\tUI/DarwinFileSystemServices.mm\n\t\tUI/DarwinFileSystemServices.h\n\t\tCommon/Battery/AppleBatteryClient.m\n\t\tUI/PSPNSApplicationDelegate.mm\n\t\tUI/PSPNSApplicationDelegate.h)\n\n\t\t# TODO\n\t\t# set_source_files_properties(SDL/SDLMain.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\n        set_source_files_properties(UI/DarwinFileSystemServices.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(UI/PSPNSApplicationDelegate.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(SDL/CocoaMetalLayer.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(SDL/CocoaBarItems.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(SDL/PPSSPPAboutViewController.m PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(Common/Battery/AppleBatteryClient.m PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset_source_files_properties(Common/Render/Text/draw_text_cocoa.mm PROPERTIES COMPILE_FLAGS -fobjc-arc)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} ${COCOA_LIBRARY} ${QUARTZ_CORE_LIBRARY} ${IOKIT_LIBRARY})\n\n\t\tif(USE_SYSTEM_LIBSDL2)\n\t\t\tset(nativeExtraLibs ${nativeExtraLibs} SDL2::SDL2)\n\t\telse()\n\t\t\tset(nativeExtraLibs ${nativeExtraLibs} ${SDL2Fwk})\n\t\tendif()\n\telseif(USING_EGL)\n\t\tset(nativeExtraLibs ${nativeExtraLibs} pthread SDL2::SDL2)\n\telse()\n\t\tset(nativeExtraLibs ${nativeExtraLibs} SDL2::SDL2)\n\tendif()\nendif()\n\nif(WIN32)\n\tif(MINGW)\n\t\tset(CMAKE_RC_COMPILE_OBJECT \"<CMAKE_RC_COMPILER> -O coff <INCLUDES> <SOURCE> <OBJECT>\")\n\t\t# required when using the dx9sdk include paths\n\t\tadd_definitions(-include ${CMAKE_CURRENT_SOURCE_DIR}/Windows/mingw_defines.h)\n\telse()\n\t\ttarget_link_libraries(Common dxguid)\n\tendif()\n\ttarget_link_libraries(Common winmm d3d9 dsound)\nendif()\n\nif(NOT LIBRETRO)\n\tlist(APPEND NativeAppSource\n\t\tUI/AudioCommon.h\n\t\tUI/AudioCommon.cpp\n\t)\nendif()\n\nlist(APPEND NativeAppSource\n\tandroid/jni/TestRunner.cpp\n\tUI/ImDebugger/ImDebugger.cpp\n\tUI/ImDebugger/ImDebugger.h\n\tUI/ImDebugger/ImGe.cpp\n\tUI/ImDebugger/ImGe.h\n\tUI/ImDebugger/ImDisasmView.cpp\n\tUI/ImDebugger/ImDisasmView.h\n\tUI/ImDebugger/ImMemView.cpp\n\tUI/ImDebugger/ImMemView.h\n\tUI/ImDebugger/ImStructViewer.cpp\n\tUI/ImDebugger/ImStructViewer.h\n\tUI/DiscordIntegration.cpp\n\tUI/NativeApp.cpp\n\tUI/BackgroundAudio.h\n\tUI/BackgroundAudio.cpp\n\tUI/ChatScreen.h\n\tUI/ChatScreen.cpp\n\tUI/DebugOverlay.cpp\n\tUI/DebugOverlay.h\n\tUI/DevScreens.cpp\n\tUI/DevScreens.h\n\tUI/DisplayLayoutScreen.cpp\n\tUI/DisplayLayoutScreen.h\n\tUI/EmuScreen.h\n\tUI/EmuScreen.cpp\n\tUI/GameInfoCache.h\n\tUI/GameInfoCache.cpp\n\tUI/MainScreen.h\n\tUI/MainScreen.cpp\n\tUI/MiscScreens.h\n\tUI/MiscScreens.cpp\n\tUI/PauseScreen.h\n\tUI/PauseScreen.cpp\n\tUI/TabbedDialogScreen.h\n\tUI/TabbedDialogScreen.cpp\n\tUI/GameScreen.h\n\tUI/GameScreen.cpp\n\tUI/GameSettingsScreen.h\n\tUI/GameSettingsScreen.cpp\n\tUI/DriverManagerScreen.h\n\tUI/DriverManagerScreen.cpp\n\tUI/GPUDriverTestScreen.h\n\tUI/GPUDriverTestScreen.cpp\n\tUI/TiltAnalogSettingsScreen.h\n\tUI/TiltAnalogSettingsScreen.cpp\n\tUI/TouchControlLayoutScreen.h\n\tUI/TouchControlLayoutScreen.cpp\n\tUI/TouchControlVisibilityScreen.h\n\tUI/TouchControlVisibilityScreen.cpp\n\tUI/GamepadEmu.h\n\tUI/GamepadEmu.cpp\n\tUI/JoystickHistoryView.h\n\tUI/JoystickHistoryView.cpp\n\tUI/OnScreenDisplay.h\n\tUI/OnScreenDisplay.cpp\n\tUI/ControlMappingScreen.h\n\tUI/ControlMappingScreen.cpp\n\tUI/RemoteISOScreen.h\n\tUI/RemoteISOScreen.cpp\n\tUI/ReportScreen.h\n\tUI/ReportScreen.cpp\n\tUI/SavedataScreen.h\n\tUI/SavedataScreen.cpp\n\tUI/Store.h\n\tUI/Store.cpp\n\tUI/CwCheatScreen.h\n\tUI/CwCheatScreen.cpp\n\tUI/InstallZipScreen.h\n\tUI/InstallZipScreen.cpp\n\tUI/JitCompareScreen.h\n\tUI/JitCompareScreen.cpp\n\tUI/MemStickScreen.h\n\tUI/MemStickScreen.cpp\n\tUI/ProfilerDraw.h\n\tUI/ProfilerDraw.cpp\n\tUI/CustomButtonMappingScreen.h\n\tUI/CustomButtonMappingScreen.cpp\n\tUI/Theme.h\n\tUI/Theme.cpp\n\tUI/RetroAchievementScreens.cpp\n\tUI/RetroAchievementScreens.h\n)\n\nif(ANDROID)\n\tif(ARM)\n\t\tset(NativeAppSource ${NativeAppSource} android/jni/ArmEmitterTest.cpp)\n\telseif(ARM64)\n\t\tset(NativeAppSource ${NativeAppSource} android/jni/Arm64EmitterTest.cpp)\n\tendif()\n\n\tif (NOT LIBRETRO)\n\t\tset(nativeExtra ${nativeExtra} ${NativeAppSource})\n\tendif()\nendif()\n\nif (IOS)\n        set(nativeExtra ${nativeExtra} ${NativeAppSource})\nendif()\n\nadd_library(native STATIC\n\t${nativeExtra}\n\tCommon/Render/Text/draw_text_qt.cpp\n\tCommon/Render/Text/draw_text_qt.h\n\text/jpge/jpgd.cpp\n\text/jpge/jpgd.h\n\text/jpge/jpge.cpp\n\text/jpge/jpge.h\n)\n\nif(LINUX AND NOT ANDROID)\n\tset(RT_LIB rt)\nendif()\n\nset(ATOMIC_LIB)\nif(ANDROID OR (LINUX AND ARM_DEVICE) OR (LINUX AND RISCV64) OR (LINUX AND LOONGARCH64))\n\tset(ATOMIC_LIB atomic)\nendif()\n\ntarget_link_libraries(native ${LIBZIP_LIBRARY} ${PNG_LIBRARIES} ${BASISU_LIBRARIES} ${ZLIB_LIBRARY} vma gason udis86 ${RT_LIB} ${nativeExtraLibs} ${ATOMIC_LIB} Common)\nif(TARGET Ext::GLEW)\n\ttarget_link_libraries(native Ext::GLEW)\nendif()\n\nif(ANDROID)\n\ttarget_link_libraries(native log EGL OpenSLES)\nelseif(WIN32)\n\ttarget_link_libraries(native ws2_32 winmm)\nelseif(${CMAKE_SYSTEM_NAME} MATCHES \"^(DragonFly|FreeBSD|NetBSD)$\")\n\ttarget_link_libraries(native execinfo)\nendif()\n\nadd_library(kirk STATIC\n\text/libkirk/AES.c\n\text/libkirk/AES.h\n\text/libkirk/amctrl.c\n\text/libkirk/amctrl.h\n\text/libkirk/SHA1.c\n\text/libkirk/SHA1.h\n\text/libkirk/bn.c\n\text/libkirk/ec.c\n\text/libkirk/kirk_engine.c\n\text/libkirk/kirk_engine.h\n)\ntarget_include_directories(kirk PRIVATE ext/libkirk)\n\nadd_library(sfmt19937 STATIC\n\text/sfmt19937/SFMT.c\n\text/sfmt19937/SFMT.h\n\text/sfmt19937/SFMT-common.h\n\text/sfmt19937/SFMT-params.h\n\text/sfmt19937/SFMT-params19937.h\n)\ntarget_compile_definitions(sfmt19937 PRIVATE SFMT_MEXP=19937)\ntarget_include_directories(sfmt19937 PRIVATE ext/sfmt19937)\n\nadd_library(xbrz STATIC\n\text/xbrz/xbrz.cpp\n\text/xbrz/xbrz.h\n)\ntarget_include_directories(xbrz PRIVATE ext/xbrz)\n\nadd_library(xxhash STATIC\n\text/xxhash.c\n\text/xxhash.h\n)\ntarget_include_directories(xxhash PRIVATE ext/xxhash)\n\nset(CoreExtra)\nset(CoreExtraLibs)\n\nset(CoreExtra ${CoreExtra}\n\tCore/MIPS/IR/IRAnalysis.cpp\n\tCore/MIPS/IR/IRAnalysis.h\n\tCore/MIPS/IR/IRCompALU.cpp\n\tCore/MIPS/IR/IRCompBranch.cpp\n\tCore/MIPS/IR/IRCompFPU.cpp\n\tCore/MIPS/IR/IRCompLoadStore.cpp\n\tCore/MIPS/IR/IRCompVFPU.cpp\n\tCore/MIPS/IR/IRFrontend.cpp\n\tCore/MIPS/IR/IRFrontend.h\n\tCore/MIPS/IR/IRInst.cpp\n\tCore/MIPS/IR/IRInst.h\n\tCore/MIPS/IR/IRInterpreter.cpp\n\tCore/MIPS/IR/IRInterpreter.h\n\tCore/MIPS/IR/IRJit.cpp\n\tCore/MIPS/IR/IRJit.h\n\tCore/MIPS/IR/IRNativeCommon.cpp\n\tCore/MIPS/IR/IRNativeCommon.h\n\tCore/MIPS/IR/IRPassSimplify.cpp\n\tCore/MIPS/IR/IRPassSimplify.h\n\tCore/MIPS/IR/IRRegCache.cpp\n\tCore/MIPS/IR/IRRegCache.h\n)\n\nlist(APPEND CoreExtra\n\tCore/MIPS/ARM/ArmAsm.cpp\n\tCore/MIPS/ARM/ArmCompALU.cpp\n\tCore/MIPS/ARM/ArmCompBranch.cpp\n\tCore/MIPS/ARM/ArmCompFPU.cpp\n\tCore/MIPS/ARM/ArmCompLoadStore.cpp\n\tCore/MIPS/ARM/ArmCompVFPU.cpp\n\tCore/MIPS/ARM/ArmCompVFPUNEON.cpp\n\tCore/MIPS/ARM/ArmCompVFPUNEONUtil.cpp\n\tCore/MIPS/ARM/ArmCompReplace.cpp\n\tCore/MIPS/ARM/ArmJit.cpp\n\tCore/MIPS/ARM/ArmJit.h\n\tCore/MIPS/ARM/ArmRegCache.cpp\n\tCore/MIPS/ARM/ArmRegCache.h\n\tCore/MIPS/ARM/ArmRegCacheFPU.cpp\n\tCore/MIPS/ARM/ArmRegCacheFPU.h\n\tGPU/Common/VertexDecoderArm.cpp\n)\n\nlist(APPEND CoreExtra\n\tCore/MIPS/ARM64/Arm64Asm.cpp\n\tCore/MIPS/ARM64/Arm64CompALU.cpp\n\tCore/MIPS/ARM64/Arm64CompBranch.cpp\n\tCore/MIPS/ARM64/Arm64CompFPU.cpp\n\tCore/MIPS/ARM64/Arm64CompLoadStore.cpp\n\tCore/MIPS/ARM64/Arm64CompVFPU.cpp\n\tCore/MIPS/ARM64/Arm64CompReplace.cpp\n\tCore/MIPS/ARM64/Arm64Jit.cpp\n\tCore/MIPS/ARM64/Arm64Jit.h\n\tCore/MIPS/ARM64/Arm64RegCache.cpp\n\tCore/MIPS/ARM64/Arm64RegCache.h\n\tCore/MIPS/ARM64/Arm64RegCacheFPU.cpp\n\tCore/MIPS/ARM64/Arm64RegCacheFPU.h\n\tCore/MIPS/ARM64/Arm64IRAsm.cpp\n\tCore/MIPS/ARM64/Arm64IRCompALU.cpp\n\tCore/MIPS/ARM64/Arm64IRCompBranch.cpp\n\tCore/MIPS/ARM64/Arm64IRCompFPU.cpp\n\tCore/MIPS/ARM64/Arm64IRCompLoadStore.cpp\n\tCore/MIPS/ARM64/Arm64IRCompSystem.cpp\n\tCore/MIPS/ARM64/Arm64IRCompVec.cpp\n\tCore/MIPS/ARM64/Arm64IRJit.cpp\n\tCore/MIPS/ARM64/Arm64IRJit.h\n\tCore/MIPS/ARM64/Arm64IRRegCache.cpp\n\tCore/MIPS/ARM64/Arm64IRRegCache.h\n\tGPU/Common/VertexDecoderArm64.cpp\n\tCore/Util/DisArm64.cpp\n)\n\nlist(APPEND CoreExtra\n\tCore/MIPS/x86/Asm.cpp\n\tCore/MIPS/x86/CompALU.cpp\n\tCore/MIPS/x86/CompBranch.cpp\n\tCore/MIPS/x86/CompFPU.cpp\n\tCore/MIPS/x86/CompLoadStore.cpp\n\tCore/MIPS/x86/CompVFPU.cpp\n\tCore/MIPS/x86/CompReplace.cpp\n\tCore/MIPS/x86/Jit.cpp\n\tCore/MIPS/x86/Jit.h\n\tCore/MIPS/x86/JitSafeMem.cpp\n\tCore/MIPS/x86/JitSafeMem.h\n\tCore/MIPS/x86/RegCache.cpp\n\tCore/MIPS/x86/RegCache.h\n\tCore/MIPS/x86/RegCacheFPU.cpp\n\tCore/MIPS/x86/RegCacheFPU.h\n\tCore/MIPS/x86/X64IRAsm.cpp\n\tCore/MIPS/x86/X64IRCompALU.cpp\n\tCore/MIPS/x86/X64IRCompBranch.cpp\n\tCore/MIPS/x86/X64IRCompFPU.cpp\n\tCore/MIPS/x86/X64IRCompLoadStore.cpp\n\tCore/MIPS/x86/X64IRCompSystem.cpp\n\tCore/MIPS/x86/X64IRCompVec.cpp\n\tCore/MIPS/x86/X64IRJit.cpp\n\tCore/MIPS/x86/X64IRJit.h\n\tCore/MIPS/x86/X64IRRegCache.cpp\n\tCore/MIPS/x86/X64IRRegCache.h\n\tGPU/Common/VertexDecoderX86.cpp\n\tGPU/Software/DrawPixelX86.cpp\n\tGPU/Software/SamplerX86.cpp\n)\n\nlist(APPEND CoreExtra\n\tCore/MIPS/MIPS/MipsJit.cpp\n\tCore/MIPS/MIPS/MipsJit.h\n)\n\nlist(APPEND CoreExtra\n\tCore/MIPS/RiscV/RiscVAsm.cpp\n\tCore/MIPS/RiscV/RiscVCompALU.cpp\n\tCore/MIPS/RiscV/RiscVCompBranch.cpp\n\tCore/MIPS/RiscV/RiscVCompFPU.cpp\n\tCore/MIPS/RiscV/RiscVCompLoadStore.cpp\n\tCore/MIPS/RiscV/RiscVCompSystem.cpp\n\tCore/MIPS/RiscV/RiscVCompVec.cpp\n\tCore/MIPS/RiscV/RiscVJit.cpp\n\tCore/MIPS/RiscV/RiscVJit.h\n\tCore/MIPS/RiscV/RiscVRegCache.cpp\n\tCore/MIPS/RiscV/RiscVRegCache.h\n\tGPU/Common/VertexDecoderRiscV.cpp\n)\n\nif(NOT MOBILE_DEVICE)\n\tset(CoreExtra ${CoreExtra}\n\t\tCore/AVIDump.cpp\n\t\tCore/AVIDump.h\n\t\tCore/WaveFile.cpp\n\t\tCore/WaveFile.h\n\t)\nendif()\n\nset(GPU_GLES\n\tGPU/GLES/StencilBufferGLES.cpp\n\tGPU/GLES/GPU_GLES.cpp\n\tGPU/GLES/GPU_GLES.h\n\tGPU/GLES/FragmentTestCacheGLES.cpp\n\tGPU/GLES/FragmentTestCacheGLES.h\n\tGPU/GLES/FramebufferManagerGLES.cpp\n\tGPU/GLES/FramebufferManagerGLES.h\n\tGPU/GLES/ShaderManagerGLES.cpp\n\tGPU/GLES/ShaderManagerGLES.h\n\tGPU/GLES/StateMappingGLES.cpp\n\tGPU/GLES/StateMappingGLES.h\n\tGPU/GLES/TextureCacheGLES.cpp\n\tGPU/GLES/TextureCacheGLES.h\n\tGPU/GLES/DrawEngineGLES.cpp\n\tGPU/GLES/DrawEngineGLES.h\n)\n\nset(GPU_VULKAN\n\tGPU/Vulkan/DebugVisVulkan.cpp\n\tGPU/Vulkan/DebugVisVulkan.h\n\tGPU/Vulkan/DrawEngineVulkan.cpp\n\tGPU/Vulkan/DrawEngineVulkan.h\n\tGPU/Vulkan/FramebufferManagerVulkan.cpp\n\tGPU/Vulkan/FramebufferManagerVulkan.h\n\tGPU/Vulkan/GPU_Vulkan.cpp\n\tGPU/Vulkan/GPU_Vulkan.h\n\tGPU/Vulkan/PipelineManagerVulkan.cpp\n\tGPU/Vulkan/PipelineManagerVulkan.h\n\tGPU/Vulkan/ShaderManagerVulkan.cpp\n\tGPU/Vulkan/ShaderManagerVulkan.h\n\tGPU/Vulkan/StateMappingVulkan.cpp\n\tGPU/Vulkan/StateMappingVulkan.h\n\tGPU/Vulkan/TextureCacheVulkan.cpp\n\tGPU/Vulkan/TextureCacheVulkan.h\n\tGPU/Vulkan/VulkanUtil.cpp\n\tGPU/Vulkan/VulkanUtil.h\n)\n\nset(GPU_D3D9\n\tGPU/Directx9/DrawEngineDX9.cpp\n\tGPU/Directx9/DrawEngineDX9.h\n\tGPU/Directx9/FramebufferManagerDX9.cpp\n\tGPU/Directx9/FramebufferManagerDX9.h\n\tGPU/Directx9/GPU_DX9.cpp\n\tGPU/Directx9/GPU_DX9.h\n\tGPU/Directx9/ShaderManagerDX9.cpp\n\tGPU/Directx9/ShaderManagerDX9.h\n\tGPU/Directx9/StateMappingDX9.cpp\n\tGPU/Directx9/StateMappingDX9.h\n\tGPU/Directx9/TextureCacheDX9.cpp\n\tGPU/Directx9/TextureCacheDX9.h\n)\n\nset(GPU_D3D11\n\tGPU/D3D11/DrawEngineD3D11.cpp\n\tGPU/D3D11/DrawEngineD3D11.h\n\tGPU/D3D11/FramebufferManagerD3D11.cpp\n\tGPU/D3D11/FramebufferManagerD3D11.h\n\tGPU/D3D11/GPU_D3D11.cpp\n\tGPU/D3D11/GPU_D3D11.h\n\tGPU/D3D11/D3D11Util.cpp\n\tGPU/D3D11/D3D11Util.h\n\tGPU/D3D11/ShaderManagerD3D11.cpp\n\tGPU/D3D11/ShaderManagerD3D11.h\n\tGPU/D3D11/StateMappingD3D11.cpp\n\tGPU/D3D11/StateMappingD3D11.h\n\tGPU/D3D11/TextureCacheD3D11.cpp\n\tGPU/D3D11/TextureCacheD3D11.h\n)\n\n# We build Vulkan even on Apple to avoid annoying build differences.\nset(GPU_IMPLS ${GPU_GLES} ${GPU_VULKAN})\nif(WIN32)\n\tlist(APPEND GPU_IMPLS ${GPU_D3D9} ${GPU_D3D11})\nendif()\n\nset(GPU_SOURCES\n\t${GPU_IMPLS}\n\t${GPU_NEON}\n\tGPU/Common/Draw2D.cpp\n\tGPU/Common/Draw2D.h\n\tGPU/Common/DepthBufferCommon.cpp\n\tGPU/Common/DepthRaster.cpp\n\tGPU/Common/DepthRaster.h\n\tGPU/Common/TextureShaderCommon.cpp\n\tGPU/Common/TextureShaderCommon.h\n\tGPU/Common/DepalettizeShaderCommon.cpp\n\tGPU/Common/DepalettizeShaderCommon.h\n\tGPU/Common/FragmentShaderGenerator.cpp\n\tGPU/Common/FragmentShaderGenerator.h\n\tGPU/Common/VertexShaderGenerator.cpp\n\tGPU/Common/VertexShaderGenerator.h\n\tGPU/Common/GeometryShaderGenerator.cpp\n\tGPU/Common/GeometryShaderGenerator.h\n\tGPU/Common/FramebufferManagerCommon.cpp\n\tGPU/Common/FramebufferManagerCommon.h\n\tGPU/Common/GPUDebugInterface.cpp\n\tGPU/Common/GPUDebugInterface.h\n\tGPU/Common/GPUStateUtils.cpp\n\tGPU/Common/GPUStateUtils.h\n\tGPU/Common/DrawEngineCommon.cpp\n\tGPU/Common/DrawEngineCommon.h\n\tGPU/Common/PresentationCommon.cpp\n\tGPU/Common/PresentationCommon.h\n\tGPU/Common/ReinterpretFramebuffer.cpp\n\tGPU/Common/ReinterpretFramebuffer.h\n\tGPU/Common/ShaderId.cpp\n\tGPU/Common/ShaderId.h\n\tGPU/Common/ShaderUniforms.cpp\n\tGPU/Common/ShaderUniforms.h\n\tGPU/Common/ShaderCommon.cpp\n\tGPU/Common/ShaderCommon.h\n\tGPU/Common/SplineCommon.cpp\n\tGPU/Common/SplineCommon.h\n\tGPU/Common/StencilCommon.cpp\n\tGPU/Common/StencilCommon.h\n\tGPU/Common/SoftwareTransformCommon.cpp\n\tGPU/Common/SoftwareTransformCommon.h\n\tGPU/Common/VertexDecoderCommon.cpp\n\tGPU/Common/VertexDecoderCommon.h\n\tGPU/Common/VertexDecoderHandwritten.cpp\n\tGPU/Common/VertexDecoderHandwritten.h\n\tGPU/Common/TransformCommon.cpp\n\tGPU/Common/TransformCommon.h\n\tGPU/Common/IndexGenerator.cpp\n\tGPU/Common/IndexGenerator.h\n\tGPU/Common/TextureDecoder.cpp\n\tGPU/Common/TextureDecoder.h\n\tGPU/Common/TextureCacheCommon.cpp\n\tGPU/Common/TextureCacheCommon.h\n\tGPU/Common/TextureScalerCommon.cpp\n\tGPU/Common/TextureScalerCommon.h\n\tGPU/Common/PostShader.cpp\n\tGPU/Common/PostShader.h\n\tGPU/Common/TextureReplacer.cpp\n\tGPU/Common/TextureReplacer.h\n\tGPU/Common/ReplacedTexture.cpp\n\tGPU/Common/ReplacedTexture.h\n\tGPU/Debugger/Breakpoints.cpp\n\tGPU/Debugger/Breakpoints.h\n\tGPU/Debugger/Debugger.cpp\n\tGPU/Debugger/Debugger.h\n\tGPU/Debugger/GECommandTable.cpp\n\tGPU/Debugger/GECommandTable.h\n\tGPU/Debugger/Playback.cpp\n\tGPU/Debugger/Playback.h\n\tGPU/Debugger/Record.cpp\n\tGPU/Debugger/Record.h\n\tGPU/Debugger/RecordFormat.h\n\tGPU/Debugger/State.cpp\n\tGPU/Debugger/State.h\n\tGPU/Debugger/Stepping.cpp\n\tGPU/Debugger/Stepping.h\n\tGPU/ge_constants.h\n\tGPU/GeConstants.cpp\n\tGPU/GPUDefinitions.h\n\tGPU/GeDisasm.cpp\n\tGPU/GeDisasm.h\n\tGPU/GPU.cpp\n\tGPU/GPU.h\n\tGPU/GPUCommon.cpp\n\tGPU/GPUCommon.h\n\tGPU/GPUCommonHW.cpp\n\tGPU/GPUCommonHW.h\n\tGPU/GPUState.cpp\n\tGPU/GPUState.h\n\tGPU/Math3D.cpp\n\tGPU/Math3D.h\n\tGPU/Software/BinManager.cpp\n\tGPU/Software/BinManager.h\n\tGPU/Software/Clipper.cpp\n\tGPU/Software/Clipper.h\n\tGPU/Software/DrawPixel.cpp\n\tGPU/Software/DrawPixel.h\n\tGPU/Software/FuncId.cpp\n\tGPU/Software/FuncId.h\n\tGPU/Software/Lighting.cpp\n\tGPU/Software/Lighting.h\n\tGPU/Software/Rasterizer.cpp\n\tGPU/Software/Rasterizer.h\n\tGPU/Software/RasterizerRectangle.cpp\n\tGPU/Software/RasterizerRectangle.h\n\tGPU/Software/RasterizerRegCache.cpp\n\tGPU/Software/RasterizerRegCache.h\n\tGPU/Software/Sampler.cpp\n\tGPU/Software/Sampler.h\n\tGPU/Software/SoftGpu.cpp\n\tGPU/Software/SoftGpu.h\n\tGPU/Software/TransformUnit.cpp\n\tGPU/Software/TransformUnit.h\n)\n\n# 'ppsspp_jni' on ANDROID, 'Core' everywhere else\n# SHARED on ANDROID, STATIC everywhere else\nadd_library(${CoreLibName} ${CoreLinkType}\n\t${CoreExtra}\n\t${CommonJIT}\n\tCore/Config.cpp\n\tCore/Config.h\n\tCore/ConfigSettings.cpp\n\tCore/ConfigSettings.h\n\tCore/ConfigValues.h\n\tCore/ControlMapper.cpp\n\tCore/ControlMapper.h\n\tCore/Core.cpp\n\tCore/Core.h\n\tCore/Compatibility.cpp\n\tCore/Compatibility.h\n\tCore/CoreParameter.h\n\tCore/CoreTiming.cpp\n\tCore/CoreTiming.h\n\tCore/CwCheat.cpp\n\tCore/CwCheat.h\n\tCore/FrameTiming.cpp\n\tCore/FrameTiming.h\n\tCore/HDRemaster.cpp\n\tCore/HDRemaster.h\n\tCore/Instance.cpp\n\tCore/Instance.h\n\tCore/KeyMap.cpp\n\tCore/KeyMap.h\n\tCore/KeyMapDefaults.cpp\n\tCore/KeyMapDefaults.h\n\tCore/RetroAchievements.h\n\tCore/RetroAchievements.cpp\n\tCore/ThreadEventQueue.h\n\tCore/TiltEventProcessor.h\n\tCore/TiltEventProcessor.cpp\n\tCore/WebServer.cpp\n\tCore/WebServer.h\n\tCore/Debugger/Breakpoints.cpp\n\tCore/Debugger/Breakpoints.h\n\tCore/Debugger/DebugInterface.h\n\tCore/Debugger/MemBlockInfo.cpp\n\tCore/Debugger/MemBlockInfo.h\n\tCore/Debugger/SymbolMap.cpp\n\tCore/Debugger/SymbolMap.h\n\tCore/Debugger/DisassemblyManager.cpp\n\tCore/Debugger/DisassemblyManager.h\n\tCore/Debugger/WebSocket.cpp\n\tCore/Debugger/WebSocket.h\n\tCore/Debugger/WebSocket/BreakpointSubscriber.cpp\n\tCore/Debugger/WebSocket/BreakpointSubscriber.h\n\tCore/Debugger/WebSocket/CPUCoreSubscriber.cpp\n\tCore/Debugger/WebSocket/CPUCoreSubscriber.h\n\tCore/Debugger/WebSocket/DisasmSubscriber.cpp\n\tCore/Debugger/WebSocket/DisasmSubscriber.h\n\tCore/Debugger/WebSocket/GameBroadcaster.cpp\n\tCore/Debugger/WebSocket/GameBroadcaster.h\n\tCore/Debugger/WebSocket/GameSubscriber.cpp\n\tCore/Debugger/WebSocket/GameSubscriber.h\n\tCore/Debugger/WebSocket/ClientConfigSubscriber.cpp\n\tCore/Debugger/WebSocket/ClientConfigSubscriber.h\n\tCore/Debugger/WebSocket/GPUBufferSubscriber.cpp\n\tCore/Debugger/WebSocket/GPUBufferSubscriber.h\n\tCore/Debugger/WebSocket/GPURecordSubscriber.cpp\n\tCore/Debugger/WebSocket/GPURecordSubscriber.h\n\tCore/Debugger/WebSocket/GPUStatsSubscriber.cpp\n\tCore/Debugger/WebSocket/GPUStatsSubscriber.h\n\tCore/Debugger/WebSocket/HLESubscriber.cpp\n\tCore/Debugger/WebSocket/HLESubscriber.h\n\tCore/Debugger/WebSocket/InputBroadcaster.cpp\n\tCore/Debugger/WebSocket/InputBroadcaster.h\n\tCore/Debugger/WebSocket/InputSubscriber.cpp\n\tCore/Debugger/WebSocket/InputSubscriber.h\n\tCore/Debugger/WebSocket/LogBroadcaster.cpp\n\tCore/Debugger/WebSocket/LogBroadcaster.h\n\tCore/Debugger/WebSocket/MemoryInfoSubscriber.cpp\n\tCore/Debugger/WebSocket/MemoryInfoSubscriber.h\n\tCore/Debugger/WebSocket/MemorySubscriber.cpp\n\tCore/Debugger/WebSocket/MemorySubscriber.h\n\tCore/Debugger/WebSocket/ReplaySubscriber.cpp\n\tCore/Debugger/WebSocket/ReplaySubscriber.h\n\tCore/Debugger/WebSocket/SteppingBroadcaster.cpp\n\tCore/Debugger/WebSocket/SteppingBroadcaster.h\n\tCore/Debugger/WebSocket/SteppingSubscriber.cpp\n\tCore/Debugger/WebSocket/SteppingSubscriber.h\n\tCore/Debugger/WebSocket/WebSocketUtils.cpp\n\tCore/Debugger/WebSocket/WebSocketUtils.h\n\tCore/Dialog/PSPDialog.cpp\n\tCore/Dialog/PSPDialog.h\n\tCore/Dialog/PSPGamedataInstallDialog.cpp\n\tCore/Dialog/PSPGamedataInstallDialog.h\n\tCore/Dialog/PSPMsgDialog.cpp\n\tCore/Dialog/PSPMsgDialog.h\n\tCore/Dialog/PSPNetconfDialog.cpp\n\tCore/Dialog/PSPNetconfDialog.h\n\tCore/Dialog/PSPNpSigninDialog.cpp\n\tCore/Dialog/PSPNpSigninDialog.h\n\tCore/Dialog/PSPOskDialog.cpp\n\tCore/Dialog/PSPOskDialog.h\n\tCore/Dialog/PSPOskConstants.cpp\n\tCore/Dialog/PSPOskConstants.h\n\tCore/Dialog/PSPPlaceholderDialog.cpp\n\tCore/Dialog/PSPPlaceholderDialog.h\n\tCore/Dialog/PSPSaveDialog.cpp\n\tCore/Dialog/PSPSaveDialog.h\n\tCore/Dialog/PSPScreenshotDialog.cpp\n\tCore/Dialog/PSPScreenshotDialog.h\n\tCore/Dialog/SavedataParam.cpp\n\tCore/Dialog/SavedataParam.h\n\tCore/ELF/ElfReader.cpp\n\tCore/ELF/ElfReader.h\n\tCore/ELF/ElfTypes.h\n\tCore/ELF/PBPReader.cpp\n\tCore/ELF/PBPReader.h\n\tCore/ELF/PrxDecrypter.cpp\n\tCore/ELF/PrxDecrypter.h\n\tCore/ELF/ParamSFO.cpp\n\tCore/ELF/ParamSFO.h\n\tCore/FFMPEGCompat.h\n\tCore/FileSystems/tlzrc.cpp\n\tCore/FileSystems/BlobFileSystem.cpp\n\tCore/FileSystems/BlobFileSystem.h\n\tCore/FileSystems/BlockDevices.cpp\n\tCore/FileSystems/BlockDevices.h\n\tCore/FileSystems/DirectoryFileSystem.cpp\n\tCore/FileSystems/DirectoryFileSystem.h\n\tCore/FileSystems/FileSystem.h\n\tCore/FileSystems/FileSystem.cpp\n\tCore/FileSystems/ISOFileSystem.cpp\n\tCore/FileSystems/ISOFileSystem.h\n\tCore/FileSystems/MetaFileSystem.cpp\n\tCore/FileSystems/MetaFileSystem.h\n\tCore/FileSystems/VirtualDiscFileSystem.cpp\n\tCore/FileSystems/VirtualDiscFileSystem.h\n\tCore/Font/PGF.cpp\n\tCore/Font/PGF.h\n\tCore/HLE/FunctionWrappers.h\n\tCore/HLE/HLE.cpp\n\tCore/HLE/HLE.h\n\tCore/HLE/ReplaceTables.cpp\n\tCore/HLE/ReplaceTables.h\n\tCore/HLE/HLEHelperThread.cpp\n\tCore/HLE/HLEHelperThread.h\n\tCore/HLE/HLETables.cpp\n\tCore/HLE/HLETables.h\n\tCore/HLE/KernelWaitHelpers.h\n\tCore/HLE/KUBridge.h\n\tCore/HLE/KUBridge.cpp\n\tCore/HLE/Plugins.h\n\tCore/HLE/Plugins.cpp\n\tCore/HLE/ThreadQueueList.h\n\tCore/HLE/__sceAudio.cpp\n\tCore/HLE/__sceAudio.h\n\tCore/HLE/sceAdler.cpp\n\tCore/HLE/sceAdler.h\n\tCore/HLE/AtracCtx.cpp\n\tCore/HLE/AtracCtx.h\n\tCore/HLE/AtracCtx2.cpp\n\tCore/HLE/AtracCtx2.h\n\tCore/HLE/NetInetConstants.cpp\n\tCore/HLE/NetInetConstants.h\n\tCore/HLE/SocketManager.cpp\n\tCore/HLE/SocketManager.h\n\tCore/HLE/sceAtrac.cpp\n\tCore/HLE/sceAtrac.h\n\tCore/HLE/sceAudio.cpp\n\tCore/HLE/sceAudiocodec.cpp\n\tCore/HLE/sceAudiocodec.h\n\tCore/HLE/sceAudioRouting.cpp\n\tCore/HLE/sceAudioRouting.h\n\tCore/HLE/sceAudio.h\n\tCore/HLE/sceCcc.h\n\tCore/HLE/sceCcc.cpp\n\tCore/HLE/sceChnnlsv.cpp\n\tCore/HLE/sceChnnlsv.h\n\tCore/HLE/sceCtrl.cpp\n\tCore/HLE/sceCtrl.h\n\tCore/HLE/sceDeflt.cpp\n\tCore/HLE/sceDeflt.h\n\tCore/HLE/sceDisplay.cpp\n\tCore/HLE/sceDisplay.h\n\tCore/HLE/sceDmac.cpp\n\tCore/HLE/sceDmac.h\n\tCore/HLE/sceG729.cpp\n\tCore/HLE/sceG729.h\n\tCore/HLE/sceGameUpdate.cpp\n\tCore/HLE/sceGameUpdate.h\n\tCore/HLE/sceGe.cpp\n\tCore/HLE/sceGe.h\n\tCore/HLE/sceFont.cpp\n\tCore/HLE/sceFont.h\n\tCore/HLE/sceHeap.cpp\n\tCore/HLE/sceHeap.h\n\tCore/HLE/sceHprm.cpp\n\tCore/HLE/sceHprm.h\n\tCore/HLE/sceHttp.cpp\n\tCore/HLE/sceHttp.h\n\tCore/HLE/sceImpose.cpp\n\tCore/HLE/sceImpose.h\n\tCore/HLE/sceIo.cpp\n\tCore/HLE/sceIo.h\n\tCore/HLE/sceJpeg.cpp\n\tCore/HLE/sceJpeg.h\n\tCore/HLE/sceKernel.cpp\n\tCore/HLE/sceKernel.h\n\tCore/HLE/sceKernelAlarm.cpp\n\tCore/HLE/sceKernelAlarm.h\n\tCore/HLE/sceKernelEventFlag.cpp\n\tCore/HLE/sceKernelEventFlag.h\n\tCore/HLE/sceKernelHeap.cpp\n\tCore/HLE/sceKernelHeap.h\n\tCore/HLE/sceKernelInterrupt.cpp\n\tCore/HLE/sceKernelInterrupt.h\n\tCore/HLE/sceKernelMbx.cpp\n\tCore/HLE/sceKernelMbx.h\n\tCore/HLE/sceKernelMemory.cpp\n\tCore/HLE/sceKernelMemory.h\n\tCore/HLE/sceKernelModule.cpp\n\tCore/HLE/sceKernelModule.h\n\tCore/HLE/sceKernelMsgPipe.cpp\n\tCore/HLE/sceKernelMsgPipe.h\n\tCore/HLE/sceKernelMutex.cpp\n\tCore/HLE/sceKernelMutex.h\n\tCore/HLE/sceKernelSemaphore.cpp\n\tCore/HLE/sceKernelSemaphore.h\n\tCore/HLE/sceKernelThread.cpp\n\tCore/HLE/sceKernelThread.h\n\tCore/HLE/sceKernelTime.cpp\n\tCore/HLE/sceKernelTime.h\n\tCore/HLE/sceKernelVTimer.cpp\n\tCore/HLE/sceKernelVTimer.h\n\tCore/HLE/sceMpeg.cpp\n\tCore/HLE/sceMpeg.h\n\tCore/HLE/sceNet.cpp\n\tCore/HLE/sceNet.h\n\tCore/HLE/sceNetAdhoc.cpp\n\tCore/HLE/sceNetAdhoc.h\n\tCore/HLE/sceNetAdhocMatching.cpp\n\tCore/HLE/sceNetAdhocMatching.h\n\tCore/HLE/sceNetInet.cpp\n\tCore/HLE/sceNetInet.h\n\tCore/HLE/sceNetApctl.cpp\n\tCore/HLE/sceNetApctl.h\n\tCore/HLE/sceNetResolver.cpp\n\tCore/HLE/sceNetResolver.h\n\tCore/HLE/proAdhoc.h\n\tCore/HLE/proAdhoc.cpp\n\tCore/HLE/proAdhocServer.h\n\tCore/HLE/proAdhocServer.cpp\n\tCore/HLE/sceOpenPSID.cpp\n\tCore/HLE/sceOpenPSID.h\n\tCore/HLE/sceP3da.cpp\n\tCore/HLE/sceP3da.h\n\tCore/HLE/sceMt19937.cpp\n\tCore/HLE/sceMt19937.h\n\tCore/HLE/sceMd5.cpp\n\tCore/HLE/sceMd5.h\n\tCore/HLE/sceMp4.cpp\n\tCore/HLE/sceMp4.h\n\tCore/HLE/sceMp3.cpp\n\tCore/HLE/sceMp3.h\n\tCore/HLE/sceParseHttp.cpp\n\tCore/HLE/sceParseHttp.h\n\tCore/HLE/sceParseUri.cpp\n\tCore/HLE/sceParseUri.h\n\tCore/HLE/scePower.cpp\n\tCore/HLE/scePower.h\n\tCore/HLE/scePsmf.cpp\n\tCore/HLE/scePsmf.h\n\tCore/HLE/sceRtc.cpp\n\tCore/HLE/sceRtc.h\n\tCore/HLE/sceSas.cpp\n\tCore/HLE/sceSas.h\n\tCore/HLE/sceSfmt19937.cpp\n\tCore/HLE/sceSfmt19937.h\n\tCore/HLE/sceSha256.cpp\n\tCore/HLE/sceSha256.h\n\tCore/HLE/sceSircs.cpp\n\tCore/HLE/sceSircs.h\n\tCore/HLE/sceSsl.cpp\n\tCore/HLE/sceSsl.h\n\tCore/HLE/sceUmd.cpp\n\tCore/HLE/sceUmd.h\n\tCore/HLE/sceUsb.cpp\n\tCore/HLE/sceUsb.h\n\tCore/HLE/sceUsbAcc.cpp\n\tCore/HLE/sceUsbAcc.h\n\tCore/HLE/sceUsbCam.cpp\n\tCore/HLE/sceUsbCam.h\n\tCore/HLE/sceUsbGps.cpp\n\tCore/HLE/sceUsbGps.h\n\tCore/HLE/sceUsbMic.cpp\n\tCore/HLE/sceUsbMic.h\n\tCore/HLE/sceUtility.cpp\n\tCore/HLE/sceUtility.h\n\tCore/HLE/sceVaudio.cpp\n\tCore/HLE/sceVaudio.h\n\tCore/HLE/scePspNpDrm_user.cpp\n\tCore/HLE/scePspNpDrm_user.h\n\tCore/HLE/sceNp.cpp\n\tCore/HLE/sceNp.h\n\tCore/HLE/sceNp2.cpp\n\tCore/HLE/sceNp2.h\n\tCore/HLE/scePauth.cpp\n\tCore/HLE/scePauth.h\n\tCore/HW/SimpleAudioDec.cpp\n\tCore/HW/SimpleAudioDec.h\n\tCore/HW/Atrac3Standalone.cpp\n\tCore/HW/Atrac3Standalone.h\n\tCore/HW/SimpleAudioDec.h\n\tCore/HW/AsyncIOManager.cpp\n\tCore/HW/AsyncIOManager.h\n\tCore/HW/BufferQueue.cpp\n\tCore/HW/BufferQueue.h\n\tCore/HW/Camera.cpp\n\tCore/HW/Camera.h\n\tCore/HW/Display.cpp\n\tCore/HW/Display.h\n\tCore/HW/MediaEngine.cpp\n\tCore/HW/MediaEngine.h\n\tCore/HW/MpegDemux.cpp\n\tCore/HW/MpegDemux.h\n\tCore/HW/MemoryStick.cpp\n\tCore/HW/MemoryStick.h\n\tCore/HW/SasAudio.cpp\n\tCore/HW/SasAudio.h\n\tCore/HW/SasReverb.cpp\n\tCore/HW/SasReverb.h\n\tCore/HW/StereoResampler.cpp\n\tCore/HW/StereoResampler.h\n\tCore/Loaders.cpp\n\tCore/Loaders.h\n\tCore/FileLoaders/CachingFileLoader.cpp\n\tCore/FileLoaders/CachingFileLoader.h\n\tCore/FileLoaders/DiskCachingFileLoader.cpp\n\tCore/FileLoaders/DiskCachingFileLoader.h\n\tCore/FileLoaders/HTTPFileLoader.cpp\n\tCore/FileLoaders/HTTPFileLoader.h\n\tCore/FileLoaders/LocalFileLoader.cpp\n\tCore/FileLoaders/LocalFileLoader.h\n\tCore/FileLoaders/RamCachingFileLoader.cpp\n\tCore/FileLoaders/RamCachingFileLoader.h\n\tCore/FileLoaders/RetryingFileLoader.cpp\n\tCore/FileLoaders/RetryingFileLoader.h\n\tCore/MIPS/MIPS.cpp\n\tCore/MIPS/MIPS.h\n\tCore/MIPS/MIPSAnalyst.cpp\n\tCore/MIPS/MIPSAnalyst.h\n\tCore/MIPS/MIPSCodeUtils.cpp\n\tCore/MIPS/MIPSCodeUtils.h\n\tCore/MIPS/MIPSDebugInterface.cpp\n\tCore/MIPS/MIPSDebugInterface.h\n\tCore/MIPS/MIPSDis.cpp\n\tCore/MIPS/MIPSDis.h\n\tCore/MIPS/MIPSDisVFPU.cpp\n\tCore/MIPS/MIPSDisVFPU.h\n\tCore/MIPS/MIPSInt.cpp\n\tCore/MIPS/MIPSInt.h\n\tCore/MIPS/MIPSIntVFPU.cpp\n\tCore/MIPS/MIPSIntVFPU.h\n\tCore/MIPS/MIPSStackWalk.cpp\n\tCore/MIPS/MIPSStackWalk.h\n\tCore/MIPS/MIPSTables.cpp\n\tCore/MIPS/MIPSTables.h\n\tCore/MIPS/MIPSVFPUUtils.cpp\n\tCore/MIPS/MIPSVFPUUtils.h\n\tCore/MIPS/MIPSVFPUFallbacks.cpp\n\tCore/MIPS/MIPSVFPUFallbacks.h\n\tCore/MIPS/MIPSAsm.cpp\n\tCore/MIPS/MIPSAsm.h\n\tCore/MIPS/MIPSTracer.cpp\n\tCore/MIPS/MIPSTracer.h\n\tCore/MemFault.cpp\n\tCore/MemFault.h\n\tCore/MemMap.cpp\n\tCore/MemMap.h\n\tCore/MemMapFunctions.cpp\n\tCore/MemMapHelpers.h\n\tCore/PSPLoaders.cpp\n\tCore/PSPLoaders.h\n\tCore/Reporting.cpp\n\tCore/Reporting.h\n\tCore/Replay.cpp\n\tCore/Replay.h\n\tCore/SaveState.cpp\n\tCore/SaveState.h\n\tCore/Screenshot.cpp\n\tCore/Screenshot.h\n\tCore/System.cpp\n\tCore/System.h\n\tCore/ThreadPools.cpp\n\tCore/ThreadPools.h\n\tCore/Util/AudioFormat.cpp\n\tCore/Util/AudioFormat.h\n\tCore/Util/GameManager.cpp\n\tCore/Util/GameManager.h\n\tCore/Util/MemStick.cpp\n\tCore/Util/MemStick.h\n\tCore/Util/GameDB.cpp\n\tCore/Util/GameDB.h\n\tCore/Util/PortManager.cpp\n\tCore/Util/PortManager.h\n\tCore/Util/BlockAllocator.cpp\n\tCore/Util/BlockAllocator.h\n\tCore/Util/PPGeDraw.cpp\n\tCore/Util/PPGeDraw.h\n\t${GPU_SOURCES}\n\text/disarm.cpp\n\text/disarm.h\n\text/riscv-disas.cpp\n\text/riscv-disas.h\n\t${CMAKE_CURRENT_BINARY_DIR}/git-version.cpp\n)\n\nif(ANDROID)\n\tset(CoreExtraLibs ${CoreExtraLibs} android)\n\tif(X86_64)\n\t\tset(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,-Bsymbolic\")\n\tendif()\nendif()\n\nif(USE_ARMIPS)\n\tset(CoreExtraLibs ${CoreExtraLibs} armips)\nelse()\n\tadd_definitions(-DNO_ARMIPS=1)\nendif()\n\n# needed for VK_USE_PLATFORM_XCB_KHR only\n#if(VULKAN AND NOT WIN32)\n#\ttarget_link_libraries(native X11-xcb X11)\n#endif()\n\nset(GlslangLibs glslang OGLCompiler OSDependent SPIRV spirv-cross-glsl)\n\nif (ENABLE_SPVREMAPPER)\n\tlist(APPEND GlslangLibs SPVRemapper)\nendif()\n\nif(WIN32)\n\tset(GlslangLibs ${GlslangLibs} spirv-cross-hlsl)\nendif()\n\nif(OPENGL_opengl_LIBRARY AND OpenGL_GL_PREFERENCE STREQUAL GLVND AND NOT APPLE)\n\tset(OPENGL_LIBRARIES OpenGL::OpenGL)\nendif()\n\nif(USE_SYSTEM_ZSTD)\n\tfind_package(ZSTD REQUIRED)\n\ttarget_include_directories(${CoreLibName} PRIVATE ${ZSTD_INCLUDE_DIR})\n\ttarget_link_libraries(${CoreLibName} ${ZSTD_LIBRARY})\nelse()\n\tadd_subdirectory(ext/zstd-build)\n\tset(CoreExtraLibs ${CoreExtraLibs} libzstd_static)\n\tinclude_directories(ext/zstd/lib)\nendif()\n\ninclude_directories(ext/libchdr/include)\n\ntarget_link_libraries(${CoreLibName} Common native chdr kirk cityhash sfmt19937 xbrz xxhash rcheevos minimp3 at3_standalone lua ${GlslangLibs}\n\t${CoreExtraLibs} ${OPENGL_LIBRARIES} ${X11_LIBRARIES} ${CMAKE_DL_LIBS})\n\n# Winsock\nif(WIN32)\n\ttarget_link_libraries(${CoreLibName} ws2_32 winhttp)\nendif()\n\nif(NOT HTTPS_NOT_AVAILABLE)\n\ttarget_link_libraries(${CoreLibName} naett)\n\tif(WIN32)\n\t\ttarget_link_libraries(${CoreLibName} winhttp)\n\tendif()\nendif()\n\ntarget_compile_features(${CoreLibName} PUBLIC cxx_std_17)\n\nif(FFmpeg_FOUND)\n\ttarget_compile_definitions(${CoreLibName} PRIVATE USE_FFMPEG=1)\n\tif (HAVE_LIBAVCODEC_CONST_AVCODEC)\n\t\ttarget_compile_definitions(${CoreLibName} PRIVATE HAVE_LIBAVCODEC_CONST_AVCODEC=1)\n\tendif()\n\tset_target_properties(${CoreLibName} PROPERTIES NO_SYSTEM_FROM_IMPORTED true)\n\ttarget_include_directories(${CoreLibName} BEFORE PUBLIC ${FFmpeg_INCLUDE_avcodec} ${FFmpeg_INCLUDE_avformat})\n\ttarget_link_libraries(${CoreLibName}\n\t\tFFmpeg::avcodec\n\t\tFFmpeg::avformat\n\t\tFFmpeg::avutil\n\t\tFFmpeg::swresample\n\t\tFFmpeg::swscale\n\t\t${ZLIB_LIBRARY}\n\t)\nendif()\n\n# Discord integration\nif(USE_DISCORD AND NOT IOS AND NOT LIBRETRO)\n\tadd_definitions(-DUSE_DISCORD=1)\n\ttarget_link_libraries(${CoreLibName} discord-rpc)\nendif()\n\n# miniUPnPc integration (MiniUPnPc supposed to works on any POSIX system, not sure if some of these are redundant/not needed tho)\nif(USE_MINIUPNPC)\n\tif(USE_SYSTEM_MINIUPNPC)\n\t\tfind_package(MINIUPNPC REQUIRED)\n\t\ttarget_include_directories(${CoreLibName} PRIVATE ${MINIUPNP_INCLUDE_DIR})\n\t\ttarget_link_libraries(${CoreLibName} ${MINIUPNP_LIBRARY})\n\t\tadd_definitions(-DWITH_UPNP -DUSE_SYSTEM_MINIUPNPC)\n\telse()\n\t\tset (MINIUPNPC_VERSION 2.2) # used by miniupnpcstrings.h.cmake\n\t\tset (MINIUPNPC_API_VERSION 18)\n\t\toption(UPNPC_BUILD_STATIC \"Build static library\" TRUE)\n\t\toption(NO_GETADDRINFO \"Define NO_GETADDRINFO\" FALSE)\n\t\tmark_as_advanced(NO_GETADDRINFO)\n\t\tif (NO_GETADDRINFO)\n\t\t\tadd_definitions(-DNO_GETADDRINFO)\n\t\tendif()\n\n\t\tif (NOT WIN32)\n\t\t\tadd_definitions (-DMINIUPNPC_SET_SOCKET_TIMEOUT)\n\t\t\tadd_definitions (-D_BSD_SOURCE -D_DEFAULT_SOURCE -D_POSIX_C_SOURCE=200112L)\n\t\tendif()\n\t\tif (MACOSX)\n\t\t\tadd_definitions (-D_DARWIN_C_SOURCE)\n\t\tendif()\n\t\tif(WIN32)\n\t\t\tadd_definitions(-DWIN32 -DMINIUPNP_EXPORTS)\n\t\telse()\n\t\t\tadd_definitions(-fPIC)\n\t\tendif()\n\n\t\tadd_definitions(-DWITH_UPNP -DMINIUPNP_STATICLIB)\n\t\tset(MINIUPNP_DIR \"ext/miniupnp/miniupnpc\")\n\t\tinclude_directories(${CMAKE_CURRENT_BINARY_DIR})\n\t\tinclude_directories(ext/miniupnp/miniupnpc/src)\n\t\tinclude_directories(ext/miniupnp/miniupnpc/include)\n\t\tconfigure_file(${MINIUPNP_DIR}/miniupnpcstrings.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/miniupnpcstrings.h) # by default miniupnp repo doesn't contains miniupnpcstrings.h and need to be generated\n\t\tset(MINIUPNPC_SOURCES\n\t\t\t# the needed bits of miniupnpc (no python module, no tests, no cli)\n\t\t\t${MINIUPNP_DIR}/src/addr_is_reserved.c\n\t\t\t${MINIUPNP_DIR}/src/connecthostport.c\n\t\t\t${MINIUPNP_DIR}/src/igd_desc_parse.c\n\t\t\t${MINIUPNP_DIR}/src/minisoap.c\n\t\t\t${MINIUPNP_DIR}/src/minissdpc.c\n\t\t\t${MINIUPNP_DIR}/src/miniupnpc.c\n\t\t\t#${MINIUPNP_DIR}/miniupnpcmodule.c\n\t\t\t${MINIUPNP_DIR}/src/miniwget.c\n\t\t\t${MINIUPNP_DIR}/src/minixml.c\n\t\t\t${MINIUPNP_DIR}/src/portlistingparse.c\n\t\t\t${MINIUPNP_DIR}/src/receivedata.c\n\t\t\t#${MINIUPNP_DIR}/upnpc.c # causing an error due to already existing _main()\n\t\t\t${MINIUPNP_DIR}/src/upnpcommands.c\n\t\t\t${MINIUPNP_DIR}/src/upnpdev.c\n\t\t\t${MINIUPNP_DIR}/src/upnperrors.c\n\t\t\t${MINIUPNP_DIR}/src/upnpreplyparse.c\n\t\t\t${CMAKE_CURRENT_BINARY_DIR}/miniupnpcstrings.h\n\t\t)\n\t\tif (NOT WIN32 AND NOT CMAKE_SYSTEM_NAME STREQUAL \"AmigaOS\")\n\t\t\t#set(MINIUPNPC_SOURCES ${MINIUPNPC_SOURCES} minissdpc.c) # causing an error due to duplication in MINIUPNPC_SOURCES?\n\t\tendif()\n\t\tif (WIN32)\n\t\t\tset_source_files_properties(${MINIUPNPC_SOURCES} PROPERTIES  COMPILE_DEFINITIONS \"MINIUPNP_STATICLIB;MINIUPNP_EXPORTS\")\n\t\t\tset(LDLIBS ws2_32 iphlpapi ${LDLIBS})\n\t\t#elseif (CMAKE_SYSTEM_NAME STREQUAL \"Solaris\")\n\t\t#  find_library (SOCKET_LIBRARY NAMES socket)\n\t\t#  find_library (NSL_LIBRARY NAMES nsl)\n\t\t#  find_library (RESOLV_LIBRARY NAMES resolv)\n\t\t#  set (LDLIBS ${SOCKET_LIBRARY} ${NSL_LIBRARY} ${RESOLV_LIBRARY} ${LDLIBS})\n\t\tendif()\n\t\tif (UPNPC_BUILD_STATIC)\n\t\t\tadd_library(miniupnpc STATIC ${MINIUPNPC_SOURCES})\n\t\t\ttarget_link_libraries(${CoreLibName} miniupnpc ${LDLIBS})\n\t\t\tset(UPNPC_LIBRARY miniupnpc)\n\t\t\tif (MSVC)\n\t\t\t\t# Suppress noise warnings\n\t\t\t\ttarget_compile_definitions(miniupnpc PRIVATE _CRT_SECURE_NO_WARNINGS _WINSOCK_DEPRECATED_NO_WARNINGS)\n\t\t\tendif()\n\t\tendif()\n\tendif()\nendif()\n\nsetup_target_project(${CoreLibName} Core)\n\n# Generate git-version at build time.\nadd_custom_target(GitVersion DEPENDS something_that_never_exists)\n\nset(WIN_VERSION_CMD \"\")\nif (WIN32)\n\tset(WIN_VERSION_CMD COMMAND ${CMAKE_SOURCE_DIR}/Windows/git-version-gen.cmd PPSSPPWindows)\nendif()\n\nadd_custom_command(OUTPUT something_that_never_exists\n\tCOMMAND ${CMAKE_COMMAND} -DSOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR}\n\t\t-DOUTPUT_DIR=${CMAKE_CURRENT_BINARY_DIR}\n\t\t-P ${CMAKE_CURRENT_SOURCE_DIR}/git-version.cmake\n\t${WIN_VERSION_CMD})\n\nset_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/git-version.cpp\n\tPROPERTIES GENERATED TRUE\n\tSKIP_AUTOMOC ON)\nadd_dependencies(${CoreLibName} GitVersion)\n\nset(WindowsFiles\n\tWindows/DSoundStream.cpp\n\tWindows/DSoundStream.h\n\tWindows/WindowsAudio.cpp\n\tWindows/WindowsAudio.h\n\tWindows/WASAPIStream.cpp\n\tWindows/WASAPIStream.h\n\tWindows/Debugger/BreakpointWindow.cpp\n\tWindows/Debugger/BreakpointWindow.h\n\tWindows/Debugger/DumpMemoryWindow.cpp\n\tWindows/Debugger/DumpMemoryWindow.h\n\tWindows/Debugger/CtrlDisAsmView.cpp\n\tWindows/Debugger/CtrlDisAsmView.h\n\tWindows/Debugger/CtrlMemView.cpp\n\tWindows/Debugger/CtrlMemView.h\n\tWindows/Debugger/CtrlRegisterList.cpp\n\tWindows/Debugger/CtrlRegisterList.h\n\tWindows/Debugger/DebuggerShared.cpp\n\tWindows/Debugger/DebuggerShared.h\n\tWindows/Debugger/Debugger_Disasm.cpp\n\tWindows/Debugger/Debugger_Disasm.h\n\tWindows/Debugger/Debugger_MemoryDlg.cpp\n\tWindows/Debugger/Debugger_MemoryDlg.h\n\tWindows/Debugger/Debugger_Lists.cpp\n\tWindows/Debugger/Debugger_Lists.h\n\tWindows/Debugger/Debugger_VFPUDlg.cpp\n\tWindows/Debugger/Debugger_VFPUDlg.h\n\tWindows/Debugger/WatchItemWindow.cpp\n\tWindows/Debugger/WatchItemWindow.h\n\tWindows/Debugger/EditSymbolsWindow.cpp\n\tWindows/Debugger/EditSymbolsWindow.h\n\tWindows/GEDebugger/CtrlDisplayListView.cpp\n\tWindows/GEDebugger/SimpleGLWindow.cpp\n\tWindows/GEDebugger/TabState.cpp\n\tWindows/GEDebugger/VertexPreview.cpp\n\tWindows/GEDebugger/CtrlDisplayListView.h\n\tWindows/GEDebugger/SimpleGLWindow.h\n\tWindows/GEDebugger/TabState.h\n\tWindows/GEDebugger/GEDebugger.cpp\n\tWindows/GEDebugger/TabDisplayLists.cpp\n\tWindows/GEDebugger/TabVertices.cpp\n\tWindows/GEDebugger/GEDebugger.h\n\tWindows/GEDebugger/TabDisplayLists.h\n\tWindows/GEDebugger/TabVertices.h\n\tWindows/BufferLock.h\n\tWindows/CaptureDevice.cpp\n\tWindows/CaptureDevice.h\n\tWindows/DinputDevice.cpp\n\tWindows/DinputDevice.h\n\tWindows/DSoundStream.cpp\n\tWindows/DSoundStream.h\n\tWindows/EmuThread.cpp\n\tWindows/EmuThread.h\n\tWindows/GeDebugger/GeDebugger.cpp\n\tWindows/GPU/D3D9Context.cpp\n\tWindows/GPU/D3D9Context.h\n\tWindows/GPU/D3D11Context.cpp\n\tWindows/GPU/D3D11Context.h\n\tWindows/GPU/WindowsGLContext.cpp\n\tWindows/GPU/WindowsVulkanContext.cpp\n\tWindows/InputBox.cpp\n\tWindows/InputBox.h\n\tWindows/InputDevice.cpp\n\tWindows/InputDevice.h\n\tWindows/W32Util/ContextMenu.h\n\tWindows/W32Util/ContextMenu.h\n\tWindows/W32Util/DialogManager.cpp\n\tWindows/W32Util/DialogManager.h\n\tWindows/W32Util/Misc.cpp\n\tWindows/W32Util/Misc.h\n\tWindows/W32Util/ShellUtil.cpp\n\tWindows/W32Util/ShellUtil.h\n\tWindows/W32Util/TabControl.cpp\n\tWindows/W32Util/TabControl.h\n\tWindows/W32Util/IatHook.h\n\tWindows/W32Util/ContextMenu.h\n\tWindows/W32Util/ContextMenu.cpp\n\tWindows/W32Util/DarkMode.h\n\tWindows/W32Util/DarkMode.cpp\n\tWindows/W32Util/UAHMenuBar.h\n\tWindows/W32Util/UAHMenuBar.cpp\n\tWindows/WindowsHost.cpp\n\tWindows/WindowsHost.h\n\tWindows/MainWindow.cpp\n\tWindows/MainWindow.h\n\tWindows/MainWindowMenu.cpp\n\tWindows/MainWindowMenu.h\n\tWindows/RawInput.cpp\n\tWindows/RawInput.h\n\tWindows/TouchInputHandler.cpp\n\tWindows/TouchInputHandler.h\n\tWindows/XinputDevice.cpp\n\tWindows/XinputDevice.h\n\tWindows/main.cpp\n\tWindows/main.h\n\tWindows/ppsspp.rc\n\tWindows/resource.h\n\tWindows/stdafx.cpp\n\tWindows/stdafx.h\n)\n\nlist(APPEND LinkCommon ${CoreLibName} ${CMAKE_THREAD_LIBS_INIT})\n\nif(WIN32)\n\tlist(APPEND LinkCommon kernel32 user32 gdi32 shell32 comctl32 dsound xinput d3d9 winmm dinput8 ole32 winspool ksuser dwmapi mf uxtheme mfplat mfreadwrite mfuuid shlwapi)\n\t#setup_target_project(${TargetBin} Windows)\n\tlist(APPEND NativeAppSource ${WindowsFiles})\nendif()\n\nset(BigFontAssets\n\tassets/font_atlas.zim\n\tassets/font_atlas.meta\n)\n\nset(NativeAssets\n\tassets/ui_atlas.zim\n\tassets/ui_atlas.meta\n\tassets/asciifont_atlas.zim\n\tassets/asciifont_atlas.meta\n\tassets/debugger\n\tassets/lang\n\tassets/shaders\n\tassets/themes\n\tassets/vfpu\n\tassets/Roboto-Condensed.ttf\n\tassets/7z.png\n\tassets/compat.ini\n\tassets/gamecontrollerdb.txt\n\tassets/langregion.ini\n\tassets/ppge_atlas.zim\n\tassets/ppge_atlas.meta\n\tassets/rargray.png\n\tassets/unknown.png\n\tassets/zip.png\n\tassets/sfx_back.wav\n\tassets/sfx_confirm.wav\n\tassets/sfx_select.wav\n\tassets/sfx_toggle_off.wav\n\tassets/sfx_toggle_on.wav\n\tassets/sfx_achievement_unlocked.wav\n\tassets/sfx_leaderbord_submitted.wav\n\tsource_assets/image/logo.png\n\tsource_assets/image/icon_regular_72.png\n)\n\n\nif(HEADLESS)\n\tset(HeadlessSource\n\t\theadless/Headless.cpp\n\t\theadless/HeadlessHost.cpp\n\t\theadless/HeadlessHost.h\n\t\theadless/Compare.cpp\n\t\theadless/Compare.h\n\t\theadless/SDLHeadlessHost.cpp\n\t\theadless/SDLHeadlessHost.h\n\t)\n\tif(WIN32)\n\t\tlist(APPEND HeadlessSource\n\t\t\theadless/WindowsHeadlessHost.cpp\n\t\t\theadless/WindowsHeadlessHost.h\n\t\t\tWindows/GPU/D3D9Context.cpp\n\t\t\tWindows/GPU/D3D9Context.h\n\t\t\tWindows/GPU/D3D11Context.cpp\n\t\t\tWindows/GPU/D3D11Context.h\n\t\t\tWindows/GPU/WindowsGLContext.cpp\n\t\t\tWindows/GPU/WindowsVulkanContext.cpp\n\t\t\tWindows/W32Util/ShellUtil.cpp\n\t\t\tWindows/W32Util/ShellUtil.h\n\t\t\tWindows/CaptureDevice.cpp\n\t\t\tWindows/CaptureDevice.h\n\t\t\tWindows/W32Util/Misc.cpp\n\t\t\tWindows/W32Util/Misc.h\n\t\t)\n\tendif()\n\tadd_executable(PPSSPPHeadless ${HeadlessSource})\n\ttarget_link_libraries(PPSSPPHeadless ${COCOA_LIBRARY} ${QUARTZ_CORE_LIBRARY} ${IOKIT_LIBRARY} ${LinkCommon})\n\tsetup_target_project(PPSSPPHeadless headless)\nendif()\n\nif(UNITTEST)\n\tadd_executable(PPSSPPUnitTest\n\t\tunittest/UnitTest.cpp\n\t\tunittest/TestShaderGenerators.cpp\n\t\tunittest/TestArmEmitter.cpp\n\t\tunittest/TestArm64Emitter.cpp\n\t\tunittest/TestIRPassSimplify.cpp\n\t\tunittest/TestX64Emitter.cpp\n\t\tunittest/TestVertexJit.cpp\n\t\tunittest/TestVFS.cpp\n\t\tunittest/TestRiscVEmitter.cpp\n\t\tunittest/TestSoftwareGPUJit.cpp\n\t\tunittest/TestThreadManager.cpp\n\t\tunittest/JitHarness.cpp\n\t\tCore/MIPS/ARM/ArmRegCache.cpp\n\t\tCore/MIPS/ARM/ArmRegCacheFPU.cpp\n\t)\n\ttarget_link_libraries(PPSSPPUnitTest ${COCOA_LIBRARY} ${QUARTZ_CORE_LIBRARY} ${IOKIT_LIBRARY} ${LinkCommon} Common)\n\tsetup_target_project(PPSSPPUnitTest unittest)\n\tadd_test(arm64_emitter PPSSPPUnitTest Arm64Emitter)\n\tadd_test(arm_emitter PPSSPPUnitTest ArmEmitter)\n\tadd_test(x64_emitter PPSSPPUnitTest X64Emitter)\n\tadd_test(vertex_jit PPSSPPUnitTest VertexJit)\n\tadd_test(asin PPSSPPUnitTest Asin)\n\tadd_test(sincos PPSSPPUnitTest SinCos)\n\tadd_test(vfpu_sincos PPSSPPUnitTest VFPUSinCos)\n\tadd_test(math_util PPSSPPUnitTest MathUtil)\n\tadd_test(parsers PPSSPPUnitTest Parsers)\n\tadd_test(jit PPSSPPUnitTest Jit)\n\tadd_test(matrix_transpose PPSSPPUnitTest MatrixTranspose)\n\tadd_test(parse_lbn PPSSPPUnitTest ParseLBN)\n\tadd_test(quick_texhash PPSSPPUnitTest QuickTexHash)\n\tadd_test(clz PPSSPPUnitTest CLZ)\n\tadd_test(shadergen PPSSPPUnitTest ShaderGenerators)\nendif()\n\nif(LIBRETRO)\n\tadd_subdirectory(libretro)\nendif()\n\nif(TargetBin)\n\tif(APPLE)\n\t\tif(NOT IOS)\n\t\t\tif(GOLD)\n\t\t\t\tset(ICON_PATH_ABS ${CMAKE_CURRENT_SOURCE_DIR}/icons/ppsspp_gold.icns)\n\t\t\t\tset(MACOSX_BUNDLE_ICON_FILE ppsspp_gold.icns)\n\t\t\t\tset(MACOSX_BUNDLE_BUNDLE_NAME \"PPSSPP Gold\")\n\t\t\t\tset(MACOSX_BUNDLE_GUI_IDENTIFIER org.ppsspp.ppssppgold)\n\t\t\telse()\n\t\t\t\tset(ICON_PATH_ABS ${CMAKE_CURRENT_SOURCE_DIR}/icons/ppsspp.icns)\n\t\t\t\tset(MACOSX_BUNDLE_ICON_FILE ppsspp.icns)\n\t\t\t\tset(MACOSX_BUNDLE_BUNDLE_NAME \"PPSSPP\")\n\t\t\t\tset(MACOSX_BUNDLE_GUI_IDENTIFIER org.ppsspp.ppsspp)\n\t\t\tendif()\n\t\t\tset_source_files_properties(${ICON_PATH_ABS} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources\")\n\t\tendif()\n\n\t\t# TODO: there must a native way to copy these.\n\t\t# Now this is very prone to errors when changes occur.\n\t\t# Also better to have assets under Resources dir for OS X.\n\t\tfile(GLOB_RECURSE FLASH0_FILES assets/flash0/*)\n\t\tfile(GLOB_RECURSE LANG_FILES assets/lang/*)\n\t\tfile(GLOB_RECURSE SHADER_FILES assets/shaders/*)\n\t\tfile(GLOB_RECURSE THEME_FILE assets/themes/*)\n\t\tfile(GLOB_RECURSE DEBUGGER_FILES assets/debugger/*)\n\t\tfile(GLOB_RECURSE VFPU_FILES assets/vfpu/*)\n\n\t\tif(NOT IOS)\n\t\t\tset_source_files_properties(${BigFontAssets} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets\")\n\t\t\tset_source_files_properties(${NativeAssets} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets\")\n\t\t\tset_source_files_properties(${FLASH0_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets/flash0/font\")\n\t\t\tset_source_files_properties(${LANG_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets/lang\")\n\t\t\tset_source_files_properties(${SHADER_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets/shaders\")\n\t\t\tset_source_files_properties(${THEME_FILE} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets/themes\")\n\t\t\tset_source_files_properties(${DEBUGGER_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets/debugger\")\n\t\t\tset_source_files_properties(${VFPU_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION \"Resources/assets/vfpu\")\n\t\tendif()\n\n\t\tif(IOS)\n\t\t\tset(AssetCatalog \"${CMAKE_SOURCE_DIR}/ios/assets.xcassets\")\n\t\t\tadd_executable(${TargetBin} MACOSX_BUNDLE ${ICON_PATH_ABS} ${NativeAssets} ${BigFontAssets} ${AssetCatalog} ${SHADER_FILES} ${THEME_FILE} ${DEBUGGER_FILES} ${FLASH0_FILES} ${LANG_FILES} ${NativeAppSource} \"ios/Settings.bundle\" \"ios/Launch Screen.storyboard\")\n\t\t\tif(NOT IOS_APP_STORE)\n\t\t\t\tfile(INSTALL \"${CMAKE_SOURCE_DIR}/ext/vulkan/iOS/Frameworks/libMoltenVK.dylib\" DESTINATION \"${CMAKE_BINARY_DIR}/PPSSPP.app/Frameworks/\")\n\t\t\tendif()\n\t\telse()\n\t\t\tadd_executable(${TargetBin} MACOSX_BUNDLE ${ICON_PATH_ABS} ${NativeAssets} ${BigFontAssets} ${SHADER_FILES} ${THEME_FILE} ${DEBUGGER_FILES} ${FLASH0_FILES} ${LANG_FILES} ${NativeAppSource})\n\t\t\tfile(INSTALL \"${CMAKE_SOURCE_DIR}/ext/vulkan/macOS/Frameworks/libMoltenVK.dylib\" DESTINATION \"${CMAKE_BINARY_DIR}/${TargetBin}.app/Contents/Frameworks/\")\n\t\t\tif(USING_QT_UI)\n\t\t\t\tadd_custom_command(TARGET ${TargetBin} POST_BUILD COMMAND /bin/bash \"${CMAKE_SOURCE_DIR}/Qt/macbundle.sh\" \"${CMAKE_BINARY_DIR}/PPSSPPQt.app\")\n\t\t\telseif(NOT USE_SYSTEM_LIBSDL2)\n\t\t\t\tadd_custom_command(TARGET ${TargetBin} POST_BUILD COMMAND /bin/bash \"${CMAKE_SOURCE_DIR}/SDL/macbundle.sh\" \"${CMAKE_BINARY_DIR}/${TargetBin}.app\" \"${TargetBin}\")\n\t\t\tendif()\n\t\tendif()\n\telseif(WIN32)\n\t\tadd_executable(${TargetBin} WIN32 ${NativeAppSource})\n\t\tif(MSVC)\n\t\t\tset_target_properties(${TargetBin} PROPERTIES LINK_FLAGS \"/SUBSYSTEM:WINDOWS\")\n\t\telse()\n\t\t\tset_target_properties(${TargetBin} PROPERTIES LINK_FLAGS \"-Wl,-subsystem,windows\")\n\t\tendif()\n\t\tset_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${TargetBin})\n\telse()\n\t\tadd_executable(${TargetBin} ${NativeAppSource})\n\tendif()\n\ttarget_link_libraries(${TargetBin} ${LinkCommon} Common)\nendif()\n\n# installs\nif(NOT ANDROID)\n\tfile(INSTALL ${BigFontAssets} DESTINATION assets)\n\tfile(INSTALL ${NativeAssets} DESTINATION assets)\n\tfile(INSTALL assets/flash0 DESTINATION assets)\nendif()\n# packaging and code signing\nif(IOS AND NOT LIBRETRO)\n\tif(IOS_APP_STORE)\n\t\tset(DEPLOYMENT_TARGET 12.0)\n\telse()\n\t\tset(DEPLOYMENT_TARGET 11.0)\n\tendif()\n\tfile(GLOB IOSAssets ios/assets/*.png)\n\tlist(REMOVE_ITEM IOSAssets ${CMAKE_CURRENT_SOURCE_DIR}/ios/assets/Default-568h@2x.png)\n\tlist(REMOVE_ITEM IOSAssets ${CMAKE_CURRENT_SOURCE_DIR}/ios/assets/Default-568h@3x.png)\n\tfile(INSTALL ${IOSAssets} DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/assets)\n\tfile(GLOB IOSAssets ios/assets/Default-568h@*.png)\n\tfile(INSTALL ${IOSAssets} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})\n\tif(IOS_DEBUG)\n\t\tfile(INSTALL pspautotests DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/assets)\n\tendif()\n\tset(RSRC_XIB_FILES \"Launch Screen.storyboard\" ${CMAKE_CURRENT_SOURCE_DIR}/ios/assets.xcassets)\n\n\tset_source_files_properties(${RSRC_XIB_FILES}\n\t\tPROPERTIES MACOSX_PACKAGE_LOCATION Resources\n\t)\n\n\t#This breaks in modern XCode. Not sure when it worked...\n\t#if(CMAKE_GENERATOR STREQUAL \"Xcode\")\n\t#\tset(APP_DIR_NAME \"$(TARGET_BUILD_DIR)/$(FULL_PRODUCT_NAME)\")\n\t#else()\n\t\tset(APP_DIR_NAME \"$<TARGET_FILE_DIR:PPSSPP>\")\n\t#endif()\n\n\tset(MACOSX_DEPLOYMENT_TARGET ${DEPLOYMENT_TARGET})\n\tset(PRODUCT_NAME \"PPSSPP\")\n\tset(BUNDLE_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/ios/PPSSPP-Info.plist\")\n\tif(GOLD)\n\t\tif(IOS_APP_STORE)\n\t\t\tset(BUNDLE_IDENTIFIER \"org.ppsspp.ppsspp-gold\")\n\t\telse()\n\t\t\tset(BUNDLE_IDENTIFIER \"org.ppsspp.ppssppgold\")\n\t\tendif()\n\t\tset(ICON_NAME \"AppIconGold\")\n\t\tset(DISPLAY_NAME \"PPSSPP Gold\")\n\telse()\n\t\tif(IOS_APP_STORE)\n\t\t\tset(BUNDLE_IDENTIFIER \"org.ppsspp.ppsspp-free\")\n\t\telse()\n\t\t\tset(BUNDLE_IDENTIFIER \"org.ppsspp.ppsspp\")\n\t\tendif()\n\t\tset(ICON_NAME \"AppIcon\")\n\t\tset(DISPLAY_NAME \"PPSSPP\")\n\tendif()\n\tif(IOS_APP_STORE)\n\t\tmessage(STATUS \"DevTeam: ${DEVELOPMENT_TEAM_ID} Icon: ${ICON_NAME} Target: ${TargetBin}\")\n\t\tmessage(STATUS \"CURRENT_BINARY_DIR: ${CMAKE_CURRENT_BINARY_DIR}\")\n\n\t\t# This is for injecting the version into the plist, and also copying resources.\n\t\t# Should find a different way to do both these things.\n\t\tadd_custom_command(TARGET ${TargetBin} POST_BUILD\n\t\t\tCOMMAND echo \"Creating ${APP_DIR_NAME} for app store build\"\n\t\t\tCOMMAND mkdir -p \\\"${APP_DIR_NAME}\\\"\n\t\t\t# This tar command seems to be responsible for copying assets. I thought we had another step that did that..\n\t\t\t# Prepend -v to the extracting command to see the files copied.\n\t\t\tCOMMAND tar -c -C ${CMAKE_CURRENT_BINARY_DIR} --exclude .DS_Store --exclude .git assets *.png | tar -x -C \\\"${APP_DIR_NAME}\\\"\n\t\t\t# This updates the version in the plist.\n\t\t\tCOMMAND /bin/bash \"${CMAKE_SOURCE_DIR}/ios/iosbundle.sh\" \\\"${APP_DIR_NAME}\\\" \"${CMAKE_CURRENT_BINARY_DIR}\"\n\t\t)\n\n\t\t# Can't figure out properly using .xcframework from CMake, so just linking directly to the .a file.\n\t\ttarget_link_libraries(${TargetBin}\n\t\t\t\"${CMAKE_CURRENT_SOURCE_DIR}/ios/MoltenVK/MoltenVK.xcframework/ios-arm64/libMoltenVK.a\"\n\t\t)\n\n\t\t# https://stackoverflow.com/questions/40664125/cmake-and-code-signing-in-xcode-8-for-ios-projects\n\t\tset_target_properties(${TargetBin} PROPERTIES\n\t\t\tXCODE_GENERATE_SCHEME YES  # Avoid the scheme bloat in XCode by only setting it to YES for this target.\n\t\t\tRESOURCE \"ios/Launch Screen.storyboard\"\n\t\t\tRESOURCE \"ios/Settings.bundle\"\n\t\t\tRESOURCE \"ios/assets.xcassets\"\n\t\t\tXCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER ${BUNDLE_IDENTIFIER}\n\t\t\tXCODE_ATTRIBUTE_PRODUCT_NAME ${PRODUCT_NAME}\n\t\t\tXCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME ${ICON_NAME}\n\t\t\tBUILD_WITH_INSTALL_RPATH YES\n\t\t\tMACOSX_BUNDLE_INFO_PLIST ${BUNDLE_PLIST}\n\t\t\t# Some sources say we should generate the PLIST. There's stuff in it that\n\t\t\t# I don't know how to generate, though.\n\t\t\t#XCODE_ATTRIBUTE_GENERATE_INFOPLIST_FILE \"YES\"\n\t\t\t#XCODE_ATTRIBUTE_INFOPLIST_KEY_UIRequiredDeviceCapabilities arm64\n\t\t\tXCODE_ATTRIBUTE_INFOPLIST_KEY_UIFileSharingEnabled YES\n\t\t\tXCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY YES\n\t\t\tXCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY YES\n\t\t\tXCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET ${DEPLOYMENT_TARGET}\n\t\t\tXCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY \"1,2\"\n\t\t\tXCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES\n\t\t\tXCODE_ATTRIBUTE_ENABLE_BITCODE NO\n\t\t\tXCODE_ATTRIBUTE_DEVELOPMENT_TEAM ${DEVELOPMENT_TEAM_ID}\n\t\t\tXCODE_ATTRIBUTE_CODE_SIGN_IDENTITY \"Apple Development\"\n\t\t\tXCODE_ATTRIBUTE_CODE_SIGN_STYLE \"Automatic\"\n\t\t\tXCODE_ATTRIBUTE_SKIP_INSTALL NO\n   \t\t\tXCODE_ATTRIBUTE_INSTALL_PATH \"$(LOCAL_APPS_DIR)\"\n\t\t)\n\telse()\n\t\t# This is for injecting the version into the plist.\n\t\tadd_custom_command(TARGET PPSSPP POST_BUILD\n\t\t\tCOMMAND echo \"Creating ${APP_DIR_NAME} for sideload build\"\n\t\t\tCOMMAND mkdir -p \\\"${APP_DIR_NAME}\\\"\n\t\t\tCOMMAND tar -c -C ${CMAKE_CURRENT_BINARY_DIR} --exclude .DS_Store --exclude .git assets *.png | tar -x -C \\\"${APP_DIR_NAME}\\\"\n\t\t\tCOMMAND /bin/bash \"${CMAKE_SOURCE_DIR}/ios/macbundle.sh\" \\\"${APP_DIR_NAME}\\\"\n\t\t)\n\t\tset_target_properties(${TargetBin} PROPERTIES\n\t\t\tMACOSX_BUNDLE_INFO_PLIST ${BUNDLE_PLIST}\n\t\t\tXCODE_GENERATE_SCHEME YES\n\t\t\tRESOURCE \"ios/Launch Screen.storyboard\"\n\t\t\tRESOURCE \"ios/Settings.bundle\"\n\t\t\tRESOURCE \"ext/vulkan/iOS/Frameworks\"\n\t\t\tXCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME ${ICON_NAME}\n\t\t\tXCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET ${DEPLOYMENT_TARGET}\n\t\t\tXCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY \"1,2\"\n\t\t\tXCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES\n\t\t\tXCODE_ATTRIBUTE_ENABLE_BITCODE NO\n\t\t\tXCODE_ATTRIBUTE_CODE_SIGN_IDENTITY \"-\"\n\t\t)\n\tendif()\n\tadd_custom_command(TARGET PPSSPP POST_BUILD\n\t\tCOMMAND plutil -replace CFBundleDisplayName -string \"${DISPLAY_NAME}\" \"${APP_DIR_NAME}/Info.plist\"\n\t\tCOMMAND plutil -replace CFBundleIdentifier -string \"${BUNDLE_IDENTIFIER}\" \"${APP_DIR_NAME}/Info.plist\"\n\t)\nendif()\n\nif(MACOSX AND NOT IOS)\n\tif(GOLD)\n\t\tset_target_properties(${TargetBin} PROPERTIES\n\t\t\tMACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/macOS/InfoGold.plist\"\n\t\t)\n\telse()\n\t\tset_target_properties(${TargetBin} PROPERTIES\n\t\t\tMACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/macOS/Info.plist\"\n\t\t)\n\tendif()\nendif()\n\nif(UNIX AND NOT ANDROID AND NOT APPLE)\n\tconfigure_file(\n\t\t\"${CMAKE_SOURCE_DIR}/ppsspp.desktop.in\"\n\t\t\"${CMAKE_BINARY_DIR}/ppsspp.desktop\"\n\t\t@ONLY\n\t)\n\tinstall(\n\t\tTARGETS ${TargetBin}\n\t\tDESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n\t)\n\tinstall(\n\t\tDIRECTORY \"${CMAKE_BINARY_DIR}/assets\"\n\t\tDESTINATION \"${CMAKE_INSTALL_DATADIR}/ppsspp\"\n\t\tPATTERN \".git*\" EXCLUDE\n\t\tPATTERN \"mime\" EXCLUDE\n\t\tPATTERN \"lang/README.md\" EXCLUDE\n\t)\n\tinstall(\n\t\tFILES \"${CMAKE_BINARY_DIR}/ppsspp.desktop\"\n\t\tDESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/applications\"\n\t\tRENAME ${TargetBin}.desktop\n\t)\n\tinstall(\n\t\tDIRECTORY \"${CMAKE_SOURCE_DIR}/icons/hicolor\"\n\t\tDESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/icons\"\n\t)\n\tinstall(\n\t\tFILES \"${CMAKE_SOURCE_DIR}/icons/icon-512.svg\"\n\t\tDESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/scalable/apps\"\n\t\tRENAME \"ppsspp.svg\"\n\t)\n\tinstall(\n\t\tFILES \"${CMAKE_SOURCE_DIR}/assets/mime/ppsspp.xml\"\n\t\tDESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/mime/packages\"\n\t)\nendif()\n"
        },
        {
          "name": "Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4453125,
          "content": "# First stage\nFROM alpine:latest\n\nCOPY . /src\n\n\nRUN apk add build-base wget git bash cmake python3 glu-dev sdl2-dev\n\nRUN cd src/ffmpeg && ./linux_x86-64.sh\nRUN cd src && ./b.sh --headless\n\n# Second stage\nFROM alpine:latest\n\n# Install required dependencies to make headless to work\nRUN apk add --no-cache sdl2 libstdc++ glu-dev\n\n# Copy minimal things to make headless to work\nCOPY --from=0 src/build/PPSSPPHeadless usr/local/bin/\n\nRUN PPSSPPHeadless || true"
        },
        {
          "name": "GPU",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 19.27734375,
          "content": "PSPSDK BSD-compatible copyright notice (Some parts of the PSPSDK were used in this emulator (defines, constants, headers))\n\nCopyright (c) 2005  adresd\nCopyright (c) 2005  Marcus R. Brown\nCopyright (c) 2005  James Forshaw\nCopyright (c) 2005  John Kelley\nCopyright (c) 2005  Jesper Svennevid\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. The names of the authors may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n                   GNU GENERAL PUBLIC LICENSE\n                      Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                           Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                           NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                    END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Qt",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 29.8525390625,
          "content": "PPSSPP - a fast and portable PSP emulator\n=========================================\n\nCreated by Henrik Rydgård\n\nAdditional code by many contributors, see the Credits screen\n\nOriginally released under the GPL 2.0 (and later) in November 2012\n\nOfficial website: https://www.ppsspp.org/\n\nDiscord: https://discord.gg/5NJB6dD\n\nNo BIOS file required to play, PPSSPP is an \"HLE\" emulator.  Default settings balance good compatibility and speed.\n\nTo contribute, see [the development page](https://www.ppsspp.org/docs/development/).  Help testing, investigating, or fixing is always welcome.  See [the list of issues](https://github.com/hrydgard/ppsspp/issues).\n\nFor the latest source code, see [our GitHub page](https://github.com/hrydgard/ppsspp).\n\nFor documentation of all kinds (usage, reference, development), see the [documentation on the main website](https://www.ppsspp.org/docs)\n\nFor build instructions and other development tutorials, see [the wiki](https://github.com/hrydgard/ppsspp/wiki).\n\nTo download fresh development builds for Android, Windows and Mac, [go to the /devbuilds page](https://www.ppsspp.org/devbuilds)\n\nFor game compatibility, see [community compatibility feedback](https://report.ppsspp.org/games).\n\nWhat's new in 1.18.1\n--------------------\n- Crashfix in PBP reader ([#19580])\n- Fix minor theme issue in the Homebrew Store ([#19582])\n\nWhat's new in 1.18\n------------------\n- Platform support\n\t- Improved iOS/Mac support, Game Mode support ([#19287], [#19281], [#19269], [#19270], [#19257], [#19254], [#19244], [#19227], [#19224], [#19213], [#19200], [#19187], [#19184], [#19161], [#19118])\n\t- IR Interpreter: work on correctness and optimizations ([#19299], [#19280], [#19268], [#19265], [#19262], [#19260], [#19255], [#19252], [#19240], [#19233], [#19231], [#19193], [#19189], [#19173], [#19128])\n\t- Interpreted Vertex Decoder optimizations:  ([#19243], [#19241])\n\t- SDL fixes: ([#19131])\n\t- Legacy Edition for old Android TV (only for download on the website): ([#19401])\n\t- Android and Windows shortcuts - add icons and bugfixes: ([#19139], [#19142], [#19138])\n\t- Improve performance of CHD loading ([#18931])\n- UI\n\t- Many crash, hang and performance fixes around the UI ([#18950], [#19561], [#19556], [#19531], [#19507], [#19523], [#19529], [#19482], [#19473], [#19438] [#19165])\n\t- New post proc filter \"Sharp bilinear\" ([#19530])\n\t- Misc UI fixes ([#19505], [#19492], [#19126], [#19020])\n\t- 3 new themes ([#19504])\n\t- Game info in-game ([#19471])\n\t- New remote iso UI ([#19293])\n\t- Install save games from ZIP file ([#19443], [#19436])\n\t- More input-mappable actions like Reset, allow mapping Alt key ([#19472], [#19484], [#19304])\n\t- Homebrew Store: Added website links, license info: ([#19425], [#19426])\n\t- RetroAchievements: Can now hash homebrew apps ([#19096]), RAIntegration support ([#19002])\n\t- Fix regression of the AxisSwap feature ([#19059])\n- Emulation\n\t- Misc crash fixes: ([#19563], [#19546], [#19491], [#19358], [#19347], [#19198])\n\t- Vulkan barrier fixes: ( [#19009], [#19017], [#19018])\n\t- Misc compatibility fixes ([#19560])\n\t- Misc filesystem fixes (FDs, date/time) ([#19459], [#19340])\n\t- Workaround for The Warriors video playback ([#19450])\n\t- Expose GPI switches and GPO leds, accessible in developer settings\n\t- Fix regression caused by the fix for UFC Undisputed ([#18806])\n\t- Broke out the Atrac3+ code from ffmpeg for easier debugging and maintenance ([#19033], [#19053], more)\n\t- implement sysclib_sprintf ([#19097])\n- Rendering fixes\n\t- Socom FB3 depth buffer problem in menu ([#19490])\n\t- Platypus: Glitchy transparency with OpenGL ([#19364])\n\t- Syphon Filter: Logan's Shadow: Dark lighting in OpenGL ([#19489])\n\t- MGS2 Acid errors on AMD GPUs ([#19439])\n\t- Fix regression in Genshou Suikoden ([#19122])\n\t- Fix HUD glitch in GTA LCS by emulating \"provoking vertex\" correctly ([#19334])\n- Debugging improvements\n\t- MIPSTracer - a new (rough) debugging tool by Nemoumbra ([#19457])\n- VR\n\t- New immersive mode (makes better use of reprojection by extending the rendered area) ([#19361])\n\t- A lot of fixes by Lubos ([#19420], [#19416], [#19389], [#19390], [#19361], [#19092], ...)\n- Misc\n\t- The CHD file format is better supported and performance has been drastically improved ([#18924], [#18931])\n\nWhat's new in 1.17.1\n--------------------\n- Fixed green rendering errors on some PowerVR GPUs ([#18781])\n- Release all held keys on pause to avoid \"stuck keys\" after unpausing or in run-behind-pause ([#18786])\n- UI fixes ([#18785])\n- Update libchdr with zstd support, warn the user about bad CHDs ([#18824], [#18803])\n- Add workaround for AdHoc mode in Resistance ([#18821])\n- Fix graphics in Tokimeki Memorial 4 ([#18822])\n- Fix crash in UFC 2010 on Mali GPUs ([#18813])\n- Temporarily disable MSAA on Adreno GPUs due to crashing ([#18819])\n- Fixed some crashes and optimized the game metadata cache ([#18794], [#18775])\n- Additional crashfixes and similar ([#18777], [#18779], [#18823])\n- Fixed playback of frame dumps with Vulkan ([#18793])\n- Volume slider added for RetroAchievements sounds ([#18772])\n\nWhat's new in 1.17\n------------------\n- Rendering performance and fixes\n\t- Fix for very old rendering issue in Tokimeki Memorial 4 ([#18650]) (didn't quite work, see 1.17.1)\n\t- Performance improvement in Tactics Ogre by avoiding a readback ([#18599])\n\t- Cull small draws that are quick to check that they are offscreen ([#18446])\n\t- Assorted optimizations ([#18586], [#18573], [#18476], [#18413], [#18416], [#18219])\n\t- Fix HUD in Tiger Woods 06 ([#18554])\n\t- Adrenotools support added - you can now load custom Vulkan drivers on Adreno ([#18532], [#18548], [#18699])\n\t- Fix rendering with bad Z parameters, fixes homebrew Zig example ([#18535])\n\t- Fix Z problem in Hayate no Gotoku!! Nightmare Paradise [#18478]\n\t- Fix frozen pitch meters in MLB games ([#18484])\n\t- Enable MSAA on modern mobile devices (Vulkan-only) ([#18472])\n\t- Fix video flicker in Naruto: Ultimate Ninja Heroes 2 ([#18454])\n- UI\n\t- Track total time played per game ([#18442])\n\t- When opening the pause menu, there's now an option to keep the game running behind the menu.\n\t  This is enforced in multiplayer to avoid inadvertent desyncs ([#18517], [#18515])\n- ISO loading improvements\n\t- The CHD file format is now fully supported (use `chdman createdvd`!), including with Remote ISO and Retroachievements\n\t- Improvements to [remote ISO](https://www.ppsspp.org/docs/reference/disc-streaming/): optional tab on home screen, can now share whole folders ([#18627], [#18639], [#18640], [#18631], [#18632], [#18633],)\n- Controller and touchscreen fixes\n\t- More control bindings, organize into categories ([#18635], [#18589])\n\t- Fix inverse deadzone (low end) for joystick input\n\t- Fix analog deadzones for XInput controllers ([#18407])\n\t- Improved tilt control further ([#18533])\n\t- Mouse input supported on Android ([#18551], [#18473])\n\t- Customizable threshold for analog-trigger to button-press mapping, customizable delay for mouse-scroll key-up ([#18621], [#18585])\n\t- Make it work better to bind an analog stick to four buttons, useful for camera control in some games\n\t- Can now unpause with the key you bound to pause ([#18591])\n- Other fixes and updates\n\t- More work on the IR JITs ([#18234], [#18235], [#18228], [#18227], [#18226], many more)\n\t- Moving the memstick directory on Android is now faster and safer [#18744]\n\t- Workaround problems in Add Doko Demo Issho, Driver 76, Harukanaru Toki no Naka, Ace Combat by slowing down the emulated UMD drive to match reality better ([#18436], [#18445])\n\t- VR: Quest 3 rendering issues fixed ([#18677])\n\t- Various bugfixes in texture replacement ([#18638], [#18610], [#18519], [#18466], [#18747])\n\t- RetroAchievements: Rich presence, renamed Challenge Mode back to the recommended Hardcore Mode, various error handling improvements, configure per game ([#18468], [#18651], [#18488], [#18428], [#18425])\n\t- HLE: Slice large-and-slow memcpy/memset operations, can help with some stalls. ([#18560])\n\t- Other various minor fixes and optimizations ([#18558], [#18555], [#18538], [#18529], [#18450], [#18314], [#18233], [#18678], [#18749], [#18736], [#18704])\n\t- SoftGPU fixes ([#18362])\n\t- Fixed international fonts on Steam Deck ([#18732], [#18734])\n\t- GoExplore (GPS app) now starts up and allows navigation ([#18665], [#18666], [#18668], [#18669])\n\t- SDL: Improve input latency in Vulkan mode by running rendering on a separate thread ([#18268])\n\t- Assorted multiplayer fixes ([#18435])\n\t- Support for emulating the infrared port of the original PSP through sceSircs ([#18684])\n\n[comment]: # (LINK_LIST_BEGIN_HERE)\n[#18228]: https://github.com/hrydgard/ppsspp/issues/18228 \"unittest: Add jit compare for jit IR\"\n[#18235]: https://github.com/hrydgard/ppsspp/issues/18235 \"irjit: Handle VDet\"\n[#18650]: https://github.com/hrydgard/ppsspp/issues/18650 \"Allow merging framebuffers vertically like the old Juiced 2 fix.\"\n[#18599]: https://github.com/hrydgard/ppsspp/issues/18599 \"Tactics Ogre: Remove a redundant GPU readback operation\"\n[#18446]: https://github.com/hrydgard/ppsspp/issues/18446 \"Minor bbox optimizations, assorted bugfixes\"\n[#18586]: https://github.com/hrydgard/ppsspp/issues/18586 \"DrawEngine: Avoid decoding indices when we don't need them.\"\n[#18573]: https://github.com/hrydgard/ppsspp/issues/18573 \"Defer frame waits if possible\"\n[#18476]: https://github.com/hrydgard/ppsspp/issues/18476 \"VertexDecoder: Minor optimization for x86/64 CPUs not supporting SSE4.\"\n[#18413]: https://github.com/hrydgard/ppsspp/issues/18413 \"Cache and hash data for DrawPixels\"\n[#18416]: https://github.com/hrydgard/ppsspp/issues/18416 \"Optimize DrawPixels for 16-bit RGB565 copies\"\n[#18219]: https://github.com/hrydgard/ppsspp/issues/18219 \"Make GetIndexBounds friendlier to autovectorization. Works on x86 at least.\"\n[#18554]: https://github.com/hrydgard/ppsspp/issues/18554 \"DXT5: Fix decoding of alpha channel for textures with a non-mod-4 width.\"\n[#18532]: https://github.com/hrydgard/ppsspp/issues/18532 \"Android: Implement custom driver loading for ARM64 Android devices\"\n[#18548]: https://github.com/hrydgard/ppsspp/issues/18548 \"Adrenotools followup\"\n[#18699]: https://github.com/hrydgard/ppsspp/issues/18699 \"Adrenotools driver installation: Fix bad error checks\"\n[#18535]: https://github.com/hrydgard/ppsspp/issues/18535 \"Eliminate inf values resulting from depth range computation.\"\n[#18478]: https://github.com/hrydgard/ppsspp/issues/18478 \"Handle block transfers from RAM to depth buffers.\"\n[#18484]: https://github.com/hrydgard/ppsspp/issues/18484 \"Fix frozen pitch meters in MLB series games - we were not hashing enough texture data\"\n[#18472]: https://github.com/hrydgard/ppsspp/issues/18472 \"Vulkan: Allow MSAA on modern-ish mobile devices, but add a little warning sign.\"\n[#18454]: https://github.com/hrydgard/ppsspp/issues/18454 \"Naruto Ultimate Ninja Heroes 2 video flicker fix: Take 3\"\n[#18442]: https://github.com/hrydgard/ppsspp/issues/18442 \"Track time-played per game\"\n[#18517]: https://github.com/hrydgard/ppsspp/issues/18517 \"Run-behind-pause: Fix some edge cases with the transparent background setting\"\n[#18515]: https://github.com/hrydgard/ppsspp/issues/18515 \"Run behind pause screen\"\n[#18627]: https://github.com/hrydgard/ppsspp/issues/18627 \"Remote game streaming: Add an option to put a tab on the main screen\"\n[#18639]: https://github.com/hrydgard/ppsspp/issues/18639 \"Various changes to the webserver to handle serving HTTP subfolders\"\n[#18640]: https://github.com/hrydgard/ppsspp/issues/18640 \"Various fixes to PathBrowser etc to handle browsing HTTP subfolders\"\n[#18631]: https://github.com/hrydgard/ppsspp/issues/18631 \"Remote ISO: Prepare to allow sharing folders directly\"\n[#18632]: https://github.com/hrydgard/ppsspp/issues/18632 \"Remote ISO: Allow sharing a full folder instead of Recent\"\n[#18633]: https://github.com/hrydgard/ppsspp/issues/18633 \"Remote ISO: Add working support for streaming CHD files over the network\"\n[#18635]: https://github.com/hrydgard/ppsspp/issues/18635 \"Add bindings for toggling mouse control and touch screen controls\"\n[#18589]: https://github.com/hrydgard/ppsspp/issues/18589 \"Control Mappings: Organize bindings into categories\"\n[#18407]: https://github.com/hrydgard/ppsspp/issues/18407 \"skip xinput trigger threshold check\"\n[#18533]: https://github.com/hrydgard/ppsspp/issues/18533 \"Tilt: Bugfix, make the deadzone circular, in addition to the inverse (low end radius).\"\n[#18551]: https://github.com/hrydgard/ppsspp/issues/18551 \"Mouse refactor, restore smoothing\"\n[#18473]: https://github.com/hrydgard/ppsspp/issues/18473 \"Add mouse wheel scrolling support for Android to the UI\"\n[#18621]: https://github.com/hrydgard/ppsspp/issues/18621 \"Add \\\"Analog trigger threshold\\\" setting, for conversion of analog trigger inputs to digital button inputs.\"\n[#18585]: https://github.com/hrydgard/ppsspp/issues/18585 \"Add setting to configure simulated key-up delay for mouse wheel events\"\n[#18591]: https://github.com/hrydgard/ppsspp/issues/18591 \"Allow unpausing with keys bound to pause\"\n[#18234]: https://github.com/hrydgard/ppsspp/issues/18234 \"x86jit: Perform vector transfers instead of flushing to memory\"\n[#18227]: https://github.com/hrydgard/ppsspp/issues/18227 \"x86jit: Flush floats together if possible\"\n[#18226]: https://github.com/hrydgard/ppsspp/issues/18226 \"x86jit: Improve memory breakpoint speed\"\n[#18744]: https://github.com/hrydgard/ppsspp/issues/18744 \"Memstick folder move on Android: Speedup and safety\"\n[#18436]: https://github.com/hrydgard/ppsspp/issues/18436 \"Add Doko Demo Issho ,Driver 76, \tHarukanaru Toki no Naka de 3 with Izayoiki Aizouban into ForceUMDReadSpeed\"\n[#18445]: https://github.com/hrydgard/ppsspp/issues/18445 \"Make 3 games into compat\"\n[#18677]: https://github.com/hrydgard/ppsspp/issues/18677 \"Update README.md for 1.17\"\n[#18638]: https://github.com/hrydgard/ppsspp/issues/18638 \"Fix two minor tex replacement issues\"\n[#18610]: https://github.com/hrydgard/ppsspp/issues/18610 \"Texture replacer: Fix for texture directories missing an ini file\"\n[#18519]: https://github.com/hrydgard/ppsspp/issues/18519 \"Enable texture replacement filtering overrides even if file is missing\"\n[#18466]: https://github.com/hrydgard/ppsspp/issues/18466 \"Texture replacement: Prioritize ini file [hashes] section over just files in the \\\"root\\\" folder.\"\n[#18747]: https://github.com/hrydgard/ppsspp/issues/18747 \"Texture saving fixes, icon load fix\"\n[#18468]: https://github.com/hrydgard/ppsspp/issues/18468 \"RetroAchievements: Show rich presence message on pause screen, restriction tweaks\"\n[#18651]: https://github.com/hrydgard/ppsspp/issues/18651 \"HTTPS through naett: Get the body of the response even if code isn't 200\"\n[#18488]: https://github.com/hrydgard/ppsspp/issues/18488 \"Make some achievement settings (including Hardcore mode) configurable per-game.\"\n[#18428]: https://github.com/hrydgard/ppsspp/issues/18428 \"Forgot some cases where I need to enable save (but not load) state in challenge mode, if the option is set\"\n[#18425]: https://github.com/hrydgard/ppsspp/issues/18425 \"RetroAchievements: Add option to allow saving, but not loading, in challenge / hardcore mode.\"\n[#18560]: https://github.com/hrydgard/ppsspp/issues/18560 \"HLE: Slice the very slow memset/memcpy variants\"\n[#18558]: https://github.com/hrydgard/ppsspp/issues/18558 \"Enforce a max size for save state screenshot regardless of resolution mode\"\n[#18555]: https://github.com/hrydgard/ppsspp/issues/18555 \"Vulkan: UI texture loading error handling fixes\"\n[#18538]: https://github.com/hrydgard/ppsspp/issues/18538 \"Async texture load on Pause screen\"\n[#18529]: https://github.com/hrydgard/ppsspp/issues/18529 \"Android: Add option to ask system for 60hz output\"\n[#18450]: https://github.com/hrydgard/ppsspp/issues/18450 \"Enable some NEON optimizations on ARM32 that we only had on ARM64 before\"\n[#18314]: https://github.com/hrydgard/ppsspp/issues/18314 \"Interpreter: Optimize ReadVector/WriteVector\"\n[#18233]: https://github.com/hrydgard/ppsspp/issues/18233 \"Use a thread for meminfo and defer tag lookup for copies\"\n[#18678]: https://github.com/hrydgard/ppsspp/issues/18678 \"Vulkan: Fix trying to compare uninitialized parts of packed descriptors\"\n[#18749]: https://github.com/hrydgard/ppsspp/issues/18749 \"HTTPClient: Fix socket leak on connect failure\"\n[#18736]: https://github.com/hrydgard/ppsspp/issues/18736 \"CwCheats: Retry looking in g_gameInfoCache until the data is there.\"\n[#18704]: https://github.com/hrydgard/ppsspp/issues/18704 \"Revert back to the old way of fitting into 16:9: Crop one line at the top and bottom\"\n[#18362]: https://github.com/hrydgard/ppsspp/issues/18362 \"softgpu: Point depthbuf at the first VRAM mirror\"\n[#18732]: https://github.com/hrydgard/ppsspp/issues/18732 \"SDL fonts: Add \\\"Droid Sans Fallback\\\" to the list of fallback fonts.\"\n[#18734]: https://github.com/hrydgard/ppsspp/issues/18734 \"SDL fallback fonts: Add more font names\"\n[#18665]: https://github.com/hrydgard/ppsspp/issues/18665 \"Fix Go!Explore🗺️🧭 issue with GetDirListing(/); closes #15932\"\n[#18666]: https://github.com/hrydgard/ppsspp/issues/18666 \"GPS: Improve emulation to enable Go!Explore navigation\"\n[#18668]: https://github.com/hrydgard/ppsspp/issues/18668 \"GPS: Set valid values and request updates on savestate loading\"\n[#18669]: https://github.com/hrydgard/ppsspp/issues/18669 \"GPS: updates\"\n[#18268]: https://github.com/hrydgard/ppsspp/issues/18268 \"SDL: Use an \\\"EmuThread\\\" in Vulkan mode\"\n[#18435]: https://github.com/hrydgard/ppsspp/issues/18435 \"An attempt to fix Tekken 6 stuck issue when exiting Lob\"\n[#18684]: https://github.com/hrydgard/ppsspp/issues/18684 \"sceSircs/Infrared support on Android\"\n[#18781]: https://github.com/hrydgard/ppsspp/issues/18781 \"Disable 16-bit textures on PowerVR with Vulkan\"\n[#18794]: https://github.com/hrydgard/ppsspp/issues/18794 \"More gameinfocache fixes\"\n[#18775]: https://github.com/hrydgard/ppsspp/issues/18775 \"GameInfoCache: Keep properly track of what's already loaded, lots of cleanup\"\n[#18793]: https://github.com/hrydgard/ppsspp/issues/18793 \"Fix GE framedump playback on Vulkan\"\n[#18786]: https://github.com/hrydgard/ppsspp/issues/18786 \"Release all keys on pause.\"\n[#18785]: https://github.com/hrydgard/ppsspp/issues/18785 \"Fix issue with the collapsible sections in control mapping collapsing on every change, plus, combo fix\"\n[#18777]: https://github.com/hrydgard/ppsspp/issues/18777 \"Expand primitives: Check the vertex count too.\"\n[#18779]: https://github.com/hrydgard/ppsspp/issues/18779 \"More fixes\"\n[#18772]: https://github.com/hrydgard/ppsspp/issues/18772 \"Add volume slider for RetroAchievements sound effects\"\n[#18824]: https://github.com/hrydgard/ppsspp/issues/18824 \"Update libchdr to the latest, which supports zstd blocks\"\n[#18803]: https://github.com/hrydgard/ppsspp/issues/18803 \"Warn the user about bad CHDs\"\n[#18821]: https://github.com/hrydgard/ppsspp/issues/18821 \"Hacky compat workaround for Resistance's ad-hoc mode\"\n[#18822]: https://github.com/hrydgard/ppsspp/issues/18822 \"Avoid vertically merging the two main framebuffers, even if FramebufferAllowLargeVerticalOffset is on.\"\n[#18813]: https://github.com/hrydgard/ppsspp/issues/18813 \"Mali: Turn off any depth writes in the shader if depth test == NEVER\"\n[#18819]: https://github.com/hrydgard/ppsspp/issues/18819 \"Temporarily disable MSAA on Adreno GPUs\"\n[#18823]: https://github.com/hrydgard/ppsspp/issues/18823 \"Memory exception handler: Don't disassemble if ignoring the exception\"\n[#19287]: https://github.com/hrydgard/ppsspp/issues/19287 \"iOS: Enable \\\"double-swipe\\\" to switch apps\"\n[#19281]: https://github.com/hrydgard/ppsspp/issues/19281 \"iOS: Disable the swipe-back gesture in-game, to maximize touch responsiveness\"\n[#19269]: https://github.com/hrydgard/ppsspp/issues/19269 \"Set the games category in plists for Mac and iOS.\"\n[#19270]: https://github.com/hrydgard/ppsspp/issues/19270 \"Set GCSupportsGameMode in info.plist files for iOS and Mac\"\n[#19257]: https://github.com/hrydgard/ppsspp/issues/19257 \"iOS: Implement basic physical keyboard support\"\n[#19254]: https://github.com/hrydgard/ppsspp/issues/19254 \"iOS: Fix \\\"Home\\\" button on controllers (like the PS logo button on a PS4 controller)\"\n[#19244]: https://github.com/hrydgard/ppsspp/issues/19244 \"JIT-less vertex decoder: SSE/NEON-optimize ComputeSkinMatrix\"\n[#19227]: https://github.com/hrydgard/ppsspp/issues/19227 \"More text fixes on iOS/Mac\"\n[#19224]: https://github.com/hrydgard/ppsspp/issues/19224 \"More iOS fixes\"\n[#19213]: https://github.com/hrydgard/ppsspp/issues/19213 \"iOS: Prevent the Recents list from disappearing a lot\"\n[#19200]: https://github.com/hrydgard/ppsspp/issues/19200 \"iOS: Add audio session mode controls\"\n[#19187]: https://github.com/hrydgard/ppsspp/issues/19187 \"iOS: Fix issue with keyboard popping up after file picker.\"\n[#19184]: https://github.com/hrydgard/ppsspp/issues/19184 \"Native text drawing on macOS/iOS\"\n[#19161]: https://github.com/hrydgard/ppsspp/issues/19161 \"Add basic soft-keyboard support on iOS\"\n[#19118]: https://github.com/hrydgard/ppsspp/issues/19118 \"macOS: Update VulkanLoader for MoltenVK 1.2.8-style framework finding\"\n[#19299]: https://github.com/hrydgard/ppsspp/issues/19299 \"IR Interpreter: Two small optimizations\"\n[#19280]: https://github.com/hrydgard/ppsspp/issues/19280 \"Implement FPU rounding mode support in the IR interpreter\"\n[#19268]: https://github.com/hrydgard/ppsspp/issues/19268 \"IRJit: If we're in \\\"JIT using IR\\\" mode, don't accidentally optimize for the interpreter.\"\n[#19265]: https://github.com/hrydgard/ppsspp/issues/19265 \"More minor IR optimizations\"\n[#19262]: https://github.com/hrydgard/ppsspp/issues/19262 \"IR: Add some interpreter-only IR instructions for faster interpretation\"\n[#19260]: https://github.com/hrydgard/ppsspp/issues/19260 \"More IR interpreter profiler work\"\n[#19255]: https://github.com/hrydgard/ppsspp/issues/19255 \"Add built-in IR Interpreter profiler\"\n[#19252]: https://github.com/hrydgard/ppsspp/issues/19252 \"Preparations for adding a performance profiler for the IR Interpreter\"\n[#19240]: https://github.com/hrydgard/ppsspp/issues/19240 \"Store IR instructions in a bump-allocated vector instead of loose allocations\"\n[#19233]: https://github.com/hrydgard/ppsspp/issues/19233 \"Minor IR Interpreter optimizations, other bugfixes\"\n[#19231]: https://github.com/hrydgard/ppsspp/issues/19231 \"IR Interpreter: Some minor optimizations\"\n[#19193]: https://github.com/hrydgard/ppsspp/issues/19193 \"IRInterpreter: Enable some optimizations that accidentally were only enabled on non-ARM64.\"\n[#19189]: https://github.com/hrydgard/ppsspp/issues/19189 \"IRInterpreter: Fix issue where we could accidentally optimize out CallReplacement ops.\"\n[#19173]: https://github.com/hrydgard/ppsspp/issues/19173 \"IRInterpreter compiler: Reject all vec2ops where the prefix is unknown while compiling\"\n[#19128]: https://github.com/hrydgard/ppsspp/issues/19128 \"More IR interpreter optimizations\"\n[#19243]: https://github.com/hrydgard/ppsspp/issues/19243 \"iOS: Implement accelerometer support\"\n[#19241]: https://github.com/hrydgard/ppsspp/issues/19241 \"Optimize color conversions in non-JIT vertex decoder\"\n[#19131]: https://github.com/hrydgard/ppsspp/issues/19131 \"CPU at 100% in menu in Vulkan on Linux\"\n[#19401]: https://github.com/hrydgard/ppsspp/issues/19401 \"Android: Add new build config \\\"legacyOptimized\\\", which targets an older Android SDK version\"\n[#19139]: https://github.com/hrydgard/ppsspp/issues/19139 \"Android: Upgrade SDK and target versions, implement shortcut icons\"\n[#19142]: https://github.com/hrydgard/ppsspp/issues/19142 \"Android: Fix issue where shortcuts wouldn't override the currently running game.\"\n[#19138]: https://github.com/hrydgard/ppsspp/issues/19138 \"Windows: When using \\\"Create shortcut\\\", use the game's icon instead of PPSSPP's\"\n[#18931]: https://github.com/hrydgard/ppsspp/issues/18931 \"CHD: Fix unnecessary reloads of \\\"hunks\\\" during large reads\"\n[#18950]: https://github.com/hrydgard/ppsspp/issues/18950 \"Fix soft-lock when loading non-existing files, fix wrong timer in MIPSDebugInterface\"\n[#19561]: https://github.com/hrydgard/ppsspp/issues/19561 \"Simplify reporting code (removing two threads), other minor fixes\"\n[#19556]: https://github.com/hrydgard/ppsspp/issues/19556 \"Another bunch of pre-release fixes\"\n[#19531]: https://github.com/hrydgard/ppsspp/issues/19531 \"Improve performance of UI text rendering\"\n[#19507]: https://github.com/hrydgard/ppsspp/issues/19507 \"Prevent soft-locking the emulator on bad PBP files\"\n[#19523]: https://github.com/hrydgard/ppsspp/issues/19523 \"Even more fixes\"\n[#19529]: https://github.com/hrydgard/ppsspp/issues/19529 \"More misc minor fixes\"\n[#19482]: https://github.com/hrydgard/ppsspp/issues/19482 \"Remove double ampersands from PPGe-drawn text (in-game UI)\"\n[#19473]: https://github.com/hrydgard/ppsspp/issues/19473 \"Try to make Frame Advance a bit more reliable\"\n[#19438]: https://github.com/hrydgard/ppsspp/issues/19438 \"Android memstick folder move: Minor logging and robustness improvements\"\n[#19165]: https://github.com/hrydgard/ppsspp/issues/19165 \"UI crash fix in control mapping screen\"\n[#19530]: https://github.com/hrydgard/ppsspp/issues/19530 \"Even more misc fixes: Beaterator, sharp bilinear, remove back button\"\n[#19505]: https://github.com/hrydgard/ppsspp/issues/19505 \"iOS: Chat input fix, Mac text input fix\"\n[#19492]: https://github.com/hrydgard/ppsspp/issues/19492 \"RetroAchievements login: Implement password masking\"\n[#19126]: https://github.com/hrydgard/ppsspp/issues/19126 \"Allow taking screenshots in the app menu\"\n[#19020]: https://github.com/hrydgard/ppsspp/issues/19020 \"Clickable notifications\"\n[#19504]: https://github.com/hrydgard/ppsspp/issues/19504 \"Add 3 new themes\"\n[#19471]: https://github.com/hrydgard/ppsspp/issues/19471 \"Add button to show the game-info screen from the in-game pause screen\"\n[#19293]: https://github.com/hrydgard/ppsspp/issues/19293 \"Rework remote ISO UI a bit\"\n[#19443]: https://github.com/hrydgard/ppsspp/issues/19443 \"More zip file install fixes\"\n[#19436]: https://github.com/hrydgard/ppsspp/issues/19436 \"Implement save data install from ZIP\"\n[#19472]: https://github.com/hrydgard/ppsspp/issues/19472 \"Add Reset as a mappable control\"\n[#19484]: https://github.com/hrydgard/ppsspp/issues/19484 \"Add mappable devkit-only L2/L3/R2/R3 controls\"\n[#19304]: https://github.com/hrydgard/ppsspp/issues/19304 \"Allow \\\"Alt\\\" to act like a normal keyboard input, if it's been mapped to something\"\n[#19425]: https://github.com/hrydgard/ppsspp/issues/19425 \"Homebrew Store: Minor update adding license and website links\"\n[#19426]: https://github.com/hrydgard/ppsspp/issues/19426 \"Additional store UI update\"\n[#19096]: https://github.com/hrydgard/ppsspp/issues/19096 \"RetroAchievements: Add support for hashing homebrew\"\n[#19002]: https://github.com/hrydgard/ppsspp/issues/19002 \"Add initial RAIntegration support through rc_client\"\n[#19059]: https://github.com/hrydgard/ppsspp/issues/19059 \"Fix the AxisSwap feature - had a double mutex lock, oops.\"\n[#19563]: https://github.com/hrydgard/ppsspp/issues/19563 \"Vulkan: Fix potential crash from binding old CLUT textures\"\n[#19546]: https://github.com/hrydgard/ppsspp/issues/19546 \"More assorted fixes\"\n[#19491]: https://github.com/hrydgard/ppsspp/issues/19491 \"DrawEngineCommon: Enforce the limit on vertex decoding\"\n[#19358]: https://github.com/hrydgard/ppsspp/issues/19358 \"Two crashfixes: Achievements menu, Outrun\"\n[#19347]: https://github.com/hrydgard/ppsspp/issues/19347 \"sceFont and savestate fixes\"\n[#19198]: https://github.com/hrydgard/ppsspp/issues/19198 \"Prevent a buffer overflow at the end of Atrac tracks.\"\n[#19009]: https://github.com/hrydgard/ppsspp/issues/19009 \"More Vulkan barrier code cleanup work\"\n[#19017]: https://github.com/hrydgard/ppsspp/issues/19017 \"Vulkan: More memory barrier simplification and fixes\"\n[#19018]: https://github.com/hrydgard/ppsspp/issues/19018 \"More Vulkan barrier fixes\"\n[#19560]: https://github.com/hrydgard/ppsspp/issues/19560 \"Increase the hardcoded free space reported\"\n[#19459]: https://github.com/hrydgard/ppsspp/issues/19459 \"Fix PSP_STDIN and PSP_MIN_FD value\"\n[#19340]: https://github.com/hrydgard/ppsspp/issues/19340 \"sceIoGetStat: Fix retrieving timestamps from directories\"\n[#19450]: https://github.com/hrydgard/ppsspp/issues/19450 \"Port over LunaMoo's compat flag for The Warriors video playback\"\n[#18806]: https://github.com/hrydgard/ppsspp/issues/18806 \"UFC Undisputed 2010: Crash on device lost on some ARM GPUs\"\n[#19033]: https://github.com/hrydgard/ppsspp/issues/19033 \"Break out the Atrac3/Atrac3+ decoders from FFMPEG to a separate library\"\n[#19053]: https://github.com/hrydgard/ppsspp/issues/19053 \"Remove ffmpeg use from the sceAtrac HLE module\"\n[#19097]: https://github.com/hrydgard/ppsspp/issues/19097 \"implement sysclib_sprintf\"\n[#19490]: https://github.com/hrydgard/ppsspp/issues/19490 \"Fix Z-buffer issue in Socom Fireteam Bravo character customizer, plus a couple of minor things\"\n[#19364]: https://github.com/hrydgard/ppsspp/issues/19364 \"Slightly nudge down the multiplier used for float->u8 conversion in fragment shaders\"\n[#19489]: https://github.com/hrydgard/ppsspp/issues/19489 \"Hardware transform: Clamp the specular coefficient to 0.0 before calling pow()\"\n[#19439]: https://github.com/hrydgard/ppsspp/issues/19439 \"Fix the MGS2 Acid renderpass merge optimization\"\n[#19122]: https://github.com/hrydgard/ppsspp/issues/19122 \"More minor fixes\"\n[#19334]: https://github.com/hrydgard/ppsspp/issues/19334 \"Improved provoking vertex fix\"\n[#19457]: https://github.com/hrydgard/ppsspp/issues/19457 \"Tracing support for the IR Interpreter\"\n[#19361]: https://github.com/hrydgard/ppsspp/issues/19361 \"OpenXR - Anti-flickering rendering flow added\"\n[#19420]: https://github.com/hrydgard/ppsspp/issues/19420 \"OpenXR - Ensure we have a valid poses after app event\"\n[#19416]: https://github.com/hrydgard/ppsspp/issues/19416 \"OpenXR - Hotfix for v69\"\n[#19389]: https://github.com/hrydgard/ppsspp/issues/19389 \"OpenXR - VR camera on any platform\"\n[#19390]: https://github.com/hrydgard/ppsspp/issues/19390 \"OpenXR - Removal of \\\"VR/Experts only\\\" section\"\n[#19092]: https://github.com/hrydgard/ppsspp/issues/19092 \"OpenXR - Support for Meta Horizon OS\"\n[#18924]: https://github.com/hrydgard/ppsspp/issues/18924 \"Fix a bunch of cases where we forgot to check for CHD files\"\n[#19580]: https://github.com/hrydgard/ppsspp/issues/19580 \"GCC/llvm: Enable a lot more warnings, error on missing return value\"\n[#19582]: https://github.com/hrydgard/ppsspp/issues/19582 \"Fix minor theme issue in Store\""
        },
        {
          "name": "SDL",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "UI",
          "type": "tree",
          "content": null
        },
        {
          "name": "UWP",
          "type": "tree",
          "content": null
        },
        {
          "name": "Windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.251953125,
          "content": "version: '{branch}-1.0.{build}'\npull_requests:\n  do_not_increment_build_number: true\nconfiguration:\n- Release\n- Debug\ninstall:\n- cmd: git submodule update --init --recursive\nbuild:\n  project: Windows/PPSSPP.sln\n  parallel: true\n  verbosity: normal\ntest: off\n"
        },
        {
          "name": "asciifont_atlasscript.txt",
          "type": "blob",
          "size": 0.056640625,
          "content": "2048\nfont UBUNTU24 assets/Roboto-Condensed.ttf UWER 34 -2\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "b-appstore.sh",
          "type": "blob",
          "size": 1.25390625,
          "content": "# Build script for iOS app store\n\necho \"PPSSPP App Store XCode generator script\"\n\n# Set the development team ID as a DEVTEAM env variable.\n\nif [[ -z \"${DEVTEAM}\" ]]; then\n  echo \"DEVTEAM not in environment, exiting\"\n  exit 1\nfi\n\nif [[ -z \"${GOLD}\" ]]; then\n  echo \"GOLD is not set (should be YES or NO), exiting\"\n  exit 1\nfi\n\nFOLDER_NAME=\"build-ios\"\n\nif [[ \"$GOLD\" = \"YES\" ]]; then\n  echo \"GOLD is set to YES, setting folder to build-ios-gold\"\n  FOLDER_NAME=\"build-ios-gold\"\nelse\n  echo \"Non-GOLD build.\"\nfi\n\necho \"Clearing and re-creating output directory\"\nrm -rf $FOLDER_NAME\nmkdir $FOLDER_NAME\n\npushd $FOLDER_NAME\n\nBUILD_TYPE=Release\n\ncmake .. -DIOS_APP_STORE=ON -DGOLD=$GOLD -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/ios.cmake -DDEVELOPMENT_TEAM_ID=${DEVTEAM} -DIOS_PLATFORM=OS -GXcode\n# TODO: Get a MoltenVK somewhere.\n#cp ../MoltenVK/iOS/Frameworks/libMoltenVK.dylib PPSSPP.app/Frameworks\npopd\n\n# Very gross hack\n# Avoid XCode race condition (???) by pre-generating git-version.cpp\ncmake -DSOURCE_DIR=. -DOUTPUT_DIR=$FOLDER_NAME -P git-version.cmake\n\necho\necho \"*** Done. Now run the following command to open in XCode, then run or archive:\"\necho \"  open $FOLDER_NAME/PPSSPP.xcodeproj\"\n\n# To open the xcode project:\n# open build-ios/PPSSPP.xcodeproj"
        },
        {
          "name": "b.sh",
          "type": "blob",
          "size": 3.228515625,
          "content": "#!/bin/bash\nCMAKE=1\n\n# Check arguments\nwhile test $# -gt 0\ndo\n\tcase \"$1\" in\n\t\t--qt) echo \"Qt enabled\"\n\t\t\tQT=1\n\t\t\tCMAKE_ARGS=\"-DUSING_QT_UI=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--qtbrew) echo \"Qt enabled (homebrew)\"\n\t\t\tQT=1\n\t\t\tCMAKE_ARGS=\"-DUSING_QT_UI=ON -DCMAKE_PREFIX_PATH=$(brew --prefix qt5) ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--ios) CMAKE_ARGS=\"-DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/ios.cmake ${CMAKE_ARGS}\"\n\t\t\tTARGET_OS=iOS\n\t\t\t;;\n\t\t--ios-xcode) CMAKE_ARGS=\"-DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/ios.cmake -DIOS_PLATFORM=OS -GXcode ${CMAKE_ARGS}\"\n\t\t\tTARGET_OS=iOS-xcode\n\t\t\t;;\n\t\t--fat) CMAKE_ARGS=\"-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64 ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--no-png) CMAKE_ARGS=\"-DUSE_SYSTEM_LIBPNG=OFF ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--no-sdl2) CMAKE_ARGS=\"-DUSE_SYSTEM_LIBSDL2=OFF ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--rpi-armv6)\n\t\t\tCMAKE_ARGS=\"-DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/raspberry.armv6.cmake ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--rpi)\n\t\t\tCMAKE_ARGS=\"-DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/raspberry.armv7.cmake ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--rpi64)\n\t\t\tCMAKE_ARGS=\"-DCMAKE_TOOLCHAIN_FILE=cmake/Toolchains/raspberry.armv8.cmake ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--android) CMAKE_ARGS=\"-DCMAKE_TOOLCHAIN_FILE=android/android.toolchain.cmake ${CMAKE_ARGS}\"\n\t\t\tTARGET_OS=Android\n\t\t\tPACKAGE=1\n\t\t\t;;\n\t\t--simulator) echo \"Simulator mode enabled\"\n\t\t\tCMAKE_ARGS=\"-DSIMULATOR=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--release)\n\t\t\tCMAKE_ARGS=\"-DCMAKE_BUILD_TYPE=Release ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--debug)\n\t\t\tCMAKE_ARGS=\"-DCMAKE_BUILD_TYPE=Debug ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--reldebug)\n\t\t\tCMAKE_ARGS=\"-DCMAKE_BUILD_TYPE=RelWithDebInfo ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--headless) echo \"Headless mode enabled\"\n\t\t\tCMAKE_ARGS=\"-DHEADLESS=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--libretro) echo \"Build Libretro core\"\n\t\t\tCMAKE_ARGS=\"-DLIBRETRO=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--libretro_android) echo \"Build Libretro Android core\"\n\t\t        CMAKE_ARGS=\"-DLIBRETRO=ON -DCMAKE_TOOLCHAIN_FILE=${NDK}/build/cmake/android.toolchain.cmake -DANDROID_ABI=${APP_ABI} ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--unittest) echo \"Build unittest\"\n\t\t\tCMAKE_ARGS=\"-DUNITTEST=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--no-package) echo \"Packaging disabled\"\n\t\t\tPACKAGE=0\n\t\t\t;;\n\t\t--clang) echo \"Clang enabled\"\n\t\t\texport CC=/usr/bin/clang\n\t\t\texport CXX=/usr/bin/clang++\n\t\t\t;;\n\t\t--sanitize) echo \"Enabling address-sanitizer if available\"\n\t\t\tCMAKE_ARGS=\"-DUSE_ASAN=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--sanitizeub) echo \"Enabling ub-sanitizer if available\"\n\t\t\tCMAKE_ARGS=\"-DUSE_UBSAN=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--gold) echo \"Gold build enabled\"\n\t\t\tCMAKE_ARGS=\"-DGOLD=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t--alderlake) echo \"Alderlake opt\"\n\t\t\tCMAKE_ARGS=\"-DCMAKE_C_FLAGS=\\\"-march=alderlake\\\" -DCMAKE_CPP_FLAGS=\\\"-march=alderlake\\\"\"\n\t\t\t;;\n\t\t--no_mmap) echo \"Disable mmap\"\n\t\t\tCMAKE_ARGS=\"-DUSE_NO_MMAP=ON ${CMAKE_ARGS}\"\n\t\t\t;;\n\t\t*) MAKE_OPT=\"$1 ${MAKE_OPT}\"\n\t\t\t;;\n\tesac\n\tshift\ndone\n\nif [ ! -z \"$TARGET_OS\" ]; then\n\techo \"Building for $TARGET_OS\"\n\tBUILD_DIR=\"$(tr [A-Z] [a-z] <<< build-\"$TARGET_OS\")\"\nelse\n\techo \"Building for native host.\"\n\tBUILD_DIR=\"build\"\nfi\n\nCORES_COUNT=4\nif [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n        CORES_COUNT=\"$(nproc)\"\nelif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n        CORES_COUNT=\"$(sysctl -n hw.physicalcpu)\"\nfi\n\n# Strict errors. Any non-zero return exits this script\nset -e\n\nmkdir -p ${BUILD_DIR}\npushd ${BUILD_DIR}\n\ncmake $CMAKE_ARGS ..\nmake -j$CORES_COUNT $MAKE_OPT\npopd\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.3369140625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:8.8.0'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n"
        },
        {
          "name": "build_ppgeatlas.sh",
          "type": "blob",
          "size": 0.19921875,
          "content": "./ext/native/tools/build/atlastool ppge_atlasscript.txt ppge && rm ppge_atlas.cpp ppge_atlas.h && cp ppge_atlas.zim assets && cp ppge_atlas.meta assets && mv ppge_atlas.zim ppge_atlas.meta android/assets\n"
        },
        {
          "name": "buildatlas.sh",
          "type": "blob",
          "size": 0.6318359375,
          "content": "# Note that we do not copy the big font atlas to Android assets. No longer needed!\n\n./ext/native/tools/build/atlastool ui_atlasscript.txt ui 8888 && cp ui_atlas.zim ui_atlas.meta assets && rm ui_atlas.cpp ui_atlas.h\n#./ext/native/tools/build/atlastool font_atlasscript.txt font 8888 && cp font_atlas.zim font_atlas.meta assets && rm font_atlas.cpp font_atlas.h\n#./ext/native/tools/build/atlastool asciifont_atlasscript.txt asciifont 8888 && cp asciifont_atlas.zim asciifont_atlas.meta assets && rm asciifont_atlas.cpp asciifont_atlas.h\n\nrm ui_atlas.zim ui_atlas.meta\n#rm font_atlas.zim font_atlas.meta\n#rm asciifont_atlas.zim asciifont_atlas.meta\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "copyrelease.sh",
          "type": "blob",
          "size": 0.2431640625,
          "content": "TARGETDIR=$1\nVERSION=$2\n\nTARGETPATH=$1/$2\n\necho \"Copying to $TARGETPATH\"\n\nmkdir -p $TARGETPATH\ncp PPSSPPWindows.exe $TARGETPATH/\ncp PPSSPPWindows64.exe $TARGETPATH/\ncp -r assets $TARGETPATH/\ncp README.md $TARGETPATH/\nrm $TARGETPATH/assets/lang/.git\n"
        },
        {
          "name": "dx9sdk",
          "type": "commit",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "ffmpeg",
          "type": "commit",
          "content": null
        },
        {
          "name": "font_atlasscript.txt",
          "type": "blob",
          "size": 0.1181640625,
          "content": "2048\nfont UBUNTU24 assets/Roboto-Condensed.ttf UWER 34 -2\nfont UBUNTU24 C:/Windows/Fonts/ARIALUNI.ttf UWEhkcRGHKVTe 30 0\n"
        },
        {
          "name": "git-version.cmake",
          "type": "blob",
          "size": 1.3427734375,
          "content": "set(GIT_VERSION_FILE \"${OUTPUT_DIR}/git-version.cpp\")\nset(GIT_VERSION \"unknown\")\nset(GIT_VERSION_UPDATE \"1\")\n\nfind_package(Git)\nif(GIT_FOUND AND EXISTS \"${SOURCE_DIR}/.git/\")\n\texecute_process(COMMAND ${GIT_EXECUTABLE} describe --always\n\t\tWORKING_DIRECTORY ${SOURCE_DIR}\n\t\tRESULT_VARIABLE exit_code\n\t\tOUTPUT_VARIABLE GIT_VERSION)\n\tif(NOT ${exit_code} EQUAL 0)\n\t\tmessage(WARNING \"git describe failed, unable to include version.\")\n\tendif()\n\tstring(STRIP ${GIT_VERSION} GIT_VERSION)\nelse()\n\tmessage(WARNING \"git not found, unable to include version.\")\nendif()\n\nif(EXISTS ${GIT_VERSION_FILE})\n\t# Don't update if marked not to update.\n\tfile(STRINGS ${GIT_VERSION_FILE} match\n\t\tREGEX \"PPSSPP_GIT_VERSION_NO_UPDATE 1\")\n\tif(NOT ${match} EQUAL \"\")\n\t\tset(GIT_VERSION_UPDATE \"0\")\n\tendif()\n\n\t# Let's also skip if it's the same.\n\tstring(REPLACE \".\" \"\\\\.\" GIT_VERSION_ESCAPED ${GIT_VERSION})\n\tfile(STRINGS ${GIT_VERSION_FILE} match\n\t\tREGEX \"PPSSPP_GIT_VERSION = \\\"${GIT_VERSION_ESCAPED}\\\";\")\n\tif(NOT ${match} EQUAL \"\")\n\t\tset(GIT_VERSION_UPDATE \"0\")\n\tendif()\nendif()\n\nset(code_string \"// This is a generated file.\\n\\n\"\n\t\"const char *PPSSPP_GIT_VERSION = \\\"${GIT_VERSION}\\\"\\;\\n\\n\"\n\t\"// If you don't want this file to update/recompile, change to 1.\\n\"\n\t\"#define PPSSPP_GIT_VERSION_NO_UPDATE 0\\n\")\n\nif (\"${GIT_VERSION_UPDATE}\" EQUAL \"1\")\n\tfile(WRITE ${GIT_VERSION_FILE} ${code_string})\nendif()\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.1533203125,
          "content": "org.gradle.jvmargs=-Xmx1536M\nandroid.useAndroidX=true\nandroid.nonTransitiveRClass=true\nandroid.nonFinalResIds=true\nandroid.ndk.suppressMinSdkVersionError=21\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "headless",
          "type": "tree",
          "content": null
        },
        {
          "name": "history.md",
          "type": "blob",
          "size": 132.615234375,
          "content": "This is history moved out from README.md, which was getting a bit long.\n\n\nWhat's new in 1.16.6\n--------------------\n- Fix performance issue with Vulkan descriptor set allocation ([#18332])\n- Smoother loading of replacement textures\n- Fix the store on iOS ([#18323])\n- Fix problem with waves background ([#18310])\n- Some translation updates\n- Other minor fixes\n\nWhat's new in 1.16.5\n--------------------\n- Additional crash and memory-leak fixes ([#18243], [#18244], [#18247])\n- Revert bad change that broke things with hardware transform turned off ([#18261])\n- Fix menu texture problem in Naruto Kizuna Drive in OpenGL ([#18255])\n- Apply flicker fix to WWE SvR 2007\n- More efficient handling of accelerometer events ([#18250])\n- Fix for jumpy graphics in Harvest Moon ([#18249])\n\nWhat's new in 1.16.4\n--------------------\n- Simplify shader cache lookups on Vulkan, hopefully fixing some crashes ([#18218])\n- Assorted improvements to the IR JITs ([#18228], [#18235], [#18211], more)\n- Other crash and stability fixes ([#18221], [#18220], [#18230], [#18216])\n- Some translation updates ([#18237], more)\n- Cleanups and assert fixes ([#18205], [#18201], [#18206])\n\nWhat's new in 1.16.3\n--------------------\n- Fix crash bug and performance issue in Vulkan shader cache ([#18183], [#18189])\n- Fix crash in icon loading in homebrew store ([#18185])\n- Add some memory safety check ([#18184], [#18194])\n- Fix problem when changing backend from the Windows menu ([#18182])\n\nWhat's new in 1.16.2\n--------------------\n- Fix for HTTP support on Linux on networks with shaky or incomplete IPv6 support\n- Assorted fixes for leaks and crashes ([#18169], [#18151])\n- Fix hang when switching UMD with RetroAchievements enabled ([#18143])\n- Fix math bug in new IR JIT for x86 ([#18165])\n- Minor math optimization -fno-math-errno ([#18158])\n- Fix for software renderer crash\n\nWhat's new in 1.16.1\n--------------------\n\n- Move RetroAchievements to the Tools tab in settings ([#18127])\n- Fix graphics regressions in Hot Shots Golf 2 / Everybody's Golf 2 and Final Fantasy Tactics ([#18142])\n- Fix hang on startup with OpenGL, that happened often if \"buffer commands\" was set to off.\n- Fix problem with the sc instruction that broke Beats ([#18133], [#18140])\n- Fix problem with the chat window accidentally closing on typing X ([#18135])\n- Fix some crashes, add some asserts and reporting hooks ([#18129])\n- Fix some text rendering in the software renderer ([#18126])\n\nWhat's new in 1.16\n------------------\nSpecial thanks to unknownbrackets for the new JIT compilers, and fp64 for finally cracking the vrnd instruction.\n\n- RetroAchievements support ([#17589], [#17631], many more). See [RetroAchievements on ppsspp.org](https://www.ppsspp.org/docs/reference/retro-achievements).\n- New JIT backends:\n  - RISC-V, based on IR\n  - x86 JIT based on IR. Often faster than the existing one.\n- Input fixes\n  - Improve behavior when analog and digital inputs clash ([#17960])\n  - Combo mapping is now disabled by default ([#17673])\n  - Android: Better tracking of devices names ([#17562], auto config)\n  - Fix mapping custom touch buttons to analog inputs ([#17433])\n- Rendering performance and fixes\n  - Fix flicker in WWE Smackdown vs Raw 2006 ([#18009]), video flicker in Naruto 2 ([#18008])\n  - Fix bad colors in Syphon Filter: Logan's Shadow menu ([#17965])\n  - On lower-end devices, avoid \"uber\" shaders due to performance and driver bugs ([#17449], [#17922])\n  - Allow disabling V-sync on Android with Vulkan, more SDL platforms ([#17903], [#18087])\n  - On Vulkan, reduce input lag when \"Buffer graphics commands\" is set to off ([#17831])\n  - Assorted minor perf ([#17810], [#17505], [#17478], [#17471], [#17452], [#17446], [#17442])\n  - Fix shadows in MotorStorm ([#17602]) (not actually a rendering problem)\n  - Fix rendering issue in Lunar Silver Star ([#17451])\n  - Add a cache for MakePixelsTexture, improving perf in God of War ([#17534])\n  - Lots of software renderer improvements ([#17571], [#17569], [#17619], [#17621], [#17618], [#17609], ...)\n- Networking\n  - HTTPS support now enabled in store and for RA on Windows, Android, Mac, iOS ([#17744], ...)\n  - Ad-hoc: Fix for Metal Gear Acid issue with Link Battle ([#17947])\n- Texture replacement fixes\n  - Fix Tactics Ogre texture issues ([#18001], [#18011])\n  - Fix problem with anisotropic filtering ([#17930])\n  - Fix glitches on D3D11 with KTX2 textures ([#17749])\n- UI changes\n  - Color emoji support on some platforms ([#17854], [#17856])\n  - Use TTF fonts on SDL where available (macOS, Linux/Steam Deck) ([#17844]), support HiDPI ([#17651])\n  - Allow setting the PSP's MAC address directly ([#17755])\n  - Better looking notifications ([#17606], [#17674], [#17672])\n- Cheats\n  - Fix loading cheat dbs on Android devices with scoped storage ([#17834])\n- VR (Quest, other Android VR devices)\n  - Cinema screen mode improvements ([#17704], [#17752])\n  - Quest-only passthrough mode ([#17591])\n  - Cleanups, compatibility fixes, make VR settings per-game ([#17636], [#17656], [#17598], [#17518])\n- Other\n  - Fix horrible audio glitch in After Burner ([#18076])\n  - Emulate the vrnd instruction accurately ([#17506], [#17549])\n  - Fix timing issue causing slowdowns in MLB games ([#17676], [#17677])\n  - UWP keyboard support, many other updates ([#17952], [#17974])\n  - Allow choosing the display resolution on Android again ([#17473])\n  - Fix issue running some file types out of the Download folder on Android ([#17466])\n\nOlder news\n----------\nLooking for [older news](history.md)?\n\nYou can also find the full update history on [the website](https://www.ppsspp.org/news).\n\nAdhoc support\n-------------\nNot fully functional, but some games work.  Check the [Ad-Hoc section of the forum](https://forums.ppsspp.org/forumdisplay.php?fid=34) for help.\n\nCredit goes to:\n - ANR2ME\n - Igor Calabria\n - [coldbird's code](https://code.google.com/archive/p/aemu/)\n - Kyhel\n - And more, of course.\n\nWhat's new in 1.15.4\n====================\n- Tilt controls: Restore \"Low end radius\" control ([#17489])\n- Android: Restore the ability to choose \"display\" (hardware scaler) resolution ([#17473])\n- Improve the workarounds for the DJ Max games ([#17467])\n- Android: Fix running some file formats directly from the Downloads folder ([#17466])\n- OpenGL: Restore most of the lost performance on low-end hardware from the shader variant reduction ([#17440, [#17439]])\n- Add a simple profiling tool to check CPU usage by the GL backend ([#17475])\n- Loader: Fix bug preventing WWE 2009 from starting ([#17435])\n- Misc minor fixes and optimizations ([#17442], [#17457], [#17486], [#17446], more)\n\nWhat's new in 1.15.3\n====================\n- Assorted minor crash- and other fixes ([#17406], [#17414], [#17415], [#17422])\n- Android: Allow launch by content URI (for frontends) ([#17425])\n- Control mapping: Fix bugs in mapping UI causing trouble with some controllers ([#17412], [#17420])\n\nWhat's new in 1.15.2\n====================\n- Assorted minor crash fixes ([#17401], [#17399])\n- Fix Android 12 support in the Android VR build (avoid scoped storage) ([#17398])\n\nWhat's new in 1.15.1\n====================\n- Assorted minor crash fixes ([#17374], [#17370], [#17392], [#17394])\n- Fix for non-png texture replacements when not listed in textures.ini ([#17380])\n- Fix for broken tilt d-pad controls ([#17393])\n- Workaround for Vulkan driver bugs on Mali-T8x0 series GPUs ([#17396])\n\nWhat's new in 1.15\n==================\n* Stutter caused by shader compilation has been reduced drastically ([#16873])\n  - Parallelization: ([#16802], [#16804], [#16809], [#16812])\n  - Shader variant reduction: ([#16773], [#16778], [#16770], [#16763])\n\n* Rendering performance and fixes\n  - Integer scaling added ([#17224])\n  - Post-processing fixes ([#17262])\n  - SOCOM overlay glitch removed, night vision fixed ([#17297], [#17317])\n  - PowerVR compatibility fixes ([#17232])\n  - CLUT fixes ([#17212])\n  - ToP - Narikiri Dungeon X: Avoid GPU readback ([#17181], [#17191], [#17192])\n  - DTM / Toca: Avoid GPU readback ([#16715])\n  - Fixed Dante's Inferno performance regression ([#17032], [#17035])\n  - Fix wrong device selection on Poco C40 phones, causing broken UI ([#17027], [#17022])\n  - Rainbow Six GPU performance fix ([#16971])\n  - Subtitles fixed in The Godfather ([#17298], [#17314])\n\n* Texture replacement improvements\n  - Less I/O on the main thread, leading to smoother framerates ([#17078], [#17091], [#17120], [#17134])\n  - Support for KTX2 files with UASTC compressed textures added ([#17111] [#17104])\n  - Support for DDS files with BC1-7 textures added ([#17083], [#17103], [#17097], [#17096], [#17095])\n  - Improve default ini ([#17146])\n  - Mipmaps now always used if provided ([#17144])\n  - Additional optimizations ([#17139], [#17088])\n\n* Optimizations\n  - Software renderer fixes and performance ([#17295], [#17214], [#17028], [#16753], [#16706], [#16690])\n  - Vulkan texture upload optimizations ([#17052], [#17122], [#17121], [#17114], [#17011])\n  - Depth readback added, fixing lens flares in Syphon Filter (at perf cost..) ([#16907], [#16905])\n  - Async readback supported in Vulkan - currently only enabled in Dangan Ronpa ([#16910], [#16916])\n  - Lighting shader optimizations ([#16791], [#16787])\n\n* Controls\n  - Android tilt control has been overhauled and fixed ([#16889], [#16896])\n  - You can now map combinations of buttons to single functions ([#17210], [#17215], [#17228], etc)\n  - Custom buttons now support analog inputs ([#16855])\n\n* VR features\n  - Top down camera: ([#17098])\n  - Head rotation control: ([#16857])\n  - More stereo support: ([#16952], [#16953])\n  - Other: ([#16826], [#16821])\n\n* Other\n  - Windows Dark Mode support ([#16704])\n  - GLSL shader compatibility fixes ([#16710], [#16709])\n  - GTA math issue on macOS/iOS fixed, playable again ([#16928])\n  - More accurate VFPU emulation has been added, though not all enabled yet ([#16984])\n  - Debugger features and fixes ([#17270], [#17269], [#17263], [#17260], [#17203], [#17190], [#17042], [#16994], [#16988], [#16818] etc)\n  - Rewind savestates no longer slows things down a lot ([#17291])\n  - Chat window bugfixes ([#17241])\n  - IR Jit fixes - helps iOS when native jit is unavailable ([#17129])\n  - Depth-related rendering fixes ([#17055], [#16880])\n  - More RISCV support work ([#16976], [#16957], [#16962], [#16832], [#16829])\n  - macOS native menu bar ([#16922])\n  - Font fixes ([#16859])\n  - Rockman 2 audio glitch fix ([#16810], [#16798])\n  - UI fixes: Vertical use of space ([#16795]), scrollbars ([#16785]), touchpad scroll on Windows ([#16699])\n\nWhat's new in 1.14.4\n====================\n* Multiple shader compatibility fixes for older devices/drivers: ([#16710], [#16709], [#16708])\n* A few other minor fixes: ([#16703], [#16706])\n\nWhat's new in 1.14.3\n====================\n* Several crash/hang fixes ([#16690], [#16689], [#16683], [#16685], [#16680], [#16697], [#16681], more)\n* Minor UI fixes ([#16698], [#16684], [#16674], [#16677])\n* Fix confirm/cancel button reversal ([#16692])\n\nWhat's new in 1.14.2\n====================\n* Fix Toca/DTM and others (culling) on Mali again ([#16645])\n* Fix line rendering bugs in the homebrew Tempest clone Webfest ([#16656])\n* Assorted cleanup and bugfixes ([#16673], [#16662], [#16655], [#16644], [#16636], [#16639] etc)\n\nWhat's new in 1.14.1\n====================\n* Fix black screen in Vulkan on some older Android devices (Android version 7) ([#16599])\n* Fix error message in Medal of Honor ([#16614])\n* Various minor bugfixes ([#16617], [#16609], [#16608], [#16615], [#16619])\n* Add an option to turn off the new transparent menu background ([#16595])\n\nWhat's new in 1.14\n==================\n* Massive number of rendering fixes\n  - Water in Outrun 2006 and DiRT 2 now renders correctly (logic op fixes) ([#15960], [#16208], [#16032], [#16024], [#15967])\n  - Split/Second now renders all effects correctly\n  - Multiple fixes workarounds for clipping/culling, both through clip planes and geometry shaders, fixing\n    graphical issues in many, many games and getting rid of hacks ([#16142], [#16504], [#16442], [#16383], [#16165], [#16162], [#16049], others)\n  - Killzone color effect now renders efficiently and correctly (in-game only, not title screen) ([#15934])\n  - Ridge Racer speedometers and lens flares fixed ([#16084], [#16188], [#16115])\n  - Lens flare effect fixed in Burnout Dominator, Ridge Racer, Colin McRae, several others ([#16014], [#16081], [#16076], [#16073])\n  - Shadows in Colin McRae are no longer flickering (side effect of other fixes)\n  - Spongebob: Yellow Avenger renders correctly (previously very broken) ([#15907], [#15903])\n  - Cars: Race-o-Rama, and MX vs ATV Reflex render correctly (at 1x resolution only) ([#15898], [#15907])\n  - Asphalt 2 depth occlusion problems fixed ([#15854], [#15853])\n  - Fix performance regression in Juiced 2 while also fixing the graphics ([#15888])\n  - Silent Hill games are less broken ([#16127])\n  - Depth occlusion and other problems fixed in Kurohyou (both games) and Ratchet & Clank ([#16454], [#15772], [#15728], [#15859])\n  - Misshitsu no Sacrifice intro animation and Macross water rendering fixed (3D texture) ([#15727])\n  - Tekken 6 Nancy laser beam fixed, plus line rendering fixes in rRootage and other games ([#16067])\n  - Tiger & Bunny, Yu-Gi-Oh, GEB, and PlayView games - JPEG image display issues ([#16179], [#16184], [#15924])\n  - Many, many others like Hunter x Hunter, Crash: Mind over Mutant, Boundless Trails, etc. ([#16265], [#16043], [#16379], [#15822], [#16358])\n* Software renderer performance and accuracy improvements\n  - Better performance ([#15998], [#16001], [#16011], [#16039], [#16054], [#16080], [#16085], [#16094], [#16102], [#16387], [#16486], [#16502], [#16518])\n  - Improved accuracy, clipping ([#15999], [#16005], [#16042], [#16086], [#16117], [#16231], [#16241], [#16265], [#16274], [#16469], [#16470], [#16478], [#16480], [#16485])\n* New features\n  - Initial VR support added (Quest and PICO only for now, PC in the future) ([#15659], [#15901], [#16246], [#16262], [#16273])\n  - MSAA antialiasing added to the Vulkan backend (desktop only) ([#16458])\n  - New API for plugins to access aspect ratio, scaling and fast-forward ([#16441]), other new APIs & improvements ([#15748], [#16121], [#16187], [#16198], [#16389])\n  - Read texture replacement packs directly from ZIP files ([#16304])\n* UI improvements\n  - New interactive Display Layout & Effects screen, replacing the old Display Layout Editor ([#16409], [#16415], [#16417], [#16445])\n  - Add default shader for LCD persistence simulation ([#16531])\n  - Game being played can now be seen as a background in most menus ([#16404], more)\n  - Reorganize speed hack settings ([#16346], [#16347], [#16348], [#16432])\n* Stability fixes\n  - Workaround for hangs on older Adreno GPUs ([#16422])\n  - Input handling fixes for deadzones and touch controls ([#16419], [#16450])\n  - Avoid game bugs in Twinbee Portable ([#16388]) and Shining Ark ([#16449])\n  - Fixes to D3D9 backend issues ([#15723], [#15815], [#15926], [#16100], [#16232], [#16550])\n* IR interpreter (iOS, etc.) bug fixes\n  - Metal Gear Solid - Peace Walker no longer bugged out ([#16396])\n  - VFPU fixes for Dissidia, others ([#16302], [#16305], [#16306])\n* Performance improvements\n  - Vulkan bandwidth and synchronization optimizations ([#16434], [#16099], [#16090], [#16072], [#16061], [#16060], [#16035], [#15917])\n  - Lighting \"ubershader\" optimization to prevent hitches ([#16104], [#16111])\n  - Assorted minor other improvements ([#15589], [#15843], [#16190])\n  - Improve texture replacement memory usage ([#15884], [#16304], [#16314])\n  - Texture upscaling speedup and fixes ([#15803], [#16125])\n* Other\n  - HLE/CPU accuracy improvements helping Brooktown High, Frontier Gate, Madoka Magicka, some language patches ([#16413], [#16070], [#16052], [#15952], [#15957], more)\n  - Many GE debugger improvements ([#15839], [#15851], [#15894], [#15925], [#15974], [#16007], [#16047], [#16096], [#16201])\n  - Optional memory alignment validation in IR mode ([#15879], [#15880])\n  - Fix netplay assertion in Cars ([#16089])\n\nWhat's new in 1.13.2\n====================\n* Crashfix on Android 12 when playing certain background music ([#15990])\n* Fix Star Ocean battles in D3D backends ([#15889])\n* Minor fixes that might fix some other crashes\n\nWhat's new in 1.13.1\n====================\n\n* Confirmation dialog added before change of MAC address ([#15738])\n* IR interpreter regression fixed ([#15739])\n* Fix clearing of replacement texture cache ([#15740])\n* Improved Portuguese-pt translation ([#15734])\n* Fix graphical regression in Split/Second ([#15733])\n* Couple of minor crash fixes\n\nWhat's new in 1.13\n==================\n\nGeneral\n\n* Fix assorted Android \"scoped storage\"-related bugs and performance issues ([#15237], [#15487]), etc.\n* Analog mapping for fast-forward ([#15645])\n* Major softgpu accuracy fixes and speedups, including a JIT ([#15163], [#15345], [#15389], [#15529], [#15440], [#15410], [#15405], [#15400]) and many, many more\n* Fixed some NEON code paths ([#15481])\n* Fix performance of texture uploads with Vulkan ([#15474])\n* Don't include the large font atlas when we don't need it\n* Improved upscaling shaders ([#15566])\n* Vulkan texture upscaling performance improvements ([#15238]), etc.\n* Vulkan correctness fixes ([#15217], [#15211]), use the VMA allocator ([#15162]), etc.\n* Fixes to depth culling ([#15106]), many more\n* Background loading of texture replacement ([#15025])\n* Threading manager improvements and fixes ([#15470]), etc.\n* Added search in settings ([#14414])\n* Added fast button repeats on custom touch buttons ([#15613])\n* Two new bicubic upscaling shader: Catmull-Rom and Mitchell-Netravali ([#15569])\n* Allow to change screen rotation per game and to bind a key to change it ([#15494], [#15510])\n* Re-enabled software rendering option on Android ([#12958])\n\nGame fixes\n\n* Add more workarounds for Mali driver bugs ([#15016])\n* Vortex in God of War: Ghost of Sparta can now be passed ([#15640])\n* Various proAdhoc fixes ([#15213], [#15215]), and many more\n* Correct flickering text in Sol Trigger and Last Ranker. ([#15549])\n* Fix and improve line drawing in Echochrome ([#15583]), after line refactoring ([#15073], [#15075])\n* Fix HUD graphics in Split/Second ([#15500], [#15501])\n* Fix bad screen overlay issues in Clone Wars and Force Unleashed ([#15691], [#15696], [#12949], [#9572])\n* Zettai Zetsumei Toshi 3 no longer hangs on character select screen ([#15687])\n* Juiced 2: Bloom effect no longer covering the screen ([#7295], [#15717])\n* Fix keyboard shift issue in a few games ([#15698])\n\nUI\n\n* Windows/Xbox UWP directory navigation improvements ([#15652])\n* Color change and basic theme support ([#15396], [#15394])\n* Fix input focus bug ([#15560])\n* New GE debugger features and other UI fixes ([#15393], [#15324], [#15377], [#15424], [#15402], [#15378], [#15338]), etc.\n\nWhat's new in 1.12.3\n====================\n* Fix background music speed. A couple translation fixes.\n\nWhat's new in 1.12.2\n====================\n* Fix joystick detection bug on Android.\n\nWhat's new in 1.12.1\n====================\n* Bug fixes (control mapping fix, popup menus in the Windows debugger, a few crashfixes)\n\nWhat's new in 1.12\n==================\n\nPlatform support:\n* Add support for Android 12 Scoped Storage restrictions ([#11997])\n* iOS: Fix multitouch tracking ([#5099])\n* Android: Fix screenshot orientation on Vulkan ([#14053])\n* Linux: Improve support for system FFmpeg 3.1+ ([#14176], [#14188], [#14199])\n* libretro: Always enable function hooks ([#14145])\n* AMD: Enable Vulkan rendering on a thread ([#13864])\n* Add iOS version detection, turn off JIT on bootup if >= 14.3. ([#14201])\n* iOS: Try a different JIT detection method, thanks Halo-Michael ([#14241])\n* Windows: Restore window size correctly ([#14317])\n\nGame fixes:\n* Fix NBA Live 08 loading ([#8288])\n* Display Open Season title screen correctly ([#13252])\n* Fix Metal Gear Solid Peace Walker Chinese Patched blue screen ([#14127])\n* Load Ape Academy 2 correctly ([#14271])\n* Many more...\n\nGraphics and Sound:\n* Add new texture filtering mode \"Auto Max Quality\" ([#14789])\n* Fix Princess Maker 5 Portable half screen in Vulkan ([#13741])\n* Fix Pro Yakyu Spirits 2010 (NPJH50234): Rendering errors with hardware transform off ([#14167])\n* Support texture replacement filtering overrides ([#14230])\n* Fix Yarudora Portable: Double Cast's FMVs artifacting ([#13759])\n* Fix Sims 2 Castaway/Pets EA Logo glitched out ([#13146])\n* Fix bad size & position on Japanese & Numbers & Alphabets ([#14209])\n* Implement basic depth texturing for OpenGL ([#14042])\n* Google Cardboard fixes ([#14966], [#14768])\n* Correct mini-map update in Z.H.P. ([#14069])\n* Fix crash in vertex jit on ARM32 ([#14879])\n* Add a setting for reverb volume ([#14711])\n* Option to switch to new devices or not, on Windows.\n\nUI:\n* Add a setting for choosing background animation in PPSSPP's menus ([#14313], [#14818], [#14810], [#14347])\n* Add CRC calculation on game info screen and feedback screen ([#14000], [#14041])\n* Add a Storage tab to System Information with some path info ([#14224], [#14238])\n* Track and show memory allocation / usage information in debugger ([#14056])\n* Allow searching within the savedata manager ([#14237])\n* Enable postshaders to access previous frame ([#14528])\n* Add missing Japanese keyboard symbol ([#14548])\n* Add Reset button on crash screen, allow load state and related ([#14708])\n* Implement save state load and save undo ([#14676], [#14679], [#14697])\n* A lot of minor debugger improvements\n\nControls:\n* New analog stick calibration menu ([#14596])\n* Improved combo button and moved settings to Customize Touch Control -> Customize -> Custom button ([#13869])\n* Improved tilt control, allow to change axis ([#12530])\n* Add a visual means of control mapping ([#14769])\n* Add basic motion gesture support ([#13107])\n* Fix touch control DPAD not getting input when dragged over, and make touch analog drag not activate other buttons ([#14843])\n* Allow adjusting touch control analog stick head size ([#14480])\n\nAdhoc/Network:\n* Fix multiplayer issue on MGS:PW due to detecting an incorrect source port on incoming data ([#14140])\n* Always enable TCPNoDelay to improve response time ([#14235])\n* Fix Teenage Mutant Ninja Turtles multiplayer ([#14284])\n* Fix FlatOut Head On multiplayer ([#14290])\n* Prevent flooding Adhoc Server with connection attempts ([#14335])\n* Fix crashing issue when leaving a multiplayer game room (ie. GTA Vice City Stories) ([#14342])\n* Fix stuck issue when scanning AP to Recruit on MGS:PW ([#14345])\n* Fix possible crash issue on blocking socket implementation (ie. Kao Challengers) ([#14466])\n* Create GameMode's socket after Master and all Replicas have been created (ie. Fading Shadows) ([#14492])\n* Reduce HLE delays due to multiplayer performance regressions (ie. Ys vs. Sora no Kiseki) ([#14513])\n* Fix socket error 10014 on Windows when hosting a game of Vulcanus Seek and Destroy ([#14849])\n\nWhat's new in 1.11.3\n====================\n* Fix for graphics glitches in the on-screen keyboard\n\nWhat's new in 1.11.2\n====================\n* An additional few crash fixes ([#14129], [#14134], [#14132])\n\nWhat's new in 1.11.1\n====================\n* A few crash fixes ([#14085], [#14089], [#14091], [#14092]), a few adhoc fixes\n* Glitchy menu audio on some devices ([#14101]), in-game UI font memory leak ([#14078])\n* Couple of adhoc fixes ([#14106], [#14117])\n\nWhat's new in 1.11.0\n====================\n* Lots of minor bug fixes, crash fixes, and performance fixes and improvements.\n* New Browse... button to allow opening SD cards on Android 11\n* Countless AdHoc networking fixes by ANR2ME, for example Dragon Ball Shin Budokai, PowerStone,\n  Bleach Heat The Soul 7, Kingdom Hearts, GTA: VCS and many more.\n* Graphics issue with car reflections fixed in Outrun, Dirt 2 ([#13636], [#13640], [#13760])\n* Cut-off cards in Yu Gi Oh fixed ([#7124]).\n* Numerous fixes to the builtin fonts by nassau-tk\n* Added exception handler so PPSSPP stays alive if a game crashes ([#11795]/[#13092])\n* Desktop: Support for multiple instance multiplayer ([#13172], ...)\n* Workaround for rendering bugs with flat shading in iOS 14\n* Multiple fixes to the IR interpreter ([#13897], ...)\n* UI: New fullscreen button on desktop platforms, optional navigation sounds ([#13239])\n* Audio and multiple hangs fixes in UWP version ([#13792], ...)\n* Partial microphone support ([#12336], ...)\n* Workaround for wacky action mirroring bug in Hitman Reborn Battle Arena 2 ([#13706], [#13526])\n* Hardware texture upscaling for Vulkan, mipmap generation ([#13235], [#13514])\n* Added MMPX Vulkan texture upscaling shader ([#13986])\n* Depth texturing support in Vulkan and D3D11 ([#13262], [#13556], ...)\n* Performance fix for Test Drive Unlimited ([#13355], ...)\n* Allow rewind on mobile ([#13866])\n* Added option to disable on-screen messages ([#13695])\n* Added \"Lower resolution for effects\" on libretro ([#13654])\n* Allow chaining multiple post-processing shaders ([#12924])\n* Support for loading game-specific plugins ([#13335])\n* Fixed Assassin's Creed: Bloodlines Save issue on Android ([#12761])\n* Hanayaka Nari Wa ga Ichizoku: mono voices fixed ([#5213])\n* Additional fixed games:\n    * Namco Museum - Battle Collection, Vol 2 ([#9523], [#13297], [#13298])\n    * Dream Club Portable (graphics bugs, GL and Vulkan) ([#6025])\n    * Capcom Classic Collection Reloaded (stuck in return game) ([#4671])\n    * Xyanide Resurrection (freezing) ([#8526])\n    * Dissidia Final Fantasy Chinese (patched game, invalid address) ([#13204])\n    * Crazy Taxi ([#13368])\n    * Spiderman: Friend or Foe ([#13969])\n    * Downstream Panic (US) (New Game crash) ([#13633])\n\nWhat's new in 1.10.3\n--------------------\n* Fix for control layout editor ([#13125])\n\nWhat's new in 1.10.2\n--------------------\n* More crashfixes ([#13094], [#13093])\n* Improve download performance and cancel behavior ([#13095])\n* Restore the removed I/O on Thread option ([#13096])\n\nWhat's new in 1.10.1\n--------------------\n* Fixes for common crashes ([#13077], [#13076], see [#13057])\n* Fix for offset rendering in D3D9 ([#13071])\n\nWhat's new in 1.10.0\n--------------------\n* Graphics and compatibility fixes ([#12800], [#12670], [#12635], [#12857], [#12941], [#11898], [#12695], more)\n* Assorted minor performance improvements, game load speedup ([#12462], [#12652])\n* Screen inset (notch) support on Android ([#12779])\n* Analog stick support for menu navigation ([#12685])\n* Fixed audio glitches in SDL builds ([#12916], [#12920])\n* Support more languages in in-game dialogs ([#12702]). Croatian language added to PPSSPP.\n* Simple multiplayer chat ([#12667])\n* More advanced postprocessing (multipass, parameters) ([#12905], [#12901])\n* Add PPSSPP-specific CWCheat ([#12816], [#12912])\n* Reintroduce Cardboard VR, allow more resolutions ([#12449], [#8714])\n* Fix some crashes ([#12908], [#12876])\n* Ghost in the Shell graphics fixed (JIT inaccuracy with inf * 0) ([#12519])\n* Mac build now supports Vulkan on top of MoltenVK ([#12583])\n* Raspberry Pi 4 EGL crash fixed ([#12474])\n* VSync now supported on all backends, frame duplication option added for 30 Hz games ([#12659], [#12602])\n* Camera supported on Windows, Linux and Mac (still no microphone though) ([#12572], [#12580], [#12607])\n* Darkstalkers fixed and working through software rendering. SW rendering fixed on GLES 2.0 ([#12443], [#12898])\n* Hot Shots Golf slowdown and flicker on Vulkan fixed ([#12873], [#12746])\n* Pangya Golf crashes and hangs fixed ([#12718])\n* Allow rebinding of right touch screen analog ([#12486])\n* Add option to prevent mipmaps from being dumped ([#12818])\n* Tilt control now have a base radius to help with deadzone ([#12756])\n* Mappable auto rotating analog stick to pass some game checks ([#12749])\n* Touch control position can now be snapped to a grid ([#12517])\n* HiDPI retina display support ([#12552])\n* Rapid-fire on touch control ([#12601])\n* Toggle mute button ([#12643])\n* Add option to resize game icons and more ([#12646], [#12637])\n* Frames in-flight now configurable to reduce input lag at the cost of speed ([#12660])\n* Add toggle mode to combo button ([#12623])\n* SDL mouse support, Qt menu upgrades ([#12612], [#12817])\n* Real support for Chinese patched version of Hatsune Miku Project Diva Extend ([#13007])\n* Some minor kernel module support ([#13028], [#12225], [#13026], [#13004], [#13038], [#13023])\n* Fixed fullscreen toggling with Vulkan in SDL builds ([#11974])\n\nWhat's new in 1.9.0/1.9.3\n-------------------------\n* Sizing/touch fixes on Android\n* Fixes for some crashes\n\nWhat's new in 1.9.0/1.9.2\n-------------------------\n* Flicker fixed in God of War that appeared with newer drivers for Mali GPUs ([#12224])\n* Improve performance of God of War on Vulkan ([#12242]), implement built-in GPU profiler ([#12262], [#12266])\n* Vertex range culling fixed on ARM Mali ([#12227])\n* Started to improve VFPU precision, resulting so far in a fix for the long standing Tekken 6 leg shaking problem ([#12217])\n* Fixed a VFPU precision snafu on ARM64, fixing disappearing officers in Warriors Orochi ([#11299]) and some problems in Tomb Raider ([#11179]).\n* Vulkan is the default again on Android versions newer than Pie\n* Fix various homebrew store issues\n* GPU pause signal handling fixed, fixing some hangs in Bleach and Armored Core games ([#12160])\n* Audio sample rate conversion handling fixes ([#12147])\n* Some Vulkan optimizations (pre-rotation ([#12216]), perf fix in Metal Gear Acid, etc)\n* Multiple fixes for the UWP build ([#12036], others)\n* MP3 playback fixes ([#12005])\n* Audio in Motorstorm: Arctic Edge fixed by returning errors correctly ([#12121])\n* Audio glitches in Final Fantasy Tactics fixed ([#9956])\n* Camera display in Invizimals fixed ([#12278], [#8521])\n* Added hotkeys for texture dump and replace ([#11938])\n* Added Visual Studio 2019 support. Windows XP is no longer supported ([#11995], others)\n* Fixes for video capture ([#12069])\n* Added a separate sound volume for alternative speed ([#12124])\n* Improved mouse control (Windows only) ([#12173], [#12176])\n* Support for installing texture packs and ISOs from zips ([#12175])\n* Right analog support for touch controls (only used by patched games and some HD remasters) ([#12182])\n* Android: Fix OpenSL initialization, possibly helps audio crackle a little. ([#12333]).\n* Fix graphics on Amazon Fire TV Stick 4K\n* Fixed strange vehicle behavior in MGS:PW (somehow) ([#12342])\n\nWhat's new in 1.8.0\n-------------------\n* Avoid crash when starting PPSSPP due to bad AMD Vulkan drivers ([#11802])\n* PowerVR Vulkan display corruption fixed ([#11744], [#11747])\n* Naruto Shippuden 3 hang fixed ([#11780])\n* Fixes to various lighting bugs ([#11567], [#11574], [#11577])\n* Fix control issue in Sonic Rivals and Rock Band ([#11878], [#11798], [#11879])\n* Significant performance improvement in Earth Defense Force 2 ([#11172])\n* Fix \"real clock sync\" setting (helps with latency for music games - [#11813])\n* More speed in FF4 effects and other generated curves ([#11425])\n* Support for resizing Vulkan on Linux ([#11451])\n* Improved support for GLES on Linux/IoT ([#11507], [#11537], [#11541], [#11632], [#11746], [#11806], [#11845])\n* Percentage based frameskipping ([#11523])\n* DXT accuracy improved, fixing thick white line in Gran Turismo sky ([#11530])\n* Fix Motorstorm freeze on non-Windows ([#11618])\n* Faster block transfer in some games like Digimon Adventures ([#11531], [#11553], [#11776])\n* Blending optimizations and improvements ([#11543], [#11620])\n* Improve D3D11 rendering issues ([#11584])\n* Change default graphics backend to D3D11 or OpenGL ([#11621], [#11658])\n* Remove some outdated settings ([#11665], [#11666], [#11667])\n* Fix remote disc streaming with ipv6 ([#11689], [#11700])\n* Vulkan: Workarounds for some driver bugs for 5xx series Qualcomm GPUs ([#11691], [#11694])\n* Fix some Qt port issues with recent performance improvements ([#11720], [#11807], [#11808])\n* UWP Xbox One: fix X/Back button confusion ([#11740])\n* Fix Formula 1 2006 timing issue ([#11767])\n* Fixes and workarounds for some vertex range culling bugs that broke a few games ([#11785], [#11859]), and disable it on older GPUs ([#11712], [#11773], [#11787])\n* Android: Allow putting PSP storage on custom paths like SD cards ([#11812])\n* Corrected vocp instruction, fixing models in Artdink games ([#11822], [#11835])\n* Bundle SDL in binary for macOS builds ([#11831])\n* Prevent keeping games open on Windows ([#11842])\n\nWhat's new in 1.7.3/1.7.4/1.7.5\n-------------------\n* Fixes for a couple of common crashes\n* Reverted immersive mode change temporarily to see if it helps misaligned buttons\n* Change default adhoc server address\n\nWhat's new in 1.7.2\n-------------------\n* Update text of \"Buy PPSSPP Gold\" button\n\nWhat's new in 1.7.1\n-------------------\n* Minor crashfixes, lang updates\n* Save bug fixed ([#11508])\n\nWhat's new in 1.7.0\n-------------------\n* Fix for insta-crash on Galaxy Note 9, some Xiaomi devices, and the new nVidia Shield ([#11441])\n* Vertex range culling on most platforms, fixes DTM: Race Driver and similar ([#11393])\n* Major speed boost in some Gundam and Earth Defense Force games ([#10973])\n* Fix for issues with post processing shaders in GL 3+ ([#11182])\n* Fixes to sound output switching on Windows (WASAPI) ([#11438])\n* Detects DirectInput devices when running ([#11461])\n* Simple Discord integration ([#11307])\n* New debugging APIs ([#10909])\n* Task switching made a lot more robust (fixes GPD XD problems) ([#11447])\n* Texture decoding optimizations ([#11350])\n* Tons and tons of miscellaneous bugfixes and compatibility fixes\n\nWhat's new in 1.6.3\n-------------------\n* Crashfixes, task switching and one in Phantasy Star Portable\n* Improve graphics in PoP on some devices\n\nWhat's new in 1.6.1, 1.6.2\n--------------------------\n* Crashfixes\n* Fix broken graphics in flOw.\n\nWhat's new in 1.6.0\n-------------------\n* OpenGL backend now properly multithreaded, giving a good speed boost.\n* Various Vulkan performance improvements (like [#10911]) and memory allocation fixes.\n* GPU command interpreter performance improvements ([#10658])\n* Various fixes for app switching and widgets ([#10855]) on Android\n* Bugfixes and some performance improvements in the ARM64 JIT compiler and IR interpreter\n* Shader cache enabled for Vulkan\n* Multiple iOS fixes, including JIT ([#10465]) and file browser ([#10921]).\n* Improved compatibility on Mac ([#10113])\n* Texture replacement ID bugfix (note: some textures from 1.5.4 may become incompatible)\n* Adhoc multiplayer fixes ([#8975])\n* Vulkan support on Linux/SDL ([#10413])\n* Retroarch support\n\nWhat's new in 1.5.4\n-------------------\n* Bugfixes and crashfixes!\n\nWhat's new in 1.5.0\n-------------------\n* Full Vulkan support, also for Android now. Very fast on supported devices. ([#10033], [#10049])\n* Smarter graphics state management, reduced CPU consumption on all backends ([#9899])\n* Android: Support for Arabic and other scripts we couldn't support before\n* Fix Android widgets, screen scaling ([#10145])\n* Fixes to video dumping\n* Geometry problems fixed in Medal of Honor\n* Implement immediate draws, fixing Thrillville ([#7459])\n* Software rendering improvements, speed and accuracy\n* Hardware tesselation of PSP Beziers and Splines (used by a few games)\n* Partial sceUsbGps and sceUsbCam support (Android)\n* Android \"Sustained performance mode\" to avoid thermal throttling ([#9901])\n* Linux controller mapping fixes ([#9997])\n* Assorted bugfixes and compatibility improvements\n\nWhat's new in 1.4.2\n-------------------\n* Fixed longstanding bug causing games to crash on ARM64\n* Software rendering crashfix, plus hide it for Android users\n* D3D9 pixel offset bug fix (blurriness)\n* Fixes for homebrew: Timing, MEMSIZE\n\nWhat's new in 1.4.1\n-------------------\n* Fixes for some common hangs and crashes ([#9698], ...)\n* Vertex decoder optimizations ([#9674])\n* Corrections to mipmap bias and selection function ([#9633])\n* Major improvements and fixes to software renderer, including mipmap support ([#9635], ...)\n* UI background image support\n* Basic mouse input support on Windows\n* Windows desktop touch fixes ([#9560])\n* D3D11 \"depal\" color fixes, fixing Sonic Rivals\n* Fix crash in framebuffer blits affecting Persona 3 ([#9566])\n\nWhat's new in 1.4-2\n-------------------\n* Bugfix release - build system didn't copy the flash0 directory to the APK on Android.\n\nWhat's new in 1.4\n-----------------\n* Support D3D11 (performs better than OpenGL or D3D9 on most hardware)\n* Audio quality improvement (linear interpolation) ([#8950])\n* Hardware spline/bezier tesselation in OpenGL, D3D11 and Vulkan (...)\n* Post-processing shaders in D3D11\n* Prescale UV setting removed, now the default (improves perf) ([#9176])\n* High DPI display fixes\n* Various fixes for UMD switching for multi-UMD games ([#9245], [#9256])\n* New audio setting to improve compatibility with Bluetooth headsets\n* Various desktop gamepad compatibility fixes\n* Workaround for mipmap issue, fixing fonts in Tactics Ogre Japanese\n* Assorted minor compatibility fixes, code cleanup and performance improvements\n\nSupport for Symbian, Maemo and Blackberry has been removed.\n\nWhat's new in 1.3.0\n-------------------\n* Fix JIT problems on Galaxy S7 and iOS 9+ devices. ([#8965], [#8937])\n* Fix Android TV support and use latest FFmpeg. ([#8651], [#8870])\n* Texture replacement support - for custom textures and upscaling. ([#8715], [#8821])\n* Initial game recording / TAS features. ([#8939], [#8945])\n* Correctly map memory on Raspberry Pi 3, much better performance. ([#8801])\n* Workaround rendering issues on Tegra K1/X1. (8294a54)\n* Disc streaming to play quickly from tablet/phone on wifi. ([#8845])\n* Initial Vulkan support - not full featured yet. ([#8601], etc.)\n* Experimental new CPU backend and CPU fixes. ([#8725])\n* Allow insert/eject of memstick - required by some games. ([#8889])\n* Better support for ps3 controller mapping. ([#8949])\n* Better UI handling for settings with long names in some languages. ([#8900], [#8898])\n* Screenshots in compatibility reporting, better website. ([#8812])\n* Fix type D cheat codes, allow for homebrew. ([#8818])\n* Graphic glitch fixes in several games. ([#8686], [#8757], [#8804])\n* Fix video playback glitches in several games. ([#8793], [#8803], [#8867], [#8914])\n* Various performance and compatibility improvements. ([#8868], [#8884], [#8932], [#8934], [#8813], [#8701], [#8960])\n* Various debugger and GE debugger improvements. ([#8882], [#8762])\n* Fix some problems when switching away from and back to the app ([#8968])\n\nWhat's new in 1.2.2\n-------------------\n* Went back to the old way of initializing graphics on Android. Should fix many recent issues.\n* Some graphical fixes, a vertex cache performance improvement and a screen clear optimization\n* Fix for dual source blending on most SHIELD devices, causing graphical issues.\n* Fix the homebrew store incorrectly unzipping some games. This will lead to more games being added.\n* Slightly faster ISO handling\n\nWhat's new in 1.2.1\n-------------------\n* Fixes for some crash-on-shutdown and app switching problems.\n\nWhat's new in 1.2.0\n-------------------\n* A major rework of sceAtrac audio decoding, fixing various music hangs and similar issues\n* Many fixes and workarounds to depth and stencil buffer usage, and also FBO management\n* Audio reverb support\n* Combo keys - custom touch buttons that press multiple PSP buttons\n* 5xBR upscaling on GPU (postprocessing effect)\n* Fix problems with playback of video with mono audio\n* Performance improvements like multithreaded audio mixing\n* ARM64 JIT crash bug fixes\n* GLSL shader cache to reduce stuttering ingame\n* Support render-to-CLUT functionality that some games use to change colors of various monsters\n* x86-64 support on Android\n* Auto-hide on-screen controls after a while of no usage\n* Fixes to prescale UV speedhack, now seems reliable\n* Faster ISO RAM cache\n* New UI for moving around the PSP display on larger screens\n* Minor UI fixes like better slider controls\n* Assorted stability fixes (ffmpeg crash, etc)\n* Volume setting is back\n* Preparations for supporting more graphics APIs\n* AdHoc port offset\n* Support another HD remaster (Sora no Kiseki Kai HD)\n\nWhat's new in 1.1.1\n-------------------\n* Fixed new crash in Persona and other games on ARM64, like Galaxy S6\n* Fixed crashes when trying to launch web browser when not present on Android, like on Android TV\n* Fix crash in games that used \"depal\" functionality (OpenGL)\n* Fixed rounding mode problems in the JITs\n* Fix crash when loading savestates many times, and savestate compatibility on Android-x86\n* Fix minor glitch in Ridge Racer\n\nWhat's new in 1.1\n-----------------\n* Support for ARM64 on Android, for improved performance on new devices. Has some new optimizations.\n* Support Android TV, like nVidia Shield TV\n* Screen rotation on PC, useful for vertical games like Star Soldier\n* Many minor performance improvements and compatibility bug fixes\n* GPU emulation fixes like correct depth rounding, fixing text in Phantasy Star\n* Other graphical fixes like UV rotation\n* Support savestates for homebrew apps\n* Simple integrated \"Homebrew Store\" to download PSP homebrew apps\n* Minor AdHoc multiplayer improvements. Still many issues left.\n* Disable a dangerous optimization on ARM, causing walk-through-walls in Tenchu\n* sceAtrac music compatibility fixes, fixing noise in a few games\n* Better texture scaling performance\n* Direct3D closer in features to OpenGL\n* Works better on BSD operating systems\n* Savedata management UI\n\nWhat's new in 1.0.1\n-------------------\n* Bugfixes like the save state scroll issue, cosmetic issues like overscroll\n* Some cheat code bugfixes\n* Adler32 and Mersenne Twister modules added (fixes some obscure games)\n* Fix for Jak & Daxter slowdown\n* Graphics hack for Phantasy Star Portable 2 for Direct3D9\n* Fix compatibility with some PowerVR devices broken since v0.9.5-959-g4998044\n\nWhat's new in 1.0\n-----------------\n* Many, many bug fixes in JIT and elsewhere, improving compatibility\n* Proper fix for Zenfone and related devices\n* Direct3D 9 supported as a rendering backend on Windows, helps on old GPUs and can be faster than OpenGL in many cases\n* You can now create specific configs per game\n* FPU rounding modes much better supported, fixes the Peace Walker boss that was undefeatable. NOTE: This breaks saves in Gods Eater - you must turn off the better rounding, load your save game, turn it on and save.\n* The JIT now uses SSE on x86, improving speed considerably. This does not affect ARM devices, that's for the next version or two.\n* Improved audio output code on both Windows and Android, reducing audio latency on Windows and on some Android systems\n* FFMPEG upgraded, fixed some music hangs (\"GHA phase shifts\")\n* Some Ad Hoc improvements, coldbird.net is now default adhoc server. Ad Hoc still unfinished and hard to use.\n* Graphics fixes: Bezier/spline drawing fixes, vertex position fixes, DanganRonpa on Adreno fixed, flat shading fixed, vertex cache improved, some PowerVR blockiness issues fixed, screen scaling filter added, Google Cardboard support\n* Simulate UMD speed better, fixing hangs in several games\n* More Atrac3 fixes, fixing hangs\n* Somewhat better disk full handling\n* Fixes to dynamic unloading of code, fixing problems in GEB and TRM 2/3\n* Updated to SDL2 where applicable (Linux, Mac)\n* Some new features, like analog/dpad-swap hotkey, graphics hack for Phantasy Star, show last bit of debug log in dev tools, etc\n\nWhat's new in 0.9.9.1\n-------------------\nA few issues have been discovered in the release that need fixing, the Star Ocean fix had a bug and there are some unexpected slowdowns.\n\nImproved sceMpegRingbufferAvailableSize -  UFC© Undisputed​™ 2010 now playable\n\nImproved ISO File System - Bleach Soul Carnival 2 now in-game (but freeze when in menu)\n\nWhat's new in 0.9.9\n-------------------\n* CLUT (paletted) texturing from framebuffers supported, fixing many graphical issues\n  like the shadows in Final Fantasy: Type-0\n* More types of framebuffer copies are now handled correctly, fixing a variety of graphical\n  issues, like the sun in Burnout and many more\n* Better savedata compatibility with the real PSP\n* Support for more codecs used by \"Custom BGM\" and sometimes regular music in games: MP3, AAC\n* PMP video format support\n* Implemented some strange blending modes like ABSDIFF as shaders, fixing the outlines in DBZ Tag Team and more.\n* Emulation of the vrot CPU instruction improved - it caused cracks in FF3 graphics before\n* Many bugfixes around the UI, touch D-pad now works better when scaled large\n* Workaround implemented to support Star Ocean's stencil trickery as efficiently as possible on all platforms\n* Major corrections to module loading and memory management, fixing further games\n* Bulgarian and Thai language translations were contributed\n* Many, many more game fixes and bug fixes\n\nWhat's new in 0.9.8\n-------------------\n* OpenGL ES 3 detection bug on Xperia devices fixed, graphics work again.\n* More accurate audio mixing and emulation\n* Software rendering and display list performance improvements\n* Workaround for timing issue hanging Crash Tag Team Racing\n* Galician language\n* Built-in ARM disassembler improvements (dev feature)\n* Fix for immersive mode volume key issue on Android Kitkat\n* And more minor tweaks and fixes as always.\n\nWhat's new in 0.9.7.1\n---------------------\n* Some critical bugfixes (rotation, haptic feedback on Android, etc)\n\nWhat's new in 0.9.7\n-------------------\n* Several scheduling and audio fixes, fixing black screens in Yu Gi Oh games among other things.\n* Screen rotation and immersive mode support on Android\n* Large improvements to the software renderer (still not really playable, but looks right more\n  often than not)\n* New VPL allocator and bugfixes, fixing Pangya Golf performance problems.\n* Some mpeg/video playback fixes, fixing Parappa The Rapper and others. Some issues remain.\n* Fix save state bugs causing incompatibility between 32 and 64-bit platforms.\n* Symbol map/debugger improvements\n* Depth buffer copy, fixing Jeanne D'arc. May cause minor slowdowns though, this will be worked\n  around in the future.\n* MsgDialog fixes. Saving fixed in numerous games.\n* Initial multitouch support on Windows 8 for on-screen controls.\n\nWhat's new in 0.9.6\n-------------------\n* Large general speed improvements and assorted bug fixes\n* \"Software Skinning\" option which speeds up many games with animated 3D characters\n  (but may slow down a few, like Monster Hunter games - experiment with turning it off)\n* Various fixes around stencil/alpha, reducing glow problems in Wipeout and Gods Eater Burst.\n* Timing improvements making more games run at the correct FPS, also fixing some audio issues\n* More debugger features\n* Option for four-way touch dpad, avoiding diagonal dpad issues\n* Better looking and individually resizable touch controls\n* Add ability to switch UMD in multi-disc games (works for most)\n* Emulate PSP-2000 rather than the 1000 model by default. Not much different in practice.\n* Automatic install of games from ZIP files, like demos and many homebrew.\n* VERY basic ad-hoc online play support, to be improved in future versions. See below.\n* Software renderer improvements\n\nWhat's new in 0.9.5\n-------------------\n* Many, many emulation fixes:\n  - bezier/spline curve support, fixing LocoRoco and others\n  - stencil clear emulation, fixing Final Fantasy IV text\n* Performance improvements in some games\n* Post-processing shaders like FXAA, scanlines, vignette\n* More solid save states (we will try to keep them working from now on. Save states only upgrade forward,\n  not backward to older versions though).\n* Change render resolution independently of window size\n* Massive debugger improvements\n* Win32 menu bar is now translatable\n* Multiple UI bugs were fixed, and the UI instantly changes when a new language is selected\n* Win32: Ability to store PPSSPP's config files and memory stick files in places other than the same directory\n* Android-x86 support\n* Unofficial port for modified Xbox 360 consoles\n* Atrac3+ plugin no longer required. Symbian now supports Atrac3+ audio.\n* Symbian audio and ffmpeg is now threaded for more consistent media processing.\n* Haptic feedback support for mobile devices.\n* Accurate system information for mobile devices.\n* Qt audio has been fixed.\n* Analog controller support for Blackberry.\n\n\nADHOC SUPPORT (by Igor Calabria)\n================================\nThis is based on coldbird's code: https://code.google.com/archive/p/aemu/\nAll credit goes to him!\n\nStatus\n------\nCode is a bit of a mess and it's not fully functional yet, I still need to implement\nsome functions and add a upnp lib(really important for people with routers).\n\nI did test it with some games(emulator <-> real psp with the server running locally)\nand it's looking good:\n\n* Worms Open Warfare: Ran just fine, I was able to play a whole match without problems\n* Monster Hunter Freedom Unite: Runs fine too. Gathering Hall and embarking on quests works\n* Dissidia Duodecim 012: Doesn't work. It requires some functions that I haven't implemented\nyet. Also, it uses a port < 1000 and thats reserved for admin apps on linux, running the emu\nas sudo \"solves\" it, but it's far from ideal.\n* Pacman World Rally: Works too.\n\nUpdate (Kyhel) :\n---------------\n* Now compiles on both Mac OSX and Windows. For more details on how to play and build\ngo to see there http://forums.ppsspp.org/showthread.php?tid=3595&pid=59241#pid59241\n* Got it tested windows <-> mac osx <-> psp, it works\n* Monster Hunter 3rd HD works too, as well as God Eater Burst.\n\n\n[comment]: # (LINK_LIST_BEGIN_HERE)\n[#10911]: https://github.com/hrydgard/ppsspp/issues/10911 \"Vulkan: Depalettize in shaders\"\n[#10658]: https://github.com/hrydgard/ppsspp/issues/10658 \"Execute_Prim: Add a smaller \\\"inner interpreter\\\" to speed long up sequences of PRIM commands\"\n[#10855]: https://github.com/hrydgard/ppsspp/issues/10855 \"PPSSPP 1.5.4 on Android. Shortcuts do not work the first time.\"\n[#10465]: https://github.com/hrydgard/ppsspp/issues/10465 \"Allow arm64 jit when memory base is not nicely aligned\"\n[#10921]: https://github.com/hrydgard/ppsspp/issues/10921 \"Add support for File app (file browser) on iOS 11\"\n[#10113]: https://github.com/hrydgard/ppsspp/issues/10113 \"Request a core profile in OpenGL (after 1.5.0)\"\n[#8975]: https://github.com/hrydgard/ppsspp/issues/8975 \"Ad hoc: Band-aid fix for clear peer list. Should fix #7331\"\n[#10413]: https://github.com/hrydgard/ppsspp/issues/10413 \"SDL/X11 Vulkan init\"\n[#10033]: https://github.com/hrydgard/ppsspp/issues/10033 \"VulkanRenderManager - big refactoring of the Vulkan code\"\n[#10049]: https://github.com/hrydgard/ppsspp/issues/10049 \"Vulkan threading tweaks and minor\"\n[#9899]: https://github.com/hrydgard/ppsspp/issues/9899 \"Vulkan state optimizations\"\n[#10145]: https://github.com/hrydgard/ppsspp/issues/10145 \"Android: When creating shortcuts, put the file path in data, not in extras.\"\n[#7459]: https://github.com/hrydgard/ppsspp/issues/7459 \"Thrillville Off The Rails Graphics' issues\"\n[#9901]: https://github.com/hrydgard/ppsspp/issues/9901 \"Initial work on supporting sustained perf mode\"\n[#9997]: https://github.com/hrydgard/ppsspp/issues/9997 \"Create default mapping for unknown control pads in SDL's controller database\"\n[#9698]: https://github.com/hrydgard/ppsspp/issues/9698 \"General crash and hang fixes\"\n[#9674]: https://github.com/hrydgard/ppsspp/issues/9674 \"Implement a few x86 vertexjit optimizations\"\n[#9633]: https://github.com/hrydgard/ppsspp/issues/9633 \"Improve support for mipmaps and related headless fixes\"\n[#9635]: https://github.com/hrydgard/ppsspp/issues/9635 \"SoftGPU: Rasterize triangles in chunks of 4 pixels\"\n[#9560]: https://github.com/hrydgard/ppsspp/issues/9560 \"Allow using any touchId to scroll. Should help #9554.\"\n[#9566]: https://github.com/hrydgard/ppsspp/issues/9566 \"Fix out-of-bounds framebuffer blit on color bind\"\n[#8950]: https://github.com/hrydgard/ppsspp/issues/8950 \"SasAudio: Implement linear interpolation\"\n[#9176]: https://github.com/hrydgard/ppsspp/issues/9176 \"Always prescale uv (\\\"texcoord speedhack\\\")\"\n[#9245]: https://github.com/hrydgard/ppsspp/issues/9245 \"Fix \\\"Akaya Akashiya Ayakashi\\\" umd switch\"\n[#9256]: https://github.com/hrydgard/ppsspp/issues/9256 \"Fix Dies irae Amantes amentes umd switch\"\n[#8965]: https://github.com/hrydgard/ppsspp/issues/8965 \"Port over the Exynos cacheline size fix from Dolphin.\"\n[#8937]: https://github.com/hrydgard/ppsspp/issues/8937 \"Implement W^X-compatible JIT. Hopefully makes JIT work on iOS again\"\n[#8651]: https://github.com/hrydgard/ppsspp/issues/8651 \"Switch Android build to using clang (needs buildbot update)\"\n[#8870]: https://github.com/hrydgard/ppsspp/issues/8870 \"Update to target Android SDK platform 24 (N)\"\n[#8715]: https://github.com/hrydgard/ppsspp/issues/8715 \"Initial texture replacement support\"\n[#8821]: https://github.com/hrydgard/ppsspp/issues/8821 \"Add basic TextureReplacement UI options.\"\n[#8939]: https://github.com/hrydgard/ppsspp/issues/8939 \"Add Frame Advance\"\n[#8945]: https://github.com/hrydgard/ppsspp/issues/8945 \"Add Display Recording and Audio Dumping to Desktop\"\n[#8801]: https://github.com/hrydgard/ppsspp/issues/8801 \"Improve performance on Raspberry Pi (and maybe other Linux)\"\n[#8845]: https://github.com/hrydgard/ppsspp/issues/8845 \"Add UI for wifi remote disc streaming\"\n[#8601]: https://github.com/hrydgard/ppsspp/issues/8601 \"Vulkan rendering backend. Early Work-In-Progress\"\n[#8725]: https://github.com/hrydgard/ppsspp/issues/8725 \"IR Interpreter\"\n[#8889]: https://github.com/hrydgard/ppsspp/issues/8889 \"Initial support for memstick insert/remove\"\n[#8949]: https://github.com/hrydgard/ppsspp/issues/8949 \"Adds --PS3 comand line option for PS3 controller support on SDL.\"\n[#8900]: https://github.com/hrydgard/ppsspp/issues/8900 \"Wrap text in many places where it makes sense\"\n[#8898]: https://github.com/hrydgard/ppsspp/issues/8898 \"UI: Scale option text down when there's no space\"\n[#8812]: https://github.com/hrydgard/ppsspp/issues/8812 \"Include screenshots in compatibility reports\"\n[#8818]: https://github.com/hrydgard/ppsspp/issues/8818 \"CWC improvements/fixes\"\n[#8686]: https://github.com/hrydgard/ppsspp/issues/8686 \"Interpolate bezier patch colors/UVs using bernstein\"\n[#8757]: https://github.com/hrydgard/ppsspp/issues/8757 \"Save FBOs on decimate when a safe size is known\"\n[#8804]: https://github.com/hrydgard/ppsspp/issues/8804 \"Download single-use renders right away\"\n[#8793]: https://github.com/hrydgard/ppsspp/issues/8793 \"Correct some scePsmf info retrieval funcs and error handling\"\n[#8803]: https://github.com/hrydgard/ppsspp/issues/8803 \"Reject invalid MPEG puts for certain lib versions\"\n[#8867]: https://github.com/hrydgard/ppsspp/issues/8867 \"Improve mpeg parsing / corruption issues\"\n[#8914]: https://github.com/hrydgard/ppsspp/issues/8914 \"Psmf: Ignore stream size with old PsmfPlayer libs\"\n[#8868]: https://github.com/hrydgard/ppsspp/issues/8868 \"Return error when trying to close files with pending operations\"\n[#8884]: https://github.com/hrydgard/ppsspp/issues/8884 \"Better support zh_gb.pgf\"\n[#8932]: https://github.com/hrydgard/ppsspp/issues/8932 \"Font: Draw nothing for chars before first glyph\"\n[#8934]: https://github.com/hrydgard/ppsspp/issues/8934 \"Io: Do not delay on file seek\"\n[#8813]: https://github.com/hrydgard/ppsspp/issues/8813 \"Enable extra ram for The Elder Scrolls Travels Oblivion USA Beta and Melodie alpha\"\n[#8701]: https://github.com/hrydgard/ppsspp/issues/8701 \"Correct dependency handling when loading modules\"\n[#8960]: https://github.com/hrydgard/ppsspp/issues/8960 \"Fix scePowerSetClockFrequency timing\"\n[#8882]: https://github.com/hrydgard/ppsspp/issues/8882 \"Add custom log expressions to the debugger\"\n[#8762]: https://github.com/hrydgard/ppsspp/issues/8762 \"Add more GE debugger features\"\n[#8968]: https://github.com/hrydgard/ppsspp/issues/8968 \"Android: Add both a lost and restore phase\"\n[#12224]: https://github.com/hrydgard/ppsspp/issues/12224 \"Vulkan: Add missing barrier between multiple passes to the same target.\"\n[#12242]: https://github.com/hrydgard/ppsspp/issues/12242 \"Vulkan: Automatically merge render passes to the same target when possible\"\n[#12262]: https://github.com/hrydgard/ppsspp/issues/12262 \"Vulkan: Implement basic integrated GPU profiling.\"\n[#12266]: https://github.com/hrydgard/ppsspp/issues/12266 \"Vulkan: Further improvements to GPU profiling\"\n[#12227]: https://github.com/hrydgard/ppsspp/issues/12227 \"Vulkan/GL: Set all four coordinates to NaN instead of just W.\"\n[#12217]: https://github.com/hrydgard/ppsspp/issues/12217 \"Merge vfpu-dot changes and add compat flag for Tekken\"\n[#11299]: https://github.com/hrydgard/ppsspp/issues/11299 \"Warrior Orochi Enemy Missing\"\n[#11179]: https://github.com/hrydgard/ppsspp/issues/11179 \"Tomb Raider Anniversary jump to horizontal bar issue\"\n[#12160]: https://github.com/hrydgard/ppsspp/issues/12160 \"GPU: Forget pause signal on new list\"\n[#12147]: https://github.com/hrydgard/ppsspp/issues/12147 \"Handle audio SRC mixing more correctly\"\n[#12216]: https://github.com/hrydgard/ppsspp/issues/12216 \"Cant get Invizimals to work on PPSSPP (Video source not rendered)\"\n[#12036]: https://github.com/hrydgard/ppsspp/issues/12036 \"Several UWP fixes\"\n[#12005]: https://github.com/hrydgard/ppsspp/issues/12005 \"Correct mp3 looping, frame num, and sum decoded\"\n[#12121]: https://github.com/hrydgard/ppsspp/issues/12121 \"Return errors on Audio2 release when channel busy\"\n[#9956]: https://github.com/hrydgard/ppsspp/issues/9956 \"Audio crackle/distortion in Final Fantasy Tactics\"\n[#12278]: https://github.com/hrydgard/ppsspp/issues/12278 \"UsbCam/jpeg: Cleanups, notify framebuffer manager\"\n[#8521]: https://github.com/hrydgard/ppsspp/issues/8521 \"PSP Camera Support (Android)\"\n[#11938]: https://github.com/hrydgard/ppsspp/issues/11938 \"Add texture dump/replace hotkeys.\"\n[#11995]: https://github.com/hrydgard/ppsspp/issues/11995 \"Fix VS2019 builds and remove _xp dependency\"\n[#12069]: https://github.com/hrydgard/ppsspp/issues/12069 \"Fix avi dump feature\"\n[#12124]: https://github.com/hrydgard/ppsspp/issues/12124 \"Audio: Add volume for alternate speed\"\n[#12173]: https://github.com/hrydgard/ppsspp/issues/12173 \"Ignore mapped mouse input for UI\"\n[#12176]: https://github.com/hrydgard/ppsspp/issues/12176 \"Mouse improvements\"\n[#12175]: https://github.com/hrydgard/ppsspp/issues/12175 \"UI: Allow installing texture packs from zips\"\n[#12182]: https://github.com/hrydgard/ppsspp/issues/12182 \"Add right analog for touch controls.\"\n[#12333]: https://github.com/hrydgard/ppsspp/issues/12333 \"Android OpenSL initial queue fix\"\n[#12342]: https://github.com/hrydgard/ppsspp/issues/12342 \"Serious MGS Peace Walker bug fixed post-1.8.0\"\n[#11802]: https://github.com/hrydgard/ppsspp/issues/11802 \"Windows: Detect Vulkan in separate process\"\n[#11744]: https://github.com/hrydgard/ppsspp/issues/11744 \"VulkanDeviceAlloc: Memorytype per slab\"\n[#11747]: https://github.com/hrydgard/ppsspp/issues/11747 \"Vk validation fixes, plus PowerVR swapchain hack\"\n[#11780]: https://github.com/hrydgard/ppsspp/issues/11780 \"Naruto Shippuden Ultimate Ninja 3: Probably a better fix for the video hang issue.\"\n[#11567]: https://github.com/hrydgard/ppsspp/issues/11567 \"Correct shade mapping when light pos is all zeros\"\n[#11574]: https://github.com/hrydgard/ppsspp/issues/11574 \"Correct various light param issues based on tests\"\n[#11577]: https://github.com/hrydgard/ppsspp/issues/11577 \"Correct provoking vertex for lighting when flat shading\"\n[#11878]: https://github.com/hrydgard/ppsspp/issues/11878 \"Sonic Rivals controls semi-broken\"\n[#11798]: https://github.com/hrydgard/ppsspp/issues/11798 \"User report: Long notes in Rock Band Unplugged are not registered correctly\"\n[#11879]: https://github.com/hrydgard/ppsspp/issues/11879 \"Fix apparent bug in #11094, fixes #11878 and likely #11798\"\n[#11172]: https://github.com/hrydgard/ppsspp/issues/11172 \"handle cullface, help to #10597\"\n[#11813]: https://github.com/hrydgard/ppsspp/issues/11813 \"Core: Fix lag sync on game start / after pause\"\n[#11425]: https://github.com/hrydgard/ppsspp/issues/11425 \"[Refactoring] Improve spline/bezier.\"\n[#11451]: https://github.com/hrydgard/ppsspp/issues/11451 \"SDL/Vulkan window resize improvements\"\n[#11507]: https://github.com/hrydgard/ppsspp/issues/11507 \"Improve support of Qt + USING_GLES2\"\n[#11537]: https://github.com/hrydgard/ppsspp/issues/11537 \"CMake: Allow disabling Wayland support with USE_WAYLAND_WSI\"\n[#11541]: https://github.com/hrydgard/ppsspp/issues/11541 \"CMake: Fix linking X11 when using EGL and not fbdev\"\n[#11632]: https://github.com/hrydgard/ppsspp/issues/11632 \"SDL: Allow toggling fullscreen for GLES2 on desktops.\"\n[#11746]: https://github.com/hrydgard/ppsspp/issues/11746 \"CMakeLists: fix EGL detection for ARM devices\"\n[#11806]: https://github.com/hrydgard/ppsspp/issues/11806 \"SDL: Force fullscreen desktop for USING_FBDEV\"\n[#11845]: https://github.com/hrydgard/ppsspp/issues/11845 \"EGL: Avoid HDR mode. Uses unknownbrackets' changes from #11839.\"\n[#11523]: https://github.com/hrydgard/ppsspp/issues/11523 \"Add frameskip setting\"\n[#11530]: https://github.com/hrydgard/ppsspp/issues/11530 \"Make DXT alpha and color calculation more accurate\"\n[#11618]: https://github.com/hrydgard/ppsspp/issues/11618 \"Io: Ensure sign extension for error codes\"\n[#11531]: https://github.com/hrydgard/ppsspp/issues/11531 \"WIP: Virtual readbacks\"\n[#11553]: https://github.com/hrydgard/ppsspp/issues/11553 \"Remove constraint that virtual framebuffers have to represent VRAM.\"\n[#11776]: https://github.com/hrydgard/ppsspp/issues/11776 \"Only gate really expensive block transfers behind the setting.\"\n[#11543]: https://github.com/hrydgard/ppsspp/issues/11543 \"GPU: Dirty frag shader on depth write\"\n[#11620]: https://github.com/hrydgard/ppsspp/issues/11620 \"Optimize out some stencil emulation, try to avoid depth write\"\n[#11584]: https://github.com/hrydgard/ppsspp/issues/11584 \"D3D11: Allow shader blend to self\"\n[#11621]: https://github.com/hrydgard/ppsspp/issues/11621 \"Vulkan: Avoid using Vulkan\"\n[#11658]: https://github.com/hrydgard/ppsspp/issues/11658 \"Windows: Hide Vulkan/D3D11 if not available\"\n[#11665]: https://github.com/hrydgard/ppsspp/issues/11665 \"Remove the \\\"Disable stencil test\\\" hack setting\"\n[#11666]: https://github.com/hrydgard/ppsspp/issues/11666 \"Remove \\\"Timer Hack\\\" setting.\"\n[#11667]: https://github.com/hrydgard/ppsspp/issues/11667 \"Remove outdated TrueColor setting.\"\n[#11689]: https://github.com/hrydgard/ppsspp/issues/11689 \"Correct remote disc streaming with ipv6\"\n[#11700]: https://github.com/hrydgard/ppsspp/issues/11700 \"http: Report errors reading discs\"\n[#11691]: https://github.com/hrydgard/ppsspp/issues/11691 \"WIP: Vulkan/adreno: Apply workaround for Harvest Moon issue #10421\"\n[#11694]: https://github.com/hrydgard/ppsspp/issues/11694 \"Vulkan: Limit stencil workaround to Adreno 5xx\"\n[#11720]: https://github.com/hrydgard/ppsspp/issues/11720 \"Try to support Qt keyboard input directly. Fixes #11653\"\n[#11807]: https://github.com/hrydgard/ppsspp/issues/11807 \"Qt: Re-enable Load button to browse for file\"\n[#11808]: https://github.com/hrydgard/ppsspp/issues/11808 \"Qt: Correct text bind on first draw of string\"\n[#11740]: https://github.com/hrydgard/ppsspp/issues/11740 \"Fix for weird Xbox B button behavior, see #10948.\"\n[#11767]: https://github.com/hrydgard/ppsspp/issues/11767 \"Compat: Force realistic UMD timing for F1 2006.\"\n[#11785]: https://github.com/hrydgard/ppsspp/issues/11785 \"GPU: Correct depth clamp range in range cull\"\n[#11859]: https://github.com/hrydgard/ppsspp/issues/11859 \"GPU: Handle cull range properly drawing at offset\"\n[#11712]: https://github.com/hrydgard/ppsspp/issues/11712 \"GLES: Detect Vivante GPU, disable vertex range culling\"\n[#11773]: https://github.com/hrydgard/ppsspp/issues/11773 \"D3D9: Disable range culling on really old NVIDIA cards\"\n[#11787]: https://github.com/hrydgard/ppsspp/issues/11787 \"GLES: Disable range culling on VideoCore/Vivante\"\n[#11812]: https://github.com/hrydgard/ppsspp/issues/11812 \"Android: Allow using a custom Memory Stick storage path\"\n[#11822]: https://github.com/hrydgard/ppsspp/issues/11822 \"interp: Correct vocp prefix handling\"\n[#11835]: https://github.com/hrydgard/ppsspp/issues/11835 \"Correct vocp / vsocp prefix handling\"\n[#11831]: https://github.com/hrydgard/ppsspp/issues/11831 \"Bundle libSDL inside app on macOS, fixes #11830\"\n[#11842]: https://github.com/hrydgard/ppsspp/issues/11842 \"Win32 handle leak fix\"\n[#11508]: https://github.com/hrydgard/ppsspp/issues/11508 \"Savedata: Write only one secure entry\"\n[#11441]: https://github.com/hrydgard/ppsspp/issues/11441 \"Vulkan: Apply Themaister's patch, removing illegal pre-transitions of swapchain images. Fixes #11417 (crash on Note 9)\"\n[#11393]: https://github.com/hrydgard/ppsspp/issues/11393 \"Implement vertex range culling\"\n[#10973]: https://github.com/hrydgard/ppsspp/issues/10973 \"handle cull mode\"\n[#11182]: https://github.com/hrydgard/ppsspp/issues/11182 \"GLES: Use accurate GLSL ver in postshader convert\"\n[#11438]: https://github.com/hrydgard/ppsspp/issues/11438 \"Allow WASAPI device switching\"\n[#11461]: https://github.com/hrydgard/ppsspp/issues/11461 \"Windows: Detect DirectInput devices after launch\"\n[#11307]: https://github.com/hrydgard/ppsspp/issues/11307 \"Enable Discord integration for Mac and Linux.\"\n[#10909]: https://github.com/hrydgard/ppsspp/issues/10909 \"WebSocket based debugger interface\"\n[#11447]: https://github.com/hrydgard/ppsspp/issues/11447 \"Avoid calling any GL calls during shutdown on Android. Should help #11063\"\n[#11350]: https://github.com/hrydgard/ppsspp/issues/11350 \"TexCache: Optimize DXT3/DXT5 decode to single pass\"\n[#13023]: https://github.com/hrydgard/ppsspp/issues/13023 \"Add sysclib_strstr\"\n[#13038]: https://github.com/hrydgard/ppsspp/issues/13038 \"Add sysclib_strncmp,sysclib_memmove\"\n[#13004]: https://github.com/hrydgard/ppsspp/issues/13004 \"Warp some ThreadManForKernel and sceKernelExitVSHKernel\"\n[#13026]: https://github.com/hrydgard/ppsspp/issues/13026 \"Add some ThreadManForKernel nids\"\n[#12225]: https://github.com/hrydgard/ppsspp/issues/12225 \"Rebased: Wrap some SysMemForKernel's nids, fixing #7960\"\n[#13028]: https://github.com/hrydgard/ppsspp/issues/13028 \"Real support Code Geass: Lost Colors chinese patched version\"\n[#13007]: https://github.com/hrydgard/ppsspp/issues/13007 \"Real support \\\"Hatsune Miku Project Diva Extend\\\" chinese patched version\"\n[#12817]: https://github.com/hrydgard/ppsspp/issues/12817 \"Unification of the menu of Linux and Windows versions\"\n[#12612]: https://github.com/hrydgard/ppsspp/issues/12612 \"SDL analog mouse input\"\n[#12623]: https://github.com/hrydgard/ppsspp/issues/12623 \"Add toggle flag to combo button\"\n[#12660]: https://github.com/hrydgard/ppsspp/issues/12660 \"GPU: Add setting to control inflight frame usage\"\n[#12637]: https://github.com/hrydgard/ppsspp/issues/12637 \"Region flag and game ID on game selection screen\"\n[#12646]: https://github.com/hrydgard/ppsspp/issues/12646 \"Resizable game icons\"\n[#12643]: https://github.com/hrydgard/ppsspp/issues/12643 \"Toggle mute button\"\n[#12601]: https://github.com/hrydgard/ppsspp/issues/12601 \"Add rapid fire to touch control\"\n[#12552]: https://github.com/hrydgard/ppsspp/issues/12552 \"Qt/macOS: enable HiDPI ( retina display ) support\"\n[#12517]: https://github.com/hrydgard/ppsspp/issues/12517 \"Touch control grid snap\"\n[#12749]: https://github.com/hrydgard/ppsspp/issues/12749 \"Auto rotating analog\"\n[#12756]: https://github.com/hrydgard/ppsspp/issues/12756 \"Skip deadzone option on tilt\"\n[#12818]: https://github.com/hrydgard/ppsspp/issues/12818 \"Add option to prevent Mipmaps from being dumped\"\n[#12486]: https://github.com/hrydgard/ppsspp/issues/12486 \"Rebindable touch right analog\"\n[#12718]: https://github.com/hrydgard/ppsspp/issues/12718 \"Vpl: Correct allocation order when splitting block\"\n[#12746]: https://github.com/hrydgard/ppsspp/issues/12746 \"GPU: Assume a scissor of 481x273 is a mistake\"\n[#12873]: https://github.com/hrydgard/ppsspp/issues/12873 \"Vulkan: Framebuffer manager: Use an allocator for \\\"MakePixelTexture\\\" images.\"\n[#12898]: https://github.com/hrydgard/ppsspp/issues/12898 \"[Android] [Mali GPU] [OpenGL] Lastest build blackscreen on buffered rendering mode\"\n[#12443]: https://github.com/hrydgard/ppsspp/issues/12443 \"Darkstalkers Chronicle: Add specializations and speedhacks to get it kinda playable\"\n[#12607]: https://github.com/hrydgard/ppsspp/issues/12607 \"QT API for camera (Linux/macOS)\"\n[#12580]: https://github.com/hrydgard/ppsspp/issues/12580 \"Add camera support for linux (V4L2)\"\n[#12572]: https://github.com/hrydgard/ppsspp/issues/12572 \"Add camera support for windows.\"\n[#12602]: https://github.com/hrydgard/ppsspp/issues/12602 \"Add option to improve frame pacing through duplicate frames if below 60hz.\"\n[#12659]: https://github.com/hrydgard/ppsspp/issues/12659 \"Support vsync in all hardware backends, support runtime update\"\n[#12474]: https://github.com/hrydgard/ppsspp/issues/12474 \"Egl bug on rpi4 with master mesa?\"\n[#12583]: https://github.com/hrydgard/ppsspp/issues/12583 \"macOS: Initial support for vulkan on macOS ( MoltenVK )\"\n[#12519]: https://github.com/hrydgard/ppsspp/issues/12519 \"Ghost In The Shell - Stand Alone Complex (ULUS10020) - Black Textures and missing screens.\"\n[#12876]: https://github.com/hrydgard/ppsspp/issues/12876 \"Windows: Add safety checks to WASAPI code\"\n[#12908]: https://github.com/hrydgard/ppsspp/issues/12908 \"Fix \\\"Improved compatibility of sceGeListEnQueue: verify that stackDepth < 256\\\"\"\n[#8714]: https://github.com/hrydgard/ppsspp/issues/8714 \"Allow > 5x PSP resolution for devices like iPad Pro 12.9\"\n[#12449]: https://github.com/hrydgard/ppsspp/issues/12449 \"Reintroduce Cardboard VR\"\n[#12912]: https://github.com/hrydgard/ppsspp/issues/12912 \"Add CWCHEAT for postprocessing\"\n[#12816]: https://github.com/hrydgard/ppsspp/issues/12816 \"Implement Xinput vibration CWCheat (PPSSPP specific 0xA code type)\"\n[#12901]: https://github.com/hrydgard/ppsspp/issues/12901 \"Post shader setting uniform\"\n[#12905]: https://github.com/hrydgard/ppsspp/issues/12905 \"Allow chained post-processing shaders\"\n[#12667]: https://github.com/hrydgard/ppsspp/issues/12667 \"Chat feature based on Adenovan's Rechat branch\"\n[#12702]: https://github.com/hrydgard/ppsspp/issues/12702 \"PPGe: Use TextDrawer for save UI if available\"\n[#12920]: https://github.com/hrydgard/ppsspp/issues/12920 \"Remove the Audio Resampling setting (now always on).\"\n[#12916]: https://github.com/hrydgard/ppsspp/issues/12916 \"More audio buffering fixes (primarily affects SDL)\"\n[#12685]: https://github.com/hrydgard/ppsspp/issues/12685 \"UI: Simple joystick navigation. Fixes #10996.\"\n[#12779]: https://github.com/hrydgard/ppsspp/issues/12779 \"Support drawing around notches on Android displays. Fixes #12261\"\n[#12652]: https://github.com/hrydgard/ppsspp/issues/12652 \"ScanForFunctions: Speed up game loading\"\n[#12462]: https://github.com/hrydgard/ppsspp/issues/12462 \"Vulkan: Enable renderpass merging for all games\"\n[#12695]: https://github.com/hrydgard/ppsspp/issues/12695 \"New heuristic for getting rid of unnecessary \\\"antialias-lines\\\".\"\n[#11898]: https://github.com/hrydgard/ppsspp/issues/11898 \"Strike Witches - Hakugin no Tsubasa  missing intro video\"\n[#12941]: https://github.com/hrydgard/ppsspp/issues/12941 \"Vulkan: Deal with the reformat clear better\"\n[#12857]: https://github.com/hrydgard/ppsspp/issues/12857 \"Mumbo Jumbo games freeze on loading screen since v1.6\"\n[#12635]: https://github.com/hrydgard/ppsspp/issues/12635 \"Kernel: Delay better in sceKernelReferThreadStatus\"\n[#12670]: https://github.com/hrydgard/ppsspp/issues/12670 \"Attempts to replace 0 frame width with valid frame width.(sceMpegAvcCsc)\"\n[#12800]: https://github.com/hrydgard/ppsspp/issues/12800 \"x86jit: Force INF * 0 to +NAN\"\n[#13071]: https://github.com/hrydgard/ppsspp/issues/13071 \"D3D9: Fix a sign mistake generating the projection matrix.\"\n[#13076]: https://github.com/hrydgard/ppsspp/issues/13076 \"Add some excessive null checks to GameScreen::render()\"\n[#13057]: https://github.com/hrydgard/ppsspp/issues/13057 \"The 1.10 Android mystery crash thread!\"\n[#13077]: https://github.com/hrydgard/ppsspp/issues/13077 \"SaveState: Make sure to default init net data\"\n[#13096]: https://github.com/hrydgard/ppsspp/issues/13096 \"Revert \\\"Remove the I/O on Thread option - treat it as always on.\\\"\"\n[#13095]: https://github.com/hrydgard/ppsspp/issues/13095 \"http: Check cancel flag more often\"\n[#13093]: https://github.com/hrydgard/ppsspp/issues/13093 \"Add a try/catch to Android camera device listing.\"\n[#13094]: https://github.com/hrydgard/ppsspp/issues/13094 \"Camera initialization crash fix\"\n[#13125]: https://github.com/hrydgard/ppsspp/issues/13125 \"Refactor and fix touch control layout screen for notch\"\n[#13633]: https://github.com/hrydgard/ppsspp/issues/13633 \"Downstream Panic (US) New Game crashes\"\n[#13969]: https://github.com/hrydgard/ppsspp/issues/13969 \"Io: Don't allow async close while async busy\"\n[#13368]: https://github.com/hrydgard/ppsspp/issues/13368 \"Reschedule after resuming thread from suspend.\"\n[#13204]: https://github.com/hrydgard/ppsspp/issues/13204 \"Dissidia Final Fantasy Chinese patch invalid address\"\n[#8526]: https://github.com/hrydgard/ppsspp/issues/8526 \"Xyanide Resurrection freezing\"\n[#4671]: https://github.com/hrydgard/ppsspp/issues/4671 \"Capcom Classic Collection Reloaded stuck in return game\"\n[#6025]: https://github.com/hrydgard/ppsspp/issues/6025 \"Dream Club Portable crash after select girl\"\n[#13298]: https://github.com/hrydgard/ppsspp/issues/13298 \"Fix sceKernelExitThread\"\n[#13297]: https://github.com/hrydgard/ppsspp/issues/13297 \"Namco Museum Vol. 2 - ULJS00047 infinite loading in some game\"\n[#9523]: https://github.com/hrydgard/ppsspp/issues/9523 \"Namco Museum - Battle Collection - ULUS100035 loading problem\"\n[#5213]: https://github.com/hrydgard/ppsspp/issues/5213 \"Hanayaka Nari Wa ga Ichizoku strange MP3 mono voice\"\n[#12761]: https://github.com/hrydgard/ppsspp/issues/12761 \"[Android][OpenGL&Vulkan][Save issue] Assassin's Creed : Bloodlines (ULJM05571)\"\n[#13335]: https://github.com/hrydgard/ppsspp/issues/13335 \"Support for loading game-specific plugins\"\n[#12924]: https://github.com/hrydgard/ppsspp/issues/12924 \"Postprocessing: User chain support\"\n[#13654]: https://github.com/hrydgard/ppsspp/issues/13654 \"Expose the \\\"Lower resolution for effects\\\" setting in libretro.\"\n[#13695]: https://github.com/hrydgard/ppsspp/issues/13695 \"Add developer setting \\\"Show on-screen messages\\\". Uncheck to hide them.\"\n[#13866]: https://github.com/hrydgard/ppsspp/issues/13866 \"SaveState: Allow rewind on mobile\"\n[#13355]: https://github.com/hrydgard/ppsspp/issues/13355 \"Refactor framebuffer attachment. Fixes Test Drive Unlimited performance\"\n[#13556]: https://github.com/hrydgard/ppsspp/issues/13556 \"D3D11 depth texture support\"\n[#13262]: https://github.com/hrydgard/ppsspp/issues/13262 \"Implement texturing from depth buffers (Vulkan only so far)\"\n[#13986]: https://github.com/hrydgard/ppsspp/issues/13986 \"Vulkan: Add MMPX upscaling texture shader\"\n[#13514]: https://github.com/hrydgard/ppsspp/issues/13514 \"Vulkan: Automatically generate mipmaps for replaced/scaled textures\"\n[#13235]: https://github.com/hrydgard/ppsspp/issues/13235 \"Vulkan: Allow custom texture upscaling shaders\"\n[#13526]: https://github.com/hrydgard/ppsspp/issues/13526 \"VFPU: Compute sines and cosines in double precision.\"\n[#13706]: https://github.com/hrydgard/ppsspp/issues/13706 \"Add back the old implementation of vfpu_sin/cos/sincos.\"\n[#12336]: https://github.com/hrydgard/ppsspp/issues/12336 \"Microphone support\"\n[#13792]: https://github.com/hrydgard/ppsspp/issues/13792 \"Fix UWP audio and a hang bug\"\n[#13239]: https://github.com/hrydgard/ppsspp/issues/13239 \"Add sound effects for PPSSPP interface navigation\"\n[#13897]: https://github.com/hrydgard/ppsspp/issues/13897 \"LittleBigPlanet - Game Not Loading, Blue Screen (iOS, Unplayable)\"\n[#13172]: https://github.com/hrydgard/ppsspp/issues/13172 \"Generalized multi-instance\"\n[#13092]: https://github.com/hrydgard/ppsspp/issues/13092 \"Bad memory access handling improvements\"\n[#11795]: https://github.com/hrydgard/ppsspp/issues/11795 \"Exception handler - catch bad memory accesses\"\n[#7124]: https://github.com/hrydgard/ppsspp/issues/7124 \"Yu-Gi-Oh! GX Tag Force Card summoning (card cut-off / cropped)\"\n[#13760]: https://github.com/hrydgard/ppsspp/issues/13760 \"Fix car lighting issues in DiRT 2.\"\n[#13640]: https://github.com/hrydgard/ppsspp/issues/13640 \"Fix car reflections in Outrun\"\n[#13636]: https://github.com/hrydgard/ppsspp/issues/13636 \"Reinterpret framebuffer formats as needed. Outrun reflections partial fix\"\n[#14117]: https://github.com/hrydgard/ppsspp/issues/14117 \"[Adhoc] Fix lob\"\n[#14106]: https://github.com/hrydgard/ppsspp/issues/14106 \"[Adhoc] Fix frozen (0 FPS) issue on Kao Challengers and Asterix & Obelix XX\"\n[#14078]: https://github.com/hrydgard/ppsspp/issues/14078 \"PPGe: Decimate text images properly\"\n[#14101]: https://github.com/hrydgard/ppsspp/issues/14101 \"Menu audio glitchfix\"\n[#14092]: https://github.com/hrydgard/ppsspp/issues/14092 \"SaveState: Prevent crash on bad cookie marker\"\n[#14091]: https://github.com/hrydgard/ppsspp/issues/14091 \"Only allow sceMpegGetAvcAu warmup for God Eater Series\"\n[#14089]: https://github.com/hrydgard/ppsspp/issues/14089 \"GL: Call CreateDeviceObjects *after* updating render_.\"\n[#14085]: https://github.com/hrydgard/ppsspp/issues/14085 \"Handle exec addr errors better - don't let IgnoreBadMemoryAccesses skip dispatcher exceptions\"\n[#14132]: https://github.com/hrydgard/ppsspp/issues/14132 \"Io: Truncate reads/writes to valid memory\"\n[#14134]: https://github.com/hrydgard/ppsspp/issues/14134 \"Android: Ensure shutdown waits for render\"\n[#14129]: https://github.com/hrydgard/ppsspp/issues/14129 \"GPU: Force reinterpret off without copy image\"\n[#11997]: https://github.com/hrydgard/ppsspp/issues/11997 \"Android 12 scoped storage hell\"\n[#5099]: https://github.com/hrydgard/ppsspp/issues/5099 \"IOS touch controls problems.\"\n[#14053]: https://github.com/hrydgard/ppsspp/issues/14053 \"Toggle screenshot minor issue.\"\n[#14176]: https://github.com/hrydgard/ppsspp/issues/14176 \"Remove deprecated API calls for new FFmpeg 4.3.x\"\n[#14188]: https://github.com/hrydgard/ppsspp/issues/14188 \"Additional fixes for FFmpeg 3.1+\"\n[#14199]: https://github.com/hrydgard/ppsspp/issues/14199 \"Mpeg: Set low latency flag for video decode\"\n[#14145]: https://github.com/hrydgard/ppsspp/issues/14145 \"libretro: Remove \\\"Unsafe FuncReplacements\\\" option.\"\n[#13864]: https://github.com/hrydgard/ppsspp/issues/13864 \"Vulkan: Remove #10097 hack for newer AMD drivers\"\n[#14201]: https://github.com/hrydgard/ppsspp/issues/14201 \"Add iOS version detection, turn off JIT on bootup if >= 14.3.\"\n[#14241]: https://github.com/hrydgard/ppsspp/issues/14241 \"iOS: Try a different JIT detection method, thanks Halo-Michael.\"\n[#14317]: https://github.com/hrydgard/ppsspp/issues/14317 \"Window size restarts on closing\"\n[#8288]: https://github.com/hrydgard/ppsspp/issues/8288 \"NBA live 08 Invalid address and hang\"\n[#13252]: https://github.com/hrydgard/ppsspp/issues/13252 \"Open Season Title Screen does not display\"\n[#14127]: https://github.com/hrydgard/ppsspp/issues/14127 \"Metal Gear Solid Peace Walker Chinese Patched blue screen\"\n[#14271]: https://github.com/hrydgard/ppsspp/issues/14271 \"Ape Academy 2 is broken on versions after 1.8.0(?) - tested on latest nightly and 1.11.3\"\n[#14789]: https://github.com/hrydgard/ppsspp/issues/14789 \"Add new texture filtering mode \\\"Auto Max Quality\\\"\"\n[#13741]: https://github.com/hrydgard/ppsspp/issues/13741 \"Princess Maker 5 Portable half screen in Vulkan\"\n[#14167]: https://github.com/hrydgard/ppsspp/issues/14167 \"[Android] Pro Yakyu Spirits 2010 (NPJH50234): Rendering errors with hardware transform off\"\n[#14230]: https://github.com/hrydgard/ppsspp/issues/14230 \"Support texture replacement filtering overrides\"\n[#13759]: https://github.com/hrydgard/ppsspp/issues/13759 \"Yarudora Portable: Double Cast\"\n[#13146]: https://github.com/hrydgard/ppsspp/issues/13146 \"Sims 2 Castaway/Pets EA Logo glitched out - 1.10.2\"\n[#14209]: https://github.com/hrydgard/ppsspp/issues/14209 \"Fix Size & Position jpn0.pgf/ltn0.pgf/ltn2.pgf/ltn4.pgf/ltn6.pgf\"\n[#14042]: https://github.com/hrydgard/ppsspp/issues/14042 \"Implement basic depth texturing for OpenGL\"\n[#14966]: https://github.com/hrydgard/ppsspp/issues/14966 \"Config: Correct cardboard setting ini load\"\n[#14768]: https://github.com/hrydgard/ppsspp/issues/14768 \"Fix the math in cardboard VR mode for wide aspect ratios\"\n[#14069]: https://github.com/hrydgard/ppsspp/issues/14069 \"Mini-Map in Z.H.P. Updates Incorrectly Without Software Rendering\"\n[#14879]: https://github.com/hrydgard/ppsspp/issues/14879 \"vertexjit: Correct morph flag alpha check assert\"\n[#14711]: https://github.com/hrydgard/ppsspp/issues/14711 \"Sas: Add option to control reverb volume\"\n[#14313]: https://github.com/hrydgard/ppsspp/issues/14313 \"Add a setting for choosing background animation in PPSSPP's menus\"\n[#14818]: https://github.com/hrydgard/ppsspp/issues/14818 \"Focus based moving background\"\n[#14810]: https://github.com/hrydgard/ppsspp/issues/14810 \"Wave animation\"\n[#14347]: https://github.com/hrydgard/ppsspp/issues/14347 \"UI: Add BG animation for recent games\"\n[#14000]: https://github.com/hrydgard/ppsspp/issues/14000 \"Add CRC32 calc\"\n[#14041]: https://github.com/hrydgard/ppsspp/issues/14041 \"UI: Add button to show CRC on feedback screen\"\n[#14224]: https://github.com/hrydgard/ppsspp/issues/14224 \"Add a Storage tab to System Information with some path info\"\n[#14238]: https://github.com/hrydgard/ppsspp/issues/14238 \"UI: Wrap long info items and cleanup storage display\"\n[#14056]: https://github.com/hrydgard/ppsspp/issues/14056 \"Track memory allocations and writes for debug info\"\n[#14237]: https://github.com/hrydgard/ppsspp/issues/14237 \"Add initial search to savedata manager\"\n[#14528]: https://github.com/hrydgard/ppsspp/issues/14528 \"Postshader: Let shaders use the previous frame\"\n[#14548]: https://github.com/hrydgard/ppsspp/issues/14548 \"Add some PPSSPP's Japanese keyboard\"\n[#14708]: https://github.com/hrydgard/ppsspp/issues/14708 \"Add Reset button on crash screen, allow load state and related\"\n[#14676]: https://github.com/hrydgard/ppsspp/issues/14676 \"Add savestate undo UI\"\n[#14679]: https://github.com/hrydgard/ppsspp/issues/14679 \"Savestate load undo\"\n[#14697]: https://github.com/hrydgard/ppsspp/issues/14697 \"Add undo last save as well\"\n[#14596]: https://github.com/hrydgard/ppsspp/issues/14596 \"Replace the \\\"Test Analogs\\\" screen with a new screen that lets you directly try the settings.\"\n[#13869]: https://github.com/hrydgard/ppsspp/issues/13869 \"Make combo button more generic\"\n[#12530]: https://github.com/hrydgard/ppsspp/issues/12530 \"Allow tilt input on Z instead of X\"\n[#14769]: https://github.com/hrydgard/ppsspp/issues/14769 \"Add a visual means of control mapping\"\n[#13107]: https://github.com/hrydgard/ppsspp/issues/13107 \"Basic mappable motion gesture\"\n[#14843]: https://github.com/hrydgard/ppsspp/issues/14843 \"DPad drag fixes\"\n[#14480]: https://github.com/hrydgard/ppsspp/issues/14480 \"Configurable analog head size\"\n[#14140]: https://github.com/hrydgard/ppsspp/issues/14140 \"[Adhoc] Fix multiplayer issue on MGS:PW due to detecting an incorrect source port on incoming data\"\n[#14235]: https://github.com/hrydgard/ppsspp/issues/14235 \"[Adhoc] Always enable TCPNoDelay to improve response time\"\n[#14284]: https://github.com/hrydgard/ppsspp/issues/14284 \"[Adhoc] Fix Teenage Mutant Ninja Turtles Multiplayer\"\n[#14290]: https://github.com/hrydgard/ppsspp/issues/14290 \"Fix FlatOut Head On multiplayer.\"\n[#14335]: https://github.com/hrydgard/ppsspp/issues/14335 \"[Adhoc] Prevent flooding Adhoc Server with connection attempts\"\n[#14342]: https://github.com/hrydgard/ppsspp/issues/14342 \"[AdhocMatching] Fix crashing issue when leaving a multiplayer game room\"\n[#14345]: https://github.com/hrydgard/ppsspp/issues/14345 \"[APctl] Fix stuck issue when scanning AP to Recruit on MGS:PW\"\n[#14466]: https://github.com/hrydgard/ppsspp/issues/14466 \"[Adhoc] Fix possible crash issue on blocking socket implementation.\"\n[#14492]: https://github.com/hrydgard/ppsspp/issues/14492 \"[AdhocGameMode] Create GameMode's socket after Master and all Replicas have been created\"\n[#14513]: https://github.com/hrydgard/ppsspp/issues/14513 \"[Adhoc] Reducing HLE delays due to Mutiplayer performance regressions\"\n[#14849]: https://github.com/hrydgard/ppsspp/issues/14849 \"[Adhoc] Fix Socket error 10014 on Windows when hosting a game of Vulcanus Seek and Destroy\"\n[#11974]: https://github.com/hrydgard/ppsspp/issues/11974 \"[Linux] [Vulkan] Toggle fullscreen doesn't update display properly\"\n[#16710]: https://github.com/hrydgard/ppsspp/issues/16710 \"GLES: Use uint for uint shift amounts\"\n[#16709]: https://github.com/hrydgard/ppsspp/issues/16709 \"Correct some shader errors in reporting\"\n[#16708]: https://github.com/hrydgard/ppsspp/issues/16708 \"Additional fixes from both our reports and Play reports\"\n[#16703]: https://github.com/hrydgard/ppsspp/issues/16703 \"Minor fixes based on the latest Google Play report\"\n[#16706]: https://github.com/hrydgard/ppsspp/issues/16706 \"softgpu: Fix lighting with 0 exp\"\n[#16690]: https://github.com/hrydgard/ppsspp/issues/16690 \"softgpu: Detect binner alloc fail and bail\"\n[#16689]: https://github.com/hrydgard/ppsspp/issues/16689 \"Vulkan: Avoid race in compile thread exit\"\n[#16683]: https://github.com/hrydgard/ppsspp/issues/16683 \"Assorted fixes after looking at crash data\"\n[#16685]: https://github.com/hrydgard/ppsspp/issues/16685 \"Replacement: Verify out stride\"\n[#16680]: https://github.com/hrydgard/ppsspp/issues/16680 \"Make sure we don't multithread libzip access\"\n[#16697]: https://github.com/hrydgard/ppsspp/issues/16697 \"Check for valid memory range when doing fast bone matrix loads\"\n[#16681]: https://github.com/hrydgard/ppsspp/issues/16681 \"Cleanup some mic data reading\"\n[#16698]: https://github.com/hrydgard/ppsspp/issues/16698 \"Screen background fixes\"\n[#16684]: https://github.com/hrydgard/ppsspp/issues/16684 \"Enabled CPU breakpoints unchecked\"\n[#16674]: https://github.com/hrydgard/ppsspp/issues/16674 \"Broken menus after using Break on Load\"\n[#16677]: https://github.com/hrydgard/ppsspp/issues/16677 \"D3D11: Fix Draw state issues on pause screen\"\n[#16692]: https://github.com/hrydgard/ppsspp/issues/16692 \"Dialog: Fix confirm/cancel button reversal\"\n[#16645]: https://github.com/hrydgard/ppsspp/issues/16645 \"Fix vertex shader range culling - the driver bug check was wrong.\"\n[#16656]: https://github.com/hrydgard/ppsspp/issues/16656 \"Fix rendering of lines with the same x/y but different z.\"\n[#16673]: https://github.com/hrydgard/ppsspp/issues/16673 \"Show bluescreen properly on memory errors that we failed to ignore.\"\n[#16662]: https://github.com/hrydgard/ppsspp/issues/16662 \"Correct some reversed dependencies, minor other cleanup\"\n[#16655]: https://github.com/hrydgard/ppsspp/issues/16655 \"OpenXR - Force flat mode for Madden NFL games\"\n[#16644]: https://github.com/hrydgard/ppsspp/issues/16644 \"Additional Android cleanup\"\n[#16636]: https://github.com/hrydgard/ppsspp/issues/16636 \"Crash: Ensure we never handle faults in faults\"\n[#16639]: https://github.com/hrydgard/ppsspp/issues/16639 \"Minor initialization cleanup, setup for Vulkan validation layers on Android\"\n[#16599]: https://github.com/hrydgard/ppsspp/issues/16599 \"Vulkan: Remove the new 0th descriptor set, move everything else back to desc set 0\"\n[#16614]: https://github.com/hrydgard/ppsspp/issues/16614 \"GPU: Keep prevPrim_ set on flush\"\n[#16617]: https://github.com/hrydgard/ppsspp/issues/16617 \"GE Debugger: Prevent double init\"\n[#16609]: https://github.com/hrydgard/ppsspp/issues/16609 \"OpenXR - Rendering fixes for a few games\"\n[#16608]: https://github.com/hrydgard/ppsspp/issues/16608 \"Cleanup value corrections in config load/save\"\n[#16615]: https://github.com/hrydgard/ppsspp/issues/16615 \"D3D9: Support old-style user clip planes\"\n[#16619]: https://github.com/hrydgard/ppsspp/issues/16619 \"Debugger: Don't hang memory dump if stepping in GE\"\n[#16595]: https://github.com/hrydgard/ppsspp/issues/16595 \"Transparent background option\"\n[#15960]: https://github.com/hrydgard/ppsspp/issues/15960 \"Enable logic op emulation in-shader\"\n[#16208]: https://github.com/hrydgard/ppsspp/issues/16208 \"GPU: Respect stencil state in shader blend\"\n[#16032]: https://github.com/hrydgard/ppsspp/issues/16032 \"Fix the water in Outrun when no logic ops\"\n[#16024]: https://github.com/hrydgard/ppsspp/issues/16024 \"GPU: Fix simulating logicop with blend and shader\"\n[#15967]: https://github.com/hrydgard/ppsspp/issues/15967 \"Fix BlueToAlpha mode, re-enable it for Outrun and DiRT\"\n[#16142]: https://github.com/hrydgard/ppsspp/issues/16142 \"Implement geometry shader for range culling\"\n[#16504]: https://github.com/hrydgard/ppsspp/issues/16504 \"GPU: Use accurate depth for depth range hack\"\n[#16442]: https://github.com/hrydgard/ppsspp/issues/16442 \"Vulkan: Only use geometry shaders with accurate depth\"\n[#16383]: https://github.com/hrydgard/ppsspp/issues/16383 \"GPU: Automatically reduce depth range on == test\"\n[#16165]: https://github.com/hrydgard/ppsspp/issues/16165 \"Vulkan: Clip clamped depth in geometry shader\"\n[#16162]: https://github.com/hrydgard/ppsspp/issues/16162 \"Implement negative Z clipping in geometry shader\"\n[#16049]: https://github.com/hrydgard/ppsspp/issues/16049 \"GPU: Clip depth properly when also clamping\"\n[#15934]: https://github.com/hrydgard/ppsspp/issues/15934 \"Split the main framebuffer in Killzone, to avoid texturing-from-current-rendertarget\"\n[#16084]: https://github.com/hrydgard/ppsspp/issues/16084 \"Fix Ridge Racer lens flares - ignore stride if texHeight == 1, when matching tex/fb\"\n[#16188]: https://github.com/hrydgard/ppsspp/issues/16188 \"Fix depal bounds with dynamic CLUT. Fixes lens flare glitches in Ridge Racer\"\n[#16115]: https://github.com/hrydgard/ppsspp/issues/16115 \"Add compatibility flag for loading pixels on framebuffer create using nearest filtering\"\n[#16014]: https://github.com/hrydgard/ppsspp/issues/16014 \"Texture depal using CLUT loaded from framebuffers, and more. Fixes Burnout Dominator lens flare\"\n[#16081]: https://github.com/hrydgard/ppsspp/issues/16081 \"Fix green flashes with Burnout Dominator lens flare\"\n[#16076]: https://github.com/hrydgard/ppsspp/issues/16076 \"Don't try to replace or scale CLUT8-on-GPU textures.\"\n[#16073]: https://github.com/hrydgard/ppsspp/issues/16073 \"CLUTs can be loaded from small rectangular textures. Need to linearize.\"\n[#15907]: https://github.com/hrydgard/ppsspp/issues/15907 \"Reinterpret between 32 and 16 bit texture formats\"\n[#15903]: https://github.com/hrydgard/ppsspp/issues/15903 \"Remove support for framebuffers changing stride (already unreachable).\"\n[#15898]: https://github.com/hrydgard/ppsspp/issues/15898 \"Rendering issues in Tantalus Media games (Spongebob, MX ATV, etc)\"\n[#15854]: https://github.com/hrydgard/ppsspp/issues/15854 \"Use sequence numbers instead of a tracking array for depth buffers\"\n[#15853]: https://github.com/hrydgard/ppsspp/issues/15853 \"Framebuffer-bind sequence numbers\"\n[#15888]: https://github.com/hrydgard/ppsspp/issues/15888 \"Copy color from overlapping framebuffers on bind, under certain conditions\"\n[#16127]: https://github.com/hrydgard/ppsspp/issues/16127 \"Fixes for Silent Hill: Origins (depth buffer reassignment, eliminate readback)\"\n[#16454]: https://github.com/hrydgard/ppsspp/issues/16454 \"GPU: Support framebuf depal from rendered CLUT\"\n[#15772]: https://github.com/hrydgard/ppsspp/issues/15772 \"Add support for binding the depth buffer as a color target. Fixes Kurohyo depth sorting\"\n[#15728]: https://github.com/hrydgard/ppsspp/issues/15728 \"Better ways to deal with overlapping render targets\"\n[#15859]: https://github.com/hrydgard/ppsspp/issues/15859 \"Allow binding depth as 565\"\n[#15727]: https://github.com/hrydgard/ppsspp/issues/15727 \"Implement the PSP's equal-size mips \\\"3D texturing\\\"\"\n[#16067]: https://github.com/hrydgard/ppsspp/issues/16067 \"GPU: Account for w properly in lines, fixing width\"\n[#16179]: https://github.com/hrydgard/ppsspp/issues/16179 \"Correct size and YUV order for jpeg decoding\"\n[#16184]: https://github.com/hrydgard/ppsspp/issues/16184 \"GPU: Hook Gods Eater Burst avatar read\"\n[#15924]: https://github.com/hrydgard/ppsspp/issues/15924 \"Add support for reading depth buffers to the PackFramebufferSync function\"\n[#16265]: https://github.com/hrydgard/ppsspp/issues/16265 \"GPU: Respect world matrix and reverse flag w/o normals\"\n[#16043]: https://github.com/hrydgard/ppsspp/issues/16043 \"Consider the Adreno and Mali stencil-discard bugs the same.\"\n[#16379]: https://github.com/hrydgard/ppsspp/issues/16379 \"Fix alpha/stencil replace on Adreno when color masked\"\n[#15822]: https://github.com/hrydgard/ppsspp/issues/15822 \"GPU: Write stencil fail to alpha is RGB masked\"\n[#16358]: https://github.com/hrydgard/ppsspp/issues/16358 \"TexCache: Fix 16->32 colors with CLUT start pos\"\n[#15998]: https://github.com/hrydgard/ppsspp/issues/15998 \"softgpu: Allow almost flat rectangles to go fast\"\n[#16001]: https://github.com/hrydgard/ppsspp/issues/16001 \"softgpu: Check depth test early on simple stencil\"\n[#16011]: https://github.com/hrydgard/ppsspp/issues/16011 \"Detect more triangles as rectangles in softgpu\"\n[#16039]: https://github.com/hrydgard/ppsspp/issues/16039 \"softgpu: Run early Z tests in fast rect path\"\n[#16054]: https://github.com/hrydgard/ppsspp/issues/16054 \"softgpu: Reduce some flushing / flushing cost\"\n[#16080]: https://github.com/hrydgard/ppsspp/issues/16080 \"softgpu: Avoid unnecessary flushing for curves\"\n[#16085]: https://github.com/hrydgard/ppsspp/issues/16085 \"softgpu: Cache reused indexed verts\"\n[#16094]: https://github.com/hrydgard/ppsspp/issues/16094 \"softgpu: Optimize rectangle sampling/blending used in bloom\"\n[#16102]: https://github.com/hrydgard/ppsspp/issues/16102 \"softgpu: Avoid waiting for a thread to drain\"\n[#16387]: https://github.com/hrydgard/ppsspp/issues/16387 \"softgpu: Use threads on self-render if safe\"\n[#16486]: https://github.com/hrydgard/ppsspp/issues/16486 \"softgpu: Apply optimizations to states generically\"\n[#16502]: https://github.com/hrydgard/ppsspp/issues/16502 \"A few more softgpu optimizations for alpha blend/test\"\n[#16518]: https://github.com/hrydgard/ppsspp/issues/16518 \"softgpu: Expand fast path to all fb formats\"\n[#15999]: https://github.com/hrydgard/ppsspp/issues/15999 \"softgpu: Clamp/wrap textures at 512 pixels\"\n[#16005]: https://github.com/hrydgard/ppsspp/issues/16005 \"softgpu: Correct accuracy of fog calculation\"\n[#16042]: https://github.com/hrydgard/ppsspp/issues/16042 \"softgpu: Refactor imm prim handling to support fog/color1\"\n[#16086]: https://github.com/hrydgard/ppsspp/issues/16086 \"softgpu: Fix self-render detect in Ridge Racer\"\n[#16117]: https://github.com/hrydgard/ppsspp/issues/16117 \"Correct texture projection issues, mainly in softgpu\"\n[#16231]: https://github.com/hrydgard/ppsspp/issues/16231 \"softgpu: Cull a triangle with all negative w\"\n[#16241]: https://github.com/hrydgard/ppsspp/issues/16241 \"softgpu: Correct linear interp for uneven positions\"\n[#16274]: https://github.com/hrydgard/ppsspp/issues/16274 \"Correct accuracy of bounding box test\"\n[#16469]: https://github.com/hrydgard/ppsspp/issues/16469 \"Correct block transfer overlap and wrapping behavior\"\n[#16470]: https://github.com/hrydgard/ppsspp/issues/16470 \"softgpu: Correctly fix inversions, matching tests\"\n[#16478]: https://github.com/hrydgard/ppsspp/issues/16478 \"softgpu: Interpolate Z for 3D lines\"\n[#16480]: https://github.com/hrydgard/ppsspp/issues/16480 \"softgpu: Cull verts outside post-viewport Z\"\n[#16485]: https://github.com/hrydgard/ppsspp/issues/16485 \"softgpu: Handle infnan fog coefficients better\"\n[#15659]: https://github.com/hrydgard/ppsspp/issues/15659 \"Oculus Quest native support\"\n[#15901]: https://github.com/hrydgard/ppsspp/issues/15901 \"OpenXR - Stereoscopic rendering\"\n[#16246]: https://github.com/hrydgard/ppsspp/issues/16246 \"VR: Add the VR code to all builds. Remove IsVRBuild calls from the renderer.\"\n[#16262]: https://github.com/hrydgard/ppsspp/issues/16262 \"OpenXR - Add an option to adjust camera distance\"\n[#16273]: https://github.com/hrydgard/ppsspp/issues/16273 \"Vulkan multiview rendering\"\n[#16458]: https://github.com/hrydgard/ppsspp/issues/16458 \"Implement MSAA support for desktop GPUs in Vulkan\"\n[#16441]: https://github.com/hrydgard/ppsspp/issues/16441 \"Exposed more emulator things to devctl api\"\n[#15748]: https://github.com/hrydgard/ppsspp/issues/15748 \"Windows: Add a simple window message to get the base pointer.\"\n[#16121]: https://github.com/hrydgard/ppsspp/issues/16121 \"Debugger: Add API to scan memory for funcs\"\n[#16187]: https://github.com/hrydgard/ppsspp/issues/16187 \"Remote API: hle.func.removeRange added\"\n[#16198]: https://github.com/hrydgard/ppsspp/issues/16198 \"Readback stencil buffer for debugger on GLES\"\n[#16389]: https://github.com/hrydgard/ppsspp/issues/16389 \"Make breakpoints work better in interpreter\"\n[#16304]: https://github.com/hrydgard/ppsspp/issues/16304 \"Improve texture replacement cache and allow read from zip\"\n[#16409]: https://github.com/hrydgard/ppsspp/issues/16409 \"Preserve framebuffer on pause screen even if render resolution is changed\"\n[#16415]: https://github.com/hrydgard/ppsspp/issues/16415 \"Display layout editor - Remove editing widget, just use the background directly\"\n[#16417]: https://github.com/hrydgard/ppsspp/issues/16417 \"Move post processing settings to the Display Layout Editor\"\n[#16445]: https://github.com/hrydgard/ppsspp/issues/16445 \"New screen size controls on Display Layout & Effects screen\"\n[#16531]: https://github.com/hrydgard/ppsspp/issues/16531 \"iota97's \\\"Motion blur\\\" - LCD persistence shader, plus fixes to make it work with OpenGL\"\n[#16404]: https://github.com/hrydgard/ppsspp/issues/16404 \"Make the pause screen \\\"transparent\\\"\"\n[#16346]: https://github.com/hrydgard/ppsspp/issues/16346 \"Change the \\\"Retain changed textures\\\" option into a compat.ini option.\"\n[#16347]: https://github.com/hrydgard/ppsspp/issues/16347 \"Always skin in decode for software transform and rendering\"\n[#16348]: https://github.com/hrydgard/ppsspp/issues/16348 \"Speed hack setting reorganization\"\n[#16432]: https://github.com/hrydgard/ppsspp/issues/16432 \"Cleanup graphics settings list\"\n[#16422]: https://github.com/hrydgard/ppsspp/issues/16422 \"Add compat flag / bug check for games on old Adreno/GL affected\"\n[#16419]: https://github.com/hrydgard/ppsspp/issues/16419 \"Stick input: Fix issue where deadzone noise from one device could drown out signal from another.\"\n[#16450]: https://github.com/hrydgard/ppsspp/issues/16450 \"UI: Fix right analog with single button\"\n[#16388]: https://github.com/hrydgard/ppsspp/issues/16388 \"Twinbee Portable: Add compat flag to avoid game bug with some languages\"\n[#16449]: https://github.com/hrydgard/ppsspp/issues/16449 \"Blind workaround for Shining Ark circle button problem\"\n[#15723]: https://github.com/hrydgard/ppsspp/issues/15723 \"D3D9 state cache cleanup\"\n[#15815]: https://github.com/hrydgard/ppsspp/issues/15815 \"Depth blit using raster\"\n[#15926]: https://github.com/hrydgard/ppsspp/issues/15926 \"Implement shader blending for D3D9\"\n[#16100]: https://github.com/hrydgard/ppsspp/issues/16100 \"D3D9: Allow INTZ depth buffers more correctly\"\n[#16232]: https://github.com/hrydgard/ppsspp/issues/16232 \"D3D9: Correct scissor state cache in Draw\"\n[#16550]: https://github.com/hrydgard/ppsspp/issues/16550 \"Hide the D3D9 option on Intel Xe graphics.\"\n[#16396]: https://github.com/hrydgard/ppsspp/issues/16396 \"Correct misbehavior on uninitialized values in IR\"\n[#16302]: https://github.com/hrydgard/ppsspp/issues/16302 \"Handle vrot overlap and vscl/vmscl prefixes more accurately\"\n[#16305]: https://github.com/hrydgard/ppsspp/issues/16305 \"irjit: Fix unordered float compares\"\n[#16306]: https://github.com/hrydgard/ppsspp/issues/16306 \"irjit: Correct prefix validation\"\n[#16434]: https://github.com/hrydgard/ppsspp/issues/16434 \"Vulkan: Use stencil export when available\"\n[#16099]: https://github.com/hrydgard/ppsspp/issues/16099 \"Vulkan: Avoid allocating depth images for stuff like temp copies, depal buffers etc.\"\n[#16090]: https://github.com/hrydgard/ppsspp/issues/16090 \"Simplify synchronization in VulkanRenderManager\"\n[#16072]: https://github.com/hrydgard/ppsspp/issues/16072 \"Vulkan: Don't have renderpasses store/load depth buffers when we don't use them\"\n[#16061]: https://github.com/hrydgard/ppsspp/issues/16061 \"Vulkan: Submit main command buffer before acquiring the swapchain image\"\n[#16060]: https://github.com/hrydgard/ppsspp/issues/16060 \"Vulkan FrameData refactor\"\n[#16035]: https://github.com/hrydgard/ppsspp/issues/16035 \"Vulkan: \\\"Acquire\\\" the image from the swapchain as late as possible in the frame\"\n[#15917]: https://github.com/hrydgard/ppsspp/issues/15917 \"Vulkan bandwidth optimizations (configure renderpass load/store better)\"\n[#16104]: https://github.com/hrydgard/ppsspp/issues/16104 \"Generate \\\"Ubershaders\\\" that can handle all lighting configurations\"\n[#16111]: https://github.com/hrydgard/ppsspp/issues/16111 \"Always do the vertex shader part of the fog computation.\"\n[#15589]: https://github.com/hrydgard/ppsspp/issues/15589 \"Vulkan: Parallelize GLSL compilation\"\n[#15843]: https://github.com/hrydgard/ppsspp/issues/15843 \"GPU: Skip fb create upload when clearing\"\n[#16190]: https://github.com/hrydgard/ppsspp/issues/16190 \"Reduce IO primarily during save operations\"\n[#15884]: https://github.com/hrydgard/ppsspp/issues/15884 \"Replacement: Read files only within time budget\"\n[#16314]: https://github.com/hrydgard/ppsspp/issues/16314 \"UI: Install textures as a zip if supported\"\n[#15803]: https://github.com/hrydgard/ppsspp/issues/15803 \"Reimplement bicubic upscaling.\"\n[#16125]: https://github.com/hrydgard/ppsspp/issues/16125 \"Remove alpha ignore in xbrz texture shaders.\"\n[#16413]: https://github.com/hrydgard/ppsspp/issues/16413 \"Kernel: Respect partition param in heap funcs\"\n[#16070]: https://github.com/hrydgard/ppsspp/issues/16070 \"Kernel: Match index lookup behavior for tls\"\n[#16052]: https://github.com/hrydgard/ppsspp/issues/16052 \"HLE: sceKernelAllocPartitionMemory volatile memory support (partition 5)\"\n[#15952]: https://github.com/hrydgard/ppsspp/issues/15952 \"interp: Handle jumps in branch delay slots better\"\n[#15957]: https://github.com/hrydgard/ppsspp/issues/15957 \"Handle branch/jump in branch delay slots more accurately\"\n[#15839]: https://github.com/hrydgard/ppsspp/issues/15839 \"GE debugger: Allow displaying two tabs at once, separate DL view\"\n[#15851]: https://github.com/hrydgard/ppsspp/issues/15851 \"After recording a GE dump, open an explorer window pointing at the file\"\n[#15894]: https://github.com/hrydgard/ppsspp/issues/15894 \"GE Debugger: Record only one flip if display framebuf not changed, step on vsync\"\n[#15925]: https://github.com/hrydgard/ppsspp/issues/15925 \"GE Debugger: Improve display list disasm\"\n[#15974]: https://github.com/hrydgard/ppsspp/issues/15974 \"Add breakpoint conditions to GE debugger\"\n[#16007]: https://github.com/hrydgard/ppsspp/issues/16007 \"GE Debugger: Add fields to register expressions\"\n[#16047]: https://github.com/hrydgard/ppsspp/issues/16047 \"GE Debugger: Allow search\"\n[#16096]: https://github.com/hrydgard/ppsspp/issues/16096 \"GE Debugger: Add option to track pixel in preview\"\n[#16201]: https://github.com/hrydgard/ppsspp/issues/16201 \"GE Debugger: Normalize framebuffer texture preview\"\n[#15879]: https://github.com/hrydgard/ppsspp/issues/15879 \"irjit: Validate alignment in slow memory mode\"\n[#15880]: https://github.com/hrydgard/ppsspp/issues/15880 \"Core: Show exception on misaligned jump\"\n[#16089]: https://github.com/hrydgard/ppsspp/issues/16089 \"[AdhocMatching] Fix assertion issue when playing Cars over public adhoc server.\"\n[#15990]: https://github.com/hrydgard/ppsspp/issues/15990 \"Atrac3+: Allocate some extra\"\n[#15889]: https://github.com/hrydgard/ppsspp/issues/15889 \"Correct D3D viewport offset sign in sw transform\"\n[#15738]: https://github.com/hrydgard/ppsspp/issues/15738 \"Add confirmation dialog when generating a new Mac address\"\n[#15739]: https://github.com/hrydgard/ppsspp/issues/15739 \"irjit: Correct another PurgeTemps case\"\n[#15740]: https://github.com/hrydgard/ppsspp/issues/15740 \"Replacement: Clear cache on disable\"\n[#15734]: https://github.com/hrydgard/ppsspp/issues/15734 \"Better pt-pt translation\"\n[#15733]: https://github.com/hrydgard/ppsspp/issues/15733 \"Fix bug in blue-to-alpha - alpha blending could be on when it shouldn't be.\"\n[#15237]: https://github.com/hrydgard/ppsspp/issues/15237 \"Path: Check for PSP case insensitively\"\n[#15487]: https://github.com/hrydgard/ppsspp/issues/15487 \"Save textures on background tasks when texture dumping is enabled.\"\n[#15645]: https://github.com/hrydgard/ppsspp/issues/15645 \"UI: Add analog speed limit mapping\"\n[#15163]: https://github.com/hrydgard/ppsspp/issues/15163 \"Implement a jit for drawing pixels in the software renderer\"\n[#15345]: https://github.com/hrydgard/ppsspp/issues/15345 \"Fix some minor softgpu blending bugs\"\n[#15389]: https://github.com/hrydgard/ppsspp/issues/15389 \"Draw rectangles always using a specialized path in softgpu\"\n[#15529]: https://github.com/hrydgard/ppsspp/issues/15529 \"softgpu: Fix viewport flag clean/dirty\"\n[#15440]: https://github.com/hrydgard/ppsspp/issues/15440 \"softgpu: Plug bad leak of bin queue data\"\n[#15410]: https://github.com/hrydgard/ppsspp/issues/15410 \"softgpu: Remove offset from screenpos, adjust filtering coords\"\n[#15405]: https://github.com/hrydgard/ppsspp/issues/15405 \"Fix some samplerjit issues without SSE4 or AVX\"\n[#15400]: https://github.com/hrydgard/ppsspp/issues/15400 \"softgpu: Track dirty vs really dirty per buffer\"\n[#15481]: https://github.com/hrydgard/ppsspp/issues/15481 \"Fix some NEON code that had bad compile-time checks\"\n[#15474]: https://github.com/hrydgard/ppsspp/issues/15474 \"Merge CheckAlpha into texture decoding\"\n[#15566]: https://github.com/hrydgard/ppsspp/issues/15566 \"Screen upscaling shaders improvements\"\n[#15238]: https://github.com/hrydgard/ppsspp/issues/15238 \"Vulkan: Be more restrictive about hardware texture upscaling on \\\"slow\\\" GPUs\"\n[#15217]: https://github.com/hrydgard/ppsspp/issues/15217 \"Vulkan is strict about scissor rect, so let's clamp centrally.\"\n[#15211]: https://github.com/hrydgard/ppsspp/issues/15211 \"Vulkan: Specify Vulkan version, fix mip level generation calculation\"\n[#15162]: https://github.com/hrydgard/ppsspp/issues/15162 \"Integrate VMA (Vulkan Memory Allocator)\"\n[#15106]: https://github.com/hrydgard/ppsspp/issues/15106 \"GLES: Explicitly enable ARB_cull_distance\"\n[#15025]: https://github.com/hrydgard/ppsspp/issues/15025 \"Allow delayed loading of texture replacements\"\n[#15470]: https://github.com/hrydgard/ppsspp/issues/15470 \"Threading manager stresstest and fixes\"\n[#14414]: https://github.com/hrydgard/ppsspp/issues/14414 \"Add search for settings\"\n[#15613]: https://github.com/hrydgard/ppsspp/issues/15613 \"Allow to repeat a \\\"single\\\" button\"\n[#15569]: https://github.com/hrydgard/ppsspp/issues/15569 \"Upscaling shaders\"\n[#15494]: https://github.com/hrydgard/ppsspp/issues/15494 \"Add key bind to hotswap internal screen rotation\"\n[#15510]: https://github.com/hrydgard/ppsspp/issues/15510 \"Allow to set InternalScreenRotation per game\"\n[#12958]: https://github.com/hrydgard/ppsspp/issues/12958 \"Feature Request: restore software rendering ui setting on android\"\n[#15016]: https://github.com/hrydgard/ppsspp/issues/15016 \"List of games with graphics rendering issues using mali gpu with vulkan backend\"\n[#15640]: https://github.com/hrydgard/ppsspp/issues/15640 \"Disable ForceMax60FPS for GOW games and replace it with fixed 60 fps\"\n[#15213]: https://github.com/hrydgard/ppsspp/issues/15213 \"[Adhoc] Updated PdpCreate, PdpSend, PdpRecv, GetPdpStat, GetPtpStat\"\n[#15215]: https://github.com/hrydgard/ppsspp/issues/15215 \"[Adhocctl] Fix Tekken 5 Dark Resurrection Multiplayer\"\n[#15549]: https://github.com/hrydgard/ppsspp/issues/15549 \"GPU: Hook Sol Trigger func to flush texture\"\n[#15583]: https://github.com/hrydgard/ppsspp/issues/15583 \"Fix and further improve line drawing in Echochrome\"\n[#15073]: https://github.com/hrydgard/ppsspp/issues/15073 \"Cleanup line/point handling and refactor a bit\"\n[#15075]: https://github.com/hrydgard/ppsspp/issues/15075 \"Draw points using triangles\"\n[#15500]: https://github.com/hrydgard/ppsspp/issues/15500 \"Add BlueToAlpha compat.ini workaround, fixes Split/Second graphics\"\n[#15501]: https://github.com/hrydgard/ppsspp/issues/15501 \"Make the existing ReinterpretFramebuffers/ShaderColorBitmask path work for Split/Second\"\n[#15691]: https://github.com/hrydgard/ppsspp/issues/15691 \"Add a simple compat flag to workaround the Clone Wars issue, #12949\"\n[#15696]: https://github.com/hrydgard/ppsspp/issues/15696 \"Use the recent Clone Wars fix for Star Wars: Force Unleashed too\"\n[#12949]: https://github.com/hrydgard/ppsspp/issues/12949 \"Star Wars: The Clone Wars - Graphic glitch [Android/Windows]\"\n[#9572]: https://github.com/hrydgard/ppsspp/issues/9572 \"Star Wars force unleashed [Screen Overlay problem]\"\n[#15687]: https://github.com/hrydgard/ppsspp/issues/15687 \"Add Zettai Zetsumei Toshi 3\"\n[#7295]: https://github.com/hrydgard/ppsspp/issues/7295 \"Juiced 2: Hot Import Nights, screen artifacts and missing half of race tracks\"\n[#15717]: https://github.com/hrydgard/ppsspp/issues/15717 \"Allows \\\"merging\\\" render targets that overlap on the Y axis. Fixes Juiced 2\"\n[#15698]: https://github.com/hrydgard/ppsspp/issues/15698 \"Osk: Allow upper/lower for all keyboards\"\n[#15652]: https://github.com/hrydgard/ppsspp/issues/15652 \"Replace Win32 file IO with UWP safe variants and add support for getting drives to UWP build\"\n[#15396]: https://github.com/hrydgard/ppsspp/issues/15396 \"Add UI Tint/Saturation settings\"\n[#15394]: https://github.com/hrydgard/ppsspp/issues/15394 \"Allow custom UI themes\"\n[#15560]: https://github.com/hrydgard/ppsspp/issues/15560 \"UI: Abandon focus movement on returning from pause\"\n[#15393]: https://github.com/hrydgard/ppsspp/issues/15393 \"GE Debugger: Avoid crash on Step Draw with flush\"\n[#15324]: https://github.com/hrydgard/ppsspp/issues/15324 \"UI: Reset ZIP install errors for new ZIPs\"\n[#15377]: https://github.com/hrydgard/ppsspp/issues/15377 \"Debugger: Avoid mem write tag lookup on small alloc\"\n[#15424]: https://github.com/hrydgard/ppsspp/issues/15424 \"Windows: Create SYSTEM directory early\"\n[#15402]: https://github.com/hrydgard/ppsspp/issues/15402 \"GE Debugger: Highlight changed state values\"\n[#15378]: https://github.com/hrydgard/ppsspp/issues/15378 \"GE Debugger: Add filter to skip prim calls\"\n[#15338]: https://github.com/hrydgard/ppsspp/issues/15338 \"Alow flushing at will via the GE debugger\"\n[#17489]: https://github.com/hrydgard/ppsspp/issues/17489 \"Restore \\\"low end radius\\\" (inverse deadzone) for tilt input\"\n[#17473]: https://github.com/hrydgard/ppsspp/issues/17473 \"Revert \\\"Remove the Android display resolution selector\\\"\"\n[#17467]: https://github.com/hrydgard/ppsspp/issues/17467 \"Make the DJ Max workaround more aggressive about hiding stuff.\"\n[#17466]: https://github.com/hrydgard/ppsspp/issues/17466 \"Fix running some file formats from the Downloads folder\"\n[#17440]: https://github.com/hrydgard/ppsspp/issues/17440 \"Revert lmode variant reduction\"\n[#17439]: https://github.com/hrydgard/ppsspp/issues/17439 \"Revert \\\"Merge pull request #16628 from hrydgard/remove-fog-fshader-flag\\\"\"\n[#17475]: https://github.com/hrydgard/ppsspp/issues/17475 \"Add a trivial profiling tool to the OpenGL backend\"\n[#17435]: https://github.com/hrydgard/ppsspp/issues/17435 \"ElfLoader: Don't scan for functions in zero-length sections\"\n[#17442]: https://github.com/hrydgard/ppsspp/issues/17442 \"Shrink the GLRRenderCommand struct from 152 to 88\"\n[#17457]: https://github.com/hrydgard/ppsspp/issues/17457 \"UI: Fix thread error on zip open failure\"\n[#17486]: https://github.com/hrydgard/ppsspp/issues/17486 \"Build fixes for OpenBSD\"\n[#17446]: https://github.com/hrydgard/ppsspp/issues/17446 \"OpenGL: Combine some render commands\"\n[#17406]: https://github.com/hrydgard/ppsspp/issues/17406 \"Even more crash fixes\"\n[#17414]: https://github.com/hrydgard/ppsspp/issues/17414 \"GPU: Remove JumpFast/CallFast\"\n[#17415]: https://github.com/hrydgard/ppsspp/issues/17415 \"Misc fixes and checks\"\n[#17422]: https://github.com/hrydgard/ppsspp/issues/17422 \"Windows: Fix initial window show for all displays\"\n[#17425]: https://github.com/hrydgard/ppsspp/issues/17425 \"Android: Explicitly allow content URI intents\"\n[#17412]: https://github.com/hrydgard/ppsspp/issues/17412 \"Controller mapping fixes\"\n[#17420]: https://github.com/hrydgard/ppsspp/issues/17420 \"Fix glitch when mapping analog inputs, caused\"\n[#17401]: https://github.com/hrydgard/ppsspp/issues/17401 \"Additional crash fixes\"\n[#17399]: https://github.com/hrydgard/ppsspp/issues/17399 \"More crash fixes\"\n[#17398]: https://github.com/hrydgard/ppsspp/issues/17398 \"OpenXR - Cleanup unsupported features, support Android 12\"\n[#17374]: https://github.com/hrydgard/ppsspp/issues/17374 \"Assorted crash fixes and asserts\"\n[#17370]: https://github.com/hrydgard/ppsspp/issues/17370 \"Fix ScrollView crash (though the root cause is a race condition most likely)\"\n[#17392]: https://github.com/hrydgard/ppsspp/issues/17392 \"Misc crash fixes from mystery thread\"\n[#17394]: https://github.com/hrydgard/ppsspp/issues/17394 \"Bump the index/vertex cpu-side buffer sizes a little.\"\n[#17380]: https://github.com/hrydgard/ppsspp/issues/17380 \"Pre-scan the root of texture packs for hash-named files.\"\n[#17393]: https://github.com/hrydgard/ppsspp/issues/17393 \"Prevent tilt-controlled left/right dpad butons from getting stuck\"\n[#17396]: https://github.com/hrydgard/ppsspp/issues/17396 \"Vulkan: Turn off the ubershader on Mali T880, T860 and T830 on old driver versions\"\n[#16873]: https://github.com/hrydgard/ppsspp/issues/16873 \"Add facility to run tasks on dedicated threads using the ThreadManager interface\"\n[#16802]: https://github.com/hrydgard/ppsspp/issues/16802 \"Vulkan: Parallel pipeline creation\"\n[#16804]: https://github.com/hrydgard/ppsspp/issues/16804 \"Fix a race condition during Vulkan shader cache load.\"\n[#16809]: https://github.com/hrydgard/ppsspp/issues/16809 \"ThreadManager: Don't allow reordering of queue\"\n[#16812]: https://github.com/hrydgard/ppsspp/issues/16812 \"ThreadManager: Add simple priority queues\"\n[#16773]: https://github.com/hrydgard/ppsspp/issues/16773 \"Remove the FS_TEXTURE_AT_OFFSET fragment shader flag\"\n[#16778]: https://github.com/hrydgard/ppsspp/issues/16778 \"Remove the rather redundant DoTexture flag from vshaders.\"\n[#16770]: https://github.com/hrydgard/ppsspp/issues/16770 \"Shader generator: Switch the 2x flag to a uniform\"\n[#16763]: https://github.com/hrydgard/ppsspp/issues/16763 \"Shader generator: Move FS_TEX_ALPHA to a uniform bool.\"\n[#17224]: https://github.com/hrydgard/ppsspp/issues/17224 \"Add support for integer scale factor for display\"\n[#17262]: https://github.com/hrydgard/ppsspp/issues/17262 \"Fix issue in present where we applied the UV range at the wrong place when post-processing\"\n[#17297]: https://github.com/hrydgard/ppsspp/issues/17297 \"Workaround for some SOCOM games' misuse of CLUT8 to texture from framebuffer\"\n[#17317]: https://github.com/hrydgard/ppsspp/issues/17317 \"Fix night vision in SOCOM games (in fact, fix the CLUT8 effect properly)\"\n[#17232]: https://github.com/hrydgard/ppsspp/issues/17232 \"Don't use inaccurate depth with Vulkan on any GPU\"\n[#17212]: https://github.com/hrydgard/ppsspp/issues/17212 \"More accurate check for LoadCLUT from framebuffer margins.\"\n[#17181]: https://github.com/hrydgard/ppsspp/issues/17181 \"Tales of Phantasia - Narikiri Dungeon X: Avoid some GPU readbacks.\"\n[#17191]: https://github.com/hrydgard/ppsspp/issues/17191 \"GPU: Fix intra-block transfers in ToP CE\"\n[#17192]: https://github.com/hrydgard/ppsspp/issues/17192 \"GPU: Add xfer flag to ignore create vfb flags\"\n[#16715]: https://github.com/hrydgard/ppsspp/issues/16715 \"Eliminate GPU readbacks in the DTM Race Driver series.\"\n[#17032]: https://github.com/hrydgard/ppsspp/issues/17032 \"Cache framebuffer copies (for self-texturing) until the next TexFlush GPU instruction\"\n[#17035]: https://github.com/hrydgard/ppsspp/issues/17035 \"GPU: Discard framebuffer copy when clearing\"\n[#17027]: https://github.com/hrydgard/ppsspp/issues/17027 \"Vulkan on Android: In non-debug mode, avoid devices that were rejected\"\n[#17022]: https://github.com/hrydgard/ppsspp/issues/17022 \"Android: Make font rendering work even absent support for R4G4B4A4 textures\"\n[#16971]: https://github.com/hrydgard/ppsspp/issues/16971 \"Add a heuristic avoiding joining framebuffers horizontally...\"\n[#17298]: https://github.com/hrydgard/ppsspp/issues/17298 \"Don't try to present from little temp framebuffers used\"\n[#17314]: https://github.com/hrydgard/ppsspp/issues/17314 \"GPU: Always update size when shrinking framebuffers\"\n[#17078]: https://github.com/hrydgard/ppsspp/issues/17078 \"Texture replacer: Make the internal cache model texture-centric instead of miplevel-centric\"\n[#17091]: https://github.com/hrydgard/ppsspp/issues/17091 \"Replacement: Do all I/O on threaded tasks\"\n[#17120]: https://github.com/hrydgard/ppsspp/issues/17120 \"More texture replacement fixes\"\n[#17134]: https://github.com/hrydgard/ppsspp/issues/17134 \"Refactor the replacement cache\"\n[#17111]: https://github.com/hrydgard/ppsspp/issues/17111 \"Basis/UASTC texture compression support via ktx2\"\n[#17104]: https://github.com/hrydgard/ppsspp/issues/17104 \"basis_universal support: Add the library\"\n[#17083]: https://github.com/hrydgard/ppsspp/issues/17083 \"DDS texture support in texture replacer\"\n[#17103]: https://github.com/hrydgard/ppsspp/issues/17103 \"Texture replacement: Load DDS mipmaps\"\n[#17097]: https://github.com/hrydgard/ppsspp/issues/17097 \"Texture Replacement: Support compressed textures in D3D9 as well\"\n[#17096]: https://github.com/hrydgard/ppsspp/issues/17096 \"Change BGRA to be a texture-specific flag. Fixes R/B swap in DDS textures in D3D11.\"\n[#17095]: https://github.com/hrydgard/ppsspp/issues/17095 \"More tex replacement work\"\n[#17146]: https://github.com/hrydgard/ppsspp/issues/17146 \"Improve default replacer ini\"\n[#17144]: https://github.com/hrydgard/ppsspp/issues/17144 \"Force mipmapping on when drawing using replacement textures that contain mipmaps\"\n[#17139]: https://github.com/hrydgard/ppsspp/issues/17139 \"Texture replacement: Improve padding support\"\n[#17088]: https://github.com/hrydgard/ppsspp/issues/17088 \"Replacer: Avoid tracking video textures\"\n[#17295]: https://github.com/hrydgard/ppsspp/issues/17295 \"Optimize lighting for softgpu a bit\"\n[#17214]: https://github.com/hrydgard/ppsspp/issues/17214 \"softgpu: Fix over-optimization of alpha test\"\n[#17028]: https://github.com/hrydgard/ppsspp/issues/17028 \"Fix crash in SoftGPU when frameskipping, noticed\"\n[#16753]: https://github.com/hrydgard/ppsspp/issues/16753 \"Use NEON intrinsics in software renderer\"\n[#17052]: https://github.com/hrydgard/ppsspp/issues/17052 \"Vulkan texture uploads: Take optimalBufferCopyRowPitchAlignment into account\"\n[#17122]: https://github.com/hrydgard/ppsspp/issues/17122 \"VulkanPushPool - more efficient replacement for 3x VulkanPushBuffer\"\n[#17121]: https://github.com/hrydgard/ppsspp/issues/17121 \"Remove an unused VulkanPushBuffer.\"\n[#17114]: https://github.com/hrydgard/ppsspp/issues/17114 \"Vulkan: During texture upload, batch the buffer->image copies to do all the mips at once.\"\n[#17011]: https://github.com/hrydgard/ppsspp/issues/17011 \"Resurrect the Vulkan memory visualizer, but now it's global stats and pushbuffer stats.\"\n[#16907]: https://github.com/hrydgard/ppsspp/issues/16907 \"Fix Syphon Filter lens flares\"\n[#16905]: https://github.com/hrydgard/ppsspp/issues/16905 \"Depth readback with built-in stretchblit\"\n[#16910]: https://github.com/hrydgard/ppsspp/issues/16910 \"Prepare for adding async readback (use VMA for readback allocs, add a param)\"\n[#16916]: https://github.com/hrydgard/ppsspp/issues/16916 \"Implement delayed depth readbacks, Vulkan only\"\n[#16791]: https://github.com/hrydgard/ppsspp/issues/16791 \"Lighting code cleanup and optimization\"\n[#16787]: https://github.com/hrydgard/ppsspp/issues/16787 \"Vertex shaders: On platforms with uniform buffers, use indexing and loop over the lights.\"\n[#16889]: https://github.com/hrydgard/ppsspp/issues/16889 \"Tilt improvements: Add visualizer, better defaults\"\n[#16896]: https://github.com/hrydgard/ppsspp/issues/16896 \"Tilt improvements 2: Fix/overhaul calibration, add more previews\"\n[#17210]: https://github.com/hrydgard/ppsspp/issues/17210 \"ControlMapper refactoring\"\n[#17215]: https://github.com/hrydgard/ppsspp/issues/17215 \"Control map multiple keys to one output\"\n[#17228]: https://github.com/hrydgard/ppsspp/issues/17228 \"Add back our older VFPU approximations, as fallbacks if the table files are missing\"\n[#16855]: https://github.com/hrydgard/ppsspp/issues/16855 \"Add analog to custom button and gesture\"\n[#17098]: https://github.com/hrydgard/ppsspp/issues/17098 \"OpenXR - Enable user to switch between topdown and fps camera\"\n[#16857]: https://github.com/hrydgard/ppsspp/issues/16857 \"OpenXR - Control game camera using head rotation\"\n[#16952]: https://github.com/hrydgard/ppsspp/issues/16952 \"OpenXR - Enable stereo in more games\"\n[#16953]: https://github.com/hrydgard/ppsspp/issues/16953 \"Stereo rendering minor UI fix\"\n[#16826]: https://github.com/hrydgard/ppsspp/issues/16826 \"OpenXR - Fix axis mirroing for Tales of the World\"\n[#16821]: https://github.com/hrydgard/ppsspp/issues/16821 \"OpenXR - Enable level 5 CPU/GPU performance on Quest 2\"\n[#16704]: https://github.com/hrydgard/ppsspp/issues/16704 \"Windows Dark Mode: initial support\"\n[#16928]: https://github.com/hrydgard/ppsspp/issues/16928 \"Workaround for sin/cos issue in GTA on Mac (and maybe others)\"\n[#16984]: https://github.com/hrydgard/ppsspp/issues/16984 \"VFPU sin/cos\"\n[#17270]: https://github.com/hrydgard/ppsspp/issues/17270 \"Debugger: Add memory breakpoint conditions\"\n[#17269]: https://github.com/hrydgard/ppsspp/issues/17269 \"Debugger: Avoid unaligned reads in expressions\"\n[#17263]: https://github.com/hrydgard/ppsspp/issues/17263 \"Debugger: sceKernelPrintf improvement, QOL adjustments\"\n[#17260]: https://github.com/hrydgard/ppsspp/issues/17260 \"Debugger: Accept format for watches and stack walk tweak\"\n[#17203]: https://github.com/hrydgard/ppsspp/issues/17203 \"Added new option \\\"Copy Float (32 bit)\\\" to Windows Debugger UI\"\n[#17190]: https://github.com/hrydgard/ppsspp/issues/17190 \"Debugger: Update symbols properly on prx load\"\n[#17042]: https://github.com/hrydgard/ppsspp/issues/17042 \"Implement requested debugger features\"\n[#16994]: https://github.com/hrydgard/ppsspp/issues/16994 \"Debugger: copy PSP memory base to clipboard\"\n[#16988]: https://github.com/hrydgard/ppsspp/issues/16988 \"Debugger: Lock memory during stack walk\"\n[#16818]: https://github.com/hrydgard/ppsspp/issues/16818 \"Fix a few warnings and a debugger emuhack bug on mem access\"\n[#17291]: https://github.com/hrydgard/ppsspp/issues/17291 \"Apply the fix to avoid jit clearing for rewind savestates to all platforms\"\n[#17241]: https://github.com/hrydgard/ppsspp/issues/17241 \"Chat window fixes\"\n[#17129]: https://github.com/hrydgard/ppsspp/issues/17129 \"irjit: Fix vi2us/vi2s with non-consecutive\"\n[#17055]: https://github.com/hrydgard/ppsspp/issues/17055 \"GPU: Correct depth clip/cull for zero scale\"\n[#16880]: https://github.com/hrydgard/ppsspp/issues/16880 \"GPU: Allow depth above 65535\"\n[#16976]: https://github.com/hrydgard/ppsspp/issues/16976 \"riscv: Implement skinning in vertexjit\"\n[#16957]: https://github.com/hrydgard/ppsspp/issues/16957 \"riscv: Initial vertexjit\"\n[#16962]: https://github.com/hrydgard/ppsspp/issues/16962 \"riscv: Correct offset prescale in vertexjit\"\n[#16832]: https://github.com/hrydgard/ppsspp/issues/16832 \"riscv: Add bitmanip instructions to emitter\"\n[#16829]: https://github.com/hrydgard/ppsspp/issues/16829 \"Add vector instructions to RISC-V emitter\"\n[#16922]: https://github.com/hrydgard/ppsspp/issues/16922 \"macOS native bar button items\"\n[#16859]: https://github.com/hrydgard/ppsspp/issues/16859 \"Fix for issue of disappear text on Shinobido Talese of The Ninja\"\n[#16810]: https://github.com/hrydgard/ppsspp/issues/16810 \"Sas: Adjust Rockman 2 sustain on init only\"\n[#16798]: https://github.com/hrydgard/ppsspp/issues/16798 \"Add workaround for hung music notes in Rockman Dash 2\"\n[#16795]: https://github.com/hrydgard/ppsspp/issues/16795 \"Improve the use of space on the main screen in vertical mode.\"\n[#16785]: https://github.com/hrydgard/ppsspp/issues/16785 \"UI: Make vertical scrollbars directly draggable\"\n[#16699]: https://github.com/hrydgard/ppsspp/issues/16699 \"Fix smooth touchpad scrolling on Windows\"\n[#18332]: https://github.com/hrydgard/ppsspp/issues/18332 \"We somehow lost the usage_ counter increment in VulkanDescSetPool, fix that\"\n[#18323]: https://github.com/hrydgard/ppsspp/issues/18323 \"Turn off HTTPS support for iOS.\"\n[#18310]: https://github.com/hrydgard/ppsspp/issues/18310 \"Fix waves background\"\n[#18243]: https://github.com/hrydgard/ppsspp/issues/18243 \"More crashfix/leakfix attempts\"\n[#18244]: https://github.com/hrydgard/ppsspp/issues/18244 \"Core: Stop leaking file loaders\"\n[#18247]: https://github.com/hrydgard/ppsspp/issues/18247 \"Jit: Assert on bad exit numbers, allow two more exits per block\"\n[#18261]: https://github.com/hrydgard/ppsspp/issues/18261 \"Revert \\\"Merge pull request #18184 from hrydgard/expand-lines-mem-fix\\\"\"\n[#18255]: https://github.com/hrydgard/ppsspp/issues/18255 \"Fix issue uploading narrow textures in OpenGL.\"\n[#18250]: https://github.com/hrydgard/ppsspp/issues/18250 \"Separate out accelerometer events from joystick axis events\"\n[#18249]: https://github.com/hrydgard/ppsspp/issues/18249 \"arm64jit: Avoid fused multiplies in vcrsp.t\"\n[#18218]: https://github.com/hrydgard/ppsspp/issues/18218 \"Vulkan: Simplify GetShaders and DirtyLastShader, making them internally consistent.\"\n[#18228]: https://github.com/hrydgard/ppsspp/issues/18228 \"unittest: Add jit compare for jit IR\"\n[#18235]: https://github.com/hrydgard/ppsspp/issues/18235 \"irjit: Handle VDet\"\n[#18211]: https://github.com/hrydgard/ppsspp/issues/18211 \"More crash fix attempts\"\n[#18221]: https://github.com/hrydgard/ppsspp/issues/18221 \"Some cleanups and fixes to obscure crashes\"\n[#18220]: https://github.com/hrydgard/ppsspp/issues/18220 \"Add some missing locking in KeyMap.cpp.\"\n[#18230]: https://github.com/hrydgard/ppsspp/issues/18230 \"Android: Minor activity lifecycle stuff\"\n[#18216]: https://github.com/hrydgard/ppsspp/issues/18216 \"Don't load the shader cache on a separate thread - all it does is already async\"\n[#18237]: https://github.com/hrydgard/ppsspp/issues/18237 \"UI/localization: Italian translation update\"\n[#18205]: https://github.com/hrydgard/ppsspp/issues/18205 \"http: Fix errors on connect\"\n[#18201]: https://github.com/hrydgard/ppsspp/issues/18201 \"Asserts and checks\"\n[#18206]: https://github.com/hrydgard/ppsspp/issues/18206 \"GPU: Handle invalid blendeq more accurately\"\n[#18183]: https://github.com/hrydgard/ppsspp/issues/18183 \"Pipeline/shader race-condition-during-shutdown crash fix\"\n[#18189]: https://github.com/hrydgard/ppsspp/issues/18189 \"Be a bit smarter when loading the shader cache, avoid duplicating work\"\n[#18185]: https://github.com/hrydgard/ppsspp/issues/18185 \"Store: Fix race condition causing crashes if looking at another game before an icon finishes downloading\"\n[#18184]: https://github.com/hrydgard/ppsspp/issues/18184 \"Add memory bounds-check when expanding points, rects and lines to triangles\"\n[#18194]: https://github.com/hrydgard/ppsspp/issues/18194 \"Cleanups and comment clarifications\"\n[#18182]: https://github.com/hrydgard/ppsspp/issues/18182 \"Backend change from Win32 menu: Add quick workaround for instance counter misbehavior\"\n[#18169]: https://github.com/hrydgard/ppsspp/issues/18169 \"Better handling of shadergen failures, other minor things\"\n[#18151]: https://github.com/hrydgard/ppsspp/issues/18151 \"GPU, VFS, UI: Fixed minor memleaks\"\n[#18143]: https://github.com/hrydgard/ppsspp/issues/18143 \"Fix UMD disc swap with Retroachievements enabled\"\n[#18165]: https://github.com/hrydgard/ppsspp/issues/18165 \"x86jit: Fix flush for special-purpose reg\"\n[#18158]: https://github.com/hrydgard/ppsspp/issues/18158 \"Add -fno-math-errno\"\n[#18127]: https://github.com/hrydgard/ppsspp/issues/18127 \"Move RetroAchievements to the tools tab, fix leaderboard submitted notification positioning\"\n[#18142]: https://github.com/hrydgard/ppsspp/issues/18142 \"Revert \\\"Merge pull request #18008 from hrydgard/naruto-video-flicker-heuristic\\\"\"\n[#18133]: https://github.com/hrydgard/ppsspp/issues/18133 \"More sensible approach to the sc problem that broke Beats\"\n[#18140]: https://github.com/hrydgard/ppsspp/issues/18140 \"x86jit: Fix spill on sc in longer block\"\n[#18135]: https://github.com/hrydgard/ppsspp/issues/18135 \"Fix closing the chat window with ESC, add some asserts\"\n[#18129]: https://github.com/hrydgard/ppsspp/issues/18129 \"Fix the semantics of DenseHashMap to be consistent even when inserting nulls\"\n[#18126]: https://github.com/hrydgard/ppsspp/issues/18126 \"PPGe: Use texture windows for atlas text\"\n[#17589]: https://github.com/hrydgard/ppsspp/issues/17589 \"Retroachievements support (work-in-progress)\"\n[#17631]: https://github.com/hrydgard/ppsspp/issues/17631 \"RetroAchievements: Remaining features to implement\"\n[#17960]: https://github.com/hrydgard/ppsspp/issues/17960 \"Controls: Make the analog/digital mapping clash resolution more gentle.\"\n[#17673]: https://github.com/hrydgard/ppsspp/issues/17673 \"Add checkbox controlling if new mappings can be combo mappings.\"\n[#17562]: https://github.com/hrydgard/ppsspp/issues/17562 \"Android: Correct pad name tracking\"\n[#17433]: https://github.com/hrydgard/ppsspp/issues/17433 \"Custom button analog fix\"\n[#18009]: https://github.com/hrydgard/ppsspp/issues/18009 \"Enable [DisallowFramebufferAtOffset] for WWE SvR 2006.\"\n[#18008]: https://github.com/hrydgard/ppsspp/issues/18008 \"Add heuristic for memory->framebuffer copies, fixing video flicker in Naruto UNH 2\"\n[#17965]: https://github.com/hrydgard/ppsspp/issues/17965 \"Add compat flag to not load CLUTs from old framebuffers\"\n[#17449]: https://github.com/hrydgard/ppsspp/issues/17449 \"Fragment \\\"ubershader\\\" option\"\n[#17922]: https://github.com/hrydgard/ppsspp/issues/17922 \"Add checkboxes in developer tools to allow disabling ubershaders\"\n[#17903]: https://github.com/hrydgard/ppsspp/issues/17903 \"Present modes refactor\"\n[#18087]: https://github.com/hrydgard/ppsspp/issues/18087 \"Vulkan: Fix disabling VSync on SDL platforms that support IMMEDIATE but not MAILBOX\"\n[#17831]: https://github.com/hrydgard/ppsspp/issues/17831 \"Vulkan: Don't use multithreaded rendering if buffer commands (frames in flight) is set to 1\"\n[#17810]: https://github.com/hrydgard/ppsspp/issues/17810 \"Cache computed planes used for BBOX culling\"\n[#17505]: https://github.com/hrydgard/ppsspp/issues/17505 \"Only dirty the uniform UVSCALEOFFSET when really needed\"\n[#17478]: https://github.com/hrydgard/ppsspp/issues/17478 \"OpenGL: Efficiency improvements for stencil commands\"\n[#17471]: https://github.com/hrydgard/ppsspp/issues/17471 \"Reduce zero initialization and copying overhead of render commands\"\n[#17452]: https://github.com/hrydgard/ppsspp/issues/17452 \"Don't cache render target copies for shader blending, only cache copies for overlap\"\n[#17602]: https://github.com/hrydgard/ppsspp/issues/17602 \"Loader: Support HI16/16 pairs, not just LO16\"\n[#17451]: https://github.com/hrydgard/ppsspp/issues/17451 \"Rendering issue with tornado in Lunar Silver Star\"\n[#17534]: https://github.com/hrydgard/ppsspp/issues/17534 \"Add a cache for MakePixelsTexture\"\n[#17571]: https://github.com/hrydgard/ppsspp/issues/17571 \"softgpu: Use SIMD more for dot products\"\n[#17569]: https://github.com/hrydgard/ppsspp/issues/17569 \"ARM64: Optimize saved registers in vertex decoder.\"\n[#17619]: https://github.com/hrydgard/ppsspp/issues/17619 \"softgpu: Improve Z interpolation SIMD\"\n[#17621]: https://github.com/hrydgard/ppsspp/issues/17621 \"softgpu: Ensure early depth test uses SIMD\"\n[#17618]: https://github.com/hrydgard/ppsspp/issues/17618 \"Optimize casts in softgpu\"\n[#17609]: https://github.com/hrydgard/ppsspp/issues/17609 \"softgpu: Optimize (bi-)linear texture filtering\"\n[#17744]: https://github.com/hrydgard/ppsspp/issues/17744 \"Initial HTTPS support via Naett (partial platform support)\"\n[#17947]: https://github.com/hrydgard/ppsspp/issues/17947 \"[Adhocctl] Fix for Metal Gear Acid issue\"\n[#18001]: https://github.com/hrydgard/ppsspp/issues/18001 \"Enable the FakeMipmapChange flag for US/EU Tactics Ogre, fixing replacement problem.\"\n[#18011]: https://github.com/hrydgard/ppsspp/issues/18011 \"Detect the simplest Tactics Ogre case (US/EU) early\"\n[#17930]: https://github.com/hrydgard/ppsspp/issues/17930 \"Enable anisotropic filtering for replacement textures with mipmaps\"\n[#17749]: https://github.com/hrydgard/ppsspp/issues/17749 \"In D3D11, force block compressed textures to have dimensions divisible\"\n[#17854]: https://github.com/hrydgard/ppsspp/issues/17854 \"Implement color emoji support for Android\"\n[#17856]: https://github.com/hrydgard/ppsspp/issues/17856 \"Windows UWP: Enable color emoji rendering through DirectWrite\"\n[#17844]: https://github.com/hrydgard/ppsspp/issues/17844 \"SDL: text renderer fixes, and CI\"\n[#17651]: https://github.com/hrydgard/ppsspp/issues/17651 \"SDL: support HiDPI on wayland\"\n[#17755]: https://github.com/hrydgard/ppsspp/issues/17755 \"Allow entering an exact Mac address, while keeping the randomization ability\"\n[#17606]: https://github.com/hrydgard/ppsspp/issues/17606 \"OSD: Add colored backgrounds to OSD messages, according to type.\"\n[#17674]: https://github.com/hrydgard/ppsspp/issues/17674 \"New UI view: Notice\"\n[#17672]: https://github.com/hrydgard/ppsspp/issues/17672 \"Android: Show some Java exceptions as they happen\"\n[#17834]: https://github.com/hrydgard/ppsspp/issues/17834 \"OpenCFile: Fix Android content-uri append mode\"\n[#17704]: https://github.com/hrydgard/ppsspp/issues/17704 \"OpenXR - Enhancements of cinema-style screen\"\n[#17752]: https://github.com/hrydgard/ppsspp/issues/17752 \"OpenXR - Enable 6DoF in cinema mode\"\n[#17591]: https://github.com/hrydgard/ppsspp/issues/17591 \"OpenXR - Add passthrough option (Quest only)\"\n[#17636]: https://github.com/hrydgard/ppsspp/issues/17636 \"OpenXR - Major review\"\n[#17656]: https://github.com/hrydgard/ppsspp/issues/17656 \"OpenXR - Game compatibility fixes\"\n[#17598]: https://github.com/hrydgard/ppsspp/issues/17598 \"OpenXR - Disable stereo for Ultimate Ghosts and Goblins\"\n[#17518]: https://github.com/hrydgard/ppsspp/issues/17518 \"OpenXR - Enable VR settings per game\"\n[#18076]: https://github.com/hrydgard/ppsspp/issues/18076 \"SasAudio: Always reinitialize the VAG decoder on sceSasSetVoice, even if already playing\"\n[#17506]: https://github.com/hrydgard/ppsspp/issues/17506 \"Emulating HW vrnd\"\n[#17549]: https://github.com/hrydgard/ppsspp/issues/17549 \"Fix vrnd to the current understanding\"\n[#17676]: https://github.com/hrydgard/ppsspp/issues/17676 \"Reduce delays in sceKernelReferThreadProfiler/ReferGlobalProfiler.\"\n[#17677]: https://github.com/hrydgard/ppsspp/issues/17677 \"Kernel: Use lower profiler func timing\"\n[#17952]: https://github.com/hrydgard/ppsspp/issues/17952 \"[UWP] Improvements 2 (Configs, Render, Input)\"\n[#17974]: https://github.com/hrydgard/ppsspp/issues/17974 \"(UWP) Another Round of Code Cleanups\""
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "libretro",
          "type": "tree",
          "content": null
        },
        {
          "name": "link_readme.py",
          "type": "blob",
          "size": 2.39453125,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# Requirement:\n# python3 -m pip install lxml\n\nimport re\nfrom time import sleep\nfrom urllib.request import urlopen\nfrom urllib.error import HTTPError\nfrom lxml.html import parse\n\nfooter_delimiter = \"\\n\\n[comment]: # (LINK_LIST_BEGIN_HERE)\\n\"\nfooter = \"\"\nlinked_id = []\npresent_id = []\n\ndef add_bracket(match):\n\tfirst_char = match.group(1)\n\tid = match.group(2)\n\treplace = first_char + \"[#\"+id+\"]\"\n\treturn replace\n\ndef add_link(match):\n\tid = match.group(1)\n\tpresent_id.append(id)\n\treplace = \"#\" + id\n\tif id in linked_id:\n\t\treturn replace\n\n\turl = \"https://github.com/hrydgard/ppsspp/issues/\"+id\n\ttitle = None\n\twhile title is None:\n\t\ttry:\n\t\t\tp = parse(urlopen(url))\n\t\t\ttitle = p.find(\".//title\").text.split('by')[0].split('·')[0].strip()\n\t\t\ttitle = re.sub(r\"\\\"\", r'\\\\\"', title)\n\t\texcept HTTPError:\n\t\t\tprint(\"Something went wrong, retrying in 10 sec...\")\n\t\t\tsleep(10)\n\n\tglobal footer\n\taddition = \"[#\"+id+\"]: https://github.com/hrydgard/ppsspp/issues/\"+id+\" \\\"\"+title+\"\\\"\"\n\tfooter += addition+\"\\n\"\n\tlinked_id.append(id)\n\tprint(\"Linked: \" + addition)\n\treturn replace\n\ndef already_added_id(match):\n\tlinked_id.append(match.group(1))\n\treturn \"[#\" + match.group(1) + \"]:\"\n\ndef remove_old_link(line):\n\t# Ignore extra new lines at the end\n\tif line.find(\"#\") == -1:\n\t\treturn \"\"\n\t\t\n\tid = line[line.find(\"[#\")+2 : line.find(\"]:\")]\n\tif id in present_id:\n\t\treturn line + \"\\n\"\n\telse:\n\t\tprint(\"Removed: #\" + id)\n\t\treturn \"\"\n\ndef update(file_name):\n\tglobal footer\n\tfooter = \"\"\n\tglobal linked_id\n\tlinked_id = []\n\tglobal present_id\n\tpresent_id = []\n\n\tf = open(file_name, \"r+\")\n\tcont = f.read()\n\n\t# We don't want to match issues id in title so stop before the link list\n\td = cont.find(footer_delimiter)\n\tif (d != -1):\n\t\tfooter = cont[d + len(footer_delimiter):]\n\t\tcont = cont[0 : d]\n\t\tre.sub(r\"\\[#(\\d+)\\]:\", already_added_id, footer)\n\t\tif footer[-1] != \"\\n\":\n\t\t\tfooter += \"\\n\"\n\n\t# Add brackets if missing\n\tadded_bracket = re.sub(r\"([^[])#(\\d+)\", add_bracket, cont)\n\n\t# Add links if missing\n\tupdated = re.sub(r\"#(\\d+)\", add_link, added_bracket)\n\n\t# Remove old unused link\n\tupdated_footer = \"\"\n\tfor line in footer.split(\"\\n\"):\n\t\tupdated_footer += remove_old_link(line)\n\n\t# Remove extra new lines at the end\n\twhile updated_footer[-1] == \"\\n\":\n\t\tupdated_footer = updated_footer[0:-1]\n\n\tf.seek(0)\n\tf.write(updated)\n\tf.write(footer_delimiter)\n\tf.write(updated_footer)\n\tf.truncate()\n\tf.close()\n\nupdate(\"README.md\")\nupdate(\"history.md\")\n"
        },
        {
          "name": "macOS",
          "type": "tree",
          "content": null
        },
        {
          "name": "notinstalled.txt",
          "type": "blob",
          "size": 0.14453125,
          "content": "This gets renamed to \"installed.txt\" in the installer.\nTells PPSSPP to consider itself installed and to not write data files into its own directory."
        },
        {
          "name": "ppge_atlasscript.txt",
          "type": "blob",
          "size": 0.3291015625,
          "content": "2048\nfont UBUNTU24 C:/Windows/Fonts/KozGoPro-Medium.otf UWkhcsGR 24\nfont UBUNTU24 C:/Windows/Fonts/ARIALUNI.ttf UWEhkcRGHKVTe 24 0\nimage I_CROSS source_assets/image/cross.png copy\nimage I_CIRCLE source_assets/image/circle.png copy\nimage I_SQUARE source_assets/image/square.png copy\nimage I_TRIANGLE source_assets/image/triangle.png copy\n"
        },
        {
          "name": "ppsspp.desktop.in",
          "type": "blob",
          "size": 0.30859375,
          "content": "[Desktop Entry]\nName=@TargetBin@\nExec=@TargetBin@\nIcon=ppsspp\nType=Application\nComment=ppsspp (fast and portable PSP emulator)\nKeywords=Sony;PlayStation;Portable;PSP;handheld;console;\nCategories=Game;Emulator;\nMimeType=application/x-cd-image;application/x-iso9660-image;application/x-compressed-iso;application/zip;\n"
        },
        {
          "name": "ppsspp.iss",
          "type": "blob",
          "size": 4.375,
          "content": "#define ApplicationName 'PPSSPP'\n#define ApplicationVersion GetFileVersion('PPSSPPWindows.exe')\n\n[Languages]\nName: \"en\"; MessagesFile: \"compiler:Default.isl\"\nName: \"ar\"; MessagesFile: \"compiler:Languages\\Armenian.islu\"\nName: \"br\"; MessagesFile: \"compiler:Languages\\BrazilianPortuguese.isl\"\nName: \"ca\"; MessagesFile: \"compiler:Languages\\Catalan.isl\"\nName: \"co\"; MessagesFile: \"compiler:Languages\\Corsican.isl\"\nName: \"cz\"; MessagesFile: \"compiler:Languages\\Czech.isl\"\nName: \"da\"; MessagesFile: \"compiler:Languages\\Danish.isl\"\nName: \"du\"; MessagesFile: \"compiler:Languages\\Dutch.isl\"\nName: \"fi\"; MessagesFile: \"compiler:Languages\\Finnish.isl\"\nName: \"fr\"; MessagesFile: \"compiler:Languages\\French.isl\"\nName: \"ge\"; MessagesFile: \"compiler:Languages\\German.isl\"\nName: \"gr\"; MessagesFile: \"compiler:Languages\\Greek.isl\"\nName: \"he\"; MessagesFile: \"compiler:Languages\\Hebrew.isl\"\nName: \"hu\"; MessagesFile: \"compiler:Languages\\Hungarian.isl\"\nName: \"it\"; MessagesFile: \"compiler:Languages\\Italian.isl\"\nName: \"ja\"; MessagesFile: \"compiler:Languages\\Japanese.isl\"\nName: \"ne\"; MessagesFile: \"compiler:Languages\\Nepali.islu\"\nName: \"no\"; MessagesFile: \"compiler:Languages\\Norwegian.isl\"\nName: \"pl\"; MessagesFile: \"compiler:Languages\\Polish.isl\"\nName: \"po\"; MessagesFile: \"compiler:Languages\\Portuguese.isl\"\nName: \"ru\"; MessagesFile: \"compiler:Languages\\Russian.isl\"\nName: \"sc\"; MessagesFile: \"compiler:Languages\\ScottishGaelic.isl\"\nName: \"sec\"; MessagesFile: \"compiler:Languages\\SerbianCyrillic.isl\"\nName: \"ser\"; MessagesFile: \"compiler:Languages\\SerbianLatin.isl\"\nName: \"sl\"; MessagesFile: \"compiler:Languages\\Slovenian.isl\"\nName: \"sp\"; MessagesFile: \"compiler:Languages\\Spanish.isl\"\nName: \"tr\"; MessagesFile: \"compiler:Languages\\Turkish.isl\"\nName: \"uk\"; MessagesFile: \"compiler:Languages\\Ukrainian.isl\"\n; more languages are available at: http://www.jrsoftware.org/files/istrans/\n; but those need to be mirrored on PPSSPP repo somehow\n\n[Setup]\n; Installer - name for title and wizard pages\nAppName={#ApplicationName}\n; Installer - version\nVersionInfoVersion={#ApplicationVersion}\n\n; Programs and Features - Name\nAppVerName={#ApplicationName}\n; Programs and Features - Version\nAppVersion={#ApplicationVersion}\n; Programs and Features - Publisher\nAppPublisher=PPSSPP Team\n; Programs and Features - Help link\nAppSupportURL=https://forums.ppsspp.org\n; Programs and Features - Support link\nAppPublisherURL=https://www.ppsspp.org\n; Programs and Features - Update information\nAppUpdatesURL=https://www.ppsspp.org/downloads.html\n\nDefaultDirName={pf}\\PPSSPP\n; Since no icons will be created in \"{group}\", we don't need the wizard\n; to ask for a Start Menu folder name:\nDisableProgramGroupPage=yes\nUninstallDisplayIcon={app}\\PPSSPPWindows.exe\n; Detect the correct directory for Program Files x86/64\nArchitecturesInstallIn64BitMode=x64\n\n; Save the installer as ...\nOutputBaseFilename={#ApplicationName}_{#ApplicationVersion}_Setup\n; ... in the same directory\nOutputDir=.\n\n[Files]\nSource: \"PPSSPPWindows.exe\"; DestDir: \"{app}\"\nSource: \"PPSSPPWindows64.exe\"; DestDir: \"{app}\"; Check: IsWin64\nSource: \"README.md\"; DestName: \"README.txt\"; DestDir: \"{app}\"; Flags: isreadme\n; Special file to signify that we are installed, and not \"portable\" and should look for\n; configuration etc in the user's directory, not in our own subdirectory.\nSource: \"notinstalled.txt\"; DestName: \"installed.txt\"; DestDir: \"{app}\";\nSource: \"assets\\*.*\"; DestDir: \"{app}\\assets\"\nSource: \"assets\\shaders\\*.*\"; DestDir: \"{app}\\assets\\shaders\"\nSource: \"assets\\themes\\*.*\"; DestDir: \"{app}\\assets\\themes\"\nSource: \"assets\\debugger\\*\"; DestDir: \"{app}\\assets\\debugger\"; Flags: recursesubdirs\nSource: \"assets\\lang\\*.ini\"; DestDir: \"{app}\\assets\\lang\"\nSource: \"assets\\flash0\\font\\*.*\"; DestDir: \"{app}\\assets\\flash0\\font\"\nSource: \"assets\\vfpu\\*.*\"; DestDir: \"{app}\\assets\\vfpu\"\nSource: \"dx9sdk\\8.1\\Redist\\D3D\\x64\\d3dcompiler_47.dll\"; DestDir: \"{app}\"\nSource: \"dx9sdk\\8.1\\Redist\\D3D\\x86\\d3dcompiler_47.dll\"; DestName: \"d3dcompiler_47.x86.dll\"; DestDir: \"{app}\"\n\n[Run]\nFilename: {app}\\PPSSPPWindows.exe; Description: {cm:LaunchProgram,{#ApplicationName}}; Flags: nowait postinstall skipifsilent; Check: not IsWin64\nFilename: {app}\\PPSSPPWindows64.exe; Description: {cm:LaunchProgram,{#ApplicationName}}; Flags: nowait postinstall skipifsilent; Check: IsWin64\n\n[Icons]\nName: \"{commonprograms}\\PPSSPP\"; Filename: \"{app}\\PPSSPPWindows.exe\"; Check: not IsWin64\nName: \"{commonprograms}\\PPSSPP\"; Filename: \"{app}\\PPSSPPWindows64.exe\"; Check: IsWin64\n\n"
        },
        {
          "name": "ppsspp_config.h",
          "type": "blob",
          "size": 3.74609375,
          "content": "#pragma once\n\n// This file is included by C, C++ and ASM files\n// So do not output any token!\n\n#define PPSSPP_ARCH(PPSSPP_FEATURE) (PPSSPP_ARCH_##PPSSPP_FEATURE)\n#define PPSSPP_PLATFORM(PPSSPP_FEATURE) (PPSSPP_PLATFORM_##PPSSPP_FEATURE)\n#define PPSSPP_API(PPSSPP_FEATURE) (PPSSPP_API_##PPSSPP_FEATURE)\n\n// ARCH defines\n#if defined(_M_IX86) || defined(__i386__) || defined (__EMSCRIPTEN__)\n    #define PPSSPP_ARCH_X86 1\n    #define PPSSPP_ARCH_32BIT 1\n    #define PPSSPP_ARCH_SSE2 1\n    //TODO: Remove this compat define\n    #ifndef _M_IX86\n        #define _M_IX86 600\n    #endif\n#endif\n\n#if (defined(_M_X64) || defined(__amd64__) || defined(__x86_64__)) && !defined(__EMSCRIPTEN__)\n    #define PPSSPP_ARCH_AMD64 1\n    #define PPSSPP_ARCH_SSE2 1\n    #if defined(__ILP32__)\n        #define PPSSPP_ARCH_32BIT 1\n    #else\n        #define PPSSPP_ARCH_64BIT 1\n    #endif\n    //TODO: Remove this compat define\n    #ifndef _M_X64\n        #define _M_X64 1\n    #endif\n#endif\n\n#if defined(__arm__) || defined(_M_ARM)\n    #define PPSSPP_ARCH_ARM 1\n    #define PPSSPP_ARCH_32BIT 1\n\n    #if defined(__ARM_ARCH_7__) || \\\n      defined(__ARM_ARCH_7A__) || \\\n      defined(__ARM_ARCH_7S__)\n        #define PPSSPP_ARCH_ARMV7 1\n    #endif\n\n    #if defined(__ARM_ARCH_7S__)\n        #define PPSSPP_ARCH_ARMV7S 1\n    #endif\n\n    #if defined(__ARM_NEON) || defined(__ARM_NEON__)\n        #define PPSSPP_ARCH_ARM_NEON 1\n    #endif\n\n    #if defined(_M_ARM)\n        #define PPSSPP_ARCH_ARMV7 1\n        #define PPSSPP_ARCH_ARM_NEON 1\n    #endif\n#endif\n\n#if defined(__aarch64__) || defined(_M_ARM64)\n    #define PPSSPP_ARCH_ARM64 1\n    #define PPSSPP_ARCH_64BIT 1\n    #define PPSSPP_ARCH_ARM_NEON 1  // Applies to both ARM32 and ARM64\n    #define PPSSPP_ARCH_ARM64_NEON 1\n#endif\n\n#if defined(__mips64__)\n    #define PPSSPP_ARCH_MIPS64 1\n    #define PPSSPP_ARCH_64BIT 1\n#elif defined(__mips__)\n    #define PPSSPP_ARCH_MIPS 1\n    #define PPSSPP_ARCH_32BIT 1\n#endif\n\n#if defined(__riscv) && defined(__riscv_xlen) && __riscv_xlen == 64\n    //https://github.com/riscv/riscv-c-api-doc/blob/master/riscv-c-api.md\n    #define PPSSPP_ARCH_RISCV64 1\n    #define PPSSPP_ARCH_64BIT 1\n#endif\n\n#if defined(__loongarch_lp64)\n    //https://github.com/gcc-mirror/gcc/blob/master/gcc/config/loongarch/loongarch-c.cc\n    #define PPSSPP_ARCH_LOONGARCH64 1\n    #define PPSSPP_ARCH_64BIT 1\n#endif\n\n// PLATFORM defines\n#if defined(_WIN32)\n    // Covers both 32 and 64bit Windows\n    #define PPSSPP_PLATFORM_WINDOWS 1\n\t#ifdef _M_ARM\n        #define PPSSPP_ARCH_ARM_HARDFP 1\n\t#endif\n\t// UWP trickery\n    #if defined(WINAPI_FAMILY) && defined(WINAPI_FAMILY_PARTITION)\n        #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP\n            #define PPSSPP_PLATFORM_UWP 1\n        #endif\n    #endif\n#elif defined(__APPLE__)\n    #include <TargetConditionals.h>\n    #if TARGET_IPHONE_SIMULATOR\n        #define PPSSPP_PLATFORM_IOS 1\n        #define PPSSPP_PLATFORM_IOS_SIMULATOR 1\n    #elif TARGET_OS_IPHONE\n        #define PPSSPP_PLATFORM_IOS 1\n    #elif TARGET_OS_MAC\n        #define PPSSPP_PLATFORM_MAC 1\n    #else\n        #error \"Unknown Apple platform\"\n    #endif\n#elif defined(__SWITCH__)\n    #define PPSSPP_PLATFORM_SWITCH 1\n#elif defined(__ANDROID__)\n    #define PPSSPP_PLATFORM_ANDROID 1\n    #define PPSSPP_PLATFORM_LINUX 1\n#elif defined(__linux__)\n    #define PPSSPP_PLATFORM_LINUX 1\n#elif defined(__OpenBSD__)\n    #define PPSSPP_PLATFORM_OPENBSD 1\n#endif\n\n// Windows ARM/ARM64, and Windows UWP (all), are the only platform that don't do GL at all (until Apple finally removes it)\n#if !PPSSPP_PLATFORM(WINDOWS) || ((!PPSSPP_ARCH(ARM) && !PPSSPP_ARCH(ARM64)) && !PPSSPP_PLATFORM(UWP))\n#define PPSSPP_API_ANY_GL 1\n#endif\n\n#if PPSSPP_PLATFORM(WINDOWS)\n#if !PPSSPP_PLATFORM(UWP)\n#define PPSSPP_API_D3D9 1\n#endif\n#define PPSSPP_API_D3D11 1\n#endif\n\n"
        },
        {
          "name": "pspautotests",
          "type": "commit",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0185546875,
          "content": "include ':android'\n"
        },
        {
          "name": "source_assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "tesselationhwON-mesa3drun.sh",
          "type": "blob",
          "size": 0.1845703125,
          "content": "#!/bin/sh\necho \"We need force Opengl 3.3 Compatibility context for run HW tesselation in mesa3d open source\" \nMESA_GL_VERSION_OVERRIDE=3.3COMPAT\nexport MESA_GL_VERSION_OVERRIDE\n./PPSSPPSDL\n"
        },
        {
          "name": "test.py",
          "type": "blob",
          "size": 15.3388671875,
          "content": "#!/usr/bin/env python\n# Automated script to run the pspautotests test suite in PPSSPP.\n\nimport sys\nimport os\nimport subprocess\nimport threading\nimport glob\n\n\nPPSSPP_EXECUTABLES = [\n  # Windows\n  \"Windows\\\\Debug\\\\PPSSPPHeadless.exe\",\n  \"Windows\\\\Release\\\\PPSSPPHeadless.exe\",\n  \"Windows\\\\x64\\\\Debug\\\\PPSSPPHeadless.exe\",\n  \"Windows\\\\x64\\\\Release\\\\PPSSPPHeadless.exe\",\n  \"build*/PPSSPPHeadless.exe\",\n  \"./PPSSPPHeadless.exe\",\n  # Mac\n  \"build*/Debug/PPSSPPHeadless\",\n  \"build*/Release/PPSSPPHeadless\",\n  \"build*/RelWithDebInfo/PPSSPPHeadless\",\n  \"build*/MinSizeRel/PPSSPPHeadless\",\n  # Linux\n  \"build*/PPSSPPHeadless\",\n  \"./PPSSPPHeadless\",\n  # CI\n  \"ppsspp/PPSSPPHeadless\",\n  \"ppsspp\\\\PPSSPPHeadless.exe\",\n]\n\nPPSSPP_EXE = None\nTEST_ROOT = \"pspautotests/tests/\"\nTIMEOUT = 5\n\nclass Command(object):\n  def __init__(self, cmd, data = None):\n    self.cmd = cmd\n    self.data = data\n    self.process = None\n    self.output = None\n    self.timeout = False\n\n  def run(self, timeout):\n    def target():\n      self.process = subprocess.Popen(self.cmd, stdin=subprocess.PIPE, stdout=sys.stdout, stderr=subprocess.STDOUT)\n      self.process.stdin.write(self.data.encode('utf-8'))\n      self.process.stdin.close()\n      self.process.communicate()\n\n    thread = threading.Thread(target=target)\n    thread.start()\n\n    thread.join(timeout)\n    if thread.is_alive():\n      self.timeout = True\n      if sys.version_info < (2, 6):\n        os.kill(self.process.pid, signal.SIGKILL)\n      else:\n        self.process.terminate()\n      thread.join()\n\n    return self.process.returncode\n\n# Test names are the C files without the .c extension.\n# These have worked and should keep working always - regression tests.\ntests_good = [\n  \"cpu/cpu_alu/cpu_alu\",\n  \"cpu/cpu_alu/cpu_branch\",\n  \"cpu/cpu_alu/cpu_branch2\",\n  \"cpu/vfpu/colors\",\n  \"cpu/vfpu/convert\",\n  \"cpu/vfpu/gum\",\n  \"cpu/vfpu/matrix\",\n  \"cpu/vfpu/vavg\",\n  \"cpu/icache/icache\",\n  \"cpu/lsu/lsu\",\n  \"cpu/fpu/fpu\",\n\n  \"audio/atrac/addstreamdata\",\n  \"audio/atrac/atractest\",\n  \"audio/atrac/decode\",\n  \"audio/atrac/getremainframe\",\n  \"audio/atrac/getsoundsample\",\n  \"audio/atrac/ids\",\n  \"audio/atrac/resetpos\",\n  \"audio/atrac/resetting\",\n  \"audio/atrac/second/getinfo\",\n  \"audio/atrac/second/needed\",\n  \"audio/atrac/second/setbuffer\",\n  \"audio/atrac/setdata\",\n  \"audio/mp3/checkneeded\",\n  \"audio/mp3/getbitrate\",\n  \"audio/mp3/getchannel\",\n  \"audio/mp3/getframenum\",\n  \"audio/mp3/getloopnum\",\n  \"audio/mp3/getmaxoutput\",\n  \"audio/mp3/getmpegversion\",\n  \"audio/mp3/getsamplerate\",\n  \"audio/mp3/getsumdecoded\",\n  \"audio/mp3/initresource\",\n  \"audio/mp3/mp3test\",\n  \"audio/mp3/release\",\n  \"audio/mp3/reserve\",\n  \"audio/mp3/setloopnum\",\n  \"audio/output2/changelength\",\n  \"audio/output2/reserve\",\n  \"audio/output2/threads\",\n  \"audio/reverb/basic\",\n  \"audio/reverb/volume\",\n  \"audio/sascore/sascore\",\n  \"audio/sascore/adsrcurve\",\n  \"audio/sascore/getheight\",\n  \"audio/sascore/keyoff\",\n  \"audio/sascore/keyon\",\n  \"audio/sascore/noise\",\n  \"audio/sascore/outputmode\",\n  \"audio/sascore/pause\",\n  \"audio/sascore/pcm\",\n  \"audio/sascore/pitch\",\n  \"audio/sascore/vag\",\n  \"ctrl/ctrl\",\n  \"ctrl/idle/idle\",\n  \"ctrl/sampling/sampling\",\n  \"ctrl/sampling2/sampling2\",\n  \"ctrl/vblank\",\n  \"display/display\",\n  \"display/vblankmulti\",\n  \"display/isstate\",\n  \"display/setframebuf\",\n  \"display/setmode\",\n  \"dmac/dmactest\",\n  \"font/altcharcode\",\n  \"font/charimagerect\",\n  \"font/find\",\n  \"font/fontinfo\",\n  \"font/fontinfobyindex\",\n  \"font/fontlist\",\n  \"font/optimum\",\n  \"font/resolution\",\n  \"font/shadowimagerect\",\n  \"gpu/bounding/count\",\n  \"gpu/bounding/planes\",\n  \"gpu/bounding/vertexaddr\",\n  \"gpu/bounding/viewport\",\n  \"gpu/callbacks/ge_callbacks\",\n  \"gpu/clipping/homogeneous\",\n  \"gpu/clut/address\",\n  \"gpu/clut/masks\",\n  \"gpu/clut/offset\",\n  \"gpu/clut/shifts\",\n  \"gpu/commands/basic\",\n  \"gpu/commands/blend\",\n  \"gpu/commands/blend565\",\n  \"gpu/commands/blocktransfer\",\n  \"gpu/commands/cull\",\n  \"gpu/commands/fog\",\n  \"gpu/commands/material\",\n  \"gpu/complex/complex\",\n  \"gpu/displaylist/alignment\",\n  \"gpu/dither/dither\",\n  \"gpu/filtering/mipmaplinear\",\n  \"gpu/ge/break\",\n  \"gpu/ge/context\",\n  \"gpu/ge/edram\",\n  \"gpu/ge/enqueueparam\",\n  \"gpu/ge/queue\",\n  \"gpu/primitives/indices\",\n  \"gpu/primitives/invalidprim\",\n  \"gpu/primitives/points\",\n  \"gpu/primitives/rectangles\",\n  \"gpu/primitives/trianglefan\",\n  \"gpu/primitives/trianglestrip\",\n  \"gpu/primitives/triangles\",\n  \"gpu/rendertarget/copy\",\n  \"gpu/rendertarget/depal\",\n  \"gpu/signals/pause\",\n  \"gpu/signals/pause2\",\n  \"gpu/signals/suspend\",\n  \"gpu/signals/sync\",\n  \"gpu/texcolors/dxt1\",\n  \"gpu/texcolors/dxt3\",\n  \"gpu/texcolors/dxt5\",\n  \"gpu/texcolors/rgb565\",\n  \"gpu/texcolors/rgba4444\",\n  \"gpu/texcolors/rgba5551\",\n  \"gpu/texfunc/add\",\n  \"gpu/texfunc/blend\",\n  \"gpu/texfunc/decal\",\n  \"gpu/texfunc/modulate\",\n  \"gpu/texfunc/replace\",\n  \"gpu/textures/mipmap\",\n  \"gpu/textures/rotate\",\n  \"gpu/transfer/invalid\",\n  \"gpu/transfer/mirrors\",\n  \"gpu/transfer/overlap\",\n  \"gpu/vertices/colors\",\n  \"gpu/vertices/morph\",\n  # \"gpu/vertices/texcoords\",  #  See issue #19093\n  \"hash/hash\",\n  \"hle/check_not_used_uids\",\n  \"intr/intr\",\n  \"intr/enablesub\",\n  \"intr/suspended\",\n  \"intr/vblank/vblank\",\n  \"io/cwd/cwd\",\n  \"io/open/badparent\",\n  \"jpeg/create\",\n  \"jpeg/delete\",\n  \"jpeg/finish\",\n  \"jpeg/init\",\n  \"loader/bss/bss\",\n  \"malloc/malloc\",\n  \"misc/dcache\",\n  \"misc/deadbeef\",\n  \"misc/libc\",\n  \"misc/sdkver\",\n  \"misc/testgp\",\n  \"misc/timeconv\",\n  \"mstick/mstick\",\n  \"power/cpu\",\n  \"power/power\",\n  \"power/volatile/lock\",\n  \"power/volatile/trylock\",\n  \"power/volatile/unlock\",\n  \"rtc/rtc\",\n  \"rtc/arithmetic\",\n  \"rtc/lookup\",\n  \"string/string\",\n  \"sysmem/freesize\",\n  \"sysmem/memblock\",\n  \"sysmem/sysmem\",\n  \"sysmem/volatile\",\n  \"threads/alarm/alarm\",\n  \"threads/alarm/cancel/cancel\",\n  \"threads/alarm/refer/refer\",\n  \"threads/alarm/set/set\",\n  \"threads/callbacks/callbacks\",\n  \"threads/callbacks/check\",\n  \"threads/callbacks/create\",\n  \"threads/callbacks/delete\",\n  \"threads/callbacks/exit\",\n  \"threads/callbacks/refer\",\n  \"threads/events/events\",\n  \"threads/events/cancel/cancel\",\n  \"threads/events/clear/clear\",\n  \"threads/events/create/create\",\n  \"threads/events/delete/delete\",\n  \"threads/events/poll/poll\",\n  \"threads/events/refer/refer\",\n  \"threads/events/set/set\",\n  \"threads/events/wait/wait\",\n  \"threads/fpl/fpl\",\n  \"threads/fpl/allocate\",\n  \"threads/fpl/cancel\",\n  \"threads/fpl/create\",\n  \"threads/fpl/delete\",\n  \"threads/fpl/free\",\n  \"threads/fpl/priority\",\n  \"threads/fpl/refer\",\n  \"threads/fpl/tryallocate\",\n  \"threads/k0/k0\",\n  \"threads/lwmutex/create\",\n  \"threads/lwmutex/delete\",\n  \"threads/lwmutex/lock\",\n  \"threads/lwmutex/priority\",\n  \"threads/lwmutex/refer\",\n  \"threads/lwmutex/try\",\n  \"threads/lwmutex/try600\",\n  \"threads/lwmutex/unlock\",\n  \"threads/mbx/mbx\",\n  \"threads/mbx/cancel/cancel\",\n  \"threads/mbx/create/create\",\n  \"threads/mbx/delete/delete\",\n  \"threads/mbx/poll/poll\",\n  \"threads/mbx/priority/priority\",\n  \"threads/mbx/receive/receive\",\n  \"threads/mbx/refer/refer\",\n  \"threads/mbx/send/send\",\n  \"threads/msgpipe/msgpipe\",\n  \"threads/msgpipe/cancel\",\n  \"threads/msgpipe/create\",\n  \"threads/msgpipe/data\",\n  \"threads/msgpipe/delete\",\n  \"threads/msgpipe/receive\",\n  \"threads/msgpipe/refer\",\n  \"threads/msgpipe/send\",\n  \"threads/msgpipe/tryreceive\",\n  \"threads/msgpipe/trysend\",\n  \"threads/mutex/cancel\",\n  \"threads/mutex/create\",\n  \"threads/mutex/delete\",\n  \"threads/mutex/lock\",\n  \"threads/mutex/mutex\",\n  \"threads/mutex/priority\",\n  \"threads/mutex/refer\",\n  \"threads/mutex/try\",\n  \"threads/mutex/unlock\",\n  \"threads/mutex/unlock2\",\n  \"threads/semaphores/semaphores\",\n  \"threads/semaphores/cancel\",\n  \"threads/semaphores/create\",\n  \"threads/semaphores/delete\",\n  \"threads/semaphores/fifo\",\n  \"threads/semaphores/poll\",\n  \"threads/semaphores/priority\",\n  \"threads/semaphores/refer\",\n  \"threads/semaphores/signal\",\n  \"threads/semaphores/wait\",\n  \"threads/threads/change\",\n  \"threads/threads/exitstatus\",\n  \"threads/threads/extend\",\n  \"threads/threads/refer\",\n  \"threads/threads/release\",\n  \"threads/threads/rotate\",\n  \"threads/threads/stackfree\",\n  \"threads/threads/start\",\n  \"threads/threads/suspend\",\n  \"threads/threads/threadend\",\n  \"threads/threads/threadmanidlist\",\n  \"threads/threads/threadmanidtype\",\n  \"threads/threads/threads\",\n  \"threads/tls/create\",\n  \"threads/tls/delete\",\n  \"threads/tls/free\",\n  \"threads/tls/priority\",\n  \"threads/tls/refer\",\n  \"threads/vpl/allocate\",\n  \"threads/vpl/cancel\",\n  \"threads/vpl/delete\",\n  \"threads/vpl/fifo\",\n  \"threads/vpl/free\",\n  \"threads/vpl/order\",\n  \"threads/vpl/priority\",\n  \"threads/vpl/refer\",\n  \"threads/vpl/try\",\n  \"threads/vpl/vpl\",\n  \"threads/vtimers/vtimer\",\n  \"threads/vtimers/cancelhandler\",\n  \"threads/vtimers/create\",\n  \"threads/vtimers/delete\",\n  \"threads/vtimers/getbase\",\n  \"threads/vtimers/gettime\",\n  \"threads/vtimers/interrupt\",\n  \"threads/vtimers/refer\",\n  \"threads/vtimers/sethandler\",\n  \"threads/vtimers/settime\",\n  \"threads/vtimers/start\",\n  \"threads/vtimers/stop\",\n  \"threads/wakeup/wakeup\",\n  \"utility/msgdialog/abort\",\n  \"utility/savedata/autosave\",\n  \"utility/savedata/filelist\",\n  \"utility/savedata/makedata\",\n  \"umd/callbacks/umd\",\n  \"umd/register\",\n  \"video/mpeg/ringbuffer/avail\",\n  \"video/mpeg/ringbuffer/construct\",\n  \"video/mpeg/ringbuffer/destruct\",\n  \"video/mpeg/ringbuffer/memsize\",\n  \"video/mpeg/ringbuffer/packnum\",\n  \"video/psmfplayer/break\",\n  \"video/psmfplayer/create\",\n  \"video/psmfplayer/delete\",\n  \"video/psmfplayer/getaudiodata\",\n  \"video/psmfplayer/getaudiooutsize\",\n  \"video/psmfplayer/getcurrentpts\",\n  \"video/psmfplayer/getcurrentstatus\",\n  \"video/psmfplayer/getcurrentstream\",\n  \"video/psmfplayer/getpsmfinfo\",\n  \"video/psmfplayer/releasepsmf\",\n  \"video/psmfplayer/selectspecific\",\n  \"video/psmfplayer/setpsmf\",\n  \"video/psmfplayer/settempbuf\",\n  \"video/psmfplayer/stop\",\n]\n\ntests_next = [\n# These are the next tests up for fixing. These run by default.\n  \"cpu/fpu/fcr\",\n  \"cpu/vfpu/prefixes\",\n  \"cpu/vfpu/vector\",\n  \"cpu/vfpu/vregs\",\n  \"audio/atrac/replay\",\n  \"audio/atrac/second/resetting\",\n  \"audio/sceaudio/datalen\",\n  \"audio/sceaudio/output\",\n  \"audio/sceaudio/reserve\",\n  \"audio/sascore/setadsr\",\n  \"audio/mp3/infotoadd\",\n  \"audio/mp3/init\",\n  \"audio/mp3/notifyadd\",\n  \"audio/output2/frequency\",\n  \"audio/output2/release\",\n  \"audio/output2/rest\",\n  \"ccc/convertstring\",\n  \"display/hcount\",\n  \"font/fonttest\",\n  \"font/charglyphimage\",\n  \"font/charglyphimageclip\",\n  \"font/charinfo\",\n  \"font/newlib\",\n  \"font/open\",\n  \"font/openfile\",\n  \"font/openmem\",\n  \"font/shadowglyphimage\",\n  \"font/shadowglyphimageclip\",\n  \"font/shadowinfo\",\n  \"gpu/clipping/guardband\",\n  \"gpu/commands/light\",\n  \"gpu/depth/precision\",\n  \"gpu/displaylist/state\",\n  \"gpu/filtering/linear\",\n  \"gpu/filtering/nearest\",\n  \"gpu/filtering/precisionlinear2d\",\n  \"gpu/filtering/precisionlinear3d\",\n  \"gpu/filtering/precisionnearest2d\",\n  \"gpu/filtering/precisionnearest3d\",\n  \"gpu/ge/edramswizzle\",\n  \"gpu/ge/get\",\n  \"gpu/primitives/bezier\",\n  \"gpu/primitives/continue\",\n  \"gpu/primitives/immediate\",\n  \"gpu/primitives/lines\",\n  \"gpu/primitives/linestrip\",\n  \"gpu/primitives/spline\",\n  \"gpu/reflection/reflection\",\n  \"gpu/rendertarget/rendertarget\",\n  \"gpu/signals/continue\",\n  \"gpu/signals/jumps\",\n  \"gpu/signals/simple\",\n  \"gpu/simple/simple\",\n  \"gpu/texmtx/normals\",\n  \"gpu/texmtx/prims\",\n  \"gpu/texmtx/source\",\n  \"gpu/texmtx/uvs\",\n  \"gpu/textures/size\",\n  \"gpu/triangle/triangle\",\n  \"intr/registersub\",\n  \"intr/releasesub\",\n  \"intr/waits\",\n  \"io/directory/directory\",\n  \"io/file/file\",\n  \"io/file/rename\",\n  \"io/io/io\",\n  \"io/iodrv/iodrv\",\n  \"io/open/tty0\",\n  \"jpeg/csc\",\n  \"jpeg/decode\",\n  \"jpeg/decodes\",\n  \"jpeg/decodeycbcr\",\n  \"jpeg/decodeycbcrs\",\n  \"jpeg/getoutputinfo\",\n  \"jpeg/mjpegcsc\",\n  # Doesn't work on a PSP for security reasons, hangs in PPSSPP currently.\n  # Commented out to make tests run much faster.\n  #\"modules/loadexec/loader\",\n  \"net/http/http\",\n  \"net/primary/ether\",\n  \"power/freq\",\n  \"rtc/convert\",\n  \"sysmem/partition\",\n  \"threads/callbacks/cancel\",\n  \"threads/callbacks/count\",\n  \"threads/callbacks/notify\",\n  \"threads/scheduling/dispatch\",\n  \"threads/scheduling/scheduling\",\n  \"threads/threads/create\",\n  \"threads/threads/terminate\",\n  \"threads/tls/get\",\n  \"threads/vpl/create\",\n  \"umd/io/umd_io\",\n  \"umd/raw_access/raw_access\",\n  \"umd/wait/wait\",\n  \"utility/msgdialog/dialog\",\n  \"utility/savedata/getsize\",\n  \"utility/savedata/idlist\",\n  # These tests appear to be broken and just hang.\n  #\"utility/savedata/deletebroken\",\n  #\"utility/savedata/deletedata\",\n  #\"utility/savedata/deleteemptyfilename\",\n  #\"utility/savedata/loadbroken\",\n  #\"utility/savedata/loaddata\",\n  #\"utility/savedata/loademptyfilename\",\n  #\"utility/savedata/saveemptyfilename\",\n  \"utility/savedata/secureversion\",\n  \"utility/savedata/sizes\",\n  \"utility/systemparam/systemparam\",\n  \"video/mpeg/basic\",\n  \"video/pmf/pmf\",\n  \"video/pmf_simple/pmf_simple\",\n  \"video/psmfplayer/basic\",\n  \"video/psmfplayer/configplayer\",\n  \"video/psmfplayer/getvideodata\",\n  \"video/psmfplayer/playmode\",\n  \"video/psmfplayer/selectstream\",\n  \"video/psmfplayer/setpsmfoffset\",\n  \"video/psmfplayer/start\",\n  \"video/psmfplayer/update\",\n]\n\n\n# These are the tests we ignore (not important, or impossible to run)\ntests_ignored = [\n  \"kirk/kirk\",\n  \"me/me\",\n]\n\n\n\ndef init():\n  global PPSSPP_EXE, TEST_ROOT\n  if not os.path.exists(\"pspautotests\"):\n    if os.path.exists(os.path.dirname(__file__) + \"/pspautotests\"):\n      TEST_ROOT = os.path.dirname(__file__) + \"/pspautotests/tests/\";\n    else:\n      print(\"Please run git submodule init; git submodule update;\")\n      sys.exit(1)\n\n  if not os.path.exists(TEST_ROOT + \"cpu/cpu_alu/cpu_alu.prx\"):\n    print(\"Please install the pspsdk and run make in common/ and in all the tests\")\n    print(\"(checked for existence of cpu/cpu_alu/cpu_alu.prx)\")\n    sys.exit(1)\n\n  possible_exes = [glob.glob(f) for f in PPSSPP_EXECUTABLES]\n  possible_exes = [x for sublist in possible_exes for x in sublist]\n  existing = filter(os.path.exists, possible_exes)\n  if existing:\n    PPSSPP_EXE = max((os.path.getmtime(f), f) for f in existing)[1]\n  else:\n    PPSSPP_EXE = None\n\n  if not PPSSPP_EXE:\n    print(\"PPSSPPHeadless executable missing, please build one.\")\n    sys.exit(1)\n\ndef run_tests(test_list, args):\n  global PPSSPP_EXE, TIMEOUT\n  returncode = 0\n\n  test_filenames = []\n  for test in test_list:\n    # Try prx first\n    elf_filename = TEST_ROOT + test + \".prx\"\n    if not os.path.exists(elf_filename):\n      print(\"WARNING: no prx, trying elf\")\n      elf_filename = TEST_ROOT + test + \".elf\"\n\n    test_filenames.append(elf_filename)\n\n  if len(test_filenames):\n    # TODO: Maybe --compare should detect --graphics?\n    cmdline = [PPSSPP_EXE, '--root', TEST_ROOT + '../', '--compare', '--timeout=' + str(TIMEOUT), '@-']\n    cmdline.extend([i for i in args if i not in ['-g', '-m', '-b']])\n\n    c = Command(cmdline, '\\n'.join(test_filenames))\n    returncode = c.run(TIMEOUT * len(test_filenames))\n\n    print(\"Ran \" + ' '.join(cmdline))\n\n  return returncode\n\ndef main():\n  init()\n  tests = []\n  args = []\n  teamcity = False\n  for arg in sys.argv[1:]:\n    if arg == '--teamcity':\n      args.append(arg)\n      teamcity = True\n    elif arg[0] == '-':\n      args.append(arg)\n    else:\n      tests.append(arg)\n\n  if not tests:\n    if '-g' in args:\n      tests = tests_good\n    elif '-b' in args:\n      tests = tests_next\n    else:\n      tests = tests_next + tests_good\n  elif '-m' in args and '-g' in args:\n    tests = [i for i in tests_good if i.startswith(tests[0])]\n  elif '-m' in args and '-b' in args:\n    tests = [i for i in tests_next if i.startswith(tests[0])]\n  elif '-m' in args:\n    tests = [i for i in tests_next + tests_good if i.startswith(tests[0])]\n\n  returncode = run_tests(tests, args)\n  if teamcity:\n    return 0\n  return returncode\n\nexit(main())\n"
        },
        {
          "name": "ui_atlasscript.txt",
          "type": "blob",
          "size": 4.2587890625,
          "content": "512\nimage I_SOLIDWHITE white.png copy\nimage I_CROSS source_assets/image/cross.png copy\nimage I_CIRCLE source_assets/image/circle.png copy\nimage I_SQUARE source_assets/image/square.png copy\nimage I_TRIANGLE source_assets/image/triangle.png copy\nimage I_SELECT source_assets/image/select.png copy\nimage I_START source_assets/image/start.png copy\nimage I_ARROW source_assets/image/arrow.png copy\nimage I_DIR source_assets/image/dir.png copy\nimage I_ROUND source_assets/image/round.png copy\nimage I_RECT source_assets/image/rect.png copy\nimage I_STICK source_assets/image/stick.png copy\nimage I_STICK_BG source_assets/image/stick_bg.png copy\nimage I_SHOULDER source_assets/image/shoulder.png copy\nimage I_DIR_LINE source_assets/image/dir_line.png copy\nimage I_ROUND_LINE source_assets/image/round_line.png copy\nimage I_RECT_LINE source_assets/image/rect_line.png copy\nimage I_SHOULDER_LINE source_assets/image/shoulder_line.png copy\nimage I_STICK_LINE source_assets/image/stick_line.png copy\nimage I_STICK_BG_LINE source_assets/image/stick_bg_line.png copy\nimage I_CHECKEDBOX source_assets/image/checkedbox.png copy\nimage I_BG source_assets/image/background2.png copy\nimage I_L source_assets/image/L.png copy\nimage I_R source_assets/image/R.png copy\nimage I_DROP_SHADOW source_assets/image/dropshadow.png copy\nimage I_LINES source_assets/image/lines.png copy\nimage I_GRID source_assets/image/grid.png copy\nimage I_LOGO source_assets/image/logo.png copy\nimage I_ICON source_assets/image/icon_regular_72.png copy\nimage I_ICONGOLD source_assets/image/icon_gold_72.png copy\nimage I_FOLDER source_assets/image/folder_line.png copy\nimage I_UP_DIRECTORY source_assets/image/up_line.png copy\nimage I_GEAR source_assets/image/gear.png copy\nimage I_1 source_assets/image/1.png copy\nimage I_2 source_assets/image/2.png copy\nimage I_3 source_assets/image/3.png copy\nimage I_4 source_assets/image/4.png copy\nimage I_5 source_assets/image/5.png copy\nimage I_6 source_assets/image/6.png copy\nimage I_PSP_DISPLAY source_assets/image/psp_display.png copy\nimage I_FLAG_JP source_assets/image/flag_jp.png copy\nimage I_FLAG_US source_assets/image/flag_us.png copy\nimage I_FLAG_EU source_assets/image/flag_eu.png copy\nimage I_FLAG_HK source_assets/image/flag_hk.png copy\nimage I_FLAG_AS source_assets/image/flag_as.png copy\nimage I_FLAG_KO source_assets/image/flag_ko.png copy\nimage I_FULLSCREEN source_assets/image/fullscreen.png copy\nimage I_RESTORE source_assets/image/restore.png copy\nimage I_SDCARD source_assets/image/sdcard.png copy\nimage I_HOME source_assets/image/home.png copy\nimage I_A source_assets/image/a.png copy\nimage I_B source_assets/image/b.png copy\nimage I_C source_assets/image/c.png copy\nimage I_D source_assets/image/d.png copy\nimage I_E source_assets/image/e.png copy\nimage I_F source_assets/image/f.png copy\nimage I_SQUARE_SHAPE source_assets/image/square_shape.png copy\nimage I_SQUARE_SHAPE_LINE source_assets/image/square_shape_line.png copy\nimage I_FOLDER_OPEN source_assets/image/folder_open_line.png copy\nimage I_WARNING source_assets/image/warning.png copy\nimage I_TRASHCAN source_assets/image/trashcan.png copy\nimage I_PLUS source_assets/image/plus.png copy\nimage I_ROTATE_LEFT source_assets/image/rotate_left.png copy\nimage I_ROTATE_RIGHT source_assets/image/rotate_right.png copy\nimage I_ARROW_LEFT source_assets/image/arrow_left.png copy\nimage I_ARROW_RIGHT source_assets/image/arrow_right.png copy\nimage I_ARROW_UP source_assets/image/arrow_up.png copy\nimage I_ARROW_DOWN source_assets/image/arrow_down.png copy\nimage I_SLIDERS source_assets/image/sliders.png copy\nimage I_THREE_DOTS source_assets/image/three_dots.png copy\nimage I_INFO source_assets/image/info.png copy\nimage I_RETROACHIEVEMENTS_LOGO source_assets/image/retroachievements_logo.png copy\nimage I_CHECKMARK source_assets/image/checkmark.png copy\nimage I_PLAY source_assets/image/play.png copy\nimage I_STOP source_assets/image/stop.png copy\nimage I_PAUSE source_assets/image/pause.png copy\nimage I_FASTFORWARD source_assets/image/fast_forward.png copy\nimage I_RECORD source_assets/image/record.png copy\nimage I_SPEAKER source_assets/image/speaker.png copy\nimage I_SPEAKER_MAX source_assets/image/speaker_max.png copy\nimage I_SPEAKER_OFF source_assets/image/speaker_off.png copy\nimage I_WINNER_CUP source_assets/image/winner_cup.png copy\nimage I_EMPTY source_assets/image/empty.png copy\n"
        },
        {
          "name": "unittest",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}