{
  "metadata": {
    "timestamp": 1736566314136,
    "page": 67,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CoatiSoftware/Sourcetrail",
      "stars": 15014,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.4287109375,
          "content": "AccessModifierOffset: -4\nAlignAfterOpenBracket: AlwaysBreak\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignConsecutiveMacros: false\nAlignEscapedNewlines: Right\nAlignOperands: false\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Allman\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeComma\nBreakInheritanceList: BeforeComma\nBreakStringLiterals: true\nColumnLimit: 100\nCompactNamespaces: true\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nFixNamespaceComments: true\nIncludeBlocks: Preserve\nIndentCaseLabels: false\nIndentPPDirectives: AfterHash\nIndentWidth: 4\nIndentWrappedFunctionNames: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: None\nPenaltyBreakAssignment:\t\t\t\t\t  50\nPenaltyBreakBeforeFirstCallParameter:\t   0\nPenaltyBreakComment:\t\t\t\t\t 100\nPenaltyBreakFirstLessLess:\t\t\t\t 200\nPenaltyBreakString:\t\t\t\t\t\t 100\nPenaltyBreakTemplateDeclaration:\t\t   0\nPenaltyExcessCharacter:\t\t\t\t\t  10\nPenaltyReturnTypeOnItsOwnLine:\t\t\t1000\nPointerAlignment: Left\nReflowComments: true\nSortIncludes: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: true\nSpaceBeforeCtorInitializerColon: false\nSpaceBeforeInheritanceColon: false\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: false\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 4\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: c++17\nTabWidth: 4\nUseTab: Always\n---\nLanguage: Cpp\n---\nLanguage: Java\n#BasedOnStyle: Google\n#BreakAfterJavaFieldAnnotations: true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.1416015625,
          "content": "/build/\nbuild-*\n/distr/\n/deps/\n\n/bin/app/data/cxx\n/bin/app/data/java/lib/\n/bin/app/data/projects/ignored/\n/bin/app/data/python/\n/bin/app/user/log/\n/bin/app/user/ApplicationSettings.xml\n/bin/app/user/window_settings.ini\n/bin/app/*.log\n\n/bin/test/data/log/\n/bin/test/data/TestSettings.xml\n/bin/test/data/CommandlineTestSuite/settings.xml\n/bin/test/data/ConfigManagerTestSuite/temp.xml\n/bin/test/data/UtilityMavenTestSuite/effective-pom.xml\n/bin/test/data/SourceGroupTestSuite/java_maven/input/sourcetrail_dependencies\n\n/java_indexer/target/\n\n/setup/Linux/lib/\n\n.DS_Store\n.idea\n.vscode\n\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtension/bin\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtension/obj\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtensionTests/bin/Debug\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtensionTests/bin/Release\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtensionTests/obj\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtensionUtility/bin\n/ide_plugins/vs/vs2015/SourcetrailPlugin/SourcetrailExtensionUtility/obj\n/ide_plugins/vs/vs2015/SourcetrailPlugin/VCProjectEngineWrapperInterfaces/bin\n/ide_plugins/vs/vs2015/SourcetrailPlugin/VCProjectEngineWrapperInterfaces/obj\n/ide_plugins/vs/vs2015/SourcetrailPlugin/VCProjectEngineWrapper/bin\n/ide_plugins/vs/vs2015/SourcetrailPlugin/VCProjectEngineWrapper/obj\n/ide_plugins/vs/vs2015/SourcetrailPlugin/VCProjectEngineWrapperFactories/bin\n/ide_plugins/vs/vs2015/SourcetrailPlugin/VCProjectEngineWrapperFactories/obj\n\n/ide_plugins/vs/vs2015/SourcetrailPlugin/TestResults\n\n*.srctrldb\n*.srctrlbm\n*.suo\n*.vcxproj.user\n*.sqlite\n*.pch\n*.swp\n*.swo\n*.VC.db\n*.timing\n\n.clang_complete\n.ycm_extra_conf.py\n.ycm_extra_conf.pyc\n\nSourcetrail.srctrlprj\nSourcetrail_dev.srctrlprj\n\nMakefile\nCMakeLists.txt.user*\n/__pycache__/\n\n/deployment/windows/wixSetup/bin\n/deployment/windows/wixSetup/build\n/deployment/windows/wixSetup/CustomActions/UninstallRemoveLogFolder/bin\n/deployment/windows/wixSetup/CustomActions/UninstallRemoveLogFolder/obj\n/deployment/windows/wixSetup/CustomActions/.vs\n/deployment/windows/wixSetup/Setup/build/Setup/Release\n/deployment/windows/wixSetup/Setup/build/Setup/x64\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.3212890625,
          "content": "language: bash\n\nservices: docker\n\ninstall:\n  - chmod 777 deployment/dockerfiles/linux/travis_ci/entrypoint.sh\n  - docker build -t coatisoftware/local deployment/dockerfiles/linux/travis_ci\n\nscript:\n  - COMMIT_HASH=$(git rev-parse HEAD)\n  - docker run --name builder coatisoftware/local ${COMMIT_HASH}\n  - docker cp builder:/home/builder/Sourcetrail/release $TRAVIS_BUILD_DIR/release\n\ndeploy:\n  provider: releases\n  api_key:\n    secure: b+fTcE73+5nkYufBNzGdxnwbx4a2BQr7iy28wdcr+8NrCxgq4mhmuZd+R3JzE7mt3ehEfUbUkXPLwefEcTFkqxXN6WdBjJYTa2JxAHkBuYiSG9X7voNCOU3SWaucY77FTdt5MlWKVOEzoKNT+tbBuLlWKNyPnFLE0JArc9w4DfvCbHos9ikTtiT1suE+OiIgt28SjD6MD4mIDmEHcKkZs1SfNxz8zhkJBp7y0iJOFPaZHZ9wE2DMox5h26ks13NMYP9mkYgZDTMppabuR8KtjGTJB7NSY3Uoj+6AYdGr5hfpzMIzLjfstagfBzLWpnuz29XwUhYR02MTRiJS6h8wXoO5twxWEKIeUT7xEjSZzdirynrErMDThz90vli0gaoZyIhU01sS9lOUozkdQJEg9Wosxs/586bShHOqhvhrfeCv2Z/7u9ftnpm7U+GaFxk3j1ZPHnSt6XcLz2wDcYIjKgsc8dvmMxYTJYLkXENU5XTkKXKfMHfweiZPWBUBjjMpcZWEyw8NQ/IsegMhXlptLsxr5N5A54KipnJK36b52vryIUzzQd4uM/pcWn5j2Il/KagM5U/kRhQDCxAozQ1Ub0HWqM+4WdCxzAg1FEUly7Y68FIVeeD19P7TAPRBGeljmr3vEdJHnr2z20dubWyhOlZ7NfTcd1drWthpN9ZvvT4=\n  file_glob: true\n  file:\n    - \"$TRAVIS_BUILD_DIR/release/Sourcetrail*.tar.gz\"\n    - \"$TRAVIS_BUILD_DIR/release/Sourcetrail*.AppImage\"\n  overwrite: true\n  skip_cleanup: true\n  on:\n    tags: true\n    repo: CoatiSoftware/Sourcetrail\n"
        },
        {
          "name": "AUTHORS.txt",
          "type": "blob",
          "size": 0.263671875,
          "content": "Authors\n=======\n\nAndreas Stallinger\nEberhard Gr√§ther (@egraether) <egraether@coati.io>\nMalte Langkabel (@mlangkabel) <mlangkabel@coati.io>\nManuel Dobusch\nViktoria Pfausler\nLouis St-Amour (@LouisStAmour) <LouisStAmour@gmail.com>\n\nNote: (@user) means a github user name.\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 89.6064453125,
          "content": "### Changelog\n\n#### 2021.4.19\nreleased 2021-11-30\n\n* UI: Removed website links and e-mail addresses that are no longer valid ([#1230](https://github.com/CoatiSoftware/Sourcetrail/issues/1230))\n* Docs: Converted documentation to Markdown file to be accessible via GitHub\n* UI: Removed update check ([#1226](https://github.com/CoatiSoftware/Sourcetrail/issues/1226))\n* UI: fix extensive wait for short-lived processes ([#1227](https://github.com/CoatiSoftware/Sourcetrail/issues/1227))\n* Java: support Gradle 7 when copying (test) compile libs ([#1203](https://github.com/CoatiSoftware/Sourcetrail/issues/1203))\n* Code: Fix C/C++ keywords highlighted like functions ([#1197](https://github.com/CoatiSoftware/Sourcetrail/issues/1197))\n* UI: Added solarized color schemes ([#1195](https://github.com/CoatiSoftware/Sourcetrail/issues/1195))\n\n#### 2021.1.30\nreleased 2021-03-15\n\n* Java: Fixed Java path detection failures on linux ([#1138](https://github.com/CoatiSoftware/Sourcetrail/issues/1138))\n* Java: Updated Java dependencies to add support for Java 13, 14 and 15 ([#1152](https://github.com/CoatiSoftware/Sourcetrail/issues/1152))\n* C/C++: Fixed crash due to nullpointer access in indexer\n* Python: Updated SourcetrailPythonIndexer to version 1.25.6 to fix issue when storing file content to database ([#1159](https://github.com/CoatiSoftware/Sourcetrail/issues/1159))\n* Graph: Fixed multi-level inheritance edges when there are diamond structures ([#1142](https://github.com/CoatiSoftware/Sourcetrail/issues/1142))\n* UI: hide news widget if no news are available ([#1160](https://github.com/CoatiSoftware/Sourcetrail/issues/1160))\n* Windows: Ignore files where path exceeds character limit to avoid crash (issue [#1149](https://github.com/CoatiSoftware/Sourcetrail/issues/1149)) ([#1151](https://github.com/CoatiSoftware/Sourcetrail/issues/1151))\n* Linux: Simplified symbolic link resolution in Linux Sourcetrail launch script ([#1134](https://github.com/CoatiSoftware/Sourcetrail/issues/1134))\n* Docs: correct lots of spelling errors ([#1162](https://github.com/CoatiSoftware/Sourcetrail/issues/1162))\n* Build: Switched from Qt to boost implementation of executeProcess ([#1145](https://github.com/CoatiSoftware/Sourcetrail/issues/1145))\n* Build: make Windows CI build and test Java language support ([#1156](https://github.com/CoatiSoftware/Sourcetrail/issues/1156))\n* Build: make Java tests run on Linux CI ([#1127](https://github.com/CoatiSoftware/Sourcetrail/issues/1127))\n\n#### 2020.4.35\nreleased 2021-01-06\n\n* Build: Add compatibility layer for Qt versions ([#1118](https://github.com/CoatiSoftware/Sourcetrail/issues/1118))\n* C/C++: Updated to LLVM/Clang 11.0.0 (issue [#1088](https://github.com/CoatiSoftware/Sourcetrail/issues/1088)) ([#1116](https://github.com/CoatiSoftware/Sourcetrail/issues/1116))\n* C/C++: fix crash when using codeblocks project (issue [#1109](https://github.com/CoatiSoftware/Sourcetrail/issues/1109)) ([#1110](https://github.com/CoatiSoftware/Sourcetrail/issues/1110))\n* Graph: add menu action for graph 'save as image' (issue [#426](https://github.com/CoatiSoftware/Sourcetrail/issues/426)) ([#1104](https://github.com/CoatiSoftware/Sourcetrail/issues/1104))\n* Graph: remember graph zoom level on restart (issue [#801](https://github.com/CoatiSoftware/Sourcetrail/issues/801)) ([#1099](https://github.com/CoatiSoftware/Sourcetrail/issues/1099))\n* Build: fix compiler issue when CMAKE_CXX_COMPILER_LAUNCHER was set to ccache (issue [#1081](https://github.com/CoatiSoftware/Sourcetrail/issues/1081)) ([#1093](https://github.com/CoatiSoftware/Sourcetrail/issues/1093))\n* Python: update python indexer to v1.db25.p5 ([#1087](https://github.com/CoatiSoftware/Sourcetrail/issues/1087))\n* Linux: explicitly add u+w permission when copying initial user data ([#1072](https://github.com/CoatiSoftware/Sourcetrail/issues/1072))\n* Linux: Fixed duplicating Sourcetrail icon on run ([#1071](https://github.com/CoatiSoftware/Sourcetrail/issues/1071))\n* Build: Qt 5.12 deprecation fixes ([#1003](https://github.com/CoatiSoftware/Sourcetrail/issues/1003))\n* Linux: Prevent word splitting within arguments passed to Sourcetrail.sh ([#1057](https://github.com/CoatiSoftware/Sourcetrail/issues/1057))\n* C/C++: Support linking with LLVM/Clang Dylib instead of individual components ([#1044](https://github.com/CoatiSoftware/Sourcetrail/issues/1044))\n\n#### 2020.2.43\nreleased 2020-06-29\n\n* Docs: Explain Linux Tarball uninstall ([#1047](https://github.com/CoatiSoftware/Sourcetrail/issues/1047))\n* Graph: Renamed 'aggregation' edge to 'bundled edges' for more clarity ([#1051](https://github.com/CoatiSoftware/Sourcetrail/issues/1051))\n* Fixed error recording for multi-threaded custom command indexing ([#1049](https://github.com/CoatiSoftware/Sourcetrail/issues/1049))\n* UI: Fixed crash when changing tabs during animation with focus on a child node ([#1046](https://github.com/CoatiSoftware/Sourcetrail/issues/1046))\n* C/C++: Improved help message for source file extensions in project settings ([#1039](https://github.com/CoatiSoftware/Sourcetrail/issues/1039))\n* Python: Updated to SourcetrailPythonIndexer v1.db25.p4 - Record override edges ([#1037](https://github.com/CoatiSoftware/Sourcetrail/issues/1037))\n* Linux: Migrated Linux '.tar.gz' package creation from CPack to linuxdeployqt ([#1034](https://github.com/CoatiSoftware/Sourcetrail/issues/1034))\n* UI: Save last filepicker location ([#802](https://github.com/CoatiSoftware/Sourcetrail/issues/802))\n* C/C++: Updated to LLVM/Clang 10.0.0 ([#965](https://github.com/CoatiSoftware/Sourcetrail/issues/965))\n* Java: Updated macOS Java Path detector and docs to current JDK file structure ([#1031](https://github.com/CoatiSoftware/Sourcetrail/issues/1031))\n* Improved performance of excluded files and directories filtering ([#1030](https://github.com/CoatiSoftware/Sourcetrail/issues/1030))\n* Fix corrupted display of non-ascii characters in about window ([#1013](https://github.com/CoatiSoftware/Sourcetrail/issues/1013))\n* C/C++: Copy Clang compiler headers from Clang build dir via CMake ([#993](https://github.com/CoatiSoftware/Sourcetrail/issues/993))\n* Improved error logging if exception occurred while loading project ([#1004](https://github.com/CoatiSoftware/Sourcetrail/issues/1004))\n* Graph: Add context menu action 'copy to clipboard' ([#999](https://github.com/CoatiSoftware/Sourcetrail/issues/999))\n* C/C++: Extend Compiler Flags help message ([#974](https://github.com/CoatiSoftware/Sourcetrail/issues/974))\n* macOS: Create .dmg release package using HFS+ filesystem to be mountable on older macOS versions ([#619](https://github.com/CoatiSoftware/Sourcetrail/issues/619))\n* Python: Respect \"super()\" in post processing ([#964](https://github.com/CoatiSoftware/Sourcetrail/issues/964))\n* Less restrictions for FilePath::isValid check on project location ([#959](https://github.com/CoatiSoftware/Sourcetrail/issues/959))\n* Refactored recent projects menu ([#956](https://github.com/CoatiSoftware/Sourcetrail/issues/956))\n* macOs: Updated Info.plist missing values and removed deprecated keys\n* Python: Respect class qualifier in method call for post processing ([#951](https://github.com/CoatiSoftware/Sourcetrail/issues/951))\n\n#### 2020.1.117\nreleased 2020-03-31\n\n* C/C++: Fixed multiple main declarations not shown as separate symbols when declaring file has same name ([#950](https://github.com/CoatiSoftware/Sourcetrail/issues/950))\n* Linux: Provide AppImage package based on linuxdeployqt (issue [#279](https://github.com/CoatiSoftware/Sourcetrail/issues/279)) ([#945](https://github.com/CoatiSoftware/Sourcetrail/issues/945))\n* Make content of help dialogs selectable (issue [#805](https://github.com/CoatiSoftware/Sourcetrail/issues/935))\n* Added keyboard controls to move and activate focus in graph and code views using WASD/HJKL/Arrows + Enter/E ([#935](https://github.com/CoatiSoftware/Sourcetrail/issues/935)) (issues [#486](https://github.com/CoatiSoftware/Sourcetrail/issues/486), [#327](https://github.com/CoatiSoftware/Sourcetrail/issues/327), [#214](https://github.com/CoatiSoftware/Sourcetrail/issues/214), [#210](https://github.com/CoatiSoftware/Sourcetrail/issues/210))\n* Fixed a crash in shared memory use ([#912](https://github.com/CoatiSoftware/Sourcetrail/issues/912))\n* Discard non-existing paths in automatic path detection ([#930](https://github.com/CoatiSoftware/Sourcetrail/issues/930))\n* Python: Update python indexer to use jedi 0.16.0 ([#929](https://github.com/CoatiSoftware/Sourcetrail/issues/929))\n* Fixed frequent deadlock after loading project from Start Screen (issue [#924](https://github.com/CoatiSoftware/Sourcetrail/issues/924))\n* C/C++: Updated LLVM/Clang config headers to release 9.0.0 ([#922](https://github.com/CoatiSoftware/Sourcetrail/issues/922))\n* Fix crash in update check on premature Qt object deletion ([#920](https://github.com/CoatiSoftware/Sourcetrail/issues/920))\n* C/C++: Fixed an indexer crash ([#911](https://github.com/CoatiSoftware/Sourcetrail/issues/911))\n* Code: fixed font size not changed in single file view (issue [#916](https://github.com/CoatiSoftware/Sourcetrail/issues/916))\n* Mark required contents with asterisk in Source Group setup (issue [#723](https://github.com/CoatiSoftware/Sourcetrail/issues/723)) ([#914](https://github.com/CoatiSoftware/Sourcetrail/issues/914))\n* Removed multiple dialog steps in Source Group setup (issue [#723](https://github.com/CoatiSoftware/Sourcetrail/issues/723)) ([#913](https://github.com/CoatiSoftware/Sourcetrail/issues/913))\n* Handled non-writeable project location (issue [#735](https://github.com/CoatiSoftware/Sourcetrail/issues/735)) ([#906](https://github.com/CoatiSoftware/Sourcetrail/issues/906))\n* Fixed error help dialog not showing up during indexing (issue [#740](https://github.com/CoatiSoftware/Sourcetrail/issues/740)) ([#904](https://github.com/CoatiSoftware/Sourcetrail/issues/904))\n* Allow changing the log file path in preferences (issue [#156](https://github.com/CoatiSoftware/Sourcetrail/issues/156)) ([#900](https://github.com/CoatiSoftware/Sourcetrail/issues/900))\n* Fix crash when project directory contains non-latin character (issue [#899](https://github.com/CoatiSoftware/Sourcetrail/issues/899)) ([#901](https://github.com/CoatiSoftware/Sourcetrail/issues/901))\n* Graph: Fixed endless recursion on cyclic inheritance edges\n* Add 'close tabs to the right' context menu action to tab bar (issue [#822](https://github.com/CoatiSoftware/Sourcetrail/issues/822)) ([#875](https://github.com/CoatiSoftware/Sourcetrail/issues/875))\n* C/C++: Record calls to cxx destructor on delete keyword (issue [#829](https://github.com/CoatiSoftware/Sourcetrail/issues/829)) ([#863](https://github.com/CoatiSoftware/Sourcetrail/issues/863))\n* Retry pre-filling mandatory empty path settings on startup ([#864](https://github.com/CoatiSoftware/Sourcetrail/issues/864))\n* Improved handling of unloadable source group ([#862](https://github.com/CoatiSoftware/Sourcetrail/issues/862))\n\n#### 2019.4.102\nreleased 2019-12-20\n\n* C/C++: Update selectable C and C++ language standards and cross-compilation flags ([#835](https://github.com/CoatiSoftware/Sourcetrail/issues/835))\n* Java: Allow to specify custom Maven settings.xml file in project settings ([#794](https://github.com/CoatiSoftware/Sourcetrail/issues/794))\n* Python: Accept python.exe located in the root directory of the environment ([#771](https://github.com/CoatiSoftware/Sourcetrail/issues/771))\n* Java: Extend language support to Java 12 ([#752](https://github.com/CoatiSoftware/Sourcetrail/issues/752))\n* Graph: Show active symbol definition in code when clicking on active node ([#836](https://github.com/CoatiSoftware/Sourcetrail/issues/836))\n* C++: Fix recording template parameter as local symbol instead of qualifier ([#824](https://github.com/CoatiSoftware/Sourcetrail/issues/826))\n* Python: Always perform deep index as default and added '--shallow' command line option ([#823](https://github.com/CoatiSoftware/Sourcetrail/issues/823))\n* Code: Drag and drop selected source code from code view into other applications ([#707](https://github.com/CoatiSoftware/Sourcetrail/issues/707))\n* Python: Allow using \"unsafe\" Python environment if explicitly specified by user ([#697](https://github.com/CoatiSoftware/Sourcetrail/issues/697), [#747](https://github.com/CoatiSoftware/Sourcetrail/issues/747))\n* C/C++: Updated to LLVM/Clang 9.0.0 ([#799](https://github.com/CoatiSoftware/Sourcetrail/issues/799))\n* Fix crash on application exit ([#789](https://github.com/CoatiSoftware/Sourcetrail/issues/789))\n* Code: Fixed view cleared in single file mode when ui refresh is triggered ([#772](https://github.com/CoatiSoftware/Sourcetrail/issues/772))\n\n#### 2019.4.61\nreleased 2019-11-18\n\n* Added GitHub and Patreon buttons to start window\n* Added GNU General Public License\n* Removed End User License Agreement and accept dialog from UI and Windows installer\n* Removed Sonargraph based project setup\n* Code: Add all source locations indexed for a file when displaying errors\n* C/C++: Use gnu C and C++ standards as default in source groups on Linux platforms\n* Python: add fast 'shallow indexing' mode (issue [#725](https://github.com/CoatiSoftware/Sourcetrail/issues/725))\n* Fixed nested layout broken after relayout for maximum access node width\n* Removed license key check\n* Python: Improved performance of python post processing (by about factor 2)\n* Improved performance of clearing data from re-indexed files to be instant\n* Fixed making canonical filepaths when working directory contains symlink on Windows (issue [#733](https://github.com/CoatiSoftware/Sourcetrail/issues/733))\n* C/C++: Update indexed headers list when editing the compilation database text box (issue [#724](https://github.com/CoatiSoftware/Sourcetrail/issues/724))\n* Skip pre-indexing steps of disabled source groups (issue [#737](https://github.com/CoatiSoftware/Sourcetrail/issues/737))\n* Fixed refresh cleared files of disabled source groups\n* C++: Merged nodes for all possible expansions of a template parameter pack\n* C++: Replaced template member specialization edge by template specialization edge\n* C++: Record template default args as type usage\n* C++: Record template parameter as local symbol\n* Java: Use caching to speed up gradle and maven based projects\n* Windows: Fixed styles missing in portable packages\n* Add menu entry to close the current project (issue [#722](https://github.com/CoatiSoftware/Sourcetrail/issues/722))\n\n#### 2019.3.46\nreleased 2019-08-27\n\n* Fixed errors were sometimes not clickable\n* Windows: sign installer and executables with Authenticode certificate (issue [#704](https://github.com/CoatiSoftware/Sourcetrail/issues/704))\n* Show proper error messages and progress when indexing with CLI (issue [#718](https://github.com/CoatiSoftware/Sourcetrail/issues/718))\n* C/C++: only use precompiled headers for compilation database commands that specify the \"-include-pch\" flag (issue [#719](https://github.com/CoatiSoftware/Sourcetrail/issues/719))\n* Python: Updated to SourcetrailPythonIndexer v1.db24.p2\n* Graph: Fixed bezier edges stayed highlighted after getting unhovered\n* Windows: Use modern Windows style for default ui elements on Windows 10\n* Change mouse cursor to pointer on graph and code view contents (issue [#715](https://github.com/CoatiSoftware/Sourcetrail/issues/311))\n* Java: Remove JVM maximum memory setting because it causes issues (issue [#694](https://github.com/CoatiSoftware/Sourcetrail/issues/311))\n* Show overview instead of empty error screen after all indexing errors are gone\n* C/C++: Allow indexing multiple indexer commands with different options for one source file in Compilation Database source group (issue [#717](https://github.com/CoatiSoftware/Sourcetrail/issues/311))\n* Graph: Added custom trail dialog to show trail graph with specific origin and/or target, using node/edge filters (issue [#249](https://github.com/CoatiSoftware/Sourcetrail/issues/249))\n* C/C++: Fixed removing duplicate compiler header directory not working (issue [#710](https://github.com/CoatiSoftware/Sourcetrail/issues/710))\n* Java: Fixed maven source groups broken when default console output contains colors (issue [#705](https://github.com/CoatiSoftware/Sourcetrail/issues/705))\n* Code: Added option to preferences to show relative file directory in code view title (issue [#556](https://github.com/CoatiSoftware/Sourcetrail/issues/556))\n* C++: Fixed lambdas created additional type nodes\n* C/C++: Initialize all clang targets to reduce errors for cross-target compilation\n* C/C++: Added Precompiled Header Support to Empty and Compilation Database Source Groups (issue [#311](https://github.com/CoatiSoftware/Sourcetrail/issues/311))\n* Search: Turn search element editable when pressing DELETE with cursor in front\n* Graph: increased the tolerated movement distance during click to still count as click action\n\n#### 2019.2.39\nreleased 2019-05-28\n\n* Python: Added example for Python environment to Source Group help text (issue [#696](https://github.com/CoatiSoftware/Sourcetrail/issues/696))\n* Python: Improved post processing speed and show progress dialog\n* Python: Added validity check for Python environment when entered in Source Group\n* Code: Improved performance of location hovering in snippet mode\n* Graph: Fixed undo after single edge activation within aggregation caused missing edges\n* Don't set project state outdated if only Source Group name changed (issue [#700](https://github.com/CoatiSoftware/Sourcetrail/issues/700))\n* C/C++: Don't store path to compiler headers in preferences, instead always add it before indexing\n* Python: write output of indexer processes to log file\n* Fixed crashes on application close (issue [#698](https://github.com/CoatiSoftware/Sourcetrail/issues/698))\n\n#### 2019.2.25\nreleased 2019-05-22\n\n* Enable console and file logging by default\n* Python: Sort indexer commands by file size\n* Linux: Add path to OpenSSL config in Sourcetrail.sh script (issue [#659](https://github.com/CoatiSoftware/Sourcetrail/issues/659))\n* Search: Refocus already focused search box on 'find symbol' shortcut to select content\n* Renamed 'main' function in tutorial to 'start_tour', due to multiple main fix\n* Python: Fixed macOS app bundle not using correct Python default environment\n* Python: Pass verbose indexer logging flag and add output to log\n* Fixed EULA not displayed in Windows and macOS builds\n* Python: Added start screen project icon\n* Python: Added sample project \"tictactoe_py\"\n* Code: Fixed symbol definition shown instead of most recent reference when using back action\n* Python: Added post processing to add ambiguous edges for unsolved symbols with matching name\n* Fixed old test license format not loaded (issue [#691](https://github.com/CoatiSoftware/Sourcetrail/issues/691))\n* C/C++: Added intermediate fix to handle multiple definitions of main() in C/C++ (issue [#233](https://github.com/CoatiSoftware/Sourcetrail/issues/233))\n* Graph: Added \"Show Definition in IDE\" action to context menu (issue [#687](https://github.com/CoatiSoftware/Sourcetrail/issues/687))\n* Increased contrasts in color scheme 'bright'\n* Automatically delete log files older than a month (issue [#676](https://github.com/CoatiSoftware/Sourcetrail/issues/676))\n* Code: renamed 'relations' to 'references' in overview stats\n* Fixed bug that caused the UI to be blocked after aborting indexing on \"partial clearing not possible\" warning\n* Start automatic update checks on second day of use\n* Graph: Show multi-level inheritance edge in graph legend (issue [#688](https://github.com/CoatiSoftware/Sourcetrail/issues/688))\n* C/C++: Updated to LLVM/Clang 8.0.1\n* Graph: Use multicolumn layout for nodes with many children if none of the children has edges\n* Python: Added Python 2 & 3 support based on [SourcetrailPythonIndexer](https://github.com/CoatiSoftware/SourcetrailPythonIndexer) (issue [#51](https://github.com/CoatiSoftware/Sourcetrail/issues/51))\n* Python: Added source group type \"Empty Python\" to project setup\n* Search: Edit last search element on backspace instead of deleting (issue [#681](https://github.com/CoatiSoftware/Sourcetrail/issues/681))\n* EULA: added support for lifelong licenses\n* Improved text search performance (issue [#680](https://github.com/CoatiSoftware/Sourcetrail/issues/680))\n* Windows: Fixed bug that caused texts within tooltips sometimes to be cut off\n* Fixed crash when closing license window at first start\n* Automatically replace invalid characters in project name during project setup with \"_\" (issue [#671](https://github.com/CoatiSoftware/Sourcetrail/issues/671))\n* Windows: Added syntax highlighting rules to portable package (issue [#672](https://github.com/CoatiSoftware/Sourcetrail/issues/672))\n\n#### 2019.1.11\nreleased 2019-02-05\n\n* Mention Compilation Database can be generated by QtCreator since version 4.8\n* Code: Fixed qualifier locations were used in reference navigation\n* Fixed error count in status bar not restored after discarding interrupted index\n* Graph: Fixed layout for inheritance chains\n* Added syntax highlighting rules for Python\n* Rerun cxx global header path detection if skipped due to error in previous release (issue [#664](https://github.com/CoatiSoftware/Sourcetrail/issues/664))\n* Fixed status error may not show up if custom command fails on Windows\n* Graph: Fixed right click activates edge on Windows but should not\n* C/C++: Always add compiler header path to global include paths and warn user about possible problems\n* Added option to execute custom indexer commands in parallel\n* Graph: Align layout in middle column at middle gap to avoid edges going through nodes\n* Code: Fixed line numbers disappearing on hover on Linux\n* Fixed initialization of header search paths on first start of Sourcetrail\n* Project Setup: Highlight project setup from Compilation Database as recommended for C/C++ projects\n* Project Setup: Double-click in project setup list boxes adds new line\n* Graph: Only bundle as \"importing files\" when \"import\" edge is present\n* Graph: Prevent flickering of edges when going back after multiple edge activations\n* Fixed relative paths not working in Code::Blocks project files (issue [#663](https://github.com/CoatiSoftware/Sourcetrail/issues/663))\n* Graph: Remove virtual nodes in depth-graph edges when moving nodes (issue [#639](https://github.com/CoatiSoftware/Sourcetrail/issues/639))\n* Added exception handling for HTTP request exceptions in update checker (issue [#659](https://github.com/CoatiSoftware/Sourcetrail/issues/659))\n* Clear screen-search matches when the active symbol in the view changes (issue [#660](https://github.com/CoatiSoftware/Sourcetrail/issues/660))\n* Wrap lines in status and error table (issue [#658](https://github.com/CoatiSoftware/Sourcetrail/issues/658))\n* Graph: Elide name of active node if it has more than 100 characters (issue [#652](https://github.com/CoatiSoftware/Sourcetrail/issues/652))\n* Added link to changelog to help menu (issue [#653](https://github.com/CoatiSoftware/Sourcetrail/issues/653))\n\n#### 2018.4.45\nreleased 2018-12-18\n\n* Code: Fixed active code view mode button can be unchecked and lose it's visual highlight\n* C/C++: record Clang invocation errors as errors when nothing else is recorded\n* Show Database Version in About and Custom Command Source Group description\n* Graph: Show overview bundles for non-indexed or symbol types if no others available\n* Code: Extract syntax highlighting rules to .rules files, to allow adding highlighting rules for new languages\n* C/C++: Still log the first 20.000 characters of the Clang invocation if verbose indexer logging is disabled\n* Added Source Group Custom Command to use with SourcetrailDB binaries\n* Fixed indexed source files not updated when clicking \"show files\" after other changes in project setup\n* Linux: Fixed issue in sourcetrail.sh script (issue [#638](https://github.com/CoatiSoftware/Sourcetrail/issues/638))\n* Inspect errors during indexing (issue [#235](https://github.com/CoatiSoftware/Sourcetrail/issues/235))\n* C/C++: Fixed header path selection in Source Group setup also preselects non existing paths (issue [#640](https://github.com/CoatiSoftware/Sourcetrail/issues/640))\n* Graph: Fixed graph node centering shows right end when node has greater width than view\n* Code: Fixed multiple multiline comments within one line not correctly highlighted\n* Code: Changed snippet style, removing per file frame and minimize/snippet buttons\n* C/C++: Fixed shrinking shared memory below initial size (issue [#636](https://github.com/CoatiSoftware/Sourcetrail/issues/636))\n* Fixed indexers still waiting until less storages are queued, although indexing was already interrupted (issue [#634](https://github.com/CoatiSoftware/Sourcetrail/issues/634))\n* Fixed interrupting indexing while dialog hidden\n* Graph: Fixed nodes and edges stay highlighted after hovering in code\n* C/C++: Reduced shared memory consumption during indexing when indexers are faster than db insertion\n\n#### 2018.4.8\nreleased 2018-11-13\n\n* Fixed search activates wrong symbol if multiple potential matches share the same \"long\" symbol name\n* C++: Fixed infinite iteration when solving parent name of C++ template arguments with multiple parent contexts\n* C++: Only log Clang tool invocation info when enabling \"verbose indexer logging\"\n* Running shrink on shared memory that is used to transfer data between processes during indexing from time to time\n* Added tabs UI to top of main window (issue [#215](https://github.com/CoatiSoftware/Sourcetrail/issues/215))\n* Linux: Fixed no write permission to ~/.config/sourcetrail after installation (issue [#625](https://github.com/CoatiSoftware/Sourcetrail/issues/625), [#626](https://github.com/CoatiSoftware/Sourcetrail/issues/626))\n* C++: Added type usage edges from parent context for types that occur as template arguments\n* C++: Skip recording of implicit local symbols\n* Java: Show explicit error message if no Java path provided in preferences\n* C/C++: Updated to LLVM/Clang 7.0.0\n* Added news box to start screen, showing news returned with daily update check\n* Reduced memory usage during project loading by iterating over database entries instead of retrieving in containers\n* Code: Added copy action to context menu for code view\n* Code: Removed accidental leading spaces in overview project description\n* Fixed history menu to show global activation history chronologically\n* Fixed handling of multiple active symbols broken when going back in history\n* Removed std headers from tutorial\n* Show hidden indexing dialog when clicking refresh while indexing is in progress\n* Code: Fixed unhovering an active error in code view removed the \"active-highlight\"\n* Fixed shared memory garbage collector mutex unlocking policy when stuck\n* Code: Fixed crash on code view scope expansion\n* Rewrote indexer data recording API to rely on IDs instead of strings for faster indexer performance\n* Removed unnecessary SQLite indexes for smaller database size\n* JAVA: display multi-line maven error messages (issue [#622](https://github.com/CoatiSoftware/Sourcetrail/issues/622))\n* Improved indexer storing performance by splitting insertion into multiples of pre-compiled SQLite batch insert statements\n* Reduced copies during indexer data recording\n* Improved cache lookups in indexer data recording\n* Windows: fixed line breaking issues with carriage returns\n* C/C++: Reduced waiting time when interrupting indexer processes\n* C/C++: Improved name handling and caching performance\n* Fixed edge cases in determining files to update/clear when re-indexing\n* C/C++: record and display indexer configuration issues (issue [#618](https://github.com/CoatiSoftware/Sourcetrail/issues/618))\n* Windows: Log success of Visual Studio path detector instead of printing to console\n* Generate and pass index file commands to indexers one by one to reduce memory consumption\n* C/C++: Query files from compilation database one by one to reduce memory consumption\n* Java: changed type_argument edges to originate in the generic type or method\n* Optimized storage in-memory caches to reduce memory use during indexing\n\n#### 2018.3.55\nreleased 2018-08-31\n\n* C/C++: Fixed crash on logging Clang invocation info with flags that throw errors (issue [#617](https://github.com/CoatiSoftware/Sourcetrail/issues/617))\n* Plugin: Move window to the front when sending symbol via plugin (issue [#605](https://github.com/CoatiSoftware/Sourcetrail/issues/605))\n* Java: Fixed crash on Windows if JVM tries to allocate too much memory\n* Java: Fixed loading dialogs shown in main window instead of project setup dialog for setup with gradle\n* Graph: Display bundle node count as pill instead of circle\n* Fixed crash that had a chance to occur when showing source files of cdb/cbp/sonargraph project during setup\n* Fixed source extensions not converted to lowercase (issue [#614](https://github.com/CoatiSoftware/Sourcetrail/issues/614))\n* C/C++: fixed line of errors wrong when appearing after #line directives (issue [#610](https://github.com/CoatiSoftware/Sourcetrail/issues/610))\n* Graph: Clear graph contents on overview (issue [#609](https://github.com/CoatiSoftware/Sourcetrail/issues/609))\n* Windows: Fixed policy for finding Windows user data folder (issue [#612](https://github.com/CoatiSoftware/Sourcetrail/issues/612))\n* C/C++: Fixed recording of multiple cxx anonymous namespaces within the same file\n* C/C++: Fixed files within indexed directories always refreshed in empty C/C++ source groups\n* Code: Don't show list of overridden methods when clicking overriding method\n* Code: Fixed local reference navigation not shown for edges when file content was not cached\n* Fixed crash related to update check when app was opened with a project\n* Tooltip: Fixed repeated signature name qualification and line breaks\n* Tooltip: Fixed app crash when signature location was wrongly recorded\n* Java: always record 'java.lang' as package\n* Java: Record all parent packages of an import declaration as packages\n* Code: Fixed code annotations missing in snippet mode for files with /r/n line endings\n* Java: Added support for annotations\n* C/C++: log Clang invocation with implicit and derived arguments\n* Indexer: Reduced copies in handling intermediate storage representation\n* Indexer: Don't shuffle file order for indexing\n* Indexer: Improved storing performance by optimizing insertion statements and indices\n\n#### 2018.3.13\nreleased 2018-08-06\n\n* Code: Fixed text search locations sometimes disappearing when expanding scope of code snippets\n* Graph: Added Expand/Collapse Node actions to graph context menu\n* Indexer: Improved storing performance\n* Warn user after indexing if project index is used in multiple processes and cannot be updated\n* Search: Fixed text search sometimes showed wrong results for queries with non-letter characters\n* Graph: Improved graph node color contrasts\n* C/C++: Improved file path caching for faster indexing times\n* C/C++: Fixed click on macro reference activated first of multiple symbols instead of showing tooltip list\n* C/C++: Fixed file logging broken when indexing a compilation database project in single process\n* Prefill system specific paths in application settings only once\n* Added check if entered project name is a valid file name\n* Windows: Fixed names of available header path detectors\n* Graph: Show graph legend via 'legend' command or '?' button in the lower right corner (issue [#308](https://github.com/CoatiSoftware/Sourcetrail/issues/308), [#540](https://github.com/CoatiSoftware/Sourcetrail/issues/540))\n* C/C++: Ship clang compiler headers also for Windows\n* Code: Added on-demand local reference navigation to code view navigation bar (issue [#453](https://github.com/CoatiSoftware/Sourcetrail/issues/453), [#538](https://github.com/CoatiSoftware/Sourcetrail/issues/538))\n* Improved button texts for \"reindexing required\" dialog\n* Code: Scroll code horizontally to active source location if out of view\n* Graph: Added show definition context menu action/shortcut to show definition of any node in the code (issue [#83](https://github.com/CoatiSoftware/Sourcetrail/issues/83))\n* Improved project loading speed\n* Create project directory during project setup if not existing\n* Tooltip: Show function/method signatures exactly as declared in source file\n* Search: Improved autocompletion scoring to process more symbols\n* Search: Fixed autocompletions fail with wide characters (issue [#598](https://github.com/CoatiSoftware/Sourcetrail/issues/598))\n* Windows: Show error text when opening external .dll fails\n* C/C++: Highlight opening and closing braces in code when hovering either one (issue [#12](https://github.com/CoatiSoftware/Sourcetrail/issues/12))\n* macOS: Fixed start screen not disappearing when launching Sourcetrail by opening a project\n* Graph: Fixed restoring of scroll position in graph on undo broken\n* Graph: Hide children with type use edges to parent if parent is active\n* Bookmark: Fixed bookmark creator dialog header not visible\n* Graph: Show parameters for functions/methods with same name (issue [#259](https://github.com/CoatiSoftware/Sourcetrail/issues/259))\n* Graph: exporting graph as .svg (issue [#596](https://github.com/CoatiSoftware/Sourcetrail/issues/596))\n* Show indexing progress bar in status bar\n* Keep browsing old project state while indexing (issue [#175](https://github.com/CoatiSoftware/Sourcetrail/issues/175))\n* Java: Added support for Java 9 & 10\n* Added project setup from Sonargraph project for C, C++ and Java.\n* Migrate old \".coatiproject\" settings to new \".srctrlprj\" extension when loading project\n* Allow discarding unfinished index when aborting indexing\n* Fixed partly indexed project can't be opened after closing while indexing (issue [#594](https://github.com/CoatiSoftware/Sourcetrail/issues/594))\n* C/C++: Show translation unit of indexing errors\n* Fixed activating history item from menu showed wrong symbol (issue [#572](https://github.com/CoatiSoftware/Sourcetrail/issues/572))\n* Fixed all errors shown when only showing errors for certain file and changing error filter (issue [#577](https://github.com/CoatiSoftware/Sourcetrail/issues/577))\n* Added pagination to project setup dialogs\n* C/C++: Make complete file incomplete if it has errors in later translation units\n\n\n#### 2018.2.77\nreleased 2018-06-18\n\n* C/C++: Fixed incomplete header file got changed to complete from correct translation unit, although it had errors\n* Fixed show errors button click on incomplete file with no associated errors showed all errors\n* C/C++: Ship clang compiler headers within package on macOS and Linux (issue [#99](https://github.com/CoatiSoftware/Sourcetrail/issues/99))\n* Graph: Fixed undoing one of multiple edge activations caused multiple recenterings of the graph\n* Fixed links not clickable in source group type selection\n* Explicitly clear all errors when refreshing incomplete files\n* Graph: Fixed splitting anonymous namespace bundle increased group nesting by 1 every time\n* Graph: Fixed typedef nodes not grouped within file group\n* Code: Fixed snippet minimize click expanded snippet again\n* Fixed changing of selected source group not possible if validity check fails.\n* C/C++: Added C/C++ project setup from Code::Blocks (.cdb), which is also created for cmake projects in QtCreator\n* C/C++: fixed endless loop in include path auto detection (issue [#585](https://github.com/CoatiSoftware/Sourcetrail/issues/585), [#470](https://github.com/CoatiSoftware/Sourcetrail/issues/470))\n* C/C++: fixed crash in include validation in source group setup\n* Fixed typo in update check (issue [#586](https://github.com/CoatiSoftware/Sourcetrail/issues/586))\n* C/C++: Added some compiler flags checks\n* C/C++: Errors without location are now recorded for current main file\n\n#### 2018.2.36\nreleased 2018-05-04\n\n* Graph: Fixed crash when clicking on namespace label\n* Improved help dialog for compiler flags in project setup\n* Fixed handling case insensitive filepath matches when activating a symbol via editor plugin\n* Wrote cmake export compile command to description in source group setup\n* Fixed macOS gatekeeper refusing to open app bundle (issue [#568](https://github.com/CoatiSoftware/Sourcetrail/issues/568))\n* Use custom radio button style on start indexing dialog to fix radio indicator not visible on old Windows systems\n* Fixed indexed header paths in compilation database project change the processing order of includes (issue [#571](https://github.com/CoatiSoftware/Sourcetrail/issues/571))\n* Allow tooltips to be as wide as the window (issue [#570](https://github.com/CoatiSoftware/Sourcetrail/issues/570))\n* Graph: Improved edge routing in graph layout\n* Graph: Only use base/derived bundles for inheritance\n\n#### 2018.2.23\nreleased 2018-04-24\n\n* C/C++: removed check if header was already indexed to fix missing data due to different preprocessor conditions.\n* Fixed fulltext search missing results for queries with many matches in the same file.\n* Fixed crash on converting relative paths to canonical paths in project setup\n* Also clear errors in non-indexed files when refreshing \"updated and incomplete files\" (issue [#564](https://github.com/CoatiSoftware/Sourcetrail/issues/564))\n* Updated about dialog to new company name\n* Graph: Improved layout of aggregation edges\n* Fixed race condition causing crashes when showing tooltips\n* Code: Fixed switch of view mode didn't show active reference\n* Fixed carriage return in line endings breaks screen search in code view\n* Fixed logic to detect excluded files on project refresh\n* Add \"Copy\" to duplicated source group's name\n* Preferences: show 'default' in indexer threads combo instead of 0\n* Fixed empty exclude path excludes everything\n* C/C++: Improved indexer performance by skipping traversal of contents of non-indexed files\n* Linux: Fixed error in Sourcetrail.sh script\n* Search: Give children of matched symbols a lower score\n* Search: Improved fulltext search index creation speed\n* Don't show title bars of views by default\n* Graph: Improved horizontal layout to avoid edges overlapping nodes\n* Show versions of 3rd party dependencies in 3rd party dialog\n* Updated help info for update check\n* Graph: Group graph nodes by file or namespace (issues [#171](https://github.com/CoatiSoftware/Sourcetrail/issues/171), [#439](https://github.com/CoatiSoftware/Sourcetrail/issues/439), [#522](https://github.com/CoatiSoftware/Sourcetrail/issues/522))\n* Graph: Layout template specializations vertically and show them in inheritance depth graph\n* Graph: Show symbols defined within file when activating file node (issue [#268](https://github.com/CoatiSoftware/Sourcetrail/issues/268))\n* UI: Updated to Qt 5.10.1\n* C/C++: Updated to clang 6.0\n* Graph: better contrast for non-indexed hatching colors\n* Graph: group nodes with same base and derived nodes in inheritance depth graph (issue [#459](https://github.com/CoatiSoftware/Sourcetrail/issues/459))\n* Code: Lazy load code annotations for shorter display time (issue [#389](https://github.com/CoatiSoftware/Sourcetrail/issues/389))\n* Code: Improved snippet display time (issue [#389](https://github.com/CoatiSoftware/Sourcetrail/issues/389))\n* C++: fixed infinite recursion while solving c++ template parameter names (issue [#553](https://github.com/CoatiSoftware/Sourcetrail/issues/544))\n* Added close button to status view\n* Improved style of tab bar in status view\n* Added Show Errors button to title bar of incomplete files to show only errors related to certain file (issue [#246](https://github.com/CoatiSoftware/Sourcetrail/issues/246))\n* Added sorting to error table columns (issue [#559](https://github.com/CoatiSoftware/Sourcetrail/issues/559))\n* Added wildcards for excluded paths (issue [#475](https://github.com/CoatiSoftware/Sourcetrail/issues/475))\n* Option to accept EULA via commandline API\n* Changed seats to users for Commercial License in EULA\n* Graph: Improved vertical layout for override and inheritance edges\n* Speed up preferences dialog loading time, by delaying font face loading\n* Allow non-ASCII characters in symbol, full-text and on-screen search\n* Allow non-ASCII characters in bookmarks\n* Allow non-ASCII characters in file paths\n\n#### 2018.1.19\nreleased 2018-01-30\n\n* Fixed crash on filling DirectoryListBox with no selected items (issue [#544](https://github.com/CoatiSoftware/Sourcetrail/issues/544), [#545](https://github.com/CoatiSoftware/Sourcetrail/issues/545))\n* Graph: Improved type node contrast in bright color scheme\n* Code: Fixed going back in history sometimes showed the wrong file when an edge was activated last\n* Code: Clicking on active location will activate it again and show it's definition\n* Graph: Don't keep expanded nodes expanded after using symbol search\n* Fixed file picker didn't start in recent directory when exporting graph as image (issue [#541](https://github.com/CoatiSoftware/Sourcetrail/issues/541))\n* Code: Fixed file content shown multiple times when clicking title button of non-indexed file with errors\n* Preferences: Only show latin fonts in the font face dropdown\n* Code: Fixed gaps in line indicators for some font faces\n* Windows: Show indexing progress in Windows task bar\n* Linux: Added settings to change screen scaling to preferences (issue [#518](https://github.com/CoatiSoftware/Sourcetrail/issues/518), [#523](https://github.com/CoatiSoftware/Sourcetrail/issues/523))\n* Allow for disabling certain Source Groups via Status checkbox in the \"Edit Project\" dialog\n* C/C++: Fixed no indexed information saved for compilation database referencing certain compiler (issue [#531](https://github.com/CoatiSoftware/Sourcetrail/issues/531))\n* Increased history dropdown list size to 50 items\n* Still allow project refresh if database file can't be loaded\n* Removed focus outlines from push buttons\n* Graph: Display warning when depth graph has more than 1000 nodes\n* Code: Fixed screen search matches not always cleared in single file mode\n* C/C++: Implemented handling Microsoft inline assembly statements\n* C/C++: Added automatic include path detection to project setup\n* Java: Fixed project setup from Maven not working for projects without sub-modules\n* Windows: Changed default install directory to \".../Sourcetrail/\"\n* Windows: Changed Sourcetrail font color in installer image\n* Windows: Fixed sourcetrail loader gif not showing up on some windows systems\n* Custom style for dock widget title bars with different colors in each color scheme\n* C++: Fixed bug where anonymous symbols were only partly named like the enclosing typedef\n* C/C++: Fixed policy for recording elements inside macro arguments and bodies\n* Allow users to ignore warning on non-existing paths in project setup\n* Code: Switch to single file view when clicking snippet maximize\n* Code: Show scrollbar at bottom of snippet list if bottom snippet is horizontally scrollable (issue [#432](https://github.com/CoatiSoftware/Sourcetrail/issues/432))\n* Code: Keep snippet title bar at top when scrolling down (issue [#479](https://github.com/CoatiSoftware/Sourcetrail/issues/479))\n* Fixed history dropdown opened again when clicking on button again\n* Code: Fixed single file view cleared when refreshing\n* Graph: Added \"Exported from Sourcetrail\" note to exported graph images\n* C/C++: Don't store commandline string for each error to save memory\n* Fixed delay when starting indexing until progress dialog shows up\n* Group include validation results by file and add line breaks for readability\n* Fixed location pickers used system root directory when empty\n* Graph: Add \"bidirectional\" to tooltip of bidirectional aggregation edges\n* Linux: Don't explicitly open terminal when running on Linux (issue [#525](https://github.com/CoatiSoftware/Sourcetrail/issues/525))\n* Fixed files and directories dialog to offer selection of files (issue [#521](https://github.com/CoatiSoftware/Sourcetrail/issues/521))\n* C++: Fixed cases where references to members were recorded as usage instead of call\n* Fixed crash when Start Screen is closed while checking for update\n* Search: Fixed selected text not deleted when pasting into search field (issue [#527](https://github.com/CoatiSoftware/Sourcetrail/issues/527))\n* C++: Record template variable specialization edges\n* Code: Use different background color in snippet list to improve visual layering\n* Don't force full project refresh when project settings changed (issue [#493](https://github.com/CoatiSoftware/Sourcetrail/issues/493))\n* Added indexing mode to reindex incomplete files (issue [#496](https://github.com/CoatiSoftware/Sourcetrail/issues/496))\n* Java: Allow using .aar files as Java project dependencies\n* Java: fixed some Java exceptions and write Java exceptions to log file\n* Java: Note architecture of Java version in preferences dialog\n* Code: Show line indicators for fulltext search results and fixed matches at line start\n* Graph: Update visible depth graph when changing depth level slider (issue [#484](https://github.com/CoatiSoftware/Sourcetrail/issues/484))\n* Always show all context menu actions, but disable unavailable ones\n* Graph: Hide nodes and edges via context menu action or Alt + Click (issue [#472](https://github.com/CoatiSoftware/Sourcetrail/issues/472))\n* Graph: Added option to preferences to show/hide builtin types, default is hidden (issue [#409](https://github.com/CoatiSoftware/Sourcetrail/issues/409))\n* Improved style and color of scrollbars and main window separators\n* Linux: Fixed icon sizes when scaling to highDPI fails\n* Search: Fixed cursor disappearing when entering long string in the search field\n* C++: Fixed parent node hierarchy for C++ template parameters of variable declarations\n* Linux: Fixed syntax error in Sourcetrail.sh (issue [#519](https://github.com/CoatiSoftware/Sourcetrail/issues/519))\n* Graph: Improved exported image quality\n* Graph: Fixed exported graph image were too large (issue [#511](https://github.com/CoatiSoftware/Sourcetrail/issues/511))\n* Fixed crashes due to double deleted Qt widgets\n* Fixed crash when specifying an unknown text encoding in the preferences\n* C++: Fixed retrieval of CXX template parameter declarations of parent\n* C/C++: Fixed filepaths to always be canonical (issue [#516](https://github.com/CoatiSoftware/Sourcetrail/issues/516))\n* Graph: Fixed implicit nodes not auto-expanded when activated\n* C/C++: Add filename info to static functions (issue [#515](https://github.com/CoatiSoftware/Sourcetrail/issues/515))\n\n#### 2017.4.46\nreleased 2017-11-09\n\n* C/C++: Add filename info to static global variables to avoid collision (issue [#514](https://github.com/CoatiSoftware/Sourcetrail/issues/514))\n* Allow duplicate indexing of source files if the indexer command differs\n* Fixed single header files within indexed paths were not indexed (issue [#513](https://github.com/CoatiSoftware/Sourcetrail/issues/513))\n* Status: Explain differences of errors and how to fix them in help message dialog (issue [#501](https://github.com/CoatiSoftware/Sourcetrail/issues/501))\n* C/C++: Add parent directories of source files in the compilation database automatically to indexed header paths\n* C/C++: Give clang higher precedence in automatic global header search path detection\n* C/C++: Added new clang 5.0.0 language standards to project setup dropdown box\n* Graph: Show nodes with more than 20 children initially collapsed (issue [#509](https://github.com/CoatiSoftware/Sourcetrail/issues/509))\n* Show message box informing about shared memory problems before indexing (issue [#508](https://github.com/CoatiSoftware/Sourcetrail/issues/508))\n* Fixed files from symlinked directories within indexed directories were not indexed\n* Start from correct directory for relative paths in project setup location pickers\n* Java: Added all previous Java versions to language standard selection\n* C++: Fixed recording template member specializations of methods as explicit nodes\n* C++: Fixed template members variables sometimes recorded as functions with call edges\n* C/C++: Fixed recorded location of function bodies defined inside macros\n* C/C++: Skip recording macro usages in non-indexed files\n* Search: Fixed focus and selection policy of search elements for Windows and Linux\n* Graph: Fixed type usage edges not shown between class members and inner class types\n* Graph: Fixed activation of bookmarked edge did not highlight edge in all situations\n* Status: Fixed resize status view table columns were only resizeable in the title bar (issue [#506](https://github.com/CoatiSoftware/Sourcetrail/issues/506))\n* Added setting for text encoding to preferences (issue [#500](https://github.com/CoatiSoftware/Sourcetrail/issues/500))\n* Search: Fixed low contrast of search field cursor in dark schemes (issue [#487](https://github.com/CoatiSoftware/Sourcetrail/issues/487))\n\n#### 2017.4.20\nreleased 2017-10-25\n\n* Code: Fixed file state of snippets wrong after iterating references in single file view\n* Search: Improved selection on focus to allow editing of search query (issue [#483](https://github.com/CoatiSoftware/Sourcetrail/issues/483))\n* Code: Fixed last line removed in full file view\n* Fixed local symbol activation via plugin shows empty view\n* Fixed handling of symbolic links when activated via plugin (issue [#489](https://github.com/CoatiSoftware/Sourcetrail/issues/489))\n* Code: Fixed crash due to double deletion of elements (issue [#488](https://github.com/CoatiSoftware/Sourcetrail/issues/488))\n* Code: Show shortcut 'Ctrl + Left Mouse' in code for 'Show in IDE' context menu action\n* Improved names, texts and order in project setup\n* macOS: Fixed start screen did not vanish when opening project with double click\n* Added Non-Commercial use option and removed trial mode\n* Linux: Moved install and uninstall scripts to top level directory in package\n* C++: Fixed record rvalue references as \"&&\" instead of \"&\"\n* C/C++: Added prefilling of indexed header paths for compilation database projects\n* Moved automatic update check setting to preferences and enable by default\n* Code: Added indexing of qualifier source locations and allow symbol activation by clicking qualifiers\n* Linux: Enabled Qt highDPI scaling to fix UI issues on high resolution screens\n* Fixed handling of non-indexed files in Graph and Code\n* C/C++: Removed include check validation for compilation database source groups\n* Graph: Bundle nested anonymous namespaces into anonymous namespace bundle in namespace overview (issue [#465](https://github.com/CoatiSoftware/Sourcetrail/issues/465))\n* Search: Fixed vertical growth of search bar area when resizing window\n* Visual Studio plugin: Lots off fixes, see changelog (https://github.com/CoatiSoftware/vs-sourcetrail/blob/master/CHANGELOG.md)\n* Sublime Text plugin: Fixed plugin not working when installed via Package Control (issue #468)\n* Windows: Added missing Qt dlls to save graph images as .jpg (issue [#474](https://github.com/CoatiSoftware/Sourcetrail/issues/474))\n* C/C++: Updated to Clang 5.0.0\n* Code: Fixed annotations missing for full file snippets\n* Java: Added project setup from Gradle (issue [#379](https://github.com/CoatiSoftware/Sourcetrail/issues/379))\n* Added \"Find On-Screen\" option with search bar at bottom of window for searching Graph and Code on-screen (issue [#79](https://github.com/CoatiSoftware/Sourcetrail/issues/79))\n* Use \"Find On-Screen\" with 'Ctrl + D' or '/'\n* Graph: Added C++ template specialization and template member specialization edges\n* Graph: Show implicit children of implicit nodes\n* Code: Fixed syntax highlighting of inline comments\n* Code: Added syntax highlighting rule for char literals\n* C++: Improved recording of template member specializations\n* Refresh only files where content actually changed\n\n#### 2017.3.48\nreleased 2017-09-07\n\n* Java: migrated Java indexer from JavaSymbolSolver to Eclipse JDT\n* Java: Use same node order in graph as in file\n* Code: Added second line marker color to better highlight hovered and local symbols\n* Added \"Skip this Version\" option to update dialog\n* Search: replace template arguments with <..> in non-indexed nodes to reduce clutter in search results\n* Code: Fixed default text color not reset text was annotated in dark schemes\n* Code: Fixed text color not correctly changed when annotation type changes\n* Fixed history list activating wrong symbol after aggregation edge was active\n* Added node type keywords to filter autocompletions or activate all nodes (issue [#78](https://github.com/CoatiSoftware/Sourcetrail/issues/78))\n* File dialog shows home directory instead of working directory for first file dialog (issue [#448](https://github.com/CoatiSoftware/Sourcetrail/issues/448))\n* Java: improved Maven timeout policy (issue [#449](https://github.com/CoatiSoftware/Sourcetrail/issues/449))\n* Fixed indexing results insertion starving when indexers are really fast because of other UI updates\n\n#### 2017.3.26\nreleased 2017-08-24\n\n* Java: fixed indexer to continue working when a dependency path does not exist\n* Changed default indexer thread count to 0, which uses optimal thread count\n* Java: Changed default value for maven dependencies directory\n* Java: improved indexing speed to be 2.5 time faster\n* Added commandline API for indexing projects and configuring indexing related preferences (issue [#383](https://github.com/CoatiSoftware/Sourcetrail/issues/383))\n* Mention call/inheritance graphs in tutorial\n* CXX: Save command line info of indexer command to errors and show within errors table (issue [#351](https://github.com/CoatiSoftware/Sourcetrail/issues/351))\n* CXX: Added cross-compilation UI to project setup (issue [#370](https://github.com/CoatiSoftware/Sourcetrail/issues/370))\n* Added update checker connecting to online API and checkbox to enable daily update checks on start screen.\n* Java: Implemented interrupting AST visiting of Java indexer\n* Java: Updated to JavaSymbolSolver 0.6.0.X and Javaparser 3.3.0\n* CXX: Removed preprocessor only option, because of new include path validation\n* CXX: Fixed uppercase CXX header file name and extensions saved in lowercase (issue [#437](https://github.com/CoatiSoftware/Sourcetrail/issues/396))\n* Code: When clicking source location with multiple tokens or local symbols show a list to select one of these\n* Sort indexer commands for increased performance\n* Added custom tooltipping to Code and Graph with clickable types of variables and signatures (issue [#195](https://github.com/CoatiSoftware/Sourcetrail/issues/195), [#331](https://github.com/CoatiSoftware/Sourcetrail/issues/331))\n* Java: fix issue where Maven project did not show any source files (issue [#428](https://github.com/CoatiSoftware/Sourcetrail/issues/428))\n* CXX: clean indexed header path selection for project setup from Compilation Database\n* Added progress dialog for \"show source files\" button in project setup UI\n* CXX: Added include path validation to project settings\n* Search: Select text elements when clicking into search bar\n* Search: Fixed crash when fulltext search yields no results\n* Updated to Qt 5.9.1\n* CXX: Added node type for \"union\"\n* CXX: Merge anonymous types and the respective typedef (issue [#189](https://github.com/CoatiSoftware/Sourcetrail/issues/189), [#292](https://github.com/CoatiSoftware/Sourcetrail/issues/292))\n* CXX: Updated to clang 4.0.1\n* Added Menu option to show Start Window\n* Don't show start window when opening project with double-click\n* Show license type label in title bar: \"Sourcetrail [trial, test, non-commercial]\"\n* Graph: Fixed class expand toggle shown in overview and namespace lists\n* Graph: Show inheritance edges between parents of active symbol and other visible symbols (issue [#167](https://github.com/CoatiSoftware/Sourcetrail/issues/167))\n* Improved project loading performance\n* Code: improved location retrieval and hover performance\n* Show recent bookmarks in bookmarks menu (issue [#414](https://github.com/CoatiSoftware/Sourcetrail/issues/414))\n* Code: Fixed references and buttons when activating file in snippet mode\n* Java: added auto-detection for JRE System Library\n* Java: Prefill JRE system library path on first Sourcetrail launch\n* macOS: fixed qt.conf for case-sensitive file system (issue [#404](https://github.com/CoatiSoftware/Sourcetrail/issues/404))\n* Improved database saving performance\n* Improved database file clearing performance\n* Improved contrasts of UI elements in bright color scheme\n* Graph: Show zoom level as percent label next to zoom buttons\n* Added Visual Studio Code plugin (issue [#397](https://github.com/CoatiSoftware/Sourcetrail/issues/397))\n* Added \"Edit Project\" button below error table\n* Java: Maven fixes regarding JAVA_HOME variable (issue [#405](https://github.com/CoatiSoftware/Sourcetrail/issues/405))\n\n#### 2017.2\nreleased 2017-06-21\n\n* Fixed crash when using shortcuts containing letters with focus on the graph on macOS (issue [#390](https://github.com/CoatiSoftware/Sourcetrail/issues/390))\n* Improved Visual Studio plugin performance\n* Updated End User License Agreement and have users accept on first run on macOS and Linux\n* Fixed memory issues when using large Compilation Database files (issue [#396](https://github.com/CoatiSoftware/Sourcetrail/issues/396))\n* Updated to JavaParser and JavaSymbolSolver\n* Fixed issue where black borders appeared around dialogs for some Linux window managers (issue [#376](https://github.com/CoatiSoftware/Sourcetrail/issues/376))\n* Use platform default window decorations for UI dialogs\n* Code: Made snippet minimize/maximize buttons more interactive by showing hover states\n* Code: improved code view loading performance\n* Java: Record more \"import not found\" errors\n* Support Visual Studio 2017 in Visual Studio Plugin (issue [#381](https://github.com/CoatiSoftware/Sourcetrail/issues/381))\n* Graph: increased creation speed by requesting less data\n* macOS: Codesign .app bundle to avoid \"from unidentified developer\" warning\n* Error: Use same error order in error table and code view\n* Error: Only show first 1000 errors, click button in lower right of error table to show all (issue [#385](https://github.com/CoatiSoftware/Sourcetrail/issues/385))\n* Graph: use bezier edges when activating aggregation edge\n* Send ping after changing plugin ports\n* Added menu action to display EULA and force accepting on macOS\n* Fixed use of environment variables in project setup paths\n* Multi-language project setup via Source Groups setup UI (issue [#230](https://github.com/CoatiSoftware/Sourcetrail/issues/230))\n* C/C++: Fixed no files indexed when relative file paths are provided in Compilation Database (issue #388)\n* C/C++: Display an error when loading a Compilation Database fails\n* C/C++: Fixed source files within Compilation Database not indexed unless within Indexed Header Paths\n* Fixed status message length limiting window resizing (issue [#372](https://github.com/CoatiSoftware/Sourcetrail/issues/372))\n* Match source file extensions case insensitive (issue [#384](https://github.com/CoatiSoftware/Sourcetrail/issues/384))\n* Fixed indexing progress file count in status bar and status view (issue [#387](https://github.com/CoatiSoftware/Sourcetrail/issues/387))\n* Windows: remove setup.exe from windows installer with all necessary .dll files\n* Added history list button between back and forward button\n* Added history menu showing activated symbols in chronologic order\n\n#### 0.12.25\nreleased 2017-05-16\n\n* Added QtCreator plugin\n* Graph: Added context menu action to create bookmark for node under mouse cursor (issue [#373](https://github.com/CoatiSoftware/Sourcetrail/issues/373))\n* Code: Fixed code view not scrolled to first fulltext search match in single file mode\n* Set unrestricted permission for accessing shared memory to fix crash on Windows\n* Improved setting descriptions in preferences dialog\n* Java: Updated to JavaParser 3.2.0 and JavaSymbolSolver 0.5.3\n* Graph: Fixed order of nodes is same as within first encountered header file\n* Save timestamp after project indexing and show it on the overview screen\n* Fixed use of correct name delimiters in indexer processes\n* Fixed crash when running 32 and 64 bit versions in parallel\n* Bookmark: Changed menu action to \"Bookmark Active Symbol\"\n* Graph: Zooming on Ctrl + Mouse Wheel now (Shift + Mouse Wheel still working)\n* Added dialog to warn about \"verbose indexer logging\" before indexing.\n* Added multi process indexing for C/C++ projects to better handle crashes during indexing.\n* Reduced file accesses during C/C++ indexing.\n* Graph: Show call graphs, inheritance trees and include trees for active symbol. UI in the top left of the graph view for defining direction and depth. (issues [#249](https://github.com/CoatiSoftware/Sourcetrail/issues/249) [#337](https://github.com/CoatiSoftware/Sourcetrail/issues/337))\n* Improved performance by running UI updates in parallel for each view\n* Fixed project refresh not recognizing newly added files\n* Show progress dialog when clicking refresh while computing files (issue [#341](https://github.com/CoatiSoftware/Sourcetrail/issues/341))\n* Added show files button to summary of compilation database project setup (issue [#354](https://github.com/CoatiSoftware/Sourcetrail/issues/354))\n* Show option to run only C/C++ preprocessor when indexing on indexing start dialog (issue [#297](https://github.com/CoatiSoftware/Sourcetrail/issues/297))\n* Added bookmarking feature for nodes and edges. Bookmarks can have categories and comments. Data gets stored in .srctrlbm next to project file. Shortcuts similar to web browsers. (issue [#138](https://github.com/CoatiSoftware/Sourcetrail/issues/138))\n* Mark files with errors and all files within a translation unit with fatal errors as incomplete (issue [#358](https://github.com/CoatiSoftware/Sourcetrail/issues/358))\n* Fixed compilation database projects using C++ source extensions and standard (issue [#366](https://github.com/CoatiSoftware/Sourcetrail/issues/366))\n\n#### 0.11.86\nreleased 2017-04-12\n\n* Terminating all running tasks before closing the application (issue [#343](https://github.com/CoatiSoftware/Sourcetrail/issues/343))\n* Use all available cores when setting indexer threads to 0 (issue [#342](https://github.com/CoatiSoftware/Sourcetrail/issues/342))\n* Added reset window layout option to view menu (issue [#289](https://github.com/CoatiSoftware/Sourcetrail/issues/289))\n* Fixed colorscheme gets refreshed when cancelling preferences dialog\n* Log: Scroll to first line in errors table after indexing and after display\n* Copy old ApplicationSettings.xml and window_settings.ini files from previous Coati install if available.\n* New projects are created with .srctrlprj and .srctrldb endings, but still support old file extensions.\n* Renamed application from Coati to Sourcetrail\n* Fixed issues in tutorial project\n* Graph: Fixed node with no children but qualifier shows expand button\n* Enable undo/redo actions in context menu only when available\n* Java: Updated to JavaParser 3.1.2 and JavaSymbolSolver 0.5.2.x\n* Revised undo/redo stack to handle messages differently\n* Java: Added support for project setup from Maven\n* Windows: Hide console when running release builds\n* Show license information on start screen\n* Added ping support to plugins and display current connected editor/IDE in status bar.\n\n#### 0.11.15\nreleased 2017-03-01\n\n* Don't accept rich text in 'enter license' dialog field (issue [#207](https://github.com/CoatiSoftware/Sourcetrail/issues/207))\n* Updated EULA to include Test License and better clarify other license types\n* Fixed icons in project setup dialogs blurry on highDPI screens\n* Added link to additional downloadable pre-indexed projects to trial start screen\n* Fixed crash when saving preferences if they contain relative paths\n* Convert all paths chosen by patch picker relative to project location in project setup\n* Disabled name and location changing in project editing and removed project moving\n* Split default file extensions for C++ and C to avoid wrong files getting indexed\n* Deprecated 'Lazy Include Search', it's only visible to previously created projects (issue [#335](https://github.com/CoatiSoftware/Sourcetrail/issues/335))\n* Support relative paths and paths containing environment variables for compilation database path (issue [#312](https://github.com/CoatiSoftware/Sourcetrail/issues/312))\n* Removed 'Advanced Settings' section in project setup and show theses options in separate dialog (issue [#293](https://github.com/CoatiSoftware/Sourcetrail/issues/293))\n* Support environment variables containing multiple files in project setup paths (issue [#283](https://github.com/CoatiSoftware/Sourcetrail/issues/283))\n* Warn users when no 'Indexed Header Paths' were set in compilation database project (issue [#254](https://github.com/CoatiSoftware/Sourcetrail/issues/254))\n* Renamed \"Project Paths\" to \"Indexed Paths\" in project setup\n* Renamed \"Project File Location\" to \"Coati Project Location\" in project setup (issue [#234](https://github.com/CoatiSoftware/Sourcetrail/issues/234))\n* Allow opening indexed projects in trial mode\n* Record node type of non-indexed qualifiers (e.g. \"std\" in \"std::string\" as namespace)\n* Log: Fixed error icon loaded for every row (issue [#287](https://github.com/CoatiSoftware/Sourcetrail/issues/287))\n* Graph: Fixed lambda are placed within white area to better see call edges\n* Graph: Show non-indexed nodes within their parents instead of using namespace labeling\n* Code: Disabled syntax highlighting for project description\n* Graph: Fixed different font-faces causing graph nodes to expand to bigger cell amount\n* Mac: Fixed wrong READMEs at some plugins (issue [#315](https://github.com/CoatiSoftware/Sourcetrail/issues/315))\n* Mac: Removed boost libraries and libLTO from Mac bundle\n* Windows: Add Visual Studio compatibility flags to new project when Visual Studio include paths are present\n* Renamed undefined nodes to non-indexed nodes for clarification\n* Show progress in file clearing dialog\n* Extended syntax highlighting for Java and distinguish by project type\n* offer Windows 64bit build (issue [#300](https://github.com/CoatiSoftware/Sourcetrail/issues/300))\n* Fixed legacy Java 6 install necessary on MacOS (issue [#280](https://github.com/CoatiSoftware/Sourcetrail/issues/280))\n* Updated to Qt 5.8\n* Updated to clang/llvm 3.9\n* Added multithreading to Visual Studio plugin compilation database creation\n* Graph: Use new list layouting for overview bundles and namespaces/packages\n* Graph: Group nodes in list layout by starting character and allow jumping to group by pressing the key\n* Graph: Use node specific styles for overview bundles\n* Visual Studio plugin can now handle projects with non-native build tool for compilation database export\n* Changed menu action 'Licenses' to '3rd Party Licenses'\n* Added dialog with all shortcuts to Help menu\n* Log: Show error in errors table when clicked in code view (issue [#323](https://github.com/CoatiSoftware/Sourcetrail/issues/323))\n* Code: Switched default mouse drag behavior to selection, panning on Shift + drag, and show suitable cursors\n* Updated company address in about dialog\n* Graph: Added on-screen zoom buttons\n* Graph: Split aggregation edge when expanding nodes if possible\n* Uncommented lines using the std library in TicTacToe sample\n* Fixed issue with lambda return type (issue [#318](https://github.com/CoatiSoftware/Sourcetrail/issues/318))\n* Save builtin types as separate node type (issue [#2](https://github.com/CoatiSoftware/Sourcetrail/issues/2))\n* Remove unused included files after refreshing\n* Java: Fixed packages that only contain packages to show up as non-indexed\n* Added context-menu actions to copy node names, file paths and show files in containing directory (issue [#320](https://github.com/CoatiSoftware/Sourcetrail/issues/320))\n* Fixed crash when entering a single space in 'enter license' dialog (issue [#277](https://github.com/CoatiSoftware/Sourcetrail/issues/277))\n* Graph: Made edge lines thicker\n* Fixed handling and storing of files with the same name\n* Fixed environment variable detection within project paths for %VARIABLE_NAME% syntax\n* Coati states whether it needs 32bit or 64bit JRE\n* Java: Updated indexer to fix a lot of unsolved symbol issues\n* Graph: Fixed layouter couldn't handle nodes with same name\n* Graph: Fixed weird looking vertical aggregation edges to child nodes\n* Code: Don't show stats for non loaded project\n* Added option to disable UI animations to preferences\n* Graph: Removed double line around graph view on Mac\n* Graph: Fixed namespace label cut off at edge of screen\n* Code: Added single file view mode\n* Code: Added navigation bar with mode toggle and buttons to navigate references\n* Graph: Removed underscores in edge hover names\n* Infer some non-indexed node types by their edges\n\n\n#### 0.10.0\nreleased 2016-12-14\n\n* Windows: Added runtime DLLs that could be missing on some systems\n* Click message in status bar to open status window\n* Graph: Sort nodes alphabetically within each section\n* Graph: Aggregate type use edges to make referencing nodes appear collapsed\n* Code: Improved performance through faster source location retrieval for files\n* Code: Scroll active symbol definition to top of view if possible\n* Added status tab to Log View showing status bar information\n* Graph: Fixed graph animation used when clicking edges\n* Graph: Disable bundling when files or macros are active\n* Graph: Bundle importing files of active symbol in Java projects\n* Improved speed of depending file search on refresh\n* Search: Fixed crashes related to empty searches (issue [#251](https://github.com/CoatiSoftware/Sourcetrail/issues/251))\n* Search: Do fulltext search when no autocompletion match is available\n* Added checkbox for full project refresh to start indexing dialog\n* Disabled clang error limit by default to make sure all errors are shown\n* Linux: Updated libs and added missing ones (issue [#245](https://github.com/CoatiSoftware/Sourcetrail/issues/245))\n* Updated icons for some graph nodes and project types\n* Windows: Updated Visual Studio plugin UI\n* Graph: Fixed view to not recenter on active node when clicking edge\n* Fixed wrong errors displayed, wrong error counts and error view being wrongly shown\n* Removed font zoom on CTRL + MouseWheel\n* Graph: Display namespace information on left side of nodes, activate namespace by clicking label\n* Improved file clearing performance\n* Windows: Changed setup folder layout\n* Added info screen for indexer crash investigation\n* Code: Fixed display of links to missing symbols in project description\n* Code: Fixed snippet size calculation causing a slowdown in certain cases\n* Search: Skip intermediate autocompletions when typing fast\n* Show dialog for last files inserted into .coatidb at end of indexing\n* Integrated Visual Studio Plugin with Coati Project creation and removed previous Visual Studio Solution parser\n* Improved C++ indexer coverage: using decls, using directives, auto keyword, lambda signatures, symbol references inside lambda captures, template argument related elements\n* Reduced size of .coatidb file by up to 50% for large projects\n* Fixed anonymous symbol name conflicts (issue [#241](https://github.com/CoatiSoftware/Sourcetrail/issues/241))\n* Preferences: Added Indexer Logging option to print AST information during indexing\n* Search: Added second line to search autocompletion list showing namespace, package or filepath\n* Made cells readonly in errors table to prevent editing (issue [#236](https://github.com/CoatiSoftware/Sourcetrail/issues/236))\n* Renamed Log Window to Status window\n\n\n#### 0.9.23\nreleased 2016-10-27\n\n* Windows: Added logging and exception handling to VS plugin\n* Windows: Added VC++ runtime dlls for windows installer\n* Windows: Added missing VC++ runtime dlls (issue [#231](https://github.com/CoatiSoftware/Sourcetrail/issues/231))\n* Added setting for default graph zoom on mouse wheel to preferences (issue [#237](https://github.com/CoatiSoftware/Sourcetrail/issues/237))\n* Scroll errors table to newest error during indexing\n* Fixed best scoring for search autocompletions skipped some combinations\n* Fixed flickering of errors table when indexing\n* Don't show error snippets in overview screen anymore\n* Fixed crash when Project Paths contain files and lazy include search in enabled (issue [#201](https://github.com/CoatiSoftware/Sourcetrail/issues/201))\n* Fixed edge cases that caused deadlocks in indexing\n* Added language specific project icons to start screen\n* Fixed application couldn't be quit when start screen was showing (issue [#227](https://github.com/CoatiSoftware/Sourcetrail/issues/227))\n* Graph: Fixed missing image file ending when exporting graph for Linux\n* Log Coati version when logging gets enabled\n* Fixed non-indexed errors filter in errors table\n\n\n#### 0.9.0\nreleased 2016-10-14\n\n* Extended Visual Studio Plugin to export clang Compilation Databases\n* Implemented new installer for Windows\n* Run System Header Include Paths and Java Path detection when starting application\n* Added Log Window with Errors tab showing a table of all errors\n* Added filters to bottom of error table to define which errors are displayed\n* Removed ring logging and use one log file again instead\n* Smaller indexing progress dialog with bar in the middle instead of golden ratio\n* Code: Set default code snippet expand range to 3 lines for more context\n* Graph: Fixed undoing of aggregation edge activation caused crash\n* Graph: Move aggregation and inheritance edges to front when hovered or active\n* Graph: Push parent nodes of active nodes to back to make all incoming and outgoing edges visible\n* Properly quit application when window is closed while confirm box is open\n* Properly quit application when window is closed while indexing (issue [#121](https://github.com/CoatiSoftware/Sourcetrail/issues/121))\n* Graph: Count only top level nodes in bundle nodes of graph\n* Search: Improved scoring of autocompletion matches to use best score for match\n* App will go into trial mode without valid license\n* Java: Auto detect java root source directories\n* Fixed refresh crash (issue [#220](https://github.com/CoatiSoftware/Sourcetrail/issues/220))\n* Java: improved indexer reliability a lot\n* Java: Changed name of generic type to use name of declaration\n* Fixed project refresh does not recognize removed source paths\n* Java: Define maximum allocated jvm memory in preferences\n* Follow symbolic directory links within source paths (issue [#205](https://github.com/CoatiSoftware/Sourcetrail/issues/205))\n* Use white size grip in blue dialogs\n* Graph: Use type node colors for undefined nodes\n* Java: Show import not found as error\n* Code: Select and copy source code in code view with SHIFT + mouse drag (issue [#7](https://github.com/CoatiSoftware/Sourcetrail/issues/7))\n* Code: Added markers next to line numbers in code view showing active locations and scopes\n* Merged app and trial to one build\n\n#### 0.8.21\nreleased 2016-09-16\n\n* Added options for checking multiple paths in Indexed Header Paths dialog during project setup from Compilation Database [#190](https://github.com/CoatiSoftware/Sourcetrail/issues/190)\n* Added all C/C++ standards supported by clang\n* Fixed C language setting in empty project setup not propagated to indexer [#177](https://github.com/CoatiSoftware/Sourcetrail/issues/177)\n* Added Sublime plugin to Sublime Text Package Control\n* Improved indexer parallelization for faster indexing\n* Changed all font-sizes to px for similar look on all platforms\n* Added font face dropdown to Preferences showing all available monospace fonts [#172](https://github.com/CoatiSoftware/Sourcetrail/issues/172)\n* Smoother font rendering on Windows by setting font engine to FreeType via qt.conf file [#137](https://github.com/CoatiSoftware/Sourcetrail/issues/137)\n* Interrupt indexing while AST visiting for C/C++ for shorter waiting time\n* Save graph as PNG image via context menu in graph view [#180](https://github.com/CoatiSoftware/Sourcetrail/issues/180)\n* Added base folder to Linux package [#181](https://github.com/CoatiSoftware/Sourcetrail/issues/181)\n* Use inverted golden ratio in indexing progress dialog\n\n#### 0.8.0\nreleased 2016-09-01\n\n* Improved titles and help texts in project setup UI\n* Fixed error locations not saved with absolute file paths in Compilation Database projects\n* Added missing source files extensions setting to the Edit Project dialog [#132](https://github.com/CoatiSoftware/Sourcetrail/issues/132)\n* Changed default text colors to black in project setup UI [#140](https://github.com/CoatiSoftware/Sourcetrail/issues/140)\n* Added plugin ports settings to Preferences [#145](https://github.com/CoatiSoftware/Sourcetrail/issues/145)\n* Improved project state handling on refreshing\n* Added Java sample project JavaParser: http://javaparser.org/\n* Fixed regex for system includes used wrongly in syntax highlighter\n* Added setting to disable file and console logging, default is off [#157](https://github.com/CoatiSoftware/Sourcetrail/issues/157)\n* Added migrations between different ApplicationSettings versions\n* Added auto detection for Java library to Preferences\n* Removed auto refresh option from Search view\n* Added progress dialogs for indexing and block UI [#143](https://github.com/CoatiSoftware/Sourcetrail/issues/143)\n* Hide name qualifiers for graph nodes in Java projects\n* Added handling when java library not found\n* Added plain text editing dialog to path list boxes\n* Use language dependent symbol name delimiter in UI\n* Added scroll speed setting to preferences [#112](https://github.com/CoatiSoftware/Sourcetrail/issues/112)\n* Added Java project setup UI\n* Record start and end locations of scopes in Java\n* Display unresolved types names in Java as 'unresolved-type'\n* Cache stats for overview to speed up display\n* Fixed graph nodes to restore their expand state when going back [#118](https://github.com/CoatiSoftware/Sourcetrail/issues/118)\n* Added shortcuts for navigating to next and previous reference in code view\n* Pressing Tab in search completes up to next ::, Delete erases to last :: [#133](https://github.com/CoatiSoftware/Sourcetrail/issues/133)\n* Bundle anonymous namespaces separately in graph overview [#126](https://github.com/CoatiSoftware/Sourcetrail/issues/126)\n* Added 'Show Data Folder' and 'Show Log Folder' items to Help menu\n* Added new status bar loader gif with higher resolution\n* Record type aliases in C++\n* Added Java indexer\n* Changed public icon in graph and added default icon\n* Scroll to file location when finding no symbol at specified location from plugin message\n* Added shortcut for Preferences on Windows/Linux\n* Leave code view at original line when expanding scopes\n* Pan graph view to center on name of active symbol after activation\n* Moved color scheme selection to Preferences\n* Moved Preferences menu item to Edit menu on Windows/Linux [#113](https://github.com/CoatiSoftware/Sourcetrail/issues/113)\n* Added setting for hiding non-fatal errors in unindexed files to preferences, turned on by default\n* Fixed file out-of-date asterisk disappearing when showing snippets after minimize state\n* Implemented Atom plugin: https://github.com/CoatiSoftware/atom-coati\n* Implemented CLion/IntelliJ plugin: https://github.com/CoatiSoftware/idea-coati\n* Implemented Eclipse plugin: https://github.com/CoatiSoftware/eCoati\n* Implemented emacs plugin: https://github.com/CoatiSoftware/emacs-coati\n* Improved code view rendering times\n* Don't show implicit nodes in search auto completion list\n\n#### 0.7.0.22\nreleased 2016-07-07\n\n* Fixed detected global header search paths lost correct order and caused problems with #include_next directives\n* Fixed MaxOSX build crashed on launch due to unknown command line option passed\n* Removed 'Save Project' and 'Save Project As' actions from menu\n* Fixed indexer getting stuck at 'building caches' when indexing is interrupted\n* Fixed database not properly closed when errors appeared during indexing\n* Fixed autocompletions popup flickering while typing\n* Added resize grip to bottom right corner of every dialog window\n* Fixed 'paths don't exist' dialog window getting too big with lots of paths shown\n* Added context menu with 'back' and 'forward' actions available in all views\n* Removed Clang compiler warnings from console output\n* Added handling of project specific VS macros to VS solution parser\n\n#### 0.7.0.0\nreleased 2016-06-15\n\n* Updated to clang 3.8\n* Fixed crash in search autocompletion retrieval due to edge case in sorting\n* Fixed size policies in code view to avoid global scrollbar\n* Added full text search via search field: ?<query> for case-insensitive search, ??<query> for case-sensitive search\n* Made initialization for full text search lazy: done on first full text search\n* Defined full text search color in all color schemes\n* Increased code view performance by caching file IDs and paths\n* Added multithreaded indexing. Number of threads can be set in the Preferences UI, default is 4\n* Reworked graph node bundling to only distinguish defined and undefined nodes in each bucket\n* Made graph node sorting alphabetical and put bundles at end\n* Changed code view snippet sorting to always show definition on top\n* Fixed local symbols were not available within lambdas\n* Added settings for font family, font size and tab with to Preferences UI\n* Fixed VS solution parser issue with internal macros\n* Removed header extensions, all included files within the project paths are now analyzed\n* Fixed crash in sqlite when symbol name has special characters\n* Improved code view performance by reducing amount of initially open code files\n* Improved graph view performance through faster data retrieval and smarter structures\n* Increased aggregation click speed with faster edge id retrieval\n* Fixed png color profiles to avoid console warning: \"libpng warning: iCCP: known incorrect sRGB profile\"\n* Fixed graph edge drawn wrong when leaving from child node of smaller node\n* Fixed Sublime Text Plugin issue with wrong encoding\n* Randomized source file order for multithreaded analysis to increase performance\n* Show name of removed symbol when going back after refreshing\n* Fixed macro definition not connected to file\n* Fixed macro use not found in #ifdef, #ifndef, defined() and some expand cases\n* Removed back and forward steps for some graph and code view manipulations\n* Fixed code view style broken on Mac due to change of working directory when analyzing compilation database\n* Added database optimization step after indexing to reduce database size by ~25%\n* Fixed artifacts after graph view change by clearing view\n* Fixed autocompletion list highlights at wrong location for long names\n* Allow files and directories to be excluded from analysis in advanced settings for project setup\n* Added Qt gif plugin to Mac Release so that loader gif in status bar is visible\n* Added link to download page to start screen to remind users of updating once in a while\n* Check if compilation database still exists before refreshing\n* Added separate step for defining project name, project location and compilation database to project setup\n* Explain that the project stays up-to-date with the compilation database on refresh in project setup UI\n* Disregard source extensions when loading from compilation database\n* Removed error logs in name resolver\n* Added plugin for VIM: https://github.com/CoatiSoftware/vim-coati\n\n#### 0.6.0.0\nreleased 2016-04-27\n\n* Added support for temporary test licenses and show error message when it expired\n* Increased search autocompletion performance to stay mostly below 100ms\n* Increased project load performance\n* Improved file clearing performance on project refresh\n* Increased graph creation performance for overview screen\n* Increased graph performance by reducing to fixed number of requests\n* Increased graph edge drawing performance\n* Improved error display performance by not expanding all of them at once\n* Added analysis for local symbols and allow selecting them in the code view\n* Added support for function pointers to analysis\n* Smoother graph panning and zooming on keyboard using update loop\n* Changed style of aggregation edge to cleaner look\n* Allow certain edge types to enter and leave at top and bottom of nodes as well e.g. inheritance\n* Changed namespace activation to show the namespace name in the search bar and the namespace definitions in the code view\n* Differentiate between explicit and implicit nodes and only show implicit nodes in the graph view when connected\n* Show deleted projects on the start screen and show messagebox to delete them\n* Show analysis duration in hh:mm:ss\n* Added bug tracker to the help menu\n* Added home button next to search field for showing the project overview\n* Added shortcut and menu item to show project overview\n* Allow support for environment variables in project setup with syntax ${VARIABLE_NAME}\n* Added welcome message to Coati trial\n* Show quit button on license enter screen when no valid license was entered yet\n* Allow color schemes to define text colors for code view highlights\n* Defined new highlight colors for code view in all color schemes\n* Changed style of out-of-date files to be followed by *\n* Fixed Path boxes not sized correctly when switching back and forth in the project wizard\n* Check analyzed paths for existence in project wizard\n* Inform the user about project changes and ask before reparsing the project\n* Removed \"simple setup\" step in project wizard and added \"lazy include search\"-checkbox\n* Edit the project settings by clicking the project name in the overview stats\n* Updated to Qt 5.6\n* Improved high DPI support for windows\n* Added Windows system dlls to installer on Windows so users don't not need to install the redistributable package\n* Added vs-clang compatibility mode as compile flags when creating project from Visual Studio solution\n* Added auto detection for system header paths to project wizard and preferences when using gcc, clang or vs compilers\n\n#### 0.5.1.21\nreleased 2016-03-16\n\n* Fixed file logger using wrong directory for first log file\n* Fixed crash when accessing files without read permission\n* Center windows on top of main window\n* Added font size limits\n* Prevent network message handling without valid license\n* Fixed type references in headers saved multiple times\n* Improved context detection for template parameters\n* Fixed Visual Studio plugin project loading\n* Added delay for changing fontsize via mouse wheel\n* Disabled config file warnings\n* Fixed interrupting of analysis to show message in status bar\n* Fixed children on namespace activation were bundled\n* Fixed expanding file with errors showed all locations in red\n* Show loader animation when loading project\n* Removed high traffic log messages\n* Fixed crash when opening newer project with older version of Coati\n* Fixed project paths are now saved relative if defined relative\n* Fixed project setup window sizes to adapt to content size\n* Fixed linux package creating ~/.config if not there\n* Show fatal errors in UI that stopped analysis\n* Added compiler flags UI to advanced settings in project setup summary\n* Added file extension UI to advanced settings in project setup summary\n* Added graph zooming with Shift + mouse wheel or Shift + WS\n* Added graph panning with WASD\n* Improved project load and code view performance\n* Improved analysis performance for large projects (10x as fast for 1.000.000 LoC)\n* Added project setup for Compilation Databases\n\n#### 0.5.0.4\nreleased 2016-02-25\n\n* Fixed preferences not saved\n* Added link to documentation to Help menu\n* Improved painting of icons in graph to be smoother\n* Improved logging to alternate between 2 files of 1000 lines to decrease logfile sizes\n* Improved analysis performance to take only 66% of the time\n* Save user data in ~/Library/Application Support/Coati on Mac\n* Improved style of ui windows\n* Added Visual Studio solution parsing via project wizard or VS plugin\n* Added project setup wizard for step-by-step project setup\n* Added overview and error keywords to search view\n* Show overview on project open with node bundles per type\n* Added application move protection to reenter license key\n* Improved log file names to be sorted chronologically\n* Improved graph view node bundling to bundle more\n* Display scope name at bottom of code snippet\n* Added .coatiproject file associations with icon for Mac and Windows\n* Return to last scroll position when going back in code view\n* Improved back & forward in code view\n* Update error count while analysis\n* Improved code view annotation painting performance\n* Added web documentation\n* Added trial target without analysis\n* Added license key window and license checker\n* Refresh project editing settings\n* Added C and C++ standard setting to project\n* Fixed cursor changing for resize and text interactions\n* Added commandline option for project file\n* Improved performance of token name saving\n* Fixed number positions in graph\n* Added shortcuts for font size resetting to View menu\n* Added C support\n* Added option to hide widget window title bars to View menu\n\n#### 0.4.0\nreleased 2016-01-07\n\n* navigate back via backspace key\n* navigate back&forward via mouse buttons\n* renamed undo&redo to back&forward\n* Fixed tooltip colors in dark color scheme\n* Fixed style of function or method nodes with children\n* Improved lambda handling in analysis\n* Added help texts to project setup and preferences window\n* Removed 'close window' action from menu\n* Fixed constructors and destructors using return type 'void' without source location\n* Parse errors will be displayed as they appear during analysis\n* Redesigned the about window\n* Installing prerequisites in Windows Installer\n* Added installer for Windows\n* Introduced file endings .coatiproject and .coatidb for Coati's project files\n* Removed Coati directory from Linux package\n* Fixed graph font size was too small for Windows and Linux\n* Show function and method signature in tooltip when hovering the graph node\n* Added analysis for template parameter packs\n* Fixed syntax highlighting to correctly identify strings, comments and block comments\n* Fixed source locations of many declarations\n* Coati shows a template's general definition when an implicit specialization is activated\n* Added new color scheme called \"bad_rainbow\"\n* Extended color schemes to allow more extensive use in the graph\n* Coati now handles anonymous symbols when parsing files\n* Improved handling of template arguments in analysis\n* Coati can now handle inclass initialization of members\n* Network ports for IDE communication can be defined in the ApplicationSettings.xml\n\n#### 0.3.0\nreleased 2015-12-14\n\n* Saving all template arguments type uses\n* Added recent projects menu option\n* Focus all overlapping source locations in the code view\n* Improved code view auto scroll to center the first active line in the middle\n* Fixed search query disappeared when not token was found for it\n* Fixed cursor was jumping at end of query when editing a search query\n* Reworked code view highlighting\n* Save comment locations and display them when right next to active symbol\n* Fixed old data was still in new project window when creating another project\n* Save macro scopes\n* Save errors to storage and reactivate them via button in the status bar\n* Fixed horizontal scroll in code view not activated while scrolling vertically\n* Improved source locations of template scopes\n* Save Coati version to sqlite and reparse project whenever the version changes\n* Increased autocompletion performance by caching and limiting results to 100\n* Added plugin for Sublime Text (2 & 3)\n* Added plugin for Visual Studio (2012, 2013, 2015)\n* Added communication interface from and to Coati via TCP sockets\n* Added Tutorial project\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 31.2333984375,
          "content": "cmake_minimum_required(VERSION 3.8)\n\nif (WIN32 AND (CMAKE_GENERATOR STREQUAL \"Ninja\"))\n\tset(CMAKE_CONFIGURATION_TYPES ${CMAKE_BUILD_TYPE})\nendif()\nset(BUILD_CXX_LANGUAGE_PACKAGE OFF CACHE BOOL \"Add C and C++ support to the Sourcetrail indexer.\")\nset(BUILD_JAVA_LANGUAGE_PACKAGE OFF CACHE BOOL \"Add Java support to the Sourcetrail indexer.\")\nset(BUILD_PYTHON_LANGUAGE_PACKAGE OFF CACHE BOOL \"Add Python support to the Sourcetrail indexer.\")\nset(DOCKER_BUILD OFF CACHE BOOL \"Build runs in Docker\")\nset(TREAT_WARNINGS_AS_ERRORS ON CACHE BOOL \"Treat compiler warnings as errors\")\n\n#set (CMAKE_VERBOSE_MAKEFILE ON)\n\ninclude(cmake/add_files.cmake)\ninclude(cmake/create_source_groups.cmake)\ninclude(cmake/version.cmake)\ninclude(cmake/version_setup.cmake)\ninclude(cmake/licenses.cmake)\n\n# prohibit in-source-builds\nif (${CMAKE_BINARY_DIR} STREQUAL ${CMAKE_SOURCE_DIR})\n\tmessage(STATUS \"In-source-builds are not allowed\")\n\tmessage(STATUS \"Clean your source directory (e.g. delete the CMakeCache.txt file)\")\n\tmessage(FATAL_ERROR \"Please create a separate build directory and call CMake again\")\nendif()\n\nif(NOT DEFINED CMAKE_CXX_COMPILER_LAUNCHER)\n\t# speed up recompiling on unix with ccache\n\tfind_program(CCACHE_PROGRAM ccache)\n\tif (CCACHE_PROGRAM)\n\t\tmessage(STATUS \"ccache found\")\n\t\t# Support Unix Makefiles and Ninja\n\t\tset(CMAKE_CXX_COMPILER_LAUNCHER \"${CCACHE_PROGRAM}\" CACHE STRING \"Compiler launcher for CXX\")\n\tendif()\nendif()\n\n# Variables --------------------------------------------------------------------\n\nset(PROJECT_NAME Sourcetrail)\n\nset(APP_PROJECT_NAME \"${PROJECT_NAME}\")\nset(APP_INDEXER_NAME \"${PROJECT_NAME}_indexer\")\nset(LIB_UTILITY_PROJECT_NAME \"${PROJECT_NAME}_lib_utility\")\nset(LIB_GUI_PROJECT_NAME \"${PROJECT_NAME}_lib_gui\")\nset(LIB_CXX_PROJECT_NAME \"${PROJECT_NAME}_lib_cxx\")\nset(LIB_JAVA_PROJECT_NAME \"${PROJECT_NAME}_lib_java\")\nset(LIB_PYTHON_PROJECT_NAME \"${PROJECT_NAME}_lib_python\")\nset(LIB_PROJECT_NAME \"${PROJECT_NAME}_lib\")\nset(TEST_PROJECT_NAME \"${PROJECT_NAME}_test\")\n\nif (WIN32)\n\tset(PLATFORM_INCLUDE \"includesWindows.h\")\nelseif (APPLE)\n\tset(PLATFORM_INCLUDE \"includesMac.h\")\nelse ()\n\tset(PLATFORM_INCLUDE \"includesLinux.h\")\nendif ()\n\nset (BASH \"\")\nif (WIN32)\n\texecute_process(COMMAND CMD /c where bash OUTPUT_VARIABLE BASH)\n\tstring(REGEX REPLACE \"\\n$\" \"\" BASH \"${BASH}\")\nendif ()\n\nmessage (\"bash: '${BASH}'\")\n\n\n# Project ----------------------------------------------------------------------\n\nproject(${PROJECT_NAME})\n\n# set Standard build type to Release\nset(CMAKE_BUILD_TYPE_INIT \"Release\")\n\n#RPATH\nif(UNIX AND NOT APPLE)\n\tset(CMAKE_SKIP_BUILD_RPATH FALSE)\n\tset(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\n\tset(CMAKE_INSTALL_RPATH \"$ORIGIN/lib/:$$ORIGIN/lib/\")\nendif()\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_C_STANDARD 11)\n\n\n# Settings ---------------------------------------------------------------------\n\nif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-unknown-warning-option -fcolor-diagnostics -fvisibility-inlines-hidden\")\nelseif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"MSVC\")\n\tADD_COMPILE_OPTIONS(/MP)\nendif()\n\n# FIXME: necessary to fix build in Docker\nif (DOCKER_BUILD)\n\tset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -static-libstdc++\")\nendif()\n\nif (TREAT_WARNINGS_AS_ERRORS)\n\tif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"MSVC\")\n\t\t# Visual Studio 2017 version 15.9 <= Version <= Visual Studio 2019 Version 16.4\n\t\tif ((MSVC_VERSION GREATER_EQUAL 1916) AND (MSVC_VERSION LESS_EQUAL 1924))\n\t\t\t# Warning 4003: not enough actual parameters for macro 'identifier'\n\t\t\t# Warning 4250: 'class1' inherits 'class2::member' via dominance\n\t\t\tset(WARNINGS_LIST \"/wd4003 /wd4250\")\n\t\t\tset(CMAKE_CXX_WARNINGS_FLAGS \"/experimental:external /external:anglebrackets /external:W0 /WX\")\n\t\t\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CMAKE_CXX_WARNINGS_FLAGS} ${WARNINGS_LIST}\")\n\n\t\t\t# Treat linker warnings as errors\n\t\t\tset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /WX\")\n\t\t\tset(CMAKE_STATIC_LINKER_FLAGS \"${CMAKE_STATIC_LINKER_FLAGS} /WX\")\n\t\t\tset(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /WX\")\n\t\t\tset(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} /WX\")\n\n\t\t\tmessage(STATUS \"'Treat warnings as errors' policy is enabled\")\n\t\telse()\n\t\t\tmessage(STATUS \"'Treat warnings as errors' policy is disabled\")\n\t\tendif()\n\telse()\n\t\tmessage(STATUS \"'Treat warnings as errors' policy is disabled\")\n\tendif()\nendif()\n\n# For debugging the release build on linux\n#if (UNIX AND \"${CMAKE_BUILD_TYPE}\" STREQUAL \"Release\")\n\t#add_definitions(-fno-omit-frame-pointer)\n#endif ()\n\n\n# Clang ------------------------------------------------------------------------\n\nif (BUILD_CXX_LANGUAGE_PACKAGE)\n\n\tfind_package(Clang REQUIRED)\n\n\tif (LLVM_FOUND)\n\t\tmessage(STATUS \"Found LLVM ${LLVM_VERSION}\")\n\tendif()\n\n\tif (UNIX)\n\t\tset(LLVM_CONFIGURATION_TYPES \".\")\n\tendif()\n\n\tset (CLANG_COMPILER_HEADER_SEARCH_PATH \"\")\n\tforeach(LLVM_CONFIGURATION_TYPE ${LLVM_CONFIGURATION_TYPES})\n\t\tif (CLANG_COMPILER_HEADER_SEARCH_PATH STREQUAL \"\")\n\t\t\tset (_CLANG_HEADERS_SEARCH_LIST\n\t\t\t\t\"${LLVM_BINARY_DIR}/${LLVM_CONFIGURATION_TYPE}/lib/clang/${LLVM_VERSION}/include\"\n\t\t\t\t\"${LLVM_BINARY_DIR}/${LLVM_CONFIGURATION_TYPE}/lib64/clang/${LLVM_VERSION}/include\"\n\t\t\t)\n\t\t\tforeach (_CLANG_HEADER_PATH ${_CLANG_HEADERS_SEARCH_LIST})\n\t\t\t\tif (EXISTS ${_CLANG_HEADER_PATH})\n\t\t\t\t\tset (CLANG_COMPILER_HEADER_SEARCH_PATH ${_CLANG_HEADER_PATH})\n\t\t\t\t\tbreak ()\n\t\t\t\tendif ()\n\t\t\tendforeach ()\n\n\t\t\tmessage (STATUS \"Trying to find Clang compiler headers in '${LLVM_CONFIGURATION_TYPE}' build config in directory '${CLANG_COMPILER_HEADER_SEARCH_PATH}'.\")\n\t\t\tif (EXISTS ${CLANG_COMPILER_HEADER_SEARCH_PATH})\n\t\t\t\tmessage (STATUS \"Found headers for '${LLVM_CONFIGURATION_TYPE}' build config.\")\n\t\t\t\tfile(GLOB_RECURSE CLANG_COMPILER_HEADER_PATHS RELATIVE \"${CLANG_COMPILER_HEADER_SEARCH_PATH}\" \"${CLANG_COMPILER_HEADER_SEARCH_PATH}/*\")\n\t\t\t\tforeach(CLANG_COMPILER_HEADER_PATH ${CLANG_COMPILER_HEADER_PATHS})\n\t\t\t\t\tconfigure_file(\"${CLANG_COMPILER_HEADER_SEARCH_PATH}/${CLANG_COMPILER_HEADER_PATH}\" \"${CMAKE_SOURCE_DIR}/bin/app/data/cxx/include/${CLANG_COMPILER_HEADER_PATH}\" COPYONLY)\n\t\t\t\tendforeach()\n\t\t\telse ()\n\t\t\t\tset (CLANG_COMPILER_HEADER_SEARCH_PATH \"\")\n\t\t\tendif ()\n\t\tendif ()\n\tendforeach()\n\n\tif (CLANG_COMPILER_HEADER_SEARCH_PATH STREQUAL \"\")\n\t\tmessage(FATAL_ERROR \"Unable to copy Clang compiler headers from clang build dir.\")\n\tendif()\n\nendif()\n\n\n# Boost ------------------------------------------------------------------------\n\nset(Boost_USE_MULTITHREAD ON)\nset(Boost_USE_STATIC_LIBS ON CACHE BOOL \"Set to ON to force the use of the static libraries.\")\nset(Boost_USE_STATIC_RUNTIME OFF)\n\nfind_package(Boost 1.67 COMPONENTS system program_options filesystem date_time REQUIRED)\n\n\n# Qt ---------------------------------------------------------------------------\n\nset (QT_MIN_VERSION \"5.12.0\")\nset (QT_MIN_VERSION_HEX 0x051200)\nfind_package(Qt5 ${QT_MIN_VERSION} COMPONENTS Widgets PrintSupport Network Svg REQUIRED)\n\nif (WIN32)\n\tfind_package(Qt5 ${QT_MIN_VERSION} COMPONENTS WinExtras REQUIRED)\nendif()\n\nif(Qt5Widgets_FOUND)\n\tmessage(STATUS \"Found Qt ${Qt5Widgets_VERSION_STRING}\")\n\n\t# FIX: Qt was built with -reduce-relocations\n\tif (Qt5_POSITION_INDEPENDENT_CODE)\n\t\tSET(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\tendif()\n\n\t# The following define makes your compiler emit warnings if you use\n\t# any feature of Qt which as been marked as deprecated (the exact warnings\n\t# depend on your compiler). Please consult the documentation of the\n\t# deprecated API in order to know how to port your code away from it.\n\tadd_definitions (-DQT_DEPRECATED_WARNINGS)\n\n\t# You can also make your code fail to compile if you use deprecated APIs.\n\t# In order to do so, uncomment the following line.\n\t# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\t#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=${QT_MIN_VERSION_HEX}    # disables all the APIs deprecated at or before the specified Qt version\n\tadd_definitions (-DQT_DISABLE_DEPRECATED_BEFORE=${QT_MIN_VERSION_HEX})\nendif()\n\n\n# Setup ---------------------------------------------------------------------------\n\nif (WIN32)\n\tget_filename_component(QT_BINARY_DIR \"${QT_MOC_EXECUTABLE}\" PATH)\n\tset(QT_PLUGINS_DIR \"${QT_BINARY_DIR}/../plugins\")\n\n\tfunction(COPY_QT_BINARIES IS_DEBUG IS_APP)\n\t\tset(SUFFIX \"\")\n\t\tif (IS_DEBUG)\n\t\t\tset(SUFFIX \"d\")\n\t\tendif()\n\n\t\tset(CONFIGURATION \"Release\")\n\t\tif (IS_DEBUG)\n\t\t\tset(CONFIGURATION \"Debug\")\n\t\tendif()\n\n\t\tif(CMAKE_CL_64)\n\t\t\tset(BITS \"64\")\n\t\telse()\n\t\t\tset(BITS \"32\")\n\t\tendif()\n\n\t\tset(TARGET \"test\")\n\t\tif (IS_APP)\n\t\t\tset(TARGET \"app\")\n\n\t\t\tfile(GLOB MY_PUBLIC_HEADERS\n\t\t\t\t\"${CMAKE_SOURCE_DIR}/setup/dynamic_libraries/win${BITS}/app/${CONFIGURATION}/*\"\n\t\t\t)\n\t\t\tfile(COPY ${MY_PUBLIC_HEADERS} DESTINATION \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/\")\n\n\t\tendif()\n\n\t\tconfigure_file(\"${QT_BINARY_DIR}/Qt5Core${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/Qt5Core${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_BINARY_DIR}/Qt5Gui${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/Qt5Gui${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_BINARY_DIR}/Qt5Network${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/Qt5Network${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_BINARY_DIR}/Qt5Svg${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/Qt5Svg${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_BINARY_DIR}/Qt5Widgets${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/Qt5Widgets${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_BINARY_DIR}/Qt5WinExtras${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/Qt5WinExtras${SUFFIX}.dll\" COPYONLY)\n\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/platforms/qwindows${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/platforms/qwindows${SUFFIX}.dll\" COPYONLY)\n\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/styles/qwindowsvistastyle${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/styles/qwindowsvistastyle${SUFFIX}.dll\" COPYONLY)\n\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qgif${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qgif${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qicns${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qicns${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qico${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qico${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qjpeg${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qjpeg${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qsvg${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qsvg${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qtga${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qtga${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qtiff${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qtiff${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qwbmp${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qwbmp${SUFFIX}.dll\" COPYONLY)\n\t\tconfigure_file(\"${QT_PLUGINS_DIR}/imageformats/qwebp${SUFFIX}.dll\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/${TARGET}/imageformats/qwebp${SUFFIX}.dll\" COPYONLY)\n\tendfunction(COPY_QT_BINARIES)\n\n\tCOPY_QT_BINARIES(True True)\n\tCOPY_QT_BINARIES(True False)\n\tCOPY_QT_BINARIES(False True)\n\tCOPY_QT_BINARIES(False False)\n\n\tconfigure_file(\"${CMAKE_SOURCE_DIR}/setup/icon/windows/sourcetrail.ico\" \"${CMAKE_BINARY_DIR}/${CONFIGURATION}/sourcetrail.ico\" COPYONLY)\n\nendif()\n\n\nadd_subdirectory(src/app)\nadd_subdirectory(src/external)\nadd_subdirectory(src/indexer)\nadd_subdirectory(src/lib)\nadd_subdirectory(src/lib_cxx)\nadd_subdirectory(src/lib_gui)\nadd_subdirectory(src/lib_java)\nadd_subdirectory(src/lib_python)\nadd_subdirectory(src/lib_utility)\nadd_subdirectory(src/test)\n\n\n# Lib Utility ------------------------------------------------------------------\n\nadd_library(${LIB_UTILITY_PROJECT_NAME} ${LIB_UTILITY_FILES})\n\ncreate_source_groups(${LIB_UTILITY_FILES})\n\nset_property(\n\tTARGET ${LIB_UTILITY_PROJECT_NAME}\n\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n)\n\ntarget_include_directories(${LIB_UTILITY_PROJECT_NAME} SYSTEM\n\tPUBLIC ${Boost_INCLUDE_DIR}\n)\n\ntarget_link_libraries(${LIB_UTILITY_PROJECT_NAME} ${Boost_LIBRARIES} Qt5::Widgets Qt5::Network)\n\nif (UNIX AND NOT APPLE)\n\tfind_package(Threads REQUIRED)\n\ttarget_link_libraries(${LIB_UTILITY_PROJECT_NAME} ${CMAKE_DL_LIBS} rt ${CMAKE_THREAD_LIBS_INIT})\nendif()\n\nif (WIN32)\n\ttarget_link_libraries(${LIB_UTILITY_PROJECT_NAME} Qt5::WinExtras)\nendif()\n\n\n# Lib --------------------------------------------------------------------------\n\nset_source_files_properties(${EXTERNAL_FILES} PROPERTIES COMPILE_FLAGS \"-w\")\nset_source_files_properties(${EXTERNAL_C_FILES} PROPERTIES COMPILE_FLAGS \"-std=gnu89 -w\")\n\nadd_library(${LIB_PROJECT_NAME} ${LIB_FILES} ${EXTERNAL_FILES} ${EXTERNAL_C_FILES})\n\ncreate_source_groups(${LIB_FILES})\ncreate_source_groups(${EXTERNAL_FILES})\ncreate_source_groups(${EXTERNAL_C_FILES})\n\nset_property(\n\tTARGET ${LIB_PROJECT_NAME}\n\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\"${LIB_GUI_INCLUDE_PATHS}\"\n\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\"${LIB_CXX_INCLUDE_PATHS}\"\n\t\t\"${LIB_JAVA_INCLUDE_PATHS}\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n)\n\ntarget_include_directories(${LIB_PROJECT_NAME} SYSTEM\n\tPUBLIC ${Boost_INCLUDE_DIR}\n\t\"${EXTERNAL_INCLUDE_PATHS}\"\n\t\"${EXTERNAL_C_INCLUDE_PATHS}\"\n)\n\ntarget_link_libraries(${LIB_PROJECT_NAME} ${LIB_UTILITY_PROJECT_NAME} ${LIB_GUI_PROJECT_NAME} ${Boost_LIBRARIES})\n\n#configure language package defines\nconfigure_file(\n\t\"${CMAKE_SOURCE_DIR}/cmake/language_packages.h.in\"\n\t\"${CMAKE_BINARY_DIR}/src/lib/language_packages.h\"\n)\n\n\n# Lib Cxx ----------------------------------------------------------------------\n\nif (BUILD_CXX_LANGUAGE_PACKAGE)\n\n\tset(CAPTURED_CMAKE_CXX_STANDARD ${CMAKE_CXX_STANDARD})\n\tset(CMAKE_CXX_STANDARD 14)\n\t\n\tadd_library(${LIB_CXX_PROJECT_NAME} ${LIB_CXX_FILES})\n\n\tcreate_source_groups(${LIB_CXX_FILES})\n\n\tset_property(\n\t\tTARGET ${LIB_CXX_PROJECT_NAME}\n\t\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\t\"${LIB_CXX_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t)\n\n\ttarget_include_directories(${LIB_CXX_PROJECT_NAME} SYSTEM\n\t\tPUBLIC ${LLVM_INCLUDE_DIRS}\n\t\t${CLANG_INCLUDE_DIRS}\n\t\t${Boost_INCLUDE_DIRS}\n\t\t\"${EXTERNAL_INCLUDE_PATHS}\"\n\t\t\"${EXTERNAL_C_INCLUDE_PATHS}\"\n\t)\n\n\tlink_directories(${LLVM_LIBRARY_DIRS} ${CLANG_LIBRARY_DIRS} ${Boost_LIBRARY_DIRS})\n\n    if(LLVM_LINK_LLVM_DYLIB)\n        set(REQ_LLVM_LIBS LLVM)\n    else()\n        llvm_map_components_to_libnames(REQ_LLVM_LIBS\n            support core libdriver passes option\n        )\n        foreach(LLVM_TARGET ${LLVM_TARGETS_TO_BUILD})\n            get_property(lib_deps GLOBAL PROPERTY \"LLVMBUILD_LIB_DEPS_LLVM${LLVM_TARGET}CodeGen\")\n            list(APPEND REQ_LLVM_LIBS \"LLVM${LLVM_TARGET}CodeGen\")\n            list(APPEND REQ_LLVM_LIBS \"${lib_deps}\")\n            get_property(lib_deps GLOBAL PROPERTY \"LLVMBUILD_LIB_DEPS_LLVM${LLVM_TARGET}AsmParser\")\n            if (NOT \"${lib_deps}\" STREQUAL \"\")\n                list(APPEND REQ_LLVM_LIBS \"LLVM${LLVM_TARGET}AsmParser\")\n                list(APPEND REQ_LLVM_LIBS \"${lib_deps}\")\n            endif()\n        endforeach()\n    endif()\n\n    if(LLVM_LINK_LLVM_DYLIB)  # Should be CLANG_LINK_CLANG_DYLIB in future LLVM release\n        set(CLANG_LIBRARIES clang-cpp)\n    else()\n        set(CLANG_LIBRARIES\n            clangASTMatchers\n            clangFrontend\n            clangSerialization\n            clangDriver\n            clangTooling\n            clangParse\n            clangSema\n            clangStaticAnalyzerFrontend\n            clangStaticAnalyzerCheckers\n            clangStaticAnalyzerCore\n            clangAnalysis\n            clangRewriteFrontend\n            clangEdit\n            clangAST\n            clangLex\n            clangBasic\n        )\n    endif()\n\n\ttarget_link_libraries(${LIB_CXX_PROJECT_NAME} ${LIB_UTILITY_PROJECT_NAME} ${CLANG_LIBRARIES} ${REQ_LLVM_LIBS})\n\n\tif (WIN32)\n\t\ttarget_compile_definitions(${LIB_CXX_PROJECT_NAME} PRIVATE _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS) # Due to Clang\n\t\ttarget_link_libraries(${LIB_CXX_PROJECT_NAME} version)\n\tendif()\n\n\tset(CMAKE_CXX_STANDARD ${CAPTURED_CMAKE_CXX_STANDARD})\nelse()\n\n\tmessage(STATUS \"Building the Cxx indexer will be skipped. You can enable building this target by setting 'BUILD_CXX_LANGUAGE_PACKAGE' to 'ON'.\")\n\nendif()\n\n\n# Lib Java ---------------------------------------------------------------------\n\nif (BUILD_JAVA_LANGUAGE_PACKAGE)\n\n\tfind_package(JNI)\n\n\tadd_library(${LIB_JAVA_PROJECT_NAME} ${LIB_JAVA_FILES})\n\n\tcreate_source_groups(${LIB_JAVA_FILES})\n\n\tset_property(\n\t\tTARGET ${LIB_JAVA_PROJECT_NAME}\n\t\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\t\"${LIB_JAVA_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_GUI_INCLUDE_PATHS}\"\n\t\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t)\n\n\ttarget_include_directories(${LIB_JAVA_PROJECT_NAME} SYSTEM\n\t\tPUBLIC ${JNI_INCLUDE_DIRS}\n\t\t${Boost_INCLUDE_DIRS}\n\t)\n\n\tlink_directories(${Boost_LIBRARY_DIRS})\n\n\ttarget_link_libraries(${LIB_JAVA_PROJECT_NAME} ${LIB_UTILITY_PROJECT_NAME} ${LIB_PROJECT_NAME})\n\n\tadd_custom_command(\n\t\tTARGET ${LIB_JAVA_PROJECT_NAME}\n\t\tPRE_BUILD\n\t\tCOMMAND ${BASH} ${PROJECT_SOURCE_DIR}/script/update_java_indexer.sh\n\t\tCOMMENT \"updating java indexer jars\"\n\t)\n\nelse()\n\n\tmessage(STATUS \"Building the Java indexer will be skipped. You can enable building this target by setting 'BUILD_JAVA_LANGUAGE_PACKAGE' to 'ON'.\")\n\nendif()\n\n\n# Lib Python ---------------------------------------------------------------------\n\nif (BUILD_PYTHON_LANGUAGE_PACKAGE)\n\n\tadd_library(${LIB_PYTHON_PROJECT_NAME} ${LIB_PYTHON_FILES})\n\n\tcreate_source_groups(${LIB_PYTHON_FILES})\n\n\tset_property(\n\t\tTARGET ${LIB_PYTHON_PROJECT_NAME}\n\t\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\t\"${LIB_PYTHON_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t)\n\n\t#link_directories(${Boost_LIBRARY_DIRS})\n\n\ttarget_link_libraries(${LIB_PYTHON_PROJECT_NAME} ${LIB_UTILITY_PROJECT_NAME} ${LIB_PROJECT_NAME})\n\n\tadd_custom_command(\n\t\tTARGET ${LIB_PYTHON_PROJECT_NAME}\n\t\tPRE_BUILD\n\t\tCOMMAND ${BASH} ${PROJECT_SOURCE_DIR}/script/download_python_indexer.sh\n\t\tCOMMENT \"download python indexer\"\n\t)\n\nelse()\n\n\tmessage(STATUS \"Building the Python indexer will be skipped. You can enable building this target by setting 'BUILD_PYTHON_LANGUAGE_PACKAGE' to 'ON'.\")\n\nendif()\n\n\n# Lib Gui ----------------------------------------------------------------------\n\n# Find includes in corresponding build directories\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n# Instruct CMake to run moc automatically when needed.\nset(CMAKE_AUTOMOC ON)\n\n# target for running versionnumber script\n# workaround for running customcommand (ninja dependency cycle)\nadd_custom_target(\n\tversionnumber ALL\n)\n\nadd_library(${LIB_GUI_PROJECT_NAME} ${LIB_GUI_FILES} ${CMAKE_BINARY_DIR}/src/lib_gui/productVersion.h)\n\ntarget_link_libraries(${LIB_GUI_PROJECT_NAME} ${LIB_UTILITY_PROJECT_NAME} ${LIB_PROJECT_NAME} Qt5::Widgets Qt5::Network Qt5::Svg)\n\nif (WIN32)\n\ttarget_link_libraries(${LIB_GUI_PROJECT_NAME} Qt5::WinExtras)\nendif()\n\n# command for versioning script\nadd_custom_command(\n\tTARGET versionnumber\n\tPRE_BUILD\n\tCOMMAND ${CMAKE_COMMAND} -DBINARY_DIR=${CMAKE_BINARY_DIR} -P ${CMAKE_SOURCE_DIR}/cmake/version.cmake\n\tBYPRODUCTS ${CMAKE_BINARY_DIR}/src/lib_gui/productVersion.h\n\tDEPENDS ${LIB_GUI_PROJECT_NAME}\n\tWORKING_DIRECTORY ${CMAKE_SOURCE_DIR}\n\tCOMMENT \"check/update version number\"\n)\nadd_dependencies(${LIB_GUI_PROJECT_NAME} versionnumber)\n\ncreate_source_groups(${LIB_GUI_FILES})\n\nset_property(\n\tTARGET ${LIB_GUI_PROJECT_NAME}\n\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\"${LIB_GUI_INCLUDE_PATHS}\"\n\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib_gui\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_INCLUDE_PATHS}>\n)\n\n# include external header without warnings\ntarget_include_directories(${LIB_GUI_PROJECT_NAME} SYSTEM\n\tPUBLIC ${Boost_INCLUDE_DIRS}\n\t\"${EXTERNAL_INCLUDE_PATHS}\"\n\t\"${EXTERNAL_C_INCLUDE_PATHS}\"\n)\n\n# configure platform specific include file\nconfigure_file(\n\t\"${PROJECT_SOURCE_DIR}/src/lib_gui/platform_includes/includes.h.in\"\n\t\"${PROJECT_BINARY_DIR}/src/lib_gui/includes.h\"\n)\n\n#configure the versioning file\nconfigure_file(\n\t${CMAKE_SOURCE_DIR}/cmake/version.txt.in\n\t${CMAKE_BINARY_DIR}/version.txt\n)\n\nconfigure_file(\n\t${CMAKE_SOURCE_DIR}/cmake/productVersion.h.in\n\t${CMAKE_BINARY_DIR}/src/lib_gui/productVersion.h\n)\n\nset_property(SOURCE ${CMAKE_BINARY_DIR}/src/lib_gui/productVersion.h PROPERTY SKIP_AUTOMOC ON)\n\nset(CMAKE_AUTOMOC OFF)\n\n\n# Indexer App ------------------------------------------------------------------\n\nif (UNIX)\n\tset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/app/\")\nelse ()\n\tforeach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )\n\t\tstring( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )\n\t\tset( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} \"${CMAKE_BINARY_DIR}/${OUTPUTCONFIG}/app/\")\n\tendforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )\nendif ()\n\n# Find includes in corresponding build directories\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\nadd_executable(${APP_INDEXER_NAME} ${INDEXER_FILES})\n\n\nset_target_properties(${APP_INDEXER_NAME} PROPERTIES OUTPUT_NAME sourcetrail_indexer)\n\nif (WIN32)\n\t# hide the console when running a release build.\n\tset_target_properties(${APP_INDEXER_NAME} PROPERTIES LINK_FLAGS_DEBUG \"/SUBSYSTEM:CONSOLE /DEBUG:FASTLINK\")\n\tset_target_properties(${APP_INDEXER_NAME} PROPERTIES COMPILE_DEFINITIONS_DEBUG \"_CONSOLE\")\n\tset_target_properties(${APP_INDEXER_NAME} PROPERTIES LINK_FLAGS_RELWITHDEBINFO \"/SUBSYSTEM:CONSOLE\")\n\tset_target_properties(${APP_INDEXER_NAME} PROPERTIES COMPILE_DEFINITIONS_RELWITHDEBINFO \"_CONSOLE\")\n\tset_target_properties(${APP_INDEXER_NAME} PROPERTIES LINK_FLAGS_RELEASE \"/ENTRY:\\\"mainCRTStartup\\\" /SUBSYSTEM:WINDOWS /DEBUG\")\n\tset_target_properties(${APP_INDEXER_NAME} PROPERTIES LINK_FLAGS_MINSIZEREL \"/SUBSYSTEM:WINDOWS\")\n\n\t# generate pdb for release build\n\tset (CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /Zi\")\nendif ()\n\ncreate_source_groups(${INDEXER_FILES})\n\ntarget_link_libraries(\n\t${APP_INDEXER_NAME}\n\t${LIB_GUI_PROJECT_NAME}\n\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_PROJECT_NAME}>\n\t${LIB_PROJECT_NAME}\n)\n\nif (APPLE)\n\tfind_library(CORE_FOUNDATION CoreFoundation)\n\ttarget_link_libraries(${APP_INDEXER_NAME} ${CORE_FOUNDATION})\nendif ()\n\nset_property(\n\tTARGET ${APP_INDEXER_NAME}\n\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\"${APP_INCLUDE_PATHS}\"\n\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\"${LIB_GUI_INCLUDE_PATHS}\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib_gui\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_INCLUDE_PATHS}>\n)\n\n\n# App --------------------------------------------------------------------------\n\nif (UNIX)\n\tset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/app/\")\nelse ()\n\tforeach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )\n\t\tstring( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )\n\t\tset( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} \"${CMAKE_BINARY_DIR}/${OUTPUTCONFIG}/app/\")\n\tendforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )\nendif ()\n\n# Find includes in corresponding build directories\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\nif (WIN32)\n\tfile(WRITE ${CMAKE_BINARY_DIR}/Sourcetrail.rc\n\t\t\"// Icon with lowest ID value placed first to ensure application icon\\n\"\n\t\t\"// remains consistent on all systems.\\n\"\n\t\t\"IDI_ICON1               ICON                    \\\"${CMAKE_BINARY_DIR}/Sourcetrail.ico\\\"\\n\"\n\t)\n\n\tadd_executable(${APP_PROJECT_NAME} ${APP_FILES} ${CMAKE_BINARY_DIR}/Sourcetrail.rc)\n\n\t# also show the console when running a release build.\n\tset_target_properties(${APP_PROJECT_NAME} PROPERTIES LINK_FLAGS_DEBUG \"/SUBSYSTEM:CONSOLE /DEBUG:FASTLINK\")\n\tset_target_properties(${APP_PROJECT_NAME} PROPERTIES COMPILE_DEFINITIONS_DEBUG \"_CONSOLE\")\n\tset_target_properties(${APP_PROJECT_NAME} PROPERTIES LINK_FLAGS_RELWITHDEBINFO \"/SUBSYSTEM:CONSOLE\")\n\tset_target_properties(${APP_PROJECT_NAME} PROPERTIES COMPILE_DEFINITIONS_RELWITHDEBINFO \"_CONSOLE\")\n\tset_target_properties(${APP_PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE \"/ENTRY:\\\"mainCRTStartup\\\" /SUBSYSTEM:CONSOLE /DEBUG\")\n\tset_target_properties(${APP_PROJECT_NAME} PROPERTIES LINK_FLAGS_MINSIZEREL \"/SUBSYSTEM:CONSOLE\")\n\n\t# generate pdb for release build\n\tset (CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /Zi\")\n\n\tset_property(\n\t\tTARGET ${APP_PROJECT_NAME}\n\t\t\tPROPERTY VS_DEBUGGER_WORKING_DIRECTORY\n\t\t\t\"${CMAKE_SOURCE_DIR}/bin/app\")\n\n\tstring(REGEX REPLACE \"/\" \"\\\\\\\\\" BACKSLASHED_CMAKE_BINARY_DIR ${CMAKE_BINARY_DIR})\n\tstring(REGEX REPLACE \"/\" \"\\\\\\\\\" BACKSLASHED_CMAKE_SOURCE_DIR ${CMAKE_SOURCE_DIR})\nelse ()\n\tadd_executable(${APP_PROJECT_NAME} ${APP_FILES})\nendif ()\n\ncreate_source_groups(${APP_FILES})\n\ntarget_link_libraries(\n\t${APP_PROJECT_NAME}\n\t${LIB_GUI_PROJECT_NAME}\n\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_PROJECT_NAME}>\n\t${LIB_PROJECT_NAME}\n)\n\nset_property(\n\tTARGET ${APP_PROJECT_NAME}\n\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\"${APP_INCLUDE_PATHS}\"\n\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\"${LIB_GUI_INCLUDE_PATHS}\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib_gui\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_INCLUDE_PATHS}>\n)\n\ntarget_include_directories(${APP_PROJECT_NAME} SYSTEM\n\tPUBLIC ${Boost_INCLUDE_DIRS}\n\t\"${EXTERNAL_INCLUDE_PATHS}\"\n\t\"${EXTERNAL_C_INCLUDE_PATHS}\"\n)\n\n# Use the Widgets module from Qt 5.\nqt5_use_modules(${APP_PROJECT_NAME} Widgets)\nqt5_use_modules(${APP_PROJECT_NAME} Network)\n\n# add platform specific libraries\nif (APPLE)\n\tfind_library(CORE_FOUNDATION CoreFoundation)\n\ttarget_link_libraries(${APP_PROJECT_NAME} ${CORE_FOUNDATION})\nendif ()\n\nadd_dependencies(${APP_PROJECT_NAME} ${APP_INDEXER_NAME})\n\n\n# macOS Bundle ----------------------------------------------------------------\n\nif (APPLE)\n\n\tset(MACOS_BUNDLE_NAME ${PROJECT_NAME})\n\tset(MACOS_BUNDLE_VERSION ${VERSION_STRING})\n\tset(MACOS_BINARY_NAME ${APP_PROJECT_NAME})\n\tset(MACOS_INDEXER_BINARY_NAME ${APP_INDEXER_NAME})\n\n\tget_property(QT_CORE_PATH TARGET ${Qt5Core_LIBRARIES} PROPERTY LOCATION)\n\tget_filename_component(QT_CORE_PATH ${QT_CORE_PATH} REALPATH)\n\n\tget_property(QT_GUI_PATH TARGET ${Qt5Gui_LIBRARIES} PROPERTY LOCATION)\n\tget_filename_component(QT_GUI_PATH ${QT_GUI_PATH} REALPATH)\n\n\tget_property(QT_WIDGETS_PATH TARGET ${Qt5Widgets_LIBRARIES} PROPERTY LOCATION)\n\tget_filename_component(QT_WIDGETS_PATH ${QT_WIDGETS_PATH} REALPATH)\n\n\tget_property(QT_PRINT_PATH TARGET ${Qt5PrintSupport_LIBRARIES} PROPERTY LOCATION)\n\tget_filename_component(QT_PRINT_PATH ${QT_PRINT_PATH} REALPATH)\n\n\tget_property(QT_NETWORK_PATH TARGET ${Qt5Network_LIBRARIES} PROPERTY LOCATION)\n\tget_filename_component(QT_NETWORK_PATH ${QT_NETWORK_PATH} REALPATH)\n\n\tget_property(QT_SVG_PATH TARGET ${Qt5Svg_LIBRARIES} PROPERTY LOCATION)\n\tget_filename_component(QT_SVG_PATH ${QT_SVG_PATH} REALPATH)\n\n\tlist(APPEND MACOS_QT_FRAMEWORKS ${QT_CORE_PATH} ${QT_GUI_PATH} ${QT_WIDGETS_PATH} ${QT_PRINT_PATH} ${QT_NETWORK_PATH} ${QT_SVG_PATH})\n\tstring(REPLACE \";\" \" \" MACOS_QT_FRAMEWORKS \"${MACOS_QT_FRAMEWORKS}\")\n\n\tset(MACOS_BOOST_DIR \"${Boost_INCLUDE_DIR}\")\n\tSTRING(REGEX REPLACE \"/lib/cmake/clang\" \"\" MACOS_CLANG_DIR \"${Clang_DIR}\")\n\tSTRING(REGEX REPLACE \"/lib/cmake/Qt5\" \"\" MACOS_QT_DIR \"${Qt5_DIR}\")\n\n\tconfigure_file(\n\t\t${PROJECT_SOURCE_DIR}/setup/macOS/bundle_install.sh.in\n\t\t${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/bundle_install.sh\n\t\t@ONLY\n\t)\n\n\tconfigure_file(\n\t\t${PROJECT_SOURCE_DIR}/setup/macOS/bundle_info.plist.in\n\t\t${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/bundle_info.plist\n\t\t@ONLY\n\t)\n\nendif ()\n\n\n# Test ----------------------------------------------------------------------\n\nif (UNIX)\n\tset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/test/\")\nelse ()\n\tforeach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )\n\t\tstring( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )\n\t\tset( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} \"${CMAKE_BINARY_DIR}/${OUTPUTCONFIG}/test/\")\n\tendforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )\nendif ()\n\nadd_executable (${TEST_PROJECT_NAME} ${TEST_FILES})\n\ncreate_source_groups(${TEST_FILES})\n\ntarget_link_libraries(\n\t${TEST_PROJECT_NAME}\n\t${LIB_GUI_PROJECT_NAME}\n\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_PROJECT_NAME}>\n\t${LIB_PROJECT_NAME}\n\t${LIB_GUI_PROJECT_NAME}\n\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_PROJECT_NAME}>\n\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_PROJECT_NAME}>\n)\n\nset_property(\n\tTARGET ${TEST_PROJECT_NAME}\n\tPROPERTY INCLUDE_DIRECTORIES\n\t\t\"${TEST_INCLUDE_PATHS}\"\n\t\t\"${LIB_INCLUDE_PATHS}\"\n\t\t\"${LIB_UTILITY_INCLUDE_PATHS}\"\n\t\t\"${LIB_GUI_INCLUDE_PATHS}\"\n\t\t\"${EXTERNAL_INCLUDE_PATHS}\"\n\t\t\"${EXTERNAL_C_INCLUDE_PATHS}\"\n\t\t\"${Boost_INCLUDE_DIRS}\"\n\t\t\"${CMAKE_BINARY_DIR}/src/lib\"\n\t\t$<$<BOOL:${BUILD_CXX_LANGUAGE_PACKAGE}>:${LIB_CXX_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_JAVA_LANGUAGE_PACKAGE}>:${LIB_JAVA_INCLUDE_PATHS}>\n\t\t$<$<BOOL:${BUILD_PYTHON_LANGUAGE_PACKAGE}>:${LIB_PYTHON_INCLUDE_PATHS}>\n)\n\nif (WIN32)\n\tset_target_properties(${TEST_PROJECT_NAME} PROPERTIES COMPILE_FLAGS \"/bigobj\")\n\tset_property(\n\t\tTARGET ${TEST_PROJECT_NAME}\n\t\t\tPROPERTY VS_DEBUGGER_WORKING_DIRECTORY\n\t\t\t\"${CMAKE_SOURCE_DIR}/bin/test\")\nendif ()\n\n\n# symlinks for data\nmessage(STATUS \"create symlink: \"\n\t\"${CMAKE_SOURCE_DIR}/bin/app/data -> \"\n\t\"${CMAKE_BINARY_DIR}/app/data\"\n)\n\nif (UNIX)\n\texecute_process(\n\t\tCOMMAND \"${CMAKE_COMMAND}\" \"-E\" \"make_directory\" \"${CMAKE_BINARY_DIR}/app\"\n\t\tCOMMAND \"${CMAKE_COMMAND}\" \"-E\" \"make_directory\" \"${CMAKE_BINARY_DIR}/test\"\n\t)\n\texecute_process(\n\t\tCOMMAND \"${CMAKE_COMMAND}\" \"-E\" \"create_symlink\" \"${CMAKE_SOURCE_DIR}/bin/app/data\" \"${CMAKE_BINARY_DIR}/app/data\"\n\t\tCOMMAND \"${CMAKE_COMMAND}\" \"-E\" \"create_symlink\" \"${CMAKE_SOURCE_DIR}/bin/app/user\" \"${CMAKE_BINARY_DIR}/app/user\"\n\t\tCOMMAND \"${CMAKE_COMMAND}\" \"-E\" \"create_symlink\" \"${CMAKE_SOURCE_DIR}/bin/test/data\" \"${CMAKE_BINARY_DIR}/test/data\"\n\t)\nelseif(WIN32)\n\tforeach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})\n\t\tif (EXISTS \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\")\n\t\t\texecute_process(\n\t\t\t\tCOMMAND \"cmd.exe\" \"/k\" \"rmdir\" \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\\\\app\\\\data\" & \"mklink\" \"/d\" \"/j\" \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\\\\app\\\\data\" \"${BACKSLASHED_CMAKE_SOURCE_DIR}\\\\bin\\\\app\\\\data\" & exit\n\t\t\t\tCOMMAND \"cmd.exe\" \"/k\" \"rmdir\" \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\\\\app\\\\user\" & \"mklink\" \"/d\" \"/j\" \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\\\\app\\\\user\" \"${BACKSLASHED_CMAKE_SOURCE_DIR}\\\\bin\\\\app\\\\user\" & exit\n\t\t\t\tCOMMAND \"cmd.exe\" \"/k\" \"rmdir\" \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\\\\test\\\\data\" & \"mklink\" \"/d\" \"/j\" \"${BACKSLASHED_CMAKE_BINARY_DIR}\\\\${OUTPUTCONFIG}\\\\test\\\\data\" \"${BACKSLASHED_CMAKE_SOURCE_DIR}\\\\bin\\\\test\\\\data\" & exit\n\t\t\t)\n\t\tendif()\n\tendforeach()\nendif ()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5888671875,
          "content": "# Contributing\nIf you like this project and want to get involved, there are lots of ways you can help:\n\n* __Spread the word.__ The more people want this project to grow, the greater the motivation for the developers to get things done.\n* __Fund the development.__ Further development and maintenance of this project is crowd funded via [Patreon](https://www.patreon.com/sourcetrail). If you would like Sourcetrail to grow and improve but cannot spare the time to contribute your self, please consider making a pledge.\n* __Test Sourcetrail.__ Run it on your own source code. If you find any issues, just report it here. Best, include some detailed step-by-step instructions that illustrate how to reproduce the issue, so that we can use it as a basis to craft a test case for our continuous integration and no one will ever break that case again.\n* __Write some code.__ Don't be shy here. You can implement whole new features or fix some bugs, but you can also do some refactoring if you think that it benefits the readability or the maintainability of the code. Still, no matter if you just want to work on cosmetics or implement new features, it would be best if you create an issue here on the issue tracker before you actually start handing in pull requests, so that we can discuss those changes first and thus raise the probability that those changes will get pulled quickly.\n\nTo create a pull request, follow these steps:\n* Fork the Repo on GitHub.\n* Make your commits.\n* If you added functionality or fixed a bug, please add a test.\n* Add your name to the AUTHORS.txt file.\n* Push to your fork and submit a pull request.\n"
        },
        {
          "name": "DOCUMENTATION.md",
          "type": "blob",
          "size": 108.4462890625,
          "content": "<img src=\"docs/documentation/logo.png\" height=\"250\" alt=\"Sourcetrail\">\n\nDocumentation for version 2021.4\n\n# Welcome\n\nThis document is the official documentation of Sourcetrail and explains everything you need to know about working with the software.\n\n## Overview\n\nSourcetrail is an interactive source explorer that simplifies navigation in existing source code by indexing your code and gathering data about its structure. Sourcetrail then provides a simple interface consisting of three interactive views, each playing a key role in helping you obtain the information you need:\n\n<img src=\"docs/documentation/concept.png\" height=\"400\" alt=\"Sourcetrail Concept\">\n\n* **Search:** Use the search field to quickly find and select indexed symbols in your source code. The autocompletion box will instantly provide an overview of all matching results throughout your codebase.\n* **Graph:** The graph displays the structure of your source code. It focuses on the currently selected symbol and directly shows all incoming and outgoing dependencies to other symbols.\n* **Code:** The Code view displays all source locations of the currently selected symbol in a list of code snippets. Clicking on a different source location allows you to change the selection and dig deeper.\n\nNote: Sourcetrail currently supports the languages C/C++, Java and Python. Much of the UI design is therefore based on these languages and might change as soon as other languages are supported. For more information have a look at [supported languages](#supported-languages).\n\n## Supported Languages\n\n### C\n\nC support is powered by [Clang 11.0.0](https://clang.llvm.org/). For issues loading C code, please have a look at [Clang language compatibility](https://clang.llvm.org/compatibility.html) or report a bug in our [bug tracker](https://github.com/CoatiSoftware/SourcetrailBugTracker).\n\n### C++\n\nC++ support is powered by [Clang 11.0.0](https://clang.llvm.org/). For more Information please visit [Clang C++ Status](https://clang.llvm.org/cxx_status.html). For issues loading C++ code, please have a look at [Clang language compatibility](https://clang.llvm.org/compatibility.html) or report a bug in our [bug tracker](https://github.com/CoatiSoftware/SourcetrailBugTracker).\n\n### Java\n\nSourcetrail includes support for Java 12 and lower which is powered by [Eclipse JDT](https://github.com/eclipse/eclipse.jdt.core). If you encounter any issues while using Sourcetrail on a Java project, please let us know by providing a minimal example in our [bug tracker](https://github.com/CoatiSoftware/SourcetrailBugTracker).\n\n### Python\n\nSourcetrail includes support for Python 2 and Python 3 which is powered by our open-source [SourcetrailPythonIndexer](https://github.com/CoatiSoftware/SourcetrailPythonIndexer). If you encounter any issues while using Sourcetrail on a Python project, please let us know by providing a minimal example in our [bug tracker](https://github.com/CoatiSoftware/SourcetrailPythonIndexer/issues).\n\n\n# Getting Started\n\nThis short introduction will briefly guide you through the project setup and the user interface of Sourcetrail. The bullet point lists will provide you with the next steps to take:\n\n## Starting Up Sourcetrail\n\nOnce you've [downloaded](https://github.com/CoatiSoftware/Sourcetrail/releases) Sourcetrail successfully you are ready to run the application. For assistance wth installation, visit the [installation](#installation) section.\n\n> **Tasks:**\n> * Launch Sourcetrail.\n\nAfter launching Sourcetrail you will see the [Start Window](#start-window). From here you can create your own project or choose a pre-indexed one.\n\n> **Tasks:**\n> * Click **New Project** to create a new project.\n> * or select one from the **Recent Projects** _(ex: TicTacToe)_ and continue with the [UI Intro](#ui-intro)\n\n<img src=\"docs/documentation/start_window.png\" height=\"600\" alt=\"Start Window\">\n\n## Creating a New Project\n\nWhen creating a new Sourcetrail project you will use the [Project Setup Wizard](#project-setup-wizard). This wizard splits the setup process into several subsequent steps. Depending on your project's structure and the used build system, there are different types for project setup. Choosing the correct setup method is important and can make the setup process a lot easier.\n\n> **Tasks:**\n> * Give your project a **Name** and select a **Location** for your Sourcetrail project to live.\n> * Click **Add Source Group** to add source files to the project.\n\n<img src=\"docs/documentation/project_setup_wizard_start.png\" height=\"500\" alt=\"Project Setup Wizard Start\">\n\n### Add Source Group\n\nSourcetrail projects consist of multiple *Source Groups*. Each Source Group uses a certain language, a set of files, and all configurations to index these files. There are different types of Source Groups for each supported programming language. In addition, creating a single Source Group is sufficient for most projects.\n\nScroll past the image for detailed instructions on setting this up.\n\n> **Tasks:**\n> * Select your chosen **Source Group** setup type and come back here as soon as the project is created.\n\n<img src=\"docs/documentation/project_setup_wizard_source_group_type.png\" height=\"600\" alt=\"Project Setup Wizard Source Group Type\">\n\n#### Source Group Setup for C/C++\n\nThe Source Group setup types for C & C++ are the same.\n\n**Are you using CMake, Make or Qt Creator?**\n\nIf you are using [CMake](https://cmake.org/) or [Make](https://www.gnu.org/software/make/) as build environment you can export a [clang JSON Compilation Database](https://clang.llvm.org/docs/JSONCompilationDatabase.html) as `compile_commands.json` file. A Compilation Database holds all information necessary for building the project, such as source files, include paths and compiler flags. Having a Compilation Database makes project setup within Sourcetrail a lot easier. We recommend using this approach if possible.\n\nExporting a Compilation Database:\n* From **CMake** by defining the `CMAKE_EXPORT_COMPILE_COMMANDS` flag. (not supported on for Visual Studio CMake generators)\n* For **Make** projects use [Bear](https://github.com/rizsotto/Bear). Bear generates a `compile_commands.json` file during a simulated build process. Bear has been tested on FreeBSD, GNU/Linux and OS X.\n* From **Qt Creator since version 4.8** by selecting the \"Generate Compilation Database\" from the \"Build\" menu.\n\nIf you managed to export a `compile_commands.json` file, then please continue at [Create a Source Group from Compilation Database](#create-a-project-from-compilation-database) and come back after you finished creating the project.\n\n<img src=\"docs/documentation/project_setup_wizard_start_cdb.png\" height=\"600\" alt=\"Project Setup Wizard Start CDB\">\n\n**Are you using Visual Studio?**\n\nIf you are using Visual Studio you can continue at [Source Group creation from Visual Studio](#create-a-project-from-visual-studio) and export a Compilation Database with our [Visual Studio Plugin](#visual-studio).\n\n<img src=\"docs/documentation/project_setup_wizard_start_vs.png\" height=\"600\" alt=\"Project Setup Wizard Start VS\">\n\n**Create Empty**\n\nIf neither of the above options apply to your project, please continue at [create an empty C/C++ Source Group](#create-an-empty-cxx-project) and return here once the project is created.\n\n<img src=\"docs/documentation/project_setup_wizard_source_group_type.png\" height=\"600\" alt=\"Project Setup Wizard Source Group Type\">\n\n#### Source Group Setup for Java\n\n**Are you using Gradle?**\n\nIf you are using Gradle you can continue at [Source Group creation from Gradle](#create-a-project-from-gradle-configuration) to automatically setup your Source Group using your Gradle build configuration.\n\n<img src=\"docs/documentation/project_setup_wizard_start_java_gradle.png\" height=\"600\" alt=\"Project Setup Wizard Start Java Gradle\">\n\n**Are you using Maven?**\n\nIf you are using Maven please continue at [Source Group creation from Maven](#create-a-project-from-maven-configuration) to automatically setup your Source Group using your Maven build configuration.\n\n<img src=\"docs/documentation/project_setup_wizard_start_java_maven.png\" height=\"600\" alt=\"Project Setup Wizard Start Java Maven\">\n\n**Create Empty**\n\nIf you do not have your project configured using Gradle or Maven, please continue at [Create an Empty Java Source Group](#create-an-empty-java-project) and come back here as soon as the project is created.\n\n<img src=\"docs/documentation/project_setup_wizard_start_java_empty.png\" height=\"600\" alt=\"Project Setup Wizard Start Java Empty\">\n\n#### Source Group Setup for Python\n\n**Create empty**\n\nIf you want to browse your Python source code with Sourcetrail, please continue at [Create an Empty Python Source Group](#create-an-empty-python-project) and come back here as soon as the project is created.\n\n<img src=\"docs/documentation/project_setup_wizard_start_python_empty.png\" height=\"600\" alt=\"Project Setup Wizard Start Python Empty\">\n\n## Source Indexing\n\nAfter the project is created, Sourcetrail will ask you whether you want to start indexing. Click **Start** and wait for the indexing to complete. This may take a bit of time. The [Indexing Dialog](#indexing-dialogs) and the [Status Bar](#status-bar) will give you information about the progress. Otherwise the UI will be empty. Sourcetrail indexes all named symbols and their relationships throughout the provided source files.\n\n> **Tasks:**\n> * Click **Start** when asked whether to start indexing.\n> * Wait until the indexing of your source files has finished.\n> * or Click **Stop** or press ESC to stop indexing (Sourcetrail will provide all information gathered so far and the indexing can be continued later by [refreshing](#refresh)).\n\n![\"Indexing\"](docs/documentation/indexing.png \"Indexing\")\n\nAfter indexing is completed, Sourcetrail will show an overview of all indexed symbols in the [graph view](#graph-view) and some statistics in the [code view](#code-view).\n\n#### Troubleshooting Errors\n\nIf the indexing yields errors, the status view will be shown with a list of errors. You can click on the errors label on the right side of the status bar or on one of the errors in the table to see their location.\n\n> **Tasks:**\n> * Fix your errors and [refresh](#refresh) to re-index the files with errors (Open Issue: As long as there was no change in the specific file, Sourcetrail won't reindex it, use the **Force Refresh** option from the [Edit Menu](#edit)).\n> * or ignore them and continue with an incomplete index.\n\n![\"Error View\"](docs/documentation/error_view.png \"Error View\")\n\n## User Interface\n\nAs mentioned earlier, Sourcetrail's user interface is split into three main views. Their arrangement can be adjusted as preferred and can also be detached from the main window and split into different screens (see [Window Widgets](#widget-windows)).\n\nAll three views display information about the currently selected symbol:\n\n![\"Main Screen\"](docs/documentation/main_screen.png \"Main Screen\")\n\n### 1. Search Field\n\nThe [Search Field](#search-bar) allows for easy access to all indexed symbols. Use it to find all classes and functions you wish to investigate. In addition, it also holds the UI buttons for navigating [back & forward](#back-&-forward) as well as [refreshing](#refresh).\n\n<img src=\"docs/documentation/search_view.png\" width=\"750\" alt=\"Search View\">\n\nWhen entering a search query, the [autocompletion popup](#autocompletion-popup) will provide you with a concise list of all matching symbols. Note that Sourcetrail uses a fuzzy matching algorithm, that allows you to skip characters while entering a query.\n\n<img src=\"docs/documentation/search_view_completion.png\" width=\"800\" alt=\"Search View Completion\">\n\n### 2. Graph Visualization\n\nThe [graph visualization](#graph-view) displays the currently selected symbol in an active state and all the other symbols it shares a relationship with. The visualization is made up of nodes and edges.\n\n* **Nodes:** All named symbols in your source code will be displayed as different [nodes](#nodes), such as `functions`, `classes` or `files`. Nodes with members (like `classes`) can be expanded to show all their contents, the number at the expansion arrow shows how many members are hidden. Clicking a node will activate it and update all the views to the new selection. Dragging a node can be used to change its position.\n* **Edges:** The relationships between the symbols are displayed as different [edges](#edges), such as `type use`, `function call` or `file include`. Sometimes edges get bundled together and are displayed as `bundled edges` that show a number of how many edges are contained. Clicking an edge will highlight its source location in the code view.\n\n![\"Graph View Graph\"](docs/documentation/graph_view_graph.png \"Graph View Graph\")\n\n#### Colors:\nThe different node and edge types are also displayed using different colors. The default color scheme uses this convention:\n\n| Color | Node | Edge\n| --- | --- | ---\n| gray | types and classes | type use\n| yellow | functions and methods | calls\n| blue | variables and fields | variable access\n\n#### Hatching:\nNodes displayed with a striped hatching, are nodes that were used within your indexed source files, but were not defined. Clicking them shows all locations where they are used, without providing their declaration.\n\n![\"Node Non Indexed\"](docs/documentation/node_non_indexed.png \"Node Non Indexed\")\n\n#### Legend:\n\nFor a full list on all existing nodes and edges take a look at the integrated [Graph Legend](#graph-legend) by clicking the `?`-button in the bottom right corner of the [Graph View](#graph-view).\n\n### 3. Code View\n\nThe [code view](#code-view) displays all locations of the currently active symbol within the indexed source files. It does not allow for editing the source code. Syntax highlighting is used to increase readability. Source locations that are surrounded by a box when hovered can be clicked to activate the respective symbol. Active source locations are highlighted.\n\n<img src=\"docs/documentation/code_view.png\" width=\"800\" alt=\"Code View\">\n\nThe source locations are displayed as code snippets, containing the line of interest and extra lines added to the top and bottom to give information about its context. Code snippets are then bundled together into files.\n\n**Note:** A file can be selected as active symbol by clicking its name in the title bar. By clicking the title bar or the icon on the right hand side of the title bar, the file can switch between 3 different states:\n\n* **Minimized:** The file does not show any content\n\n<img src=\"docs/documentation/snippet_minimized.png\" width=\"800\" alt=\"Snippet Minimized\">\n\n* **Snippets:** The file displays the snippets containing active locations separated by lines.\n\n<img src=\"docs/documentation/snippet_snippets.png\" width=\"800\" alt=\"Snippet Snippets\">\n\n* **Maximized:** The [code view](#code-view) switches to [single file mode](#single-file-mode) and the whole content of the file is visible.\n\n<img src=\"docs/documentation/code_view_single.png\" width=\"800\" alt=\"Code View Single\">\n\nFor more information, please visit the [Code View Files](#files) section.\n\n## Start Exploring!\n\nAt this point, you should have an understanding of the basics of Sourcetrail's user interface and can begin exploring your codebase. Sourcetrail will allow you to see your source code from a whole new perspective, by giving you a concise overview of its parts and a faster way of drilling down to its internals, while always maintaining the connection to the implementation details of the actual source code.\n\nPlease take look at the much more extensive instruction manual below for detailed information.\n\nThe Sourcetrail team wishes you a good start with our product, lots of saved time, increased productivity and much cleaner code.\n\n> **Tasks:**\n> * Start exploring and have fun!\n\n\n# Installation\n\n## Windows\n\nDownload and open the zip file and extract its contents into a temporary folder of your choice. Run the `setup.exe` and go through the wizard. You can now launch Sourcetrail from your start menu.\n\n## macOS\nDownload and open the Sourcetrail.dmg file and drag Sourcetrail.app into the applications folder. You can now launch Sourcetrail from your Applications.\n\n<img src=\"docs/documentation/installation_mac.png\" width=\"800\" alt=\"Installation macOS\">\n\n## Linux\n\n### Tarball\n\nDownload the `.tar.gz` file and extract it. To start Sourcetrail run the `Sourcetrail.sh` script. Sourcetrail creates a folder `~/.config/sourcetrail` at the first run, this is the folder for Sourcetrail settings.\n\n#### Install\nTo install Sourcetrail run the `install.sh` script with `sudo`. It will install Sourcetrail to `/opt/sourcetrail` and create the `/usr/bin/sourcetrail` symlink.\n\n#### Uninstall\nTo uninstall Sourcetrail run the `/opt/sourcetrail/uninstall.sh` script with `sudo`.\n\n### AppImage\n\nDownload the `.AppImage` file. Give it permission to execute with `chmod a+x` or via the context menu. To start Sourcetrail double click it or execute it from the Terminal. Sourcetrail creates a folder `~/.config/sourcetrail` at the first run, this is the folder for Sourcetrail settings.\n\nFor more information on AppImages please visit [appimage.org](https://appimage.org/).\n\n## Data folder\n\nThe data folder holds certain files that are used by Sourcetrail to run the program. After following the [installation instructions](#installation) the data folder should be located in the following locations on your platform.\n\n| Platform | Location\n| --- | ---\n| Windows | `C:/Users/You/AppData/Local/Coati Software/Sourcetrail` _(used for dynamic data and settings)_ `install_directory/Coati Software/Sourcetrail/data` _(used for static app data)_\n| macOS | `~/Library/Application Support/Sourcetrail`\n| Linux | `~/.config/sourcetrail`\n\n## Finding System Header Locations\n\n### Windows\n\nThese files usually ship with your compiler. For the Visual Studio IDE the system headers can be found at:\n`<path_to_visual_studio>/VC/include/`\nIf you don't use the Visual Studio IDE you can also try to find your system headers in a subdirectory of:\n`C:/Program Files (x86)/Windows Kits/`\n\n### macOS\n\nRun this command in your terminal:\n`gcc -x c++ -v -E /dev/null`\nYou will find the header search paths your compiler uses in the output between these two lines:\n\n```\n#include <...> search starts here:\n.\n.\n.\nEnd of search list.\n```\n\n### Linux\n\n`gcc -x c++ -v -E /dev/null`\nor\n`clang -x c++ -v -E /dev/null`\nYou will find the header search paths your compiler uses in the output between these two lines:\n\n```\n#include <...> search starts here:\n.\n.\n.\nEnd of search list.\n```\n\n\n## Finding Java Runtime Library Location\n\nThe current version of Sourcetrail requires an installation of the Java 8 runtime environment to index any Java project. Make sure that Sourcetrail and your JRE share the same kind or architecture (a 32 bit Sourcetrail requires a 32 bit JRE). To locate the required library file, please refer to the applicable description below.\n\n### Windows\n\nThe Java Runtime Library (called `jvm.dll`) can be found inside of your JRE install folder and looks like this:\n`<path_to_jre>/bin/client/jvm.dll`\n\n### macOS\n\nThe Java Runtime Library (called `libjli.dylib`) can be found inside of your JDK install folder. Run the following command in your terminal to find the location of your default Java installation:\n`/usr/libexec/java_home`\n\nThis should give you a path looking like this:\n`/Library/Java/JavaVirtualMachines/<jdk_version>/Contents/Home`\n\nThe `\"libjli.dylib\"` should be available at:\n`/Library/Java/JavaVirtualMachines/<jdk_version>/Contents/MacOS/libjli.dylib`\n\nInsert the full path to `libjli.dylib` into the **Java Path** setting in the [Preferences Window](#preferences-window).\n\n### Linux\n\nThe Java Runtime Library (called `libjvm.so`) can be found inside of your JRE install folder and looks like this:\n`<path_to_jre>/lib/<arch>/server/libjvm.so`\n\n# Interface\n\n## Main Window\n\n### Subwindows\n\nSourcetrail's three views are organized into subwindows, which can be freely arranged within the Main Window or detached from it. Each subwindow has a title bar displaying its name and 2 buttons for closing the subwindow and for detaching it from the Main Window.\n\n![\"Main Window\"](docs/documentation/main_window.png \"Main Window\")\n\n**Interactions:**\n\n* Drag the subwindow at the title bar to rearrange it within the Main Window, detach it or attach it again.\n* Press the \"x\" icon to close the subwindow. They can be reopened from the [View Menu](#view).\n* Press the \"‚ñ°\" icon to detach the subwindow from the Main Window.\n\n### Tab Bar\n\nThe Tab Bar is located at the top of the [Main Window](#main-window) and is used to open multiple symbols in parallel.\n\n![\"Tab Bar\"](docs/documentation/tab_bar.png \"Tab Bar\")\n\n**Interactions:**\n\n* Click on the `+` icon to open a new tab or use the [New Tab Shortcut](#shortcuts).\n* Click on a tab to activate it and show it's content or use the [Next/Previous Tab Shortcuts](#shortcuts).\n* Click on the `x` icon on the right of each tab to close it or use the [Close Tab Shortcut](#shortcuts).\n* Click and drag a tab to change it's position.\n\n### Status Bar\n\nThe Status Bar is located on the bottom of the [Main Window](#main-window) and is used to convey information about Sourcetrail's status and currently running processes to the user\n\nIt displays:\n\n* The most recent status message.\n* The current status of the [Code Editor Plugin](#code-editor-plugins) connection\n* Error Count if the currently loaded project has errors.\n* Indexing progress bar while indexing.\n\n![\"Status Bar\"](docs/documentation/status_bar.png \"Status Bar\")\n\n**Interactions:**\n\n* Click on the status message count to display the (Status Tab](#status-tab).\n* Click on the error count to display the error locations in the [Code View](#code-view).\n* Click on the indexing progress bar to display the [Indexing Dialogs](#indexing-dialogs) if they were hidden.\n\n### On-Screen Search Bar\n\nThe On-Screen Search Bar is used to search visible contents of the [Graph View](#graph-view) and [Code View](#code-view). It gets displayed at the bottom of the [Main Window](#main-window) when using the [Find On-Screen](#shortcuts) action.\n\n![\"Onscreen Search Bar\"](docs/documentation/onscreen_search_bar.png \"Onscreen Search Bar\")\n\n**Interactions:**\n\n* Enter a search query to search in contents of the [Graph View](#graph-view) and [Code View](#code-view).\n* Click the arrow buttons next to the search field to iterate the matched locations.\n* Use the checkboxes right of the search field to define which view contents will be matched.\n* Click the `x` icon on the right to close the On-Screen Search Bar or press `ESC`.\n\n## Windows\n\n### Start Window\n\nOn every start of Sourcetrail you are shown the start window. It allows for creating new projects or opening existing ones.\n\n<img src=\"docs/documentation/start_window.png\" width=\"700\" alt=\"Start Window\">\n\n**Interactions:**\n\n* Clicking `New Project` will lead you to [Project Setup](#project-setup-wizard).\n* Clicking `Open Project` will let you open an existing Sourcetrail project by choosing from a file dialog.\n* Clicking on one of the `Recent Projects` will open this project. The list shows a maximum of 7 items ordered by recent first.\n* Pressing `ESC` will close the window.\n* Click `Check for new version` to connect to [https://sourcetrail.com](https://sourcetrail.com) and check if a new version is available.\n\n\n### Path List Box\n\nThe Path List Box is a user interface element that is used within the [Preferences Window](#preferences-window) and the [Project Setup Wizard](#project-setup-wizard). It allows for entering a list of file and directory paths.\nIf you want to use environment variables you can use either of the following notations.\n`${VARIABLE_NAME}` or `%VARIABLE_NAME%`\n\n<img src=\"docs/documentation/path_list_box.png\" width=\"700\" alt=\"Path List Box\">\n\n**Interactions:**\n\n* Click the \"+\" icon to add a new path line.\n* Click the \"-\" icon to remove a selected path line.\n* Click a path line to select it.\n* Enter the path by typing on your keyboard\n* Click \"...\" within the path line to open a file dialog for choosing a file or directory path.\n* Directly add multiple paths into the box by dropping elements from your filesystem.\n* Click the pen icon in the bottom right corner to edit the list as plain text.\n\n#### Plain Text Editing\n\nBy pressing the pen icon in the bottom right corner you can open the plain text edition dialog. It allows you to edit the whole list within a text field. Each line will be one list item.\n\n<img src=\"docs/documentation/path_list_box_edit.png\" width=\"600\" alt=\"Path List Box Edit\">\n\n**Interactions:**\n\n* Add and remove list items through keyboard interaction.\n* Click `Cancel` to cancel plain text editing.\n* Click `Save` to save your changes to the list.\n\n### Preferences Window\n\nThe Preferences window lets you define settings for all projects. You can open the Preferences from the menu via [Edit/Preferences](#edit).\n\n<img src=\"docs/documentation/preferences_screen.png\" width=\"800\" alt=\"Preferences Screen\">\n\n| Setting | Description\n| --- | ---\n| Font Face | Define the font face used throughout the UI\n| Font Size | Set the font size used throughout the UI. It can also be changed with the actions in the [View Menu](#view)\n| Tab Width | Define the space width of tabs in the code view.\n| Text Encoding | Define the Text Encoding used for displaying your source code.\n| Color scheme | Choose which color scheme Sourcetrail should display. The color schemes are located in [data](#datafolder)/color_schemes/\n| Animations | Define if animations are used within the user interface.\n| Built-In Types | Define whether built-in types such as int or bool are shown when referenced in the graph view.\n| Directory in File Title | Enable display of the parent directory of a code file relative to the project file.\n| Auto Scaling to DPI | **(Linux only)** Define if automatic scaling to screen DPI resolution is active. This setting manipulates the environment flag `QT_AUTO_SCREEN_SCALE_FACTOR` of the Qt framework. Choose 'system' to stick to the setting of your current environment.\n| Scale Factor | **(Linux only)** Define a screen scale factor for the user interface of the application. This setting manipulates the environment flag `QT_SCALE_FACTOR` of the Qt framework. Choose 'system' to stick to the setting of your current environment.\n| Scroll Speed | Define a multiplyer for the default scroll speed. Values smaller than 1 slow down scrolling while values greater than 1 increase the scroll speed.\n| Graph Zoom | Switch the default mouse wheel behavior in the graph between scrolling and zooming.\n| Logging | Ticking this box enables logging to console and to a log file. This option is disabled by default to speed up Sourcetrail. If you encounter problems while running Sourcetrail, we recommend to enable this option so you have somewhere to start looking for a cause.\n| Indexer Logging | When enabled Sourcetrail will log detailed information during indexing. This log data can help us fix issues.\n| Automatic Update Check | Check to automatically check whether a new version of Sourcetrail is available once every day.\n| Sourcetrail Port | Port number that Sourcetrail uses to listen for incoming messages from plugins.\n| Plugin Port | Port number that Sourcetrail sends outgoing messages to.\n| Indexer threads | Define how many parallel threads are used during indexing. Setting this value to `default` will cause Sourcetrail to detect the ideal number of threads based on the CPU and use as many threads for indexing.\n| Multi process C/C++ indexing | Enable C/C++ indexer threads to run in a different process. This prevents the application from crashing due to unforeseen exceptions while indexing.\n| Java Path | If you want to use Sourcetrail on Java source code, please specify a path to your Java 8 runtime library. Please keep in mind that a 32 bit Sourcetrail requires a 32 bit version of Java while a 64 bit Sourcetrail requires a 64 bit Java to be working correctly. You can either use the button below for automatic detection or add the path manually. For instructions on how to find your Java runtime path see (Finding Java Runtime Library Location](#finding-java-runtime-library-location).\n| JRE System Library | Add the jar files of your JRE System Library. These jars can be found inside your JRE install directory. You can either use the button below for automatic detection or add the paths manually.\n| Maven Path | Only required for indexing projects using Maven. Provide the location of your installed Maven executable. You can also use the auto detection.\n| Post Processing | Enable a post processing step to solve unsolved references after the indexing is done. These references will be marked \"ambiguous\" to indicate that some of these edges may never be encountered during runtime of the indexed code because the post processing only relies on symbol names and types.\n| Global Include Paths | Set header search paths that are used for **all** of your projects (e.g. std headers). An option for automatic detection of these paths is available for Clang, GCC and the Visual Studio compiler. For instructions on how to add paths manually see [Path List Box](#path-list-box). For instructions on how to find the system header paths see [Finding System Header Locations](#finding-system-header-locations).\n| Global Framework Search Paths | **(macOS only)** Define the search paths for `.framework` files for all of your projects. An option for automatic detection of these paths is available for Clang and GCC. <br />For instructions on how to add paths see [Path List Box](#path-list-box).\n\n### Project Setup Wizard\nThe Project Setup Wizard lets you create a new Sourcetrail project. It allows for defining name and location of your project Sourcetrail and adding several **Source Groups**, that define which source files will be indexed. There are several ways to create Source Groups. It is sufficient to add only one Source Group for most projects.\n\nFor detailed information continue at [PROJECT SETUP](#project-setup).\n\n<img src=\"docs/documentation/project_setup_wizard_start.png\" width=\"800\" alt=\"Project Setup Wizard Start\">\n\n### Indexing Dialogs\n\nThese dialogs will be used while Sourcetrail indexes your project. The whole user interface will be frozen as long as these dialogs are visible.\n\n#### Start Indexing Dialog\n\nThis dialog displays the number of files for indexing and clearing before indexing starts. There are different refresh modes:\n\n\n* **Updated files:** Reindexes all files that were modified since the last indexing, all files depending on those and new files.\n* **Incomplete & updated files:** Reindexes all files that had errors during last indexing, all files depending on those and all updated files.\n* **All files:** Deletes the previous index and reindexes all files.\n\n\n**Shallow Python Indexing**\n\nFor Python projects a checkbox **Shallow Python Indexing** is additionally displayed. When checked, references within your code base (calls, usages, etc.) are resolved by name, which is imprecise but much faster than in-depth indexing. Use this option for a quick first indexing pass and start browsing the code base while running a second pass for in-depth indexing.\n\n<img src=\"docs/documentation/start_indexing_dialog.png\" width=\"600\" alt=\"Start Indexing Dialog\">\n\n**Interactions:**\n\n* Switch indexing mode by clicking a different option.\n* Clicking `Cancel` will abort indexing.\n* Clicking `Start` will start the file clearing and indexing.\n\n#### Progress Dialog\n\nThis dialog shows that Sourcetrail is currently doing processing that can't be interrupted.\n\n<img src=\"docs/documentation/progress_dialog.png\" width=\"600\" alt=\"Progress Dialog\">\n\n**Interactions:**\n\n* Clicking `Hide` will hide the dialog. You can display it again by clicking on the indexing progress bar in the [status bar](#status-bar) or [refreshing](#refresh).\n\n#### Indexing Dialogs\n\nThis dialog shows the indexing progress of your project, by displaying the number of already indexed files, the last file that was started indexing, the number of errors and a progress estimate in percent.\n\n<img src=\"docs/documentation/indexing_dialog.png\" width=\"600\" alt=\"Indexing Dialog\">\n\n**Interactions:**\n\n* Clicking `Stop` or pressing ESC will interrupt indexing. Sourcetrail will still wait for the already running indexer threads to finish. You can continue indexing later by [refreshing](#refresh).\n* Clicking `Hide` will hide the dialog. You can display it again by clicking on the indexing progress bar in the [status bar](#status-bar) or [refreshing](#refresh).\n\n#### Finished Indexing Dialog\n\nThis dialog is shown after indexing finished, giving you information about indexed files, duration and errors.\n\n<img src=\"docs/documentation/finished_indexing_dialog.png\" width=\"600\" alt=\"Finished Indexing Dialog\">\n\n#### Interrupted Indexing Dialog\n\nThis dialog is shown after indexing was stopped, giving you information about indexed files, duration and errors. You can choose to either use the new index or continue using the old one.\n\n<img src=\"docs/documentation/finished_indexing_dialog.png\" width=\"600\" alt=\"Interrupted Indexing Dialog\">\n\n**Interactions:**\n\n* Clicking `Discard` will discard the new index.\n* Clicking `Keep` will switch your project to the new index and discard the old one.\n\n## Menu\n\n### Project\n\n* **New Project**\n    * Shortcut: [New Project](#shortcuts)\n    * Opens the [New Project](#project-setup-wizard) Dialog to define a new project and loads it after creation.\n* **Open Project**\n    * Shortcut: [Open Project](#shortcuts)\n    * Opens a file dialog to choose an existing Sourcetrail project file from your system's hard drive.\n* **Recent Projects**\n    * Opens a submenu to choose recent opened Sourcetrail projects.\n* **Edit Project**\n    * Opens the [Edit Project Dialog](#project-setup-wizard) prefilled with your project settings and allows for changing them.\n* **Exit**\n    * Quits Sourcetrail.\n\n### Edit\n\n* **Refresh**\n    * Shortcut: [Refresh](#shorcuts)\n    * Refresh will check all indexed source files for updates and reindex the ones that changed and their depending ones.\n* **Full Refresh**\n    * Shortcut: [Full Refresh](#shorcuts)\n    * Full Refresh will reindex the whole project.\n* **Find Symbol**\n    * Shortcut: [Find Symbol](#shorcuts)\n    * This option will put the focus into the search field, so you can start typing your search query. Alternatively you can click the search field.\n* **Find Text**\n    * Shortcut: [Find Text](#shorcuts)\n    * This option will put the focus into the search field and start a new full text search query\n* **Find On-Screen**\n    * Shortcut: [Find On-Screen](#shorcuts)\n    * Display the [On-Screen Search Bar](#on-screen-search-bar) to search visible contents of the [Graph View](#graph-view) and [Code View](#code-view)\n* **Next Reference**\n    * Shortcut: [Next Reference](#shorcuts)\n    * Use this option to iterate to the next source location of the active symbol in the code view.\n* **Previous Reference**\n    * Shortcut: [Previous Reference](#shorcuts)\n    * Use this option to iterate to the previous source location of the active symbol in the code view.\n* **Next Local Reference**\n    * Shortcut: [Next Local Reference](#shorcuts)\n    * Use this option to iterate to the next source location of the active local symbol or edge in the code view.\n* **Previous Local Reference**\n    * Shortcut: [Previous Local Reference](#shorcuts)\n    * Use this option to iterate to the previous source location of the active local symbol or edge in the code view.\n* **To overview**\n    * Shortcut: [To overview](#shorcuts)\n    * This option will display the overview of the project.\n* **Preferences**\n    * Shortcut: [Preferences](#shorcuts)\n    * Opens the [Preferences Window](#preferences-window).\n\n### View\n\n* **New Tab**\n    * Opens a new tab.\n* **Close Tab**\n    * Closes the current tab.\n* **Select Next Tab**\n    * Switch to the tab to the right of the current tab.\n* **Select Previous Tab**\n    * Switch to the tab to the left of the current tab.\n* **Show Start Window**\n    * Shows the [Start Window](#start-window).\n* **Show Title Bars**\n    * Toggle the visibility of the bars above each [Window Widget](#widget-windows).\n* **Reset window layout**\n    * Resets all the dock widgets to their original layout.\n* **Search Window**\n    * Toggle the visibility of the Search Window. This can also be done by closing the Search Window on clicking the \"x\" icon in it's title bar. (See [Window Widgets](#widget-windows))\n* **Graph Window**\n    * Toggle the visibility of the Graph Window. This can also be done by closing the Graph Window on clicking the \"x\" icon in it's title bar. (See [Window Widgets](#widget-windows))\n* **Code Window**\n    * Toggle the visibility of the Code Window. This can also be done by closing the Code Window on clicking the \"x\" icon in it's title bar. (See [Window Widgets](#widget-windows))\n* **Status Window**\n    * Toggle the visibility of the Status Window. This can also be done by closing the Status Window on clicking the \"x\" icon in it's title bar. (See [Window Widgets](#widget-windows))\n* **Larger Font**\n    * Shortcut: [Larger Font](#shortcuts)\n    * Increase the font size within the Main Window's user interface.\n* **Smaller Font**\n    * Shortcut: [Smaller Font](#shortcuts)\n    * Decrease the font size within the Main Window's user interface.\n* **Reset font size**\n    * Shortcut: [Reset font size](#shortcuts)\n    * Resets the font size to the original size.\n\n### History\n\n* **Back**\n    * Shortcut: [Back](#shortcuts)\n    * Undoes the last navigation action.\n* **Forward**\n    * Shortcut: [Forward](#shortcuts)\n    * Redoes an undone navigation action.\n* **Recently Active Symbols**\n    * List the history of active symbols in chronologic order.\n\n### Bookmarks\n\n* **Bookmark Active Symbol**\n    * Shortcut: Bookmark Active Symbol](#shortcuts)\n    * Opens the [Bookmark Creator](#bookmark-creator) dialog create a new bookmark.\n* **Bookmark Manager**\n    * Shortcut: Bookmark Manager](#shortcuts)\n    * Opens the [Bookmark Manager](#bookmark-manager) dialog for viewing all bookmarks.\n* **Recent Bookmarks**\n    * List of recently added bookmarks for quick activation.\n\n### Help\n\n* **About**\n    * Shows copyright information about Sourcetrail.\n* **Keyboard Shortcuts**\n    * Shows table of keyboard shortcuts for Sourcetrail.\n* **Documentation**\n    * Opens this documentation of Sourcetrail in your web browser by URL.\n* **Changelog**\n    * Opens the [changelog](https://github.com/CoatiSoftware/SourcetrailBugTracker#changelog) of Sourcetrail in your web browser by URL.\n* **Bug Tracker**\n    * Opens Sourcetrail's bug tracker in your web browser by URL.\n* **License**\n    * Opens a window containing the Sourcetrail license and all 3rd party licenses.\n* **Show Data Folder**\n    * Opens the file explorer showing the [data folder](#datafolder).\n* **Show Log Folder**\n    * Opens the file explorer in the directory [data](#datafolder)/logs where all log files are saved to. You can enable file logging in the [Preferences Window](#preferences-window).\n\n\n### Shortcuts\n\n#### General\n\n| Shortcut | Windows | macOS | Linux\n| --- | --- | --- | ---\n| Switch Focus Between Graph/Code Views | `Tab` | `Tab` | `Tab`\n| Preferences | `Ctrl + ,` | `Cmd + ,` | `Ctrl + ,`\n| New Project | `Ctrl + N` | `Cmd + N` | `Ctrl + N`\n| Open Project | `Ctrl + O` | `Cmd + O` | `Ctrl + O`\n| Close Window | `Alt + F4` | `Cmd + W` | `Ctrl + W`\n| Hide Window |  | `Cmd + H` |\n| Refresh | `F5` | `Cmd + R` | `F5`\n| Full Refresh | `Shift + F5` | `Cmd + Shift + R` | `Shift + F5`\n| Back | `Z` / `Alt + Left` / `Backspace` | `Z` / `Cmd + [` / `Backspace` | `Z` / `Alt + Left` / `Backspace`\n| Forward | `Shift + Z` / `Alt + Right` | `Shift + Z` / `Cmd + ]` | `Shift + Z` / `Alt + Right`\n| Find Symbol | `Ctrl + F` | `Cmd + F` | `Ctrl + F`\n| Find Text | `Ctrl + Shift + F` | `Cmd + Shift + F` | `Ctrl + Shift + F`\n| Find On-Screen | `Ctrl + D` | `Cmd + D` | `Ctrl + D`\n| To overview | `Ctrl + Home` | `Cmd + Home` / `Cmd + Up` | `Ctrl + Home`\n| New Tab | `Ctrl + T` | `Cmd + T` | `Ctrl + T`\n| Close Tab | `Ctrl + W` | `Cmd + W` | `Ctrl + W`\n| Select Next Tab | `Ctrl + Tab` | `Ctrl + Tab` | `Ctrl + Tab`\n| Select Previous Tab | `Ctrl + Shift + Tab` | `Ctrl + Shift + Tab` | `Ctrl + Shift + Tab`\n| Larger Font | `Ctrl + +` | `Cmd + +` | `Ctrl + +`\n| Smaller Font | `Ctrl + -` | `Cmd + -` | `Ctrl + -`\n| Reset Font Size | `Ctrl + 0` | `Cmd + 0` | `Ctrl + 0`\n| Bookmark Active Symbol | `Ctrl + S` | `Cmd + S` | `Ctrl + S`\n| Bookmark Manager | `Ctrl + B` | `Cmd + B` | `Ctrl + B`\n\n#### Graph View\n\n| Shortcut | Windows | macOS | Linux\n| --- | --- | --- | ---\n| Move Focus Within Nodes | `WASD` / `HJKL` / `Arrows` | `WASD` / `HJKL` / `Arrows` | `WASD` / `HJKL` / `Arrows`\n| Move Focus Within Edges | `Shift + WASD` / `Shift + HJKL` / `Shift + Arrows` | `Shift + WASD` / `Shift + HJKL` / `Shift + Arrows` | `Shift + WASD` / `Shift + HJKL` / `Shift + Arrows`\n| Activate Node/Edge | `Enter` / `E` | `Enter` / `E` | `Enter` / `E`\n| Activate Node in New Tab | `Ctrl + Shift + Enter` / `Ctrl + Shift + E` | `Cmd + Shift + Enter` / `Cmd + Shift + E` | `Ctrl + Shift + Enter` / `Ctrl + Shift + E`\n| Expand/Collapse Node | `Shift + Enter` / `Shift + E` | `Shift + Enter` / `Shift + E` | `Shift + Enter` / `Shift + E`\n| Pan | `Ctrl + Arrows` | `Cmd + Arrows` | `Ctrl + Arrows`\n| Zoom In | `Ctrl + Shift + Up` / `Ctrl + Mouse Wheel Up` | `Cmd + Shift + Up` / `Cmd + Mouse Wheel Up` | `Ctrl + Shift + Up` / `Ctrl + Mouse Wheel Up`\n| Zoom Out | `Ctrl + Shift + Down` / `Ctrl + Mouse Wheel Down` | `Cmd + Shift + Down` / `Cmd + Mouse Wheel Down` | `Ctrl + Shift + Down` / `Ctrl + Mouse Wheel Down`\n| Reset Zoom | `0` | `0` | `0`\n| Open Custom Trail Dialog | `Ctrl + U` | `Cmd + U` | `Ctrl + U`\n\n#### Code View\n\n| Shortcut | Windows | macOS | Linux\n| --- | --- | --- | ---\n| Next Reference | `Ctrl + G` | `Cmd + G` | `Ctrl + G`\n| Previous Reference | `Ctrl + Shift + G` | `Cmd + Shift + G` | `Ctrl + Shift + G`\n| Next Local Reference | `Ctrl + T` | `Cmd + T` | `Ctrl + T`\n| Previous Local Reference | `Ctrl + Shift + T` | `Cmd + Shift + T` | `Ctrl + Shift + T`\n| Move Focus Within Code | `WASD` / `HJKL` / `Arrows` | `WASD` / `HJKL` / `Arrows` | `WASD` / `HJKL` / `Arrows`\n| Move Focus to Closest Reference | `Shift + WASD` / `Shift + HJKL` / `Shift + Arrows` | `Shift + WASD` / `Shift + HJKL` / `Shift + Arrows` | `Shift + WASD` / `Shift + HJKL` / `Shift + Arrows`\n| Activate Location | `Enter` / `E` | `Enter` / `E` | `Enter` / `E`\n| Activate Location in New Tab | `Ctrl + Shift + Enter` / `Ctrl + Shift + E` | `Cmd + Shift + Enter` / `Cmd + Shift + E` | `Ctrl + Shift + Enter` / `Ctrl + Shift + E`\n| Scroll | `Ctrl + Arrows` | `Cmd + Arrows` | `Ctrl + Arrows`\n\n## Graph View\nThe graph view visualizes the currently selected symbol and all its relationships to other symbols as an interactive graph visualization. You can also display whole call graphs, inheritance chains or include trees by using the toolbar in the top left. Read more about that at [Custom Trail](#custom-trail).\n\n<img src=\"docs/documentation/graph_view.png\" width=\"750\" alt=\"Graph View\">\n\n#### Interactions:\n\n**Buttons:**\n\n* Use the trail navigation in the top left to create [Custom Trails](#custom-trail).\n* Use the grouping buttons in the top left to enable [Node Grouping](#node-grouping) by namespace/package or file.\n* Press the `+` and `-` buttons in the lower left corner to change the zoom level.\n* Press the `?` button in the bottom right corner to show the [Graph Legend](#graph-legend).\n\n**Panning:**\n\n* Drag the background area with the mouse.\n* Scroll left-right and up-down on the mouse pad.\n* Use the keys `W` `A` `S` `D`.\n\n\n**Zooming:**\n\n* Hold `Ctrl/Cmd` and scroll with mouse wheel or mouse pad.\n* Press `Shift + W` or `Shift + S`.\n* Press `0` to reset zoom.\n\n\n**Context Menu:**\n\n* **Open in New Tab:** Opens a new Tab with the node under the mouse cursor as active symbol.\n* **Back:** Go back in history.\n* **Forward:** Go forward in history.\n* **Show Definition:** Show the definition of the node under the mouse cursor in the [Code View](#code-view).\n* **Show Definition in IDE:** Show the definition of the node under the mouse cursor using the connected [Code Editor Plugin](#code-editor-plugin).\n* **Expand Node:** Expand node under mouse cursor.\n* **Collapse Node:** Collapse node under mouse cursor.\n* **Hide Node:** Hide node under mouse cursor.\n* **Hide Edge:** Hide edge under mouse cursor.\n* **Bookmark Node:** Create a bookmark for node under mouse cursor.\n* **Save As Image:** Export current graph as image file. Possible formats are `PNG`, `JPEG`, `BMP` and `SVG`.\n* **Save To Clipboard:** Save current graph as `PNG` image to clipboard.\n* **Copy Name:** Copy name for node under mouse cursor to clipboard.\n* **Copy Full Path:** Copy file path for file node under mouse cursor to clipboard.\n* **Open Containing Folder:** Show the file in your file explorer for file node under mouse cursor.\n\n\n### Nodes\nColors are corresponding to the default color scheme.\n\n| Node Type | Image\n| --- | ---\n| **File**: Non-indexed files are files that are not part of any source group and therefore have not been indexed by Sourcetrail's indexer. Incomplete files produced errors during indexing or where part of an indexer run with errors. | ![\"Node File\"](docs/documentation/node_file.png \"Node File\")\n| **Macro** | ![\"Node Macro\"](docs/documentation/node_macro.png \"Node Macro\")\n| **Namespace, Package & Module** | ![\"Node Namespace\"](docs/documentation/node_namespace.png \"Node Namespace\")\n| **Class & Struct**: Display their members nested, and separated by access type: public, protected, private. By default only members with edges are shown. The arrow icon allows to expand and collapse them. The number tells how many nodes are hidden. | ![\"Node Class\"](docs/documentation/node_class.png \"Node Class\")\n| **Type** | ![\"Node Type\"](docs/documentation/node_type.png \"Node Type\")\n| **Typedef** | ![\"Node Typedef\"](docs/documentation/node_typedef.png \"Node Typedef\")\n| **Variable & Field** | ![\"Node Variable\"](docs/documentation/node_variable.png \"Node Variable\")\n| **Function & Method** | ![\"Node Function\"](docs/documentation/node_function.png \"Node Function\")\n| **Enum & Enum Constant** | ![\"Node Enum\"](docs/documentation/node_enum.png \"Node Enum\")\n| **Bundle**: A bundle node combines multiple nodes to reduce the size of the graph visualization. The name describes what kind of nodes are bundled. The number tells how many nodes are bundled. | ![\"Node Bundle\"](docs/documentation/node_bundle.png \"Node Bundle\")\n| **Group: A group node shows that all contained nodes share something in common e.g. same file or namespace. | ![\"Node Group\"](docs/documentation/node_group.png \"Node Group\")\n\n**Interactions:**\n\n* Click a node to activate it.\n* Drag a node to change its position.\n* Click the arrow icon in class nodes to expand and collapse it.\n* Click a bundle node to expand it.\n* Hover a node to see a tooltip that displays the node‚Äôs type.\n\n### Edges\nColors are corresponding to the default color scheme.\n\n| Edge Type | Image\n| --- | ---\n| **File Include** | ![\"Edge Include\"](docs/documentation/edge_include.png \"Edge Include\")\n| **Type Use** | ![\"Edge Use\"](docs/documentation/edge_type_usage.png \"Edge Use\")\n| **Variable Use** | ![\"Edge Variable Use\"](docs/documentation/edge_variable_use.png \"Edge Variable Use\")\n| **Function Call** | ![\"Edge Call\"](docs/documentation/edge_call.png \"Edge Call\")\n| **Inheritance** | ![\"Edge Inheritance\"](docs/documentation/edge_inheritance.png \"Edge Inheritance\")\n| **Method Override** | ![\"Edge Override\"](docs/documentation/edge_override.png \"Edge Override\")\n| **Template Specialization & Template Argument Use** | ![\"Edge Template Param\"](docs/documentation/edge_template_param.png \"Edge Template Param\")\n| **Template Member Specialization** | ![\"Edget Template Member Specialization\"](docs/documentation/edge_template_member_specialization.png \"Edget Template Member Specialization\")\n| **Bundled Edges**: Bundles multiple edges between the child nodes of the 2 nodes. The thickness gives an impression of how many edges are bundled. Hover the edge to get the number of bundled edges. | ![\"Edge Bunled Edges\"](docs/documentation/edge_bundled_edges.png \"Edge Bunled Edges\")\n\n**Interactions:**\n\n* Click an edge to see its location in the [Code View](#code-view).\n* Click a bundled edges to activate all its corresponding edges.\n* Hover an edge to see a tooltip that displays the edge‚Äôs type.\n\n### Custom Trail\nUsing the toolbar in the top left you can display whole call graphs, inheritance chains or include trees for the currently active symbol if the right symbol type is currently active. Or you can use the Custom Trail Dialog to display graphs based on custom criteria.\n\n![\"Call Graph\"](docs/documentation/call_graph.png \"Call Graph\")\n\n**Interactions:**\n\n* Click the arrow button to expand/collapse the `Custom Trail` controls.\n* Click the `Custom Trail Dialog` button to show the `Custom Trail Dialog`.\n* Click the `Predefined Custom Trail` buttons to show a graph of depending/dependent nodes based on the currently active symbol.\n* Change the slider position to change the maximum depth of the graph. Moving it to the top will use infinite depth.\n* Click on a node to activate it.\n* Click on an edge to show it's source location in the [Code View](#code-view).\n\n\n#### Custom Trail Dialog\nThe Custom Trail Dialog can be accessed within the trail controls in the top left of the graph view. It allows to display Custom Trails based on certain criteria.\n\n<img src=\"docs/documentation/custom_trail.png\" width=\"700\" alt=\"Custom Trail\">\n\nEvery Custom Trail has a specific Start Symbol, then 1 of 3 different modes can be chosen:\n\n| Mode | Description\n| --- | ---\n| **To Target Symbol** | Specify another target symbol. The graph will only contain paths from the origin to the target symbol.\n| **All Referenced** | The graph will only contain nodes that are referenced by the origin symbol.\n| **All Referencing** | The graph will only contain nodes that depend on the origin symbol.\n\nAdditional options allow defining which information should be shown:\n\n| Setting | Description\n| --- | ---\n| **Maximum Depth** | Define the depth of the resulting graph. When searching paths from origin to target, all paths that are beyond this depth will not be found.\n| **Layout Direction** | Define if the graph should be displayed vertically or horizontally.\n| **Node Filters** | Define which node types will be part of the resulting graph. Only node types present in the loaded project are displayed. This setting is ignored for the origin and target nodes.\n| **Edge Filters** | Define which edge types will be part of the resulting graph. Only node types present in the loaded project are displayed. The special edge \"member\" defines whether parent-child relations are considered as edge.\n\n**Interactions:**\n\n* Search for start and target symbols using a search field. The interactions are the same as in the main [Search Field](#search-bar).\n* Drag the Max Depth slider to change the maximum depth of the resulting graph.\n* Click the **Check All** and **Uncheck All** buttons to check all available node or edge filters.\n* Click on Cancel to close the dialog.\n* Click on Search to search for a Custom Trail using the selected options.\n\n### Node Grouping\n\nUsing grouping buttons in the top left you can specify if nodes in the graph shall be grouped by either namespace/package or defining file.\n\n![\"Grouping Buttons\"](docs/documentation/grouping_buttons.png \"Grouping Buttons\")\n\n#### Namespace/Package Grouping\n\nAll nodes that belong to the same namespace or package are grouped together in a separate group node.\n\n<img src=\"docs/documentation/grouping_namespace.png\" width=\"800\" alt=\"Grouping Namespace\">\n\n#### File Grouping\n\nAll nodes defined in the same source or header file are grouped together in a separate group node.\n\n<img src=\"docs/documentation/grouping_file.png\" width=\"800\" alt=\"Grouping File\">\n\n**Interactions:**\n\n* Click on the group name to activate the corresponding namespace/package or file node.\n\n\n### Graph Legend\n\nClick the `?` button in the bottom right corner of the graph view or enter the keyword `legend` in the [search field](#search-bar) to show the graph legend. It gives you an overview on the different node and edge types and provides examples of graph layouts.\n\n![\"Graph Legend\"](docs/documentation/graph_legend.png \"Graph Legend\")\n\n## Code View\n\nThe code view displays the corresponding source code of the currently selected symbols. The code view has two modes. In list mode it contains a list of one or more files. In single file mode it shows one full source file at a time.\n\n<img src=\"docs/documentation/code_view.png\" width=\"800\" alt=\"Code View\">\n\n**Interactions:**\n\n* Iterate the references of the currently active symbol with the `reference` navigation in the upper left corner.\n* Iterate local references of the currently selected local variable or multiple references of a symbol within a local scope with the `local reference` navigation in center.\n* Switch between Snippet List and Single File mode with the `mode selection` in the upper right corner.\n* Scroll up and down to see the different source files.\n\n<img src=\"docs/documentation/code_view_show_errors.png\" width=\"800\" alt=\"Code View Show Errors\">\n\nIf a viewed file had errors during indexing, its file icon will contain an `x` and there is a `Show Errors`-button visible in the files title bar. Clicking one `Show Errors` will show you only the errors that cause this specific file to be incomplete in the [Errors Tab](#errors-tab).\n\n### Snippet List Mode\n\nIn this mode the Code View will provide all references of the currently active symbol at once. The top most snippet will show the definition of the symbol if available.\n\n#### Files\n\nEach file has a title bar with the file's name. Clicking the title bar will change the display state. There are 2 different states:\n\n* **Minimized:** The file does not show its content.\n\n<img src=\"docs/documentation/snippet_minimized.png\" width=\"800\" alt=\"Snippet Minimized\">\n\n* **Snippets:** The file displays the snippets containing active locations separated by lines.\n\n<img src=\"docs/documentation/snippet_snippets.png\" width=\"800\" alt=\"Snippet Snippets\">\n\n**Interactions:**\n\n* Hover the title to see the full file path.\n* Click the title to activate the file's corresponding node and switch to full file view.\n* Click the title bar to minimize the file or show its snippets.\n* Click the snippet button to switch to snippet or full file view, depending on the file node\n* Click the maximize button to switch to [Single File Mode](#single-file-mode).\n\n#### Snippets\n\nA code snippet contains the lines of interest for the currently active symbol surrounded by some more lines to provide some context. Other symbols that were indexed by Sourcetrail are framed by a box when hovered. Here Sourcetrail distinguishes between local symbols and symbols that can be related to any other part of the code base. In case the snippet is part of a class, function or namespace, an additional line at the top of the snippet provides information about the snippet‚Äôs context (e.g. the surrounding scope).\n\n<img src=\"docs/documentation/code_view_snippet.png\" width=\"800\" alt=\"Code View Snippet\">\n\n**Interactions:**\n\n* Click the top line to show the whole scope around the snippet.\n* Click a boxed symbol to activate it.\n* Click a boxed local symbol to highlight all its usages in the visible code.\n\n### Single File Mode\n\nIn single file mode you will only every have one file visible at a time. The first file shown is usually the file containing the definition of the active snippet if available. Other than that the user interface is the same as in [Snippet List Mode](#snippet-list-mode).\n\n<img src=\"docs/documentation/code_view_single.png\" width=\"800\" alt=\"Code View Single\">\n\n**Interactions:**\n\n* Hover the title to see the full file path.\n* Click the title to activate the file's corresponding node.\n* Click the snippet button to switch to [Snippet List Mode](#snippet-list-mode).\n\n## Search View\n\nThe Search View contains the search field and some other related user interface elements.\n\n<img src=\"docs/documentation/search_view.png\" width=\"800\" alt=\"Search View\">\n\n### Back, Forward and History\n\nThe left `Backward` button lets you undo your last navigation actions (see [Back](#back)) and the right `Forward` button lets you redo your undone navigation actions again (see [Forward](#forward)). Both buttons are only enabled when the respective actions are available at the moment.\n\nThe middle button shows a list of the recently active symbol stack. Select a symbol to activate it.\n\n![\"Undo Redo View\"](docs/documentation/undo_redo_buttons.png \"Undo Redo View\")\n\n![\"History List\"](docs/documentation/history_list.png \"History List\")\n\n**Interactions:**\n\n* Hover the buttons to see a tool tip.\n* Press the buttons to execute the respective action.\n* Press the history button to show the active symbol stack and click on an item to activate it.\n\n### Refresh\n\nThe refresh button allows you to refresh the current project and reindex all updated, added and removed files. To reindex the whole project choose the **Force Refresh** option from the [Edit Menu](#edit).\n\n![\"Refresh Button\"](docs/documentation/refresh_button.png \"Refresh Button\")\n\n**Interactions:**\n\n* Hover the buttons to see a tooltip.\n* Press the refresh button to refresh the project.\n\n### Overview Button\n\nShow the overview screen, which gives a summary of the loaded project. The overview screen is shown after the project was loaded. Alternatively use the shortcut [To overview](#shortcuts).\n\n![\"Overview Button\"](docs/documentation/overview_button.png \"Overview Button\")\n\n**Interactions:**\n\n* Press the overview button to show the project overview.\n\n### Search Bar\n\nThe search bar allows you to enter search requests to find one of Sourcetrail's indexed symbols. It doesn't allow for full text searching across all files so far. The search field allows for most text editing interactions common to text fields. When typing your request the [Autocompletion Popup](#autocompletion-popup) will show you search results matching to your entered string.\n\n![\"Search Bar\"](docs/documentation/search_bar.png \"Search Bar\")\n\n**Interactions:**\n\n* Focus the search field by clicking it or using the [Find Symbol](#find-symbol) action.\n* Enter your search request by typing on your keyboard.\n* By pressing enter or clicking on the search icon on the right you send your request.\n* The search field allows for most interactions known from other text fields such as moving the cursor, copy&paste and text selection.\n\n\n### Autocompletion Popup\n\nThe Autocompletion Popup displays all [Nodes](#nodes) matching your search request within all indexed symbols. The match results are determined by a fuzzy matching algorithm, that allows you to skip characters. The popup shows which characters in the words are matching and displays their corresponding node color. The node type is displayed on the right.\n\n<img src=\"docs/documentation/search_view_completion.png\" width=\"800\" alt=\"Search View Completion\">\n\n**Interactions:**\n\n* Use the up and down arrow keys to switch between search results.\n* Pressing tab or clicking on the search result will insert it into the search field.\n* Pressing enter will select the search result and send the search request.\n\n### Keywords\n\nAdditionally the search view provides specific keywords that select a certain group of symbols.\n\n| keyword | effect\n| --- | ---\n| **overview** | Shows an overview of all indexed symbols in the [graph view](#graph-view) and some statistics in the [code view](#code-view).\n| **error** | Shows all errors in the [code view]().\n\n### Full text search\n\nSearch for a certain string in all indexed files by putting `?` at the front of your search query. The default full text search is case-insensitive, use `??` to search case-sensitive.\n\n![\"Search View Fulltext\"](docs/documentation/search_view_fulltext.png \"Search View Fulltext\")\n\n**Interactions:**\n\n* Start a query with `?` or use the [Find Text](#find-text) action to do a case-insensitive full text search.\n* Start a query with `??` to do a case-sensitive full text search.\n\n### Bookmarking Buttons\n\nThe `Bookmark Active Symbol` button on the left opens the [Bookmark Creator](#bookmark-creator) to create a new bookmark. The `Bookmark Manager` button on the right is used to display the [Bookmark Manager](#bookmark-manager) for activating and editing your bookmarks.\n\n![\"Bookmark Buttons\"](docs/documentation/bookmark_buttons.png \"Bookmark Buttons\")\n\n**Interactions:**\n\n* Hover the buttons to see a tool tip.\n* Press the buttons to execute the respective action.\n\n### Bookmark Creator\n\nUse the `Bookmark Creator` to create or edit bookmarks.\n\n<img src=\"docs/documentation/bookmark_creator.png\" width=\"700\" alt=\"Bookmark Creator\">\n\n| Setting | Description\n| --- | ---\n| **Name** | The name of the bookmark. Initially the name of the node or edge is used.\n| **Comment** | Add an optional comment to the bookmark.\n| **Category** | Add the bookmark to a certain category. Bookmarks with the same category are grouped together in the [Bookmark Manager](#bookmark-manager).\n\n**Interactions:**\n\n* Press `Cancel` to close without changes.\n* Press `Create/Save` to save the bookmark or apply the changes.\n\n### Bookmark Manager\n\nUse the `Bookmark Manager` to view and activate your bookmarks. Bookmarks are displayed as lines below their respective category. If a bookmark does not have a category it will be placed within the `default` category. The buttons for removing/editing categories or bookmarks are only visible when hovering the respective line. Bookmark information is stored within a separate `.srctrlbm` file next to your `.srctrlprj` project file.\n\n<img src=\"docs/documentation/bookmark_manager.png\" width=\"800\" alt=\"Bookmark Manager\">\n\n**Interactions:**\n\n* Activate bookmarks by clicking on the name.\n* Open/Collapse the bookmark comment by clicking within the bookmark line.\n* Click the `Edit` button to change the contents of the bookmark.\n* Click the `Delete` button at a bookmark to remove the bookmark.\n* Open/Collapse categories by clicking in their line.\n* Click the `Delete` button at a category to remove the category and all bookmarks within.\n* Change the `Show` filter to switch between display of nodes and/or edges.\n* Change the `Sorting` to change the order of bookmarks within their categories.\n\n## Status View\n\nThis view provides different tabs with information about your project. This\nview is hidden by default.\n\n**Interactions:**\n\n* Click on the titles on top to switch between tabs.\n* Click on the `x`-button in the top right corner to close the Status View.\n\n### Status Tab\n\nThis table gives some information about status updates while running Sourcetrail. It can be helpful to figure out why something does not the way it's expected to.\n\n![\"Status View Status\"](docs/documentation/status_view_status.png \"Status View Status\")\n\n**Interactions:**\n\n* Double click on a table cell to select the text for copy&paste.\n* Use the checkboxes below to filter the shown messages by type.\n* Click on `Clear Table` to remove all rows from the table.\n\n### Errors Tab\n\nThis list shows errors occurred during indexing.\n\n![\"Status View Error\"](docs/documentation/status_view_error.png \"Status View Error\")\n\nThe following information is provided:\n\n* **Type:** ERROR or FATAL. A FATAL error causes lots of missing information since the indexer had to stop at this error.\n* **Error message**\n* **File**\n* **Line number**\n* **Indexed:** Whether the file is within the indexed files.\n* **Translation Unit:** The source file that produced this error while being indexed.\n\n**Interactions:**\n\n* Click on a error line to see the location of the error in the [Code View](#code-view).\n* Click on the column headers to sort the error rows ascending or descending by this data.\n* Double click on a table cell to select the text for copy&paste.\n* Use the checkboxes below to filter the shown errors by certain criteria.\n* Click on `Edit Project` to open the [Edit Project Dialog](#project-setup-wizard).\n\n## Tooltips\n\nShow information about hovered symbols in the [Graph View](#graph-view) and [Code View](#code-view)\n\n<img src=\"docs/documentation/tooltip.png\" width=\"500\" alt=\"Tooltip\">\n\n**The following information is provided:**\n\n* Symbol type\n* Visibility (e.g. public or private)\n* Reference count\n* Symbol name\n* Clickable type name for global variables and fields.\n* Full signatures with clickable return type name and parameter types names for functions and methods.\n\n**Interactions:**\n\n* Click on symbol names to activate them.\n\n# Project Setup\n\nProject Setup in Sourcetrail is done via the [Project Setup Wizard](#project-setup-wizard), which can be accessed on the [Start Window](#start-window) by clicking `New Project` or from the [Project Menu](#project) with the `New Project` action.\n\nThe Project Setup Wizard lets you create a new Sourcetrail project. It allows for defining name and location of your Sourcetrail project and adding several **Source Groups**, that define which source files will be indexed. There are several ways to create Source Groups. It is sufficient to add only one Source Group for most projects.\n\nAfter you added Source Groups to your project this dialog allows you to edit their configurations, as well as removing or duplicating them.\n\n<img src=\"docs/documentation/project_setup_wizard_start.png\" width=\"800\" alt=\"Project Setup Wizard Start\">\n\n| Setting | Description\n| --- | ---\n| Sourcetrail Project Name | The name of the project. This will also be the name of the `.srctrlprj` file generated by Sourcetrail.\n| Sourcetrail Project Location | Choose the location of the project file from the dialog.\n\n**Interactions:**\n\n* Clicking `Cancel` or pressing `ESC` will close the window and abort the setup process.\n* Clicking `Add Source Group` will take you to the creation of a new Source Group.\n* Clicking `General` will take you to the name and location setting of the project.\n* Clicking a `Source Group` will let you edit it's configuration and change it's name.\n* Clicking `+` beneath the Source Group list will take you to the creation of a new Source Group.\n* Clicking `-` beneath the Source Group list will delete the currently selected Source Group.\n* Clicking `‚òê` beneath the Source Group list will duplicate the currently selected Source Group.\n* Clicking `Create` will close this window and create the new project.\n\nThis window is also used when editing the project. You can select a Source Group from the list on the left and edit it's contents then. Additionally you can also set the `active` flag of certain Source Groups to false, so they won't get indexed when refreshing the project.\n\n<img src=\"docs/documentation/project_setup_wizard_edit.png\" width=\"800\" alt=\"Project Setup Wizard Edit\">\n\n**Interactions:**\n\n* Change the name of the Source Group.\n* Activate/Deactivate the Source Group for indexing.\n* Change any settings defined during Source Group setup.\n\n## Choose a Source Group Type\n\nWhen creating a new Source Group you can choose between different methods of setup depending on your project language. Please have a look at our [QUICK START GUIDE](#getting-started) section for help on choosing the right Source Group type.\n\n<img src=\"docs/documentation/project_setup_wizard_source_group_type.png\" width=\"600\" alt=\"Project Setup Wizard Source Group Type\">\n\n**Interactions:**\n\n* Select the language used in code project.\n* Selecting a Source Group type will determine how you enter all the required information.\n* Clicking `Cancel` or pressing `ESC` will close the window.\n* Clicking `Next` will take you to the next step of the setup process.\n\n## Empty C/C++ Source Group\n\nEmpty C/C++ Source Groups have the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Standard | Select the language standard that should be used for indexing your project. Usually the most recent language standard is preselected here. (See [Language Support](#supported-languages))\n| Cross-compilation | Check **Use specific target** and then use the dropdown boxes to specify a certain target platform. Please have a look at the clang compiler documentation on [cross-compilation](https://clang.llvm.org/docs/CrossCompilation.html) for more information.\n| Files & Directories to Index | These paths define the files and directories that will be indexed by Sourcetrail. Provide a directory to recursively add all contained source and header files. If your project's source code resides in one location, but generated source files are kept at a different location, you will also need to add that directory. You can make use of environment variables with `${ENV_VAR}`.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.cpp`. Sourcetrail will only try to index files that match one of these extensions.\n| Include Paths | Include Paths are used for resolving #include directives in the indexed source and header files. These paths are usually passed to the compiler with the `-I` or `-iquote` flags. Add all paths #include directives throughout your project are relative to. If all #include directives are specified relative to the project's root directory, please add that root directory here. If your project also includes files from external libraries (e.g. boost), please add these directories as well (e.g. add `path/to/boost_home/include`). You can make use of environment variables with `${ENV_VAR}`.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Global Include Paths | The Global Include Paths will be used in all your projects in addition to the project specific Include Paths. These paths are usually passed to the compiler with the '-isystem' flag. Use them to add system header paths (See [Finding System Header Locations](#finding-system-header-locations) or use the auto detection below).<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Framework Search Paths (macOS only) | These paths are used to find `.framework` files used by your project. (<br />For instructions on how to add paths see [Path List Box](#path-list-box).)\n| Global Framework Search Paths (macOS only) | These Framework Search Paths will be used in all your projects. (<br />For instructions on how to add paths see [Path List Box](#path-list-box). For instructions on how to find the system header paths see [Finding System Header Locations](#finding-system-header-locations))\n| Compiler Flags | Define additional compiler flags used during indexing including the dash (e.g. use `-DRELEASE` to add a `#define` for `RELEASE`).<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Precompiled Header File | Select the path to the header file that should be used to generate a Precompiled Header File. The Precompiled Header File will be generated as pre-indexing step. If no path is supplied, no Precompiled Header File will be generated.\n| Precompiled Header Flags | Define if the already supplied compiler flags should be used for Precompiled Header File generation and define additional flags for Precompiled Header File generation only.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n\n## C/C++ Source Group from Compilation Database\n\nIf you are using [CMake](https://cmake.org/) you can export compile commands by defining the `CMAKE_EXPORT_COMPILE_COMMANDS` flag and then use the exported `.json` file for Sourcetrail project setup.\nFor non-CMake projects you can use [Bear](https://github.com/rizsotto/Bear). Bear generates a `.json` file during the simulated build process. Bear has been tested on FreeBSD, GNU/Linux and OS X.\nC/C++ Source Groups from Compilation Database offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Compilation Database | Select the compilation database file for the project. Sourcetrail will index your project based on the compile commands this file contains using all include paths and compiler flags of these compile commands. The project will stay up to date with changes in the compilation database on every refresh. You can make use of environment variables with ${ENV_VAR}.\n| Header Files & Directories to Index | Your Compilation Database already specifies which source files are part of your project. But Sourcetrail still needs to know which header files to index as part of your project and which to skip. Choosing to skip indexing your system headers or external frameworks will significantly improve the overall indexing performance. Use this list to define which header files should be indexed by Sourcetrail. Provide a directory to recursively add all contained files. You can make use of environment variables with ${ENV_VAR}.<br />**Hint**: Just enter the root path of your project if you want Sourcetrail to index all contained headers it encounters.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Additional Include Paths | Include Paths are used for resolving #include directives in the indexed source and header files. These paths are usually passed to the compiler with the '-I' or '-iquote' flags. Add all paths #include directives throughout your project are relative to. If all #include directives are specified relative to the project's root directory, please add that root directory here. If your project also includes files from external libraries (e.g. boost), please add these directories as well (e.g. add 'path/to/boost_home/include'). You can make use of environment variables with ${ENV_VAR}.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Global Include Paths | The Global Include Paths will be used in all your projects in addition to the project specific Include Paths. These paths are usually passed to the compiler with the '-isystem' flag. Use them to add system header paths (See [Finding System Header Locations](#finding-system-header-locations) or use the auto detection below).<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Framework Search Paths (macOS only) | These paths are used to find `.framework` files used by your project. (<br />For instructions on how to add paths see [Path List Box](#path-list-box).)\n| Global Framework Search Paths (macOS only) | These Framework Search Paths will be used in all your projects. (<br />For instructions on how to add paths see [Path List Box](#path-list-box). For instructions on how to find the system header paths see [Finding System Header Locations](#finding-system-header-locations))\n| Additional Compiler Flags | Define additional compiler flags used during indexing including the dash (e.g. use `-DRELEASE` to add a `#define` for `RELEASE`).<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Precompiled Header File | Select the path to the header file that should be used to generate a Precompiled Header File. The Precompiled Header File will be generated as pre-indexing step. If no path is supplied, no Precompiled Header File will be generated.\n| Precompiled Header Flags | Define if the already supplied compiler flags should be used for Precompiled Header File generation and define additional flags for Precompiled Header File generation only.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n\n## C/C++ Source Group from Visual Studio\n\nIf you are using Visual Studio you can export a Compilation Database with our [Visual Studio Plugin](#visual-studio) and use it to create a project with Sourcetrail.\n\n<img src=\"docs/documentation/project_setup_wizard_visual_studio.png\" width=\"700\" alt=\"Project Setup Wizard Visual Studio\">\n\n**Interactions:**\n\n* Clicking `Create CDB` will communicate to the [Visual Studio Plugin](#visual-studio) that a project should be exported as Compilation Database. Please have a look at the [Visual Studio Plugin](#visual-studio) for more details on the steps within Visual Studio.\n\n> After finishing the export process within Visual Studio the Source Group setup uses the same steps as creating a Source Group directly [from Compilation Database](#create-a-project-from-compilation-database).\n\n## C/C++ Source Group from Code::Blocks\n\nIf you already have a working Code::Blocks project (`.cbp`) for your source code you can use it to create a project with Sourcetrail. Note that a `.cbp` file will be generated by the **QtCreator** if a CMakeLists file is imported.\nC/C++ Source Groups from Code::Blocks offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| C++ Standard | Select the language standard that should be used for indexing your project's C++ files. Usually the most recent language standard is preselected here. (See [Language Support](#supported-languages))\n| C Standard | Select the language standard that should be used for indexing your project's C files. Usually the most recent language standard is preselected here. (See [Language Support](#supported-languages))\n| Code::Blocks Project | Select the `.cbp` file for the project. Sourcetrail will index your project based on the settings specified by the Code::Blocks project file. Your Sourcetrail project will stay up to date with changes in the Code::Blocks project file on every refresh. You can make use of environment variables with ${ENV_VAR}.\n| Header Files & Directories to Index | Your Code::Blocks project already specifies which source files are part of your project. But Sourcetrail still needs to know which header files to index as part of your project and which to skip. Choosing to skip indexing your system headers or external frameworks will significantly improve the overall indexing performance. Use this list to define which header files should be indexed by Sourcetrail. Provide a directory to recursively add all contained files. You can make use of environment variables with ${ENV_VAR}.<br />**Hint**: Just enter the root path of your project if you want Sourcetrail to index all contained headers it encounters.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.cpp`. Sourcetrail will only try to index files that match one of these extensions.\n| Additional Include Paths | Include Paths are used for resolving #include directives in the indexed source and header files. These paths are usually passed to the compiler with the '-I' or '-iquote' flags. Add all paths #include directives throughout your project are relative to. If all #include directives are specified relative to the project's root directory, please add that root directory here. If your project also includes files from external libraries (e.g. boost), please add these directories as well (e.g. add 'path/to/boost_home/include'). You can make use of environment variables with ${ENV_VAR}.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Global Include Paths | The Global Include Paths will be used in all your projects in addition to the project specific Include Paths. These paths are usually passed to the compiler with the '-isystem' flag. Use them to add system header paths (See [Finding System Header Locations](#finding-system-header-locations) or use the auto detection below).<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Framework Search Paths (macOS only) | These paths are used to find `.framework` files used by your project. (<br />For instructions on how to add paths see [Path List Box](#path-list-box).)\n| Global Framework Search Paths (macOS only) | These Framework Search Paths will be used in all your projects. (<br />For instructions on how to add paths see [Path List Box](#path-list-box). For instructions on how to find the system header paths see [Finding System Header Locations](#finding-system-header-locations))\n| Additional Compiler Flags | Define additional compiler flags used during indexing including the dash (e.g. use `-DRELEASE` to add a `#define` for `RELEASE`).<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n\n## Empty Java Source Group\n\nChoose this option if you want to index Java files using Sourcetrail.\nEmpty Java Source Groups offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Standard | Select the language standard that should be used for indexing your the Source Group. Usually the most recent language standard is preselected here. (See [Language Support](#supported-languages))\n| Files & Directories to Index | These paths define the files and directories that will be indexed by Sourcetrail. Provide a directory to recursively add all contained source and header files. If your project's source code resides in one location, but generated source files are kept at a different location, you will also need to add that directory. You can make use of environment variables with ${ENV_VAR}.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.java`. Sourcetrail will only try to index files that match one of these extensions.\n| Class Path | Enter all the .jar files your project depends on. If your project depends on uncompiled java code that should not be indexed, please add the root directory of those .java files here (the one where all the package names are relative to). You can make use of environment variables with ${ENV_VAR}.\n| JRE System Library | Tick this box to use the JRE System library jars specified in your application settings. Disable this setting if you want to use another JRE System library for this project and add the respective jars to the project's Class Path.\n\n## Java Source Group from Gradle\n\nIf you are using a Gradle configuration to manage and build your project use this approach to create a Sourcetrail Source Group.\nJava Source Groups from Gradle offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Standard | Select the language standard that should be used for indexing your the Source Group. Usually the most recent language standard is preselected here. (See [Language Support](#supported-languages))\n| Gradle Project File |  The path to the `build.gradle` file in the root folder of your Gradle project.\n| Should Index Tests |  This checkbox indicates whether or not Sourcetrail indexes the test code that is part of your Gradle project.\n| Intermediate Dependencies Directory | Directory where Sourcetrail stores all of the project's `.jar` dependencies.\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.java`. Sourcetrail will only try to index files that match one of these extensions.\n\n## Java Source Group from Maven\n\nIf you are using a Maven configuration to manage and build your project use this approach to create a Sourcetrail Source Group.\nJava Source Groups from Maven offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Standard | Select the language standard that should be used for indexing your the Source Group. Usually the most recent language standard is preselected here. (See [Language Support](#supported-languages))\n| Maven Project File |  The path to the `pom.xml` file in the root folder of your Maven project.\n| Should Index Tests |  This checkbox indicates whether or not Sourcetrail indexes the test code that is part of your Maven project.\n| Intermediate Dependencies Directory | Directory where Sourcetrail stores all of the project's `.jar` dependencies.\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.java`. Sourcetrail will only try to index files that match one of these extensions.\n\n## Empty Python Source Group\n\nChoose this option if you want to index Python files using Sourcetrail.\nEmpty Python Source Groups offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Python Environment | Here you can specify the path to the directory or to the executable of the (virtual) Python environment that should be used to resolve dependencies within the indexed source code.<br />If you would run:<br />`$ cd c:\\dev\\python\\envs`<br />`$ virtualenv py37`<br />you would set it to `C:\\dev\\python\\envs\\py37` or `C:\\dev\\python\\envs\\py37\\Scripts\\python.exe`.<br />Leave blank to use the default Python environment. You can make use of environment variables with `${ENV_VAR}`.\n| Files & Directories to Index | These paths define the files and directories that will be indexed by Sourcetrail. Provide a directory to recursively add all contained source and header files. If your project's source code resides in one location, but generated source files are kept at a different location, you will also need to add that directory. You can make use of environment variables with ${ENV_VAR}.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.py`. Sourcetrail will only try to index files that match one of these extensions.\n\n## Custom Command Source Group\n\nIn a Custom Command Source Group you can define a set of files and a command line call used to index each of these files. This Source Group type was introduced to integrate custom indexers written with [SourcetrailDB](https://github.com/CoatiSoftware/SourcetrailDB).\n\nCustom Command Source Groups offer the following configuration options:\n\n| Setting | Description\n| --- | ---\n| Custom Command | The command line call executed for each source file. You can pass different pre-defined parameters:<br /><ul><li>**%{SOURCE_FILE_PATH}**: The path to each source file in the source group (mandatory)</li><li>**%{DATABASE_FILE_PATH}**: The path to the database of the project</li><li>**%{DATABASE_VERSION}**: The database version of the used Sourcetrail instance</li><li>**%{PROJECT_FILE_PATH}**: The path to the project file</li></ul>\n| Run in Parallel |  Whether files should be processed in parallel.\n| Files & Directories to Index | These paths define the files and directories that will be indexed by Sourcetrail. Provide a directory to recursively add all contained source and header files. If your project's source code resides in one location, but generated source files are kept at a different location, you will also need to add that directory. You can make use of environment variables with ${ENV_VAR}.<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).\n| Excluded Files & Directories | These paths define the files and directories that will be left out from indexing.<br />Hints:<br /><ul><li>You can use the wildcard `*` which represents characters except `\\` or `/` (e.g. `src/*/test.h` matches `src/app/test.h` but does not match `src/app/widget/test.h` or `src/test.h`)</li><li>You can use the wildcard `**` which represents arbitrary characters (e.g. `src**test.h` matches `src/app/test.h` as well as `src/app/widget/test.h` or `src/test.h`)</li><li>You can make use of environment variables with `${ENV_VAR}`<br /><br />For instructions on how to add paths see [Path List Box](#path-list-box).</li></ul>\n| Source File Extensions | Define the valid extensions for source files including the dot e.g. `.ext`. Sourcetrail will only try to index files that match one of these extensions. If no extension is defined, any file extension is valid.\n\n# Code Editor Plugins\n\nIn order to make Sourcetrail the perfect partner for your development workflow you can connect Sourcetrail with different code editors. You can find more information on the plugins in Sourcetrail's download package located in the folder `/ide_plugins`. Have a look at the following list of supported code editors to find out what editors are currently supported.\n\nThe plugins are Opensource and available on [github](https://github.com/CoatiSoftware/).\n\n**Supported Editors:**\n\n* Atom\n* CLion\n* Eclipse\n* Emacs\n* IntelliJ IDEA (PyCharm, CLion, etc.)\n* Qt Creator\n* Sublime Text 2\n* Sublime Text 3\n* Vim\n* Visual Studio Code\n* Visual Studio 2012\n* Visual Studio 2013\n* Visual Studio 2015\n* Visual Studio 2017\n\nThe communication between Sourcetrail and the code editor is achieved using a local TCP connection. Sourcetrail uses the port 6667 to listen for incoming messages. Outgoing messages will be sent to the port 6666. The port numbers can be edited in the [Preferences Window](#preferences-window).\n\nOutgoing messages are in the form:\n`moveCursor>>absolute/file_path>>line_number>>column_number<EOM>`\nIncoming messages are in the form:\n`setActiveToken>>absolute/file_path>>line_number>>column_number<EOM>`\n\n## From Sourcetrail\n\nIf you want your editor to open a file at a specific location from within Sourcetrail, you can achieve this by either selecting the option `Set IDE Cursor` from the right-click menu in the <a href=\"#CodeView\">Code View]() or by simply clicking into a line in the [Code View](#code-view) while holding down the `Ctrl` or `Cmd` key.\n\n<img src=\"docs/documentation/plugin_use_in_sourcetrail.png\" width=\"600\" alt=\"Plugin Use In Sourcetrail\">\n\n## To Sourcetrail\n\nBy using a Sourcetrail plugin for your code editor, you can select a location within a source file and Sourcetrail will show you all symbols found at this location. Please have look at the list below to see which plugins are currently available and how they are used.\n\n### Atom\n\n**Repo**: [https://github.com/CoatiSoftware/atom-sourcetrail](https://github.com/CoatiSoftware/atom-sourcetrail)\n\n**Installation**\n\n1. In Atom go to Settings with `Edit -> Preferences` or `Ctrl` + `,`\n1. Go to Install and search for sourcetrail\n1. Install atom-sourcetrail\n\n**Use**\n\nTo start the Tcp Server got `Packages -> Sourcetrail -> Start Server`\nTo send a location to Sourcetrail, place the cursor and right-click and select `Send location to Sourcetrail`\nor `Packages -> Sourcetrail -> Send location to Sourcetrail`\n\n### CLion/IntelliJ IDEA\n\n**Repo**: [https://github.com/CoatiSoftware/idea-sourcetrail](https://github.com/CoatiSoftware/idea-sourcetrail)\n\n**Installation**\n\n1. File | Settings... (or IntelliJ IDEA | Preferences... for macOS) to open the Settings\n1. Go to Plugins\n1. Click Marketplace tab\n1. Search for idea-sourcetrail\n1. Click Install for idea-sourcetrail plugin\n\n**Use**\n\nIf you want IntelliJ IDEA/CLion to activate a certain element in Sourcetrail, right-click that element to\nbring up the context menu and choose the ‚ÄúSent Location‚Äù option.\n\n![\"Plugin Use In CLion\"](docs/documentation/plugin_use_in_clion.png \"Plugin Use In CLion\")\n\n### Eclipse\n\n**Repo**: [https://github.com/CoatiSoftware/eSourcetrail](https://github.com/CoatiSoftware/eSourcetrail)\n\n**Installation**\n\n* Updatesite:\n\t1. In Eclipse go in the menu to `Help -> Install new Software...`\n\t1. Add the Sourcetrail Updatesite\n\t\t* type [https://CoatiSoftware.github.io/eSourcetrail/updatesite](https://CoatiSoftware.github.io/eSourcetrail/updatesite) into the `Work with:` field\n\t\t* or press `Add...` and add the address above\n\t1. Select all and finish the next step.\n\t1. Eclipse needs to restart and can now communicate with Eclipse.\n* Manually:\n\t1. Download this [eSourcetrail-gh-pages.zip](https://github.com/CoatiSoftware/eSourcetrail/archive/gh-pages.zip) and unzip it.\n\t1. In Eclipse go in the menu to `Help -> Install new Software...`\n\t1. Click the `Add...` Button\n\t1. Click the `Local...` Button select the updatesite folder in the unzipped folder\n\t1. Select all and finish the next step.\n\t1. Eclipse needs to restart and can now communicate with Eclipse.\n\n**Use**\n\nIf you want Eclipse to activate a certain element in Sourcetrail, right-click that element to bring up the context menu and choose the ‚ÄúSet active Token‚Äù option.\n\n![\"Plugin Use In Eclipse\"](docs/documentation/plugin_use_in_eclipse.png \"Plugin Use In Eclipse\")\n\n### Emacs\n\n**Repo**: [https://github.com/CoatiSoftware/emacs-sourcetrail](https://github.com/CoatiSoftware/emacs-sourcetrail)\n\n**Installation**\n\n* Manually\n\t1. Download the sourcetrail.el from [https://github.com/CoatiSoftware/emacs-sourcetrail](https://github.com/CoatiSoftware/emacs-sourcetrail)\n\t1. In Emacs press `M` + `x` and type in `package-install-file`\n\t1. Type in the path to the downloaded sourcetrail.el file\n* Melpa\n\t1. Add Melpa to your package-archives\n\t1. Press `M` + `x` and type `list-packages`\n\t1. Search for sourcetrail and mark sourcetrail with `i` then press `x` and the confirm with yes\n\n**Use**\n\nIf you want Emacs to activate a certain element in Sourcetrail, set your cursor to that element and\n`M` + `x` and type in `sourcetrail-send-location`.\nTo get Location from Sourcetrail the sourcetrail-mode need to be active. To active the sourcetrail-mode\npress `M` + `x` and type in `sourcetrail-mode`\n\n### Qt Creator\n\n**Repo**: [https://github.com/CoatiSoftware/qtc-sourcetrail](https://github.com/CoatiSoftware/qtc-sourcetrail)\n\n**Installation**\n\n1. Download the plugin for your system from [here](https://github.com/CoatiSoftware/qtc-sourcetrail/releases).\n1. Copy the files into the plugin folder where the QtCreator is installed(eg. /usr/lib/qtcreator/plugins)\n\t* the plugin path can be found at Help -> System Information... -> PluginsPath\n\n**Use**\n\nIf you want QtCreator to activate a certain element in Sourcetrail, click a location to place the cursor, right-click to bring up the context menu and choose the ‚ÄúSourcetrail - Set active Token‚Äù option. Please note that the position of the cursor will be sent to Sourcetrail and not the position you opened the context menu at.\n\n### Sublime Text\n\n**Repo**: [https://github.com/CoatiSoftware/sublime-sourcetrail](https://github.com/CoatiSoftware/sublime-sourcetrail)\n\n**Installation**\n\n* Manually\n\t1. To install the Sourcetrail plugin for Sublime Text copy the SourcetrailPlugin folder located in your `ide_plugins/sublime_text` to your `SublimeText/Packages` folder\n\t1. restart Sublime\n* Package Control\n\t1. If you don't have Package Control for Sublime go to https://packagecontrol.io and install it\n\t1. Open Command Palette  with `Ctrl` + `Shift` + `P`\n\t1. Select `Package Control: Install Package`\n\t1. Install `sourcetrail`\n\n**Use**\n\nIf you want Sublime to activate a certain element in Sourcetrail, click a location to place the cursor, right-click to bring up the context menu and choose the ‚ÄúSourcetrail - Set active Token‚Äù option. Please note that the position of the cursor will be sent to Sourcetrail and not the position you opened the context menu at.\n\n<img src=\"docs/documentation/plugin_use_in_sublime_text.png\" width=\"600\" alt=\"Plugin Use In Sublime Text\">\n\n### Vim\n\n**Repo**: [https://github.com/CoatiSoftware/vim-sourcetrail](https://github.com/CoatiSoftware/vim-sourcetrail)\n\n**Installation**\n\nPlease visit the [vim-sourcetrail](https://github.com/CoatiSoftware/vim-sourcetrail) repository on GitHub for details.\n\n**Use**\n\nIf you want Vim to activate a certain element in Sourcetrail, go to the code location and use\n`:SourcetrailActivateToken`, now Sourcetrail should display your the chosen location.\nUse`:help sourcetrail.txt` get get more information about the plugin\n\n### VS Code\n\n**Repo**: [https://github.com/CoatiSoftware/vsce-sourcetrail](https://github.com/CoatiSoftware/vsce-sourcetrail)\n\n**Installation**\n\n1. In VS Code go to Extensions(`Ctrl` + `Shift` + `X`)\n1. Search for sourcetrail in the marketplace\n1. Install sourcetrail\n\n**Use**\n\nTo start the Tcp Server go to the Command Palette(`Ctrl` + `Shift` + `P`) and type: `Sourcetrail: (Re)start server`\nTo send a location to Sourcetrail, place the cursor and right-click and select `Sourcetrail: Send Location`\nor type in the Command Palette: `Sourcetrail: Send Location`\n\n### Visual Studio\n\n**Download, Reviews:**\n[Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=vs-publisher-1208751.SourcetrailExtension)\n\n**Repo**: [https://github.com/CoatiSoftware/vs-sourcetrail](https://github.com/CoatiSoftware/vs-sourcetrail)\n\n**Installation**\n\n1. open Visual Studio\n1. from the menu bar select \"Tools\" -> \"Extensions and Updates...\"\n1. in the \"Extensions and Updates\" dialog choose \"Online\" -> \"Visual Studio Gallery\"\n1. press `Ctrl` + `E` and enter \"Sourcetrail Extension\" into the search bar\n1. click the install button\n\n**Use**\n\nIf you want Visual Studio to activate a certain element in Sourcetrail, right-click that element to bring up the context menu and choose the ‚ÄúSet active Token‚Äù option.\n\n![\"Plugin Use In Visual Studio\"](docs/documentation/plugin_use_in_visual_studio.png \"Plugin Use In Visual Studio\")\n\n**Create a Clang Compilation Database from a VS Solution**\n\nAs a Clang based tool Sourcetrail supports the JSON Compilation Database format for simplified project setup. This extension enables you to generate a JSON Compilation Database from your Visual Studio projects and solutions. The great news is: This format is independent from the Sourcetrail tool, so you can also use the generated Compilation Database to run other Clang based tools.\nThe wizard for creating a Compilation Database is located in the Sourcetrail section in the VS menu bar. Note that the option is only useable if a solution containing at least one C/C++ project is loaded.\n\n![\"VS Plugin Menu\"](docs/documentation/vs_plugin_menu.png \"VS Plugin Menu\")\n\nIn the Compilation Database wizard you can select projects you want to include in the JSON file as well as the desired build target platform and configuration and a number of other options.\n\n![\"VS Extension Dialog\"](docs/documentation/vs_extension_dialog.png \"VS Extension Dialog\")\n\n| Option | Description\n| --- | ---\n| Select Projects | The list of C/C++ projects in your solution. Check all projects you want to be included in the generated JSON Compilation Database file.\n| De/Select All | Will select all projects if at least one project is not selected. If all projects are selected they will all be unselected.\n| Configuration | A dropdown list of the available build configurations. The selected configuration affects include paths and compile flags for the Compilation Database.\n| Platform | A dropdown list of the available target platforms. The selected platform affects include paths and compile flags for the Compilation Database.\n| Browse | Opens a folder browser to select the directory where the Compilation Database will be created in. By default it is the directory of your solution. Instead of using the folder browser you can also paste a path into the adjacent text field.\n| filename | This is the name for the Compilation Database file. By default it is the same name as your solution.\n| C Standard | A dropdown list of all C standards supported by Sourcetrail. If your projects contain C files select the appropriate standard.\n| Cancel | Aborts the process and closes the wizard.\n| Create | Creates the Compilation Database using the specified options. Note that at least one project has to be selected to start creating.\n\nOnce the Compilation Database was successfully created it can be found in the specified target directory. From this Compilation Database you can create a Sourcetrail project as [described above](#create-a-project-from-compilation-database).\n\n**Settings**\nNetwork settings and logging options can be changed in the plugin's Tools/Options entry.\n\n![\"VS Plugin Ports 0\"](docs/documentation/vs_plugin_ports_0.png \"VS Plugin Ports 0\")\n![\"VS Plugin Ports 1\"](docs/documentation/vs_plugin_ports_1.png \"VS Plugin Ports 1\")\n\n| Option | Description\n| --- | ---\n| File Logging | Enable log output for the plugin. Additionally to the output file, log messages will also be displayed in VS'\n| Log Obfuscation | Obfuscate project names and file names as well as directories in the log output. Note that already logged data **will not be obfuscated retroactively**. A dictionary, mapping obfuscated names to original names, will be created in a separate file.\n| Sourcetrail Port | The port on which Sourcetrail will receive messages. Note that this must match the port setting in Sourcetrail itself.\n| Thread Count | The number of threads used during creation of the Compilation Database\n| VS Port | The port on which Visual Studio will receive messages. Note that this must match the port setting in Sourcetrail itself.\n\n**Logging**\n\nThe plugin offers optional file logging. Should you ever have issues with the plugin we recommend to turn logging on. This will help to pinpoint and resolve the root cause faster.\nLogs will be created in `..\\AppData\\Local\\Coati Software\\Plugins\\VS` folder. A new log file will be created every time you restart VS and logging is enabled.\n\n![\"VS Log Folder\"](docs/documentation/vs_log_folder.png \"VS Log Folder\")\n\nNote that the logs will include project names and file names as well as directories specific to your project. If you wish to keep this information secret you can enable [log obfuscation](#vs-plugin-option-obfuscation).\nProject- and file names as well as directories will be replaced by an alphanumeric sequence. The sequence has the form `a0, b0, c0,..., a1, b1, c1,...`. Note that after switching on obfuscation, already logged data **will not be obfuscated retroactively**. No log files will be send to Coati Software automatically. You can check any file you may want to send us for sensible information before sending it.\nA dictionary, mapping obfuscated names to original names, will be created in your log folder if log obfuscation is switched on. When during the support process we refer to project items by their obfuscated name you can still make sense of it. **Do not send the dictionary to anybody else**.\n\nLastly, log messages are also displayed in the VS output window. This is tied to file logging and is not enabled or disabled separately.\n\n![\"VS Output Window\"](docs/documentation/vs_output_window.png \"VS Output Window\")\n\n## IDE Communication Protocol\n\nSourcetrail's IDE plugins communicate with Sourcetrail via sockets, using TCP. Sourcetrail implements a number of messages to provide an interface for the plugins.\nThis chapter explains the general structure of those messages, followed by a list of possible message types.\n\n### Message Structure\n\nThe basic structure of the messages used by Sourcetrail plugins consists of a prefix to identify the message type, followed by no, one, or multiple parameters and ends with an 'end-of-message' token. Parameters and tokens are separated by a 'divider' token.\n\n| Name | Token | Description\n| --- | --- | ---\n| messageType | [see below](#message-types) | A string that determines how the message will be interpreted by Sourcetrail or the plugin\n| divider | `>>` | Separates the tokens of the message\n| parameter | [see below](#message-types) | Typically an integer or string\n| endOfMessage | `<EOM>` | Helps to determine the end of a message\n\nMessages have the following form:\n\n`messageType<<parameter<<...<<parameter<EOM>`\n\n### Message Types\n\nSourcetrail does implement a number of message types that can be used by Sourcetrail plugins. In the following is a list of the messages that Sourcetrail may send to plugins and messages that may be sent by a plugin to Sourcetrail.\n\nNote that you can chose which messages you want to implement. Sourcetrail will not make problems if you chose to ignore certain messages.\n\n**Incoming messages**\nThese messages may be received by a plugin.\n\n| Message | Parameters | Description\n| --- | --- | ---\n| `moveCursor` | `fileLocation: string`<br />`row: integer`<br />`column: integer` | Set the cursor of your editor or IDE to the given file location.<br />Note that fileLocation is the absolute path and name of the target file.\n| `createCDB` |  | Sourcetrail may send this message to prompt your plugin to create a Compilation Database (CDB). Once the CDB is ready you may want to respond with a `createCDBProject` message.\n| `ping` |  | Sourcetrail may send a ping to determine if anybody is listening. Respond with a ping message yourself. Sourcetrail will not respond to this message.\n\n**Outgoing messages**\nYour plugin may send these messages to Sourcetrail.\n\n| Message | Parameters | Description\n| --- | --- | ---\n| `setActiveToken` | `fileLocation: string`<br />`row: integer`<br />`column: integer` | Tells Sourcetrail to shift focus to the token located at the given position. Note that fileLocation is the absolute path and name of the target file.\n| `createCDBProject` | `cdbPath: string`<br />`headerPaths: string` | If your plugin can provide a Compilation Database this message can prompt Sourcetrail to import it and display an appropriate dialog for the user. headerPaths is a list of the base project's header include paths. Separate the single paths using the divider token. You can add as many paths as you need.\n| `ping` |  | Your plugin may send this message to Sourcetrail to tell it it's listening.\n\n# Frequently Asked Questions\n\n### Can I use Sourcetrail on confidential source code?\n\nYes. Sourcetrail keeps the data completely offline and unless disabled, will only establish a connection to the internet to check if a more recent version is available.\n\n### What happens to the indexed data?\n\nSourcetrail does two things with the data collected during indexing:\n\n1. The data is stored in the `.srctrldb` file which is in the same directory as the `.srctrlprj` file. This database file is used by Sourcetrail to serve its purpose of letting you navigate your source code and also allowing Sourcetrail to re-open the project without re-indexing the source code each time.\n1. If logging is enabled, some of the data gets logged into a log file saved in [data](#datafolter)/logs. These logs can be useful to us for fixing bugs. We may ask for log information on bug reports, but you should only provide it, if your source code is not confidential.\n\n**Note:** The ` .srctrldb ` file is actually a ` .sqlite ` database file and can be inspected using the [DB Browser for SQLite](https://sqlitebrowser.org/).\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.322265625,
          "content": "# Sourcetrail\n\n*__Important Note:__ This project was archived by the original autors and maintainers of Sourcetrail by the end of 2021. If you want to know more about this decision, read more on our [blog](https://web.archive.org/web/20211119200517/https://www.sourcetrail.com/blog/).*\n\nSourcetrail is a free and open-source cross-platform source explorer that helps you get productive on unfamiliar source code.\n\nWindows: [![Build status](https://ci.appveyor.com/api/projects/status/0c258a2opn3loyc2/branch/master?svg=true)](https://ci.appveyor.com/project/mlangkabel/sourcetrail/branch/master)\n\nLinux: [![Build Status](https://travis-ci.org/CoatiSoftware/Sourcetrail.svg?branch=master)](https://travis-ci.org/CoatiSoftware/Sourcetrail)\n\n__Links__\n* [Download](https://github.com/CoatiSoftware/Sourcetrail/releases)\n* [Quick Start Guide](DOCUMENTATION.md#getting-started)\n* [Documentation](DOCUMENTATION.md)\n* [Changelog](CHANGELOG.md)\n\n![\"Sourcetrail User Interface\"](docs/readme/user_interface.png \"Sourcetrail User Interface\")\n\nSourcetrail is:\n* free\n* working offline\n* operating on Windows, macOS and Linux\n* supporting C, C++, Java and Python\n* offering an SDK ([SourcetrailDB](https://github.com/CoatiSoftware/SourcetrailDB)) to write custom language extensions\n\n## Sourcetrail on Patreon\n\nThe open-source development and regular software releases are made possible entirely by the support of [these awesome patrons](SPONSORS.md)!\n\n## Using Sourcetrail\n\nTo setup Sourcetrail on your machine, you can either download the respective build for your operating system from our list of [Releases](https://github.com/CoatiSoftware/Sourcetrail/releases) and install it on your machine, or use one of the following package managers:\n\n* Use the [Chocolatey package](https://chocolatey.org/packages/sourcetrail) with `choco install sourcetrail`\n\nAfter your installation is complete, follow our [Quick Start Guide](DOCUMENTATION.md#getting-started) to get to know Sourcetrail.\n\n## How to Report Issues\n\nYou can post all your feature requests and bug reports on our [issue tracker](https://github.com/CoatiSoftware/Sourcetrail/issues).\n\n### Reporting\n\nUse the following template:\n\n* platform version:\n* Sourcetrail version:\n* description of the problem:\n* steps to reproduce the problem:\n\n### Supporting\n\nIf you want to support a certain feature request or you have the same bug that another user already reported, please let us know:\n* post a comment with \"+1\" to the issue\n* or send an email to support@sourcetrail.com with the issue ID\n\n## How to Contribute\n\n* Please read and follow the steps in [CONTRIBUTING.md](CONTRIBUTING.md) file.\n* You may want to look out for issues labeled [good first issue](https://github.com/CoatiSoftware/Sourcetrail/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) to find some initial tasks to tackle.\n* If you are looking for more information about Sourcetrail software development, please refer to our [wiki](https://github.com/CoatiSoftware/Sourcetrail/wiki).\n\n# How to Build\n\nBuilding Sourcetrail requires several dependencies to be in place on your machine. However, our CMake based setup allows to disable indexing support for specific languages which reduces the number of dependencies to a minimum.\n\n## Building the Base Application\n\n### Required Tools\n\n* __CMake v3.12 (required for Windows, Linux and MacOS)__\n    * __Reason__: Used to generate a build configuration for your build system\n    * __Download__: https://cmake.org/download\n\n* __Git (required for Windows, Linux and MacOS)__\n    * __Reason__: Used for version control and to automatically generate the Sourcetrail version number from commits and tags\n    * __Download__: https://git-scm.com/download\n    * __Remarks__: Make sure `git` is added to your `PATH` environment variable before running CMake\n\n* __Visual Studio (required for Windows)__\n    * __Reason__: Used for building Sourcetrail\n    * __Download__: https://visualstudio.microsoft.com/downloads/\n\n* __ccache (optional for Linux and MacOS)__\n    * __Reason__: Used to speed up rebuilds if found in `PATH`\n    * __Download__: https://ccache.dev/download.html\n\n### Required dependencies\n\n* __Boost 1.67__\n    * __Reason__: Used for file system access and interprocess communication\n    * __Prebuilt Download for Windows__: https://sourceforge.net/projects/boost/files/boost-binaries/\n    * __Building for Unix__:\n        ```\n        $ ./bootstrap.sh --with-libraries=filesystem,program_options,system,date_time\n        $ ./b2 --link=static --variant=release --threading=multi --runtime-link=static --cxxflags=-fPIC\n        ```\n\n* __Qt 5.12.3__\n    * __Reason__: Used for rendering the GUI and for starting additional (indexer) processes.\n    * __Prebuilt Download__: http://download.qt.io/official_releases/qt/\n\n### Building\n\n#### On Windows\n* To set up your build environment run:\n    ```\n    $ git clone https://github.com/CoatiSoftware/Sourcetrail.git\n    $ cd Sourcetrail\n    $ mkdir -p build/win64\n    $ cd build/win64\n    $ cmake -G \"Visual Studio 15 2017 Win64\" -DBOOST_ROOT=<path/to/boost_1_67_0> -DQt5_DIR=<path/to/Qt/version/platform/compiler/lib/cmake/Qt5> ../..\n    ```\n    _Hint: If you are using the CMake GUI, we recommend that you activate advanced mode. Also you may be required to add some of the defines via the \"Add Entry\" button._\n\n* After generating the build configuration, just open the Sourcetrail.sln file that was generated by CMake and build the Sourcetrail project.\n\n#### On Unix\n\n* To set up your build environment run:\n    ```\n    $ cd Sourcetrail\n    $ mkdir -p build/Release\n    $ cd build/Release\n    $ cmake -DCMAKE_BUILD_TYPE=\"Release\" -DBOOST_ROOT=<path/to/boost_1_67_0> -DQt5_DIR=<path/to/Qt/version/platform/compiler/lib/cmake/Qt5> ../..\n    ```\n* Now start the build with:\n    ```\n    $ make Sourcetrail\n    ```\n\n### Running\n\n* Run Sourcetrail from within the build directory. During execution Sourcetrail needs resources from `bin/app/data` and `bin/app/user`. CMake creates symlinks within the build directory that make these directories accessible.\n\n\n## Enable C/C++ Language Support\n\n### Required dependencies\n\n* __LLVM/Clang 11.0.0__\n    * __Reason__: Used for running the preprocessor on the indexed source code, building and traversing an Abstract Syntax Tree and generating error messages.\n    * __Building__: Make sure to check out the correct tag: `git checkout llvmorg-11.0.0`\n    * __Building for Windows__: Follow [these steps](https://clang.llvm.org/get_started.html) to build the project. Run the cmake command exactly as described.\n    * __Building for Unix__: Follow this [installation guide](http://clang.llvm.org/docs/LibASTMatchersTutorial.html) to build the project. Make sure to build with `-DLLVM_ENABLE_RTTI=ON`.\n\n### Building\n\n* Run CMake with these additional options:\n    ```\n    -DClang_DIR=<path/to/llvm_build>/lib/cmake/clang\n    -DBUILD_CXX_LANGUAGE_PACKAGE=ON\n    ```\n* Build Sourcetrail as described [above](#building).\n\n## Enable Java Language Support\n\n### Required dependencies\n\n* __JDK 1.8__\n    * __Reason__: Used to build the Java indexer and make it callable from the C++ code via JNI.\n    * __Remarks__: Make sure that `<jdk_root>/bin` is available in your `PATH` environment variable and that the `JAVA_HOME` environment variable is set:\n        ```\n        JAVA_HOME=<path/to/Java>/jdk1.x.x_xxx\n        ```\n\n* __Maven__\n    * __REASON__: Used within Sourcetrail's automated tests.\n    * __Remarks__:  Make sure `.../apache-maven-x.x.x/bin` is available in your `PATH` environment variable and that both `M2_HOME` and `MAVEN_HOME` environment variables are set:\n        ```\n        M2_HOME=.../apache-maven-x.x.x\n        MAVEN_HOME=.../apache-maven-x.x.x\n        ```\n\n### Building\n\n* Run CMake with these additional options:\n    ```\n    -DBUILD_JAVA_LANGUAGE_PACKAGE=ON\n    ```\n* Build Sourcetrail as described [above](#building).\n\n## Enable Python Language Support\n\n### Required Tools\n\n* __7z (required for Windows)__\n    * __REASON__: Used to extract the prebuilt SourcetrailPythonIndexer which is downloaded automatically during build execution.\n\n### Building\n\n* Run CMake with these additional options:\n    ```\n    -DBUILD_PYTHON_LANGUAGE_PACKAGE=ON\n    ```\n* Build Sourcetrail as described [above](#building).\n\n\n## Creating the deployment Package\n\n### Windows\n\n#### Required Tools\n\n* __Visual Studio (required for Windows)__\n    * __Reason__: Used for building the Sourcetrail Windows installer.\n    * __Remarks__: Make sure to install the `.Net desktop development` workload.\n    * __Download__: https://visualstudio.microsoft.com/downloads/\n\n* __Wix 3.11__\n    * __Reason__: Used to build the `sourcetrail.msi` Windows installer.\n    * __Remarks__: Make sure to add `<path/to>/WiX Toolset v3.11/bin` to your `PATH` environment variable.\n    * __Download__: https://wixtoolset.org/releases/\n\n* __Wix extension for Visual Studio__\n    * __Reason__: Used to run Wix from the Visual Studio build environment.\n    * __Download__: https://marketplace.visualstudio.com/items?itemName=WixToolset.WixToolsetVisualStudio2017Extension\n\n* __JRE__\n    * __Reason__: Used for indexing the java sample project that ships with the package.\n\n* __WinRAR__\n    * __Reason__: Used for creating the final zip files for the installer and the portable package.\n    * __Remarks__: Make sure to add `<path/to>/WinRAR` to your `PATH` environment variable.\n\n#### Building\n\n* Run `./script/deploy_windows.sh` from your Developer Command Prompt for Visual Studio. The script which will generate a 64bit build and packages it into a portable `.zip` file and a Wix-based Windows installer, each.\n\n### macOS\n\nAfter building, run the `bundle_install.sh` script within the build directory which will create a `Sourcetrail.app` bundle and generate a `Sourcetrail_<version>.dmg` container.\n\n### Linux\n\nRun `./setup/Linux/createPackages.sh` from the main directory, which creates both a `.tar.gz` and a `.AppImage` package in the main directory. Packaging depends on [linuxdeployqt](https://github.com/probonopd/linuxdeployqt).\n\n\n# How to Run the Tests\n\nThe automated test suite of Sourcetrail is powered by [Catch2](https://github.com/catchorg/Catch2). To run the tests, simply execute the `Sourcetrail_test` binary. Before executing, please make sure to set the working directory to `./bin/test`.\n\n\n# License\n\nSourcetrail is licensed under the [GNU General Public License Version 3](LICENSE.txt).\n\n# Trademark\n\nThe \"Sourcetrail\" name is a trademark owned by Coati Software and is not included within the assets licensed under the GNU GPLv3.\n"
        },
        {
          "name": "SPONSORS.md",
          "type": "blob",
          "size": 1.2314453125,
          "content": "# Sponsors\n\nSponsors [via Patreon](https://www.patreon.com/sourcetrail).\n\n## Legendary Coatis\n\n* Akinobu Fujii\n* Chris Anderson\n* David Manouchehri\n* Manik Singhal\n* Mario van Beek\n* Tai-Wu Chiang\n* Timothee Besset\n\n## Super Coatis\n\n* Alexis Jeandet\n* Anshu Mathur\n* Anthony Marchini\n* Chris Morley\n* dsp\n* Edward Gibbs\n* Georg Friedrich\n* Jean-Luc Burhop\n* Jonathan Nemo\n* Kikuchi Takanori\n* Konstantin Kirenko\n* Louis St-Amour\n* Mario Lioni\n* Simon Pintarelli\n* William Wold\n* XTRON777\n\n## Regular Coatis\n\n* Alex B\n* Andreas\n* anonymous\n* Anton\n* Bicakci, Inc.\n* BJ\n* Christian Hipp\n* Daniel Nissenbaum\n* Dio Lee\n* Ferenc Fejes\n* Frederic Simonis\n* Friedrich Hunstock\n* Graydon Hoare\n* IndustrialRobot\n* Jason Stevens\n* Jeffrey Hofer\n* John Borland\n* kagusanto\n* kale\n* MangerDesPates\n* Matƒõj T√Ωƒç\n* Matt Alexander\n* Max Bruckner\n* Michael F. Sch√∂nitzer\n* Nakul Dhotre\n* Nathan\n* Nathan Loofbourrow\n* Neil Horlock\n* Nick Moore\n* Nils Moehrle\n* Ouaf\n* Pierre Fransson\n* R√©mi Cohen-Scali\n* Robokitty\n* Rui Pires\n* Ryo Koyama\n* Saket Sinha\n* Sam Tuke\n* Simon\n* Sneakyferret\n* Sophie Winter\n* Stephan Roslen\n* Thorsten Dahlheimer\n* Tomi Joki-Korpela\n* Tony Hong\n* Traxes\n* Werner de Groot\n* X. Xu\n* Yacob Cohen-Arazi\n* Yang, Wenbo\n* ÂãáÁî∑ ÈáëÂ≠ê\n* ÈÉùÊô®ÁÖú\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.3427734375,
          "content": "version: 0.0.0.{build}\nimage: Visual Studio 2017\n\ninstall:\n  ############################################################################\n  # Install Ninja\n  ############################################################################\n  - set NINJA_URL=\"https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip\"\n  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip\n  - 7z x ninja.zip -oC:\\projects\\deps\\ninja > nul\n  - set PATH=C:\\projects\\deps\\ninja;%PATH%\n  - ninja --version\n\nbefore_build:\n    - mkdir build\n    - cd build\n    - mkdir temp\n    - cd ../\n    - cd build\n    - mkdir win64\n    - cd win64\n    - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" amd64\n    - cmake -G \"Ninja\" -DBOOST_ROOT=C:/Libraries/boost_1_69_0 -DQt5_DIR=C:/Qt/5.12.6/msvc2017_64/lib/cmake/Qt5 -DBUILD_JAVA_LANGUAGE_PACKAGE=ON -DBUILD_PYTHON_LANGUAGE_PACKAGE=ON -DCMAKE_BUILD_TYPE=Release ../../\n    - cd ../../\n\nbuild_script:\n    - cd build/win64\n    - ninja\n    - cd ../../\n\ntest_script:\n    - cd bin/app\n    - ..\\..\\build\\win64\\Release\\app\\Sourcetrail.exe config -j \"C:/Program Files/Java/jdk1.8.0/jre/bin/server/jvm.dll\"\n    - cd ../../\n    - ps: copy bin/app/user/ApplicationSettings.xml bin/test/data/TestSettings.xml\n    - cd bin/test\n    - ..\\..\\build\\win64\\Release\\test\\Sourcetrail_test.exe\n    - cd ../../\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide_plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "java_indexer",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}