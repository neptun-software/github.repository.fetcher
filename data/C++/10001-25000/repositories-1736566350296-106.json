{
  "metadata": {
    "timestamp": 1736566350296,
    "page": 106,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mobile-shell/mosh",
      "stars": 12758,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.5556640625,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: Mozilla\nColumnLimit: 116\nSpacesInParentheses: true\nAlwaysBreakAfterReturnType: None\nAlwaysBreakAfterDefinitionReturnType: None\nSpaceBeforeCpp11BracedList: true\nBreakBeforeBinaryOperators: All\nCpp11BracedListStyle: true\nAllowShortBlocksOnASingleLine: Always\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass: true\n  AfterControlStatement: Never\n  AfterFunction: true\n  AfterStruct: true\n  AfterEnum: true\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakConstructorInitializers: BeforeColon\n...\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "* text=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4677734375,
          "content": "*.a\n*.o\n*.pb.cc\n*.pb.h\n*~\n.deps\nMakefile\nMakefile.in\n.cproject\n.project\ncompile_commands.json\naminclude_static.am\n\n# Coverage artifacts\n*.gcda\n*.gcno\n*-coverage.info\n*-coverage\n\n/INSTALL\n/aclocal.m4\n/ar-lib\n/autom4te.cache\n/compile\nsrc/include/config.h\nsrc/include/config.h.in\nsrc/include/config.h.in~\n/config.log\n/config.status\n/configure\n/depcomp\n/install-sh\n/missing\n/mosh-*.tar.gz\nsrc/include/stamp-h1\n/test-driver\n/VERSION\n/VERSION.stamp\n/scripts/mosh\nsrc/include/version.h\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.107421875,
          "content": "Keith Winstein <mosh-devel@mit.edu>\nAnders Kaseorg\nQuentin Smith\nRichard Tibbetts\nKeegan McAllister\nJohn Hood\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "COPYING.iOS",
          "type": "blob",
          "size": 0.7373046875,
          "content": "The Mosh developers are aware that the terms of service that apply to\napps distributed via Apple's App Store services may conflict with\nrights granted under Mosh's license, the GNU General Public License,\nversion 3. The Mosh copyright holders do not wish this conflict to\nprevent the otherwise-compliant distribution of Mosh-derived apps via\nthe App Store. Therefore, we have committed not to pursue any license\nviolation that results solely from the conflict between the GPLv3 and\nthe Apple App Store terms of service. In other words, as long as you\ncomply with the GPL in all other respects, including its requirements\nto provide users with source code and the text of the license, we will\nnot object to your distribution of Mosh through the App Store.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 16.1142578125,
          "content": "2017-07-21 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.3.2 released.\n\n\t* Platform support:\n\t\t* Explicitly enable binding to both IPv4 and IPv6 addresses.\n\t\t  (Giel van Schijndel)\n\t\t* Restore perl 5.8.8 support for RHEL5.  (Alexander Chernyakhovsky)\n\t\t* Make tests detect UTF-8 locale with a helper executable.  (John Hood)\n\t\t* Don't print /etc/motd on IllumOS.  (John Hood)\n\t\t* Print {,/var}/run/motd.dynamic on Ubuntu.  (John Hood)\n\t\t* Fix build on Haiku. (Adrien Destugues)\n\t\t* Disable unicode-later-combining.test for tmux 2.4.\n\t\t  This fixes build failures.  (John Hood)\n\n\t* Bug fixes:\n\t\t* In tests, explicitly set 80x24 tmux window, for newer versions\n\t\t  of tmux.  (John Hood)\n\t\t* Work around JuiceSSH rendering bug.  (John Hood)\n\t\t* Do not move cursor for SCROLL UP and SCROLL DOWN--\n\t\t  fixes an issue with tmux 2.4.  (John Hood)\n\n2017-03-25 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.3.0 released.\n\n\t* New features:\n\t\t* Change website URLs from http://mosh.mit.edu to\n\t\t  https://mosh.org.  (Keith Winstein)\n\t\t* Add --no-ssh-pty option for Dropbear compatibility and\n\t\t  other issues.\n\t\t* Switch to semantic versioning, making this version 1.3.0\n\t\t  instead of 1.2.7.\n\n\t* Platform support:\n\t\t* Added nonce-incrementing test.  (Keith Winstein)\n\t\t* Add build-source-package.sh for Debian.  (Keith Winstein)\n\t\t* Fix CPPFLAGS handling possibly causing curses detection\n\t\t  failure.  (John Hood)\n\t\t* Add an Appveyor/Cygwin CI build.\n\t\t* Improve warning-flags detection for 'make distcheck'.  (John Hood)\n\t\t* Improve robustness of regression tests.  (John Hood)\n\t\t* Support OpenBSD pledge() sandboxing.  (John Hood)\n\t\t* Use backward-compatible name for AES in\n\t\t  AppleCommonCrypto, fixing builds with older OS X SDKs.  (John Hood)\n\t\t* Detect clock_gettime() and CLOCK_MONOTONIC carefully,\n\t\t  fixing OS X 10.12 + Xcode 7.3 builds.  (John Hood)\n\t\t* Support older versions of Perl, back to 5.10, fixing\n\t\t  RHEL 5 builds. (Anders Kaseorg)\n\t\t* Add a Travis OS X CI and release build.  (John Hood)\n\t\t* Add --help and --version, enabling Automake's\n\t\t 'std-options' checks.  (Anders Kaseorg)\n\t\t* Add a simple smoke test not requiring tmux, to help\n\t\t  validate builds on older platforms including RHEL 5. (Anders Kaseorg)\n\t\t* Check for presence of clock_gettime() for OS X, where\n\t\t  the symbol may not be resolved on older OS X versions.  (John\n\t\t  Hood)\n\t\t* Fix a memory alignment issue in OCB with ARM/Neon. (Carlos Cabanero)\n\t\t* Mosh now runs correctly on Bash for Windows with Windows 10\n\t\t  Insider builds 15002 and higher. (No change in Mosh)\n\t\t* Other minor platform compatibility fixes for Mosh\n\t\t  sources and tests.  (John Hood)\n\n\t* Bug fixes:\n\t\t* Work around a pty buffering issue causing failed\n\t\t  connections on FreeBSD 11, or with Dropbear.  (John Hood)\n\t\t* Restore '-p 0' option for OS-selected UDP port bindings.  (John Hood)\n\t\t* Shell hygiene fixes, including better quoting of\n\t\t  pathnames.  (Anders Kaseorg)\n\t\t* Fix typos in project docs.  (Jakub Wilk)\n\t\t* Fix excess newlines on mosh client startup/shutdown.  (John Hood)\n\t\t* Exit gracefully, closing session, on pty write or ioctl failure.  (John Hood)\n\t\t* Fix two bugs that caused mosh-server to consume\n\t\t  excessive CPU in certain circumstances.  (John Hood)\n\t\t* Fix bug that caused text copied from mosh-client to\n\t\t  paste as long lines joined by spaces.  (John Hood)\n\t\t* Documentation improvements. (chenxiaoqino, Ashish Gupta)\n\t\t* Use getuid(), not geteuid(), for correct getpw* lookups.  (John Hood)\n\n2016-08-10 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.2.6 released.\n\n\t* New features:\n\t\t* Add Travis CI builds for Linux and Mac.  (Anders Kaseorg, others)\n\t\t* Add a --local option to run without ssh.  (John Hood)\n\t\t* Mosh now returns exitstatus reflecting connection success.\n\t\t  (John Hood)\n\t\t* Add an end-to-end test suite and many tests.  (John Hood)\n\t\t* Implement timeouts and signals to help address orphaned sessions.\n\t\t  (John Hood)\n\t\t* Major rework of Mosh's display differencing/rendering\n\t\t  code with much improved performance for slow machines.  (John Hood)\n\t\t* Implement ANSI back/forward tab (CSI CBT, CSI CHT).\n\t\t  (John Hood)\n\t\t* Do not start user shell until network session starts.\n\t\t  (John Hood)\n\t\t* Add options for more flexible specification of IPv4/IPv6\n\t\t  hostname resolution.  (John Hood)\n\t\t* Improved bash completion.  (Steve Dignam, HIGUCHI Yuta)\n\t\t* Add options for different methods of resolving the remote host\n\t\t  address, allowing operation without SshProxyCommand.  (John Hood)\n\n\t* Platform support:\n\t\t* Add configurable support for Apple Common Crypto and\n\t\t  Nettle, in place of OpenSSL.  Implement base64 locally.\n\t\t  (John Hood)\n\t\t* Workaround Cygwin select() bug.  (John Hood)\n\t\t* Updates to Debian packaging.  (Anders Kaseorg, Keith Winstein)\n\t\t* Workaround a glibc-2.22 issue causing segfaults on Debian Sid.\n\t\t  (John Hood with help from many others)\n\t\t* Prefer c++ to g++, for systems like FreeBSD where g++ is not usable.\n\t\t  (John Hood)\n\t\t* Fixes for Illumos Hipster 20151003.  (John Hood)\n\t\t* Disable -Werror for protobuf code, to resolve a new gcc6 warning.\n\t\t  (John Hood)\n\t\t* Link test for -fstack-protector-all on an embedded platform.\n\t\t  (Baruch Siach)\n\t\t* Resolve issue with bswap64() on FreeBSD-CURRENT with libc++-3.8.0.\n\t\t  (John Hood)\n\t\t* Fix issue with RECVTOS error message on client on FreeBSD.\n\t\t  (John Hood)\n\n\t* Bug fixes:\n\t\t* Remove an assertion causing aborts on Unicode fallback found by\n\t\t  fuzzing with afl.  (Keith Winstein)\n\t\t* Fix a server hang with XON/XOFF on BSD systems.  (John Hood)\n\t\t* Fix a typeahead-prediction bug that caused display corruption on\n\t\t  urxvt.  (John Hood)\n\n2015-07-12 Keith Winstein <mosh-devel@mit.edu>\n\n       * Version 1.2.5 released.\n\n       * New features:\n               * Bind to a specific IP address with --bind-server. (Philipp\n\t\t Haselwarter)\n               * MOSH_ESCAPE_KEY configures escape character.  (Timo\n\t\t J. Rinne)\n               * Support non-roaming IPv6. (Anders Kaseorg)\n               * Implement XTerm mouse mode. (Barosl LEE, Andrew Chin,\n\t\t Louis Kruger)\n               * Report Git revision along with version if available.\n\t\t (John Hood)\n\n       * Platform support:\n               * Add pselect() emulation. (Jérémie Courrèges-Anglas)\n               * OpenBSD, OS X: Fix be64toh-related issues. (Jérémie\n\t\t Courrèges-Anglas)\n               * ARM Neon: fix gcc4.8 compiling problem(Pasi Sjöholm)\n               * NaCl: Conditionally rename main to mosh_main. (Richard\n\t\t Woodbury)\n               * FreeBSD: Token pasting, forkpty(), ARM fixes. (John Hood)\n               * AIX: Implement CTTY grabbing when TIOCSCTTY is missing\n                 (Anton Lundin)\n\t       * OS X: Broaden build support to cover OS X 10.5 through\n\t\t 10.10. (John Hood)\n\t       * Debian: Improve bash-completion install and\n\t\t functionality. (Suggested by Gabriel Filion, John Hood)\n\n       * Bug fixes:\n               * Automake/autoconf workarounds.  (Anders Kaseorg)\n               * mosh-server: Allow startup without PTY.  (Keith Winstein)\n               * network.cc: Properly close old fd on Socket assignment\n\t\t operator. (Thanks to Igor Bukanov)\n               * mosh-server:  Allow startup with zero-window-size PTY.\n                 (Igor Bukanov)\n               * AddrInfo: Fix error message generation when node == NULL\n                 (Anders Kaseorg)\n               * Timestamp: Prevent integer overflow on Darwin PPC 32-bit\n                 (Anders Kaseorg)\n               * scripts/mosh: Fix hang when remote closes the connection\n                 (Anders Kaseorg)\n               * Fix issues with parsing of 256-color SGR sequences.\n                 (John Hood)\n               * Numerous code hygiene, Coverity, and Clang static analyzer\n                 fixes.  (Anders Kaseorg, Geoffrey Thomas, John Hood)\n\n2013-03-27 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.2.4 released.\n\n\t* New features:\n\t        * Support port ranges with -p LOWPORT:HIGHPORT (Luke Mewburn)\n\t        * Ctrl-^ Ctrl-Z suspends mosh client (Nikolai Zeldovich)\n\t        * mm:ss display of lost-contact times (Kevin Ballard)\n\t        * Show infobar with control chars when Ctrl-^ is typed\n\t        * Put terminal in altscreen mode (Anders Kaseorg)\n\t        * Tell automake/Debian pkg about our checks (Anders Kaseorg)\n\n\t* Platform support:\n\t        * OS X: Script to build a universal package (Peter Iannucci)\n\t        * FreeBSD: Fix build problems (Jimmy Olgeni)\n\t        * AIX: port by Anton Lundin\n\t        * Solaris with system curses (Anton Lundin)\n\t        * Cygwin and others: eliminate use of IO::Pty (Anton Lundin)\n\n\t* Bug fixes:\n\t        * Fix bug (introduced in 1.2.3) where server stays around\n\t          if process quits while client is detached\n\t        * Clean up spurious entries from detached sessions warning\n\t\t* Fix freeze when connectivity is one-directional for hours\n\t          (reported by Axel Beckert)\n\t        * Don't wipe title until a new one is set (sqweek)\n\t        * Eliminate memory leaks and cppcheck warnings (Anders Kaseorg)\n\n2012-10-19 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.2.3 released.\n\n\t* Security improvements:\n\t\t* Use OpenSSL AES implementation\n\t\t* Update AES-OCB implementation (Keegan McAllister)\n\t\t* Don't let bad server dictate IP (Felix Groebert)\n\n\t* New features:\n\t\t* Client hops ports to survive challenging client-side firewall\n\t\t* Server stops sending to save client power (Daniel Drown)\n\t\t* Set DiffServ code point and ECN-capable (Dave Täht)\n\t\t* Slow down if explicit congestion notification received\n\t\t* Warn about unattached Mosh sessions on login\n\t\t* Compatible with KDE konsole (uses BEL to terminate OSC)\n\t\t* Improved heuristic about color of predicted characters\n\n\t* Bug fixes:\n\t\t* Improved performance on systems with expensive time\n\t\t* No longer choke on \"ffff::\" address for hosts with IPv6\n\t\t* More conservative MTU and datagram sizing\n\n\t* Platform support:\n\t\t* Build on Solaris and IllumOS (Timo Sirainen, Ira Cooper)\n\t\t* Build on ARM with gcc 4.7 (Alexander Chernyakhovsky)\n\n\t* Licensing changes:\n\t\t* Allow distribution on Apple App Stores\n\t\t* Allow linking with OpenSSL\n\n2012-06-12 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.2.2 released.\n\n\t* Remove warning on out-of-order/duplicated datagrams\n\n\t* Add \"experimental\" prediction mode\n\n2012-05-25 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.2.1 released.\n\n\t* Improve performance on lossy links.\n\n\t* New diagnostic message when link is dead in only one direction.\n\n\t* Use less CPU when link is down. (Keegan McAllister)\n\n\t* Use much less CPU when application or mosh-server sends\n\t  large repeat counts (resolves CVE-2012-2385, reported by\n\t  Timo Juhani Lindfors).\n\n\t* Use less memory when mosh-server is malicious.\n\n\t* Fix vttest regression re: wrapping and tabs.\n\n\t* Enable roundtrip verifier of terminal emulator correctness\n\t  when verbose.\n\n\t* Remove skalibs as a dependency. (Keegan McAllister)\n\n\t* Remove use of poll() and OS X poll workaround. (Keegan McAllister)\n\n\t* Include bash_completion file. (ejeffrey)\n\n\t* Include UFW firewall profile. (Fumihito YOSHIDA)\n\n\t* Warning on out-of-order/duplicated datagrams\n\t  (or failed nonce increment).\n\n\t* Clearer error message on invalid port number.\n\n\t* Cleanups to quit scenario when firewalled.\n\n2012-04-26 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.2 released.\n\n\t* Remove Boost as a dependency (Keegan McAllister)\n\n\t* Add support for FreeBSD, Cygwin, RHEL/CentOS 5, OS X 10.5 on PPC.\n\n\t* More verbose and helpful diagnostics. Server now has -v flag.\n\n\t* Client now has --ssh= flag to set SSH options (like port)\n\n\t* Remove skalibs as a dependency on Debian/Ubuntu (Keegan McAllister)\n\n\t* Now passes locale-related env vars over the connection\n\n\t* Fix startup script to no longer hang on some Macs (Jay Freeman)\n\n\t* Fix terminal emulation and argument parsing on FreeBSD\n\n\t* Fix alignment problems on ARM\n\n\t* Now prints message of the day\n\n\t* Use binary hardening flags where available (Keegan McAllister)\n\n\t* Responsiveness and CPU-usage improvements\n\n\t* Several terminal-emulation improvements and bug fixes\n\n2012-04-03 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.1.3 released.\n\n\t* Builds on armel, armhf, and kFreeBSD.\n\n\t* Fixes bug causing occasional missing/extra wraparound copy-and-paste.\n\n\t* Eliminates valgrind complaint over unused winsize fields.\n\n\t* Close connection after four petabytes (per OCB recommendation).\n\n2012-03-28 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.1.2 released.\n\n\t* Fixes to build on OS X 10.5 with older gcc and -lpoll (Quentin Smith)\n\n\t* Add --with-utempter and --without-utempter per gentoo request\n\t  (Michael Weber)\n\n\t* configure now requires ncurses headers (and others) to be installed\n\n\t* Consolidate locale routines to help Android port (Keegan McAllister)\n\n2012-03-27 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.1.1 released.\n\n\t* Fix spec file and build failure on Fedora.\n\n\t* Print out error message properly on fatal_assert().\n\n\t* Support for machines without posix_memalign().\n\n2012-03-22 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.1 released (stable release).\n\n\t* Allows user to specify remote command to execute.\n\n\t* Only advertises 256 colors when user's terminal has 256 colors.\n\n\t* Add chaff to datagrams to frustrate statistical analysis of length\n\n\t* Cosmetic fixes to terminal handling\n\n\t* Improved startup script (Anders Kaseorg)\n\n2012-03-16 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.0.2 released.\n\n\t* Uses xterm-256color and supports 256-color escape sequences.\n\n\t* Posterizes to 8 colors unless the user has a 256-color terminal.\n\n\t* Handles terminals without BCE.\n\n\t* Starts login shell.\n\n2012-03-14 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.0.1 released.\n\n\t* Roughly 40% less CPU usage.\n\n2012-03-12 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 1.0 released.\n\n\t* mosh now supports --version option and prints no-warranty message.\n\n2012-03-10 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.98 released.\n\n\t* Add option to select server-side UDP port.\n\n\t* Restrict default UDP port range to 60000..61000.\n\n\t* Use TERM / terminfo to decide when to send ECH sequence.\n\n\t* Now works properly inside tmux.\n\n2012-03-07 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.97 released.\n\n\t* Merged Mac OS X port (thanks to Quentin Smith and Anders Kaseorg)\n\n\t* Server will quit if no connection within first 60 seconds\n\n\t* Startup script no longer requires threaded Perl\n\n\t* Add --enable-compile-warnings=error to ./configure\n\n\t* Fix some flicker issues with adaptive prediction mode\n\n2012-02-26 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.96 released.\n\n\t* Compress all instructions with zlib\n\n2012-02-25 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.95 released.\n\n\t* Make echo acknowledgment reliable to reduce spurious mispredict detections.\n\n\t* Require two dropped heartbeats before showing blue bar of lost contact\n\n\t* Print newline before MOSH CONNECT string to make more robust if intermediate keys hit\n\n\t* Disable ControlMaster in initial SSH connection so proxy is always used\n\n\t* Make retransmissions occur at frame rate (vs. every 3 seconds) for limited time after loss\n\n2012-02-15 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.94 released.\n\n\t* Make man pages\n\n\t* Replace C++11 features (lambda and auto) with boost equivalents\n\t(Anders Kaseorg)\n\n\t* Now builds with g++ or clang (with libstdc++)\n\n2012-02-13 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.93 released.\n\n\t* Make utmp entries\n\n2012-02-13 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.92 released.\n\n\t* Allows user to select prediction mode (always/never/adaptive)\n\n\t* Fix bug in server startup on slow hosts\n\n\t* Better prediction when deleting at line ending\n\n2012-02-09 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.91 released.\n\n\t* Startup script support SSH options and aliases (Anders Kaseorg)\n\n\t* End use of Path MTU discovery and allow IP fragmentation because,\n\te.g., Cisco VPN has MTU of 1200 and does not pass ICMP too-big.\n\n\t* Better exception and error handling.\n\n\t* Restrict predictive local echo display to long-delay links\n\t(>60 ms RTT) or for temporarily after a \"glitch.\" Otherwise simply\n\tshow server echos, while maintaining prediction overlay in the\n\tbackground in case it is needed.\n\n2012-02-07 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.9b released.\n\t* Improvements to build system (Anders Kaseorg)\n\n2012-02-06 Keith Winstein <mosh-devel@mit.edu>\n\n\t* Version 0.9 released.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.5810546875,
          "content": "# Work around inconsistency in AX_CODE_COVERAGE defining\n# AM_DISTCHECK_CONFIGURE_FLAGS only in some branches\nif !CODE_COVERAGE_ENABLED\nAM_DISTCHECK_CONFIGURE_FLAGS =\nendif\n\ninclude $(top_srcdir)/aminclude_static.am\n\nACLOCAL_AMFLAGS = -I m4\nSUBDIRS = scripts src man conf\nEXTRA_DIST = autogen.sh ocb-license.html README.md COPYING.iOS\nBUILT_SOURCES = VERSION.stamp\nAM_DISTCHECK_CONFIGURE_FLAGS += --enable-compile-warnings=distcheck --enable-examples --enable-syslog\n\n# AX_CODE_COVERAGE configuration\n\n# Remove everything outside of this repository\nCODE_COVERAGE_IGNORE_PATTERN = \"/usr/include/*\" \"/usr/lib/*\" \"*/src/tests/*\" \"*/src/protobufs/*\"\n\n# Ensure coverage is relative to the top of the repository\nCODE_COVERAGE_DIRECTORY = $(abs_top_builddir)\n\n# non-Automake defines\nCPPCHECK_FLAGS = --enable=all --template=gcc --force # -j8 disables unused function checking.\nCLANG_SCAN_BUILD = scan-build\nBEAR = bear\nOCLINT_JCD = oclint-json-compilation-database\nOCLINT_OPTIONS = -enable-global-analysis -max-priority-2=1000 -max-priority-3=1000 \\\n\t-rc LONG_LINE=160 \\\n\t-rc LONG_VARIABLE_NAME=40 \\\n\t-rc SHORT_VARIABLE_NAME=1 \\\n\t-rc MINIMUM_CASES_IN_SWITCH=2\n\n.PHONY:\tVERSION.stamp\n\nVERSION.stamp:\n\t@echo @PACKAGE_STRING@ > VERSION.dist\n\t@set -e; if git describe --dirty --always > VERSION.git 2>&1 && \\\n\t\t[ -z `git rev-parse --show-prefix` ]; then \\\n\t\tif ! diff -q VERSION.git VERSION.stamp > /dev/null 2>&1; then \\\n\t\t\tmv -f VERSION.git VERSION.stamp; \\\n\t\tfi; \\\n\telif ! diff -q VERSION.dist VERSION.stamp > /dev/null 2>&1; then \\\n\t\tmv -f VERSION.dist VERSION.stamp; \\\n\tfi\n\t@rm -f VERSION.dist VERSION.git\n\nclean-local:\n\t@rm -rf VERSION.stamp cov-int mosh-coverity.txz compile_commands.json\n\n# Linters and static checkers, for development only.  Not included in\n# build dependencies, and outside of Automake processing.\ncppcheck:\n\tcppcheck $(CPPCHECK_FLAGS) -include src/include/config.h -I src/include \\\n\t\t-I src/crypto -I src/frontend -I src/network -I src/protobufs \\\n\t\t-I src/statesync -I src/terminal -I src/util \\\n\t\t-I /usr/include -I /usr/include/google/protobuf -I/usr/include/openssl \\\n\t\tsrc\n\n# Coverity.\ncov-build:\n\t$(MAKE) clean\n\trm -rf cov-int\n\tcov-build --dir cov-int $(MAKE) check TESTS=\n\ttar -caf mosh-coverity.txz cov-int\n\n# These two rules are for Bear + OCLint.\n# Don't *run* the tests, prediction-unicode.test generates arguments\n# with illegal UTF-8 that make Bear unhappy.\ncompile_commands.json:\n\t$(MAKE) clean\n\tbear $(MAKE) check TESTS=\noclint: compile_commands.json\n\t$(OCLINT_JCD) -e src/protobufs -- $(OCLINT_OPTIONS)\n\n# Clang's scan-build static checker.\nscan-build:\n\t$(MAKE) clean\n\t$(CLANG_SCAN_BUILD) $(MAKE) check TESTS=\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.4609375,
          "content": "2012-04-26\n----------\n\n* Version 1.2 released\n\n2012-03-22\n----------\n\n* Version 1.1 released\n\n2012-03-12\n----------\n\n* Version 1.0 released\n\n2012-03-07 Release candidate (0.97):\n------------------------------------\n\n* Now builds on Mac OS X as well as GNU/Linux\n\n2012-02-06 Initial release (0.9):\n---------------------------------\n\n* Supports intermittent connectivity\n* Supports client and server IP roaming\n* Local echo supports typing and the left and right arrow keys\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.55859375,
          "content": "[![ci](https://github.com/mobile-shell/mosh/actions/workflows/ci.yml/badge.svg)](https://github.com/mobile-shell/mosh/actions/workflows/ci.yml)\n\nMosh: the mobile shell\n======================\n\nMosh is a remote terminal application that supports intermittent\nconnectivity, allows roaming, and provides speculative local echo\nand line editing of user keystrokes.\n\nIt aims to support the typical interactive uses of SSH, plus:\n\n   * Mosh keeps the session alive if the client goes to sleep and\n     wakes up later, or temporarily loses its Internet connection.\n\n   * Mosh allows the client and server to \"roam\" and change IP\n     addresses, while keeping the connection alive. Unlike SSH, Mosh\n     can be used while switching between Wi-Fi networks or from Wi-Fi\n     to cellular data to wired Ethernet.\n\n   * The Mosh client runs a predictive model of the server's behavior\n     in the background and tries to guess intelligently how each\n     keystroke will affect the screen state. When it is confident in\n     its predictions, it will show them to the user while waiting for\n     confirmation from the server. Most typing and uses of the left-\n     and right-arrow keys can be echoed immediately.\n\n     As a result, Mosh is usable on high-latency links, e.g. on a\n     cellular data connection or spotty Wi-Fi. In distinction from\n     previous attempts at local echo modes in other protocols, Mosh\n     works properly with full-screen applications such as emacs, vi,\n     alpine, and irssi, and automatically recovers from occasional\n     prediction errors within an RTT. On high-latency links, Mosh\n     underlines its predictions while they are outstanding and removes\n     the underline when they are confirmed by the server.\n\nMosh does not support X forwarding or the non-interactive uses of SSH,\nincluding port forwarding.\n\nOther features\n--------------\n\n   * Mosh adjusts its frame rate so as not to fill up network queues\n     on slow links, so \"Control-C\" always works within an RTT to halt\n     a runaway process.\n\n   * Mosh warns the user when it has not heard from the server\n     in a while.\n\n   * Mosh supports lossy links that lose a significant fraction\n     of their packets.\n\n   * Mosh handles some Unicode edge cases better than SSH and existing\n     terminal emulators by themselves, but requires a UTF-8\n     environment to run.\n\n   * Mosh leverages SSH to set up the connection and authenticate\n     users. Mosh does not contain any privileged (root) code.\n\nGetting Mosh\n------------\n\n  [The Mosh web site](https://mosh.org/#getting) has information about\n  packages for many operating systems, as well as instructions for building\n  from source.\n\n  Note that `mosh-client` receives an AES session key as an environment\n  variable.  If you are porting Mosh to a new operating system, please make\n  sure that a running process's environment variables are not readable by other\n  users.  We have confirmed that this is the case on GNU/Linux, OS X, and\n  FreeBSD.\n\nUsage\n-----\n\n  The `mosh-client` binary must exist on the user's machine, and the\n  `mosh-server` binary on the remote host.\n\n  The user runs:\n\n    $ mosh [user@]host\n\n  If the `mosh-client` or `mosh-server` binaries live outside the user's\n  `$PATH`, `mosh` accepts the arguments `--client=PATH` and `--server=PATH` to\n  select alternate locations. More options are documented in the mosh(1) manual\n  page.\n\n  There are [more examples](https://mosh.org/#usage) and a\n  [FAQ](https://mosh.org/#faq) on the Mosh web site.\n\nHow it works\n------------\n\n  The `mosh` program will SSH to `user@host` to establish the connection.\n  SSH may prompt the user for a password or use public-key\n  authentication to log in.\n\n  From this point, `mosh` runs the `mosh-server` process (as the user)\n  on the server machine. The server process listens on a high UDP port\n  and sends its port number and an AES-128 secret key back to the\n  client over SSH. The SSH connection is then shut down and the\n  terminal session begins over UDP.\n\n  If the client changes IP addresses, the server will begin sending\n  to the client on the new IP address within a few seconds.\n\n  To function, Mosh requires UDP datagrams to be passed between client\n  and server. By default, `mosh` uses a port number between 60000 and\n  61000, but the user can select a particular port with the -p option.\n  Please note that the -p option has no effect on the port used by SSH.\n\nAdvice to distributors\n----------------------\n\nA note on compiler flags: Mosh is security-sensitive code. When making\nautomated builds for a binary package, we recommend passing the option\n`--enable-compile-warnings=error` to `./configure`. On GNU/Linux with\n`g++` or `clang++`, the package should compile cleanly with\n`-Werror`. Please report a bug if it doesn't.\n\nWhere available, Mosh builds with a variety of binary hardening flags\nsuch as `-fstack-protector-all`, `-D_FORTIFY_SOURCE=2`, etc.  These\nprovide proactive security against the possibility of a memory\ncorruption bug in Mosh or one of the libraries it uses.  For a full\nlist of flags, search for `HARDEN` in `configure.ac`.  The `configure`\nscript detects which flags are supported by your compiler, and enables\nthem automatically.  To disable this detection, pass\n`--disable-hardening` to `./configure`.  Please report a bug if you\nhave trouble with the default settings; we would like as many users as\npossible to be running a configuration as secure as possible.\n\nMosh ships with a default optimization setting of `-O2`. Some\ndistributors have asked about changing this to `-Os` (which causes a\ncompiler to prefer space optimizations to time optimizations). We have\nbenchmarked with the included `src/examples/benchmark` program to test\nthis. The results are that `-O2` is 40% faster than `-Os` with g++ 4.6\non GNU/Linux, and 16% faster than `-Os` with clang++ 3.1 on Mac OS\nX. In both cases, `-Os` did produce a smaller binary (by up to 40%,\nsaving almost 200 kilobytes on disk). While Mosh is not especially CPU\nintensive and mostly sits idle when the user is not typing, we think\nthe results suggest that `-O2` (the default) is preferable.\n\nOur Debian and Fedora packaging presents Mosh as a single package.\nMosh has a Perl dependency that is only required for client use.  For\nsome platforms, it may make sense to have separate mosh-server and\nmosh-client packages to allow mosh-server usage without Perl.\n\nNotes for developers\n--------------------\n\nTo start contributing to Mosh, install the following dependencies:\n\nDebian, Windows Subsystem for Linux:\n\n```\n$ sudo apt install -y build-essential protobuf-compiler \\\n    libprotobuf-dev pkg-config libutempter-dev zlib1g-dev libncurses5-dev \\\n    libssl-dev bash-completion tmux less\n```\n\nMacOS:\n\n```\n$ brew install protobuf automake\n```\n\nOnce you have forked the repository, run the following to build and test Mosh:\n\n```\n$ ./autogen.sh\n$ ./configure\n$ make\n$ make check\n```\n\nMosh supports producing code coverage reports by tests, but this feature is\ndisabled by default. To enable it, make sure `lcov` is installed on your\nsystem. Then, configure and run tests:\n\n```\n$ ./configure --enable-code-coverage\n$ make check-code-coverage\n```\n\nThis will run all tests and produce a coverage report in HTML form that can be\nopened with your favorite browser. Ideally, newly added code should strive for\n90% (or better) incremental test coverage.\n\nMore info\n---------\n\n  * Mosh Web site:\n\n    <https://mosh.org>\n\n  * `mosh-devel@mit.edu` mailing list:\n\n    <https://mailman.mit.edu/mailman/listinfo/mosh-devel>\n\n  * `mosh-users@mit.edu` mailing list:\n\n    <https://mailman.mit.edu/mailman/listinfo/mosh-users>\n\n  * `#mosh` channel on [Libera Chat](https://libera.chat/)\n\n    https://web.libera.chat/#mosh\n"
        },
        {
          "name": "THANKS",
          "type": "blob",
          "size": 1.201171875,
          "content": "* Hari Balakrishnan, who advised this work and came up with the name.\n\n* Paul Williams (www.vt100.net), whose reverse-engineered vt500 state\n  diagram is the basis for the Mosh parser.\n\n* The anonymous users who contributed session logs for tuning and\n  measuring Mosh's predictive echo.\n\n* Nickolai Zeldovich for helpful comments on the Mosh research paper.\n\n* Richard Stallman for helpful discussion about the capabilities of\n  the SUPDUP Local Editing Protocol.\n\n* Nelson Elhage\n\n* Christine Spang\n\n* Stefie Tellex\n\n* Joseph Sokol-Margolis\n\n* Waseem Daher\n\n* Bill McCloskey\n\n* Austin Roach\n\n* Greg Hudson\n\n* Karl Ramm\n\n* Alexander Chernyakhovsky\n\n* Peter Iannucci\n\n* Evan Broder\n\n* Neha Narula\n\n* Katrina LaCurts\n\n* Ramesh Chandra\n\n* Peter Jeremy\n\n* Ed Schouten\n\n* Ryan Steinmetz\n\n* Jay Freeman\n\n* Dave Täht\n\n* Larry Doolittle\n\n* Daniel Drown\n\n* Timo Juhani Lindfors\n\n* Timo Sirainen\n\n* Ira Cooper\n\n* Felix Gröbert\n\n* Luke Mewburn\n\n* Anton Lundin\n\n* Philipp Haselwarter\n\n* Timo J. Rinne\n\n* Barosl Lee\n\n* Andrew Chin\n\n* Louis Kruger\n\n* Jérémie Courrèges-Anglas\n\n* Pasi Sjöholm\n\n* Richard Woodbury\n\n* Igor Bukanov\n\n* Geoffrey Thomas\n\n* Steve Dignam\n\n* HIGUCHI Yuta\n\n* Baruch Siach\n\n* Adrien Destugues\n\n* Giel van Schijndel\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.0302734375,
          "content": "#!/bin/sh\n\nexec autoreconf -fi\n"
        },
        {
          "name": "build-package.sh",
          "type": "blob",
          "size": 0.08203125,
          "content": "#!/bin/sh\n\ngbp buildpackage --git-upstream-branch=master --git-upstream-tree=branch\n"
        },
        {
          "name": "build-source-package.sh",
          "type": "blob",
          "size": 0.0849609375,
          "content": "#!/bin/sh\n\ngbp buildpackage --git-upstream-branch=master --git-upstream-tree=branch -S\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 21.7109375,
          "content": "#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.61])\nAC_INIT([mosh], [1.4.0], [mosh-devel@mit.edu])\nAM_INIT_AUTOMAKE([foreign std-options -Wall -Werror -Wno-portability])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\nAC_CONFIG_SRCDIR([src/frontend/mosh-client.cc])\nAC_CONFIG_MACRO_DIR([m4])\nAC_CONFIG_HEADERS([src/include/config.h])\nAC_LANG([C++])\nAX_CODE_COVERAGE\n\n# Checks for programs.\nAC_PROG_CC([cc gcc clang])\nAC_PROG_CXX([c++ g++ clang++])\nAC_PROG_RANLIB\nAC_PATH_PROG([PROTOC], [protoc], [])\nAS_IF([test x\"$PROTOC\" = x],\n  [AC_MSG_ERROR([cannot find protoc, the Protocol Buffers compiler])])\n\n# automake 1.12 seems to require this, but automake 1.11 doesn't recognize it\nm4_ifdef([AM_PROG_AR], [AM_PROG_AR])\n\n# Protobuf transitively requires at least C++14, get ahead of the\n# curve and require at least C++17.\nAX_CXX_COMPILE_STDCXX([17])\n\nWARNING_CXXFLAGS=\"\"\nPICKY_CXXFLAGS=\"\"\nDISTCHECK_CXXFLAGS=\"\"\nAC_ARG_ENABLE([compile-warnings],\n  [AS_HELP_STRING([--enable-compile-warnings@<:@=no/yes/maximum/error/distcheck@:>@],\n     [Turn on compiler warnings])],\n  [case \"$enableval\" in\n     no)\n       ;;\n     '' | yes)\n       WARNING_CXXFLAGS=\"-Wall\"\n       ;;\n     maximum)\n       WARNING_CXXFLAGS=\"-Wall\"\n       PICKY_CXXFLAGS=\"-Wextra -pedantic -Wno-long-long -Weffc++ -Wmissing-declarations\"\n       ;;\n     error)\n       # remove -Wno-c++17-extensions once protocolbuffers/protobuf#9181 is\n       # resolved\n       # remove -Wno-unused-parameter once\n       # protocolbuffers/protobuf#10357 is resolved       \n       WARNING_CXXFLAGS=\"-Wall -Werror -Wno-c++17-extensions\"\n       PICKY_CXXFLAGS=\"-Wextra -pedantic -Wno-long-long -Weffc++ -Wmissing-declarations -Wno-unused-parameter\"\n       ;;\n     distcheck)\n       WARNING_CXXFLAGS=\"-Wall -Werror\"\n       PICKY_CXXFLAGS=\"-Wextra -pedantic -Wno-long-long -Weffc++ -Wmissing-declarations\"\n       AX_CHECK_COMPILE_FLAG([-Wno-error=unused-parameter],\n         [PICKY_CXXFLAGS=\"$PICKY_CXXFLAGS -Wno-error=unused-parameter\"], [], [-Werror])\n       AX_CHECK_COMPILE_FLAG([-Wno-error=c++11-extensions],\n         [PICKY_CXXFLAGS=\"$PICKY_CXXFLAGS -Wno-error=c++11-extensions\"], [], [-Werror])\n       AX_CHECK_COMPILE_FLAG([-Wno-error=deprecated-declarations],\n         [PICKY_CXXFLAGS=\"$PICKY_CXXFLAGS -Wno-error=deprecated-declarations\"], [], [-Werror])\n       AX_CHECK_COMPILE_FLAG([-Wno-error=nested-anon-types],\n         [PICKY_CXXFLAGS=\"$PICKY_CXXFLAGS -Wno-error=nested-anon-types\"], [], [-Werror])\n       ;;\n     *)\n       AC_MSG_ERROR([Unknown argument '$enableval' to --enable-compile-warnings])\n       ;;\n   esac],\n  [WARNING_CXXFLAGS=\"-Wall\"])\nAC_SUBST([WARNING_CXXFLAGS])\nAC_SUBST([PICKY_CXXFLAGS])\n\n# Check for fuzzing support before the flag wrapper, because if\n# requested and missing the functionality is entirely nonexistent.\nMISC_CXXFLAGS=\"\"\nAC_ARG_ENABLE([fuzzing],\n  [AS_HELP_STRING([--enable-fuzzing],\n    [Enable compiler and linker options to enable fuzz testing @<:@no/yes/libfuzzer@:>@])],\n  [fuzzing=\"$enableval\"\n   case \"$enableval\" in\n    no)\n      ;;\n    '' | yes | libfuzzer)\n      AX_CHECK_COMPILE_FLAG([-fsanitize=fuzzer],\n        [FUZZING_CFLAGS=\"$FUZZING_CFLAGS -fsanitize=fuzzer\"], [\n        AC_MSG_ERROR([Fuzzing requested, but compiler support not present])], [-Werror])\n      ;;\n    *)\n     AC_MSG_ERROR([\"Unknown argument '$enableval' to --enable-fuzzing])\n     ;;\n  esac],\n  [fuzzing=\"no\"])\nAC_SUBST([FUZZING_CFLAGS])\nAC_SUBST([MISC_CXXFLAGS])\nAM_CONDITIONAL([ENABLE_FUZZING], [test x\"$fuzzing\" != xno])\n\nAC_ARG_ENABLE([asan],\n  [AS_HELP_STRING([--enable-asan],\n    [Enable compiler and linker options to enable AddressSanitizer @<:@no@:>@])],\n  [asan=\"$enableval\"],\n  [asan=\"no\"])\n\nAS_IF([test x\"$asan\" != x\"no\"], [\n  AX_CHECK_COMPILE_FLAG([-fsanitize=address,leak],\n  [MISC_CXXFLAGS=\"$MISC_CXXFLAGS -fsanitize=address,leak\"], [\n  AC_MSG_ERROR([ASAN requested, but compiler support not present])], [-Werror])\n])\nAC_SUBST([MISC_CXXFLAGS])\n\n# We want to check for compiler flag support, but there is no way to make\n# clang's \"argument unused\" warning fatal.  So we invoke the compiler through a\n# wrapper script that greps for this message.\n\nsaved_CXX=\"$CXX\"\nsaved_LD=\"$LD\"\nflag_wrap=\"$srcdir/scripts/wrap-compiler-for-flag-check\"\nCXX=\"$flag_wrap $CXX\"\nLD=\"$flag_wrap $LD\"\n\nAC_DEFUN([check_cxx_flag],\n  [AX_CHECK_COMPILE_FLAG([$1], [$2], [$3], [-Werror $4])])\nAC_DEFUN([check_link_flag],\n  [AX_CHECK_LINK_FLAG([$1], [$2], [$3], [-Werror $4])])\n\nAC_ARG_ENABLE([hardening],\n  [AS_HELP_STRING([--enable-hardening],\n    [Enable compiler and linker options to frustrate memory corruption exploits @<:@yes@:>@])],\n  [hardening=\"$enableval\"],\n  [hardening=\"yes\"])\n\nHARDEN_CFLAGS=\"\"\nHARDEN_LDFLAGS=\"\"\nAS_IF([test x\"$hardening\" != x\"no\"], [\n  check_cxx_flag([-fno-strict-overflow], [HARDEN_CFLAGS=\"$HARDEN_CFLAGS -fno-strict-overflow\"])\n\n  # This one will likely succeed, even on platforms where it does nothing.\n  check_cxx_flag([-D_FORTIFY_SOURCE=2], [HARDEN_CFLAGS=\"$HARDEN_CFLAGS -D_FORTIFY_SOURCE=2\"])\n\n  check_link_flag([-fstack-protector-all],\n   [HARDEN_CFLAGS=\"$HARDEN_CFLAGS -fstack-protector-all\"\n    check_cxx_flag([-Wstack-protector], [HARDEN_CFLAGS=\"$HARDEN_CFLAGS -Wstack-protector\"],\n      [], [-fstack-protector-all])\n    check_cxx_flag([--param ssp-buffer-size=1], [HARDEN_CFLAGS=\"$HARDEN_CFLAGS --param ssp-buffer-size=1\"],\n      [], [-fstack-protector-all])])\n\n  check_cxx_flag([-fPIE],\n   [check_link_flag([-fPIE -pie],\n     [HARDEN_CFLAGS=\"$HARDEN_CFLAGS -fPIE\"\n      HARDEN_LDFLAGS=\"$HARDEN_LDFLAGS -pie\"],\n     [check_link_flag([-fPIE -Wl,-pie],\n       [HARDEN_CFLAGS=\"$HARDEN_CFLAGS -fPIE\"\n        HARDEN_LDFLAGS=\"$HARDEN_LDFLAGS -Wl,-pie\"])])])\n\n  check_link_flag([-Wl,-z,relro],\n   [HARDEN_LDFLAGS=\"$HARDEN_LDFLAGS -Wl,-z,relro\"\n    check_link_flag([-Wl,-z,now], [HARDEN_LDFLAGS=\"$HARDEN_LDFLAGS -Wl,-z,now\"])])])\nAC_SUBST([HARDEN_CFLAGS])\nAC_SUBST([HARDEN_LDFLAGS])\n\n# Also check for a few non-hardening-related flags.\nAX_CHECK_COMPILE_FLAG([-fno-default-inline],\n  [MISC_CXXFLAGS=\"$MISC_CXXFLAGS -fno-default-inline\"], [], [-Werror])\nAX_CHECK_COMPILE_FLAG([-pipe],\n  [MISC_CXXFLAGS=\"$MISC_CXXFLAGS -pipe\"], [], [-Werror])\nAC_SUBST([MISC_CXXFLAGS])\n\n# End of flag tests.\nCXX=\"$saved_CXX\"\nLD=\"$saved_LD\"\n\nAC_ARG_ENABLE([client],\n  [AS_HELP_STRING([--enable-client], [Build the mosh-client program @<:@yes@:>@])],\n  [build_client=\"$enableval\"],\n  [build_client=\"yes\"])\nAM_CONDITIONAL([BUILD_CLIENT], [test x\"$build_client\" != xno])\n\nAC_ARG_ENABLE([server],\n  [AS_HELP_STRING([--enable-server], [Build the mosh-server program @<:@yes@:>@])],\n  [build_server=\"$enableval\"],\n  [build_server=\"yes\"])\nAM_CONDITIONAL([BUILD_SERVER], [test x\"$build_server\" != xno])\n\nAC_ARG_ENABLE([examples],\n  [AS_HELP_STRING([--enable-examples], [Build the miscellaneous programs in src/examples @<:@no@:>@])],\n  [build_examples=\"$enableval\"],\n  [build_examples=\"no\"])\nAM_CONDITIONAL([BUILD_EXAMPLES], [test x\"$build_examples\" != xno])\n\nAC_ARG_ENABLE([ufw],\n  [AS_HELP_STRING([--enable-ufw], [Install firewall profile for ufw (Uncomplicated Firewall) @<:@no@:>@])],\n  [install_ufw=\"$enableval\"],\n  [install_ufw=\"no\"])\nAM_CONDITIONAL([INSTALL_UFW], [test x\"$install_ufw\" != xno])\n\nAC_ARG_ENABLE([completion],\n  [AS_HELP_STRING([--enable-completion], [Install bash_completion rule @<:@no@:>@])],\n  [install_completion=\"$enableval\"],\n  [install_completion=\"no\"])\nAM_CONDITIONAL([INSTALL_COMPLETION], [test x\"$install_completion\" != xno])\n\nAC_ARG_ENABLE([syslog],\n  [AS_HELP_STRING([--enable-syslog], [Enable connection logging in mosh-server @<:@no@:>@])],\n  [enable_syslog=\"$enableval\"],\n  [enable_syslog=\"no\"])\nAS_IF([test x\"$enable_syslog\" != xno],\n  [AC_CHECK_HEADERS([syslog.h],\n    [AC_DEFINE([HAVE_SYSLOG], [1], [Define if syslog is available.])],\n    [AS_IF([test x\"$enable_syslog\" = xcheck],\n      [AC_MSG_WARN([Unable to find syslog.h.])],\n      [AC_MSG_ERROR([--enable-syslog was given but syslog.h was not found.])])])])\n\n# Checks for libraries.\nAC_ARG_ENABLE([static-libraries],\n  [AS_HELP_STRING([--enable-static-libraries], [Enable all static linking options below @<:@no@:>@])])\n\nAC_ARG_ENABLE([static-libstdc++],\n  [AS_HELP_STRING([--enable-static-libstdc++], [Link libstdc++ statically @<:@no@:>@])],\n  [], [enable_static_libstdc__=\"$enable_static_libraries\"])\nAS_IF([test \"$enable_static_libstdc__\" = yes],\n  [LDFLAGS=\"$LDFLAGS -static-libstdc++\"])\n\nAC_ARG_ENABLE([static-libgcc],\n  [AS_HELP_STRING([--enable-static-libgcc], [Link libgcc statically @<:@no@:>@])],\n  [], [enable_static_libgcc=\"$enable_static_libraries\"])\nAS_IF([test \"$enable_static_libgcc\" = yes],\n  [LDFLAGS=\"$LDFLAGS -static-libgcc\"])\n\nAC_ARG_WITH([utempter],\n  [AS_HELP_STRING([--with-utempter], [write utmp entries using libutempter @<:@check@:>@])],\n  [with_utempter=\"$withval\"],\n  [with_utempter=\"check\"])\nAC_ARG_ENABLE([static-utempter],\n  [AS_HELP_STRING([--enable-static-utempter], [Link utempter statically @<:@no@:>@])],\n  [], [enable_static_utempter=\"$enable_static_libraries\"])\nAS_IF([test x\"$with_utempter\" != xno],\n  [AC_CHECK_LIB([utempter], [utempter_remove_record],\n    [UTEMPTER_LIBS=-lutempter\n     AS_IF([test \"$enable_static_utempter\" = yes],\n       [UTEMPTER_LIBS=\"-Wl,-Bstatic $UTEMPTER_LIBS -Wl,-Bdynamic\"])\n     LIBS=\"$UTEMPTER_LIBS $LIBS\"\n     AC_DEFINE([HAVE_UTEMPTER], [1], [Define if libutempter is available.])],\n    [AS_IF([test x\"$with_utempter\" = xcheck],\n      [AC_MSG_WARN([Unable to find libutempter; utmp entries will not be made.])],\n      [AC_MSG_ERROR([--with-utempter was given but libutempter was not found.])])])])\n\nAC_ARG_ENABLE([static-zlib],\n  [AS_HELP_STRING([--enable-static-zlib], [Link zlib statically @<:@no@:>@])],\n  [], [enable_static_zlib=\"$enable_static_libraries\"])\nAC_CHECK_LIB([z], [compress],\n  [ZLIB_LIBS=-lz\n   AS_IF([test \"$enable_static_zlib\" = yes],\n     [ZLIB_LIBS=\"-Wl,-Bstatic $ZLIB_LIBS -Wl,-Bdynamic\"])\n   LIBS=\"$ZLIB_LIBS $LIBS\"],\n  [AC_MSG_ERROR([Unable to find zlib.])])\n\nAC_SEARCH_LIBS([socket], [socket network])\nAC_SEARCH_LIBS([inet_addr], [nsl])\n\nAC_SEARCH_LIBS([clock_gettime], [rt])\n\n# Checks for header files.\nAC_CHECK_HEADERS(m4_normalize([\n  fcntl.h\n  langinfo.h\n  limits.h\n  locale.h\n  netdb.h\n  netinet/in.h\n  stddef.h\n  stdint.h\n  inttypes.h\n  stdlib.h\n  string.h\n  sys/ioctl.h\n  sys/resource.h\n  sys/socket.h\n  sys/stat.h\n  sys/time.h\n  termios.h\n  unistd.h\n  wchar.h\n  wctype.h\n  ]), [], [AC_MSG_ERROR([Missing required header file.])])\n\nAC_CHECK_HEADERS([pty.h util.h libutil.h paths.h])\nAC_CHECK_HEADERS([endian.h sys/endian.h])\nAC_CHECK_HEADERS([utmpx.h])\nAC_CHECK_HEADERS([termio.h])\nAC_CHECK_HEADERS([sys/uio.h])\nAC_CHECK_HEADERS([memory tr1/memory])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_C_INLINE\nAC_TYPE_INT64_T\nAC_TYPE_PID_T\nAC_C_RESTRICT\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UINT16_T\nAC_TYPE_UINT32_T\nAC_TYPE_UINT64_T\nAC_TYPE_UINT8_T\nAC_TYPE_UINTPTR_T\n\n# Checks for library functions.\nAC_CHECK_FUNCS(m4_normalize([\n  gettimeofday\n  posix_memalign\n  cfmakeraw\n  pselect\n  pledge\n  ]))\n\n# Start by trying to find the needed tinfo parts by pkg-config\nPKG_CHECK_MODULES([TINFO], [tinfo],\n  [AC_DEFINE([HAVE_CURSES_H], [1], [Define to 1 if <curses.h> is present])],\n  [PKG_CHECK_MODULES([TINFO], [ncurses],\n    [AC_DEFINE([HAVE_CURSES_H], [1], [Define to 1 if <curses.h> is present])],\n    [AX_CHECK_LIBRARY([TINFO], [curses.h], [tinfo],\n      [AC_DEFINE([HAVE_CURSES_H], [1], [Define to 1 if <curses.h> is present])\n        AC_SUBST([TINFO_CFLAGS], [\"$TINFO_CPPFLAGS\"])\n        AC_SUBST([TINFO_LIBS], [\"$TINFO_LDFLAGS -ltinfo\"])],)])])\n\n# Then try to find it in a specific install dir\nAC_ARG_WITH(curses, [AS_HELP_STRING([--with-curses=DIR], [Where curses is installed])],\n    [if test $withval != yes; then\n        cv_curses=$withval\n    fi\n    if test x$cv_curses != x/usr; then\n        CURSES_LDFLAGS=\"-L${cv_curses}/lib\"\n        CURSES_CPPFLAGS=\"-I${cv_curses}/include\"\n    fi])\n\nif test \"x$ax_cv_have_TINFO\" = xno ; then\n    # save away old LDFLAGS/CPPFLAGS and check for curses with cv_curses\n    old_LDFLAGS=\"$LDFLAGS\"\n    old_CPPFLAGS=\"$CPPFLAGS\"\n    LDFLAGS=\"$LDFLAGS $CURSES_LDFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS $CURSES_CPPFLAGS\"\n\n    AX_WITH_CURSES\n    # restore old LDFLAGS/CPPFLAGS\n    LDFLAGS=\"$old_LDFLAGS\"\n    CPPFLAGS=\"$old_CPPFLAGS\"\n\n    if test \"x$ax_cv_curses_which\" = xno ; then\n        AC_MSG_ERROR([requires either tinfo, NcursesW or Ncurses library])\n    else\n        AC_SUBST([TINFO_LIBS], [\"$CURSES_LDFLAGS $CURSES_LIB\"])\n        AC_SUBST([TINFO_CFLAGS], [\"$CURSES_CPPFLAGS\"])\n    fi\nfi\n\nAC_ARG_ENABLE([static-curses],\n  [AS_HELP_STRING([--enable-static-curses], [Link curses statically @<:@no@:>@])],\n  [], [enable_static_curses=\"$enable_static_libraries\"])\nAS_IF([test \"$enable_static_curses\" = yes],\n  [TINFO_LIBS=\"-Wl,-Bstatic $TINFO_LIBS -Wl,-Bdynamic\"])\n\ndnl Default to OpenSSL, or OS X crypto library if found\nAC_CHECK_HEADERS([CommonCrypto/CommonCrypto.h],\n  [default_crypto_library=\"apple-common-crypto\"],\n  [default_crypto_library=\"openssl\"]\n)\n\ndnl Allow user to select over the default.\nAC_ARG_WITH(\n  [crypto-library],\n  [AS_HELP_STRING([--with-crypto-library=library], [build with the given crypto library, TYPE=openssl|nettle|apple-common-crypto @<:@default=openssl@:>@])],\n  [\n    case \"${withval}\" in\n      openssl|openssl-with-internal-ocb|openssl-with-openssl-ocb|nettle|apple-common-crypto) ;;\n      *) AC_MSG_ERROR([bad value ${withval} for --with-crypto-library]) ;;\n    esac\n  ],\n  [with_crypto_library=\"$default_crypto_library\"]\n)\n\ndnl Checks for chosen crypto library\nPKG_CHECK_MODULES([OpenSSL], [openssl],\n  [have_openssl=yes\n    AC_CHECK_LIB([crypto], [AES_encrypt], [have_deprecated_openssl_aes=yes])\n    AC_CHECK_LIB([crypto], [EVP_aes_128_ocb], [have_evp_aes_ocb=yes])],\n  [:])\nPKG_CHECK_MODULES([Nettle], [nettle], [have_nettle=yes], [:])\nAS_CASE([$with_crypto_library],\n  [openssl*],\n    [AS_IF([test \"x$have_openssl\" != xyes],\n       [AC_MSG_ERROR([OpenSSL crypto library not found])])\n     AC_DEFINE([USE_OPENSSL_AES], [1], [Use OpenSSL library])\n     AC_SUBST([CRYPTO_CFLAGS], [\"$OpenSSL_CFLAGS\"])\n     AC_SUBST([CRYPTO_LIBS], [\"$OpenSSL_LIBS -lcrypto\"])])\ncase \"${with_crypto_library}\" in\n  openssl|openssl-with-internal-ocb)\n    AS_IF([test \"x$have_deprecated_openssl_aes\" != xyes],\n      [AC_MSG_ERROR([found OpenSSL without AES support])])\n    AM_CONDITIONAL([USE_AES_OCB_FROM_OPENSSL], [false])\n    human_readable_cryptography_description='internal OCB, OpenSSL AES'\n    ;;\n  openssl-with-openssl-ocb)\n    AS_IF([test \"x$have_evp_aes_ocb\" != xyes],\n      [AC_MSG_ERROR([found OpenSSL without AES-OCB support])])\n    AM_CONDITIONAL([USE_AES_OCB_FROM_OPENSSL], [true])\n    human_readable_cryptography_description='OpenSSL OCB, OpenSSL AES'\n    ;;\n  nettle)\n    AS_IF([test \"x$have_nettle\" != xyes],\n      [AC_MSG_ERROR([Nettle crypto library not found])])\n    AC_DEFINE([USE_NETTLE_AES], [1], [Use Nettle library])\n    AC_SUBST([CRYPTO_CFLAGS], [\"$Nettle_CFLAGS\"])\n    AC_SUBST([CRYPTO_LIBS], [\"$Nettle_LIBS\"])\n    AM_CONDITIONAL([USE_AES_OCB_FROM_OPENSSL], [false])\n    human_readable_cryptography_description='internal OCB, Nettle AES'\n    ;;\n  apple-common-crypto)\n    AS_IF([test \"x$ac_cv_header_CommonCrypto_CommonCrypto_h\" != xyes],\n      [AC_MSG_ERROR([Apple Common Crypto header not found])])\n    AC_DEFINE([USE_APPLE_COMMON_CRYPTO_AES], [1], [Use Apple Common Crypto library])\n    AM_CONDITIONAL([USE_AES_OCB_FROM_OPENSSL], [false])\n    human_readable_cryptography_description='internal OCB, Apple Common Crypto AES'\n    ;;\nesac\n\nAC_ARG_ENABLE([static-crypto],\n  [AS_HELP_STRING([--enable-static-crypto], [Link crypto library statically @<:@no@:>@])],\n  [], [enable_static_crypto=\"$enable_static_libraries\"])\nAS_IF([test \"$enable_static_crypto\" = yes],\n  [CRYPTO_LIBS=\"-Wl,-Bstatic $CRYPTO_LIBS -Wl,-Bdynamic\"])\n\nAC_CHECK_DECL([forkpty],\n  [AC_DEFINE([FORKPTY_IN_LIBUTIL], [1],\n     [Define if libutil.h necessary for forkpty().])],\n  , [[#include <sys/types.h>\n#include <libutil.h>]])\n\nAC_SEARCH_LIBS([forkpty], [util bsd], [\n  AC_DEFINE([HAVE_FORKPTY],, [Define if you have forkpty().])\n])\n\nAC_MSG_CHECKING([whether FD_ISSET() argument is const])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>\nclass T {\npublic:\n  fd_set fds;\n  bool Fun( void ) const { return FD_ISSET( 0, &fds ); } };]],\n[[T x = T(); return x.Fun();]])],\n  [AC_DEFINE([FD_ISSET_IS_CONST], [1],\n     [Define if FD_ISSET() fd_set argument is const.])\n   AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([whether std::shared_ptr is available])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <memory>\nclass T {\npublic:\n  std::shared_ptr<int> Fun( void ) { return std::shared_ptr<int>( new int ( 0 ) ); } };]],\n[[T x; return !!x.Fun();]])],\n  [AC_DEFINE([HAVE_STD_SHARED_PTR], [1],\n     [Define if std::shared_ptr is available.])\n   AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([whether std::tr1::shared_ptr is available])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <tr1/memory>\nclass T {\npublic:\n  std::tr1::shared_ptr<int> Fun( void ) { return std::tr1::shared_ptr<int>( new int ( 0 ) ); } };]],\n[[T x; return !!x.Fun();]])],\n  [AC_DEFINE([HAVE_STD_TR1_SHARED_PTR], [1],\n     [Define if std::tr1::shared_ptr is available.])\n   AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([whether clock_gettime() is supported])\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <time.h>\nstruct timespec ts;\n]], [[return clock_gettime(CLOCK_MONOTONIC, &ts);]])],\n  [AC_DEFINE([HAVE_CLOCK_GETTIME], [1],\n     [Define if clock_gettime() is available.])\n   AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_CHECK_DECL([mach_absolute_time],\n  [AC_DEFINE([HAVE_MACH_ABSOLUTE_TIME], [1],\n     [Define if mach_absolute_time is available.])],\n  , [[#include <mach/mach_time.h>]])\n\n\nAC_CHECK_DECLS([__builtin_ctz])\n\nAC_CHECK_DECLS([ffs], [], [],\n  [[#include <strings.h>]])\n\nAC_CHECK_DECLS([be64toh, betoh64, bswap64, __builtin_bswap64], [], [],\n  [[#if defined(HAVE_ENDIAN_H)\n#include <endian.h>\n#elif defined(HAVE_SYS_ENDIAN_H)\n#include <sys/types.h>\n#include <sys/endian.h>\n#endif]])\n\nAS_IF([test x\"$ac_cv_have_decl_be64toh\" != xyes &&\n       test x\"$ac_cv_have_decl_betoh64\" != xyes],\n  [AC_CHECK_DECL([OSSwapHostToBigInt64],\n     [AC_DEFINE([HAVE_OSX_SWAP], [1],\n        [Define if OSSwapHostToBigInt64 and friends exist.])],\n     [AC_MSG_WARN([Unable to find byte swapping functions; using built-in routines.])],\n     [[#include <libkern/OSByteOrder.h>]])])\n\nAC_CHECK_DECL([IP_MTU_DISCOVER],\n  [AC_DEFINE([HAVE_IP_MTU_DISCOVER], [1],\n     [Define if IP_MTU_DISCOVER is a valid sockopt.])],\n  , [[#include <netinet/in.h>]])\n\nAC_CHECK_DECL([IP_RECVTOS],\n  [AC_DEFINE([HAVE_IP_RECVTOS], [1],\n     [Define if IP_RECVTOS is a valid sockopt.])],\n  , [[#include <netinet/in.h>]])\n\nAC_CHECK_DECL([__STDC_ISO_10646__],\n  [],\n  [AC_MSG_WARN([C library doesn't advertise wchar_t is Unicode (OS X works anyway with workaround).])],\n  [[#include <wchar.h>]])\n\nAC_CHECK_DECL([IUTF8],\n  [AC_DEFINE([HAVE_IUTF8], [1],\n     [Define if IUTF8 is a defined termios mode.])],\n  [AC_MSG_WARN([No IUTF8 termios mode; character-erase of multibyte character sequence probably does not work properly in canonical mode on this platform.])],\n  [[#include <termios.h>]])\n\n# Checks for protobuf\nPKG_CHECK_MODULES([protobuf], [protobuf])\n\n# On Debian Sid 2016-03-16ish at least, \"pkgconfig --libs protobuf\"\n# gives us the bogus \"-lprotobuf -pthread -lpthread\"; remove\n# \"-lpthread\" which misconfigures compile, causing a segfault in\n# mosh-server.\nAS_IF([echo \"$protobuf_LIBS\" | grep -q -- -pthread],\n  [protobuf_LIBS=\"`echo $protobuf_LIBS | sed 's/-lpthread//g'`\"])\n\nAC_ARG_ENABLE([static-protobuf],\n  [AS_HELP_STRING([--enable-static-protobuf], [Link protobuf statically @<:@no@:>@])],\n  [], [enable_static_protobuf=\"$enable_static_libraries\"])\nAS_IF([test \"$enable_static_protobuf\" = yes],\n  [protobuf_LIBS=\"-Wl,-Bstatic $protobuf_LIBS -Wl,-Bdynamic\"],\n  [AS_IF([test \"$enable_static_libstdc__\" = yes],\n     [AC_MSG_ERROR([--enable-static-libstdc++ requires --enable-static-protobuf])])\n   AS_IF([test \"$enable_static_libgcc\" = yes],\n     [AC_MSG_ERROR([--enable-static-libgcc requires --enable-static-protobuf])])])\n\nAC_MSG_CHECKING([whether protoc matches protobuf])\ncat > conftest.proto <<'EOF'\nsyntax = \"proto2\";\noption optimize_for = LITE_RUNTIME;\nEOF\nAS_IF([$PROTOC --cpp_out=. conftest.proto],\n  [old_CPPFLAGS=\"$CPPFLAGS\"\n   CPPFLAGS=\"$CPPFLAGS $protobuf_CFLAGS\"\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include \"conftest.pb.h\"]], [[]])],\n    [AC_MSG_RESULT([yes])],\n    [AC_MSG_RESULT([no])\n     cat conftest.err\n     AC_MSG_FAILURE([Could not build output generated by protoc ($PROTOC).\nCheck that protoc matches the installed protobuf headers and libraries.])])\n   CPPFLAGS=\"$old_CPPFLAGS\"],\n  [AC_MSG_RESULT([no])\n   AC_MSG_ERROR([Could not run protoc ($PROTOC).])])\n\n# Bash completion needs to ask where it goes if >= 2.0 is installed.\nAS_IF([test \"$install_completion\" != no],\n  [PKG_CHECK_MODULES([BASH_COMPLETION], [bash-completion >= 2.0],\n     [if test \"$prefix\" = \"NONE\"; then\n        completions=\"`pkg-config --variable=completionsdir bash-completion`\"\n      else\n        completions=\"`pkg-config --define-variable=prefix=$prefix --variable=completionsdir bash-completion`\"\n      fi],\n     [completions=\"${sysconfdir}/bash_completion.d\"])\n   AC_SUBST([completions])])\n\nAC_CONFIG_FILES([\n  Makefile\n  src/Makefile\n  src/crypto/Makefile\n  src/frontend/Makefile\n  src/fuzz/Makefile\n  src/include/Makefile\n  src/network/Makefile\n  src/protobufs/Makefile\n  src/statesync/Makefile\n  src/terminal/Makefile\n  src/util/Makefile\n  scripts/Makefile\n  src/examples/Makefile\n  src/tests/Makefile\n  man/Makefile\n  conf/Makefile\n])\nAC_OUTPUT\n\nAC_MSG_NOTICE([ === Configuration results ===])\nAC_MSG_NOTICE([Version:             $PACKAGE_VERSION])\nAC_MSG_NOTICE([c++ compiler:        $CXX])\nAC_MSG_NOTICE([Warning CXXFLAGS:    $WARNING_CXXFLAGS])\nAC_MSG_NOTICE([Picky CXXFLAGS:      $PICKY_CXXFLAGS])\nAC_MSG_NOTICE([Harden CFLAGS:       $HARDEN_CFLAGS])\nAC_MSG_NOTICE([Cryptography:        $human_readable_cryptography_description])\nAC_MSG_NOTICE([ =============================])\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "fedora",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "macosx",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "ocb-license.html",
          "type": "blob",
          "size": 2.109375,
          "content": "<TITLE>OCB - An Authenticated-Encryption Scheme - GPL Patent Grant - Rogaway</TITLE>\n\n<body bgcolor=\"#FFFFFF\">\n<H2><a name=\"ocb-grant\"> <font face=\"Arial, Helvetica, sans-serif\" size=\"6\" color=\"#FF0000\">OCB: \n  Patent Grant for GNU GPL</font> </a> </H2>\n\nWhereas I, Phillip Rogaway (hereinafter \"Inventor\") have sought \npatent protection for certain technology \n(hereinafter \"Patented Technology\"), \nand Inventor wishes to aid the Free Software Foundation in achieving its goals, \nand Inventor wishes to increase public awareness of Patented Technology, \nInventor hereby grants a fully paid-up, nonexclusive, \nroyalty-free license to \npractice any patents claiming priority to the \npatent applications below (\"the Patents\") \nif practiced by\nsoftware distributed \nunder the terms of any version of \nthe GNU General Public License as published by the Free Software Foundation, \n59 Temple Place, Suite 330, Boston, MA 02111. \nInventor reserves all other rights, including without limitation\nlicensing for software not distributed under the GNU General Public License. \n\n<h4>The patents:</h4>\n\n\n<ul>\n<li> <a href=\"http://appft1.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&amp;r=2&amp;f=G&amp;l=50&amp;co1=AND&amp;d=PG01&amp;s1=rogaway.IN.&amp;OS=IN/rogaway&amp;RS=IN/rogaway\">\n09/918,615</a>  -\nMethod and Apparatus for Facilitating Efficient Authenticated Encryption.\n\n<li> <a href=\"http://appft1.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&amp;r=3&amp;f=G&amp;l=50&amp;co1=AND&amp;d=PG01&amp;s1=rogaway.IN.&amp;OS=IN/rogaway&amp;RS=IN/rogaway\">\n09/948,084</a> - \nMethod and Apparatus for Realizing a Parallelizable Variable-Input-Length \nPseudorandom Function. \n</ul>\n\n<hr>\n\n<p><b>June 12, 2012</b>: Phillip Rogaway licensed the distribution of OCB\nin Mosh under the GPL with the OpenSSL linking exception and iOS\nwaiver contained in the <code>COPYING.iOS</code> file.</p>\n\n<blockquote>\n  \"Mosh with the two GPL exemptions you specify in the attached note\n  is freely licensed to use for any OCB-related IP that I own.\"\n</blockquote>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}