{
  "metadata": {
    "timestamp": 1736566297422,
    "page": 48,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/brpc",
      "stars": 16685,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 0.7236328125,
          "content": "github:\n  description: brpc is an Industrial-grade RPC framework using C++ Language, which is often used in high performance system such as Search, Storage, Machine learning, Advertisement, Recommendation etc. \"brpc\" means \"better RPC\".\n  labels:\n    - rpc\n  homepage: https://brpc.apache.org\n  custom_subjects:\n    new_pr: \"[PR] {title} ({repository})\"\n    close_pr: \"Re: [PR] {title} ({repository})\"\n    comment_pr: \"Re: [PR] {title} ({repository})\"\n    diffcomment: \"Re: [PR] {title} ({repository})\"\n    merge_pr: \"Re: [PR] {title} ({repository})\"\n    new_issue: \"[I] {title} ({repository})\"\n    comment_issue: \"Re: [I] {title} ({repository})\"\n    close_issue: \"Re: [I] {title} ({repository})\"\n    catchall: \"[GH] {title} ({repository})\"\n"
        },
        {
          "name": ".bazelignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "./example/build_with_bazel"
        },
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 1.6240234375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# Default build options. These are applied first and unconditionally.\n#\ncommon --registry=https://bcr.bazel.build\ncommon --registry=https://baidu.github.io/babylon/registry\n\nbuild --cxxopt=\"-std=c++17\"\n# Use gnu17 for asm keyword.\nbuild --conlyopt=\"-std=gnu17\"\n\n# Enable position independent code (this is the default on macOS and Windows)\n# (Workaround for https://github.com/bazelbuild/rules_foreign_cc/issues/421)\nbuild --copt=-fPIC\nbuild --fission=dbg,opt\nbuild --features=per_object_debug_info\n\n# We already have absl in the build, define absl=1 to tell googletest to use absl for backtrace.\nbuild --define absl=1\n\n# For brpc.\nbuild --define=BRPC_WITH_GLOG=true\ntest --define=BRPC_BUILD_FOR_UNITTEST=true\n\n# Pass PATH, CC, CXX and LLVM_CONFIG variables from the environment.\nbuild --action_env=CC\nbuild --action_env=CXX\nbuild --action_env=LLVM_CONFIG\nbuild --action_env=PATH\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "7.2.1\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.658203125,
          "content": "# Ignore all files without extension.\n# If you need to git-add a file without extension, add -f\n*\n!*.*\n!*/\n\n*.o\n*.a\n*.log\n*.pb.cc\n*.pb.h\n*.prof\n*.so\n*.dylib\n*.rej\n/output\n/test/output\nbuild/\n\n# Ignore hidden files\n.*\n*.swp\n\n# Ignore auto-generated files\nconfig.mk\nsrc/butil/config.h\n\n# Ignore CMake files\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n/CPackSourceConfig.cmake\n/CPackConfig.cmake\n/cmake-build-debug/\n/googletest-download/\n/googletest-src/\n/test/rpc_data/\n/test/monitor/\n/test/curl.out\n/test/out.txt\n/test/recordio_ref.io\n\n# Ignore protoc-gen-mcpack files\n/protoc-gen-mcpack*/"
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 7.4306640625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n---\nheader:\n  license:\n    spdx-id: Apache-2.0\n    copyright-owner: Apache Software Foundation\n\n  paths-ignore:\n    - '**/*.md'\n    - '**/*.svg'\n    - '**/*.yml'\n    - '*/TBD'\n    - '.idea'\n    - 'LICENSE'\n    - 'NOTICE'\n    - 'docs'\n    - 'example/*/*.flags'\n    - 'example/*/*.json'\n    - 'example/*/*.pem'\n    - 'example/*/*.port'\n    - 'src/bthread/offset_inl.list'\n    - 'test/*.crt'\n    - 'test/*.key'\n    - 'test/jsonout'\n    - 'tools/trackme_server/bugs'\n\n    # Apache\n    - 'src/butil/recordio.h'\n\n    # Boost Software License\n    - 'src/bthread/context.*'\n    - 'src/butil/intrusive_ptr.hpp'\n    - 'src/butil/unique_ptr.h'\n\n    # BSD\n    - 'src/butil/crc32c.*'\n    - 'src/butil/third_party/modp_b64/*'\n    - 'src/butil/third_party/superfasthash/*'\n    - 'src/butil/third_party/valgrind/*'\n\n    # Chromium\n    - 'src/butil/at_exit.*'\n    - 'src/butil/atomic*'\n    - 'src/butil/auto_reset.h'\n    - 'src/butil/base64.*'\n    - 'src/butil/base64url.*'\n    - 'src/butil/base_export.h'\n    - 'src/butil/base_paths.cc'\n    - 'src/butil/basictypes.h'\n    - 'src/butil/big_endian.*'\n    - 'src/butil/bits.h'\n    - 'src/butil/build_config.h'\n    - 'src/butil/cancelable_callback.h'\n    - 'src/butil/compiler_specific.h'\n    - 'src/butil/containers/*'\n    - 'src/butil/cpu.*'\n    - 'src/butil/debug/*'\n    - 'src/butil/environment.*'\n    - 'src/butil/file_*'\n    - 'src/butil/files/dir_reader_fallback.h'\n    - 'src/butil/files/dir_reader_linux.h'\n    - 'src/butil/files/dir_reader_posix.h'\n    - 'src/butil/files/file.*'\n    - 'src/butil/files/file_enumerator*'\n    - 'src/butil/files/file_p*'\n    - 'src/butil/files/memory_mapped_file*'\n    - 'src/butil/files/scoped*'\n    - 'src/butil/float_util.h'\n    - 'src/butil/format_macros.h'\n    - 'src/butil/gtest_prod_util.h'\n    - 'src/butil/guid.cc'\n    - 'src/butil/guid.h'\n    - 'src/butil/guid_posix.cc'\n    - 'src/butil/hash.cc'\n    - 'src/butil/hash.h'\n    - 'src/butil/lazy_instance.cc'\n    - 'src/butil/lazy_instance.h'\n    - 'src/butil/location.cc'\n    - 'src/butil/location.h'\n    - 'src/butil/mac/bundle_locations.h'\n    - 'src/butil/mac/bundle_locations.mm'\n    - 'src/butil/mac/foundation_util.h'\n    - 'src/butil/mac/foundation_util.mm'\n    - 'src/butil/mac/scoped_cftyperef.h'\n    - 'src/butil/mac/scoped_mach_port.cc'\n    - 'src/butil/mac/scoped_mach_port.h'\n    - 'src/butil/mac/scoped_typeref.h'\n    - 'src/butil/macros.h'\n    - 'src/butil/memory/aligned_memory.cc'\n    - 'src/butil/memory/aligned_memory.h'\n    - 'src/butil/memory/linked_ptr.h'\n    - 'src/butil/memory/manual_constructor.h'\n    - 'src/butil/memory/raw_scoped_refptr_mismatch_checker.h'\n    - 'src/butil/memory/ref_counted.cc'\n    - 'src/butil/memory/ref_counted.h'\n    - 'src/butil/memory/ref_counted_memory.cc'\n    - 'src/butil/memory/ref_counted_memory.h'\n    - 'src/butil/memory/scoped_open_process.h'\n    - 'src/butil/memory/scoped_policy.h'\n    - 'src/butil/memory/scoped_ptr.h'\n    - 'src/butil/memory/scoped_vector.h'\n    - 'src/butil/memory/singleton.cc'\n    - 'src/butil/memory/singleton.h'\n    - 'src/butil/memory/singleton_objc.h'\n    - 'src/butil/memory/weak_ptr.cc'\n    - 'src/butil/memory/weak_ptr.h'\n    - 'src/butil/move.h'\n    - 'src/butil/numerics/safe_conversions.h'\n    - 'src/butil/numerics/safe_conversions_impl.h'\n    - 'src/butil/numerics/safe_math.h'\n    - 'src/butil/numerics/safe_math_impl.h'\n    - 'src/butil/observer_list.h'\n    - 'src/butil/port.h'\n    - 'src/butil/posix/eintr_wrapper.h'\n    - 'src/butil/posix/file_descriptor_shuffle.cc'\n    - 'src/butil/posix/file_descriptor_shuffle.h'\n    - 'src/butil/posix/global_descriptors.cc'\n    - 'src/butil/posix/global_descriptors.h'\n    - 'src/butil/rand_util.cc'\n    - 'src/butil/rand_util.h'\n    - 'src/butil/rand_util_posix.cc'\n    - 'src/butil/safe_strerror_posix.cc'\n    - 'src/butil/safe_strerror_posix.h'\n    - 'src/butil/scoped_clear_errno.h'\n    - 'src/butil/scoped_generic.h'\n    - 'src/butil/scoped_observer.h'\n    - 'src/butil/sha1.h'\n    - 'src/butil/sha1_portable.cc'\n    - 'src/butil/stl_util.h'\n    - 'src/butil/strings/latin1_string_conversions.cc'\n    - 'src/butil/strings/latin1_string_conversions.h'\n    - 'src/butil/strings/nullable_string16.cc'\n    - 'src/butil/strings/nullable_string16.h'\n    - 'src/butil/strings/safe_sprintf.cc'\n    - 'src/butil/strings/safe_sprintf.h'\n    - 'src/butil/strings/string16.cc'\n    - 'src/butil/strings/string16.h'\n    - 'src/butil/strings/string_number_conversions.cc'\n    - 'src/butil/strings/string_number_conversions.h'\n    - 'src/butil/strings/string_piece.cc'\n    - 'src/butil/strings/string_piece.h'\n    - 'src/butil/strings/string_split.cc'\n    - 'src/butil/strings/string_split.h'\n    - 'src/butil/strings/string_tokenizer.h'\n    - 'src/butil/strings/string_util.cc'\n    - 'src/butil/strings/string_util.h'\n    - 'src/butil/strings/string_util_constants.cc'\n    - 'src/butil/strings/string_util_posix.h'\n    - 'src/butil/strings/stringize_macros.h'\n    - 'src/butil/strings/stringprintf.cc'\n    - 'src/butil/strings/stringprintf.h'\n    - 'src/butil/strings/sys_string_conversions.h'\n    - 'src/butil/strings/sys_string_conversions_mac.mm'\n    - 'src/butil/strings/sys_string_conversions_posix.cc'\n    - 'src/butil/strings/utf_offset_string_conversions.cc'\n    - 'src/butil/strings/utf_offset_string_conversions.h'\n    - 'src/butil/strings/utf_string_conversion_utils.cc'\n    - 'src/butil/strings/utf_string_conversion_utils.h'\n    - 'src/butil/strings/utf_string_conversions.cc'\n    - 'src/butil/strings/utf_string_conversions.h'\n    - 'src/butil/synchronization/cancellation_flag.*'\n    - 'src/butil/synchronization/condition_variable.h'\n    - 'src/butil/synchronization/condition_variable_posix.cc'\n    - 'src/butil/synchronization/spin_wait.h'\n    - 'src/butil/synchronization/waitable_event.h'\n    - 'src/butil/synchronization/waitable_event_posix.cc'\n    - 'src/butil/sys_byteorder.h'\n    - 'src/butil/third_party/symbolize/glog/*'\n    - 'src/butil/threading/*'\n    - 'src/butil/time/*'\n    - 'src/butil/type_traits.h'\n    - 'src/butil/version.*'\n    - 'test/*.cc'\n    - 'test/memory_unittest_mac.h'\n    - 'test/multiprocess_func_list.h'\n    - 'test/scoped_locale.h'\n    - 'test/test_switches.h'\n\n    # David M. Gay\n    - 'src/butil/third_party/dmg_fp/*'\n\n    # Google\n    - 'src/brpc/builtin/pprof_perl.cpp'\n    - 'src/brpc/callback.h'\n    - 'src/brpc/details/tcmalloc_extension.h'\n    - 'src/butil/gperftools_profiler.h'\n    - 'src/butil/third_party/dynamic_annotations/*'\n    - 'src/butil/third_party/snappy/*'\n    - 'src/butil/third_party/symbolize/*'\n    - 'tools/pprof'\n\n    # ICU\n    - 'src/butil/third_party/icu/*'\n\n    # MIT\n    - 'src/brpc/policy/dh.*'\n    - 'src/butil/third_party/rapidjson/**'\n\n    # NGINX\n    - 'src/brpc/details/http_parser.*'\n\n    # Fuzzing seed\n    - 'test/fuzzing/fuzz_*_seed_corpus/*'\n\n  comment: on-failure\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 16.533203125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nload(\"@rules_proto//proto:defs.bzl\", \"proto_library\")\nload(\"@rules_cc//cc:defs.bzl\", \"cc_binary\", \"cc_library\", \"cc_proto_library\", \"objc_library\")\n\nlicenses([\"notice\"])  # Apache v2\n\nexports_files([\"LICENSE\"])\n\nCOPTS = [\n    \"-DBTHREAD_USE_FAST_PTHREAD_MUTEX\",\n    \"-D__const__=__unused__\",\n    \"-D_GNU_SOURCE\",\n    \"-DUSE_SYMBOLIZE\",\n    \"-DNO_TCMALLOC\",\n    \"-D__STDC_FORMAT_MACROS\",\n    \"-D__STDC_LIMIT_MACROS\",\n    \"-D__STDC_CONSTANT_MACROS\",\n    \"-DGFLAGS_NS=google\",\n] + select({\n    \"//bazel/config:brpc_with_glog\": [\"-DBRPC_WITH_GLOG=1\"],\n    \"//conditions:default\": [\"-DBRPC_WITH_GLOG=0\"],\n}) + select({\n    \"//bazel/config:brpc_with_mesalink\": [\"-DUSE_MESALINK\"],\n    \"//conditions:default\": [\"\"],\n}) + select({\n    \"//bazel/config:brpc_with_thrift\": [\"-DENABLE_THRIFT_FRAMED_PROTOCOL=1\"],\n    \"//conditions:default\": [\"\"],\n}) + select({\n    \"//bazel/config:brpc_with_thrift_legacy_version\": [],\n    \"//conditions:default\": [\"-DTHRIFT_STDCXX=std\"],\n}) + select({\n    \"//bazel/config:brpc_with_rdma\": [\"-DBRPC_WITH_RDMA=1\"],\n    \"//conditions:default\": [\"\"],\n}) + select({\n    \"//bazel/config:brpc_with_debug_bthread_sche_safety\": [\"-DBRPC_DEBUG_BTHREAD_SCHE_SAFETY=1\"],\n    \"//conditions:default\": [\"-DBRPC_DEBUG_BTHREAD_SCHE_SAFETY=0\"],\n}) + select({\n      \"//bazel/config:brpc_with_debug_lock\": [\"-DBRPC_DEBUG_LOCK=1\"],\n      \"//conditions:default\": [\"-DBRPC_DEBUG_LOCK=0\"],\n})\n\nLINKOPTS = [\n    \"-pthread\",\n    \"-ldl\",\n] + select({\n    \"@bazel_tools//tools/osx:darwin_x86_64\": [\n        \"-framework CoreFoundation\",\n        \"-framework CoreGraphics\",\n        \"-framework CoreData\",\n        \"-framework CoreText\",\n        \"-framework Security\",\n        \"-framework Foundation\",\n        \"-Wl,-U,_MallocExtension_ReleaseFreeMemory\",\n        \"-Wl,-U,_ProfilerStart\",\n        \"-Wl,-U,_ProfilerStop\",\n        \"-Wl,-U,__Z13GetStackTracePPvii\",\n        \"-Wl,-U,_RegisterThriftProtocol\",\n        \"-Wl,-U,_mallctl\",\n        \"-Wl,-U,_malloc_stats_print\",\n    ],\n    \"//conditions:default\": [\n        \"-lrt\",\n    ],\n}) + select({\n    \"//bazel/config:brpc_with_mesalink\": [\n        \"-lmesalink\",\n    ],\n    \"//conditions:default\": [],\n}) + select({\n    \"//bazel/config:brpc_with_rdma\": [\n        \"-libverbs\",\n    ],\n    \"//conditions:default\": [],\n})\n\ngenrule(\n    name = \"config_h\",\n    outs = [\n        \"src/butil/config.h\",\n    ],\n    cmd = \"\"\"cat << EOF  >$@\"\"\" + \"\"\"\n// This file is auto-generated.\n#ifndef  BUTIL_CONFIG_H\n#define  BUTIL_CONFIG_H\n#ifdef BRPC_WITH_GLOG\n#undef BRPC_WITH_GLOG\n#endif\n#define BRPC_WITH_GLOG \"\"\" + select({\n              \"//bazel/config:brpc_with_glog\": \"1\",\n              \"//conditions:default\": \"0\",\n          }) +\n          \"\"\"\n#endif  // BUTIL_CONFIG_H\nEOF\n    \"\"\",\n)\n\nBUTIL_SRCS = [\n    \"src/butil/third_party/dmg_fp/g_fmt.cc\",\n    \"src/butil/third_party/dmg_fp/dtoa_wrapper.cc\",\n    \"src/butil/third_party/dynamic_annotations/dynamic_annotations.c\",\n    \"src/butil/third_party/icu/icu_utf.cc\",\n    \"src/butil/third_party/superfasthash/superfasthash.c\",\n    \"src/butil/third_party/modp_b64/modp_b64.cc\",\n    \"src/butil/third_party/symbolize/demangle.cc\",\n    \"src/butil/third_party/symbolize/symbolize.cc\",\n    \"src/butil/third_party/snappy/snappy-sinksource.cc\",\n    \"src/butil/third_party/snappy/snappy-stubs-internal.cc\",\n    \"src/butil/third_party/snappy/snappy.cc\",\n    \"src/butil/third_party/murmurhash3/murmurhash3.cpp\",\n    \"src/butil/arena.cpp\",\n    \"src/butil/at_exit.cc\",\n    \"src/butil/atomicops_internals_x86_gcc.cc\",\n    \"src/butil/base64.cc\",\n    \"src/butil/base64url.cc\",\n    \"src/butil/big_endian.cc\",\n    \"src/butil/cpu.cc\",\n    \"src/butil/debug/alias.cc\",\n    \"src/butil/debug/asan_invalid_access.cc\",\n    \"src/butil/debug/crash_logging.cc\",\n    \"src/butil/debug/debugger.cc\",\n    \"src/butil/debug/debugger_posix.cc\",\n    \"src/butil/debug/dump_without_crashing.cc\",\n    \"src/butil/debug/proc_maps_linux.cc\",\n    \"src/butil/debug/stack_trace.cc\",\n    \"src/butil/debug/stack_trace_posix.cc\",\n    \"src/butil/environment.cc\",\n    \"src/butil/files/file.cc\",\n    \"src/butil/files/file_posix.cc\",\n    \"src/butil/files/file_enumerator.cc\",\n    \"src/butil/files/file_enumerator_posix.cc\",\n    \"src/butil/files/file_path.cc\",\n    \"src/butil/files/file_path_constants.cc\",\n    \"src/butil/files/memory_mapped_file.cc\",\n    \"src/butil/files/memory_mapped_file_posix.cc\",\n    \"src/butil/files/scoped_file.cc\",\n    \"src/butil/files/scoped_temp_dir.cc\",\n    \"src/butil/file_util.cc\",\n    \"src/butil/file_util_posix.cc\",\n    \"src/butil/guid.cc\",\n    \"src/butil/guid_posix.cc\",\n    \"src/butil/hash.cc\",\n    \"src/butil/lazy_instance.cc\",\n    \"src/butil/location.cc\",\n    \"src/butil/memory/aligned_memory.cc\",\n    \"src/butil/memory/ref_counted.cc\",\n    \"src/butil/memory/ref_counted_memory.cc\",\n    \"src/butil/memory/singleton.cc\",\n    \"src/butil/memory/weak_ptr.cc\",\n    \"src/butil/posix/file_descriptor_shuffle.cc\",\n    \"src/butil/posix/global_descriptors.cc\",\n    \"src/butil/process_util.cc\",\n    \"src/butil/rand_util.cc\",\n    \"src/butil/rand_util_posix.cc\",\n    \"src/butil/fast_rand.cpp\",\n    \"src/butil/safe_strerror_posix.cc\",\n    \"src/butil/sha1_portable.cc\",\n    \"src/butil/strings/latin1_string_conversions.cc\",\n    \"src/butil/strings/nullable_string16.cc\",\n    \"src/butil/strings/safe_sprintf.cc\",\n    \"src/butil/strings/string16.cc\",\n    \"src/butil/strings/string_number_conversions.cc\",\n    \"src/butil/strings/string_split.cc\",\n    \"src/butil/strings/string_piece.cc\",\n    \"src/butil/strings/string_util.cc\",\n    \"src/butil/strings/string_util_constants.cc\",\n    \"src/butil/strings/stringprintf.cc\",\n    \"src/butil/strings/utf_offset_string_conversions.cc\",\n    \"src/butil/strings/utf_string_conversion_utils.cc\",\n    \"src/butil/strings/utf_string_conversions.cc\",\n    \"src/butil/synchronization/cancellation_flag.cc\",\n    \"src/butil/synchronization/condition_variable_posix.cc\",\n    \"src/butil/synchronization/waitable_event_posix.cc\",\n    \"src/butil/threading/non_thread_safe_impl.cc\",\n    \"src/butil/threading/platform_thread_posix.cc\",\n    \"src/butil/threading/simple_thread.cc\",\n    \"src/butil/threading/thread_checker_impl.cc\",\n    \"src/butil/threading/thread_collision_warner.cc\",\n    \"src/butil/threading/thread_id_name_manager.cc\",\n    \"src/butil/threading/thread_local_posix.cc\",\n    \"src/butil/threading/thread_local_storage.cc\",\n    \"src/butil/threading/thread_local_storage_posix.cc\",\n    \"src/butil/threading/thread_restrictions.cc\",\n    \"src/butil/threading/watchdog.cc\",\n    \"src/butil/time/clock.cc\",\n    \"src/butil/time/default_clock.cc\",\n    \"src/butil/time/default_tick_clock.cc\",\n    \"src/butil/time/tick_clock.cc\",\n    \"src/butil/time/time.cc\",\n    \"src/butil/time/time_posix.cc\",\n    \"src/butil/version.cc\",\n    \"src/butil/logging.cc\",\n    \"src/butil/class_name.cpp\",\n    \"src/butil/errno.cpp\",\n    \"src/butil/find_cstr.cpp\",\n    \"src/butil/status.cpp\",\n    \"src/butil/string_printf.cpp\",\n    \"src/butil/thread_local.cpp\",\n    \"src/butil/thread_key.cpp\",\n    \"src/butil/unix_socket.cpp\",\n    \"src/butil/endpoint.cpp\",\n    \"src/butil/fd_utility.cpp\",\n    \"src/butil/files/temp_file.cpp\",\n    \"src/butil/files/file_watcher.cpp\",\n    \"src/butil/time.cpp\",\n    \"src/butil/zero_copy_stream_as_streambuf.cpp\",\n    \"src/butil/crc32c.cc\",\n    \"src/butil/containers/case_ignored_flat_map.cpp\",\n    \"src/butil/iobuf.cpp\",\n    \"src/butil/iobuf_profiler.cpp\",\n    \"src/butil/binary_printer.cpp\",\n    \"src/butil/recordio.cc\",\n    \"src/butil/popen.cpp\",\n] + select({\n    \"@bazel_tools//tools/osx:darwin_x86_64\": [\n        \"src/butil/time/time_mac.cc\",\n        \"src/butil/mac/scoped_mach_port.cc\",\n    ],\n    \"//conditions:default\": [\n        \"src/butil/file_util_linux.cc\",\n        \"src/butil/threading/platform_thread_linux.cc\",\n        \"src/butil/strings/sys_string_conversions_posix.cc\",\n    ],\n})\n\nobjc_library(\n    name = \"macos_lib\",\n    hdrs = [\n        \"src/butil/atomicops.h\",\n        \"src/butil/atomicops_internals_atomicword_compat.h\",\n        \"src/butil/atomicops_internals_mac.h\",\n        \"src/butil/base_export.h\",\n        \"src/butil/basictypes.h\",\n        \"src/butil/build_config.h\",\n        \"src/butil/compat.h\",\n        \"src/butil/compiler_specific.h\",\n        \"src/butil/containers/hash_tables.h\",\n        \"src/butil/debug/debugger.h\",\n        \"src/butil/debug/leak_annotations.h\",\n        \"src/butil/file_descriptor_posix.h\",\n        \"src/butil/file_util.h\",\n        \"src/butil/files/file.h\",\n        \"src/butil/files/file_path.h\",\n        \"src/butil/files/scoped_file.h\",\n        \"src/butil/lazy_instance.h\",\n        \"src/butil/logging.h\",\n        \"src/butil/mac/bundle_locations.h\",\n        \"src/butil/mac/foundation_util.h\",\n        \"src/butil/mac/scoped_cftyperef.h\",\n        \"src/butil/mac/scoped_typeref.h\",\n        \"src/butil/macros.h\",\n        \"src/butil/string_printf.h\",\n        \"src/butil/memory/aligned_memory.h\",\n        \"src/butil/memory/scoped_policy.h\",\n        \"src/butil/memory/scoped_ptr.h\",\n        \"src/butil/move.h\",\n        \"src/butil/port.h\",\n        \"src/butil/posix/eintr_wrapper.h\",\n        \"src/butil/scoped_generic.h\",\n        \"src/butil/strings/string16.h\",\n        \"src/butil/strings/string_piece.h\",\n        \"src/butil/strings/string_util.h\",\n        \"src/butil/strings/string_util_posix.h\",\n        \"src/butil/strings/sys_string_conversions.h\",\n        \"src/butil/synchronization/lock.h\",\n        \"src/butil/third_party/dynamic_annotations/dynamic_annotations.h\",\n        \"src/butil/third_party/murmurhash3/murmurhash3.h\",\n        \"src/butil/threading/platform_thread.h\",\n        \"src/butil/threading/thread_id_name_manager.h\",\n        \"src/butil/threading/thread_restrictions.h\",\n        \"src/butil/time.h\",\n        \"src/butil/time/time.h\",\n        \"src/butil/type_traits.h\",\n        \":config_h\",\n    ],\n    enable_modules = True,\n    includes = [\"src/\"],\n    non_arc_srcs = [\n        \"src/butil/mac/bundle_locations.mm\",\n        \"src/butil/mac/foundation_util.mm\",\n        \"src/butil/file_util_mac.mm\",\n        \"src/butil/threading/platform_thread_mac.mm\",\n        \"src/butil/strings/sys_string_conversions_mac.mm\",\n    ],\n    tags = [\"manual\"],\n    deps = [\n        \"@com_github_gflags_gflags//:gflags\",\n    ] + select({\n        \"//bazel/config:brpc_with_glog\": [\"@com_github_google_glog//:glog\"],\n        \"//conditions:default\": [],\n    }),\n)\n\ncc_library(\n    name = \"butil\",\n    srcs = BUTIL_SRCS,\n    hdrs = glob([\n        \"src/butil/*.h\",\n        \"src/butil/*.hpp\",\n        \"src/butil/**/*.h\",\n        \"src/butil/**/*.hpp\",\n        \"src/butil/**/**/*.h\",\n        \"src/butil/**/**/*.hpp\",\n        \"src/butil/**/**/**/*.h\",\n        \"src/butil/**/**/**/*.hpp\",\n    ]) + [\n        \"src/butil/third_party/dmg_fp/dtoa.cc\",\n        \":config_h\",\n    ],\n    copts = COPTS + select({\n        \"//bazel/config:brpc_build_for_unittest\": [\n            \"-DBVAR_NOT_LINK_DEFAULT_VARIABLES\",\n            \"-DUNIT_TEST\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    includes = [\n        \"src/\",\n    ],\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"@com_github_gflags_gflags//:gflags\",\n        \"@com_github_madler_zlib//:zlib\",\n        \"@com_google_protobuf//:protobuf\",\n    ] + select({\n        \"//bazel/config:brpc_with_glog\": [\"@com_github_google_glog//:glog\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \"@bazel_tools//tools/osx:darwin_x86_64\": [\":macos_lib\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \"//bazel/config:brpc_with_boringssl\": [\"@boringssl//:ssl\", \"@boringssl//:crypto\"],\n        \"//conditions:default\": [\"@openssl//:ssl\", \"@openssl//:crypto\"],\n    }),\n)\n\ncc_library(\n    name = \"bvar\",\n    srcs = glob(\n        [\n            \"src/bvar/*.cpp\",\n            \"src/bvar/detail/*.cpp\",\n        ],\n        exclude = [\n            \"src/bvar/default_variables.cpp\",\n        ],\n    ) + select({\n        \"//bazel/config:brpc_build_for_unittest\": [],\n        \"//conditions:default\": [\"src/bvar/default_variables.cpp\"],\n    }),\n    hdrs = glob([\n        \"src/bvar/*.h\",\n        \"src/bvar/utils/*.h\",\n        \"src/bvar/detail/*.h\",\n    ]),\n    copts = COPTS + select({\n        \"//bazel/config:brpc_build_for_unittest\": [\n            \"-DBVAR_NOT_LINK_DEFAULT_VARIABLES\",\n            \"-DUNIT_TEST\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    includes = [\n        \"src/\",\n    ],\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":butil\",\n    ],\n)\n\ncc_library(\n    name = \"bthread\",\n    srcs = glob([\n        \"src/bthread/*.cpp\",\n    ]),\n    hdrs = glob([\n        \"src/bthread/*.h\",\n        \"src/bthread/*.list\",\n    ]),\n    copts = COPTS,\n    includes = [\n        \"src/\",\n    ],\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":butil\",\n        \":bvar\",\n    ],\n)\n\ncc_library(\n    name = \"json2pb\",\n    srcs = glob([\n        \"src/json2pb/*.cpp\",\n    ]),\n    hdrs = glob([\n        \"src/json2pb/*.h\",\n    ]),\n    copts = COPTS,\n    includes = [\n        \"src/\",\n    ],\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":butil\",\n    ],\n)\n\ncc_library(\n    name = \"mcpack2pb\",\n    srcs = [\n        \"src/mcpack2pb/field_type.cpp\",\n        \"src/mcpack2pb/mcpack2pb.cpp\",\n        \"src/mcpack2pb/parser.cpp\",\n        \"src/mcpack2pb/serializer.cpp\",\n    ],\n    hdrs = glob([\n        \"src/mcpack2pb/*.h\",\n    ]),\n    copts = COPTS,\n    includes = [\n        \"src/\",\n    ],\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":brpc_idl_options_cc_proto\",\n        \":butil\",\n        \"@com_google_protobuf//:protoc_lib\",\n    ],\n)\n\nfilegroup(\n    name = \"brpc_idl_options_proto_srcs\",\n    srcs = [\n        \"src/idl_options.proto\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nproto_library(\n    name = \"brpc_idl_options_proto\",\n    srcs = [\":brpc_idl_options_proto_srcs\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"@com_google_protobuf//:descriptor_proto\",\n    ],\n)\n\ncc_proto_library(\n    name = \"brpc_idl_options_cc_proto\",\n    visibility = [\"//visibility:public\"],\n    deps = [\":brpc_idl_options_proto\"],\n)\n\nfilegroup(\n    name = \"brpc_internal_proto_srcs\",\n    srcs = glob([\n        \"src/brpc/*.proto\",\n        \"src/brpc/policy/*.proto\",\n    ]),\n    visibility = [\"//visibility:public\"],\n)\n\nproto_library(\n    name = \"brpc_internal_proto\",\n    srcs = [\":brpc_internal_proto_srcs\"],\n    strip_import_prefix = \"src\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":brpc_idl_options_proto\",\n        \"@com_google_protobuf//:descriptor_proto\",\n    ],\n)\n\ncc_proto_library(\n    name = \"brpc_internal_cc_proto\",\n    visibility = [\"//visibility:public\"],\n    deps = [\":brpc_internal_proto\"],\n)\n\ncc_library(\n    name = \"brpc\",\n    srcs = glob([\n        \"src/brpc/*.cpp\",\n        \"src/brpc/**/*.cpp\",\n    ],\n    exclude = [\n        \"src/brpc/thrift_service.cpp\",\n        \"src/brpc/thrift_message.cpp\",\n        \"src/brpc/policy/thrift_protocol.cpp\",\n        \"src/brpc/event_dispatcher_epoll.cpp\",\n        \"src/brpc/event_dispatcher_kqueue.cpp\",\n    ]) + select({\n        \"//bazel/config:brpc_with_thrift\": glob([\n            \"src/brpc/thrift*.cpp\",\n            \"src/brpc/**/thrift*.cpp\",\n        ]),\n        \"//conditions:default\": [],\n    }),\n    hdrs = glob([\n        \"src/brpc/*.h\",\n        \"src/brpc/**/*.h\",\n        \"src/brpc/event_dispatcher_epoll.cpp\",\n        \"src/brpc/event_dispatcher_kqueue.cpp\",\n    ]),\n    copts = COPTS,\n    includes = [\n        \"src/\",\n    ],\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":brpc_internal_cc_proto\",\n        \":bthread\",\n        \":butil\",\n        \":bvar\",\n        \":json2pb\",\n        \":mcpack2pb\",\n        \"@com_github_google_leveldb//:leveldb\",\n    ] + select({\n        \"//bazel/config:brpc_with_thrift\": [\n            \"@org_apache_thrift//:thrift\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\ncc_binary(\n    name = \"protoc-gen-mcpack\",\n    srcs = [\n        \"src/mcpack2pb/generator.cpp\",\n    ],\n    copts = COPTS,\n    linkopts = LINKOPTS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":brpc\",\n        \":brpc_idl_options_cc_proto\",\n    ],\n)\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 2.23046875,
          "content": "<!--\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n-->\n\n# Table of Contents\n\n- [0.9.7](#0.9.7)\n- [0.9.6](#0.9.6)\n- [0.9.5](#0.9.5)\n- [0.9.0](#0.9.0)\n\n## 0.9.7\n* Add DISCLAIMER-WIP as license issues are not all resolved\n* Fix many license related issues\n* Ignore flow control in h2 when sending first request\n* Add flame graph view for profiling builtin service\n* Fix bug that _avg_latency maybe zero in lalb\n* Fix bug that logging namespace conflicts with others\n* Add gdb_bthread_stack.py to read bthread stack\n* Adapt to Arm64\n* Support redis server protocol\n* Enable circuit breaker for backup request\n* Support zone for bilibili discovery naming service when fetching server nodes\n* Add brpc revision in release version\n\n## 0.9.6\n* Health (of a connection) can be checked at rpc-level\n* Fix SSL-related compilation issues on Mac\n* Support SSL-replacement lib MesaLink\n* Support consistent hashing with ketama algo.\n* bvar variables can be exported for prometheus services\n* String[Multi]Splitter supports '\\0' as separator\n* Support for bilibili discovery service\n* Improved CircuitBreaker\n* grpc impl. supports timeout\n\n## 0.9.5\n* h2c/grpc are supported now, h2(encrypted) is not included.\n* thrift support.\n* Mac build support\n* Extend ConcurrencyLimiter to control max-concurrency dynamically and an \"auto\" CL is supported by default\n* CircuitBreaker support to isolate abnormal servers more effectively\n\n## 0.9.0\n* Contains major features of brpc, OK for production usages.\n* No h2/h2c/rdma support, Mac/Windows ports are not ready yet.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 23.0810546875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\ncmake_minimum_required(VERSION 2.8.12)\nproject(brpc C CXX)\n\noption(WITH_GLOG \"With glog\" OFF)\noption(WITH_MESALINK \"With MesaLink\" OFF)\noption(WITH_BORINGSSL \"With BoringSSL\" OFF)\noption(DEBUG \"Print debug logs\" OFF)\noption(WITH_DEBUG_SYMBOLS \"With debug symbols\" ON)\noption(WITH_THRIFT \"With thrift framed protocol supported\" OFF)\noption(WITH_BTHREAD_TRACER \"With bthread tracer supported\" OFF)\noption(WITH_SNAPPY \"With snappy\" OFF)\noption(WITH_RDMA \"With RDMA\" OFF)\noption(WITH_DEBUG_BTHREAD_SCHE_SAFETY \"With debugging bthread sche safety\" OFF)\noption(WITH_DEBUG_LOCK \"With debugging lock\" OFF)\noption(BUILD_UNIT_TESTS \"Whether to build unit tests\" OFF)\noption(BUILD_FUZZ_TESTS \"Whether to build fuzz tests\" OFF)\noption(BUILD_BRPC_TOOLS \"Whether to build brpc tools\" ON)\noption(DOWNLOAD_GTEST \"Download and build a fresh copy of googletest. Requires Internet access.\" ON)\n\n# Enable MACOSX_RPATH. Run \"cmake --help-policy CMP0042\" for policy details.\nif(POLICY CMP0042)\n    cmake_policy(SET CMP0042 NEW)\nendif()\n\nset(BRPC_VERSION 1.11.0)\n\nSET(CPACK_GENERATOR \"DEB\")\nSET(CPACK_DEBIAN_PACKAGE_MAINTAINER \"brpc authors\")\nINCLUDE(CPack)\n\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    # require at least gcc 4.8\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)\n        message(FATAL_ERROR \"GCC is too old, please install a newer version supporting C++11\")\n    endif()\nelseif(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n    # require at least clang 3.3\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.3)\n        message(FATAL_ERROR \"Clang is too old, please install a newer version supporting C++11\")\n    endif()\nelse()\n    message(WARNING \"You are using an unsupported compiler! Compilation has only been tested with Clang and GCC.\")\nendif()\n\nset(WITH_GLOG_VAL \"0\")\nif(WITH_GLOG)\n    set(WITH_GLOG_VAL \"1\")\n    set(BRPC_WITH_GLOG 1)\nendif()\n\nif(WITH_DEBUG_SYMBOLS)\n    set(DEBUG_SYMBOL \"-g\")\nendif()\n\nset(WITH_DEBUG_LOCK_VAL \"0\")\nif(WITH_DEBUG_LOCK)\n    set(WITH_DEBUG_LOCK_VAL \"1\")\nendif()\n\nif(WITH_THRIFT)\n    set(THRIFT_CPP_FLAG \"-DENABLE_THRIFT_FRAMED_PROTOCOL\")\n    find_library(THRIFT_LIB NAMES thrift)\n    if (NOT THRIFT_LIB)\n        message(FATAL_ERROR \"Fail to find Thrift\")\n    endif()\nendif()\n\nif (WITH_BTHREAD_TRACER)\n    if (NOT (CMAKE_SYSTEM_NAME STREQUAL \"Linux\")  OR NOT (CMAKE_SYSTEM_PROCESSOR MATCHES \"x86_64\"))\n        message(FATAL_ERROR \"bthread tracer is only supported on Linux x86_64 platform\")\n    endif()\n    find_path(LIBUNWIND_INCLUDE_PATH NAMES libunwind.h)\n    find_library(LIBUNWIND_LIB NAMES unwind)\n    find_library(LIBUNWIND_X86_64_LIB NAMES unwind-x86_64)\n    if (NOT LIBUNWIND_INCLUDE_PATH OR NOT LIBUNWIND_LIB)\n        message(FATAL_ERROR \"Fail to find libunwind, which is needed by bthread tracer\")\n    endif()\n    add_definitions(-DBRPC_BTHREAD_TRACER)\n    include_directories(${LIBUNWIND_INCLUDE_PATH})\nendif ()\n\nset(WITH_RDMA_VAL \"0\")\nif(WITH_RDMA)\n    set(WITH_RDMA_VAL \"1\")\nendif()\n\nset(WITH_DEBUG_BTHREAD_SCHE_SAFETY_VAL \"0\")\nif(WITH_DEBUG_BTHREAD_SCHE_SAFETY)\n    set(WITH_DEBUG_BTHREAD_SCHE_SAFETY_VAL \"1\")\nendif()\n\ninclude(GNUInstallDirs)\n\nconfigure_file(${PROJECT_SOURCE_DIR}/config.h.in ${PROJECT_SOURCE_DIR}/src/butil/config.h @ONLY)\n\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\nfind_package(GFLAGS REQUIRED)\n\nexecute_process(\n    COMMAND bash -c \"grep \\\"namespace [_A-Za-z0-9]\\\\+ {\\\" ${GFLAGS_INCLUDE_PATH}/gflags/gflags_declare.h | head -1 | awk '{print $2}' | tr -d '\\n'\"\n    OUTPUT_VARIABLE GFLAGS_NS\n)\nif(${GFLAGS_NS} STREQUAL \"GFLAGS_NAMESPACE\")\n    execute_process(\n        COMMAND bash -c \"grep \\\"#define GFLAGS_NAMESPACE [_A-Za-z0-9]\\\\+\\\" ${GFLAGS_INCLUDE_PATH}/gflags/gflags_declare.h | head -1 | awk '{print $3}' | tr -d '\\n'\"\n        OUTPUT_VARIABLE GFLAGS_NS\n    )\nendif()\n\ninclude_directories(\n    ${PROJECT_SOURCE_DIR}/src\n    ${CMAKE_CURRENT_BINARY_DIR}\n)\n\nexecute_process(\n    COMMAND bash -c \"${PROJECT_SOURCE_DIR}/tools/get_brpc_revision.sh ${PROJECT_SOURCE_DIR} | tr -d '\\n'\"\n    OUTPUT_VARIABLE BRPC_REVISION\n)\n\nif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n    include(CheckFunctionExists)\n    CHECK_FUNCTION_EXISTS(clock_gettime HAVE_CLOCK_GETTIME)\n    if(NOT HAVE_CLOCK_GETTIME)\n        set(DEFINE_CLOCK_GETTIME \"-DNO_CLOCK_GETTIME_IN_MAC\")\n    endif()\n    set(CMAKE_CPP_FLAGS \"${CMAKE_CPP_FLAGS} -Wno-deprecated-declarations -Wno-inconsistent-missing-override\")\nendif()\n\nset(CMAKE_CPP_FLAGS \"${CMAKE_CPP_FLAGS} ${DEFINE_CLOCK_GETTIME} -DBRPC_WITH_GLOG=${WITH_GLOG_VAL} -DBRPC_WITH_RDMA=${WITH_RDMA_VAL} -DGFLAGS_NS=${GFLAGS_NS} -DBRPC_DEBUG_BTHREAD_SCHE_SAFETY=${WITH_DEBUG_BTHREAD_SCHE_SAFETY_VAL} -DBRPC_DEBUG_LOCK=${WITH_DEBUG_LOCK_VAL}\")\nif(WITH_MESALINK)\n    set(CMAKE_CPP_FLAGS \"${CMAKE_CPP_FLAGS} -DUSE_MESALINK\")\nendif()\nset(CMAKE_CPP_FLAGS \"${CMAKE_CPP_FLAGS} -DBTHREAD_USE_FAST_PTHREAD_MUTEX -D__const__=__unused__ -D_GNU_SOURCE -DUSE_SYMBOLIZE -DNO_TCMALLOC -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DBRPC_REVISION=\\\\\\\"${BRPC_REVISION}\\\\\\\" -D__STRICT_ANSI__\")\nset(CMAKE_CPP_FLAGS \"${CMAKE_CPP_FLAGS} ${DEBUG_SYMBOL} ${THRIFT_CPP_FLAG}\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CPP_FLAGS} -O2 -pipe -Wall -W -fPIC -fstrict-aliasing -Wno-invalid-offsetof -Wno-unused-parameter -fno-omit-frame-pointer\")\nset(CMAKE_C_FLAGS \"${CMAKE_CPP_FLAGS} -O2 -pipe -Wall -W -fPIC -fstrict-aliasing -Wno-unused-parameter -fno-omit-frame-pointer\")\n\nmacro(use_cxx11)\nif(CMAKE_VERSION VERSION_LESS \"3.1.3\")\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n    endif()\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n    endif()\nelse()\n    set(CMAKE_CXX_STANDARD 11)\n    set(CMAKE_CXX_STANDARD_REQUIRED ON)\nendif()\nendmacro(use_cxx11)\n\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    #required by butil/crc32.cc to boost performance for 10x\n    if((CMAKE_SYSTEM_PROCESSOR MATCHES \"(x86)|(X86)|(amd64)|(AMD64)\") AND NOT (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.4))\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -msse4 -msse4.2\")\n    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64\"))\n        # segmentation fault in libcontext\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-gcse\")\n    endif()\n    if(NOT (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0))\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-aligned-new\")\n    endif()\nendif()\n\nfind_package(Protobuf REQUIRED)\nif(Protobuf_VERSION GREATER 4.21)\n    # required by absl\n    set(CMAKE_CXX_STANDARD 17)\n\n    find_package(absl REQUIRED CONFIG)\n    set(protobuf_ABSL_USED_TARGETS\n        absl::absl_check\n        absl::absl_log\n        absl::algorithm\n        absl::base\n        absl::bind_front\n        absl::bits\n        absl::btree\n        absl::cleanup\n        absl::cord\n        absl::core_headers\n        absl::debugging\n        absl::die_if_null\n        absl::dynamic_annotations\n        absl::flags\n        absl::flat_hash_map\n        absl::flat_hash_set\n        absl::function_ref\n        absl::hash\n        absl::layout\n        absl::log_initialize\n        absl::log_severity\n        absl::memory\n        absl::node_hash_map\n        absl::node_hash_set\n        absl::optional\n        absl::span\n        absl::status\n        absl::statusor\n        absl::strings\n        absl::synchronization\n        absl::time\n        absl::type_traits\n        absl::utility\n        absl::variant\n    )\nelse()\n    use_cxx11()\nendif()\nfind_package(Threads REQUIRED)\n\nfind_path(LEVELDB_INCLUDE_PATH NAMES leveldb/db.h)\nfind_library(LEVELDB_LIB NAMES leveldb)\nif ((NOT LEVELDB_INCLUDE_PATH) OR (NOT LEVELDB_LIB))\n    message(FATAL_ERROR \"Fail to find leveldb\")\nendif()\n\nif(WITH_SNAPPY)\n    find_path(SNAPPY_INCLUDE_PATH NAMES snappy.h)\n    find_library(SNAPPY_LIB NAMES snappy)\n    if ((NOT SNAPPY_INCLUDE_PATH) OR (NOT SNAPPY_LIB))\n        message(FATAL_ERROR \"Fail to find snappy\")\n    endif()\n    include_directories(${SNAPPY_INCLUDE_PATH})\nendif()\n\nif(WITH_GLOG)\n    find_path(GLOG_INCLUDE_PATH NAMES glog/logging.h)\n    find_library(GLOG_LIB NAMES glog)\n    if((NOT GLOG_INCLUDE_PATH) OR (NOT GLOG_LIB))\n        message(FATAL_ERROR \"Fail to find glog\")\n    endif()\n    include_directories(${GLOG_INCLUDE_PATH})\nendif()\n\nif(WITH_MESALINK)\n    find_path(MESALINK_INCLUDE_PATH NAMES mesalink/openssl/ssl.h)\n    find_library(MESALINK_LIB NAMES mesalink)\n    if((NOT MESALINK_INCLUDE_PATH) OR (NOT MESALINK_LIB))\n        message(FATAL_ERROR \"Fail to find MesaLink\")\n    else()\n        message(STATUS \"Found MesaLink: ${MESALINK_LIB}\")\n    endif()\n    include_directories(${MESALINK_INCLUDE_PATH})\nendif()\n\nif(WITH_RDMA)\n    message(\"brpc compile with rdma\")\n    find_path(RDMA_INCLUDE_PATH NAMES infiniband/verbs.h)\n    find_library(RDMA_LIB NAMES ibverbs)\n    if((NOT RDMA_INCLUDE_PATH) OR (NOT RDMA_LIB))\n        message(FATAL_ERROR \"Fail to find ibverbs\")\n    endif()\nendif()\n\nfind_library(PROTOC_LIB NAMES protoc)\nif(NOT PROTOC_LIB)\n    message(FATAL_ERROR \"Fail to find protoc lib\")\nendif()\n\nif(WITH_BORINGSSL)\n    find_package(BoringSSL)\n    include_directories(${BORINGSSL_INCLUDE_DIR})\nelse()\n    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT OPENSSL_ROOT_DIR)\n        set(OPENSSL_ROOT_DIR\n            \"/usr/local/opt/openssl\" # Homebrew installed OpenSSL\n        )\n    endif()\n\n    find_package(OpenSSL)\n    include_directories(${OPENSSL_INCLUDE_DIR})\nendif()\n\ninclude_directories(\n        ${GFLAGS_INCLUDE_PATH}\n        ${PROTOBUF_INCLUDE_DIRS}\n        ${LEVELDB_INCLUDE_PATH}\n        )\n\nset(DYNAMIC_LIB\n    ${GFLAGS_LIBRARY}\n    ${PROTOBUF_LIBRARIES} ${protobuf_ABSL_USED_TARGETS}\n    ${LEVELDB_LIB}\n    ${PROTOC_LIB}\n    ${CMAKE_THREAD_LIBS_INIT}\n    ${THRIFT_LIB}\n    dl\n    z)\n\nif(WITH_BORINGSSL)\n    list(APPEND DYNAMIC_LIB ${BORINGSSL_SSL_LIBRARY})\n    list(APPEND DYNAMIC_LIB ${BORINGSSL_CRYPTO_LIBRARY})\nelse()\n    list(APPEND DYNAMIC_LIB ${OPENSSL_CRYPTO_LIBRARY})\n    if(WITH_MESALINK)\n        list(APPEND DYNAMIC_LIB ${MESALINK_LIB})\n    else()\n        list(APPEND DYNAMIC_LIB ${OPENSSL_SSL_LIBRARY})\n    endif()\nendif()\n\nif(WITH_RDMA)\n    list(APPEND DYNAMIC_LIB ${RDMA_LIB})\nendif()\n\nset(BRPC_PRIVATE_LIBS \"-lgflags -lprotobuf -lleveldb -lprotoc -lssl -lcrypto -ldl -lz\")\n\nif(WITH_GLOG)\n    set(DYNAMIC_LIB ${DYNAMIC_LIB} ${GLOG_LIB})\n    set(BRPC_PRIVATE_LIBS \"${BRPC_PRIVATE_LIBS} -lglog\")\nendif()\n\nif(WITH_SNAPPY)\n    set(DYNAMIC_LIB ${DYNAMIC_LIB} ${SNAPPY_LIB})\n    set(BRPC_PRIVATE_LIBS \"${BRPC_PRIVATE_LIBS} -lsnappy\")\nendif()\n\nif (WITH_BTHREAD_TRACER)\n    set(DYNAMIC_LIB ${DYNAMIC_LIB} ${LIBUNWIND_LIB} ${LIBUNWIND_X86_64_LIB})\n    set(BRPC_PRIVATE_LIBS \"${BRPC_PRIVATE_LIBS} -lunwind -lunwind-x86_64\")\nendif()\n\nif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n    set(DYNAMIC_LIB ${DYNAMIC_LIB} rt)\n    set(BRPC_PRIVATE_LIBS \"${BRPC_PRIVATE_LIBS} -lrt\")\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n    set(DYNAMIC_LIB ${DYNAMIC_LIB}\n        pthread\n        \"-framework CoreFoundation\"\n        \"-framework CoreGraphics\"\n        \"-framework CoreData\"\n        \"-framework CoreText\"\n        \"-framework Security\"\n        \"-framework Foundation\"\n        \"-Wl,-U,_MallocExtension_ReleaseFreeMemory\"\n        \"-Wl,-U,_ProfilerStart\"\n        \"-Wl,-U,_ProfilerStop\"\n        \"-Wl,-U,__Z13GetStackTracePPvii\"\n        \"-Wl,-U,_mallctl\"\n        \"-Wl,-U,_malloc_stats_print\"\n    )\nendif()\n\n# for *.so\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/output/lib)\n# for *.a\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/output/lib)\n\n# the reason why not using file(GLOB_RECURSE...) is that we want to\n# include different files on different platforms.\nset(BUTIL_SOURCES\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/dmg_fp/g_fmt.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/dmg_fp/dtoa_wrapper.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/dynamic_annotations/dynamic_annotations.c\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/icu/icu_utf.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/superfasthash/superfasthash.c\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/modp_b64/modp_b64.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/symbolize/demangle.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/symbolize/symbolize.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/snappy/snappy-sinksource.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/snappy/snappy-stubs-internal.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/snappy/snappy.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/third_party/murmurhash3/murmurhash3.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/arena.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/at_exit.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/atomicops_internals_x86_gcc.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/base64.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/base64url.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/big_endian.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/cpu.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/alias.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/asan_invalid_access.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/crash_logging.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/debugger.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/debugger_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/dump_without_crashing.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/proc_maps_linux.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/stack_trace.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/debug/stack_trace_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/environment.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file_enumerator.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file_enumerator_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file_path.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file_path_constants.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/memory_mapped_file.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/memory_mapped_file_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/scoped_file.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/files/scoped_temp_dir.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/file_util.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/file_util_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/guid.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/guid_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/hash.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/lazy_instance.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/location.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/memory/aligned_memory.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/memory/ref_counted.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/memory/ref_counted_memory.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/memory/singleton.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/memory/weak_ptr.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/posix/file_descriptor_shuffle.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/posix/global_descriptors.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/process_util.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/rand_util.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/rand_util_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/fast_rand.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/safe_strerror_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/sha1_portable.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/latin1_string_conversions.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/nullable_string16.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/safe_sprintf.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/string16.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/string_number_conversions.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/string_split.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/string_piece.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/string_util.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/string_util_constants.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/stringprintf.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/utf_offset_string_conversions.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/utf_string_conversion_utils.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/strings/utf_string_conversions.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/synchronization/cancellation_flag.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/synchronization/condition_variable_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/synchronization/waitable_event_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/non_thread_safe_impl.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/platform_thread_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/simple_thread.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_checker_impl.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_collision_warner.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_id_name_manager.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_local_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_local_storage.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_local_storage_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/thread_restrictions.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/threading/watchdog.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/time/clock.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/time/default_clock.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/time/default_tick_clock.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/time/tick_clock.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/time/time.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/time/time_posix.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/version.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/logging.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/class_name.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/errno.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/find_cstr.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/status.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/string_printf.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/thread_local.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/thread_key.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/unix_socket.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/endpoint.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/fd_utility.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/files/temp_file.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/files/file_watcher.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/time.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/zero_copy_stream_as_streambuf.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/crc32c.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/containers/case_ignored_flat_map.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/iobuf.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/iobuf_profiler.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/binary_printer.cpp\n    ${PROJECT_SOURCE_DIR}/src/butil/recordio.cc\n    ${PROJECT_SOURCE_DIR}/src/butil/popen.cpp\n    )\n\nif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n    set(BUTIL_SOURCES ${BUTIL_SOURCES}\n        ${PROJECT_SOURCE_DIR}/src/butil/file_util_linux.cc\n        ${PROJECT_SOURCE_DIR}/src/butil/threading/platform_thread_linux.cc\n        ${PROJECT_SOURCE_DIR}/src/butil/strings/sys_string_conversions_posix.cc)\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n    set(BUTIL_SOURCES ${BUTIL_SOURCES}\n        ${PROJECT_SOURCE_DIR}/src/butil/mac/bundle_locations.mm\n        ${PROJECT_SOURCE_DIR}/src/butil/mac/foundation_util.mm\n        ${PROJECT_SOURCE_DIR}/src/butil/file_util_mac.mm\n        ${PROJECT_SOURCE_DIR}/src/butil/threading/platform_thread_mac.mm\n        ${PROJECT_SOURCE_DIR}/src/butil/strings/sys_string_conversions_mac.mm\n        ${PROJECT_SOURCE_DIR}/src/butil/time/time_mac.cc\n        ${PROJECT_SOURCE_DIR}/src/butil/mac/scoped_mach_port.cc)\nendif()\n\nfile(GLOB_RECURSE BVAR_SOURCES \"${PROJECT_SOURCE_DIR}/src/bvar/*.cpp\")\nfile(GLOB_RECURSE BTHREAD_SOURCES \"${PROJECT_SOURCE_DIR}/src/bthread/*.cpp\")\nfile(GLOB_RECURSE JSON2PB_SOURCES \"${PROJECT_SOURCE_DIR}/src/json2pb/*.cpp\")\nfile(GLOB_RECURSE BRPC_SOURCES \"${PROJECT_SOURCE_DIR}/src/brpc/*.cpp\")\nfile(GLOB_RECURSE THRIFT_SOURCES \"${PROJECT_SOURCE_DIR}/src/brpc/thrift*.cpp\")\nfile(GLOB_RECURSE EXCLUDE_SOURCES \"${PROJECT_SOURCE_DIR}/src/brpc/event_dispatcher_*.cpp\")\n\nif(WITH_THRIFT)\n    message(\"brpc compile with thrift protocol\")\nelse()\n    # Remove thrift sources\n    foreach(v ${THRIFT_SOURCES})\n        list(REMOVE_ITEM BRPC_SOURCES ${v})\n    endforeach()\n    set(THRIFT_SOURCES \"\")\nendif()\n\nforeach(v ${EXCLUDE_SOURCES})\n    list(REMOVE_ITEM BRPC_SOURCES ${v})\nendforeach()\n\nset(MCPACK2PB_SOURCES\n    ${PROJECT_SOURCE_DIR}/src/mcpack2pb/field_type.cpp\n    ${PROJECT_SOURCE_DIR}/src/mcpack2pb/mcpack2pb.cpp\n    ${PROJECT_SOURCE_DIR}/src/mcpack2pb/parser.cpp\n    ${PROJECT_SOURCE_DIR}/src/mcpack2pb/serializer.cpp)\n\ninclude(CompileProto)\nset(PROTO_FILES idl_options.proto\n                brpc/rtmp.proto\n                brpc/rpc_dump.proto\n                brpc/get_favicon.proto\n                brpc/span.proto\n                brpc/builtin_service.proto\n                brpc/grpc_health_check.proto\n                brpc/get_js.proto\n                brpc/errno.proto\n                brpc/nshead_meta.proto\n                brpc/options.proto\n                brpc/policy/baidu_rpc_meta.proto\n                brpc/policy/hulu_pbrpc_meta.proto\n                brpc/policy/public_pbrpc_meta.proto\n                brpc/policy/sofa_pbrpc_meta.proto\n                brpc/policy/mongo.proto\n                brpc/trackme.proto\n                brpc/streaming_rpc_meta.proto\n                brpc/proto_base.proto)\nfile(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/output/include/brpc)\nset(PROTOC_FLAGS ${PROTOC_FLAGS} -I${PROTOBUF_INCLUDE_DIR})\ncompile_proto(PROTO_HDRS PROTO_SRCS ${PROJECT_BINARY_DIR}\n                                    ${PROJECT_BINARY_DIR}/output/include\n                                    ${PROJECT_SOURCE_DIR}/src\n                                    \"${PROTO_FILES}\")\nadd_library(PROTO_LIB OBJECT ${PROTO_SRCS} ${PROTO_HDRS})\n\nset(SOURCES\n    ${BVAR_SOURCES}\n    ${BTHREAD_SOURCES}\n    ${JSON2PB_SOURCES}\n    ${MCPACK2PB_SOURCES}\n    ${BRPC_SOURCES}\n    ${THRIFT_SOURCES}\n    )\n\nadd_subdirectory(src)\nif(BUILD_UNIT_TESTS)\n    enable_testing()\n    add_subdirectory(test)\nendif()\n\nif(BUILD_FUZZ_TESTS)\n    if(NOT CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n        message(FATAL_ERROR \"Fuzzing is only supported with clang\")\n    endif()\n    if(NOT BUILD_UNIT_TESTS)\n        message(FATAL_ERROR \"BUILD_UNIT_TESTS must be enabled to build fuzz tests\")\n    endif()\nendif()\n\nif(BUILD_BRPC_TOOLS)\n    add_subdirectory(tools)\nendif()\n\nfile(COPY ${CMAKE_CURRENT_BINARY_DIR}/brpc/\n        DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/output/include/brpc/\n        FILES_MATCHING\n        PATTERN \"*.h\"\n        PATTERN \"*.hpp\"\n        )\nfile(COPY ${PROJECT_SOURCE_DIR}/src/\n        DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/output/include/\n        FILES_MATCHING\n        PATTERN \"*.h\"\n        PATTERN \"*.hpp\"\n        )\ninstall(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/output/include/\n        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n        FILES_MATCHING\n        PATTERN \"*.h\"\n        PATTERN \"*.hpp\"\n        )\n\n# Install pkgconfig\nconfigure_file(cmake/brpc.pc.in ${PROJECT_BINARY_DIR}/brpc.pc @ONLY)\ninstall(FILES ${PROJECT_BINARY_DIR}/brpc.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at dev@brpc.apache.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.49609375,
          "content": "If you meet any problem or request a new feature, you're welcome to [create an issue](https://github.com/apache/brpc/issues/new/choose).\n\nIf you can solve any of [the issues](https://github.com/apache/brpc/issues), you're welcome to send the PR to us.\n\nBefore the PR:\n\n* Make sure your code style conforms to [google C++ coding style](https://google.github.io/styleguide/cppguide.html). Indentation is preferred to be 4 spaces.\n* The code appears where it should be. For example the code to support an extra protocol should not be put in general classes like server.cpp, channel.cpp, while a general modification would better not be hidden inside a very specific protocol.\n* Has unittests.\n\nAfter the PR:\n\n* Make sure the [GitHub Actions](https://github.com/apache/brpc/actions) passed.\n\n# Chinese version\n\n如果你遇到问题或需要新功能，欢迎[创建issue](https://github.com/apache/brpc/issues/new/choose)。\n\n如果你可以解决某个[issue](https://github.com/apache/brpc/issues), 欢迎发送PR。\n\n发送PR前请确认：\n\n* 你的代码符合[google C++代码规范](https://google.github.io/styleguide/cppguide.html)。缩进最好为4个空格。\n* 代码出现的位置和其定位相符。比如对于某特定协议的扩展代码不该出现在server.cpp, channel.cpp这些较为通用的类中，而一些非常通用的改动也不该深藏在某个特定协议的cpp中。\n* 有对应的单测代码。\n\n提交PR后请确认：\n\n* [GitHub Actions](https://github.com/apache/brpc/actions)成功通过。\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.435546875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# A image for building/testing brpc\nFROM ubuntu:20.04\n\n# prepare env\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        curl \\\n        apt-utils \\\n        openssl \\\n        ca-certificates\n\n# install deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        git \\\n        g++ \\\n        make \\\n        libssl-dev \\\n        libgflags-dev \\\n        libprotobuf-dev \\\n        libprotoc-dev \\\n        protobuf-compiler \\\n        libleveldb-dev \\\n        libsnappy-dev && \\\n        apt-get clean -y\n\nRUN git clone https://github.com/apache/brpc.git\nRUN cd brpc && sh config_brpc.sh --headers=/usr/include --libs=/usr/lib && \\\n    make -j \"$(nproc)\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 46.341796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n   \n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/dmg_fp: licensed under the following terms:\n\n  The author of this software is David M. Gay.\n  \n  Copyright (c) 1991, 2000, 2001 by Lucent Technologies.\n  \n  Permission to use, copy, modify, and distribute this software for any\n  purpose without fee is hereby granted, provided that this entire notice\n  is included in all copies of any software which is or includes a copy\n  or modification of this software and in all copies of the supporting\n  documentation for such software.\n  \n  THIS SOFTWARE IS BEING PROVIDED \"AS IS\", WITHOUT ANY EXPRESS OR IMPLIED\n  WARRANTY.  IN PARTICULAR, NEITHER THE AUTHOR NOR LUCENT MAKES ANY\n  REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY\n  OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/dynamic_annotations: licensed under the following terms:\n\n  Copyright (c) 2008-2009, Google Inc.\n  All rights reserved.\n  \n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n  \n      * Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n      * Neither the name of Google Inc. nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n  \n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/icu: licensed under the following terms:\n\n  ICU License - ICU 1.8.1 and later\n  \n  COPYRIGHT AND PERMISSION NOTICE\n  \n  Copyright (c) 1995-2009 International Business Machines Corporation and others\n  \n  All rights reserved.\n  \n  Permission is hereby granted, free of charge, to any person obtaining\n  a copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n  without limitation the rights to use, copy, modify, merge, publish,\n  distribute, and/or sell copies of the Software, and to permit persons\n  to whom the Software is furnished to do so, provided that the above\n  copyright notice(s) and this permission notice appear in all copies of\n  the Software and that both the above copyright notice(s) and this\n  permission notice appear in supporting documentation.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\n  OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n  HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY\n  SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER\n  RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF\n  CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n  CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n  \n  Except as contained in this notice, the name of a copyright holder\n  shall not be used in advertising or otherwise to promote the sale, use\n  or other dealings in this Software without prior written authorization\n  of the copyright holder.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/modp_b64: licensed under the following terms:\n\n  MODP_B64 - High performance base64 encoder/decoder\n  Version 1.3 -- 17-Mar-2006\n  http://modp.com/release/base64\n  \n  Copyright (c) 2005, 2006  Nick Galbreath -- nickg [at] modp [dot] com\n  All rights reserved.\n  \n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n  \n    Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  \n    Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n  \n    Neither the name of the modp.com nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n  \n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/murmurhash3: MIT license\n\n  MurmurHash3 was written by Austin Appleby, and is placed in the public\n  domain. The author hereby disclaims copyright to this source code.\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy of this\n  software and associated documentation files (the \"Software\"), to deal in the Software\n  without restriction, including without limitation the rights to use, copy, modify,\n  merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n  permit persons to whom the Software is furnished to do so, subject to the following\n  conditions:\n  \n  The above copyright notice and this permission notice shall be included in all copies or\n  substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\n  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n  OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/rapidjson: MIT license\n\n  Copyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip.  All rights reserved.\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this\n  software and associated documentation files (the \"Software\"), to deal in the Software\n  without restriction, including without limitation the rights to use, copy, modify,\n  merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n  permit persons to whom the Software is furnished to do so, subject to the following\n  conditions:\n  \n  The above copyright notice and this permission notice shall be included in all copies or\n  substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\n  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n  OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/rapidjson/msinttypes: licensed under the following terms:\n\n  Copyright (c) 2006-2013 Alexander Chemeris\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n   3. Neither the name of the product nor the names of its contributors may\n      be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED\n WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/superfasthash: licensed under the following terms:\n\n  Paul Hsieh OLD BSD license\n  \n  Copyright (c) 2010, Paul Hsieh\n  All rights reserved.\n  \n  Redistribution and use in source and binary forms, with or without modification,\n  are permitted provided that the following conditions are met:\n  \n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice, this\n    list of conditions and the following disclaimer in the documentation and/or\n    other materials provided with the distribution.\n  * Neither my name, Paul Hsieh, nor the names of any other contributors to the\n    code use may not be used to endorse or promote products derived from this\n    software without specific prior written permission.\n  \n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/third_party/valgrind/valgrind.h: licensed under the following terms:\n\n  This file is part of Valgrind, a dynamic binary instrumentation\n  framework.\n  \n  Copyright (C) 2000-2008 Julian Seward.  All rights reserved.\n  \n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions\n  are met:\n  \n  1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  \n  2. The origin of this software must not be misrepresented; you must\n    not claim that you wrote the original software.  If you use this\n    software in a product, an acknowledgment in the product\n    documentation would be appreciated but is not required.\n  \n  3. Altered source versions must be plainly marked as such, and must\n    not be misrepresented as being the original software.\n  \n  4. The name of the author may not be used to endorse or promote\n    products derived from this software without specific prior written\n    permission.\n  \n  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS\n  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/crc32c.h, src/butil/crc32c.cc, test/crc32c_unittest.cc: licensed under the following terms:\n\n  Copyright (c) 2011-present, Facebook, Inc.  All rights reserved.\n  This source code is licensed under the BSD-style license found in the\n  LICENSE file in the root directory of this source tree. An additional grant\n  of patent rights can be found in the PATENTS file in the same directory.\n\n Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n Use of this source code is governed by a BSD-style license that can be\n found in the LICENSE file. See the AUTHORS file for names of contributors.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/unique_ptr.h: licensed under the following terms:\n\n Copyright 2009 Howard Hinnant, Ion Gazta&ntilde;aga.\n Distributed under the Boost Software License, Version 1.0. (See\n accompanying file LICENSE_1_0.txt or copy at\n http://www.boost.org/LICENSE_1_0.txt)\n\n--------------------------------------------------------------------------------\n\nsrc/butil/intrusive_ptr.hpp: licensed under the following terms:\n\n Copyright (c) 2001, 2002 Peter Dimov\n\n Distributed under the Boost Software License, Version 1.0. (See\n accompanying file LICENSE_1_0.txt or copy at\n http://www.boost.org/LICENSE_1_0.txt)\n\n--------------------------------------------------------------------------------\n\nsrc/butil/string_printf.cpp: licensed under the following terms:\n\n Copyright 2012 Facebook, Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n--------------------------------------------------------------------------------\n\nsrc/bthread/context.h, src/bthread/context.cpp: licensed under the following terms:\n\n libcontext - a slightly more portable version of boost::context\n Copyright Martin Husemann 2013.\n Copyright Oliver Kowalke 2009.\n Copyright Sergue E. Leontiev 2013.\n Copyright Thomas Sailer 2013.\n Minor modifications by Tomasz Wlostowski 2016.\n Distributed under the Boost Software License, Version 1.0.\n      (See accompanying file LICENSE_1_0.txt or copy at\n            http://www.boost.org/LICENSE_1_0.txt)\n\n--------------------------------------------------------------------------------\n\nsrc/brpc/details/tcmalloc_extension.h: 3-clause BSD\n\n Copyright (c) 2005, Google Inc.\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/brpc/details/http_parser.h, src/brpc/details/http_parser.cpp:\nlicensed under the following terms:\n\n Based on src/http/ngx_http_parse.c from NGINX copyright Igor Sysoev\n\n Additional changes are licensed under the same terms as NGINX and\n copyright Joyent, Inc. and other Node contributors. All rights reserved.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to\n deal in the Software without restriction, including without limitation the\n rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n sell copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nsrc/brpc/ts.h, src/brpc/policy/dh.h, src/brpc/policy/dh.cpp: MIT license\n\n Copyright (c) 2013-2015 SRS(ossrs)\n Permission is hereby granted, free of charge, to any person obtaining a copy of\n this software and associated documentation files (the \"Software\"), to deal in\n the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nsrc/brpc/ts.cpp: licensed under the following terms:\n\n Copyright (c) 2013-2015 SRS(ossrs)\n Permission is hereby granted, free of charge, to any person obtaining a copy of\n this software and associated documentation files (the \"Software\"), to deal in\n the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n Copyright (c) 2008 Joerg Sonnenberger\n Copyright (c) 2009-2012 Michihiro NAKAJIMA\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/brpc/builtin/pprof_perl.cpp, tools/pprof: licensed under the following terms:\n\n Copyright (c) 1998-2007, Google Inc.\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n  SVGPan library 1.2\n ====================\n Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification, are\n permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice, this list of\n       conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright notice, this list\n       of conditions and the following disclaimer in the documentation and/or other materials\n       provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED\n WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR\n CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n The views and conclusions contained in the software and documentation are those of the\n authors and should not be interpreted as representing official policies, either expressed\n or implied, of Andrea Leofreddi.\n\n--------------------------------------------------------------------------------\n\nsrc/brpc/callback.h: 3-clause BSD\n\n Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n http://code.google.com/p/protobuf/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nsrc/butil/at_exit.*\nsrc/butil/atomic*\nsrc/butil/auto_reset.h\nsrc/butil/base64.*\nsrc/butil/base_export.h\nsrc/butil/base_paths.cc\nsrc/butil/basictypes.h\nsrc/butil/big_endian.*\nsrc/butil/bits.h\nsrc/butil/build_config.h\nsrc/butil/cancelable_callback.h\nsrc/butil/compiler_specific.h\nsrc/butil/containers/*\nsrc/butil/cpu.*\nsrc/butil/debug/*\nsrc/butil/environment.*\nsrc/butil/file_*\nsrc/butil/files/dir_reader_fallback.h\nsrc/butil/files/dir_reader_linux.h\nsrc/butil/files/dir_reader_posix.h\nsrc/butil/files/file.*\nsrc/butil/files/file_enumerator*\nsrc/butil/files/file_p*\nsrc/butil/files/memory_mapped_file*\nsrc/butil/files/scoped*\nsrc/butil/float_util.h\nsrc/butil/format_macros.h\nsrc/butil/gtest_prod_util.h\nsrc/butil/guid.cc\nsrc/butil/guid.h\nsrc/butil/guid_posix.cc\nsrc/butil/hash.cc\nsrc/butil/hash.h\nsrc/butil/lazy_instance.cc\nsrc/butil/lazy_instance.h\nsrc/butil/location.cc\nsrc/butil/location.h\nsrc/butil/mac/bundle_locations.h\nsrc/butil/mac/bundle_locations.mm\nsrc/butil/mac/foundation_util.h\nsrc/butil/mac/foundation_util.mm\nsrc/butil/mac/scoped_cftyperef.h\nsrc/butil/mac/scoped_mach_port.cc\nsrc/butil/mac/scoped_mach_port.h\nsrc/butil/mac/scoped_typeref.h\nsrc/butil/macros.h\nsrc/butil/memory/aligned_memory.cc\nsrc/butil/memory/aligned_memory.h\nsrc/butil/memory/linked_ptr.h\nsrc/butil/memory/manual_constructor.h\nsrc/butil/memory/raw_scoped_refptr_mismatch_checker.h\nsrc/butil/memory/ref_counted.cc\nsrc/butil/memory/ref_counted.h\nsrc/butil/memory/ref_counted_memory.cc\nsrc/butil/memory/ref_counted_memory.h\nsrc/butil/memory/scoped_open_process.h\nsrc/butil/memory/scoped_policy.h\nsrc/butil/memory/scoped_ptr.h\nsrc/butil/memory/scoped_vector.h\nsrc/butil/memory/singleton.cc\nsrc/butil/memory/singleton.h\nsrc/butil/memory/singleton_objc.h\nsrc/butil/memory/weak_ptr.cc\nsrc/butil/memory/weak_ptr.h\nsrc/butil/move.h\nsrc/butil/numerics/safe_conversions.h\nsrc/butil/numerics/safe_conversions_impl.h\nsrc/butil/numerics/safe_math.h\nsrc/butil/numerics/safe_math_impl.h\nsrc/butil/observer_list.h\nsrc/butil/port.h\nsrc/butil/posix/eintr_wrapper.h\nsrc/butil/posix/file_descriptor_shuffle.cc\nsrc/butil/posix/file_descriptor_shuffle.h\nsrc/butil/posix/global_descriptors.cc\nsrc/butil/posix/global_descriptors.h\nsrc/butil/rand_util.cc\nsrc/butil/rand_util.h\nsrc/butil/rand_util_posix.cc\nsrc/butil/safe_strerror_posix.cc\nsrc/butil/safe_strerror_posix.h\nsrc/butil/scoped_clear_errno.h\nsrc/butil/scoped_generic.h\nsrc/butil/scoped_observer.h\nsrc/butil/sha1.h\nsrc/butil/sha1_portable.cc\nsrc/butil/stl_util.h\nsrc/butil/strings/latin1_string_conversions.cc\nsrc/butil/strings/latin1_string_conversions.h\nsrc/butil/strings/nullable_string16.cc\nsrc/butil/strings/nullable_string16.h\nsrc/butil/strings/safe_sprintf.cc\nsrc/butil/strings/safe_sprintf.h\nsrc/butil/strings/string16.cc\nsrc/butil/strings/string16.h\nsrc/butil/strings/string_number_conversions.cc\nsrc/butil/strings/string_number_conversions.h\nsrc/butil/strings/string_piece.cc\nsrc/butil/strings/string_piece.h\nsrc/butil/strings/string_split.cc\nsrc/butil/strings/string_split.h\nsrc/butil/strings/string_tokenizer.h\nsrc/butil/strings/string_util.cc\nsrc/butil/strings/string_util.h\nsrc/butil/strings/string_util_constants.cc\nsrc/butil/strings/string_util_posix.h\nsrc/butil/strings/stringize_macros.h\nsrc/butil/strings/stringprintf.cc\nsrc/butil/strings/stringprintf.h\nsrc/butil/strings/sys_string_conversions.h\nsrc/butil/strings/sys_string_conversions_mac.mm\nsrc/butil/strings/sys_string_conversions_posix.cc\nsrc/butil/strings/utf_offset_string_conversions.cc\nsrc/butil/strings/utf_offset_string_conversions.h\nsrc/butil/strings/utf_string_conversion_utils.cc\nsrc/butil/strings/utf_string_conversion_utils.h\nsrc/butil/strings/utf_string_conversions.cc\nsrc/butil/strings/utf_string_conversions.h\nsrc/butil/synchronization/cancellation_flag.*\nsrc/butil/synchronization/condition_variable.h\nsrc/butil/synchronization/condition_variable_posix.cc\nsrc/butil/synchronization/spin_wait.h\nsrc/butil/synchronization/waitable_event.h\nsrc/butil/synchronization/waitable_event_posix.cc\nsrc/butil/sys_byteorder.h\nsrc/butil/third_party/symbolize/glog/*\nsrc/butil/threading/*\nsrc/butil/time/*\nsrc/butil/type_traits.h\nsrc/butil/version.*\ntest/*.cc\ntest/memory_unittest_mac.h\ntest/multiprocess_func_list.h\ntest/scoped_locale.h\ntest/test_switches.h\n\nSome portions of these files are derived from code in the Chromium project,\ncopyright (c) Google inc and (c) The Chromium Authors and licensed under the\n3-clause BSD license:\n\n  Copyright (c) 2000 - 2014 The Chromium Authors. All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n\n     * Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following disclaimer\n  in the documentation and/or other materials provided with the\n  distribution.\n     * Neither the name of Google Inc. nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nsrc/butil/base64url.*\ntest/base64url_unittest.cc\n\nSome portions of these files are derived from code in the Chromium project,\ncopyright The Chromium Authors and licensed under the 3-clause BSD license:\n\n  Copyright 2015 The Chromium Authors\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n\n     * Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following disclaimer\n  in the documentation and/or other materials provided with the\n  distribution.\n     * Neither the name of Google LLC nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 1.4482421875,
          "content": "module(\n  name = 'brpc',\n  version = '1.11.0',\n  compatibility_level = 1,\n)\n\n# --registry=https://bcr.bazel.build\nbazel_dep(name = 'abseil-cpp', version = '20210324.2', repo_name = 'com_google_absl')\nbazel_dep(name = 'bazel_skylib', version = '1.0.3')\nbazel_dep(name = 'boringssl', version = '0.0.0-20211025-d4f1ab9')\nbazel_dep(name = 'protobuf', version = '27.3', repo_name = 'com_google_protobuf')\nbazel_dep(name = 'gflags', version = '2.2.2', repo_name = 'com_github_gflags_gflags')\nbazel_dep(name = 'glog', version = '0.5.0', repo_name = 'com_github_google_glog')\nbazel_dep(name = 'platforms', version = '0.0.4')\nbazel_dep(name = 'rules_cc', version = '0.0.1')\nbazel_dep(name = 'rules_proto', version = '4.0.0')\nbazel_dep(name = 'zlib', version = '1.2.13', repo_name = 'com_github_madler_zlib')\n\n# --registry=https://baidu.github.io/babylon/registry\nbazel_dep(name = 'leveldb', version = '1.23', repo_name = 'com_github_google_leveldb')\nbazel_dep(name = 'openssl', version = '3.3.2')\nbazel_dep(name = 'thrift', version = '0.21.0', repo_name = 'org_apache_thrift')\n\n# test only\nbazel_dep(name = 'googletest', version = '1.14.0.bcr.1', repo_name = 'com_google_googletest', dev_dependency = True)\nbazel_dep(name = 'hedron_compile_commands', dev_dependency = True)\ngit_override(\n    module_name = 'hedron_compile_commands',\n    remote = 'https://github.com/hedronvision/bazel-compile-commands-extractor.git',\n    commit = '1e08f8e0507b6b6b1f4416a9a22cf5c28beaba93', # Jun 28, 2024\n)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 12.947265625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nNEED_LIBPROTOC=1\ninclude config.mk\n\n# Notes on the flags:\n# 1. Added -fno-omit-frame-pointer: perf/tcmalloc-profiler use frame pointers by default\n# 2. Removed -Werror: Not block compilation for non-vital warnings, especially when the\n#    code is tested on newer systems. If the code is used in production, add -Werror back\nCPPFLAGS+=-DBTHREAD_USE_FAST_PTHREAD_MUTEX -D_GNU_SOURCE -DUSE_SYMBOLIZE -DNO_TCMALLOC -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DBRPC_REVISION=\\\"$(shell ./tools/get_brpc_revision.sh .)\\\"\nCXXFLAGS+=$(CPPFLAGS) -O2 -pipe -Wall -W -fPIC -fstrict-aliasing -Wno-invalid-offsetof -Wno-unused-parameter -fno-omit-frame-pointer\nCFLAGS=$(CPPFLAGS) -O2 -pipe -Wall -W -fPIC -fstrict-aliasing -Wno-unused-parameter -fno-omit-frame-pointer\nDEBUG_CXXFLAGS = $(filter-out -DNDEBUG,$(CXXFLAGS)) -DUNIT_TEST -DBVAR_NOT_LINK_DEFAULT_VARIABLES\nDEBUG_CFLAGS = $(filter-out -DNDEBUG,$(CFLAGS)) -DUNIT_TEST\nHDRPATHS=-I./src $(addprefix -I, $(HDRS))\nLIBPATHS = $(addprefix -L, $(LIBS))\nCOMMA = ,\nSOPATHS = $(addprefix -Wl$(COMMA)-rpath$(COMMA), $(LIBS))\nSRCEXTS = .c .cc .cpp .proto\n\nSOEXT = so\nifeq ($(SYSTEM),Darwin)\n    SOEXT = dylib\nendif\n\n#required by butil/crc32.cc to boost performance for 10x\nifeq ($(shell test $(GCC_VERSION) -ge 40400; echo $$?),0)\n  ifeq ($(shell uname -p),i386)  #note: i386 is processor family type, not the 32-bit x86 arch\n    CXXFLAGS+=-msse4 -msse4.2\n  endif\nendif\n#not solved yet\nifeq ($(CC),gcc)\n  ifeq ($(shell test $(GCC_VERSION) -ge 70000; echo $$?),0)\n    CXXFLAGS+=-Wno-aligned-new\n  endif\nendif\n\nBUTIL_SOURCES = \\\n    src/butil/third_party/dmg_fp/g_fmt.cc \\\n    src/butil/third_party/dmg_fp/dtoa_wrapper.cc \\\n    src/butil/third_party/dynamic_annotations/dynamic_annotations.c \\\n    src/butil/third_party/icu/icu_utf.cc \\\n    src/butil/third_party/superfasthash/superfasthash.c \\\n    src/butil/third_party/modp_b64/modp_b64.cc \\\n    src/butil/third_party/symbolize/demangle.cc \\\n    src/butil/third_party/symbolize/symbolize.cc \\\n    src/butil/third_party/snappy/snappy-sinksource.cc \\\n    src/butil/third_party/snappy/snappy-stubs-internal.cc \\\n    src/butil/third_party/snappy/snappy.cc \\\n    src/butil/third_party/murmurhash3/murmurhash3.cpp \\\n    src/butil/arena.cpp \\\n    src/butil/at_exit.cc \\\n    src/butil/atomicops_internals_x86_gcc.cc \\\n    src/butil/base64.cc \\\n    src/butil/base64url.cc \\\n    src/butil/big_endian.cc \\\n    src/butil/cpu.cc \\\n    src/butil/debug/alias.cc \\\n    src/butil/debug/asan_invalid_access.cc \\\n    src/butil/debug/crash_logging.cc \\\n    src/butil/debug/debugger.cc \\\n    src/butil/debug/debugger_posix.cc \\\n    src/butil/debug/dump_without_crashing.cc \\\n    src/butil/debug/proc_maps_linux.cc \\\n    src/butil/debug/stack_trace.cc \\\n    src/butil/debug/stack_trace_posix.cc \\\n    src/butil/environment.cc \\\n    src/butil/files/file.cc \\\n    src/butil/files/file_posix.cc \\\n    src/butil/files/file_enumerator.cc \\\n    src/butil/files/file_enumerator_posix.cc \\\n    src/butil/files/file_path.cc \\\n    src/butil/files/file_path_constants.cc \\\n    src/butil/files/memory_mapped_file.cc \\\n    src/butil/files/memory_mapped_file_posix.cc \\\n    src/butil/files/scoped_file.cc \\\n    src/butil/files/scoped_temp_dir.cc \\\n    src/butil/file_util.cc \\\n    src/butil/file_util_posix.cc \\\n    src/butil/guid.cc \\\n    src/butil/guid_posix.cc \\\n    src/butil/hash.cc \\\n    src/butil/lazy_instance.cc \\\n    src/butil/location.cc \\\n    src/butil/memory/aligned_memory.cc \\\n    src/butil/memory/ref_counted.cc \\\n    src/butil/memory/ref_counted_memory.cc \\\n    src/butil/memory/singleton.cc \\\n    src/butil/memory/weak_ptr.cc \\\n    src/butil/posix/file_descriptor_shuffle.cc \\\n    src/butil/posix/global_descriptors.cc \\\n    src/butil/process_util.cc \\\n    src/butil/rand_util.cc \\\n    src/butil/rand_util_posix.cc \\\n    src/butil/fast_rand.cpp \\\n    src/butil/safe_strerror_posix.cc \\\n    src/butil/sha1_portable.cc \\\n    src/butil/strings/latin1_string_conversions.cc \\\n    src/butil/strings/nullable_string16.cc \\\n    src/butil/strings/safe_sprintf.cc \\\n    src/butil/strings/string16.cc \\\n    src/butil/strings/string_number_conversions.cc \\\n    src/butil/strings/string_split.cc \\\n    src/butil/strings/string_piece.cc \\\n    src/butil/strings/string_util.cc \\\n    src/butil/strings/string_util_constants.cc \\\n    src/butil/strings/stringprintf.cc \\\n    src/butil/strings/utf_offset_string_conversions.cc \\\n    src/butil/strings/utf_string_conversion_utils.cc \\\n    src/butil/strings/utf_string_conversions.cc \\\n    src/butil/synchronization/cancellation_flag.cc \\\n    src/butil/synchronization/condition_variable_posix.cc \\\n    src/butil/synchronization/waitable_event_posix.cc \\\n    src/butil/threading/non_thread_safe_impl.cc \\\n    src/butil/threading/platform_thread_posix.cc \\\n    src/butil/threading/simple_thread.cc \\\n    src/butil/threading/thread_checker_impl.cc \\\n    src/butil/threading/thread_collision_warner.cc \\\n    src/butil/threading/thread_id_name_manager.cc \\\n    src/butil/threading/thread_local_posix.cc \\\n    src/butil/threading/thread_local_storage.cc \\\n    src/butil/threading/thread_local_storage_posix.cc \\\n    src/butil/threading/thread_restrictions.cc \\\n    src/butil/threading/watchdog.cc \\\n    src/butil/time/clock.cc \\\n    src/butil/time/default_clock.cc \\\n    src/butil/time/default_tick_clock.cc \\\n    src/butil/time/tick_clock.cc \\\n    src/butil/time/time.cc \\\n    src/butil/time/time_posix.cc \\\n    src/butil/version.cc \\\n    src/butil/logging.cc \\\n    src/butil/class_name.cpp \\\n    src/butil/errno.cpp \\\n    src/butil/find_cstr.cpp \\\n    src/butil/status.cpp \\\n    src/butil/string_printf.cpp \\\n    src/butil/thread_local.cpp \\\n    src/butil/thread_key.cpp \\\n    src/butil/unix_socket.cpp \\\n    src/butil/endpoint.cpp \\\n    src/butil/fd_utility.cpp \\\n    src/butil/files/temp_file.cpp \\\n    src/butil/files/file_watcher.cpp \\\n    src/butil/time.cpp \\\n    src/butil/zero_copy_stream_as_streambuf.cpp \\\n    src/butil/crc32c.cc \\\n    src/butil/containers/case_ignored_flat_map.cpp \\\n    src/butil/iobuf.cpp \\\n    src/butil/iobuf_profiler.cpp \\\n    src/butil/binary_printer.cpp \\\n    src/butil/recordio.cc \\\n    src/butil/popen.cpp\n\nifeq ($(SYSTEM), Linux)\n    BUTIL_SOURCES += src/butil/file_util_linux.cc \\\n        src/butil/threading/platform_thread_linux.cc \\\n        src/butil/strings/sys_string_conversions_posix.cc\nendif\nifeq ($(SYSTEM), Darwin)\n    BUTIL_SOURCES += src/butil/mac/bundle_locations.mm \\\n\t\tsrc/butil/mac/foundation_util.mm \\\n\t\tsrc/butil/file_util_mac.mm \\\n\t\tsrc/butil/threading/platform_thread_mac.mm \\\n\t\tsrc/butil/strings/sys_string_conversions_mac.mm \\\n\t\tsrc/butil/time/time_mac.cc \\\n\t\tsrc/butil/mac/scoped_mach_port.cc\nendif\n\nBUTIL_OBJS = $(addsuffix .o, $(basename $(BUTIL_SOURCES)))\n\nBVAR_DIRS = src/bvar src/bvar/detail\nBVAR_SOURCES = $(foreach d,$(BVAR_DIRS),$(wildcard $(addprefix $(d)/*,$(SRCEXTS))))\nBVAR_OBJS = $(addsuffix .o, $(basename $(BVAR_SOURCES))) \n\nBTHREAD_DIRS = src/bthread\nBTHREAD_SOURCES = $(foreach d,$(BTHREAD_DIRS),$(wildcard $(addprefix $(d)/*,$(SRCEXTS))))\nBTHREAD_OBJS = $(addsuffix .o, $(basename $(BTHREAD_SOURCES))) \n\nJSON2PB_DIRS = src/json2pb\nJSON2PB_SOURCES = $(foreach d,$(JSON2PB_DIRS),$(wildcard $(addprefix $(d)/*,$(SRCEXTS))))\nJSON2PB_OBJS = $(addsuffix .o, $(basename $(JSON2PB_SOURCES))) \n\nBRPC_DIRS = src/brpc src/brpc/details src/brpc/builtin src/brpc/policy src/brpc/rdma\nTHRIFT_SOURCES = $(foreach d,$(BRPC_DIRS),$(wildcard $(addprefix $(d)/thrift*,$(SRCEXTS))))\nEXCLUDE_SOURCES = $(foreach d,$(BRPC_DIRS),$(wildcard $(addprefix $(d)/event_dispatcher_*,$(SRCEXTS))))\nBRPC_SOURCES_ALL = $(foreach d,$(BRPC_DIRS),$(wildcard $(addprefix $(d)/*,$(SRCEXTS))))\nBRPC_SOURCES = $(filter-out $(THRIFT_SOURCES) $(EXCLUDE_SOURCES), $(BRPC_SOURCES_ALL))\nBRPC_PROTOS = $(filter %.proto,$(BRPC_SOURCES))\nBRPC_CFAMILIES = $(filter-out %.proto %.pb.cc,$(BRPC_SOURCES))\nBRPC_OBJS = $(BRPC_PROTOS:.proto=.pb.o) $(addsuffix .o, $(basename $(BRPC_CFAMILIES)))\n\nMCPACK2PB_SOURCES = \\\n\tsrc/mcpack2pb/field_type.cpp \\\n\tsrc/mcpack2pb/mcpack2pb.cpp \\\n\tsrc/mcpack2pb/parser.cpp \\\n\tsrc/mcpack2pb/serializer.cpp\nMCPACK2PB_OBJS = src/idl_options.pb.o $(addsuffix .o, $(basename $(MCPACK2PB_SOURCES)))\n\nifeq (ENABLE_THRIFT_FRAMED_PROTOCOL, $(findstring ENABLE_THRIFT_FRAMED_PROTOCOL, $(CPPFLAGS)))\n    THRIFT_OBJS = $(addsuffix .o, $(basename $(THRIFT_SOURCES)))\nendif\n\nOBJS=$(BUTIL_OBJS) $(BVAR_OBJS) $(BTHREAD_OBJS) $(JSON2PB_OBJS) $(MCPACK2PB_OBJS) $(BRPC_OBJS) $(THRIFT_OBJS)\n\nBVAR_DEBUG_OBJS=$(BUTIL_OBJS:.o=.dbg.o) $(BVAR_OBJS:.o=.dbg.o)\nDEBUG_OBJS = $(OBJS:.o=.dbg.o)\n\nPROTOS=$(BRPC_PROTOS) src/idl_options.proto\n\n.PHONY:all\nall:  protoc-gen-mcpack libbrpc.a libbrpc.$(SOEXT) output/include output/lib output/bin\n\n.PHONY:debug\ndebug: test/libbrpc.dbg.$(SOEXT) test/libbvar.dbg.a\n\n.PHONY:clean\nclean:\n\t@echo \"> Cleaning\"\n\trm -rf src/mcpack2pb/generator.o protoc-gen-mcpack libbrpc.a libbrpc.$(SOEXT) $(OBJS) output/include output/lib output/bin $(PROTOS:.proto=.pb.h) $(PROTOS:.proto=.pb.cc)\n\n.PHONY:clean_debug\nclean_debug:\n\trm -rf test/libbrpc.dbg.$(SOEXT) test/libbvar.dbg.a $(DEBUG_OBJS)\n\n.PRECIOUS: %.o\n\nprotoc-gen-mcpack: src/idl_options.pb.cc src/mcpack2pb/generator.o libbrpc.a\n\t@echo \"> Linking $@\"\nifeq ($(SYSTEM),Linux)\n\t$(CXX) -o $@ $(CXXFLAGS) $(HDRPATHS) $(LIBPATHS) -Xlinker \"-(\" $^ -Wl,-Bstatic $(STATIC_LINKINGS) -Wl,-Bdynamic -Xlinker \"-)\" $(DYNAMIC_LINKINGS)\nelse ifeq ($(SYSTEM),Darwin)\n\t$(CXX) -o $@ $(CXXFLAGS) $(HDRPATHS) $(LIBPATHS) $^ $(STATIC_LINKINGS) $(DYNAMIC_LINKINGS)\nendif\n\n# force generation of pb headers before compiling to avoid fail-to-import issues in compiling pb.cc\nlibbrpc.a:$(BRPC_PROTOS:.proto=.pb.h) $(OBJS)\n\t@echo \"> Packing $@\"\n\tar crs $@ $(filter %.o,$^)\n\nlibbrpc.$(SOEXT):$(BRPC_PROTOS:.proto=.pb.h) $(OBJS)\n\t@echo \"> Linking $@\"\nifeq ($(SYSTEM),Linux)\n\t$(CXX) -shared -o $@ $(LIBPATHS) $(SOPATHS) -Xlinker \"-(\" $(filter %.o,$^) -Xlinker \"-)\" $(STATIC_LINKINGS) $(DYNAMIC_LINKINGS)\nelse ifeq ($(SYSTEM),Darwin)\n\t$(CXX) -dynamiclib -Wl,-headerpad_max_install_names -o $@ -install_name @rpath/$@ $(LIBPATHS) $(SOPATHS) $(filter %.o,$^) $(STATIC_LINKINGS) $(DYNAMIC_LINKINGS)\nendif\n\ntest/libbvar.dbg.a:$(BVAR_DEBUG_OBJS)\n\t@echo \"> Packing $@\"\n\t@ar crs $@ $^\n\ntest/libbrpc.dbg.$(SOEXT):$(BRPC_PROTOS:.proto=.pb.h) $(DEBUG_OBJS)\n\t@echo \"> Linking $@\"\nifeq ($(SYSTEM),Linux)\n\t$(CXX) -shared -o $@ $(LIBPATHS) $(SOPATHS) -Xlinker \"-(\" $(filter %.o,$^) -Xlinker \"-)\" $(STATIC_LINKINGS) $(DYNAMIC_LINKINGS)\nelse ifeq ($(SYSTEM),Darwin)\n\t$(CXX) -dynamiclib -Wl,-headerpad_max_install_names -o $@ -install_name @rpath/libbrpc.dbg.$(SOEXT) $(LIBPATHS) $(SOPATHS) $(filter %.o,$^) $(STATIC_LINKINGS) $(DYNAMIC_LINKINGS)\nendif\n\n.PHONY:output/include\noutput/include:\n\t@echo \"> Copying to $@\"\n\t@for dir in `find src -type f -name \"*.h\" -exec dirname {} \\\\; | sed -e 's/^src\\///g' -e '/^src$$/d' | sort | uniq`; do mkdir -p $@/$$dir && cp src/$$dir/*.h $@/$$dir/; done\n\t@for dir in `find src -type f -name \"*.hpp\" -exec dirname {} \\\\; | sed -e 's/^src\\///g' -e '/^src$$/d' | sort | uniq`; do mkdir -p $@/$$dir && cp src/$$dir/*.hpp $@/$$dir/; done\n\t@cp src/idl_options.proto src/idl_options.pb.h $@\n\n.PHONY:output/lib\noutput/lib:libbrpc.a libbrpc.$(SOEXT)\n\t@echo \"> Copying to $@\"\n\t@mkdir -p $@\n\t@cp $^ $@\n\n.PHONY:output/bin\noutput/bin:protoc-gen-mcpack\n\t@echo \"> Copying to $@\"\n\t@mkdir -p $@\n\t@cp $^ $@\n\n%.pb.cc %.pb.h:%.proto\n\t@echo \"> Generating $@\"\n\t$(PROTOC) --cpp_out=./src --proto_path=./src --proto_path=$(PROTOBUF_HDR) $<\n\nsrc/mcpack2pb/generator.o:src/mcpack2pb/generator.cpp src/idl_options.pb.h\n\t$(CXX) -c $(HDRPATHS) $(CXXFLAGS) $< -o $@\n\n%.o:%.cpp\n\t@echo \"> Compiling $@\"\n\t$(CXX) -c $(HDRPATHS) $(CXXFLAGS) $< -o $@\n\n%http2_rpc_protocol.dbg.o:%http2_rpc_protocol.cpp\n\t@echo \"> Compiling $@ with O2\"\n\t$(CXX) -c $(HDRPATHS) -O2 $(DEBUG_CXXFLAGS) $< -o $@\n\n%hpack.dbg.o:%hpack.cpp\n\t@echo \"> Compiling $@ with O2\"\n\t$(CXX) -c $(HDRPATHS) -O2 $(DEBUG_CXXFLAGS) $< -o $@\n\n%.dbg.o:%.cpp\n\t@echo \"> Compiling $@\"\n\t$(CXX) -c $(HDRPATHS) $(DEBUG_CXXFLAGS) $< -o $@\n\n%.o:%.cc\n\t@echo \"> Compiling $@\"\n\t$(CXX) -c $(HDRPATHS) $(CXXFLAGS) $< -o $@\n\n%.dbg.o:%.cc\n\t@echo \"> Compiling $@\"\n\t$(CXX) -c $(HDRPATHS) $(DEBUG_CXXFLAGS) $< -o $@\n\n%.o:%.mm\n\t@echo \"> Compiling $@\"\n\t$(CXX) -c $(HDRPATHS) $(CXXFLAGS) $< -o $@\n\n%.dbg.o:%.mm\n\t@echo \"> Compiling $@\"\n\t$(CXX) -c $(HDRPATHS) $(DEBUG_CXXFLAGS) $< -o $@\n\n%.o:%.c\n\t@echo \"> Compiling $@\"\n\t$(CC) -c $(HDRPATHS) $(CFLAGS) $< -o $@\n\n%.dbg.o:%.c\n\t@echo \"> Compiling $@\"\n\t$(CC) -c $(HDRPATHS) $(DEBUG_CFLAGS) $< -o $@\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1611328125,
          "content": "Apache bRPC\nCopyright 2018-2024 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.791015625,
          "content": "[中文版](README_cn.md)\n\n[![Linux Build Status](https://github.com/apache/brpc/actions/workflows/ci-linux.yml/badge.svg)](https://github.com/apache/brpc/actions/workflows/ci-linux.yml)\n[![MacOs Build Status](https://github.com/apache/brpc/actions/workflows/ci-macos.yml/badge.svg)](https://github.com/apache/brpc/actions/workflows/ci-macos.yml)\n\n![brpc logo (light)](docs/images/logo.png#gh-light-mode-only)\n![brpc logo (dark)](docs/images/logo-white.png#gh-dark-mode-only)\n\n[bRPC](https://brpc.apache.org/) is an Industrial-grade RPC framework using C++ Language, which is often used in  high performance system such as Search, Storage, Machine learning, Advertisement, Recommendation etc.\n\n### \"bRPC\" means \"better RPC\". \n\nYou can use it to:\n* Build a server that can talk in multiple protocols (**on same port**), or access all sorts of services\n  * restful http/https, [h2](https://httpwg.org/specs/rfc9113.html)/[gRPC](https://grpc.io). using http/h2 in bRPC is much more friendly than [libcurl](https://curl.haxx.se/libcurl/). Access protobuf-based protocols with HTTP/h2+json, probably from another language.\n  * [redis](docs/en/redis_client.md) and [memcached](docs/en/memcache_client.md), thread-safe, more friendly and performant than the official clients.\n  * [rtmp](https://github.com/apache/brpc/blob/master/src/brpc/rtmp.h)/[flv](https://en.wikipedia.org/wiki/Flash_Video)/[hls](https://en.wikipedia.org/wiki/HTTP_Live_Streaming), for building [streaming services](https://github.com/brpc/media-server).\n  * hadoop_rpc (may be opensourced)\n  * [rdma](https://en.wikipedia.org/wiki/Remote_direct_memory_access) support\n  * [thrift](docs/en/thrift.md) support,  thread-safe, more friendly and performant than the official clients.\n  * all sorts of protocols used in Baidu: [baidu_std](docs/cn/baidu_std.md), [streaming_rpc](docs/en/streaming_rpc.md), hulu_pbrpc, [sofa_pbrpc](https://github.com/baidu/sofa-pbrpc), nova_pbrpc, public_pbrpc, ubrpc and nshead-based ones.\n  * Build [HA](https://en.wikipedia.org/wiki/High_availability) distributed services using an industrial-grade implementation of [RAFT consensus algorithm](https://raft.github.io) which is opensourced at [braft](https://github.com/brpc/braft)\n* Servers can handle requests [synchronously](docs/en/server.md) or [asynchronously](docs/en/server.md#asynchronous-service).\n* Clients can access servers [synchronously](docs/en/client.md#synchronus-call), [asynchronously](docs/en/client.md#asynchronous-call), [semi-synchronously](docs/en/client.md#semi-synchronous-call), or use [combo channels](docs/en/combo_channel.md) to simplify sharded or parallel accesses declaratively.\n* Debug services [via http](docs/en/builtin_service.md), and run  [cpu](docs/cn/cpu_profiler.md), [heap](docs/cn/heap_profiler.md) and [contention](docs/cn/contention_profiler.md) profilers.\n* Get [better latency and throughput](docs/en/overview.md#better-latency-and-throughput).\n* [Extend bRPC](docs/en/new_protocol.md) with the protocols used in your organization quickly, or customize components, including [naming services](docs/cn/load_balancing.md#命名服务) (dns, zk, etcd), [load balancers](docs/cn/load_balancing.md#负载均衡) (rr, random, consistent hashing)\n\n# Try it!\n\n* Read [overview](docs/en/overview.md) to know where bRPC can be used and its advantages.\n* Read [getting started](docs/cn/getting_started.md) for building steps and play with [examples](https://github.com/apache/brpc/tree/master/example/).\n* Docs:\n  * [Performance benchmark](docs/cn/benchmark.md)\n  * [bvar](docs/en/bvar.md)\n    * [bvar_c++](docs/cn/bvar_c++.md)\n  * [bthread](docs/cn/bthread.md)\n    * [bthread or not](docs/cn/bthread_or_not.md)\n    * [thread-local](docs/cn/thread_local.md)\n    * [Execution Queue](docs/cn/execution_queue.md)\n  * Client\n    * [Basics](docs/en/client.md)\n    * [Error code](docs/en/error_code.md)\n    * [Combo channels](docs/en/combo_channel.md)\n    * [Access http/h2](docs/en/http_client.md)\n    * [Access gRPC](docs/en/http_derivatives.md#h2grpc)\n    * [Access thrift](docs/en/thrift.md#client-accesses-thrift-server) \n    * [Access UB](docs/cn/ub_client.md)\n    * [Streaming RPC](docs/en/streaming_rpc.md)\n    * [Access redis](docs/en/redis_client.md)\n    * [Access memcached](docs/en/memcache_client.md)\n    * [Backup request](docs/en/backup_request.md)\n    * [Dummy server](docs/en/dummy_server.md)\n  * Server\n    * [Basics](docs/en/server.md)\n    * [Serve http/h2](docs/en/http_service.md)\n    * [Serve gRPC](docs/en/http_derivatives.md#h2grpc)\n    * [Serve thrift](docs/en/thrift.md#server-processes-thrift-requests)\n    * [Serve Nshead](docs/cn/nshead_service.md)\n    * [Debug server issues](docs/cn/server_debugging.md)\n    * [Server push](docs/en/server_push.md)\n    * [Avalanche](docs/cn/avalanche.md)\n    * [Auto ConcurrencyLimiter](docs/cn/auto_concurrency_limiter.md)\n    * [Media Server](https://github.com/brpc/media-server)\n    * [json2pb](docs/cn/json2pb.md)\n  * [Builtin Services](docs/en/builtin_service.md)\n    * [status](docs/en/status.md)\n    * [vars](docs/en/vars.md)\n    * [connections](docs/cn/connections.md)\n    * [flags](docs/cn/flags.md)\n    * [rpcz](docs/cn/rpcz.md)\n    * [cpu_profiler](docs/cn/cpu_profiler.md)\n    * [heap_profiler](docs/cn/heap_profiler.md)\n    * [contention_profiler](docs/cn/contention_profiler.md)\n  * Tools\n    * [rpc_press](docs/cn/rpc_press.md)\n    * [rpc_replay](docs/cn/rpc_replay.md)\n    * [rpc_view](docs/cn/rpc_view.md)\n    * [benchmark_http](docs/cn/benchmark_http.md)\n    * [parallel_http](docs/cn/parallel_http.md)\n  * Others\n    * [IOBuf](docs/en/iobuf.md)\n    * [Streaming Log](docs/en/streaming_log.md)\n    * [FlatMap](docs/cn/flatmap.md)\n    * [bRPC introduction](docs/cn/brpc_intro.pptx)(training material)\n    * [A tutorial on building large-scale services](docs/en/tutorial_on_building_services.pptx)(training material)\n    * [bRPC internal](docs/en/brpc_internal.pptx)(training material)\n  * RPC in depth\n    * [New Protocol](docs/en/new_protocol.md)\n    * [Atomic instructions](docs/en/atomic_instructions.md)\n    * [IO](docs/en/io.md)\n    * [Threading Overview](docs/en/threading_overview.md)\n    * [Load Balancing](docs/cn/load_balancing.md)\n    * [Locality-aware](docs/cn/lalb.md)\n    * [Consistent Hashing](docs/cn/consistent_hashing.md)\n    * [Memory Management](docs/cn/memory_management.md)\n    * [Timer keeping](docs/cn/timer_keeping.md)\n    * [bthread_id](docs/cn/bthread_id.md)\n  * Use cases\n    * [User cases](community/cases.md)\n\n# Contribute code\nPlease refer to [here](CONTRIBUTING.md).\n\n# Feedback and Getting involved\n* Report bugs, ask questions or give suggestions by [Github Issues](https://github.com/apache/brpc/issues)\n* Subscribe to the mailing list(dev-subscribe@brpc.apache.org) to get updated with the project\n\n# Code of Conduct\nWe follow the code of conduct from Apache Software Foundation, please refer it here [Link](https://www.apache.org/foundation/policies/conduct)\n"
        },
        {
          "name": "README_cn.md",
          "type": "blob",
          "size": 6.4248046875,
          "content": "[English version](README.md)\n\n[![Build Status](https://api.travis-ci.com/apache/brpc.svg?branch=master)](https://travis-ci.com/github/apache/brpc)\n\n![brpc logo (light)](docs/images/logo.png#gh-light-mode-only)\n![brpc logo (dark)](docs/images/logo-white.png#gh-dark-mode-only)\n\n[bRPC](https://brpc.apache.org/)是用C++语言编写的工业级RPC框架，常用于搜索、存储、机器学习、广告、推荐等高性能系统。\n\n### \"bRPC\"的含义是\"better RPC\"\n\n你可以使用它：\n\n* 搭建能在**一个端口**支持多协议的服务, 或访问各种服务\n  * restful http/https, [h2](https://httpwg.org/specs/rfc9113.html)/[gRPC](https://grpc.io)。使用bRPC的http实现比[libcurl](https://curl.haxx.se/libcurl/)方便多了。从其他语言通过HTTP/h2+json访问基于protobuf的协议.\n  * [redis](docs/cn/redis_client.md)和[memcached](docs/cn/memcache_client.md), 线程安全，比官方client更方便。\n  * [rtmp](https://github.com/apache/brpc/blob/master/src/brpc/rtmp.h)/[flv](https://en.wikipedia.org/wiki/Flash_Video)/[hls](https://en.wikipedia.org/wiki/HTTP_Live_Streaming), 可用于搭建[流媒体服务](https://github.com/brpc/media-server).\n  * hadoop_rpc(可能开源)\n  * 支持[rdma](https://en.wikipedia.org/wiki/Remote_direct_memory_access)\n  * 支持[thrift](docs/cn/thrift.md) , 线程安全，比官方client更方便\n  * 各种百度内使用的协议: [baidu_std](docs/cn/baidu_std.md), [streaming_rpc](docs/cn/streaming_rpc.md), hulu_pbrpc, [sofa_pbrpc](https://github.com/baidu/sofa-pbrpc), nova_pbrpc, public_pbrpc, ubrpc和使用nshead的各种协议.\n  * 基于工业级的[RAFT算法](https://raft.github.io)实现搭建[高可用](https://en.wikipedia.org/wiki/High_availability)分布式系统，已在[braft](https://github.com/brpc/braft)开源。\n* Server能[同步](docs/cn/server.md)或[异步](docs/cn/server.md#异步service)处理请求。\n* Client支持[同步](docs/cn/client.md#同步访问)、[异步](docs/cn/client.md#异步访问)、[半同步](docs/cn/client.md#半同步)，或使用[组合channels](docs/cn/combo_channel.md)简化复杂的分库或并发访问。\n* [通过http界面](docs/cn/builtin_service.md)调试服务, 使用[cpu](docs/cn/cpu_profiler.md), [heap](docs/cn/heap_profiler.md), [contention](docs/cn/contention_profiler.md) profilers.\n* 获得[更好的延时和吞吐](docs/cn/overview.md#更好的延时和吞吐).\n* 把你组织中使用的协议快速地[加入bRPC](docs/cn/new_protocol.md)，或定制各类组件, 包括[命名服务](docs/cn/load_balancing.md#命名服务) (dns, zk, etcd), [负载均衡](docs/cn/load_balancing.md#负载均衡) (rr, random, consistent hashing)\n\n# 试一下!\n\n* 通过[概述](docs/cn/overview.md)了解哪里可以用bRPC及其优势。\n* 阅读[编译步骤](docs/cn/getting_started.md)了解如何开始使用, 之后可以运行一下[示例程序](https://github.com/apache/brpc/tree/master/example/).\n* 文档:\n  * [性能测试](docs/cn/benchmark.md)\n  * [bvar](docs/cn/bvar.md)\n    * [bvar_c++](docs/cn/bvar_c++.md)\n  * [bthread](docs/cn/bthread.md)\n    * [bthread or not](docs/cn/bthread_or_not.md)\n    * [thread-local](docs/cn/thread_local.md)\n    * [Execution Queue](docs/cn/execution_queue.md)\n    * [bthread tracer](docs/cn/bthread_tracer.md)\n  * Client\n    * [基础功能](docs/cn/client.md)\n    * [错误码](docs/cn/error_code.md)\n    * [组合channels](docs/cn/combo_channel.md)\n    * [访问http/h2](docs/cn/http_client.md)\n    * [访问gRPC](docs/cn/http_derivatives.md#h2grpc)\n    * [访问thrift](docs/cn/thrift.md#client端访问thrift-server)\n    * [访问UB](docs/cn/ub_client.md)\n    * [Streaming RPC](docs/cn/streaming_rpc.md)\n    * [访问redis](docs/cn/redis_client.md)\n    * [访问memcached](docs/cn/memcache_client.md)\n    * [Backup request](docs/cn/backup_request.md)\n    * [Dummy server](docs/cn/dummy_server.md)\n  * Server\n    * [基础功能](docs/cn/server.md)\n    * [搭建http/h2服务](docs/cn/http_service.md)\n    * [搭建gRPC服务](docs/cn/http_derivatives.md#h2grpc)\n    * [搭建thrift服务](docs/cn/thrift.md#server端处理thrift请求)\n    * [搭建Nshead服务](docs/cn/nshead_service.md)\n    * [高效率排查server卡顿](docs/cn/server_debugging.md)\n    * [推送](docs/cn/server_push.md)\n    * [雪崩](docs/cn/avalanche.md)\n    * [自适应限流](docs/cn/auto_concurrency_limiter.md)\n    * [流媒体服务](https://github.com/brpc/media-server)\n    * [json2pb](docs/cn/json2pb.md)\n  * [内置服务](docs/cn/builtin_service.md)\n    * [status](docs/cn/status.md)\n    * [vars](docs/cn/vars.md)\n    * [connections](docs/cn/connections.md)\n    * [flags](docs/cn/flags.md)\n    * [rpcz](docs/cn/rpcz.md)\n    * [cpu_profiler](docs/cn/cpu_profiler.md)\n    * [heap_profiler](docs/cn/heap_profiler.md)\n    * [contention_profiler](docs/cn/contention_profiler.md)\n  * 工具\n    * [rpc_press](docs/cn/rpc_press.md)\n    * [rpc_replay](docs/cn/rpc_replay.md)\n    * [rpc_view](docs/cn/rpc_view.md)\n    * [benchmark_http](docs/cn/benchmark_http.md)\n    * [parallel_http](docs/cn/parallel_http.md)\n  * 其他\n    * [IOBuf](docs/cn/iobuf.md)\n    * [Streaming Log](docs/cn/streaming_log.md)\n    * [FlatMap](docs/cn/flatmap.md)\n    * [bRPC外功修炼宝典](docs/cn/brpc_intro.pptx)(培训材料)\n    * [搭建大型服务入门](docs/en/tutorial_on_building_services.pptx)(培训材料)\n    * [bRPC内功修炼宝典](docs/en/brpc_internal.pptx)(培训材料)\n  * 深入RPC\n    * [New Protocol](docs/cn/new_protocol.md)\n    * [Atomic instructions](docs/cn/atomic_instructions.md)\n    * [IO](docs/cn/io.md)\n    * [Threading Overview](docs/cn/threading_overview.md)\n    * [Load Balancing](docs/cn/load_balancing.md)\n    * [Locality-aware](docs/cn/lalb.md)\n    * [Consistent Hashing](docs/cn/consistent_hashing.md)\n    * [Memory Management](docs/cn/memory_management.md)\n    * [Timer keeping](docs/cn/timer_keeping.md)\n    * [bthread_id](docs/cn/bthread_id.md)\n  * Use cases inside Baidu\n    * [百度地图api入口](docs/cn/case_apicontrol.md)\n    * [联盟DSP](docs/cn/case_baidu_dsp.md)\n    * [ELF学习框架](docs/cn/case_elf.md)\n    * [云平台代理服务](docs/cn/case_ubrpc.md)\n\n# 贡献代码\n\n请参考[这里](CONTRIBUTING.md#chinese-version)。\n\n# 反馈和参与\n\n* bug、疑惑、修改建议都欢迎提在[Github Issues](https://github.com/apache/brpc/issues)中\n* 订阅邮件列表(dev-subscribe@brpc.apache.org)获得项目最新信息\n\n\n# 行为准则\n我们遵守Apache软件基金会的行为准则, 请参考如下 [链接](https://www.apache.org/foundation/policies/conduct)\n"
        },
        {
          "name": "RELEASE_VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "1.11.0\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 10.9560546875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nworkspace(name = \"com_github_brpc_brpc\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nload(\"@bazel_tools//tools/build_defs/repo:git.bzl\", \"git_repository\")\n\n#\n# Constants\n#\n\nBAZEL_IO_VERSION = \"4.2.2\"  # 2021-12-03T09:26:35Z\n\nBAZEL_IO_SHA256 = \"4c179ce66bbfff6ac5d81b8895518096e7f750866d08da2d4a574d1b8029e914\"\n\nBAZEL_SKYLIB_VERSION = \"1.1.1\"  # 2021-09-27T17:33:49Z\n\nBAZEL_SKYLIB_SHA256 = \"c6966ec828da198c5d9adbaa94c05e3a1c7f21bd012a0b29ba8ddbccb2c93b0d\"\n\nBAZEL_PLATFORMS_VERSION = \"0.0.4\"  # 2021-02-26\n\nBAZEL_PLATFORMS_SHA256 = \"079945598e4b6cc075846f7fd6a9d0857c33a7afc0de868c2ccb96405225135d\"\n\nRULES_PROTO_TAG = \"4.0.0\"  # 2021-09-15T14:13:21Z\n\nRULES_PROTO_SHA256 = \"66bfdf8782796239d3875d37e7de19b1d94301e8972b3cbd2446b332429b4df1\"\n\nRULES_CC_COMMIT_ID = \"0913abc3be0edff60af681c0473518f51fb9eeef\"  # 2021-08-12T14:14:28Z\n\nRULES_CC_SHA256 = \"04d22a8c6f0caab1466ff9ae8577dbd12a0c7d0bc468425b75de094ec68ab4f9\"\n\n#\n# Starlark libraries\n#\n\nhttp_archive(\n    name = \"io_bazel\",\n    sha256 = BAZEL_IO_SHA256,\n    strip_prefix = \"bazel-\" + BAZEL_IO_VERSION,\n    url = \"https://github.com/bazelbuild/bazel/archive/\" + BAZEL_IO_VERSION + \".zip\",\n)\n\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = BAZEL_SKYLIB_SHA256,\n    urls = [\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/{version}/bazel-skylib-{version}.tar.gz\".format(version = BAZEL_SKYLIB_VERSION),\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/{version}/bazel-skylib-{version}.tar.gz\".format(version = BAZEL_SKYLIB_VERSION),\n    ],\n)\n\nhttp_archive(\n    name = \"platforms\",\n    sha256 = BAZEL_PLATFORMS_SHA256,\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/{version}/platforms-{version}.tar.gz\".format(version = BAZEL_PLATFORMS_VERSION),\n        \"https://github.com/bazelbuild/platforms/releases/download/{version}/platforms-{version}.tar.gz\".format(version = BAZEL_PLATFORMS_VERSION),\n    ],\n)\n\nhttp_archive(\n    name = \"rules_proto\",\n    sha256 = RULES_PROTO_SHA256,\n    strip_prefix = \"rules_proto-{version}\".format(version = RULES_PROTO_TAG),\n    urls = [\"https://github.com/bazelbuild/rules_proto/archive/refs/tags/{version}.tar.gz\".format(version = RULES_PROTO_TAG)],\n)\n\nhttp_archive(\n    name = \"rules_cc\",\n    sha256 = RULES_CC_SHA256,\n    strip_prefix = \"rules_cc-{commit_id}\".format(commit_id = RULES_CC_COMMIT_ID),\n    urls = [\n        \"https://github.com/bazelbuild/rules_cc/archive/{commit_id}.tar.gz\".format(commit_id = RULES_CC_COMMIT_ID),\n    ],\n)\n\nhttp_archive(\n    name = \"rules_perl\",  # 2021-09-23T03:21:58Z\n    sha256 = \"55fbe071971772758ad669615fc9aac9b126db6ae45909f0f36de499f6201dd3\",\n    strip_prefix = \"rules_perl-2f4f36f454375e678e81e5ca465d4d497c5c02da\",\n    urls = [\n        \"https://github.com/bazelbuild/rules_perl/archive/2f4f36f454375e678e81e5ca465d4d497c5c02da.tar.gz\",\n    ],\n)\n\n# Use rules_foreign_cc as fewer as possible.\n#\n# 1. Build very basic libraries without any further dependencies.\n# 2. Build too complex to bazelize library.\nhttp_archive(\n    name = \"rules_foreign_cc\",  # 2021-12-03T17:15:40Z\n    sha256 = \"1df78c7d7eed2dc21b8b325a2853c31933a81e7b780f9a59a5d078be9008b13a\",\n    strip_prefix = \"rules_foreign_cc-0.7.0\",\n    url = \"https://github.com/bazelbuild/rules_foreign_cc/archive/0.7.0.tar.gz\",\n)\n\n#\n# Starlark rules\n#\n\nload(\"@rules_foreign_cc//foreign_cc:repositories.bzl\", \"rules_foreign_cc_dependencies\")\n\nrules_foreign_cc_dependencies(register_preinstalled_tools = False)\n\n#\n# C++ Dependencies\n#\n# Ordered lexicographical.\n#\n\nhttp_archive(\n    name = \"boost\",  # 2021-08-05T01:30:05Z\n    build_file = \"@com_github_nelhage_rules_boost//:BUILD.boost\",\n    patch_cmds = [\"rm -f doc/pdf/BUILD\"],\n    patch_cmds_win = [\"Remove-Item -Force doc/pdf/BUILD\"],\n    sha256 = \"5347464af5b14ac54bb945dc68f1dd7c56f0dad7262816b956138fc53bcc0131\",\n    strip_prefix = \"boost_1_77_0\",\n    urls = [\n        \"https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"com_github_gflags_gflags\",  # 2018-11-11T21:30:10Z\n    sha256 = \"34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\",\n    strip_prefix = \"gflags-2.2.2\",\n    urls = [\"https://github.com/gflags/gflags/archive/v2.2.2.tar.gz\"],\n)\n\nhttp_archive(\n    name = \"com_github_google_crc32c\",  # 2021-10-05T19:47:30Z\n    build_file = \"//bazel/third_party/crc32c:crc32c.BUILD\",\n    sha256 = \"ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56\",\n    strip_prefix = \"crc32c-1.1.2\",\n    urls = [\"https://github.com/google/crc32c/archive/1.1.2.tar.gz\"],\n)\n\nhttp_archive(\n    name = \"com_github_google_glog\",  # 2021-05-07T23:06:39Z\n    patch_args = [\"-p1\"],\n    patches = [\n        \"//bazel/third_party/glog:0001-mark-override-resolve-warning.patch\",\n    ],\n    sha256 = \"21bc744fb7f2fa701ee8db339ded7dce4f975d0d55837a97be7d46e8382dea5a\",\n    strip_prefix = \"glog-0.5.0\",\n    urls = [\"https://github.com/google/glog/archive/v0.5.0.zip\"],\n)\n\nhttp_archive(\n    name = \"com_github_google_leveldb\",  # 2021-02-23T21:51:12Z\n    build_file = \"//bazel/third_party/leveldb:leveldb.BUILD\",\n    sha256 = \"9a37f8a6174f09bd622bc723b55881dc541cd50747cbd08831c2a82d620f6d76\",\n    strip_prefix = \"leveldb-1.23\",\n    urls = [\n        \"https://github.com/google/leveldb/archive/refs/tags/1.23.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"com_github_google_snappy\",  # 2017-08-25\n    build_file = \"//bazel/third_party/snappy:snappy.BUILD\",\n    sha256 = \"3dfa02e873ff51a11ee02b9ca391807f0c8ea0529a4924afa645fbf97163f9d4\",\n    strip_prefix = \"snappy-1.1.7\",\n    urls = [\n        \"https://storage.googleapis.com/mirror.tensorflow.org/github.com/google/snappy/archive/1.1.7.tar.gz\",\n        \"https://github.com/google/snappy/archive/1.1.7.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"com_github_libevent_libevent\",  # 2020-07-05T13:33:03Z\n    build_file = \"//bazel/third_party/event:event.BUILD\",\n    sha256 = \"92e6de1be9ec176428fd2367677e61ceffc2ee1cb119035037a27d346b0403bb\",\n    strip_prefix = \"libevent-2.1.12-stable\",\n    urls = [\n        \"https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz\",\n    ],\n)\n\n# TODO: SIMD optimization.\n# https://github.com/cloudflare/zlib\nhttp_archive(\n    name = \"com_github_madler_zlib\",  # 2017-01-15T17:57:23Z\n    build_file = \"//bazel/third_party/zlib:zlib.BUILD\",\n    sha256 = \"c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\",\n    strip_prefix = \"zlib-1.2.11\",\n    urls = [\n        \"https://downloads.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz\",\n        \"https://zlib.net/fossils/zlib-1.2.11.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"com_github_nelhage_rules_boost\",  # 2021-08-27T15:46:06Z\n    patch_cmds = [\"sed -i 's/net_zlib_zlib/com_github_madler_zlib/g' BUILD.boost\"],\n    patch_cmds_win = [\n        \"\"\"$content = (Get-Content 'BUILD.boost') -replace \"net_zlib_zlib\", \"com_github_madler_zlib\"\nSet-Content BUILD.boost -Value $content -Encoding UTF8\n\"\"\",\n    ],\n    sha256 = \"2d0b2eef7137730dbbb180397fe9c3d601f8f25950c43222cb3ee85256a21869\",\n    strip_prefix = \"rules_boost-fce83babe3f6287bccb45d2df013a309fa3194b8\",\n    urls = [\n        \"https://github.com/nelhage/rules_boost/archive/fce83babe3f6287bccb45d2df013a309fa3194b8.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"com_google_absl\",  # 2021-09-27T18:06:52Z\n    sha256 = \"2f0d9c7bc770f32bda06a9548f537b63602987d5a173791485151aba28a90099\",\n    strip_prefix = \"abseil-cpp-7143e49e74857a009e16c51f6076eb197b6ccb49\",\n    urls = [\"https://github.com/abseil/abseil-cpp/archive/7143e49e74857a009e16c51f6076eb197b6ccb49.zip\"],\n)\n\nhttp_archive(\n    name = \"com_google_googletest\",  # 2021-07-09T13:28:13Z\n    sha256 = \"12ef65654dc01ab40f6f33f9d02c04f2097d2cd9fbe48dc6001b29543583b0ad\",\n    strip_prefix = \"googletest-8d51ffdfab10b3fba636ae69bc03da4b54f8c235\",\n    urls = [\"https://github.com/google/googletest/archive/8d51ffdfab10b3fba636ae69bc03da4b54f8c235.zip\"],\n)\n\nhttp_archive(\n    name = \"com_google_protobuf\",  # 2021-10-29T00:04:02Z\n    build_file = \"//bazel/third_party/protobuf:protobuf.BUILD\",\n    patch_cmds = [\n        \"sed -i protobuf.bzl -re '4,4d;417,508d'\",\n    ],\n    patch_cmds_win = [\n        \"\"\"$content = Get-Content 'protobuf.bzl' | Where-Object {\n    -not ($_.ReadCount -ne 4) -and\n    -not ($_.ReadCount -ge 418 -and $_.ReadCount -le 509)\n}\nSet-Content protobuf.bzl -Value $content -Encoding UTF8\n\"\"\",\n    ],\n    sha256 = \"87407cd28e7a9c95d9f61a098a53cf031109d451a7763e7dd1253abf8b4df422\",\n    strip_prefix = \"protobuf-3.19.1\",\n    urls = [\"https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.19.1.tar.gz\"],\n)\n\nhttp_archive(\n    name = \"openssl\",  # 2021-12-14T15:45:01Z\n    build_file = \"//bazel/third_party/openssl:openssl.BUILD\",\n    sha256 = \"f89199be8b23ca45fc7cb9f1d8d3ee67312318286ad030f5316aca6462db6c96\",\n    strip_prefix = \"openssl-1.1.1m\",\n    urls = [\n        \"https://www.openssl.org/source/openssl-1.1.1m.tar.gz\",\n        \"https://github.com/openssl/openssl/archive/OpenSSL_1_1_1m.tar.gz\",\n    ],\n)\n\n# https://github.com/google/boringssl/blob/master/INCORPORATING.md\ngit_repository(\n    name = \"boringssl\", # 2021-05-01T12:26:01Z\n    commit = \"0e6b86549db4c888666512295c3ebd4fa2a402f5\", # fips-20210429\n    remote = \"https://github.com/google/boringssl\",\n)\n\nhttp_archive(\n    name = \"org_apache_thrift\",  # 2021-09-11T11:54:01Z\n    build_file = \"//bazel/third_party/thrift:thrift.BUILD\",\n    sha256 = \"d5883566d161f8f6ddd4e21f3a9e3e6b8272799d054820f1c25b11e86718f86b\",\n    strip_prefix = \"thrift-0.15.0\",\n    urls = [\"https://archive.apache.org/dist/thrift/0.15.0/thrift-0.15.0.tar.gz\"],\n)\n\n#\n# Perl Dependencies\n#\n\nload(\"@rules_perl//perl:deps.bzl\", \"perl_register_toolchains\")\n\nperl_register_toolchains()\n\n#\n# Tools Dependencies\n#\n# Hedron's Compile Commands Extractor for Bazel\n# https://github.com/hedronvision/bazel-compile-commands-extractor\nhttp_archive(\n    name = \"hedron_compile_commands\",\n    url = \"https://github.com/hedronvision/bazel-compile-commands-extractor/archive/3dddf205a1f5cde20faf2444c1757abe0564ff4c.tar.gz\",\n    strip_prefix = \"bazel-compile-commands-extractor-3dddf205a1f5cde20faf2444c1757abe0564ff4c\",\n    sha256 = \"3cd0e49f0f4a6d406c1d74b53b7616f5e24f5fd319eafc1bf8eee6e14124d115\",\n)\nload(\"@hedron_compile_commands//:workspace_setup.bzl\", \"hedron_compile_commands_setup\")\nhedron_compile_commands_setup()"
        },
        {
          "name": "WORKSPACE.bzlmod",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.in",
          "type": "blob",
          "size": 0.9423828125,
          "content": "// Licensed to the Apache Software Foundation (ASF) under one or more\n// contributor license agreements.  See the NOTICE file distributed with\n// this work for additional information regarding copyright ownership.\n// The ASF licenses this file to You under the Apache License, Version 2.0\n// (the \"License\"); you may not use this file except in compliance with\n// the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#ifndef  BUTIL_CONFIG_H\n#define  BUTIL_CONFIG_H\n\n#ifdef BRPC_WITH_GLOG\n#undef BRPC_WITH_GLOG\n#endif\n#cmakedefine BRPC_WITH_GLOG @WITH_GLOG_VAL@\n\n#endif  // BUTIL_CONFIG_H\n"
        },
        {
          "name": "config_brpc.sh",
          "type": "blob",
          "size": 18.25,
          "content": "#!/usr/bin/env sh\n\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nSYSTEM=$(uname -s)\nif [ \"$SYSTEM\" = \"Darwin\" ]; then\n    if [ -z \"$BASH\" ] || [ \"$BASH\" = \"/bin/sh\" ] ; then\n        ECHO=echo\n    else\n        ECHO='echo -e'\n    fi\n    SO=dylib\n    LDD=\"otool -L\"\n    if [ \"$(getopt -V)\" = \" --\" ]; then\n        >&2 $ECHO \"gnu-getopt must be installed and used\"\n        exit 1\n    fi\nelse\n    if [ -z \"$BASH\" ]; then\n        ECHO=echo\n    else\n        ECHO='echo -e'\n    fi\n    SO=so\n    LDD=ldd\nfi\n\nTEMP=`getopt -o v: --long headers:,libs:,cc:,cxx:,with-glog,with-thrift,with-rdma,with-mesalink,with-bthread-tracer,with-debug-bthread-sche-safety,with-debug-lock,nodebugsymbols -n 'config_brpc' -- \"$@\"`\nWITH_GLOG=0\nWITH_THRIFT=0\nWITH_RDMA=0\nWITH_MESALINK=0\nWITH_BTHREAD_TRACER=0\nBRPC_DEBUG_BTHREAD_SCHE_SAFETY=0\nDEBUGSYMBOLS=-g\nBRPC_DEBUG_LOCK=0\n\nif [ $? != 0 ] ; then >&2 $ECHO \"Terminating...\"; exit 1 ; fi\n\n# Note the quotes around `$TEMP': they are essential!\neval set -- \"$TEMP\"\n\nif [ \"$SYSTEM\" = \"Darwin\" ]; then\n    REALPATH=realpath\nelse\n    REALPATH=\"readlink -f\"\nfi\n\n# Convert to abspath always so that generated mk is include-able from everywhere\nwhile true; do\n    case \"$1\" in\n        --headers ) HDRS_IN=\"$(${REALPATH} $2)\"; shift 2 ;;\n        --libs ) LIBS_IN=\"$(${REALPATH} $2)\"; shift 2 ;;\n        --cc ) CC=$2; shift 2 ;;\n        --cxx ) CXX=$2; shift 2 ;;\n        --with-glog ) WITH_GLOG=1; shift 1 ;;\n        --with-thrift) WITH_THRIFT=1; shift 1 ;;\n        --with-rdma) WITH_RDMA=1; shift 1 ;;\n        --with-mesalink) WITH_MESALINK=1; shift 1 ;;\n        --with-bthread-tracer) WITH_BTHREAD_TRACER=1; shift 1 ;;\n        --with-debug-bthread-sche-safety ) BRPC_DEBUG_BTHREAD_SCHE_SAFETY=1; shift 1 ;;\n        --with-debug-lock ) BRPC_DEBUG_LOCK=1; shift 1 ;;\n        --nodebugsymbols ) DEBUGSYMBOLS=; shift 1 ;;\n        -- ) shift; break ;;\n        * ) break ;;\n    esac\ndone\n\nif [ -z \"$CC\" ]; then\n    if [ ! -z \"$CXX\" ]; then\n        >&2 $ECHO \"--cc and --cxx must be both set or unset\"\n        exit 1\n    fi\n    CC=gcc\n    CXX=g++\n    if [ \"$SYSTEM\" = \"Darwin\" ]; then\n        CC=clang\n        CXX=clang++\n    fi\nelif [ -z \"$CXX\" ]; then\n    >&2 $ECHO \"--cc and --cxx must be both set or unset\"\n    exit 1\nfi\n\nGCC_VERSION=$(CXX=$CXX tools/print_gcc_version.sh)\nif [ $GCC_VERSION -gt 0 ] && [ $GCC_VERSION -lt 40800 ]; then\n    >&2 $ECHO \"GCC is too old, please install a newer version supporting C++11\"\n    exit 1\nfi\n\nif [ -z \"$HDRS_IN\" ] || [ -z \"$LIBS_IN\" ]; then\n    >&2 $ECHO \"config_brpc: --headers=HDRPATHS --libs=LIBPATHS must be specified\"\n    exit 1\nfi\n\nfind_dir_of_lib() {\n    local lib=$(find ${LIBS_IN} -name \"lib${1}.a\" -o -name \"lib${1}.$SO\" 2>/dev/null | head -n1)\n    if [ ! -z \"$lib\" ]; then\n        dirname $lib\n    fi\n}\nfind_dir_of_lib_or_die() {\n    local dir=$(find_dir_of_lib $1)\n    if [ -z \"$dir\" ]; then\n        >&2 $ECHO \"Fail to find $1 from --libs\"\n        exit 1\n    else\n        $ECHO $dir\n    fi\n}\n\nfind_bin() {\n    TARGET_BIN=$(find -L ${LIBS_IN} -type f -name \"$1\" 2>/dev/null | head -n1)\n    if [ ! -z \"$TARGET_BIN\" ]; then\n        $ECHO $TARGET_BIN\n    else\n        which \"$1\" 2>/dev/null\n    fi\n}\nfind_bin_or_die() {\n    TARGET_BIN=$(find_bin \"$1\")\n    if [ ! -z \"$TARGET_BIN\" ]; then\n        $ECHO $TARGET_BIN\n    else\n        >&2 $ECHO \"Fail to find $1\"\n        exit 1\n    fi\n}\n\nfind_dir_of_header() {\n    find -L ${HDRS_IN} -path \"*/$1\" | head -n1 | sed \"s|$1||g\"\n}\n\nfind_dir_of_header_excluding() {\n    find -L ${HDRS_IN} -path \"*/$1\" | grep -v \"$2\\$\" | head -n1 | sed \"s|$1||g\"\n}\n\nfind_dir_of_header_or_die() {\n    if [ -z \"$2\" ]; then\n        local dir=$(find_dir_of_header $1)\n    else\n        local dir=$(find_dir_of_header_excluding $1 $2)\n    fi\n    if [ -z \"$dir\" ]; then\n        >&2 $ECHO \"Fail to find $1 from --headers\"\n        exit 1\n    fi\n    $ECHO $dir\n}\n\nif [ \"$SYSTEM\" = \"Darwin\" ]; then\n    if [ -d \"/usr/local/opt/openssl\" ]; then\n        LIBS_IN=\"/usr/local/opt/openssl/lib $LIBS_IN\"\n        HDRS_IN=\"/usr/local/opt/openssl/include $HDRS_IN\"\n    elif [ -d \"/opt/homebrew/Cellar\" ]; then\n        LIBS_IN=\"/opt/homebrew/Cellar $LIBS_IN\"\n        HDRS_IN=\"/opt/homebrew/Cellar $HDRS_IN\"\n    fi\nfi\n\n# User specified path of openssl, if not given it's empty\nOPENSSL_LIB=$(find_dir_of_lib ssl)\n# Inconvenient to check these headers in baidu-internal\n#PTHREAD_HDR=$(find_dir_of_header_or_die pthread.h)\nOPENSSL_HDR=$(find_dir_of_header_or_die openssl/ssl.h mesalink/openssl/ssl.h)\n\nif [ $WITH_MESALINK != 0 ]; then\n    MESALINK_HDR=$(find_dir_of_header_or_die mesalink/openssl/ssl.h)\n    OPENSSL_HDR=\"$OPENSSL_HDR\\n$MESALINK_HDR\"\nfi\n\nSTATIC_LINKINGS=\nDYNAMIC_LINKINGS=\"-lpthread -lssl -lcrypto -ldl -lz\"\n\nif [ $WITH_MESALINK != 0 ]; then\n    DYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -lmesalink\"\nfi\n\nif [ \"$SYSTEM\" = \"Linux\" ]; then\n    DYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -lrt\"\nfi\nif [ \"$SYSTEM\" = \"Darwin\" ]; then\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -framework CoreFoundation\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -framework CoreGraphics\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -framework CoreData\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -framework CoreText\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -framework Security\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -framework Foundation\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,_MallocExtension_ReleaseFreeMemory\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,_ProfilerStart\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,_ProfilerStop\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,__Z13GetStackTracePPvii\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,_RegisterThriftProtocol\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,_mallctl\"\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -Wl,-U,_malloc_stats_print\"\nfi\nappend_linking() {\n    if [ -f $1/lib${2}.a ]; then\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n            # *.a must be explicitly specified in clang\n            STATIC_LINKINGS=\"$STATIC_LINKINGS $1/lib${2}.a\"\n        else\n            STATIC_LINKINGS=\"$STATIC_LINKINGS -l$2\"\n        fi\n        export STATICALLY_LINKED_$2=1\n    else\n        DYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -l$2\"\n        export STATICALLY_LINKED_$2=0\n    fi\n}\n\nGFLAGS_LIB=$(find_dir_of_lib_or_die gflags)\nappend_linking $GFLAGS_LIB gflags\n\nPROTOBUF_LIB=$(find_dir_of_lib_or_die protobuf)\nappend_linking $PROTOBUF_LIB protobuf\n\nLEVELDB_LIB=$(find_dir_of_lib_or_die leveldb)\n# required by leveldb\nif [ -f $LEVELDB_LIB/libleveldb.a ]; then\n    if [ -f $LEVELDB_LIB/libleveldb.$SO ]; then\n        if $LDD $LEVELDB_LIB/libleveldb.$SO | grep -q libsnappy; then\n            SNAPPY_LIB=$(find_dir_of_lib snappy)\n            REQUIRE_SNAPPY=\"yes\"\n        fi\n    fi\n    if [ -z \"$REQUIRE_SNAPPY\" ]; then\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n\t        STATIC_LINKINGS=\"$STATIC_LINKINGS $LEVELDB_LIB/libleveldb.a\"\n        else\n\t        STATIC_LINKINGS=\"$STATIC_LINKINGS -lleveldb\"\n        fi\n    elif [ -f $SNAPPY_LIB/libsnappy.a ]; then\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n\t        STATIC_LINKINGS=\"$STATIC_LINKINGS $LEVELDB_LIB/libleveldb.a $SNAPPY_LIB/libsnappy.a\"\n        else\n\t        STATIC_LINKINGS=\"$STATIC_LINKINGS -lleveldb -lsnappy\"\n        fi\n    else\n\t    DYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -lleveldb\"\n    fi\nelse\n\tDYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -lleveldb\"\nfi\n\nPROTOC=$(find_bin_or_die protoc)\n\nGFLAGS_HDR=$(find_dir_of_header_or_die gflags/gflags.h)\n# namespace of gflags may not be google, grep it from source.\nGFLAGS_NS=$(grep \"namespace [_A-Za-z0-9]\\+ {\" $GFLAGS_HDR/gflags/gflags_declare.h | head -1 | awk '{print $2}')\nif [ \"$GFLAGS_NS\" = \"GFLAGS_NAMESPACE\" ]; then\n    GFLAGS_NS=$(grep \"#define GFLAGS_NAMESPACE [_A-Za-z0-9]\\+\" $GFLAGS_HDR/gflags/gflags_declare.h | head -1 | awk '{print $3}')\nfi\nif [ -z \"$GFLAGS_NS\" ]; then\n    >&2 $ECHO \"Fail to grep namespace of gflags source $GFLAGS_HDR/gflags/gflags_declare.h\"\n    exit 1\nfi\n\nPROTOBUF_HDR=$(find_dir_of_header_or_die google/protobuf/message.h)\nPROTOBUF_VERSION=$(grep '#define GOOGLE_PROTOBUF_VERSION [0-9]\\+' $PROTOBUF_HDR/google/protobuf/stubs/common.h | awk '{print $3}')\nif [ \"$PROTOBUF_VERSION\" -ge 4022000 ]; then\n    ABSL_HDR=$(find_dir_of_header_or_die absl/base/config.h)\n    ABSL_LIB=$(find_dir_of_lib_or_die absl_strings)\n    ABSL_TARGET_NAMES=\"\n        absl_bad_optional_access\n        absl_bad_variant_access\n        absl_base\n        absl_city\n        absl_civil_time\n        absl_cord\n        absl_cord_internal\n        absl_cordz_functions\n        absl_cordz_handle\n        absl_cordz_info\n        absl_crc32c\n        absl_crc_cord_state\n        absl_crc_cpu_detect\n        absl_crc_internal\n        absl_debugging_internal\n        absl_demangle_internal\n        absl_die_if_null\n        absl_examine_stack\n        absl_exponential_biased\n        absl_flags\n        absl_flags_commandlineflag\n        absl_flags_commandlineflag_internal\n        absl_flags_config\n        absl_flags_internal\n        absl_flags_marshalling\n        absl_flags_private_handle_accessor\n        absl_flags_program_name\n        absl_flags_reflection\n        absl_graphcycles_internal\n        absl_hash\n        absl_hashtablez_sampler\n        absl_int128\n        absl_kernel_timeout_internal\n        absl_leak_check\n        absl_log_entry\n        absl_log_globals\n        absl_log_initialize\n        absl_log_internal_check_op\n        absl_log_internal_conditions\n        absl_log_internal_format\n        absl_log_internal_globals\n        absl_log_internal_log_sink_set\n        absl_log_internal_message\n        absl_log_internal_nullguard\n        absl_log_internal_proto\n        absl_log_severity\n        absl_log_sink\n        absl_low_level_hash\n        absl_malloc_internal\n        absl_raw_hash_set\n        absl_raw_logging_internal\n        absl_spinlock_wait\n        absl_stacktrace\n        absl_status\n        absl_statusor\n        absl_str_format_internal\n        absl_strerror\n        absl_string_view\n        absl_strings\n        absl_strings_internal\n        absl_symbolize\n        absl_synchronization\n        absl_throw_delegate\n        absl_time\n        absl_time_zone\n    \"\n    for i in $ABSL_TARGET_NAMES; do\n        # ignore interface targets\n        if [ -n \"$(find_dir_of_lib $i)\" ]; then\n            append_linking \"$ABSL_LIB\" \"$i\"\n        fi\n    done\n    CXXFLAGS=\"-std=c++17\"\nelse\n    CXXFLAGS=\"-std=c++0x\"\nfi\n\nLEVELDB_HDR=$(find_dir_of_header_or_die leveldb/db.h)\n\nCPPFLAGS=\n\nif [ $WITH_BTHREAD_TRACER != 0 ]; then\n    if [ \"$SYSTEM\" != \"Linux\" ] || [ \"$(uname -m)\" != \"x86_64\" ]; then\n        >&2 $ECHO \"bthread tracer is only supported on Linux x86_64 platform\"\n        exit 1\n    fi\n    LIBUNWIND_HDR=$(find_dir_of_header_or_die libunwind.h)\n    LIBUNWIND_LIB=$(find_dir_of_lib_or_die unwind)\n\n    CPPFLAGS=\"${CPPFLAGS} -DBRPC_BTHREAD_TRACER\"\n\n    if [ -f \"$LIBUNWIND_LIB/libunwind.$SO\" ]; then\n        DYNAMIC_LINKINGS=\"$DYNAMIC_LINKINGS -lunwind -lunwind-x86_64\"\n    else\n        STATIC_LINKINGS=\"$STATIC_LINKINGS -lunwind -lunwind-x86_64\"\n    fi\nfi\n\nHDRS=$($ECHO \"$LIBUNWIND_HDR\\n$GFLAGS_HDR\\n$PROTOBUF_HDR\\n$ABSL_HDR\\n$LEVELDB_HDR\\n$OPENSSL_HDR\" | sort | uniq)\nLIBS=$($ECHO \"$LIBUNWIND_LIB\\n$GFLAGS_LIB\\n$PROTOBUF_LIB\\n$ABSL_LIB\\n$LEVELDB_LIB\\n$OPENSSL_LIB\\n$SNAPPY_LIB\" | sort | uniq)\n\nabsent_in_the_list() {\n    TMP=`$ECHO \"$1\\n$2\" | sort | uniq`\n    if [ \"${TMP}\" = \"$2\" ]; then\n        return 1\n    fi\n    return 0\n}\n\nOUTPUT_CONTENT=\"# Generated by config_brpc.sh, don't modify manually\"\nappend_to_output() {\n    OUTPUT_CONTENT=\"${OUTPUT_CONTENT}\\n$*\"\n}\n# $1: libname, $2: indentation\nappend_to_output_headers() {\n    if absent_in_the_list \"$1\" \"$HDRS\"; then\n        append_to_output \"${2}HDRS+=$1\"\n        HDRS=`$ECHO \"${HDRS}\\n$1\" | sort | uniq`\n    fi\n}\n# $1: libname, $2: indentation\nappend_to_output_libs() {\n    if absent_in_the_list \"$1\" \"$LIBS\"; then\n        append_to_output \"${2}LIBS+=$1\"\n        LIBS=`$ECHO \"${LIBS}\\n$1\" | sort | uniq`\n    fi\n}\n# $1: libdir, $2: libname, $3: indentation\nappend_to_output_linkings() {\n    if [ -f $1/lib$2.a ]; then\n        append_to_output_libs $1 $3\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n            append_to_output \"${3}STATIC_LINKINGS+=$1/lib$2.a\"\n        else\n            append_to_output \"${3}STATIC_LINKINGS+=-l$2\"\n        fi\n        export STATICALLY_LINKED_$2=1\n    else\n        append_to_output_libs $1 $3\n        append_to_output \"${3}DYNAMIC_LINKINGS+=-l$2\"\n        export STATICALLY_LINKED_$2=0\n    fi\n}\n\n#can't use \\n in texts because sh does not support -e\nappend_to_output \"SYSTEM=$SYSTEM\"\nappend_to_output \"HDRS=$($ECHO $HDRS)\"\nappend_to_output \"LIBS=$($ECHO $LIBS)\"\nappend_to_output \"PROTOC=$PROTOC\"\nappend_to_output \"PROTOBUF_HDR=$PROTOBUF_HDR\"\nappend_to_output \"CC=$CC\"\nappend_to_output \"CXX=$CXX\"\nappend_to_output \"GCC_VERSION=$GCC_VERSION\"\nappend_to_output \"STATIC_LINKINGS=$STATIC_LINKINGS\"\nappend_to_output \"DYNAMIC_LINKINGS=$DYNAMIC_LINKINGS\"\n\n# CPP means C PreProcessing, not C PlusPlus\nCPPFLAGS=\"${CPPFLAGS}  -DBRPC_WITH_GLOG=$WITH_GLOG -DGFLAGS_NS=$GFLAGS_NS -DBRPC_DEBUG_BTHREAD_SCHE_SAFETY=$BRPC_DEBUG_BTHREAD_SCHE_SAFETY -DBRPC_DEBUG_LOCK=$BRPC_DEBUG_LOCK\"\n\n# Avoid over-optimizations of TLS variables by GCC>=4.8\n# See: https://github.com/apache/brpc/issues/1693\nCPPFLAGS=\"${CPPFLAGS} -D__const__=__unused__\"\n\nif [ ! -z \"$DEBUGSYMBOLS\" ]; then\n    CPPFLAGS=\"${CPPFLAGS} $DEBUGSYMBOLS\"\nfi\nif [ \"$SYSTEM\" = \"Darwin\" ]; then\n    CPPFLAGS=\"${CPPFLAGS} -Wno-deprecated-declarations -Wno-inconsistent-missing-override\"\n    version=`sw_vers -productVersion | awk -F '.' '{print $1 \".\" $2}'`\n    if [[ `echo \"$version<10.12\" | bc -l` == 1 ]]; then\n        CPPFLAGS=\"${CPPFLAGS} -DNO_CLOCK_GETTIME_IN_MAC\"\n    fi\nfi\n\nif [ $WITH_THRIFT != 0 ]; then\n    THRIFT_LIB=$(find_dir_of_lib_or_die thriftnb)\n    THRIFT_HDR=$(find_dir_of_header_or_die thrift/Thrift.h)\n    append_to_output_libs \"$THRIFT_LIB\"\n    append_to_output_headers \"$THRIFT_HDR\"\n\n    CPPFLAGS=\"${CPPFLAGS} -DENABLE_THRIFT_FRAMED_PROTOCOL\"\n\n    if [ -f \"$THRIFT_LIB/libthriftnb.$SO\" ]; then\n        append_to_output \"DYNAMIC_LINKINGS+=-lthriftnb -levent -lthrift\"\n    else\n        append_to_output \"STATIC_LINKINGS+=-lthriftnb\"\n    fi\n    # get thrift version\n    thrift_version=$(thrift --version | awk '{print $3}')\n    major=$(echo \"$thrift_version\" | awk -F '.' '{print $1}')\n    minor=$(echo \"$thrift_version\" | awk -F '.' '{print $2}')\n    if [ $((major)) -eq 0 -a $((minor)) -lt 11 ]; then\n        CPPFLAGS=\"${CPPFLAGS} -D_THRIFT_VERSION_LOWER_THAN_0_11_0_\"\n        echo \"less\"\n    else\n        echo \"greater\"\n    fi\nfi\n\nif [ $WITH_RDMA != 0 ]; then\n    RDMA_LIB=$(find_dir_of_lib_or_die ibverbs)\n    RDMA_HDR=$(find_dir_of_header_or_die infiniband/verbs.h)\n    append_to_output_libs \"$RDMA_LIB\"\n    append_to_output_headers \"$RDMA_HDR\"\n\n    CPPFLAGS=\"${CPPFLAGS} -DBRPC_WITH_RDMA\"\n\n    append_to_output \"DYNAMIC_LINKINGS+=-libverbs\"\n    append_to_output \"WITH_RDMA=1\"\nfi\n\nif [ $WITH_MESALINK != 0 ]; then\n    CPPFLAGS=\"${CPPFLAGS} -DUSE_MESALINK\"\nfi\n\nappend_to_output \"CPPFLAGS=${CPPFLAGS}\"\nappend_to_output \"# without the flag, linux+arm64 may crash due to folding on TLS.\nifeq (\\$(CC),gcc)\n  ifeq (\\$(shell uname -p),aarch64) \n    CPPFLAGS+=-fno-gcse\n  endif\nendif\n\"\n\nappend_to_output \"CXXFLAGS=${CXXFLAGS}\"\n\nappend_to_output \"ifeq (\\$(NEED_LIBPROTOC), 1)\"\nPROTOC_LIB=$(find $PROTOBUF_LIB -name \"libprotoc.*\" | head -n1)\nif [ -z \"$PROTOC_LIB\" ]; then\n    append_to_output \"   \\$(error \\\"Fail to find libprotoc\\\")\"\nelse\n    # libprotobuf and libprotoc must be linked same statically or dynamically\n    # otherwise the bin will crash.\n    if [ $STATICALLY_LINKED_protobuf -gt 0 ]; then\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n            append_to_output \"    STATIC_LINKINGS+=$(find $PROTOBUF_LIB -name \"libprotoc.a\" | head -n1)\"\n        else\n            append_to_output \"    STATIC_LINKINGS+=-lprotoc\"\n        fi\n    else\n        append_to_output \"    DYNAMIC_LINKINGS+=-lprotoc\"\n    fi\nfi\nappend_to_output \"endif\"\n\nOLD_HDRS=$HDRS\nOLD_LIBS=$LIBS\nappend_to_output \"ifeq (\\$(NEED_GPERFTOOLS), 1)\"\n# required by cpu/heap profiler\nTCMALLOC_LIB=$(find_dir_of_lib tcmalloc_and_profiler)\nif [ -z \"$TCMALLOC_LIB\" ]; then\n    append_to_output \"    \\$(error \\\"Fail to find gperftools\\\")\"\nelse\n    append_to_output_libs \"$TCMALLOC_LIB\" \"    \"\n    if [ -f $TCMALLOC_LIB/libtcmalloc.$SO ]; then\n        append_to_output \"    DYNAMIC_LINKINGS+=-ltcmalloc_and_profiler\"\n    else\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n            append_to_output \"    STATIC_LINKINGS+=$TCMALLOC_LIB/libtcmalloc.a\"\n        else\n            append_to_output \"    STATIC_LINKINGS+=-ltcmalloc_and_profiler\"\n        fi\n    fi\nfi\nappend_to_output \"endif\"\n\nif [ $WITH_GLOG != 0 ]; then\n    GLOG_LIB=$(find_dir_of_lib_or_die glog)\n    GLOG_HDR=$(find_dir_of_header_or_die glog/logging.h windows/glog/logging.h)\n    append_to_output_libs \"$GLOG_LIB\"\n    append_to_output_headers \"$GLOG_HDR\"\n    if [ -f \"$GLOG_LIB/libglog.$SO\" ]; then\n        append_to_output \"DYNAMIC_LINKINGS+=-lglog\"\n    else\n        if [ \"$SYSTEM\" = \"Darwin\" ]; then\n            append_to_output \"STATIC_LINKINGS+=$GLOG_LIB/libglog.a\"\n        else\n            append_to_output \"STATIC_LINKINGS+=-lglog\"\n        fi\n    fi\nfi\n\n# required by UT\n#gtest\nGTEST_LIB=$(find_dir_of_lib gtest)\nHDRS=$OLD_HDRS\nLIBS=$OLD_LIBS\nappend_to_output \"ifeq (\\$(NEED_GTEST), 1)\"\nif [ -z \"$GTEST_LIB\" ]; then\n    append_to_output \"    \\$(error \\\"Fail to find gtest\\\")\"\nelse\n    GTEST_HDR=$(find_dir_of_header_or_die gtest/gtest.h)\n    append_to_output_libs $GTEST_LIB \"    \"\n    append_to_output_headers $GTEST_HDR \"    \"\n    append_to_output_linkings $GTEST_LIB gtest \"    \"\n    append_to_output_linkings $GTEST_LIB gtest_main \"    \"\nfi\nappend_to_output \"endif\"\n\n# generate src/butil/config.h\ncat << EOF > src/butil/config.h\n// This file is auto-generated by $(basename \"$0\"). DON'T edit it!\n#ifndef  BUTIL_CONFIG_H\n#define  BUTIL_CONFIG_H\n\n#ifdef BRPC_WITH_GLOG\n#undef BRPC_WITH_GLOG\n#endif\n#define BRPC_WITH_GLOG $WITH_GLOG\n\n#endif  // BUTIL_CONFIG_H\nEOF\n\n# write to config.mk\n$ECHO \"$OUTPUT_CONTENT\" > config.mk\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "homebrew-formula",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}