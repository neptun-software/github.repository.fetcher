{
  "metadata": {
    "timestamp": 1736566259602,
    "page": 4,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/flatbuffers",
      "stars": 23614,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bazelci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".bazelignore",
          "type": "blob",
          "size": 0.015625,
          "content": "ts/node_modules\n"
        },
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.76171875,
          "content": "# We cannot use \"common\" here because the \"version\" command doesn't support\n# --deleted_packages. We need to specify it for both build and query instead.\nbuild --deleted_packages=tests/bazel_repository_test_dir,tests/ts/bazel_repository_test_dir\nquery --deleted_packages=tests/bazel_repository_test_dir,tests/ts/bazel_repository_test_dir\n# Point tools such as coursier (used in rules_jvm_external) to Bazel's internal JDK\n# suggested in https://github.com/bazelbuild/rules_jvm_external/issues/445\ncommon --repo_env=JAVA_HOME=../bazel_tools/jdk\ncommon --action_env=JAVA_HOME=../bazel_tools/jdk\n# Workaround \"Error: need --enable_runfiles on Windows for to support rules_js\"\ncommon:windows --enable_runfiles\n# Swift is not required on Windows\ncommon:windows --deleted_packages=swift"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.296875,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: Google\nDerivePointerAlignment: false\nPointerAlignment: Right\nIndentPPDirectives: AfterHash\nCpp11BracedListStyle: false\nAlwaysBreakTemplateDeclarations: false\nAllowShortCaseLabelsOnASingleLine: true\nSpaceAfterTemplateKeyword: false\nAllowShortBlocksOnASingleLine: true\n...\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 15.353515625,
          "content": "---\nFormatStyle: \"file\"\nWarningsAsErrors: \"*\"\nHeaderFilterRegex: \".*\"\nChecks: \"google-build-explicit-make-pair,\n         google-build-namespaces,\n         google-build-using-namespace,\n         google-default-arguments,\n         google-explicit-constructor,\n         google-global-names-in-headers,\n         google-objc-avoid-nsobject-new,\n         google-objc-avoid-throwing-exception,\n         google-objc-function-naming,\n         google-objc-global-variable-declaration,\n         google-readability-avoid-underscore-in-googletest-name,\n         google-readability-braces-around-statements,\n         google-readability-casting,\n         google-readability-function-size,\n         google-readability-namespace-comments,\n         google-runtime-int,\n         google-runtime-operator,\n         google-upgrade-googletest-case,\n         clang-analyzer-apiModeling.StdCLibraryFunctions,\n         clang-analyzer-apiModeling.TrustNonnull,\n         clang-analyzer-apiModeling.google.GTest,\n         clang-analyzer-apiModeling.llvm.CastValue,\n         clang-analyzer-apiModeling.llvm.ReturnValue,\n         clang-analyzer-core.CallAndMessage,\n         clang-analyzer-core.CallAndMessageModeling,\n         clang-analyzer-core.DivideZero,\n         clang-analyzer-core.DynamicTypePropagation,\n         clang-analyzer-core.NonNullParamChecker,\n         clang-analyzer-core.NonnilStringConstants,\n         clang-analyzer-core.NullDereference,\n         clang-analyzer-core.StackAddrEscapeBase,\n         clang-analyzer-core.StackAddressEscape,\n         clang-analyzer-core.UndefinedBinaryOperatorResult,\n         clang-analyzer-core.VLASize,\n         clang-analyzer-core.builtin.BuiltinFunctions,\n         clang-analyzer-core.builtin.NoReturnFunctions,\n         clang-analyzer-core.uninitialized.ArraySubscript,\n         clang-analyzer-core.uninitialized.Assign,\n         clang-analyzer-core.uninitialized.Branch,\n         clang-analyzer-core.uninitialized.CapturedBlockVariable,\n         clang-analyzer-core.uninitialized.UndefReturn,\n         clang-analyzer-cplusplus.InnerPointer,\n         clang-analyzer-cplusplus.Move,\n         clang-analyzer-cplusplus.NewDelete,\n         clang-analyzer-cplusplus.NewDeleteLeaks,\n         clang-analyzer-cplusplus.PlacementNew,\n         clang-analyzer-cplusplus.PureVirtualCall,\n         clang-analyzer-cplusplus.SelfAssignment,\n         clang-analyzer-cplusplus.SmartPtrModeling,\n         clang-analyzer-cplusplus.StringChecker,\n         clang-analyzer-cplusplus.VirtualCallModeling,\n         clang-analyzer-deadcode.DeadStores,\n         clang-analyzer-fuchsia.HandleChecker,\n         clang-analyzer-nullability.NullPassedToNonnull,\n         clang-analyzer-nullability.NullReturnedFromNonnull,\n         clang-analyzer-nullability.NullabilityBase,\n         clang-analyzer-nullability.NullableDereferenced,\n         clang-analyzer-nullability.NullablePassedToNonnull,\n         clang-analyzer-nullability.NullableReturnedFromNonnull,\n         clang-analyzer-optin.cplusplus.UninitializedObject,\n         clang-analyzer-optin.cplusplus.VirtualCall,\n         clang-analyzer-optin.mpi.MPI-Checker,\n         clang-analyzer-optin.osx.OSObjectCStyleCast,\n         clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,\n         clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker,\n         clang-analyzer-optin.performance.GCDAntipattern,\n         clang-analyzer-optin.performance.Padding,\n         clang-analyzer-optin.portability.UnixAPI,\n         clang-analyzer-osx.API,\n         clang-analyzer-osx.MIG,\n         clang-analyzer-osx.NSOrCFErrorDerefChecker,\n         clang-analyzer-osx.NumberObjectConversion,\n         clang-analyzer-osx.OSObjectRetainCount,\n         clang-analyzer-osx.ObjCProperty,\n         clang-analyzer-osx.SecKeychainAPI,\n         clang-analyzer-osx.cocoa.AtSync,\n         clang-analyzer-osx.cocoa.AutoreleaseWrite,\n         clang-analyzer-osx.cocoa.ClassRelease,\n         clang-analyzer-osx.cocoa.Dealloc,\n         clang-analyzer-osx.cocoa.IncompatibleMethodTypes,\n         clang-analyzer-osx.cocoa.Loops,\n         clang-analyzer-osx.cocoa.MissingSuperCall,\n         clang-analyzer-osx.cocoa.NSAutoreleasePool,\n         clang-analyzer-osx.cocoa.NSError,\n         clang-analyzer-osx.cocoa.NilArg,\n         clang-analyzer-osx.cocoa.NonNilReturnValue,\n         clang-analyzer-osx.cocoa.ObjCGenerics,\n         clang-analyzer-osx.cocoa.RetainCount,\n         clang-analyzer-osx.cocoa.RetainCountBase,\n         clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak,\n         clang-analyzer-osx.cocoa.SelfInit,\n         clang-analyzer-osx.cocoa.SuperDealloc,\n         clang-analyzer-osx.cocoa.UnusedIvars,\n         clang-analyzer-osx.cocoa.VariadicMethodTypes,\n         clang-analyzer-osx.coreFoundation.CFError,\n         clang-analyzer-osx.coreFoundation.CFNumber,\n         clang-analyzer-osx.coreFoundation.CFRetainRelease,\n         clang-analyzer-osx.coreFoundation.containers.OutOfBounds,\n         clang-analyzer-osx.coreFoundation.containers.PointerSizedValues,\n         clang-analyzer-security.FloatLoopCounter,\n         clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,\n         clang-analyzer-security.insecureAPI.SecuritySyntaxChecker,\n         clang-analyzer-security.insecureAPI.UncheckedReturn,\n         clang-analyzer-security.insecureAPI.bcmp,\n         clang-analyzer-security.insecureAPI.bcopy,\n         clang-analyzer-security.insecureAPI.bzero,\n         clang-analyzer-security.insecureAPI.decodeValueOfObjCType,\n         clang-analyzer-security.insecureAPI.getpw,\n         clang-analyzer-security.insecureAPI.gets,\n         clang-analyzer-security.insecureAPI.mkstemp,\n         clang-analyzer-security.insecureAPI.mktemp,\n         clang-analyzer-security.insecureAPI.rand,\n         clang-analyzer-security.insecureAPI.strcpy,\n         clang-analyzer-security.insecureAPI.vfork,\n         clang-analyzer-unix.API,\n         clang-analyzer-unix.DynamicMemoryModeling,\n         clang-analyzer-unix.Malloc,\n         clang-analyzer-unix.MallocSizeof,\n         clang-analyzer-unix.MismatchedDeallocator,\n         clang-analyzer-unix.Vfork,\n         clang-analyzer-unix.cstring.BadSizeArg,\n         clang-analyzer-unix.cstring.CStringModeling,\n         clang-analyzer-unix.cstring.NullArg,\n         clang-analyzer-valist.CopyToSelf,\n         clang-analyzer-valist.Uninitialized,\n         clang-analyzer-valist.Unterminated,\n         clang-analyzer-valist.ValistBase,\n         clang-analyzer-webkit.NoUncountedMemberChecker,\n         clang-analyzer-webkit.RefCntblBaseVirtualDtor,\n         clang-analyzer-webkit.UncountedLambdaCapturesChecker,\n\n################################################ Optional checks ################################################\n\n         #google-readability-todo,\n         #bugprone-argument-comment,\n         #bugprone-assert-side-effect,\n         #bugprone-bad-signal-to-kill-thread,\n         #bugprone-bool-pointer-implicit-conversion,\n         #bugprone-branch-clone,\n         #bugprone-copy-constructor-init,\n         #bugprone-dangling-handle,\n         #bugprone-dynamic-static-initializers,\n         #bugprone-easily-swappable-parameters,\n         #bugprone-exception-escape,\n         #bugprone-fold-init-type,\n         #bugprone-forward-declaration-namespace,\n         #bugprone-forwarding-reference-overload,\n         #bugprone-implicit-widening-of-multiplication-result,\n         #bugprone-inaccurate-erase,\n         #bugprone-incorrect-roundings,\n         #bugprone-infinite-loop,\n         #bugprone-integer-division,\n         #bugprone-lambda-function-name,\n         #bugprone-macro-parentheses,\n         #bugprone-macro-repeated-side-effects,\n         #bugprone-misplaced-operator-in-strlen-in-alloc,\n         #bugprone-misplaced-pointer-arithmetic-in-alloc,\n         #bugprone-misplaced-widening-cast,\n         #bugprone-move-forwarding-reference,\n         #bugprone-multiple-statement-macro,\n         #bugprone-narrowing-conversions,\n         #bugprone-no-escape,\n         #bugprone-not-null-terminated-result,\n         #bugprone-parent-virtual-call,\n         #bugprone-posix-return,\n         #bugprone-redundant-branch-condition,\n         #bugprone-reserved-identifier,\n         #bugprone-signal-handler,\n         #bugprone-signed-char-misuse,\n         #bugprone-sizeof-container,\n         #bugprone-sizeof-expression,\n         #bugprone-spuriously-wake-up-functions,\n         #bugprone-string-constructor,\n         #bugprone-string-integer-assignment,\n         #bugprone-string-literal-with-embedded-nul,\n         #bugprone-stringview-nullptr,\n         #bugprone-suspicious-enum-usage,\n         #bugprone-suspicious-include,\n         #bugprone-suspicious-memory-comparison,\n         #bugprone-suspicious-memset-usage,\n         #bugprone-suspicious-missing-comma,\n         #bugprone-suspicious-semicolon,\n         #bugprone-suspicious-string-compare,\n         #bugprone-swapped-arguments,\n         #bugprone-terminating-continue,\n         #bugprone-throw-keyword-missing,\n         #bugprone-too-small-loop-variable,\n         #bugprone-undefined-memory-manipulation,\n         #bugprone-undelegated-constructor,\n         #bugprone-unhandled-exception-at-new,\n         #bugprone-unhandled-self-assignment,\n         #bugprone-unused-raii,\n         #bugprone-unused-return-value,\n         #bugprone-use-after-move,\n         #bugprone-virtual-near-miss,\n         #cppcoreguidelines-avoid-c-arrays,\n         #cppcoreguidelines-avoid-goto,\n         #cppcoreguidelines-avoid-magic-numbers,\n         #cppcoreguidelines-avoid-non-const-global-variables,\n         #cppcoreguidelines-c-copy-assignment-signature,\n         #cppcoreguidelines-explicit-virtual-functions,\n         #cppcoreguidelines-init-variables,\n         #cppcoreguidelines-interfaces-global-init,\n         #cppcoreguidelines-macro-usage,\n         #cppcoreguidelines-narrowing-conversions,\n         #cppcoreguidelines-no-malloc,\n         #cppcoreguidelines-non-private-member-variables-in-classes,\n         #cppcoreguidelines-owning-memory,\n         #cppcoreguidelines-prefer-member-initializer,\n         #cppcoreguidelines-pro-bounds-array-to-pointer-decay,\n         #cppcoreguidelines-pro-bounds-constant-array-index,\n         #cppcoreguidelines-pro-bounds-pointer-arithmetic,\n         #cppcoreguidelines-pro-type-const-cast,\n         #cppcoreguidelines-pro-type-cstyle-cast,\n         #cppcoreguidelines-pro-type-member-init,\n         #cppcoreguidelines-pro-type-reinterpret-cast,\n         #cppcoreguidelines-pro-type-static-cast-downcast,\n         #cppcoreguidelines-pro-type-union-access,\n         #cppcoreguidelines-pro-type-vararg,\n         #cppcoreguidelines-slicing,\n         #cppcoreguidelines-special-member-functions,\n         #cppcoreguidelines-virtual-class-destructor,\n         #hicpp-avoid-c-arrays,\n         #hicpp-avoid-goto,\n         #hicpp-braces-around-statements,\n         #hicpp-deprecated-headers,\n         #hicpp-exception-baseclass,\n         #hicpp-explicit-conversions,\n         #hicpp-function-size,\n         #hicpp-invalid-access-moved,\n         #hicpp-member-init,\n         #hicpp-move-const-arg,\n         #hicpp-multiway-paths-covered,\n         #hicpp-named-parameter,\n         #hicpp-new-delete-operators,\n         #hicpp-no-array-decay,\n         #hicpp-no-assembler,\n         #hicpp-no-malloc,\n         #hicpp-noexcept-move,\n         #hicpp-signed-bitwise,\n         #hicpp-special-member-functions,\n         #hicpp-static-assert,\n         #hicpp-undelegated-constructor,\n         #hicpp-uppercase-literal-suffix,\n         #hicpp-use-auto,\n         #hicpp-use-emplace,\n         #hicpp-use-equals-default,\n         #hicpp-use-equals-delete,\n         #hicpp-use-noexcept,\n         #hicpp-use-nullptr,\n         #hicpp-use-override,\n         #hicpp-vararg,\n         #modernize-avoid-bind,\n         #modernize-avoid-c-arrays,\n         #modernize-concat-nested-namespaces,\n         #modernize-deprecated-headers,\n         #modernize-deprecated-ios-base-aliases,\n         #modernize-loop-convert,\n         #modernize-make-shared,\n         #modernize-make-unique,\n         #modernize-pass-by-value,\n         #modernize-raw-string-literal,\n         #modernize-redundant-void-arg,\n         #modernize-replace-auto-ptr,\n         #modernize-replace-disallow-copy-and-assign-macro,\n         #modernize-replace-random-shuffle,\n         #modernize-return-braced-init-list,\n         #modernize-shrink-to-fit,\n         #modernize-unary-static-assert,\n         #modernize-use-auto,\n         #modernize-use-bool-literals,\n         #modernize-use-default-member-init,\n         #modernize-use-emplace,\n         #modernize-use-equals-default,\n         #modernize-use-equals-delete,\n         #modernize-use-nodiscard,\n         #modernize-use-noexcept,\n         #modernize-use-nullptr,\n         #modernize-use-override,\n         #modernize-use-trailing-return-type,\n         #modernize-use-transparent-functors,\n         #modernize-use-uncaught-exceptions,\n         #modernize-use-using,\n         #performance-faster-string-find,\n         #performance-for-range-copy,\n         #performance-implicit-conversion-in-loop,\n         #performance-inefficient-algorithm,\n         #performance-inefficient-string-concatenation,\n         #performance-inefficient-vector-operation,\n         #performance-move-const-arg,\n         #performance-move-constructor-init,\n         #performance-no-automatic-move,\n         #performance-no-int-to-ptr,\n         #performance-noexcept-move-constructor,\n         #performance-trivially-destructible,\n         #performance-type-promotion-in-math-fn,\n         #performance-unnecessary-copy-initialization,\n         #performance-unnecessary-value-param,\n         #portability-restrict-system-includes,\n         #portability-simd-intrinsics,\n         #readability-avoid-const-params-in-decls,\n         #readability-braces-around-statements,\n         #readability-const-return-type,\n         #readability-container-contains,\n         #readability-container-data-pointer,\n         #readability-container-size-empty,\n         #readability-convert-member-functions-to-static,\n         #readability-delete-null-pointer,\n         #readability-duplicate-include,\n         #readability-else-after-return,\n         #readability-function-cognitive-complexity,\n         #readability-function-size,\n         #readability-identifier-length,\n         #readability-identifier-naming,\n         #readability-implicit-bool-conversion,\n         #readability-inconsistent-declaration-parameter-name,\n         #readability-isolate-declaration,\n         #readability-magic-numbers,\n         #readability-make-member-function-const,\n         #readability-misleading-indentation,\n         #readability-misplaced-array-index,\n         #readability-named-parameter,\n         #readability-non-const-parameter,\n         #readability-qualified-auto,\n         #readability-redundant-access-specifiers,\n         #readability-redundant-control-flow,\n         #readability-redundant-declaration,\n         #readability-redundant-function-ptr-dereference,\n         #readability-redundant-member-init,\n         #readability-redundant-preprocessor,\n         #readability-redundant-smartptr-get,\n         #readability-redundant-string-cstr,\n         #readability-redundant-string-init,\n         #readability-simplify-boolean-expr,\n         #readability-simplify-subscript-expr,\n         #readability-static-accessed-through-instance,\n         #readability-static-definition-in-anonymous-namespace,\n         #readability-string-compare,\n         #readability-suspicious-call-argument,\n         #readability-uniqueptr-delete-release,\n         #readability-uppercase-literal-suffix,\n         #readability-use-anyofallof\n         \"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2490234375,
          "content": "root = true\n# Don't set line endings to avoid conflict with core.autocrlf flag.\n# Line endings on checkout/checkin are controlled by .gitattributes file.\n[*]\nindent_style = space\nindent_size = 2\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.2470703125,
          "content": "/* eslint-env node */\n\nmodule.exports = {\n    root: true,\n    parser: '@typescript-eslint/parser',\n    plugins: [\n        '@typescript-eslint',\n    ],\n    extends: [\n        'eslint:recommended',\n        'plugin:@typescript-eslint/recommended',\n    ]\n};"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0830078125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.4931640625,
          "content": "*_wire.txt\n*_wire.bin\n.DS_Store\n**/.build\nbuild\n**/Packages\n/*.xcodeproj\n**/xcuserdata/\n**/xcshareddata/\n**/.swiftpm/\n*.o\n*.o.d\n*.class\n*.a\n*.swp\n*~\n*.vcxproj\n*.vcxproj.filters\n*.vcxproj.user\n*.sln\n*.suo\n*.opendb\n*.keystore\n**/.vs/**\n**/bin/**\n!tests/rust_usage_test/bin/**\n**/gen/**\n**/libs/**\n**/obj/**\n**/*.dir/**\n**/CMakeFiles/**\n**/cmake_install.cmake\n**/install_manifest.txt\n**/CMakeCache.txt\n**/CMakeTestfile.cmake\n**/CPackConfig.cmake\n**/CPackSourceConfig.cmake\n**/compile_commands.json\n**/Debug/**\n**/Release/**\n**/RelWithDebInfo/**\n**/x64/ #build artifacts from VS\nbuild.xml\nlocal.properties\nproject.properties\nproguard-project.txt\nlinklint_results\nMakefile\nflatbenchmark\nflatbenchmark.exe\nflatc\nflatc.exe\nflathash\nflathash.exe\nflattests\nflattests.exe\nflattests_cpp17\nflattests_cpp17.exe\nflatsamplebinary\nflatsamplebinary.exe\nflatsampletext\nflatsampletext.exe\nflatsamplebfbs\nflatsamplebfbs.exe\ngrpctest\ngrpctest.exe\nsnapshot.sh\ntags\ntests/dart_gen\ntests/go_gen\ntests/monsterdata_java_wire.mon\ntests/monsterdata_java_wire_sp.mon\ntests/monsterdata_go_wire.mon\ntests/monsterdata_javascript_wire.mon\ntests/monsterdata_lobster_wire.mon\ntests/monsterdata_rust_wire.mon\ntests/php/\nCMakeLists.txt.user\nCMakeScripts/**\nCTestTestfile.cmake\nflatbuffers-config-version.cmake\nFlatBuffers.cbp\nbuild/Xcode/FlatBuffers.xcodeproj/project.xcworkspace/**\nbuild/Xcode/FlatBuffers.xcodeproj/xcuserdata/**\nFlatBuffers.xcodeproj/\njava/.idea\njava/*.iml\n.idea\n*.iml\ntarget\njava/target\n**/*.pyc\nbuild/VS2010/FlatBuffers.sdf\nbuild/VS2010/FlatBuffers.opensdf\nbuild/VS2010/ipch/**/*.ipch\n*.so\nTesting/Temporary\n.cproject\n.settings/\n.project\nnet/**/obj\nnode_modules/\nandroid/.externalNativeBuild/\nandroid/.gradle/\nandroid/build/\nsamples/android/.externalNativeBuild/\nsamples/android/.gradle/\nsamples/android/build/\njs/**/*.js\njs/**/*.d.ts\nmjs/**/*.js\nmjs/**/*.d.ts\n/bazel-bin\n/bazel-flatbuffers\n/bazel-genfiles\n/bazel-out\n/bazel-testlogs\n.ninja_deps\n.ninja_log\nbuild.ninja\nrules.ninja\n.vscode\ndart/.pub/\ndart/.packages\ndart/pubspec.lock\ndart/.dart_tool/\ndart/build/\ndart/doc/api/\nCargo.lock\n.corpus**\n.seed**\n.crash**\ngrpc/google/\n**/Package.resolved\n.clangd/**\npackage-lock.json\n/*.ilk\n/*.pdb\n.clwb\nyarn-error.log\n.cache/\n/flatbuffers.lib\n.cmake/\n**/dist\n**/vendor\n**/go.sum\nflatbuffers.pc\n**/FlatBuffers.Test.Swift.xcodeproj\n**/html/**\n**/latex/**\n# https://cmake.org/cmake/help/latest/module/FetchContent.html#variable:FETCHCONTENT_BASE_DIR\ncmake-build-debug/\n_deps/\n**/.gradle/**\nkotlin/**/generated\nMODULE.bazel\nMODULE.bazel.lock\n\n# Ignore the generated docs\ndocs/site"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.01171875,
          "content": "hoist=false\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 3.3916015625,
          "content": "load(\"@rules_cc//cc:defs.bzl\", \"cc_binary\", \"cc_library\")\n\nlicenses([\"notice\"])\n\npackage(\n    default_visibility = [\"//visibility:public\"],\n)\n\nexports_files([\n    \"LICENSE\",\n    \"tsconfig.json\",\n])\n\nconfig_setting(\n    name = \"platform_freebsd\",\n    constraint_values = [\n        \"@platforms//os:freebsd\",\n    ],\n)\n\nconfig_setting(\n    name = \"platform_openbsd\",\n    constraint_values = [\n        \"@platforms//os:openbsd\",\n    ],\n)\n\nfilegroup(\n    name = \"distribution\",\n    srcs = [\n        \".bazelignore\",\n        \".npmrc\",\n        \"BUILD.bazel\",\n        \"WORKSPACE\",\n        \"build_defs.bzl\",\n        \"package.json\",\n        \"pnpm-lock.yaml\",\n        \"typescript.bzl\",\n        \"//grpc/src/compiler:distribution\",\n        \"//include/codegen:distribution\",\n        \"//reflection:distribution\",\n        \"//src:distribution\",\n        \"//ts:distribution\",\n    ] + glob([\n        \"include/flatbuffers/*.h\",\n    ]),\n    visibility = [\"//visibility:public\"],\n)\n\n# Public flatc library to compile flatbuffer files at runtime.\ncc_library(\n    name = \"flatbuffers\",\n    hdrs = [\"//:public_headers\"],\n    linkstatic = 1,\n    strip_include_prefix = \"/include\",\n    deps = [\"//src:flatbuffers\"],\n)\n\n# Public C++ headers for the Flatbuffers library.\nfilegroup(\n    name = \"public_headers\",\n    srcs = [\n        \"include/flatbuffers/allocator.h\",\n        \"include/flatbuffers/array.h\",\n        \"include/flatbuffers/base.h\",\n        \"include/flatbuffers/buffer.h\",\n        \"include/flatbuffers/buffer_ref.h\",\n        \"include/flatbuffers/code_generator.h\",\n        \"include/flatbuffers/code_generators.h\",\n        \"include/flatbuffers/default_allocator.h\",\n        \"include/flatbuffers/detached_buffer.h\",\n        \"include/flatbuffers/file_manager.h\",\n        \"include/flatbuffers/flatbuffer_builder.h\",\n        \"include/flatbuffers/flatbuffers.h\",\n        \"include/flatbuffers/flex_flat_util.h\",\n        \"include/flatbuffers/flexbuffers.h\",\n        \"include/flatbuffers/grpc.h\",\n        \"include/flatbuffers/hash.h\",\n        \"include/flatbuffers/idl.h\",\n        \"include/flatbuffers/minireflect.h\",\n        \"include/flatbuffers/reflection.h\",\n        \"include/flatbuffers/reflection_generated.h\",\n        \"include/flatbuffers/registry.h\",\n        \"include/flatbuffers/stl_emulation.h\",\n        \"include/flatbuffers/string.h\",\n        \"include/flatbuffers/struct.h\",\n        \"include/flatbuffers/table.h\",\n        \"include/flatbuffers/util.h\",\n        \"include/flatbuffers/vector.h\",\n        \"include/flatbuffers/vector_downward.h\",\n        \"include/flatbuffers/verifier.h\",\n    ],\n)\n\n# Public flatc compiler library.\ncc_library(\n    name = \"flatc_library\",\n    linkstatic = 1,\n    deps = [\n        \"//src:flatc_library\",\n    ],\n)\n\n# Public flatc compiler.\ncc_binary(\n    name = \"flatc\",\n    data = [\"//reflection:reflection_fbs_schema\"],\n    deps = [\n        \"//src:flatc\",\n    ],\n)\n\nfilegroup(\n    name = \"flatc_headers\",\n    srcs = [\n        \"include/flatbuffers/flatc.h\",\n    ],\n    visibility = [\"//:__subpackages__\"],\n)\n\n# Library used by flatbuffer_cc_library rules.\ncc_library(\n    name = \"runtime_cc\",\n    hdrs = [\n        \"include/flatbuffers/base.h\",\n        \"include/flatbuffers/flatbuffers.h\",\n        \"include/flatbuffers/flexbuffers.h\",\n        \"include/flatbuffers/stl_emulation.h\",\n        \"include/flatbuffers/util.h\",\n        \"include/flatbuffers/vector.h\",\n        \"include/flatbuffers/verifier.h\",\n    ],\n    linkstatic = 1,\n    strip_include_prefix = \"/include\",\n)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.35546875,
          "content": "# Flatbuffers Change Log\n\nAll major or breaking changes will be documented in this file, as well as any\nnew features that should be highlighted. Minor fixes or improvements are not\nnecessarily listed.\n\n## [24.3.25] (March 25 2024)(https://github.com/google/flatbuffers/releases/tag/v24.3.25)\n\n* Fixed license metadata parsing (#8253)\n* [C++] Allow string_view in `LookUpByKey` in addition to null-terminated c-style strings (#8203)\n\n## [24.3.7] (March 7 2024)(https://github.com/google/flatbuffers/releases/tag/v24.3.7)\n\n* Just to fix some of the CI build issues from the 24.3.6 release.\n\n## [24.3.6] (March 6 2024)(https://github.com/google/flatbuffers/releases/tag/v24.3.6)\n\n* Fix typescript object API to allow 0 values for null-default scalars (#7864)\n\n## [23.5.26 (May 26 2023)](https://github.com/google/flatbuffers/releases/tag/v23.5.26)\n\n* Mostly bug fixing for 64-bit support\n* Adds support for specifying underling type of unions in C++ and TS/JS (#7954)\n\n## [23.5.9 (May 9 2023)](https://github.com/google/flatbuffers/releases/tag/v23.5.9)\n\n* 64-bit support for C++ (#7935)\n\n## [23.5.8 (May 8 2023)](https://github.com/google/flatbuffers/releases/tag/v23.5.8)\n\n* add key_field to compiled tests\n* Add golden language directory\n* Rework cmake flatc codegeneration (#7938)\n* remove defining generated files in test srcs\n* Add binary schema reflection (#7932)\n* Migrate from rules_nodejs to rules_js/rules_ts (take 2) (#7928)\n* `flat_buffers.dart`: mark const variable finals for internal Dart linters\n* fixed some windows warnings (#7929)\n* inject no long for FBS generation to remove logs in flattests (#7926)\n* Revert \"Migrate from rules_nodejs to rules_js/rules_ts (#7923)\" (#7927)\n* Migrate from rules_nodejs to rules_js/rules_ts (#7923)\n* Only generate @kotlin.ExperimentalUnsigned annotation on create*Vector methods having an unsigned array type parameter. (#7881)\n* additional check for absl::string_view availability (#7897)\n* Optionally generate Python type annotations (#7858)\n* Replace deprecated command with environment file (#7921)\n* drop glibc from runtime dependencies (#7906)\n* Make JSON supporting advanced union features (#7869)\n* Allow to use functions from `BuildFlatBuffers.cmake` from a flatbuffers installation installed with CMake. (#7912)\n* TS/JS: Use TypeError instead of Error when appropriate (#7910)\n* Go: make generated code more compliant to \"go fmt\" (#7907)\n* Support file_identifier in Go (#7904)\n* Optionally generate type prefixes and suffixes for python code (#7857)\n* Go: add test for FinishWithFileIdentifier (#7905)\n* Fix go_sample.sh (#7903)\n* [TS/JS] Upgrade dependencies (#7889)\n* Add a FileWriter interface (#7821)\n* TS/JS: Use minvalue from enum if not found (#7888)\n* [CS] Verifier (#7850)\n* README.md: PyPI case typo (#7880)\n* Update go documentation link to point to root module (#7879)\n* use Bool for flatbuffers bool instead of Byte (#7876)\n* fix using null string in vector (#7872)\n* Add `flatbuffers-64` branch to CI for pushes\n* made changes to the rust docs so they would compile. new_with_capacity is deprecated should use with_capacity, get_root_as_monster should be root_as_monster (#7871)\n* Adding comment for code clarification (#7856)\n* ToCamelCase() when kLowerCamel now converts first char to lower. (#7838)\n* Fix help output for --java-checkerframework (#7854)\n* Update filename to README.md and improve formatting (#7855)\n* Update stale.yml\n* Updated remaining usages of LICENSE.txt\n\n## [23.3.3 (Mar 3 2023)](https://github.com/google/flatbuffers/releases/tag/v23.3.3)\n\n* Refactoring of `flatc` generators to use an interface (#7797).\n\n* Removed legacy cmake support and set min to 3.8 (#7801).\n\n## [23.1.21 (Jan 21 2023)](https://github.com/google/flatbuffers/releases/tag/v23.1.20)\n\n* Reworked entry points for Typescript/Javascript and compatibility for single\n  file build (#7510)\n\n## [23.1.20 (Jan 20 2023)](https://github.com/google/flatbuffers/releases/tag/v23.1.20)\n\n* Removed go.mod files after some versioning issues were being report (#7780).\n\n## [23.1.4 (Jan 4 2023)](https://github.com/google/flatbuffers/releases/tag/v23.1.4)\n\n* Major release! Just kidding, we are continuing the\n  [versioning scheme](https://github.com/google/flatbuffers/wiki/Versioning) of\n  using a date to signify releases. This results in the first release of the new\n  year to bump the tradition major version field.\n\n* Go minimum version is now 1.19 (#7720) with the addition of Go modules.\n\n* Added CI support for Big Endian regression testing (#7707).\n\n* Fixed `getFullyQualifiedName` in typescript to return name delimited by '.'\n  instead of '_' (#7730).\n\n* Fixed the versioning scheme to not include leading zeros which are not\n  consistently handled by every package manager. Only the last release\n  (12.12.06) should have suffered from this.\n\n## [22.12.06 (Dec 06 2022)](https://github.com/google/flatbuffers/releases/tag/v22.12.06)\n\n* Bug fixing release, no major changes.\n\n## [22.10.25 (Oct 25 2022)](https://github.com/google/flatbuffers/releases/tag/v22.10.25)\n\n* Added Nim language support with generator and runtime libraries (#7534).\n\n## [22.9.29 (Sept 29 2022)](https://github.com/google/flatbuffers/releases/tag/v22.9.29)\n\n* Rust soundness fixes to avoid the crate from bing labelled unsafe (#7518).\n\n## [22.9.24 (Sept 24 2022)](https://github.com/google/flatbuffers/releases/tag/v22.9.24)\n\n* 20 Major releases in a row? Nope, we switched to a new\n  [versioning scheme](https://github.com/google/flatbuffers/wiki/Versioning)\n  that is based on date.\n\n* Python supports fixed size arrays now (#7529).\n\n* Behavior change in how C++ object API uses `UnPackTo`. The original intent of\n  this was to reduce allocations by reusing an existing object to pack data\n  into. At some point, this logic started to merge the states of the two objects\n  instead of clearing the state of the packee. This change goes back to the\n  original intention, the packed object is cleared when getting data packed into\n  it (#7527).\n\n* Fixed a bug in C++ alignment that was using `sizeof()` instead of the intended\n  `AlignOf()` for structs (#7520).\n\n* C# has an\n  [official Nuget package](https://www.nuget.org/packages/Google.FlatBuffers)\n  now (#7496).\n\n## 2.0.8 (Aug 29 2022)\n\n* Fix for `--keep-prefix` the was generating the wrong include statements for\n  C++ (#7469). The bug was introduced in 2.0.7.\n\n* Added the `Verifier::Options` option struct to allow specifying runtime\n  configuration settings for the verifier (#7489). This allows to skip verifying\n  nested flatbuffers, a on-by-default change that was introduced in 2.0.7. This\n  deprecates the existing `Verifier` constructor, which may be removed in a\n  future version.\n\n* Refactor of `tests/test.cpp` that lead to ~10% speedup in compilation of the\n  entire project (#7487).\n\n## 2.0.7 (Aug 22 2022)\n\n* This is the first version with an explicit change log, so all the previous\n  features will not be listed.\n\n* Verifier now checks that buffers are at least the minimum size required to be\n  a flatbuffers (12 bytes). This includes nested flatbuffers, which previously\n  could be declared valid at size 0.\n\n* Annotated binaries. Given a flatbuffer binary and a schema (or binary schema)\n  one can generate an annotated flatbuffer (.afb) to describe each byte in the\n  binary with schema metadata and value.\n\n* First binary schema generator (Lua) to generate Lua code via a .bfbs file.\n  This is mostly an implementation detail of flatc internals, but will be slowly\n  applied to the other language generators.\n"
        },
        {
          "name": "CMake",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 23.4306640625,
          "content": "# This is the legacy minimum version flatbuffers supported for a while.\ncmake_minimum_required(VERSION 3.8...3.25.2)\n\n# Attempt to read the current version of flatbuffers by looking at the latest tag.\ninclude(CMake/Version.cmake)\n\nproject(FlatBuffers\n        VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}\n        LANGUAGES CXX)\n\n# generate compile_commands.json\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# NOTE: Code coverage only works on Linux & OSX.\noption(FLATBUFFERS_CODE_COVERAGE \"Enable the code coverage build option.\" OFF)\noption(FLATBUFFERS_BUILD_TESTS \"Enable the build of tests and samples.\" ON)\noption(FLATBUFFERS_INSTALL \"Enable the installation of targets.\" ON)\noption(FLATBUFFERS_BUILD_FLATLIB \"Enable the build of the flatbuffers library\"\n       ON)\noption(FLATBUFFERS_BUILD_FLATC \"Enable the build of the flatbuffers compiler\"\n       ON)\noption(FLATBUFFERS_STATIC_FLATC \"Build flatbuffers compiler with -static flag\"\n       OFF)\noption(FLATBUFFERS_BUILD_FLATHASH \"Enable the build of flathash\" OFF)\noption(FLATBUFFERS_BUILD_BENCHMARKS \"Enable the build of flatbenchmark.\"\n       OFF)\noption(FLATBUFFERS_BUILD_GRPCTEST \"Enable the build of grpctest\" OFF)\noption(FLATBUFFERS_BUILD_SHAREDLIB\n       \"Enable the build of the flatbuffers shared library\"\n       OFF)\noption(FLATBUFFERS_LIBCXX_WITH_CLANG \"Force libc++ when using Clang\" ON)\n# NOTE: Sanitizer check only works on Linux & OSX (gcc & llvm).\noption(FLATBUFFERS_CODE_SANITIZE\n      \"Add '-fsanitize' flags to 'flattests' and 'flatc' targets.\"\n      OFF)\noption(FLATBUFFERS_PACKAGE_REDHAT\n       \"Build an rpm using the 'package' target.\"\n       OFF)\noption(FLATBUFFERS_PACKAGE_DEBIAN\n       \"Build an deb using the 'package' target.\"\n       OFF)\noption(FLATBUFFERS_BUILD_CPP17\n       \"Enable the build of c++17 test target. \\\"\n       Requirements: Clang6, GCC7, MSVC2017 (_MSC_VER >= 1914)  or higher.\"\n       OFF)\noption(FLATBUFFERS_BUILD_LEGACY\n       \"Run C++ code generator with '--cpp-std c++0x' switch.\"\n       OFF)\noption(FLATBUFFERS_ENABLE_PCH\n       \"Enable precompile headers support for 'flatbuffers' and 'flatc'. \\\"\n        Only work if CMake supports 'target_precompile_headers'. \\\"\n        This can speed up compilation time.\"\n       OFF)\noption(FLATBUFFERS_SKIP_MONSTER_EXTRA\n      \"Skip generating monster_extra.fbs that contains non-supported numerical\\\"\n      types.\" OFF)\noption(FLATBUFFERS_STRICT_MODE\n      \"Build flatbuffers with all warnings as errors (-Werror or /WX).\"\n      OFF)\n\nif(NOT DEFINED FLATBUFFERS_CPP_STD)\n  set(FLATBUFFERS_CPP_STD 11)\nendif()\n\nset(MSVC_LIKE OFF)\nif(MSVC OR CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL \"MSVC\")\n    set(MSVC_LIKE ON)\nendif()\n\nif(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n  set(IS_CLANG ON)\nelse()\n  set(IS_CLANG OFF)\nendif()\n\nif(DEFINED FLATBUFFERS_COMPILATION_TIMINGS)\n  message(\"Recording Compilation Timings to ${FLATBUFFERS_COMPILATION_TIMINGS}\")\n  file(REMOVE ${FLATBUFFERS_COMPILATION_TIMINGS})\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"time -f 'Wall: %E User: %U Sys: %S | %C' -q -a -o ${FLATBUFFERS_COMPILATION_TIMINGS}\")\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_CUSTOM \"time -f 'Wall: %E User: %U Sys: %S | %C' -q -a -o ${FLATBUFFERS_COMPILATION_TIMINGS}\")\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"time -f 'Wall: %E User: %U Sys: %S | %C' -q -a -o ${FLATBUFFERS_COMPILATION_TIMINGS}\")\nendif()\n\nif(NOT FLATBUFFERS_BUILD_FLATC AND FLATBUFFERS_BUILD_TESTS)\n    message(WARNING\n    \"Cannot build tests without building the compiler. Tests will be disabled.\")\n    set(FLATBUFFERS_BUILD_TESTS OFF)\nendif()\n\nif(DEFINED FLATBUFFERS_MAX_PARSING_DEPTH)\n  # Override the default recursion depth limit.\n  add_definitions(-DFLATBUFFERS_MAX_PARSING_DEPTH=${FLATBUFFERS_MAX_PARSING_DEPTH})\n  message(STATUS \"FLATBUFFERS_MAX_PARSING_DEPTH: ${FLATBUFFERS_MAX_PARSING_DEPTH}\")\nendif()\n\n# Auto-detect locale-narrow 'strtod_l' and  'strtoull_l' functions.\nif(NOT DEFINED FLATBUFFERS_LOCALE_INDEPENDENT)\n  include(CheckCXXSymbolExists)\n\n  set(FLATBUFFERS_LOCALE_INDEPENDENT 0)\n  if(MSVC_LIKE)\n    check_cxx_symbol_exists(_strtof_l stdlib.h FLATBUFFERS_HAS_STRTOF_L)\n    check_cxx_symbol_exists(_strtoui64_l stdlib.h FLATBUFFERS_HAS_STRTOULL_L)\n  else()\n    check_cxx_symbol_exists(strtof_l stdlib.h FLATBUFFERS_HAS_STRTOF_L)\n    check_cxx_symbol_exists(strtoull_l stdlib.h FLATBUFFERS_HAS_STRTOULL_L)\n  endif()\n  if(FLATBUFFERS_HAS_STRTOF_L AND FLATBUFFERS_HAS_STRTOULL_L)\n    set(FLATBUFFERS_LOCALE_INDEPENDENT 1)\n  endif()\nendif()\nadd_definitions(-DFLATBUFFERS_LOCALE_INDEPENDENT=$<BOOL:${FLATBUFFERS_LOCALE_INDEPENDENT}>)\n\nif(NOT WIN32)\n  check_symbol_exists(realpath \"stdlib.h\" HAVE_REALPATH)\n  if(NOT HAVE_REALPATH)\n    add_definitions(-DFLATBUFFERS_NO_ABSOLUTE_PATH_RESOLUTION)\n  endif()\nendif()\n\nset(FlatBuffers_Library_SRCS\n  include/flatbuffers/allocator.h\n  include/flatbuffers/array.h\n  include/flatbuffers/base.h\n  include/flatbuffers/buffer.h\n  include/flatbuffers/buffer_ref.h\n  include/flatbuffers/default_allocator.h\n  include/flatbuffers/detached_buffer.h\n  include/flatbuffers/code_generator.h\n  include/flatbuffers/file_manager.h\n  include/flatbuffers/flatbuffer_builder.h\n  include/flatbuffers/flatbuffers.h\n  include/flatbuffers/flexbuffers.h\n  include/flatbuffers/flex_flat_util.h\n  include/flatbuffers/hash.h\n  include/flatbuffers/idl.h\n  include/flatbuffers/minireflect.h\n  include/flatbuffers/reflection.h\n  include/flatbuffers/reflection_generated.h\n  include/flatbuffers/registry.h\n  include/flatbuffers/stl_emulation.h\n  include/flatbuffers/string.h\n  include/flatbuffers/struct.h\n  include/flatbuffers/table.h\n  include/flatbuffers/util.h\n  include/flatbuffers/vector.h\n  include/flatbuffers/vector_downward.h\n  include/flatbuffers/verifier.h\n  src/idl_parser.cpp\n  src/idl_gen_text.cpp\n  src/reflection.cpp\n  src/util.cpp\n)\n\nset(FlatBuffers_Compiler_SRCS\n  ${FlatBuffers_Library_SRCS}\n  src/idl_gen_binary.cpp\n  src/idl_gen_text.cpp\n  src/idl_gen_cpp.cpp\n  src/idl_gen_csharp.cpp\n  src/idl_gen_dart.cpp\n  src/idl_gen_kotlin.cpp\n  src/idl_gen_kotlin_kmp.cpp\n  src/idl_gen_go.cpp\n  src/idl_gen_java.cpp\n  src/idl_gen_ts.cpp\n  src/idl_gen_php.cpp\n  src/idl_gen_python.cpp\n  src/idl_gen_lobster.cpp\n  src/idl_gen_rust.cpp\n  src/idl_gen_fbs.cpp\n  src/idl_gen_grpc.cpp\n  src/idl_gen_json_schema.cpp\n  src/idl_gen_swift.cpp\n  src/file_name_saving_file_manager.cpp\n  src/file_binary_writer.cpp\n  src/file_writer.cpp\n  src/idl_namer.h\n  src/namer.h\n  src/flatc.cpp\n  src/flatc_main.cpp\n  src/bfbs_gen.h\n  src/bfbs_gen_lua.h\n  src/bfbs_gen_nim.h\n  src/bfbs_namer.h\n  include/codegen/idl_namer.h\n  include/codegen/namer.h\n  include/codegen/python.h\n  include/codegen/python.cc\n  include/flatbuffers/code_generators.h\n  src/binary_annotator.h\n  src/binary_annotator.cpp\n  src/annotated_binary_text_gen.h\n  src/annotated_binary_text_gen.cpp\n  src/bfbs_gen_lua.cpp\n  src/bfbs_gen_nim.cpp\n  src/code_generators.cpp\n  grpc/src/compiler/schema_interface.h\n  grpc/src/compiler/cpp_generator.h\n  grpc/src/compiler/cpp_generator.cc\n  grpc/src/compiler/go_generator.h\n  grpc/src/compiler/go_generator.cc\n  grpc/src/compiler/java_generator.h\n  grpc/src/compiler/java_generator.cc\n  grpc/src/compiler/python_generator.h\n  grpc/src/compiler/python_generator.cc\n  grpc/src/compiler/swift_generator.h\n  grpc/src/compiler/swift_generator.cc\n  grpc/src/compiler/ts_generator.h\n  grpc/src/compiler/ts_generator.cc\n)\n\nset(FlatHash_SRCS\n  include/flatbuffers/hash.h\n  src/flathash.cpp\n)\n\nset(FlatBuffers_Tests_SRCS\n  ${FlatBuffers_Library_SRCS}\n  src/idl_gen_fbs.cpp\n  tests/evolution_test.cpp\n  tests/flexbuffers_test.cpp\n  tests/fuzz_test.cpp\n  tests/json_test.cpp\n  tests/key_field_test.cpp\n  tests/monster_test.cpp\n  tests/optional_scalars_test.cpp\n  tests/parser_test.cpp\n  tests/proto_test.cpp\n  tests/reflection_test.cpp\n  tests/test.cpp\n  tests/test_assert.h\n  tests/test_assert.cpp\n  tests/test_builder.h\n  tests/test_builder.cpp\n  tests/util_test.cpp\n  tests/native_type_test_impl.h\n  tests/native_type_test_impl.cpp\n  tests/alignment_test.h\n  tests/alignment_test.cpp\n  tests/64bit/offset64_test.h\n  tests/64bit/offset64_test.cpp\n  include/flatbuffers/code_generators.h\n  src/code_generators.cpp\n)\n\nset(FlatBuffers_Tests_CPP17_SRCS\n  ${FlatBuffers_Library_SRCS}\n  tests/test_assert.h\n  tests/test_assert.cpp\n  tests/cpp17/test_cpp17.cpp\n)\n\nset(FlatBuffers_Sample_Binary_SRCS\n  samples/sample_binary.cpp\n)\n\nset(FlatBuffers_Sample_Text_SRCS\n  ${FlatBuffers_Library_SRCS}\n  samples/sample_text.cpp\n)\n\nset(FlatBuffers_Sample_BFBS_SRCS\n  ${FlatBuffers_Library_SRCS}\n  samples/sample_bfbs.cpp\n)\n\nset(FlatBuffers_GRPCTest_SRCS\n  include/flatbuffers/flatbuffers.h\n  include/flatbuffers/grpc.h\n  include/flatbuffers/util.h\n  src/util.cpp\n  tests/monster_test.grpc.fb.h\n  tests/test_assert.h\n  tests/test_builder.h\n  tests/monster_test.grpc.fb.cc\n  tests/test_assert.cpp\n  tests/test_builder.cpp\n  grpc/tests/grpctest.cpp\n  grpc/tests/message_builder_test.cpp\n)\n\n# TODO(dbaileychess): Figure out how this would now work. I posted a question on\n# https://stackoverflow.com/questions/71772330/override-target-compile-options-via-cmake-command-line.\n# Append FLATBUFFERS_CXX_FLAGS to CMAKE_CXX_FLAGS.\nif(DEFINED FLATBUFFERS_CXX_FLAGS)\n  message(STATUS \"extend CXX_FLAGS with ${FLATBUFFERS_CXX_FLAGS}\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${FLATBUFFERS_CXX_FLAGS}\")\nendif()\nmessage(STATUS \"CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}\")\n\nfunction(add_fsanitize_to_target _target _sanitizer)\n  if(WIN32)\n    target_compile_definitions(${_target} PRIVATE FLATBUFFERS_MEMORY_LEAK_TRACKING)\n    message(STATUS \"Sanitizer MSVC::_CrtDumpMemoryLeaks added to ${_target}\")\n  else()\n    # FLATBUFFERS_CODE_SANITIZE: boolean {ON,OFF,YES,NO} or string with list of sanitizer.\n    # List of sanitizer is string starts with '=': \"=address,undefined,thread,memory\".\n    if(IS_CLANG OR (CMAKE_COMPILER_IS_GNUCXX AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 4.9))\n      set(_sanitizer_flags \"=address,undefined\")\n      if(_sanitizer MATCHES \"=.*\")\n        # override default by user-defined sanitizer list\n        set(_sanitizer_flags ${_sanitizer})\n      endif()\n      target_compile_options(${_target} PRIVATE\n        -g -fsigned-char -fno-omit-frame-pointer\n        \"-fsanitize${_sanitizer_flags}\")\n      target_link_libraries(${_target} PRIVATE\n        \"-fsanitize${_sanitizer_flags}\")\n      set_target_properties(${_target} PROPERTIES POSITION_INDEPENDENT_CODE ON)\n      message(STATUS \"Sanitizer ${_sanitizer_flags} added to ${_target}\")\n    endif()\n  endif()\nendfunction()\n\nfunction(add_pch_to_target _target _pch_header)\n  # the command is available since cmake 3.16\n  if(COMMAND target_precompile_headers)\n    target_precompile_headers(${_target} PRIVATE ${_pch_header})\n    if(NOT MSVC)\n      set_source_files_properties(src/util.cpp PROPERTIES SKIP_PRECOMPILE_HEADERS ON)\n    endif()\n  endif()\nendfunction()\n\ninclude_directories(include)\ninclude_directories(grpc)\n\n# Creates an interface library that stores the configuration settings that each\n# target links too. This is a compromise between setting configuration globally\n# with add_compile_options() and the more targetted target_compile_options().\n# This way each target in this file can share settings and override them if\n# needed.\nadd_library(ProjectConfig INTERFACE)\ntarget_compile_features(ProjectConfig\n  INTERFACE\n    cxx_std_${FLATBUFFERS_CPP_STD}\n)\n\n# Force the standard to be met.\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\n# We shouldn't rely on any compiler-extensions to make things work.\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nif(MSVC_LIKE)\n  target_compile_options(ProjectConfig\n    INTERFACE\n      /W4\n      $<$<BOOL:${FLATBUFFERS_STRICT_MODE}>:\n        /WX       # Treat all compiler warnings as errors\n      >\n      /wd4512   # C4512: assignment operator could not be generated\n      /wd4316   # C4316: object allocated on the heap may not be aligned\n      /wd4456   # C4456: hides previous local declaration\n      $<$<CXX_COMPILER_ID:Clang>:\n        /D_CRT_SECURE_NO_WARNINGS\n      >\n  )\nelse()\n  target_compile_options(ProjectConfig\n    INTERFACE\n      -Wall\n      $<$<BOOL:${FLATBUFFERS_STRICT_MODE}>:\n        -Werror   # Treat all compiler warnings as errors\n\n        -fno-rtti # Disable runtime type information\n\n        $<$<CXX_COMPILER_ID:GNU>:\n          # False positive string overflow\n          # https://github.com/google/flatbuffers/issues/7366\n          -Wno-error=stringop-overflow\n        >\n      >\n      -pedantic\n      -Wextra\n      -Wno-unused-parameter\n      -Wold-style-cast\n      -fsigned-char\n      -Wnon-virtual-dtor\n\n      # This isn't working for some reason: $<$<CXX_COMPILER_ID:CLANG>:\n      $<$<BOOL:${IS_CLANG}>:\n        -Wnewline-eof\n        -Wno-unknown-warning-option\n        -Wmissing-declarations\n        -Wzero-as-null-pointer-constant\n        $<$<VERSION_GREATER:$<CXX_COMPILER_VERSION>,3.8>:\n          -Wimplicit-fallthrough\n          -Wextra-semi\n          $<$<BOOL:${FLATBUFFERS_STRICT_MODE}>:\n            -Werror=unused-private-field\n          >\n        >\n      >\n\n      $<$<CXX_COMPILER_ID:GNU>:\n        $<$<VERSION_GREATER:$<CXX_COMPILER_VERSION>,4.4>:\n          -Wunused-result\n          -Wunused-parameter\n          -Werror=unused-parameter\n          -Wmissing-declarations\n        >\n        $<$<VERSION_GREATER:$<CXX_COMPILER_VERSION>,4.7>:\n          -Wzero-as-null-pointer-constant\n        >\n        $<$<VERSION_GREATER:$<CXX_COMPILER_VERSION>,7.0>:\n          -faligned-new\n          $<$<BOOL:${FLATBUFFERS_STRICT_MODE}>:\n            -Werror=implicit-fallthrough=2\n          >\n        >\n        $<$<VERSION_GREATER:$<CXX_COMPILER_VERSION>,8.0>:\n          -Wextra-semi\n        >\n      >\n\n      $<$<BOOL:${FLATBUFFERS_CODE_COVERAGE}>:\n        -g\n        -fprofile-arcs\n        -ftest-coverage\n      >\n    )\n\n  if(FLATBUFFERS_CODE_COVERAGE)\n    target_link_options(ProjectConfig\n      INTERFACE\n        -fprofile-arcs\n        -ftest-coverage\n    )\n  endif()\nendif()\n\nif(FLATBUFFERS_BUILD_FLATLIB)\n  add_library(flatbuffers STATIC ${FlatBuffers_Library_SRCS})\n\n  # Attach header directory for when build via add_subdirectory().\n  target_include_directories(flatbuffers\n    INTERFACE\n      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\n  )\n  target_link_libraries(flatbuffers PRIVATE $<BUILD_INTERFACE:ProjectConfig>)\n\n  if(FLATBUFFERS_ENABLE_PCH)\n    add_pch_to_target(flatbuffers include/flatbuffers/pch/pch.h)\n  endif()\nendif()\n\nif(FLATBUFFERS_BUILD_FLATC)\n  add_executable(flatc ${FlatBuffers_Compiler_SRCS})\n  if(FLATBUFFERS_ENABLE_PCH)\n    add_pch_to_target(flatc include/flatbuffers/pch/flatc_pch.h)\n  endif()\n\n  target_link_libraries(flatc PRIVATE $<BUILD_INTERFACE:ProjectConfig>)\n  target_compile_options(flatc\n    PRIVATE\n      $<$<AND:$<BOOL:${MSVC_LIKE}>,$<CONFIG:Release>>:\n        /MT\n      >\n  )\n\n  if(FLATBUFFERS_CODE_SANITIZE AND NOT WIN32)\n    add_fsanitize_to_target(flatc ${FLATBUFFERS_CODE_SANITIZE})\n  endif()\n  if(NOT FLATBUFFERS_FLATC_EXECUTABLE)\n    set(FLATBUFFERS_FLATC_EXECUTABLE $<TARGET_FILE:flatc>)\n  endif()\n  if(FLATBUFFERS_STATIC_FLATC AND NOT MSVC)\n    target_link_libraries(flatc PRIVATE -static)\n  endif()\nendif()\n\nif(FLATBUFFERS_BUILD_FLATHASH)\n  add_executable(flathash ${FlatHash_SRCS})\n  target_link_libraries(flathash PRIVATE $<BUILD_INTERFACE:ProjectConfig>)\nendif()\n\nif(FLATBUFFERS_BUILD_SHAREDLIB)\n  add_library(flatbuffers_shared SHARED ${FlatBuffers_Library_SRCS})\n  target_link_libraries(flatbuffers_shared PRIVATE $<BUILD_INTERFACE:ProjectConfig>)\n  # FlatBuffers use calendar-based versioning and do not provide any ABI\n  # stability guarantees. Therefore, always use the full version as SOVERSION\n  # in order to avoid breaking reverse dependencies on upgrades.\n  set(FlatBuffers_Library_SONAME_FULL \"${PROJECT_VERSION}\")\n  set_target_properties(flatbuffers_shared PROPERTIES\n                        OUTPUT_NAME flatbuffers\n                        SOVERSION \"${FlatBuffers_Library_SONAME_FULL}\"\n                        VERSION \"${FlatBuffers_Library_SONAME_FULL}\")\n  if(FLATBUFFERS_ENABLE_PCH)\n    add_pch_to_target(flatbuffers_shared include/flatbuffers/pch/pch.h)\n  endif()\nendif()\n\nfunction(compile_schema SRC_FBS OPT OUT_GEN_FILE) \n  get_filename_component(SRC_FBS_DIR ${SRC_FBS} PATH)\n  string(REGEX REPLACE \"\\\\.fbs$\" \"_generated.h\" GEN_HEADER ${SRC_FBS})\n  add_custom_command(\n    OUTPUT ${GEN_HEADER}\n    COMMAND \"${FLATBUFFERS_FLATC_EXECUTABLE}\"\n      ${OPT}\n      -o \"${SRC_FBS_DIR}\"\n      \"${CMAKE_CURRENT_SOURCE_DIR}/${SRC_FBS}\"\n    DEPENDS flatc ${SRC_FBS}\n    COMMENT \"flatc generation: `${SRC_FBS}` -> `${GEN_HEADER}`\"\n    )\n  set(${OUT_GEN_FILE} ${GEN_HEADER} PARENT_SCOPE)\nendfunction()\n\nfunction(compile_schema_for_test SRC_FBS OPT)\n  compile_schema(\"${SRC_FBS}\" \"${OPT}\" GEN_FILE)\n  target_sources(flattests PRIVATE ${GEN_FILE})\nendfunction()\n\nfunction(compile_schema_for_samples SRC_FBS OPT)\n  compile_schema(\"${SRC_FBS}\" \"${OPT}\" GEN_FILE)\n  target_sources(flatsample PRIVATE ${GEN_FILE})\nendfunction()\n\nif(FLATBUFFERS_BUILD_TESTS)\n  add_executable(flattests ${FlatBuffers_Tests_SRCS})\n  target_link_libraries(flattests PRIVATE $<BUILD_INTERFACE:ProjectConfig>)\n  target_include_directories(flattests PUBLIC \n    # Ideally everything is fully qualified from the root directories\n    ${CMAKE_CURRENT_SOURCE_DIR}\n    ${CMAKE_CURRENT_BINARY_DIR}\n    # TODO(derekbailey): update includes to fully qualify src/ and tests/\n    src \n    tests \n    ${CMAKE_CURRENT_BINARY_DIR}/tests \n  )\n\n  # Have tests load data from the source directory, not the build directory.\n  add_definitions(-DFLATBUFFERS_TEST_PATH_PREFIX=${CMAKE_CURRENT_SOURCE_DIR}/)\n\n  # The flattest target needs some generated files\n  SET(FLATC_OPT --cpp --gen-mutable --gen-object-api --reflect-names)\n  SET(FLATC_OPT_COMP ${FLATC_OPT};--gen-compare)\n  SET(FLATC_OPT_SCOPED_ENUMS ${FLATC_OPT_COMP};--scoped-enums)\n\n  compile_schema_for_test(tests/alignment_test.fbs \"${FLATC_OPT_COMP}\")\n  compile_schema_for_test(tests/arrays_test.fbs \"${FLATC_OPT_SCOPED_ENUMS}\")\n  compile_schema_for_test(tests/native_inline_table_test.fbs \"${FLATC_OPT_COMP}\")\n  compile_schema_for_test(tests/native_type_test.fbs \"${FLATC_OPT}\")\n  compile_schema_for_test(tests/key_field/key_field_sample.fbs \"${FLATC_OPT_COMP}\")\n  compile_schema_for_test(tests/64bit/test_64bit.fbs \"${FLATC_OPT_COMP};--bfbs-gen-embed\")\n  compile_schema_for_test(tests/64bit/evolution/v1.fbs \"${FLATC_OPT_COMP}\")\n  compile_schema_for_test(tests/64bit/evolution/v2.fbs \"${FLATC_OPT_COMP}\")\n  compile_schema_for_test(tests/union_underlying_type_test.fbs \"${FLATC_OPT_SCOPED_ENUMS}\")\n\n  if(FLATBUFFERS_CODE_SANITIZE)\n    add_fsanitize_to_target(flattests ${FLATBUFFERS_CODE_SANITIZE})\n  endif()\n  \n  include_directories(${CMAKE_CURRENT_BINARY_DIR}/samples)\n\n  add_executable(flatsamplebinary ${FlatBuffers_Sample_Binary_SRCS})\n  add_executable(flatsampletext ${FlatBuffers_Sample_Text_SRCS})\n  add_executable(flatsamplebfbs ${FlatBuffers_Sample_BFBS_SRCS})\n\n  # Add a library so there is a single target that the generated samples can \n  # link too.\n  if(MSVC OR ${CMAKE_VERSION} VERSION_GREATER_EQUAL \"3.20.0\")\n    add_library(flatsample INTERFACE)\n  else()\n    add_library(flatsample STATIC)\n  endif()\n\n  # Since flatsample has no sources, we have to explicitly set the linker lang.\n  set_target_properties(flatsample PROPERTIES LINKER_LANGUAGE CXX)\n  \n  compile_schema_for_samples(samples/monster.fbs \"${FLATC_OPT_COMP}\")\n\n  target_link_libraries(flatsamplebinary PRIVATE $<BUILD_INTERFACE:ProjectConfig> flatsample)\n  target_link_libraries(flatsampletext PRIVATE $<BUILD_INTERFACE:ProjectConfig> flatsample)\n  target_link_libraries(flatsamplebfbs PRIVATE $<BUILD_INTERFACE:ProjectConfig> flatsample)\n\n  if(FLATBUFFERS_BUILD_CPP17)\n    add_executable(flattests_cpp17 ${FlatBuffers_Tests_CPP17_SRCS})\n    target_link_libraries(flattests_cpp17 PRIVATE $<BUILD_INTERFACE:ProjectConfig>)\n    target_include_directories(flattests_cpp17 PUBLIC src tests)\n    target_compile_features(flattests_cpp17 PRIVATE cxx_std_17) # requires cmake 3.8\n\n    if(FLATBUFFERS_CODE_SANITIZE)\n      add_fsanitize_to_target(flattests_cpp17 ${FLATBUFFERS_CODE_SANITIZE})\n    endif()\n  endif(FLATBUFFERS_BUILD_CPP17)\nendif()\n\nif(FLATBUFFERS_BUILD_GRPCTEST)\n  if(NOT GRPC_INSTALL_PATH)\n    message(SEND_ERROR \"GRPC_INSTALL_PATH variable is not defined. See grpc/README.md\")\n  endif()\n  if(NOT PROTOBUF_DOWNLOAD_PATH)\n    message(SEND_ERROR \"PROTOBUF_DOWNLOAD_PATH variable is not defined. See grpc/README.md\")\n  endif()\n  INCLUDE_DIRECTORIES(${GRPC_INSTALL_PATH}/include)\n  INCLUDE_DIRECTORIES(${PROTOBUF_DOWNLOAD_PATH}/src)\n  find_package(Threads REQUIRED)\n  list(APPEND CMAKE_PREFIX_PATH ${GRPC_INSTALL_PATH})\n  find_package(absl CONFIG REQUIRED)\n  find_package(protobuf CONFIG REQUIRED)\n  find_package(gRPC CONFIG REQUIRED)\n  add_executable(grpctest ${FlatBuffers_GRPCTest_SRCS})\n  target_link_libraries(grpctest\n    PRIVATE\n      $<BUILD_INTERFACE:ProjectConfig>\n      gRPC::grpc++_unsecure\n      gRPC::gpr\n      pthread\n      dl\n  )\nendif()\n\nif(FLATBUFFERS_INSTALL)\n  include(GNUInstallDirs)\n\n  install(DIRECTORY include/flatbuffers DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n\n  set(FB_CMAKE_DIR \"${CMAKE_INSTALL_LIBDIR}/cmake/flatbuffers\")\n\n  configure_file(CMake/flatbuffers-config-version.cmake.in flatbuffers-config-version.cmake @ONLY)\n  install(\n      FILES\n        \"CMake/flatbuffers-config.cmake\"\n        \"CMake/BuildFlatBuffers.cmake\"\n        \"${CMAKE_CURRENT_BINARY_DIR}/flatbuffers-config-version.cmake\"\n      DESTINATION ${FB_CMAKE_DIR}\n  )\n\n  if(FLATBUFFERS_BUILD_FLATLIB)\n    install(\n      TARGETS flatbuffers EXPORT FlatBuffersTargets\n      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n    )\n\n    install(EXPORT FlatBuffersTargets\n      FILE FlatBuffersTargets.cmake\n      NAMESPACE flatbuffers::\n      DESTINATION ${FB_CMAKE_DIR}\n    )\n  endif()\n\n  if(FLATBUFFERS_BUILD_FLATC)\n    install(\n      TARGETS flatc EXPORT FlatcTargets\n      RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n    )\n\n    install(\n      EXPORT FlatcTargets\n      FILE FlatcTargets.cmake\n      NAMESPACE flatbuffers::\n      DESTINATION ${FB_CMAKE_DIR}\n    )\n  endif()\n\n  if(FLATBUFFERS_BUILD_SHAREDLIB)\n    install(\n      TARGETS flatbuffers_shared EXPORT FlatBuffersSharedTargets\n      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n      RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR}\n      LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n    )\n\n    install(\n      EXPORT FlatBuffersSharedTargets\n      FILE FlatBuffersSharedTargets.cmake\n      NAMESPACE flatbuffers::\n      DESTINATION ${FB_CMAKE_DIR}\n    )\n  endif()\n\n  if(FLATBUFFERS_BUILD_SHAREDLIB OR FLATBUFFERS_BUILD_FLATLIB)\n      configure_file(CMake/flatbuffers.pc.in flatbuffers.pc @ONLY)\n      install(\n        FILES \"${CMAKE_CURRENT_BINARY_DIR}/flatbuffers.pc\"\n        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig\n      )\n  endif()\nendif()\n\nif(FLATBUFFERS_BUILD_TESTS)\n  enable_testing()\n\n  add_test(NAME flattests COMMAND flattests)\n  if(FLATBUFFERS_BUILD_CPP17)\n    add_test(NAME flattests_cpp17 COMMAND flattests_cpp17)\n  endif()\n  if(FLATBUFFERS_BUILD_GRPCTEST)\n    add_test(NAME grpctest COMMAND grpctest)\n  endif()\nendif()\n\ninclude(CMake/BuildFlatBuffers.cmake)\n\nif(UNIX)\n    # Use of CPack only supported on Linux systems.\n    if(FLATBUFFERS_PACKAGE_DEBIAN)\n        include(CMake/PackageDebian.cmake)\n        include(CPack)\n    endif()\n    if (FLATBUFFERS_PACKAGE_REDHAT)\n        include(CMake/PackageRedhat.cmake)\n        include(CPack)\n    endif()\nendif()\n\n# Include for running Google Benchmarks.\nif(FLATBUFFERS_BUILD_BENCHMARKS)\n  add_subdirectory(benchmarks)\nendif()\n\n# Add FlatBuffers::FlatBuffers interface, needed for FetchContent_Declare\nadd_library(FlatBuffers INTERFACE)\nadd_library(FlatBuffers::FlatBuffers ALIAS FlatBuffers)\ntarget_include_directories(\n  FlatBuffers\n  INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\n            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/include>)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.189453125,
          "content": "Contributing    {#contributing}\n============\n\nWant to contribute? Great! First, read this page (including the small print at\nthe end).\n\n# Before you contribute\nBefore we can use your code, you must sign the\n[Google Individual Contributor License Agreement](https://developers.google.com/open-source/cla/individual?csw=1)\n(CLA), which you can do online. The CLA is necessary mainly because you own the\ncopyright to your changes, even after your contribution becomes part of our\ncodebase, so we need your permission to use and distribute your code. We also\nneed to be sure of various other things—for instance that you'll tell us if you\nknow that your code infringes on other people's patents. You don't have to sign\nthe CLA until after you've submitted your code for review and a member has\napproved it, but you must do it before we can put your code into our codebase.\nBefore you start working on a larger contribution, you should get in touch with\nus first through the issue tracker with your idea so that we can help out and\npossibly guide you. Coordinating up front makes it much easier to avoid\nfrustration later on.\n\n# Code reviews\nAll submissions, including submissions by project members, require review. We\nuse Github pull requests for this purpose.\n\nSome tips for good pull requests:\n* Use our code\n  [style guide](https://google.github.io/styleguide/cppguide.html).\n  When in doubt, try to stay true to the existing code of the project.\n* Write a descriptive commit message. What problem are you solving and what\n  are the consequences? Where and what did you test? Some good tips:\n  [here](http://robots.thoughtbot.com/5-useful-tips-for-a-better-commit-message)\n  and [here](https://www.kernel.org/doc/Documentation/SubmittingPatches).\n* If your PR consists of multiple commits which are successive improvements /\n  fixes to your first commit, consider squashing them into a single commit\n  (`git rebase -i`) such that your PR is a single commit on top of the current\n  HEAD. This make reviewing the code so much easier, and our history more\n  readable.\n\n# The small print\nContributions made by corporations are covered by a different agreement than\nthe one above, the Software Grant and Corporate Contributor License Agreement.\n"
        },
        {
          "name": "FlatBuffers.podspec",
          "type": "blob",
          "size": 0.9775390625,
          "content": "Pod::Spec.new do |s|\n  s.name             = 'FlatBuffers'\n  s.version          = '24.12.23'\n  s.summary          = 'FlatBuffers: Memory Efficient Serialization Library'\n\n  s.description      = \"FlatBuffers is a cross platform serialization library architected for\n  maximum memory efficiency. It allows you to directly access serialized\n  data without parsing/unpacking it first, while still having great \n  forwards/backwards compatibility.\"\n\n  s.homepage         = 'https://github.com/google/flatbuffers'\n  s.license          = { :type => 'Apache2.0', :file => 'LICENSE' }\n  s.author           = { 'mustii' => 'me@mustiikhalil.se' }\n  s.source           = { :git => 'https://github.com/google/flatbuffers.git', :tag => \"v\" + s.version.to_s, :submodules => true }\n\n  s.ios.deployment_target = '11.0'\n  s.osx.deployment_target = '10.14'\n\n  s.swift_version = '5.0'\n  s.source_files = 'swift/Sources/Flatbuffers/*.swift'\n  s.pod_target_xcconfig = {\n    'BUILD_LIBRARY_FOR_DISTRIBUTION' => 'YES'\n  }\nend\n"
        },
        {
          "name": "Formatters.md",
          "type": "blob",
          "size": 1.1015625,
          "content": "# Format Guidelines\n\nIf you are interesting in contributing to the flatbuffers project, please take a second to read this document. Each language has it's own set of rules, that are defined in their respective formatter/linter documents.\n\n# Notes\n\n- Run the linter on the language you are working on before making a Pull Request.\n- DONT format/lint the generated code.\n\n# Languages\n\n## C++\n\nC++ uses `clang-format` as it's formatter. Run the following script `sh scripts/clang-format-git.sh`, and it should style the C++ code according to [google style guide](https://google.github.io/styleguide/cppguide.html).\n\n## Swift\n\nSwift uses swiftformat as it's formatter. Take a look at [how to install here](https://github.com/nicklockwood/SwiftFormat/blob/master/README.md#how-do-i-install-it). Run the following command `swiftformat --config swift.swiftformat .` in the root directory of the project\n\n## Typescript\n\nTypescript uses eslint as it's linter. Take a look at [how to install here](https://eslint.org/docs/user-guide/getting-started). Run the following command `eslint ts/** --ext .ts` in the root directory of the project"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 0.3896484375,
          "content": "###############################################################################\n# Bazel now uses Bzlmod by default to manage external dependencies.\n# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.\n#\n# For more details, please check https://github.com/bazelbuild/bazel/issues/18958\n###############################################################################\n"
        },
        {
          "name": "MODULE.bazel.lock",
          "type": "blob",
          "size": 141.71484375,
          "content": "{\n  \"lockFileVersion\": 6,\n  \"moduleFileHash\": \"0e3e315145ac7ee7a4e0ac825e1c5e03c068ec1254dd42c3caaecb27e921dc4d\",\n  \"flags\": {\n    \"cmdRegistries\": [\n      \"https://bcr.bazel.build/\"\n    ],\n    \"cmdModuleOverrides\": {},\n    \"allowedYankedVersions\": [],\n    \"envVarAllowedYankedVersions\": \"\",\n    \"ignoreDevDependency\": false,\n    \"directDependenciesMode\": \"WARNING\",\n    \"compatibilityMode\": \"ERROR\"\n  },\n  \"localOverrideHashes\": {\n    \"bazel_tools\": \"1ae69322ac3823527337acf02016e8ee95813d8d356f47060255b8956fa642f0\"\n  },\n  \"moduleDepGraph\": {\n    \"<root>\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"key\": \"<root>\",\n      \"repoName\": \"\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      }\n    },\n    \"bazel_tools@_\": {\n      \"name\": \"bazel_tools\",\n      \"version\": \"\",\n      \"key\": \"bazel_tools@_\",\n      \"repoName\": \"bazel_tools\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [\n        \"@local_config_cc_toolchains//:all\",\n        \"@local_config_sh//:local_sh_toolchain\"\n      ],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@bazel_tools//tools/cpp:cc_configure.bzl\",\n          \"extensionName\": \"cc_configure_extension\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 18,\n            \"column\": 29\n          },\n          \"imports\": {\n            \"local_config_cc\": \"local_config_cc\",\n            \"local_config_cc_toolchains\": \"local_config_cc_toolchains\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@bazel_tools//tools/osx:xcode_configure.bzl\",\n          \"extensionName\": \"xcode_configure_extension\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 22,\n            \"column\": 32\n          },\n          \"imports\": {\n            \"local_config_xcode\": \"local_config_xcode\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@rules_java//java:extensions.bzl\",\n          \"extensionName\": \"toolchains\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 25,\n            \"column\": 32\n          },\n          \"imports\": {\n            \"local_jdk\": \"local_jdk\",\n            \"remote_java_tools\": \"remote_java_tools\",\n            \"remote_java_tools_linux\": \"remote_java_tools_linux\",\n            \"remote_java_tools_windows\": \"remote_java_tools_windows\",\n            \"remote_java_tools_darwin_x86_64\": \"remote_java_tools_darwin_x86_64\",\n            \"remote_java_tools_darwin_arm64\": \"remote_java_tools_darwin_arm64\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@bazel_tools//tools/sh:sh_configure.bzl\",\n          \"extensionName\": \"sh_configure_extension\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 36,\n            \"column\": 39\n          },\n          \"imports\": {\n            \"local_config_sh\": \"local_config_sh\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@bazel_tools//tools/test:extensions.bzl\",\n          \"extensionName\": \"remote_coverage_tools_extension\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 40,\n            \"column\": 48\n          },\n          \"imports\": {\n            \"remote_coverage_tools\": \"remote_coverage_tools\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@bazel_tools//tools/android:android_extensions.bzl\",\n          \"extensionName\": \"remote_android_tools_extensions\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 43,\n            \"column\": 42\n          },\n          \"imports\": {\n            \"android_gmaven_r8\": \"android_gmaven_r8\",\n            \"android_tools\": \"android_tools\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@buildozer//:buildozer_binary.bzl\",\n          \"extensionName\": \"buildozer_binary\",\n          \"usingModule\": \"bazel_tools@_\",\n          \"location\": {\n            \"file\": \"@@bazel_tools//:MODULE.bazel\",\n            \"line\": 47,\n            \"column\": 33\n          },\n          \"imports\": {\n            \"buildozer_binary\": \"buildozer_binary\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"rules_java\": \"rules_java@7.4.0\",\n        \"rules_license\": \"rules_license@0.0.7\",\n        \"rules_proto\": \"rules_proto@5.3.0-21.7\",\n        \"rules_python\": \"rules_python@0.22.1\",\n        \"buildozer\": \"buildozer@6.4.0.2\",\n        \"platforms\": \"platforms@0.0.7\",\n        \"com_google_protobuf\": \"protobuf@21.7\",\n        \"zlib\": \"zlib@1.3\",\n        \"build_bazel_apple_support\": \"apple_support@1.5.0\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      }\n    },\n    \"local_config_platform@_\": {\n      \"name\": \"local_config_platform\",\n      \"version\": \"\",\n      \"key\": \"local_config_platform@_\",\n      \"repoName\": \"local_config_platform\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\"\n      }\n    },\n    \"rules_cc@0.0.9\": {\n      \"name\": \"rules_cc\",\n      \"version\": \"0.0.9\",\n      \"key\": \"rules_cc@0.0.9\",\n      \"repoName\": \"rules_cc\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [\n        \"@local_config_cc_toolchains//:all\"\n      ],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@bazel_tools//tools/cpp:cc_configure.bzl\",\n          \"extensionName\": \"cc_configure_extension\",\n          \"usingModule\": \"rules_cc@0.0.9\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel\",\n            \"line\": 9,\n            \"column\": 29\n          },\n          \"imports\": {\n            \"local_config_cc_toolchains\": \"local_config_cc_toolchains\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_cc/releases/download/0.0.9/rules_cc-0.0.9.tar.gz\"\n          ],\n          \"integrity\": \"sha256-IDeHW5pEVtzkp50RKorohbvEqtlo5lh9ym5k86CQDN8=\",\n          \"strip_prefix\": \"rules_cc-0.0.9\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/rules_cc/0.0.9/patches/module_dot_bazel_version.patch\": \"sha256-mM+qzOI0SgAdaJBlWOSMwMPKpaA9b7R37Hj/tp5bb4g=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"rules_java@7.4.0\": {\n      \"name\": \"rules_java\",\n      \"version\": \"7.4.0\",\n      \"key\": \"rules_java@7.4.0\",\n      \"repoName\": \"rules_java\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [\n        \"//toolchains:all\",\n        \"@local_jdk//:runtime_toolchain_definition\",\n        \"@local_jdk//:bootstrap_runtime_toolchain_definition\",\n        \"@remotejdk11_linux_toolchain_config_repo//:all\",\n        \"@remotejdk11_linux_aarch64_toolchain_config_repo//:all\",\n        \"@remotejdk11_linux_ppc64le_toolchain_config_repo//:all\",\n        \"@remotejdk11_linux_s390x_toolchain_config_repo//:all\",\n        \"@remotejdk11_macos_toolchain_config_repo//:all\",\n        \"@remotejdk11_macos_aarch64_toolchain_config_repo//:all\",\n        \"@remotejdk11_win_toolchain_config_repo//:all\",\n        \"@remotejdk11_win_arm64_toolchain_config_repo//:all\",\n        \"@remotejdk17_linux_toolchain_config_repo//:all\",\n        \"@remotejdk17_linux_aarch64_toolchain_config_repo//:all\",\n        \"@remotejdk17_linux_ppc64le_toolchain_config_repo//:all\",\n        \"@remotejdk17_linux_s390x_toolchain_config_repo//:all\",\n        \"@remotejdk17_macos_toolchain_config_repo//:all\",\n        \"@remotejdk17_macos_aarch64_toolchain_config_repo//:all\",\n        \"@remotejdk17_win_toolchain_config_repo//:all\",\n        \"@remotejdk17_win_arm64_toolchain_config_repo//:all\",\n        \"@remotejdk21_linux_toolchain_config_repo//:all\",\n        \"@remotejdk21_linux_aarch64_toolchain_config_repo//:all\",\n        \"@remotejdk21_macos_toolchain_config_repo//:all\",\n        \"@remotejdk21_macos_aarch64_toolchain_config_repo//:all\",\n        \"@remotejdk21_win_toolchain_config_repo//:all\"\n      ],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@rules_java//java:extensions.bzl\",\n          \"extensionName\": \"toolchains\",\n          \"usingModule\": \"rules_java@7.4.0\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/rules_java/7.4.0/MODULE.bazel\",\n            \"line\": 19,\n            \"column\": 27\n          },\n          \"imports\": {\n            \"remote_java_tools\": \"remote_java_tools\",\n            \"remote_java_tools_linux\": \"remote_java_tools_linux\",\n            \"remote_java_tools_windows\": \"remote_java_tools_windows\",\n            \"remote_java_tools_darwin_x86_64\": \"remote_java_tools_darwin_x86_64\",\n            \"remote_java_tools_darwin_arm64\": \"remote_java_tools_darwin_arm64\",\n            \"local_jdk\": \"local_jdk\",\n            \"remotejdk11_linux_toolchain_config_repo\": \"remotejdk11_linux_toolchain_config_repo\",\n            \"remotejdk11_linux_aarch64_toolchain_config_repo\": \"remotejdk11_linux_aarch64_toolchain_config_repo\",\n            \"remotejdk11_linux_ppc64le_toolchain_config_repo\": \"remotejdk11_linux_ppc64le_toolchain_config_repo\",\n            \"remotejdk11_linux_s390x_toolchain_config_repo\": \"remotejdk11_linux_s390x_toolchain_config_repo\",\n            \"remotejdk11_macos_toolchain_config_repo\": \"remotejdk11_macos_toolchain_config_repo\",\n            \"remotejdk11_macos_aarch64_toolchain_config_repo\": \"remotejdk11_macos_aarch64_toolchain_config_repo\",\n            \"remotejdk11_win_toolchain_config_repo\": \"remotejdk11_win_toolchain_config_repo\",\n            \"remotejdk11_win_arm64_toolchain_config_repo\": \"remotejdk11_win_arm64_toolchain_config_repo\",\n            \"remotejdk17_linux_toolchain_config_repo\": \"remotejdk17_linux_toolchain_config_repo\",\n            \"remotejdk17_linux_aarch64_toolchain_config_repo\": \"remotejdk17_linux_aarch64_toolchain_config_repo\",\n            \"remotejdk17_linux_ppc64le_toolchain_config_repo\": \"remotejdk17_linux_ppc64le_toolchain_config_repo\",\n            \"remotejdk17_linux_s390x_toolchain_config_repo\": \"remotejdk17_linux_s390x_toolchain_config_repo\",\n            \"remotejdk17_macos_toolchain_config_repo\": \"remotejdk17_macos_toolchain_config_repo\",\n            \"remotejdk17_macos_aarch64_toolchain_config_repo\": \"remotejdk17_macos_aarch64_toolchain_config_repo\",\n            \"remotejdk17_win_toolchain_config_repo\": \"remotejdk17_win_toolchain_config_repo\",\n            \"remotejdk17_win_arm64_toolchain_config_repo\": \"remotejdk17_win_arm64_toolchain_config_repo\",\n            \"remotejdk21_linux_toolchain_config_repo\": \"remotejdk21_linux_toolchain_config_repo\",\n            \"remotejdk21_linux_aarch64_toolchain_config_repo\": \"remotejdk21_linux_aarch64_toolchain_config_repo\",\n            \"remotejdk21_macos_toolchain_config_repo\": \"remotejdk21_macos_toolchain_config_repo\",\n            \"remotejdk21_macos_aarch64_toolchain_config_repo\": \"remotejdk21_macos_aarch64_toolchain_config_repo\",\n            \"remotejdk21_win_toolchain_config_repo\": \"remotejdk21_win_toolchain_config_repo\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"platforms\": \"platforms@0.0.7\",\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"rules_proto\": \"rules_proto@5.3.0-21.7\",\n        \"rules_license\": \"rules_license@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_java/releases/download/7.4.0/rules_java-7.4.0.tar.gz\"\n          ],\n          \"integrity\": \"sha256-l27wi0nJKXQfIBeQ5Z44B8cq2B9CjIvJU82+/1/tFes=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"rules_license@0.0.7\": {\n      \"name\": \"rules_license\",\n      \"version\": \"0.0.7\",\n      \"key\": \"rules_license@0.0.7\",\n      \"repoName\": \"rules_license\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_license/releases/download/0.0.7/rules_license-0.0.7.tar.gz\"\n          ],\n          \"integrity\": \"sha256-RTHezLkTY5ww5cdRKgVNXYdWmNrrddjPkPKEN1/nw2A=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"rules_proto@5.3.0-21.7\": {\n      \"name\": \"rules_proto\",\n      \"version\": \"5.3.0-21.7\",\n      \"key\": \"rules_proto@5.3.0-21.7\",\n      \"repoName\": \"rules_proto\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"com_google_protobuf\": \"protobuf@21.7\",\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_proto/archive/refs/tags/5.3.0-21.7.tar.gz\"\n          ],\n          \"integrity\": \"sha256-3D+yBqLLNEG0heseQjFlsjEjWh6psDG0Qzz3vB+kYN0=\",\n          \"strip_prefix\": \"rules_proto-5.3.0-21.7\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"rules_python@0.22.1\": {\n      \"name\": \"rules_python\",\n      \"version\": \"0.22.1\",\n      \"key\": \"rules_python@0.22.1\",\n      \"repoName\": \"rules_python\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [\n        \"@bazel_tools//tools/python:autodetecting_toolchain\"\n      ],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@rules_python//python/extensions/private:internal_deps.bzl\",\n          \"extensionName\": \"internal_deps\",\n          \"usingModule\": \"rules_python@0.22.1\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/rules_python/0.22.1/MODULE.bazel\",\n            \"line\": 14,\n            \"column\": 30\n          },\n          \"imports\": {\n            \"pypi__build\": \"pypi__build\",\n            \"pypi__click\": \"pypi__click\",\n            \"pypi__colorama\": \"pypi__colorama\",\n            \"pypi__importlib_metadata\": \"pypi__importlib_metadata\",\n            \"pypi__installer\": \"pypi__installer\",\n            \"pypi__more_itertools\": \"pypi__more_itertools\",\n            \"pypi__packaging\": \"pypi__packaging\",\n            \"pypi__pep517\": \"pypi__pep517\",\n            \"pypi__pip\": \"pypi__pip\",\n            \"pypi__pip_tools\": \"pypi__pip_tools\",\n            \"pypi__setuptools\": \"pypi__setuptools\",\n            \"pypi__tomli\": \"pypi__tomli\",\n            \"pypi__wheel\": \"pypi__wheel\",\n            \"pypi__zipp\": \"pypi__zipp\",\n            \"pypi__coverage_cp310_aarch64-apple-darwin\": \"pypi__coverage_cp310_aarch64-apple-darwin\",\n            \"pypi__coverage_cp310_aarch64-unknown-linux-gnu\": \"pypi__coverage_cp310_aarch64-unknown-linux-gnu\",\n            \"pypi__coverage_cp310_x86_64-apple-darwin\": \"pypi__coverage_cp310_x86_64-apple-darwin\",\n            \"pypi__coverage_cp310_x86_64-unknown-linux-gnu\": \"pypi__coverage_cp310_x86_64-unknown-linux-gnu\",\n            \"pypi__coverage_cp311_aarch64-unknown-linux-gnu\": \"pypi__coverage_cp311_aarch64-unknown-linux-gnu\",\n            \"pypi__coverage_cp311_x86_64-apple-darwin\": \"pypi__coverage_cp311_x86_64-apple-darwin\",\n            \"pypi__coverage_cp311_x86_64-unknown-linux-gnu\": \"pypi__coverage_cp311_x86_64-unknown-linux-gnu\",\n            \"pypi__coverage_cp38_aarch64-apple-darwin\": \"pypi__coverage_cp38_aarch64-apple-darwin\",\n            \"pypi__coverage_cp38_aarch64-unknown-linux-gnu\": \"pypi__coverage_cp38_aarch64-unknown-linux-gnu\",\n            \"pypi__coverage_cp38_x86_64-apple-darwin\": \"pypi__coverage_cp38_x86_64-apple-darwin\",\n            \"pypi__coverage_cp38_x86_64-unknown-linux-gnu\": \"pypi__coverage_cp38_x86_64-unknown-linux-gnu\",\n            \"pypi__coverage_cp39_aarch64-apple-darwin\": \"pypi__coverage_cp39_aarch64-apple-darwin\",\n            \"pypi__coverage_cp39_aarch64-unknown-linux-gnu\": \"pypi__coverage_cp39_aarch64-unknown-linux-gnu\",\n            \"pypi__coverage_cp39_x86_64-apple-darwin\": \"pypi__coverage_cp39_x86_64-apple-darwin\",\n            \"pypi__coverage_cp39_x86_64-unknown-linux-gnu\": \"pypi__coverage_cp39_x86_64-unknown-linux-gnu\"\n          },\n          \"devImports\": [],\n          \"tags\": [\n            {\n              \"tagName\": \"install\",\n              \"attributeValues\": {},\n              \"devDependency\": false,\n              \"location\": {\n                \"file\": \"https://bcr.bazel.build/modules/rules_python/0.22.1/MODULE.bazel\",\n                \"line\": 15,\n                \"column\": 22\n              }\n            }\n          ],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@rules_python//python/extensions:python.bzl\",\n          \"extensionName\": \"python\",\n          \"usingModule\": \"rules_python@0.22.1\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/rules_python/0.22.1/MODULE.bazel\",\n            \"line\": 50,\n            \"column\": 23\n          },\n          \"imports\": {\n            \"pythons_hub\": \"pythons_hub\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"rules_proto\": \"rules_proto@5.3.0-21.7\",\n        \"com_google_protobuf\": \"protobuf@21.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_python/releases/download/0.22.1/rules_python-0.22.1.tar.gz\"\n          ],\n          \"integrity\": \"sha256-pWQP3dS+sD6MH95e1xYMC6a9R359BIZhwwwGk2om/WM=\",\n          \"strip_prefix\": \"rules_python-0.22.1\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/rules_python/0.22.1/patches/module_dot_bazel_version.patch\": \"sha256-3+VLDH9gYDzNI4eOW7mABC/LKxh1xqF6NhacLbNTucs=\"\n          },\n          \"remote_patch_strip\": 1\n        }\n      }\n    },\n    \"buildozer@6.4.0.2\": {\n      \"name\": \"buildozer\",\n      \"version\": \"6.4.0.2\",\n      \"key\": \"buildozer@6.4.0.2\",\n      \"repoName\": \"buildozer\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@buildozer//:buildozer_binary.bzl\",\n          \"extensionName\": \"buildozer_binary\",\n          \"usingModule\": \"buildozer@6.4.0.2\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/buildozer/6.4.0.2/MODULE.bazel\",\n            \"line\": 7,\n            \"column\": 33\n          },\n          \"imports\": {\n            \"buildozer_binary\": \"buildozer_binary\"\n          },\n          \"devImports\": [],\n          \"tags\": [\n            {\n              \"tagName\": \"buildozer\",\n              \"attributeValues\": {\n                \"sha256\": {\n                  \"darwin-amd64\": \"d29e347ecd6b5673d72cb1a8de05bf1b06178dd229ff5eb67fad5100c840cc8e\",\n                  \"darwin-arm64\": \"9b9e71bdbec5e7223871e913b65d12f6d8fa026684daf991f00e52ed36a6978d\",\n                  \"linux-amd64\": \"8dfd6345da4e9042daa738d7fdf34f699c5dfce4632f7207956fceedd8494119\",\n                  \"linux-arm64\": \"6559558fded658c8fa7432a9d011f7c4dcbac6b738feae73d2d5c352e5f605fa\",\n                  \"windows-amd64\": \"e7f05bf847f7c3689dd28926460ce6e1097ae97380ac8e6ae7147b7b706ba19b\"\n                },\n                \"version\": \"6.4.0\"\n              },\n              \"devDependency\": false,\n              \"location\": {\n                \"file\": \"https://bcr.bazel.build/modules/buildozer/6.4.0.2/MODULE.bazel\",\n                \"line\": 8,\n                \"column\": 27\n              }\n            }\n          ],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/fmeum/buildozer/releases/download/v6.4.0.2/buildozer-v6.4.0.2.tar.gz\"\n          ],\n          \"integrity\": \"sha256-k7tFKQMR2AygxpmZfH0yEPnQmF3efFgD9rBPkj+Yz/8=\",\n          \"strip_prefix\": \"buildozer-6.4.0.2\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/buildozer/6.4.0.2/patches/module_dot_bazel_version.patch\": \"sha256-gKANF2HMilj7bWmuXs4lbBIAAansuWC4IhWGB/CerjU=\"\n          },\n          \"remote_patch_strip\": 1\n        }\n      }\n    },\n    \"platforms@0.0.7\": {\n      \"name\": \"platforms\",\n      \"version\": \"0.0.7\",\n      \"key\": \"platforms@0.0.7\",\n      \"repoName\": \"platforms\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"rules_license\": \"rules_license@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/platforms/releases/download/0.0.7/platforms-0.0.7.tar.gz\"\n          ],\n          \"integrity\": \"sha256-OlYcmee9vpFzqmU/1Xn+hJ8djWc5V4CrR3Cx84FDHVE=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"protobuf@21.7\": {\n      \"name\": \"protobuf\",\n      \"version\": \"21.7\",\n      \"key\": \"protobuf@21.7\",\n      \"repoName\": \"protobuf\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@rules_jvm_external//:extensions.bzl\",\n          \"extensionName\": \"maven\",\n          \"usingModule\": \"protobuf@21.7\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel\",\n            \"line\": 22,\n            \"column\": 22\n          },\n          \"imports\": {\n            \"maven\": \"maven\"\n          },\n          \"devImports\": [],\n          \"tags\": [\n            {\n              \"tagName\": \"install\",\n              \"attributeValues\": {\n                \"name\": \"maven\",\n                \"artifacts\": [\n                  \"com.google.code.findbugs:jsr305:3.0.2\",\n                  \"com.google.code.gson:gson:2.8.9\",\n                  \"com.google.errorprone:error_prone_annotations:2.3.2\",\n                  \"com.google.j2objc:j2objc-annotations:1.3\",\n                  \"com.google.guava:guava:31.1-jre\",\n                  \"com.google.guava:guava-testlib:31.1-jre\",\n                  \"com.google.truth:truth:1.1.2\",\n                  \"junit:junit:4.13.2\",\n                  \"org.mockito:mockito-core:4.3.1\"\n                ]\n              },\n              \"devDependency\": false,\n              \"location\": {\n                \"file\": \"https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel\",\n                \"line\": 24,\n                \"column\": 14\n              }\n            }\n          ],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"rules_python\": \"rules_python@0.22.1\",\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"rules_proto\": \"rules_proto@5.3.0-21.7\",\n        \"rules_java\": \"rules_java@7.4.0\",\n        \"rules_pkg\": \"rules_pkg@0.7.0\",\n        \"com_google_abseil\": \"abseil-cpp@20211102.0\",\n        \"zlib\": \"zlib@1.3\",\n        \"upb\": \"upb@0.0.0-20220923-a547704\",\n        \"rules_jvm_external\": \"rules_jvm_external@4.4.2\",\n        \"com_google_googletest\": \"googletest@1.11.0\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/protocolbuffers/protobuf/releases/download/v21.7/protobuf-all-21.7.zip\"\n          ],\n          \"integrity\": \"sha256-VJOiH17T/FAuZv7GuUScBqVRztYwAvpIkDxA36jeeko=\",\n          \"strip_prefix\": \"protobuf-21.7\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/protobuf/21.7/patches/add_module_dot_bazel.patch\": \"sha256-q3V2+eq0v2XF0z8z+V+QF4cynD6JvHI1y3kI/+rzl5s=\",\n            \"https://bcr.bazel.build/modules/protobuf/21.7/patches/add_module_dot_bazel_for_examples.patch\": \"sha256-O7YP6s3lo/1opUiO0jqXYORNHdZ/2q3hjz1QGy8QdIU=\",\n            \"https://bcr.bazel.build/modules/protobuf/21.7/patches/relative_repo_names.patch\": \"sha256-RK9RjW8T5UJNG7flIrnFiNE9vKwWB+8uWWtJqXYT0w4=\",\n            \"https://bcr.bazel.build/modules/protobuf/21.7/patches/add_missing_files.patch\": \"sha256-Hyne4DG2u5bXcWHNxNMirA2QFAe/2Cl8oMm1XJdkQIY=\"\n          },\n          \"remote_patch_strip\": 1\n        }\n      }\n    },\n    \"zlib@1.3\": {\n      \"name\": \"zlib\",\n      \"version\": \"1.3\",\n      \"key\": \"zlib@1.3\",\n      \"repoName\": \"zlib\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"platforms\": \"platforms@0.0.7\",\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/madler/zlib/releases/download/v1.3/zlib-1.3.tar.gz\"\n          ],\n          \"integrity\": \"sha256-/wukwpIBPbwnUws6geH5qBPNOd4Byl4Pi/NVcC76WT4=\",\n          \"strip_prefix\": \"zlib-1.3\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/zlib/1.3/patches/add_build_file.patch\": \"sha256-Ei+FYaaOo7A3jTKunMEodTI0Uw5NXQyZEcboMC8JskY=\",\n            \"https://bcr.bazel.build/modules/zlib/1.3/patches/module_dot_bazel.patch\": \"sha256-fPWLM+2xaF/kuy+kZc1YTfW6hNjrkG400Ho7gckuyJk=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"apple_support@1.5.0\": {\n      \"name\": \"apple_support\",\n      \"version\": \"1.5.0\",\n      \"key\": \"apple_support@1.5.0\",\n      \"repoName\": \"build_bazel_apple_support\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [\n        \"@local_config_apple_cc_toolchains//:all\"\n      ],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@build_bazel_apple_support//crosstool:setup.bzl\",\n          \"extensionName\": \"apple_cc_configure_extension\",\n          \"usingModule\": \"apple_support@1.5.0\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/apple_support/1.5.0/MODULE.bazel\",\n            \"line\": 17,\n            \"column\": 35\n          },\n          \"imports\": {\n            \"local_config_apple_cc\": \"local_config_apple_cc\",\n            \"local_config_apple_cc_toolchains\": \"local_config_apple_cc_toolchains\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/apple_support/releases/download/1.5.0/apple_support.1.5.0.tar.gz\"\n          ],\n          \"integrity\": \"sha256-miM41vja0yRPgj8txghKA+TQ+7J8qJLclw5okNW0gYQ=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"bazel_skylib@1.3.0\": {\n      \"name\": \"bazel_skylib\",\n      \"version\": \"1.3.0\",\n      \"key\": \"bazel_skylib@1.3.0\",\n      \"repoName\": \"bazel_skylib\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [\n        \"//toolchains/unittest:cmd_toolchain\",\n        \"//toolchains/unittest:bash_toolchain\"\n      ],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz\"\n          ],\n          \"integrity\": \"sha256-dNVE2W9KW7Yw1GXKi7z+Ix41lOWq5X4e2/F6brPKJQY=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"rules_pkg@0.7.0\": {\n      \"name\": \"rules_pkg\",\n      \"version\": \"0.7.0\",\n      \"key\": \"rules_pkg@0.7.0\",\n      \"repoName\": \"rules_pkg\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"rules_python\": \"rules_python@0.22.1\",\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"rules_license\": \"rules_license@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_pkg/releases/download/0.7.0/rules_pkg-0.7.0.tar.gz\"\n          ],\n          \"integrity\": \"sha256-iimOgydi7aGDBZfWT+fbWBeKqEzVkm121bdE1lWJQcI=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/rules_pkg/0.7.0/patches/module_dot_bazel.patch\": \"sha256-4OaEPZwYF6iC71ZTDg6MJ7LLqX7ZA0/kK4mT+4xKqiE=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"abseil-cpp@20211102.0\": {\n      \"name\": \"abseil-cpp\",\n      \"version\": \"20211102.0\",\n      \"key\": \"abseil-cpp@20211102.0\",\n      \"repoName\": \"abseil-cpp\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/abseil/abseil-cpp/archive/refs/tags/20211102.0.tar.gz\"\n          ],\n          \"integrity\": \"sha256-3PcbnLqNwMqZQMSzFqDHlr6Pq0KwcLtrfKtitI8OZsQ=\",\n          \"strip_prefix\": \"abseil-cpp-20211102.0\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/abseil-cpp/20211102.0/patches/module_dot_bazel.patch\": \"sha256-4izqopgGCey4jVZzl/w3M2GVPNohjh2B5TmbThZNvPY=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"upb@0.0.0-20220923-a547704\": {\n      \"name\": \"upb\",\n      \"version\": \"0.0.0-20220923-a547704\",\n      \"key\": \"upb@0.0.0-20220923-a547704\",\n      \"repoName\": \"upb\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"rules_proto\": \"rules_proto@5.3.0-21.7\",\n        \"com_google_protobuf\": \"protobuf@21.7\",\n        \"com_google_absl\": \"abseil-cpp@20211102.0\",\n        \"platforms\": \"platforms@0.0.7\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/protocolbuffers/upb/archive/a5477045acaa34586420942098f5fecd3570f577.tar.gz\"\n          ],\n          \"integrity\": \"sha256-z39x6v+QskwaKLSWRan/A6mmwecTQpHOcJActj5zZLU=\",\n          \"strip_prefix\": \"upb-a5477045acaa34586420942098f5fecd3570f577\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/patches/module_dot_bazel.patch\": \"sha256-wH4mNS6ZYy+8uC0HoAft/c7SDsq2Kxf+J8dUakXhaB0=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"rules_jvm_external@4.4.2\": {\n      \"name\": \"rules_jvm_external\",\n      \"version\": \"4.4.2\",\n      \"key\": \"rules_jvm_external@4.4.2\",\n      \"repoName\": \"rules_jvm_external\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [\n        {\n          \"extensionBzlFile\": \"@rules_jvm_external//:non-module-deps.bzl\",\n          \"extensionName\": \"non_module_deps\",\n          \"usingModule\": \"rules_jvm_external@4.4.2\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel\",\n            \"line\": 9,\n            \"column\": 32\n          },\n          \"imports\": {\n            \"io_bazel_rules_kotlin\": \"io_bazel_rules_kotlin\"\n          },\n          \"devImports\": [],\n          \"tags\": [],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        },\n        {\n          \"extensionBzlFile\": \"@rules_jvm_external//:extensions.bzl\",\n          \"extensionName\": \"maven\",\n          \"usingModule\": \"rules_jvm_external@4.4.2\",\n          \"location\": {\n            \"file\": \"https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel\",\n            \"line\": 16,\n            \"column\": 22\n          },\n          \"imports\": {\n            \"rules_jvm_external_deps\": \"rules_jvm_external_deps\"\n          },\n          \"devImports\": [],\n          \"tags\": [\n            {\n              \"tagName\": \"install\",\n              \"attributeValues\": {\n                \"name\": \"rules_jvm_external_deps\",\n                \"artifacts\": [\n                  \"com.google.cloud:google-cloud-core:1.93.10\",\n                  \"com.google.cloud:google-cloud-storage:1.113.4\",\n                  \"com.google.code.gson:gson:2.9.0\",\n                  \"org.apache.maven:maven-artifact:3.8.6\",\n                  \"software.amazon.awssdk:s3:2.17.183\"\n                ],\n                \"lock_file\": \"@rules_jvm_external//:rules_jvm_external_deps_install.json\"\n              },\n              \"devDependency\": false,\n              \"location\": {\n                \"file\": \"https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel\",\n                \"line\": 18,\n                \"column\": 14\n              }\n            }\n          ],\n          \"hasDevUseExtension\": false,\n          \"hasNonDevUseExtension\": true\n        }\n      ],\n      \"deps\": {\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"io_bazel_stardoc\": \"stardoc@0.5.1\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/rules_jvm_external/archive/refs/tags/4.4.2.zip\"\n          ],\n          \"integrity\": \"sha256-c1YC9QgT6y6pPKP15DsZWb2AshO4NqB6YqKddXZwt3s=\",\n          \"strip_prefix\": \"rules_jvm_external-4.4.2\",\n          \"remote_patches\": {},\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"googletest@1.11.0\": {\n      \"name\": \"googletest\",\n      \"version\": \"1.11.0\",\n      \"key\": \"googletest@1.11.0\",\n      \"repoName\": \"googletest\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"com_google_absl\": \"abseil-cpp@20211102.0\",\n        \"platforms\": \"platforms@0.0.7\",\n        \"rules_cc\": \"rules_cc@0.0.9\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/google/googletest/archive/refs/tags/release-1.11.0.tar.gz\"\n          ],\n          \"integrity\": \"sha256-tIcL8SH/d5W6INILzdhie44Ijy0dqymaAxwQNO3ck9U=\",\n          \"strip_prefix\": \"googletest-release-1.11.0\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/googletest/1.11.0/patches/module_dot_bazel.patch\": \"sha256-HuahEdI/n8KCI071sN3CEziX+7qP/Ec77IWayYunLP0=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    },\n    \"stardoc@0.5.1\": {\n      \"name\": \"stardoc\",\n      \"version\": \"0.5.1\",\n      \"key\": \"stardoc@0.5.1\",\n      \"repoName\": \"stardoc\",\n      \"executionPlatformsToRegister\": [],\n      \"toolchainsToRegister\": [],\n      \"extensionUsages\": [],\n      \"deps\": {\n        \"bazel_skylib\": \"bazel_skylib@1.3.0\",\n        \"rules_java\": \"rules_java@7.4.0\",\n        \"bazel_tools\": \"bazel_tools@_\",\n        \"local_config_platform\": \"local_config_platform@_\"\n      },\n      \"repoSpec\": {\n        \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n        \"ruleClassName\": \"http_archive\",\n        \"attributes\": {\n          \"urls\": [\n            \"https://github.com/bazelbuild/stardoc/releases/download/0.5.1/stardoc-0.5.1.tar.gz\"\n          ],\n          \"integrity\": \"sha256-qoFNrgrEALurLoiB+ZFcb0fElmS/CHxAmhX5BDjSwj4=\",\n          \"strip_prefix\": \"\",\n          \"remote_patches\": {\n            \"https://bcr.bazel.build/modules/stardoc/0.5.1/patches/module_dot_bazel.patch\": \"sha256-UAULCuTpJE7SG0YrR9XLjMfxMRmbP+za3uW9ONZ5rjI=\"\n          },\n          \"remote_patch_strip\": 0\n        }\n      }\n    }\n  },\n  \"moduleExtensions\": {\n    \"@@apple_support~//crosstool:setup.bzl%apple_cc_configure_extension\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"pMLFCYaRPkgXPQ8vtuNkMfiHfPmRBy6QJfnid4sWfv0=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"local_config_apple_cc\": {\n            \"bzlFile\": \"@@apple_support~//crosstool:setup.bzl\",\n            \"ruleClassName\": \"_apple_cc_autoconf\",\n            \"attributes\": {}\n          },\n          \"local_config_apple_cc_toolchains\": {\n            \"bzlFile\": \"@@apple_support~//crosstool:setup.bzl\",\n            \"ruleClassName\": \"_apple_cc_autoconf_toolchains\",\n            \"attributes\": {}\n          }\n        },\n        \"recordedRepoMappingEntries\": [\n          [\n            \"apple_support~\",\n            \"bazel_tools\",\n            \"bazel_tools\"\n          ]\n        ]\n      }\n    },\n    \"@@bazel_tools//tools/cpp:cc_configure.bzl%cc_configure_extension\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"PHpT2yqMGms2U4L3E/aZ+WcQalmZWm+ILdP3yiLsDhA=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"local_config_cc\": {\n            \"bzlFile\": \"@@bazel_tools//tools/cpp:cc_configure.bzl\",\n            \"ruleClassName\": \"cc_autoconf\",\n            \"attributes\": {}\n          },\n          \"local_config_cc_toolchains\": {\n            \"bzlFile\": \"@@bazel_tools//tools/cpp:cc_configure.bzl\",\n            \"ruleClassName\": \"cc_autoconf_toolchains\",\n            \"attributes\": {}\n          }\n        },\n        \"recordedRepoMappingEntries\": [\n          [\n            \"bazel_tools\",\n            \"bazel_tools\",\n            \"bazel_tools\"\n          ]\n        ]\n      }\n    },\n    \"@@bazel_tools//tools/osx:xcode_configure.bzl%xcode_configure_extension\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"Qh2bWTU6QW6wkrd87qrU4YeY+SG37Nvw3A0PR4Y0L2Y=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"local_config_xcode\": {\n            \"bzlFile\": \"@@bazel_tools//tools/osx:xcode_configure.bzl\",\n            \"ruleClassName\": \"xcode_autoconf\",\n            \"attributes\": {\n              \"xcode_locator\": \"@bazel_tools//tools/osx:xcode_locator.m\",\n              \"remote_xcode\": \"\"\n            }\n          }\n        },\n        \"recordedRepoMappingEntries\": []\n      }\n    },\n    \"@@bazel_tools//tools/sh:sh_configure.bzl%sh_configure_extension\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"hp4NgmNjEg5+xgvzfh6L83bt9/aiiWETuNpwNuF1MSU=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"local_config_sh\": {\n            \"bzlFile\": \"@@bazel_tools//tools/sh:sh_configure.bzl\",\n            \"ruleClassName\": \"sh_config\",\n            \"attributes\": {}\n          }\n        },\n        \"recordedRepoMappingEntries\": []\n      }\n    },\n    \"@@rules_java~//java:extensions.bzl%toolchains\": {\n      \"general\": {\n        \"bzlTransitiveDigest\": \"0N5b5J9fUzo0sgvH4F3kIEaeXunz4Wy2/UtSFV/eXUY=\",\n        \"recordedFileInputs\": {},\n        \"recordedDirentsInputs\": {},\n        \"envVariables\": {},\n        \"generatedRepoSpecs\": {\n          \"remotejdk21_linux_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_linux//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_linux//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_linux_s390x_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:s390x\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux_s390x//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:s390x\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux_s390x//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_macos_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_macos//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_macos//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk21_macos_aarch64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_macos_aarch64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_macos_aarch64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_linux_aarch64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux_aarch64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux_aarch64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk21_macos_aarch64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 21,\\n)\\n\",\n              \"sha256\": \"e8260516de8b60661422a725f1df2c36ef888f6fb35393566b00e7325db3d04e\",\n              \"strip_prefix\": \"zulu21.32.17-ca-jdk21.0.2-macosx_aarch64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_aarch64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_aarch64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk17_linux_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_macos_aarch64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"314b04568ec0ae9b36ba03c9cbd42adc9e1265f74678923b19297d66eb84dcca\",\n              \"strip_prefix\": \"zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz\"\n              ]\n            }\n          },\n          \"remote_java_tools_windows\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"sha256\": \"fe2f88169696d6c6fc6e90ba61bb46be7d0ae3693cbafdf336041bf56679e8d1\",\n              \"urls\": [\n                \"https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_windows-v13.4.zip\",\n                \"https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_windows-v13.4.zip\"\n              ]\n            }\n          },\n          \"remotejdk11_win\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"43408193ce2fa0862819495b5ae8541085b95660153f2adcf91a52d3a1710e83\",\n              \"strip_prefix\": \"zulu11.66.15-ca-jdk11.0.20-win_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip\",\n                \"https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip\"\n              ]\n            }\n          },\n          \"remotejdk11_win_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_win//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_win//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_linux_aarch64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"54174439f2b3fddd11f1048c397fe7bb45d4c9d66d452d6889b013d04d21c4de\",\n              \"strip_prefix\": \"zulu11.66.15-ca-jdk11.0.20-linux_aarch64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk17_linux\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"b9482f2304a1a68a614dfacddcf29569a72f0fac32e6c74f83dc1b9a157b8340\",\n              \"strip_prefix\": \"zulu17.44.53-ca-jdk17.0.8.1-linux_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk11_linux_s390x_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:s390x\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux_s390x//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:s390x\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux_s390x//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_linux_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_macos\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"bcaab11cfe586fae7583c6d9d311c64384354fb2638eb9a012eca4c3f1a1d9fd\",\n              \"strip_prefix\": \"zulu11.66.15-ca-jdk11.0.20-macosx_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk11_win_arm64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"b8a28e6e767d90acf793ea6f5bed0bb595ba0ba5ebdf8b99f395266161e53ec2\",\n              \"strip_prefix\": \"jdk-11.0.13+8\",\n              \"urls\": [\n                \"https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip\"\n              ]\n            }\n          },\n          \"remotejdk17_macos\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"640453e8afe8ffe0fb4dceb4535fb50db9c283c64665eebb0ba68b19e65f4b1f\",\n              \"strip_prefix\": \"zulu17.44.53-ca-jdk17.0.8.1-macosx_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk21_macos\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 21,\\n)\\n\",\n              \"sha256\": \"3ad8fe288eb57d975c2786ae453a036aa46e47ab2ac3d81538ebae2a54d3c025\",\n              \"strip_prefix\": \"zulu21.32.17-ca-jdk21.0.2-macosx_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_x64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-macosx_x64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk21_macos_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_macos//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_macos//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_macos_aarch64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_macos_aarch64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_macos_aarch64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_win\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"192f2afca57701de6ec496234f7e45d971bf623ff66b8ee4a5c81582054e5637\",\n              \"strip_prefix\": \"zulu17.44.53-ca-jdk17.0.8.1-win_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip\",\n                \"https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip\"\n              ]\n            }\n          },\n          \"remotejdk11_macos_aarch64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_macos_aarch64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_macos_aarch64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_linux_ppc64le_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:ppc\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux_ppc64le//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:ppc\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux_ppc64le//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk21_linux\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 21,\\n)\\n\",\n              \"sha256\": \"5ad730fbee6bb49bfff10bf39e84392e728d89103d3474a7e5def0fd134b300a\",\n              \"strip_prefix\": \"zulu21.32.17-ca-jdk21.0.2-linux_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_x64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_x64.tar.gz\"\n              ]\n            }\n          },\n          \"remote_java_tools_linux\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"sha256\": \"ba10f09a138cf185d04cbc807d67a3da42ab13d618c5d1ce20d776e199c33a39\",\n              \"urls\": [\n                \"https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_linux-v13.4.zip\",\n                \"https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_linux-v13.4.zip\"\n              ]\n            }\n          },\n          \"remotejdk21_win\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 21,\\n)\\n\",\n              \"sha256\": \"f7cc15ca17295e69c907402dfe8db240db446e75d3b150da7bf67243cded93de\",\n              \"strip_prefix\": \"zulu21.32.17-ca-jdk21.0.2-win_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-win_x64.zip\",\n                \"https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-win_x64.zip\"\n              ]\n            }\n          },\n          \"remotejdk21_linux_aarch64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 21,\\n)\\n\",\n              \"sha256\": \"ce7df1af5d44a9f455617c4b8891443fbe3e4b269c777d8b82ed66f77167cfe0\",\n              \"strip_prefix\": \"zulu21.32.17-ca-jdk21.0.2-linux_aarch64\",\n              \"urls\": [\n                \"https://cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_aarch64.tar.gz\",\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.32.17-ca-jdk21.0.2-linux_aarch64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk11_linux_aarch64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux_aarch64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_linux_aarch64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_linux_s390x\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"a58fc0361966af0a5d5a31a2d8a208e3c9bb0f54f345596fd80b99ea9a39788b\",\n              \"strip_prefix\": \"jdk-11.0.15+10\",\n              \"urls\": [\n                \"https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz\",\n                \"https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk17_linux_aarch64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"6531cef61e416d5a7b691555c8cf2bdff689201b8a001ff45ab6740062b44313\",\n              \"strip_prefix\": \"zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk17_win_arm64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:arm64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_win_arm64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:arm64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_win_arm64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_linux\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"a34b404f87a08a61148b38e1416d837189e1df7a040d949e743633daf4695a3c\",\n              \"strip_prefix\": \"zulu11.66.15-ca-jdk11.0.20-linux_x64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk11_macos_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_macos//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:macos\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_macos//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_linux_ppc64le_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:ppc\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux_ppc64le//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:ppc\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_linux_ppc64le//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk17_win_arm64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"6802c99eae0d788e21f52d03cab2e2b3bf42bc334ca03cbf19f71eb70ee19f85\",\n              \"strip_prefix\": \"zulu17.44.53-ca-jdk17.0.8.1-win_aarch64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip\",\n                \"https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip\"\n              ]\n            }\n          },\n          \"remote_java_tools_darwin_arm64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"sha256\": \"076a7e198ad077f8c7d997986ef5102427fae6bbfce7a7852d2e080ed8767528\",\n              \"urls\": [\n                \"https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_darwin_arm64-v13.4.zip\",\n                \"https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_darwin_arm64-v13.4.zip\"\n              ]\n            }\n          },\n          \"remotejdk17_linux_ppc64le\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"00a4c07603d0218cd678461b5b3b7e25b3253102da4022d31fc35907f21a2efd\",\n              \"strip_prefix\": \"jdk-17.0.8.1+1\",\n              \"urls\": [\n                \"https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz\",\n                \"https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk21_linux_aarch64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_linux_aarch64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:linux\\\", \\\"@platforms//cpu:aarch64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_linux_aarch64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_win_arm64_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"11\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:arm64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_win_arm64//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:arm64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk11_win_arm64//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"local_jdk\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:local_java_repository.bzl\",\n            \"ruleClassName\": \"_local_java_repository_rule\",\n            \"attributes\": {\n              \"java_home\": \"\",\n              \"version\": \"\",\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = {RUNTIME_VERSION},\\n)\\n\"\n            }\n          },\n          \"remote_java_tools_darwin_x86_64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"sha256\": \"4523aec4d09c587091a2dae6f5c9bc6922c220f3b6030e5aba9c8f015913cc65\",\n              \"urls\": [\n                \"https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools_darwin_x86_64-v13.4.zip\",\n                \"https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools_darwin_x86_64-v13.4.zip\"\n              ]\n            }\n          },\n          \"remote_java_tools\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"sha256\": \"e025fd260ac39b47c111f5212d64ec0d00d85dec16e49368aae82fc626a940cf\",\n              \"urls\": [\n                \"https://mirror.bazel.build/bazel_java_tools/releases/java/v13.4/java_tools-v13.4.zip\",\n                \"https://github.com/bazelbuild/java_tools/releases/download/java_v13.4/java_tools-v13.4.zip\"\n              ]\n            }\n          },\n          \"remotejdk17_linux_s390x\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 17,\\n)\\n\",\n              \"sha256\": \"ffacba69c6843d7ca70d572489d6cc7ab7ae52c60f0852cedf4cf0d248b6fc37\",\n              \"strip_prefix\": \"jdk-17.0.8.1+1\",\n              \"urls\": [\n                \"https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz\",\n                \"https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk17_win_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"17\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_win//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk17_win//:jdk\\\",\\n)\\n\"\n            }\n          },\n          \"remotejdk11_linux_ppc64le\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"a8fba686f6eb8ae1d1a9566821dbd5a85a1108b96ad857fdbac5c1e4649fc56f\",\n              \"strip_prefix\": \"jdk-11.0.15+10\",\n              \"urls\": [\n                \"https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz\",\n                \"https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk11_macos_aarch64\": {\n            \"bzlFile\": \"@@bazel_tools//tools/build_defs/repo:http.bzl\",\n            \"ruleClassName\": \"http_archive\",\n            \"attributes\": {\n              \"build_file_content\": \"load(\\\"@rules_java//java:defs.bzl\\\", \\\"java_runtime\\\")\\n\\npackage(default_visibility = [\\\"//visibility:public\\\"])\\n\\nexports_files([\\\"WORKSPACE\\\", \\\"BUILD.bazel\\\"])\\n\\nfilegroup(\\n    name = \\\"jre\\\",\\n    srcs = glob(\\n        [\\n            \\\"jre/bin/**\\\",\\n            \\\"jre/lib/**\\\",\\n        ],\\n        allow_empty = True,\\n        # In some configurations, Java browser plugin is considered harmful and\\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\\n        # so do not include it in JRE on Windows.\\n        exclude = [\\\"jre/bin/plugin2/**\\\"],\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-bin\\\",\\n    srcs = glob(\\n        [\\\"bin/**\\\"],\\n        # The JDK on Windows sometimes contains a directory called\\n        # \\\"%systemroot%\\\", which is not a valid label.\\n        exclude = [\\\"**/*%*/**\\\"],\\n    ),\\n)\\n\\n# This folder holds security policies.\\nfilegroup(\\n    name = \\\"jdk-conf\\\",\\n    srcs = glob(\\n        [\\\"conf/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-include\\\",\\n    srcs = glob(\\n        [\\\"include/**\\\"],\\n        allow_empty = True,\\n    ),\\n)\\n\\nfilegroup(\\n    name = \\\"jdk-lib\\\",\\n    srcs = glob(\\n        [\\\"lib/**\\\", \\\"release\\\"],\\n        allow_empty = True,\\n        exclude = [\\n            \\\"lib/missioncontrol/**\\\",\\n            \\\"lib/visualvm/**\\\",\\n        ],\\n    ),\\n)\\n\\njava_runtime(\\n    name = \\\"jdk\\\",\\n    srcs = [\\n        \\\":jdk-bin\\\",\\n        \\\":jdk-conf\\\",\\n        \\\":jdk-include\\\",\\n        \\\":jdk-lib\\\",\\n        \\\":jre\\\",\\n    ],\\n    # Provide the 'java` binary explicitly so that the correct path is used by\\n    # Bazel even when the host platform differs from the execution platform.\\n    # Exactly one of the two globs will be empty depending on the host platform.\\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\\n    # glob will fail without allow_empty = True, even if the overall result is\\n    # non-empty.\\n    java = glob([\\\"bin/java.exe\\\", \\\"bin/java\\\"], allow_empty = True)[0],\\n    version = 11,\\n)\\n\",\n              \"sha256\": \"7632bc29f8a4b7d492b93f3bc75a7b61630894db85d136456035ab2a24d38885\",\n              \"strip_prefix\": \"zulu11.66.15-ca-jdk11.0.20-macosx_aarch64\",\n              \"urls\": [\n                \"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz\",\n                \"https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz\"\n              ]\n            }\n          },\n          \"remotejdk21_win_toolchain_config_repo\": {\n            \"bzlFile\": \"@@rules_java~//toolchains:remote_java_repository.bzl\",\n            \"ruleClassName\": \"_toolchain_config\",\n            \"attributes\": {\n              \"build_file\": \"\\nconfig_setting(\\n    name = \\\"prefix_version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"remotejdk_21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nconfig_setting(\\n    name = \\\"version_setting\\\",\\n    values = {\\\"java_runtime_version\\\": \\\"21\\\"},\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\nalias(\\n    name = \\\"version_or_prefix_version_setting\\\",\\n    actual = select({\\n        \\\":version_setting\\\": \\\":version_setting\\\",\\n        \\\"//conditions:default\\\": \\\":prefix_version_setting\\\",\\n    }),\\n    visibility = [\\\"//visibility:private\\\"],\\n)\\ntoolchain(\\n    name = \\\"toolchain\\\",\\n    target_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_win//:jdk\\\",\\n)\\ntoolchain(\\n    name = \\\"bootstrap_runtime_toolchain\\\",\\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\\n    # the same configuration, this constraint will not result in toolchain resolution failures.\\n    exec_compatible_with = [\\\"@platforms//os:windows\\\", \\\"@platforms//cpu:x86_64\\\"],\\n    target_settings = [\\\":version_or_prefix_version_setting\\\"],\\n    toolchain_type = \\\"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\\\",\\n    toolchain = \\\"@remotejdk21_win//:jdk\\\",\\n)\\n\"\n            }\n          }\n        },\n        \"recordedRepoMappingEntries\": [\n          [\n            \"rules_java~\",\n            \"bazel_tools\",\n            \"bazel_tools\"\n          ],\n          [\n            \"rules_java~\",\n            \"remote_java_tools\",\n            \"rules_java~~toolchains~remote_java_tools\"\n          ]\n        ]\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "Package.swift",
          "type": "blob",
          "size": 0.9560546875,
          "content": "// swift-tools-version:5.8\n/*\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PackageDescription\n\nlet package = Package(\n  name: \"FlatBuffers\",\n  platforms: [\n    .iOS(.v11),\n    .macOS(.v10_14),\n  ],\n  products: [\n    .library(\n      name: \"FlatBuffers\",\n      targets: [\"FlatBuffers\"]),\n  ],\n  targets: [\n    .target(\n      name: \"FlatBuffers\",\n      dependencies: [],\n      path: \"swift/Sources\"),\n  ])\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1474609375,
          "content": "![logo](http://google.github.io/flatbuffers/fpl_logo_small.png) FlatBuffers\n===========\n\n![Build status](https://github.com/google/flatbuffers/actions/workflows/build.yml/badge.svg?branch=master)\n[![BuildKite status](https://badge.buildkite.com/7979d93bc6279aa539971f271253c65d5e8fe2fe43c90bbb25.svg)](https://buildkite.com/bazel/flatbuffers)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/flatbuffers.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:flatbuffers)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/google/flatbuffers/badge)](https://api.securityscorecards.dev/projects/github.com/google/flatbuffers)\n[![Join the chat at https://gitter.im/google/flatbuffers](https://badges.gitter.im/google/flatbuffers.svg)](https://gitter.im/google/flatbuffers?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Discord Chat](https://img.shields.io/discord/656202785926152206.svg)](https:///discord.gg/6qgKs3R)\n[![Twitter Follow](https://img.shields.io/twitter/follow/wvo.svg?style=social)](https://twitter.com/wvo)\n[![Twitter Follow](https://img.shields.io/twitter/follow/dbaileychess.svg?style=social)](https://twitter.com/dbaileychess)\n\n\n**FlatBuffers** is a cross platform serialization library architected for\nmaximum memory efficiency. It allows you to directly access serialized data without parsing/unpacking it first, while still having great forwards/backwards compatibility.\n\n## Quick Start\n\n1. Build the compiler for flatbuffers (`flatc`)\n\n    Use `cmake` to create the build files for your platform and then perform the compilation (Linux example).\n\n    ```\n    cmake -G \"Unix Makefiles\"\n    make -j\n    ```\n\n2. Define your flatbuffer schema (`.fbs`)\n\n    Write the [schema](https://flatbuffers.dev/flatbuffers_guide_writing_schema.html) to define the data you want to serialize. See [monster.fbs](https://github.com/google/flatbuffers/blob/master/samples/monster.fbs) for an example.\n\n3. Generate code for your language(s)\n\n    Use the `flatc` compiler to take your schema and generate language-specific code:\n\n    ```\n    ./flatc --cpp --rust monster.fbs\n    ```\n    \n    Which generates `monster_generated.h` and `monster_generated.rs` files.\n\n4. Serialize data\n\n    Use the generated code, as well as the `FlatBufferBuilder` to construct your serialized buffer. ([`C++` example](https://github.com/google/flatbuffers/blob/master/samples/sample_binary.cpp#L24-L56))\n\n5. Transmit/store/save Buffer\n\n    Use your serialized buffer however you want. Send it to someone, save it for later, etc...\n\n6. Read the data\n\n    Use the generated accessors to read the data from the serialized buffer.\n    \n    It doesn't need to be the same language/schema version, FlatBuffers ensures the data is readable across languages and schema versions. See the [`Rust` example](https://github.com/google/flatbuffers/blob/master/samples/sample_binary.rs#L92-L106) reading the data written by `C++`.\n\n## Documentation\n\n**Go to our [landing page][] to browse our documentation.**\n\n## Supported operating systems\n- Windows\n- macOS\n- Linux\n- Android\n- And any others with a recent C++ compiler (C++ 11 and newer)\n\n## Supported programming languages\n\nCode generation and runtime libraries for many popular languages.\n\n1. C\n1. C++ - [snapcraft.io](https://snapcraft.io/flatbuffers)\n1. C# - [nuget.org](https://www.nuget.org/packages/Google.FlatBuffers)\n1. Dart - [pub.dev](https://pub.dev/packages/flat_buffers)\n1. Go - [go.dev](https://pkg.go.dev/github.com/google/flatbuffers)\n1. Java - [Maven](https://search.maven.org/artifact/com.google.flatbuffers/flatbuffers-java)\n1. JavaScript - [NPM](https://www.npmjs.com/package/flatbuffers)\n1. Kotlin\n1. Lobster\n1. Lua\n1. PHP\n1. Python - [PyPI](https://pypi.org/project/flatbuffers/)\n1. Rust - [crates.io](https://crates.io/crates/flatbuffers)\n1. Swift - [swiftpackageindex](https://swiftpackageindex.com/google/flatbuffers)\n1. TypeScript - [NPM](https://www.npmjs.com/package/flatbuffers)\n1. Nim\n\n## Versioning\n\nFlatBuffers does not follow traditional SemVer versioning (see [rationale](https://github.com/google/flatbuffers/wiki/Versioning)) but rather uses a format of the date of the release.\n\n## Contribution\n\n* [FlatBuffers Issues Tracker][] to submit an issue.\n* [stackoverflow.com][] with [`flatbuffers` tag][] for any questions regarding FlatBuffers.\n\n*To contribute to this project,* see [CONTRIBUTING][].\n\n## Community\n\n* [Discord Server](https:///discord.gg/6qgKs3R)\n\n## Security\n\nPlease see our [Security Policy](SECURITY.md) for reporting vulnerabilities.\n\n## Licensing\n*Flatbuffers* is licensed under the Apache License, Version 2.0. See [LICENSE][] for the full license text.\n\n<br>\n\n   [CONTRIBUTING]: http://github.com/google/flatbuffers/blob/master/CONTRIBUTING.md\n   [`flatbuffers` tag]: https://stackoverflow.com/questions/tagged/flatbuffers\n   [FlatBuffers Google Group]: https://groups.google.com/forum/#!forum/flatbuffers\n   [FlatBuffers Issues Tracker]: http://github.com/google/flatbuffers/issues\n   [stackoverflow.com]: http://stackoverflow.com/search?q=flatbuffers\n   [landing page]: https://google.github.io/flatbuffers\n   [LICENSE]: https://github.com/google/flatbuffers/blob/master/LICENSE\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.4697265625,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nTo report a security issue, please use http://g.co/vulnz. We use\nhttp://g.co/vulnz for our intake, and do coordination and disclosure here on\nGitHub (including using GitHub Security Advisory). The Google Security Team will\nrespond within 5 working days of your report on g.co/vulnz.\n\nSelect the `I want to report a technical security or an abuse risk related bug\nin a Google product (SQLi, XSS, etc.)` option and complete the form.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 6.8564453125,
          "content": "workspace(name = \"com_github_google_flatbuffers\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\", \"http_file\")\n\nhttp_archive(\n    name = \"platforms\",\n    sha256 = \"3a561c99e7bdbe9173aa653fd579fe849f1d8d67395780ab4770b1f381431d51\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/0.0.7/platforms-0.0.7.tar.gz\",\n        \"https://github.com/bazelbuild/platforms/releases/download/0.0.7/platforms-0.0.7.tar.gz\",\n    ],\n)\n\n# Import our own version of skylib before other rule sets (e.g. rules_swift)\n# has a chance to import an old version.\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = \"66ffd9315665bfaafc96b52278f57c7e2dd09f5ede279ea6d39b2be471e7e3aa\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.2/bazel-skylib-1.4.2.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.2/bazel-skylib-1.4.2.tar.gz\",\n    ],\n)\n\nload(\"@bazel_skylib//:workspace.bzl\", \"bazel_skylib_workspace\")\n\nbazel_skylib_workspace()\n\nhttp_archive(\n    name = \"build_bazel_rules_apple\",\n    sha256 = \"34c41bfb59cdaea29ac2df5a2fa79e5add609c71bb303b2ebb10985f93fa20e7\",\n    url = \"https://github.com/bazelbuild/rules_apple/releases/download/3.1.1/rules_apple.3.1.1.tar.gz\",\n)\n\nload(\n    \"@build_bazel_rules_apple//apple:repositories.bzl\",\n    \"apple_rules_dependencies\",\n)\n\napple_rules_dependencies()\n\nhttp_archive(\n    name = \"build_bazel_rules_swift\",\n    sha256 = \"a2fd565e527f83fb3f9eb07eb9737240e668c9242d3bc318712efa54a7deda97\",\n    url = \"https://github.com/bazelbuild/rules_swift/releases/download/0.27.0/rules_swift.0.27.0.tar.gz\",\n)\n\nload(\n    \"@build_bazel_rules_swift//swift:repositories.bzl\",\n    \"swift_rules_dependencies\",\n)\n\nswift_rules_dependencies()\n\nload(\n    \"@build_bazel_rules_swift//swift:extras.bzl\",\n    \"swift_rules_extra_dependencies\",\n)\n\nswift_rules_extra_dependencies()\n\nhttp_archive(\n    name = \"io_bazel_rules_go\",\n    sha256 = \"278b7ff5a826f3dc10f04feaf0b70d48b68748ccd512d7f98bf442077f043fe3\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.41.0/rules_go-v0.41.0.zip\",\n        \"https://github.com/bazelbuild/rules_go/releases/download/v0.41.0/rules_go-v0.41.0.zip\",\n    ],\n)\n\nload(\"@io_bazel_rules_go//go:deps.bzl\", \"go_rules_dependencies\")\n\ngo_rules_dependencies()\n\n##### Protobuf\n_PROTOBUF_VERSION = \"3.15.2\"\n\nhttp_archive(\n    name = \"com_google_protobuf\",\n    strip_prefix = \"protobuf-\" + _PROTOBUF_VERSION,\n    urls = [\n        \"https://github.com/protocolbuffers/protobuf/archive/v\" + _PROTOBUF_VERSION + \".tar.gz\",\n    ],\n)\n\n#### Building boring ssl\n# Fetching boringssl within the flatbuffers repository, to patch the issue\n# of not being able to upgrade to Xcode 14.3 due to buildkite throwing errors\n# which was patched in the following below.\n# https://github.com/google/flatbuffers/commit/67eb95de9281087ccbba9aafd6e8ab1958d12045\n# The patch was copied from the following comment on the same issue within tensorflow\n# and fixed to adapt the already existing patch for boringssl.\n# https://github.com/tensorflow/tensorflow/issues/60191#issuecomment-1496073147\nhttp_archive(\n    name = \"boringssl\",\n    patch_args = [\"-p1\"],\n    patches = [\"//grpc:boringssl.patch\"],\n    # Use github mirror instead of https://boringssl.googlesource.com/boringssl\n    # to obtain a boringssl archive with consistent sha256\n    sha256 = \"534fa658bd845fd974b50b10f444d392dfd0d93768c4a51b61263fd37d851c40\",\n    strip_prefix = \"boringssl-b9232f9e27e5668bc0414879dcdedb2a59ea75f2\",\n    urls = [\n        \"https://storage.googleapis.com/grpc-bazel-mirror/github.com/google/boringssl/archive/b9232f9e27e5668bc0414879dcdedb2a59ea75f2.tar.gz\",\n        \"https://github.com/google/boringssl/archive/b9232f9e27e5668bc0414879dcdedb2a59ea75f2.tar.gz\",\n    ],\n)\n\n##### GRPC\n_GRPC_VERSION = \"1.49.0\"  # https://github.com/grpc/grpc/releases/tag/v1.48.0\n\nhttp_archive(\n    name = \"com_github_grpc_grpc\",\n    patch_args = [\"-p1\"],\n    patches = [\"//grpc:build_grpc_with_cxx14.patch\"],\n    sha256 = \"15715e1847cc9e42014f02c727dbcb48e39dbdb90f79ad3d66fe4361709ff935\",\n    strip_prefix = \"grpc-\" + _GRPC_VERSION,\n    urls = [\"https://github.com/grpc/grpc/archive/refs/tags/v\" + _GRPC_VERSION + \".tar.gz\"],\n)\n\nload(\"@com_github_grpc_grpc//bazel:grpc_deps.bzl\", \"grpc_deps\")\n\ngrpc_deps()\n\nload(\"@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl\", \"grpc_extra_deps\")\n\ngrpc_extra_deps()\n\n# rules_go from https://github.com/bazelbuild/rules_go/releases/tag/v0.34.0\n\nhttp_archive(\n    name = \"aspect_rules_js\",\n    sha256 = \"76a04ef2120ee00231d85d1ff012ede23963733339ad8db81f590791a031f643\",\n    strip_prefix = \"rules_js-1.34.1\",\n    url = \"https://github.com/aspect-build/rules_js/releases/download/v1.34.1/rules_js-v1.34.1.tar.gz\",\n)\n\nload(\"@aspect_rules_js//js:repositories.bzl\", \"rules_js_dependencies\")\n\nrules_js_dependencies()\n\nload(\"@aspect_rules_js//npm:npm_import.bzl\", \"pnpm_repository\")\n\npnpm_repository(name = \"pnpm\")\n\nhttp_archive(\n    name = \"aspect_rules_ts\",\n    sha256 = \"4c3f34fff9f96ffc9c26635d8235a32a23a6797324486c7d23c1dfa477e8b451\",\n    strip_prefix = \"rules_ts-1.4.5\",\n    url = \"https://github.com/aspect-build/rules_ts/releases/download/v1.4.5/rules_ts-v1.4.5.tar.gz\",\n)\n\nload(\"@aspect_rules_ts//ts:repositories.bzl\", \"rules_ts_dependencies\")\n\nrules_ts_dependencies(\n    # Since rules_ts doesn't always have the newest integrity hashes, we\n    # compute it manually here.\n    #   $ curl --silent https://registry.npmjs.org/typescript/5.3.3 | jq ._integrity\n    ts_integrity = \"sha512-pXWcraxM0uxAS+tN0AG/BF2TyqmHO014Z070UsJ+pFvYuRSq8KH8DmWpnbXe0pEPDHXZV3FcAbJkijJ5oNEnWw==\",\n    ts_version_from = \"//:package.json\",\n)\n\nload(\"@rules_nodejs//nodejs:repositories.bzl\", \"DEFAULT_NODE_VERSION\", \"nodejs_register_toolchains\")\n\nnodejs_register_toolchains(\n    name = \"nodejs\",\n    node_version = DEFAULT_NODE_VERSION,\n)\n\nload(\"@com_github_google_flatbuffers//ts:repositories.bzl\", \"flatbuffers_npm\")\n\nflatbuffers_npm(\n    name = \"flatbuffers_npm\",\n)\n\nload(\"@flatbuffers_npm//:repositories.bzl\", \"npm_repositories\")\n\nnpm_repositories()\n\nhttp_archive(\n    name = \"aspect_rules_esbuild\",\n    sha256 = \"098e38e5ee868c14a6484ba263b79e57d48afacfc361ba30137c757a9c4716d6\",\n    strip_prefix = \"rules_esbuild-0.15.0\",\n    url = \"https://github.com/aspect-build/rules_esbuild/releases/download/v0.15.0/rules_esbuild-v0.15.0.tar.gz\",\n)\n\n# Register a toolchain containing esbuild npm package and native bindings\nload(\"@aspect_rules_esbuild//esbuild:repositories.bzl\", \"LATEST_ESBUILD_VERSION\", \"esbuild_register_toolchains\")\n\nesbuild_register_toolchains(\n    name = \"esbuild\",\n    esbuild_version = LATEST_ESBUILD_VERSION,\n)\n\nhttp_file(\n    name = \"bazel_linux_x86_64\",\n    downloaded_file_path = \"bazel\",\n    executable = True,\n    sha256 = \"e78fc3394deae5408d6f49a15c7b1e615901969ecf6e50d55ef899996b0b8458\",\n    urls = [\n        \"https://github.com/bazelbuild/bazel/releases/download/6.3.2/bazel-6.3.2-linux-x86_64\",\n    ],\n)\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_defs.bzl",
          "type": "blob",
          "size": 10.8798828125,
          "content": "# Description:\n#   BUILD rules for generating flatbuffer files in various languages.\n\n\"\"\"\nRules for building C++ flatbuffers with Bazel.\n\"\"\"\n\nload(\"@rules_cc//cc:defs.bzl\", \"cc_library\")\n\nTRUE_FLATC_PATH = \"@com_github_google_flatbuffers//:flatc\"\n\nDEFAULT_INCLUDE_PATHS = [\n    \"./\",\n    \"$(GENDIR)\",\n    \"$(BINDIR)\",\n    \"$(execpath @com_github_google_flatbuffers//:flatc).runfiles/com_github_google_flatbuffers\",\n]\n\ndef default_include_paths(flatc_path):\n    return [\n        \"./\",\n        \"$(GENDIR)\",\n        \"$(BINDIR)\",\n        \"$(execpath %s).runfiles/com_github_google_flatbuffers\" % (flatc_path),\n    ]\n\nDEFAULT_FLATC_ARGS = [\n    \"--gen-object-api\",\n    \"--gen-compare\",\n    \"--no-includes\",\n    \"--gen-mutable\",\n    \"--reflect-names\",\n    \"--cpp-ptr-type flatbuffers::unique_ptr\",\n]\n\ndef flatbuffer_library_public(\n        name,\n        srcs,\n        outs,\n        language_flag,\n        out_prefix = \"\",\n        includes = [],\n        include_paths = None,\n        flatc_args = DEFAULT_FLATC_ARGS,\n        reflection_name = \"\",\n        reflection_visibility = None,\n        compatible_with = None,\n        restricted_to = None,\n        target_compatible_with = None,\n        flatc_path = \"@com_github_google_flatbuffers//:flatc\",\n        output_to_bindir = False,\n        tools = None,\n        extra_env = None,\n        **kwargs):\n    \"\"\"Generates code files for reading/writing the given flatbuffers in the requested language using the public compiler.\n\n    Args:\n      name: Rule name.\n      srcs: Source .fbs files. Sent in order to the compiler.\n      outs: Output files from flatc.\n      language_flag: Target language flag. One of [-c, -j, -js].\n      out_prefix: Prepend this path to the front of all generated files except on\n          single source targets. Usually is a directory name.\n      includes: Optional, list of filegroups of schemas that the srcs depend on.\n      include_paths: Optional, list of paths the includes files can be found in.\n      flatc_args: Optional, list of additional arguments to pass to flatc.\n      reflection_name: Optional, if set this will generate the flatbuffer\n        reflection binaries for the schemas.\n      reflection_visibility: The visibility of the generated reflection Fileset.\n      output_to_bindir: Passed to genrule for output to bin directory.\n      compatible_with: Optional, The list of environments this rule can be\n        built for, in addition to default-supported environments.\n      restricted_to: Optional, The list of environments this rule can be built\n        for, instead of default-supported environments.\n      target_compatible_with: Optional, The list of target platform constraints\n        to use.\n      flatc_path: Bazel target corresponding to the flatc compiler to use.\n      output_to_bindir: Passed to genrule for output to bin directory.\n      tools: Optional, passed to genrule for list of tools to make available\n        during the action.\n      extra_env: Optional, must be a string of \"VAR1=VAL1 VAR2=VAL2\". These get\n        set as environment variables that \"flatc_path\" sees.\n      **kwargs: Passed to the underlying genrule.\n\n\n    This rule creates a filegroup(name) with all generated source files, and\n    optionally a Fileset([reflection_name]) with all generated reflection\n    binaries.\n    \"\"\"\n    reflection_include_paths = include_paths\n    if include_paths == None:\n        include_paths = default_include_paths(flatc_path)\n    include_paths_cmd = [\"-I %s\" % (s) for s in include_paths]\n\n    extra_env = extra_env or \"\"\n\n    # '$(@D)' when given a single source target will give the appropriate\n    # directory. Appending 'out_prefix' is only necessary when given a build\n    # target with multiple sources.\n    output_directory = (\n        (\"-o $(@D)/%s\" % (out_prefix)) if len(srcs) > 1 else (\"-o $(@D)\")\n    )\n    genrule_cmd = \" \".join([\n        \"SRCS=($(SRCS));\",\n        \"for f in $${SRCS[@]:0:%s}; do\" % len(srcs),\n        \"OUTPUT_FILE=\\\"$(OUTS)\\\" %s $(location %s)\" % (extra_env, flatc_path),\n        \" \".join(include_paths_cmd),\n        \" \".join(flatc_args),\n        language_flag,\n        output_directory,\n        \"$$f;\",\n        \"done\",\n    ])\n    native.genrule(\n        name = name,\n        srcs = srcs + includes,\n        outs = outs,\n        output_to_bindir = output_to_bindir,\n        tools = (tools or []) + [flatc_path],\n        cmd = genrule_cmd,\n        compatible_with = compatible_with,\n        target_compatible_with = target_compatible_with,\n        restricted_to = restricted_to,\n        message = \"Generating flatbuffer files for %s:\" % (name),\n        **kwargs\n    )\n    if reflection_name:\n        if reflection_include_paths == None:\n            reflection_include_paths = default_include_paths(TRUE_FLATC_PATH)\n        reflection_include_paths_cmd = [\"-I %s\" % (s) for s in reflection_include_paths]\n        reflection_genrule_cmd = \" \".join([\n            \"SRCS=($(SRCS));\",\n            \"for f in $${SRCS[@]:0:%s}; do\" % len(srcs),\n            \"$(location %s)\" % (TRUE_FLATC_PATH),\n            \"-b --schema\",\n            \" \".join(flatc_args),\n            \" \".join(reflection_include_paths_cmd),\n            language_flag,\n            output_directory,\n            \"$$f;\",\n            \"done\",\n        ])\n        reflection_outs = [\n            (out_prefix + \"%s.bfbs\") % (s.replace(\".fbs\", \"\").split(\"/\")[-1])\n            for s in srcs\n        ]\n        native.genrule(\n            name = \"%s_srcs\" % reflection_name,\n            srcs = srcs + includes,\n            outs = reflection_outs,\n            output_to_bindir = output_to_bindir,\n            tools = [TRUE_FLATC_PATH],\n            compatible_with = compatible_with,\n            restricted_to = restricted_to,\n            target_compatible_with = target_compatible_with,\n            cmd = reflection_genrule_cmd,\n            message = \"Generating flatbuffer reflection binary for %s:\" % (name),\n            visibility = reflection_visibility,\n        )\n        native.filegroup(\n            name = \"%s_out\" % reflection_name,\n            srcs = reflection_outs,\n            visibility = reflection_visibility,\n            compatible_with = compatible_with,\n            restricted_to = restricted_to,\n        )\n\ndef flatbuffer_cc_library(\n        name,\n        srcs,\n        srcs_filegroup_name = \"\",\n        outs = [],\n        out_prefix = \"\",\n        deps = [],\n        includes = [],\n        include_paths = None,\n        cc_include_paths = [],\n        flatc_args = DEFAULT_FLATC_ARGS,\n        visibility = None,\n        compatible_with = None,\n        restricted_to = None,\n        target_compatible_with = None,\n        srcs_filegroup_visibility = None,\n        gen_reflections = False):\n    \"\"\"A cc_library with the generated reader/writers for the given flatbuffer definitions.\n\n    Args:\n      name: Rule name.\n      srcs: Source .fbs files. Sent in order to the compiler.\n      srcs_filegroup_name: Name of the output filegroup that holds srcs. Pass this\n          filegroup into the `includes` parameter of any other\n          flatbuffer_cc_library that depends on this one's schemas.\n      outs: Additional outputs expected to be generated by flatc.\n      out_prefix: Prepend this path to the front of all generated files. Usually\n          is a directory name.\n      deps: Optional, list of other flatbuffer_cc_library's to depend on. Cannot be specified\n          alongside includes.\n      includes: Optional, list of filegroups of schemas that the srcs depend on.\n          Use of this is discouraged, and may be deprecated.\n      include_paths: Optional, list of paths the includes files can be found in.\n      cc_include_paths: Optional, list of paths to add to the cc_library includes attribute.\n      flatc_args: Optional list of additional arguments to pass to flatc\n          (e.g. --gen-mutable).\n      visibility: The visibility of the generated cc_library. By default, use the\n          default visibility of the project.\n      srcs_filegroup_visibility: The visibility of the generated srcs filegroup.\n          By default, use the value of the visibility parameter above.\n      gen_reflections: Optional, if true this will generate the flatbuffer\n        reflection binaries for the schemas.\n      compatible_with: Optional, The list of environments this rule can be built\n        for, in addition to default-supported environments.\n      restricted_to: Optional, The list of environments this rule can be built\n        for, instead of default-supported environments.\n      target_compatible_with: Optional, The list of target platform constraints\n        to use.\n\n    This produces:\n      filegroup([name]_srcs): all generated .h files.\n      filegroup(srcs_filegroup_name if specified, or [name]_includes if not):\n          Other flatbuffer_cc_library's can pass this in for their `includes`\n          parameter, if they depend on the schemas in this library.\n      Fileset([name]_reflection): (Optional) all generated reflection binaries.\n      cc_library([name]): library with sources and flatbuffers deps.\n    \"\"\"\n    output_headers = [\n        (out_prefix + \"%s_generated.h\") % (s.replace(\".fbs\", \"\").split(\"/\")[-1].split(\":\")[-1])\n        for s in srcs\n    ]\n    if deps and includes:\n        # There is no inherent reason we couldn't support both, but this discourages\n        # use of includes without good reason.\n        fail(\"Cannot specify both deps and include in flatbuffer_cc_library.\")\n    if deps:\n        includes = [d + \"_includes\" for d in deps]\n    reflection_name = \"%s_reflection\" % name if gen_reflections else \"\"\n\n    srcs_lib = \"%s_srcs\" % (name)\n    flatbuffer_library_public(\n        name = srcs_lib,\n        srcs = srcs,\n        outs = outs + output_headers,\n        language_flag = \"-c\",\n        out_prefix = out_prefix,\n        includes = includes,\n        include_paths = include_paths,\n        flatc_args = flatc_args,\n        compatible_with = compatible_with,\n        restricted_to = restricted_to,\n        target_compatible_with = target_compatible_with,\n        reflection_name = reflection_name,\n        reflection_visibility = visibility,\n    )\n    cc_library(\n        name = name,\n        hdrs = [\n            \":\" + srcs_lib,\n        ],\n        srcs = [\n            \":\" + srcs_lib,\n        ],\n        features = [\n            \"-parse_headers\",\n        ],\n        deps = [\n            \"@com_github_google_flatbuffers//:runtime_cc\",\n            \"@com_github_google_flatbuffers//:flatbuffers\",\n        ] + deps,\n        includes = cc_include_paths,\n        compatible_with = compatible_with,\n        restricted_to = restricted_to,\n        target_compatible_with = target_compatible_with,\n        linkstatic = 1,\n        visibility = visibility,\n    )\n\n    # A filegroup for the `srcs`. That is, all the schema files for this\n    # Flatbuffer set.\n    native.filegroup(\n        name = srcs_filegroup_name if srcs_filegroup_name else \"%s_includes\" % (name),\n        srcs = srcs + includes,\n        compatible_with = compatible_with,\n        restricted_to = restricted_to,\n        visibility = srcs_filegroup_visibility if srcs_filegroup_visibility != None else visibility,\n    )\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.3681640625,
          "content": "{\n  \"name\": \"google/flatbuffers\",\n  \"type\": \"library\",\n  \"description\": \"FlatBuffers for PHP\",\n  \"keywords\": [\"google\", \"flatbuffers\", \"serialization\"],\n  \"homepage\": \"https://github.com/google/flatbuffers\",\n  \"license\": \"Apache-2.0\",\n  \"require\": {\n    \"php\": \">=5.4\"\n  },\n  \"require-dev\": {\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Google\\\\FlatBuffers\\\\\": \"php\"\n    }\n  }\n}"
        },
        {
          "name": "conan",
          "type": "tree",
          "content": null
        },
        {
          "name": "conanfile.py",
          "type": "blob",
          "size": 2.9951171875,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"Conan recipe package for Google FlatBuffers\n\"\"\"\nimport os\nimport shutil\nfrom conans import ConanFile, CMake, tools\n\n\nclass FlatbuffersConan(ConanFile):\n    name = \"flatbuffers\"\n    license = \"Apache-2.0\"\n    url = \"https://github.com/google/flatbuffers\"\n    homepage = \"http://google.github.io/flatbuffers/\"\n    author = \"Wouter van Oortmerssen\"\n    topics = (\"conan\", \"flatbuffers\", \"serialization\", \"rpc\", \"json-parser\")\n    description = \"Memory Efficient Serialization Library\"\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\n    options = {\"shared\": [True, False], \"fPIC\": [True, False]}\n    default_options = {\"shared\": False, \"fPIC\": True}\n    generators = \"cmake\"\n    exports = \"LICENSE\"\n    exports_sources = [\"CMake/*\", \"include/*\", \"src/*\", \"grpc/*\", \"CMakeLists.txt\", \"conan/CMakeLists.txt\"]\n\n    def source(self):\n        \"\"\"Wrap the original CMake file to call conan_basic_setup\n        \"\"\"\n        shutil.move(\"CMakeLists.txt\", \"CMakeListsOriginal.txt\")\n        shutil.move(os.path.join(\"conan\", \"CMakeLists.txt\"), \"CMakeLists.txt\")\n\n    def config_options(self):\n        \"\"\"Remove fPIC option on Windows platform\n        \"\"\"\n        if self.settings.os == \"Windows\":\n            self.options.remove(\"fPIC\")\n\n    def configure_cmake(self):\n        \"\"\"Create CMake instance and execute configure step\n        \"\"\"\n        cmake = CMake(self)\n        cmake.definitions[\"FLATBUFFERS_BUILD_TESTS\"] = False\n        cmake.definitions[\"FLATBUFFERS_BUILD_SHAREDLIB\"] = self.options.shared\n        cmake.definitions[\"FLATBUFFERS_BUILD_FLATLIB\"] = not self.options.shared\n        cmake.configure()\n        return cmake\n\n    def build(self):\n        \"\"\"Configure, build and install FlatBuffers using CMake.\n        \"\"\"\n        cmake = self.configure_cmake()\n        cmake.build()\n\n    def package(self):\n        \"\"\"Copy Flatbuffers' artifacts to package folder\n        \"\"\"\n        cmake = self.configure_cmake()\n        cmake.install()\n        self.copy(pattern=\"LICENSE\", dst=\"licenses\")\n        self.copy(pattern=\"FindFlatBuffers.cmake\", dst=os.path.join(\"lib\", \"cmake\", \"flatbuffers\"), src=\"CMake\")\n        self.copy(pattern=\"flathash*\", dst=\"bin\", src=\"bin\")\n        self.copy(pattern=\"flatc*\", dst=\"bin\", src=\"bin\")\n        if self.settings.os == \"Windows\" and self.options.shared:\n            if self.settings.compiler == \"Visual Studio\":\n                shutil.move(os.path.join(self.package_folder, \"lib\", \"%s.dll\" % self.name),\n                            os.path.join(self.package_folder, \"bin\", \"%s.dll\" % self.name))\n            elif self.settings.compiler == \"gcc\":\n                shutil.move(os.path.join(self.package_folder, \"lib\", \"lib%s.dll\" % self.name),\n                            os.path.join(self.package_folder, \"bin\", \"lib%s.dll\" % self.name))\n\n    def package_info(self):\n        \"\"\"Collect built libraries names and solve flatc path.\n        \"\"\"\n        self.cpp_info.libs = tools.collect_libs(self)\n        self.user_info.flatc = os.path.join(self.package_folder, \"bin\", \"flatc\")\n"
        },
        {
          "name": "dart",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs-old",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "goldens",
          "type": "tree",
          "content": null
        },
        {
          "name": "grpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "lobster",
          "type": "tree",
          "content": null
        },
        {
          "name": "lua",
          "type": "tree",
          "content": null
        },
        {
          "name": "mjs",
          "type": "tree",
          "content": null
        },
        {
          "name": "net",
          "type": "tree",
          "content": null
        },
        {
          "name": "nim",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.2333984375,
          "content": "{\n  \"name\": \"flatbuffers\",\n  \"version\": \"24.12.23\",\n  \"description\": \"Memory Efficient Serialization Library\",\n  \"files\": [\n    \"js/**/*.js\",\n    \"js/**/*.d.ts\",\n    \"mjs/**/*.js\",\n    \"mjs/**/*.d.ts\",\n    \"ts/**/*.ts\"\n  ],\n  \"main\": \"js/flatbuffers.js\",\n  \"module\": \"mjs/flatbuffers.js\",\n  \"directories\": {\n    \"doc\": \"docs\",\n    \"test\": \"tests\"\n  },\n  \"scripts\": {\n    \"test\": \"npm run compile && cd tests/ts && python3 ./TypeScriptTest.py\",\n    \"lint\": \"eslint ts\",\n    \"compile\": \"tsc && tsc -p tsconfig.mjs.json && esbuild js/flatbuffers.js --minify --global-name=flatbuffers --bundle --outfile=js/flatbuffers.min.js\",\n    \"prepublishOnly\": \"npm install --only=dev && npm run compile\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/google/flatbuffers.git\"\n  },\n  \"keywords\": [\n    \"flatbuffers\"\n  ],\n  \"author\": \"The FlatBuffers project\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/google/flatbuffers/issues\"\n  },\n  \"homepage\": \"https://google.github.io/flatbuffers/\",\n  \"devDependencies\": {\n    \"@types/node\": \"^20.10.4\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.13.2\",\n    \"@typescript-eslint/parser\": \"^6.13.2\",\n    \"esbuild\": \"^0.19.8\",\n    \"eslint\": \"^8.55.0\",\n    \"typescript\": \"5.3.3\"\n  }\n}\n"
        },
        {
          "name": "php",
          "type": "tree",
          "content": null
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 39.3701171875,
          "content": "lockfileVersion: '6.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\ndevDependencies:\n  '@types/node':\n    specifier: ^20.10.4\n    version: 20.10.4\n  '@typescript-eslint/eslint-plugin':\n    specifier: ^6.13.2\n    version: 6.13.2(@typescript-eslint/parser@6.13.2)(eslint@8.55.0)(typescript@5.3.3)\n  '@typescript-eslint/parser':\n    specifier: ^6.13.2\n    version: 6.13.2(eslint@8.55.0)(typescript@5.3.3)\n  esbuild:\n    specifier: ^0.19.8\n    version: 0.19.8\n  eslint:\n    specifier: ^8.55.0\n    version: 8.55.0\n  typescript:\n    specifier: 5.3.3\n    version: 5.3.3\n\npackages:\n\n  /@aashutoshrathi/word-wrap@1.2.6:\n    resolution: {integrity: sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /@esbuild/android-arm64@0.19.8:\n    resolution: {integrity: sha512-B8JbS61bEunhfx8kasogFENgQfr/dIp+ggYXwTqdbMAgGDhRa3AaPpQMuQU0rNxDLECj6FhDzk1cF9WHMVwrtA==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [android]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/android-arm@0.19.8:\n    resolution: {integrity: sha512-31E2lxlGM1KEfivQl8Yf5aYU/mflz9g06H6S15ITUFQueMFtFjESRMoDSkvMo8thYvLBax+VKTPlpnx+sPicOA==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [android]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/android-x64@0.19.8:\n    resolution: {integrity: sha512-rdqqYfRIn4jWOp+lzQttYMa2Xar3OK9Yt2fhOhzFXqg0rVWEfSclJvZq5fZslnz6ypHvVf3CT7qyf0A5pM682A==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [android]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/darwin-arm64@0.19.8:\n    resolution: {integrity: sha512-RQw9DemMbIq35Bprbboyf8SmOr4UXsRVxJ97LgB55VKKeJOOdvsIPy0nFyF2l8U+h4PtBx/1kRf0BelOYCiQcw==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [darwin]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/darwin-x64@0.19.8:\n    resolution: {integrity: sha512-3sur80OT9YdeZwIVgERAysAbwncom7b4bCI2XKLjMfPymTud7e/oY4y+ci1XVp5TfQp/bppn7xLw1n/oSQY3/Q==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [darwin]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/freebsd-arm64@0.19.8:\n    resolution: {integrity: sha512-WAnPJSDattvS/XtPCTj1tPoTxERjcTpH6HsMr6ujTT+X6rylVe8ggxk8pVxzf5U1wh5sPODpawNicF5ta/9Tmw==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [freebsd]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/freebsd-x64@0.19.8:\n    resolution: {integrity: sha512-ICvZyOplIjmmhjd6mxi+zxSdpPTKFfyPPQMQTK/w+8eNK6WV01AjIztJALDtwNNfFhfZLux0tZLC+U9nSyA5Zg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [freebsd]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-arm64@0.19.8:\n    resolution: {integrity: sha512-z1zMZivxDLHWnyGOctT9JP70h0beY54xDDDJt4VpTX+iwA77IFsE1vCXWmprajJGa+ZYSqkSbRQ4eyLCpCmiCQ==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-arm@0.19.8:\n    resolution: {integrity: sha512-H4vmI5PYqSvosPaTJuEppU9oz1dq2A7Mr2vyg5TF9Ga+3+MGgBdGzcyBP7qK9MrwFQZlvNyJrvz6GuCaj3OukQ==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-ia32@0.19.8:\n    resolution: {integrity: sha512-1a8suQiFJmZz1khm/rDglOc8lavtzEMRo0v6WhPgxkrjcU0LkHj+TwBrALwoz/OtMExvsqbbMI0ChyelKabSvQ==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-loong64@0.19.8:\n    resolution: {integrity: sha512-fHZWS2JJxnXt1uYJsDv9+b60WCc2RlvVAy1F76qOLtXRO+H4mjt3Tr6MJ5l7Q78X8KgCFudnTuiQRBhULUyBKQ==}\n    engines: {node: '>=12'}\n    cpu: [loong64]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-mips64el@0.19.8:\n    resolution: {integrity: sha512-Wy/z0EL5qZYLX66dVnEg9riiwls5IYnziwuju2oUiuxVc+/edvqXa04qNtbrs0Ukatg5HEzqT94Zs7J207dN5Q==}\n    engines: {node: '>=12'}\n    cpu: [mips64el]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-ppc64@0.19.8:\n    resolution: {integrity: sha512-ETaW6245wK23YIEufhMQ3HSeHO7NgsLx8gygBVldRHKhOlD1oNeNy/P67mIh1zPn2Hr2HLieQrt6tWrVwuqrxg==}\n    engines: {node: '>=12'}\n    cpu: [ppc64]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-riscv64@0.19.8:\n    resolution: {integrity: sha512-T2DRQk55SgoleTP+DtPlMrxi/5r9AeFgkhkZ/B0ap99zmxtxdOixOMI570VjdRCs9pE4Wdkz7JYrsPvsl7eESg==}\n    engines: {node: '>=12'}\n    cpu: [riscv64]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-s390x@0.19.8:\n    resolution: {integrity: sha512-NPxbdmmo3Bk7mbNeHmcCd7R7fptJaczPYBaELk6NcXxy7HLNyWwCyDJ/Xx+/YcNH7Im5dHdx9gZ5xIwyliQCbg==}\n    engines: {node: '>=12'}\n    cpu: [s390x]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/linux-x64@0.19.8:\n    resolution: {integrity: sha512-lytMAVOM3b1gPypL2TRmZ5rnXl7+6IIk8uB3eLsV1JwcizuolblXRrc5ShPrO9ls/b+RTp+E6gbsuLWHWi2zGg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [linux]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/netbsd-x64@0.19.8:\n    resolution: {integrity: sha512-hvWVo2VsXz/8NVt1UhLzxwAfo5sioj92uo0bCfLibB0xlOmimU/DeAEsQILlBQvkhrGjamP0/el5HU76HAitGw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [netbsd]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/openbsd-x64@0.19.8:\n    resolution: {integrity: sha512-/7Y7u77rdvmGTxR83PgaSvSBJCC2L3Kb1M/+dmSIvRvQPXXCuC97QAwMugBNG0yGcbEGfFBH7ojPzAOxfGNkwQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [openbsd]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/sunos-x64@0.19.8:\n    resolution: {integrity: sha512-9Lc4s7Oi98GqFA4HzA/W2JHIYfnXbUYgekUP/Sm4BG9sfLjyv6GKKHKKVs83SMicBF2JwAX6A1PuOLMqpD001w==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [sunos]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/win32-arm64@0.19.8:\n    resolution: {integrity: sha512-rq6WzBGjSzihI9deW3fC2Gqiak68+b7qo5/3kmB6Gvbh/NYPA0sJhrnp7wgV4bNwjqM+R2AApXGxMO7ZoGhIJg==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [win32]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/win32-ia32@0.19.8:\n    resolution: {integrity: sha512-AIAbverbg5jMvJznYiGhrd3sumfwWs8572mIJL5NQjJa06P8KfCPWZQ0NwZbPQnbQi9OWSZhFVSUWjjIrn4hSw==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [win32]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@esbuild/win32-x64@0.19.8:\n    resolution: {integrity: sha512-bfZ0cQ1uZs2PqpulNL5j/3w+GDhP36k1K5c38QdQg+Swy51jFZWWeIkteNsufkQxp986wnqRRsb/bHbY1WQ7TA==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [win32]\n    requiresBuild: true\n    dev: true\n    optional: true\n\n  /@eslint-community/eslint-utils@4.4.0(eslint@8.55.0):\n    resolution: {integrity: sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0\n    dependencies:\n      eslint: 8.55.0\n      eslint-visitor-keys: 3.4.3\n    dev: true\n\n  /@eslint-community/regexpp@4.10.0:\n    resolution: {integrity: sha512-Cu96Sd2By9mCNTx2iyKOmq10v22jUVQv0lQnlGNy16oE9589yE+QADPbrMGCkA51cKZSg3Pu/aTJVTGfL/qjUA==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n    dev: true\n\n  /@eslint/eslintrc@2.1.4:\n    resolution: {integrity: sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    dependencies:\n      ajv: 6.12.6\n      debug: 4.3.4\n      espree: 9.6.1\n      globals: 13.23.0\n      ignore: 5.3.0\n      import-fresh: 3.3.0\n      js-yaml: 4.1.0\n      minimatch: 3.1.2\n      strip-json-comments: 3.1.1\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /@eslint/js@8.55.0:\n    resolution: {integrity: sha512-qQfo2mxH5yVom1kacMtZZJFVdW+E70mqHMJvVg6WTLo+VBuQJ4TojZlfWBjK0ve5BdEeNAVxOsl/nvNMpJOaJA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    dev: true\n\n  /@humanwhocodes/config-array@0.11.13:\n    resolution: {integrity: sha512-JSBDMiDKSzQVngfRjOdFXgFfklaXI4K9nLF49Auh21lmBWRLIK3+xTErTWD4KU54pb6coM6ESE7Awz/FNU3zgQ==}\n    engines: {node: '>=10.10.0'}\n    dependencies:\n      '@humanwhocodes/object-schema': 2.0.1\n      debug: 4.3.4\n      minimatch: 3.1.2\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /@humanwhocodes/module-importer@1.0.1:\n    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}\n    engines: {node: '>=12.22'}\n    dev: true\n\n  /@humanwhocodes/object-schema@2.0.1:\n    resolution: {integrity: sha512-dvuCeX5fC9dXgJn9t+X5atfmgQAzUOWqS1254Gh0m6i8wKd10ebXkfNKiRK+1GWi/yTvvLDHpoxLr0xxxeslWw==}\n    dev: true\n\n  /@nodelib/fs.scandir@2.1.5:\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n    dev: true\n\n  /@nodelib/fs.stat@2.0.5:\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n    dev: true\n\n  /@nodelib/fs.walk@1.2.8:\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.15.0\n    dev: true\n\n  /@types/json-schema@7.0.15:\n    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}\n    dev: true\n\n  /@types/node@20.10.4:\n    resolution: {integrity: sha512-D08YG6rr8X90YB56tSIuBaddy/UXAA9RKJoFvrsnogAum/0pmjkgi4+2nx96A330FmioegBWmEYQ+syqCFaveg==}\n    dependencies:\n      undici-types: 5.26.5\n    dev: true\n\n  /@types/semver@7.5.6:\n    resolution: {integrity: sha512-dn1l8LaMea/IjDoHNd9J52uBbInB796CDffS6VdIxvqYCPSG0V0DzHp76GpaWnlhg88uYyPbXCDIowa86ybd5A==}\n    dev: true\n\n  /@typescript-eslint/eslint-plugin@6.13.2(@typescript-eslint/parser@6.13.2)(eslint@8.55.0)(typescript@5.3.3):\n    resolution: {integrity: sha512-3+9OGAWHhk4O1LlcwLBONbdXsAhLjyCFogJY/cWy2lxdVJ2JrcTF2pTGMaLl2AE7U1l31n8Py4a8bx5DLf/0dQ==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    peerDependencies:\n      '@typescript-eslint/parser': ^6.0.0 || ^6.0.0-alpha\n      eslint: ^7.0.0 || ^8.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n    dependencies:\n      '@eslint-community/regexpp': 4.10.0\n      '@typescript-eslint/parser': 6.13.2(eslint@8.55.0)(typescript@5.3.3)\n      '@typescript-eslint/scope-manager': 6.13.2\n      '@typescript-eslint/type-utils': 6.13.2(eslint@8.55.0)(typescript@5.3.3)\n      '@typescript-eslint/utils': 6.13.2(eslint@8.55.0)(typescript@5.3.3)\n      '@typescript-eslint/visitor-keys': 6.13.2\n      debug: 4.3.4\n      eslint: 8.55.0\n      graphemer: 1.4.0\n      ignore: 5.3.0\n      natural-compare: 1.4.0\n      semver: 7.5.4\n      ts-api-utils: 1.0.3(typescript@5.3.3)\n      typescript: 5.3.3\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /@typescript-eslint/parser@6.13.2(eslint@8.55.0)(typescript@5.3.3):\n    resolution: {integrity: sha512-MUkcC+7Wt/QOGeVlM8aGGJZy1XV5YKjTpq9jK6r6/iLsGXhBVaGP5N0UYvFsu9BFlSpwY9kMretzdBH01rkRXg==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n    dependencies:\n      '@typescript-eslint/scope-manager': 6.13.2\n      '@typescript-eslint/types': 6.13.2\n      '@typescript-eslint/typescript-estree': 6.13.2(typescript@5.3.3)\n      '@typescript-eslint/visitor-keys': 6.13.2\n      debug: 4.3.4\n      eslint: 8.55.0\n      typescript: 5.3.3\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /@typescript-eslint/scope-manager@6.13.2:\n    resolution: {integrity: sha512-CXQA0xo7z6x13FeDYCgBkjWzNqzBn8RXaE3QVQVIUm74fWJLkJkaHmHdKStrxQllGh6Q4eUGyNpMe0b1hMkXFA==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    dependencies:\n      '@typescript-eslint/types': 6.13.2\n      '@typescript-eslint/visitor-keys': 6.13.2\n    dev: true\n\n  /@typescript-eslint/type-utils@6.13.2(eslint@8.55.0)(typescript@5.3.3):\n    resolution: {integrity: sha512-Qr6ssS1GFongzH2qfnWKkAQmMUyZSyOr0W54nZNU1MDfo+U4Mv3XveeLZzadc/yq8iYhQZHYT+eoXJqnACM1tw==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n    dependencies:\n      '@typescript-eslint/typescript-estree': 6.13.2(typescript@5.3.3)\n      '@typescript-eslint/utils': 6.13.2(eslint@8.55.0)(typescript@5.3.3)\n      debug: 4.3.4\n      eslint: 8.55.0\n      ts-api-utils: 1.0.3(typescript@5.3.3)\n      typescript: 5.3.3\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /@typescript-eslint/types@6.13.2:\n    resolution: {integrity: sha512-7sxbQ+EMRubQc3wTfTsycgYpSujyVbI1xw+3UMRUcrhSy+pN09y/lWzeKDbvhoqcRbHdc+APLs/PWYi/cisLPg==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    dev: true\n\n  /@typescript-eslint/typescript-estree@6.13.2(typescript@5.3.3):\n    resolution: {integrity: sha512-SuD8YLQv6WHnOEtKv8D6HZUzOub855cfPnPMKvdM/Bh1plv1f7Q/0iFUDLKKlxHcEstQnaUU4QZskgQq74t+3w==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    peerDependencies:\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n    dependencies:\n      '@typescript-eslint/types': 6.13.2\n      '@typescript-eslint/visitor-keys': 6.13.2\n      debug: 4.3.4\n      globby: 11.1.0\n      is-glob: 4.0.3\n      semver: 7.5.4\n      ts-api-utils: 1.0.3(typescript@5.3.3)\n      typescript: 5.3.3\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /@typescript-eslint/utils@6.13.2(eslint@8.55.0)(typescript@5.3.3):\n    resolution: {integrity: sha512-b9Ptq4eAZUym4idijCRzl61oPCwwREcfDI8xGk751Vhzig5fFZR9CyzDz4Sp/nxSLBYxUPyh4QdIDqWykFhNmQ==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.0(eslint@8.55.0)\n      '@types/json-schema': 7.0.15\n      '@types/semver': 7.5.6\n      '@typescript-eslint/scope-manager': 6.13.2\n      '@typescript-eslint/types': 6.13.2\n      '@typescript-eslint/typescript-estree': 6.13.2(typescript@5.3.3)\n      eslint: 8.55.0\n      semver: 7.5.4\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n    dev: true\n\n  /@typescript-eslint/visitor-keys@6.13.2:\n    resolution: {integrity: sha512-OGznFs0eAQXJsp+xSd6k/O1UbFi/K/L7WjqeRoFE7vadjAF9y0uppXhYNQNEqygjou782maGClOoZwPqF0Drlw==}\n    engines: {node: ^16.0.0 || >=18.0.0}\n    dependencies:\n      '@typescript-eslint/types': 6.13.2\n      eslint-visitor-keys: 3.4.3\n    dev: true\n\n  /@ungap/structured-clone@1.2.0:\n    resolution: {integrity: sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==}\n    dev: true\n\n  /acorn-jsx@5.3.2(acorn@8.11.2):\n    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}\n    peerDependencies:\n      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n    dependencies:\n      acorn: 8.11.2\n    dev: true\n\n  /acorn@8.11.2:\n    resolution: {integrity: sha512-nc0Axzp/0FILLEVsm4fNwLCwMttvhEI263QtVPQcbpfZZ3ts0hLsZGOpE6czNlid7CJ9MlyH8reXkpsf3YUY4w==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n    dev: true\n\n  /ajv@6.12.6:\n    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n    dev: true\n\n  /ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n    dependencies:\n      color-convert: 2.0.1\n    dev: true\n\n  /argparse@2.0.1:\n    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}\n    dev: true\n\n  /array-union@2.1.0:\n    resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n    dev: true\n\n  /brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n    dev: true\n\n  /braces@3.0.2:\n    resolution: {integrity: sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==}\n    engines: {node: '>=8'}\n    dependencies:\n      fill-range: 7.0.1\n    dev: true\n\n  /callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n    dev: true\n\n  /chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n    dev: true\n\n  /color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n    dependencies:\n      color-name: 1.1.4\n    dev: true\n\n  /color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n    dev: true\n\n  /concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n    dev: true\n\n  /cross-spawn@7.0.3:\n    resolution: {integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==}\n    engines: {node: '>= 8'}\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n    dev: true\n\n  /debug@4.3.4:\n    resolution: {integrity: sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n    dependencies:\n      ms: 2.1.2\n    dev: true\n\n  /deep-is@0.1.4:\n    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n    dev: true\n\n  /dir-glob@3.0.1:\n    resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}\n    engines: {node: '>=8'}\n    dependencies:\n      path-type: 4.0.0\n    dev: true\n\n  /doctrine@3.0.0:\n    resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}\n    engines: {node: '>=6.0.0'}\n    dependencies:\n      esutils: 2.0.3\n    dev: true\n\n  /esbuild@0.19.8:\n    resolution: {integrity: sha512-l7iffQpT2OrZfH2rXIp7/FkmaeZM0vxbxN9KfiCwGYuZqzMg/JdvX26R31Zxn/Pxvsrg3Y9N6XTcnknqDyyv4w==}\n    engines: {node: '>=12'}\n    hasBin: true\n    requiresBuild: true\n    optionalDependencies:\n      '@esbuild/android-arm': 0.19.8\n      '@esbuild/android-arm64': 0.19.8\n      '@esbuild/android-x64': 0.19.8\n      '@esbuild/darwin-arm64': 0.19.8\n      '@esbuild/darwin-x64': 0.19.8\n      '@esbuild/freebsd-arm64': 0.19.8\n      '@esbuild/freebsd-x64': 0.19.8\n      '@esbuild/linux-arm': 0.19.8\n      '@esbuild/linux-arm64': 0.19.8\n      '@esbuild/linux-ia32': 0.19.8\n      '@esbuild/linux-loong64': 0.19.8\n      '@esbuild/linux-mips64el': 0.19.8\n      '@esbuild/linux-ppc64': 0.19.8\n      '@esbuild/linux-riscv64': 0.19.8\n      '@esbuild/linux-s390x': 0.19.8\n      '@esbuild/linux-x64': 0.19.8\n      '@esbuild/netbsd-x64': 0.19.8\n      '@esbuild/openbsd-x64': 0.19.8\n      '@esbuild/sunos-x64': 0.19.8\n      '@esbuild/win32-arm64': 0.19.8\n      '@esbuild/win32-ia32': 0.19.8\n      '@esbuild/win32-x64': 0.19.8\n    dev: true\n\n  /escape-string-regexp@4.0.0:\n    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}\n    engines: {node: '>=10'}\n    dev: true\n\n  /eslint-scope@7.2.2:\n    resolution: {integrity: sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 5.3.0\n    dev: true\n\n  /eslint-visitor-keys@3.4.3:\n    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    dev: true\n\n  /eslint@8.55.0:\n    resolution: {integrity: sha512-iyUUAM0PCKj5QpwGfmCAG9XXbZCWsqP/eWAWrG/W0umvjuLRBECwSFdt+rCntju0xEH7teIABPwXpahftIaTdA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    hasBin: true\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.0(eslint@8.55.0)\n      '@eslint-community/regexpp': 4.10.0\n      '@eslint/eslintrc': 2.1.4\n      '@eslint/js': 8.55.0\n      '@humanwhocodes/config-array': 0.11.13\n      '@humanwhocodes/module-importer': 1.0.1\n      '@nodelib/fs.walk': 1.2.8\n      '@ungap/structured-clone': 1.2.0\n      ajv: 6.12.6\n      chalk: 4.1.2\n      cross-spawn: 7.0.3\n      debug: 4.3.4\n      doctrine: 3.0.0\n      escape-string-regexp: 4.0.0\n      eslint-scope: 7.2.2\n      eslint-visitor-keys: 3.4.3\n      espree: 9.6.1\n      esquery: 1.5.0\n      esutils: 2.0.3\n      fast-deep-equal: 3.1.3\n      file-entry-cache: 6.0.1\n      find-up: 5.0.0\n      glob-parent: 6.0.2\n      globals: 13.23.0\n      graphemer: 1.4.0\n      ignore: 5.3.0\n      imurmurhash: 0.1.4\n      is-glob: 4.0.3\n      is-path-inside: 3.0.3\n      js-yaml: 4.1.0\n      json-stable-stringify-without-jsonify: 1.0.1\n      levn: 0.4.1\n      lodash.merge: 4.6.2\n      minimatch: 3.1.2\n      natural-compare: 1.4.0\n      optionator: 0.9.3\n      strip-ansi: 6.0.1\n      text-table: 0.2.0\n    transitivePeerDependencies:\n      - supports-color\n    dev: true\n\n  /espree@9.6.1:\n    resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    dependencies:\n      acorn: 8.11.2\n      acorn-jsx: 5.3.2(acorn@8.11.2)\n      eslint-visitor-keys: 3.4.3\n    dev: true\n\n  /esquery@1.5.0:\n    resolution: {integrity: sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==}\n    engines: {node: '>=0.10'}\n    dependencies:\n      estraverse: 5.3.0\n    dev: true\n\n  /esrecurse@4.3.0:\n    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}\n    engines: {node: '>=4.0'}\n    dependencies:\n      estraverse: 5.3.0\n    dev: true\n\n  /estraverse@5.3.0:\n    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}\n    engines: {node: '>=4.0'}\n    dev: true\n\n  /esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /fast-deep-equal@3.1.3:\n    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}\n    dev: true\n\n  /fast-glob@3.3.2:\n    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}\n    engines: {node: '>=8.6.0'}\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.5\n    dev: true\n\n  /fast-json-stable-stringify@2.1.0:\n    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n    dev: true\n\n  /fast-levenshtein@2.0.6:\n    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}\n    dev: true\n\n  /fastq@1.15.0:\n    resolution: {integrity: sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==}\n    dependencies:\n      reusify: 1.0.4\n    dev: true\n\n  /file-entry-cache@6.0.1:\n    resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}\n    engines: {node: ^10.12.0 || >=12.0.0}\n    dependencies:\n      flat-cache: 3.2.0\n    dev: true\n\n  /fill-range@7.0.1:\n    resolution: {integrity: sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==}\n    engines: {node: '>=8'}\n    dependencies:\n      to-regex-range: 5.0.1\n    dev: true\n\n  /find-up@5.0.0:\n    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}\n    engines: {node: '>=10'}\n    dependencies:\n      locate-path: 6.0.0\n      path-exists: 4.0.0\n    dev: true\n\n  /flat-cache@3.2.0:\n    resolution: {integrity: sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==}\n    engines: {node: ^10.12.0 || >=12.0.0}\n    dependencies:\n      flatted: 3.2.9\n      keyv: 4.5.4\n      rimraf: 3.0.2\n    dev: true\n\n  /flatted@3.2.9:\n    resolution: {integrity: sha512-36yxDn5H7OFZQla0/jFJmbIKTdZAQHngCedGxiMmpNfEZM0sdEeT+WczLQrjK6D7o2aiyLYDnkw0R3JK0Qv1RQ==}\n    dev: true\n\n  /fs.realpath@1.0.0:\n    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}\n    dev: true\n\n  /glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n    dependencies:\n      is-glob: 4.0.3\n    dev: true\n\n  /glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n    dependencies:\n      is-glob: 4.0.3\n    dev: true\n\n  /glob@7.2.3:\n    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}\n    dependencies:\n      fs.realpath: 1.0.0\n      inflight: 1.0.6\n      inherits: 2.0.4\n      minimatch: 3.1.2\n      once: 1.4.0\n      path-is-absolute: 1.0.1\n    dev: true\n\n  /globals@13.23.0:\n    resolution: {integrity: sha512-XAmF0RjlrjY23MA51q3HltdlGxUpXPvg0GioKiD9X6HD28iMjo2dKC8Vqwm7lne4GNr78+RHTfliktR6ZH09wA==}\n    engines: {node: '>=8'}\n    dependencies:\n      type-fest: 0.20.2\n    dev: true\n\n  /globby@11.1.0:\n    resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}\n    engines: {node: '>=10'}\n    dependencies:\n      array-union: 2.1.0\n      dir-glob: 3.0.1\n      fast-glob: 3.3.2\n      ignore: 5.3.0\n      merge2: 1.4.1\n      slash: 3.0.0\n    dev: true\n\n  /graphemer@1.4.0:\n    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}\n    dev: true\n\n  /has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /ignore@5.3.0:\n    resolution: {integrity: sha512-g7dmpshy+gD7mh88OC9NwSGTKoc3kyLAZQRU1mt53Aw/vnvfXnbC+F/7F7QoYVKbV+KNvJx8wArewKy1vXMtlg==}\n    engines: {node: '>= 4'}\n    dev: true\n\n  /import-fresh@3.3.0:\n    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}\n    engines: {node: '>=6'}\n    dependencies:\n      parent-module: 1.0.1\n      resolve-from: 4.0.0\n    dev: true\n\n  /imurmurhash@0.1.4:\n    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}\n    engines: {node: '>=0.8.19'}\n    dev: true\n\n  /inflight@1.0.6:\n    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}\n    dependencies:\n      once: 1.4.0\n      wrappy: 1.0.2\n    dev: true\n\n  /inherits@2.0.4:\n    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}\n    dev: true\n\n  /is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      is-extglob: 2.1.1\n    dev: true\n\n  /is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n    dev: true\n\n  /is-path-inside@3.0.3:\n    resolution: {integrity: sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n    dev: true\n\n  /js-yaml@4.1.0:\n    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}\n    hasBin: true\n    dependencies:\n      argparse: 2.0.1\n    dev: true\n\n  /json-buffer@3.0.1:\n    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}\n    dev: true\n\n  /json-schema-traverse@0.4.1:\n    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}\n    dev: true\n\n  /json-stable-stringify-without-jsonify@1.0.1:\n    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}\n    dev: true\n\n  /keyv@4.5.4:\n    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}\n    dependencies:\n      json-buffer: 3.0.1\n    dev: true\n\n  /levn@0.4.1:\n    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}\n    engines: {node: '>= 0.8.0'}\n    dependencies:\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n    dev: true\n\n  /locate-path@6.0.0:\n    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}\n    engines: {node: '>=10'}\n    dependencies:\n      p-locate: 5.0.0\n    dev: true\n\n  /lodash.merge@4.6.2:\n    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}\n    dev: true\n\n  /lru-cache@6.0.0:\n    resolution: {integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==}\n    engines: {node: '>=10'}\n    dependencies:\n      yallist: 4.0.0\n    dev: true\n\n  /merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n    dev: true\n\n  /micromatch@4.0.5:\n    resolution: {integrity: sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==}\n    engines: {node: '>=8.6'}\n    dependencies:\n      braces: 3.0.2\n      picomatch: 2.3.1\n    dev: true\n\n  /minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n    dependencies:\n      brace-expansion: 1.1.11\n    dev: true\n\n  /ms@2.1.2:\n    resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}\n    dev: true\n\n  /natural-compare@1.4.0:\n    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n    dev: true\n\n  /once@1.4.0:\n    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}\n    dependencies:\n      wrappy: 1.0.2\n    dev: true\n\n  /optionator@0.9.3:\n    resolution: {integrity: sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==}\n    engines: {node: '>= 0.8.0'}\n    dependencies:\n      '@aashutoshrathi/word-wrap': 1.2.6\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.4.1\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n    dev: true\n\n  /p-limit@3.1.0:\n    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}\n    engines: {node: '>=10'}\n    dependencies:\n      yocto-queue: 0.1.0\n    dev: true\n\n  /p-locate@5.0.0:\n    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}\n    engines: {node: '>=10'}\n    dependencies:\n      p-limit: 3.1.0\n    dev: true\n\n  /parent-module@1.0.1:\n    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n    engines: {node: '>=6'}\n    dependencies:\n      callsites: 3.1.0\n    dev: true\n\n  /path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /path-is-absolute@1.0.1:\n    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}\n    engines: {node: '>=0.10.0'}\n    dev: true\n\n  /path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /path-type@4.0.0:\n    resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n    dev: true\n\n  /prelude-ls@1.2.1:\n    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n    engines: {node: '>= 0.8.0'}\n    dev: true\n\n  /punycode@2.3.1:\n    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}\n    engines: {node: '>=6'}\n    dev: true\n\n  /queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n    dev: true\n\n  /resolve-from@4.0.0:\n    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}\n    engines: {node: '>=4'}\n    dev: true\n\n  /reusify@1.0.4:\n    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n    dev: true\n\n  /rimraf@3.0.2:\n    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}\n    hasBin: true\n    dependencies:\n      glob: 7.2.3\n    dev: true\n\n  /run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n    dependencies:\n      queue-microtask: 1.2.3\n    dev: true\n\n  /semver@7.5.4:\n    resolution: {integrity: sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==}\n    engines: {node: '>=10'}\n    hasBin: true\n    dependencies:\n      lru-cache: 6.0.0\n    dev: true\n\n  /shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n    dependencies:\n      shebang-regex: 3.0.0\n    dev: true\n\n  /shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /slash@3.0.0:\n    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n    dependencies:\n      ansi-regex: 5.0.1\n    dev: true\n\n  /strip-json-comments@3.1.1:\n    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}\n    engines: {node: '>=8'}\n    dev: true\n\n  /supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n    dependencies:\n      has-flag: 4.0.0\n    dev: true\n\n  /text-table@0.2.0:\n    resolution: {integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==}\n    dev: true\n\n  /to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n    dependencies:\n      is-number: 7.0.0\n    dev: true\n\n  /ts-api-utils@1.0.3(typescript@5.3.3):\n    resolution: {integrity: sha512-wNMeqtMz5NtwpT/UZGY5alT+VoKdSsOOP/kqHFcUW1P/VRhH2wJ48+DN2WwUliNbQ976ETwDL0Ifd2VVvgonvg==}\n    engines: {node: '>=16.13.0'}\n    peerDependencies:\n      typescript: '>=4.2.0'\n    dependencies:\n      typescript: 5.3.3\n    dev: true\n\n  /type-check@0.4.0:\n    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}\n    engines: {node: '>= 0.8.0'}\n    dependencies:\n      prelude-ls: 1.2.1\n    dev: true\n\n  /type-fest@0.20.2:\n    resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}\n    engines: {node: '>=10'}\n    dev: true\n\n  /typescript@5.3.3:\n    resolution: {integrity: sha512-pXWcraxM0uxAS+tN0AG/BF2TyqmHO014Z070UsJ+pFvYuRSq8KH8DmWpnbXe0pEPDHXZV3FcAbJkijJ5oNEnWw==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n    dev: true\n\n  /undici-types@5.26.5:\n    resolution: {integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==}\n    dev: true\n\n  /uri-js@4.4.1:\n    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}\n    dependencies:\n      punycode: 2.3.1\n    dev: true\n\n  /which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n    dependencies:\n      isexe: 2.0.0\n    dev: true\n\n  /wrappy@1.0.2:\n    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}\n    dev: true\n\n  /yallist@4.0.0:\n    resolution: {integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==}\n    dev: true\n\n  /yocto-queue@0.1.0:\n    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n    engines: {node: '>=10'}\n    dev: true\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "reflection",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "swift.swiftformat",
          "type": "blob",
          "size": 1.3916015625,
          "content": "--swiftversion 5.7\n\n# format\n--indent 2\n--maxwidth 80\n\n# options\n--self remove # redundantSelf\n--importgrouping testable-bottom # sortImports\n--trimwhitespace always\n--indentcase false\n--ifdef no-indent #indent\n--wraparguments before-first # wrapArguments\n--wrapparameters before-first # wrapArguments\n--closingparen same-line # wrapArguments\n--funcattributes prev-line # wrapAttributes\n--typeattributes prev-line # wrapAttributes\n\n# rules\n--rules wrap,todos,anyObjectProtocol,redundantParens,redundantReturn,redundantSelf,sortImports,strongifiedSelf,trailingCommas,trailingSpace,wrapArguments,wrapMultilineStatementBraces,indent,wrapAttributes,void,fileHeader\n--disable trailingclosures\n\n--exclude **/*_generated.swift\n--exclude **/swift_code_*.swift\n--exclude **/*.grpc.swift\n\n--header \"/*\\n * Copyright {year} Google Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\""
        },
        {
          "name": "swift",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.2822265625,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es2020\",\n    \"module\": \"commonjs\",\n    \"lib\": [\"ES2020\", \"DOM\"],\n    \"declaration\": true,\n    \"outDir\": \"./js\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"forceConsistentCasingInFileNames\": true\n  },\n  \"include\": [\n    \"ts/**/*.ts\"\n  ]\n}\n"
        },
        {
          "name": "tsconfig.mjs.json",
          "type": "blob",
          "size": 0.3154296875,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es2020\",\n    \"module\": \"es2020\",\n    \"moduleResolution\": \"Bundler\",\n    \"lib\": [\"ES2020\", \"DOM\"],\n    \"declaration\": true,\n    \"outDir\": \"./mjs\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"forceConsistentCasingInFileNames\": true\n  },\n  \"include\": [\n    \"ts/**/*.ts\"\n  ]\n}\n"
        },
        {
          "name": "typescript.bzl",
          "type": "blob",
          "size": 3.3173828125,
          "content": "\"\"\"\nRules for building typescript flatbuffers with Bazel.\n\"\"\"\n\nload(\"@aspect_rules_js//js:defs.bzl\", \"js_library\")\nload(\":build_defs.bzl\", \"flatbuffer_library_public\")\n\nDEFAULT_FLATC_TS_ARGS = [\n    \"--gen-object-api\",\n    \"--gen-mutable\",\n    \"--reflect-names\",\n    \"--gen-name-strings\",\n    \"--ts-flat-files\",\n    \"--keep-prefix\",\n]\n\ndef flatbuffer_ts_library(\n        name,\n        srcs,\n        compatible_with = None,\n        target_compatible_with = None,\n        deps = [],\n        include_paths = None,\n        flatc_args = DEFAULT_FLATC_TS_ARGS,\n        visibility = None,\n        restricted_to = None,\n        gen_reflections = False):\n    \"\"\"Generates a ts_library rule for a given flatbuffer definition.\n\n    Args:\n      name: Name of the generated ts_library rule.\n      srcs: Source .fbs file(s).\n      deps: Other flatbuffer_ts_library's to depend on. Note that currently\n            you must specify all your transitive dependencies manually.\n      include_paths: Optional, list of paths the includes files can be found in.\n      flatc_args: Optional list of additional arguments to pass to flatc\n          (e.g. --gen-mutable).\n      visibility: The visibility of the generated cc_library. By default, use the\n          default visibility of the project.\n      compatible_with: Optional, The list of environments this rule can be built\n        for, in addition to default-supported environments.\n      restricted_to: Optional, The list of environments this rule can be built\n        for, instead of default-supported environments.\n      target_compatible_with: Optional, The list of target platform constraints\n        to use.\n      gen_reflections: Optional, if true this will generate the flatbuffer\n        reflection binaries for the schemas.\n    \"\"\"\n    srcs_lib = \"%s_srcs\" % (name)\n    out_base = [s.replace(\".fbs\", \"\").split(\"/\")[-1].split(\":\")[-1] for s in srcs]\n\n    if len(srcs) != 1:\n        fail(\"flatbuffer_ts_library only supports one .fbs file per target currently.\")\n\n    outs = [\"%s_generated.cjs\" % s for s in out_base]\n    includes = [d + \"_includes\" for d in deps]\n    reflection_name = \"%s_reflection\" % name if gen_reflections else \"\"\n    flatbuffer_library_public(\n        name = srcs_lib,\n        srcs = srcs,\n        outs = outs,\n        language_flag = \"--ts\",\n        includes = includes,\n        include_paths = include_paths,\n        extra_env = \"ESBUILD_BIN=$(ESBUILD_BIN)\",\n        flatc_args = flatc_args + [\"--filename-suffix _generated\"],\n        compatible_with = compatible_with,\n        restricted_to = restricted_to,\n        reflection_name = reflection_name,\n        reflection_visibility = visibility,\n        target_compatible_with = target_compatible_with,\n        flatc_path = \"@com_github_google_flatbuffers//ts:compile_flat_file\",\n        toolchains = [\"@aspect_rules_esbuild//esbuild:resolved_toolchain\"],\n        tools = [\"@aspect_rules_esbuild//esbuild:resolved_toolchain\"],\n    )\n    js_library(\n        name = name,\n        visibility = visibility,\n        compatible_with = compatible_with,\n        restricted_to = restricted_to,\n        target_compatible_with = target_compatible_with,\n        srcs = outs,\n    )\n    native.filegroup(\n        name = \"%s_includes\" % (name),\n        srcs = srcs + includes,\n        compatible_with = compatible_with,\n        restricted_to = restricted_to,\n        visibility = visibility,\n    )\n"
        }
      ]
    }
  ]
}