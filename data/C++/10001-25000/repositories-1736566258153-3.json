{
  "metadata": {
    "timestamp": 1736566258153,
    "page": 3,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "v8/v8",
      "stars": 23668,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 1.27734375,
          "content": "# Copyright 2021 the V8 project authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n# Pass CC, CXX and PATH from the environment\nbuild --action_env=CC\nbuild --action_env=CXX\nbuild --action_env=PATH\n\n# Use Clang compiler\nbuild:clang --action_env=BAZEL_COMPILER=clang\nbuild:clang --action_env=CC=clang\nbuild:clang --action_env=CXX=clang++\n\n# V8 debug config\nbuild:debug --compilation_mode=dbg\nbuild:debug --config=v8_enable_debugging_features\nbuild:debug --//:v8_enable_fast_mksnapshot\nbuild:debug --//:v8_enable_backtrace\nbuild:debug --//:v8_enable_local_handle_zapping\nbuild:debug --//:v8_enable_global_handle_zapping\n\n# v8_enable_debugging_features flags\nbuild:v8_enable_debugging_features --//:v8_enable_verify_heap\nbuild:v8_enable_debugging_features --//:v8_enable_object_print\nbuild:v8_enable_debugging_features --//:v8_enable_disassembler\nbuild:v8_enable_debugging_features --//:v8_enable_trace_maps\nbuild:v8_enable_debugging_features --//:v8_enable_test_features\nbuild:v8_enable_debugging_features --//:v8_enable_v8_checks\nbuild:v8_enable_debugging_features --//:v8_code_comments\nbuild:v8_enable_debugging_features --//:v8_enable_debug_code\nbuild:v8_enable_debugging_features --//:v8_enable_snapshot_native_code_counters\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.3935546875,
          "content": "# Defines the Google C++ style for automatic reformatting.\n# http://clang.llvm.org/docs/ClangFormatStyleOptions.html\nBasedOnStyle: Google\nDerivePointerAlignment: false\nMaxEmptyLinesToKeep: 1\nIfMacros:\n  - IF\n  - IF_NOT\nMacros:\n  # Make clang-format think TurboShaft `ELSE` expands to just `else`, so that\n  # it formats well alongside `if`\n  - ELSE=else\nStatementMacros:\n  - DECL_CAST\n  - DECL_VERIFIER\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.0380859375,
          "content": "---\n---\n  Checks:          '-*,\n                    bugprone-unique-ptr-array-mismatch,\n                    # google-build-explicit-make-pair,\n                    google-default-arguments,\n                    google-explicit-constructor,\n                    google-readability-casting,\n                    modernize-redundant-void-arg,\n                    modernize-replace-random-shuffle,\n                    modernize-shrink-to-fit,\n                    modernize-type-traits,\n                    # modernize-use-auto,\n                    modernize-use-constraints,\n                    modernize-use-bool-literals,\n                    modernize-use-equals-default,\n                    # modernize-use-equals-delete,\n                    modernize-use-nullptr,\n                    modernize-use-override,\n                    performance-inefficient-vector-operation,\n                    performance-trivially-destructible,\n                    performance-unnecessary-copy-initialization'\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\n...\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.150390625,
          "content": "# editorconfig.org\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.3310546875,
          "content": "[flake8]\nignore = E111,E114,E310 # We use 2-space indentation\nexclude =\n ./third_party/, # third-party code\n ./build/, # third-party code\n ./buildtools/, # third-party code\n ./test/wasm-js/, # third-party code\n ./test/wasm-js/data/, # third-party code\n ./test/test262/data/, # third-party code\n ./test/test262/harness/, # third-party code\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 5.005859375,
          "content": "# git hyper-blame master ignore list.\n#\n# This file contains a list of git hashes of revisions to be ignored by git\n# hyper-blame (in depot_tools). These revisions are considered \"unimportant\" in\n# that they are unlikely to be what you are interested in when blaming.\n#\n# Instructions:\n# - Only large (generally automated) reformatting or renaming CLs should be\n#   added to this list. Do not put things here just because you feel they are\n#   trivial or unimportant. If in doubt, do not put it on this list.\n# - Precede each revision with a comment containing the first line of its log.\n#   For bulk work over many commits, place all commits in a block with a single\n#   comment at the top describing the work done in those commits.\n# - Only put full 40-character hashes on this list (not short hashes or any\n#   other revision reference).\n# - Append to the bottom of the file (revisions should be in chronological order\n#   from oldest to newest).\n# - Because you must use a hash, you need to append to this list in a follow-up\n#   CL to the actual reformatting CL that you are trying to ignore.\n\n# objects.h splitting\n0604031eb1d01c52b6c1c9ae3012d80b23d74a68\n09e405453359000d66cc0faaa102854e626bebeb\n766ef168fbcac6bd0728cc2c9bb3ae7cbd74278a\nb5a2839b927be04bdb50a236071c11764e4d6400\nc911f91b5b6219e038c0117b05a8375bdf3db0b0\n1bb48bf91ba8c887884a0fbd674c91f64964d8a5\n19da9f24df7b59fec72b9dd8a979ad0ce5639c87\nb090d7e7468236ffce0afdb55bb496bf0073f2ee\nf40638d148b7a435522d5b714993908061e3b10d\ne8a1c25f6afae9b77921abb70fad49da252eb6f0\n6fa8283d0e031c9585d190f751907ed45bf85de0\n9aa861c4bcfed612039259f93c2cd2b01337e99e\n8175648018bd9f70af866f9fa433f1d79644d86b\nc7b1ceb801ec7f639a093468d8e6424212cc197c\ne39d2cbe1b1baa6513ddce2d73c981e335cc34fb\neda00a5c499b7a83479115eb275a816b8a2ed104\n68deca9b418976ca8b3375e81058a9e0a815357f\n0525e17847f39f80e3fd163021a58f68d8fcaf06\n81a3c699d6eef936452ac3d10c7c59a2c1e38c0c\n01452bedfca2b5447a7f62bda87edbbb76259a6e\n1baf1050113a5418696839c273e05ea5ad1b5c4d\n4b39fe3d608916b1cfea015de287511a1623fc7f\nc6effdbba9b301244475553538f6eb1b3d9670b9\n71e4c573199466ea4541e3d6b307c9b33d7bb785\nefc92f0d4aa77bb90f5b56606b6f0d0819fba4af\na9db2c74b5bae2345ac52be404748954a3b5050d\n0a01b6202226bbe99c0b83acf6c5a80344f5fb6a\na6c44361c8f2dc07b935e3f2bb3e0d3ad4f4a383\n10d8aab1de430695a69e9d75af6ea42c2cdc9d6d\ndd3c4fca2f0a2761b8b95cd47fcd62836d714890\ne9c932233980866074025e65051003d1f298516c\n2b1f79881c3f0b69bfb9274bda57ea50f7304982\n7f031160d71a3d836667dc98288eaff4c94e6f56\n490fabb4578f8a3c4096fdccff688c17ed5ed00d\nd953b2ab726acca0b3abe90ce090a16d7ccc2ae3\nbb514c426b9438cfb1149d219ac4ec2d8d1c8458\ndfb453d713d8a05e76f720a6aae2871eec210276\nb490fd66b873c89fca37b21eab58502b6367a864\n9a71683d9c8ff9470eda6be5b2b11babac7b9863\n37945f731c4d800ef788e3c32f8663773a93450e\nb90c98fc29a8d896354de4a22c055f6d98376171\n35f3e9d0e654e84646a0b98f29e4a2786cdca4b1\n260eb5bb9b62ea3d5fa6ad0b0e8c2de75d48bad4\ncc2c11441ce352360acce8638a19f58edf361f7d\n7be0159e4b1e0b064e215ae4ced34d649cb2552e\n95a7cfe0eaabbcff0f730ed60e1805779f6cfe41\n8f54d18ba4ad10770e9537a2803459feccfe79a3\nf44759d9ff52a3e5563e5f2bb23ee2c08222fcfd\n09050c8a967f5f2956305e5d016b304d7bf5e669\nc769745d5856a7eb3a0dbe6af5376c7638944364\na1547aa914aeedd7862f74124c18d2bbaf432c36\n5f950698c0dc7c36b855961feb929022f74102fb\n4aedeb1bd50c12ebcd6cf954c4cbef1205fff5ac\n7366d8954cb1bd277d3283241da2fae62b886c48\nbc35251f5e55a65c3a4acf7cba52cee505c86a46\n4fb60b215801db70c694a799e735b64bfead59bb\n03762b8488de0e393077e3f40fe7b63e675b3af3\na8a45d875f0a98b192cf0063ceda12aaf75ddfaf\na48e5ab8804e9e97b5ea577d6f2667bacee92eb2\n\n# Update of quotations in DEPS file.\ne50b49a0e38b34e2b28e026f4d1c7e0da0c7bb1a\n\n# Rewrite code base to use \".\" instead of \"->\" to access Object members.\n878ccb33bd3cf0e6dc018ff8d15843f585ac07be\n\n# Splitting src/ into subfolders\n632239011db501e76475d82ff6492f37fa8c1edc\nf455f86d899716df3b9550950ce172f5b867619a\n24a51e1eee4e286165dd0bba6afb4c35e8177a25\nf9a88acbc928f0fc5e9a3acbcd3b4ece52355f3d\ndec3298d9cfbe95759774a0e00302a08836b5f3d\na0c3797461810e3159662851e64946e17654236e\nb72941e8b0d2843adf768442024d8950da798db1\n4c986c625f19e35c95f3492c662822f4695218b4\n0fa243af7096ee5b748b194476be2e4efecaec59\n786ce26341b7ab11b4d42f1c77202530d5138ad2\na6eeea35cb7ff0c29b6cfdd1c786f382110241ce\nbe014256adea1552d4a044ef80616cdab6a7d549\n93d3b7173fec7d010539057cdbd78d497f09fa9b\n5bfe84a0dab60289b3470c080908ce83ac2212d4\na7695520556665ba73ab02c497ab73b162a5fb13\n61523c45a335fe3be76498e0b16bf8e7aec0d058\nbf372a73d8a5f4029fc9f4f69b675ef0cad80ada\n8ad6b335376c6275ffb3361c662a1a45c853f4fc\n06bf8261cf2c94fc071652652600b5790f719c05\n81a0102fe8586071cc68e9595b26c5c1207ee5b3\n5f28539599f6a6a265e18b8c897cc96ccbeec9c4\n3253767622a784866dc34aeb7b5d0f02ebdff61e\n9ac8b20086f95f1158a1901eefe12e25fd0333e4\n3cb560adfe26edb586a0e6e655e5a7c4755cad1a\n7bbd0bfe5161d57bcf268716ce4d1ce14d6786e6\nc39cabbcbea26891558b81fd2236c38a7aeada08\na3187716d31a0ab9d7051adde6be9bd2b2c6fec1\n\n# Move test/mjsunit/regress-*.js => test/mjsunit/regress/\ncb67be1a3842fcf6a0da18aee444e3b7ea789e04\n\n# [include] Split out v8.h\nd1b27019d3bf86360ea838c317f8505fac6d3a7e\n44fe02ced6e4c6b49d627807e3b3fd0edbbeb36e\nec06bb6ce5641cf65e400ec55b7421f87d04b999\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2919921875,
          "content": "# Automatically normalize line endings (to LF) for all text-based files.\n* text=auto eol=lf\n# Do not modify line endings for binary files (which are sometimes auto\n# detected as text files by git).\n*.png binary\n# Don't include minified JS in git grep/diff output\ntest/mjsunit/asm/sqlite3/*.js -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.107421875,
          "content": "#*#\n*.Makefile\n*.a\n*.exe\n*.idb\n*.lib\n*.log\n*.map\n*.mk\n*.ncb\n*.pdb\n*.pyc\n*.scons*\n*.sdf\n*.sln\n*.so\n*.suo\n*.user\n*.vcproj\n*.vcxproj\n*.vcxproj.filters\n*.xcodeproj\n*~\n.#*\n.*.sw?\n.cache\n.ccls-cache\n.clangd\n.cpplint-cache\n.cproject\n.DS_Store\n.gclient_entries\n.gdb_history\n.idea\n.jslint-cache\n.landmines\n.project\n.pydevproject\n.settings\n.torquelint-cache\n.vscode\n/_*\n/base\n/build\n/buildtools\n/check-header-includes\n/Default/\n/out\n/out.gn\n/perf.data\n/perf.data.old\n/src/inspector/build/closure-compiler\n/src/inspector/build/closure-compiler.tar.gz\n/test/benchmarks/data\n/test/fuzzer/wasm_corpus/\n/test/fuzzer/wasm_corpus.tar.gz\n!/test/mjsunit/tools/*.log\n/test/mozilla/data\n/test/test262/data\n/test/wasm-js/data\n/test/wasm-js/tests\n/test/wasm-js/tests.tar.gz\n/test/wasm-spec-tests/tests\n/test/wasm-spec-tests/tests.tar.gz\n/third_party/*\n!/third_party/antlr4\n!/third_party/colorama\n/third_party/colorama/src\n!/third_party/cpu_features\n/third_party/cpu_features/src\n!/third_party/fast_float\n/third_party/fast_float/src\n!/third_party/glibc\n!/third_party/googletest\n/third_party/googletest/src\n!/third_party/highway\n/third_party/highway/src\n!/third_party/inspector_protocol\n!/third_party/jsoncpp\n/third_party/jsoncpp/source\n!/third_party/llvm-libc\n/third_party/llvm-libc/src\n!/third_party/re2\n/third_party/re2/src\n!/third_party/siphash\n!/third_party/utf8-decoder\n!/third_party/v8\n!/third_party/valgrind\n!/third_party/vtune\n!/third_party/wasm-api\n/tools/builtins-pgo/profiles/*\n!/tools/builtins-pgo/profiles/.*\n/tools/clang\n/tools/gcmole/bootstrap\n/tools/gcmole/gcmole-tools\n/tools/gcmole/gcmole-tools.tar.gz\n/tools/jsfunfuzz/jsfunfuzz\n/tools/jsfunfuzz/jsfunfuzz.tar.gz\n/tools/luci-go\n/tools/oom_dump/oom_dump\n/tools/oom_dump/oom_dump.o\n/tools/protoc_wrapper\n/tools/turbolizer/build\n/tools/turbolizer/.rpt2_cache\n/tools/turbolizer/deploy\n/tools/v8heapconst.py\n/tools/visual_studio/Debug\n/tools/visual_studio/Release\n/v8.log.ll\n/xcodebuild\nGPATH\nGRTAGS\nGSYMS\nGTAGS\nTAGS\nbsuite\ncompile_commands.json\ngccauses\ngcsuspects\ngtags.files\njit-*.dump\nnode_modules\ntags\nturbo*.cfg\nturbo*.dot\nturbo*.json\nv8.ignition_dispatches_table.json\nbazel-bin\nbazel-out\nbazel-testlogs\nbazel-v8\n"
        },
        {
          "name": ".gn",
          "type": "blob",
          "size": 1.423828125,
          "content": "# This file is used by the GN meta build system to find the root of the source\n# tree and to set startup options. For documentation on the values set in this\n# file, run \"gn help dotfile\" at the command line.\n\nimport(\"//build/dotfile_settings.gni\")\n\n# The location of the build configuration file.\nbuildconfig = \"//build/config/BUILDCONFIG.gn\"\n\n# The python interpreter to use by default. On Windows, this will look\n# for python3.exe and python3.bat.\nscript_executable = \"python3\"\n\n# These are the targets to check headers for by default. The files in targets\n# matching these patterns (see \"gn help label_pattern\" for format) will have\n# their includes checked for proper dependencies when you run either\n# \"gn check\" or \"gn gen --check\".\nno_check_targets = [\n  \"//:cppgc_base\",\n  \"//:v8_internal_headers\",\n  \"//src/inspector:inspector\",\n  \"//test/cctest:cctest_sources\",  # 15 errors\n  \"//test/unittests:inspector_unittests_sources\",  # 2 errors\n  \"//third_party/icu:*\",\n]\n\ndefault_args = {\n  # Disable js dependencies like the closure compiler.\n  enable_js_protobuf = false\n  # Disable rust dependencies.\n  enable_rust = false\n}\n\n# These are the list of GN files that run exec_script. This whitelist exists\n# to force additional review for new uses of exec_script, which is strongly\n# discouraged except for gypi_to_gn calls.\nexec_script_whitelist = build_dotfile_settings.exec_script_whitelist +\n                        [ \"//build_overrides/build.gni\" ]\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.666015625,
          "content": "# Copyright 2021 the V8 project authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n# People change their names or email addresses for many reasons. This\n# list makes sure people’s preferences are respected when using Git\n# commands such as `git log` or `git blame`.\n#\n# See https://git-scm.com/docs/gitmailmap for more information.\n#\n# Please keep the list sorted.\n\nClemens Backes <clemensb@chromium.org> Clemens Hammacher <clemensh@chromium.org>\nJakob Linke <jgruber@chromium.org>\nJakob Linke <jgruber@chromium.org> <jgruber@google.com>\nTimothy Gu <timothygu@chromium.org> <timothygu99@gmail.com>\n"
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.029296875,
          "content": "[style]\nbased_on_style = yapf\n"
        },
        {
          "name": ".vpython3",
          "type": "blob",
          "size": 3.076171875,
          "content": "# This is a vpython \"spec\" file.\n#\n# It describes patterns for python wheel dependencies of the python scripts in\n# the chromium repo, particularly for dependencies that have compiled components\n# (since pure-python dependencies can be easily vendored into third_party).\n#\n# When vpython is invoked, it finds this file and builds a python VirtualEnv,\n# containing all of the dependencies described in this file, fetching them from\n# CIPD (the \"Chrome Infrastructure Package Deployer\" service). Unlike `pip`,\n# this never requires the end-user machine to have a working python extension\n# compilation environment. All of these packages are built using:\n#   https://chromium.googlesource.com/infra/infra/+/main/infra/tools/dockerbuild/\n#\n# All python scripts in the repo share this same spec, to avoid dependency\n# fragmentation.\n#\n# If you have depot_tools installed in your $PATH, you can invoke python scripts\n# in this repo by running them as you normally would run them, except\n# substituting `vpython` instead of `python` on the command line, e.g.:\n#   vpython path/to/script.py some --arguments\n#\n# Read more about `vpython` and how to modify this file here:\n#   https://chromium.googlesource.com/infra/infra/+/main/doc/users/vpython.md\n\npython_version: \"3.8\"\n\n# The default set of platforms vpython checks does not yet include mac-arm64.\n# Setting `verify_pep425_tag` to the list of platforms we explicitly must support\n# allows us to ensure that vpython specs stay mac-arm64-friendly\nverify_pep425_tag: [\n    {python: \"cp38\", abi: \"cp38\", platform: \"manylinux1_x86_64\"},\n    {python: \"cp38\", abi: \"cp38\", platform: \"linux_arm64\"},\n\n    {python: \"cp38\", abi: \"cp38\", platform: \"macosx_10_10_intel\"},\n    {python: \"cp38\", abi: \"cp38\", platform: \"macosx_11_0_arm64\"},\n\n    {python: \"cp38\", abi: \"cp38\", platform: \"win32\"},\n    {python: \"cp38\", abi: \"cp38\", platform: \"win_amd64\"}\n]\n\n# TODO(https://crbug.com/898348): Add in necessary wheels as Python3 versions\n# become available.\nwheel: <\n  name: \"infra/python/wheels/six-py2_py3\"\n  version: \"version:1.15.0\"\n>\n\nwheel: <\n  name: \"infra/python/wheels/coverage/${vpython_platform}\"\n  version: \"version:5.5.chromium.3\"\n>\n\nwheel: <\n name: \"infra/python/wheels/pbr-py2_py3\"\n version: \"version:3.0.0\"\n>\n\nwheel: <\n name: \"infra/python/wheels/funcsigs-py2_py3\"\n version: \"version:1.0.2\"\n>\n\nwheel: <\n  name: \"infra/python/wheels/mock-py2_py3\"\n  version: \"version:2.0.0\"\n>\n\nwheel: <\n  name: \"infra/python/wheels/numpy/${vpython_platform}\"\n  version: \"version:1.2x.supported.1\"\n>\n\nwheel: <\n  name: \"infra/python/wheels/protobuf-py3\"\n  version: \"version:3.19.3\"\n>\n\n# requests and its dependencies.\nwheel: <\n  name: \"infra/python/wheels/requests-py3\"\n  version: \"version:2.31.0\"\n>\nwheel: <\n  name: \"infra/python/wheels/urllib3-py2_py3\"\n  version: \"version:1.26.6\"\n>\nwheel: <\n  name: \"infra/python/wheels/idna-py2_py3\"\n  version: \"version:2.8\"\n>\nwheel: <\n  name: \"infra/python/wheels/certifi-py2_py3\"\n  version: \"version:2020.11.8\"\n>\nwheel: <\n  name: \"infra/python/wheels/charset_normalizer-py3\"\n  version: \"version:2.0.4\"\n>\nwheel: <\n  name: \"infra/python/wheels/pyfakefs-py2_py3\"\n  version: \"version:3.7.2\"\n>"
        },
        {
          "name": ".ycm_extra_conf.py",
          "type": "blob",
          "size": 5.7060546875,
          "content": "# Copyright 2015 the V8 project authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\n# Autocompletion config for YouCompleteMe in V8.\n#\n# USAGE:\n#\n#   1. Install YCM [https://github.com/Valloric/YouCompleteMe]\n#          (Googlers should check out [go/ycm])\n#\n#   2. Profit\n#\n#\n# Usage notes:\n#\n#   * You must use ninja & clang to build V8.\n#\n#   * You must have run gyp_v8 and built V8 recently.\n#\n#\n# Hacking notes:\n#\n#   * The purpose of this script is to construct an accurate enough command line\n#     for YCM to pass to clang so it can build and extract the symbols.\n#\n#   * Right now, we only pull the -I and -D flags. That seems to be sufficient\n#     for everything I've used it for.\n#\n#   * That whole ninja & clang thing? We could support other configs if someone\n#     were willing to write the correct commands and a parser.\n#\n#   * This has only been tested on gTrusty.\n\n\nimport os\nimport os.path\nimport subprocess\nimport sys\n\n\n# Flags from YCM's default config.\nflags = [\n'-DUSE_CLANG_COMPLETER',\n'-x',\n'c++',\n]\n\n\ndef PathExists(*args):\n  return os.path.exists(os.path.join(*args))\n\n\ndef FindV8SrcFromFilename(filename):\n  \"\"\"Searches for the root of the V8 checkout.\n\n  Simply checks parent directories until it finds .gclient and v8/.\n\n  Args:\n    filename: (String) Path to source file being edited.\n\n  Returns:\n    (String) Path of 'v8/', or None if unable to find.\n  \"\"\"\n  curdir = os.path.normpath(os.path.dirname(filename))\n  while not (PathExists(curdir, 'v8') and PathExists(curdir, 'v8', 'DEPS')\n             and (PathExists(curdir, '.gclient')\n                  or PathExists(curdir, 'v8', '.git'))):\n    nextdir = os.path.normpath(os.path.join(curdir, '..'))\n    if nextdir == curdir:\n      return None\n    curdir = nextdir\n  return os.path.join(curdir, 'v8')\n\n\ndef GetClangCommandFromNinjaForFilename(v8_root, filename):\n  \"\"\"Returns the command line to build |filename|.\n\n  Asks ninja how it would build the source file. If the specified file is a\n  header, tries to find its companion source file first.\n\n  Args:\n    v8_root: (String) Path to v8/.\n    filename: (String) Path to source file being edited.\n\n  Returns:\n    (List of Strings) Command line arguments for clang.\n  \"\"\"\n  if not v8_root:\n    return []\n\n  # Generally, everyone benefits from including V8's root, because all of\n  # V8's includes are relative to that.\n  v8_flags = ['-I' + os.path.join(v8_root)]\n\n  # Version of Clang used to compile V8 can be newer then version of\n  # libclang that YCM uses for completion. So it's possible that YCM's libclang\n  # doesn't know about some used warning options, which causes compilation\n  # warnings (and errors, because of '-Werror');\n  v8_flags.append('-Wno-unknown-warning-option')\n\n  # Header files can't be built. Instead, try to match a header file to its\n  # corresponding source file.\n  if filename.endswith('.h'):\n    base = filename[:-6] if filename.endswith('-inl.h') else filename[:-2]\n    for alternate in [base + e for e in ['.cc', '.cpp']]:\n      if os.path.exists(alternate):\n        filename = alternate\n        break\n    else:\n      # If this is a standalone .h file with no source, we ask ninja for the\n      # compile flags of some generic cc file ('src/utils/utils.cc'). This\n      # should contain most/all of the interesting flags for other targets too.\n      filename = os.path.join(v8_root, 'src', 'utils', 'utils.cc')\n\n  sys.path.append(os.path.join(v8_root, 'tools', 'vim'))\n  from ninja_output import GetNinjaOutputDirectory\n  out_dir = os.path.realpath(GetNinjaOutputDirectory(v8_root))\n\n  # Ninja needs the path to the source file relative to the output build\n  # directory.\n  rel_filename = os.path.relpath(os.path.realpath(filename), out_dir)\n\n  # Ask ninja how it would build our source file.\n  p = subprocess.Popen(['ninja', '-v', '-C', out_dir, '-t',\n                        'commands', rel_filename + '^'],\n                       stdout=subprocess.PIPE)\n  stdout, stderr = p.communicate()\n  if p.returncode:\n    return v8_flags\n\n  # Ninja might execute several commands to build something. We want the last\n  # clang command.\n  clang_line = None\n  for line in reversed(stdout.decode('utf-8').splitlines()):\n    if 'clang' in line:\n      clang_line = line\n      break\n  else:\n    return v8_flags\n\n  # Parse flags that are important for YCM's purposes.\n  for flag in clang_line.split(' '):\n    if flag.startswith('-I'):\n      v8_flags.append(MakeIncludePathAbsolute(flag, \"-I\", out_dir))\n    elif flag.startswith('-isystem'):\n      v8_flags.append(MakeIncludePathAbsolute(flag, \"-isystem\", out_dir))\n    elif flag.startswith('-std') or flag.startswith(\n        '-pthread') or flag.startswith('-no'):\n      v8_flags.append(flag)\n    elif flag.startswith('-') and flag[1] in 'DWFfmgOX':\n      v8_flags.append(flag)\n  return v8_flags\n\n\ndef MakeIncludePathAbsolute(flag, prefix, out_dir):\n  # Relative paths need to be resolved, because they're relative to the\n  # output dir, not the source.\n  if flag[len(prefix)] == '/':\n    return flag\n  else:\n    abs_path = os.path.normpath(os.path.join(out_dir, flag[len(prefix):]))\n    return prefix + abs_path\n\n\ndef FlagsForFile(filename):\n  \"\"\"This is the main entry point for YCM. Its interface is fixed.\n\n  Args:\n    filename: (String) Path to source file being edited.\n\n  Returns:\n    (Dictionary)\n      'flags': (List of Strings) Command line flags.\n      'do_cache': (Boolean) True if the result should be cached.\n  \"\"\"\n  v8_root = FindV8SrcFromFilename(filename)\n  v8_flags = GetClangCommandFromNinjaForFilename(v8_root, filename)\n  final_flags = flags + v8_flags\n  return {\n    'flags': final_flags,\n    'do_cache': True\n  }\n\n\ndef Settings(**kwargs):\n  if kwargs['language'] == 'cfamily':\n    return FlagsForFile(kwargs['filename'])\n  return {}\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 12.08203125,
          "content": "# Below is a list of people and organizations that have contributed\n# to the V8 project.  Names should be added to the list like so:\n#\n#   Name/Organization <email address>\n\nGoogle Inc. <*@google.com>\nThe Chromium Authors <*@chromium.org>\nSigma Designs Inc. <*@sdesigns.com>\nARM Ltd. <*@arm.com>\nHewlett-Packard Development Company, LP <*@palm.com>\nIgalia, S.L. <*@igalia.com>\nJoyent, Inc. <*@joyent.com>\nBloomberg Finance L.P. <*@bloomberg.net>\nNVIDIA Corporation <*@nvidia.com>\nBlackBerry Limited <*@blackberry.com>\nOpera Software ASA <*@opera.com>\nIntel Corporation <*@intel.com>\nLG Electronics, Inc. <*@lge.com>\nMicrosoft <*@microsoft.com>\nMIPS Technologies, Inc. <*@mips.com>\nImagination Technologies, LLC <*@imgtec.com>\nWave Computing, Inc. <*@wavecomp.com>\nLoongson Technology Corporation Limited <*@loongson.cn>\nCode Aurora Forum <*@codeaurora.org>\nHome Jinni Inc. <*@homejinni.com>\nIBM Inc. <*@*.ibm.com>\nIBM Inc. <*@ibm.com>\nRaptor Computing Systems, LLC <*@raptorcs.com>\nRed Hat Inc. <*@redhat.com>\nSamsung <*@*.samsung.com>\nSamsung <*@samsung.com>\nRT-RK Computer Based System <*@rt-rk.com>\nAmazon, Inc <*@amazon.com>\nST Microelectronics <*@st.com>\nYandex LLC <*@yandex-team.ru>\nStrongLoop, Inc. <*@strongloop.com>\nFacebook, Inc. <*@fb.com>\nFacebook, Inc. <*@oculus.com>\nVewd Software AS <*@vewd.com>\nGroupon <*@groupon.com>\nMeteor Development Group <*@meteor.com>\nCloudflare, Inc. <*@cloudflare.com>\nJulia Computing, Inc. <*@juliacomputing.com>\nCodeWeavers, Inc. <*@codeweavers.com>\nAlibaba, Inc. <*@alibaba-inc.com>\nSiFive, Inc. <*@sifive.com>\n\nAapo Alasuutari <aapo.alasuutari@gmail.com>\nAaron Bieber <deftly@gmail.com>\nAaron O'Mullan <aaron.omullan@gmail.com>\nAbdulla Kamar <abdulla.kamar@gmail.com>\nAdam Kallai <kadam@inf.u-szeged.hu>\nAkinori MUSHA <knu@FreeBSD.org>\nAlessandro Pignotti <alessandro@leaningtech.com>\nAlex Kodat <akodat@rocketsoftware.com>\nAlexander Botero-Lowry <alexbl@FreeBSD.org>\nAlexander Karpinsky <homm86@gmail.com>\nAlexander Neville <dark@volatile.bz>\nAlexandre Vassalotti <avassalotti@gmail.com>\nAlexey Pavlyutkin <alexey.pavlyutkin@syntacore.com>\nAlexis Campailla <alexis@janeasystems.com>\nAllan Sandfeld Jensen <allan.jensen@qt.io>\nAmos Lim <eui-sang.lim@samsung.com>\nAndreas Anyuru <andreas.anyuru@gmail.com>\nAndrei Kashcha <anvaka@gmail.com>\nAndreu Botella <andreu@andreubotella.com>\nAndrew Paprocki <andrew@ishiboo.com>\nAnna Henningsen <anna@addaleax.net>\nAntoine du Hamel <duhamelantoine1995@gmail.com>\nAnton Bershanskiy <8knots@protonmail.com>\nAnton Bikineev <ant.bikineev@gmail.com>\nAo Wang <wangao.james@bytedance.com>\nArchil Sharashenidze <achosharashenidze@gmail.com>\nArtem Kobzar <artem.kobzar@jetbrains.com>\nArthur Islamov <arthur@islamov.ai>\nAsuka Shikina <shikina.asuka@gmail.com>\nAurèle Barrière <aurele.barriere@gmail.com>\nBala Avulapati <bavulapati@gmail.com>\nBangfu Tao <bangfu.tao@samsung.com>\nBen Coe <bencoe@gmail.com>\nBen Newman <ben@meteor.com>\nBen Noordhuis <info@bnoordhuis.nl>\nBenjamin Tan <demoneaux@gmail.com>\nBert Belder <bertbelder@gmail.com>\nBrendon Tiszka <btiszka@gmail.com>\nBrice Dobry <brice.dobry@futurewei.com>\nBruno Pitrus <brunopitrus@hotmail.com>\nBurcu Dogan <burcujdogan@gmail.com>\nCaitlin Potter <caitpotter88@gmail.com>\nChao Wang <chao.w@rioslab.org>\nCharles Kerr <charles@charleskerr.com>\nCheng Zhao <zcbenz@gmail.com>\nChengzhong Wu <legendecas@gmail.com>\nChoongwoo Han <cwhan.tunz@gmail.com>\nChris Nardi <hichris123@gmail.com>\nChristopher A. Taylor <chris@gameclosure.com>\nChristopher Nady <nady.christopher@gmail.com>\nColin Ihrig <cjihrig@gmail.com>\nCong Zuo <zckevinzc@gmail.com>\nCraig Schlenter <craig.schlenter@gmail.com>\nDaniel Andersson <kodandersson@gmail.com>\nDaniel Bevenius <daniel.bevenius@gmail.com>\nDaniel Dromboski <dandromb@gmail.com>\nDaniel James <dnljms@gmail.com>\nDaniel Shelton <d1.shelton@samsung.com>\nDaniil Bakin <bd.bakin@gmail.com>\nDanylo Boiko <danielboyko02@gmail.com>\nDarshan Sen <raisinten@gmail.com>\nDavid Carlier <devnexen@gmail.com>\nDavid Manouchehri <david@davidmanouchehri.com>\nDavid Sanders <dsanders11@ucsbalum.com>\nDebadree Chatterjee <debadree333@gmail.com>\nDeepak Mohan <hop2deep@gmail.com>\nDeon Dior <diaoyuanjie@gmail.com>\nDerek Tu <derek.t@rioslab.org>\nDivy Srivastava <dj.srivastava23@gmail.com>\nDmitry Bezhetskov <dima00782@gmail.com>\nDominic Chen <d.c.ddcc@gmail.com>\nDominic Farolini <domfarolino@gmail.com>\nDouglas Crosher <dtc-v8@scieneer.com>\nDusan Milosavljevic <dusan.m.milosavljevic@gmail.com>\nEden Wang <nedenwang@tencent.com>\nEdoardo Marangoni <edoardo@wasmer.io>\nElisha Hollander <just4now666666@gmail.com>\nEric Rannaud <eric.rannaud@gmail.com>\nErich Ocean <erich.ocean@me.com>\nEvan Lucas <evan.lucas@help.com>\nFedor Indutny <fedor@indutny.com>\nFelix Geisendörfer <haimuiba@gmail.com>\nFeng Yu <f3n67u@gmail.com>\nFilipe David Manana <fdmanana@gmail.com>\nFrank Lemanschik <frank@dspeed.eu>\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com>\nGao Sheng <gaosheng08@meituan.com>\nGeoffrey Garside <ggarside@gmail.com>\nGergely Nagy <ngg@ngg.hu>\nGilang Mentari Hamidy <gilang@hamidy.net>\nGiovanny Gutierrez <giovannygutierrez@gmail.com>\nGus Caplan <me@gus.host>\nGwang Yoon Hwang <ryumiel@company100.net>\nHaichuan Wang <hc.opensource@gmail.com>\nHannu Trey <hannu.trey@gmail.com>\nHarshal Nandigramwar <pro.bbcom18@gmail.com>\nHarshil Jain <twitharshil@gmail.com>\nHenrique Ferreiro <henrique.ferreiro@gmail.com>\nHelmut Januschka <helmut@januschka.com>\nHirofumi Mako <mkhrfm@gmail.com>\nHisham Muhammad <hisham@gobolinux.org>\nHonggyu Kim <honggyu.kp@gmail.com>\nHuáng Jùnliàng <jlhwung@gmail.com>\nHyeockJin Kim <kherootz@gmail.com>\nIain Ireland <iireland@mozilla.com>\nIlya Gavrilin <ilya.gavrilin@syntacore.com>\nIngvar Stepanyan <me@rreverser.com>\nIoseb Dzmanashvili <ioseb.dzmanashvili@gmail.com>\nIsiah Meadows <impinball@gmail.com>\nJaime Bernardo <jaime@janeasystems.com>\nJake Hughes <jh@jakehughes.uk>\nJames M Snell <jasnell@gmail.com>\nJames Pike <g00gle@chilon.net>\nJan Krems <jan.krems@gmail.com>\nJan de Mooij <jandemooij@gmail.com>\nJanusz Majnert <jmajnert@gmail.com>\nJavad Amiri <javad.amiri@anu.edu.au>\nJay Freeman <saurik@saurik.com>\nJeroen Bobbeldijk <jerbob92@gmail.com>\nJérôme Vouillon <jerome.vouillon@gmail.com>\nJesper van den Ende <jespertheend@gmail.com>\nJi Qiu <qiuji@iscas.ac.cn>\nJiawen Geng <technicalcute@gmail.com>\nJiaxun Yang <jiaxun.yang@flygoat.com>\nJoel Stanley <joel@jms.id.au>\nJohan Bergström <johan@bergstroem.nu>\nJohan Levin <johan13@gmail.com>\nJohn Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>\nJojo R <rjiejie@gmail.com>\nJonathan Liu <net147@gmail.com>\nJuan Arboleda <soyjuanarbol@gmail.com>\nJulien Brianceau <jbriance@cisco.com>\nJunHo Seo <sejunho@gmail.com>\nJunha Park <jpark3@scu.edu>\nJunming Huang <kiminghjm@gmail.com>\nKang-Hao (Kenny) Lu <kennyluck@csail.mit.edu>\nKarl Skomski <karl@skomski.com>\nKeith Smiley <keithbsmiley@gmail.com>\nKevin Gibbons <bakkot@gmail.com>\nKeyhan Vakil <kvakil@googlecontrib.kvakil.me>\nKris Selden <kris.selden@gmail.com>\nKyounga Ra <kyounga@alticast.com>\nLevi Zim <rsworktech@outlook.com>\nLoo Rong Jie <loorongjie@gmail.com>\nLu Yahan <yahan@iscas.ac.cn>\nLudovic Mermod <ludovic.mermod@gmail.com>\nLuis Reis <luis.m.reis@gmail.com>\nLuke Albao <lukealbao@gmail.com>\nLuke Zarko <lukezarko@gmail.com>\nMa Aiguo <maaiguo@uniontech.com>\nMaciej Małecki <me@mmalecki.com>\nMarcel Laverdet <marcel@laverdet.com>\nMarcin Cieślak <saper@marcincieslak.com>\nMarcin Wiącek <marcin@mwiacek.com>\nMarisa Kirisame <u1319884@utah.edu>\nMartin Bidlingmaier <martin.bidlingmaier@gmail.com>\nMateusz Czeladka <mateusz.szczap@gmail.com>\nMatheus Marchini <mat@mmarchini.me>\nMatheus Marchini <mmarchini@netflix.com>\nMathias Bynens <mathias@qiwi.be>\nMatt Hanselman <mjhanselman@gmail.com>\nMatthew Sporleder <msporleder@gmail.com>\nMaxim Mazurok <maxim@mazurok.com>\nMaxim Mossienko <maxim.mossienko@gmail.com>\nMd Hasibul Hasan <hasibulhasan873@gmail.com>\nMeir Shpilraien <meir@redis.com>\nMeng Tan <tannal2409@gmail.com>\nMichael Lutz <michi@icosahedron.de>\nMichael Mclaughlin <m8ch88l@gmail.com>\nMichael Smith <mike@w3.org>\nMichaël Zasso <mic.besace@gmail.com>\nMihir Shah <mihirshah.11204@gmail.com>\nMika Fischer <mika.fischer@zoopnet.de>\nMike Gilbert <floppymaster@gmail.com>\nMike Pennisi <mike@mikepennisi.com>\nMikhail Gusarov <dottedmag@dottedmag.net>\nMilton Chiang <milton.chiang@mediatek.com>\nMu Tao <pamilty@gmail.com>\nMyeong-bo Shim <m0609.shim@samsung.com>\nNicolas Antonius Ernst Leopold Maria Kaiser <nikai@nikai.net>\nNicolò Ribaudo <nicolo.ribaudo@gmail.com>\nNiek van der Maas <mail@niekvandermaas.nl>\nNiklas Hambüchen <mail@nh2.me>\nNoj Vek <nojvek@gmail.com>\nOleksandr Chekhovskyi <oleksandr.chekhovskyi@gmail.com>\nOliver Dunk <oliver@oliverdunk.com>\nPaolo Giarrusso <p.giarrusso@gmail.com>\nPatrick Gansterer <paroga@paroga.com>\nPaul Lind <plind44@gmail.com>\nPavel Medvedev <pmedvedev@gmail.com>\nPedro Falcato <pedro.falcato@gmail.com>\nPeng Fei <pfgenyun@gmail.com>\nPeng Wu <peng.w@rioslab.org>\nPeng-Yu Chen <pengyu@libstarrify.so>\nPeter Rybin <peter.rybin@gmail.com>\nPeter Varga <pvarga@inf.u-szeged.hu>\nPeter Wong <peter.wm.wong@gmail.com>\nPhistucK <phistuck@gmail.com>\nPierrick Bouvier <pierrick.bouvier@linaro.org>\nPunith B Nayak <npunith125@gmail.com>\nRafal Krypa <rafal@krypa.net>\nRaul Tambre <raul@tambre.ee>\nRay Glover <ray@rayglover.net>\nRay Wang <ray@isrc.iscas.ac.cn>\nRefael Ackermann <refack@gmail.com>\nRene Rebe <rene@exactcode.de>\nReza Yazdani <ryazdani@futurewei.com>\nRick Waldron <waldron.rick@gmail.com>\nRob Wu <rob@robwu.nl>\nRobert Meijer <robert.s.meijer@gmail.com>\nRobert Mustacchi <rm@fingolfin.org>\nRobert Nagy <robert.nagy@gmail.com>\nRobert O'Callahan <rocallahan@gmail.com>\nRong Wang <wangrong089@gmail.com>\nRoss Kirsling <rkirsling@gmail.com>\nRuben Bridgewater <ruben@bridgewater.de>\nRyan Dahl <ry@tinyclouds.org>\nSakthipriyan Vairamani (thefourtheye) <thechargingvolcano@gmail.com>\nSander Mathijs van Veen <sander@leaningtech.com>\nSandro Santilli <strk@keybit.net>\nSanjoy Das <sanjoy@playingwithpointers.com>\nSam James <sam@gentoo.org>\nSébastien Doeraene <sjrdoeraene@gmail.com>\nSeo Sanghyeon <sanxiyn@gmail.com>\nShawn Anastasio <shawnanastasio@gmail.com>\nShawn Presser <shawnpresser@gmail.com>\nSho Miyamoto <me@shqld.dev>\nStefan Penner <stefan.penner@gmail.com>\nStefan Stojanovic <stefko.stojanovic@gmail.com>\nStephan Hartmann <stha09@googlemail.com>\nStephen Belanger <stephen.belanger@datadoghq.com>\nSylvestre Ledru <sledru@mozilla.com>\nTakeshi Yoneda <takeshi@tetrate.io>\nTaketoshi Aono <brn@b6n.ch>\nTao Liqiang <taolq@outlook.com>\nTao Wang <tao.wang.2261@gmail.com>\nTeddy Katz <teddy.katz@gmail.com>\nThomas Young <wenzhang5800@gmail.com>\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com>\nTianping Yang <yangtianping@oppo.com>\nTimo Teräs <timo.teras@iki.fi>\nTobias Burnus <burnus@net-b.de>\nTobias Nießen <tniessen@tnie.de>\nUjjwal Sharma <usharma1998@gmail.com>\nVadim Gorbachev <bmsdave@gmail.com>\nVarun Varada <varuncvarada@gmail.com>\nVictor Costan <costan@gmail.com>\nVictor Polevoy <fx@thefx.co>\nVlad Burlik <vladbph@gmail.com>\nVladimir Kempik <vladimir.kempik@syntacore.com>\nVladimir Krivosheev <develar@gmail.com>\nVladimir Shutoff <vovan@shutoff.ru>\nWael Almattar <waelsy123@gmail.com>\nWang Chen <wangchen20@iscas.ac.cn>\nWANG Xuerui <git@xen0n.name>\nWei Wu <lazyparser@gmail.com>\nWenlu Wang <kingwenlu@gmail.com>\nWenming Yang <yangwenming@bytedance.com>\nWenyu Zhao <wenyu.zhao@anu.edu.au>\nWiktor Garbacz <wiktor.garbacz@gmail.com>\nWouter Vermeiren <wouter.vermeiren@essensium.com>\nXiaofang Zou <zouxiaofang@iscas.ac.cn>\nXiaoyin Liu <xiaoyin.l@outlook.com>\nYagiz Nizipli <yagiz@nizipli.com>\nYanbo Li <lybvinci@gmail.com>\nYannic Bonenberger <contact@yannic-bonenberger.com>\nYi Wang <wangyi8848@gmail.com>\nYong Wang <ccyongwang@tencent.com>\nYoufeng Hao <ajihyf@gmail.com>\nYu Yin <xwafish@gmail.com>\nYujie Wang <hex6770@gmail.com>\nYuri Iozzelli <yuri@leaningtech.com>\nYuri Gaevsky <yuri.gaevsky@syntacore.com>\nYusif Khudhur <yusif.khudhur@gmail.com>\nYuxiang Cao <caoyxsh@outlook.com>\nZac Hansen <xaxxon@gmail.com>\nZeynep Cankara <zeynepcankara402@gmail.com>\nZhao Jiazhong <kyslie3100@gmail.com>\nZhao Qin <qzmiss@gmail.com>\nZhaojun Meng <zhaojun.meng@gmail.com>\nZheng Liu <i6122f@gmail.com>\nZhongping Wang <kewpie.w.zp@gmail.com>\n柳荣一 <admin@web-tinker.com>\nYang Xiang <xiangyangemail@gmail.com>\nKotaro Ohsugi <dec4m4rk@gmail.com>\nJing Peiyang <jingpeiyang@eswincomputing.com>\nmagic-akari <akari.ccino@gmail.com>\nRyuhei Shima <shimaryuhei@gmail.com>\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 176.9990234375,
          "content": "# Copyright 2021 the V8 project authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\nload(\"@bazel_skylib//lib:selects.bzl\", \"selects\")\nload(\"@rules_python//python:defs.bzl\", \"py_binary\", \"py_test\")\nload(\"@v8_python_deps//:requirements.bzl\", \"requirement\")\nload(\n    \"@v8//:bazel/defs.bzl\",\n    \"v8_binary\",\n    \"v8_build_config\",\n    \"v8_config\",\n    \"v8_custom_config\",\n    \"v8_flag\",\n    \"v8_int\",\n    \"v8_library\",\n    \"v8_mksnapshot\",\n    \"v8_string\",\n    \"v8_torque_files\",\n)\nload(\":bazel/v8-non-pointer-compression.bzl\", \"v8_binary_non_pointer_compression\")\n\n# =================================================\n# Flags\n# =================================================\n\n# V8 GN flags not currently supported:\n# v8_custom_deps\n# v8_embed_script\n# v8_embedder_string\n# v8_array_buffer_internal_field_count\n# v8_array_buffer_view_internal_field_count\n# v8_promise_internal_field_count\n# v8_enable_vtunetracemark\n# v8_enable_fast_torque\n# v8_win64_unwinding_info\n# v8_enable_31bit_smis_on_64bit_arch\n# v8_enable_trace_unoptimized\n# v8_enable_trace_ignition\n# v8_enable_trace_baseline_exec\n# v8_enable_trace_feedback_updates\n# v8_enable_atomic_object_field_writes\n# v8_enable_concurrent_marking\n# v8_enable_conservative_stack_scanning\n# v8_enable_direct_handle\n# v8_enable_local_off_stack_check\n# v8_enable_ignition_dispatch_counting\n# v8_enable_builtins_optimization\n# v8_enable_builtins_profiling\n# v8_enable_builtins_profiling_verbose\n# v8_builtins_profiling_log_file\n# v8_enable_builtins_reordering\n# v8_postmortem_support\n# v8_use_siphash\n# v8_no_inline\n# v8_os_page_size\n# v8_can_use_fpu_instructions\n# v8_use_mips_abi_hardfloat\n# v8_enable_gdbjit\n# v8_check_header_includes\n# v8_enable_lazy_source_positions\n# v8_disable_write_barriers\n# v8_enable_unconditional_write_barriers\n# v8_enable_single_generation\n# v8_enable_regexp_interpreter_threaded_dispatch\n# v8_verify_torque_generation_invariance\n# v8_enable_snapshot_compression\n# v8_control_flow_integrity\n# v8_enable_sandbox\n# cppgc_enable_caged_heap\n# cppgc_enable_api_checks\n# cppgc_enable_check_assignments_in_prefinalizers\n# cppgc_enable_slim_write_barrier\n# cppgc_enable_object_names\n# cppgc_enable_pointer_compression\n# cppgc_enable_slow_api_checks\n# cppgc_enable_verify_heap\n# cppgc_enable_young_generation\n# v8_enable_zone_compression\n# v8_enable_precise_zone_stats\n# v8_enable_swiss_name_dictionary\n# v8_generate_external_defines_header\n# v8_dict_property_const_tracking\n# v8_enable_map_packing\n# v8_enable_javascript_promise_hooks\n# v8_enable_allocation_folding\n# v8_allocation_site_tracking\n\nv8_flag(name = \"v8_android_log_stdout\")\n\nv8_flag(name = \"v8_annotate_torque_ir\")\n\nv8_flag(name = \"v8_code_comments\")\n\nv8_flag(\n    name = \"v8_deprecation_warnings\",\n    default = True,\n)\n\nv8_flag(\n    name = \"v8_imminent_deprecation_warnings\",\n    default = True,\n)\n\nv8_flag(name = \"v8_enable_backtrace\")\n\nv8_flag(name = \"v8_enable_debug_code\")\n\nv8_flag(name = \"v8_enable_disassembler\")\n\nv8_flag(name = \"v8_enable_local_handle_zapping\")\n\nv8_flag(name = \"v8_enable_global_handle_zapping\")\n\nv8_flag(name = \"v8_enable_runtime_call_stats\")\n\nv8_flag(name = \"v8_enable_hugepage\")\n\nv8_flag(name = \"v8_enable_fast_mksnapshot\")\n\nv8_flag(name = \"v8_enable_future\")\n\n# NOTE: Transitions are not recommended in library targets:\n# https://groups.google.com/a/google.com/g/c-toolchain-team/c/W4nmWonD0ow/m/rLGyIL4YIQAJ\n# Therefore we create multiple targets with and without ICU, instead of\n# implementing the flag v8_enable_i18n_support.\n\nv8_flag(\n    name = \"v8_enable_lazy_source_positions\",\n    default = True,\n)\n\nv8_flag(name = \"v8_enable_object_print\")\n\nv8_flag(name = \"v8_enable_slow_dchecks\")\n\nv8_flag(name = \"v8_enable_snapshot_code_comments\")\n\nv8_flag(name = \"v8_enable_snapshot_native_code_counters\")\n\nv8_flag(name = \"v8_enable_static_roots\")\n\nv8_flag(name = \"v8_enable_trace_maps\")\n\nv8_flag(name = \"v8_enable_v8_checks\")\n\nv8_flag(name = \"v8_enable_verify_csa\")\n\nv8_flag(name = \"v8_enable_verify_heap\")\n\nv8_flag(name = \"v8_enable_verify_predictable\")\n\nv8_flag(name = \"v8_enable_test_features\")\n\nv8_flag(name = \"v8_wasm_random_fuzzers\")\n\nv8_flag(\n    name = \"v8_enable_maglev\",\n    default = True,\n)\n\n# Default setting for v8_enable_maglev\nselects.config_setting_group(\n    name = \"maglev_by_default\",\n    match_any = [\n        \"@v8//bazel/config:v8_target_x64\",\n        \"@v8//bazel/config:v8_target_arm64\",\n    ],\n)\n\n# Maglev enabled option.\nselects.config_setting_group(\n    name = \"enable_maglev\",\n    match_all = [\n        \":is_v8_enable_maglev\",\n        \":maglev_by_default\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"enable_maglev_x64\",\n    match_all = [\n        \":enable_maglev\",\n        \"@v8//bazel/config:v8_target_x64\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"enable_maglev_arm64\",\n    match_all = [\n        \":enable_maglev\",\n        \"@v8//bazel/config:v8_target_arm64\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"enable_maglev_riscv\",\n    match_all = [\n        \":enable_maglev\",\n        \"@v8//bazel/config:v8_target_riscv64\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"enable_maglev_arm\",\n    match_all = [\n        \":enable_maglev\",\n        \"@v8//bazel/config:v8_target_arm\",\n    ],\n)\n\nv8_flag(\n    name = \"v8_enable_turbofan\",\n    default = True,\n)\n\nv8_flag(\n    name = \"v8_enable_webassembly\",\n    default = True,\n)\n\nv8_flag(\n    name = \"v8_enable_drumbrake\",\n    default = False,\n)\n\nv8_flag(\n    name = \"v8_enable_drumbrake_tracing\",\n    default = False,\n)\n\nselects.config_setting_group(\n    name = \"enable_drumbrake_x64\",\n    match_all = [\n        \":is_v8_enable_drumbrake\",\n        \"@v8//bazel/config:v8_target_x64\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"enable_drumbrake_arm64\",\n    match_all = [\n        \":is_v8_enable_drumbrake\",\n        \"@v8//bazel/config:v8_target_arm64\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"is_drumbrake_trap_handling_platform\",\n    match_any = [\n        \"@v8//bazel/config:is_linux\",\n        \"@v8//bazel/config:is_macos\",\n        \"@v8//bazel/config:is_windows\",\n    ],\n)\n\nselects.config_setting_group(\n    name = \"v8_drumbrake_bounds_checks\",\n    match_all = [\n        \":enable_drumbrake_x64\",\n        \":is_drumbrake_trap_handling_platform\",\n    ],\n)\n\nv8_flag(\n    name = \"v8_jitless\",\n    default = False,\n)\n\nv8_int(\n    name = \"v8_typed_array_max_size_in_heap\",\n    default = 64,\n)\n\n# We use a string flag to create a 3 value-logic.\n# If no explicit value for v8_enable_pointer_compression, we set it to 'none'.\nv8_string(\n    name = \"v8_enable_pointer_compression\",\n    default = \"none\",\n)\n\n# Default setting for v8_enable_pointer_compression.\nconfig_setting(\n    name = \"v8_enable_pointer_compression_is_none\",\n    flag_values = {\n        \":v8_enable_pointer_compression\": \"none\",\n    },\n)\n\n# Explicity defined v8_enable_pointer_compression.\nconfig_setting(\n    name = \"v8_enable_pointer_compression_is_true\",\n    flag_values = {\n        \":v8_enable_pointer_compression\": \"True\",\n    },\n)\n\n# Default setting for v8_enable_pointer_compression when target is x64.\nselects.config_setting_group(\n    name = \"v8_target_x64_default_pointer_compression\",\n    match_all = [\n        \":v8_enable_pointer_compression_is_none\",\n        \"@v8//bazel/config:v8_target_x64\",\n    ],\n)\n\n# Default setting for v8_enable_pointer_compression when target is arm64.\nselects.config_setting_group(\n    name = \"v8_target_arm64_default_pointer_compression\",\n    match_all = [\n        \":v8_enable_pointer_compression_is_none\",\n        \"@v8//bazel/config:v8_target_arm64\",\n    ],\n)\n\n# v8_enable_pointer_compression is valid whenever it is explicitly defined\n# or we have the default settings for targets x64 and arm64.\nselects.config_setting_group(\n    name = \"is_v8_enable_pointer_compression\",\n    match_any = [\n        \":v8_enable_pointer_compression_is_true\",\n        \":v8_target_x64_default_pointer_compression\",\n        \":v8_target_arm64_default_pointer_compression\",\n    ],\n)\n\n# Pointer cage, true by default if v8_enable_pointer_compression.\nv8_flag(\n    name = \"v8_enable_pointer_compression_shared_cage\",\n    default = True,\n)\n\n# Enable shared cage if v8_enable_pointer_compression\n# and v8_enable_pointer_compression_shared_cage.\nselects.config_setting_group(\n    name = \"enable_pointer_compression_shared_cage\",\n    match_all = [\n        \":is_v8_enable_pointer_compression\",\n        \":is_v8_enable_pointer_compression_shared_cage\",\n    ],\n)\n\n# Enable multiple cages if v8_enable_pointer_compression and\n# NOT v8_enable_pointer_compression_shared_cage.\nselects.config_setting_group(\n    name = \"enable_pointer_compression_multiple_cages\",\n    match_all = [\n        \":is_v8_enable_pointer_compression\",\n        \":is_not_v8_enable_pointer_compression_shared_cage\",\n    ],\n)\n\n# Enable support for external code range relative to the pointer compression\n# cage.\nv8_flag(\n    name = \"v8_enable_external_code_space\",\n    default = True,\n)\n\n# Enable support for external code range if enable_pointer_compression_shared_cage and\n# v8_enable_external_code_space.\nselects.config_setting_group(\n    name = \"enable_external_code_space\",\n    match_all = [\n        \":enable_pointer_compression_shared_cage\",\n        \":is_v8_enable_external_code_space\",\n    ],\n)\n\n# We use a string flag to create a 3 value-logic.\n# If no explicit value for v8_enable_short_builtin_calls, we set it to 'none'.\nv8_string(\n    name = \"v8_enable_short_builtin_calls\",\n    default = \"none\",\n)\n\n# Default setting for v8_enable_pointer_compression.\nconfig_setting(\n    name = \"v8_enable_short_builtin_calls_is_none\",\n    flag_values = {\n        \":v8_enable_short_builtin_calls\": \"none\",\n    },\n)\n\n# Explicity defined v8_enable_pointer_compression.\nconfig_setting(\n    name = \"v8_enable_short_builtin_calls_is_true\",\n    flag_values = {\n        \":v8_enable_short_builtin_calls\": \"True\",\n    },\n)\n\n# Enable VTune jit profiling\nv8_flag(\n    name = \"v8_enable_vtunejit\",\n    default = False,\n)\n\n# Default setting for v8_enable_short_builtin_calls when target is x64.\n# Disable short calls when pointer compression is not enabled.\nselects.config_setting_group(\n    name = \"v8_target_x64_default_short_builtin_calls\",\n    match_all = [\n        \":v8_enable_short_builtin_calls_is_none\",\n        \"@v8//bazel/config:v8_target_x64\",\n        \":is_v8_enable_pointer_compression\",\n    ],\n)\n\n# Default setting for v8_enable_short_builtin_calls when target is arm64, but not Android.\nselects.config_setting_group(\n    name = \"v8_target_arm64_default_short_builtin_calls\",\n    match_all = [\n        \":v8_enable_short_builtin_calls_is_none\",\n        \"@v8//bazel/config:v8_target_arm64\",\n        \"@v8//bazel/config:is_not_android\",\n    ],\n)\n\n# v8_enable_short_builtin_calls is valid whenever it is explicitly defined\n# or we have the default settings for targets x64 and arm64.\n# TODO(victorgomes): v8_enable_short_builtin_calls should not be enabled when CFI is enabled.\nselects.config_setting_group(\n    name = \"is_v8_enable_short_builtin_calls\",\n    match_any = [\n        \":v8_enable_short_builtin_calls_is_true\",\n        \":v8_target_x64_default_short_builtin_calls\",\n        \":v8_target_arm64_default_short_builtin_calls\",\n    ],\n)\n\n# Enable -rdynamic.\nselects.config_setting_group(\n    name = \"should_add_rdynamic\",\n    match_all = [\n        \"@v8//bazel/config:is_linux\",\n        \":is_v8_enable_backtrace\",\n    ],\n)\n\nv8_custom_config(name = \"default\")\n\nv8_config(\n    name = \"define_flags\",\n    conditional_defines = {\n        \"v8_android_log_stdout\": \"V8_ANDROID_LOG_STDOUT\",\n        \"v8_code_comments\": \"V8_CODE_COMMENTS\",\n        \"v8_deprecation_warnings\": \"V8_DEPRECATION_WARNINGS\",\n        \"v8_imminent_deprecation_warnings\": \"V8_IMMINENT_DEPRECATION_WARNINGS\",\n        \"v8_enable_debug_code\": \"V8_ENABLE_DEBUG_CODE\",\n        \"v8_enable_disassembler\": \"ENABLE_DISASSEMBLER\",\n        \"v8_enable_global_handle_zapping\": \"ENABLE_GLOBAL_HANDLE_ZAPPING\",\n        \"v8_enable_local_handle_zapping\": \"ENABLE_LOCAL_HANDLE_ZAPPING\",\n        \"v8_enable_hugepage\": \"ENABLE_HUGEPAGE\",\n        \"v8_enable_future\": \"V8_ENABLE_FUTURE\",\n        \"v8_enable_lazy_source_positions\": \"V8_ENABLE_LAZY_SOURCE_POSITIONS\",\n        \"v8_enable_object_print\": \"OBJECT_PRINT\",\n        \"v8_enable_slow_dchecks\": \"ENABLE_SLOW_DCHECKS\",\n        \"v8_enable_runtime_call_stats\": \"V8_RUNTIME_CALL_STATS\",\n        \"v8_enable_snapshot_native_code_counters\": \"V8_SNAPSHOT_NATIVE_CODE_COUNTERS\",\n        \"v8_enable_static_roots\": \"V8_STATIC_ROOTS\",\n        \"v8_enable_trace_maps\": \"V8_TRACE_MAPS\",\n        \"v8_enable_turbofan\": \"V8_ENABLE_TURBOFAN\",\n        \"v8_enable_v8_checks\": \"V8_ENABLE_CHECKS\",\n        \"v8_enable_verify_csa\": \"ENABLE_VERIFY_CSA\",\n        \"v8_enable_verify_heap\": \"VERIFY_HEAP\",\n        \"v8_enable_verify_predictable\": \"VERIFY_PREDICTABLE\",\n        \"v8_enable_webassembly\": \"V8_ENABLE_WEBASSEMBLY\",\n        \"v8_enable_drumbrake\": \"V8_ENABLE_DRUMBRAKE\",\n        \"v8_enable_drumbrake_tracing\": \"V8_ENABLE_DRUMBRAKE_TRACING\",\n        \"v8_jitless\": \"V8_JITLESS\",\n        \"v8_enable_vtunejit\": \"ENABLE_VTUNE_JIT_INTERFACE\",\n    },\n    defines = [\n        \"GOOGLE3\",\n        \"V8_ADVANCED_BIGINT_ALGORITHMS\",\n        \"V8_CONCURRENT_MARKING\",\n        \"V8_ENABLE_SPARKPLUG\",\n        \"V8_ENABLE_EXTENSIBLE_RO_SNAPSHOT\",\n        \"V8_ENABLE_CONTINUATION_PRESERVED_EMBEDDER_DATA\",\n        \"V8_TLS_USED_IN_LIBRARY\",\n    ] + select({\n        \"@v8//bazel/config:is_debug\": [\n            \"DEBUG\",\n            \"V8_ENABLE_CHECKS\",\n        ],\n        \"//conditions:default\": [],\n    }) + select(\n        {\n            \"@v8//bazel/config:v8_target_ia32\": [\"V8_TARGET_ARCH_IA32\"],\n            \"@v8//bazel/config:v8_target_x64\": [\"V8_TARGET_ARCH_X64\"],\n            \"@v8//bazel/config:v8_target_arm\": [\n                \"V8_TARGET_ARCH_ARM\",\n                \"CAN_USE_ARMV7_INSTRUCTIONS\",\n                \"CAN_USE_VFP3_INSTRUCTIONS\",\n            ],\n            \"@v8//bazel/config:v8_target_arm64\": [\"V8_TARGET_ARCH_ARM64\"],\n            \"@v8//bazel/config:v8_target_s390x\": [\n                \"V8_TARGET_ARCH_S390X\"\n            ],\n            \"@v8//bazel/config:v8_target_riscv64\": [\n                # NOTE: Bazel rules for riscv64 weren't tested on a real system.\n                \"V8_TARGET_ARCH_RISCV64\",\n                \"CAN_USE_FPU_INSTRUCTIONS\",\n            ],\n            \"@v8//bazel/config:v8_target_ppc64le\": [\n                # NOTE: Bazel rules for ppc64le weren't tested on a real system.\n                \"V8_TARGET_ARCH_PPC64\"\n            ],\n        },\n        no_match_error = \"Please specify a target cpu supported by v8\",\n    ) + select({\n        \"@v8//bazel/config:is_android\": [\n            \"V8_HAVE_TARGET_OS\",\n            \"V8_TARGET_OS_ANDROID\",\n        ],\n        \"@v8//bazel/config:is_linux\": [\n            \"V8_HAVE_TARGET_OS\",\n            \"V8_TARGET_OS_LINUX\",\n        ],\n        \"@v8//bazel/config:is_macos\": [\n            \"V8_HAVE_TARGET_OS\",\n            \"V8_TARGET_OS_MACOS\",\n        ],\n        \"@v8//bazel/config:is_windows\": [\n            \"V8_HAVE_TARGET_OS\",\n            \"V8_TARGET_OS_WIN\",\n            \"UNICODE\",\n            \"_UNICODE\",\n            \"_CRT_RAND_S\",\n            \"_WIN32_WINNT=0x0A00\",\n        ],\n    }) + select({\n        \":is_v8_enable_pointer_compression\": [\n            \"V8_COMPRESS_POINTERS\",\n            \"V8_31BIT_SMIS_ON_64BIT_ARCH\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_pointer_compression_shared_cage\": [\n            \"V8_COMPRESS_POINTERS_IN_SHARED_CAGE\",\n        ],\n        \":enable_pointer_compression_multiple_cages\": [\n            \"V8_COMPRESS_POINTERS_IN_MULTIPLE_CAGES\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_short_builtin_calls\": [\n            \"V8_SHORT_BUILTIN_CALLS\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_external_code_space\": [\n            \"V8_EXTERNAL_CODE_SPACE\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_maglev\": [\n            \"V8_ENABLE_MAGLEV\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_test_features\": [\n            \"V8_ENABLE_ALLOCATION_TIMEOUT\",\n            \"V8_ENABLE_FORCE_SLOW_PATH\",\n            \"V8_ENABLE_DOUBLE_CONST_STORE_CHECK\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \"v8_drumbrake_bounds_checks\": [\n            \"V8_DRUMBRAKE_BOUNDS_CHECKS\"\n        ],\n        \"//conditions:default\": [],\n    }),\n\n    deps = [\":default\"],\n)\n\n# =================================================\n# File group rules\n# =================================================\n\nfilegroup(\n    name = \"public_header_files\",\n    srcs = glob([\"include/**/*.h\"]),\n)\n\nfilegroup(\n    name = \"public_wasm_c_api_header_files\",\n    srcs = [\n        \"third_party/wasm-api/wasm.h\",\n        \"third_party/wasm-api/wasm.hh\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_config_headers_files\",\n    srcs = [\n        \"include/v8-platform.h\",\n        \"include/v8-source-location.h\",\n        \"include/v8config.h\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_version_files\",\n    srcs = [\n        \"include/v8-value-serializer-version.h\",\n        \"include/v8-version.h\",\n        \"include/v8-version-string.h\",\n    ],\n)\n\nfilegroup(\n    name = \"cppgc_headers_files\",\n    srcs = [\n        \"include/cppgc/allocation.h\",\n        \"include/cppgc/common.h\",\n        \"include/cppgc/cross-thread-persistent.h\",\n        \"include/cppgc/custom-space.h\",\n        \"include/cppgc/default-platform.h\",\n        \"include/cppgc/ephemeron-pair.h\",\n        \"include/cppgc/explicit-management.h\",\n        \"include/cppgc/garbage-collected.h\",\n        \"include/cppgc/heap.h\",\n        \"include/cppgc/heap-consistency.h\",\n        \"include/cppgc/heap-handle.h\",\n        \"include/cppgc/heap-state.h\",\n        \"include/cppgc/heap-statistics.h\",\n        \"include/cppgc/internal/api-constants.h\",\n        \"include/cppgc/internal/atomic-entry-flag.h\",\n        \"include/cppgc/internal/base-page-handle.h\",\n        \"include/cppgc/internal/caged-heap.h\",\n        \"include/cppgc/internal/caged-heap-local-data.h\",\n        \"include/cppgc/internal/compiler-specific.h\",\n        \"include/cppgc/internal/finalizer-trait.h\",\n        \"include/cppgc/internal/gc-info.h\",\n        \"include/cppgc/internal/logging.h\",\n        \"include/cppgc/internal/member-storage.h\",\n        \"include/cppgc/internal/name-trait.h\",\n        \"include/cppgc/internal/persistent-node.h\",\n        \"include/cppgc/internal/pointer-policies.h\",\n        \"include/cppgc/internal/write-barrier.h\",\n        \"include/cppgc/liveness-broker.h\",\n        \"include/cppgc/macros.h\",\n        \"include/cppgc/member.h\",\n        \"include/cppgc/name-provider.h\",\n        \"include/cppgc/object-size-trait.h\",\n        \"include/cppgc/persistent.h\",\n        \"include/cppgc/platform.h\",\n        \"include/cppgc/prefinalizer.h\",\n        \"include/cppgc/process-heap-statistics.h\",\n        \"include/cppgc/sentinel-pointer.h\",\n        \"include/cppgc/source-location.h\",\n        \"include/cppgc/trace-trait.h\",\n        \"include/cppgc/type-traits.h\",\n        \"include/cppgc/visitor.h\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_headers_files\",\n    srcs = [\n        \"include/v8.h\",\n        \"include/v8-array-buffer.h\",\n        \"include/v8-callbacks.h\",\n        \"include/v8-container.h\",\n        \"include/v8-context.h\",\n        \"include/v8-cppgc.h\",\n        \"include/v8-data.h\",\n        \"include/v8-date.h\",\n        \"include/v8-debug.h\",\n        \"include/v8-embedder-heap.h\",\n        \"include/v8-embedder-state-scope.h\",\n        \"include/v8-exception.h\",\n        \"include/v8-extension.h\",\n        \"include/v8-external-memory-accounter.h\",\n        \"include/v8-external.h\",\n        \"include/v8-fast-api-calls.h\",\n        \"include/v8-forward.h\",\n        \"include/v8-function.h\",\n        \"include/v8-function-callback.h\",\n        \"include/v8-handle-base.h\",\n        \"include/v8-initialization.h\",\n        \"include/v8-internal.h\",\n        \"include/v8-isolate.h\",\n        \"include/v8-json.h\",\n        \"include/v8-local-handle.h\",\n        \"include/v8-locker.h\",\n        \"include/v8-maybe.h\",\n        \"include/v8-memory-span.h\",\n        \"include/v8-message.h\",\n        \"include/v8-microtask.h\",\n        \"include/v8-microtask-queue.h\",\n        \"include/v8-object.h\",\n        \"include/v8-persistent-handle.h\",\n        \"include/v8-primitive.h\",\n        \"include/v8-primitive-object.h\",\n        \"include/v8-profiler.h\",\n        \"include/v8-promise.h\",\n        \"include/v8-proxy.h\",\n        \"include/v8-regexp.h\",\n        \"include/v8-sandbox.h\",\n        \"include/v8-script.h\",\n        \"include/v8-snapshot.h\",\n        \"include/v8-statistics.h\",\n        \"include/v8-template.h\",\n        \"include/v8-traced-handle.h\",\n        \"include/v8-typed-array.h\",\n        \"include/v8-unwinder.h\",\n        \"include/v8-util.h\",\n        \"include/v8-value.h\",\n        \"include/v8-value-serializer.h\",\n        \"include/v8-wasm.h\",\n        \"include/v8-weak-callback-info.h\",\n        \":cppgc_headers_files\",\n        \":v8_version_files\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_flags\",\n    srcs = [\n        \"src/flags/flag-definitions.h\",\n        \"src/flags/flags-impl.h\",\n        \"src/flags/flags.h\",\n    ] + select({\n        \"is_v8_enable_webassembly\": [\"src/wasm/wasm-feature-flags.h\"],\n        \"//conditions:default\": [],\n    }),\n)\n\nfilegroup(\n    name = \"v8_shared_internal_headers\",\n    srcs = [\n        \"src/common/globals.h\",\n        \"testing/gtest/include/gtest/gtest_prod.h\",\n    ] + select({\n        \"is_v8_enable_webassembly\": [\n            \"src/wasm/wasm-constants.h\",\n            \"src/wasm/wasm-limits.h\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\nfilegroup(\n    name = \"v8_libbase_files\",\n    srcs = [\n        \"src/base/abort-mode.cc\",\n        \"src/base/abort-mode.h\",\n        \"src/base/address-region.h\",\n        \"src/base/atomic-utils.h\",\n        \"src/base/atomicops.h\",\n        \"src/base/base-export.h\",\n        \"src/base/bit-field.h\",\n        \"src/base/bits.cc\",\n        \"src/base/bits.h\",\n        \"src/base/bits-iterator.h\",\n        \"src/base/bounded-page-allocator.cc\",\n        \"src/base/bounded-page-allocator.h\",\n        \"src/base/bounds.h\",\n        \"src/base/build_config.h\",\n        \"src/base/compiler-specific.h\",\n        \"src/base/container-utils.h\",\n        \"src/base/contextual.h\",\n        \"src/base/cpu.cc\",\n        \"src/base/cpu.h\",\n        \"src/base/debug/stack_trace.cc\",\n        \"src/base/debug/stack_trace.h\",\n        \"src/base/discriminated-union.h\",\n        \"src/base/division-by-constant.cc\",\n        \"src/base/division-by-constant.h\",\n        \"src/base/doubly-threaded-list.h\",\n        \"src/base/emulated-virtual-address-subspace.cc\",\n        \"src/base/emulated-virtual-address-subspace.h\",\n        \"src/base/enum-set.h\",\n        \"src/base/export-template.h\",\n        \"src/base/file-utils.cc\",\n        \"src/base/file-utils.h\",\n        \"src/base/flags.h\",\n        \"src/base/free_deleter.h\",\n        \"src/base/hashing.h\",\n        \"src/base/hashmap.h\",\n        \"src/base/hashmap-entry.h\",\n        \"src/base/ieee754.cc\",\n        \"src/base/ieee754.h\",\n        \"src/base/immediate-crash.h\",\n        \"src/base/intrusive-set.h\",\n        \"src/base/iterator.h\",\n        \"src/base/lazy-instance.h\",\n        \"src/base/logging.cc\",\n        \"src/base/logging.h\",\n        \"src/base/macros.h\",\n        \"src/base/memory.h\",\n        \"src/base/numbers/bignum.cc\",\n        \"src/base/numbers/bignum.h\",\n        \"src/base/numbers/bignum-dtoa.cc\",\n        \"src/base/numbers/bignum-dtoa.h\",\n        \"src/base/numbers/cached-powers.cc\",\n        \"src/base/numbers/cached-powers.h\",\n        \"src/base/numbers/diy-fp.cc\",\n        \"src/base/numbers/diy-fp.h\",\n        \"src/base/numbers/double.h\",\n        \"src/base/numbers/dtoa.cc\",\n        \"src/base/numbers/dtoa.h\",\n        \"src/base/numbers/fast-dtoa.cc\",\n        \"src/base/numbers/fast-dtoa.h\",\n        \"src/base/numbers/fixed-dtoa.cc\",\n        \"src/base/numbers/fixed-dtoa.h\",\n        \"src/base/numbers/strtod.cc\",\n        \"src/base/numbers/strtod.h\",\n        \"src/base/once.cc\",\n        \"src/base/once.h\",\n        \"src/base/overflowing-math.h\",\n        \"src/base/page-allocator.cc\",\n        \"src/base/page-allocator.h\",\n        \"src/base/platform/condition-variable.cc\",\n        \"src/base/platform/condition-variable.h\",\n        \"src/base/platform/elapsed-timer.h\",\n        \"src/base/platform/memory.h\",\n        \"src/base/platform/memory-protection-key.cc\",\n        \"src/base/platform/memory-protection-key.h\",\n        \"src/base/platform/mutex.cc\",\n        \"src/base/platform/mutex.h\",\n        \"src/base/platform/platform.cc\",\n        \"src/base/platform/platform.h\",\n        \"src/base/platform/platform-posix.h\",  # Always included by src/execution/isolate.h\n        \"src/base/platform/semaphore.cc\",\n        \"src/base/platform/semaphore.h\",\n        \"src/base/platform/time.cc\",\n        \"src/base/platform/time.h\",\n        \"src/base/platform/wrappers.h\",\n        \"src/base/platform/yield-processor.h\",\n        \"src/base/pointer-with-payload.h\",\n        \"src/base/region-allocator.cc\",\n        \"src/base/region-allocator.h\",\n        \"src/base/ring-buffer.h\",\n        \"src/base/safe_conversions.h\",\n        \"src/base/safe_conversions_arm_impl.h\",\n        \"src/base/safe_conversions_impl.h\",\n        \"src/base/small-map.h\",\n        \"src/base/small-vector.h\",\n        \"src/base/string-format.h\",\n        \"src/base/strings.cc\",\n        \"src/base/strings.h\",\n        \"src/base/strong-alias.h\",\n        \"src/base/sys-info.cc\",\n        \"src/base/sys-info.h\",\n        \"src/base/template-meta-programming/common.h\",\n        \"src/base/template-meta-programming/functional.h\",\n        \"src/base/template-meta-programming/list.h\",\n        \"src/base/template-meta-programming/string-literal.h\",\n        \"src/base/template-utils.h\",\n        \"src/base/threaded-list.h\",\n        \"src/base/timezone-cache.h\",\n        \"src/base/utils/random-number-generator.cc\",\n        \"src/base/utils/random-number-generator.h\",\n        \"src/base/vector.h\",\n        \"src/base/virtual-address-space.cc\",\n        \"src/base/virtual-address-space.h\",\n        \"src/base/virtual-address-space-page-allocator.cc\",\n        \"src/base/virtual-address-space-page-allocator.h\",\n        \"src/base/vlq.h\",\n        \"src/base/vlq-base64.cc\",\n        \"src/base/vlq-base64.h\",\n        \":v8_config_headers_files\",\n        \":v8_flags\",\n        \":v8_headers_files\",\n    ] + select({\n        \"@v8//bazel/config:is_posix\": [\n            \"src/base/platform/platform-posix.cc\",\n            \"src/base/platform/platform-posix-time.cc\",\n            \"src/base/platform/platform-posix-time.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \"@v8//bazel/config:is_linux\": [\n            \"src/base/debug/stack_trace_posix.cc\",\n            \"src/base/platform/platform-linux.cc\",\n            \"src/base/platform/platform-linux.h\",\n        ],\n        \"@v8//bazel/config:is_android\": [\n            \"src/base/debug/stack_trace_android.cc\",\n            \"src/base/platform/platform-linux.cc\",\n            \"src/base/platform/platform-linux.h\",\n        ],\n        \"@v8//bazel/config:is_macos\": [\n            \"src/base/debug/stack_trace_posix.cc\",\n            \"src/base/platform/platform-darwin.cc\",\n        ],\n        \"@v8//bazel/config:is_windows\": [\n            \"src/base/debug/stack_trace_win.cc\",\n            \"src/base/platform/platform-win32.cc\",\n            \"src/base/platform/platform-win32.h\",\n            \"src/base/win32-headers.h\",\n        ],\n    }),\n    visibility = [\"//visibility:public\"],\n)\n\nfilegroup(\n    name = \"v8_libplatform_files\",\n    srcs = [\n        \"include/libplatform/libplatform.h\",\n        \"include/libplatform/libplatform-export.h\",\n        \"include/libplatform/v8-tracing.h\",\n        \"src/libplatform/default-foreground-task-runner.cc\",\n        \"src/libplatform/default-foreground-task-runner.h\",\n        \"src/libplatform/default-job.cc\",\n        \"src/libplatform/default-job.h\",\n        \"src/libplatform/default-platform.cc\",\n        \"src/libplatform/default-platform.h\",\n        \"src/libplatform/default-thread-isolated-allocator.cc\",\n        \"src/libplatform/default-thread-isolated-allocator.h\",\n        \"src/libplatform/default-worker-threads-task-runner.cc\",\n        \"src/libplatform/default-worker-threads-task-runner.h\",\n        \"src/libplatform/delayed-task-queue.cc\",\n        \"src/libplatform/delayed-task-queue.h\",\n        \"src/libplatform/task-queue.cc\",\n        \"src/libplatform/task-queue.h\",\n        \"src/libplatform/tracing/recorder.h\",\n        \"src/libplatform/tracing/trace-buffer.cc\",\n        \"src/libplatform/tracing/trace-buffer.h\",\n        \"src/libplatform/tracing/trace-config.cc\",\n        \"src/libplatform/tracing/trace-object.cc\",\n        \"src/libplatform/tracing/trace-writer.cc\",\n        \"src/libplatform/tracing/trace-writer.h\",\n        \"src/libplatform/tracing/tracing-controller.cc\",\n        \"src/libplatform/worker-thread.cc\",\n        \"src/libplatform/worker-thread.h\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_libsampler_files\",\n    srcs = [\n        \"src/libsampler/sampler.cc\",\n        \"src/libsampler/sampler.h\",\n    ],\n)\n\nfilegroup(\n    name = \"torque_runtime_support_files\",\n    srcs = [\"src/torque/runtime-support.h\"],\n)\n\nfilegroup(\n    name = \"noicu/torque_files\",\n    srcs = [\n        \"src/builtins/aggregate-error.tq\",\n        \"src/builtins/array.tq\",\n        \"src/builtins/array-at.tq\",\n        \"src/builtins/array-concat.tq\",\n        \"src/builtins/array-copywithin.tq\",\n        \"src/builtins/array-every.tq\",\n        \"src/builtins/array-filter.tq\",\n        \"src/builtins/array-find.tq\",\n        \"src/builtins/array-findindex.tq\",\n        \"src/builtins/array-findlast.tq\",\n        \"src/builtins/array-findlastindex.tq\",\n        \"src/builtins/array-flat.tq\",\n        \"src/builtins/array-foreach.tq\",\n        \"src/builtins/array-from.tq\",\n        \"src/builtins/array-from-async.tq\",\n        \"src/builtins/array-isarray.tq\",\n        \"src/builtins/array-join.tq\",\n        \"src/builtins/array-lastindexof.tq\",\n        \"src/builtins/array-map.tq\",\n        \"src/builtins/array-of.tq\",\n        \"src/builtins/array-reduce.tq\",\n        \"src/builtins/array-reduce-right.tq\",\n        \"src/builtins/array-reverse.tq\",\n        \"src/builtins/array-shift.tq\",\n        \"src/builtins/array-slice.tq\",\n        \"src/builtins/array-some.tq\",\n        \"src/builtins/array-splice.tq\",\n        \"src/builtins/array-to-reversed.tq\",\n        \"src/builtins/array-to-sorted.tq\",\n        \"src/builtins/array-to-spliced.tq\",\n        \"src/builtins/array-unshift.tq\",\n        \"src/builtins/array-with.tq\",\n        \"src/builtins/arraybuffer.tq\",\n        \"src/builtins/base.tq\",\n        \"src/builtins/boolean.tq\",\n        \"src/builtins/builtins-bigint.tq\",\n        \"src/builtins/builtins-string.tq\",\n        \"src/builtins/cast.tq\",\n        \"src/builtins/collections.tq\",\n        \"src/builtins/console.tq\",\n        \"src/builtins/constructor.tq\",\n        \"src/builtins/conversion.tq\",\n        \"src/builtins/convert.tq\",\n        \"src/builtins/data-view.tq\",\n        \"src/builtins/finalization-registry.tq\",\n        \"src/builtins/frame-arguments.tq\",\n        \"src/builtins/frames.tq\",\n        \"src/builtins/function.tq\",\n        \"src/builtins/growable-fixed-array.tq\",\n        \"src/builtins/ic.tq\",\n        \"src/builtins/ic-callable.tq\",\n        \"src/builtins/internal.tq\",\n        \"src/builtins/internal-coverage.tq\",\n        \"src/builtins/iterator.tq\",\n        \"src/builtins/iterator-from.tq\",\n        \"src/builtins/iterator-helpers.tq\",\n        \"src/builtins/map-groupby.tq\",\n        \"src/builtins/math.tq\",\n        \"src/builtins/number.tq\",\n        \"src/builtins/object.tq\",\n        \"src/builtins/object-fromentries.tq\",\n        \"src/builtins/object-groupby.tq\",\n        \"src/builtins/promise-abstract-operations.tq\",\n        \"src/builtins/promise-all.tq\",\n        \"src/builtins/promise-all-element-closure.tq\",\n        \"src/builtins/promise-any.tq\",\n        \"src/builtins/promise-constructor.tq\",\n        \"src/builtins/promise-finally.tq\",\n        \"src/builtins/promise-jobs.tq\",\n        \"src/builtins/promise-misc.tq\",\n        \"src/builtins/promise-race.tq\",\n        \"src/builtins/promise-reaction-job.tq\",\n        \"src/builtins/promise-resolve.tq\",\n        \"src/builtins/promise-then.tq\",\n        \"src/builtins/promise-try.tq\",\n        \"src/builtins/promise-withresolvers.tq\",\n        \"src/builtins/proxy.tq\",\n        \"src/builtins/proxy-constructor.tq\",\n        \"src/builtins/proxy-delete-property.tq\",\n        \"src/builtins/proxy-get-property.tq\",\n        \"src/builtins/proxy-get-prototype-of.tq\",\n        \"src/builtins/proxy-has-property.tq\",\n        \"src/builtins/proxy-is-extensible.tq\",\n        \"src/builtins/proxy-prevent-extensions.tq\",\n        \"src/builtins/proxy-revocable.tq\",\n        \"src/builtins/proxy-revoke.tq\",\n        \"src/builtins/proxy-set-property.tq\",\n        \"src/builtins/proxy-set-prototype-of.tq\",\n        \"src/builtins/reflect.tq\",\n        \"src/builtins/regexp.tq\",\n        \"src/builtins/regexp-exec.tq\",\n        \"src/builtins/regexp-match.tq\",\n        \"src/builtins/regexp-match-all.tq\",\n        \"src/builtins/regexp-replace.tq\",\n        \"src/builtins/regexp-search.tq\",\n        \"src/builtins/regexp-source.tq\",\n        \"src/builtins/regexp-split.tq\",\n        \"src/builtins/regexp-test.tq\",\n        \"src/builtins/set-difference.tq\",\n        \"src/builtins/set-intersection.tq\",\n        \"src/builtins/set-is-disjoint-from.tq\",\n        \"src/builtins/set-is-subset-of.tq\",\n        \"src/builtins/set-is-superset-of.tq\",\n        \"src/builtins/set-symmetric-difference.tq\",\n        \"src/builtins/set-union.tq\",\n        \"src/builtins/string-at.tq\",\n        \"src/builtins/string-endswith.tq\",\n        \"src/builtins/string-html.tq\",\n        \"src/builtins/string-includes.tq\",\n        \"src/builtins/string-indexof.tq\",\n        \"src/builtins/string-iswellformed.tq\",\n        \"src/builtins/string-iterator.tq\",\n        \"src/builtins/string-match-search.tq\",\n        \"src/builtins/string-pad.tq\",\n        \"src/builtins/string-repeat.tq\",\n        \"src/builtins/string-replaceall.tq\",\n        \"src/builtins/string-slice.tq\",\n        \"src/builtins/string-startswith.tq\",\n        \"src/builtins/string-substr.tq\",\n        \"src/builtins/string-substring.tq\",\n        \"src/builtins/string-towellformed.tq\",\n        \"src/builtins/string-trim.tq\",\n        \"src/builtins/suppressed-error.tq\",\n        \"src/builtins/symbol.tq\",\n        \"src/builtins/torque-internal.tq\",\n        \"src/builtins/typed-array.tq\",\n        \"src/builtins/typed-array-at.tq\",\n        \"src/builtins/typed-array-createtypedarray.tq\",\n        \"src/builtins/typed-array-entries.tq\",\n        \"src/builtins/typed-array-every.tq\",\n        \"src/builtins/typed-array-filter.tq\",\n        \"src/builtins/typed-array-find.tq\",\n        \"src/builtins/typed-array-findindex.tq\",\n        \"src/builtins/typed-array-findlast.tq\",\n        \"src/builtins/typed-array-findlastindex.tq\",\n        \"src/builtins/typed-array-foreach.tq\",\n        \"src/builtins/typed-array-from.tq\",\n        \"src/builtins/typed-array-keys.tq\",\n        \"src/builtins/typed-array-of.tq\",\n        \"src/builtins/typed-array-reduce.tq\",\n        \"src/builtins/typed-array-reduceright.tq\",\n        \"src/builtins/typed-array-set.tq\",\n        \"src/builtins/typed-array-slice.tq\",\n        \"src/builtins/typed-array-some.tq\",\n        \"src/builtins/typed-array-sort.tq\",\n        \"src/builtins/typed-array-subarray.tq\",\n        \"src/builtins/typed-array-to-reversed.tq\",\n        \"src/builtins/typed-array-to-sorted.tq\",\n        \"src/builtins/typed-array-values.tq\",\n        \"src/builtins/typed-array-with.tq\",\n        \"src/builtins/weak-ref.tq\",\n        \"src/ic/handler-configuration.tq\",\n        \"src/objects/allocation-site.tq\",\n        \"src/objects/api-callbacks.tq\",\n        \"src/objects/arguments.tq\",\n        \"src/objects/bigint.tq\",\n        \"src/objects/bytecode-array.tq\",\n        \"src/objects/call-site-info.tq\",\n        \"src/objects/cell.tq\",\n        \"src/objects/contexts.tq\",\n        \"src/objects/data-handler.tq\",\n        \"src/objects/debug-objects.tq\",\n        \"src/objects/descriptor-array.tq\",\n        \"src/objects/embedder-data-array.tq\",\n        \"src/objects/feedback-cell.tq\",\n        \"src/objects/feedback-vector.tq\",\n        \"src/objects/fixed-array.tq\",\n        \"src/objects/foreign.tq\",\n        \"src/objects/free-space.tq\",\n        \"src/objects/heap-number.tq\",\n        \"src/objects/heap-object.tq\",\n        \"src/objects/js-array.tq\",\n        \"src/objects/js-array-buffer.tq\",\n        \"src/objects/js-atomics-synchronization.tq\",\n        \"src/objects/js-collection.tq\",\n        \"src/objects/js-collection-iterator.tq\",\n        \"src/objects/js-disposable-stack.tq\",\n        \"src/objects/js-function.tq\",\n        \"src/objects/js-generator.tq\",\n        \"src/objects/js-iterator-helpers.tq\",\n        \"src/objects/js-objects.tq\",\n        \"src/objects/js-promise.tq\",\n        \"src/objects/js-proxy.tq\",\n        \"src/objects/js-raw-json.tq\",\n        \"src/objects/js-regexp.tq\",\n        \"src/objects/js-regexp-string-iterator.tq\",\n        \"src/objects/js-shadow-realm.tq\",\n        \"src/objects/js-shared-array.tq\",\n        \"src/objects/js-struct.tq\",\n        \"src/objects/js-temporal-objects.tq\",\n        \"src/objects/js-weak-refs.tq\",\n        \"src/objects/literal-objects.tq\",\n        \"src/objects/map.tq\",\n        \"src/objects/megadom-handler.tq\",\n        \"src/objects/microtask.tq\",\n        \"src/objects/module.tq\",\n        \"src/objects/name.tq\",\n        \"src/objects/oddball.tq\",\n        \"src/objects/hole.tq\",\n        \"src/objects/trusted-object.tq\",\n        \"src/objects/ordered-hash-table.tq\",\n        \"src/objects/primitive-heap-object.tq\",\n        \"src/objects/promise.tq\",\n        \"src/objects/property-array.tq\",\n        \"src/objects/property-cell.tq\",\n        \"src/objects/property-descriptor-object.tq\",\n        \"src/objects/prototype-info.tq\",\n        \"src/objects/regexp-match-info.tq\",\n        \"src/objects/scope-info.tq\",\n        \"src/objects/script.tq\",\n        \"src/objects/shared-function-info.tq\",\n        \"src/objects/source-text-module.tq\",\n        \"src/objects/string.tq\",\n        \"src/objects/struct.tq\",\n        \"src/objects/swiss-hash-table-helpers.tq\",\n        \"src/objects/swiss-name-dictionary.tq\",\n        \"src/objects/synthetic-module.tq\",\n        \"src/objects/template-objects.tq\",\n        \"src/objects/templates.tq\",\n        \"src/objects/torque-defined-classes.tq\",\n        \"src/objects/turbofan-types.tq\",\n        \"src/objects/turboshaft-types.tq\",\n        \"test/torque/test-torque.tq\",\n        \"third_party/v8/builtins/array-sort.tq\",\n    ] + select({\n        \":is_v8_enable_webassembly\": [\n            \"src/builtins/js-to-js.tq\",\n            \"src/builtins/js-to-wasm.tq\",\n            \"src/builtins/wasm.tq\",\n            \"src/builtins/wasm-strings.tq\",\n            \"src/builtins/wasm-to-js.tq\",\n            \"src/debug/debug-wasm-objects.tq\",\n            \"src/wasm/wasm-objects.tq\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\nfilegroup(\n    name = \"icu/torque_files\",\n    srcs = [\n        \"src/objects/intl-objects.tq\",\n        \"src/objects/js-break-iterator.tq\",\n        \"src/objects/js-collator.tq\",\n        \"src/objects/js-date-time-format.tq\",\n        \"src/objects/js-display-names.tq\",\n        \"src/objects/js-duration-format.tq\",\n        \"src/objects/js-list-format.tq\",\n        \"src/objects/js-locale.tq\",\n        \"src/objects/js-number-format.tq\",\n        \"src/objects/js-plural-rules.tq\",\n        \"src/objects/js-relative-time-format.tq\",\n        \"src/objects/js-segment-iterator.tq\",\n        \"src/objects/js-segmenter.tq\",\n        \"src/objects/js-segments.tq\",\n        \":noicu/torque_files\",\n    ],\n)\n\nfilegroup(\n    name = \"torque_base_files\",\n    srcs = [\n        \"src/numbers/integer-literal.h\",\n        \"src/numbers/integer-literal-inl.h\",\n        \"src/torque/ast.h\",\n        \"src/torque/cc-generator.cc\",\n        \"src/torque/cc-generator.h\",\n        \"src/torque/cfg.cc\",\n        \"src/torque/cfg.h\",\n        \"src/torque/class-debug-reader-generator.cc\",\n        \"src/torque/constants.h\",\n        \"src/torque/cpp-builder.cc\",\n        \"src/torque/cpp-builder.h\",\n        \"src/torque/csa-generator.cc\",\n        \"src/torque/csa-generator.h\",\n        \"src/torque/declarable.cc\",\n        \"src/torque/declarable.h\",\n        \"src/torque/declaration-visitor.cc\",\n        \"src/torque/declaration-visitor.h\",\n        \"src/torque/declarations.cc\",\n        \"src/torque/declarations.h\",\n        \"src/torque/earley-parser.cc\",\n        \"src/torque/earley-parser.h\",\n        \"src/torque/global-context.cc\",\n        \"src/torque/global-context.h\",\n        \"src/torque/implementation-visitor.cc\",\n        \"src/torque/implementation-visitor.h\",\n        \"src/torque/instance-type-generator.cc\",\n        \"src/torque/instructions.cc\",\n        \"src/torque/instructions.h\",\n        \"src/torque/kythe-data.cc\",\n        \"src/torque/kythe-data.h\",\n        \"src/torque/parameter-difference.h\",\n        \"src/torque/server-data.cc\",\n        \"src/torque/server-data.h\",\n        \"src/torque/source-positions.cc\",\n        \"src/torque/source-positions.h\",\n        \"src/torque/torque-code-generator.cc\",\n        \"src/torque/torque-code-generator.h\",\n        \"src/torque/torque-compiler.cc\",\n        \"src/torque/torque-compiler.h\",\n        \"src/torque/torque-parser.cc\",\n        \"src/torque/torque-parser.h\",\n        \"src/torque/type-inference.cc\",\n        \"src/torque/type-inference.h\",\n        \"src/torque/type-oracle.cc\",\n        \"src/torque/type-oracle.h\",\n        \"src/torque/type-visitor.cc\",\n        \"src/torque/type-visitor.h\",\n        \"src/torque/types.cc\",\n        \"src/torque/types.h\",\n        \"src/torque/utils.cc\",\n        \"src/torque/utils.h\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_base_without_compiler_files\",\n    srcs = [\n        \"include/cppgc/common.h\",\n        \"include/v8-inspector.h\",\n        \"include/v8-inspector-protocol.h\",\n        \"include/v8-metrics.h\",\n        \"include/v8-unwinder-state.h\",\n        \"include/v8-wasm-trap-handler-posix.h\",\n        \"src/api/api.cc\",\n        \"src/api/api.h\",\n        \"src/api/api-arguments.cc\",\n        \"src/api/api-arguments.h\",\n        \"src/api/api-arguments-inl.h\",\n        \"src/api/api-inl.h\",\n        \"src/api/api-macros.h\",\n        \"src/api/api-macros-undef.h\",\n        \"src/api/api-natives.cc\",\n        \"src/api/api-natives.h\",\n        \"src/asmjs/asm-js.h\",\n        \"src/ast/ast.cc\",\n        \"src/ast/ast.h\",\n        \"src/ast/ast-function-literal-id-reindexer.cc\",\n        \"src/ast/ast-function-literal-id-reindexer.h\",\n        \"src/ast/ast-source-ranges.h\",\n        \"src/ast/ast-traversal-visitor.h\",\n        \"src/ast/ast-value-factory.cc\",\n        \"src/ast/ast-value-factory.h\",\n        \"src/ast/modules.cc\",\n        \"src/ast/modules.h\",\n        \"src/ast/prettyprinter.cc\",\n        \"src/ast/prettyprinter.h\",\n        \"src/ast/scopes.cc\",\n        \"src/ast/scopes.h\",\n        \"src/ast/source-range-ast-visitor.cc\",\n        \"src/ast/source-range-ast-visitor.h\",\n        \"src/ast/variables.cc\",\n        \"src/ast/variables.h\",\n        \"src/base/sanitizer/asan.h\",\n        \"src/base/sanitizer/lsan-page-allocator.cc\",\n        \"src/base/sanitizer/lsan-page-allocator.h\",\n        \"src/base/sanitizer/lsan-virtual-address-space.cc\",\n        \"src/base/sanitizer/lsan-virtual-address-space.h\",\n        \"src/base/sanitizer/msan.h\",\n        \"src/base/sanitizer/tsan.h\",\n        \"src/base/sanitizer/ubsan.h\",\n        \"src/baseline/baseline.cc\",\n        \"src/baseline/baseline.h\",\n        \"src/baseline/baseline-assembler.h\",\n        \"src/baseline/baseline-assembler-inl.h\",\n        \"src/baseline/baseline-batch-compiler.cc\",\n        \"src/baseline/baseline-batch-compiler.h\",\n        \"src/baseline/baseline-compiler.cc\",\n        \"src/baseline/baseline-compiler.h\",\n        \"src/baseline/bytecode-offset-iterator.cc\",\n        \"src/baseline/bytecode-offset-iterator.h\",\n        \"src/builtins/accessors.cc\",\n        \"src/builtins/accessors.h\",\n        \"src/builtins/builtins.cc\",\n        \"src/builtins/builtins-inl.h\",\n        \"src/builtins/builtins.h\",\n        \"src/builtins/builtins-abstract-module-source.cc\",\n        \"src/builtins/builtins-api.cc\",\n        \"src/builtins/builtins-array.cc\",\n        \"src/builtins/builtins-arraybuffer.cc\",\n        \"src/builtins/builtins-async-disposable-stack.cc\",\n        \"src/builtins/builtins-async-module.cc\",\n        \"src/builtins/builtins-atomics-synchronization.cc\",\n        \"src/builtins/builtins-bigint.cc\",\n        \"src/builtins/builtins-callsite.cc\",\n        \"src/builtins/builtins-collections.cc\",\n        \"src/builtins/builtins-console.cc\",\n        \"src/builtins/builtins-constructor.h\",\n        \"src/builtins/builtins-dataview.cc\",\n        \"src/builtins/builtins-date.cc\",\n        \"src/builtins/builtins-definitions.h\",\n        \"src/builtins/builtins-descriptors.h\",\n        \"src/builtins/builtins-disposable-stack.cc\",\n        \"src/builtins/builtins-error.cc\",\n        \"src/builtins/builtins-function.cc\",\n        \"src/builtins/builtins-global.cc\",\n        \"src/builtins/builtins-internal.cc\",\n        \"src/builtins/builtins-json.cc\",\n        \"src/builtins/builtins-number.cc\",\n        \"src/builtins/builtins-object.cc\",\n        \"src/builtins/builtins-promise.h\",\n        \"src/builtins/builtins-reflect.cc\",\n        \"src/builtins/builtins-regexp.cc\",\n        \"src/builtins/builtins-shadow-realm.cc\",\n        \"src/builtins/builtins-shared-array.cc\",\n        \"src/builtins/builtins-sharedarraybuffer.cc\",\n        \"src/builtins/builtins-string.cc\",\n        \"src/builtins/builtins-struct.cc\",\n        \"src/builtins/builtins-symbol.cc\",\n        \"src/builtins/builtins-temporal.cc\",\n        \"src/builtins/builtins-trace.cc\",\n        \"src/builtins/builtins-typed-array.cc\",\n        \"src/builtins/builtins-utils.h\",\n        \"src/builtins/builtins-utils-inl.h\",\n        \"src/builtins/builtins-weak-refs.cc\",\n        \"src/builtins/constants-table-builder.cc\",\n        \"src/builtins/constants-table-builder.h\",\n        \"src/builtins/data-view-ops.h\",\n        \"src/builtins/profile-data-reader.h\",\n        \"src/codegen/aligned-slot-allocator.cc\",\n        \"src/codegen/aligned-slot-allocator.h\",\n        \"src/codegen/assembler.cc\",\n        \"src/codegen/assembler.h\",\n        \"src/codegen/assembler-arch.h\",\n        \"src/codegen/assembler-inl.h\",\n        \"src/codegen/atomic-memory-order.h\",\n        \"src/codegen/background-merge-task.h\",\n        \"src/codegen/bailout-reason.cc\",\n        \"src/codegen/bailout-reason.h\",\n        \"src/codegen/callable.h\",\n        \"src/codegen/code-comments.cc\",\n        \"src/codegen/code-comments.h\",\n        \"src/codegen/code-desc.cc\",\n        \"src/codegen/code-desc.h\",\n        \"src/codegen/code-factory.cc\",\n        \"src/codegen/code-factory.h\",\n        \"src/codegen/code-reference.cc\",\n        \"src/codegen/code-reference.h\",\n        \"src/codegen/compilation-cache.cc\",\n        \"src/codegen/compilation-cache.h\",\n        \"src/codegen/compiler.cc\",\n        \"src/codegen/compiler.h\",\n        \"src/codegen/constant-pool.cc\",\n        \"src/codegen/constant-pool.h\",\n        \"src/codegen/constants-arch.h\",\n        \"src/codegen/cpu-features.h\",\n        \"src/codegen/external-reference.cc\",\n        \"src/codegen/external-reference.h\",\n        \"src/codegen/external-reference-encoder.cc\",\n        \"src/codegen/external-reference-encoder.h\",\n        \"src/codegen/external-reference-table.cc\",\n        \"src/codegen/external-reference-table.h\",\n        \"src/codegen/flush-instruction-cache.cc\",\n        \"src/codegen/flush-instruction-cache.h\",\n        \"src/codegen/handler-table.cc\",\n        \"src/codegen/handler-table.h\",\n        \"src/codegen/heap-object-list.h\",\n        \"src/codegen/interface-descriptors.cc\",\n        \"src/codegen/interface-descriptors.h\",\n        \"src/codegen/interface-descriptors-inl.h\",\n        \"src/codegen/label.h\",\n        \"src/codegen/linkage-location.h\",\n        \"src/codegen/machine-type.cc\",\n        \"src/codegen/machine-type.h\",\n        \"src/codegen/macro-assembler.h\",\n        \"src/codegen/macro-assembler-base.cc\",\n        \"src/codegen/macro-assembler-base.h\",\n        \"src/codegen/macro-assembler-inl.h\",\n        \"src/codegen/maglev-safepoint-table.cc\",\n        \"src/codegen/maglev-safepoint-table.h\",\n        \"src/codegen/optimized-compilation-info.cc\",\n        \"src/codegen/optimized-compilation-info.h\",\n        \"src/codegen/pending-optimization-table.cc\",\n        \"src/codegen/pending-optimization-table.h\",\n        \"src/codegen/register.h\",\n        \"src/codegen/register-arch.h\",\n        \"src/codegen/register-base.h\",\n        \"src/codegen/register-configuration.cc\",\n        \"src/codegen/register-configuration.h\",\n        \"src/codegen/reglist.h\",\n        \"src/codegen/reglist-base.h\",\n        \"src/codegen/reloc-info.cc\",\n        \"src/codegen/reloc-info.h\",\n        \"src/codegen/reloc-info-inl.h\",\n        \"src/codegen/safepoint-table.cc\",\n        \"src/codegen/safepoint-table.h\",\n        \"src/codegen/safepoint-table-base.h\",\n        \"src/codegen/script-details.h\",\n        \"src/codegen/signature.h\",\n        \"src/codegen/source-position.cc\",\n        \"src/codegen/source-position.h\",\n        \"src/codegen/source-position-table.cc\",\n        \"src/codegen/source-position-table.h\",\n        \"src/codegen/tick-counter.cc\",\n        \"src/codegen/tick-counter.h\",\n        \"src/codegen/tnode.cc\",\n        \"src/codegen/tnode.h\",\n        \"src/codegen/unoptimized-compilation-info.cc\",\n        \"src/codegen/unoptimized-compilation-info.h\",\n        \"src/common/assert-scope.cc\",\n        \"src/common/assert-scope.h\",\n        \"src/common/checks.h\",\n        \"src/common/code-memory-access.cc\",\n        \"src/common/code-memory-access.h\",\n        \"src/common/code-memory-access-inl.h\",\n        \"src/common/high-allocation-throughput-scope.h\",\n        \"src/common/message-template.h\",\n        \"src/common/operation.h\",\n        \"src/common/ptr-compr.cc\",\n        \"src/common/ptr-compr.h\",\n        \"src/common/ptr-compr-inl.h\",\n        \"src/common/thread-local-storage.h\",\n        \"src/common/segmented-table.h\",\n        \"src/common/segmented-table-inl.h\",\n        \"src/common/simd128.h\",\n        \"src/compiler-dispatcher/lazy-compile-dispatcher.cc\",\n        \"src/compiler-dispatcher/lazy-compile-dispatcher.h\",\n        \"src/compiler-dispatcher/optimizing-compile-dispatcher.cc\",\n        \"src/compiler-dispatcher/optimizing-compile-dispatcher.h\",\n        \"src/compiler/turbofan.h\",\n        \"src/date/date.cc\",\n        \"src/date/date.h\",\n        \"src/date/dateparser.cc\",\n        \"src/date/dateparser.h\",\n        \"src/date/dateparser-inl.h\",\n        \"src/debug/debug.cc\",\n        \"src/debug/debug.h\",\n        \"src/debug/debug-coverage.cc\",\n        \"src/debug/debug-coverage.h\",\n        \"src/debug/debug-evaluate.cc\",\n        \"src/debug/debug-evaluate.h\",\n        \"src/debug/debug-frames.cc\",\n        \"src/debug/debug-frames.h\",\n        \"src/debug/debug-interface.cc\",\n        \"src/debug/debug-interface.h\",\n        \"src/debug/debug-property-iterator.cc\",\n        \"src/debug/debug-property-iterator.h\",\n        \"src/debug/debug-scope-iterator.cc\",\n        \"src/debug/debug-scope-iterator.h\",\n        \"src/debug/debug-scopes.cc\",\n        \"src/debug/debug-scopes.h\",\n        \"src/debug/debug-stack-trace-iterator.cc\",\n        \"src/debug/debug-stack-trace-iterator.h\",\n        \"src/debug/interface-types.h\",\n        \"src/debug/liveedit.cc\",\n        \"src/debug/liveedit.h\",\n        \"src/debug/liveedit-diff.cc\",\n        \"src/debug/liveedit-diff.h\",\n        \"src/deoptimizer/deoptimize-reason.cc\",\n        \"src/deoptimizer/deoptimize-reason.h\",\n        \"src/deoptimizer/deoptimized-frame-info.cc\",\n        \"src/deoptimizer/deoptimized-frame-info.h\",\n        \"src/deoptimizer/deoptimizer.cc\",\n        \"src/deoptimizer/deoptimizer.h\",\n        \"src/deoptimizer/frame-description.h\",\n        \"src/deoptimizer/frame-translation-builder.cc\",\n        \"src/deoptimizer/frame-translation-builder.h\",\n        \"src/deoptimizer/materialized-object-store.cc\",\n        \"src/deoptimizer/materialized-object-store.h\",\n        \"src/deoptimizer/translated-state.cc\",\n        \"src/deoptimizer/translated-state.h\",\n        \"src/deoptimizer/translation-opcode.h\",\n        \"src/diagnostics/basic-block-profiler.cc\",\n        \"src/diagnostics/basic-block-profiler.h\",\n        \"src/diagnostics/code-tracer.h\",\n        \"src/diagnostics/compilation-statistics.cc\",\n        \"src/diagnostics/compilation-statistics.h\",\n        \"src/diagnostics/disasm.h\",\n        \"src/diagnostics/disassembler.cc\",\n        \"src/diagnostics/disassembler.h\",\n        \"src/diagnostics/eh-frame.cc\",\n        \"src/diagnostics/eh-frame.h\",\n        \"src/diagnostics/gdb-jit.cc\",\n        \"src/diagnostics/gdb-jit.h\",\n        \"src/diagnostics/objects-debug.cc\",\n        \"src/diagnostics/objects-printer.cc\",\n        \"src/diagnostics/perf-jit.cc\",\n        \"src/diagnostics/perf-jit.h\",\n        \"src/diagnostics/unwinder.cc\",\n        \"src/diagnostics/unwinder.h\",\n        \"src/execution/arguments.cc\",\n        \"src/execution/arguments.h\",\n        \"src/execution/arguments-inl.h\",\n        \"src/execution/clobber-registers.cc\",\n        \"src/execution/clobber-registers.h\",\n        \"src/execution/embedder-state.cc\",\n        \"src/execution/embedder-state.h\",\n        \"src/execution/encoded-c-signature.cc\",\n        \"src/execution/encoded-c-signature.h\",\n        \"src/execution/execution.cc\",\n        \"src/execution/execution.h\",\n        \"src/execution/frame-constants.h\",\n        \"src/execution/frames.cc\",\n        \"src/execution/frames.h\",\n        \"src/execution/frames-inl.h\",\n        \"src/execution/futex-emulation.cc\",\n        \"src/execution/futex-emulation.h\",\n        \"src/execution/interrupts-scope.cc\",\n        \"src/execution/interrupts-scope.h\",\n        \"src/execution/isolate.cc\",\n        \"src/execution/isolate.h\",\n        \"src/execution/isolate-data.h\",\n        \"src/execution/isolate-inl.h\",\n        \"src/execution/isolate-utils.h\",\n        \"src/execution/isolate-utils-inl.h\",\n        \"src/execution/local-isolate.cc\",\n        \"src/execution/local-isolate.h\",\n        \"src/execution/local-isolate-inl.h\",\n        \"src/execution/messages.cc\",\n        \"src/execution/messages.h\",\n        \"src/execution/microtask-queue.cc\",\n        \"src/execution/microtask-queue.h\",\n        \"src/execution/pointer-authentication.h\",\n        \"src/execution/pointer-authentication-dummy.h\",\n        \"src/execution/protectors.cc\",\n        \"src/execution/protectors.h\",\n        \"src/execution/protectors-inl.h\",\n        \"src/execution/shared-mutex-guard-if-off-thread.h\",\n        \"src/execution/simulator.h\",\n        \"src/execution/simulator-base.cc\",\n        \"src/execution/simulator-base.h\",\n        \"src/execution/stack-guard.cc\",\n        \"src/execution/stack-guard.h\",\n        \"src/execution/thread-id.cc\",\n        \"src/execution/thread-id.h\",\n        \"src/execution/thread-local-top.cc\",\n        \"src/execution/thread-local-top.h\",\n        \"src/execution/tiering-manager.cc\",\n        \"src/execution/tiering-manager.h\",\n        \"src/execution/v8threads.cc\",\n        \"src/execution/v8threads.h\",\n        \"src/execution/vm-state.h\",\n        \"src/execution/vm-state-inl.h\",\n        \"src/extensions/cputracemark-extension.cc\",\n        \"src/extensions/cputracemark-extension.h\",\n        \"src/extensions/externalize-string-extension.cc\",\n        \"src/extensions/externalize-string-extension.h\",\n        \"src/extensions/gc-extension.cc\",\n        \"src/extensions/gc-extension.h\",\n        \"src/extensions/ignition-statistics-extension.cc\",\n        \"src/extensions/ignition-statistics-extension.h\",\n        \"src/extensions/statistics-extension.cc\",\n        \"src/extensions/statistics-extension.h\",\n        \"src/extensions/trigger-failure-extension.cc\",\n        \"src/extensions/trigger-failure-extension.h\",\n        \"src/flags/flag-definitions.h\",\n        \"src/flags/flags-impl.h\",\n        \"src/flags/flags.cc\",\n        \"src/flags/flags.h\",\n        \"src/handles/global-handles.cc\",\n        \"src/handles/global-handles.h\",\n        \"src/handles/global-handles-inl.h\",\n        \"src/handles/handles.cc\",\n        \"src/handles/handles.h\",\n        \"src/handles/handles-inl.h\",\n        \"src/handles/local-handles.cc\",\n        \"src/handles/local-handles.h\",\n        \"src/handles/local-handles-inl.h\",\n        \"src/handles/maybe-handles.h\",\n        \"src/handles/maybe-handles-inl.h\",\n        \"src/handles/persistent-handles.cc\",\n        \"src/handles/persistent-handles.h\",\n        \"src/handles/shared-object-conveyor-handles.cc\",\n        \"src/handles/shared-object-conveyor-handles.h\",\n        \"src/handles/traced-handles.cc\",\n        \"src/handles/traced-handles.h\",\n        \"src/handles/traced-handles-inl.h\",\n        \"src/heap/allocation-observer.cc\",\n        \"src/heap/allocation-observer.h\",\n        \"src/heap/allocation-result.h\",\n        \"src/heap/allocation-stats.h\",\n        \"src/heap/array-buffer-sweeper.cc\",\n        \"src/heap/array-buffer-sweeper.h\",\n        \"src/heap/base-space.h\",\n        \"src/heap/base/active-system-pages.cc\",\n        \"src/heap/base/active-system-pages.h\",\n        \"src/heap/memory-chunk-metadata.cc\",\n        \"src/heap/memory-chunk-metadata.h\",\n        \"src/heap/memory-chunk-metadata-inl.h\",\n        \"src/heap/code-range.cc\",\n        \"src/heap/code-range.h\",\n        \"src/heap/trusted-range.cc\",\n        \"src/heap/trusted-range.h\",\n        \"src/heap/code-stats.cc\",\n        \"src/heap/code-stats.h\",\n        \"src/heap/collection-barrier.cc\",\n        \"src/heap/collection-barrier.h\",\n        \"src/heap/combined-heap.cc\",\n        \"src/heap/combined-heap.h\",\n        \"src/heap/concurrent-marking.cc\",\n        \"src/heap/concurrent-marking.h\",\n        \"src/heap/conservative-stack-visitor.h\",\n        \"src/heap/conservative-stack-visitor-inl.h\",\n        \"src/heap/cppgc-js/cpp-heap.cc\",\n        \"src/heap/cppgc-js/cpp-heap.h\",\n        \"src/heap/cppgc-js/cpp-marking-state.h\",\n        \"src/heap/cppgc-js/cpp-marking-state-inl.h\",\n        \"src/heap/cppgc-js/cpp-snapshot.cc\",\n        \"src/heap/cppgc-js/cpp-snapshot.h\",\n        \"src/heap/cppgc-js/cross-heap-remembered-set.cc\",\n        \"src/heap/cppgc-js/cross-heap-remembered-set.h\",\n        \"src/heap/cppgc-js/unified-heap-marking-state.cc\",\n        \"src/heap/cppgc-js/unified-heap-marking-state.h\",\n        \"src/heap/cppgc-js/unified-heap-marking-state-inl.h\",\n        \"src/heap/cppgc-js/unified-heap-marking-verifier.cc\",\n        \"src/heap/cppgc-js/unified-heap-marking-verifier.h\",\n        \"src/heap/cppgc-js/unified-heap-marking-visitor.cc\",\n        \"src/heap/cppgc-js/unified-heap-marking-visitor.h\",\n        \"src/heap/ephemeron-remembered-set.h\",\n        \"src/heap/ephemeron-remembered-set.cc\",\n        \"src/heap/evacuation-allocator.cc\",\n        \"src/heap/evacuation-allocator.h\",\n        \"src/heap/evacuation-allocator-inl.h\",\n        \"src/heap/evacuation-verifier.cc\",\n        \"src/heap/evacuation-verifier.h\",\n        \"src/heap/evacuation-verifier-inl.h\",\n        \"src/heap/factory.cc\",\n        \"src/heap/factory.h\",\n        \"src/heap/factory-base.cc\",\n        \"src/heap/factory-base.h\",\n        \"src/heap/factory-base-inl.h\",\n        \"src/heap/factory-inl.h\",\n        \"src/heap/finalization-registry-cleanup-task.cc\",\n        \"src/heap/finalization-registry-cleanup-task.h\",\n        \"src/heap/free-list.cc\",\n        \"src/heap/free-list.h\",\n        \"src/heap/free-list-inl.h\",\n        \"src/heap/gc-callbacks.h\",\n        \"src/heap/gc-tracer.cc\",\n        \"src/heap/gc-tracer.h\",\n        \"src/heap/gc-tracer-inl.h\",\n        \"src/heap/heap.cc\",\n        \"src/heap/heap.h\",\n        \"src/heap/heap-allocator.cc\",\n        \"src/heap/heap-allocator.h\",\n        \"src/heap/heap-allocator-inl.h\",\n        \"src/heap/heap-controller.cc\",\n        \"src/heap/heap-controller.h\",\n        \"src/heap/heap-inl.h\",\n        \"src/heap/heap-layout.cc\",\n        \"src/heap/heap-layout.h\",\n        \"src/heap/heap-layout-inl.h\",\n        \"src/heap/heap-layout-tracer.cc\",\n        \"src/heap/heap-layout-tracer.h\",\n        \"src/heap/heap-utils.h\",\n        \"src/heap/heap-utils-inl.h\",\n        \"src/heap/heap-verifier.cc\",\n        \"src/heap/heap-verifier.h\",\n        \"src/heap/heap-write-barrier.cc\",\n        \"src/heap/heap-write-barrier.h\",\n        \"src/heap/heap-write-barrier-inl.h\",\n        \"src/heap/incremental-marking.cc\",\n        \"src/heap/incremental-marking.h\",\n        \"src/heap/incremental-marking-inl.h\",\n        \"src/heap/incremental-marking-job.cc\",\n        \"src/heap/incremental-marking-job.h\",\n        \"src/heap/index-generator.cc\",\n        \"src/heap/index-generator.h\",\n        \"src/heap/large-page-metadata.cc\",\n        \"src/heap/large-page-metadata.h\",\n        \"src/heap/large-page-metadata-inl.h\",\n        \"src/heap/large-spaces.cc\",\n        \"src/heap/large-spaces.h\",\n        \"src/heap/linear-allocation-area.h\",\n        \"src/heap/list.h\",\n        \"src/heap/live-object-range.h\",\n        \"src/heap/live-object-range-inl.h\",\n        \"src/heap/local-factory.cc\",\n        \"src/heap/local-factory.h\",\n        \"src/heap/local-factory-inl.h\",\n        \"src/heap/local-heap.cc\",\n        \"src/heap/local-heap.h\",\n        \"src/heap/local-heap-inl.h\",\n        \"src/heap/main-allocator.cc\",\n        \"src/heap/main-allocator.h\",\n        \"src/heap/main-allocator-inl.h\",\n        \"src/heap/mark-compact.cc\",\n        \"src/heap/mark-compact.h\",\n        \"src/heap/mark-compact-inl.h\",\n        \"src/heap/mark-sweep-utilities.cc\",\n        \"src/heap/mark-sweep-utilities.h\",\n        \"src/heap/minor-mark-sweep.cc\",\n        \"src/heap/minor-mark-sweep.h\",\n        \"src/heap/minor-mark-sweep-inl.h\",\n        \"src/heap/marking.cc\",\n        \"src/heap/marking.h\",\n        \"src/heap/marking-inl.h\",\n        \"src/heap/marking-barrier.cc\",\n        \"src/heap/marking-barrier.h\",\n        \"src/heap/marking-barrier-inl.h\",\n        \"src/heap/marking-progress-tracker.h\",\n        \"src/heap/marking-state.h\",\n        \"src/heap/marking-state-inl.h\",\n        \"src/heap/marking-visitor.h\",\n        \"src/heap/marking-visitor-inl.h\",\n        \"src/heap/marking-worklist.cc\",\n        \"src/heap/marking-worklist.h\",\n        \"src/heap/marking-worklist-inl.h\",\n        \"src/heap/memory-allocator.cc\",\n        \"src/heap/memory-allocator.h\",\n        \"src/heap/memory-balancer.cc\",\n        \"src/heap/memory-balancer.h\",\n        \"src/heap/mutable-page-metadata.cc\",\n        \"src/heap/mutable-page-metadata.h\",\n        \"src/heap/mutable-page-metadata-inl.h\",\n        \"src/heap/memory-chunk.cc\",\n        \"src/heap/memory-chunk.h\",\n        \"src/heap/memory-chunk-constants.h\",\n        \"src/heap/memory-chunk-inl.h\",\n        \"src/heap/memory-chunk-layout.h\",\n        \"src/heap/memory-measurement.cc\",\n        \"src/heap/memory-measurement.h\",\n        \"src/heap/memory-measurement-inl.h\",\n        \"src/heap/memory-reducer.cc\",\n        \"src/heap/memory-reducer.h\",\n        \"src/heap/minor-gc-job.cc\",\n        \"src/heap/minor-gc-job.h\",\n        \"src/heap/new-spaces.cc\",\n        \"src/heap/new-spaces.h\",\n        \"src/heap/new-spaces-inl.h\",\n        \"src/heap/object-lock.h\",\n        \"src/heap/object-lock-inl.h\",\n        \"src/heap/object-stats.cc\",\n        \"src/heap/object-stats.h\",\n        \"src/heap/heap-visitor.cc\",\n        \"src/heap/heap-visitor.h\",\n        \"src/heap/heap-visitor-inl.h\",\n        \"src/heap/page-metadata.cc\",\n        \"src/heap/page-metadata.h\",\n        \"src/heap/page-metadata-inl.h\",\n        \"src/heap/paged-spaces.cc\",\n        \"src/heap/paged-spaces.h\",\n        \"src/heap/paged-spaces-inl.h\",\n        \"src/heap/parallel-work-item.h\",\n        \"src/heap/parked-scope-inl.h\",\n        \"src/heap/parked-scope.h\",\n        \"src/heap/pretenuring-handler.cc\",\n        \"src/heap/pretenuring-handler.h\",\n        \"src/heap/pretenuring-handler-inl.h\",\n        \"src/heap/read-only-heap.cc\",\n        \"src/heap/read-only-heap.h\",\n        \"src/heap/read-only-heap-inl.h\",\n        \"src/heap/read-only-promotion.cc\",\n        \"src/heap/read-only-promotion.h\",\n        \"src/heap/read-only-spaces.cc\",\n        \"src/heap/read-only-spaces.h\",\n        \"src/heap/remembered-set.h\",\n        \"src/heap/remembered-set-inl.h\",\n        \"src/heap/safepoint.cc\",\n        \"src/heap/safepoint.h\",\n        \"src/heap/scavenger.cc\",\n        \"src/heap/scavenger.h\",\n        \"src/heap/scavenger-inl.h\",\n        \"src/heap/slot-set.cc\",\n        \"src/heap/slot-set.h\",\n        \"src/heap/spaces.cc\",\n        \"src/heap/spaces.h\",\n        \"src/heap/spaces-inl.h\",\n        \"src/heap/stress-scavenge-observer.cc\",\n        \"src/heap/stress-scavenge-observer.h\",\n        \"src/heap/sweeper.cc\",\n        \"src/heap/sweeper.h\",\n        \"src/heap/traced-handles-marking-visitor.cc\",\n        \"src/heap/traced-handles-marking-visitor.h\",\n        \"src/heap/visit-object.cc\",\n        \"src/heap/visit-object.h\",\n        \"src/heap/weak-object-worklists.cc\",\n        \"src/heap/weak-object-worklists.h\",\n        \"src/heap/young-generation-marking-visitor.h\",\n        \"src/heap/young-generation-marking-visitor-inl.h\",\n        \"src/heap/zapping.cc\",\n        \"src/heap/zapping.h\",\n        \"src/ic/call-optimization.cc\",\n        \"src/ic/call-optimization.h\",\n        \"src/ic/handler-configuration.cc\",\n        \"src/ic/handler-configuration.h\",\n        \"src/ic/handler-configuration-inl.h\",\n        \"src/ic/ic.cc\",\n        \"src/ic/ic.h\",\n        \"src/ic/ic-inl.h\",\n        \"src/ic/ic-stats.cc\",\n        \"src/ic/ic-stats.h\",\n        \"src/ic/stub-cache.cc\",\n        \"src/ic/stub-cache.h\",\n        \"src/init/bootstrapper.cc\",\n        \"src/init/bootstrapper.h\",\n        \"src/init/heap-symbols.h\",\n        \"src/init/icu_util.cc\",\n        \"src/init/icu_util.h\",\n        \"src/init/isolate-group.cc\",\n        \"src/init/isolate-group.h\",\n        \"src/init/setup-isolate.h\",\n        \"src/init/startup-data-util.cc\",\n        \"src/init/startup-data-util.h\",\n        \"src/init/v8.cc\",\n        \"src/init/v8.h\",\n        \"src/interpreter/block-coverage-builder.h\",\n        \"src/interpreter/bytecode-array-builder.cc\",\n        \"src/interpreter/bytecode-array-builder.h\",\n        \"src/interpreter/bytecode-array-iterator.cc\",\n        \"src/interpreter/bytecode-array-iterator.h\",\n        \"src/interpreter/bytecode-array-random-iterator.cc\",\n        \"src/interpreter/bytecode-array-random-iterator.h\",\n        \"src/interpreter/bytecode-array-writer.cc\",\n        \"src/interpreter/bytecode-array-writer.h\",\n        \"src/interpreter/bytecode-decoder.cc\",\n        \"src/interpreter/bytecode-decoder.h\",\n        \"src/interpreter/bytecode-flags-and-tokens.cc\",\n        \"src/interpreter/bytecode-flags-and-tokens.h\",\n        \"src/interpreter/bytecode-generator.cc\",\n        \"src/interpreter/bytecode-generator.h\",\n        \"src/interpreter/bytecode-jump-table.h\",\n        \"src/interpreter/bytecode-label.cc\",\n        \"src/interpreter/bytecode-label.h\",\n        \"src/interpreter/bytecode-node.cc\",\n        \"src/interpreter/bytecode-node.h\",\n        \"src/interpreter/bytecode-operands.cc\",\n        \"src/interpreter/bytecode-operands.h\",\n        \"src/interpreter/bytecode-register.cc\",\n        \"src/interpreter/bytecode-register.h\",\n        \"src/interpreter/bytecode-register-allocator.h\",\n        \"src/interpreter/bytecode-register-optimizer.cc\",\n        \"src/interpreter/bytecode-register-optimizer.h\",\n        \"src/interpreter/bytecode-source-info.cc\",\n        \"src/interpreter/bytecode-source-info.h\",\n        \"src/interpreter/bytecode-traits.h\",\n        \"src/interpreter/bytecodes.cc\",\n        \"src/interpreter/bytecodes.h\",\n        \"src/interpreter/constant-array-builder.cc\",\n        \"src/interpreter/constant-array-builder.h\",\n        \"src/interpreter/control-flow-builders.cc\",\n        \"src/interpreter/control-flow-builders.h\",\n        \"src/interpreter/handler-table-builder.cc\",\n        \"src/interpreter/handler-table-builder.h\",\n        \"src/interpreter/interpreter.cc\",\n        \"src/interpreter/interpreter.h\",\n        \"src/interpreter/interpreter-generator.h\",\n        \"src/interpreter/interpreter-intrinsics.cc\",\n        \"src/interpreter/interpreter-intrinsics.h\",\n        \"src/json/json-parser.cc\",\n        \"src/json/json-parser.h\",\n        \"src/json/json-stringifier.cc\",\n        \"src/json/json-stringifier.h\",\n        \"src/logging/code-events.h\",\n        \"src/logging/counters.cc\",\n        \"src/logging/counters.h\",\n        \"src/logging/counters-definitions.h\",\n        \"src/logging/counters-scopes.h\",\n        \"src/logging/local-logger.cc\",\n        \"src/logging/local-logger.h\",\n        \"src/logging/log.cc\",\n        \"src/logging/log.h\",\n        \"src/logging/log-file.cc\",\n        \"src/logging/log-file.h\",\n        \"src/logging/log-inl.h\",\n        \"src/logging/metrics.cc\",\n        \"src/logging/metrics.h\",\n        \"src/logging/runtime-call-stats.h\",\n        \"src/logging/runtime-call-stats-scope.h\",\n        \"src/logging/tracing-flags.cc\",\n        \"src/logging/tracing-flags.h\",\n        \"src/numbers/conversions.cc\",\n        \"src/numbers/conversions.h\",\n        \"src/numbers/conversions-inl.h\",\n        \"src/numbers/hash-seed-inl.h\",\n        \"src/numbers/ieee754.cc\",\n        \"src/numbers/ieee754.h\",\n        \"src/numbers/integer-literal.h\",\n        \"src/numbers/integer-literal-inl.h\",\n        \"src/numbers/math-random.cc\",\n        \"src/numbers/math-random.h\",\n        \"src/objects/abstract-code.cc\",\n        \"src/objects/abstract-code.h\",\n        \"src/objects/abstract-code-inl.h\",\n        \"src/objects/all-objects-inl.h\",\n        \"src/objects/allocation-site.h\",\n        \"src/objects/allocation-site-inl.h\",\n        \"src/objects/allocation-site-scopes.h\",\n        \"src/objects/allocation-site-scopes-inl.h\",\n        \"src/objects/api-callbacks.h\",\n        \"src/objects/api-callbacks-inl.h\",\n        \"src/objects/arguments.h\",\n        \"src/objects/arguments-inl.h\",\n        \"src/objects/backing-store.cc\",\n        \"src/objects/backing-store.h\",\n        \"src/objects/bigint.cc\",\n        \"src/objects/bigint.h\",\n        \"src/objects/bytecode-array.cc\",\n        \"src/objects/bytecode-array.h\",\n        \"src/objects/bytecode-array-inl.h\",\n        \"src/objects/call-site-info.cc\",\n        \"src/objects/call-site-info.h\",\n        \"src/objects/call-site-info-inl.h\",\n        \"src/objects/casting.h\",\n        \"src/objects/casting-inl.h\",\n        \"src/objects/cell.h\",\n        \"src/objects/cell-inl.h\",\n        \"src/objects/code.cc\",\n        \"src/objects/code.h\",\n        \"src/objects/code-inl.h\",\n        \"src/objects/code-kind.cc\",\n        \"src/objects/code-kind.h\",\n        \"src/objects/compilation-cache-table.cc\",\n        \"src/objects/compilation-cache-table.h\",\n        \"src/objects/compilation-cache-table-inl.h\",\n        \"src/objects/compressed-slots.h\",\n        \"src/objects/compressed-slots-inl.h\",\n        \"src/objects/contexts.cc\",\n        \"src/objects/contexts.h\",\n        \"src/objects/contexts-inl.h\",\n        \"src/objects/data-handler.h\",\n        \"src/objects/data-handler-inl.h\",\n        \"src/objects/debug-objects.cc\",\n        \"src/objects/debug-objects.h\",\n        \"src/objects/debug-objects-inl.h\",\n        \"src/objects/deoptimization-data.cc\",\n        \"src/objects/deoptimization-data.h\",\n        \"src/objects/deoptimization-data-inl.h\",\n        \"src/objects/dependent-code.cc\",\n        \"src/objects/dependent-code.h\",\n        \"src/objects/dependent-code-inl.h\",\n        \"src/objects/descriptor-array.h\",\n        \"src/objects/descriptor-array-inl.h\",\n        \"src/objects/dictionary.h\",\n        \"src/objects/dictionary-inl.h\",\n        \"src/objects/elements.cc\",\n        \"src/objects/elements.h\",\n        \"src/objects/elements-inl.h\",\n        \"src/objects/elements-kind.cc\",\n        \"src/objects/elements-kind.h\",\n        \"src/objects/embedder-data-array.cc\",\n        \"src/objects/embedder-data-array.h\",\n        \"src/objects/embedder-data-array-inl.h\",\n        \"src/objects/embedder-data-slot.h\",\n        \"src/objects/embedder-data-slot-inl.h\",\n        \"src/objects/feedback-cell.h\",\n        \"src/objects/feedback-cell-inl.h\",\n        \"src/objects/feedback-vector.cc\",\n        \"src/objects/feedback-vector.h\",\n        \"src/objects/feedback-vector-inl.h\",\n        \"src/objects/field-index.h\",\n        \"src/objects/field-index-inl.h\",\n        \"src/objects/field-type.cc\",\n        \"src/objects/field-type.h\",\n        \"src/objects/fixed-array.cc\",\n        \"src/objects/fixed-array.h\",\n        \"src/objects/fixed-array-inl.h\",\n        \"src/objects/foreign.h\",\n        \"src/objects/foreign-inl.h\",\n        \"src/objects/free-space.h\",\n        \"src/objects/free-space-inl.h\",\n        \"src/objects/function-kind.h\",\n        \"src/objects/function-syntax-kind.h\",\n        \"src/objects/hash-table.h\",\n        \"src/objects/hash-table-inl.h\",\n        \"src/objects/heap-number.h\",\n        \"src/objects/heap-number-inl.h\",\n        \"src/objects/heap-object.h\",\n        \"src/objects/heap-object-inl.h\",\n        \"src/objects/instance-type.h\",\n        \"src/objects/instance-type-checker.h\",\n        \"src/objects/instance-type-inl.h\",\n        \"src/objects/internal-index.h\",\n        \"src/objects/instruction-stream.cc\",\n        \"src/objects/instruction-stream.h\",\n        \"src/objects/instruction-stream-inl.h\",\n        \"src/objects/js-array.h\",\n        \"src/objects/js-array-buffer.cc\",\n        \"src/objects/js-array-buffer.h\",\n        \"src/objects/js-array-buffer-inl.h\",\n        \"src/objects/js-array-inl.h\",\n        \"src/objects/js-atomics-synchronization.cc\",\n        \"src/objects/js-atomics-synchronization.h\",\n        \"src/objects/js-atomics-synchronization-inl.h\",\n        \"src/objects/js-collection.h\",\n        \"src/objects/js-collection-inl.h\",\n        \"src/objects/js-collection-iterator.h\",\n        \"src/objects/js-collection-iterator-inl.h\",\n        \"src/objects/js-disposable-stack.cc\",\n        \"src/objects/js-disposable-stack.h\",\n        \"src/objects/js-disposable-stack-inl.h\",\n        \"src/objects/js-function.cc\",\n        \"src/objects/js-function.h\",\n        \"src/objects/js-function-inl.h\",\n        \"src/objects/js-generator.h\",\n        \"src/objects/js-generator-inl.h\",\n        \"src/objects/js-iterator-helpers.h\",\n        \"src/objects/js-iterator-helpers-inl.h\",\n        \"src/objects/js-objects.cc\",\n        \"src/objects/js-objects.h\",\n        \"src/objects/js-objects-inl.h\",\n        \"src/objects/js-promise.h\",\n        \"src/objects/js-promise-inl.h\",\n        \"src/objects/js-proxy.h\",\n        \"src/objects/js-proxy-inl.h\",\n        \"src/objects/js-raw-json.cc\",\n        \"src/objects/js-raw-json.h\",\n        \"src/objects/js-raw-json-inl.h\",\n        \"src/objects/js-regexp.cc\",\n        \"src/objects/js-regexp.h\",\n        \"src/objects/js-regexp-inl.h\",\n        \"src/objects/js-regexp-string-iterator.h\",\n        \"src/objects/js-regexp-string-iterator-inl.h\",\n        \"src/objects/js-shadow-realm.h\",\n        \"src/objects/js-shadow-realm-inl.h\",\n        \"src/objects/js-shared-array.h\",\n        \"src/objects/js-shared-array-inl.h\",\n        \"src/objects/js-struct.cc\",\n        \"src/objects/js-struct.h\",\n        \"src/objects/js-struct-inl.h\",\n        \"src/objects/js-temporal-objects.cc\",\n        \"src/objects/js-temporal-objects.h\",\n        \"src/objects/js-temporal-objects-inl.h\",\n        \"src/objects/js-weak-refs.cc\",\n        \"src/objects/js-weak-refs.h\",\n        \"src/objects/js-weak-refs-inl.h\",\n        \"src/objects/keys.cc\",\n        \"src/objects/keys.h\",\n        \"src/objects/literal-objects.cc\",\n        \"src/objects/literal-objects.h\",\n        \"src/objects/literal-objects-inl.h\",\n        \"src/objects/lookup.cc\",\n        \"src/objects/lookup.h\",\n        \"src/objects/lookup-cache.cc\",\n        \"src/objects/lookup-cache.h\",\n        \"src/objects/lookup-cache-inl.h\",\n        \"src/objects/lookup-inl.h\",\n        \"src/objects/managed.cc\",\n        \"src/objects/managed.h\",\n        \"src/objects/managed-inl.h\",\n        \"src/objects/map.cc\",\n        \"src/objects/map.h\",\n        \"src/objects/map-inl.h\",\n        \"src/objects/map-updater.cc\",\n        \"src/objects/map-updater.h\",\n        \"src/objects/maybe-object.h\",\n        \"src/objects/maybe-object-inl.h\",\n        \"src/objects/megadom-handler.h\",\n        \"src/objects/megadom-handler-inl.h\",\n        \"src/objects/microtask.h\",\n        \"src/objects/microtask-inl.h\",\n        \"src/objects/module.cc\",\n        \"src/objects/module.h\",\n        \"src/objects/module-inl.h\",\n        \"src/objects/name.h\",\n        \"src/objects/name-inl.h\",\n        \"src/objects/object-list-macros.h\",\n        \"src/objects/object-macros.h\",\n        \"src/objects/object-macros-undef.h\",\n        \"src/objects/object-type.cc\",\n        \"src/objects/object-type.h\",\n        \"src/objects/objects.cc\",\n        \"src/objects/objects.h\",\n        \"src/objects/objects-body-descriptors.h\",\n        \"src/objects/objects-body-descriptors-inl.h\",\n        \"src/objects/objects-definitions.h\",\n        \"src/objects/objects-inl.h\",\n        \"src/objects/oddball.h\",\n        \"src/objects/oddball-inl.h\",\n        \"src/objects/off-heap-hash-table.h\",\n        \"src/objects/off-heap-hash-table-inl.h\",\n        \"src/objects/hole.h\",\n        \"src/objects/trusted-object.h\",\n        \"src/objects/trusted-object-inl.h\",\n        \"src/objects/hole-inl.h\",\n        \"src/objects/option-utils.cc\",\n        \"src/objects/option-utils.h\",\n        \"src/objects/ordered-hash-table.cc\",\n        \"src/objects/ordered-hash-table.h\",\n        \"src/objects/ordered-hash-table-inl.h\",\n        \"src/objects/primitive-heap-object.h\",\n        \"src/objects/primitive-heap-object-inl.h\",\n        \"src/objects/promise.h\",\n        \"src/objects/promise-inl.h\",\n        \"src/objects/property.cc\",\n        \"src/objects/property.h\",\n        \"src/objects/property-array.h\",\n        \"src/objects/property-array-inl.h\",\n        \"src/objects/property-cell.h\",\n        \"src/objects/property-cell-inl.h\",\n        \"src/objects/property-descriptor.cc\",\n        \"src/objects/property-descriptor.h\",\n        \"src/objects/property-descriptor-object.h\",\n        \"src/objects/property-descriptor-object-inl.h\",\n        \"src/objects/property-details.h\",\n        \"src/objects/prototype.h\",\n        \"src/objects/prototype-info.h\",\n        \"src/objects/prototype-info-inl.h\",\n        \"src/objects/prototype-inl.h\",\n        \"src/objects/regexp-match-info.cc\",\n        \"src/objects/regexp-match-info.h\",\n        \"src/objects/regexp-match-info-inl.h\",\n        \"src/objects/scope-info.cc\",\n        \"src/objects/scope-info.h\",\n        \"src/objects/scope-info-inl.h\",\n        \"src/objects/script.h\",\n        \"src/objects/script-inl.h\",\n        \"src/objects/shared-function-info.cc\",\n        \"src/objects/shared-function-info.h\",\n        \"src/objects/shared-function-info-inl.h\",\n        \"src/objects/simd.cc\",\n        \"src/objects/simd.h\",\n        \"src/objects/slots.h\",\n        \"src/objects/slots-atomic-inl.h\",\n        \"src/objects/slots-inl.h\",\n        \"src/objects/smi.h\",\n        \"src/objects/smi-inl.h\",\n        \"src/objects/source-text-module.cc\",\n        \"src/objects/source-text-module.h\",\n        \"src/objects/source-text-module-inl.h\",\n        \"src/objects/string.cc\",\n        \"src/objects/string.h\",\n        \"src/objects/string-comparator.cc\",\n        \"src/objects/string-comparator.h\",\n        \"src/objects/string-forwarding-table.cc\",\n        \"src/objects/string-forwarding-table.h\",\n        \"src/objects/string-forwarding-table-inl.h\",\n        \"src/objects/string-inl.h\",\n        \"src/objects/string-set.h\",\n        \"src/objects/string-set-inl.h\",\n        \"src/objects/string-table.cc\",\n        \"src/objects/string-table.h\",\n        \"src/objects/string-table-inl.h\",\n        \"src/objects/struct.h\",\n        \"src/objects/struct-inl.h\",\n        \"src/objects/swiss-hash-table-helpers.h\",\n        \"src/objects/swiss-name-dictionary.cc\",\n        \"src/objects/swiss-name-dictionary.h\",\n        \"src/objects/swiss-name-dictionary-inl.h\",\n        \"src/objects/symbol-table.cc\",\n        \"src/objects/synthetic-module.cc\",\n        \"src/objects/synthetic-module.h\",\n        \"src/objects/synthetic-module-inl.h\",\n        \"src/objects/tagged.h\",\n        \"src/objects/tagged-field.h\",\n        \"src/objects/tagged-field-inl.h\",\n        \"src/objects/tagged-impl.cc\",\n        \"src/objects/tagged-impl.h\",\n        \"src/objects/tagged-impl-inl.h\",\n        \"src/objects/tagged-index.h\",\n        \"src/objects/tagged-value.h\",\n        \"src/objects/tagged-value-inl.h\",\n        \"src/objects/union.h\",\n        \"src/objects/template-objects.cc\",\n        \"src/objects/template-objects.h\",\n        \"src/objects/template-objects-inl.h\",\n        \"src/objects/templates.cc\",\n        \"src/objects/templates.h\",\n        \"src/objects/templates-inl.h\",\n        \"src/objects/torque-defined-classes.h\",\n        \"src/objects/torque-defined-classes-inl.h\",\n        \"src/objects/transitions.cc\",\n        \"src/objects/transitions.h\",\n        \"src/objects/transitions-inl.h\",\n        \"src/objects/turbofan-types.h\",\n        \"src/objects/turbofan-types-inl.h\",\n        \"src/objects/turboshaft-types.h\",\n        \"src/objects/turboshaft-types-inl.h\",\n        \"src/objects/type-hints.cc\",\n        \"src/objects/type-hints.h\",\n        \"src/objects/value-serializer.cc\",\n        \"src/objects/value-serializer.h\",\n        \"src/objects/visitors.cc\",\n        \"src/objects/visitors.h\",\n        \"src/objects/visitors-inl.h\",\n        \"src/objects/waiter-queue-node.cc\",\n        \"src/objects/waiter-queue-node.h\",\n        \"src/parsing/expression-scope.h\",\n        \"src/parsing/func-name-inferrer.cc\",\n        \"src/parsing/func-name-inferrer.h\",\n        \"src/parsing/import-attributes.cc\",\n        \"src/parsing/import-attributes.h\",\n        \"src/parsing/keywords-gen.h\",\n        \"src/parsing/literal-buffer.cc\",\n        \"src/parsing/literal-buffer.h\",\n        \"src/parsing/parse-info.cc\",\n        \"src/parsing/parse-info.h\",\n        \"src/parsing/parser.cc\",\n        \"src/parsing/parser.h\",\n        \"src/parsing/parser-base.h\",\n        \"src/parsing/parsing.cc\",\n        \"src/parsing/parsing.h\",\n        \"src/parsing/pending-compilation-error-handler.cc\",\n        \"src/parsing/pending-compilation-error-handler.h\",\n        \"src/parsing/preparse-data.cc\",\n        \"src/parsing/preparse-data.h\",\n        \"src/parsing/preparse-data-impl.h\",\n        \"src/parsing/preparser.cc\",\n        \"src/parsing/preparser.h\",\n        \"src/parsing/preparser-logger.h\",\n        \"src/parsing/rewriter.cc\",\n        \"src/parsing/rewriter.h\",\n        \"src/parsing/scanner.cc\",\n        \"src/parsing/scanner.h\",\n        \"src/parsing/scanner-character-streams.cc\",\n        \"src/parsing/scanner-character-streams.h\",\n        \"src/parsing/scanner-inl.h\",\n        \"src/parsing/token.cc\",\n        \"src/parsing/token.h\",\n        \"src/profiler/allocation-tracker.cc\",\n        \"src/profiler/allocation-tracker.h\",\n        \"src/profiler/circular-queue.h\",\n        \"src/profiler/circular-queue-inl.h\",\n        \"src/profiler/cpu-profiler.cc\",\n        \"src/profiler/cpu-profiler.h\",\n        \"src/profiler/cpu-profiler-inl.h\",\n        \"src/profiler/heap-profiler.cc\",\n        \"src/profiler/heap-profiler.h\",\n        \"src/profiler/heap-snapshot-generator.cc\",\n        \"src/profiler/heap-snapshot-generator.h\",\n        \"src/profiler/heap-snapshot-generator-inl.h\",\n        \"src/profiler/output-stream-writer.h\",\n        \"src/profiler/profile-generator.cc\",\n        \"src/profiler/profile-generator.h\",\n        \"src/profiler/profile-generator-inl.h\",\n        \"src/profiler/profiler-listener.cc\",\n        \"src/profiler/profiler-listener.h\",\n        \"src/profiler/profiler-stats.cc\",\n        \"src/profiler/profiler-stats.h\",\n        \"src/profiler/sampling-heap-profiler.cc\",\n        \"src/profiler/sampling-heap-profiler.h\",\n        \"src/profiler/strings-storage.cc\",\n        \"src/profiler/strings-storage.h\",\n        \"src/profiler/symbolizer.cc\",\n        \"src/profiler/symbolizer.h\",\n        \"src/profiler/tick-sample.cc\",\n        \"src/profiler/tick-sample.h\",\n        \"src/profiler/tracing-cpu-profiler.cc\",\n        \"src/profiler/tracing-cpu-profiler.h\",\n        \"src/profiler/weak-code-registry.cc\",\n        \"src/profiler/weak-code-registry.h\",\n        \"src/regexp/experimental/experimental.cc\",\n        \"src/regexp/experimental/experimental.h\",\n        \"src/regexp/experimental/experimental-bytecode.cc\",\n        \"src/regexp/experimental/experimental-bytecode.h\",\n        \"src/regexp/experimental/experimental-compiler.cc\",\n        \"src/regexp/experimental/experimental-compiler.h\",\n        \"src/regexp/experimental/experimental-interpreter.cc\",\n        \"src/regexp/experimental/experimental-interpreter.h\",\n        \"src/regexp/regexp.cc\",\n        \"src/regexp/regexp.h\",\n        \"src/regexp/regexp-ast.cc\",\n        \"src/regexp/regexp-ast.h\",\n        \"src/regexp/regexp-bytecode-generator.cc\",\n        \"src/regexp/regexp-bytecode-generator.h\",\n        \"src/regexp/regexp-bytecode-generator-inl.h\",\n        \"src/regexp/regexp-bytecode-peephole.cc\",\n        \"src/regexp/regexp-bytecode-peephole.h\",\n        \"src/regexp/regexp-bytecodes.cc\",\n        \"src/regexp/regexp-bytecodes.h\",\n        \"src/regexp/regexp-compiler.cc\",\n        \"src/regexp/regexp-compiler.h\",\n        \"src/regexp/regexp-compiler-tonode.cc\",\n        \"src/regexp/regexp-dotprinter.cc\",\n        \"src/regexp/regexp-dotprinter.h\",\n        \"src/regexp/regexp-error.cc\",\n        \"src/regexp/regexp-error.h\",\n        \"src/regexp/regexp-flags.h\",\n        \"src/regexp/regexp-interpreter.cc\",\n        \"src/regexp/regexp-interpreter.h\",\n        \"src/regexp/regexp-macro-assembler.cc\",\n        \"src/regexp/regexp-macro-assembler.h\",\n        \"src/regexp/regexp-macro-assembler-arch.h\",\n        \"src/regexp/regexp-macro-assembler-tracer.cc\",\n        \"src/regexp/regexp-macro-assembler-tracer.h\",\n        \"src/regexp/regexp-nodes.h\",\n        \"src/regexp/regexp-parser.cc\",\n        \"src/regexp/regexp-parser.h\",\n        \"src/regexp/regexp-result-vector.cc\",\n        \"src/regexp/regexp-result-vector.h\",\n        \"src/regexp/regexp-stack.cc\",\n        \"src/regexp/regexp-stack.h\",\n        \"src/regexp/regexp-utils.cc\",\n        \"src/regexp/regexp-utils.h\",\n        \"src/regexp/special-case.h\",\n        \"src/roots/roots.cc\",\n        \"src/roots/roots.h\",\n        \"src/roots/roots-inl.h\",\n        \"src/roots/static-roots.h\",\n        \"src/runtime/runtime.cc\",\n        \"src/runtime/runtime.h\",\n        \"src/runtime/runtime-array.cc\",\n        \"src/runtime/runtime-atomics.cc\",\n        \"src/runtime/runtime-bigint.cc\",\n        \"src/runtime/runtime-classes.cc\",\n        \"src/runtime/runtime-collections.cc\",\n        \"src/runtime/runtime-compiler.cc\",\n        \"src/runtime/runtime-date.cc\",\n        \"src/runtime/runtime-debug.cc\",\n        \"src/runtime/runtime-forin.cc\",\n        \"src/runtime/runtime-function.cc\",\n        \"src/runtime/runtime-futex.cc\",\n        \"src/runtime/runtime-generator.cc\",\n        \"src/runtime/runtime-internal.cc\",\n        \"src/runtime/runtime-literals.cc\",\n        \"src/runtime/runtime-module.cc\",\n        \"src/runtime/runtime-numbers.cc\",\n        \"src/runtime/runtime-object.cc\",\n        \"src/runtime/runtime-operators.cc\",\n        \"src/runtime/runtime-promise.cc\",\n        \"src/runtime/runtime-proxy.cc\",\n        \"src/runtime/runtime-regexp.cc\",\n        \"src/runtime/runtime-scopes.cc\",\n        \"src/runtime/runtime-shadow-realm.cc\",\n        \"src/runtime/runtime-strings.cc\",\n        \"src/runtime/runtime-symbol.cc\",\n        \"src/runtime/runtime-temporal.cc\",\n        \"src/runtime/runtime-test.cc\",\n        \"src/runtime/runtime-trace.cc\",\n        \"src/runtime/runtime-typedarray.cc\",\n        \"src/runtime/runtime-utils.cc\",\n        \"src/runtime/runtime-utils.h\",\n        \"src/runtime/runtime-weak-refs.cc\",\n        \"src/sandbox/bounded-size.h\",\n        \"src/sandbox/bounded-size-inl.h\",\n        \"src/sandbox/check.h\",\n        \"src/sandbox/external-pointer.h\",\n        \"src/sandbox/external-pointer-inl.h\",\n        \"src/sandbox/external-pointer-table.cc\",\n        \"src/sandbox/external-pointer-table.h\",\n        \"src/sandbox/external-pointer-table-inl.h\",\n        \"src/sandbox/cppheap-pointer-inl.h\",\n        \"src/sandbox/cppheap-pointer-table.cc\",\n        \"src/sandbox/cppheap-pointer-table.h\",\n        \"src/sandbox/cppheap-pointer-table-inl.h\",\n        \"src/sandbox/code-pointer-table.cc\",\n        \"src/sandbox/code-pointer-table.h\",\n        \"src/sandbox/code-pointer-table-inl.h\",\n        \"src/sandbox/js-dispatch-table.cc\",\n        \"src/sandbox/js-dispatch-table.h\",\n        \"src/sandbox/js-dispatch-table-inl.h\",\n        \"src/sandbox/trusted-pointer-table.cc\",\n        \"src/sandbox/trusted-pointer-table.h\",\n        \"src/sandbox/trusted-pointer-table-inl.h\",\n        \"src/sandbox/code-pointer.h\",\n        \"src/sandbox/code-pointer-inl.h\",\n        \"src/sandbox/compactible-external-entity-table-inl.h\",\n        \"src/sandbox/compactible-external-entity-table.h\",\n        \"src/sandbox/isolate.h\",\n        \"src/sandbox/isolate-inl.h\",\n        \"src/sandbox/indirect-pointer.h\",\n        \"src/sandbox/indirect-pointer-tag.h\",\n        \"src/sandbox/indirect-pointer-inl.h\",\n        \"src/sandbox/code-entrypoint-tag.h\",\n        \"src/sandbox/external-entity-table.h\",\n        \"src/sandbox/external-entity-table-inl.h\",\n        \"src/sandbox/hardware-support.cc\",\n        \"src/sandbox/hardware-support.h\",\n        \"src/sandbox/sandbox.cc\",\n        \"src/sandbox/sandbox.h\",\n        \"src/sandbox/sandboxed-pointer.h\",\n        \"src/sandbox/sandboxed-pointer-inl.h\",\n        \"src/sandbox/tagged-payload.h\",\n        \"src/sandbox/testing.cc\",\n        \"src/sandbox/testing.h\",\n        \"src/snapshot/code-serializer.cc\",\n        \"src/snapshot/code-serializer.h\",\n        \"src/snapshot/context-deserializer.cc\",\n        \"src/snapshot/context-deserializer.h\",\n        \"src/snapshot/context-serializer.cc\",\n        \"src/snapshot/context-serializer.h\",\n        \"src/snapshot/deserializer.cc\",\n        \"src/snapshot/deserializer.h\",\n        \"src/snapshot/embedded/embedded-data.cc\",\n        \"src/snapshot/embedded/embedded-data.h\",\n        \"src/snapshot/embedded/embedded-data-inl.h\",\n        \"src/snapshot/embedded/embedded-file-writer.h\",\n        \"src/snapshot/embedded/embedded-file-writer-interface.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-base.h\",\n        \"src/snapshot/object-deserializer.cc\",\n        \"src/snapshot/object-deserializer.h\",\n        \"src/snapshot/read-only-deserializer.cc\",\n        \"src/snapshot/read-only-deserializer.h\",\n        \"src/snapshot/read-only-serializer.cc\",\n        \"src/snapshot/read-only-serializer.h\",\n        \"src/snapshot/read-only-serializer-deserializer.h\",\n        \"src/snapshot/references.h\",\n        \"src/snapshot/roots-serializer.cc\",\n        \"src/snapshot/roots-serializer.h\",\n        \"src/snapshot/serializer.cc\",\n        \"src/snapshot/serializer.h\",\n        \"src/snapshot/serializer-deserializer.cc\",\n        \"src/snapshot/serializer-deserializer.h\",\n        \"src/snapshot/serializer-inl.h\",\n        \"src/snapshot/shared-heap-deserializer.cc\",\n        \"src/snapshot/shared-heap-deserializer.h\",\n        \"src/snapshot/shared-heap-serializer.cc\",\n        \"src/snapshot/shared-heap-serializer.h\",\n        \"src/snapshot/snapshot.cc\",\n        \"src/snapshot/snapshot.h\",\n        \"src/snapshot/snapshot-data.cc\",\n        \"src/snapshot/snapshot-data.h\",\n        \"src/snapshot/snapshot-source-sink.cc\",\n        \"src/snapshot/snapshot-source-sink.h\",\n        \"src/snapshot/snapshot-utils.cc\",\n        \"src/snapshot/snapshot-utils.h\",\n        \"src/snapshot/sort-builtins.cc\",\n        \"src/snapshot/sort-builtins.h\",\n        \"src/snapshot/startup-deserializer.cc\",\n        \"src/snapshot/startup-deserializer.h\",\n        \"src/snapshot/startup-serializer.cc\",\n        \"src/snapshot/startup-serializer.h\",\n        \"src/strings/char-predicates.h\",\n        \"src/strings/char-predicates-inl.h\",\n        \"src/strings/string-builder.cc\",\n        \"src/strings/string-builder.h\",\n        \"src/strings/string-builder-inl.h\",\n        \"src/strings/string-case.cc\",\n        \"src/strings/string-case.h\",\n        \"src/strings/string-hasher.h\",\n        \"src/strings/string-hasher-inl.h\",\n        \"src/strings/string-search.h\",\n        \"src/strings/string-stream.cc\",\n        \"src/strings/string-stream.h\",\n        \"src/strings/unicode.cc\",\n        \"src/strings/unicode.h\",\n        \"src/strings/unicode-decoder.cc\",\n        \"src/strings/unicode-decoder.h\",\n        \"src/strings/unicode-inl.h\",\n        \"src/strings/uri.cc\",\n        \"src/strings/uri.h\",\n        \"src/tasks/cancelable-task.cc\",\n        \"src/tasks/cancelable-task.h\",\n        \"src/tasks/operations-barrier.cc\",\n        \"src/tasks/operations-barrier.h\",\n        \"src/tasks/task-utils.cc\",\n        \"src/tasks/task-utils.h\",\n        \"src/temporal/temporal-parser.cc\",\n        \"src/temporal/temporal-parser.h\",\n        \"src/torque/runtime-macro-shims.h\",\n        \"src/tracing/trace-event.cc\",\n        \"src/tracing/trace-event.h\",\n        \"src/tracing/trace-event-no-perfetto.h\",\n        \"src/tracing/traced-value.cc\",\n        \"src/tracing/traced-value.h\",\n        \"src/tracing/tracing-category-observer.cc\",\n        \"src/tracing/tracing-category-observer.h\",\n        \"src/utils/address-map.cc\",\n        \"src/utils/address-map.h\",\n        \"src/utils/allocation.cc\",\n        \"src/utils/allocation.h\",\n        \"src/utils/bit-vector.cc\",\n        \"src/utils/bit-vector.h\",\n        \"src/utils/boxed-float.h\",\n        \"src/utils/detachable-vector.cc\",\n        \"src/utils/detachable-vector.h\",\n        \"src/utils/hex-format.cc\",\n        \"src/utils/hex-format.h\",\n        \"src/utils/identity-map.cc\",\n        \"src/utils/identity-map.h\",\n        \"src/utils/locked-queue.h\",\n        \"src/utils/locked-queue-inl.h\",\n        \"src/utils/memcopy.cc\",\n        \"src/utils/memcopy.h\",\n        \"src/utils/ostreams.cc\",\n        \"src/utils/ostreams.h\",\n        \"src/utils/scoped-list.h\",\n        \"src/utils/sha-256.cc\",\n        \"src/utils/sha-256.h\",\n        \"src/utils/sparse-bit-vector.h\",\n        \"src/utils/utils.cc\",\n        \"src/utils/utils.h\",\n        \"src/utils/utils-inl.h\",\n        \"src/utils/version.cc\",\n        \"src/utils/version.h\",\n        \"src/zone/accounting-allocator.cc\",\n        \"src/zone/accounting-allocator.h\",\n        \"src/zone/compressed-zone-ptr.h\",\n        \"src/zone/type-stats.cc\",\n        \"src/zone/type-stats.h\",\n        \"src/zone/zone.cc\",\n        \"src/zone/zone.h\",\n        \"src/zone/zone-allocator.h\",\n        \"src/zone/zone-chunk-list.h\",\n        \"src/zone/zone-compact-set.h\",\n        \"src/zone/zone-compression.h\",\n        \"src/zone/zone-containers.h\",\n        \"src/zone/zone-hashmap.h\",\n        \"src/zone/zone-list.h\",\n        \"src/zone/zone-list-inl.h\",\n        \"src/zone/zone-segment.cc\",\n        \"src/zone/zone-segment.h\",\n        \"src/zone/zone-type-traits.h\",\n        \"src/zone/zone-utils.h\",\n        \"third_party/siphash/halfsiphash.cc\",\n        \"third_party/siphash/halfsiphash.h\",\n        \"third_party/utf8-decoder/utf8-decoder.h\",\n        \":cppgc_base_files\",\n        \":generated_bytecode_builtins_list\",\n        \":v8_bigint\",\n        \":v8_heap_base_files\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_ia32\": [\n            \"src/baseline/ia32/baseline-assembler-ia32-inl.h\",\n            \"src/baseline/ia32/baseline-compiler-ia32-inl.h\",\n            \"src/codegen/ia32/assembler-ia32.cc\",\n            \"src/codegen/ia32/assembler-ia32.h\",\n            \"src/codegen/ia32/assembler-ia32-inl.h\",\n            \"src/codegen/ia32/constants-ia32.h\",\n            \"src/codegen/ia32/cpu-ia32.cc\",\n            \"src/codegen/ia32/fma-instr.h\",\n            \"src/codegen/ia32/interface-descriptors-ia32-inl.h\",\n            \"src/codegen/ia32/macro-assembler-ia32.cc\",\n            \"src/codegen/ia32/macro-assembler-ia32.h\",\n            \"src/codegen/ia32/register-ia32.h\",\n            \"src/codegen/ia32/reglist-ia32.h\",\n            \"src/codegen/ia32/sse-instr.h\",\n            \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.cc\",\n            \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.h\",\n            \"src/deoptimizer/ia32/deoptimizer-ia32.cc\",\n            \"src/diagnostics/ia32/disasm-ia32.cc\",\n            \"src/diagnostics/ia32/unwinder-ia32.cc\",\n            \"src/execution/ia32/frame-constants-ia32.cc\",\n            \"src/execution/ia32/frame-constants-ia32.h\",\n            \"src/regexp/ia32/regexp-macro-assembler-ia32.cc\",\n            \"src/regexp/ia32/regexp-macro-assembler-ia32.h\",\n            \"src/wasm/baseline/ia32/liftoff-assembler-ia32-inl.h\",\n        ],\n        \"@v8//bazel/config:v8_target_x64\": [\n            \"src/baseline/x64/baseline-assembler-x64-inl.h\",\n            \"src/baseline/x64/baseline-compiler-x64-inl.h\",\n            \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.cc\",\n            \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.h\",\n            \"src/codegen/x64/assembler-x64.cc\",\n            \"src/codegen/x64/assembler-x64.h\",\n            \"src/codegen/x64/assembler-x64-inl.h\",\n            \"src/codegen/x64/builtin-jump-table-info-x64.cc\",\n            \"src/codegen/x64/builtin-jump-table-info-x64.h\",\n            \"src/codegen/x64/constants-x64.h\",\n            \"src/codegen/x64/cpu-x64.cc\",\n            \"src/codegen/x64/fma-instr.h\",\n            \"src/codegen/x64/interface-descriptors-x64-inl.h\",\n            \"src/codegen/x64/macro-assembler-x64.cc\",\n            \"src/codegen/x64/macro-assembler-x64.h\",\n            \"src/codegen/x64/register-x64.h\",\n            \"src/codegen/x64/reglist-x64.h\",\n            \"src/codegen/x64/sse-instr.h\",\n            \"src/deoptimizer/x64/deoptimizer-x64.cc\",\n            \"src/diagnostics/x64/disasm-x64.cc\",\n            \"src/diagnostics/x64/eh-frame-x64.cc\",\n            \"src/diagnostics/x64/unwinder-x64.cc\",\n            \"src/execution/x64/frame-constants-x64.cc\",\n            \"src/execution/x64/frame-constants-x64.h\",\n            \"src/regexp/x64/regexp-macro-assembler-x64.cc\",\n            \"src/regexp/x64/regexp-macro-assembler-x64.h\",\n            \"src/wasm/baseline/x64/liftoff-assembler-x64-inl.h\",\n        ],\n        \"@v8//bazel/config:v8_target_arm\": [\n            \"src/baseline/arm/baseline-assembler-arm-inl.h\",\n            \"src/baseline/arm/baseline-compiler-arm-inl.h\",\n            \"src/codegen/arm/assembler-arm.cc\",\n            \"src/codegen/arm/assembler-arm.h\",\n            \"src/codegen/arm/assembler-arm-inl.h\",\n            \"src/codegen/arm/constants-arm.cc\",\n            \"src/codegen/arm/constants-arm.h\",\n            \"src/codegen/arm/cpu-arm.cc\",\n            \"src/codegen/arm/interface-descriptors-arm-inl.h\",\n            \"src/codegen/arm/macro-assembler-arm.cc\",\n            \"src/codegen/arm/macro-assembler-arm.h\",\n            \"src/codegen/arm/register-arm.h\",\n            \"src/codegen/arm/reglist-arm.h\",\n            \"src/deoptimizer/arm/deoptimizer-arm.cc\",\n            \"src/diagnostics/arm/disasm-arm.cc\",\n            \"src/diagnostics/arm/eh-frame-arm.cc\",\n            \"src/diagnostics/arm/unwinder-arm.cc\",\n            \"src/execution/arm/frame-constants-arm.cc\",\n            \"src/execution/arm/frame-constants-arm.h\",\n            \"src/execution/arm/simulator-arm.cc\",\n            \"src/execution/arm/simulator-arm.h\",\n            \"src/regexp/arm/regexp-macro-assembler-arm.cc\",\n            \"src/regexp/arm/regexp-macro-assembler-arm.h\",\n            \"src/wasm/baseline/arm/liftoff-assembler-arm-inl.h\",\n        ],\n        \"@v8//bazel/config:v8_target_arm64\": [\n            \"src/baseline/arm64/baseline-assembler-arm64-inl.h\",\n            \"src/baseline/arm64/baseline-compiler-arm64-inl.h\",\n            \"src/codegen/arm64/assembler-arm64.cc\",\n            \"src/codegen/arm64/assembler-arm64.h\",\n            \"src/codegen/arm64/assembler-arm64-inl.h\",\n            \"src/codegen/arm64/constants-arm64.h\",\n            \"src/codegen/arm64/cpu-arm64.cc\",\n            \"src/codegen/arm64/decoder-arm64.cc\",\n            \"src/codegen/arm64/decoder-arm64.h\",\n            \"src/codegen/arm64/decoder-arm64-inl.h\",\n            \"src/codegen/arm64/instructions-arm64.cc\",\n            \"src/codegen/arm64/instructions-arm64.h\",\n            \"src/codegen/arm64/instructions-arm64-constants.cc\",\n            \"src/codegen/arm64/interface-descriptors-arm64-inl.h\",\n            \"src/codegen/arm64/macro-assembler-arm64.cc\",\n            \"src/codegen/arm64/macro-assembler-arm64.h\",\n            \"src/codegen/arm64/macro-assembler-arm64-inl.h\",\n            \"src/codegen/arm64/register-arm64.cc\",\n            \"src/codegen/arm64/register-arm64.h\",\n            \"src/codegen/arm64/reglist-arm64.h\",\n            \"src/codegen/arm64/utils-arm64.cc\",\n            \"src/codegen/arm64/utils-arm64.h\",\n            \"src/deoptimizer/arm64/deoptimizer-arm64.cc\",\n            \"src/diagnostics/arm64/disasm-arm64.cc\",\n            \"src/diagnostics/arm64/disasm-arm64.h\",\n            \"src/diagnostics/arm64/eh-frame-arm64.cc\",\n            \"src/diagnostics/arm64/unwinder-arm64.cc\",\n            \"src/execution/arm64/frame-constants-arm64.cc\",\n            \"src/execution/arm64/frame-constants-arm64.h\",\n            \"src/execution/arm64/pointer-auth-arm64.cc\",\n            \"src/execution/arm64/simulator-arm64.cc\",\n            \"src/execution/arm64/simulator-arm64.h\",\n            \"src/execution/arm64/simulator-logic-arm64.cc\",\n            \"src/regexp/arm64/regexp-macro-assembler-arm64.cc\",\n            \"src/regexp/arm64/regexp-macro-assembler-arm64.h\",\n            \"src/wasm/baseline/arm64/liftoff-assembler-arm64-inl.h\",\n        ],\n        \"@v8//bazel/config:v8_target_s390x\": [\n            \"src/baseline/s390/baseline-assembler-s390-inl.h\",\n            \"src/baseline/s390/baseline-compiler-s390-inl.h\",\n            \"src/codegen/s390/assembler-s390.cc\",\n            \"src/codegen/s390/assembler-s390.h\",\n            \"src/codegen/s390/assembler-s390-inl.h\",\n            \"src/codegen/s390/constants-s390.cc\",\n            \"src/codegen/s390/constants-s390.h\",\n            \"src/codegen/s390/cpu-s390.cc\",\n            \"src/codegen/s390/interface-descriptors-s390-inl.h\",\n            \"src/codegen/s390/macro-assembler-s390.cc\",\n            \"src/codegen/s390/macro-assembler-s390.h\",\n            \"src/codegen/s390/register-s390.h\",\n            \"src/codegen/s390/reglist-s390.h\",\n            \"src/deoptimizer/s390/deoptimizer-s390.cc\",\n            \"src/diagnostics/s390/disasm-s390.cc\",\n            \"src/diagnostics/s390/eh-frame-s390.cc\",\n            \"src/diagnostics/s390/unwinder-s390.cc\",\n            \"src/execution/s390/frame-constants-s390.cc\",\n            \"src/execution/s390/frame-constants-s390.h\",\n            \"src/execution/s390/simulator-s390.cc\",\n            \"src/execution/s390/simulator-s390.h\",\n            \"src/regexp/s390/regexp-macro-assembler-s390.cc\",\n            \"src/regexp/s390/regexp-macro-assembler-s390.h\",\n            \"src/wasm/baseline/s390/liftoff-assembler-s390-inl.h\",\n        ],\n        \"@v8//bazel/config:v8_target_riscv64\": [\n            \"src/baseline/riscv/baseline-assembler-riscv-inl.h\",\n            \"src/baseline/riscv/baseline-compiler-riscv-inl.h\",\n            \"src/codegen/riscv/assembler-riscv-inl.h\",\n            \"src/codegen/riscv/assembler-riscv.h\",\n            \"src/codegen/riscv/base-assembler-riscv.h\",\n            \"src/codegen/riscv/base-constants-riscv.h\",\n            \"src/codegen/riscv/base-riscv-i.h\",\n            \"src/codegen/riscv/constant-riscv-a.h\",\n            \"src/codegen/riscv/constant-riscv-b.h\",\n            \"src/codegen/riscv/constant-riscv-c.h\",\n            \"src/codegen/riscv/constant-riscv-d.h\",\n            \"src/codegen/riscv/constant-riscv-f.h\",\n            \"src/codegen/riscv/constant-riscv-m.h\",\n            \"src/codegen/riscv/constant-riscv-v.h\",\n            \"src/codegen/riscv/constant-riscv-zicsr.h\",\n            \"src/codegen/riscv/constant-riscv-zifencei.h\",\n            \"src/codegen/riscv/constants-riscv.h\",\n            \"src/codegen/riscv/extension-riscv-a.h\",\n            \"src/codegen/riscv/extension-riscv-b.h\",\n            \"src/codegen/riscv/extension-riscv-c.h\",\n            \"src/codegen/riscv/extension-riscv-d.h\",\n            \"src/codegen/riscv/extension-riscv-f.h\",\n            \"src/codegen/riscv/extension-riscv-inl.h\",\n            \"src/codegen/riscv/extension-riscv-m.h\",\n            \"src/codegen/riscv/extension-riscv-v.h\",\n            \"src/codegen/riscv/extension-riscv-zicsr.h\",\n            \"src/codegen/riscv/extension-riscv-zifencei.h\",\n            \"src/codegen/riscv/interface-descriptors-riscv-inl.h\",\n            \"src/codegen/riscv/macro-assembler-riscv.h\",\n            \"src/codegen/riscv/register-riscv.h\",\n            \"src/codegen/riscv/reglist-riscv.h\",\n            \"src/deoptimizer/riscv/deoptimizer-riscv.cc\",\n            \"src/diagnostics/riscv/disasm-riscv.cc\",\n            \"src/diagnostics/riscv/unwinder-riscv.cc\",\n            \"src/execution/riscv/frame-constants-riscv.cc\",\n            \"src/execution/riscv/frame-constants-riscv.h\",\n            \"src/execution/riscv/simulator-riscv.cc\",\n            \"src/execution/riscv/simulator-riscv.h\",\n            \"src/regexp/riscv/regexp-macro-assembler-riscv.cc\",\n            \"src/regexp/riscv/regexp-macro-assembler-riscv.h\",\n            \"src/wasm/baseline/riscv/liftoff-assembler-riscv-inl.h\",\n            \"src/wasm/baseline/riscv/liftoff-assembler-riscv64-inl.h\",\n        ],\n        \"@v8//bazel/config:v8_target_ppc64le\": [\n            \"src/baseline/ppc/baseline-assembler-ppc-inl.h\",\n            \"src/baseline/ppc/baseline-compiler-ppc-inl.h\",\n            \"src/codegen/ppc/assembler-ppc.cc\",\n            \"src/codegen/ppc/assembler-ppc.h\",\n            \"src/codegen/ppc/assembler-ppc-inl.h\",\n            \"src/codegen/ppc/constants-ppc.cc\",\n            \"src/codegen/ppc/constants-ppc.h\",\n            \"src/codegen/ppc/cpu-ppc.cc\",\n            \"src/codegen/ppc/interface-descriptors-ppc-inl.h\",\n            \"src/codegen/ppc/macro-assembler-ppc.cc\",\n            \"src/codegen/ppc/macro-assembler-ppc.h\",\n            \"src/codegen/ppc/register-ppc.h\",\n            \"src/codegen/ppc/reglist-ppc.h\",\n            \"src/deoptimizer/ppc/deoptimizer-ppc.cc\",\n            \"src/diagnostics/ppc/disasm-ppc.cc\",\n            \"src/diagnostics/ppc/eh-frame-ppc.cc\",\n            \"src/diagnostics/ppc/unwinder-ppc.cc\",\n            \"src/execution/ppc/frame-constants-ppc.cc\",\n            \"src/execution/ppc/frame-constants-ppc.h\",\n            \"src/execution/ppc/simulator-ppc.cc\",\n            \"src/execution/ppc/simulator-ppc.h\",\n            \"src/regexp/ppc/regexp-macro-assembler-ppc.cc\",\n            \"src/regexp/ppc/regexp-macro-assembler-ppc.h\",\n            \"src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h\",\n        ],\n    }) + select({\n        \"@v8//bazel/config:is_posix\": [\n            \"src/trap-handler/handler-inside-posix.cc\",\n            \"src/trap-handler/handler-outside-posix.cc\",\n        ],\n        \"@v8//bazel/config:is_windows\": [\n            \"src/trap-handler/handler-inside-win.cc\",\n            \"src/trap-handler/handler-inside-win.h\",\n            \"src/trap-handler/handler-outside-win.cc\",\n            \"include/v8-wasm-trap-handler-win.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \"@v8//bazel/config:v8_arm64_simulator\": [\n            \"src/trap-handler/handler-outside-simulator.cc\",\n            \"src/trap-handler/trap-handler-simulator.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \"@v8//bazel/config:is_windows_64bit\": [\n            \"src/diagnostics/unwinding-info-win64.cc\",\n            \"src/diagnostics/unwinding-info-win64.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_maglev\": [\n            \"src/maglev/maglev-assembler-inl.h\",\n            \"src/maglev/maglev-assembler.h\",\n            \"src/maglev/maglev-basic-block.h\",\n            \"src/maglev/maglev-code-gen-state.h\",\n            \"src/maglev/maglev-code-generator.h\",\n            \"src/maglev/maglev-compilation-info.h\",\n            \"src/maglev/maglev-compilation-unit.h\",\n            \"src/maglev/maglev-compiler.h\",\n            \"src/maglev/maglev-concurrent-dispatcher.h\",\n            \"src/maglev/maglev-graph-builder.h\",\n            \"src/maglev/maglev-graph-labeller.h\",\n            \"src/maglev/maglev-graph-printer.h\",\n            \"src/maglev/maglev-graph-processor.h\",\n            \"src/maglev/maglev-graph-verifier.h\",\n            \"src/maglev/maglev-graph.h\",\n            \"src/maglev/maglev-interpreter-frame-state.h\",\n            \"src/maglev/maglev-ir-inl.h\",\n            \"src/maglev/maglev-ir.h\",\n            \"src/maglev/maglev-phi-representation-selector.h\",\n            \"src/maglev/maglev-pipeline-statistics.h\",\n            \"src/maglev/maglev-post-hoc-optimizations-processors.h\",\n            \"src/maglev/maglev-pre-regalloc-codegen-processors.h\",\n            \"src/maglev/maglev-regalloc-data.h\",\n            \"src/maglev/maglev-regalloc.h\",\n            \"src/maglev/maglev-register-frame-array.h\",\n            \"src/maglev/maglev.h\",\n            \"src/maglev/maglev-assembler.cc\",\n            \"src/maglev/maglev-code-generator.cc\",\n            \"src/maglev/maglev-compilation-info.cc\",\n            \"src/maglev/maglev-compilation-unit.cc\",\n            \"src/maglev/maglev-compiler.cc\",\n            \"src/maglev/maglev-concurrent-dispatcher.cc\",\n            \"src/maglev/maglev-graph-builder.cc\",\n            \"src/maglev/maglev-graph-printer.cc\",\n            \"src/maglev/maglev-interpreter-frame-state.cc\",\n            \"src/maglev/maglev-ir.cc\",\n            \"src/maglev/maglev-phi-representation-selector.cc\",\n            \"src/maglev/maglev-pipeline-statistics.cc\",\n            \"src/maglev/maglev-regalloc.cc\",\n            \"src/maglev/maglev.cc\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_maglev_x64\": [\n            \"src/maglev/x64/maglev-assembler-x64-inl.h\",\n            \"src/maglev/x64/maglev-assembler-x64.cc\",\n            \"src/maglev/x64/maglev-ir-x64.cc\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_maglev_arm64\": [\n            \"src/maglev/arm64/maglev-assembler-arm64-inl.h\",\n            \"src/maglev/arm64/maglev-assembler-arm64.cc\",\n            \"src/maglev/arm64/maglev-ir-arm64.cc\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_maglev_riscv\": [\n            \"src/maglev/riscv/maglev-assembler-riscv-inl.h\",\n            \"src/maglev/riscv/maglev-assembler-riscv.cc\",\n            \"src/maglev/riscv/maglev-ir-riscv.cc\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_maglev_arm\": [\n            \"src/maglev/arm/maglev-assembler-arm-inl.h\",\n            \"src/maglev/arm/maglev-assembler-arm.cc\",\n            \"src/maglev/arm/maglev-ir-arm.cc\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_webassembly\": [\n            \"src/asmjs/asm-js.cc\",\n            \"src/asmjs/asm-names.h\",\n            \"src/asmjs/asm-parser.cc\",\n            \"src/asmjs/asm-parser.h\",\n            \"src/asmjs/asm-scanner.cc\",\n            \"src/asmjs/asm-scanner.h\",\n            \"src/asmjs/asm-types.cc\",\n            \"src/asmjs/asm-types.h\",\n            \"src/compiler/turboshaft/wasm-dead-code-elimination-phase.cc\",\n            \"src/compiler/turboshaft/wasm-dead-code-elimination-phase.h\",\n            \"src/debug/debug-wasm-objects.cc\",\n            \"src/debug/debug-wasm-objects.h\",\n            \"src/debug/debug-wasm-objects-inl.h\",\n            \"src/runtime/runtime-test-wasm.cc\",\n            \"src/runtime/runtime-wasm.cc\",\n            \"src/trap-handler/handler-inside.cc\",\n            \"src/trap-handler/handler-inside-posix.h\",\n            \"src/trap-handler/handler-outside.cc\",\n            \"src/trap-handler/handler-shared.cc\",\n            \"src/trap-handler/trap-handler.h\",\n            \"src/trap-handler/trap-handler-internal.h\",\n            \"src/wasm/baseline/liftoff-assembler.cc\",\n            \"src/wasm/baseline/liftoff-assembler.h\",\n            \"src/wasm/baseline/liftoff-assembler-defs.h\",\n            \"src/wasm/baseline/liftoff-assembler-inl.h\",\n            \"src/wasm/baseline/liftoff-compiler.cc\",\n            \"src/wasm/baseline/liftoff-compiler.h\",\n            \"src/wasm/baseline/liftoff-register.h\",\n            \"src/wasm/baseline/liftoff-varstate.h\",\n            \"src/wasm/baseline/parallel-move.cc\",\n            \"src/wasm/baseline/parallel-move.h\",\n            \"src/wasm/baseline/parallel-move-inl.h\",\n            \"src/wasm/branch-hint-map.h\",\n            \"src/wasm/canonical-types.cc\",\n            \"src/wasm/canonical-types.h\",\n            \"src/wasm/code-space-access.cc\",\n            \"src/wasm/code-space-access.h\",\n            \"src/wasm/compilation-environment.h\",\n            \"src/wasm/compilation-environment-inl.h\",\n            \"src/wasm/constant-expression.cc\",\n            \"src/wasm/constant-expression.h\",\n            \"src/wasm/constant-expression-interface.cc\",\n            \"src/wasm/constant-expression-interface.h\",\n            \"src/wasm/decoder.h\",\n            \"src/wasm/float16.h\",\n            \"src/wasm/function-body-decoder.cc\",\n            \"src/wasm/function-body-decoder.h\",\n            \"src/wasm/function-body-decoder-impl.h\",\n            \"src/wasm/function-compiler.cc\",\n            \"src/wasm/function-compiler.h\",\n            \"src/wasm/fuzzing/random-module-generation.h\",\n            \"src/wasm/graph-builder-interface.cc\",\n            \"src/wasm/graph-builder-interface.h\",\n            \"src/wasm/inlining-tree.h\",\n            \"src/wasm/jump-table-assembler.cc\",\n            \"src/wasm/jump-table-assembler.h\",\n            \"src/wasm/leb-helper.h\",\n            \"src/wasm/local-decl-encoder.cc\",\n            \"src/wasm/local-decl-encoder.h\",\n            \"src/wasm/memory-tracing.h\",\n            \"src/wasm/module-compiler.cc\",\n            \"src/wasm/module-compiler.h\",\n            \"src/wasm/module-decoder.cc\",\n            \"src/wasm/module-decoder.h\",\n            \"src/wasm/module-decoder-impl.h\",\n            \"src/wasm/module-instantiate.cc\",\n            \"src/wasm/module-instantiate.h\",\n            \"src/wasm/names-provider.cc\",\n            \"src/wasm/names-provider.h\",\n            \"src/wasm/object-access.h\",\n            \"src/wasm/pgo.cc\",\n            \"src/wasm/pgo.h\",\n            \"src/wasm/signature-hashing.h\",\n            \"src/wasm/simd-shuffle.cc\",\n            \"src/wasm/simd-shuffle.h\",\n            \"src/wasm/stacks.cc\",\n            \"src/wasm/stacks.h\",\n            \"src/wasm/std-object-sizes.h\",\n            \"src/wasm/streaming-decoder.cc\",\n            \"src/wasm/streaming-decoder.h\",\n            \"src/wasm/string-builder.h\",\n            \"src/wasm/string-builder-multiline.h\",\n            \"src/wasm/struct-types.h\",\n            \"src/wasm/sync-streaming-decoder.cc\",\n            \"src/wasm/turboshaft-graph-interface.cc\",\n            \"src/wasm/turboshaft-graph-interface.h\",\n            \"src/wasm/value-type.cc\",\n            \"src/wasm/value-type.h\",\n            \"src/wasm/wasm-arguments.h\",\n            \"src/wasm/wasm-builtin-list.h\",\n            \"src/wasm/wasm-code-manager.cc\",\n            \"src/wasm/wasm-code-manager.h\",\n            \"src/wasm/wasm-code-pointer-table.cc\",\n            \"src/wasm/wasm-code-pointer-table.h\",\n            \"src/wasm/wasm-code-pointer-table-inl.h\",\n            \"src/wasm/wasm-debug.cc\",\n            \"src/wasm/wasm-debug.h\",\n            \"src/wasm/wasm-deopt-data.cc\",\n            \"src/wasm/wasm-deopt-data.h\",\n            \"src/wasm/wasm-disassembler.cc\",\n            \"src/wasm/wasm-disassembler.h\",\n            \"src/wasm/wasm-disassembler-impl.h\",\n            \"src/wasm/wasm-engine.cc\",\n            \"src/wasm/wasm-engine.h\",\n            \"src/wasm/wasm-external-refs.cc\",\n            \"src/wasm/wasm-external-refs.h\",\n            \"src/wasm/wasm-features.cc\",\n            \"src/wasm/wasm-features.h\",\n            \"src/wasm/wasm-import-wrapper-cache.cc\",\n            \"src/wasm/wasm-import-wrapper-cache.h\",\n            \"src/wasm/wasm-init-expr.h\",\n            \"src/wasm/wasm-js.cc\",\n            \"src/wasm/wasm-js.h\",\n            \"src/wasm/wasm-linkage.h\",\n            \"src/wasm/wasm-module.cc\",\n            \"src/wasm/wasm-module.h\",\n            \"src/wasm/wasm-module-builder.cc\",\n            \"src/wasm/wasm-module-builder.h\",\n            \"src/wasm/wasm-module-sourcemap.cc\",\n            \"src/wasm/wasm-module-sourcemap.h\",\n            \"src/wasm/wasm-objects.cc\",\n            \"src/wasm/wasm-objects.h\",\n            \"src/wasm/wasm-objects-inl.h\",\n            \"src/wasm/wasm-opcodes.cc\",\n            \"src/wasm/wasm-opcodes.h\",\n            \"src/wasm/wasm-opcodes-inl.h\",\n            \"src/wasm/wasm-result.cc\",\n            \"src/wasm/wasm-result.h\",\n            \"src/wasm/wasm-serialization.cc\",\n            \"src/wasm/wasm-serialization.h\",\n            \"src/wasm/wasm-subtyping.cc\",\n            \"src/wasm/wasm-subtyping.h\",\n            \"src/wasm/wasm-tier.h\",\n            \"src/wasm/wasm-value.h\",\n            \"src/wasm/well-known-imports.cc\",\n            \"src/wasm/well-known-imports.h\",\n            \"src/wasm/wrappers.cc\",\n            \"third_party/utf8-decoder/generalized-utf8-decoder.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_drumbrake\": [\n            \"src/wasm/interpreter/instruction-handlers.h\",\n            \"src/wasm/interpreter/wasm-interpreter.cc\",\n            \"src/wasm/interpreter/wasm-interpreter.h\",\n            \"src/wasm/interpreter/wasm-interpreter-inl.h\",\n            \"src/wasm/interpreter/wasm-interpreter-objects.cc\",\n            \"src/wasm/interpreter/wasm-interpreter-objects-inl.h\",\n            \"src/wasm/interpreter/wasm-interpreter-objects.h\",\n            \"src/wasm/interpreter/wasm-interpreter-runtime.cc\",\n            \"src/wasm/interpreter/wasm-interpreter-runtime-inl.h\",\n            \"src/wasm/interpreter/wasm-interpreter-runtime.h\",\n            \"src/wasm/interpreter/wasm-interpreter-simd.cc\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_wasm_random_fuzzers\": [\n            \"src/wasm/fuzzing/random-module-generation.cc\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\nfilegroup(\n    name = \"icu/v8_base_without_compiler_files\",\n    srcs = [\n        \"src/builtins/builtins-intl.cc\",\n        \"src/objects/intl-objects.cc\",\n        \"src/objects/intl-objects.h\",\n        \"src/objects/js-break-iterator.cc\",\n        \"src/objects/js-break-iterator.h\",\n        \"src/objects/js-break-iterator-inl.h\",\n        \"src/objects/js-collator.cc\",\n        \"src/objects/js-collator.h\",\n        \"src/objects/js-collator-inl.h\",\n        \"src/objects/js-date-time-format.cc\",\n        \"src/objects/js-date-time-format.h\",\n        \"src/objects/js-date-time-format-inl.h\",\n        \"src/objects/js-display-names.cc\",\n        \"src/objects/js-display-names.h\",\n        \"src/objects/js-display-names-inl.h\",\n        \"src/objects/js-duration-format.cc\",\n        \"src/objects/js-duration-format.h\",\n        \"src/objects/js-duration-format-inl.h\",\n        \"src/objects/js-list-format.cc\",\n        \"src/objects/js-list-format.h\",\n        \"src/objects/js-list-format-inl.h\",\n        \"src/objects/js-locale.cc\",\n        \"src/objects/js-locale.h\",\n        \"src/objects/js-locale-inl.h\",\n        \"src/objects/js-number-format.cc\",\n        \"src/objects/js-number-format.h\",\n        \"src/objects/js-number-format-inl.h\",\n        \"src/objects/js-plural-rules.cc\",\n        \"src/objects/js-plural-rules.h\",\n        \"src/objects/js-plural-rules-inl.h\",\n        \"src/objects/js-relative-time-format.cc\",\n        \"src/objects/js-relative-time-format.h\",\n        \"src/objects/js-relative-time-format-inl.h\",\n        \"src/objects/js-segment-iterator.cc\",\n        \"src/objects/js-segment-iterator.h\",\n        \"src/objects/js-segment-iterator-inl.h\",\n        \"src/objects/js-segmenter.cc\",\n        \"src/objects/js-segmenter.h\",\n        \"src/objects/js-segmenter-inl.h\",\n        \"src/objects/js-segments.cc\",\n        \"src/objects/js-segments.h\",\n        \"src/objects/js-segments-inl.h\",\n        \"src/runtime/runtime-intl.cc\",\n        \"src/strings/char-predicates.cc\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_compiler_files\",\n    srcs = [\n        \"src/builtins/profile-data-reader.h\",\n        \"src/compiler/access-builder.cc\",\n        \"src/compiler/access-builder.h\",\n        \"src/compiler/access-info.cc\",\n        \"src/compiler/access-info.h\",\n        \"src/compiler/add-type-assertions-reducer.cc\",\n        \"src/compiler/add-type-assertions-reducer.h\",\n        \"src/compiler/all-nodes.cc\",\n        \"src/compiler/all-nodes.h\",\n        \"src/compiler/allocation-builder.h\",\n        \"src/compiler/allocation-builder-inl.h\",\n        \"src/compiler/backend/bitcast-elider.cc\",\n        \"src/compiler/backend/bitcast-elider.h\",\n        \"src/compiler/backend/code-generator.cc\",\n        \"src/compiler/backend/code-generator.h\",\n        \"src/compiler/backend/code-generator-impl.h\",\n        \"src/compiler/backend/frame-elider.cc\",\n        \"src/compiler/backend/frame-elider.h\",\n        \"src/compiler/backend/gap-resolver.cc\",\n        \"src/compiler/backend/gap-resolver.h\",\n        \"src/compiler/backend/instruction.cc\",\n        \"src/compiler/backend/instruction.h\",\n        \"src/compiler/backend/instruction-codes.h\",\n        \"src/compiler/backend/instruction-scheduler.cc\",\n        \"src/compiler/backend/instruction-scheduler.h\",\n        \"src/compiler/backend/instruction-selector.cc\",\n        \"src/compiler/backend/instruction-selector.h\",\n        \"src/compiler/backend/instruction-selector-adapter.h\",\n        \"src/compiler/backend/instruction-selector-impl.h\",\n        \"src/compiler/backend/jump-threading.cc\",\n        \"src/compiler/backend/jump-threading.h\",\n        \"src/compiler/backend/move-optimizer.cc\",\n        \"src/compiler/backend/move-optimizer.h\",\n        \"src/compiler/backend/register-allocation.h\",\n        \"src/compiler/backend/register-allocator.cc\",\n        \"src/compiler/backend/register-allocator.h\",\n        \"src/compiler/backend/register-allocator-verifier.cc\",\n        \"src/compiler/backend/register-allocator-verifier.h\",\n        \"src/compiler/backend/spill-placer.cc\",\n        \"src/compiler/backend/spill-placer.h\",\n        \"src/compiler/backend/unwinding-info-writer.h\",\n        \"src/compiler/basic-block-instrumentor.cc\",\n        \"src/compiler/basic-block-instrumentor.h\",\n        \"src/compiler/branch-condition-duplicator.cc\",\n        \"src/compiler/branch-condition-duplicator.h\",\n        \"src/compiler/branch-elimination.cc\",\n        \"src/compiler/branch-elimination.h\",\n        \"src/compiler/bytecode-analysis.cc\",\n        \"src/compiler/bytecode-analysis.h\",\n        \"src/compiler/bytecode-graph-builder.cc\",\n        \"src/compiler/bytecode-graph-builder.h\",\n        \"src/compiler/bytecode-liveness-map.cc\",\n        \"src/compiler/bytecode-liveness-map.h\",\n        \"src/compiler/c-linkage.cc\",\n        \"src/compiler/checkpoint-elimination.cc\",\n        \"src/compiler/checkpoint-elimination.h\",\n        \"src/compiler/code-assembler.cc\",\n        \"src/compiler/code-assembler.h\",\n        \"src/compiler/code-assembler-compilation-job.h\",\n        \"src/compiler/common-node-cache.cc\",\n        \"src/compiler/common-node-cache.h\",\n        \"src/compiler/common-operator.cc\",\n        \"src/compiler/common-operator.h\",\n        \"src/compiler/common-operator-reducer.cc\",\n        \"src/compiler/common-operator-reducer.h\",\n        \"src/compiler/compilation-dependencies.cc\",\n        \"src/compiler/compilation-dependencies.h\",\n        \"src/compiler/compiler-source-position-table.cc\",\n        \"src/compiler/compiler-source-position-table.h\",\n        \"src/compiler/constant-folding-reducer.cc\",\n        \"src/compiler/constant-folding-reducer.h\",\n        \"src/compiler/control-equivalence.cc\",\n        \"src/compiler/control-equivalence.h\",\n        \"src/compiler/control-path-state.h\",\n        \"src/compiler/csa-load-elimination.cc\",\n        \"src/compiler/csa-load-elimination.h\",\n        \"src/compiler/dead-code-elimination.cc\",\n        \"src/compiler/dead-code-elimination.h\",\n        \"src/compiler/decompression-optimizer.cc\",\n        \"src/compiler/decompression-optimizer.h\",\n        \"src/compiler/diamond.h\",\n        \"src/compiler/escape-analysis.cc\",\n        \"src/compiler/escape-analysis.h\",\n        \"src/compiler/escape-analysis-reducer.cc\",\n        \"src/compiler/escape-analysis-reducer.h\",\n        \"src/compiler/fast-api-calls.cc\",\n        \"src/compiler/fast-api-calls.h\",\n        \"src/compiler/feedback-source.cc\",\n        \"src/compiler/feedback-source.h\",\n        \"src/compiler/frame.cc\",\n        \"src/compiler/frame.h\",\n        \"src/compiler/frame-states.cc\",\n        \"src/compiler/frame-states.h\",\n        \"src/compiler/functional-list.h\",\n        \"src/compiler/globals.h\",\n        \"src/compiler/graph-assembler.cc\",\n        \"src/compiler/graph-assembler.h\",\n        \"src/compiler/graph-reducer.cc\",\n        \"src/compiler/graph-reducer.h\",\n        \"src/compiler/graph-trimmer.cc\",\n        \"src/compiler/graph-trimmer.h\",\n        \"src/compiler/graph-zone-traits.h\",\n        \"src/compiler/heap-refs.cc\",\n        \"src/compiler/heap-refs.h\",\n        \"src/compiler/js-call-reducer.cc\",\n        \"src/compiler/js-call-reducer.h\",\n        \"src/compiler/js-context-specialization.cc\",\n        \"src/compiler/js-context-specialization.h\",\n        \"src/compiler/js-create-lowering.cc\",\n        \"src/compiler/js-create-lowering.h\",\n        \"src/compiler/js-generic-lowering.cc\",\n        \"src/compiler/js-generic-lowering.h\",\n        \"src/compiler/js-graph.cc\",\n        \"src/compiler/js-graph.h\",\n        \"src/compiler/js-heap-broker.cc\",\n        \"src/compiler/js-heap-broker.h\",\n        \"src/compiler/js-heap-broker-inl.h\",\n        \"src/compiler/js-inlining.cc\",\n        \"src/compiler/js-inlining.h\",\n        \"src/compiler/js-inlining-heuristic.cc\",\n        \"src/compiler/js-inlining-heuristic.h\",\n        \"src/compiler/js-intrinsic-lowering.cc\",\n        \"src/compiler/js-intrinsic-lowering.h\",\n        \"src/compiler/js-native-context-specialization.cc\",\n        \"src/compiler/js-native-context-specialization.h\",\n        \"src/compiler/js-operator.cc\",\n        \"src/compiler/js-operator.h\",\n        \"src/compiler/js-type-hint-lowering.cc\",\n        \"src/compiler/js-type-hint-lowering.h\",\n        \"src/compiler/js-typed-lowering.cc\",\n        \"src/compiler/js-typed-lowering.h\",\n        \"src/compiler/late-escape-analysis.cc\",\n        \"src/compiler/late-escape-analysis.h\",\n        \"src/compiler/linkage.cc\",\n        \"src/compiler/linkage.h\",\n        \"src/compiler/load-elimination.cc\",\n        \"src/compiler/load-elimination.h\",\n        \"src/compiler/loop-analysis.cc\",\n        \"src/compiler/loop-analysis.h\",\n        \"src/compiler/loop-peeling.cc\",\n        \"src/compiler/loop-peeling.h\",\n        \"src/compiler/loop-unrolling.cc\",\n        \"src/compiler/loop-unrolling.h\",\n        \"src/compiler/loop-variable-optimizer.cc\",\n        \"src/compiler/loop-variable-optimizer.h\",\n        \"src/compiler/machine-graph.cc\",\n        \"src/compiler/machine-graph.h\",\n        \"src/compiler/machine-graph-verifier.cc\",\n        \"src/compiler/machine-graph-verifier.h\",\n        \"src/compiler/machine-operator.cc\",\n        \"src/compiler/machine-operator.h\",\n        \"src/compiler/machine-operator-reducer.cc\",\n        \"src/compiler/machine-operator-reducer.h\",\n        \"src/compiler/map-inference.cc\",\n        \"src/compiler/map-inference.h\",\n        \"src/compiler/memory-lowering.cc\",\n        \"src/compiler/memory-lowering.h\",\n        \"src/compiler/memory-optimizer.cc\",\n        \"src/compiler/memory-optimizer.h\",\n        \"src/compiler/node.cc\",\n        \"src/compiler/node.h\",\n        \"src/compiler/node-aux-data.h\",\n        \"src/compiler/node-cache.h\",\n        \"src/compiler/node-marker.cc\",\n        \"src/compiler/node-marker.h\",\n        \"src/compiler/node-matchers.cc\",\n        \"src/compiler/node-matchers.h\",\n        \"src/compiler/node-observer.cc\",\n        \"src/compiler/node-observer.h\",\n        \"src/compiler/node-origin-table.cc\",\n        \"src/compiler/node-origin-table.h\",\n        \"src/compiler/node-properties.cc\",\n        \"src/compiler/node-properties.h\",\n        \"src/compiler/opcodes.cc\",\n        \"src/compiler/opcodes.h\",\n        \"src/compiler/operation-typer.cc\",\n        \"src/compiler/operation-typer.h\",\n        \"src/compiler/operator.cc\",\n        \"src/compiler/operator.h\",\n        \"src/compiler/operator-properties.cc\",\n        \"src/compiler/operator-properties.h\",\n        \"src/compiler/osr.cc\",\n        \"src/compiler/osr.h\",\n        \"src/compiler/pair-load-store-reducer.cc\",\n        \"src/compiler/pair-load-store-reducer.h\",\n        \"src/compiler/per-isolate-compiler-cache.h\",\n        \"src/compiler/persistent-map.h\",\n        \"src/compiler/phase.h\",\n        \"src/compiler/pipeline.cc\",\n        \"src/compiler/pipeline.h\",\n        \"src/compiler/pipeline-data-inl.h\",\n        \"src/compiler/pipeline-statistics.cc\",\n        \"src/compiler/pipeline-statistics.h\",\n        \"src/compiler/processed-feedback.h\",\n        \"src/compiler/property-access-builder.cc\",\n        \"src/compiler/property-access-builder.h\",\n        \"src/compiler/raw-machine-assembler.cc\",\n        \"src/compiler/raw-machine-assembler.h\",\n        \"src/compiler/redundancy-elimination.cc\",\n        \"src/compiler/redundancy-elimination.h\",\n        \"src/compiler/refs-map.cc\",\n        \"src/compiler/refs-map.h\",\n        \"src/compiler/representation-change.cc\",\n        \"src/compiler/representation-change.h\",\n        \"src/compiler/schedule.cc\",\n        \"src/compiler/schedule.h\",\n        \"src/compiler/scheduler.cc\",\n        \"src/compiler/scheduler.h\",\n        \"src/compiler/select-lowering.cc\",\n        \"src/compiler/select-lowering.h\",\n        \"src/compiler/simplified-lowering.cc\",\n        \"src/compiler/simplified-lowering.h\",\n        \"src/compiler/simplified-lowering-verifier.cc\",\n        \"src/compiler/simplified-lowering-verifier.h\",\n        \"src/compiler/simplified-operator.cc\",\n        \"src/compiler/simplified-operator.h\",\n        \"src/compiler/simplified-operator-reducer.cc\",\n        \"src/compiler/simplified-operator-reducer.h\",\n        \"src/compiler/state-values-utils.cc\",\n        \"src/compiler/state-values-utils.h\",\n        \"src/compiler/string-builder-optimizer.cc\",\n        \"src/compiler/string-builder-optimizer.h\",\n        \"src/compiler/turbofan.h\",\n        \"src/compiler/turbofan-enabled.cc\",\n        \"src/compiler/turbofan-graph.cc\",\n        \"src/compiler/turbofan-graph.h\",\n        \"src/compiler/turbofan-graph-visualizer.cc\",\n        \"src/compiler/turbofan-graph-visualizer.h\",\n        \"src/compiler/turbofan-typer.cc\",\n        \"src/compiler/turbofan-typer.h\",\n        \"src/compiler/turbofan-types.cc\",\n        \"src/compiler/turbofan-types.h\",\n        \"src/compiler/turboshaft/access-builder.h\",\n        \"src/compiler/turboshaft/analyzer-iterator.cc\",\n        \"src/compiler/turboshaft/analyzer-iterator.h\",\n        \"src/compiler/turboshaft/assembler.cc\",\n        \"src/compiler/turboshaft/assembler.h\",\n        \"src/compiler/turboshaft/assert-types-reducer.h\",\n        \"src/compiler/turboshaft/block-instrumentation-phase.cc\",\n        \"src/compiler/turboshaft/block-instrumentation-phase.h\",\n        \"src/compiler/turboshaft/block-instrumentation-reducer.cc\",\n        \"src/compiler/turboshaft/block-instrumentation-reducer.h\",\n        \"src/compiler/turboshaft/branch-elimination-reducer.h\",\n        \"src/compiler/turboshaft/build-graph-phase.cc\",\n        \"src/compiler/turboshaft/build-graph-phase.h\",\n        \"src/compiler/turboshaft/builtin-call-descriptors.h\",\n        \"src/compiler/turboshaft/builtin-compiler.h\",\n        \"src/compiler/turboshaft/csa-optimize-phase.cc\",\n        \"src/compiler/turboshaft/csa-optimize-phase.h\",\n        \"src/compiler/turboshaft/dataview-lowering-reducer.h\",\n        \"src/compiler/turboshaft/code-elimination-and-simplification-phase.cc\",\n        \"src/compiler/turboshaft/code-elimination-and-simplification-phase.h\",\n        \"src/compiler/turboshaft/copying-phase.cc\",\n        \"src/compiler/turboshaft/copying-phase.h\",\n        \"src/compiler/turboshaft/dead-code-elimination-reducer.h\",\n        \"src/compiler/turboshaft/debug-feature-lowering-phase.cc\",\n        \"src/compiler/turboshaft/debug-feature-lowering-phase.h\",\n        \"src/compiler/turboshaft/debug-feature-lowering-reducer.h\",\n        \"src/compiler/turboshaft/decompression-optimization.cc\",\n        \"src/compiler/turboshaft/decompression-optimization.h\",\n        \"src/compiler/turboshaft/decompression-optimization-phase.cc\",\n        \"src/compiler/turboshaft/decompression-optimization-phase.h\",\n        \"src/compiler/turboshaft/define-assembler-macros.inc\",\n        \"src/compiler/turboshaft/deopt-data.h\",\n        \"src/compiler/turboshaft/duplication-optimization-reducer.h\",\n        \"src/compiler/turboshaft/explicit-truncation-reducer.h\",\n        \"src/compiler/turboshaft/fast-api-call-lowering-reducer.h\",\n        \"src/compiler/turboshaft/fast-hash.h\",\n        \"src/compiler/turboshaft/field-macro.inc\",\n        \"src/compiler/turboshaft/graph.cc\",\n        \"src/compiler/turboshaft/graph.h\",\n        \"src/compiler/turboshaft/graph-builder.cc\",\n        \"src/compiler/turboshaft/graph-builder.h\",\n        \"src/compiler/turboshaft/graph-visualizer.cc\",\n        \"src/compiler/turboshaft/graph-visualizer.h\",\n        \"src/compiler/turboshaft/js-generic-lowering-reducer.h\",\n        \"src/compiler/turboshaft/index.h\",\n        \"src/compiler/turboshaft/instruction-selection-normalization-reducer.h\",\n        \"src/compiler/turboshaft/instruction-selection-phase.cc\",\n        \"src/compiler/turboshaft/instruction-selection-phase.h\",\n        \"src/compiler/turboshaft/late-escape-analysis-reducer.cc\",\n        \"src/compiler/turboshaft/late-escape-analysis-reducer.h\",\n        \"src/compiler/turboshaft/late-load-elimination-reducer.cc\",\n        \"src/compiler/turboshaft/late-load-elimination-reducer.h\",\n        \"src/compiler/turboshaft/layered-hash-map.h\",\n        \"src/compiler/turboshaft/load-store-simplification-reducer.h\",\n        \"src/compiler/turboshaft/loop-finder.cc\",\n        \"src/compiler/turboshaft/loop-finder.h\",\n        \"src/compiler/turboshaft/loop-peeling-phase.cc\",\n        \"src/compiler/turboshaft/loop-peeling-phase.h\",\n        \"src/compiler/turboshaft/loop-peeling-reducer.h\",\n        \"src/compiler/turboshaft/loop-unrolling-phase.cc\",\n        \"src/compiler/turboshaft/loop-unrolling-phase.h\",\n        \"src/compiler/turboshaft/loop-unrolling-reducer.cc\",\n        \"src/compiler/turboshaft/loop-unrolling-reducer.h\",\n        \"src/compiler/turboshaft/machine-lowering-phase.cc\",\n        \"src/compiler/turboshaft/machine-lowering-phase.h\",\n        \"src/compiler/turboshaft/machine-lowering-reducer-inl.h\",\n        \"src/compiler/turboshaft/maglev-early-lowering-reducer-inl.h\",\n        \"src/compiler/turboshaft/maglev-graph-building-phase.cc\",\n        \"src/compiler/turboshaft/maglev-graph-building-phase.h\",\n        \"src/compiler/turboshaft/machine-optimization-reducer.h\",\n        \"src/compiler/turboshaft/memory-optimization-reducer.cc\",\n        \"src/compiler/turboshaft/memory-optimization-reducer.h\",\n        \"src/compiler/turboshaft/operation-matcher.h\",\n        \"src/compiler/turboshaft/operations.cc\",\n        \"src/compiler/turboshaft/operations.h\",\n        \"src/compiler/turboshaft/opmasks.h\",\n        \"src/compiler/turboshaft/optimize-phase.cc\",\n        \"src/compiler/turboshaft/optimize-phase.h\",\n        \"src/compiler/turboshaft/phase.cc\",\n        \"src/compiler/turboshaft/phase.h\",\n        \"src/compiler/turboshaft/pipelines.cc\",\n        \"src/compiler/turboshaft/pipelines.h\",\n        \"src/compiler/turboshaft/pretenuring-propagation-reducer.cc\",\n        \"src/compiler/turboshaft/pretenuring-propagation-reducer.h\",\n        \"src/compiler/turboshaft/recreate-schedule.cc\",\n        \"src/compiler/turboshaft/recreate-schedule.h\",\n        \"src/compiler/turboshaft/recreate-schedule-phase.cc\",\n        \"src/compiler/turboshaft/recreate-schedule-phase.h\",\n        \"src/compiler/turboshaft/reducer-traits.h\",\n        \"src/compiler/turboshaft/register-allocation-phase.h\",\n        \"src/compiler/turboshaft/representations.cc\",\n        \"src/compiler/turboshaft/representations.h\",\n        \"src/compiler/turboshaft/required-optimization-reducer.h\",\n        \"src/compiler/turboshaft/runtime-call-descriptors.h\",\n        \"src/compiler/turboshaft/select-lowering-reducer.h\",\n        \"src/compiler/turboshaft/sidetable.cc\",\n        \"src/compiler/turboshaft/sidetable.h\",\n        \"src/compiler/turboshaft/simplify-tf-loops.cc\",\n        \"src/compiler/turboshaft/simplify-tf-loops.h\",\n        \"src/compiler/turboshaft/snapshot-table.h\",\n        \"src/compiler/turboshaft/snapshot-table-opindex.h\",\n        \"src/compiler/turboshaft/stack-check-lowering-reducer.h\",\n        \"src/compiler/turboshaft/store-store-elimination-phase.cc\",\n        \"src/compiler/turboshaft/store-store-elimination-phase.h\",\n        \"src/compiler/turboshaft/store-store-elimination-reducer-inl.h\",\n        \"src/compiler/turboshaft/string-escape-analysis-reducer.cc\",\n        \"src/compiler/turboshaft/string-escape-analysis-reducer.h\",\n        \"src/compiler/turboshaft/string-view.h\",\n        \"src/compiler/turboshaft/structural-optimization-reducer.h\",\n        \"src/compiler/turboshaft/tracing.h\",\n        \"src/compiler/turboshaft/type-assertions-phase.cc\",\n        \"src/compiler/turboshaft/type-assertions-phase.h\",\n        \"src/compiler/turboshaft/type-inference-analysis.h\",\n        \"src/compiler/turboshaft/type-inference-reducer.h\",\n        \"src/compiler/turboshaft/type-parser.cc\",\n        \"src/compiler/turboshaft/type-parser.h\",\n        \"src/compiler/turboshaft/typed-optimizations-phase.cc\",\n        \"src/compiler/turboshaft/typed-optimizations-phase.h\",\n        \"src/compiler/turboshaft/typed-optimizations-reducer.h\",\n        \"src/compiler/turboshaft/typer.cc\",\n        \"src/compiler/turboshaft/typer.h\",\n        \"src/compiler/turboshaft/types.cc\",\n        \"src/compiler/turboshaft/types.h\",\n        \"src/compiler/turboshaft/undef-assembler-macros.inc\",\n        \"src/compiler/turboshaft/uniform-reducer-adapter.h\",\n        \"src/compiler/turboshaft/use-map.cc\",\n        \"src/compiler/turboshaft/use-map.h\",\n        \"src/compiler/turboshaft/utils.cc\",\n        \"src/compiler/turboshaft/utils.h\",\n        \"src/compiler/turboshaft/value-numbering-reducer.h\",\n        \"src/compiler/turboshaft/variable-reducer.h\",\n        \"src/compiler/turboshaft/wasm-js-lowering-reducer.h\",\n        \"src/compiler/turboshaft/zone-with-name.h\",\n        \"src/compiler/type-cache.cc\",\n        \"src/compiler/type-cache.h\",\n        \"src/compiler/type-narrowing-reducer.cc\",\n        \"src/compiler/type-narrowing-reducer.h\",\n        \"src/compiler/typed-optimization.cc\",\n        \"src/compiler/typed-optimization.h\",\n        \"src/compiler/use-info.h\",\n        \"src/compiler/value-numbering-reducer.cc\",\n        \"src/compiler/value-numbering-reducer.h\",\n        \"src/compiler/verifier.cc\",\n        \"src/compiler/verifier.h\",\n        \"src/compiler/write-barrier-kind.h\",\n        \"src/compiler/zone-stats.cc\",\n        \"src/compiler/zone-stats.h\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_ia32\": [\n            \"src/compiler/backend/ia32/code-generator-ia32.cc\",\n            \"src/compiler/backend/ia32/instruction-codes-ia32.h\",\n            \"src/compiler/backend/ia32/instruction-scheduler-ia32.cc\",\n            \"src/compiler/backend/ia32/instruction-selector-ia32.cc\",\n        ],\n        \"@v8//bazel/config:v8_target_x64\": [\n            \"src/compiler/backend/x64/code-generator-x64.cc\",\n            \"src/compiler/backend/x64/instruction-codes-x64.h\",\n            \"src/compiler/backend/x64/instruction-scheduler-x64.cc\",\n            \"src/compiler/backend/x64/instruction-selector-x64.cc\",\n            \"src/compiler/backend/x64/unwinding-info-writer-x64.cc\",\n            \"src/compiler/backend/x64/unwinding-info-writer-x64.h\",\n        ],\n        \"@v8//bazel/config:v8_target_arm\": [\n            \"src/compiler/backend/arm/code-generator-arm.cc\",\n            \"src/compiler/backend/arm/instruction-codes-arm.h\",\n            \"src/compiler/backend/arm/instruction-scheduler-arm.cc\",\n            \"src/compiler/backend/arm/instruction-selector-arm.cc\",\n            \"src/compiler/backend/arm/unwinding-info-writer-arm.cc\",\n            \"src/compiler/backend/arm/unwinding-info-writer-arm.h\",\n        ],\n        \"@v8//bazel/config:v8_target_arm64\": [\n            \"src/compiler/backend/arm64/code-generator-arm64.cc\",\n            \"src/compiler/backend/arm64/instruction-codes-arm64.h\",\n            \"src/compiler/backend/arm64/instruction-scheduler-arm64.cc\",\n            \"src/compiler/backend/arm64/instruction-selector-arm64.cc\",\n            \"src/compiler/backend/arm64/unwinding-info-writer-arm64.cc\",\n            \"src/compiler/backend/arm64/unwinding-info-writer-arm64.h\",\n        ],\n        \"@v8//bazel/config:v8_target_s390x\": [\n            \"src/compiler/backend/s390/code-generator-s390.cc\",\n            \"src/compiler/backend/s390/instruction-codes-s390.h\",\n            \"src/compiler/backend/s390/instruction-scheduler-s390.cc\",\n            \"src/compiler/backend/s390/instruction-selector-s390.cc\",\n            \"src/compiler/backend/s390/unwinding-info-writer-s390.cc\",\n            \"src/compiler/backend/s390/unwinding-info-writer-s390.h\",\n        ],\n        \"@v8//bazel/config:v8_target_riscv64\": [\n            \"src/compiler/backend/riscv/code-generator-riscv.cc\",\n            \"src/compiler/backend/riscv/instruction-codes-riscv.h\",\n            \"src/compiler/backend/riscv/instruction-scheduler-riscv.cc\",\n            \"src/compiler/backend/riscv/instruction-selector-riscv64.cc\",\n        ],\n        \"@v8//bazel/config:v8_target_ppc64le\": [\n            \"src/compiler/backend/ppc/code-generator-ppc.cc\",\n            \"src/compiler/backend/ppc/instruction-codes-ppc.h\",\n            \"src/compiler/backend/ppc/instruction-scheduler-ppc.cc\",\n            \"src/compiler/backend/ppc/instruction-selector-ppc.cc\",\n            \"src/compiler/backend/ppc/unwinding-info-writer-ppc.cc\",\n            \"src/compiler/backend/ppc/unwinding-info-writer-ppc.h\",\n        ],\n    }) + select({\n        \":is_v8_enable_webassembly\": [\n            \"src/compiler/int64-lowering.cc\",\n            \"src/compiler/int64-lowering.h\",\n            \"src/compiler/turboshaft/growable-stacks-reducer.h\",\n            \"src/compiler/turboshaft/int64-lowering-phase.cc\",\n            \"src/compiler/turboshaft/int64-lowering-phase.h\",\n            \"src/compiler/turboshaft/int64-lowering-reducer.h\",\n            \"src/compiler/turboshaft/wasm-assembler-helpers.h\",\n            \"src/compiler/turboshaft/wasm-gc-optimize-phase.cc\",\n            \"src/compiler/turboshaft/wasm-gc-optimize-phase.h\",\n            \"src/compiler/turboshaft/wasm-gc-typed-optimization-reducer.cc\",\n            \"src/compiler/turboshaft/wasm-gc-typed-optimization-reducer.h\",\n            \"src/compiler/turboshaft/wasm-load-elimination-reducer.h\",\n            \"src/compiler/turboshaft/wasm-in-js-inlining-phase.cc\",\n            \"src/compiler/turboshaft/wasm-in-js-inlining-phase.h\",\n            \"src/compiler/turboshaft/wasm-in-js-inlining-reducer-inl.h\",\n            \"src/compiler/turboshaft/wasm-lowering-phase.cc\",\n            \"src/compiler/turboshaft/wasm-lowering-phase.h\",\n            \"src/compiler/turboshaft/wasm-lowering-reducer.h\",\n            \"src/compiler/turboshaft/wasm-optimize-phase.cc\",\n            \"src/compiler/turboshaft/wasm-optimize-phase.h\",\n            \"src/compiler/turboshaft/wasm-turboshaft-compiler.cc\",\n            \"src/compiler/turboshaft/wasm-turboshaft-compiler.h\",\n            \"src/compiler/wasm-address-reassociation.cc\",\n            \"src/compiler/wasm-address-reassociation.h\",\n            \"src/compiler/wasm-call-descriptors.cc\",\n            \"src/compiler/wasm-call-descriptors.h\",\n            \"src/compiler/wasm-compiler.cc\",\n            \"src/compiler/wasm-compiler.h\",\n            \"src/compiler/wasm-compiler-definitions.cc\",\n            \"src/compiler/wasm-compiler-definitions.h\",\n            \"src/compiler/wasm-escape-analysis.cc\",\n            \"src/compiler/wasm-escape-analysis.h\",\n            \"src/compiler/wasm-gc-lowering.cc\",\n            \"src/compiler/wasm-gc-lowering.h\",\n            \"src/compiler/wasm-gc-operator-reducer.cc\",\n            \"src/compiler/wasm-gc-operator-reducer.h\",\n            \"src/compiler/wasm-graph-assembler.cc\",\n            \"src/compiler/wasm-graph-assembler.h\",\n            \"src/compiler/wasm-inlining.cc\",\n            \"src/compiler/wasm-inlining.h\",\n            \"src/compiler/wasm-inlining-into-js.cc\",\n            \"src/compiler/wasm-inlining-into-js.h\",\n            \"src/compiler/wasm-load-elimination.cc\",\n            \"src/compiler/wasm-load-elimination.h\",\n            \"src/compiler/wasm-loop-peeling.cc\",\n            \"src/compiler/wasm-loop-peeling.h\",\n            \"src/compiler/wasm-js-lowering.cc\",\n            \"src/compiler/wasm-js-lowering.h\",\n            \"src/compiler/wasm-typer.cc\",\n            \"src/compiler/wasm-typer.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        # Turboshaft's Maglev graph builder needs some Maglev files. We only\n        # include them explicitely when Maglev is disabled.\n        \":enable_maglev\": [],\n        \"//conditions:default\": [\n            \"src/maglev/maglev-basic-block.h\",\n            \"src/maglev/maglev-code-gen-state.h\",\n            \"src/maglev/maglev-compilation-info.cc\",\n            \"src/maglev/maglev-compilation-info.h\",\n            \"src/maglev/maglev-compilation-unit.cc\",\n            \"src/maglev/maglev-compilation-unit.h\",\n            \"src/maglev/maglev-graph-builder.cc\",\n            \"src/maglev/maglev-graph-builder.h\",\n            \"src/maglev/maglev-graph.h\",\n            \"src/maglev/maglev-graph-labeller.h\",\n            \"src/maglev/maglev-graph-printer.cc\",\n            \"src/maglev/maglev-graph-printer.h\",\n            \"src/maglev/maglev-graph-processor.h\",\n            \"src/maglev/maglev-graph-verifier.h\",\n            \"src/maglev/maglev-interpreter-frame-state.cc\",\n            \"src/maglev/maglev-interpreter-frame-state.h\",\n            \"src/maglev/maglev-ir.cc\",\n            \"src/maglev/maglev-ir.h\",\n            \"src/maglev/maglev-ir-inl.h\",\n            \"src/maglev/maglev-register-frame-array.h\",\n            \"src/maglev/maglev-phi-representation-selector.cc\",\n            \"src/maglev/maglev-phi-representation-selector.h\",\n            \"src/maglev/maglev-post-hoc-optimizations-processors.h\",\n            \"src/maglev/maglev-pre-regalloc-codegen-processors.h\",\n        ],\n    }),\n)\n\nfilegroup(\n    name = \"noicu/v8_initializers_files\",\n    srcs = [\n        \"src/builtins/builtins-array-gen.cc\",\n        \"src/builtins/builtins-array-gen.h\",\n        \"src/builtins/builtins-async-function-gen.cc\",\n        \"src/builtins/builtins-async-gen.cc\",\n        \"src/builtins/builtins-async-gen.h\",\n        \"src/builtins/builtins-async-generator-gen.cc\",\n        \"src/builtins/builtins-async-iterator-gen.cc\",\n        \"src/builtins/builtins-bigint-gen.cc\",\n        \"src/builtins/builtins-bigint-gen.h\",\n        \"src/builtins/builtins-call-gen.cc\",\n        \"src/builtins/builtins-call-gen.h\",\n        \"src/builtins/builtins-collections-gen.cc\",\n        \"src/builtins/builtins-collections-gen.h\",\n        \"src/builtins/builtins-constructor.h\",\n        \"src/builtins/builtins-constructor-gen.cc\",\n        \"src/builtins/builtins-constructor-gen.h\",\n        \"src/builtins/builtins-conversion-gen.cc\",\n        \"src/builtins/builtins-data-view-gen.h\",\n        \"src/builtins/builtins-date-gen.cc\",\n        \"src/builtins/builtins-generator-gen.cc\",\n        \"src/builtins/builtins-global-gen.cc\",\n        \"src/builtins/builtins-handler-gen.cc\",\n        \"src/builtins/builtins-ic-gen.cc\",\n        \"src/builtins/builtins-internal-gen.cc\",\n        \"src/builtins/builtins-interpreter-gen.cc\",\n        \"src/builtins/builtins-iterator-gen.cc\",\n        \"src/builtins/builtins-iterator-gen.h\",\n        \"src/builtins/builtins-lazy-gen.cc\",\n        \"src/builtins/builtins-lazy-gen.h\",\n        \"src/builtins/builtins-microtask-queue-gen.cc\",\n        \"src/builtins/builtins-number-gen.cc\",\n        \"src/builtins/builtins-number-tsa.cc\",\n        \"src/builtins/builtins-object-gen.cc\",\n        \"src/builtins/builtins-object-gen.h\",\n        \"src/builtins/builtins-promise-gen.cc\",\n        \"src/builtins/builtins-promise-gen.h\",\n        \"src/builtins/builtins-proxy-gen.cc\",\n        \"src/builtins/builtins-proxy-gen.h\",\n        \"src/builtins/builtins-regexp-gen.cc\",\n        \"src/builtins/builtins-regexp-gen.h\",\n        \"src/builtins/builtins-shadow-realm-gen.cc\",\n        \"src/builtins/builtins-sharedarraybuffer-gen.cc\",\n        \"src/builtins/builtins-string-gen.cc\",\n        \"src/builtins/builtins-string-gen.h\",\n        \"src/builtins/builtins-string-tsa.cc\",\n        \"src/builtins/builtins-temporal-gen.cc\",\n        \"src/builtins/builtins-typed-array-gen.cc\",\n        \"src/builtins/builtins-typed-array-gen.h\",\n        \"src/builtins/builtins-utils-gen.h\",\n        \"src/builtins/growable-fixed-array-gen.cc\",\n        \"src/builtins/growable-fixed-array-gen.h\",\n        \"src/builtins/number-builtins-reducer-inl.h\",\n        \"src/builtins/profile-data-reader.cc\",\n        \"src/builtins/profile-data-reader.h\",\n        \"src/builtins/setup-builtins-internal.cc\",\n        \"src/builtins/torque-csa-header-includes.h\",\n        \"src/codegen/turboshaft-builtins-assembler-inl.h\",\n        \"src/codegen/code-stub-assembler.cc\",\n        \"third_party/v8/codegen/fp16-inl.h\",\n        \"src/codegen/code-stub-assembler-inl.h\",\n        \"src/codegen/code-stub-assembler.h\",\n        \"src/codegen/define-code-stub-assembler-macros.inc\",\n        \"src/codegen/undef-code-stub-assembler-macros.inc\",\n        \"src/compiler/turboshaft/builtin-compiler.cc\",\n        \"src/compiler/turboshaft/builtin-compiler.h\",\n        \"src/heap/setup-heap-internal.cc\",\n        \"src/ic/accessor-assembler.cc\",\n        \"src/ic/accessor-assembler.h\",\n        \"src/ic/binary-op-assembler.cc\",\n        \"src/ic/binary-op-assembler.h\",\n        \"src/ic/keyed-store-generic.cc\",\n        \"src/ic/keyed-store-generic.h\",\n        \"src/ic/unary-op-assembler.cc\",\n        \"src/ic/unary-op-assembler.h\",\n        \"src/interpreter/interpreter-assembler.cc\",\n        \"src/interpreter/interpreter-assembler.h\",\n        \"src/interpreter/interpreter-generator.cc\",\n        \"src/interpreter/interpreter-generator.h\",\n        \"src/interpreter/interpreter-generator-tsa.cc\",\n        \"src/interpreter/interpreter-generator-tsa.h\",\n        \"src/interpreter/interpreter-intrinsics-generator.cc\",\n        \"src/interpreter/interpreter-intrinsics-generator.h\",\n        \"src/numbers/integer-literal.h\",\n        \"src/numbers/integer-literal-inl.h\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_ia32\": [\"src/builtins/ia32/builtins-ia32.cc\"],\n        \"@v8//bazel/config:v8_target_x64\": [\"src/builtins/x64/builtins-x64.cc\"],\n        \"@v8//bazel/config:v8_target_arm\": [\"src/builtins/arm/builtins-arm.cc\"],\n        \"@v8//bazel/config:v8_target_arm64\": [\"src/builtins/arm64/builtins-arm64.cc\"],\n        \"@v8//bazel/config:v8_target_s390x\": [\"src/builtins/s390/builtins-s390.cc\"],\n        \"@v8//bazel/config:v8_target_riscv64\": [\"src/builtins/riscv/builtins-riscv.cc\"],\n        \"@v8//bazel/config:v8_target_ppc64le\": [\"src/builtins/ppc/builtins-ppc.cc\"],\n    }) + select({\n        \":is_v8_enable_webassembly\": [\n            \"src/builtins/builtins-wasm-gen.cc\",\n            \"src/builtins/builtins-wasm-gen.h\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":enable_drumbrake_x64\": [\n            \"src/wasm/interpreter/x64/interpreter-builtins-x64.cc\"\n        ],\n        \":enable_drumbrake_arm64\": [\n            \"src/wasm/interpreter/arm64/interpreter-builtins-arm64.cc\"\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\nfilegroup(\n    name = \"icu/v8_initializers_files\",\n    srcs = [\n        \"src/builtins/builtins-intl-gen.cc\",\n        \":noicu/v8_initializers_files\",\n    ],\n)\n\nfilegroup(\n    name = \"cppgc_base_files\",\n    srcs = [\n        \"src/heap/cppgc/allocation.cc\",\n        \"src/heap/cppgc/caged-heap.h\",\n        \"src/heap/cppgc/compaction-worklists.cc\",\n        \"src/heap/cppgc/compaction-worklists.h\",\n        \"src/heap/cppgc/compactor.cc\",\n        \"src/heap/cppgc/compactor.h\",\n        \"src/heap/cppgc/concurrent-marker.cc\",\n        \"src/heap/cppgc/concurrent-marker.h\",\n        \"src/heap/cppgc/explicit-management.cc\",\n        \"src/heap/cppgc/free-list.cc\",\n        \"src/heap/cppgc/free-list.h\",\n        \"src/heap/cppgc/garbage-collector.h\",\n        \"src/heap/cppgc/gc-info.cc\",\n        \"src/heap/cppgc/gc-info-table.cc\",\n        \"src/heap/cppgc/gc-info-table.h\",\n        \"src/heap/cppgc/gc-invoker.cc\",\n        \"src/heap/cppgc/gc-invoker.h\",\n        \"src/heap/cppgc/globals.h\",\n        \"src/heap/cppgc/heap.cc\",\n        \"src/heap/cppgc/heap.h\",\n        \"src/heap/cppgc/heap-base.cc\",\n        \"src/heap/cppgc/heap-base.h\",\n        \"src/heap/cppgc/heap-config.h\",\n        \"src/heap/cppgc/heap-consistency.cc\",\n        \"src/heap/cppgc/heap-growing.cc\",\n        \"src/heap/cppgc/heap-growing.h\",\n        \"src/heap/cppgc/heap-object-header.cc\",\n        \"src/heap/cppgc/heap-object-header.h\",\n        \"src/heap/cppgc/heap-page.cc\",\n        \"src/heap/cppgc/heap-page.h\",\n        \"src/heap/cppgc/heap-space.cc\",\n        \"src/heap/cppgc/heap-space.h\",\n        \"src/heap/cppgc/heap-state.cc\",\n        \"src/heap/cppgc/heap-statistics-collector.cc\",\n        \"src/heap/cppgc/heap-statistics-collector.h\",\n        \"src/heap/cppgc/heap-visitor.h\",\n        \"src/heap/cppgc/liveness-broker.cc\",\n        \"src/heap/cppgc/liveness-broker.h\",\n        \"src/heap/cppgc/logging.cc\",\n        \"src/heap/cppgc/marker.cc\",\n        \"src/heap/cppgc/marker.h\",\n        \"src/heap/cppgc/marking-state.cc\",\n        \"src/heap/cppgc/marking-state.h\",\n        \"src/heap/cppgc/marking-verifier.cc\",\n        \"src/heap/cppgc/marking-verifier.h\",\n        \"src/heap/cppgc/marking-visitor.cc\",\n        \"src/heap/cppgc/marking-visitor.h\",\n        \"src/heap/cppgc/marking-worklists.cc\",\n        \"src/heap/cppgc/marking-worklists.h\",\n        \"src/heap/cppgc/member-storage.cc\",\n        \"src/heap/cppgc/member-storage.h\",\n        \"src/heap/cppgc/memory.cc\",\n        \"src/heap/cppgc/memory.h\",\n        \"src/heap/cppgc/metric-recorder.h\",\n        \"src/heap/cppgc/name-trait.cc\",\n        \"src/heap/cppgc/object-allocator.cc\",\n        \"src/heap/cppgc/object-allocator.h\",\n        \"src/heap/cppgc/object-poisoner.h\",\n        \"src/heap/cppgc/object-size-trait.cc\",\n        \"src/heap/cppgc/object-start-bitmap.h\",\n        \"src/heap/cppgc/object-view.h\",\n        \"src/heap/cppgc/page-memory.cc\",\n        \"src/heap/cppgc/page-memory.h\",\n        \"src/heap/cppgc/persistent-node.cc\",\n        \"src/heap/cppgc/platform.cc\",\n        \"src/heap/cppgc/platform.h\",\n        \"src/heap/cppgc/pointer-policies.cc\",\n        \"src/heap/cppgc/prefinalizer-handler.cc\",\n        \"src/heap/cppgc/prefinalizer-handler.h\",\n        \"src/heap/cppgc/process-heap.cc\",\n        \"src/heap/cppgc/process-heap.h\",\n        \"src/heap/cppgc/process-heap-statistics.cc\",\n        \"src/heap/cppgc/process-heap-statistics.h\",\n        \"src/heap/cppgc/raw-heap.cc\",\n        \"src/heap/cppgc/raw-heap.h\",\n        \"src/heap/cppgc/remembered-set.cc\",\n        \"src/heap/cppgc/remembered-set.h\",\n        \"src/heap/cppgc/stats-collector.cc\",\n        \"src/heap/cppgc/stats-collector.h\",\n        \"src/heap/cppgc/sweeper.cc\",\n        \"src/heap/cppgc/sweeper.h\",\n        \"src/heap/cppgc/task-handle.h\",\n        \"src/heap/cppgc/trace-event.h\",\n        \"src/heap/cppgc/trace-trait.cc\",\n        \"src/heap/cppgc/unmarker.h\",\n        \"src/heap/cppgc/virtual-memory.cc\",\n        \"src/heap/cppgc/virtual-memory.h\",\n        \"src/heap/cppgc/visitor.cc\",\n        \"src/heap/cppgc/visitor.h\",\n        \"src/heap/cppgc/write-barrier.cc\",\n        \"src/heap/cppgc/write-barrier.h\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_heap_base_files\",\n    srcs = [\n        \"src/heap/base/active-system-pages.cc\",\n        \"src/heap/base/active-system-pages.h\",\n        \"src/heap/base/basic-slot-set.h\",\n        \"src/heap/base/bytes.h\",\n        \"src/heap/base/cached-unordered-map.h\",\n        \"src/heap/base/incremental-marking-schedule.cc\",\n        \"src/heap/base/incremental-marking-schedule.h\",\n        \"src/heap/base/memory-tagging.h\",\n        \"src/heap/base/memory-tagging.cc\",\n        \"src/heap/base/stack.cc\",\n        \"src/heap/base/stack.h\",\n        \"src/heap/base/worklist.cc\",\n        \"src/heap/base/worklist.h\",\n    ] + select({\n        # Note these cannot be v8_target_is_* selects because these contain\n        # inline assembly that runs inside the executable. Since these are\n        # linked directly into mksnapshot, they must use the actual target cpu.\n        \"@v8//bazel/config:is_inline_asm_ia32\": [\"src/heap/base/asm/ia32/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_inline_asm_x64\": [\"src/heap/base/asm/x64/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_inline_asm_arm\": [\"src/heap/base/asm/arm/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_inline_asm_arm64\": [\"src/heap/base/asm/arm64/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_inline_asm_s390x\": [\"src/heap/base/asm/s390/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_inline_asm_riscv64\": [\"src/heap/base/asm/riscv64/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_inline_asm_ppc64le\": [\"src/heap/base/asm/ppc/push_registers_asm.cc\"],\n        \"@v8//bazel/config:is_msvc_asm_ia32\": [\"src/heap/base/asm/ia32/push_registers_masm.asm\"],\n        \"@v8//bazel/config:is_msvc_asm_x64\": [\"src/heap/base/asm/x64/push_registers_masm.asm\"],\n        \"@v8//bazel/config:is_msvc_asm_arm64\": [\"src/heap/base/asm/arm64/push_registers_masm.S\"],\n    }),\n)\n\nv8_library(\n  name = \"lib_fast_float\",\n  srcs = [\n    \"third_party/fast_float/src/include/fast_float/ascii_number.h\",\n    \"third_party/fast_float/src/include/fast_float/bigint.h\",\n    \"third_party/fast_float/src/include/fast_float/constexpr_feature_detect.h\",\n    \"third_party/fast_float/src/include/fast_float/decimal_to_binary.h\",\n    \"third_party/fast_float/src/include/fast_float/digit_comparison.h\",\n    \"third_party/fast_float/src/include/fast_float/fast_float.h\",\n    \"third_party/fast_float/src/include/fast_float/fast_table.h\",\n    \"third_party/fast_float/src/include/fast_float/float_common.h\",\n    \"third_party/fast_float/src/include/fast_float/parse_number.h\",\n    ],\n  hdrs = [ \"third_party/fast_float/src/include/fast_float/fast_float.h\" ],\n  includes = [\n    \"third_party/fast_float/src/include\",\n  ],\n)\n\nv8_library(\n  name = \"lib_fp16\",\n  srcs = [\"third_party/fp16/src/include/fp16.h\"],\n  hdrs = [\n    \"third_party/fp16/src/include/fp16/fp16.h\",\n    \"third_party/fp16/src/include/fp16/bitcasts.h\",\n  ],\n  includes = [\n    \"third_party/fp16/src/include\",\n  ],\n)\n\nfilegroup(\n    name = \"v8_bigint\",\n    srcs = [\n        \"src/bigint/bigint.h\",\n        \"src/bigint/bigint-internal.cc\",\n        \"src/bigint/bigint-internal.h\",\n        \"src/bigint/bitwise.cc\",\n        \"src/bigint/digit-arithmetic.h\",\n        \"src/bigint/div-barrett.cc\",\n        \"src/bigint/div-burnikel.cc\",\n        \"src/bigint/div-helpers.cc\",\n        \"src/bigint/div-helpers.h\",\n        \"src/bigint/div-schoolbook.cc\",\n        \"src/bigint/fromstring.cc\",\n        \"src/bigint/mul-fft.cc\",\n        \"src/bigint/mul-karatsuba.cc\",\n        \"src/bigint/mul-schoolbook.cc\",\n        \"src/bigint/mul-toom.cc\",\n        \"src/bigint/tostring.cc\",\n        \"src/bigint/util.h\",\n        \"src/bigint/vector-arithmetic.cc\",\n        \"src/bigint/vector-arithmetic.h\",\n    ],\n)\n\nfilegroup(\n    name = \"mksnapshot_files\",\n    srcs = [\n        \"src/init/setup-isolate-full.cc\",\n        \"src/snapshot/embedded/embedded-empty.cc\",\n        \"src/snapshot/embedded/embedded-file-writer.cc\",\n        \"src/snapshot/embedded/embedded-file-writer.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-aix.cc\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-aix.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-base.cc\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-base.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-generic.cc\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-generic.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-mac.cc\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-mac.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-win.cc\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-win.h\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-zos.cc\",\n        \"src/snapshot/embedded/platform-embedded-file-writer-zos.h\",\n        \"src/snapshot/mksnapshot.cc\",\n        \"src/snapshot/snapshot-empty.cc\",\n        \"src/snapshot/static-roots-gen.cc\",\n        \"src/snapshot/static-roots-gen.h\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_inspector_files\",\n    srcs = [\n        \"src/inspector/crc32.cc\",\n        \"src/inspector/crc32.h\",\n        \"src/inspector/custom-preview.cc\",\n        \"src/inspector/custom-preview.h\",\n        \"src/inspector/injected-script.cc\",\n        \"src/inspector/injected-script.h\",\n        \"src/inspector/inspected-context.cc\",\n        \"src/inspector/inspected-context.h\",\n        \"src/inspector/remote-object-id.cc\",\n        \"src/inspector/remote-object-id.h\",\n        \"src/inspector/search-util.cc\",\n        \"src/inspector/search-util.h\",\n        \"src/inspector/string-16.cc\",\n        \"src/inspector/string-16.h\",\n        \"src/inspector/string-util.cc\",\n        \"src/inspector/string-util.h\",\n        \"src/inspector/test-interface.cc\",\n        \"src/inspector/test-interface.h\",\n        \"src/inspector/v8-console.cc\",\n        \"src/inspector/v8-console.h\",\n        \"src/inspector/v8-console-agent-impl.cc\",\n        \"src/inspector/v8-console-agent-impl.h\",\n        \"src/inspector/v8-console-message.cc\",\n        \"src/inspector/v8-console-message.h\",\n        \"src/inspector/v8-debugger.cc\",\n        \"src/inspector/v8-debugger.h\",\n        \"src/inspector/v8-debugger-agent-impl.cc\",\n        \"src/inspector/v8-debugger-agent-impl.h\",\n        \"src/inspector/v8-debugger-barrier.cc\",\n        \"src/inspector/v8-debugger-barrier.h\",\n        \"src/inspector/v8-debugger-id.cc\",\n        \"src/inspector/v8-debugger-id.h\",\n        \"src/inspector/v8-debugger-script.cc\",\n        \"src/inspector/v8-debugger-script.h\",\n        \"src/inspector/v8-deep-serializer.cc\",\n        \"src/inspector/v8-deep-serializer.h\",\n        \"src/inspector/v8-heap-profiler-agent-impl.cc\",\n        \"src/inspector/v8-heap-profiler-agent-impl.h\",\n        \"src/inspector/v8-inspector-impl.cc\",\n        \"src/inspector/v8-inspector-impl.h\",\n        \"src/inspector/v8-inspector-session-impl.cc\",\n        \"src/inspector/v8-inspector-session-impl.h\",\n        \"src/inspector/v8-serialization-duplicate-tracker.cc\",\n        \"src/inspector/v8-serialization-duplicate-tracker.h\",\n        \"src/inspector/v8-profiler-agent-impl.cc\",\n        \"src/inspector/v8-profiler-agent-impl.h\",\n        \"src/inspector/v8-regex.cc\",\n        \"src/inspector/v8-regex.h\",\n        \"src/inspector/v8-runtime-agent-impl.cc\",\n        \"src/inspector/v8-runtime-agent-impl.h\",\n        \"src/inspector/v8-schema-agent-impl.cc\",\n        \"src/inspector/v8-schema-agent-impl.h\",\n        \"src/inspector/v8-stack-trace-impl.cc\",\n        \"src/inspector/v8-stack-trace-impl.h\",\n        \"src/inspector/v8-string-conversions.cc\",\n        \"src/inspector/v8-string-conversions.h\",\n        \"src/inspector/v8-value-utils.cc\",\n        \"src/inspector/v8-value-utils.h\",\n        \"src/inspector/value-mirror.cc\",\n        \"src/inspector/value-mirror.h\",\n        \":crdtp_platform_files\",\n        \":generated_inspector_files\",\n    ],\n)\n\nfilegroup(\n    name = \"crdtp_platform_files\",\n    srcs = [\n        \"third_party/inspector_protocol/crdtp/json_platform.h\",\n        \"third_party/inspector_protocol/crdtp/json_platform_v8.cc\",\n        \":crdtp_files\",\n    ],\n)\n\nfilegroup(\n    name = \"crdtp_files\",\n    srcs = [\n        \"third_party/inspector_protocol/crdtp/cbor.cc\",\n        \"third_party/inspector_protocol/crdtp/cbor.h\",\n        \"third_party/inspector_protocol/crdtp/dispatch.cc\",\n        \"third_party/inspector_protocol/crdtp/dispatch.h\",\n        \"third_party/inspector_protocol/crdtp/error_support.cc\",\n        \"third_party/inspector_protocol/crdtp/error_support.h\",\n        \"third_party/inspector_protocol/crdtp/export.h\",\n        \"third_party/inspector_protocol/crdtp/find_by_first.h\",\n        \"third_party/inspector_protocol/crdtp/frontend_channel.h\",\n        \"third_party/inspector_protocol/crdtp/json.cc\",\n        \"third_party/inspector_protocol/crdtp/json.h\",\n        \"third_party/inspector_protocol/crdtp/parser_handler.h\",\n        \"third_party/inspector_protocol/crdtp/protocol_core.cc\",\n        \"third_party/inspector_protocol/crdtp/protocol_core.h\",\n        \"third_party/inspector_protocol/crdtp/serializable.cc\",\n        \"third_party/inspector_protocol/crdtp/serializable.h\",\n        \"third_party/inspector_protocol/crdtp/span.cc\",\n        \"third_party/inspector_protocol/crdtp/span.h\",\n        \"third_party/inspector_protocol/crdtp/status.cc\",\n        \"third_party/inspector_protocol/crdtp/status.h\",\n    ],\n)\n\nfilegroup(\n    name = \"noicu/snapshot_files\",\n    srcs = [\n        \"src/init/setup-isolate-deserialize.cc\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_arm\": [\n            \"google3/snapshots/arm/noicu/embedded.S\",\n            \"google3/snapshots/arm/noicu/snapshot.cc\",\n        ],\n        \"@v8//bazel/config:v8_target_ia32\": [\n            \"google3/snapshots/ia32/noicu/embedded.S\",\n            \"google3/snapshots/ia32/noicu/snapshot.cc\",\n        ],\n        \"//conditions:default\": [\":noicu/generated_snapshot_files\"],\n    }),\n)\n\nfilegroup(\n    name = \"icu/snapshot_files\",\n    srcs = [\n        \"src/init/setup-isolate-deserialize.cc\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_arm\": [\n            \"google3/snapshots/arm/icu/embedded.S\",\n            \"google3/snapshots/arm/icu/snapshot.cc\",\n        ],\n        \"@v8//bazel/config:v8_target_ia32\": [\n            \"google3/snapshots/ia32/icu/embedded.S\",\n            \"google3/snapshots/ia32/icu/snapshot.cc\",\n        ],\n        \"//conditions:default\": [\":icu/generated_snapshot_files\"],\n    }),\n)\n\nfilegroup(\n    name = \"wee8_files\",\n    srcs = [\n        \"src/wasm/c-api.cc\",\n        \"src/wasm/c-api.h\",\n        \"third_party/wasm-api/wasm.h\",\n        \"third_party/wasm-api/wasm.hh\",\n    ],\n)\n\nfilegroup(\n    name = \"kythe_torque_headers\",\n    srcs = glob([\"src/torque/*.h\"]),\n)\n\n# =================================================\n# Generated files\n# =================================================\n\n# Define file groups for torque definitions and initializers. Both are\n# generated together, but we can use output_group to split them.\nfilegroup(\n    name = \"icu/generated_torque_definitions\",\n    srcs = [\":icu/generated_torque_files\"],\n    output_group = \"definitions\",\n)\n\nfilegroup(\n    name = \"noicu/generated_torque_definitions\",\n    srcs = [\":noicu/generated_torque_files\"],\n    output_group = \"definitions\",\n)\n\nfilegroup(\n    name = \"icu/generated_torque_initializers\",\n    srcs = [\":icu/generated_torque_files\"],\n    output_group = \"initializers\",\n)\n\nfilegroup(\n    name = \"noicu/generated_torque_initializers\",\n    srcs = [\":noicu/generated_torque_files\"],\n    output_group = \"initializers\",\n)\n\n# TODO(victorgomes): Add support to tools/debug_helper,\n# which needs class-debug-readers and debug-macros.\nv8_torque_files(\n    name = \"generated_torque_files\",\n    args = select({\n        \":is_v8_annotate_torque_ir\": [\"-annotate-ir\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \"@v8//bazel/config:v8_target_is_32_bits\": [\"-m32\"],\n        \"//conditions:default\": [],\n    }),\n    initializer_extras = [\n        \"csa-types.h\",\n        \"enum-verifiers.cc\",\n        \"exported-macros-assembler.cc\",\n        \"exported-macros-assembler.h\",\n    ],\n    definition_extras = [\n        \"bit-fields.h\",\n        \"builtin-definitions.h\",\n        # \"class-debug-readers.cc\",\n        # \"class-debug-readers.h\",\n        \"class-forward-declarations.h\",\n        \"class-verifiers.cc\",\n        \"class-verifiers.h\",\n        # \"debug-macros.cc\",\n        # \"debug-macros.h\",\n        \"factory.cc\",\n        \"factory.inc\",\n        \"instance-types.h\",\n        \"interface-descriptors.inc\",\n        \"objects-body-descriptors-inl.inc\",\n        \"objects-printer.cc\",\n        \"visitor-lists.h\",\n\n    ],\n    icu_srcs = [\":icu/torque_files\"],\n    noicu_srcs = [\":noicu/torque_files\"],\n)\n\npy_binary(\n    name = \"code_generator\",\n    srcs = [\n        \"third_party/inspector_protocol/code_generator.py\",\n        \"third_party/inspector_protocol/pdl.py\",\n    ],\n    data = [\n        \"third_party/inspector_protocol/lib/Forward_h.template\",\n        \"third_party/inspector_protocol/lib/Object_cpp.template\",\n        \"third_party/inspector_protocol/lib/Object_h.template\",\n        \"third_party/inspector_protocol/lib/Protocol_cpp.template\",\n        \"third_party/inspector_protocol/lib/ValueConversions_cpp.template\",\n        \"third_party/inspector_protocol/lib/ValueConversions_h.template\",\n        \"third_party/inspector_protocol/lib/Values_cpp.template\",\n        \"third_party/inspector_protocol/lib/Values_h.template\",\n        \"third_party/inspector_protocol/templates/Exported_h.template\",\n        \"third_party/inspector_protocol/templates/Imported_h.template\",\n        \"third_party/inspector_protocol/templates/TypeBuilder_cpp.template\",\n        \"third_party/inspector_protocol/templates/TypeBuilder_h.template\",\n    ],\n    imports = [\"third_party/inspector_protocol/\"],\n    python_version = \"PY3\",\n    deps = [\n        requirement(\"jinja2\"),\n    ],\n)\n\ngenrule(\n    name = \"generated_inspector_files\",\n    srcs = [\n        \"include/js_protocol.pdl\",\n        \"src/inspector/inspector_protocol_config.json\",\n    ],\n    outs = [\n        \"include/inspector/Debugger.h\",\n        \"include/inspector/Runtime.h\",\n        \"include/inspector/Schema.h\",\n        \"src/inspector/protocol/Forward.h\",\n        \"src/inspector/protocol/Protocol.cpp\",\n        \"src/inspector/protocol/Protocol.h\",\n        \"src/inspector/protocol/Console.cpp\",\n        \"src/inspector/protocol/Console.h\",\n        \"src/inspector/protocol/Debugger.cpp\",\n        \"src/inspector/protocol/Debugger.h\",\n        \"src/inspector/protocol/HeapProfiler.cpp\",\n        \"src/inspector/protocol/HeapProfiler.h\",\n        \"src/inspector/protocol/Profiler.cpp\",\n        \"src/inspector/protocol/Profiler.h\",\n        \"src/inspector/protocol/Runtime.cpp\",\n        \"src/inspector/protocol/Runtime.h\",\n        \"src/inspector/protocol/Schema.cpp\",\n        \"src/inspector/protocol/Schema.h\",\n    ],\n    cmd = \"$(location :code_generator) --jinja_dir . \\\n           --inspector_protocol_dir third_party/inspector_protocol \\\n           --config $(location :src/inspector/inspector_protocol_config.json) \\\n           --config_value protocol.path=$(location :include/js_protocol.pdl) \\\n           --output_base $(@D)/src/inspector\",\n    local = 1,\n    message = \"Generating inspector files\",\n    tools = [\n        \":code_generator\",\n    ],\n)\n\nfilegroup(\n    name = \"v8_common_libshared_files\",\n    srcs = [\n        \":torque_runtime_support_files\",\n        \":v8_libplatform_files\",\n        \":v8_libsampler_files\",\n        \":v8_shared_internal_headers\",\n    ],\n)\n\nfilegroup(\n    name = \"d8_files\",\n    srcs = [\n        \"src/d8/async-hooks-wrapper.cc\",\n        \"src/d8/async-hooks-wrapper.h\",\n        \"src/d8/d8.cc\",\n        \"src/d8/d8.h\",\n        \"src/d8/d8-console.cc\",\n        \"src/d8/d8-console.h\",\n        \"src/d8/d8-js.cc\",\n        \"src/d8/d8-platforms.cc\",\n        \"src/d8/d8-platforms.h\",\n        \"src/d8/d8-posix.cc\",\n        \"src/d8/d8-test.cc\",\n    ],\n)\n\ngenrule(\n    name = \"generated_bytecode_builtins_list\",\n    srcs = [],\n    outs = [\"builtins-generated/bytecodes-builtins-list.h\"],\n    cmd = \"$(location :bytecode_builtins_list_generator) $@\",\n    cmd_bat = \"$(location :bytecode_builtins_list_generator) $@\",\n    tools = [\":bytecode_builtins_list_generator\"],\n)\n\ngenrule(\n    name = \"generated_regexp_special_case\",\n    srcs = [],\n    outs = [\"src/regexp/special-case.cc\"],\n    cmd = \"$(location :regexp_special_case_generator) $@\",\n    cmd_bat = \"$(location :regexp_special_case_generator) $@\",\n    tools = [\":regexp_special_case_generator\"],\n)\n\nv8_mksnapshot(\n    name = \"generated_snapshot_files\",\n    args = select({\n        \":is_v8_enable_verify_heap\": [\"--verify-heap\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_fast_mksnapshot\": [\n            \"--no-turbo-rewrite-far-jumps\",\n            \"--no-turbo-verify-allocation\",\n        ],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_snapshot_code_comments\": [\"--code-comments\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \":is_v8_enable_snapshot_native_code_counters\": [\n            \"--native-code-counters\",\n        ],\n        \"//conditions:default\": [\"--no-native-code-counters\"],\n    }),\n)\n\n# =================================================\n# Libraries rules\n# =================================================\n\n# NOTE: This allow headers to be accessed without the icu/noicu prefixes.\ncc_library(\n    name = \"icu/generated_torque_definitions_headers\",\n    hdrs = [\":icu/generated_torque_definitions\"],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    strip_include_prefix = \"icu\",\n)\n\ncc_library(\n    name = \"noicu/generated_torque_definitions_headers\",\n    hdrs = [\":noicu/generated_torque_definitions\"],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    strip_include_prefix = \"noicu\",\n)\n\nv8_library(\n    name = \"v8_libbase\",\n    srcs = [\n        \":v8_libbase_files\",\n        \":v8_shared_internal_headers\",\n    ],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    deps = select({\n        \"@v8//bazel/config:is_macos\": [\"//external:absl_synchronization\"],\n        \"//conditions:default\": [],\n    }),\n)\n\ncc_library(\n    name = \"torque_base_headers\",\n    hdrs = [\n        \"src/torque/kythe-data.h\",\n        \"src/torque/torque-compiler.h\",\n    ],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    include_prefix = \"third_party/v8\",\n    includes = [\".\"],\n)\n\ncc_library(\n    name = \"kythe_torque_base\",\n    srcs = [\n        \":torque_base_files\",\n    ],\n    copts = [\"-Wno-implicit-fallthrough\"] + select({\n        \"@v8//bazel/config:is_posix\": [\"-fexceptions\"],\n        \"//conditions:default\": [],\n    }),\n    features = [\"-use_header_modules\"],\n    deps = [\n        \":torque_base_headers\",\n        \":v8_libbase\",\n    ],\n)\n\nv8_library(\n    name = \"v8_libshared\",\n    srcs = [\n        \":v8_base_without_compiler_files\",\n        \":v8_common_libshared_files\",\n    ] + select({\n        \":is_v8_enable_turbofan\": [\n            \":v8_compiler_files\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    copts = [\"-Wno-implicit-fallthrough\"],\n    icu_deps = [\n        \":icu/generated_torque_definitions_headers\",\n        \"//external:icu\",\n    ],\n    icu_srcs = [\n        \":generated_regexp_special_case\",\n        \":icu/generated_torque_definitions\",\n        \":icu/v8_base_without_compiler_files\",\n    ],\n    noicu_deps = [\n        \":noicu/generated_torque_definitions_headers\",\n    ],\n    noicu_srcs = [\n        \":noicu/generated_torque_definitions\",\n    ],\n    deps = [\n        \":lib_fast_float\",\n        \":lib_fp16\",\n        \":v8_libbase\",\n        \"//external:absl_btree\",\n        \"//external:absl_flat_hash_map\",\n        \"//external:absl_flat_hash_set\",\n        \"//external:hwy\",\n    ],\n)\n\nv8_library(\n    name = \"v8\",\n    srcs = [\n        \":v8_inspector_files\",\n    ] + select({\n        \":is_not_v8_enable_turbofan\": [\n            # With Turbofan disabled, we only include the stubbed-out API.\n            \"src/compiler/turbofan-disabled.cc\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    hdrs = [\":public_header_files\"],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    icu_deps = [\":icu/v8_libshared\"],\n    icu_srcs = [\":icu/snapshot_files\"],\n    noicu_deps = [\":noicu/v8_libshared\"],\n    noicu_srcs = [\":noicu/snapshot_files\"],\n    visibility = [\"//visibility:public\"],\n)\n\n# TODO(victorgomes): Check if v8_enable_webassembly is true.\nv8_library(\n    name = \"wee8\",\n    srcs = [\":wee8_files\"],\n    hdrs = [\":public_wasm_c_api_header_files\"],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    strip_include_prefix = \"third_party\",\n    visibility = [\"//visibility:public\"],\n    deps = [\":noicu/v8\"] + select({\n        \":is_v8_enable_vtunejit\": [\n            \":v8_vtune\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\nalias(\n    name = \"core_lib_noicu\",\n    actual = \"noicu/v8\",\n)\n\nalias(\n    name = \"core_lib_icu\",\n    actual = \"icu/v8\",\n)\n\nv8_library(\n    name = \"v8_vtune\",\n    srcs = [\n        \"third_party/vtune/v8-vtune.h\",\n        \"third_party/vtune/vtune-jit.cc\",\n        \"third_party/vtune/vtune-jit.h\",\n    ],\n    copts = [\"-I\"],\n    deps = [\n        \":core_lib_noicu\",\n        \"@intel_ittapi//:lib_ittapi\",\n    ],\n)\n\n# =================================================\n# Binary rules\n# =================================================\n\nv8_binary(\n    name = \"bytecode_builtins_list_generator\",\n    srcs = [\n        \"src/builtins/generate-bytecodes-builtins-list.cc\",\n        \"src/interpreter/bytecode-operands.cc\",\n        \"src/interpreter/bytecode-operands.h\",\n        \"src/interpreter/bytecode-traits.h\",\n        \"src/interpreter/bytecodes.cc\",\n        \"src/interpreter/bytecodes.h\",\n    ],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    deps = [\"v8_libbase\"],\n)\n\nv8_binary(\n    name = \"regexp_special_case_generator\",\n    srcs = [\n        \"src/regexp/gen-regexp-special-case.cc\",\n        \"src/regexp/special-case.h\",\n        \":v8_shared_internal_headers\",\n    ],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    defines = [\n        \"V8_INTL_SUPPORT\",\n        \"ICU_UTIL_DATA_IMPL=ICU_UTIL_DATA_STATIC\",\n        # src/regexp/regexp-compiler-tonode.cc uses an unsafe ICU method and\n        # access a character implicitly.\n        \"UNISTR_FROM_CHAR_EXPLICIT=\",\n    ],\n    deps = [\n        \":v8_libbase\",\n        \"//external:icu\",\n    ],\n)\n\nv8_binary(\n    name = \"torque\",\n    srcs = [\n        \"src/torque/torque.cc\",\n        \":torque_base_files\",\n    ],\n    copts = [\"-Wno-implicit-fallthrough\"] + select({\n        \"@v8//bazel/config:is_posix\": [\"-fexceptions\"],\n        \"//conditions:default\": [],\n    }),\n    features = [\"-use_header_modules\"],\n    icu_defines = [\"V8_INTL_SUPPORT\"],\n    linkopts = select({\n        \"@v8//bazel/config:is_android\": [\"-llog\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\"v8_libbase\"],\n)\n\nv8_binary(\n    name = \"mksnapshot\",\n    srcs = [\n        \":mksnapshot_files\",\n    ] + select({\n        \":is_not_v8_enable_turbofan\": [\n            # Turbofan is needed to generate builtins.\n            \":v8_compiler_files\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    copts = [\"-Wno-implicit-fallthrough\"],\n    icu_deps = [\":icu/v8_libshared\"],\n    icu_srcs = [\n        \":icu/generated_torque_initializers\",\n        \":icu/v8_initializers_files\",\n    ],\n    linkopts = select({\n        \"@v8//bazel/config:is_android\": [\"-llog\"],\n        \"//conditions:default\": [],\n    }),\n    noicu_deps = [\":v8_libshared_noicu\"],\n    noicu_srcs = [\n        \":noicu/generated_torque_initializers\",\n        \":noicu/v8_initializers_files\",\n    ],\n)\n\nv8_binary(\n    name = \"d8\",\n    srcs = [\":d8_files\"],\n    copts = [\"-Wno-implicit-fallthrough\"],\n    icu_deps = [\":icu/v8\"],\n    noicu_deps = [\":noicu/v8\"],\n)\n\n# This target forces torque to be compiled without pointer compression.\nv8_binary_non_pointer_compression(\n    name = \"noicu/torque_non_pointer_compression\",\n    binary = \"noicu/torque\",\n)\n\nv8_binary_non_pointer_compression(\n    name = \"icu/torque_non_pointer_compression\",\n    binary = \"icu/torque\",\n)\n\nalias(\n    name = \"v8ci\",\n    actual = \"noicu/v8\",\n)\n\n# =================================================\n# Tests\n# =================================================\n\nv8_build_config(\n    name = \"v8_build_config\",\n    arch = select({\n        \"@v8//bazel/config:v8_target_arm64\": \"arm64\",\n        \"@v8//bazel/config:v8_target_x64\": \"x64\",\n        \"//conditions:default\": \"x64\",\n    }),\n)\n\n# Runs mjsunit with d8.\npy_test(\n    name = \"noicu/mjsunit\",\n    size = \"medium\",\n    srcs = [\n        \"test/mjsunit/testcfg.py\",\n        \"tools/predictable_wrapper.py\",\n        \"tools/run-tests.py\",\n    ] + glob([\"tools/testrunner/**/*.py\"]),\n    args = [\n        \"--no-sorting\",\n        \"--nopresubmit\",\n        \"--variant=google3_noicu\",\n        \"--outdir noicu\",\n        \"--verbose\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_arm64\": [\n            \"--arch=arm64\",\n        ],\n        \"@v8//bazel/config:v8_target_x64\": [\n            \"--arch=x64\",\n        ],\n        \"//conditions:default\": [],\n    }) + [\n        \"mjsunit\",\n    ],\n    data = [\n        \"test\",\n        \":noicu/d8\",\n        \":noicu/v8_build_config\",\n        \"//testing/pybase\",\n    ] + glob([\"test/**\"]) + glob([\"tools/**/*.js\"]) + glob([\"tools/**/*.mjs\"]),\n    main = \"tools/run-tests.py\",\n    python_version = \"PY3\",\n    tags = [\n        # Disable sanitizers, as they don't work in general in V8.\n        \"nosan\",\n    ],\n)\n\npy_test(\n    name = \"icu/mjsunit\",\n    size = \"medium\",\n    srcs = [\n        \"test/mjsunit/testcfg.py\",\n        \"tools/predictable_wrapper.py\",\n        \"tools/run-tests.py\",\n    ] + glob([\"tools/testrunner/**/*.py\"]),\n    args = [\n        \"--no-sorting\",\n        \"--nopresubmit\",\n        \"--variant=google3_icu\",\n        \"--outdir icu\",\n        \"--verbose\",\n    ] + select({\n        \"@v8//bazel/config:v8_target_arm64\": [\n            \"--arch=arm64\",\n        ],\n        \"@v8//bazel/config:v8_target_x64\": [\n            \"--arch=x64\",\n        ],\n        \"//conditions:default\": [],\n    }) + [\n        \"mjsunit\",\n    ],\n    data = [\n        \"test\",\n        \":icu/d8\",\n        \":icu/v8_build_config\",\n        \"//testing/pybase\",\n    ] + glob([\"test/**\"]) + glob([\"tools/**/*.js\"]) + glob([\"tools/**/*.mjs\"]),\n    main = \"tools/run-tests.py\",\n    python_version = \"PY3\",\n    tags = [\n        # Disable sanitizers, as they don't work in general in V8.\n        \"nosan\",\n    ],\n)\n"
        },
        {
          "name": "BUILD.gn",
          "type": "blob",
          "size": 269.4853515625,
          "content": "# Copyright 2014 The Chromium Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\nimport(\"//build/config/android/config.gni\")\nimport(\"//build/config/arm.gni\")\nimport(\"//build/config/coverage/coverage.gni\")\nimport(\"//build/config/dcheck_always_on.gni\")\nimport(\"//build/config/host_byteorder.gni\")\nimport(\"//build/config/mips.gni\")\nimport(\"//build/config/riscv.gni\")\nimport(\"//build/config/sanitizers/sanitizers.gni\")\nimport(\"//build_overrides/build.gni\")\nimport(\"//third_party/icu/config.gni\")\n\nimport(\"gni/snapshot_toolchain.gni\")\nimport(\"gni/v8.gni\")\n\n# Specifies if the target build is a simulator build. Comparing target cpu\n# with v8 target cpu to not affect simulator builds for making cross-compile\n# snapshots.\ntarget_is_simulator = (target_cpu != v8_target_cpu && !v8_multi_arch_build) ||\n                      (current_cpu != v8_current_cpu && v8_multi_arch_build)\n\n# For faster Windows builds. See https://crbug.com/v8/8475.\nemit_builtins_as_inline_asm = is_win && is_clang\n\ndeclare_args() {\n  # Print to stdout on Android.\n  v8_android_log_stdout = false\n\n  # Dynamically set an additional dependency from v8/custom_deps.\n  v8_custom_deps = \"\"\n\n  # Sets -DV8_ENABLE_FUTURE.\n  v8_enable_future = false\n\n  # Sets -DENABLE_SYSTEM_INSTRUMENTATION. Enables OS-dependent event tracing\n  v8_enable_system_instrumentation = (is_win || is_mac) && !v8_use_perfetto\n\n  # Sets the GUID for the ETW provider\n  v8_etw_guid = \"\"\n\n  # Sets -DVERIFY_HEAP.\n  v8_enable_verify_heap = \"\"\n\n  # Sets -DVERIFY_PREDICTABLE\n  v8_enable_verify_predictable = false\n\n  # Enable compiler warnings when using V8_DEPRECATED apis.\n  v8_deprecation_warnings = true\n\n  # Enable compiler warnings when using V8_DEPRECATE_SOON apis.\n  v8_imminent_deprecation_warnings = true\n\n  # Embeds the given script into the snapshot.\n  v8_embed_script = \"\"\n\n  # Allows the embedder to add a custom suffix to the version string.\n  v8_embedder_string = \"\"\n\n  # Sets -DENABLE_DISASSEMBLER.\n  v8_enable_disassembler = \"\"\n\n  # Sets the number of internal fields on promise objects.\n  v8_promise_internal_field_count = 0\n\n  # Sets the number of internal fields on array buffer objects.\n  v8_array_buffer_internal_field_count = 0\n\n  # Sets the number of internal fields on array buffer view objects.\n  v8_array_buffer_view_internal_field_count = 0\n\n  # Sets -DENABLE_GDB_JIT_INTERFACE.\n  v8_enable_gdbjit = \"\"\n\n  # Sets -DENABLE_VTUNE_JIT_INTERFACE.\n  v8_enable_vtunejit = false\n\n  # Sets -DENABLE_VTUNE_TRACEMARK.\n  v8_enable_vtunetracemark = false\n\n  # Sets -DENABLE_HUGEPAGE\n  v8_enable_hugepage = false\n\n  # Sets -DV8_ENABLE_PRIVATE_MAPPING_FORK_OPTIMIZATION.\n  #\n  # This flag speeds up the performance of fork/execve on Linux systems for\n  # embedders which use it (like Node.js). It works by marking the pages that\n  # V8 allocates as MADV_DONTFORK. Without MADV_DONTFORK, the Linux kernel\n  # spends a long time manipulating page mappings on fork and exec which the\n  # child process doesn't generally need to access.\n  #\n  # See v8:7381 for more details.\n  v8_enable_private_mapping_fork_optimization = false\n\n  # Sets the default for v8_enable_local_handle_zapping and\n  # v8_enable_global_handle_zapping.\n  v8_enable_handle_zapping = is_asan || is_debug\n\n  # Sets -DENABLE_LOCAL_HANDLE_ZAPPING, which is more expensive than just\n  # the global handles.  By default it is enabled if v8_enable_handle_zapping\n  # is enabled.\n  v8_enable_local_handle_zapping = \"\"\n\n  # Sets -DENABLE_GLOBAL_HANDLE_ZAPPING.  By default it is enabled if\n  # v8_enable_handle_zapping is enabled.\n  v8_enable_global_handle_zapping = \"\"\n\n  # Enable slow dchecks.\n  v8_enable_slow_dchecks = false\n\n  # Enable fast mksnapshot runs.\n  v8_enable_fast_mksnapshot = false\n\n  # Enable using multiple threads to build builtins in mksnapshot.\n  v8_enable_concurrent_mksnapshot = true\n\n  # Optimize code for Torque executable, even during a debug build.\n  v8_enable_fast_torque = \"\"\n\n  # Enable the registration of unwinding info for Windows x64 and ARM64.\n  v8_win64_unwinding_info = true\n\n  # Enable code comments for builtins in the snapshot (impacts performance).\n  # This also enables v8_code_comments.\n  v8_enable_snapshot_code_comments = false\n\n  # Allow runtime-enabled code comments (with --code-comments). Enabled by\n  # default in debug builds.\n  # Sets -DV8_CODE_COMMENTS\n  v8_code_comments = \"\"\n\n  # Allow runtime-enabled debug code (with --debug-code). Enabled by default in\n  # debug builds.\n  # Sets -DV8_ENABLE_DEBUG_CODE\n  v8_enable_debug_code = \"\"\n\n  # Enable native counters from the snapshot (impacts performance, sets\n  # -DV8_SNAPSHOT_NATIVE_CODE_COUNTERS).\n  # This option will generate extra code in the snapshot to increment counters,\n  # as per the --native-code-counters flag.\n  v8_enable_snapshot_native_code_counters = \"\"\n\n  # Use pre-generated static root pointer values from static-roots.h.\n  v8_enable_static_roots = \"\"\n\n  # Mode used by gen-static-roots.py to have a heap layout which is identical\n  # to when v8_enable_static_roots is enabled.\n  v8_enable_static_roots_generation = false\n\n  # Enable code-generation-time checking of types in the CodeStubAssembler.\n  v8_enable_verify_csa = false\n\n  # Sets -DOBJECT_PRINT.\n  v8_enable_object_print = \"\"\n\n  # Sets -DV8_TRACE_MAPS.\n  v8_enable_trace_maps = \"\"\n\n  # Sets -DV8_ENABLE_CHECKS.\n  v8_enable_v8_checks = \"\"\n\n  # Sets -DV8_ENABLE_MEMORY_ACCOUNTING_CHECKS\n  v8_enable_memory_accounting_checks = \"\"\n\n  # Sets -DV8_TRACE_UNOPTIMIZED.\n  v8_enable_trace_unoptimized = \"\"\n  v8_enable_trace_ignition = false\n  v8_enable_trace_baseline_exec = false\n\n  # Sets -DV8_TRACE_FEEDBACK_UPDATES.\n  v8_enable_trace_feedback_updates = false\n\n  # Sets -DV8_ATOMIC_OBJECT_FIELD_WRITES and turns all field write operations\n  # into relaxed atomic operations.\n  v8_enable_atomic_object_field_writes = \"\"\n\n  # Controls the default value of v8_enable_concurrent_marking_state. See the\n  # default setting code below.\n  v8_enable_concurrent_marking = true\n\n  # Sets -DV8_IGNITION_DISPATCH_COUNTING.\n  # Enables counting frequencies of bytecode dispatches. After building in this\n  # configuration, subsequent runs of d8 can output frequencies for each pair\n  # of (current, next) bytecode instructions executed if you specify\n  # --trace-ignition-dispatches-output-file, or can generate a JS object with\n  # those frequencies if you run with --expose-ignition-statistics and call the\n  # extension function getIgnitionDispatchCounters().\n  v8_enable_ignition_dispatch_counting = false\n\n  # Runs mksnapshot with --turbo-profiling. After building in this\n  # configuration, any subsequent run of d8 will output information about usage\n  # of basic blocks in builtins.\n  v8_enable_builtins_profiling = false\n\n  # Runs mksnapshot with --turbo-profiling-verbose. After building in this\n  # configuration, any subsequent run of d8 will output information about usage\n  # of basic blocks in builtins, including the schedule and disassembly of all\n  # used builtins.\n  v8_enable_builtins_profiling_verbose = false\n\n  # This build flag is used to input a builtin pgo file containing raw\n  # execution counts (as opposed to branch hints), which are embedded into\n  # the `--trace-turbo` .json file from `mksnapshot`.\n  v8_log_builtins_block_count_input = \"\"\n\n  # This build flag is used to control whether reorder builtins acoording to\n  # the call graph with C3 algorithm based builtin PGO profiling.\n  v8_enable_builtins_reordering = true\n\n  # Provides the given V8 log file as an input to mksnapshot, where it can be\n  # used for profile-guided optimization of builtins.\n  #\n  # To do profile-guided optimizations of builtins:\n  # 1. Build with v8_enable_builtins_profiling = true\n  # 2. Run your chosen workload with the --turbo-profiling-output flag.\n  #    For Chrome, the invocation might look like this:\n  #      chrome --no-sandbox --disable-extensions\n  #        --js-flags=\"--turbo-profiling-output=v8.builtins.pgo\"\n  #        \"http://localhost/test-suite\"\n  # 3. Run tools/builtins-pgo/get_hints.py to produce the branch hints,\n  #    selecting min_count and threshold_ratio as you wish.\n  # 4. Optionally repeat steps 2-3 for additional workloads, and use\n  #    tools/builtins-pgo/combine_hints.py to combine the hints produced in\n  #    step 3 into a single file.\n  # 5. Build again with v8_builtins_profiling_log_file set to the file created\n  #    in step 3 or 4.\n  v8_builtins_profiling_log_file = \"default\"\n\n  # Enables various testing features.\n  v8_enable_test_features = \"\"\n\n  # Enable short builtins call instruction sequences by un-embedding builtins.\n  # Sets -DV8_SHORT_BUILTIN_CALLS\n  v8_enable_short_builtin_calls = \"\"\n\n  # Enable support for external code range relative to the pointer compression\n  # cage.\n  # Sets -DV8_EXTERNAL_CODE_SPACE\n  v8_enable_external_code_space = \"\"\n\n  # With post mortem support enabled, metadata is embedded into libv8 that\n  # describes various parameters of the VM for use by debuggers. See\n  # tools/gen-postmortem-metadata.py for details.\n  v8_postmortem_support = false\n\n  # Use Siphash as added protection against hash flooding attacks.\n  v8_use_siphash = false\n\n  # Switches off inlining in V8.\n  v8_no_inline = false\n\n  # Override OS page size when generating snapshot\n  v8_os_page_size = \"0\"\n\n  # Similar to vfp but on MIPS.\n  v8_can_use_fpu_instructions = true\n\n  # Similar to the ARM hard float ABI but on MIPS.\n  v8_use_mips_abi_hardfloat = true\n\n  # Controls the threshold for on-heap/off-heap Typed Arrays.\n  v8_typed_array_max_size_in_heap = 64\n\n  v8_enable_gdbjit = ((v8_current_cpu == \"x86\" || v8_current_cpu == \"x64\") &&\n                      (is_linux || is_chromeos || is_mac)) ||\n                     (v8_current_cpu == \"ppc64\" && (is_linux || is_chromeos))\n\n  # Check that each header can be included in isolation (requires also\n  # setting the \"check_v8_header_includes\" gclient variable to run a\n  # specific hook).\n  v8_check_header_includes = false\n\n  # Enable lazy source positions by default.\n  v8_enable_lazy_source_positions = true\n\n  # Disable write barriers when GCs are non-incremental and\n  # heap has single generation.\n  v8_disable_write_barriers = false\n\n  # Ensure that write barriers are always used.\n  # Useful for debugging purposes.\n  v8_enable_unconditional_write_barriers = false\n\n  # Redirect allocation in young generation so that there will be\n  # only one single generation.\n  v8_enable_single_generation = \"\"\n\n  # Use token threaded dispatch for the regular expression interpreter.\n  # Use switch-based dispatch if this is false\n  v8_enable_regexp_interpreter_threaded_dispatch = true\n\n  # Enforce equality of builtins hashes from compatible architectures.\n  v8_verify_builtins_compatibility = false\n\n  # Check mksnapshot determinism by running it multiple times.\n  v8_verify_deterministic_mksnapshot = false\n\n  # Enable additional targets necessary for verification of torque\n  # file generation\n  v8_verify_torque_generation_invariance = false\n\n  # Generate comments describing the Torque intermediate representation.\n  v8_annotate_torque_ir = false\n\n  # Enable snapshot compression (enabled by default for desktop) devices.\n  v8_enable_snapshot_compression =\n      target_os == \"android\" || target_os == \"chromeos\" ||\n      target_os == \"fuchsia\"\n\n  # Enable control-flow integrity features, such as pointer authentication for\n  # ARM64. Enable it by default for simulator builds and when native code\n  # supports it as well.\n  v8_control_flow_integrity =\n      v8_current_cpu == \"arm64\" &&\n      (target_is_simulator || arm_control_flow_integrity != \"none\")\n\n  # Enable heap reservation of size 4GB. Only possible for 64bit archs.\n  cppgc_enable_caged_heap =\n      v8_current_cpu == \"x64\" || v8_current_cpu == \"arm64\" ||\n      v8_current_cpu == \"loong64\" || v8_current_cpu == \"riscv64\"\n\n  # Enables additional heap verification phases and checks.\n  cppgc_enable_verify_heap = \"\"\n\n  # Enable allocations during prefinalizer invocations.\n  cppgc_allow_allocations_in_prefinalizers = false\n\n  # Enable V8 zone compression experimental feature.\n  # Sets -DV8_COMPRESS_ZONES.\n  v8_enable_zone_compression = \"\"\n\n  # Enable the V8 sandbox.\n  # Sets -DV8_ENABLE_SANDBOX.\n  v8_enable_sandbox = \"\"\n\n  # Enable leaptiering\n  v8_enable_leaptiering = \"\"\n\n  # Enable the memory corruption API. Useful for testing the sandbox.\n  # The memory corruption API is only exposed to JavaScript if sandbox testing\n  # mode is enabled at runtime, for example via --sandbox-fuzzing.\n  # WARNING This will enable builtins that (by design) cause memory corruption.\n  # Sets -DV8_ENABLE_MEMORY_CORRUPTION_API\n  v8_enable_memory_corruption_api = false\n\n  # Experimental feature for collecting per-class zone memory stats.\n  # Requires use_rtti = true\n  v8_enable_precise_zone_stats = false\n\n  # Experimental feature that uses SwissNameDictionary instead of NameDictionary\n  # as the backing store for all dictionary mode objects.\n  v8_enable_swiss_name_dictionary = false\n\n  # If enabled then macro definitions that are used in externally visible\n  # header files are placed in a separate header file v8-gn.h.\n  v8_generate_external_defines_header = false\n\n  # Experimental feature for tracking constness of properties in non-global\n  # dictionaries. Enabling this also always keeps prototypes in dict mode,\n  # meaning that they are not switched to fast mode.\n  # Sets -DV8_DICT_PROPERTY_CONST_TRACKING\n  v8_dict_property_const_tracking = false\n\n  # Enable map packing & unpacking (sets -DV8_MAP_PACKING).\n  v8_enable_map_packing = false\n\n  # Allow for JS promise hooks (instead of just C++).\n  v8_enable_javascript_promise_hooks = false\n\n  # Allow embedder data to be saved on continuations. Used to support\n  # TaskAttribution and `scheduler.yield()`.\n  # The flag enables disabling the feature, to test this data's overhead.\n  v8_enable_continuation_preserved_embedder_data = true\n\n  # Enable allocation folding globally (sets -DV8_ALLOCATION_FOLDING).\n  # When it's disabled, the --turbo-allocation-folding runtime flag will be ignored.\n  v8_enable_allocation_folding = true\n\n  # Enable runtime verification of heap snapshots produced for devtools.\n  v8_enable_heap_snapshot_verify = \"\"\n\n  # Enable global allocation site tracking.\n  v8_allocation_site_tracking = true\n\n  # TODO(cbruni, v8:12302): Remove once API is migrated\n  # Enable legacy mode for ScriptOrModule's lifetime. By default it's a\n  # temporary object, if enabled it will be kept alive by the parent Script.\n  # This is only used by nodejs.\n  v8_scriptormodule_legacy_lifetime = false\n\n  # WebAssembly interpreter (DrumBrake)  build flag.\n  v8_enable_drumbrake = false\n\n  # Enable Wasm interpreter tracing.\n  v8_enable_drumbrake_tracing = false\n\n  # On non-Desktop platforms, enable explicit bounds checks in the Wasm\n  # interpreter, where the bounds checking is done in the instruction handler,\n  # not using an unhandled exception filter (which also doesn't work with\n  # Win-ASAN).\n  # Also enables explicit bounds checks on component builds in platforms other\n  # than Windows because of a problem with function name mangling for vectorcall\n  # ABI on ELF (The vectorcall calling convention requires a mangling that\n  # includes @@, but on ELF an @ indicates that the part after it is the version\n  # of the symbol, with @@ indicating the default symbol version to link against\n  # when none is specified by the caller and this causes linker errors). As a\n  # workaround, we need to disable the vectorcall calling convention for\n  # component builds on Linux and Mac, which means that we cannot use DrumBrake\n  # builtins for Load/Store instruction handlers, because of the different\n  # calling convention.\n  # Windows component builds are also enabled to support cross-compilation.\n  v8_drumbrake_bounds_checks =\n      (is_win && (is_asan || is_ubsan || is_msan || is_tsan)) ||\n      !(is_win || is_linux || is_mac) || v8_current_cpu != \"x64\" || !is_clang ||\n      is_component_build\n\n  # Enables pointer compression for 8GB heaps.\n  # Sets -DV8_COMPRESS_POINTERS_8GB.\n  v8_enable_pointer_compression_8gb = \"\"\n\n  # Compile V8 using zlib as dependency.\n  # Sets -DV8_USE_ZLIB\n  v8_use_zlib = true\n\n  # Make ValueDeserializer crash if the data to deserialize is invalid.\n  v8_value_deserializer_hard_fail = false\n\n  # Enable jitless mode, including compile-time optimizations. Note that even\n  # when this is set to 'false', one can run V8 in jitless mode at runtime by\n  # passing the `--jitless` flag; but then you miss out on compile-time\n  # optimizations.\n  v8_jitless = v8_enable_lite_mode\n\n  # Enable Sparkplug\n  # Sets -DV8_ENABLE_SPARKPLUG.\n  v8_enable_sparkplug = \"\"\n\n  # Enable Maglev's graph printer.\n  # Sets -DV8_ENABLE_MAGLEV_GRAPH_PRINTER.\n  v8_enable_maglev_graph_printer = !build_with_chromium\n\n  # Enable slow tracing, e.g., tracing on every instruction or Turbofan node.\n  # Sets -DV8_ENABLE_SLOW_TRACING.\n  v8_enable_slow_tracing = is_debug\n\n  # Enable jump table switch for built-in.\n  v8_enable_builtin_jump_table_switch = v8_current_cpu == \"x64\"\n\n  v8_shortcut_strings_in_minor_ms = false\n\n  # Whether custom embedder snapshots may extend (= allocate new objects in)\n  # ReadOnlySpace.\n  v8_enable_extensible_ro_snapshot = true\n\n  # Enable Turboshaft CSA pipeline.\n  v8_enable_turboshaft_csa = false\n\n  # Black allocate objects on separate pages.\n  v8_enable_black_allocated_pages = \"\"\n\n  # Use sticky mark-bits for separating object generations.\n  v8_enable_sticky_mark_bits = false\n\n  # Use the experimental TSA-based definition for some builtins.\n  v8_enable_experimental_tsa_builtins = false\n\n  v8_dcheck_always_on = dcheck_always_on\n\n  # Remote builds require an explicit dependency on icudat, but\n  # this breaks locally building V8 with ICU support when the file\n  # isn't present, which some embedders rely on. This option controls\n  # the explicit dependency and allows the build to complete.\n  v8_depend_on_icu_data_file = icu_use_data_file\n\n  # Some fuzzers depend on fuzzing functionality linked into the v8 library.\n  # For binary size reasons this functionality is not always available.\n  v8_wasm_random_fuzzers = \"\"\n}\n\n# Derived defaults.\nif (cppgc_enable_verify_heap == \"\") {\n  cppgc_enable_verify_heap = v8_enable_debugging_features || v8_dcheck_always_on\n}\nif (v8_enable_verify_heap == \"\") {\n  v8_enable_verify_heap = v8_enable_debugging_features\n}\nif (v8_enable_object_print == \"\") {\n  v8_enable_object_print = v8_enable_debugging_features\n}\nif (v8_enable_disassembler == \"\") {\n  v8_enable_disassembler = v8_enable_debugging_features\n}\nif (v8_enable_trace_maps == \"\") {\n  v8_enable_trace_maps = v8_enable_debugging_features\n}\nif (v8_enable_test_features == \"\") {\n  v8_enable_test_features = v8_enable_debugging_features || v8_dcheck_always_on\n}\nif (v8_enable_v8_checks == \"\") {\n  v8_enable_v8_checks = v8_enable_debugging_features\n}\nif (v8_enable_memory_accounting_checks == \"\") {\n  v8_enable_memory_accounting_checks =\n      v8_enable_debugging_features || v8_dcheck_always_on\n}\nif (v8_enable_heap_snapshot_verify == \"\") {\n  v8_enable_heap_snapshot_verify =\n      v8_enable_debugging_features || v8_dcheck_always_on\n}\nif (v8_enable_snapshot_code_comments) {\n  assert(v8_code_comments == true || v8_code_comments == \"\",\n         \"v8_enable_snapshot_code_comments conflicts with v8_code_comments.\")\n  v8_code_comments = true\n} else if (v8_code_comments == \"\") {\n  v8_code_comments = v8_enable_debugging_features\n}\nif (v8_enable_debug_code == \"\") {\n  v8_enable_debug_code = v8_enable_debugging_features || v8_dcheck_always_on\n}\nif (v8_enable_snapshot_native_code_counters == \"\") {\n  v8_enable_snapshot_native_code_counters = v8_enable_debugging_features\n}\n\nif (v8_enable_drumbrake && v8_enable_webassembly) {\n  assert(\n      is_drumbrake_supported,\n      \"DrumBrake is only available on x64, arm64 on Windows, Linux and MacOS.\")\n}\nif (v8_enable_black_allocated_pages == \"\") {\n  v8_enable_black_allocated_pages = !v8_enable_sticky_mark_bits\n}\n\n# Toggle pointer compression for correctness fuzzing when building the\n# clang_x64_pointer_compression toolchain. We'll correctness-compare the\n# default build with the clang_x64_pointer_compression build.\nif (v8_multi_arch_build &&\n    rebase_path(get_label_info(\":d8\", \"root_out_dir\"), root_build_dir) ==\n    \"clang_x64_pointer_compression\") {\n  v8_enable_pointer_compression = !v8_enable_pointer_compression\n}\n\n# Ensure the sandbox is on/off in the same way as pointer compression for\n# correctness fuzzing builds.\nif (v8_multi_arch_build) {\n  v8_enable_sandbox = v8_enable_pointer_compression\n}\nif (v8_enable_pointer_compression_shared_cage == \"\") {\n  v8_enable_pointer_compression_shared_cage = v8_enable_pointer_compression\n}\nif (v8_enable_pointer_compression_8gb == \"\") {\n  v8_enable_pointer_compression_8gb = false\n}\nif (v8_enable_local_handle_zapping == \"\") {\n  v8_enable_local_handle_zapping = v8_enable_handle_zapping\n}\nif (v8_enable_global_handle_zapping == \"\") {\n  v8_enable_global_handle_zapping = v8_enable_handle_zapping\n}\nif (v8_enable_fast_torque == \"\") {\n  v8_enable_fast_torque = v8_enable_fast_mksnapshot\n}\nif (v8_enable_concurrent_mksnapshot == \"\") {\n  v8_enable_concurrent_mksnapshot = v8_enable_fast_mksnapshot\n}\nif (v8_enable_zone_compression == \"\") {\n  v8_enable_zone_compression = false\n}\nif (v8_enable_short_builtin_calls == \"\") {\n  v8_enable_short_builtin_calls =\n      v8_current_cpu == \"x64\" || v8_current_cpu == \"arm64\" ||\n      v8_current_cpu == \"loong64\" || v8_current_cpu == \"riscv64\"\n}\nif (v8_enable_external_code_space == \"\") {\n  v8_enable_external_code_space =\n      v8_enable_pointer_compression &&\n      v8_enable_pointer_compression_shared_cage &&\n      (v8_current_cpu == \"x64\" || v8_current_cpu == \"arm64\" ||\n       v8_current_cpu == \"loong64\")\n}\nif (v8_enable_sparkplug == \"\") {\n  v8_enable_sparkplug = !v8_jitless\n}\nif (v8_enable_maglev == \"\") {\n  v8_enable_maglev = v8_enable_turbofan &&\n                     (v8_current_cpu == \"arm\" || v8_current_cpu == \"x64\" ||\n                      v8_current_cpu == \"arm64\" || v8_current_cpu == \"s390x\" ||\n                      v8_current_cpu == \"riscv64\")\n}\nassert(v8_enable_turbofan || !v8_enable_maglev,\n       \"Maglev is not available when Turbofan is disabled.\")\n\nassert(!v8_jitless || (!v8_enable_sparkplug && !v8_enable_maglev &&\n                           !v8_enable_turbofan && !v8_enable_webassembly),\n       \"Sparkplug, Maglev, Turbofan and Wasm are not available in jitless mode\")\n\nif (v8_enable_single_generation == \"\") {\n  v8_enable_single_generation = v8_disable_write_barriers\n}\nif (v8_enable_atomic_object_field_writes == \"\") {\n  v8_enable_atomic_object_field_writes = v8_enable_concurrent_marking\n}\nif (v8_enable_single_generation) {\n  v8_allocation_site_tracking = false\n}\nassert(!v8_enable_concurrent_marking || v8_enable_atomic_object_field_writes,\n       \"Concurrent marking requires atomic object field writes.\")\nif (v8_enable_trace_unoptimized == \"\") {\n  v8_enable_trace_unoptimized =\n      v8_enable_trace_ignition || v8_enable_trace_baseline_exec\n}\nassert(!v8_enable_trace_ignition || v8_enable_trace_unoptimized,\n       \"Ignition tracing requires unoptimized tracing to be enabled.\")\nassert(!v8_enable_trace_baseline_exec || v8_enable_trace_unoptimized,\n       \"Baseline tracing requires unoptimized tracing to be enabled.\")\nassert(\n    v8_enable_debugging_features == true || v8_dcheck_always_on ||\n        !v8_enable_slow_dchecks,\n    \"v8_enable_slow_dchecks requires v8_enable_debugging_features or dcheck_always_on.\")\n\nif (v8_enable_short_builtin_calls &&\n    (!v8_enable_pointer_compression && v8_current_cpu != \"x64\")) {\n  # Disable short calls when pointer compression is not enabled, except x64,\n  # where short builtin calls can still be enabled if the code range is\n  # guaranteed to be close enough to embedded builtins.\n  v8_enable_short_builtin_calls = false\n}\n\nif (v8_enable_sandbox == \"\") {\n  # TODO(saelo, v8:11880) remove dependency on v8_enable_external_code_space\n  # once that is enabled everywhere by default.\n  # TODO(chromium:1325784) the sandbox is not currently supported in Chromium\n  # on Fuchsia.\n  v8_enable_sandbox = v8_enable_pointer_compression_shared_cage &&\n                      v8_enable_external_code_space && target_os != \"fuchsia\"\n}\nif (v8_enable_leaptiering == \"\") {\n  v8_enable_leaptiering = v8_enable_sandbox || v8_current_cpu == \"x64\" ||\n                          v8_current_cpu == \"arm64\" ||\n                          v8_current_cpu == \"x86\" || v8_current_cpu == \"arm\"\n}\n\nif (v8_enable_static_roots == \"\") {\n  # Static roots are only valid for builds with pointer compression and a\n  # shared read-only heap.\n  # TODO(olivf, v8:13466) Some configurations could be supported if we\n  # introduce different static root files for different build configurations:\n  # Non-wasm and non-i18n builds have fewer read only roots. Configurations\n  # without external code space allocate read only roots at a further\n  # location relative to the cage base.\n  v8_enable_static_roots =\n      v8_enable_pointer_compression && v8_enable_external_code_space &&\n      v8_enable_webassembly && v8_enable_i18n_support\n}\n\nassert(!v8_enable_static_roots ||\n           (v8_enable_pointer_compression && v8_enable_external_code_space &&\n                v8_enable_webassembly && v8_enable_i18n_support),\n       \"Trying to enable static roots in a configuration that is not supported\")\n\nassert(\n    !(v8_enable_static_roots && v8_enable_static_roots_generation),\n    \"Static root values must be generated in a build that does not rely on static roots itself\")\n\nif (v8_builtins_profiling_log_file == \"default\") {\n  v8_builtins_profiling_log_file = \"\"\n\n  # The existing profile can be used only when\n  # * `v8_enable_builtins_optimization` - this switch enables builtins PGO,\n  # * `!v8_enable_builtins_profiling` - don't use the profiles when generating\n  #    a new one,\n  # * `!is_debug && !dcheck_always_on` - these modes add more checks to\n  #   the builtins control flow which makes the builtins code different,\n  # * `v8_enable_pointer_compression` - it changes the objects layouts,\n  # * `v8_enable_sandbox && v8_enable_external_code_space` because they affect\n  #   the way how external pointer values are accessed,\n  # * `v8_enable_webassembly` because it changes the set of opcodes which\n  #   affects graphs hashes.\n  if (v8_enable_builtins_optimization && !v8_enable_builtins_profiling &&\n      !is_debug && !v8_dcheck_always_on && v8_enable_webassembly) {\n    # This is about function arguments evaluation order on the machine building\n    # mksnapshot, which makes node IDs not predictable for subgraphs like\n    # Op1(Op2(), Op3()) and as a result different graph hashes.\n    # Clang uses left-to-right order everywhere except Windows, otherwise the\n    # order is right-to-left.\n    # TODO(crbug.com/v8/13647): Remove once this issue is fixed in CSA.\n    if (!is_clang || host_os == \"win\") {\n      pgo_profile_suffix = \"-rl\"\n    } else {\n      pgo_profile_suffix = \"\"\n    }\n    if ((v8_current_cpu == \"x64\" || v8_current_cpu == \"arm64\") &&\n        v8_enable_pointer_compression && v8_enable_external_code_space &&\n        v8_enable_sandbox) {\n      # Note, currently x64 profile can be applied to arm64 but not the other\n      # way round.\n      v8_builtins_profiling_log_file =\n          \"tools/builtins-pgo/profiles/x64\" + pgo_profile_suffix + \".profile\"\n    } else if (v8_current_cpu == \"x86\" || v8_current_cpu == \"arm\") {\n      # Note, x86 profile can be applied to arm but not the other way round.\n      v8_builtins_profiling_log_file =\n          \"tools/builtins-pgo/profiles/x86\" + pgo_profile_suffix + \".profile\"\n    }\n  }\n}\n\nif (v8_enable_webassembly && !target_is_simulator && v8_current_cpu == \"x64\") {\n  v8_enable_wasm_simd256_revec = true\n}\n\nassert(!v8_disable_write_barriers || v8_enable_single_generation,\n       \"Disabling write barriers works only with single generation\")\n\nassert(v8_current_cpu == \"arm64\" || !v8_control_flow_integrity,\n       \"Control-flow integrity is only supported on arm64\")\n\nassert(!v8_enable_map_packing || !v8_enable_pointer_compression,\n       \"Map packing does not support pointer compression\")\n\nassert(!v8_enable_map_packing || v8_current_cpu == \"x64\",\n       \"Map packing is only supported on x64\")\n\nassert(!v8_enable_external_code_space || v8_enable_pointer_compression,\n       \"External code space feature requires pointer compression\")\n\nassert(!v8_enable_pointer_compression_8gb || v8_enable_pointer_compression,\n       \"Pointer compression for 8GB cages requires pointer compression\")\n\nassert(!v8_enable_sandbox || v8_enable_external_code_space,\n       \"The sandbox requires the external code space\")\n\nassert(v8_enable_leaptiering || !v8_enable_sandbox,\n       \"the sandbox requires leaptiering to be enabled\")\n\nassert(!v8_enable_memory_corruption_api || v8_enable_sandbox,\n       \"The Memory Corruption API requires the sandbox\")\n\nassert(\n    !v8_enable_pointer_compression_shared_cage || v8_enable_pointer_compression,\n    \"Can't share a pointer compression cage if pointers aren't compressed\")\n\nassert(\n    !v8_enable_pointer_compression_shared_cage || v8_current_cpu == \"x64\" ||\n        v8_current_cpu == \"arm64\" || v8_current_cpu == \"riscv64\" ||\n        v8_current_cpu == \"ppc64\" || v8_current_cpu == \"s390x\" ||\n        v8_current_cpu == \"loong64\",\n    \"Sharing a pointer compression cage is only supported on x64, arm64, ppc64, s390x, riscv64 and loong64\")\n\nassert(!v8_enable_unconditional_write_barriers || !v8_disable_write_barriers,\n       \"Write barriers can't be both enabled and disabled\")\n\nassert(!cppgc_enable_caged_heap || v8_current_cpu == \"x64\" ||\n           v8_current_cpu == \"arm64\" || v8_current_cpu == \"loong64\" ||\n           v8_current_cpu == \"riscv64\",\n       \"CppGC caged heap requires 64bit platforms\")\n\nassert(!cppgc_enable_young_generation || cppgc_enable_caged_heap,\n       \"Young generation in CppGC requires caged heap\")\n\nassert(!cppgc_enable_pointer_compression || cppgc_enable_caged_heap,\n       \"Pointer compression in CppGC requires caged heap\")\n\nif (v8_enable_single_generation == true) {\n  assert(\n      v8_enable_unconditional_write_barriers || v8_disable_write_barriers,\n      \"Requires unconditional write barriers or none (which disables incremental marking)\")\n}\n\nassert(!v8_enable_snapshot_compression || v8_use_zlib,\n       \"Snapshot compression requires zlib\")\n\nassert(!v8_enable_cet_shadow_stack ||\n           (v8_target_cpu == \"x64\" && target_os == \"win\"),\n       \"CET shadow stack is supported only on x64 Windows\")\n\nif (v8_enable_sticky_mark_bits) {\n  # To support sticky mark bits, pretenured allocations must be allocated from\n  # a separate free-list and the atomic pause (or the sweeper) must fix up the\n  # mark bits.\n  assert(!v8_enable_black_allocated_pages,\n         \"Black allocated pages are not yet supported with sticky mark bits\")\n}\n\nif (v8_expose_public_symbols == \"\") {\n  v8_expose_public_symbols = v8_expose_symbols\n}\n\n# Some fuzzers depend on fuzzing functionality linked into the v8 library.\n# For binary size reasons this functionality is not available for official\n# builds, therefore these fuzzers do not function there and should be skipped\n# instead.\nif (v8_wasm_random_fuzzers == \"\") {\n  v8_wasm_random_fuzzers = !is_official_build\n}\n\nv8_random_seed = \"314159265\"\nv8_toolset_for_shell = \"host\"\n\n###############################################################################\n# Configurations\n#\n\nconfig(\"internal_config_base\") {\n  # Only targets in this file and its subdirs can depend on this.\n  visibility = [ \"./*\" ]\n\n  configs = [ \":v8_tracing_config\" ]\n\n  include_dirs = [\n    \".\",\n    \"include\",\n    \"$target_gen_dir\",\n  ]\n}\n\nconfig(\"internal_config\") {\n  defines = []\n\n  # Only targets in this file and its subdirs can depend on this.\n  visibility = [ \"./*\" ]\n\n  configs = [\n    \"//build/config/compiler:wexit_time_destructors\",\n    \":internal_config_base\",\n    \":v8_header_features\",\n    \":cppgc_header_features\",\n  ]\n\n  if (is_component_build) {\n    defines += [ \"BUILDING_V8_SHARED_PRIVATE\" ]\n  } else if (v8_expose_public_symbols) {\n    defines += [ \"BUILDING_V8_SHARED\" ]\n  }\n\n  if (v8_current_cpu == \"riscv64\" || v8_current_cpu == \"riscv32\") {\n    if (!is_clang) {\n      libs = [ \"atomic\" ]\n    }\n  }\n}\n\n# Should be applied to all targets that write trace events.\nconfig(\"v8_tracing_config\") {\n  if (v8_use_perfetto) {\n    include_dirs = [\n      \"//third_party/perfetto/include\",\n      \"$root_gen_dir/third_party/perfetto\",\n      \"$root_gen_dir/third_party/perfetto/build_config\",\n    ]\n  }\n}\n\n# This config should be applied to code using the libplatform.\nconfig(\"libplatform_config\") {\n  include_dirs = [ \"include\" ]\n  if (is_component_build) {\n    defines = [ \"USING_V8_PLATFORM_SHARED\" ]\n  }\n}\n\n# This config should be applied to code using the libbase.\nconfig(\"libbase_config\") {\n  if (is_component_build) {\n    defines = [ \"USING_V8_BASE_SHARED\" ]\n  }\n  libs = []\n  if (is_android && current_toolchain != host_toolchain) {\n    libs += [ \"log\" ]\n  }\n}\n\nconfig(\"zoslib_config\") {\n  if (current_os == \"zos\") {\n    configs = [ \"//third_party/zoslib:zoslib_config\" ]\n  }\n}\n\n# Standalone cppgc cannot be built within chrome or with perfetto.\nassert(!cppgc_is_standalone || !build_with_chromium)\nassert(!cppgc_is_standalone || !v8_use_perfetto)\n\n# This config should be applied to code using the cppgc_base.\nconfig(\"cppgc_base_config\") {\n  defines = []\n  if (cppgc_is_standalone) {\n    defines += [ \"CPPGC_IS_STANDALONE\" ]\n  }\n}\n\n# This config is only applied to v8_headers and is the basis for external_config\n# but without setting the USING_V8_SHARED define, which means v8_headers can be\n# used inside v8 itself.\nconfig(\"headers_config\") {\n  defines = []\n  configs = [\n    \":v8_header_features\",\n    \":cppgc_header_features\",\n  ]\n  include_dirs = [ \"include\" ]\n}\n\n# This config should only be applied to code using V8 and not any V8 code\n# itself.\nconfig(\"external_config\") {\n  configs = [ \":headers_config\" ]\n  defines = []\n  if (is_component_build) {\n    defines += [\n      \"USING_V8_SHARED\",\n      \"USING_V8_SHARED_PRIVATE\",\n    ]\n  }\n\n  if (current_cpu == \"riscv64\" || current_cpu == \"riscv32\") {\n    if (!is_clang) {\n      libs = [ \"atomic\" ]\n    }\n  }\n}\n\n# This config should only be applied to code that needs to be explicitly\n# aware of whether we are using startup data or not.\nconfig(\"external_startup_data\") {\n  if (v8_use_external_startup_data) {\n    defines = [ \"V8_USE_EXTERNAL_STARTUP_DATA\" ]\n  }\n}\n\n# List of defines that can appear in externally visible header files and that\n# are controlled by args.gn.\n# Make sure the |v8_generate_features_json| action is also updated when adding\n# or removing defines below.\nexternal_v8_defines = [\n  \"V8_ARRAY_BUFFER_INTERNAL_FIELD_COUNT=${v8_array_buffer_internal_field_count}\",\n  \"V8_ARRAY_BUFFER_VIEW_INTERNAL_FIELD_COUNT=${v8_array_buffer_view_internal_field_count}\",\n  \"V8_PROMISE_INTERNAL_FIELD_COUNT=${v8_promise_internal_field_count}\",\n  \"V8_ENABLE_CHECKS\",\n  \"V8_ENABLE_MEMORY_ACCOUNTING_CHECKS\",\n  \"V8_COMPRESS_POINTERS\",\n  \"V8_COMPRESS_POINTERS_IN_SHARED_CAGE\",\n  \"V8_31BIT_SMIS_ON_64BIT_ARCH\",\n  \"V8_COMPRESS_ZONES\",\n  \"V8_ENABLE_SANDBOX\",\n  \"V8_DEPRECATION_WARNINGS\",\n  \"V8_IMMINENT_DEPRECATION_WARNINGS\",\n  \"V8_USE_PERFETTO\",\n  \"V8_MAP_PACKING\",\n  \"V8_IS_TSAN\",\n  \"V8_ENABLE_CONSERVATIVE_STACK_SCANNING\",\n  \"V8_ENABLE_DIRECT_HANDLE\",\n  \"V8_MINORMS_STRING_SHORTCUTTING\",\n  \"V8_HAVE_TARGET_OS\",\n  \"V8_TARGET_OS_ANDROID\",\n  \"V8_TARGET_OS_FUCHSIA\",\n  \"V8_TARGET_OS_IOS\",\n  \"V8_TARGET_OS_LINUX\",\n  \"V8_TARGET_OS_MACOS\",\n  \"V8_TARGET_OS_WIN\",\n  \"V8_TARGET_OS_CHROMEOS\",\n]\n\nenabled_external_v8_defines = [\n  \"V8_ARRAY_BUFFER_INTERNAL_FIELD_COUNT=${v8_array_buffer_internal_field_count}\",\n  \"V8_ARRAY_BUFFER_VIEW_INTERNAL_FIELD_COUNT=${v8_array_buffer_view_internal_field_count}\",\n  \"V8_PROMISE_INTERNAL_FIELD_COUNT=${v8_promise_internal_field_count}\",\n]\n\nif (v8_enable_v8_checks) {\n  enabled_external_v8_defines += [ \"V8_ENABLE_CHECKS\" ]\n}\nif (v8_enable_memory_accounting_checks) {\n  enabled_external_v8_defines += [ \"V8_ENABLE_MEMORY_ACCOUNTING_CHECKS\" ]\n}\nif (v8_enable_pointer_compression) {\n  enabled_external_v8_defines += [ \"V8_COMPRESS_POINTERS\" ]\n  if (v8_enable_pointer_compression_shared_cage) {\n    enabled_external_v8_defines += [ \"V8_COMPRESS_POINTERS_IN_SHARED_CAGE\" ]\n  }\n}\nif (v8_enable_pointer_compression || v8_enable_31bit_smis_on_64bit_arch) {\n  enabled_external_v8_defines += [ \"V8_31BIT_SMIS_ON_64BIT_ARCH\" ]\n}\nif (v8_enable_zone_compression) {\n  enabled_external_v8_defines += [ \"V8_COMPRESS_ZONES\" ]\n}\nif (v8_enable_sandbox) {\n  enabled_external_v8_defines += [ \"V8_ENABLE_SANDBOX\" ]\n}\nif (v8_deprecation_warnings) {\n  enabled_external_v8_defines += [ \"V8_DEPRECATION_WARNINGS\" ]\n}\nif (v8_imminent_deprecation_warnings) {\n  enabled_external_v8_defines += [ \"V8_IMMINENT_DEPRECATION_WARNINGS\" ]\n}\nif (v8_use_perfetto) {\n  enabled_external_v8_defines += [ \"V8_USE_PERFETTO\" ]\n}\nif (v8_enable_map_packing) {\n  enabled_external_v8_defines += [ \"V8_MAP_PACKING\" ]\n}\nif (is_tsan) {\n  enabled_external_v8_defines += [ \"V8_IS_TSAN\" ]\n}\nif (v8_enable_conservative_stack_scanning) {\n  enabled_external_v8_defines += [ \"V8_ENABLE_CONSERVATIVE_STACK_SCANNING\" ]\n}\nif (v8_enable_direct_handle) {\n  enabled_external_v8_defines += [ \"V8_ENABLE_DIRECT_HANDLE\" ]\n}\nif (v8_shortcut_strings_in_minor_ms) {\n  enabled_external_v8_defines += [ \"V8_MINORMS_STRING_SHORTCUTTING\" ]\n}\n\n# V8_TARGET_OS_ defines. The target OS may differ from host OS e.g. in\n# mksnapshot. We additionally set V8_HAVE_TARGET_OS to determine that a\n# target OS has in fact been set; otherwise we internally assume that target\n# OS == host OS (see v8config.h).\nif (target_os == \"android\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_ANDROID\" ]\n} else if (target_os == \"fuchsia\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_FUCHSIA\" ]\n} else if (target_os == \"ios\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_IOS\" ]\n} else if (target_os == \"linux\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_LINUX\" ]\n} else if (target_os == \"mac\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_MACOS\" ]\n} else if (target_os == \"win\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_WIN\" ]\n} else if (target_os == \"chromeos\") {\n  enabled_external_v8_defines += [ \"V8_HAVE_TARGET_OS\" ]\n  enabled_external_v8_defines += [ \"V8_TARGET_OS_CHROMEOS\" ]\n}\n\ndisabled_external_v8_defines = external_v8_defines - enabled_external_v8_defines\n\n# Put defines that are used in public headers here; public headers are\n# defined in \"v8_headers\" and are included by embedders of V8.\nconfig(\"v8_header_features\") {\n  visibility = [ \":*\" ]\n\n  if (v8_generate_external_defines_header) {\n    defines = [ \"V8_GN_HEADER\" ]\n  } else {\n    defines = enabled_external_v8_defines\n  }\n}\n\n# List of defines that can appear in externally visible cppgc header files and\n# that are controlled by args.gn.\nexternal_cppgc_defines = [\n  \"CPPGC_CAGED_HEAP\",\n  \"CPPGC_ENABLE_API_CHECKS\",\n  \"CPPGC_ENABLE_LARGER_CAGE\",\n  \"CPPGC_ENABLE_SLOW_API_CHECKS\",\n  \"CPPGC_POINTER_COMPRESSION\",\n  \"CPPGC_SLIM_WRITE_BARRIER\",\n  \"CPPGC_SUPPORTS_OBJECT_NAMES\",\n  \"CPPGC_YOUNG_GENERATION\",\n]\n\nenabled_external_cppgc_defines = []\n\nif (cppgc_enable_api_checks) {\n  enabled_external_cppgc_defines += [ \"CPPGC_ENABLE_API_CHECKS\" ]\n}\ncppgc_enable_slow_api_checks = v8_enable_slow_dchecks\nif (cppgc_enable_slow_api_checks) {\n  enabled_external_cppgc_defines += [ \"CPPGC_ENABLE_SLOW_API_CHECKS\" ]\n}\nif (cppgc_enable_object_names) {\n  enabled_external_cppgc_defines += [ \"CPPGC_SUPPORTS_OBJECT_NAMES\" ]\n}\nif (cppgc_enable_caged_heap) {\n  enabled_external_cppgc_defines += [ \"CPPGC_CAGED_HEAP\" ]\n\n  # Always enable young generation compile time flag if caged heap is enabled.\n  cppgc_enable_young_generation = true\n\n  # Pointer compression regresses binary size on Fuchsia by about 300K.\n  # However, the change improves Oilpan memory by 15-20% (2-4% of PMF),\n  # which is beneficial for memory-impoverished platforms.\n  cppgc_enable_pointer_compression = true\n}\nif (cppgc_enable_young_generation) {\n  enabled_external_cppgc_defines += [ \"CPPGC_YOUNG_GENERATION\" ]\n}\nif (cppgc_enable_pointer_compression) {\n  enabled_external_cppgc_defines += [ \"CPPGC_POINTER_COMPRESSION\" ]\n}\nif (cppgc_enable_larger_cage) {\n  enabled_external_cppgc_defines += [ \"CPPGC_ENABLE_LARGER_CAGE\" ]\n}\nif (cppgc_enable_slim_write_barrier) {\n  enabled_external_cppgc_defines += [ \"CPPGC_SLIM_WRITE_BARRIER\" ]\n}\n\ndisabled_external_cppgc_defines =\n    external_cppgc_defines - enabled_external_cppgc_defines\n\nconfig(\"cppgc_header_features\") {\n  visibility = [ \":*\" ]\n\n  if (v8_generate_external_defines_header) {\n    defines = [ \"V8_GN_HEADER\" ]\n  } else {\n    defines = enabled_external_cppgc_defines\n  }\n}\n\nenabled_external_defines =\n    enabled_external_v8_defines + enabled_external_cppgc_defines\ndisabled_external_defines =\n    disabled_external_v8_defines + disabled_external_cppgc_defines\n\n# Put defines here that are only used in our internal files and NEVER in\n# external headers that embedders (such as chromium and node) might include.\nconfig(\"features\") {\n  # Only targets in this file and its subdirs can depend on this.\n  visibility = [ \"./*\" ]\n\n  defines =\n      [ \"V8_TYPED_ARRAY_MAX_SIZE_IN_HEAP=${v8_typed_array_max_size_in_heap}\" ]\n\n  configs = [\n    \":v8_header_features\",\n    \":cppgc_header_features\",\n  ]\n\n  if (cppgc_enable_verify_heap) {\n    defines += [ \"CPPGC_VERIFY_HEAP\" ]\n  }\n\n  if (cppgc_allow_allocations_in_prefinalizers) {\n    defines += [ \"CPPGC_ALLOW_ALLOCATIONS_IN_PREFINALIZERS\" ]\n  }\n\n  if (v8_enable_pointer_compression &&\n      !v8_enable_pointer_compression_shared_cage) {\n    defines += [ \"V8_COMPRESS_POINTERS_IN_MULTIPLE_CAGES\" ]\n  }\n\n  if (v8_embedder_string != \"\") {\n    defines += [ \"V8_EMBEDDER_STRING=\\\"$v8_embedder_string\\\"\" ]\n  }\n  if (v8_enable_disassembler || v8_log_builtins_block_count_input != \"\") {\n    defines += [ \"ENABLE_DISASSEMBLER\" ]\n  }\n  if (v8_log_builtins_block_count_input != \"\") {\n    defines += [ \"LOG_BUILTIN_BLOCK_COUNT\" ]\n  }\n  if (v8_enable_future) {\n    defines += [ \"V8_ENABLE_FUTURE\" ]\n  }\n  if (v8_enable_lite_mode) {\n    defines += [ \"V8_LITE_MODE\" ]\n  }\n  if (v8_enable_gdbjit) {\n    defines += [ \"ENABLE_GDB_JIT_INTERFACE\" ]\n  }\n  if (v8_enable_vtunejit) {\n    defines += [ \"ENABLE_VTUNE_JIT_INTERFACE\" ]\n  }\n  if (v8_enable_vtunetracemark) {\n    defines += [ \"ENABLE_VTUNE_TRACEMARK\" ]\n  }\n  if (v8_enable_hugepage) {\n    defines += [ \"ENABLE_HUGEPAGE\" ]\n  }\n  if (v8_enable_private_mapping_fork_optimization) {\n    defines += [ \"V8_ENABLE_PRIVATE_MAPPING_FORK_OPTIMIZATION\" ]\n  }\n  if (v8_enable_object_print) {\n    defines += [ \"OBJECT_PRINT\" ]\n  }\n  if (v8_enable_verify_heap) {\n    defines += [ \"VERIFY_HEAP\" ]\n  }\n  if (v8_enable_verify_predictable) {\n    defines += [ \"VERIFY_PREDICTABLE\" ]\n  }\n  if (v8_enable_trace_maps) {\n    defines += [ \"V8_TRACE_MAPS\" ]\n  }\n  if (v8_enable_trace_unoptimized) {\n    defines += [ \"V8_TRACE_UNOPTIMIZED\" ]\n  }\n  if (v8_enable_trace_feedback_updates) {\n    defines += [ \"V8_TRACE_FEEDBACK_UPDATES\" ]\n  }\n  if (v8_enable_test_features) {\n    defines += [ \"V8_ENABLE_ALLOCATION_TIMEOUT\" ]\n    defines += [ \"V8_ENABLE_FORCE_SLOW_PATH\" ]\n    defines += [ \"V8_ENABLE_DOUBLE_CONST_STORE_CHECK\" ]\n  }\n  if (v8_enable_i18n_support) {\n    defines += [ \"V8_INTL_SUPPORT\" ]\n  }\n  if (v8_enable_local_handle_zapping) {\n    defines += [ \"ENABLE_LOCAL_HANDLE_ZAPPING\" ]\n  }\n  if (v8_enable_global_handle_zapping) {\n    defines += [ \"ENABLE_GLOBAL_HANDLE_ZAPPING\" ]\n  }\n  if (v8_code_comments == true) {\n    defines += [ \"V8_CODE_COMMENTS\" ]\n  }\n  if (v8_enable_debug_code) {\n    defines += [ \"V8_ENABLE_DEBUG_CODE\" ]\n    if (v8_enable_debugging_features) {\n      defines += [ \"V8_ENABLE_SLOW_DEBUG_CODE_BY_DEFAULT\" ]\n    }\n  }\n  if (v8_enable_heap_snapshot_verify) {\n    defines += [ \"V8_ENABLE_HEAP_SNAPSHOT_VERIFY\" ]\n  }\n  if (v8_enable_snapshot_native_code_counters) {\n    defines += [ \"V8_SNAPSHOT_NATIVE_CODE_COUNTERS\" ]\n  }\n  if (v8_enable_single_generation) {\n    defines += [ \"V8_ENABLE_SINGLE_GENERATION\" ]\n  }\n  if (v8_disable_write_barriers) {\n    defines += [ \"V8_DISABLE_WRITE_BARRIERS\" ]\n  }\n  if (v8_use_external_startup_data) {\n    defines += [ \"V8_USE_EXTERNAL_STARTUP_DATA\" ]\n  }\n  if (v8_enable_atomic_object_field_writes) {\n    defines += [ \"V8_ATOMIC_OBJECT_FIELD_WRITES\" ]\n  }\n  if (v8_enable_ignition_dispatch_counting) {\n    defines += [ \"V8_IGNITION_DISPATCH_COUNTING\" ]\n  }\n  if (v8_enable_lazy_source_positions) {\n    defines += [ \"V8_ENABLE_LAZY_SOURCE_POSITIONS\" ]\n  }\n  if (v8_use_siphash) {\n    defines += [ \"V8_USE_SIPHASH\" ]\n  }\n  if (v8_win64_unwinding_info) {\n    defines += [ \"V8_WIN64_UNWINDING_INFO\" ]\n  }\n  if (v8_enable_regexp_interpreter_threaded_dispatch) {\n    defines += [ \"V8_ENABLE_REGEXP_INTERPRETER_THREADED_DISPATCH\" ]\n  }\n  if (v8_enable_snapshot_compression) {\n    defines += [ \"V8_SNAPSHOT_COMPRESSION\" ]\n  }\n  if (v8_control_flow_integrity) {\n    defines += [ \"V8_ENABLE_CONTROL_FLOW_INTEGRITY\" ]\n  }\n  if (v8_enable_cet_shadow_stack) {\n    defines += [ \"V8_ENABLE_CET_SHADOW_STACK\" ]\n  }\n  if (v8_enable_cet_ibt) {\n    defines += [ \"V8_ENABLE_CET_IBT\" ]\n  }\n  if (v8_enable_memory_sealing) {\n    defines += [ \"V8_ENABLE_MEMORY_SEALING\" ]\n  }\n  if (v8_enable_wasm_gdb_remote_debugging) {\n    defines += [ \"V8_ENABLE_WASM_GDB_REMOTE_DEBUGGING\" ]\n  }\n  if (v8_enable_precise_zone_stats) {\n    defines += [ \"V8_ENABLE_PRECISE_ZONE_STATS\" ]\n  }\n  if (v8_fuzzilli) {\n    defines += [ \"V8_FUZZILLI\" ]\n  }\n  if (v8_enable_fuzztest) {\n    defines += [ \"V8_ENABLE_FUZZTEST\" ]\n  }\n  if (v8_enable_short_builtin_calls) {\n    defines += [ \"V8_SHORT_BUILTIN_CALLS\" ]\n  }\n  if (v8_enable_external_code_space) {\n    defines += [ \"V8_EXTERNAL_CODE_SPACE\" ]\n  }\n  if (v8_enable_sparkplug) {\n    defines += [ \"V8_ENABLE_SPARKPLUG\" ]\n  }\n  if (v8_enable_maglev) {\n    defines += [ \"V8_ENABLE_MAGLEV\" ]\n  }\n  if (v8_enable_turbofan) {\n    defines += [ \"V8_ENABLE_TURBOFAN\" ]\n  }\n  if (v8_jitless) {\n    defines += [ \"V8_JITLESS\" ]\n  }\n  if (v8_enable_swiss_name_dictionary) {\n    defines += [ \"V8_ENABLE_SWISS_NAME_DICTIONARY\" ]\n  }\n  if (v8_enable_system_instrumentation) {\n    defines += [ \"V8_ENABLE_SYSTEM_INSTRUMENTATION\" ]\n  }\n  if (v8_enable_etw_stack_walking) {\n    assert(is_win)\n    defines += [ \"V8_ENABLE_ETW_STACK_WALKING\" ]\n  }\n  if (v8_etw_guid != \"\") {\n    defines += [ \"V8_ETW_GUID=\\\"$v8_etw_guid\\\"\" ]\n  }\n  if (v8_enable_webassembly) {\n    defines += [ \"V8_ENABLE_WEBASSEMBLY\" ]\n  }\n  if (v8_dict_property_const_tracking) {\n    defines += [ \"V8_DICT_PROPERTY_CONST_TRACKING\" ]\n  }\n  if (v8_enable_javascript_promise_hooks) {\n    defines += [ \"V8_ENABLE_JAVASCRIPT_PROMISE_HOOKS\" ]\n  }\n  if (v8_enable_continuation_preserved_embedder_data) {\n    defines += [ \"V8_ENABLE_CONTINUATION_PRESERVED_EMBEDDER_DATA\" ]\n  }\n  if (v8_enable_allocation_folding) {\n    defines += [ \"V8_ALLOCATION_FOLDING\" ]\n  }\n  if (v8_allocation_site_tracking) {\n    defines += [ \"V8_ALLOCATION_SITE_TRACKING\" ]\n  }\n  if (v8_scriptormodule_legacy_lifetime) {\n    defines += [ \"V8_SCRIPTORMODULE_LEGACY_LIFETIME\" ]\n  }\n  if (v8_advanced_bigint_algorithms) {\n    defines += [ \"V8_ADVANCED_BIGINT_ALGORITHMS\" ]\n  }\n  if (v8_enable_drumbrake) {\n    defines += [ \"V8_ENABLE_DRUMBRAKE\" ]\n    if (v8_enable_drumbrake_tracing) {\n      defines += [ \"V8_ENABLE_DRUMBRAKE_TRACING\" ]\n    }\n    if (v8_drumbrake_bounds_checks) {\n      defines += [ \"V8_DRUMBRAKE_BOUNDS_CHECKS\" ]\n    }\n  }\n  if (v8_enable_memory_corruption_api) {\n    defines += [ \"V8_ENABLE_MEMORY_CORRUPTION_API\" ]\n  }\n  if (v8_enable_pointer_compression_8gb) {\n    defines += [ \"V8_COMPRESS_POINTERS_8GB\" ]\n  }\n  if (v8_enable_static_roots) {\n    defines += [ \"V8_STATIC_ROOTS\" ]\n  }\n  if (v8_enable_static_roots_generation) {\n    defines += [ \"V8_STATIC_ROOTS_GENERATION\" ]\n  }\n  if (v8_use_zlib) {\n    defines += [ \"V8_USE_ZLIB\" ]\n  }\n  if (v8_use_libm_trig_functions) {\n    defines += [ \"V8_USE_LIBM_TRIG_FUNCTIONS\" ]\n  }\n  if (v8_value_deserializer_hard_fail) {\n    defines += [ \"V8_VALUE_DESERIALIZER_HARD_FAIL\" ]\n  }\n  if (v8_enable_wasm_simd256_revec) {\n    defines += [ \"V8_ENABLE_WASM_SIMD256_REVEC\" ]\n  }\n  if (v8_enable_maglev_graph_printer) {\n    defines += [ \"V8_ENABLE_MAGLEV_GRAPH_PRINTER\" ]\n  }\n  if (v8_enable_slow_tracing) {\n    defines += [ \"V8_ENABLE_SLOW_TRACING\" ]\n  }\n  if (v8_enable_builtin_jump_table_switch) {\n    defines += [ \"V8_ENABLE_BUILTIN_JUMP_TABLE_SWITCH\" ]\n  }\n  if (v8_enable_extensible_ro_snapshot) {\n    defines += [ \"V8_ENABLE_EXTENSIBLE_RO_SNAPSHOT\" ]\n  }\n  if (v8_enable_local_off_stack_check) {\n    defines += [ \"V8_ENABLE_LOCAL_OFF_STACK_CHECK\" ]\n  }\n  if (v8_enable_black_allocated_pages) {\n    defines += [ \"V8_ENABLE_BLACK_ALLOCATED_PAGES\" ]\n  }\n  if (v8_enable_sticky_mark_bits) {\n    defines += [ \"V8_ENABLE_STICKY_MARK_BITS\" ]\n  }\n  if (v8_enable_experimental_tsa_builtins) {\n    defines += [ \"V8_ENABLE_EXPERIMENTAL_TSA_BUILTINS\" ]\n  }\n  if (v8_enable_leaptiering) {\n    defines += [ \"V8_ENABLE_LEAPTIERING\" ]\n  }\n  if (v8_wasm_random_fuzzers) {\n    defines += [ \"V8_WASM_RANDOM_FUZZERS\" ]\n  }\n}\n\nconfig(\"toolchain\") {\n  # Only targets in this file and its subdirs can depend on this.\n  visibility = [ \"./*\" ]\n\n  defines = []\n  cflags = []\n  ldflags = []\n\n  if (v8_current_cpu == \"arm\") {\n    defines += [ \"V8_TARGET_ARCH_ARM\" ]\n    if (arm_version >= 7) {\n      defines += [ \"CAN_USE_ARMV7_INSTRUCTIONS\" ]\n    }\n    if (arm_fpu == \"vfpv3-d16\") {\n      defines += [ \"CAN_USE_VFP3_INSTRUCTIONS\" ]\n    } else if (arm_fpu == \"vfpv3\") {\n      defines += [\n        \"CAN_USE_VFP3_INSTRUCTIONS\",\n        \"CAN_USE_VFP32DREGS\",\n      ]\n    } else if (arm_fpu == \"neon\") {\n      defines += [\n        \"CAN_USE_VFP3_INSTRUCTIONS\",\n        \"CAN_USE_VFP32DREGS\",\n        \"CAN_USE_NEON\",\n      ]\n    }\n\n    # TODO(infra): Add support for arm_test_noprobe.\n\n    if (current_cpu != \"arm\") {\n      # These defines ares used for the ARM simulator.\n      if (arm_float_abi == \"hard\") {\n        defines += [ \"USE_EABI_HARDFLOAT=1\" ]\n      } else if (arm_float_abi == \"softfp\") {\n        defines += [ \"USE_EABI_HARDFLOAT=0\" ]\n      }\n    }\n  }\n  if (v8_current_cpu == \"arm64\") {\n    defines += [ \"V8_TARGET_ARCH_ARM64\" ]\n    if (current_cpu == \"arm64\" && v8_control_flow_integrity && is_clang) {\n      # Mark assembly code as BTI-compatible.\n      asmflags = [ \"-mmark-bti-property\" ]\n    }\n  }\n\n  # Mips64el simulators.\n  if (target_is_simulator && v8_current_cpu == \"mips64el\") {\n    defines += [ \"_MIPS_TARGET_SIMULATOR\" ]\n  }\n\n  if (v8_current_cpu == \"mips64el\" || v8_current_cpu == \"mips64\") {\n    defines += [ \"V8_TARGET_ARCH_MIPS64\" ]\n    if (v8_can_use_fpu_instructions) {\n      defines += [ \"CAN_USE_FPU_INSTRUCTIONS\" ]\n    }\n    if (mips_use_msa) {\n      defines += [ \"_MIPS_MSA\" ]\n    }\n    if (host_byteorder == \"little\") {\n      defines += [ \"V8_TARGET_ARCH_MIPS64_LE\" ]\n    } else if (host_byteorder == \"big\") {\n      defines += [ \"V8_TARGET_ARCH_MIPS64_BE\" ]\n    }\n    if (v8_use_mips_abi_hardfloat) {\n      defines += [\n        \"__mips_hard_float=1\",\n        \"CAN_USE_FPU_INSTRUCTIONS\",\n      ]\n    } else {\n      defines += [ \"__mips_soft_float=1\" ]\n    }\n    if (mips_arch_variant == \"r6\") {\n      defines += [ \"_MIPS_ARCH_MIPS64R6\" ]\n    } else if (mips_arch_variant == \"r2\") {\n      defines += [ \"_MIPS_ARCH_MIPS64R2\" ]\n    }\n  }\n\n  # loong64 simulators.\n  if (target_is_simulator && v8_current_cpu == \"loong64\") {\n    defines += [ \"_LOONG64_TARGET_SIMULATOR\" ]\n  }\n  if (v8_current_cpu == \"loong64\") {\n    defines += [ \"V8_TARGET_ARCH_LOONG64\" ]\n  }\n\n  if (v8_current_cpu == \"s390x\") {\n    cflags += [ \"-ffp-contract=off\" ]\n    defines += [ \"V8_TARGET_ARCH_S390X\" ]\n    if (host_byteorder == \"little\") {\n      defines += [ \"V8_TARGET_ARCH_S390X_LE_SIM\" ]\n    } else if (current_os != \"zos\") {\n      cflags += [ \"-march=z196\" ]\n    }\n  }\n  if (v8_current_cpu == \"ppc64\") {\n    defines += [ \"V8_TARGET_ARCH_PPC64\" ]\n    cflags += [ \"-ffp-contract=off\" ]\n    if (current_os == \"aix\") {\n      cflags += [\n        # Work around AIX ceil, trunc and round oddities.\n        \"-mcpu=power5+\",\n        \"-mfprnd\",\n\n        # Work around AIX assembler popcntb bug.\n        \"-mno-popcntb\",\n      ]\n    }\n  }\n\n  # Under simulator build, compiler will not provide __riscv_xlen. Define here\n  if (v8_current_cpu == \"riscv64\" || v8_current_cpu == \"riscv32\") {\n    if (target_is_simulator) {\n      defines += [ \"_RISCV_TARGET_SIMULATOR\" ]\n    }\n    if (riscv_use_rvv || target_is_simulator) {\n      defines += [ \"CAN_USE_RVV_INSTRUCTIONS\" ]\n      defines += [ \"RVV_VLEN=${riscv_rvv_vlen}\" ]\n    }\n    if (riscv_use_zba) {\n      defines += [ \"__riscv_zba\" ]\n    }\n    if (riscv_use_zbb) {\n      defines += [ \"__riscv_zbb\" ]\n    }\n    if (riscv_use_zbs) {\n      defines += [ \"__riscv_zbs\" ]\n    }\n  }\n  if (v8_current_cpu == \"riscv64\") {\n    defines += [ \"V8_TARGET_ARCH_RISCV64\" ]\n    defines += [ \"__riscv_xlen=64\" ]\n    if (!is_clang) {\n      cflags += [ \"-ffp-contract=off\" ]\n    }\n    if (riscv_use_sv39) {\n      defines += [ \"RISCV_USE_SV39\" ]\n    }\n  }\n\n  if (v8_current_cpu == \"riscv32\") {\n    defines += [ \"V8_TARGET_ARCH_RISCV32\" ]\n    defines += [ \"__riscv_xlen=32\" ]\n  }\n\n  if (v8_current_cpu == \"x86\") {\n    defines += [ \"V8_TARGET_ARCH_IA32\" ]\n    if (is_win) {\n      # Ensure no surprising artifacts from 80bit double math with x86.\n      cflags += [ \"/arch:SSE2\" ]\n    }\n  }\n  if (v8_current_cpu == \"x64\") {\n    defines += [ \"V8_TARGET_ARCH_X64\" ]\n    if (is_win) {\n      # Increase the initial stack size. The default is 1MB, this is 2MB. This\n      # applies only to executables and shared libraries produced by V8 since\n      # ldflags are not pushed to dependants.\n      ldflags += [ \"/STACK:2097152\" ]\n    }\n  }\n  if (is_android && v8_android_log_stdout) {\n    defines += [ \"V8_ANDROID_LOG_STDOUT\" ]\n  }\n\n  # TODO(infra): Support v8_enable_prof on Windows.\n  # TODO(infra): Add support for compiling with simulators.\n\n  if (v8_enable_debugging_features || v8_dcheck_always_on) {\n    defines += [ \"DEBUG\" ]\n    if (v8_enable_slow_dchecks) {\n      defines += [ \"ENABLE_SLOW_DCHECKS\" ]\n    }\n  } else {\n    defines += [ \"NDEBUG\" ]\n  }\n\n  if (v8_enable_verify_csa) {\n    defines += [ \"ENABLE_VERIFY_CSA\" ]\n  }\n\n  if (v8_enable_runtime_call_stats) {\n    defines += [ \"V8_RUNTIME_CALL_STATS\" ]\n  }\n\n  if (v8_no_inline) {\n    if (is_win) {\n      cflags += [ \"/Ob0\" ]\n    } else {\n      cflags += [\n        \"-fno-inline-functions\",\n        \"-fno-inline\",\n      ]\n    }\n  }\n\n  if (is_clang) {\n    cflags += [\n      \"-Wunreachable-code\",\n\n      # TODO(v8:12245): Fix shadowing instances and remove.\n      \"-Wno-shadow\",\n    ]\n\n    # TODO(fuchsia:127411): Re-enable once FIDL bindings are compatible.\n    if (!is_fuchsia) {\n      # Google3 enables this warning, so we should also enable it to find issue\n      # earlier. See https://reviews.llvm.org/D56731 for details about this\n      # warning.\n      cflags += [ \"-Wctad-maybe-unsupported\" ]\n    }\n  }\n\n  if (is_clang || !is_win) {\n    cflags += [\n      # On clang and gcc, disable warnings about offsetof being used on\n      # non-standard-layout types. offsetof is only specified for\n      # standard-layout types, but its behaviour on non-standard-layout types is\n      # implementation defined (rather than UB), and our supported compilers\n      # have the expected reasonable behaviour.\n      \"-Wno-invalid-offsetof\",\n    ]\n  }\n\n  if (is_win) {\n    cflags += [\n      \"/wd4245\",  # Conversion with signed/unsigned mismatch.\n      \"/wd4267\",  # Conversion with possible loss of data.\n      \"/wd4324\",  # Padding structure due to alignment.\n      \"/wd4701\",  # Potentially uninitialized local variable.\n      \"/wd4702\",  # Unreachable code.\n      \"/wd4703\",  # Potentially uninitialized local pointer variable.\n      \"/wd4709\",  # Comma operator within array index expr (bugged).\n      \"/wd4714\",  # Function marked forceinline not inlined.\n\n      # MSVC assumes that control can get past an exhaustive switch and then\n      # warns if there's no return there (see https://crbug.com/v8/7658)\n      \"/wd4715\",  # Not all control paths return a value.\n\n      \"/wd4718\",  # Recursive call has no side-effect.\n      \"/wd4723\",  # https://crbug.com/v8/7771\n      \"/wd4724\",  # https://crbug.com/v8/7771\n      \"/wd4800\",  # Forcing value to bool.\n    ]\n  }\n\n  if (!is_clang && is_win) {\n    cflags += [\n      \"/wd4506\",  # Benign \"no definition for inline function\"\n\n      # Warnings permanently disabled:\n\n      # C4091: 'typedef ': ignored on left of 'X' when no variable is\n      #                    declared.\n      # This happens in a number of Windows headers. Dumb.\n      \"/wd4091\",\n\n      # C4127: conditional expression is constant\n      # This warning can in theory catch dead code and other problems, but\n      # triggers in far too many desirable cases where the conditional\n      # expression is either set by macros or corresponds some legitimate\n      # compile-time constant expression (due to constant template args,\n      # conditionals comparing the sizes of different types, etc.).  Some of\n      # these can be worked around, but it's not worth it.\n      \"/wd4127\",\n\n      # C4251: 'identifier' : class 'type' needs to have dll-interface to be\n      #        used by clients of class 'type2'\n      # This is necessary for the shared library build.\n      \"/wd4251\",\n\n      # C4275:  non dll-interface class used as base for dll-interface class\n      # This points out a potential (but rare) problem with referencing static\n      # fields of a non-exported base, through the base's non-exported inline\n      # functions, or directly. The warning is subtle enough that people just\n      # suppressed it when they saw it, so it's not worth it.\n      \"/wd4275\",\n\n      # C4312 is a VS 2015 64-bit warning for integer to larger pointer.\n      # TODO(brucedawson): fix warnings, crbug.com/554200\n      \"/wd4312\",\n\n      # C4324 warns when padding is added to fulfill alignas requirements,\n      # but can trigger in benign cases that are difficult to individually\n      # suppress.\n      \"/wd4324\",\n\n      # C4351: new behavior: elements of array 'array' will be default\n      #        initialized\n      # This is a silly \"warning\" that basically just alerts you that the\n      # compiler is going to actually follow the language spec like it's\n      # supposed to, instead of not following it like old buggy versions did.\n      # There's absolutely no reason to turn this on.\n      \"/wd4351\",\n\n      # C4355: 'this': used in base member initializer list\n      # It's commonly useful to pass |this| to objects in a class' initializer\n      # list.  While this warning can catch real bugs, most of the time the\n      # constructors in question don't attempt to call methods on the passed-in\n      # pointer (until later), and annotating every legit usage of this is\n      # simply more hassle than the warning is worth.\n      \"/wd4355\",\n\n      # C4503: 'identifier': decorated name length exceeded, name was\n      #        truncated\n      # This only means that some long error messages might have truncated\n      # identifiers in the presence of lots of templates.  It has no effect on\n      # program correctness and there's no real reason to waste time trying to\n      # prevent it.\n      \"/wd4503\",\n\n      # Warning C4589 says: \"Constructor of abstract class ignores\n      # initializer for virtual base class.\" Disable this warning because it\n      # is flaky in VS 2015 RTM. It triggers on compiler generated\n      # copy-constructors in some cases.\n      \"/wd4589\",\n\n      # C4611: interaction between 'function' and C++ object destruction is\n      #        non-portable\n      # This warning is unavoidable when using e.g. setjmp/longjmp.  MSDN\n      # suggests using exceptions instead of setjmp/longjmp for C++, but\n      # Chromium code compiles without exception support.  We therefore have to\n      # use setjmp/longjmp for e.g. JPEG decode error handling, which means we\n      # have to turn off this warning (and be careful about how object\n      # destruction happens in such cases).\n      \"/wd4611\",\n\n      # Warnings to evaluate and possibly fix/reenable later:\n\n      \"/wd4100\",  # Unreferenced formal function parameter.\n      \"/wd4121\",  # Alignment of a member was sensitive to packing.\n      \"/wd4244\",  # Conversion: possible loss of data.\n      \"/wd4505\",  # Unreferenced local function has been removed.\n      \"/wd4510\",  # Default constructor could not be generated.\n      \"/wd4512\",  # Assignment operator could not be generated.\n      \"/wd4610\",  # Class can never be instantiated, constructor required.\n      \"/wd4838\",  # Narrowing conversion. Doesn't seem to be very useful.\n      \"/wd4995\",  # 'X': name was marked as #pragma deprecated\n      \"/wd4996\",  # Deprecated function warning.\n\n      # These are variable shadowing warnings that are new in VS2015. We\n      # should work through these at some point -- they may be removed from\n      # the RTM release in the /W4 set.\n      \"/wd4456\",\n      \"/wd4457\",\n      \"/wd4458\",\n      \"/wd4459\",\n\n      # All of our compilers support the extensions below.\n      \"/wd4200\",  # nonstandard extension used: zero-sized array in struct/union\n      \"/wd4201\",  # nonstandard extension used: nameless struct/union\n      \"/wd4204\",  # nonstandard extension used : non-constant aggregate\n                  # initializer\n\n      \"/wd4221\",  # nonstandard extension used : 'identifier' : cannot be\n                  # initialized using address of automatic variable\n\n      # http://crbug.com/588506 - Conversion suppressions waiting on Clang\n      # -Wconversion.\n      \"/wd4245\",  # 'conversion' : conversion from 'type1' to 'type2',\n                  # signed/unsigned mismatch\n\n      \"/wd4267\",  # 'var' : conversion from 'size_t' to 'type', possible loss of\n                  # data\n\n      \"/wd4305\",  # 'identifier' : truncation from 'type1' to 'type2'\n      \"/wd4389\",  # 'operator' : signed/unsigned mismatch\n\n      \"/wd4702\",  # unreachable code\n\n      # http://crbug.com/848979 - MSVC is more conservative than Clang with\n      # regards to variables initialized and consumed in different branches.\n      \"/wd4701\",  # Potentially uninitialized local variable 'name' used\n      \"/wd4703\",  # Potentially uninitialized local pointer variable 'name' used\n\n      # http://crbug.com/848979 - Remaining Clang permitted warnings.\n      \"/wd4661\",  # 'identifier' : no suitable definition provided for explicit\n                  # template instantiation request\n\n      \"/wd4706\",  # assignment within conditional expression\n                  # MSVC is stricter and requires a boolean expression.\n\n      \"/wd4715\",  # 'function' : not all control paths return a value'\n                  # MSVC does not analyze switch (enum) for completeness.\n    ]\n  }\n\n  if (!is_clang && !is_win) {\n    cflags += [\n      # Disable gcc warnings for optimizations based on the assumption that\n      # signed overflow does not occur. Generates false positives (see\n      # http://crbug.com/v8/6341).\n      \"-Wno-strict-overflow\",\n\n      # GCC assumes that control can get past an exhaustive switch and then\n      # warns if there's no return there (see https://crbug.com/v8/7658).\n      \"-Wno-return-type\",\n\n      # Disable gcc warnings for using enum constant in boolean context.\n      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97266\n      \"-Wno-int-in-bool-context\",\n\n      # Disable gcc deprecation warnings, which are firing on implicit capture\n      # of `this` in capture-by-value lambdas and preventing a build roll which\n      # enables C++20 (see https://crbug.com/1374227).\n      \"-Wno-deprecated\",\n\n      # Fix build with older versions of GCC\n      # Ported from v8 bazel: https://crrev.com/c/3368869\n      \"-Wno-stringop-overflow\",\n\n      # Fix a number of bogus errors with gcc12\n      # TODO(miladfarca): re-evaluate for future gcc upgrades\n      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111499\n      \"-Wno-stringop-overread\",\n\n      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104336\n      \"-Wno-restrict\",\n\n      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=105523\n      \"-Wno-array-bounds\",\n\n      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=108517\n      \"-Wno-nonnull\",\n\n      # Disable dangling pointer warnings, which are often false positives when\n      # using scopes.\n      \"-Wno-dangling-pointer\",\n    ]\n  }\n\n  # Chromium uses a hand-picked subset of UBSan coverage. We want everything.\n  if (is_ubsan) {\n    cflags += [ \"-fsanitize=undefined\" ]\n  }\n}\n\nconfig(\"strict_warnings\") {\n  cflags = []\n  if (is_clang) {\n    if (v8_current_cpu == \"x64\" || v8_current_cpu == \"arm64\" ||\n        v8_current_cpu == \"mips64el\" || v8_current_cpu == \"riscv64\") {\n      cflags += [ \"-Wshorten-64-to-32\" ]\n    }\n    cflags += [ \"-Wmissing-field-initializers\" ]\n  }\n}\n\n# For code that is hot during mksnapshot. In fast-mksnapshot builds, we\n# optimize some files even in debug builds to speed up mksnapshot times.\nconfig(\"always_turbofanimize\") {\n  configs = [ \":internal_config\" ]\n\n  # TODO(crbug.com/621335) Rework this so that we don't have the confusion\n  # between \"optimize_speed\" and \"optimize_max\".\n  if (((is_posix && !is_android) || is_fuchsia || is_win) && !using_sanitizer) {\n    configs += [ \"//build/config/compiler:optimize_speed\" ]\n  } else {\n    configs += [ \"//build/config/compiler:optimize_max\" ]\n  }\n}\n\n###############################################################################\n# Actions\n#\n\n# Only for Windows clang builds. Converts the embedded.S file produced by\n# mksnapshot into an embedded.cc file with corresponding inline assembly.\ntemplate(\"asm_to_inline_asm\") {\n  name = target_name\n  if (name == \"default\") {\n    suffix = \"\"\n  } else {\n    suffix = \"_$name\"\n  }\n\n  action(\"asm_to_inline_asm_\" + name) {\n    visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n    assert(emit_builtins_as_inline_asm)\n\n    script = \"tools/snapshot/asm_to_inline_asm.py\"\n    deps = [ \":run_mksnapshot_\" + name ]\n    sources = [ \"$target_gen_dir/embedded${suffix}.S\" ]\n    outputs = [ \"$target_gen_dir/embedded${suffix}.cc\" ]\n    args = invoker.args\n    args += [\n      rebase_path(\"$target_gen_dir/embedded${suffix}.S\", root_build_dir),\n      rebase_path(\"$target_gen_dir/embedded${suffix}.cc\", root_build_dir),\n    ]\n  }\n}\n\nif (v8_postmortem_support) {\n  action(\"postmortem-metadata\") {\n    # Only targets in this file can depend on this.\n    visibility = [ \":*\" ]\n\n    script = \"tools/gen-postmortem-metadata.py\"\n\n    # NOSORT\n    inputs = [\n      \"$target_gen_dir/torque-generated/instance-types.h\",\n      \"src/objects/allocation-site.h\",\n      \"src/objects/allocation-site-inl.h\",\n      \"src/objects/cell.h\",\n      \"src/objects/cell-inl.h\",\n      \"src/objects/dependent-code.h\",\n      \"src/objects/dependent-code-inl.h\",\n      \"src/objects/bytecode-array.h\",\n      \"src/objects/bytecode-array-inl.h\",\n      \"src/objects/abstract-code.h\",\n      \"src/objects/abstract-code-inl.h\",\n      \"src/objects/instruction-stream.h\",\n      \"src/objects/instruction-stream-inl.h\",\n      \"src/objects/casting.h\",\n      \"src/objects/casting-inl.h\",\n      \"src/objects/code.h\",\n      \"src/objects/code-inl.h\",\n      \"src/objects/data-handler.h\",\n      \"src/objects/data-handler-inl.h\",\n      \"src/objects/deoptimization-data.h\",\n      \"src/objects/deoptimization-data-inl.h\",\n      \"src/objects/descriptor-array.h\",\n      \"src/objects/descriptor-array-inl.h\",\n      \"src/objects/feedback-cell.h\",\n      \"src/objects/feedback-cell-inl.h\",\n      \"src/objects/fixed-array.h\",\n      \"src/objects/fixed-array-inl.h\",\n      \"src/objects/heap-number.h\",\n      \"src/objects/heap-number-inl.h\",\n      \"src/objects/heap-object.h\",\n      \"src/objects/heap-object-inl.h\",\n      \"src/objects/instance-type.h\",\n      \"src/objects/instance-type-checker.h\",\n      \"src/objects/instance-type-inl.h\",\n      \"src/objects/js-array-buffer.h\",\n      \"src/objects/js-array-buffer-inl.h\",\n      \"src/objects/js-array.h\",\n      \"src/objects/js-array-inl.h\",\n      \"src/objects/js-function-inl.h\",\n      \"src/objects/js-function.cc\",\n      \"src/objects/js-function.h\",\n      \"src/objects/js-objects.cc\",\n      \"src/objects/js-objects.h\",\n      \"src/objects/js-objects-inl.h\",\n      \"src/objects/js-promise.h\",\n      \"src/objects/js-promise-inl.h\",\n      \"src/objects/js-raw-json.cc\",\n      \"src/objects/js-raw-json.h\",\n      \"src/objects/js-raw-json-inl.h\",\n      \"src/objects/js-regexp.cc\",\n      \"src/objects/js-regexp.h\",\n      \"src/objects/js-regexp-inl.h\",\n      \"src/objects/js-regexp-string-iterator.h\",\n      \"src/objects/js-regexp-string-iterator-inl.h\",\n      \"src/objects/map.cc\",\n      \"src/objects/map.h\",\n      \"src/objects/map-inl.h\",\n      \"src/objects/megadom-handler.h\",\n      \"src/objects/megadom-handler-inl.h\",\n      \"src/objects/name.h\",\n      \"src/objects/name-inl.h\",\n      \"src/objects/objects.h\",\n      \"src/objects/objects-inl.h\",\n      \"src/objects/oddball.h\",\n      \"src/objects/oddball-inl.h\",\n      \"src/objects/primitive-heap-object.h\",\n      \"src/objects/primitive-heap-object-inl.h\",\n      \"src/objects/scope-info.h\",\n      \"src/objects/scope-info-inl.h\",\n      \"src/objects/script.h\",\n      \"src/objects/script-inl.h\",\n      \"src/objects/shared-function-info.cc\",\n      \"src/objects/shared-function-info.h\",\n      \"src/objects/shared-function-info-inl.h\",\n      \"src/objects/string.cc\",\n      \"src/objects/string-comparator.cc\",\n      \"src/objects/string-comparator.h\",\n      \"src/objects/string.h\",\n      \"src/objects/string-inl.h\",\n      \"src/objects/struct.h\",\n      \"src/objects/struct-inl.h\",\n      \"src/objects/tagged.h\",\n      \"src/objects/union.h\",\n    ]\n\n    outputs = [ \"$target_gen_dir/debug-support.cc\" ]\n\n    args = rebase_path(outputs, root_build_dir) +\n           rebase_path(inputs, root_build_dir)\n\n    deps = [ \":run_torque\" ]\n  }\n}\n\ntorque_files = [\n  \"src/builtins/aggregate-error.tq\",\n  \"src/builtins/array-at.tq\",\n  \"src/builtins/array-concat.tq\",\n  \"src/builtins/array-copywithin.tq\",\n  \"src/builtins/array-every.tq\",\n  \"src/builtins/array-filter.tq\",\n  \"src/builtins/array-find.tq\",\n  \"src/builtins/array-findindex.tq\",\n  \"src/builtins/array-findlast.tq\",\n  \"src/builtins/array-findlastindex.tq\",\n  \"src/builtins/array-flat.tq\",\n  \"src/builtins/array-foreach.tq\",\n  \"src/builtins/array-from-async.tq\",\n  \"src/builtins/array-from.tq\",\n  \"src/builtins/array-isarray.tq\",\n  \"src/builtins/array-join.tq\",\n  \"src/builtins/array-lastindexof.tq\",\n  \"src/builtins/array-map.tq\",\n  \"src/builtins/array-of.tq\",\n  \"src/builtins/array-reduce-right.tq\",\n  \"src/builtins/array-reduce.tq\",\n  \"src/builtins/array-reverse.tq\",\n  \"src/builtins/array-shift.tq\",\n  \"src/builtins/array-slice.tq\",\n  \"src/builtins/array-some.tq\",\n  \"src/builtins/array-splice.tq\",\n  \"src/builtins/array-to-reversed.tq\",\n  \"src/builtins/array-to-sorted.tq\",\n  \"src/builtins/array-to-spliced.tq\",\n  \"src/builtins/array-unshift.tq\",\n  \"src/builtins/array-with.tq\",\n  \"src/builtins/array.tq\",\n  \"src/builtins/arraybuffer.tq\",\n  \"src/builtins/base.tq\",\n  \"src/builtins/boolean.tq\",\n  \"src/builtins/builtins-bigint.tq\",\n  \"src/builtins/builtins-string.tq\",\n  \"src/builtins/cast.tq\",\n  \"src/builtins/collections.tq\",\n  \"src/builtins/constructor.tq\",\n  \"src/builtins/conversion.tq\",\n  \"src/builtins/convert.tq\",\n  \"src/builtins/console.tq\",\n  \"src/builtins/data-view.tq\",\n  \"src/builtins/finalization-registry.tq\",\n  \"src/builtins/frames.tq\",\n  \"src/builtins/frame-arguments.tq\",\n  \"src/builtins/function.tq\",\n  \"src/builtins/growable-fixed-array.tq\",\n  \"src/builtins/ic-callable.tq\",\n  \"src/builtins/ic.tq\",\n  \"src/builtins/internal-coverage.tq\",\n  \"src/builtins/internal.tq\",\n  \"src/builtins/iterator.tq\",\n  \"src/builtins/iterator-from.tq\",\n  \"src/builtins/iterator-helpers.tq\",\n  \"src/builtins/map-groupby.tq\",\n  \"src/builtins/math.tq\",\n  \"src/builtins/number.tq\",\n  \"src/builtins/object-fromentries.tq\",\n  \"src/builtins/object-groupby.tq\",\n  \"src/builtins/object.tq\",\n  \"src/builtins/promise-abstract-operations.tq\",\n  \"src/builtins/promise-all.tq\",\n  \"src/builtins/promise-all-element-closure.tq\",\n  \"src/builtins/promise-any.tq\",\n  \"src/builtins/promise-constructor.tq\",\n  \"src/builtins/promise-finally.tq\",\n  \"src/builtins/promise-jobs.tq\",\n  \"src/builtins/promise-misc.tq\",\n  \"src/builtins/promise-race.tq\",\n  \"src/builtins/promise-reaction-job.tq\",\n  \"src/builtins/promise-resolve.tq\",\n  \"src/builtins/promise-then.tq\",\n  \"src/builtins/promise-try.tq\",\n  \"src/builtins/promise-withresolvers.tq\",\n  \"src/builtins/proxy-constructor.tq\",\n  \"src/builtins/proxy-delete-property.tq\",\n  \"src/builtins/proxy-get-property.tq\",\n  \"src/builtins/proxy-get-prototype-of.tq\",\n  \"src/builtins/proxy-has-property.tq\",\n  \"src/builtins/proxy-is-extensible.tq\",\n  \"src/builtins/proxy-prevent-extensions.tq\",\n  \"src/builtins/proxy-revocable.tq\",\n  \"src/builtins/proxy-revoke.tq\",\n  \"src/builtins/proxy-set-property.tq\",\n  \"src/builtins/proxy-set-prototype-of.tq\",\n  \"src/builtins/proxy.tq\",\n  \"src/builtins/reflect.tq\",\n  \"src/builtins/regexp-exec.tq\",\n  \"src/builtins/regexp-match-all.tq\",\n  \"src/builtins/regexp-match.tq\",\n  \"src/builtins/regexp-replace.tq\",\n  \"src/builtins/regexp-search.tq\",\n  \"src/builtins/regexp-source.tq\",\n  \"src/builtins/regexp-split.tq\",\n  \"src/builtins/regexp-test.tq\",\n  \"src/builtins/regexp.tq\",\n  \"src/builtins/set-difference.tq\",\n  \"src/builtins/set-intersection.tq\",\n  \"src/builtins/set-is-disjoint-from.tq\",\n  \"src/builtins/set-is-subset-of.tq\",\n  \"src/builtins/set-is-superset-of.tq\",\n  \"src/builtins/set-symmetric-difference.tq\",\n  \"src/builtins/set-union.tq\",\n  \"src/builtins/string-at.tq\",\n  \"src/builtins/string-endswith.tq\",\n  \"src/builtins/string-html.tq\",\n  \"src/builtins/string-includes.tq\",\n  \"src/builtins/string-indexof.tq\",\n  \"src/builtins/string-iswellformed.tq\",\n  \"src/builtins/string-iterator.tq\",\n  \"src/builtins/string-match-search.tq\",\n  \"src/builtins/string-pad.tq\",\n  \"src/builtins/string-repeat.tq\",\n  \"src/builtins/string-replaceall.tq\",\n  \"src/builtins/string-slice.tq\",\n  \"src/builtins/string-startswith.tq\",\n  \"src/builtins/string-substr.tq\",\n  \"src/builtins/string-substring.tq\",\n  \"src/builtins/string-towellformed.tq\",\n  \"src/builtins/string-trim.tq\",\n  \"src/builtins/suppressed-error.tq\",\n  \"src/builtins/symbol.tq\",\n  \"src/builtins/torque-internal.tq\",\n  \"src/builtins/typed-array-at.tq\",\n  \"src/builtins/typed-array-createtypedarray.tq\",\n  \"src/builtins/typed-array-every.tq\",\n  \"src/builtins/typed-array-entries.tq\",\n  \"src/builtins/typed-array-filter.tq\",\n  \"src/builtins/typed-array-find.tq\",\n  \"src/builtins/typed-array-findindex.tq\",\n  \"src/builtins/typed-array-findlast.tq\",\n  \"src/builtins/typed-array-findlastindex.tq\",\n  \"src/builtins/typed-array-foreach.tq\",\n  \"src/builtins/typed-array-from.tq\",\n  \"src/builtins/typed-array-keys.tq\",\n  \"src/builtins/typed-array-of.tq\",\n  \"src/builtins/typed-array-reduce.tq\",\n  \"src/builtins/typed-array-reduceright.tq\",\n  \"src/builtins/typed-array-set.tq\",\n  \"src/builtins/typed-array-slice.tq\",\n  \"src/builtins/typed-array-some.tq\",\n  \"src/builtins/typed-array-sort.tq\",\n  \"src/builtins/typed-array-subarray.tq\",\n  \"src/builtins/typed-array-to-reversed.tq\",\n  \"src/builtins/typed-array-to-sorted.tq\",\n  \"src/builtins/typed-array-values.tq\",\n  \"src/builtins/typed-array-with.tq\",\n  \"src/builtins/typed-array.tq\",\n  \"src/builtins/weak-ref.tq\",\n  \"src/ic/handler-configuration.tq\",\n  \"src/objects/allocation-site.tq\",\n  \"src/objects/api-callbacks.tq\",\n  \"src/objects/arguments.tq\",\n  \"src/objects/bigint.tq\",\n  \"src/objects/call-site-info.tq\",\n  \"src/objects/cell.tq\",\n  \"src/objects/bytecode-array.tq\",\n  \"src/objects/contexts.tq\",\n  \"src/objects/data-handler.tq\",\n  \"src/objects/debug-objects.tq\",\n  \"src/objects/descriptor-array.tq\",\n  \"src/objects/embedder-data-array.tq\",\n  \"src/objects/feedback-cell.tq\",\n  \"src/objects/feedback-vector.tq\",\n  \"src/objects/fixed-array.tq\",\n  \"src/objects/foreign.tq\",\n  \"src/objects/free-space.tq\",\n  \"src/objects/heap-number.tq\",\n  \"src/objects/heap-object.tq\",\n  \"src/objects/js-array-buffer.tq\",\n  \"src/objects/js-array.tq\",\n  \"src/objects/js-atomics-synchronization.tq\",\n  \"src/objects/js-collection-iterator.tq\",\n  \"src/objects/js-collection.tq\",\n  \"src/objects/js-disposable-stack.tq\",\n  \"src/objects/js-function.tq\",\n  \"src/objects/js-generator.tq\",\n  \"src/objects/js-iterator-helpers.tq\",\n  \"src/objects/js-objects.tq\",\n  \"src/objects/js-promise.tq\",\n  \"src/objects/js-proxy.tq\",\n  \"src/objects/js-raw-json.tq\",\n  \"src/objects/js-regexp-string-iterator.tq\",\n  \"src/objects/js-regexp.tq\",\n  \"src/objects/js-shadow-realm.tq\",\n  \"src/objects/js-shared-array.tq\",\n  \"src/objects/js-struct.tq\",\n  \"src/objects/js-temporal-objects.tq\",\n  \"src/objects/js-weak-refs.tq\",\n  \"src/objects/literal-objects.tq\",\n  \"src/objects/map.tq\",\n  \"src/objects/megadom-handler.tq\",\n  \"src/objects/microtask.tq\",\n  \"src/objects/module.tq\",\n  \"src/objects/name.tq\",\n  \"src/objects/oddball.tq\",\n  \"src/objects/hole.tq\",\n  \"src/objects/trusted-object.tq\",\n  \"src/objects/ordered-hash-table.tq\",\n  \"src/objects/primitive-heap-object.tq\",\n  \"src/objects/promise.tq\",\n  \"src/objects/property-array.tq\",\n  \"src/objects/property-cell.tq\",\n  \"src/objects/property-descriptor-object.tq\",\n  \"src/objects/prototype-info.tq\",\n  \"src/objects/regexp-match-info.tq\",\n  \"src/objects/scope-info.tq\",\n  \"src/objects/script.tq\",\n  \"src/objects/shared-function-info.tq\",\n  \"src/objects/source-text-module.tq\",\n  \"src/objects/string.tq\",\n  \"src/objects/struct.tq\",\n  \"src/objects/swiss-hash-table-helpers.tq\",\n  \"src/objects/swiss-name-dictionary.tq\",\n  \"src/objects/synthetic-module.tq\",\n  \"src/objects/template-objects.tq\",\n  \"src/objects/templates.tq\",\n  \"src/objects/torque-defined-classes.tq\",\n  \"src/objects/turbofan-types.tq\",\n  \"src/objects/turboshaft-types.tq\",\n  \"test/torque/test-torque.tq\",\n  \"third_party/v8/builtins/array-sort.tq\",\n]\n\nif (v8_enable_i18n_support) {\n  torque_files += [\n    \"src/objects/intl-objects.tq\",\n    \"src/objects/js-break-iterator.tq\",\n    \"src/objects/js-collator.tq\",\n    \"src/objects/js-date-time-format.tq\",\n    \"src/objects/js-display-names.tq\",\n    \"src/objects/js-duration-format.tq\",\n    \"src/objects/js-list-format.tq\",\n    \"src/objects/js-locale.tq\",\n    \"src/objects/js-number-format.tq\",\n    \"src/objects/js-plural-rules.tq\",\n    \"src/objects/js-relative-time-format.tq\",\n    \"src/objects/js-segment-iterator.tq\",\n    \"src/objects/js-segmenter.tq\",\n    \"src/objects/js-segments.tq\",\n  ]\n}\n\nif (v8_enable_webassembly) {\n  torque_files += [\n    \"src/builtins/js-to-js.tq\",\n    \"src/builtins/js-to-wasm.tq\",\n    \"src/builtins/wasm.tq\",\n    \"src/builtins/wasm-strings.tq\",\n    \"src/builtins/wasm-to-js.tq\",\n    \"src/debug/debug-wasm-objects.tq\",\n    \"src/wasm/wasm-objects.tq\",\n  ]\n}\n\n# Template for running torque\n# When building with v8_verify_torque_generation_invariance=true we need\n# to be able to run torque for both 32 and 64 bits in the same build\ntemplate(\"run_torque\") {\n  if (target_name == \"\") {\n    suffix = \"\"\n  } else {\n    suffix = \"_$target_name\"\n  }\n\n  toolchain = invoker.toolchain\n\n  action(\"run_torque\" + suffix) {\n    visibility = [\n      \":*\",\n      \"test/cctest/:*\",\n      \"tools/debug_helper/:*\",\n      \"tools/gcmole/:*\",\n    ]\n\n    deps = [ \":torque($toolchain)\" ]\n\n    script = \"tools/run.py\"\n\n    sources = torque_files\n\n    destination_folder = \"$target_gen_dir/torque-generated$suffix\"\n\n    outputs = [\n      \"$destination_folder/bit-fields.h\",\n      \"$destination_folder/builtin-definitions.h\",\n      \"$destination_folder/class-debug-readers.cc\",\n      \"$destination_folder/class-debug-readers.h\",\n      \"$destination_folder/class-forward-declarations.h\",\n      \"$destination_folder/class-verifiers.cc\",\n      \"$destination_folder/class-verifiers.h\",\n      \"$destination_folder/csa-types.h\",\n      \"$destination_folder/debug-macros.cc\",\n      \"$destination_folder/debug-macros.h\",\n      \"$destination_folder/enum-verifiers.cc\",\n      \"$destination_folder/exported-macros-assembler.cc\",\n      \"$destination_folder/exported-macros-assembler.h\",\n      \"$destination_folder/factory.cc\",\n      \"$destination_folder/factory.inc\",\n      \"$destination_folder/instance-types.h\",\n      \"$destination_folder/interface-descriptors.inc\",\n      \"$destination_folder/objects-body-descriptors-inl.inc\",\n      \"$destination_folder/objects-printer.cc\",\n      \"$destination_folder/visitor-lists.h\",\n    ]\n\n    foreach(file, torque_files) {\n      filetq = string_replace(file, \".tq\", \"-tq\")\n      outputs += [\n        \"$destination_folder/$filetq-csa.cc\",\n        \"$destination_folder/$filetq-csa.h\",\n        \"$destination_folder/$filetq-inl.inc\",\n        \"$destination_folder/$filetq.cc\",\n        \"$destination_folder/$filetq.inc\",\n      ]\n    }\n\n    args = [\n      \"./\" + rebase_path(\n              get_label_info(\":torque($toolchain)\", \"root_out_dir\") + \"/torque\",\n              root_build_dir),\n      \"-o\",\n      rebase_path(\"$destination_folder\", root_build_dir),\n      \"-v8-root\",\n      rebase_path(\".\", root_build_dir),\n    ]\n    if (v8_annotate_torque_ir) {\n      args += [ \"-annotate-ir\" ]\n    }\n    if (defined(invoker.args)) {\n      args += invoker.args\n    }\n    args += torque_files\n  }\n}\n\n# Default run_torque action\nrun_torque(\"\") {\n  toolchain = v8_generator_toolchain\n}\n\nif (v8_verify_torque_generation_invariance) {\n  run_torque(\"x86\") {\n    toolchain = \"//build/toolchain/linux:clang_x86\"\n  }\n\n  run_torque(\"x64\") {\n    args = [ \"-m32\" ]\n    toolchain = \"//build/toolchain/linux:clang_x64\"\n  }\n\n  action(\"compare_torque_runs\") {\n    deps = [\n      \":run_torque_x64\",\n      \":run_torque_x86\",\n    ]\n    report_file = \"$target_gen_dir/torque_comparison_results.txt\"\n    script = \"tools/compare_torque_output.py\"\n    args = [\n      rebase_path(\"$target_gen_dir/torque-generated_x64\", root_build_dir),\n      rebase_path(\"$target_gen_dir/torque-generated_x86\", root_build_dir),\n      rebase_path(report_file, root_build_dir),\n    ]\n    outputs = [ report_file ]\n  }\n}\n\ngroup(\"v8_maybe_icu\") {\n  if (v8_enable_i18n_support) {\n    public_deps = [ v8_icu_path ]\n  }\n}\n\ngroup(\"v8_abseil\") {\n  public_deps = [ \"//third_party/abseil-cpp:absl\" ]\n\n  public_configs = [\n    \"//third_party/abseil-cpp:absl_define_config\",\n    \"//third_party/abseil-cpp:absl_include_config\",\n  ]\n}\n\ngroup(\"zoslib\") {\n  if (current_os == \"zos\") {\n    deps = [ \"//third_party/zoslib\" ]\n  }\n}\n\nv8_header_set(\"torque_runtime_support\") {\n  visibility = [ \":*\" ]\n\n  sources = [ \"src/torque/runtime-support.h\" ]\n\n  configs = [ \":internal_config\" ]\n}\n\nv8_source_set(\"torque_generated_initializers\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  deps = [\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \":v8_base_without_compiler\",\n    \":v8_tracing\",\n  ]\n\n  public_deps = [\n    \":torque_runtime_support\",\n    \":v8_abseil\",\n    \":v8_maybe_icu\",\n  ]\n\n  sources = [\n    \"$target_gen_dir/torque-generated/csa-types.h\",\n    \"$target_gen_dir/torque-generated/enum-verifiers.cc\",\n    \"$target_gen_dir/torque-generated/exported-macros-assembler.cc\",\n    \"$target_gen_dir/torque-generated/exported-macros-assembler.h\",\n  ]\n  foreach(file, torque_files) {\n    filetq = string_replace(file, \".tq\", \"-tq\")\n    sources += [\n      \"$target_gen_dir/torque-generated/$filetq-csa.cc\",\n      \"$target_gen_dir/torque-generated/$filetq-csa.h\",\n    ]\n  }\n\n  configs = [ \":internal_config\" ]\n\n  if (v8_symbol_level > 1) {\n    # Symbols cause huge compile time on some bigger torque files, see\n    # https://crbug.com/1472715. Thus remove any symbol configs added in v8.gni\n    # and instead add the \"minimal_symbols\" config.\n    v8_add_configs -=\n        filter_include(v8_add_configs, [ \"//build/config/compiler:*symbols\" ])\n    if (v8_symbol_level == symbol_level) {\n      v8_remove_configs += [ \"//build/config/compiler:default_symbols\" ]\n    }\n    configs += [ \"//build/config/compiler:minimal_symbols\" ]\n  }\n}\n\nv8_source_set(\"torque_generated_definitions\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  deps = [\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \":v8_internal_headers\",\n    \":v8_libbase\",\n    \":v8_tracing\",\n  ]\n\n  public_deps = [\n    \":v8_abseil\",\n    \":v8_maybe_icu\",\n  ]\n\n  sources = [\n    \"$target_gen_dir/torque-generated/class-forward-declarations.h\",\n    \"$target_gen_dir/torque-generated/class-verifiers.cc\",\n    \"$target_gen_dir/torque-generated/class-verifiers.h\",\n    \"$target_gen_dir/torque-generated/factory.cc\",\n    \"$target_gen_dir/torque-generated/objects-printer.cc\",\n  ]\n  foreach(file, torque_files) {\n    filetq = string_replace(file, \".tq\", \"-tq\")\n    sources += [\n      \"$target_gen_dir/torque-generated/$filetq-inl.inc\",\n      \"$target_gen_dir/torque-generated/$filetq.cc\",\n      \"$target_gen_dir/torque-generated/$filetq.inc\",\n    ]\n  }\n\n  configs = [ \":internal_config\" ]\n}\n\naction(\"generate_bytecode_builtins_list\") {\n  script = \"tools/run.py\"\n  outputs = [ \"$target_gen_dir/builtins-generated/bytecodes-builtins-list.h\" ]\n  deps = [ \":bytecode_builtins_list_generator($v8_generator_toolchain)\" ]\n  args = [\n    \"./\" + rebase_path(\n            get_label_info(\n                    \":bytecode_builtins_list_generator($v8_generator_toolchain)\",\n                    \"root_out_dir\") + \"/bytecode_builtins_list_generator\",\n            root_build_dir),\n    rebase_path(\"$target_gen_dir/builtins-generated/bytecodes-builtins-list.h\",\n                root_build_dir),\n  ]\n}\n\n# Template to generate different V8 snapshots based on different runtime flags.\n# Can be invoked with run_mksnapshot(<name>). The target will resolve to\n# run_mksnapshot_<name>. If <name> is \"default\", no file suffixes will be used.\n# Otherwise files are suffixed, e.g. embedded_<name>.S and\n# snapshot_blob_<name>.bin.\n#\n# The template exposes the variables:\n#   args: additional flags for mksnapshots\n#   embedded_suffix: a camel case suffix for method names in the embedded\n#       snapshot.\ntemplate(\"run_mksnapshot\") {\n  name = target_name\n  if (name == \"default\") {\n    suffix = \"\"\n  } else {\n    suffix = \"_$name\"\n  }\n  action(\"run_mksnapshot_\" + name) {\n    deps = [ \":mksnapshot($v8_snapshot_toolchain)\" ]\n    if (v8_verify_deterministic_mksnapshot) {\n      # We archive the snapshot executable when verifying snapshot\n      # determinism to ease debugging.\n      data_deps = [ \":mksnapshot($v8_snapshot_toolchain)\" ]\n    }\n\n    script = \"tools/run.py\"\n\n    sources = []\n\n    if (v8_depend_on_icu_data_file) {\n      deps += [ \"//third_party/icu:copy_icudata\" ]\n      if (host_byteorder == \"big\") {\n        sources += [ \"$root_out_dir/icudtb.dat\" ]\n      } else {\n        sources += [ \"$root_out_dir/icudtl.dat\" ]\n      }\n    }\n\n    outputs = []\n\n    data = []\n\n    if (current_os != \"zos\") {\n      ext = \"S\"\n    } else {\n      ext = \"s\"\n    }\n\n    args = []\n\n    if (v8_verify_deterministic_mksnapshot) {\n      # Output redirection must be the first argument to run.py. We capture\n      # output when verifying snapshot determinism for debugging.\n      args += [\n        \"--redirect-stdout\",\n        rebase_path(\"$root_out_dir/mksnapshot_output${suffix}.log\",\n                    root_build_dir),\n      ]\n      data += [ \"$root_out_dir/mksnapshot_output${suffix}.log\" ]\n    }\n\n    args += [\n      \"./\" + rebase_path(get_label_info(\":mksnapshot($v8_snapshot_toolchain)\",\n                                        \"root_out_dir\") + \"/mksnapshot\",\n                         root_build_dir),\n      \"--turbo_instruction_scheduling\",\n      \"--stress-turbo-late-spilling\",\n\n      # In cross builds, the snapshot may be generated for both the host and\n      # target toolchains.  The same host binary is used to generate both, so\n      # mksnapshot needs to know which target OS to use at runtime.  It's weird,\n      # but the target OS is really |current_os|.\n      \"--target_os=$current_os\",\n      \"--target_arch=$current_cpu\",\n\n      \"--embedded_src\",\n      rebase_path(\"$target_gen_dir/embedded${suffix}.${ext}\", root_build_dir),\n\n      # mksnapshot runs in predictable mode to create deterministic snapshots.\n      # Note this flag is also set implicitly by mksnapshot itself (see\n      # mksnapshot.cc). We set it here as well for clarity.\n      \"--predictable\",\n\n      # Disable ICs globally in mksnapshot to avoid problems with Code handlers.\n      # See https://crbug.com/345280736.\n      # TODO(jgruber): Re-enable once a better fix is available.\n      # Note this flag is also set implicitly by mksnapshot itself (see\n      # mksnapshot.cc). We set it here as well for clarity.\n      \"--no-use-ic\",\n    ]\n\n    if (v8_verify_deterministic_mksnapshot) {\n      # Flags that help debugging snapshot determinism.\n      args += [ \"--trace-read-only-promotion\" ]\n    }\n\n    if (v8_log_builtins_block_count_input != \"\") {\n      args += [\n        \"--trace-turbo\",\n\n        \"--turbo-log-builtins-count-input\",\n        v8_log_builtins_block_count_input,\n      ]\n    }\n\n    if (v8_enable_builtins_profiling) {\n      args += [ \"--turbo-profiling\" ]\n    }\n    if (v8_enable_builtins_profiling_verbose) {\n      args += [ \"--turbo-profiling-verbose\" ]\n    }\n    if (v8_builtins_profiling_log_file != \"\") {\n      sources += [ v8_builtins_profiling_log_file ]\n      args += [\n        \"--turbo-profiling-input\",\n        rebase_path(v8_builtins_profiling_log_file, root_build_dir),\n\n        # Replace this with --warn-about-builtin-profile-data to see the full\n        # list of builtins with incompatible profiles.\n        \"--abort-on-bad-builtin-profile-data\",\n      ]\n\n      if (!v8_enable_builtins_profiling && v8_enable_builtins_reordering) {\n        args += [ \"--reorder-builtins\" ]\n      }\n    }\n\n    if (v8_enable_turboshaft_csa) {\n      args += [ \"--turboshaft-csa\" ]\n    }\n\n    # This is needed to distinguish between generating code for the simulator\n    # and cross-compiling. The latter may need to run code on the host with the\n    # simulator but cannot use simulator-specific instructions.\n    if (target_is_simulator) {\n      args += [ \"--target_is_simulator\" ]\n    }\n\n    args += invoker.args\n\n    outputs += [ \"$target_gen_dir/embedded${suffix}.${ext}\" ]\n    if (invoker.embedded_variant != \"\") {\n      args += [\n        \"--embedded_variant\",\n        invoker.embedded_variant,\n      ]\n    }\n\n    if (v8_random_seed != \"0\") {\n      args += [\n        \"--random-seed\",\n        v8_random_seed,\n      ]\n    }\n\n    if (v8_os_page_size != \"0\") {\n      args += [\n        \"--v8_os_page_size\",\n        v8_os_page_size,\n      ]\n    }\n\n    if (v8_use_external_startup_data) {\n      outputs += [ \"$root_out_dir/snapshot_blob${suffix}.bin\" ]\n      data += [ \"$root_out_dir/snapshot_blob${suffix}.bin\" ]\n      args += [\n        \"--startup_blob\",\n        rebase_path(\"$root_out_dir/snapshot_blob${suffix}.bin\", root_build_dir),\n      ]\n    } else {\n      outputs += [ \"$target_gen_dir/snapshot${suffix}.cc\" ]\n      args += [\n        \"--startup_src\",\n        rebase_path(\"$target_gen_dir/snapshot${suffix}.cc\", root_build_dir),\n      ]\n    }\n\n    if (v8_embed_script != \"\") {\n      sources += [ v8_embed_script ]\n      args += [ rebase_path(v8_embed_script, root_build_dir) ]\n    }\n\n    if (v8_enable_snapshot_code_comments) {\n      args += [ \"--code-comments\" ]\n    }\n\n    if (v8_enable_snapshot_native_code_counters) {\n      args += [ \"--native-code-counters\" ]\n    } else {\n      # --native-code-counters is the default in debug mode so make sure we can\n      # unset it.\n      args += [ \"--no-native-code-counters\" ]\n    }\n\n    if (v8_enable_fast_mksnapshot) {\n      args += [ \"--no-turbo-verify-allocation\" ]\n\n      if (v8_current_cpu == \"x86\" || v8_current_cpu == \"x64\") {\n        args += [ \"--no-turbo-rewrite-far-jumps\" ]\n      }\n\n      if (v8_enable_debugging_features && v8_enable_slow_dchecks) {\n        # mksnapshot only accepts this flag if ENABLE_SLOW_DCHECKS is defined.\n        args += [ \"--no-enable-slow-asserts\" ]\n      }\n    }\n\n    if (v8_enable_concurrent_mksnapshot) {\n      args += [\n        \"--concurrent-builtin-generation\",\n\n        # Use all the cores for concurrent builtin generation.\n        \"--concurrent-turbofan-max-threads=0\",\n      ]\n    }\n\n    if (v8_enable_verify_heap) {\n      args += [ \"--verify-heap\" ]\n    }\n  }\n}\n\nrun_mksnapshot(\"default\") {\n  args = []\n  embedded_variant = \"Default\"\n}\nif (emit_builtins_as_inline_asm) {\n  asm_to_inline_asm(\"default\") {\n    args = []\n  }\n}\n\nif (v8_verify_deterministic_mksnapshot) {\n  runs = [\n    \"run_0\",\n    \"run_1\",\n    \"run_2\",\n    \"run_3\",\n    \"run_4\",\n    \"run_5\",\n    \"run_6\",\n  ]\n\n  foreach(i, runs) {\n    run_mksnapshot(i) {\n      args = []\n      embedded_variant = \"Default\"\n    }\n  }\n\n  group(\"snapshot_set\") {\n    data_deps = []\n    foreach(i, runs) {\n      data_deps += [ \":run_mksnapshot_$i\" ]\n    }\n  }\n\n  action(\"verify_deterministic_mksnapshot\") {\n    deps = [ \":snapshot_set\" ]\n    report_file = \"$target_gen_dir/mksnapshot_comparison.txt\"\n    script = \"tools/snapshot/compare_mksnapshot_output.py\"\n    args = [\n      rebase_path(\"$report_file\", root_build_dir),\n      rebase_path(\"$target_gen_dir\", root_build_dir),\n      rebase_path(\"$root_out_dir\", root_build_dir),\n      \"7\",  # Length of the 'runs' list.\n    ]\n    outputs = [ report_file ]\n  }\n}\n\nif (v8_verify_builtins_compatibility) {\n  # This specifies a separate mksnapshot target for each of:\n  # x86, x64, arm, arm64.\n  hashes = \"builtins_hashes_$v8_current_cpu\"\n  run_mksnapshot(\"dump_$v8_current_cpu\") {\n    args = [\n      \"--dump-builtins-hashes-to-file\",\n      hashes,\n    ]\n    embedded_variant = \"Default\"\n  }\n\n  # This template defines a comparison action for the architecture the pgo\n  # profile is made for (e.g. x64) and the architecture the profile is used\n  # for (e.g. arm64 with toolchain x64_v8_arm64).\n  template(\"verify_builtins_hashes\") {\n    forward_variables_from(invoker,\n                           [\n                             \"profile_arch\",\n                             \"target_arch\",\n                           ])\n    profile_toolchain = \"//build/toolchain/linux:clang_${profile_arch}\"\n    target_toolchain =\n        \"//build/toolchain/linux:clang_${profile_arch}_v8_${target_arch}\"\n    action(\"compare_builtins_$target_name\") {\n      deps = [\n        \":run_mksnapshot_dump_${profile_arch}($profile_toolchain)\",\n        \":run_mksnapshot_dump_${target_arch}($target_toolchain)\",\n      ]\n      report_file = \"$root_build_dir/builtins_comparison_$target_name\"\n      script = \"tools/builtins-pgo/assert_builtins_hashes.py\"\n      args = [\n        \"builtins_hashes_${profile_arch}\",\n        \"builtins_hashes_${target_arch}\",\n        rebase_path(report_file, root_build_dir),\n      ]\n      outputs = [ report_file ]\n    }\n  }\n\n  verify_builtins_hashes(\"x86_arm\") {\n    profile_arch = \"x86\"\n    target_arch = \"arm\"\n  }\n\n  verify_builtins_hashes(\"x64_arm64\") {\n    profile_arch = \"x64\"\n    target_arch = \"arm64\"\n  }\n\n  group(\"verify_all_builtins_hashes\") {\n    deps = [\n      \":compare_builtins_x64_arm64\",\n      \":compare_builtins_x86_arm\",\n    ]\n  }\n}\n\naction(\"v8_dump_build_config\") {\n  script = \"tools/testrunner/utils/dump_build_config.py\"\n  outputs = [ \"$root_out_dir/v8_build_config.json\" ]\n  is_DEBUG_defined = v8_enable_debugging_features || v8_dcheck_always_on\n  is_full_debug = v8_enable_debugging_features && !v8_optimized_debug\n\n  arch = v8_target_cpu\n  if (v8_target_cpu == \"x86\") {\n    arch = \"ia32\"\n  }\n\n  mips_arch_variant_var = \"\"\n  mips_use_msa_var = false\n  if (arch == \"mips64\" || arch == \"mips64el\") {\n    mips_arch_variant_var = mips_arch_variant\n    mips_use_msa_var = mips_use_msa\n  }\n\n  js_shared_memory = !v8_disable_write_barriers\n  simd_mips = mips_arch_variant_var == \"r6\" && mips_use_msa\n  simulator_run = target_cpu != v8_target_cpu\n  use_sanitizer = is_asan || is_cfi || is_msan || is_tsan || is_ubsan\n\n  # This lists all build-time switches consumed by the test framework. All\n  # switches can be used automatically in the status files as is - no\n  # further files need to be modified.\n  # However, the switch also has to be entered in `build_config_content` in\n  # `bazel/defs.bzl` so that the switch also works for tests triggered by bazel.\n  #\n  # Naming conventions: Keep switch names short and remove unnecessary\n  # qualifiers. Drop v8_enable_, v8_, is_ where possible.\n  # Keep only qualifiers that disambiguate the switches from other things.\n  # Examples: has_turbofan disambiguates from the turbofan runtime variant,\n  # is_android disambiguates from the android keyword in status files,\n  # v8_cfi disambiguates from the global cfi flag.\n  args = [\n    rebase_path(\"$root_out_dir/v8_build_config.json\", root_build_dir),\n    \"arch=\\\"$arch\\\"\",\n    \"asan=$is_asan\",\n    \"atomic_object_field_writes=$v8_enable_atomic_object_field_writes\",\n    \"cet_shadow_stack=$v8_enable_cet_shadow_stack\",\n    \"cfi=$is_cfi\",\n    \"clang=$is_clang\",\n    \"clang_coverage=$use_clang_coverage\",\n    \"code_comments=$v8_code_comments\",\n    \"component_build=$is_component_build\",\n    \"concurrent_marking=$v8_enable_concurrent_marking\",\n    \"conservative_stack_scanning=$v8_enable_conservative_stack_scanning\",\n    \"current_cpu=\\\"$current_cpu\\\"\",\n    \"dcheck_always_on=$v8_dcheck_always_on\",\n    \"debug_code=$v8_enable_debug_code\",\n    \"DEBUG_defined=$is_DEBUG_defined\",\n    \"debugging_features=$v8_enable_debugging_features\",\n    \"dict_property_const_tracking=$v8_dict_property_const_tracking\",\n    \"direct_handle=$v8_enable_direct_handle\",\n    \"disassembler=$v8_enable_disassembler\",\n    \"full_debug=$is_full_debug\",\n    \"gdbjit=$v8_enable_gdbjit\",\n    \"has_jitless=$v8_jitless\",\n    \"has_maglev=$v8_enable_maglev\",\n    \"has_turbofan=$v8_enable_turbofan\",\n    \"has_webassembly=$v8_enable_webassembly\",\n    \"has_wasm_interpreter=$v8_enable_drumbrake\",\n    \"i18n=$v8_enable_i18n_support\",\n    \"is_android=$is_android\",\n    \"is_ios=$is_ios\",\n    \"js_shared_memory=$js_shared_memory\",\n    \"lite_mode=$v8_enable_lite_mode\",\n    \"local_off_stack_check=$v8_enable_local_off_stack_check\",\n    \"mips_arch_variant=\\\"$mips_arch_variant_var\\\"\",\n    \"mips_use_msa=$mips_use_msa_var\",\n    \"msan=$is_msan\",\n    \"official_build=$is_official_build\",\n    \"pointer_compression=$v8_enable_pointer_compression\",\n    \"pointer_compression_shared_cage=$v8_enable_pointer_compression_shared_cage\",\n    \"runtime_call_stats=$v8_enable_runtime_call_stats\",\n    \"sandbox=$v8_enable_sandbox\",\n    \"simd_mips=$simd_mips\",\n    \"simulator_run=$simulator_run\",\n    \"single_generation=$v8_enable_single_generation\",\n    \"slow_dchecks=$v8_enable_slow_dchecks\",\n    \"target_cpu=\\\"$target_cpu\\\"\",\n    \"tsan=$is_tsan\",\n    \"ubsan=$is_ubsan\",\n    \"use_sanitizer=$use_sanitizer\",\n    \"v8_cfi=$v8_control_flow_integrity\",\n    \"v8_current_cpu=\\\"$v8_current_cpu\\\"\",\n    \"v8_target_cpu=\\\"$v8_target_cpu\\\"\",\n    \"verify_csa=$v8_enable_verify_csa\",\n    \"verify_heap=$v8_enable_verify_heap\",\n    \"verify_predictable=$v8_enable_verify_predictable\",\n    \"wasm_random_fuzzers=$v8_wasm_random_fuzzers\",\n    \"memory_corruption_api=$v8_enable_memory_corruption_api\",\n    \"leaptiering=$v8_enable_leaptiering\",\n\n    # Please add new switches also in `build_config_content` in `bazel/defs.bzl`\n    # so that the switches also work for tests triggered by bazel.\n  ]\n}\n\n# Generate a json file containing essential V8 build flags.\n# This json file is consumed by embedders like Node.js and Electron to provide\n# information for building third party modules. There is currently no exact\n# rules on which build flags should be outputed in the json file, but anything\n# affecting the |external_v8_defines| list must be listed here and added to\n# the common.gypi file in Node.js repo.\ngenerated_file(\"v8_generate_features_json\") {\n  outputs = [ \"$root_out_dir/v8_features.json\" ]\n  output_conversion = \"json\"\n  contents = {\n    v8_deprecation_warnings = v8_deprecation_warnings\n    v8_enable_31bit_smis_on_64bit_arch = v8_enable_31bit_smis_on_64bit_arch\n    v8_enable_conservative_stack_scanning =\n        v8_enable_conservative_stack_scanning\n    v8_enable_direct_handle = v8_enable_direct_handle\n    v8_enable_extensible_ro_snapshot = v8_enable_extensible_ro_snapshot\n    v8_enable_gdbjit = v8_enable_gdbjit\n    v8_enable_hugepage = v8_enable_hugepage\n    v8_enable_i18n_support = v8_enable_i18n_support\n    v8_enable_javascript_promise_hooks = v8_enable_javascript_promise_hooks\n    v8_enable_lite_mode = v8_enable_lite_mode\n    v8_enable_map_packing = v8_enable_map_packing\n    v8_enable_object_print = v8_enable_object_print\n    v8_enable_pointer_compression = v8_enable_pointer_compression\n    v8_enable_pointer_compression_shared_cage =\n        v8_enable_pointer_compression_shared_cage\n    v8_enable_sandbox = v8_enable_sandbox\n    v8_enable_short_builtin_calls = v8_enable_short_builtin_calls\n    v8_enable_v8_checks = v8_enable_v8_checks\n    v8_enable_memory_accounting_checks = v8_enable_memory_accounting_checks\n    v8_enable_webassembly = v8_enable_webassembly\n    v8_enable_zone_compression = v8_enable_zone_compression\n    v8_imminent_deprecation_warnings = v8_imminent_deprecation_warnings\n    v8_optimized_debug = v8_optimized_debug\n    v8_random_seed = v8_random_seed\n    v8_use_perfetto = v8_use_perfetto\n    v8_use_siphash = v8_use_siphash\n  }\n}\n\n###############################################################################\n# Source Sets (aka static libraries)\n#\n\nv8_source_set(\"v8_snapshot\") {\n  # Let external targets depend on v8_snapshot.\n  if (v8_use_external_startup_data) {\n    visibility = [ \":*\" ]  # Targets in this file can depend on this.\n  }\n\n  deps = [\n    \":v8_internal_headers\",\n    \":v8_libbase\",\n    \":v8_tracing\",\n  ]\n  public_deps = [\n    # This should be public so downstream targets can declare the snapshot\n    # output file as their inputs.\n    \":run_mksnapshot_default\",\n  ]\n\n  # Do not publicize any header to remove build dependency.\n  public = []\n\n  sources = [ \"src/init/setup-isolate-deserialize.cc\" ]\n  if (emit_builtins_as_inline_asm) {\n    deps += [ \":asm_to_inline_asm_default\" ]\n    sources += [ \"$target_gen_dir/embedded.cc\" ]\n  } else {\n    if (current_os != \"zos\") {\n      sources += [ \"$target_gen_dir/embedded.S\" ]\n    } else {\n      sources += [ \"$target_gen_dir/embedded.s\" ]\n    }\n  }\n\n  configs = [ \":internal_config\" ]\n\n  if (v8_use_external_startup_data) {\n    deps += [ \":v8_base\" ]\n\n    sources += [ \"src/snapshot/snapshot-external.cc\" ]\n  } else {\n    public_deps += [\n      \":v8_abseil\",\n      \":v8_maybe_icu\",\n    ]\n\n    sources += [ \"$target_gen_dir/snapshot.cc\" ]\n  }\n}\n\nv8_source_set(\"v8_initializers\") {\n  visibility = [\n    \":*\",\n    \"test/cctest:*\",\n  ]\n\n  allow_circular_includes_from = [ \":torque_generated_initializers\" ]\n\n  deps = [\n    \":torque_generated_initializers\",\n    \":v8_base_without_compiler\",\n    \":v8_shared_internal_headers\",\n    \":v8_tracing\",\n  ]\n\n  sources = [\n    ### gcmole(all) ###\n    \"src/builtins/builtins-array-gen.cc\",\n    \"src/builtins/builtins-array-gen.h\",\n    \"src/builtins/builtins-async-function-gen.cc\",\n    \"src/builtins/builtins-async-gen.cc\",\n    \"src/builtins/builtins-async-gen.h\",\n    \"src/builtins/builtins-async-generator-gen.cc\",\n    \"src/builtins/builtins-async-iterator-gen.cc\",\n    \"src/builtins/builtins-bigint-gen.cc\",\n    \"src/builtins/builtins-bigint-gen.h\",\n    \"src/builtins/builtins-call-gen.cc\",\n    \"src/builtins/builtins-call-gen.h\",\n    \"src/builtins/builtins-collections-gen.cc\",\n    \"src/builtins/builtins-collections-gen.h\",\n    \"src/builtins/builtins-constructor-gen.cc\",\n    \"src/builtins/builtins-constructor-gen.h\",\n    \"src/builtins/builtins-constructor.h\",\n    \"src/builtins/builtins-conversion-gen.cc\",\n    \"src/builtins/builtins-data-view-gen.h\",\n    \"src/builtins/builtins-date-gen.cc\",\n    \"src/builtins/builtins-generator-gen.cc\",\n    \"src/builtins/builtins-global-gen.cc\",\n    \"src/builtins/builtins-handler-gen.cc\",\n    \"src/builtins/builtins-ic-gen.cc\",\n    \"src/builtins/builtins-internal-gen.cc\",\n    \"src/builtins/builtins-interpreter-gen.cc\",\n    \"src/builtins/builtins-intl-gen.cc\",\n    \"src/builtins/builtins-iterator-gen.cc\",\n    \"src/builtins/builtins-iterator-gen.h\",\n    \"src/builtins/builtins-lazy-gen.cc\",\n    \"src/builtins/builtins-lazy-gen.h\",\n    \"src/builtins/builtins-microtask-queue-gen.cc\",\n    \"src/builtins/builtins-number-gen.cc\",\n    \"src/builtins/builtins-number-tsa.cc\",\n    \"src/builtins/builtins-object-gen.cc\",\n    \"src/builtins/builtins-object-gen.h\",\n    \"src/builtins/builtins-promise-gen.cc\",\n    \"src/builtins/builtins-promise-gen.h\",\n    \"src/builtins/builtins-proxy-gen.cc\",\n    \"src/builtins/builtins-proxy-gen.h\",\n    \"src/builtins/builtins-regexp-gen.cc\",\n    \"src/builtins/builtins-regexp-gen.h\",\n    \"src/builtins/builtins-shadow-realm-gen.cc\",\n    \"src/builtins/builtins-sharedarraybuffer-gen.cc\",\n    \"src/builtins/builtins-string-gen.cc\",\n    \"src/builtins/builtins-string-gen.h\",\n    \"src/builtins/builtins-string-tsa.cc\",\n    \"src/builtins/builtins-temporal-gen.cc\",\n    \"src/builtins/builtins-typed-array-gen.cc\",\n    \"src/builtins/builtins-typed-array-gen.h\",\n    \"src/builtins/builtins-utils-gen.h\",\n    \"src/builtins/growable-fixed-array-gen.cc\",\n    \"src/builtins/growable-fixed-array-gen.h\",\n    \"src/builtins/number-builtins-reducer-inl.h\",\n    \"src/builtins/profile-data-reader.cc\",\n    \"src/builtins/profile-data-reader.h\",\n    \"src/builtins/setup-builtins-internal.cc\",\n    \"src/builtins/torque-csa-header-includes.h\",\n    \"src/codegen/code-stub-assembler-inl.h\",\n    \"src/codegen/code-stub-assembler.cc\",\n    \"src/codegen/code-stub-assembler.h\",\n    \"src/codegen/define-code-stub-assembler-macros.inc\",\n    \"src/codegen/heap-object-list.h\",\n    \"src/codegen/turboshaft-builtins-assembler-inl.h\",\n    \"src/codegen/undef-code-stub-assembler-macros.inc\",\n    \"src/compiler/turboshaft/builtin-compiler.cc\",\n    \"src/compiler/turboshaft/builtin-compiler.h\",\n    \"src/heap/setup-heap-internal.cc\",\n    \"src/ic/accessor-assembler.cc\",\n    \"src/ic/accessor-assembler.h\",\n    \"src/ic/binary-op-assembler.cc\",\n    \"src/ic/binary-op-assembler.h\",\n    \"src/ic/keyed-store-generic.cc\",\n    \"src/ic/keyed-store-generic.h\",\n    \"src/ic/unary-op-assembler.cc\",\n    \"src/ic/unary-op-assembler.h\",\n    \"src/interpreter/interpreter-assembler.cc\",\n    \"src/interpreter/interpreter-assembler.h\",\n    \"src/interpreter/interpreter-generator-tsa.cc\",\n    \"src/interpreter/interpreter-generator-tsa.h\",\n    \"src/interpreter/interpreter-generator.cc\",\n    \"src/interpreter/interpreter-generator.h\",\n    \"src/interpreter/interpreter-intrinsics-generator.cc\",\n    \"src/interpreter/interpreter-intrinsics-generator.h\",\n    \"src/numbers/integer-literal-inl.h\",\n    \"src/numbers/integer-literal.h\",\n    \"third_party/v8/codegen/fp16-inl.h\",\n  ]\n\n  if (v8_enable_webassembly) {\n    sources += [\n      \"src/builtins/builtins-wasm-gen.cc\",\n      \"src/builtins/builtins-wasm-gen.h\",\n    ]\n\n    if (v8_enable_drumbrake) {\n      if (v8_current_cpu == \"x64\") {\n        sources += [ \"src/wasm/interpreter/x64/interpreter-builtins-x64.cc\" ]\n      } else if (v8_current_cpu == \"arm64\") {\n        sources +=\n            [ \"src/wasm/interpreter/arm64/interpreter-builtins-arm64.cc\" ]\n      }\n    }\n  }\n\n  if (v8_current_cpu == \"x86\") {\n    sources += [\n      ### gcmole(ia32) ###\n      \"src/builtins/ia32/builtins-ia32.cc\",\n    ]\n  } else if (v8_current_cpu == \"x64\") {\n    sources += [\n      ### gcmole(x64) ###\n      \"src/builtins/x64/builtins-x64.cc\",\n    ]\n  } else if (v8_current_cpu == \"arm\") {\n    sources += [\n      ### gcmole(arm) ###\n      \"src/builtins/arm/builtins-arm.cc\",\n    ]\n  } else if (v8_current_cpu == \"arm64\") {\n    sources += [\n      ### gcmole(arm64) ###\n      \"src/builtins/arm64/builtins-arm64.cc\",\n    ]\n  } else if (v8_current_cpu == \"mips64\" || v8_current_cpu == \"mips64el\") {\n    sources += [\n      ### gcmole(mips64el) ###\n      \"src/builtins/mips64/builtins-mips64.cc\",\n    ]\n  } else if (v8_current_cpu == \"loong64\") {\n    sources += [\n      ### gcmole(loong64) ###\n      \"src/builtins/loong64/builtins-loong64.cc\",\n    ]\n  } else if (v8_current_cpu == \"ppc64\") {\n    sources += [\n      ### gcmole(ppc64) ###\n      \"src/builtins/ppc/builtins-ppc.cc\",\n    ]\n  } else if (v8_current_cpu == \"s390x\") {\n    sources += [\n      ### gcmole(s390) ###\n      \"src/builtins/s390/builtins-s390.cc\",\n    ]\n  } else if (v8_current_cpu == \"riscv64\") {\n    sources += [\n      ### gcmole(riscv64) ###\n      \"src/builtins/riscv/builtins-riscv.cc\",\n    ]\n  } else if (v8_current_cpu == \"riscv32\") {\n    sources += [\n      ### gcmole(riscv32) ###\n      \"src/builtins/riscv/builtins-riscv.cc\",\n    ]\n  }\n\n  if (!v8_enable_i18n_support) {\n    sources -= [ \"src/builtins/builtins-intl-gen.cc\" ]\n  }\n\n  configs = [ \":internal_config\" ]\n}\n\nv8_source_set(\"v8_init\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  deps = [\n    \":v8_base_without_compiler\",\n    \":v8_initializers\",\n    \":v8_tracing\",\n  ]\n\n  sources = [\n    ### gcmole(all) ###\n    \"src/init/setup-isolate-full.cc\",\n  ]\n\n  public_deps = [\n    \":v8_abseil\",\n    \":v8_maybe_icu\",\n  ]\n\n  configs = [ \":internal_config\" ]\n}\n\n# This is split out to be a non-code containing target that the Chromium browser\n# DLL can depend upon to get only a version string.\nv8_header_set(\"v8_version\") {\n  configs = [ \":internal_config\" ]\n\n  sources = [\n    \"include/v8-value-serializer-version.h\",\n    \"include/v8-version-string.h\",\n    \"include/v8-version.h\",\n  ]\n}\n\nv8_header_set(\"v8_config_headers\") {\n  configs = [ \":internal_config\" ]\n\n  sources = [\n    \"include/v8-platform.h\",\n    \"include/v8-source-location.h\",\n    \"include/v8config.h\",\n  ]\n\n  deps = []\n\n  if (v8_generate_external_defines_header) {\n    sources += [ \"$target_gen_dir/include/v8-gn.h\" ]\n    deps += [ \":gen_v8_gn\" ]\n  }\n}\n\n# This is split out to be a non-code containing target that the Chromium browser\n# can depend upon to get basic v8 types.\nv8_header_set(\"v8_headers\") {\n  configs = [ \":internal_config\" ]\n  public_configs = [ \":headers_config\" ]\n\n  sources = [\n    \"include/v8-array-buffer.h\",\n    \"include/v8-callbacks.h\",\n    \"include/v8-container.h\",\n    \"include/v8-context.h\",\n    \"include/v8-cppgc.h\",\n    \"include/v8-data.h\",\n    \"include/v8-date.h\",\n    \"include/v8-debug.h\",\n    \"include/v8-embedder-heap.h\",\n    \"include/v8-embedder-state-scope.h\",\n    \"include/v8-exception.h\",\n    \"include/v8-extension.h\",\n    \"include/v8-external-memory-accounter.h\",\n    \"include/v8-external.h\",\n    \"include/v8-fast-api-calls.h\",\n    \"include/v8-forward.h\",\n    \"include/v8-function-callback.h\",\n    \"include/v8-function.h\",\n    \"include/v8-handle-base.h\",\n    \"include/v8-initialization.h\",\n    \"include/v8-internal.h\",\n    \"include/v8-isolate.h\",\n    \"include/v8-json.h\",\n    \"include/v8-local-handle.h\",\n    \"include/v8-locker.h\",\n    \"include/v8-maybe.h\",\n    \"include/v8-memory-span.h\",\n    \"include/v8-message.h\",\n    \"include/v8-microtask-queue.h\",\n    \"include/v8-microtask.h\",\n    \"include/v8-object.h\",\n    \"include/v8-persistent-handle.h\",\n    \"include/v8-primitive-object.h\",\n    \"include/v8-primitive.h\",\n    \"include/v8-profiler.h\",\n    \"include/v8-promise.h\",\n    \"include/v8-proxy.h\",\n    \"include/v8-regexp.h\",\n    \"include/v8-sandbox.h\",\n    \"include/v8-script.h\",\n    \"include/v8-snapshot.h\",\n    \"include/v8-statistics.h\",\n    \"include/v8-template.h\",\n    \"include/v8-traced-handle.h\",\n    \"include/v8-typed-array.h\",\n    \"include/v8-unwinder.h\",\n    \"include/v8-util.h\",\n    \"include/v8-value-serializer.h\",\n    \"include/v8-value.h\",\n    \"include/v8-wasm.h\",\n    \"include/v8-weak-callback-info.h\",\n    \"include/v8.h\",\n  ]\n\n  sources += [\n    # The following headers cannot be platform-specific. The include validation\n    # of `gn gen $dir --check` requires all header files to be available on all\n    # platforms.\n    \"include/v8-wasm-trap-handler-posix.h\",\n    \"include/v8-wasm-trap-handler-win.h\",\n  ]\n\n  public_deps = [ \":v8_config_headers\" ]\n\n  deps = [\n    \":cppgc_headers\",\n    \":v8_version\",\n  ]\n}\n\nif (v8_generate_external_defines_header) {\n  action(\"gen_v8_gn\") {\n    visibility = [ \":*\" ]\n\n    script = \"tools/gen-v8-gn.py\"\n    outputs = [ \"$target_gen_dir/include/v8-gn.h\" ]\n\n    args = [\n      \"-o\",\n      rebase_path(\"$target_gen_dir/include/v8-gn.h\", root_build_dir),\n    ]\n    foreach(define, enabled_external_defines) {\n      args += [\n        \"-p\",\n        define,\n      ]\n    }\n    foreach(define, disabled_external_defines) {\n      args += [\n        \"-n\",\n        define,\n      ]\n    }\n  }\n}\n\n# This is split out to share basic headers with Torque and everything else:(\nv8_header_set(\"v8_shared_internal_headers\") {\n  visibility = [\n    \":*\",\n    \"test/*\",\n    \"tools/*\",\n  ]\n  configs = [ \":internal_config\" ]\n\n  sources = [\n    \"src/common/globals.h\",\n    \"src/wasm/wasm-constants.h\",\n    \"src/wasm/wasm-limits.h\",\n  ]\n\n  deps = [\n    \":v8_headers\",\n    \":v8_libbase\",\n  ]\n}\n\nv8_header_set(\"v8_flags\") {\n  visibility = [\n    \":*\",\n    \"tools/*\",\n  ]\n\n  configs = [ \":internal_config\" ]\n\n  sources = [\n    \"src/flags/flag-definitions.h\",\n    \"src/flags/flags-impl.h\",\n    \"src/flags/flags.h\",\n  ]\n\n  deps = [\n    \":v8_libbase\",\n    \":v8_shared_internal_headers\",\n  ]\n}\n\nv8_header_set(\"v8_internal_headers\") {\n  configs = [ \":internal_config\" ]\n\n  public_configs = [ \"src/inspector:inspector_config\" ]\n\n  sources = [\n    ### gcmole(all) ###\n    \"$target_gen_dir/builtins-generated/bytecodes-builtins-list.h\",\n    \"include/cppgc/common.h\",\n    \"include/v8-inspector-protocol.h\",\n    \"include/v8-inspector.h\",\n    \"include/v8-metrics.h\",\n    \"include/v8-unwinder-state.h\",\n    \"include/v8-wasm-trap-handler-posix.h\",\n    \"src/api/api-arguments-inl.h\",\n    \"src/api/api-arguments.h\",\n    \"src/api/api-inl.h\",\n    \"src/api/api-macros-undef.h\",\n    \"src/api/api-macros.h\",\n    \"src/api/api-natives.h\",\n    \"src/api/api.h\",\n    \"src/ast/ast-function-literal-id-reindexer.h\",\n    \"src/ast/ast-source-ranges.h\",\n    \"src/ast/ast-traversal-visitor.h\",\n    \"src/ast/ast-value-factory.h\",\n    \"src/ast/ast.h\",\n    \"src/ast/modules.h\",\n    \"src/ast/prettyprinter.h\",\n    \"src/ast/scopes.h\",\n    \"src/ast/source-range-ast-visitor.h\",\n    \"src/ast/variables.h\",\n    \"src/baseline/baseline.h\",\n    \"src/baseline/bytecode-offset-iterator.h\",\n    \"src/builtins/accessors.h\",\n    \"src/builtins/builtins-constructor.h\",\n    \"src/builtins/builtins-definitions.h\",\n    \"src/builtins/builtins-descriptors.h\",\n    \"src/builtins/builtins-inl.h\",\n    \"src/builtins/builtins-promise.h\",\n    \"src/builtins/builtins-utils-inl.h\",\n    \"src/builtins/builtins-utils.h\",\n    \"src/builtins/builtins.h\",\n    \"src/builtins/constants-table-builder.h\",\n    \"src/builtins/data-view-ops.h\",\n    \"src/builtins/profile-data-reader.h\",\n    \"src/codegen/aligned-slot-allocator.h\",\n    \"src/codegen/assembler-arch.h\",\n    \"src/codegen/assembler-inl.h\",\n    \"src/codegen/assembler.h\",\n    \"src/codegen/atomic-memory-order.h\",\n    \"src/codegen/background-merge-task.h\",\n    \"src/codegen/bailout-reason.h\",\n    \"src/codegen/callable.h\",\n    \"src/codegen/code-comments.h\",\n    \"src/codegen/code-desc.h\",\n    \"src/codegen/code-factory.h\",\n    \"src/codegen/code-reference.h\",\n    \"src/codegen/compilation-cache.h\",\n    \"src/codegen/compiler.h\",\n    \"src/codegen/constant-pool.h\",\n    \"src/codegen/constants-arch.h\",\n    \"src/codegen/cpu-features.h\",\n    \"src/codegen/external-reference-encoder.h\",\n    \"src/codegen/external-reference-table.h\",\n    \"src/codegen/external-reference.h\",\n    \"src/codegen/flush-instruction-cache.h\",\n    \"src/codegen/handler-table.h\",\n    \"src/codegen/interface-descriptors-inl.h\",\n    \"src/codegen/interface-descriptors.h\",\n    \"src/codegen/label.h\",\n    \"src/codegen/linkage-location.h\",\n    \"src/codegen/machine-type.h\",\n    \"src/codegen/macro-assembler-base.h\",\n    \"src/codegen/macro-assembler-inl.h\",\n    \"src/codegen/macro-assembler.h\",\n    \"src/codegen/maglev-safepoint-table.h\",\n    \"src/codegen/optimized-compilation-info.h\",\n    \"src/codegen/pending-optimization-table.h\",\n    \"src/codegen/register-arch.h\",\n    \"src/codegen/register-base.h\",\n    \"src/codegen/register-configuration.h\",\n    \"src/codegen/register.h\",\n    \"src/codegen/reglist-base.h\",\n    \"src/codegen/reglist.h\",\n    \"src/codegen/reloc-info-inl.h\",\n    \"src/codegen/reloc-info.h\",\n    \"src/codegen/safepoint-table-base.h\",\n    \"src/codegen/safepoint-table.h\",\n    \"src/codegen/script-details.h\",\n    \"src/codegen/signature.h\",\n    \"src/codegen/source-position-table.h\",\n    \"src/codegen/source-position.h\",\n    \"src/codegen/tick-counter.h\",\n    \"src/codegen/tnode.h\",\n    \"src/codegen/unoptimized-compilation-info.h\",\n    \"src/common/assert-scope.h\",\n    \"src/common/checks.h\",\n    \"src/common/code-memory-access-inl.h\",\n    \"src/common/code-memory-access.h\",\n    \"src/common/high-allocation-throughput-scope.h\",\n    \"src/common/message-template.h\",\n    \"src/common/operation.h\",\n    \"src/common/ptr-compr-inl.h\",\n    \"src/common/ptr-compr.h\",\n    \"src/common/segmented-table-inl.h\",\n    \"src/common/segmented-table.h\",\n    \"src/common/simd128.h\",\n    \"src/common/thread-local-storage.h\",\n    \"src/compiler-dispatcher/lazy-compile-dispatcher.h\",\n    \"src/compiler-dispatcher/optimizing-compile-dispatcher.h\",\n    \"src/compiler/access-builder.h\",\n    \"src/compiler/access-info.h\",\n    \"src/compiler/add-type-assertions-reducer.h\",\n    \"src/compiler/all-nodes.h\",\n    \"src/compiler/allocation-builder-inl.h\",\n    \"src/compiler/allocation-builder.h\",\n    \"src/compiler/backend/bitcast-elider.h\",\n    \"src/compiler/backend/code-generator-impl.h\",\n    \"src/compiler/backend/code-generator.h\",\n    \"src/compiler/backend/frame-elider.h\",\n    \"src/compiler/backend/gap-resolver.h\",\n    \"src/compiler/backend/instruction-codes.h\",\n    \"src/compiler/backend/instruction-scheduler.h\",\n    \"src/compiler/backend/instruction-selector-adapter.h\",\n    \"src/compiler/backend/instruction-selector-impl.h\",\n    \"src/compiler/backend/instruction-selector.h\",\n    \"src/compiler/backend/instruction.h\",\n    \"src/compiler/backend/jump-threading.h\",\n    \"src/compiler/backend/move-optimizer.h\",\n    \"src/compiler/backend/register-allocation.h\",\n    \"src/compiler/backend/register-allocator-verifier.h\",\n    \"src/compiler/backend/register-allocator.h\",\n    \"src/compiler/backend/spill-placer.h\",\n    \"src/compiler/backend/unwinding-info-writer.h\",\n    \"src/compiler/basic-block-instrumentor.h\",\n    \"src/compiler/branch-condition-duplicator.h\",\n    \"src/compiler/branch-elimination.h\",\n    \"src/compiler/bytecode-analysis.h\",\n    \"src/compiler/bytecode-graph-builder.h\",\n    \"src/compiler/bytecode-liveness-map.h\",\n    \"src/compiler/checkpoint-elimination.h\",\n    \"src/compiler/code-assembler-compilation-job.h\",\n    \"src/compiler/code-assembler.h\",\n    \"src/compiler/common-node-cache.h\",\n    \"src/compiler/common-operator-reducer.h\",\n    \"src/compiler/common-operator.h\",\n    \"src/compiler/compilation-dependencies.h\",\n    \"src/compiler/compiler-source-position-table.h\",\n    \"src/compiler/constant-folding-reducer.h\",\n    \"src/compiler/control-equivalence.h\",\n    \"src/compiler/control-path-state.h\",\n    \"src/compiler/csa-load-elimination.h\",\n    \"src/compiler/dead-code-elimination.h\",\n    \"src/compiler/decompression-optimizer.h\",\n    \"src/compiler/diamond.h\",\n    \"src/compiler/escape-analysis-reducer.h\",\n    \"src/compiler/escape-analysis.h\",\n    \"src/compiler/fast-api-calls.h\",\n    \"src/compiler/feedback-source.h\",\n    \"src/compiler/frame-states.h\",\n    \"src/compiler/frame.h\",\n    \"src/compiler/functional-list.h\",\n    \"src/compiler/globals.h\",\n    \"src/compiler/graph-assembler.h\",\n    \"src/compiler/graph-reducer.h\",\n    \"src/compiler/graph-trimmer.h\",\n    \"src/compiler/graph-zone-traits.h\",\n    \"src/compiler/heap-refs.h\",\n    \"src/compiler/js-call-reducer.h\",\n    \"src/compiler/js-context-specialization.h\",\n    \"src/compiler/js-create-lowering.h\",\n    \"src/compiler/js-generic-lowering.h\",\n    \"src/compiler/js-graph.h\",\n    \"src/compiler/js-heap-broker-inl.h\",\n    \"src/compiler/js-heap-broker.h\",\n    \"src/compiler/js-inlining-heuristic.h\",\n    \"src/compiler/js-inlining.h\",\n    \"src/compiler/js-intrinsic-lowering.h\",\n    \"src/compiler/js-native-context-specialization.h\",\n    \"src/compiler/js-operator.h\",\n    \"src/compiler/js-type-hint-lowering.h\",\n    \"src/compiler/js-typed-lowering.h\",\n    \"src/compiler/late-escape-analysis.h\",\n    \"src/compiler/linkage.h\",\n    \"src/compiler/load-elimination.h\",\n    \"src/compiler/loop-analysis.h\",\n    \"src/compiler/loop-peeling.h\",\n    \"src/compiler/loop-unrolling.h\",\n    \"src/compiler/loop-variable-optimizer.h\",\n    \"src/compiler/machine-graph-verifier.h\",\n    \"src/compiler/machine-graph.h\",\n    \"src/compiler/machine-operator-reducer.h\",\n    \"src/compiler/machine-operator.h\",\n    \"src/compiler/map-inference.h\",\n    \"src/compiler/memory-lowering.h\",\n    \"src/compiler/memory-optimizer.h\",\n    \"src/compiler/node-aux-data.h\",\n    \"src/compiler/node-cache.h\",\n    \"src/compiler/node-marker.h\",\n    \"src/compiler/node-matchers.h\",\n    \"src/compiler/node-observer.h\",\n    \"src/compiler/node-origin-table.h\",\n    \"src/compiler/node-properties.h\",\n    \"src/compiler/node.h\",\n    \"src/compiler/opcodes.h\",\n    \"src/compiler/operation-typer.h\",\n    \"src/compiler/operator-properties.h\",\n    \"src/compiler/operator.h\",\n    \"src/compiler/osr.h\",\n    \"src/compiler/pair-load-store-reducer.h\",\n    \"src/compiler/per-isolate-compiler-cache.h\",\n    \"src/compiler/persistent-map.h\",\n    \"src/compiler/phase.h\",\n    \"src/compiler/pipeline-data-inl.h\",\n    \"src/compiler/pipeline-statistics.h\",\n    \"src/compiler/pipeline.h\",\n    \"src/compiler/processed-feedback.h\",\n    \"src/compiler/property-access-builder.h\",\n    \"src/compiler/raw-machine-assembler.h\",\n    \"src/compiler/redundancy-elimination.h\",\n    \"src/compiler/refs-map.h\",\n    \"src/compiler/representation-change.h\",\n    \"src/compiler/schedule.h\",\n    \"src/compiler/scheduler.h\",\n    \"src/compiler/select-lowering.h\",\n    \"src/compiler/simplified-lowering-verifier.h\",\n    \"src/compiler/simplified-lowering.h\",\n    \"src/compiler/simplified-operator-reducer.h\",\n    \"src/compiler/simplified-operator.h\",\n    \"src/compiler/state-values-utils.h\",\n    \"src/compiler/string-builder-optimizer.h\",\n    \"src/compiler/turbofan-graph-visualizer.h\",\n    \"src/compiler/turbofan-graph.h\",\n    \"src/compiler/turbofan-typer.h\",\n    \"src/compiler/turbofan-types.h\",\n    \"src/compiler/turbofan.h\",\n    \"src/compiler/turboshaft/access-builder.h\",\n    \"src/compiler/turboshaft/analyzer-iterator.h\",\n    \"src/compiler/turboshaft/assembler.h\",\n    \"src/compiler/turboshaft/assert-types-reducer.h\",\n    \"src/compiler/turboshaft/block-instrumentation-phase.h\",\n    \"src/compiler/turboshaft/block-instrumentation-reducer.h\",\n    \"src/compiler/turboshaft/branch-elimination-reducer.h\",\n    \"src/compiler/turboshaft/build-graph-phase.h\",\n    \"src/compiler/turboshaft/builtin-call-descriptors.h\",\n    \"src/compiler/turboshaft/code-elimination-and-simplification-phase.h\",\n    \"src/compiler/turboshaft/copying-phase.h\",\n    \"src/compiler/turboshaft/csa-optimize-phase.h\",\n    \"src/compiler/turboshaft/dataview-lowering-reducer.h\",\n    \"src/compiler/turboshaft/dead-code-elimination-reducer.h\",\n    \"src/compiler/turboshaft/debug-feature-lowering-phase.h\",\n    \"src/compiler/turboshaft/debug-feature-lowering-reducer.h\",\n    \"src/compiler/turboshaft/decompression-optimization-phase.h\",\n    \"src/compiler/turboshaft/decompression-optimization.h\",\n    \"src/compiler/turboshaft/define-assembler-macros.inc\",\n    \"src/compiler/turboshaft/deopt-data.h\",\n    \"src/compiler/turboshaft/duplication-optimization-reducer.h\",\n    \"src/compiler/turboshaft/explicit-truncation-reducer.h\",\n    \"src/compiler/turboshaft/fast-api-call-lowering-reducer.h\",\n    \"src/compiler/turboshaft/fast-hash.h\",\n    \"src/compiler/turboshaft/field-macro.inc\",\n    \"src/compiler/turboshaft/graph-builder.h\",\n    \"src/compiler/turboshaft/graph-visualizer.h\",\n    \"src/compiler/turboshaft/graph.h\",\n    \"src/compiler/turboshaft/index.h\",\n    \"src/compiler/turboshaft/instruction-selection-normalization-reducer.h\",\n    \"src/compiler/turboshaft/instruction-selection-phase.h\",\n    \"src/compiler/turboshaft/js-generic-lowering-reducer.h\",\n    \"src/compiler/turboshaft/late-escape-analysis-reducer.h\",\n    \"src/compiler/turboshaft/late-load-elimination-reducer.h\",\n    \"src/compiler/turboshaft/layered-hash-map.h\",\n    \"src/compiler/turboshaft/load-store-simplification-reducer.h\",\n    \"src/compiler/turboshaft/loop-finder.h\",\n    \"src/compiler/turboshaft/loop-peeling-phase.h\",\n    \"src/compiler/turboshaft/loop-peeling-reducer.h\",\n    \"src/compiler/turboshaft/loop-unrolling-phase.h\",\n    \"src/compiler/turboshaft/loop-unrolling-reducer.h\",\n    \"src/compiler/turboshaft/machine-lowering-phase.h\",\n    \"src/compiler/turboshaft/machine-lowering-reducer-inl.h\",\n    \"src/compiler/turboshaft/machine-optimization-reducer.h\",\n    \"src/compiler/turboshaft/maglev-early-lowering-reducer-inl.h\",\n    \"src/compiler/turboshaft/maglev-graph-building-phase.h\",\n    \"src/compiler/turboshaft/memory-optimization-reducer.h\",\n    \"src/compiler/turboshaft/operation-matcher.h\",\n    \"src/compiler/turboshaft/operations.h\",\n    \"src/compiler/turboshaft/opmasks.h\",\n    \"src/compiler/turboshaft/optimize-phase.h\",\n    \"src/compiler/turboshaft/phase.h\",\n    \"src/compiler/turboshaft/pipelines.h\",\n    \"src/compiler/turboshaft/pretenuring-propagation-reducer.h\",\n    \"src/compiler/turboshaft/recreate-schedule-phase.h\",\n    \"src/compiler/turboshaft/recreate-schedule.h\",\n    \"src/compiler/turboshaft/reducer-traits.h\",\n    \"src/compiler/turboshaft/register-allocation-phase.h\",\n    \"src/compiler/turboshaft/representations.h\",\n    \"src/compiler/turboshaft/required-optimization-reducer.h\",\n    \"src/compiler/turboshaft/runtime-call-descriptors.h\",\n    \"src/compiler/turboshaft/select-lowering-reducer.h\",\n    \"src/compiler/turboshaft/sidetable.h\",\n    \"src/compiler/turboshaft/simplify-tf-loops.h\",\n    \"src/compiler/turboshaft/snapshot-table-opindex.h\",\n    \"src/compiler/turboshaft/snapshot-table.h\",\n    \"src/compiler/turboshaft/stack-check-lowering-reducer.h\",\n    \"src/compiler/turboshaft/store-store-elimination-phase.h\",\n    \"src/compiler/turboshaft/store-store-elimination-reducer-inl.h\",\n    \"src/compiler/turboshaft/string-escape-analysis-reducer.h\",\n    \"src/compiler/turboshaft/string-view.h\",\n    \"src/compiler/turboshaft/structural-optimization-reducer.h\",\n    \"src/compiler/turboshaft/tracing.h\",\n    \"src/compiler/turboshaft/type-assertions-phase.h\",\n    \"src/compiler/turboshaft/type-inference-analysis.h\",\n    \"src/compiler/turboshaft/type-inference-reducer.h\",\n    \"src/compiler/turboshaft/type-parser.h\",\n    \"src/compiler/turboshaft/typed-optimizations-phase.h\",\n    \"src/compiler/turboshaft/typed-optimizations-reducer.h\",\n    \"src/compiler/turboshaft/typer.h\",\n    \"src/compiler/turboshaft/types.h\",\n    \"src/compiler/turboshaft/undef-assembler-macros.inc\",\n    \"src/compiler/turboshaft/uniform-reducer-adapter.h\",\n    \"src/compiler/turboshaft/use-map.h\",\n    \"src/compiler/turboshaft/utils.h\",\n    \"src/compiler/turboshaft/value-numbering-reducer.h\",\n    \"src/compiler/turboshaft/variable-reducer.h\",\n    \"src/compiler/turboshaft/wasm-dead-code-elimination-phase.h\",\n    \"src/compiler/turboshaft/zone-with-name.h\",\n    \"src/compiler/type-cache.h\",\n    \"src/compiler/type-narrowing-reducer.h\",\n    \"src/compiler/typed-optimization.h\",\n    \"src/compiler/use-info.h\",\n    \"src/compiler/value-numbering-reducer.h\",\n    \"src/compiler/verifier.h\",\n    \"src/compiler/write-barrier-kind.h\",\n    \"src/compiler/zone-stats.h\",\n    \"src/date/date.h\",\n    \"src/date/dateparser-inl.h\",\n    \"src/date/dateparser.h\",\n    \"src/debug/debug-coverage.h\",\n    \"src/debug/debug-evaluate.h\",\n    \"src/debug/debug-frames.h\",\n    \"src/debug/debug-interface.h\",\n    \"src/debug/debug-property-iterator.h\",\n    \"src/debug/debug-scope-iterator.h\",\n    \"src/debug/debug-scopes.h\",\n    \"src/debug/debug-stack-trace-iterator.h\",\n    \"src/debug/debug.h\",\n    \"src/debug/interface-types.h\",\n    \"src/debug/liveedit-diff.h\",\n    \"src/debug/liveedit.h\",\n    \"src/deoptimizer/deoptimize-reason.h\",\n    \"src/deoptimizer/deoptimized-frame-info.h\",\n    \"src/deoptimizer/deoptimizer.h\",\n    \"src/deoptimizer/frame-description.h\",\n    \"src/deoptimizer/frame-translation-builder.h\",\n    \"src/deoptimizer/materialized-object-store.h\",\n    \"src/deoptimizer/translated-state.h\",\n    \"src/deoptimizer/translation-opcode.h\",\n    \"src/diagnostics/basic-block-profiler.h\",\n    \"src/diagnostics/code-tracer.h\",\n    \"src/diagnostics/compilation-statistics.h\",\n    \"src/diagnostics/disasm.h\",\n    \"src/diagnostics/disassembler.h\",\n    \"src/diagnostics/eh-frame.h\",\n    \"src/diagnostics/gdb-jit.h\",\n    \"src/diagnostics/perf-jit.h\",\n    \"src/diagnostics/unwinder.h\",\n    \"src/execution/arguments-inl.h\",\n    \"src/execution/arguments.h\",\n    \"src/execution/clobber-registers.h\",\n    \"src/execution/embedder-state.h\",\n    \"src/execution/encoded-c-signature.h\",\n    \"src/execution/execution.h\",\n    \"src/execution/frame-constants.h\",\n    \"src/execution/frames-inl.h\",\n    \"src/execution/frames.h\",\n    \"src/execution/futex-emulation.h\",\n    \"src/execution/interrupts-scope.h\",\n    \"src/execution/isolate-data.h\",\n    \"src/execution/isolate-inl.h\",\n    \"src/execution/isolate-utils-inl.h\",\n    \"src/execution/isolate-utils.h\",\n    \"src/execution/isolate.h\",\n    \"src/execution/local-isolate-inl.h\",\n    \"src/execution/local-isolate.h\",\n    \"src/execution/messages.h\",\n    \"src/execution/microtask-queue.h\",\n    \"src/execution/pointer-authentication.h\",\n    \"src/execution/protectors-inl.h\",\n    \"src/execution/protectors.h\",\n    \"src/execution/shared-mutex-guard-if-off-thread.h\",\n    \"src/execution/simulator-base.h\",\n    \"src/execution/simulator.h\",\n    \"src/execution/stack-guard.h\",\n    \"src/execution/thread-id.h\",\n    \"src/execution/thread-local-top.h\",\n    \"src/execution/tiering-manager.h\",\n    \"src/execution/v8threads.h\",\n    \"src/execution/vm-state-inl.h\",\n    \"src/execution/vm-state.h\",\n    \"src/extensions/cputracemark-extension.h\",\n    \"src/extensions/externalize-string-extension.h\",\n    \"src/extensions/gc-extension.h\",\n    \"src/extensions/ignition-statistics-extension.h\",\n    \"src/extensions/statistics-extension.h\",\n    \"src/extensions/trigger-failure-extension.h\",\n    \"src/handles/global-handles-inl.h\",\n    \"src/handles/global-handles.h\",\n    \"src/handles/handles-inl.h\",\n    \"src/handles/handles.h\",\n    \"src/handles/local-handles-inl.h\",\n    \"src/handles/local-handles.h\",\n    \"src/handles/maybe-handles-inl.h\",\n    \"src/handles/maybe-handles.h\",\n    \"src/handles/persistent-handles.h\",\n    \"src/handles/shared-object-conveyor-handles.h\",\n    \"src/handles/traced-handles-inl.h\",\n    \"src/handles/traced-handles.h\",\n    \"src/heap/allocation-observer.h\",\n    \"src/heap/allocation-result.h\",\n    \"src/heap/allocation-stats.h\",\n    \"src/heap/array-buffer-sweeper.h\",\n    \"src/heap/base-space.h\",\n    \"src/heap/code-range.h\",\n    \"src/heap/code-stats.h\",\n    \"src/heap/collection-barrier.h\",\n    \"src/heap/combined-heap.h\",\n    \"src/heap/concurrent-marking.h\",\n    \"src/heap/conservative-stack-visitor-inl.h\",\n    \"src/heap/conservative-stack-visitor.h\",\n    \"src/heap/cppgc-js/cpp-heap.h\",\n    \"src/heap/cppgc-js/cpp-marking-state-inl.h\",\n    \"src/heap/cppgc-js/cpp-marking-state.h\",\n    \"src/heap/cppgc-js/cpp-snapshot.h\",\n    \"src/heap/cppgc-js/cross-heap-remembered-set.h\",\n    \"src/heap/cppgc-js/unified-heap-marking-state-inl.h\",\n    \"src/heap/cppgc-js/unified-heap-marking-state.h\",\n    \"src/heap/cppgc-js/unified-heap-marking-verifier.h\",\n    \"src/heap/cppgc-js/unified-heap-marking-visitor.h\",\n    \"src/heap/ephemeron-remembered-set.h\",\n    \"src/heap/evacuation-allocator-inl.h\",\n    \"src/heap/evacuation-allocator.h\",\n    \"src/heap/evacuation-verifier-inl.h\",\n    \"src/heap/evacuation-verifier.h\",\n    \"src/heap/factory-base-inl.h\",\n    \"src/heap/factory-base.h\",\n    \"src/heap/factory-inl.h\",\n    \"src/heap/factory.h\",\n    \"src/heap/finalization-registry-cleanup-task.h\",\n    \"src/heap/free-list-inl.h\",\n    \"src/heap/free-list.h\",\n    \"src/heap/gc-callbacks.h\",\n    \"src/heap/gc-tracer-inl.h\",\n    \"src/heap/gc-tracer.h\",\n    \"src/heap/heap-allocator-inl.h\",\n    \"src/heap/heap-allocator.h\",\n    \"src/heap/heap-controller.h\",\n    \"src/heap/heap-inl.h\",\n    \"src/heap/heap-layout-inl.h\",\n    \"src/heap/heap-layout-tracer.h\",\n    \"src/heap/heap-layout.h\",\n    \"src/heap/heap-utils-inl.h\",\n    \"src/heap/heap-utils.h\",\n    \"src/heap/heap-visitor-inl.h\",\n    \"src/heap/heap-visitor.h\",\n    \"src/heap/heap-write-barrier-inl.h\",\n    \"src/heap/heap-write-barrier.h\",\n    \"src/heap/heap.h\",\n    \"src/heap/incremental-marking-inl.h\",\n    \"src/heap/incremental-marking-job.h\",\n    \"src/heap/incremental-marking.h\",\n    \"src/heap/index-generator.h\",\n    \"src/heap/large-page-metadata-inl.h\",\n    \"src/heap/large-page-metadata.h\",\n    \"src/heap/large-spaces.h\",\n    \"src/heap/linear-allocation-area.h\",\n    \"src/heap/list.h\",\n    \"src/heap/live-object-range-inl.h\",\n    \"src/heap/live-object-range.h\",\n    \"src/heap/local-factory-inl.h\",\n    \"src/heap/local-factory.h\",\n    \"src/heap/local-heap-inl.h\",\n    \"src/heap/local-heap.h\",\n    \"src/heap/main-allocator-inl.h\",\n    \"src/heap/main-allocator.h\",\n    \"src/heap/mark-compact-inl.h\",\n    \"src/heap/mark-compact.h\",\n    \"src/heap/mark-sweep-utilities.h\",\n    \"src/heap/marking-barrier-inl.h\",\n    \"src/heap/marking-barrier.h\",\n    \"src/heap/marking-inl.h\",\n    \"src/heap/marking-progress-tracker.h\",\n    \"src/heap/marking-state-inl.h\",\n    \"src/heap/marking-state.h\",\n    \"src/heap/marking-visitor-inl.h\",\n    \"src/heap/marking-visitor.h\",\n    \"src/heap/marking-worklist-inl.h\",\n    \"src/heap/marking-worklist.h\",\n    \"src/heap/marking.h\",\n    \"src/heap/memory-allocator.h\",\n    \"src/heap/memory-balancer.h\",\n    \"src/heap/memory-chunk-constants.h\",\n    \"src/heap/memory-chunk-inl.h\",\n    \"src/heap/memory-chunk-layout.h\",\n    \"src/heap/memory-chunk-metadata-inl.h\",\n    \"src/heap/memory-chunk-metadata.h\",\n    \"src/heap/memory-chunk.h\",\n    \"src/heap/memory-measurement-inl.h\",\n    \"src/heap/memory-measurement.h\",\n    \"src/heap/memory-reducer.h\",\n    \"src/heap/minor-gc-job.h\",\n    \"src/heap/minor-mark-sweep-inl.h\",\n    \"src/heap/minor-mark-sweep.h\",\n    \"src/heap/mutable-page-metadata-inl.h\",\n    \"src/heap/mutable-page-metadata.h\",\n    \"src/heap/new-spaces-inl.h\",\n    \"src/heap/new-spaces.h\",\n    \"src/heap/object-lock-inl.h\",\n    \"src/heap/object-lock.h\",\n    \"src/heap/object-stats.h\",\n    \"src/heap/page-metadata.h\",\n    \"src/heap/paged-spaces-inl.h\",\n    \"src/heap/paged-spaces.h\",\n    \"src/heap/parallel-work-item.h\",\n    \"src/heap/parked-scope-inl.h\",\n    \"src/heap/parked-scope.h\",\n    \"src/heap/pretenuring-handler-inl.h\",\n    \"src/heap/pretenuring-handler.h\",\n    \"src/heap/read-only-heap-inl.h\",\n    \"src/heap/read-only-heap.h\",\n    \"src/heap/read-only-promotion.h\",\n    \"src/heap/read-only-spaces.h\",\n    \"src/heap/remembered-set-inl.h\",\n    \"src/heap/remembered-set.h\",\n    \"src/heap/safepoint.h\",\n    \"src/heap/scavenger-inl.h\",\n    \"src/heap/scavenger.h\",\n    \"src/heap/slot-set.h\",\n    \"src/heap/spaces-inl.h\",\n    \"src/heap/spaces.h\",\n    \"src/heap/sweeper.h\",\n    \"src/heap/traced-handles-marking-visitor.h\",\n    \"src/heap/trusted-range.h\",\n    \"src/heap/visit-object.h\",\n    \"src/heap/weak-object-worklists.h\",\n    \"src/heap/young-generation-marking-visitor-inl.h\",\n    \"src/heap/young-generation-marking-visitor.h\",\n    \"src/heap/zapping.h\",\n    \"src/ic/call-optimization.h\",\n    \"src/ic/handler-configuration-inl.h\",\n    \"src/ic/handler-configuration.h\",\n    \"src/ic/ic-inl.h\",\n    \"src/ic/ic-stats.h\",\n    \"src/ic/ic.h\",\n    \"src/ic/stub-cache.h\",\n    \"src/init/bootstrapper.h\",\n    \"src/init/heap-symbols.h\",\n    \"src/init/icu_util.h\",\n    \"src/init/isolate-group.h\",\n    \"src/init/setup-isolate.h\",\n    \"src/init/startup-data-util.h\",\n    \"src/init/v8.h\",\n    \"src/interpreter/block-coverage-builder.h\",\n    \"src/interpreter/bytecode-array-builder.h\",\n    \"src/interpreter/bytecode-array-iterator.h\",\n    \"src/interpreter/bytecode-array-random-iterator.h\",\n    \"src/interpreter/bytecode-array-writer.h\",\n    \"src/interpreter/bytecode-decoder.h\",\n    \"src/interpreter/bytecode-flags-and-tokens.h\",\n    \"src/interpreter/bytecode-generator.h\",\n    \"src/interpreter/bytecode-jump-table.h\",\n    \"src/interpreter/bytecode-label.h\",\n    \"src/interpreter/bytecode-node.h\",\n    \"src/interpreter/bytecode-operands.h\",\n    \"src/interpreter/bytecode-register-allocator.h\",\n    \"src/interpreter/bytecode-register-optimizer.h\",\n    \"src/interpreter/bytecode-register.h\",\n    \"src/interpreter/bytecode-source-info.h\",\n    \"src/interpreter/bytecode-traits.h\",\n    \"src/interpreter/bytecodes.h\",\n    \"src/interpreter/constant-array-builder.h\",\n    \"src/interpreter/control-flow-builders.h\",\n    \"src/interpreter/handler-table-builder.h\",\n    \"src/interpreter/interpreter-generator.h\",\n    \"src/interpreter/interpreter-intrinsics.h\",\n    \"src/interpreter/interpreter.h\",\n    \"src/json/json-parser.h\",\n    \"src/json/json-stringifier.h\",\n    \"src/libsampler/sampler.h\",\n    \"src/logging/code-events.h\",\n    \"src/logging/counters-definitions.h\",\n    \"src/logging/counters-scopes.h\",\n    \"src/logging/counters.h\",\n    \"src/logging/local-logger.h\",\n    \"src/logging/log-file.h\",\n    \"src/logging/log-inl.h\",\n    \"src/logging/log.h\",\n    \"src/logging/metrics.h\",\n    \"src/logging/runtime-call-stats-scope.h\",\n    \"src/logging/runtime-call-stats.h\",\n    \"src/logging/tracing-flags.h\",\n    \"src/numbers/conversions-inl.h\",\n    \"src/numbers/conversions.h\",\n    \"src/numbers/hash-seed-inl.h\",\n    \"src/numbers/ieee754.h\",\n    \"src/numbers/math-random.h\",\n    \"src/objects/all-objects-inl.h\",\n    \"src/objects/allocation-site-inl.h\",\n    \"src/objects/allocation-site-scopes-inl.h\",\n    \"src/objects/allocation-site-scopes.h\",\n    \"src/objects/allocation-site.h\",\n    \"src/objects/api-callbacks-inl.h\",\n    \"src/objects/api-callbacks.h\",\n    \"src/objects/arguments-inl.h\",\n    \"src/objects/arguments.h\",\n    \"src/objects/backing-store.h\",\n    \"src/objects/bigint.h\",\n    \"src/objects/call-site-info-inl.h\",\n    \"src/objects/call-site-info.h\",\n    \"src/objects/casting.h\",\n    \"src/objects/cell-inl.h\",\n    \"src/objects/cell.h\",\n    \"src/objects/code-inl.h\",\n    \"src/objects/code-kind.h\",\n    \"src/objects/code.h\",\n    \"src/objects/compilation-cache-table-inl.h\",\n    \"src/objects/compilation-cache-table.h\",\n    \"src/objects/compressed-slots-inl.h\",\n    \"src/objects/compressed-slots.h\",\n    \"src/objects/contexts-inl.h\",\n    \"src/objects/contexts.h\",\n    \"src/objects/data-handler-inl.h\",\n    \"src/objects/data-handler.h\",\n    \"src/objects/debug-objects-inl.h\",\n    \"src/objects/debug-objects.h\",\n    \"src/objects/descriptor-array-inl.h\",\n    \"src/objects/descriptor-array.h\",\n    \"src/objects/dictionary-inl.h\",\n    \"src/objects/dictionary.h\",\n    \"src/objects/elements-inl.h\",\n    \"src/objects/elements-kind.h\",\n    \"src/objects/elements.h\",\n    \"src/objects/embedder-data-array-inl.h\",\n    \"src/objects/embedder-data-array.h\",\n    \"src/objects/embedder-data-slot-inl.h\",\n    \"src/objects/embedder-data-slot.h\",\n    \"src/objects/feedback-cell-inl.h\",\n    \"src/objects/feedback-cell.h\",\n    \"src/objects/feedback-vector-inl.h\",\n    \"src/objects/feedback-vector.h\",\n    \"src/objects/field-index-inl.h\",\n    \"src/objects/field-index.h\",\n    \"src/objects/field-type.h\",\n    \"src/objects/fixed-array-inl.h\",\n    \"src/objects/fixed-array.h\",\n    \"src/objects/foreign-inl.h\",\n    \"src/objects/foreign.h\",\n    \"src/objects/free-space-inl.h\",\n    \"src/objects/free-space.h\",\n    \"src/objects/function-kind.h\",\n    \"src/objects/function-syntax-kind.h\",\n    \"src/objects/hash-table-inl.h\",\n    \"src/objects/hash-table.h\",\n    \"src/objects/heap-number-inl.h\",\n    \"src/objects/heap-number.h\",\n    \"src/objects/heap-object-inl.h\",\n    \"src/objects/heap-object.h\",\n    \"src/objects/hole-inl.h\",\n    \"src/objects/hole.h\",\n    \"src/objects/instance-type-checker.h\",\n    \"src/objects/instance-type-inl.h\",\n    \"src/objects/instance-type.h\",\n    \"src/objects/internal-index.h\",\n    \"src/objects/js-array-buffer-inl.h\",\n    \"src/objects/js-array-buffer.h\",\n    \"src/objects/js-array-inl.h\",\n    \"src/objects/js-array.h\",\n    \"src/objects/js-atomics-synchronization-inl.h\",\n    \"src/objects/js-atomics-synchronization.h\",\n    \"src/objects/js-collection-inl.h\",\n    \"src/objects/js-collection-iterator-inl.h\",\n    \"src/objects/js-collection-iterator.h\",\n    \"src/objects/js-collection.h\",\n    \"src/objects/js-disposable-stack-inl.h\",\n    \"src/objects/js-disposable-stack.h\",\n    \"src/objects/js-function-inl.h\",\n    \"src/objects/js-function.h\",\n    \"src/objects/js-generator-inl.h\",\n    \"src/objects/js-generator.h\",\n    \"src/objects/js-iterator-helpers-inl.h\",\n    \"src/objects/js-iterator-helpers.h\",\n    \"src/objects/js-objects-inl.h\",\n    \"src/objects/js-objects.h\",\n    \"src/objects/js-promise-inl.h\",\n    \"src/objects/js-promise.h\",\n    \"src/objects/js-proxy-inl.h\",\n    \"src/objects/js-proxy.h\",\n    \"src/objects/js-raw-json-inl.h\",\n    \"src/objects/js-raw-json.h\",\n    \"src/objects/js-regexp-inl.h\",\n    \"src/objects/js-regexp-string-iterator-inl.h\",\n    \"src/objects/js-regexp-string-iterator.h\",\n    \"src/objects/js-regexp.h\",\n    \"src/objects/js-segments-inl.h\",\n    \"src/objects/js-segments.h\",\n    \"src/objects/js-shadow-realm-inl.h\",\n    \"src/objects/js-shadow-realm.h\",\n    \"src/objects/js-shared-array-inl.h\",\n    \"src/objects/js-shared-array.h\",\n    \"src/objects/js-struct-inl.h\",\n    \"src/objects/js-struct.h\",\n    \"src/objects/js-temporal-objects-inl.h\",\n    \"src/objects/js-temporal-objects.h\",\n    \"src/objects/js-weak-refs-inl.h\",\n    \"src/objects/js-weak-refs.h\",\n    \"src/objects/keys.h\",\n    \"src/objects/literal-objects-inl.h\",\n    \"src/objects/literal-objects.h\",\n    \"src/objects/lookup-cache-inl.h\",\n    \"src/objects/lookup-cache.h\",\n    \"src/objects/lookup-inl.h\",\n    \"src/objects/lookup.h\",\n    \"src/objects/managed-inl.h\",\n    \"src/objects/managed.h\",\n    \"src/objects/map-inl.h\",\n    \"src/objects/map-updater.h\",\n    \"src/objects/map.h\",\n    \"src/objects/maybe-object-inl.h\",\n    \"src/objects/maybe-object.h\",\n    \"src/objects/megadom-handler-inl.h\",\n    \"src/objects/megadom-handler.h\",\n    \"src/objects/microtask-inl.h\",\n    \"src/objects/microtask.h\",\n    \"src/objects/module-inl.h\",\n    \"src/objects/module.h\",\n    \"src/objects/name-inl.h\",\n    \"src/objects/name.h\",\n    \"src/objects/object-list-macros.h\",\n    \"src/objects/object-macros-undef.h\",\n    \"src/objects/object-macros.h\",\n    \"src/objects/object-type.h\",\n    \"src/objects/objects-body-descriptors-inl.h\",\n    \"src/objects/objects-body-descriptors.h\",\n    \"src/objects/objects-definitions.h\",\n    \"src/objects/objects-inl.h\",\n    \"src/objects/objects.h\",\n    \"src/objects/oddball-inl.h\",\n    \"src/objects/oddball.h\",\n    \"src/objects/off-heap-hash-table-inl.h\",\n    \"src/objects/off-heap-hash-table.h\",\n    \"src/objects/option-utils.h\",\n    \"src/objects/ordered-hash-table-inl.h\",\n    \"src/objects/ordered-hash-table.h\",\n    \"src/objects/primitive-heap-object-inl.h\",\n    \"src/objects/primitive-heap-object.h\",\n    \"src/objects/promise-inl.h\",\n    \"src/objects/promise.h\",\n    \"src/objects/property-array-inl.h\",\n    \"src/objects/property-array.h\",\n    \"src/objects/property-cell-inl.h\",\n    \"src/objects/property-cell.h\",\n    \"src/objects/property-descriptor-object-inl.h\",\n    \"src/objects/property-descriptor-object.h\",\n    \"src/objects/property-descriptor.h\",\n    \"src/objects/property-details.h\",\n    \"src/objects/property.h\",\n    \"src/objects/prototype-info-inl.h\",\n    \"src/objects/prototype-info.h\",\n    \"src/objects/prototype-inl.h\",\n    \"src/objects/prototype.h\",\n    \"src/objects/regexp-match-info.h\",\n    \"src/objects/scope-info-inl.h\",\n    \"src/objects/scope-info.h\",\n    \"src/objects/script-inl.h\",\n    \"src/objects/script.h\",\n    \"src/objects/shared-function-info-inl.h\",\n    \"src/objects/shared-function-info.h\",\n    \"src/objects/simd.h\",\n    \"src/objects/slots-atomic-inl.h\",\n    \"src/objects/slots-inl.h\",\n    \"src/objects/slots.h\",\n    \"src/objects/smi-inl.h\",\n    \"src/objects/smi.h\",\n    \"src/objects/source-text-module-inl.h\",\n    \"src/objects/source-text-module.h\",\n    \"src/objects/string-comparator.h\",\n    \"src/objects/string-forwarding-table-inl.h\",\n    \"src/objects/string-forwarding-table.h\",\n    \"src/objects/string-inl.h\",\n    \"src/objects/string-set-inl.h\",\n    \"src/objects/string-set.h\",\n    \"src/objects/string-table-inl.h\",\n    \"src/objects/string-table.h\",\n    \"src/objects/string.h\",\n    \"src/objects/struct-inl.h\",\n    \"src/objects/struct.h\",\n    \"src/objects/swiss-hash-table-helpers.h\",\n    \"src/objects/swiss-name-dictionary-inl.h\",\n    \"src/objects/swiss-name-dictionary.h\",\n    \"src/objects/synthetic-module-inl.h\",\n    \"src/objects/synthetic-module.h\",\n    \"src/objects/tagged-field-inl.h\",\n    \"src/objects/tagged-field.h\",\n    \"src/objects/tagged-impl-inl.h\",\n    \"src/objects/tagged-impl.h\",\n    \"src/objects/tagged-index.h\",\n    \"src/objects/tagged-value-inl.h\",\n    \"src/objects/tagged-value.h\",\n    \"src/objects/tagged.h\",\n    \"src/objects/template-objects-inl.h\",\n    \"src/objects/template-objects.h\",\n    \"src/objects/templates-inl.h\",\n    \"src/objects/templates.h\",\n    \"src/objects/torque-defined-classes-inl.h\",\n    \"src/objects/torque-defined-classes.h\",\n    \"src/objects/transitions-inl.h\",\n    \"src/objects/transitions.h\",\n    \"src/objects/trusted-object-inl.h\",\n    \"src/objects/trusted-object.h\",\n    \"src/objects/turbofan-types-inl.h\",\n    \"src/objects/turbofan-types.h\",\n    \"src/objects/turboshaft-types-inl.h\",\n    \"src/objects/turboshaft-types.h\",\n    \"src/objects/type-hints.h\",\n    \"src/objects/union.h\",\n    \"src/objects/value-serializer.h\",\n    \"src/objects/visitors-inl.h\",\n    \"src/objects/visitors.h\",\n    \"src/objects/waiter-queue-node.h\",\n    \"src/parsing/expression-scope.h\",\n    \"src/parsing/func-name-inferrer.h\",\n    \"src/parsing/import-attributes.h\",\n    \"src/parsing/keywords-gen.h\",\n    \"src/parsing/literal-buffer.h\",\n    \"src/parsing/parse-info.h\",\n    \"src/parsing/parser-base.h\",\n    \"src/parsing/parser.h\",\n    \"src/parsing/parsing.h\",\n    \"src/parsing/pending-compilation-error-handler.h\",\n    \"src/parsing/preparse-data-impl.h\",\n    \"src/parsing/preparse-data.h\",\n    \"src/parsing/preparser-logger.h\",\n    \"src/parsing/preparser.h\",\n    \"src/parsing/rewriter.h\",\n    \"src/parsing/scanner-character-streams.h\",\n    \"src/parsing/scanner-inl.h\",\n    \"src/parsing/scanner.h\",\n    \"src/parsing/token.h\",\n    \"src/profiler/allocation-tracker.h\",\n    \"src/profiler/circular-queue-inl.h\",\n    \"src/profiler/circular-queue.h\",\n    \"src/profiler/cpu-profiler-inl.h\",\n    \"src/profiler/cpu-profiler.h\",\n    \"src/profiler/heap-profiler.h\",\n    \"src/profiler/heap-snapshot-generator-inl.h\",\n    \"src/profiler/heap-snapshot-generator.h\",\n    \"src/profiler/output-stream-writer.h\",\n    \"src/profiler/profile-generator-inl.h\",\n    \"src/profiler/profile-generator.h\",\n    \"src/profiler/profiler-listener.h\",\n    \"src/profiler/profiler-stats.h\",\n    \"src/profiler/sampling-heap-profiler.h\",\n    \"src/profiler/strings-storage.h\",\n    \"src/profiler/symbolizer.h\",\n    \"src/profiler/tick-sample.h\",\n    \"src/profiler/tracing-cpu-profiler.h\",\n    \"src/profiler/weak-code-registry.h\",\n    \"src/regexp/experimental/experimental-bytecode.h\",\n    \"src/regexp/experimental/experimental-compiler.h\",\n    \"src/regexp/experimental/experimental-interpreter.h\",\n    \"src/regexp/experimental/experimental.h\",\n    \"src/regexp/regexp-ast.h\",\n    \"src/regexp/regexp-bytecode-generator-inl.h\",\n    \"src/regexp/regexp-bytecode-generator.h\",\n    \"src/regexp/regexp-bytecode-peephole.h\",\n    \"src/regexp/regexp-bytecodes.h\",\n    \"src/regexp/regexp-compiler.h\",\n    \"src/regexp/regexp-dotprinter.h\",\n    \"src/regexp/regexp-error.h\",\n    \"src/regexp/regexp-flags.h\",\n    \"src/regexp/regexp-interpreter.h\",\n    \"src/regexp/regexp-macro-assembler-arch.h\",\n    \"src/regexp/regexp-macro-assembler-tracer.h\",\n    \"src/regexp/regexp-macro-assembler.h\",\n    \"src/regexp/regexp-nodes.h\",\n    \"src/regexp/regexp-parser.h\",\n    \"src/regexp/regexp-result-vector.h\",\n    \"src/regexp/regexp-stack.h\",\n    \"src/regexp/regexp-utils.h\",\n    \"src/regexp/regexp.h\",\n    \"src/regexp/special-case.h\",\n    \"src/roots/roots-inl.h\",\n    \"src/roots/roots.h\",\n    \"src/roots/static-roots.h\",\n    \"src/runtime/runtime-utils.h\",\n    \"src/runtime/runtime.h\",\n    \"src/sandbox/bounded-size-inl.h\",\n    \"src/sandbox/bounded-size.h\",\n    \"src/sandbox/check.h\",\n    \"src/sandbox/code-entrypoint-tag.h\",\n    \"src/sandbox/code-pointer-inl.h\",\n    \"src/sandbox/code-pointer-table-inl.h\",\n    \"src/sandbox/code-pointer-table.h\",\n    \"src/sandbox/code-pointer.h\",\n    \"src/sandbox/compactible-external-entity-table-inl.h\",\n    \"src/sandbox/compactible-external-entity-table.h\",\n    \"src/sandbox/cppheap-pointer-inl.h\",\n    \"src/sandbox/cppheap-pointer-table-inl.h\",\n    \"src/sandbox/cppheap-pointer-table.h\",\n    \"src/sandbox/external-entity-table-inl.h\",\n    \"src/sandbox/external-entity-table.h\",\n    \"src/sandbox/external-pointer-inl.h\",\n    \"src/sandbox/external-pointer-table-inl.h\",\n    \"src/sandbox/external-pointer-table.h\",\n    \"src/sandbox/external-pointer.h\",\n    \"src/sandbox/hardware-support.h\",\n    \"src/sandbox/indirect-pointer-inl.h\",\n    \"src/sandbox/indirect-pointer-tag.h\",\n    \"src/sandbox/indirect-pointer.h\",\n    \"src/sandbox/isolate-inl.h\",\n    \"src/sandbox/isolate.h\",\n    \"src/sandbox/js-dispatch-table-inl.h\",\n    \"src/sandbox/js-dispatch-table.h\",\n    \"src/sandbox/sandbox.h\",\n    \"src/sandbox/sandboxed-pointer-inl.h\",\n    \"src/sandbox/sandboxed-pointer.h\",\n    \"src/sandbox/tagged-payload.h\",\n    \"src/sandbox/testing.h\",\n    \"src/sandbox/trusted-pointer-table-inl.h\",\n    \"src/sandbox/trusted-pointer-table.h\",\n    \"src/snapshot/code-serializer.h\",\n    \"src/snapshot/context-deserializer.h\",\n    \"src/snapshot/context-serializer.h\",\n    \"src/snapshot/deserializer.h\",\n    \"src/snapshot/embedded/embedded-data-inl.h\",\n    \"src/snapshot/embedded/embedded-data.h\",\n    \"src/snapshot/embedded/embedded-file-writer-interface.h\",\n    \"src/snapshot/object-deserializer.h\",\n    \"src/snapshot/read-only-deserializer.h\",\n    \"src/snapshot/read-only-serializer-deserializer.h\",\n    \"src/snapshot/read-only-serializer.h\",\n    \"src/snapshot/references.h\",\n    \"src/snapshot/roots-serializer.h\",\n    \"src/snapshot/serializer-deserializer.h\",\n    \"src/snapshot/serializer-inl.h\",\n    \"src/snapshot/serializer.h\",\n    \"src/snapshot/shared-heap-deserializer.h\",\n    \"src/snapshot/shared-heap-serializer.h\",\n    \"src/snapshot/snapshot-data.h\",\n    \"src/snapshot/snapshot-source-sink.h\",\n    \"src/snapshot/snapshot-utils.h\",\n    \"src/snapshot/snapshot.h\",\n    \"src/snapshot/sort-builtins.h\",\n    \"src/snapshot/startup-deserializer.h\",\n    \"src/snapshot/startup-serializer.h\",\n    \"src/strings/char-predicates-inl.h\",\n    \"src/strings/char-predicates.h\",\n    \"src/strings/string-builder-inl.h\",\n    \"src/strings/string-builder.h\",\n    \"src/strings/string-case.h\",\n    \"src/strings/string-hasher-inl.h\",\n    \"src/strings/string-hasher.h\",\n    \"src/strings/string-search.h\",\n    \"src/strings/string-stream.h\",\n    \"src/strings/unicode-decoder.h\",\n    \"src/strings/unicode-inl.h\",\n    \"src/strings/unicode.h\",\n    \"src/strings/uri.h\",\n    \"src/tasks/cancelable-task.h\",\n    \"src/tasks/operations-barrier.h\",\n    \"src/tasks/task-utils.h\",\n    \"src/temporal/temporal-parser.h\",\n    \"src/torque/runtime-macro-shims.h\",\n    \"src/tracing/trace-event-no-perfetto.h\",\n    \"src/tracing/trace-event.h\",\n    \"src/tracing/traced-value.h\",\n    \"src/tracing/tracing-category-observer.h\",\n    \"src/utils/address-map.h\",\n    \"src/utils/allocation.h\",\n    \"src/utils/bit-vector.h\",\n    \"src/utils/boxed-float.h\",\n    \"src/utils/detachable-vector.h\",\n    \"src/utils/hex-format.h\",\n    \"src/utils/identity-map.h\",\n    \"src/utils/locked-queue-inl.h\",\n    \"src/utils/locked-queue.h\",\n    \"src/utils/memcopy.h\",\n    \"src/utils/ostreams.h\",\n    \"src/utils/scoped-list.h\",\n    \"src/utils/sha-256.h\",\n    \"src/utils/sparse-bit-vector.h\",\n    \"src/utils/utils-inl.h\",\n    \"src/utils/utils.h\",\n    \"src/utils/version.h\",\n    \"src/zone/accounting-allocator.h\",\n    \"src/zone/compressed-zone-ptr.h\",\n    \"src/zone/type-stats.h\",\n    \"src/zone/zone-allocator.h\",\n    \"src/zone/zone-chunk-list.h\",\n    \"src/zone/zone-compact-set.h\",\n    \"src/zone/zone-compression.h\",\n    \"src/zone/zone-containers.h\",\n    \"src/zone/zone-hashmap.h\",\n    \"src/zone/zone-list-inl.h\",\n    \"src/zone/zone-list.h\",\n    \"src/zone/zone-segment.h\",\n    \"src/zone/zone-type-traits.h\",\n    \"src/zone/zone-utils.h\",\n    \"src/zone/zone.h\",\n    \"third_party/siphash/halfsiphash.h\",\n    \"third_party/utf8-decoder/utf8-decoder.h\",\n  ]\n\n  if (v8_enable_snapshot_compression) {\n    sources += [ \"src/snapshot/snapshot-compression.h\" ]\n  }\n\n  if (v8_use_perfetto) {\n    sources -= [ \"src/tracing/trace-event-no-perfetto.h\" ]\n    sources += [\n      \"src/tracing/code-data-source.h\",\n      \"src/tracing/code-trace-context.h\",\n      \"src/tracing/perfetto-logger.h\",\n      \"src/tracing/perfetto-utils.h\",\n    ]\n  }\n\n  if (v8_enable_sparkplug) {\n    sources += [\n      \"src/baseline/baseline-assembler-inl.h\",\n      \"src/baseline/baseline-assembler.h\",\n      \"src/baseline/baseline-batch-compiler.h\",\n      \"src/baseline/baseline-compiler.h\",\n    ]\n  }\n\n  if (v8_enable_maglev) {\n    sources += [\n      \"src/maglev/maglev-assembler-inl.h\",\n      \"src/maglev/maglev-assembler.h\",\n      \"src/maglev/maglev-basic-block.h\",\n      \"src/maglev/maglev-code-gen-state.h\",\n      \"src/maglev/maglev-code-generator.h\",\n      \"src/maglev/maglev-compilation-info.h\",\n      \"src/maglev/maglev-compilation-unit.h\",\n      \"src/maglev/maglev-compiler.h\",\n      \"src/maglev/maglev-concurrent-dispatcher.h\",\n      \"src/maglev/maglev-graph-builder.h\",\n      \"src/maglev/maglev-graph-labeller.h\",\n      \"src/maglev/maglev-graph-printer.h\",\n      \"src/maglev/maglev-graph-processor.h\",\n      \"src/maglev/maglev-graph-verifier.h\",\n      \"src/maglev/maglev-graph.h\",\n      \"src/maglev/maglev-interpreter-frame-state.h\",\n      \"src/maglev/maglev-ir-inl.h\",\n      \"src/maglev/maglev-ir.h\",\n      \"src/maglev/maglev-phi-representation-selector.h\",\n      \"src/maglev/maglev-pipeline-statistics.h\",\n      \"src/maglev/maglev-post-hoc-optimizations-processors.h\",\n      \"src/maglev/maglev-pre-regalloc-codegen-processors.h\",\n      \"src/maglev/maglev-regalloc-data.h\",\n      \"src/maglev/maglev-regalloc.h\",\n      \"src/maglev/maglev-register-frame-array.h\",\n      \"src/maglev/maglev.h\",\n    ]\n    if (v8_current_cpu == \"arm\") {\n      sources += [ \"src/maglev/arm/maglev-assembler-arm-inl.h\" ]\n    } else if (v8_current_cpu == \"arm64\") {\n      sources += [ \"src/maglev/arm64/maglev-assembler-arm64-inl.h\" ]\n    } else if (v8_current_cpu == \"riscv64\") {\n      sources += [ \"src/maglev/riscv/maglev-assembler-riscv-inl.h\" ]\n    } else if (v8_current_cpu == \"x64\") {\n      sources += [ \"src/maglev/x64/maglev-assembler-x64-inl.h\" ]\n    } else if (v8_current_cpu == \"s390x\") {\n      sources += [ \"src/maglev/s390/maglev-assembler-s390-inl.h\" ]\n    }\n  }\n\n  if (v8_enable_webassembly) {\n    sources += [\n      \"src/asmjs/asm-js.h\",\n      \"src/asmjs/asm-names.h\",\n      \"src/asmjs/asm-parser.h\",\n      \"src/asmjs/asm-scanner.h\",\n      \"src/asmjs/asm-types.h\",\n      \"src/compiler/int64-lowering.h\",\n      \"src/compiler/turboshaft/growable-stacks-reducer.h\",\n      \"src/compiler/turboshaft/int64-lowering-phase.h\",\n      \"src/compiler/turboshaft/int64-lowering-reducer.h\",\n      \"src/compiler/turboshaft/wasm-assembler-helpers.h\",\n      \"src/compiler/turboshaft/wasm-gc-optimize-phase.h\",\n      \"src/compiler/turboshaft/wasm-gc-typed-optimization-reducer.h\",\n      \"src/compiler/turboshaft/wasm-in-js-inlining-phase.h\",\n      \"src/compiler/turboshaft/wasm-in-js-inlining-reducer-inl.h\",\n      \"src/compiler/turboshaft/wasm-js-lowering-reducer.h\",\n      \"src/compiler/turboshaft/wasm-load-elimination-reducer.h\",\n      \"src/compiler/turboshaft/wasm-lowering-phase.h\",\n      \"src/compiler/turboshaft/wasm-lowering-reducer.h\",\n      \"src/compiler/turboshaft/wasm-optimize-phase.h\",\n      \"src/compiler/turboshaft/wasm-turboshaft-compiler.h\",\n      \"src/compiler/wasm-address-reassociation.h\",\n      \"src/compiler/wasm-call-descriptors.h\",\n      \"src/compiler/wasm-compiler-definitions.h\",\n      \"src/compiler/wasm-compiler.h\",\n      \"src/compiler/wasm-escape-analysis.h\",\n      \"src/compiler/wasm-gc-lowering.h\",\n      \"src/compiler/wasm-gc-operator-reducer.h\",\n      \"src/compiler/wasm-graph-assembler.h\",\n      \"src/compiler/wasm-inlining-into-js.h\",\n      \"src/compiler/wasm-inlining.h\",\n      \"src/compiler/wasm-js-lowering.h\",\n      \"src/compiler/wasm-load-elimination.h\",\n      \"src/compiler/wasm-loop-peeling.h\",\n      \"src/compiler/wasm-typer.h\",\n      \"src/debug/debug-wasm-objects-inl.h\",\n      \"src/debug/debug-wasm-objects.h\",\n      \"src/trap-handler/trap-handler-internal.h\",\n      \"src/trap-handler/trap-handler.h\",\n      \"src/wasm/baseline/liftoff-assembler-defs.h\",\n      \"src/wasm/baseline/liftoff-assembler-inl.h\",\n      \"src/wasm/baseline/liftoff-assembler.h\",\n      \"src/wasm/baseline/liftoff-compiler.h\",\n      \"src/wasm/baseline/liftoff-register.h\",\n      \"src/wasm/baseline/liftoff-varstate.h\",\n      \"src/wasm/baseline/parallel-move-inl.h\",\n      \"src/wasm/baseline/parallel-move.h\",\n      \"src/wasm/canonical-types.h\",\n      \"src/wasm/code-space-access.h\",\n      \"src/wasm/compilation-environment-inl.h\",\n      \"src/wasm/compilation-environment.h\",\n      \"src/wasm/constant-expression-interface.h\",\n      \"src/wasm/constant-expression.h\",\n      \"src/wasm/decoder.h\",\n      \"src/wasm/float16.h\",\n      \"src/wasm/function-body-decoder-impl.h\",\n      \"src/wasm/function-body-decoder.h\",\n      \"src/wasm/function-compiler.h\",\n      \"src/wasm/fuzzing/random-module-generation.h\",\n      \"src/wasm/graph-builder-interface.h\",\n      \"src/wasm/inlining-tree.h\",\n      \"src/wasm/jump-table-assembler.h\",\n      \"src/wasm/leb-helper.h\",\n      \"src/wasm/local-decl-encoder.h\",\n      \"src/wasm/memory-tracing.h\",\n      \"src/wasm/module-compiler.h\",\n      \"src/wasm/module-decoder-impl.h\",\n      \"src/wasm/module-decoder.h\",\n      \"src/wasm/module-instantiate.h\",\n      \"src/wasm/names-provider.h\",\n      \"src/wasm/object-access.h\",\n      \"src/wasm/pgo.h\",\n      \"src/wasm/signature-hashing.h\",\n      \"src/wasm/simd-shuffle.h\",\n      \"src/wasm/stacks.h\",\n      \"src/wasm/std-object-sizes.h\",\n      \"src/wasm/streaming-decoder.h\",\n      \"src/wasm/string-builder-multiline.h\",\n      \"src/wasm/string-builder.h\",\n      \"src/wasm/struct-types.h\",\n      \"src/wasm/turboshaft-graph-interface.h\",\n      \"src/wasm/value-type.h\",\n      \"src/wasm/wasm-arguments.h\",\n      \"src/wasm/wasm-builtin-list.h\",\n      \"src/wasm/wasm-code-manager.h\",\n      \"src/wasm/wasm-code-pointer-table-inl.h\",\n      \"src/wasm/wasm-code-pointer-table.h\",\n      \"src/wasm/wasm-debug.h\",\n      \"src/wasm/wasm-deopt-data.h\",\n      \"src/wasm/wasm-disassembler-impl.h\",\n      \"src/wasm/wasm-disassembler.h\",\n      \"src/wasm/wasm-engine.h\",\n      \"src/wasm/wasm-external-refs.h\",\n      \"src/wasm/wasm-feature-flags.h\",\n      \"src/wasm/wasm-features.h\",\n      \"src/wasm/wasm-import-wrapper-cache.h\",\n      \"src/wasm/wasm-init-expr.h\",\n      \"src/wasm/wasm-js.h\",\n      \"src/wasm/wasm-linkage.h\",\n      \"src/wasm/wasm-module-builder.h\",\n      \"src/wasm/wasm-module-sourcemap.h\",\n      \"src/wasm/wasm-module.h\",\n      \"src/wasm/wasm-objects-inl.h\",\n      \"src/wasm/wasm-objects.h\",\n      \"src/wasm/wasm-opcodes-inl.h\",\n      \"src/wasm/wasm-opcodes.h\",\n      \"src/wasm/wasm-result.h\",\n      \"src/wasm/wasm-serialization.h\",\n      \"src/wasm/wasm-subtyping.h\",\n      \"src/wasm/wasm-tier.h\",\n      \"src/wasm/wasm-value.h\",\n      \"src/wasm/well-known-imports.h\",\n      \"third_party/utf8-decoder/generalized-utf8-decoder.h\",\n    ]\n\n    if (v8_enable_drumbrake) {\n      sources += [\n        \"src/wasm/interpreter/instruction-handlers.h\",\n        \"src/wasm/interpreter/wasm-interpreter-inl.h\",\n        \"src/wasm/interpreter/wasm-interpreter-objects-inl.h\",\n        \"src/wasm/interpreter/wasm-interpreter-objects.h\",\n        \"src/wasm/interpreter/wasm-interpreter-runtime-inl.h\",\n        \"src/wasm/interpreter/wasm-interpreter-runtime.h\",\n        \"src/wasm/interpreter/wasm-interpreter.h\",\n      ]\n    }\n  }\n\n  if (v8_enable_wasm_simd256_revec) {\n    sources += [\n      \"src/compiler/linear-scheduler.h\",\n      \"src/compiler/revectorizer.h\",\n      \"src/compiler/turboshaft/wasm-revec-phase.h\",\n      \"src/compiler/turboshaft/wasm-revec-reducer.h\",\n    ]\n  }\n\n  if (v8_enable_i18n_support) {\n    sources += [\n      \"src/objects/intl-objects.h\",\n      \"src/objects/js-break-iterator-inl.h\",\n      \"src/objects/js-break-iterator.h\",\n      \"src/objects/js-collator-inl.h\",\n      \"src/objects/js-collator.h\",\n      \"src/objects/js-date-time-format-inl.h\",\n      \"src/objects/js-date-time-format.h\",\n      \"src/objects/js-display-names-inl.h\",\n      \"src/objects/js-display-names.h\",\n      \"src/objects/js-duration-format-inl.h\",\n      \"src/objects/js-duration-format.h\",\n      \"src/objects/js-list-format-inl.h\",\n      \"src/objects/js-list-format.h\",\n      \"src/objects/js-locale-inl.h\",\n      \"src/objects/js-locale.h\",\n      \"src/objects/js-number-format-inl.h\",\n      \"src/objects/js-number-format.h\",\n      \"src/objects/js-plural-rules-inl.h\",\n      \"src/objects/js-plural-rules.h\",\n      \"src/objects/js-relative-time-format-inl.h\",\n      \"src/objects/js-relative-time-format.h\",\n      \"src/objects/js-segment-iterator-inl.h\",\n      \"src/objects/js-segment-iterator.h\",\n      \"src/objects/js-segmenter-inl.h\",\n      \"src/objects/js-segmenter.h\",\n    ]\n  }\n\n  if (!v8_control_flow_integrity) {\n    sources += [ \"src/execution/pointer-authentication-dummy.h\" ]\n  }\n\n  if (v8_enable_wasm_gdb_remote_debugging) {\n    sources += [\n      \"src/debug/wasm/gdb-server/gdb-remote-util.h\",\n      \"src/debug/wasm/gdb-server/gdb-server-thread.h\",\n      \"src/debug/wasm/gdb-server/gdb-server.h\",\n      \"src/debug/wasm/gdb-server/packet.h\",\n      \"src/debug/wasm/gdb-server/session.h\",\n      \"src/debug/wasm/gdb-server/target.h\",\n      \"src/debug/wasm/gdb-server/transport.h\",\n      \"src/debug/wasm/gdb-server/wasm-module-debug.h\",\n    ]\n  }\n\n  if (v8_enable_heap_snapshot_verify) {\n    sources += [ \"src/heap/reference-summarizer.h\" ]\n  }\n\n  if (v8_current_cpu == \"x86\") {\n    sources += [\n      ### gcmole(ia32) ###\n      \"src/baseline/ia32/baseline-assembler-ia32-inl.h\",\n      \"src/baseline/ia32/baseline-compiler-ia32-inl.h\",\n      \"src/codegen/ia32/assembler-ia32-inl.h\",\n      \"src/codegen/ia32/assembler-ia32.h\",\n      \"src/codegen/ia32/constants-ia32.h\",\n      \"src/codegen/ia32/interface-descriptors-ia32-inl.h\",\n      \"src/codegen/ia32/macro-assembler-ia32.h\",\n      \"src/codegen/ia32/register-ia32.h\",\n      \"src/codegen/ia32/reglist-ia32.h\",\n      \"src/codegen/ia32/sse-instr.h\",\n      \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.h\",\n      \"src/compiler/backend/ia32/instruction-codes-ia32.h\",\n      \"src/execution/ia32/frame-constants-ia32.h\",\n      \"src/regexp/ia32/regexp-macro-assembler-ia32.h\",\n      \"src/wasm/baseline/ia32/liftoff-assembler-ia32-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/ia32/baseline-assembler-ia32-inl.h\",\n        \"src/baseline/ia32/baseline-compiler-ia32-inl.h\",\n      ]\n    }\n  } else if (v8_current_cpu == \"x64\") {\n    sources += [\n      ### gcmole(x64) ###\n      \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.h\",\n      \"src/codegen/x64/assembler-x64-inl.h\",\n      \"src/codegen/x64/assembler-x64.h\",\n      \"src/codegen/x64/builtin-jump-table-info-x64.h\",\n      \"src/codegen/x64/constants-x64.h\",\n      \"src/codegen/x64/fma-instr.h\",\n      \"src/codegen/x64/interface-descriptors-x64-inl.h\",\n      \"src/codegen/x64/macro-assembler-x64.h\",\n      \"src/codegen/x64/register-x64.h\",\n      \"src/codegen/x64/reglist-x64.h\",\n      \"src/codegen/x64/sse-instr.h\",\n      \"src/compiler/backend/x64/instruction-codes-x64.h\",\n      \"src/compiler/backend/x64/unwinding-info-writer-x64.h\",\n      \"src/execution/x64/frame-constants-x64.h\",\n      \"src/regexp/x64/regexp-macro-assembler-x64.h\",\n      \"src/wasm/baseline/x64/liftoff-assembler-x64-inl.h\",\n      \"third_party/valgrind/valgrind.h\",\n    ]\n\n    if (is_win) {\n      sources += [ \"src/diagnostics/unwinding-info-win64.h\" ]\n    }\n\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/x64/baseline-assembler-x64-inl.h\",\n        \"src/baseline/x64/baseline-compiler-x64-inl.h\",\n      ]\n    }\n\n    if (v8_enable_webassembly) {\n      # iOS Xcode simulator builds run on an x64 target. iOS and macOS are both\n      # based on Darwin and thus POSIX-compliant to a similar degree.\n      if (is_linux || is_chromeos || is_mac || is_ios ||\n          target_os == \"freebsd\") {\n        sources += [ \"src/trap-handler/handler-inside-posix.h\" ]\n      } else if (is_win) {\n        sources += [ \"src/trap-handler/handler-inside-win.h\" ]\n      }\n    }\n  } else if (v8_current_cpu == \"arm\") {\n    sources += [\n      ### gcmole(arm) ###\n      \"src/codegen/arm/assembler-arm-inl.h\",\n      \"src/codegen/arm/assembler-arm.h\",\n      \"src/codegen/arm/constants-arm.h\",\n      \"src/codegen/arm/interface-descriptors-arm-inl.h\",\n      \"src/codegen/arm/macro-assembler-arm.h\",\n      \"src/codegen/arm/register-arm.h\",\n      \"src/codegen/arm/reglist-arm.h\",\n      \"src/compiler/backend/arm/instruction-codes-arm.h\",\n      \"src/compiler/backend/arm/unwinding-info-writer-arm.h\",\n      \"src/execution/arm/frame-constants-arm.h\",\n      \"src/execution/arm/simulator-arm.h\",\n      \"src/regexp/arm/regexp-macro-assembler-arm.h\",\n      \"src/wasm/baseline/arm/liftoff-assembler-arm-inl.h\",\n    ]\n\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/arm/baseline-assembler-arm-inl.h\",\n        \"src/baseline/arm/baseline-compiler-arm-inl.h\",\n      ]\n    }\n  } else if (v8_current_cpu == \"arm64\") {\n    sources += [\n      ### gcmole(arm64) ###\n      \"src/codegen/arm64/assembler-arm64-inl.h\",\n      \"src/codegen/arm64/assembler-arm64.h\",\n      \"src/codegen/arm64/constants-arm64.h\",\n      \"src/codegen/arm64/decoder-arm64-inl.h\",\n      \"src/codegen/arm64/decoder-arm64.h\",\n      \"src/codegen/arm64/instructions-arm64.h\",\n      \"src/codegen/arm64/interface-descriptors-arm64-inl.h\",\n      \"src/codegen/arm64/macro-assembler-arm64-inl.h\",\n      \"src/codegen/arm64/macro-assembler-arm64.h\",\n      \"src/codegen/arm64/register-arm64.h\",\n      \"src/codegen/arm64/reglist-arm64.h\",\n      \"src/codegen/arm64/utils-arm64.h\",\n      \"src/compiler/backend/arm64/instruction-codes-arm64.h\",\n      \"src/compiler/backend/arm64/unwinding-info-writer-arm64.h\",\n      \"src/diagnostics/arm64/disasm-arm64.h\",\n      \"src/execution/arm64/frame-constants-arm64.h\",\n      \"src/execution/arm64/simulator-arm64.h\",\n      \"src/regexp/arm64/regexp-macro-assembler-arm64.h\",\n      \"src/wasm/baseline/arm64/liftoff-assembler-arm64-inl.h\",\n    ]\n    if (v8_control_flow_integrity) {\n      sources += [ \"src/execution/arm64/pointer-authentication-arm64.h\" ]\n    }\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/arm64/baseline-assembler-arm64-inl.h\",\n        \"src/baseline/arm64/baseline-compiler-arm64-inl.h\",\n      ]\n    }\n    if (v8_enable_webassembly) {\n      # Trap handling is enabled on arm64 Mac and Linux and in simulators on\n      # x64 on Linux and Mac.\n      if ((current_cpu == \"arm64\" &&\n           (is_linux || is_chromeos || is_mac || is_ios)) ||\n          (current_cpu == \"x64\" && (is_linux || is_chromeos || is_mac))) {\n        sources += [ \"src/trap-handler/handler-inside-posix.h\" ]\n      }\n      if (current_cpu == \"x64\" &&\n          (is_linux || is_chromeos || is_mac || is_win)) {\n        sources += [ \"src/trap-handler/trap-handler-simulator.h\" ]\n      }\n    }\n    if (is_win) {\n      sources += [ \"src/diagnostics/unwinding-info-win64.h\" ]\n    }\n  } else if (v8_current_cpu == \"mips64\" || v8_current_cpu == \"mips64el\") {\n    sources += [\n      ### gcmole(mips64el) ###\n      \"src/codegen/mips64/assembler-mips64-inl.h\",\n      \"src/codegen/mips64/assembler-mips64.h\",\n      \"src/codegen/mips64/constants-mips64.h\",\n      \"src/codegen/mips64/macro-assembler-mips64.h\",\n      \"src/codegen/mips64/register-mips64.h\",\n      \"src/codegen/mips64/reglist-mips64.h\",\n      \"src/compiler/backend/mips64/instruction-codes-mips64.h\",\n      \"src/execution/mips64/frame-constants-mips64.h\",\n      \"src/execution/mips64/simulator-mips64.h\",\n      \"src/regexp/mips64/regexp-macro-assembler-mips64.h\",\n      \"src/wasm/baseline/mips64/liftoff-assembler-mips64-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/mips64/baseline-assembler-mips64-inl.h\",\n        \"src/baseline/mips64/baseline-compiler-mips64-inl.h\",\n      ]\n    }\n  } else if (v8_current_cpu == \"loong64\") {\n    sources += [\n      ### gcmole(loong64) ###\n      \"src/codegen/loong64/assembler-loong64-inl.h\",\n      \"src/codegen/loong64/assembler-loong64.h\",\n      \"src/codegen/loong64/constants-loong64.h\",\n      \"src/codegen/loong64/macro-assembler-loong64.h\",\n      \"src/codegen/loong64/register-loong64.h\",\n      \"src/codegen/loong64/reglist-loong64.h\",\n      \"src/compiler/backend/loong64/instruction-codes-loong64.h\",\n      \"src/execution/loong64/frame-constants-loong64.h\",\n      \"src/execution/loong64/simulator-loong64.h\",\n      \"src/regexp/loong64/regexp-macro-assembler-loong64.h\",\n      \"src/wasm/baseline/loong64/liftoff-assembler-loong64-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/loong64/baseline-assembler-loong64-inl.h\",\n        \"src/baseline/loong64/baseline-compiler-loong64-inl.h\",\n      ]\n    }\n    if (v8_enable_webassembly) {\n      # Trap handling is enabled on loong64 Linux and in simulators on\n      # x64 on Linux.\n      if ((current_cpu == \"loong64\" && is_linux) ||\n          (current_cpu == \"x64\" && is_linux)) {\n        sources += [ \"src/trap-handler/handler-inside-posix.h\" ]\n      }\n      if (current_cpu == \"x64\" && is_linux) {\n        sources += [ \"src/trap-handler/trap-handler-simulator.h\" ]\n      }\n    }\n  } else if (v8_current_cpu == \"ppc64\") {\n    sources += [\n      ### gcmole(ppc64) ###\n      \"src/codegen/ppc/assembler-ppc-inl.h\",\n      \"src/codegen/ppc/assembler-ppc.h\",\n      \"src/codegen/ppc/constants-ppc.h\",\n      \"src/codegen/ppc/interface-descriptors-ppc-inl.h\",\n      \"src/codegen/ppc/macro-assembler-ppc.h\",\n      \"src/codegen/ppc/register-ppc.h\",\n      \"src/codegen/ppc/reglist-ppc.h\",\n      \"src/compiler/backend/ppc/instruction-codes-ppc.h\",\n      \"src/compiler/backend/ppc/unwinding-info-writer-ppc.h\",\n      \"src/execution/ppc/frame-constants-ppc.h\",\n      \"src/execution/ppc/simulator-ppc.h\",\n      \"src/regexp/ppc/regexp-macro-assembler-ppc.h\",\n      \"src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/ppc/baseline-assembler-ppc-inl.h\",\n        \"src/baseline/ppc/baseline-compiler-ppc-inl.h\",\n      ]\n    }\n  } else if (v8_current_cpu == \"s390x\") {\n    sources += [\n      ### gcmole(s390) ###\n      \"src/codegen/s390/assembler-s390-inl.h\",\n      \"src/codegen/s390/assembler-s390.h\",\n      \"src/codegen/s390/constants-s390.h\",\n      \"src/codegen/s390/interface-descriptors-s390-inl.h\",\n      \"src/codegen/s390/macro-assembler-s390.h\",\n      \"src/codegen/s390/register-s390.h\",\n      \"src/codegen/s390/reglist-s390.h\",\n      \"src/compiler/backend/s390/instruction-codes-s390.h\",\n      \"src/compiler/backend/s390/unwinding-info-writer-s390.h\",\n      \"src/execution/s390/frame-constants-s390.h\",\n      \"src/execution/s390/simulator-s390.h\",\n      \"src/regexp/s390/regexp-macro-assembler-s390.h\",\n      \"src/wasm/baseline/s390/liftoff-assembler-s390-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/s390/baseline-assembler-s390-inl.h\",\n        \"src/baseline/s390/baseline-compiler-s390-inl.h\",\n      ]\n    }\n  } else if (v8_current_cpu == \"riscv64\") {\n    sources += [\n      ### gcmole(riscv64) ###\n      \"src/baseline/riscv/baseline-assembler-riscv-inl.h\",\n      \"src/baseline/riscv/baseline-compiler-riscv-inl.h\",\n      \"src/codegen/riscv/assembler-riscv-inl.h\",\n      \"src/codegen/riscv/assembler-riscv.h\",\n      \"src/codegen/riscv/base-assembler-riscv.h\",\n      \"src/codegen/riscv/base-constants-riscv.h\",\n      \"src/codegen/riscv/base-riscv-i.h\",\n      \"src/codegen/riscv/constant-riscv-a.h\",\n      \"src/codegen/riscv/constant-riscv-b.h\",\n      \"src/codegen/riscv/constant-riscv-c.h\",\n      \"src/codegen/riscv/constant-riscv-d.h\",\n      \"src/codegen/riscv/constant-riscv-f.h\",\n      \"src/codegen/riscv/constant-riscv-m.h\",\n      \"src/codegen/riscv/constant-riscv-v.h\",\n      \"src/codegen/riscv/constant-riscv-zicond.h\",\n      \"src/codegen/riscv/constant-riscv-zicsr.h\",\n      \"src/codegen/riscv/constant-riscv-zifencei.h\",\n      \"src/codegen/riscv/constants-riscv.h\",\n      \"src/codegen/riscv/extension-riscv-a.h\",\n      \"src/codegen/riscv/extension-riscv-b.h\",\n      \"src/codegen/riscv/extension-riscv-c.h\",\n      \"src/codegen/riscv/extension-riscv-d.h\",\n      \"src/codegen/riscv/extension-riscv-f.h\",\n      \"src/codegen/riscv/extension-riscv-inl.h\",\n      \"src/codegen/riscv/extension-riscv-m.h\",\n      \"src/codegen/riscv/extension-riscv-v.h\",\n      \"src/codegen/riscv/extension-riscv-zicond.h\",\n      \"src/codegen/riscv/extension-riscv-zicsr.h\",\n      \"src/codegen/riscv/extension-riscv-zifencei.h\",\n      \"src/codegen/riscv/interface-descriptors-riscv-inl.h\",\n      \"src/codegen/riscv/macro-assembler-riscv.h\",\n      \"src/codegen/riscv/register-riscv.h\",\n      \"src/codegen/riscv/reglist-riscv.h\",\n      \"src/compiler/backend/riscv/instruction-codes-riscv.h\",\n      \"src/execution/riscv/frame-constants-riscv.h\",\n      \"src/execution/riscv/simulator-riscv.h\",\n      \"src/regexp/riscv/regexp-macro-assembler-riscv.h\",\n      \"src/wasm/baseline/riscv/liftoff-assembler-riscv64-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/riscv/baseline-assembler-riscv-inl.h\",\n        \"src/baseline/riscv/baseline-compiler-riscv-inl.h\",\n      ]\n    }\n    if (v8_enable_webassembly) {\n      # Trap handling is enabled on riscv64 Linux and in simulators on\n      # x64 on Linux.\n      if ((current_cpu == \"riscv64\" && is_linux) ||\n          (current_cpu == \"x64\" && is_linux)) {\n        sources += [ \"src/trap-handler/handler-inside-posix.h\" ]\n      }\n      if (current_cpu == \"x64\" && is_linux) {\n        sources += [ \"src/trap-handler/trap-handler-simulator.h\" ]\n      }\n    }\n  } else if (v8_current_cpu == \"riscv32\") {\n    sources += [\n      ### gcmole(riscv32) ###\n      \"src/codegen/riscv/assembler-riscv-inl.h\",\n      \"src/codegen/riscv/assembler-riscv.h\",\n      \"src/codegen/riscv/base-assembler-riscv.h\",\n      \"src/codegen/riscv/base-constants-riscv.h\",\n      \"src/codegen/riscv/base-riscv-i.h\",\n      \"src/codegen/riscv/constant-riscv-a.h\",\n      \"src/codegen/riscv/constant-riscv-b.h\",\n      \"src/codegen/riscv/constant-riscv-c.h\",\n      \"src/codegen/riscv/constant-riscv-d.h\",\n      \"src/codegen/riscv/constant-riscv-f.h\",\n      \"src/codegen/riscv/constant-riscv-i.h\",\n      \"src/codegen/riscv/constant-riscv-m.h\",\n      \"src/codegen/riscv/constant-riscv-v.h\",\n      \"src/codegen/riscv/constant-riscv-zicsr.h\",\n      \"src/codegen/riscv/constant-riscv-zifencei.h\",\n      \"src/codegen/riscv/constants-riscv.h\",\n      \"src/codegen/riscv/extension-riscv-a.h\",\n      \"src/codegen/riscv/extension-riscv-b.h\",\n      \"src/codegen/riscv/extension-riscv-c.h\",\n      \"src/codegen/riscv/extension-riscv-d.h\",\n      \"src/codegen/riscv/extension-riscv-f.h\",\n      \"src/codegen/riscv/extension-riscv-inl.h\",\n      \"src/codegen/riscv/extension-riscv-m.h\",\n      \"src/codegen/riscv/extension-riscv-v.h\",\n      \"src/codegen/riscv/extension-riscv-zicsr.h\",\n      \"src/codegen/riscv/extension-riscv-zifencei.h\",\n      \"src/codegen/riscv/interface-descriptors-riscv-inl.h\",\n      \"src/codegen/riscv/macro-assembler-riscv.h\",\n      \"src/codegen/riscv/register-riscv.h\",\n      \"src/codegen/riscv/reglist-riscv.h\",\n      \"src/compiler/backend/riscv/instruction-codes-riscv.h\",\n      \"src/execution/riscv/frame-constants-riscv.h\",\n      \"src/execution/riscv/simulator-riscv.h\",\n      \"src/regexp/riscv/regexp-macro-assembler-riscv.h\",\n      \"src/wasm/baseline/riscv32/liftoff-assembler-riscv32-inl.h\",\n    ]\n    if (v8_enable_sparkplug) {\n      sources += [\n        \"src/baseline/riscv/baseline-assembler-riscv-inl.h\",\n        \"src/baseline/riscv/baseline-compiler-riscv-inl.h\",\n      ]\n    }\n  }\n\n  frameworks = []\n  if (is_ios) {\n    frameworks += [ \"BrowserEngineKit.framework\" ]\n  }\n\n  public_deps = [\n    \":torque_runtime_support\",\n    \":v8_flags\",\n    \":v8_headers\",\n    \":v8_maybe_icu\",\n    \":v8_shared_internal_headers\",\n    \"//third_party/fp16\",\n  ]\n\n  deps = [\n    \":cppgc_headers\",\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \":v8_abseil\",\n    \":v8_heap_base_headers\",\n    \":v8_libbase\",\n  ]\n}\n\nv8_compiler_sources = [\n  ### gcmole(all) ###\n  \"src/compiler/access-builder.cc\",\n  \"src/compiler/access-info.cc\",\n  \"src/compiler/add-type-assertions-reducer.cc\",\n  \"src/compiler/all-nodes.cc\",\n  \"src/compiler/backend/bitcast-elider.cc\",\n  \"src/compiler/backend/code-generator.cc\",\n  \"src/compiler/backend/frame-elider.cc\",\n  \"src/compiler/backend/gap-resolver.cc\",\n  \"src/compiler/backend/instruction-scheduler.cc\",\n  \"src/compiler/backend/instruction-selector.cc\",\n  \"src/compiler/backend/instruction.cc\",\n  \"src/compiler/backend/jump-threading.cc\",\n  \"src/compiler/backend/move-optimizer.cc\",\n  \"src/compiler/backend/register-allocator-verifier.cc\",\n  \"src/compiler/backend/register-allocator.cc\",\n  \"src/compiler/backend/spill-placer.cc\",\n  \"src/compiler/basic-block-instrumentor.cc\",\n  \"src/compiler/branch-condition-duplicator.cc\",\n  \"src/compiler/branch-elimination.cc\",\n  \"src/compiler/bytecode-analysis.cc\",\n  \"src/compiler/bytecode-graph-builder.cc\",\n  \"src/compiler/bytecode-liveness-map.cc\",\n  \"src/compiler/c-linkage.cc\",\n  \"src/compiler/checkpoint-elimination.cc\",\n  \"src/compiler/code-assembler.cc\",\n  \"src/compiler/common-node-cache.cc\",\n  \"src/compiler/common-operator-reducer.cc\",\n  \"src/compiler/common-operator.cc\",\n  \"src/compiler/compilation-dependencies.cc\",\n  \"src/compiler/compiler-source-position-table.cc\",\n  \"src/compiler/constant-folding-reducer.cc\",\n  \"src/compiler/control-equivalence.cc\",\n  \"src/compiler/csa-load-elimination.cc\",\n  \"src/compiler/dead-code-elimination.cc\",\n  \"src/compiler/decompression-optimizer.cc\",\n  \"src/compiler/escape-analysis-reducer.cc\",\n  \"src/compiler/escape-analysis.cc\",\n  \"src/compiler/fast-api-calls.cc\",\n  \"src/compiler/feedback-source.cc\",\n  \"src/compiler/frame-states.cc\",\n  \"src/compiler/frame.cc\",\n  \"src/compiler/graph-assembler.cc\",\n  \"src/compiler/graph-reducer.cc\",\n  \"src/compiler/graph-trimmer.cc\",\n  \"src/compiler/heap-refs.cc\",\n  \"src/compiler/js-call-reducer.cc\",\n  \"src/compiler/js-context-specialization.cc\",\n  \"src/compiler/js-create-lowering.cc\",\n  \"src/compiler/js-generic-lowering.cc\",\n  \"src/compiler/js-graph.cc\",\n  \"src/compiler/js-heap-broker.cc\",\n  \"src/compiler/js-inlining-heuristic.cc\",\n  \"src/compiler/js-inlining.cc\",\n  \"src/compiler/js-intrinsic-lowering.cc\",\n  \"src/compiler/js-native-context-specialization.cc\",\n  \"src/compiler/js-operator.cc\",\n  \"src/compiler/js-type-hint-lowering.cc\",\n  \"src/compiler/js-typed-lowering.cc\",\n  \"src/compiler/late-escape-analysis.cc\",\n  \"src/compiler/linkage.cc\",\n  \"src/compiler/load-elimination.cc\",\n  \"src/compiler/loop-analysis.cc\",\n  \"src/compiler/loop-peeling.cc\",\n  \"src/compiler/loop-unrolling.cc\",\n  \"src/compiler/loop-variable-optimizer.cc\",\n  \"src/compiler/machine-graph-verifier.cc\",\n  \"src/compiler/machine-graph.cc\",\n  \"src/compiler/machine-operator-reducer.cc\",\n  \"src/compiler/machine-operator.cc\",\n  \"src/compiler/map-inference.cc\",\n  \"src/compiler/memory-lowering.cc\",\n  \"src/compiler/memory-optimizer.cc\",\n  \"src/compiler/node-marker.cc\",\n  \"src/compiler/node-matchers.cc\",\n  \"src/compiler/node-observer.cc\",\n  \"src/compiler/node-origin-table.cc\",\n  \"src/compiler/node-properties.cc\",\n  \"src/compiler/node.cc\",\n  \"src/compiler/opcodes.cc\",\n  \"src/compiler/operation-typer.cc\",\n  \"src/compiler/operator-properties.cc\",\n  \"src/compiler/operator.cc\",\n  \"src/compiler/osr.cc\",\n  \"src/compiler/pair-load-store-reducer.cc\",\n  \"src/compiler/pipeline-statistics.cc\",\n  \"src/compiler/pipeline.cc\",\n  \"src/compiler/property-access-builder.cc\",\n  \"src/compiler/raw-machine-assembler.cc\",\n  \"src/compiler/redundancy-elimination.cc\",\n  \"src/compiler/refs-map.cc\",\n  \"src/compiler/representation-change.cc\",\n  \"src/compiler/schedule.cc\",\n  \"src/compiler/scheduler.cc\",\n  \"src/compiler/select-lowering.cc\",\n  \"src/compiler/simplified-lowering-verifier.cc\",\n  \"src/compiler/simplified-lowering.cc\",\n  \"src/compiler/simplified-operator-reducer.cc\",\n  \"src/compiler/simplified-operator.cc\",\n  \"src/compiler/state-values-utils.cc\",\n  \"src/compiler/string-builder-optimizer.cc\",\n  \"src/compiler/turbofan-enabled.cc\",\n  \"src/compiler/turbofan-graph-visualizer.cc\",\n  \"src/compiler/turbofan-graph.cc\",\n  \"src/compiler/turbofan-typer.cc\",\n  \"src/compiler/turbofan-types.cc\",\n  \"src/compiler/turboshaft/analyzer-iterator.cc\",\n  \"src/compiler/turboshaft/assembler.cc\",\n  \"src/compiler/turboshaft/block-instrumentation-phase.cc\",\n  \"src/compiler/turboshaft/block-instrumentation-reducer.cc\",\n  \"src/compiler/turboshaft/build-graph-phase.cc\",\n  \"src/compiler/turboshaft/code-elimination-and-simplification-phase.cc\",\n  \"src/compiler/turboshaft/copying-phase.cc\",\n  \"src/compiler/turboshaft/csa-optimize-phase.cc\",\n  \"src/compiler/turboshaft/debug-feature-lowering-phase.cc\",\n  \"src/compiler/turboshaft/decompression-optimization-phase.cc\",\n  \"src/compiler/turboshaft/decompression-optimization.cc\",\n  \"src/compiler/turboshaft/graph-builder.cc\",\n  \"src/compiler/turboshaft/graph-visualizer.cc\",\n  \"src/compiler/turboshaft/graph.cc\",\n  \"src/compiler/turboshaft/instruction-selection-phase.cc\",\n  \"src/compiler/turboshaft/late-escape-analysis-reducer.cc\",\n  \"src/compiler/turboshaft/late-load-elimination-reducer.cc\",\n  \"src/compiler/turboshaft/loop-finder.cc\",\n  \"src/compiler/turboshaft/loop-peeling-phase.cc\",\n  \"src/compiler/turboshaft/loop-unrolling-phase.cc\",\n  \"src/compiler/turboshaft/loop-unrolling-reducer.cc\",\n  \"src/compiler/turboshaft/machine-lowering-phase.cc\",\n  \"src/compiler/turboshaft/maglev-graph-building-phase.cc\",\n  \"src/compiler/turboshaft/memory-optimization-reducer.cc\",\n  \"src/compiler/turboshaft/operations.cc\",\n  \"src/compiler/turboshaft/optimize-phase.cc\",\n  \"src/compiler/turboshaft/phase.cc\",\n  \"src/compiler/turboshaft/pipelines.cc\",\n  \"src/compiler/turboshaft/pretenuring-propagation-reducer.cc\",\n  \"src/compiler/turboshaft/recreate-schedule-phase.cc\",\n  \"src/compiler/turboshaft/recreate-schedule.cc\",\n  \"src/compiler/turboshaft/representations.cc\",\n  \"src/compiler/turboshaft/sidetable.cc\",\n  \"src/compiler/turboshaft/simplify-tf-loops.cc\",\n  \"src/compiler/turboshaft/store-store-elimination-phase.cc\",\n  \"src/compiler/turboshaft/string-escape-analysis-reducer.cc\",\n  \"src/compiler/turboshaft/type-assertions-phase.cc\",\n  \"src/compiler/turboshaft/type-parser.cc\",\n  \"src/compiler/turboshaft/typed-optimizations-phase.cc\",\n  \"src/compiler/turboshaft/typer.cc\",\n  \"src/compiler/turboshaft/types.cc\",\n  \"src/compiler/turboshaft/use-map.cc\",\n  \"src/compiler/turboshaft/utils.cc\",\n  \"src/compiler/type-cache.cc\",\n  \"src/compiler/type-narrowing-reducer.cc\",\n  \"src/compiler/typed-optimization.cc\",\n  \"src/compiler/value-numbering-reducer.cc\",\n  \"src/compiler/verifier.cc\",\n  \"src/compiler/zone-stats.cc\",\n]\n\nif (!v8_enable_maglev) {\n  # When Maglev is not enabled, Turboshaft still needs Maglev's graph builder.\n  v8_compiler_sources += [\n    \"src/maglev/maglev-compilation-info.cc\",\n    \"src/maglev/maglev-compilation-unit.cc\",\n    \"src/maglev/maglev-graph-builder.cc\",\n    \"src/maglev/maglev-graph-printer.cc\",\n    \"src/maglev/maglev-interpreter-frame-state.cc\",\n    \"src/maglev/maglev-ir.cc\",\n    \"src/maglev/maglev-phi-representation-selector.cc\",\n  ]\n}\n\nif (v8_current_cpu == \"x86\") {\n  v8_compiler_sources += [\n    ### gcmole(ia32) ###\n    \"src/compiler/backend/ia32/code-generator-ia32.cc\",\n    \"src/compiler/backend/ia32/instruction-scheduler-ia32.cc\",\n    \"src/compiler/backend/ia32/instruction-selector-ia32.cc\",\n  ]\n} else if (v8_current_cpu == \"x64\") {\n  v8_compiler_sources += [\n    ### gcmole(x64) ###\n    \"src/compiler/backend/x64/code-generator-x64.cc\",\n    \"src/compiler/backend/x64/instruction-scheduler-x64.cc\",\n    \"src/compiler/backend/x64/instruction-selector-x64.cc\",\n    \"src/compiler/backend/x64/unwinding-info-writer-x64.cc\",\n  ]\n} else if (v8_current_cpu == \"arm\") {\n  v8_compiler_sources += [\n    ### gcmole(arm) ###\n    \"src/compiler/backend/arm/code-generator-arm.cc\",\n    \"src/compiler/backend/arm/instruction-scheduler-arm.cc\",\n    \"src/compiler/backend/arm/instruction-selector-arm.cc\",\n    \"src/compiler/backend/arm/unwinding-info-writer-arm.cc\",\n  ]\n} else if (v8_current_cpu == \"arm64\") {\n  v8_compiler_sources += [\n    ### gcmole(arm64) ###\n    \"src/compiler/backend/arm64/code-generator-arm64.cc\",\n    \"src/compiler/backend/arm64/instruction-scheduler-arm64.cc\",\n    \"src/compiler/backend/arm64/instruction-selector-arm64.cc\",\n    \"src/compiler/backend/arm64/unwinding-info-writer-arm64.cc\",\n  ]\n} else if (v8_current_cpu == \"mips64\" || v8_current_cpu == \"mips64el\") {\n  v8_compiler_sources += [\n    ### gcmole(mips64el) ###\n    \"src/compiler/backend/mips64/code-generator-mips64.cc\",\n    \"src/compiler/backend/mips64/instruction-scheduler-mips64.cc\",\n    \"src/compiler/backend/mips64/instruction-selector-mips64.cc\",\n  ]\n} else if (v8_current_cpu == \"loong64\") {\n  v8_compiler_sources += [\n    ### gcmole(loong64) ###\n    \"src/compiler/backend/loong64/code-generator-loong64.cc\",\n    \"src/compiler/backend/loong64/instruction-scheduler-loong64.cc\",\n    \"src/compiler/backend/loong64/instruction-selector-loong64.cc\",\n  ]\n} else if (v8_current_cpu == \"ppc64\") {\n  v8_compiler_sources += [\n    ### gcmole(ppc64) ###\n    \"src/compiler/backend/ppc/code-generator-ppc.cc\",\n    \"src/compiler/backend/ppc/instruction-scheduler-ppc.cc\",\n    \"src/compiler/backend/ppc/instruction-selector-ppc.cc\",\n    \"src/compiler/backend/ppc/unwinding-info-writer-ppc.cc\",\n  ]\n} else if (v8_current_cpu == \"s390x\") {\n  v8_compiler_sources += [\n    ### gcmole(s390) ###\n    \"src/compiler/backend/s390/code-generator-s390.cc\",\n    \"src/compiler/backend/s390/instruction-scheduler-s390.cc\",\n    \"src/compiler/backend/s390/instruction-selector-s390.cc\",\n    \"src/compiler/backend/s390/unwinding-info-writer-s390.cc\",\n  ]\n} else if (v8_current_cpu == \"riscv64\") {\n  v8_compiler_sources += [\n    ### gcmole(riscv64) ###\n    \"src/compiler/backend/riscv/code-generator-riscv.cc\",\n    \"src/compiler/backend/riscv/instruction-scheduler-riscv.cc\",\n    \"src/compiler/backend/riscv/instruction-selector-riscv64.cc\",\n  ]\n} else if (v8_current_cpu == \"riscv32\") {\n  v8_compiler_sources += [\n    ### gcmole(riscv32) ###\n    \"src/compiler/backend/riscv/code-generator-riscv.cc\",\n    \"src/compiler/backend/riscv/instruction-scheduler-riscv.cc\",\n    \"src/compiler/backend/riscv/instruction-selector-riscv32.cc\",\n  ]\n}\n\nif (v8_enable_webassembly) {\n  v8_compiler_sources += [\n    \"src/compiler/int64-lowering.cc\",\n    \"src/compiler/turboshaft/int64-lowering-phase.cc\",\n    \"src/compiler/turboshaft/wasm-gc-optimize-phase.cc\",\n    \"src/compiler/turboshaft/wasm-gc-typed-optimization-reducer.cc\",\n    \"src/compiler/turboshaft/wasm-in-js-inlining-phase.cc\",\n    \"src/compiler/turboshaft/wasm-lowering-phase.cc\",\n    \"src/compiler/turboshaft/wasm-optimize-phase.cc\",\n    \"src/compiler/turboshaft/wasm-turboshaft-compiler.cc\",\n    \"src/compiler/wasm-address-reassociation.cc\",\n    \"src/compiler/wasm-call-descriptors.cc\",\n    \"src/compiler/wasm-compiler-definitions.cc\",\n    \"src/compiler/wasm-compiler.cc\",\n    \"src/compiler/wasm-escape-analysis.cc\",\n    \"src/compiler/wasm-gc-lowering.cc\",\n    \"src/compiler/wasm-gc-operator-reducer.cc\",\n    \"src/compiler/wasm-graph-assembler.cc\",\n    \"src/compiler/wasm-inlining-into-js.cc\",\n    \"src/compiler/wasm-inlining.cc\",\n    \"src/compiler/wasm-js-lowering.cc\",\n    \"src/compiler/wasm-load-elimination.cc\",\n    \"src/compiler/wasm-loop-peeling.cc\",\n    \"src/compiler/wasm-typer.cc\",\n  ]\n}\n\nif (v8_enable_wasm_simd256_revec) {\n  v8_compiler_sources += [\n    \"src/compiler/linear-scheduler.cc\",\n    \"src/compiler/revectorizer.cc\",\n    \"src/compiler/turboshaft/wasm-revec-phase.cc\",\n    \"src/compiler/turboshaft/wasm-revec-reducer.cc\",\n  ]\n}\n\n# The src/compiler files for use in mksnapshot.\n# - These might be built with additional optimizations if\n#   v8_enable_fast_mksnapshot is set.\n# - We always include Turbofan even if v8_enable_turbofan is unset s.t.\n#   builtins can be generated by mksnapshot.\nv8_source_set(\"v8_compiler_for_mksnapshot_source_set\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  sources = v8_compiler_sources\n\n  public_deps = [\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \":v8_abseil\",\n    \":v8_maybe_icu\",\n    \":v8_tracing\",\n  ]\n\n  deps = [\n    \":v8_base_without_compiler\",\n    \":v8_internal_headers\",\n    \":v8_libbase\",\n    \":v8_shared_internal_headers\",\n  ]\n\n  if (is_debug && !v8_optimized_debug && v8_enable_fast_mksnapshot) {\n    # The :no_optimize config is added to v8_add_configs in v8.gni.\n    remove_configs = [ \"//build/config/compiler:no_optimize\" ]\n    configs = [ \":always_turbofanimize\" ]\n  } else {\n    # Without this else branch, gn fails to generate build files for non-debug\n    # builds (because we try to remove a config that is not present).\n    # So we include it, even if this config is not used outside of debug builds.\n    configs = [ \":internal_config\" ]\n  }\n}\n\n# The src/compiler files with default behavior.\nv8_source_set(\"v8_compiler\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  if (v8_enable_turbofan) {\n    sources = v8_compiler_sources\n  } else {\n    # With Turbofan disabled, we only include the stubbed-out API.\n    sources = [ \"src/compiler/turbofan-disabled.cc\" ]\n  }\n\n  public_deps = [\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \":v8_abseil\",\n    \":v8_internal_headers\",\n    \":v8_maybe_icu\",\n    \":v8_tracing\",\n  ]\n\n  deps = [\n    \":v8_base_without_compiler\",\n    \":v8_libbase\",\n    \":v8_shared_internal_headers\",\n  ]\n\n  configs = [ \":internal_config\" ]\n}\n\ngroup(\"v8_compiler_for_mksnapshot\") {\n  if ((is_debug && !v8_optimized_debug && v8_enable_fast_mksnapshot) ||\n      !v8_enable_turbofan) {\n    # mksnapshot needs its own version of the compiler, either because\n    # a) we're optimizing for mksnapshot execution speed and the compiler\n    #    should be optimized even if the rest of V8 is not; or\n    # b) Turbofan is disabled and thus not compiled into the rest of V8, yet\n    #    mksnapshot still needs TF to generate builtins.\n    deps = [ \":v8_compiler_for_mksnapshot_source_set\" ]\n  } else {\n    deps = [ \":v8_compiler\" ]\n  }\n}\n\n# Any target using trace events must directly or indirectly depend on\n# v8_tracing.\ngroup(\"v8_tracing\") {\n  if (v8_use_perfetto) {\n    if (build_with_chromium) {\n      public_deps = [ \"//third_party/perfetto:libperfetto\" ]\n    } else {\n      public_deps = [ \":v8_libperfetto\" ]\n    }\n  }\n}\n\nv8_source_set(\"v8_base_without_compiler\") {\n  # Only targets in this file and gcmole can depend on this.\n  visibility = [\n    \":*\",\n    \"tools/gcmole/:*\",\n  ]\n\n  # Split static libraries on windows into two.\n  split_count = 2\n\n  sources = [\n    ### gcmole(all) ###\n    \"src/api/api-arguments.cc\",\n    \"src/api/api-natives.cc\",\n    \"src/api/api.cc\",\n    \"src/ast/ast-function-literal-id-reindexer.cc\",\n    \"src/ast/ast-value-factory.cc\",\n    \"src/ast/ast.cc\",\n    \"src/ast/modules.cc\",\n    \"src/ast/prettyprinter.cc\",\n    \"src/ast/scopes.cc\",\n    \"src/ast/source-range-ast-visitor.cc\",\n    \"src/ast/variables.cc\",\n    \"src/baseline/baseline.cc\",\n    \"src/baseline/bytecode-offset-iterator.cc\",\n    \"src/builtins/accessors.cc\",\n    \"src/builtins/builtins-abstract-module-source.cc\",\n    \"src/builtins/builtins-api.cc\",\n    \"src/builtins/builtins-array.cc\",\n    \"src/builtins/builtins-arraybuffer.cc\",\n    \"src/builtins/builtins-async-disposable-stack.cc\",\n    \"src/builtins/builtins-async-module.cc\",\n    \"src/builtins/builtins-atomics-synchronization.cc\",\n    \"src/builtins/builtins-bigint.cc\",\n    \"src/builtins/builtins-callsite.cc\",\n    \"src/builtins/builtins-collections.cc\",\n    \"src/builtins/builtins-console.cc\",\n    \"src/builtins/builtins-dataview.cc\",\n    \"src/builtins/builtins-date.cc\",\n    \"src/builtins/builtins-disposable-stack.cc\",\n    \"src/builtins/builtins-error.cc\",\n    \"src/builtins/builtins-function.cc\",\n    \"src/builtins/builtins-global.cc\",\n    \"src/builtins/builtins-internal.cc\",\n    \"src/builtins/builtins-intl.cc\",\n    \"src/builtins/builtins-json.cc\",\n    \"src/builtins/builtins-number.cc\",\n    \"src/builtins/builtins-object.cc\",\n    \"src/builtins/builtins-reflect.cc\",\n    \"src/builtins/builtins-regexp.cc\",\n    \"src/builtins/builtins-shadow-realm.cc\",\n    \"src/builtins/builtins-shared-array.cc\",\n    \"src/builtins/builtins-sharedarraybuffer.cc\",\n    \"src/builtins/builtins-string.cc\",\n    \"src/builtins/builtins-struct.cc\",\n    \"src/builtins/builtins-symbol.cc\",\n    \"src/builtins/builtins-temporal.cc\",\n    \"src/builtins/builtins-trace.cc\",\n    \"src/builtins/builtins-typed-array.cc\",\n    \"src/builtins/builtins-weak-refs.cc\",\n    \"src/builtins/builtins.cc\",\n    \"src/builtins/constants-table-builder.cc\",\n    \"src/codegen/aligned-slot-allocator.cc\",\n    \"src/codegen/assembler.cc\",\n    \"src/codegen/bailout-reason.cc\",\n    \"src/codegen/code-comments.cc\",\n    \"src/codegen/code-desc.cc\",\n    \"src/codegen/code-factory.cc\",\n    \"src/codegen/code-reference.cc\",\n    \"src/codegen/compilation-cache.cc\",\n    \"src/codegen/compiler.cc\",\n    \"src/codegen/constant-pool.cc\",\n    \"src/codegen/external-reference-encoder.cc\",\n    \"src/codegen/external-reference-table.cc\",\n    \"src/codegen/external-reference.cc\",\n    \"src/codegen/flush-instruction-cache.cc\",\n    \"src/codegen/handler-table.cc\",\n    \"src/codegen/interface-descriptors.cc\",\n    \"src/codegen/machine-type.cc\",\n    \"src/codegen/macro-assembler-base.cc\",\n    \"src/codegen/maglev-safepoint-table.cc\",\n    \"src/codegen/optimized-compilation-info.cc\",\n    \"src/codegen/pending-optimization-table.cc\",\n    \"src/codegen/register-configuration.cc\",\n    \"src/codegen/reloc-info.cc\",\n    \"src/codegen/safepoint-table.cc\",\n    \"src/codegen/source-position-table.cc\",\n    \"src/codegen/source-position.cc\",\n    \"src/codegen/tick-counter.cc\",\n    \"src/codegen/tnode.cc\",\n    \"src/codegen/unoptimized-compilation-info.cc\",\n    \"src/common/assert-scope.cc\",\n    \"src/common/code-memory-access.cc\",\n    \"src/common/ptr-compr.cc\",\n    \"src/compiler-dispatcher/lazy-compile-dispatcher.cc\",\n    \"src/compiler-dispatcher/optimizing-compile-dispatcher.cc\",\n    \"src/date/date.cc\",\n    \"src/date/dateparser.cc\",\n    \"src/debug/debug-coverage.cc\",\n    \"src/debug/debug-evaluate.cc\",\n    \"src/debug/debug-frames.cc\",\n    \"src/debug/debug-interface.cc\",\n    \"src/debug/debug-property-iterator.cc\",\n    \"src/debug/debug-scope-iterator.cc\",\n    \"src/debug/debug-scopes.cc\",\n    \"src/debug/debug-stack-trace-iterator.cc\",\n    \"src/debug/debug.cc\",\n    \"src/debug/liveedit-diff.cc\",\n    \"src/debug/liveedit.cc\",\n    \"src/deoptimizer/deoptimize-reason.cc\",\n    \"src/deoptimizer/deoptimized-frame-info.cc\",\n    \"src/deoptimizer/deoptimizer.cc\",\n    \"src/deoptimizer/frame-translation-builder.cc\",\n    \"src/deoptimizer/materialized-object-store.cc\",\n    \"src/deoptimizer/translated-state.cc\",\n    \"src/diagnostics/basic-block-profiler.cc\",\n    \"src/diagnostics/compilation-statistics.cc\",\n    \"src/diagnostics/disassembler.cc\",\n    \"src/diagnostics/eh-frame.cc\",\n    \"src/diagnostics/gdb-jit.cc\",\n    \"src/diagnostics/objects-debug.cc\",\n    \"src/diagnostics/objects-printer.cc\",\n    \"src/diagnostics/perf-jit.cc\",\n    \"src/diagnostics/unwinder.cc\",\n    \"src/execution/arguments.cc\",\n    \"src/execution/clobber-registers.cc\",\n    \"src/execution/embedder-state.cc\",\n    \"src/execution/encoded-c-signature.cc\",\n    \"src/execution/execution.cc\",\n    \"src/execution/frames.cc\",\n    \"src/execution/futex-emulation.cc\",\n    \"src/execution/interrupts-scope.cc\",\n    \"src/execution/isolate.cc\",\n    \"src/execution/local-isolate.cc\",\n    \"src/execution/messages.cc\",\n    \"src/execution/microtask-queue.cc\",\n    \"src/execution/protectors.cc\",\n    \"src/execution/simulator-base.cc\",\n    \"src/execution/stack-guard.cc\",\n    \"src/execution/thread-id.cc\",\n    \"src/execution/thread-local-top.cc\",\n    \"src/execution/tiering-manager.cc\",\n    \"src/execution/v8threads.cc\",\n    \"src/extensions/cputracemark-extension.cc\",\n    \"src/extensions/externalize-string-extension.cc\",\n    \"src/extensions/gc-extension.cc\",\n    \"src/extensions/ignition-statistics-extension.cc\",\n    \"src/extensions/statistics-extension.cc\",\n    \"src/extensions/trigger-failure-extension.cc\",\n    \"src/flags/flags.cc\",\n    \"src/handles/global-handles.cc\",\n    \"src/handles/handles.cc\",\n    \"src/handles/local-handles.cc\",\n    \"src/handles/persistent-handles.cc\",\n    \"src/handles/shared-object-conveyor-handles.cc\",\n    \"src/handles/traced-handles.cc\",\n    \"src/heap/allocation-observer.cc\",\n    \"src/heap/array-buffer-sweeper.cc\",\n    \"src/heap/code-range.cc\",\n    \"src/heap/code-stats.cc\",\n    \"src/heap/collection-barrier.cc\",\n    \"src/heap/combined-heap.cc\",\n    \"src/heap/concurrent-marking.cc\",\n    \"src/heap/cppgc-js/cpp-heap.cc\",\n    \"src/heap/cppgc-js/cpp-snapshot.cc\",\n    \"src/heap/cppgc-js/cross-heap-remembered-set.cc\",\n    \"src/heap/cppgc-js/unified-heap-marking-state.cc\",\n    \"src/heap/cppgc-js/unified-heap-marking-verifier.cc\",\n    \"src/heap/cppgc-js/unified-heap-marking-visitor.cc\",\n    \"src/heap/ephemeron-remembered-set.cc\",\n    \"src/heap/evacuation-allocator.cc\",\n    \"src/heap/evacuation-verifier.cc\",\n    \"src/heap/factory-base.cc\",\n    \"src/heap/factory.cc\",\n    \"src/heap/finalization-registry-cleanup-task.cc\",\n    \"src/heap/free-list.cc\",\n    \"src/heap/gc-tracer.cc\",\n    \"src/heap/heap-allocator.cc\",\n    \"src/heap/heap-controller.cc\",\n    \"src/heap/heap-layout-tracer.cc\",\n    \"src/heap/heap-layout.cc\",\n    \"src/heap/heap-verifier.cc\",\n    \"src/heap/heap-visitor.cc\",\n    \"src/heap/heap-write-barrier.cc\",\n    \"src/heap/heap.cc\",\n    \"src/heap/incremental-marking-job.cc\",\n    \"src/heap/incremental-marking.cc\",\n    \"src/heap/index-generator.cc\",\n    \"src/heap/large-page-metadata.cc\",\n    \"src/heap/large-spaces.cc\",\n    \"src/heap/local-factory.cc\",\n    \"src/heap/local-heap.cc\",\n    \"src/heap/main-allocator.cc\",\n    \"src/heap/mark-compact.cc\",\n    \"src/heap/mark-sweep-utilities.cc\",\n    \"src/heap/marking-barrier.cc\",\n    \"src/heap/marking-worklist.cc\",\n    \"src/heap/marking.cc\",\n    \"src/heap/memory-allocator.cc\",\n    \"src/heap/memory-balancer.cc\",\n    \"src/heap/memory-chunk-metadata.cc\",\n    \"src/heap/memory-chunk.cc\",\n    \"src/heap/memory-measurement.cc\",\n    \"src/heap/memory-reducer.cc\",\n    \"src/heap/minor-gc-job.cc\",\n    \"src/heap/minor-mark-sweep.cc\",\n    \"src/heap/mutable-page-metadata.cc\",\n    \"src/heap/new-spaces.cc\",\n    \"src/heap/object-stats.cc\",\n    \"src/heap/page-metadata.cc\",\n    \"src/heap/paged-spaces.cc\",\n    \"src/heap/pretenuring-handler.cc\",\n    \"src/heap/read-only-heap.cc\",\n    \"src/heap/read-only-promotion.cc\",\n    \"src/heap/read-only-spaces.cc\",\n    \"src/heap/safepoint.cc\",\n    \"src/heap/scavenger.cc\",\n    \"src/heap/slot-set.cc\",\n    \"src/heap/spaces.cc\",\n    \"src/heap/stress-scavenge-observer.cc\",\n    \"src/heap/sweeper.cc\",\n    \"src/heap/traced-handles-marking-visitor.cc\",\n    \"src/heap/trusted-range.cc\",\n    \"src/heap/visit-object.cc\",\n    \"src/heap/weak-object-worklists.cc\",\n    \"src/heap/zapping.cc\",\n    \"src/ic/call-optimization.cc\",\n    \"src/ic/handler-configuration.cc\",\n    \"src/ic/ic-stats.cc\",\n    \"src/ic/ic.cc\",\n    \"src/ic/stub-cache.cc\",\n    \"src/init/bootstrapper.cc\",\n    \"src/init/icu_util.cc\",\n    \"src/init/isolate-group.cc\",\n    \"src/init/startup-data-util.cc\",\n    \"src/init/v8.cc\",\n    \"src/interpreter/bytecode-array-builder.cc\",\n    \"src/interpreter/bytecode-array-iterator.cc\",\n    \"src/interpreter/bytecode-array-random-iterator.cc\",\n    \"src/interpreter/bytecode-array-writer.cc\",\n    \"src/interpreter/bytecode-decoder.cc\",\n    \"src/interpreter/bytecode-flags-and-tokens.cc\",\n    \"src/interpreter/bytecode-generator.cc\",\n    \"src/interpreter/bytecode-label.cc\",\n    \"src/interpreter/bytecode-node.cc\",\n    \"src/interpreter/bytecode-operands.cc\",\n    \"src/interpreter/bytecode-register-optimizer.cc\",\n    \"src/interpreter/bytecode-register.cc\",\n    \"src/interpreter/bytecode-source-info.cc\",\n    \"src/interpreter/bytecodes.cc\",\n    \"src/interpreter/constant-array-builder.cc\",\n    \"src/interpreter/control-flow-builders.cc\",\n    \"src/interpreter/handler-table-builder.cc\",\n    \"src/interpreter/interpreter-intrinsics.cc\",\n    \"src/interpreter/interpreter.cc\",\n    \"src/json/json-parser.cc\",\n    \"src/json/json-stringifier.cc\",\n    \"src/libsampler/sampler.cc\",\n    \"src/logging/counters.cc\",\n    \"src/logging/local-logger.cc\",\n    \"src/logging/log-file.cc\",\n    \"src/logging/log.cc\",\n    \"src/logging/metrics.cc\",\n    \"src/logging/runtime-call-stats.cc\",\n    \"src/logging/tracing-flags.cc\",\n    \"src/numbers/conversions.cc\",\n    \"src/numbers/ieee754.cc\",\n    \"src/numbers/math-random.cc\",\n    \"src/objects/abstract-code.cc\",\n    \"src/objects/backing-store.cc\",\n    \"src/objects/bigint.cc\",\n    \"src/objects/bytecode-array.cc\",\n    \"src/objects/call-site-info.cc\",\n    \"src/objects/code-kind.cc\",\n    \"src/objects/code.cc\",\n    \"src/objects/compilation-cache-table.cc\",\n    \"src/objects/contexts.cc\",\n    \"src/objects/debug-objects.cc\",\n    \"src/objects/deoptimization-data.cc\",\n    \"src/objects/dependent-code.cc\",\n    \"src/objects/elements-kind.cc\",\n    \"src/objects/elements.cc\",\n    \"src/objects/embedder-data-array.cc\",\n    \"src/objects/feedback-vector.cc\",\n    \"src/objects/field-type.cc\",\n    \"src/objects/fixed-array.cc\",\n    \"src/objects/instruction-stream.cc\",\n    \"src/objects/intl-objects.cc\",\n    \"src/objects/js-array-buffer.cc\",\n    \"src/objects/js-atomics-synchronization.cc\",\n    \"src/objects/js-break-iterator.cc\",\n    \"src/objects/js-collator.cc\",\n    \"src/objects/js-date-time-format.cc\",\n    \"src/objects/js-display-names.cc\",\n    \"src/objects/js-disposable-stack.cc\",\n    \"src/objects/js-duration-format.cc\",\n    \"src/objects/js-function.cc\",\n    \"src/objects/js-list-format.cc\",\n    \"src/objects/js-locale.cc\",\n    \"src/objects/js-number-format.cc\",\n    \"src/objects/js-objects.cc\",\n    \"src/objects/js-plural-rules.cc\",\n    \"src/objects/js-raw-json.cc\",\n    \"src/objects/js-regexp.cc\",\n    \"src/objects/js-relative-time-format.cc\",\n    \"src/objects/js-segment-iterator.cc\",\n    \"src/objects/js-segmenter.cc\",\n    \"src/objects/js-segments.cc\",\n    \"src/objects/js-struct.cc\",\n    \"src/objects/js-temporal-objects.cc\",\n    \"src/objects/js-weak-refs.cc\",\n    \"src/objects/keys.cc\",\n    \"src/objects/literal-objects.cc\",\n    \"src/objects/lookup-cache.cc\",\n    \"src/objects/lookup.cc\",\n    \"src/objects/managed.cc\",\n    \"src/objects/map-updater.cc\",\n    \"src/objects/map.cc\",\n    \"src/objects/module.cc\",\n    \"src/objects/object-type.cc\",\n    \"src/objects/objects.cc\",\n    \"src/objects/option-utils.cc\",\n    \"src/objects/ordered-hash-table.cc\",\n    \"src/objects/property-descriptor.cc\",\n    \"src/objects/property.cc\",\n    \"src/objects/regexp-match-info.cc\",\n    \"src/objects/scope-info.cc\",\n    \"src/objects/shared-function-info.cc\",\n    \"src/objects/simd.cc\",\n    \"src/objects/source-text-module.cc\",\n    \"src/objects/string-comparator.cc\",\n    \"src/objects/string-forwarding-table.cc\",\n    \"src/objects/string-table.cc\",\n    \"src/objects/string.cc\",\n    \"src/objects/swiss-name-dictionary.cc\",\n    \"src/objects/symbol-table.cc\",\n    \"src/objects/synthetic-module.cc\",\n    \"src/objects/tagged-impl.cc\",\n    \"src/objects/template-objects.cc\",\n    \"src/objects/templates.cc\",\n    \"src/objects/transitions.cc\",\n    \"src/objects/type-hints.cc\",\n    \"src/objects/value-serializer.cc\",\n    \"src/objects/visitors.cc\",\n    \"src/objects/waiter-queue-node.cc\",\n    \"src/parsing/func-name-inferrer.cc\",\n    \"src/parsing/import-attributes.cc\",\n    \"src/parsing/literal-buffer.cc\",\n    \"src/parsing/parse-info.cc\",\n    \"src/parsing/parser.cc\",\n    \"src/parsing/parsing.cc\",\n    \"src/parsing/pending-compilation-error-handler.cc\",\n    \"src/parsing/preparse-data.cc\",\n    \"src/parsing/preparser.cc\",\n    \"src/parsing/rewriter.cc\",\n    \"src/parsing/scanner-character-streams.cc\",\n    \"src/parsing/scanner.cc\",\n    \"src/parsing/token.cc\",\n    \"src/profiler/allocation-tracker.cc\",\n    \"src/profiler/cpu-profiler.cc\",\n    \"src/profiler/heap-profiler.cc\",\n    \"src/profiler/heap-snapshot-generator.cc\",\n    \"src/profiler/profile-generator.cc\",\n    \"src/profiler/profiler-listener.cc\",\n    \"src/profiler/profiler-stats.cc\",\n    \"src/profiler/sampling-heap-profiler.cc\",\n    \"src/profiler/strings-storage.cc\",\n    \"src/profiler/symbolizer.cc\",\n    \"src/profiler/tick-sample.cc\",\n    \"src/profiler/tracing-cpu-profiler.cc\",\n    \"src/profiler/weak-code-registry.cc\",\n    \"src/regexp/experimental/experimental-bytecode.cc\",\n    \"src/regexp/experimental/experimental-compiler.cc\",\n    \"src/regexp/experimental/experimental-interpreter.cc\",\n    \"src/regexp/experimental/experimental.cc\",\n    \"src/regexp/regexp-ast.cc\",\n    \"src/regexp/regexp-bytecode-generator.cc\",\n    \"src/regexp/regexp-bytecode-peephole.cc\",\n    \"src/regexp/regexp-bytecodes.cc\",\n    \"src/regexp/regexp-compiler-tonode.cc\",\n    \"src/regexp/regexp-compiler.cc\",\n    \"src/regexp/regexp-dotprinter.cc\",\n    \"src/regexp/regexp-error.cc\",\n    \"src/regexp/regexp-interpreter.cc\",\n    \"src/regexp/regexp-macro-assembler-tracer.cc\",\n    \"src/regexp/regexp-macro-assembler.cc\",\n    \"src/regexp/regexp-parser.cc\",\n    \"src/regexp/regexp-result-vector.cc\",\n    \"src/regexp/regexp-stack.cc\",\n    \"src/regexp/regexp-utils.cc\",\n    \"src/regexp/regexp.cc\",\n    \"src/roots/roots.cc\",\n    \"src/runtime/runtime-array.cc\",\n    \"src/runtime/runtime-atomics.cc\",\n    \"src/runtime/runtime-bigint.cc\",\n    \"src/runtime/runtime-classes.cc\",\n    \"src/runtime/runtime-collections.cc\",\n    \"src/runtime/runtime-compiler.cc\",\n    \"src/runtime/runtime-date.cc\",\n    \"src/runtime/runtime-debug.cc\",\n    \"src/runtime/runtime-forin.cc\",\n    \"src/runtime/runtime-function.cc\",\n    \"src/runtime/runtime-futex.cc\",\n    \"src/runtime/runtime-generator.cc\",\n    \"src/runtime/runtime-internal.cc\",\n    \"src/runtime/runtime-intl.cc\",\n    \"src/runtime/runtime-literals.cc\",\n    \"src/runtime/runtime-module.cc\",\n    \"src/runtime/runtime-numbers.cc\",\n    \"src/runtime/runtime-object.cc\",\n    \"src/runtime/runtime-operators.cc\",\n    \"src/runtime/runtime-promise.cc\",\n    \"src/runtime/runtime-proxy.cc\",\n    \"src/runtime/runtime-regexp.cc\",\n    \"src/runtime/runtime-scopes.cc\",\n    \"src/runtime/runtime-shadow-realm.cc\",\n    \"src/runtime/runtime-strings.cc\",\n    \"src/runtime/runtime-symbol.cc\",\n    \"src/runtime/runtime-temporal.cc\",\n    \"src/runtime/runtime-test.cc\",\n    \"src/runtime/runtime-trace.cc\",\n    \"src/runtime/runtime-typedarray.cc\",\n    \"src/runtime/runtime-utils.cc\",\n    \"src/runtime/runtime-weak-refs.cc\",\n    \"src/runtime/runtime.cc\",\n    \"src/sandbox/code-pointer-table.cc\",\n    \"src/sandbox/cppheap-pointer-table.cc\",\n    \"src/sandbox/external-pointer-table.cc\",\n    \"src/sandbox/hardware-support.cc\",\n    \"src/sandbox/js-dispatch-table.cc\",\n    \"src/sandbox/sandbox.cc\",\n    \"src/sandbox/testing.cc\",\n    \"src/sandbox/trusted-pointer-table.cc\",\n    \"src/snapshot/code-serializer.cc\",\n    \"src/snapshot/context-deserializer.cc\",\n    \"src/snapshot/context-serializer.cc\",\n    \"src/snapshot/deserializer.cc\",\n    \"src/snapshot/embedded/embedded-data.cc\",\n    \"src/snapshot/object-deserializer.cc\",\n    \"src/snapshot/read-only-deserializer.cc\",\n    \"src/snapshot/read-only-serializer.cc\",\n    \"src/snapshot/roots-serializer.cc\",\n    \"src/snapshot/serializer-deserializer.cc\",\n    \"src/snapshot/serializer.cc\",\n    \"src/snapshot/shared-heap-deserializer.cc\",\n    \"src/snapshot/shared-heap-serializer.cc\",\n    \"src/snapshot/snapshot-data.cc\",\n    \"src/snapshot/snapshot-source-sink.cc\",\n    \"src/snapshot/snapshot-utils.cc\",\n    \"src/snapshot/snapshot.cc\",\n    \"src/snapshot/sort-builtins.cc\",\n    \"src/snapshot/startup-deserializer.cc\",\n    \"src/snapshot/startup-serializer.cc\",\n    \"src/strings/char-predicates.cc\",\n    \"src/strings/string-builder.cc\",\n    \"src/strings/string-case.cc\",\n    \"src/strings/string-stream.cc\",\n    \"src/strings/unicode-decoder.cc\",\n    \"src/strings/unicode.cc\",\n    \"src/strings/uri.cc\",\n    \"src/tasks/cancelable-task.cc\",\n    \"src/tasks/operations-barrier.cc\",\n    \"src/tasks/task-utils.cc\",\n    \"src/temporal/temporal-parser.cc\",\n    \"src/tracing/trace-event.cc\",\n    \"src/tracing/traced-value.cc\",\n    \"src/tracing/tracing-category-observer.cc\",\n    \"src/utils/address-map.cc\",\n    \"src/utils/allocation.cc\",\n    \"src/utils/bit-vector.cc\",\n    \"src/utils/detachable-vector.cc\",\n    \"src/utils/hex-format.cc\",\n    \"src/utils/identity-map.cc\",\n    \"src/utils/memcopy.cc\",\n    \"src/utils/ostreams.cc\",\n    \"src/utils/sha-256.cc\",\n    \"src/utils/utils.cc\",\n    \"src/utils/version.cc\",\n    \"src/zone/accounting-allocator.cc\",\n    \"src/zone/type-stats.cc\",\n    \"src/zone/zone-segment.cc\",\n    \"src/zone/zone.cc\",\n    \"third_party/siphash/halfsiphash.cc\",\n  ]\n\n  if (v8_enable_snapshot_compression) {\n    sources += [ \"src/snapshot/snapshot-compression.cc\" ]\n  }\n\n  if (v8_enable_sparkplug) {\n    sources += [\n      \"src/baseline/baseline-batch-compiler.cc\",\n      \"src/baseline/baseline-compiler.cc\",\n    ]\n  }\n\n  if (v8_enable_maglev) {\n    sources += [\n      \"src/maglev/maglev-assembler.cc\",\n      \"src/maglev/maglev-code-generator.cc\",\n      \"src/maglev/maglev-compilation-info.cc\",\n      \"src/maglev/maglev-compilation-unit.cc\",\n      \"src/maglev/maglev-compiler.cc\",\n      \"src/maglev/maglev-concurrent-dispatcher.cc\",\n      \"src/maglev/maglev-graph-builder.cc\",\n      \"src/maglev/maglev-graph-printer.cc\",\n      \"src/maglev/maglev-interpreter-frame-state.cc\",\n      \"src/maglev/maglev-ir.cc\",\n      \"src/maglev/maglev-phi-representation-selector.cc\",\n      \"src/maglev/maglev-pipeline-statistics.cc\",\n      \"src/maglev/maglev-regalloc.cc\",\n      \"src/maglev/maglev.cc\",\n    ]\n    if (v8_current_cpu == \"arm\") {\n      sources += [\n        \"src/maglev/arm/maglev-assembler-arm.cc\",\n        \"src/maglev/arm/maglev-ir-arm.cc\",\n      ]\n    } else if (v8_current_cpu == \"arm64\") {\n      sources += [\n        \"src/maglev/arm64/maglev-assembler-arm64.cc\",\n        \"src/maglev/arm64/maglev-ir-arm64.cc\",\n      ]\n    } else if (v8_current_cpu == \"riscv64\") {\n      sources += [\n        \"src/maglev/riscv/maglev-assembler-riscv.cc\",\n        \"src/maglev/riscv/maglev-ir-riscv.cc\",\n      ]\n    } else if (v8_current_cpu == \"x64\") {\n      sources += [\n        \"src/maglev/x64/maglev-assembler-x64.cc\",\n        \"src/maglev/x64/maglev-ir-x64.cc\",\n      ]\n    } else if (v8_current_cpu == \"s390x\") {\n      sources += [\n        \"src/maglev/s390/maglev-assembler-s390.cc\",\n        \"src/maglev/s390/maglev-ir-s390.cc\",\n      ]\n    }\n  }\n\n  if (v8_use_perfetto) {\n    sources += [\n      \"src/tracing/code-data-source.cc\",\n      \"src/tracing/perfetto-logger.cc\",\n      \"src/tracing/perfetto-utils.cc\",\n    ]\n  }\n\n  if (v8_enable_webassembly) {\n    sources += [\n      ### gcmole(all) ###\n      \"src/asmjs/asm-js.cc\",\n      \"src/asmjs/asm-parser.cc\",\n      \"src/asmjs/asm-scanner.cc\",\n      \"src/asmjs/asm-types.cc\",\n      \"src/compiler/turboshaft/wasm-dead-code-elimination-phase.cc\",\n      \"src/debug/debug-wasm-objects.cc\",\n      \"src/runtime/runtime-test-wasm.cc\",\n      \"src/runtime/runtime-wasm.cc\",\n      \"src/trap-handler/handler-inside.cc\",\n      \"src/trap-handler/handler-outside.cc\",\n      \"src/trap-handler/handler-shared.cc\",\n      \"src/wasm/baseline/liftoff-assembler.cc\",\n      \"src/wasm/baseline/liftoff-compiler.cc\",\n      \"src/wasm/baseline/parallel-move.cc\",\n      \"src/wasm/canonical-types.cc\",\n      \"src/wasm/code-space-access.cc\",\n      \"src/wasm/constant-expression-interface.cc\",\n      \"src/wasm/constant-expression.cc\",\n      \"src/wasm/function-body-decoder.cc\",\n      \"src/wasm/function-compiler.cc\",\n      \"src/wasm/graph-builder-interface.cc\",\n      \"src/wasm/jump-table-assembler.cc\",\n      \"src/wasm/local-decl-encoder.cc\",\n      \"src/wasm/module-compiler.cc\",\n      \"src/wasm/module-decoder.cc\",\n      \"src/wasm/module-instantiate.cc\",\n      \"src/wasm/names-provider.cc\",\n      \"src/wasm/pgo.cc\",\n      \"src/wasm/simd-shuffle.cc\",\n      \"src/wasm/stacks.cc\",\n      \"src/wasm/streaming-decoder.cc\",\n      \"src/wasm/sync-streaming-decoder.cc\",\n      \"src/wasm/turboshaft-graph-interface.cc\",\n      \"src/wasm/value-type.cc\",\n      \"src/wasm/wasm-code-manager.cc\",\n      \"src/wasm/wasm-code-pointer-table.cc\",\n      \"src/wasm/wasm-debug.cc\",\n      \"src/wasm/wasm-deopt-data.cc\",\n      \"src/wasm/wasm-disassembler.cc\",\n      \"src/wasm/wasm-engine.cc\",\n      \"src/wasm/wasm-external-refs.cc\",\n      \"src/wasm/wasm-features.cc\",\n      \"src/wasm/wasm-import-wrapper-cache.cc\",\n      \"src/wasm/wasm-js.cc\",\n      \"src/wasm/wasm-module-builder.cc\",\n      \"src/wasm/wasm-module-sourcemap.cc\",\n      \"src/wasm/wasm-module.cc\",\n      \"src/wasm/wasm-objects.cc\",\n      \"src/wasm/wasm-opcodes.cc\",\n      \"src/wasm/wasm-result.cc\",\n      \"src/wasm/wasm-serialization.cc\",\n      \"src/wasm/wasm-subtyping.cc\",\n      \"src/wasm/well-known-imports.cc\",\n      \"src/wasm/wrappers.cc\",\n    ]\n    if (v8_wasm_random_fuzzers) {\n      sources += [\n        ### gcmole(all) ###\n        \"src/wasm/fuzzing/random-module-generation.cc\",\n      ]\n    }\n\n    if (v8_enable_drumbrake) {\n      sources += [\n        \"src/wasm/interpreter/wasm-interpreter-objects.cc\",\n        \"src/wasm/interpreter/wasm-interpreter-runtime.cc\",\n        \"src/wasm/interpreter/wasm-interpreter-simd.cc\",\n        \"src/wasm/interpreter/wasm-interpreter.cc\",\n      ]\n    }\n  }\n\n  if (v8_enable_wasm_gdb_remote_debugging) {\n    sources += [\n      \"src/debug/wasm/gdb-server/gdb-remote-util.cc\",\n      \"src/debug/wasm/gdb-server/gdb-server-thread.cc\",\n      \"src/debug/wasm/gdb-server/gdb-server.cc\",\n      \"src/debug/wasm/gdb-server/packet.cc\",\n      \"src/debug/wasm/gdb-server/session.cc\",\n      \"src/debug/wasm/gdb-server/target.cc\",\n      \"src/debug/wasm/gdb-server/transport.cc\",\n      \"src/debug/wasm/gdb-server/wasm-module-debug.cc\",\n    ]\n  }\n\n  if (v8_enable_heap_snapshot_verify) {\n    sources += [ \"src/heap/reference-summarizer.cc\" ]\n  }\n\n  if (v8_current_cpu == \"x86\") {\n    sources += [\n      ### gcmole(ia32) ###\n      \"src/codegen/ia32/assembler-ia32.cc\",\n      \"src/codegen/ia32/cpu-ia32.cc\",\n      \"src/codegen/ia32/macro-assembler-ia32.cc\",\n      \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.cc\",\n      \"src/deoptimizer/ia32/deoptimizer-ia32.cc\",\n      \"src/diagnostics/ia32/disasm-ia32.cc\",\n      \"src/diagnostics/ia32/unwinder-ia32.cc\",\n      \"src/execution/ia32/frame-constants-ia32.cc\",\n      \"src/regexp/ia32/regexp-macro-assembler-ia32.cc\",\n    ]\n  } else if (v8_current_cpu == \"x64\") {\n    sources += [\n      ### gcmole(x64) ###\n      \"src/codegen/shared-ia32-x64/macro-assembler-shared-ia32-x64.cc\",\n      \"src/codegen/x64/assembler-x64.cc\",\n      \"src/codegen/x64/builtin-jump-table-info-x64.cc\",\n      \"src/codegen/x64/cpu-x64.cc\",\n      \"src/codegen/x64/macro-assembler-x64.cc\",\n      \"src/deoptimizer/x64/deoptimizer-x64.cc\",\n      \"src/diagnostics/x64/disasm-x64.cc\",\n      \"src/diagnostics/x64/eh-frame-x64.cc\",\n      \"src/diagnostics/x64/unwinder-x64.cc\",\n      \"src/execution/x64/frame-constants-x64.cc\",\n      \"src/regexp/x64/regexp-macro-assembler-x64.cc\",\n    ]\n\n    if (is_win) {\n      sources += [ \"src/diagnostics/unwinding-info-win64.cc\" ]\n    }\n\n    if (v8_enable_webassembly) {\n      # iOS Xcode simulator builds run on an x64 target. iOS and macOS are both\n      # based on Darwin and thus POSIX-compliant to a similar degree.\n      if (is_linux || is_chromeos || is_mac || is_ios ||\n          target_os == \"freebsd\") {\n        sources += [\n          \"src/trap-handler/handler-inside-posix.cc\",\n          \"src/trap-handler/handler-outside-posix.cc\",\n        ]\n      } else if (is_win) {\n        sources += [\n          \"src/trap-handler/handler-inside-win.cc\",\n          \"src/trap-handler/handler-outside-win.cc\",\n        ]\n      }\n    }\n  } else if (v8_current_cpu == \"arm\") {\n    sources += [\n      ### gcmole(arm) ###\n      \"src/codegen/arm/assembler-arm.cc\",\n      \"src/codegen/arm/constants-arm.cc\",\n      \"src/codegen/arm/cpu-arm.cc\",\n      \"src/codegen/arm/macro-assembler-arm.cc\",\n      \"src/deoptimizer/arm/deoptimizer-arm.cc\",\n      \"src/diagnostics/arm/disasm-arm.cc\",\n      \"src/diagnostics/arm/eh-frame-arm.cc\",\n      \"src/diagnostics/arm/unwinder-arm.cc\",\n      \"src/execution/arm/frame-constants-arm.cc\",\n      \"src/execution/arm/simulator-arm.cc\",\n      \"src/regexp/arm/regexp-macro-assembler-arm.cc\",\n    ]\n  } else if (v8_current_cpu == \"arm64\") {\n    sources += [\n      ### gcmole(arm64) ###\n      \"src/codegen/arm64/assembler-arm64.cc\",\n      \"src/codegen/arm64/cpu-arm64.cc\",\n      \"src/codegen/arm64/decoder-arm64.cc\",\n      \"src/codegen/arm64/instructions-arm64-constants.cc\",\n      \"src/codegen/arm64/instructions-arm64.cc\",\n      \"src/codegen/arm64/macro-assembler-arm64.cc\",\n      \"src/codegen/arm64/register-arm64.cc\",\n      \"src/codegen/arm64/utils-arm64.cc\",\n      \"src/deoptimizer/arm64/deoptimizer-arm64.cc\",\n      \"src/diagnostics/arm64/disasm-arm64.cc\",\n      \"src/diagnostics/arm64/eh-frame-arm64.cc\",\n      \"src/diagnostics/arm64/unwinder-arm64.cc\",\n      \"src/execution/arm64/frame-constants-arm64.cc\",\n      \"src/execution/arm64/pointer-auth-arm64.cc\",\n      \"src/execution/arm64/simulator-arm64.cc\",\n      \"src/execution/arm64/simulator-logic-arm64.cc\",\n      \"src/regexp/arm64/regexp-macro-assembler-arm64.cc\",\n    ]\n    if (v8_enable_webassembly) {\n      # Trap handling is enabled on arm64 and x64, on Linux, Mac and Windows.\n      if ((current_cpu == \"arm64\" && (is_linux || is_chromeos || is_apple)) ||\n          (current_cpu == \"x64\" && (is_linux || is_chromeos || is_mac))) {\n        sources += [\n          \"src/trap-handler/handler-inside-posix.cc\",\n          \"src/trap-handler/handler-outside-posix.cc\",\n        ]\n      } else if ((current_cpu == \"arm64\" || current_cpu == \"x64\") && is_win) {\n        sources += [\n          \"src/trap-handler/handler-inside-win.cc\",\n          \"src/trap-handler/handler-outside-win.cc\",\n        ]\n      }\n      if (current_cpu == \"x64\" &&\n          (is_linux || is_chromeos || is_mac || is_win)) {\n        sources += [ \"src/trap-handler/handler-outside-simulator.cc\" ]\n      }\n    }\n    if (is_win) {\n      sources += [ \"src/diagnostics/unwinding-info-win64.cc\" ]\n    }\n  } else if (v8_current_cpu == \"mips64\" || v8_current_cpu == \"mips64el\") {\n    sources += [\n      ### gcmole(mips64el) ###\n      \"src/codegen/mips64/assembler-mips64.cc\",\n      \"src/codegen/mips64/constants-mips64.cc\",\n      \"src/codegen/mips64/cpu-mips64.cc\",\n      \"src/codegen/mips64/interface-descriptors-mips64-inl.h\",\n      \"src/codegen/mips64/macro-assembler-mips64.cc\",\n      \"src/deoptimizer/mips64/deoptimizer-mips64.cc\",\n      \"src/diagnostics/mips64/disasm-mips64.cc\",\n      \"src/diagnostics/mips64/unwinder-mips64.cc\",\n      \"src/execution/mips64/frame-constants-mips64.cc\",\n      \"src/execution/mips64/simulator-mips64.cc\",\n      \"src/regexp/mips64/regexp-macro-assembler-mips64.cc\",\n    ]\n  } else if (v8_current_cpu == \"loong64\") {\n    sources += [\n      ### gcmole(loong64) ###\n      \"src/codegen/loong64/assembler-loong64.cc\",\n      \"src/codegen/loong64/constants-loong64.cc\",\n      \"src/codegen/loong64/cpu-loong64.cc\",\n      \"src/codegen/loong64/interface-descriptors-loong64-inl.h\",\n      \"src/codegen/loong64/macro-assembler-loong64.cc\",\n      \"src/deoptimizer/loong64/deoptimizer-loong64.cc\",\n      \"src/diagnostics/loong64/disasm-loong64.cc\",\n      \"src/diagnostics/loong64/unwinder-loong64.cc\",\n      \"src/execution/loong64/frame-constants-loong64.cc\",\n      \"src/execution/loong64/simulator-loong64.cc\",\n      \"src/regexp/loong64/regexp-macro-assembler-loong64.cc\",\n    ]\n    if (v8_enable_webassembly) {\n      # Trap handling is enabled on loong64 Linux and in simulators on\n      # x64 on Linux.\n      if ((current_cpu == \"loong64\" && is_linux) ||\n          (current_cpu == \"x64\" && is_linux)) {\n        sources += [\n          \"src/trap-handler/handler-inside-posix.cc\",\n          \"src/trap-handler/handler-outside-posix.cc\",\n        ]\n      }\n      if (current_cpu == \"x64\" && is_linux) {\n        sources += [ \"src/trap-handler/handler-outside-simulator.cc\" ]\n      }\n    }\n  } else if (v8_current_cpu == \"ppc64\") {\n    sources += [\n      ### gcmole(ppc64) ###\n      \"src/codegen/ppc/assembler-ppc.cc\",\n      \"src/codegen/ppc/constants-ppc.cc\",\n      \"src/codegen/ppc/cpu-ppc.cc\",\n      \"src/codegen/ppc/macro-assembler-ppc.cc\",\n      \"src/deoptimizer/ppc/deoptimizer-ppc.cc\",\n      \"src/diagnostics/ppc/disasm-ppc.cc\",\n      \"src/diagnostics/ppc/eh-frame-ppc.cc\",\n      \"src/diagnostics/ppc/unwinder-ppc.cc\",\n      \"src/execution/ppc/frame-constants-ppc.cc\",\n      \"src/execution/ppc/simulator-ppc.cc\",\n      \"src/regexp/ppc/regexp-macro-assembler-ppc.cc\",\n    ]\n  } else if (v8_current_cpu == \"s390x\") {\n    sources += [\n      ### gcmole(s390) ###\n      \"src/codegen/s390/assembler-s390.cc\",\n      \"src/codegen/s390/constants-s390.cc\",\n      \"src/codegen/s390/cpu-s390.cc\",\n      \"src/codegen/s390/macro-assembler-s390.cc\",\n      \"src/deoptimizer/s390/deoptimizer-s390.cc\",\n      \"src/diagnostics/s390/disasm-s390.cc\",\n      \"src/diagnostics/s390/eh-frame-s390.cc\",\n      \"src/diagnostics/s390/unwinder-s390.cc\",\n      \"src/execution/s390/frame-constants-s390.cc\",\n      \"src/execution/s390/simulator-s390.cc\",\n      \"src/regexp/s390/regexp-macro-assembler-s390.cc\",\n    ]\n  } else if (v8_current_cpu == \"riscv64\") {\n    sources += [\n      ### gcmole(riscv64) ###\n      \"src/codegen/riscv/assembler-riscv.cc\",\n      \"src/codegen/riscv/base-assembler-riscv.cc\",\n      \"src/codegen/riscv/base-constants-riscv.cc\",\n      \"src/codegen/riscv/base-riscv-i.cc\",\n      \"src/codegen/riscv/cpu-riscv.cc\",\n      \"src/codegen/riscv/extension-riscv-a.cc\",\n      \"src/codegen/riscv/extension-riscv-b.cc\",\n      \"src/codegen/riscv/extension-riscv-c.cc\",\n      \"src/codegen/riscv/extension-riscv-d.cc\",\n      \"src/codegen/riscv/extension-riscv-f.cc\",\n      \"src/codegen/riscv/extension-riscv-m.cc\",\n      \"src/codegen/riscv/extension-riscv-v.cc\",\n      \"src/codegen/riscv/extension-riscv-zicond.cc\",\n      \"src/codegen/riscv/extension-riscv-zicsr.cc\",\n      \"src/codegen/riscv/extension-riscv-zifencei.cc\",\n      \"src/codegen/riscv/macro-assembler-riscv.cc\",\n      \"src/deoptimizer/riscv/deoptimizer-riscv.cc\",\n      \"src/diagnostics/riscv/disasm-riscv.cc\",\n      \"src/diagnostics/riscv/unwinder-riscv.cc\",\n      \"src/execution/riscv/frame-constants-riscv.cc\",\n      \"src/execution/riscv/simulator-riscv.cc\",\n      \"src/regexp/riscv/regexp-macro-assembler-riscv.cc\",\n    ]\n    if (v8_enable_webassembly) {\n      # Trap handling is enabled on riscv64 Linux and in simulators on\n      # x64 on Linux.\n      if ((current_cpu == \"riscv64\" && is_linux) ||\n          (current_cpu == \"x64\" && is_linux)) {\n        sources += [\n          \"src/trap-handler/handler-inside-posix.cc\",\n          \"src/trap-handler/handler-outside-posix.cc\",\n        ]\n      }\n      if (current_cpu == \"x64\" && is_linux) {\n        sources += [ \"src/trap-handler/handler-outside-simulator.cc\" ]\n      }\n    }\n  } else if (v8_current_cpu == \"riscv32\") {\n    sources += [\n      ### gcmole(riscv32) ###\n      \"src/codegen/riscv/assembler-riscv.cc\",\n      \"src/codegen/riscv/base-assembler-riscv.cc\",\n      \"src/codegen/riscv/base-constants-riscv.cc\",\n      \"src/codegen/riscv/base-riscv-i.cc\",\n      \"src/codegen/riscv/cpu-riscv.cc\",\n      \"src/codegen/riscv/extension-riscv-a.cc\",\n      \"src/codegen/riscv/extension-riscv-b.cc\",\n      \"src/codegen/riscv/extension-riscv-c.cc\",\n      \"src/codegen/riscv/extension-riscv-d.cc\",\n      \"src/codegen/riscv/extension-riscv-f.cc\",\n      \"src/codegen/riscv/extension-riscv-m.cc\",\n      \"src/codegen/riscv/extension-riscv-v.cc\",\n      \"src/codegen/riscv/extension-riscv-zicond.cc\",\n      \"src/codegen/riscv/extension-riscv-zicsr.cc\",\n      \"src/codegen/riscv/extension-riscv-zifencei.cc\",\n      \"src/codegen/riscv/macro-assembler-riscv.cc\",\n      \"src/deoptimizer/riscv/deoptimizer-riscv.cc\",\n      \"src/diagnostics/riscv/disasm-riscv.cc\",\n      \"src/diagnostics/riscv/unwinder-riscv.cc\",\n      \"src/execution/riscv/frame-constants-riscv.cc\",\n      \"src/execution/riscv/simulator-riscv.cc\",\n      \"src/regexp/riscv/regexp-macro-assembler-riscv.cc\",\n    ]\n  }\n\n  # Architecture independent but platform-specific sources\n  if (is_win) {\n    if (v8_enable_etw_stack_walking) {\n      sources += [\n        \"src/diagnostics/etw-debug-win.cc\",\n        \"src/diagnostics/etw-debug-win.h\",\n        \"src/diagnostics/etw-isolate-capture-state-monitor-win.cc\",\n        \"src/diagnostics/etw-isolate-capture-state-monitor-win.h\",\n        \"src/diagnostics/etw-isolate-load-script-data-win.cc\",\n        \"src/diagnostics/etw-isolate-load-script-data-win.h\",\n        \"src/diagnostics/etw-isolate-operations-win.cc\",\n        \"src/diagnostics/etw-isolate-operations-win.h\",\n        \"src/diagnostics/etw-jit-metadata-win.cc\",\n        \"src/diagnostics/etw-jit-metadata-win.h\",\n        \"src/diagnostics/etw-jit-win.cc\",\n        \"src/diagnostics/etw-jit-win.h\",\n      ]\n    }\n  }\n\n  configs = [\n    \":internal_config\",\n    \":cppgc_base_config\",\n  ]\n\n  deps = [\n    \":torque_generated_definitions\",\n    \":v8_bigint\",\n    \":v8_headers\",\n    \":v8_heap_base\",\n    \":v8_libbase\",\n    \":v8_shared_internal_headers\",\n    \":v8_tracing\",\n    \":v8_version\",\n    \"src/inspector:inspector\",\n    \"//third_party/fast_float\",\n    \"//third_party/highway:libhwy\",\n  ]\n\n  public_deps = [\n    \":cppgc_base\",\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \":v8_abseil\",\n    \":v8_headers\",\n    \":v8_internal_headers\",\n    \":v8_maybe_icu\",\n  ]\n\n  if (v8_fuzzilli) {\n    sources += [\n      \"src/fuzzilli/cov.cc\",\n      \"src/fuzzilli/cov.h\",\n      \"src/fuzzilli/fuzzilli.cc\",\n      \"src/fuzzilli/fuzzilli.h\",\n    ]\n  }\n\n  if (v8_enable_i18n_support) {\n    deps += [ \":run_gen-regexp-special-case\" ]\n    sources += [ \"$target_gen_dir/src/regexp/special-case.cc\" ]\n    if (is_win) {\n      deps += [ \"$v8_icu_path:icudata\" ]\n    }\n  } else {\n    sources -= [\n      \"src/builtins/builtins-intl.cc\",\n      \"src/objects/intl-objects.cc\",\n      \"src/objects/js-break-iterator.cc\",\n      \"src/objects/js-collator.cc\",\n      \"src/objects/js-date-time-format.cc\",\n      \"src/objects/js-display-names.cc\",\n      \"src/objects/js-duration-format.cc\",\n      \"src/objects/js-list-format.cc\",\n      \"src/objects/js-locale.cc\",\n      \"src/objects/js-number-format.cc\",\n      \"src/objects/js-plural-rules.cc\",\n      \"src/objects/js-relative-time-format.cc\",\n      \"src/objects/js-segment-iterator.cc\",\n      \"src/objects/js-segmenter.cc\",\n      \"src/objects/js-segments.cc\",\n      \"src/runtime/runtime-intl.cc\",\n      \"src/strings/char-predicates.cc\",\n    ]\n  }\n\n  if (v8_use_zlib) {\n    deps += [\n      \"$v8_zlib_path\",\n      \"$v8_zlib_path/google:compression_utils_portable\",\n    ]\n  }\n\n  if (v8_postmortem_support) {\n    sources += [ \"$target_gen_dir/debug-support.cc\" ]\n    deps += [ \":postmortem-metadata\" ]\n  }\n\n  libs = []\n\n  # Platforms that don't have CAS support need to link atomic library\n  # to implement atomic memory access\n  if (v8_current_cpu == \"mips64\" || v8_current_cpu == \"mips64el\" ||\n      v8_current_cpu == \"ppc64\" ||\n      (current_os != \"zos\" && v8_current_cpu == \"s390x\") ||\n      v8_current_cpu == \"riscv64\" || v8_current_cpu == \"riscv32\") {\n    if (!is_clang) {\n      libs += [ \"atomic\" ]\n    }\n  }\n\n  if (v8_enable_vtunetracemark && (is_linux || is_chromeos || is_win)) {\n    sources += [\n      \"src/extensions/vtunedomain-support-extension.cc\",\n      \"src/extensions/vtunedomain-support-extension.h\",\n    ]\n    deps += [ \"third_party/vtune:v8_vtune_trace_mark\" ]\n  }\n}\n\ngroup(\"v8_base\") {\n  public_deps = [\n    \":v8_base_without_compiler\",\n    \":v8_compiler\",\n  ]\n}\n\nv8_source_set(\"torque_base\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  sources = [\n    \"src/numbers/integer-literal-inl.h\",\n    \"src/numbers/integer-literal.h\",\n    \"src/torque/ast.h\",\n    \"src/torque/cc-generator.cc\",\n    \"src/torque/cc-generator.h\",\n    \"src/torque/cfg.cc\",\n    \"src/torque/cfg.h\",\n    \"src/torque/class-debug-reader-generator.cc\",\n    \"src/torque/constants.h\",\n    \"src/torque/cpp-builder.cc\",\n    \"src/torque/cpp-builder.h\",\n    \"src/torque/csa-generator.cc\",\n    \"src/torque/csa-generator.h\",\n    \"src/torque/declarable.cc\",\n    \"src/torque/declarable.h\",\n    \"src/torque/declaration-visitor.cc\",\n    \"src/torque/declaration-visitor.h\",\n    \"src/torque/declarations.cc\",\n    \"src/torque/declarations.h\",\n    \"src/torque/earley-parser.cc\",\n    \"src/torque/earley-parser.h\",\n    \"src/torque/global-context.cc\",\n    \"src/torque/global-context.h\",\n    \"src/torque/implementation-visitor.cc\",\n    \"src/torque/implementation-visitor.h\",\n    \"src/torque/instance-type-generator.cc\",\n    \"src/torque/instructions.cc\",\n    \"src/torque/instructions.h\",\n    \"src/torque/kythe-data.cc\",\n    \"src/torque/kythe-data.h\",\n    \"src/torque/parameter-difference.h\",\n    \"src/torque/server-data.cc\",\n    \"src/torque/server-data.h\",\n    \"src/torque/source-positions.cc\",\n    \"src/torque/source-positions.h\",\n    \"src/torque/torque-code-generator.cc\",\n    \"src/torque/torque-code-generator.h\",\n    \"src/torque/torque-compiler.cc\",\n    \"src/torque/torque-compiler.h\",\n    \"src/torque/torque-parser.cc\",\n    \"src/torque/torque-parser.h\",\n    \"src/torque/type-inference.cc\",\n    \"src/torque/type-inference.h\",\n    \"src/torque/type-oracle.cc\",\n    \"src/torque/type-oracle.h\",\n    \"src/torque/type-visitor.cc\",\n    \"src/torque/type-visitor.h\",\n    \"src/torque/types.cc\",\n    \"src/torque/types.h\",\n    \"src/torque/utils.cc\",\n    \"src/torque/utils.h\",\n  ]\n\n  deps = [\n    \":v8_flags\",\n    \":v8_shared_internal_headers\",\n  ]\n\n  public_deps = [\n    \":v8_config_headers\",\n    \":v8_libbase\",\n  ]\n\n  # The use of exceptions for Torque in violation of the Chromium style-guide\n  # is justified by the fact that it is only used from the non-essential\n  # language server and can be removed anytime if it causes problems.\n  configs = [\n    \":internal_config\",\n    \"//build/config/compiler:exceptions\",\n    \"//build/config/compiler:rtti\",\n  ]\n\n  remove_configs = [\n    \"//build/config/compiler:no_exceptions\",\n    \"//build/config/compiler:no_rtti\",\n  ]\n\n  if (is_debug && !v8_optimized_debug && v8_enable_fast_torque) {\n    # The :no_optimize config is added to v8_add_configs in v8.gni.\n    remove_configs += [ \"//build/config/compiler:no_optimize\" ]\n    configs += [ \":always_turbofanimize\" ]\n  }\n}\n\nv8_source_set(\"torque_ls_base\") {\n  sources = [\n    \"src/torque/ls/globals.h\",\n    \"src/torque/ls/json-parser.cc\",\n    \"src/torque/ls/json-parser.h\",\n    \"src/torque/ls/json.cc\",\n    \"src/torque/ls/json.h\",\n    \"src/torque/ls/message-handler.cc\",\n    \"src/torque/ls/message-handler.h\",\n    \"src/torque/ls/message-macros.h\",\n    \"src/torque/ls/message-pipe.h\",\n    \"src/torque/ls/message.h\",\n  ]\n\n  public_deps = [ \":torque_base\" ]\n\n  # The use of exceptions for Torque in violation of the Chromium style-guide\n  # is justified by the fact that it is only used from the non-essential\n  # language server and can be removed anytime if it causes problems.\n  configs = [\n    \":internal_config\",\n    \"//build/config/compiler:exceptions\",\n    \"//build/config/compiler:rtti\",\n  ]\n\n  remove_configs = [\n    \"//build/config/compiler:no_exceptions\",\n    \"//build/config/compiler:no_rtti\",\n  ]\n}\n\nv8_component(\"v8_libbase\") {\n  sources = [\n    \"src/base/abort-mode.cc\",\n    \"src/base/abort-mode.h\",\n    \"src/base/address-region.h\",\n    \"src/base/atomic-utils.h\",\n    \"src/base/atomicops.h\",\n    \"src/base/base-export.h\",\n    \"src/base/bit-field.h\",\n    \"src/base/bits-iterator.h\",\n    \"src/base/bits.cc\",\n    \"src/base/bits.h\",\n    \"src/base/bounded-page-allocator.cc\",\n    \"src/base/bounded-page-allocator.h\",\n    \"src/base/bounds.h\",\n    \"src/base/build_config.h\",\n    \"src/base/compiler-specific.h\",\n    \"src/base/container-utils.h\",\n    \"src/base/contextual.h\",\n    \"src/base/cpu.cc\",\n    \"src/base/cpu.h\",\n    \"src/base/debug/stack_trace.cc\",\n    \"src/base/debug/stack_trace.h\",\n    \"src/base/discriminated-union.h\",\n    \"src/base/division-by-constant.cc\",\n    \"src/base/division-by-constant.h\",\n    \"src/base/doubly-threaded-list.h\",\n    \"src/base/emulated-virtual-address-subspace.cc\",\n    \"src/base/emulated-virtual-address-subspace.h\",\n    \"src/base/enum-set.h\",\n    \"src/base/export-template.h\",\n    \"src/base/file-utils.cc\",\n    \"src/base/file-utils.h\",\n    \"src/base/flags.h\",\n    \"src/base/free_deleter.h\",\n    \"src/base/hashing.h\",\n    \"src/base/hashmap-entry.h\",\n    \"src/base/hashmap.h\",\n    \"src/base/ieee754.cc\",\n    \"src/base/ieee754.h\",\n    \"src/base/immediate-crash.h\",\n    \"src/base/intrusive-set.h\",\n    \"src/base/iterator.h\",\n    \"src/base/lazy-instance.h\",\n    \"src/base/logging.cc\",\n    \"src/base/logging.h\",\n    \"src/base/macros.h\",\n    \"src/base/memory.h\",\n    \"src/base/numbers/bignum-dtoa.cc\",\n    \"src/base/numbers/bignum-dtoa.h\",\n    \"src/base/numbers/bignum.cc\",\n    \"src/base/numbers/bignum.h\",\n    \"src/base/numbers/cached-powers.cc\",\n    \"src/base/numbers/cached-powers.h\",\n    \"src/base/numbers/diy-fp.cc\",\n    \"src/base/numbers/diy-fp.h\",\n    \"src/base/numbers/double.h\",\n    \"src/base/numbers/dtoa.cc\",\n    \"src/base/numbers/dtoa.h\",\n    \"src/base/numbers/fast-dtoa.cc\",\n    \"src/base/numbers/fast-dtoa.h\",\n    \"src/base/numbers/fixed-dtoa.cc\",\n    \"src/base/numbers/fixed-dtoa.h\",\n    \"src/base/numbers/strtod.cc\",\n    \"src/base/numbers/strtod.h\",\n    \"src/base/once.cc\",\n    \"src/base/once.h\",\n    \"src/base/overflowing-math.h\",\n    \"src/base/page-allocator.cc\",\n    \"src/base/page-allocator.h\",\n    \"src/base/platform/condition-variable.cc\",\n    \"src/base/platform/condition-variable.h\",\n    \"src/base/platform/elapsed-timer.h\",\n    \"src/base/platform/memory-protection-key.cc\",\n    \"src/base/platform/memory-protection-key.h\",\n    \"src/base/platform/memory.h\",\n    \"src/base/platform/mutex.cc\",\n    \"src/base/platform/mutex.h\",\n    \"src/base/platform/platform.cc\",\n    \"src/base/platform/platform.h\",\n    \"src/base/platform/semaphore.cc\",\n    \"src/base/platform/semaphore.h\",\n    \"src/base/platform/time.cc\",\n    \"src/base/platform/time.h\",\n    \"src/base/platform/wrappers.h\",\n    \"src/base/platform/yield-processor.h\",\n    \"src/base/pointer-with-payload.h\",\n    \"src/base/region-allocator.cc\",\n    \"src/base/region-allocator.h\",\n    \"src/base/ring-buffer.h\",\n    \"src/base/safe_conversions.h\",\n    \"src/base/safe_conversions_arm_impl.h\",\n    \"src/base/safe_conversions_impl.h\",\n    \"src/base/sanitizer/asan.h\",\n    \"src/base/sanitizer/lsan-page-allocator.cc\",\n    \"src/base/sanitizer/lsan-page-allocator.h\",\n    \"src/base/sanitizer/lsan-virtual-address-space.cc\",\n    \"src/base/sanitizer/lsan-virtual-address-space.h\",\n    \"src/base/sanitizer/lsan.h\",\n    \"src/base/sanitizer/msan.h\",\n    \"src/base/sanitizer/tsan.h\",\n    \"src/base/sanitizer/ubsan.h\",\n    \"src/base/small-map.h\",\n    \"src/base/small-vector.h\",\n    \"src/base/string-format.h\",\n    \"src/base/strings.cc\",\n    \"src/base/strings.h\",\n    \"src/base/strong-alias.h\",\n    \"src/base/sys-info.cc\",\n    \"src/base/sys-info.h\",\n    \"src/base/template-meta-programming/common.h\",\n    \"src/base/template-meta-programming/functional.h\",\n    \"src/base/template-meta-programming/list.h\",\n    \"src/base/template-meta-programming/string-literal.h\",\n    \"src/base/template-utils.h\",\n    \"src/base/threaded-list.h\",\n    \"src/base/timezone-cache.h\",\n    \"src/base/utils/random-number-generator.cc\",\n    \"src/base/utils/random-number-generator.h\",\n    \"src/base/vector.h\",\n    \"src/base/virtual-address-space-page-allocator.cc\",\n    \"src/base/virtual-address-space-page-allocator.h\",\n    \"src/base/virtual-address-space.cc\",\n    \"src/base/virtual-address-space.h\",\n    \"src/base/vlq-base64.cc\",\n    \"src/base/vlq-base64.h\",\n    \"src/base/vlq.h\",\n  ]\n\n  configs = [ \":internal_config_base\" ]\n\n  public_configs = [ \":libbase_config\" ]\n\n  deps = [ \":v8_config_headers\" ]\n\n  public_deps = [ \":v8_abseil\" ]\n\n  if (current_os == \"zos\") {\n    public_configs += [ \":zoslib_config\" ]\n    deps += [ \":zoslib\" ]\n  }\n\n  libs = []\n\n  data = []\n\n  data_deps = []\n\n  defines = []\n\n  if (is_component_build) {\n    defines = [ \"BUILDING_V8_BASE_SHARED\" ]\n  }\n\n  if (is_posix || is_fuchsia) {\n    sources += [\n      \"src/base/platform/platform-posix.cc\",\n      \"src/base/platform/platform-posix.h\",\n    ]\n    if (current_os != \"aix\" && current_os != \"zos\") {\n      sources += [\n        \"src/base/platform/platform-posix-time.cc\",\n        \"src/base/platform/platform-posix-time.h\",\n      ]\n    }\n  }\n\n  if (is_linux || is_chromeos) {\n    sources += [\n      \"src/base/debug/stack_trace_posix.cc\",\n      \"src/base/platform/platform-linux.cc\",\n      \"src/base/platform/platform-linux.h\",\n    ]\n\n    libs = [\n      \"dl\",\n      \"rt\",\n    ]\n  } else if (current_os == \"aix\") {\n    sources += [\n      \"src/base/debug/stack_trace_posix.cc\",\n      \"src/base/platform/platform-aix.cc\",\n    ]\n\n    libs = [ \"dl\" ]\n  } else if (is_android) {\n    if (current_toolchain == host_toolchain) {\n      libs = [\n        \"dl\",\n        \"rt\",\n      ]\n      if (host_os == \"mac\") {\n        sources += [\n          \"src/base/debug/stack_trace_posix.cc\",\n          \"src/base/platform/platform-darwin.cc\",\n        ]\n      } else {\n        sources += [\n          \"src/base/debug/stack_trace_posix.cc\",\n          \"src/base/platform/platform-linux.cc\",\n        ]\n      }\n    } else {\n      sources += [\n        \"src/base/debug/stack_trace_android.cc\",\n        \"src/base/platform/platform-linux.cc\",\n      ]\n    }\n  } else if (is_fuchsia) {\n    sources += [\n      \"src/base/debug/stack_trace_fuchsia.cc\",\n      \"src/base/platform/platform-fuchsia.cc\",\n    ]\n    deps += [\n      \"//third_party/fuchsia-sdk/sdk/fidl/fuchsia.kernel:fuchsia.kernel_cpp\",\n      \"//third_party/fuchsia-sdk/sdk/pkg/component_incoming_cpp\",\n      \"//third_party/fuchsia-sdk/sdk/pkg/zx\",\n    ]\n  } else if (is_mac) {\n    sources += [\n      \"src/base/debug/stack_trace_posix.cc\",\n      \"src/base/platform/platform-darwin.cc\",\n    ]\n  } else if (is_ios) {\n    sources += [\n      \"src/base/debug/stack_trace_posix.cc\",\n      \"src/base/platform/platform-darwin.cc\",\n    ]\n  } else if (is_win) {\n    # TODO(infra): Add support for cygwin.\n    sources += [\n      \"src/base/debug/stack_trace_win.cc\",\n      \"src/base/platform/platform-win32.cc\",\n      \"src/base/platform/platform-win32.h\",\n      \"src/base/win32-headers.h\",\n    ]\n\n    defines += [ \"_CRT_RAND_S\" ]  # for rand_s()\n\n    libs = [\n      \"dbghelp.lib\",\n      \"winmm.lib\",\n      \"ws2_32.lib\",\n    ]\n\n    if (v8_enable_etw_stack_walking) {\n      libs += [ \"advapi32.lib\" ]  # Needed for TraceLoggingProvider.h\n    }\n\n    data_deps += [ \"//build/win:runtime_libs\" ]\n  } else if (current_os == \"zos\") {\n    sources += [\n      \"src/base/debug/stack_trace_zos.cc\",\n      \"src/base/platform/platform-zos.cc\",\n    ]\n  }\n\n  if (v8_current_cpu == \"mips64\") {\n    # Add runtime libs for mips.\n    data += [\n      \"tools/mips_toolchain/sysroot/usr/lib/\",\n      \"tools/mips_toolchain/mips-mti-linux-gnu/lib\",\n    ]\n  }\n\n  if (is_ubsan && (v8_current_cpu == \"x86\" || v8_current_cpu == \"arm\")) {\n    # Special UBSan 32-bit requirement.\n    sources += [ \"src/base/ubsan.cc\" ]\n  }\n\n  if (v8_current_cpu == \"riscv64\" || v8_current_cpu == \"riscv32\") {\n    if (!is_clang) {\n      libs += [ \"atomic\" ]\n    }\n  }\n\n  if (is_tsan && !build_with_chromium) {\n    data += [ \"tools/sanitizers/tsan_suppressions.txt\" ]\n  }\n\n  if (using_sanitizer && !build_with_chromium) {\n    data_deps +=\n        [ \"//build/config/clang:llvm-symbolizer_data($host_toolchain)\" ]\n  }\n\n  if (v8_use_libm_trig_functions) {\n    deps += [ \":libm\" ]\n  }\n\n  # TODO(infra): Add support for qnx, freebsd, openbsd, netbsd, and solaris.\n}\n\nif (v8_use_libm_trig_functions) {\n  source_set(\"libm\") {\n    sources = [\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/branred.c\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/branred.h\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/dla.h\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/endian.h\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/mydefs.h\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/s_sin.c\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/sincostab.c\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/trig.h\",\n      \"third_party/glibc/src/sysdeps/ieee754/dbl-64/usncs.h\",\n    ]\n    configs += [ \"//build/config/compiler:no_chromium_code\" ]\n    configs -= [ \"//build/config/compiler:chromium_code\" ]\n    if (!is_debug) {\n      # Build code using -O3, see: crbug.com/1084371.\n      configs += [ \"//build/config/compiler:optimize_speed\" ]\n    }\n  }\n}\n\nv8_component(\"v8_libplatform\") {\n  sources = [\n    \"include/libplatform/libplatform-export.h\",\n    \"include/libplatform/libplatform.h\",\n    \"include/libplatform/v8-tracing.h\",\n    \"src/libplatform/default-foreground-task-runner.cc\",\n    \"src/libplatform/default-foreground-task-runner.h\",\n    \"src/libplatform/default-job.cc\",\n    \"src/libplatform/default-job.h\",\n    \"src/libplatform/default-platform.cc\",\n    \"src/libplatform/default-platform.h\",\n    \"src/libplatform/default-thread-isolated-allocator.cc\",\n    \"src/libplatform/default-thread-isolated-allocator.h\",\n    \"src/libplatform/default-worker-threads-task-runner.cc\",\n    \"src/libplatform/default-worker-threads-task-runner.h\",\n    \"src/libplatform/delayed-task-queue.cc\",\n    \"src/libplatform/delayed-task-queue.h\",\n    \"src/libplatform/task-queue.cc\",\n    \"src/libplatform/task-queue.h\",\n    \"src/libplatform/tracing/trace-buffer.cc\",\n    \"src/libplatform/tracing/trace-buffer.h\",\n    \"src/libplatform/tracing/trace-config.cc\",\n    \"src/libplatform/tracing/trace-object.cc\",\n    \"src/libplatform/tracing/trace-writer.cc\",\n    \"src/libplatform/tracing/trace-writer.h\",\n    \"src/libplatform/tracing/tracing-controller.cc\",\n    \"src/libplatform/worker-thread.cc\",\n    \"src/libplatform/worker-thread.h\",\n    \"src/tracing/trace-event-no-perfetto.h\",\n  ]\n\n  configs = [ \":internal_config_base\" ]\n\n  if (is_component_build) {\n    defines = [ \"BUILDING_V8_PLATFORM_SHARED\" ]\n  }\n\n  public_configs = [ \":libplatform_config\" ]\n\n  public_deps = []\n\n  deps = [\n    \":v8_config_headers\",\n    \":v8_libbase\",\n    \":v8_tracing\",\n  ]\n\n  if (v8_use_perfetto) {\n    sources -= [\n      \"src/libplatform/tracing/trace-buffer.cc\",\n      \"src/libplatform/tracing/trace-buffer.h\",\n      \"src/libplatform/tracing/trace-object.cc\",\n      \"src/libplatform/tracing/trace-writer.cc\",\n      \"src/libplatform/tracing/trace-writer.h\",\n      \"src/tracing/trace-event-no-perfetto.h\",\n    ]\n    sources += [ \"src/libplatform/tracing/trace-event-listener.h\" ]\n  }\n\n  if (v8_enable_system_instrumentation) {\n    sources += [ \"src/libplatform/tracing/recorder.h\" ]\n    if (is_mac) {\n      sources += [ \"src/libplatform/tracing/recorder-mac.cc\" ]\n    } else if (is_win) {\n      sources += [ \"src/libplatform/tracing/recorder-win.cc\" ]\n    }\n  }\n\n  if (v8_current_cpu == \"riscv64\" || v8_current_cpu == \"riscv32\") {\n    if (!is_clang) {\n      libs = [ \"atomic\" ]\n    }\n  }\n}\n\nv8_source_set(\"fuzzer_support\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  sources = [\n    \"test/fuzzer/fuzzer-support.cc\",\n    \"test/fuzzer/fuzzer-support.h\",\n  ]\n\n  configs = [ \":internal_config_base\" ]\n\n  public_deps = [\n    \":v8\",\n    \":v8_libbase\",\n    \":v8_libplatform\",\n    \":v8_maybe_icu\",\n  ]\n}\n\nv8_source_set(\"v8_bigint\") {\n  sources = [\n    \"src/bigint/bigint-internal.cc\",\n    \"src/bigint/bigint-internal.h\",\n    \"src/bigint/bigint.h\",\n    \"src/bigint/bitwise.cc\",\n    \"src/bigint/digit-arithmetic.h\",\n    \"src/bigint/div-burnikel.cc\",\n    \"src/bigint/div-helpers.cc\",\n    \"src/bigint/div-helpers.h\",\n    \"src/bigint/div-schoolbook.cc\",\n    \"src/bigint/fromstring.cc\",\n    \"src/bigint/mul-karatsuba.cc\",\n    \"src/bigint/mul-schoolbook.cc\",\n    \"src/bigint/tostring.cc\",\n    \"src/bigint/util.h\",\n    \"src/bigint/vector-arithmetic.cc\",\n    \"src/bigint/vector-arithmetic.h\",\n  ]\n\n  if (v8_advanced_bigint_algorithms) {\n    sources += [\n      \"src/bigint/div-barrett.cc\",\n      \"src/bigint/mul-fft.cc\",\n      \"src/bigint/mul-toom.cc\",\n    ]\n  }\n\n  configs = [ \":internal_config\" ]\n}\n\nv8_header_set(\"v8_heap_base_headers\") {\n  sources = [\n    \"src/heap/base/active-system-pages.h\",\n    \"src/heap/base/basic-slot-set.h\",\n    \"src/heap/base/bytes.h\",\n    \"src/heap/base/cached-unordered-map.h\",\n    \"src/heap/base/incremental-marking-schedule.h\",\n    \"src/heap/base/memory-tagging.h\",\n    \"src/heap/base/stack.h\",\n    \"src/heap/base/worklist.h\",\n  ]\n\n  configs = [ \":internal_config\" ]\n\n  public_deps = [ \":v8_libbase\" ]\n}\n\nv8_source_set(\"v8_heap_base\") {\n  sources = [\n    \"src/heap/base/active-system-pages.cc\",\n    \"src/heap/base/incremental-marking-schedule.cc\",\n    \"src/heap/base/memory-tagging.cc\",\n    \"src/heap/base/stack.cc\",\n    \"src/heap/base/worklist.cc\",\n  ]\n\n  if (is_clang || !is_win) {\n    if (current_cpu == \"x64\") {\n      if (is_win) {\n        # Prefer a masm version with unwind directives.\n        sources += [ \"src/heap/base/asm/x64/push_registers_masm.asm\" ]\n      } else {\n        sources += [ \"src/heap/base/asm/x64/push_registers_asm.cc\" ]\n      }\n    } else if (current_cpu == \"x86\") {\n      sources += [ \"src/heap/base/asm/ia32/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"arm\") {\n      sources += [ \"src/heap/base/asm/arm/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"arm64\") {\n      sources += [ \"src/heap/base/asm/arm64/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"ppc64\") {\n      sources += [ \"src/heap/base/asm/ppc/push_registers_asm.cc\" ]\n    } else if (current_os == \"zos\") {\n      sources += [ \"src/heap/base/asm/zos/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"s390x\") {\n      sources += [ \"src/heap/base/asm/s390/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"mips64el\") {\n      sources += [ \"src/heap/base/asm/mips64/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"loong64\") {\n      sources += [ \"src/heap/base/asm/loong64/push_registers_asm.cc\" ]\n    } else if (current_cpu == \"riscv64\" || current_cpu == \"riscv32\") {\n      sources += [ \"src/heap/base/asm/riscv/push_registers_asm.cc\" ]\n    }\n  } else if (is_win) {\n    if (current_cpu == \"x64\") {\n      sources += [ \"src/heap/base/asm/x64/push_registers_masm.asm\" ]\n    } else if (current_cpu == \"x86\") {\n      sources += [ \"src/heap/base/asm/ia32/push_registers_masm.asm\" ]\n    } else if (current_cpu == \"arm64\") {\n      sources += [ \"src/heap/base/asm/arm64/push_registers_masm.S\" ]\n    }\n  }\n\n  configs = [ \":internal_config\" ]\n\n  deps = [ \":v8_config_headers\" ]\n\n  public_deps = [\n    \":v8_heap_base_headers\",\n    \":v8_libbase\",\n  ]\n}\n\n# This is split out to be a non-code containing target that the Chromium browser\n# can depend upon to get basic cppgc types.\nv8_header_set(\"cppgc_headers\") {\n  configs = [ \":internal_config\" ]\n  public_configs = [\n    \":v8_header_features\",\n    \":cppgc_header_features\",\n  ]\n\n  sources = [\n    \"include/cppgc/allocation.h\",\n    \"include/cppgc/common.h\",\n    \"include/cppgc/cross-thread-persistent.h\",\n    \"include/cppgc/custom-space.h\",\n    \"include/cppgc/default-platform.h\",\n    \"include/cppgc/ephemeron-pair.h\",\n    \"include/cppgc/explicit-management.h\",\n    \"include/cppgc/garbage-collected.h\",\n    \"include/cppgc/heap-consistency.h\",\n    \"include/cppgc/heap-handle.h\",\n    \"include/cppgc/heap-state.h\",\n    \"include/cppgc/heap-statistics.h\",\n    \"include/cppgc/heap.h\",\n    \"include/cppgc/internal/api-constants.h\",\n    \"include/cppgc/internal/atomic-entry-flag.h\",\n    \"include/cppgc/internal/base-page-handle.h\",\n    \"include/cppgc/internal/compiler-specific.h\",\n    \"include/cppgc/internal/finalizer-trait.h\",\n    \"include/cppgc/internal/gc-info.h\",\n    \"include/cppgc/internal/member-storage.h\",\n    \"include/cppgc/internal/name-trait.h\",\n    \"include/cppgc/internal/persistent-node.h\",\n    \"include/cppgc/internal/pointer-policies.h\",\n    \"include/cppgc/internal/write-barrier.h\",\n    \"include/cppgc/liveness-broker.h\",\n    \"include/cppgc/macros.h\",\n    \"include/cppgc/member.h\",\n    \"include/cppgc/name-provider.h\",\n    \"include/cppgc/object-size-trait.h\",\n    \"include/cppgc/persistent.h\",\n    \"include/cppgc/platform.h\",\n    \"include/cppgc/prefinalizer.h\",\n    \"include/cppgc/process-heap-statistics.h\",\n    \"include/cppgc/sentinel-pointer.h\",\n    \"include/cppgc/source-location.h\",\n\n    # TODO(v8:11952): Remove the testing header here once depending on both,\n    # //v8:v8 and //v8:v8_for_testing does not result in ODR violations.\n    \"include/cppgc/testing.h\",\n    \"include/cppgc/trace-trait.h\",\n    \"include/cppgc/type-traits.h\",\n    \"include/cppgc/visitor.h\",\n  ]\n\n  if (cppgc_enable_caged_heap) {\n    sources += [ \"include/cppgc/internal/caged-heap-local-data.h\" ]\n    sources += [ \"include/cppgc/internal/caged-heap.h\" ]\n  }\n\n  deps = [\n    \":v8_libbase\",\n    \":v8_libplatform\",\n  ]\n\n  if (current_os == \"zos\" && is_component_build) {\n    deps += [ \":zoslib\" ]\n  }\n\n  public_deps = [ \":v8_config_headers\" ]\n}\n\nv8_source_set(\"cppgc_base\") {\n  visibility = [ \":*\" ]\n\n  sources = [\n    \"src/heap/cppgc/allocation.cc\",\n    \"src/heap/cppgc/compaction-worklists.cc\",\n    \"src/heap/cppgc/compaction-worklists.h\",\n    \"src/heap/cppgc/compactor.cc\",\n    \"src/heap/cppgc/compactor.h\",\n    \"src/heap/cppgc/concurrent-marker.cc\",\n    \"src/heap/cppgc/concurrent-marker.h\",\n    \"src/heap/cppgc/explicit-management.cc\",\n    \"src/heap/cppgc/free-list.cc\",\n    \"src/heap/cppgc/free-list.h\",\n    \"src/heap/cppgc/garbage-collector.h\",\n    \"src/heap/cppgc/gc-info-table.cc\",\n    \"src/heap/cppgc/gc-info-table.h\",\n    \"src/heap/cppgc/gc-info.cc\",\n    \"src/heap/cppgc/gc-invoker.cc\",\n    \"src/heap/cppgc/gc-invoker.h\",\n    \"src/heap/cppgc/globals.h\",\n    \"src/heap/cppgc/heap-base.cc\",\n    \"src/heap/cppgc/heap-base.h\",\n    \"src/heap/cppgc/heap-config.h\",\n    \"src/heap/cppgc/heap-consistency.cc\",\n    \"src/heap/cppgc/heap-growing.cc\",\n    \"src/heap/cppgc/heap-growing.h\",\n    \"src/heap/cppgc/heap-object-header.cc\",\n    \"src/heap/cppgc/heap-object-header.h\",\n    \"src/heap/cppgc/heap-page.cc\",\n    \"src/heap/cppgc/heap-page.h\",\n    \"src/heap/cppgc/heap-space.cc\",\n    \"src/heap/cppgc/heap-space.h\",\n    \"src/heap/cppgc/heap-state.cc\",\n    \"src/heap/cppgc/heap-statistics-collector.cc\",\n    \"src/heap/cppgc/heap-statistics-collector.h\",\n    \"src/heap/cppgc/heap-visitor.h\",\n    \"src/heap/cppgc/heap.cc\",\n    \"src/heap/cppgc/heap.h\",\n    \"src/heap/cppgc/liveness-broker.cc\",\n    \"src/heap/cppgc/liveness-broker.h\",\n    \"src/heap/cppgc/logging.cc\",\n    \"src/heap/cppgc/marker.cc\",\n    \"src/heap/cppgc/marker.h\",\n    \"src/heap/cppgc/marking-state.cc\",\n    \"src/heap/cppgc/marking-state.h\",\n    \"src/heap/cppgc/marking-verifier.cc\",\n    \"src/heap/cppgc/marking-verifier.h\",\n    \"src/heap/cppgc/marking-visitor.cc\",\n    \"src/heap/cppgc/marking-visitor.h\",\n    \"src/heap/cppgc/marking-worklists.cc\",\n    \"src/heap/cppgc/marking-worklists.h\",\n    \"src/heap/cppgc/member-storage.cc\",\n    \"src/heap/cppgc/member-storage.h\",\n    \"src/heap/cppgc/memory.cc\",\n    \"src/heap/cppgc/memory.h\",\n    \"src/heap/cppgc/metric-recorder.h\",\n    \"src/heap/cppgc/name-trait.cc\",\n    \"src/heap/cppgc/object-allocator.cc\",\n    \"src/heap/cppgc/object-allocator.h\",\n    \"src/heap/cppgc/object-poisoner.h\",\n    \"src/heap/cppgc/object-size-trait.cc\",\n    \"src/heap/cppgc/object-start-bitmap.h\",\n    \"src/heap/cppgc/object-view.h\",\n    \"src/heap/cppgc/page-memory.cc\",\n    \"src/heap/cppgc/page-memory.h\",\n    \"src/heap/cppgc/persistent-node.cc\",\n    \"src/heap/cppgc/platform.cc\",\n    \"src/heap/cppgc/platform.h\",\n    \"src/heap/cppgc/pointer-policies.cc\",\n    \"src/heap/cppgc/prefinalizer-handler.cc\",\n    \"src/heap/cppgc/prefinalizer-handler.h\",\n    \"src/heap/cppgc/process-heap-statistics.cc\",\n    \"src/heap/cppgc/process-heap-statistics.h\",\n    \"src/heap/cppgc/process-heap.cc\",\n    \"src/heap/cppgc/process-heap.h\",\n    \"src/heap/cppgc/raw-heap.cc\",\n    \"src/heap/cppgc/raw-heap.h\",\n    \"src/heap/cppgc/remembered-set.cc\",\n    \"src/heap/cppgc/remembered-set.h\",\n    \"src/heap/cppgc/stats-collector.cc\",\n    \"src/heap/cppgc/stats-collector.h\",\n    \"src/heap/cppgc/sweeper.cc\",\n    \"src/heap/cppgc/sweeper.h\",\n    \"src/heap/cppgc/task-handle.h\",\n    \"src/heap/cppgc/unmarker.h\",\n\n    # TODO(v8:11952): Remove the testing header here once depending on both,\n    # //v8:v8 and //v8:v8_for_testing does not result in ODR violations.\n    \"src/heap/cppgc/testing.cc\",\n    \"src/heap/cppgc/trace-event.h\",\n    \"src/heap/cppgc/trace-trait.cc\",\n    \"src/heap/cppgc/virtual-memory.cc\",\n    \"src/heap/cppgc/virtual-memory.h\",\n    \"src/heap/cppgc/visitor.cc\",\n    \"src/heap/cppgc/visitor.h\",\n    \"src/heap/cppgc/write-barrier.cc\",\n    \"src/heap/cppgc/write-barrier.h\",\n  ]\n\n  if (cppgc_enable_caged_heap) {\n    sources += [\n      \"src/heap/cppgc/caged-heap-local-data.cc\",\n      \"src/heap/cppgc/caged-heap.cc\",\n      \"src/heap/cppgc/caged-heap.h\",\n    ]\n  }\n\n  configs = [\n    \":internal_config\",\n    \":cppgc_base_config\",\n  ]\n\n  public_deps = [\n    \":cppgc_headers\",\n    \":v8_heap_base\",\n    \":v8_libbase\",\n    \":v8_libplatform\",\n  ]\n\n  if (cppgc_is_standalone && !v8_use_perfetto) {\n    sources += [ \"src/tracing/trace-event-no-perfetto.h\" ]\n  } else {\n    public_deps += [ \":v8_tracing\" ]\n  }\n\n  if (v8_use_perfetto) {\n    sources += [\n      \"src/tracing/trace-categories.cc\",\n      \"src/tracing/trace-categories.h\",\n    ]\n  }\n}\n\nif (v8_check_header_includes) {\n  # This file will be generated by tools/generate-header-include-checks.py\n  # if the \"check_v8_header_includes\" gclient variable is set.\n  import(\"check-header-includes/sources.gni\")\n  v8_source_set(\"check_headers\") {\n    configs = [ \":internal_config\" ]\n    sources = check_header_includes_sources\n\n    # Any rules that contain headers files should be added here either directly\n    # or indirectly by including something that has it transitively in its\n    # public_deps.\n    deps = [\n      \":d8\",\n      \":mksnapshot\",\n      \":torque_base\",\n      \":torque_ls_base\",\n      \":v8_base_without_compiler\",\n      \":v8_bigint\",\n      \":v8_headers\",\n      \":v8_initializers\",\n      \":v8_internal_headers\",\n      \":v8_libbase\",\n      \":v8_maybe_icu\",\n      \":v8_version\",\n      \":wee8\",\n      \"src/inspector:inspector\",\n      \"src/inspector:inspector_string_conversions\",\n    ]\n  }\n}\n\n###############################################################################\n# Produce a single static library for embedders\n#\n\nif (v8_monolithic) {\n  assert(!is_component_build,\n         \"Set `is_component_build = false` for v8_monolithic.\")\n\n  # Using external startup data would produce separate files.\n  assert(!v8_use_external_startup_data,\n         \"Set `v8_use_external_startup_data = false` for v8_monolithic.\")\n  v8_static_library(\"v8_monolith\") {\n    deps = [\n      \":v8\",\n      \":v8_libbase\",\n      \":v8_libplatform\",\n      \"//build/win:default_exe_manifest\",\n    ]\n\n    configs = [ \":internal_config\" ]\n  }\n}\n\nif (v8_enable_webassembly) {\n  v8_static_library(\"wee8\") {\n    deps = [\n      \":v8_base\",\n      \":v8_libbase\",\n      \":v8_libplatform\",\n      \":v8_shared_internal_headers\",\n      \":v8_snapshot\",\n      \"//build/win:default_exe_manifest\",\n    ]\n    if (v8_enable_vtunejit) {\n      deps += [ \"third_party/vtune:v8_vtune\" ]\n    }\n\n    # TODO: v8dll-main.cc equivalent for shared library builds\n\n    configs = [ \":internal_config\" ]\n\n    sources = [\n      ### gcmole(all) ###\n      \"src/wasm/c-api.cc\",\n      \"src/wasm/c-api.h\",\n      \"third_party/wasm-api/wasm.h\",\n      \"third_party/wasm-api/wasm.hh\",\n    ]\n  }\n}\n\n###############################################################################\n# Executables\n#\n\nif (current_toolchain == v8_generator_toolchain) {\n  v8_executable(\"bytecode_builtins_list_generator\") {\n    visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n    include_dirs = [ \".\" ]\n\n    sources = [\n      \"src/builtins/generate-bytecodes-builtins-list.cc\",\n      \"src/interpreter/bytecode-operands.cc\",\n      \"src/interpreter/bytecode-operands.h\",\n      \"src/interpreter/bytecode-traits.h\",\n      \"src/interpreter/bytecodes.cc\",\n      \"src/interpreter/bytecodes.h\",\n    ]\n\n    configs = [ \":internal_config\" ]\n\n    deps = [\n      \":v8_libbase\",\n      \":v8_shared_internal_headers\",\n      \"//build/win:default_exe_manifest\",\n    ]\n  }\n}\n\nif (current_toolchain == v8_snapshot_toolchain) {\n  v8_executable(\"mksnapshot\") {\n    sources = [\n      \"src/snapshot/embedded/embedded-empty.cc\",\n      \"src/snapshot/embedded/embedded-file-writer.cc\",\n      \"src/snapshot/embedded/embedded-file-writer.h\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-aix.cc\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-aix.h\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-base.cc\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-base.h\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-generic.cc\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-generic.h\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-mac.cc\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-mac.h\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-win.cc\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-win.h\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-zos.cc\",\n      \"src/snapshot/embedded/platform-embedded-file-writer-zos.h\",\n      \"src/snapshot/mksnapshot.cc\",\n      \"src/snapshot/snapshot-empty.cc\",\n      \"src/snapshot/static-roots-gen.cc\",\n      \"src/snapshot/static-roots-gen.h\",\n    ]\n\n    configs = [\n      \":internal_config\",\n      \":disable_icf\",\n    ]\n\n    deps = [\n      \":v8_base_without_compiler\",\n      \":v8_compiler_for_mksnapshot\",\n      \":v8_init\",\n      \":v8_libbase\",\n      \":v8_libplatform\",\n      \":v8_maybe_icu\",\n      \":v8_shared_internal_headers\",\n      \":v8_tracing\",\n      \"//build/win:default_exe_manifest\",\n    ]\n  }\n\n  # This config disables a link time optimization \"ICF\", which may merge\n  # different functions into one if the function signature and body of them are\n  # identical.\n  #\n  # ICF breaks 1:1 mappings of the external references for V8 snapshot, so we\n  # disable it while taking a V8 snapshot.\n  config(\"disable_icf\") {\n    visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n    if (is_win) {\n      ldflags = [ \"/OPT:NOICF\" ]  # link.exe, but also lld-link.exe.\n    } else if (is_apple && !use_lld) {\n      ldflags = [ \"-Wl,-no_deduplicate\" ]  # ld64.\n    } else if (use_lld) {\n      ldflags = [ \"-Wl,--icf=none\" ]\n    }\n  }\n}\n\nif (current_toolchain == v8_snapshot_toolchain) {\n  v8_executable(\"torque\") {\n    visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n    sources = [ \"src/torque/torque.cc\" ]\n\n    deps = [\n      \":torque_base\",\n      \"//build/win:default_exe_manifest\",\n    ]\n\n    # The use of exceptions for Torque in violation of the Chromium style-guide\n    # is justified by the fact that it is only used from the non-essential\n    # language server and can be removed anytime if it causes problems.\n    configs = [\n      \":internal_config\",\n      \"//build/config/compiler:exceptions\",\n      \"//build/config/compiler:rtti\",\n    ]\n\n    remove_configs = [\n      \"//build/config/compiler:no_exceptions\",\n      \"//build/config/compiler:no_rtti\",\n    ]\n  }\n}\n\nv8_executable(\"torque-language-server\") {\n  visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n  sources = [ \"src/torque/ls/torque-language-server.cc\" ]\n\n  deps = [\n    \":torque_base\",\n    \":torque_ls_base\",\n    \"//build/win:default_exe_manifest\",\n  ]\n\n  # The use of exceptions for Torque in violation of the Chromium style-guide\n  # is justified by the fact that it is only used from the non-essential\n  # language server and can be removed anytime if it causes problems.\n  configs = [\n    \":internal_config\",\n    \"//build/config/compiler:exceptions\",\n    \"//build/config/compiler:rtti\",\n  ]\n\n  remove_configs = [\n    \"//build/config/compiler:no_exceptions\",\n    \"//build/config/compiler:no_rtti\",\n  ]\n}\n\nif (v8_enable_i18n_support) {\n  if (current_toolchain == v8_generator_toolchain) {\n    v8_executable(\"gen-regexp-special-case\") {\n      visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n      sources = [\n        \"src/regexp/gen-regexp-special-case.cc\",\n        \"src/regexp/special-case.h\",\n      ]\n\n      deps = [\n        \":v8_libbase\",\n        \":v8_shared_internal_headers\",\n        \"//build/win:default_exe_manifest\",\n        v8_icu_path,\n      ]\n\n      configs = [ \":internal_config\" ]\n    }\n  }\n\n  action(\"run_gen-regexp-special-case\") {\n    visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n    script = \"tools/run.py\"\n\n    deps = [ \":gen-regexp-special-case($v8_generator_toolchain)\" ]\n\n    output_file = \"$target_gen_dir/src/regexp/special-case.cc\"\n\n    outputs = [ output_file ]\n\n    args = [\n      \"./\" + rebase_path(\n              get_label_info(\n                      \":gen-regexp-special-case($v8_generator_toolchain)\",\n                      \"root_out_dir\") + \"/gen-regexp-special-case\",\n              root_build_dir),\n      rebase_path(output_file, root_build_dir),\n    ]\n  }\n}\n\n###############################################################################\n# Public targets\n#\n\nwant_v8_shell =\n    (current_toolchain == host_toolchain && v8_toolset_for_shell == \"host\") ||\n    (current_toolchain == v8_snapshot_toolchain &&\n     v8_toolset_for_shell == \"host\") ||\n    (current_toolchain != host_toolchain && v8_toolset_for_shell == \"target\")\n\ngroup(\"gn_all\") {\n  testonly = true\n\n  deps = [\n    \":d8\",\n    \":v8_fuzzers\",\n    \":v8_hello_world\",\n    \":v8_sample_process\",\n    \"test:gn_all\",\n    \"tools:gn_all\",\n  ]\n\n  if (v8_custom_deps != \"\") {\n    # Custom dependency from directory under v8/custom_deps.\n    deps += [ v8_custom_deps ]\n  }\n\n  if (want_v8_shell) {\n    deps += [ \":v8_shell\" ]\n  }\n\n  if (v8_check_header_includes) {\n    deps += [ \":check_headers\" ]\n  }\n}\n\ngroup(\"v8_python_base\") {\n  data = [ \".vpython3\" ]\n}\n\ngroup(\"v8_clusterfuzz\") {\n  testonly = true\n\n  deps = [\n    \":d8\",\n    \":v8_simple_inspector_fuzzer\",\n    \"tools/clusterfuzz/trials:v8_clusterfuzz_resources\",\n  ]\n\n  if (v8_multi_arch_build) {\n    deps += [\n      \":d8(//build/toolchain/linux:clang_x64)\",\n      \":d8(//build/toolchain/linux:clang_x64_v8_arm64)\",\n      \":d8(//build/toolchain/linux:clang_x86)\",\n      \":d8(//build/toolchain/linux:clang_x86_v8_arm)\",\n      \":d8(tools/clusterfuzz/foozzie/toolchain:clang_x64_pointer_compression)\",\n    ]\n  }\n}\n\n# Targets we ensure work with gcc. The aim is to keep this list small to have\n# a fast overall compile time.\ngroup(\"v8_gcc_light\") {\n  testonly = true\n\n  deps = [ \":d8\" ]\n}\n\ngroup(\"v8_archive\") {\n  testonly = true\n\n  deps = [ \":d8\" ]\n\n  if (!is_win) {\n    # On windows, cctest doesn't link with v8_static_library.\n    deps += [ \"test/cctest:cctest\" ]\n  }\n}\n\n# TODO(dglazkov): Remove the \"!build_with_chromium\" condition once this clause\n# is removed from Chromium.\nif (is_fuchsia && !build_with_chromium) {\n  import(\"//build/config/fuchsia/generate_runner_scripts.gni\")\n  import(\"//third_party/fuchsia-sdk/sdk/build/component.gni\")\n  import(\"//third_party/fuchsia-sdk/sdk/build/package.gni\")\n\n  fuchsia_component(\"d8_component\") {\n    testonly = true\n    manifest = \"gni/v8.cml\"\n    data_deps = [ \":d8\" ]\n  }\n\n  fuchsia_package(\"d8_pkg\") {\n    testonly = true\n    package_name = \"d8\"\n    deps = [ \":d8_component\" ]\n  }\n\n  fuchsia_package_installer(\"d8_fuchsia\") {\n    testonly = true\n    package = \":d8_pkg\"\n    package_name = \"d8\"\n  }\n}\n\ngroup(\"v8_fuzzers\") {\n  testonly = true\n  data_deps = [\n    \":v8_simple_inspector_fuzzer\",\n    \":v8_simple_json_fuzzer\",\n    \":v8_simple_parser_fuzzer\",\n    \":v8_simple_regexp_fuzzer\",\n  ]\n\n  if (v8_enable_webassembly) {\n    if (v8_wasm_random_fuzzers) {\n      data_deps += [\n        \":v8_simple_wasm_compile_all_fuzzer\",\n        \":v8_simple_wasm_compile_fuzzer\",\n        \":v8_simple_wasm_compile_simd_fuzzer\",\n        \":v8_simple_wasm_compile_wasmgc_fuzzer\",\n        \":v8_simple_wasm_deopt_fuzzer\",\n        \":v8_simple_wasm_init_expr_fuzzer\",\n      ]\n    }\n    data_deps += [\n      \":v8_simple_multi_return_fuzzer\",\n      \":v8_simple_wasm_async_fuzzer\",\n      \":v8_simple_wasm_code_fuzzer\",\n      \":v8_simple_wasm_module_fuzzer\",\n      \":v8_simple_wasm_streaming_fuzzer\",\n    ]\n  }\n}\n\nif (is_component_build) {\n  v8_component(\"v8\") {\n    sources = [ \"src/utils/v8dll-main.cc\" ]\n\n    public_deps = [\n      \":v8_base\",\n      \":v8_snapshot\",\n    ]\n\n    configs = [ \":internal_config\" ]\n\n    public_configs = [ \":external_config\" ]\n  }\n\n  v8_component(\"v8_for_testing\") {\n    testonly = true\n\n    sources = [ \"src/utils/v8dll-main.cc\" ]\n\n    public_deps = [\n      \":torque_base\",\n      \":torque_ls_base\",\n      \":v8_base\",\n      \":v8_headers\",\n      \":v8_snapshot\",\n    ]\n\n    if (v8_enable_turbofan) {\n      # For cctest/test-serialize.\n      public_deps += [ \":v8_initializers\" ]\n    }\n\n    configs = [ \":internal_config\" ]\n\n    public_configs = [ \":external_config\" ]\n  }\n\n  v8_component(\"cppgc\") {\n    public_deps = [ \":cppgc_base\" ]\n\n    if (!cppgc_is_standalone) {\n      deps = [ \":v8\" ]\n    }\n\n    configs = []\n    public_configs = [ \":external_config\" ]\n  }\n\n  if (cppgc_is_standalone) {\n    v8_component(\"cppgc_for_testing\") {\n      testonly = true\n\n      public_deps = [ \":cppgc_base\" ]\n\n      configs = []\n      public_configs = [ \":external_config\" ]\n    }\n  }\n\n  v8_component(\"v8_heap_base_for_testing\") {\n    testonly = true\n\n    public_deps = [ \":v8_heap_base\" ]\n\n    configs = []\n    public_configs = [ \":external_config\" ]\n  }\n} else {\n  group(\"v8\") {\n    public_deps = [\n      \":v8_base\",\n      \":v8_snapshot\",\n    ]\n\n    public_configs = [ \":external_config\" ]\n  }\n\n  group(\"v8_for_testing\") {\n    testonly = true\n\n    public_deps = [\n      \":torque_base\",\n      \":torque_ls_base\",\n      \":v8_base\",\n      \":v8_snapshot\",\n    ]\n\n    if (v8_enable_turbofan) {\n      # For cctest/test-serialize.\n      public_deps += [ \":v8_initializers\" ]\n    }\n\n    public_configs = [ \":external_config\" ]\n  }\n\n  group(\"cppgc\") {\n    public_deps = [ \":cppgc_base\" ]\n\n    if (!cppgc_is_standalone) {\n      deps = [ \":v8\" ]\n    }\n\n    public_configs = [ \":external_config\" ]\n  }\n\n  if (cppgc_is_standalone) {\n    group(\"cppgc_for_testing\") {\n      testonly = true\n\n      public_deps = [ \":cppgc_base\" ]\n\n      public_configs = [ \":external_config\" ]\n    }\n  }\n\n  group(\"v8_heap_base_for_testing\") {\n    testonly = true\n\n    public_deps = [ \":v8_heap_base\" ]\n\n    public_configs = [ \":external_config\" ]\n  }\n}\n\nv8_executable(\"d8\") {\n  sources = [\n    \"src/d8/async-hooks-wrapper.cc\",\n    \"src/d8/async-hooks-wrapper.h\",\n    \"src/d8/d8-console.cc\",\n    \"src/d8/d8-console.h\",\n    \"src/d8/d8-js.cc\",\n    \"src/d8/d8-platforms.cc\",\n    \"src/d8/d8-platforms.h\",\n    \"src/d8/d8-test.cc\",\n    \"src/d8/d8.cc\",\n    \"src/d8/d8.h\",\n  ]\n\n  configs = [\n    # Note: don't use :internal_config here because this target will get\n    # the :external_config applied to it by virtue of depending on :v8, and\n    # you can't have both applied to the same target.\n    \":internal_config_base\",\n    \":v8_tracing_config\",\n  ]\n\n  deps = [\n    \":v8\",\n    \":v8_libbase\",\n    \":v8_libplatform\",\n    \":v8_tracing\",\n    \"//build/win:default_exe_manifest\",\n  ]\n\n  if (is_posix || is_fuchsia) {\n    sources += [ \"src/d8/d8-posix.cc\" ]\n  } else if (is_win) {\n    sources += [ \"src/d8/d8-windows.cc\" ]\n  }\n\n  if (v8_correctness_fuzzer) {\n    deps += [ \"tools/clusterfuzz/foozzie:v8_correctness_fuzzer_resources\" ]\n  }\n\n  defines = []\n\n  if (v8_enable_vtunejit) {\n    deps += [ \"third_party/vtune:v8_vtune\" ]\n  }\n  if (current_os == \"zos\" && is_component_build) {\n    deps += [ \":zoslib\" ]\n  }\n}\n\nv8_executable(\"v8_hello_world\") {\n  sources = [ \"samples/hello-world.cc\" ]\n\n  configs = [\n    # Note: don't use :internal_config here because this target will get\n    # the :external_config applied to it by virtue of depending on :v8, and\n    # you can't have both applied to the same target.\n    \":internal_config_base\",\n  ]\n\n  deps = [\n    \":v8\",\n    \":v8_libbase\",\n    \":v8_libplatform\",\n    \"//build/win:default_exe_manifest\",\n  ]\n\n  # Need to workaround a link error when using devtoolset\n  # https://bugzilla.redhat.com/show_bug.cgi?id=2268188\n  if ((v8_current_cpu == \"ppc64\" || v8_current_cpu == \"s390x\") && is_linux &&\n      !is_clang) {\n    libs = [ \"stdc++\" ]\n  }\n}\n\nv8_executable(\"v8_sample_process\") {\n  sources = [ \"samples/process.cc\" ]\n\n  configs = [\n    # Note: don't use :internal_config here because this target will get\n    # the :external_config applied to it by virtue of depending on :v8, and\n    # you can't have both applied to the same target.\n    \":internal_config_base\",\n  ]\n\n  deps = [\n    \":v8\",\n    \":v8_libbase\",\n    \":v8_libplatform\",\n    \"//build/win:default_exe_manifest\",\n  ]\n  if (current_os == \"zos\" && is_component_build) {\n    deps += [ \":zoslib\" ]\n  }\n}\n\nif (want_v8_shell) {\n  v8_executable(\"v8_shell\") {\n    sources = [ \"samples/shell.cc\" ]\n\n    configs = [\n      # Note: don't use :internal_config here because this target will get\n      # the :external_config applied to it by virtue of depending on :v8, and\n      # you can't have both applied to the same target.\n      \":internal_config_base\",\n    ]\n\n    deps = [\n      \":v8\",\n      \":v8_libbase\",\n      \":v8_libplatform\",\n      \"//build/win:default_exe_manifest\",\n    ]\n    if (current_os == \"zos\" && is_component_build) {\n      deps += [ \":zoslib\" ]\n    }\n  }\n}\n\nv8_executable(\"cppgc_hello_world\") {\n  sources = [ \"samples/cppgc/hello-world.cc\" ]\n\n  if (v8_current_cpu == \"riscv64\" || v8_current_cpu == \"riscv32\") {\n    if (!is_clang) {\n      libs = [ \"atomic\" ]\n    }\n  }\n\n  configs = [\n    # Note: don't use :internal_config here because this target will get\n    # the :external_config applied to it by virtue of depending on :cppgc, and\n    # you can't have both applied to the same target.\n    \":internal_config_base\",\n    \":cppgc_base_config\",\n  ]\n\n  deps = [ \":cppgc\" ]\n  if (!cppgc_is_standalone) {\n    deps += [\n      \":v8\",\n      \"//build/win:default_exe_manifest\",\n    ]\n  }\n}\n\ntemplate(\"v8_fuzzer\") {\n  fuzzer_name = target_name\n\n  v8_source_set(fuzzer_name) {\n    sources = invoker.sources\n\n    deps = [ \":fuzzer_support\" ]\n    if (defined(invoker.deps)) {\n      deps += invoker.deps\n    }\n\n    configs = [\n      \":external_config\",\n      \":internal_config_base\",\n    ]\n  }\n\n  v8_executable(\"v8_simple_${fuzzer_name}\") {\n    deps = [\n      \":${fuzzer_name}\",\n      \"//build/win:default_exe_manifest\",\n    ]\n\n    sources = [ \"test/fuzzer/fuzzer.cc\" ]\n\n    configs = [ \":external_config\" ]\n  }\n}\n\nv8_fuzzer(\"json_fuzzer\") {\n  sources = [ \"test/fuzzer/json.cc\" ]\n}\n\nv8_fuzzer(\"parser_fuzzer\") {\n  sources = [ \"test/fuzzer/parser.cc\" ]\n}\n\nv8_fuzzer(\"regexp_fuzzer\") {\n  sources = [ \"test/fuzzer/regexp.cc\" ]\n}\n\nif (v8_enable_webassembly) {\n  v8_fuzzer(\"multi_return_fuzzer\") {\n    sources = [ \"test/fuzzer/multi-return.cc\" ]\n  }\n\n  v8_source_set(\"wasm_test_common\") {\n    sources = [\n      \"test/common/flag-utils.h\",\n      \"test/common/wasm/flag-utils.h\",\n      \"test/common/wasm/wasm-module-runner.cc\",\n      \"test/common/wasm/wasm-module-runner.h\",\n    ]\n\n    deps = [\n      \":generate_bytecode_builtins_list\",\n      \":run_torque\",\n      \":v8_internal_headers\",\n      \":v8_libbase\",\n      \":v8_shared_internal_headers\",\n      \":v8_tracing\",\n    ]\n\n    public_deps = [\n      \":v8_abseil\",\n      \":v8_maybe_icu\",\n    ]\n\n    configs = [\n      \":external_config\",\n      \":internal_config_base\",\n    ]\n  }\n\n  v8_source_set(\"wasm_fuzzer_common\") {\n    sources = [\n      \"test/fuzzer/wasm/fuzzer-common.cc\",\n      \"test/fuzzer/wasm/fuzzer-common.h\",\n      \"tools/wasm/mjsunit-module-disassembler-impl.h\",\n    ]\n\n    deps = [\n      \":fuzzer_support\",\n      \":generate_bytecode_builtins_list\",\n      \":run_torque\",\n      \":v8_internal_headers\",\n      \":v8_tracing\",\n      \":wasm_test_common\",\n    ]\n\n    public_deps = [\n      \":v8_abseil\",\n      \":v8_maybe_icu\",\n    ]\n\n    configs = [\n      \":external_config\",\n      \":internal_config_base\",\n    ]\n  }\n\n  template(\"v8_wasm_fuzzer\") {\n    forward_variables_from(invoker, \"*\")\n    v8_fuzzer(target_name) {\n      deps = [\n        \":wasm_fuzzer_common\",\n        \":wasm_test_common\",\n      ]\n    }\n  }\n\n  v8_wasm_fuzzer(\"wasm_module_fuzzer\") {\n    sources = [ \"test/fuzzer/wasm/module.cc\" ]\n  }\n\n  v8_wasm_fuzzer(\"wasm_async_fuzzer\") {\n    sources = [ \"test/fuzzer/wasm/async.cc\" ]\n  }\n\n  v8_wasm_fuzzer(\"wasm_code_fuzzer\") {\n    sources = [\n      \"test/common/wasm/test-signatures.h\",\n      \"test/fuzzer/wasm/code.cc\",\n    ]\n  }\n\n  v8_wasm_fuzzer(\"wasm_streaming_fuzzer\") {\n    sources = [ \"test/fuzzer/wasm/streaming.cc\" ]\n  }\n\n  if (v8_wasm_random_fuzzers) {\n    v8_wasm_fuzzer(\"wasm_compile_all_fuzzer\") {\n      sources = [\n        \"test/common/wasm/test-signatures.h\",\n        \"test/fuzzer/wasm/compile-all.cc\",\n      ]\n    }\n\n    v8_wasm_fuzzer(\"wasm_compile_fuzzer\") {\n      sources = [\n        \"test/common/wasm/test-signatures.h\",\n        \"test/fuzzer/wasm/compile.cc\",\n      ]\n    }\n\n    v8_wasm_fuzzer(\"wasm_compile_simd_fuzzer\") {\n      sources = [\n        \"test/common/wasm/test-signatures.h\",\n        \"test/fuzzer/wasm/compile-simd.cc\",\n      ]\n    }\n\n    v8_wasm_fuzzer(\"wasm_compile_wasmgc_fuzzer\") {\n      sources = [\n        \"test/common/wasm/test-signatures.h\",\n        \"test/fuzzer/wasm/compile-wasmgc.cc\",\n      ]\n    }\n\n    v8_wasm_fuzzer(\"wasm_init_expr_fuzzer\") {\n      sources = [ \"test/fuzzer/wasm/init-expr.cc\" ]\n    }\n\n    v8_wasm_fuzzer(\"wasm_deopt_fuzzer\") {\n      sources = [ \"test/fuzzer/wasm/deopt.cc\" ]\n    }\n  }  # v8_wasm_random_fuzzers\n}\n\nv8_fuzzer(\"inspector_fuzzer\") {\n  sources = [ \"test/fuzzer/inspector-fuzzer.cc\" ]\n  deps = [ \"test/inspector:inspector_test\" ]\n}\n\n# Target to build all generated .cc files.\ngroup(\"v8_generated_cc_files\") {\n  testonly = true\n\n  deps = [\n    \":generate_bytecode_builtins_list\",\n    \":run_torque\",\n    \"src/inspector:v8_generated_cc_files\",\n  ]\n}\n\n# Protobuf targets, used only when building outside of chromium.\n\nif (!build_with_chromium && v8_use_perfetto) {\n  v8_component(\"v8_libperfetto\") {\n    configs = [ \":v8_tracing_config\" ]\n    public_configs = [ \"//third_party/perfetto/gn:public_config\" ]\n    deps = [\n      \"//third_party/perfetto/src/trace_processor:storage_minimal\",\n      \"//third_party/perfetto/src/tracing/core\",\n\n      # TODO(skyostil): Support non-POSIX platforms.\n      \"//third_party/perfetto/protos/perfetto/trace/track_event:zero\",\n      \"//third_party/perfetto/src/tracing:in_process_backend\",\n      \"//third_party/perfetto/src/tracing:platform_impl\",\n    ]\n\n    public_deps = [\n      \"//third_party/perfetto/include/perfetto/trace_processor\",\n      \"//third_party/perfetto/protos/perfetto/config:cpp\",\n      \"//third_party/perfetto/protos/perfetto/trace/chrome:zero\",\n      \"//third_party/perfetto/src/trace_processor:export_json\",\n      \"//third_party/perfetto/src/tracing:client_api\",\n    ]\n  }\n}  # if (!build_with_chromium && v8_use_perfetto)\n\n# GN evaluates each .gn file once per toolchain, so restricting to default\n# toolchain will ensure write_file() is called only once.\nif (current_toolchain == default_toolchain) {\n  import(\"//build/gn_logs.gni\")\n\n  # Write debug logs to gn_logs.txt.\n  _lines = [\n             \"Generated during 'gn gen' by //BUILD.gn.\",\n             \"\",\n           ] + build_gn_logs\n\n  write_file(\"$root_build_dir/gn_logs.txt\", _lines)\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.4482421875,
          "content": "# V8 Code of Conduct\n\nAs part of the Chromium team, the V8 team is committed to preserving and\nfostering a diverse, welcoming community. To this end, the [Chromium Code of\nConduct](https://chromium.googlesource.com/chromium/src/+/master/CODE_OF_CONDUCT.md)\napplies to our repos and organizations, mailing lists, blog content, and any\nother Chromium-supported communication group, as well as any private\ncommunication initiated in the context of these spaces.\n"
        },
        {
          "name": "COMMON_OWNERS",
          "type": "blob",
          "size": 0.8095703125,
          "content": "adamk@chromium.org\nahaas@chromium.org\nalexschulze@chromium.org\nbikineev@chromium.org\nbmeurer@chromium.org\ncbruni@chromium.org\nclemensb@chromium.org\ndinfuehr@chromium.org\ndlehmann@chromium.org\ndmercadier@chromium.org\necmziegler@chromium.org\nevih@chromium.org\nfgm@chromium.org\ngdeepti@chromium.org\nhpayer@chromium.org\nishell@chromium.org\njgruber@chromium.org\njkummerow@chromium.org\nleszeks@chromium.org\nliviurau@chromium.org\nmachenbach@chromium.org\nmanoskouk@chromium.org\nmarja@chromium.org\nmliedtke@chromium.org\nmlippautz@chromium.org\nnicohartmann@chromium.org\nnikolaos@chromium.org\nolivf@chromium.org\nomerkatz@chromium.org\npthier@chromium.org\nrezvan@chromium.org\nsroettger@google.com\nsyg@chromium.org\nszuend@chromium.org\nthibaudm@chromium.org\nvahl@chromium.org\nverwaest@chromium.org\nvictorgomes@chromium.org\nyangguo@chromium.org\n"
        },
        {
          "name": "DEPS",
          "type": "blob",
          "size": 30.6982421875,
          "content": "# Note: The buildbots evaluate this file with CWD set to the parent\n# directory and assume that the root of the checkout is in ./v8/, so\n# all paths in here must match this assumption.\n\nuse_relative_paths = True\n\ngclient_gn_args_file = 'build/config/gclient_args.gni'\ngclient_gn_args = [\n]\n\nvars = {\n  # Fetches only the SDK boot images which match at least one of the whitelist\n  # entries in a comma-separated list.\n  #\n  # Available images:\n  #   Emulation:\n  #   - terminal.qemu-x64\n  #   - terminal.qemu-arm64\n  #   - workstation.qemu-x64-release\n  #   Hardware:\n  #   - minimal.x64\n  #   - core.x64-dfv2\n  #\n  # Since the images are hundreds of MB, default to only downloading the image\n  # most commonly useful for developers. Bots and developers that need to use\n  # other images (e.g., qemu.arm64) can override this with additional images.\n  'checkout_fuchsia_boot_images': \"terminal.x64\",\n  'checkout_fuchsia_product_bundles': '\"{checkout_fuchsia_boot_images}\" != \"\"',\n\n  'checkout_instrumented_libraries': False,\n  'checkout_ittapi': False,\n\n  # Fetch the prebuilt binaries for llvm-cov and llvm-profdata. Needed to\n  # process the raw profiles produced by instrumented targets (built with\n  # the gn arg 'use_clang_coverage').\n  'checkout_clang_coverage_tools': False,\n\n  # Fetch clang-tidy into the same bin/ directory as our clang binary.\n  'checkout_clang_tidy': False,\n\n  # Fetch clangd into the same bin/ directory as our clang binary.\n  'checkout_clangd': False,\n\n  # Fetch and build V8 builtins with PGO profiles\n  'checkout_v8_builtins_pgo_profiles': False,\n\n  'android_url': 'https://android.googlesource.com',\n  'chromium_url': 'https://chromium.googlesource.com',\n  'download_gcmole': False,\n  'download_jsfunfuzz': False,\n  'download_prebuilt_bazel': False,\n  'check_v8_header_includes': False,\n\n  # By default, download the fuchsia sdk from the public sdk directory.\n  'fuchsia_sdk_cipd_prefix': 'fuchsia/sdk/core/',\n\n  # Used for downloading the Fuchsia SDK without running hooks.\n  'checkout_fuchsia_no_hooks': False,\n\n  # reclient CIPD package version\n  'reclient_version': 're_client_version:0.172.0.3cf60ba5-gomaip',\n\n  # Fetch configuration files required for the 'use_remoteexec' gn arg\n  'download_remoteexec_cfg': False,\n\n  # RBE instance to use for running remote builds\n  'rbe_instance': Str('projects/rbe-chrome-untrusted/instances/default_instance'),\n\n  # RBE project to download rewrapper config files for. Only needed if\n  # different from the project used in 'rbe_instance'\n  'rewrapper_cfg_project': Str(''),\n\n  # This variable is overrided in Chromium's DEPS file.\n  'build_with_chromium': False,\n\n  # GN CIPD package version.\n  'gn_version': 'git_revision:c97a86a72105f3328a540f5a5ab17d11989ab7dd',\n\n  # ninja CIPD package version\n  # https://chrome-infra-packages.appspot.com/p/infra/3pp/tools/ninja\n  'ninja_version': 'version:3@1.12.1.chromium.4',\n\n  # siso CIPD package version\n  'siso_version': 'git_revision:f9bfa081826a4ffb6f2a96b640d009cef900e69f',\n\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling Fuchsia sdk\n  # and whatever else without interference from each other.\n  'fuchsia_version': 'version:26.20250103.4.1',\n\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_build-tools_version\n  # and whatever else without interference from each other.\n  'android_sdk_build-tools_version': 'DxwAZ3hD551Neu6ycuW5CPnXFrdleRBd93oX1eB_m9YC',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_emulator_version\n  # and whatever else without interference from each other.\n  'android_sdk_emulator_version': '9lGp8nTUCRRWGMnI_96HcKfzjnxEJKUcfvfwmA3wXNkC',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_extras_version\n  # and whatever else without interference from each other.\n  'android_sdk_extras_version': 'bY55nDqO6FAm6FkGIj09sh2KW9oqAkCGKjYok5nUvBMC',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_patcher_version\n  # and whatever else without interference from each other.\n  'android_sdk_patcher_version': 'I6FNMhrXlpB-E1lOhMlvld7xt9lBVNOO83KIluXDyA0C',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_platform-tools_version\n  # and whatever else without interference from each other.\n  'android_sdk_platform-tools_version': 'WihaseZR6cojZbkzIqwGhpTp92ztaGfqq8njBU8eTXYC',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_platforms_version\n  # and whatever else without interference from each other.\n  'android_sdk_platforms_version': 'kIXA-9XuCfOESodXEdOBkW5f1ytrGWdbp3HFp1I8A_0C',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_sources_version\n  # and whatever else without interference from each other.\n  'android_sdk_sources_version': 'qfTSF99e29-w3eIVPpfcif0Em5etyvxuicTDTntWHQMC',\n  # Three lines of non-changing comments so that\n  # the commit queue can handle CLs rolling android_sdk_tools-lint_version\n  # and whatever else without interference from each other.\n  'android_sdk_cmdline-tools_version': 'OCGHZKTdjXjIELVI6FMAgcDkfnd_1ybB0_MtljPtz-8C',\n}\n\ndeps = {\n  'build':\n    Var('chromium_url') + '/chromium/src/build.git' + '@' + '0e118f3848e1aef7051cae1ac36eb9b3deb66945',\n  'buildtools':\n    Var('chromium_url') + '/chromium/src/buildtools.git' + '@' + '59f9fbaa493364e33c1317ef45f380a4c94729bd',\n  'buildtools/linux64': {\n    'packages': [\n      {\n        'package': 'gn/gn/linux-${{arch}}',\n        'version': Var('gn_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n    'condition': 'host_os == \"linux\" and host_cpu != \"s390\" and host_os != \"zos\" and host_cpu != \"ppc\"',\n  },\n  'buildtools/mac': {\n    'packages': [\n      {\n        'package': 'gn/gn/mac-${{arch}}',\n        'version': Var('gn_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n    'condition': 'host_os == \"mac\"',\n  },\n  'buildtools/win': {\n    'packages': [\n      {\n        'package': 'gn/gn/windows-amd64',\n        'version': Var('gn_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n    'condition': 'host_os == \"win\"',\n  },\n  'buildtools/reclient': {\n    'packages': [\n      {\n        'package': 'infra/rbe/client/${{platform}}',\n        'version': Var('reclient_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n    'condition': '(host_os == \"linux\" or host_os == \"mac\" or host_os == \"win\") and host_cpu != \"s390\" and host_os != \"zos\" and host_cpu != \"ppc\" and (host_cpu != \"arm64\" or host_os == \"mac\")',\n  },\n  'test/benchmarks/data':\n    Var('chromium_url') + '/v8/deps/third_party/benchmarks.git' + '@' + '05d7188267b4560491ff9155c5ee13e207ecd65f',\n  'test/mozilla/data':\n    Var('chromium_url') + '/v8/deps/third_party/mozilla-tests.git' + '@' + 'f6c578a10ea707b1a8ab0b88943fe5115ce2b9be',\n  'test/test262/data':\n    Var('chromium_url') + '/external/github.com/tc39/test262.git' + '@' + 'd49db639a89df9cc2b6c02554beb41acaec95c38',\n  'third_party/android_platform': {\n    'url': Var('chromium_url') + '/chromium/src/third_party/android_platform.git' + '@' + 'e96dafd97e013cc44ee83d9d3d5d322a1356c6ca',\n    'condition': 'checkout_android',\n  },\n  'third_party/android_sdk/public': {\n      'packages': [\n          {\n              'package': 'chromium/third_party/android_sdk/public/build-tools/35.0.0',\n              'version': Var('android_sdk_build-tools_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/emulator',\n              'version': Var('android_sdk_emulator_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/extras',\n              'version': Var('android_sdk_extras_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/patcher',\n              'version': Var('android_sdk_patcher_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/platform-tools',\n              'version': Var('android_sdk_platform-tools_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/platforms/android-35',\n              'version': Var('android_sdk_platforms_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/sources/android-30',\n              'version': Var('android_sdk_sources_version'),\n          },\n          {\n              'package': 'chromium/third_party/android_sdk/public/cmdline-tools',\n              'version': Var('android_sdk_cmdline-tools_version'),\n          },\n      ],\n      'condition': 'checkout_android',\n      'dep_type': 'cipd',\n  },\n  'third_party/android_toolchain/ndk': {\n    'packages': [\n      {\n        'package': 'chromium/third_party/android_toolchain/android_toolchain',\n        'version': 'Idl-vYnWGnM8K3XJhM3h6zjYVDXlnljVz3FE00V9IM8C',\n      },\n    ],\n    'condition': 'checkout_android',\n    'dep_type': 'cipd',\n  },\n  'third_party/catapult': {\n    'url': Var('chromium_url') + '/catapult.git' + '@' + 'c4c972c5f0bebc45d077172aa42d7ba98f3abbbb',\n    'condition': 'checkout_android',\n  },\n  'third_party/clang-format/script':\n    Var('chromium_url') + '/external/github.com/llvm/llvm-project/clang/tools/clang-format.git' + '@' + '37f6e68a107df43b7d7e044fd36a13cbae3413f2',\n  'third_party/colorama/src': {\n    'url': Var('chromium_url') + '/external/colorama.git' + '@' + '3de9f013df4b470069d03d250224062e8cf15c49',\n    'condition': 'checkout_android',\n  },\n  'third_party/cpu_features/src': {\n    'url': Var('chromium_url') + '/external/github.com/google/cpu_features.git' + '@' + '936b9ab5515dead115606559502e3864958f7f6e',\n    'condition': 'checkout_android',\n  },\n  'third_party/depot_tools':\n    Var('chromium_url') + '/chromium/tools/depot_tools.git' + '@' + '423f1e1914ab4aa7b2bdf804e216d4c097853ba2',\n  'third_party/fp16/src':\n    Var('chromium_url') + '/external/github.com/Maratyszcza/FP16.git' + '@' + '0a92994d729ff76a58f692d3028ca1b64b145d91',\n  'third_party/fast_float/src':\n    Var('chromium_url') + '/external/github.com/fastfloat/fast_float.git' + '@' + '3e57d8dcfb0a04b5a8a26b486b54490a2e9b310f',\n  'third_party/fuchsia-gn-sdk': {\n    'url': Var('chromium_url') + '/chromium/src/third_party/fuchsia-gn-sdk.git' + '@' + '1e538ac2d0583511f489a9f940a0b8a4f2a2f3ab',\n    'condition': 'checkout_fuchsia',\n  },\n  # Exists for rolling the Fuchsia SDK. Check out of the SDK should always\n  # rely on the hook running |update_sdk.py| script below.\n  'third_party/fuchsia-sdk/sdk': {\n      'packages': [\n          {\n              'package': Var('fuchsia_sdk_cipd_prefix') + '${{platform}}',\n              'version': Var('fuchsia_version'),\n          },\n      ],\n      'condition': 'checkout_fuchsia_no_hooks',\n      'dep_type': 'cipd',\n  },\n  'third_party/google_benchmark_chrome': {\n    'url': Var('chromium_url') + '/chromium/src/third_party/google_benchmark.git' + '@' + '917e1208b42fdce63511e401067677ffee3a5c7d',\n  },\n  'third_party/google_benchmark_chrome/src': {\n    'url': Var('chromium_url') + '/external/github.com/google/benchmark.git' + '@' + '761305ec3b33abf30e08d50eb829e19a802581cc',\n  },\n  'third_party/fuzztest':\n    Var('chromium_url') + '/chromium/src/third_party/fuzztest.git' + '@' + '584c66b54e7f10fb0c95514cefb560c5a64828ba',\n  'third_party/fuzztest/src':\n    Var('chromium_url') + '/external/github.com/google/fuzztest.git' + '@' + '70e24aa9499f5563bb13ec9d0b8490ec2bf09510',\n  'third_party/googletest/src':\n    Var('chromium_url') + '/external/github.com/google/googletest.git' + '@' + '504ea69cf7e9947be54f808a09b7b08988e84b5f',\n  'third_party/highway/src':\n    Var('chromium_url') + '/external/github.com/google/highway.git' + '@' + '00fe003dac355b979f36157f9407c7c46448958e',\n  'third_party/icu':\n    Var('chromium_url') + '/chromium/deps/icu.git' + '@' + 'bbccc2f6efc1b825de5f2c903c48be685cd0cf22',\n  'third_party/instrumented_libs': {\n    'url': Var('chromium_url') + '/chromium/third_party/instrumented_libraries.git' + '@' + '3cc43119a29158bcde39d288a8def4b8ec49baf8',\n    'condition': 'checkout_instrumented_libraries',\n  },\n  'third_party/ittapi': {\n    # Force checkout ittapi libraries to pass v8 header includes check on\n    # bots that has check_v8_header_includes enabled.\n    'url': Var('chromium_url') + '/external/github.com/intel/ittapi' + '@' + 'a3911fff01a775023a06af8754f9ec1e5977dd97',\n    'condition': \"checkout_ittapi or check_v8_header_includes\",\n  },\n  'third_party/jinja2':\n    Var('chromium_url') + '/chromium/src/third_party/jinja2.git' + '@' + '5e1ee241ab04b38889f8d517f2da8b3df7cfbd9a',\n  'third_party/jsoncpp/source':\n    Var('chromium_url') + '/external/github.com/open-source-parsers/jsoncpp.git'+ '@' + '42e892d96e47b1f6e29844cc705e148ec4856448',\n  'third_party/libc++/src':\n    Var('chromium_url') + '/external/github.com/llvm/llvm-project/libcxx.git' + '@' + '74dd760826063f15ce4d373b31bc34d1c65e41c2',\n  'third_party/libc++abi/src':\n    Var('chromium_url') + '/external/github.com/llvm/llvm-project/libcxxabi.git' + '@' + '7681005c6233e8a21b97e24c1a3c5c6979927d5a',\n  'third_party/libunwind/src':\n    Var('chromium_url') + '/external/github.com/llvm/llvm-project/libunwind.git' + '@' + 'd1e95b102f113ded38974cf06a65fe0457b6004b',\n  'third_party/llvm-libc/src':\n    Var('chromium_url') + '/external/github.com/llvm/llvm-project/libc.git' + '@' + '44258fc58f1db70b223625a1dbc9c1ceea184ecf',\n  'third_party/llvm-build/Release+Asserts': {\n    'dep_type': 'gcs',\n    'bucket': 'chromium-browser-clang',\n    'objects': [\n      {\n        'object_name': 'Linux_x64/clang-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'e649b5ae7db215ede1d17d63e60f187c9773bc3bb465e4ff25148f58783c0588',\n        'size_bytes': 54177680,\n        'generation': 1736382900858370,\n        'condition': 'host_os == \"linux\"',\n      },\n      {\n        'object_name': 'Linux_x64/clang-tidy-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '98aeee7a6ea7b555868c16d009f0232c421ef88cb5a6a60c38b78255dd4faced',\n        'size_bytes': 13149440,\n        'generation': 1736382900905802,\n        'condition': 'host_os == \"linux\" and checkout_clang_tidy',\n      },\n      {\n        'object_name': 'Linux_x64/clangd-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '767ad010ec7d99a62a2c6535cca8f3bc55c4866b2619462fb303e0bc9a5f1977',\n        'size_bytes': 27687240,\n        'generation': 1736382900911727,\n        'condition': 'host_os == \"linux\" and checkout_clangd',\n      },\n      {\n        'object_name': 'Linux_x64/llvm-code-coverage-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'b61cee4a240859bab2b541721a5afd8333c0fc4eea2e568a63cf71529efefa76',\n        'size_bytes': 2289668,\n        'generation': 1736382900990620,\n        'condition': 'host_os == \"linux\" and checkout_clang_coverage_tools',\n      },\n      {\n        'object_name': 'Linux_x64/llvmobjdump-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'a2eb777a2013c9d647c957b9cbb3d3937b66c6443ed9118d8a1eeb3fea6250d3',\n        'size_bytes': 5348020,\n        'generation': 1736382900960786,\n        'condition': '(checkout_linux or checkout_mac or checkout_android and host_os != \"mac\")',\n      },\n      {\n        'object_name': 'Mac/clang-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '40b2964db638f50f62c410202a0e150809b521eab8d764344dfcc82ce2fedda1',\n        'size_bytes': 49122796,\n        'generation': 1736382902685415,\n        'condition': 'host_os == \"mac\" and host_cpu == \"x64\"',\n      },\n      {\n        'object_name': 'Mac/clang-mac-runtime-library-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '6dd34f8c8b70a1bf1453a74204c62669abe84e8e7f9625cbc16327b3fab8b943',\n        'size_bytes': 972748,\n        'generation': 1736382909396308,\n        'condition': 'checkout_mac and not host_os == \"mac\"',\n      },\n      {\n        'object_name': 'Mac/clang-tidy-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '194df82314e98d9c2b8c3d0810706bdedcdd60997b622eea07a1628ab94f28c3',\n        'size_bytes': 12765652,\n        'generation': 1736382902742379,\n        'condition': 'host_os == \"mac\" and host_cpu == \"x64\" and checkout_clang_tidy',\n      },\n      {\n        'object_name': 'Mac/clangd-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'a151f0d3958c8f469339c57f60e336cbf066fa94c5c841ac6b8e05cd09077890',\n        'size_bytes': 26561888,\n        'generation': 1736382902744981,\n        'condition': 'host_os == \"mac\" and host_cpu == \"x64\" and checkout_clangd',\n      },\n      {\n        'object_name': 'Mac/llvm-code-coverage-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'e14e803b4841a7a392f960278e7225b61453f1cca3086e7cdfb1c3cee813a85d',\n        'size_bytes': 2250480,\n        'generation': 1736382902843064,\n        'condition': 'host_os == \"mac\" and host_cpu == \"x64\" and checkout_clang_coverage_tools',\n      },\n      {\n        'object_name': 'Mac_arm64/clang-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '11238b743b1c3157b64f261118ee0884f5b7f5f9afc235d4c47c1afc52556b1b',\n        'size_bytes': 43127752,\n        'generation': 1736382911237265,\n        'condition': 'host_os == \"mac\" and host_cpu == \"arm64\"',\n      },\n      {\n        'object_name': 'Mac_arm64/clang-tidy-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '00a42f1c03272d8f9e0c9531712110422936fb9365c66206becdc7dfa27500d8',\n        'size_bytes': 11362620,\n        'generation': 1736382911277357,\n        'condition': 'host_os == \"mac\" and host_cpu == \"arm64\" and checkout_clang_tidy',\n      },\n      {\n        'object_name': 'Mac_arm64/clangd-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'eb2c179811101e49a6156b55624a6292688c0a4ef1e79d0b05ef03f2a17f405f',\n        'size_bytes': 22998836,\n        'generation': 1736382911247931,\n        'condition': 'host_os == \"mac\" and host_cpu == \"arm64\" and checkout_clangd',\n      },\n      {\n        'object_name': 'Mac_arm64/llvm-code-coverage-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '9c06d812bf98fc1ca1de9afaf031efa2334b3c1039969ee90689a810726db83c',\n        'size_bytes': 1977132,\n        'generation': 1736382911314127,\n        'condition': 'host_os == \"mac\" and host_cpu == \"arm64\" and checkout_clang_coverage_tools',\n      },\n      {\n        'object_name': 'Win/clang-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '554d4d0b22b7c682dd05bb912b9f2c1a13248d38660f3f1e15444ef0970fb0e5',\n        'size_bytes': 46344548,\n        'generation': 1736382920155077,\n        'condition': 'host_os == \"win\"',\n      },\n      {\n        'object_name': 'Win/clang-tidy-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'fbb40ae15b7c2fc408d8329eb6274d3422c6fb4110f27655adb8cd642d7b62b5',\n        'size_bytes': 12970212,\n        'generation': 1736382920246226,\n        'condition': 'host_os == \"win\" and checkout_clang_tidy',\n      },\n      {\n        'object_name': 'Win/clang-win-runtime-library-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '98a76f1ec725bbf112fe91ba007bc39ca1efe1f1923d1c5a7cf2812e8c34b218',\n        'size_bytes': 2458356,\n        'generation': 1736382926959753,\n        'condition': 'checkout_win and not host_os == \"win\"',\n      },\n      {\n        'object_name': 'Win/clangd-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': 'f766b3623240184b7d668b8e4e9c6070f6c56ee676cfed9a98375653922ccda8',\n        'size_bytes': 25602964,\n        'generation': 1736382920261395,\n       'condition': 'host_os == \"win\" and checkout_clangd',\n      },\n      {\n        'object_name': 'Win/llvm-code-coverage-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '7f23a02c44dac5fb1139cc5943fc764b7c49bab152c76a416785f1413cfbaf0d',\n        'size_bytes': 2361572,\n        'generation': 1736382920285247,\n        'condition': 'host_os == \"win\" and checkout_clang_coverage_tools',\n      },\n      {\n        'object_name': 'Win/llvmobjdump-llvmorg-20-init-17108-g29ed6000-1.tar.xz',\n        'sha256sum': '8884520329694e6f35ab9790f65a474e04bafc541d6d40592f43356f44ee0d40',\n        'size_bytes': 5439908,\n        'generation': 1736382920291826,\n        'condition': 'checkout_linux or checkout_mac or checkout_android and host_os == \"win\"',\n      },\n    ],\n  },\n  'third_party/logdog/logdog':\n    Var('chromium_url') + '/infra/luci/luci-py/client/libs/logdog' + '@' + '0b2078a90f7a638d576b3a7c407d136f2fb62399',\n  'third_party/markupsafe':\n    Var('chromium_url') + '/chromium/src/third_party/markupsafe.git' + '@' + '9f8efc8637f847ab1ba984212598e6fb9cf1b3d4',\n  'third_party/ninja': {\n    'packages': [\n      {\n        'package': 'infra/3pp/tools/ninja/${{platform}}',\n        'version': Var('ninja_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n    'condition': 'host_cpu != \"s390\" and host_os != \"zos\" and host_cpu != \"ppc\"'\n  },\n  'third_party/perfetto':\n    Var('android_url') + '/platform/external/perfetto.git' + '@' + '24764a1d9c2fce1e9816ffae691f00353ade330d',\n  'third_party/protobuf':\n    Var('chromium_url') + '/chromium/src/third_party/protobuf.git' + '@' + '7938ad35f63a558bf94755cd33d40e79442a5930',\n  'third_party/re2/src':\n    Var('chromium_url') + '/external/github.com/google/re2.git' + '@' + '6dcd83d60f7944926bfd308cc13979fc53dd69ca',\n  'third_party/requests': {\n      'url': Var('chromium_url') + '/external/github.com/kennethreitz/requests.git' + '@' + 'c7e0fc087ceeadb8b4c84a0953a422c474093d6d',\n      'condition': 'checkout_android',\n  },\n  'third_party/siso': {\n    'packages': [\n      {\n        'package': 'infra/build/siso/${{platform}}',\n        'version': Var('siso_version'),\n      }\n    ],\n    'dep_type': 'cipd',\n    'condition': 'not build_with_chromium and host_cpu != \"s390\" and host_os != \"zos\" and host_cpu != \"ppc\"',\n  },\n  'third_party/zlib':\n    Var('chromium_url') + '/chromium/src/third_party/zlib.git'+ '@' + 'b763971bcaa3e4c50a344035837a1dd60d7e6753',\n  'tools/clang':\n    Var('chromium_url') + '/chromium/src/tools/clang.git' + '@' + '65ef34162c758287f1f63d73f2c7eb864df462c1',\n  'tools/protoc_wrapper':\n    Var('chromium_url') + '/chromium/src/tools/protoc_wrapper.git' + '@' + 'dbcbea90c20ae1ece442d8ef64e61c7b10e2b013',\n  'third_party/abseil-cpp': {\n    'url': Var('chromium_url') + '/chromium/src/third_party/abseil-cpp.git' + '@' + '9c3ff1b50b6026281dcfd79df631bec370d89c78',\n    'condition': 'not build_with_chromium',\n  },\n  'third_party/zoslib': {\n    'url': Var('chromium_url') + '/external/github.com/ibmruntimes/zoslib.git' + '@' + '1e68de6e37efced3738a88536fccb6bbfe2d70b2',\n    'condition': 'host_os == \"zos\"',\n  }\n}\n\ninclude_rules = [\n  # Everybody can use some things.\n  '+include',\n  '+unicode',\n  '+third_party/fast_float/src/include',\n  '+third_party/fdlibm',\n  '+third_party/fp16/src/include',\n  '+third_party/fuzztest',\n  '+third_party/ittapi/include',\n  '+third_party/v8/codegen',\n  '+third_party/vtune',\n  '+hwy/highway.h',\n  # Abseil features are allow-listed. Please use your best judgement when adding\n  # to this set -- if in doubt, email v8-dev@. For general guidance, refer to\n  # the Chromium guidelines (though note that some requirements in V8 may be\n  # different to Chromium's):\n  # https://chromium.googlesource.com/chromium/src/+/main/styleguide/c++/c++11.md\n  '+absl/container/flat_hash_map.h',\n  '+absl/container/flat_hash_set.h',\n  '+absl/container/btree_map.h',\n  '+absl/status',\n  '+absl/synchronization/mutex.h',\n  # Some abseil features are explicitly banned.\n  '-absl/types/any.h', # Requires RTTI.\n  '-absl/types/flags', # Requires RTTI.\n]\n\n# checkdeps.py shouldn't check for includes in these directories:\nskip_child_includes = [\n  'build',\n  'third_party',\n]\n\nhooks = [\n  {\n    # Ensure that the DEPS'd \"depot_tools\" has its self-update capability\n    # disabled.\n    'name': 'disable_depot_tools_selfupdate',\n    'pattern': '.',\n    'action': [\n        'python3',\n        'third_party/depot_tools/update_depot_tools_toggle.py',\n        '--disable',\n    ],\n  },\n  {\n    # This clobbers when necessary (based on get_landmines.py). It must be the\n    # first hook so that other things that get/generate into the output\n    # directory will not subsequently be clobbered.\n    'name': 'landmines',\n    'pattern': '.',\n    'action': [\n        'python3',\n        'build/landmines.py',\n        '--landmine-scripts',\n        'tools/get_landmines.py',\n    ],\n  },\n  {\n    'name': 'bazel',\n    'pattern': '.',\n    'condition': 'download_prebuilt_bazel',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--bucket', 'chromium-v8-prebuilt-bazel/linux',\n                '--no_resume',\n                '-s', 'tools/bazel/bazel.sha1',\n                '--platform=linux*',\n    ],\n  },\n  # Pull dsymutil binaries using checked-in hashes.\n  {\n    'name': 'dsymutil_mac_arm64',\n    'pattern': '.',\n    'condition': 'host_os == \"mac\" and host_cpu == \"arm64\"',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--no_resume',\n                '--no_auth',\n                '--bucket', 'chromium-browser-clang',\n                '-s', 'tools/clang/dsymutil/bin/dsymutil.arm64.sha1',\n                '-o', 'tools/clang/dsymutil/bin/dsymutil',\n    ],\n  },\n  {\n    'name': 'dsymutil_mac_x64',\n    'pattern': '.',\n    'condition': 'host_os == \"mac\" and host_cpu == \"x64\"',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--no_resume',\n                '--no_auth',\n                '--bucket', 'chromium-browser-clang',\n                '-s', 'tools/clang/dsymutil/bin/dsymutil.x64.sha1',\n                '-o', 'tools/clang/dsymutil/bin/dsymutil',\n    ],\n  },\n  {\n    'name': 'gcmole',\n    'pattern': '.',\n    'condition': 'download_gcmole',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--bucket', 'chrome-v8-gcmole',\n                '-u', '--no_resume',\n                '-s', 'tools/gcmole/gcmole-tools.tar.gz.sha1',\n                '--platform=linux*',\n    ],\n  },\n  {\n    'name': 'jsfunfuzz',\n    'pattern': '.',\n    'condition': 'download_jsfunfuzz',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--bucket', 'chrome-v8-jsfunfuzz',\n                '-u', '--no_resume',\n                '-s', 'tools/jsfunfuzz/jsfunfuzz.tar.gz.sha1',\n                '--platform=linux*',\n    ],\n  },\n  {\n    'name': 'wasm_spec_tests',\n    'pattern': '.',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--no_resume',\n                '--no_auth',\n                '-u',\n                '--bucket', 'v8-wasm-spec-tests',\n                '-s', 'test/wasm-spec-tests/tests.tar.gz.sha1',\n    ],\n  },\n  {\n    'name': 'wasm_js',\n    'pattern': '.',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--no_resume',\n                '--no_auth',\n                '-u',\n                '--bucket', 'v8-wasm-spec-tests',\n                '-s', 'test/wasm-js/tests.tar.gz.sha1',\n    ],\n  },\n  {\n    # Case-insensitivity for the Win SDK. Must run before win_toolchain below.\n    'name': 'ciopfs_linux',\n    'pattern': '.',\n    'condition': 'checkout_win and host_os == \"linux\"',\n    'action': [ 'python3',\n                'third_party/depot_tools/download_from_google_storage.py',\n                '--no_resume',\n                '--no_auth',\n                '--bucket', 'chromium-browser-clang/ciopfs',\n                '-s', 'build/ciopfs.sha1',\n    ]\n  },\n  {\n    # Update the Windows toolchain if necessary.\n    'name': 'win_toolchain',\n    'pattern': '.',\n    'condition': 'checkout_win',\n    'action': ['python3', 'build/vs_toolchain.py', 'update', '--force'],\n  },\n  {\n    # Update the Mac toolchain if necessary.\n    'name': 'mac_toolchain',\n    'pattern': '.',\n    'condition': 'checkout_mac',\n    'action': ['python3', 'build/mac_toolchain.py'],\n  },\n  {\n    # Update LASTCHANGE.\n    'name': 'lastchange',\n    'pattern': '.',\n    'action': ['python3', 'build/util/lastchange.py',\n               '-o', 'build/util/LASTCHANGE'],\n  },\n  {\n    'name': 'Download Fuchsia SDK from GCS',\n    'pattern': '.',\n    'condition': 'checkout_fuchsia',\n    'action': [\n      'python3',\n      'build/fuchsia/update_sdk.py',\n      '--cipd-prefix={fuchsia_sdk_cipd_prefix}',\n      '--version={fuchsia_version}',\n    ],\n  },\n  {\n    'name': 'Download Fuchsia system images',\n    'pattern': '.',\n    'condition': 'checkout_fuchsia and checkout_fuchsia_product_bundles',\n    'action': [\n      'python3',\n      'build/fuchsia/update_product_bundles.py',\n      '{checkout_fuchsia_boot_images}',\n    ],\n  },\n  {\n    # Mac does not have llvm-objdump, download it for cross builds in Fuchsia.\n    'name': 'llvm-objdump',\n    'pattern': '.',\n    'condition': 'host_os == \"mac\" and checkout_fuchsia',\n    'action': ['python3', 'tools/clang/scripts/update.py',\n               '--package=objdump'],\n  },\n  {\n    'name': 'vpython3_common',\n    'pattern': '.',\n    'action': [ 'vpython3',\n                '-vpython-spec', '.vpython3',\n                '-vpython-tool', 'install',\n    ],\n  },\n  {\n    'name': 'check_v8_header_includes',\n    'pattern': '.',\n    'condition': 'check_v8_header_includes',\n    'action': [\n      'python3',\n      'tools/generate-header-include-checks.py',\n    ],\n  },\n  {\n    'name': 'checkout_v8_builtins_pgo_profiles',\n    'pattern': '.',\n    'condition': 'checkout_v8_builtins_pgo_profiles',\n    'action': [\n      'python3',\n      'tools/builtins-pgo/download_profiles.py',\n      'download',\n      '--quiet',\n    ],\n  },\n  # Configure remote exec cfg files\n  {\n    'name': 'download_and_configure_reclient_cfgs',\n    'pattern': '.',\n    'condition': 'download_remoteexec_cfg and not build_with_chromium',\n    'action': ['python3',\n               'buildtools/reclient_cfgs/configure_reclient_cfgs.py',\n               '--rbe_instance',\n               Var('rbe_instance'),\n               '--reproxy_cfg_template',\n               'reproxy.cfg.template',\n               '--rewrapper_cfg_project',\n               Var('rewrapper_cfg_project'),\n               '--quiet',\n               ],\n  },\n  {\n    'name': 'configure_reclient_cfgs',\n    'pattern': '.',\n    'condition': 'not download_remoteexec_cfg and not build_with_chromium',\n    'action': ['python3',\n               'buildtools/reclient_cfgs/configure_reclient_cfgs.py',\n               '--rbe_instance',\n               Var('rbe_instance'),\n               '--reproxy_cfg_template',\n               'reproxy.cfg.template',\n               '--rewrapper_cfg_project',\n               Var('rewrapper_cfg_project'),\n               '--skip_remoteexec_cfg_fetch',\n               ],\n  },\n  # Configure Siso for developer builds.\n  {\n    'name': 'configure_siso',\n    'pattern': '.',\n    'condition': 'not build_with_chromium',\n    'action': ['python3',\n               'build/config/siso/configure_siso.py',\n               '--rbe_instance',\n               Var('rbe_instance'),\n               ],\n  },\n]\n\nrecursedeps = [\n  'build',\n  'buildtools',\n  'third_party/instrumented_libs',\n]\n"
        },
        {
          "name": "DIR_METADATA",
          "type": "blob",
          "size": 0.478515625,
          "content": "# Metadata information for this directory.\n#\n# For more information on DIR_METADATA files, see:\n#   https://source.chromium.org/chromium/infra/infra/+/master:go/src/infra/tools/dirmd/README.md\n#\n# For the schema of this file, see Metadata message:\n#   https://source.chromium.org/chromium/infra/infra/+/master:go/src/infra/tools/dirmd/proto/dir_metadata.proto\n\nmonorail {\n  component: \"Blink>JavaScript\"\n}\nteam_email: \"v8-dev@googlegroups.com\"\nbuganizer_public: {\n  component_id: 1456824\n}\n"
        },
        {
          "name": "ENG_REVIEW_OWNERS",
          "type": "blob",
          "size": 0.3310546875,
          "content": "# Eng reviewers. This is to define an escalation path for potential\n# disagreement among owners. Please consult before adding top-level\n# directories.\n\nadamk@chromium.org\ngdeepti@chromium.org\nhpayer@chromium.org #{LAST_RESORT_SUGGESTION}\nleszeks@chromium.org\nmlippautz@chromium.org\nsyg@chromium.org\nverwaest@chromium.org\nvahl@chromium.org\n"
        },
        {
          "name": "INFRA_OWNERS",
          "type": "blob",
          "size": 0.0927734375,
          "content": "alexschulze@chromium.org\nalmuthanna@chromium.org\nliviurau@chromium.org\nmachenbach@chromium.org\n"
        },
        {
          "name": "INTL_OWNERS",
          "type": "blob",
          "size": 0.0712890625,
          "content": "cira@chromium.org\nmnita@google.com\njshin@chromium.org\nftang@chromium.org\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 3.0205078125,
          "content": "This license applies to all parts of V8 that are not externally\nmaintained libraries.  The externally maintained libraries used by V8\nare:\n\n  - PCRE test suite, located in\n    test/mjsunit/third_party/regexp-pcre/regexp-pcre.js.  This is based on the\n    test suite from PCRE-7.3, which is copyrighted by the University\n    of Cambridge and Google, Inc.  The copyright notice and license\n    are embedded in regexp-pcre.js.\n\n  - Layout tests, located in test/mjsunit/third_party/object-keys.  These are\n    based on layout tests from webkit.org which are copyrighted by\n    Apple Computer, Inc. and released under a 3-clause BSD license.\n\n  - Strongtalk assembler, the basis of the files assembler-arm-inl.h,\n    assembler-arm.cc, assembler-arm.h, assembler-ia32-inl.h,\n    assembler-ia32.cc, assembler-ia32.h, assembler-x64-inl.h,\n    assembler-x64.cc, assembler-x64.h, assembler.cc and assembler.h.\n    This code is copyrighted by Sun Microsystems Inc. and released\n    under a 3-clause BSD license.\n\n  - Valgrind client API header, located at third_party/valgrind/valgrind.h\n    This is released under the BSD license.\n\n  - The Wasm C/C++ API headers, located at third_party/wasm-api/wasm.{h,hh}\n    This is released under the Apache license. The API's upstream prototype\n    implementation also formed the basis of V8's implementation in\n    src/wasm/c-api.cc.\n\nThese libraries have their own licenses; we recommend you read them,\nas their terms may differ from the terms below.\n\nFurther license information can be found in LICENSE files located in\nsub-directories.\n\nCopyright 2014, the V8 project authors. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of Google Inc. nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "LICENSE.fdlibm",
          "type": "blob",
          "size": 0.244140625,
          "content": "Copyright (C) 1993-2004 by Sun Microsystems, Inc. All rights reserved.\n\nDeveloped at SunSoft, a Sun Microsystems, Inc. business.\nPermission to use, copy, modify, and distribute this\nsoftware is freely granted, provided that this notice\nis preserved.\n"
        },
        {
          "name": "LICENSE.strongtalk",
          "type": "blob",
          "size": 1.447265625,
          "content": "Copyright (c) 1994-2006 Sun Microsystems Inc.\nAll Rights Reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n- Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n- Redistribution in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of Sun Microsystems or the names of contributors may\nbe used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "LICENSE.v8",
          "type": "blob",
          "size": 1.4912109375,
          "content": "Copyright 2006-2011, the V8 project authors. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of Google Inc. nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "LOONG_OWNERS",
          "type": "blob",
          "size": 0.0654296875,
          "content": "liuyu@loongson.cn\nyuyin-hf@loongson.cn\nzhaojiazhong-hf@loongson.cn\n"
        },
        {
          "name": "MIPS_OWNERS",
          "type": "blob",
          "size": 0.0625,
          "content": "xwafish@gmail.com\nzhaojiazhong-hf@loongson.cn\nliuyu@loongson.cn\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 1.0703125,
          "content": "# Eng reviewer. Please reach out before adding new top-level directories.\n# Disagreement among owners should be escalated to eng reviewers.\nfile:ENG_REVIEW_OWNERS\n\nper-file .*=file:INFRA_OWNERS\nper-file .bazelrc=file:COMMON_OWNERS\nper-file .mailmap=file:COMMON_OWNERS\nper-file .ycm_extra_conf.py=file:COMMON_OWNERS\nper-file codereview.settings=file:INFRA_OWNERS\nper-file AUTHORS=file:COMMON_OWNERS\nper-file BUILD.bazel=file:COMMON_OWNERS\nper-file BUILD.gn=file:COMMON_OWNERS\nper-file DEPS=file:COMMON_OWNERS\nper-file INFRA_OWNERS=file:INFRA_OWNERS\nper-file PRESUBMIT.py=file:INFRA_OWNERS\nper-file WATCHLISTS=file:COMMON_OWNERS\nper-file WORKSPACE=file:COMMON_OWNERS\n\n# Needed by the auto_tag builder\nper-file WATCHLISTS=v8-ci-autoroll-builder@chops-service-accounts.iam.gserviceaccount.com\nper-file DEPS=v8-ci-autoroll-builder@chops-service-accounts.iam.gserviceaccount.com\n\nper-file ...-loong64*=file:LOONG_OWNERS\nper-file ...-mips*=file:MIPS_OWNERS\nper-file ...-mips64*=file:MIPS_OWNERS\nper-file ...-ppc*=file:PPC_OWNERS\nper-file ...-riscv*=file:RISCV_OWNERS\nper-file ...-s390*=file:S390_OWNERS\n"
        },
        {
          "name": "PPC_OWNERS",
          "type": "blob",
          "size": 0.076171875,
          "content": "junyan@redhat.com\njoransiu@ca.ibm.com\nmidawson@redhat.com\nmfarazma@redhat.com\n"
        },
        {
          "name": "PRESUBMIT.py",
          "type": "blob",
          "size": 21.4970703125,
          "content": "# Copyright 2012 the V8 project authors. All rights reserved.\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are\n# met:\n#\n#     * Redistributions of source code must retain the above copyright\n#       notice, this list of conditions and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above\n#       copyright notice, this list of conditions and the following\n#       disclaimer in the documentation and/or other materials provided\n#       with the distribution.\n#     * Neither the name of Google Inc. nor the names of its\n#       contributors may be used to endorse or promote products derived\n#       from this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\"\"\"Top-level presubmit script for V8.\n\nSee http://dev.chromium.org/developers/how-tos/depottools/presubmit-scripts\nfor more details about the presubmit API built into gcl.\n\"\"\"\n\nimport ast\nimport json\nimport os\nimport re\nimport sys\nimport traceback\n\n# This line is 'magic' in that git-cl looks for it to decide whether to\n# use Python3 instead of Python2 when running the code in this file.\nUSE_PYTHON3 = True\n\n_EXCLUDED_PATHS = (\n    r\"^test[\\\\\\/].*\",\n    r\"^testing[\\\\\\/].*\",\n    r\"^third_party[\\\\\\/].*\",\n    r\"^tools[\\\\\\/].*\",\n)\n\n_LICENSE_FILE = (\n    r\"LICENSE\"\n)\n\n# Regular expression that matches code which should not be run through cpplint.\n_NO_LINT_PATHS = (\n    r'src[\\\\\\/]base[\\\\\\/]export-template\\.h',\n)\n\n\n# Regular expression that matches code only used for test binaries\n# (best effort).\n_TEST_CODE_EXCLUDED_PATHS = (\n    r'.+-unittest\\.cc',\n    # Has a method VisitForTest().\n    r'src[\\\\\\/]compiler[\\\\\\/]ast-graph-builder\\.cc',\n    # Test extension.\n    r'src[\\\\\\/]extensions[\\\\\\/]gc-extension\\.cc',\n    # Runtime functions used for testing.\n    r'src[\\\\\\/]runtime[\\\\\\/]runtime-test\\.cc',\n    # Testing helpers.\n    r'src[\\\\\\/]heap[\\\\\\/]cppgc[\\\\\\/]testing\\.cc',\n)\n\n\n_TEST_ONLY_WARNING = (\n    'You might be calling functions intended only for testing from\\n'\n    'production code.  It is OK to ignore this warning if you know what\\n'\n    'you are doing, as the heuristics used to detect the situation are\\n'\n    'not perfect.  The commit queue will not block on this warning.')\n\n\ndef _V8PresubmitChecks(input_api, output_api):\n  \"\"\"Runs the V8 presubmit checks.\"\"\"\n  import sys\n  sys.path.append(input_api.os_path.join(\n        input_api.PresubmitLocalPath(), 'tools'))\n  from v8_presubmit import CppLintProcessor\n  from v8_presubmit import GCMoleProcessor\n  from v8_presubmit import JSLintProcessor\n  from v8_presubmit import TorqueLintProcessor\n  from v8_presubmit import SourceProcessor\n  from v8_presubmit import StatusFilesProcessor\n\n  def FilterFile(affected_file):\n    return input_api.FilterSourceFile(\n      affected_file,\n      files_to_check=None,\n      files_to_skip=_NO_LINT_PATHS)\n\n  def FilterTorqueFile(affected_file):\n    return input_api.FilterSourceFile(\n      affected_file,\n      files_to_check=(r'.+\\.tq'))\n\n  def FilterJSFile(affected_file):\n    return input_api.FilterSourceFile(\n      affected_file,\n      files_to_check=(r'.+\\.m?js'))\n\n  results = []\n  if not CppLintProcessor().RunOnFiles(\n      input_api.AffectedFiles(file_filter=FilterFile, include_deletes=False)):\n    results.append(output_api.PresubmitError(\"C++ lint check failed\"))\n  if not TorqueLintProcessor().RunOnFiles(\n      input_api.AffectedFiles(file_filter=FilterTorqueFile,\n                              include_deletes=False)):\n    results.append(output_api.PresubmitError(\"Torque format check failed\"))\n  if not JSLintProcessor().RunOnFiles(\n      input_api.AffectedFiles(file_filter=FilterJSFile,\n                              include_deletes=False)):\n    results.append(output_api.PresubmitError(\"JS format check failed\"))\n  if not SourceProcessor().RunOnFiles(\n      input_api.AffectedFiles(include_deletes=False)):\n    results.append(output_api.PresubmitError(\n        \"Copyright header, trailing whitespaces and two empty lines \" \\\n        \"between declarations check failed\"))\n  if not StatusFilesProcessor().RunOnFiles(\n      input_api.AffectedFiles(include_deletes=True)):\n    results.append(output_api.PresubmitError(\"Status file check failed\"))\n  if not GCMoleProcessor().RunOnFiles(\n      input_api.AffectedFiles(include_deletes=False)):\n    results.append(output_api.PresubmitError(\"GCMole pattern check failed\"))\n  results.extend(input_api.canned_checks.CheckAuthorizedAuthor(\n      input_api, output_api, bot_allowlist=[\n        'v8-ci-autoroll-builder@chops-service-accounts.iam.gserviceaccount.com',\n        'v8-ci-test262-import-export@chops-service-accounts.iam.gserviceaccount.com',\n      ]))\n  return results\n\n\ndef _CheckPythonLiterals(input_api, output_api):\n  \"\"\"Checks that all .pyl files are valid python literals.\"\"\"\n  affected_files = [\n      af for af in input_api.AffectedFiles()\n      if af.LocalPath().endswith('.pyl')\n  ]\n\n  results = []\n  for af in affected_files:\n    try:\n      ast.literal_eval('\\n'.join(af.NewContents()))\n    except SyntaxError as e:\n      results.append(output_api.PresubmitError(\n          f'Failed to parse python literal {af.LocalPath()}:\\n' +\n          traceback.format_exc(0)\n      ))\n\n  return results\n\n\n\ndef _CheckUnwantedDependencies(input_api, output_api):\n  \"\"\"Runs checkdeps on #include statements added in this\n  change. Breaking - rules is an error, breaking ! rules is a\n  warning.\n  \"\"\"\n  # We need to wait until we have an input_api object and use this\n  # roundabout construct to import checkdeps because this file is\n  # eval-ed and thus doesn't have __file__.\n  original_sys_path = sys.path\n  try:\n    sys.path = sys.path + [input_api.os_path.join(\n        input_api.PresubmitLocalPath(), 'buildtools', 'checkdeps')]\n    import checkdeps\n    from cpp_checker import CppChecker\n    from rules import Rule\n  finally:\n    # Restore sys.path to what it was before.\n    sys.path = original_sys_path\n\n  def _FilesImpactedByDepsChange(files):\n    all_files = [f.AbsoluteLocalPath() for f in files]\n    deps_files = [p for p in all_files if IsDepsFile(p)]\n    impacted_files = union([_CollectImpactedFiles(path) for path in deps_files])\n    impacted_file_objs = [ImpactedFile(path) for path in impacted_files]\n    return impacted_file_objs\n\n  def IsDepsFile(p):\n    return os.path.isfile(p) and os.path.basename(p) == 'DEPS'\n\n  def union(list_of_lists):\n    \"\"\"Ensure no duplicates\"\"\"\n    return set(sum(list_of_lists, []))\n\n  def _CollectImpactedFiles(deps_file):\n    # TODO(liviurau): Do not walk paths twice. Then we have no duplicates.\n    # Higher level DEPS changes may dominate lower level DEPS changes.\n    # TODO(liviurau): Check if DEPS changed in the right way.\n    # 'include_rules' impact c++ files but 'vars' or 'deps' do not.\n    # Maybe we just eval both old and new DEPS content and check\n    # if the list are the same.\n    result = []\n    parent_dir = os.path.dirname(deps_file)\n    for relative_f in input_api.change.AllFiles(parent_dir):\n      abs_f = os.path.join(parent_dir, relative_f)\n      if CppChecker.IsCppFile(abs_f):\n        result.append(abs_f)\n    return result\n\n  class ImpactedFile(object):\n    \"\"\"Duck type version of AffectedFile needed to check files under directories\n    where a DEPS file changed. Extend the interface along the line of\n    AffectedFile if you need it for other checks.\"\"\"\n\n    def __init__(self, path):\n      self._path = path\n\n    def LocalPath(self):\n      path = self._path.replace(os.sep, '/')\n      return os.path.normpath(path)\n\n    def ChangedContents(self):\n      with open(self._path) as f:\n        # TODO(liviurau): read only '#include' lines\n        lines = f.readlines()\n      return enumerate(lines, start=1)\n\n  def _FilterDuplicates(impacted_files, affected_files):\n    \"\"\"\"We include all impacted files but exclude affected files that are also\n    impacted. Files impacted by DEPS changes take precedence before files\n    affected by direct changes.\"\"\"\n    result = impacted_files[:]\n    only_paths = set([imf.LocalPath() for imf in impacted_files])\n    for af in affected_files:\n      if not af.LocalPath() in only_paths:\n        result.append(af)\n    return result\n\n  added_includes = []\n  affected_files = input_api.AffectedFiles()\n  impacted_by_deps = _FilesImpactedByDepsChange(affected_files)\n  for f in _FilterDuplicates(impacted_by_deps, affected_files):\n    if not CppChecker.IsCppFile(f.LocalPath()):\n      continue\n\n    changed_lines = [line for line_num, line in f.ChangedContents()]\n    added_includes.append([f.LocalPath(), changed_lines])\n\n  deps_checker = checkdeps.DepsChecker(input_api.PresubmitLocalPath())\n\n  error_descriptions = []\n  warning_descriptions = []\n  for path, rule_type, rule_description in deps_checker.CheckAddedCppIncludes(\n      added_includes):\n    description_with_path = '{}\\n    {}'.format(path, rule_description)\n    if rule_type == Rule.DISALLOW:\n      error_descriptions.append(description_with_path)\n    else:\n      warning_descriptions.append(description_with_path)\n\n  results = []\n  if error_descriptions:\n    results.append(output_api.PresubmitError(\n        'You added one or more #includes that violate checkdeps rules.',\n        error_descriptions))\n  if warning_descriptions:\n    results.append(output_api.PresubmitPromptOrNotify(\n        'You added one or more #includes of files that are temporarily\\n'\n        'allowed but being removed. Can you avoid introducing the\\n'\n        '#include? See relevant DEPS file(s) for details and contacts.',\n        warning_descriptions))\n  return results\n\n\ndef _CheckHeadersHaveIncludeGuards(input_api, output_api):\n  \"\"\"Ensures that all header files have include guards.\"\"\"\n  file_inclusion_pattern = r'src/.+\\.h'\n\n  def FilterFile(affected_file):\n    files_to_skip = _EXCLUDED_PATHS + input_api.DEFAULT_FILES_TO_SKIP\n    return input_api.FilterSourceFile(\n      affected_file,\n      files_to_check=(file_inclusion_pattern, ),\n      files_to_skip=files_to_skip)\n\n  leading_src_pattern = input_api.re.compile(r'^src[\\\\\\/]')\n  dash_dot_slash_pattern = input_api.re.compile(r'[-.\\\\\\/]')\n\n  def PathToGuardMacro(path):\n    \"\"\"Guards should be of the form V8_PATH_TO_FILE_WITHOUT_SRC_H_.\"\"\"\n    x = input_api.re.sub(leading_src_pattern, 'v8_', path)\n    x = input_api.re.sub(dash_dot_slash_pattern, '_', x)\n    x = x.upper() + \"_\"\n    return x\n\n  problems = []\n  for f in input_api.AffectedSourceFiles(FilterFile):\n    local_path = f.LocalPath()\n    guard_macro = PathToGuardMacro(local_path)\n    guard_patterns = [\n            input_api.re.compile(r'^#ifndef ' + guard_macro + '$'),\n            input_api.re.compile(r'^#define ' + guard_macro + '$'),\n            input_api.re.compile(r'^#endif  // ' + guard_macro + '$')]\n    skip_check_pattern = input_api.re.compile(\n            r'^// PRESUBMIT_INTENTIONALLY_MISSING_INCLUDE_GUARD')\n    found_patterns = [ False, False, False ]\n    file_omitted = False\n\n    for line in f.NewContents():\n      for i in range(len(guard_patterns)):\n        if guard_patterns[i].match(line):\n          found_patterns[i] = True\n      if skip_check_pattern.match(line):\n        file_omitted = True\n        break\n\n    if not file_omitted and not all(found_patterns):\n      problems.append('{}: Missing include guard \\'{}\\''.format(\n          local_path, guard_macro))\n\n  if problems:\n    return [output_api.PresubmitError(\n        'You added one or more header files without an appropriate\\n'\n        'include guard. Add the include guard {#ifndef,#define,#endif}\\n'\n        'triplet or omit the check entirely through the magic comment:\\n'\n        '\"// PRESUBMIT_INTENTIONALLY_MISSING_INCLUDE_GUARD\".', problems)]\n  else:\n    return []\n\n\ndef _CheckNoInlineHeaderIncludesInNormalHeaders(input_api, output_api):\n  \"\"\"Attempts to prevent inclusion of inline headers into normal header\n  files. This tries to establish a layering where inline headers can be\n  included by other inline headers or compilation units only.\"\"\"\n  file_inclusion_pattern = r'(?!.+-inl\\.h).+\\.h'\n  include_directive_pattern = input_api.re.compile(r'#include \".+-inl.h\"')\n  include_error = (\n    'You are including an inline header (e.g. foo-inl.h) within a normal\\n'\n    'header (e.g. bar.h) file.  This violates layering of dependencies.')\n\n  def FilterFile(affected_file):\n    files_to_skip = _EXCLUDED_PATHS + input_api.DEFAULT_FILES_TO_SKIP\n    return input_api.FilterSourceFile(\n      affected_file,\n      files_to_check=(file_inclusion_pattern, ),\n      files_to_skip=files_to_skip)\n\n  problems = []\n  for f in input_api.AffectedSourceFiles(FilterFile):\n    local_path = f.LocalPath()\n    for line_number, line in f.ChangedContents():\n      if (include_directive_pattern.search(line)):\n        problems.append('{}:{}\\n    {}'.format(local_path, line_number,\n                                               line.strip()))\n\n  if problems:\n    return [output_api.PresubmitError(include_error, problems)]\n  else:\n    return []\n\n\ndef _CheckNoProductionCodeUsingTestOnlyFunctions(input_api, output_api):\n  \"\"\"Attempts to prevent use of functions intended only for testing in\n  non-testing code. For now this is just a best-effort implementation\n  that ignores header files and may have some false positives. A\n  better implementation would probably need a proper C++ parser.\n  \"\"\"\n  # We only scan .cc files, as the declaration of for-testing functions in\n  # header files are hard to distinguish from calls to such functions without a\n  # proper C++ parser.\n  file_inclusion_pattern = r'.+\\.cc'\n\n  base_function_pattern = r'[ :]test::[^\\s]+|ForTest(ing)?|for_test(ing)?'\n  inclusion_pattern = input_api.re.compile(\n      r'({})\\s*\\('.format(base_function_pattern))\n  comment_pattern = input_api.re.compile(\n      r'//.*({})'.format(base_function_pattern))\n  exclusion_pattern = input_api.re.compile(\n      r'::[A-Za-z0-9_]+({})|({})[^;]+'.format(base_function_pattern,\n                                              base_function_pattern) + '\\{')\n\n  def FilterFile(affected_file):\n    files_to_skip = (_EXCLUDED_PATHS +\n                     _TEST_CODE_EXCLUDED_PATHS +\n                     input_api.DEFAULT_FILES_TO_SKIP)\n    return input_api.FilterSourceFile(\n      affected_file,\n      files_to_check=(file_inclusion_pattern, ),\n      files_to_skip=files_to_skip)\n\n  problems = []\n  for f in input_api.AffectedSourceFiles(FilterFile):\n    local_path = f.LocalPath()\n    for line_number, line in f.ChangedContents():\n      if (inclusion_pattern.search(line) and\n          not comment_pattern.search(line) and\n          not exclusion_pattern.search(line)):\n        problems.append('{}:{}\\n    {}'.format(local_path, line_number,\n                                               line.strip()))\n\n  if problems:\n    return [output_api.PresubmitPromptOrNotify(_TEST_ONLY_WARNING, problems)]\n  else:\n    return []\n\n\ndef _CheckGenderNeutralInLicenses(input_api, output_api):\n  # License files are taken as is, even if they include gendered pronouns.\n  def LicenseFilter(path):\n    input_api.FilterSourceFile(path, files_to_skip=_LICENSE_FILE)\n\n  return input_api.canned_checks.CheckGenderNeutral(\n    input_api, output_api, source_file_filter=LicenseFilter)\n\n\ndef _RunTestsWithVPythonSpec(input_api, output_api):\n  return input_api.RunTests(\n    input_api.canned_checks.CheckVPythonSpec(input_api, output_api))\n\n\ndef _CommonChecks(input_api, output_api):\n  \"\"\"Checks common to both upload and commit.\"\"\"\n  # TODO(machenbach): Replace some of those checks, e.g. owners and copyright,\n  # with the canned PanProjectChecks. Need to make sure that the checks all\n  # pass on all existing files.\n  checks = [\n    input_api.canned_checks.CheckOwnersFormat,\n    input_api.canned_checks.CheckOwners,\n    _CheckCommitMessageBugEntry,\n    input_api.canned_checks.CheckPatchFormatted,\n    _CheckGenderNeutralInLicenses,\n    _V8PresubmitChecks,\n    _CheckUnwantedDependencies,\n    _CheckNoProductionCodeUsingTestOnlyFunctions,\n    _CheckHeadersHaveIncludeGuards,\n    _CheckNoInlineHeaderIncludesInNormalHeaders,\n    _CheckJSONFiles,\n    _CheckNoexceptAnnotations,\n    _RunTestsWithVPythonSpec,\n    _CheckPythonLiterals,\n  ]\n\n  return sum([check(input_api, output_api) for check in checks], [])\n\n\ndef _SkipTreeCheck(input_api, output_api):\n  \"\"\"Check the env var whether we want to skip tree check.\n     Only skip if include/v8-version.h has been updated.\"\"\"\n  src_version = 'include/v8-version.h'\n  if not input_api.AffectedSourceFiles(\n      lambda file: file.LocalPath() == src_version):\n    return False\n  return input_api.environ.get('PRESUBMIT_TREE_CHECK') == 'skip'\n\n\ndef _CheckCommitMessageBugEntry(input_api, output_api):\n  \"\"\"Check that bug entries are well-formed in commit message.\"\"\"\n  bogus_bug_msg = (\n      'Bogus BUG entry: {}. Please specify prefix:number for v8 or chromium '\n      '(e.g. chromium:12345) or b/number for buganizer.')\n  results = []\n  for bug in (input_api.change.BUG or '').split(','):\n    bug = bug.strip()\n    if 'none'.startswith(bug.lower()):\n      continue\n    if ':' not in bug and not bug.startswith('b/'):\n      try:\n        if int(bug) < 10000000:\n          if int(bug) > 200000:\n            prefix_guess = 'chromium'\n          else:\n            prefix_guess = 'v8'\n          results.append(\n              'BUG entry requires issue tracker prefix, e.g. {}:{}'.format(\n                  prefix_guess, bug))\n      except ValueError:\n        results.append(bogus_bug_msg.format(bug))\n    elif not re.match(r'\\w+[:\\/]\\d+', bug):\n      results.append(bogus_bug_msg.format(bug))\n  return [output_api.PresubmitError(r) for r in results]\n\n\ndef _CheckJSONFiles(input_api, output_api):\n  def FilterFile(affected_file):\n    return input_api.FilterSourceFile(\n        affected_file,\n        files_to_check=(r'.+\\.json',))\n\n  results = []\n  for f in input_api.AffectedFiles(\n      file_filter=FilterFile, include_deletes=False):\n    with open(f.LocalPath()) as j:\n      try:\n        json.load(j)\n      except Exception as e:\n        results.append('JSON validation failed for {}. Error:\\n{}'.format(\n            f.LocalPath(), e))\n\n  return [output_api.PresubmitError(r) for r in results]\n\n\ndef _CheckNoexceptAnnotations(input_api, output_api):\n  \"\"\"\n  Checks that all user-defined constructors and assignment operators are marked\n  V8_NOEXCEPT.\n\n  This is required for standard containers to pick the right constructors. Our\n  macros (like MOVE_ONLY_WITH_DEFAULT_CONSTRUCTORS) add this automatically.\n  Omitting it at some places can result in weird compiler errors if this is\n  mixed with other classes that have the annotation.\n\n  TODO(clemensb): This check should eventually be enabled for all files via\n  tools/presubmit.py (https://crbug.com/v8/8616).\n  \"\"\"\n\n  def FilterFile(affected_file):\n    files_to_skip = _EXCLUDED_PATHS + (\n        # Skip api.cc since we cannot easily add the 'noexcept' annotation to\n        # public methods.\n        r'src[\\\\\\/]api[\\\\\\/]api\\.cc',\n        # Skip src/bigint/ because it's meant to be V8-independent.\n        r'src[\\\\\\/]bigint[\\\\\\/].*',\n    )\n    return input_api.FilterSourceFile(\n        affected_file,\n        files_to_check=(r'src[\\\\\\/].*\\.cc', r'src[\\\\\\/].*\\.h',\n                        r'test[\\\\\\/].*\\.cc', r'test[\\\\\\/].*\\.h'),\n        files_to_skip=files_to_skip)\n\n  # matches any class name.\n  class_name = r'\\b([A-Z][A-Za-z0-9_:]*)(?:::\\1)?'\n  # initial class name is potentially followed by this to declare an assignment\n  # operator.\n  potential_assignment = r'(?:&\\s+(?:\\1::)?operator=)?\\s*'\n  # matches an argument list that contains only a reference to a class named\n  # like the first capture group, potentially const.\n  single_class_ref_arg = r'\\(\\s*(?:const\\s+)?\\1(?:::\\1)?&&?[^,;)]*\\)'\n  # matches anything but a sequence of whitespaces followed by either\n  # V8_NOEXCEPT or \"= delete\".\n  not_followed_by_noexcept = r'(?!\\s+(?:V8_NOEXCEPT|=\\s+delete)\\b)'\n  full_pattern = r'^.*?' + class_name + potential_assignment + \\\n      single_class_ref_arg + not_followed_by_noexcept + '.*?$'\n  regexp = input_api.re.compile(full_pattern, re.MULTILINE)\n\n  errors = []\n  for f in input_api.AffectedFiles(file_filter=FilterFile,\n                                   include_deletes=False):\n    with open(f.LocalPath()) as fh:\n      for match in re.finditer(regexp, fh.read()):\n        errors.append(f'in {f.LocalPath()}: {match.group().strip()}')\n\n  if errors:\n    return [output_api.PresubmitPromptOrNotify(\n        'Copy constructors, move constructors, copy assignment operators and '\n        'move assignment operators should be marked V8_NOEXCEPT.\\n'\n        'Please report false positives on https://crbug.com/v8/8616.',\n        errors)]\n  return []\n\n\ndef CheckChangeOnUpload(input_api, output_api):\n  results = []\n  results.extend(_CommonChecks(input_api, output_api))\n  return results\n\n\ndef CheckChangeOnCommit(input_api, output_api):\n  results = []\n  results.extend(_CommonChecks(input_api, output_api))\n  results.extend(input_api.canned_checks.CheckChangeHasDescription(\n      input_api, output_api))\n  if not _SkipTreeCheck(input_api, output_api):\n    results.extend(input_api.canned_checks.CheckTreeIsOpen(\n        input_api, output_api,\n        json_url='http://v8-status.appspot.com/current?format=json'))\n  return results\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.94140625,
          "content": "V8 JavaScript Engine\n=============\n\nV8 is Google's open source JavaScript engine.\n\nV8 implements ECMAScript as specified in ECMA-262.\n\nV8 is written in C++ and is used in Google Chrome, the open source\nbrowser from Google.\n\nV8 can run standalone, or can be embedded into any C++ application.\n\nV8 Project page: https://v8.dev/docs\n\n\nGetting the Code\n=============\n\nCheckout [depot tools](http://www.chromium.org/developers/how-tos/install-depot-tools), and run\n\n        fetch v8\n\nThis will checkout V8 into the directory `v8` and fetch all of its dependencies.\nTo stay up to date, run\n\n        git pull origin\n        gclient sync\n\nFor fetching all branches, add the following into your remote\nconfiguration in `.git/config`:\n\n        fetch = +refs/branch-heads/*:refs/remotes/branch-heads/*\n        fetch = +refs/tags/*:refs/tags/*\n\n\nContributing\n=============\n\nPlease follow the instructions mentioned at\n[v8.dev/docs/contribute](https://v8.dev/docs/contribute).\n"
        },
        {
          "name": "RISCV_OWNERS",
          "type": "blob",
          "size": 0.0791015625,
          "content": "brice.dobry@futurewei.com\npeng.w@rioslab.org\nqiuji@iscas.ac.cn\nyahan@iscas.ac.cn\n"
        },
        {
          "name": "S390_OWNERS",
          "type": "blob",
          "size": 0.076171875,
          "content": "junyan@redhat.com\njoransiu@ca.ibm.com\nmidawson@redhat.com\nmfarazma@redhat.com\n"
        },
        {
          "name": "WATCHLISTS",
          "type": "blob",
          "size": 5.2421875,
          "content": "# Copyright 2013 the V8 project authors. All rights reserved.\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are\n# met:\n#\n#     * Redistributions of source code must retain the above copyright\n#       notice, this list of conditions and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above\n#       copyright notice, this list of conditions and the following\n#       disclaimer in the documentation and/or other materials provided\n#       with the distribution.\n#     * Neither the name of Google Inc. nor the names of its\n#       contributors may be used to endorse or promote products derived\n#       from this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Watchlist Rules\n# Refer: http://dev.chromium.org/developers/contributing-code/watchlists\n\n# IMPORTANT: The regular expression filepath is tested against each path using\n# re.search, so it is not usually necessary to add .*.\n\n{\n  'WATCHLIST_DEFINITIONS': {\n    'api': {\n      'filepath': 'include/',\n    },\n    'snapshot': {\n      'filepath': 'src/snapshot/',\n    },\n    'devtools': {\n      'filepath': 'src/debug/' \\\n                  '|src/inspector/' \\\n                  '|src/profiler/' \\\n                  '|src/libsampler/' \\\n                  '|src/tracing/' \\\n                  '|include/js_protocol.pdl' \\\n                  '|include/v8-inspector*\\.h',\n    },\n    'baseline': {\n      'filepath': 'src/baseline/',\n    },\n    'flags': {\n      'filepath': 'src/flags/flag-definitions.h',\n    },\n    'heap_changes': {\n      'filepath': 'src/heap/',\n    },\n    'arm': {\n      'filepath': '/arm/',\n    },\n    'merges': {\n      'filepath': '.',\n    },\n    'wasm': {\n      'filepath': 'src/wasm/' \\\n                  '|src/compiler/wasm',\n    },\n    'value_serializer': {\n      'filepath': 'src/value-serializer',\n    },\n    'maglev': {\n      'filepath': 'src/maglev/',\n    },\n    'compiler': {\n      'filepath': 'src/compiler',\n    },\n    'parser': {\n      'filepath': 'src/ast/' \\\n                  '|src/parsing/',\n    },\n    'tracing': {\n      'filepath': 'src/tracing/',\n    },\n    'ieee754': {\n      'filepath': 'src/base/ieee754\\.(cc|h)' \\\n                  '|src/base/overflowing-math.h' \\\n                  '|LICENSE.fdlibm',\n    },\n    'regexp': {\n      'filepath': 'src/.*regexp',\n    },\n    'bazel': {\n      'filepath': 'BUILD.gn' \\\n                  '|BUILD.bazel' \\\n                  '|WORKSPACE' \\\n                  '|bazel/',\n    },\n    'cppgc': {\n      'filepath': 'src/heap/cppgc/' \\\n                  '|src/heap/cppgc-js/' \\\n                  '|include/cppgc/' \\\n                  '|test/unittests/heap/cppgc/' \\\n                  '|test/unittests/heap/cppgc-js/',\n    },\n    'trap-handler': {\n      'filepath': 'src/trap-handler/',\n    },\n  },\n\n  'WATCHLISTS': {\n    'maglev': [\n      'leszeks+watch@chromium.org',\n      'verwaest+watch@chromium.org',\n      'victorgomes+watch@chromium.org',\n    ],\n    'compiler': [\n      'dmercadier+watch@chromium.org',\n    ],\n    'snapshot': [\n      'jgruber+watch@chromium.org',\n    ],\n    'devtools': [\n      'devtools-reviews+v8@chromium.org',\n    ],\n    'baseline': [\n      'leszeks+watch@chromium.org',\n      'verwaest+watch@chromium.org',\n    ],\n    'flags': [\n      'v8-flag-updates@chromium.org',\n    ],\n    'heap_changes': [\n      'hpayer@chromium.org',\n      'mlippautz+watch@chromium.org',\n    ],\n    'arm': [\n      'v8-mips-ports@googlegroups.com',\n      'v8-ppc-ports@googlegroups.com',\n      'v8-risc-v-ports@chromium.org',\n    ],\n    'merges': [\n      # Only enabled on branches created with tools/release/create_release.py\n      # 'v8-merges@googlegroups.com',\n    ],\n    'wasm': [\n      'wasm-v8@google.com',\n    ],\n    'value_serializer': [\n      'jbroman+watch@chromium.org',\n    ],\n    'parser': [\n      'marja+watch@chromium.org',\n    ],\n    'tracing': [\n      'alph+watch@chromium.org',\n      'lpy+v8tracing@chromium.org',\n      'fmeawad@chromium.org',\n      'cbruni+watch@chromium.org',\n    ],\n    'ieee754': [\n      'rtoy+watch@chromium.org',\n      'hongchan+watch@chromium.org',\n    ],\n    'regexp': [\n      'jgruber+watch@chromium.org',\n      'pthier+watch@chromium.org',\n    ],\n    'bazel': [\n      'victorgomes+watch@chromium.org',\n    ],\n    'api': [\n      'cbruni+watch@chromium.org',\n    ],\n    'cppgc': [\n      'oilpan-reviews+v8@chromium.org',\n    ],\n    'trap-handler': [\n      'ahaas@chromium.org',\n      'clemensb@chromium.org',\n      'mark@chromium.org',\n      'mseaborn@chromium.org',\n    ],\n  },\n}\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 2.3203125,
          "content": "# Copyright 2021 the V8 project authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n\nworkspace(name = \"v8\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = \"1c531376ac7e5a180e0237938a2536de0c54d93f5c278634818e0efc952dd56c\",\n    urls = [\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.0.3/bazel-skylib-1.0.3.tar.gz\",\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.0.3/bazel-skylib-1.0.3.tar.gz\",\n    ],\n)\n\nload(\"@bazel_skylib//:workspace.bzl\", \"bazel_skylib_workspace\")\n\nbazel_skylib_workspace()\n\nhttp_archive(\n    name = \"rules_python\",\n    sha256 = \"a30abdfc7126d497a7698c29c46ea9901c6392d6ed315171a6df5ce433aa4502\",\n    strip_prefix = \"rules_python-0.6.0\",\n    url = \"https://github.com/bazelbuild/rules_python/archive/0.6.0.tar.gz\",\n)\n\nload(\"@rules_python//python:pip.bzl\", \"pip_install\")\n\npip_install(\n    name = \"v8_python_deps\",\n    extra_pip_args = [\"--require-hashes\"],\n    requirements = \"//:bazel/requirements.txt\",\n)\n\nlocal_repository(\n  name = \"com_google_absl\",\n  path = \"third_party/abseil-cpp\",\n)\n\nbind(\n    name = \"absl_btree\",\n    actual = \"@com_google_absl//absl/container:btree\"\n)\n\nbind(\n    name = \"absl_flat_hash_map\",\n    actual = \"@com_google_absl//absl/container:flat_hash_map\"\n)\n\nbind(\n    name = \"absl_flat_hash_set\",\n    actual = \"@com_google_absl//absl/container:flat_hash_set\"\n)\n\nbind(\n    name = \"absl_synchronization\",\n    actual = \"@com_google_absl//absl/synchronization\"\n)\n\nlocal_repository(\n  name = \"highway\",\n  path = \"third_party/highway/src\",\n)\n\nbind(\n    name = \"hwy\",\n    actual = \"@highway//:hwy\"\n)\n\nnew_local_repository(\n    name = \"com_googlesource_chromium_icu\",\n    build_file = \":bazel/BUILD.icu\",\n    path = \"third_party/icu\",\n)\n\nbind(\n    name = \"icu\",\n    actual = \"@com_googlesource_chromium_icu//:icu\",\n)\n\nhttp_archive(\n    name = \"intel_ittapi\",\n    add_prefix = \"third_party/ittapi\",\n    build_file = \"@//:bazel/BUILD.ittapi\",\n    sha256 = \"36c42d3f2446ddfaa2d7dfa02dfaa79615933f1a68a72d7e4f1d70de7b56e2c9\",\n    strip_prefix = \"ittapi-3.24.0\",\n    url = \"https://github.com/intel/ittapi/archive/refs/tags/v3.24.0.tar.gz\",\n)\n\nbind(\n    name = \"ittapi\",\n    actual = \"@intel_ittapi//:lib_ittapi\",\n)\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "codereview.settings",
          "type": "blob",
          "size": 0.236328125,
          "content": "PROJECT: v8\nGERRIT_HOST: True\nCODE_REVIEW_SERVER: https://codereview.chromium.org\nCC_LIST: v8-reviews@googlegroups.com\nVIEW_VC: https://chromium.googlesource.com/v8/v8/+/\nSTATUS: http://v8-status.appspot.com/status\nRUN_POST_UPLOAD_HOOK: True\n"
        },
        {
          "name": "custom_deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gni",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyrightconfig.json",
          "type": "blob",
          "size": 0.06640625,
          "content": "{\n  \"include\": [\"tools\"],\n  \"exclude\": [\"tools/gcmole/bootstrap\"]\n}\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}