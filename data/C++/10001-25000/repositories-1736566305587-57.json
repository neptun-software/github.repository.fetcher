{
  "metadata": {
    "timestamp": 1736566305587,
    "page": 57,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RPCS3/rpcs3",
      "stars": 15947,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 4.8974609375,
          "content": "env:\n  CIRRUS_CLONE_DEPTH: 0 # Unshallow clone to obtain proper GIT_VERSION\n  BUILD_REPOSITORY_NAME: $CIRRUS_REPO_FULL_NAME\n  SYSTEM_PULLREQUEST_SOURCEBRANCH: $CIRRUS_BRANCH\n  SYSTEM_PULLREQUEST_PULLREQUESTID: $CIRRUS_PR\n  BUILD_SOURCEVERSION: $CIRRUS_CHANGE_IN_REPO\n  BUILD_SOURCEBRANCHNAME: $CIRRUS_BRANCH\n  RPCS3_TOKEN: ENCRYPTED[100ebb8e3552bf2021d0ef55dccda3e58d27be5b6cab0b0b92843ef490195d3c4edaefa087e4a3b425caa6392300b9b1]\n  QT_VER_MAIN: '6'\n  QT_VER: '6.8.1'\n\n# windows_task:\n#   matrix:\n#     - name: Cirrus Windows\n#       windows_container:\n#         image: cirrusci/windowsservercore:visualstudio2019\n#         cpu: 8\n#         memory: 16G\n#   env:\n#     CIRRUS_SHELL: \"bash\"\n#     COMPILER: msvc\n#     BUILD_ARTIFACTSTAGINGDIRECTORY: ${CIRRUS_WORKING_DIR}\\artifacts\\\n#     QT_VER_MSVC: 'msvc2022'\n#     QT_DATE: '202411221531'\n#     QTDIR: C:\\Qt\\${QT_VER}\\${QT_VER_MSVC}_64\n#     VULKAN_VER: '1.3.268.0'\n#     VULKAN_SDK_SHA: '8459ef49bd06b697115ddd3d97c9aec729e849cd775f5be70897718a9b3b9db5'\n#     VULKAN_SDK: C:\\VulkanSDK\\${VULKAN_VER}\n#     CACHE_DIR: \"./cache\"\n#     UPLOAD_COMMIT_HASH: 7d09e3be30805911226241afbb14f8cdc2eb054e\n#     UPLOAD_REPO_FULL_NAME: \"rpcs3/rpcs3-binaries-win\"\n#   deps_cache:\n#     folder: \"./cache\"\n#   #obj_cache:\n#   #  folder: \"./tmp\"\n#   #obj2_cache:\n#   #  folder: \"./rpcs3/x64\"\n#   setup_script:\n#     - './.ci/get_keys-windows.sh'\n#     - './.ci/setup-windows.sh'\n#   rpcs3_script:\n#     - export PATH=${PATH}:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin\"\n#     - msbuild.exe rpcs3.sln //p:Configuration=Release //m\n#   deploy_script:\n#     - mkdir artifacts\n#     - source './.ci/export-cirrus-vars.sh'\n#     - './.ci/deploy-windows.sh'\n#   artifacts:\n#     name: Artifact\n#     path: \"*.7z*\"\n#   push_script: |\n#     if [ \"$CIRRUS_REPO_OWNER\" = \"RPCS3\" ] && [ -z \"$CIRRUS_PR\" ] && [ \"$CIRRUS_BRANCH\" = \"master\" ]; then\n#       source './.ci/export-cirrus-vars.sh'\n#       './.ci/github-upload.sh'\n#     fi;\n\n# linux_task:\n#   container:\n#     image: rpcs3/rpcs3-ci-focal:1.9\n#     cpu: 4\n#     memory: 16G\n#   env:\n#     BUILD_ARTIFACTSTAGINGDIRECTORY: ${CIRRUS_WORKING_DIR}/artifacts\n#     ARTDIR: ${CIRRUS_WORKING_DIR}/artifacts/\n#     CCACHE_DIR: \"/tmp/ccache_dir\"\n#     CCACHE_MAXSIZE: 300M\n#     CI_HAS_ARTIFACTS: true\n#     UPLOAD_COMMIT_HASH: d812f1254a1157c80fd402f94446310560f54e5f\n#     UPLOAD_REPO_FULL_NAME: \"rpcs3/rpcs3-binaries-linux\"\n#     DEPLOY_APPIMAGE: true\n#     APPDIR: \"./appdir\"\n#     RELEASE_MESSAGE: \"../GitHubReleaseMessage.txt\"\n#   ccache_cache:\n#     folder: \"/tmp/ccache_dir\"\n#   matrix:\n#     - name: Cirrus Linux GCC\n#       env:\n#         COMPILER: gcc\n#       gcc_script:\n#         - mkdir artifacts\n#         - \".ci/build-linux.sh\"\n#     - name: Cirrus Linux Clang\n#       env:\n#         COMPILER: clang\n#       clang_script:\n#         - mkdir artifacts\n#         - \".ci/build-linux.sh\"\n#   artifacts:\n#     name: Artifact\n#     path: \"artifacts/*\"\n#   push_script: |\n#     if [ \"$CIRRUS_REPO_OWNER\" = \"RPCS3\" ] && [ -z \"$CIRRUS_PR\" ] && [ \"$CIRRUS_BRANCH\" = \"master\" ] && [ \"$COMPILER\" = \"gcc\" ]; then\n#       COMM_TAG=$(awk '/version{.*}/ { printf(\"%d.%d.%d\", $5, $6, $7) }' ./rpcs3/rpcs3_version.cpp)\n#       COMM_COUNT=$(git rev-list --count HEAD)\n#       COMM_HASH=$(git rev-parse --short=8 HEAD)\n\n#       export AVVER=\"${COMM_TAG}-${COMM_COUNT}\"\n\n#       .ci/github-upload.sh\n#     fi;\n\nfreebsd_task:\n  matrix:\n    - name: Cirrus FreeBSD\n      freebsd_instance:\n        image_family: freebsd-13-3\n        cpu: 8\n        memory: 8G\n  env:\n    CCACHE_MAXSIZE: 300M # 3x clean build, rounded\n    CCACHE_DIR: /tmp/ccache_dir\n  ccache_cache:\n    folder: /tmp/ccache_dir\n  install_script: \"sh -ex ./.ci/install-freebsd.sh\"\n  script: \"./.ci/build-freebsd.sh\"\n\nlinux_aarch64_task:\n  env:\n    BUILD_ARTIFACTSTAGINGDIRECTORY: ${CIRRUS_WORKING_DIR}/artifacts\n    ARTDIR: ${CIRRUS_WORKING_DIR}/artifacts/\n    CCACHE_DIR: \"/tmp/ccache_dir\"\n    CCACHE_MAXSIZE: 300M\n    CI_HAS_ARTIFACTS: true\n    UPLOAD_COMMIT_HASH: a1d35836e8d45bfc6f63c26f0a3e5d46ef622fe1\n    UPLOAD_REPO_FULL_NAME: \"rpcs3/rpcs3-binaries-linux-arm64\"\n    DEPLOY_APPIMAGE: true\n    APPDIR: \"./appdir\"\n    RELEASE_MESSAGE: \"../GitHubReleaseMessage.txt\"\n    COMPILER: clang\n  ccache_cache:\n    folder: \"/tmp/ccache_dir\"\n  matrix:\n    - name: Cirrus Linux AArch64 Clang\n      arm_container:\n        image: 'docker.io/rpcs3/rpcs3-ci-focal-aarch64:1.0'\n        cpu: 8\n        memory: 8G\n      clang_script:\n        - mkdir artifacts\n        - \"sh -ex ./.ci/build-linux-aarch64.sh\"\n  artifacts:\n    name: Artifact\n    path: \"artifacts/*\"\n  push_script: |\n    if [ \"$CIRRUS_REPO_OWNER\" = \"RPCS3\" ] && [ -z \"$CIRRUS_PR\" ] && [ \"$CIRRUS_BRANCH\" = \"master\" ]; then\n      COMM_TAG=$(awk '/version{.*}/ { printf(\"%d.%d.%d\", $5, $6, $7) }' ./rpcs3/rpcs3_version.cpp)\n      COMM_COUNT=$(git rev-list --count HEAD)\n      COMM_HASH=$(git rev-parse --short=8 HEAD)\n      export AVVER=\"${COMM_TAG}-${COMM_COUNT}\"\n      .ci/github-upload.sh\n    fi;\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.9384765625,
          "content": "﻿Standard: c++20\nUseTab: AlignWithSpaces\nTabWidth: 4\nIndentWidth: 4\nAccessModifierOffset: -4\nPointerAlignment: Left\nNamespaceIndentation: All\nColumnLimit: 0\nBreakBeforeBraces: Allman\nBreakConstructorInitializers: BeforeColon\nBreakBeforeBinaryOperators: None\nBreakBeforeTernaryOperators: false\nAlwaysBreakTemplateDeclarations: Yes\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortLoopsOnASingleLine: false\nAllowShortLambdasOnASingleLine: Empty\nCpp11BracedListStyle: true\nIndentCaseLabels: false\nSortIncludes: false\nReflowComments: true\nAlignConsecutiveAssignments: false\nAlignTrailingComments: true\nAlignAfterOpenBracket: DontAlign\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nBinPackArguments: true\nBinPackParameters: true\nAlwaysBreakAfterReturnType: None\nKeepEmptyLinesAtTheStartOfBlocks: true\nIndentWrappedFunctionNames: false\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1123046875,
          "content": "﻿root = true\n\n[*.{h,cpp,hpp}]\ncharset = utf-8\nindent_style = tab\nindent_size = 4\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gdbinit",
          "type": "blob",
          "size": 0.05859375,
          "content": "handle SIGSEGV nostop noprint\nhandle SIGPIPE nostop noprint\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3564453125,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.opensdf\n*.sdf\n*.suo\n*.tlog\n*.idb\n*.pdb\n*.obj\n*.ilk\n*.pch\n\n*.log\n*.exe\n*.dll\n*.elf\n*.lastbuildstate\n*.unsuccessfulbuild\n*.res\n*.dump\n*.wav\n\n/build\n/build-*\n/lib\n/tmp\n/ipch\n/rpcs3/Debug\n/rpcs3/Release\n\n!/bin\n/bin/*\n\n# Audio DLLs\n!/bin/soft_oal.dll\n!/bin/xaudio2_9redist.dll\n\n# Test Programs\n!/bin/test/\n\n# Themes\n!/bin/GuiConfigs/\n/bin/GuiConfigs/*.ini\n/bin/GuiConfigs/*.ini.*\n/bin/GuiConfigs/*.dat\n/bin/GuiConfigs/*.dat.*\n\n# Some data from git\n!/bin/git/\n\n# Visual Studio Files\n.vs/*\n.vscode/*\n*.ipch\n*.vspx\n*.psess\n*.VC.*\n*.vcxproj.user\nenc_temp_folder/*\nCMakeSettings.json\n*PVS-Studio*\nPVS/*\n\n# Ignore other system generated files\nx64/*\nrpcs3/x64/*\nrpcs3/git-version.h\n\n# cmake\nMakefile\n*CMakeFiles*\nCMakeCache.txt\n*cmake_install.cmake*\nCPackConfig.cmake\nCPackSourceConfig.cmake\ncompile_commands.json\n\n# cotire\nrpcs3/cotire/*\nrpcs3/rpcs3_*_cotire.cmake\nrpcs3/Emu/rpcs3_emu_CXX_Release_cotire.cmake\nrpcs3/Emu/rpcs3_emu_CXX_cotire.cmake\n\n# kdevelop\n*.kdev4\n.kdev4/*\n\n# Qt\nmoc_*.cpp\nqrc_*.cpp\nrpcs3_automoc.cpp\nui_*.h\nrpcs3/rpcs3_autogen/*\n\n# QtCreator\nCMakeLists.txt.user\n*.autosave\n\n# Sublime Text\n*.sublime-project\n*.sublime-workspace\n\n# CLion\n/.idea/*\n/cmake-build-*/\n\n# macOS\n.DS_Store\n\n# yaml-cpp\nyaml-cpp.pc\n\n_ReSharper.*/\nCMakeUserPresets.json\n\n.cache/\n.lldbinit\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.857421875,
          "content": "[submodule \"rpcs3-ffmpeg\"]\n\tpath = 3rdparty/ffmpeg\n\turl = ../../RPCS3/ffmpeg-core.git\n\tignore = dirty\n[submodule \"asmjit\"]\n\tpath = 3rdparty/asmjit/asmjit\n\turl = ../../asmjit/asmjit.git\n\tbranch = master\n\tignore = dirty\n[submodule \"3rdparty/llvm/llvm\"]\n\tpath = 3rdparty/llvm/llvm\n\turl = ../../llvm/llvm-project.git\n\tignore = dirty\n[submodule \"3rdparty/glslang\"]\n\tpath = 3rdparty/glslang/glslang\n\turl = ../../KhronosGroup/glslang.git\n\tignore = dirty\n[submodule \"3rdparty/zlib\"]\n\tpath = 3rdparty/zlib/zlib\n\turl = ../../madler/zlib\n\tignore = dirty\n[submodule \"3rdparty/hidapi\"]\n\tpath = 3rdparty/hidapi/hidapi\n\turl = ../../RPCS3/hidapi.git\n\tbranch = master\n\tignore = dirty\n[submodule \"3rdparty/pugixml\"]\n\tpath = 3rdparty/pugixml\n\turl = ../../zeux/pugixml.git\n\tignore = dirty\n[submodule \"3rdparty/xxHash\"]\n\tpath = 3rdparty/xxHash\n\turl = ../../Cyan4973/xxHash.git\n\tignore = dirty\n[submodule \"3rdparty/yaml-cpp\"]\n\tpath = 3rdparty/yaml-cpp/yaml-cpp\n\turl = ../../RPCS3/yaml-cpp.git\n\tignore = dirty\n[submodule \"3rdparty/libpng\"]\n\tpath = 3rdparty/libpng/libpng\n\turl = ../../glennrp/libpng.git\n\tignore = dirty\n[submodule \"3rdparty/libusb\"]\n\tpath = 3rdparty/libusb/libusb\n\turl = ../../libusb/libusb.git\n\tignore = dirty\n[submodule \"3rdparty/FAudio\"]\n\tpath = 3rdparty/FAudio\n\turl = ../../FNA-XNA/FAudio.git\n\tignore = dirty\n[submodule \"3rdparty/curl\"]\n\tpath = 3rdparty/curl/curl\n\turl = ../../curl/curl.git\n\tignore = dirty\n[submodule \"3rdparty/wolfssl\"]\n\tpath = 3rdparty/wolfssl/wolfssl\n\turl = ../../wolfSSL/wolfssl.git\n\tignore = dirty\n[submodule \"3rdparty/flatbuffers\"]\n\tpath = 3rdparty/flatbuffers\n\turl = ../../google/flatbuffers.git\n\tignore = dirty\n[submodule \"3rdparty/cubeb/cubeb\"]\n\tpath = 3rdparty/cubeb/cubeb\n\turl = ../../mozilla/cubeb.git\n\tignore = dirty\n[submodule \"3rdparty/SoundTouch/soundtouch\"]\n\tpath = 3rdparty/SoundTouch/soundtouch\n\turl = ../../RPCS3/soundtouch.git\n\tignore = dirty\n[submodule \"3rdparty/libsdl-org/SDL\"]\n\tpath = 3rdparty/libsdl-org/SDL\n\turl = ../../libsdl-org/SDL.git\n\tignore = dirty\n[submodule \"3rdparty/miniupnp/miniupnp\"]\n\tpath = 3rdparty/miniupnp/miniupnp\n\turl = ../../miniupnp/miniupnp.git\n\tignore = dirty\n[submodule \"3rdparty/rtmidi/rtmidi\"]\n\tpath = 3rdparty/rtmidi/rtmidi\n\turl = ../../thestk/rtmidi\n\tignore = dirty\n[submodule \"3rdparty/zstd/zstd\"]\n\tpath = 3rdparty/zstd/zstd\n\turl = ../../facebook/zstd\n\tignore = dirty\n[submodule \"3rdparty/7zip/7zip\"]\n\tpath = 3rdparty/7zip/7zip\n\turl = ../../ip7z/7zip.git\n\tignore = dirty\n[submodule \"3rdparty/OpenAL/openal-soft\"]\n\tpath = 3rdparty/OpenAL/openal-soft\n\turl = ../../kcat/openal-soft.git\n\tignore = dirty\n[submodule \"3rdparty/stblib/stb\"]\n\tpath = 3rdparty/stblib/stb\n\turl = ../../nothings/stb.git\n\tignore = dirty\n[submodule \"3rdparty/opencv/opencv\"]\n\tpath = 3rdparty/opencv/opencv\n\turl = ../../Megamouse/opencv_minimal.git\n\tignore = dirty\n[submodule \"3rdparty/fusion/fusion\"]\n\tpath = 3rdparty/fusion/fusion\n\turl = ../../xioTechnologies/Fusion.git\n\tignore = dirty\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 10.58984375,
          "content": "# Building\n\nOnly Windows and Linux are officially supported for building. However, various other platforms are capable of building RPCS3.\nOther instructions may be found [here](https://wiki.rpcs3.net/index.php?title=Building).\n\n## Setup your environment\n\n### Windows 10 or later\n\nThe following tools are required to build RPCS3 on Windows 10 or later:\n- [Visual Studio 2022](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community)\n- **Optional** - [CMake 3.28.0+](https://www.cmake.org/download/) (add to PATH)\n\n  **NOTES:**\n  - **Visual Studio 2022** integrates **CMake 3.29+** and it also supports both the `sln` solution (`.sln`, `.vcxproj`) and `CMake` solution (`CMakeLists.txt`, `CMakePresets.json`).\n    See sections [Building with Visual Studio sln solution](#building-with-visual-studio-sln-solution) and [Building with Visual Studio CMake solution](#building-with-visual-studio-cmake-solution)\n    on how to build the project with **Visual Studio**.\n  - Install and use this standalone **CMake** tool just in case of your preference. See section [Building with standalone CMake tool](#building-with-standalone-cmake-tool) on how to build the project\n    with standalone **CMake** tool.\n\n- [Python 3.6+](https://www.python.org/downloads/) (add to PATH)\n- [Qt 6.8.1](https://www.qt.io/download-qt-installer) In case you can't download from the official installer, you can use [Another Qt installer](https://github.com/miurahr/aqtinstall) (In that case you will need to manually add the \"qtmultimedia\" module when installing Qt)\n- [Vulkan SDK 1.3.268.0](https://vulkan.lunarg.com/sdk/home) (see \"Install the SDK\" [here](https://vulkan.lunarg.com/doc/sdk/latest/windows/getting_started.html)) for now future SDKs don't work. You need precisely 1.3.268.0.\n\nThe `sln` solution available only on **Visual Studio** is the preferred building solution. It easily allows to build the **RPCS3** application in `Release` and `Debug` mode.\n\nIn order to build **RPCS3** with the `sln` solution (with **Visual Studio**), **Qt** libs need to be detected. To detect the libs:\n- add and set the `QTDIR` environment variable, e.g. `<QtInstallFolder>\\6.8.1\\msvc2022_64\\`\n- or use the [Visual Studio Qt Plugin](https://marketplace.visualstudio.com/items?itemName=TheQtCompany.QtVisualStudioTools2022)\n\n  **NOTE:** If you have issues with the **Visual Studio Qt Plugin**, you may want to uninstall it and install the [Legacy Qt Plugin](https://marketplace.visualstudio.com/items?itemName=TheQtCompany.LEGACYQtVisualStudioTools2022) instead.\n\nIn order to build **RPCS3** with the `CMake` solution (with both **Visual Studio** and standalone **CMake** tool):\n- add and set the `CMAKE_PREFIX_PATH` environment variable to the **Qt** libs path, e.g. `<QtInstallFolder>\\6.8.1\\msvc2022_64\\`\n\n### Linux\n\nThese are the essentials tools to build RPCS3 on Linux. Some of them can be installed through your favorite package manager:\n- Clang 17+ or GCC 13+\n- [CMake 3.28.0+](https://www.cmake.org/download/)\n- [Qt 6.8.1](https://www.qt.io/download-qt-installer)\n- [Vulkan SDK 1.3.268.0](https://vulkan.lunarg.com/sdk/home) (See \"Install the SDK\" [here](https://vulkan.lunarg.com/doc/sdk/latest/linux/getting_started.html)) for now future SDKs don't work. You need precisely 1.3.268.0.\n- [SDL2](https://github.com/libsdl-org/SDL/releases) (for the FAudio backend)\n\n**If you have an NVIDIA GPU, you may need to install the libglvnd package.**\n\n#### Arch Linux\n\n    sudo pacman -S glew openal cmake vulkan-validation-layers qt6-base qt6-declarative qt6-multimedia qt6-svg sdl2 sndio jack2 base-devel\n\n#### Debian & Ubuntu\n\n    sudo apt-get install build-essential libasound2-dev libpulse-dev libopenal-dev libglew-dev zlib1g-dev libedit-dev libvulkan-dev libudev-dev git libevdev-dev libsdl2-2.0 libsdl2-dev libjack-dev libsndio-dev\n\nUbuntu is usually horrendously out of date, and some packages need to be downloaded by hand. This part is for Qt, GCC, Vulkan, and CMake\n\n##### Qt PPA\n\nUbuntu usually does not have a new enough Qt package to suit rpcs3's needs. There is currently no PPA available to work around this.\n\n##### GCC 13.x installation\n\nIf the `gcc-13` package is not available on your system, use the following commands\n```\nsudo add-apt-repository ppa:ubuntu-toolchain-r/test\nsudo apt-get update\nsudo apt-get install gcc-13 g++-13\n```\n\nYou can either use `update-alternatives` to setup `gcc-13`/`g++-13` as your default compilers or prefix any `cmake` command by `CXX=g++-13 CC=gcc-13 ` to use it.\n\n##### Vulkan SDK\n\nFor Ubuntu systems, it is strongly recommended to use the PPA from [LunarG](https://packages.lunarg.com/) which will provide a compatible Vulkan SDK to compile RPCS3. If your Vulkan SDK is older, it can lead to compilation errors.\n```\n. /etc/os-release\nwget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -\nsudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.268-$UBUNTU_CODENAME.list https://packages.lunarg.com/vulkan/1.3.268/lunarg-vulkan-1.3.268-$UBUNTU_CODENAME.list\nsudo apt update\nsudo apt install vulkan-sdk\n```\n\n##### CMake\n\n```\n. /etc/os-release\nwget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -\nsudo apt-add-repository \"deb https://apt.kitware.com/ubuntu/ $UBUNTU_CODENAME main\"\nsudo apt-get update\nsudo apt-get install kitware-archive-keyring\nsudo apt-key --keyring /etc/apt/trusted.gpg del C1F34CDD40CD72DA\nsudo apt-get install cmake\n```\n\n#### Fedora\n\n    sudo dnf install alsa-lib-devel cmake glew glew-devel libatomic libevdev-devel libudev-devel openal-devel qt6-qtbase-devel qt6-qtbase-private-devel vulkan-devel pipewire-jack-audio-connection-kit-devel qt6-qtmultimedia-devel qt6-qtsvg-devel\n\n#### OpenSUSE\n\n    sudo zypper install git cmake libasound2 libpulse-devel openal-soft-devel glew-devel zlib-devel libedit-devel vulkan-devel libudev-devel libqt6-qtbase-devel libqt6-qtmultimedia-devel libqt6-qtsvg-devel libQt6Gui-private-headers-devel libevdev-devel libsndio7_1 libjack-devel\n\n## Setup the project\n\nClone and initialize the repository\n\n```\ngit clone https://github.com/RPCS3/rpcs3.git\ncd rpcs3\ngit submodule update --init\n```\n\n### Windows\n\n#### Building with Visual Studio sln solution\n\nStart **Visual Studio**, click on `Open a project or solution` and select the `rpcs3.sln` file inside the RPCS3's root folder\n\n##### Configuring the Qt Plugin (if used)\n\n1) go to `Extensions->Qt VS Tools->Qt Versions`\n2) add the path to your Qt installation with compiler e.g. `<QtInstallFolder>\\6.8.1\\msvc2022_64`, version will fill in automatically\n3) go to `Extensions->Qt VS Tools->Options->Legacy Project Format`. (Only available in the **Legacy Qt Plugin**)\n4) set `Build: Run pre-build setup` to `true`. (Only available in the **Legacy Qt Plugin**)\n\n##### Building the projects\n\n**NOTE:** The recommended build configuration is `Release`. (On older revisions: `Release - LLVM`)\n\nTo speed up the compilation time, you may want to download and extract to `<rpcs3_root>\\build\\lib_ext\\<$(Configuration)>-x64` (e.g. `c:\\rpcs3\\build\\lib_ext\\Release-x64`; the path needs to be created) some of the following precompiled libs:\n- [LLVM libs](https://github.com/RPCS3/llvm-mirror/releases/download/custom-build-win-16.0.1/llvmlibs_mt.7z)\n- [additional libs](https://github.com/RPCS3/glslang/releases/latest/download/glslanglibs_mt.7z)\n\n**NOTES:**\n- `<$(Configuration)>` can assume values `Release` or `Debug`.\n- Unoptimised/debug libs are currently not available precompiled for both **LLVM** and **glslang**. Trying to use them when building the **RPCS3** application in `Debug` mode will provide a `cannot open file` error.\n\nIf you're not using the precompiled libs, those dependency libs need to be compiled first. From the `Solution Explorer` panel:\n1) expand `__BUILD_BEFORE`\n2) from the `Solution Configurations` drop-down menu, select `Release` (select `Debug` if you want to build in `Debug` mode)\n3) one after another, right-click on the following projects and then click on `Build` to build the selected lib:\n   - `glslang`\n   - `llvm_build`\n   - or `llvm_build_clang_cl` (if you have also the **clang** compiler installed on VS)\n\n**NOTE:** Compiled dependency libs have priority over precompiled libs, if installed. It means that they will always be referenced and linked in case the precompiled libs are also available.\n\nIn order to build the **RPCS3** application:\n1) from the `Solution Configurations` drop-down menu, select `Release` (select `Debug` if you want to build in `Debug` mode)\n\n   **NOTE:** In case you previously compiled the dependency libs under `__BUILD_BEFORE`, you have also to select the same build configuration (e.g. `Release`, if you compiled the dependency libs in `Release` mode)\n\n2) click on `Build` menu and then on `Build Solution`\n3) once the build is completed, the **RPCS3** application will be available under the `<rpcs3_root>\\bin` folder\n\n#### Building with Visual Studio CMake solution\n\nStart **Visual Studio**, click on `Open a local folder` and select the RPCS3's root folder\n\nOnce the project is open on VS, from the `Solution Explorer` panel:\n1) right-click on `rpcs3` and then click on `Switch to CMake Targets View`\n2) from the `Configuration` drop-down menu, select `msvc-release` (select `msvc-debug` if you want to build in `Debug` mode)\n3) right-click on `CMakeLists.txt Project` and then click on `Configure Cache`\n4) once the cache is created, the `rpcs3 project` will be available\n5) right-click on `rpcs3 Project` and then click on `Build All`, or click on `Build` menu and then on `Build All`\n6) once the build is completed, the **RPCS3** application will be available under the `<rpcs3_root>\\build-msvc\\bin` folder\n\n#### Building with standalone CMake tool\n\nIn case you preferred to install and use the standalone **CMake** tool:\n1) move on the RPCS3's root folder\n2) execute the following commands to create the cache and to build the application (for the build, use `--preset msvc-debug` if you want to build in `Debug` mode), respectively:\n\n   ```\n   cmake --preset msvc\n   cmake --build --preset msvc-release\n   ```\n3) once the build is completed, the **RPCS3** application will be available under the `<rpcs3_root>\\build-msvc\\bin` folder\n\n### Linux\n\nWhile still in the project root:\n\n1) `cd .. && mkdir --parents rpcs3_build && cd rpcs3_build`\n2) `cmake ../rpcs3/ && make` or `CXX=g++-13 CC=gcc-13 cmake ../rpcs3/ && make` to force these compilers\n3) run RPCS3 with `./bin/rpcs3`\n\nIf compiling for ARM, pass the flag `-DUSE_NATIVE_INSTRUCTIONS=OFF` to the cmake command. This resolves some Neon errors when compiling our SIMD headers.\n\nWhen using GDB, configure it to ignore SIGSEGV signal (`handle SIGSEGV nostop noprint`).\nIf desired, use the various build options in [CMakeLists](https://github.com/RPCS3/rpcs3/blob/master/CMakeLists.txt).\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 6.3798828125,
          "content": "cmake_minimum_required(VERSION 3.16.9)\n\nproject(rpcs3 LANGUAGES C CXX)\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11)\n        message(FATAL_ERROR \"RPCS3 requires at least gcc-11.\")\n    endif()\nelseif(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 12.0)\n        message(FATAL_ERROR \"RPCS3 requires at least clang-12.0.\")\n    endif()\nendif()\n\noption(USE_NATIVE_INSTRUCTIONS \"USE_NATIVE_INSTRUCTIONS makes rpcs3 compile with -march=native, which is useful for local builds, but not good for packages.\" ON)\noption(WITH_LLVM \"Enable usage of LLVM library\" ON)\noption(BUILD_LLVM \"Build LLVM from git submodule\" OFF)\noption(STATIC_LINK_LLVM \"Link against LLVM statically. This will get set to ON if you build LLVM from the submodule.\" OFF)\noption(USE_FAUDIO \"FAudio audio backend\" ON)\noption(USE_LIBEVDEV \"libevdev-based joystick support\" ON)\noption(USE_DISCORD_RPC \"Discord rich presence integration\" OFF)\noption(USE_SYSTEM_ZLIB \"Prefer system ZLIB instead of the builtin one\" ON)\noption(USE_VULKAN \"Vulkan render backend\" ON)\noption(USE_PRECOMPILED_HEADERS \"Use precompiled headers\" OFF)\noption(USE_SDL \"Enables SDL input handler\" OFF)\noption(USE_SYSTEM_SDL \"Prefer system SDL instead of the builtin one\" ON)\noption(USE_SYSTEM_FFMPEG \"Prefer system ffmpeg instead of the prebuild one\" OFF)\noption(USE_SYSTEM_OPENAL \"Prefer system OpenAL instead of the prebuild one\" ON)\noption(USE_SYSTEM_CURL \"Prefer system Curl instead of the prebuild one\" ON)\noption(USE_SYSTEM_OPENCV \"Prefer system OpenCV instead of the builtin one\" ON)\n\nset(CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/buildfiles/cmake\")\n\ninclude(CheckCXXCompilerFlag)\n\nget_property(IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\nif(IS_MULTI_CONFIG)\n    # TODO(cjj19970505@live.cn)\n    # Currently DicordRPC is included as a binary compiled with /MT flag.\n    # We need all 4 binaries(/MT /MTd /MD /MDd) or including the source instead of binary.\n    set(USE_DISCORD_RPC OFF CACHE BOOL \"Discord RPC is only avaliable with single-config generator\" FORCE)\nelse()\n    if(NOT CMAKE_BUILD_TYPE)\n        message(STATUS \"No build type selected, default to Release\")\n        set(CMAKE_BUILD_TYPE \"Release\")\n    endif()\nendif()\n\nif(CMAKE_BUILD_TYPE MATCHES \"Debug\" AND NOT MSVC)\n    add_compile_definitions(_DEBUG)\nendif()\n\nif(MSVC)\n    option(USE_MSVC_STATIC_CRT \"Use static MSVC C runtime\" OFF)\n\n    # TODO(cjj19970505@live.cn)\n    # DiscordRPC binary in 3rdparty is compiled /MT\n    # So theoretically we should enable DiscordRPC in Release and static CRT build\n    # since we might encounter some rumtime issues when more than one CRT version are presented.\n    # https://docs.microsoft.com/en-us/cpp/c-runtime-library/crt-library-features?view=msvc-160#what-problems-exist-if-an-application-uses-more-than-one-crt-version\n    # Add other DiscordRPC binaries(compiled with /MTd, /MD, /MDd) or compile it from source may address this issue.\n    if(NOT IS_MULTI_CONFIG)\n        if(NOT(CMAKE_BUILD_TYPE MATCHES \"Release\" AND USE_MSVC_STATIC_CRT))\n            set(USE_DISCORD_RPC OFF CACHE BOOL \"Discord RPC is only available in Release and static CRT build.\" FORCE)\n        endif()\n    endif()\n\n    if(USE_MSVC_STATIC_CRT)\n        set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n    else()\n        # though doc ( https://cmake.org/cmake/help/latest/variable/CMAKE_MSVC_RUNTIME_LIBRARY.html )\n        # says if that property is not set then CMake uses the default value MultiThreaded$<$<CONFIG:Debug>:Debug>DLL\n        # to select a MSVC runtime library.\n        # But yaml-cpp set /MT(d) if CMAKE_MSVC_RUNTIME_LIBRARY is undefined\n        # So we have to define it explicitly\n        set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>DLL\")\n    endif()\n\n    # TODO(cjj19970505@live.cn)\n    # offical QT uses dynamic CRT.\n    # When building our lib with static CRT and debug build type\n    # and linking with Qt with dynamic CRT and debug build,\n    # error is encountered in runtime (which is expected).\n    # But building our lib with static CRT and release build type,\n    # and linking with Qt with dynamic CRT and release build seems to be working,\n    # which is the same config with VS solution.\n    # (though technically it might still have some hidden errors).\n    # So we allow static CRT in both relase and debug build, but prompt warning in debug build.\n    # For more info:\n    # https://docs.microsoft.com/en-us/cpp/c-runtime-library/crt-library-features?view=msvc-160#what-problems-exist-if-an-application-uses-more-than-one-crt-version\n    # https://wiki.qt.io/Technical_FAQ#Why_does_a_statically_built_Qt_use_the_dynamic_Visual_Studio_runtime_libraries_.3F_Do_I_need_to_deploy_those_with_my_application_.3F\n    if(USE_MSVC_STATIC_CRT)\n        if(IS_MULTI_CONFIG OR CMAKE_BUILD_TYPE MATCHES \"Debug\")\n            message(AUTHOR_WARNING \"Debug build currently can not work with static CRT.\")\n        endif()\n    endif()\n    add_compile_options(/MP)\nendif()\n\nif(NOT CMAKE_SIZEOF_VOID_P EQUAL 8)\n    message( FATAL_ERROR \"RPCS3 can only be compiled on 64-bit platforms.\" )\nendif()\n\nfind_program(CCACHE_FOUND ccache)\nif(CCACHE_FOUND)\n    set(CMAKE_CXX_COMPILER_LAUNCHER ccache)\nendif()\n\nif(APPLE AND CMAKE_OSX_ARCHITECTURES STREQUAL \"arm64\")\n    include_directories(/opt/homebrew/include)\n    link_directories(/opt/homebrew/lib)\nendif()\n\nif(MSVC)\n    add_compile_options(/wd4530 /utf-8) # C++ exception handler used, but unwind semantics are not enabled\nendif()\n\nadd_subdirectory(3rdparty)\n\nif (DISABLE_LTO)\n    if (CMAKE_C_FLAGS)\n        string(REGEX REPLACE \"-flto[^ ]*\" \"\" CMAKE_C_FLAGS ${CMAKE_C_FLAGS})\n    endif()\n    if (CMAKE_CXX_FLAGS)\n        string(REGEX REPLACE \"-flto[^ ]*\" \"\" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})\n    endif()\nendif()\n\nstring(FIND \"${CMAKE_C_FLAGS} ${CMAKE_CXX_FLAGS}\" \"-flto\" FOUND_LTO)\nif (NOT FOUND_LTO EQUAL -1)\n    message(FATAL_ERROR \"RPCS3 doesn't support building with LTO, use -DDISABLE_LTO=TRUE to force-disable it\")\nendif()\n\nif(NOT WIN32)\n    add_compile_options(-pthread)\nendif()\n\n# TODO: do real installation, including copying directory structure\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE \"${PROJECT_BINARY_DIR}/bin\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG \"${PROJECT_BINARY_DIR}/bin\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO \"${PROJECT_BINARY_DIR}/bin\")\n\nadd_subdirectory(rpcs3)\n\nset_directory_properties(PROPERTIES VS_STARTUP_PROJECT rpcs3)\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 2.169921875,
          "content": "{\n  \"version\": 3,\n  \"configurePresets\": [\n    {\n      \"name\": \"gcc\",\n      \"generator\": \"Ninja\",\n      \"binaryDir\": \"build-gcc\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"USE_NATIVE_INSTRUCTIONS\": \"ON\",\n        \"USE_PRECOMPILED_HEADERS\": \"ON\",\n        \"USE_FAUDIO\": \"OFF\",\n        \"USE_SYSTEM_CURL\": \"OFF\",\n        \"USE_SYSTEM_ZLIB\": \"OFF\",\n        \"USE_SYSTEM_LIBPNG\": \"OFF\",\n        \"USE_SYSTEM_OPENCV\": \"ON\",\n        \"BUILD_LLVM\": \"OFF\",\n        \"STATIC_LINK_LLVM\": \"ON\"\n      }\n    },\n    {\n      \"name\": \"clang\",\n      \"generator\": \"Ninja\",\n      \"binaryDir\": \"build-clang64\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"USE_NATIVE_INSTRUCTIONS\": \"ON\",\n        \"USE_PRECOMPILED_HEADERS\": \"ON\",\n        \"USE_FAUDIO\": \"OFF\",\n        \"USE_SYSTEM_CURL\": \"OFF\",\n        \"USE_SYSTEM_ZLIB\": \"OFF\",\n        \"USE_SYSTEM_LIBPNG\": \"OFF\",\n        \"USE_SYSTEM_OPENCV\": \"ON\",\n        \"LLVM_ENABLE_LIBCXX\": \"ON\",\n        \"BUILD_LLVM\": \"OFF\",\n        \"STATIC_LINK_LLVM\": \"ON\"\n      },\n      \"environment\": {\n        \"CXX\": \"clang++\",\n        \"CC\": \"clang\"\n      }\n    },\n    {\n      \"name\": \"msvc\",\n      \"displayName\": \"Windows x64\",\n      \"generator\": \"Visual Studio 17 2022\",\n      \"binaryDir\": \"build-msvc\",\n      \"architecture\": {\n        \"value\": \"x64\",\n        \"strategy\": \"external\"\n      },\n      \"cacheVariables\": {\n        \"CMAKE_CONFIGURATION_TYPES\": \"Debug;Release\",\n        \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/out/install/${presetName}\",\n        \"USE_NATIVE_INSTRUCTIONS\": \"ON\",\n        \"USE_PRECOMPILED_HEADERS\": \"ON\",\n        \"USE_FAUDIO\": \"OFF\",\n        \"USE_SYSTEM_CURL\": \"OFF\",\n        \"USE_SYSTEM_ZLIB\": \"OFF\",\n        \"USE_SYSTEM_OPENAL\": \"OFF\",\n        \"USE_SYSTEM_OPENCV\": \"OFF\",\n        \"BUILD_LLVM\": \"ON\",\n        \"STATIC_LINK_LLVM\": \"ON\"\n      },\n      \"vendor\": {\n        \"microsoft.com/VisualStudioSettings/CMake/1.0\": {\n          \"hostOS\": [\n            \"Windows\"\n          ]\n        }\n      }\n    }\n  ],\n  \"buildPresets\": [\n    {\n      \"name\": \"msvc-debug\",\n      \"configurePreset\": \"msvc\",\n      \"configuration\": \"Debug\"\n    },\n    {\n      \"name\": \"msvc-release\",\n      \"configurePreset\": \"msvc\",\n      \"configuration\": \"Release\"\n    }\n  ]\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.603515625,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year}  {fullname}\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.34765625,
          "content": "RPCS3\n=====\n\n[![Azure Build Status](https://dev.azure.com/nekotekina/nekotekina/_apis/build/status/RPCS3.rpcs3?branchName=master)](https://dev.azure.com/nekotekina/nekotekina/_build?definitionId=4&branchName=master)\n[![Cirrus CI - Base Branch Build Status](https://img.shields.io/cirrus/github/RPCS3/rpcs3?label=Cirrus%20CI&logo=cirrus-ci)](https://cirrus-ci.com/github/RPCS3/rpcs3)\n[![RPCS3 Discord Server](https://img.shields.io/discord/272035812277878785?color=5865F2&label=RPCS3%20Discord&logo=discord&logoColor=white)](https://discord.me/rpcs3)\n\nThe world's first free and open-source PlayStation 3 emulator/debugger, written in C++ for Windows, Linux, macOS and FreeBSD.\n\nYou can find some basic information on our [**website**](https://rpcs3.net/). Game info is being populated on the [**Wiki**](https://wiki.rpcs3.net/).\nFor discussion about this emulator, PS3 emulation, and game compatibility reports, please visit our [**forums**](https://forums.rpcs3.net) and our [**Discord server**](https://discord.gg/RPCS3).\n\n[**Support Lead Developers Nekotekina and kd-11 on Patreon**](https://www.patreon.com/Nekotekina)\n\n## Contributing\n\nIf you want to help the project but do not code, the best way to help out is to test games and make bug reports. See:\n* [Quickstart](https://rpcs3.net/quickstart)\n\nIf you want to contribute as a developer, please take a look at the following pages:\n\n* [Coding Style](https://github.com/RPCS3/rpcs3/wiki/Coding-Style)\n* [Developer Information](https://github.com/RPCS3/rpcs3/wiki/Developer-Information)\n* [Roadmap](https://rpcs3.net/roadmap)\n\nYou should also contact any of the developers in the forums or in the Discord server to learn more about the current state of the emulator.\n\n## Building\n\nSee [BUILDING.md](BUILDING.md) for more information about how to setup an environment to build RPCS3.\n\n## Running\n\nCheck our friendly [quickstart](https://rpcs3.net/quickstart) guide to make sure your computer meets the minimum system requirements to run RPCS3.\n\nDon't forget to have your graphics driver up to date and to install the [Visual C++ Redistributable Packages for Visual Studio 2019](https://aka.ms/vs/16/release/VC_redist.x64.exe) if you are a Windows user.\n\n## License\n\nMost files are licensed under the terms of GNU GPL-2.0-only License; see LICENSE file for details. Some files may be licensed differently; check appropriate file headers for details.\n"
        },
        {
          "name": "Utilities",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 7.05078125,
          "content": "trigger:\n  branches:\n    include:\n      - master\n  tags:\n    exclude:\n      - '*'\npr:\n  branches:\n    include:\n      - master\njobs:\n- job: Linux_Build\n  strategy:\n    matrix:\n      Clang:\n        COMPILER: clang\n      GCC:\n        COMPILER: gcc\n  variables:\n    CCACHE_DIR: $(Pipeline.Workspace)/ccache\n    CI_HAS_ARTIFACTS: true\n    UPLOAD_COMMIT_HASH: d812f1254a1157c80fd402f94446310560f54e5f\n    UPLOAD_REPO_FULL_NAME: \"RPCS3/rpcs3-binaries-linux\"\n    DEPLOY_APPIMAGE: true\n    APPDIR: \"/rpcs3/build/appdir\"\n    ARTDIR: \"/root/artifacts\"\n    RELEASE_MESSAGE: \"/rpcs3/GitHubReleaseMessage.txt\"\n\n  pool:\n    vmImage: 'ubuntu-latest'\n\n  steps:\n  - task: Cache@2\n    inputs:\n      key: ccache | $(Agent.OS) | $(COMPILER)\n      path: $(CCACHE_DIR)\n    displayName: ccache\n\n  - bash: |\n      docker pull --quiet rpcs3/rpcs3-ci-focal:1.9\n      docker run                      \\\n        -v $(pwd):/rpcs3              \\\n        --env-file .ci/docker.env \\\n        -v $CCACHE_DIR:/root/.ccache  \\\n        -v $BUILD_ARTIFACTSTAGINGDIRECTORY:/root/artifacts \\\n        rpcs3/rpcs3-ci-focal:1.9 \\\n        /rpcs3/.ci/build-linux.sh\n    displayName: Docker setup and build\n\n  - publish: $(Build.ArtifactStagingDirectory)\n    condition: succeeded()\n    artifact: RPCS3 for Linux ($(COMPILER))\n\n  - bash: |\n      COMM_TAG=$(awk '/version{.*}/ { printf(\"%d.%d.%d\", $5, $6, $7) }' ./rpcs3/rpcs3_version.cpp)\n      COMM_COUNT=$(git rev-list --count HEAD)\n      COMM_HASH=$(git rev-parse --short=8 HEAD)\n\n      export AVVER=\"${COMM_TAG}-${COMM_COUNT}\"\n\n      .ci/github-upload.sh\n    condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Repository.Name'], 'RPCS3/rpcs3'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['COMPILER'], 'clang'))\n    displayName: Push build to GitHub\n    env:\n      RPCS3_TOKEN: $(RPCS3-Token)\n\n- job: Windows_Build\n  variables:\n    COMPILER: msvc\n    QT_VER_MAIN: '6'\n    QT_VER: '6.8.1'\n    QT_VER_MSVC: 'msvc2022'\n    QT_DATE: '202411221531'\n    QTDIR: C:\\Qt\\$(QT_VER)\\$(QT_VER_MSVC)_64\n    VULKAN_VER: '1.3.268.0'\n    VULKAN_SDK_SHA: '8459ef49bd06b697115ddd3d97c9aec729e849cd775f5be70897718a9b3b9db5'\n    VULKAN_SDK: C:\\VulkanSDK\\$(VULKAN_VER)\n    CACHE_DIR: ./cache\n    UPLOAD_COMMIT_HASH: 7d09e3be30805911226241afbb14f8cdc2eb054e\n    UPLOAD_REPO_FULL_NAME: \"RPCS3/rpcs3-binaries-win\"\n\n  pool:\n    vmImage: \"windows-latest\"\n\n  steps:\n    - bash: .ci/get_keys-windows.sh\n      displayName: Get Cache Keys\n\n    - task: Cache@2\n      inputs:\n        key: $(Agent.OS) | $(COMPILER) | \"$(QT_VER)\" | $(VULKAN_SDK_SHA) | llvm.lock | glslang.lock\n        path: $(CACHE_DIR)\n        restoreKeys: |\n          $(Agent.OS) | $(COMPILER)\n      displayName: Cache\n\n    - bash: .ci/setup-windows.sh\n      displayName: Download and unpack dependencies\n\n    - bash: .ci/export-azure-vars.sh\n      displayName: Export Variables\n\n    - task: VSBuild@1\n      inputs:\n        solution: 'rpcs3.sln'\n        maximumCpuCount: true\n        platform: x64\n        configuration: 'Release'\n      displayName: Compile RPCS3\n\n    - bash: .ci/deploy-windows.sh\n      displayName: Pack up build artifacts\n\n    - publish: $(Build.ArtifactStagingDirectory)\n      condition: succeeded()\n      artifact: RPCS3 for Windows\n\n    - bash: .ci/github-upload.sh\n      condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Repository.Name'], 'RPCS3/rpcs3'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))\n      displayName: Push build to GitHub\n      env:\n        RPCS3_TOKEN: $(RPCS3-Token)\n\n- job: Mac_Build_x86_64\n  timeoutInMinutes: 180\n  variables:\n    CCACHE_DIR: \"/tmp/ccache_dir\"\n    CCACHE_MAXSIZE: 300M\n    CI_HAS_ARTIFACTS: true\n    UPLOAD_COMMIT_HASH: 51ae32f468089a8169aaf1567de355ff4a3e0842\n    UPLOAD_REPO_FULL_NAME: \"RPCS3/rpcs3-binaries-mac\"\n    RELEASE_MESSAGE: \"../GitHubReleaseMessage.txt\"\n    ARTDIR: $(Build.ArtifactStagingDirectory)\n    QT_VER: '6.7.3'\n    QT_VER_MAIN: '6'\n    LLVM_COMPILER_VER: '16'\n\n  pool:\n    vmImage: \"macOS-13\"\n\n  steps:\n    - task: Cache@2\n      inputs:\n        key: ccache | \"$(Agent.OS)\"\n        path: $(CCACHE_DIR)\n        restoreKeys: |\n          ccache | \"$(Agent.OS)\"\n      displayName: Ccache cache\n    \n    - task: Cache@2\n      inputs:\n        key: qt | \"$(Agent.OS)\" | \"$(Agent.OSArchitecture)\" | \"$(QT_VER)\" \n        path: /tmp/Qt\n        restoreKeys: |\n          qt | \"$(Agent.OS)\" | \"$(Agent.OSArchitecture)\" | \"$(QT_VER)\" \n      displayName: Qt cache\n    \n    # - task: Cache@2\n    #   inputs:\n    #     key: brew | \"$(Agent.OS)\"\n    #     path: /Users/runner/Library/Caches/Homebrew\n    #     restoreKeys: |\n    #       brew | \"$(Agent.OS)\"\n    #   displayName: Homebrew cache\n\n    - bash: |\n        chmod +x \".ci/build-mac.sh\"\n        chmod +x \".ci/deploy-mac.sh\"\n        chmod +x \".ci/optimize-mac.sh\"\n        \".ci/build-mac.sh\"\n      displayName: Build macOS (x86_64)\n\n    - publish: $(Build.ArtifactStagingDirectory)\n      condition: succeeded()\n      artifact: RPCS3 for Mac (Intel)\n\n    - bash: |\n        source './.ci/export-cirrus-vars.sh'\n        .ci/github-upload.sh\n      condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Repository.Name'], 'RPCS3/rpcs3'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))\n      displayName: Push build to GitHub\n      env:\n        RPCS3_TOKEN: $(RPCS3-Token)\n        \n- job: Mac_Build_arm64\n  timeoutInMinutes: 180\n  variables:\n    CCACHE_DIR: \"/tmp/ccache_dir\"\n    CCACHE_MAXSIZE: 300M\n    CI_HAS_ARTIFACTS: true\n    UPLOAD_COMMIT_HASH: 8e21bdbc40711a3fccd18fbf17b742348b0f4281\n    UPLOAD_REPO_FULL_NAME: \"RPCS3/rpcs3-binaries-mac-arm64\"\n    RELEASE_MESSAGE: \"../GitHubReleaseMessage.txt\"\n    ARTDIR: $(Build.ArtifactStagingDirectory)\n    QT_VER: '6.7.3'\n    QT_VER_MAIN: '6'\n    LLVM_COMPILER_VER: '16'\n\n  pool:\n    vmImage: \"macOS-13\"\n\n  steps:\n    - task: Cache@2\n      inputs:\n        key: ccache | \"$(Agent.OS)\"\n        path: $(CCACHE_DIR)\n        restoreKeys: |\n          ccache | \"$(Agent.OS)\"\n      displayName: Ccache cache\n    \n    - task: Cache@2\n      inputs:\n        key: qt | \"$(Agent.OS)\" | \"$(Agent.OSArchitecture)\" | \"$(QT_VER)\"\n        path: /tmp/Qt\n        restoreKeys: |\n          qt | \"$(Agent.OS)\" | \"$(Agent.OSArchitecture)\" | \"$(QT_VER)\"\n      displayName: Qt cache\n    \n    # - task: Cache@2\n    #   inputs:\n    #     key: brew | \"$(Agent.OS)\"\n    #     path: /Users/runner/Library/Caches/Homebrew\n    #     restoreKeys: |\n    #       brew | \"$(Agent.OS)\"\n    #   displayName: Homebrew cache\n\n    - bash: |\n        chmod +x \".ci/build-mac-arm64.sh\"\n        chmod +x \".ci/deploy-mac-arm64.sh\"\n        chmod +x \".ci/optimize-mac.sh\"\n        \".ci/build-mac-arm64.sh\"\n      displayName: Build macOS (arm64)\n\n    - publish: $(Build.ArtifactStagingDirectory)\n      condition: succeeded()\n      artifact: RPCS3 for Mac (Apple Silicon)\n\n    - bash: |\n        source './.ci/export-cirrus-vars.sh'\n        .ci/github-upload.sh\n      condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Repository.Name'], 'RPCS3/rpcs3'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))\n      displayName: Push build to GitHub\n      env:\n        RPCS3_TOKEN: $(RPCS3-Token)\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "darwin",
          "type": "tree",
          "content": null
        },
        {
          "name": "git-clang-format",
          "type": "blob",
          "size": 17.673828125,
          "content": "#!/usr/bin/env python\n#\n#===- git-clang-format - ClangFormat Git Integration ---------*- python -*--===#\n#\n#                     The LLVM Compiler Infrastructure\n#\n# This file is distributed under the University of Illinois Open Source\n# License. See LICENSE.TXT for details.\n#\n#===------------------------------------------------------------------------===#\n\nr\"\"\"                                                                             \nclang-format git integration                                                     \n============================                                                     \n                                                                                 \nThis file provides a clang-format integration for git. Put it somewhere in your  \npath and ensure that it is executable. Then, \"git clang-format\" will invoke      \nclang-format on the changes in current files or a specific commit.               \n                                                                                 \nFor further details, run:                                                        \ngit clang-format -h                                                              \n                                                                                 \nRequires Python 2.7                                                              \n\"\"\"               \n\nimport argparse\nimport collections\nimport contextlib\nimport errno\nimport os\nimport re\nimport subprocess\nimport sys\n\nusage = 'git clang-format [OPTIONS] [<commit>] [--] [<file>...]'\n\ndesc = '''\nRun clang-format on all lines that differ between the working directory\nand <commit>, which defaults to HEAD.  Changes are only applied to the working\ndirectory.\n\nThe following git-config settings set the default of the corresponding option:\n  clangFormat.binary\n  clangFormat.commit\n  clangFormat.extension\n  clangFormat.style\n'''\n\n# Name of the temporary index file in which save the output of clang-format.\n# This file is created within the .git directory.\ntemp_index_basename = 'clang-format-index'\n\n\nRange = collections.namedtuple('Range', 'start, count')\n\n\ndef main():\n  config = load_git_config()\n\n  # In order to keep '--' yet allow options after positionals, we need to\n  # check for '--' ourselves.  (Setting nargs='*' throws away the '--', while\n  # nargs=argparse.REMAINDER disallows options after positionals.)\n  argv = sys.argv[1:]\n  try:\n    idx = argv.index('--')\n  except ValueError:\n    dash_dash = []\n  else:\n    dash_dash = argv[idx:]\n    argv = argv[:idx]\n\n  default_extensions = ','.join([\n      # From clang/lib/Frontend/FrontendOptions.cpp, all lower case\n      'c', 'h',  # C\n      'm',  # ObjC\n      'mm',  # ObjC++\n      'cc', 'cp', 'cpp', 'c++', 'cxx', 'hpp',  # C++\n      # Other languages that clang-format supports\n      'proto', 'protodevel',  # Protocol Buffers\n      'js',  # JavaScript\n      'ts',  # TypeScript\n      ])\n\n  p = argparse.ArgumentParser(\n    usage=usage, formatter_class=argparse.RawDescriptionHelpFormatter,\n    description=desc)\n  p.add_argument('--binary',\n                 default=config.get('clangformat.binary', 'clang-format'),\n                 help='path to clang-format'),\n  p.add_argument('--commit',\n                 default=config.get('clangformat.commit', 'HEAD'),\n                 help='default commit to use if none is specified'),\n  p.add_argument('--diff', action='store_true',\n                 help='print a diff instead of applying the changes')\n  p.add_argument('--extensions',\n                 default=config.get('clangformat.extensions',\n                                    default_extensions),\n                 help=('comma-separated list of file extensions to format, '\n                       'excluding the period and case-insensitive')),\n  p.add_argument('-f', '--force', action='store_true',\n                 help='allow changes to unstaged files')\n  p.add_argument('-p', '--patch', action='store_true',\n                 help='select hunks interactively')\n  p.add_argument('-q', '--quiet', action='count', default=0,\n                 help='print less information')\n  p.add_argument('--style',\n                 default=config.get('clangformat.style', None),\n                 help='passed to clang-format'),\n  p.add_argument('-v', '--verbose', action='count', default=0,\n                 help='print extra information')\n  # We gather all the remaining positional arguments into 'args' since we need\n  # to use some heuristics to determine whether or not <commit> was present.\n  # However, to print pretty messages, we make use of metavar and help.\n  p.add_argument('args', nargs='*', metavar='<commit>',\n                 help='revision from which to compute the diff')\n  p.add_argument('ignored', nargs='*', metavar='<file>...',\n                 help='if specified, only consider differences in these files')\n  opts = p.parse_args(argv)\n\n  opts.verbose -= opts.quiet\n  del opts.quiet\n\n  commit, files = interpret_args(opts.args, dash_dash, opts.commit)\n  changed_lines = compute_diff_and_extract_lines(commit, files)\n  if opts.verbose >= 1:\n    ignored_files = set(changed_lines)\n  filter_by_extension(changed_lines, opts.extensions.lower().split(','))\n  if opts.verbose >= 1:\n    ignored_files.difference_update(changed_lines)\n    if ignored_files:\n      print 'Ignoring changes in the following files (wrong extension):'\n      for filename in ignored_files:\n        print '   ', filename\n    if changed_lines:\n      print 'Running clang-format on the following files:'\n      for filename in changed_lines:\n        print '   ', filename\n  if not changed_lines:\n    print 'no modified files to format'\n    return\n  # The computed diff outputs absolute paths, so we must cd before accessing\n  # those files.\n  cd_to_toplevel()\n  old_tree = create_tree_from_workdir(changed_lines)\n  new_tree = run_clang_format_and_save_to_tree(changed_lines,\n                                               binary=opts.binary,\n                                               style=opts.style)\n  if opts.verbose >= 1:\n    print 'old tree:', old_tree\n    print 'new tree:', new_tree\n  if old_tree == new_tree:\n    if opts.verbose >= 0:\n      print 'clang-format did not modify any files'\n  elif opts.diff:\n    print_diff(old_tree, new_tree)\n  else:\n    changed_files = apply_changes(old_tree, new_tree, force=opts.force,\n                                  patch_mode=opts.patch)\n    if (opts.verbose >= 0 and not opts.patch) or opts.verbose >= 1:\n      print 'changed files:'\n      for filename in changed_files:\n        print '   ', filename\n\n\ndef load_git_config(non_string_options=None):\n  \"\"\"Return the git configuration as a dictionary.\n\n  All options are assumed to be strings unless in `non_string_options`, in which\n  is a dictionary mapping option name (in lower case) to either \"--bool\" or\n  \"--int\".\"\"\"\n  if non_string_options is None:\n    non_string_options = {}\n  out = {}\n  for entry in run('git', 'config', '--list', '--null').split('\\0'):\n    if entry:\n      name, value = entry.split('\\n', 1)\n      if name in non_string_options:\n        value = run('git', 'config', non_string_options[name], name)\n      out[name] = value\n  return out\n\n\ndef interpret_args(args, dash_dash, default_commit):\n  \"\"\"Interpret `args` as \"[commit] [--] [files...]\" and return (commit, files).\n\n  It is assumed that \"--\" and everything that follows has been removed from\n  args and placed in `dash_dash`.\n\n  If \"--\" is present (i.e., `dash_dash` is non-empty), the argument to its\n  left (if present) is taken as commit.  Otherwise, the first argument is\n  checked if it is a commit or a file.  If commit is not given,\n  `default_commit` is used.\"\"\"\n  if dash_dash:\n    if len(args) == 0:\n      commit = default_commit\n    elif len(args) > 1:\n      die('at most one commit allowed; %d given' % len(args))\n    else:\n      commit = args[0]\n    object_type = get_object_type(commit)\n    if object_type not in ('commit', 'tag'):\n      if object_type is None:\n        die(\"'%s' is not a commit\" % commit)\n      else:\n        die(\"'%s' is a %s, but a commit was expected\" % (commit, object_type))\n    files = dash_dash[1:]\n  elif args:\n    if disambiguate_revision(args[0]):\n      commit = args[0]\n      files = args[1:]\n    else:\n      commit = default_commit\n      files = args\n  else:\n    commit = default_commit\n    files = []\n  return commit, files\n\n\ndef disambiguate_revision(value):\n  \"\"\"Returns True if `value` is a revision, False if it is a file, or dies.\"\"\"\n  # If `value` is ambiguous (neither a commit nor a file), the following\n  # command will die with an appropriate error message.\n  run('git', 'rev-parse', value, verbose=False)\n  object_type = get_object_type(value)\n  if object_type is None:\n    return False\n  if object_type in ('commit', 'tag'):\n    return True\n  die('`%s` is a %s, but a commit or filename was expected' %\n      (value, object_type))\n\n\ndef get_object_type(value):\n  \"\"\"Returns a string description of an object's type, or None if it is not\n  a valid git object.\"\"\"\n  cmd = ['git', 'cat-file', '-t', value]\n  p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n  stdout, stderr = p.communicate()\n  if p.returncode != 0:\n    return None\n  return stdout.strip()\n\n\ndef compute_diff_and_extract_lines(commit, files):\n  \"\"\"Calls compute_diff() followed by extract_lines().\"\"\"\n  diff_process = compute_diff(commit, files)\n  changed_lines = extract_lines(diff_process.stdout)\n  diff_process.stdout.close()\n  diff_process.wait()\n  if diff_process.returncode != 0:\n    # Assume error was already printed to stderr.\n    sys.exit(2)\n  return changed_lines\n\n\ndef compute_diff(commit, files):\n  \"\"\"Return a subprocess object producing the diff from `commit`.\n\n  The return value's `stdin` file object will produce a patch with the\n  differences between the working directory and `commit`, filtered on `files`\n  (if non-empty).  Zero context lines are used in the patch.\"\"\"\n  cmd = ['git', 'diff-index', '-p', '-U0', commit, '--']\n  cmd.extend(files)\n  p = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n  p.stdin.close()\n  return p\n\n\ndef extract_lines(patch_file):\n  \"\"\"Extract the changed lines in `patch_file`.\n\n  The return value is a dictionary mapping filename to a list of (start_line,\n  line_count) pairs.\n\n  The input must have been produced with ``-U0``, meaning unidiff format with\n  zero lines of context.  The return value is a dict mapping filename to a\n  list of line `Range`s.\"\"\"\n  matches = {}\n  for line in patch_file:\n    match = re.search(r'^\\+\\+\\+\\ [^/]+/(.*)', line)\n    if match:\n      filename = match.group(1).rstrip('\\r\\n')\n    match = re.search(r'^@@ -[0-9,]+ \\+(\\d+)(,(\\d+))?', line)\n    if match:\n      start_line = int(match.group(1))\n      line_count = 1\n      if match.group(3):\n        line_count = int(match.group(3))\n      if line_count > 0:\n        matches.setdefault(filename, []).append(Range(start_line, line_count))\n  return matches\n\n\ndef filter_by_extension(dictionary, allowed_extensions):\n  \"\"\"Delete every key in `dictionary` that doesn't have an allowed extension.\n\n  `allowed_extensions` must be a collection of lowercase file extensions,\n  excluding the period.\"\"\"\n  allowed_extensions = frozenset(allowed_extensions)\n  for filename in dictionary.keys():\n    base_ext = filename.rsplit('.', 1)\n    if len(base_ext) == 1 or base_ext[1].lower() not in allowed_extensions:\n      del dictionary[filename]\n\n\ndef cd_to_toplevel():\n  \"\"\"Change to the top level of the git repository.\"\"\"\n  toplevel = run('git', 'rev-parse', '--show-toplevel')\n  os.chdir(toplevel)\n\n\ndef create_tree_from_workdir(filenames):\n  \"\"\"Create a new git tree with the given files from the working directory.\n\n  Returns the object ID (SHA-1) of the created tree.\"\"\"\n  return create_tree(filenames, '--stdin')\n\n\ndef run_clang_format_and_save_to_tree(changed_lines, binary='clang-format',\n                                      style=None):\n  \"\"\"Run clang-format on each file and save the result to a git tree.\n\n  Returns the object ID (SHA-1) of the created tree.\"\"\"\n  def index_info_generator():\n    for filename, line_ranges in changed_lines.iteritems():\n      mode = oct(os.stat(filename).st_mode)\n      blob_id = clang_format_to_blob(filename, line_ranges, binary=binary,\n                                     style=style)\n      yield '%s %s\\t%s' % (mode, blob_id, filename)\n  return create_tree(index_info_generator(), '--index-info')\n\n\ndef create_tree(input_lines, mode):\n  \"\"\"Create a tree object from the given input.\n\n  If mode is '--stdin', it must be a list of filenames.  If mode is\n  '--index-info' is must be a list of values suitable for \"git update-index\n  --index-info\", such as \"<mode> <SP> <sha1> <TAB> <filename>\".  Any other mode\n  is invalid.\"\"\"\n  assert mode in ('--stdin', '--index-info')\n  cmd = ['git', 'update-index', '--add', '-z', mode]\n  with temporary_index_file():\n    p = subprocess.Popen(cmd, stdin=subprocess.PIPE)\n    for line in input_lines:\n      p.stdin.write('%s\\0' % line)\n    p.stdin.close()\n    if p.wait() != 0:\n      die('`%s` failed' % ' '.join(cmd))\n    tree_id = run('git', 'write-tree')\n    return tree_id\n\n\ndef clang_format_to_blob(filename, line_ranges, binary='clang-format',\n                         style=None):\n  \"\"\"Run clang-format on the given file and save the result to a git blob.\n\n  Returns the object ID (SHA-1) of the created blob.\"\"\"\n  clang_format_cmd = [binary, filename]\n  if style:\n    clang_format_cmd.extend(['-style='+style])\n  clang_format_cmd.extend([\n      '-lines=%s:%s' % (start_line, start_line+line_count-1)\n      for start_line, line_count in line_ranges])\n  try:\n    clang_format = subprocess.Popen(clang_format_cmd, stdin=subprocess.PIPE,\n                                    stdout=subprocess.PIPE)\n  except OSError as e:\n    if e.errno == errno.ENOENT:\n      die('cannot find executable \"%s\"' % binary)\n    else:\n      raise\n  clang_format.stdin.close()\n  hash_object_cmd = ['git', 'hash-object', '-w', '--path='+filename, '--stdin']\n  hash_object = subprocess.Popen(hash_object_cmd, stdin=clang_format.stdout,\n                                 stdout=subprocess.PIPE)\n  clang_format.stdout.close()\n  stdout = hash_object.communicate()[0]\n  if hash_object.returncode != 0:\n    die('`%s` failed' % ' '.join(hash_object_cmd))\n  if clang_format.wait() != 0:\n    die('`%s` failed' % ' '.join(clang_format_cmd))\n  return stdout.rstrip('\\r\\n')\n\n\n@contextlib.contextmanager\ndef temporary_index_file(tree=None):\n  \"\"\"Context manager for setting GIT_INDEX_FILE to a temporary file and deleting\n  the file afterward.\"\"\"\n  index_path = create_temporary_index(tree)\n  old_index_path = os.environ.get('GIT_INDEX_FILE')\n  os.environ['GIT_INDEX_FILE'] = index_path\n  try:\n    yield\n  finally:\n    if old_index_path is None:\n      del os.environ['GIT_INDEX_FILE']\n    else:\n      os.environ['GIT_INDEX_FILE'] = old_index_path\n    os.remove(index_path)\n\n\ndef create_temporary_index(tree=None):\n  \"\"\"Create a temporary index file and return the created file's path.\n\n  If `tree` is not None, use that as the tree to read in.  Otherwise, an\n  empty index is created.\"\"\"\n  gitdir = run('git', 'rev-parse', '--git-dir')\n  path = os.path.join(gitdir, temp_index_basename)\n  if tree is None:\n    tree = '--empty'\n  run('git', 'read-tree', '--index-output='+path, tree)\n  return path\n\n\ndef print_diff(old_tree, new_tree):\n  \"\"\"Print the diff between the two trees to stdout.\"\"\"\n  # We use the porcelain 'diff' and not plumbing 'diff-tree' because the output\n  # is expected to be viewed by the user, and only the former does nice things\n  # like color and pagination.\n  subprocess.check_call(['git', 'diff', old_tree, new_tree, '--'])\n\n\ndef apply_changes(old_tree, new_tree, force=False, patch_mode=False):\n  \"\"\"Apply the changes in `new_tree` to the working directory.\n\n  Bails if there are local changes in those files and not `force`.  If\n  `patch_mode`, runs `git checkout --patch` to select hunks interactively.\"\"\"\n  changed_files = run('git', 'diff-tree', '-r', '-z', '--name-only', old_tree,\n                      new_tree).rstrip('\\0').split('\\0')\n  if not force:\n    unstaged_files = run('git', 'diff-files', '--name-status', *changed_files)\n    if unstaged_files:\n      print >>sys.stderr, ('The following files would be modified but '\n                           'have unstaged changes:')\n      print >>sys.stderr, unstaged_files\n      print >>sys.stderr, 'Please commit, stage, or stash them first.'\n      sys.exit(2)\n  if patch_mode:\n    # In patch mode, we could just as well create an index from the new tree\n    # and checkout from that, but then the user will be presented with a\n    # message saying \"Discard ... from worktree\".  Instead, we use the old\n    # tree as the index and checkout from new_tree, which gives the slightly\n    # better message, \"Apply ... to index and worktree\".  This is not quite\n    # right, since it won't be applied to the user's index, but oh well.\n    with temporary_index_file(old_tree):\n      subprocess.check_call(['git', 'checkout', '--patch', new_tree])\n    index_tree = old_tree\n  else:\n    with temporary_index_file(new_tree):\n      run('git', 'checkout-index', '-a', '-f')\n  return changed_files\n\n\ndef run(*args, **kwargs):\n  stdin = kwargs.pop('stdin', '')\n  verbose = kwargs.pop('verbose', True)\n  strip = kwargs.pop('strip', True)\n  for name in kwargs:\n    raise TypeError(\"run() got an unexpected keyword argument '%s'\" % name)\n  p = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n                       stdin=subprocess.PIPE)\n  stdout, stderr = p.communicate(input=stdin)\n  if p.returncode == 0:\n    if stderr:\n      if verbose:\n        print >>sys.stderr, '`%s` printed to stderr:' % ' '.join(args)\n      print >>sys.stderr, stderr.rstrip()\n    if strip:\n      stdout = stdout.rstrip('\\r\\n')\n    return stdout\n  if verbose:\n    print >>sys.stderr, '`%s` returned %s' % (' '.join(args), p.returncode)\n  if stderr:\n    print >>sys.stderr, stderr.rstrip()\n  sys.exit(2)\n\n\ndef die(message):\n  print >>sys.stderr, 'error:', message\n  sys.exit(2)\n\n\nif __name__ == '__main__':\n  main()"
        },
        {
          "name": "objdump.cpp",
          "type": "blob",
          "size": 4.16796875,
          "content": "// objdump injection utility for Linux perf tools.\n// Profiling JIT generated code is always problematic.\n// On Linux, perf annotation tools do not automatically\n// disassemble runtime-generated code.\n// However, it's possible to override objdump utility\n// which is used to disassemeble executables.\n// This tool intercepts objdump commands, and if they\n// correspond to JIT generated objects in RPCS3,\n// it should be able to correctly disassemble them.\n// Usage:\n// 1. Make sure ~/.cache/rpcs3/ASMJIT directory exists.\n// 2. Build this utility, for example:\n//    g++-11 objdump.cpp -o objdump\n// 3. Run perf, for example:\n//    perf record -b -p `pgrep rpcs3`\n// 4. Specify --objdump override, for example:\n//    perf report --objdump=./objdump --gtk\n\n#include <cstring>\n#include <cstdio>\n#include <cstdint>\n#include <unistd.h>\n#include <sys/file.h>\n#include <sys/mman.h>\n#include <string>\n#include <vector>\n#include <charconv>\n\nstd::string to_hex(std::uint64_t value, bool prfx = true)\n{\n\tchar buf[20]{}, *ptr = buf + 19;\n\tdo *--ptr = \"0123456789abcdef\"[value % 16], value /= 16; while (value);\n\tif (!prfx) return ptr;\n\t*--ptr = 'x';\n\t*--ptr = '0';\n\treturn ptr;\n}\n\nint main(int argc, char* argv[])\n{\n\tstd::string home;\n\n\tif (const char* d = ::getenv(\"XDG_CACHE_HOME\"))\n\t\thome = d;\n\telse if (const char* d = ::getenv(\"XDG_CONFIG_HOME\"))\n\t\thome = d;\n\telse if (const char* d = ::getenv(\"HOME\"))\n\t\thome = d, home += \"/.cache\";\n\n\t// Get cache path\n\thome += \"/rpcs3/ASMJIT/\";\n\n\t// Get objects\n\tint fd = open((home + \".objects\").c_str(), O_RDONLY);\n\n\tif (fd < 0)\n\t\treturn 1;\n\n\t// Map 4GiB (full size)\n\tconst auto data = mmap(nullptr, 0x10000'0000, PROT_READ, MAP_SHARED, fd, 0);\n\n\tstruct entry\n\t{\n\t\tstd::uint64_t addr;\n\t\tstd::uint32_t size;\n\t\tstd::uint32_t off;\n\t};\n\n\t// Index part (precedes actual data)\n\tconst auto index = static_cast<const entry*>(data);\n\n\tconst entry* found = nullptr;\n\n\tstd::string out_file;\n\n\tstd::vector<std::string> args;\n\n\tfor (int i = 0; i < argc; i++)\n\t{\n\t\t// Replace args\n\t\tstd::string arg = argv[i];\n\n\t\tif (std::uintptr_t(data) != -1 && arg.find(\"--start-address=0x\") == 0)\n\t\t{\n\t\t\t// Decode address and try to find the object\n\t\t\tstd::uint64_t addr = -1;\n\n\t\t\tstd::from_chars(arg.data() + strlen(\"--start-address=0x\"), arg.data() + arg.size(), addr, 16);\n\n\t\t\tfor (int j = 0; j < 0x100'0000; j++)\n\t\t\t{\n\t\t\t\tif (index[j].addr == 0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (index[j].addr == addr)\n\t\t\t\t{\n\t\t\t\t\tfound = index + j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (found)\n\t\t\t{\n\t\t\t\t// Extract object into a new file (read file name from the mapped memory)\n\t\t\t\tconst char* name = static_cast<char*>(data) + found->off + found->size;\n\n\t\t\t\tif (name[0])\n\t\t\t\t{\n\t\t\t\t\tout_file = home + name;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tout_file = \"/tmp/rpcs3.objdump.\" + std::to_string(getpid());\n\t\t\t\t\tunlink(out_file.c_str());\n\t\t\t\t}\n\n\t\t\t\tconst int fd2 = open(out_file.c_str(), O_WRONLY | O_CREAT | O_EXCL, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\n\n\t\t\t\tif (fd2 > 0)\n\t\t\t\t{\n\t\t\t\t\t// Don't overwrite if exists\n\t\t\t\t\twrite(fd2, static_cast<char*>(data) + found->off, found->size);\n\t\t\t\t\tclose(fd2);\n\t\t\t\t}\n\n\t\t\t\targs.emplace_back(\"--adjust-vma=\" + to_hex(addr));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (found && arg.find(\"--stop-address=0x\") == 0)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (found && arg == \"-d\")\n\t\t{\n\t\t\targ = \"-D\";\n\t\t}\n\n\t\tif (arg == \"-l\")\n\t\t{\n\t\t\targ = \"-Mintel,x86-64\";\n\t\t}\n\n\t\targs.emplace_back(std::move(arg));\n\t}\n\n\tif (found)\n\t{\n\t\targs.pop_back();\n\t\targs.emplace_back(\"-b\");\n\t\targs.emplace_back(\"binary\");\n\t\targs.emplace_back(\"-m\");\n\t\targs.emplace_back(\"i386:x86-64\");\n\t\targs.emplace_back(std::move(out_file));\n\t}\n\n\targs[0] = \"/usr/bin/objdump\";\n\n\tstd::vector<char*> new_argv;\n\n\tfor (auto& arg : args)\n\t{\n\t\tnew_argv.push_back(arg.data());\n\t}\n\n\tnew_argv.push_back(nullptr);\n\n\tif (found)\n\t{\n\t\tint fds[2];\n\t\tpipe(fds);\n\n\t\tif (fork() > 0)\n\t\t{\n\t\t\tclose(fds[1]);\n\t\t\tchar c = 0;\n\t\t\tstd::string buf;\n\n\t\t\twhile (read(fds[0], &c, 1) != 0)\n\t\t\t{\n\t\t\t\tif (c)\n\t\t\t\t{\n\t\t\t\t\tbuf += c;\n\n\t\t\t\t\tif (c == '\\n')\n\t\t\t\t\t{\n\t\t\t\t\t\twrite(STDOUT_FILENO, buf.data(), buf.size());\n\t\t\t\t\t\tbuf.clear();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc = 0;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile ((dup2(fds[1], STDOUT_FILENO) == -1) && (errno == EINTR)) {}\n\t\t\tclose(fds[1]);\n\t\t\tclose(fds[0]);\n\t\t\t// Fallthrough\n\t\t}\n\t}\n\n\treturn execv(new_argv[0], new_argv.data());\n}\n"
        },
        {
          "name": "pre-commit.readme",
          "type": "blob",
          "size": 0.28515625,
          "content": "#!/bin/bash\n\n# git pre-commit hook that run git-clang-format when committing.\n# To use it install clang-format and python 2.7 then copy this\n# file to .git/hooks/ and remove the extension\n\ngit clang-format --style=file --diff > style.patch\ngit apply --index style.patch\nrm style.patch\nexit 0\n"
        },
        {
          "name": "rpcs3.sln",
          "type": "blob",
          "size": 17.8720703125,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.3.32929.385\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"asmjit\", \"3rdparty\\asmjit\\asmjit.vcxproj\", \"{AC40FF01-426E-4838-A317-66354CEFAE88}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"emucore\", \"rpcs3\\emucore.vcxproj\", \"{C4A10229-4712-4BD2-B63E-50D93C67A038}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3} = {2C902C67-985C-4BE0-94A3-E0FE2EB929A3}\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF} = {3C67A2FF-4710-402A-BE3E-31B0CB0576DF}\n\t\t{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0} = {5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0}\n\t\t{8846A9AA-5539-4C91-8301-F54260E1A07A} = {8846A9AA-5539-4C91-8301-F54260E1A07A}\n\t\t{939FE206-1182-ABC3-1234-FEAB88E98404} = {939FE206-1182-ABC3-1234-FEAB88E98404}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"llvm_build\", \"3rdparty\\llvm\\llvm_build.vcxproj\", \"{8BC303AB-25BE-4276-8E57-73F171B2D672}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GLGSRender\", \"rpcs3\\GLGSRender.vcxproj\", \"{3384223A-6D97-4799-9862-359F85312892}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"rpcs3.emu\", \"rpcs3.emu\", \"{10FBF193-D532-4CCF-B875-4C7091A7F6C2}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"XAudio\", \"rpcs3\\XAudio.vcxproj\", \"{78CB2F39-B809-4A06-8329-8C0A19119D3D}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"pnglibconf\", \"3rdparty\\libpng\\pnglibconf.vcxproj\", \"{EB33566E-DA7F-4D28-9077-88C0B7C77E35}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libpng\", \"3rdparty\\libpng\\libpng.vcxproj\", \"{D6973076-9317-4EF2-A0B8-B7A18AC0713E}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF} = {60F89955-91C6-3A36-8000-13C592FEC2DF}\n\t\t{EB33566E-DA7F-4D28-9077-88C0B7C77E35} = {EB33566E-DA7F-4D28-9077-88C0B7C77E35}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlib\", \"3rdparty\\zlib\\zlib.vcxproj\", \"{60F89955-91C6-3A36-8000-13C592FEC2DF}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"glslang\", \"3rdparty\\glslang\\glslang.vcxproj\", \"{8F85B6CC-250F-4ACA-A617-E820A74E3E3C}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"VKGSRender\", \"rpcs3\\VKGSRender.vcxproj\", \"{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{8F85B6CC-250F-4ACA-A617-E820A74E3E3C} = {8F85B6CC-250F-4ACA-A617-E820A74E3E3C}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"__BUILD_BEFORE\", \"__BUILD_BEFORE\", \"{B0AC29FD-7B01-4B5E-9C8D-0A081E4C5668}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"yaml-cpp\", \"3rdparty\\yaml-cpp\\yaml-cpp.vcxproj\", \"{FDC361C5-7734-493B-8CFB-037308B35122}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"rpcs3\", \"rpcs3\\rpcs3.vcxproj\", \"{70CD65B0-91D6-4FAE-9A7B-4AF55D0D1B12}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3} = {2C902C67-985C-4BE0-94A3-E0FE2EB929A3}\n\t\t{3384223A-6D97-4799-9862-359F85312892} = {3384223A-6D97-4799-9862-359F85312892}\n\t\t{349EE8F9-7D25-4909-AAF5-FF3FADE72187} = {349EE8F9-7D25-4909-AAF5-FF3FADE72187}\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF} = {3C67A2FF-4710-402A-BE3E-31B0CB0576DF}\n\t\t{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D} = {3EE5F075-B546-42C4-B6A8-E3CCEF38B78D}\n\t\t{508C291A-3D18-49F5-B25D-F7C8DB92CB21} = {508C291A-3D18-49F5-B25D-F7C8DB92CB21}\n\t\t{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C} = {5B146DEA-9ACE-4D32-A7FD-3F42464DD69C}\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF} = {60F89955-91C6-3A36-8000-13C592FEC2DF}\n\t\t{78CB2F39-B809-4A06-8329-8C0A19119D3D} = {78CB2F39-B809-4A06-8329-8C0A19119D3D}\n\t\t{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA} = {8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA}\n\t\t{8F85B6CC-250F-4ACA-A617-E820A74E3E3C} = {8F85B6CC-250F-4ACA-A617-E820A74E3E3C}\n\t\t{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2} = {9610627D-20FE-4B07-8CE3-9FF68A5F1EC2}\n\t\t{A107C21C-418A-4697-BB10-20C3AA60E2E4} = {A107C21C-418A-4697-BB10-20C3AA60E2E4}\n\t\t{AC40FF01-426E-4838-A317-66354CEFAE88} = {AC40FF01-426E-4838-A317-66354CEFAE88}\n\t\t{C4A10229-4712-4BD2-B63E-50D93C67A038} = {C4A10229-4712-4BD2-B63E-50D93C67A038}\n\t\t{D6973076-9317-4EF2-A0B8-B7A18AC0713E} = {D6973076-9317-4EF2-A0B8-B7A18AC0713E}\n\t\t{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB} = {DA6F56B4-06A4-441D-AD70-AC5A7D51FADB}\n\t\t{FDA7B080-03B0-48C8-B24F-88118981422A} = {FDA7B080-03B0-48C8-B24F-88118981422A}\n\t\t{FDC361C5-7734-493B-8CFB-037308B35122} = {FDC361C5-7734-493B-8CFB-037308B35122}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"hidapi\", \"3rdparty\\hidapi\\hidapi.vcxproj\", \"{A107C21C-418A-4697-BB10-20C3AA60E2E4}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"xxhash\", \"3rdparty\\xxhash.vcxproj\", \"{939FE206-1182-ABC3-1234-FEAB88E98404}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libusb-1.0 (static)\", \"3rdparty\\libusb\\libusb_static.vcxproj\", \"{349EE8F9-7D25-4909-AAF5-FF3FADE72187}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"wolfssl\", \"3rdparty\\wolfssl\\wolfssl.vcxproj\", \"{73973223-5EE8-41CA-8E88-1D60E89A237B}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libcurl\", \"3rdparty\\curl\\libcurl.vcxproj\", \"{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{73973223-5EE8-41CA-8E88-1D60E89A237B} = {73973223-5EE8-41CA-8E88-1D60E89A237B}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"3rdParty\", \"3rdParty\", \"{6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"llvm_build_clang_cl\", \"3rdparty\\llvm\\llvm_build_clang_cl.vcxproj\", \"{A37E4273-85DB-4217-B775-CE971B87D9DF}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Cubeb\", \"rpcs3\\Cubeb.vcxproj\", \"{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libcubeb\", \"3rdparty\\cubeb\\libcubeb.vcxproj\", \"{FDA7B080-03B0-48C8-B24F-88118981422A}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"soundtouch\", \"3rdparty\\SoundTouch\\soundtouch.vcxproj\", \"{508C291A-3D18-49F5-B25D-F7C8DB92CB21}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"SDL\", \"3rdparty\\libsdl-org\\SDL.vcxproj\", \"{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"pine\", \"pine\", \"{A55DA1B5-CC17-4525-BE7F-1659CE17BB56}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t3rdparty\\pine\\pine_server.h = 3rdparty\\pine\\pine_server.h\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"miniupnpc_static\", \"3rdparty\\miniupnp\\miniupnpc_static.vcxproj\", \"{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"rtmidi\", \"3rdparty\\rtmidi\\rtmidi.vcxproj\", \"{2C902C67-985C-4BE0-94A3-E0FE2EB929A3}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zstd\", \"3rdparty\\zstd\\zstd.vcxproj\", \"{4E52A41A-F33B-4C7A-8C36-A1A6B4F4277C}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"7zip\", \"3rdparty\\7zip\\7zip.vcxproj\", \"{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"openal-soft\", \"3rdparty\\openal\\openal-soft.vcxproj\", \"{8846A9AA-5539-4C91-8301-F54260E1A07A}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"fusion\", \"3rdparty\\fusion\\fusion.vcxproj\", \"{3C67A2FF-4710-402A-BE3E-31B0CB0576DF}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{AC40FF01-426E-4838-A317-66354CEFAE88}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{AC40FF01-426E-4838-A317-66354CEFAE88}.Debug|x64.Build.0 = Debug|x64\n\t\t{AC40FF01-426E-4838-A317-66354CEFAE88}.Release|x64.ActiveCfg = Release|x64\n\t\t{AC40FF01-426E-4838-A317-66354CEFAE88}.Release|x64.Build.0 = Release|x64\n\t\t{C4A10229-4712-4BD2-B63E-50D93C67A038}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{C4A10229-4712-4BD2-B63E-50D93C67A038}.Debug|x64.Build.0 = Debug|x64\n\t\t{C4A10229-4712-4BD2-B63E-50D93C67A038}.Release|x64.ActiveCfg = Release|x64\n\t\t{C4A10229-4712-4BD2-B63E-50D93C67A038}.Release|x64.Build.0 = Release|x64\n\t\t{8BC303AB-25BE-4276-8E57-73F171B2D672}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8BC303AB-25BE-4276-8E57-73F171B2D672}.Release|x64.ActiveCfg = Release|x64\n\t\t{3384223A-6D97-4799-9862-359F85312892}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{3384223A-6D97-4799-9862-359F85312892}.Debug|x64.Build.0 = Debug|x64\n\t\t{3384223A-6D97-4799-9862-359F85312892}.Release|x64.ActiveCfg = Release|x64\n\t\t{3384223A-6D97-4799-9862-359F85312892}.Release|x64.Build.0 = Release|x64\n\t\t{78CB2F39-B809-4A06-8329-8C0A19119D3D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{78CB2F39-B809-4A06-8329-8C0A19119D3D}.Debug|x64.Build.0 = Debug|x64\n\t\t{78CB2F39-B809-4A06-8329-8C0A19119D3D}.Release|x64.ActiveCfg = Release|x64\n\t\t{78CB2F39-B809-4A06-8329-8C0A19119D3D}.Release|x64.Build.0 = Release|x64\n\t\t{EB33566E-DA7F-4D28-9077-88C0B7C77E35}.Debug|x64.ActiveCfg = Release|x64\n\t\t{EB33566E-DA7F-4D28-9077-88C0B7C77E35}.Debug|x64.Build.0 = Release|x64\n\t\t{EB33566E-DA7F-4D28-9077-88C0B7C77E35}.Release|x64.ActiveCfg = Release|x64\n\t\t{EB33566E-DA7F-4D28-9077-88C0B7C77E35}.Release|x64.Build.0 = Release|x64\n\t\t{D6973076-9317-4EF2-A0B8-B7A18AC0713E}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{D6973076-9317-4EF2-A0B8-B7A18AC0713E}.Debug|x64.Build.0 = Debug|x64\n\t\t{D6973076-9317-4EF2-A0B8-B7A18AC0713E}.Release|x64.ActiveCfg = Release|x64\n\t\t{D6973076-9317-4EF2-A0B8-B7A18AC0713E}.Release|x64.Build.0 = Release|x64\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF}.Debug|x64.Build.0 = Debug|x64\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF}.Release|x64.ActiveCfg = Release|x64\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF}.Release|x64.Build.0 = Release|x64\n\t\t{8F85B6CC-250F-4ACA-A617-E820A74E3E3C}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8F85B6CC-250F-4ACA-A617-E820A74E3E3C}.Release|x64.ActiveCfg = Release|x64\n\t\t{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D}.Debug|x64.Build.0 = Debug|x64\n\t\t{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D}.Release|x64.ActiveCfg = Release|x64\n\t\t{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D}.Release|x64.Build.0 = Release|x64\n\t\t{FDC361C5-7734-493B-8CFB-037308B35122}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{FDC361C5-7734-493B-8CFB-037308B35122}.Debug|x64.Build.0 = Debug|x64\n\t\t{FDC361C5-7734-493B-8CFB-037308B35122}.Release|x64.ActiveCfg = Release|x64\n\t\t{FDC361C5-7734-493B-8CFB-037308B35122}.Release|x64.Build.0 = Release|x64\n\t\t{70CD65B0-91D6-4FAE-9A7B-4AF55D0D1B12}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{70CD65B0-91D6-4FAE-9A7B-4AF55D0D1B12}.Debug|x64.Build.0 = Debug|x64\n\t\t{70CD65B0-91D6-4FAE-9A7B-4AF55D0D1B12}.Release|x64.ActiveCfg = Release|x64\n\t\t{70CD65B0-91D6-4FAE-9A7B-4AF55D0D1B12}.Release|x64.Build.0 = Release|x64\n\t\t{A107C21C-418A-4697-BB10-20C3AA60E2E4}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{A107C21C-418A-4697-BB10-20C3AA60E2E4}.Debug|x64.Build.0 = Debug|x64\n\t\t{A107C21C-418A-4697-BB10-20C3AA60E2E4}.Release|x64.ActiveCfg = Release|x64\n\t\t{A107C21C-418A-4697-BB10-20C3AA60E2E4}.Release|x64.Build.0 = Release|x64\n\t\t{939FE206-1182-ABC3-1234-FEAB88E98404}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{939FE206-1182-ABC3-1234-FEAB88E98404}.Debug|x64.Build.0 = Debug|x64\n\t\t{939FE206-1182-ABC3-1234-FEAB88E98404}.Release|x64.ActiveCfg = Release|x64\n\t\t{939FE206-1182-ABC3-1234-FEAB88E98404}.Release|x64.Build.0 = Release|x64\n\t\t{349EE8F9-7D25-4909-AAF5-FF3FADE72187}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{349EE8F9-7D25-4909-AAF5-FF3FADE72187}.Debug|x64.Build.0 = Debug|x64\n\t\t{349EE8F9-7D25-4909-AAF5-FF3FADE72187}.Release|x64.ActiveCfg = Release|x64\n\t\t{349EE8F9-7D25-4909-AAF5-FF3FADE72187}.Release|x64.Build.0 = Release|x64\n\t\t{73973223-5EE8-41CA-8E88-1D60E89A237B}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{73973223-5EE8-41CA-8E88-1D60E89A237B}.Debug|x64.Build.0 = Debug|x64\n\t\t{73973223-5EE8-41CA-8E88-1D60E89A237B}.Release|x64.ActiveCfg = Release|x64\n\t\t{73973223-5EE8-41CA-8E88-1D60E89A237B}.Release|x64.Build.0 = Release|x64\n\t\t{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB}.Debug|x64.Build.0 = Debug|x64\n\t\t{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB}.Release|x64.ActiveCfg = Release|x64\n\t\t{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB}.Release|x64.Build.0 = Release|x64\n\t\t{A37E4273-85DB-4217-B775-CE971B87D9DF}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{A37E4273-85DB-4217-B775-CE971B87D9DF}.Release|x64.ActiveCfg = Release|x64\n\t\t{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2}.Debug|x64.Build.0 = Debug|x64\n\t\t{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2}.Release|x64.ActiveCfg = Release|x64\n\t\t{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2}.Release|x64.Build.0 = Release|x64\n\t\t{FDA7B080-03B0-48C8-B24F-88118981422A}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{FDA7B080-03B0-48C8-B24F-88118981422A}.Debug|x64.Build.0 = Debug|x64\n\t\t{FDA7B080-03B0-48C8-B24F-88118981422A}.Release|x64.ActiveCfg = Release|x64\n\t\t{FDA7B080-03B0-48C8-B24F-88118981422A}.Release|x64.Build.0 = Release|x64\n\t\t{508C291A-3D18-49F5-B25D-F7C8DB92CB21}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{508C291A-3D18-49F5-B25D-F7C8DB92CB21}.Debug|x64.Build.0 = Debug|x64\n\t\t{508C291A-3D18-49F5-B25D-F7C8DB92CB21}.Release|x64.ActiveCfg = Release|x64\n\t\t{508C291A-3D18-49F5-B25D-F7C8DB92CB21}.Release|x64.Build.0 = Release|x64\n\t\t{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA}.Debug|x64.Build.0 = Debug|x64\n\t\t{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA}.Release|x64.ActiveCfg = Release|x64\n\t\t{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA}.Release|x64.Build.0 = Release|x64\n\t\t{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0}.Debug|x64.Build.0 = Debug|x64\n\t\t{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0}.Release|x64.ActiveCfg = Release|x64\n\t\t{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0}.Release|x64.Build.0 = Release|x64\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3}.Debug|x64.Build.0 = Debug|x64\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3}.Release|x64.ActiveCfg = Release|x64\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3}.Release|x64.Build.0 = Release|x64\n\t\t{4E52A41A-F33B-4C7A-8C36-A1A6B4F4277C}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{4E52A41A-F33B-4C7A-8C36-A1A6B4F4277C}.Debug|x64.Build.0 = Debug|x64\n\t\t{4E52A41A-F33B-4C7A-8C36-A1A6B4F4277C}.Release|x64.ActiveCfg = Release|x64\n\t\t{4E52A41A-F33B-4C7A-8C36-A1A6B4F4277C}.Release|x64.Build.0 = Release|x64\n\t\t{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C}.Debug|x64.Build.0 = Debug|x64\n\t\t{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C}.Release|x64.ActiveCfg = Release|x64\n\t\t{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C}.Release|x64.Build.0 = Release|x64\n\t\t{8846A9AA-5539-4C91-8301-F54260E1A07A}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{8846A9AA-5539-4C91-8301-F54260E1A07A}.Debug|x64.Build.0 = Debug|x64\n\t\t{8846A9AA-5539-4C91-8301-F54260E1A07A}.Release|x64.ActiveCfg = Release|x64\n\t\t{8846A9AA-5539-4C91-8301-F54260E1A07A}.Release|x64.Build.0 = Release|x64\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF}.Debug|x64.Build.0 = Debug|x64\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF}.Release|x64.ActiveCfg = Release|x64\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF}.Release|x64.Build.0 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{AC40FF01-426E-4838-A317-66354CEFAE88} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{C4A10229-4712-4BD2-B63E-50D93C67A038} = {10FBF193-D532-4CCF-B875-4C7091A7F6C2}\n\t\t{8BC303AB-25BE-4276-8E57-73F171B2D672} = {B0AC29FD-7B01-4B5E-9C8D-0A081E4C5668}\n\t\t{3384223A-6D97-4799-9862-359F85312892} = {10FBF193-D532-4CCF-B875-4C7091A7F6C2}\n\t\t{78CB2F39-B809-4A06-8329-8C0A19119D3D} = {10FBF193-D532-4CCF-B875-4C7091A7F6C2}\n\t\t{EB33566E-DA7F-4D28-9077-88C0B7C77E35} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{D6973076-9317-4EF2-A0B8-B7A18AC0713E} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{60F89955-91C6-3A36-8000-13C592FEC2DF} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{8F85B6CC-250F-4ACA-A617-E820A74E3E3C} = {B0AC29FD-7B01-4B5E-9C8D-0A081E4C5668}\n\t\t{3EE5F075-B546-42C4-B6A8-E3CCEF38B78D} = {10FBF193-D532-4CCF-B875-4C7091A7F6C2}\n\t\t{FDC361C5-7734-493B-8CFB-037308B35122} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{A107C21C-418A-4697-BB10-20C3AA60E2E4} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{939FE206-1182-ABC3-1234-FEAB88E98404} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{349EE8F9-7D25-4909-AAF5-FF3FADE72187} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{73973223-5EE8-41CA-8E88-1D60E89A237B} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{DA6F56B4-06A4-441D-AD70-AC5A7D51FADB} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{A37E4273-85DB-4217-B775-CE971B87D9DF} = {B0AC29FD-7B01-4B5E-9C8D-0A081E4C5668}\n\t\t{9610627D-20FE-4B07-8CE3-9FF68A5F1EC2} = {10FBF193-D532-4CCF-B875-4C7091A7F6C2}\n\t\t{FDA7B080-03B0-48C8-B24F-88118981422A} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{508C291A-3D18-49F5-B25D-F7C8DB92CB21} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{8DC244EE-A0BD-4038-BAF7-CFAFA5EB2BAA} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{A55DA1B5-CC17-4525-BE7F-1659CE17BB56} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{5228F863-E0DD-4DE7-AA7B-5C52B14CD4D0} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{2C902C67-985C-4BE0-94A3-E0FE2EB929A3} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{4E52A41A-F33B-4C7A-8C36-A1A6B4F4277C} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{5B146DEA-9ACE-4D32-A7FD-3F42464DD69C} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{8846A9AA-5539-4C91-8301-F54260E1A07A} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\t\t{3C67A2FF-4710-402A-BE3E-31B0CB0576DF} = {6C3B64A0-8F8A-4DC4-8C0B-D71EBEED7FA8}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {06CC7920-E085-4B81-9582-8DE8AAD42510}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "rpcs3",
          "type": "tree",
          "content": null
        },
        {
          "name": "usertype.dat",
          "type": "blob",
          "size": 0.033203125,
          "content": "throw_exception\nrethrow_exception\n"
        }
      ]
    }
  ]
}