{
  "metadata": {
    "timestamp": 1736566319842,
    "page": 73,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apple/foundationdb",
      "stars": 14718,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.0166015625,
          "content": "Language:        Cpp\n# BasedOnStyle:  Mozilla\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: false\nAlignOperands:   true\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nColumnLimit:     120\nCommentPragmas:  '^ IWYU pragma:|^ clang-format: ignore$|^TraceEvent'\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 2\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    false\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp11\nTabWidth: 4\nUseTab: ForIndentation\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.2314453125,
          "content": "[flake8]\nignore = E203, E266, E402, E501, W503, F403, F401, E711, C901, E721, W605\nmax-line-length = 88\nmax-complexity = 18\nselect = B,C,E,F,W,T4,B9\nexclude = contrib/Implib.so/implib-gen.py,documentation/sphinx/extensions/rubydomain.py\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.154296875,
          "content": "# clang-format the entire codebase\ndf90cc89de67ea4748c8cadd18e6fc4ce7fda12e\n2c788c233db56ccec4ed90d7da31887487b9f3b7\n69508b980f3cc5aabea6322f292e53b07bb27544\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0771484375,
          "content": "# Build artifacts\n/my_build/\n/bin/\n/lib/\n/packages/\nbindings/flow/bin/\nbindings/java/foundationdb-client*.jar\nbindings/java/foundationdb-tests*.jar\nbindings/java/fdb-java-*-sources.jar\npackaging/msi/FDBInstaller.msi\nbuild/\ncmake-build-*/\n\n# Generated source, build, and packaging files\n*.g.cpp\n*.g.h\n*.g.S\n*.g.asm\n*.pom\nbindings/java/pom*.xml\nbindings/java/src*/main/overview.html\nbindings/java/src*/main/com/apple/foundationdb/NetworkOptions.java\nbindings/java/src*/main/com/apple/foundationdb/DatabaseOptions.java\nbindings/java/src*/main/com/apple/foundationdb/TransactionOptions.java\nbindings/java/src*/main/com/apple/foundationdb/StreamingMode.java\nbindings/java/src*/main/com/apple/foundationdb/MutationType.java\nbindings/java/src*/main/com/apple/foundationdb/ConflictRangeType.java\nbindings/java/src*/main/com/apple/foundationdb/FDBException.java\nbindings/python/fdb/fdb*options.py\nbindings/python/dist/\nbindings/python/setup.py\nbindings/python/MANIFEST\nbindings/ruby/lib/fdboptions.rb\nbindings/ruby/fdb.gemspec\nfdbclient/vexillographer/obj/\nfdbrpc/hgVersion*.h\nfdbrpc/SourceVersion*.h\nfdbrpc/libeio/config.h\nflow/hgVersion*.h\nflow/SourceVersion*.h\ngenerated.mk\nversions.h\npackaging/msi/FDBInstaller.wix*\n\n# Intermediate build artifacts and dependencies\n*.class\n*.py[cod]\n*.sass-cache\n.ccache\n.deps/\n.objs/\n.cmds/\nbindings/c/fdb_c.symbols\nbindings/go/build\nbindings/go/godoc\nbindings/java/.classstamp*\nbindings/java/classes*/\nbindings/java/javadoc*/\npackaging/docker/website\n\n# Testing and logging\npackaging/msi/*.log\npackaging/msi/obj\nsimfdb\ntests/oldBinaries\ntrace.*.xml\ntrace.*.json\n.venv\n\n# Editor files\n*.iml\n*.opensdf\n*.sdf\n*.suo\n*.user\n.idea/\n.project\n.projectile\n.dir-locals.el\n.pydevproject\n.vscode\n.vs/\nFoundationDB.xcodeproj\nfoundationdb.VC.db\nfoundationdb.VC.VC.opendb\nipch/\ncompile_commands.json\nflow/actorcompiler/obj\nflow/coveragetool/obj\n*.code-workspace\n\n# IDE indexing (commonly used tools)\n/compile_commands.json\n/.ccls-cache\n/.clangd\n/.cache\n\n# Temporary and user configuration files\n*~\n*.orig\n*.rej\n*.swp\n.envrc\n.DS_Store\ntemp/\n/versions.target\n/compile_commands.json\n/.ccls-cache\n.clangd/\n.stignore\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.421875,
          "content": "repos:\n-   repo: https://github.com/psf/black\n    rev: 2018e667a6a36ee3fbfa8041cd36512f92f60d49  # frozen: 22.8.0\n    hooks:\n    - id: black\n      exclude: |\n          (?x)^(\n              contrib/Implib.so/implib-gen.py|\n              documentation/sphinx/extensions/rubydomain.py\n          )$\n-   repo: https://github.com/pycqa/flake8\n    rev: f8e1b317742036ff11ff86356fd2b68147e169f7  # frozen: 5.0.4\n    hooks:\n    - id: flake8\n"
        },
        {
          "name": "ACKNOWLEDGEMENTS",
          "type": "blob",
          "size": 29.193359375,
          "content": "Acknowledgements\nPortions of this FoundationDB Software may utilize the following copyrighted \nmaterial, the use of which is hereby acknowledged.\n\n_____________________\n\nMark Adler, Robert Važan (CRC-32C [Castagnoli] for C++ and .NET)\n\tThis license covers C++ code of the CRC-32C library as well as binaries generated\n\tfrom it. It is standard zlib license. .NET code is distributed under BSD license.\n\n\tCopyright (c) 2013 - 2014 Mark Adler, Robert Važan\n\n\tThis software is provided ‘as-is’, without any express or implied warranty. In no\n\tevent will the author be held liable for any damages arising from the use of this\n\tsoftware.\n\n\tPermission is granted to anyone to use this software for any purpose, including\n\tcommercial applications, and to alter it and redistribute it freely, subject to\n\tthe following restrictions:\n\n\t1. The origin of this software must not be misrepresented; you must not claim that\n\tyou wrote the original software. If you use this software in a product, an\n\tacknowledgment in the product documentation would be appreciated but is not required.\n\n\t2. Altered source versions must be plainly marked as such, and must not be\n\tmisrepresented as being the original software.\n\n\t3. This notice may not be removed or altered from any source distribution.\n\nRuss Cox (asm.S from libcoroutine)\n\tThis software was developed as part of a project at MIT.\n\n\tCopyright (c) 2005-2007 Russ Cox,\n\t                   Massachusetts Institute of Technology\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the\n\t\"Software\"), to deal in the Software without restriction, including\n\twithout limitation the rights to use, copy, modify, merge, publish,\n\tdistribute, sublicense, and/or sell copies of the Software, and to\n\tpermit persons to whom the Software is furnished to do so, subject to\n\tthe following conditions:\n\n\tThe above copyright notice and this permission notice shall be\n\tincluded in all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\tLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\tOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\tWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nBeman Dawes, Christopher M. Kohlhoff (Boost)\n\tThe Boost License (http://www.boost.org/users/license.html) does not require\n\tattribution or republication when Boost is redistributed in object code form.\n\nSteve Dekorte (libcoroutine)\n\tCopyright (c) 2002, 2003 Steve Dekorte\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification,\n\tare permitted provided that the following conditions are met:\n\n\t¥ Redistributions of source code must retain the above copyright notice, this\n\t  list of conditions and the following disclaimer.\n\n\t¥ Redistributions in binary form must reproduce the above copyright notice, this\n\t  list of conditions and the following disclaimer in the documentation and/or\n\t  other materials provided with the distribution.\n\n\t¥ Neither the name of the author nor the names of other contributors may be used\n\t  to endorse or promote products derived from this software without specific\n\t  prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\tANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\tANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe Go Authors (Go Tools)\n\tCopyright (c) 2009 The Go Authors. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are\n\tmet:\n\n\t   * Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t   * Redistributions in binary form must reproduce the above\n\tcopyright notice, this list of conditions and the following disclaimer\n\tin the documentation and/or other materials provided with the\n\tdistribution.\n\t   * Neither the name of Google Inc. nor the names of its\n\tcontributors may be used to endorse or promote products derived from\n\tthis software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\tLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\tA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\tOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\tSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\tLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\tDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\tTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\tOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nBob Jenkins (lookup3.c)\n\tBy Bob Jenkins, 1996.  bob_jenkins@burtleburtle.net.  You may use this\n\tcode any way you wish, private, educational, or commercial.  Its free.\n\nJS Foundation and other contributors (JQuery)\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the\n\t\"Software\"), to deal in the Software without restriction, including\n\twithout limitation the rights to use, copy, modify, merge, publish,\n\tdistribute, sublicense, and/or sell copies of the Software, and to\n\tpermit persons to whom the Software is furnished to do so, subject to\n\tthe following conditions:\n\n\tThe above copyright notice and this permission notice shall be\n\tincluded in all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\tLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\tOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\tWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nMarcin Kalicinski (RapidXML)\n\tCopyright (c) 2006, 2007 Marcin Kalicinski\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do so,\n\tsubject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\tTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\tIN THE SOFTWARE.\n\nMarc Alexander Lehmann (Libeio)\n\tAll files in libeio are Copyright (C)2007,2008 Marc Alexander Lehmann.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are\n\tmet:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\n\t    * Redistributions in binary form must reproduce the above\n\t      copyright notice, this list of conditions and the following\n\t      disclaimer in the documentation and/or other materials provided\n\t      with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\tLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\tA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\tOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\tSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\tLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\tDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\tTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\tOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nMicrosoft Corporation (CppWindowsService)\n\tMicrosoft Public License (Ms-PL)\n\n\tThis license governs use of the accompanying software. If you use the software,\n\tyou accept this license. If you do not accept the license, do not use the\n\tsoftware.\n\n\tDefinitions\n\tThe terms \"reproduce,\" \"reproduction,\" \"derivative works,\" and \"distribution\"\n\thave the same meaning here as under U.S. copyright law.\n\n\tA \"contribution\" is the original software, or any additions or changes to the\n\tsoftware.\n\tA \"contributor\" is any person that distributes its contribution under this\n\tlicense.\n\t\"Licensed patents\" are a contributor's patent claims that read directly on its\n\tcontribution.\n\n\tGrant of Rights\n\t(A) Copyright Grant- Subject to the terms of this license, including the license\n\tconditions and limitations in section 3, each contributor grants you a\n\tnon-exclusive, worldwide, royalty-free copyright license to reproduce its\n\tcontribution, prepare derivative works of its contribution, and distribute its\n\tcontribution or any derivative works that you create.\n\t(B) Patent Grant- Subject to the terms of this license, including the license\n\tconditions and limitations in section 3, each contributor grants you a\n\tnon-exclusive, worldwide, royalty-free license under its licensed patents to\n\tmake, have made, use, sell, offer for sale, import, and/or otherwise dispose of\n\tits contribution in the software or derivative works of the contribution in the\n\tsoftware.\n\n\tConditions and Limitations\n\t(A) No Trademark License- This license does not grant you rights to use any\n\tcontributors' name, logo, or trademarks.\n\t(B) If you bring a patent claim against any contributor over patents that you\n\tclaim are infringed by the software, your patent license from such contributor\n\tto the software ends automatically.\n\t(C) If you distribute any portion of the software, you must retain all\n\tcopyright, patent, trademark, and attribution notices that are present in the\n\tsoftware.\n\t(D) If you distribute any portion of the software in source code form, you may\n\tdo so only under this license by including a complete copy of this license with\n\tyour distribution. If you distribute any portion of the software in compiled or\n\tobject code form, you may only do so under a license that complies with this\n\tlicense.\n\t(E) The software is licensed \"as-is.\" You bear the risk of using it. The\n\tcontributors give no express warranties, guarantees, or conditions. You may have\n\tadditional consumer rights under your local laws which this license cannot\n\tchange. To the extent permitted under your local laws, the contributors exclude\n\tthe implied warranties of merchantability, fitness for a particular purpose and\n\tnon-infringement.\n\nMarcel Moolenaar (amd64-ucontext.h)\n\tCopyright (c) 1999 Marcel Moolenaar\n\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions\n\tare met:\n\t1. Redistributions of source code must retain the above copyright\n\t   notice, this list of conditions and the following disclaimer\n\t   in this position and unchanged.\n\t2. Redistributions in binary form must reproduce the above copyright\n\t   notice, this list of conditions and the following disclaimer in the\n\t   documentation and/or other materials provided with the distribution.\n\t3. The name of the author may not be used to endorse or promote products\n\t   derived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\tIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\tOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\tIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\tINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\tDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\tTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\tTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nAlexander Peslyak (md5)\n\tCopyright (c) 2001 Alexander Peslyak and it is hereby released to the\n\tgeneral public under the following terms:\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted.\n\n\tThere's ABSOLUTELY NO WARRANTY, express or implied.\n\nSteve Reid, Bruce Guenter, Volker Grabsch\n\t100% Public Domain.\n\nSalvatore Sanfilippo, Pieter Noordhuis (Linenoise)\n\tCopyright (c) 2010-2014, Salvatore Sanfilippo <antirez at gmail dot com>\n\tCopyright (c) 2010-2013, Pieter Noordhuis <pcnoordhuis at gmail dot com>\n\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\n\t* Redistributions of source code must retain the above copyright notice,\n\t  this list of conditions and the following disclaimer.\n\n\t* Redistributions in binary form must reproduce the above copyright notice,\n\t  this list of conditions and the following disclaimer in the documentation\n\t  and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\tANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\tANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\tANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nSQLite authors (SQLite)\n\tAll of the code and documentation in SQLite has been dedicated to the public \n\tdomain by the authors. All code authors, and representatives of the companies \n\tthey work for, have signed affidavits dedicating their contributions to the \n\tpublic domain and originals of those signed affidavits are stored in a \n\tfiresafe at the main offices of Hwaci. Anyone is free to copy, modify, publish,\n\tuse, compile, sell, or distribute the original SQLite code, either in source \n\tcode form or as a compiled binary, for any purpose, commercial or \n\tnon-commercial, and by any means.\n\nThe Abseil Authors (Abseil)\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t     http://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\nBrodie Thiesfield (SimpleIni, SimpleOpt)\n\tCopyright (c) 2006-2012, Brodie Thiesfield\n\n\tPermission is hereby granted, free of charge, to any person obtaining a\n\tcopy of this software and associated documentation files (the \"Software\"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\tOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\tCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\tSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nTHL A29 Limited, Milo Yip (RapidJSON)\n\tCopyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip. All rights reserved.\n\n\tLicensed under the MIT License (the \"License\"); you may not use this file except\n\tin compliance with the License. You may obtain a copy of the License at\n\n\thttp://opensource.org/licenses/MIT\n\n\tUnless required by applicable law or agreed to in writing, software distributed\n\tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n\tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n\tspecific language governing permissions and limitations under the License.\n\nUnicode, Inc. (ConvertUTF from SimpleIni)\n\tCopyright 2001-2004 Unicode, Inc.\n\n\tDisclaimer\n\n\tThis source code is provided as is by Unicode, Inc. No claims are\n\tmade as to fitness for any particular purpose. No warranties of any\n\tkind are expressed or implied. The recipient agrees to determine\n\tapplicability of information provided. If this file has been\n\tpurchased on magnetic or optical media from Unicode, Inc., the\n\tsole remedy for any claim will be exchange of defective media\n\twithin 90 days of receipt.\n\n\tLimitations on Rights to Redistribute This Code\n\n\tUnicode, Inc. hereby grants the right to freely use the information\n\tsupplied in this file in the creation of products supporting the\n\tUnicode Standard, and to make copies of this file in any form\n\tfor internal or external distribution as long as this notice\n\tremains attached.\n\nChris Venter (libb64)\n\tThe libb64 project has been placed in the public domain.\n\nDmitry Vyukov (Intrusive MPSC node-based queue)\n\tCopyright (c) 2010-2011 Dmitry Vyukov. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification,\n\tare permitted provided that the following conditions are met:\n\n\t   1. Redistributions of source code must retain the above copyright notice,\n\t      this list of conditions and the following disclaimer.\n\n\t   2. Redistributions in binary form must reproduce the above copyright notice,\n\t      this list of conditions and the following disclaimer in the documentation\n\t      and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY DMITRY VYUKOV \"AS IS\" AND ANY EXPRESS OR IMPLIED\n\tWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\tMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n\tSHALL DMITRY VYUKOV OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\tINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\tLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\tPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\tLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n\tOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\tADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nJohn W. Wilkinson (JSON Spirit)\n\tCopyright (c) 2007 - 2010 John W. Wilkinson\n\n\tPermission is hereby granted, free of charge, to any person obtaining a\n\tcopy of this software and associated documentation files (the \"Software\"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\tOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\tCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\tSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nSHIBUKAWA Yoshiki (sphinxcontrib-rubydomain)\n\tCopyright (c) 2010 by SHIBUKAWA Yoshiki.\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are\n\tmet:\n\n\t* Redistributions of source code must retain the above copyright\n\t  notice, this list of conditions and the following disclaimer.\n\n\t* Redistributions in binary form must reproduce the above copyright\n\t  notice, this list of conditions and the following disclaimer in the\n\t  documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\tLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\tA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\tOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\tSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\tLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\tDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\tTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\tOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nArmon Dadgar (ART)\n    Copyright (c) 2012, Armon Dadgar\n    All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n           modification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n           notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n           notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n    * Neither the name of the organization nor the\n    names of its contributors may be used to endorse or promote products\n    derived from this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n           ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n    DISCLAIMED. IN NO EVENT SHALL ARMON DADGAR BE LIABLE FOR ANY\n    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n           ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n           (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCopyright (C) 2009 The Guava Authors\n\t\n\tLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n\tin compliance with the License. You may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\n \tUnless required by applicable law or agreed to in writing, software distributed under the License\n\tis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n\tor implied. See the License for the specific language governing permissions and limitations under\n\tthe License.\n\nsse2neon Authors (sse2neon)\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n\n\nrte_memcpy.h (from DPDK):\n   SPDX-License-Identifier: BSD-3-Clause\n   Copyright(c) 2010-2014 Intel Corporation\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n   3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from this\n   software without specific prior written permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   POSSIBILITY OF SUCH DAMAGE.\n\nfolly_memcpy:\n\n Copyright (c) Facebook, Inc. and its affiliates.\n Author: Bin Liu <binliu@fb.com>\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n\nArm Limited (optimized-routines)\n\n    MIT License\n\n    Copyright (c) 1999-2019, Arm Limited.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 9.681640625,
          "content": "#\n# CMakeLists.txt\n#\n# This source file is part of the FoundationDB open source project\n#\n# Copyright 2013-2024 Apple Inc. and the FoundationDB project authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\ncmake_minimum_required(VERSION 3.24.2)\n\n# silence deprecation warnings in newer versions of cmake\nif(POLICY CMP0135)\n  cmake_policy(SET CMP0135 NEW)\nendif()\n\nproject(foundationdb\n  VERSION 7.4.0\n  DESCRIPTION \"FoundationDB is a scalable, fault-tolerant, ordered key-value store with full ACID transactions.\"\n  HOMEPAGE_URL \"http://www.foundationdb.org/\"\n  LANGUAGES C CXX ASM Swift)\n\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\nmessage (STATUS \"${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR}\")\nif(\"${PROJECT_SOURCE_DIR}\" STREQUAL \"${PROJECT_BINARY_DIR}\")\n  message(FATAL_ERROR \"In-source builds are forbidden\")\nendif()\n\nset(OPEN_FOR_IDE OFF CACHE BOOL \"Open this in an IDE (won't compile/link)\")\nset(AUTO_DISCOVER_UNIT_TESTS OFF CACHE BOOL \"Automatically discover unit-tests\")\n\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n  if (OPEN_FOR_IDE)\n    message(STATUS \"Defaulting build type to 'Debug' for OPEN_FOR_IDE\")\n    set(CMAKE_BUILD_TYPE Debug CACHE STRING \"Choose the type of build\" FORCE)\n  else()\n    message(STATUS \"Setting build type to 'Release' as none was specified\")\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\"\n      \"MinSizeRel\" \"RelWithDebInfo\")\n  endif()\nendif()\n\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\nset(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\n\noption(WITH_ACAC \"Enable actor stack recording\" OFF)\nif (WITH_ACAC)\n  message(STATUS \"Build FoundationDB with AcAC support\")\n  if (FDB_RELEASE OR FDB_RELEASE_CANDIDATE)\n\tmessage(FATAL_ERROR \"ACAC will cause severe slowdown of the system and SHOULD not be enabled in Release.\")\n  endif()\n  add_compile_definitions(WITH_ACAC)\nendif()\n\n################################################################################\n# Packages used for bindings\n################################################################################\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/\")\n\n################################################################################\n# Compiler configuration\n################################################################################\n\ninclude(ConfigureCompiler)\n\n################################################################################\n# Components configuration\n################################################################################\n\ninclude(FDBComponents)\n\n################################################################################\n# Get repository information\n################################################################################\n\nadd_custom_target(branch_file ALL DEPENDS ${CURR_BRANCH_FILE})\nexecute_process(\n  COMMAND git rev-parse HEAD\n  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}\n  OUTPUT_VARIABLE CURRENT_GIT_VERSION_WNL\n  OUTPUT_STRIP_TRAILING_WHITESPACE)\nstring(STRIP \"${CURRENT_GIT_VERSION_WNL}\" CURRENT_GIT_VERSION)\nmessage(STATUS \"Current git version ${CURRENT_GIT_VERSION}\")\n\n################################################################################\n# Version information\n################################################################################\nif (FDB_RELEASE_CANDIDATE)\n    set(FDB_RELEASE_CANDIDATE_VERSION 1 CACHE STRING \"release candidate version\")\n    set(FDB_VERSION ${PROJECT_VERSION}-rc${FDB_RELEASE_CANDIDATE_VERSION})\nelse()\n    set(FDB_VERSION ${PROJECT_VERSION})\nendif()\nif (NOT FDB_RELEASE)\n    string(TIMESTAMP FDB_BUILD_TIMESTMAP %Y%m%d%H%M%S)\n    # Adding support to pass custom fdb_build timestamp,\n    # required to achieve uniform naming across different builds\n    set(FDB_BUILDTIME \"${FDB_BUILD_TIMESTMAP}\" CACHE STRING \"A timestamp for packages\")\n    set(FDB_BUILDTIME_STRING \".${FDB_BUILDTIME}\")\n    set(PRERELEASE_TAG \"prerelease\")\nendif()\nset(FDB_VERSION_PLAIN ${FDB_VERSION})\nstring(REPLACE \".\" \";\" FDB_VERSION_LIST ${FDB_VERSION_PLAIN})\nlist(GET FDB_VERSION_LIST 0 FDB_MAJOR)\nlist(GET FDB_VERSION_LIST 1 FDB_MINOR)\nlist(GET FDB_VERSION_LIST 2 FDB_PATCH)\nset(FDB_PACKAGE_NAME \"${FDB_MAJOR}.${FDB_MINOR}\")\nconfigure_file(${CMAKE_SOURCE_DIR}/versions.target.cmake ${CMAKE_CURRENT_BINARY_DIR}/versions.target)\nfile(WRITE ${CMAKE_BINARY_DIR}/version.txt ${FDB_VERSION})\n\nset(FDB_CURRENT_VERSION ${PROJECT_VERSION})\nset(FDB_FUTURE_VERSION \"7.5.0\")\nset(FDB_PREV_RELEASE_VERSION \"7.3.41\")\nset(FDB_PREV2_RELEASE_VERSION \"7.1.33\")\n\n################################################################################\n# Flow\n################################################################################\n\ninclude(utils)\n\n# Flow and other tools are written in C# - so we need that dependency\ninclude(EnableCsharp)\n\n# First thing we need is the actor compiler - and to compile and run the\n# actor compiler, we need mono\ninclude(CompileActorCompiler)\n\ninclude(CompileCoverageTool)\n\n# with the actor compiler, we can now make the flow commands available\ninclude(FlowCommands)\n\n################################################################################\n# Vexilographer\n################################################################################\n\ninclude(CompileVexillographer)\n\n################################################################################\n# Generate config file\n################################################################################\n\nstring(RANDOM LENGTH 8 description1)\nstring(RANDOM LENGTH 8 description2)\nset(CLUSTER_DESCRIPTION1 ${description1} CACHE STRING \"Cluster description\")\nset(CLUSTER_DESCRIPTION2 ${description2} CACHE STRING \"Cluster description\")\n\nconfigure_file(fdb.cluster.cmake ${CMAKE_CURRENT_BINARY_DIR}/fdb.cluster)\n\n\n################################################################################\n# testing\n################################################################################\ninclude(CTest)\nenable_testing()\n\n################################################################################\n# Directory structure\n################################################################################\n\ninclude(cmake/InstallLayout.cmake)\n\n################################################################################\n# Random seed\n################################################################################\n\nstring(RANDOM LENGTH 8 ALPHABET \"0123456789abcdef\" SEED_)\nset(SEED \"0x${SEED_}\" CACHE STRING \"Random seed for testing\")\n\n################################################################################\n# components\n################################################################################\n\nif(CMAKE_SYSTEM_NAME STREQUAL \"FreeBSD\")\n  include_directories(/usr/local/include)\nendif()\n\ninclude(CompileBoost)\ninclude(GetFmt)\ninclude(GetMsgpack)\nadd_subdirectory(contrib)\nadd_subdirectory(flow)\nadd_subdirectory(fdbrpc)\nadd_subdirectory(fdbclient)\nadd_subdirectory(fdbserver)\nadd_subdirectory(fdbcli)\nif(NOT WIN32)\n  if (NOT FOUNDATIONDB_CROSS_COMPILING) # FIXME(swift): make this work when x-compiling.\n    add_subdirectory(fdbmonitor)\n  endif()\nelse()\n  add_subdirectory(fdbservice)\nendif()\nadd_subdirectory(fdbbackup)\nadd_subdirectory(metacluster)\nadd_subdirectory(tests)\nif (NOT FOUNDATIONDB_CROSS_COMPILING) # FIXME(swift): make this work when x-compiling.\n  add_subdirectory(flowbench EXCLUDE_FROM_ALL)\nendif()\nif(WITH_PYTHON AND WITH_C_BINDING)\n  if (NOT FOUNDATIONDB_CROSS_COMPILING) # FIXME(swift): make this work when x-compiling.\n    add_subdirectory(bindings)\n  endif()\nendif()\nif(WITH_DOCUMENTATION)\n  add_subdirectory(documentation)\n  if(BUILD_JAVA_BINDING)\n    add_dependencies(html CopyJavadoc)\n  endif()\nendif()\n\nif(WIN32)\n  add_subdirectory(packaging/msi)\nelse()\n  include(CPack)\nendif()\n\nif(CMAKE_SYSTEM_NAME STREQUAL \"FreeBSD\")\n  add_link_options(-lexecinfo)\nendif()\n\n################################################################################\n# process compile commands for IDE\n################################################################################\nif (CMAKE_EXPORT_COMPILE_COMMANDS AND WITH_PYTHON)\n  add_custom_command(\n\t  OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json\n\t  COMMAND $<TARGET_FILE:Python3::Interpreter> ${CMAKE_CURRENT_SOURCE_DIR}/contrib/gen_compile_db.py\n\t  ARGS -b ${CMAKE_CURRENT_BINARY_DIR} -s ${CMAKE_CURRENT_SOURCE_DIR} -o ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json -ninjatool ${CMAKE_MAKE_PROGRAM} ${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json\n\t  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/contrib/gen_compile_db.py ${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json\n\t  COMMENT \"Build compile commands for IDE\"\n\t)\n  add_custom_target(processed_compile_commands ALL DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json ${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json)\n\n  # A prebuild target ensures that all actors, Swift-generated headers, and Swift modules are built.\n  if (WITH_SWIFT)\n     add_custom_target(prebuild_for_ide ALL DEPENDS fdbserver_swift processed_compile_commands)\n  endif()\nendif()\n\n################################################################################\n# Inform user which components we are going to build\n################################################################################\n\nprint_components()\n\nmessage(STATUS \"CPACK_COMPONENTS_ALL ${CPACK_COMPONENTS_ALL}\")\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.208984375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at fdb-conduct@group.apple.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org/), version 1.4,\navailable at [https://www.contributor-covenant.org/version/1/4/code-of-conduct.html](https://www.contributor-covenant.org/version/1/4/code-of-conduct.html)"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.8251953125,
          "content": "# Contributing to FoundationDB\n\nWelcome to the FoundationDB community, and thank you for contributing! The following guide outlines the basics of how to get involved.\n\nIf you have questions, we encourage you to engage in discussion on the [community forums](https://forums.foundationdb.org). Pull requests to update and expand this guide are also welcome.\n\n#### Table of Contents\n\n* [Before you get started](#before-you-get-started)\n\t* [Community Guidelines](#community-guidelines)\n\t* [Project Licensing](#project-licensing)\n\t* [Governance and Decision Making](#governance-and-decision-making)\n* [Contributing](#contributing)\n\t* [Opening a Pull Request](#opening-a-pull-request)\n\t* [Reporting Issues](#reporting-issues)\n* [Project Communication](#project-communication)\n\t* [Community Forums](#community-forums)\n\t* [Using GitHub Issues and Community Forums](#using-github-issues-and-community-forums)\n\t* [Project and Development Updates](#project-and-development-updates)\n\n## Before you get started\n### Community Guidelines\nWe want the FoundationDB community to be as welcoming and inclusive as possible, and have adopted a [Code of Conduct](CODE_OF_CONDUCT.md) that we ask all community members to read and abide by.\n\n### Project Licensing\nBy submitting a pull request, you represent that you have the right to license your contribution to Apple and the community, and agree by submitting the patch that your contributions are licensed under the Apache 2.0 license.\n\n### Governance and Decision Making\nAt project launch, FoundationDB has a light governance structure. The intention is for the community to evolve quickly and adopt additional processes as participation grows. Stay tuned, and stay engaged! Your feedback is welcome.\n\nWe draw inspiration from the Apache Software Foundation's informal motto: [\"community over code\"](https://blogs.apache.org/foundation/entry/asf_15_community_over_code), and their emphasis on meritocratic rules. You'll also observe that some initial community structure is [inspired by the Swift community](https://swift.org/community/#community-structure).\n\nMembers of the Apple FoundationDB team are part of the core committers helping review individual contributions; you'll see them commenting on your pull requests.  As the FDB open source community has grown, some members of the community have consistently produced high quality code reviews and other significant contributions to FoundationDB.  The project technical lead maintains a list of external committers that actively contribute in this way, and gives them permission to review and merge pull requests.\n\n## Contributing\n### Opening a Pull Request\nWe love pull requests! For minor changes, feel free to open up a PR directly. For larger feature development and any changes that may require community discussion, we ask that you discuss your ideas on the [community forums](https://forums.foundationdb.org) prior to opening a PR, and then reference that thread within your PR comment. Please refer to the [FoundationDB Commit Process](https://github.com/apple/foundationdb/wiki/FoundationDB-Commit-Process) for more detailed guidelines.\n\nCI will be run automatically for core committers, and for community PRs it will be initiated by the request of a core committer.  Tests can also be run locally via `ctest`, and core committers can run additional validation on pull requests prior to merging them.\n\n### Python pre-commit\nWe use a pre-commit pipeline with black and flake8 to enforce python best coding practices. Install pre-commit ```pip install pre-commit```. Install it in your FoundationDB directory ```pre-commit install```.\n\n### Reporting issues\nPlease refer to the section below on [using GitHub issues and the community forums](#using-github-issues-and-community-forums) for more info.\n\n#### Security issues\nTo report a security issue, please **DO NOT** start by filing a public issue or posting to the forums; instead send a private email to [fdb-oss-security@group.apple.com](mailto:fdb-oss-security@group.apple.com).\n\n## Project Communication\n### Community Forums\nWe encourage your participation asking questions and helping improve the FoundationDB project. Check out the [FoundationDB community forums](https://forums.foundationdb.org), which serve a similar function as mailing lists in many open source projects. The forums are organized into three categories:\n\n* [Development](https://forums.foundationdb.org/c/development): For discussing the internals and development of the FoundationDB core, as well as layers.\n* [Using FoundationDB](https://forums.foundationdb.org/c/using-foundationdb): For discussing user-facing topics. Getting started and have a question? This is the category for you.\n* [Site Feedback](https://forums.foundationdb.org/c/site-feedback): A category for discussing the forums and the OSS project, its organization, how it works, and how we can improve it.\n\n### Using GitHub Issues and Community Forums\nGitHub issues and the community forums both offer features to facilitate discussion. To clarify how and when to use each tool, here's a quick summary of how we think about them:\n\nGitHub Issues should be used for tracking tasks. If you know the specific code that needs to be changed, then it should go to GitHub Issues. Everything else should go to the Forums. For example: \n\n* I am experiencing some weird behavior, which I think is a bug, but I don't know where exactly (mysteries and unexpected behaviors): *Forums*\n* I see a bug in this piece of code: *GitHub Issues*\n* Feature requests and design documents: *Forums*\n* Implementing an agreed upon feature: *GitHub Issues*\n\n### Project and Development Updates\nStay connected to the project and the community! For project and community updates, follow the [FoundationDB project blog](https://www.foundationdb.org/blog/). Development announcements will be made via the community forums' [dev-announce](https://forums.foundationdb.org/c/development/dev-announce) category.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.3916015625,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n-------------------------------------------------------------------------------\nSOFTWARE DISTRIBUTED WITH FOUNDATIONDB:\n\nThe FoundationDB software includes a number of subcomponents with separate \ncopyright notices and license terms - please see the file ACKNOWLEDGEMENTS.\n-------------------------------------------------------------------------------\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.9765625,
          "content": "<img alt=\"FoundationDB logo\" src=\"documentation/FDB_logo.png?raw=true\" width=\"400\">\n\n![Build Status](https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoiVjVzb1RQNUZTaGxGNm9iUnk4OUZ1d09GdTMzZnVOT1YzaUU1RU1xR2o2TENRWFZjb3ZrTHJEcngrZVdnNE40bXJJVDErOGVwendIL3lFWFY3Y3oxQmdjPSIsIml2UGFyYW1ldGVyU3BlYyI6IlJUbWhnaUlJVXRORUNJTjQiLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&branch=main)\n\nFoundationDB is a distributed database designed to handle large volumes of structured data across clusters of commodity servers. It organizes data as an ordered key-value store and employs ACID transactions for all operations. It is especially well-suited for read/write workloads but also has excellent performance for write-intensive workloads. Users interact with the database using API language binding.\n\nTo learn more about FoundationDB, visit [foundationdb.org](https://www.foundationdb.org/)\n\n## Documentation\n\nDocumentation can be found online at <https://apple.github.io/foundationdb/>. The documentation covers details of API usage, background information on design philosophy, and extensive usage examples. Docs are built from the [source in this repo](documentation/sphinx/source).\n\n## Forums\n\n[The FoundationDB Forums](https://forums.foundationdb.org/) are the home for most of the discussion and communication about the FoundationDB project. We welcome your participation!  We want FoundationDB to be a great project to be a part of and, as part of that, have established a [Code of Conduct](CODE_OF_CONDUCT.md) to establish what constitutes permissible modes of interaction.\n\n## Contributing\n\nContributing to FoundationDB can be in contributions to the code base, sharing your experience and insights in the community on the Forums, or contributing to projects that make use of FoundationDB. Please see the [contributing guide](CONTRIBUTING.md) for more specifics.\n\n## Getting Started\n\n### Latest Stable Releases\n\nThe lastest stable releases are (were) versions that are recommended for production use, which have been extensively validated via simulation and real cluster tests and used in our production environment.\n\n| Branch   |     Latest Production Release      |  Notes |\n|:--------:|:-------------:|------:|\n| 7.3      |  [7.3.43](https://github.com/apple/foundationdb/releases/tag/7.3.43) | Supported |\n| 7.2      |   | Experimental |\n| 7.1      |  [7.1.57](https://github.com/apple/foundationdb/releases/tag/7.1.57)   |   Bug fixes |\n| 7.0      |           |   Experimental |\n| 6.3      |  [6.3.25](https://github.com/apple/foundationdb/releases/tag/6.3.25) |   Unsupported |\n\n- `Supported` branches are those we actively maintain and will publish new patch releases.\n- `Bug fixes` are branches we still accept bug fixes into the branch, but may not publish newer patch releases. The community can build the latest release binaries if needed and is encouraged to upgrade to the `Supported` branches.\n- `Experimental` branches are those used for internal feature testing. They are not recommended for production use.\n- `Unsupported` branches are those which will no longer receive any updates.\n\nIf you are running on old production releases, we recommend always upgrading to the next major release's latest version, and then continue to the next major version, e.g., 6.2.X -> 6.3.25 -> 7.1.57 -> 7.3.43. These upgrade paths have been well tested in production (skipping a major release, not marked as `Experimental`, for an upgrade is only tested in simulation).\n\n### Binary downloads\n\nDevelopers interested in using FoundationDB can get started by downloading and installing a binary package. Please see the [downloads page](https://github.com/apple/foundationdb/releases) for a list of available packages.\n\n\n### Compiling from source\n\nDevelopers on an OS for which there is no binary package, or who would like\nto start hacking on the code, can get started by compiling from source.\n\nThe official docker image for building is [`foundationdb/build`](https://hub.docker.com/r/foundationdb/build), which has all dependencies installed. The Docker image definitions used by FoundationDB team members can be found in the [dedicated repository](https://github.com/FoundationDB/fdb-build-support).\n\nTo build outside of the official docker image, you'll need at least these dependencies:\n\n1. Install cmake Version 3.13 or higher [CMake](https://cmake.org/)\n1. Install [Mono](https://www.mono-project.com/download/stable/)\n1. Install [Ninja](https://ninja-build.org/) (optional, but recommended)\n\nIf compiling for local development, please set `-DUSE_WERROR=ON` in\ncmake. Our CI compiles with `-Werror` on, so this way you'll find out about\ncompiler warnings that break the build earlier.\n\nOnce you have your dependencies, you can run cmake and then build:\n\n1. Check out this repository.\n1. Create a build directory (you can have the build directory anywhere you\n   like).\n1. `cd <PATH_TO_BUILD_DIRECTORY>`\n1. `cmake -G Ninja <PATH_TO_FOUNDATIONDB_DIRECTORY>`\n1. `ninja # If this crashes it probably ran out of memory. Try ninja -j1`\n\n### Language Bindings\n\nThe language bindings that are supported by cmake will have a corresponding\n`README.md` file in the corresponding `bindings/lang` directory.\n\nGenerally, cmake will build all language bindings for which it can find all\nnecessary dependencies. After each successful cmake run, cmake will tell you\nwhich language bindings it is going to build.\n\n\n### Generating `compile_commands.json`\n\nCMake can build a compilation database for you. However, the default generated\none is not too useful as it operates on the generated files. When running make,\nthe build system will create another `compile_commands.json` file in the source\ndirectory. This can than be used for tools like\n[CCLS](https://github.com/MaskRay/ccls),\n[CQuery](https://github.com/cquery-project/cquery), etc. This way you can get\ncode-completion and code navigation in flow. It is not yet perfect (it will show\na few errors) but we are constantly working on improving the development experience.\n\nCMake will not produce a `compile_commands.json`, you must pass\n`-DCMAKE_EXPORT_COMPILE_COMMANDS=ON`.  This also enables the target\n`processed_compile_commands`, which rewrites `compile_commands.json` to\ndescribe the actor compiler source file, not the post-processed output files,\nand places the output file in the source directory.  This file should then be\npicked up automatically by any tooling.\n\nNote that if building inside of the `foundationdb/build` docker\nimage, the resulting paths will still be incorrect and require manual fixing.\nOne will wish to re-run `cmake` with `-DCMAKE_EXPORT_COMPILE_COMMANDS=OFF` to\nprevent it from reverting the manual changes.\n\n### Using IDEs\n\nCMake has built in support for a number of popular IDEs. However, because flow\nfiles are precompiled with the actor compiler, an IDE will not be very useful as\na user will only be presented with the generated code - which is not what she\nwants to edit and get IDE features for.\n\nThe good news is, that it is possible to generate project files for editing\nflow with a supported IDE. There is a CMake option called `OPEN_FOR_IDE` which\nwill generate a project which can be opened in an IDE for editing. You won't be\nable to build this project, but you will be able to edit the files and get most\nedit and navigation features your IDE supports.\n\nFor example, if you want to use Xcode to make changes to FoundationDB you can\ncreate an Xcode project with the following command:\n\n```sh\ncmake -G Xcode -DOPEN_FOR_IDE=ON <FDB_SOURCE_DIRECTORY>\n```\n\nYou should create a second build-directory which you will use for building and debugging.\n\n#### FreeBSD\n\n1. Check out this repo on your server.\n1. Install compile-time dependencies from ports.\n1. (Optional) Use tmpfs & ccache for significantly faster repeat builds\n1. (Optional) Install a [JDK](https://www.freshports.org/java/openjdk8/)\n   for Java Bindings. FoundationDB currently builds with Java 8.\n1. Navigate to the directory where you checked out the foundationdb\n   repo.\n1. Build from source.\n\n    ```shell\n    sudo pkg install -r FreeBSD \\\n        shells/bash devel/cmake devel/ninja devel/ccache  \\\n        lang/mono lang/python3 \\\n        devel/boost-libs devel/libeio \\\n        security/openssl\n    mkdir .build && cd .build\n    cmake -G Ninja \\\n        -DUSE_CCACHE=on \\\n        -DUSE_DTRACE=off \\\n        ..\n    ninja -j 10\n    # run fast tests\n    ctest -L fast\n    # run all tests\n    ctest --output-on-failure -v\n    ```\n\n\n### Linux\n\nThere are no special requirements for Linux.  A docker image can be pulled from\n`foundationdb/build` that has all of FoundationDB's dependencies\npre-installed, and is what the CI uses to build and test PRs.\n\n```sh\ncmake -G Ninja <FDB_SOURCE_DIR>\nninja\ncpack -G DEB\n```\n\nFor RPM simply replace `DEB` with `RPM`.\n\n### MacOS\n\nThe build under MacOS will work the same way as on Linux. To get boost and ninja you can use [Homebrew](https://brew.sh/).\n\n```sh\ncmake -G Ninja <PATH_TO_FOUNDATIONDB_SOURCE>\n```\n\nTo generate a installable package,\n\n```sh\nninja\n$SRCDIR/packaging/osx/buildpkg.sh . $SRCDIR\n```\n\n### Windows\n\nUnder Windows, only Visual Studio with ClangCl is supported\n\n1. Install Visual Studio 2019 (IDE or Build Tools), and enable llvm support\n1. Install  [CMake 3.15](https://cmake.org/) or higher\n1. Download [Boost 1.77.0](https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.7z)\n1. Unpack boost to C:\\boost, or use `-DBOOST_ROOT=<PATH_TO_BOOST>` with `cmake` if unpacked elsewhere\n1. Install [Python](https://www.python.org/downloads/) if is not already installed by Visual Studio\n1. (Optional) Install [OpenJDK 11](https://developers.redhat.com/products/openjdk/download) to build Java bindings\n1. (Optional) Install [OpenSSL 3.x](https://slproweb.com/products/Win32OpenSSL.html) to build with TLS support\n1. (Optional) Install [WIX Toolset](https://wixtoolset.org/) to build Windows installer\n1. `mkdir build && cd build`\n1. `cmake -G \"Visual Studio 16 2019\" -A x64 -T ClangCl <PATH_TO_FOUNDATIONDB_SOURCE>`\n1. `msbuild /p:Configuration=Release foundationdb.sln`\n1. To increase build performance, use `/p:UseMultiToolTask=true` and `/p:CL_MPCount=<NUMBER_OF_PARALLEL_JOBS>` \n"
        },
        {
          "name": "SWIFT_GUIDE.md",
          "type": "blob",
          "size": 10.5849609375,
          "content": "# Swift in FoundationDB\n\nThe optional Swift support allows piecewise adoption of Swift in implementing FoundationDB.\n\nSwift offers a unique modern type-safe low-ceremony approach taking the best of both worlds that scales from mobile \napps to high-performance systems where previously memory-unsafe languages would be used. It also interoperates \nseamlessly with C and C++.\n\n## Building with Swift\n\nSince FoundationDB is largely implemented in C++ and Flow, large pieces of Swift is built using the same CMake build as the rest of the project.\n\nTo configure the build such that `clang` and `swiftc` are used, use the following:\n\n```swift\ncd build\n\ncmake -G 'Ninja' \\\n  -DCMAKE_C_COMPILER=clang \\\n  -DCMAKE_CXX_COMPILER=clang++ \\\n  -DCMAKE_Swift_COMPILER=swiftc \\\n  -DWITH_SWIFT=ON \\\n  -DUSE_LIBCXX=OFF \\\n  -DCMAKE_Swift_COMPILER_EXTERNAL_TOOLCHAIN=/opt/rh/devtoolset-11/root/usr \\\n  ../src/foundationdb/\n```\n\nThen, build using `ninja` as usual.\n\n## IDE Integration\n\nA full guide on setting up IDEs with FoundationDB, including cross language autocomplete support and code navigation\nis available here: [SWIFT_IDE_SETUP.md](SWIFT_IDE_SETUP.md)\n\n## How Swift interoperates with C++\n\nThe CMake build has been prepared with Swift interop in the following modules: \n\n- flow\n- fdbrpc\n- fdbclient\n- fdbserver\n\nThe integration works \"both ways\", i.e. Swift can call into Flow/C++ code, as well as Flow/C++ can call into Swift.\n\nSwift generates clang modules which can be consumed in C++. For example, the module `fdbserver_swift` contains all swift code in `fdbserver/`.\n\n> Note: you can check, and add new files to the `_swift` targets by locating the command, e.g. `add_library(fdbserver_swft` in [fdbserver/CMakeLists.txt](fdbserver/CMakeLists.txt).\n\nThen, you can then include the generated module in C++:\n\n```cpp\n// ... \n#include \"SwiftModules/FDBServer\"\n\n#include \"flow/actorcompiler.h\" // This must be the last #include.\n```\n\n## Swift Basics\n\nWhen in doubt about Swift syntax, refer to https://docs.swift.org/swift-book/ or reach out to the team, we're here to help.\n\n## Swift → C++\n\nSwift can import clang modules, and does so using the `import` statement, like so:\n\n```swift\nimport Flow\nimport flow_swift\nimport FDBServer\nimport FDBClient\nimport fdbclient_swift\nimport FlowFutureSupport\nimport flow_swift_future\n// ...\n```\n\nThe module has to have dependencies set up properly in `CMake` as well, check `CMakeLists.txt` for examples.\n\n### Futures and other templates\n\nSwift's C++ interop cannot currently instantiate class templates in Swift, but can use specialized templates if they are declared so in C++. For example, in order to use Flow futures and promises in Swift, we currently need to type alias them on the C++ side, and then use the type alias name in Swift, like so:\n\n```swift\n// flow/include/flow/swift_future_support.h\nusing PromiseCInt = Promise<int>;\nusing FutureCInt = Future<int>;\n\nusing PromiseVoid = Promise<Void>;\nusing FutureVoid = Future<Void>;\n```\n\nTo use them in Swift make sure to use the type-aliases:\n\n```swift\npublic func getVersion(cxxState: MasterData, req: GetCommitVersionRequest, result promise: PromiseVoid) {\n  // ... \n}\n```\n\n### Sendable\n\nSendable is Swift's mechanism to ensure compile time thread-safety. It does so by marking types known to be safe to send across task/actor/thread boundaries with `Sendable` (i.e. `struct Something: Sendable {}` and checks related to it).\n\nIn order to declare a C++ type as Sendable you can use the @Sendable attribute:\n\n```cpp\n#define SWIFT_SENDABLE                                               \\\n   __attribute__((swift_attr(\"@Sendable\")))\n```\n\nwhich is used like this: \n\n```cpp\ntemplate <class T>\nclass SWIFT_SENDABLE Future {\n   // ... \n};\n```\n\n\n\n### Importing types\n\nSwift can import copyable C++ structs and classes as Swift value types. Non-copyable types with value semantics require special wrappers to make them available in Swift (see the \"Non-copyable types\" section).\n\nSwift can also import some C++ types as reference types, if they're appropriately annotated. The sections \"Bridging Singleton-like values with immortal reference types\" and \"Bridging reference types\" describes how that can be done.\n\nSwift will avoid importing \"unsafe projections\", which means a type which contains pointers to something \"outside\" the type, as they may end up pointing at unsafe memory.\n\n#### Non-copyable types\n\nSwift's C++ interop currently cannot import non-copyable C++ types. If you have a type that's non-copyable that you want to use as a value type in Swift  (i.e. it's typically used as its own type in C++, not through a pointer type), you most likely want to wrap it in a copyable type which is then made available to Swift. For types that have reference semantics (i.e. you always pass it around using a raw pointer or a custom smart pointer type in C++), see the \"Bridging reference types\" section.\n\nFor example, Flow's `Counter` type is non-copyable. We can make it available to \nSwift so that it can be used as a stored property in a Swift actor by creating a value\ntype wrapper for it in C++, that stores the counter in a shared pointer value:\n\n```cpp\n// A type with Swift value semantics for working with `Counter` types.\nclass CounterValue {\npublic:\n    using Value = Counter::Value;\n\n    CounterValue(std::string const& name, CounterCollection& collection);\n\n    void operator+=(Value delta);\n    void operator++();\n    void clear();\nprivate:\n    std::shared_ptr<Counter> value;\n};\n```\n\nWe want to implement the required interface for this type that's needed from Swift.\n\n#### Bridging Singleton-like values with immortal reference types\n\nCertain C++ types act as singletons which have one value referenced throughout codebase. That value is expected to be alive throughout the lifetime of the program. Such types can be bridged to Swift using the `SWIFT_CXX_IMMORTAL_SINGLETON_TYPE` annotation. This annotation will instruct Swift to import such type as reference type that doesn't need any reference counting, i.e. it's assumed to be immortal.\n\nFor instance, the `INetwork` interface type:\n\n```cpp\nclass SWIFT_CXX_IMMORTAL_SINGLETON_TYPE ServerKnobs : public KnobsImpl<ServerKnobs> {\npublic:\n```\n\nGets bridged over to an immortal reference type in Swift:\n\n```Swift\nlet knobs = getServerKnobs()     // knobs type is `ServerKnobs` in Swift, identical to `ServerKnobs *` C++ type.\nknobs.MAX_VERSION_RATE_MODIFIER\n```\n\n#### Bridging reference types\n\nSome C++ types have reference counting and referential semantics, i.e. they're passed around using raw or smart pointers that point to an instance. That instance typically has its own reference count, that keeps track of when the instance should be released. Such types can be bridged over to Swift reference types, and Swift's automatic reference counting (ARC) will automatically retain and release them using their C++ reference counting implementation.\n\nYou can use the `SWIFT_CXX_REF` annotation for that. Right now `SWIFT_CXX_REF` does not work (due to https://github.com/apple/swift/issues/61620), so you have to make a custom annotation for each class you want to bridge with reference semantics to Swift. For example, the `MasterData` class receives the following annotation:\n\n```cpp\n#define SWIFT_CXX_REF_MASTERDATA   \\\n    __attribute__((swift_attr(\"import_reference\")))   \\\n    __attribute__((swift_attr(\"retain:addrefMasterData\")))   \\\n    __attribute__((swift_attr(\"release:delrefMasterData\")))\n\nstruct SWIFT_CXX_REF_MASTERDATA MasterData : NonCopyable, ReferenceCounted<MasterData> {\n```\n\nThis annotation then makes Swift's' `MasterData` type behave like C++/Flow's `Reference<MasterData>` type, i.e. it is automatically reference counted in Swift.\n\n### Awaiting Flow concurrency types\n\nFlow **Futures** can be awaited on in Swift, like this:\n\n```swift\nvar f: FutureCInt = ...\nawait f.value()\n```\n\nto avoid name clashes with `value` it's currently called `waitValue` though we should probably rename this.\n\nYou can also await a next value of a stream:\n\n```swift\nvar ps = PromiseStream<CInt>()\nvar fs: FutureStream<CInt> = ps.getFuture()\n\n// ... \n\nlet element = try? await fs.waitNext // suspends until value is sent into `ps`\n```\n\nIt is also possible to use the `async for-loop` syntax on `FutureStream`s:\n\n```swift\nfor try await num in fs {\n  // ... \n}\n```\n\nThis future will loop until an \"end\" is sent to the stream.\n\nSending an \"end\" element is currently done the same way as in Flow itself:\n\n```swift\nvar i: CInt = 10\nps.send(&i)\nps.sendError(end_of_stream())\n```\n\n## C++ → Swift \n\nCalling Swift from C++ is relatively simple, you can write new Swift code and `@_expose(Cxx)` them, like this free function in Swift:\n\n```swift\n@_expose(Cxx)\npublic func swiftyTestRunner(p: PromiseVoid) { }\n```\n\nThis can be called from C++ as expected:\n\n```swift\nfdbserver_swift::swiftyTestRunner(p);\n```\n\n### Exposing actors and async functions\n\nActors in Swift have strong isolation properties and cannot be accessed synchronously, as such, every method declared on an actor is implicitly `async` if called from the outside. For example:\n\n```swift\n@_expose(Cxx)\nactor Example {\n  func hi() -> String { \"hi!\" }\n}\n```\n\nthis `hi()` method is not imported into C++, so you'd get an error when trying to call it on an instance of `Example` from C++:\n\n```\n<<error not imported>>\n```\n\nThis is because, calls \"into\" an actor are implicitly async, so the method is effectively async:\n\n```swift\n@_expose(Cxx)\nactor Example {\n  func hi() async -> CInt { 42 }\n}\n```\n\nSince C++ does not understand Swift's async calling convention, we don't import such methods today. This is why today we implement a `nonisolated` wrapper method in order to bridge Flow/C++ and the Swift actor method, like this:\n\n```swift\n@_expose(Cxx)\nactor Example {\n  func hi() async -> CInt { 42 }\n\n  nonisolated func hi(/*other params*/ result: PromiseCInt) {\n    Task { // schedule a new Task\n      var i = await self.hi() // inside that task, await the hi() method\n      result.send(&i)\n    }\n  }\n}\n```\n\nAnd since the `Example` was `_expose`-d the `nonisolated func hi(result:)` is as well, and that can be called from C++:\n\n```swift\n// C++\nauto promise = Promise<int>();\nactor.hi(promise);\nwait(p.getFuture());\n```\n\n> Note: We hope to simplify this, so you could just `wait(actor.hi())`. And the nonisolated wrapper can also be implemented using a Swift macro once they land (Swift macros are work in progress, and operate on AST, so we're not too worried about using them -- i.e. they are not just textual macros).\n\n## Swift tests\n\nWe have prepared a ver simple test suite runner since we cannot use the usual Swift's XCTest framework (maybe we could, didn't investigate yet). To run `swift` tests inside `fdbserver` run like this:\n\n```bash\n FDBSWIFTTEST=1 bin/fdbserver -p AUTO\n```\n\nyou can also `--filter-test future` etc.\n"
        },
        {
          "name": "SWIFT_IDE_SETUP.md",
          "type": "blob",
          "size": 5.447265625,
          "content": "# FoundationDB/Swift IDE Setup Guide\n\nSwift provides a language server implementation (https://github.com/apple/sourcekit-lsp) that should work with any LSP compatible editor.\n\nIn this guide we'll cover how to set up VSCode for local development on a Mac, however other setups should\nwork in the same way.\n\n## Swift Versions\n\nNote that Swift 5.9 (or higher) is required for the build at the time of writing this guide.\nYou can download Swift toolchains from [https://www.swift.org/download/](https://www.swift.org/download/), \nor by using the experimental https://github.com/swift-server/swiftly which simplifies this process.\n\n## VSCode + Cross Compilation (MacOS to Linux)\n\n## Host toolchain setup\n\nDownload and install latest Swift toolchain: https://www.swift.org/download/\n\nUse the following version:\n\n* **Snapshots / Trunk Development (5.9)**\n\nNote the path of the installed toolchain suffixed with `/usr` as **`FOUNDATIONDB_SWIFT_TOOLCHAIN_ROOT`**, e.g.:\n\n```bash\nexport FOUNDATIONDB_SWIFT_TOOLCHAIN_ROOT=/Library/Developer/Toolchains/swift-5.9-DEVELOPMENT-SNAPSHOT-2023-05-01-a.xctoolchain/usr\n```\n\n\nFor linker and object file tools:\n\n* Download LLVM toolchain:\n  * arm64: https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.7/clang+llvm-15.0.7-arm64-apple-darwin22.0.tar.xz\n    * from: https://github.com/llvm/llvm-project/releases/tag/llvmorg-15.0.7\n\nNote the path of the installed LLVM toolchain + /usr as **`FOUNDATIONDB_LLVM_TOOLCHAIN_ROOT`**, e.g.\n\n```bash\ncd ~/Downloads\nwget https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.7/clang+llvm-15.0.7-arm64-apple-darwin22.0.tar.xz\ntar xzf clang+llvm-15.0.7-arm64-apple-darwin22.0.tar.xz\n\nexport FOUNDATIONDB_LLVM_TOOLCHAIN_ROOT=~/Downloads/clang+llvm-15.0.7-arm64-apple-darwin22.0\n```\n\n\nFor actor compiler: Download and install mono:  [https://www.mono-project.com](https://www.mono-project.com/), e.g.\n\n```bash\nbrew install mono\n```\n\n### Host container setup\n\nThe Foundation DB will be used on the host as the system SDK/root against which to build.\nThis is done by using docker and extracting the image\n\nYou may need to make sure that you have the latest foundationdb docker image pulled:\n\n```bash\ndocker pull foundationdb/build:centos7-latest\n```\n\n```bash\ncd\nmkdir fdb-build && cd fdb-build\n\ndocker run -ti foundationdb/build:centos7-latest\n\n# and in another terminal session (without terminating centos container):\n# $ docker ps\n#    CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS         PORTS     NAMES\n#    5fe40defb063   07d50e07570b   \"/bin/bash\"   9 seconds ago   Up 8 seconds             vigilant_gauss\n# $ docker export 07d50e07570b -o container-root.tar\n\nmkdir container-root && cd container-root\ntar -xzf ../container-root.tar\n```\n\nThis \n\nNote that **`FOUNDATIONDB_LINUX_CONTAINER_ROOT`** becomes `~/fdb-build/container-root`.\n\n```bash\nexport FOUNDATIONDB_LINUX_CONTAINER_ROOT=~/fdb-build/container-root\n```\n\n### CMake\n\nNow that you have setup your host, and obtained `FOUNDATIONDB_SWIFT_TOOLCHAIN_ROOT` , `FOUNDATIONDB_LLVM_TOOLCHAIN_ROOT`, `FOUNDATIONDB_LINUX_CONTAINER_ROOT` you can run cmake.\n\nYou need to ensure you pass in these three flags, and `-C<foundation-db-source>/cmake/toolchain/macos-to-linux.cmake` after the flags.\n\nFor example:\n\n```bash\ncd ~/fdb-build\nmkdir build && cd build\n\nxcrun cmake -G Ninja -DCMAKE_MAKE_PROGRAM=$(xcrun --find ninja)             \\\n   -DFOUNDATIONDB_SWIFT_TOOLCHAIN_ROOT=$FOUNDATIONDB_SWIFT_TOOLCHAIN_ROOT  \\\n   -DFOUNDATIONDB_LLVM_TOOLCHAIN_ROOT=$FOUNDATIONDB_LLVM_TOOLCHAIN_ROOT    \\\n   -DFOUNDATIONDB_LINUX_CONTAINER_ROOT=$FOUNDATIONDB_LINUX_CONTAINER_ROOT  \\\n   -C$HOME/src/foundationdb/cmake/toolchain/macos-to-linux.cmake           \\\n   $HOME/src/foundationdb \n\n# Which would be this with all the parameters substituted:\n#\n# xcrun cmake -G Ninja -DCMAKE_MAKE_PROGRAM=/opt/homebrew/bin/ninja \\\n#   -DFOUNDATIONDB_SWIFT_TOOLCHAIN_ROOT=/Library/Developer/Toolchains/swift-5.9-DEVELOPMENT-SNAPSHOT-2023-05-01-a.xctoolchain/usr \\\n#   -DFOUNDATIONDB_LLVM_TOOLCHAIN_ROOT=$HOME/Downloads/clang1507 \\\n#   -DFOUNDATIONDB_LINUX_CONTAINER_ROOT=$HOME/fdb-build/container-root \\\n#   -C$HOME/src/foundationdb/cmake/toolchain/macos-to-linux.cmake \\\n#   $HOME/src/foundationdb \n```\n\n\nIf you get a warning about not being able to execute `lld` or other binaries from the toolchain because they're not trusted, open `Privacy & Security` and find a button \"**Allow Anyway**\" and click it once.\n[Image: Screenshot 2023-04-17 at 12.47.01.png]\n\n## Prebuild project for IDE\n\nAfter configuration, make sure things get pre build to be usable in IDE:\n\n```bash\nxcrun cmake --build . -- prebuild_for_ide\n```\n\nNow you should see that your source directory has a `compile_commands.json` file.\n\n## VSCode setup\n\nNow you can open your source directory in VSCode.\n\nSetup:\n\n* Install the official **Swift plugin**\n    * it's the one *maintained by* **Swift Server Work Group**\n* For extension settings\n    * Update `Swift: Path` to point to the Swift toolchain installed in the first step (e.g. `/Library/Developer/Toolchains/swift-DEVELOPMENT-SNAPSHOT-2023-05-01-a.xctoolchain/usr/bin`)\n    * Do not omit the /usr/bin in the path (!)\n\n[Image: Screenshot 2023-03-16 at 7.25.21 PM.png]\n* Disable the default \"C++\" plugin\n    * To make sure sourcekit-lsp is used for C++ files.\n\n## Known issues\n\n* jump-to-definition fails to open actor header files.\n* jump-to-definition from C++ to Swift does not work.\n* Code completion for semantic responses in Swift can be slow sometimes especially in files that import both FDBServer and FDBClient\n\n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "design",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdb.cluster.cmake",
          "type": "blob",
          "size": 0.0615234375,
          "content": "${CLUSTER_DESCRIPTION1}:${CLUSTER_DESCRIPTION1}@127.0.0.1:4000\n"
        },
        {
          "name": "fdbbackup",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbcli",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbkubernetesmonitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbmonitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbrpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "fdbservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow",
          "type": "tree",
          "content": null
        },
        {
          "name": "flowbench",
          "type": "tree",
          "content": null
        },
        {
          "name": "layers",
          "type": "tree",
          "content": null
        },
        {
          "name": "metacluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pull_request_template.md",
          "type": "blob",
          "size": 0.9375,
          "content": "Replace this text with your description here...\n\n# Code-Reviewer Section\n\nThe general pull request guidelines can be found [here](https://github.com/apple/foundationdb/wiki/FoundationDB-Commit-Process).\n\nPlease check each of the following things and check *all* boxes before accepting a PR.\n\n- [ ] The PR has a description, explaining both the problem and the solution.\n- [ ] The description mentions which forms of testing were done and the testing seems reasonable.\n- [ ] Every function/class/actor that was touched is reasonably well documented.\n\n## For Release-Branches\n\nIf this PR is made against a release-branch, please also check the following:\n\n- [ ] This change/bugfix is a cherry-pick from the next younger branch (younger `release-branch` or `main` if this is the youngest branch)\n- [ ] There is a good reason why this PR needs to go into a release branch and this reason is documented (either in the description above or in a linked GitHub issue)\n"
        },
        {
          "name": "recipes",
          "type": "tree",
          "content": null
        },
        {
          "name": "swift_build_support",
          "type": "tree",
          "content": null
        },
        {
          "name": "swift_get_latest_toolchain.sh",
          "type": "blob",
          "size": 0.546875,
          "content": "#!/bin/bash\n\n# snapshot toolchains from 'main'\n# wget $(curl -s https://ci.swift.org/job/oss-swift-package-centos-7/lastSuccessfulBuild/consoleText | grep 'tmp-ci-nightly' | sed 's/-- /\\n/g' | tail -1 | sed 's#https://store-030.blobstore.apple.com/swift-oss#https://download.swift.org#g')\n\n# 5.9 snapshot toolchains\nwget $(curl -s https://ci.swift.org/job/oss-swift-5.9-package-centos-7/lastSuccessfulBuild/consoleText | grep 'tmp-ci-nightly' | sed 's/-- /\\n/g' | tail -1 | sed 's#https://store-030.blobstore.apple.com/swift-oss#https://download.swift.org#g')\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "versions.target.cmake",
          "type": "blob",
          "size": 0.2294921875,
          "content": "<?xml version=\"1.0\"?>\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <PropertyGroup>\n    <Version>${FDB_VERSION}</Version>\n    <PackageName>${FDB_MAJOR}.${FDB_MINOR}</PackageName>\n  </PropertyGroup>\n</Project>\n"
        }
      ]
    }
  ]
}