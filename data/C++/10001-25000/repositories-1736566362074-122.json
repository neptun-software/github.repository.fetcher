{
  "metadata": {
    "timestamp": 1736566362074,
    "page": 122,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "k4yt3x/video2x",
      "stars": 11717,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.19140625,
          "content": "BasedOnStyle: Chromium\nAlignAfterOpenBracket: BlockIndent\nAllowShortEnumsOnASingleLine: false\nBinPackArguments: false\nBreakStringLiterals: false\nColumnLimit: 100\nIndentWidth: 4\nInsertBraces: true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.02734375,
          "content": "models/** linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7158203125,
          "content": "# Data files\ndata/\n\n# Built-binaries\nbin/\nbuild/\n\n# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n#*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n#*.mod*\n*.cmd\n.tmp_versions/\nmodules.order\nModule.symvers\nMkfile.old\ndkms.conf\n\n# clang tooling compilation databases\n.cache/\n*.plist\n\n# CMake\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\nCMakeUserPresets.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.75,
          "content": "[submodule \"third_party/ncnn\"]\n\tpath = third_party/ncnn\n\turl = https://github.com/Tencent/ncnn.git\n[submodule \"third_party/spdlog\"]\n\tpath = third_party/spdlog\n\turl = https://github.com/gabime/spdlog.git\n[submodule \"third_party/boost\"]\n\tpath = third_party/boost\n\turl = https://github.com/boostorg/boost.git\n[submodule \"third_party/librealesrgan_ncnn_vulkan\"]\n\tpath = third_party/librealesrgan_ncnn_vulkan\n\turl = https://github.com/k4yt3x/librealesrgan-ncnn-vulkan.git\n[submodule \"third_party/librealcugan_ncnn_vulkan\"]\n\tpath = third_party/librealcugan_ncnn_vulkan\n\turl = https://github.com/k4yt3x/librealcugan-ncnn-vulkan.git\n[submodule \"third_party/librife_ncnn_vulkan\"]\n\tpath = third_party/librife_ncnn_vulkan\n\turl = https://github.com/k4yt3x/librife-ncnn-vulkan.git\n"
        },
        {
          "name": ".justfile",
          "type": "blob",
          "size": 11.0205078125,
          "content": "# Use PowerShell to run recipes on Windows\nset windows-shell := ['pwsh', '-Command']\n\n# Default build directory and C++ compiler\nbindir := \"build\"\ncxx_compiler := \"clang++\"\n\n# Test video and output paths\ntest_video := \"data/standard-test.mp4\"\ntest_output := \"data/output.mp4\"\n\n[unix]\n[group('build')]\nbuild:\n    cmake -G Ninja -S . -B {{bindir}} \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_CXX_COMPILER={{cxx_compiler}} \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX={{bindir}}/video2x-install \\\n        -DVIDEO2X_ENABLE_NATIVE=ON\n    cmake --build {{bindir}} --config Release --parallel --target install\n    cp {{bindir}}/compile_commands.json .\n\n[windows]\n[group('build')]\nbuild:\n    cmake -S . -B {{bindir}} \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX={{bindir}}/video2x-install \\\n        -DCMAKE_INSTALL_BINDIR=\".\" \\\n        -DCMAKE_INSTALL_LIBDIR=\".\" \\\n        -DCMAKE_INSTALL_INCLUDEDIR=include \\\n        -DCMAKE_INSTALL_DATADIR=\".\" \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_SPDLOG=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_BOOST=OFF\n    cmake --build {{bindir}} --config Release --parallel --target install\n\n[unix]\n[group('build')]\nstatic:\n    cmake -G Ninja -S . -B {{bindir}} \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_CXX_COMPILER={{cxx_compiler}} \\\n        -DBUILD_SHARED_LIBS=OFF \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX={{bindir}}/video2x-install \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_SPDLOG=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_BOOST=OFF\n    cmake --build {{bindir}} --config Release --parallel --target install\n    cp {{bindir}}/compile_commands.json .\n\n[unix]\n[group('build')]\ndebug:\n    cmake -G Ninja -S . -B {{bindir}} \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_CXX_COMPILER={{cxx_compiler}} \\\n        -DCMAKE_BUILD_TYPE=Debug\n    cmake --build {{bindir}} --config Debug --parallel\n    cp {{bindir}}/compile_commands.json .\n\n[windows]\n[group('build')]\ndebug:\n    cmake -S . -B {{bindir}} \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_BUILD_TYPE=Debug \\\n        -DCMAKE_INSTALL_PREFIX={{bindir}}/video2x-install \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_SPDLOG=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_BOOST=OFF\n    cmake --build {{bindir}} --config Debug --parallel\n\n[unix]\n[group('build')]\ndebian:\n    apt-get update\n    apt-get install -y --no-install-recommends \\\n        build-essential cmake clang pkg-config ninja-build \\\n        libavcodec-dev \\\n        libavdevice-dev \\\n        libavfilter-dev \\\n        libavformat-dev \\\n        libavutil-dev \\\n        libswscale-dev \\\n        libvulkan-dev \\\n        glslang-tools \\\n        libomp-dev \\\n        libspdlog-dev \\\n        libboost-program-options-dev\n    cmake -G Ninja -B /tmp/build -S . \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DCMAKE_CXX_COMPILER={{cxx_compiler}} \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/tmp/install \\\n        -DINSTALL_BIN_DESTINATION=. \\\n        -DINSTALL_INCLUDE_DESTINATION=include \\\n        -DINSTALL_LIB_DESTINATION=. \\\n        -DINSTALL_MODEL_DESTINATION=.\n    cmake --build /tmp/build --config Release --target install --parallel\n\n[unix]\n[group('build')]\nubuntu2404:\n    apt-get update\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        build-essential cmake pkg-config ninja-build \\\n        libavcodec-dev \\\n        libavdevice-dev \\\n        libavfilter-dev \\\n        libavformat-dev \\\n        libavutil-dev \\\n        libswscale-dev \\\n        libvulkan-dev \\\n        glslang-tools \\\n        libomp-dev \\\n        libboost-program-options-dev\n    cmake -G Ninja -B build -S . \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_SPDLOG=OFF \\\n        -DCMAKE_CXX_COMPILER=g++ \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=video2x-linux-ubuntu-amd64/usr\n    cmake --build build --config Release --target install --parallel\n    mkdir -p video2x-linux-ubuntu-amd64/DEBIAN\n    cp packaging/debian/control.ubuntu2404 video2x-linux-ubuntu-amd64/DEBIAN/control\n    dpkg-deb --build video2x-linux-ubuntu-amd64\n\n[unix]\n[group('build')]\nubuntu2204:\n    apt-get update\n    DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common\n    add-apt-repository -y ppa:ubuntuhandbook1/ffmpeg7\n    apt-get update\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        build-essential cmake ninja-build \\\n        libavcodec-dev \\\n        libavdevice-dev \\\n        libavfilter-dev \\\n        libavformat-dev \\\n        libavutil-dev \\\n        libswscale-dev \\\n        libvulkan-dev \\\n        glslang-tools \\\n        libomp-dev \\\n        libboost-program-options-dev\n    cmake -G Ninja -B build -S . \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DVIDEO2X_USE_EXTERNAL_SPDLOG=OFF \\\n        -DCMAKE_CXX_COMPILER=g++ \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=video2x-linux-ubuntu-amd64/usr\n    cmake --build build --config Release --target install --parallel\n    mkdir -p video2x-linux-ubuntu-amd64/DEBIAN\n    cp packaging/debian/control.ubuntu2204 video2x-linux-ubuntu-amd64/DEBIAN/control\n    dpkg-deb --build video2x-linux-ubuntu-amd64\n\n[unix]\n[group('build')]\nappimage:\n    apt-get update\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        build-essential cmake clang pkg-config ninja-build curl file fuse \\\n        libavcodec-dev \\\n        libavdevice-dev \\\n        libavfilter-dev \\\n        libavformat-dev \\\n        libavutil-dev \\\n        libswscale-dev \\\n        libvulkan-dev \\\n        glslang-tools \\\n        libomp-dev \\\n        libboost-program-options1.83-dev \\\n        libboost-program-options1.83.0 \\\n        libspdlog-dev\n    cmake -G Ninja -B build -S . \\\n        -DVIDEO2X_USE_EXTERNAL_NCNN=OFF \\\n        -DNCNN_BUILD_SHARED_LIBS=ON \\\n        -DCMAKE_CXX_COMPILER=clang++ \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DNCNN_AVX512=OFF \\\n        -DCMAKE_INSTALL_PREFIX=AppDir/usr\n    cmake --build build --config Release --target install --parallel\n    rm -rf AppDir/usr/share/video2x/models/rife/rife \\\n        AppDir/usr/share/video2x/models/rife/rife-HD \\\n        AppDir/usr/share/video2x/models/rife/rife-UHD \\\n        AppDir/usr/share/video2x/models/rife/rife-anime \\\n        AppDir/usr/share/video2x/models/rife/rife-v2 \\\n        AppDir/usr/share/video2x/models/rife/rife-v2.3 \\\n        AppDir/usr/share/video2x/models/rife/rife-v2.4 \\\n        AppDir/usr/share/video2x/models/rife/rife-v3.0 \\\n        AppDir/usr/share/video2x/models/rife/rife-v3.1\n    curl -Lo /usr/local/bin/linuxdeploy \\\n        https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage\n    chmod +x /usr/local/bin/linuxdeploy\n    LD_LIBRARY_PATH=AppDir/usr/lib linuxdeploy \\\n        --appdir AppDir \\\n        --executable AppDir/usr/bin/video2x \\\n        --exclude-library \"libvulkan.so.1\" \\\n        --desktop-file packaging/appimage/video2x.desktop \\\n        --icon-file packaging/appimage/video2x.png \\\n        --output appimage\n\n[unix]\n[group('misc')]\nclean:\n    rm -vrf {{bindir}} data/output*.* heaptrack*.zst valgrind.log\n\n[windows]\n[group('misc')]\nclean:\n    Remove-Item -Recurse -Force -ErrorAction SilentlyContinue -Path build,data/output*.*\n\n[unix]\n[group('test')]\ntest-realesrgan:\n    LD_LIBRARY_PATH={{bindir}} {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p realesrgan -s 4 --realesrgan-model realesr-animevideov3\n\n[unix]\n[group('test')]\ntest-realcugan:\n    LD_LIBRARY_PATH={{bindir}} {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p realcugan -s 4 -n 0 --realcugan-model models-se\n\n[unix]\n[group('test')]\ntest-libplacebo:\n    LD_LIBRARY_PATH={{bindir}} {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p libplacebo -w 1920 -h 1080 --libplacebo-shader anime4k-v4-a\n\n[unix]\n[group('test')]\ntest-rife:\n    LD_LIBRARY_PATH={{bindir}} {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p rife -m 4 --rife-model rife-v4.6\n\n[unix]\n[group('test')]\nmemcheck-realesrgan:\n    LD_LIBRARY_PATH={{bindir}} valgrind \\\n        --tool=memcheck \\\n        --leak-check=full \\\n        --show-leak-kinds=all \\\n        --track-origins=yes \\\n        --show-reachable=yes \\\n        --verbose --log-file=\"valgrind.log\" \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p realesrgan -s 2 --realesrgan-model realesr-animevideov3 \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nmemcheck-realcugan:\n    LD_LIBRARY_PATH={{bindir}} valgrind \\\n        --tool=memcheck \\\n        --leak-check=full \\\n        --show-leak-kinds=all \\\n        --track-origins=yes \\\n        --show-reachable=yes \\\n        --verbose --log-file=\"valgrind.log\" \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p realcugan -s 2 -n 0 --realcugan-model models-se \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nmemcheck-libplacebo:\n    LD_LIBRARY_PATH={{bindir}} valgrind \\\n        --tool=memcheck \\\n        --leak-check=full \\\n        --show-leak-kinds=all \\\n        --track-origins=yes \\\n        --show-reachable=yes \\\n        --verbose --log-file=\"valgrind.log\" \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p libplacebo -w 1920 -h 1080 --libplacebo-shader anime4k-v4-a \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nmemcheck-rife:\n    LD_LIBRARY_PATH={{bindir}} valgrind \\\n        --tool=memcheck \\\n        --leak-check=full \\\n        --show-leak-kinds=all \\\n        --track-origins=yes \\\n        --show-reachable=yes \\\n        --verbose --log-file=\"valgrind.log\" \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p rife -m 4 --rife-model rife-v4.6 \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nheaptrack-realesrgan:\n    LD_LIBRARY_PATH={{bindir}} HEAPTRACK_ENABLE_DEBUGINFOD=1 heaptrack \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p realesrgan -s 4 --realesrgan-model realesr-animevideov3 \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nheaptrack-realcugan:\n    LD_LIBRARY_PATH={{bindir}} HEAPTRACK_ENABLE_DEBUGINFOD=1 heaptrack \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p realcugan -s 4 -n 0 --realcugan-model models-se \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nheaptrack-libplacebo:\n    LD_LIBRARY_PATH={{bindir}} HEAPTRACK_ENABLE_DEBUGINFOD=1 heaptrack \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p libplacebo -w 1920 -h 1080 --libplacebo-shader anime4k-v4-a \\\n        -e preset=veryfast -e crf=30\n\n[unix]\n[group('test')]\nheaptrack-rife:\n    LD_LIBRARY_PATH={{bindir}} HEAPTRACK_ENABLE_DEBUGINFOD=1 heaptrack \\\n        {{bindir}}/video2x \\\n        -i {{test_video}} -o {{test_output}} \\\n        -p rife -m 4 --rife-model rife-v4.6 \\\n        -e preset=veryfast -e crf=30\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.4716796875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Added\n\n- Multi-versioning to critical functions to enhance performance in generic architecture builds.\n- The feature to copy input streams' metadata to the output streams (#1282).\n\n### Changed\n\n- Improve the CMake optimization flags and option names.\n\n## [6.3.1] - 2024-12-21\n\n### Fixed\n\n- The issue of decreasing PTS precision with increasing video duration (#1269).\n- (Video2X Qt6) Errors restoring Real-CUGAN configs in the Edit Task dialog.\n- (Video2X Qt6) The incorrect comparison of version numbers.\n\n## [6.3.0] - 2024-12-20\n\n### Added\n\n- A logger manager to provide unified logging across the application.\n- Support for Real-CUGAN ncnn Vulkan (#1198).\n- (Video2X Qt6) A check to ensure the required VC++ Redistributable version is installed.\n- (Video2X Qt6) A configuration manager to save user preferences like the last selected language.\n- (Video2X Qt6) A new logging widget to display logs in the UI.\n- (Video2X Qt6) Custom options `crf=20` and `preset=slow` to the default encoder options.\n- (Video2X Qt6) French translation.\n- (Video2X Qt6) The ability to check for available updates and prompt the user to update.\n- (Video2X Qt6) Tooltips for processor and encoder options.\n\n### Changed\n\n- Improve optimization flags and add namespaces for better code organization.\n- (Video2X Qt6) Add processor names to processed videos instead of `.processed`.\n- (Video2X Qt6) The output video suffix from auto-generated to `.mkv`.\n\n### Fixed\n\n- Make the encoder always use the calculated PTS with corrected math.\n- (Video2X Qt6) The issue where task configs are being restored incorrectly in the UI.\n\n## [6.2.0] - 2024-12-11\n\n### Added\n\n- Automatic selection of the most suitable pixel format for the output video.\n- Frame interpolation processing mode.\n- More `AVCodecContext` options.\n- Support for RIFE ncnn Vulkan.\n- Support for specifying arbitrary `AVOptions` for the encoder (#1232).\n- (Video2X Qt6) Visual C++ Redistributable version check to the installer.\n\n### Changed\n\n- Improve CLI argument validation.\n- Improve error handling and error messages.\n- Improve the CLI help message structure and clarity.\n- (Video2X Qt6) Improve the UI with a complete redesign.\n\n### Removed\n\n- The C API for easier maintenance and development.\n\n### Fixed\n\n- Timestamp errors processing frames with PTS equal to 0 (#1222).\n\n## [6.1.1] - 2024-11-07\n\n### Added\n\n- Time remaining, and processing speed to the status bar.\n\n### Fixed\n\n- Stream mapping for cases where the video stream is not the first stream in the input file (#1217).\n- The encoder using the wrong color space for the output video.\n\n## [6.1.0] - 2024-11-04\n\n### Added\n\n- A better timer that gets paused when the processing is paused.\n- Detection for the validity of the provided GPU ID.\n- The `--listgpus` option to list available Vulkan GPU devices.\n- Vulkan device selection for libplacebo.\n- (Video2X Qt6) Status bar and processing statistics.\n\n### Changed\n\n- Automatically detect if options `colorspace` and `range` are supported by the buffer filter.\n- Resource file missing error messages.\n- Rewritten the CLI with C++.\n\n### Fixed\n\n- Wide character string paths support on Windows systems without UTF-8 support enabled (#1201).\n\n## [6.0.0] - 2024-10-29\n\n### Added\n\n- The initial release of the 6.0.0 version of Video2X.\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.4287109375,
          "content": "cff-version: 1.2.0\ntitle: Video2X\nabstract: >-\n  Video2X is a A machine learning-based video super resolution and frame interpolation framework.\nmessage: Please cite this software using these metadata.\ntype: software\nauthors:\n  - name: K4YT3X\ndate-released: 2018-02-24\nurl: https://video2x.org\nrepository-code: https://github.com/k4yt3x/video2x\nlicense: AGPL-3.0\nkeywords:\n  - machine learning\n  - super resolution\n  - frame interpolation\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 17.607421875,
          "content": "cmake_minimum_required(VERSION 3.10 FATAL_ERROR)\nproject(video2x VERSION 6.3.1 LANGUAGES CXX)\n\ninclude(CMakePackageConfigHelpers)\ninclude(ExternalProject)\ninclude(GNUInstallDirs)\n\n# The FindBoost module is removed in CMake 3.30\nif(POLICY CMP0167)\n    cmake_policy(SET CMP0167 NEW)\nendif()\n\n# Set the default build type to Release if not specified\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Release)\nendif()\n\n# Build options\noption(BUILD_SHARED_LIBS \"Build libvideo2x as a shared library\" ON)\noption(VIDEO2X_BUILD_CLI \"Build the video2x command line interface executable\" ON)\n\noption(VIDEO2X_USE_EXTERNAL_NCNN \"Use the system-provided ncnn library\" ON)\noption(VIDEO2X_USE_EXTERNAL_SPDLOG \"Use the system-provided spdlog library\" ON)\noption(VIDEO2X_USE_EXTERNAL_BOOST \"Use the system-provided Boost library\" ON)\n\noption(VIDEO2X_ENABLE_NATIVE \"Enable optimizations for the native architecture\" OFF)\noption(VIDEO2X_ENABLE_X86_64_V4 \"Enable x86-64-v4 (AVX-512) optimizations\" OFF)\noption(VIDEO2X_ENABLE_X86_64_V3 \"Enable x86-64-v3 (AVX2) optimizations\" OFF)\n\n# Enable extra compiler warnings\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n    add_compile_options(/W4 /permissive-)\nelseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n    add_compile_options(-Wall -Wextra -Wpedantic -Wconversion -Wshadow)\nendif()\n\n# Set the default optimization flags for Release builds\nif(CMAKE_BUILD_TYPE STREQUAL \"Release\")\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n        add_compile_options(/Ox /Ot /GL /DNDEBUG)\n        add_link_options(/LTCG /OPT:REF /OPT:ICF)\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n        add_compile_options(-O3 -ffunction-sections -fdata-sections)\n        add_link_options(-Wl,-s -flto -Wl,--gc-sections)\n    endif()\nendif()\n\n# Enable the requested architecture-specific optimizations\nif(VIDEO2X_ENABLE_NATIVE)\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n        add_compile_options(/arch:NATIVE)\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n        add_compile_options(-march=native)\n    endif()\nelseif(VIDEO2X_ENABLE_X86_64_V4)\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n        add_compile_options(/arch:AVX512)\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n        add_compile_options(-march=x86-64-v4)\n    endif()\nelseif(VIDEO2X_ENABLE_X86_64_V3)\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n        add_compile_options(/arch:AVX2)\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n        add_compile_options(-march=x86-64-v3)\n    endif()\nendif()\n\n# Generate the version header file\nconfigure_file(\n    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/version.h.in\"\n    \"${CMAKE_CURRENT_BINARY_DIR}/libvideo2x/version.h\"\n    @ONLY\n)\n\n# Add the libvideo2x shared library\nadd_library(libvideo2x\n    src/avutils.cpp\n    src/conversions.cpp\n    src/decoder.cpp\n    src/encoder.cpp\n    src/filter_libplacebo.cpp\n    src/filter_realcugan.cpp\n    src/filter_realesrgan.cpp\n    src/fsutils.cpp\n    src/interpolator_rife.cpp\n    src/libplacebo.cpp\n    src/libvideo2x.cpp\n    src/logger_manager.cpp\n    src/processor_factory.cpp\n)\n\n# Set the C++ standard to C++17\ntarget_compile_features(libvideo2x PRIVATE cxx_std_17)\n\n# Set the shared library output name and disable C++ extensions\nset_target_properties(libvideo2x PROPERTIES\n    PREFIX \"\"\n    OUTPUT_NAME libvideo2x\n    CXX_EXTENSIONS OFF\n)\n\n# Include directories for the shared library\ntarget_include_directories(libvideo2x PRIVATE\n    \"${CMAKE_CURRENT_BINARY_DIR}\"\n    \"${PROJECT_SOURCE_DIR}/include\"\n    \"${PROJECT_SOURCE_DIR}/include/libvideo2x\"\n    \"${PROJECT_SOURCE_DIR}/third_party/librealesrgan_ncnn_vulkan/src\"\n    \"${PROJECT_SOURCE_DIR}/third_party/librealcugan_ncnn_vulkan/src\"\n    \"${PROJECT_SOURCE_DIR}/third_party/librife_ncnn_vulkan/src\"\n)\n\n# Add the export definition for the exported symbols\ntarget_compile_definitions(libvideo2x PRIVATE LIBVIDEO2X_EXPORTS)\n\n# Set debug compile options\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n    target_compile_options(libvideo2x PRIVATE $<$<CONFIG:Debug>:/Zi /Od /MDd>)\nelseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n    target_compile_options(libvideo2x PRIVATE\n        $<$<NOT:$<PLATFORM_ID:Windows>>:-fPIC>\n        $<$<CONFIG:Debug>:-g -O0>\n    )\nendif()\n\n# FFmpeg\nif(WIN32)\n    set(ffmpeg_base_path \"${PROJECT_SOURCE_DIR}/third_party/ffmpeg-shared\")\n    target_include_directories(libvideo2x SYSTEM PRIVATE \"${ffmpeg_base_path}/include\")\n    target_link_libraries(libvideo2x PRIVATE\n        \"${ffmpeg_base_path}/lib/avcodec.lib\"\n        \"${ffmpeg_base_path}/lib/avfilter.lib\"\n        \"${ffmpeg_base_path}/lib/avformat.lib\"\n        \"${ffmpeg_base_path}/lib/avutil.lib\"\n        \"${ffmpeg_base_path}/lib/swscale.lib\"\n    )\nelse()\n    # Use pkg-config to find FFmpeg libraries\n    find_package(PkgConfig REQUIRED)\n\n    # Find and configure FFmpeg libraries\n    pkg_check_modules(libavcodec REQUIRED libavcodec)\n    pkg_check_modules(libavfilter REQUIRED libavfilter)\n    pkg_check_modules(libavformat REQUIRED libavformat)\n    pkg_check_modules(libavutil REQUIRED libavutil)\n    pkg_check_modules(libswscale REQUIRED libswscale)\n\n    # Apply include directories and libraries directly to the target\n    target_include_directories(libvideo2x SYSTEM PRIVATE\n        ${libavcodec_INCLUDE_DIRS}\n        ${libavfilter_LIBRARIES}\n        ${libavformat_INCLUDE_DIRS}\n        ${libavutil_INCLUDE_DIRS}\n        ${libswscale_INCLUDE_DIRS}\n    )\n    target_link_libraries(libvideo2x PRIVATE\n        ${libavcodec_LIBRARIES}\n        ${libavfilter_LIBRARIES}\n        ${libavformat_LIBRARIES}\n        ${libavutil_LIBRARIES}\n        ${libswscale_LIBRARIES}\n    )\nendif()\n\n# ncnn\nif(VIDEO2X_USE_EXTERNAL_NCNN)\n    find_package(ncnn REQUIRED)\nelse()\n    if(WIN32)\n        # Use the pre-built shared ncnn library on Windows\n        set(ncnn_base_path \"${PROJECT_SOURCE_DIR}/third_party/ncnn-shared/x64\")\n        add_library(ncnn SHARED IMPORTED)\n        set_target_properties(ncnn PROPERTIES\n            IMPORTED_LOCATION \"${ncnn_base_path}/bin/ncnn.dll\"\n            IMPORTED_IMPLIB \"${ncnn_base_path}/lib/ncnn.lib\"\n            INTERFACE_INCLUDE_DIRECTORIES \"${ncnn_base_path}/include/ncnn\"\n        )\n    else()\n        option(NCNN_INSTALL_SDK \"\" ON)\n        option(SKIP_GLSLANG_INSTALL \"\" OFF)\n\n        option(NCNN_PIXEL_ROTATE \"\" OFF)\n        option(NCNN_PIXEL_AFFINE \"\" OFF)\n        option(NCNN_PIXEL_DRAWING \"\" OFF)\n        option(NCNN_VULKAN \"\" ON)\n        option(NCNN_VULKAN_ONLINE_SPIRV \"\" ON)\n        option(NCNN_BUILD_BENCHMARK \"\" OFF)\n        option(NCNN_BUILD_TESTS \"\" OFF)\n        option(NCNN_BUILD_TOOLS \"\" OFF)\n        option(NCNN_BUILD_EXAMPLES \"\" OFF)\n        option(NCNN_DISABLE_RTTI \"\" ON)\n        option(NCNN_DISABLE_EXCEPTION \"\" ON)\n        option(NCNN_INT8 \"\" OFF)\n        option(NCNN_BUILD_SHARED_LIBS \"\" OFF)\n\n        option(WITH_LAYER_absval \"\" OFF)\n        option(WITH_LAYER_argmax \"\" OFF)\n        option(WITH_LAYER_batchnorm \"\" OFF)\n        option(WITH_LAYER_bias \"\" OFF)\n        option(WITH_LAYER_bnll \"\" OFF)\n        option(WITH_LAYER_concat \"\" ON)\n        option(WITH_LAYER_convolution \"\" ON)\n        option(WITH_LAYER_crop \"\" ON)\n        option(WITH_LAYER_deconvolution \"\" ON)\n        option(WITH_LAYER_dropout \"\" OFF)\n        option(WITH_LAYER_eltwise \"\" ON)\n        option(WITH_LAYER_elu \"\" OFF)\n        option(WITH_LAYER_embed \"\" OFF)\n        option(WITH_LAYER_exp \"\" OFF)\n        option(WITH_LAYER_flatten \"\" ON)\n        option(WITH_LAYER_innerproduct \"\" ON)\n        option(WITH_LAYER_input \"\" ON)\n        option(WITH_LAYER_log \"\" OFF)\n        option(WITH_LAYER_lrn \"\" OFF)\n        option(WITH_LAYER_memorydata \"\" OFF)\n        option(WITH_LAYER_mvn \"\" OFF)\n        option(WITH_LAYER_pooling \"\" ON)\n        option(WITH_LAYER_power \"\" OFF)\n        option(WITH_LAYER_prelu \"\" ON)\n        option(WITH_LAYER_proposal \"\" OFF)\n        option(WITH_LAYER_reduction \"\" ON)\n        option(WITH_LAYER_relu \"\" ON)\n        option(WITH_LAYER_reshape \"\" ON)\n        option(WITH_LAYER_roipooling \"\" OFF)\n        option(WITH_LAYER_scale \"\" ON)\n        option(WITH_LAYER_sigmoid \"\" ON)\n        option(WITH_LAYER_slice \"\" ON)\n        option(WITH_LAYER_softmax \"\" OFF)\n        option(WITH_LAYER_split \"\" ON)\n        option(WITH_LAYER_spp \"\" OFF)\n        option(WITH_LAYER_tanh \"\" OFF)\n        option(WITH_LAYER_threshold \"\" OFF)\n        option(WITH_LAYER_tile \"\" OFF)\n        option(WITH_LAYER_rnn \"\" OFF)\n        option(WITH_LAYER_lstm \"\" OFF)\n        option(WITH_LAYER_binaryop \"\" ON)\n        option(WITH_LAYER_unaryop \"\" ON)\n        option(WITH_LAYER_convolutiondepthwise \"\" OFF)\n        option(WITH_LAYER_padding \"\" ON)\n        option(WITH_LAYER_squeeze \"\" OFF)\n        option(WITH_LAYER_expanddims \"\" OFF)\n        option(WITH_LAYER_normalize \"\" OFF)\n        option(WITH_LAYER_permute \"\" OFF)\n        option(WITH_LAYER_priorbox \"\" OFF)\n        option(WITH_LAYER_detectionoutput \"\" OFF)\n        option(WITH_LAYER_interp \"\" ON)\n        option(WITH_LAYER_deconvolutiondepthwise \"\" OFF)\n        option(WITH_LAYER_shufflechannel \"\" OFF)\n        option(WITH_LAYER_instancenorm \"\" OFF)\n        option(WITH_LAYER_clip \"\" ON)\n        option(WITH_LAYER_reorg \"\" OFF)\n        option(WITH_LAYER_yolodetectionoutput \"\" OFF)\n        option(WITH_LAYER_quantize \"\" OFF)\n        option(WITH_LAYER_dequantize \"\" OFF)\n        option(WITH_LAYER_yolov3detectionoutput \"\" OFF)\n        option(WITH_LAYER_psroipooling \"\" OFF)\n        option(WITH_LAYER_roialign \"\" OFF)\n        option(WITH_LAYER_packing \"\" ON)\n        option(WITH_LAYER_requantize \"\" OFF)\n        option(WITH_LAYER_cast \"\" ON)\n        option(WITH_LAYER_hardsigmoid \"\" OFF)\n        option(WITH_LAYER_selu \"\" OFF)\n        option(WITH_LAYER_hardswish \"\" OFF)\n        option(WITH_LAYER_noop \"\" OFF)\n        option(WITH_LAYER_pixelshuffle \"\" ON)\n        option(WITH_LAYER_deepcopy \"\" OFF)\n        option(WITH_LAYER_mish \"\" OFF)\n        option(WITH_LAYER_statisticspooling \"\" OFF)\n        option(WITH_LAYER_swish \"\" OFF)\n        option(WITH_LAYER_gemm \"\" OFF)\n        option(WITH_LAYER_groupnorm \"\" OFF)\n        option(WITH_LAYER_layernorm \"\" OFF)\n        option(WITH_LAYER_softplus \"\" OFF)\n        option(WITH_LAYER_gru \"\" OFF)\n        option(WITH_LAYER_multiheadattention \"\" OFF)\n        option(WITH_LAYER_gelu \"\" OFF)\n        option(WITH_LAYER_convolution1d \"\" OFF)\n        option(WITH_LAYER_pooling1d \"\" OFF)\n        option(WITH_LAYER_convolutiondepthwise1d \"\" OFF)\n        option(WITH_LAYER_convolution3d \"\" OFF)\n        option(WITH_LAYER_convolutiondepthwise3d \"\" OFF)\n        option(WITH_LAYER_pooling3d \"\" OFF)\n        option(WITH_LAYER_matmul \"\" OFF)\n        option(WITH_LAYER_deconvolution1d \"\" OFF)\n        option(WITH_LAYER_deconvolutiondepthwise1d \"\" OFF)\n        option(WITH_LAYER_deconvolution3d \"\" OFF)\n        option(WITH_LAYER_deconvolutiondepthwise3d \"\" OFF)\n        option(WITH_LAYER_einsum \"\" OFF)\n        option(WITH_LAYER_deformableconv2d \"\" OFF)\n\n        add_subdirectory(third_party/ncnn)\n    endif()\nendif()\ntarget_link_libraries(libvideo2x PRIVATE ncnn)\n\n# spdlog\nif(VIDEO2X_USE_EXTERNAL_SPDLOG)\n    find_package(spdlog REQUIRED)\n    target_include_directories(libvideo2x SYSTEM PRIVATE ${spdlog_INCLUDE_DIRS})\n    target_link_libraries(libvideo2x PRIVATE spdlog::spdlog)\nelse()\n    # spdlog exceptions are incompatible with ncnn\n    option(SPDLOG_NO_EXCEPTIONS \"\" ON)\n    option(SPDLOG_INSTALL \"\" ON)\n    add_subdirectory(third_party/spdlog)\n    target_link_libraries(libvideo2x PRIVATE spdlog::spdlog_header_only)\nendif()\n\n# Add Real-ESRGAN, Real-CUGAN, and RIFE\noption(USE_SYSTEM_NCNN \"\" ${VIDEO2X_USE_EXTERNAL_NCNN})\nadd_subdirectory(third_party/librealesrgan_ncnn_vulkan/src)\nadd_subdirectory(third_party/librealcugan_ncnn_vulkan/src)\nadd_subdirectory(third_party/librife_ncnn_vulkan/src)\n\n# Prevent the min and max macros from causing error C2589 on Windows\nif(WIN32)\n    target_compile_definitions(librealesrgan-ncnn-vulkan PRIVATE -DNOMINMAX)\n    target_compile_definitions(librealcugan-ncnn-vulkan PRIVATE -DNOMINMAX)\n    target_compile_definitions(librife-ncnn-vulkan PRIVATE -DNOMINMAX)\nendif()\n\n# Link the shared library to the ncnn-Vulkan libraries\ntarget_link_libraries(libvideo2x PRIVATE\n    librealesrgan-ncnn-vulkan\n    librealcugan-ncnn-vulkan\n    librife-ncnn-vulkan\n)\n\n# Common installation rules for libvideo2x and models\ninstall(TARGETS libvideo2x\n    EXPORT Video2XTargets\n    RUNTIME DESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n    LIBRARY DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    ARCHIVE DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    INCLUDES DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/libvideo2x\"\n)\n\n# Install the header files from the include directory\ninstall(DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/include/libvideo2x/\"\n    DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/libvideo2x\"\n    FILES_MATCHING PATTERN \"*.h\"\n)\n\n# Install the generated version.h file\ninstall(FILES\n    \"${CMAKE_CURRENT_BINARY_DIR}/libvideo2x/version.h\"\n    DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/libvideo2x\"\n)\n\n# Export targets and create CMake package config\ninstall(EXPORT Video2XTargets\n    FILE Video2XTargets.cmake\n    NAMESPACE Video2X::\n    DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/Video2X\"\n)\n\n# Generate the CMake package config file\nconfigure_package_config_file(\n    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/Video2XConfig.cmake.in\"\n    \"${CMAKE_CURRENT_BINARY_DIR}/Video2XConfig.cmake\"\n    INSTALL_DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/Video2X\"\n)\n\n# Install the CMake package config file\ninstall(FILES\n    \"${CMAKE_CURRENT_BINARY_DIR}/Video2XConfig.cmake\"\n    DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/Video2X\"\n)\n\n# Install the model files\nif(WIN32)\n    install(DIRECTORY \"${CMAKE_SOURCE_DIR}/models\" DESTINATION \"${CMAKE_INSTALL_DATADIR}\")\nelse()\n    install(DIRECTORY \"${CMAKE_SOURCE_DIR}/models\" DESTINATION \"${CMAKE_INSTALL_DATADIR}/video2x\")\nendif()\n\n# Install the FFmpeg and ncnn shared libraries\nif(WIN32)\n    file(GLOB ffmpeg_dlls \"${ffmpeg_base_path}/bin/*.dll\")\n    install(FILES ${ffmpeg_dlls} DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n\n    if(NOT VIDEO2X_USE_EXTERNAL_BOOST)\n        install(FILES  \"${ncnn_base_path}/bin/ncnn.dll\" DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n    endif()\nendif()\n\n# Build the video2x CLI executable\nif(VIDEO2X_BUILD_CLI)\n    add_executable(video2x\n        tools/video2x/src/argparse.cpp\n        tools/video2x/src/newline_safe_sink.cpp\n        tools/video2x/src/timer.cpp\n        tools/video2x/src/validators.cpp\n        tools/video2x/src/video2x.cpp\n        tools/video2x/src/vulkan_utils.cpp\n    )\n\n    # Set the C++ standard to C++17\n    target_compile_features(video2x PRIVATE cxx_std_17)\n\n    # Set the shared library output name and disable C++ extensions\n    set_target_properties(video2x PROPERTIES\n        OUTPUT_NAME video2x\n        CXX_EXTENSIONS OFF\n    )\n\n    # Include directories for the executable\n    target_include_directories(video2x PRIVATE\n        \"${CMAKE_CURRENT_BINARY_DIR}\"\n        \"${PROJECT_SOURCE_DIR}/include\"\n        \"${PROJECT_SOURCE_DIR}/tools/video2x/include\"\n    )\n\n    # Link the executable with the shared library\n    target_link_libraries(video2x PRIVATE libvideo2x)\n\n    # Set debug compile options\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n        target_compile_options(video2x PRIVATE $<$<CONFIG:Debug>:/Zi /Od /MDd>)\n    elseif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n        target_compile_options(video2x PRIVATE $<$<CONFIG:Debug>:-g -O0>)\n    endif()\n\n    # FFmpeg\n    if(WIN32)\n        target_include_directories(video2x SYSTEM PRIVATE\n            \"${PROJECT_SOURCE_DIR}/third_party/ffmpeg-shared/include\"\n        )\n        target_link_libraries(video2x PRIVATE\n            \"${ffmpeg_base_path}/lib/avcodec.lib\"\n            \"${ffmpeg_base_path}/lib/avutil.lib\"\n        )\n    else()\n        # FFmpeg libraries have already been found\n        # Apply include directories and libraries directly to the target\n        target_include_directories(video2x SYSTEM PRIVATE\n            ${libavcodec_INCLUDE_DIRS}\n            ${libavutil_INCLUDE_DIRS}\n        )\n        target_link_libraries(video2x PRIVATE ${libavcodec_LIBRARIES} ${libavutil_LIBRARIES})\n    endif()\n\n    # spdlog\n    # spdlog targets has already been added\n    if(VIDEO2X_USE_EXTERNAL_SPDLOG)\n        target_include_directories(video2x SYSTEM PRIVATE ${spdlog_INCLUDE_DIRS})\n        target_link_libraries(video2x PRIVATE spdlog::spdlog)\n    else()\n        target_link_libraries(video2x PRIVATE spdlog::spdlog_header_only)\n    endif()\n\n    # Vulkan\n    find_package(Vulkan REQUIRED)\n    target_link_libraries(video2x PRIVATE Vulkan::Vulkan)\n\n    # Boost\n    if(VIDEO2X_USE_EXTERNAL_BOOST)\n        find_package(Boost REQUIRED COMPONENTS program_options)\n    else()\n        option(Boost_USE_STATIC_LIBS \"\" ON)\n        option(Boost_USE_STATIC_RUNTIME \"\" ON)\n        option(Boost_COMPONENTS program_options)\n\n        add_subdirectory(third_party/boost)\n        target_include_directories(video2x SYSTEM PRIVATE\n            ${PROJECT_SOURCE_DIR}/third_party/boost/libs/program_options/include\n        )\n\n        # Suppress the -Wsign-conversion warnings for Boost.Nowide\n        if (TARGET boost_nowide AND CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n            target_compile_options(boost_nowide PRIVATE -Wno-error=sign-conversion)\n        endif()\n    endif()\n    target_link_libraries(video2x PRIVATE Boost::program_options)\n\n    # Install the video2x executable\n    install(TARGETS video2x RUNTIME DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n\n    # Install the Boost DLL\n    if(WIN32 AND NOT VIDEO2X_USE_EXTERNAL_BOOST)\n        set(boost_base_path\n            \"${CMAKE_BINARY_DIR}/third_party/boost/libs/program_options/${CMAKE_BUILD_TYPE}\"\n        )\n\n        # Different build types have different DLL names\n        if(CMAKE_BUILD_TYPE STREQUAL Release)\n            set(boost_dll_path \"${boost_base_path}/boost_program_options-vc143-mt-x64-1_86.dll\")\n        else()\n            set(boost_dll_path \"${boost_base_path}/boost_program_options-vc143-mt-gd-x64-1_86.dll\")\n        endif()\n\n        install(FILES \"${boost_dll_path}\" DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n    endif()\nendif()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.740234375,
          "content": "# Code of Conduct\n\n## Our Goal\n\nOur goal is to create a respectful and inclusive environment for everyone involved in our project.\n\n## Our Standards\n\n- **Respect Others**: Treat everyone with respect, regardless of their background or beliefs.\n- **Resolve Peacefully**: Address disagreements constructively and aim for peaceful resolutions.\n- **Report Problems**: If you witness or experience any issues, report them to [github@k4yt3x.com](mailto:github@k4yt3x.com).\n\n## Enforcement\n\n- **Confidentiality**: Reports will be handled confidentially.\n- **Action**: The project team will review and address reported issues promptly and appropriately.\n\n## Contact\n\nFor any questions or concerns, please contact us at [github@k4yt3x.com](mailto:github@k4yt3x.com).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.453125,
          "content": "# Contributing to Video2X\n\nThank you for considering contributing to Video2X. This document outlines the guidelines for contributing to ensure a smooth and effective development process. Should you have any questions or require assistance, please do not hesitate to reach out to the project maintainers.\n\n## Commit Messages\n\nCommit messages must follow the [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) specification. This helps maintain a consistent and informative project history.\n\n### Commit Message Format\n\n```text\n<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n```\n\n#### Common Types\n\n- **feat**: A new feature\n- **fix**: A bug fix\n- **docs**: Documentation updates\n- **perf**: Performance improvements that do not affect the code's behavior\n- **style**: Changes that do not affect the code's functionality (e.g., formatting)\n- **refactor**: Code changes that neither fix a bug nor add a feature\n- **test**: Adding or modifying tests\n- **chore**: Maintenance or other non-functional updates\n\n#### Common Scopes\n\nIncluding a scope is optional but is strongly encouraged. One commit should only address changes to a single module or component. If a change must affect multiple modules, use `*` as the scope.\n\n- **avutils**: The audio/video utilities\n- **conversions**: The video format conversion utilities\n- **decoder**: The video decoder module\n- **encoder**: The video encoder module\n- **fsutils**: The file system utilities\n- **logging**: Any logging-related changes\n- **libplacebo**: The libplacebo filter\n- **realesrgan**: The Real-ESRGAN filter\n- **realcugan**: The Real-CUGAN filter\n- **rife**: The RIFE frame interpolator\n- **video2x**: The Video2X command-line interface\n\n#### Example\n\n```\nfeat(encoder): add support for specifying video pixel format\n\nAdd the `pix_fmt` field to the `EncoderConfig` struct to allow users to specify the pixel format for encoding.\n\nCloses #12345\n```\n\n## Documentation of Changes\n\nAll changes must be documented in the `CHANGELOG.md` file. The changelog must adhere to the [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) format.\n\n### Example Changelog Entry\n\n```markdown\n## [Unreleased]\n\n### Added\n\n- Support for specifying video pixel format in the encoder module (#12345).\n\n### Fixed\n\n- A memory leak in the video encoder module (#23456).\n```\n\n## Coding Standards\n\nAll code contributions must strictly follow the coding standards outlined in this section. These standards help maintain code quality, readability, and consistency throughout the project. Before submitting any code changes, ensure your code adheres to these guidelines.\n\n### C++ Code Style\n\nC++ code must follow the [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html). This ensures consistency and readability across the codebase. Additionally:\n\n- Use smart pointers (`std::unique_ptr`, `std::shared_ptr`) instead of raw pointers wherever possible.\n- Use `#pragma once` for header guards.\n- Use `#include` directives in the following order:\n  1. Related header files\n  2. C++ standard library headers\n  3. Third-party library headers\n  4. Project-specific headers\n- Never check pointers with implicit conversion to `bool`; always perform an explicit comparison with `nullptr`.\n- Always set pointers to `nullptr` after freeing the associated memory.\n\n### Code Formatting\n\nAll C++ code must be formatted using `clang-format` with the project's `.clang-format` configuration file before submitting a pull request. This helps maintain a uniform code style.\n\n## Submitting a Pull Request\n\n1. **Fork the repository**: Create a personal fork of the project.\n2. **Create a branch**: Create a new branch for your changes:\n   ```bash\n   git checkout -b <type>/<scope>\n   ```\n3. **Write code**: Make your changes, ensuring they adhere to the coding standards and are properly documented.\n4. **Document changes**: Update `CHANGELOG.md` with your changes.\n5. **Commit changes**: Write clear and descriptive commit messages using the Conventional Commits format.\n6. **Push changes**: Push your branch to your fork:\n   ```bash\n   git push origin <type>/<scope>\n   ```\n7. **Open a pull request**: Submit your pull request to the `master` branch of the original repository. Include a clear description of the changes made and reference any relevant issues.\n\n## Code Reviews\n\nAll pull requests will undergo a code review. Please expect feedback from the maintainers after you submit the pull request. We may need further information or changes before merging your pull request.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.9970703125,
          "content": "Video2X\nCopyright (C) 2018-2024 K4YT3X and contributors.\n\nThis product depends on FFmpeg, which is available under the GNU Lesser General Public License 2.1.\nThe source code can be found at https://github.com/FFmpeg/FFmpeg.\n\nThis product depends on Anime4K, which is available under the MIT License.\nThe source code can be found at https://github.com/bloc97/Anime4K.\n\nThis product depends on Real-ESRGAN ncnn Vulkan, which is available under the MIT License.\nThe source code can be found at https://github.com/xinntao/Real-ESRGAN-ncnn-vulkan.\n\nThis product depends on Real-CUGAN ncnn Vulkan, which is available under the MIT License.\nThe source code can be found at https://github.com/nihui/realcugan-ncnn-vulkan.\n\nThis product depends on RIFE ncnn Vulkan, which is available under the MIT License.\nThe source code can be found at https://github.com/nihui/rife-ncnn-vulkan.\n\nThis product depends on ncnn, which is available under the BSD 3-Clause License.\nThe source code can be found at https://github.com/Tencent/ncnn.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.5068359375,
          "content": "<p align=\"center\">\n   <img src=\"https://github.com/user-attachments/assets/5cd63373-e806-474f-94ec-6e04963bf90f\"\n        alt=\"Video2X: A machine learning-based video super resolution and frame interpolation framework.\"/>\n   </br>\n   <img src=\"https://img.shields.io/github/v/release/k4yt3x/video2x?style=flat-square\"/>\n   <img src=\"https://img.shields.io/github/downloads/k4yt3x/video2x/total?style=flat-square\"/>\n   <img src=\"https://img.shields.io/github/license/k4yt3x/video2x?style=flat-square\"/>\n   <img src=\"https://img.shields.io/github/sponsors/k4yt3x?style=flat-square&link=https%3A%2F%2Fgithub.com%2Fsponsors%2Fk4yt3x\"/>\n   <img src=\"https://img.shields.io/badge/dynamic/json?color=%23e85b46&label=Patreon&query=data.attributes.patron_count&suffix=%20patrons&url=https%3A%2F%2Fwww.patreon.com%2Fapi%2Fcampaigns%2F4507807&style=flat-square\"/>\n</p>\n\n## 🌟 Version 6.0.0\n\nVideo2X 6.0.0 highlights:\n\n- Complete rewrite of the Video2X project in C/C++.\n- Faster and more efficient architecture.\n- Cross-platform support for Windows and Linux.\n- Vastly improved output quality.\n- New GUI and installer for easy setup on Windows.\n\n<details>\n<summary>Click to see more details</summary>\n\nVersion 6.0.0 is a complete rewrite of this project in C/C++. It:\n\n- genuinely works this time, with much less hassle compared to the 5.0.0 beta;\n- is blazing fast, thanks to the new optimized pipeline and the efficiency of C/C++;\n- is cross-platform, available now for both Windows and Linux;\n- offers significantly better output quality with Anime4K v4, RealESRGAN, RealCUGAN, and RIFE;\n- supports two modes: filtering (upscaling) and frame interpolation;\n- supports Anime4K v4 and all custom MPV-compatible GLSL shaders;\n- supports RealESRGAN, RealCUGAN, and RIFE (all models) via ncnn and Vulkan;\n- requires zero additional disk space during processing, just space for the final output.\n\n</details>\n\n![6.3.0-screenshot](https://github.com/user-attachments/assets/c5442f84-5ffc-4476-915f-a0fc188a2cb3)\n\n## [🪟 Install on Windows](https://docs.video2x.org/installing/windows-qt6.html)\n\n**[Download the Latest Windows Installer Executable (6.3.1)](https://github.com/k4yt3x/video2x/releases/download/6.3.1/video2x-qt6-windows-amd64-installer.exe)**\n\nYou can download the latest Windows release on the [releases page](https://github.com/k4yt3x/video2x/releases/latest). For basic GUI usage, refer to the [documentation](https://docs.video2x.org/running/desktop.html). If you're unable to download directly from GitHub, try the [mirror site](https://files.k4yt3x.com/Projects/Video2X). The GUI currently supports the following languages:\n\n- English (United States)\n- 简体中文（中国）\n- 日本語（日本）\n- Português (Portugal)\n- Français (France)\n\n## [🐧 Install on Linux](https://docs.video2x.org/installing/linux.html)\n\nVideo2X packages are available for the Linux distros listed below. If you'd like to build it from source code, refer to the [PKGBUILD](packaging/arch/PKGBUILD) file for a general overview of the required dependencies and commands. If a package is not available for your distro and you prefer not to compile the program from source code, consider using the container image outlined in the next section.\n\n- Arch Linux: AUR packages, maintained by [@K4YT3X](https://github.com/k4yt3x).\n  - [aur/video2x](https://aur.archlinux.org/packages/video2x)\n  - [aur/video2x-git](https://aur.archlinux.org/packages/video2x-git)\n  - [aur/video2x-qt6](https://aur.archlinux.org/packages/video2x-qt6)\n  - [aur/video2x-qt6-git](https://aur.archlinux.org/packages/video2x-qt6-git)\n- Arch Linux (Chinese Mainland): archlinuxcn packages, maintained by [@Integral-Tech](https://github.com/Integral-Tech).\n  - [archlinuxcn/video2x](https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/video2x)\n  - [archlinuxcn/video2x-git](https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/video2x-git)\n  - [archlinuxcn/video2x-qt6-git](https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/video2x-qt6-git)\n- Ubuntu 24.04: `video2x-linux-ubuntu2404-amd64.deb` on the [releases page](https://github.com/k4yt3x/video2x/releases/latest).\n\n## [📦 Container Image](https://docs.video2x.org/running/container.html)\n\nVideo2X [container images](https://github.com/k4yt3x/video2x/pkgs/container/video2x) are available on the GitHub Container Registry for easy deployment on Linux and macOS. If you already have Docker/Podman installed, only one command is needed to start upscaling a video. For more information on how to use Video2X's Docker image, please refer to the [documentation](https://docs.video2x.org/running/container.html).\n\n## [📔 Google Colab](https://colab.research.google.com/drive/1gWEwcA9y57EsxwOjmLNmNMXPsafw0kGo)\n\nYou can use Video2X on [Google Colab](https://colab.research.google.com/) **for free** if you don't have a powerful GPU of your own. You can borrow a powerful GPU (NVIDIA T4, L4, or A100) on Google's server for free for a maximum of 12 hours per session. **Please use the free resource fairly** and do not create sessions back-to-back and run upscaling 24/7. This might result in you getting banned. You can get [Colab Pro/Pro+](https://colab.research.google.com/signup/pricing) if you'd like to use better GPUs and get longer runtimes. Usage instructions are embedded in the [Colab Notebook](https://colab.research.google.com/drive/1gWEwcA9y57EsxwOjmLNmNMXPsafw0kGo).\n\n## [💬 Telegram Discussion Group](https://t.me/video2x)\n\nJoin our Telegram discussion group to ask any questions you have about Video2X, chat directly with the developers, or discuss super resolution, frame interpolation technologies, or the future of Video2X in general.\n\n## [📖 Documentation](https://docs.video2x.org/)\n\nComprehensive documentation for Video2X is available at [https://docs.video2x.org/](https://docs.video2x.org/). It offers detailed instructions on how to [build](https://docs.video2x.org/building/index.html), [install](https://docs.video2x.org/installing/index.html), [use](https://docs.video2x.org/running/index.html), and [develop](https://docs.video2x.org/developing/index.html) with this program.\n\n## 📽️ Video Demos (Outdated)\n\n![Spirited Away Demo](https://user-images.githubusercontent.com/21986859/49412428-65083280-f73a-11e8-8237-bb34158a545e.png)\\\n_Upscale demo: Spirited Away's movie trailer_\n\n- **Spirited Away**: [YouTube](https://youtu.be/mGEfasQl2Zo) | [Bilibili](https://www.bilibili.com/video/BV1V5411471i/)\n  - 360P to 4K\n  - The [original video](https://www.youtube.com/watch?v=ByXuk9QqQkk)'s copyright belongs to 株式会社スタジオジブリ\n- **Bad Apple!!**: [YouTube](https://youtu.be/A81rW_FI3cw) | [Bilibili](https://www.bilibili.com/video/BV16K411K7ue)\n  - 384P 30 FPS to 4K 120 FPS with waifu2x and DAIN\n  - The [original video](https://www.nicovideo.jp/watch/sm8628149)'s copyright belongs to あにら\n- **The Pet Girl of Sakurasou**: [YouTube](https://youtu.be/M0vDI1HH2_Y) | [Bilibili](https://www.bilibili.com/video/BV14k4y167KP/)\n  - 240P 29.97 to 1080P 60 FPS with waifu2x and DAIN\n  - The original video's copyright belongs to ASCII Media Works\n\n### Standard Test Clip\n\nThe following clip can be used to test if your setup works properly. This is also the standard clip used for running performance benchmarks.\n\n- [Standard Test Clip (240P)](https://files.k4yt3x.com/Resources/Videos/standard-test.mp4) 4.54 MiB\n- [Real-CUGAN Upscaled Sample (1704P)](https://files.k4yt3x.com/Resources/Videos/standard-realcugan.mp4) 3.5 MiB\n- [Real-ESRGAN Upscaled Sample (1704P)](https://files.k4yt3x.com/Resources/Videos/standard-realesrgan.mp4) 3.1 MiB\n- [waifu2x Upscaled Sample (1080P)](https://files.k4yt3x.com/Resources/Videos/standard-waifu2x.mp4) 4.54 MiB\n- [Ground Truth (1080P)](https://files.k4yt3x.com/Resources/Videos/standard-original.mp4) 22.2 MiB\n\nThe original clip came from the anime \"さくら荘のペットな彼女.\"\\\nCopyright of this clip belongs to 株式会社アニプレックス.\n\n## ⚖️ License\n\nThis project is licensed under [GNU AGPL version 3](https://www.gnu.org/licenses/agpl-3.0.txt).\\\nCopyright (C) 2018-2025 K4YT3X and [contributors](https://github.com/k4yt3x/video2x/graphs/contributors).\n\n![AGPLv3](https://www.gnu.org/graphics/agplv3-155x51.png)\n\nThis project includes or depends on these following projects:\n\n| Project                                                                               | License         |\n| ------------------------------------------------------------------------------------- | --------------- |\n| [FFmpeg/FFmpeg](https://www.ffmpeg.org/)                                              | LGPLv2.1, GPLv2 |\n| [Tencent/ncnn](https://github.com/Tencent/ncnn)                                       | BSD 3-Clause    |\n| [bloc97/Anime4K](https://github.com/bloc97/Anime4K)                                   | MIT License     |\n| [nihui/realcugan-ncnn-vulkan](https://github.com/nihui/realcugan-ncnn-vulkan)         | MIT License     |\n| [nihui/rife-ncnn-vulkan](https://github.com/nihui/rife-ncnn-vulkan)                   | MIT License     |\n| [xinntao/Real-ESRGAN-ncnn-vulkan](https://github.com/xinntao/Real-ESRGAN-ncnn-vulkan) | MIT License     |\n\nMore licensing information can be found in the [NOTICE](NOTICE) file.\n\n## 🌺 Special Thanks\n\nSpecial thanks to the following individuals for their significant contributions to the project, listed in alphabetical order.\n\n- [@ArchieMeng](https://github.com/archiemeng)\n- [@BrianPetkovsek](https://github.com/BrianPetkovsek)\n- [@Integral-Tech](https://github.com/Integral-Tech)\n- [@ddouglas87](https://github.com/ddouglas87)\n- [@lhanjian](https://github.com/lhanjian)\n- [@nihui](https://github.com/nihui)\n- [@sat3ll](https://github.com/sat3ll)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.59375,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\n- **Email**: Send vulnerability reports via email to [github@k4yt3x.com](mailto:github@k4yt3x.com).\n- **Details**: Include description, impact, reproduction steps, and proof-of-concept if applicable.\n- **Confidentiality**: Do not disclose vulnerabilities publicly until a fix is released.\n\n## Response Process\n\n1. **Acknowledge**: We will acknowledge receipt within 48 hours.\n2. **Assess**: Initial assessment and response within 7 days.\n3. **Fix**: Develop and release a patch promptly.\n4. **Credit**: Acknowledge contributors unless anonymity is requested.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}