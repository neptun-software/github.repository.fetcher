{
  "metadata": {
    "timestamp": 1736566268220,
    "page": 15,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "typesense/typesense",
      "stars": 21704,
      "defaultBranch": "v28",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.4267578125,
          "content": "build --incompatible_strict_action_env\nbuild --action_env=BAZEL_CXXOPTS=\"-std=c++17\"\nbuild --define=TYPESENSE_VERSION=\\\"nightly\\\"\nbuild --cxxopt=\"-std=c++17\"\nbuild --strip=never\nbuild --define=BRPC_WITH_GLOG=true\nbuild --jobs=6\n\ntest --jobs=6\ntest --define=BRPC_WITH_GLOG=true\n\nrun --jobs=6\nrun --define=BRPC_WITH_GLOG=true\n\nbuild --enable_platform_specific_config\n\nbuild:linux --action_env=BAZEL_LINKLIBS=\"-l%:libstdc++.a -l%:libgcc.a\"\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.0048828125,
          "content": "6.2.0"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.212890625,
          "content": ".idea\n.clwb\n*.iml\nexternal*\nexternal\n/build*\ntest-build*\ncmake-build*\ncmake-build-debug\ncmake-build-release\n*.pem\n.DS_Store\n/bazel-*\ntypesense-server-data/\n.clwb/.bazelproject\n.vscode/settings.json\n/onnxruntime-prefix\n"
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 4.33203125,
          "content": "load(\"@com_grail_bazel_compdb//:defs.bzl\", \"compilation_database\")\nload(\"@com_grail_bazel_output_base_util//:defs.bzl\", \"OUTPUT_BASE\")\n\n# Target to generate a compile_commands.json compilation database file\ncompilation_database(\n    name = \"compdb\",\n    output_base = OUTPUT_BASE,\n    targets = [\n        \"//:typesense-server\",\n        \"//:search\",\n        \"//:benchmark\",\n    ],\n)\n\nfilegroup(\n    name = \"src_files\",\n    srcs = glob([\"src/*.cpp\"]),\n)\n\ncc_library(\n    name = \"headers\",\n    hdrs = glob([\n        \"include/**/*.h\",\n        \"include/**/*.hpp\",\n    ]),\n    includes = [\"include\"],\n)\n\nconfig_setting(\n    name = \"with_cuda\",\n    define_values = { \"use_cuda\": \"on\" }\n)\n\ncc_library(\n    name = \"common_deps\",\n    defines = [\n        \"NDEBUG\",\n    ],\n    linkopts = select({\n        \"@platforms//os:macos\": [\"-framework Foundation -framework SystemConfiguration\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\n        \":headers\",\n        \"@onnx_runtime//:onnxruntime_lib\",\n        \"@sentencepiece\",\n        \"@sentencepiece//:sentencepiece_headers\",\n        \"@com_github_brpc_braft//:braft\",\n        \"@com_github_brpc_brpc//:brpc\",\n        \"@com_github_google_glog//:glog\",\n        \"@curl\",\n        \"@for\",\n        \"@h2o\",\n        \"@iconv\",\n        \"@icu\",\n        \"@jemalloc\",\n        \"@kakasi\",\n        \"@lrucache\",\n        \"@rocksdb\",\n        \"@s2geometry\",\n        \"@hnsw\",\n        \"@clip_tokenizer//:clip\",\n        \"@whisper.cpp//:whisper\",\n        \"@whisper.cpp//:whisper_headers\",\n        \"@snowball\",\n        \"@snowball//:snowball_headers\",\n        \"@archive\",\n        # \"@zip\",\n    ])\n\ncc_library(\n    name = \"linux_deps\",\n    defines = [\n        \"NDEBUG\",\n    ],\n    deps = [\n        \"@elfutils//:libdw\",\n    ],\n)\n\nCOPTS = [\n    \"-Wall\",\n    \"-Wextra\",\n    \"-Wno-unused-parameter\",\n    \"-Werror=return-type\",\n    \"-O2\",\n    \"-g\",\n]\n\nASAN_COPTS = [\n    \"-fsanitize=address\",\n    \"-fno-omit-frame-pointer\",\n    \"-DASAN_BUILD\"\n]\n\ncc_binary(\n    name = \"typesense-server\",\n    srcs = [\n        \"src/main/typesense_server.cpp\",\n        \":src_files\",\n    ],\n    local_defines = [\n        \"TYPESENSE_VERSION=\\\\\\\"$(TYPESENSE_VERSION)\\\\\\\"\"\n    ],\n    linkopts = select({\n        \"@platforms//os:linux\": [\"-static-libstdc++\", \"-static-libgcc\", \"-fuse-ld=lld\"],\n        \"@platforms//os:macos\": [\"-framework Foundation\", \"-framework Accelerate\", \"-framework Metal\", \"-framework MetalKit\"],\n        \"//conditions:default\": [],\n    }),\n    copts = COPTS + select({\n        \"@platforms//os:linux\": [\"-DBACKWARD_HAS_DW=1\", \"-DBACKWARD_HAS_UNWIND=1\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\":common_deps\"] +  select({\n        \"@platforms//os:linux\": [\":linux_deps\"],\n        \"//conditions:default\": [],\n    }),\n)\n\ncc_binary(\n    name = \"search\",\n    srcs = [\n        \"src/main/main.cpp\",\n        \":src_files\",\n    ],\n    copts = COPTS,\n    deps = [\":common_deps\"],\n)\n\ncc_binary(\n    name = \"benchmark\",\n    srcs = [\n        \"src/main/benchmark.cpp\",\n        \":src_files\",\n    ],\n    copts = COPTS,\n    deps = [\":common_deps\"],\n)\n\nfilegroup(\n    name = \"test_src_files\",\n    srcs = glob([\"test/*.cpp\"]),\n)\n\nfilegroup(\n    name = \"test_data_files\",\n    srcs = glob([\n        \"test/**/*.txt\",\n        \"test/**/*.ini\",\n        \"test/**/*.jsonl\",\n        \"test/**/*.gz\",\n    ]),\n)\n\nTEST_COPTS = [\n    \"-Wall\",\n    \"-Wextra\",\n    \"-Wno-unused-parameter\",\n    \"-Werror=return-type\",\n    \"-g\",\n    \"-DTEST_BUILD\"\n]\n\nASAN_COPTS = [\n    \"-fsanitize=address\",\n    \"-fno-omit-frame-pointer\",\n    \"-DASAN_BUILD\"\n]\n\nconfig_setting(\n    name = \"release_mode\",\n    define_values = { \"mode\": \"release\" }\n)\n\nconfig_setting(\n    name = \"asan_mode\",\n    define_values = { \"mode\": \"asan\" }\n)\n\ncc_test(\n    name = \"typesense-test\",\n    srcs = [\n        \":src_files\",\n        \":test_src_files\",\n    ],\n    copts = TEST_COPTS + select({\n        \":release_mode\": [\"-O2\"],\n        \":asan_mode\": [\"-O0\"] + ASAN_COPTS,\n        \"//conditions:default\": [\"-O0\"]\n    }),\n    data = [\n        \":test_data_files\",\n        \"@libart//:data\",\n        \"@token_offsets//file\",\n    ],\n    deps = [\n        \":common_deps\",\n        \"@com_google_googletest//:gtest\",\n    ],\n    defines = [\n        \"ROOT_DIR=\"\n    ],\n    linkopts = select({\n       \":asan_mode\": [\"-fsanitize=address\", \"-fuse-ld=lld\"],\n       \"//conditions:default\": []\n    }) +  select({\n       \"@platforms//os:linux\": [\"-fuse-ld=lld\"],\n       \"//conditions:default\": [],\n   })\n)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 12.5390625,
          "content": "cmake_minimum_required(VERSION 3.24.0)\nproject(typesense)\n\ncmake_policy(SET CMP0074 NEW)\ncmake_policy(SET CMP0003 NEW)\n\nset(USE_SANTINIZER OFF)\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++17 -Wall -Wextra -Wno-unused-parameter -Werror=return-type -O2 -g -DNDEBUG\")\nset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra -Wno-unused-parameter -Werror=return-type -std=c++17 -O0 -g\")\nset(DEP_ROOT_DIR ${CMAKE_SOURCE_DIR}/external-${CMAKE_SYSTEM_NAME})\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${CMAKE_SOURCE_DIR}/cmake/Modules/\")\n\nif (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-class-memaccess\")\n    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -Wno-class-memaccess\")\nelse()\n    if(USE_SANTINIZER)\n        set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=thread -fsanitize-recover=all -fPIE\")\n    endif()\nendif()\n\nif(${CMAKE_SYSTEM_PROCESSOR} MATCHES \"arm\")\n    set(CMAKE_CPP_FLAGS \"${CMAKE_CPP_FLAGS} -mcpu=native\")\nendif()\n\n# will be overridden from command line during build\nset(TYPESENSE_VERSION \"nightly\" CACHE STRING \"\")\nset(BUILD_DEPS \"yes\" CACHE STRING \"\")\n\nif(NOT EXISTS ${DEP_ROOT_DIR})\n    file(MAKE_DIRECTORY ${DEP_ROOT_DIR})\nendif()\n\n# Needed to enable Snappy on RocksDB\nadd_definitions(-DSNAPPY)\nadd_definitions(-DS2_USE_GLOG)\n\nif (APPLE)\n    add_definitions(-DGTEST_USE_OWN_TR1_TUPLE)\n    add_definitions(-D__GLIBCXX__)\n\n    # Prefer brew installated libraries\n    set(OPENSSL_ROOT_DIR /usr/local/opt/openssl@1.1)\n    set(ENV{OPENSSL_ROOT_DIR} /usr/local/opt/openssl@1.1)\n\n    set(SNAPPY_ROOT_DIR /usr/local/opt/snappy)\n    set(ZLIB_ROOT /usr/local/opt/zlib)\n    set(CMAKE_PREFIX_PATH /usr/local/opt/curl-openssl /usr/local/opt/icu4c)\n\n    add_compile_definitions(USE_BACKWARD=1)\nelse()\n    add_compile_definitions(BACKWARD_HAS_DW=1)\nendif()\n\n# Ensure that we only use the static versions of libraries to link against\n# You can't statically link a shared library (or dynamically link a static library)\nIF(WIN32 OR MSVC)\n    SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a)\nELSE()\n    SET(CMAKE_FIND_LIBRARY_SUFFIXES .a)\n    set(ENV{CMAKE_FIND_LIBRARY_SUFFIXES} \".a\")\nENDIF()\n\ninclude(cmake/onnxruntime.cmake)\ninclude(cmake/onnxruntime_ext.cmake)\ninclude(cmake/For.cmake)\ninclude(cmake/H2O.cmake)\ninclude(cmake/RocksDB.cmake)\ninclude(cmake/GoogleTest.cmake)\ninclude(cmake/TestResources.cmake)\ninclude(cmake/Iconv.cmake)\ninclude(cmake/Jemalloc.cmake)\ninclude(cmake/s2.cmake)\ninclude(cmake/lrucache.cmake)\ninclude(cmake/kakasi.cmake)\ninclude(cmake/hnsw.cmake)\n\nFIND_PACKAGE(OpenSSL 1.1.1 REQUIRED)\nFIND_PACKAGE(Snappy REQUIRED)\nFIND_PACKAGE(ZLIB REQUIRED)\nFIND_PACKAGE(CURL REQUIRED)\nFIND_PACKAGE(ICU REQUIRED)\nFIND_PACKAGE(Protobuf REQUIRED)\nFIND_PACKAGE(LevelDB REQUIRED)\nFIND_PACKAGE(gflags REQUIRED)\nFIND_PACKAGE(glog REQUIRED)\n\nmessage(\"OpenSSL library: ${OPENSSL_LIBRARIES}\")\n\nFILE(GLOB SRC_FILES src/*.cpp ${DEP_ROOT_DIR}/${KAKASI_NAME}/data/*.cpp)\nFILE(GLOB TEST_FILES test/*.cpp)\n\ninclude_directories(include)\ninclude_directories(include/tsl)\ninclude_directories(/usr/local/include)\ninclude_directories(${OPENSSL_INCLUDE_DIR})\ninclude_directories(${CURL_INCLUDE_DIR})\ninclude_directories(${ICU_INCLUDE_DIRS})\ninclude_directories(${DEP_ROOT_DIR}/${FOR_NAME})\ninclude_directories(${DEP_ROOT_DIR}/${GTEST_NAME}/googletest/include)\ninclude_directories(${DEP_ROOT_DIR}/${H2O_NAME}/include)\ninclude_directories(${DEP_ROOT_DIR}/${H2O_NAME}/include/h2o)\ninclude_directories(${DEP_ROOT_DIR}/${ROCKSDB_NAME}/include)\ninclude_directories(${DEP_ROOT_DIR}/${ICONV_NAME}/include)\ninclude_directories(${DEP_ROOT_DIR}/${BRPC_NAME}/include)\ninclude_directories(${DEP_ROOT_DIR}/${BRAFT_NAME}/include)\ninclude_directories(${DEP_ROOT_DIR}/${JEMALLOC_NAME}/include/jemalloc)\ninclude_directories(${DEP_ROOT_DIR}/${S2_NAME}/src)\ninclude_directories(${DEP_ROOT_DIR}/${LRUCACHE_NAME}/include)\ninclude_directories(${DEP_ROOT_DIR}/${KAKASI_NAME}/build/include)\ninclude_directories(${DEP_ROOT_DIR}/${KAKASI_NAME}/data)\ninclude_directories(${DEP_ROOT_DIR}/${HNSW_NAME})\ninclude_directories(${DEP_ROOT_DIR}/${ONNX_NAME}/include/onnxruntime)\ninclude_directories(${DEP_ROOT_DIR}/${ONNX_EXT_NAME}/operators/src_dir)\n\n\nlink_directories(/usr/local/lib)\nlink_directories(${DEP_ROOT_DIR}/${GTEST_NAME}/googletest/build)\nlink_directories(${DEP_ROOT_DIR}/${FOR_NAME})\nlink_directories(${DEP_ROOT_DIR}/${H2O_NAME}/build)\nlink_directories(${DEP_ROOT_DIR}/${ROCKSDB_NAME})\nlink_directories(${DEP_ROOT_DIR}/${ICONV_NAME}/lib/.libs)\nlink_directories(${DEP_ROOT_DIR}/${JEMALLOC_NAME}/lib)\nlink_directories(${DEP_ROOT_DIR}/${S2_NAME}/build)\nlink_directories(${DEP_ROOT_DIR}/${KAKASI_NAME}/build/lib)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/onnx-build)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/re2-build)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/abseil_cpp-build)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/abseil_cpp-build/absl)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/abseil_cpp-build/absl/base)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/protobuf-build)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/abseil_cpp-build/absl/container)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/abseil_cpp-build/absl/hash)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/pytorch_cpuinfo-build)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/pytorch_cpuinfo-build/deps)\nlink_directories(${DEP_ROOT_DIR}/${ONNX_NAME}-build/lib/_deps/pytorch_cpuinfo-build/deps/clog)\n\nset(JEMALLOC_ROOT_DIR \"${DEP_ROOT_DIR}/${JEMALLOC_NAME}\")\nFIND_PACKAGE(Jemalloc REQUIRED)\n\nadd_executable(typesense-server ${SRC_FILES} src/main/typesense_server.cpp)\nadd_executable(search ${SRC_FILES} src/main/main.cpp)\nadd_executable(benchmark ${SRC_FILES} src/main/benchmark.cpp)\nadd_executable(typesense-test ${SRC_FILES} ${TEST_FILES})\n\nadd_library(ONNX_SESSION IMPORTED STATIC)\nset_target_properties(ONNX_SESSION PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_session.a)\nadd_library(ONNX_OPT STATIC IMPORTED)\nset_target_properties(ONNX_OPT PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_optimizer.a)\nadd_library(ONNX_PRO STATIC IMPORTED)\nset_target_properties(ONNX_PRO PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_providers.a)\nadd_library(ONNX_UTL STATIC IMPORTED)\nset_target_properties(ONNX_UTL PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_util.a)\nadd_library(ONNX_FRM STATIC IMPORTED)\nset_target_properties(ONNX_FRM PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_framework.a)\nadd_library(ONNX_GRP STATIC IMPORTED)\nset_target_properties(ONNX_GRP PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_graph.a)\nadd_library(ONNX_MLS STATIC IMPORTED)\nset_target_properties(ONNX_MLS PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_mlas.a)\nadd_library(ONNX_CMN STATIC IMPORTED)\nset_target_properties(ONNX_CMN PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_common.a)\nadd_library(ONNX_FLT STATIC IMPORTED)\nset_target_properties(ONNX_FLT PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/libonnxruntime_flatbuffers.a)\nadd_library(ONNX STATIC IMPORTED)\nset_target_properties(ONNX PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/onnx-build/libonnx.a)\nadd_library(ONNX_PRT STATIC IMPORTED)\nset_target_properties(ONNX_PRT PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/onnx-build/libonnx_proto.a)\nadd_library(ONNX_PRTL STATIC IMPORTED)\nset_target_properties(ONNX_PRTL PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/protobuf-build/libprotobuf-lite.a)\nadd_library(ONNX_RE STATIC IMPORTED)\nset_target_properties(ONNX_RE PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/re2-build/libre2.a)\nadd_library(ABSL STATIC IMPORTED)\nset_target_properties(ABSL PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/abseil_cpp-build/absl/base/libabsl_base.a)\nadd_library(ABSL_DEL STATIC IMPORTED)\nset_target_properties(ABSL_DEL PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/abseil_cpp-build/absl/base/libabsl_throw_delegate.a)\nadd_library(ABSL_RW STATIC IMPORTED)\nset_target_properties(ABSL_RW PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/abseil_cpp-build/absl/container/libabsl_raw_hash_set.a)\nadd_library(ABSL_HSH STATIC IMPORTED)\nset_target_properties(ABSL_HSH PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/abseil_cpp-build/absl/hash/libabsl_hash.a)\nadd_library(ABSL_CTY STATIC IMPORTED)\nset_target_properties(ABSL_CTY PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/abseil_cpp-build/absl/hash/libabsl_city.a)\nadd_library(ABSL_LL STATIC IMPORTED)\nset_target_properties(ABSL_LL PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/abseil_cpp-build/absl/hash/libabsl_low_level_hash.a)\nadd_library(NSYNC STATIC IMPORTED)\nset_target_properties(NSYNC PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/google_nsync-build/libnsync_cpp.a)\nadd_library(CPUI STATIC IMPORTED)\nset_target_properties(CPUI PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/pytorch_cpuinfo-build/libcpuinfo.a)\nadd_library(CLOG STATIC IMPORTED)\nset_target_properties(CLOG PROPERTIES IMPORTED_LOCATION ${DEP_ROOT_DIR}/${ONNX_NAME}-build/_deps/pytorch_cpuinfo-build/deps/clog/libclog.a)\n\ntarget_compile_definitions(\n    typesense-server PRIVATE\n    TYPESENSE_VERSION=\"${TYPESENSE_VERSION}\"\n)\n\ntarget_compile_definitions(\n    benchmark PRIVATE\n    TYPESENSE_VERSION=\"${TYPESENSE_VERSION}\"\n)\n\ntarget_compile_definitions(\n    search PRIVATE\n    TYPESENSE_VERSION=\"${TYPESENSE_VERSION}\"\n)\n\ntarget_compile_definitions(\n    typesense-test PRIVATE\n    ROOT_DIR=\"${CMAKE_SOURCE_DIR}/\"\n    TYPESENSE_VERSION=\"${TYPESENSE_VERSION}\"\n)\n\nset(ROCKSDB_LIBS rocksdb ${SNAPPY_LIBRARIES})\nset(STACKTRACE_LIBS \"\")\n\nif (APPLE)\n    set(STD_LIB \"\") # https://stackoverflow.com/a/26543140/131050 (can't statically link libgcc on Mac)\n\n    FIND_PACKAGE(ngHTTP2 REQUIRED)\n    set(CURL_LIBRARIES ${NGHTTP2_LIBRARIES} ${CURL_LIBRARIES}) # nghttp2 was not being statically built\n    set(SYSTEM_LIBS \"-framework Foundation\" \"-framework SystemConfiguration\" \"-framework CoreText\"\n            \"-framework CoreGraphics\" \"-framework Security\" \"-framework Foundation\"\n            \"-Wl,-U,_MallocExtension_ReleaseFreeMemory\" \"-Wl,-U,_ProfilerStart\" \"-Wl,-U,_ProfilerStop\")\nelse()\n    set(STD_LIB -static-libgcc -static-libstdc++)\n    list(APPEND STACKTRACE_LIBS dw elf)\n    list(APPEND SYSTEM_LIBS rt)\nendif()\n\nset(ICU_ALL_LIBRARIES ${ICU_I18N_LIBRARIES} ${ICU_LIBRARIES} ${ICU_DATA_LIBRARIES})\nset(CORE_LIBS kakasi h2o-evloop braft brpc iconv ${ICU_ALL_LIBRARIES} ${CURL_LIBRARIES} for s2\n              ${LevelDB_LIBRARIES} ${ROCKSDB_LIBS}\n              glog ${GFLAGS_LIBRARIES} ${PROTOBUF_LIBRARIES} ${STACKTRACE_LIBS}\n              ${OPENSSL_LIBRARIES} ${ZLIB_LIBRARIES} ${JEMALLOC_LIBRARIES}\n              ${SYSTEM_LIBS} pthread dl ${STD_LIB} ONNX_SESSION ONNX_OPT ONNX_PRO ONNX_UTL ONNX_FRM ONNX_GRP ONNX_MLS ONNX_CMN ONNX_FLT ONNX ONNX_PRT ONNX_PRTL ONNX_RE ABSL ABSL_DEL ABSL_RW ABSL_HSH ABSL_CTY ABSL_LL NSYNC CPUI CLOG)\n\ntarget_link_libraries(typesense-server ${CORE_LIBS})\ntarget_link_libraries(search ${CORE_LIBS})\ntarget_link_libraries(benchmark ${CORE_LIBS})\ntarget_link_libraries(typesense-test ${CORE_LIBS} gtest gtest_main)\n\nadd_dependencies(typesense-server onnxruntime)\nadd_dependencies(typesense-test onnxruntime)\nadd_dependencies(benchmark onnxruntime)\nadd_dependencies(search onnxruntime)\n\n# add source files from ${DEP_ROOT_DIR}/${ONNX_EXT_NAME} directory to targets\nset(ONNX_EXT_SRC_FILES ${DEP_ROOT_DIR}/${ONNX_EXT_NAME}/operators/src_dir/ustring.cc ${DEP_ROOT_DIR}/${ONNX_EXT_NAME}/operators/src_dir/string_utils_onnx.cc ${DEP_ROOT_DIR}/${ONNX_EXT_NAME}/operators/src_dir/base64.cc ${DEP_ROOT_DIR}/${ONNX_EXT_NAME}/operators/src_dir/tokenizer/bert_tokenizer.cc ${DEP_ROOT_DIR}/${ONNX_EXT_NAME}/operators/src_dir/tokenizer/basic_tokenizer.cc) \nset_source_files_properties(${ONNX_EXT_SRC_FILES} PROPERTIES GENERATED TRUE)\ntarget_sources(typesense-server PRIVATE ${ONNX_EXT_SRC_FILES})\ntarget_sources(typesense-test PRIVATE ${ONNX_EXT_SRC_FILES})\ntarget_sources(benchmark PRIVATE ${ONNX_EXT_SRC_FILES})\ntarget_sources(search PRIVATE ${ONNX_EXT_SRC_FILES})\n\nadd_dependencies(typesense-server onnxruntime_ext)\nadd_dependencies(typesense-test onnxruntime_ext)\nadd_dependencies(benchmark onnxruntime_ext)\nadd_dependencies(search onnxruntime_ext)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.748046875,
          "content": "We are a small bootstrapped team that's trying to do big things with Typesense, so we'd be delighted to take all the help we can get.\n\nHere are a couple of things we're looking for help with:\n\n## ⚙️ Client libraries in additional languages\n\nThere are quite a few programming languages out there and we're not experts in all of them. So we'd appreciate your help in contributing towards a client library in a programming language that's your area of expertise. Please join our Slack Community to collaborate on the architecture. \n\n## 🚉 Integrations with platforms you use\n\nIf you use a particular Content Management Framework/System or E-Commerce Framework/Platform, an integration that pushes data from that platform/framework into Typesense would be a great value add for others in the community. \n\n## 🐛 Feature Requests & Bug Reports\n\nIf you find a bug or a missing feature that you'd find useful, please open an issue on Github. \n\n## 📖 Tutorials\n\nShare your experience with the community about how you integrated with Typesense by writing an article about it. Or write a How-To or Tutorial on how to use Typesense for specific use cases and let us know. We'd love to share your work with the rest of the community by including it in our docs.\n\n## 🏆 Showcases\n\nWant to show-off your work that uses Typesense? We're building a Showcase to collect interesting use-cases for Typesense. Edit [this file](https://github.com/typesense/typesense/blob/master/SHOWCASE.md) and send us a PR.\n\n## 🌟 Spread the Word\n\nWe are on a mission to democratize search by building an easy-to-use, yet powerful search engine for everyone. If you know friends, teams or communities that might find Typesense useful, let them know! Also, we wouldn't complain if you starred our Github repo :) \n"
        },
        {
          "name": "DESIGN.md",
          "type": "blob",
          "size": 2.8134765625,
          "content": "# Typesense: Design\n\n## Motivation\n\nTypesense's design is motivated by the following considerations:\n\n- **Simplicity:** Typesense has to be super simple to set-up and get started with. The default configuration \n*should just work* for the common search use cases.\n- **Typo-tolerance out-of-the-box:** Currently, it's not at all easy to build a typo-tolerant search using existing \nsystems without a considerable speed/memory penalty. This has to change, given how common typographic errors are \nin the real-world.\n- **In-memory:** All primary data structures would be in-memory, with the disk being used only for durability and for \nfetching large, unindexed fields.\n- **Optimize for reads over writes:** A typical search engine is written once and read many times. The system should be \ncognizant of this read/write pattern.\n- **Fast, without sacrificing relevance:** While speed is important, one cannot compromise on the quality of results \nreturned. Remember that the average reaction time for humans is 200ms to a visual stimulus.\n- **Laser focused on search:** While there might be some overlap with what a relational database does, strive to focus \nprimarily on search, instead of becoming a generalized data store with a complex query language.\n- **Availability over consistency**: In the event of a partition failure, it's better to give slightly stale search \nresults, than being unavailable. This is alright, given the inherent asynchronous nature of the indexing process.\n\n## Overview\n\n- At the heart of Typesense is a `token => documents` inverted index backed by an \n[Adapative Radix Tree](https://db.in.tum.de/~leis/papers/ART.pdf), which is a memory-efficient implementation of the \nTrie data structure. ART allows us to do fast fuzzy searches on a query.\n- Typesense consumes JSON documents as input. Fields that should be indexed must be specified via a configuration file \n  or through the API.\n- The raw JSON documents are stored on disk using RocksDB. SSD disks are highly recommended.\n- Search results are ranked on the following factors:\n    - Number of matching tokens\n    - Proximity of search tokens within the documents that contain these tokens\n    - User specified static score for a document (for e.g. the number of followers could a static score for a \n      Twitter user)\n- A typical search query involves:\n    - a search term (required - wild card `*` search is not allowed)\n    - filter fields (optional)\n    - facet fields (optional)\n    - sort fields (optional)\n    - page\n    - limit\n- Typesense is exposed through a RESTful API, so that it can be consumed directly by web apps via AJAX requests.\n- High Availability is achieved using a single-master, multiple read-only replica set-up. The read-only replicas \n  asynchronously pull data from master. The API clients automatically failover reads to the replicas if the master \n  is unavailable."
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 34.32421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.0390625,
          "content": "<p align=\"center\">\n  <a href=\"https://typesense.org\"><img src=\"assets/typesense_logo.svg\" alt=\"Typesense\" width=\"298\" /></a> \n</p>\n<p align=\"center\">\n  Typesense is a fast, typo-tolerant search engine for building delightful search experiences.\n</p>\n\n<p align=\"center\">\n  An Open Source Algolia Alternative & <br>\n  An Easier-to-Use ElasticSearch Alternative\n</p>\n\n<p align=\"center\">\n <!-- <a href=\"https://circleci.com/gh/typesense/typesense\"><img src=\"https://circleci.com/gh/typesense/typesense.svg?style=shield&circle-token=1addd775339738a3d90869ddd8201110d561feaa\"></a> -->\n <a href=\"https://hub.docker.com/r/typesense/typesense/tags\"><img src=\"https://img.shields.io/docker/pulls/typesense/typesense\"></a>\n  <a href=\"https://github.com/typesense\"><img src=\"https://img.shields.io/github/stars/typesense/typesense?label=github%20stars&style=flat\"></a><br>\n  <a href=\"https://cloud.typesense.org\"><img src=\"https://img.shields.io/badge/searches_per_month_on_typesense_cloud-10 Billion-blue\"></a>\n<p>\n<p align=\"center\">\n  <a href=\"https://typesense.org\">Website</a> | \n  <a href=\"https://typesense.org/docs/\">Documentation</a> | \n  <a href=\"https://typesense.link/roadmap\">Roadmap</a> | \n  <a href=\"https://typesense.link/slack-community\">Slack Community</a> | \n  <a href=\"https://threads.typesense.org/kb\">Community Threads</a> | \n  <a href=\"https://twitter.com/typesense\">Twitter</a>\n</p>\n<br>\n<p align=\"center\">\n  <img src=\"assets/typesense_books_demo.gif?raw=true\" alt=\"Typesense Demo\" width=\"459\" />\n</p>\n\n✨ Here are a couple of **live demos** that show Typesense in action on large datasets:\n\n- Search a 32M songs dataset from MusicBrainz: [songs-search.typesense.org](https://songs-search.typesense.org/)\n- Search a 28M books dataset from OpenLibrary: [books-search.typesense.org](https://books-search.typesense.org/)\n- Search a 2M recipe dataset from RecipeNLG: [recipe-search.typesense.org](https://recipe-search.typesense.org/)\n- Search 1M Git commit messages from the Linux Kernel: [linux-commits-search.typesense.org](https://linux-commits-search.typesense.org/)\n- Spellchecker with type-ahead, with 333K English words: [spellcheck.typesense.org](https://spellcheck.typesense.org/)\n- An E-Commerce Store Browsing experience: [ecommerce-store.typesense.org](https://ecommerce-store.typesense.org/)\n- GeoSearch / Browsing experience: [airbnb-geosearch.typesense.org](https://airbnb-geosearch.typesense.org/)\n- Search / Browse xkcd comics by topic: [xkcd-search.typesense.org](https://xkcd-search.typesense.org/)\n- Semantic / Hybrid search on 300K HN comments: [hn-comments-search.typesense.org](https://hn-comments-search.typesense.org)\n\n🗣️ 🎥 If you prefer watching videos:\n\n- Here's one where we introduce Typesense and show a walk-through: https://youtu.be/F4mB0x_B1AE?t=144\n- Check out Typesense's recent mention during Google I/O Developer Keynote: https://youtu.be/qBkyU1TJKDg?t=2399\n- Here's one where one of our community members gives an overview of Typesense and shows you an end-to-end demo: https://www.youtube.com/watch?v=kwtHOkf7Jdg\n\n## Quick Links\n\n- [Features](#features)\n- [Benchmarks](#benchmarks)\n- [Roadmap](#roadmap)\n- [Who's using this](#whos-using-this)\n- [Install](#install)\n- [Quick Start](#quick-start)\n- [Step-by-step Walk-through](#step-by-step-walk-through)\n- [API Documentation](#api-documentation)\n- [API Clients](#api-clients)\n- [Search UI Components](#search-ui-components)\n- [FAQ](#faq)\n- [Support](#support)\n- [Contributing](#contributing)\n- [Getting Latest Updates](#getting-latest-updates)\n- [Build from Source](#build-from-source)\n\n## Features\n\n- **Typo Tolerance:** Handles typographical errors elegantly, out-of-the-box.\n- **Simple and Delightful:** Simple to set-up, integrate with, operate and scale.\n- **⚡ Blazing Fast:** Built in C++. Meticulously architected from the ground-up for low-latency (<50ms) instant searches.\n- **Tunable Ranking:** Easy to tailor your search results to perfection.\n- **Sorting:** Dynamically sort results based on a particular field at query time (helpful for features like \"Sort by Price (asc)\").\n- **Faceting & Filtering:** Drill down and refine results.\n- **Grouping & Distinct:** Group similar results together to show more variety.\n- **Federated Search:** Search across multiple collections (indices) in a single HTTP request.\n- **Geo Search:** Search and sort by results around a latitude/longitude or within a bounding box.\n- **Vector Search:** Index embeddings from your machine learning models in Typesense and do a nearest-neighbor search. Can be used to build similarity search, semantic search, visual search, recommendations, etc.\n- **Semantic / Hybrid Search:** Automatically generate embeddings from within Typesense using built-in models like S-BERT, E-5, etc or use OpenAI, PaLM API, etc, for both queries and indexed data. This allows you to send JSON data into Typesense and build an out-of-the-box semantic search + keyword search experience.\n- **Conversational Search (Built-in RAG):** Send questions to Typesense and have the response be a fully-formed sentence, based on the data you've indexed in Typesense. Think ChatGPT, but over your own data.\n- **Image Search:** Search through images using text descriptions of their contents, or perform similarity searches, using the CLIP model.\n- **Voice Search:** Capture and send query via voice recordings - Typesense will transcribe (via Whisper model) and provide search results.\n- **Scoped API Keys:** Generate API keys that only allow access to certain records, for multi-tenant applications.\n- **JOINs:** Connect one or more collections via common reference fields and join them during query time. This allows you to model SQL-like relationships elegantly.\n- **Synonyms:** Define words as equivalents of each other, so searching for a word will also return results for the synonyms defined.\n- **Curation & Merchandizing:** Boost particular records to a fixed position in the search results, to feature them.\n- **Raft-based Clustering:** Setup a distributed cluster that is highly available.\n- **Seamless Version Upgrades:** As new versions of Typesense come out, upgrading is as simple as swapping out the binary and restarting Typesense.\n- **No Runtime Dependencies:** Typesense is a single binary that you can run locally or in production with a single command.\n\n**Don't see a feature on this list?** Search our issue tracker if someone has already requested it and add a comment to it explaining your use-case, or open a new issue if not. We prioritize our roadmap based on user feedback, so we'd love to hear from you.\n\n## Roadmap\n\nHere's Typesense's public roadmap: [https://typesense.link/roadmap](https://typesense.link/roadmap).\n\nThe first column also explains how we prioritize features, how you can influence prioritization and our release cadence. \n\n## Benchmarks\n\n- A dataset containing **2.2 Million recipes** (recipe names and ingredients):\n  - Took up about 900MB of RAM when indexed in Typesense\n  - Took 3.6mins to index all 2.2M records\n  - On a server with 4vCPUs, Typesense was able to handle a concurrency of **104 concurrent search queries per second**, with an average search processing time of **11ms**.\n- A dataset containing **28 Million books** (book titles, authors and categories):\n  - Took up about 14GB of RAM when indexed in Typesense\n  - Took 78mins to index all 28M records\n  - On a server with 4vCPUs, Typesense was able to handle a concurrency of **46 concurrent search queries per second**, with an average search processing time of **28ms**.\n- With a dataset containing **3 Million products** (Amazon product data), Typesense was able to handle a throughput of **250 concurrent search queries per second** on an 8-vCPU 3-node Highly Available Typesense cluster.\n\nWe'd love to benchmark with larger datasets, if we can find large ones in the public domain. If you have any suggestions for structured datasets that are open, please let us know by opening an issue. We'd also be delighted if you're able to share benchmarks from your own large datasets. Please send us a PR! \n\n## Who's using this?\n\nTypesense is used by a range of users across different domains and verticals.\n\nOn Typesense Cloud we serve more than **10 BILLION** searches per month. Typesense's Docker images have been downloaded over 12M times.\n\nWe've recently started documenting who's using it in our [Showcase](SHOWCASE.md).\nIf you'd like to be included in the list, please feel free to edit [SHOWCASE.md](SHOWCASE.md) and send us a PR.\n\nYou'll also see a list of user logos on the [Typesense Cloud](https://cloud.typesense.org) home page.\n\n## Install\n\n**Option 1:** You can download the [binary packages](https://typesense.org/downloads) that we publish for \nLinux (x86_64 & arm64) and Mac (x86_64).\n\n**Option 2:** You can also run Typesense from our [official Docker image](https://hub.docker.com/r/typesense/typesense).\n\n**Option 3:** Spin up a managed cluster with [Typesense Cloud](https://cloud.typesense.org):\n\n<a href=\"https://cloud.typesense.org\"><img src=\"assets/deploy_with_typesense_cloud.svg?raw=true\" alt=\"Deploy with Typesense Cloud\" height=\"60\" /></a> \n\n## Quick Start\n\nHere's a quick example showcasing how you can create a collection, index a document and search it on Typesense.\n \nLet's begin by starting the Typesense server via Docker:\n\n```\ndocker run -p 8108:8108 -v/tmp/data:/data typesense/typesense:27.1 --data-dir /data --api-key=Hu52dwsas2AdxdE\n```\n\nWe have [API Clients](#api-clients) in a couple of languages, but let's use the Python client for this example.\n\nInstall the Python client for Typesense:\n \n```\npip install typesense\n```\n\nWe can now initialize the client and create a `companies` collection:\n\n```python\nimport typesense\n\nclient = typesense.Client({\n  'api_key': 'Hu52dwsas2AdxdE',\n  'nodes': [{\n    'host': 'localhost',\n    'port': '8108',\n    'protocol': 'http'\n  }],\n  'connection_timeout_seconds': 2\n})\n\ncreate_response = client.collections.create({\n  \"name\": \"companies\",\n  \"fields\": [\n    {\"name\": \"company_name\", \"type\": \"string\" },\n    {\"name\": \"num_employees\", \"type\": \"int32\" },\n    {\"name\": \"country\", \"type\": \"string\", \"facet\": True }\n  ],\n  \"default_sorting_field\": \"num_employees\"\n})\n```\n\nNow, let's add a document to the collection we just created:\n\n```python\ndocument = {\n \"id\": \"124\",\n \"company_name\": \"Stark Industries\",\n \"num_employees\": 5215,\n \"country\": \"USA\"\n}\n\nclient.collections['companies'].documents.create(document)\n```\n\nFinally, let's search for the document we just indexed:\n\n```python\nsearch_parameters = {\n  'q'         : 'stork',\n  'query_by'  : 'company_name',\n  'filter_by' : 'num_employees:>100',\n  'sort_by'   : 'num_employees:desc'\n}\n\nclient.collections['companies'].documents.search(search_parameters)\n```\n\n**Did you notice the typo in the query text?** No big deal. Typesense handles typographic errors out-of-the-box!\n\n## Step-by-step Walk-through\n\nA step-by-step walk-through is available on our website [here](https://typesense.org/guide). \n\nThis will guide you through the process of starting up a Typesense server, indexing data in it and querying the data set. \n\n## API Documentation\n\nHere's our official API documentation, available on our website: [https://typesense.org/api](https://typesense.org/api).\n\nIf you notice any issues with the documentation or walk-through, please let us know or send us a PR here: [https://github.com/typesense/typesense-website](https://github.com/typesense/typesense-website).\n\n## API Clients\n\nWhile you can definitely use CURL to interact with Typesense Server directly, we offer official API clients to simplify using Typesense from your language of choice. The API Clients come built-in with a smart retry strategy to ensure that API calls made via them are resilient, especially in an HA setup.\n\n- [JavaScript](https://github.com/typesense/typesense-js)\n- [PHP](https://github.com/typesense/typesense-php)\n- [Python](https://github.com/typesense/typesense-python)\n- [Ruby](https://github.com/typesense/typesense-ruby)\n\nIf we don't offer an API client in your language, you can still use any popular HTTP client library to access Typesense's APIs directly. \n\nHere are some community-contributed clients and integrations:\n\n- [Go](https://github.com/typesense/typesense-go)\n- [.Net](https://github.com/DAXGRID/typesense-dotnet)\n- [Java](https://github.com/typesense/typesense-java)\n- [Rust](https://github.com/typesense/typesense-rust)\n- [Dart](https://github.com/typesense/typesense-dart)\n- [Perl](https://github.com/Ovid/Search-Typesense)\n- [Swift](https://github.com/typesense/typesense-swift)\n- [Clojure](https://github.com/runeanielsen/typesense-clj)\n- [python orm client](https://github.com/RedSnail/typesense_orm)\n- [PHP SEAL Adapter](https://github.com/schranz-search/seal-typesense-adapter)\n- [Elixir](https://github.com/jaeyson/ex_typesense)\n\nWe welcome community contributions to add more official client libraries and integrations. Please reach out to us at contact@typsense.org or open an issue on GitHub to collaborate with us on the architecture. 🙏\n\n### Framework Integrations\n\nWe also have the following framework integrations:\n\n- [Laravel](https://github.com/typesense/laravel-scout-typesense-engine)\n- [Firebase](https://github.com/typesense/firestore-typesense-search)\n- [Gatsby](https://www.gatsbyjs.com/plugins/gatsby-plugin-typesense/)\n- [WordPress](https://wordpress.org/plugins/search-with-typesense/?ref=typesense)\n- [WooCommerce](https://www.codemanas.com/downloads/typesense-search-for-woocommerce/?ref=typesense)\n- [Symfony](https://github.com/acseo/TypesenseBundle)\n- [InstantSearch](https://github.com/typesense/typesense-instantsearch-adapter)\n- [DocSearch](https://typesense.org/docs/guide/docsearch.html)\n- [Docusaurus](https://github.com/typesense/docusaurus-theme-search-typesense)\n- [ToolJet](https://tooljet.com/?ref=typesense)\n- [Plone CMS](https://pypi.org/project/zopyx.typesense/)\n- [Craft CMS](https://plugins.craftcms.com/typesense)\n- [SEAL](https://github.com/schranz-search/schranz-search) provides integrations of Typesense in Laravel, Symfony, Spiral, Yii and Laminas Mezzio PHP Framework\n\n### Postman Collection\n\nWe have a community-maintained Postman Collection here: [https://github.com/typesense/postman](https://github.com/typesense/postman).\n\n[Postman](https://www.postman.com/downloads/) is an app that let's you perform HTTP requests by pointing and clicking, instead of having to type them out in the terminal.\nThe Postman Collection above gives you template requests that you can import into Postman, to quickly make API calls to Typesense.\n\n## Search UI Components\n\nYou can use our [InstantSearch.js adapter](https://github.com/typesense/typesense-instantsearch-adapter) \nto quickly build powerful search experiences, complete with filtering, sorting, pagination and more.\n\nHere's how: [https://typesense.org/docs/guide/search-ui-components.html](https://typesense.org/docs/guide/search-ui-components.html) \n\n## FAQ\n\n### How does this differ from Elasticsearch?\n\nElasticsearch is a large piece of software, that takes non-trivial amount of effort to setup, administer, scale and fine-tune. \nIt offers you a few thousand configuration parameters to get to your ideal configuration. So it's better suited for large teams \nwho have the bandwidth to get it production-ready, regularly monitor it and scale it, especially when they have a need to store \nbillions of documents and petabytes of data (eg: logs).\n\nTypesense is built specifically for decreasing the \"time to market\" for a delightful search experience. It's a light-weight\nyet powerful & scaleable alternative that focuses on Developer Happiness and Experience with a clean well-documented API, clear semantics \nand smart defaults so it just works well out-of-the-box, without you having to turn many knobs.\n\nElasticsearch also runs on the JVM, which by itself can be quite an effort to tune to run optimally. Typesense, on the other hand, \nis a single light-weight self-contained native binary, so it's simple to setup and operate.\n\nSee a side-by-side feature comparison [here](https://typesense.org/typesense-vs-algolia-vs-elasticsearch-vs-meilisearch/).\n\n### How does this differ from Algolia?\n\nAlgolia is a proprietary, hosted, search-as-a-service product that works well, when cost is not an issue. From our experience,\nfast growing sites and apps quickly run into search & indexing limits, accompanied by expensive plan upgrades as they scale.\n\nTypesense on the other hand is an open-source product that you can run on your own infrastructure or\nuse our managed SaaS offering - [Typesense Cloud](https://cloud.typesense.org). \nThe open source version is free to use (besides of course your own infra costs). \nWith Typesense Cloud we don't charge by records or search operations. Instead, you get a dedicated cluster\nand you can throw as much data and traffic at it as it can handle. You only pay a fixed hourly cost & bandwidth charges \nfor it, depending on the configuration your choose, similar to most modern cloud platforms. \n\nFrom a product perspective, Typesense is closer in spirit to Algolia than Elasticsearch. \nHowever, we've addressed some important limitations with Algolia: \n\nAlgolia requires separate indices for each sort order, which counts towards your plan limits. Most of the index settings like \nfields to search, fields to facet, fields to group by, ranking settings, etc \nare defined upfront when the index is created vs being able to set them on the fly at query time.\n\nWith Typesense, these settings can be configured at search time via query parameters which makes it very flexible\nand unlocks new use cases. Typesense is also able to give you sorted results with a single index, vs having to create multiple.\nThis helps reduce memory consumption.\n\nAlgolia offers the following features that Typesense does not have currently: personalization & server-based search analytics. For analytics, you can still instrument your search on the client-side and send search metrics to your web analytics tool of choice. \n\nWe intend to bridge this gap in Typesense, but in the meantime, please let us know\nif any of these are a show stopper for your use case by creating a feature request in our issue tracker. \n\nSee a side-by-side feature comparison [here](https://typesense.org/typesense-vs-algolia-vs-elasticsearch-vs-meilisearch/).\n\n### Speed is great, but what about the memory footprint?\n\nA fresh Typesense server will consume about 30 MB of memory. As you start indexing documents, the memory use will \nincrease correspondingly. How much it increases depends on the number and type of fields you index. \n\nWe've strived to keep the in-memory data structures lean. To give you a rough idea: when 1 million \nHacker News titles are indexed along with their points, Typesense consumes 165 MB of memory. The same size of that data \non disk in JSON format is 88 MB. If you have any numbers from your own datasets that we can add to this section, please send us a PR!\n\n### Why the GPL license?\n\nFrom our experience companies are generally concerned when **libraries** they use are GPL licensed, since library code is directly integrated into their code and will lead to derivative work and trigger GPL compliance. However, Typesense Server is **server software** and we expect users to typically run it as a separate daemon, and not integrate it with their own code. GPL covers and allows for this use case generously **(eg: Linux is GPL licensed)**. Now, AGPL is what makes server software accessed over a network result in derivative work and not GPL. And for that reason we’ve opted to not use AGPL for Typesense. \n\nNow, if someone makes modifications to Typesense server, GPL actually allows you to still keep the modifications to yourself as long as you don't distribute the modified code. So a company can for example modify Typesense server and run the modified code internally and still not have to open source their modifications, as long as they make the modified code available to everyone who has access to the modified software.\n\nNow, if someone makes modifications to Typesense server and distributes the modifications, that's where GPL kicks in. Given that we’ve published our work to the community, we'd like for others' modifications to also be made open to the community in the spirit of open source. **We use GPL for this purpose.** Other licenses would allow our open source work to be modified, made closed source and distributed, which we want to avoid with Typesense for the project’s long term sustainability.\n\nHere's more background on why GPL, as described by Discourse: https://meta.discourse.org/t/why-gnu-license/2531. Many of the points mentioned there resonate with us.\n\nNow, all of the above only apply to Typesense Server. Our client libraries are indeed meant to be integrated into our users’ code and so they use Apache license.\n\nSo in summary, AGPL is what is usually problematic for server software and we’ve opted not to use it. We believe GPL for Typesense Server captures the essence of what we want for this open source project. GPL has a long history of successfully being used by popular open source projects. Our libraries are still Apache licensed.\n\nIf you have specifics that prevent you from using Typesense due to a licensing issue, we're happy to explore this topic further with you. Please reach out to us.\n\n## Support\n\n👋 🌐 If you have general questions about Typesense, want to say hello or just follow along, we'd like to invite you to join our public [Slack Community](https://typesense.link/slack-community). \n\nIf you run into any problems or issues, please create a GitHub issue and we'll try our best to help.\n\nWe strive to provide good support through our issue trackers on GitHub. However, if you'd like to receive private & prioritized support with:\n\n- Guaranteed SLAs\n- Phone / video calls to discuss your specific use case and get recommendations on best practices\n- Private discussions over Slack\n- Guidance around scaling best practices\n- Prioritized feature requests\n\nWe offer Paid Support options described [here](https://typesense.org/support/).\n\n## Contributing\n\nWe are a lean team on a mission to democratize search and we'll take all the help we can get! If you'd like to get involved, here's information on where we could use your help: [Contributing.md](https://github.com/typesense/typesense/blob/master/CONTRIBUTING.md)\n\n## Getting Latest Updates\n\nIf you'd like to get updates when we release new versions, click on the \"Watch\" button on the top and select \"Releases only\". GitHub will then send you notifications along with a changelog with each new release.\n\nWe also post updates to our Twitter account about releases and additional topics related to Typesense. Follow us here: [@typesense](https://twitter.com/typesense).\n\n👋 🌐 We'll also post updates on our [Slack Community](https://typesense.link/slack-community). \n\n## Build from source\n\nWe use [Bazel](https://bazel.build) to build Typesense.\n\nTypesense requires the following dependencies: \n\n* C++11 compatible compiler (GCC >= 4.9.0, Apple Clang >= 8.0, Clang >= 3.9.0)\n* Snappy\n* zlib\n* OpenSSL (>=1.0.2)\n* curl\n* ICU\n\nPlease refer to the [CI build steps](.github/workflows/tests.yml) for the latest set of dependencies.\n\nOnce you've installed them, run the following from the root of the repo:\n\n```shell\nbazel build //:typesense-server\n```\n\nThe first build will take some time since other third-party libraries are pulled and built as part of the build process.\n\n---\n&copy; 2016-present Typesense Inc.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0693359375,
          "content": "Please report any security vulnerabilities to security@typesense.org. \n"
        },
        {
          "name": "SHOWCASE.md",
          "type": "blob",
          "size": 45.0263671875,
          "content": "# 🌟 Showcase\n\nThis is a selection of sites and apps using Typesense.\n\n> As of Oct 2024 we have around 17M+ Docker pulls and serve 10+ Billion searches per month on Typesense Cloud. So the list below is a tiny sample of everyone using Typesense.\n>\n> If you are a Typesense user, an easy way to contribute back to the ecosystem is by sharing that you are indeed using Typesense. \n> This helps new users understand the various use-cases for Typesense.\n> So we invite and welcome you to add your own sites / apps to the list below. Please feel free to edit this file and send us a PR. \n\n| Name                                                                                     | Description                                                                                                                                                                                                                                                                                                                                                                 |\n|------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| \n| [AEROTRADE](https://ade.aero)                                                            | Digital marketplace for aircraft parts                                                                                                                                                                                                                                                                                                                                      |\n| [Agriland](https://agriland.ie)                                                          | Leading news platform focused on farming and agricultural topics in Ireland                                                                                                                                                                                                                                                                                                 |\n| [Back Right Up](https://backrightup.com)                                                 | Automatic Azure Devops backups                                                                                                                                                                                                                                                                                                                                              |\n| [Beatopia](https://www.beatopia.com/)                                                    | Subscription-based platform for rappers and vocalists to access high-quality beats produced by industry professionals                                                                                                                                                                                                                                                       |\n| [BetaSeries](https://www.betaseries.com/)                                                | TV shows and movies recommendation, using Typesense to search into 4M+ international records                                                                                                                                                                                                                                                                                |\n| [Bikifi](https://bikifi.com/)                                                            | A free education platform that brings premium educational content to anyone, anywhere in Turkey                                                                                                                                                                                                                                                                             |\n| [Bookology](https://play.google.com/store/apps/details?id=com.imihirpaldhikar.bookology) | \"I am using Typesense for searching the the books listed on the platform. I switched from Algolia to Typesense because it is more convenient to only pay for the underlying infrastructure rather then paying for search queries. I will always use Typesense in my future projects.\" - @imihirpaldhikar                                                                    |\n| [Changelog](https://changelog.com)                                                       | Developer-centric podcast platform                                                                                                                                                                                                                                                                                                                                          |\n| [Codecademy](https://www.codecademy.com/)                                                | Online learning platform for computer science                                                                                                                                                                                                                                                                                                                               |\n| [Cults 3D](https://cults3d.com)                                                          | Find designs for 3D-printing. _We are very happy with our switch to Typesense, making it a breeze to setup and have pertinent results right from the start_                                                                                                                                                                                                                 |\n| [datarequests.org](https://www.datarequests.org/)                                        | Search backend for the [company database](https://www.datarequests.org/company) that allows users to easily find the contact details for privacy-related requests                                                                                                                                                                                                           |\n| [Dave & Adams Card World](https://www.dacardworld.com)                                   | E-commerce platform for collectibles like sports cards, gaming cards, comics, or autographed memorabilia                                                                                                                                                                                                                                                                    |\n| [DiscMaster](http://discmaster.textfiles.com/search)                                     | Search 94 million vintage computer files from archive.org                                                                                                                                                                                                                                                                                                                   |\n| [Echidna Sewing](https://www.echidnasewing.com.au)                                       | Echidna Sewing is one of Australia’s largest sewing machine dealers                                                                                                                                                                                                                                                                                                         |\n| [ElbiseBul](https://www.elbisebul.com/)                                                  | E-commerce                                                                                                                                                                                                                                                                                                                                                                  |\n| [FlyGRN](https://flygrn.com)                                                             | Flight Ticket Search Engine that ranks flights on carbon emissions and gives greener alternatives                                                                                                                                                                                                                                                                           |\n| [Foodnoms](https://foodnoms.com)                                                         | Food and nutrition tracking app                                                                                                                                                                                                                                                                                                                                             |\n| [furn.nl](https://furn.nl)                                                               | Dutch furniture comparison website                                                                                                                                                                                                                                                                                                                                          |\n| [GlobalTill](https://www.globaltill.com)                                                 | Omnichannel Retail Management System                                                                                                                                                                                                                                                                                                                                        |\n| [Grafikart](https://www.grafikart.fr/)                                                   | Learning resources library                                                                                                                                                                                                                                                                                                                                                  |\n| [Granthappura](https://gpura.org/)                                                       | A free-licensed digitized artifacts archive related to Kerala from multiple languages. [Github Link](https://github.com/indic-archive/omeka-typesense-search)                                                                                                                                                                                                               |\n| [Hardcover](https://hardcover.app)                                                       | A social network app designed for book lovers to discover, track, and share books.                                                                                                                                                                                                                                                                                          |\n| [Have A Class](https://haveaclass.com/)                                                  | Find the perfect teacher online                                                                                                                                                                                                                                                                                                                                             |\n| [Hem](https://hem.com)                                                                   | A premium furniture brand for the auction houses of tomorrow                                                                                                                                                                                                                                                                                                                |\n| [Iconduck](https://iconduck.com)                                                         | Site to search for open source icons                                                                                                                                                                                                                                                                                                                                        |\n| [Instatus](https://instatus.com)                                                         | System Status Pages Platform                                                                                                                                                                                                                                                                                                                                                |\n| [Kick](http://kick.com/)                                                                 | Livestreaming Platform                                                                                                                                                                                                                                                                                                                                                      |\n| [KickstandsUp](http://kickstandsup.com/)                                                 | Find Motorcycle events near you                                                                                                                                                                                                                                                                                                                                             |\n| [Job Ads Now](https://www.jobadsnow.com)                                                 | Job Ads Now is a jobs search engine focusing on the best candidate experience. Blazing fast search and filters by salary, location, bonus and more. You can also read the job highlights (TL;DR) for each job identified from the origina job post using AI                                                                                                                 |\n| [Jobsort](https://www.jobsort.com/)                                                      | Job search engine for developers, by developers (quicksort for tech jobs.)                                                                                                                                                                                                                                                                                                  |\n| [Lawyaw](https://lawyaw.com)                                                             | Lawyaw provides easy to use document automation software that helps legal practices save time and avoid mistakes without sacrificing quality. _\"Typesense is used as our search index and works great to search, sort and facet thousands of our Court forms each day. We look forward to working with Typesense for years to come as it continues to mature!\" - @tpayne84_ |\n| [Logitech](https://www.logitech.com/)                                                    | Computer/technology peripherals                                                                                                                                                                                                                                                                                                                                             |\n| [Lonely Planet](https://www.lonelyplanet.com/)                                           | Travel Guide Platform                                                                                                                                                                                                                                                                                                                                                       |\n| [Macro Factor](https://macrofactorapp.com)                                               | Nutrition and diet tracking application designed to help users achieve their fitness and health goals                                                                                                                                                                                                                                                                       |\n| [Magny SaaS search bar](https://magny.io)                                                | Magny is a SaaS platform that helps implement command palettes, which significantly decreases the time users find anything in your app, leveraging the user experience and efficiency.                                                                                                                                                                                      |\n| [MyHearty](https://myhearty.my)                                                          | A one-stop charity website to fundraise, donate, volunteer and apply for aids. It comes with a full-featured search UI (instant search, geosearch) for campaigns, volunteer events and aids.                                                                                                                                                                                |\n| [n8n](https://n8n.io/)                                                                   | Free and source-available fair-code licensed workflow automation tool                                                                                                                                                                                                                                                                                                       |\n| [NeoDB](https://neodb.social/)                                                           | An open source project and free service to help users in Fediverse manage, share and discover collections, reviews and ratings for culture products, with a searchable catalog of over a million books, movies, music, podcasts, games and performances.                                                                                                                    |     | [Neolace](https://www.neolace.com) | Knowledge graph platform (combines a wiki and a graph database) |\n| [Neolace](https://www.neolace.com)                                                       | Knowledge graph platform (combines a wiki and a graph database)                                                                                                                                                                                                                                                                                                             |\n| [New York University Databrary](https://nyu.databrary.org/)                              | Video documentation library                                                                                                                                                                                                                                                                                                                                                 |\n| [Oddle Eats](https://eats.oddle.me)                                                      | Food Delivery Service in Singapore                                                                                                                                                                                                                                                                                                                                          |\n| [OpenTacos](https://tacos.openbeta.io)                                                   | Free and open source rock climbing route wiki                                                                                                                                                                                                                                                                                                                               |\n| [Orders Made Simple](https://ordersmadesimple.com)                                       | A Stock ordering platform helping to connect hospitality and catering venues with their suppliers                                                                                                                                                                                                                                                                           |\n| [Otaku Square](https://www.otakusquare.com)                                              | Online retailer for pop-culture (e.g. anime, games, movies) merchandise                                                                                                                                                                                                                                                                                                     |\n| [Plaza](https://www.useplaza.com)                                                        | Live-shopping platform                                                                                                                                                                                                                                                                                                                                                      |\n| [Pangobooks](https://www.pangobooks.com)                                                 | Online marketplace for buying and selling used books                                                                                                                                                                                                                                                                                                                        |\n| [Poorvika](https://poorvika.com)                                                         | Indian technology online retailer                                                                                                                                                                                                                                                                                                                                           |\n| [Popcorn](https://onpopcorn.com)                                                         | Zoom meets Snapchat, async video chat app                                                                                                                                                                                                                                                                                                                                   |\n| [Project Seldon](https://projectseldon.org)                                              | A free and unbiased analysis platform for understanding societies and systems of government.                                                                                                                                                                                                                                                                                |\n| [Puey Ungphakorn Institute for Economic Research](https://www.pier.or.th)                | A research institute in Thailand                                                                                                                                                                                                                                                                                                                                            |\n| [Read This Twice](https://www.readthistwice.com/)                                        | Book discovery platform uses typesense to power the book/people search                                                                                                                                                                                                                                                                                                      |\n| [Reelgood](https://reelgood.com/)                                                        | A comprehensive streaming guide that helps users find and track TV shows and movies across a wide range of streaming services                                                                                                                                                                                                                                               |\n| [Rushtix](https://rushtix.com)                                                           | Live Comedy Shows platform                                                                                                                                                                                                                                                                                                                                                  |\n| [Service Foods](https://www.servicefoods.co.nz)                                          | One of New Zealand's largest privately family owned and operated food service distribution businesses                                                                                                                                                                                                                                                                       |\n| [Solid Starts](https://solidstarts.com/)                                                 | A comprehensive resource designed to help parents introduce solid foods to their babies                                                                                                                                                                                                                                                                                     |\n| [Soundsnap](https://soundsnap.com/)                                                      | Sound effects library                                                                                                                                                                                                                                                                                                                                                       |\n| [Squire](https://getsquire.com/)                                                         | Barbershop management system                                                                                                                                                                                                                                                                                                                                                |\n| [Syracuse University](https://syracuse.edu)                                              | A private research university in Syracuse, New York. [Visit our live typesense demo!](https://typesense-demo.dev3.digitalservices.syr.edu)                                                                                                                                                                                                                                  |\n| [TackleTarts](https://tackletarts.uk/)                                                   | An online store specializing in fishing tackle and equipment in the UK                                                                                                                                                                                                                                                                                                      |\n| [Trading Strategy](https://tradingstrategy.ai/blog/world-fastest-token-search)           | Algorithmic trading protocol for decentralised markets                                                                                                                                                                                                                                                                                                                      |\n| [Ultrahuman](https://www.ultrahuman.com)                                                 | Health and wellness platform that focuses on metabolic fitness and real-time health tracking through advanced wearable technology                                                                                                                                                                                                                                           |\n| [Upnext](https://www.getupnext.com)                                                      | Save, organize and focus on your personal content library                                                                                                                                                                                                                                                                                                                   |\n| [What's In My Jar](https://whatsinmyjar.com)                                             | Skincare Research platform                                                                                                                                                                                                                                                                                                                                                  |\n\n### Typesense Demos\n\n| Name| Description                                                                                                                                                               |\n||---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Recipe Search](https://recipe-search.typesense.org| A site that showcases Typesense in action on a 2 Million recipe database, with the ability to filter by ingredients.                                                      |\n| [Linux Commit History Search](https://linux-commits-search.typesense.org| A site that indexes 1M linux commit messages in Typesense and lets you browse, search and filter through the commits.                                                     |\n| [E-commerce Store Browsing Experience](https://ecommerce-store.typesense.org| A site that showcases how to build an e-commerce storefront browsing experience with Typesense.                                                                           |\n| [E-commerce Storefront with Next.js + Typesense + Vercel](https://showcase-nextjs-typesense-ecommerce-store.vercel.app| A site that showcases how to build an e-commerce storefront browsing experience with Typesense and Next.js.                                                               |\n| [xkcd comic search](https://findxkcd.com/)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | A site that lets you search xkcd comics by topic, with data indexed in Typesense.                                                                                         |\n| [Books Search](https://books-search.typesense.org| A site that showcases Typesense in action on a 28 Million books database from [OpenLibrary](https://openlibrary.org/), with the ability to filter by authors and subject. |\n| [MusicBrainz Songs Search](https://songs-search.typesense.org| A site that showcases Typesense in action on a 32 Million Songs database from [MusicBrainz](https://musicbrainz.org/)                                                     |\n| [Typeahead Spellchecker ](https://spellcheck.typesense.org| A widget that mimics the typeahead spellcheckers on Android / iPhone keyboards.                                                                                           |\n| [2020 US Presidential Candidates' Speeches Search](https://biden-trump-speeches-search.typesense.org| Instantly Search speeches of US Presidential Candidates side-by-side.                                                                                                     |\n| [Federated Search](https://federated-search.typesense.org/)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     | A site that showcases Typesense's Federated Search feature.                                                                                                               |\n| [Federated Search](https://federated-search.typesense.org| A site that showcases Typesense's Federated Search feature.                                                                                                               |\n| [AirBnB Geo Search](https://airbnb-geosearch.typesense.org| A site that showcases Typesense's Geo Search feature.                                                                                                                     |\n| [Airports Geo Search](https://airports-geosearch.typesense.org| A site that showcases Typesense's Geo Search feature with Next.js and react-instantsearch.                                                                                |\n| [Semantic Search + Hybrid Search](https://hn-comments-search.typesense.org| A site that showcases Typesense's semantic search and hybrid search features, along with the auto-embedding generation feature.                                           |\n| Guitar Chords Search in [Nuxtjs](https://guitar-chords-search-nuxt-js.typesense.org/), [Nextjs](https://guitar-chords-search-next-js.typesense.org/), [Angular](https://guitar-chords-search-angular.typesense.org/), [Vanilla JS](https://guitar-chords-search-vanilla-js.typesense.org/), [Astro](https://guitar-chords-search-astro.typesense.org/), [SolidJS](https://guitar-chords-search-solid-js.typesense.org/), [Remix](https://guitar-chords-search-remix.typesense.org/), [SvelteKit](https://guitar-chords-search-svelte-kit.typesense.org/), [Qwik](https://guitar-chords-search-qwik.typesense.org/), and [React Native](https://github.com/typesense/showcase-guitar-chords-search-react-native) | Sites that showcase how to use Typesense in different Javascript frameworks.                                                                                              |\n| [Address autocomplete](https://address-autocomplete.typesense.org| An address autocomplete experience powered by Typesense.                                                                                                                  |\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 6.4375,
          "content": "# Typesense: TODO\n\n- Test for group + multiple fields\n- Intersect with single posting list\n- Test for erase dropping elements below compressed list threshold\n- Test for array token positions\n\n**Search index**\n\n- ~~Fix memory ratio (decreasing with indexing)~~\n- ~~Speed up wildcard searches further~~\n- ~~Allow int64 in default sorting field~~\n- ~~Use connection timeout for CURL rather than request timeout~~\n- ~~Async import~~\n- ~~Highlight all matching fields~~\n- ~~Proper JSON as input~~\n- ~~Storing raw JSON input to RocksDB~~\n- ~~ART for every indexed field~~\n- ~~Delete should remove from RocksDB~~\n- ~~Speed up UUID generation~~\n- ~~Make the search score computation customizable~~\n- ~~art int search should support signed ints~~\n- ~~Search across multiple fields~~\n- ~~Have set inside topster itself~~\n- ~~Persist next_seq_id~~\n- ~~collection_id should be int, not string~~\n- ~~API should return count~~\n- ~~Fix documents.jsonl path in tests~~\n- ~~Multi field search tests~~\n- ~~storage key prefix should include collection name~~\n- ~~Index and search on multi-valued field~~\n- ~~range search for art_int~~\n- ~~Restore records as well on restart (like for meta)~~\n- ~~drop collection should remove all records from the store~~\n- ~~Multi-key binary search during scoring~~\n- ~~Assumption that all tokens match for scoring is no longer true~~\n- ~~Filters~~\n- ~~Facets~~\n- ~~Schema validation during insertion (missing fields + type errors)~~\n- ~~Proper score field for ranking tokens~~\n- ~~Throw errors when schema is broken~~\n- ~~Desc/Asc ordering with tests~~\n- ~~Found count is wrong~~\n- ~~Filter query in the API~~\n- ~~Facet limit (hardcode to top 10)~~\n- ~~Deprecate old split function~~\n- ~~Multiple facets not working~~\n- ~~Search snippet with highlight~~\n- ~~Snippet should only be around surrounding matching tokens~~\n- ~~Proper pagination~~\n- ~~Pagination parameter~~\n- ~~Drop collection API~~\n- ~~JSONP response~~\n- ~~\"error\":\"Not found.\" is sent when query has no hits~~\n- ~~Fix API response codes~~\n- ~~List all collections~~\n- ~~Fetch an individual document~~\n- ~~ID field should be a string: must validate~~\n- ~~Number of records in collection~~\n- ~~Test for asc/desc upper/lower casing~~\n- ~~Test for search without any sort_by given~~\n- ~~Test for collection creation validation~~\n- ~~Test for delete document~~\n- ~~art float search~~\n- ~~When prefix=true, use default_sorting_field for token ordering only for last word~~\n- ~~only last token should be prefix searched~~\n- ~~Prefix-search strings should not be null terminated~~\n- ~~sort results by float field~~\n- ~~json::parse must be wrapped in try catch~~\n- ~~Collection Manager collections map should store plain collection name~~\n- ~~init_collection of Collection manager should probably take seq_id as param~~\n- ~~node score should be int32, no longer uint16 like in document struct~~ \n- ~~Typo in prefix search~~\n- ~~When field of \"id\" but not string, what happens?~~\n- ~~test for num_documents~~\n- ~~test for string filter comparison: title < \"foo\"~~\n- ~~Test for sorted_array::indexOf when length is 0~~\n- ~~Test for pagination~~\n- ~~search_fields, sort_fields and facet fields should be combined~~\n- ~~facet fields should be indexed verbatim~~\n- ~~change \"search_by\" to \"query_by\"~~\n- ~~during index_in_memory() validations should be front loaded~~\n- ~~Support default sorting field being a float~~\n- ~~https support~~\n- ~~Validate before string to int conversion in the http api layer~~\n- ~~art bool support~~\n- ~~Export collection~~\n- ~~get collection should show schema~~\n- ~~API key should be allowed as a GET parameter also (for JSONP)~~\n- ~~Don't crash when the data directory is not found~~\n- ~~When the first sequence ID is not zero, bail out~~\n- ~~Proper status code when sequence number to fetch is bad~~\n- ~~Replica should be read-only~~\n- ~~string_utils::tokenize should not have max length~~\n- ~~handle hyphens (replace them)~~\n- ~~clean special chars before indexing~~\n- ~~Add docs/explanation around ranking calc~~\n- ~~UTF-8 normalization~~\n- ~~Use rocksdb batch put for atomic insertion~~\n- ~~Proper logging~~\n- ~~Handle store-get() not finding a key~~\n- ~~Deprecate converting integer to string verbatim~~ \n- ~~Deprecate union type punning~~\n- ~~Replica server should fail when pointed to \"old\" master~~\n- ~~gzip compress responses~~\n- ~~Have a LOG(ERROR) level~~\n- ~~Handle SIGTERM which is sent when process is killed~~\n- ~~Use snappy compression for storage~~\n- ~~Fix exclude_scalar early returns~~\n- ~~Fix result ids length during grouped overrides~~\n- ~~Fix override grouping (collate_included_ids)~~\n- ~~Test for overriding result on second page~~\n- atleast 1 token match for proceeding with drop tokens\n- support wildcard query with filters\n- API for optimizing on disk storage\n- Jemalloc\n- Exact search \n- NOT operator support\n- Log operations\n- Parameterize replica's MAX_UPDATES_TO_SEND\n- NOT operator support\n- 64K token limit\n- > INT32_MAX validation for float field\n- highlight of string arrays?\n- test for token ranking on float field\n- test for float int field deletion during doc deletion\n- Test for snippets\n- Test for replication\n- Query token ids should match query token ordering\n- ID should not have \"/\"\n- Group results by field\n- Delete using range: https://github.com/facebook/rocksdb/wiki/Delete-A-Range-Of-Keys\n- Test for string utils\n- Prevent string copy during indexing\n- Minimum results should be a variable instead of blindly going with max_results\n- Handle searching for non-existing fields gracefully\n- test for same match score but different primary, secondary attr\n- Support nested fields via \".\"\n- Support search operators like +, - etc.\n- Space sensitivity\n- Use bitmap index instead of compressed array for doc list?\n- Primary_rank_scores and secondary_rank_scores hashmaps should be combined?\n- d-ary heap?\n- ~~topster: reject min heap value compare only when field is same~~\n- ~~match index instead of match score~~\n\n**API**\n\n- Support the following operations:\n    - ~~create a new index~~\n    - ~~index a single document~~    \n    - ~~delete a document by ID~~\n    - ~~query an index~~       \n    - ~~Drop an index~~\n    - ~~fetch a document by ID~~\n\n**Clustering**\n\n- Sync every incoming write with another Typesense server\n\n**Refactoring**\n\n- ~~`token_count` in leaf is redundant: can be accessed from value~~\n- ~~storing length in `offsets` is redundant: it can be found by looking up value of the next index in offset_index~~\n\n**Tech debt**\n\n- ~~Use GLOB file pattern for CMake (better IDE refactoring support)~~\n- DRY index_int64_field* methods"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 11.1806640625,
          "content": "load(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\", \"http_file\")\nload(\"@bazel_tools//tools/build_defs/repo:git.bzl\", \"git_repository\", \"new_git_repository\")\n\nload(\"//bazel:onnxruntime_cuda_defs.bzl\", \"cuda_home_repository\")\n\ncuda_home_repository(name = \"cuda_home_repo\")\n\ngit_repository(\n    name = \"com_grail_bazel_compdb\",\n    commit = \"58672f5eecd70a2d3ed50016a3abf907701404e0\",\n    remote = \"https://github.com/grailbio/bazel-compilation-database.git\",\n)\n\nload(\"@com_grail_bazel_compdb//:deps.bzl\", \"bazel_compdb_deps\")\n\nbazel_compdb_deps()\n\nhttp_archive(\n    name = \"rules_foreign_cc\",\n    patches = [\"//bazel:foreign_cc.patch\"],\n    sha256 = \"2a4d07cd64b0719b39a7c12218a3e507672b82a97b98c6a89d38565894cf7c51\",\n    strip_prefix = \"rules_foreign_cc-0.9.0\",\n    url = \"https://github.com/bazelbuild/rules_foreign_cc/archive/refs/tags/0.9.0.tar.gz\",\n)\n\nload(\"@rules_foreign_cc//foreign_cc:repositories.bzl\", \"rules_foreign_cc_dependencies\")\n\n# This sets up some common toolchains for building targets. For more details, please see\n# https://bazelbuild.github.io/rules_foreign_cc/0.9.0/flatten.html#rules_foreign_cc_dependencies\nrules_foreign_cc_dependencies(\n    cmake_version=\"3.25.0\",\n    ninja_version=\"1.11.1\")\n\n# brpc and its dependencies\ngit_repository(\n    name = \"com_github_brpc_brpc\",\n    commit = \"df31bf51f08ca6afa59ef3b4f3749bf20ebd1858\",\n    patches = [\n        \"//bazel/brpc:brpc.patch\",\n    ],\n    remote = \"https://github.com/apache/brpc.git\",\n)\n\n\nnew_git_repository(\n    name=\"onnx_runtime\",\n    branch= \"rel-1.14.1\",\n    build_file = \"//bazel:onnxruntime.BUILD\",\n    remote= \"https://github.com/microsoft/onnxruntime\",\n    patches=[\"//bazel:onnx.patch\"],\n    patch_cmds= [\"git submodule sync && git submodule foreach  'git fetch --tags' && git submodule update --init --remote\"]\n)\n\nnew_git_repository(\n    name=\"clip_tokenizer\",\n    branch=\"master\",\n    remote=\"https://github.com/typesense/clip_tokenizer_cpp.git\",\n    build_file = \"//bazel:clip_tokenizer.BUILD\",\n)\n\nnew_git_repository(\n    name = \"onnx_runtime_extensions\",\n    build_file = \"//bazel:onnxruntime_extensions.BUILD\",\n    remote = \"https://github.com/microsoft/onnxruntime-extensions\",\n    commit = \"81e7799c69044c745239202085eb0a98f102937b\",\n    patches=[\"//bazel:onnx_ext.patch\"],\n)\n\nnew_git_repository(\n    name = \"com_github_madler_zlib\",\n    build_file = \"//bazel:zlib.BUILD\",\n    remote = \"https://github.com/madler/zlib.git\",\n    tag = \"v1.2.12\",\n)\n\n# new_git_repository(\n#     name = \"zip\",\n#     build_file = \"//bazel:zip.BUILD\",\n#     branch = \"master\",\n#     remote = \"https://github.com/kuba--/zip.git\",\n# )\n\nnew_git_repository(\n    name = \"sentencepiece\",\n    build_file = \"//bazel:sentencepiece.BUILD\",\n    tag = \"v0.1.98\",\n    remote = \"https://github.com/google/sentencepiece\",\n    patches = [\"//bazel:sentencepiece.patch\"],\n    patch_args = [\"-p1\"]\n)\n\ngit_repository(\n    name = \"rules_perl\",\n    remote = \"https://github.com/bazelbuild/rules_perl.git\",\n    commit = \"7f10dada09fcba1dc79a6a91da2facc25e72bd7d\",\n)\n\nload(\"@rules_perl//perl:deps.bzl\", \"perl_register_toolchains\", \"perl_rules_dependencies\")\n\nperl_rules_dependencies()\nperl_register_toolchains()\n\ngit_repository(\n    name = \"com_github_brpc_braft\",\n    commit = \"bc527db96420f610257573d80e5f60a8b0d835ef\",\n    patches = [\"//bazel/braft:0001.patch\"],\n    remote = \"https://github.com/baidu/braft.git\",\n    repo_mapping = {\n        \"@zlib\": \"@com_github_madler_zlib\",\n    },\n)\n\n# Below are dependencies of brpc/braft and protobuf\nhttp_archive(\n    name = \"rules_pkg\",\n    sha256 = \"8a298e832762eda1830597d64fe7db58178aa84cd5926d76d5b744d6558941c2\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.7.0/rules_pkg-0.7.0.tar.gz\",\n        \"https://github.com/bazelbuild/rules_pkg/releases/download/0.7.0/rules_pkg-0.7.0.tar.gz\",\n    ],\n)\n\nload(\"@rules_pkg//:deps.bzl\", \"rules_pkg_dependencies\")\n\nrules_pkg_dependencies()\n\ngit_repository(\n    name = \"com_google_protobuf\",\n    remote = \"https://github.com/protocolbuffers/protobuf.git\",\n    repo_mapping = {\n        \"@zlib\": \"@com_github_madler_zlib\",\n    },\n    tag = \"v21.5\",\n)\n\nhttp_archive(\n    name = \"com_github_google_leveldb\",  # 2021-02-23T21:51:12Z\n    build_file = \"//bazel/leveldb:leveldb.BUILD\",\n    sha256 = \"9a37f8a6174f09bd622bc723b55881dc541cd50747cbd08831c2a82d620f6d76\",\n    strip_prefix = \"leveldb-1.23\",\n    urls = [\n        \"https://github.com/google/leveldb/archive/refs/tags/1.23.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"com_github_google_crc32c\",  # 2021-10-05T19:47:30Z\n    build_file = \"//bazel:crc32c.BUILD\",\n    sha256 = \"ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56\",\n    strip_prefix = \"crc32c-1.1.2\",\n    urls = [\"https://github.com/google/crc32c/archive/1.1.2.tar.gz\"],\n)\n\nhttp_archive(\n    name = \"com_github_google_snappy\",  # 2017-08-25\n    build_file = \"//bazel:snappy.BUILD\",\n    sha256 = \"3dfa02e873ff51a11ee02b9ca391807f0c8ea0529a4924afa645fbf97163f9d4\",\n    strip_prefix = \"snappy-1.1.7\",\n    urls = [\n        \"https://storage.googleapis.com/mirror.tensorflow.org/github.com/google/snappy/archive/1.1.7.tar.gz\",\n        \"https://github.com/google/snappy/archive/1.1.7.tar.gz\",\n    ],\n)\n\nnew_git_repository(\n    name = \"for\",\n    build_file = \"//bazel:libfor.BUILD\",\n    commit = \"49611808d08d4e47116aa2a3ddcabeb418f405f7\",\n    remote = \"https://github.com/cruppstahl/libfor.git\",\n)\n\nnew_git_repository(\n    name = \"lrucache\",\n    build_file = \"//bazel:lrucache.BUILD\",\n    commit = \"13f30ad33a227a3e9682578c450777380ecddfcf\",\n    remote = \"https://github.com/goldsborough/lru-cache.git\",\n)\n\nnew_git_repository(\n    name = \"kakasi\",\n    build_file = \"//bazel:kakasi.BUILD\",\n    commit = \"77f2d1ce0146d15199ae0db1e61e0b699b0b55f6\",\n    remote = \"https://github.com/typesense/kakasi.git\",\n)\n\nnew_git_repository(\n    name = \"hnsw\",\n    build_file = \"//bazel:hnsw.BUILD\",\n    commit = \"687d981753f8bafcd16421cbd2a166d0b62bc520\",\n    remote = \"https://github.com/typesense/hnswlib.git\",\n)\n\nhttp_archive(\n    name = \"com_github_gflags_gflags\",\n    sha256 = \"34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\",\n    strip_prefix = \"gflags-2.2.2\",\n    urls = [\"https://github.com/gflags/gflags/archive/v2.2.2.tar.gz\"],\n)\n\nhttp_archive(\n    name = \"com_github_google_glog\",\n    sha256 = \"122fb6b712808ef43fbf80f75c52a21c9760683dae470154f02bddfc61135022\",\n    strip_prefix = \"glog-0.6.0\",\n    urls = [\"https://github.com/google/glog/archive/v0.6.0.zip\"],\n)\n\nnew_git_repository(\n    name = \"rocksdb\",\n    build_file = \"//bazel:rocksdb.BUILD\",\n    remote = \"https://github.com/facebook/rocksdb.git\",\n    tag = \"v7.8.3\",\n)\n\nhttp_archive(\n    name = \"curl\",\n    build_file = \"//bazel:curl.BUILD\",\n    sha256 = \"6147ac0b22f8c11cbd3933d7fec064dee373402c3705193ceb703a5a665f2e0c\",\n    strip_prefix = \"curl-7.87.0\",\n    urls = [\"https://github.com/curl/curl/releases/download/curl-7_87_0/curl-7.87.0.zip\"],\n)\n\nnew_git_repository(\n    name = \"h2o\",\n    build_file = \"//bazel/h2o:BUILD\",\n    commit = \"1491a703195790278091fd7aee547fbba78e89af\",\n    patches = [\"//bazel/h2o:h2o_1491a703195790278091fd7aee547fbba78e89af.patch\"],\n    remote = \"https://github.com/h2o/h2o.git\",\n)\n\nhttp_archive(\n    name = \"openssl\",\n    build_file = \"//bazel:openssl3.BUILD\",\n    sha256 = \"aa7d8d9bef71ad6525c55ba11e5f4397889ce49c2c9349dcea6d3e4f0b024a7a\",\n    strip_prefix = \"openssl-3.0.5\",\n    urls = [\"https://www.openssl.org/source/openssl-3.0.5.tar.gz\"],\n)\n\nhttp_archive(\n    name = \"jemalloc\",\n    build_file = \"//bazel:jemalloc.BUILD\",\n    sha256 = \"2db82d1e7119df3e71b7640219b6dfe84789bc0537983c3b7ac4f7189aecfeaa\",\n    strip_prefix = \"jemalloc-5.3.0\",\n    urls = [\"https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2\"],\n)\n\nnew_git_repository(\n    name = \"s2geometry\",\n    build_file = \"//bazel/s2geometry:BUILD\",\n    commit = \"efb124d8eaf3433323d3e877dedd5e94a63339a3\",\n    patches = [\"//bazel/s2geometry:0001.patch\"],\n    remote = \"https://github.com/google/s2geometry.git\",\n)\n\nnew_git_repository(\n    name = \"icu\",\n    build_file = \"//bazel/icu:BUILD\",\n    patches = [\"//bazel/icu:icu.patch\"],\n    remote = \"https://github.com/unicode-org/icu.git\",\n    tag = \"release-71-1\",\n)\n\ngit_repository(\n    name = \"com_google_googletest\",\n    remote = \"https://github.com/google/googletest.git\",\n    tag = \"release-1.12.1\",\n)\n\nnew_git_repository(\n    name = \"libart\",\n    build_file = \"//bazel:libart.BUILD\",\n    commit = \"bbbf588bca55bce095538ee8ca8b422904baebc5\",\n    remote = \"https://github.com/kishorenc/libart.git\",\n)\n\nnew_git_repository(\n    name = \"picotls_openssl\",\n    build_file = \"//bazel/picotls_openssl:BUILD\",\n    commit = \"7970614ad049d194fe1691bdf0cc66c6930a3a2f\",  # 07/21/2022\n    patches = [\"//bazel/picotls_openssl:0001.patch\"],\n    remote = \"https://github.com/h2o/picotls.git\",\n)\n\nnew_git_repository(\n    name = \"quicly\",\n    build_file = \"//bazel/quicly:BUILD\",\n    commit = \"46110287eb20e0780cf41bd30fc4715907ccf400\",  # 08/08/2022\n    patches = [\"//bazel/quicly:0001.patch\"],\n    remote = \"https://github.com/h2o/quicly.git\",\n)\n\nnew_git_repository(\n    name = \"klib\",\n    build_file = \"//bazel/klib:BUILD\",\n    commit = \"de09fb7dff67be7c1a58e5be9fee4b4a9ca3a265\",  # 03/04/2017\n    remote = \"https://github.com/attractivechaos/klib.git\",\n)\n\nhttp_archive(\n    name = \"iconv\",\n    build_file = \"//bazel:iconv.BUILD\",\n    sha256 = \"8f74213b56238c85a50a5329f77e06198771e70dd9a739779f4c02f65d971313\",\n    strip_prefix = \"libiconv-1.17\",\n    urls = [\"https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.17.tar.gz\"],\n)\n\nhttp_file(\n  name = \"token_offsets\",\n  downloaded_file_path = \"token_offsets.txt\",\n  sha256 = \"55c1c510ca6335c049f5696f3b94ac7be61e84f3e27cd8169021929b3db99651\",\n  urls = [\"https://gist.githubusercontent.com/kishorenc/1d330714eb07019f210f16ccb3991217/raw/bd52e05375d305d5aaa7ac06219af999726933a4/token_offsets.log\"],\n)\n\nhttp_archive(\n    name = \"elfutils\",\n    build_file = \"//bazel:elfutils.BUILD\",\n    sha256 = \"ecc406914edf335f0b7fc084ebe6c460c4d6d5175bfdd6688c1c78d9146b8858\",\n    strip_prefix = \"elfutils-0.182\",\n    urls = [\"https://sourceware.org/elfutils/ftp/0.182/elfutils-0.182.tar.bz2\"],\n)\n\nnew_git_repository(\n    name= \"whisper.cpp\",\n    build_file = \"//bazel:whisper.BUILD\",\n    commit = \"022756a87204cd06c5d58f67b3708b550dcc38b0\",\n    remote = \"https://github.com/ggerganov/whisper.cpp.git\",\n    patches = [\"//bazel:whisper.patch\"],\n    patch_args = [\"-p1\"]\n)\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_cuda\",\n    sha256 = \"2f8c8c8c85f727bec4423efecec12d3b751cb0a98bda99f0f9d351608a23b858\",\n    strip_prefix = \"rules_cuda-v0.2.1\",\n    urls = [\"https://github.com/bazel-contrib/rules_cuda/releases/download/v0.2.1/rules_cuda-v0.2.1.tar.gz\"],\n)\nload(\"@rules_cuda//cuda:repositories.bzl\", \"register_detected_cuda_toolchains\", \"rules_cuda_dependencies\")\nrules_cuda_dependencies()\nregister_detected_cuda_toolchains()\n\nnew_git_repository(\n    name= \"snowball\",\n    build_file = \"//bazel:snowball.BUILD\",\n    branch = \"master\",\n    remote = \"https://github.com/snowballstem/snowball.git\"\n)\n\nhttp_archive(\n    name = \"archive\",\n    build_file = \"//bazel:archive.BUILD\",\n    sha256 = \"4cc540a3e9a1eebdefa1045d2e4184831100667e6d7d5b315bb1cbc951f8ddff\",\n    strip_prefix = \"libarchive-3.7.7\",\n    urls = [\"https://github.com/libarchive/libarchive/releases/download/v3.7.7/libarchive-3.7.7.tar.gz\"],\n)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 1.1904296875,
          "content": "#!/bin/bash\n\nset -ex\nPROJECT_DIR=`dirname $0 | while read a; do cd $a && pwd && break; done`\nSYSTEM_NAME=$(uname -s)\nBUILD_DIR=build-$SYSTEM_NAME\n\nif [ -z \"$TYPESENSE_VERSION\" ]; then\n  TYPESENSE_VERSION=\"nightly\"\nfi\n\nif [[ \"$@\" == *\"--clean\"* ]]; then\n  echo \"Cleaning...\"\n  rm -rf $PROJECT_DIR/$BUILD_DIR\n  mkdir $PROJECT_DIR/$BUILD_DIR\nfi\n\nif [[ \"$@\" == *\"--depclean\"* ]]; then\n  echo \"Cleaning dependencies...\"\n  rm -rf $PROJECT_DIR/external-$SYSTEM_NAME\n  mkdir $PROJECT_DIR/external-$SYSTEM_NAME\nfi\n\ncmake -DTYPESENSE_VERSION=$TYPESENSE_VERSION -DCMAKE_BUILD_TYPE=Release -H$PROJECT_DIR -B$PROJECT_DIR/$BUILD_DIR\ncmake --build $PROJECT_DIR/$BUILD_DIR --target typesense-server --target typesense-test \n\nif [[ \"$@\" == *\"--package-binary\"* ]]; then\n    OS_FAMILY=$(echo `uname` | awk '{print tolower($0)}')\n    RELEASE_NAME=typesense-server-$TYPESENSE_VERSION-$OS_FAMILY-amd64\n    printf `md5sum $PROJECT_DIR/$BUILD_DIR/typesense-server | cut -b-32` > $PROJECT_DIR/$BUILD_DIR/typesense-server.md5.txt\n    tar -cvzf $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz -C $PROJECT_DIR/$BUILD_DIR typesense-server typesense-server.md5.txt\n    echo \"Built binary successfully: $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz\"\nfi\n"
        },
        {
          "name": "ci_build.sh",
          "type": "blob",
          "size": 1.58203125,
          "content": "#!/bin/bash\n# TYPESENSE_VERSION=nightly TYPESENSE_TARGET=typesense-server|typesense-test bash ci_build.sh\n\nset -ex\nPROJECT_DIR=`dirname $0 | while read a; do cd $a && pwd && break; done`\nBUILD_DIR=bazel-bin\n\nif [ -z \"$TYPESENSE_VERSION\" ]; then\n  TYPESENSE_VERSION=\"nightly\"\nfi\n\nARCH_NAME=\"amd64\"\n\nif [[ \"$@\" == *\"--graviton2\"* ]] || [[ \"$@\" == *\"--arm\"* ]]; then\n  ARCH_NAME=\"arm64\"\nfi\n\ndocker run --user $UID:$GID --volume=\"/etc/group:/etc/group:ro\" --volume=\"/etc/passwd:/etc/passwd:ro\" \\\n--volume=\"/etc/shadow:/etc/shadow:ro\" -it --rm -v /bazeld:/bazeld -v $PROJECT_DIR:/src \\\n--workdir /src typesense/bazel_dev:24032023 bazel --output_user_root=/bazeld/cache build --verbose_failures \\\n--jobs=6 --action_env=LD_LIBRARY_PATH=\"/usr/local/gcc-10.3.0/lib64\" \\\n--define=TYPESENSE_VERSION=\\\"$TYPESENSE_VERSION\\\" //:$TYPESENSE_TARGET\n\nif [[ \"$@\" == *\"--build-deploy-image\"* ]]; then\n    echo \"Creating deployment image for Typesense $TYPESENSE_VERSION server ...\"\n    docker build --platform linux/${ARCH_NAME} --file $PROJECT_DIR/docker/deployment.Dockerfile \\\n          --tag typesense/typesense:$TYPESENSE_VERSION $PROJECT_DIR/$BUILD_DIR\nfi\n\nif [[ \"$@\" == *\"--package-binary\"* ]]; then\n    OS_FAMILY=linux\n    RELEASE_NAME=typesense-server-$TYPESENSE_VERSION-$OS_FAMILY-$ARCH_NAME\n    printf `md5sum $PROJECT_DIR/$BUILD_DIR/typesense-server | cut -b-32` > $PROJECT_DIR/$BUILD_DIR/typesense-server.md5.txt\n    tar -cvzf $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz -C $PROJECT_DIR/$BUILD_DIR typesense-server typesense-server.md5.txt\n    echo \"Built binary successfully: $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz\"\nfi\n"
        },
        {
          "name": "ci_build_v2.sh",
          "type": "blob",
          "size": 2.25390625,
          "content": "#!/bin/bash\n# TYPESENSE_VERSION=nightly TYPESENSE_TARGET=typesense-server|typesense-test bash ci_build_v2.sh\n\nset -ex\nPROJECT_DIR=`dirname $0 | while read a; do cd $a && pwd && break; done`\nBUILD_DIR=bazel-bin\n\nif [ -z \"$TYPESENSE_VERSION\" ]; then\n  TYPESENSE_VERSION=\"nightly\"\nfi\n\nARCH_NAME=\"amd64\"\n\nif [[ \"$@\" == *\"--graviton2\"* ]] || [[ \"$@\" == *\"--arm\"* ]]; then\n  ARCH_NAME=\"arm64\"\nfi\n\nif [[ \"$@\" == *\"--with-cuda\"* ]]; then\n  CUDA_FLAGS=\"--define use_cuda=on --action_env=CUDA_HOME=/usr/local/cuda --action_env=CUDNN_HOME=/usr/local/cuda\"\nfi\n\n# First build protobuf\nbazel build @com_google_protobuf//:protobuf_headers\nbazel build @com_google_protobuf//:protobuf_lite\nbazel build @com_google_protobuf//:protobuf\nbazel build @com_google_protobuf//:protoc\n\n# Build whisper\nif [[ \"$@\" == *\"--with-cuda\"* ]]; then\n  bazel build @whisper.cpp//:whisper_cuda_shared $CUDA_FLAGS --experimental_cc_shared_library\n  /bin/cp -f $PROJECT_DIR/$BUILD_DIR/external/whisper.cpp/libwhisper_cuda_shared.so $PROJECT_DIR/$BUILD_DIR/\nfi\n\n# Finally build Typesense\nbazel build --verbose_failures --jobs=6 $CUDA_FLAGS \\\n  --define=TYPESENSE_VERSION=\\\"$TYPESENSE_VERSION\\\" //:$TYPESENSE_TARGET\n\n\nif [[ \"$@\" == *\"--build-deploy-image\"* ]]; then\n    echo \"Creating deployment image for Typesense $TYPESENSE_VERSION server ...\"\n    docker build --platform linux/${ARCH_NAME} --file $PROJECT_DIR/docker/deployment.Dockerfile \\\n          --tag typesense/typesense:$TYPESENSE_VERSION $PROJECT_DIR/$BUILD_DIR\nfi\n\nif [[ \"$@\" == *\"--package-binary\"* ]]; then\n    OS_FAMILY=linux\n    RELEASE_NAME=typesense-server-$TYPESENSE_VERSION-$OS_FAMILY-$ARCH_NAME\n    printf `md5sum $PROJECT_DIR/$BUILD_DIR/typesense-server | cut -b-32` > $PROJECT_DIR/$BUILD_DIR/typesense-server.md5.txt\n    tar -cvzf $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz -C $PROJECT_DIR/$BUILD_DIR typesense-server typesense-server.md5.txt\n    echo \"Built binary successfully: $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz\"\n\n    GPU_DEPS_NAME=typesense-gpu-deps-$TYPESENSE_VERSION-$OS_FAMILY-$ARCH_NAME\n    tar -cvzf $PROJECT_DIR/$BUILD_DIR/$GPU_DEPS_NAME.tar.gz -C $PROJECT_DIR/$BUILD_DIR libonnxruntime_providers_cuda.so libonnxruntime_providers_shared.so libwhisper_cuda_shared.so\n    echo \"Built binary successfully: $PROJECT_DIR/$BUILD_DIR/$GPU_DEPS_NAME.tar.gz\"\nfi\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian-pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-build.sh",
          "type": "blob",
          "size": 3.3017578125,
          "content": "#!/bin/bash\n\nset -ex\nPROJECT_DIR=`dirname $0 | while read a; do cd $a && pwd && break; done`\nSYSTEM_NAME=Linux\nBUILD_DIR=build-$SYSTEM_NAME\nTEST_BUILD_DIR=test-$BUILD_DIR\n\nif [ -z \"$TYPESENSE_VERSION\" ]; then\n  TYPESENSE_VERSION=\"nightly\"\nfi\n\nif [[ \"$@\" == *\"--clean\"* ]]; then\n  echo \"Cleaning...\"\n  rm -rf $PROJECT_DIR/$BUILD_DIR\n  mkdir $PROJECT_DIR/$BUILD_DIR\nfi\n\nif [[ \"$@\" == *\"--clean-test\"* ]]; then\n  echo \"Cleaning...\"\n  rm -rf $PROJECT_DIR/$TEST_BUILD_DIR\n  mkdir $PROJECT_DIR/$TEST_BUILD_DIR\nfi\n\nif [[ \"$@\" == *\"--depclean\"* ]]; then\n  echo \"Cleaning dependencies...\"\n  rm -rf $PROJECT_DIR/external-$SYSTEM_NAME\n  mkdir $PROJECT_DIR/external-$SYSTEM_NAME\nfi\n\n\nTYPESENSE_DEV_IMAGE=\"typesense-development:03-JAN-2023-1\"\nARCH_NAME=\"amd64\"\n\nif [[ \"$@\" == *\"--graviton2\"* ]] || [[ \"$@\" == *\"--arm\"* ]]; then\n  TYPESENSE_DEV_IMAGE=\"typesense-development-arm:27-JUN-2022-1\"\n  ARCH_NAME=\"arm64\"\nfi\n\necho \"Building Typesense $TYPESENSE_VERSION...\"\ndocker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE cmake -DTYPESENSE_VERSION=$TYPESENSE_VERSION \\\n -DCMAKE_BUILD_TYPE=Release -H/typesense -B/typesense/$BUILD_DIR\ndocker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE make typesense-server -C/typesense/$BUILD_DIR\n\nif [[ \"$@\" == *\"--test\"* ]]; then\n    echo \"Running tests\"\n    docker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE cp /typesense/$BUILD_DIR/Makefile /typesense/$TEST_BUILD_DIR\n    docker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE cp -R /typesense/$BUILD_DIR/CMakeFiles /typesense/$TEST_BUILD_DIR/\n    docker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE make typesense-test -C/typesense/$TEST_BUILD_DIR\n    docker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE chmod +x /typesense/$TEST_BUILD_DIR/typesense-test\n    docker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/$TYPESENSE_DEV_IMAGE /typesense/$TEST_BUILD_DIR/typesense-test\nfi\n\nif [[ \"$@\" == *\"--build-deploy-image\"* ]]; then\n    echo \"Creating deployment image for Typesense $TYPESENSE_VERSION server ...\"\n\n    cp $PROJECT_DIR/docker/deployment.Dockerfile $PROJECT_DIR/$BUILD_DIR\n    docker build --platform linux/${ARCH_NAME} --file $PROJECT_DIR/$BUILD_DIR/deployment.Dockerfile --tag typesense/typesense:$TYPESENSE_VERSION \\\n                        $PROJECT_DIR/$BUILD_DIR\nfi\n\nif [[ \"$@\" == *\"--package-binary\"* ]]; then\n    OS_FAMILY=linux\n    RELEASE_NAME=typesense-server-$TYPESENSE_VERSION-$OS_FAMILY-$ARCH_NAME\n    printf `md5sum $PROJECT_DIR/$BUILD_DIR/typesense-server | cut -b-32` > $PROJECT_DIR/$BUILD_DIR/typesense-server.md5.txt\n    tar -cvzf $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz -C $PROJECT_DIR/$BUILD_DIR typesense-server typesense-server.md5.txt\n    echo \"Built binary successfully: $PROJECT_DIR/$BUILD_DIR/$RELEASE_NAME.tar.gz\"\nfi\n\n#\n#if [[ \"$@\" == *\"--create-deb-upload\"* ]]; then\n#    docker run -it --platform linux/${ARCH_NAME} -v $PROJECT_DIR:/typesense typesense/typesense-development:09-AUG-2021-1 cmake -DTYPESENSE_VERSION=$TYPESENSE_VERSION \\\n#    -DCMAKE_BUILD_TYPE=Debug -H/typesense -B/typesense/$BUILD_DIR\n#fi\n\necho \"Done... quitting.\"\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish_release.sh",
          "type": "blob",
          "size": 0.6962890625,
          "content": "#!/bin/bash\n\nif [ -z \"$TYPESENSE_VERSION\" ]\nthen\n  echo \"\\$TYPESENSE_VERSION is not provided. Quitting.\"\n  exit 1\nfi\n\nset -ex\nCURR_DIR=`dirname $0 | while read a; do cd $a && pwd && break; done`\n\naws s3 cp $CURR_DIR/build-Linux/typesense-server-${TYPESENSE_VERSION}-linux-amd64.tar.gz s3://dl.typesense.org/releases/typesense-server-${TYPESENSE_VERSION}-linux-amd64.tar.gz --profile typesense\naws s3 cp $CURR_DIR/typesense-server-${TYPESENSE_VERSION}-amd64.deb s3://dl.typesense.org/releases/ --profile typesense\naws s3 cp $CURR_DIR/build-Darwin/typesense-server-${TYPESENSE_VERSION}-darwin-amd64.tar.gz s3://dl.typesense.org/releases/typesense-server-${TYPESENSE_VERSION}-darwin-amd64.tar.gz --profile typesense\n"
        },
        {
          "name": "recipes.jsonl",
          "type": "blob",
          "size": 23.71484375,
          "content": "{\"author\":\"Jamie Oliver\",\"categories\":[\"Desserts\",\"Fruit\",\"Easter treats\",\"New Year party picks\",\"Halloween recipes\",\"Bonfire night recipes\",\"Christmas\"],\"cookingMethod\":\"\",\"cookTime\":\"\",\"cuisines\":[\"Dairy-free\", \"Vegan\", \"Vegetarian\"],\"description\":\"Hot, crisp and sweet, these doughnuts are a fantastic sweet treat that everyone will love\",\"image\":\"http:\\/\\/cdn.jamieoliver.com\\/recipe-database\\/oldImages\\/xtra_med\\/1332_1_1436866373.jpg\",\"ingredients\":[\"sunflower oil\",\"baking powder\",\"salt\",\"icing sugar\",\"orange\",\"vanilla pod\"],\"instructions\":[\"Melt the margarine, soya milk and 2 tablespoons of the sunflower oil in a small pan over a medium heat. Meanwhile, combine the flour, baking powder, salt and sugar in a large bowl. Make a well in the middle, then tip in the melted mixture.\",\"Gradually bring the mixture together with a fork until it forms a wet, thick dough, then divide and roll into 24 golf-ball sized balls.\",\"Heat the remaining sunflower oil in a medium-sized deep pan over a high heat. To test if the oil is hot enough, drop a piece of bread into the pan - if the bread floats to the surface, sizzles and turns golden, it's about right. Reduce the heat to medium, then use a slotted spoon to carefully lower six dough balls into the hot oil. Cook for 3 to 5 minutes, or until golden, cooked through and they've floated to the surface, turning occasionally.\",\"Meanwhile, make the vanilla sugar. Halve the vanilla pod lengthways and scrape out the seeds. Bash the seeds and half the sugar in a pestle and mortar, then place into a large bowl with the remaining sugar.\",\"Transfer the cooked doughnuts to a double layer of kitchen paper to drain. Allow to cool for a few minutes, roll in the vanilla sugar to coat, then place on a tray. Repeat with the remaining dough balls.\",\"Meanwhile, make the raspberry dip. Place the raspberries, icing sugar and a squeeze of orange juice into a bowl, then crush well with the back of a fork. Serve the mini doughnuts with the raspberry dip, then tuck in!\"],\"name\":\"Mini vegan doughnuts\",\"notes\":\"\",\"prepTime\":\"\",\"publisher\":\"\",\"totalTime\":\"50\",\"url\":\"https:\\/\\/www.jamieoliver.com\\/recipes\\/fruit-recipes\\/mini-vegan-doughnuts\\/\",\"yield\":\"24\",\"nutrition\":{\"calories\":87,\"fat\":5,\"fiber\":0.6,\"protein\":1.2,\"sugar\":5.9},\"nameSub\":\"With a quick raspberry dip\",\"ingredientList\":{\"ingredients\":[{\"name\":\"sunflower oil\",\"measure\":{\"amount\":6,\"name\":\"whole\",\"cups\":0}},{\"name\":\"baking powder\",\"measure\":{\"amount\":1.5,\"name\":\"teaspoons\",\"cups\":0.062499}},{\"name\":\"salt\",\"comment\":\"sea\",\"measure\":{\"amount\":0.5,\"name\":\"teaspoon\",\"cups\":0.020833}},{\"name\":\"icing sugar\",\"measure\":{\"amount\":1,\"name\":\"tablespoon\",\"cups\":0.125}},{\"name\":\"orange\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":1}},{\"name\":\"vanilla pod\",\"measure\":{\"amount\":1,\"name\":\"whole\",\"cups\":0}}],\"ingredientLines\":[{\"LineOriginal\":\"1.5 litres sunflower oil\",\"Line\":\" 1 5 litres sunflower oil \",\"IngredientsInString\":[{\"Word\":\"sunflower oil\",\"Position\":11}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0},{\"Word\":\"5\",\"Position\":2}],\"Ingredient\":{\"name\":\"sunflower oil\",\"measure\":{\"amount\":6,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"1\\u00bd teaspoons baking powder\",\"Line\":\" 1  \\u00bd  teaspoons baking powder \",\"IngredientsInString\":[{\"Word\":\"baking powder\",\"Position\":17}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0},{\"Word\":\"\\u00bd\",\"Position\":3}],\"MeasureInString\":[{\"Word\":\"teaspoons\",\"Position\":7}],\"Ingredient\":{\"name\":\"baking powder\",\"measure\":{\"amount\":1.5,\"name\":\"teaspoons\",\"cups\":0.0312495}}},{\"LineOriginal\":\"\\u00bd teaspoon sea salt\",\"Line\":\"  \\u00bd  teaspoon sea salt \",\"IngredientsInString\":[{\"Word\":\"salt\",\"Position\":18}],\"AmountInString\":[{\"Word\":\"\\u00bd\",\"Position\":1}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":5}],\"Ingredient\":{\"name\":\"salt\",\"comment\":\"sea\",\"measure\":{\"amount\":0.5,\"name\":\"teaspoon\",\"cups\":0.0104165}}},{\"LineOriginal\":\"1 heaped tablespoon icing sugar\",\"Line\":\" 1 heaped tablespoon icing sugar \",\"IngredientsInString\":[{\"Word\":\"icing sugar\",\"Position\":20}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"tablespoon\",\"Position\":9}],\"Ingredient\":{\"name\":\"icing sugar\",\"measure\":{\"amount\":1,\"name\":\"tablespoon\",\"cups\":0.0625}}},{\"LineOriginal\":\"\\u00bd orange\",\"Line\":\"  \\u00bd  orange \",\"IngredientsInString\":[{\"Word\":\"orange\",\"Position\":5}],\"AmountInString\":[{\"Word\":\"\\u00bd\",\"Position\":1}],\"Ingredient\":{\"name\":\"orange\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":0.5}}},{\"LineOriginal\":\"1 vanilla pod\",\"Line\":\" 1 vanilla pod \",\"IngredientsInString\":[{\"Word\":\"vanilla pod\",\"Position\":2}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"Ingredient\":{\"name\":\"vanilla pod\",\"measure\":{\"amount\":1,\"name\":\"whole\",\"cups\":0}}}]},\"_id\":1}\n{\"author\":\"Jamie Oliver\",\"categories\":[\"Mains\",\"Jamie's Comfort Food\",\"Chicken\",\"Father's day\",\"American\",\"Chicken thighs\"],\"cookingMethod\":\"\",\"cookTime\":\"\",\"cuisines\":[\"american\"],\"description\":\"This is an incredible fried chicken recipe, one that I've subtly evolved from that of my dear friend Art Smith, one of the kings of southern American comfort food. I've finished the chicken in the oven, purely because you really do need a big fryer to do it properly, as well as for good temperature control, and this method is much friendlier for home cooking.\",\"image\":\"http:\\/\\/cdn.jamieoliver.com\\/recipe-database\\/oldImages\\/xtra_med\\/1356_1_1440772046.jpg\",\"ingredients\":[\"chicken thighs\",\"chicken\",\"sweet potatoes\",\"baking powder\",\"cayenne pepper\",\"smoked paprika\",\"onion powder\",\"garlic powder\",\"oil\",\"black peppercorns\",\"thyme\",\"bay leaves\",\"cloves\",\"fennel seeds\",\"caster sugar\",\"cabbage\"],\"instructions\":[\"To make the brine, toast the peppercorns in a large pan on a high heat for 1 minute, then add the rest of the brine ingredients and 400ml of cold water. Bring to the boil, then leave to cool, topping up with another 400ml of cold water.\",\"Meanwhile, slash the chicken thighs a few times as deep as the bone, keeping the skin on for maximum flavour. Once the brine is cool, add all the chicken pieces, cover with clingfilm and leave in the fridge for at least 12 hours - I do this overnight.\",\"After brining, remove the chicken to a bowl, discarding the brine, then pour over the buttermilk, cover with clingfilm and place in the fridge for a further 8 hours, so the chicken is super-tender.\",\"When you're ready to cook, preheat the oven to 190\\u00b0C\\/375\\u00b0F\\/gas 5.\",\"Wash the sweet potatoes well, roll them in a little sea salt, place on a tray and bake for 30 minutes.\",\"Meanwhile, make the pickle - toast the fennel seeds in a large pan for 1 minute, then remove from the heat. Pour in the vinegar, add the sugar and a good pinch of sea salt, then finely slice and add the cabbage. Place in the fridge, remembering to stir every now and then while you cook your chicken.\",\"In a large bowl, mix the flour with the baking powder, cayenne, paprika and the onion and garlic powders.\",\"Just under half fill a large sturdy pan with oil - the oil should be 8cm deep, but never fill your pan more than half full - and place on a medium to high heat. Use a thermometer to tell when it's ready (180\\u00b0C), or add a piece of potato and wait until it turns golden - that's a sign it's ready to go.\",\"Take the chicken out of the fridge, then, one or two pieces at a time, remove from the buttermilk and dunk into the bowl of flour until well coated. Give them a shake, then place on a large board and repeat with the remaining chicken pieces.\",\"Turn the oven down to 170\\u00b0C\\/325\\u00b0F\\/gas 3 and move the sweet potatoes to the bottom shelf.\",\"Once the oil is hot enough, start with 2 thighs - quickly dunk them back into the flour, then carefully lower into the hot oil using a slotted spoon. Fry for 5 minutes, turning halfway, then remove to a wire rack over a baking tray.\",\"Bring the temperature of the oil back up, repeat the process with the remaining 2 thighs, then pop the tray into the oven.\",\"Fry the 4 drumsticks in one batch, then add them to the rack of thighs in the oven for 30 minutes, or until all the chicken is cooked through.\",\"Serve with your baked sweet potatoes, cabbage pickle and some salad leaves.\"],\"name\":\"Southern fried chicken\",\"notes\":\"\",\"prepTime\":\"\",\"publisher\":\"\",\"totalTime\":\"135\",\"url\":\"https:\\/\\/www.jamieoliver.com\\/recipes\\/chicken-recipes\\/southern-fried-chicken\\/\",\"yield\":\"4\",\"nutrition\":{\"calories\":523,\"fat\":13.9,\"fiber\":0,\"protein\":27,\"sugar\":23.6},\"nameSub\":\"With red cabbage pickle\",\"ingredientList\":{\"ingredients\":[{\"name\":\"chicken thighs\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}},{\"name\":\"chicken\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":24}},{\"name\":\"sweet potatoes\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}},{\"name\":\"baking powder\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.041666}},{\"name\":\"cayenne pepper\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.041666}},{\"name\":\"smoked paprika\",\"comment\":\"hot\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.041666}},{\"name\":\"onion powder\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.041666}},{\"name\":\"garlic powder\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.041666}},{\"name\":\"oil\",\"measure\":{\"amount\":2,\"name\":\"whole\",\"cups\":0}},{\"name\":\"black peppercorns\",\"measure\":{\"amount\":1,\"name\":\"tablespoon\",\"cups\":0.125}},{\"name\":\"thyme\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":8}},{\"name\":\"bay leaves\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}},{\"name\":\"cloves\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}},{\"name\":\"fennel seeds\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.041666}},{\"name\":\"caster sugar\",\"comment\":\"golden\",\"measure\":{\"amount\":1,\"name\":\"tablespoon\",\"cups\":0.125}},{\"name\":\"cabbage\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":1}}],\"ingredientLines\":[{\"LineOriginal\":\"4 free-range chicken thighs, skin on, bone in\",\"Line\":\" 4 free range chicken thighs skin on bone in \",\"IngredientsInString\":[{\"Word\":\"chicken thighs\",\"Position\":13},{\"Word\":\"skin\",\"Position\":28},{\"Word\":\"bone\",\"Position\":36}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"Ingredient\":{\"name\":\"chicken thighs\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"4 free-range chicken drumsticks\",\"Line\":\" 4 free range chicken drumsticks \",\"IngredientsInString\":[{\"Word\":\"chicken\",\"Position\":13}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"Ingredient\":{\"name\":\"chicken\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":12}}},{\"LineOriginal\":\"4 sweet potatoes\",\"Line\":\" 4 sweet potatoes \",\"IngredientsInString\":[{\"Word\":\"sweet potatoes\",\"Position\":2}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"Ingredient\":{\"name\":\"sweet potatoes\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"1 level teaspoon baking powder\",\"Line\":\" 1 level teaspoon baking powder \",\"IngredientsInString\":[{\"Word\":\"baking powder\",\"Position\":17}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":8}],\"Ingredient\":{\"name\":\"baking powder\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.020833}}},{\"LineOriginal\":\"1 level teaspoon cayenne pepper\",\"Line\":\" 1 level teaspoon cayenne pepper \",\"IngredientsInString\":[{\"Word\":\"cayenne pepper\",\"Position\":17}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":8}],\"Ingredient\":{\"name\":\"cayenne pepper\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.020833}}},{\"LineOriginal\":\"1 level teaspoon hot smoked paprika\",\"Line\":\" 1 level teaspoon hot smoked paprika \",\"IngredientsInString\":[{\"Word\":\"smoked paprika\",\"Position\":21}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":8}],\"Ingredient\":{\"name\":\"smoked paprika\",\"comment\":\"hot\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.020833}}},{\"LineOriginal\":\"1 level teaspoon onion powder\",\"Line\":\" 1 level teaspoon onion powder \",\"IngredientsInString\":[{\"Word\":\"onion powder\",\"Position\":17}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":8}],\"Ingredient\":{\"name\":\"onion powder\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.020833}}},{\"LineOriginal\":\"1 level teaspoon garlic powder\",\"Line\":\" 1 level teaspoon garlic powder \",\"IngredientsInString\":[{\"Word\":\"garlic powder\",\"Position\":17}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":8}],\"Ingredient\":{\"name\":\"garlic powder\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.020833}}},{\"LineOriginal\":\"2 litres groundnut oil\",\"Line\":\" 2 litres groundnut oil \",\"IngredientsInString\":[{\"Word\":\"oil\",\"Position\":19}],\"AmountInString\":[{\"Word\":\"2\",\"Position\":0}],\"Ingredient\":{\"name\":\"oil\",\"measure\":{\"amount\":2,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"1 tablespoon black peppercorns\",\"Line\":\" 1 tablespoon black peppercorns \",\"IngredientsInString\":[{\"Word\":\"black peppercorns\",\"Position\":13}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"tablespoon\",\"Position\":2}],\"Ingredient\":{\"name\":\"black peppercorns\",\"measure\":{\"amount\":1,\"name\":\"tablespoon\",\"cups\":0.0625}}},{\"LineOriginal\":\"4 sprigs of fresh thyme\",\"Line\":\" 4 sprigs of fresh thyme \",\"IngredientsInString\":[{\"Word\":\"thyme\",\"Position\":18}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"Ingredient\":{\"name\":\"thyme\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":4}}},{\"LineOriginal\":\"4 fresh bay leaves\",\"Line\":\" 4 fresh bay leaves \",\"IngredientsInString\":[{\"Word\":\"bay leaves\",\"Position\":8}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"Ingredient\":{\"name\":\"bay leaves\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"4 cloves of garlic\",\"Line\":\" 4 cloves of garlic \",\"IngredientsInString\":[{\"Word\":\"cloves\",\"Position\":2},{\"Word\":\"garlic\",\"Position\":12}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"Ingredient\":{\"name\":\"cloves\",\"measure\":{\"amount\":4,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"1 teaspoon fennel seeds\",\"Line\":\" 1 teaspoon fennel seeds \",\"IngredientsInString\":[{\"Word\":\"fennel seeds\",\"Position\":11}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":2}],\"Ingredient\":{\"name\":\"fennel seeds\",\"measure\":{\"amount\":1,\"name\":\"teaspoon\",\"cups\":0.020833}}},{\"LineOriginal\":\"1 heaped tablespoon golden caster sugar\",\"Line\":\" 1 heaped tablespoon golden caster sugar \",\"IngredientsInString\":[{\"Word\":\"caster sugar\",\"Position\":27}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"tablespoon\",\"Position\":9}],\"Ingredient\":{\"name\":\"caster sugar\",\"comment\":\"golden\",\"measure\":{\"amount\":1,\"name\":\"tablespoon\",\"cups\":0.0625}}},{\"LineOriginal\":\"\\u00bd red cabbage, (500g)\",\"Line\":\"  \\u00bd  red cabbage \",\"IngredientsInString\":[{\"Word\":\"cabbage\",\"Position\":9}],\"AmountInString\":[{\"Word\":\"\\u00bd\",\"Position\":1}],\"Ingredient\":{\"name\":\"cabbage\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":0.5}}}]},\"_id\":2}\n{\"author\":\"Jamie Oliver\",\"categories\":[\"Jamie's cook and save\",\"Dinner Party\",\"Australia day\",\"Mains\",\"BBQ food\"],\"cookingMethod\":\"\",\"cookTime\":\"\",\"cuisines\":[\"australian\"],\"description\":\"Juicy, marinated lamb chops with a fresh, crunchy Arabian-style salad - this is an absolute joy\",\"image\":\"http:\\/\\/cdn.jamieoliver.com\\/recipe-database\\/oldImages\\/xtra_med\\/1326_2_1437999522.jpg\",\"ingredients\":[\"lamb\",\"breads\",\"lettuce\",\"mint\",\"cucumber\",\"tomatoes\",\"lemon\",\"paprika\"],\"instructions\":[\"Preheat the oven to 200\\u00baC\\/400\\u00baF\\/gas 6.\",\"Trim and discard any thick pieces of fat from the lamb chops, drizzle with a little olive oil and season with sea salt and black pepper.\",\"Tear the pitta breads into small pieces, spread out on a baking tray and bake in the oven for 10 to 12 minutes, or until golden and crisp.\",\"Meanwhile, quarter and roughly chop the sweet crunch lettuce, discarding any tatty outer leaves, then place in a large bowl along with the rocket.\",\"Peel and halve the cucumber lengthways, scoop out the seeds, then halve lengthways again, cut into small chunks and add to the bowl.\",\"Roughly chop the tomatoes and add to the bowl. Pick the mint leaves, discarding the stalks, then keep aside for later.\",\"Preheat the grill, griddle pan or barbecue to a medium heat and cook the lamb chops for 3 minutes on each side for a nice, pink, juicy chop, or a little longer if you like your meat well done, then remove to a plate to rest.\",\"Add the pitta pieces to the bowl of salad with the mint leaves, reserving a few of the smaller leaves.\",\"Squeeze over the lemon juice, drizzle over 3 tablespoons of extra virgin olive oil and add a pinch of salt and pepper, then toss together.\",\"Sprinkle over the paprika and the reserved mint leaves, then serve with the lamb chops, drizzled with the resting juices.\"],\"name\":\"Grilled lamb chops with fattoush\",\"notes\":\"Make a delicious super-quick tzatziki-style dip by spooning a few dollops of natural yoghurt into a small bowl, adding a squeeze of lemon juice, \\u00bd a deseeded and finely chopped cucumber, a little chopped mint, a pinch of salt and pepper and a drizzle of extra virgin olive oil.\",\"prepTime\":\"\",\"publisher\":\"\",\"totalTime\":\"35\",\"url\":\"https:\\/\\/www.jamieoliver.com\\/recipes\\/lamb-recipes\\/grilled-lamb-chops-with-fattoush\\/\",\"yield\":\"4\",\"nutrition\":{\"calories\":409,\"fat\":22.4,\"fiber\":0,\"protein\":33.9,\"sugar\":4.5},\"nameSub\":\"Pittas & salad\",\"ingredientList\":{\"ingredients\":[{\"name\":\"lamb\",\"measure\":{\"amount\":4,\"name\":\"g\",\"cups\":0.04}},{\"name\":\"breads\",\"measure\":{\"amount\":2,\"name\":\"whole\",\"cups\":0}},{\"name\":\"lettuce\",\"measure\":{\"amount\":1,\"name\":\"whole\",\"cups\":2}},{\"name\":\"mint\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":0.0208333}},{\"name\":\"cucumber\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":1}},{\"name\":\"tomatoes\",\"measure\":{\"amount\":3,\"name\":\"whole\",\"cups\":0}},{\"name\":\"lemon\",\"measure\":{\"amount\":1,\"name\":\"whole\",\"cups\":2}},{\"name\":\"paprika\",\"measure\":{\"amount\":0.5,\"name\":\"teaspoon\",\"cups\":0.020833}}],\"ingredientLines\":[{\"LineOriginal\":\"4 x 100 g lamb chops\",\"Line\":\" 4 x 100 g lamb chops \",\"IngredientsInString\":[{\"Word\":\"lamb\",\"Position\":10}],\"AmountInString\":[{\"Word\":\"4\",\"Position\":0}],\"MeasureInString\":[{\"Word\":\"g\",\"Position\":8}],\"Ingredient\":{\"name\":\"lamb\",\"measure\":{\"amount\":4,\"name\":\"g\",\"cups\":0.02}}},{\"LineOriginal\":\"2 wholemeal pitta breads\",\"Line\":\" 2 wholemeal pitta breads \",\"IngredientsInString\":[{\"Word\":\"breads\",\"Position\":18}],\"AmountInString\":[{\"Word\":\"2\",\"Position\":0}],\"Ingredient\":{\"name\":\"breads\",\"measure\":{\"amount\":2,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"1 sweet crunch lettuce\",\"Line\":\" 1 sweet crunch lettuce \",\"IngredientsInString\":[{\"Word\":\"lettuce\",\"Position\":15}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"Ingredient\":{\"name\":\"lettuce\",\"measure\":{\"amount\":1,\"name\":\"whole\",\"cups\":1}}},{\"LineOriginal\":\"\\u00bd a bunch of fresh mint\",\"Line\":\"  \\u00bd  a bunch of fresh mint \",\"IngredientsInString\":[{\"Word\":\"mint\",\"Position\":22}],\"AmountInString\":[{\"Word\":\"\\u00bd\",\"Position\":1}],\"Ingredient\":{\"name\":\"mint\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":0.01041665}}},{\"LineOriginal\":\"\\u00bd a cucumber\",\"Line\":\"  \\u00bd  a cucumber \",\"IngredientsInString\":[{\"Word\":\"cucumber\",\"Position\":7}],\"AmountInString\":[{\"Word\":\"\\u00bd\",\"Position\":1}],\"Ingredient\":{\"name\":\"cucumber\",\"measure\":{\"amount\":0.5,\"name\":\"whole\",\"cups\":0.5}}},{\"LineOriginal\":\"3 ripe tomatoes\",\"Line\":\" 3 ripe tomatoes \",\"IngredientsInString\":[{\"Word\":\"tomatoes\",\"Position\":7}],\"AmountInString\":[{\"Word\":\"3\",\"Position\":0}],\"Ingredient\":{\"name\":\"tomatoes\",\"measure\":{\"amount\":3,\"name\":\"whole\",\"cups\":0}}},{\"LineOriginal\":\"1 lemon\",\"Line\":\" 1 lemon \",\"IngredientsInString\":[{\"Word\":\"lemon\",\"Position\":2}],\"AmountInString\":[{\"Word\":\"1\",\"Position\":0}],\"Ingredient\":{\"name\":\"lemon\",\"measure\":{\"amount\":1,\"name\":\"whole\",\"cups\":1}}},{\"LineOriginal\":\"\\u00bd teaspoon paprika, or sumac\",\"Line\":\"  \\u00bd  teaspoon paprika or sumac \",\"IngredientsInString\":[{\"Word\":\"paprika\",\"Position\":14},{\"Word\":\"sumac\",\"Position\":25}],\"AmountInString\":[{\"Word\":\"\\u00bd\",\"Position\":1}],\"MeasureInString\":[{\"Word\":\"teaspoon\",\"Position\":5}],\"Ingredient\":{\"name\":\"paprika\",\"measure\":{\"amount\":0.5,\"name\":\"teaspoon\",\"cups\":0.0104165}}}]},\"_id\":3}\n{\"author\":\"Jamie Oliver\",\"categories\":[\"Mains\",\"Jamie Magazine\",\"Vegetables\",\"Christmas\",\"Dinner Party\",\"Thanksgiving\",\"Italian\"],\"cookingMethod\":\"\",\"cookTime\":\"\",\"cuisines\":[\"Vegetarian\"],\"description\":\"Sticky, roasted veggies on creamy polenta, served with wild mushroom sauce and horseradish cr\\u00e8me fra\\u00eeche - this is pure indulgence\",\"image\":\"http:\\/\\/cdn.jamieoliver.com\\/recipe-database\\/oldImages\\/xtra_med\\/1349_1_1414431302.jpg\",\"ingredients\":[],\"instructions\":[\"Preheat the oven to 190\\u00baC\\/375\\u00baF\\/gas 5. Find the largest roasting tin that will fit in your oven.\",\"Scrub the beetroots, halving or quartering any larger ones. Peel and smash the garlic, then place in a bowl, pick in the thyme leaves and combine with the balsamic and a lug of olive oil. Season well with sea salt and black pepper, then tip into one corner of the roasting tray.\",\"Cut the squash into wedges, then deseed. Crush the coriander seeds and chilli, then peel and smash the garlic. Place in the same bowl, then strip in the rosemary and toss together with the cinnamon stick and a lug of olive oil, and season. Tip into another part of the roasting tray.\",\"Peel the carrots and parsnips, then pick over the thyme leaves. Toss with the zest and juice of the clementines and a splash of olive oil. Tip into another part of the roasting tray.\",\"Peel and cut the celeriac into wedges. Crush the fennel seeds and tear the sage, then toss with the celeriac and a little olive oil and add to the roasting tray, again keeping it separate.\",\"Peel and halve the red onions, toss with the thyme leaves, balsamic and a little olive oil, then add to the roasting tray.\",\"Wash the turnips, tear the bay leaves, then toss with a lug of olive oil and a nice grating of nutmeg. Add to the roasting tray, ensuring each veg group is not too clumped together in the tray.\",\"Cover the tray with tin foil and roast in the oven for 50 minutes, or until the vegetables are tender and golden, removing the foil for the last 20 minutes.\",\"For the horseradish cr\\u00e8me fra\\u00eeche, finely grate the horseradish into a bowl, then mix with the cr\\u00e8me fra\\u00eeche, 1 tablespoon of extra virgin olive oil and a squeeze of lemon juice. Season to taste and set aside.\",\"To make the wild mushroom sauce, place a large frying pan over a high heat and pour in a couple of lugs of olive oil. Tip in the mushrooms, tearing any larger ones, and give it a shake to coat them in the oil. Cook for 5 minutes, or until beginning to soften.\",\"Peel, finely slice and add the garlic, and strip in the thyme leaves. Give the pan a good shake and cook for 4 minutes, or until the mushrooms are coloured, then add the butter and a squeeze of lemon juice.\",\"Reduce the heat to medium-low and stir in the cream, adding a splash of water to loosen to you desired consistency, if needed.\",\"To make the polenta, pour 2 litres of water in a large pan and bring it to the boil over a medium heat. Slowly pour in the polenta in a steady stream, whisking until incorporated. Continue stirring over the heat for 10 minutes, or until it easily comes away from the edge of the pan.\",\"Stir in the butter and grate in the Parmesan, beating until creamy and adding a splash of water to get it to the right consistency, if needed.\",\"Season the polenta to taste, then immediately pour it onto a large board or platter and scatter over a few chunks of Stilton. Toss the roasted veg in their cooking juices, then spoon them over the polenta.\",\"Scatter over the celery leaves, a grating of truffle or a drizzle of truffle oil (if using) and spoon over any remaining juices from the tray. Delicious with mostarda di Cremona and salsa verde.\"],\"name\":\"Veggie arrosto misto\",\"notes\":\"Mostarda di Cremona is a candied fruit preserve which you can buy from Italian delis. Acorn squash is dark green with a nutty flavour - feel free to swap in butternut squash if you can't find it.\",\"prepTime\":\"\",\"publisher\":\"\",\"totalTime\":\"80\",\"url\":\"https:\\/\\/www.jamieoliver.com\\/recipes\\/vegetables-recipes\\/veggie-arrosto-misto\\/\",\"yield\":\"8 to 10\",\"nutrition\":{\"calories\":726,\"fat\":40.1,\"fiber\":0,\"protein\":18,\"sugar\":20.5},\"nameSub\":\"With truffle polenta\",\"ingredientList\":{\"ingredients\":[],\"ingredientLines\":[]},\"_id\":4}"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}