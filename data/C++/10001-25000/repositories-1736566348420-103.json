{
  "metadata": {
    "timestamp": 1736566348420,
    "page": 103,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bulletphysics/bullet3",
      "stars": 12876,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.396484375,
          "content": "/bin\n/build3/gmake\n/build3/vs2010\n/build_cmake/\n\n*.pyc\n\n# Python\n__pycache__/\n*.py[cod]\n\n# Pip\npip-selfcheck.json\n*.whl\n*.egg\n*.egg-info\n\n# Setuptools\n/build\n/dist\n*.eggs\n\n# CMake\nCMakeFiles/\nCMakeCache.txt\ncmake_install.cmake\nCTestTestFile.cmake\n\n# Visual Studio build files\n*.vcxproj\n*.vcxproj.filters\n*.sln\n\n# Apple Finder metadata\n*.DS_Store\n\n# vim temp files\n*.swp\n\n.vscode/\n.idea/\ncmake-build-debug/\n"
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.06640625,
          "content": "[style]\nbased_on_style = google\ncolumn_limit = 99\nindent_width = 2\n\n"
        },
        {
          "name": "AUTHORS.txt",
          "type": "blob",
          "size": 0.7822265625,
          "content": "Bullet Physics is created by Erwin Coumans with contributions from the following authors / copyright holders:\n\nAMD\nApple\nYunfei Bai\nSteve Baker\nGino van den Bergen\nJeff Bingham\nNicola Candussi\nErin Catto\nLawrence Chai\nErwin Coumans\nDisney Animation\nBenjamin Ellenberger\nChrister Ericson\nGoogle\nDirk Gregorius\nMarcus Hennix\nJasmine Hsu\nMBSim Development Team\nTakahiro Harada\nSimon Hobbs\nJohn Hsu\nOle Kniemeyer\nJay Lee\nFrancisco Leon\nlunkhound\nVsevolod Klementjev\nPhil Knight\nJohn McCutchan\nSteven Peters\nRoman Ponomarev\nNathanael Presson\nGabor PUHR\nArthur Shek\nRussel Smith\nSony\nJakub Stephien\nMarten Svanfeldt\nJie Tan\nPierre Terdiman\nSteven Thompson\nTamas Umenhoffer\n\nIf your name is missing, please send an email to erwin.coumans@gmail.com or file an issue at http://github.com/bulletphysics/bullet3\n"
        },
        {
          "name": "BulletConfig.cmake.in",
          "type": "blob",
          "size": 1.21484375,
          "content": "#                                               -*- cmake -*-\n#\n#  BulletConfig.cmake(.in)\n#\n\n# Use the following variables to compile and link against Bullet:\n#  BULLET_FOUND              - True if Bullet was found on your system\n#  BULLET_USE_FILE           - The file making Bullet usable\n#  BULLET_DEFINITIONS        - Definitions needed to build with Bullet\n#  BULLET_INCLUDE_DIR        - Directory where Bullet-C-Api.h can be found\n#  BULLET_INCLUDE_DIRS       - List of directories of Bullet and it's dependencies\n#  BULLET_LIBRARIES          - List of libraries to link against Bullet library\n#  BULLET_LIBRARY_DIRS       - List of directories containing Bullet' libraries\n#  BULLET_ROOT_DIR           - The base directory of Bullet\n#  BULLET_VERSION_STRING     - A human-readable string containing the version\n\nset ( BULLET_FOUND 1 )\nset ( BULLET_USE_FILE     \"@BULLET_USE_FILE@\" )\nset ( BULLET_DEFINITIONS  \"@BULLET_DEFINITIONS@\" )\nset ( BULLET_INCLUDE_DIR  \"@INCLUDE_INSTALL_DIR@\" )\nset ( BULLET_INCLUDE_DIRS \"@INCLUDE_INSTALL_DIR@\" )\nset ( BULLET_LIBRARIES    \"@BULLET_LIBRARIES@\" )\nset ( BULLET_LIBRARY_DIRS \"@LIB_DESTINATION@\" )\nset ( BULLET_ROOT_DIR     \"@CMAKE_INSTALL_PREFIX@\" )\nset ( BULLET_VERSION_STRING \"@BULLET_VERSION@\" )"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 18.5419921875,
          "content": "cmake_minimum_required(VERSION 2.4.3)\nset(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS true)\ncmake_policy(SET CMP0017 NEW)\n#this line has to appear before 'PROJECT' in order to be able to disable incremental linking\nSET(MSVC_INCREMENTAL_DEFAULT ON)\n\nPROJECT(BULLET_PHYSICS)\nFILE (STRINGS \"VERSION\" BULLET_VERSION)\n\nIF(COMMAND cmake_policy)\n   cmake_policy(SET CMP0003 NEW)\n   if(POLICY CMP0042)\n      # Enable MACOSX_RPATH by default.\n      cmake_policy(SET CMP0042 NEW)\n   endif(POLICY CMP0042)\nENDIF(COMMAND cmake_policy)\n\nIF (NOT CMAKE_BUILD_TYPE)\n# SET(CMAKE_BUILD_TYPE \"Debug\")\n SET(CMAKE_BUILD_TYPE \"Release\")\nENDIF (NOT CMAKE_BUILD_TYPE)\n\nSET(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG\")\n#MESSAGE(\"CMAKE_CXX_FLAGS_DEBUG=\"+${CMAKE_CXX_FLAGS_DEBUG})\n\nOPTION(USE_DOUBLE_PRECISION \"Use double precision\"\tOFF)\nSET(CLAMP_VELOCITIES \"0\" CACHE STRING \"Clamp rigid bodies' velocity to this value, if larger than zero. Useful to prevent floating point errors or in general runaway velocities in complex scenarios\")\nOPTION(USE_GRAPHICAL_BENCHMARK \"Use Graphical Benchmark\" ON)\nOPTION(BUILD_SHARED_LIBS \"Use shared libraries\" OFF)\nOPTION(USE_SOFT_BODY_MULTI_BODY_DYNAMICS_WORLD \"Use btSoftMultiBodyDynamicsWorld\" ON)\nOPTION(USE_OPENVR \"Use OpenVR for virtual reality\" OFF)\n\nOPTION(ENABLE_VHACD \"Use VHACD in BulletRobotics and pybullet\" ON)\n\nOPTION(BULLET2_MULTITHREADING \"Build Bullet 2 libraries with mutex locking around certain operations (required for multi-threading)\" OFF)\nIF (BULLET2_MULTITHREADING)\n    OPTION(BULLET2_USE_OPEN_MP_MULTITHREADING \"Build Bullet 2 with support for multi-threading with OpenMP (requires a compiler with OpenMP support)\" OFF)\n    OPTION(BULLET2_USE_TBB_MULTITHREADING \"Build Bullet 2 with support for multi-threading with Intel Threading Building Blocks (requires the TBB library to be already installed)\" OFF)\n    IF (MSVC)\n        OPTION(BULLET2_USE_PPL_MULTITHREADING \"Build Bullet 2 with support for multi-threading with Microsoft Parallel Patterns Library (requires MSVC compiler)\" OFF)\n    ENDIF (MSVC)\nENDIF (BULLET2_MULTITHREADING)\n\n\nIF(NOT WIN32)\n\tSET(DL ${CMAKE_DL_LIBS})\n\tIF(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\t\tMESSAGE(\"Linux\")\n\t\tSET(OSDEF -D_LINUX)\n\tELSE(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\n\t\tIF(APPLE)\n\t\t\tMESSAGE(\"Apple\")\n\t\t\tSET(OSDEF -D_DARWIN)\n\t\tELSE(APPLE)\n\t\t\tMESSAGE(\"BSD?\")\n\t\t\tSET(OSDEF -D_BSD)\n\t\tENDIF(APPLE)\n\tENDIF(CMAKE_SYSTEM_NAME MATCHES \"Linux\")\nENDIF(NOT WIN32)\n\nOPTION(USE_MSVC_INCREMENTAL_LINKING \"Use MSVC Incremental Linking\" OFF)\n\n#statically linking VC++ isn't supported for WindowsPhone/WindowsStore\nIF (CMAKE_SYSTEM_NAME STREQUAL WindowsPhone OR CMAKE_SYSTEM_NAME STREQUAL WindowsStore)\n\tOPTION(USE_MSVC_RUNTIME_LIBRARY_DLL \"Use MSVC Runtime Library DLL (/MD or /MDd)\" ON)\nELSE ()\n\tOPTION(USE_MSVC_RUNTIME_LIBRARY_DLL \"Use MSVC Runtime Library DLL (/MD or /MDd)\" OFF)\nENDIF (CMAKE_SYSTEM_NAME STREQUAL WindowsPhone OR CMAKE_SYSTEM_NAME STREQUAL WindowsStore)\nOPTION(USE_MSVC_RELEASE_RUNTIME_ALWAYS \"Use MSVC Release Runtime Library even in Debug\" OFF)\n\n#SET(CMAKE_EXE_LINKER_FLAGS_INIT    \"/STACK:10000000 /INCREMENTAL:NO\")\n#SET(CMAKE_EXE_LINKER_FLAGS    \"/STACK:10000000 /INCREMENTAL:NO\")\n\n#MESSAGE(\"MSVC_INCREMENTAL_YES_FLAG\"+${MSVC_INCREMENTAL_YES_FLAG})\n\n\nIF(MSVC)\n\tIF (NOT USE_MSVC_INCREMENTAL_LINKING)\n\t\t#MESSAGE(\"MSVC_INCREMENTAL_DEFAULT\"+${MSVC_INCREMENTAL_DEFAULT})\n\t\tSET( MSVC_INCREMENTAL_YES_FLAG \"/INCREMENTAL:NO\")\n\n\t\tSTRING(REPLACE \"INCREMENTAL:YES\" \"INCREMENTAL:NO\" replacementFlags \"${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n\t\tSET(CMAKE_EXE_LINKER_FLAGS_DEBUG \"/INCREMENTAL:NO ${replacementFlags}\" )\n\t\tMESSAGE(\"CMAKE_EXE_LINKER_FLAGS_DEBUG=${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n\n\t\tSTRING(REPLACE \"INCREMENTAL:YES\" \"INCREMENTAL:NO\" replacementFlags2 \"${CMAKE_EXE_LINKER_FLAGS}\")\n\n\t\tSET(CMAKE_EXE_LINKER_FLAGS ${replacementFlag2})\n\t\tSTRING(REPLACE \"INCREMENTAL:YES\" \"\" replacementFlags3 \"${CMAKE_EXTRA_LINK_FLAGS}\")\n\n\t\tSET(CMAKE_EXTRA_LINK_FLAGS ${replacementFlag3})\n\n\n\t\tSTRING(REPLACE \"INCREMENTAL:YES\" \"INCREMENTAL:NO\" replacementFlags3 \"${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}\")\n\t\tSET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${replacementFlags3})\n\t\tSET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/INCREMENTAL:NO ${replacementFlags3}\" )\n\n\tENDIF (NOT USE_MSVC_INCREMENTAL_LINKING)\n\n\tIF (NOT USE_MSVC_RUNTIME_LIBRARY_DLL)\n\t\t#We statically link to reduce dependencies\n\t\tFOREACH(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO )\n\t\t\tIF(${flag_var} MATCHES \"/MD\")\n\t\t\t\tSTRING(REGEX REPLACE \"/MD\" \"/MT\" ${flag_var} \"${${flag_var}}\")\n\t\t\tENDIF(${flag_var} MATCHES \"/MD\")\n\t\t\tIF(${flag_var} MATCHES \"/MDd\")\n\t\t\t\tSTRING(REGEX REPLACE \"/MDd\" \"/MTd\" ${flag_var} \"${${flag_var}}\")\n\t\t\tENDIF(${flag_var} MATCHES \"/MDd\")\n\t\tENDFOREACH(flag_var)\n\tENDIF (NOT USE_MSVC_RUNTIME_LIBRARY_DLL)\n\n\tIF (USE_MSVC_RELEASE_RUNTIME_ALWAYS)\n\t\tFOREACH(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO )\n\t\t\tIF(${flag_var} MATCHES \"/MDd\")\n\t\t\t\tSTRING(REGEX REPLACE \"/MDd\" \"/MD\" ${flag_var} \"${${flag_var}}\")\n\t\t\tENDIF(${flag_var} MATCHES \"/MDd\")\n\t\t\tIF(${flag_var} MATCHES \"/MTd\")\n\t\t\t\tSTRING(REGEX REPLACE \"/MTd\" \"/MT\" ${flag_var} \"${${flag_var}}\")\n\t\t\tENDIF(${flag_var} MATCHES \"/MTd\")\n\t\t\t# Need to remove _DEBUG too otherwise things like _ITERATOR_DEBUG_LEVEL mismatch\n\t\t\tIF(${flag_var} MATCHES \"-D_DEBUG\")\n\t\t\t\tSTRING(REGEX REPLACE \"-D_DEBUG\" \"\" ${flag_var} \"${${flag_var}}\")\n\t\t\tENDIF(${flag_var} MATCHES \"-D_DEBUG\")\n\t\tENDFOREACH(flag_var)\n\tENDIF (USE_MSVC_RELEASE_RUNTIME_ALWAYS)\n\n\tIF (CMAKE_CL_64)\n\t  ADD_DEFINITIONS(-D_WIN64)\n\tELSE()\n\t  OPTION(USE_MSVC_SSE \"Use MSVC /arch:sse option\"\tOFF)\n\t  option(USE_MSVC_SSE2 \"Compile your program with SSE2 instructions\" ON)\n\n\t  IF (USE_MSVC_SSE)\n\t\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /arch:SSE\")\n\t  ENDIF()\n\t  IF (USE_MSVC_SSE2)\n\t\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /arch:SSE2\")\n\t  ENDIF()\n\n\tENDIF()\n\n\toption(USE_MSVC_AVX \"Compile your program with AVX instructions\"  OFF)\n\n\tIF(USE_MSVC_AVX)\n\t\tadd_definitions(/arch:AVX)\n\tENDIF()\n\n\tOPTION(USE_MSVC_FAST_FLOATINGPOINT \"Use MSVC /fp:fast option\"\tON)\n\tIF (USE_MSVC_FAST_FLOATINGPOINT)\n\t\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /fp:fast\")\n  ENDIF()\n\n\tOPTION(USE_MSVC_STRING_POOLING \"Use MSVC /GF string pooling option\"\tON)\n\tIF (USE_MSVC_STRING_POOLING)\n\t\tSET(CMAKE_C_FLAGS \"/GF ${CMAKE_C_FLAGS}\")\n\t\tSET(CMAKE_CXX_FLAGS \"/GF ${CMAKE_CXX_FLAGS}\")\n\tENDIF()\n\n\tOPTION(USE_MSVC_FUNCTION_LEVEL_LINKING \"Use MSVC /Gy function level linking option\"\tON)\n\tIF(USE_MSVC_FUNCTION_LEVEL_LINKING)\n\t\tSET(CMAKE_C_FLAGS \"/Gy ${CMAKE_C_FLAGS}\")\n\t\tSET(CMAKE_CXX_FLAGS \"/Gy ${CMAKE_CXX_FLAGS}\")\n\t\tset(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /OPT:REF\")\n\t\tset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /OPT:REF\")\n\tENDIF(USE_MSVC_FUNCTION_LEVEL_LINKING)\n\n\tOPTION(USE_MSVC_EXEPTIONS \"Use MSVC C++ exceptions option\"\tOFF)\n\n\n\n\tOPTION(USE_MSVC_COMDAT_FOLDING \"Use MSVC /OPT:ICF COMDAT folding option\"\tON)\n\n\tIF(USE_MSVC_COMDAT_FOLDING)\n\t\tset(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} /OPT:ICF\")\n\t\tset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /OPT:ICF\")\n\tENDIF()\n\n\tOPTION(USE_MSVC_DISABLE_RTTI \"Use MSVC /GR- disabled RTTI flags option\"\tON)\n\tIF(USE_MSVC_DISABLE_RTTI)\n\t  STRING(REGEX REPLACE \"/GR\" \"\" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}) # Disable RTTI\n\t\tSET(CMAKE_C_FLAGS \"/GR- ${CMAKE_C_FLAGS}\")\n\t\tSET(CMAKE_CXX_FLAGS \"/GR- ${CMAKE_CXX_FLAGS}\")\n\tENDIF(USE_MSVC_DISABLE_RTTI)\n\n\tSET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /wd4244 /wd4267\")\nENDIF(MSVC)\n\n\n\nIF (WIN32)\nOPTION(INTERNAL_CREATE_DISTRIBUTABLE_MSVC_PROJECTFILES \"Create MSVC projectfiles that can be distributed\" OFF)\n\nIF (INTERNAL_CREATE_DISTRIBUTABLE_MSVC_PROJECTFILES)\n\tSET (LIBRARY_OUTPUT_PATH ${BULLET_PHYSICS_SOURCE_DIR}/lib CACHE PATH \"Single output directory for building all libraries.\")\n\tSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BULLET_PHYSICS_SOURCE_DIR})\n\tSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BULLET_PHYSICS_SOURCE_DIR})\n\tSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BULLET_PHYSICS_SOURCE_DIR})\n\tSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${BULLET_PHYSICS_SOURCE_DIR})\n\tSET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${BULLET_PHYSICS_SOURCE_DIR})\nELSE()\n\tSET (LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib CACHE PATH \"Single output directory for building all libraries.\")\nENDIF()\n\n\n\nOPTION(INTERNAL_CREATE_MSVC_RELATIVE_PATH_PROJECTFILES \"Create MSVC projectfiles with relative paths\" OFF)\nOPTION(INTERNAL_ADD_POSTFIX_EXECUTABLE_NAMES \"Add MSVC postfix for executable names (_Debug)\" OFF)\n\nSET(CMAKE_DEBUG_POSTFIX \"_Debug\" CACHE STRING \"Adds a postfix for debug-built libraries.\")\nSET(CMAKE_MINSIZEREL_POSTFIX \"_MinsizeRel\" CACHE STRING \"Adds a postfix for MinsizeRelease-built libraries.\")\nSET(CMAKE_RELWITHDEBINFO_POSTFIX \"_RelWithDebugInfo\" CACHE STRING \"Adds a postfix for ReleaseWithDebug-built libraries.\")\n\n\n\n\n\nIF (INTERNAL_CREATE_MSVC_RELATIVE_PATH_PROJECTFILES)\nSET(CMAKE_SUPPRESS_REGENERATION  1)\nSET(CMAKE_USE_RELATIVE_PATHS 1)\nENDIF(INTERNAL_CREATE_MSVC_RELATIVE_PATH_PROJECTFILES)\n\nENDIF (WIN32)\n\n\nOPTION(BUILD_CPU_DEMOS \"Build original Bullet CPU examples\" ON)\n\n\n\nOPTION(INTERNAL_UPDATE_SERIALIZATION_STRUCTURES \"Internal update serialization structures\" OFF)\nIF (INTERNAL_UPDATE_SERIALIZATION_STRUCTURES)\nADD_DEFINITIONS( -DBT_INTERNAL_UPDATE_SERIALIZATION_STRUCTURES)\nENDIF (INTERNAL_UPDATE_SERIALIZATION_STRUCTURES)\n\nIF (CLAMP_VELOCITIES)\nADD_DEFINITIONS( -DBT_CLAMP_VELOCITY_TO=${CLAMP_VELOCITIES})\nENDIF (CLAMP_VELOCITIES)\n\nIF (USE_DOUBLE_PRECISION)\nADD_DEFINITIONS( -DBT_USE_DOUBLE_PRECISION)\nSET( BULLET_DOUBLE_DEF \"-DBT_USE_DOUBLE_PRECISION\")\nENDIF (USE_DOUBLE_PRECISION)\n\nIF (NOT USE_SOFT_BODY_MULTI_BODY_DYNAMICS_WORLD)\nADD_DEFINITIONS(-DSKIP_SOFT_BODY_MULTI_BODY_DYNAMICS_WORLD)\nENDIF ()\n\nIF(USE_GRAPHICAL_BENCHMARK)\nADD_DEFINITIONS( -DUSE_GRAPHICAL_BENCHMARK)\nENDIF (USE_GRAPHICAL_BENCHMARK)\n\nIF(BULLET2_MULTITHREADING)\n\tADD_DEFINITIONS( -DBT_THREADSAFE=1 )\n\tIF (NOT MSVC)\n\t\tSET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\tENDIF (NOT MSVC)\n\tIF (NOT WIN32)\n\t\tFIND_PACKAGE(Threads)\n\t\tLINK_LIBRARIES( ${CMAKE_THREAD_LIBS_INIT} )\n\tENDIF (NOT WIN32)\nENDIF (BULLET2_MULTITHREADING)\n\nIF (BULLET2_USE_OPEN_MP_MULTITHREADING)\n    ADD_DEFINITIONS(\"-DBT_USE_OPENMP=1\")\n    IF (MSVC)\n        SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /openmp\")\n    ELSE (MSVC)\n        # GCC, Clang\n        SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fopenmp\")\n    ENDIF (MSVC)\nENDIF (BULLET2_USE_OPEN_MP_MULTITHREADING)\n\nIF (BULLET2_USE_TBB_MULTITHREADING)\n    SET (BULLET2_TBB_INCLUDE_DIR \"not found\" CACHE PATH \"Directory for Intel TBB includes.\")\n    SET (BULLET2_TBB_LIB_DIR \"not found\" CACHE PATH \"Directory for Intel TBB libraries.\")\n    find_library(TBB_LIBRARY tbb PATHS ${BULLET2_TBB_LIB_DIR})\n    find_library(TBBMALLOC_LIBRARY tbbmalloc PATHS ${BULLET2_TBB_LIB_DIR})\n    ADD_DEFINITIONS(\"-DBT_USE_TBB=1\")\n    INCLUDE_DIRECTORIES( ${BULLET2_TBB_INCLUDE_DIR} )\n    LINK_LIBRARIES( ${TBB_LIBRARY} ${TBBMALLOC_LIBRARY} )\nENDIF (BULLET2_USE_TBB_MULTITHREADING)\n\nIF (BULLET2_USE_PPL_MULTITHREADING)\n    ADD_DEFINITIONS(\"-DBT_USE_PPL=1\")\nENDIF (BULLET2_USE_PPL_MULTITHREADING)\n\nIF (WIN32)\nOPTION(USE_GLUT \"Use Glut\"\tON)\nADD_DEFINITIONS( -D_CRT_SECURE_NO_WARNINGS )\nADD_DEFINITIONS( -D_CRT_SECURE_NO_DEPRECATE )\nADD_DEFINITIONS( -D_SCL_SECURE_NO_WARNINGS )\n\nIF (USE_GLUT AND MSVC)\n\tstring (REPLACE \"/D_WINDOWS\" \"\" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})\n\tremove_definitions(-D_WINDOWS )\nENDIF()\n\n\n\nELSE(WIN32)\nOPTION(USE_GLUT \"Use Glut\"\tON)\nENDIF(WIN32)\n\n\nIF(COMMAND cmake_policy)\n   cmake_policy(SET CMP0003 NEW)\nENDIF(COMMAND cmake_policy)\n\n\n# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n# This should be the case.\n\nFIND_PACKAGE(OpenGL)\nIF (OPENGL_FOUND)\n\tMESSAGE(\"OPENGL FOUND\")\n\tMESSAGE(${OPENGL_LIBRARIES})\nELSE (OPENGL_FOUND)\n\tMESSAGE(\"OPENGL NOT FOUND\")\n\tSET(OPENGL_gl_LIBRARY opengl32)\n\tSET(OPENGL_glu_LIBRARY glu32)\nENDIF (OPENGL_FOUND)\n\n\n#FIND_PACKAGE(GLU)\n\n\nIF (APPLE)\n  FIND_LIBRARY(COCOA_LIBRARY Cocoa)\nENDIF()\n\nOPTION(BUILD_BULLET3 \"Set when you want to build Bullet 3\" ON)\n\n# Optional Python configuration\n# Will not probe environment for Python configuration (which can abort the\n# build process) unless you explicitly turn on BUILD_PYBULLET.\nOPTION(BUILD_PYBULLET \"Set when you want to build pybullet (Python bindings for Bullet)\" OFF)\nIF(BUILD_PYBULLET)\n\tSET(PYTHON_VERSION_PYBULLET \"\" CACHE STRING \"Python version pybullet will use.\")\n\tSET(Python_ADDITIONAL_VERSIONS 3 3.6 3.5 3.4 3.3 3.2 3.1 3.0 2.7 2.7.12 2.7.10 2.7.3 )\n\tSET_PROPERTY(CACHE PYTHON_VERSION_PYBULLET PROPERTY STRINGS ${Python_ADDITIONAL_VERSIONS})\n\tSET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build3/cmake ${CMAKE_MODULE_PATH})\n\tOPTION(EXACT_PYTHON_VERSION \"Require Python and match PYTHON_VERSION_PYBULLET exactly, e.g. 2.7.12\" OFF)\n\tIF(EXACT_PYTHON_VERSION)\n\t    set(EXACT_PYTHON_VERSION_FLAG EXACT REQUIRED)\n\tENDIF(EXACT_PYTHON_VERSION)\n\t# first find the python interpreter\n\tFIND_PACKAGE(PythonInterp ${PYTHON_VERSION_PYBULLET} ${EXACT_PYTHON_VERSION_FLAG})\n\t# python library should exactly match that of the interpreter\n\t# the following can result in fatal error if you don't have the right python configuration\n\tFIND_PACKAGE(PythonLibs ${PYTHON_VERSION_STRING} EXACT)\nENDIF(BUILD_PYBULLET)\n\nOPTION(BUILD_ENET \"Set when you want to build apps with enet UDP networking support\" ON)\nOPTION(BUILD_CLSOCKET \"Set when you want to build apps with enet TCP networking support\" ON)\n\n\nIF(BUILD_PYBULLET)\n\tFIND_PACKAGE(PythonLibs)\n\n\tOPTION(BUILD_PYBULLET_NUMPY \"Set when you want to build pybullet with NumPy support\" OFF)\n\tOPTION(BUILD_PYBULLET_ENET \"Set when you want to build pybullet with enet UDP networking support\" ON)\n\tOPTION(BUILD_PYBULLET_CLSOCKET \"Set when you want to build pybullet with enet TCP networking support\" ON)\n\n\tOPTION(BUILD_PYBULLET_MAC_USE_PYTHON_FRAMEWORK \"Set when you want to use the Python Framework on Mac\" OFF)\n\n\tIF(BUILD_PYBULLET_NUMPY)\n\t\t#include(FindNumPy)\n\t\tFIND_PACKAGE(NumPy)\n\t\tif (PYTHON_NUMPY_FOUND)\n\t\t\tmessage(\"NumPy found\")\n\t\t\tadd_definitions(-DPYBULLET_USE_NUMPY)\n\t\telse()\n\t\t\tmessage(\"NumPy not found\")\n\t\tendif()\n\tENDIF()\n\n\tIF(WIN32)\n\t\tSET(BUILD_SHARED_LIBS OFF CACHE BOOL \"Shared Libs\" FORCE)\n\tELSE(WIN32)\n\t\tSET(BUILD_SHARED_LIBS ON CACHE BOOL \"Shared Libs\" FORCE)\n\tENDIF(WIN32)\n\n\tIF(APPLE)\n\t\tOPTION(BUILD_PYBULLET_MAC_USE_PYTHON_FRAMEWORK \"Set when you want to use the Python Framework on Mac\" ON)\n\t\tIF(NOT BUILD_PYBULLET_MAC_USE_PYTHON_FRAMEWORK)\n\t\t\tadd_definitions(-DB3_NO_PYTHON_FRAMEWORK)\n\t\tENDIF(NOT BUILD_PYBULLET_MAC_USE_PYTHON_FRAMEWORK)\n\t\tOPTION(BUILD_PYBULLET_SHOW_PY_VERSION \"Set when you want to show the PY_MAJOR_VERSION and PY_MAJOR_VERSION using #pragme message.\" OFF)\n\t\tIF(BUILD_PYBULLET_SHOW_PY_VERSION)\n\t\t\tadd_definitions(-DB3_DUMP_PYTHON_VERSION)\n\t\tENDIF()\n\n\tENDIF(APPLE)\n\nENDIF(BUILD_PYBULLET)\n\nIF(NOT WIN32 AND NOT APPLE)\n    OPTION(BUILD_EGL \"Build OpenGL/EGL\" ON)\n    IF(BUILD_EGL)\n        ADD_DEFINITIONS(-DBT_USE_EGL)\n    ENDIF(BUILD_EGL)\nENDIF()\n\nIF(BUILD_BULLET3)\n\t IF(APPLE)\n\t\tMESSAGE(\"Mac OSX Version is ${_CURRENT_OSX_VERSION}\")\n\t\tIF(_CURRENT_OSX_VERSION  VERSION_LESS 10.9)\n\t\t\tMESSAGE(\"Mac OSX below 10.9 has no OpenGL 3 support so please disable the BUILD_OPENGL3_DEMOS option\")\n\t\t\t#unset(BUILD_OPENGL3_DEMOS CACHE)\n\n\t\t\tOPTION(BUILD_OPENGL3_DEMOS \"Set when you want to build the OpenGL3+ demos\" OFF)\n\t\tELSE()\n\t\t\tOPTION(BUILD_OPENGL3_DEMOS \"Set when you want to build the OpenGL3+ demos\" ON)\n\t\tENDIF()\n\tELSE()\n\t\tOPTION(BUILD_OPENGL3_DEMOS \"Set when you want to build Bullet 3 OpenGL3+ demos\" ON)\n\tENDIF()\nELSE(BUILD_BULLET3)\n\tunset(BUILD_OPENGL3_DEMOS CACHE)\n\tOPTION(BUILD_OPENGL3_DEMOS \"Set when you want to build Bullet 3 OpenGL3+ demos\" OFF)\nENDIF(BUILD_BULLET3)\nIF(BUILD_OPENGL3_DEMOS)\n\tIF(EXISTS ${BULLET_PHYSICS_SOURCE_DIR}/Demos3 AND IS_DIRECTORY ${BULLET_PHYSICS_SOURCE_DIR}/Demos3)\n\t\tSUBDIRS(Demos3)\n\tENDIF()\nELSE()\n\tADD_DEFINITIONS(-DNO_OPENGL3)\nENDIF(BUILD_OPENGL3_DEMOS)\n\nOPTION(BUILD_BULLET2_DEMOS \"Set when you want to build the Bullet 2 demos\" ON)\nIF(BUILD_BULLET2_DEMOS)\n\n\tIF(EXISTS ${BULLET_PHYSICS_SOURCE_DIR}/examples AND IS_DIRECTORY ${BULLET_PHYSICS_SOURCE_DIR}/examples)\n\t\tSUBDIRS(examples)\n\tENDIF()\n\nENDIF(BUILD_BULLET2_DEMOS)\n\n\n\nOPTION(BUILD_EXTRAS \"Set when you want to build the extras\" ON)\nIF(BUILD_EXTRAS)\n  SUBDIRS(Extras)\nENDIF(BUILD_EXTRAS)\n\n\n\nSUBDIRS(src)\n\nIF(\"${CMAKE_GENERATOR}\" MATCHES \"Unix Makefiles\")\n\tOPTION(INSTALL_LIBS \"Set when you want to install libraries\" ON)\nELSE()\n\tIF(APPLE AND FRAMEWORK)\n\t\tOPTION(INSTALL_LIBS \"Set when you want to install libraries\" ON)\n\tELSE()\n#by default, don't enable the 'INSTALL' option for Xcode and MSVC projectfiles\n\t\tOPTION(INSTALL_LIBS \"Set when you want to install libraries\" OFF)\n\tENDIF()\nENDIF()\n\n\nIF(INSTALL_LIBS)\n\t#INSTALL of other files requires CMake 2.6\n\tIF(BUILD_EXTRAS)\n\t\tIF (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.5)\n\t\t\tOPTION(INSTALL_EXTRA_LIBS \"Set when you want extra libraries installed\" ON)\n\t\tENDIF (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.5)\n\tENDIF(BUILD_EXTRAS)\n\n\tSET (LIB_SUFFIX \"\" CACHE STRING \"Define suffix of directory name (32/64)\" )\n\tSET (LIB_DESTINATION \"lib${LIB_SUFFIX}\" CACHE STRING \"Library directory name\")\n\t## the following are directories where stuff will be installed to\n\tSET(INCLUDE_INSTALL_DIR \"include/bullet/\" CACHE PATH \"The subdirectory to the header prefix\")\n\tSET(PKGCONFIG_INSTALL_PREFIX \"lib${LIB_SUFFIX}/pkgconfig/\" CACHE STRING \"Base directory for pkgconfig files\")\n\tIF(NOT MSVC)\n\t  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/bullet.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/bullet.pc @ONLY)\n  \tINSTALL(\n\t\tFILES\n\t\t${CMAKE_CURRENT_BINARY_DIR}/bullet.pc\n\t\tDESTINATION\n\t\t${PKGCONFIG_INSTALL_PREFIX})\n\tENDIF(NOT MSVC)\nENDIF()\n\n\nOPTION(BUILD_UNIT_TESTS \"Build Unit Tests\"\tON)\n\nIF (BUILD_UNIT_TESTS)\n\tENABLE_TESTING()\n\tSUBDIRS(test)\nENDIF()\n\nset (BULLET_CONFIG_CMAKE_PATH lib${LIB_SUFFIX}/cmake/bullet )\nlist (APPEND BULLET_DEFINITIONS ${BULLET_DOUBLE_DEF})\nlist (APPEND BULLET_LIBRARIES LinearMath)\nlist (APPEND BULLET_LIBRARIES Bullet3Common)\nlist (APPEND BULLET_LIBRARIES BulletInverseDynamics)\nlist (APPEND BULLET_LIBRARIES BulletCollision)\nlist (APPEND BULLET_LIBRARIES BulletDynamics)\nlist (APPEND BULLET_LIBRARIES BulletSoftBody)\nset (BULLET_USE_FILE ${BULLET_CONFIG_CMAKE_PATH}/UseBullet.cmake)\nconfigure_file \t( ${CMAKE_CURRENT_SOURCE_DIR}/BulletConfig.cmake.in\n\t\t\t\t\t${CMAKE_CURRENT_BINARY_DIR}/BulletConfig.cmake\n\t\t\t\t\t@ONLY ESCAPE_QUOTES\n\t\t\t\t)\nOPTION(INSTALL_CMAKE_FILES \"Install generated CMake files\" ON)\n\nIF (INSTALL_CMAKE_FILES)\n\tinstall ( FILES ${CMAKE_CURRENT_SOURCE_DIR}/UseBullet.cmake\n\t\t${CMAKE_CURRENT_BINARY_DIR}/BulletConfig.cmake\n\t\tDESTINATION ${BULLET_CONFIG_CMAKE_PATH}\n\t)\nENDIF (INSTALL_CMAKE_FILES)\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 29.7451171875,
          "content": "# Doxyfile 1.2.4\n\n# This file describes the settings to be used by doxygen for a project\n#\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \")\n\n#---------------------------------------------------------------------------\n# General configuration options\n#---------------------------------------------------------------------------\n\n\n\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n# by quotes) that should identify the project. \nPROJECT_NAME           = \"Bullet Collision Detection & Physics Library\"\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n# This could be handy for archiving the generated documentation or \n# if some version control system is used.\n\nPROJECT_NUMBER         = \n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n# base path where the generated documentation will be put. \n# If a relative path is entered, it will be relative to the location \n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = \n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all \n# documentation generated by doxygen is written. Doxygen will use this \n# information to generate all constant output in the proper language. \n# The default language is English, other supported languages are: \n# Dutch, French, Italian, Czech, Swedish, German, Finnish, Japanese, \n# Korean, Hungarian, Norwegian, Spanish, Romanian, Russian, Croatian, \n# Polish, Portuguese and Slovene.\n\nOUTPUT_LANGUAGE        = English\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n# documentation are documented, even if no documentation was available. \n# Private class members and static file members will be hidden unless \n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES \n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n# will be included in the documentation. \n\nEXTRACT_PRIVATE        = YES\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file \n# will be included in the documentation. \n\nEXTRACT_STATIC         = YES\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n# undocumented members of documented classes, files or namespaces. \n# If set to NO (the default) these members will be included in the \n# various overviews, but no documentation section is generated. \n# This option has no effect if EXTRACT_ALL is enabled. \n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n# undocumented classes that are normally visible in the class hierarchy. \n# If set to NO (the default) these class will be included in the various \n# overviews. This option has no effect if EXTRACT_ALL is enabled. \n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n# include brief member descriptions after the members that are listed in \n# the file and class documentation (similar to JavaDoc). \n# Set to NO to disable this. \n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n# the brief description of a member or function before the detailed description. \n# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the \n# brief descriptions will be completely suppressed. \n\nREPEAT_BRIEF           = YES\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then \n# Doxygen will generate a detailed section even if there is only a brief \n# description. \n\nALWAYS_DETAILED_SEC    = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full \n# path before files name in the file list and in the header files. If set \n# to NO the shortest path that makes the file name unique will be used. \n\nFULL_PATH_NAMES        = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag \n# can be used to strip a user defined part of the path. Stripping is \n# only done if one of the specified strings matches the left-hand part of \n# the path. It is allowed to use relative paths in the argument list.\n\nSTRIP_FROM_PATH        = \n\n# The INTERNAL_DOCS tag determines if documentation \n# that is typed after a \\internal command is included. If the tag is set \n# to NO (the default) then the documentation will be excluded. \n# Set it to YES to include the internal documentation. \n\nINTERNAL_DOCS          = NO\n\n# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will \n# generate a class diagram (in Html and LaTeX) for classes with base or \n# super classes. Setting the tag to NO turns the diagrams off. \n\nCLASS_DIAGRAMS         = YES\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will \n# be generated. Documented entities will be cross-referenced with these sources. \n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body \n# of functions and classes directly in the documentation. \n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n# doxygen to hide any special comment blocks from generated source code \n# fragments. Normal C and C++ comments will always remain visible. \n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate \n# file names in lower case letters. If set to YES upper case letters are also \n# allowed. This is useful if you have classes or files whose names only differ \n# in case and if your file system supports case sensitive file names. Windows \n# users are adviced to set this option to NO.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen \n# will show members with their full class and namespace scopes in the \n# documentation. If set to YES the scope will be hidden. \n\nHIDE_SCOPE_NAMES       = NO\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n# will generate a verbatim copy of the header file for each class for \n# which an include is specified. Set to NO to disable this. \n\nVERBATIM_HEADERS       = YES\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen \n# will put list of the files that are included by a file in the documentation \n# of that file. \n\nSHOW_INCLUDE_FILES     = YES\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n# will interpret the first line (until the first dot) of a JavaDoc-style \n# comment as the brief description. If set to NO, the JavaDoc \n# comments  will behave just like the Qt-style comments (thus requiring an \n# explict @brief command for a brief description. \n\nJAVADOC_AUTOBRIEF      = YES\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented \n# member inherits the documentation from any documented member that it \n# reimplements. \n\nINHERIT_DOCS           = YES\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] \n# is inserted in the documentation for inline members. \n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n# will sort the (detailed) documentation of file and class members \n# alphabetically by member name. If set to NO the members will appear in \n# declaration order. \n\nSORT_MEMBER_DOCS       = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n# tag is set to YES, then doxygen will reuse the documentation of the first \n# member in the group (if any) for the other members of the group. By default \n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. \n# Doxygen uses this value to replace tabs by spaces in code fragments. \n\nTAB_SIZE               = 8\n\n# The ENABLE_SECTIONS tag can be used to enable conditional \n# documentation sections, marked by \\if sectionname ... \\endif. \n\nENABLED_SECTIONS       = \n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or \n# disable (NO) the todo list. This list is created by putting \\todo \n# commands in the documentation.\n\nGENERATE_TODOLIST      = NO\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or \n# disable (NO) the test list. This list is created by putting \\test \n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# This tag can be used to specify a number of aliases that acts \n# as commands in the documentation. An alias has the form \"name=value\". \n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to \n# put the command \\sideeffect (or @sideeffect) in the documentation, which \n# will result in a user defined paragraph with heading \"Side Effects:\". \n# You can put \\n's in the value part of an alias to insert newlines. \n\nALIASES                = \n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated \n# by doxygen. Possible values are YES and NO. If left blank NO is used. \n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are \n# generated by doxygen. Possible values are YES and NO. If left blank \n# NO is used. \n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings \n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will \n# automatically be disabled. \n\nWARN_IF_UNDOCUMENTED   = YES\n\n# The WARN_FORMAT tag determines the format of the warning messages that \n# doxygen can produce. The string should contain the $file, $line, and $text \n# tags, which will be replaced by the file and line number from which the \n# warning originated and the warning text. \n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning \n# and error messages should be written. If left blank the output is written \n# to stderr. \n\nWARN_LOGFILE           = \n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain \n# documented source files. You may enter file names like \"myfile.cpp\" or \n# directories like \"/usr/src/myproject\". Separate the files or directories \n# with spaces. \n\nINPUT                  = src/LinearMath src/BulletCollision src/BulletDynamics src/BulletSoftBody src/btBulletCollisionCommon.h src/btBulletDynamicsCommon.h  Extras/Serialize/BulletWorldImporter Extras/Serialize/BulletFileLoader\n\n\n# If the value of the INPUT tag contains directories, you can use the \n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n# and *.h) to filter out the source-files in the directories. If left \n# blank all files are included. \n\nFILE_PATTERNS          = *.h *.cpp *.c\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories \n# should be searched for input files as well. Possible values are YES and NO. \n# If left blank NO is used. \n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should \n# excluded from the INPUT source files. This way you can easily exclude a \n# subdirectory from a directory tree whose root is specified with the INPUT tag. \n\nEXCLUDE                = \n\n# If the value of the INPUT tag contains directories, you can use the \n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n# certain files from those directories. \n\nEXCLUDE_PATTERNS       = \n\n# The EXAMPLE_PATH tag can be used to specify one or more files or \n# directories that contain example code fragments that are included (see \n# the \\include command). \n\nEXAMPLE_PATH           = \n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the \n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n# and *.h) to filter out the source-files in the directories. If left \n# blank all files are included. \n\nEXAMPLE_PATTERNS       = \n\n# The IMAGE_PATH tag can be used to specify one or more files or \n# directories that contain image that are included in the documentation (see \n# the \\image command). \n\nIMAGE_PATH             = \n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should \n# invoke to filter for each input file. Doxygen will invoke the filter program \n# by executing (via popen()) the command <filter> <input-file>, where <filter> \n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an \n# input file. Doxygen will then use the output that the filter program writes \n# to standard output. \n\nINPUT_FILTER           = \n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using \n# INPUT_FILTER) will be used to filter the input files when producing source \n# files to browse. \n\nFILTER_SOURCE_FILES    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index \n# of all compounds will be generated. Enable this if the project \n# contains a lot of classes, structs, unions or interfaces. \n\nALPHABETICAL_INDEX     = NO\n\n# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then \n# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns \n# in which this list will be split (can be a number in the range [1..20]) \n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all \n# classes will be put under the same header in the alphabetical index. \n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that \n# should be ignored while generating the index headers. \n\nIGNORE_PREFIX          = \n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will \n# generate HTML output. \n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. \n# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n# put in front of it. If left blank `html' will be used as the default path. \n\nHTML_OUTPUT            = html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for \n# each generated HTML page. If it is left blank doxygen will generate a \n# standard header.\n\nHTML_HEADER            = \n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for \n# each generated HTML page. If it is left blank doxygen will generate a \n# standard footer.\n\nHTML_FOOTER            = \n\n# The HTML_STYLESHEET tag can be used to specify a user defined cascading \n# style sheet that is used by each HTML page. It can be used to \n# fine-tune the look of the HTML output. If the tag is left blank doxygen \n# will generate a default style sheet \n\nHTML_STYLESHEET        = \n\n# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, \n# files or namespaces will be aligned in HTML using tables. If set to \n# NO a bullet list will be used. \n\nHTML_ALIGN_MEMBERS     = YES\n\n# If the GENERATE_HTMLHELP tag is set to YES, additional index files \n# will be generated that can be used as input for tools like the \n# Microsoft HTML help workshop to generate a compressed HTML help file (.chm) \n# of the generated HTML documentation. \n\nGENERATE_HTMLHELP      = YES\n\n# HHC_LOCATION = \"C:\\Program Files\\HTML Help Workshop\\hhc.exe\"\nHHC_LOCATION = \"C:\\Program Files (x86)\\HTML Help Workshop\\hhc.exe\"\n\n\nHTML_FILE_EXTENSION = .html\nHTML_HEADER = \nHTML_FOOTER = \n#HTML_STYLESHEET = \"\\\\server\\exchange\\Software Development\\Documentation\\DoxyGen\\doxygen.css\"\n\nCHM_FILE = BulletDocs.chm\nHHC_LOCATION = \"c:\\program files\\HTML Help Workshop\\hhc.exe\"\nGENERATE_CHI = YES\nBINARY_TOC = YES\n\nTOC_EXPAND = YES\n\nSHOW_DIRECTORIES       = YES\n\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n# top of each HTML page. The value NO (the default) enables the index and \n# the value YES disables it. \n\nDISABLE_INDEX          = NO\n\n# This tag can be used to set the number of enum values (range [1..20]) \n# that doxygen will group on one line in the generated HTML documentation. \n\nENUM_VALUES_PER_LINE   = 1\n\n# If the GENERATE_TREEVIEW tag is set to YES, a side pannel will be\n# generated containing a tree-like index structure (just like the one that \n# is generated for HTML Help). For this to work a browser that supports \n# JavaScript and frames is required (for instance Netscape 4.0+ \n# or Internet explorer 4.0+). \n\nGENERATE_TREEVIEW      = YES\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be \n# used to set the initial width (in pixels) of the frame in which the tree \n# is shown. \n\nTREEVIEW_WIDTH         = 250\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will \n# generate Latex output. \n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. \n# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n# put in front of it. If left blank `latex' will be used as the default path. \n\nLATEX_OUTPUT           = latex\n\n# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact \n# LaTeX documents. This may be useful for small projects and may help to \n# save some trees in general. \n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used \n# by the printer. Possible values are: a4, a4wide, letter, legal and \n# executive. If left blank a4wide will be used. \n\nPAPER_TYPE             = a4wide\n\n# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX \n# packages that should be included in the LaTeX output. \n\nEXTRA_PACKAGES         = \n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for \n# the generated latex document. The header should contain everything until \n# the first chapter. If it is left blank doxygen will generate a \n# standard header. Notice: only use this tag if you know what you are doing! \n\nLATEX_HEADER           = \n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated \n# is prepared for conversion to pdf (using ps2pdf). The pdf file will \n# contain links (just like the HTML output) instead of page references \n# This makes the output suitable for online browsing using a pdf viewer. \n\nPDF_HYPERLINKS         = NO\n\n# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of \n# plain latex in the generated Makefile. Set this option to YES to get a \n# higher quality PDF documentation. \n\nUSE_PDFLATEX           = NO\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode. \n# command to the generated LaTeX files. This will instruct LaTeX to keep \n# running if errors occur, instead of asking the user for help. \n# This option is also used when generating formulas in HTML. \n\nLATEX_BATCHMODE        = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output \n# The RTF output is optimised for Word 97 and may not look very pretty with \n# other RTF readers or editors.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. \n# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n# put in front of it. If left blank `rtf' will be used as the default path. \n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES Doxygen generates more compact \n# RTF documents. This may be useful for small projects and may help to \n# save some trees in general. \n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated \n# will contain hyperlink fields. The RTF file will \n# contain links (just like the HTML output) instead of page references. \n# This makes the output suitable for online browsing using a WORD or other. \n# programs which support those fields. \n# Note: wordpad (write) and others do not support links. \n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's \n# config file, i.e. a series of assigments. You only have to provide \n# replacements, missing definitions are set to their default value. \n\nRTF_STYLESHEET_FILE    = \n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES (the default) Doxygen will \n# generate man pages \n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. \n# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n# put in front of it. If left blank `man' will be used as the default path. \n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to \n# the generated man pages (default is the subroutine's section .3) \n\nMAN_EXTENSION          = .3\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES Doxygen will \n# generate an XML file that captures the structure of \n# the code including all documentation. Warning: This feature \n# is still experimental and very incomplete.\n\nGENERATE_XML           = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor   \n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will \n# evaluate all C-preprocessor directives found in the sources and include \n# files. \n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES. \n\nMACRO_EXPANSION        = YES\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES \n# then the macro expansion is limited to the macros specified with the \n# PREDEFINED and EXPAND_AS_PREDEFINED tags. \n\nEXPAND_ONLY_PREDEF     = YES\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files \n# in the INCLUDE_PATH (see below) will be search if a #include is found. \n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that \n# contain include files that are not input files but should be processed by \n# the preprocessor. \n\nINCLUDE_PATH           = \n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard \n# patterns (like *.h and *.hpp) to filter out the header-files in the \n# directories. If left blank, the patterns specified with FILE_PATTERNS will \n# be used. \n\nINCLUDE_FILE_PATTERNS  = \n\n# The PREDEFINED tag can be used to specify one or more macro names that \n# are defined before the preprocessor is started (similar to the -D option of \n# gcc). The argument of the tag is a list of macros of the form: name \n# or name=definition (no spaces). If the definition and the = are \n# omitted =1 is assumed. \n\nPREDEFINED\t\t=\t\"ATTRIBUTE_ALIGNED128(x)=x\" \\\n\t\t\t\t\t\"ATTRIBUTE_ALIGNED16(x)=x\" \\\n\t\t\t\t\t\"SIMD_FORCE_INLINE=inline\" \\\n\t\t\t\t\t\"VECTORMATH_FORCE_INLINE=inline\" \\\n\t\t\t\t\t\"USE_WIN32_THREADING=1\"\\\n\t\t\t\t\t\"USE_PTHREADS=1\"\\\n\t\t\t\t\t\"_WIN32=1\"\n\t\t\t\t\t\n\n# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then \n# this tag can be used to specify a list of macro names that should be expanded. \n# The macro definition that is found in the sources will be used. \n# Use the PREDEFINED tag if you want to use a different macro definition. \n\nEXPAND_AS_DEFINED      = \n\n#---------------------------------------------------------------------------\n# Configuration::addtions related to external references   \n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tagfiles. \n\nTAGFILES               = \n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create \n# a tag file that is based on the input files it reads. \n\nGENERATE_TAGFILE       = \n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed \n# in the class index. If set to NO only the inherited external classes \n# will be listed. \n\nALLEXTERNALS           = NO\n\n# The PERL_PATH should be the absolute path and name of the perl script \n# interpreter (i.e. the result of `which perl'). \n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool   \n#---------------------------------------------------------------------------\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is \n# available from the path. This tool is part of Graphviz, a graph visualization \n# toolkit from AT&T and Lucent Bell Labs. The other options in this section \n# have no effect if this option is set to NO (the default) \n\nHAVE_DOT               = YES\n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen \n# will generate a graph for each documented class showing the direct and \n# indirect inheritance relations. Setting this tag to YES will force the \n# the CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen \n# will generate a graph for each documented class showing the direct and \n# indirect implementation dependencies (inheritance, containment, and \n# class references variables) of the class with other documented classes. \n\nCOLLABORATION_GRAPH    = YES\n\n# If the ENABLE_PREPROCESSING, INCLUDE_GRAPH, and HAVE_DOT tags are set to \n# YES then doxygen will generate a graph for each documented file showing \n# the direct and indirect include dependencies of the file with other \n# documented files. \n\nINCLUDE_GRAPH          = YES\n\n# If the ENABLE_PREPROCESSING, INCLUDED_BY_GRAPH, and HAVE_DOT tags are set to \n# YES then doxygen will generate a graph for each documented header file showing \n# the documented files that directly or indirectly include this file \n\nINCLUDED_BY_GRAPH      = YES\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n# will graphical hierarchy of all classes instead of a textual one. \n\nGRAPHICAL_HIERARCHY    = YES\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be \n# found. If left blank, it is assumed the dot tool can be found on the path. \n\nDOT_PATH               = \n\n# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width \n# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n# this value, doxygen will try to truncate the graph, so that it fits within \n# the specified constraint. Beware that most browsers cannot cope with very \n# large images. \n\nMAX_DOT_GRAPH_WIDTH    = 1024\n\n# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height \n# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n# this value, doxygen will try to truncate the graph, so that it fits within \n# the specified constraint. Beware that most browsers cannot cope with very \n# large images. \n\nMAX_DOT_GRAPH_HEIGHT   = 1024\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will \n# generate a legend page explaining the meaning of the various boxes and \n# arrows in the dot generated graphs. \n\nGENERATE_LEGEND        = YES\n\n\n# delete intermediate dot files?\n\nDOT_CLEANUP = YES\n\n#---------------------------------------------------------------------------\n# Configuration::addtions related to the search engine   \n#---------------------------------------------------------------------------\n\n# The SEARCHENGINE tag specifies whether or not a search engine should be \n# used. If set to NO the values of all tags below this one will be ignored. \n\nSEARCHENGINE           = NO\n\n# The CGI_NAME tag should be the name of the CGI script that \n# starts the search engine (doxysearch) with the correct parameters. \n# A script with this name will be generated by doxygen. \n\nCGI_NAME               = search.cgi\n\n# The CGI_URL tag should be the absolute URL to the directory where the \n# cgi binaries are located. See the documentation of your http daemon for \n# details. \n\nCGI_URL                = \n\n# The DOC_URL tag should be the absolute URL to the directory where the \n# documentation is located. If left blank the absolute path to the \n# documentation, with file:// prepended to it, will be used. \n\nDOC_URL                = \n\n# The DOC_ABSPATH tag should be the absolute path to the directory where the \n# documentation is located. If left blank the directory on the local machine \n# will be used. \n\nDOC_ABSPATH            = \n\n# The BIN_ABSPATH tag must point to the directory where the doxysearch binary \n# is installed. \n\nBIN_ABSPATH            = c:\\program files\\doxygen\\bin\n\n# The EXT_DOC_PATHS tag can be used to specify one or more paths to \n# documentation generated for other projects. This allows doxysearch to search \n# the documentation for these projects as well. \n\nEXT_DOC_PATHS          = \n"
        },
        {
          "name": "Extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.998046875,
          "content": "\nThe files in this repository are licensed under the zlib license, except for the files under 'Extras' and examples/ThirdPartyLibs.\n\nBullet Continuous Collision Detection and Physics Library\nhttp://bulletphysics.org\n\nThis software is provided 'as-is', without any express or implied warranty.\nIn no event will the authors be held liable for any damages arising from the use of this software.\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it freely,\nsubject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\n3. This notice may not be removed or altered from any source distribution.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.5693359375,
          "content": "include MANIFEST.in *.txt\nrecursive-include examples *.h\nrecursive-include examples *.hpp\nrecursive-include Extras *.h\nrecursive-include Extras *.hpp\nrecursive-include Extras *.inl\nrecursive-include src *.h\nrecursive-include src *.hpp\nrecursive-include src *.cpp\nrecursive-include examples/pybullet/gym *.*\ninclude examples/ThirdPartyLibs/enet/unix.c\ninclude examples/OpenGLWindow/*.*\nrecursive-include examples/SharedMemory/plugins *.*\nrecursive-include examples/ThirdPartyLibs/glad *.*\ninclude examples/ThirdPartyLibs/enet/win32.c\nrecursive-include examples/ThirdPartyLibs/Eigen *\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0986328125,
          "content": "[![Travis Build Status](https://api.travis-ci.org/bulletphysics/bullet3.png?branch=master)](https://travis-ci.org/bulletphysics/bullet3)\n[![Appveyor Build status](https://ci.appveyor.com/api/projects/status/6sly9uxajr6xsstq)](https://ci.appveyor.com/project/erwincoumans/bullet3)\n\n# Bullet Physics SDK\n\nThis is the official C++ source code repository of the Bullet Physics SDK: real-time collision detection and multi-physics simulation for VR, games, visual effects, robotics, machine learning etc.\n\n![PyBullet](https://pybullet.org/wordpress/wp-content/uploads/2019/03/cropped-pybullet.png)\n\n## Issues ##\nThe Issue tracker was flooded with support questions and is closed until it is cleaned up. Use the [PyBullet forums](http://pybullet.org) to discuss with others.\n\n## PyBullet ##\nIt is highly recommended to use PyBullet Python bindings for improved support for robotics, reinforcement learning and VR. Use pip install pybullet and checkout the [PyBullet Quickstart Guide](https://docs.google.com/document/d/10sXEhzFRSnvFcl3XxNGhnD4N2SedqwdAvK3dsihxVUA/edit#heading=h.2ye70wns7io3).\n\nInstallation is simple:\n```\npip3 install pybullet --upgrade --user\npython3 -m pybullet_envs.examples.enjoy_TF_AntBulletEnv_v0_2017may\npython3 -m pybullet_envs.examples.enjoy_TF_HumanoidFlagrunHarderBulletEnv_v1_2017jul\npython3 -m pybullet_envs.deep_mimic.testrl --arg_file run_humanoid3d_backflip_args.txt\n```\n\nIf you use PyBullet in your research, please cite it like this:\n\n```\n@MISC{coumans2021,\nauthor =   {Erwin Coumans and Yunfei Bai},\ntitle =    {PyBullet, a Python module for physics simulation for games, robotics and machine learning},\nhowpublished = {\\url{http://pybullet.org}},\nyear = {2016--2021}\n}\n```\n\n## Requirements for Bullet Physics C++\n\nA C++ compiler for C++ 2003. The library is tested on Windows, Linux, Mac OSX, iOS, Android,\nbut should likely work on any platform with C++ compiler. \nSome optional demos require OpenGL 2 or OpenGL 3, there are some non-graphical demos and unit tests too.\n\n## Contributors and Coding Style information\n\nhttps://docs.google.com/document/d/1u9vyzPtrVoVhYqQOGNWUgjRbfwfCdIts_NzmvgiJ144/edit\n\n## Requirements for experimental OpenCL GPGPU support\n\nThe entire collision detection and rigid body dynamics can be executed on the GPU.\n\nA high-end desktop GPU, such as an AMD Radeon 7970 or NVIDIA GTX 680 or better.\nWe succesfully tested the software under Windows, Linux and Mac OSX.\nThe software currently doesn't work on OpenCL CPU devices. It might run\non a laptop GPU but performance will not likely be very good. Note that\noften an OpenCL drivers fails to compile a kernel. Some unit tests exist to\ntrack down the issue, but more work is required to cover all OpenCL kernels.\n\n## License\n\nAll source code files are licensed under the permissive zlib license\n(http://opensource.org/licenses/Zlib) unless marked differently in a particular folder/file.\n\n## Build instructions for Bullet using vcpkg\n\nYou can download and install Bullet using the [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install bullet3\n\nThe Bullet port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n## Build instructions for Bullet using premake. You can also use cmake instead.\n\n**Windows**\n\nClick on build_visual_studio_vr_pybullet_double.bat and open build3/vs2010/0_Bullet3Solution.sln\nWhen asked, convert the projects to a newer version of Visual Studio.\nIf you installed Python in the C:\\ root directory, the batch file should find it automatically.\nOtherwise, edit this batch file to choose where Python include/lib directories are located.\n\n**Windows Virtual Reality sandbox for HTC Vive and Oculus Rift**\n\nBuild and run the App_SharedMemoryPhysics_VR project, preferably in Release/optimized build.\nYou can connect from Python pybullet to the sandbox using:\n\n```\nimport pybullet as p\np.connect(p.SHARED_MEMORY) #or (p.TCP, \"localhost\", 6667) or (p.UDP, \"192.168.86.10\",1234)\n```\n\n**Linux and Mac OSX gnu make**\n\nMake sure gcc and cmake is installed (`sudo apt-get install build-essential` and `sudo apt-get install cmake` for Linux, `brew install cmake` for Mac, or https://cmake.org)\n\nIn a terminal type:\n```\n./build_cmake_pybullet_double.sh\n```\nThis script will invoke cmake and build in the build_cmake directory. You can find pybullet in Bullet/examples/pybullet.\nThe BulletExampleBrowser binary will be in Bullet/examples/ExampleBrowser.\n\nYou can also build Bullet using premake. There are premake executables in the build3 folder.\nDepending on your system (Linux 32bit, 64bit or Mac OSX) use one of the following lines\nUsing premake:\n```\ncd build3\n./premake4_linux --double gmake\n./premake4_linux64 --double gmake\n./premake4_osx --double --enable_pybullet gmake\n```\nThen\n```\ncd gmake\nmake\n```\n\nNote that on Linux, you need to use cmake to build pybullet, since the compiler has issues of mixing shared and static libraries.\n\n**Mac OSX Xcode**\n\t\nClick on build3/xcode4.command or in a terminal window execute\n```\t\n./premake_osx xcode4\n```\n## Usage\n\nThe App_ExampleBrowser executables will be located in the bin folder.\nYou can just run it though a terminal/command prompt, or by clicking it.\n\n\n```\n[--start_demo_name=\"Demo Name\"]     Start with a selected demo  \n[--mp4=moviename.mp4]               Create a mp4 movie of the window, requires ffmpeg installed\n[--mouse_move_multiplier=0.400000]  Set the mouse move sensitivity\n[--mouse_wheel_multiplier=0.01]     Set the mouse wheel sensitivity\n[--background_color_red= 0.9]       Set the red component for background color. Same for green and blue\n[--fixed_timestep= 0.0]             Use either a real-time delta time (0.0) or a fixed step size (0.016666)\n```\n\nYou can use mouse picking to grab objects. When holding the ALT or CONTROL key, you have Maya style camera mouse controls.\nPress F1 to create a series of screenshots. Hit ESCAPE to exit the demo app.\n\nCheck out the docs folder and the Bullet physics forums for further information.\n"
        },
        {
          "name": "UseBullet.cmake",
          "type": "blob",
          "size": 0.22265625,
          "content": "#                                               -*- cmake -*-\n#\n#  UseBullet.cmake\n#\n\n\nadd_definitions     ( ${BULLET_DEFINITIONS} )\ninclude_directories ( ${BULLET_INCLUDE_DIRS} )\nlink_directories    ( ${BULLET_LIBRARY_DIRS} )\n\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0048828125,
          "content": "3.26\n"
        },
        {
          "name": "_clang-format",
          "type": "blob",
          "size": 2.58203125,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Allman\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nColumnLimit:     0\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories: \n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIndentCaseLabels: true\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  false\nSortIncludes:    false\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nAccessModifierOffset: -4\nStandard:        Auto\nTabWidth:        4\nUseTab:          ForContinuationAndIndentation\n...\n\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.3955078125,
          "content": "build:\n  project: build3/vs2010/0_Bullet3Solution.sln\n\nbuild_script:\n  - mkdir cm\n  - cd cm\n  - cmake .. -G\"Visual Studio 14 2015 Win64\"\n  - cmake --build . --target ALL_BUILD --config Release -- /maxcpucount:4 /verbosity:quiet\n\ntest_script:\n  - ctest --parallel 4 --build-config Release --output-on-failure\n\nbefore_build:\n  - echo %CD%\n  - ps: cd build3\n  - echo %CD%\n  - premake4  vs2010\n  - ps: cd ..\n\n"
        },
        {
          "name": "build3",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_cmake_pybullet_double.sh",
          "type": "blob",
          "size": 0.7236328125,
          "content": "#!/bin/sh\n\nif [ -e CMakeCache.txt ]; then\n  rm CMakeCache.txt\nfi\nmkdir -p build_cmake\ncd build_cmake\ncmake -DBUILD_PYBULLET=ON -DBUILD_PYBULLET_NUMPY=ON -DUSE_DOUBLE_PRECISION=ON -DBT_USE_EGL=ON -DCMAKE_BUILD_TYPE=Release .. || exit 1\nmake -j $(command nproc 2>/dev/null || echo 12) || exit 1\ncd examples\ncd pybullet\nif [ -e pybullet.dylib ]; then\n  ln -f -s pybullet.dylib pybullet.so\nfi\nif [ -e pybullet_envs ]; then\n  rm pybullet_envs\nfi\nif [ -e pybullet_data ]; then\n  rm pybullet_data\nfi\nif [ -e pybullet_utils ]; then\n  rm pybullet_utils\nfi\nln -s ../../../examples/pybullet/gym/pybullet_envs .\nln -s ../../../examples/pybullet/gym/pybullet_data .\nln -s ../../../examples/pybullet/gym/pybullet_utils .\necho \"Completed build of Bullet.\"\n"
        },
        {
          "name": "build_visual_studio_vr_pybullet_double.bat",
          "type": "blob",
          "size": 1.46875,
          "content": "IF NOT EXIST bin mkdir bin\nIF NOT EXIST bin\\openvr_api.dll  copy examples\\ThirdPartyLibs\\openvr\\bin\\win32\\openvr_api.dll bin\nIF NOT EXIST bin\\openvr64pi.dll  copy examples\\ThirdPartyLibs\\openvr\\bin\\win64\\openvr_api.dll bin\\openvr64pi.dll\n\n#aargh, see https://github.com/ValveSoftware/openvr/issues/412\n\n\n#find a python version (hopefully just 1) and use this\ndir c:\\python* /b /ad > tmp1234.txt\n\nset /p myvar1= < tmp1234.txt\nset myvar=c:/%myvar1%\ndel tmp1234.txt\n\nrem you can also override and hardcode the Python path like this (just remove the # hashmark in next line)\nrem SET myvar=c:\\python-3.5.2\n\ncd build3\n\n\npremake4  --double --enable_stable_pd --enable_multithreading --midi --enable_static_vr_plugin --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../bin\" vs2010 \n\nrem premake4  --double   --enable_multithreading --midi --enable_static_vr_plugin --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../binserver\" vs2010 \nrem premake4  --double --enable_grpc --enable_multithreading --midi --enable_static_vr_plugin --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../binserver\" vs2010 \nrem premake4  --serial --audio --double --midi --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../bin\" vs2010 \n\nstart vs2010\n\n"
        },
        {
          "name": "build_visual_studio_vr_pybullet_double_cmake.bat",
          "type": "blob",
          "size": 0.283203125,
          "content": "mkdir build_cmake\ncd build_cmake\ncmake -DBUILD_PYBULLET=ON -DUSE_DOUBLE_PRECISION=ON -DCMAKE_BUILD_TYPE=Release -DPYTHON_INCLUDE_DIR=c:\\python38\\include -DPYTHON_LIBRARY=c:\\python38\\libs\\python38.lib -DPYTHON_DEBUG_LIBRARY=c:\\python38\\libs\\python38.lib -G \"Visual Studio 16 2019\" ..\nstart ."
        },
        {
          "name": "build_visual_studio_vr_pybullet_double_dynamic.bat",
          "type": "blob",
          "size": 1.5078125,
          "content": "IF NOT EXIST bin mkdir bin\nIF NOT EXIST bin\\openvr_api.dll  copy examples\\ThirdPartyLibs\\openvr\\bin\\win32\\openvr_api.dll bin\nIF NOT EXIST bin\\openvr64pi.dll  copy examples\\ThirdPartyLibs\\openvr\\bin\\win64\\openvr_api.dll bin\\openvr64pi.dll\n\n#aargh, see https://github.com/ValveSoftware/openvr/issues/412\n\n\n#find a python version (hopefully just 1) and use this\ndir c:\\python* /b /ad > tmp1234.txt\n\nset /p myvar1= < tmp1234.txt\nset myvar=c:/%myvar1%\ndel tmp1234.txt\n\nrem you can also override and hardcode the Python path like this (just remove the # hashmark in next line)\nrem SET myvar=c:\\python-3.5.2\n\ncd build3\n\n\npremake4  --dynamic-runtime --double --standalone-examples --enable_stable_pd --enable_multithreading --midi --enable_static_vr_plugin --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../bin\" vs2010 \n\nrem premake4  --double   --enable_multithreading --midi --enable_static_vr_plugin --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../binserver\" vs2010 \nrem premake4  --double --enable_grpc --enable_multithreading --midi --enable_static_vr_plugin --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../binserver\" vs2010 \nrem premake4  --serial --audio --double --midi --enable_openvr --enable_pybullet --python_include_dir=\"%myvar%/include\" --python_lib_dir=\"%myvar%/libs\"   --targetdir=\"../bin\" vs2010 \n\nstart vs2010\n\n"
        },
        {
          "name": "build_visual_studio_without_pybullet_vr.bat",
          "type": "blob",
          "size": 0.0625,
          "content": "cd build3\npremake5     --targetdir=\"../bin\" vs2010\nstart vs2010\n"
        },
        {
          "name": "bullet.pc.cmake",
          "type": "blob",
          "size": 0.3935546875,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=${prefix}\nlibdir=${exec_prefix}/@LIB_DESTINATION@\nincludedir=${prefix}/@INCLUDE_INSTALL_DIR@\n\nName: bullet\nDescription: Bullet Continuous Collision Detection and Physics Library\nVersion: @BULLET_VERSION@\nRequires:\nLibs: -L${libdir} -lBulletSoftBody -lBulletDynamics -lBulletCollision -lLinearMath\nCflags: @BULLET_DOUBLE_DEF@ -I${includedir} -I${prefix}/include\n"
        },
        {
          "name": "clang-format-all.sh",
          "type": "blob",
          "size": 2.353515625,
          "content": "#!/bin/bash\n#\n# clang-format-all: a tool to run clang-format on an entire project\n# Copyright (C) 2016 Evan Klitzke <evan@eklitzke.org>\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nfunction usage {\n    echo \"Usage: $0 DIR...\"\n    exit 1\n}\n\nif [ $# -eq 0 ]; then\n    usage\nfi\n\n# Variable that will hold the name of the clang-format command\nFMT=\"\"\n\n# Some distros just call it clang-format. Others (e.g. Ubuntu) are insistent\n# that the version number be part of the command. We prefer clang-format if\n# that's present, otherwise we work backwards from highest version to lowest\n# version.\nfor clangfmt in clang-format{,-{4,3}.{9,8,7,6,5,4,3,2,1,0}}; do\n    if which \"$clangfmt\" &>/dev/null; then\n        FMT=\"$clangfmt\"\n        break\n    fi\ndone\n\n# Check if we found a working clang-format\nif [ -z \"$FMT\" ]; then\n    echo \"failed to find clang-format\"\n    exit 1\nfi\n\n# Check all of the arguments first to make sure they're all directories\nfor dir in \"$@\"; do\n    if [ ! -d \"${dir}\" ]; then\n        echo \"${dir} is not a directory\"\n        usage\n    fi\ndone\n\n# Find a dominating file, starting from a given directory and going up.\nfind-dominating-file() {\n    if [ -r \"$1\"/\"$2\" ]; then\n        return 0\n    fi\n    if [ \"$1\" = \"/\" ]; then\n        return 1\n    fi\n    find-dominating-file \"$(realpath \"$1\"/..)\" \"$2\"\n    return $?\n}\n\n# Run clang-format -i on all of the things\nfor dir in \"$@\"; do\n    pushd \"${dir}\" &>/dev/null\n    if ! find-dominating-file . _clang-format; then\n        echo \"Failed to find dominating .clang-format starting at $PWD\"\n        continue\n    fi\n    find . \\\n         \\( -name '*.c' \\\n         -o -name '*.cc' \\\n         -o -name '*.cpp' \\\n         -o -name '*.h' \\\n         -o -name '*.hh' \\\n         -o -name '*.hpp' \\) \\\n         -exec \"${FMT}\" -i -verbose '{}' \\;\n    popd &>/dev/null\ndone"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 24.0029296875,
          "content": "from setuptools import find_packages\nfrom sys import platform as _platform\nimport sys\nimport glob\nimport os\n\nfrom distutils.core import setup\nfrom distutils.extension import Extension\nfrom distutils.util import get_platform\nfrom glob import glob\n\n# monkey-patch for parallel compilation\nimport multiprocessing\nimport multiprocessing.pool\n\n\ndef parallelCCompile(self,\n                     sources,\n                     output_dir=None,\n                     macros=None,\n                     include_dirs=None,\n                     debug=0,\n                     extra_preargs=None,\n                     extra_postargs=None,\n                     depends=None):\n  # those lines are copied from distutils.ccompiler.CCompiler directly\n  macros, objects, extra_postargs, pp_opts, build = self._setup_compile(\n      output_dir, macros, include_dirs, sources, depends, extra_postargs)\n  cc_args = self._get_cc_args(pp_opts, debug, extra_preargs)\n  # parallel code\n  N = 2 * multiprocessing.cpu_count()  # number of parallel compilations\n  try:\n    # On Unix-like platforms attempt to obtain the total memory in the\n    # machine and limit the number of parallel jobs to the number of Gbs\n    # of RAM (to avoid killing smaller platforms like the Pi)\n    mem = os.sysconf('SC_PHYS_PAGES') * os.sysconf('SC_PAGE_SIZE')  # bytes\n  except (AttributeError, ValueError):\n    # Couldn't query RAM; don't limit parallelism (it's probably a well\n    # equipped Windows / Mac OS X box)\n    pass\n  else:\n    mem = max(1, int(round(mem / 1024**3)))  # convert to Gb\n    N = min(mem, N)\n\n  def _single_compile(obj):\n    try:\n      src, ext = build[obj]\n    except KeyError:\n      return\n    newcc_args = cc_args\n    if _platform == \"darwin\":\n      if src.endswith('.cpp'):\n        newcc_args = cc_args + [\"-mmacosx-version-min=10.7\", \"-stdlib=libc++\"]\n    self._compile(obj, src, ext, newcc_args, extra_postargs, pp_opts)\n\n  # convert to list, imap is evaluated on-demand\n  pool = multiprocessing.pool.ThreadPool(N)\n  list(pool.imap(_single_compile, objects))\n  return objects\n\n\nimport distutils.ccompiler\ndistutils.ccompiler.CCompiler.compile = parallelCCompile\n\n#see http://stackoverflow.com/a/8719066/295157\nimport os\n\nplatform = get_platform()\nprint(platform)\n\nCXX_FLAGS = ''\nCXX_FLAGS += '-DGWEN_COMPILE_STATIC '\nCXX_FLAGS += '-DBT_USE_DOUBLE_PRECISION '\nCXX_FLAGS += '-DBT_ENABLE_ENET '\nCXX_FLAGS += '-DBT_ENABLE_CLSOCKET '\nCXX_FLAGS += '-DB3_DUMP_PYTHON_VERSION '\nCXX_FLAGS += '-DEGL_ADD_PYTHON_INIT '\nCXX_FLAGS += '-DB3_ENABLE_FILEIO_PLUGIN '\nCXX_FLAGS += '-DB3_USE_ZIPFILE_FILEIO '\nCXX_FLAGS += '-DBT_THREADSAFE=1 '\nCXX_FLAGS += '-DSTATIC_LINK_SPD_PLUGIN '\nCXX_FLAGS += '-DBT_ENABLE_VHACD '\n\nEGL_CXX_FLAGS = ''\n\n# libraries += [current_python]\n\nlibraries = []\ninclude_dirs = []\n\ntry:\n  import numpy\n  NP_DIRS = [numpy.get_include()]\nexcept:\n  print(\"numpy is disabled. getCameraImage maybe slower.\")\nelse:\n  print(\"numpy is enabled.\")\n  CXX_FLAGS += '-DPYBULLET_USE_NUMPY '\n  for d in NP_DIRS:\n    print(\"numpy_include_dirs = %s\" % d)\n  include_dirs += NP_DIRS\n\nsources = [\"examples/pybullet/pybullet.c\"]\\\n+[\"examples/ThirdPartyLibs/tinyxml2/tinyxml2.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/BulletConversion.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/KinTree.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/MathUtil.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/RBDModel.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/RBDUtil.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/Shape.cpp\"]\\\n+[\"examples/SharedMemory/plugins/stablePDPlugin/SpAlg.cpp\"]\\\n+[\"src/btLinearMathAll.cpp\"]\\\n+[\"src/btBulletCollisionAll.cpp\"]\\\n+[\"src/btBulletDynamicsAll.cpp\"]\\\n+[\"examples/ExampleBrowser/InProcessExampleBrowser.cpp\"]\\\n+[\"examples/TinyRenderer/geometry.cpp\"]\\\n+[\"examples/TinyRenderer/model.cpp\"]\\\n+[\"examples/TinyRenderer/tgaimage.cpp\"]\\\n+[\"examples/TinyRenderer/our_gl.cpp\"]\\\n+[\"examples/TinyRenderer/TinyRenderer.cpp\"]\\\n+[\"examples/SharedMemory/plugins/pdControlPlugin/pdControlPlugin.cpp\"]\\\n+[\"examples/SharedMemory/plugins/collisionFilterPlugin/collisionFilterPlugin.cpp\"]\\\n+[\"examples/SharedMemory/plugins/fileIOPlugin/fileIOPlugin.cpp\"]\\\n+[\"examples/SharedMemory/b3RobotSimulatorClientAPI_NoDirect.cpp\"]\\\n+[\"examples/SharedMemory/IKTrajectoryHelper.cpp\"]\\\n+[\"examples/SharedMemory/InProcessMemory.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClient.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsServer.cpp\"]\\\n+[\"examples/SharedMemory/GraphicsClientExample.cpp\"]\\\n+[\"examples/SharedMemory/GraphicsServerExample.cpp\"]\\\n+[\"examples/SharedMemory/RemoteGUIHelper.cpp\"]\\\n+[\"examples/SharedMemory/RemoteGUIHelperTCP.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsServerExample.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsServerExampleBullet2.cpp\"]\\\n+[\"examples/SharedMemory/SharedMemoryInProcessPhysicsC_API.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsServerSharedMemory.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsDirect.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsDirectC_API.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsServerCommandProcessor.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientSharedMemory.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientSharedMemory_C_API.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientC_API.cpp\"]\\\n+[\"examples/SharedMemory/Win32SharedMemory.cpp\"]\\\n+[\"examples/SharedMemory/PosixSharedMemory.cpp\"]\\\n+[\"examples/SharedMemory/plugins/tinyRendererPlugin/TinyRendererVisualShapeConverter.cpp\"]\\\n+[\"examples/SharedMemory/plugins/tinyRendererPlugin/tinyRendererPlugin.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientUDP.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientUDP_C_API.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientTCP.cpp\"]\\\n+[\"examples/SharedMemory/PhysicsClientTCP_C_API.cpp\"]\\\n+[\"examples/SharedMemory/b3PluginManager.cpp\"]\\\n+[\"examples/Utils/b3ResourcePath.cpp\"]\\\n+[\"examples/Utils/RobotLoggingUtil.cpp\"]\\\n+[\"examples/Utils/ChromeTraceUtil.cpp\"]\\\n+[\"examples/Utils/b3Clock.cpp\"]\\\n+[\"examples/Utils/b3Quickprof.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Wavefront/tiny_obj_loader.cpp\"]\\\n+[\"examples/ThirdPartyLibs/stb_image/stb_image.cpp\"]\\\n+[\"examples/ThirdPartyLibs/stb_image/stb_image_write.cpp\"]\\\n+[\"examples/ThirdPartyLibs/minizip/ioapi.c\"]\\\n+[\"examples/ThirdPartyLibs/minizip/unzip.c\"]\\\n+[\"examples/ThirdPartyLibs/minizip/zip.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/adler32.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/compress.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/crc32.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/deflate.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/gzclose.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/gzlib.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/gzread.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/gzwrite.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/infback.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/inffast.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/inflate.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/inftrees.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/trees.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/uncompr.c\"]\\\n+[\"examples/ThirdPartyLibs/zlib/zutil.c\"]\\\n+[\"examples/Importers/ImportColladaDemo/LoadMeshFromCollada.cpp\"]\\\n+[\"examples/Importers/ImportObjDemo/LoadMeshFromObj.cpp\"]\\\n+[\"examples/Importers/ImportObjDemo/Wavefront2GLInstanceGraphicsShape.cpp\"]\\\n+[\"examples/Importers/ImportMJCFDemo/BulletMJCFImporter.cpp\"]\\\n+[\"examples/Importers/ImportURDFDemo/BulletUrdfImporter.cpp\"]\\\n+[\"examples/Importers/ImportURDFDemo/MyMultiBodyCreator.cpp\"]\\\n+[\"examples/Importers/ImportURDFDemo/URDF2Bullet.cpp\"]\\\n+[\"examples/Importers/ImportURDFDemo/UrdfParser.cpp\"]\\\n+[\"examples/Importers/ImportURDFDemo/urdfStringSplit.cpp\"]\\\n+[\"examples/Importers/ImportMeshUtility/b3ImportMeshUtility.cpp\"]\\\n+[\"examples/MultiThreading/b3PosixThreadSupport.cpp\"]\\\n+[\"examples/MultiThreading/b3Win32ThreadSupport.cpp\"]\\\n+[\"examples/MultiThreading/b3ThreadSupportInterface.cpp\"]\\\n+[\"examples/ThirdPartyLibs/enet/callbacks.c\"]\\\n+[\"examples/ThirdPartyLibs/enet/compress.c\"]\\\n+[\"examples/ThirdPartyLibs/enet/host.c\"]\\\n+[\"examples/ThirdPartyLibs/enet/list.c\"]\\\n+[\"examples/ThirdPartyLibs/enet/packet.c\"]\\\n+[\"examples/ThirdPartyLibs/enet/peer.c\"]\\\n+[\"examples/ThirdPartyLibs/enet/protocol.c\"]\\\n+[\"examples/ExampleBrowser/OpenGLGuiHelper.cpp\"]\\\n+[\"examples/ExampleBrowser/OpenGLExampleBrowser.cpp\"]\\\n+[\"examples/ExampleBrowser/CollisionShape2TriangleMesh.cpp\"]\\\n+[\"examples/ExampleBrowser/GL_ShapeDrawer.cpp\"]\\\n+[\"examples/OpenGLWindow/SimpleOpenGL2Renderer.cpp\"]\\\n+[\"examples/OpenGLWindow/GLInstancingRenderer.cpp\"]\\\n+[\"examples/OpenGLWindow/SimpleOpenGL3App.cpp\"]\\\n+[\"examples/OpenGLWindow/GLPrimitiveRenderer.cpp\"]\\\n+[\"examples/OpenGLWindow/TwFonts.cpp\"]\\\n+[\"examples/OpenGLWindow/GLRenderToTexture.cpp\"]\\\n+[\"examples/OpenGLWindow/LoadShader.cpp\"]\\\n+[\"examples/OpenGLWindow/OpenSans.cpp\"]\\\n+[\"examples/OpenGLWindow/SimpleCamera.cpp\"]\\\n+[\"examples/OpenGLWindow/fontstash.cpp\"]\\\n+[\"examples/OpenGLWindow/SimpleOpenGL2App.cpp\"]\\\n+[\"examples/OpenGLWindow/opengl_fontstashcallbacks.cpp\"]\\\n+[\"examples/ExampleBrowser/GwenGUISupport/GraphingTexture.cpp\"]\\\n+[\"examples/ExampleBrowser/GwenGUISupport/GwenProfileWindow.cpp\"]\\\n+[\"examples/ExampleBrowser/GwenGUISupport/gwenUserInterface.cpp\"]\\\n+[\"examples/ExampleBrowser/GwenGUISupport/GwenParameterInterface.cpp\"]\\\n+[\"examples/ExampleBrowser/GwenGUISupport/GwenTextureWindow.cpp\"]\\\n+[\"src/Bullet3Common/b3AlignedAllocator.cpp\"]\\\n+[\"src/Bullet3Common/b3Logging.cpp\"]\\\n+[\"src/Bullet3Common/b3Vector3.cpp\"]\\\n+[\"examples/ThirdPartyLibs/clsocket/src/ActiveSocket.cpp\"]\\\n+[\"examples/ThirdPartyLibs/clsocket/src/PassiveSocket.cpp\"]\\\n+[\"examples/ThirdPartyLibs/clsocket/src/SimpleSocket.cpp\"]\\\n+[\"Extras/Serialize/BulletFileLoader/bChunk.cpp\"]\\\n+[\"Extras/Serialize/BulletFileLoader/bDNA.cpp\"]\\\n+[\"Extras/Serialize/BulletFileLoader/bFile.cpp\"]\\\n+[\"Extras/Serialize/BulletFileLoader/btBulletFile.cpp\"]\\\n+[\"Extras/Serialize/BulletWorldImporter/btMultiBodyWorldImporter.cpp\"]\\\n+[\"Extras/Serialize/BulletWorldImporter/btBulletWorldImporter.cpp\"]\\\n+[\"Extras/Serialize/BulletWorldImporter/btWorldImporter.cpp\"]\\\n+[\"Extras/InverseDynamics/CloneTreeCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/IDRandomUtil.cpp\"]\\\n+[\"Extras/InverseDynamics/MultiBodyTreeDebugGraph.cpp\"]\\\n+[\"Extras/InverseDynamics/User2InternalIndex.cpp\"]\\\n+[\"Extras/InverseDynamics/CoilCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/MultiBodyNameMap.cpp\"]\\\n+[\"Extras/InverseDynamics/RandomTreeCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/btMultiBodyTreeCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/DillCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/MultiBodyTreeCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/SimpleTreeCreator.cpp\"]\\\n+[\"Extras/InverseDynamics/invdyn_bullet_comparison.cpp\"]\\\n+[\"src/BulletSoftBody/btDefaultSoftBodySolver.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftBodyHelpers.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftBody.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftRigidDynamicsWorld.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftMultiBodyDynamicsWorld.cpp\"]\\\n+[\"src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp\"]\\\n+[\"src/BulletSoftBody/btDeformableBackwardEulerObjective.cpp\"]\\\n+[\"src/BulletSoftBody/btDeformableBodySolver.cpp\"]\\\n+[\"src/BulletSoftBody/btDeformableContactProjection.cpp\"]\\\n+[\"src/BulletSoftBody/btDeformableContactConstraint.cpp\"]\\\n+[\"src/BulletSoftBody/btDeformableMultiBodyConstraintSolver.cpp\"]\\\n+[\"src/BulletSoftBody/btDeformableMultiBodyDynamicsWorld.cpp\"]\\\n+[\"src/BulletSoftBody/poly34.cpp\"]\\\n+[\"src/BulletSoftBody/BulletReducedDeformableBody/btReducedDeformableBody.cpp\"]\\\n+[\"src/BulletSoftBody/BulletReducedDeformableBody/btReducedDeformableBodyHelpers.cpp\"]\\\n+[\"src/BulletSoftBody/BulletReducedDeformableBody/btReducedDeformableBodySolver.cpp\"]\\\n+[\"src/BulletSoftBody/BulletReducedDeformableBody/btReducedDeformableContactConstraint.cpp\"]\\\n+[\"src/BulletInverseDynamics/IDMath.cpp\"]\\\n+[\"src/BulletInverseDynamics/MultiBodyTree.cpp\"]\\\n+[\"src/BulletInverseDynamics/details/MultiBodyTreeImpl.cpp\"]\\\n+[\"src/BulletInverseDynamics/details/MultiBodyTreeInitCache.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/Jacobian.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/LinearR2.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/LinearR3.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/LinearR4.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/MatrixRmn.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/Misc.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/Node.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/Tree.cpp\"]\\\n+[\"examples/ThirdPartyLibs/BussIK/VectorRn.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Anim.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/DragAndDrop.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Hook.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/ToolTip.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/events.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/BaseRender.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Gwen.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Skin.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Utility.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/inputhandler.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Base.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Button.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Canvas.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/CheckBox.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ColorControls.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ColorPicker.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ComboBox.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/CrossSplitter.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/DockBase.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/DockedTabControl.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Dragger.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/GroupBox.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/HSVColorPicker.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/HorizontalScrollBar.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ImagePanel.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/HorizontalSlider.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Label.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/LabelClickable.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ListBox.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/MenuItem.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Menu.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/MenuStrip.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/NumericUpDown.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/PanelListPanel.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ProgressBar.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Properties.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/RadioButton.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/RadioButtonController.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ResizableControl.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Resizer.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/RichLabel.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ScrollBar.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ScrollBarBar.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ScrollBarButton.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/ScrollControl.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Slider.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/SplitterBar.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TabButton.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TabControl.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TabStrip.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Text.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TextBox.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TextBoxNumeric.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TreeControl.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/TreeNode.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/VerticalScrollBar.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/VerticalSlider.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/WindowControl.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Dialog/FileOpen.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Dialog/FileSave.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Controls/Dialog/Query.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Platforms/Null.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Platforms/Windows.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Gwen/Renderers/OpenGL_DebugFont.cpp\"]\\\n+[\"Extras/VHACD/test/src/main_vhacd.cpp\"] \\\n+[\"Extras/VHACD/src/VHACD.cpp\"] \\\n+[\"Extras/VHACD/src/vhacdICHull.cpp\"] \\\n+[\"Extras/VHACD/src/vhacdManifoldMesh.cpp\"] \\\n+[\"Extras/VHACD/src/vhacdMesh.cpp\"] \\\n+[\"Extras/VHACD/src/vhacdVolume.cpp\"]\n\n\negl_renderer_sources = \\\n[\"examples/SharedMemory/plugins/eglPlugin/eglRendererVisualShapeConverter.cpp\"]\\\n+[\"examples/SharedMemory/plugins/eglPlugin/eglRendererPlugin.cpp\"]\\\n+[\"examples/Importers/ImportColladaDemo/LoadMeshFromCollada.cpp\"]\\\n+[\"examples/Importers/ImportObjDemo/LoadMeshFromObj.cpp\"]\\\n+[\"examples/Importers/ImportMeshUtility/b3ImportMeshUtility.cpp\"]\\\n+[\"examples/Importers/ImportObjDemo/Wavefront2GLInstanceGraphicsShape.cpp\"]\\\n+[\"examples/TinyRenderer/geometry.cpp\"]\\\n+[\"examples/TinyRenderer/model.cpp\"]\\\n+[\"examples/TinyRenderer/tgaimage.cpp\"]\\\n+[\"examples/TinyRenderer/our_gl.cpp\"]\\\n+[\"examples/TinyRenderer/TinyRenderer.cpp\"]\\\n+[\"examples/ThirdPartyLibs/Wavefront/tiny_obj_loader.cpp\"]\\\n+[\"examples/ThirdPartyLibs/stb_image/stb_image.cpp\"]\\\n+[\"examples/ThirdPartyLibs/stb_image/stb_image_write.cpp\"]\\\n+[\"examples/ThirdPartyLibs/tinyxml2/tinyxml2.cpp\"]\\\n+[\"examples/OpenGLWindow/SimpleCamera.cpp\"]\\\n+[\"examples/Utils/b3Clock.cpp\"]\\\n+[\"examples/Utils/b3ResourcePath.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btShapeHull.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btConvexHullShape.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btBoxShape.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btSphereShape.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btConvexShape.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btCollisionShape.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btConvexPolyhedron.cpp\"]\\\n+[\"src/BulletCollision/CollisionShapes/btConvexInternalShape.cpp\"]\\\n+[\"src/Bullet3Common/b3Logging.cpp\"]\\\n+[\"src/LinearMath/btAlignedAllocator.cpp\"]\\\n+[\"src/LinearMath/btConvexHull.cpp\"]\\\n+[\"src/LinearMath/btConvexHullComputer.cpp\"] \\\n+[\"src/LinearMath/btGeometryUtil.cpp\"]\\\n+[\"src/LinearMath/btQuickprof.cpp\"] \\\n+[\"src/LinearMath/btThreads.cpp\"] \\\n+[\"src/Bullet3Common/b3AlignedAllocator.cpp\"] \\\n+[\"examples/ThirdPartyLibs/glad/gl.c\"]\\\n+[\"examples/OpenGLWindow/GLInstancingRenderer.cpp\"]\\\n+[\"examples/OpenGLWindow/GLRenderToTexture.cpp\"] \\\n+[\"examples/OpenGLWindow/LoadShader.cpp\"]\n\nif 'BT_USE_EGL' in CXX_FLAGS:\n  sources += ['examples/ThirdPartyLibs/glad/egl.c']\n  sources += ['examples/OpenGLWindow/EGLOpenGLWindow.cpp']\n\nif _platform == \"linux\" or _platform == \"linux2\":\n  libraries = ['dl', 'pthread']\n  CXX_FLAGS += '-D_LINUX '\n  CXX_FLAGS += '-DGLEW_STATIC '\n  CXX_FLAGS += '-DGLEW_INIT_OPENGL11_FUNCTIONS=1 '\n  CXX_FLAGS += '-DGLEW_DYNAMIC_LOAD_ALL_GLX_FUNCTIONS=1 '\n  CXX_FLAGS += '-DDYNAMIC_LOAD_X11_FUNCTIONS '\n  CXX_FLAGS += '-DHAS_SOCKLEN_T '\n  CXX_FLAGS += '-fno-inline-functions-called-once '\n  CXX_FLAGS += '-fvisibility=hidden '\n  CXX_FLAGS += '-fvisibility-inlines-hidden '\n  EGL_CXX_FLAGS += '-DBT_USE_EGL '\n  EGL_CXX_FLAGS += '-fPIC '  # for plugins\n\n  sources = sources + [\"examples/ThirdPartyLibs/enet/unix.c\"]\\\n  +[\"examples/OpenGLWindow/X11OpenGLWindow.cpp\"]\\\n  +[\"examples/ThirdPartyLibs/glad/gl.c\"]\\\n  +[\"examples/ThirdPartyLibs/glad/glx.c\"]\n  include_dirs += [\"examples/ThirdPartyLibs/optionalX11\"]\n\n  if 'BT_USE_EGL' in EGL_CXX_FLAGS:\n    egl_renderer_sources = egl_renderer_sources\\\n    +[\"examples/OpenGLWindow/EGLOpenGLWindow.cpp\"]\\\n    +['examples/ThirdPartyLibs/glad/egl.c']\n  else:\n    egl_renderer_sources = egl_renderer_sources\\\n    +[\"examples/OpenGLWindow/X11OpenGLWindow.cpp\"]\\\n    +[\"examples/ThirdPartyLibs/glad/glx.c\"]\n\nelif _platform == \"win32\":\n  print(\"win32!\")\n  libraries = ['Ws2_32', 'Winmm', 'User32', 'Opengl32', 'kernel32', 'glu32', 'Gdi32', 'Comdlg32']\n  CXX_FLAGS += '-DWIN32 '\n  CXX_FLAGS += '-DGLEW_STATIC '\n  sources = sources + [\"examples/ThirdPartyLibs/enet/win32.c\"]\\\n  +[\"examples/OpenGLWindow/Win32Window.cpp\"]\\\n  +[\"examples/OpenGLWindow/Win32OpenGLWindow.cpp\"]\\\n  +[\"examples/ThirdPartyLibs/glad/gl.c\"]\nelif _platform == \"darwin\":\n  print(\"darwin!\")\n  os.environ['LDFLAGS'] = '-framework Cocoa -mmacosx-version-min=10.7 -stdlib=libc++ -framework OpenGL'\n  CXX_FLAGS += '-DB3_NO_PYTHON_FRAMEWORK '\n  CXX_FLAGS += '-DHAS_SOCKLEN_T '\n  CXX_FLAGS += '-D_DARWIN '\n  #    CXX_FLAGS += '-framework Cocoa '\n  sources = sources + [\"examples/ThirdPartyLibs/enet/unix.c\"]\\\n  +[\"examples/OpenGLWindow/MacOpenGLWindow.cpp\"]\\\n  +[\"examples/ThirdPartyLibs/glad/gl.c\"]\\\n  +[\"examples/OpenGLWindow/MacOpenGLWindowObjC.m\"]\nelse:\n  print(\"bsd!\")\n  libraries = ['GL', 'GLEW', 'pthread']\n  os.environ['LDFLAGS'] = '-L/usr/X11R6/lib'\n  CXX_FLAGS += '-D_BSD '\n  CXX_FLAGS += '-I/usr/X11R6/include '\n  CXX_FLAGS += '-DHAS_SOCKLEN_T '\n  CXX_FLAGS += '-fno-inline-functions-called-once'\n  sources = [\"examples/ThirdPartyLibs/enet/unix.c\"]\\\n  +[\"examples/OpenGLWindow/X11OpenGLWindow.cpp\"]\\\n  +[\"examples/ThirdPartyLibs/glad/gl.c\"]\\\n  + sources\n\nsetup_py_dir = os.path.dirname(os.path.realpath(__file__))\n\nneed_files = []\ndatadir = \"examples/pybullet/gym/pybullet_data\"\n\nhh = setup_py_dir + \"/\" + datadir\n\nfor root, dirs, files in os.walk(hh):\n  for fn in files:\n    ext = os.path.splitext(fn)[1][1:]\n    if ext and ext in 'yaml index meta data-00000-of-00001 png gif jpg urdf sdf obj txt mtl dae off stl STL xml gin npy '.split(\n    ):\n      fn = root + \"/\" + fn\n      need_files.append(fn[1 + len(hh):])\n\nprint(\"found resource files: %i\" % len(need_files))\nfor n in need_files:\n  print(\"-- %s\" % n)\nprint(\"packages\")\nprint(find_packages('examples/pybullet/gym'))\nprint(\"-----\")\n\nextensions = []\n\npybullet_ext = Extension(\n    \"pybullet\",\n    sources=sources,\n    libraries=libraries,\n    extra_compile_args=CXX_FLAGS.split(),\n    include_dirs=include_dirs + [\n        \"src\", \"examples/ThirdPartyLibs\", \"examples/ThirdPartyLibs/glad\",\n        \"examples/ThirdPartyLibs/enet/include\", \"examples/ThirdPartyLibs/clsocket/src\",\n        \"Extras/VHACD/inc\", \"Extras/VHACD/public\",\n    ])\nextensions.append(pybullet_ext)\n\nif 'BT_USE_EGL' in EGL_CXX_FLAGS:\n\n  eglRender = Extension(\n      \"eglRenderer\",\n      sources=egl_renderer_sources,\n      libraries=libraries,\n      extra_compile_args=(CXX_FLAGS + EGL_CXX_FLAGS).split(),\n      include_dirs=include_dirs + [\n          \"src\", \"examples\", \"examples/ThirdPartyLibs\", \"examples/ThirdPartyLibs/glad\",\n          \"examples/ThirdPartyLibs/enet/include\", \"examples/ThirdPartyLibs/clsocket/src\"\n      ])\n\n  extensions.append(eglRender)\n\nsetup(\n    name='pybullet',\n    version='3.2.5',\n    description=\n    'Official Python Interface for the Bullet Physics SDK specialized for Robotics Simulation and Reinforcement Learning',\n    long_description=\n    'pybullet is an easy to use Python module for physics simulation, robotics and deep reinforcement learning based on the Bullet Physics SDK. With pybullet you can load articulated bodies from URDF, SDF and other file formats. pybullet provides forward dynamics simulation, inverse dynamics computation, forward and inverse kinematics and collision detection and ray intersection queries. Aside from physics simulation, pybullet supports to rendering, with a CPU renderer and OpenGL visualization and support for virtual reality headsets.',\n    url='https://github.com/bulletphysics/bullet3',\n    author='Erwin Coumans, Yunfei Bai, Jasmine Hsu',\n    author_email='erwincoumans@google.com',\n    license='zlib',\n    platforms='any',\n    keywords=[\n        'game development', 'virtual reality', 'physics simulation', 'robotics',\n        'collision detection', 'opengl'\n    ],\n    ext_modules=extensions,\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'License :: OSI Approved :: zlib/libpng License',\n        'Operating System :: Microsoft :: Windows', 'Operating System :: POSIX :: Linux',\n        'Operating System :: MacOS', 'Intended Audience :: Science/Research',\n        \"Programming Language :: Python\", 'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3.4', 'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6', 'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8', 'Topic :: Games/Entertainment :: Simulation',\n        'Topic :: Scientific/Engineering :: Artificial Intelligence',\n        'Framework :: Robot Framework'\n    ],\n    package_dir={'': 'examples/pybullet/gym'},\n    packages=[x for x in find_packages('examples/pybullet/gym')],\n    package_data={'pybullet_data': need_files})\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "xcode.command",
          "type": "blob",
          "size": 0.0888671875,
          "content": "\ncd `dirname $0`\ncd build3\n./premake4_osx xcode4\nopen xcode4/0_Bullet3Solution.xcworkspace\n"
        }
      ]
    }
  ]
}