{
  "metadata": {
    "timestamp": 1736566294697,
    "page": 45,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/libphonenumber",
      "stars": 16865,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1064453125,
          "content": "target/\n!tools/java/cpp-build/target/cpp-build-1.0-SNAPSHOT-jar-with-dependencies.jar\nbuild/\nlib/\ngenerated/\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.05859375,
          "content": "Google Inc.\nVonage Holdings Corp.\nIan Galpin\nBen Gertzfield\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.9248046875,
          "content": "# Contributing to libphonenumber\n\nThanks for contributing to libphonenumber!\n\nPlease read the following before filing an issue or sending a pull request.\n\nWe hope these guidelines will enhance your experience as a contributor to our\nlibrary and know that we appreciate the time you put into making it better.\n\n## Checklist before filing an issue\n\nPlease check the following:\n*   Is the issue reproducible using the\n    [demo](http://libphonenumber.appspot.com/)? If not:\n    *   Your issue may be resolved by upgrading to the latest version of the\n        library. (Reach out to the product/app team if you're not the developer!)\n    *   If you are using a\n        [port](http://github.com/google/libphonenumber#third-party-ports),\n        issues should be reported against that project.\n    *   If you are using the library through a front-end or wrapper, issues\n        should be reported against that project.\n*   Has the issue already been discussed in the\n    [issues](http://issuetracker.google.com/issues/new?component=192347) or [discussion\n    group](https://groups.google.com/group/libphonenumber-discuss)? If so, you\n    may want to comment on an existing discussion.\n\n## Filing a metadata issue\n\nPlease copy this template into your report and answer the questions to the best of your ability.\nFor acceptable evidence, [see below](#provide-supporting-evidence).\n\n``` nomarkdown\n*   Country:\n*   Example number(s) and/or range(s):\n*   Number type (\"fixed-line\", \"mobile\", \"short code\", etc.):\n*   For short codes, cost and dialing restrictions:\n*   Where or whom did you get the number(s) from:\n*   Authoritative evidence (e.g. national numbering plan, operator announcement):\n*   Link from demo (http://libphonenumber.appspot.com) showing error:\n```\n\nAs of March 2018, we kindly request that you use Google's [Issue Tracker](http://issuetracker.google.com/issues/new?component=192347)\nto report issues with the library. Using Issue Tracker will enable to us to\nget back to you more efficiently as we align GitHub user issues with ones\nreported at Google. Note that we transitioned active GitHub issues to Issue Tracker,\nbut anything inactive for over a year must be filed again. To check if your issue\nwas transitioned, see this [list of issues](https://issuetracker.google.com/hotlists/886952).\n\nAlternatively, if you have a particular issue with a Google product handling phone numbers (e.g. signup),\nyou may also use the [Google Product Forums](https://productforums.google.com/forum).\n\n### Provide authoritative evidence\n\nIdeally, change requests for ranges should be accompanied by authoritative\nevidence such as official government or public carrier documents.\n\nIf the evidence is publicly available online, please provide the link.\n\nIf the evidence is not publicly available online, make sure that you have the\nrights to share this with us, and confirm this by reading and signing the\nappropriate Contributor License Agreement (CLA). Then we can accept this\non GitHub, or we can invite you to a private Google Group archive if you\nprefer not to share on GitHub.\n\nSee https://cla.developers.google.com/about to determine whether you need to\nsign a Corporate or Individual CLA.\n\n**By signing the CLA, you confirm that you have the rights to share the\ninformation with us, and that we may use, modify, reproduce, publicly display,\nand distribute the information in accordance with the library's [open source\nlicense](http://github.com/google/libphonenumber/blob/master/LICENSE).**\n\n*   [Corporate CLA](http://developers.google.com/open-source/cla/corporate?csw=1):\n    *   See https://cla.developers.google.com/about and follow the instructions.\n    *   Once you are all set up, either create a validation issue for your\n        request, or go to the relevant open issue.\n    *   Comment on the issue, using the email that's already set up for\n        your Corporate CLA, with \"I signed the CLA.\"\n    *   If you're set up correctly, someone from the team will update you on the\n        issue, with instructions for sending private documentation to our closed\n        mailing list. Only the core libphonenumber team has access to view\n        emails sent to this address.\n\n*   [Individual CLA](http://cla.developers.google.com/about/google-individual?csw=1):\n    *   See https://cla.developers.google.com/about to ensure that an Individual\n        CLA is what you need to sign, and for help with troubleshooting.\n    *   When signing the Individual CLA, use the same email you used\n        (or will use) to file the corresponding issue, so that we may check\n        and you don't have to post your correct email in public.\n    *   Once you are all set up, either create a validation issue for your\n        request, or go to the relevant open issue.\n    *   If you're set up correctly, someone from the team will update you on the\n        issue, with instructions for sending private documentation to our closed\n        mailing list. Only the core libphonenumber team has access to view\n        emails sent to this address.\n\n## Pull requests\n\nSince all metadata (XML and mapping files) is generated automatically from other\nsources, we cannot accept pull requests to edit these files directly. This includes\nvalidation, formatting, geocoding, operator or timezone metadata. However this does\nnot mean you cannot raise issues for this data.\n\nFor changes specific to windows builds, see [Filing a code\nissue](#filing-a-code-issue) and make sure you have found a reviewer and tester\nbefore sending the pull request. If the issue wasn’t reproducible and seems to be\nspecific to your build/setup, please prefer [creating a code bug](#filing-a-code-issue) or email the\n[discussion group](https://groups.google.com/group/libphonenumber-discuss) than creating a pull request.\n\nWe are happy to review and accept pull requests for the following:\n\n*   Bug fixes\n*   Documentation and code hygiene cleanups\n\nThis list is not exhaustive. To clarify whether we'd accept a pull request, and\nespecially before spending significant time on one such as for a bug fix, we\nstrongly encourage that you bring up the question on an issue.\n\nTo get your pull request merged, we need the following:\n\n*   A CLA signature. See the previous section.\n*   If the email address you use in the Individual CLA is not already\n    associated with that GitHub account, [add it](https://help.github.com/articles/adding-an-email-address-to-your-github-account/).\n*   If you need to modify an Individual CLA signature, such as to change the\n        GitHub username, go to https://cla.developers.google.com/clas and click\n        on \"Edit Contact Information\".\n*   Responsiveness to back and forth review comments, because we will do a code\n    review.\n*   A link to a clear description of what the pull request intends to solve in [Issue\n    Tracker](http://issuetracker.google.com/issues/new?component=192347).\n*   Tests that illustrate the issue, if applicable.\n*   Willingness and ability to implement the changes in C++, Java, and JS if\n    applicable. For example, changes to `PhoneNumberUtil.java` must be ported to\n    `phonenumberutil.cc` and `phonenumberutil.js`.\n    *   The initial pull request may contain the implementation in only one\n        language to get approval on the approach.\n\nIf this is not possible, please file an issue instead.\n\n## Filing a code issue\n\nWhen filing a code issue, include the specifics of your operating system and\nprovide as much information as possible that helps us reproduce the problem.\n\nPlease be advised that metadata updates are prioritized over code changes,\nexcept for bug fixes. In addition, we work with a limited number of build\nsystems and may not be able to support every setup.\n\nIn particular, we don't actively maintain windows builds but would be able to\naccept a PR provided someone else in the open-source community could test it out\nand would be able to help with the review. One way to look for such\ncollaborators would be to email the [discussion\ngroup](https://groups.google.com/group/libphonenumber-discuss). Also see the\n[known Windows issues](FAQ.md#what-about-windows).\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.7734375,
          "content": "# This is the list of people who have contributed to the repository.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n\n# Core team:\n#\n# These people were responsible for the initial implementations in Java and\n# C++.\n\nShaopeng Jia\nLara Rennie\nDavid Yonge-Mallo\nDavid Beaumont\n\n# Team carrying out the bulk of metadata maintenance, bug fixes & feature\n# requests, and porting new features to Javascript.\n\nAndy Staudacher\nAravind Penmetsa\nDavid Beaumont\nKavitha Keshava\nKeghani Kristelle Kouzoujian\nSumathi Sundara Murthy\n\n# Additional contributions:\n\n# Javascript\nNikolaos Tronikos\n    -- Initial implementation, some subsequent maintenance.\nJames Wright\n    -- Short number info port to Javascript.\n\n# Java:\nWalter Erquínigo\n    -- Timezone mapper.\nPhilippe Liard\n    -- Offline geocoder, local Maven expert.\nCecilia Roes\n    -- Carrier mapper.\nTom Hofmann\n    -- First version of the PhoneNumberMatcher and related classes.\nFabien Allanic\nKushal Pisavadia\n\n# C++:\nPatrick Mézard\n    -- Geocoding library implementation.\nPhilippe Liard\n    -- Initial open-sourcing of a C++ library, responsible for getting this to\n       work across multiple platforms.\nBen Gertzfield\nFredrik Roubert\nGeorge Yakovlev\nGilles Vollant\n    -- Contributed towards thread synchronization solutions.\nNico Weber\nYoshifumi Inoue\n\n# Debian:\nFredrik Roubert\n\n# Metadata:\nAlec McTurk\nAlexandru Manea\nAmir Farsi\nAndrás Eisenberger\nAnssi Hannula\nBoshi Lian -- Maintains Chinese geocoding data\nBradford Smith\nCecilia Roes\nFlorian Görisch\nFredrik Roubert\nIan Galpin -- Maintains the data for the UK\nJavier Kohen\nJeanine Lilleng\nKaren Lees\nKhaled Hafez\nLei Zhang\nmonjiwired@\nPhilippe Liard\nSang-il Lee\nYugui Sonoda\n"
        },
        {
          "name": "FALSEHOODS.md",
          "type": "blob",
          "size": 13.4169921875,
          "content": "# Falsehoods Programmers Believe About Phone Numbers\n\n... and tips on how to use libphonenumber.\n\nGiven how ubiquitous phone numbers are and how long they've been around, it's\nsurprising how many false assumptions programmers continue to make about them.\n\n1.  **An individual has a phone number**\n\n    Some people do not own phones, or do not wish to provide you with their\n    telephone number when asked. Do not require a user to provide a phone number\n    unless it is essential, and whenever possible try to provide a fallback\n    to accommodate these users.\n\n1. **You can make a call to any phone number**\n  \n    Some devices such as EFTPOS terminals, fax machines and mobile internet\n    dongles may not support receiving calls. In addition, some people can not\n    use their phones for phone calls. This may be permanent (such as a hearing\n    disability), temporary (temporary hearing loss) or situational (when the\n    user is in a noisy environment).\n  \n    **Tip:** Make how you use phone numbers apparent to the user and give them\n    the option to set their preference. Ensure that you look up this preference\n    before attempting to communicate with the user.\n\n1.  **An individual has only one phone number**\n\n    Obviously, this isn't necessarily true.\n\n1.  **A phone number uniquely identifies an individual**\n\n    It wasn't even that long ago that mobile phones didn't exist, and it was\n    common for an entire household to share one fixed-line telephone number. In\n    some parts of the world, this is still true, and relatives (or even friends)\n    share a single phone number. Many phone services (especially for businesses)\n    allow multiple inbound calls to or outbound calls from the same phone\n    number.\n\n1.  **Phone numbers cannot be re-used**\n\n    Old phone numbers are recycled and get reassigned to other people.\n\n1.  **Phone numbers that are valid today will always be valid. Phone numbers of\n    a certain type today (e.g., mobile) will never be reassigned to another\n    type.**\n\n    A phone number which connects today may be disconnected tomorrow. A number\n    which is free to call today may cost money to call tomorrow. The phone\n    company may decide to expand the range of available phone numbers by\n    inserting a digit into an existing number.\n\n    **Tip:** Don’t store properties for a phone number such as validity or\n    type. Check this information again from the library when you need it.\n\n1.  **Each country calling code corresponds to exactly one country**\n\n    The USA, Canada, and several Caribbean islands share the country calling\n    code +1. Russia and Kazakhstan share +7. These are not the only examples!\n\n1.  **Each country has only one country calling code**\n\n    As of this present moment (in Mar. 2016), phones in the disputed territory\n    and partially recognised state of Kosovo may be reached by dialing the\n    country calling code for Serbia (+381), Slovenia (+386), or Monaco (+377),\n    depending on where and when one obtained the number.\n\n    **Tip:** Use a phone widget to encourage users to enter their phone number\n    in an international format such that it can be unambiguously understood.\n\n1.  **A phone number is dialable from anywhere**\n\n    Some numbers can only be dialed within the country. Some can only be dialled\n    from within a subset of countries, such as the +800 [Universal\n    International Freephone Numbers](https://en.wikipedia.org/wiki/Toll-free_telephone_number#Universal_International_Freephone_Service).\n    Some may be dialable only if the caller is a subscriber to a particular\n    telecom company.\n\n1.  **You can send a text message to any phone number**\n\n    A lot of people still only have a fixed-line telephone, which typically cannot\n    send or receive text messages.\n\n    **Tip:** Whenever possible, try to accommodate these users by calling them\n    with a voice message or voice prompts. Alternatively, if your service\n    requires sending text messages, verify that the number can receive text\n    messages after the user provides it.\n\n1.  **Only mobile phones can receive text messages**\n\n    Some service providers support sending and receiving text messages to fixed-line\n    numbers. There are also online services like Skype that can send and receive\n    text messages.\n\n1.  **There are only two ways to dial a phone number: domestically and from\n    overseas**\n\n    Some numbers may need different prefixes depending on: the carrier you are\n    using; what device you are dialling from/to; whether you are inside or\n    outside a particular geographical region.\n\n    Examples:\n    *   In Brazil, to dial numbers internally but across a certain geographical\n        boundary, a carrier code must be explicitly dialed to say which carrier\n        you will use to pay for the call.\n    *   In Nepal, the leading zero in national format is omitted depending on\n        whether the originating phone is mobile or fixed-line.\n    *   In New Zealand, you need to dial the area-code (e.g. 03) even if the\n        number is within the same area-code region as you are, unless it is\n        \"close\" (something approximating city/district boundaries), in which\n        case it shouldn’t be dialled.\n\n    **Tip:** Use formatForMobileDialling to get the number a user should\n    actually dial on their mobile phone.\n\n1.  **To make a number dialable, you only need to change the prefix**\n\n    In Argentina, to dial a mobile number domestically, the digits \"15\" need to\n    be inserted *after* the area code but *before* the local number, and the \"9\"\n    after the country code (54) needs to be removed. This transforms +54 9 2982\n    123456 into 02982 15 123456.\n\n1.  **No prefix of a valid phone number can be a valid phone number**\n\n    In some countries, it's possible to connect to a different endpoint by\n    dialing more digits after a number. So \"12345678\" may not reach the same\n    person as dialing \"123456\".\n\n1.  **An invalid number will not reach an endpoint**\n\n    In some countries, or on some phones, extra digits are thrown away. Hence,\n    1-800-MICROSOFT is an invalid number - but it still connects to Microsoft,\n    since any later digits are ignored. Numbers such as \"911\" can be reached by\n    dialling \"911 123\" in some countries: but not in others.\n\n    In other countries, invalid numbers may be \"fixed\" by a carrier, e.g.,\n    adding a mobile token if they know it is a mobile number, such that it\n    connects.\n\n1.  **All valid phone numbers follow the ITU specifications**\n\n    ITU-T specifies that a phone number cannot be longer than fifteen digits,\n    with one to three digits reserved for the country calling code, but valid\n    numbers in Germany have been assigned that are longer than this.\n\n1.  **All valid phone numbers belong to a country**\n\n    There are many \"country calling codes\" issued to non-geographical entities,\n    such as satellite services, and the \"800\" code for [Universal International\n    Freephone Numbers](https://en.wikipedia.org/wiki/Toll-free_telephone_number#Universal_International_Freephone_Service).\n\n1.  **Phone numbers contain only digits**\n\n    In Israel, certain advertising numbers start with a `*`. In New Zealand,\n    non-urgent traffic incidents can be reported by calling `*555` from a mobile\n    phone. Alpha characters may also be used in phone numbers, such as in\n    `1-800-Flowers`.\n\n1.  **Phone numbers are always written in ASCII**\n\n    In Egypt, it is common for phone numbers to be written in native digits.\n\n1.  **Phone numbers have only one prefix (area code or national destination\n    code) at a given time**\n\n    In the mid-90s in Iceland, phone numbers changed from 5 and 6 digits to 7\n    digits. The old system had regional prefixes, but the new one doesn't.\n    During the transition period, phone numbers could be reached by the old area\n    code or the new 7 digit number (a different prefix).  For example, a\n    Reykjavik phone number could be dialed with `nnnnn` and `55nnnnn` inside the\n    region, and `91-nnnnn` and `55nnnnn` from outside.\n\n    **Tip:** During transition periods, make sure that both forms of a number\n    are supported for look-up by phone number. If sending messages/dialling\n    affected numbers, both the new and old prefix may need to be tried.\n    Depending on the type of transition, you may need to contact affected\n    customers and ask them to update their number.\n\n1.  **A leading zero in numbers formatted for domestic usage can always be\n    discarded when dialing from abroad**\n\n    In some countries, people write the national prefix in brackets (typically\n    `(0)`) after the country calling code to indicate that it should be\n    discarded when dialing internationally. In Italy, since 1998, the prefix was\n    \"fixed\" to the phone numbers, so that `(01) 2345` became `012345` and should\n    be dialed (internationally) as `+39012345` (including the leading zero).\n\n    **Tip:** Use the library to parse and format numbers to handle this\n    correctly for every country.\n\n1.  **The country or area code of a phone number indicates the user's location,\n    place of residence, time-zone, or preferred language**\n\n    There are many reasons for someone to have a phone number issued in a state\n    or region other than where they reside or hold citizenship.\n\n    These include, but are not limited to:\n    *   *Moving within a country*: In countries with phone number portability,\n        you may retain your number when moving, even in some cases if it is a\n        fixed-line number and even if it has an area code (see\n        *[xkcd](https://xkcd.com/1129/)* for a US example.)\n    *   *Moving to another country*: Some people keep their mobile phones when\n        they move to another country.\n    *   *Geopolitical turmoil*: Sometimes countries change their borders, cease\n        to exist, or come into existence.\n    *   *Business, family, and friends*: A business may have many customers in a\n        neighbouring country, or a person may have many family and friends\n        there.\n    *   *Wanting cheaper rates*: VoIP is often cheaper than regular calls.\n        People traveling around Europe may get a SIM card from one country and\n        have a roaming plan.\n\n    Note that geographical area codes are assigned in some countries to mobile phones.\n\n    **Tip:** Programmers should not disallow users from signing up with a phone\n    number merely because it belongs to another country. Care should be taken\n    when calling methods such as `isValidNumberForRegion` that this is what's\n    actually intended. If you have a phone input widget, make sure you allow\n    numbers to be entered in international format (i.e., allow the `+` sign) so\n    people can sign up with an international contact number.\n\n1.  **The plus sign in front of phone numbers in international format is\n    optional, or can always be replaced by `00`**\n\n    The plus sign is part of the [E.164\n    format](https://en.wikipedia.org/wiki/E.164) for international telephone\n    numbers. It can be replaced with the [international call\n    prefix](https://en.wikipedia.org/wiki/List_of_international_call_prefixes)\n    when dialing internationally. Note that while `00` is a common international\n    call prefix, this actually varies by country.\n\n    In North America, which has a country calling code of `+1`, it is a common\n    error to drop the `+` in front of the number and write it like\n    `1-555-123-4567`. This is technically incorrect. To call this number from\n    Japan, where the international call prefix is `010`, one may dial either `+1\n    555 123 4567` or `010 1 555 123 4567`.\n\n1.  **Users will only store phone numbers in your product's phone number fields**\n\n    Some users use their contact lists to store things like birthdays or other\n    information. Unless a piece of user-supplied data has actually been verified\n    to be a phone number, it should be stored as-is as entered by the user.\n\n1.  **Phone numbers are numbers**\n\n    Never try to store phone numbers as an int or any other kind of numeric\n    data type. You can't do arithmetic on them, and while 007, 07 and 7 are the\n    same number they are not necessarily the same phone number - in some\n    countries a leading 0 is significant and forms part of the number itself\n    (see *A leading zero in numbers formatted for domestic usage can always be\n    discarded when dialing from abroad*). Moreover, a phone number may contain\n    other dialable characters (see *Phone numbers contain only digits*) or an\n    extension portion, dialled after waiting for a tone.\n\n    **Tip:** Use the library to parse and format numbers to handle this\n    correctly for every country.\n\n1.  **Phone numbering plans published by governments or telecoms represent\n    reality**\n\n    National numbering plans, such as those administered by the\n    [ITU](http://www.itu.int/oth/T0202.aspx?parent=T0202), represent the\n    intentions of the government or telecom. These may be published before,\n    during, or after the actual implementation of numbering plan changes in the\n    real world. The actual date on which a phone number range becomes active may\n    not always adhere to official announcements.\n\n1. **Nobody voice calls M2M sim numbers**\n\n    M2M sim cards are for machine-to-machine communication and are up to \n    15 characters long. Typically they are used for data and SMS messages, \n    however there are cases in which someone may voice-call an M2M sim. \n    One example is for in-home & roaming telecare/medical alarms,\n    in the event of an alarm activation then automated voice messages can be\n    played on the device via telephony APIs, or a human may call the device\n    directly (potentially also via a telephony API).\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 30.2509765625,
          "content": "# Frequently Asked Questions (FAQ)\n\n## <a href=\"#parsing\">Parsing</a>\n\n### <a href=\"#country_code_not_removed\">Why wasn't the country code removed when parsing?</a>\n\nIn some cases, the library cannot tell if the leading digits of a phone number\nare intended to be the country calling code, or the start of the national\nsignificant number.\n\nThis affects primarily German and Indonesian phone numbers, where country\ncalling code (49 and 62 respectively) is also a valid area code, and numbers of\nvariable lengths are valid. The leading digits will only be interpreted as a\ncountry calling code if the number is not already considered a possible number\nfor the region provided when parsing.\n\nIf you know that your numbers are always in the form &lt;country calling\ncode&gt;&lt;national significant number&gt;, it is safe to put a \"+\" in front to\nindicate this to the library.\n\n### <a href=\"#non_digits\">Why does the library treat some non-digit characters as digits?</a>\n\nWhen parsing, the library does its best to extract a phone number out of the\ngiven input string. It looks for the phone number in the provided text; it\ndoesn't aim to verify whether the string is *only* a phone number.\n\nIf the input looks like a vanity number to the library, `parse()` assumes this\nis intentional and converts alpha characters to digits. Please read the\ndocumentation for `PhoneNumber parse(String, String)` in\n[PhoneNumberUtil](http://github.com/google/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java)\nfor details. Also see `Iterable<PhoneNumberMatch> findNumbers(CharSequence,\nString)`.\n\nSome examples:\n\n*   `+1 412 535 abcd` is parsed the same as `+1 412 535 2223`.\n\n*   If someone mistypes and adds an extra alpha character in the *middle*,\n    then the library assumes this was a mistake and fixes it. E.g. the extra `c`\n    in `+1 412 535 c0000` is ignored, and this is parsed the same as `+1 412 535\n    0000`.\n\n*   If someone mistypes and *replaces* a digit in the middle with an alpha\n    character, and the remaining characters do not make up a valid number, this\n    alpha character is not converted and the resulting number is invalid, e.g.\n    with `+1 412 535 c000`.\n\n\n### <a href=\"#prefix_not_removed\">Why wasn't the national prefix removed when parsing?</a>\n\nUsually, when parsing, we remove a country's national or trunk prefix, so we can\nstore a normalized form of the number. This is usually, but not always, a\nleading zero. In some situations, we don't remove this, but instead keep it as\npart of the national number:\n\n1.  If a country does not use a national prefix, or does not use one anymore, we\n    don't remove a leading zero, since then if the user wanted to format the\n    number we would never know to prefix it with this leading zero.\n1.  If the leading zero is not a national prefix but is needed for dialling from\n    abroad (e.g. in the case of Italy) it is stored in the proto, not removed as\n    a national prefix.\n1.  If the number is too short to be a valid phone number in this country, we do\n    not remove the national prefix. For instance, although `0` is a national\n    prefix in Australia, we do not remove it from the number `000` which is the\n    emergency number; if we did we would not know that it needs a `0` re-added\n    when formatting since other short-codes do not, and we would be irreparably\n    changing the phone number.\n\n### <a href=\"#parsing_idds\">Why wasn't `00` parsed the same as `+`?</a>\n\n`00` is not an international prefix (IDD) in every region, so it's not\nequivalent to `+`.\n\nFor example, if [parsing `0015417540000` as if dialled from the\nUS](http://libphonenumber.appspot.com/phonenumberparser?number=0015417540000&country=US),\nthe national number is `15417540000` because `00` is not an international prefix\nin the US.\n\nAscension Island, however, does have `00` as an international prefix, so `00`\nthere works the same as `+` and [`0015417540000` as if dialled from\n`AC`](http://libphonenumber.appspot.com/phonenumberparser?number=0015417540000&country=AC)\ngives `5417540000` for the national number.\n\nYou can try [the demo](http://libphonenumber.appspot.com/) for more regions.\nAlso see `internationalPrefix` in\n[`resources/PhoneNumberMetadata.xml`](http://github.com/google/libphonenumber/blob/master/resources/PhoneNumberMetadata.xml).\n\n## <a href=\"#validation\">Validation and types of numbers</a>\n\n### <a href=\"#possible_vs_valid\">What is the difference between isPossibleNumber and isValidNumber?</a>\n\nTo understand the behavior of functions, please refer to the documentation in\nthe Javadoc/C++ header files. For example, see `isPossibleNumberWithReason` in\n[`PhoneNumberUtil`](https://github.com/google/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java).\n\n### <a href=\"#short_numbers\">Why does PhoneNumberUtil return false for valid short numbers?</a>\n\nShort numbers are out of scope of\n[`PhoneNumberUtil`](https://github.com/google/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java).\nFor short numbers, use\n[`ShortNumberInfo`](https://github.com/google/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/ShortNumberInfo.java).\n\n### <a href=\"#what_is_valid\">What does it mean for a phone number to be valid?</a>\n\nOur phone number library can tell that a number range is valid when there is\nsufficient official documentation, with some latency after this fact is brought\nto our attention via issue reports or notifications (see below for more\ninformation on where our metadata comes from). A valid number range is one from\nwhich numbers can be freely assigned by carriers to users.\n\nDo not rely on libphonenumber to determine whether numbers are currently\nassigned to a specific user and reachable. Some products (e.g.\n[Google 2-step verification](https://www.google.com/landing/2step/)) do\nthis with a verification step e.g. by sending an SMS or placing an automated\nphone call with a verification code). This is not technically feasible without\nsuch a verification step given the complicated international world we live in,\nwith varying standardization practices in different regions.\n\n#### <a href=\"#why_not_valid\">But my dialled number connected, so isn't it valid?</a>\n\nNot necessarily.\n\n*   In some countries extra digits at the end are ignored. For example, dialling\n    `1800 MICROSOFT` in the US connects to `+1 (800) MIC-ROSO`.\n*   During renumbering transitions, e.g. when all numbers are getting an extra\n    `9` added to the front, some operators will \"fix\" old numbers long after\n    they're no longer working for the majority.\n*   Numbers that are only locally-diallable e.g. a 7-digit number dialled in the\n    US are not valid, because without the rest of the number it is impossible\n    for the library to canonicalize this.\n\n### <a href=\"#isvalidnumberforregion\">When should I use isValidNumberForRegion?</a>\n\nRarely! Many people have phone numbers that do not belong to the country they\nlive in. This applies particularly to mobile numbers, but may also be true\nfor VoIP numbers etc. Note also that the regions your application supports may\nnot be the same as the regions we support. For example, the Channel Islands such\nas \"Jersey\" have their own region code - JE. If you allow these users to sign up\nas a British user (\"GB\"), their phone numbers will not be considered valid for\nthe region \"JE\".\n\nOne use-case where this method may be useful is if you want to see if a\n`FIXED_LINE` number for a business matches the country it is in, to try and spot\ndata errors.\n\n### <a href=\"#incorrect_formatting\">Some \"valid\" numbers are not formatting correctly.</a>\n\nThis could be due to number simplification. In order to keep the size of the XML\nfiles to a reasonable level, it's necessary in some regions (e.g. \"DE\" or \"AT\")\nto simplify number ranges. This results in a relatively small amount of false\npositive numbers (i.e. numbers that should be reported as invalid, but which are\nnow shown as valid).\n\nThis issue here is that (for simplicity) only the number validity information is\nsimplified; the formatting information in the XML (leading digits) retains its\nfull accuracy and so doesn't cover these numbers.\n\nNote that while it is probably possible to address this and expand the format\ninformation to cover these numbers as well, it's a rather non-trivial task\n(since the leading digits must not be over simplified so as to capture other\nvalid ranges with different formats). Note that this also applies to attributes\nlike \"national only\" or geocoding information.\n\n### <a href=\"#sms_sending\">What types of phone numbers can SMSs be sent to?</a>\n\nSMSs can be sent to `MOBILE` or `FIXED_LINE_OR_MOBILE` numbers. However,\nin some countries it is possible to configure other types, such as normal\nland-lines, to receive SMSs.\n\n### <a name=\"#fixed_line_or_mobile\">Why did I get `FIXED_LINE_OR_MOBILE` as the type of my phone number?</a>\n\nSome number ranges are explicitly defined as being for fixed-line or mobile\nphones. We even represent ranges defined as being \"Mostly land-line\" in this\nway.\n\n### <a name=\"#portability\">What is mobile number portability?</a>\n\nThe ability to keep your mobile phone number when changing carriers. To see whether a region supports mobile number portability use [isMobileNumberPortableRegion](https://github.com/google/libphonenumber/blob/58247207903f917839001bc62525a5b48a475b7e/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3524).\n\n### <a name=\"#carrier_changes\">Since it's possible to change the carrier for a phone number, how is the data kept up-to-date?</a>\n\nNot all regions support mobile number portability. For those that don't, we return the carrier when available. For those that do, we return the original carrier for the supplied number.\n\n### <a name=\"#m2m\">What about M2M (machine to machine) numbers?</a>\n\nlibphonenumber does not support M2M numbers in general, but only in one exception case where in Netherlands 097X M2M numbers are used as regular mobile phone numbers.\n\nThe reason for Libphonenumber to not provide M2M support is related to the lack of standardization and the need for a new Util API (not in radar for the time being).\n\nWe don't require that a number to be supported by the library has a human at the other end since we already accept premium rate services and they might go to an automated system instead. But to date we only accept ranges that a human might call or send an SMS to.\n\nM2M numbers would violate this assumption and we'd have to evaluate the consequences for existing APIs and clients if M2M numbers would be considered  valid by the library. Clients of libphonenumber expect mobile and fixed-line numbers to have certain affordances, such as: Reachable for voice calls (and for mobile also SMS) as well as assuming standard cost. This expectation is broken by the lack of M2M standardization today.\n\nMany people use this library for formatting the numbers of their contacts, for allowing people to sign up for services, for working out how to dial someone in a different country, for working out what kind of cost might be associated with a number in an advert, etc. We don't think the lack of M2M support hinders any of those use-case, but we might be wrong.\n\nAt the moment Libphonenumber can only support phone numbers that can be dialled by us, not by machines. If you found any humanly diallable M2M numbers that library is not supporting, please raise an [issue here](http://issuetracker.google.com/issues/new?component=192347) with all authoritative and specific documentation such as government sources, which have varied definitions.\n\n### <a href=\"#why_only_nl_m2m\">Why supporting only NL M2M numbers?; Are we sure all 097X numbers are MOBILE?</a>\n\nOfficial authority has [explicitly stated](https://www.acm.nl/en/publications/information-about-dutch-097-numbers-non-dutch-providers) that this range “should be made accessible, just like other, regular number series from the Netherlands” and that “you can set up a voice and SMS connection towards prefix +31-97 in the same way as you have done already with the +31-6 series.[...] you should enable your systems for voice telephony for the numbers\nin the +31-97 series”. This means, however, that there might be cases where the library would categorise a number as a valid mobile number, but in reality, the particular number is used as pure M2M, is not SMS or voice-enabled. There is not much we can do from our side about this, since we always follow official guidelines.\n\nTherefore, clients should be aware that there is possibility of false positives in NL MOBILE category. The library will continue to not support M2M numbers in general.\n\n### <a href=\"#operator_specific_numbers\">What about numbers that are only valid for a set of subscribers?</a>\n\nThere are some numbers that only work for the subscribers of certain operators\nfor special operator-specific services. These differ from carrierSpecific since\nthey're not shortcodes. We don't support these numbers due to their limited use\nscope, few examples (only the [area code 700](https://en.wikipedia.org/wiki/Area_code_700)\nin the US), and lack of authoritative evidence.\n\nUntil there are more examples with authoritative evidence and a proposal on how\nthe library should handle these numbers, we won't be able to support these\nsimilar to our prerequisites for supporting M2M.\n\nPlease see [this issue](https://issuetracker.google.com/issues/65238929) for more\ncontext, and file a new issue if you're able to provide more information than this.\n\n## <a name=\"#representation\">Representation</a>\n\n### <a name=\"#max_length\">What is the maximum and minimum length of a phone number?</a>\n\nWe support parsing and storing numbers from a minimum length of two digits to a\nmaximum length of 17 digits currently (excluding country calling code). The ITU\nstandard says the national significant number should not be longer than\nfifteen digits, but empirically this has been proven not to be followed by all\ncountries.\n\n## <a name=\"#formatting\">Formatting</a>\n\n### <a name=\"#language_specific_format\">Can / should we format phone numbers in a language-specific way?</a>\n\nNo, phone number formatting is country-specific and language-independent. E.g.\nformatting a US number in a French way (e.g. the way a France number is\nformatted) for a French user is undefined and wrong.\n\nIt is true that in some countries phone numbers are typically written using\nnative, not ASCII, digits; our phone number library supports parsing these but\ndoesn't support it at formatting time at the moment.\n\n### <a href=\"#changes_in_formatting\">When does formatting in a country change?</a>\n\nThe formatting within a country changes sparingly, but may be announced explicitly\nor noted implicitly in a national numbering plan update that introduces a new number\nlength, number type, or other significant change. This may include the grouping and\npunctuation used (e.g. parentheses versus hyphens).\n\nIn the event of lack of evidence and/or enforcement by a central government\nregulatory or telecommunication authority, we'll stick with the status quo\nsince the community prefers to bias towards stability and avoid flip-flopping\nbetween formats over time. If the silent majority becomes vocal to support\nnew formatting with authoritative evidence, then we'll collaborate with\ncommunity stakeholders on a transition.\n\nAn example of this is the shift from using parentheses to hyphens to separate\narea codes within North America. Hyphens may indicate that the area code is\noptional in local circumstances, but this is shifting to become mandatory\nin areas that have had more area code splits. However, the usage of\nparentheses persists and both methods are acceptable.\n\nSee [issue #1996](https://github.com/google/libphonenumber/issues/1996)\nfor some additional discussion.\n\n### <a name=\"#empty_format_result\">Why does formatNumberForMobileDialing return an empty string for my number?</a>\n\nIf we don't think we can guarantee that the number is diallable from the user's\nmobile phone, we won't return anything. This means that for numbers that we\ndon't think are internationally diallable, if the user is outside the country\nwe will return an empty string. Similarly, in Brazil a carrier code is essential\nfor dialling long-distance domestically. If none has been provided at parsing\ntime then we will return an empty string. If you get an empty string and are\nokay providing a number that may not be diallable, you can call another of our\nformatting numbers instead.\n\n## <a name=\"#metadata\">Metadata</a>\n\n### <a name=\"#metadata_definition\">What do we mean by \"metadata\"?</a>\n\nWe use the word \"metadata\" to refer to all information about phone numbering in\na particular country - what the country code, international and national\ndialling prefixes are, what carrier codes are operational, which phone numbers\nare possible or valid for a particular country, how to optimally format them,\nwhich prefixes represent a particular geographical area, etc.\n\n### <a name=\"#metadata_sources\">Where do we get information from to determine if a number range is valid?</a>\n\nIn theory, phone numbering plans are all supposed to be administered through the\nITU. Many countries' phone numbering plans may be found on the [ITU website](\nhttp://www.itu.int/oth/T0202.aspx?parent=T0202).\n\nWe receive automatic notifications when a new ITU plan has been filed, which may\nor may not be before it comes into effect.\n\nNot every country files their numbering plans with the ITU nor are the plans\nfiled with ITU always up to date. In some countries, the numbering plans are\ndirectly handled by a government authority, while in others, most of the work\nis done by telecom companies (the government's role being only to distribute\nranges at the prefix level, with the actual partitioning within the prefix done\nby the telecom).\n\nA large part of the data in `PhoneNumberMetadata.xml` comes from the ITU\ndocuments, but because they're sometimes insufficient, we also include data from\nother sources, including user bug reports, telecom company home pages and\ngovernment telecommunication authorities.\n\nThere is no RFC indicating where the data comes from, or what format they're in.\n\nWe'd love to consume machine-readable numbering plan data (assigned ranges,\ncarrier & geo mappings). If you can connect us with partners in the industry\nto achieve this, please do so. Thanks!\n\n### <a name=\"#mx_and_ar\">Why is this number from Argentina (AR) or Mexico (MX) not identified as the right number type?</a>\n\nCertain countries' mobile and/or fixed line ranges may overlap or too granular,\nwhich may make accurate identification impossible. Eg: Argentina and Mexico.\nWe tried incorporating such granular data (prefix of 7 digit for a 10 digit\nnumber). However, due to very high maintainance to keep the data fresh and\nalso leading to significant increase in metadata size, we are supporting\nranges/prefixes only at higher level. More details in [Argentina](https://issuetracker.google.com/issues/78443410) and\n[Mexico](https://issuetracker.google.com/issues/74517266) triaged issues.\n\n@Argentina,\nWhen calling a mobile line from a fixed line in Argentina, you need\nto dial 15 before the subscriber number, or 9 if you're calling from another\ncountry. Without these additional digits, your call may not connect at all!\n\nWe rely on these additional and explicit context such as a mobile prefix to\ncorrectly identify the phone number type (rather than returning [`FIXED_LINE_OR_MOBILE`](#fixed_line_or_mobile)\nin ambiguous cases).\n\nMoreover, Argentina has different possible lengths for area codes and\nsubscriber numbers depending on the city, which further complicate matters (e.g.\nBuenos Aires is 11 followed by eight digits, but Río Gallegos is 2966 followed\nby six digits).\n\nDespite all the aforementioned complexity, users may not provide their phone\nnumber with all the additional context unless explicitly asked. For instance,\nsince SMS messages can be sent in Argentina from a mobile phone without a\nprefix, the user may not supply the mobile prefix.\n\nWe are aware of these issues but fixing them is not trivial. In the meantime, we\nrecommend the following workarounds to support affected users.\n\n*   If you know an Argentina number is mobile (e.g. if you're doing signups with\n    device numbers or will send them an SMS verification code), follow these steps:\n    *   For raw input strings:\n        *   Parse a raw input string into a `PhoneNumber` and follow the next\n            instructions for `PhoneNumber` objects.\n    *   For `PhoneNumber` objects:\n        *   Check that the library validates a `PhoneNumber` as mobile, by\n            calling `getNumberType`;\n        *   If not, format it in national format and prepend a `9`\n        *   Parse the modified string and if the library validates it as mobile,\n            accept the resulting `PhoneNumber` as canonical.\n*   Consider prompting for type (mobile or not) in the phone number input UI.\n\nIMPORTANT: Do not add a leading 9 for displaying or formatting the numbers.\nDepending on the use case, other tokens may be needed. The library will do the\nright thing if the phone number object is as intended.\n\n@Mexico,\nMexico used to have such additional prefixes (1, 02, 045, ...) for dialling\nmobile numbers internationally, fixed-line to mobile nationally.. As these\ndialling patterns were deprecated, we removed them but still maintain mobile and\nfixed-line ranges at higher level, returning type as [`FIXED_LINE_OR_MOBILE`](#fixed_line_or_mobile)\n\n### <a name=\"#unsupported_regions\">Why are Bouvet Island (BV), Pitcairn Island (PN), Antarctica (AQ) etc. not supported?</a>\n\nWe only support a country if:\n\n*   **The country has a single country calling code.** For instance, Kosovo (XK)\n    has been using three different country codes until 2017 - those of Serbia,\n    Monaco and Slovenia. The relevant numbers will be marked as valid, but as\n    belonging to Serbia, Monaco or Slovenia respectively. When Kosovo starts\n    using its own country calling code of 383 it will be added to the metadata\n    by itself. Similarly, Antarctica doesn't use its assigned country calling\n    code of 672 - instead the bases belonging to different countries have\n    different solutions. For example, Scott Base, belonging to New Zealand, has\n    an area code that is part of the New Zealand phone number plan, and we\n    support those numbers as valid numbers for NZ.\n*   **The country still exists.** For example, Yugoslavia (YU), Serbia and\n    Montenegro (CS) and Netherlands Antilles (AN) have been dissolved and no\n    longer exist as political entities so we do not support them.\n*   **The country has some phone numbers in use that can be ascribed to it.**\n    For instance, Pitcairn Island has only around thirty inhabitants and they\n    use satellite phones, so there is no numbering plan for Pitcairn Island.\n    Similarly, Bouvet Island is an uninhabited Antarctic volcanic island with no\n    telephone country code and no telephone connection, so we will not support\n    it.\n*   **It has an assigned region code.** For instance, previously Kosovo did not\n    have a region code assigned to it, so we could not support it until it was\n    assigned XK by [CLDR](http://cldr.unicode.org/).\n\nWe support non-geographical entities that have been assigned country calling\ncodes by the ITU where a numbering plan is available, e.g. \"800\" (International\nFreephone Service) and 870 (Inmarsat SNAC). However we do not support country\ncalling codes that are only \"reserved\", or that no data is available for (namely\n388 - listed as \"Group of countries, shared code\" and 991 - listed as \"Trial of\na proposed new international telecommunication public correspondence service,\nshared code\".)\n\n### <a name=\"#indonesia_tollfree\">Why are Indonesian toll-free numbers beginning with \"00x 803\" not supported?</a>\n\nAlthough some numbers beginning with \"001 803\" or \"007 803\" do work in Indonesia\nto reach toll-free endpoints, these numbers are hard to support because they\noverlap with the international dialling prefix for Indonesia (IDD). It seems\nthat since 803 is unassigned and not a valid country code, some local\ntel-companies in Indonesia hijack 803 and redirect it to their own services.\n\nWe have also found evidence that reaching some \"00x 803\" numbers cost local or\nnational tariff, rather than the call being toll-free.\n\nThese numbers are not diallable from any other country using their IDD,\nand it's unclear whether all carriers in Indonesia support them. If we ever\nsupported them, they would have to be added to the `noInternationalDialling`\nsection, and it is likely some changes in the parsing code would have to be\nmade to interpret the \"00x\" as something other than an IDD: this could have\nundesirable side-effects when parsing other numbers.\n\n## <a name=\"#misc\">Misc</a>\n\n### <a name=\"#reduced_metadata\">What is the metadatalite.js/METADATA_LITE option?</a>\n\nFor JavaScript, Java and C++ there is the option to use a stripped-down version\nof the metadata. Currently this only removes the example number metadata, so the\nsavings are not a lot, but we may revisit this.\n\n*Impact:*\n\n-   `getExampleNumber`, `getInvalidExampleNumber`, `getExampleNumberForType`,\n     `getExampleNumberForNonGeoEntity` will return `null`\n-   Binary size (or download size for JS) will be slightly smaller\n\n*JS:*\nSimply include metadatalite.js instead of metadata.js in your project.\n\n*C++:*\nSet the compiler flag `USE_METADATA_LITE` to `ON` using ccmake or similar.\n\n*Java:*\nThe metadata binary files can be generated using the ant build rules\n`build-phone-metadata` and `build-short-metadata` with `lite-build` set to\n`true`. This can be set in the [build\nfile](https://github.com/google/libphonenumber/blob/master/java/build.xml)\nitself.\n\n### <a name=\"#maven\">Which versions of the Maven jars should I use?</a>\n\nWhen possible, use the [latest\nversion](https://github.com/google/libphonenumber/releases) of\nlibphonenumber.\n\nFor the other Maven artifacts, to find the version corresponding to a given\nversion of libphonenumber, follow these steps:\n\n*   Go to the versioned GitHub tag, e.g.\n    https://github.com/google/libphonenumber/find/v8.3.3\n*   Type `pom.xml`. This will surface all the `pom.xml` files as they were\n    released at the chosen tag.\n*   Find the version you care about in the corresponding `pom.xml` file. Look\n    for `<version>` in the top-level `project` element. For example, to find the\n    version of the carrier jar corresponding to libphonenumber 8.3.3, open\n    `java/carrier/pom.xml` at v8.3.3's search results. This is `1.56`.\n*   If you depend on the carrier or geocoder jar, you also need to depend on\n        the prefixmapper jar.\n\n### <a name=\"#android\">How do I load libphonenumber resources in my Android app?</a>\n\n#### System considerations\n\ntl;dr: Do not call `PhoneNumberUtil` API on the main thread.\n\nIf you get surprising exceptions involving metadata loading, e.g. \"missing\nmetadata\" exceptions when the metadata exists, then it's probably because you're\nloading resources on the main thread.\n\nPlease ensure that you don't call `PhoneNumberUtil` API on the main thread. Not\nloading resources in the main thread is the suggested best practice at the\n[Android developer\nguide](http://developer.android.com/guide/components/processes-and-threads.html),\nand will prevent the issue reported in\n[#265](https://github.com/google/libphonenumber/issues/265),\n[#528](https://github.com/google/libphonenumber/issues/528), and\n[#819](https://github.com/google/libphonenumber/issues/819).\n\n#### Optimize loads\n\nYou can manage your own resources by supplying your own\n[`MetadataLoader`](http://github.com/google/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/MetadataLoader.java)\nimplementation to the `PhoneNumberUtil` instance. It is thus possible for your\napp to load the resources as Android assets, while libphonenumber loads Java\nresources by default. The result is that the files are read as native Android assets\nand so optimized for speed.\n\nHere's the sample code for how to do it:\n\n```\nPhoneNumberUtil util = PhoneNumberUtil.createInstance(new MetadataLoader() {\n  @Override\n  public InputStream loadMetadata(String metadataFileName) {\n    return Application.getContext().getAssets().open(\"some/asset/path\" + metadataFileName);\n  }\n});\n```\n\nYou also need to copy the binary metadata files into your app's asset directory, and\nautomate updating them from upstream. To avoid net increase of app size, remove them\nfrom libphonenumber.\n\n### <a name=\"#windows\">What about Windows?</a>\n\nThe libphonenumber team's support of the C++ library on Windows is primarily to\nsupport Chromium's build environment, and we depend on the community to support\nother Windows build environments / build chains. We list here some known issues\nthat would benefit from open-source collaboration. If you can contribute a PR\nor review and test out someone else's PR, please chime in on these links, or\nemail the [discussion\ngroup](https://groups.google.com/group/libphonenumber-discuss):\n\n*   [#1000](https://github.com/google/libphonenumber/issues/1000) to provide\n    a Windows DLL.\n*   [#1010](https://github.com/google/libphonenumber/issues/1010) to require\n    Visual Studio 2015 update 2 or later on Windows\n*   PR [#1090](https://github.com/google/libphonenumber/pull/1090) /\n    [#824](https://github.com/google/libphonenumber/issues/824) to \"Replace\n    POSIX directory operations by Boost Filesystem\"\n*   [#1555](https://github.com/google/libphonenumber/issues/1555) to allow\n    Windows to build cpp library with pthreads for multi-threading\n\n### <a name=\"#remove_example_number\">How to remove a specific example number</a>\n\nWe supply example numbers as part of the library API. While we aim to have numbers\nthat are either explicitly allocated by the country as a test number, or look\nfictitious (e.g. 1234567) we also need these numbers to validate correctly.\nThis means we sometimes have numbers that do connect to a real person.\n\nIf we by chance have actually listed your real number and would like it removed,\nplease report this through Google's new [Issue Tracker](http://issuetracker.google.com/issues/new?component=192347).\nOnly our internal team will have access to your identity (whereas GitHub usernames are public).\n\n### <a name=\"#long_numbers_in_js\">Why can the smallest digits of parsed numbers that are very long be incorrect when parsing in Javascript?</a>\n\nEg: National number of 900184080594493**87**, ```region: JP``` is parsed as\n900184080594493**90**. Reason: When the provided number is more than the max\nlimit of JavaScript ```Number``` type - 2^53, JS starts rounding the value.\nlibphonenumber cannot do anything better here. More details mentioned [in this issue](https://issuetracker.google.com/issues/198423548).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.9345703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE.Chromium",
          "type": "blob",
          "size": 1.8740234375,
          "content": "\nThis project contains a small number of files derived from the Chromium\nproject.  They contain copyright notices such as this:\n\n// Copyright (c) 2010 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nHere is the full text of the LICENSE file from the Chromium project:\n\n// Copyright 2014 The Chromium Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.373046875,
          "content": "<p align=\"right\">\n<img src=\"https://travis-ci.org/google/libphonenumber.svg?branch=master\">\n</p>\n\n# What is it?\n\nGoogle's common Java, C++ and JavaScript library for parsing, formatting, and\nvalidating international phone numbers. The Java version is optimized for\nrunning on smartphones, and is used by the Android framework since 4.0 (Ice\nCream Sandwich).\n\n# Quick links\n\n*   **Reporting an issue?** Want to send a pull request? See the [contribution\n    guidelines](CONTRIBUTING.md)\n*   Check the [frequently asked questions](FAQ.md)\n*   Fun! [Falsehoods Programmers Believe About Phone Numbers](FALSEHOODS.md)\n*   Look for\n    [`README`s](https://github.com/google/libphonenumber/find/master) in\n    directories relevant to the code you're interested in.\n*   For contributors and porters: [How to run the Java demo](run-java-demo.md)\n*   For porters: [How to make metadata changes](making-metadata-changes.md)\n\n# Highlights of functionality\n\n*   Parsing, formatting, and validating phone numbers for all countries/regions\n    of the world.\n*   `getNumberType` - gets the type of the number based on the number itself;\n    able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared\n    Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).\n*   `isNumberMatch` - gets a confidence level on whether two numbers could be\n    the same.\n*   `getExampleNumber` and `getExampleNumberForType` - provide valid example\n    numbers for all countries/regions, with the option of specifying which type\n    of example phone number is needed.\n*   `isPossibleNumber` - quickly guesses whether a number is a possible\n    phone number by using only the length information, much faster than a full\n    validation.\n*   `isValidNumber` - full validation of a phone number for a region using\n    length and prefix information.\n*   `AsYouTypeFormatter` - formats phone numbers on-the-fly when users enter\n    each digit.\n*   `findNumbers` - finds numbers in text.\n*   `PhoneNumberOfflineGeocoder` - provides geographical information related to\n    a phone number.\n*   `PhoneNumberToCarrierMapper` - provides carrier information related to a\n    phone number.\n*   `PhoneNumberToTimeZonesMapper` - provides timezone information related to a\n    phone number.\n\n# Demo\n\n## Java\n\nThe [Java demo](https://libphonenumber.appspot.com/) is updated with a slight\ndelay after the GitHub release.\n\nLast demo update: v8.13.52.\n\nNote: Even though the library (main branch/[maven release](https://repo1.maven.org/maven2/com/googlecode/libphonenumber/libphonenumber/8.12.56/))\nis at v8.12.57, because of some deployment issues, we were unable to update the\nJava demo with the new binary version. We will soon fix this. Meantime, please\nuse JS demo.\n\nIf this number is lower than the [latest release's version\nnumber](https://github.com/google/libphonenumber/releases), we are between\nreleases and the demo may be at either version.\n\n### Demo App\n\nThere is a demo Android App called [E.164 Formatter](java/demoapp) in this\nrepository. The purpose of this App is to show an example of how the library can\nbe used in a real-life situation, in this case specifically in an Android App\nusing Java.\n\n## JavaScript\n\nThe [JavaScript\ndemo](https://htmlpreview.github.io/?https://github.com/google/libphonenumber/blob/master/javascript/i18n/phonenumbers/demo-compiled.html)\nmay be run at various tags; this link will take you to `master`.\n\n# Java code\n\nTo include the Java code in your application, either integrate with Maven (see\n[wiki](https://github.com/google/libphonenumber/wiki)) or download the latest\njars from the [Maven\nrepository](https://repo1.maven.org/maven2/com/googlecode/libphonenumber/libphonenumber/).\n\n# Javadoc\n\nJavadoc is automatically updated to reflect the latest release at\nhttps://javadoc.io/doc/com.googlecode.libphonenumber/libphonenumber/.\n\n# Versioning and Announcements\n\nWe generally choose the release number following these guidelines.\n\nIf any of the changes pushed to master since the last release are incompatible\nwith the intent / specification of an existing libphonenumber API or may cause\nlibphonenumber (Java, C++, or JS) clients to have to change their code to keep\nbuilding, we publish a major release. For example, if the last release were\n7.7.3, the new one would be 8.0.0.\n\nIf any of those changes *enable* clients to update their code to take advantage\nof new functionality, and if clients would have to roll-back these changes in\nthe event that the release was marked as \"bad\", we publish a minor release. For\nexample, we'd go from 7.7.3 to 7.8.0.\n\nOtherwise, including when a release contains only\n[metadata](FAQ.md#metadata_definition) changes, we publish a sub-minor release,\ne.g. 7.7.3 to 7.7.4.\n\nSometimes we make internal changes to the code or metadata that, while not\naffecting compatibility for clients, could affect compatibility for **porters**\nof the library. For such changes we make announcements to\n[libphonenumber-discuss](\nhttps://groups.google.com/forum/#!forum/libphonenumber-discuss). Such changes\nare not reflected in the version number, and we would publish a sub-minor\nrelease if there were no other changes.\n\nWant to get notified of new releases? During most of the year, excepting\nholidays and extenuating circumstances, we release fortnightly. We update\n[release tags](https://github.com/google/libphonenumber/releases) and\ndocument detailed [release notes](\nhttps://github.com/google/libphonenumber/blob/master/release_notes.txt).\nWe also send an announcement to [libphonenumber-discuss](\nhttps://groups.google.com/forum/#!forum/libphonenumber-discuss) for every\nrelease.\n\n# Quick Examples\n\nLet's say you have a string representing a phone number from Switzerland. This\nis how you parse/normalize it into a `PhoneNumber` object:\n\n```java\nString swissNumberStr = \"044 668 18 00\";\nPhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();\ntry {\n  PhoneNumber swissNumberProto = phoneUtil.parse(swissNumberStr, \"CH\");\n} catch (NumberParseException e) {\n  System.err.println(\"NumberParseException was thrown: \" + e.toString());\n}\n```\n\nAt this point, `swissNumberProto` contains:\n\n```json\n{\n  \"country_code\": 41,\n  \"national_number\": 446681800\n}\n```\n\n`PhoneNumber` is a class that was originally auto-generated from\n`phonenumber.proto` with necessary modifications for efficiency. For details on\nthe meaning of each field, refer to `resources/phonenumber.proto`.\n\nNow let us validate whether the number is valid:\n\n```java\nboolean isValid = phoneUtil.isValidNumber(swissNumberProto); // returns true\n```\n\nThere are a few formats supported by the formatting method, as illustrated\nbelow:\n\n```java\n// Produces \"+41 44 668 18 00\"\nSystem.out.println(phoneUtil.format(swissNumberProto, PhoneNumberFormat.INTERNATIONAL));\n// Produces \"044 668 18 00\"\nSystem.out.println(phoneUtil.format(swissNumberProto, PhoneNumberFormat.NATIONAL));\n// Produces \"+41446681800\"\nSystem.out.println(phoneUtil.format(swissNumberProto, PhoneNumberFormat.E164));\n```\n\nYou could also choose to format the number in the way it is dialed from another\ncountry:\n\n```java\n// Produces \"011 41 44 668 1800\", the number when it is dialed in the United States.\nSystem.out.println(phoneUtil.formatOutOfCountryCallingNumber(swissNumberProto, \"US\"));\n```\n\n## Formatting Phone Numbers 'as you type'\n\n```java\nPhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();\nAsYouTypeFormatter formatter = phoneUtil.getAsYouTypeFormatter(\"US\");\nSystem.out.println(formatter.inputDigit('6'));  // Outputs \"6\"\n...  // Input more digits\nSystem.out.println(formatter.inputDigit('3'));  // Now outputs \"650 253\"\n```\n\n## Geocoding Phone Numbers\n\n```java\nPhoneNumberOfflineGeocoder geocoder = PhoneNumberOfflineGeocoder.getInstance();\n// Outputs \"Zurich\"\nSystem.out.println(geocoder.getDescriptionForNumber(swissNumberProto, Locale.ENGLISH));\n// Outputs \"Zürich\"\nSystem.out.println(geocoder.getDescriptionForNumber(swissNumberProto, Locale.GERMAN));\n// Outputs \"Zurigo\"\nSystem.out.println(geocoder.getDescriptionForNumber(swissNumberProto, Locale.ITALIAN));\n```\n\n## Mapping Phone Numbers to original carriers\n\nCaveat: We do not provide data about the current carrier of a phone number, only\nthe original carrier who is assigned the corresponding range. Read about [number\nportability](FAQ.md#what-is-mobile-number-portability).\n\n```java\nPhoneNumber swissMobileNumber =\n    new PhoneNumber().setCountryCode(41).setNationalNumber(798765432L);\nPhoneNumberToCarrierMapper carrierMapper = PhoneNumberToCarrierMapper.getInstance();\n// Outputs \"Swisscom\"\nSystem.out.println(carrierMapper.getNameForNumber(swissMobileNumber, Locale.ENGLISH));\n```\n\nMore examples on how to use the library can be found in the [unit\ntests](https://github.com/google/libphonenumber/tree/master/java/libphonenumber/test/com/google/i18n/phonenumbers).\n\n# Third-party Ports\n\nSeveral third-party ports of the phone number library are known to us. We share\nthem here in case they're useful for developers.\n\nHowever, we emphasize that these ports are by developers outside the\nlibphonenumber project. We do not evaluate their quality or influence their\nmaintenance processes.\n\n*   C#: https://github.com/twcclegg/libphonenumber-csharp\n*   Gleam: https://github.com/massivefermion/phony\n*   Go: https://github.com/nyaruka/phonenumbers\n*   Objective-c: https://github.com/iziz/libPhoneNumber-iOS\n*   Swift: https://github.com/marmelroy/PhoneNumberKit\n*   PHP: https://github.com/giggsey/libphonenumber-for-php\n*   PostgreSQL in-database types: https://github.com/blm768/pg-libphonenumber\n*   Python: https://github.com/daviddrysdale/python-phonenumbers\n*   Ruby: https://github.com/ianks/mini_phone\n*   Ruby: https://github.com/daddyz/phonelib\n*   Ruby: https://github.com/mobi/telephone_number\n*   Rust: https://github.com/1aim/rust-phonenumber\n*   Erlang: https://github.com/marinakr/libphonenumber_erlang\n*   Clojure: https://github.com/randomseed-io/phone-number\n*   R: https://github.com/socialresearchcentre/dialr/\n*   Elixir: https://github.com/socialpaymentsbv/ex_phone_number\n*   Salesforce: https://appexchange.salesforce.com/appxListingDetail?listingId=a0N3A00000G12oJUAR\n*   Dart: https://github.com/superakabo/dlibphonenumber\n  \nAlternatives to our own versions:\n\n*   Android-optimized: Our Java version loads the metadata from\n    `Class#getResourcesAsStream` and asks that Android apps follow the Android\n    loading best practices of repackaging the metadata and loading from\n    `AssetManager#open()` themselves\n    ([FAQ](https://github.com/google/libphonenumber/blob/master/FAQ.md#optimize-loads)).\n    If you don't want to do this, check out the port at\n    https://github.com/MichaelRocks/libphonenumber-android, which does repackage\n    the metadata and use `AssetManager#open()`, and may be depended on without\n    needing those specific loading optimizations from clients. You should also check\n    out the port at https://github.com/lionscribe/libphonenumber-android which also\n    supports geocoding, and only requires a one line code change.\n*   Javascript: If you don't want to use our version, which depends on Closure,\n    there are several other options, including\n    https://github.com/catamphetamine/libphonenumber-js - a stripped-down\n    rewrite, about 110 KB in size - and\n    https://github.com/seegno/google-libphonenumber - a browserify-compatible\n    wrapper around the original unmodified library installable via npm, which\n    packs the Google Closure library, about 420 KB in size.\n\nTools based on libphonenumber metadata:\n\n*   Scala: https://github.com/mr-tolmach/raf - library for generating valid phone numbers in the E.164 format\n"
        },
        {
          "name": "codereview.settings",
          "type": "blob",
          "size": 0.1845703125,
          "content": "# This file is used by gcl to get repository specific information.\nCODE_REVIEW_SERVER: codereview.appspot.com\nTRY_ON_UPLOAD: False\nVIEW_VC: https://github.com/google/libphonenumber/commit/\n"
        },
        {
          "name": "cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "javascript",
          "type": "tree",
          "content": null
        },
        {
          "name": "making-metadata-changes.md",
          "type": "blob",
          "size": 2.4033203125,
          "content": "# How to make metadata changes\n\n## Introduction\n\nThese steps outline how to edit the metadata for the phone number library to fix\nproblems with validation or formatting.\n\nNote that we cannot accept pull requests to modify metadata directly, but you may\nuse these guidelines to create changes in your own fork until we fix issues\nupstream. Please [file a corresponding issue](CONTRIBUTING.md#checklist-before-filing-an-issue)\nwith us.\n\nYou can read more about the pull request [contribution guidelines](CONTRIBUTING.md#pull-requests).\n\n## Details\n\n### Edit the data\n\nEdit the appropriate files:\n\n*   `resources/PhoneNumberMetadata.xml` for normal validation / formatting\n    issues\n*   `resources/ShortNumberMetadata.xml` for short-code data\n*   `resources/PhoneNumberAlternateFormats.xml` for alternate patterns for phone\n    number matching\n*   `resources/geocoding/xx` for geocoding data (where `xx` is the language code\n    you wish to edit)\n*   `resources/carrier/xx` for carrier mapping data\n\nNote:\n\n*   To track provenance for your own maintenance needs, consider including\n    sources for data where appropriate\n*   If multiple countries share a country calling code, check all of them are\n    updated. Formatting rules will only be listed by the country with\n    `mainCountryForCode` set to `true`.\n*   Details on each field in the xml file can be found at the top of the file\n    and in `resources/phonemetadata.proto`.\n\n### Generate data files\n\n#### Java\n\n```\nant -f java/build.xml junit\n```\n\nThis will generate new binary files under\n`java/libphonenumber/src/com/google/i18n/phonenumbers/data`,\n`geocoder/src/com/google/i18n/phonenumbers/carrier/data`, and\n`geocoder/src/com/google/i18n/phonenumbers/geocoding/data`.\n\n#### Javascript\n\n```\nant -f java/build.xml build-js-metadata\n```\n\nThis will generate new js metadata files; you should also now compile the\nchanges, as per the instructions in `javascript/README`.\n\n#### C++\n\nSee the [C++\nREADME](http://github.com/google/libphonenumber/blob/master/cpp/README)\ninstructions for how to build and run C++. You should build it with\n`USE_LITE_METADATA` set to `ON` as well as `OFF`, which will generate both a\n`metadata.cc` and a `metadata_lite.cc` file.\n\n### Test changes\n\n#### Java\n\nBuild a jar:\n\n```\nant -f java/build.xml jar\n```\n\nThen [run your own demo](run-java-demo.md) and test your changes are as\nexpected.\n\n#### Javascript\n\nSee `javascript/README` for how to run the demo page in your browser.\n"
        },
        {
          "name": "metadata",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrator",
          "type": "tree",
          "content": null
        },
        {
          "name": "pending_code_changes.txt",
          "type": "blob",
          "size": 0.212890625,
          "content": "Code changes:\n - Fixed a bug where the extension was appended twice in formatOutOfCountryKeepingAlphaChars in the Java version and updated FormatOutOfCountryKeepingAlphaChars in the C++ version to format the extension."
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 0.8466796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.google.i18n.phonenumbers</groupId>\n  <artifactId>libphonenumber-build-parent</artifactId>\n  <packaging>pom</packaging>\n  <version>1.0-SNAPSHOT</version>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <licenses>\n    <license>\n      <name>Apache 2</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <comments>Copyright (C) 2011 The Libphonenumber Authors</comments>\n    </license>\n  </licenses>\n\n  <modules>\n    <module>tools/java</module>\n    <module>java</module>\n  </modules>\n\n</project>\n"
        },
        {
          "name": "release_notes.txt",
          "type": "blob",
          "size": 150.28125,
          "content": "Dec 11, 2024: v8.13.52\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CA, DE, DK, IL, JP, KY, MN, UG, US, UZ\n - Updated short number metadata for region code(s): DK\n - Updated geocoding data for country calling code(s): 86 (en, zh), 1345 (en)\n - Updated carrier data for country calling code(s):\n   45 (en), 229 (en), 972 (en), 976 (en)\n - Updated / refreshed time zone meta data.\n\nNov 28, 2024: v8.13.51\nCode changes:\n - Reverted the std:: qualifier to string throughout phonenumberutil.\n - Reverted  absl::string_view to std::string parameters.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   870, CA, GE, GF, GU, HK, HN, MQ, PM, RE, SN, SY, TG, US, YT\n - New geocoding data for country calling code(s): 1327 (en), 1942 (en)\n - Updated carrier data for country calling code(s):\n   27 (en), 34 (en), 81 (en), 221 (en), 228 (en), 262 (en), 351 (en), 508 (en),\n   594 (en), 596 (en), 852 (en, zh), 963 (en), 995 (en), 1671 (en)\n - Updated / refreshed time zone meta data.\n\nNov 13, 2024: v8.13.50\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, BJ, BL, FI, GE, GP, HR, MF, PL, SG\n - Updated short number metadata for region code(s): BJ, FI\n - Updated carrier data for country calling code(s):\n   48 (en), 65 (en), 229 (en), 385 (en), 590 (en), 995 (en)\n\nOct 30, 2024: v8.13.49\nMetadata changes:\n - Updated phone metadata for region code(s): CO, EE, MG, MQ, MV, PM, SG, TJ\n - Updated short number metadata for region code(s): MQ, PM\n - Updated geocoding data for country calling code(s): 960 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 372 (en), 596 (en), 992 (en)\n\nOct 16, 2024: v8.13.48\nMetadata changes:\n - Updated phone metadata for region code(s): DE, SG, UG, WF\n - Updated carrier data for country calling code(s): 47 (en)\n\nOct 01, 2024: v8.13.47\nMetadata changes:\n - Updated phone metadata for region code(s): GE, HK, MG, MM, NO, SJ, UA, UG\n - Updated short number metadata for region code(s): NO, SJ\n - Updated geocoding data for country calling code(s):\n   95 (en), 261 (en), 380 (en, uk)\n - Updated carrier data for country calling code(s):\n   256 (en), 380 (en), 852 (en, zh), 995 (en)\n\nSep 19, 2024: v8.13.46\nCode changes:\n - Added the std:: qualifier to string throughout phonenumberutil.\n - Changed several std::string parameters to absl::string_view.\nMetadata changes:\n - Updated phone metadata for region code(s): CO, HK, PA, PE, SG, SN, UZ\n - Updated short number metadata for region code(s): UY\n - Updated geocoding data for country calling code(s): 51 (en)\n - Updated carrier data for country calling code(s):\n   44 (en), 57 (en), 65 (en), 221 (en), 852 (en, zh), 972 (en), 998 (en)\n\nSep 04, 2024: v8.13.45\nMetadata changes:\n - Updated phone metadata for region code(s): AR, CZ, ET, ID, IL, MX, NZ\n - Updated geocoding data for country calling code(s):\n   52 (en), 54 (en), 251 (en), 1807 (en)\n - Updated carrier data for country calling code(s):\n   47 (en), 420 (en), 972 (en)\n - Updated / refreshed time zone meta data.\n\nAug 22, 2024: v8.13.44\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BF, CD, GM, NG, RO, SG, SN, TJ, UY\n - Updated short number metadata for region code(s): CA\n - Updated geocoding data for country calling code(s): 234 (en), 243 (fr)\n - Updated carrier data for country calling code(s):\n   32 (en), 40 (en), 65 (en), 220 (en), 226 (en), 673 (en), 992 (en)\n\nAug 07, 2024: v8.13.43\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AO, BD, BJ, CM, CN, DE, DZ, EG, FR, HK, IL, ZA\n - Updated carrier data for country calling code(s):\n   27 (en), 33 (en), 34 (en), 41 (en), 237 (en), 244 (en), 852 (en, zh)\n\nJul 24, 2024: v8.13.42\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BO, GY, KR, LA, MY, SC, SG, TJ, VI\n - Updated short number metadata for region code(s): AT, DE\n - Updated geocoding data for country calling code(s): 86 (en, zh)\n - Updated carrier data for country calling code(s):\n   61 (en), 65 (en), 237 (en), 591 (en), 592 (en), 992 (en)\n\nJul 11, 2024: v8.13.41\nMetadata changes:\n - Updated phone metadata for region code(s): CN, IL\n - Updated short number metadata for region code(s): CN\n - Updated carrier data for country calling code(s): 972 (en)\n - Updated / refreshed time zone meta data.\n\nJun 27, 2024: v8.13.40\nMetadata changes:\n - Updated phone metadata for region code(s): FI, GE, GY, HK, IL, MU, MX, TD\n - Updated short number metadata for region code(s): FI\n - Updated geocoding data for country calling code(s): 52 (en, es)\n - Updated carrier data for country calling code(s):\n   230 (en), 235 (en), 592 (en), 852 (en, zh), 880 (en), 995 (en)\n - Updated / refreshed time zone meta data.\n\nJun 13, 2024: v8.13.39\nMetadata changes:\n - Updated phone metadata for region code(s): KE, US\n - Updated short number metadata for region code(s): FR\n - Updated geocoding data for country calling code(s): 1305 (en)\n - Updated carrier data for country calling code(s): 61 (en)\n\nMay 29, 2024: v8.13.38\nMetadata changes:\n - Updated phone metadata for region code(s): AO, GB, GY, HK, MX\n - Updated carrier data for country calling code(s):\n   40 (en), 44 (en), 46 (en), 244 (en), 592 (en), 691 (en)\n - Updated / refreshed time zone meta data.\n\nMay 15, 2024: v8.13.37\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BD, CC, CX, GA, GY, NE, RE, RO, UZ\n - Updated geocoding data for country calling code(s): 49 (en)\n - Updated carrier data for country calling code(s):\n   40 (en), 44 (en), 61 (en), 592 (en)\n\nMay 02, 2024: v8.13.36\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, BW, CH, GA, GE, GY, MU, SB, SG, TJ, VI\n - Updated geocoding data for country calling code(s): 1340 (en)\n - Updated carrier data for country calling code(s):\n   41 (en), 65 (en), 592 (en), 677 (en), 992 (en), 995 (en)\n - Updated / refreshed time zone meta data.\n\nApr 18, 2024: v8.13.35\nMetadata changes:\n - Updated phone metadata for region code(s): CD, GE, GY, LA, PT, RO, SG, TD\n - Updated geocoding data for country calling code(s): 49 (en)\n - Updated carrier data for country calling code(s):\n   40 (en), 65 (en), 235 (en), 243 (en), 244 (en), 351 (en), 592 (en), 856 (en),\n   995 (en)\n\nApr 02, 2024: v8.13.34\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CU, DK, GD, GY, IL, KE, LA, MX, US, ZW\n - Updated geocoding data for country calling code(s): 52 (en)\n - Updated carrier data for country calling code(s):\n   41 (en), 45 (en), 263 (en), 1473 (en)\n - Updated / refreshed time zone meta data.\n\nMar 20, 2024: v8.13.33\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CA, GE, IL, LT, TM, TZ, UA, UG, US\n - New geocoding data for country calling code(s): 1235 (en), 1879 (en)\n - Updated carrier data for country calling code(s):\n   255 (en), 256 (en), 355 (en), 376 (en), 380 (en, uk), 972 (en), 993 (en),\n   995 (en)\n - Updated / refreshed time zone meta data.\n\nMar 06, 2024: v8.13.32\nMetadata changes:\n - Updated phone metadata for region code(s): CN, GB, MC, US, XK\n - Updated short number metadata for region code(s): CN, EG, KZ\n - Updated geocoding data for country calling code(s): 44 (en)\n - Updated carrier data for country calling code(s):\n   51 (en), 230 (en), 374 (en, ru)\n - Updated / refreshed time zone meta data.\n\nFeb 21, 2024: v8.13.31\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BM, CZ, EH, GY, JE, LS, MA, NG, NP, OM, SG, TO, US\n - Updated carrier data for country calling code(s):\n   33 (en), 65 (en), 234 (en), 420 (en), 592 (en), 676 (en), 977 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 07, 2024: v8.13.30\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 34, 385\n - Updated phone metadata for region code(s):\n   BL, BS, GP, HK, HR, KW, LI, MF, MX, OM, PL, PT, SV, UG, US\n - New geocoding data for country calling code(s): 1363 (en)\n - Updated geocoding data for country calling code(s): 52 (en)\n - Updated carrier data for country calling code(s):\n   47 (en), 48 (en), 84 (en), 256 (en), 351 (en), 423 (en), 590 (en),\n   852 (en, zh)\n - Updated / refreshed time zone meta data.\n\nJan 24, 2024: v8.13.29\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, CC, CX, CZ, GF, MH, MQ, TH, YT\n - Updated carrier data for country calling code(s):\n   61 (en), 420 (en), 692 (en)\n\nJan 10, 2024: v8.13.28\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BJ, BM, FR, GY, HK, HR, IR, IT, KE, KR, LR, MQ, NG, PG, SG, US\n - New geocoding data for country calling code(s): 33 (en, fr), 1645 (en)\n - Updated geocoding data for country calling code(s): 61 (en), 234 (en)\n - Updated carrier data for country calling code(s):\n   64 (en), 65 (en), 229 (en), 231 (en), 385 (en), 420 (en), 675 (en),\n   852 (en, zh), 1441 (en)\n - Updated / refreshed time zone meta data.\n\nDec 06, 2023: v8.13.27\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, BH, DE, EE, FI, GE, HK, PY, RO, SG, US\n - Updated geocoding data for country calling code(s): 54 (en), 358 (en, sv)\n - Updated carrier data for country calling code(s):\n   40 (en), 49 (en), 65 (en), 358 (en), 595 (en), 673 (en), 852 (en, zh),\n   973 (en), 995 (en), 1868 (en)\n - Updated / refreshed time zone meta data.\n\nNov 21, 2023: v8.13.26\nMetadata changes:\n - Updated phone metadata for region code(s): EH, HK, HR, MA, MK, PK, RO, TJ\n - Updated geocoding data for country calling code(s): 212 (en, fr)\n - Updated carrier data for country calling code(s):\n   40 (en), 45 (en), 86 (en, zh), 92 (en), 228 (en), 385 (en), 852 (en, zh),\n   992 (en)\n\nNov 08, 2023: v8.13.25\nMetadata changes:\n - Updated phone metadata for region code(s):\n   883, BH, BJ, EH, GU, GY, HK, MA, NU, SG, US, VN\n - New geocoding data for country calling code(s):\n   1227 (en), 1329 (en), 1369 (en), 1730 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 84 (en), 212 (en), 229 (en), 592 (en), 683 (en),\n   852 (en, zh, zh_Hant)\n - Updated / refreshed time zone meta data.\n\nOct 25, 2023: v8.13.24\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BW, EE, GT, HK, HR, KZ, MU, PA, RU, UG, US, UZ\n - Updated carrier data for country calling code(s):\n   230 (en), 502 (en), 852 (en, zh, zh_Hant), 998 (en)\n\nOct 11, 2023: v8.13.23\nMetadata changes:\n - Updated phone metadata for region code(s): BW, GE, NU, RE\n - Updated carrier data for country calling code(s):\n   30 (en), 229 (en), 262 (en)\n\nSep 27, 2023: v8.13.22\nMetadata changes:\n - Updated phone metadata for region code(s):\n   881, CO, IL, LI, MK, SA, TR, UG, UY\n - Updated geocoding data for country calling code(s): 598 (en)\n - Updated carrier data for country calling code(s):\n   39 (en), 41 (en), 43 (en), 49 (en), 57 (en), 90 (en), 237 (en), 389 (en),\n   423 (en), 853 (en), 966 (en), 972 (en)\n\nSep 18, 2023: v8.13.21\nMetadata changes:\n - Updated phone metadata for region code(s): AU, CC, CX, MX, UY\n - Updated geocoding data for country calling code(s): 52 (en), 61 (en)\n - Updated carrier data for country calling code(s): 61 (en)\n\nAug 30, 2023: v8.13.20\nMetadata changes:\n - Updated phone metadata for region code(s): AR, BD, GY, IL, NZ, OM, RW, TN\n - Updated carrier data for country calling code(s):\n   46 (en), 56 (en), 216 (en), 250 (en), 592 (en)\n\nAug 17, 2023: v8.13.19\nMetadata changes:\n - Updated phone metadata for region code(s):\n   GB, GF, IL, JP, MQ, MY, NO, PL, RE, SJ, TJ, US\n - Updated short number metadata for region code(s): GL, JP\n - New geocoding data for country calling code(s): 1983 (en)\n - Updated geocoding data for country calling code(s): 44 (en), 975 (en)\n - Updated carrier data for country calling code(s):\n   47 (en), 51 (en), 60 (en), 216 (en), 262 (en), 972 (en), 992 (en)\n - Updated / refreshed time zone meta data.\n\nAug 02, 2023: v8.13.18\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 84\n - Updated phone metadata for region code(s):\n   BH, CU, EG, GE, GL, IL, JP, NZ, RE, SG, UG, UZ, VN, YT\n - Updated short number metadata for region code(s): JP\n - Updated geocoding data for country calling code(s): 299 (en)\n - Updated carrier data for country calling code(s):\n   41 (en), 46 (en), 53 (en), 64 (en), 65 (en), 221 (en), 972 (en), 973 (en),\n   995 (en), 998 (en)\n - Updated / refreshed time zone meta data.\n\nJul 19, 2023: v8.13.17\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BL, CU, FR, GF, GP, HK, KR, MF, MQ, MU, PK, RE, SO, YT\n - Updated geocoding data for country calling code(s): 53 (en)\n - Updated carrier data for country calling code(s):\n   81 (en), 82 (en, ko), 262 (en), 371 (en)\n - Updated / refreshed time zone meta data.\n\nJul 06, 2023: v8.13.16\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AM, BW, EE, JM, KG, PM, SG, SV, TJ\n - Updated geocoding data for country calling code(s): 267 (en)\n - Updated carrier data for country calling code(s):\n   46 (en), 65 (en), 81 (en), 503 (en), 992 (en), 996 (en)\n\nJun 20, 2023: v8.13.15\nMetadata changes:\n - Updated phone metadata for region code(s): BE, BF, IL, MN, NE, OM, SO, SV\n - Updated carrier data for country calling code(s):\n   226 (en), 227 (en), 252 (en), 351 (en), 968 (en), 972 (en)\n\nJun 08, 2023: v8.13.14\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BD, EE, ET, IR, MM, MN, NZ, OM, QA\n - Updated short number metadata for region code(s): QA\n - Updated geocoding data for country calling code(s): 95 (en)\n - Updated carrier data for country calling code(s):\n   33 (en), 51 (en), 98 (en, fa), 372 (en)\n\nMay 26, 2023: v8.13.13\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BJ, CC, CX, GB, IL, LR, MU, NO\n - Updated short number metadata for region code(s): CZ\n - Updated geocoding data for country calling code(s): 61 (en)\n - Updated carrier data for country calling code(s):\n   32 (en), 229 (en), 230 (en)\n\nMay 11, 2023: v8.13.12\nMetadata changes:\n - Updated phone metadata for region code(s): BE, BJ, ET, KI, MH, US\n - Updated geocoding data for country calling code(s): 686 (en), 1472 (en)\n - Updated carrier data for country calling code(s):\n   229 (en), 420 (en), 686 (en), 692 (en)\n\nApr 26, 2023: v8.13.11\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BL, CG, GB, GF, GP, MF, RE, SG, TJ, YT\n\nApr 14, 2023: v8.13.10\nMetadata changes:\n - Updated phone metadata for region code(s): BE, CA, CL, GE, MM, MU, RE, US\n - New geocoding data for country calling code(s): 1428 (en)\n - Updated geocoding data for country calling code(s):\n   86 (en, zh), 95 (en), 1472 (en)\n - Updated carrier data for country calling code(s):\n   33 (en), 41 (en), 56 (en), 81 (en), 90 (en), 230 (en), 381 (en), 995 (en),\n   998 (en), 1284 (en)\n - Updated / refreshed time zone meta data.\n\nMar 28, 2023: v8.13.9\nMetadata changes:\n - Updated phone metadata for region code(s): BL, GF, GI, GP, HR, MF, MQ\n - Updated short number metadata for region code(s): JO\n - Updated carrier data for country calling code(s): 350 (en), 385 (en)\n\nMar 09, 2023: v8.13.8\nCode changes:\n - Added a check to PhoneNumberUtil that the value of the `phone-context`\n parameter of the tel URI follows the correct syntax as defined in\n [RFC3966](https://www.rfc-editor.org/rfc/rfc3966#section-3).\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BL, GF, GM, GP, KW, MF, MY, PM, PT\n - Updated short number metadata for region code(s): CH, DK\n - Updated carrier data for country calling code(s): 60 (en), 220 (en)\n\nFeb 23, 2023: v8.13.7\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, AU, BB, BM, BS, CC, CN, CX, DM, FR, GD, GG, GU, IM, JE, KN, KY,\n   LC, LI, MG, MK, MP, MQ, MS, RE, RO, SX, TC, TG, TT, US, VC, VG, VI, YT\n - Updated short number metadata for region code(s): FR\n - New geocoding data for country calling code(s): 1472 (en), 1557 (en)\n - Updated geocoding data for country calling code(s): 57 (en)\n - Updated carrier data for country calling code(s):\n   33 (en), 34 (en), 41 (en), 228 (en), 370 (en), 389 (en), 1246 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 08, 2023: v8.13.6\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, AU, BB, BM, BS, CA, CC, CF, CX, DM, DO, GD, GE, GU, HN, JM, KN,\n   KY, LA, LC, MP, MS, MV, PR, SI, SX, TC, TT, US, UZ, VC, VG, VI, VN\n - Updated short number metadata for region code(s): SC\n - Updated geocoding data for country calling code(s): 504 (en)\n - Updated carrier data for country calling code(s):\n   32 (en), 44 (en), 61 (en), 62 (en), 236 (en), 372 (en), 386 (en), 960 (en),\n   995 (en), 998 (en), 1246 (en)\n\nJan 17, 2023: v8.13.5\nMetadata changes:\n - Updated phone metadata for region code(s): BJ, EE, GI, GP, MN, TD\n - Updated carrier data for country calling code(s):\n   46 (en), 229 (en), 235 (en), 976 (en)\n\nJan 05, 2023: v8.13.4\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BG, BJ, ET, GH, HT, LR, MG, QA, SI, UZ\n - Updated short number metadata for region code(s): FO\n - Updated geocoding data for country calling code(s): 251 (en)\n - Updated carrier data for country calling code(s):\n   45 (en), 48 (en), 231 (en), 233 (en), 261 (en), 298 (en), 383 (en), 386 (en),\n   509 (en), 974 (en), 998 (en)\n\nDec 21, 2022: v8.13.3\nMetadata changes:\n - Updated phone metadata for region code(s):\n   882, 883, AT, GP, MX, QA, RE, SG, YE\n - Updated short number metadata for region code(s): AT, BE\n - Updated geocoding data for country calling code(s): 52 (en)\n - Updated carrier data for country calling code(s):\n   44 (en), 65 (en), 420 (en), 882 (en), 967 (en)\n\nDec 07, 2022: v8.13.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   882, AS, AU, BI, BM, BS, CA, CC, CX, ET, GB, GH, GU, GY, MK, MU, NG, SG, SO,\n   TJ, US, UY, VI\n - New geocoding data for country calling code(s):\n   1350 (en), 1354 (en), 1382 (en), 1683 (en), 1835 (en)\n - Updated geocoding data for country calling code(s): 1340 (en)\n - Updated carrier data for country calling code(s):\n   27 (en), 33 (en), 61 (en), 65 (en), 230 (en), 233 (en), 234 (en), 252 (en),\n   260 (en), 370 (en), 592 (en), 882 (en), 992 (en), 1441 (en), 1671 (en)\n - Updated / refreshed time zone meta data.\n\nNov 10, 2022: v8.13.1\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 7\n - Updated phone metadata for region code(s): GI, KG, KZ, RU\n - Updated geocoding data for country calling code(s): 7 (en, ru), 64 (en)\n - Updated carrier data for country calling code(s):\n   51 (en), 350 (en), 420 (en), 996 (en)\n - Updated / refreshed time zone meta data.\n\nOct 28, 2022: v8.13.0\n - Removal of unused leading_zero_possible proto field in phonemetadata.proto and all generated code. This has not been used for a long time, it was removed from metadata in 2017.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   883, BW, CI, CN, CY, HN, MA, MK, MV, OM\n - Updated short number metadata for region code(s): FI\n - Updated geocoding data for country calling code(s): 504 (en)\n - Updated carrier data for country calling code(s):\n   7 (en, ru), 46 (en), 47 (en), 48 (en), 357 (en), 359 (en), 389 (en),\n   960 (en)\n\nOct 11, 2022: v8.12.57\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BJ, EH, GB, GF, GG, JE, MA, MW, SG, SN, SO, ZM\n - Updated geocoding data for country calling code(s): 229 (en)\n - Updated carrier data for country calling code(s):\n   27 (en), 34 (en), 47 (en), 65 (en), 212 (en), 252 (en), 260 (en), 594 (en),\n   974 (en)\n - Updated / refreshed time zone meta data.\n\nSep 22, 2022: v8.12.56\nMetadata changes:\n - Updated phone metadata for region code(s): HR, MK, PT, SG, TT\n - Updated short number metadata for region code(s): BZ\n - Updated carrier data for country calling code(s):\n   31 (en), 65 (en), 385 (en), 389 (en)\n\nSep 08, 2022: v8.12.55\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, CA, CC, CI, CO, CX, DE, HK, KW, LV, MV, PA, PL, TZ, US\n - Updated short number metadata for region code(s): CO, TZ\n - New geocoding data for country calling code(s): 1742 (en), 1753 (en)\n - Updated geocoding data for country calling code(s):\n   57 (en), 225 (en), 960 (en)\n - New carrier data for country calling code(s): 371 (en)\n - Updated carrier data for country calling code(s):\n   47 (en), 57 (en), 61 (en), 90 (en), 255 (en), 297 (en), 381 (en), 420 (en),\n   972 (en), 974 (en)\n - Updated / refreshed time zone meta data.\n\nAug 18, 2022: v8.12.54\nMetadata changes:\n - Updated phone metadata for region code(s): BE, BF, GE, HN, MX, PT, US\n - Updated geocoding data for country calling code(s):\n   52 (en), 61 (en), 351 (en)\n - Updated carrier data for country calling code(s):\n   226 (en), 351 (en), 420 (en), 992 (en), 995 (en)\n\nAug 04, 2022: v8.12.53\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AT, BE, CL, CN, GE, GF, GH, HK, JM, PG, RE, US\n - Updated short number metadata for region code(s): AT\n - New geocoding data for country calling code(s): 1943 (en)\n - Updated carrier data for country calling code(s):\n   34 (en), 56 (en), 57 (en), 86 (en), 233 (en), 972 (en), 992 (en)\n - Updated / refreshed time zone meta data.\n\nJul 19, 2022: v8.12.52\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 49\n - Updated phone metadata for region code(s):\n   BW, DE, ET, HK, ML, MN, MQ, NP, PE, QA, SG\n - Updated geocoding data for country calling code(s): 61 (en)\n - Updated carrier data for country calling code(s):\n   48 (en), 65 (en), 223 (en), 251 (en), 852 (en, zh), 976 (en), 977 (en)\n - Updated / refreshed time zone meta data.\n\nJun 28, 2022: v8.12.51\nMetadata changes:\n - Updated phone metadata for region code(s):\n   800, BJ, BR, CO, EH, FO, GE, GP, KE, KG, MA, MM, MN, MY, NZ, RE, SI, UG, VN\n - Updated geocoding data for country calling code(s): 57 (en), 61 (en)\n - Updated carrier data for country calling code(s):\n   60 (en), 254 (en), 262 (en), 298 (en), 386 (en), 421 (en), 976 (en),\n   995 (en), 996 (en)\n - Updated / refreshed time zone meta data.\n\nJun 09, 2022: v8.12.50\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 380, 49\n - Updated phone metadata for region code(s):\n   AR, CL, DE, EH, GB, HK, HR, IR, IT, MA, MH, TT, UA, US\n - New geocoding data for country calling code(s): 1826 (en)\n - Updated geocoding data for country calling code(s):\n   34 (en, es), 54 (en), 61 (en)\n - Updated carrier data for country calling code(s):\n   44 (en), 98 (en, fa), 212 (en), 380 (en, uk), 385 (en), 420 (en),\n   852 (en, zh)\n - Updated / refreshed time zone meta data.\nNew Metadata files:\n - The phone and short number metadata of all regions are available now in\n   CSV format, at resources/metdata directory. This helps in better\n   readability and maintainance compared to RegEx representation for all\n   numbering metadata. The legacy XML metadata files (like\n   PhoneNumberMetadata.xml) are now auto genarated from this data; so now\n   users can also build tools around CSV representation based on their\n   needs/requirements.\n\nMay 25, 2022: v8.12.49\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CA, CM, GB, IL, JM, JP, MA, MV, PG, US\n - Updated geocoding data for country calling code(s):\n   33 (en), 44 (en), 212 (en, fr), 1310 (en)\n - Updated carrier data for country calling code(s): 237 (en), 675 (en)\n - Updated / refreshed time zone meta data.\n\nMay 05, 2022: v8.12.48\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BM, BR, BS, CA, DM, DO, EE, GD, GF, GP, GU, IS, JM, KN, KY,\n   LC, MN, MP, MS, NL, NP, PM, PR, SI, SX, SY, TC, TT, UG, US, VC, VG, VI, YT\n - New geocoding data for country calling code(s):\n   1263 (en), 1468 (en), 1584 (en), 1656 (en), 1948 (en)\n - Updated carrier data for country calling code(s):\n   354 (en), 370 (en), 372 (en), 503 (en), 963 (en), 977 (en)\n - Updated / refreshed time zone meta data.\n\nApr 19, 2022: v8.12.47\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AO, BB, FR, GB, GE, GG, HR, JE, MT, NC, PA, SE\n - Updated carrier data for country calling code(s):\n   33 (en), 41 (en), 46 (en), 244 (en), 351 (en), 385 (en), 420 (en), 974 (en),\n   995 (en), 1246 (en), 1345 (en)\n\nMar 31, 2022: v8.12.46\nMetadata changes:\n - Updated phone metadata for region code(s): BJ, JM, PW, SA\n - Updated short number metadata for region code(s): HU\n - Updated carrier data for country calling code(s):\n   36 (en), 51 (en), 61 (en), 90 (en), 229 (en), 254 (en), 680 (en), 966 (en)\n\nMar 10, 2022: v8.12.45\nMetadata changes:\n - Updated phone metadata for region code(s): BF, EE, JM, RE, SE, US\n - New geocoding data for country calling code(s): 1464 (en)\n - Updated carrier data for country calling code(s):\n   46 (en), 55 (en), 226 (en), 262 (en), 353 (en), 372 (en), 373 (en),\n   1345 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 23, 2022: v8.12.44\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BM, BS, CA, CV, DM, DO, GD, GU, JM, KN, KY, LC, MP, MS, PR,\n   SC, SX, TC, TT, US, VC, VG, VI\n - Updated short number metadata for region code(s): BE, PT, SC, SE, US\n - Updated geocoding data for country calling code(s):\n   61 (en), 238 (en), 1345 (en)\n - Updated carrier data for country calling code(s): 238 (en), 248 (en)\n\nFeb 09, 2022: v8.12.43\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BJ, CL, GA, IS, KR, KW, LI, PA, SG, SL\n - Updated short number metadata for region code(s): MS\n - Updated geocoding data for country calling code(s): 56 (en, es)\n - Updated carrier data for country calling code(s):\n   32 (en), 229 (en), 354 (en), 502 (en), 507 (en)\n\nJan 27, 2022: v8.12.42\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BG, BI, CF, DZ, GF, GP, HK, IR, MA, MQ, MW, PK, PL, PM, QA, TJ\n - Updated short number metadata for region code(s):\n   AG, AI, AS, BB, BM, BS, CA, DM, DO, GD, GU, JM, KN, KY, LC, MP, MS, PR, SX,\n   TC, TT, US, VC, VG, VI\n - Updated geocoding data for country calling code(s): 61 (en), 213 (en)\n - Updated carrier data for country calling code(s):\n   45 (en), 48 (en), 57 (en), 98 (en, fa), 236 (en), 243 (en), 257 (en),\n   420 (en), 421 (en), 508 (en), 675 (en), 852 (en, zh), 974 (en), 992 (en)\n\nJan 11, 2022: v8.12.41\nMetadata changes:\n - Updated phone metadata for region code(s): EH, IL, KE, LA, MA, OM, SG\n - Updated short number metadata for region code(s): PY\n - Updated carrier data for country calling code(s):\n   33 (en), 65 (en), 358 (en), 383 (en), 420 (en), 502 (en), 856 (en), 966 (en),\n   968 (en), 974 (en)\n\nDec 23, 2021: v8.12.40\nMetadata changes:\n - Updated phone metadata for region code(s): GP, GY, MK, VU\n - Updated geocoding data for country calling code(s): 389 (en)\n - Updated carrier data for country calling code(s): 60 (en), 592 (en)\n\nDec 07, 2021: v8.12.39\nMetadata changes:\n - Updated phone metadata for region code(s): CO, EH, HK, MA, MU, ZM\n - Updated carrier data for country calling code(s):\n   57 (en), 81 (en), 852 (en, zh)\n\nNov 25, 2021: v8.12.38\nMetadata changes:\n - Updated phone metadata for region code(s):\n   883, AT, BI, BW, CG, EE, EH, HN, HU, LI, LK, MA, PA, PH, SG, TH, TJ\n - Updated geocoding data for country calling code(s): 61 (en), 504 (en)\n - Updated carrier data for country calling code(s):\n   51 (en), 65 (en), 370 (en), 992 (en)\n - Updated / refreshed time zone meta data.\n\nNov 11, 2021: v8.12.37\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BD, CC, CX, GB, IT, LI, MQ, SG, US, VA\n - Updated geocoding data for country calling code(s): 880 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 81 (en), 356 (en), 423 (en)\n\nOct 26, 2021: v8.12.36\nMetadata changes:\n - Updated phone metadata for region code(s): AZ, GA, HK, JM, KW, RO, TJ, UY\n - Updated geocoding data for country calling code(s): 994 (en)\n - Updated carrier data for country calling code(s):\n   40 (en), 41 (en), 252 (en), 852 (en, zh), 965 (en)\n\nOct 12, 2021: v8.12.35\nMetadata changes:\n - Updated phone metadata for region code(s): AU, AZ, CC, CO, CX, EH, HN, MA\n - Updated carrier data for country calling code(s): 994 (en)\n\nOct 06, 2021: v8.12.34\nMetadata changes:\n - Updated phone metadata for region code(s): AR, BD, DE, MX, VI\n - Updated geocoding data for country calling code(s):\n   55 (en), 420 (en), 880 (en), 1340 (en)\n\nSep 22, 2021: v8.12.33\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CG, CZ, GE, GF, GR, KR, MT, PA, TH, UG, UZ\n - Updated geocoding data for country calling code(s): 420 (en)\n - Updated carrier data for country calling code(s):\n   46 (en), 420 (en), 966 (en)\n\nSep 09, 2021: v8.12.32\nMetadata changes:\n - Updated phone metadata for region code(s): CI, GE, RO, SG, US, YT\n - New geocoding data for country calling code(s): 1582 (en)\n - Updated carrier data for country calling code(s):\n   40 (en), 65 (en), 262 (en), 356 (en), 503 (en), 995 (en)\n - Updated / refreshed time zone meta data.\n\nAug 24, 2021: v8.12.31\nMetadata changes:\n - Updated phone metadata for region code(s): CO, EE, GB, PH, US\n - New geocoding data for country calling code(s): 1771 (en)\n - Updated geocoding data for country calling code(s): 57 (en), 225 (en)\n - Updated carrier data for country calling code(s):\n   63 (en), 252 (en), 372 (en), 389 (en)\n - Updated / refreshed time zone meta data.\n\nAug 17, 2021: v8.12.30\nMetadata changes:\n - Updated phone metadata for region code(s): 800, AM, GL, KW, SG, SO, SY\n - Updated carrier data for country calling code(s):\n   55 (en), 65 (en), 252 (en), 263 (en), 963 (en)\n - Updated / refreshed time zone meta data.\n\nAug 06, 2021: v8.12.29\nCode changes:\n - Updated As-You-Type-Formatter to exclude patterns where some digits would be dropped in the output. This also fixes the bug where an extra country code is added in some cases to the user's output. b/183053929\nMetadata changes:\n - Updated phone metadata for region code(s): BE, GE, IR, MO, MX, QA, SN\n - Updated geocoding data for country calling code(s): 52 (en)\n - Updated carrier data for country calling code(s):\n   32 (en), 221 (en), 995 (en)\n - Updated / refreshed time zone meta data.\n\nJul 20, 2021: v8.12.28\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CO, EH, GF, HK, KZ, MA, MO, MU, MX, NG, OM, PH, RU, SG, TO, UG\n - Updated geocoding data for country calling code(s): 52 (en)\n - Updated carrier data for country calling code(s):\n   34 (en), 57 (en), 63 (en), 65 (en), 229 (en), 234 (en), 676 (en),\n   852 (en, zh), 968 (en)\n - Updated / refreshed time zone meta data.\n\nJul 07, 2021: v8.12.27\nMetadata changes:\n - Updated phone metadata for region code(s): BW, MG, MW, PL, RO, TO, ZW\n - Updated short number metadata for region code(s): BW, HU\n - Updated carrier data for country calling code(s):\n   36 (en), 48 (en), 261 (en), 263 (en), 676 (en)\n\nJun 23, 2021: v8.12.26\nMetadata changes:\n - Updated phone metadata for region code(s): DZ, EH, GB, MA, PH, QA\n - Updated geocoding data for country calling code(s): 212 (en)\n\nJun 09, 2021: v8.12.25\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BZ, GB, GH, HN, JM, LU, TJ, US, VU\n - New geocoding data for country calling code(s): 1448 (en)\n - Updated geocoding data for country calling code(s): 678 (en)\n - Updated carrier data for country calling code(s):\n   233 (en), 678 (en), 1876 (en)\n - Updated / refreshed time zone meta data.\n\nMay 26, 2021: v8.12.24\nCode changes:\n - Changes formatOutOfCountryCallingNumber to always use preferred intl prefix if present, not just for numbers with a non-unique IDD. This means we will output \"8~10\" as the prefix if calling formatOutOfCountryCallingNumber instead of \"810\" for some regions that have this tilde in their prefix [designates that the user should wait before continuing to dial].\nMetadata changes:\n - Updated phone metadata for region code(s):\n   883, AX, FI, GE, IR, PA, PG, PH, SG, SL, UZ\n - Updated carrier data for country calling code(s):\n   33 (en), 63 (en), 65 (en), 98 (en, fa), 358 (en), 507 (en), 675 (en),\n   995 (en)\n\nMay 11, 2021: v8.12.23\nMetadata changes:\n - Updated phone metadata for region code(s): BF, CI, RW, SG, UG, US, UZ\n - Updated short number metadata for region code(s): DZ\n - New geocoding data for country calling code(s): 1572 (en)\n - Updated geocoding data for country calling code(s): 225 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 225 (en), 226 (en), 250 (en), 256 (en), 998 (en)\n - Updated / refreshed time zone meta data.\n\nApr 29, 2021: v8.12.22\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BL, CA, CD, CI, GP, IR, JP, LI, MF, MY, PH, PT, RE\n - Updated short number metadata for region code(s): FI, PS\n - New geocoding data for country calling code(s): 1368 (en)\n - Updated geocoding data for country calling code(s): 49 (de, en), 52 (es)\n - Updated carrier data for country calling code(s):\n   46 (en), 60 (en), 63 (en), 225 (en), 229 (en), 243 (en), 252 (en), 262 (en),\n   351 (en), 423 (en), 590 (en)\n - Updated / refreshed time zone meta data.\n\nApr 05, 2021: v8.12.21\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BL, EH, GB, GF, GP, MA, MF, MQ, PF, PM, SG, SS, WF\n - Updated short number metadata for region code(s): DE\n - Updated carrier data for country calling code(s):\n   65 (en), 211 (en), 212 (en)\n - Updated / refreshed time zone meta data.\n\nMar 16, 2021: v8.12.20\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, CA, CL, CM, EH, IM, JP, LB, MA, MC, MY, SG, US\n - New geocoding data for country calling code(s):\n   961 (en), 1447 (en), 1474 (en), 1840 (en)\n - Updated geocoding data for country calling code(s): 1854 (en)\n - Updated carrier data for country calling code(s):\n   56 (en), 60 (en), 65 (en), 84 (en)\n - Updated / refreshed time zone meta data.\n\nMar 01, 2021: v8.12.19\nMetadata changes:\n - Updated phone metadata for region code(s):\n   882, AU, BJ, BW, CC, CX, EH, KZ, MA, MQ, MU, NO, RE, SG, SJ, SL, TJ, TT, US,\n   YT\n - New geocoding data for country calling code(s): 1945 (en)\n - Updated geocoding data for country calling code(s): 61 (en), 267 (en)\n - Updated carrier data for country calling code(s):\n   7 (en), 41 (en), 65 (en), 221 (en), 229 (en), 230 (en), 232 (en), 262 (en),\n   592 (en), 596 (en), 882 (en), 992 (en), 1868 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 08, 2021: v8.12.18\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 676\n - Updated phone metadata for region code(s): CI, IR, SG, TO\n - Updated geocoding data for country calling code(s): 225 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 225 (en), 676 (en)\n\nJan 27, 2021: v8.12.17\nMetadata changes:\n - Updated phone metadata for region code(s): CI, GR, MO, TR, VU\n - Updated geocoding data for country calling code(s): 225 (en)\n - Updated carrier data for country calling code(s): 853 (en)\n\nJan 12, 2021: v8.12.16\nMetadata changes:\n - Updated phone metadata for region code(s):\n   870, AL, AR, BA, BW, CO, DE, DM, DO, GB, GI, HK, KW, MK, MO, MY, OM, SG, SL,\n   TH\n - Updated short number metadata for region code(s): AR\n - Updated geocoding data for country calling code(s): 44 (en)\n - Updated carrier data for country calling code(s):\n   41 (en), 46 (en), 57 (en), 60 (en), 61 (en), 65 (en), 66 (en), 227 (en),\n   232 (en), 267 (en), 350 (en), 351 (en), 356 (en), 389 (en), 420 (en),\n   852 (en, zh), 853 (en)\n\nDec 15, 2020: v8.12.15\nMetadata changes:\n - Updated phone metadata for region code(s): GN, KE, MU, SG\n - Updated carrier data for country calling code(s):\n   65 (en), 224 (en), 230 (en), 254 (en)\n\nDec 02, 2020: v8.12.14\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BA, BW, CG, CO, EH, FO, HN, IL, KE, MA, NZ, SN, TJ, UY\n - Updated geocoding data for country calling code(s): 57 (en), 504 (en)\n - Updated carrier data for country calling code(s):\n   46 (en), 212 (en), 221 (en), 242 (en), 254 (en), 298 (en), 972 (en),\n   992 (en)\n\nNov 12, 2020: v8.12.13\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CL, DE, FR, GQ, IL, IR, KG, KW, MU, NG, PW, SN, TZ\n - Updated carrier data for country calling code(s):\n   7 (en), 33 (en), 221 (en), 230 (en), 234 (en), 240 (en), 255 (en), 680 (en),\n   886 (en), 972 (en)\n\nOct 29, 2020: v8.12.12\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BM, BS, CA, CI, DM, DO, GB, GD, GG, GU, IR, JE, JM, JP, KE,\n   KN, KY, LC, MP, MS, NP, PK, PR, SA, SX, TC, TT, US, VC, VG, VI, VN, WS\n - Updated short number metadata for region code(s): JP\n - Updated geocoding data for country calling code(s): 81 (en, ja)\n - New carrier data for country calling code(s): 81 (en)\n - Updated carrier data for country calling code(s):\n   44 (en), 98 (en, fa), 225 (en), 685 (en), 966 (en)\n - Updated / refreshed time zone meta data.\n\nOct 07, 2020: v8.12.11\nMetadata changes:\n - Updated phone metadata for region code(s): CM, HK, ID, LK, PA, PY, TJ, UZ\n - Updated carrier data for country calling code(s):\n   94 (en), 852 (en, zh), 992 (en), 998 (en)\n - Updated / refreshed time zone meta data.\n\nSep 20, 2020: v8.12.10\nMetadata changes:\n - Updated phone metadata for region code(s):\n   EH, IL, JO, MA, NG, PA, PG, PY, UY\n - Updated short number metadata for region code(s): SA\n - Updated geocoding data for country calling code(s): 598 (en)\n - Updated carrier data for country calling code(s):\n   212 (en), 234 (en), 507 (en), 595 (en), 675 (en), 972 (en)\n\nAug 30, 2020: v8.12.9\nMetadata changes:\n - Updated phone metadata for region code(s): CO, GB, IL, SG\n - Updated short number metadata for region code(s): SA\n - Updated geocoding data for country calling code(s): 57 (en)\n - Updated carrier data for country calling code(s): 65 (en), 972 (en)\n\nAug 12, 2020: v8.12.8\nMetadata changes:\n - Updated phone metadata for region code(s): HU, NE, PL, SG, SI, TR\n - Updated short number metadata for region code(s): ID, NE\n - Updated carrier data for country calling code(s):\n   65 (en), 226 (en), 227 (en)\n\nJul 20, 2020: v8.12.7\nMetadata changes:\n - Updated phone metadata for region code(s): ET, HN, KN, NA, SG, US,\n   HK, IR, LI, MU, TR, VN\n - New geocoding data for country calling code(s): 1326 (en), 1839 (en)\n - Updated geocoding data for country calling code(s): 380 (en), 504 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 234 (en), 1869 (en), 98 (en, fa), 243 (en), 423 (en), 852 (en, zh)\n - Updated / refreshed time zone meta data.\n - Note: You will find commit with same release tag on Jul 02, 2020.\n   As that release blocked immediately, we started over new release with same tag.\n \nCode changes:\n - [Java only] Added metadata/ folder to only GitHub devleopment version; this\n   will not be part of the release artifacts untill it is complete and ready\n   for usage. More details in its README file.\n\n\nJun 17, 2020: v8.12.6\nCode changes:\n - [Java only] Use protobuf API v2 for PhoneMetadata only, mark old methods as deprecated.\n\nMetadata changes:\n - Updated phone metadata for region code(s): HN, KE, MY, ZA\n - Updated carrier data for country calling code(s): 48 (en), 60 (en), 65 (en)\n\nJun 03, 2020: v8.12.5\nMetadata changes:\n - Updated phone metadata for region code(s): ES, GB, GG, JE, KR, RE, TJ, UZ\n - Updated geocoding data for country calling code(s): 81 (en)\n - Updated carrier data for country calling code(s):\n   34 (en), 82 (en, ko), 262 (en), 992 (en), 998 (en)\n\nMay 19, 2020: v8.12.4\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BR, CC, CX, HK, MM, PH, PL, TN\n - Updated short number metadata for region code(s): FI, GB, TH\n - Updated geocoding data for country calling code(s): 1242 (en), 1867 (en)\n - Updated carrier data for country calling code(s):\n   61 (en), 63 (en), 95 (en), 216 (en), 852 (en, zh)\n\nMay 06, 2020: v8.12.3\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, AU, CC, CX, GB, GG, GR, JE, MY, SG, SL, SR, TH\n - Updated short number metadata for region code(s): AR, AU\n - Updated geocoding data for country calling code(s): 61 (en), 66 (en, th)\n - Updated carrier data for country calling code(s):\n   60 (en), 61 (en), 65 (en), 232 (en), 597 (en)\n - Updated / refreshed time zone meta data.\n\nApr 22, 2020: v8.12.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AL, AR, AU, CC, CX, ET, GE, GH, JM, JP, LA, MM, NZ, QA, SG, ZA\n - Updated short number metadata for region code(s): AR\n - New geocoding data for country calling code(s): 995 (en)\n - Updated geocoding data for country calling code(s): 54 (en), 64 (en)\n - Updated carrier data for country calling code(s):\n   64 (en), 65 (en), 95 (en), 995 (en), 1876 (en)\n - Updated / refreshed time zone meta data.\n\nMar 30, 2020: v8.12.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BD, BM, BS, BW, CA, CL, DM, DO, GB, GD, GU, IL, IR, JM, JO,\n   KN, KY, KZ, LC, MA, MC, MN, MP, MS, NG, NZ, PE, PH, PR, PW, SG, SS, SX, TC,\n   TT, US, VC, VG, VI, VN\n - New short number metadata for region code(s): SS\n - New geocoding data for country calling code(s): 63 (en), 1340 (en)\n - Updated geocoding data for country calling code(s):\n   7 (en, ru), 44 (en), 56 (en, es), 212 (en, fr), 234 (en), 880 (en),\n   1242 (en), 1345 (en), 1659 (en)\n - New carrier data for country calling code(s):\n   1340 (en), 1659 (en), 1664 (en), 1670 (en)\n - Updated carrier data for country calling code(s):\n   7 (en, ru), 51 (en), 56 (en), 63 (en), 84 (en), 98 (en, fa), 211 (en),\n   234 (en), 267 (en), 972 (en), 976 (en), 1246 (en), 1264 (en), 1268 (en),\n   1284 (en), 1345 (en), 1441 (en), 1649 (en), 1684 (en), 1758 (en), 1767 (en),\n   1784 (en), 1868 (en), 1869 (en), 1876 (en)\n - Updated / refreshed time zone meta data.\n\nMar 18, 2020: v8.12.0\nCode changes:\n - [JS only] Updates some closure annotations in `phonenumberutil.js` to indicate non-nullable parameters\nMetadata changes:\n - Updated phone metadata for region code(s):\n   800, 808, 881, 882, 979, AR, AZ, CL, CN, HK, HN, JO, JP, KE, KP, LA, LR, MK,\n   ML, MN, MV, MY, MZ, NP, NZ, PS, SV, SY, TT, TZ, UZ, YE\n - Updated short number metadata for region code(s): AC, JO, MK, MN, NP, SV, TZ\n - New geocoding data for country calling code(s):\n   850 (en), 963 (en), 967 (en), 970 (en)\n - Updated geocoding data for country calling code(s):\n   60 (en), 389 (en), 504 (en), 962 (en)\n - New carrier data for country calling code(s):\n   247 (en), 500 (en), 504 (en), 850 (en), 881 (en), 882 (en)\n - Updated carrier data for country calling code(s):\n   56 (en), 60 (en), 64 (en), 86 (en, zh), 223 (en), 231 (en), 258 (en),\n   267 (en), 389 (en), 503 (en), 852 (en, zh, zh_Hant), 856 (en), 960 (en),\n   962 (en), 963 (en), 964 (en), 970 (en), 992 (en), 994 (en), 998 (en),\n   1868 (en)\n - Updated / refreshed time zone meta data.\n\nMar 02, 2020: v8.11.5\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 595\n - Updated phone metadata for region code(s):\n   AD, BE, BQ, BW, CA, CI, CM, CR, EC, EE, EG, FM, FO, GL, GN, IL, KI, LK, LT,\n   ME, MO, MT, MW, NE, NF, NR, OM, PA, PF, PG, PK, PY, RO, RW, SC, SD, SG, SK,\n   SL, SO, TL, TM, TO, TV, UG, VE, VU, WS, ZM\n - Updated short number metadata for region code(s):\n   GN, KI, LK, LT, OM, PK, RO, RW, SH, TM, TR, WS\n - New geocoding data for country calling code(s):\n   92 (en), 236 (en), 593 (en), 595 (en), 598 (en), 670 (en), 672 (en),\n   678 (en), 685 (en), 689 (en), 690 (en), 993 (en), 1367 (en)\n - Updated geocoding data for country calling code(s):\n   43 (en), 58 (en, es), 94 (en), 221 (en), 224 (en), 225 (en), 233 (en),\n   252 (en), 264 (en), 290 (en, fr), 352 (de, en), 370 (en), 374 (en, hy, ru),\n   421 (en), 599 (en), 686 (en)\n - New carrier data for country calling code(s):\n   246 (en), 266 (en), 290 (en), 291 (en), 377 (en), 378 (en), 672 (en),\n   676 (en), 681 (en), 683 (en), 687 (en), 690 (en), 691 (en), 692 (en)\n - Updated carrier data for country calling code(s):\n   40 (en), 43 (en), 48 (en), 65 (en), 92 (en), 222 (en), 225 (en), 227 (en),\n   229 (en), 230 (en), 232 (en), 233 (en), 236 (en), 256 (en), 265 (en),\n   267 (en), 268 (en), 298 (en), 370 (en), 372 (en), 376 (en), 381 (en),\n   383 (en), 421 (en), 502 (en), 506 (en), 507 (en), 592 (en), 593 (en),\n   598 (en), 599 (en), 670 (en), 674 (en), 675 (en), 678 (en), 685 (en),\n   686 (en), 853 (en), 968 (en), 972 (en), 993 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 12, 2020: v8.11.4\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AZ, BJ, CL, ET, GB, MA, MM, PW, RE, SG\n - Updated geocoding data for country calling code(s): 680 (en)\n - Updated carrier data for country calling code(s):\n   56 (en), 95 (en), 229 (en), 262 (en), 680 (en), 994 (en)\n\nJan 28, 2020: v8.11.3\nMetadata changes:\n - Updated phone metadata for region code(s): GB, GG, JE, MM, MU, US\n - New geocoding data for country calling code(s): 1659 (en)\n - Updated carrier data for country calling code(s): 95 (en)\n - Updated / refreshed time zone meta data.\n\nJan 14, 2020: v8.11.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BF, CA, EH, GM, KR, MA, ML, NG, NZ, SE, SG, TJ, TR, TT\n - New geocoding data for country calling code(s): 1672 (en)\n - Updated geocoding data for country calling code(s): 220 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 212 (en), 220 (en), 226 (en), 234 (en), 992 (en), 1868 (en)\n - Updated / refreshed time zone meta data.\n\nDec 10, 2019: v8.11.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, DO, DZ, FR, GA, GE, GI, IL, KW, LB, MA, RO, SG, ZA\n - Updated short number metadata for region code(s): FR\n - Updated geocoding data for country calling code(s): 33 (en, fr), 54 (en)\n - Updated carrier data for country calling code(s):\n   27 (en), 33 (en), 36 (en), 65 (en), 213 (en), 961 (en), 972 (en), 995 (en)\n\nNov 26, 2019: v8.11.0\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 91\n - Updated phone metadata for region code(s):\n   AF, AL, AR, AX, AZ, BA, BE, BH, BI, BL, BN, CK, CO, CU, CV, DK, EH, ET, FI,\n   FR, GA, GB, GF, GH, GI, GP, GR, HR, IE, IN, IR, IS, JO, KG, KM, KR, KW, LI,\n   LY, MA, MD, MF, MM, MQ, NO, PT, QA, RE, SG, TW, YT, ZM, ZW\n - Updated short number metadata for region code(s):\n   AF, AW, BE, CN, CO, DE, ET, GR, KR, MD, NO, PT, SG, TW\n - New geocoding data for country calling code(s):\n   386 (en), 673 (en), 679 (en), 682 (en), 971 (en)\n - Updated geocoding data for country calling code(s):\n   34 (en, es), 46 (en), 47 (en), 91 (en), 216 (en), 218 (en), 241 (en),\n   251 (en), 353 (en), 354 (en), 886 (en, zh), 996 (en)\n - New carrier data for country calling code(s):\n   46 (en), 82 (en, ko), 218 (en), 501 (en), 682 (en)\n - Updated carrier data for country calling code(s):\n   30 (en), 31 (en), 32 (en), 34 (en), 39 (en), 41 (en), 44 (en), 45 (en),\n   47 (en), 49 (en), 53 (en), 55 (en), 57 (en), 65 (en), 66 (en), 91 (en),\n   95 (en), 98 (en, fa), 212 (en), 226 (en), 233 (en), 235 (en), 237 (en),\n   241 (en), 242 (en), 243 (en), 262 (en), 297 (en), 350 (en), 351 (en),\n   353 (en), 354 (en), 358 (en), 359 (en), 373 (en), 385 (en), 386 (en),\n   420 (en), 423 (en), 508 (en), 590 (en), 673 (en), 855 (en), 886 (en),\n   966 (en), 973 (en), 974 (en), 994 (en), 996 (en)\n - Updated / refreshed time zone meta data.\n\nNov 13, 2019: v8.10.23\nMetadata changes:\n - Updated phone metadata for region code(s): AL, AR, XK\n - Updated carrier data for country calling code(s): 383 (en)\n\nOct 29, 2019: v8.10.22\nMetadata changes:\n - Updated phone metadata for region code(s): DM, DO, MM, OM, VN, ZM\n - Updated short number metadata for region code(s): GR\n - Updated carrier data for country calling code(s):\n   95 (en), 260 (en), 968 (en)\n\nOct 16, 2019: v8.10.21\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BF, CI, HN, KW, MM, MY, SG, SI, TJ, ZW\n - Updated geocoding data for country calling code(s): 52 (en), 95 (en)\n - Updated carrier data for country calling code(s):\n   60 (en), 65 (en), 225 (en), 226 (en), 386 (en), 992 (en)\n\nOct 02, 2019: v8.10.20\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BO, CC, CX, DM, GM, HN, PH, US\n - New geocoding data for country calling code(s): 1341 (en)\n - Updated carrier data for country calling code(s): 220 (en)\n - Updated / refreshed time zone meta data.\n\nSep 17, 2019: v8.10.19\nMetadata changes:\n - Updated phone metadata for region code(s): EH, GE, GR, HU, IL, IR, MA, US\n - Updated short number metadata for region code(s): ET\n - New geocoding data for country calling code(s): 1689 (en)\n - Updated carrier data for country calling code(s): 31 (en), 995 (en)\n - Updated / refreshed time zone meta data.\n\nSep 03, 2019: v8.10.18\nMetadata changes:\n - Updated phone metadata for region code(s): BR, HU, KG, KR, MV, SG, VN\n - Updated short number metadata for region code(s): BR, IL\n - Updated carrier data for country calling code(s): 65 (en), 996 (en)\n\nAug 15, 2019: v8.10.17\nMetadata changes:\n - MX numbering authority has changed dialling patterns to be more\n   uniform i.e additional domestic (01 and 044) and international\n   mobile tokens (1) are abolished now. The parsing and formatting\n   changes were done as part of this release. We recommend to\n   follow the steps mentioned in our announcement for same:\n   https://groups.google.com/forum/#!topic/libphonenumber-discuss/pecTIo_HpVE\n - Updated phone metadata for region code(s): AM, MM, MX\n - Updated short number metadata for region code(s): TH\n - Updated carrier data for country calling code(s):\n   86 (en, zh, zh_Hant), 95 (en), 374 (en, ru)\nFor users who depend on JavaScript port:\n - Please patch in PR #2380 to fix AYTF output that otherwise\n   swallows the entered old mobile token (1) at the last step.\nCode changes:\n - AsYouTypeFormatter changed to ensure that the output never adds new digits or swallows digits.\n - MX mobile token no longer returned by getCountryMobileToken\n\nAug 01, 2019: v8.10.16\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 676\n - Updated phone metadata for region code(s):\n   AU, CC, CL, CX, GB, IL, KW, MK, NE, TJ, TT, TW, VI\n - Updated carrier data for country calling code(s):\n   56 (en), 61 (en), 65 (en), 227 (en), 972 (en), 992 (en), 1868 (en)\n\nJul 15, 2019: v8.10.15\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 676\n - Updated phone metadata for region code(s):\n   AM, BG, EH, IR, IT, MA, MM, MT, SL, TO, UG, VA, VN\n - New geocoding data for country calling code(s): 676 (en)\n - Updated geocoding data for country calling code(s):\n   95 (en), 212 (en, fr), 232 (en), 374 (en, hy, ru)\n - Updated carrier data for country calling code(s):\n   95 (en), 212 (en), 232 (en), 256 (en), 356 (en)\n\nJun 13, 2019: v8.10.14\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BF, BJ, BR, IM, KE, KZ, MN, MX, PH, RE, VN\n - Updated short number metadata for region code(s): FR\n - Updated geocoding data for country calling code(s): 55 (en)\n - Updated carrier data for country calling code(s):\n   7 (en, ru), 44 (en), 63 (en), 226 (en), 229 (en), 254 (en), 262 (en),\n   976 (en)\n\nMay 29, 2019: v8.10.13\nMetadata changes:\n - Updated phone metadata for region code(s): AU, CC, CI, CX, DE, HK\n - Updated carrier data for country calling code(s): 61 (en), 225 (en)\n\nMay 10, 2019: v8.10.12\nMetadata changes:\n - Updated phone metadata for region code(s): CL, HK, MU, NE\n - Updated carrier data for country calling code(s): 230 (en)\n\nApr 30, 2019: v8.10.11\nMetadata changes:\n - Updated phone metadata for region code(s): CU, EH, MA\n - Updated short number metadata for region code(s): CU\n - Updated geocoding data for country calling code(s): 53 (en)\n\nApr 15, 2019: v8.10.10\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BW, CL, DE, ET, IN, NG, PF, TW, VN\n - Updated short number metadata for region code(s): KI\n - Updated geocoding data for country calling code(s):\n   251 (en), 267 (en), 886 (en, zh, zh_Hant)\n - Updated carrier data for country calling code(s): 234 (en), 689 (en)\n - Updated / refreshed time zone meta data.\n\nApr 02, 2019: v8.10.9\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 380, 44, 49\n - Updated phone metadata for region code(s): AU, BD, CC, CN, CX, EC, ID, PE\n - Updated carrier data for country calling code(s): 51 (en), 593 (en)\n\nMar 19, 2019: v8.10.8\n* Code changes\n  - Making the application of alternate formats when finding phone numbers in\n    text in strict-grouping and exact-match mode depend on the leading digits\n    for each rule. This was always assumed but never actually done. This means\n    that the false positive rate will decrease but also that more valid numbers\n    are skipped. A subsequent CL will update patterns to increase recall.\nMetadata changes:\n - Updated alternate formatting data for country calling code(s):\n   255, 27, 31, 34, 351, 352, 358, 359, 36, 372, 380, 381, 385, 39, 43, 44, 49,\n   506, 52, 54, 55, 595, 61, 62, 64, 66, 675, 676, 679, 7, 81, 84, 856, 90, 91,\n   94, 95, 971, 972, 995\n - Updated phone metadata for region code(s):\n   AC, AU, CC, CN, CX, EH, GE, JM, JP, KE, KG, MA, NO, PH, SJ, UA, UZ, ZW\n - Updated short number metadata for region code(s): TW\n - New carrier data for country calling code(s): 1658 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 380 (en, uk), 996 (en), 1876 (en)\n\nMar 06, 2019: v8.10.7\nMetadata changes:\n - Updated phone metadata for region code(s): BD, BH, HN, MM, PH, ZW\n - Updated geocoding data for country calling code(s): 90 (en, tr), 95 (en)\n - Updated carrier data for country calling code(s): 63 (en), 64 (en)\n\nFeb 21, 2019: v8.10.6\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CN, IR, JM, KE, KR, KZ, LI, VN\n - Updated geocoding data for country calling code(s): 86 (en, zh)\n - Updated carrier data for country calling code(s):\n   84 (en), 86 (en, zh, zh_Hant), 423 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 06, 2019: v8.10.5\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AE, AG, AI, AM, AR, AS, AT, AU, AZ, BA, BB, BE, BG, BM, BO, BR, BS, BT, BW,\n   BY, CG, CH, CL, CO, DE, DM, DZ, ES, FI, FR, GB, GD, GE, GR, GU, HN, HR, IE,\n   IL, IN, IT, JM, JO, JP, KG, KN, KP, KR, KY, LC, LI, LK, LT, LU, MA, MC, MD,\n   MG, MM, MP, MS, MU, MV, MW, MX, MY, NA, NC, NE, NF, NL, NO, NZ, PE, PH, PL,\n   PY, RO, RU, SA, SB, SC, SE, SG, SI, SK, SM, SN, SO, SR, SX, TC, TJ, TM, TO,\n   TR, TT, TZ, UG, UY, VC, VG, VI, VN, XK, ZM, ZW\n - Updated short number metadata for region code(s): BR, TH\n - Updated geocoding data for country calling code(s): 54 (en), 55 (en, pt)\n - Updated carrier data for country calling code(s): 55 (en)\n - Updated / refreshed time zone meta data.\n\nJan 24, 2019: v8.10.4\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AR, AT, BH, BI, CL, CN, CW, CZ, DE, FI, FM, HK, KR, LA, LU, ML, NC, NE, PA,\n   SB, TT, ZW\n - Updated short number metadata for region code(s): AR, KR\n - Updated geocoding data for country calling code(s): 54 (en, es), 686 (en)\n - Updated carrier data for country calling code(s):\n   254 (en), 507 (en), 599 (en), 880 (en)\n\nJan 08, 2019: v8.10.3\nCode changes:\n - Better documentation for getLengthOfNationalDestinationCode to emphasise that\n   not every number has one.\n - Removed unused code in the AsYouTypeFormatter: We no longer have numbers in\n   formatting matching patterns, only \\d.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   EG, GM, HK, LR, MM, NG, SD, UZ, VN, VU\n - Updated geocoding data for country calling code(s): 249 (en)\n - Updated carrier data for country calling code(s):\n   84 (en), 95 (en), 220 (en), 231 (en), 852 (en, zh, zh_Hant), 965 (ar)\n - Updated / refreshed time zone meta data.\n\nDec 06, 2018: v8.10.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   882, AE, AL, AR, BD, BR, CN, ID, IN, JM, LK, MG, MU, MX, OM, SI, UA, ZW\n - Updated short number metadata for region code(s): IN, MG, MX, SI\n - Updated geocoding data for country calling code(s): 52 (en, es), 261 (en)\n - Updated carrier data for country calling code(s):\n   66 (en), 91 (en), 386 (en), 968 (en)\n - Updated / refreshed time zone meta data.\n\nNov 21, 2018: v8.10.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AE, AL, AT, AX, BW, BY, CC, CL, CN, CX, DE, FI, FR, GB, GG, HN, IM, IN, IR,\n   JE, LA, LI, LT, MM, MN, MY, NZ, PK, SE, SK, SM, UZ, VN, ZM, ZW\n - Updated short number metadata for region code(s):\n   AT, AX, BY, CF, CL, DE, ER, FI, FM, FR, GA, IN, IR, LI, LT, MM, MN, MY, NE,\n   NZ, OM, PK, SE, SM, UZ, ZA, ZM, ZW\n - Updated geocoding data for country calling code(s):\n   33 (en), 43 (de, en), 49 (en), 52 (en), 60 (en), 64 (en), 91 (en), 263 (en),\n   358 (en, sv), 370 (en)\n - Updated carrier data for country calling code(s):\n   44 (en), 56 (en), 60 (en), 64 (en), 84 (en), 91 (en), 92 (en), 95 (en),\n   98 (en, fa), 260 (en), 267 (en), 358 (en), 370 (en), 423 (en), 976 (en),\n   998 (en)\n - Updated / refreshed time zone meta data.\n\nOct 31, 2018: v8.10.0\nCode changes:\n - AsYouTypeFormatter changed to better choose between rules when dialling\n   locally; previously we used the international rules when the national prefix\n   was present since this would exclude the local-only rules. However, there are\n   some numbers that are not internationally diallable that *do* use the\n   national prefix, and this logic precluded formatting them correctly.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BB, BD, BO, CC, CO, CR, CU, CX, EC, EG, ER, ET, FO, GB, GE, GG, GH, GQ,\n   HR, HU, IE, IL, IM, IN, IQ, JE, KE, KG, KH, KI, KP, KZ, LA, LI, LK, LR, LU,\n   LY, MC, ME, MK, ML, MM, MU, NE, NF, NG, NO, NP, PE, PF, PG, PH, PL, PS, PY,\n   RS, RU, SA, SD, SE, SI, SJ, SL, SO, SY, TJ, TM, TR, TW, UA, UG, UY, VA, VE,\n   VN, VU, YE, ZM\n - Updated short number metadata for region code(s):\n   AU, BB, BD, BO, CC, CO, CR, CU, CX, EC, EG, ER, ET, FO, GB, GE, GG, GH, HR,\n   HU, IE, IL, IM, IQ, JE, KE, KG, KH, KI, KP, KZ, LA, LK, LU, LY, ME, MK, ML,\n   MU, NE, NF, NG, NO, NP, PE, PF, PG, PH, PL, PS, PY, RS, RU, SA, SD, SI, SJ,\n   SL, SO, SY, TJ, TR, TW, UA, UG, UY, VE, YE\n - Updated geocoding data for country calling code(s):\n   7 (en, ru), 44 (en), 47 (en), 58 (en, es), 61 (en), 90 (en, tr), 94 (en),\n   218 (en), 223 (en), 227 (en), 230 (en), 233 (en), 240 (en), 249 (en),\n   251 (en), 252 (en), 254 (en), 352 (de, en, fr), 380 (en, uk), 382 (en),\n   675 (en), 880 (en), 886 (en, zh, zh_Hant), 992 (en), 996 (en)\n - Updated carrier data for country calling code(s):\n   7 (en, ru), 44 (en), 51 (en), 57 (en), 61 (en), 63 (en), 90 (en), 223 (en),\n   230 (en), 232 (en), 233 (en), 234 (en), 240 (en), 252 (en), 254 (en),\n   256 (en), 260 (en), 352 (en), 385 (en), 386 (en), 389 (en), 506 (en),\n   593 (en), 595 (en), 886 (en), 963 (en), 972 (en), 992 (en), 995 (en),\n   996 (en)\n - Updated / refreshed time zone meta data.\n\nOct 16, 2018: v8.9.16\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AF, AO, BA, BB, BG, BM, BS, BT, CA, CN, DM, DO, GD, GU, HN, ID, IL, JM, KE,\n   KR, KY, LC, MP, TT, US, VG, VI\n - Updated short number metadata for region code(s):\n   AC, AG, AI, AO, AS, BA, BB, BG, BH, BM, BS, BT, CA, CH, DM, DO, EE, GD, GI,\n   GU, ID, IS, JM, KN, KY, LC, MP, MS, PR, SX, TC, TH, TT, US, VC, VG, VI\n - Updated geocoding data for country calling code(s):\n   62 (en), 244 (en, pt), 247 (en), 359 (bg, en), 387 (bs, en, sr), 1 (en)\n - New carrier data for country calling code(s): 380 (uk)\n - Updated carrier data for country calling code(s):\n   62 (en), 91 (en), 387 (en), 975 (en), 1 (en)\n - Updated / refreshed time zone meta data.\n\nOct 03, 2018: v8.9.15\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AE, AF, AL, AM, AX, AZ, BE, CD, CH, CL, EH, FI, GQ, HN, JO, JP, LB, LR, MW,\n   NL, OM, RE, RO, SE, TZ, VA, YT, ZA, ZW\n - Updated short number metadata for region code(s): AE, AF, AL, AM, AZ\n - Updated geocoding data for country calling code(s):\n   263 (en), 355 (en), 374 (en, hy, ru), 380 (en)\n - Updated carrier data for country calling code(s):\n   32 (en), 84 (en), 240 (en), 374 (en, ru), 994 (en)\n\nSep 18, 2018: v8.9.14\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AO, EE, HN, IL, IN, MY, SB, UG, VN\n - Updated carrier data for country calling code(s):\n   IN, RO, SB, TZ\n - Updated / refreshed time zone meta data.\n\nSep 05, 2018: v8.9.13\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BD, BE, CZ, KR, MU, NA, NL, PG, VN\n - Updated carrier data for country calling code(s):\n   32 (en), 60 (en), 62 (en), 84 (en), 241 (en), 264 (en), 357 (en), 675 (en),\n   678 (en), 973 (en)\n\nAug 21, 2018: v8.9.12\nCode changes:\n - Support Russian extension character \"доб\" as a valid one while parsing\n   the numbers.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BD, CC, CL, CX, FR, GI, IN, MY, NL, SA, US, VN\n - Updated short number metadata for region code(s): MY\n - New geocoding data for country calling code(s): 1640 (en)\n - Updated geocoding data for country calling code(s): 880 (en)\n - Updated carrier data for country calling code(s):\n   33 (en), 84 (en), 91 (en), 350 (en), 880 (en)\n\nJul 25, 2018: v8.9.11\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, CC, CX, HK, IT, KE, KW, MM, NL, LU, VA\n - Updated short number metadata for region code(s):\n   HK\n - New geocoding data for country calling code(s): 1975 (en)\n - Updated geocoding data for country calling code(s): 39 (en, it)\n - Updated carrier data for country calling code(s):\n   254 (en), 351 (en), 852 (en, zh, zh_Hant)\n\nJul 10, 2018: v8.9.10\nMetadata changes:\n - Updated phone metadata for region code(s): AT, GB, IN, KE, MM, VN\n - Updated short number metadata for region code(s): EE, IN, ZW\n - Updated geocoding data for country calling code(s): 95 (en)\n - Updated carrier data for country calling code(s): 91 (en), 254 (en)\n - Updated / refreshed time zone meta data.\n\nJun 26, 2018: v8.9.9\nMetadata changes:\n - Updated phone metadata for region code(s): KG, NU, SE, VN\n - Updated short number metadata for region code(s): AL, AR, EE, FR, NU, ZW\n - New geocoding data for country calling code(s): 996 (en)\n - Updated geocoding data for country calling code(s): 52 (es)\n - Updated carrier data for country calling code(s): 58 (en), 996 (en)\n - Updated / refreshed time zone meta data.\n\nJun 13, 2018: v8.9.8\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BL, BM, BS, CA, CI, DM, DO, GD, GF, GP, GU, IL, JM, KN, KY,\n   LC, MF, MP, MQ, MS, PR, SE, SX, TC, TT, US, VC, VG, VI, VN\n - Updated short number metadata for region code(s):\n   AL, AU, FR, KE, NZ, TH, UA, ZA\n - New geocoding data for country calling code(s): 385 (en), 880 (en)\n - Updated geocoding data for country calling code(s): 27 (en), 225 (en)\n - Updated carrier data for country calling code(s):\n   84 (en), 225 (en), 380 (en), 385 (en), 886 (en), 972 (en)\n\nMay 29, 2018: v8.9.7\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AX, BI, FI, HK, IR, ME, MO, NL, RE, UG, YT\n - Updated short number metadata for region code(s): AR, ME, PM, ZA\n - New geocoding data for country calling code(s): 60 (en), 380 (uk), 382 (en)\n - Updated geocoding data for country calling code(s):\n   267 (en), 380 (en), 504 (en)\n - Updated carrier data for country calling code(s):\n   257 (en), 262 (en), 380 (en), 852 (en, zh, zh_Hant), 853 (en)\n\nMay 15, 2018: v8.9.6\nMetadata changes:\n - Updated phone metadata for region code(s): IL, IN, NO, TR\n - Updated short number metadata for region code(s): FR, TR\n - New geocoding data for country calling code(s): 1445 (en)\n - Updated geocoding data for country calling code(s): 1345 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 972 (en), 1869 (en)\n\nMay 02, 2018: v8.9.5\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AD, AR, EC, FR, HK, IN, KG, LA, ML, PA, SD, SL, TH, TN, US, VI, WS\n - Updated short number metadata for region code(s): HK, WS\n - New geocoding data for country calling code(s): 1820 (en)\n - Updated geocoding data for country calling code(s): 54 (en, es)\n - Updated carrier data for country calling code(s):\n   30 (en), 91 (en), 93 (fa), 223 (en), 232 (en), 249 (en), 374 (ru), 685 (en),\n   852 (en, zh, zh_Hant), 995 (en), 996 (en), 1649 (en)\n\nApr 17, 2018: v8.9.4\nCode changes:\n - Update formatNumberForMobileDialing() to return international format instead of national format for Uzbek phone numbers.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AM, BR, CN, EC, GE, IN, IS, MX, MY, NE, PA, PY, SZ, TO, VC, ZW\n - Updated short number metadata for region code(s): BD\n - Updated geocoding data for country calling code(s): 268 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 354 (en), 507 (en), 593 (en), 595 (en), 995 (en), 1268 (en),\n   1284 (en)\n\nApr 04, 2018: v8.9.3\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AF, AM, BE, BF, CG, DE, EH, GP, IN, IR, KE, MA, ML, MV, TG, TR, TV\n - Updated short number metadata for region code(s): BE\n - New carrier data for country calling code(s): 688 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 93 (en), 212 (en), 223 (en), 226 (en), 254 (en), 385 (en)\n\nMar 13, 2018: v8.9.2\nMetadata changes:\n - Updated phone metadata for region code(s): CA, IN, KG, PA, SL\n - Updated carrier data for country calling code(s):\n   91 (en), 232 (en), 996 (en)\n\nMar 06, 2018: v8.9.1\nMetadata changes:\n - Updated phone metadata for region code(s): CL, FR, HK, IN, MU, MY\n - Updated carrier data for country calling code(s):\n   91 (en), 225 (en), 230 (en)\n\nFeb 20, 2018: v8.9.0\nCode changes:\n - Ported ShortNumberInfo to Javascript.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BD, BJ, CI, CN, IN, KW, SD, TG, TR, US\n - New geocoding data for country calling code(s): 1279 (en)\n - Updated carrier data for country calling code(s):\n   90 (en), 91 (en), 225 (en), 228 (en), 229 (en), 249 (en), 976 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 06, 2018: v8.8.11\nMetadata changes:\n - New phone metadata for region code(s): XK\n - Updated phone metadata for region code(s): BE, CV, ET, GW, HK, IN, MW, TT\n - New short number metadata for region code(s): XK\n - Updated short number metadata for region code(s): IS, ZA\n - New geocoding data for country calling code(s): 383 (en, sq, sr)\n - New carrier data for country calling code(s): 383 (en)\n - Updated carrier data for country calling code(s):\n   32 (en), 91 (en), 238 (en), 245 (en), 251 (en)\n\nJan 23, 2018: v8.8.10\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BJ, DE, HK, IN, IR, MM, MY, PW, SA, SI\n - New geocoding data for country calling code(s): 680 (en)\n - Updated geocoding data for country calling code(s): 966 (ar, en)\n - New carrier data for country calling code(s): 34 (en), 680 (en)\n - Updated carrier data for country calling code(s):\n   41 (en), 91 (en), 95 (en), 98 (en, fa), 229 (en), 250 (en), 381 (en),\n   386 (en), 852 (en, zh, zh_Hant)\n\nJan 09, 2018: v8.8.9\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, AX, BA, BB, BL, BM, BS, CA, CC, CN, CX, DM, DO, FI, FJ, GD, GF,\n   GP, GR, GU, HK, ID, IN, IS, JM, KN, KY, LC, MF, MK, MP, MQ, MS, NL, NP, NZ,\n   PM, PR, RE, RO, SX, TC, TG, TT, US, VC, VG, VI, YT, ZM, ZW\n - Updated short number metadata for region code(s): GB, GG, JE, ZW\n - New geocoding data for country calling code(s): 387 (bs, en, hr, sr)\n - Updated geocoding data for country calling code(s):\n   31 (en, nl), 61 (en), 263 (en), 381 (sr)\n - New carrier data for country calling code(s): 502 (en)\n - Updated carrier data for country calling code(s):\n   30 (en), 40 (en), 86 (en, zh, zh_Hant), 91 (en), 228 (en), 262 (en),\n   354 (en), 355 (en), 359 (en), 386 (en), 387 (en), 389 (en), 508 (en),\n   590 (en), 594 (en), 596 (en), 977 (en)\n\nDec 06, 2017: v8.8.8\nMetadata changes:\n - Updated phone metadata for region code(s): JM, MY\n - Updated short number metadata for region code(s): US, ZA\n - Updated carrier data for country calling code(s):\n   86 (en, zh, zh_Hant), 98 (en, fa)\n\nNov 28, 2017: v8.8.7\nBuild changes:\n - C++ library can now be built as 32- and 64-bit RPMs (#643).\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AX, CC, CX, EH, FI, GU, HK, IN, IR, MA, SM, ZM\n - Updated short number metadata for region code(s): AU, HR\n - Updated carrier data for country calling code(s):\n   7 (en, ru), 27 (en), 91 (en), 212 (en), 852 (en, zh, zh_Hant)\n\nNov 14, 2017: v8.8.6\nMetadata changes:\n - Updated alternate formatting data for country calling code(s):\n   34, 62, 91, 94, 971, 972\n - Updated phone metadata for region code(s):\n   AE, AR, AU, BB, BN, BR, BW, BY, BZ, CC, CL, CW, CX, DE, EC, EG, ET, GB, GE,\n   GG, GP, HK, HR, ID, IE, IL, IN, JO, KH, LK, LU, LV, LY, MG, MO, MR, MY, NL,\n   NR, OM, PH, PK, PM, PS, RE, RU, RW, SA, SE, SG, SH, SK, SM, TH, TJ, UZ, VN,\n   ZM, ZW\n - New geocoding data for country calling code(s): 61 (en)\n - Updated geocoding data for country calling code(s): 20 (en)\n - New carrier data for country calling code(s): 674 (en)\n - Updated carrier data for country calling code(s):\n   61 (en), 91 (en), 234 (en), 593 (en), 1246 (en)\n - Updated / refreshed time zone meta data.\n\nOct 30, 2017: v8.8.5\nMetadata changes:\n - Updated phone metadata for region code(s): AW, CA, CN, MV, NL, TR, UG\n - Updated short number metadata for region code(s): TR\n - Updated carrier data for country calling code(s):\n   86 (en, zh, zh_Hant), 297 (en)\n\nOct 16, 2017: v8.8.4\nBuild changes:\n - C++ geocoding build tools now use readdir, since readdir_r is deprecated.\n - Update the protobuf-java dependency used to build the C++ metadata from 2.5.0\n   to 3.0.0. This is an internal change and does not affect the users of the\n   library.\nMetadata changes:\n - Updated phone metadata for region code(s): AL, BS, FJ, JM, PH, US\n - Updated short number metadata for region code(s): KZ\n - New geocoding data for country calling code(s): 1726 (en)\n - Updated geocoding data for country calling code(s): 1242 (en)\n - Updated carrier data for country calling code(s):\n   20 (en), 679 (en), 1242 (en)\n\nOct 03, 2017: v8.8.3\nMetadata changes:\n - Updated phone metadata for region code(s): BS, FJ, IR, KR\n - Updated short number metadata for region code(s): KR\n - Updated carrier data for country calling code(s):\n   380 (en), 381 (en), 679 (en), 1242 (en)\n\nSep 19, 2017: v8.8.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   CA, CR, EG, FI, HN, IS, KM, KR, LU, MV, PA, TW, UG, US, VN\n - Updated short number metadata for region code(s): IE, IR, KE, TR\n - New geocoding data for country calling code(s): 1223 (en)\n - Updated geocoding data for country calling code(s): 84 (en, vi)\n - Updated carrier data for country calling code(s): 20 (en)\n\nSep 05, 2017: v8.8.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AL, AR, AT, AU, AX, AZ, BO, BR, CN, CO, DE, EG, FI, GB, GL, GW, ID, IE, IL,\n   IM, IN, JP, KI, KR, KW, LB, LI, LU, MV, MW, NA, NE, NG, PK, PY, SE, SI, SK,\n   SO, SR, TJ, TW, UA, UG, US, VN, ZW\n - Updated short number metadata for region code(s): KR\n - New geocoding data for country calling code(s): 380 (en), 1838 (en)\n - Updated geocoding data for country calling code(s): 84 (en, vi), 686 (en)\n - Updated carrier data for country calling code(s):\n   60 (en), 380 (en), 597 (en), 686 (en)\n\nAug 21, 2017: v8.8.0\nCode changes:\n - Improve parsing logic to be smarter about national-prefix detection &\n   stripping based on possible-lengths (IS_POSSIBLE_LOCAL_ONLY and\n   INVALID_LENGTH). Enables e.g. adding Iran short-codes starting with \"096\"\n   without the need to hack IR's national prefix parsing config.\n - Logging changes: Don't log client-provided phone numbers.\n - Add constants for C++ PhoneNumberUtil enums' max values.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AX, BF, BG, DM, EG, FI, IN, IR, KY, KZ, LC, MT, NI, PL, RU, SZ, TH, US, VC\n - Updated short number metadata for region code(s): BA, IR, PL, RU, TH, ZA\n - New geocoding data for country calling code(s): 52 (es), 1986 (en)\n - Updated geocoding data for country calling code(s): 52 (en), 268 (en)\n - New carrier data for country calling code(s): 1345 (en)\n - Updated carrier data for country calling code(s):\n   20 (en), 226 (en), 268 (en), 356 (en), 505 (en), 1441 (en), 1758 (en),\n   1767 (en), 1784 (en)\n\nAug 02, 2017: v8.7.1\nCode changes:\n - Documentation fix for getNumberType\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AM, BJ, BO, CL, EE, EG, GD, HK, IN, KE, KW, LK, US\n - Updated short number metadata for region code(s): BJ, EE, EG, IN, KW\n - New geocoding data for country calling code(s): 1564 (en)\n - New carrier data for country calling code(s): 1268 (en)\n - Updated carrier data for country calling code(s):\n   56 (en), 254 (en), 374 (en), 852 (en, zh, zh_Hant), 1473 (en)\n - Updated / refreshed time zone meta data.\n\nJul 18, 2017: v8.7.0\nCode changes:\n - New method getSupportedCallingCodes() API to return all the calling codes\n   that the library considers valid, both for geographical and non-geographical\n   entities.\n - Added isSmsServiceForRegion(PhoneNumber, RegionCode) API in C++ and Java\n   short number info libraries. An SMS service is where the primary or only\n   intended usage is to receive and/or send text messages (SMSs). This includes\n   MMS as MMS numbers downgrade to SMS if the other party isn't MMS-capable. The\n   is_sms_service metadata is also serialized for the first time.  JS is not\n   affected because it doesn't have short numbers.\n - Documentation update for private variables VALID_PUNCTUATION and\n   SINGLE_INTERNATIONAL_PREFIX, also renaming the latter from\n   UNIQUE_INTERNATIONAL_PREFIX.\n - [Java only] Changing public APIs that take in strings representing phone\n   numbers or parts of phone numbers to take in CharSequence instead. Updating\n   some of the internal methods to do the same. This affects ShortNumberInfo and\n   PhoneNumberUtil, namely the following methods:\n   - parse & parseAndKeepRawInput\n   - formatWithCarrierCode & formatWithPreferredCarrierCode\n   - isNumberMatch\n   - isPossibleNumber\n   - isAlphaNumber\n   - normalizeDigitsOnly & normalizeDiallableCharsOnly\n - [C++ only] Removing most of the \"using std::*\" statements in\n   phonenumberutil.h file, leaving only using std::string. Changing the .cc and\n   test files to prefix \"std::\" where this was missing.\nMetadata changes:\n - New alternate formatting data for country calling code(s): 856\n - Updated phone metadata for region code(s):\n   BF, FI, GG, HK, IM, JE, KG, LA, MX, MY, PS, SA, VN, ZW\n - New short number metadata for region code(s): PS\n - Updated short number metadata for region code(s): TR, ZA\n - New geocoding data for country calling code(s): 52 (en), 976 (en)\n - Updated geocoding data for country calling code(s):\n   84 (en, vi), 223 (en), 358 (en, fi, sv)\n - Updated carrier data for country calling code(s):\n   40 (en), 44 (en), 91 (en), 226 (en), 966 (en), 996 (en)\n - Updated / refreshed time zone meta data.\n\nJul 04, 2017: v8.6.0\nCode changes:\n - Removing leading_zero_possible from the metadata and all the places it is\n   referenced in the build and prod code. Will be removed from the metadata\n   proto itself in a subsequent release. This should not affect users of the\n   library - the only place it was used was FormatInOriginalFormat, and only\n   initially to try and avoid modifying the input number by removing/adding\n   digits inadvertently. Now this is checked at the end of the method anyway.\n   However slight formatting differences with this method on invalid numbers\n   starting with 0s may be noticed in some countries.\n - Bug fix for Javascript: getNationalSignificantNumber used to print the string\n   \"null\" for empty phone number objects, now it returns an empty string.\n - Updated the documentation for the isNumberGeographical API.\n - Small comment improvements for parse() method to point users at\n   parseAndKeepRawInput().\n - Added a new enum for CountryCodeSource called UNSPECIFIED. This is used as a\n   default value, and will be returned if someone calls parse() and then\n   getCountryCodeSource() on the result. If users want an actual value for this\n   then they should call parseAndKeepRawInput() instead; the values that were\n   previously returned after calling this method will not change.\n - Deletion of the possible number pattern in the phonemetadata.proto file and\n   all generated code. This has not been used for a long time.\nMetadata changes:\n - Updated phone metadata for region code(s): AU, IL, IM, IN, KE, MM, PM, UA\n - Updated geocoding data for country calling code(s): 95 (en)\n - New carrier data for country calling code(s): 508 (en)\n - Updated carrier data for country calling code(s):\n   95 (en), 254 (en), 972 (en)\n\nJun 20, 2017: v8.5.2\nMetadata changes:\n - New alternate formatting data for country calling code(s): 64\n - Updated phone metadata for region code(s):\n   AL, AX, BR, CM, FI, GE, GI, IE, IN, IR, JO, LA, LR, MK, NZ, PK, SI, TL, UA\n - Updated short number metadata for region code(s): IR, TH, ZA\n - New carrier data for country calling code(s): 503 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 213 (en), 386 (en), 389 (en), 509 (en), 995 (en)\n\nJun 06, 2017: v8.5.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BA, BL, GB, GF, GP, GU, KW, MF, PG, PL, RE, VN, YT, ZW\n - Updated short number metadata for region code(s): IR, PG\n - Updated geocoding data for country calling code(s):\n   84 (en, vi), 263 (en), 675 (en)\n - New carrier data for country calling code(s): 262 (en), 590 (en), 594 (en)\n - Updated carrier data for country calling code(s):\n   48 (en), 387 (en), 675 (en), 1 (en)\n\nMay 23, 2017: v8.5.0\nCode changes:\n - Add canBeInternationallyDialled() public API in Java and C++ PhoneNumberUtil.\n   This was already in JS.\nBuild changes:\n - When compiling binary metadata from XML metadata, we no longer set the\n   national number pattern  to \"NA\" for non-existent data.\nMetadata changes:\n - Updated phone metadata for region code(s): BF, GB, IL, IM, MQ, SL, US, VN\n - Updated short number metadata for region code(s): BO, BR\n - Updated geocoding data for country calling code(s): 1 (en), 84 (en, vi)\n - New carrier data for country calling code(s): 596 (en)\n - Updated carrier data for country calling code(s): 232 (en), 972 (en)\n\nMay 10, 2017: v8.4.3\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AX, BF, CG, FI, GG, GH, GI, IM, IR, JE, JM, VN\n - Updated short number metadata for region code(s): AX, BR, FI, GI, HK\n - Updated geocoding data for country calling code(s): 84 (en), 233 (en)\n - Updated carrier data for country calling code(s):\n   233 (en), 358 (en), 1876 (en)\n\nApr 25, 2017: v8.4.2\nCode changes:\n - Small fix for possible out-of-bounds exception on RFC3966 input where no\n   phone context was actually provided.\nMetadata changes:\n - Updated phone metadata for region code(s): BF, ET, IN, KE, LU, VN\n - Updated short number metadata for region code(s): KE\n - Updated carrier data for country calling code(s):\n   84 (en), 91 (en), 226 (en), 251 (en), 254 (en), 352 (en)\n\nApr 11, 2017: v8.4.1\nCode changes:\n - Changing isPossibleWithReason to return the enums INVALID_LENGTH and\n   IS_POSSIBLE_LOCAL_ONLY, where these apply. isPossibleNumber continues to\n   consider IS_POSSIBLE or IS_POSSIBLE_LOCAL_ONLY numbers as possible to dial.\n   Announcement: https://groups.google.com/d/msg/libphonenumber-discuss/sPhYzdzFCmg/6tYsS1f6DgAJ\n - Doc updates for getRegionCodeForNumber to clarify that it does not\n   work for short-codes or invalid numbers.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AF, AL, CI, CL, DE, HT, IL, MP, VN\n - Updated short number metadata for region code(s): CZ, DE\n - Updated geocoding data for country calling code(s): 84 (en, vi)\n - Updated carrier data for country calling code(s):\n   84 (en), 93 (en), 225 (en), 509 (en), 972 (en)\n - Updated / refreshed time zone meta data.\n\nMar 28, 2017: v8.4.0\nCode changes:\n - Doc changes to update references to ISO country codes to CLDR region codes,\n   which are what we actually use. Notice in some of the mapper files the\n   country code is still the ISO one, because it's used as part of a description\n   of a language only (e.g. zh-TW vs zh-CN). Edited the language comments there\n   since they can be two *or* three letters (c.f. fil for filipino). Also edited\n   the comment for leadingDigits at the territory level in the\n   phonemetadata.proto file.\n - New API methods: isPossibleNumberForType and\n   isPossibleNumberForTypeWithReason, along with getSupportedTypesForRegion and\n   getSupportedTypesForNonGeoEntity. These allow you to query which types (e.g.\n   Mobile) exist for a particular region, and work out if a number is possible\n   for that type (this is a simple length check) rather than for the region as a\n   whole.\nMetadata changes:\n - Updated phone metadata for region code(s): BF, FJ, GB, HK, HT, IN, RO\n - Updated short number metadata for region code(s): BR, IN, RO, TR\n - Updated geocoding data for country calling code(s): 82 (hi, iw, tr)\n - Updated carrier data for country calling code(s):\n   226 (en), 509 (en), 593 (en), 679 (en)\n\nMar 14, 2017: v8.3.3\nCode changes:\n - Doc fix for PhoneNumberOfflineGeocoder to explain the cases where an empty\n   string might be returned.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BF, BM, BQ, BS, BW, CA, DM, DO, ES, GD, GU, HK, HR, IN, JM,\n   JO, KN, KY, LC, ME, MP, MS, MX, PH, PR, SR, SX, TC, TH, TT, US, VC, VG, VI\n - Updated short number metadata for region code(s): ES, HR\n - Updated geocoding data for country calling code(s):\n   34 (en, es), 84 (vi), 91 (en)\n - New carrier data for country calling code(s): 264 (en)\n - Updated carrier data for country calling code(s):\n   55 (en), 63 (en), 66 (en), 91 (en), 233 (en), 599 (en)\n\nFeb 28, 2017: v8.3.2\nMetadata changes:\n - Updated phone metadata for region code(s): BS, CI, HT, IL, IN, IS, KE, SK\n - Updated short number metadata for region code(s): KE\n - Updated geocoding data for country calling code(s): 254 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 225 (en), 254 (en), 354 (en), 509 (en), 1242 (en)\n\nFeb 20, 2017: v8.3.1\nCode changes:\n - Making getNationalSignificantNumber more robust in the face of malicious\n   input. This now ignores the number_of_leading_zeros if they are less than\n   zero.\nMetadata changes:\n - New alternate formatting data for country calling code(s): 39\n - Updated phone metadata for region code(s): BS, VN\n - Updated geocoding data for country calling code(s):\n   62 (en, id), 84 (en), 374 (en, hy)\n - Updated carrier data for country calling code(s): 7 (ru), 91 (en), 1242 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 14, 2017: v8.3.0\nCode changes:\n - Added two new enum values to ValidationResult - IS_POSSIBLE_LOCAL_ONLY and\n   INVALID_LENGTH. Added more documentation to the existing values; see the\n   javadoc for when these are going to be used. Note that the API for\n   IsPossibleNumberWithReason has not yet been changed to return these values.\n   IS_POSSIBLE_LOCAL_ONLY will be returned for some values which currently\n   return IS_POSSIBLE, and INVALID_LENGTH will be returned for some values which\n   currently return TOO_LONG.\n - Fix for isNumberMatch to ignore the numberOfLeadingZeros field when comparing\n   numbers unless hasItalianLeadingZero is true, and to consider default values\n   to match the same value when explicitly set for these two fields. This fix\n   shouldn't be needed for anyone correctly creating phone numbers using \"parse\"\n   as recommended.\n - C++ only: Fix for ExactlySameAs when comparing phone numbers to include\n   comparison of the number_of_leading_zeros field.\n - C++ only: Updating maximum length for NSN to be 17 (matches Java and JS)\nMetadata changes:\n - Updated phone metadata for region code(s): IN, MU, RE, TG, TJ, TT, US\n - New geocoding data for country calling code(s):\n   218 (en), 972 (iw), 1283 (en), 1442 (en), 1458 (en), 1470 (en), 1475 (en),\n   1531 (en), 1534 (en), 1539 (en), 1680 (en), 1681 (en), 1762 (en)\n - Updated geocoding data for country calling code(s):\n   1206 (en), 1253 (en), 1360 (en), 1425 (en), 1509 (en)\n - Updated carrier data for country calling code(s):\n   57 (en), 91 (en), 297 (en), 992 (en), 1868 (en)\n\nFeb 02, 2017: v8.2.0\nCode changes:\n - Made normalizeDiallableCharsOnly() API in PhoneNumberUtil (Java) public. This\n   method is already public in the C++ implementation. It has also now been\n   added to the Javascript implementation.\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 91\n - Updated phone metadata for region code(s):\n   AU, AX, BY, BZ, FR, GY, IN, MC, NA, SJ, TG, TT, VN\n - Updated short number metadata for region code(s): HR, TG\n - Armenia geocoding data that is in Armenian language is moved to right language\n   code (hy).\n - Updated geocoding data for country calling code(s): 91 (en), 374 (en, ru)\n - Updated carrier data for country calling code(s): 91 (en)\n\nJan 25, 2017: v8.1.0\nCode changes:\n - Introduced new isCarrierSpecificForRegion() API in ShortNumberInfo class.\n   This determines whether the provided short code is carrier-specific or\n   not when dialed from the given region.\nMetadata changes:\n - New alternate formatting data for country calling code(s): 52\n - Updated alternate formatting data for country calling code(s): 62\n - Updated phone metadata for region code(s):\n   AR, DJ, GB, GG, GH, ID, IM, IN, JE, MA, MQ, MZ, RO, ZA\n - Updated short number metadata for region code(s): ZA\n - Updated geocoding data for country calling code(s): 27 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 93 (en, fa), 233 (en), 253 (en), 258 (en)\n\nJan 11, 2017: v8.0.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BR, CI, CL, CN, CR, DE, FR, GB, GW, HN, IL, IN, KM, KZ, NG, PG, SC, SK, SO,\n   TT, UA, ZA\n - Updated short number metadata for region code(s): BH, BR, SK\n - New geocoding data for country calling code(s): 675 (en)\n - Updated geocoding data for country calling code(s):\n   7 (en, ru), 86 (en, zh), 252 (en), 374 (en), 504 (en)\n - New carrier data for country calling code(s): 7 (ru), 44 (en), 269 (en)\n - Updated carrier data for country calling code(s):\n   7 (en), 62 (en), 86 (en, zh, zh_Hant), 91 (en), 225 (en), 234 (en), 245 (en),\n   252 (en)\n\nDec 07, 2016: v8.0.0\nCode changes:\n - Deleted deprecated methods in ShortNumberInfo that work on strings, instead\n   of phone number objects. These have been marked deprecated for months. Any\n   users of these methods should call PhoneNumberUtil.parse first to create a\n   PhoneNumber object, and pass this in.\n - Support semicolon as extension character while parsing phone numbers. This\n   is not applicable when you are trying to find the phone numbers.\n - Updated JavaScript to throw an error rather than a string. As a result, users\n   doing custom behavior depending on the value of the error must now compare\n   to the value of e.message.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AM, BD, BR, CI, ES, IN, KI, KR, LI, MC, MM, TZ\n - Updated short number metadata for region code(s): KI, MV, MY\n - New geocoding data for country calling code(s): 227 (en), 240 (en), 255 (en)\n - Updated geocoding data for country calling code(s): 95 (en), 686 (en)\n - New carrier data for country calling code(s): 423 (en)\n - Updated carrier data for country calling code(s):\n   90 (en), 91 (en), 95 (en), 255 (en), 374 (en, ru)\n\nNov 23, 2016: v7.7.5\nCode changes:\n - Removing all references to possible_number_pattern other than the proto\n   buffer itself (and derived files, or hand-crafted files based on it.) This\n   information is no longer present in the binary.\n - Refactored metadata loading and removed synchronization for all kinds of\n   metadata. Clients may experience quicker loading of alternate formats and\n   short number metadata, but no change is required for callers of the library.\n - Reduced visibility of `public` internal API\n   `PhoneNumberUtil.createInstance(MetadataSource)` to `private`. MetadataSource\n   and all its implementations are non-public so this should not affect public\n   usage of the library.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BB, BD, ES, HN, IN, KR, KW, MC, NL, PH, PK, SH, TW, VG, ZW\n - Updated short number metadata for region code(s):\n   AF, AG, AM, AR, AW, AZ, BD, BM, BQ, BW, CD, CI, CM, CO, CW, DZ, GD, GE, GN,\n   GT, GY, HN, HT, IE, IN, IQ, JM, JO, KE, KG, KH, KW, LV, NO, SG, SV, UY\n - Updated geocoding data for country calling code(s): 504 (en)\n - New carrier data for country calling code(s): 886 (en), 1284 (en)\n - Updated carrier data for country calling code(s): 63 (en), 92 (en)\n\nNov 09, 2016: v7.7.4\nGitHub project changes:\n - Changed tag to vX.Y.Z from libphonenumber-X.Y.Z; this may affect ports and\n   derived projects.\nMetadata structure changes in XML file:\n - Mobile and Fixed-Line blocks are no longer assumed to inherit missing data\n   from the GeneralDesc, but are treated like every other phone number type.\n   This means that for the non-geographical country codes, like +800, the\n   example number has been moved from generalDesc to the relevant number types,\n   and the code in getExampleNumberForNonGeoEntity has been changed to look at\n   these sub-types for an example number.\n   This also means that the \"NA\" and \"-1\" blocks present in the metadata to\n   indicate that no mobile or fixed-line numbers appear for the entity have been\n   removed.\n   There should no longer be an exampleNumber at the generalDesc level, but it\n   should be present at every PhoneNumberDesc with data.\nCode changes:\n - Using new possibleLengthInfo to decide whether a short number is the right\n   length or not. This could result in more specific results; whereas before, a\n   number from length 3 to length 6 may have been deemed possible, now we may\n   exclude a number of length 5.\n - Add hash (#) as a diallable character. Numbers with # in them will no longer\n   have formatting applied in formatInOriginalFormat, and\n   normalizeDiallableCharsOnly now retains the # symbol.\n - getExampleNumberForNonGeoEntity has been changed to look at the specific\n   number types, not just the generalDesc, for the example numbers; this is a\n   necessary change after the metadata structure change detailed above.\nMetadata changes:\n - Updated phone metadata for region code(s): AD, AE, IN, IR, MU, MV, NG, PG\n - Updated short number metadata for region code(s): NL, SN\n - New geocoding data for country calling code(s):\n   960 (en), 1249 (en), 1343 (en), 1579 (en), 1581 (en)\n - Updated geocoding data for country calling code(s):\n   1782 (en), 1867 (en), 1902 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 234 (en), 971 (en)\n\nOct 26, 2016: libphonenumber-7.7.3\nInternal changes:\n - Fixed Phonemetadata.java not to merge from a NumberFormat's unset bool\n   national_prefix_optional_when_formatting.\n - Added MetadataFilter, an internal API which is under development and subject\n   to backwards-incompatible changes without notice or guarantees.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   882, AG, AI, AS, BB, BM, BR, BS, CA, DM, DO, GD, GU, HU, IN, JM, KN, KY, KZ,\n   LC, MP, MS, PR, SX, TC, TR, TT, UG, US, VC, VG, VI\n - Updated short number metadata for region code(s): UY\n - New geocoding data for country calling code(s): 1463 (en), 358 (sv)\n - Removed geocoding data for country calling code(s): 358 (se)\n - Updated geocoding data for country calling code(s): 7 (en, ru)\n - Updated carrier data for country calling code(s):\n   91 (en), 256 (en), 1876 (en)\n\nOct 06, 2016: libphonenumber-7.7.2\nCode changes:\n - Stop setting empty preferred_domestic_carrier_code, and if we are passed such\n   a number then treat the empty field as if unset.\nMetadata changes:\n - Updated phone metadata for region code(s): CL, FR, KE, MU, NG\n - Updated short number metadata for region code(s):\n   EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, OM, PA, PE, PF, PG, PH,\n   PK, PL, PM, PR, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG,\n   SH, SI, SJ, SK, SL, SM, SN, SO, SR, ST, SV, SX, SY, SZ, TC, TD, TG, TH, TJ,\n   TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, US, UY, UZ, VA, VC, VE, VG, VI,\n   VN, VU, WF, WS, YE, YT, ZA, ZM, ZW\n - Updated geocoding data for country calling code(s): 56 (en, es)\n - Updated carrier data for country calling code(s):\n   230 (en), 234 (en), 254 (en)\n\nSep 27, 2016: libphonenumber-7.7.1\nBuild changes:\n - OSGi support added to Manifest information when building jar (#1300)\n - BuildMetadataJsonFromXml changed to output possible lengths for JS build\n - Fix geocoding file generation to handle language codes that are not just\n   two letters long properly and to process filenames in the same order.\nCode changes:\n - Switching the internal implementation of isPossible and related functions\n   to use the new possibleLengths metadata. This affects a lot of countries,\n   making isPossible more restrictive as more precise data is available. It\n   also affects parsing ambiguous and invalid numbers, as we decide whether\n   to strip a possible national prefix (1) or country code based on the length\n   of the number and whether it is possible before or after this.\n - Formatting, naming (LOGGER -> logger) and comment tweaks to follow style\n   guide\n - Removal of unneeded canBeGeocoded method in the\n   PhoneNumberToTimeZonesMapper.java, using phoneNumberUtil instead\nMetadata changes:\n - Updated phone metadata for region code(s):\n   800, 808, 870, 878, 881, 882, 883, 888, 979, AG, AM, BD, BF, CL, CO, EC, ET,\n   GB, GG, GH, IN, LR, MD, MQ, SH, SN, TA, TH, TR\n - Updated short number metadata for region code(s):\n   AC, AD, AE, AF, AG, AI, AL, AM, AO, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD,\n   BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BW, BY, BZ, CA, CC,\n   CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ,\n   DK, DM, DO, DZ, MD\n - New carrier data for country calling code(s): 593 (en)\n - Updated carrier data for country calling code(s):\n   49 (en), 56 (en), 66 (en), 90 (en), 91 (en), 226 (en), 231 (en), 373 (en),\n   852 (zh_Hant)\n\nSep 19, 2016: libphonenumber-7.7.0\nCode changes:\n - Removed the dependency on protobuf (protobuf-javanano) from the Java library,\n   resurrecting\n   java/libphonenumber/src/com/google/i18n/phonenumbers/Phonemetadata.java\n   which was present until libphonenumber-7.1.1.\n   Does not affect the C++ or JavaScript libraries.\n\nSep 07, 2016: libphonenumber-7.6.1\nCode changes:\n - Phonemetadata.java has two more fields to represent possible lengths of phone\n   numbers. Changed BuildMetadataFromXml (and the resultant jar) to alter the way\n   that metadata about possible-lengths information is consumed when constructing\n   metadata to populate these.\n   Discussion list email:\n   https://groups.google.com/forum/#!topic/libphonenumber-discuss/75TOpTFVi08\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AM, AX, BY, CD, FI, IN, KR, MA, NA, NL, PK, SY\n - Updated short number metadata for region code(s): BR, GB, NL, NZ\n - New geocoding data for country calling code(s):\n   82 (pl, pt, ro, ru, sl, sr, uk, vi)\n - Updated carrier data for country calling code(s):\n   27 (en), 91 (en), 243 (en), 963 (en)\n\nAug 24, 2016: libphonenumber-7.6.0\nCode changes:\n - Refactored metadata loading and closed all streams after loading.\n - Made isNumberGeographical public, and changed the geocoder to\n   use this when checking whether to give a detailed answer or country-level\n   only.\nBuild changes:\n - Use protobuf-javanano 3.0.0-alpha-7 from Maven Central.\nMetadata changes:\n - Updated phone metadata for region code(s): EH, ET, JM, MA, SK, SN, SY, ZM\n - Updated short number metadata for region code(s): ZA\n - Updated geocoding data for country calling code(s): 212 (en)\n - New carrier data for country calling code(s):\n   86 (zh, zh_Hant), 852 (zh, zh_Hant), 963 (en)\n - Updated carrier data for country calling code(s):\n   86 (en), 212 (en), 251 (en), 421 (en)\n - Deleted unsupported SingleFilePhoneNumberMetadataProto\n\nAug 10, 2016: libphonenumber-7.5.2\nMetadata changes:\n - Updated phone metadata for region code(s): CO, IN, ME\n - Updated short number metadata for region code(s): IN\n - New carrier data for country calling code(s): 382 (en)\n - Updated carrier data for country calling code(s): 91 (en)\n\nJul 27, 2016: libphonenumber-7.5.1\nMetadata changes:\n - Updated alternate formatting data for country calling code(s): 595\n - Updated phone metadata for region code(s): BD, BG, CI, IN, PY, TJ\n - Updated short number metadata for region code(s): IN\n - New geocoding data for country calling code(s):\n   82 (bg, ca, el, es, fi, hi, hu, iw, ja, tr)\n - Updated geocoding data for country calling code(s): 44 (en)\n - New carrier data for country calling code(s): 374 (ru)\n - Updated carrier data for country calling code(s):\n   91 (en), 374 (en), 992 (en)\n\nJul 22, 2016: libphonenumber-7.5.0\nCode changes:\n - Simplify concurrent metadata loading in MultiFileMetadataSourceImpl and\n   reduce points of contention.\n\nJul 14, 2016: libphonenumber-7.4.5\nMetadata changes:\n - Updated phone metadata for region code(s): CN, HN, IN, KW, LV, TC\n - Updated short number metadata for region code(s): AE, BR, GB, ZA\n - New geocoding data for country calling code(s): 93 (fa), 992 (en)\n - Updated geocoding data for country calling code(s):\n   91 (en), 98 (en, fa), 371 (en), 504 (en), 1 (en)\n - Updated carrier data for country calling code(s): 91 (en)\n\nJun 29, 2016: libphonenumber-7.4.4\nMetadata changes:\n - Updated phone metadata for region code(s): AZ, BH, HN, IN, US\n - Updated short number metadata for region code(s): BR, IN, SK\n - New geocoding data for country calling code(s): 994 (en),\n - Updated geocoding data for country calling code(s): 504 (en), 1 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 973 (en), 994 (en)\n\nJun 15, 2016: libphonenumber-7.4.3\nMetadata changes:\n - Updated phone metadata for region code(s):\n   HK, HN, IN, KN, KW, SK, SN, TH, TZ\n - Updated short number metadata for region code(s): AR, NO\n - New geocoding data for country calling code(s): 93 (en), 504 (en)\n - New carrier data for country calling code(s): 93 (fa), 98 (fa)\n - Updated carrier data for country calling code(s):\n   66 (en), 91 (en), 255 (en), 421 (en)\n\nJun 01, 2016: libphonenumber-7.4.2\nCode changes:\n - Make C++ code forward compatible with an upcoming RE2 change.\nMetadata changes:\n - Updated phone metadata for region code(s): AE, BZ, GU, IN, KR\n - Updated short number metadata for region code(s): BR\n - New geocoding data for country calling code(s): 501 (en)\n - Updated carrier data for country calling code(s):\n   91 (en), 971 (en), 1671 (en)\n\nMay 18, 2016: libphonenumber-7.4.1\nMetadata changes:\n - Updated phone metadata for region code(s): FR, IL, KR\n - Updated carrier data for country calling code(s): 972 (en)\n\nMay 11, 2016: libphonenumber-7.4.0\nMaven changes:\n - Repackage protobuf runtime dependency to prevent conflicts with clients'\n   protobuf dependencies. Backwards-compatible, so no changes needed for clients\n   who could use the previous release, but enables those with their own protobuf\n   dependencies to use this and future releases without workarounds.\n\nMay 03, 2016: libphonenumber-7.3.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BR, ET, IN, KH, ML, NO, SB, TJ, US\n - Updated short number metadata for region code(s): CA, ML, US\n - New geocoding data for country calling code(s): 223 (en)\n - Updated geocoding data for country calling code(s):\n   27 (en), 55 (en, pt), 1 (en)\n - Updated carrier data for country calling code(s):\n   61 (en), 91 (en), 223 (en), 251 (en), 677 (en), 992 (en)\n\nApr 20, 2016: libphonenumber-7.3.1\nMetadata changes:\n - Updated phone metadata for region code(s): DE, DJ, IL, IN, KH\n - Updated short number metadata for region code(s): BR\n - Updated carrier data for country calling code(s):\n   91 (en), 855 (en), 972 (en)\n\nApr 05, 2016: libphonenumber-7.3.0\nCode changes:\n - Added java/pending_code_changes.txt for contributors to track code changes\n   between releases.\n - Reduced minimum required version of cmake to 2.8.\n - Added cmake installation instructions for Mac.\n - Added getExampleNumberForType that doesn't take in a region, and\n   getInvalidExampleNumber\n - Improvements to javadoc for parse method\n - Update isNumberGeographical to return true for geographical mobile numbers.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BJ, BZ, CI, ET, GQ, KE, KW, ML, NO, OM, VN\n - Updated short number metadata for region code(s): KE\n - Updated geocoding data for country calling code(s):\n   84 (en), 251 (en), 254 (en)\n - Updated carrier data for country calling code(s):\n   84 (en), 225 (en), 229 (en), 254 (en), 968 (en)\n\nMar 21, 2016: libphonenumber-7.2.8\nMetadata changes:\n - Updated phone metadata for region code(s): CL, CN, FO, KE, SE, SO\n - Updated short number metadata for region code(s): FO\n - Updated geocoding data for country calling code(s): 86 (en, zh)\n - Updated carrier data for country calling code(s):\n   86 (en), 252 (en), 254 (en)\n\nMar 09, 2016: libphonenumber-7.2.7\nCode changes:\n - Update nationalPrefixOptionalWhenFormatting documentation.\nMetadata changes:\n - Updated phone metadata for region code(s): CN, IN, MO, TK\n - Updated short number metadata for region code(s): FR\n - Updated carrier data for country calling code(s): 853 (en)\n - Updated / refreshed time zone meta data.\n\nFeb 25, 2016: libphonenumber-7.2.6\nMetadata changes:\n - Updated phone metadata for region code(s): DJ, MA, NA, US\n - Updated short number metadata for region code(s): KR\n - New geocoding data for country calling code(s): 1380 (en)\n - Updated geocoding data for country calling code(s): 212 (en)\n\nFeb 10, 2016: libphonenumber-7.2.5\nCode changes:\n - Fix two places in demo where NPEs can occur on bad input.\n - Fix an IllegalStateException when getMetadataForNonGeographicalRegion is\n   called with a country calling code which isn't a non-geographic entity.\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BM, BS, CA, DM, DO, ET, GD, GU, JM, KN, KY, LC, MP, MS, PR,\n   SE, SK, SX, TC, TT, US, VC, VG, VI\n - Updated geocoding data for country calling code(s): 46 (en)\n - Updated carrier data for country calling code(s): 251 (en)\n\nJan 28, 2016: libphonenumber-7.2.4\n - First release to automatically remove obsolete geocoding files\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BW, CA, CI, CK, GM, IN, NA, NG, PG, TD, TM\n - Updated short number metadata for region code(s): PT\n - New geocoding data for country calling code(s): 1825 (en)\n - Removed geocoding data for country calling code(s):\n   1726 (en), 1730 (en), 1838 (en), 1851 (en), 1888 (en), 225 (fr), 242 (fr),\n   269 (fr), 238(pt), 55 (pt)\n - Updated carrier data for country calling code(s):\n   91 (en), 225 (en), 234 (en), 235 (en), 675 (en), 993 (en)\n\nJan 08, 2016: libphonenumber-7.2.3\nBackwards-incompatible code changes:\n - Removed deprecated ShortNumberUtil.java\nOther code changes:\n - Updated the demo:\n   added short number support;\n   added permalink;\n   added direct link to file an issue\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BR, CC, CR, CW, CX, ET, HN, KR, SI, TV, WF\n - Updated short number metadata for region code(s): FR, HR, HU, IT, KR, LV, TV\n - New geocoding data for country calling code(s): 688 (en)\n - Updated carrier data for country calling code(s):\n   61 (en), 251 (en), 506 (en), 599 (en)\n\nDec 15, 2015: libphonenumber-7.2.2\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AT, BD, BR, CC, CX, CY, FI, ID, IS, KI, MM, TN, VC\n - Updated short number metadata for region code(s):\n   AT, BG, CY, CZ, DE, DK, EE, FI, GB, GR, ID, IE, IS, LT, LU, MT, NL, PL, RO,\n   SI, SK\n - New geocoding data for country calling code(s): 95 (en)\n - Updated carrier data for country calling code(s):\n   216 (en), 354 (en), 357 (en), 686 (en)\n\nNov 11, 2015: libphonenumber-7.2.1\n - Fix to libphonenumber-7.2.0\nMetadata changes: None\n\nNov 10, 2015: libphonenumber-7.2.0\n* Broken, do not use *\nCode changes:\n - Phonemetadata now generated as nanoproto\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BI, BT, IL, MN, MO, NP, RU, SK, VG\n - Updated short number metadata for region code(s): BT, DK\n - New geocoding data for country calling code(s): 972 (en), 975 (en)\n - New carrier data for country calling code(s): 853 (en)\n - Updated carrier data for country calling code(s):\n   45 (en), 257 (en), 421 (en), 964 (en), 972 (en), 975 (en), 976 (en)\n - Updated / refreshed time zone meta data.\n\nOct 29, 2015: libphonenumber-7.1.1\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AT, BB, BR, GW, ID, MD, OM, SO, TT\n - Updated short number metadata for region code(s): BB, NO\n - New geocoding data for country calling code(s): 968 (en)\n - Updated geocoding data for country calling code(s): 245 (en, pt)\n - Updated carrier data for country calling code(s):\n   62 (en), 245 (en), 252 (en), 373 (en), 968 (en), 1246 (en)\n\nOct 08, 2015: libphonenumber-7.1.0\nAPI changes:\n - New MetadataSource implementation that reads from a single metadata file with\n   all regions' phone number metadata.\nMetadata changes:\n - Updated phone metadata for region code(s): BR, BS, HT, IR, KW, MC, PA, VU\n - Updated carrier data for country calling code(s):\n   98 (en), 678 (en), 880 (en)\n\nSep 16, 2015: libphonenumber-7.0.11\nMetadata changes:\n - Updated phone metadata for region code(s):\n   IN, KE, LR, MM, MR, NA, NE, PT, RO, SO, TZ, US\n - New short number metadata for region code(s): CF, CG, ER, KP, NE, SO\n - Updated short number metadata for region code(s): CD, NO, PT\n - New geocoding data for country calling code(s): 1854 (en)\n - Updated geocoding data for country calling code(s): 264 (en)\n - Updated carrier data for country calling code(s):\n   40 (en), 91 (en), 95 (en), 227 (en), 231 (en), 252 (en), 254 (en), 255 (en),\n   509 (en)\n\nAug 31, 2015: libphonenumber-7.0.10\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AU, BY, CR, DZ, EH, ES, HK, HT, IN, JO, MN, MU, ST, TD, TT, ZW\n - Updated short number metadata for region code(s): HK, KR\n - Updated geocoding data for country calling code(s): 263 (en)\n - New carrier data for country calling code(s): 509 (en), 976 (en)\n - Updated carrier data for country calling code(s):\n   41 (en), 61 (en), 91 (en), 230 (en), 235 (en), 239 (en)\n\nAug 03, 2015: libphonenumber-7.0.9\nMetadata changes:\n - Updated phone metadata for region code(s): AR, IN, MX, PL, SZ, YT, ZW\n - Updated short number metadata for region code(s): MX, ZW\n - Updated carrier data for country calling code(s): 91 (en), 263 (en)\n\nJul 14, 2015: libphonenumber-7.0.8\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AC, BS, BW, CL, DE, DZ, HN, HR, IL, IN, IT, JO, KY, MA, NP, PL, SH, SL, TM,\n   UA, VA\n - Updated short number metadata for region code(s): HR\n - Updated geocoding data for country calling code(s): 56 (en, es)\n - Updated carrier data for country calling code(s):\n   49 (en), 212 (en), 232 (en), 267 (en), 380 (en), 385 (en), 962 (en),\n   972 (en), 977 (en), 993 (en)\n- Updated / refreshed time zone meta data.\n\nJun 24, 2015: libphonenumber-7.0.7\nMetadata changes:\n - Updated phone metadata for region code(s):\n   AC, BF, BG, CG, CM, FR, IL, IN, JP, KW, LB, LI, SB, SD, SH, TT\n - Updated short number metadata for region code(s): GY, SB\n - New geocoding data for country calling code(s): 592 (en)\n - Updated geocoding data for country calling code(s):\n   86 (en, zh), 226 (en), 290 (en, fr)\n - New carrier data for country calling code(s): 592 (en), 689 (en)\n - Updated carrier data for country calling code(s):\n   7 (en), 60 (en), 91 (en), 237 (en), 242 (en), 249 (en), 359 (en), 961 (en),\n   1868 (en)\n- Updated / refreshed time zone meta data.\n\nMay 29, 2015: libphonenumber-7.0.6\nMetadata changes:\n - Updated phone metadata for region code(s):\n   BB, BR, CR, ID, IL, JO, KW, LK, LU, MD, MM, MV, MY, PH, PK, SC, SE\n - Updated short number metadata for region code(s): BE, LK, US\n - Updated carrier data for country calling code(s):\n   60 (en), 63 (en), 92 (en), 94 (en), 95 (en), 248 (en), 373 (en), 960 (en),\n   972 (en), 1246 (en)\n\nApr 24, 2015: libphonenumber-7.0.5\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AF, AS, BD, BE, CA, CI, ID, IN, JM, KH, LI, LU, MU, NE, PL\n - Updated short number metadata for region code(s): BE, LI\n - Updated geocoding data for country calling code(s):\n   62 (en), 86 (en, zh), 358 (en, fi, se)\n - Updated carrier data for country calling code(s):\n   32 (en), 93 (en), 225 (en), 227 (en), 855 (en), 1684 (en), 1876 (en)\n\nMar 25, 2015: libphonenumber-7.0.4\n* Metadata changes:\n - Updated phone metadata for region code(s): CA, HU, IL, JO, LU, SG, SL, US\n - Updated short number metadata for region code(s): BI\n - New geocoding data for country calling code(s):\n   1220 (en), 1628 (en), 1629 (en)\n - Updated carrier data for country calling code(s):\n   65 (en), 232 (en), 972 (en)\n\nMar 02, 2015: libphonenumber-7.0.3\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AR, BH, BY, CI, CN, GH, KR, KW, LU, ME, NZ, SB, WS\n - New geocoding data for country calling code(s): 64 (en)\n - Updated geocoding data for country calling code(s):\n   86 (en, zh), 1418 (en), 1438 (en), 1450 (en), 1514 (en), 1819 (en)\n - Updated carrier data for country calling code(s):\n   225 (en), 233 (en), 677 (en), 973 (en)\n\nJan 09, 2015: libphonenumber-7.0.2\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   BD, BH, EH, GH, IN, JM, LU, MA, MY, NF, NG, PK, SB, TT, TZ\n - Updated geocoding data for country calling code(s): 91 (en), 352 (en, fr)\n - New carrier data for country calling code(s): 1876 (en)\n - Updated carrier data for country calling code(s):\n   60 (en), 91 (en), 92 (en), 212 (en), 233 (en), 234 (en), 352 (en), 677 (en)\n\nNov 25, 2014: libphonenumber-7.0.1\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 676\n - Updated phone metadata for region code(s):\n   BI, CM, ID, IR, KR, LA, NP, TG, TH, TO\n - New geocoding data for country calling code(s): 237 (en)\n - Updated geocoding data for country calling code(s): 98 (en, fa)\n - Updated carrier data for country calling code(s):\n   237 (en), 257 (en), 856 (en), 977 (en)\n\nOct 29, 2014: libphonenumber-7.0\n* Code changes:\n - New APIs for ShortNumberInfo. The old APIs have been deprecated and will be\n   removed in an upcoming release.\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AR, AU, CC, CI, CX, DZ, EE, IN, KZ, MC, SB, TJ, TT\n - Updated short number metadata for region code(s): MC\n - Updated geocoding data for country calling code(s): 34 (en, es), 54 (en)\n - Updated carrier data for country calling code(s):\n   7 (en), 61 (en), 91 (en), 225 (en), 677 (en), 967 (en), 992 (en), 1868 (en)\n\nOct 13, 2014: libphonenumber-6.3.1\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AC, AU, CR, DE, IL, MR, NO, SA, SR, UG\n - Updated short number metadata for region code(s): CR\n - Updated carrier data for country calling code(s):\n   61 (en), 256 (en), 506 (en), 597 (en), 966 (en), 972 (en)\n\nSep 25, 2014: libphonenumber-6.3\n* Code changes:\n  - Changing the offline geocoder to not return any country at all if the number\n    could belong to multiple countries\n  - Removing obsolete code that treated countries with no metadata as valid.\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 54, 91\n - Updated phone metadata for region code(s):\n   AM, AR, BR, CA, CL, IL, IN, IR, IS, KE, NI, PF, SB, SN, TH, TN, US\n - New geocoding data for country calling code(s):\n   1782 (en), 1929 (en), 1930 (en), 1938 (en)\n - Updated geocoding data for country calling code(s): 98 (en, fa)\n - New carrier data for country calling code(s): 354 (en)\n - Updated carrier data for country calling code(s):\n   27 (en), 56 (en), 66 (en), 91 (en), 92 (en), 98 (en), 216 (en), 221 (en),\n   254 (en), 374 (en), 505 (en), 677 (en), 972 (en)\n\nAug 21, 2014: libphonenumber-6.2.2\n* Metadata changes:\n - Updated phone metadata for region code(s): BN, CL, CO, DK, IN, SB, SO\n - Updated short number metadata for region code(s): FR, SA, US\n - Updated carrier data for country calling code(s):\n   27 (en), 57 (en), 91 (en), 252 (en), 677 (en)\n\nJul 28, 2014: libphonenumber-6.2.1\n* Metadata changes:\n - Updated phone metadata for region code(s): BW, LB, MD, PA, PF, VI, ZM\n - New carrier data for country calling code(s): 507 (en), 961 (en)\n - Updated carrier data for country calling code(s): 267 (en), 373 (en)\n\nJun 30, 2014: libphonenumber-6.2\n* Code changes:\n - Better exclusion of dates when matching phone numbers from text.\n - Handle phone input in RFC3966 with missing tel: prefix\n\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 95\n - Updated phone metadata for region code(s):\n   AF, CN, EH, FJ, IN, JP, KE, KG, KW, MA, MM, PG, PK, SN, SO\n - New short number metadata for region code(s): SN\n - Updated short number metadata for region code(s): FR, KE\n - Updated geocoding data for country calling code(s): 254 (en)\n - New carrier data for country calling code(s): 95 (en)\n - Updated carrier data for country calling code(s):\n   92 (en), 93 (en), 212 (en), 221 (en), 254 (en), 675 (en), 679 (en), 965 (en),\n   996 (en)\n\nJun 06, 2014: libphonenumber-6.1.1\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AF, AG, AI, AS, BB, BF, BM, BS, CA, CN, CR, DM, DO, DZ, FR, GD, GU, IN, JM,\n   KH, KN, KW, KY, LC, MN, MP, MS, NG, NI, PH, PR, SX, TC, TT, US, VC, VG, VI\n - Updated short number metadata for region code(s): AL\n - New geocoding data for country calling code(s): 1346 (en), 1959 (en)\n - Updated geocoding data for country calling code(s):\n   33 (en, fr), 352 (de, en, fr), 355 (en)\n - New carrier data for country calling code(s): 505 (en)\n - Updated carrier data for country calling code(s):\n   63 (en), 91 (en), 93 (en), 234 (en)\n\nMay 08, 2014: libphonenumber-6.1\n* Code changes:\n - Adding MetadataLoader support to allow custom metadata loading from\n   alternative sources (should have no visible impact to users).\n - Fixing bug where digits could be lost in as-you-type formatting and\n   formatting patterns incorrectly applied.\n\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AR, BF, BR, BS, CL, CN, CO, CR, DE, DM, EC, EG, FR, GA, GD, GH, HU, ID, IL,\n   IN, JP, KH, KI, KN, LA, LC, LR, ML, MU, MX, MZ, NA, NE, PF, PL, RU, SM, TH,\n   TW, UZ, VA, VC\n - Updated short number metadata for region code(s): BI, CR, PL, TH\n - New geocoding data for country calling code(s): 32 (de), 1242 (en)\n - Updated geocoding data for country calling code(s):\n   32 (en, nl), 55 (en), 56 (en, es), 86 (en, zh)\n - New carrier data for country calling code(s):\n   1758 (en), 1784 (en), 1869 (en)\n - Updated carrier data for country calling code(s):\n   66 (en), 86 (en), 227 (en), 231 (en), 233 (en), 258 (en), 1473 (en),\n   1767 (en)\n\nFeb 25, 2014: libphonenumber-6.0\n* Code changes:\n - Better support for detecting phone numbers in text that are beside each other\n - Change to how Japanese numbers beginning with \"00\" are modelled, with the\n   side-effect that the maximum possible number length has been extended by 1.\n - Handle StringIndexOutOfBoundsException in the AsYouTypeFormatter when the\n   national prefix that was extracted was not found in the prefix. This affected\n   countries with very long carrier codes, such as Korea.\n - Removal of some of the author attributions - contributions to be tracked in\n   CONTRIBUTORS file.\n* Metadata changes:\n - Updated phone metadata for region code(s): AS, BR, KW, LU\n - New carrier data for country calling code(s): 1684 (en)\n - Updated carrier data for country calling code(s): 352 (en)\n\nFeb 07, 2014: libphonenumber-5.9.4\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   883, BF, BJ, BW, CL, CR, DZ, FR, GD, IN, JP, MD, NG, NZ, PK, PL, SY, UY, VU\n - Updated short number metadata for region code(s): LV, MD\n - New carrier data for country calling code(s): 373 (en), 1473 (en)\n - Updated carrier data for country calling code(s):\n   48 (en), 49 (en), 91 (en), 92 (en), 213 (en), 226 (en), 229 (en), 234 (en),\n   267 (en), 389 (en), 506 (en), 598 (en)\n\nJan 21, 2014: libphonenumber-5.9.3\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   BF, BH, BR, CN, GR, IN, MY, PA, TN, US\n - Updated short number metadata for region code(s): CN\n - New geocoding data for country calling code(s): 1364 (en), 1725 (en)\n - Updated geocoding data for country calling code(s): 86 (en)\n - Updated carrier data for country calling code(s):\n   55 (en), 226 (en), 973 (en)\n\nDec 20, 2013: libphonenumber-5.9.2\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 255, 27, 381, 506\n - Updated alternate formatting data for country calling code(s): 43\n - Updated phone metadata for region code(s):\n   AG, AI, AS, BB, BF, BM, BS, CA, CR, DM, DO, EC, GD, GU, JM, KN, KY, LC, MP,\n   MS, PR, SO, SX, TC, TT, US, VC, VG, VI\n - Updated carrier data for country calling code(s): 226 (en)\n\nDec 13, 2013: libphonenumber-5.9.1\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 505, 679\n - Updated phone metadata for region code(s):\n   BF, CI, EG, EH, FJ, IN, KI, MA, MT, NG, NI, SI, SN, SR, TT\n - Updated short number metadata for region code(s): KI\n - Updated geocoding data for country calling code(s):\n   27 (en), 226 (en), 1 (en)\n - New carrier data for country calling code(s): 356 (en), 677 (en)\n - Updated carrier data for country calling code(s):\n   212 (en), 221 (en), 225 (en), 226 (en), 234 (en), 597 (en), 1 (en)\n\nNov 12, 2013: libphonenumber-5.9\n* Code changes:\n - Adding support for numbers with multiple Italian leading zeros, by adding a field\n   to the phone number proto to allow an arbitrary number of leading zeros, and\n   supporting this when parsing, validating and formatting.\n - Adding more functionality to ShortNumberInfo -> such as getExpectedCostForRegion.\n - Fix for parsing short numbers that start with the national prefix.\n - Updating formatNumberForMobileDialing to work with short numbers.\n - Stop finding Israeli 4-digit \"star\" numbers in text when no star is in fact present.\n - Bug fix for finding phone numbers where the area code was also part of the country\n   calling code.\n\n* Metadata changes:\n - Updated phone metadata for region code(s):\n   AU, BQ, BY, CI, CO, CW, GN, HN, IN, JO, KI, KW, MG, MK, MM, NA, PK, TC, TM,\n   UG\n - New short number metadata for region code(s): CD, GN\n - Updated short number metadata for region code(s):\n   AF, AG, AI, AM, AR, AS, AW, AZ, BD, BH, BI, BM, BO, BQ, BT, BW, BY, CA, CH,\n   CI, CM, CO, CW, DZ, FJ, GD, GE, GH, GT, GY, HN, HT, ID, IE, IM, IN, IQ, JM,\n   JO, KE, KG, KH, KI, KW, KZ, LR, SV\n - New geocoding data for country calling code(s):\n   257 (en), 389 (en), 599 (en), 686 (en), 962 (en)\n - Updated geocoding data for country calling code(s):\n   264 (en), 375 (be, en, ru)\n - New carrier data for country calling code(s):\n   375 (be, ru), 389 (en), 599 (en), 965 (ar)\n - Updated carrier data for country calling code(s):\n   57 (en), 61 (en), 92 (en), 225 (en), 256 (en), 257 (en), 261 (en), 375 (en),\n   686 (en), 962 (en), 965 (en)\n\nOct 10, 2013: libphonenumber-5.8.8\n* Metadata changes:\n - New alternate formatting data for country calling code(s):\n   350, 358, 36, 66, 84, 94, 995\n - Updated alternate formatting data for country calling code(s):\n   31, 359, 372, 49, 62, 7\n - Updated phone metadata for region code(s):\n   AR, BD, BE, BF, BR, CO, CR, FI, GI, GM, IS, MU\n - Updated short number metadata for region code(s): AR, BE, ES, GI, PG, US\n - Updated geocoding data for country calling code(s): 220 (en)\n - Updated carrier data for country calling code(s):\n   20 (en), 220 (en), 224 (en), 230 (en), 852 (en)\n\nOct 8, 2013: libphonenumber-5.8.7\n* Code changes:\n  - New method in the PhoneNumberUtil API - isMobileNumberPortableRegion.\n  - Carrier mapper: Updated API and added a getSafeDisplayName method that only returns the carrier\n                    if it's safe to display to the user.\n\nOct 7, 2013:\n* Code changes:\n  - Added PhoneNumberToTimeZonesMapper including unittests to the geocoder maven project.\n  - Added build rules for generating the binary time zones mapping file from the text file.\n  - Modified PhoneNumberParserServlet.java (the appengine demo) to incorporate time zone mapping.\n* Metadata changes:\n  - Added the time zone mapping file.\n\nSep 30, 2013:\n* Code changes:\n  - Added PhoneNumberToCarrierMapper including unittests.\n  - Added build rules for generating binary carrier mapping files from text files.\n  - Modified PhoneNumberParserServlet.java (the appengine demo) to incorporate carrier mapping.\n* Metadata changes:\n  - Added carrier mapping files for some NANPA countries, EG, SS, MA, DZ, TN, GM, SN, MR, ML, GN,\n    CI, BF, NE, TG, BJ, MU, LR, SL, GH, NG, TD, CF, CM, CV, ST, GQ, GA, CG, CD, AO, GW, SC, SD, RW,\n    ET, SO, DJ, KE, TZ, UG, BI, MZ, ZM, MG, ZW, MW, BW, SZ, ZA, AW, FO, GL, GR, NL, BE, FR, GI, PT,\n    LU, IE, AL, CY, FI, BG, HU, LT, EE, AM, BY, AD, UA, RS, HR, SI, BA, IT, RO, CH, CZ, SK, AT, DK,\n    NO, PL, DE, BZ, CR, PE, CU, AR, BR, CL, CO, VE, BO, PY, SR, UY, MY, AU, ID, PH, NZ, SG, TH, TL,\n    BN, PG, TO, VU, FJ, WS, KI, RU, VN, HK, KH, LA, CN, BD, TR, IN, PK, AF, LK, MV, JO, IQ, KW, SA,\n    YE, OM, PS, AE, IL, BH, QA, BT, NP, IR, TJ, TM, AZ, GE, KG and UZ in English.\n\nSep 23, 2013: libphonenumber-5.8.6\n* Code changes:\n  - Restructured the geocoder binary generation code, moving the classes under tools/ from\n    geocoding/ to buildtools/ and renaming AreaCode to PhonePrefix.\n\nSep 23, 2013: libphonenumber-5.8.5\n* Code changes:\n  - Restructured the geocoder, moving the utility classes to a new module internal/prefixmapper.\n\nSep 20, 2013: libphonenumber-5.8.4\n* Metadata changes:\n - Adding a token to indicate which countries have mobile portability.\n\nSep 20, 2013: libphonenumber-5.8.3\n* Code changes:\n  - PhoneNumberOfflineGeocoder: Moved utility functionality to PrefixFileReader.\n  - Bug fix: Argentinian (and other countries with mobile tokens) mobile numbers now geocode\n             correctly.\n\nSep 19, 2013: libphonenumber-5.8.2\n* Code changes:\n  - New method in the PhoneNumberUtil API - getCountryMobileToken.\n\nSep 19, 2013: libphonenumber-5.8.1\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 675\n - Updated phone metadata for region code(s):\n   AO, AU, BF, BW, CA, CH, CI, CN, DE, FR, MA, MR, MU, NI, PG, SA, SE, US, VI\n - New short number metadata for region code(s): IQ\n - Updated short number metadata for region code(s):\n   AU, BR, DO, EG, FR, GH, ID, IL, JM, KE, KZ, LR, MW, NG, NI, SA, SE, SL, TZ, US, UZ\n - New geocoding data for country calling code(s):\n   966 (ar, en), 1 (en)\n\nSep 2, 2013: libphonenumber-5.8\n* Code changes:\n - Renamed ShortNumberUtil to ShortNumberInfo -> the former class is now deprecated and will be\n   deleted in a later release. At the moment it just delegates to ShortNumberInfo.\n - New methods in the ShortNumberInfo API - isCarrierSpecific, singleton interface,\n   isPossibleShortNumber, isValidShortNumber, getShortNumberCost. Note this is an experimental API\n   at the moment and subject to change.\n - Bug fixes:\n    -- AsYouTypeFormatting: 3-digit numbers can be formatted as a group where appropriate\n    -- AsYouTypeFormatting: Countries with an optional national prefix were considered before to\n       have always entered it, resulting in bugs where numbers without the national prefix were\n       not properly formatted.\n    -- Numbers in Chile that overlap with emergency numbers are no longer marked as connecting to\n       them\n    -- Not requiring the NDC to be alone for countries where there is no national prefix in strict\n       grouping when extracting phone numbers\n* Metadata changes:\n - New alternate formatting data for country calling code(s):\n   30, 31, 385, 58, 62, 63, 971, 972\n - Updated alternate formatting data for country calling code(s): 43, 44, 49\n - Moved emergency phone number data to the ShortNumberMetadata.xml file\n - Updated phone metadata for region code(s):\n   AT, EG, ML, NC, NL, SA\n - New short number metadata for region code(s):\n   AR, CL, CO, ES, MX, NC\n - Emergency metadata fixes for region code(s):\n   GA, JM, MH, VE\n\nAug 09, 2013: libphonenumber-5.7.2\n* Metadata changes:\n - New alternate formatting data for country calling code(s):\n   352, 359, 372, 373, 375, 595, 7, 855\n - Updated phone metadata for region code(s):\n   AR, BF, BH, BR, BY, CH, CM, CN, GE, GW, HN, JM, KH, LT, LU, MU, NP, RO, SO\n - New short number metadata for region code(s): BR\n - Updated short number metadata for region code(s):\n   CH, FJ, GB, GG, IM, IT, JE, SH\n\nAug 8, 2013: libphonenumber-5.7.1\n* Metadata/code changes:\n - Change to the way the metadata is built; now only parts of the proto that are relevant will be\n   generated. This means short-code data won't be generated for the normal protos, and fixed-line\n   data won't be generated for short-number protos. This cuts the metadata binary size approximately\n   in half.\n\nJul 17, 2013: libphonenumber-5.7\n* Code changes:\n - Improve phone number extraction recall.\n - Add support for loading short number metadata.\n\nJul 16, 2013: libphonenumber-5.6.2\n* Metadata changes:\n - Updated alternate formatting data for country calling code(s): 49, 61\n - New metadata for region code(s): TA\n - Updated metadata for region code(s):\n   BF, BH, BI, BJ, BR, CR, EH, GA, GE, GN, GU, IL, IN, IR, KH, KW, KZ, MA, MT,\n   NA, NE, NL, PH, RO, SH, SO, TK\n - New geocoding data for country calling code(s): 47 (en), 82 (ar)\n - Updated geocoding data for country calling code(s):\n   49 (en), 98 (en, fa), 241 (en)\n\nJul 12, 2013: libphonenumber-5.6.1\n* Code changes:\n - Rename all instances of PhoneNumberMetadata to PhoneNumberMetadata for consistency.\n\nJun 05, 2013: libphonenumber-5.6\n* Code changes:\n - Fix for as-you-type-formatting bug affecting countries with no national prefix\n   formatting rule, such as China.\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 351\n - Updated alternate formatting data for country calling code(s): 49\n - Updated metadata for region code(s):\n   AS, BG, BH, BJ, BL, CD, CI, DE, DZ, EH, FJ, GF, GP, IN, KH, KZ, MA, MD, MF,\n   ML, MY, NG, PT, PY, TC, TJ, TT\n\nMay 08, 2013: libphonenumber-5.5\n* Code changes:\n - Changed internal initialization code and made more fields final.\n   Note that we now throw an exception if an attempt is made to set the\n   metadata more than once (which should only happen during testing).\n - Fix problem with formatNumberForMobileDialing for HU and CL.\n* Metadata changes:\n - Updated alternate formatting data for country calling code(s): 49\n - Updated metadata for region code(s):\n   AM, BF, BR, CR, DE, MA, MG, MM, SA, TL, UA\n - Updated geocoding data for country calling code(s): 374 (am, en, ru)\n\nApr 19, 2013: libphonenumber-5.4.2\n* Metadata changes:\n - Updated metadata for region code(s): BF, GA, IN, KR, MV, PH, SO, UA, US\n\nMar 25, 2013: libphonenumber-5.4.1\n* Metadata changes:\n - Updated metadata for region code(s): BF, BH, CR, EC, IR, MG, PF, TD, TN\n - New geocoding data for country calling code(s): 374 (am, ru)\n - Updated geocoding data for country calling code(s):\n   98 (en, fa), 358 (en, se), 374 (en)\n\nMar 07, 2013: libphonenumber-5.4\n* Code changes:\n - Switch formatNumberForMobileDialing to prefer national format to international format when the\n   number is dialed from the same region the phone number is from.\n\n* Metadata changes:\n - Updated metadata for region code(s):\n   BF, CD, CN, CZ, GN, IR, JP, KR, KW, LR, NZ, TT, UG, ZW\n - New geocoding data for country calling code(s): 82 (cs)\n - Updated geocoding data for country calling code(s):\n   82 (en, fr, ko, zh, zh_Hant), 98 (en, fa), 263 (en)\n\nFeb 11, 2013: libphonenumber-5.3.2\n* Metadata changes:\n - Updated metadata for region code(s):\n   BD, BE, BY, CA, EH, GR, IE, IN, IS, LI, MA, MU, PT, SE, SG, TL\n - New geocoding data for country calling code(s):\n   375 (be, en, ru), 1 (en)\n\nJan 25, 2013: libphonenumber-5.3.1\n* Metadata changes:\n - Updated metadata for region code(s): CN, DK, EH, GN, KH, KW, MA, MY, PA\n\nJan 08, 2013: libphonenumber-5.3\n* Code changes:\n - Handling UAN numbers in Argentina better when dialling them locally from a\n   mobile\n* Metadata changes:\n - Updated metadata for region code(s):\n   BE, BW, CL, CN, CO, EH, KW, MA, ML, NG, PL, SY, ZA, ZM\n - New geocoding data for country calling code(s): 32 (en, fr, nl)\n - Updated geocoding data for country calling code(s): 27 (en), 86 (en, zh)\n\nDec 06, 2012: libphonenumber-5.2.2\n* Metadata changes:\n - New metadata for region code(s): EH\n - Updated metadata for region code(s): BR, CL, CR, IN, MA, PG, PK, RO\n - New geocoding data for country calling code(s): 241 (en)\n\nNov 26, 2012: libphonenumber-5.2.1\n* Metadata changes:\n - Updated metadata for region code(s):\n   AE, AW, BF, CN, DE, JO, KE, KH, LT, MM, MU, NG, RW, SR, TR, VU\n - New geocoding data for country calling code(s): 359 (bg, en)\n\nOct 10, 2012: libphonenumber-5.2\n* Code changes:\n - Adds isNumberGeographical() method.\n - Adds getRegionCodesForCountryCode() method.\n - Fixing issue with getSupportedGlobalNetworkCallingCodes()\n   [https://github.com/google/libphonenumber/issues/202]\n - Ensures that returned collections are unmodifiable where necessary\n   [there is a very slight risk that this may break existing users who were relying on being able\n   to modify these collections, but doing so would be breaking lots of other assumptions that this\n   library makes - if you need to modify any affected collections you must copy them first]\n* Metadata changes:\n - Updated metadata for region code(s): DE, GR, HR, OM, SB, ZA\n - Removed metadata for region code: AN (Netherlands Antilles)\n - Updated geocoding data for country calling code(s): 30 (el, en)\n\nSep 27, 2012: libphonenumber-5.1.4\n* Metadata changes:\n - Updated metadata for region code(s): AU, EC, KH, LB, TN, US\n\nSep 17, 2012: libphonenumber-5.1.3\n* Metadata changes:\n - Updated metadata for region code(s): EG, LA, LB, LI, PY\n - Updated metadata for non-geographical calling codes: 800, 808, 888, 979\n - Updated geocoding data for country calling code(s): 98 (en), 1 (en)\n\nSep 11, 2012: libphonenumber-5.1.2\n* Bug fix:\n - Fixing regression in AsYouTypeFormatter where it no longer worked for numbers entered in national\n   format for countries with no national prefix, e.g. Spain.\n\nSep 5, 2012: libphonenumber-5.1.1\n* Code changes:\n  - Added better logging/exception handling for catching cases where metadata is invalid/missing.\n\nSep 3, 2012: libphonenumber-5.1\n* Code changes:\n - Inserting a space after the national prefix in the AsYouTypeFormatter when formatting numbers in\n   national format, if the formatting rules for that country dictate that a space is appropriate.\n - Format emergency numbers and short-codes as a block in the AsYouTypeFormatter.\n* Metadata changes:\n - Updated metadata for region code(s): BF, BG, DZ, GA, IT, JP, KW, PF\n\nAug 20, 2012: libphonenumber-5.0.3\n* Metadata changes:\n - New alternate formatting data for country calling code(s): 43\n - Updated metadata for region code(s): AT, BF, JO, NG, RU, SL\n - New geocoding data for country calling code(s): 62 (en, id), 98 (fa)\n\nAug 07, 2012: libphonenumber-5.0.2\n* Metadata changes:\n - Updated metadata for region code(s):\n   BF, CN, DJ, IL, JO, KH, KZ, MA, MT, MV, MY, NC, NG, SD, SK, SN, TL, UZ\n - New geocoding data for country calling code(s): 7 (ru), 98 (en)\n - Updated geocoding data for country calling code(s): 7 (en)\n\nJuly 26th, 2012: libphonenumber-5.0.1\n* Metadata changes\n - CL, DE ,IN, KR, US\n - New geocoding data for country calling codes 40, 57, 66, 82, 91.\n - Fixed comments for 353 (IE).\n\nJuly 12th, 2012: libphonenumber-5.0\n* Code changes:\n - Support for alternate formats when finding phone numbers.\n - Allowing two-digit numbers to be parsed if they are entered in national-format with no\n   punctuation\n* Metadata changes\n - IL, GA\n* Other\n - Reflowed this file to 100 char width to make it unambiguous as to what the standard should be.\n\nJuly 6th, 2012: libphonenumber-4.9.1\n* Metadata changes\n - AR, BA, BF, CR, DE, EC, ES, KZ, MK, NC, NG, PF, SB, UZ, non-geo entity 882\n - Geocoding data updates for country calling codes 54 (AR) and 81 (JP), new data for 234 (NG)\n\nJune 21st, 2012: libphonenumber-4.9\n* Bug fix\n - formatInOriginalFormat fixed not to add a star sign if it was not present originally.\n* Metadata changes\n - BF, CZ, ES, KW\n - Non-geographical entities with calling code 882 (BebbiCell, Maritime Communications, Oration\n   Technologies, Telespazio and Thuraya)\n - Geocoding data updates for country calling codes 221, 224, 226, 242, 244, 245\n* Functionality changes:\n - Minimum allowed length for a national significant number (NSN) when parsing changed from 3 to 2.\n - Support parsing of RFC3966-formatted strings with an isdn-subaddress or extra parameters\n   specified.\n - Allow soft hyphen to appear in phone numbers (\\u00AD)\n* Testing changes:\n - Add extra unit tests for non-geographical phone number entities\n - ExampleNumbersTest testEmergency tests now uses ShortNumberUtil\n\nJune 14th, 2012: libphonenumber-4.8.5\n* Metadata update only:\n - AC, CR, DE, DK, IL, IN, IS, KH, LI, LR, MA, MD, MK, PA, SA, SG, SS\n\nJune 6th, 2012: libphonenumber-4.8.4\n* Metadata update only:\n - AE, RO\n - Non-geographical entity with calling code 881 (Iridium)\n\nMay 30th, 2012: libphonenumber-4.8.3\n* Metadata update only:\n - AN, ET, KW, MN, SX, TC, TL\n\nMay 16th, 2012: libphonenumber-4.8.2\n* Metadata update only:\n - BH, CR, EE, JO, KW, LA, QA, SI, TH\n - Non-geographical entity with calling code 878 (VISIONng)\n\nMay 8th, 2012: libphonenumber-4.8.1\n* Metadata update only:\n - CA, CI, EG, HK, IN, IR, LB, MA, ME, MM\n - Non-geographical entity with calling code 870 (Inmarsat)\n - Geocoding updates for country calling codes 1 for new area codes\n\nApril 24th, 2012: libphonenumber-4.8\n* Functionality changes\n - RFC format now outputs a number starting with \"tel:\"\n - Parsing support for numbers in RFC format that contain the country info in the \"phone-context\"\n   part\n - Support for obtaining area codes for Italy, Vatican City, San Marino\n* Metadata changes\n - AM, AO, AR, BE, BF, CD, EG, GH, GM, GN, IN, IR, IT, JO, LA, LC, MD, MS, NO, PA, PK, SI, SJ, SO,\n   SY, TC, TN, UZ, VN, ZW\n - Geocoding updates for country calling codes 1, 20, 233, 31, 33, 352, 374, 54, 56, 86\n* Refactoring of matching functions, including moving them to PhoneNumberMatcher.\n\nMarch 16th, 2012: libphonenumber-4.7\n* Bug fixes\n - Now return \"too long\" for input that is longer than 250 chars when parsing\n* Metadata changes\n - AC,AM,AT,AZ,BF,BR,BY,BZ,CR,CU,DE,DJ,EE,EG,ET,GA,GH,HK,HN,ID,IN,JP,KE,KG,KH,KR,KW,KY,LB,LU,MA,MD,\n   MK,NA,NE,NZ,SA,SB,SC,SE,SL,SN,UZ\n* Refactoring of test classes so that tests requiring the test metadata to be loaded have a common\n  base class which handles this.\n\nFebruary 9th, 2012: libphonenumber-4.6\n* Bug fixes\n - Fix for formatByPattern to enable RFC formatting to work\n - Fix for RFC formatting to work even when the international formatting rule starts with\n   punctuation\n - Logging consistency changes - some warnings are no longer printed, others have become only\n   WARNINGS\n - Fix for isValidNumberForRegion potentially throwing a NPE\n - Parsing Israeli * numbers written in international format now works\n - PhoneNumberMatcher doesn't match timestamps as phone-numbers\n* Metadata changes\n - Updates for AN, AX, BF, BJ, BR, BS, DJ, FI, IN, LV, MW, RS, SC, VN\n - New countries supported: SS (South Sudan), CW (Curaçao) and BQ (Bonaire, Sint Eustatius and Saba)\n* Refactoring of the private formatting functions in PhoneNumberUtil to ensure names are more\n  descriptive and to reduce code duplication.\n\nJanuary 19th, 2012: libphonenumber-4.5\n* Code changes\n - Support for non-geographical country calling codes (e.g. +800).\n - Modify formatInOriginalFormat to not insert/remove/modify digits in the original number passed\n   in.\n - Fix formatOutOfCountryKeepingAlphaChars to not throw a NPE.\n\n* Metadata changes\n - Updates for AR, BH, CI, CN, CR, DE, GA, IL, JO, JP, KE, KZ, LB, LK, LT, MV, MW, MZ, NA, NL, NZ,\n   PL, RO, SA, SV, TM, UG, US\n - New country calling codes: 800, 808, 883, 888, 979\n - Geocoding data updates: AR, US\n\nDecember 9th, 2011: libphonenumber-4.4\n* Code changes\n - Support for Voicemail numbers\n - Support prefixes \"xt\" and \"xtn\" to indicate extensions of phone numbers\n - Change formatInOriginalFormat to use raw_input for numbers with incorrect leading zeroes, instead\n   of all invalid numbers.\n\n* Metadata changes\n - Updates for AR, BD, CH, CI, IL, IR, IS, IT, JP, KW, LR, MM, NG, SA, SC, UZ\n\nNovember 24th, 2011: libphonenumber-4.3\n* Code changes\n - Fix the problems with AYTF crashing for longer numbers entered with +CountryCode, and incorrectly\n   removing national prefix for some numbers.\n - Improve PhoneNumberMatcher to not match numbers ending with '%'.\n - Fix formatNumberForMobileDialing to handle Israeli star numbers, Peruvian and Colombian numbers.\n - Modify formatInOriginalFormat to use the raw input if we don't have a formatting pattern for a\n   number.\n - Simple offline geocoding function which takes into account the user's region.\n\n* Metadata changes\n - Updates for CR, GN, JP, KE, PL, SG, SR, SX, TH, TK\n\nNovember 10th, 2011: libphonenumber-4.2\n* Code changes\n - Providing an \"exact match\" isEmergencyNumber method\n - Improvement to PhoneNumberMatcher: requires national prefix to be present when matching\n   national-format numbers, unless matching for a region where it is explicitly marked in the\n   metadata that they may be omitted. Applies to leniency level VALID and higher.\n - Change formatNumberForMobileDialing not to modify the phoneNumber passed in.\n\n* Metadata changes\n - Emergency numbers added for all remaining countries\n - Collected data on which numbers we format with a national prefix are commonly written without one\n   and added this\n - Updates for AR, AT, BH, CZ, GR, IR, KM, LT, MX, PT, SE, SO, UG\n - Addition of SX (Sint Maarten)\n\nOctober 19th, 2011: libphonenumber-4.1\n* Code changes\n - Update code and metadata for countries with IDD \"8~10\" to accept phone numbers where the \"~\" is\n   omitted.\n - Modify formatInOriginalFormat to use raw_input (when present) when the number is considered as\n   invalid by the library.\n - Add ShortNumberUtil to deal with international short phone numbers, such as short codes and\n   emergency numbers.\n - Increase the maximum phone-number length accepted when parsing (now set to\n   16).\n\n* Metadata changes\n - Updates: BF, BN, CN, DE, DK, DO, FR, IN, KI, KW, MC, MD, ML, PA, QA, SB, UK, WS\n - Emergency number information also added to: AE, AF, AL, AM, AR, AT, AU, BA,\n   BB, BD, BE, BG, BH, BO, BR, BY, CA, CH, CL, CN, CO, CR, CY, CZ, DE, DJ, DK,\n   DO, DZ, EC, EE, EG, ES, FI, FJ, FO, FR, GB, GE, GF, GH, GI, GL, GR, GT, GY,\n   HK, HN, HR, HU, ID, IE, IL, IN, IR, IS, IT, JM, JO, JP, KR, KW, KY, KZ, LB,\n   LK, LT, LU, LV, MA, MC, MD, ME, MK, ML, MM, MN, MO, MT, MU, MV, MX, MY, NG,\n   NI, NL, NO, NP, OM, PA, PE, PH, PK, PL, PM, PT, PY, QA, RO, RS, RU, RW, SA,\n   SB, SD, SE, SG, SI, SK, SL, SM, SR, SV, SY, TD, TH, TJ, TM, TN, TR, TT, TW,\n   UA, UG, US, UY, UZ, VA, VE, VN, VU, ZA, ZM, ZW\n\nOctober 6th, 2011: libphonenumber-4.0\n* Code changes\n - New function formatNumberForMobileDialing, which attempts to format a number in such a way that\n   the call can be connected from a mobile phone. If this is impossible, for example for numbers\n   that cannot be internationally dialled, then an empty string is returned.\n - Fallback functionality to English for non-CJK languages for geocoding\n\n* Metadata changes\n - Collecting data for emergency numbers\n - Updates: AR, AU, BR, CN, CZ, EG, GD, IE, IL, JM, KW, KH, SD, SO, TR, UG, UZ\n - Geocoding data changes: AO, AR, AT, BJ, BR, CD, CG, CI, CL, CN, CV, DE, ES,\n   FR, GR, GW, HU, KM, MR, MZ, NL, PL, PT, SE, ST, SZ\n\nSeptember 13th, 2011: libphonenumber-3.9\n* Code changes\n - Enable AsYouTypeFormatter to handle long IDD and NDD.\n - Allow the presence of an IDD following a +.\n - Fix formatting of phone numbers which contain only 0s in the national number.\n - Refactored some code in geocoding including AreaCodeMap and the storage strategies.\n\n* Metadata changes\n - Updates: AM, BE, BH, BJ, BR, BT, BZ, CI, CL, CN, DE, DK, DM, DZ, EC, EG, FJ,\n   GR, HR, HT, IN, IQ, IS, JM, KE, KG, KH, KR, LA, LB, LR, MA, MD, ML, MO, MX,\n   MY, NE, NG, PG, PH, PK, PY, QA, SA, SD, SG, SN, TD, TG, TH, TN, TT, UG, YE,\n   ZA, ZM\n - New geocoding data for: AC, CG, CU, CV, EG, ET, FI, FI, FI, GL, JP, KM, MA,\n   MA, MU, MU, MU, MZ, RS, SH, SH, SL, SO, ST, TG, TG, TG, UG, ZM\n - Updated geocoding data for: AR, DE\n\nAugust 11th, 2011: libphonenumber-3.8\n* Code changes\n - Fix to demo to not throw null-ptr exceptions for invalid NANPA numbers\n - Fixed AYTF to not accept plus signs in the middle of input\n - PhoneNumberMatcher improvements - added STRICT_GROUPING and EXACT_GROUPING levels, numbers\n   followed/preceded by a currency symbol will not match, multiple numbers separated by phone-number\n   punctuation will now match. \", \" is no longer accepted as an extension symbol when matching, only\n   when parsing. \"x\" is only accepted as a carrier code or extension marker, not otherwise.\n - Changes to handling of leading zeroes - these will not be silently ignored anymore, but will be\n   stored as part of the number.\n - PhoneNumberOfflineGeocoder - new method to get the description of a number that assumes the\n   validity of the number has already been checked and will not re-verify it.\n - Split geocoding US binary data into multiple files.\n\n* Metadata changes\n - Updates: AR, AT, AU, AZ, BE, BF, BH, BY, CA, CN, CO, CR, HT, HU, IT, KG, KH,\n   LB, LI, ME, NC, RS, SE, TT, US, VG, ZA\n - New geocoding data for: AL, AM, AO, BF, BJ, BW, CD, CI, CZ, DZ, EE, GH, GM,\n   GN, GR, GW, HU, IS, KE, LK, LS, LT, LU, LV, MD, MG, MR, NA, PE, QN, SD, SK,\n   SN, SZ, TN, VE, VN, ZA, ZW\n - Updated geocoding data for: GB, PT, US\n - Revised sorting of geocoding data\n\nJuly 5th, 2011\n* Code changes\n - Refactored AreaCodeMap to minimize binary and memory footprint by using 2 different strategies.\n - Refactored BuildMetadataFromXml.java and added unittests.\n\n* Metadata changes\n - Regenerate binaries for all existing area code mapping data with smaller sizes.\n - Added city-level area code data mapping for US and Canada.\n\nJune 29th, 2011\n* Code changes\n - Fixed issue 38, issue 39, issue 41 and issue 43\n\n* Metadata changes\n - Added phone number area mapping files for\n   - JP in Japanese\n   - FR in French\n   - TW in English, Simplified and Traditional Chinese\n   - RU in English\n   - IT in English and Italian\n   - PT in Portuguese\n   - TR in English and Turkish\n   - CH in English, German, French and Italian\n - Updates: CR, GE, IT, JP, KW, MH, MP, MU, PE, PM, RW, TG, TJ, TK\n\nJune 14th, 2011\n* Code changes\n - Added PhoneNumberOfflineGeocoder, supporting classes and their unittests.\n - Added GenerateAreaCodeData to transform phone number area mapping files from text files to binary\n   files.\n - Modified PhoneNumberParserServlet.java and phonenumberparser.jsp to incorporate\n   PhoneNumberOfflineGeocoding in the appengine demo.\n\n* Metadata changes\n - Added phone number area mapping files for NANPA countries and GB in English, NL in Dutch, AR, CL\n   and ES in Spanish, AT and DE in German, SE in Swedish, BR in Portuguese, KR in English, Korean,\n   Simplified and Traditional Chinese, and CN in Simplified Chinese.\n\nJune 10th, 2011\n* Code changes:\n - Fixes for PhoneNumberMatcher to be more restrictive in valid mode and not match numbers\n   surrounded by Latin characters. This ensures, for example, the string abc123456789acg will not be\n   marked as a phone numbers.\n - Enable PhoneNumberUtil to handle all digits, rather than a subset\n - Fix for AYTF issue36 and improvement for US AYTF behaviour.\n* Metadata changes:\n - Updates: BG, EG, ES, GH, PF, SC, SY, VA\n\nMay 24th, 2011\n* Code changes:\n - Phonenumber now implements Serializable.\n - findNumbers doesn't accept numbers with mis-matched brackets as phone-numbers\n - An offline phone number geocoder has been added. The current implementation just returns the\n   region name for the phone number; more detailed geocoding will be added later.\n* Metadata changes:\n - New countries: GF, KP, NC, PA, PF, PW, PY, SB, SR, TO, UY, VU\n - Updates: CY, CZ, ES, GB, GQ, JM, MQ, TN, VI\n\nMay 9th, 2011\n* Code changes:\n - Fixed potential for a null-ptr exception in getExampleNumber\n - Potential speed improvement with replacement of StringBuffer with StringBuilder\n* Metadata changes\n - Changed way that international formats are specified to make it easier to do so\n - New countries: AX, CC, CX, WF\n - Updates: AM, AR, AU, AW, CN, CO, CR, DM, EC, ET, FI, FJ, GH, IN, JP, KE, KM,\n   KN, LR, MD, MQ, MX, NP, PH, SC, SE, SM, SN, SY, UG, US, VC, VI, ZM\n\nApr 26th, 2011\n* Code changes:\n - Improved PhoneNumberMatcher for cases with other numbers before or after the phone number.\n - Improved AsYouTypeFormatter not to use formatting rules containing non-formatting characters\n   (e.g. '*' in Israeli star numbers).\n* Metadata changes:\n - New countries: FJ, FM, GY, NF, NI, NR, TV.\n - Updates: AM, AZ, BF, BW, BZ, CI, CR, GB, GP, HK, JM, KH, LB, LY, MV, PE, PK, SZ, TJ, US.\n* Minor documentation updates\n\nApr 11th, 2011\n* Bug fixes:\n - Adding date exclusion pattern in PhoneNumberMatcher.\n - Fixing bug with selecting a suitable region for numbers with leading zeros where mutiple regions\n   for that country code are possible.\n* Metadata changes:\n - Updates: AG, AI, AS, BB, BM, BS, CA, DM, DO, ET, FO, GD, GE, GU, IN, JM, KN, KY, LC, MN, MP, MR,\n   MS, NO, PR, TC, TR, TT, US, VC, VG, VI\n - New countries: CK, FK, GT, IO, KI, SJ, SV\n* Documentation updates and some small refactoring to AsYouTypeFormatter\n\nMar 31st, 2011\n* New functionality:\n - Can parse and format numbers in RFC-3966 format.\n - Added isAlphaNumber to check to see if a number is a \"vanity\" or \"alpha\" number\n - Can format a number made up of alpha-characters in an \"out-of-country\" format (e.g. 0011 1\n   800-SIX-FLAG to dial an American alpha-number from Australia).\n* Code changes:\n - Renamed private vars, private methods and fixed comments to try and differentiate between country\n   (calling) codes and region codes.\n == Non-backwards-compatible API changes: ==\n - Renamed getSupportedCountries to getSupportedRegions, as this more accurately reflects that the\n   library is based around region codes.\n - getNationalSignificantNumber is no longer a static method, but is instead an instance method.\n* Metadata changes:\n - Bug-fixes and updates for AU, AZ, EE, FI, IN, JO, KW, KZ, MV, RU, RR, VA\n - New country: ME\n\nMar 22nd, 2011\n* Metadata changes:\n - New mobile-number pattern for AU\n\nMar 10th, 2011\n* New functionality:\n - New function to format a number with the preferred domestic carrier code used when parsing,\n   falling back to a default calling code otherwise (formatNationalNumberWithPreferredCarrierCode).\n - We now store the preferred domestic carrier code used when the user calls parseAndKeepRawInput\n - New functionality to extract phone-numbers from text (findNumbers). This is just the first\n   version - it does not extract ALPHA numbers such as 0800 CALL ME, or numbers where alternate\n   endings are specified (such as 03-331 6005/6006).\n* Code changes:\n - Tidying up the test file to use several pre-defined phone number constants\n - Fixing several lint errors\n - Added javadoc to formatNationalNumberWithCarrierCode\n - Fixed bug where a null pointer exception was thrown when getAsYouTypeFormatter was called with an\n   invalid region code\n - Improved AsYouTypeFormatter to deal with countries with variable-length patterns such as LU\n* Metadata changes:\n - Bug-fixes and updates for the following countries: BF, BO, BR, CL, CO, CR, DK, FO, GE, KR, KW,\n   LA, LU, MU, SC, SH, TR, VE\n - New country: SH\n\nMar 10th, 2011\n* Code changes:\n  - releasing the code to run the demo on localhost or appengine.\n\nMar 7th, 2011\n* Metadata changes:\n - Adding support for AC\n\nFeb 11th, 2011\n* Metadata changes:\n - Update UAN number ranges for IM and JE.\n\nFeb 9th, 2011\n* Code changes:\n  - Better isNumberMatch method. This will now recognise numbers starting with a national prefix as\n    an NSN_MATCH, instead of SHORT_NSN_MATCH.\n    == Note Non-backwards-compatible API change here! ==\n      This will no longer throw a NumberParseException - instead we will return NOT_A_NUMBER if one\n      or other of the numbers provided do not match.\n  - New number-type UAN now supported in the code. This represents Company Numbers or Universally\n    Accessible Numbers.\n* Metadata changes:\n  - Bug-fixes and updates for the following countries: AG, AZ, BA, BE, CA, CU, ES, FI, GB, GD, GG,\n    IE, IL, IM, IN, IR, IT, JE, JP, KR, KW, NG, NZ, PK, PS, PT, RU, SE, SG, SY, US\n  - New countries: CO, LU, LY, MC, SM\n  - Addition of \"Personal Number\" ranges to all NANPA countries\n\nJan 31st, 2011\n* Code changes:\n  - Introducing equals() and hashCode() methods for the Phonenumber.PhoneNumber class\n\nJan 28th, 2011\n* Code changes:\n  - Fixing critical bug with non-Android-compatible code. isEmpty() was being used and CANON_EQ in\n    reg-ex matches.\n\nJan 20th, 2011\n* Code improvements:\n  - Handle null phone-numbers when parsing by throwing a NumberParseException.\n  - Handle extension written with an accented \"o\", as per Spanish, when parsing.\n  - Handle U+30FC dashes as phone-number punctuation.\n  - Allow \"ZZ\" or null regions to be specified for numbers starting with a full-width \"+\" symbol, or\n    with other characters (such as whitespace) before the leading +.\n  - new getLengthOfNationalDestinationCode function\n* Metadata changes:\n  - New types of numbers introduced: UAN (universal or \"company\" numbers) and short codes. Note that\n    \"generalDesc\" patterns do not encompass short-codes.  No code-support for these has been\n    introduced as of yet. We are also now enabling the collection of data for information such as\n    area-code-optional, and no-international-dialling ranges.\n  - Data updates as per ITU notifications/bug fixes for the following countries: AM, BH, CD, CG, CR,\n    DE, DJ, EE, GB, GN, HU, IE, JO, JP, LB, LR, MA, MK, MN, MR, NA, PG, SC, SG, SO, SZ, VN, ZA, ZW\n  - Data added for the following countries: BZ, CU, EC, FO, GI, HN, HT, LK, MT, MV, NU, PS, SD\n  - Indentation fixes in reg-exes for the following countries: BG, GB\n  - Allow nationalPrefixForParsing to be specified for countries with no national prefix, to handle\n    possible carrier prefixes\n\nJan 3rd, 2011\n* Metadata changes:\n  - Updates to JE\n  - Updated comments for GB/GG/IM/JE\n\nNovember 25th, 2010\n* Metadata changes:\n  - Updates to existing countries: AD, AG, AI, AN, AS, BB, BG, BM, BS, BW, CA, DM, DO, GD, GH, GM,\n    GU, IN, JM, KN, KY, KZ, LB, LC, MP, MS, PR, SY, TC, TT, TZ, US, VC, VG, VI.\n  - Reorganize reg-exes for better readability.\n  - Updated comments.\n\nOctober 22nd, 2010\n* Metadata changes:\n  - Updates to existing countries: AE, GB, GG, IM, JE\n\nOctober 15th, 2010\n* Code improvements:\n  - Allowed parsing of numbers that start with \"++\" or a full-width \"+\" symbol\n  - Allowed reg-exes for national and possible number patterns to have white space in them in the\n    source XML file\n  - Added a more useful toString method for the phone number proto class\n* Metadata changes:\n  - Updates to existing countries: AF, BF, BO, ES, GB, GG, IM, IS, JE, JE, JP, KR, PE, PT, RU, SE,\n    TT, ZW\n* Bug fixes:\n  - Parsing empty strings with invalid region codes no longer throws a null pointer exception\n\nSeptember 4th, 2010\n* Code improvement:\n  - Added new phone number type: pager\n* Metadata change:\n  - update to existing country: GG, IM, JE, RS, RU\n* Bug fixes:\n  - ArrayOutOfBoundException in AsYouTypeFormatter.getRememberedPosition()\n  - AsYouTypeFormatter for UK childline number\n\nSeptember 1st, 2010\n* Bug fix on KZ metadata.\n\nAugust 17th, 2010\n* Code improvement:\n  - Refactored BuildMetadataProtoFromXml.java into BuildMetadataFromXml.java and\n    BuildMetadataProtoFromXml.java\n  - Added BuildMetadataProtoFromXml.java and JSArrayBuilder.java\n  - Refactored CountryCodeToRegionCodeMap and CountryCodeToRegionCodeMapForTesting into separate\n    files.\n\nAugust 16th, 2010\n* Bug fixes\n  - AsYouTypeFormatter for formatting Chinese geographical numbers entered in national format.\n  - AsYouTypeFormatter for formatting Chinese 400/800 numbers entered in national format.\n* Metadata change:\n  - new countries: AM, AN, BH, GL, IS\n  - adding national prefix 1 to all NANPA countries.\n  - update to existing countries: BF, FR, UK, PK, RE\n\nAugust 4th, 2010\n* Further improve startup performance\n  - Preload no country specific metadata at startup.\n  - Stop creating the file containing mapping from country calling code to region code and loading\n    it at startup; instead, do the initialization in PhoneNumberUtil.\n\nJuly 31th, 2010\n\n* Improve startup performance\n  - Separate generated metadata binary file to one file per region\n  - Preload US at start up, and load other region at the time when needed\n  - Create a file containing mapping from country calling code to region code, and load it at\n    startup\n  - Same change also applied to unittests\n\nJuly 30th, 2010\n* Metadata change:\n  - new country: TL\n  - update to existing country: AZ, CN, FR, GH, JO, LA, PG, PK, QA, SZ, UA, VN\n\n* Code improvement\n  - China local number formatting for AsYouTypeFormatter\n  - improve extension parsing to handle number in the form of +1 (645) 123 1234 ext. 910#\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-java-demo.md",
          "type": "blob",
          "size": 2.55078125,
          "content": "# How to run the Java demo\n\n## About this document\n\nThis document explains how to build and run the demo of the Java version of\nlibphonenumber, **from the command line** on **Linux** or **Mac**, using Google\nApp Engine. By following the instructions here, you can build a demo running\nagainst any revision of the Java code by supplying jar files you build on your\nown, or downloading the ones from [Maven\nCentral](http://repo1.maven.org/maven2/com/googlecode/libphonenumber/libphonenumber/).\n\n## Detailed steps\n\n### Install Google App Engine\n\nDownload and follow [the\ninstructions](http://cloud.google.com/appengine/downloads) to install the Java\nSDK of Google App Engine. This document assumes it is named as\n`appengine-java-sdk`. You may want to rename the directory after unpacking.\n\n### Check out the demo code\n\nCheck out the Java code:\n\n```\ngit clone https://github.com/google/libphonenumber.git\n```\n\nCreate a symlink to your unpacked appengine sdk directory at the same level as\nthe `java` directory. Alternatively, update `java/demo/build.xml` to point to\nthe right location for the appengine sdk.\n\n### Get the phone number library jars\n\nSave the `libphonenumber`, `geocoder`, `carrier`, and `prefixmapper` jars under\n`demo/war/WEB-INF/lib/`.\n\nYou can either download them from the  [Maven\nrepository](http://repo1.maven.org/maven2/com/googlecode/libphonenumber/) or\nbuild them yourself by running:\n\n```\ngit clone https://github.com/google/libphonenumber.git\ncd libphonenumber/java\nant jar\ncp build/jar/* demo/war/WEB-INF/lib\n```\n\n### Run the demo code\n\nStart the server:\n\n```\ncd demo\nant runserver\n```\n\nThis will start a server on your localhost, and you can try it out by pointing\nyour browser to http://localhost:8080/.\n\n## Troubleshooting\n\nIf you get a warning from App Engine asking you to upgrade your JRE to Java 1.6\nor later, you might need to install Java 1.6 and point your `JAVA_HOME` to it.\n\n*   To see your current `JAVA_HOME`, run `echo $JAVA_HOME`.\n*   To see the list of JDKs currently installed, use `update-java-alternatives\n    -l`.\n*   To reset `JAVA_HOME`, use `export JAVA_HOME=[path to Java 1.6 SDK]/jre`.\n\nNow run `ant runserver` to start the server on your localhost.\n\n## Uploading your own demo App Engine application\n\nIf you want to upload the demo to your own App Engine application, follow the\nsteps to [register an application with App\nEngine](http://cloud.google.com/appengine/docs/standard/java/gettingstarted/deploying-the-application).\n\nThen run:\n\n```\n../appengine-java-sdk/bin/appcfg.sh update war\n```\n\nThe demo will be uploaded to `http://application-id.appspot.com/`.\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}