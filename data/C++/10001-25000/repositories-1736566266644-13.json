{
  "metadata": {
    "timestamp": 1736566266644,
    "page": 13,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "barry-ran/QtScrcpy",
      "stars": 21865,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 8.1455078125,
          "content": "---\n# 语言: None, Cpp, Java, JavaScript, ObjC, Proto, TableGen, TextProto\nLanguage:        Cpp\n# BasedOnStyle:  WebKit\n# 访问说明符(public、private等)的偏移\nAccessModifierOffset: -4\n# 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行)\nAlignAfterOpenBracket: AlwaysBreak\n# 连续赋值时，对齐所有等号\nAlignConsecutiveAssignments: false\n# 连续声明时，对齐所有声明的变量名\nAlignConsecutiveDeclarations: false\n# 左对齐逃脱换行(使用反斜杠换行)的反斜杠\nAlignEscapedNewlines: Right\n# 水平对齐二元和三元表达式的操作数\nAlignOperands:   true\n# 对齐连续的尾随的注释\nAlignTrailingComments: true\n# 允许函数声明的所有参数在放在下一行\nAllowAllParametersOfDeclarationOnNextLine: false\n# 允许短的块放在同一行\nAllowShortBlocksOnASingleLine: false\n# 允许短的case标签放在同一行\nAllowShortCaseLabelsOnASingleLine: false\n# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All\nAllowShortFunctionsOnASingleLine: Empty\n# 允许短的if语句保持在同一行\nAllowShortIfStatementsOnASingleLine: false\n# 允许短的循环保持在同一行\nAllowShortLoopsOnASingleLine: false\n# 总是在定义返回类型后换行(deprecated)\nAlwaysBreakAfterDefinitionReturnType: None\n# 总是在返回类型后换行: None, All, TopLevel(顶级函数，不包括在类中的函数),\n#   AllDefinitions(所有的定义，不包括声明), TopLevelDefinitions(所有的顶级函数的定义)\nAlwaysBreakAfterReturnType: None\n# 总是在多行string字面量前换行\nAlwaysBreakBeforeMultilineStrings: false\n# 总是在template声明后换行\nAlwaysBreakTemplateDeclarations: true\n# false表示函数实参要么都在同一行，要么都各自一行\nBinPackArguments: false\n# false表示所有形参要么都在同一行，要么都各自一行\nBinPackParameters: false\n\n# 在大括号前换行: Attach(始终将大括号附加到周围的上下文), Linux(除函数、命名空间和类定义，与Attach类似),\n#   Mozilla(除枚举、函数、记录定义，与Attach类似), Stroustrup(除函数定义、catch、else，与Attach类似),\n#   Allman(总是在大括号前换行), GNU(总是在大括号前换行，并对于控制语句的大括号增加额外的缩进), WebKit(在函数前换行), Custom\n#   注：这里认为语句块也属于函数\nBreakBeforeBraces: Custom\n# 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效\nBraceWrapping:   \n  # class定义后面\n  AfterClass: true\n  # 控制语句后面\n  AfterControlStatement: false\n  # enum定义后面\n  AfterEnum: true\n  # 函数定义后面\n  AfterFunction: true\n  # 命名空间定义后面\n  AfterNamespace: true\n  # ObjC定义后面\n  AfterObjCDeclaration: false\n  # struct定义后面\n  AfterStruct: true\n  # union定义后面\n  AfterUnion: true\n  # extern 定义后面\n  AfterExternBlock: true\n  # catch之前\n  BeforeCatch: false\n  # else 之前\n  BeforeElse: false\n  # 缩进大括号\n  IndentBraces: false\n\n# 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行)\nBreakBeforeBinaryOperators: All\n\n# 继承列表的逗号前换行\nBreakBeforeInheritanceComma: true\n# 继承列表换行\n#BreakInheritanceList: BeforeColon\n# 在三元运算符前换行\nBreakBeforeTernaryOperators: true\n# 在构造函数的初始化列表的逗号前换行\nBreakConstructorInitializersBeforeComma: true\n# 初始化列表前换行\nBreakConstructorInitializers: BeforeComma\n# Java注解后换行\nBreakAfterJavaFieldAnnotations: false\n\nBreakStringLiterals: true\n# 每行字符的限制，0表示没有限制\nColumnLimit:     160\n# 描述具有特殊意义的注释的正则表达式，它不应该被分割为多行或以其它方式改变\nCommentPragmas:  '^ IWYU pragma:'\n# 紧凑 命名空间\nCompactNamespaces: false\n# 构造函数的初始化列表要么都在同一行，要么都各自一行\nConstructorInitializerAllOnOneLineOrOnePerLine: true\n# 构造函数的初始化列表的缩进宽度\nConstructorInitializerIndentWidth: 4\n# 延续的行的缩进宽度\nContinuationIndentWidth: 4\n# 去除C++11的列表初始化的大括号{后和}前的空格\nCpp11BracedListStyle: false\n# 继承最常用的指针和引用的对齐方式\nDerivePointerAlignment: false\n# 关闭格式化\nDisableFormat:   false\n# 自动检测函数的调用和定义是否被格式为每行一个参数(Experimental)\nExperimentalAutoDetectBinPacking: false\n# 固定命名空间注释\nFixNamespaceComments: true\n# 需要被解读为foreach循环而不是函数调用的宏\nForEachMacros:   \n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\n\nIncludeBlocks:   Preserve\n# 对#include进行排序，匹配了某正则表达式的#include拥有对应的优先级，匹配不到的则默认优先级为INT_MAX(优先级越小排序越靠前)，\n#   可以定义负数优先级从而保证某些#include永远在最前面\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           'stdafx\\.'  \n    Priority:        1\n  - Regex:           '.*'\n    Priority:        1\n\nIncludeIsMainRegex: '(Test)?$'\n# 缩进case标签\nIndentCaseLabels: false\n\nIndentPPDirectives: None\n# 缩进宽度\nIndentWidth:     4\n# 函数返回类型换行时，缩进函数声明或函数定义的函数名\nIndentWrappedFunctionNames: true\n\nJavaScriptQuotes: Leave\n\nJavaScriptWrapImports: true\n# 保留在块开始处的空行\nKeepEmptyLinesAtTheStartOfBlocks: true\n# 开始一个块的宏的正则表达式\nMacroBlockBegin: ''\n# 结束一个块的宏的正则表达式\nMacroBlockEnd:   ''\n# 连续空行的最大数量\nMaxEmptyLinesToKeep: 1\n\n# 命名空间的缩进: None, Inner(缩进嵌套的命名空间中的内容), All\nNamespaceIndentation: All\nObjCBinPackProtocolList: Auto\n# 使用ObjC块时缩进宽度\nObjCBlockIndentWidth: 4\n# 在ObjC的@property后添加一个空格\nObjCSpaceAfterProperty: true\n# 在ObjC的protocol列表前添加一个空格\nObjCSpaceBeforeProtocolList: true\n\nPenaltyBreakAssignment: 2\n\nPenaltyBreakBeforeFirstCallParameter: 19\n# 在一个注释中引入换行的penalty\nPenaltyBreakComment: 300\n# 第一次在<<前换行的penalty\nPenaltyBreakFirstLessLess: 120\n# 在一个字符串字面量中引入换行的penalty\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\n# 对于每个在行字符数限制之外的字符的penalty\nPenaltyExcessCharacter: 1000000\n# 将函数的返回类型放到它自己的行的penalty\nPenaltyReturnTypeOnItsOwnLine: 60\n# 指针和引用的对齐: Left, Right, Middle\nPointerAlignment: Right\n\n#RawStringFormats: \n#  - Delimiter:       pb\n#    Language:        TextProto\n#    BasedOnStyle:    google\n# 允许重新排版注释\nReflowComments:  false\n# 允许排序#include\nSortIncludes:    true\n\nSortUsingDeclarations: true\n# 在C风格类型转换后添加空格\nSpaceAfterCStyleCast: false\n# 模板关键字后面添加空格\nSpaceAfterTemplateKeyword: true\n# 在赋值运算符之前添加空格\nSpaceBeforeAssignmentOperators: true\n# 开圆括号之前添加一个空格: Never, ControlStatements, Always\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\n# 在空的圆括号中添加空格\nSpaceInEmptyParentheses: false\n# 在尾随的评论前添加的空格数(只适用于//)\nSpacesBeforeTrailingComments: 1\n# 在尖括号的<后和>前添加空格\nSpacesInAngles:  false\n# 在容器(ObjC和JavaScript的数组和字典等)字面量中添加空格\nSpacesInContainerLiterals: true\n# 在C风格类型转换的括号中添加空格\nSpacesInCStyleCastParentheses: false\n# 在圆括号的(后和)前添加空格\nSpacesInParentheses: false\n# 在方括号的[后和]前添加空格，lamda表达式和未指明大小的数组的声明不受影响\nSpacesInSquareBrackets: false\n# 标准: Cpp03, Cpp11, Auto\nStandard:        Cpp11\n# tab宽度\nTabWidth:        4\n# 使用tab字符: Never, ForIndentation, ForContinuationAndIndentation, Always\nUseTab:          Never\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2900390625,
          "content": "/output\n*.user\n/QtScrcpy/*.user\n/server/.gradle\n/server/.idea\n/server/build\n/server/gradle/wrapper/gradle-wrapper.jar\n/server/gradle/wrapper/gradle-wrapper.properties\n/server/gradlew\n/server/gradlew.bat\n/server/local.properties\n/build/\nbuild-*\n*.DS_Store\nuserdata.ini\nInfo_Mac.plist\n/ci/build_temp"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1123046875,
          "content": "[submodule \"QtScrcpy/QtScrcpyCore\"]\n\tpath = QtScrcpy/QtScrcpyCore\n\turl = git@github.com:barry-ran/QtScrcpyCore.git\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.0908203125,
          "content": "﻿cmake_minimum_required(VERSION 3.19 FATAL_ERROR)\nproject(all)\n\nadd_subdirectory(QtScrcpy)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.107421875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (C) 2019 Rankun\n   Copyright (C) 2019-2025 Rankun\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "QtScrcpy",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.8798828125,
          "content": "# QtScrcpy \n\n[![Financial Contributors to Open Collective](https://opencollective.com/QtScrcpy/all/badge.svg?label=financial+contributors)](https://opencollective.com/QtScrcpy)\n![Windows](https://github.com/barry-ran/QtScrcpy/workflows/Windows/badge.svg)\n![MacOS](https://github.com/barry-ran/QtScrcpy/workflows/MacOS/badge.svg)\n![Ubuntu](https://github.com/barry-ran/QtScrcpy/workflows/Ubuntu/badge.svg)\n\n![license](https://img.shields.io/badge/license-Apache2.0-blue.svg)\n![release](https://img.shields.io/github/v/release/barry-ran/QtScrcpy.svg)\n\n[中文用户？点我查看中文介绍](README_zh.md)\n\nQtScrcpy supports displaying and controlling Android devices via USB or over network. It does NOT require root privileges.\n\nIt supports three major platforms: GNU/Linux, Windows and macOS.\n\nIt focuses on:\n\n - **lightness** (displays only the device screen)\n - **performance** (30~60 fps)\n - **quality** (1920×1080 or above)\n - **low latency** ([35~70ms][lowlatency])\n - **low startup time** (only about 1 second to display the first frame)\n - **non-intrusiveness** (nothing will be installed on the device)\n\n[lowlatency]: https://github.com/Genymobile/scrcpy/pull/646\n\n![win](screenshot/win-en.png)\n\n![mac](screenshot/mac-en.png)\n\n![linux](screenshot/linux-en.png)\n\n## Mapping Keys\nYou can write your script to map keyboard and mouse actions to touches and clicks of the mobile phone according to your needs. [Here](docs/KeyMapDes.md) are the script writing rules.\n\nScript for TikTok and some other games are provided by default. Once enabled, you can play the game with your keyboard and mouse. The default key mapping for PUBG Mobile is as follows:\n\n![game](screenshot/game.jpg)\n\n[Here is a video demonstration playing PUBG Mobile.](http://mp.weixin.qq.com/mp/video?__biz=MzU1NTg5MjYyNw==&mid=100000015&sn=3e301fdc5a364bd16d6207fa674bc8b3&vid=wxv_968792362971430913)\n\nInstruction for adding new customized mapping files.\n\n- Write a customized script and put it in the `keymap` directory\n- Click `refresh script` to show it\n- Select your script\n- Connect to your phone, start service and click `apply`\n- Press `~` key (the SwitchKey in the key map script) to switch to custom mapping mode\n- Press the ~ key again to switch back to normal mode\n- (For games such as PUBG Mobile) If you want to move vehicles with the STEER_WHEEL keys, you need to set the move mode to `single rocker mode`.\n\n## Group control\nYou can control all your phones at the same time.\n\n![group-control-demo](docs/image/group-control.gif)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=barry-ran/QtScrcpy&type=Date)](https://star-history.com/#barry-ran/QtScrcpy&Date)\n\n## Thanks\n\nQtScrcpy is based on [Genymobile](https://github.com/Genymobile)'s [scrcpy](https://github.com/Genymobile/scrcpy) project. Thanks a lot!\n\nThe difference between QtScrcpy and the original scrcpy is as follows:\n\nkey points|scrcpy|QtScrcpy\n--|:--:|:--:\nui|sdl|qt\nvideo encode|ffmpeg|ffmpeg\nvideo render|sdl|opengl\ncross-platform|self implemented|provided by Qt\nlanguage|C|C++\nstyle|sync|async\nkeymap|no custom keymap|support custom keymap\nbuild|meson+gradle|qmake or CMake\n\n- It's very easy to customize your GUI with Qt\n- Asynchronous programming of Qt-based signal slot mechanism improves performance\n- Easy to learn\n- Add support for multi-touch\n\n\n## Learn\n\nIf you are interested in it and want to learn how it works but do not know how to get started, you can choose to purchase my recorded video lessons.\nIt details the development architecture and the development process of the entire software and helps you develop QtScrcpy from scratch.\n\nCourse introduction：[https://blog.csdn.net/rankun1/article/details/87970523](https://blog.csdn.net/rankun1/article/details/87970523)\n\nYou can join my QQ group for QtScrcpy and exchange ideas with like-minded friends.：\n\nQQ Group number：901736468\n\n\n## Requirements\nAndroid API >= 21 (Android 5.0).\n\nMake sure you have enabled [ADB debugging][enable-adb] on your device(s).\n\n[enable-adb]: https://developer.android.com/studio/command-line/adb.html#Enabling\n\n\n## Download\n\n[gitee-download]: https://gitee.com/Barryda/QtScrcpy/releases\n[github-download]: https://github.com/barry-ran/QtScrcpy/releases\n\n### Windows\nOn Windows, for simplicity, prebuilt archives with all the dependencies (including ADB) are available at Releases:\n\n - [`QtScrcpy`][github-download]\n\nor you can [build it yourself](#Build)\n\n### Mac OS\nOn Mac OS, for simplicity, prebuilt archives with all the dependencies (including ADB) are available at Releases:\n\n- [`QtScrcpy`][github-download]\n\nor you can [build it yourself](#Build)\n\n### Linux\nFor Arch Linux Users, you can use AUR to install: `yay -Syu qtscrcpy` (may be outdated; maintainer: [yochananmarqos](https://aur.archlinux.org/account/yochananmarqos))\n\nFor users in other distros, you can use the prebuilt archives from Releases:\n\n- [`QtScrcpy`][github-download]\n\nor you can get it at [GitHub Actions](https://github.com/barry-ran/QtScrcpy/actions/workflows/ubuntu.yml), in branch `dev` and download the latest artifact.\n\nor you can [build it yourself](#Build) (not recommended, get it in Actions if you can)\n\n## Run\nConnect to your Android device on your computer, then run the program and click `USB connect` or `WiFi connect`\n\n### Wireless connection steps (ensure that the mobile phone and PC are on the same LAN):\n1. Enable USB debugging in developer options on the Android device\n2. Connect the Android device to the computer via USB\n3. Click update device, and you will see that the device number is updated\n4. Click get device IP\n5. Click start adbd\n6. Click wireless connect\n7. Click update device again, and another device with an IP address will be found. Select this device.\n8. Click start service\n\n\nNote: it is not necessary to keep your Android device connected via USB after you start adbd.\n\n## Interface button introduction：\n\n- Start config: function parameter settings before starting the service    \n\n    You can set the bit rate, resolution, recording format, and video save path of the locally recorded video.\n\n    - Background record: the Android device screen is not displayed after starting the service. It is recorded in the background.\n    - Always on top: the video window for Android devices will be kept on the top\n    - Close screen: automatically turn off the Android device screen to save power after starting the service\n    - Reverse connection: service startup mode. You can uncheck it if you experience connection failure with a message `more than one device`\n    \n- Refresh devices: Refresh the currently connected device\n- Start service: connect to the Android device\n- Stop service: disconnect from the Android device\n- Stop all services: disconnect all connected Android devices\n- Get device IP: Get the IP address of the Android device and update it to the \"Wireless\" area for the ease of wireless connection setting.\n- Start adbd: Start the adbd service of the Android device. You must start it before the wireless connection.\n- Wireless connect: Connect to Android devices wirelessly\n- Wireless disconnect: Disconnect wirelessly connected Android devices\n- adb command: execute customized ADB commands (blocking commands are not supported now, such as a shell)\n\n\n## The main function\n- Display Android device screens in real-time\n- Real-time mouse and keyboard control of Android devices\n- Screen recording\n- Screenshot to png\n- Wireless connection\n- Supports multiple device connections\n- Full-screen display\n- Display on the top\n- Install apk: drag and drop apk to the video window to install\n- Transfer files: Drag files to the video window to send files to Android devices\n- Background recording: record only, no display interface\n- Copy-paste\n\n    It is possible to synchronize clipboards between the computer and the device, in\n    both directions:\n\n    - `Ctrl + c` copies the device clipboard to the computer clipboard;\n    - `Ctrl + Shift + v` copies the computer clipboard to the device clipboard;\n    - `Ctrl + v` _pastes_ the computer clipboard as a sequence of text events (non-ASCII characters does not yet work).\n- Group control\n- Sync device speaker sound to the computer (based on [sndcpy](https://github.com/rom1v/sndcpy), Android 10+ only)\n\n## Shortcuts\n\n | Action                                 |   Shortcut (Windows)          |   Shortcut (macOS)\n | -------------------------------------- |:----------------------------- |:-----------------------------\n | Switch fullscreen mode                 | `Ctrl`+`f`                    | `Cmd`+`f`\n | Resize window to 1:1 (pixel-perfect)   | `Ctrl`+`g`                    | `Cmd`+`g`\n | Resize window to remove black borders  | `Ctrl`+`w` \\| _Double-click¹_ | `Cmd`+`w`  \\| _Double-click¹_\n | Click on `HOME`                        | `Ctrl`+`h` \\| _Middle-click_  | `Ctrl`+`h` \\| _Middle-click_\n | Click on `BACK`                        | `Ctrl`+`b` \\| _Right-click²_  | `Cmd`+`b`  \\| _Right-click²_\n | Click on `APP_SWITCH`                  | `Ctrl`+`s`                    | `Cmd`+`s`\n | Click on `MENU`                        | `Ctrl`+`m`                    | `Ctrl`+`m`\n | Click on `VOLUME_UP`                   | `Ctrl`+`↑` _(up)_             | `Cmd`+`↑` _(up)_\n | Click on `VOLUME_DOWN`                 | `Ctrl`+`↓` _(down)_           | `Cmd`+`↓` _(down)_\n | Click on `POWER`                       | `Ctrl`+`p`                    | `Cmd`+`p`\n | Power on                               | _Right-click²_                | _Right-click²_\n | Turn device screen off (keep mirroring)| `Ctrl`+`o`                    | `Cmd`+`o`\n | Expand notification panel              | `Ctrl`+`n`                    | `Cmd`+`n`\n | Collapse notification panel            | `Ctrl`+`Shift`+`n`            | `Cmd`+`Shift`+`n`\n | Copy to clipboard³                     | `Ctrl`+`c`                    | `Cmd`+`c`\n | Cut to clipboard³                      | `Ctrl`+`x`                    | `Cmd`+`x`\n | Synchronize clipboards and paste³      | `Ctrl`+`v`                    | `Cmd`+`v`\n | Inject computer clipboard text         | `Ctrl`+`Shift`+`v`            | `Cmd`+`Shift`+`v`\n\n_¹Double-click on black borders to remove them._  \n\n_²Right-click turns the screen on if it was off, presses BACK otherwise._\n\n_³Only on Android >= 7._\n\n## TODO\n[TODO](docs/TODO.md)\n\n## FAQ\n[FAQ](docs/FAQ.md)\n\n## DEVELOP\n[DEVELOP](docs/DEVELOP.md)\n\nEveryone is welcome to maintain this project and contribute your own code, but please follow these requirements:\n1. Please open PRs to the dev branch instead of the master branch\n2. Please rebase the original project before opening PRs\n3. Please submit PRs on the principle of \"small amounts, many times\" (one PR for a change is recommended)\n4. Please keep the code style consistent with the existing style.\n\n## Why develop QtScrcpy?\nThere are several reasons listed below according to importance (high to low).\n1. In the process of learning Qt, I need a real project to try.\n2. I have some background skills in audio and video and I am interested in them.\n3. I have some Android development skills. But I have used it for a long time. I want to consolidate it.\n4. I found scrcpy and decided to re-make it with the new technology stack (C++ + Qt + Opengl + FFmpeg).\n\n\n## Build\nAll the dependencies are provided and it is easy to compile.\n\n### QtScrcpy\n#### Non-Arch Linux Users\n1. Set up the Qt development environment with the official Qt installer or third-party tools such as [aqt](https://github.com/miurahr/aqtinstall) on the target platform.\n   Qt version bigger than 5.12 is required. (use MSVC 2019 on Windows)\n2. Clone the project with `git clone --recurse-submodules git@github.com:barry-ran/QtScrcpy.git`\n3. For Windows, open CMakeLists.txt with QtCreator and compile Release\n4. For Linux, directly run `./ci/linux/build_for_linux.sh \"Release\"`\nNote: compiled artifacts are located at `output/x64/Release`\n\n#### Arch Linux Users\n1. Install packages: `base-devel cmake qt5-base qt5-multimedia qt5-x11extras` (`qtcreator` is recommended)\n2. Clone the project with `git clone --recurse-submodules git@github.com:barry-ran/QtScrcpy.git`\n3. Run `./ci/linux/build_for_linux.sh \"Release\"`\n\n### Scrcpy-Server\n1. Set up Android development environment on the target platform\n2. Open server project in project root with Android Studio\n3. The first time you open it, if you do not have the corresponding version of Gradle, you will be prompted to find Gradle, whether to upgrade Gradle or create it. Select Cancel. After cancelling, you will be prompted to select the location of existing Gradle. Cancel it too and it will download automatically.\n4. After compiling the apk, rename it to scrcpy-server and replace QtScrcpy/QtScrcpyCore/src/third_party/scrcpy-server.\n\n## Licence\nSince it is based on scrcpy, it uses the same license as scrcpy\n\n    Copyright (C) 2025 Rankun\n    \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n        http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n## About the author\n\n[Barry CSDN](https://blog.csdn.net/rankun1)\n\nAn ordinary programmer, working mainly in C++ for desktop client development, graduated from Shandong for more than a year of steel simulation education software, and later moved to Shanghai to work in security, online education-related fields, familiar with audio and video. I have an understanding of audio and video fields such as voice calls, live education, video conferencing and other related solutions. I also have experience in Android, Linux servers and other kinds of development.\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/barry-ran/QtScrcpy/graphs/contributors\"><img src=\"https://opencollective.com/QtScrcpy/contributors.svg?width=890&button=false\" /></a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/QtScrcpy/contribute)]\n\n#### Individuals\n\n<a href=\"https://opencollective.com/QtScrcpy\"><img src=\"https://opencollective.com/QtScrcpy/individuals.svg?width=890\"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/QtScrcpy/contribute)]\n\n<a href=\"https://opencollective.com/QtScrcpy/organization/0/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/1/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/2/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/3/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/4/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/5/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/6/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/7/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/8/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/QtScrcpy/organization/9/website\"><img src=\"https://opencollective.com/QtScrcpy/organization/9/avatar.svg\"></a>\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 14.0849609375,
          "content": "# QtScrcpy\n\n![Windows](https://github.com/barry-ran/QtScrcpy/workflows/Windows/badge.svg)\n![MacOS](https://github.com/barry-ran/QtScrcpy/workflows/MacOS/badge.svg)\n![Ubuntu](https://github.com/barry-ran/QtScrcpy/workflows/Ubuntu/badge.svg)\n\n![license](https://img.shields.io/badge/license-Apache2.0-blue.svg)\n![release](https://img.shields.io/github/v/release/barry-ran/QtScrcpy.svg)\n\n[Speaks English? Click me for English introduction.](README.md)\n\nQtScrcpy 可以通过 USB / 网络连接Android设备，并进行显示和控制。无需root权限。\n\n同时支持 GNU/Linux ，Windows 和 MacOS 三大主流桌面平台。\n\n它专注于:\n\n - **精致** (仅显示设备屏幕)\n - **性能** (30~60fps)\n - **质量** (1920×1080以上)\n - **低延迟** ([35~70ms][低延迟])\n - **快速启动** (1s 内就可以看到第一帧图像)\n - **非侵入性** (不在设备上安装任何软件)\n\n[低延迟]: https://github.com/Genymobile/scrcpy/pull/646\n\n![win](screenshot/win-zh.png)\n\n![mac](screenshot/mac-zh.png)\n\n![linux](screenshot/linux-zh.png)\n\n## 作者开发了更加专业的投屏软件`极限投屏`\n极限投屏功能&特点：\n- 设备投屏&控制：批量投屏、单个控制、批量控制\n- 分组管理\n- wifi投屏/OTG投屏\n- adb shell快捷指令\n- 文件传输、apk安装\n- 投屏数量多：在OTG投屏模式，设置分辨率和流畅度为低的情况下，单台电脑可以同时管理500+台手机\n- 低延迟：usb投屏1080p延迟在30ms以内，在相同分辨率流畅度情况下，比市面上所有投屏软件延迟都低\n- cpu占用率低：纯C++开发，高性能GPU视频渲染\n- 高分辨率：可调节，最大支持安卓终端的原生分辨率\n- 完美中文输入：支持闲鱼app，支持三星手机\n- 免费版最多投屏10台，功能无限制(除了自动重新投屏)\n- 极限投屏使用教程：https://lrbnfell4p.feishu.cn/docx/QRMhd9nImorAGgxVLlmczxSdnYf\n- 极限投屏qq交流群：822464342\n- 极限投屏界面预览：\n![quickmirror](docs/image/quickmirror.png)\n\n## 自定义按键映射\n可以根据需要，自己编写脚本将键盘按键映射为手机的触摸点击，编写规则在[这里](docs/KeyMapDes_zh.md)。\n\n默认自带了针对和平精英手游和抖音进行键鼠映射的映射脚本，开启平精英手游后可以用键鼠像玩端游一样玩和平精英手游，开启抖音映射以后可以使用上下左右方向键模拟上下左右滑动，你也可以按照[编写规则](docs/KeyMapDes_zh.md)编写其他游戏的映射文件，默认按键映射如下：\n\n![game](screenshot/game.jpg)\n\n[这里有玩和平精英的视频演示](http://mp.weixin.qq.com/mp/video?__biz=MzU1NTg5MjYyNw==&mid=100000015&sn=3e301fdc5a364bd16d6207fa674bc8b3&vid=wxv_968792362971430913&idx=1&vidsn=eec329cc13c3e24c187dc9b4d5eb8760&fromid=1&scene=20&xtrack=1&clicktime=1567346543&sessionid=1567346375&subscene=92&ascene=0&fasttmpl_type=0&fasttmpl_fullversion=4730859-zh_CN-zip&fasttmpl_flag=0&realreporttime=1567346543910#wechat_redirect)\n\n自定义按键映射操作方法如下：\n- 编写自定义脚本放入 keymap 目录\n- 点击刷新脚本，确保脚本可以被检测到\n- 选择需要的脚本\n- 连接手机并启动服务之后，点击应用脚本\n- 按`~`（即脚本中定义的 SwitchKey）键切换为自定义映射模式即可启用\n- 再次按~键切换为正常控制模式\n- （对于和平精英等游戏）若想使用方向盘控制载具，记得在载具设置中设置为单摇杆模式\n\n## 批量操作\n你可以同时控制所有的手机\n\n## Star历史\n\n[![Star History Chart](https://api.star-history.com/svg?repos=barry-ran/QtScrcpy&type=Date)](https://star-history.com/#barry-ran/QtScrcpy&Date)\n\n![gc](docs/image/group-control.gif)\n\n## 感谢\n\n基于[Genymobile](https://github.com/Genymobile)的[scrcpy](https://github.com/Genymobile/scrcpy)项目进行复刻，重构，非常感谢。\n\n## 比较\nQtScrcpy 和 Scrcpy 区别如下：\n关键点|scrcpy|QtScrcpy\n--|:--:|:--:\n界面|sdl|qt\n视频解码|ffmpeg|ffmpeg\n视频渲染|sdl|opengl\n跨平台基础设施|自己封装|Qt\n编程语言|C|C++\n编程方式|同步|异步\n按键映射|不支持自定义|支持自定义按键映射\n编译方式|Meson+Gradle|CMake\n\n- 使用Qt可以非常容易的定制自己的界面\n- 基于Qt的信号槽机制的异步编程提高性能\n- 方便新手学习\n- 增加多点触控支持\n\n\n## 学习它\n如果你对它感兴趣，想学习它的实现原理而又感觉无从下手，可以选择购买我录制的视频课程，\n里面详细介绍了整个软件的开发架构以及开发流程，带你从无到有的开发 QtScrcpy：\n\n课程介绍：[https://blog.csdn.net/rankun1/article/details/87970523](https://blog.csdn.net/rankun1/article/details/87970523)\n\n或者你也可以加入我的 QtScrcpy QQ 群，和志同道合的朋友一块互相交流技术：\n\nQQ群号：901736468\n\n\n## 要求\nAndroid 部分至少需要 API 21（Android 5.0）。\n\n您要确保在 Android 设备上[启用adb调试][enable-adb]。\n\n[enable-adb]: https://developer.android.com/studio/command-line/adb.html#Enabling\n\n\n## 下载\n\n[gitee-download]: https://gitee.com/Barryda/QtScrcpy/releases\n[github-download]: https://github.com/barry-ran/QtScrcpy/releases\n\n### Windows\n\nWindows 平台，你可以直接使用我编译好的可执行程序:\n\n - [国内下载][gitee-download]\n - [国外下载][github-download]\n\n你也可以[自己编译](##编译)\n\n### Mac OS\n\nMac OS 平台，你可以直接使用我编译好的可执行程序:\n\n- [国内下载][gitee-download]\n- [国外下载][github-download]\n\n你也可以[自己编译](##编译)\n\n### Linux\n\n对于 Arch Linux 用户，可以使用 AUR 安装：`yay -Syu qtscrcpy`（可能版本并非最新；维护者：[yochananmarqos](https://aur.archlinux.org/account/yochananmarqos)）\n\n其他发行版的用户可以直接使用我编译好的可执行程序:\n\n- [国外下载][github-download]\n\n你也可以从 [GitHub Actions](https://github.com/UjhhgtgTeams/QtScrcpy/actions/workflows/ubuntu.yml) 获取最新的自动编译好的软件\n\n当然，你也可以[自己编译](##编译)（不推荐，需要准备环境）\n\n目前只在 Ubuntu 和 Arch Linux 上测试过编译过程\n\n## 运行\n在你的电脑上接入Android设备，然后运行程序，点击 `一键USB连接` 或者 `一键WIFI连接`\n\n### 无线连接步骤\n1. 将手机和电脑连接到同一局域网\n2. 安卓手机端在开发者选项中打开 USB 调试\n3. 通过 USB 连接安卓手机到电脑\n4. 点击刷新设备，会看到有设备号更新出来\n5. 点击获取设备 IP\n6. 点击启动 adbd\n7. 无线连接\n8. 再次点击刷新设备，发现多出了一个 IP 地址开头的设备，选择这个设备\n9. 启动服务\n\n备注：启动 adbd 以后无需继续连接 USB 线，以后连接断开都不再需要，除非 adbd 停止运行\n\n## 界面解释\n\n- 启动配置：启动服务前的功能参数设置    \n\n    分别可以设置本地录制视频的比特率、分辨率、录制格式、录像保存路径等。\n\n    - 仅后台录制：启动服务不显示界面，只录制 Android 设备屏幕\n    - 窗口置顶：Android 设备显示窗口置顶\n    - 自动息屏：启动服务以后，自动关闭 Android 设备屏幕以节省电量\n    - 使用 Reverse：服务启动模式，出现服务启动失败报错 \"more than one device\" 可以去掉这个勾选尝试连接\n    \n- 刷新设备列表：刷新当前连接的设备\n- 启动服务：连接到 Android 设备\n- 停止服务：断开与 Android 设备的连接\n- 停止所有服务：断开所有已连接的 Android 设备\n- 获取设备ip：获取到 Android 设备的 IP 地址，更新到无线区域中，方便进行无线连接\n- 启动adbd：启动 Android 设备的 adbd 服务，无线连接之前，必须要启动\n- 无线连接：使用无线方式连接 Android 设备\n- 无线断开：断开无线方式连接的 Android 设备\n- 命令行：执行自定义 adb 命令（目前不支持阻塞命令，例如shell）\n\n\n## 功能\n- 实时显示 Android 设备屏幕\n- 实时键鼠控制Android设备\n- 屏幕录制\n- 截图\n- 无线连接\n- 多设备连接与批量操作\n- 全屏显示\n- 窗口置顶\n- 安装 apk：拖拽apk到显示窗口即可安装\n- 传输文件：拖拽文件到显示窗口即可发送文件到 Android 设备\n- 后台录制：只录制屏幕，不显示界面\n- 剪贴板同步:\n    在计算机和设备之间同步剪贴板：\n    - `Ctrl + c`将设备剪贴板复制到计算机剪贴板；\n    - `Ctrl + Shift + v`将计算机剪贴板复制到设备剪贴板；\n    - `Ctrl + v` 将计算机剪贴板作为一系列文本事件发送到设备（不支持非ASCII字符）\n- 同步设备扬声器声音到电脑（基于[sndcpy](https://github.com/rom1v/sndcpy)，仅支持安卓10级以上，目前不推荐使用，可使用蓝牙连接替代）\n\n## 快捷键\n\n | 功能                                   |   快捷键(Windows)              |   快捷键 (macOS)\n | -------------------------------------- |:----------------------------- |:-----------------------------\n | 切换全屏                               | `Ctrl`+`f`                     | `Cmd`+`f`\n | 调整窗口大小为 1:1                      | `Ctrl`+`g`                    | `Cmd`+`g`\n | 调整窗口大小去除黑边                    | `Ctrl`+`w` \\| _左键双击_       | `Cmd`+`w`  \\| _左键双击_\n | 点击 `主页`                            | `Ctrl`+`h` \\| _点击鼠标中键_    | `Ctrl`+`h` \\| _点击鼠标中键_\n | 点击 `BACK`                            | `Ctrl`+`b` \\| _右键双击_       | `Cmd`+`b`  \\| _右键双击_\n | 点击 `APP_SWITCH`                      | `Ctrl`+`s`                    | `Cmd`+`s`\n | 点击 `MENU`                            | `Ctrl`+`m`                    | `Ctrl`+`m`\n | 点击 `VOLUME_UP`                       | `Ctrl`+`↑` _(上)_             | `Cmd`+`↑` _(上)_\n | 点击 `VOLUME_DOWN`                     | `Ctrl`+`↓` _(下)_             | `Cmd`+`↓` _(下)_\n | 点击 `POWER`                           | `Ctrl`+`p`                    | `Cmd`+`p`\n | 打开电源                               | _右键双击_                     | _右键双击_\n | 关闭屏幕 (保持投屏)                     | `Ctrl`+`o`                    | `Cmd`+`o`\n | 打开下拉菜单                           | `Ctrl`+`n`                    | `Cmd`+`n`\n | 关闭下拉菜单                           | `Ctrl`+`Shift`+`n`            | `Cmd`+`Shift`+`n`\n | 复制到剪切板                           | `Ctrl`+`c`                    | `Cmd`+`c`\n | 剪切到剪切板                           | `Ctrl`+`x`                    | `Cmd`+`x`\n | 同步剪切板并粘贴                       | `Ctrl`+`v`                    | `Cmd`+`v`\n | 注入电脑剪切板文本                     | `Ctrl`+`Shift`+`v`            | `Cmd`+`Shift`+`v`\n\n鼠标左键双击黑色区域可以去除黑色区域\n\n如果电源关闭，鼠标右键双击打开电源；如果电源开启，鼠标右键双击相当于返回\n\n## TODO\n[后期计划](docs/TODO.md)\n\n## FAQ\n[常见问题说明](docs/FAQ.md)\n\n## 开发者\n[开发相关](docs/DEVELOP.md)\n\n欢迎大家一起维护这个项目，贡献自己的代码，不过请遵循以下几点要求：\n1. PR 请推向 dev 分支，不要推向 master 分支\n2. 提交 PR 之前请先变基原项目\n3. PR 请以少量多次的原则提交（即一个功能点提交一个 PR）\n4. 代码风格请保持和原有风格一致\n\n## 为什么开发 QtScrcpy？\n综合起来有以下几个原因，比重从大到小排列：\n1. 学习Qt的过程中需要一个项目实战一下\n2. 本身具有音视频相关技能，对音视频很感兴趣\n3. 本身具有 Android 开发技能，好久没用有点生疏，需要巩固一下\n4. 发现了 Scrcpy，决定用新的技术栈（C++ + Qt + Opengl + FFmpeg）进行复刻\n\n\n## 编译\n尽量提供了所有依赖资源，方便傻瓜式编译。\n\n### QtScrcpy\n#### 非  Arch Linux\n1. 使用官方 Qt Installer 或非官方工具（如 [aqt](https://github.com/miurahr/aqtinstall)）在目标平台上搭建Qt开发环境。\n需要 5.12 以上版本 Qt（在 Windows 上使用 MSVC 2019）\n2. 克隆该项目：`git clone --recurse-submodules git@github.com:barry-ran/QtScrcpy.git`\n3. Windows 使用 QtCreator 打开项目下 CMakeLists.txt 并编译 Release\n4. Linux 用终端执行  `./ci/linux/build_for_linux.sh \"Release\"`\n注：编译结果位于 `output/x64/Release` 中\n\n#### Arch Linux\n1. 安装以下包：`qt5-base qt5-multimedia qt5-x11extras`（推荐安装 `qtcreator`）\n2. 克隆该项目：`git clone --recurse-submodules git@github.com:barry-ran/QtScrcpy.git`\n3. 用终端执行  `./ci/linux/build_for_linux.sh \"Release\"`\n注：编译结果位于 `output/x64/Release` 中\n\n### Scrcpy-Server\n1. 目标平台上搭建 Android 开发环境\n2. 使用 Android Studio 打开项目根目录中的 server\n3. 第一次打开时，如果你没有对应版本的 Gradle，Studio 会提示找不到 Gradle，是否升级 Gradle 并创建，选择取消，取消后会提示选择 Gradle 的位置，同样取消即可。Studio 会随后自动下载。\n4. 按需编辑代码\n5. 编译出 apk 以后改名为 scrcpy-server 并替换 `third_party/scrcpy-server` 即可\n\n## Licence\n由于是复刻的 Scrcpy，尊重它的 Licence\n\n    Copyright (C) 2025 Rankun\n    \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n        http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n## 关于作者\n\n[Barry 的 CSDN](https://blog.csdn.net/rankun1)\n\n一枚普通的程序员，工作中主要使用 C++ 进行桌面客户端开发，一毕业在山东做过一年多钢铁仿真教育软件，后来转战上海先后从事安防，在线教育相关领域工作，对音视频比较熟悉，对音视频领域如语音通话，直播教育，视频会议等相关解决方案有所了解。同时具有Android，Linux服务器等开发经验。\n"
        },
        {
          "name": "backup",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "keymap",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}