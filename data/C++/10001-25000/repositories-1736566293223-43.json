{
  "metadata": {
    "timestamp": 1736566293223,
    "page": 43,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/mars",
      "stars": 17376,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".code.yaml",
          "type": "blob",
          "size": 1.4765625,
          "content": "source:\n  # 文件或目录使用绝对路径，绝对路径按代码库根目录计算，以/开头。\n  # 提供产品代码库中编写的测试代码存放目录或文件名格式,以便后续代码统计环节进行排除等特殊处理\n  # 不要使用.*/等正则表达式屏蔽掉所有代码，会导致部门代码量骤减从而影响部门代码得分，还会导致Coverity扫不到任何代码而失败\n  # 请勿使用Tab键，将会导致yaml解析出错\n  #  test_source:\n  #    #用于匹配文件; 匹配方式为正则表达式。\n  #    filepath_regex: [\".*/java/test/.*\", \".*/test.java\"]\n  # 提供产品代码库中工具或框架自动生成的且在代码库中的代码，没有可为空。以便后续代码统计环节进行排除等特殊处理。\n  #  auto_generate_source:\n  #    # 自动生成代码文件的正则表达式，若无统一标识格式，可以指定具体目录，样例可参考test_source举例\n  #    filepath_regex:\n  # 提供产品代码库中直接以源码形式存在的第三方代码目录或代码文件名的正则表达。\n  # 此处备注的第三方代码在后续统计代码量环节会被排除，若代码库中不存在需要排除的第三方代码，该项配置标识可为空\n  third_party_source:\n    #第三方代码文件的正则表达式，若无统一标识格式，可以指定具体目录，样例可参考test_source举例\n    filepath_regex:[\".*/mars/zstd/.*\", \".*/mars/googletest/.*\", \".*/mars/googlemock/.*\", \".*/mars/boost/.*\"]"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.16015625,
          "content": "*.iml\n.gradle/\n/mars/local.properties\n.idea/\n.DS_Store\nbuild/\n/mars/captures\nobj/\n.vscode/\n*.swp\n*.pyc\nxcuserdata\nxcshareddata\n\n/mars/libraries/*/\n/mars/*/libs/\n!/mars/boost/libs/\n/samples/iOS/iOSDemo/Kernel/MarsLib/\n/samples/iOS/iOSDemoXlog/Kernel/MarsLib/\n/samples/iOS/XloggerSwiftDemo/Kernel/MarsLib/\n/samples/Mac/Kernel/MarsLib/\n/samples/android/xlogSample/app/src/main/jni/export_include/*.so\n\n#!/mars/libraries/mars_android_sdk/\n/mars/app/win32proj/Debug/*.idb\n/mars/app/win32proj/Debug/*.log\n/mars/app/win32proj/Debug/*.pdb\n/mars/app/win32proj/Debug/app.tlog/*.tlog\n/mars/app/win32proj/Debug/app.tlog/*.lastbuildstate\n/mars/app/win32proj/Debug/*.obj\n/mars/baseevent/win32proj/Debug/*.idb\n/mars/baseevent/win32proj/Debug/*.log\n/mars/baseevent/win32proj/Debug/*.pdb\n/mars/baseevent/win32proj/Debug/baseevent.tlog/*.tlog\n/mars/baseevent/win32proj/Debug/baseevent.tlog/*.lastbuildstate\n/mars/baseevent/win32proj/Debug/baseevent.tlog/*\n/mars/baseevent/win32proj/Debug/*.obj\n/mars/boost/Debug/*.log\n/mars/boost/Debug/boost.tlog/*.tlog\n/mars/boost/Debug/boost.tlog/*.lastbuildstate\n/mars/boost/Debug/boost.tlog/*\n/mars/boost/Debug/*.obj\n/mars/boost/Debug/*.idb\n/mars/boost/Debug/*.pdb\n/mars/comm/win32proj/Debug/*.obj\n/mars/comm/win32proj/Debug/*.idb\n/mars/comm/win32proj/Debug/*.log\n/mars/comm/win32proj/Debug/*.pdb\n/mars/comm/win32proj/Debug/comm.tlog/*.tlog\n/mars/comm/win32proj/Debug/comm.tlog/*.lastbuildstate\n/mars/comm/win32proj/Debug/comm.tlog/*\n/mars/log/win32proj/Debug/*.obj\n/mars/log/win32proj/Debug/*.idb\n/mars/log/win32proj/Debug/*.log\n/mars/log/win32proj/Debug/*.pdb\n/mars/log/win32proj/Debug/log.tlog/*.tlog\n/mars/log/win32proj/Debug/log.tlog/*.lastbuildstate\n/mars/xlog/win32proj/Debug/log.tlog/*\n/samples/win32test/Debug/*.obj\n/samples/win32test/Debug/*.idb\n/samples/win32test/Debug/*.pdb\n/samples/win32test/Debug/*.log\n/samples/win32test/Debug/*.pch\n/samples/win32test/Debug/win32test.tlog/*.tlog\n/samples/win32test/Debug/win32test.tlog/*\n/samples/win32test/Debug/win32test.tlog/*.lastbuildstate\n/mars/sdt/win32proj/Debug/*.idb\n/mars/sdt/win32proj/Debug/*.log\n/mars/sdt/win32proj/Debug/*.pdb\n/mars/sdt/win32proj/Debug/sdt.tlog/*.tlog\n/mars/sdt/win32proj/Debug/sdt.tlog/*.lastbuildstate\n/mars/sdt/win32proj/Debug/sdt.tlog/*\n/mars/stn/win32proj/Debug/*.obj\n/mars/stn/win32proj/Debug/*.idb\n/mars/stn/win32proj/Debug/*.log\n/mars/stn/win32proj/Debug/*.pdb\n/mars/stn/win32proj/Debug/stn.tlog/*.tlog\n/mars/stn/win32proj/Debug/stn.tlog/*.lastbuildstate\n/mars/stn/win32proj/Debug/stn.tlog/*\n/mars/win32proj/.vs/v14/*.suo\n/mars/win32proj/Debug/*.lib\n/mars/win32proj/Debug/*.log\n/mars/win32proj/Debug/mars.tlog/*.lastbuildstate\n/mars/win32proj/Debug/mars.tlog/*\n/mars/win32proj/*.opendb\n/mars/win32proj/*.db\n/mars/samples/android/marsSampleChat/local.properties\n.autotools\n.cproject\n.project\n*.lib\n*.pdb\nmars/win32proj/Debug/mars.lastbuildstate\nmars/win32proj/Debug/mars.unsuccessfulbuild\nmars/comm/verinfo.h\n\n# cmake\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n.vs\nmars/*/Win32/Debug\nmars/Win32/Debug\n*.dir\n*.out\nDebug-iphonesimulator\n*.xcodeproj\n*.build\ncmake_build\n*.settings\nmars/cmake-build-debug\nmars/openssl/include/openssl/*\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.939453125,
          "content": "# Contributing to Mars\nWelcome to [report Issues](https://github.com/Tencent/mars/issues) or [pull requests](https://github.com/Tencent/mars/pulls). It's recommended to read the following Contributing Guide first before contributing. \n\n## Issues\nWe use Github Issues to track public bugs and feature requests.\n\n### Search Known Issues First\nPlease search the existing issues to see if any similar issue or feature request has already been filed. You should make sure your issue isn't redundant.\n\n### Reporting New Issues\nIf you open an issue, the more information the better. Such as detailed description, screenshot or video of your problem, logcat and xlog or code blocks for your crash.\n\n## Pull Requests\nWe strongly welcome your pull request to make Mars better. \n\n### Branch Management\nThere are three main branches here:\n\n1. `master` branch.\n\t1. It is the latest (pre-)release branch. We use `master` for tags, with version number `1.1.0`, `1.2.0`, `1.3.0`...\n\t2. **Don't submit any PR on `master` branch.**\n2. `develop` branch. \n\t1. It is our stable developing branch. After full testing, `develop` will be merged to `master` branch for the next release.\n\t2. **You are recommended to submit bugfix or feature PR on `develop` branch.**\n3. `hotfix` branch. \n\t1. It is the latest tag version for hot fix. If we accept your pull request, we may just tag with version number `1.1.1`, `1.2.3`.\n\t2. **Only submit urgent PR on `hotfix` branch for next specific release.**\n\nNormal bugfix or feature request should be submitted to `develop` branch. After full testing, we will merge them to `master` branch for the next release. \n\nIf you have some urgent bugfixes on a published version, but the `master` branch have already far away with the latest tag version, you can submit a PR on hotfix. And it will be cherry picked to `develop` branch if it is possible.\n\n```\nmaster\n ↑\ndevelop        <--- hotfix PR\n ↑ \nfeature/bugfix PR\n```  \n\n### Make Pull Requests\nThe code team will monitor all pull request, we run some code check and test on it. After all tests passed, we will accecpt this PR. But it won't merge to `master` branch at once, which have some delay.\n\nBefore submitting a pull request, please make sure the followings are done:\n\n1. Fork the repo and create your branch from `master` or `hotfix`.\n2. Update code or documentation if you have changed APIs.\n3. Add the copyright notice to the top of any new files you've added.\n4. Check your code lints and checkstyles.\n5. Test and test again your code.\n6. Now, you can submit your pull request on `develop` or `hotfix` branch.\n\n## Code Style Guide\nUse [Code Style for C/C++](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/).\n\n* 4 spaces for indentation rather than tabs\n* private function should start with \"__\".\n* function parameters should start with \"_\".\n\n## License\nBy contributing to Mars, you agree that your contributions will be licensed\nunder its [MIT LICENSE](https://github.com/Tencent/mars/blob/master/LICENSE)\n"
        },
        {
          "name": "Copyright Notice of Boost",
          "type": "blob",
          "size": 10.9111328125,
          "content": "Copyright (C) 1999, 2000 Jaakko Jarvi (jaakko.jarvi@cs.utu.fi)\nCopyright (C) 2000, 2001 Stephen Cleary\nCopyright (C) 2001-2003 Douglas Gregor (gregod@cs.rpi.edu)\nCopyright (C) 2002 Brad King (brad.king@kitware.com)\nCopyright (C) 2003 Vesa Karvonen\nCopyright (C) 2003, 2008 Fernando Luis Cacciola Carballal\nCopyright (C) 2004 Peder Holt\nCopyright (C) 2004, 2005 Arkadiy Vertleyb\nCopyright (C) 2005 Arkadiy Vertleyb, Peder Holt\nCopyright (C) 2005 Igor Chesnokov, mailto:ichesnokov@gmail.com (VC 6.5,VC 7.1 + counter code)\nCopyright (C) 2005 Peder Holt\nCopyright (C) 2005-2007 Peder Holt (VC 7.0 + framework)\nCopyright (C) 2006 Arkadiy Vertleyb\nCopyright (C) 2006 Steven Watanabe (VC 8.0)\nCopyright (C) 2006 Tobias Schwinger\nCopyright (C) 2007 Peder Holt\nCopyright (C) 2007, 2008 Steven Watanabe, Joseph Gauterin, Niels Dekker\nCopyright (C) 2009-2012 Lorenzo Caminiti\nCopyright (C) 2010 Paul A. Bristow added Doxygen comments\nCopyright (C) 2010 Peder Holt\nCopyright (C) 2011-2013 Vicente J. Botet Escriba\nCopyright (C) 2013-2014 Vicente J. Botet Escriba\nCopyright (C) 2014 Agustin Berge\nCopyright (C) 2014 Ian Forbed\nCopyright (C) 2014, 2015 Andrzej Krzemienski\nCopyright (C) 2014-2015 Vicente J. Botet Escriba\nCopyright (C) Christof Meerwald 2003\nCopyright (C) Dan Watkins 2003\nCopyright (C) Douglas Gregor 2008\nCopyright (c) 2001 Darin Adler\nCopyright (c) 2001 David Abrahams\nCopyright (c) 2001 Peter Dimov and Multi Media Ltd\nCopyright (c) 2001 Ronald Garcia, Indiana University (garcia@osl.iu.edu)\nCopyright (c) 2001, 2002 Peter Dimov and Multi Media Ltd\nCopyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd\nCopyright (c) 2001-2004 Peter Dimov and Multi Media Ltd\nCopyright (c) 2001-2008 Peter Dimov\nCopyright (c) 2002 Lars Gullik Bj�nnes <larsbj@lyx.org>\nCopyright (c) 2002 Peter Dimov and Multi Media Ltd\nCopyright (c) 2002 by Andrei Alexandrescu\nCopyright (c) 2002, 2003 Peter Dimov and Multi Media Ltd\nCopyright (c) 2002,2003, 2007 CrystalClear Software, Inc\nCopyright (c) 2002-2003 David Abrahams\nCopyright (c) 2002-2003 Eric Friedman\nCopyright (c) 2002-2003 Eric Friedman, Itay Maman\nCopyright (c) 2002-2006 CrystalClear Software, Inc\nCopyright (c) 2003 Daniel Frey\nCopyright (c) 2003 Howard Hinnant\nCopyright (c) 2003-2004, 2008 Gennaro Prota\nCopyright (c) 2003-2010 Christopher M. Kohlhoff (chris at kohlhoff dot com)\nCopyright (c) 2005 Matthew Calabrese\nCopyright (c) 2006 Johan Rade\nCopyright (c) 2006 Michael van der Westhuizen\nCopyright (c) 2006 Piotr Wyderski\nCopyright (c) 2006 Tomas Puverle\nCopyright (c) 2006-2008 Johan Rade\nCopyright (c) 2006-2013 Emil Dotchevski and Reverge Studios, Inc\nCopyright (c) 2008 Frank Mori Hess\nCopyright (c) 2008 Michael Marcin\nCopyright (c) 2008-2009 Frank Mori Hess\nCopyright (c) 2009 Frank Mori Hess\nCopyright (c) 2009 Helge Bahmann\nCopyright (c) 2009 Phil Endecott\nCopyright (c) 2009, 2011 Helge Bahmann\nCopyright (c) 2009, Spirent Communications, Inc\nCopyright (c) 2010      Bryce Lelbach\nCopyright (c) 2010 Beman Dawes\nCopyright (c) 2010 Eric Jourdanneau, Joel Falcou\nCopyright (c) 2010 Helge Bahmann\nCopyright (c) 2010 Ilya Murav'jov\nCopyright (c) 2010 Nuovation System Designs, LLC\nCopyright (c) 2011 Emil Dotchevski\nCopyright (c) 2011 Helge Bahmann\nCopyright (c) 2012 - 2014 Andrey Semashev\nCopyright (c) 2012 Hartmut Kaiser\nCopyright (c) 2012 Tim Blechmann\nCopyright (c) 2012-2014 Antony Polukhin\nCopyright (c) 2012-2014 Glen Joseph Fernandes\nCopyright (c) 2013 John Maddock, Antony Polukhin\nCopyright (c) 2013 Tim Blechmann\nCopyright (c) 2013-2014 Andrey Semashev\nCopyright (c) 2014 Adam Wulkiewicz, Lodz, Poland\nCopyright (c) 2014 Glen Fernandes\nCopyright (c) 2014-2015 Antony Polukhin\nCopyright (c) 2015 Ion Gaztanaga\nCopyright (c) Marshall Clow 2008-2012\nCopyright (c) Microsoft Corporation 2014\nCopyright 1999, 2000 Jaakko Jarvi (jaakko.jarvi@cs.utu.fi)\nCopyright 1999-2003 Aleksey Gurtovoy\nCopyright 2000 Jeremy Siek (jsiek@lsc.nd.edu)\nCopyright 2000 John Maddock (john@johnmaddock.co.uk)\nCopyright 2001 Dietmar Kuehl\nCopyright 2001, 2003, 2004, 2012 Daryle Walker\nCopyright 2002 Aleksey Gurtovoy (agurtovoy@meta-comm.com)\nCopyright 2002 Rani Sharoni (rani_sharoni@hotmail.com) and Robert Ramey\nCopyright 2002 The Trustees of Indiana University\nCopyright 2002, 2005 Daryle Walker\nCopyright 2002-2009, 2014 Beman Dawes\nCopyright 2003 (c) The Trustees of Indiana University\nCopyright 2003-2007 Jonathan Turkanis\nCopyright 2003-2013 Joaquin M Lopez Munoz\nCopyright 2004 Eric Niebler\nCopyright 2004 Pavel Vozenilek\nCopyright 2005 Alexander Nasonov\nCopyright 2005 Ben Hutchings\nCopyright 2005 Eric Niebler\nCopyright 2005-2013 Peter Dimov\nCopyright 2005-2014 Daniel James\nCopyright 2005-7 Anthony Williams\nCopyright 2005-8 Anthony Williams\nCopyright 2006 Andy Tompkins\nCopyright 2006 Roland Schwarz\nCopyright 2006 Thorsten Ottosen\nCopyright 2006-7 Anthony Williams\nCopyright 2006-8 Anthony Williams\nCopyright 2007 Andy Tompkins\nCopyright 2007 Baruch Zilber\nCopyright 2007 Boris Gubenko\nCopyright 2007 David Deakins\nCopyright 2007 Roland Schwarz\nCopyright 2007, 2008 Steven Watanabe, Joseph Gauterin, Niels Dekker\nCopyright 2007-2010 Anthony Williams\nCopyright 2008 CodeRage, LLC (turkanis at coderage dot com)\nCopyright 2008-2009 Frank Mori Hess\nCopyright 2008-2009,2012 Vicente J. Botet Escriba\nCopyright 2009-2011 Frederic Bron\nCopyright 2009-2011 Frederic Bron, Robert Stewart, Steven Watanabe & Roman Perepelitsa\nCopyright 2009-2011 Vicente J. Botet Escriba\nCopyright 2009-2012 Anthony Williams\nCopyright 2009-2014 Neil Groves\nCopyright 2010 Andy Tompkins\nCopyright 2010 Daniel James\nCopyright 2010 Just Software Solutions Ltd http://www.justsoftwaresolutions.co.uk\nCopyright 2012 IBM Corp\nCopyright 2012 Vicente Botet\nCopyright 2013 Ruslan Baratov\nCopyright 2013 Tim Blechmann\nCopyright 2015 Andrey Semashev\nCopyright 2015 Peter Dimov\nCopyright Aaron W. LaFramboise, Roland Schwarz, Michael Glassford 2004\nCopyright Adam D. Walling 2012\nCopyright Aleksey Gurtovoy 2000-2008\nCopyright Alexander Nasonov & Paul A. Bristow 2006\nCopyright Alexander Nasonov, 2006-2010\nCopyright Andrey Semashev 2007 - 2013\nCopyright Andy Tompkins 2006\nCopyright Antony Polukhin, 2011-2014\nCopyright Arno Schoedl & Neil Groves 2009\nCopyright Artyom Beilis 2010\nCopyright Beman Dawes 1994, 2006, 2008\nCopyright Beman Dawes 1999-2003\nCopyright Beman Dawes 2002-2009\nCopyright Beman Dawes 2003, 2006, 2010\nCopyright Beman Dawes 2015\nCopyright Beman Dawes and Daryle Walker 1999\nCopyright Bill Kempf 2001\nCopyright Bill Kempf 2002\nCopyright Boris Gubenko 2006 - 2007\nCopyright Bruno Dutra 2015\nCopyright Bryce Lelbach 2010\nCopyright Bryce Lelbach 2011\nCopyright Charly Chevalier 2015\nCopyright Christoper Kohlhoff 2007\nCopyright Christopher Brown 2013\nCopyright Christopher Jefferson 2011\nCopyright Craig Henderson 2002\nCopyright Cray, Inc. 2013\nCopyright Daniel Walker 2006\nCopyright Daniel Walker 2007\nCopyright Daniel Walker, Eric Niebler, Michel Morin 2008-2012\nCopyright Daniel Wallin 2005\nCopyright Daniel Wallin 2006\nCopyright Daniel Wallin, David Abrahams 2005\nCopyright Daniel Wallin, David Abrahams 2010\nCopyright Darin Adler 2001 - 2002\nCopyright Daryle Walker 2001-2002\nCopyright Daryle Walker and Paul Moore 2001-2002\nCopyright Daryle Walker and Stephen Cleary 2001-2002\nCopyright Dave Abrahams and Daniel Walker 1999-2003\nCopyright Dave Abrahams, Steve Cleary, Beman Dawes,\nCopyright Dave Abrahams, Steve Cleary, Beman Dawes, Howard\nCopyright David Abrahams 2003-2004\nCopyright David Abrahams 2005\nCopyright David Abrahams 2006\nCopyright David Abrahams 2009\nCopyright David Abrahams, Daniel Wallin 2003\nCopyright David Abrahams, Daniel Wallin 2005\nCopyright David Abrahams, Jeremy Siek, Daryle Walker 1999-2001\nCopyright David Abrahams, Vicente Botet 2009\nCopyright Dietmar Kuehl 2001\nCopyright Douglas Gregor 2001-2006\nCopyright Douglas Gregor 2010\nCopyright Dustin Spicuzza 2009\nCopyright Edward Diener 2011,2013\nCopyright Edward Diener 2014\nCopyright Edward Diener 2015\nCopyright Edward Nevill + Oliver Kowalke 2015\nCopyright Emil Dotchevski 2007\nCopyright Eric Jourdanneau, Joel Falcou 2010\nCopyright Eric Niebler 2014\nCopyright Fernando Luis Cacciola Carballal 2000-2004\nCopyright Frank Mori Hess 2007-2010\nCopyright Franz Detro 2014\nCopyright Greg Colvin and Beman Dawes 1998, 1999\nCopyright Guillaume Melquiond 2002 - 2003\nCopyright Guillaume Melquiond 2003\nCopyright Howard Hinnant 2007-2010\nCopyright Hubert Holin and Daryle Walker 2001-2002\nCopyright Ion Gaztanaga  2014-2015\nCopyright Ion Gaztanaga 2005-2014\nCopyright Jaap Suter 2003\nCopyright Jan Langer 2002\nCopyright Jens Mauer 2001\nCopyright Jens Maurer 2000-2001\nCopyright Jens Maurer 2001 - 2003\nCopyright Jens Maurer 2006\nCopyright Jeremy Siek 2000\nCopyright Jeremy Siek 2001\nCopyright Jeremy Siek 2002\nCopyright Jeremy Siek and John R. Bandela 2001\nCopyright Jessica Hamilton 2014\nCopyright Jim Douglas 2005\nCopyright Joel Falcou 2015\nCopyright Johan Rade 2006\nCopyright John Maddock & Thorsten Ottosen 2005\nCopyright John Maddock 2000\nCopyright John Maddock 2001 - 2003\nCopyright John Maddock 2005-2008\nCopyright John Maddock 2010\nCopyright John Maddock 2011\nCopyright John Maddock 2015\nCopyright John Maddock and Steve Cleary 2000\nCopyright John R. Bandela 2001\nCopyright John maddock 1999\nCopyright Jonathan Graehl 2004\nCopyright Jorge Lodos 2008\nCopyright Kevlin Henney and Dave Abrahams 1999\nCopyright Kevlin Henney, 2000-2005\nCopyright Lie-Quan Lee 2001\nCopyright Markus Schoepflin 2002 - 2003\nCopyright Markus Schoepflin 2005\nCopyright Martin Husemann 2012\nCopyright Martin Wille 2003\nCopyright Mat Marcus, Jesse Jones and Adobe Systems Inc 2001\nCopyright Michael Glassford 2004\nCopyright Microsoft Corporation  2014\nCopyright Neil Groves & Thorsten Ottosen & Pavol Droba 2003-2004\nCopyright Neil Groves 2003-2004\nCopyright Neil Groves 2007\nCopyright Nicolai M. Josuttis 2001\nCopyright Nicolai M. Josuttis 2001,\nCopyright Noel Belcourt 2007\nCopyright Nuxi, https://nuxi.nl/ 2015\nCopyright Oliver Kowalke 2009\nCopyright Oliver Kowalke 2014\nCopyright Oliver Kowalke 2015\nCopyright Pablo Halpern 2009\nCopyright Paul A. Bristow 2006\nCopyright Paul A. Bristow 2007\nCopyright Paul A. Bristow 2011 (added changesign)\nCopyright Paul Mensonides 2002-2011\nCopyright Paul Moore 1999\nCopyright Pavol Droba 2002-2006\nCopyright Peter Dimov 2000-2003\nCopyright Peter Dimov and David Abrahams 2002\nCopyright Rani Sharoni 2003-2005\nCopyright Rene Rivera 2005\nCopyright Rene Rivera 2008-2015\nCopyright Sergue E. Leontiev 2013\nCopyright Shunsuke Sogame 2005-2006\nCopyright Stefan Slapeta 2004\nCopyright Steve Cleary, Beman Dawes, Howard Hinnant & John Maddock 2000-2005\nCopyright Steven Watanabe 2009\nCopyright Steven Watanabe 2010-2011\nCopyright Steven Watanabe 2014\nCopyright Synge Todo 2003\nCopyright Thomas Sailer 2013\nCopyright Thomas Witt    2002\nCopyright Thorsten Ottosen 2002-2003\nCopyright Thorsten Ottosen 2003-2006\nCopyright Thorsten Ottosen, 2009\nCopyright Thorsten Ottosen, Neil Groves 2006 - 2008\nCopyright Timmo Stange 2007\nCopyright Toon Knapen 2001 - 2003\nCopyright Vicente J. Botet Escriba 2008-2009,2012\nCopyright Vladimir Prus 2002\nCopyright Vladimir Prus 2004\nCopyright Yuriy Krasnoschek 2009\nCopyright:   2007-2008 CodeRage, LLC\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.986328125,
          "content": "Tencent is pleased to support the open source community by making Mars available.  \n\nCopyright (C) 2016 THL A29 Limited, a Tencent company.  All rights reserved.\n\nIf you have downloaded a copy of the Mars binary from Tencent, please note that the Mars binary is licensed under the MIT License.\n\nIf you have downloaded a copy of the Mars source code from Tencent, please note that Mars source code is licensed under the MIT License, except for the third-party components listed below which are subject to different license terms.  Your integration of Mars into your own projects may require compliance with the MIT License, as well as the other licenses applicable to the third-party components included within Mars.\n\nA copy of the MIT License is included in this file.\n\nOther dependencies and licenses:\n\nOpen Source Software Licensed under the BSD 3-Clause License:\n--------------------------------------------------------------------\n\n1. libnatpmp  20080707\nCopyright (c) 2007-2008, Thomas BERNARD \nAll rights reserved.\n\nThe below software (2 to 4) in this distribution may have been modified by Tencent (“Tencent Modifications”). All Tencent Modifications are Copyright (C) 2016 THL A29 Limited.\n\n2. getaddrinfo.c  1.82\nCopyright (C) 1995, 1996, 1997, and 1998 WIDE Project.\nAll rights reserved.\n\n3. win32.cc  \nCopyright (c) 2004--2005, Google Inc.\nAll rights reserved.\n\n4. pingCtlTable.h  1.0\nCopyright(c)2004,Cisco URP imburses and Network Information Center in Beijing University of Posts and Telecommunications researches\nAll right reserved\n\n5. google protobuf\nCopyright 2014, Google Inc.  All rights reserved.\n\n\nTerms of the BSD 3-Clause License:\n--------------------------------------------------------------------\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of [copyright holder] nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\nOpen Source Software Licensed under the Boost Software License-Version 1.0: The below software in this distribution may have been modified by Tencent (“Tencent Modifications”). All Tencent Modifications are Copyright (C) 2016 THL A29 Limited.\n--------------------------------------------------------------------\n1. Boost  1.60.0\nCopyright Beman Dawes, David Abrahams, 1998-2005.\nCopyright Rene Rivera 2004-2007.\nFor other copyright notices, please see the file named \"Copyright Notice of Boost\".\n\n\nTerms of the Boost Software License-Version 1.0:\n--------------------------------------------------------------------\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the \"Software\") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nOpen Source Software Licensed under the OpenSSL License and the original SSLeay License: The below software in this distribution may have been modified by Tencent (“Tencent Modifications”). All Tencent Modifications are Copyright (C) 2016 THL A29 Limited.\n--------------------------------------------------------------------\n1. Openssl  1.0.2h \nCopyright (c) 1998-2015 The OpenSSL Project\nCopyright (c) 1995-1998 Eric A. Young, Tim J. Hudson\nAll rights reserved.\n\n\nTerms of the OpenSSL License and the original SSLeay License:\n--------------------------------------------------------------------\n\nLICENSE ISSUES:\n--------------------------------------------------------------------\nThe OpenSSL toolkit stays under a dual license, i.e. both the conditions of the OpenSSL License and the original SSLeay license apply to the toolkit.\nSee below for the actual license texts.\n\nOpenSSL License:\n--------------------------------------------------------------------\nCopyright (c) 1998-2016 The OpenSSL Project.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. All advertising materials mentioning features or use of this software must display the following acknowledgment:\n\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n\n4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact openssl-core@openssl.org.\n\n5. Products derived from this software may not be called \"OpenSSL\" nor may \"OpenSSL\" appear in their names without prior written permission of the OpenSSL Project.\n\n6. Redistributions of any form whatsoever must retain the following acknowledgment: \n\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n\nTHIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE OpenSSL PROJECT OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\n* This product includes cryptographic software written by Eric Young (eay@cryptsoft.com).  This product includes software written by Tim Hudson (tjh@cryptsoft.com).\n====================================================================\n\nOriginal SSLeay License:\n--------------------------------------------------------------------\nCopyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\nAll rights reserved.\n\nThis package is an SSL implementation written by Eric Young (eay@cryptsoft.com).\nThe implementation was written so as to conform with Netscapes SSL.\n\nThis library is free for commercial and non-commercial use as long as the following conditions are aheared to. The following conditions apply to all code found in this distribution, be it the RC4, RSA, lhash, DES, etc., code; not just the SSL code. The SSL documentation included with this distribution is covered by the same copyright terms except that the holder is Tim Hudson (tjh@cryptsoft.com).  \n\nCopyright remains Eric Young's, and as such any Copyright notices in the code are not to be removed.  If this package is used in a product, Eric Young should be given attribution as the author of the parts of the library used. This can be in the form of a textual message at program startup or in documentation (online or textual) provided with the package. \n  \nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n1. Redistributions of source code must retain the copyright notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software must display the following acknowledgement:\" This product includes cryptographic software written by Eric Young (eay@cryptsoft.com)\" The word 'cryptographic' can be left out if the rouines from the library being used are not cryptographic related :-).\n4. If you include any Windows specific code (or a derivative thereof) from the apps directory (application code) you must include an acknowledgement: \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n\nTHIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\nThe licence and distribution terms for any publically available version or derivative of this code cannot be changed.  i.e. this code cannot simply be copied and put under another distribution licence [including the GNU Public Licence.]\n\n\n\nOpen Source Software Licensed under the Zlib License: \n--------------------------------------------------------------------\n1. TinyXML-2  2.2.0\nCopyright (c) Lee Thomason and other contributors\n\n\nTerms of the Zlib License:\n--------------------------------------------------------------------\n\nCopyright (c) <''year''> <''copyright holders''>\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source distribution.\n\n\n\nOpen Source Software Licensed under the Apache License Version 2.0: The below software in this distribution may have been modified by Tencent (“Tencent Modifications”). All Tencent Modifications are Copyright (C) 2016 THL A29 Limited.\n--------------------------------------------------------------------\n1. CallStack.h\nCopyright (C) 2007 The Android Open Source Project\n\n2. CallStack.cpp\nCopyright (C) 2007 The Android Open Source Project\n\n3. protobuf-objc\nCopyright 2010 Booyah Inc.\nCopyright 2008 Cyrus Najmabadi\n\n\nTerms of the Apache License Version 2.0:\n--------------------------------------------------------------------\n\nApache License \n\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/ \n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\nYou must give any other recipients of the Work or Derivative Works a copy of this License; and \n\nYou must cause any modified files to carry prominent notices stating that You changed the files; and \n\nYou must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and \n\nIf the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. \n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. \n\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work\nTo apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.\nYou may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 \nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\n\n\nOpen Source Software Licensed under the MIT License: The below software in this distribution may have been modified by Tencent (“Tencent Modifications”). All Tencent Modifications are Copyright (C) 2016 THL A29 Limited.\n--------------------------------------------------------------------\n1. cpp-feather-ini-parser  1.42\nCopyright (c) 2014 Turbine1991 \n\n2. Dirent  1.22 \nCopyright (c) 2015 Toni Rönkkö \n\n\nTerms of the MIT License:\n--------------------------------------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nBSD 2-clause \"Simplified\" License\n--------------------------------------------------------------------\nmicro-ecc\n\nCopyright (c) 2014, Kenneth MacKay\nAll rights reserved.\n\n\nTerms of the BSD 2-clause \"Simplified\" License:\n--------------------------------------------------------------------\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.8720703125,
          "content": "## Mars\n\n[![license](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat)](https://github.com/Tencent/mars/blob/master/LICENSE)\n[![Release Version](https://img.shields.io/badge/release-1.2.3-red.svg)](https://github.com/Tencent/mars/releases)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Tencent/mars/pulls)\n[![WeChat Approved](https://img.shields.io/badge/Wechat_Approved-1.2.3-red.svg)](https://github.com/Tencent/mars/wiki)\n[![WeChat Approved](https://img.shields.io/badge/Platform(cmake)-%20iOS%20%7C%20OS%20X%20%7C%20Android(ndkr20)%20%7C%20Windows(vs2015)%20-brightgreen.svg)](https://github.com/Tencent/mars/wiki)\n\n(中文版本请参看[这里](#mars_cn))\n\nMars is a cross-platform infrastructure component developed by WeChat Mobile Team.\nIt has been proved to be effective by billions of WeChat users.\n\n1. Cross platform, easy to deploy if you are developing multi-platform or multi-business application.\n2. Suitable for small amount data transmission\n3. Mobile platform friendly, low power and traffic consumption\n4. A network solution fit for mobile application\n\n![mars](https://github.com/WeMobileDev/article/blob/master/assets/mars/mars.png?raw=true)\n\n* comm: common library, including socket, thread, message queue, coroutine, etc.\n* Xlog: a reliable log component with high-performance.\n* SDT: a network detection component.\n* STN: a signaling network component, the major part of Mars.\n\n## Samples\n\nStart with sample usage [here](https://github.com/Tencent/mars/wiki/Mars-sample-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E).\n\n## Getting started\n\npython scripts only support python3.10 or higher\n\nChoose [Android](#android) or [iOS/OS X](#apple) or [Windows](#windows).\n\n### <a name=\"android\">[Android](https://github.com/Tencent/mars/wiki/Mars-Android-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)</a>\n\nYou can use either [mars-wrapper](#wrapper) or [mars-core](#core). We recommend you to use mars-wrapper when you just want to build a sample or demo, while mars-core is preferred to be used in your APP.\n\n#### <a name=\"wrapper\">mars-wrapper</a>\n\nAdd dependencies by adding the following lines to your app/build.gradle.\n\n```xml\ndependencies {\n    compile 'com.tencent.mars:mars-wrapper:1.2.5'\n}\n```\n\n**OR**\n\n#### <a name=\"core\">mars-core</a>\n\nAdd dependencies by adding the following lines to your app/build.gradle.\n\n```xml\ndependencies {\n    compile 'com.tencent.mars:mars-core:1.2.5'\n}\n```\n**OR**\n#### <a name=\"\">mars-xlog</a>\nIf you just want to user xlog, add dependencies by adding the following lines to your app/build.gradle.\nnote: xlog is included in mars-core and mars-wrapper.\n\n```xml\ndependencies {\n    compile 'com.tencent.mars:mars-xlog:1.2.5'\n}\n```\n\nIf you read here, make sure you have added dependencies of mars-wrapper, mars-core or mars-xlog.\n\n#### <a name=\"Xlog\">Xlog Init</a>\n\nInitialize Xlog when your APP starts. Remember to use an exclusive folder to save the log files, no other files are acceptable in the folder since they would be removed by the cleansing function in Xlog automatically.\n\nWhen multiple processes is used in your app, make sure that each process owns its exclusive log file.\n\n```java\nSystem.loadLibrary(\"c++_shared\");\nSystem.loadLibrary(\"marsxlog\");\n\nfinal String SDCARD = Environment.getExternalStorageDirectory().getAbsolutePath();\nfinal String logPath = SDCARD + \"/marssample/log\";\n\n// this is necessary, or may crash for SIGBUS\nfinal String cachePath = this.getFilesDir() + \"/xlog\"\n\n//init xlog\nXlog xlog = new Xlog();\nLog.setLogImp(xlog);\n\nif (BuildConfig.DEBUG) {\n    Log.setConsoleLogOpen(true);\n  \tLog.appenderOpen(Xlog.LEVEL_DEBUG, Xlog.AppednerModeAsync, \"\", logPath, logFileName, 0);\n} else {\n    Log.setConsoleLogOpen(false);\n  \tLog.appenderOpen(Xlog.LEVEL_INFO, Xlog.AppednerModeAsync, \"\", logPath, logFileName, 0);\n}\n\n```\n\nUninitialized Xlog when your app exits\n\n\n```java\nLog.appenderClose();\n```\n\n#### <a name=\"STN\">STN Init</a>\n\nIf you add dependencies of mars-core to your project, you need to initialize and release STN.\nInitialize STN before you use it\n\n```java\n// set callback\nAppLogic.setCallBack(stub);\nStnLogic.setCallBack(stub);\nSdtLogic.setCallBack(stub);\n\n// Initialize the Mars PlatformComm\nMars.init(getApplicationContext(), new Handler(Looper.getMainLooper()));\n\n// Initialize the Mars\nStnLogic.setLonglinkSvrAddr(profile.longLinkHost(), profile.longLinkPorts());\nStnLogic.setShortlinkSvrAddr(profile.shortLinkPort());\nStnLogic.setClientVersion(profile.productID());\nMars.onCreate(true);\n\nBaseEvent.onForeground(true);\nStnLogic.makesureLongLinkConnected();\n```\nFirstly, you should call the setCallBack interface, and secondly, the Mars.init. Then, to initialize the Mars, there is to need to strictly follow the orders of the four commands. Finally, after Mars are initialized, onForeground and makesureLongLinkConnect can be called.\n\nDestroy STN or exit your app:\n\n```java\nMars.onDestroy();\n```\n\n#### <a name=\"even\">Event Change</a>\n\nNetwork change:\n\n```java\nBaseEvent.onNetworkChange()\n```\n**********\nIf you add dependencies of mars-wrapper to your project, you just need initialize STN and no need uninitialized.\n\n```java\nMarsServiceProxy.init(this, getMainLooper(),null);\n```\n************\nNo matter which way of dependencies you used, you must pay attention to these.\n\nThe state (background or foreground) of the APP is changed:\n\n```java\nBaseEvent.onForeground(boolean);\n```\n\nThe account of the APP is changed:\n\n```java\nStnLogic.reset();\n```\n\nIf you want to modify the encryption algorithm of Xlog, the packer/unpacker of longlink/shortlink, or you want to define the other components by yourself, refer [here](https://github.com/Tencent/mars/wiki/Mars-Android-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)\n\n### <a name=\"apple\">[iOS/OS X](https://github.com/Tencent/mars/wiki/Mars-iOS%EF%BC%8FOS-X-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)</a>\nCompile\n\n```python\npython build_ios.py\n```\n\nor \n```python\npython build_osx.py\n```\n\n1. Add mars.framework as a dependency of your project.\n2. Rename files in mars/libraries/mars_android_sdk/jni with .rewriteme extension to .cc extension.\n3. Add header files in mars/libraries/mars_android_sdk/jni and source files from step 2 into your project.\n\n#### <a name=\"Xlog\">Xlog Init</a>\n\nInitialize Xlog when your app starts. Remember to use an exclusive folder to save the log files, no other files are acceptable in the folder since they would be removed by the cleansing function in Xlog automatically.\n\n```cpp\nNSString* logPath = [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingString:@\"/log\"];\n\n// set do not backup for logpath\nconst char* attrName = \"com.apple.MobileBackup\";\nu_int8_t attrValue = 1;\nsetxattr([logPath UTF8String], attrName, &attrValue, sizeof(attrValue), 0, 0);\n\n// init xlogger\n#if DEBUG\nxlogger_SetLevel(kLevelDebug);\nappender_set_console_log(true);\n#else\nxlogger_SetLevel(kLevelInfo);\nappender_set_console_log(false);\n#endif\nXLogConfig config;\nconfig.mode_ = kAppenderAsync;\nconfig.logdir_ = [logPath UTF8String];\nconfig.nameprefix_ = \"Test\";\nconfig.pub_key_ = \"\";\nconfig.compress_mode_ = kZlib;\nconfig.compress_level_ = 0;\nconfig.cachedir_ = \"\";\nconfig.cache_days_ = 0;\nappender_open(config);\n```\n\nClose xlog in function \"applicationWillTerminate\"\n\n\n```cpp\nappender_close();\n```\n\n#### <a name=\"STN\">STN Init</a>\n\nInitialize STN before you use it:\n\n```objc\n- (void)setCallBack {\n    mars::stn::SetCallback(mars::stn::StnCallBack::Instance());\n    mars::app::SetCallback(mars::app::AppCallBack::Instance());\n}\n\n- (void) createMars {\n    mars::baseevent::OnCreate();\n}\n\n- (void)setClientVersion:(UInt32)clientVersion {\n    mars::stn::SetClientVersion(clientVersion);\n}\n\n- (void)setShortLinkDebugIP:(NSString *)IP port:(const unsigned short)port {\n    std::string ipAddress([IP UTF8String]);\n    mars::stn::SetShortlinkSvrAddr(port, ipAddress);\n}\n\n- (void)setShortLinkPort:(const unsigned short)port {\n    mars::stn::SetShortlinkSvrAddr(port);\n}\n\n- (void)setLongLinkAddress:(NSString *)string port:(const unsigned short)port debugIP:(NSString *)IP {\n    std::string ipAddress([string UTF8String]);\n    std::string debugIP([IP UTF8String]);\n    std::vector<uint16_t> ports;\n    ports.push_back(port);\n    mars::stn::SetLonglinkSvrAddr(ipAddress,ports,debugIP);\n}\n\n- (void)setLongLinkAddress:(NSString *)string port:(const unsigned short)port {\n    std::string ipAddress([string UTF8String]);\n    std::vector<uint16_t> ports;\n    ports.push_back(port);\n    mars::stn::SetLonglinkSvrAddr(ipAddress,ports);\n}\n\n- (void)reportEvent_OnForeground:(BOOL)isForeground {\n    mars::baseevent::OnForeground(isForeground);\n}\n\n- (void)makesureLongLinkConnect {\n    mars::stn::MakesureLonglinkConnected();\n}\n```\n\nFirstly, you should call the setCallBack interface, and secondly, the Mars.init. Then, to initialize the Mars, there is to need to strictly follow the orders of the four commands. Finally, after Mars are initialized, onForeground and makesureLongLinkConnect can be called.\n\nIf you want to destroy STN or exit App:\n\n```objc\n- (void)destroyMars {\n    mars::baseevent::OnDestroy();\n}\n```\n\n#### <a name=\"even\">Event Change</a>\n\nWhen the App's state of background or foreground is changed:\n\n```objc\n- (void)reportEvent_OnForeground:(BOOL)isForeground {\n    mars::baseevent::OnForeground(isForeground);\n}\n```\n\nNetwork change:\n\n```objc\n- (void)reportEvent_OnNetworkChange {\n    mars::baseevent::OnNetworkChange();\n}\n```\n\n### <a name=\"windows\">[Windows](https://github.com/Tencent/mars/wiki/Mars-Windows-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)</a>\nInstall Visual Studio 2015.\n\nCompile\n```python\npython build_windows.py\n```\n\n1. Add mars.lib as a dependency of your project.\n2. Rename files in mars/libraries/mars_android_sdk/jni with .rewriteme extension to .cc extension.\n3. Add header files in mars/libraries/mars_android_sdk/jni and source files from step 2 into your project.\n\n#### <a name=\"Xlog\">Xlog Init</a>\n\nInitialize Xlog when your app starts. Remember to use an exclusive folder to save the log files, no other files are acceptable in the folder since they would be removed by the cleansing function in Xlog automatically.\n\n```cpp\nstd::string logPath = \"\"; //use your log path\nstd::string pubKey = \"\"; //use you pubkey for log encrypt\n\n// init xlog\n#if DEBUG\nxlogger_SetLevel(kLevelDebug);\nappender_set_console_log(true);\n#else\nxlogger_SetLevel(kLevelInfo);\nappender_set_console_log(false);\n#endif\nappender_open(kAppenderAsync, logPath.c_str(), \"Test\", 0, pubKey.c_str());\n```\n\nUninitialized xlog before your app exits\n\n\n```cpp\nappender_close();\n```\n\n#### <a name=\"STN\">STN Init</a>\n\nInitialize STN before you use it:\n\n```cpp\nvoid setShortLinkDebugIP(const std::string& _ip, unsigned short _port)\n{\n\tmars::stn::SetShortlinkSvrAddr(_port, _ip);\n}\nvoid setShortLinkPort(unsigned short _port)\n{\n\tmars::stn::SetShortlinkSvrAddr(_port, \"\");\n}\nvoid setLongLinkAddress(const std::string& _ip, unsigned short _port, const std::string& _debug_ip)\n{\n\tvector<uint16_t> ports;\n\tports.push_back(_port);\n\tmars::stn::SetLonglinkSvrAddr(_ip, ports, _debug_ip);\n}\n\nvoid Init()\n{\n\tmars::stn::SetCallback(mars::stn::StnCallBack::Instance());\n\tmars::app::SetCallback(mars::app::AppCallBack::Instance());\n\tmars::baseevent::OnCreate();\n\n\t//todo\n\t//mars::stn::SetClientVersion(version);\n\t//setShortLinkDebugIP(...)\n\t//setLongLinkAddress(...)\n\n\tmars::baseevent::OnForeground(true);\n\tmars::stn::MakesureLonglinkConnected();\n}\n```\n\nFirstly, you should call the setCalBack interface, and secondly, the Mars.init. Then, to initialize the Mars, there is to need to strictly follow the orders of the four commands. Finally, after Mars are initialized, onForeground and makesureLongLinkConnect can be called.\n\nIf you want to destroy STN or exit App:\n\n```cpp\nmars::baseevent::OnDestroy();\n```\n\n## Support\n\nAny problem?\n\n1. Learn more from [mars/sample](https://github.com/Tencent/mars/tree/master/samples).\n2. Read the [source code](https://github.com/Tencent/mars/tree/master).\n3. Read the [wiki](https://github.com/Tencent/mars/wiki) or [FAQ](https://github.com/Tencent/mars/wiki/Mars-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98) for help.\n4. Contact us for help.\n\n## Contributing\n\nFor more information about contributing issues or pull requests, see our [Mars Contributing Guide](https://github.com/Tencent/mars/blob/master/CONTRIBUTING.md).\n\n## License\n\nMars is under the MIT license. See the [LICENSE](https://github.com/Tencent/mars/blob/master/LICENSE) file for details.\n\n------------------------------\n## <a name=\"mars_cn\">Mars</a>\n\n[![license](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat)](https://github.com/Tencent/mars/blob/master/LICENSE)\n[![Release Version](https://img.shields.io/badge/release-1.2.3-red.svg)](https://github.com/Tencent/mars/releases)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Tencent/mars/pulls)\n[![WeChat Approved](https://img.shields.io/badge/Wechat_Approved-1.2.3-red.svg)](https://github.com/Tencent/mars/wiki)\n[![WeChat Approved](https://img.shields.io/badge/Platform-%20iOS%20%7C%20OS%20X%20%7C%20Android%20-brightgreen.svg)](https://github.com/Tencent/mars/wiki)\n\nMars 是微信官方的跨平台跨业务的终端基础组件。\n\n\n![mars](https://github.com/WeMobileDev/article/blob/master/assets/mars/mars.png?raw=true)\n\n* comm：可以独立使用的公共库，包括 socket、线程、消息队列、协程等；\n* xlog：高可靠性高性能的运行期日志组件；\n* SDT： 网络诊断组件；\n* STN： 信令分发网络模块，也是 Mars 最主要的部分。\n\n## Samples\n\nsample 的使用请参考[这里](https://github.com/Tencent/mars/wiki/Mars-sample-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)。\n\n## Getting started\n\npython >= 3,10\n接入 [Android](#android_cn) 或者 [iOS/OS X](#apple_cn) 或者 [Windows](#windows_cn) 。\n\n### <a name=\"android_cn\">[Android](https://github.com/Tencent/mars/wiki/Mars-Android-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)</a>\n\ngradle 接入我们提供了两种接入方式：[mars-wrapper](#wrapper) 或者 [mars-core](#core)。如果你只是想做个 sample 推荐使用 mars-wrapper，可以快速开发；但是如果你想把 mars 用到你的 app 中的话，推荐使用 mars-core，可定制性更高。\n\n#### <a name=\"wrapper\">mars-wrapper</a>\n\n在 app/build.gradle 中添加 mars-wrapper 的依赖：\n\n\n```xml\ndependencies {\n    compile 'com.tencent.mars:mars-wrapper:1.2.5'\n}\n```\n\n**或者**\n\n#### <a name=\"core\">mars-core</a>\n\n在 app/build.gradle 中添加 mars-core 的依赖：\n\n\n```xml\ndependencies {\n    compile 'com.tencent.mars:mars-core:1.2.5'\n}\n```\n**或者**\n#### <a name=\"\">mars-xlog</a>\n如果只想使用 xlog,可以只加 xlog 的依赖(mars-core,mars-wrapper 中都已经包括 xlog)：\n```xml\ndependencies {\n    compile 'com.tencent.mars:mars-xlog:1.2.5'\n}\n```\n接着往下操作之前，请先确保你已经添加了 mars-wrapper 或者 mars-core 或者 mars-xlog 的依赖\n\n#### <a name=\"Xlog\">Xlog Init</a>\n\n在程序启动加载 Xlog 后紧接着初始化 Xlog。但要注意如果你的程序使用了多进程，不要把多个进程的日志输出到同一个文件中，保证每个进程独享一个日志文件。而且保存 log 的目录请使用单独的目录，不要存放任何其他文件防止被 xlog 自动清理功能误删。\n\n\n```java\nSystem.loadLibrary(\"c++_shared\");\nSystem.loadLibrary(\"marsxlog\");\n\nfinal String SDCARD = Environment.getExternalStorageDirectory().getAbsolutePath();\nfinal String logPath = SDCARD + \"/marssample/log\";\n\n// this is necessary, or may crash for SIGBUS\nfinal String cachePath = this.getFilesDir() + \"/xlog\"\n\n//init xlog\nXlog.XLogConfig logConfig = new Xlog.XLogConfig();\nlogConfig.mode = Xlog.AppednerModeAsync;\nlogConfig.logdir = logPath;\nlogConfig.nameprefix = logFileName;\nlogConfig.pubkey = \"\";\nlogConfig.compressmode = Xlog.ZLIB_MODE;\nlogConfig.compresslevel = 0;\nlogConfig.cachedir = \"\";\nlogConfig.cachedays = 0;\nif (BuildConfig.DEBUG) {\n    logConfig.level = Xlog.LEVEL_VERBOSE;\n    Xlog.setConsoleLogOpen(true);\n} else {\n    logConfig.level = Xlog.LEVEL_INFO;\n    Xlog.setConsoleLogOpen(false);\n}\n\nLog.setLogImp(new Xlog());\n```\n\n程序退出时关闭日志：\n\n\n```java\nLog.appenderClose();\n```\n\n#### <a name=\"STN\">STN Init</a>\n\n如果你是把 mars-core 作为依赖加入到你的项目中的话，你需要显式的初始化和反初始化 STN\n\n在使用 STN 之前进行初始化\n\n```java\n// set callback\nAppLogic.setCallBack(stub);\nStnLogic.setCallBack(stub);\nSdtLogic.setCallBack(stub);\n\n// Initialize the Mars PlatformComm\nMars.init(getApplicationContext(), new Handler(Looper.getMainLooper()));\n\n// Initialize the Mars\nStnLogic.setLonglinkSvrAddr(profile.longLinkHost(), profile.longLinkPorts());\nStnLogic.setShortlinkSvrAddr(profile.shortLinkPort());\nStnLogic.setClientVersion(profile.productID());\nMars.onCreate(true);\nBaseEvent.onForeground(true);\n\nStnLogic.makesureLongLinkConnected();\n```\n\n初始化顺序不一定要严格遵守上述代码的顺序，但在初始化时首先要调用 setCallBack 接口 (callback 文件的编写可以参考 demo)，再调用 Mars.init，最后再调用 onForeground 和 makesureLongLinkConnect，中间顺序可以随意更改。**注意：STN 默认是后台，所以初始化 STN 后需要主动调用一次**```BaseEvent.onForeground(true)```\n\n需要释放 STN 或者退出程序时:\n\n```java\nMars.onDestroy();\n```\n\n#### <a name=\"even\">Event Change</a>\n\n网络切换时:\n\n```java\nBaseEvent.onNetworkChange()\n```\n**********\n如果你是把 mars-wrapper 作为依赖加入到你的项目中，你只需要显式的初始化 STN，不需要反初始化(因为 mars-wrapper 会进行反初始化)\n\n```java\nMarsServiceProxy.init(this, getMainLooper(),null);\n```\n************\n不管你是使用 mars-wrapper 还是 mars-core，你都需要特别注意以下事件：\n\n\n前后台切换:\n\n```java\nBaseEvent.onForeground(boolean);\n```\n\n应用的账号信息更改:\n\n```java\nStnLogic.reset();\n```\n\n如果你想修改 Xlog 的加密算法或者长短连的加解包部分甚至更改组件的其他部分，可以参考[这里](https://github.com/Tencent/mars/wiki/Mars-Android-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)\n\n### <a name=\"apple_cn\">[iOS/OS X](https://github.com/Tencent/mars/wiki/Mars-iOS%EF%BC%8FOS-X-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)</a>\n编译\n\n```\npython build_ios.py\n```\n\nor \n```python\npython build_osx.py\n```\n\n把 mars.framework 作为依赖加入到你的项目中，把mars/libraries/mars_android_sdk/jni 目录的后缀名为 rewriteme 的文件名删掉\".rewriteme\"和头文件一起加入到你的项目中。\n\n#### <a name=\"Xlog\">Xlog Init</a>\n\n在程序启动加载 Xlog 后紧接着初始化 Xlog。但要注意保存 log 的目录请使用单独的目录，不要存放任何其他文件防止被 xlog 自动清理功能误删。\n\n\n```cpp\nNSString* logPath = [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingString:@\"/log\"];\n\n// set do not backup for logpath\nconst char* attrName = \"com.apple.MobileBackup\";\nu_int8_t attrValue = 1;\nsetxattr([logPath UTF8String], attrName, &attrValue, sizeof(attrValue), 0, 0);\n\n// init xlogger\n#if DEBUG\nxlogger_SetLevel(kLevelDebug);\nappender_set_console_log(true);\n#else\nxlogger_SetLevel(kLevelInfo);\nappender_set_console_log(false);\n#endif\n\nXLogConfig config;\nconfig.mode_ = kAppenderAsync;\nconfig.logdir_ = [logPath UTF8String];\nconfig.nameprefix_ = \"Test\";\nconfig.pub_key_ = \"\";\nconfig.compress_mode_ = kZlib;\nconfig.compress_level_ = 0;\nconfig.cachedir_ = \"\";\nconfig.cache_days_ = 0;\nappender_open(config);\n```\n\n在函数 \"applicationWillTerminate\" 中反初始化 Xlog\n\n```cpp\nappender_close();\n```\n\n#### <a name=\"STN\">STN Init</a>\n\n在你用 STN 之前初始化：\n\n```objc\n- (void)setCallBack {\n    mars::stn::SetCallback(mars::stn::StnCallBack::Instance());\n    mars::app::SetCallback(mars::app::AppCallBack::Instance());\n}\n\n- (void) createMars {\n    mars::baseevent::OnCreate();\n}\n\n- (void)setClientVersion:(UInt32)clientVersion {\n    mars::stn::SetClientVersion(clientVersion);\n}\n\n- (void)setShortLinkDebugIP:(NSString *)IP port:(const unsigned short)port {\n    std::string ipAddress([IP UTF8String]);\n    mars::stn::SetShortlinkSvrAddr(port, ipAddress);\n}\n\n- (void)setShortLinkPort:(const unsigned short)port {\n    mars::stn::SetShortlinkSvrAddr(port);\n}\n\n- (void)setLongLinkAddress:(NSString *)string port:(const unsigned short)port debugIP:(NSString *)IP {\n    std::string ipAddress([string UTF8String]);\n    std::string debugIP([IP UTF8String]);\n    std::vector<uint16_t> ports;\n    ports.push_back(port);\n    mars::stn::SetLonglinkSvrAddr(ipAddress,ports,debugIP);\n}\n\n- (void)setLongLinkAddress:(NSString *)string port:(const unsigned short)port {\n    std::string ipAddress([string UTF8String]);\n    std::vector<uint16_t> ports;\n    ports.push_back(port);\n    mars::stn::SetLonglinkSvrAddr(ipAddress,ports);\n}\n\n- (void)reportEvent_OnForeground:(BOOL)isForeground {\n    mars::baseevent::OnForeground(isForground);\n}\n\n- (void)makesureLongLinkConnect {\n    mars::stn::MakesureLonglinkConnected();\n}\n```\n\n初始化顺序不一定要严格遵守上述代码的顺序，但在初始化时首先要调用 setCallBack 接口 (callback 文件的编写可以参考 demo)，再调用 Mars.init，最后再调用 onForeground 和 makesureLongLinkConnect，中间顺序可以随意更改。**注意：STN 默认是后台，所以初始化 STN 后需要主动调用一次**```BaseEvent.onForeground(true)```\n\n\n需要释放 STN 或者退出程序时:\n\n```objc\n- (void)destroyMars {\n    mars::baseevent::OnDestroy();\n}\n```\n\n#### <a name=\"even\">Event Change</a>\n\n前后台切换时:\n\n```objc\n- (void)reportEvent_OnForeground:(BOOL)isForeground {\n    mars::baseevent::OnForeground(isForeground);\n}\n```\n\n网络切换时：\n\n```objc\n- (void)reportEvent_OnNetworkChange {\n    mars::baseevent::OnNetworkChange();\n}\n```\n### <a name=\"windows_cn\">[Windows](https://github.com/Tencent/mars/wiki/Mars-Windows-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97)</a>\n安装Visual Studio 2015\n\n编译\n\n```python\npython build_windows.py\n```\n\n把 mars.lib作为依赖加入到你的项目中，把mars/libraries/mars_android_sdk/jni 目录的后缀名为 rewriteme 的文件名删掉\".rewriteme\"和头文件一起加入到你的项目中。\n\n#### <a name=\"Xlog\">Xlog Init</a>\n\n在程序启动加载 Xlog 后紧接着初始化 Xlog。但要注意保存 log 的目录请使用单独的目录，不要存放任何其他文件防止被 xlog 自动清理功能误删。\n\n```cpp\nstd::string logPath = \"\"; //use your log path\nstd::string pubKey = \"\"; //use you pubkey for log encrypt\n\n// init xlog\n#if DEBUG\nxlogger_SetLevel(kLevelDebug);\nappender_set_console_log(true);\n#else\nxlogger_SetLevel(kLevelInfo);\nappender_set_console_log(false);\n#endif\nappender_open(kAppenderAsync, logPath.c_str(), \"Test\", 0,  pubKey.c_str());\n```\n\n在程序退出前反初始化 Xlog\n\n```cpp\nappender_close();\n```\n\n#### <a name=\"STN\">STN Init</a>\n\n在你用 STN 之前初始化：\n\n```cpp\nvoid setShortLinkDebugIP(const std::string& _ip, unsigned short _port)\n{\n\tmars::stn::SetShortlinkSvrAddr(_port, _ip);\n}\nvoid setShortLinkPort(unsigned short _port)\n{\n\tmars::stn::SetShortlinkSvrAddr(_port, \"\");\n}\nvoid setLongLinkAddress(const std::string& _ip, unsigned short _port, const std::string& _debug_ip)\n{\n\tvector<uint16_t> ports;\n\tports.push_back(_port);\n\tmars::stn::SetLonglinkSvrAddr(_ip, ports, _debug_ip);\n}\n\nvoid Init()\n{\n\tmars::stn::SetCallback(mars::stn::StnCallBack::Instance());\n\tmars::app::SetCallback(mars::app::AppCallBack::Instance());\n\tmars::baseevent::OnCreate();\n\n\t//todo\n\t//mars::stn::SetClientVersion(version);\n\t//setShortLinkDebugIP(...)\n\t//setLongLinkAddress(...)\n\n\tmars::baseevent::OnForeground(true);\n\tmars::stn::MakesureLonglinkConnected();\n}\n```\n\n初始化顺序不一定要严格遵守上述代码的顺序，但在初始化时首先要调用 setCallBack 接口 (callback 文件的编写可以参考 demo)，再调用 Mars.init，最后再调用 onForeground 和 makesureLongLinkConnect，中间顺序可以随意更改。**注意：STN 默认是后台，所以初始化 STN 后需要主动调用一次**```BaseEvent.onForeground(true)```\n\n\n需要释放 STN 或者退出程序时:\n\n```cpp\nmars::baseevent::OnDestroy();\n```\n\n## Support\n\n还有其他问题？\n\n1. 参看 [mars/sample](https://github.com/Tencent/mars/tree/master/samples)；\n2. 阅读 [源码](https://github.com/Tencent/mars/tree/master)；\n3. 阅读 [wiki](https://github.com/Tencent/mars/wiki) 或者 [FAQ](https://github.com/Tencent/mars/wiki/Mars-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98)；\n4. 联系我们。\n\n## Contributing\n关于 Mars 分支管理、issue 以及 pr 规范，请阅读 [Mars Contributing Guide](https://github.com/Tencent/mars/blob/master/CONTRIBUTING.md)。\n\n## License\nMars 使用的 MIT 协议，详细请参考 [LICENSE](https://github.com/Tencent/mars/blob/master/LICENSE)。\n\n## 信息公示\n* SDK名称：Mars\n* 版本号：0.2.0\n* 开发者：深圳市腾讯计算机系统有限公司\n* 主要功能：Mars 是微信官方的跨平台跨业务的终端基础组件。支持iOS、macOS 和Android。Mars 针对移动网络的特点进行了优化，最终提供了高性能的网络功能。\n* [Mars 使用说明](https://github.com/Tencent/mars)\n* [Mars 个人信息保护规则](https://support.weixin.qq.com/cgi-bin/mmsupportacctnodeweb-bin/pages/L60iIjTc9G2A383f)"
        },
        {
          "name": "clang_format_ignore.txt",
          "type": "blob",
          "size": 0.8515625,
          "content": "mars/mars/boost\nmars/mars/googletest\nmars/mars/googlemock\nmars/mars/rapidjson\nmars/mars/log/crypt/micro-ecc-master\nmars/mars/comm/UWP/zlib\nmars/mars/openssl\nmars/mars/zstd/tests\nmars/samples\n\nmars-private/mars/mmjpeg\nmars-private/mars/protobuf\nmars-private/mars/cdn/src/proto\nmars-private/mars/cdn/src/protocol\nmars-private/mars/openssl\nmars-private/mars/vfs\nmars-private/mars/smc/src/protobuf\n\nmars-private/mars/andromeda/andromeda.h\nmars-private/mars/andromeda/cronet_android_jni_callback.h\nmars-private/mars/andromeda/cronet_file_task_runer_wrapper.h\nmars-private/mars/andromeda/http_cronet_context_builder.h\nmars-private/mars/andromeda/http_network_estimate_callback.h\nmars-private/mars/andromeda/http_result_callback.h\nmars-private/mars/andromeda/http_with_cronet.h\n\nmars-wechat/mars/webp\nmars-wechat/mars/accessory\n\nbuild\ncmake_build\ntools\nmmnet\nopenssl-build-tools\n"
        },
        {
          "name": "codecc.sh",
          "type": "blob",
          "size": 0.197265625,
          "content": "#!/bin/sh\n\n# build libraries for android\nexport ANDROID_NDK_HOME=/usr/local/android-ndks/android-ndk-r16b\nexport NDK_ROOT=/usr/local/android-ndks/android-ndk-r16b\npython mars/build_android.py 1 armeabi\n"
        },
        {
          "name": "mars",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}