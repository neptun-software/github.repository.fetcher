{
  "metadata": {
    "timestamp": 1736711318518,
    "page": 4,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjU=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "laradock/laradock",
      "stars": 12482,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1513671875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\n[*]\ncharset = utf-8\n\n[{Dockerfile,docker-compose.yml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 34.51171875,
          "content": "###########################################################\n###################### General Setup ######################\n###########################################################\n\n### Paths #################################################\n\n# Point to the path of your applications code on your host\nAPP_CODE_PATH_HOST=../\n\n# Point to where the `APP_CODE_PATH_HOST` should be in the container\nAPP_CODE_PATH_CONTAINER=/var/www\n\n# You may add flags to the path `:cached`, `:delegated`. When using Docker Sync add `:nocopy`\nAPP_CODE_CONTAINER_FLAG=:cached\n\n# Choose storage path on your machine. For all storage systems\nDATA_PATH_HOST=~/.laradock/data\n\n### Drivers ################################################\n\n# All volumes driver\nVOLUMES_DRIVER=local\n\n# All Networks driver\nNETWORKS_DRIVER=bridge\n\n### Docker compose files ##################################\n\n# Select which docker-compose files to include. If using docker-sync append `:docker-compose.sync.yml` at the end\nCOMPOSE_FILE=docker-compose.yml\n\n# Change the separator from : to ; on Windows\nCOMPOSE_PATH_SEPARATOR=:\n\n# Define the prefix of container names. This is useful if you have multiple projects that use laradock to have separate containers per project.\nCOMPOSE_PROJECT_NAME=laradock\n\n### PHP Version ###########################################\n\n# Select a PHP version of the Workspace and PHP-FPM containers (Does not apply to HHVM).\n# Accepted values: 8.3 - 8.2 - 8.1 - 8.0 - 7.4 - 7.3 - 7.2 - 7.1 - 7.0 - 5.6\nPHP_VERSION=8.3\n\n### Phalcon Version ###########################################\n\n# Select a Phalcon version of the Workspace and PHP-FPM containers (Does not apply to HHVM). Accepted values: 5.0.0+\nPHALCON_VERSION=5.0.0\n\n### PHP Interpreter #######################################\n\n# Select the PHP Interpreter. Accepted values: hhvm - php-fpm\nPHP_INTERPRETER=php-fpm\n\n### Docker Host IP ########################################\n\n# Enter your Docker Host IP (will be appended to /etc/hosts). Default is `10.0.75.1`\nDOCKER_HOST_IP=10.0.75.1\n\n### Remote Interpreter ####################################\n\n# Choose a Remote Interpreter entry matching name. Default is `laradock`\nPHP_IDE_CONFIG=serverName=laradock\n\n### PHP USE LEGACY OPENSSL ################################\n\n# Since OpenSSL 3 some ciphers are not available\nPHP_LEGACY_OPENSSL=false\n\n### PHP DOWNGRADEOPENSSL TLS AND SECLEVEL #################\n\nPHP_DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=false\n\n# Accepted values: 1.2 - 1.1 - 1.0\nPHP_DOWNGRADE_OPENSSL_TLS_VERSION=1.2\n\n### Windows Path ##########################################\n\n# A fix for Windows users, to ensure the application path works\nCOMPOSE_CONVERT_WINDOWS_PATHS=1\n\n### Environment ###########################################\n\n# If you need to change the sources (i.e. to China), set CHANGE_SOURCE to true\nCHANGE_SOURCE=false\n# Set ORACLE INSTANT_CLIENT_MIRROR option if you want to use Intranet improve download, you can download files first\nORACLE_INSTANT_CLIENT_MIRROR=https://github.com/the-paulus/oracle-instantclient/raw/master/\nORACLE_INSTANT_CLIENT_ARCH=x86_64\nORACLE_INSTANT_CLIENT_MAJOR=18\nORACLE_INSTANT_CLIENT_MINOR=3\n\n### Docker Sync ###########################################\n\n# If you are using Docker Sync. For `osx` use 'native_osx', for `windows` use 'unison', for `linux` docker-sync is not required\nDOCKER_SYNC_STRATEGY=native_osx\n\n### Install Oh My ZSH! ####################################\n\n# If you want to use \"Oh My ZSH!\" with Laravel autocomplete plugin, set SHELL_OH_MY_ZSH to true.\n\nSHELL_OH_MY_ZSH=false\nSHELL_OH_MY_ZSH_AUTOSUGESTIONS=false\nSHELL_OH_MY_ZSH_ALIASES=false\n\n###########################################################\n################ Containers Customization #################\n###########################################################\n\n### WORKSPACE #############################################\n\nWORKSPACE_BASE_IMAGE_TAG_PREFIX=latest\nWORKSPACE_COMPOSER_GLOBAL_INSTALL=true\nWORKSPACE_COMPOSER_VERSION=2\nWORKSPACE_COMPOSER_AUTH_JSON=false\nWORKSPACE_COMPOSER_REPO_PACKAGIST=\nWORKSPACE_NVM_NODEJS_ORG_MIRROR=\nWORKSPACE_INSTALL_NODE=true\nWORKSPACE_NODE_VERSION=node\nWORKSPACE_NPM_REGISTRY=\nWORKSPACE_NPM_FETCH_RETRIES=2\nWORKSPACE_NPM_FETCH_RETRY_FACTOR=10\nWORKSPACE_NPM_FETCH_RETRY_MINTIMEOUT=10000\nWORKSPACE_NPM_FETCH_RETRY_MAXTIMEOUT=60000\nWORKSPACE_INSTALL_PNPM=false\nWORKSPACE_INSTALL_YARN=true\nWORKSPACE_YARN_VERSION=latest\nWORKSPACE_INSTALL_NPM_GULP=true\nWORKSPACE_INSTALL_NPM_BOWER=false\nWORKSPACE_INSTALL_NPM_VUE_CLI=true\nWORKSPACE_INSTALL_NPM_ANGULAR_CLI=false\nWORKSPACE_INSTALL_NPM_CHECK_UPDATES_CLI=false\nWORKSPACE_INSTALL_POPPLER_UTILS=false\nWORKSPACE_INSTALL_PHPREDIS=true\nWORKSPACE_INSTALL_WORKSPACE_SSH=false\nWORKSPACE_INSTALL_SUBVERSION=false\nWORKSPACE_INSTALL_BZ2=false\nWORKSPACE_INSTALL_GMP=false\nWORKSPACE_INSTALL_GNUPG=false\nWORKSPACE_INSTALL_XDEBUG=false\nWORKSPACE_INSTALL_PCOV=false\nWORKSPACE_INSTALL_PHPDBG=false\nWORKSPACE_INSTALL_SSH2=false\nWORKSPACE_INSTALL_LDAP=false\nWORKSPACE_INSTALL_SOAP=false\nWORKSPACE_INSTALL_XSL=false\nWORKSPACE_INSTALL_SMB=false\nWORKSPACE_INSTALL_IMAP=false\nWORKSPACE_INSTALL_MONGO=false\nWORKSPACE_INSTALL_AMQP=false\nWORKSPACE_INSTALL_CASSANDRA=false\nWORKSPACE_INSTALL_ZMQ=false\nWORKSPACE_INSTALL_GEARMAN=false\nWORKSPACE_INSTALL_MSSQL=false\nWORKSPACE_INSTALL_DRUSH=false\nWORKSPACE_DRUSH_VERSION=8.4.6\nWORKSPACE_INSTALL_DRUPAL_CONSOLE=false\nWORKSPACE_INSTALL_WP_CLI=false\nWORKSPACE_INSTALL_AEROSPIKE=false\nWORKSPACE_INSTALL_OCI8=false\nWORKSPACE_INSTALL_V8JS=false\nWORKSPACE_INSTALL_LARAVEL_ENVOY=false\nWORKSPACE_INSTALL_LARAVEL_INSTALLER=false\nWORKSPACE_INSTALL_XLSWRITER=false\nWORKSPACE_INSTALL_DEPLOYER=false\nWORKSPACE_INSTALL_PRESTISSIMO=false\nWORKSPACE_INSTALL_LINUXBREW=false\nWORKSPACE_INSTALL_MC=false\nWORKSPACE_INSTALL_SYMFONY=false\nWORKSPACE_INSTALL_PYTHON=false\nWORKSPACE_INSTALL_PYTHON3=false\nWORKSPACE_INSTALL_POWERLINE=false\nWORKSPACE_INSTALL_SUPERVISOR=false\nWORKSPACE_INSTALL_IMAGE_OPTIMIZERS=false\nWORKSPACE_INSTALL_IMAGEMAGICK=false\nWORKSPACE_IMAGEMAGICK_VERSION=latest\nWORKSPACE_INSTALL_TERRAFORM=false\nWORKSPACE_INSTALL_DUSK_DEPS=false\nWORKSPACE_INSTALL_PG_CLIENT=false\nWORKSPACE_INSTALL_PHALCON=false\nWORKSPACE_INSTALL_SWOOLE=false\nWORKSPACE_INSTALL_TAINT=false\nWORKSPACE_INSTALL_LIBPNG=false\nWORKSPACE_INSTALL_GRAPHVIZ=false\nWORKSPACE_INSTALL_IONCUBE=false # PHP 8.2 is not supported yet.\nWORKSPACE_INSTALL_MYSQL_CLIENT=false\nWORKSPACE_INSTALL_PING=false\nWORKSPACE_INSTALL_SSHPASS=false\nWORKSPACE_INSTALL_INOTIFY=false\nWORKSPACE_INSTALL_FSWATCH=false\nWORKSPACE_INSTALL_YAML=false\nWORKSPACE_INSTALL_RDKAFKA=false\nWORKSPACE_INSTALL_MAILPARSE=false\nWORKSPACE_INSTALL_XMLRPC=false\nWORKSPACE_INSTALL_APCU=false\nWORKSPACE_PUID=1000\nWORKSPACE_PGID=1000\nWORKSPACE_CHROME_DRIVER_VERSION=2.42\nWORKSPACE_TIMEZONE=UTC\nWORKSPACE_SSH_PORT=2222\nWORKSPACE_INSTALL_FFMPEG=false\nWORKSPACE_INSTALL_AUDIOWAVEFORM=false\nWORKSPACE_INSTALL_WKHTMLTOPDF=false\nWORKSPACE_WKHTMLTOPDF_VERSION=0.12.6-1\nWORKSPACE_INSTALL_GNU_PARALLEL=false\nWORKSPACE_INSTALL_AST=true\nWORKSPACE_AST_VERSION=1.0.10\nWORKSPACE_BROWSERSYNC_HOST_PORT=3000\nWORKSPACE_BROWSERSYNC_UI_HOST_PORT=3001\nWORKSPACE_VUE_CLI_SERVE_HOST_PORT=8080\nWORKSPACE_VUE_CLI_UI_HOST_PORT=8001\nWORKSPACE_ANGULAR_CLI_SERVE_HOST_PORT=4200\nWORKSPACE_INSTALL_GIT_PROMPT=false\nWORKSPACE_INSTALL_DOCKER_CLIENT=false\nWORKSPACE_INSTALL_LNAV=false\nWORKSPACE_INSTALL_PROTOC=false\nWORKSPACE_INSTALL_PHPDECIMAL=false\nWORKSPACE_INSTALL_ZOOKEEPER=false\nWORKSPACE_INSTALL_SSDB=false\nWORKSPACE_INSTALL_TRADER=false\nWORKSPACE_PROTOC_VERSION=latest\nWORKSPACE_INSTALL_MEMCACHED=true\nWORKSPACE_INSTALL_EVENT=false\nWORKSPACE_INSTALL_DNSUTILS=true\nWORKSPACE_XDEBUG_PORT=9000\nWORKSPACE_VITE_PORT=5173\nWORKSPACE_INSTALL_JDK=true\nWORKSPACE_INSTALL_GITHUB_CLI=false\n\n### PHP_FPM ###############################################\n\nPHP_FPM_BASE_IMAGE_TAG_PREFIX=latest\nPHP_FPM_INSTALL_BCMATH=true\nPHP_FPM_INSTALL_MYSQLI=true\nPHP_FPM_INSTALL_INTL=true\nPHP_FPM_INSTALL_IMAGEMAGICK=true\nPHP_FPM_IMAGEMAGICK_VERSION=latest\nPHP_FPM_INSTALL_OPCACHE=true\nPHP_FPM_INSTALL_IMAGE_OPTIMIZERS=true\nPHP_FPM_INSTALL_PHPREDIS=true\nPHP_FPM_INSTALL_MEMCACHED=false\nPHP_FPM_INSTALL_BZ2=false\nPHP_FPM_INSTALL_ENCHANT=false\nPHP_FPM_INSTALL_GMP=false\nPHP_FPM_INSTALL_GNUPG=false\nPHP_FPM_INSTALL_XDEBUG=false\nPHP_FPM_INSTALL_PCOV=false\nPHP_FPM_INSTALL_XHPROF=false\nPHP_FPM_INSTALL_PHPDBG=false\nPHP_FPM_INSTALL_SMB=false\nPHP_FPM_INSTALL_IMAP=false\nPHP_FPM_INSTALL_MONGO=false\nPHP_FPM_INSTALL_AMQP=false\nPHP_FPM_INSTALL_CASSANDRA=false\nPHP_FPM_INSTALL_ZMQ=false\nPHP_FPM_INSTALL_GEARMAN=false\nPHP_FPM_INSTALL_MSSQL=false\nPHP_FPM_INSTALL_SSH2=false\nPHP_FPM_INSTALL_SOAP=false\nPHP_FPM_INSTALL_XSL=false\nPHP_FPM_INSTALL_EXIF=false\nPHP_FPM_INSTALL_AEROSPIKE=false\nPHP_FPM_INSTALL_OCI8=false\nPHP_FPM_INSTALL_PGSQL=false\nPHP_FPM_INSTALL_GHOSTSCRIPT=false\nPHP_FPM_INSTALL_LDAP=false\nPHP_FPM_INSTALL_PHALCON=false\nPHP_FPM_INSTALL_SWOOLE=false\nPHP_FPM_INSTALL_TAINT=false\nPHP_FPM_INSTALL_PG_CLIENT=false\nPHP_FPM_INSTALL_POSTGIS=false\nPHP_FPM_INSTALL_PCNTL=false\nPHP_FPM_INSTALL_CALENDAR=false\nPHP_FPM_INSTALL_FAKETIME=false\nPHP_FPM_INSTALL_IONCUBE=false # PHP 8.2 is not supported yet.\nPHP_FPM_INSTALL_RDKAFKA=false\nPHP_FPM_INSTALL_GETTEXT=false\nPHP_FPM_INSTALL_XMLRPC=false\nPHP_FPM_FAKETIME=-0\nPHP_FPM_INSTALL_APCU=false\nPHP_FPM_INSTALL_CACHETOOL=false\nPHP_FPM_INSTALL_YAML=false\nPHP_FPM_INSTALL_ADDITIONAL_LOCALES=false\nPHP_FPM_INSTALL_MYSQL_CLIENT=false\nPHP_FPM_INSTALL_PING=false\nPHP_FPM_INSTALL_SSHPASS=false\nPHP_FPM_INSTALL_MAILPARSE=false\nPHP_FPM_INSTALL_WKHTMLTOPDF=false\nPHP_FPM_WKHTMLTOPDF_VERSION=0.12.6.1-3\nPHP_FPM_INSTALL_XLSWRITER=false\nPHP_FPM_INSTALL_PHPDECIMAL=false\nPHP_FPM_INSTALL_ZOOKEEPER=false\nPHP_FPM_INSTALL_SSDB=false\nPHP_FPM_INSTALL_TRADER=false\nPHP_FPM_FFMPEG=false\nPHP_FPM_AUDIOWAVEFORM=false\nPHP_FPM_ADDITIONAL_LOCALES=\"en_US.UTF-8 es_ES.UTF-8 fr_FR.UTF-8\"\nPHP_FPM_INSTALL_DOCKER_CLIENT=false\nPHP_FPM_DEFAULT_LOCALE=POSIX\nPHP_FPM_XDEBUG_PORT=9000\nPHP_FPM_INSTALL_EVENT=false\nPHP_FPM_INSTALL_DNSUTILS=true\nPHP_FPM_INSTALL_POPPLER_UTILS=false\n\nPHP_FPM_PUID=1000\nPHP_FPM_PGID=1000\n\n### PHP_FPM_NEW_RELIC #####################################\n\nPHP_FPM_NEW_RELIC=false\nPHP_FPM_NEW_RELIC_KEY=0000\nPHP_FPM_NEW_RELIC_APP_NAME=app_name\n\n### PHP_WORKER ############################################\n\nPHP_WORKER_INSTALL_BZ2=false\nPHP_WORKER_INSTALL_GD=false\nPHP_WORKER_INSTALL_XLSWRITER=false\nPHP_WORKER_INSTALL_IMAGEMAGICK=false\nPHP_WORKER_IMAGEMAGICK_VERSION=latest\nPHP_WORKER_INSTALL_GMP=false\nPHP_WORKER_INSTALL_GNUPG=false\nPHP_WORKER_INSTALL_LDAP=false\nPHP_WORKER_INSTALL_PGSQL=false\nPHP_WORKER_INSTALL_MONGO=false\nPHP_WORKER_INSTALL_BCMATH=false\nPHP_WORKER_INSTALL_MEMCACHED=false\n# PHP_WORKER_INSTALL_OCI8 Does not work in php5.6 version\nPHP_WORKER_INSTALL_OCI8=false\nPHP_WORKER_INSTALL_MSSQL=false\nPHP_WORKER_INSTALL_PHALCON=false\nPHP_WORKER_INSTALL_APCU=false\nPHP_WORKER_INSTALL_SOAP=false\nPHP_WORKER_INSTALL_ZIP_ARCHIVE=false\nPHP_WORKER_INSTALL_MYSQL_CLIENT=false\nPHP_WORKER_INSTALL_AMQP=false\nPHP_WORKER_INSTALL_GHOSTSCRIPT=false\nPHP_WORKER_INSTALL_SWOOLE=false\nPHP_WORKER_INSTALL_TAINT=false\nPHP_WORKER_INSTALL_FFMPEG=false\nPHP_WORKER_INSTALL_AUDIOWAVEFORM=false\nPHP_WORKER_INSTALL_CASSANDRA=false\nPHP_WORKER_INSTALL_GEARMAN=false\nPHP_WORKER_INSTALL_REDIS=false\nPHP_WORKER_INSTALL_IMAP=false\nPHP_WORKER_INSTALL_XMLRPC=false\nPHP_WORKER_INSTALL_SSDB=false\nPHP_WORKER_INSTALL_EVENT=false\nPHP_WORKER_INSTALL_INTL=true\nPHP_WORKER_INSTALL_POPPLER_UTILS=false\n\nPHP_WORKER_PUID=1000\nPHP_WORKER_PGID=1000\n\n### NGINX #################################################\n\nNGINX_HOST_HTTP_PORT=80\nNGINX_HOST_HTTPS_PORT=443\nNGINX_HOST_LOG_PATH=./logs/nginx/\nNGINX_SITES_PATH=./nginx/sites/\nNGINX_PHP_UPSTREAM_CONTAINER=php-fpm\nNGINX_PHP_UPSTREAM_PORT=9000\nNGINX_SSL_PATH=./nginx/ssl/\n\n### OpenResty #################################################\n\nOPENRESTY_HOST_HTTP_PORT=80\nOPENRESTY_HOST_HTTPS_PORT=443\nOPENRESTY_HOST_LOG_PATH=./logs/openresty/\nOPENRESTY_SITES_PATH=./openresty/sites/\nOPENRESTY_PHP_UPSTREAM_CONTAINER=php-fpm\nOPENRESTY_PHP_UPSTREAM_PORT=9000\nOPENRESTY_SSL_PATH=./openresty/ssl/\n\n### LARAVEL_HORIZON ################################################\n\nLARAVEL_HORIZON_INSTALL_BZ2=false\nLARAVEL_HORIZON_INSTALL_GD=false\nLARAVEL_HORIZON_INSTALL_GMP=false\nLARAVEL_HORIZON_INSTALL_GNUPG=false\nLARAVEL_HORIZON_INSTALL_LDAP=false\nLARAVEL_HORIZON_INSTALL_IMAGEMAGICK=false\nLARAVEL_HORIZON_IMAGEMAGICK_VERSION=latest\nLARAVEL_HORIZON_INSTALL_SOCKETS=false\nLARAVEL_HORIZON_INSTALL_YAML=false\nLARAVEL_HORIZON_INSTALL_ZIP_ARCHIVE=false\nLARAVEL_HORIZON_INSTALL_PHPREDIS=false\nLARAVEL_HORIZON_INSTALL_MONGO=false\nLARAVEL_HORIZON_INSTALL_CASSANDRA=false\nLARAVEL_HORIZON_INSTALL_FFMPEG=false\nLARAVEL_HORIZON_INSTALL_AUDIOWAVEFORM=false\nLARAVEL_HORIZON_INSTALL_POPPLER_UTILS=false\nLARAVEL_HORIZON_PGID=1000\nLARAVEL_HORIZON_PUID=1000\n\n### APACHE ################################################\n\nAPACHE_HOST_HTTP_PORT=80\nAPACHE_HOST_HTTPS_PORT=443\nAPACHE_HOST_LOG_PATH=./logs/apache2\nAPACHE_SITES_PATH=./apache2/sites\nAPACHE_PHP_UPSTREAM_CONTAINER=php-fpm\nAPACHE_PHP_UPSTREAM_PORT=9000\nAPACHE_PHP_UPSTREAM_TIMEOUT=60\nAPACHE_DOCUMENT_ROOT=/var/www/\nAPACHE_SSL_PATH=./apache2/ssl/\nAPACHE_INSTALL_HTTP2=false\nAPACHE_FOR_MAC_M1=false\n\n### MYSQL #################################################\n\n# 5.7, 8.0, 8.4, 9.0\nMYSQL_VERSION=8.4\nMYSQL_DATABASE=default\nMYSQL_USER=default\nMYSQL_PASSWORD=secret\nMYSQL_PORT=3306\nMYSQL_ROOT_PASSWORD=root\nMYSQL_ENTRYPOINT_INITDB=./mysql/docker-entrypoint-initdb.d\n\n### CLICKHOUSE #################################################\n\nCLICKHOUSE_VERSION=22.2.2.1\nCLICKHOUSE_GOSU_VERSION=1.14\nCLICKHOUSE_CUSTOM_CONFIG=./clickhouse/config.xml\nCLICKHOUSE_USERS_CUSTOM_CONFIG=./clickhouse/users.xml\nCLICKHOUSE_USER=default\nCLICKHOUSE_PASSWORD=HAHA\nCLICKHOUSE_HTTP_PORT=8123\nCLICKHOUSE_CLIENT_PORT=9000\nCLICKHOUSE_NATIVE_PORT=9009\nCLICKHOUSE_ENTRYPOINT_INITDB=./clickhouse/docker-entrypoint-initdb.d\nCLICKHOUSE_HOST_LOG_PATH=./logs/clickhouse\n\n### REDIS #################################################\n\nREDIS_PORT=6379\nREDIS_PASSWORD=secret_redis\n\n### REDIS CLUSTER #########################################\n\nREDIS_CLUSTER_PORT_RANGE=7000-7005\n\n### SSDB #################################################\n\nSSDB_PORT=16801\n\n### ZooKeeper #############################################\n\nZOOKEEPER_PORT=2181\n\n### Percona ###############################################\n\nPERCONA_DATABASE=homestead\nPERCONA_USER=homestead\nPERCONA_PASSWORD=secret\nPERCONA_PORT=3306\nPERCONA_ROOT_PASSWORD=root\nPERCONA_ENTRYPOINT_INITDB=./percona/docker-entrypoint-initdb.d\n\n### MSSQL #################################################\n\nMSSQL_DATABASE=master\nMSSQL_PASSWORD=\"yourStrong(!)Password\"\nMSSQL_PORT=1433\n\n### MARIADB ###############################################\n\nMARIADB_VERSION=latest\nMARIADB_DATABASE=default\nMARIADB_USER=default\nMARIADB_PASSWORD=secret\nMARIADB_PORT=3306\nMARIADB_ROOT_PASSWORD=root\nMARIADB_ENTRYPOINT_INITDB=./mariadb/docker-entrypoint-initdb.d\n\n### POSTGRES ##############################################\n\nPOSTGRES_VERSION=alpine\nPOSTGRES_CLIENT_VERSION=15\nPOSTGRES_DB=default\nPOSTGRES_USER=default\nPOSTGRES_PASSWORD=secret\nPOSTGRES_PORT=5432\nPOSTGRES_ENTRYPOINT_INITDB=./postgres/docker-entrypoint-initdb.d\n\n### POSTGRES-POSTGIS ##############################################\n\nPOSTGIS_VERSION=latest\nPOSTGIS_INSTALL_PGSQL_HTTP_FOR_POSTGIS13=false\n\n### SQS ##############################################\n\nSQS_NODE_HOST_PORT=9324\nSQS_MANAGEMENT_HTTP_HOST_PORT=9325\n\n### RABBITMQ ##############################################\n\nRABBITMQ_NODE_HOST_PORT=5672\nRABBITMQ_MANAGEMENT_HTTP_HOST_PORT=15672\nRABBITMQ_MANAGEMENT_HTTPS_HOST_PORT=15671\nRABBITMQ_WEB_STOMP_HOST_PORT=15674\n\n### MERCURE ##############################################\n\nMERCURE_NODE_HOST_HTTP_PORT=1337\nMERCURE_NODE_HOST_HTTPS_PORT=1338\nMERCURE_PUBLISHER_JWT_KEY=secret\nMERCURE_SUBSCRIBER_JWT_KEY=another_secret\nMERCURE_DEBUG=debug\nMERCURE_SERVER_NAME=:80\n\n### MEILISEARCH ###########################################\n\nMEILISEARCH_HOST_PORT=7700\nMEILISEARCH_KEY=masterkey\n\n### ELASTICSEARCH #########################################\n\nELASTICSEARCH_HOST_HTTP_PORT=9200\nELASTICSEARCH_HOST_TRANSPORT_PORT=9300\n\n### KIBANA ################################################\n\nKIBANA_HTTP_PORT=5601\n\n### DEJAVU ################################################\n\nDEJAVU_HTTP_PORT=1358\n\n### MEMCACHED #############################################\n\nMEMCACHED_HOST_PORT=11211\n\n### BEANSTALKD CONSOLE ####################################\n\nBEANSTALKD_CONSOLE_BUILD_PATH=./beanstalkd-console\nBEANSTALKD_CONSOLE_CONTAINER_NAME=beanstalkd-console\nBEANSTALKD_CONSOLE_HOST_PORT=2080\n\n### BEANSTALKD ############################################\n\nBEANSTALKD_HOST_PORT=11300\n\n### SELENIUM ##############################################\n\nSELENIUM_PORT=4444\n\n### MINIO #################################################\n\nMINIO_PORT=9000\nMINIO_CONSOLE_PORT=9001\nMINIO_ROOT_USER=laradock\nMINIO_ROOT_PASSWORD=laradock\n\n### ADMINER ###############################################\n\nADM_PORT=8081\nADM_INSTALL_MSSQL=false\nADM_PLUGINS=\nADM_DESIGN=pepa-linha\nADM_DEFAULT_SERVER=mysql\n\n### PHP MY ADMIN ##########################################\n\n# Accepted values: mariadb - mysql\n\nPMA_DB_ENGINE=mysql\n\n# Credentials/Port:\n\nPMA_USER=default\nPMA_PASSWORD=secret\nPMA_ROOT_PASSWORD=secret\nPMA_PORT=8081\nPMA_MAX_EXECUTION_TIME=600\nPMA_MEMORY_LIMIT=256M\nPMA_UPLOAD_LIMIT=2G\n\n### MAILDEV ###############################################\n\nMAILDEV_HTTP_PORT=1080\nMAILDEV_SMTP_PORT=25\n\n### VARNISH ###############################################\n\nVARNISH_CONFIG=/etc/varnish/default.vcl\nVARNISH_PORT=6081\nVARNISH_BACKEND_PORT=81\nVARNISHD_PARAMS=\"-p default_ttl=3600 -p default_grace=3600\"\n\n### Varnish ###############################################\n\n# Proxy 1\nVARNISH_PROXY1_CACHE_SIZE=128m\nVARNISH_PROXY1_BACKEND_HOST=workspace\nVARNISH_PROXY1_SERVER=SERVER1\n\n# Proxy 2\nVARNISH_PROXY2_CACHE_SIZE=128m\nVARNISH_PROXY2_BACKEND_HOST=workspace\nVARNISH_PROXY2_SERVER=SERVER2\n\n### HAPROXY ###############################################\n\nHAPROXY_HOST_HTTP_PORT=8085\n\n### JENKINS ###############################################\n\nJENKINS_HOST_HTTP_PORT=8090\nJENKINS_HOST_SLAVE_AGENT_PORT=50000\nJENKINS_HOME=./jenkins/jenkins_home\n\n### CONFLUENCE ###############################################\nCONFLUENCE_POSTGRES_INIT=true\nCONFLUENCE_VERSION=6.13-ubuntu-18.04-adoptopenjdk8\nCONFLUENCE_POSTGRES_DB=laradock_confluence\nCONFLUENCE_POSTGRES_USER=laradock_confluence\nCONFLUENCE_POSTGRES_PASSWORD=laradock_confluence\nCONFLUENCE_HOST_HTTP_PORT=8090\n\n### GRAFANA ###############################################\n\nGRAFANA_PORT=3000\n\n### GRAYLOG ###############################################\n\n# password must be 16 characters long\nGRAYLOG_PASSWORD=somesupersecretpassword\n# sha256 representation of the password\nGRAYLOG_SHA256_PASSWORD=b1cb6e31e172577918c9e7806c572b5ed8477d3f57aa737bee4b5b1db3696f09\nGRAYLOG_PORT=9000\nGRAYLOG_SYSLOG_TCP_PORT=514\nGRAYLOG_SYSLOG_UDP_PORT=514\nGRAYLOG_GELF_TCP_PORT=12201\nGRAYLOG_GELF_UDP_PORT=12201\n\n### BLACKFIRE #############################################\n\n# Create an account on blackfire.io. Don't enable blackfire and xDebug at the same time. # visit https://blackfire.io/docs/24-days/06-installation#install-probe-debian for more info.\nINSTALL_BLACKFIRE=false\nBLACKFIRE_CLIENT_ID=\"<client_id>\"\nBLACKFIRE_CLIENT_TOKEN=\"<client_token>\"\nBLACKFIRE_SERVER_ID=\"<server_id>\"\nBLACKFIRE_SERVER_TOKEN=\"<server_token>\"\n\n### AEROSPIKE #############################################\n\nAEROSPIKE_SERVICE_PORT=3000\nAEROSPIKE_FABRIC_PORT=3001\nAEROSPIKE_HEARTBEAT_PORT=3002\nAEROSPIKE_INFO_PORT=3003\nAEROSPIKE_STORAGE_GB=1\nAEROSPIKE_MEM_GB=1\nAEROSPIKE_NAMESPACE=test\n\n### RETHINKDB #############################################\n\nRETHINKDB_PORT=8090\n\n### MONGODB ###############################################\n\nMONGODB_PORT=27017\nMONGO_USERNAME=root\nMONGO_PASSWORD=example\n\n### CADDY #################################################\n\nCADDY_HOST_HTTP_PORT=80\nCADDY_HOST_HTTPS_PORT=443\nCADDY_HOST_LOG_PATH=./logs/caddy\nCADDY_CONFIG_PATH=./caddy/caddy\n\n### LARAVEL ECHO SERVER ###################################\n\nLARAVEL_ECHO_SERVER_PORT=6001\n\n### THUMBOR ############################################################################################################\n\nTHUMBOR_PORT=8000\nTHUMBOR_LOG_FORMAT=\"%(asctime)s %(name)s:%(levelname)s %(message)s\"\nTHUMBOR_LOG_DATE_FORMAT=\"%Y-%m-%d %H:%M:%S\"\nMAX_WIDTH=0\nMAX_HEIGHT=0\nMIN_WIDTH=1\nMIN_HEIGHT=1\nALLOWED_SOURCES=[]\nQUALITY=80\nWEBP_QUALITY=None\nPNG_COMPRESSION_LEVEL=6\nAUTO_WEBP=False\nMAX_AGE=86400\nMAX_AGE_TEMP_IMAGE=0\nRESPECT_ORIENTATION=False\nIGNORE_SMART_ERRORS=False\nPRESERVE_EXIF_INFO=False\nALLOW_ANIMATED_GIFS=True\nUSE_GIFSICLE_ENGINE=False\nUSE_BLACKLIST=False\nLOADER=thumbor.loaders.http_loader\nSTORAGE=thumbor.storages.file_storage\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nRESULT_STORAGE=thumbor.result_storages.file_storage\nENGINE=thumbor.engines.pil\nSECURITY_KEY=\"MY_SECURE_KEY\"\nALLOW_UNSAFE_URL=True\nALLOW_OLD_URLS=True\nFILE_LOADER_ROOT_PATH=/data/loader\nHTTP_LOADER_CONNECT_TIMEOUT=5\nHTTP_LOADER_REQUEST_TIMEOUT=20\nHTTP_LOADER_FOLLOW_REDIRECTS=True\nHTTP_LOADER_MAX_REDIRECTS=5\nHTTP_LOADER_FORWARD_USER_AGENT=False\nHTTP_LOADER_DEFAULT_USER_AGENT=\"Thumbor/5.2.1\"\nHTTP_LOADER_PROXY_HOST=None\nHTTP_LOADER_PROXY_PORT=None\nHTTP_LOADER_PROXY_USERNAME=None\nHTTP_LOADER_PROXY_PASSWORD=None\nHTTP_LOADER_CA_CERTS=None\nHTTP_LOADER_VALIDATE_CERTS=True\nHTTP_LOADER_CLIENT_KEY=None\nHTTP_LOADER_CLIENT_CERT=None\nHTTP_LOADER_CURL_ASYNC_HTTP_CLIENT=False\nSTORAGE_EXPIRATION_SECONDS=2592000\nSTORES_CRYPTO_KEY_FOR_EACH_IMAGE=False\nFILE_STORAGE_ROOT_PATH=/data/storage\nUPLOAD_MAX_SIZE=0\nUPLOAD_ENABLED=False\nUPLOAD_PHOTO_STORAGE=thumbor.storages.file_storage\nUPLOAD_DELETE_ALLOWED=False\nUPLOAD_PUT_ALLOWED=False\nUPLOAD_DEFAULT_FILENAME=image\nMONGO_STORAGE_SERVER_HOST=mongo\nMONGO_STORAGE_SERVER_PORT=27017\nMONGO_STORAGE_SERVER_DB=thumbor\nMONGO_STORAGE_SERVER_COLLECTION=images\nREDIS_STORAGE_SERVER_HOST=redis\nREDIS_STORAGE_SERVER_PORT=6379\nREDIS_STORAGE_SERVER_DB=0\nREDIS_STORAGE_SERVER_PASSWORD=None\nREDIS_RESULT_STORAGE_SERVER_HOST=redis\nREDIS_RESULT_STORAGE_SERVER_PORT=6379\nREDIS_RESULT_STORAGE_SERVER_DB=0\nREDIS_RESULT_STORAGE_SERVER_PASSWORD=None\nMEMCACHE_STORAGE_SERVERS=[\"localhost:11211\",]\nMIXED_STORAGE_FILE_STORAGE=thumbor.storages.no_storage\nMIXED_STORAGE_CRYPTO_STORAGE=thumbor.storages.no_storage\nMIXED_STORAGE_DETECTOR_STORAGE=thumbor.storages.no_storage\nMETA_CALLBACK_NAME=None\nDETECTORS=[]\nFACE_DETECTOR_CASCADE_FILE=haarcascade_frontalface_alt.xml\nOPTIMIZERS=[]\nJPEGTRAN_PATH=/usr/bin/jpegtran\nPROGRESSIVE_JPEG=True\nFILTERS=\"[thumbor.filters.brightness, thumbor.filters.contrast, thumbor.filters.rgb, thumbor.filters.round_corner, thumbor.filters.quality, thumbor.filters.noise, thumbor.filters.watermark, thumbor.filters.equalize, thumbor.filters.fill, thumbor.filters.sharpen, thumbor.filters.strip_icc, thumbor.filters.frame, thumbor.filters.grayscale, thumbor.filters.rotate, thumbor.filters.format, thumbor.filters.max_bytes, thumbor.filters.convolution, thumbor.filters.blur, thumbor.filters.extract_focal, thumbor.filters.no_upscale]\"\nRESULT_STORAGE_EXPIRATION_SECONDS=0\nRESULT_STORAGE_FILE_STORAGE_ROOT_PATH=/data/result_storage\nRESULT_STORAGE_STORES_UNSAFE=False\nREDIS_QUEUE_SERVER_HOST=redis\nREDIS_QUEUE_SERVER_PORT=6379\nREDIS_QUEUE_SERVER_DB=\"0\"\nREDIS_QUEUE_SERVER_PASSWORD=None\nSQS_QUEUE_KEY_ID=None\nSQS_QUEUE_KEY_SECRET=None\nSQS_QUEUE_REGION=us-east-1\nUSE_CUSTOM_ERROR_HANDLING=False\nERROR_HANDLER_MODULE=thumbor.error_handlers.sentry\nERROR_FILE_LOGGER=None\nERROR_FILE_NAME_USE_CONTEXT=\"False\"\nSENTRY_DSN_URL=\nTC_AWS_REGION=eu-west-1\nTC_AWS_ENDPOINT=None\nTC_AWS_STORAGE_BUCKET=\nTC_AWS_STORAGE_ROOT_PATH=\nTC_AWS_LOADER_BUCKET=\nTC_AWS_LOADER_ROOT_PATH=\nTC_AWS_RESULT_STORAGE_BUCKET=\nTC_AWS_RESULT_STORAGE_ROOT_PATH=\nTC_AWS_STORAGE_SSE=False\nTC_AWS_STORAGE_RRS=False\nTC_AWS_ENABLE_HTTP_LOADER=False\nTC_AWS_ALLOWED_BUCKETS=False\nTC_AWS_STORE_METADATA=False\n\n### SOLR ##################################################\n\nSOLR_VERSION=5.5\nSOLR_PORT=8983\nSOLR_DATAIMPORTHANDLER_MYSQL=false\nSOLR_DATAIMPORTHANDLER_MSSQL=false\n\n### GITLAB ###############################################\nGITLAB_POSTGRES_INIT=true\nGITLAB_HOST_HTTP_PORT=8989\nGITLAB_HOST_HTTPS_PORT=9898\nGITLAB_HOST_SSH_PORT=2289\nGITLAB_DOMAIN_NAME=http://localhost\nGITLAB_ROOT_PASSWORD=laradock\nGITLAB_HOST_LOG_PATH=./logs/gitlab\nGITLAB_POSTGRES_HOST=postgres\nGITLAB_POSTGRES_USER=laradock_gitlab\nGITLAB_POSTGRES_PASSWORD=laradock_gitlab\nGITLAB_POSTGRES_DB=laradock_gitlab\n\n### GITLAB-RUNNER ###############################################\nGITLAB_CI_SERVER_URL=http://localhost:8989\nGITLAB_RUNNER_REGISTRATION_TOKEN=\"<my-registration-token>\"\nGITLAB_REGISTER_NON_INTERACTIVE=true\n\n### JUPYTERHUB ###############################################\nJUPYTERHUB_POSTGRES_INIT=true\nJUPYTERHUB_POSTGRES_HOST=postgres\nJUPYTERHUB_POSTGRES_USER=laradock_jupyterhub\nJUPYTERHUB_POSTGRES_PASSWORD=laradock_jupyterhub\nJUPYTERHUB_POSTGRES_DB=laradock_jupyterhub\nJUPYTERHUB_PORT=9991\nJUPYTERHUB_OAUTH_CALLBACK_URL=http://laradock:9991/hub/oauth_callback\nJUPYTERHUB_OAUTH_CLIENT_ID={GITHUB_CLIENT_ID}\nJUPYTERHUB_OAUTH_CLIENT_SECRET={GITHUB_CLIENT_SECRET}\nJUPYTERHUB_CUSTOM_CONFIG=./jupyterhub/jupyterhub_config.py\nJUPYTERHUB_USER_DATA=/jupyterhub\nJUPYTERHUB_USER_LIST=./jupyterhub/userlist\nJUPYTERHUB_ENABLE_NVIDIA=false\n\n### IPYTHON ##################################################\nLARADOCK_IPYTHON_CONTROLLER_IP=127.0.0.1\n\n### NETDATA ###############################################\nNETDATA_PORT=19999\n\n### REDISWEBUI #########################################\nREDIS_WEBUI_USERNAME=laradock\nREDIS_WEBUI_PASSWORD=laradock\nREDIS_WEBUI_CONNECT_HOST=redis\nREDIS_WEBUI_CONNECT_PORT=6379\nREDIS_WEBUI_PORT=9987\n\n### MONGOWEBUI ###############################################\nMONGO_WEBUI_PORT=3000\nMONGO_WEBUI_ROOT_URL=http://localhost\nMONGO_WEBUI_MONGO_URL=mongodb://mongo:27017/\nMONGO_WEBUI_INSTALL_MONGO=false\n\n### METABASE ###############################################\nMETABASE_PORT=3030\nMETABASE_DB_FILE=metabase.db\nMETABASE_JAVA_TIMEZONE=US/Pacific\n\n### IDE ###############################################\nIDE_THEIA_PORT=987\nIDE_WEBIDE_PORT=984\nIDE_CODIAD_PORT=985\nIDE_ICECODER_PORT=986\n\n### DOCKERREGISTRY ###############################################\nDOCKER_REGISTRY_PORT=5000\n\n### DOCKERWEBUI ###############################################\nDOCKER_WEBUI_REGISTRY_HOST=docker-registry\nDOCKER_WEBUI_REGISTRY_PORT=5000\n# if have use https proxy please set to 1\nDOCKER_REGISTRY_USE_SSL=0\nDOCKER_REGISTRY_BROWSE_ONLY=false\nDOCKER_WEBUI_PORT=8754\n\n### MAILU ###############################################\nMAILU_VERSION=latest\nMAILU_RECAPTCHA_PUBLIC_KEY=\"<YOUR_RECAPTCHA_PUBLIC_KEY>\"\nMAILU_RECAPTCHA_PRIVATE_KEY=\"<YOUR_RECAPTCHA_PRIVATE_KEY>\"\n# Main mail domain\nMAILU_HTTP_PORT=6080\nMAILU_HTTPS_PORT=60443\nMAILU_DOMAIN=example.com\nMAILU_INIT_ADMIN_USERNAME=laradock\nMAILU_INIT_ADMIN_PASSWORD=laradock\n# Hostnames for this server, separated with comas\nMAILU_HOSTNAMES=mail.example.com,alternative.example.com,yetanother.example.com\n# Postmaster local part (will append the main mail domain)\nMAILU_POSTMASTER=admin\n# Set to a randomly generated 16 bytes string\nMAILU_SECRET_KEY=ChangeMeChangeMe\n# Choose how secure connections will behave (value: letsencrypt, cert, notls, mail)\nMAILU_TLS_FLAVOR=cert\n# Authentication rate limit (per source IP address)\nMAILU_AUTH_RATELIMIT=\"10/minute;1000/hour\"\n# Opt-out of statistics, replace with \"True\" to opt out\nMAILU_DISABLE_STATISTICS=False\n# Message size limit in bytes\n# Default: accept messages up to 50MB\nMAILU_MESSAGE_SIZE_LIMIT=50000000\n# Will relay all outgoing mails if configured\nMAILU_RELAYHOST=\n# Networks granted relay permissions, make sure that you include your Docker\n# internal network (default to 172.17.0.0/16)\nMAILU_RELAYNETS=172.16.0.0/12\n# Fetchmail delay\nMAILU_FETCHMAIL_DELAY=600\n# Recipient delimiter, character used to delimiter localpart from custom address part\n# e.g. localpart+custom@domain;tld\nMAILU_RECIPIENT_DELIMITER=+\n# DMARC rua and ruf email\nMAILU_DMARC_RUA=admin\nMAILU_DMARC_RUF=admin\n# Welcome email, enable and set a topic and body if you wish to send welcome\n# emails to all users.\nMAILU_WELCOME=True\nMAILU_WELCOME_SUBJECT=\"Welcome to your new email account\"\nMAILU_WELCOME_BODY=\"Welcome to your new email account, if you can read this, then it is configured properly!\"\n# Path to the admin interface if enabled\nMAILU_WEB_ADMIN=/admin\n# Path to the webmail if enabled\nMAILU_WEB_WEBMAIL=/webmail\n# Website name\nMAILU_SITENAME=\"Example Mail\"\n# Linked Website URL\nMAILU_WEBSITE=http://mail.example.com\n# Default password scheme used for newly created accounts and changed passwords\n# (value: SHA512-CRYPT, SHA256-CRYPT, MD5-CRYPT, CRYPT)\nMAILU_PASSWORD_SCHEME=SHA512-CRYPT\n# Expose the admin interface (value: true, false)\nMAILU_ADMIN=true\n# Choose which webmail to run if any (values: roundcube, rainloop, none)\nMAILU_WEBMAIL=rainloop\n# Dav server implementation (value: radicale, none)\nMAILU_WEBDAV=radicale\n\n### TRAEFIK #################################################\n\nTRAEFIK_HOST_HTTP_PORT=80\nTRAEFIK_HOST_HTTPS_PORT=443\nTRAEFIK_DASHBOARD_PORT=8888\n# basic authentication for traefik dashboard username: admin password:admin\nTRAEFIK_DASHBOARD_USER='admin:$2y$10$lXaL3lj6raFic6rFqr2.lOBoCudAIhB6zyoqObNg290UFppiUzTTi'\nACME_DOMAIN=example.org\nACME_EMAIL=email@example.org\n\n### MOSQUITTO #################################################\n\nMOSQUITTO_PORT=9001\n\n### COUCHDB ###################################################\n\nCOUCHDB_PORT=5984\n\n### Manticore Search ##########################################\n\nMANTICORE_CONFIG_PATH=./manticore/config\nMANTICORE_API_PORT=9312\nMANTICORE_SPHINXQL_PORT=9306\nMANTICORE_HTTP_PORT=9308\n\n### pgadmin ##################################################\n# use this address http://ip6-localhost:5050\nPGADMIN_PORT=5050\nPGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org\nPGADMIN_DEFAULT_PASSWORD=admin\n\n### SWAGGER EDITOR  ###########################################\n\nSWAGGER_EDITOR_PORT=5151\n\n### SWAGGER UI  ###############################################\n\nSWAGGER_API_URL=http://generator.swagger.io/api/swagger.json\nSWAGGER_UI_PORT=5555\n\n### SONARQUBE ################################################\n## docker-compose up -d sonarqube\n## (If you encounter a database error)\n## docker-compose exec --user=root postgres\n## source docker-entrypoint-initdb.d/init_sonarqube_db.sh\n## (If you encounter logs error)\n## docker-compose run --user=root --rm sonarqube chown sonarqube:sonarqube /opt/sonarqube/logs\n\nSONARQUBE_HOSTNAME=sonar.example.com\nSONARQUBE_PORT=9000\nSONARQUBE_POSTGRES_INIT=true\nSONARQUBE_POSTGRES_HOST=postgres\nSONARQUBE_POSTGRES_DB=sonar\nSONARQUBE_POSTGRES_USER=sonar\nSONARQUBE_POSTGRES_PASSWORD=sonarPass\n\n### TOMCAT ################################################\nTOMCAT_VERSION=8.5.43\nTOMCAT_HOST_HTTP_PORT=8080\n\n### CASSANDRA ################################################\n\n# Cassandra Version, supported tags can be found at https://hub.docker.com/r/bitnami/cassandra/\nCASSANDRA_VERSION=latest\n# Inter-node cluster communication port. Default: 7000\nCASSANDRA_TRANSPORT_PORT_NUMBER=7000\n# JMX connections port. Default: 7199\nCASSANDRA_JMX_PORT_NUMBER=7199\n# Client port. Default: 9042.\nCASSANDRA_CQL_PORT_NUMBER=9042\n# Cassandra user name. Defaults: cassandra\nCASSANDRA_USER=cassandra\n# Password seeder will change the Cassandra default credentials at initialization. In clusters, only one node should be marked as password seeder. Default: no\nCASSANDRA_PASSWORD_SEEDER=no\n# Cassandra user password. Default: cassandra\nCASSANDRA_PASSWORD=cassandra\n# Number of tokens for the node. Default: 256.\nCASSANDRA_NUM_TOKENS=256\n# Hostname used to configure Cassandra. It can be either an IP or a domain. If left empty, it will be resolved to the machine IP.\nCASSANDRA_HOST=\n# Cluster name to configure Cassandra.. Defaults: My Cluster\nCASSANDRA_CLUSTER_NAME=\"My Cluster\"\n# : Hosts that will act as Cassandra seeds. No defaults.\nCASSANDRA_SEEDS=\n # Snitch name (which determines which data centers and racks nodes belong to). Default SimpleSnitch\nCASSANDRA_ENDPOINT_SNITCH=SimpleSnitch\n # Enable the thrift RPC endpoint. Default :true\nCASSANDRA_ENABLE_RPC=true\n# Datacenter name for the cluster. Ignored in SimpleSnitch endpoint snitch. Default: dc1.\nCASSANDRA_DATACENTER=dc1\n# Rack name for the cluster. Ignored in SimpleSnitch endpoint snitch. Default: rack1.\nCASSANDRA_RACK=rack1\n\n### GEARMAN ##################################################\n\n# Gearman version to use. See available tags at https://hub.docker.com/r/artefactual/gearmand\nGEARMAN_VERSION=latest\n# Port to use (Default: 4730)\nGEARMAN_PORT=4730\n# Logging Level (Default: INFO)\nGEARMAN_VERBOSE=INFO\n# Persistent queue type to use (Default: builtin)\nGEARMAN_QUEUE_TYPE=builtin\n# Number of I/O threads to use (Default: 4)\nGEARMAN_THREADS=4\n# Number of backlog connections for listen (Default: 32)\nGEARMAN_BACKLOG=32\n# Number of file descriptors to allow for the process (Default is max allowed for user)\nGEARMAN_FILE_DESCRIPTORS=\n# Number of attempts to run the job before the job server removes it. (Default: no limit = 0)\nGEARMAN_JOB_RETRIES=0\n# Assign work in round-robin order per worker connection (Default: 0)\nGEARMAN_ROUND_ROBIN=0\n# Number of workers to wakeup for each job received (Default: 0)\nGEARMAN_WORKER_WAKEUP=0\n# Enable keepalive on sockets (Default: 0)\nGEARMAN_KEEPALIVE=0\n# The duration between two keepalive transmissions in idle condition (Default: 30)\nGEARMAN_KEEPALIVE_IDLE=30\n# The duration between two successive keepalive retransmissions, if acknowledgement to the previous keepalive transmission is not received\t(Default: 10)\nGEARMAN_KEEPALIVE_INTERVAL=10\n# The number of retransmissions to be carried out before declaring that remote end is not available (Default: 5)\nGEARMAN_KEEPALIVE_COUNT=5\n# Mysql server host (Default: localhost)\nGEARMAN_MYSQL_HOST=localhost\n# Mysql server port (Default: 3306)\nGEARMAN_MYSQL_PORT=3306\n# Mysql server user (Default: root)\nGEARMAN_MYSQL_USER=root\n# Mysql password\nGEARMAN_MYSQL_PASSWORD=\n# Path to file with mysql password(Docker secrets)\nGEARMAN_MYSQL_PASSWORD_FILE=\n# Database to use by Gearman (Default: Gearmand)\nGEARMAN_MYSQL_DB=Gearmand\n# Table to use by Gearman (Default: gearman_queue)\nGEARMAN_MYSQL_TABLE=gearman_queue\n\n### ELK Stack ##################################################\nELK_VERSION=7.9.1\n\n### Tarantool ##################################################\nTARANTOOL_PORT=3301\nTARANTOOL_ADMIN_PORT=8002\n\n### NATS ##################################################\nNATS_CLIENT_PORT=4222\nNATS_MONITORING_PORT=6222\nNATS_ROUTE_PORT=8222\n\n### SOKETI ##################################################\nSOKETI_NODE_VERSION=16-debian\nSOKETI_BASE_IMAGE_TAG_PREFIX=latest\nSOKETI_PORT=6001\nSOKETI_METRICS_SERVER_PORT=9601\n\n### ONEDEV ##################################################\nONEDEV_HTTP_PORT=6610\nONEDEV_SSH_PORT=6611\n\n### Keycloak ################################################\nKEYCLOAK_VERSION=latest\nKEYCLOAK_POSTGRES_INIT=true\nKEYCLOAK_HTTP_PORT=8081\nKEYCLOAK_CREATE_ADMIN_USER=true\nKEYCLOAK_ADMIN_USER='admin'\nKEYCLOAK_ADMIN_PASSWORD='secret'\nKEYCLOAK_POSTGRES_HOST=postgres\nKEYCLOAK_POSTGRES_USER=laradock_keycloak\nKEYCLOAK_POSTGRES_PASSWORD=laradock_keycloak\nKEYCLOAK_POSTGRES_DB=laradock_keycloak\n\n### Mailpit #################################################\nMAILPIT_HTTP_PORT=8125\nMAILPIT_SMTP_PORT=1125\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0166015625,
          "content": "*.sh text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3935546875,
          "content": ".idea\n/logs\n/data\n.env\n/.project\n.docker-sync\n/jenkins/jenkins_home\n\n/logstash/pipeline/*.conf\n/logstash/config/pipelines.yml\n\n/nginx/ssl/*.crt\n/nginx/ssl/*.key\n/nginx/ssl/*.csr\n\n/apache2/ssl/*.crt\n/apache2/ssl/*.key\n/apache2/ssl/*.csr\n/apache2/ssl/*.org\n\n/.devcontainer/*\n!/.devcontainer/devcontainer.example.json\n!/.devcontainer/docker-compose.extend-example.yml\n\ndocker-compose.custom.yml\n\n.DS_Store\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.029296875,
          "content": "image: gitpod/workspace-full\n\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.14453125,
          "content": "# Laradock Code of Conduct\n\nWe follow the [Contributor Covenant](https://www.contributor-covenant.org/version/1/4/code-of-conduct) Code of Conduct.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1064453125,
          "content": "# Thank you for your consideration\n\nCheckout out our [contribution guide](https://laradock.io/contributing).\n"
        },
        {
          "name": "DOCUMENTATION",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright 2018 <Mahmoud Zalt>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README-zh.md",
          "type": "blob",
          "size": 23.1796875,
          "content": "# Laradock\n\n[![forthebadge](http://forthebadge.com/images/badges/built-by-developers.svg)](http://zalt.me)\n\n[![Gitter](https://badges.gitter.im/Laradock/laradock.svg)](https://gitter.im/Laradock/laradock?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nLaradock 能够帮你在 **Docker** 上快速搭建 **Laravel** 应用。\n\n就像 Laravel Homestead 一样，但是 Docker 替换了 Vagrant。\n\n> 先在使用 Laradock，然后再学习它们。\n\n## 目录\n- [Intro](#Intro)\n\t- [Features](#features)\n\t- [Supported Software's](#Supported-Containers)\n\t- [What is Docker](#what-is-docker)\n\t- [What is Laravel](#what-is-laravel)\n\t- [Why Docker not Vagrant](#why-docker-not-vagrant)\n\t- [Laradock VS Homestead](#laradock-vs-homestead)\n- [Demo Video](#Demo)\n- [Requirements](#Requirements)\n- [Installation](#Installation)\n- [Usage](#Usage)\n- [Documentation](#Documentation)\n\t- [Docker](#Docker)\n\t\t- [List current running Containers](#List-current-running-Containers)\n\t\t- [Close all running Containers](#Close-all-running-Containers)\n\t\t- [Delete all existing Containers](#Delete-all-existing-Containers)\n\t\t- [Enter a Container (SSH into a running Container)](#Enter-Container)\n\t\t- [Edit default container configuration](#Edit-Container)\n\t\t- [Edit a Docker Image](#Edit-a-Docker-Image)\n\t\t- [Build/Re-build Containers](#Build-Re-build-Containers)\n\t\t- [Add more Software's (Docker Images)](#Add-Docker-Images)\n\t\t- [View the Log files](#View-the-Log-files)\n\t- [Laravel](#Laravel):\n\t\t- [Install Laravel from a Docker Container](#Install-Laravel)\n\t\t- [Run Artisan Commands](#Run-Artisan-Commands)\n\t\t- [Use Redis](#Use-Redis)\n\t\t- [Use Mongo](#Use-Mongo)\n\t- [PHP](#PHP)\n\t\t- [Install PHP Extensions](#Install-PHP-Extensions)\n\t\t- [Change the PHP-FPM Version](#Change-the-PHP-FPM-Version)\n\t\t- [Change the PHP-CLI Version](#Change-the-PHP-CLI-Version)\n\t\t- [Install xDebug](#Install-xDebug)\n\t- [Misc](#Misc)\n\t\t- [Use custom Domain](#Use-custom-Domain)\n\t\t- [Enable Global Composer Build Install](#Enable-Global-Composer-Build-Install)\n\t\t- [Install Prestissimo](#Install-Prestissimo)\n\t\t- [Install Node + NVM](#Install-Node)\n\t\t- [Debugging](#debugging)\n\t\t- [Upgrading Laradock](#upgrading-laradock)\n- [Help & Questions](#Help)\n\n\n<a name=\"Intro\"></a>\n## 介绍\n\nLaradock 努力简化创建开发环境过程。\n它包含预包装 Docker 镜像，提供你一个美妙的开发环境而不需要安装 PHP, NGINX, MySQL 和其他任何软件在你本地机器上。\n\n**使用概览：**\n\n让我们了解使用它安装 `NGINX`, `PHP`, `Composer`, `MySQL` 和 `Redis`，然后运行 `Laravel`\n\n1. 将 Laradock 放到你的 Laravel 项目中：\n```bash\ngit clone https://github.com/laradock/laradock.git\n```\n\n2. 进入 Laradock 目录\n ```bash\ncp .env.example .env\n```\n如果你在中国内地，可以修改一些配置来进行镜像加速，不过build时还是会请求GitHub来下载一些文件，此时需要保证你的计算机能连上GitHub   \n(1）配置DockerHub镜像加速，[链接](https://www.runoob.com/docker/docker-mirror-acceleration.html)   \n(2) 修改.env\n```\n# 开启\bubuntu国内源\nCHANGE_SOURCE=true\n# composer镜像源\nWORKSPACE_COMPOSER_REPO_PACKAGIST=https://mirrors.aliyun.com/composer/\n# nvm镜像源\nWORKSPACE_NVM_NODEJS_ORG_MIRROR=https://npmmirror.com/mirrors/node\n# npm镜像源\nWORKSPACE_NPM_REGISTRY=https://registry.npmmirror.com\n```\n\n3. 运行这些容器。\n```bash\ndocker-compose up -d nginx mysql redis\n```\n\n4. 打开你的Laravel 项目的 `.env` 文件，然后设置 `mysql` 的 `DB_HOST` 和  `redis` 的`REDIS_HOST`。\n\n5. 打开浏览器，访问 localhost：\n\n<a name=\"features\"></a>\n### 特点\n\n- 在 PHP 版本：7.0，5.6.5.5...之中可以简单切换。\n- 可选择你最喜欢的数据库引擎，比如：MySQL, Postgres, MariaDB...\n- 可运行自己的软件组合，比如：Memcached, HHVM, Beanstalkd...\n- 所有软件运行在不同的容器之中，比如：PHP-FPM, NGINX, PHP-CLI...\n- 通过简单的编写 `Dockerfile` 容易定制任何容器。\n- 所有镜像继承自一个官方基础镜像（Trusted base Images）\n- 可预配置Laravel的Nginx环境\n- 容易应用容器中的配置 配置文件（`Dockerfile`）\n- 最新的 Docker Compose 版本（`docker-compose`）\n- 所有的都是可视化和可编辑的\n- 快速的镜像构建\n- 每周都会有更新...\n\n<a name=\"Supported-Containers\"></a>\n### 支持的软件 (容器)\n\n- **数据库引擎:**\n\t- MySQL\n\t- PostgreSQL\n\t- MariaDB\n\t- MongoDB\n\t- Neo4j\n- **缓存引擎:**\n\t- Redis\n\t- Memcached\n- **PHP 服务器:**\n\t- NGINX\n\t- Apache2\n\t- Caddy\n- **PHP 编译工具:**\n\t- PHP-FPM\n\t- HHVM\n- **消息队列系统:**\n\t- Beanstalkd (+ Beanstalkd Console)\n- **工具:**\n\t- Workspace (PHP7-CLI, Composer, Git, Node, Gulp, SQLite, Vim, Nano, cURL...)\n\n>如果你找不到你需要的软件，构建它然后把它添加到这个列表。你的贡献是受欢迎的。\n\n<a name=\"what-is-docker\"></a>\n### Docker 是什么?\n\n[Docker](https://www.docker.com) 是一个开源项目,自动化部署应用程序软件的容器,在 Linux, Mac OS and Windows 提供一个额外的抽象层和自动化的[操作系统级的虚拟化](https://en.wikipedia.org/wiki/Operating-system-level_virtualization)\n\n<a name=\"what-is-laravel\"></a>\n### Laravel 是什么?\n\n额，这很认真的!!!\n\n<a name=\"why-docker-not-vagrant\"></a>\n### 为什么使用 Docker 而不是 Vagrant!?\n\n[Vagrant](https://www.vagrantup.com) 构建虚拟机需要几分钟然而 Docker 构建虚拟容器只需要几秒钟。\n而不是提供一个完整的虚拟机,就像你用 Vagrant, Docker 为您提供**轻量级**虚拟容器,共享相同的内核和允许安全执行独立的进程。\n\n除了速度, Docker 提供大量的 Vagrant 无法实现的功能。\n\n最重要的是 Docker 可以运行在开发和生产(相同环境无处不在)。Vagrant 是专为开发,(所以在生产环境你必须每一次重建您的服务器)。\n\n<a name=\"laradock-vs-homestead\"></a>\n### Laradock Homestead 对比\n\nLaradock and [Homestead](https://laravel.com/docs/master/homestead) 给你一个完整的虚拟开发环境。(不需要安装和配置软件在你自己的每一个操作系统)。\n\nHomestead 是一个工具,为你控制虚拟机(使用 Homestead 特殊命令)。Vagrant 可以管理你的管理虚容器。\n\n运行一个虚拟容器比运行一整个虚拟机快多了 **Laradock 比 Homestead 快多了**\n\n<a name=\"Demo\"></a>\n## 演示视频\n还有什么比**演示视频**好：\n\n- Laradock [v4.0](https://www.youtube.com/watch?v=TQii1jDa96Y)\n- Laradock [v2.2](https://www.youtube.com/watch?v=-DamFMczwDA)\n- Laradock [v0.3](https://www.youtube.com/watch?v=jGkyO6Is_aI)\n- Laradock [v0.1](https://www.youtube.com/watch?v=3YQsHe6oF80)\n\n<a name=\"Requirements\"></a>\n## 依赖\n\n- [Git](https://git-scm.com/downloads)       \n- [Docker](https://www.docker.com/products/docker-desktop/)\n\n<a name=\"Installation\"></a>\n## 安装\n\n1 - 克隆 `Laradock` 仓库:\n\n**A)** 如果你已经有一个 Laravel 项目,克隆这个仓库在到 `Laravel` 根目录\n\n```bash\ngit submodule add https://github.com/laradock/laradock.git\n```\n\n>如果你不是使用 Git 管理 Laravel 项目,您可以使用 `git clone` 而不是 `git submodule`。\n\n**B)** 如果你没有一个 Laravel 项目,你想 Docker 安装 Laravel,克隆这个源在您的机器任何地方上:\n\n```bash\ngit clone https://github.com/laradock/laradock.git\n```\n\n<a name=\"Usage\"></a>\n## 使用\n\n**请在开始之前阅读:**\n如果你正在使用 **Docker Toolbox** (VM)，选择以下任何一个方法：\n- 更新到 [Docker Desktop](https://www.docker.com/products/docker-desktop/) Mac/Windows 版本 (建议). 查看 [Upgrading Laradock](#upgrading-laradock)\n- 使用 Laradock v3.* (访问 `Laradock-ToolBox` [分支](https://github.com/laradock/laradock/tree/Laradock-ToolBox)).\n如果您使用的是 **Docker Desktop**(Mac / Windows 版本)甚至是 Linux 版本,通常可以继续阅读这个文档，Laradock v4 以上版本将仅支持 **Docker Desktop**。\n\n1 - 运行容器: *(在运行 `docker-compose` 命令之前，确认你在 `laradock` 目录中*\n\n**例子:** 运行 NGINX 和 MySQL:\n\n```bash\ndocker-compose up -d  nginx mysql\n```\n你可以从以下列表选择你自己的容器组合：\n\n`nginx`, `hhvm`, `php-fpm`, `mysql`, `redis`, `postgres`, `mariadb`, `neo4j`, `mongo`, `apache2`, `caddy`, `memcached`, `beanstalkd`, `beanstalkd-console`, `workspace`.\n\n**说明**: `workspace` 和 `php-fpm` 将运行在大部分实例中, 所以不需要在 `up` 命令中加上它们.\n\n2 - 进入 Workspace 容器, 执行像 (Artisan, Composer, PHPUnit, Gulp, ...)等命令\n\n```bash\ndocker-compose exec workspace bash\n```\n\n增加 `--user=laradock` (例如 `docker-compose exec --user=laradock workspace bash`) 作为您的主机的用户创建的文件. (你可以从 `docker-compose.yml`修改 PUID (User id) 和 PGID (group id) 值 ).\n\n3 - 编辑 Laravel 的配置.\n\n如果你还没有安装 Laravel 项目，请查看 [How to Install Laravel in a Docker Container](#Install-Laravel).\n\n打开 Laravel 的 `.env` 文件 然后 配置 你的 `mysql` 的 `DB_HOST`:\n\n```env\nDB_HOST=mysql\n```\n\n4 - 打开浏览器访问 localhost (`http://localhost/`).\n\n**调试**: 如果你碰到任何问题，请查看 [调试](#debugging) 章节\n如果你需要特别支持，请联系我，更多细节在[帮助 & 问题](#Help)章节\n\n<a name=\"Documentation\"></a>\n## 文档\n\n<a name=\"Docker\"></a>\n### [Docker]\n\n<a name=\"List-current-running-Containers\"></a>\n### 列出正在运行的容器\n```bash\ndocker ps\n```\n\n你也可以使用以下命令查看某项目的容器\n```bash\ndocker-compose ps\n```\n\n<a name=\"Close-all-running-Containers\"></a>\n### 关闭所有容器\n```bash\ndocker-compose stop\n```\n\n停止某个容器:\n\n```bash\ndocker-compose stop {容器名称}\n```\n\n<a name=\"Delete-all-existing-Containers\"></a>\n### 删除所有容器\n```bash\ndocker-compose down\n```\n\n小心这个命令,因为它也会删除你的数据容器。(如果你想保留你的数据你应该在上述命令后列出容器名称删除每个容器本身):*\n\n<a name=\"Enter-Container\"></a>\n### 进入容器 (通过 SSH 进入一个运行中的容器)\n\n1 - 首先使用 `docker ps` 命令查看正在运行的容器\n\n2 - 进入某个容器使用:\n\n```bash\ndocker-compose exec {container-name} bash\n```\n\n*例如: 进入 MySQL 容器*\n\n```bash\ndocker-compose exec mysql bash\n```\n\n3 - 退出容器, 键入 `exit`.\n\n\n<a name=\"Edit-Container\"></a>\n### 编辑默认容器配置\n打开 `docker-compose.yml` 然后 按照你想的修改.\n\n例如:\n\n修改 MySQL 数据库名称:\n\n```yml\n  environment:\n    MYSQL_DATABASE: laradock\n```\n\n修改 Redis 默认端口为 1111:\n\n```yml\n  ports:\n    - \"1111:6379\"\n```\n\n<a name=\"Edit-a-Docker-Image\"></a>\n### 编辑 Docker 镜像\n\n1 - 找到你想修改的镜像的 `Dockerfile` ,\n<br>\n例如： `mysql` 在 `mysql/Dockerfile`.\n\n2 - 按你所要的编辑文件.\n\n3 - 重新构建容器:\n\n```bash\ndocker-compose build mysql\n```\n\n更多信息在容器重建中[点击这里](#Build-Re-build-Containers).\n\n<a name=\"Build-Re-build-Containers\"></a>\n### 建立/重建容器\n\n如果你做任何改变 `Dockerfile` 确保你运行这个命令,可以让所有修改更改生效:\n\n```bash\ndocker-compose build\n```\n\n选择你可以指定哪个容器重建(而不是重建所有的容器):\n\n```bash\ndocker-compose build {container-name}\n```\n\n如果你想重建整个容器，你可能需要使用 `--no-cache` 选项  (`docker-compose build --no-cache {container-name}`).\n\n<a name=\"Add-Docker-Images\"></a>\n### 增加更多软件 (Docker 镜像)\n\n为了增加镜像（软件）, 编辑 `docker-compose.yml` 添加容器细节， 你需要熟悉 [docker compose 文件语法](https://docs.docker.com/compose/compose-file/).\n\n<a name=\"View-the-Log-files\"></a>\n### 查看日志文件\nNginx的日志在 `logs/nginx` 目录\n\n然后查看其它容器日志(MySQL, PHP-FPM,...) 你可以运行:\n\n```bash\ndocker logs {container-name}\n```\n\n<a name=\"Laravel\"></a>\n### [Laravel]\n\n<a name=\"Install-Laravel\"></a>\n### 从 Docker 镜像安装 Laravel\n\n1 - 首先你需要进入 Workspace 容器.\n\n2 - 安装 Laravel.\n\n例如 使用 Composer\n\n```bash\ncomposer create-project laravel/laravel my-cool-app \"5.2.*\"\n```\n\n> 我们建议使用 `composer create-project` 替换 Laravel 安装器去安装 Laravel.\n\n关于更多 Laravel 安装内容请 [点击这儿](https://laravel.com/docs/master#installing-laravel).\n\n\n3 - 编辑 `docker-compose.yml` 映射新的应用目录:\n系统默认 Laradock 假定 Laravel 应用在 laradock 的父级目录中\n\n更新 Laravel 应用在 `my-cool-app` 目录中, 我们需要用 `../my-cool-app/:/var/www`替换 `../:/var/www` , 如下:\n\n```yaml\n    application:\n        build: ./application\n        volumes:\n            - ../my-cool-app/:/var/www\n```\n\n4 - 进入目录下继续工作..\n\n```bash\ncd my-cool-app\n```\n\n5 - 回到 Laradock 安装步骤,看看如何编辑 `.env` 的文件。\n\n<a name=\"Run-Artisan-Commands\"></a>\n### 运行 Artisan 命令\n\n你可以从 Workspace 容器运行 artisan 命令和其他终端命令\n\n1 - 确认 Workspace 容器已经运行.\n\n```bash\ndocker-compose up -d workspace // ..and all your other containers\n```\n\n2 - 找到 Workspace 容器名称:\n\n```bash\ndocker-compose ps\n```\n\n3 - 进入 Workspace 容器:\n\n```bash\ndocker-compose exec workspace bash\n```\n\n增加 `--user=laradock` (例如 `docker-compose exec --user=laradock workspace bash`) 作为您的主机的用户创建的文件.\n\n4 - 运行任何你想的 :)\n\n```bash\nphp artisan\n```\n```bash\ncomposer update\n```\n```bash\nphpunit\n```\n\n<a name=\"Use-Redis\"></a>\n### 使用 Redis\n1 - 首先务必用 `docker-compose up` 命令运行 (`redis`) 容器.\n\n```bash\ndocker-compose up -d redis\n```\n\n2 - 打开你的Laravel的 `.env` 文件 然后 配置 `redis` 的 `REDIS_HOST`\n\n```env\nREDIS_HOST=redis\n```\n\n如果在你的 `.env` 文件没有找到 `REDIS_HOST` 变量。打开数据库配置文件 `config/database.php` 然后用 `redis` 替换默认 IP `127.0.0.1`，例如：\n\n\n```php\n'redis' => [\n    'cluster' => false,\n    'default' => [\n        'host'     => 'redis',\n        'port'     => 6379,\n        'database' => 0,\n    ],\n],\n```\n\n3 - 启用 Redis 缓存或者开启 Session 管理也在 `.env` 文件中用 `redis` 替换默认 `file` 设置 `CACHE_DRIVER` 和 `SESSION_DRIVER`\n\n```env\nCACHE_DRIVER=redis\nSESSION_DRIVER=redis\n```\n\n4 - 最好务必通过 Composer 安装 `predis/predis` 包 `(~1.0)`:\n\n```bash\ncomposer require predis/predis:^1.0\n```\n\n5 - 你可以用以下代码在 Laravel 中手动测试：\n\n```php\n\\Cache::store('redis')->put('Laradock', 'Awesome', 10);\n```\n\n<a name=\"Use-Mongo\"></a>\n### 使用 Mongo\n\n1 - 首先在 Workspace 和 PHP-FPM 容器中安装 `mongo`:\n\n    a) 打开 `docker-compose.yml` 文件\n    b) 在 Workspace 容器中找到 `INSTALL_MONGO` 选项：\n    c) 设置为 `true`\n    d) 在 PHP-FPM 容器中找到 `INSTALL_MONGO`\n    e) 设置为 `true`\n\n相关配置项如下:\n\n```yml\n    workspace:\n        build:\n            context: ./workspace\n            args:\n                - INSTALL_MONGO=true\n    ...\n    php-fpm:\n        build:\n            context: ./php-fpm\n            args:\n                - INSTALL_MONGO=true\n    ...\n```\n\n2 - 重建 `Workspace、PHP-FPM` 容器\n\n```bash\ndocker-compose build workspace php-fpm\n```\n\n3 - 使用 `docker-compose up` 命令运行 MongoDB 容器 (`mongo`)\n\n```bash\ndocker-compose up -d mongo\n```\n\n4 - 在 `config/database.php` 文件添加 MongoDB 的配置项:\n\n```php\n'connections' => [\n\n    'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('DB_HOST', 'localhost'),\n        'port'     => env('DB_PORT', 27017),\n        'database' => env('DB_DATABASE', 'database'),\n        'username' => '',\n        'password' => '',\n        'options'  => [\n            'database' => '',\n        ]\n    ],\n\n\t// ...\n\n],\n```\n\n5 - 打开 Laravel 的 `.env` 文件然后更新以下字段:\n\n- 设置 `DB_HOST` 为 `mongo` 的主机 IP.\n- 设置 `DB_PORT` 为 `27017`.\n- 设置 `DB_DATABASE` 为 `database`.\n\n\n6 - 最后务必通过 Composer 安装 `jenssegers/mongodb` 包，添加服务提供者（Laravel Service Provider）\n\n\n```bash\ncomposer require jenssegers/mongodb\n```\n\n更多细节内容 [点击这儿](https://github.com/jenssegers/laravel-mongodb#installation).\n\n7 - 测试:\n\n- 首先让你的模型继承 Mongo 的 Eloquent Model. 查看 [文档](https://github.com/jenssegers/laravel-mongodb#eloquent).\n- 进入 Workspace 容器.\n- 迁移数据库 `php artisan migrate`.\n\n<a name=\"PHP\"></a>\n### [PHP]\n\n<a name=\"Install-PHP-Extensions\"></a>\n### 安装 PHP 拓展\n\n安装 PHP 扩展之前,你必须决定你是否需要 `FPM` 或 `CLI`,因为他们安装在不同的容器上,如果你需要两者,则必须编辑两个容器。\n\nPHP-FPM 拓展务必安装在 `php-fpm/Dockerfile-XX`. *(用你 PHP 版本号替换 XX)*.\n\nPHP-CLI 拓展应该安装到 `workspace/Dockerfile`.\n\n<a name=\"Change-the-PHP-FPM-Version\"></a>\n### 修改 PHP-FPM 版本\n默认运行 **PHP-FPM 7.0** 版本.\n\n>PHP-FPM 负责服务你的应用代码,如果你是计划运行您的应用程序在不同 PHP-FPM 版本上，则不需要更改 PHP-CLI 版本。\n\n#### A) 切换版本 PHP `7.0` 到 PHP `5.6`\n\n1 - 打开 `docker-compose.yml`。\n\n2 - 在PHP容器的 `Dockerfile-70` 文件。\n\n3 - 修改版本号, 用 `Dockerfile-56` 替换 `Dockerfile-70` , 例如:\n\n```txt\nphp-fpm:\n    build:\n        context: ./php-fpm\n        dockerfile: Dockerfile-70\n```\n\n4 - 最后重建PHP容器\n\n```bash\ndocker-compose build php\n```\n\n> 更多关于PHP基础镜像, 请访问 [PHP Docker官方镜像](https://hub.docker.com/_/php/).\n\n\n#### B) 切换版本 PHP `7.0` 或 `5.6` 到 PHP `5.5`\n我们已不在本地支持 PHP5.5，但是你按照以下步骤获取：\n\n1 - 克隆 `https://github.com/laradock/php-fpm`.\n\n2 - 重命名 `Dockerfile-56` 为 `Dockerfile-55`.\n\n3 - 编辑文件 `FROM php:5.6-fpm` 为 `FROM php:5.5-fpm`.\n\n4 - 从 `Dockerfile-55` 构建镜像.\n\n5 - 打开 `docker-compose.yml` 文件.\n\n6 - 将 `php-fpm` 指向你的 `Dockerfile-55` 文件.\n\n\n<a name=\"Change-the-PHP-CLI-Version\"></a>\n### 修改 PHP-CLI 版本\n默认运行 **PHP-CLI 7.0** 版本\n\n>说明: PHP-CLI 只用于执行 Artisan 和 Composer 命令，不服务于你的应用代码，这是 PHP-FPM 的工作，所以编辑 PHP-CLI 的版本不是很重要。\nPHP-CLI 安装在 Workspace 容器，改变 PHP-CLI 版本你需要编辑 `workspace/Dockerfile`.\n现在你必须手动修改 PHP-FPM 的 `Dockerfile` 或者创建一个新的。 (可以考虑贡献功能).\n\n<a name=\"Install-xDebug\"></a>\n### 安装 xDebug\n\n1 - 首先在 Workspace 和 PHP-FPM 容器安装 `xDebug`:\n\n    a) 打开 `docker-compose.yml` 文件\n    b) 在 Workspace 容器中找到 `INSTALL_XDEBUG` 选项\n    c) 改为 `true`\n    d) 在 PHP-FPM 容器中找到 `INSTALL_XDEBUG ` 选项\n    e) 改为 `true`\n\n例如:\n\n```yml\n    workspace:\n        build:\n            context: ./workspace\n            args:\n                - INSTALL_XDEBUG=true\n    ...\n    php-fpm:\n        build:\n            context: ./php-fpm\n            args:\n                - INSTALL_XDEBUG=true\n    ...\n```\n\n2 - 重建容器 `docker-compose build workspace php-fpm`\n\n<a name=\"Misc\"></a>\n### [Misc]\n\n<a name=\"Use-custom-Domain\"></a>\n### 使用自定义域名 (替换 Docker 的 IP)\n\n假定你的自定义域名是 `laravel.test`\n\n1 - 打开 `/etc/hosts` 文件添加以下内容，映射你的 localhost 地址 `127.0.0.1` 为 `laravel.test` 域名\n```bash\n127.0.0.1    laravel.test\n```\n\n2 - 打开你的浏览器访问 `{http://laravel.test}`\n\n你可以在 nginx 配置文件自定义服务器名称,如下:\n\n```conf\nserver_name laravel.test;\n```\n\n<a name=\"Enable-Global-Composer-Build-Install\"></a>\n### 安装全局 Composer 命令\n\n为启用全局 Composer Install 在容器构建中允许你安装 composer 的依赖，然后构建完成后就是可用的。\n\n1 - 打开 `docker-compose.yml` 文件\n\n2 - 在 Workspace 容器找到 `COMPOSER_GLOBAL_INSTALL` 选项并设置为 `true`\n\n例如:\n\n```yml\n    workspace:\n        build:\n            context: ./workspace\n            args:\n                - COMPOSER_GLOBAL_INSTALL=true\n    ...\n```\n3 - 现在特价你的依赖关系到 `workspace/composer.json`\n\n4 - 重建 Workspace 容器 `docker-compose build workspace`\n\n<a name=\"Install-Prestissimo\"></a>\n### 安装 Prestissimo\n\n[Prestissimo](https://github.com/hirak/prestissimo) 是一个平行安装功能的 composer 插件。\n\n1 - 在安装期间，使全局 Composer Install 正在运行:\n\n    点击这个 [启用全局 Composer 构建安装](#Enable-Global-Composer-Build-Install) 然后继续步骤1、2.\n\n2 - 添加 prestissimo 依赖到 Composer:\n\na - 现在打开 `workspace/composer.json` 文件\n\nb - 添加 `\"hirak/prestissimo\": \"^0.3\"` 依赖\n\nc - 重建 Workspace 容器 `docker-compose build workspace`\n\n\n<a name=\"Install-Node\"></a>\n### 安装 Node + NVM\n\n在 Workspace 容器安装 NVM 和 NodeJS\n\n1 - 打开 `docker-compose.yml` 文件\n\n2 - 在 Workspace 容器找到 `INSTALL_NODE` 选项设为 `true`\n\n例如:\n\n```yml\n    workspace:\n        build:\n            context: ./workspace\n            args:\n                - INSTALL_NODE=true\n    ...\n```\n\n3 - 重建容器 `docker-compose build workspace`\n\n<a name=\"debugging\"></a>\n### Debugging\n\n*这里是你可能面临的常见问题列表,以及可能的解决方案.*\n\n#### 看到空白页而不是 Laravel 的欢迎页面!\n\n在 Laravel 根目录，运行下列命令:\n\n```bash\nsudo chmod -R 777 storage bootstrap/cache\n```\n\n#### 看到 \"Welcome to nginx\" 而不是 Laravel 应用!\n\n在浏览器使用 `http://127.0.0.1` 替换 `http://localhost`.\n\n#### 看到包含 `address already in use` 的错误\n\n确保你想运行的服务端口(80, 3306, etc.)不是已经被其他程序使用，例如 `apache`/`httpd` 服务或其他安装的开发工具\n\n<a name=\"upgrading-laradock\"></a>\n### Laradock 升级\n\n\n从 Docker Toolbox (VirtualBox) 移动到 Docker Native (for Mac/Windows)，需要从 Laradock v3.* 升级到 v4.*:\n\n1. 停止 Docker 虚拟机 `docker-machine stop {default}`\n2. 安装 Docker [Mac](https://docs.docker.com/docker-for-mac/) 或 [Windows](https://docs.docker.com/docker-for-windows/).\n3. 升级 Laradock 到 `v4.*.*` (`git pull origin master`)\n4. 像之前一样使用 Laradock: `docker-compose up -d nginx mysql`.\n\n**说明:** 如果你面临任何上面的问题的最后一步:重建你所有的容器\n```bash\ndocker-compose build --no-cache\n```\n\"警告：容器数据可能会丢失!\"\n\n\n## 贡献\n这个小项目是由一个有一个全职工作和很多的职责的人建立的,所以如果你喜欢这个项目,并且发现它需要一个 bug 修复或支持或新软件或升级任何容器,或其他任何. . 你是非常欢迎，欢迎毫不不犹豫地贡献吧:)\n\n#### 阅读我们的 [贡献说明](https://github.com/laradock/laradock/blob/master/CONTRIBUTING.md)\n\n<a name=\"Help\"></a>\n## 帮助 & 问题\n\n从聊天室 [Gitter](https://gitter.im/Laradock/laradock) 社区获取帮助和支持.\n\n你也可以打开 Github 上的 [issue](https://github.com/laradock/laradock/issues) (将被贴上问题和答案) 或与大家讨论 [Gitter](https://gitter.im/Laradock/laradock).\n\nDocker 或 Laravel 的特别帮助，你可以在 [Codementor.io](https://www.codementor.io/mahmoudz) 上直接和项目创始人在线沟通\n\n## 关于作者\n\n**创始人:**\n\n- [Mahmoud Zalt](https://github.com/Mahmoudz)  (Twitter [@Mahmoud_Zalt](https://twitter.com/Mahmoud_Zalt))\n\n**优秀的人:**\n\n- [Contributors](https://github.com/laradock/laradock/graphs/contributors)\n- [Supporters](https://github.com/laradock/laradock/issues?utf8=%E2%9C%93&q=)\n\n\n## 许可证\n\n[MIT License](https://github.com/laradock/laradock/blob/master/LICENSE) (MIT)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.6474609375,
          "content": "<p align=\"center\">\n    <img src=\"/.github/home-page-images/laradock-logo.jpg?raw=true\" alt=\"Laradock Logo\"/>\n</p>\n\n<p align=\"center\">\n   <a href=\"https://laradock.io/contributing\"><img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"contributions welcome\"></a>\n   <a href=\"https://github.com/laradock/laradock/network\"><img src=\"https://img.shields.io/github/forks/laradock/laradock.svg\" alt=\"GitHub forks\"></a>\n   <a href=\"https://github.com/laradock/laradock/issues\"><img src=\"https://img.shields.io/github/issues/laradock/laradock.svg\" alt=\"GitHub issues\"></a>\n   <a href=\"https://github.com/laradock/laradock/stargazers\"><a href=\"#backers\" alt=\"sponsors on Open Collective\"><img src=\"https://opencollective.com/laradock/backers/badge.svg\" /></a> <a href=\"#sponsors\" alt=\"Sponsors on Open Collective\"><img src=\"https://opencollective.com/laradock/sponsors/badge.svg\" /></a> <img src=\"https://img.shields.io/github/stars/laradock/laradock.svg\" alt=\"GitHub stars\"></a>\n   <a href=\"https://github.com/laradock/laradock/actions/workflows/main-ci.yml\"><img src=\"https://github.com/laradock/laradock/actions/workflows/main-ci.yml/badge.svg\" alt=\"GitHub CI\"></a>\n   <a href=\"https://raw.githubusercontent.com/laradock/laradock/master/LICENSE\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"GitHub license\"></a>\n</p>\n\n<p align=\"center\"><b>Full PHP development environment based on Docker.</b></p>\n\n<p align=\"center\">\n    <a href=\"https://zalt.me\"><img src=\"http://forthebadge.com/images/badges/built-by-developers.svg\" alt=\"forthebadge\" width=\"180\"></a>\n</p>\n\n<br>\n<br>\n\n<h4 align=\"center\" style=\"color:#7d58c2\">Use Docker First - Learn About It Later!</h4>\n\n<p align=\"center\">\n\t<a href=\"https://laradock.io\">\n\t   <img src=\"https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/documentation-button.png\" width=\"300px\" alt=\"Laradock Documentation\"/>\n\t</a>\n</p>\n\n\n---\n\n\n## Awesome People\n\nLaradock is an MIT-licensed open source project with its ongoing development made possible entirely by the support of you and all these awesome people. 💜\n\n\n\n### Project Maintainers\n\n<table>\n  <tbody>\n    <tr>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/mahmoudz.png?s=150\">\n            <br>\n            <strong>Mahmoud Zalt</strong>\n            <br>\n            <a href=\"https://github.com/Mahmoudz\">@mahmoudz</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/appleboy.png?s=150\">\n            <br>\n            <strong>Bo-Yi Wu</strong>\n            <br>\n            <a href=\"https://github.com/appleboy\">@appleboy</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/philtrep.png?s=150\">\n            <br>\n            <strong>Philippe Trépanier</strong>\n            <br>\n            <a href=\"https://github.com/philtrep\">@philtrep</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/mikeerickson.png?s=150\">\n            <br>\n            <strong>Mike Erickson</strong>\n            <br>\n            <a href=\"https://github.com/mikeerickson\">@mikeerickson</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/zeroc0d3.png?s=150\">\n            <br>\n            <strong>Dwi Fahni Denni</strong>\n            <br>\n            <a href=\"https://github.com/zeroc0d3\">@zeroc0d3</a>\n        </td>\n     </tr>\n     <tr>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/thorerik.png?s=150\">\n            <br>\n            <strong>Thor Erik</strong>\n            <br>\n            <a href=\"https://github.com/thorerik\">@thorerik</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/winfried-van-loon.png?s=150\">\n            <br>\n            <strong>Winfried van Loon</strong>\n            <br>\n            <a href=\"https://github.com/winfried-van-loon\">@winfried-van-loon</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/sixlive.png?s=150\">\n            <br>\n            <strong>TJ Miller</strong>\n            <br>\n            <a href=\"https://github.com/sixlive\">@sixlive</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/bestlong.png?s=150\">\n            <br>\n            <strong>Yu-Lung Shao (Allen)</strong>\n            <br>\n            <a href=\"https://github.com/bestlong\">@bestlong</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/urukalo.png?s=150\">\n            <br>\n            <strong>Milan Urukalo</strong>\n            <br>\n            <a href=\"https://github.com/urukalo\">@urukalo</a>\n        </td>\n     </tr>\n     <tr>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/vwchu.png?s=150\">\n            <br>\n            <strong>Vince Chu</strong>\n            <br>\n            <a href=\"https://github.com/vwchu\">@vwchu</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/zuohuadong.png?s=150\">\n            <br>\n            <strong>Huadong Zuo</strong>\n            <br>\n            <a href=\"https://github.com/zuohuadong\">@zuohuadong</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/lanphan.png?s=150\">\n            <br>\n            <strong>Lan Phan</strong>\n            <br>\n            <a href=\"https://github.com/lanphan\">@lanphan</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://github.com/ahkui.png?s=150\">\n            <br>\n            <strong>Ahkui</strong>\n            <br>\n            <a href=\"https://github.com/ahkui\">@ahkui</a>\n        </td>\n        <td align=\"center\" valign=\"top\">\n            <img width=\"125\" height=\"125\" src=\"https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/join-us.png\">\n            <br>\n            <strong>< Join Us ></strong>\n            <br>\n            <a href=\"https://github.com/laradock\">@laradock</a>\n        </td>\n     </tr>\n  </tbody>\n</table>\n\n\n### Code Contributors\n\n[![Laradock Contributors](https://opencollective.com/laradock/contributors.svg?width=890&button=false&isActive=true)](https://github.com/laradock/laradock/graphs/contributors)\n\n### Financial Contributors (Backers)\n\n[![Open Collective backers](https://opencollective.com/laradock/tiers/awesome-backers.svg?width=800&avatarHeight=65&button=false&isActive=true)](https://opencollective.com/laradock#contributors)\n\n\n\n\n## Sponsors\n\nSponsoring is an act of giving in a different fashion. 🌱\n\n### Diamond Sponsors\n\n<p align=\"left\">\n  <a href=\"https://smart.sista.ai/?utm_source=docs_laradock&utm_medium=sponsor&utm_campaign=github_readme_page\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/sista-ai-icon.png\" height=\"165px\" alt=\"Sista AI - Plug-and-Play AI Assistant.\" style=\"margin-right: 4em;\"></a><a href=\"http://apiato.io/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/laradock/laradock/master/.github/home-page-images/custom-sponsors/apiato.png\" height=\"165px\" alt=\"Apiato - A powerful PHP framework for building scalable, enterprise-grade APIs!\"></a>\n</p>\n\n\n### Gold Sponsors\n\n<div style=\"display: flex; flex-wrap: wrap; gap: 25px; justify-content: left; align-items: left;\">\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/0/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/0/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/1/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/1/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/2/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/2/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/3/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/3/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/4/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/4/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/5/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/5/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/6/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/6/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/7/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/7/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/8/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/8/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/9/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/9/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/10/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/10/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/11/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/11/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/12/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/12/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/13/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/13/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/14/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/14/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/15/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/15/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/16/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/16/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/17/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/17/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/18/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/18/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/19/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/19/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n</div>\n\n### Silver Sponsors\n\n![Silver Sponsors](https://opencollective.com/laradock/tiers/silver-sponsors.svg?avatarHeight=90&width=800&format=svg&button=false&background=%231B1B1D)\n\n### Bronze Sponsors\n\n![Bronze Sponsors](https://opencollective.com/laradock/tiers/bronze-sponsors.svg?avatarHeight=65&width=800&format=svg&button=false&background=%231B1B1D)\n\n\n## Translations\n\n- [中文文档 (Chinese)](./README-zh.md)\n\n## License\n\n[MIT](https://github.com/laradock/laradock/blob/master/LICENSE) © [Mahmoud Zalt](https://zalt.me/)\n"
        },
        {
          "name": "adminer",
          "type": "tree",
          "content": null
        },
        {
          "name": "aerospike",
          "type": "tree",
          "content": null
        },
        {
          "name": "apache2",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-eb-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "beanstalkd-console",
          "type": "tree",
          "content": null
        },
        {
          "name": "beanstalkd",
          "type": "tree",
          "content": null
        },
        {
          "name": "caddy",
          "type": "tree",
          "content": null
        },
        {
          "name": "cassandra",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "clickhouse",
          "type": "tree",
          "content": null
        },
        {
          "name": "couchdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "dejavu",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.neo4j.yml",
          "type": "blob",
          "size": 0.248046875,
          "content": "    neo4j:\n        ports:\n            - '7401:7474'\n            - '7602:7687'\n        environment:\n            - NEO4J_AUTH=none\n        volumes:\n            - '/root/neo4j/data:/data'\n            - '/root/neo4j/logs:/logs'\n        image: 'neo4j:latest'\n"
        },
        {
          "name": "docker-compose.sync.yml",
          "type": "blob",
          "size": 0.091796875,
          "content": "services:\n\nvolumes:\n  applications-sync:\n    external:\n      name: \"applications-docker-sync\"\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 76.7275390625,
          "content": "networks:\n  frontend:\n    driver: ${NETWORKS_DRIVER}\n  backend:\n    driver: ${NETWORKS_DRIVER}\nvolumes:\n  mysql:\n    driver: ${VOLUMES_DRIVER}\n  percona:\n    driver: ${VOLUMES_DRIVER}\n  mssql:\n    driver: ${VOLUMES_DRIVER}\n  postgres:\n    driver: ${VOLUMES_DRIVER}\n  memcached:\n    driver: ${VOLUMES_DRIVER}\n  redis:\n    driver: ${VOLUMES_DRIVER}\n  neo4j:\n    driver: ${VOLUMES_DRIVER}\n  mariadb:\n    driver: ${VOLUMES_DRIVER}\n  mongo:\n    driver: ${VOLUMES_DRIVER}\n  minio:\n    driver: ${VOLUMES_DRIVER}\n  rethinkdb:\n    driver: ${VOLUMES_DRIVER}\n  phpmyadmin:\n    driver: ${VOLUMES_DRIVER}\n  adminer:\n    driver: ${VOLUMES_DRIVER}\n  aerospike:\n    driver: ${VOLUMES_DRIVER}\n  caddy:\n    driver: ${VOLUMES_DRIVER}\n  meilisearch:\n    driver: ${VOLUMES_DRIVER}\n  elasticsearch:\n    driver: ${VOLUMES_DRIVER}\n  mosquitto:\n    driver: ${VOLUMES_DRIVER}\n  confluence:\n    driver: ${VOLUMES_DRIVER}\n  sonarqube:\n    driver: ${VOLUMES_DRIVER}\n  cassandra:\n    driver: ${VOLUMES_DRIVER}\n  graylog:\n    driver: ${VOLUMES_DRIVER}\n  docker-in-docker:\n    driver: ${VOLUMES_DRIVER}\n  react:\n    driver: ${VOLUMES_DRIVER}\n\nservices:\n\n### Workspace Utilities ##################################\n    workspace:\n      restart: always\n      build:\n        context: ./workspace\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n          - SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}\n          - SHELL_OH_MY_ZSH_AUTOSUGESTIONS=${SHELL_OH_MY_ZSH_AUTOSUGESTIONS}\n          - SHELL_OH_MY_ZSH_ALIASES=${SHELL_OH_MY_ZSH_ALIASES}\n          - BASE_IMAGE_TAG_PREFIX=${WORKSPACE_BASE_IMAGE_TAG_PREFIX}\n          - LARADOCK_PHP_VERSION=${PHP_VERSION}\n          - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}\n          - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}\n          - INSTALL_BZ2=${WORKSPACE_INSTALL_BZ2}\n          - INSTALL_GMP=${WORKSPACE_INSTALL_GMP}\n          - INSTALL_GNUPG=${WORKSPACE_INSTALL_GNUPG}\n          - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}\n          - XDEBUG_PORT=${WORKSPACE_XDEBUG_PORT}\n          - INSTALL_PCOV=${WORKSPACE_INSTALL_PCOV}\n          - INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}\n          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}\n          - INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}\n          - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}\n          - INSTALL_XSL=${WORKSPACE_INSTALL_XSL}\n          - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}\n          - INSTALL_SMB=${WORKSPACE_INSTALL_SMB}\n          - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}\n          - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}\n          - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}\n          - INSTALL_CASSANDRA=${WORKSPACE_INSTALL_CASSANDRA}\n          - INSTALL_ZMQ=${WORKSPACE_INSTALL_ZMQ}\n          - INSTALL_GEARMAN=${WORKSPACE_INSTALL_GEARMAN}\n          - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}\n          - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}\n          - NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}\n          - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}\n          - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}\n          - NPM_FETCH_RETRIES=${WORKSPACE_NPM_FETCH_RETRIES}\n          - NPM_FETCH_RETRY_FACTOR=${WORKSPACE_NPM_FETCH_RETRY_FACTOR}\n          - NPM_FETCH_RETRY_MINTIMEOUT=${WORKSPACE_NPM_FETCH_RETRY_MINTIMEOUT}\n          - NPM_FETCH_RETRY_MAXTIMEOUT=${WORKSPACE_NPM_FETCH_RETRY_MAXTIMEOUT}\n          - INSTALL_PNPM=${WORKSPACE_INSTALL_PNPM}\n          - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}\n          - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}\n          - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}\n          - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}\n          - INSTALL_NPM_ANGULAR_CLI=${WORKSPACE_INSTALL_NPM_ANGULAR_CLI}\n          - INSTALL_NPM_CHECK_UPDATES_CLI=${WORKSPACE_INSTALL_NPM_CHECK_UPDATES_CLI}\n          - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}\n          - INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}\n          - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}\n          - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}\n          - INSTALL_OCI8=${WORKSPACE_INSTALL_OCI8}\n          - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}\n          - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}\n          - COMPOSER_VERSION=${WORKSPACE_COMPOSER_VERSION}\n          - COMPOSER_AUTH_JSON=${WORKSPACE_COMPOSER_AUTH_JSON}\n          - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}\n          - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}\n          - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}\n          - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}\n          - INSTALL_XLSWRITER=${WORKSPACE_INSTALL_XLSWRITER}\n          - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}\n          - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}\n          - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}\n          - INSTALL_MC=${WORKSPACE_INSTALL_MC}\n          - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}\n          - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}\n          - INSTALL_PYTHON3=${WORKSPACE_INSTALL_PYTHON3}\n          - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}\n          - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}\n          - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}\n          - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}\n          - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}\n          - PG_CLIENT_VERSION=${POSTGRES_CLIENT_VERSION}\n          - INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}\n          - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}\n          - INSTALL_TAINT=${WORKSPACE_INSTALL_TAINT}\n          - INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}\n          - INSTALL_GRAPHVIZ=${WORKSPACE_INSTALL_GRAPHVIZ}\n          - INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}\n          - INSTALL_APCU=${WORKSPACE_INSTALL_APCU}\n          - INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}\n          - INSTALL_PING=${WORKSPACE_INSTALL_PING}\n          - INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}\n          - INSTALL_INOTIFY=${WORKSPACE_INSTALL_INOTIFY}\n          - INSTALL_FSWATCH=${WORKSPACE_INSTALL_FSWATCH}\n          - INSTALL_AST=${WORKSPACE_INSTALL_AST}\n          - INSTALL_YAML=${WORKSPACE_INSTALL_YAML}\n          - INSTALL_RDKAFKA=${WORKSPACE_INSTALL_RDKAFKA}\n          - INSTALL_MAILPARSE=${WORKSPACE_INSTALL_MAILPARSE}\n          - INSTALL_GIT_PROMPT=${WORKSPACE_INSTALL_GIT_PROMPT}\n          - INSTALL_XMLRPC=${WORKSPACE_INSTALL_XMLRPC}\n          - PUID=${WORKSPACE_PUID}\n          - PGID=${WORKSPACE_PGID}\n          - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}\n          - NODE_VERSION=${WORKSPACE_NODE_VERSION}\n          - YARN_VERSION=${WORKSPACE_YARN_VERSION}\n          - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}\n          - AST_VERSION=${WORKSPACE_AST_VERSION}\n          - IMAGEMAGICK_VERSION=${WORKSPACE_IMAGEMAGICK_VERSION}\n          - TZ=${WORKSPACE_TIMEZONE}\n          - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}\n          - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}\n          - INSTALL_POWERLINE=${WORKSPACE_INSTALL_POWERLINE}\n          - INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}\n          - INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}\n          - INSTALL_AUDIOWAVEFORM=${WORKSPACE_INSTALL_AUDIOWAVEFORM}\n          - INSTALL_WKHTMLTOPDF=${WORKSPACE_INSTALL_WKHTMLTOPDF}\n          - WKHTMLTOPDF_VERSION=${WORKSPACE_WKHTMLTOPDF_VERSION}\n          - INSTALL_GNU_PARALLEL=${WORKSPACE_INSTALL_GNU_PARALLEL}\n          - INSTALL_LNAV=${WORKSPACE_INSTALL_LNAV}\n          - INSTALL_PROTOC=${WORKSPACE_INSTALL_PROTOC}\n          - INSTALL_PHPDECIMAL=${WORKSPACE_INSTALL_PHPDECIMAL}\n          - INSTALL_ZOOKEEPER=${WORKSPACE_INSTALL_ZOOKEEPER}\n          - INSTALL_SSDB=${WORKSPACE_INSTALL_SSDB}\n          - INSTALL_TRADER=${WORKSPACE_INSTALL_TRADER}\n          - PROTOC_VERSION=${WORKSPACE_PROTOC_VERSION}\n          - INSTALL_DOCKER_CLIENT=${WORKSPACE_INSTALL_DOCKER_CLIENT}\n          - INSTALL_MEMCACHED=${WORKSPACE_INSTALL_MEMCACHED}\n          - INSTALL_EVENT=${WORKSPACE_INSTALL_EVENT}\n          - INSTALL_DNSUTILS=${WORKSPACE_INSTALL_DNSUTILS}\n          - INSTALL_POPPLER_UTILS=${WORKSPACE_INSTALL_POPPLER_UTILS}\n          - INSTALL_JDK=${WORKSPACE_INSTALL_JDK}\n          - INSTALL_GITHUB_CLI=${WORKSPACE_INSTALL_GITHUB_CLI}\n          - ORACLE_INSTANT_CLIENT_MIRROR=${ORACLE_INSTANT_CLIENT_MIRROR}\n          - ORACLE_INSTANT_CLIENT_ARCH=${ORACLE_INSTANT_CLIENT_ARCH}\n          - ORACLE_INSTANT_CLIENT_MAJOR=${ORACLE_INSTANT_CLIENT_MAJOR}\n          - ORACLE_INSTANT_CLIENT_MINOR=${ORACLE_INSTANT_CLIENT_MINOR}\n          - http_proxy\n          - https_proxy\n          - no_proxy\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - docker-in-docker:/certs/client\n        - ./php-worker/supervisord.d:/etc/supervisord.d\n      extra_hosts:\n        - \"dockerhost:${DOCKER_HOST_IP}\"\n      ports:\n        - \"${WORKSPACE_SSH_PORT}:22\"\n        - \"${WORKSPACE_BROWSERSYNC_HOST_PORT}:3000\"\n        - \"${WORKSPACE_BROWSERSYNC_UI_HOST_PORT}:3001\"\n        - \"${WORKSPACE_VUE_CLI_SERVE_HOST_PORT}:8080\"\n        - \"${WORKSPACE_VUE_CLI_UI_HOST_PORT}:8000\"\n        - \"${WORKSPACE_ANGULAR_CLI_SERVE_HOST_PORT}:4200\"\n        - \"${WORKSPACE_VITE_PORT}:5173\"\n      tty: true\n      environment:\n        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}\n        - DOCKER_HOST=tcp://docker-in-docker:2376\n        - DOCKER_TLS_VERIFY=1\n        - DOCKER_TLS_CERTDIR=/certs\n        - DOCKER_CERT_PATH=/certs/client\n        - CHOKIDAR_USEPOLLING=true\n      networks:\n        - frontend\n        - backend\n      links:\n        - docker-in-docker\n\n### PHP-FPM ##############################################\n    php-fpm:\n      restart: always\n      build:\n        context: ./php-fpm\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n          - BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}\n          - LARADOCK_PHP_VERSION=${PHP_VERSION}\n          - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}\n          - INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}\n          - INSTALL_ENCHANT=${PHP_FPM_INSTALL_ENCHANT}\n          - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}\n          - INSTALL_GNUPG=${PHP_FPM_INSTALL_GNUPG}\n          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}\n          - XDEBUG_PORT=${PHP_FPM_XDEBUG_PORT}\n          - INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}\n          - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}\n          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}\n          - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}\n          - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}\n          - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}\n          - INSTALL_SMB=${PHP_FPM_INSTALL_SMB}\n          - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}\n          - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}\n          - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}\n          - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}\n          - INSTALL_ZMQ=${PHP_FPM_INSTALL_ZMQ}\n          - INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}\n          - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}\n          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}\n          - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}\n          - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}\n          - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}\n          - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}\n          - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}\n          - INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}\n          - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}\n          - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}\n          - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}\n          - PG_CLIENT_VERSION=${POSTGRES_CLIENT_VERSION}\n          - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}\n          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}\n          - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}\n          - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}\n          - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}\n          - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}\n          - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}\n          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}\n          - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}\n          - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}\n          - INSTALL_XLSWRITER=${PHP_FPM_INSTALL_XLSWRITER}\n          - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}\n          - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}\n          - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}\n          - INSTALL_CACHETOOL=${PHP_FPM_INSTALL_CACHETOOL}\n          - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}\n          - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}\n          - INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}\n          - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}\n          - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}\n          - INSTALL_PING=${PHP_FPM_INSTALL_PING}\n          - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}\n          - INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}\n          - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}\n          - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}\n          - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}\n          - INSTALL_AUDIOWAVEFORM=${PHP_FPM_AUDIOWAVEFORM}\n          - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}\n          - WKHTMLTOPDF_VERSION=${PHP_FPM_WKHTMLTOPDF_VERSION}\n          - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}\n          - INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC}\n          - INSTALL_PHPDECIMAL=${PHP_FPM_INSTALL_PHPDECIMAL}\n          - INSTALL_ZOOKEEPER=${PHP_FPM_INSTALL_ZOOKEEPER}\n          - INSTALL_SSDB=${PHP_FPM_INSTALL_SSDB}\n          - INSTALL_TRADER=${PHP_FPM_INSTALL_TRADER}\n          - INSTALL_EVENT=${PHP_FPM_INSTALL_EVENT}\n          - LEGACY_OPENSSL=${PHP_LEGACY_OPENSSL}\n          - DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=${PHP_DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL}\n          - DOWNGRADE_OPENSSL_TLS_VERSION=${PHP_DOWNGRADE_OPENSSL_TLS_VERSION}\n          - PUID=${PHP_FPM_PUID}\n          - PGID=${PHP_FPM_PGID}\n          - IMAGEMAGICK_VERSION=${PHP_FPM_IMAGEMAGICK_VERSION}\n          - LOCALE=${PHP_FPM_DEFAULT_LOCALE}\n          - NEW_RELIC=${PHP_FPM_NEW_RELIC}\n          - NEW_RELIC_KEY=${PHP_FPM_NEW_RELIC_KEY}\n          - NEW_RELIC_APP_NAME=${PHP_FPM_NEW_RELIC_APP_NAME}\n          - INSTALL_DOCKER_CLIENT=${PHP_FPM_INSTALL_DOCKER_CLIENT}\n          - INSTALL_DNSUTILS=${PHP_FPM_INSTALL_DNSUTILS}\n          - INSTALL_POPPLER_UTILS=${PHP_FPM_INSTALL_POPPLER_UTILS}\n          - ORACLE_INSTANT_CLIENT_MIRROR=${ORACLE_INSTANT_CLIENT_MIRROR}\n          - ORACLE_INSTANT_CLIENT_ARCH=${ORACLE_INSTANT_CLIENT_ARCH}\n          - ORACLE_INSTANT_CLIENT_MAJOR=${ORACLE_INSTANT_CLIENT_MAJOR}\n          - ORACLE_INSTANT_CLIENT_MINOR=${ORACLE_INSTANT_CLIENT_MINOR}\n          - http_proxy\n          - https_proxy\n          - no_proxy\n      volumes:\n        - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - docker-in-docker:/certs/client\n      expose:\n        - \"9000\"\n      extra_hosts:\n        - \"dockerhost:${DOCKER_HOST_IP}\"\n      environment:\n        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}\n        - DOCKER_HOST=tcp://docker-in-docker:2376\n        - DOCKER_TLS_VERIFY=1\n        - DOCKER_TLS_CERTDIR=/certs\n        - DOCKER_CERT_PATH=/certs/client\n        - FAKETIME=${PHP_FPM_FAKETIME}\n        - TZ=${WORKSPACE_TIMEZONE}\n\n      depends_on:\n        - workspace\n      networks:\n        - backend\n      links:\n        - docker-in-docker\n\n### PHP Worker ############################################\n    php-worker:\n      restart: always\n      build:\n        context: ./php-worker\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n          - LARADOCK_PHP_VERSION=${PHP_VERSION}\n          - PHALCON_VERSION=${PHALCON_VERSION}\n          - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}\n          - INSTALL_BZ2=${PHP_WORKER_INSTALL_BZ2}\n          - INSTALL_GD=${PHP_WORKER_INSTALL_GD}\n          - INSTALL_IMAGEMAGICK=${PHP_WORKER_INSTALL_IMAGEMAGICK}\n          - INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}\n          - INSTALL_GNUPG=${PHP_WORKER_INSTALL_GNUPG}\n          - INSTALL_LDAP=${PHP_WORKER_INSTALL_LDAP}\n          - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}\n          - INSTALL_MONGO=${PHP_WORKER_INSTALL_MONGO}\n          - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}\n          - INSTALL_MEMCACHED=${PHP_WORKER_INSTALL_MEMCACHED}\n          - INSTALL_OCI8=${PHP_WORKER_INSTALL_OCI8}\n          - INSTALL_MSSQL=${PHP_WORKER_INSTALL_MSSQL}\n          - INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}\n          - INSTALL_APCU=${PHP_WORKER_INSTALL_APCU}\n          - INSTALL_XLSWRITER=${PHP_WORKER_INSTALL_XLSWRITER}\n          - INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}\n          - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}\n          - INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}\n          - INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}\n          - INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}\n          - INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}\n          - INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}\n          - INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}\n          - INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}\n          - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}\n          - INSTALL_AUDIOWAVEFORM=${PHP_WORKER_INSTALL_AUDIOWAVEFORM}\n          - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}\n          - INSTALL_IMAP=${PHP_WORKER_INSTALL_IMAP}\n          - INSTALL_XMLRPC=${PHP_WORKER_INSTALL_XMLRPC}\n          - INSTALL_SSDB=${PHP_WORKER_INSTALL_SSDB}\n          - INSTALL_EVENT=${PHP_WORKER_INSTALL_EVENT}\n          - INSTALL_INTL=${PHP_WORKER_INSTALL_INTL}\n          - INSTALL_POPPLER_UTILS=${PHP_WORKER_INSTALL_POPPLER_UTILS}\n          - PUID=${PHP_WORKER_PUID}\n          - PGID=${PHP_WORKER_PGID}\n          - IMAGEMAGICK_VERSION=${PHP_WORKER_IMAGEMAGICK_VERSION}\n          - ORACLE_INSTANT_CLIENT_MIRROR=${ORACLE_INSTANT_CLIENT_MIRROR}\n          - ORACLE_INSTANT_CLIENT_ARCH=${ORACLE_INSTANT_CLIENT_ARCH}\n          - ORACLE_INSTANT_CLIENT_MAJOR=${ORACLE_INSTANT_CLIENT_MAJOR}\n          - ORACLE_INSTANT_CLIENT_MINOR=${ORACLE_INSTANT_CLIENT_MINOR}\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - ./php-worker/supervisord.d:/etc/supervisord.d\n      depends_on:\n        - workspace\n      environment:\n          - TZ=${WORKSPACE_TIMEZONE}\n      extra_hosts:\n        - \"dockerhost:${DOCKER_HOST_IP}\"\n      networks:\n        - backend\n### Laravel Horizon ############################################\n    laravel-horizon:\n      restart: always\n      build:\n        context: ./laravel-horizon\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n          - LARADOCK_PHP_VERSION=${PHP_VERSION}\n          - INSTALL_BZ2=${LARAVEL_HORIZON_INSTALL_BZ2}\n          - INSTALL_GD=${LARAVEL_HORIZON_INSTALL_GD}\n          - INSTALL_GMP=${LARAVEL_HORIZON_INSTALL_GMP}\n          - INSTALL_GNUPG=${LARAVEL_HORIZON_INSTALL_GNUPG}\n          - INSTALL_LDAP=${LARAVEL_HORIZON_INSTALL_LDAP}\n          - INSTALL_IMAGEMAGICK=${LARAVEL_HORIZON_INSTALL_IMAGEMAGICK}\n          - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}\n          - INSTALL_ZIP_ARCHIVE=${LARAVEL_HORIZON_INSTALL_ZIP_ARCHIVE}\n          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}\n          - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}\n          - INSTALL_SOCKETS=${LARAVEL_HORIZON_INSTALL_SOCKETS}\n          - INSTALL_YAML=${LARAVEL_HORIZON_INSTALL_YAML}\n          - INSTALL_CASSANDRA=${LARAVEL_HORIZON_INSTALL_CASSANDRA}\n          - INSTALL_PHPREDIS=${LARAVEL_HORIZON_INSTALL_PHPREDIS}\n          - INSTALL_MONGO=${LARAVEL_HORIZON_INSTALL_MONGO}\n          - INSTALL_FFMPEG=${LARAVEL_HORIZON_INSTALL_FFMPEG}\n          - INSTALL_AUDIOWAVEFORM=${LARAVEL_HORIZON_INSTALL_AUDIOWAVEFORM}\n          - INSTALL_POPPLER_UTILS=${LARAVEL_HORIZON_INSTALL_POPPLER_UTILS}\n          - PUID=${LARAVEL_HORIZON_PUID}\n          - PGID=${LARAVEL_HORIZON_PGID}\n          - IMAGEMAGICK_VERSION=${LARAVEL_HORIZON_IMAGEMAGICK_VERSION}\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}\n        - ./laravel-horizon/supervisord.d:/etc/supervisord.d\n      depends_on:\n        - workspace\n      extra_hosts:\n        - \"dockerhost:${DOCKER_HOST_IP}\"\n      networks:\n        - backend\n\n  ### Soketi Server ##############################################\n    soketi:\n      build:\n        context: ./soketi\n        args:\n          - NODE_VERSION=${SOKETI_NODE_VERSION}\n          - BASE_IMAGE_TAG_PREFIX=${SOKETI_BASE_IMAGE_TAG_PREFIX}\n      volumes:\n        - ./soketi/config.json:/app/bin/config.json:ro\n      ports:\n        - \"${SOKETI_PORT}:6001\"\n        - \"${SOKETI_METRICS_SERVER_PORT}:9601\"\n      networks:\n        - frontend\n        - backend\n\n### NGINX Server #########################################\n    nginx:\n      restart: always\n      build:\n        context: ./nginx\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}\n          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}\n          - http_proxy\n          - https_proxy\n          - no_proxy\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx\n        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available\n        - ${NGINX_SSL_PATH}:/etc/nginx/ssl\n      ports:\n        - \"${NGINX_HOST_HTTP_PORT}:80\"\n        - \"${NGINX_HOST_HTTPS_PORT}:443\"\n        - \"${VARNISH_BACKEND_PORT}:81\"\n      depends_on:\n        - php-fpm\n      networks:\n        - frontend\n        - backend\n      extra_hosts:\n        - \"host.docker.internal:host-gateway\"  \n\n### OpenResty Server #########################################\n    openresty:\n      restart: always\n      build:\n        context: ./openresty\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n          - PHP_UPSTREAM_CONTAINER=${OPENRESTY_PHP_UPSTREAM_CONTAINER}\n          - PHP_UPSTREAM_PORT=${OPENRESTY_PHP_UPSTREAM_PORT}\n          - http_proxy\n          - https_proxy\n          - no_proxy\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - ${OPENRESTY_HOST_LOG_PATH}:/var/log/nginx\n        - ${OPENRESTY_SITES_PATH}:/etc/nginx/sites-available\n        - ${OPENRESTY_SSL_PATH}:/etc/nginx/ssl\n      ports:\n        - \"${OPENRESTY_HOST_HTTP_PORT}:80\"\n        - \"${OPENRESTY_HOST_HTTPS_PORT}:443\"\n        - \"${VARNISH_BACKEND_PORT}:81\"\n      depends_on:\n        - php-fpm\n      networks:\n        - frontend\n        - backend\n\n### Blackfire ########################################\n    blackfire:\n      image: blackfire/blackfire\n      environment:\n        - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}\n        - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}\n      depends_on:\n        - php-fpm\n      networks:\n        - backend\n\n### Apache Server ########################################\n    apache2:\n      restart: always\n      build:\n        context: ./apache2\n        args:\n          - PHP_UPSTREAM_CONTAINER=${APACHE_PHP_UPSTREAM_CONTAINER}\n          - PHP_UPSTREAM_PORT=${APACHE_PHP_UPSTREAM_PORT}\n          - PHP_UPSTREAM_TIMEOUT=${APACHE_PHP_UPSTREAM_TIMEOUT}\n          - DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}\n          - APACHE_INSTALL_HTTP2=${APACHE_INSTALL_HTTP2}\n          - APACHE_FOR_MAC_M1=${APACHE_FOR_MAC_M1}\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - ${APACHE_HOST_LOG_PATH}:/var/log/apache2\n        - ${APACHE_SITES_PATH}:/etc/apache2/sites-available\n        - ${APACHE_SSL_PATH}:/etc/apache2/ssl\n      ports:\n        - \"${APACHE_HOST_HTTP_PORT}:80\"\n        - \"${APACHE_HOST_HTTPS_PORT}:443\"\n      depends_on:\n        - php-fpm\n      networks:\n        - frontend\n        - backend\n\n### HHVM #################################################\n    hhvm:\n      restart: always\n      build: ./hhvm\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n      expose:\n        - \"9000\"\n      depends_on:\n        - workspace\n      networks:\n        - frontend\n        - backend\n\n### Minio ################################################\n    minio:\n      restart: always\n      build: ./minio\n      volumes:\n        - ${DATA_PATH_HOST}/minio/data:/export\n        - ${DATA_PATH_HOST}/minio/config:/root/.minio\n      ports:\n        - \"${MINIO_PORT}:9000\"\n        - \"${MINIO_CONSOLE_PORT}:9001\"\n      environment:\n        - MINIO_ROOT_USER=${MINIO_ROOT_USER}\n        - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}\n      networks:\n        - frontend\n        - backend\n\n### MySQL ################################################\n    mysql:\n      restart: always\n      build:\n        context: ./mysql\n        args:\n          - MYSQL_VERSION=${MYSQL_VERSION}\n      environment:\n        - MYSQL_DATABASE=${MYSQL_DATABASE}\n        - MYSQL_USER=${MYSQL_USER}\n        - MYSQL_PASSWORD=${MYSQL_PASSWORD}\n        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\n        - TZ=${WORKSPACE_TIMEZONE}\n      volumes:\n        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql\n        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d\n      ports:\n        - \"${MYSQL_PORT}:3306\"\n      networks:\n        - backend\n\n### Percona ################################################\n    percona:\n      restart: always\n      build:\n        context: ./percona\n      environment:\n        - MYSQL_DATABASE=${PERCONA_DATABASE}\n        - MYSQL_USER=${PERCONA_USER}\n        - MYSQL_PASSWORD=${PERCONA_PASSWORD}\n        - MYSQL_ROOT_PASSWORD=${PERCONA_ROOT_PASSWORD}\n      volumes:\n        - ${DATA_PATH_HOST}/percona:/var/lib/mysql\n        - ${PERCONA_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d\n      ports:\n        - \"${PERCONA_PORT}:3306\"\n      networks:\n        - backend\n\n### MSSQL ################################################\n    mssql:\n      restart: always\n      build:\n        context: ./mssql\n      environment:\n        - MSSQL_PID=Express\n        - MSSQL_DATABASE=${MSSQL_DATABASE}\n        - SA_PASSWORD=${MSSQL_PASSWORD}\n        - ACCEPT_EULA=Y\n      volumes:\n        - mssql:/var/opt/mssql\n      ports:\n        - \"${MSSQL_PORT}:1433\"\n      networks:\n        - backend\n\n### MariaDB ##############################################\n    mariadb:\n      restart: always\n      build:\n        context: ./mariadb\n        args:\n          - http_proxy\n          - https_proxy\n          - no_proxy\n          - MARIADB_VERSION=${MARIADB_VERSION}\n      volumes:\n        - ${DATA_PATH_HOST}/mariadb:/var/lib/mysql\n        - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d\n      ports:\n        - \"${MARIADB_PORT}:3306\"\n      environment:\n        - TZ=${WORKSPACE_TIMEZONE}\n        - MYSQL_DATABASE=${MARIADB_DATABASE}\n        - MYSQL_USER=${MARIADB_USER}\n        - MYSQL_PASSWORD=${MARIADB_PASSWORD}\n        - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}\n      networks:\n        - backend\n\n### PostgreSQL ###########################################\n    postgres:\n      restart: always\n      build:\n        context: ./postgres\n        args:\n          - POSTGRES_VERSION=${POSTGRES_VERSION}\n      volumes:\n        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data\n        - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d\n      ports:\n        - \"${POSTGRES_PORT}:5432\"\n      environment:\n        - POSTGRES_DB=${POSTGRES_DB}\n        - POSTGRES_USER=${POSTGRES_USER}\n        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n        - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}\n        - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}\n        - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}\n        - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}\n        - KEYCLOAK_POSTGRES_INIT=${KEYCLOAK_POSTGRES_INIT}\n        - KEYCLOAK_POSTGRES_USER=${KEYCLOAK_POSTGRES_USER}\n        - KEYCLOAK_POSTGRES_PASSWORD=${KEYCLOAK_POSTGRES_PASSWORD}\n        - KEYCLOAK_POSTGRES_DB=${KEYCLOAK_POSTGRES_DB}\n        - JUPYTERHUB_POSTGRES_INIT=${JUPYTERHUB_POSTGRES_INIT}\n        - JUPYTERHUB_POSTGRES_USER=${JUPYTERHUB_POSTGRES_USER}\n        - JUPYTERHUB_POSTGRES_PASSWORD=${JUPYTERHUB_POSTGRES_PASSWORD}\n        - JUPYTERHUB_POSTGRES_DB=${JUPYTERHUB_POSTGRES_DB}\n        - SONARQUBE_POSTGRES_INIT=${SONARQUBE_POSTGRES_INIT}\n        - SONARQUBE_POSTGRES_DB=${SONARQUBE_POSTGRES_DB}\n        - SONARQUBE_POSTGRES_USER=${SONARQUBE_POSTGRES_USER}\n        - SONARQUBE_POSTGRES_PASSWORD=${SONARQUBE_POSTGRES_PASSWORD}\n        - POSTGRES_CONFLUENCE_INIT=${CONFLUENCE_POSTGRES_INIT}\n        - POSTGRES_CONFLUENCE_DB=${CONFLUENCE_POSTGRES_DB}\n        - POSTGRES_CONFLUENCE_USER=${CONFLUENCE_POSTGRES_USER}\n        - POSTGRES_CONFLUENCE_PASSWORD=${CONFLUENCE_POSTGRES_PASSWORD}\n      networks:\n        - backend\n### pgbackups PostgreSQL ###########################################\n    pgbackups:\n      image: prodrigestivill/postgres-backup-local\n      restart: always\n      volumes:\n        - ../backup:/backups\n      links:\n        - postgres\n      environment:\n        - POSTGRES_HOST={POSTGRES_HOST}\n        - POSTGRES_DB=${POSTGRES_DB}\n        - POSTGRES_USER=${POSTGRES_USER}\n        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n      networks:\n        - backend\n\n\n### PostgreSQL PostGis ###################################\n    postgres-postgis:\n      restart: always\n      build:\n        context: ./postgres-postgis\n        args:\n          - POSTGIS_VERSION=${POSTGIS_VERSION}\n          - INSTALL_PGSQL_HTTP_FOR_POSTGIS13=${POSTGIS_INSTALL_PGSQL_HTTP_FOR_POSTGIS13}\n      volumes:\n        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data\n      ports:\n        - \"${POSTGRES_PORT}:5432\"\n      environment:\n        - POSTGRES_DB=${POSTGRES_DB}\n        - POSTGRES_USER=${POSTGRES_USER}\n        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n      networks:\n        - backend\n\n### Neo4j ################################################\n    neo4j:\n      restart: always\n      ports:\n          - '7401:7474'\n          - '7402:7687'\n      environment:\n          - NEO4J_AUTH=none\n      volumes:\n          - ${DATA_PATH_HOST}/neo4j/data:/data\n          - ${DATA_PATH_HOST}/neo4j/logs:/logs\n      image: 'neo4j:latest'\n      networks:\n        - backend\n### Nats ################################################\n    nats:\n      build: ./nats\n      ports:\n        - \"${NATS_CLIENT_PORT}:4222\"\n        - \"${NATS_MONITORING_PORT}:6222\"\n        - \"${NATS_ROUTE_PORT}:8222\"\n      networks:\n        - backend\n\n### MongoDB ##############################################\n    mongo:\n      restart: always\n      build: ./mongo\n      ports:\n        - \"${MONGODB_PORT}:27017\"\n      environment:\n        - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}\n        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}\n      volumes:\n        - ${DATA_PATH_HOST}/mongo:/data/db\n        - ${DATA_PATH_HOST}/mongo_config:/data/configdb\n      networks:\n        - backend\n\n### RethinkDB ##############################################\n    rethinkdb:\n      restart: always\n      build: ./rethinkdb\n      ports:\n        - \"${RETHINKDB_PORT}:8080\"\n      volumes:\n        - ${DATA_PATH_HOST}/rethinkdb:/data/rethinkdb_data\n      networks:\n        - backend\n\n  ### ClickHouse #############################################\n    clickhouse:\n      build:\n        context: ./clickhouse\n        args:\n          - CLICKHOUSE_VERSION=${CLICKHOUSE_VERSION}\n          - CLICKHOUSE_GOSU_VERSION=${CLICKHOUSE_GOSU_VERSION}\n      environment:\n        - CLICKHOUSE_USER=${CLICKHOUSE_USER}\n        - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}\n      volumes:\n        - ${DATA_PATH_HOST}/clickhouse:/var/lib/clickhouse\n        - ${CLICKHOUSE_CUSTOM_CONFIG}:/etc/clickhouse-server/config.xml\n        - ${CLICKHOUSE_USERS_CUSTOM_CONFIG}:/etc/clickhouse-server/users.xml\n        - ${CLICKHOUSE_HOST_LOG_PATH}:/var/log/clickhouse\n        - ${CLICKHOUSE_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d\n      links:\n        - workspace\n      ports:\n        - \"${CLICKHOUSE_HTTP_PORT}:8123\"\n        - \"${CLICKHOUSE_CLIENT_PORT}:9000\"\n        - \"${CLICKHOUSE_NATIVE_PORT}:9009\"\n      ulimits:\n        nproc: 65535\n        nofile:\n          soft: 262144\n          hard: 262144\n      networks:\n#        - frontend\n        - backend\n\n  ### Redis ################################################\n    redis:\n      restart: always\n      build: ./redis\n      volumes:\n        - ${DATA_PATH_HOST}/redis:/data\n      command: --requirepass ${REDIS_PASSWORD}\n      ports:\n        - \"${REDIS_PORT}:6379\"\n      networks:\n        - backend\n\n### Redis Cluster ##########################################\n    redis-cluster:\n      restart: always\n      build: ./redis-cluster\n      ports:\n        - \"${REDIS_CLUSTER_PORT_RANGE}:7000-7005\"\n      networks:\n        - backend\n### SSDB ################################################\n    ssdb:\n      restart: always\n      build: ./ssdb\n      volumes:\n        - ${DATA_PATH_HOST}/ssdb:/data\n      ports:\n        - \"${SSDB_PORT}:8888\"\n      networks:\n        - backend\n\n### ZooKeeper #########################################\n    zookeeper:\n      restart: always\n      build: ./zookeeper\n      volumes:\n        - ${DATA_PATH_HOST}/zookeeper/data:/data\n        - ${DATA_PATH_HOST}/zookeeper/datalog:/datalog\n      ports:\n        - \"${ZOOKEEPER_PORT}:2181\"\n      networks:\n        - backend\n\n### Aerospike ##########################################\n    aerospike:\n      restart: always\n      build: ./aerospike\n      volumes:\n        - workspace\n        - ${DATA_PATH_HOST}/aerospike:/opt/aerospike/data\n      ports:\n        - \"${AEROSPIKE_SERVICE_PORT}:3000\"\n        - \"${AEROSPIKE_FABRIC_PORT}:3001\"\n        - \"${AEROSPIKE_HEARTBEAT_PORT}:3002\"\n        - \"${AEROSPIKE_INFO_PORT}:3003\"\n      environment:\n        - STORAGE_GB=${AEROSPIKE_STORAGE_GB}\n        - MEM_GB=${AEROSPIKE_MEM_GB}\n        - NAMESPACE=${AEROSPIKE_NAMESPACE}\n      networks:\n        - backend\n\n### Memcached ############################################\n    memcached:\n      restart: always\n      build: ./memcached\n      volumes:\n        - ${DATA_PATH_HOST}/memcached:/var/lib/memcached\n      ports:\n        - \"${MEMCACHED_HOST_PORT}:11211\"\n      depends_on:\n        - php-fpm\n      networks:\n        - backend\n\n### Beanstalkd ###########################################\n    beanstalkd:\n      restart: always\n      build: ./beanstalkd\n      ports:\n        - \"${BEANSTALKD_HOST_PORT}:11300\"\n      privileged: true\n      depends_on:\n        - php-fpm\n      networks:\n        - backend\n\n### SQS #############################################\n    sqs:\n      restart: always\n      build: ./sqs\n      ports:\n        - \"${SQS_NODE_HOST_PORT}:9324\"\n        - \"${SQS_MANAGEMENT_HTTP_HOST_PORT}:9325\"\n      privileged: true\n      hostname: laradock-sqs\n      volumes:\n        - ${DATA_PATH_HOST}/sqs:/opt/custom\n      networks:\n        - frontend\n        - backend\n\n### RabbitMQ #############################################\n    rabbitmq:\n      restart: always\n      build: ./rabbitmq\n      ports:\n        - \"${RABBITMQ_NODE_HOST_PORT}:5672\"\n        - \"${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672\"\n        - \"${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671\"\n        - \"${RABBITMQ_WEB_STOMP_HOST_PORT}:15674\"\n      privileged: true\n      hostname: laradock-rabbitmq\n      volumes:\n        - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq\n        - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf\n        - ./rabbitmq/management_agent.disable_metrics_collector.conf:/etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf\n      depends_on:\n        - php-fpm\n      networks:\n        - backend\n\n### Mercure #############################################\n    mercure:\n      restart: always\n      build: ./mercure\n      ports:\n        - \"${MERCURE_NODE_HOST_HTTP_PORT}:80\"\n        - \"${MERCURE_NODE_HOST_HTTPS_PORT}:443\"\n      privileged: true\n      environment:\n        - MERCURE_PUBLISHER_JWT_KEY=${MERCURE_PUBLISHER_JWT_KEY}\n        - MERCURE_SUBSCRIBER_JWT_KEY=${MERCURE_SUBSCRIBER_JWT_KEY}\n        - DEBUG=${MERCURE_DEBUG}\n        - SERVER_NAME=${MERCURE_SERVER_NAME}\n        - MERCURE_EXTRA_DIRECTIVES=cors_allowed_origins *\\npublish_allowed_origins http://localhost:${MERCURE_NODE_HOST_HTTP_PORT} https://localhost:${MERCURE_NODE_HOST_HTTP_PORT}\n      hostname: laradock-mercure\n      networks:\n        - frontend\n        - backend\n\n### Cassandra ############################################\n    cassandra:\n      restart: always\n      build: ./cassandra\n      ports:\n        - \"${CASSANDRA_TRANSPORT_PORT_NUMBER}:7000\"\n        - \"${CASSANDRA_JMX_PORT_NUMBER}:7199\"\n        - \"${CASSANDRA_CQL_PORT_NUMBER}:9042\"\n      privileged: true\n      environment:\n        - CASSANDRA_VERSION=${CASSANDRA_VERSION}\n        - CASSANDRA_TRANSPORT_PORT_NUMBER=${CASSANDRA_TRANSPORT_PORT_NUMBER}\n        - CASSANDRA_JMX_PORT_NUMBER=${CASSANDRA_JMX_PORT_NUMBER}\n        - CASSANDRA_CQL_PORT_NUMBER=${CASSANDRA_CQL_PORT_NUMBER}\n        - CASSANDRA_USER=${CASSANDRA_USER}\n        - CASSANDRA_PASSWORD_SEEDER=${CASSANDRA_PASSWORD_SEEDER}\n        - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}\n        - CASSANDRA_NUM_TOKENS=${CASSANDRA_NUM_TOKENS}\n        - CASSANDRA_HOST=${CASSANDRA_HOST}\n        - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER_NAME}\n        - CASSANDRA_SEEDS=${CASSANDRA_SEEDS}\n        - CASSANDRA_ENDPOINT_SNITCH=${CASSANDRA_ENDPOINT_SNITCH}\n        - CASSANDRA_ENABLE_RPC=${CASSANDRA_ENABLE_RPC}\n        - CASSANDRA_DATACENTER=${CASSANDRA_DATACENTER}\n        - CASSANDRA_RACK=${CASSANDRA_RACK}\n      hostname: laradock-cassandra\n      volumes:\n        - ${DATA_PATH_HOST}/cassandra:/var/lib/cassandra\n      depends_on:\n        - php-fpm\n      networks:\n        - backend\n\n### Gearman ############################################\n    gearman:\n      restart: always\n      build: ./gearman\n      ports:\n        - \"${GEARMAN_PORT}:4730\"\n      privileged: true\n      environment:\n        - GEARMAN_VERSION=${GEARMAN_VERSION}\n        - GEARMAN_VERBOSE=${GEARMAN_VERBOSE}\n        - GEARMAN_QUEUE_TYPE=${GEARMAN_QUEUE_TYPE}\n        - GEARMAN_THREADS=${GEARMAN_THREADS}\n        - GEARMAN_BACKLOG=${GEARMAN_BACKLOG}\n        - GEARMAN_FILE_DESCRIPTORS=${GEARMAN_FILE_DESCRIPTORS}\n        - GEARMAN_JOB_RETRIES=${GEARMAN_JOB_RETRIES}\n        - GEARMAN_ROUND_ROBIN=${GEARMAN_ROUND_ROBIN}\n        - GEARMAN_WORKER_WAKEUP=${GEARMAN_WORKER_WAKEUP}\n        - GEARMAN_KEEPALIVE=${GEARMAN_KEEPALIVE}\n        - GEARMAN_KEEPALIVE_IDLE=${GEARMAN_KEEPALIVE_IDLE}\n        - GEARMAN_KEEPALIVE_INTERVAL=${GEARMAN_KEEPALIVE_INTERVAL}\n        - GEARMAN_KEEPALIVE_COUNT=${GEARMAN_KEEPALIVE_COUNT}\n        - GEARMAN_MYSQL_HOST=${GEARMAN_MYSQL_HOST}\n        - GEARMAN_MYSQL_PORT=${GEARMAN_MYSQL_PORT}\n        - GEARMAN_MYSQL_USER=${GEARMAN_MYSQL_USER}\n        - GEARMAN_MYSQL_PASSWORD=${GEARMAN_MYSQL_PASSWORD}\n        - GEARMAN_MYSQL_PASSWORD_FILE=${GEARMAN_MYSQL_PASSWORD_FILE}\n        - GEARMAN_MYSQL_DB=${GEARMAN_MYSQL_DB}\n        - GEARMAN_MYSQL_TABLE=${GEARMAN_MYSQL_TABLE}\n      hostname: laradock-gearman\n      depends_on:\n        - php-fpm\n      networks:\n        - backend\n\n### Beanstalkd Console ###################################\n    beanstalkd-console:\n      restart: always\n      build: ./beanstalkd-console\n      ports:\n        - \"${BEANSTALKD_CONSOLE_HOST_PORT}:2080\"\n      depends_on:\n        - beanstalkd\n      networks:\n        - backend\n\n### Caddy Server #########################################\n    caddy:\n      restart: always\n      build: ./caddy\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n        - ${CADDY_CONFIG_PATH}:/etc/caddy\n        - ${CADDY_HOST_LOG_PATH}:/var/log/caddy\n        - ${DATA_PATH_HOST}:/root/.caddy\n      ports:\n        - \"${CADDY_HOST_HTTP_PORT}:80\"\n        - \"${CADDY_HOST_HTTPS_PORT}:443\"\n      depends_on:\n        - php-fpm\n      networks:\n        - frontend\n        - backend\n\n### phpMyAdmin ###########################################\n    phpmyadmin:\n      restart: always\n      build: ./phpmyadmin\n      environment:\n        - PMA_ARBITRARY=1\n        - MYSQL_USER=${PMA_USER}\n        - MYSQL_PASSWORD=${PMA_PASSWORD}\n        - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}\n        - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}\n        - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}\n        - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}\n      ports:\n        - \"${PMA_PORT}:80\"\n      depends_on:\n        - \"${PMA_DB_ENGINE}\"\n      networks:\n        - frontend\n        - backend\n\n### Adminer ###########################################\n    adminer:\n      restart: always\n      build:\n        context: ./adminer\n        args:\n          - INSTALL_MSSQL=${ADM_INSTALL_MSSQL}\n      environment:\n          - ADMINER_PLUGINS=${ADM_PLUGINS}\n          - ADMINER_DESIGN=${ADM_DESIGN}\n          - ADMINER_DEFAULT_SERVER=${ADM_DEFAULT_SERVER}\n      ports:\n        - \"${ADM_PORT}:8080\"\n      # depends_on:\n      #   - php-fpm\n      networks:\n        - frontend\n        - backend\n\n### pgAdmin ##############################################\n    pgadmin:\n      restart: always\n      image: dpage/pgadmin4:latest\n      environment:\n        - \"PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}\"\n        - \"PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}\"\n      ports:\n        - \"${PGADMIN_PORT}:80\"\n      volumes:\n        - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin\n      depends_on:\n        - postgres\n      networks:\n        - frontend\n        - backend\n\n### MeiliSearch ##########################################\n    meilisearch:\n      image: getmeili/meilisearch:latest\n      volumes:\n        - ${DATA_PATH_HOST}/meilisearch:/data.ms\n      ports:\n        - \"${MEILISEARCH_HOST_PORT}:7700\"\n      environment:\n        - MEILI_MASTER_KEY=${MEILISEARCH_KEY}\n      networks:\n        - frontend\n        - backend\n\n### ElasticSearch ########################################\n    elasticsearch:\n      restart: always\n      build:\n        context: ./elasticsearch\n        args:\n          - ELK_VERSION=${ELK_VERSION}\n      volumes:\n        - elasticsearch:/usr/share/elasticsearch/data\n      environment:\n        - cluster.name=laradock-cluster\n        - node.name=laradock-node\n        - bootstrap.memory_lock=true\n        - xpack.security.enabled=false\n        - xpack.security.transport.ssl.enabled=false\n        - indices.id_field_data.enabled=true\n        - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n        - cluster.initial_master_nodes=laradock-node\n      ulimits:\n        memlock:\n          soft: -1\n          hard: -1\n        nofile:\n          soft: 65536\n          hard: 65536\n      ports:\n        - \"${ELASTICSEARCH_HOST_HTTP_PORT}:9200\"\n        - \"${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300\"\n      depends_on:\n        - php-fpm\n      networks:\n        - frontend\n        - backend\n\n### Logstash ##############################################\n    logstash:\n      restart: always\n      build:\n        context: ./logstash\n        args:\n          - ELK_VERSION=${ELK_VERSION}\n      volumes:\n        - './logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml'\n        - './logstash/pipeline:/usr/share/logstash/pipeline'\n      ports:\n        - '5001:5001'\n      environment:\n        LS_JAVA_OPTS: '-Xmx1g -Xms1g'\n      env_file:\n        - .env\n      networks:\n        - frontend\n        - backend\n      depends_on:\n        - elasticsearch\n\n### Kibana ##############################################\n    kibana:\n      restart: always\n      build:\n        context: ./kibana\n        args:\n          - ELK_VERSION=${ELK_VERSION}\n      ports:\n        - \"${KIBANA_HTTP_PORT}:5601\"\n      depends_on:\n        - elasticsearch\n      networks:\n        - frontend\n        - backend\n\n### Dejavu ##############################################\n    dejavu:\n      restart: always\n      build:\n        context: ./dejavu\n      ports:\n        - \"${DEJAVU_HTTP_PORT}:1358\"\n      depends_on:\n        - elasticsearch\n      networks:\n        - frontend\n        - backend\n\n### Certbot #########################################\n    certbot:\n      build:\n        context: ./certbot\n      volumes:\n        - ./data/certbot/certs/:/var/certs\n        - ./certbot/letsencrypt/:/var/www/letsencrypt\n      environment:\n        - CN=\"fake.domain.com\"\n        - EMAIL=\"fake.email@gmail.com\"\n      networks:\n        - frontend\n\n### MailCatcher ################################################\n    mailcatcher:\n      restart: always\n      build: ./mailcatcher\n      ports:\n        - \"1025:1025\"\n        - \"1080:1080\"\n      networks:\n        - frontend\n        - backend\n\n### Mailhog ################################################\n    mailhog:\n      restart: always\n      build: ./mailhog\n      ports:\n        - \"1025:1025\"\n        - \"8025:8025\"\n      networks:\n        - frontend\n        - backend\n\n### MailDev ##############################################\n    maildev:\n      restart: always\n      build: ./maildev\n      ports:\n        - \"${MAILDEV_HTTP_PORT}:80\"\n        - \"${MAILDEV_SMTP_PORT}:25\"\n      networks:\n        - frontend\n        - backend\n\n### Mailpit ##############################################\n    mailpit:\n      restart: always\n      build: ./mailpit\n      ports:\n        - \"${MAILPIT_HTTP_PORT}:8025\"\n        - \"${MAILPIT_SMTP_PORT}:1025\"\n      networks:\n        - frontend\n        - backend\n\n### Selenium ###############################################\n    selenium:\n      restart: always\n      build: ./selenium\n      ports:\n        - \"${SELENIUM_PORT}:4444\"\n      volumes:\n        - /dev/shm:/dev/shm\n      networks:\n        - frontend\n\n### Varnish ##########################################\n    proxy:\n      restart: always\n      container_name: proxy\n      build: ./varnish\n      expose:\n        - ${VARNISH_PORT}\n      environment:\n        - VARNISH_CONFIG=${VARNISH_CONFIG}\n        - CACHE_SIZE=${VARNISH_PROXY1_CACHE_SIZE}\n        - VARNISHD_PARAMS=${VARNISHD_PARAMS}\n        - VARNISH_PORT=${VARNISH_PORT}\n        - BACKEND_HOST=${VARNISH_PROXY1_BACKEND_HOST}\n        - BACKEND_PORT=${VARNISH_BACKEND_PORT}\n        - VARNISH_SERVER=${VARNISH_PROXY1_SERVER}\n      ports:\n        - \"${VARNISH_PORT}:${VARNISH_PORT}\"\n      links:\n        - workspace\n      networks:\n        - frontend\n\n    proxy2:\n      container_name: proxy2\n      build: ./varnish\n      expose:\n        - ${VARNISH_PORT}\n      environment:\n        - VARNISH_CONFIG=${VARNISH_CONFIG}\n        - CACHE_SIZE=${VARNISH_PROXY2_CACHE_SIZE}\n        - VARNISHD_PARAMS=${VARNISHD_PARAMS}\n        - VARNISH_PORT=${VARNISH_PORT}\n        - BACKEND_HOST=${VARNISH_PROXY2_BACKEND_HOST}\n        - BACKEND_PORT=${VARNISH_BACKEND_PORT}\n        - VARNISH_SERVER=${VARNISH_PROXY2_SERVER}\n      ports:\n        - \"${VARNISH_PORT}:${VARNISH_PORT}\"\n      links:\n        - workspace\n      networks:\n        - frontend\n\n### HAProxy ####################################\n    haproxy:\n      restart: always\n      build: ./haproxy\n      ports:\n        - \"${HAPROXY_HOST_HTTP_PORT}:8085\"\n      volumes:\n        - /var/run/docker.sock:/var/run/docker.sock\n      links:\n        - proxy\n        - proxy2\n\n### Jenkins ###################################################\n    jenkins:\n      restart: always\n      build: ./jenkins\n      environment:\n        JAVA_OPTS: \"-Djava.awt.headless=true\"\n      ports:\n        - \"${JENKINS_HOST_SLAVE_AGENT_PORT}:50000\"\n        - \"${JENKINS_HOST_HTTP_PORT}:8080\"\n      privileged: true\n      volumes:\n        - ${JENKINS_HOME}:/var/jenkins_home\n        - /var/run/docker.sock:/var/run/docker.sock\n      networks:\n        - frontend\n        - backend\n\n### Grafana ################################################\n    grafana:\n      restart: always\n      build:\n        context: ./grafana\n      volumes:\n        - ${DATA_PATH_HOST}/grafana:/var/lib/grafana\n      ports:\n        - \"${GRAFANA_PORT}:3000\"\n      networks:\n        - backend\n\n### Graylog #######################################\n    graylog:\n      restart: always\n      build: ./graylog\n      environment:\n        - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD}\n        - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_SHA256_PASSWORD}\n        - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:${GRAYLOG_PORT}/\n      links:\n        - mongo\n        - elasticsearch\n      depends_on:\n        - mongo\n        - elasticsearch\n      ports:\n        # Graylog web interface and REST API\n        - ${GRAYLOG_PORT}:9000\n        # Syslog TCP\n        - ${GRAYLOG_SYSLOG_TCP_PORT}:514\n        # Syslog UDP\n        - ${GRAYLOG_SYSLOG_UDP_PORT}:514/udp\n        # GELF TCP\n        - ${GRAYLOG_GELF_TCP_PORT}:12201\n        # GELF UDP\n        - ${GRAYLOG_GELF_UDP_PORT}:12201/udp\n      user: graylog\n      volumes:\n        - ${DATA_PATH_HOST}/graylog:/usr/share/graylog/data\n      networks:\n        - backend\n\n### Laravel Echo Server #######################################\n    laravel-echo-server:\n      restart: always\n      build:\n        context: ./laravel-echo-server\n        args:\n          - CHANGE_SOURCE=${CHANGE_SOURCE}\n      volumes:\n        - ./laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro\n      ports:\n        - \"${LARAVEL_ECHO_SERVER_PORT}:6001\"\n      links:\n        - redis\n      networks:\n        - frontend\n        - backend\n\n### Solr ################################################\n    solr:\n      restart: always\n      build:\n        context: ./solr\n        args:\n          - SOLR_VERSION=${SOLR_VERSION}\n          - SOLR_DATAIMPORTHANDLER_MYSQL=${SOLR_DATAIMPORTHANDLER_MYSQL}\n          - SOLR_DATAIMPORTHANDLER_MSSQL=${SOLR_DATAIMPORTHANDLER_MSSQL}\n      volumes:\n        - ${DATA_PATH_HOST}/solr:/opt/solr/server/solr/mycores\n      ports:\n        - \"${SOLR_PORT}:8983\"\n      networks:\n        - backend\n\n### Thumbor #########################################\n    thumbor:\n      restart: always\n      build: ./thumbor\n      volumes:\n        - ${DATA_PATH_HOST}/thumbor/data:/data\n        - ${DATA_PATH_HOST}/thumbor/data:/logs\n      ports:\n        - \"${THUMBOR_PORT}:8000\"\n      environment:\n        - THUMBOR_LOG_FORMAT=${THUMBOR_LOG_FORMAT}\n        - THUMBOR_LOG_DATE_FORMAT=${THUMBOR_LOG_DATE_FORMAT}\n        - MAX_WIDTH=${MAX_WIDTH}\n        - MAX_HEIGHT=${MAX_HEIGHT}\n        - MIN_WIDTH=${MIN_WIDTH}\n        - MIN_HEIGHT=${MIN_HEIGHT}\n        - ALLOWED_SOURCES=${ALLOWED_SOURCES}\n        - QUALITY=${QUALITY}\n        - WEBP_QUALITY=${WEBP_QUALITY}\n        - PNG_COMPRESSION_LEVEL=${PNG_COMPRESSION_LEVEL}\n        - AUTO_WEBP=${AUTO_WEBP}\n        - MAX_AGE=${MAX_AGE}\n        - MAX_AGE_TEMP_IMAGE=${MAX_AGE_TEMP_IMAGE}\n        - RESPECT_ORIENTATION=${RESPECT_ORIENTATION}\n        - IGNORE_SMART_ERRORS=${IGNORE_SMART_ERRORS}\n        - PRESERVE_EXIF_INFO=${PRESERVE_EXIF_INFO}\n        - ALLOW_ANIMATED_GIFS=${ALLOW_ANIMATED_GIFS}\n        - USE_GIFSICLE_ENGINE=${USE_GIFSICLE_ENGINE}\n        - USE_BLACKLIST=${USE_BLACKLIST}\n        - LOADER=${LOADER}\n        - STORAGE=${STORAGE}\n        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n        - RESULT_STORAGE=${RESULT_STORAGE}\n        - ENGINE=${ENGINE}\n        - SECURITY_KEY=${SECURITY_KEY}\n        - ALLOW_UNSAFE_URL=${ALLOW_UNSAFE_URL}\n        - ALLOW_OLD_URLS=${ALLOW_OLD_URLS}\n        - FILE_LOADER_ROOT_PATH=${FILE_LOADER_ROOT_PATH}\n        - HTTP_LOADER_CONNECT_TIMEOUT=${HTTP_LOADER_CONNECT_TIMEOUT}\n        - HTTP_LOADER_REQUEST_TIMEOUT=${HTTP_LOADER_REQUEST_TIMEOUT}\n        - HTTP_LOADER_FOLLOW_REDIRECTS=${HTTP_LOADER_FOLLOW_REDIRECTS}\n        - HTTP_LOADER_MAX_REDIRECTS=${HTTP_LOADER_MAX_REDIRECTS}\n        - HTTP_LOADER_FORWARD_USER_AGENT=${HTTP_LOADER_FORWARD_USER_AGENT}\n        - HTTP_LOADER_DEFAULT_USER_AGENT=${HTTP_LOADER_DEFAULT_USER_AGENT}\n        - HTTP_LOADER_PROXY_HOST=${HTTP_LOADER_PROXY_HOST}\n        - HTTP_LOADER_PROXY_PORT=${HTTP_LOADER_PROXY_PORT}\n        - HTTP_LOADER_PROXY_USERNAME=${HTTP_LOADER_PROXY_USERNAME}\n        - HTTP_LOADER_PROXY_PASSWORD=${HTTP_LOADER_PROXY_PASSWORD}\n        - HTTP_LOADER_CA_CERTS=${HTTP_LOADER_CA_CERTS}\n        - HTTP_LOADER_VALIDATE_CERTS=${HTTP_LOADER_VALIDATE_CERTS}\n        - HTTP_LOADER_CLIENT_KEY=${HTTP_LOADER_CLIENT_KEY}\n        - HTTP_LOADER_CLIENT_CERT=${HTTP_LOADER_CLIENT_CERT}\n        - HTTP_LOADER_CURL_ASYNC_HTTP_CLIENT=${HTTP_LOADER_CURL_ASYNC_HTTP_CLIENT}\n        - STORAGE_EXPIRATION_SECONDS=${STORAGE_EXPIRATION_SECONDS}\n        - STORES_CRYPTO_KEY_FOR_EACH_IMAGE=${STORES_CRYPTO_KEY_FOR_EACH_IMAGE}\n        - FILE_STORAGE_ROOT_PATH=${FILE_STORAGE_ROOT_PATH}\n        - UPLOAD_MAX_SIZE=${UPLOAD_MAX_SIZE}\n        - UPLOAD_ENABLED=${UPLOAD_ENABLED}\n        - UPLOAD_PHOTO_STORAGE=${UPLOAD_PHOTO_STORAGE}\n        - UPLOAD_DELETE_ALLOWED=${UPLOAD_DELETE_ALLOWED}\n        - UPLOAD_PUT_ALLOWED=${UPLOAD_PUT_ALLOWED}\n        - UPLOAD_DEFAULT_FILENAME=${UPLOAD_DEFAULT_FILENAME}\n        - MONGO_STORAGE_SERVER_HOST=${MONGO_STORAGE_SERVER_HOST}\n        - MONGO_STORAGE_SERVER_PORT=${MONGO_STORAGE_SERVER_PORT}\n        - MONGO_STORAGE_SERVER_DB=${MONGO_STORAGE_SERVER_DB}\n        - MONGO_STORAGE_SERVER_COLLECTION=${MONGO_STORAGE_SERVER_COLLECTION}\n        - REDIS_STORAGE_SERVER_HOST=${REDIS_STORAGE_SERVER_HOST}\n        - REDIS_STORAGE_SERVER_PORT=${REDIS_STORAGE_SERVER_PORT}\n        - REDIS_STORAGE_SERVER_DB=${REDIS_STORAGE_SERVER_DB}\n        - REDIS_STORAGE_SERVER_PASSWORD=${REDIS_STORAGE_SERVER_PASSWORD}\n        - REDIS_RESULT_STORAGE_SERVER_HOST=${REDIS_RESULT_STORAGE_SERVER_HOST}\n        - REDIS_RESULT_STORAGE_SERVER_PORT=${REDIS_RESULT_STORAGE_SERVER_PORT}\n        - REDIS_RESULT_STORAGE_SERVER_DB=${REDIS_RESULT_STORAGE_SERVER_DB}\n        - REDIS_RESULT_STORAGE_SERVER_PASSWORD=${REDIS_RESULT_STORAGE_SERVER_PASSWORD}\n        - MEMCACHE_STORAGE_SERVERS=${MEMCACHE_STORAGE_SERVERS}\n        - MIXED_STORAGE_FILE_STORAGE=${MIXED_STORAGE_FILE_STORAGE}\n        - MIXED_STORAGE_CRYPTO_STORAGE=${MIXED_STORAGE_CRYPTO_STORAGE}\n        - MIXED_STORAGE_DETECTOR_STORAGE=${MIXED_STORAGE_DETECTOR_STORAGE}\n        - META_CALLBACK_NAME=${META_CALLBACK_NAME}\n        - DETECTORS=${DETECTORS}\n        - FACE_DETECTOR_CASCADE_FILE=${FACE_DETECTOR_CASCADE_FILE}\n        - OPTIMIZERS=${OPTIMIZERS}\n        - JPEGTRAN_PATH=${JPEGTRAN_PATH}\n        - PROGRESSIVE_JPEG=${PROGRESSIVE_JPEG}\n        - RESULT_STORAGE_EXPIRATION_SECONDS=${RESULT_STORAGE_EXPIRATION_SECONDS}\n        - RESULT_STORAGE_FILE_STORAGE_ROOT_PATH=${RESULT_STORAGE_FILE_STORAGE_ROOT_PATH}\n        - RESULT_STORAGE_STORES_UNSAFE=${RESULT_STORAGE_STORES_UNSAFE}\n        - REDIS_QUEUE_SERVER_HOST=${REDIS_QUEUE_SERVER_HOST}\n        - REDIS_QUEUE_SERVER_PORT=${REDIS_QUEUE_SERVER_PORT}\n        - REDIS_QUEUE_SERVER_DB=${REDIS_QUEUE_SERVER_DB}\n        - REDIS_QUEUE_SERVER_PASSWORD=${REDIS_QUEUE_SERVER_PASSWORD}\n        - SQS_QUEUE_KEY_ID=${SQS_QUEUE_KEY_ID}\n        - SQS_QUEUE_KEY_SECRET=${SQS_QUEUE_KEY_SECRET}\n        - SQS_QUEUE_REGION=${SQS_QUEUE_REGION}\n        - USE_CUSTOM_ERROR_HANDLING=${USE_CUSTOM_ERROR_HANDLING}\n        - ERROR_HANDLER_MODULE=${ERROR_HANDLER_MODULE}\n        - ERROR_FILE_LOGGER=${ERROR_FILE_LOGGER}\n        - ERROR_FILE_NAME_USE_CONTEXT=${ERROR_FILE_NAME_USE_CONTEXT}\n        - SENTRY_DSN_URL=${SENTRY_DSN_URL}\n        - TC_AWS_REGION=${TC_AWS_REGION}\n        - TC_AWS_ENDPOINT=${TC_AWS_ENDPOINT}\n        - TC_AWS_STORAGE_BUCKET=${TC_AWS_STORAGE_BUCKET}\n        - TC_AWS_STORAGE_ROOT_PATH=${TC_AWS_STORAGE_ROOT_PATH}\n        - TC_AWS_LOADER_BUCKET=${TC_AWS_LOADER_BUCKET}\n        - TC_AWS_LOADER_ROOT_PATH=${TC_AWS_LOADER_ROOT_PATH}\n        - TC_AWS_RESULT_STORAGE_BUCKET=${TC_AWS_RESULT_STORAGE_BUCKET}\n        - TC_AWS_RESULT_STORAGE_ROOT_PATH=${TC_AWS_RESULT_STORAGE_ROOT_PATH}\n        - TC_AWS_STORAGE_SSE=${TC_AWS_STORAGE_SSE}\n        - TC_AWS_STORAGE_RRS=${TC_AWS_STORAGE_RRS}\n        - TC_AWS_ENABLE_HTTP_LOADER=${TC_AWS_ENABLE_HTTP_LOADER}\n        - TC_AWS_ALLOWED_BUCKETS=${TC_AWS_ALLOWED_BUCKETS}\n        - TC_AWS_STORE_METADATA=${TC_AWS_STORE_METADATA}\n      networks:\n        - frontend\n        - backend\n\n### AWS EB-CLI ################################################\n    aws:\n      restart: always\n      build:\n        context: ./aws-eb-cli\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}\n      depends_on:\n        - workspace\n      tty: true\n\n### Portainer ################################################\n    portainer:\n      restart: always\n      build:\n        context: ./portainer\n      volumes:\n        - ${DATA_PATH_HOST}/portainer_data:/data\n        - /var/run/docker.sock:/var/run/docker.sock\n      extra_hosts:\n        - \"dockerhost:${DOCKER_HOST_IP}\"\n      ports:\n        - 9010:9000\n      networks:\n        - backend\n\n### Gitlab ################################################\n    gitlab:\n      build:\n        context: ./gitlab\n      environment:\n        GITLAB_OMNIBUS_CONFIG: |\n          external_url '${GITLAB_DOMAIN_NAME}'\n          redis['enable'] = false\n          nginx['listen_https'] = false\n          nginx['listen_port'] = 80\n          nginx['custom_gitlab_server_config'] = \"set_real_ip_from 172.0.0.0/8;\\nreal_ip_header X-Real-IP;\\nreal_ip_recursive on;\"\n          postgresql['enable'] = false\n          gitlab_rails['trusted_proxies'] = ['caddy','nginx','apache2']\n          gitlab_rails['redis_host'] = 'redis'\n          gitlab_rails['redis_database'] = 8\n          gitlab_rails['db_host'] = '${GITLAB_POSTGRES_HOST}'\n          gitlab_rails['db_username'] = '${GITLAB_POSTGRES_USER}'\n          gitlab_rails['db_password'] = '${GITLAB_POSTGRES_PASSWORD}'\n          gitlab_rails['db_database'] = '${GITLAB_POSTGRES_DB}'\n          gitlab_rails['initial_root_password'] = '${GITLAB_ROOT_PASSWORD}'\n          gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_HOST_SSH_PORT}\n      volumes:\n        - ${DATA_PATH_HOST}/gitlab/config:/etc/gitlab\n        - ${DATA_PATH_HOST}/gitlab/data:/var/opt/gitlab\n        - ${GITLAB_HOST_LOG_PATH}:/var/log/gitlab\n      ports:\n        - \"${GITLAB_HOST_HTTP_PORT}:80\"\n        - \"${GITLAB_HOST_HTTPS_PORT}:443\"\n        - \"${GITLAB_HOST_SSH_PORT}:22\"\n      networks:\n        - backend\n      depends_on:\n        - redis\n        - postgres\n    gitlab-runner:\n      image: gitlab/gitlab-runner:latest\n      environment:\n        - CI_SERVER_URL=${GITLAB_CI_SERVER_URL}\n        - REGISTRATION_TOKEN=${GITLAB_RUNNER_REGISTRATION_TOKEN}\n        - RUNNER_NAME=${COMPOSE_PROJECT_NAME}-runner\n        - REGISTER_NON_INTERACTIVE=${GITLAB_REGISTER_NON_INTERACTIVE}\n        - RUNNER_EXECUTOR=shell\n      volumes:\n        - ${DATA_PATH_HOST}/gitlab/runner:/etc/gitlab-runner\n        - /var/run/docker.sock:/var/run/docker.sock:rw\n      restart: always\n\n### JupyterHub #########################################\n    jupyterhub:\n      restart: always\n      build:\n        context: ./jupyterhub\n      depends_on:\n        - postgres\n        - jupyterhub-user\n      volumes:\n        - /var/run/docker.sock:/var/run/docker.sock:rw\n        - ${DATA_PATH_HOST}/jupyterhub/:/data\n        - ${JUPYTERHUB_CUSTOM_CONFIG}:/jupyterhub_config.py\n        - ${JUPYTERHUB_USER_DATA}:/user-data\n        - ${JUPYTERHUB_USER_LIST}:/userlist\n      networks:\n        - backend\n      ports:\n        - \"${JUPYTERHUB_PORT}:80\"\n      environment:\n        - TERM=xterm\n        - JUPYTERHUB_USER_DATA=${JUPYTERHUB_USER_DATA}\n        - JUPYTERHUB_POSTGRES_DB=${JUPYTERHUB_POSTGRES_DB}\n        - JUPYTERHUB_POSTGRES_USER=${JUPYTERHUB_POSTGRES_USER}\n        - JUPYTERHUB_POSTGRES_HOST=${JUPYTERHUB_POSTGRES_HOST}\n        - JUPYTERHUB_POSTGRES_PASSWORD=${JUPYTERHUB_POSTGRES_PASSWORD}\n        - JUPYTERHUB_OAUTH_CALLBACK_URL=${JUPYTERHUB_OAUTH_CALLBACK_URL}\n        - JUPYTERHUB_OAUTH_CLIENT_ID=${JUPYTERHUB_OAUTH_CLIENT_ID}\n        - JUPYTERHUB_OAUTH_CLIENT_SECRET=${JUPYTERHUB_OAUTH_CLIENT_SECRET}\n        - JUPYTERHUB_LOCAL_NOTEBOOK_IMAGE=${COMPOSE_PROJECT_NAME}_jupyterhub-user\n        - JUPYTERHUB_ENABLE_NVIDIA=${JUPYTERHUB_ENABLE_NVIDIA}\n    jupyterhub-user:\n      build:\n        context: ./jupyterhub\n        dockerfile: Dockerfile.user\n      command: [\"sh\", \"-c\", \"echo \\\"build only\\\"\"]\n\n### IPython #########################################\n    ipython-controller:\n      restart: always\n      build:\n        context: ./ipython\n        dockerfile: Dockerfile.controller\n      networks:\n        - backend\n      extra_hosts:\n        - \"laradock-ipython:${LARADOCK_IPYTHON_CONTROLLER_IP}\"\n      ports:\n        - \"33327-33338:33327-33338\"\n    ipython-engine:\n      build:\n        context: ./ipython\n        dockerfile: Dockerfile.engine\n      networks:\n        - backend\n      extra_hosts:\n        - \"laradock-ipython:${LARADOCK_IPYTHON_CONTROLLER_IP}\"\n\n### Docker-in-Docker ################################################\n    docker-in-docker:\n      restart: always\n      image: docker:20.10-dind\n      environment:\n        DOCKER_TLS_SAN: DNS:docker-in-docker\n      privileged: true\n      volumes:\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}\n        - docker-in-docker:/certs/client\n      expose:\n        - 2375\n      networks:\n        - backend\n\n### NetData ################################################\n    netdata:\n      restart: always\n      image: netdata/netdata:latest\n      cap_add:\n        - SYS_PTRACE\n      volumes:\n        - /proc:/host/proc:ro\n        - /sys:/host/sys:ro\n        - /var/run/docker.sock:/var/run/docker.sock:ro\n      ports:\n        - \"${NETDATA_PORT}:19999\"\n      networks:\n        - backend\n\n### REDISWEBUI ################################################\n    redis-webui:\n      restart: always\n      build:\n        context: ./redis-webui\n      environment:\n        - ADMIN_USER=${REDIS_WEBUI_USERNAME}\n        - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}\n        - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}\n        - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}\n        - REDIS_1_AUTH=${REDIS_PASSWORD}\n      networks:\n        - backend\n      ports:\n        - \"${REDIS_WEBUI_PORT}:80\"\n      depends_on:\n        - redis\n\n### MongoWebUI ################################################\n    mongo-webui:\n      restart: always\n      build:\n        context: ./mongo-webui\n      environment:\n        - ROOT_URL=${MONGO_WEBUI_ROOT_URL}\n        - MONGO_URL=${MONGO_WEBUI_MONGO_URL}\n        - INSTALL_MONGO=${MONGO_WEBUI_INSTALL_MONGO}\n      volumes:\n        - ${DATA_PATH_HOST}/mongo-webui:/data/db\n      ports:\n        - \"${MONGO_WEBUI_PORT}:3000\"\n      networks:\n        - backend\n      depends_on:\n        - mongo\n\n### Metabase #################################################\n    metabase:\n      restart: always\n      image: metabase/metabase:latest\n      environment:\n        - MB_DB_FILE=/metabase-data/${METABASE_DB_FILE}\n      ports:\n        - ${METABASE_PORT}:3000\n      volumes:\n        - ${DATA_PATH_HOST}/metabase-data:/metabase-data\n      networks:\n        - backend\n\n### Weaver (Athena PDF) #################################################\n    weaver:\n      image: arachnysdocker/athenapdf-service\n      ports:\n        - \"8080:8080\"\n      env_file:\n        - ./weaver/conf/sample.env\n      networks:\n        - backend\n      depends_on:\n        - workspace\n\n### IDE-THEIA ################################################\n    ide-theia:\n      build:\n        context: ./ide-theia\n      volumes:\n        - ${APP_CODE_PATH_HOST}:/home/project\n      ports:\n        - \"${IDE_THEIA_PORT}:3000\"\n      networks:\n        - backend\n\n### IDE-WEBIDE ################################################\n    ide-webide:\n      build:\n        context: ./ide-webide\n      volumes:\n        - ${DATA_PATH_HOST}/ide/webide/ide.db:/root/.coding-ide/ide.db\n      ports:\n        - \"${IDE_WEBIDE_PORT}:8080\"\n      networks:\n        - backend\n\n### IDE-CODIAD ################################################\n    ide-codiad:\n      build:\n        context: ./ide-codiad\n      environment:\n        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}\n        - TZ=${WORKSPACE_TIMEZONE}\n        - PGID=1000\n        - PUID=1000\n      volumes:\n        - /etc/localtime:/etc/localtime:ro\n        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}\n        - ${DATA_PATH_HOST}/ide/codiad:/config\n      ports:\n        - \"${IDE_CODIAD_PORT}:80\"\n      networks:\n        - backend\n\n### IDE-ICECODER ################################################\n    ide-icecoder:\n      build:\n        context: ./ide-icecoder\n      environment:\n        - DOCUMENT_ROOT=${APP_CODE_PATH_CONTAINER}\n        - TZ=${WORKSPACE_TIMEZONE}\n        - PGID=1000\n        - PUID=1000\n      volumes:\n        - /etc/localtime:/etc/localtime:ro\n        - ${APP_CODE_PATH_HOST}:/home/laradock/ICEcoder/dev\n      ports:\n        - \"${IDE_ICECODER_PORT}:8080\"\n      networks:\n        - backend\n\n### DOCKER-REGISTRY ################################################\n    docker-registry:\n      build:\n        context: ./docker-registry\n      volumes:\n        - /etc/localtime:/etc/localtime:ro\n        - ${DATA_PATH_HOST}/docker-registry:/var/lib/registry\n      ports:\n        - \"${DOCKER_REGISTRY_PORT}:5000\"\n      networks:\n        - backend\n\n### DOCKER-WEB-UI ################################################\n    docker-web-ui:\n      build:\n        context: ./docker-web-ui\n      environment:\n        - TZ=${WORKSPACE_TIMEZONE}\n        - ENV_DOCKER_REGISTRY_HOST=${DOCKER_WEBUI_REGISTRY_HOST}\n        - ENV_DOCKER_REGISTRY_PORT=${DOCKER_WEBUI_REGISTRY_PORT}\n        - ENV_DOCKER_REGISTRY_USE_SSL=${DOCKER_REGISTRY_USE_SSL}\n        - ENV_MODE_BROWSE_ONLY=${DOCKER_REGISTRY_BROWSE_ONLY}\n      volumes:\n        - /etc/localtime:/etc/localtime:ro\n      ports:\n        - \"${DOCKER_WEBUI_PORT}:80\"\n      networks:\n        - frontend\n        - backend\n\n### MAILU ################################################\n    mailu:\n      image: mailu/admin:${MAILU_VERSION}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/data:/data\"\n        - \"${DATA_PATH_HOST}/mailu/dkim:/dkim\"\n        - \"${DATA_PATH_HOST}/mailu/webmail:/webmail\"\n        - /var/run/docker.sock:/var/run/docker.sock:ro\n      depends_on:\n        - mailu-front\n        - mailu-imap\n        - mailu-smtp\n        - mailu-antispam\n        - mailu-antivirus\n        - mailu-webdav\n        - mailu-admin\n        - mailu-webmail\n        - mailu-fetchmail\n      command: [\"sh\", \"-c\", \"echo ${MAILU_INIT_ADMIN_USERNAME}@${MAILU_DOMAIN} ${MAILU_INIT_ADMIN_PASSWORD} ;python manage.py advertise ; python manage.py db upgrade ; python manage.py admin ${MAILU_INIT_ADMIN_USERNAME} ${MAILU_DOMAIN} ${MAILU_INIT_ADMIN_PASSWORD} || true;sed -i -- \\\"s/= Off/= On/g\\\" /webmail/_data_/_default_/configs/config.ini || true;if grep -Fq \\\"registration_link_url\\\" /webmail/_data_/_default_/configs/config.ini;then echo Already set!;else echo \\\"\\\" >> /webmail/_data_/_default_/configs/config.ini; echo \\\"[login]\\\" >> /webmail/_data_/_default_/configs/config.ini;echo \\\"registration_link_url = '${MAILU_WEBSITE}${MAILU_WEB_ADMIN}/ui/user/signup'\\\" >> /webmail/_data_/_default_/configs/config.ini;fi\"]\n      networks:\n        - backend\n    mailu-front:\n      image: mailu/nginx:${MAILU_VERSION}\n      environment:\n        - ADMIN=${MAILU_ADMIN}\n        - WEB_ADMIN=${MAILU_WEB_ADMIN}\n        - WEB_WEBMAIL=${MAILU_WEB_WEBMAIL}\n        - WEBDAV=${MAILU_WEBDAV}\n        - HOSTNAMES=${MAILU_HOSTNAMES}\n        - TLS_FLAVOR=${MAILU_TLS_FLAVOR}\n        - MESSAGE_SIZE_LIMIT=${MAILU_MESSAGE_SIZE_LIMIT}\n      ports:\n        - \"${MAILU_HTTP_PORT}:80\"\n        - \"${MAILU_HTTPS_PORT}:443\"\n        - \"110:110\"\n        - \"143:143\"\n        - \"993:993\"\n        - \"995:995\"\n        - \"25:25\"\n        - \"465:465\"\n        - \"587:587\"\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/certs:/certs\"\n      networks:\n        backend:\n          aliases:\n            - front\n    mailu-imap:\n      image: mailu/dovecot:${MAILU_VERSION}\n      environment:\n        - DOMAIN=${MAILU_DOMAIN}\n        - HOSTNAMES=${MAILU_HOSTNAMES}\n        - POSTMASTER=${MAILU_POSTMASTER}\n        - WEBMAIL=${MAILU_WEBMAIL}\n        - RECIPIENT_DELIMITER=${MAILU_RECIPIENT_DELIMITER}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/data:/data\"\n        - \"${DATA_PATH_HOST}/mailu/mail:/mail\"\n        - \"${DATA_PATH_HOST}/mailu/overrides:/overrides\"\n      depends_on:\n        - mailu-front\n      networks:\n        backend:\n          aliases:\n            - imap\n    mailu-smtp:\n      image: mailu/postfix:${MAILU_VERSION}\n      environment:\n        - DOMAIN=${MAILU_DOMAIN}\n        - HOSTNAMES=${MAILU_HOSTNAMES}\n        - RELAYHOST=${MAILU_RELAYHOST}\n        - RELAYNETS=${MAILU_RELAYNETS}\n        - RECIPIENT_DELIMITER=${MAILU_RECIPIENT_DELIMITER}\n        - MESSAGE_SIZE_LIMIT=${MAILU_MESSAGE_SIZE_LIMIT}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/data:/data\"\n        - \"${DATA_PATH_HOST}/mailu/overrides:/overrides\"\n      depends_on:\n        - mailu-front\n      networks:\n        backend:\n          aliases:\n            - smtp\n    mailu-antispam:\n      image: mailu/rspamd:${MAILU_VERSION}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/filter:/var/lib/rspamd\"\n        - \"${DATA_PATH_HOST}/mailu/dkim:/dkim\"\n        - \"${DATA_PATH_HOST}/mailu/overrides/rspamd:/etc/rspamd/override.d\"\n      depends_on:\n        - mailu-front\n      networks:\n        backend:\n          aliases:\n            - antispam\n    mailu-antivirus:\n      image: mailu/clamav:${MAILU_VERSION}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/filter:/data\"\n      networks:\n        backend:\n          aliases:\n            - antivirus\n    mailu-webdav:\n      image: mailu/${MAILU_WEBDAV}:${MAILU_VERSION}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/dav:/data\"\n      networks:\n        backend:\n          aliases:\n            - webdav\n    mailu-admin:\n      image: mailu/admin:${MAILU_VERSION}\n      environment:\n        - DOMAIN=${MAILU_DOMAIN}\n        - HOSTNAMES=${MAILU_HOSTNAMES}\n        - POSTMASTER=${MAILU_POSTMASTER}\n        - SECRET_KEY=${MAILU_SECRET_KEY}\n        - AUTH_RATELIMIT=${MAILU_AUTH_RATELIMIT}\n        - TLS_FLAVOR=${MAILU_TLS_FLAVOR}\n        - DISABLE_STATISTICS=${MAILU_DISABLE_STATISTICS}\n        - DMARC_RUA=${MAILU_DMARC_RUA}\n        - DMARC_RUF=${MAILU_DMARC_RUF}\n        - WELCOME=${MAILU_WELCOME}\n        - WELCOME_SUBJECT=${MAILU_WELCOME_SUBJECT}\n        - WELCOME_BODY=${MAILU_WELCOME_BODY}\n        - WEB_ADMIN=${MAILU_WEB_ADMIN}\n        - WEB_WEBMAIL=${MAILU_WEB_WEBMAIL}\n        - WEBSITE=${MAILU_WEBSITE}\n        - WEBMAIL=${MAILU_WEBMAIL}\n        - SITENAME=${MAILU_SITENAME}\n        - PASSWORD_SCHEME=${MAILU_PASSWORD_SCHEME}\n        - RECAPTCHA_PUBLIC_KEY=${MAILU_RECAPTCHA_PUBLIC_KEY}\n        - RECAPTCHA_PRIVATE_KEY=${MAILU_RECAPTCHA_PRIVATE_KEY}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/data:/data\"\n        - \"${DATA_PATH_HOST}/mailu/dkim:/dkim\"\n        - /var/run/docker.sock:/var/run/docker.sock:ro\n      depends_on:\n        - redis\n      networks:\n        backend:\n          aliases:\n            - admin\n    mailu-webmail:\n      image: \"mailu/${MAILU_WEBMAIL}:${MAILU_VERSION}\"\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/webmail:/data\"\n      networks:\n        backend:\n          aliases:\n            - webmail\n    mailu-fetchmail:\n      image: mailu/fetchmail:${MAILU_VERSION}\n      environment:\n        - FETCHMAIL_DELAY=${MAILU_FETCHMAIL_DELAY}\n      volumes:\n        - \"${DATA_PATH_HOST}/mailu/data:/data\"\n      networks:\n        backend:\n          aliases:\n            - fetchmail\n\n### TRAEFIK #########################################\n    traefik:\n      build:\n        context: ./traefik\n      volumes:\n        - /var/run/docker.sock:/var/run/docker.sock\n        - ./traefik/data:/data\n      command:\n        - \"--api\"\n        - \"--providers.docker.exposedbydefault=false\"\n        - \"--accesslog.filepath=/data/access.log\"\n        # entrypoints\n        - \"--entrypoints.http.address=:${TRAEFIK_HOST_HTTP_PORT}\"\n        - \"--entrypoints.http.http.redirections.entrypoint.to=https\"\n        - \"--entrypoints.https.address=:${TRAEFIK_HOST_HTTPS_PORT}\"\n        - \"--entrypoints.traefik.address=:${TRAEFIK_DASHBOARD_PORT}\"\n        # certificatesresolvers\n        - \"--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}\"\n        - \"--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json\"\n        - \"--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http\"\n      ports:\n        - \"${TRAEFIK_HOST_HTTP_PORT}:${TRAEFIK_HOST_HTTP_PORT}\"\n        - \"${TRAEFIK_HOST_HTTPS_PORT}:${TRAEFIK_HOST_HTTPS_PORT}\"\n        - \"${TRAEFIK_DASHBOARD_PORT}:${TRAEFIK_DASHBOARD_PORT}\"\n      networks:\n        - frontend\n        - backend\n      labels:\n        - \"traefik.enable=true\"\n        - \"traefik.http.routers.traefik.rule=Host(`${ACME_DOMAIN}`)\"\n        - \"traefik.http.routers.traefik.entrypoints=traefik\"\n        - \"traefik.http.routers.traefik.service=api@internal\"\n        - \"traefik.http.routers.traefik.middlewares=access-auth\"\n        - \"traefik.http.routers.traefik.tls.certresolver=letsencrypt\"\n        - \"traefik.http.middlewares.access-auth.basicauth.realm=Login Required\"\n        - \"traefik.http.middlewares.access-auth.basicauth.users=${TRAEFIK_DASHBOARD_USER}\"\n\n### MOSQUITTO Broker #########################################\n    mosquitto:\n      build:\n        context: ./mosquitto\n      volumes:\n        - ${DATA_PATH_HOST}/mosquitto/data:/mosquitto/data\n      ports:\n        - \"${MOSQUITTO_PORT}:9001\"\n      networks:\n        - frontend\n        - backend\n\n### COUCHDB ###################################################\n    couchdb:\n      build:\n        context: ./couchdb\n      volumes:\n        - ${DATA_PATH_HOST}/couchdb/data:/opt/couchdb/data\n      ports:\n        - \"${COUCHDB_PORT}:5984\"\n      networks:\n        - backend\n\n### Manticore Search ###########################################\n    manticore:\n      build:\n        context: ./manticore\n      volumes:\n        - ${MANTICORE_CONFIG_PATH}:/etc/sphinxsearch\n        - ${DATA_PATH_HOST}/manticore/data:/var/lib/manticore/data\n        - ${DATA_PATH_HOST}/manticore/log:/var/log/manticore\n      ports:\n        - \"${MANTICORE_API_PORT}:9312\"\n        - \"${MANTICORE_SPHINXQL_PORT}:9306\"\n        - \"${MANTICORE_HTTP_PORT}:9308\"\n      networks:\n        - backend\n\n### SONARQUBE ################################################\n    sonarqube:\n      build:\n        context: ./sonarqube\n      hostname: \"${SONARQUBE_HOSTNAME}\"\n      volumes:\n        - ${DATA_PATH_HOST}/sonarqube/conf:/opt/sonarqube/conf\n        - ${DATA_PATH_HOST}/sonarqube/data:/opt/sonarqube/data\n        - ${DATA_PATH_HOST}/sonarqube/logs:/opt/sonarqube/logs\n        - ${DATA_PATH_HOST}/sonarqube/extensions:/opt/sonarqube/extensions\n        - ${DATA_PATH_HOST}/sonarqube/plugins:/opt/sonarqube/lib/bundled-plugins\n      ports:\n        - ${SONARQUBE_PORT}:9000\n      depends_on:\n        - postgres\n      environment:\n        - sonar.jdbc.username=${SONARQUBE_POSTGRES_USER}\n        - sonar.jdbc.password=${SONARQUBE_POSTGRES_PASSWORD}\n        - sonar.jdbc.url=jdbc:postgresql://${SONARQUBE_POSTGRES_HOST}:5432/${SONARQUBE_POSTGRES_DB}\n      networks:\n        - backend\n        - frontend\n\n### CONFLUENCE ################################################\n    confluence:\n      container_name: Confluence\n      image: atlassian/confluence-server:${CONFLUENCE_VERSION}\n      restart: always\n      ports:\n        - \"${CONFLUENCE_HOST_HTTP_PORT}:8090\"\n      networks:\n        - frontend\n        - backend\n      depends_on:\n        - postgres\n      volumes:\n        - ${DATA_PATH_HOST}/Confluence:/var/atlassian/application-data\n\n### SWAGGER EDITOR ############################################\n    swagger-editor:\n      build: ./swagger-editor\n      ports:\n        - ${SWAGGER_EDITOR_PORT}:8080\n      networks:\n        - backend\n\n### SWAGGER UI ################################################\n    swagger-ui:\n      build: ./swagger-ui\n      environment:\n        - API_URL=${SWAGGER_API_URL}\n      ports:\n        - ${SWAGGER_UI_PORT}:8080\n      networks:\n        - backend\n\n### tomcat ####################################################\n    tomcat:\n      container_name: tomcat\n      image: tomcat:${TOMCAT_VERSION}\n      ports:\n        - \"${TOMCAT_HOST_HTTP_PORT}:8080\"\n      networks:\n        - frontend\n        - backend\n      volumes:\n        - ${DATA_PATH_HOST}/tomcat/webapps:/usr/local/tomcat/webapps\n        - ${DATA_PATH_HOST}/tomcat/logs:/usr/local/tomcat/logs\n      # restart: always\n\n### react #####################################################\n    react:\n      build:\n        context: ./react\n      ports:\n        - \"3000:3000\"\n      container_name: react\n      stdin_open: true\n      environment:\n        - CHOKIDAR_USEPOLLING=true\n      networks:\n          - frontend\n          - backend\n      volumes:\n        - ./react:/usr/src/app/react\n        - /usr/src/app/react/node_modules\n\n### kafka ####################################################\n    kafka:\n      image: wurstmeister/kafka\n      ports:\n        - \"9092:9092\"\n      environment:\n        KAFKA_BROKER_ID: 1\n        KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1\n        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092\n        KAFKA_MESSAGE_MAX_BYTES: 2000000\n        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      volumes:\n        - ${DATA_PATH_HOST}/kafka:/kafka\n        - /var/run/docker.sock:/var/run/docker.sock\n      networks:\n        - backend\n\n### kafka-manager ###########################################\n    kafka-manager:\n      image: sheepkiller/kafka-manager\n      ports:\n        - 9020:9000\n      environment:\n        ZK_HOSTS: zookeeper:2181\n      networks:\n        - backend\n\n\n### tarantool ###########################################\n    tarantool:\n      build: ./tarantool\n      volumes:\n        - ${DATA_PATH_HOST}/tarantool:/var/lib/tarantool\n        - ./tarantool/lua:/opt/tarantool\n      ports:\n        - ${TARANTOOL_PORT}:3301\n      networks:\n        - backend\n    tarantool-admin:\n      build: ./tarantool-admin\n      ports:\n        - ${TARANTOOL_ADMIN_PORT}:80\n      networks:\n        - backend\n\n  ### onedev ####################################################\n    onedev:\n      image: 1dev/server\n      ports:\n        - \"${ONEDEV_HTTP_PORT}:6610\"\n        - \"${ONEDEV_SSH_PORT}:6611\"\n      volumes:\n        - ${DATA_PATH_HOST}/onedev:/opt/onedev\n        - /var/run/docker.sock:/var/run/docker.sock\n      networks:\n        - frontend\n        - backend\n      restart: always\n  \n  ### keycloak ##################################################\n    keycloak:\n      image: bitnami/keycloak:${KEYCLOAK_VERSION}\n      ports:\n        - \"${KEYCLOAK_HTTP_PORT}:${KEYCLOAK_HTTP_PORT}\"\n      environment:\n        - KEYCLOAK_HTTP_PORT=${KEYCLOAK_HTTP_PORT}\n        - KEYCLOAK_CREATE_ADMIN_USER=${KEYCLOAK_CREATE_ADMIN_USER}\n        - KEYCLOAK_ADMIN_USER=${KEYCLOAK_ADMIN_USER}\n        - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}\n        - KEYCLOAK_DATABASE_HOST=${KEYCLOAK_POSTGRES_HOST}\n        - KEYCLOAK_DATABASE_PORT=${POSTGRES_PORT}\n        - KEYCLOAK_DATABASE_NAME=${KEYCLOAK_POSTGRES_DB}\n        - KEYCLOAK_DATABASE_USER=${KEYCLOAK_POSTGRES_USER}\n        - KEYCLOAK_DATABASE_PASSWORD=${KEYCLOAK_POSTGRES_PASSWORD}\n      depends_on:\n        - postgres\n      networks:\n        - frontend\n        - backend\n"
        },
        {
          "name": "docker-registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-sync.yml",
          "type": "blob",
          "size": 0.5283203125,
          "content": "version: \"2\"\n\noptions:\n  verbose: false\nsyncs:\n  applications-docker-sync: # name of the intermediary sync volume\n    compose-dev-file-path: 'docker-compose.sync.yml' # docker-compose override file\n\n    src: '${APP_CODE_PATH_HOST}' # host source directory\n    sync_userid: 1000 # giving permissions to www-data user (as defined in nginx and php-fpm Dockerfiles)\n    sync_strategy: '${DOCKER_SYNC_STRATEGY}' # for osx use 'native_osx', for windows use 'unison'\n\n    sync_excludes: ['laradock', 'ignored_folder_example'] # ignored directories\n"
        },
        {
          "name": "docker-web-ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "elasticsearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "gearman",
          "type": "tree",
          "content": null
        },
        {
          "name": "gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": "grafana",
          "type": "tree",
          "content": null
        },
        {
          "name": "graylog",
          "type": "tree",
          "content": null
        },
        {
          "name": "haproxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "hhvm",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide-codiad",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide-icecoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide-theia",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide-webide",
          "type": "tree",
          "content": null
        },
        {
          "name": "ipython",
          "type": "tree",
          "content": null
        },
        {
          "name": "jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "jupyterhub",
          "type": "tree",
          "content": null
        },
        {
          "name": "kibana",
          "type": "tree",
          "content": null
        },
        {
          "name": "laravel-echo-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "laravel-horizon",
          "type": "tree",
          "content": null
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "logstash",
          "type": "tree",
          "content": null
        },
        {
          "name": "mailcatcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "maildev",
          "type": "tree",
          "content": null
        },
        {
          "name": "mailhog",
          "type": "tree",
          "content": null
        },
        {
          "name": "mailpit",
          "type": "tree",
          "content": null
        },
        {
          "name": "manticore",
          "type": "tree",
          "content": null
        },
        {
          "name": "mariadb",
          "type": "tree",
          "content": null
        },
        {
          "name": "memcached",
          "type": "tree",
          "content": null
        },
        {
          "name": "mercure",
          "type": "tree",
          "content": null
        },
        {
          "name": "minio",
          "type": "tree",
          "content": null
        },
        {
          "name": "mongo-webui",
          "type": "tree",
          "content": null
        },
        {
          "name": "mongo",
          "type": "tree",
          "content": null
        },
        {
          "name": "mosquitto",
          "type": "tree",
          "content": null
        },
        {
          "name": "mssql",
          "type": "tree",
          "content": null
        },
        {
          "name": "mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "nats",
          "type": "tree",
          "content": null
        },
        {
          "name": "neo4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "openresty",
          "type": "tree",
          "content": null
        },
        {
          "name": "percona",
          "type": "tree",
          "content": null
        },
        {
          "name": "php-fpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "php-worker",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpmyadmin",
          "type": "tree",
          "content": null
        },
        {
          "name": "portainer",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgres-postgis",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgres",
          "type": "tree",
          "content": null
        },
        {
          "name": "rabbitmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "react",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis-cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis-webui",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "rethinkdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "selenium",
          "type": "tree",
          "content": null
        },
        {
          "name": "soketi",
          "type": "tree",
          "content": null
        },
        {
          "name": "solr",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonarqube",
          "type": "tree",
          "content": null
        },
        {
          "name": "sqs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger-editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger-ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "sync.sh",
          "type": "blob",
          "size": 2.6640625,
          "content": "#!/bin/bash\n\n# This shell script is an optional tool to simplify\n# the installation and usage of laradock with docker-sync.\n\n# Make sure that the DOCKER_SYNC_STRATEGY is set in the .env\n# DOCKER_SYNC_STRATEGY=native_osx # osx\n# DOCKER_SYNC_STRATEGY=unison # windows\n\n# To run, make sure to add permissions to this file:\n# chmod 755 sync.sh\n\n# USAGE EXAMPLE:\n# Install docker-sync: ./sync.sh install\n# Start sync and services with nginx and mysql: ./sync.sh up nginx mysql\n# Stop containers and sync: ./sync.sh down\n\n# prints colored text\nprint_style () {\n\n    if [ \"$2\" == \"info\" ] ; then\n        COLOR=\"96m\"\n    elif [ \"$2\" == \"success\" ] ; then\n        COLOR=\"92m\"\n    elif [ \"$2\" == \"warning\" ] ; then\n        COLOR=\"93m\"\n    elif [ \"$2\" == \"danger\" ] ; then\n        COLOR=\"91m\"\n    else #default color\n        COLOR=\"0m\"\n    fi\n\n    STARTCOLOR=\"\\e[$COLOR\"\n    ENDCOLOR=\"\\e[0m\"\n\n    printf \"$STARTCOLOR%b$ENDCOLOR\" \"$1\"\n}\n\ndisplay_options () {\n    printf \"Available options:\\n\";\n    print_style \"   install\" \"info\"; printf \"\\t\\t Installs docker-sync gem on the host machine.\\n\"\n    print_style \"   up [services]\" \"success\"; printf \"\\t Starts docker-sync and runs docker compose.\\n\"\n    print_style \"   down\" \"success\"; printf \"\\t\\t\\t Stops containers and docker-sync.\\n\"\n    print_style \"   bash\" \"success\"; printf \"\\t\\t\\t Opens bash on the workspace with user laradock.\\n\"\n    print_style \"   sync\" \"info\"; printf \"\\t\\t\\t Manually triggers the synchronization of files.\\n\"\n    print_style \"   clean\" \"danger\"; printf \"\\t\\t Removes all files from docker-sync.\\n\"\n}\n\nif [[ $# -eq 0 ]] ; then\n    print_style \"Missing arguments.\\n\" \"danger\"\n    display_options\n    exit 1\nfi\n\nif [ \"$1\" == \"up\" ] ; then\n    print_style \"Initializing Docker Sync\\n\" \"info\"\n    print_style \"May take a long time (15min+) on the first run\\n\" \"info\"\n    docker-sync start;\n\n    print_style \"Initializing Docker Compose\\n\" \"info\"\n    shift # removing first argument\n    docker-compose up -d ${@}\n\nelif [ \"$1\" == \"down\" ]; then\n    print_style \"Stopping Docker Compose\\n\" \"info\"\n    docker-compose stop\n\n    print_style \"Stopping Docker Sync\\n\" \"info\"\n    docker-sync stop\n\nelif [ \"$1\" == \"bash\" ]; then\n    docker-compose exec --user=laradock workspace bash\n\nelif [ \"$1\" == \"install\" ]; then\n    print_style \"Installing docker-sync\\n\" \"info\"\n    gem install docker-sync\n\nelif [ \"$1\" == \"sync\" ]; then\n    print_style \"Manually triggering sync between host and docker-sync container.\\n\" \"info\"\n    docker-sync sync;\n\nelif [ \"$1\" == \"clean\" ]; then\n    print_style \"Removing and cleaning up files from the docker-sync container.\\n\" \"warning\"\n    docker-sync clean\nelse\n    print_style \"Invalid arguments.\\n\" \"danger\"\n    display_options\n    exit 1\nfi\n"
        },
        {
          "name": "tarantool-admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "tarantool",
          "type": "tree",
          "content": null
        },
        {
          "name": "thumbor",
          "type": "tree",
          "content": null
        },
        {
          "name": "traefik",
          "type": "tree",
          "content": null
        },
        {
          "name": "varnish",
          "type": "tree",
          "content": null
        },
        {
          "name": "weaver",
          "type": "tree",
          "content": null
        },
        {
          "name": "workspace",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}