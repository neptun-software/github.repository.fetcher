{
  "metadata": {
    "timestamp": 1736711310108,
    "page": 4,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjQ=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OWASP/wstg",
      "stars": 7501,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2216796875,
          "content": "* text=auto eol=lf\n\n*.css text\n*.htm text\n*.html text\n*.js text\n*.md text\n*.svg text\n*.txt text\n*.xml text\n*.xsl text\n*.yml text\n*.yaml text\n*.json text\n*.sh text\n*.nav text\n\n*.pdf binary\n*.png binary\n*.gif binary\n*.jpg binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.2890625,
          "content": "### OSX ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n### VisualStudioCode ###\n.vscode\n\n### VisualStudioCode Patch ###\n# Ignore all local history of files\n.history\n\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# next.js build output\n.next\n\n# nuxt.js build output\n.nuxt\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n\n### Eclipse ###\n.metadata\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n.recommenders\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# PyDev specific (Python IDE for Eclipse)\n*.pydevproject\n\n# CDT-specific (C/C++ Development Tooling)\n.cproject\n\n# CDT- autotools\n.autotools\n\n# Java annotation processor (APT)\n.factorypath\n\n# PDT-specific (PHP Development Tools)\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# Tern plugin\n.tern-project\n\n# TeXlipse plugin\n.texlipse\n\n# STS (Spring Tool Suite)\n.springBeans\n\n# Code Recommenders\n.recommenders/\n\n# Annotation Processing\n.apt_generated/\n\n# Scala IDE specific (Scala & Java development for Eclipse)\n.cache-main\n.scala_dependencies\n.worksheet\n\n### Eclipse Patch ###\n# Eclipse Core\n.project\n*.settings\n\n# JDT-specific (Eclipse Java Development Tools)\n.classpath\n\n# Annotation Processing\n.apt_generated\n\n.sts4-cache/\n\n\n### Intellij+all ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### Intellij+all Patch ###\n# Ignores the whole .idea folder and all .iml files\n# See https://github.com/joeblau/gitignore.io/issues/186 and https://github.com/joeblau/gitignore.io/issues/360\n\n.idea/\n\n# Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023\n\n*.iml\nmodules.xml\n.idea/misc.xml\n*.ipr\n\n# Sonarlint plugin\n.idea/sonarlint\n\nbuild/\n\n# The project's current use of node is simply wrapping scripts and defining the project. \n# Lock files should not be added.\npackage-lock.json\nyarn.lock\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.322265625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject email address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the organization at [owasp.foundation@owasp.org](mailto:owasp.foundation@owasp.org). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], [version 1.4](https://www.contributor-covenant.org/version/1/4/code-of-conduct.html)\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\n<https://www.contributor-covenant.org/faq>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.1748046875,
          "content": "# Contributing to the Testing Guide\n\nThank you for considering contributing to the Web Security Testing Guide (WSTG)!\n\nHere are some ways you can make a helpful contribution. The [Open Source Guide for why and how to contribute](https://opensource.guide/how-to-contribute/) is also a good resource. You will need a [GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account) in order to help out.\n\n- [Become an Author](#become-an-author)\n- [Become a Reviewer or Editor](#become-a-reviewer-or-editor)\n    - [Technical Review](#technical-review)\n    - [Editorial Review](#editorial-review)\n- [How to Open an Issue](#how-to-open-an-issue)\n- [How to Submit a Pull Request](#how-to-submit-a-pull-request)\n- [How to Set Up Your Contributor Environment](#how-to-set-up-your-contributor-environment)\n- [Contributing with Codespaces](#contributing-with-codespaces)\n\n## Become an Author\n\nThis project would not be possible without the contributions of writers in the security community! Our authors help to keep the WSTG relevant and useful for everyone.\n\nWhether you are submitting a new section or adding information to an existing one, please follow the [template example](template/999-Foo_Testing/1-Testing_for_a_Cat_in_a_Box.md). The [template sections are explained here](template/999-Foo_Testing/2-Template_Explanation.md).\n\nWhen submitting your [pull request](#how-to-submit-a-pull-request), authors should link contributions to an issue:\n\n1. Open an [Add New Content issue](https://github.com/OWASP/wstg/issues/new?assignees=&labels=New&template=new-content.md&title=), or choose an [unassigned new content issue](https://github.com/OWASP/wstg/issues?q=is%3Aopen+is%3Aissue+label%3ANew+no%3Aassignee) and ask to be assigned to it.\n2. Create and switch to a new local branch with the name `new-<issue number>`. For example, `git checkout -b new-164`.\n\n## Become a Reviewer or Editor\n\nKeeping the project up to date and looking spiffy is a group effort! The WSTG is a constantly updated document and benefits from your technical or editorial review.\n\nWhen submitting your [pull request](#how-to-submit-a-pull-request), reviewers and editors should link contributions to an issue:\n\n1. Choose an [open issue with the `help wanted` label](https://github.com/OWASP/wstg/labels/help%20wanted) to work on, or [open an issue](https://github.com/OWASP/wstg/issues/new/choose) yourself. Post a comment in the issue and request to be assigned to it.\n2. Create and switch to a new local branch with the name `fix-<issue number>`. For example, `git checkout -b fix-88`.\n\n### Technical Review\n\nIf you have expertise in any topic covered by the WSTG, your technical review is encouraged. Please ensure that articles:\n\n- Follow the [article template materials](template)\n- Follow the [style guide](style_guide.md)\n- Accurately describe vulnerabilities and tests\n- Have appropriate and up-to-date inline links to resources\n- Provide complete and relevant information suitable for an audience with basic technical expertise\n\n### Editorial Review\n\nGrammarians assemble! The WSTG welcomes your improvements in the areas of grammar, formatting, word choice, and brevity. All changes should adhere to the [style guide](style_guide.md).\n\nPlease don't hesitate to make as many changes as you see fit, especially if you notice that existing content does not match the [article template materials](template).\n\n### Translation\n\nDue to challenges with syncing images and removed content, the WSTG is no longer tackling in-bound translation efforts directly.\n\nAt this time we suggest that you start another repository in which to tackle translations of a specific language. Once you've produced a PDF for a given version of the guide we'll be happy to attach it to the appropriate release. Simply [open an issue](https://github.com/OWASP/wstg/issues/new) here asking us to do so.\n\nAlso we're willing to list your translation repository, just [let us know](https://github.com/OWASP/wstg/issues/new) where it is.\n\n## How to Open an Issue\n\n[Create an issue](https://github.com/OWASP/wstg/issues/new/choose) using the appropriate template.\n\nChoose a short, descriptive title. Briefly explain what you think needs changing. Among other things, your suggestions may include grammar or spelling errors, or address insufficient or outdated content.\n\n## How to Submit a Pull Request\n\nHere are the steps for creating and submitting a Pull Request (PR) that we can quickly review and merge.\n\n1. [Set up your environment](#how-to-set-up-your-contributor-environment) to fork the project and install a Markdown linter.\n2. Associate your contribution with an [issue](https://github.com/OWASP/wstg/issues). To change existing content, read [Become a Reviewer or Editor](#become-a-reviewer-or-editor). To make additions, read [Become an Author](#become-an-author).\n3. Make your modifications. Be sure to follow our [style guide](style_guide.md).\n4. When you're ready to submit your work, push your changes to your fork. Ensure that your fork is [synced with `master`](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork).\n5. You can submit a [draft PR](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests) or a [regular PR](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork). If your work is not yet ready for review and merge, choose a draft PR. When your changes are ready to be reviewed, you can convert to a regular PR. See [how to change the stage of a PR](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/changing-the-stage-of-a-pull-request) for more.\n\nYou may want to [allow edits from maintainers](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) so we can help with small changes like fixing typos.\n\nOnce you've submitted your ready-for-review PR, we'll review it. We may comment to ask for clarification or changes, so please check back in the next few days.\n\nTo increase the chances that your PR is merged, please make sure that:\n\n1. You've followed the guidelines above for associating your work with an issue.\n2. Your work is Markdown linted.\n3. Your writing follows the [article template materials](template) and [style guide](style_guide.md).\n4. Your code snippets are correct, well-tested, and commented where necessary for understanding.\n\nOnce the PR is complete, we'll merge it! At that point, you may like to add yourself to [the project's list of authors, reviewers, or editors](document/1-Frontispiece/README.md).\n\n## How to Set Up Your Contributor Environment\n\n1. [Create an account on GitHub](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account).\n2. Install [Visual Studio Code](https://code.visualstudio.com/) and this [Markdown linter plugin](https://github.com/DavidAnson/vscode-markdownlint#install). We use this linter to help keep the project content consistent and pretty.\n\n    1. From the gear icon/menu select \"Settings\".\n    2. Select the \"Workspace\" tab.\n    3. Expand \"Extensions\", and find \"markdownlint\".\n    4. Just below \"Markdownlint: config\" click the \"Edit in settings.json\" link.\n    5. Add the following:\n\n    ```json\n    \"markdownlint.config\": {\n      \"extends\": \".github/configs/.markdownlint.json\"\n    }\n    ```\n\n3. Fork and clone your own copy of the repository. Here are complete instructions for [forking and syncing with GitHub](https://help.github.com/en/github/getting-started-with-github/fork-a-repo).\n\n## Contributing with Codespaces\n\nWe've included settings for GitHub Codespaces so you can use a cloud-hosted IDE to contribute to this repository! Our configuration includes Visual Studio Code extensions and `markdownlint` configuration settings that help to keep work consistent across all our amazing contributors.\n\nCodespaces is currently in limited beta. To learn more, see [About Codespaces](https://docs.github.com/en/github/developing-online-with-codespaces/about-codespaces).\n\nIf you have access to the beta, get started by [creating a codespace](https://docs.github.com/en/github/developing-online-with-codespaces/creating-a-codespace) for this repository.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 20.0791015625,
          "content": "Attribution-ShareAlike 4.0 International\r\n\r\n=======================================================================\r\n\r\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\r\ndoes not provide legal services or legal advice. Distribution of\r\nCreative Commons public licenses does not create a lawyer-client or\r\nother relationship. Creative Commons makes its licenses and related\r\ninformation available on an \"as-is\" basis. Creative Commons gives no\r\nwarranties regarding its licenses, any material licensed under their\r\nterms and conditions, or any related information. Creative Commons\r\ndisclaims all liability for damages resulting from their use to the\r\nfullest extent possible.\r\n\r\nUsing Creative Commons Public Licenses\r\n\r\nCreative Commons public licenses provide a standard set of terms and\r\nconditions that creators and other rights holders may use to share\r\noriginal works of authorship and other material subject to copyright\r\nand certain other rights specified in the public license below. The\r\nfollowing considerations are for informational purposes only, are not\r\nexhaustive, and do not form part of our licenses.\r\n\r\n     Considerations for licensors: Our public licenses are\r\n     intended for use by those authorized to give the public\r\n     permission to use material in ways otherwise restricted by\r\n     copyright and certain other rights. Our licenses are\r\n     irrevocable. Licensors should read and understand the terms\r\n     and conditions of the license they choose before applying it.\r\n     Licensors should also secure all rights necessary before\r\n     applying our licenses so that the public can reuse the\r\n     material as expected. Licensors should clearly mark any\r\n     material not subject to the license. This includes other CC-\r\n     licensed material, or material used under an exception or\r\n     limitation to copyright. More considerations for licensors:\r\n\twiki.creativecommons.org/Considerations_for_licensors\r\n\r\n     Considerations for the public: By using one of our public\r\n     licenses, a licensor grants the public permission to use the\r\n     licensed material under specified terms and conditions. If\r\n     the licensor's permission is not necessary for any reason--for\r\n     example, because of any applicable exception or limitation to\r\n     copyright--then that use is not regulated by the license. Our\r\n     licenses grant only permissions under copyright and certain\r\n     other rights that a licensor has authority to grant. Use of\r\n     the licensed material may still be restricted for other\r\n     reasons, including because others have copyright or other\r\n     rights in the material. A licensor may make special requests,\r\n     such as asking that all changes be marked or described.\r\n     Although not required by our licenses, you are encouraged to\r\n     respect those requests where reasonable. More considerations\r\n     for the public: \r\n\twiki.creativecommons.org/Considerations_for_licensees\r\n\r\n=======================================================================\r\n\r\nCreative Commons Attribution-ShareAlike 4.0 International Public\r\nLicense\r\n\r\nBy exercising the Licensed Rights (defined below), You accept and agree\r\nto be bound by the terms and conditions of this Creative Commons\r\nAttribution-ShareAlike 4.0 International Public License (\"Public\r\nLicense\"). To the extent this Public License may be interpreted as a\r\ncontract, You are granted the Licensed Rights in consideration of Your\r\nacceptance of these terms and conditions, and the Licensor grants You\r\nsuch rights in consideration of benefits the Licensor receives from\r\nmaking the Licensed Material available under these terms and\r\nconditions.\r\n\r\n\r\nSection 1 -- Definitions.\r\n\r\n  a. Adapted Material means material subject to Copyright and Similar\r\n     Rights that is derived from or based upon the Licensed Material\r\n     and in which the Licensed Material is translated, altered,\r\n     arranged, transformed, or otherwise modified in a manner requiring\r\n     permission under the Copyright and Similar Rights held by the\r\n     Licensor. For purposes of this Public License, where the Licensed\r\n     Material is a musical work, performance, or sound recording,\r\n     Adapted Material is always produced where the Licensed Material is\r\n     synched in timed relation with a moving image.\r\n\r\n  b. Adapter's License means the license You apply to Your Copyright\r\n     and Similar Rights in Your contributions to Adapted Material in\r\n     accordance with the terms and conditions of this Public License.\r\n\r\n  c. BY-SA Compatible License means a license listed at\r\n     creativecommons.org/compatiblelicenses, approved by Creative\r\n     Commons as essentially the equivalent of this Public License.\r\n\r\n  d. Copyright and Similar Rights means copyright and/or similar rights\r\n     closely related to copyright including, without limitation,\r\n     performance, broadcast, sound recording, and Sui Generis Database\r\n     Rights, without regard to how the rights are labeled or\r\n     categorized. For purposes of this Public License, the rights\r\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\r\n     Rights.\r\n\r\n  e. Effective Technological Measures means those measures that, in the\r\n     absence of proper authority, may not be circumvented under laws\r\n     fulfilling obligations under Article 11 of the WIPO Copyright\r\n     Treaty adopted on December 20, 1996, and/or similar international\r\n     agreements.\r\n\r\n  f. Exceptions and Limitations means fair use, fair dealing, and/or\r\n     any other exception or limitation to Copyright and Similar Rights\r\n     that applies to Your use of the Licensed Material.\r\n\r\n  g. License Elements means the license attributes listed in the name\r\n     of a Creative Commons Public License. The License Elements of this\r\n     Public License are Attribution and ShareAlike.\r\n\r\n  h. Licensed Material means the artistic or literary work, database,\r\n     or other material to which the Licensor applied this Public\r\n     License.\r\n\r\n  i. Licensed Rights means the rights granted to You subject to the\r\n     terms and conditions of this Public License, which are limited to\r\n     all Copyright and Similar Rights that apply to Your use of the\r\n     Licensed Material and that the Licensor has authority to license.\r\n\r\n  j. Licensor means the individual(s) or entity(ies) granting rights\r\n     under this Public License.\r\n\r\n  k. Share means to provide material to the public by any means or\r\n     process that requires permission under the Licensed Rights, such\r\n     as reproduction, public display, public performance, distribution,\r\n     dissemination, communication, or importation, and to make material\r\n     available to the public including in ways that members of the\r\n     public may access the material from a place and at a time\r\n     individually chosen by them.\r\n\r\n  l. Sui Generis Database Rights means rights other than copyright\r\n     resulting from Directive 96/9/EC of the European Parliament and of\r\n     the Council of 11 March 1996 on the legal protection of databases,\r\n     as amended and/or succeeded, as well as other essentially\r\n     equivalent rights anywhere in the world.\r\n\r\n  m. You means the individual or entity exercising the Licensed Rights\r\n     under this Public License. Your has a corresponding meaning.\r\n\r\n\r\nSection 2 -- Scope.\r\n\r\n  a. License grant.\r\n\r\n       1. Subject to the terms and conditions of this Public License,\r\n          the Licensor hereby grants You a worldwide, royalty-free,\r\n          non-sublicensable, non-exclusive, irrevocable license to\r\n          exercise the Licensed Rights in the Licensed Material to:\r\n\r\n            a. reproduce and Share the Licensed Material, in whole or\r\n               in part; and\r\n\r\n            b. produce, reproduce, and Share Adapted Material.\r\n\r\n       2. Exceptions and Limitations. For the avoidance of doubt, where\r\n          Exceptions and Limitations apply to Your use, this Public\r\n          License does not apply, and You do not need to comply with\r\n          its terms and conditions.\r\n\r\n       3. Term. The term of this Public License is specified in Section\r\n          6(a).\r\n\r\n       4. Media and formats; technical modifications allowed. The\r\n          Licensor authorizes You to exercise the Licensed Rights in\r\n          all media and formats whether now known or hereafter created,\r\n          and to make technical modifications necessary to do so. The\r\n          Licensor waives and/or agrees not to assert any right or\r\n          authority to forbid You from making technical modifications\r\n          necessary to exercise the Licensed Rights, including\r\n          technical modifications necessary to circumvent Effective\r\n          Technological Measures. For purposes of this Public License,\r\n          simply making modifications authorized by this Section 2(a)\r\n          (4) never produces Adapted Material.\r\n\r\n       5. Downstream recipients.\r\n\r\n            a. Offer from the Licensor -- Licensed Material. Every\r\n               recipient of the Licensed Material automatically\r\n               receives an offer from the Licensor to exercise the\r\n               Licensed Rights under the terms and conditions of this\r\n               Public License.\r\n\r\n            b. Additional offer from the Licensor -- Adapted Material.\r\n               Every recipient of Adapted Material from You\r\n               automatically receives an offer from the Licensor to\r\n               exercise the Licensed Rights in the Adapted Material\r\n               under the conditions of the Adapter's License You apply.\r\n\r\n            c. No downstream restrictions. You may not offer or impose\r\n               any additional or different terms or conditions on, or\r\n               apply any Effective Technological Measures to, the\r\n               Licensed Material if doing so restricts exercise of the\r\n               Licensed Rights by any recipient of the Licensed\r\n               Material.\r\n\r\n       6. No endorsement. Nothing in this Public License constitutes or\r\n          may be construed as permission to assert or imply that You\r\n          are, or that Your use of the Licensed Material is, connected\r\n          with, or sponsored, endorsed, or granted official status by,\r\n          the Licensor or others designated to receive attribution as\r\n          provided in Section 3(a)(1)(A)(i).\r\n\r\n  b. Other rights.\r\n\r\n       1. Moral rights, such as the right of integrity, are not\r\n          licensed under this Public License, nor are publicity,\r\n          privacy, and/or other similar personality rights; however, to\r\n          the extent possible, the Licensor waives and/or agrees not to\r\n          assert any such rights held by the Licensor to the limited\r\n          extent necessary to allow You to exercise the Licensed\r\n          Rights, but not otherwise.\r\n\r\n       2. Patent and trademark rights are not licensed under this\r\n          Public License.\r\n\r\n       3. To the extent possible, the Licensor waives any right to\r\n          collect royalties from You for the exercise of the Licensed\r\n          Rights, whether directly or through a collecting society\r\n          under any voluntary or waivable statutory or compulsory\r\n          licensing scheme. In all other cases the Licensor expressly\r\n          reserves any right to collect such royalties.\r\n\r\n\r\nSection 3 -- License Conditions.\r\n\r\nYour exercise of the Licensed Rights is expressly made subject to the\r\nfollowing conditions.\r\n\r\n  a. Attribution.\r\n\r\n       1. If You Share the Licensed Material (including in modified\r\n          form), You must:\r\n\r\n            a. retain the following if it is supplied by the Licensor\r\n               with the Licensed Material:\r\n\r\n                 i. identification of the creator(s) of the Licensed\r\n                    Material and any others designated to receive\r\n                    attribution, in any reasonable manner requested by\r\n                    the Licensor (including by pseudonym if\r\n                    designated);\r\n\r\n                ii. a copyright notice;\r\n\r\n               iii. a notice that refers to this Public License;\r\n\r\n                iv. a notice that refers to the disclaimer of\r\n                    warranties;\r\n\r\n                 v. a URI or hyperlink to the Licensed Material to the\r\n                    extent reasonably practicable;\r\n\r\n            b. indicate if You modified the Licensed Material and\r\n               retain an indication of any previous modifications; and\r\n\r\n            c. indicate the Licensed Material is licensed under this\r\n               Public License, and include the text of, or the URI or\r\n               hyperlink to, this Public License.\r\n\r\n       2. You may satisfy the conditions in Section 3(a)(1) in any\r\n          reasonable manner based on the medium, means, and context in\r\n          which You Share the Licensed Material. For example, it may be\r\n          reasonable to satisfy the conditions by providing a URI or\r\n          hyperlink to a resource that includes the required\r\n          information.\r\n\r\n       3. If requested by the Licensor, You must remove any of the\r\n          information required by Section 3(a)(1)(A) to the extent\r\n          reasonably practicable.\r\n\r\n  b. ShareAlike.\r\n\r\n     In addition to the conditions in Section 3(a), if You Share\r\n     Adapted Material You produce, the following conditions also apply.\r\n\r\n       1. The Adapter's License You apply must be a Creative Commons\r\n          license with the same License Elements, this version or\r\n          later, or a BY-SA Compatible License.\r\n\r\n       2. You must include the text of, or the URI or hyperlink to, the\r\n          Adapter's License You apply. You may satisfy this condition\r\n          in any reasonable manner based on the medium, means, and\r\n          context in which You Share Adapted Material.\r\n\r\n       3. You may not offer or impose any additional or different terms\r\n          or conditions on, or apply any Effective Technological\r\n          Measures to, Adapted Material that restrict exercise of the\r\n          rights granted under the Adapter's License You apply.\r\n\r\n\r\nSection 4 -- Sui Generis Database Rights.\r\n\r\nWhere the Licensed Rights include Sui Generis Database Rights that\r\napply to Your use of the Licensed Material:\r\n\r\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\r\n     to extract, reuse, reproduce, and Share all or a substantial\r\n     portion of the contents of the database;\r\n\r\n  b. if You include all or a substantial portion of the database\r\n     contents in a database in which You have Sui Generis Database\r\n     Rights, then the database in which You have Sui Generis Database\r\n     Rights (but not its individual contents) is Adapted Material,\r\n\r\n     including for purposes of Section 3(b); and\r\n  c. You must comply with the conditions in Section 3(a) if You Share\r\n     all or a substantial portion of the contents of the database.\r\n\r\nFor the avoidance of doubt, this Section 4 supplements and does not\r\nreplace Your obligations under this Public License where the Licensed\r\nRights include other Copyright and Similar Rights.\r\n\r\n\r\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\r\n\r\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\r\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\r\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\r\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\r\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\r\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\r\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\r\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\r\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\r\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\r\n\r\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\r\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\r\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\r\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\r\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\r\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\r\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\r\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\r\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\r\n\r\n  c. The disclaimer of warranties and limitation of liability provided\r\n     above shall be interpreted in a manner that, to the extent\r\n     possible, most closely approximates an absolute disclaimer and\r\n     waiver of all liability.\r\n\r\n\r\nSection 6 -- Term and Termination.\r\n\r\n  a. This Public License applies for the term of the Copyright and\r\n     Similar Rights licensed here. However, if You fail to comply with\r\n     this Public License, then Your rights under this Public License\r\n     terminate automatically.\r\n\r\n  b. Where Your right to use the Licensed Material has terminated under\r\n     Section 6(a), it reinstates:\r\n\r\n       1. automatically as of the date the violation is cured, provided\r\n          it is cured within 30 days of Your discovery of the\r\n          violation; or\r\n\r\n       2. upon express reinstatement by the Licensor.\r\n\r\n     For the avoidance of doubt, this Section 6(b) does not affect any\r\n     right the Licensor may have to seek remedies for Your violations\r\n     of this Public License.\r\n\r\n  c. For the avoidance of doubt, the Licensor may also offer the\r\n     Licensed Material under separate terms or conditions or stop\r\n     distributing the Licensed Material at any time; however, doing so\r\n     will not terminate this Public License.\r\n\r\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\r\n     License.\r\n\r\n\r\nSection 7 -- Other Terms and Conditions.\r\n\r\n  a. The Licensor shall not be bound by any additional or different\r\n     terms or conditions communicated by You unless expressly agreed.\r\n\r\n  b. Any arrangements, understandings, or agreements regarding the\r\n     Licensed Material not stated herein are separate from and\r\n     independent of the terms and conditions of this Public License.\r\n\r\n\r\nSection 8 -- Interpretation.\r\n\r\n  a. For the avoidance of doubt, this Public License does not, and\r\n     shall not be interpreted to, reduce, limit, restrict, or impose\r\n     conditions on any use of the Licensed Material that could lawfully\r\n     be made without permission under this Public License.\r\n\r\n  b. To the extent possible, if any provision of this Public License is\r\n     deemed unenforceable, it shall be automatically reformed to the\r\n     minimum extent necessary to make it enforceable. If the provision\r\n     cannot be reformed, it shall be severed from this Public License\r\n     without affecting the enforceability of the remaining terms and\r\n     conditions.\r\n\r\n  c. No term or condition of this Public License will be waived and no\r\n     failure to comply consented to unless expressly agreed to by the\r\n     Licensor.\r\n\r\n  d. Nothing in this Public License constitutes or may be interpreted\r\n     as a limitation upon, or waiver of, any privileges and immunities\r\n     that apply to the Licensor or You, including from the legal\r\n     processes of any jurisdiction or authority.\r\n\r\n\r\n=======================================================================\r\n\r\nCreative Commons is not a party to its public\r\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\r\nits public licenses to material it publishes and in those instances\r\nwill be considered the “Licensor.” The text of the Creative Commons\r\npublic licenses is dedicated to the public domain under the CC0 Public\r\nDomain Dedication. Except for the limited purpose of indicating that\r\nmaterial is shared under a Creative Commons public license or as\r\notherwise permitted by the Creative Commons policies published at\r\ncreativecommons.org/policies, Creative Commons does not authorize the\r\nuse of the trademark \"Creative Commons\" or any other trademark or logo\r\nof Creative Commons without its prior written consent including,\r\nwithout limitation, in connection with any unauthorized modifications\r\nto any of its public licenses or any other arrangements,\r\nunderstandings, or agreements concerning use of licensed material. For\r\nthe avoidance of doubt, this paragraph does not form part of the\r\npublic licenses.\r\n\r\nCreative Commons may be contacted at creativecommons.org.\r\n\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.013671875,
          "content": "# OWASP Web Security Testing Guide\n\n[![Contributions Welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/OWASP/wstg/issues)\n[![OWASP Flagship](https://img.shields.io/badge/owasp-flagship-brightgreen.svg)](https://owasp.org/projects/)\n[![Twitter Follow](https://img.shields.io/twitter/follow/owasp_wstg?style=social)](https://twitter.com/owasp_wstg)\n\n[![Creative Commons License](https://licensebuttons.net/l/by-sa/4.0/88x31.png)](https://creativecommons.org/licenses/by-sa/4.0/ \"CC BY-SA 4.0\")\n\nWelcome to the official repository for the Open Web Application Security Project® (OWASP®) Web Security Testing Guide (WSTG). The WSTG is a comprehensive guide to testing the security of web applications and web services. Created by the collaborative efforts of security professionals and dedicated volunteers, the WSTG provides a framework of best practices used by penetration testers and organizations all over the world.\n\nWe are currently working on release version 5.0. You can [read the current document here on GitHub](https://github.com/OWASP/wstg/tree/master/document).\n\nFor the last stable release, [check release 4.2](https://github.com/OWASP/wstg/releases/tag/v4.2). Also available [online](https://owasp.org/www-project-web-security-testing-guide/v42/).\n\n- [How To Reference WSTG Scenarios](#how-to-reference-wstg-scenarios)\n    - [Linking](#linking)\n- [Contributions, Feature Requests, and Feedback](#contributions-feature-requests-and-feedback)\n- [Chat With Us](#chat-with-us)\n- [Project Leaders](#project-leaders)\n- [Core Team](#core-team)\n- [Translations](#translations)\n\n## How To Reference WSTG Scenarios\n\nEach scenario has an identifier in the format `WSTG-<category>-<number>`, where: 'category' is a 4 character upper case string that identifies the type of test or weakness, and 'number' is a zero-padded numeric value from 01 to 99. For example:`WSTG-INFO-02` is the second Information Gathering test.\n\nThe identifiers may change between versions. Therefore, it is preferable that other documents, reports, or tools use the format: `WSTG-<version>-<category>-<number>`, where: 'version' is the version tag with punctuation removed. For example: `WSTG-v42-INFO-02` would be understood to mean specifically the second Information Gathering test from version 4.2.\n\nIf identifiers are used without including the `<version>` element, they should be assumed to refer to the latest Web Security Testing Guide content. As the guide grows and changes this becomes problematic, which is why writers or developers should include the version element.\n\n### Linking\n\nLinking to Web Security Testing Guide scenarios should be done using versioned links not `stable` or `latest`, which will change with time. However, it is the project team's intention that versioned links do not change. For example: `https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server.html`. Note: the `v42` element refers to version 4.2.\n\n## Contributions, Feature Requests, and Feedback\n\nWe are actively inviting new contributors! To start, read the [contribution guide](CONTRIBUTING.md).\n\nFirst time here? Here are [GitHub's suggestions for first-time contributors](https://github.com/OWASP/wstg/contribute) to this repository.\n\nThis project is only possible thanks to the work of many dedicated volunteers. Everyone is encouraged to help in ways large and small. Here are a few ways you can help:\n\n- Read the current content and help us fix any spelling mistakes or grammatical errors.\n- Help with [translation](CONTRIBUTING.md#translation) efforts.\n- Choose an existing issue and submit a pull request to fix it.\n- Open a new issue to report an opportunity for improvement.\n\nTo learn how to contribute successfully, read the [contribution guide](CONTRIBUTING.md).\n\nSuccessful contributors appear on [the project's list of authors, reviewers, or editors](document/1-Frontispiece/README.md).\n\n## Chat With Us\n\nWe're easy to find on Slack:\n\n1. Join the OWASP Group Slack with this [invitation link](https://owasp.org/slack/invite).\n2. Join this project's [channel, #testing-guide](https://app.slack.com/client/T04T40NHX/CJ2QDHLRJ).\n\nFeel free to ask questions, suggest ideas, or share your best recipes.\n\nYou can @ us on Twitter [@owasp_wstg](https://twitter.com/owasp_wstg).\n\nYou can also join our [Google Group](https://groups.google.com/a/owasp.org/forum/#!forum/testing-guide-project).\n\n## Project Leaders\n\n- [Rick Mitchell](https://github.com/kingthorin)\n- [Elie Saad](https://github.com/ThunderSon)\n\n## Core Team\n\n- [Rejah Rehim](https://github.com/rejahrehim)\n- [Victoria Drake](https://github.com/victoriadrake)\n\n## Translations\n\n- [Portuguese-BR](https://github.com/doverh/wstg-translations-pt)\n- [Russian](https://github.com/andrettv/WSTG/tree/master/WSTG-ru)\n- [French](https://github.com/clallier94/wstg-translation-fr)\n- [Persian (Farsi)](https://github.com/whoismh11/owasp-wstg-fa)\n\n---\n\nOpen Web Application Security Project and OWASP are registered trademarks of the OWASP Foundation, Inc.\n"
        },
        {
          "name": "REST_CS_Migrate.md",
          "type": "blob",
          "size": 6.126953125,
          "content": "# REST Assessment Cheat Sheet\n\n## About RESTful Web Services\n\nWeb Services are an implementation of web technology used for machine to machine communication. As such they are used for Inter application communication, Web 2.0 and Mashups and by desktop and mobile applications to call a server.\n\nRESTful web services (often called simply REST) are a light weight variant of Web Services based on the RESTful design pattern. In practice RESTful web services utilizes HTTP requests that are similar to regular HTTP calls in contrast with other Web Services technologies such as SOAP which utilizes a complex protocol.\n\n## Key relevant properties of RESTful web services\n\n- Use of HTTP methods (`GET`, `POST`, `PUT` and `DELETE`) as the primary verb for the requested operation.\n- Non-standard parameters specifications:\n    - As part of the URL.\n    - In headers.\n- Structured parameters and responses using JSON or XML in a parameter values, request body or response body. Those are required to communicate machine useful information.\n- Custom authentication and session management, often utilizing custom security tokens: this is needed as machine to machine communication does not allow for login sequences.\n- Lack of formal documentation. A [proposed standard for describing RESTful web services called WADL](https://www.w3.org/Submission/wadl/) was submitted by Sun Microsystems but was never officially adapted.\n\n## The challenge of security testing RESTful web services\n\n- Inspecting the application does not reveal the attack surface, I.e. the URLs and parameter structure used by the RESTful web service. The reasons are:\n    - No application utilizes all the available functions and parameters exposed by the service\n    - Those used are often activated dynamically by client-side code and not as links in pages.\n    - The client application is often not a web application and does not allow inspection of the activating link or even relevant code.\n- The parameters are none standard making it hard to determine what is just part of the URL or a constant header and what is a parameter worth [fuzzing](https://owasp.org/www-community/Fuzzing).\n- As a machine interface the number of parameters used can be very large, for example a JSON structure may include dozens of parameters. [fuzzing](https://owasp.org/www-community/Fuzzing) each one significantly lengthen the time required for testing.\n- Custom authentication mechanisms require reverse engineering and make popular tools not useful as they cannot track a login session.\n\n## How to pentest a RESTful web service\n\nDetermine the attack surface through documentation - RESTful pen testing might be better off if some level of white box testing is allowed and you can get information about the service.\n\nThis information will ensure fuller coverage of the attack surface. Such information to look for:\n\n- Formal service description - While for other types of web services such as SOAP a formal description, usually in WSDL is often available, this is seldom the case for REST. That said, either WSDL 2.0 or WADL can describe REST and are sometimes used.\n- A developer guide for using the service may be less detailed but will commonly be found, and might even be considered *black box*.\n- Application source or configuration - in many frameworks, including dotNet ,the REST service definition might be easily obtained from configuration files rather than from code.\n\nCollect full requests using a [proxy](https://www.zaproxy.org/) - while always an important pen testing step, this is more important for REST based applications as the application UI may not give clues on the actual attack surface.\n\nNote that the proxy must be able to collect full requests and not just URLs as REST services utilize more than just GET parameters.\n\nAnalyze collected requests to determine the attack surface:\n\n- Look for non-standard parameters:\n    - Look for abnormal HTTP headers - those would many times be header based parameters.\n    - Determine if a URL segment has a repeating pattern across URLs. Such patterns can include a date, a number or an ID like string and indicate that the URL segment is a URL embedded parameter.\n        - For example: `https://server/srv/2013-10-21/use.php`\n    - Look for structured parameter values - those may be JSON, XML or a non-standard structure.\n    - If the last element of a URL does not have an extension, it may be a parameter. This is especially true if the application technology normally uses extensions or if a previous segment does have an extension.\n        - For example: `https://server/svc/Grid.asmx/GetRelatedListItems`\n    - Look for highly varying URL segments - a single URL segment that has many values may be parameter and not a physical directory.\n        - For example if the URL `https://server/src/XXXX/page` repeats with hundreds of value for `XXXX`, chances `XXXX` is a parameter.\n\nVerify non-standard parameters: in some cases (but not all), setting the value of a URL segment suspected of being a parameter to a value expected to be invalid can help determine if it is a path elements of a parameter. If a path element, the web server will return a *404* message, while for an invalid value to a parameter the answer would be an application level message as the value is legal at the web server level.\n\nAnalyzing collected requests to optimize [fuzzing](https://owasp.org/www-community/Fuzzing) - after identifying potential parameters to fuzz, analyze the collected values for each to determine:\n\n- Valid vs. invalid values, so that [fuzzing](https://owasp.org/www-community/Fuzzing) can focus on marginal invalid values.\n    - For example sending *0* for a value found to be always a positive integer.\n- Sequences allowing to fuzz beyond the range presumably allocated to the current user.\n\nLastly, when [fuzzing](https://owasp.org/www-community/Fuzzing), don't forget to emulate the authentication mechanism used.\n\n## Related Resources\n\n- [REST Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html) - the other side of this cheat sheet\n- [RESTful services, web security blind spot](https://www.youtube.com/watch?v=pWq4qGLAZHI) - avideo presentation elaborating on most of the topics on this cheat sheet.\n"
        },
        {
          "name": "Testing_for_APIs.md",
          "type": "blob",
          "size": 6.8779296875,
          "content": "# API Testing\n\nWeb APIs have gained a lot of popularity as they allow third-party programs to interact with sites in a more efficient and easy way. In this guide, we will discuss some basic concepts about APIs and the way to test security for APIs.\n\n## Background Concepts\n\nREST (Representational State Transfer) is an architecture that is implemented while developer design APIs.\nWeb application APIs following the REST style are called REST API.\nREST APIs use URIs (Uniform Resource Identifiers) to access resources. The generic URI syntax as defined in [RFC3986](https://tools.ietf.org/html/rfc3986) as below:\n\n> URI = scheme \"://\" authority \"/\" path [ \"?\" query ] [ \"#\" fragment ]\n\nWe are interested in the path of URI as the relationship between user and resources.\nFor example, `https://api.test.xyz/admin/testing/report`, this shows report of testing, there is relationship between user admin and their reports.\n\nThe path of any URI will define REST API resource model, resources are separated by a forward slash and based on Top-Down design.\nFor example:\n\n- `https://api.test.xyz/admin/testing/report`\n- `https://api.test.xyz/admin/testing/`\n- `https://api.test.xyz/admin/`\n\nREST API requests follow the [HTTP Request Methods](https://tools.ietf.org/html/rfc7231#section-4) defined in [RFC7231](https://tools.ietf.org/html/rfc7231)\n\n| Methods | Description                                   |\n|---------|-----------------------------------------------|\n| GET     | Get the representation of resource’s state    |\n| POST    | Create a new resource                         |\n| PUT     | Update a resource                             |\n| DELETE  | Remove a resource                             |\n| HEAD    | Get metadata associated with resource’s state |\n| OPTIONS | List available methods                        |\n\nREST APIs use the response status code of HTTP response message to notify the client about their request’s result.\n\n| Response Code | Response Message      | Description                                                                                            |\n|---------------|-----------------------|--------------------------------------------------------------------------------------------------------|\n| 200           | OK                    | Success while processing client's request                                                              |\n| 201           | Created               | New resource created                                                                                   |\n| 301           | Moved Permanently     | Permanent redirection                                                                                  |\n| 304           | Not Modified          | Caching related response that returned when the client has the same copy of the resource as the server |\n| 307           | Temporary Redirect    | Temporary redirection of resource                                                                      |\n| 400           | Bad Request           | Malformed request by the client                                                                        |\n| 401           | Unauthorized          | Client is not allowed to make requests or access a particular resource                                 |\n| 402           | Forbidden             | Client is forbidden to access the resource                                                             |\n| 404           | Not Found             | Resource doesn't exist or incorrect based on the request                                               |\n| 405           | Method Not Allowed    | Invalid method or unknown method used                                                                  |\n| 500           | Internal Server Error | Server failed to process request due to an internal error                                              |\n\nHTTP headers are used in requests and responses.\nWhile making API requests, Content-Type header is used and is set to `application/json` because the message body contains JSON data format.\n\nWeb authentication types are based on:\n\n- Bearer Tokens: Identified by the `Authorization: Bearer <token>` header. Once a user logs in, they are provided with a bearer token that is sent on every request in order to authenticate and authorize the user to access OAuth 2.0 protected resources.\n- HTTP Cookies: Identified by the `Cookie: <name>=<unique value>` header. On user login success, the server replies with a `Set-Cookie` header specifying its name and unique value. On every request, the browser automatically appends it to the requests going to that server, following [SOP](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy).\n- Basic HTTP authentication: Identified by the `Authorization: Basic <base64 value>` header. Once a user is trying to login, the request is sent with the mentioned header containing the a base64 value, having its content as `username:password`. This is one of the weakest forms of authentication as it transmits the username and password on every request in an encoded manner, which can be easily retrieved.\n\n## How to Test\n\n### Generic Testing Method\n\nStep 1: List endpoint and make different request method: Login with user profile and use a spider tool to list the endpoints of this role.\nTo examine the endpoints, you will need to make different request methods and observe how the API behaves.\n\nStep 2: Exploit bugs - As know how to list endpoints and examine endpoints with HTTP methods at step 1, we will find some way to exploit bug. Some testing strategies are below:\n\n- IDOR testing\n- Privilege escalation\n\n### Specific Testing – (Token-Based) Authentication\n\nToken-based authentication is implemented by sending a signed token (verified by the server) with each HTTP request.\n\nThe most commonly used token format is the JSON Web Token (JWT), defined in [RFC7519](https://tools.ietf.org/html/rfc7519). The [Testing JSON Web Tokens](/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/10-Testing_JSON_Web_Tokens.md) guide contains further details on how to test JWTs.\n\n## Related Test Cases\n\n- [IDOR](https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.md)\n- [Privilege escalation](https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/05-Authorization_Testing/03-Testing_for_Privilege_Escalation.md)\n- All [Session Management](https://github.com/OWASP/wstg/tree/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing) test cases\n- [Testing JSON Web Tokens](/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/10-Testing_JSON_Web_Tokens.md)\n\n## Tools\n\n- ZAP\n- Burp suite\n\n## References\n\n- [REST HTTP Methods](https://restfulapi.net/http-methods/)\n- [RFC3986 URI](https://tools.ietf.org/html/rfc3986)\n- [JWT](https://jwt.io/)\n- [Cracking JWT](https://www.sjoerdlangkemper.nl/2016/09/28/attacking-jwt-authentication/)\n"
        },
        {
          "name": "checklists",
          "type": "tree",
          "content": null
        },
        {
          "name": "document",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0791015625,
          "content": "{\n  \"name\": \"wstg\",\n  \"version\": \"1.0.1\",\n  \"description\": \"[![Contributions Welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/OWASP/wstg/issues) [![OWASP Flagship](https://img.shields.io/badge/owasp-flagship-brightgreen.svg)](https://www.owasp.org/index.php/OWASP_Project_Inventory#tab=Flagship_Projects)\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"puppeteer\": \"^19.2.2\"\n  },\n  \"devDependencies\": {\n    \"markdownlint-cli\": \"^0.31.1\"\n  },\n  \"scripts\": {\n    \"pdfgen\": \"bash ./.github/pdf/scripts/make-pdf.sh\",\n    \"jsongen\": \"bash ./.github/json/scripts/make-json.sh\",\n    \"xlsxgen\": \"python ./.github/xlsx/scripts/build-checklist.py\",\n    \"publishxlsx\" :\"python ./.github/xlsx/scripts/upload-to-google-drive.py\",\n    \"epubgen\": \"bash ./.github/epub/scripts/make-epub.sh\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/OWASP/wstg.git\"\n  },\n  \"author\": \"OWASP\",\n  \"license\": \"CC-BY-SA-4.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/OWASP/wstg/issues\"\n  },\n  \"homepage\": \"https://github.com/OWASP/wstg#readme\"\n}\n"
        },
        {
          "name": "style_guide.md",
          "type": "blob",
          "size": 10.8798828125,
          "content": "# Style Guide\n\nThe Web Security Testing Guide (WSTG) is a well-known document trusted by security professionals and organizations all over the world. These guidelines help ensure it reflects well on its many contributors and the security community.\n\nTo maintain the quality of the WSTG, please follow these general rules.\n\n1. Be factual, specific, and ensure paragraphs are focused on their heading.\n2. Ensure information is creditable and up to date. Provide links and citations where appropriate.\n3. Avoid duplicating content. To refer to existing content, link to it inline.\n\n## Write for the Reader\n\nReaders of the WSTG come from many different countries and have varying levels of technical expertise. Write for an international audience with a basic technical background. Use words that are likely understood by a non-native English speaker. Use short sentences that are easy to understand.\n\nThe web tool [Hemingway](https://hemingwayapp.com/) can help you write with clarity.\n\n## Formatting\n\nUse consistent formatting to help us review and publish content, and help readers to digest information. Write all content using [Markdown syntax](https://guides.github.com/features/mastering-markdown/#examples).\n\nPlease follow these further guidelines for formatting.\n\n### Article Template\n\nWe use an article template to help ensure topics are complete and easy to understand. Please use the [template materials](template) to structure new content.\n\n### Project Folder Structure\n\nWhen adding articles and images, please place articles in the appropriate sub-section directory. Place images in an `images/` folder within the article directory. Here is an example of the project structure:\n\n```sh\ndocument/\n ├───0_Foreword/\n │   └───0_Foreword.md\n ├───1_Frontispiece/\n │   ├───images/\n │   │   └───example.jpg\n │   └───1_Frontispiece.md\n ├───2_Introduction/\n │   ├───images/\n │   │   └───example.jpg\n │   └───2_Introduction.md\n ├───3_The_OWASP_Testing_Framework/\n │   ├───images/\n │   │   └───example.jpg\n │   └───3_The_OWASP_Testing_Framework.md\n ├───4_Web_Application_Security_Testing/\n │   ├───4.1_Introduction_and_Objectives/\n │   │   └───4.1_Testing_Introduction_and_Objectives.md\n │   ├───4.2_Information_Gathering/\n │   │   ├───images/\n │   │   │   └───example.jpg\n │   │   ├───4.2_Testing_Information_Gathering.md\n │   │   └───4.2.1_Conduct_Search_Engine_Discovery.md\n\n```\n\n### Code Syntax Highlighting\n\nUse code fences with syntax highlighting for snippets. For example:\n\n```md\n    ```javascript\n    if (isAwesome){\n        return true\n    }\n    ```\n```\n\n### Caption Images\n\nCaption images and figures using title case. Use the section and sub-section numbers, followed by the figure position in the document. Use the format `Figure <section>.<sub-section>-<position>: Caption Title`.\n\nFor example, caption the first image shown in section 4.8, sub-section 19 as follows:\n\n```md\n![SSTI XVWA Example](images/SSTI_XVWA.jpeg)\\\n*Figure 4.7.19-1: SSTI XVWA Example*\n```\n\n### Inline Links\n\nAdd links inline. Use words in the sentence to describe them, or include their specific title. For example:\n\n```md\nThis project provides a [style guide](style_guide.md). Some style choices are taken from the [Chicago Manual of Style](https://www.chicagomanualofstyle.org/).\n```\n\n### Inline References\n\nFor resources where a link is not available, such as a whitepaper or book, we prefer a conversational in-line reference rather than any academic-styled citation. Work the title of the resource as well as its author into your text. For example:\n\n> There are three possible cases: only the whale exists, only the petunias exist, or both the whale and petunias exist simultaneously. These possibilities are referenced in a series of books entitled *The Hitchhiker's Guide to the Galaxy,* by Douglas Adams.\n\nThis format has the advantage of continuing the flow of the article and not inviting readers to jump from paragraph to paragraph, looking for an asterisk, or to another location to find a reference list. It's also easy to read and to maintain since it appears in just one place.\n\n### Bold, Italic, and Underline\n\nDo not use bold, italic, or underlined text for emphasis.\n\nYou may italicize a word when referring to the word itself, though the need for this in technical writing is rare. For examples, see the section [Use Correct Words](#use-correct-words). Use asterisks: `*italic*`.\n\n## Language and Grammar\n\nTo make the WSTG consistent and pleasant to read, please check your spelling (we use American English) and use proper grammar.\n\nThe sections below describe specific style choices to follow.\n\n### Title Case\n\nUse title case for headings, following the [Chicago Manual of Style](https://www.chicagomanualofstyle.org/book/ed17/frontmatter/toc.html). The \"Chicago\" tab on the website [Capitalize My Title](https://capitalizemytitle.com/#Chicago) may help.\n\n### Active Voice\n\nAvoid using passive voice. For example:\n\n> Bad: \"Vulnerabilities are found by running tests.\"  \n> Good: \"Run tests to find vulnerabilities.\"  \n\n### Second Person\n\nDo not write in the first or third person, such as by using *I* or *he*. When giving technical instruction, address the reader in the second person. Use a [zero or implied subject](https://en.wikipedia.org/wiki/Subject_(grammar)#Forms_of_the_subject), or if you must, use *you*.\n\n> Bad: \"He/she/an IT monkey would run this code to test...\"  \n> Better: \"By running this code, you can test...\"  \n> Best: \"Run this code to test...\"\n\n### Numbering Conventions\n\nFor numbers from zero to ten, write the word. For numbers higher than ten, use integers. For example:\n\n> One broken automated test finds 42 errors if you run it ten times.\n\nDescribe simple fractions in words. For example:\n\n> Half of all software developers like petunias, and a third of them like whales.\n\nWhen describing an approximate magnitude of monetary value, write the whole word and do not abbreviate. For example:\n\n> Bad: \"Security testing saves companies $18M in beer every year.\"  \n> Good: \"Security testing saves companies eighteen million dollars in beer every year.\"\n\nFor specific monetary value, use currency symbols and integers. For example:\n\n> A beer costs $6.75 today, and $8.25 tomorrow.\n\n### Abbreviations\n\nExplain abbreviations the first time they appear in your document. Capitalize the appropriate words to indicate the abbreviated form. For example:\n\n> This project contains the source code for the Web Security Testing Guide (WSTG). The WSTG is a nice and accurate book.\n\n### Lists and Punctuation\n\nUse bulleted lists when the order is unimportant. Use numbered lists for sequential steps. For each line, capitalize the first word. If the line is a sentence or completes a sentence, end with a period. For example:\n\n> Testing this scenario will:\n>\n> - Make the application safer.\n> - Improve overall security posture.\n> - Keep customers happy.\n>\n> To test this scenario:\n>\n> 1. Copy the code.\n> 2. Open a terminal.\n> 3. Run the code as root.\n>\n> Here are some foods to snack on while testing.\n>\n> - Apples\n> - Beef jerky\n> - Chocolate\n\nFor lists in a sentence, use serial or [Oxford commas](https://www.grammarly.com/blog/what-is-the-oxford-comma-and-why-do-people-care-so-much-about-it/). For example:\n\n> Test the application using automated tests, static code review, and penetration tests.\n\n### Use Correct Words\n\nThe following section covers some frequently misused words and instructions on how to correctly use them.\n\n#### *and/or*\n\nWhile sometimes used in legal documents, *and/or* leads to ambiguity and confusion in technical writing. Instead, use *or*, which in the English language includes *and*. For example:\n\n> Bad: \"The code will output an error number and/or description.\"  \n> Good: \"The code will output an error number or description.\"\n\nThe latter sentence does not exclude the possibility of having both an error number and description.\n\nIf you need to specify all possible outcomes, use a list:\n\n> \"The code will output an error number, or a description, or both.\"\n\n#### *frontend, backend*\n\nWhile it's true that the English language evolves over time, these are not yet words.\n\nWhen referring to nouns, use *front end* and *back end*. For example:\n\n> Security is equally important on the front end as it is on the back end.\n\nAs a descriptive adverb, use the hyphenated *front-end* and *back-end*.\n\n> Both front-end developers and back-end developers are responsible for application security.\n\n#### *whitebox*, *blackbox*, *greybox*\n\nThese are not words.\n\nAs nouns, use *white box*, *black box*, and *grey box*. These nouns rarely appear in connection with cybersecurity.\n\n> My cat enjoys jumping into that grey box.\n\nAs adverbs, use the hyphenated *white-box*, *black-box*, and *grey-box*. Do not use capitalization unless the words are in a title.\n\n> While white-box testing involves knowledge of source code, black-box testing does not. A grey-box test is somewhere in-between.\n\n#### *ie*, *eg*\n\nThese are letters.\n\nThe abbreviation *ie* refers to the Latin `id est`, which means \"in other words.\" The abbreviation *eg* is for `exempli gratia`, translating to \"for example.\" To use these in a sentence:\n\n> Write using proper English, i.e. correct spelling and grammar. Use common words over uncommon ones, e.g. \"learn\" instead of \"glean.\"\n\n#### *etc*\n\nThese are also letters.\n\nThe Latin phrase *et cetera* translates to \"and the rest.\" It is abbreviated and typically placed at the end of a list that seems redundant to complete:\n\n> WSTG authors like rainbow colors, such as red, yellow, green, etc.\n\nIn technical writing, the use of *etc* is problematic. It assumes that the reader knows what you're talking about, and they may not. Violet is one of the colors of the rainbow, but the example above does not explicitly tell you if violet is a color that WSTG authors like.\n\nIt is better to be explicit and thorough than to make assumptions of the reader. Only use *etc* to avoid completing a list that was given in full earlier in the document.\n\n#### *...* (ellipsis)\n\nThe ellipsis punctuation mark can indicate that words have been left out of a quote:\n\n> Linus Torvalds once said, \"Once you realize that documentation should be laughed at... THEN, and only then, have you reached the level where you can safely read it and try to use it to actually implement a driver. \"\n\nAs long as the omission does not change the meaning of the quote, this is acceptable usage of ellipsis in the WSTG.\n\nAll other uses of ellipsis, such as to indicate an unfinished thought, are not.\n\n#### *ex*\n\nWhile this is a word, it is likely not the word you are looking for. The word *ex* has particular meaning in the fields of finance and commerce, and may refer to a person if you are discussing your past relationships. None of these topics should appear in the WSTG.\n\nThe abbreviation may be used to mean \"example\" by lazy writers. Please don't be lazy, and write *example* instead.\n"
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}