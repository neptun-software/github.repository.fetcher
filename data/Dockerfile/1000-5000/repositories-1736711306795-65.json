{
  "metadata": {
    "timestamp": 1736711306795,
    "page": 65,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjY4",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "geekcell/docker-compose-nodejs-examples",
      "stars": 1028,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "**/node_modules\n**/package-lock.json\n\n.sass-cache\n!.gitkeep\n03-express-gulp-watch/app/public/stylesheets/style.css\n03-express-gulp-watch/app/public/stylesheets/style.css.map"
        },
        {
          "name": "00-basic-express-generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "01-express-nodemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "02-express-redis-nodemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2023 Geek Cell\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5302734375,
          "content": "# Getting started with Docker Compose and Nodejs\n\n## Motivation\n\n[Docker Compose](http://docs.docker.com/compose/) is an awesome tool for creating isolated development environments with [Docker](http://docker.com) by using simple configurations with [YAML](http://www.yaml.org/). It's clean and easy enough to wrap your head around, even if you are new to Docker.\n\nIf you're like us, you're using a development server like [nodemon](https://github.com/remy/nodemon) that watches all your file changes and reloads your app. Bringing this workflow over to Docker Compose is a bit tricky. We hope the following real world examples will save you from headaches while trying to figure out how to (pragmatically) use Docker Compose for your Nodejs apps.\n\n## Examples\n\n### Basic skeleton with Express app generator\nhttps://github.com/geekcell/docker-compose-nodejs-examples/tree/main/00-basic-express-generator\n\n### Express app with nodemon development server\nhttps://github.com/geekcell/docker-compose-nodejs-examples/tree/main/01-express-nodemon\n\n### Express app with Redis and nodemon development server\nhttps://github.com/geekcell/docker-compose-nodejs-examples/tree/main/02-express-redis-nodemon\n\n## Maintainers\n\nGeek Cell\n\n* Twitter: [@thegeekcell](https://twitter.com/thegeekcell)\n* Web: [https://geekcell.io](https://geekcell.io)\n\n### Previous Maintainer\n\nPascal Cremer\n\n* Email: <hello@codenugget.co>\n* Twitter: [@b00gizm](https://twitter.com/b00gizm)\n* Web: [http://codenugget.co](http://codenugget.co)\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n"
        }
      ]
    }
  ]
}