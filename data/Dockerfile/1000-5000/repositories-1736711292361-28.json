{
  "metadata": {
    "timestamp": 1736711292361,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "crazy-max/docker-jetbrains-license-server",
      "stars": 1639,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2021484375,
          "content": "# editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03125,
          "content": "/*.sh linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.3056640625,
          "content": "# syntax=docker/dockerfile:1\n\nARG JLS_VERSION=39687\nARG JLS_SHA256=bcb5fa802993894c61bc4da96ffd823cbb90a3151ab4da57ae7cc8c4301d3eab\nARG ALPINE_VERSION=3.21\n\nFROM --platform=$BUILDPLATFORM alpine:${ALPINE_VERSION} AS src\nRUN apk add --update --no-cache curl zip\nWORKDIR /src/jls\nARG JLS_SHA256\nRUN <<EOT\n  set -ex\n  curl -L \"https://download.jetbrains.com/lcsrv/license-server-installer.zip\" -o \"/tmp/jls.zip\"\n  echo \"$JLS_SHA256  /tmp/jls.zip\" | sha256sum -c - | grep OK\n  unzip \"/tmp/jls.zip\" -d .\n  chmod a+x ./bin/license-server.sh\nEOT\n\nFROM alpine:${ALPINE_VERSION}\n\nENV JLS_PATH=\"/opt/jetbrains-license-server\" \\\n  TZ=\"UTC\" \\\n  PUID=\"1000\" \\\n  PGID=\"1000\"\n\nRUN apk add --update --no-cache \\\n    bash \\\n    ca-certificates \\\n    openjdk11-jre \\\n    openssl \\\n    shadow \\\n    tzdata \\\n  && mkdir -p /data \\\n  && addgroup -g ${PGID} jls \\\n  && adduser -u ${PUID} -G jls -h /data -s /bin/bash -D jls\n\nCOPY --from=crazymax/yasu:latest / /\nCOPY --from=src /src/jls $JLS_PATH\n\nRUN ln -sf \"$JLS_PATH/bin/license-server.sh\" \"/usr/local/bin/license-server\" \\\n  && chown -R jls:jls /data \"$JLS_PATH\"\n\nCOPY entrypoint.sh /entrypoint.sh\n\nEXPOSE 8000\nWORKDIR /data\nVOLUME [ \"/data\" ]\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ \"/usr/local/bin/license-server\", \"run\" ]\n\nHEALTHCHECK --interval=10s --timeout=5s \\\n  CMD license-server status || exit 1\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2018-2024 CrazyMax\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.2099609375,
          "content": "<p align=\"center\"><a href=\"https://github.com/crazy-max/docker-jetbrains-license-server\" target=\"_blank\"><img height=\"128\" src=\"https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/.github/docker-jetbrains-license-server.jpg\"></a></p>\n\n<p align=\"center\">\n  <a href=\"https://hub.docker.com/r/crazymax/jetbrains-license-server/tags?page=1&ordering=last_updated\"><img src=\"https://img.shields.io/github/v/tag/crazy-max/docker-jetbrains-license-server?label=version&style=flat-square\" alt=\"Latest Version\"></a>\n  <a href=\"https://github.com/crazy-max/docker-jetbrains-license-server/actions?workflow=build\"><img src=\"https://img.shields.io/github/actions/workflow/status/crazy-max/docker-jetbrains-license-server/build.yml?branch=master&?label=build&logo=github&style=flat-square\" alt=\"Build Status\"></a>\n  <a href=\"https://hub.docker.com/r/crazymax/jetbrains-license-server/\"><img src=\"https://img.shields.io/docker/stars/crazymax/jetbrains-license-server.svg?style=flat-square&logo=docker\" alt=\"Docker Stars\"></a>\n  <a href=\"https://hub.docker.com/r/crazymax/jetbrains-license-server/\"><img src=\"https://img.shields.io/docker/pulls/crazymax/jetbrains-license-server.svg?style=flat-square&logo=docker\" alt=\"Docker Pulls\"></a>\n  <br /><a href=\"https://github.com/sponsors/crazy-max\"><img src=\"https://img.shields.io/badge/sponsor-crazy--max-181717.svg?logo=github&style=flat-square\" alt=\"Become a sponsor\"></a>\n  <a href=\"https://www.paypal.me/crazyws\"><img src=\"https://img.shields.io/badge/donate-paypal-00457c.svg?logo=paypal&style=flat-square\" alt=\"Donate Paypal\"></a>\n</p>\n\n## About\n\n[JetBrains License Server](https://www.jetbrains.com/help/license_server/getting_started.html)\nDocker image.\n\n> [!TIP]\n> Want to be notified of new releases? Check out ðŸ”” [Diun (Docker Image Update Notifier)](https://github.com/crazy-max/diun)\n> project!\n\n___\n\n* [Features](#features)\n* [Build locally](#build-locally)\n* [Image](#image)\n* [Environment variables](#environment-variables)\n* [Volumes](#volumes)\n* [Ports](#ports)\n* [Usage](#usage)\n  * [Docker Compose](#docker-compose)\n  * [Command line](#command-line)\n* [Upgrade](#upgrade)\n* [Notes](#notes)\n  * [Error 403 Passed value of header \"Host\" is not allowed](#error-403-passed-value-of-header-host-is-not-allowed)\n* [Contributing](#contributing)\n* [License](#license)\n\n## Features\n\n* Run as non-root user\n* Multi-platform image\n* License server completely customizable via environment variables\n* Registration data and configuration in a single directory\n* [msmtpd SMTP relay](https://github.com/crazy-max/docker-msmtpd) image to send emails\n* [Traefik](https://github.com/containous/traefik-library-image) as reverse proxy and creation/renewal of Let's Encrypt certificates (see [this template](examples/traefik))\n\n## Build locally\n\n```shell\ngit clone https://github.com/crazy-max/docker-jetbrains-license-server.git\ncd docker-jetbrains-license-server\n\n# Build image and output to docker (default)\ndocker buildx bake\n\n# Build multi-platform image\ndocker buildx bake image-all\n```\n\n## Image\n\n| Registry                                                                                                            | Image                                        |\n|---------------------------------------------------------------------------------------------------------------------|----------------------------------------------|\n| [Docker Hub](https://hub.docker.com/r/crazymax/jetbrains-license-server/)                                           | `crazymax/jetbrains-license-server`          |\n| [GitHub Container Registry](https://github.com/users/crazy-max/packages/container/package/jetbrains-license-server) | `ghcr.io/crazy-max/jetbrains-license-server` |\n\n## Environment variables\n\n* `TZ`: The timezone assigned to the container (default `UTC`)\n* `PUID`: JLS UID (default `1000`)\n* `PGID`: JLS GID (default `1000`)\n* `JLS_VIRTUAL_HOSTS`: [Virtual hosts](https://www.jetbrains.com/help/license_server/setting_host_and_port.html#d1010e63) where license server will be available (comma delimited for several hosts)\n* `JLS_CONTEXT`:  [Context path](https://www.jetbrains.com/help/license_server/setting_host_and_port.html#d1010e63) used by the license server (default `/`)\n* `JLS_PROXY_TYPE`: Type of [proxy](https://www.jetbrains.com/help/license_server/configuring_proxy_settings.html) to use. Can be `http` or `https` (default `https`)\n* `JLS_PROXY_HOST`: The host name of your proxy server\n* `JLS_PROXY_PORT`: The port number that the proxy server listens to\n* `JLS_PROXY_USER`: Username to connect to the proxy server (no auth if empty)\n* `JLS_PROXY_PASSWORD`: Password to connect to the proxy server (no auth if empty)\n* `JLS_ACCESS_CONFIG`: JSON file to configure [user restrictions](https://www.jetbrains.com/help/license_server/configuring_user_restrictions.html) (default `/data/access-config.json`)\n* `JLS_STATS_RECIPIENTS`: [Reports recipients](https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e40) email addresses for stats (comma delimited)\n* `JLS_REPORT_OUT_OF_LICENSE`: [Warn about lack of licenses](https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e40) every hour following the percentage threshold (default `0`)\n* `JLS_SMTP_SERVER`: SMTP server host to use for sending [stats](https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html) (stats disabled if empty)\n* `JLS_SMTP_PORT`: SMTP server port (default `25`)\n* `JLS_SMTP_USERNAME`: SMTP username (auth disabled if empty)\n* `JLS_SMTP_PASSWORD`: SMTP password (auth disabled if empty)\n* `JLS_STATS_FROM`: [From address](https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e40) for stats emails\n* `JLS_STATS_TOKEN`: Enables an auth token for the [stats API](https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e312) at `/reportApi` (HTTP POST)\n* `JLS_SERVICE_LOGLEVEL`: Logging of IDE requests and responses (default `warn`)\n* `JLS_REPORTING_LOGLEVEL`: Logging of actions on a server: tickets obtaining and revoking with user and license information (default `warn`) \n* `JLS_TICKETS_LOGLEVEL`: Logging of actions with tickets. For example, manual ticket revoking (default `warn`)\n\n## Volumes\n\n* `/data`: Contains [registration data](https://www.jetbrains.com/help/license_server/migrate.html) and configuration\n\n> [!WARNING]\n> Note that the volumes should be owned by the user/group with the specified\n> `PUID` and `PGID`. If you don't give the volume correct permissions, the\n> container may not start.\n\n## Ports\n\n* `8000`: Jetbrains License Server HTTP port\n\n## Usage\n\n### Docker Compose\n\nDocker compose is the recommended way to run this image. Copy the content of\nfolder [examples/compose](examples/compose) in `/var/jls/` on your host for\nexample. Edit the compose and env files with your preferences and run the\nfollowing commands:\n\n```bash\ndocker compose up -d\ndocker compose logs -f\n```\n\n### Command line\n\nYou can also use the following minimal command:\n\n```bash\n$ docker run -d -p 8000:8000 --name jetbrains_license_server \\\n  -e TZ=\"Europe/Paris\" \\\n  -e JLS_VIRTUAL_HOSTS=jls.example.com \\\n  -v $(pwd)/data:/data \\\n  crazymax/jetbrains-license-server:latest\n```\n\n## Upgrade\n\nRecreate the container whenever I push an update:\n\n```bash\ndocker compose pull\ndocker compose up -d\n```\n\n## Notes\n\nIf you have any trouble using the license server, check the official\n[Troubleshooting page](https://www.jetbrains.com/help/license_server/troubleshooting.html)\nof Jetbrains.\n\n### Error 403 Passed value of header \"Host\" is not allowed\n\nIf you've got the following message :\n\n```\nPassed value of header \"Host\" is not allowed. Please contact your license server administrator.\n```\n\nThat's because the license server is running behind a reverse proxy. Please\nconfigure virtual hosts using the `JLS_VIRTUAL_HOSTS` variable.\n\n## Contributing\n\nWant to contribute? Awesome! The most basic way to show your support is to star\nthe project, or to raise issues. You can also support this project by [**becoming a sponsor on GitHub**](https://github.com/sponsors/crazy-max)\nor by making a [PayPal donation](https://www.paypal.me/crazyws) to ensure this\njourney continues indefinitely!\n\nThanks again for your support, it is much appreciated! :pray:\n\n## License\n\nMIT. See `LICENSE` for more details.\n"
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 0.544921875,
          "content": "variable \"DEFAULT_TAG\" {\n  default = \"jls:local\"\n}\n\n// Special target: https://github.com/docker/metadata-action#bake-definition\ntarget \"docker-metadata-action\" {\n  tags = [\"${DEFAULT_TAG}\"]\n}\n\n// Default target if none specified\ngroup \"default\" {\n  targets = [\"image-local\"]\n}\n\ntarget \"image\" {\n  inherits = [\"docker-metadata-action\"]\n}\n\ntarget \"image-local\" {\n  inherits = [\"image\"]\n  output = [\"type=docker\"]\n}\n\ntarget \"image-all\" {\n  inherits = [\"image\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\"\n  ]\n}\n"
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 5.322265625,
          "content": "#!/bin/sh\n\nTZ=${TZ:-UTC}\n\nJLS_PATH=\"/opt/jetbrains-license-server\"\nJLS_LISTEN_ADDRESS=\"0.0.0.0\"\nJLS_PORT=8000\nJLS_CONTEXT=${JLS_CONTEXT:-/}\nJLS_ACCESS_CONFIG=${JLS_ACCESS_CONFIG:-/data/access-config.json}\nJLS_PROXY_TYPE=${JLS_PROXY_TYPE:-https}\nJLS_SERVICE_LOGLEVEL=${JLS_SERVICE_LOGLEVEL:-warn}\nJLS_REPORTING_LOGLEVEL=${JLS_REPORTING_LOGLEVEL:-warn}\nJLS_TICKETS_LOGLEVEL=${JLS_TICKETS_LOGLEVEL:-warn}\n\nif [ -n \"${PGID}\" ] && [ \"${PGID}\" != \"$(id -g jls)\" ]; then\n  echo \"Switching to PGID ${PGID}...\"\n  sed -i -e \"s/^jls:\\([^:]*\\):[0-9]*/jls:\\1:${PGID}/\" /etc/group\n  sed -i -e \"s/^jls:\\([^:]*\\):\\([0-9]*\\):[0-9]*/jls:\\1:\\2:${PGID}/\" /etc/passwd\nfi\nif [ -n \"${PUID}\" ] && [ \"${PUID}\" != \"$(id -u jls)\" ]; then\n  echo \"Switching to PUID ${PUID}...\"\n  sed -i -e \"s/^jls:\\([^:]*\\):[0-9]*:\\([0-9]*\\)/jls:\\1:${PUID}:\\2/\" /etc/passwd\nfi\nif [ -n \"${PUID}\" ] || [ -n \"${PGID}\" ]; then\n  chown -R jls:jls /data \"$JLS_PATH\"\nfi\n\n# Timezone\necho \"Setting timezone to ${TZ}...\"\nln -snf /usr/share/zoneinfo/${TZ} /etc/localtime\necho ${TZ} > /etc/timezone\n\n# Init\necho \"Initializing files and folders...\"\nyasu jls:jls touch \"/data/access-config.json\"\n\n# https://www.jetbrains.com/help/license_server/setting_host_and_port.html\necho \"Configuring Jetbrains License Server...\"\nyasu jls:jls license-server configure --listen ${JLS_LISTEN_ADDRESS} --port ${JLS_PORT} --context ${JLS_CONTEXT}\n\n# https://www.jetbrains.com/help/license_server/setting_host_and_port.html\nif [ -n \"$JLS_VIRTUAL_HOSTS\" ]; then\n  echo \"Following virtual hosts will be used:\"\n  for JLS_VIRTUAL_HOST in $(echo ${JLS_VIRTUAL_HOSTS} | tr \",\" \"\\n\"); do\n    echo \"-> ${JLS_VIRTUAL_HOST}\"\n  done\n  yasu jls:jls license-server configure --jetty.virtualHosts.names=${JLS_VIRTUAL_HOSTS}\nfi\n\n# https://www.jetbrains.com/help/license_server/configuring_proxy_settings.html\nif [ -n \"$JLS_PROXY_HOST\" ] && [ -n \"$JLS_PROXY_PORT\" ]; then\n  echo \"Setting ${JLS_PROXY_TYPE} proxy to $JLS_PROXY_HOST:$JLS_PROXY_PORT...\"\n  yasu jls:jls license-server configure \\\n    -J-D${JLS_PROXY_TYPE}.proxyHost=${JLS_PROXY_HOST} \\\n    -J-D${JLS_PROXY_TYPE}.proxyPort=${JLS_PROXY_PORT}\n\n  if [ -n \"$JLS_PROXY_USER\" ] && [ -n \"$JLS_PROXY_PASSWORD\" ]; then\n    echo \"Setting ${JLS_PROXY_TYPE} proxy credentials...\"\n    yasu jls:jls license-server configure \\\n      -J-D${JLS_PROXY_TYPE}.proxyUser=${JLS_PROXY_USER} \\\n      -J-D${JLS_PROXY_TYPE}.proxyPassword=${JLS_PROXY_PASSWORD}\n  fi\nfi\nunset JLS_PROXY_USER\nunset JLS_PROXY_PASSWORD\n\n# https://www.jetbrains.com/help/license_server/configuring_user_restrictions.html\nif [ -s \"$JLS_ACCESS_CONFIG\" ]; then\n  echo \"Enabling user restrictions access from $JLS_ACCESS_CONFIG...\"\n  yasu jls:jls license-server configure --access.config=file:${JLS_ACCESS_CONFIG}\nfi\n\n# https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html\nif [ -n \"$JLS_SMTP_SERVER\" ] && [ -n \"$JLS_STATS_RECIPIENTS\" ]; then\n  JLS_SMTP_PORT=${JLS_SMTP_PORT:-25}\n  echo \"Enabling User Reporting via SMTP at $JLS_SMTP_SERVER:$JLS_SMTP_PORT...\"\n  yasu jls:jls license-server configure --smtp.server ${JLS_SMTP_SERVER} --smtp.server.port ${JLS_SMTP_PORT}\n\n  if [ -n \"$JLS_SMTP_USERNAME\" ] && [ -n \"$JLS_SMTP_PASSWORD\" ]; then\n    echo \"Using SMTP username $JLS_SMTP_USERNAME with password...\"\n    yasu jls:jls license-server configure --smtp.server.username ${JLS_SMTP_USERNAME}\n    yasu jls:jls license-server configure --smtp.server.password ${JLS_SMTP_PASSWORD}\n  fi\n  unset JLS_SMTP_USERNAME\n  unset JLS_SMTP_PASSWORD\n\n  if [ -n \"$JLS_STATS_FROM\" ]; then\n    echo \"Setting stats sender to $JLS_STATS_FROM...\"\n    yasu jls:jls license-server configure --stats.from ${JLS_STATS_FROM}\n  fi\n\n  if [ \"$JLS_REPORT_OUT_OF_LICENSE\" -gt 0 ]; then\n    echo \"Setting report out of licence to $JLS_REPORT_OUT_OF_LICENSE%...\"\n    yasu jls:jls license-server configure --reporting.out.of.license.threshold ${JLS_REPORT_OUT_OF_LICENSE}\n  fi\n\n  echo \"Stats recipients: $JLS_STATS_RECIPIENTS...\"\n  yasu jls:jls license-server configure --stats.recipients ${JLS_STATS_RECIPIENTS}\nfi\n\n# https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html\nif [ -n \"$JLS_STATS_TOKEN\" ]; then\n  echo \"Enabling stats via API at /$JLS_STATS_TOKEN...\"\n  yasu jls:jls license-server configure --reporting.token ${JLS_STATS_TOKEN}\nfi\nunset JLS_STATS_TOKEN\n\n# https://www.jetbrains.com/help/license_server/changing_logging_level.html\ncat > ${JLS_PATH}/web/WEB-INF/classes/log4j2.xml <<EOL\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration status=\"info\" monitorInterval=\"60\">\n    <Appenders>\n        <Console name=\"CONSOLE\" target=\"SYSTEM_OUT\">\n            <PatternLayout pattern=\"%-5p %c{1}:%L - %m%n\"/>\n        </Console>\n        <Async name=\"ASYNC\" includeLocation=\"true\">\n            <AppenderRef ref=\"CONSOLE\"/>\n        </Async>\n    </Appenders>\n    <Loggers>\n        <Root level=\"info\">\n            <AppenderRef ref=\"ASYNC\"/>\n        </Root>\n        <Logger name=\"l_service\" level=\"${JLS_SERVICE_LOGLEVEL}\" additivity=\"false\">\n            <AppenderRef ref=\"ASYNC\"/>\n        </Logger>\n        <Logger name=\"Reporting\" level=\"${JLS_REPORTING_LOGLEVEL}\" additivity=\"false\">\n            <AppenderRef ref=\"ASYNC\"/>\n        </Logger>\n        <Logger name=\"Tickets\" level=\"${JLS_TICKETS_LOGLEVEL}\" additivity=\"false\">\n            <AppenderRef ref=\"ASYNC\"/>\n        </Logger>\n    </Loggers>\n</Configuration>\nEOL\n\necho \"Fixing perms...\"\nchown -R jls:jls /data \"$JLS_PATH\"\n\nexec yasu jls:jls \"$@\"\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}