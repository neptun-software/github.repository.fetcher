{
  "metadata": {
    "timestamp": 1736711284171,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linuxserver/docker-swag",
      "stars": 2997,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0556640625,
          "content": ".git\n.gitignore\n.github\n.gitattributes\nREADMETEMPLATE.md\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.5986328125,
          "content": "# This file is globally distributed to all container image projects from\n# https://github.com/linuxserver/docker-jenkins-builder/blob/master/.editorconfig\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\n# trim_trailing_whitespace may cause unintended issues and should not be globally set true\ntrim_trailing_whitespace = false\n\n[{Dockerfile*,**.yml}]\nindent_style = space\nindent_size = 2\n\n[{**.sh,root/etc/s6-overlay/s6-rc.d/**,root/etc/cont-init.d/**,root/etc/services.d/**}]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.369140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": ".jenkins-external\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 5.2509765625,
          "content": "# syntax=docker/dockerfile:1\n\nFROM ghcr.io/linuxserver/baseimage-alpine-nginx:3.21\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG CERTBOT_VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"nemchik\"\n\n# environment settings\nENV DHLEVEL=2048 \\\n  ONLY_SUBDOMAINS=false \\\n  AWS_CONFIG_FILE=/config/dns-conf/route53.ini \\\n  S6_BEHAVIOUR_IF_STAGE2_FAILS=2\n\nRUN \\\n  echo \"**** install build packages ****\" && \\\n  apk add --no-cache --virtual=build-dependencies \\\n    build-base \\\n    cargo \\\n    libffi-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    openssl-dev \\\n    python3-dev && \\\n  echo \"**** install runtime packages ****\" && \\\n  apk add --no-cache \\\n    fail2ban \\\n    gnupg \\\n    iptables-legacy \\\n    memcached \\\n    nginx-mod-http-brotli \\\n    nginx-mod-http-dav-ext \\\n    nginx-mod-http-echo \\\n    nginx-mod-http-fancyindex \\\n    nginx-mod-http-geoip2 \\\n    nginx-mod-http-headers-more \\\n    nginx-mod-http-image-filter \\\n    nginx-mod-http-perl \\\n    nginx-mod-http-redis2 \\\n    nginx-mod-http-set-misc \\\n    nginx-mod-http-upload-progress \\\n    nginx-mod-http-xslt-filter \\\n    nginx-mod-mail \\\n    nginx-mod-rtmp \\\n    nginx-mod-stream \\\n    nginx-mod-stream-geoip2 \\\n    nginx-vim \\\n    php83-bcmath \\\n    php83-bz2 \\\n    php83-dom \\\n    php83-exif \\\n    php83-ftp \\\n    php83-gd \\\n    php83-gmp \\\n    php83-imap \\\n    php83-intl \\\n    php83-ldap \\\n    php83-mysqli \\\n    php83-mysqlnd \\\n    php83-opcache \\\n    php83-pdo_mysql \\\n    php83-pdo_odbc \\\n    php83-pdo_pgsql \\\n    php83-pdo_sqlite \\\n    php83-pear \\\n    php83-pecl-apcu \\\n    php83-pecl-mcrypt \\\n    php83-pecl-memcached \\\n    php83-pecl-redis \\\n    php83-pgsql \\\n    php83-posix \\\n    php83-soap \\\n    php83-sockets \\\n    php83-sodium \\\n    php83-sqlite3 \\\n    php83-tokenizer \\\n    php83-xmlreader \\\n    php83-xsl \\\n    whois && \\\n  echo \"**** install certbot plugins ****\" && \\\n  if [ -z ${CERTBOT_VERSION+x} ]; then \\\n    CERTBOT_VERSION=$(curl -sL  https://pypi.python.org/pypi/certbot/json |jq -r '. | .info.version'); \\\n  fi && \\\n  python3 -m venv /lsiopy && \\\n  pip install -U --no-cache-dir \\\n    pip \\\n    wheel && \\\n  pip install -U --no-cache-dir --find-links https://wheel-index.linuxserver.io/alpine-3.21/ \\\n    certbot==${CERTBOT_VERSION} \\\n    certbot-dns-acmedns \\\n    certbot-dns-aliyun \\\n    certbot-dns-azure \\\n    certbot-dns-bunny \\\n    certbot-dns-cloudflare \\\n    certbot-dns-cpanel \\\n    certbot-dns-desec \\\n    certbot-dns-digitalocean \\\n    certbot-dns-directadmin \\\n    certbot-dns-dnsimple \\\n    certbot-dns-dnsmadeeasy \\\n    certbot-dns-dnspod \\\n    certbot-dns-do \\\n    certbot-dns-domeneshop \\\n    certbot-dns-dreamhost \\\n    certbot-dns-duckdns \\\n    certbot-dns-dynudns \\\n    certbot-dns-freedns \\\n    certbot-dns-gehirn \\\n    certbot-dns-glesys \\\n    certbot-dns-godaddy \\\n    certbot-dns-google \\\n    certbot-dns-he \\\n    certbot-dns-hetzner \\\n    certbot-dns-infomaniak \\\n    certbot-dns-inwx \\\n    certbot-dns-ionos \\\n    certbot-dns-linode \\\n    certbot-dns-loopia \\\n    certbot-dns-luadns \\\n    certbot-dns-namecheap \\\n    certbot-dns-netcup \\\n    certbot-dns-njalla \\\n    certbot-dns-nsone \\\n    certbot-dns-ovh \\\n    certbot-dns-porkbun \\\n    certbot-dns-rfc2136 \\\n    certbot-dns-route53 \\\n    certbot-dns-sakuracloud \\\n    certbot-dns-standalone \\\n    certbot-dns-transip \\\n    certbot-dns-vultr \\\n    certbot-plugin-gandi \\\n    cryptography \\\n    future \\\n    requests && \\\n  echo \"**** enable OCSP stapling from base ****\" && \\\n  sed -i \\\n    's|#ssl_stapling on;|ssl_stapling on;|' \\\n    /defaults/nginx/ssl.conf.sample && \\\n  sed -i \\\n    's|#ssl_stapling_verify on;|ssl_stapling_verify on;|' \\\n    /defaults/nginx/ssl.conf.sample && \\\n  sed -i \\\n    's|#ssl_trusted_certificate /config/keys/cert.crt;|ssl_trusted_certificate /config/keys/cert.crt;|' \\\n    /defaults/nginx/ssl.conf.sample && \\\n  echo \"**** remove stream.conf ****\" && \\\n  rm -f /etc/nginx/conf.d/stream.conf && \\\n  echo \"**** correct ip6tables legacy issue ****\" && \\\n  rm \\\n    /usr/sbin/ip6tables && \\\n  ln -s \\\n    /usr/sbin/ip6tables-nft /usr/sbin/ip6tables && \\\n  echo \"**** remove unnecessary fail2ban filters ****\" && \\\n  rm \\\n    /etc/fail2ban/jail.d/alpine-ssh.conf && \\\n  echo \"**** copy fail2ban default action and filter to /defaults ****\" && \\\n  mkdir -p /defaults/fail2ban && \\\n  mv /etc/fail2ban/action.d /defaults/fail2ban/ && \\\n  mv /etc/fail2ban/filter.d /defaults/fail2ban/ && \\\n  echo \"**** define allowipv6 to silence warning ****\" && \\\n  sed -i 's/#allowipv6 = auto/allowipv6 = auto/g' /etc/fail2ban/fail2ban.conf && \\\n  echo \"**** copy proxy confs to /defaults ****\" && \\\n  mkdir -p \\\n    /defaults/nginx/proxy-confs && \\\n  curl -o \\\n    /tmp/proxy-confs.tar.gz -L \\\n    \"https://github.com/linuxserver/reverse-proxy-confs/tarball/master\" && \\\n  tar xf \\\n    /tmp/proxy-confs.tar.gz -C \\\n    /defaults/nginx/proxy-confs --strip-components=1 --exclude=linux*/.editorconfig --exclude=linux*/.gitattributes --exclude=linux*/.github --exclude=linux*/.gitignore --exclude=linux*/LICENSE && \\\n  printf \"Linuxserver.io version: ${VERSION}\\nBuild-date: ${BUILD_DATE}\" > /build_version && \\\n  echo \"**** cleanup ****\" && \\\n  apk del --purge \\\n    build-dependencies && \\\n  rm -rf \\\n    /tmp/* \\\n    $HOME/.cache \\\n    $HOME/.cargo\n\n# copy local files\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 80 443\nVOLUME /config\n"
        },
        {
          "name": "Dockerfile.aarch64",
          "type": "blob",
          "size": 5.2587890625,
          "content": "# syntax=docker/dockerfile:1\n\nFROM ghcr.io/linuxserver/baseimage-alpine-nginx:arm64v8-3.21\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG CERTBOT_VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"nemchik\"\n\n# environment settings\nENV DHLEVEL=2048 \\\n  ONLY_SUBDOMAINS=false \\\n  AWS_CONFIG_FILE=/config/dns-conf/route53.ini \\\n  S6_BEHAVIOUR_IF_STAGE2_FAILS=2\n\nRUN \\\n  echo \"**** install build packages ****\" && \\\n  apk add --no-cache --virtual=build-dependencies \\\n    build-base \\\n    cargo \\\n    libffi-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    openssl-dev \\\n    python3-dev && \\\n  echo \"**** install runtime packages ****\" && \\\n  apk add --no-cache \\\n    fail2ban \\\n    gnupg \\\n    iptables-legacy \\\n    memcached \\\n    nginx-mod-http-brotli \\\n    nginx-mod-http-dav-ext \\\n    nginx-mod-http-echo \\\n    nginx-mod-http-fancyindex \\\n    nginx-mod-http-geoip2 \\\n    nginx-mod-http-headers-more \\\n    nginx-mod-http-image-filter \\\n    nginx-mod-http-perl \\\n    nginx-mod-http-redis2 \\\n    nginx-mod-http-set-misc \\\n    nginx-mod-http-upload-progress \\\n    nginx-mod-http-xslt-filter \\\n    nginx-mod-mail \\\n    nginx-mod-rtmp \\\n    nginx-mod-stream \\\n    nginx-mod-stream-geoip2 \\\n    nginx-vim \\\n    php83-bcmath \\\n    php83-bz2 \\\n    php83-dom \\\n    php83-exif \\\n    php83-ftp \\\n    php83-gd \\\n    php83-gmp \\\n    php83-imap \\\n    php83-intl \\\n    php83-ldap \\\n    php83-mysqli \\\n    php83-mysqlnd \\\n    php83-opcache \\\n    php83-pdo_mysql \\\n    php83-pdo_odbc \\\n    php83-pdo_pgsql \\\n    php83-pdo_sqlite \\\n    php83-pear \\\n    php83-pecl-apcu \\\n    php83-pecl-mcrypt \\\n    php83-pecl-memcached \\\n    php83-pecl-redis \\\n    php83-pgsql \\\n    php83-posix \\\n    php83-soap \\\n    php83-sockets \\\n    php83-sodium \\\n    php83-sqlite3 \\\n    php83-tokenizer \\\n    php83-xmlreader \\\n    php83-xsl \\\n    whois && \\\n  echo \"**** install certbot plugins ****\" && \\\n  if [ -z ${CERTBOT_VERSION+x} ]; then \\\n    CERTBOT_VERSION=$(curl -sL  https://pypi.python.org/pypi/certbot/json |jq -r '. | .info.version'); \\\n  fi && \\\n  python3 -m venv /lsiopy && \\\n  pip install -U --no-cache-dir \\\n    pip \\\n    wheel && \\\n  pip install -U --no-cache-dir --find-links https://wheel-index.linuxserver.io/alpine-3.21/ \\\n    certbot==${CERTBOT_VERSION} \\\n    certbot-dns-acmedns \\\n    certbot-dns-aliyun \\\n    certbot-dns-azure \\\n    certbot-dns-bunny \\\n    certbot-dns-cloudflare \\\n    certbot-dns-cpanel \\\n    certbot-dns-desec \\\n    certbot-dns-digitalocean \\\n    certbot-dns-directadmin \\\n    certbot-dns-dnsimple \\\n    certbot-dns-dnsmadeeasy \\\n    certbot-dns-dnspod \\\n    certbot-dns-do \\\n    certbot-dns-domeneshop \\\n    certbot-dns-dreamhost \\\n    certbot-dns-duckdns \\\n    certbot-dns-dynudns \\\n    certbot-dns-freedns \\\n    certbot-dns-gehirn \\\n    certbot-dns-glesys \\\n    certbot-dns-godaddy \\\n    certbot-dns-google \\\n    certbot-dns-he \\\n    certbot-dns-hetzner \\\n    certbot-dns-infomaniak \\\n    certbot-dns-inwx \\\n    certbot-dns-ionos \\\n    certbot-dns-linode \\\n    certbot-dns-loopia \\\n    certbot-dns-luadns \\\n    certbot-dns-namecheap \\\n    certbot-dns-netcup \\\n    certbot-dns-njalla \\\n    certbot-dns-nsone \\\n    certbot-dns-ovh \\\n    certbot-dns-porkbun \\\n    certbot-dns-rfc2136 \\\n    certbot-dns-route53 \\\n    certbot-dns-sakuracloud \\\n    certbot-dns-standalone \\\n    certbot-dns-transip \\\n    certbot-dns-vultr \\\n    certbot-plugin-gandi \\\n    cryptography \\\n    future \\\n    requests && \\\n  echo \"**** enable OCSP stapling from base ****\" && \\\n  sed -i \\\n    's|#ssl_stapling on;|ssl_stapling on;|' \\\n    /defaults/nginx/ssl.conf.sample && \\\n  sed -i \\\n    's|#ssl_stapling_verify on;|ssl_stapling_verify on;|' \\\n    /defaults/nginx/ssl.conf.sample && \\\n  sed -i \\\n    's|#ssl_trusted_certificate /config/keys/cert.crt;|ssl_trusted_certificate /config/keys/cert.crt;|' \\\n    /defaults/nginx/ssl.conf.sample && \\\n  echo \"**** remove stream.conf ****\" && \\\n  rm -f /etc/nginx/conf.d/stream.conf && \\\n  echo \"**** correct ip6tables legacy issue ****\" && \\\n  rm \\\n    /usr/sbin/ip6tables && \\\n  ln -s \\\n    /usr/sbin/ip6tables-nft /usr/sbin/ip6tables && \\\n  echo \"**** remove unnecessary fail2ban filters ****\" && \\\n  rm \\\n    /etc/fail2ban/jail.d/alpine-ssh.conf && \\\n  echo \"**** copy fail2ban default action and filter to /defaults ****\" && \\\n  mkdir -p /defaults/fail2ban && \\\n  mv /etc/fail2ban/action.d /defaults/fail2ban/ && \\\n  mv /etc/fail2ban/filter.d /defaults/fail2ban/ && \\\n  echo \"**** define allowipv6 to silence warning ****\" && \\\n  sed -i 's/#allowipv6 = auto/allowipv6 = auto/g' /etc/fail2ban/fail2ban.conf && \\\n  echo \"**** copy proxy confs to /defaults ****\" && \\\n  mkdir -p \\\n    /defaults/nginx/proxy-confs && \\\n  curl -o \\\n    /tmp/proxy-confs.tar.gz -L \\\n    \"https://github.com/linuxserver/reverse-proxy-confs/tarball/master\" && \\\n  tar xf \\\n    /tmp/proxy-confs.tar.gz -C \\\n    /defaults/nginx/proxy-confs --strip-components=1 --exclude=linux*/.editorconfig --exclude=linux*/.gitattributes --exclude=linux*/.github --exclude=linux*/.gitignore --exclude=linux*/LICENSE && \\\n  printf \"Linuxserver.io version: ${VERSION}\\nBuild-date: ${BUILD_DATE}\" > /build_version && \\\n  echo \"**** cleanup ****\" && \\\n  apk del --purge \\\n    build-dependencies && \\\n  rm -rf \\\n    /tmp/* \\\n    $HOME/.cache \\\n    $HOME/.cargo\n\n# copy local files\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 80 443\nVOLUME /config\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 60.2578125,
          "content": "pipeline {\n  agent {\n    label 'X86-64-MULTI'\n  }\n  options {\n    buildDiscarder(logRotator(numToKeepStr: '10', daysToKeepStr: '60'))\n    parallelsAlwaysFailFast()\n  }\n  // Input to determine if this is a package check\n  parameters {\n    string(defaultValue: 'false', description: 'package check run', name: 'PACKAGE_CHECK')\n  }\n  // Configuration for the variables used for this specific repo\n  environment {\n    BUILDS_DISCORD=credentials('build_webhook_url')\n    GITHUB_TOKEN=credentials('498b4638-2d02-4ce5-832d-8a57d01d97ab')\n    GITLAB_TOKEN=credentials('b6f0f1dd-6952-4cf6-95d1-9c06380283f0')\n    GITLAB_NAMESPACE=credentials('gitlab-namespace-id')\n    DOCKERHUB_TOKEN=credentials('docker-hub-ci-pat')\n    QUAYIO_API_TOKEN=credentials('quayio-repo-api-token')\n    GIT_SIGNING_KEY=credentials('484fbca6-9a4f-455e-b9e3-97ac98785f5f')\n    EXT_PIP = 'certbot'\n    BUILD_VERSION_ARG = 'CERTBOT_VERSION'\n    LS_USER = 'linuxserver'\n    LS_REPO = 'docker-swag'\n    CONTAINER_NAME = 'swag'\n    DOCKERHUB_IMAGE = 'linuxserver/swag'\n    DEV_DOCKERHUB_IMAGE = 'lsiodev/swag'\n    PR_DOCKERHUB_IMAGE = 'lspipepr/swag'\n    DIST_IMAGE = 'alpine'\n    MULTIARCH='true'\n    CI='false'\n    CI_WEB='false'\n    CI_PORT='80'\n    CI_SSL='false'\n    CI_DELAY='30'\n    CI_DOCKERENV=''\n    CI_AUTH=''\n    CI_WEBPATH=''\n  }\n  stages {\n    stage(\"Set git config\"){\n      steps{\n        sh '''#!/bin/bash\n              cat ${GIT_SIGNING_KEY} > /config/.ssh/id_sign\n              chmod 600 /config/.ssh/id_sign\n              ssh-keygen -y -f /config/.ssh/id_sign > /config/.ssh/id_sign.pub\n              echo \"Using $(ssh-keygen -lf /config/.ssh/id_sign) to sign commits\"\n              git config --global gpg.format ssh\n              git config --global user.signingkey /config/.ssh/id_sign\n              git config --global commit.gpgsign true\n        '''\n      }\n    }\n    // Setup all the basic environment variables needed for the build\n    stage(\"Set ENV Variables base\"){\n      steps{\n        echo \"Running on node: ${NODE_NAME}\"\n        sh '''#! /bin/bash\n              containers=$(docker ps -aq)\n              if [[ -n \"${containers}\" ]]; then\n                docker stop ${containers}\n              fi\n              docker system prune -af --volumes || : '''\n        script{\n          env.EXIT_STATUS = ''\n          env.LS_RELEASE = sh(\n            script: '''docker run --rm quay.io/skopeo/stable:v1 inspect docker://ghcr.io/${LS_USER}/${CONTAINER_NAME}:latest 2>/dev/null | jq -r '.Labels.build_version' | awk '{print $3}' | grep '\\\\-ls' || : ''',\n            returnStdout: true).trim()\n          env.LS_RELEASE_NOTES = sh(\n            script: '''cat readme-vars.yml | awk -F \\\\\" '/date: \"[0-9][0-9].[0-9][0-9].[0-9][0-9]:/ {print $4;exit;}' | sed -E ':a;N;$!ba;s/\\\\r{0,1}\\\\n/\\\\\\\\n/g' ''',\n            returnStdout: true).trim()\n          env.GITHUB_DATE = sh(\n            script: '''date '+%Y-%m-%dT%H:%M:%S%:z' ''',\n            returnStdout: true).trim()\n          env.COMMIT_SHA = sh(\n            script: '''git rev-parse HEAD''',\n            returnStdout: true).trim()\n          env.GH_DEFAULT_BRANCH = sh(\n            script: '''git remote show origin | grep \"HEAD branch:\" | sed 's|.*HEAD branch: ||' ''',\n            returnStdout: true).trim()\n          env.CODE_URL = 'https://github.com/' + env.LS_USER + '/' + env.LS_REPO + '/commit/' + env.GIT_COMMIT\n          env.DOCKERHUB_LINK = 'https://hub.docker.com/r/' + env.DOCKERHUB_IMAGE + '/tags/'\n          env.PULL_REQUEST = env.CHANGE_ID\n          env.TEMPLATED_FILES = 'Jenkinsfile README.md LICENSE .editorconfig ./.github/CONTRIBUTING.md ./.github/FUNDING.yml ./.github/ISSUE_TEMPLATE/config.yml ./.github/ISSUE_TEMPLATE/issue.bug.yml ./.github/ISSUE_TEMPLATE/issue.feature.yml ./.github/PULL_REQUEST_TEMPLATE.md ./.github/workflows/external_trigger_scheduler.yml ./.github/workflows/greetings.yml ./.github/workflows/package_trigger_scheduler.yml ./.github/workflows/call_issue_pr_tracker.yml ./.github/workflows/call_issues_cron.yml ./.github/workflows/permissions.yml ./.github/workflows/external_trigger.yml ./root/donate.txt'\n        }\n        sh '''#! /bin/bash\n              echo \"The default github branch detected as ${GH_DEFAULT_BRANCH}\" '''\n        script{\n          env.LS_RELEASE_NUMBER = sh(\n            script: '''echo ${LS_RELEASE} |sed 's/^.*-ls//g' ''',\n            returnStdout: true).trim()\n        }\n        script{\n          env.LS_TAG_NUMBER = sh(\n            script: '''#! /bin/bash\n                       tagsha=$(git rev-list -n 1 ${LS_RELEASE} 2>/dev/null)\n                       if [ \"${tagsha}\" == \"${COMMIT_SHA}\" ]; then\n                         echo ${LS_RELEASE_NUMBER}\n                       elif [ -z \"${GIT_COMMIT}\" ]; then\n                         echo ${LS_RELEASE_NUMBER}\n                       else\n                         echo $((${LS_RELEASE_NUMBER} + 1))\n                       fi''',\n            returnStdout: true).trim()\n        }\n      }\n    }\n    /* #######################\n       Package Version Tagging\n       ####################### */\n    // Grab the current package versions in Git to determine package tag\n    stage(\"Set Package tag\"){\n      steps{\n        script{\n          env.PACKAGE_TAG = sh(\n            script: '''#!/bin/bash\n                       if [ -e package_versions.txt ] ; then\n                         cat package_versions.txt | md5sum | cut -c1-8\n                       else\n                         echo none\n                       fi''',\n            returnStdout: true).trim()\n        }\n      }\n    }\n    /* ########################\n       External Release Tagging\n       ######################## */\n    // If this is a pip release set the external tag to the pip version\n    stage(\"Set ENV pip_version\"){\n      steps{\n        script{\n          env.EXT_RELEASE = sh(\n            script: '''curl -sL  https://pypi.python.org/pypi/${EXT_PIP}/json |jq -r '. | .info.version' ''',\n            returnStdout: true).trim()\n          env.RELEASE_LINK = 'https://pypi.python.org/pypi/' + env.EXT_PIP\n        }\n      }\n    }    // Sanitize the release tag and strip illegal docker or github characters\n    stage(\"Sanitize tag\"){\n      steps{\n        script{\n          env.EXT_RELEASE_CLEAN = sh(\n            script: '''echo ${EXT_RELEASE} | sed 's/[~,%@+;:/ ]//g' ''',\n            returnStdout: true).trim()\n\n          def semver = env.EXT_RELEASE_CLEAN =~ /(\\d+)\\.(\\d+)\\.(\\d+)/\n          if (semver.find()) {\n            env.SEMVER = \"${semver[0][1]}.${semver[0][2]}.${semver[0][3]}\"\n          } else {\n            semver = env.EXT_RELEASE_CLEAN =~ /(\\d+)\\.(\\d+)(?:\\.(\\d+))?(.*)/\n            if (semver.find()) {\n              if (semver[0][3]) {\n                env.SEMVER = \"${semver[0][1]}.${semver[0][2]}.${semver[0][3]}\"\n              } else if (!semver[0][3] && !semver[0][4]) {\n                env.SEMVER = \"${semver[0][1]}.${semver[0][2]}.${(new Date()).format('YYYYMMdd')}\"\n              }\n            }\n          }\n\n          if (env.SEMVER != null) {\n            if (BRANCH_NAME != \"${env.GH_DEFAULT_BRANCH}\") {\n              env.SEMVER = \"${env.SEMVER}-${BRANCH_NAME}\"\n            }\n            println(\"SEMVER: ${env.SEMVER}\")\n          } else {\n            println(\"No SEMVER detected\")\n          }\n\n        }\n      }\n    }\n    // If this is a master build use live docker endpoints\n    stage(\"Set ENV live build\"){\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n      }\n      steps {\n        script{\n          env.IMAGE = env.DOCKERHUB_IMAGE\n          env.GITHUBIMAGE = 'ghcr.io/' + env.LS_USER + '/' + env.CONTAINER_NAME\n          env.GITLABIMAGE = 'registry.gitlab.com/linuxserver.io/' + env.LS_REPO + '/' + env.CONTAINER_NAME\n          env.QUAYIMAGE = 'quay.io/linuxserver.io/' + env.CONTAINER_NAME\n          if (env.MULTIARCH == 'true') {\n            env.CI_TAGS = 'amd64-' + env.EXT_RELEASE_CLEAN + '-ls' + env.LS_TAG_NUMBER + '|arm64v8-' + env.EXT_RELEASE_CLEAN + '-ls' + env.LS_TAG_NUMBER\n          } else {\n            env.CI_TAGS = env.EXT_RELEASE_CLEAN + '-ls' + env.LS_TAG_NUMBER\n          }\n          env.VERSION_TAG = env.EXT_RELEASE_CLEAN + '-ls' + env.LS_TAG_NUMBER\n          env.META_TAG = env.EXT_RELEASE_CLEAN + '-ls' + env.LS_TAG_NUMBER\n          env.EXT_RELEASE_TAG = 'version-' + env.EXT_RELEASE_CLEAN\n          env.BUILDCACHE = 'docker.io/lsiodev/buildcache,registry.gitlab.com/linuxserver.io/docker-jenkins-builder/lsiodev-buildcache,ghcr.io/linuxserver/lsiodev-buildcache,quay.io/linuxserver.io/lsiodev-buildcache'\n        }\n      }\n    }\n    // If this is a dev build use dev docker endpoints\n    stage(\"Set ENV dev build\"){\n      when {\n        not {branch \"master\"}\n        environment name: 'CHANGE_ID', value: ''\n      }\n      steps {\n        script{\n          env.IMAGE = env.DEV_DOCKERHUB_IMAGE\n          env.GITHUBIMAGE = 'ghcr.io/' + env.LS_USER + '/lsiodev-' + env.CONTAINER_NAME\n          env.GITLABIMAGE = 'registry.gitlab.com/linuxserver.io/' + env.LS_REPO + '/lsiodev-' + env.CONTAINER_NAME\n          env.QUAYIMAGE = 'quay.io/linuxserver.io/lsiodev-' + env.CONTAINER_NAME\n          if (env.MULTIARCH == 'true') {\n            env.CI_TAGS = 'amd64-' + env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA + '|arm64v8-' + env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA\n          } else {\n            env.CI_TAGS = env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA\n          }\n          env.VERSION_TAG = env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA\n          env.META_TAG = env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA\n          env.EXT_RELEASE_TAG = 'version-' + env.EXT_RELEASE_CLEAN\n          env.DOCKERHUB_LINK = 'https://hub.docker.com/r/' + env.DEV_DOCKERHUB_IMAGE + '/tags/'\n          env.BUILDCACHE = 'docker.io/lsiodev/buildcache,registry.gitlab.com/linuxserver.io/docker-jenkins-builder/lsiodev-buildcache,ghcr.io/linuxserver/lsiodev-buildcache,quay.io/linuxserver.io/lsiodev-buildcache'\n        }\n      }\n    }\n    // If this is a pull request build use dev docker endpoints\n    stage(\"Set ENV PR build\"){\n      when {\n        not {environment name: 'CHANGE_ID', value: ''}\n      }\n      steps {\n        script{\n          env.IMAGE = env.PR_DOCKERHUB_IMAGE\n          env.GITHUBIMAGE = 'ghcr.io/' + env.LS_USER + '/lspipepr-' + env.CONTAINER_NAME\n          env.GITLABIMAGE = 'registry.gitlab.com/linuxserver.io/' + env.LS_REPO + '/lspipepr-' + env.CONTAINER_NAME\n          env.QUAYIMAGE = 'quay.io/linuxserver.io/lspipepr-' + env.CONTAINER_NAME\n          if (env.MULTIARCH == 'true') {\n            env.CI_TAGS = 'amd64-' + env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA + '-pr-' + env.PULL_REQUEST + '|arm64v8-' + env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA + '-pr-' + env.PULL_REQUEST\n          } else {\n            env.CI_TAGS = env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA + '-pr-' + env.PULL_REQUEST\n          }\n          env.VERSION_TAG = env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA + '-pr-' + env.PULL_REQUEST\n          env.META_TAG = env.EXT_RELEASE_CLEAN + '-pkg-' + env.PACKAGE_TAG + '-dev-' + env.COMMIT_SHA + '-pr-' + env.PULL_REQUEST\n          env.EXT_RELEASE_TAG = 'version-' + env.EXT_RELEASE_CLEAN\n          env.CODE_URL = 'https://github.com/' + env.LS_USER + '/' + env.LS_REPO + '/pull/' + env.PULL_REQUEST\n          env.DOCKERHUB_LINK = 'https://hub.docker.com/r/' + env.PR_DOCKERHUB_IMAGE + '/tags/'\n          env.BUILDCACHE = 'docker.io/lsiodev/buildcache,registry.gitlab.com/linuxserver.io/docker-jenkins-builder/lsiodev-buildcache,ghcr.io/linuxserver/lsiodev-buildcache,quay.io/linuxserver.io/lsiodev-buildcache'\n        }\n      }\n    }\n    // Run ShellCheck\n    stage('ShellCheck') {\n      when {\n        environment name: 'CI', value: 'true'\n      }\n      steps {\n        withCredentials([\n          string(credentialsId: 'ci-tests-s3-key-id', variable: 'S3_KEY'),\n          string(credentialsId: 'ci-tests-s3-secret-access-key', variable: 'S3_SECRET')\n        ]) {\n          script{\n            env.SHELLCHECK_URL = 'https://ci-tests.linuxserver.io/' + env.IMAGE + '/' + env.META_TAG + '/shellcheck-result.xml'\n          }\n          sh '''curl -sL https://raw.githubusercontent.com/linuxserver/docker-jenkins-builder/master/checkrun.sh | /bin/bash'''\n          sh '''#! /bin/bash\n                docker run --rm \\\n                  -v ${WORKSPACE}:/mnt \\\n                  -e AWS_ACCESS_KEY_ID=\\\"${S3_KEY}\\\" \\\n                  -e AWS_SECRET_ACCESS_KEY=\\\"${S3_SECRET}\\\" \\\n                  ghcr.io/linuxserver/baseimage-alpine:3.20 s6-envdir -fn -- /var/run/s6/container_environment /bin/bash -c \"\\\n                    apk add --no-cache python3 && \\\n                    python3 -m venv /lsiopy && \\\n                    pip install --no-cache-dir -U pip && \\\n                    pip install --no-cache-dir s3cmd && \\\n                    s3cmd put --no-preserve --acl-public -m text/xml /mnt/shellcheck-result.xml s3://ci-tests.linuxserver.io/${IMAGE}/${META_TAG}/shellcheck-result.xml\" || :'''\n        }\n      }\n    }\n    // Use helper containers to render templated files\n    stage('Update-Templates') {\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        expression {\n          env.CONTAINER_NAME != null\n        }\n      }\n      steps {\n        sh '''#! /bin/bash\n              set -e\n              TEMPDIR=$(mktemp -d)\n              docker pull ghcr.io/linuxserver/jenkins-builder:latest\n              # Cloned repo paths for templating:\n              # ${TEMPDIR}/docker-${CONTAINER_NAME}: Cloned branch master of ${LS_USER}/${LS_REPO} for running the jenkins builder on\n              # ${TEMPDIR}/repo/${LS_REPO}: Cloned branch master of ${LS_USER}/${LS_REPO} for commiting various templated file changes and pushing back to Github\n              # ${TEMPDIR}/docs/docker-documentation: Cloned docs repo for pushing docs updates to Github\n              # ${TEMPDIR}/unraid/docker-templates: Cloned docker-templates repo to check for logos\n              # ${TEMPDIR}/unraid/templates: Cloned templates repo for commiting unraid template changes and pushing back to Github\n              git clone --branch master --depth 1 https://github.com/${LS_USER}/${LS_REPO}.git ${TEMPDIR}/docker-${CONTAINER_NAME}\n              docker run --rm -v ${TEMPDIR}/docker-${CONTAINER_NAME}:/tmp -e LOCAL=true -e PUID=$(id -u) -e PGID=$(id -g) ghcr.io/linuxserver/jenkins-builder:latest \n              echo \"Starting Stage 1 - Jenkinsfile update\"\n              if [[ \"$(md5sum Jenkinsfile | awk '{ print $1 }')\" != \"$(md5sum ${TEMPDIR}/docker-${CONTAINER_NAME}/Jenkinsfile | awk '{ print $1 }')\" ]]; then\n                mkdir -p ${TEMPDIR}/repo\n                git clone https://github.com/${LS_USER}/${LS_REPO}.git ${TEMPDIR}/repo/${LS_REPO}\n                cd ${TEMPDIR}/repo/${LS_REPO}\n                git checkout -f master\n                cp ${TEMPDIR}/docker-${CONTAINER_NAME}/Jenkinsfile ${TEMPDIR}/repo/${LS_REPO}/\n                git add Jenkinsfile\n                git commit -m 'Bot Updating Templated Files'\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                echo \"true\" > /tmp/${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Updating Jenkinsfile and exiting build, new one will trigger based on commit\"\n                rm -Rf ${TEMPDIR}\n                exit 0\n              else\n                echo \"Jenkinsfile is up to date.\"\n              fi\n              echo \"Starting Stage 2 - Delete old templates\"\n              OLD_TEMPLATES=\".github/ISSUE_TEMPLATE.md .github/ISSUE_TEMPLATE/issue.bug.md .github/ISSUE_TEMPLATE/issue.feature.md .github/workflows/call_invalid_helper.yml .github/workflows/stale.yml .github/workflows/package_trigger.yml\"\n              for i in ${OLD_TEMPLATES}; do\n                if [[ -f \"${i}\" ]]; then\n                  TEMPLATES_TO_DELETE=\"${i} ${TEMPLATES_TO_DELETE}\"\n                fi\n              done\n              if [[ -n \"${TEMPLATES_TO_DELETE}\" ]]; then\n                mkdir -p ${TEMPDIR}/repo\n                git clone https://github.com/${LS_USER}/${LS_REPO}.git ${TEMPDIR}/repo/${LS_REPO}\n                cd ${TEMPDIR}/repo/${LS_REPO}\n                git checkout -f master\n                for i in ${TEMPLATES_TO_DELETE}; do\n                  git rm \"${i}\"\n                done\n                git commit -m 'Bot Updating Templated Files'\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                echo \"true\" > /tmp/${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Deleting old/deprecated templates and exiting build, new one will trigger based on commit\"\n                rm -Rf ${TEMPDIR}\n                exit 0\n              else\n                echo \"No templates to delete\"\n              fi\n              echo \"Starting Stage 2.5 - Update init diagram\"\n              if ! grep -q 'init_diagram:' readme-vars.yml; then\n                echo \"Adding the key 'init_diagram' to readme-vars.yml\"\n                sed -i '\\\\|^#.*changelog.*$|d' readme-vars.yml\n                sed -i 's|^changelogs:|# init diagram\\\\ninit_diagram:\\\\n\\\\n# changelog\\\\nchangelogs:|' readme-vars.yml\n              fi\n              mkdir -p ${TEMPDIR}/d2\n              docker run --rm -v ${TEMPDIR}/d2:/output -e PUID=$(id -u) -e PGID=$(id -g) -e RAW=\"true\" ghcr.io/linuxserver/d2-builder:latest ${CONTAINER_NAME}:latest\n              ls -al ${TEMPDIR}/d2\n              yq -ei \".init_diagram |= load_str(\\\\\"${TEMPDIR}/d2/${CONTAINER_NAME}-latest.d2\\\\\")\" readme-vars.yml\n              if [[ $(md5sum readme-vars.yml | cut -c1-8) != $(md5sum ${TEMPDIR}/docker-${CONTAINER_NAME}/readme-vars.yml | cut -c1-8) ]]; then\n                echo \"'init_diagram' has been updated. Updating repo and exiting build, new one will trigger based on commit.\"\n                mkdir -p ${TEMPDIR}/repo\n                git clone https://github.com/${LS_USER}/${LS_REPO}.git ${TEMPDIR}/repo/${LS_REPO}\n                cd ${TEMPDIR}/repo/${LS_REPO}\n                git checkout -f master\n                cp ${WORKSPACE}/readme-vars.yml ${TEMPDIR}/repo/${LS_REPO}/readme-vars.yml\n                git add readme-vars.yml\n                git commit -m 'Bot Updating Templated Files'\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                echo \"true\" > /tmp/${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Updating templates and exiting build, new one will trigger based on commit\"\n                rm -Rf ${TEMPDIR}\n                exit 0\n              else\n                echo \"false\" > /tmp/${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Init diagram is unchanged\"\n              fi\n              echo \"Starting Stage 3 - Update templates\"\n              CURRENTHASH=$(grep -hs ^ ${TEMPLATED_FILES} | md5sum | cut -c1-8)\n              cd ${TEMPDIR}/docker-${CONTAINER_NAME}\n              NEWHASH=$(grep -hs ^ ${TEMPLATED_FILES} | md5sum | cut -c1-8)\n              if [[ \"${CURRENTHASH}\" != \"${NEWHASH}\" ]] || ! grep -q '.jenkins-external' \"${WORKSPACE}/.gitignore\" 2>/dev/null; then\n                mkdir -p ${TEMPDIR}/repo\n                git clone https://github.com/${LS_USER}/${LS_REPO}.git ${TEMPDIR}/repo/${LS_REPO}\n                cd ${TEMPDIR}/repo/${LS_REPO}\n                git checkout -f master\n                cd ${TEMPDIR}/docker-${CONTAINER_NAME}\n                mkdir -p ${TEMPDIR}/repo/${LS_REPO}/.github/workflows\n                mkdir -p ${TEMPDIR}/repo/${LS_REPO}/.github/ISSUE_TEMPLATE\n                cp --parents ${TEMPLATED_FILES} ${TEMPDIR}/repo/${LS_REPO}/ || :\n                cp --parents readme-vars.yml ${TEMPDIR}/repo/${LS_REPO}/ || :\n                cd ${TEMPDIR}/repo/${LS_REPO}/\n                if ! grep -q '.jenkins-external' .gitignore 2>/dev/null; then\n                  echo \".jenkins-external\" >> .gitignore\n                  git add .gitignore\n                fi\n                git add readme-vars.yml ${TEMPLATED_FILES}\n                git commit -m 'Bot Updating Templated Files'\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                echo \"true\" > /tmp/${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Updating templates and exiting build, new one will trigger based on commit\"\n                rm -Rf ${TEMPDIR}\n                exit 0\n              else\n                echo \"false\" > /tmp/${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"No templates to update\"\n              fi\n              echo \"Starting Stage 4 - External repo updates: Docs, Unraid Template and Readme Sync to Docker Hub\"\n              mkdir -p ${TEMPDIR}/docs\n              git clone --depth=1 https://github.com/linuxserver/docker-documentation.git ${TEMPDIR}/docs/docker-documentation\n              if [[ \"${BRANCH_NAME}\" == \"${GH_DEFAULT_BRANCH}\"  ]] && [[ (! -f ${TEMPDIR}/docs/docker-documentation/docs/images/docker-${CONTAINER_NAME}.md) || (\"$(md5sum ${TEMPDIR}/docs/docker-documentation/docs/images/docker-${CONTAINER_NAME}.md | awk '{ print $1 }')\" != \"$(md5sum ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/docker-${CONTAINER_NAME}.md | awk '{ print $1 }')\") ]]; then\n                cp ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/docker-${CONTAINER_NAME}.md ${TEMPDIR}/docs/docker-documentation/docs/images/\n                cd ${TEMPDIR}/docs/docker-documentation\n                GH_DOCS_DEFAULT_BRANCH=$(git remote show origin | grep \"HEAD branch:\" | sed 's|.*HEAD branch: ||')\n                git add docs/images/docker-${CONTAINER_NAME}.md\n                echo \"Updating docs repo\"\n                git commit -m 'Bot Updating Documentation'\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/docker-documentation.git ${GH_DOCS_DEFAULT_BRANCH} --rebase\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/docker-documentation.git ${GH_DOCS_DEFAULT_BRANCH} || \\\n                  (MAXWAIT=\"10\" && echo \"Push to docs failed, trying again in ${MAXWAIT} seconds\" && \\\n                  sleep $((RANDOM % MAXWAIT)) && \\\n                  git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/docker-documentation.git ${GH_DOCS_DEFAULT_BRANCH} --rebase && \\\n                  git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/docker-documentation.git ${GH_DOCS_DEFAULT_BRANCH})\n              else\n                echo \"Docs update not needed, skipping\"\n              fi\n              mkdir -p ${TEMPDIR}/unraid\n              git clone --depth=1 https://github.com/linuxserver/docker-templates.git ${TEMPDIR}/unraid/docker-templates\n              git clone --depth=1 https://github.com/linuxserver/templates.git ${TEMPDIR}/unraid/templates\n              if [[ -f ${TEMPDIR}/unraid/docker-templates/linuxserver.io/img/${CONTAINER_NAME}-logo.png ]]; then\n                sed -i \"s|master/linuxserver.io/img/linuxserver-ls-logo.png|master/linuxserver.io/img/${CONTAINER_NAME}-logo.png|\" ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/${CONTAINER_NAME}.xml\n              elif [[ -f ${TEMPDIR}/unraid/docker-templates/linuxserver.io/img/${CONTAINER_NAME}-icon.png ]]; then\n                sed -i \"s|master/linuxserver.io/img/linuxserver-ls-logo.png|master/linuxserver.io/img/${CONTAINER_NAME}-icon.png|\" ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/${CONTAINER_NAME}.xml\n              fi\n              if [[ \"${BRANCH_NAME}\" == \"${GH_DEFAULT_BRANCH}\" ]] && [[ (! -f ${TEMPDIR}/unraid/templates/unraid/${CONTAINER_NAME}.xml) || (\"$(md5sum ${TEMPDIR}/unraid/templates/unraid/${CONTAINER_NAME}.xml | awk '{ print $1 }')\" != \"$(md5sum ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/${CONTAINER_NAME}.xml | awk '{ print $1 }')\") ]]; then\n                echo \"Updating Unraid template\"\n                cd ${TEMPDIR}/unraid/templates/\n                GH_TEMPLATES_DEFAULT_BRANCH=$(git remote show origin | grep \"HEAD branch:\" | sed 's|.*HEAD branch: ||')\n                if grep -wq \"^${CONTAINER_NAME}$\" ${TEMPDIR}/unraid/templates/unraid/ignore.list && [[ -f ${TEMPDIR}/unraid/templates/unraid/deprecated/${CONTAINER_NAME}.xml ]]; then\n                  echo \"Image is on the ignore list, and already in the deprecation folder.\"\n                elif grep -wq \"^${CONTAINER_NAME}$\" ${TEMPDIR}/unraid/templates/unraid/ignore.list; then\n                  echo \"Image is on the ignore list, marking Unraid template as deprecated\"\n                  cp ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/${CONTAINER_NAME}.xml ${TEMPDIR}/unraid/templates/unraid/\n                  git add -u unraid/${CONTAINER_NAME}.xml\n                  git mv unraid/${CONTAINER_NAME}.xml unraid/deprecated/${CONTAINER_NAME}.xml || :\n                  git commit -m 'Bot Moving Deprecated Unraid Template' || :\n                else\n                  cp ${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/${CONTAINER_NAME}.xml ${TEMPDIR}/unraid/templates/unraid/\n                  git add unraid/${CONTAINER_NAME}.xml\n                  git commit -m 'Bot Updating Unraid Template'\n                fi\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/templates.git ${GH_TEMPLATES_DEFAULT_BRANCH} --rebase\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/templates.git ${GH_TEMPLATES_DEFAULT_BRANCH} || \\\n                  (MAXWAIT=\"10\" && echo \"Push to unraid templates failed, trying again in ${MAXWAIT} seconds\" && \\\n                  sleep $((RANDOM % MAXWAIT)) && \\\n                  git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/templates.git ${GH_TEMPLATES_DEFAULT_BRANCH} --rebase && \\\n                  git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/linuxserver/templates.git ${GH_TEMPLATES_DEFAULT_BRANCH})\n              else\n                echo \"No updates to Unraid template needed, skipping\"\n              fi\n              if [[ \"${BRANCH_NAME}\" == \"${GH_DEFAULT_BRANCH}\" ]]; then\n                if [[ $(cat ${TEMPDIR}/docker-${CONTAINER_NAME}/README.md | wc -m) -gt 25000 ]]; then\n                  echo \"Readme is longer than 25,000 characters. Syncing the lite version to Docker Hub\"\n                  DH_README_SYNC_PATH=\"${TEMPDIR}/docker-${CONTAINER_NAME}/.jenkins-external/README.lite\"\n                else\n                  echo \"Syncing readme to Docker Hub\"\n                  DH_README_SYNC_PATH=\"${TEMPDIR}/docker-${CONTAINER_NAME}/README.md\"\n                fi\n                if curl -s https://hub.docker.com/v2/namespaces/${DOCKERHUB_IMAGE%%/*}/repositories/${DOCKERHUB_IMAGE##*/}/tags | jq -r '.message' | grep -q 404; then\n                  echo \"Docker Hub endpoint doesn't exist. Creating endpoint first.\"\n                  DH_TOKEN=$(curl -d '{\"username\":\"linuxserverci\", \"password\":\"'${DOCKERHUB_TOKEN}'\"}' -H \"Content-Type: application/json\" -X POST https://hub.docker.com/v2/users/login | jq -r '.token')\n                  curl -s \\\n                    -H \"Authorization: JWT ${DH_TOKEN}\" \\\n                    -H \"Content-Type: application/json\" \\\n                    -X POST \\\n                    -d '{\"name\":\"'${DOCKERHUB_IMAGE##*/}'\", \"namespace\":\"'${DOCKERHUB_IMAGE%%/*}'\"}' \\\n                    https://hub.docker.com/v2/repositories/ || :\n                fi\n                DH_TOKEN=$(curl -d '{\"username\":\"linuxserverci\", \"password\":\"'${DOCKERHUB_TOKEN}'\"}' -H \"Content-Type: application/json\" -X POST https://hub.docker.com/v2/users/login | jq -r '.token')\n                curl -s \\\n                  -H \"Authorization: JWT ${DH_TOKEN}\" \\\n                  -H \"Content-Type: application/json\" \\\n                  -X PATCH \\\n                  -d \"{\\\\\"full_description\\\\\":$(jq -Rsa . ${DH_README_SYNC_PATH})}\" \\\n                  https://hub.docker.com/v2/repositories/${DOCKERHUB_IMAGE} || :\n              else\n                echo \"Not the default Github branch. Skipping readme sync to Docker Hub.\"\n              fi\n              rm -Rf ${TEMPDIR}'''\n        script{\n          env.FILES_UPDATED = sh(\n            script: '''cat /tmp/${COMMIT_SHA}-${BUILD_NUMBER}''',\n            returnStdout: true).trim()\n        }\n      }\n    }\n    // Exit the build if the Templated files were just updated\n    stage('Template-exit') {\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'FILES_UPDATED', value: 'true'\n        expression {\n          env.CONTAINER_NAME != null\n        }\n      }\n      steps {\n        script{\n          env.EXIT_STATUS = 'ABORTED'\n        }\n      }\n    }\n    // If this is a master build check the S6 service file perms\n    stage(\"Check S6 Service file Permissions\"){\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        script{\n          sh '''#! /bin/bash\n            WRONG_PERM=$(find ./  -path \"./.git\" -prune -o \\\\( -name \"run\" -o -name \"finish\" -o -name \"check\" \\\\) -not -perm -u=x,g=x,o=x -print)\n            if [[ -n \"${WRONG_PERM}\" ]]; then\n              echo \"The following S6 service files are missing the executable bit; canceling the faulty build: ${WRONG_PERM}\"\n              exit 1\n            else\n              echo \"S6 service file perms look good.\"\n            fi '''\n        }\n      }\n    }\n    /* #######################\n       GitLab Mirroring and Quay.io Repo Visibility\n       ####################### */\n    // Ping into Gitlab to mirror this repo and have a registry endpoint & mark this repo on Quay.io as public\n    stage(\"GitLab Mirror and Quay.io Visibility\"){\n      when {\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps{\n        sh '''curl -H \"Content-Type: application/json\" -H \"Private-Token: ${GITLAB_TOKEN}\" -X POST https://gitlab.com/api/v4/projects \\\n          -d '{\"namespace_id\":'${GITLAB_NAMESPACE}',\\\n            \"name\":\"'${LS_REPO}'\",\n            \"mirror\":true,\\\n            \"import_url\":\"https://github.com/linuxserver/'${LS_REPO}'.git\",\\\n            \"issues_access_level\":\"disabled\",\\\n            \"merge_requests_access_level\":\"disabled\",\\\n            \"repository_access_level\":\"enabled\",\\\n            \"visibility\":\"public\"}' '''\n        sh '''curl -H \"Private-Token: ${GITLAB_TOKEN}\" -X PUT \"https://gitlab.com/api/v4/projects/Linuxserver.io%2F${LS_REPO}\" \\\n          -d \"mirror=true&import_url=https://github.com/linuxserver/${LS_REPO}.git\" '''\n        sh '''curl -H \"Content-Type: application/json\" -H \"Authorization: Bearer ${QUAYIO_API_TOKEN}\" -X POST \"https://quay.io/api/v1/repository${QUAYIMAGE/quay.io/}/changevisibility\" \\\n          -d '{\"visibility\":\"public\"}' ||: '''\n      } \n    }\n    /* ###############\n       Build Container\n       ############### */\n    // Build Docker container for push to LS Repo\n    stage('Build-Single') {\n      when {\n        expression {\n          env.MULTIARCH == 'false' || params.PACKAGE_CHECK == 'true'\n        }\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        echo \"Running on node: ${NODE_NAME}\"\n        sh \"sed -r -i 's|(^FROM .*)|\\\\1\\\\n\\\\nENV LSIO_FIRST_PARTY=true|g' Dockerfile\"\n        sh \"docker buildx build \\\n          --label \\\"org.opencontainers.image.created=${GITHUB_DATE}\\\" \\\n          --label \\\"org.opencontainers.image.authors=linuxserver.io\\\" \\\n          --label \\\"org.opencontainers.image.url=https://github.com/linuxserver/docker-swag/packages\\\" \\\n          --label \\\"org.opencontainers.image.documentation=https://docs.linuxserver.io/images/docker-swag\\\" \\\n          --label \\\"org.opencontainers.image.source=https://github.com/linuxserver/docker-swag\\\" \\\n          --label \\\"org.opencontainers.image.version=${EXT_RELEASE_CLEAN}-ls${LS_TAG_NUMBER}\\\" \\\n          --label \\\"org.opencontainers.image.revision=${COMMIT_SHA}\\\" \\\n          --label \\\"org.opencontainers.image.vendor=linuxserver.io\\\" \\\n          --label \\\"org.opencontainers.image.licenses=GPL-3.0-only\\\" \\\n          --label \\\"org.opencontainers.image.ref.name=${COMMIT_SHA}\\\" \\\n          --label \\\"org.opencontainers.image.title=Swag\\\" \\\n          --label \\\"org.opencontainers.image.description=SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.\\\" \\\n          --no-cache --pull -t ${IMAGE}:${META_TAG} --platform=linux/amd64 \\\n          --provenance=true --sbom=true --builder=container --load \\\n          --build-arg ${BUILD_VERSION_ARG}=${EXT_RELEASE} --build-arg VERSION=\\\"${VERSION_TAG}\\\" --build-arg BUILD_DATE=${GITHUB_DATE} .\"\n        sh '''#! /bin/bash\n              set -e\n              IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n              for i in \"${CACHE[@]}\"; do\n                docker tag ${IMAGE}:${META_TAG} ${i}:amd64-${COMMIT_SHA}-${BUILD_NUMBER}\n              done\n           '''\n        withCredentials([\n          [\n            $class: 'UsernamePasswordMultiBinding',\n            credentialsId: 'Quay.io-Robot',\n            usernameVariable: 'QUAYUSER',\n            passwordVariable: 'QUAYPASS'\n          ]\n        ]) {\n          retry_backoff(5,5) {\n              sh '''#! /bin/bash\n                    set -e\n                    echo $DOCKERHUB_TOKEN | docker login -u linuxserverci --password-stdin\n                    echo $GITHUB_TOKEN | docker login ghcr.io -u LinuxServer-CI --password-stdin\n                    echo $GITLAB_TOKEN | docker login registry.gitlab.com -u LinuxServer.io --password-stdin\n                    echo $QUAYPASS | docker login quay.io -u $QUAYUSER --password-stdin\n                    if [[ \"${PACKAGE_CHECK}\" != \"true\" ]]; then\n                      IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                      for i in \"${CACHE[@]}\"; do\n                        docker push ${i}:amd64-${COMMIT_SHA}-${BUILD_NUMBER} &\n                      done\n                      for p in $(jobs -p); do\n                        wait \"$p\" || { echo \"job $p failed\" >&2; exit 1; }\n                      done\n                    fi\n                '''\n          }\n        }\n      }\n    }\n    // Build MultiArch Docker containers for push to LS Repo\n    stage('Build-Multi') {\n      when {\n        allOf {\n          environment name: 'MULTIARCH', value: 'true'\n          expression { params.PACKAGE_CHECK == 'false' }\n        }\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      parallel {\n        stage('Build X86') {\n          steps {\n            echo \"Running on node: ${NODE_NAME}\"\n            sh \"sed -r -i 's|(^FROM .*)|\\\\1\\\\n\\\\nENV LSIO_FIRST_PARTY=true|g' Dockerfile\"\n            sh \"docker buildx build \\\n              --label \\\"org.opencontainers.image.created=${GITHUB_DATE}\\\" \\\n              --label \\\"org.opencontainers.image.authors=linuxserver.io\\\" \\\n              --label \\\"org.opencontainers.image.url=https://github.com/linuxserver/docker-swag/packages\\\" \\\n              --label \\\"org.opencontainers.image.documentation=https://docs.linuxserver.io/images/docker-swag\\\" \\\n              --label \\\"org.opencontainers.image.source=https://github.com/linuxserver/docker-swag\\\" \\\n              --label \\\"org.opencontainers.image.version=${EXT_RELEASE_CLEAN}-ls${LS_TAG_NUMBER}\\\" \\\n              --label \\\"org.opencontainers.image.revision=${COMMIT_SHA}\\\" \\\n              --label \\\"org.opencontainers.image.vendor=linuxserver.io\\\" \\\n              --label \\\"org.opencontainers.image.licenses=GPL-3.0-only\\\" \\\n              --label \\\"org.opencontainers.image.ref.name=${COMMIT_SHA}\\\" \\\n              --label \\\"org.opencontainers.image.title=Swag\\\" \\\n              --label \\\"org.opencontainers.image.description=SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.\\\" \\\n              --no-cache --pull -t ${IMAGE}:amd64-${META_TAG} --platform=linux/amd64 \\\n              --provenance=true --sbom=true --builder=container --load \\\n              --build-arg ${BUILD_VERSION_ARG}=${EXT_RELEASE} --build-arg VERSION=\\\"${VERSION_TAG}\\\" --build-arg BUILD_DATE=${GITHUB_DATE} .\"\n            sh '''#! /bin/bash\n                  set -e\n                  IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                  for i in \"${CACHE[@]}\"; do\n                    docker tag ${IMAGE}:amd64-${META_TAG} ${i}:amd64-${COMMIT_SHA}-${BUILD_NUMBER}\n                  done\n               '''\n            withCredentials([\n              [\n                $class: 'UsernamePasswordMultiBinding',\n                credentialsId: 'Quay.io-Robot',\n                usernameVariable: 'QUAYUSER',\n                passwordVariable: 'QUAYPASS'\n              ]\n            ]) {\n              retry_backoff(5,5) {\n                  sh '''#! /bin/bash\n                        set -e\n                        echo $DOCKERHUB_TOKEN | docker login -u linuxserverci --password-stdin\n                        echo $GITHUB_TOKEN | docker login ghcr.io -u LinuxServer-CI --password-stdin\n                        echo $GITLAB_TOKEN | docker login registry.gitlab.com -u LinuxServer.io --password-stdin\n                        echo $QUAYPASS | docker login quay.io -u $QUAYUSER --password-stdin\n                        if [[ \"${PACKAGE_CHECK}\" != \"true\" ]]; then\n                          IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                          for i in \"${CACHE[@]}\"; do\n                            docker push ${i}:amd64-${COMMIT_SHA}-${BUILD_NUMBER} &\n                          done\n                          for p in $(jobs -p); do\n                            wait \"$p\" || { echo \"job $p failed\" >&2; exit 1; }\n                          done\n                        fi\n                    '''\n              }\n            }\n          }\n        }\n        stage('Build ARM64') {\n          agent {\n            label 'ARM64'\n          }\n          steps {\n            echo \"Running on node: ${NODE_NAME}\"\n            sh \"sed -r -i 's|(^FROM .*)|\\\\1\\\\n\\\\nENV LSIO_FIRST_PARTY=true|g' Dockerfile.aarch64\"\n            sh \"docker buildx build \\\n              --label \\\"org.opencontainers.image.created=${GITHUB_DATE}\\\" \\\n              --label \\\"org.opencontainers.image.authors=linuxserver.io\\\" \\\n              --label \\\"org.opencontainers.image.url=https://github.com/linuxserver/docker-swag/packages\\\" \\\n              --label \\\"org.opencontainers.image.documentation=https://docs.linuxserver.io/images/docker-swag\\\" \\\n              --label \\\"org.opencontainers.image.source=https://github.com/linuxserver/docker-swag\\\" \\\n              --label \\\"org.opencontainers.image.version=${EXT_RELEASE_CLEAN}-ls${LS_TAG_NUMBER}\\\" \\\n              --label \\\"org.opencontainers.image.revision=${COMMIT_SHA}\\\" \\\n              --label \\\"org.opencontainers.image.vendor=linuxserver.io\\\" \\\n              --label \\\"org.opencontainers.image.licenses=GPL-3.0-only\\\" \\\n              --label \\\"org.opencontainers.image.ref.name=${COMMIT_SHA}\\\" \\\n              --label \\\"org.opencontainers.image.title=Swag\\\" \\\n              --label \\\"org.opencontainers.image.description=SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.\\\" \\\n              --no-cache --pull -f Dockerfile.aarch64 -t ${IMAGE}:arm64v8-${META_TAG} --platform=linux/arm64 \\\n              --provenance=true --sbom=true --builder=container --load \\\n              --build-arg ${BUILD_VERSION_ARG}=${EXT_RELEASE} --build-arg VERSION=\\\"${VERSION_TAG}\\\" --build-arg BUILD_DATE=${GITHUB_DATE} .\"\n            sh '''#! /bin/bash\n                  set -e\n                  IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                  for i in \"${CACHE[@]}\"; do\n                    docker tag ${IMAGE}:arm64v8-${META_TAG} ${i}:arm64v8-${COMMIT_SHA}-${BUILD_NUMBER}\n                  done\n               '''\n            withCredentials([\n              [\n                $class: 'UsernamePasswordMultiBinding',\n                credentialsId: 'Quay.io-Robot',\n                usernameVariable: 'QUAYUSER',\n                passwordVariable: 'QUAYPASS'\n              ]\n            ]) {\n              retry_backoff(5,5) {\n                  sh '''#! /bin/bash\n                        set -e\n                        echo $DOCKERHUB_TOKEN | docker login -u linuxserverci --password-stdin\n                        echo $GITHUB_TOKEN | docker login ghcr.io -u LinuxServer-CI --password-stdin\n                        echo $GITLAB_TOKEN | docker login registry.gitlab.com -u LinuxServer.io --password-stdin\n                        echo $QUAYPASS | docker login quay.io -u $QUAYUSER --password-stdin\n                        if [[ \"${PACKAGE_CHECK}\" != \"true\" ]]; then\n                          IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                          for i in \"${CACHE[@]}\"; do\n                            docker push ${i}:arm64v8-${COMMIT_SHA}-${BUILD_NUMBER} &\n                          done\n                          for p in $(jobs -p); do\n                            wait \"$p\" || { echo \"job $p failed\" >&2; exit 1; }\n                          done\n                        fi\n                    '''\n              }\n            }\n            sh '''#! /bin/bash\n                  containers=$(docker ps -aq)\n                  if [[ -n \"${containers}\" ]]; then\n                    docker stop ${containers}\n                  fi\n                  docker system prune -af --volumes || :\n               '''\n          }\n        }\n      }\n    }\n    // Take the image we just built and dump package versions for comparison\n    stage('Update-packages') {\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        sh '''#! /bin/bash\n              set -e\n              TEMPDIR=$(mktemp -d)\n              if [ \"${MULTIARCH}\" == \"true\" ] && [ \"${PACKAGE_CHECK}\" != \"true\" ]; then\n                LOCAL_CONTAINER=${IMAGE}:amd64-${META_TAG}\n              else\n                LOCAL_CONTAINER=${IMAGE}:${META_TAG}\n              fi\n              touch ${TEMPDIR}/package_versions.txt\n              docker run --rm \\\n                -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n                -v ${TEMPDIR}:/tmp \\\n                ghcr.io/anchore/syft:latest \\\n                ${LOCAL_CONTAINER} -o table=/tmp/package_versions.txt\n              NEW_PACKAGE_TAG=$(md5sum ${TEMPDIR}/package_versions.txt | cut -c1-8 )\n              echo \"Package tag sha from current packages in buit container is ${NEW_PACKAGE_TAG} comparing to old ${PACKAGE_TAG} from github\"\n              if [ \"${NEW_PACKAGE_TAG}\" != \"${PACKAGE_TAG}\" ]; then\n                git clone https://github.com/${LS_USER}/${LS_REPO}.git ${TEMPDIR}/${LS_REPO}\n                git --git-dir ${TEMPDIR}/${LS_REPO}/.git checkout -f master\n                cp ${TEMPDIR}/package_versions.txt ${TEMPDIR}/${LS_REPO}/\n                cd ${TEMPDIR}/${LS_REPO}/\n                wait\n                git add package_versions.txt\n                git commit -m 'Bot Updating Package Versions'\n                git pull https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                git push https://LinuxServer-CI:${GITHUB_TOKEN}@github.com/${LS_USER}/${LS_REPO}.git master\n                echo \"true\" > /tmp/packages-${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Package tag updated, stopping build process\"\n              else\n                echo \"false\" > /tmp/packages-${COMMIT_SHA}-${BUILD_NUMBER}\n                echo \"Package tag is same as previous continue with build process\"\n              fi\n              rm -Rf ${TEMPDIR}'''\n        script{\n          env.PACKAGE_UPDATED = sh(\n            script: '''cat /tmp/packages-${COMMIT_SHA}-${BUILD_NUMBER}''',\n            returnStdout: true).trim()\n        }\n      }\n    }\n    // Exit the build if the package file was just updated\n    stage('PACKAGE-exit') {\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'PACKAGE_UPDATED', value: 'true'\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        script{\n          env.EXIT_STATUS = 'ABORTED'\n        }\n      }\n    }\n    // Exit the build if this is just a package check and there are no changes to push\n    stage('PACKAGECHECK-exit') {\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'PACKAGE_UPDATED', value: 'false'\n        environment name: 'EXIT_STATUS', value: ''\n        expression {\n          params.PACKAGE_CHECK == 'true'\n        }\n      }\n      steps {\n        script{\n          env.EXIT_STATUS = 'ABORTED'\n        }\n      }\n    }\n    /* #######\n       Testing\n       ####### */\n    // Run Container tests\n    stage('Test') {\n      when {\n        environment name: 'CI', value: 'true'\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        withCredentials([\n          string(credentialsId: 'ci-tests-s3-key-id', variable: 'S3_KEY'),\n          string(credentialsId: 'ci-tests-s3-secret-access-key\t', variable: 'S3_SECRET')\n        ]) {\n          script{\n            env.CI_URL = 'https://ci-tests.linuxserver.io/' + env.IMAGE + '/' + env.META_TAG + '/index.html'\n            env.CI_JSON_URL = 'https://ci-tests.linuxserver.io/' + env.IMAGE + '/' + env.META_TAG + '/report.json'\n          }\n          sh '''#! /bin/bash\n                set -e\n                if grep -q 'docker-baseimage' <<< \"${LS_REPO}\"; then\n                  echo \"Detected baseimage, setting LSIO_FIRST_PARTY=true\"\n                  if [ -n \"${CI_DOCKERENV}\" ]; then\n                    CI_DOCKERENV=\"LSIO_FIRST_PARTY=true|${CI_DOCKERENV}\"\n                  else\n                    CI_DOCKERENV=\"LSIO_FIRST_PARTY=true\"\n                  fi\n                fi\n                docker pull ghcr.io/linuxserver/ci:latest\n                if [ \"${MULTIARCH}\" == \"true\" ]; then\n                  docker pull ghcr.io/linuxserver/lsiodev-buildcache:arm64v8-${COMMIT_SHA}-${BUILD_NUMBER} --platform=arm64\n                  docker tag ghcr.io/linuxserver/lsiodev-buildcache:arm64v8-${COMMIT_SHA}-${BUILD_NUMBER} ${IMAGE}:arm64v8-${META_TAG}\n                fi\n                docker run --rm \\\n                --shm-size=1gb \\\n                -v /var/run/docker.sock:/var/run/docker.sock \\\n                -e IMAGE=\\\"${IMAGE}\\\" \\\n                -e DOCKER_LOGS_TIMEOUT=\\\"${CI_DELAY}\\\" \\\n                -e TAGS=\\\"${CI_TAGS}\\\" \\\n                -e META_TAG=\\\"${META_TAG}\\\" \\\n                -e RELEASE_TAG=\\\"latest\\\" \\\n                -e PORT=\\\"${CI_PORT}\\\" \\\n                -e SSL=\\\"${CI_SSL}\\\" \\\n                -e BASE=\\\"${DIST_IMAGE}\\\" \\\n                -e SECRET_KEY=\\\"${S3_SECRET}\\\" \\\n                -e ACCESS_KEY=\\\"${S3_KEY}\\\" \\\n                -e DOCKER_ENV=\\\"${CI_DOCKERENV}\\\" \\\n                -e WEB_SCREENSHOT=\\\"${CI_WEB}\\\" \\\n                -e WEB_AUTH=\\\"${CI_AUTH}\\\" \\\n                -e WEB_PATH=\\\"${CI_WEBPATH}\\\" \\\n                -e NODE_NAME=\\\"${NODE_NAME}\\\" \\\n                -t ghcr.io/linuxserver/ci:latest \\\n                python3 test_build.py'''\n        }\n      }\n    }\n    /* ##################\n         Release Logic\n       ################## */\n    // If this is an amd64 only image only push a single image\n    stage('Docker-Push-Single') {\n      when {\n        environment name: 'MULTIARCH', value: 'false'\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        retry_backoff(5,5) {\n          sh '''#! /bin/bash\n                set -e\n                for PUSHIMAGE in \"${IMAGE}\" \"${GITLABIMAGE}\" \"${GITHUBIMAGE}\" \"${QUAYIMAGE}\"; do\n                  [[ ${PUSHIMAGE%%/*} =~ \\\\. ]] && PUSHIMAGEPLUS=\"${PUSHIMAGE}\" || PUSHIMAGEPLUS=\"docker.io/${PUSHIMAGE}\"\n                  IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                  for i in \"${CACHE[@]}\"; do\n                      if [[ \"${PUSHIMAGEPLUS}\" == \"$(cut -d \"/\" -f1 <<< ${i})\"* ]]; then\n                          CACHEIMAGE=${i}\n                      fi\n                  done\n                  docker buildx imagetools create --prefer-index=false -t ${PUSHIMAGE}:${META_TAG} -t ${PUSHIMAGE}:latest -t ${PUSHIMAGE}:${EXT_RELEASE_TAG} ${CACHEIMAGE}:amd64-${COMMIT_SHA}-${BUILD_NUMBER}\n                  if [ -n \"${SEMVER}\" ]; then\n                    docker buildx imagetools create --prefer-index=false -t ${PUSHIMAGE}:${SEMVER} ${CACHEIMAGE}:amd64-${COMMIT_SHA}-${BUILD_NUMBER}\n                  fi\n                done\n              '''\n        }\n      }\n    }\n    // If this is a multi arch release push all images and define the manifest\n    stage('Docker-Push-Multi') {\n      when {\n        environment name: 'MULTIARCH', value: 'true'\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        retry_backoff(5,5) {\n          sh '''#! /bin/bash\n                set -e\n                for MANIFESTIMAGE in \"${IMAGE}\" \"${GITLABIMAGE}\" \"${GITHUBIMAGE}\" \"${QUAYIMAGE}\"; do\n                  [[ ${MANIFESTIMAGE%%/*} =~ \\\\. ]] && MANIFESTIMAGEPLUS=\"${MANIFESTIMAGE}\" || MANIFESTIMAGEPLUS=\"docker.io/${MANIFESTIMAGE}\"\n                  IFS=',' read -ra CACHE <<< \"$BUILDCACHE\"\n                  for i in \"${CACHE[@]}\"; do\n                      if [[ \"${MANIFESTIMAGEPLUS}\" == \"$(cut -d \"/\" -f1 <<< ${i})\"* ]]; then\n                          CACHEIMAGE=${i}\n                      fi\n                  done\n                  docker buildx imagetools create --prefer-index=false -t ${MANIFESTIMAGE}:amd64-${META_TAG} -t ${MANIFESTIMAGE}:amd64-latest -t ${MANIFESTIMAGE}:amd64-${EXT_RELEASE_TAG} ${CACHEIMAGE}:amd64-${COMMIT_SHA}-${BUILD_NUMBER}\n                  docker buildx imagetools create --prefer-index=false -t ${MANIFESTIMAGE}:arm64v8-${META_TAG} -t ${MANIFESTIMAGE}:arm64v8-latest -t ${MANIFESTIMAGE}:arm64v8-${EXT_RELEASE_TAG} ${CACHEIMAGE}:arm64v8-${COMMIT_SHA}-${BUILD_NUMBER}\n                  if [ -n \"${SEMVER}\" ]; then\n                    docker buildx imagetools create --prefer-index=false -t ${MANIFESTIMAGE}:amd64-${SEMVER} ${CACHEIMAGE}:amd64-${COMMIT_SHA}-${BUILD_NUMBER}\n                    docker buildx imagetools create --prefer-index=false -t ${MANIFESTIMAGE}:arm64v8-${SEMVER} ${CACHEIMAGE}:arm64v8-${COMMIT_SHA}-${BUILD_NUMBER}\n                  fi\n                done\n                for MANIFESTIMAGE in \"${IMAGE}\" \"${GITLABIMAGE}\" \"${GITHUBIMAGE}\" \"${QUAYIMAGE}\"; do\n                  docker buildx imagetools create -t ${MANIFESTIMAGE}:latest ${MANIFESTIMAGE}:amd64-latest ${MANIFESTIMAGE}:arm64v8-latest\n                  docker buildx imagetools create -t ${MANIFESTIMAGE}:${META_TAG} ${MANIFESTIMAGE}:amd64-${META_TAG} ${MANIFESTIMAGE}:arm64v8-${META_TAG}\n\n                  docker buildx imagetools create -t ${MANIFESTIMAGE}:${EXT_RELEASE_TAG} ${MANIFESTIMAGE}:amd64-${EXT_RELEASE_TAG} ${MANIFESTIMAGE}:arm64v8-${EXT_RELEASE_TAG}\n                  if [ -n \"${SEMVER}\" ]; then\n                    docker buildx imagetools create -t ${MANIFESTIMAGE}:${SEMVER} ${MANIFESTIMAGE}:amd64-${SEMVER} ${MANIFESTIMAGE}:arm64v8-${SEMVER}\n                  fi\n                done\n              '''\n        }\n      }\n    }\n    // If this is a public release tag it in the LS Github\n    stage('Github-Tag-Push-Release') {\n      when {\n        branch \"master\"\n        expression {\n          env.LS_RELEASE != env.EXT_RELEASE_CLEAN + '-ls' + env.LS_TAG_NUMBER\n        }\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        echo \"Pushing New tag for current commit ${META_TAG}\"\n        sh '''curl -H \"Authorization: token ${GITHUB_TOKEN}\" -X POST https://api.github.com/repos/${LS_USER}/${LS_REPO}/git/tags \\\n        -d '{\"tag\":\"'${META_TAG}'\",\\\n             \"object\": \"'${COMMIT_SHA}'\",\\\n             \"message\": \"Tagging Release '${EXT_RELEASE_CLEAN}'-ls'${LS_TAG_NUMBER}' to master\",\\\n             \"type\": \"commit\",\\\n             \"tagger\": {\"name\": \"LinuxServer-CI\",\"email\": \"ci@linuxserver.io\",\"date\": \"'${GITHUB_DATE}'\"}}' '''\n        echo \"Pushing New release for Tag\"\n        sh '''#! /bin/bash\n              echo \"Updating PIP version of ${EXT_PIP} to ${EXT_RELEASE_CLEAN}\" > releasebody.json\n              echo '{\"tag_name\":\"'${META_TAG}'\",\\\n                     \"target_commitish\": \"master\",\\\n                     \"name\": \"'${META_TAG}'\",\\\n                     \"body\": \"**CI Report:**\\\\n\\\\n'${CI_URL:-N/A}'\\\\n\\\\n**LinuxServer Changes:**\\\\n\\\\n'${LS_RELEASE_NOTES}'\\\\n\\\\n**Remote Changes:**\\\\n\\\\n' > start\n              printf '\",\"draft\": false,\"prerelease\": false}' >> releasebody.json\n              paste -d'\\\\0' start releasebody.json > releasebody.json.done\n              curl -H \"Authorization: token ${GITHUB_TOKEN}\" -X POST https://api.github.com/repos/${LS_USER}/${LS_REPO}/releases -d @releasebody.json.done'''\n      }\n    }\n    // Add protection to the release branch\n    stage('Github-Release-Branch-Protection') {\n      when {\n        branch \"master\"\n        environment name: 'CHANGE_ID', value: ''\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        echo \"Setting up protection for release branch master\"\n        sh '''#! /bin/bash\n          curl -H \"Authorization: token ${GITHUB_TOKEN}\" -X PUT https://api.github.com/repos/${LS_USER}/${LS_REPO}/branches/master/protection \\\n          -d $(jq -c .  << EOF\n            {\n              \"required_status_checks\": null,\n              \"enforce_admins\": false,\n              \"required_pull_request_reviews\": {\n                \"dismiss_stale_reviews\": false,\n                \"require_code_owner_reviews\": false,\n                \"require_last_push_approval\": false,\n                \"required_approving_review_count\": 1\n              },\n              \"restrictions\": null,\n              \"required_linear_history\": false,\n              \"allow_force_pushes\": false,\n              \"allow_deletions\": false,\n              \"block_creations\": false,\n              \"required_conversation_resolution\": true,\n              \"lock_branch\": false,\n              \"allow_fork_syncing\": false,\n              \"required_signatures\": false\n            }\nEOF\n          ) '''\n      }\n    }\n    // If this is a Pull request send the CI link as a comment on it\n    stage('Pull Request Comment') {\n      when {\n        not {environment name: 'CHANGE_ID', value: ''}\n        environment name: 'EXIT_STATUS', value: ''\n      }\n      steps {\n        sh '''#! /bin/bash\n            # Function to retrieve JSON data from URL\n            get_json() {\n              local url=\"$1\"\n              local response=$(curl -s \"$url\")\n              if [ $? -ne 0 ]; then\n                echo \"Failed to retrieve JSON data from $url\"\n                return 1\n              fi\n              local json=$(echo \"$response\" | jq .)\n              if [ $? -ne 0 ]; then\n                echo \"Failed to parse JSON data from $url\"\n                return 1\n              fi\n              echo \"$json\"\n            }\n\n            build_table() {\n              local data=\"$1\"\n\n              # Get the keys in the JSON data\n              local keys=$(echo \"$data\" | jq -r 'to_entries | map(.key) | .[]')\n\n              # Check if keys are empty\n              if [ -z \"$keys\" ]; then\n                echo \"JSON report data does not contain any keys or the report does not exist.\"\n                return 1\n              fi\n\n              # Build table header\n              local header=\"| Tag | Passed |\\\\n| --- | --- |\\\\n\"\n\n              # Loop through the JSON data to build the table rows\n              local rows=\"\"\n              for build in $keys; do\n                local status=$(echo \"$data\" | jq -r \".[\\\\\"$build\\\\\"].test_success\")\n                if [ \"$status\" = \"true\" ]; then\n                  status=\"✅\"\n                else\n                  status=\"❌\"\n                fi\n                local row=\"| \"$build\" | \"$status\" |\\\\n\"\n                rows=\"${rows}${row}\"\n              done\n\n              local table=\"${header}${rows}\"\n              local escaped_table=$(echo \"$table\" | sed 's/\\\"/\\\\\\\\\"/g')\n              echo \"$escaped_table\"\n            }\n\n            if [[ \"${CI}\" = \"true\" ]]; then\n              # Retrieve JSON data from URL\n              data=$(get_json \"$CI_JSON_URL\")\n              # Create table from JSON data\n              table=$(build_table \"$data\")\n              echo -e \"$table\"\n\n              curl -X POST -H \"Authorization: token $GITHUB_TOKEN\" \\\n                -H \"Accept: application/vnd.github.v3+json\" \\\n                \"https://api.github.com/repos/$LS_USER/$LS_REPO/issues/$PULL_REQUEST/comments\" \\\n                -d \"{\\\\\"body\\\\\": \\\\\"I am a bot, here are the test results for this PR: \\\\n${CI_URL}\\\\n${SHELLCHECK_URL}\\\\n${table}\\\\\"}\"\n            else\n              curl -X POST -H \"Authorization: token $GITHUB_TOKEN\" \\\n                -H \"Accept: application/vnd.github.v3+json\" \\\n                \"https://api.github.com/repos/$LS_USER/$LS_REPO/issues/$PULL_REQUEST/comments\" \\\n                -d \"{\\\\\"body\\\\\": \\\\\"I am a bot, here is the pushed image/manifest for this PR: \\\\n\\\\n\\\\`${GITHUBIMAGE}:${META_TAG}\\\\`\\\\\"}\"\n            fi\n            '''\n\n      }\n    }\n  }\n  /* ######################\n     Send status to Discord\n     ###################### */\n  post {\n    always {\n      sh '''#!/bin/bash\n            rm -rf /config/.ssh/id_sign\n            rm -rf /config/.ssh/id_sign.pub\n            git config --global --unset gpg.format\n            git config --global --unset user.signingkey\n            git config --global --unset commit.gpgsign\n        '''\n      script{\n        env.JOB_DATE = sh(\n            script: '''date '+%Y-%m-%dT%H:%M:%S%:z' ''',\n            returnStdout: true).trim()\n        if (env.EXIT_STATUS == \"ABORTED\"){\n          sh 'echo \"build aborted\"'\n        }else{\n          if (currentBuild.currentResult == \"SUCCESS\"){\n            if (env.GITHUBIMAGE =~ /lspipepr/){\n              env.JOB_WEBHOOK_STATUS='Success'\n              env.JOB_WEBHOOK_COLOUR=3957028\n              env.JOB_WEBHOOK_FOOTER='PR Build'\n            }else if (env.GITHUBIMAGE =~ /lsiodev/){\n              env.JOB_WEBHOOK_STATUS='Success'\n              env.JOB_WEBHOOK_COLOUR=3957028\n              env.JOB_WEBHOOK_FOOTER='Dev Build'\n            }else{\n              env.JOB_WEBHOOK_STATUS='Success'\n              env.JOB_WEBHOOK_COLOUR=1681177\n              env.JOB_WEBHOOK_FOOTER='Live Build'\n            }\n          }else{\n            if (env.GITHUBIMAGE =~ /lspipepr/){\n              env.JOB_WEBHOOK_STATUS='Failure'\n              env.JOB_WEBHOOK_COLOUR=12669523\n              env.JOB_WEBHOOK_FOOTER='PR Build'\n            }else if (env.GITHUBIMAGE =~ /lsiodev/){\n              env.JOB_WEBHOOK_STATUS='Failure'\n              env.JOB_WEBHOOK_COLOUR=12669523\n              env.JOB_WEBHOOK_FOOTER='Dev Build'\n            }else{\n              env.JOB_WEBHOOK_STATUS='Failure'\n              env.JOB_WEBHOOK_COLOUR=16711680\n              env.JOB_WEBHOOK_FOOTER='Live Build'\n            }\n          }\n          sh ''' curl -X POST -H \"Content-Type: application/json\" --data '{\"avatar_url\": \"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jenkins-avatar.png\",\"embeds\": [{\"'color'\": '${JOB_WEBHOOK_COLOUR}',\\\n                 \"footer\": {\"text\" : \"'\"${JOB_WEBHOOK_FOOTER}\"'\"},\\\n                 \"timestamp\": \"'${JOB_DATE}'\",\\\n                 \"description\": \"**Build:**  '${BUILD_NUMBER}'\\\\n**CI Results:**  '${CI_URL}'\\\\n**ShellCheck Results:**  '${SHELLCHECK_URL}'\\\\n**Status:**  '${JOB_WEBHOOK_STATUS}'\\\\n**Job:** '${RUN_DISPLAY_URL}'\\\\n**Change:** '${CODE_URL}'\\\\n**External Release:**: '${RELEASE_LINK}'\\\\n**DockerHub:** '${DOCKERHUB_LINK}'\\\\n\"}],\\\n                 \"username\": \"Jenkins\"}' ${BUILDS_DISCORD} '''\n        }\n      }\n    }\n    cleanup {\n      sh '''#! /bin/bash\n            echo \"Performing docker system prune!!\"\n            containers=$(docker ps -aq)\n            if [[ -n \"${containers}\" ]]; then\n              docker stop ${containers}\n            fi\n            docker system prune -af --volumes || :\n         '''\n      cleanWs()\n    }\n  }\n}\n\ndef retry_backoff(int max_attempts, int power_base, Closure c) {\n  int n = 0\n  while (n < max_attempts) {\n    try {\n      c()\n      return\n    } catch (err) {\n      if ((n + 1) >= max_attempts) {\n        throw err\n      }\n      sleep(power_base ** n)\n      n++\n    }\n  }\n  return\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 34.7626953125,
          "content": "<!-- DO NOT EDIT THIS FILE MANUALLY -->\n<!-- Please read https://github.com/linuxserver/docker-swag/blob/master/.github/CONTRIBUTING.md -->\n[![linuxserver.io](https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png)](https://linuxserver.io)\n\n[![Blog](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Blog)](https://blog.linuxserver.io \"all the things you can do with our containers including How-To guides, opinions and much more!\")\n[![Discord](https://img.shields.io/discord/354974912613449730.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Discord&logo=discord)](https://discord.gg/YWrKVTn \"realtime support / chat with the community and the team.\")\n[![Discourse](https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=discourse)](https://discourse.linuxserver.io \"post on our community forum.\")\n[![Fleet](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Fleet)](https://fleet.linuxserver.io \"an online web interface which displays all of our maintained images.\")\n[![GitHub](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub&logo=github)](https://github.com/linuxserver \"view the source for all of our repositories.\")\n[![Open Collective](https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Supporters&logo=open%20collective)](https://opencollective.com/linuxserver \"please consider helping us by either donating or contributing to our budget\")\n\nThe [LinuxServer.io](https://linuxserver.io) team brings you another container release featuring:\n\n* regular and timely application updates\n* easy user mappings (PGID, PUID)\n* custom base image with s6 overlay\n* weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth\n* regular security updates\n\nFind us at:\n\n* [Blog](https://blog.linuxserver.io) - all the things you can do with our containers including How-To guides, opinions and much more!\n* [Discord](https://discord.gg/YWrKVTn) - realtime support / chat with the community and the team.\n* [Discourse](https://discourse.linuxserver.io) - post on our community forum.\n* [Fleet](https://fleet.linuxserver.io) - an online web interface which displays all of our maintained images.\n* [GitHub](https://github.com/linuxserver) - view the source for all of our repositories.\n* [Open Collective](https://opencollective.com/linuxserver) - please consider helping us by either donating or contributing to our budget\n\n# [linuxserver/swag](https://github.com/linuxserver/docker-swag)\n\n[![Scarf.io pulls](https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fswag?color=94398d&label-color=555555&logo-color=ffffff&style=for-the-badge&package-type=docker)](https://scarf.sh)\n[![GitHub Stars](https://img.shields.io/github/stars/linuxserver/docker-swag.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https://github.com/linuxserver/docker-swag)\n[![GitHub Release](https://img.shields.io/github/release/linuxserver/docker-swag.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https://github.com/linuxserver/docker-swag/releases)\n[![GitHub Package Repository](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub%20Package&logo=github)](https://github.com/linuxserver/docker-swag/packages)\n[![GitLab Container Registry](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitLab%20Registry&logo=gitlab)](https://gitlab.com/linuxserver.io/docker-swag/container_registry)\n[![Quay.io](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Quay.io)](https://quay.io/repository/linuxserver.io/swag)\n[![Docker Pulls](https://img.shields.io/docker/pulls/linuxserver/swag.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=pulls&logo=docker)](https://hub.docker.com/r/linuxserver/swag)\n[![Docker Stars](https://img.shields.io/docker/stars/linuxserver/swag.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=stars&logo=docker)](https://hub.docker.com/r/linuxserver/swag)\n[![Jenkins Build](https://img.shields.io/jenkins/build?labelColor=555555&logoColor=ffffff&style=for-the-badge&jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-swag%2Fjob%2Fmaster%2F&logo=jenkins)](https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-swag/job/master/)\n\nSWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.\n\n[![swag](https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif)](https://linuxserver.io)\n\n## Supported Architectures\n\nWe utilise the docker manifest for multi-platform awareness. More information is available from docker [here](https://distribution.github.io/distribution/spec/manifest-v2-2/#manifest-list) and our announcement [here](https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/).\n\nSimply pulling `lscr.io/linuxserver/swag:latest` should retrieve the correct image for your arch, but you can also pull specific arch images via tags.\n\nThe architectures supported by this image are:\n\n| Architecture | Available | Tag |\n| :----: | :----: | ---- |\n| x86-64 | ✅ | amd64-\\<version tag\\> |\n| arm64 | ✅ | arm64v8-\\<version tag\\> |\n| armhf | ❌ | |\n\n## Application Setup\n\n### Validation and initial setup\n\n* Before running this container, make sure that the url and subdomains are properly forwarded to this container's host, and that port 443 (and/or 80) is not being used by another service on the host (NAS gui, another webserver, etc.).\n* If you need a dynamic dns provider, you can use the free provider duckdns.org where the `URL` will be `yoursubdomain.duckdns.org` and the `SUBDOMAINS` can be `www,ftp,cloud` with http validation, or `wildcard` with dns validation. You can use our [duckdns image](https://hub.docker.com/r/linuxserver/duckdns/) to update your IP on duckdns.org.\n* For `http` validation, port 80 on the internet side of the router should be forwarded to this container's port 80\n* For `dns` validation, make sure to enter your credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`\n  * Cloudflare provides free accounts for managing dns and is very easy to use with this image. Make sure that it is set up for \"dns only\" instead of \"dns + proxy\"\n  * Google dns plugin is meant to be used with \"Google Cloud DNS\", a paid enterprise product, and not for \"Google Domains DNS\"\n  * DuckDNS only supports two types of DNS validated certificates (not both at the same time):\n    1. Certs that only cover your main subdomain (ie. `yoursubdomain.duckdns.org`, leave the `SUBDOMAINS` variable empty)\n    2. Certs that cover sub-subdomains of your main subdomain (ie. `*.yoursubdomain.duckdns.org`, set the `SUBDOMAINS` variable to `wildcard`)\n* `--cap-add=NET_ADMIN` is required for fail2ban to modify iptables\n* After setup, navigate to `https://example.com` to access the default homepage (http access through port 80 is disabled by default, you can enable it by editing the default site config at `/config/nginx/site-confs/default.conf`).\n* Certs are checked nightly and if expiration is within 30 days, renewal is attempted. If your cert is about to expire in less than 30 days, check the logs under `/config/log/letsencrypt` to see why the renewals have been failing. It is recommended to input your e-mail in docker parameters so you receive expiration notices from Let's Encrypt in those circumstances.\n\n### Certbot Plugins\n\nSWAG includes many Certbot plugins out of the box, but not all plugins can be included.\nIf you need a plugin that is not included, the quickest way to have the plugin available is to use our [Universal Package Install Docker Mod](https://github.com/linuxserver/docker-mods/tree/universal-package-install).\n\nSet the following environment variables on your container:\n\n```yaml\nDOCKER_MODS=linuxserver/mods:universal-package-install\nINSTALL_PIP_PACKAGES=certbot-dns-<plugin>\n```\n\nSet the required credentials (usually found in the plugin documentation) in `/config/dns-conf/<plugin>.ini`.\nIt is recommended to attempt obtaining a certificate with `STAGING=true` first to make sure the plugin is working as expected.\n\n### Security and password protection\n\n* The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.\n* Per [RFC7919](https://datatracker.ietf.org/doc/html/rfc7919), the container is shipping [ffdhe4096](https://ssl-config.mozilla.org/ffdhe4096.txt) as the `dhparams.pem`.\n* If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file `docker exec -it swag htpasswd -c /config/nginx/.htpasswd <username>`\n* You can add multiple user:pass to `.htpasswd`. For the first user, use the above command, for others, use the above command without the `-c` flag, as it will force deletion of the existing `.htpasswd` and creation of a new one\n* You can also use ldap auth for security and access control. A sample, user configurable ldap.conf is provided, and it requires the separate image [linuxserver/ldap-auth](https://hub.docker.com/r/linuxserver/ldap-auth/) to communicate with an ldap server.\n\n### Site config and reverse proxy\n\n* The default site config resides at `/config/nginx/site-confs/default.conf`. Feel free to modify this file, and you can add other conf files to this directory. However, if you delete the `default` file, a new default will be created on container start.\n* Preset reverse proxy config files are added for popular apps. See the `README.md` file under `/config/nginx/proxy_confs` for instructions on how to enable them. The preset confs reside in and get imported from [this repo](https://github.com/linuxserver/reverse-proxy-confs).\n* If you wish to hide your site from search engine crawlers, you may find it useful to add this configuration line to your site config, within the server block, above the line where ssl.conf is included\n`add_header X-Robots-Tag \"noindex, nofollow, nosnippet, noarchive\";`\nThis will *ask* Google et al not to index and list your site. Be careful with this, as you will eventually be de-listed if you leave this line in on a site you wish to be present on search engines\n* If you wish to redirect http to https, you must expose port 80\n\n### Using certs in other containers\n\n* This container includes auto-generated pfx and private-fullchain-bundle pem certs that are needed by other apps like Emby and Znc.\n  * To use these certs in other containers, do either of the following:\n  1. *(Easier)* Mount the container's config folder in other containers (ie. `-v /path-to-swag-config:/swag-ssl`) and in the other containers, use the cert location `/swag-ssl/keys/letsencrypt/`\n  2. *(More secure)* Mount the SWAG folder `etc` that resides under `/config` in other containers (ie. `-v /path-to-swag-config/etc:/swag-ssl`) and in the other containers, use the cert location `/swag-ssl/letsencrypt/live/<your.domain.url>/` (This is more secure because the first method shares the entire SWAG config folder with other containers, including the www files, whereas the second method only shares the ssl certs)\n  * These certs include:\n  1. `cert.pem`, `chain.pem`, `fullchain.pem` and `privkey.pem`, which are generated by Certbot and used by nginx and various other apps\n  2. `privkey.pfx`, a format supported by Microsoft and commonly used by dotnet apps such as Emby Server (no password)\n  3. `priv-fullchain-bundle.pem`, a pem cert that bundles the private key and the fullchain, used by apps like ZNC\n\n### Using fail2ban\n\n* This container includes fail2ban set up with 5 jails by default:\n  1. nginx-http-auth\n  2. nginx-badbots\n  3. nginx-botsearch\n  4. nginx-deny\n  5. nginx-unauthorized\n* To enable or disable other jails, modify the file `/config/fail2ban/jail.local`\n* To modify filters and actions, instead of editing the `.conf` files, create `.local` files with the same name and edit those because .conf files get overwritten when the actions and filters are updated. `.local` files will append whatever's in the `.conf` files (ie. `nginx-http-auth.conf` --> `nginx-http-auth.local`)\n* You can check which jails are active via `docker exec -it swag fail2ban-client status`\n* You can check the status of a specific jail via `docker exec -it swag fail2ban-client status <jail name>`\n* You can unban an IP via `docker exec -it swag fail2ban-client set <jail name> unbanip <IP>`\n* A list of commands for fail2ban-client can be found [here](https://manpages.ubuntu.com/manpages/noble/man1/fail2ban-client.1.html)\n\n### Updating configs\n\n* This container creates a number of configs for nginx, proxy samples, etc.\n* Config updates are noted in the changelog but not automatically applied to your files.\n* If you have modified a file with noted changes in the changelog:\n  1. Keep your existing configs as is (not broken, don't fix)\n  2. Review our repository commits and apply the new changes yourself\n  3. Delete the modified config file with listed updates, restart the container, reapply your changes\n* If you have NOT modified a file with noted changes in the changelog:\n  1. Delete the config file with listed updates, restart the container\n* Proxy sample updates are not listed in the changelog. See the changes here: [https://github.com/linuxserver/reverse-proxy-confs/commits/master](https://github.com/linuxserver/reverse-proxy-confs/commits/master)\n* Proxy sample files WILL be updated, however your renamed (enabled) proxy files will not.\n* You can check the new sample and adjust your active config as needed.\n\n### Migration from the old `linuxserver/letsencrypt` image\n\nPlease follow the instructions [on this blog post](https://www.linuxserver.io/blog/2020-08-21-introducing-swag#migrate).\n\n## Read-Only Operation\n\nThis image can be run with a read-only container filesystem. For details please [read the docs](https://docs.linuxserver.io/misc/read-only/).\n\n### Caveats\n\n* `/tmp` must be mounted to tmpfs\n* fail2ban will not be available\n\n## Usage\n\nTo help you get started creating a container from this image you can either use docker-compose or the docker cli.\n\n>[!NOTE]\n>Unless a parameter is flaged as 'optional', it is *mandatory* and a value must be provided.\n\n### docker-compose (recommended, [click here for more info](https://docs.linuxserver.io/general/docker-compose))\n\n```yaml\n---\nservices:\n  swag:\n    image: lscr.io/linuxserver/swag:latest\n    container_name: swag\n    cap_add:\n      - NET_ADMIN\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Etc/UTC\n      - URL=example.com\n      - VALIDATION=http\n      - SUBDOMAINS=www, #optional\n      - CERTPROVIDER= #optional\n      - DNSPLUGIN=cloudflare #optional\n      - PROPAGATION= #optional\n      - EMAIL= #optional\n      - ONLY_SUBDOMAINS=false #optional\n      - EXTRA_DOMAINS= #optional\n      - STAGING=false #optional\n      - DISABLE_F2B= #optional\n    volumes:\n      - /path/to/swag/config:/config\n    ports:\n      - 443:443\n      - 80:80 #optional\n    restart: unless-stopped\n```\n\n### docker cli ([click here for more info](https://docs.docker.com/engine/reference/commandline/cli/))\n\n```bash\ndocker run -d \\\n  --name=swag \\\n  --cap-add=NET_ADMIN \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Etc/UTC \\\n  -e URL=example.com \\\n  -e VALIDATION=http \\\n  -e SUBDOMAINS=www, `#optional` \\\n  -e CERTPROVIDER= `#optional` \\\n  -e DNSPLUGIN=cloudflare `#optional` \\\n  -e PROPAGATION= `#optional` \\\n  -e EMAIL= `#optional` \\\n  -e ONLY_SUBDOMAINS=false `#optional` \\\n  -e EXTRA_DOMAINS= `#optional` \\\n  -e STAGING=false `#optional` \\\n  -e DISABLE_F2B= `#optional` \\\n  -p 443:443 \\\n  -p 80:80 `#optional` \\\n  -v /path/to/swag/config:/config \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/swag:latest\n```\n\n## Parameters\n\nContainers are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate `<external>:<internal>` respectively. For example, `-p 8080:80` would expose port `80` from inside the container to be accessible from the host's IP on port `8080` outside the container.\n\n| Parameter | Function |\n| :----: | --- |\n| `-p 443:443` | HTTPS port |\n| `-p 80` | HTTP port (required for HTTP validation and HTTP -> HTTPS redirect) |\n| `-e PUID=1000` | for UserID - see below for explanation |\n| `-e PGID=1000` | for GroupID - see below for explanation |\n| `-e TZ=Etc/UTC` | specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List). |\n| `-e URL=example.com` | Top url you have control over (e.g. `example.com` if you own it, or `customsubdomain.example.com` if dynamic dns). |\n| `-e VALIDATION=http` | Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set). |\n| `-e SUBDOMAINS=www,` | Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only) |\n| `-e CERTPROVIDER=` | Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt. |\n| `-e DNSPLUGIN=cloudflare` | Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `bunny`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `dreamhost`, `duckdns`, `dynu`, `freedns`, `gandi`, `gehirn`, `glesys`, `godaddy`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `namecheap`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`. |\n| `-e PROPAGATION=` | Optionally override (in seconds) the default propagation time for the dns plugins. |\n| `-e EMAIL=` | Optional e-mail address used for cert expiration notifications (Required for ZeroSSL). |\n| `-e ONLY_SUBDOMAINS=false` | If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true` |\n| `-e EXTRA_DOMAINS=` | Additional fully qualified domain names (comma separated, no spaces) ie. `example.net,subdomain.example.net,*.example.org` |\n| `-e STAGING=false` | Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes. |\n| `-e DISABLE_F2B=` | Set to `true` to disable the Fail2ban service in the container, if you're already running it elsewhere or using a different IPS. |\n| `-v /config` | Persistent config files |\n| `--read-only=true` | Run container with a read-only filesystem. Please [read the docs](https://docs.linuxserver.io/misc/read-only/). |\n| `--cap-add=NET_ADMIN` | Required for fail2Ban to be able to modify iptables rules. |\n\n### Portainer notice\n\nThis image utilises `cap_add` or `sysctl` to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.\n\n## Environment variables from files (Docker secrets)\n\nYou can set any environment variable from a file by using a special prepend `FILE__`.\n\nAs an example:\n\n```bash\n-e FILE__MYVAR=/run/secrets/mysecretvariable\n```\n\nWill set the environment variable `MYVAR` based on the contents of the `/run/secrets/mysecretvariable` file.\n\n## Umask for running applications\n\nFor all of our images we provide the ability to override the default umask settings for services started within the containers using the optional `-e UMASK=022` setting.\nKeep in mind umask is not chmod it subtracts from permissions based on it's value it does not add. Please read up [here](https://en.wikipedia.org/wiki/Umask) before asking for support.\n\n## User / Group Identifiers\n\nWhen using volumes (`-v` flags), permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user `PUID` and group `PGID`.\n\nEnsure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.\n\nIn this instance `PUID=1000` and `PGID=1000`, to find yours use `id your_user` as below:\n\n```bash\nid your_user\n```\n\nExample output:\n\n```text\nuid=1000(your_user) gid=1000(your_user) groups=1000(your_user)\n```\n\n## Docker Mods\n\n[![Docker Mods](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=swag&query=%24.mods%5B%27swag%27%5D.mod_count&url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml)](https://mods.linuxserver.io/?mod=swag \"view available mods for this container.\") [![Docker Universal Mods](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=universal&query=%24.mods%5B%27universal%27%5D.mod_count&url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml)](https://mods.linuxserver.io/?mod=universal \"view available universal mods.\")\n\nWe publish various [Docker Mods](https://github.com/linuxserver/docker-mods) to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.\n\n## Support Info\n\n* Shell access whilst the container is running:\n\n    ```bash\n    docker exec -it swag /bin/bash\n    ```\n\n* To monitor the logs of the container in realtime:\n\n    ```bash\n    docker logs -f swag\n    ```\n\n* Container version number:\n\n    ```bash\n    docker inspect -f '{{ index .Config.Labels \"build_version\" }}' swag\n    ```\n\n* Image version number:\n\n    ```bash\n    docker inspect -f '{{ index .Config.Labels \"build_version\" }}' lscr.io/linuxserver/swag:latest\n    ```\n\n## Updating Info\n\nMost of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (noted in the relevant readme.md), we do not recommend or support updating apps inside the container. Please consult the [Application Setup](#application-setup) section above to see if it is recommended for the image.\n\nBelow are the instructions for updating containers:\n\n### Via Docker Compose\n\n* Update images:\n    * All images:\n\n        ```bash\n        docker-compose pull\n        ```\n\n    * Single image:\n\n        ```bash\n        docker-compose pull swag\n        ```\n\n* Update containers:\n    * All containers:\n\n        ```bash\n        docker-compose up -d\n        ```\n\n    * Single container:\n\n        ```bash\n        docker-compose up -d swag\n        ```\n\n* You can also remove the old dangling images:\n\n    ```bash\n    docker image prune\n    ```\n\n### Via Docker Run\n\n* Update the image:\n\n    ```bash\n    docker pull lscr.io/linuxserver/swag:latest\n    ```\n\n* Stop the running container:\n\n    ```bash\n    docker stop swag\n    ```\n\n* Delete the container:\n\n    ```bash\n    docker rm swag\n    ```\n\n* Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your `/config` folder and settings will be preserved)\n* You can also remove the old dangling images:\n\n    ```bash\n    docker image prune\n    ```\n\n### Image Update Notifications - Diun (Docker Image Update Notifier)\n\n>[!TIP]\n>We recommend [Diun](https://crazymax.dev/diun/) for update notifications. Other tools that automatically update containers unattended are not recommended or supported.\n\n## Building locally\n\nIf you want to make local modifications to these images for development purposes or just to customize the logic:\n\n```bash\ngit clone https://github.com/linuxserver/docker-swag.git\ncd docker-swag\ndocker build \\\n  --no-cache \\\n  --pull \\\n  -t lscr.io/linuxserver/swag:latest .\n```\n\nThe ARM variants can be built on x86_64 hardware and vice versa using `lscr.io/linuxserver/qemu-static`\n\n```bash\ndocker run --rm --privileged lscr.io/linuxserver/qemu-static --reset\n```\n\nOnce registered you can define the dockerfile to use with `-f Dockerfile.aarch64`.\n\n## Versions\n\n* **17.12.24:** - Rebase to Alpine 3.21.\n* **21.10.24:** - Fix naming issue with Dynu plugin. If you are using Dynu, please make sure your credentials are set in /config/dns-conf/dynu.ini and your DNSPLUGIN variable is set to dynu (not dynudns).\n* **30.08.24:** - Fix zerossl cert revocation.\n* **24.07.14:** - Rebase to Alpine 3.20. Remove deprecated Google Domains certbot plugin. Existing users should update their nginx confs to avoid http2 deprecation warnings.\n* **01.07.24:** - Fall back to iptables-legacy if iptables doesn't work.\n* **23.03.24:** - Fix perms on the generated `priv-fullchain-bundle.pem`.\n* **14.03.24:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-location.conf, authelia-server.conf - Update Authelia conf samples with support for 4.38.\n* **11.03.24:** - Restore support for DynuDNS using `certbot-dns-dynudns`.\n* **06.03.24:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) site-confs/default.conf - Cleanup default site conf.\n* **04.03.24:** - Remove `stream.conf` inside the container to allow users to include their own block in `nginx.conf`.\n* **23.01.24:** - Rebase to Alpine 3.19 with php 8.3, add root periodic crontabs for logrotate.\n* **01.01.24:** - Add GleSYS DNS plugin.\n* **11.12.23:** - Deprecate certbot-dns-dynu to resolve dependency conflicts with other plugins.\n* **30.11.23:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) site-confs/default.conf - Fix index.php being downloaded on 404.\n* **23.11.23:** - Run certbot as root to allow fix http validation.\n* **01.10.23:** - Fix \"unrecognized arguments\" issue in DirectAdmin DNS plugin.\n* **28.08.23:** - Add Namecheap DNS plugin.\n* **12.08.23:** - Add FreeDNS plugin. Detect certbot DNS authenticators using CLI.\n* **07.08.23:** - Add Bunny DNS Configuration.\n* **27.07.23:** - Added support for dreamhost validation.\n* **25.05.23:** - Rebase to Alpine 3.18, deprecate armhf.\n* **27.04.23:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-location.conf, authelia-server.conf, authentik-location.conf, authentik-server.conf - Simplify auth configs and fix Set-Cookie header bug.\n* **13.04.23:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, authelia-location.conf, authentik-location.conf, and site-confs/default.conf - Move ssl.conf include to default.conf. Remove Authorization headers in authelia. Sort proxy_set_header in authelia and authentik.\n* **25.03.23:** - Fix renewal post hook.\n* **10.03.23:** - Cleanup unused csr and keys folders. See [certbot 2.3.0 release notes](https://github.com/certbot/certbot/releases/tag/v2.3.0).\n* **09.03.23:** - Add Google Domains DNS support, `google-domains`.\n* **02.03.23:** - Set permissions on crontabs during init.\n* **09.02.23:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) proxy.conf, authelia-location.conf and authelia-server.conf - Add Authentik configs, update Authelia configs.\n* **06.02.23:** - Add porkbun support back in.\n* **21.01.23:** - Unpin certbot version (allow certbot 2.x). !!BREAKING CHANGE!! We are temporarily removing the certbot porkbun plugin until a new version is released that is compatible with certbot 2.x.\n* **20.01.23:** - Rebase to alpine 3.17 with php8.1.\n* **16.01.23:** - Remove nchan module because it keeps causing crashes.\n* **08.12.22:** - Revamp certbot init.\n* **03.12.22:** - Remove defunct cloudxns plugin.\n* **22.11.22:** - Pin acme to the same version as certbot.\n* **22.11.22:** - Pin certbot to 1.32.0 until plugin compatibility improves.\n* **05.11.22:** - Update acmedns plugin handling.\n* **06.10.22:** - Switch to certbot-dns-duckdns. Update cpanel and gandi dns plugin handling. Minor adjustments to init logic.\n* **05.10.22:** - Use certbot file hooks instead of command line hooks\n* **04.10.22:** - Add godaddy and porkbun dns plugins.\n* **03.10.22:** - Add default_server back to default site conf's https listen.\n* **22.09.22:** - Added support for DO DNS validation.\n* **22.09.22:** - Added certbot-dns-acmedns for DNS01 validation.\n* **20.08.22:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf - Rebasing to alpine 3.15 with php8. Restructure nginx configs ([see changes announcement](https://info.linuxserver.io/issues/2022-08-20-nginx-base)).\n* **10.08.22:** - Added support for Dynu DNS validation.\n* **18.05.22:** - Added support for Azure DNS validation.\n* **09.04.22:** - Added certbot-dns-loopia for DNS01 validation.\n* **05.04.22:** - Added support for standalone DNS validation.\n* **28.03.22:** - created a logfile for fail2ban nginx-unauthorized in /etc/cont-init.d/50-config\n* **09.01.22:** - Added a fail2ban jail for nginx unauthorized\n* **21.12.21:** - Fixed issue with iptables not working as expected\n* **30.11.21:** - Move maxmind to a [new mod](https://github.com/linuxserver/docker-mods/tree/swag-maxmind)\n* **22.11.21:** - Added support for Infomaniak DNS for certificate generation.\n* **20.11.21:** - Added support for dnspod validation.\n* **15.11.21:** - Added support for deSEC DNS for wildcard certificate generation.\n* **26.10.21:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) proxy.conf - Mitigate <https://httpoxy.org/> vulnerabilities. Ref: <https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus>\n* **23.10.21:** - Fix Hurricane Electric (HE) DNS validation.\n* **12.10.21:** - Fix deprecated LE root cert check to fix failures when using `STAGING=true`, and failures in revoking.\n* **06.10.21:** - Added support for Hurricane Electric (HE) DNS validation. Added lxml build deps.\n* **01.10.21:** - Check if the cert uses the old LE root cert, revoke and regenerate if necessary. [Here's more info](https://twitter.com/letsencrypt/status/1443621997288767491) on LE root cert expiration\n* **19.09.21:** - Add an optional header to opt out of Google FLoC in `ssl.conf`.\n* **17.09.21:** - Mark `SUBDOMAINS` var as optional.\n* **01.08.21:** - Add support for ionos dns validation.\n* **15.07.21:** - Fix libmaxminddb issue due to upstream change.\n* **07.07.21:** - Rebase to alpine 3.14.\n* **24.06.21:** - Update default nginx conf folder.\n* **28.05.21:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-server.conf - Use `resolver.conf` and patch for `CVE-2021-32637`.\n* **20.05.21:** - Modify resolver.conf generation to detect and ignore ipv6.\n* **14.05.21:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, ssl.conf, proxy.conf, and the default site-conf - Rework nginx.conf to be inline with alpine upstream and relocate lines from other files. Use linuxserver.io wheel index for pip packages. Switch to using [ffdhe4096](https://ssl-config.mozilla.org/ffdhe4096.txt) for `dhparams.pem` per [RFC7919](https://datatracker.ietf.org/doc/html/rfc7919). Added `worker_processes.conf`, which sets the number of nginx workers, and `resolver.conf`, which sets the dns resolver. Both conf files are auto-generated only on first start and can be user modified later.\n* **21.04.21:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-server.conf and authelia-location.conf - Add remote name/email headers and pass http method.\n* **12.04.21:** - Add php7-gmp and php7-pecl-mailparse.\n* **12.04.21:** - Add support for vultr dns validation.\n* **14.03.21:** - Add support for directadmin dns validation.\n* **12.02.21:** - Clean up rust/cargo cache, which ballooned the image size in the last couple of builds.\n* **10.02.21:** - Fix aliyun, domeneshop, inwx and transip dns confs for existing users.\n* **09.02.21:** - Rebasing to alpine 3.13. Add nginx mods brotli and dav-ext. Remove nginx mods lua and lua-upstream (due to regression over the last couple of years).\n* **26.01.21:** - Add support for hetzner dns validation.\n* **20.01.21:** - Add check for ZeroSSL EAB retrieval.\n* **08.01.21:** - Add support for getting certs from [ZeroSSL](https://zerossl.com/) via optional `CERTPROVIDER` env var. Update aliyun, domeneshop, inwx and transip dns plugins with the new plugin names. Hide `donoteditthisfile.conf` because users were editing it despite its name. Suppress harmless error when no proxy confs are enabled.\n* **03.01.21:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) /config/nginx/site-confs/default.conf - Add helper pages to aid troubleshooting\n* **10.12.20:** - Add support for njalla dns validation\n* **09.12.20:** - Check for template/conf updates and notify in the log. Add support for gehirn and sakuracloud dns validation.\n* **01.11.20:** - Add support for netcup dns validation\n* **29.10.20:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) ssl.conf - Add frame-ancestors to Content-Security-Policy.\n* **04.10.20:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, proxy.conf, and ssl.conf - Minor cleanups and reordering.\n* **20.09.20:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf - Added geoip2 configs. Added MAXMINDDB_LICENSE_KEY variable to readme.\n* **08.09.20:** - Add php7-xsl.\n* **01.09.20:** - [Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, proxy.conf, and various proxy samples - Global websockets across all configs.\n* **03.08.20:** - Initial release.\n"
        },
        {
          "name": "jenkins-vars.yml",
          "type": "blob",
          "size": 0.697265625,
          "content": "---\n\n# jenkins variables\nproject_name: docker-swag\nexternal_type: pip_version\nrelease_type: stable\nrelease_tag: latest\nls_branch: master\nrepo_vars:\n  - EXT_PIP = 'certbot'\n  - BUILD_VERSION_ARG = 'CERTBOT_VERSION'\n  - LS_USER = 'linuxserver'\n  - LS_REPO = 'docker-swag'\n  - CONTAINER_NAME = 'swag'\n  - DOCKERHUB_IMAGE = 'linuxserver/swag'\n  - DEV_DOCKERHUB_IMAGE = 'lsiodev/swag'\n  - PR_DOCKERHUB_IMAGE = 'lspipepr/swag'\n  - DIST_IMAGE = 'alpine'\n  - MULTIARCH='true'\n  - CI='false'\n  - CI_WEB='false'\n  - CI_PORT='80'\n  - CI_SSL='false'\n  - CI_DELAY='30'\n  - CI_DOCKERENV=''\n  - CI_AUTH=''\n  - CI_WEBPATH=''\nsponsor_links:\n  - { name: \"Certbot\", url: \"https://supporters.eff.org/donate/support-work-on-certbot\" }\n"
        },
        {
          "name": "package_versions.txt",
          "type": "blob",
          "size": 26.9404296875,
          "content": "NAME                            VERSION           TYPE                    \nSimple Launcher                 1.1.0.14          dotnet  (+5 duplicates)  \nacl-libs                        2.3.2-r1          apk                      \nacme                            3.1.0             python                   \nalpine-baselayout               3.6.8-r1          apk                      \nalpine-baselayout-data          3.6.8-r1          apk                      \nalpine-keys                     2.5-r0            apk                      \nalpine-release                  3.21.0-r0         apk                      \naom-libs                        3.11.0-r0         apk                      \napache2-utils                   2.4.62-r0         apk                      \napk-tools                       2.14.6-r2         apk                      \napr                             1.7.5-r0          apk                      \napr-util                        1.6.3-r1          apk                      \nargon2-libs                     20190702-r5       apk                      \nattrs                           24.3.0            python                   \nautocommand                     2.2.2             python                   \nazure-common                    1.1.28            python                   \nazure-core                      1.32.0            python                   \nazure-identity                  1.19.0            python                   \nazure-mgmt-core                 1.5.0             python                   \nazure-mgmt-dns                  8.2.0             python                   \nbackports-tarfile               1.2.0             python                   \nbash                            5.2.37-r0         apk                      \nbeautifulsoup4                  4.12.3            python                   \nboto3                           1.35.97           python                   \nbotocore                        1.35.97           python                   \nbrotli-libs                     1.1.0-r2          apk                      \nbs4                             0.0.2             python                   \nbusybox                         1.37.0-r9         apk                      \nbusybox-binsh                   1.37.0-r9         apk                      \nc-ares                          1.34.3-r0         apk                      \nc-client                        2007f-r15         apk                      \nca-certificates                 20241121-r0       apk                      \nca-certificates-bundle          20241121-r0       apk                      \ncachetools                      5.5.0             python                   \ncatatonit                       0.2.0-r0          apk                      \ncertbot                         3.1.0             python                   \ncertbot-dns-acmedns             0.1.0             python                   \ncertbot-dns-aliyun              2.0.0             python                   \ncertbot-dns-azure               2.6.1             python                   \ncertbot-dns-bunny               3.0.0             python                   \ncertbot-dns-cloudflare          3.1.0             python                   \ncertbot-dns-cpanel              0.4.0             python                   \ncertbot-dns-desec               1.2.1             python                   \ncertbot-dns-digitalocean        3.1.0             python                   \ncertbot-dns-directadmin         1.0.13            python                   \ncertbot-dns-dnsimple            3.1.0             python                   \ncertbot-dns-dnsmadeeasy         3.1.0             python                   \ncertbot-dns-dnspod              0.1.0             python                   \ncertbot-dns-do                  0.31.0            python                   \ncertbot-dns-domeneshop          0.2.9             python                   \ncertbot-dns-dreamhost           1.0               python                   \ncertbot-dns-duckdns             1.5               python                   \ncertbot-dns-dynudns             0.0.6             python                   \ncertbot-dns-freedns             0.2.0             python                   \ncertbot-dns-gehirn              3.1.0             python                   \ncertbot-dns-glesys              2.1.0             python                   \ncertbot-dns-godaddy             2.8.0             python                   \ncertbot-dns-google              3.1.0             python                   \ncertbot-dns-he                  1.0.0             python                   \ncertbot-dns-hetzner             2.0.1             python                   \ncertbot-dns-infomaniak          0.2.3             python                   \ncertbot-dns-inwx                3.0.1             python                   \ncertbot-dns-ionos               2024.11.9         python                   \ncertbot-dns-linode              3.1.0             python                   \ncertbot-dns-loopia              1.0.1             python                   \ncertbot-dns-luadns              3.1.0             python                   \ncertbot-dns-namecheap           1.0.0             python                   \ncertbot-dns-netcup              1.4.4             python                   \ncertbot-dns-njalla              2.0.2             python                   \ncertbot-dns-nsone               3.1.0             python                   \ncertbot-dns-ovh                 3.1.0             python                   \ncertbot-dns-porkbun             0.9.1             python                   \ncertbot-dns-rfc2136             3.1.0             python                   \ncertbot-dns-route53             3.1.0             python                   \ncertbot-dns-sakuracloud         3.1.0             python                   \ncertbot-dns-standalone          1.1               python                   \ncertbot-dns-transip             0.5.2             python                   \ncertbot-dns-vultr               1.1.0             python                   \ncertbot-plugin-gandi            1.5.0             python                   \ncertifi                         2024.12.14        python                   \ncffi                            1.17.1            python                   \ncharset-normalizer              3.4.1             python                   \ncloudflare                      2.19.4            python                   \ncomposer                        2.8.4             binary                   \nconfigargparse                  1.7               python                   \nconfigobj                       5.0.9             python                   \ncoreutils                       9.5-r1            apk                      \ncoreutils-env                   9.5-r1            apk                      \ncoreutils-fmt                   9.5-r1            apk                      \ncoreutils-sha512sum             9.5-r1            apk                      \ncryptography                    44.0.0            python                   \ncurl                            8.11.1-r0         apk                      \ndistro                          1.9.0             python                   \ndns-lexicon                     3.20.1            python                   \ndnslib                          0.9.25            python                   \ndnspython                       2.7.0             python                   \ndomeneshop                      0.4.4             python                   \nfail2ban                        1.1.0             python                   \nfail2ban                        1.1.0-r2          apk                      \nfail2ban-pyc                    1.1.0-r2          apk                      \nfilelock                        3.16.1            python                   \nfindutils                       4.10.0-r0         apk                      \nfontconfig                      2.15.0-r1         apk                      \nfreetype                        2.13.3-r0         apk                      \nfuture                          1.0.0             python                   \ngdbm                            1.24-r0           apk                      \ngit                             2.47.1-r0         apk                      \ngit-init-template               2.47.1-r0         apk                      \ngit-perl                        2.47.1-r0         apk                      \ngmp                             6.3.0-r2          apk                      \ngnupg                           2.4.7-r0          apk                      \ngnupg-dirmngr                   2.4.7-r0          apk                      \ngnupg-gpgconf                   2.4.7-r0          apk                      \ngnupg-keyboxd                   2.4.7-r0          apk                      \ngnupg-utils                     2.4.7-r0          apk                      \ngnupg-wks-client                2.4.7-r0          apk                      \ngnutls                          3.8.8-r0          apk                      \ngoogle-api-core                 2.24.0            python                   \ngoogle-api-python-client        2.158.0           python                   \ngoogle-auth                     2.37.0            python                   \ngoogle-auth-httplib2            0.2.0             python                   \ngoogleapis-common-protos        1.66.0            python                   \ngpg                             2.4.7-r0          apk                      \ngpg-agent                       2.4.7-r0          apk                      \ngpg-wks-server                  2.4.7-r0          apk                      \ngpgsm                           2.4.7-r0          apk                      \ngpgv                            2.4.7-r0          apk                      \nhttplib2                        0.22.0            python                   \nicu-data-en                     74.2-r0           apk                      \nicu-libs                        74.2-r0           apk                      \nidna                            3.10              python                   \nimportlib-metadata              8.0.0             python                   \ninflect                         7.3.1             python                   \ninwx-domrobot                   3.2.0             python                   \niptables                        1.8.10-r5         apk                      \niptables-legacy                 1.8.10-r5         apk                      \nisodate                         0.7.2             python                   \njaraco-collections              5.1.0             python                   \njaraco-context                  5.3.0             python                   \njaraco-functools                4.0.1             python                   \njaraco-text                     3.12.1            python                   \njmespath                        1.0.1             python                   \njosepy                          1.14.0            python                   \njq                              1.7.1-r0          apk                      \njsonlines                       4.0.0             python                   \njsonpickle                      4.0.1             python                   \nlibassuan                       2.5.7-r0          apk                      \nlibattr                         2.5.2-r2          apk                      \nlibavif                         1.0.4-r0          apk                      \nlibbsd                          0.12.2-r0         apk                      \nlibbz2                          1.0.8-r6          apk                      \nlibcrypto3                      3.3.2-r4          apk                      \nlibcurl                         8.11.1-r0         apk                      \nlibdav1d                        1.5.0-r0          apk                      \nlibedit                         20240808.3.1-r0   apk                      \nlibevent                        2.1.12-r7         apk                      \nlibexpat                        2.6.4-r0          apk                      \nlibffi                          3.4.6-r0          apk                      \nlibgcc                          14.2.0-r4         apk                      \nlibgcrypt                       1.10.3-r1         apk                      \nlibgd                           2.3.3-r9          apk                      \nlibgpg-error                    1.51-r0           apk                      \nlibice                          1.1.1-r6          apk                      \nlibidn2                         2.3.7-r0          apk                      \nlibintl                         0.22.5-r0         apk                      \nlibip4tc                        1.8.10-r5         apk                      \nlibip6tc                        1.8.10-r5         apk                      \nlibjpeg-turbo                   3.0.4-r0          apk                      \nlibksba                         1.6.7-r0          apk                      \nlibldap                         2.6.8-r0          apk                      \nlibmaxminddb-libs               1.9.1-r0          apk                      \nlibmcrypt                       2.5.8-r10         apk                      \nlibmd                           1.1.0-r0          apk                      \nlibmemcached-libs               1.1.4-r1          apk                      \nlibmnl                          1.0.5-r2          apk                      \nlibncursesw                     6.5_p20241006-r3  apk                      \nlibnftnl                        1.2.8-r0          apk                      \nlibpanelw                       6.5_p20241006-r3  apk                      \nlibpng                          1.6.44-r0         apk                      \nlibpq                           17.2-r0           apk                      \nlibproc2                        4.0.4-r2          apk                      \nlibpsl                          0.21.5-r3         apk                      \nlibsasl                         2.1.28-r8         apk                      \nlibseccomp                      2.5.5-r1          apk                      \nlibsharpyuv                     1.4.0-r0          apk                      \nlibsm                           1.2.4-r4          apk                      \nlibsodium                       1.0.20-r0         apk                      \nlibssl3                         3.3.2-r4          apk                      \nlibstdc++                       14.2.0-r4         apk                      \nlibtasn1                        4.19.0-r2         apk                      \nlibunistring                    1.2-r0            apk                      \nlibuuid                         2.40.2-r4         apk                      \nlibwebp                         1.4.0-r0          apk                      \nlibx11                          1.8.10-r0         apk                      \nlibxau                          1.0.11-r4         apk                      \nlibxcb                          1.16.1-r0         apk                      \nlibxdmcp                        1.1.5-r1          apk                      \nlibxext                         1.3.6-r2          apk                      \nlibxml2                         2.13.4-r3         apk                      \nlibxpm                          3.5.17-r0         apk                      \nlibxslt                         1.1.42-r1         apk                      \nlibxt                           1.3.1-r0          apk                      \nlibxtables                      1.8.10-r5         apk                      \nlibzip                          1.11.2-r0         apk                      \nlinux-pam                       1.6.1-r1          apk                      \nlogrotate                       3.21.0-r1         apk                      \nloopialib                       0.2.0             python                   \nlxml                            5.3.0             python                   \nlz4-libs                        1.10.0-r0         apk                      \nmemcached                       1.6.32-r0         apk                      \nmock                            5.1.0             python                   \nmore-itertools                  10.3.0            python                   \nmpdecimal                       4.0.0-r0          apk                      \nmsal                            1.31.1            python                   \nmsal-extensions                 1.2.0             python                   \nmusl                            1.2.5-r8          apk                      \nmusl-utils                      1.2.5-r8          apk                      \nmy-test-package                 1.0               python                   \nnano                            8.2-r0            apk                      \nncurses-terminfo-base           6.5_p20241006-r3  apk                      \nnetcat-openbsd                  1.226.1.1-r0      apk                      \nnettle                          3.10-r1           apk                      \nnghttp2-libs                    1.64.0-r0         apk                      \nnginx                           1.26.2-r4         apk                      \nnginx-mod-devel-kit             1.26.2-r4         apk                      \nnginx-mod-http-brotli           1.26.2-r4         apk                      \nnginx-mod-http-dav-ext          1.26.2-r4         apk                      \nnginx-mod-http-echo             1.26.2-r4         apk                      \nnginx-mod-http-fancyindex       1.26.2-r4         apk                      \nnginx-mod-http-geoip2           1.26.2-r4         apk                      \nnginx-mod-http-headers-more     1.26.2-r4         apk                      \nnginx-mod-http-image-filter     1.26.2-r4         apk                      \nnginx-mod-http-perl             1.26.2-r4         apk                      \nnginx-mod-http-redis2           1.26.2-r4         apk                      \nnginx-mod-http-set-misc         1.26.2-r4         apk                      \nnginx-mod-http-upload-progress  1.26.2-r4         apk                      \nnginx-mod-http-xslt-filter      1.26.2-r4         apk                      \nnginx-mod-mail                  1.26.2-r4         apk                      \nnginx-mod-rtmp                  1.26.2-r4         apk                      \nnginx-mod-stream                1.26.2-r4         apk                      \nnginx-mod-stream-geoip2         1.26.2-r4         apk                      \nnginx-vim                       1.26.2-r4         apk                      \nnpth                            1.6-r4            apk                      \noniguruma                       6.9.9-r0          apk                      \nopenssl                         3.3.2-r4          apk                      \np11-kit                         0.25.5-r2         apk                      \npackaging                       24.2              python                   \nparsedatetime                   2.6               python                   \npcre                            8.45-r3           apk                      \npcre2                           10.43-r0          apk                      \nperl                            5.40.0-r3         apk                      \nperl-error                      0.17029-r2        apk                      \nperl-git                        2.47.1-r0         apk                      \nphp83                           8.3.15-r0         apk                      \nphp83-bcmath                    8.3.15-r0         apk                      \nphp83-bz2                       8.3.15-r0         apk                      \nphp83-common                    8.3.15-r0         apk                      \nphp83-ctype                     8.3.15-r0         apk                      \nphp83-curl                      8.3.15-r0         apk                      \nphp83-dom                       8.3.15-r0         apk                      \nphp83-exif                      8.3.15-r0         apk                      \nphp83-fileinfo                  8.3.15-r0         apk                      \nphp83-fpm                       8.3.15-r0         apk                      \nphp83-ftp                       8.3.15-r0         apk                      \nphp83-gd                        8.3.15-r0         apk                      \nphp83-gmp                       8.3.15-r0         apk                      \nphp83-iconv                     8.3.15-r0         apk                      \nphp83-imap                      8.3.15-r0         apk                      \nphp83-intl                      8.3.15-r0         apk                      \nphp83-ldap                      8.3.15-r0         apk                      \nphp83-mbstring                  8.3.15-r0         apk                      \nphp83-mysqli                    8.3.15-r0         apk                      \nphp83-mysqlnd                   8.3.15-r0         apk                      \nphp83-opcache                   8.3.15-r0         apk                      \nphp83-openssl                   8.3.15-r0         apk                      \nphp83-pdo                       8.3.15-r0         apk                      \nphp83-pdo_mysql                 8.3.15-r0         apk                      \nphp83-pdo_odbc                  8.3.15-r0         apk                      \nphp83-pdo_pgsql                 8.3.15-r0         apk                      \nphp83-pdo_sqlite                8.3.15-r0         apk                      \nphp83-pear                      8.3.15-r0         apk                      \nphp83-pecl-apcu                 5.1.24-r0         apk                      \nphp83-pecl-igbinary             3.2.16-r0         apk                      \nphp83-pecl-mcrypt               1.0.7-r0          apk                      \nphp83-pecl-memcached            3.3.0-r0          apk                      \nphp83-pecl-msgpack              3.0.0-r0          apk                      \nphp83-pecl-redis                6.1.0-r0          apk                      \nphp83-pgsql                     8.3.15-r0         apk                      \nphp83-phar                      8.3.15-r0         apk                      \nphp83-posix                     8.3.15-r0         apk                      \nphp83-session                   8.3.15-r0         apk                      \nphp83-simplexml                 8.3.15-r0         apk                      \nphp83-soap                      8.3.15-r0         apk                      \nphp83-sockets                   8.3.15-r0         apk                      \nphp83-sodium                    8.3.15-r0         apk                      \nphp83-sqlite3                   8.3.15-r0         apk                      \nphp83-tokenizer                 8.3.15-r0         apk                      \nphp83-xml                       8.3.15-r0         apk                      \nphp83-xmlreader                 8.3.15-r0         apk                      \nphp83-xmlwriter                 8.3.15-r0         apk                      \nphp83-xsl                       8.3.15-r0         apk                      \nphp83-zip                       8.3.15-r0         apk                      \npinentry                        1.3.1-r0          apk                      \npip                             24.3.1            python                   \npkb-client                      2.0.0             python                   \nplatformdirs                    4.2.2             python                   \npopt                            1.19-r4           apk                      \nportalocker                     2.10.1            python                   \nprocps-ng                       4.0.4-r2          apk                      \nproto-plus                      1.25.0            python                   \nprotobuf                        5.29.3            python                   \npyacmedns                       0.4               python                   \npyasn1                          0.6.1             python                   \npyasn1-modules                  0.4.1             python                   \npyc                             3.12.8-r1         apk                      \npycparser                       2.22              python                   \npyjwt                           2.10.1            python                   \npynamecheap                     0.0.3             python                   \npyopenssl                       24.3.0            python                   \npyotp                           2.9.0             python                   \npyparsing                       3.2.1             python                   \npyrfc3339                       2.0.1             python                   \npython-dateutil                 2.9.0.post0       python                   \npython-digitalocean             1.17.0            python                   \npython-transip                  0.6.0             python                   \npython3                         3.12.8-r1         apk                      \npython3-pyc                     3.12.8-r1         apk                      \npython3-pycache-pyc0            3.12.8-r1         apk                      \npytz                            2024.2            python                   \npyyaml                          6.0.2             python                   \nreadline                        8.2.13-r0         apk                      \nrequests                        2.32.3            python                   \nrequests-file                   2.1.0             python                   \nrequests-mock                   1.12.1            python                   \nrsa                             4.9               python                   \ns3transfer                      0.10.4            python                   \nscanelf                         1.3.8-r1          apk                      \nsetuptools                      75.8.0            python                   \nshadow                          4.16.0-r1         apk                      \nsix                             1.17.0            python                   \nskalibs-libs                    2.14.3.0-r0       apk                      \nsoupsieve                       2.6               python                   \nsqlite-libs                     3.47.1-r0         apk                      \nssl_client                      1.37.0-r9         apk                      \ntiff                            4.7.0-r0          apk                      \ntldextract                      5.1.3             python                   \ntomli                           2.0.1             python                   \ntypeguard                       4.3.0             python                   \ntyping-extensions               4.12.2            python  (+1 duplicate)   \ntzdata                          2024b-r1          apk                      \nunixodbc                        2.3.12-r0         apk                      \nuritemplate                     4.1.1             python                   \nurllib3                         2.3.0             python                   \nutmps-libs                      0.1.2.3-r2        apk                      \nwheel                           0.43.0            python                   \nwheel                           0.45.1            python                   \nwhois                           5.5.23-r0         apk                      \nxz-libs                         5.6.3-r0          apk                      \nzipp                            3.19.2            python                   \nzlib                            1.3.1-r2          apk                      \nzope-interface                  7.2               python                   \nzstd-libs                       1.5.6-r2          apk                      \n"
        },
        {
          "name": "readme-vars.yml",
          "type": "blob",
          "size": 26.09765625,
          "content": "---\n\n# project information\nproject_name: swag\nproject_url: \"https://linuxserver.io\"\nproject_logo: \"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif\"\nproject_blurb: \"SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.\"\nproject_lsio_github_repo_url: \"https://github.com/linuxserver/docker-{{ project_name }}\"\n# supported architectures\navailable_architectures:\n  - {arch: \"{{ arch_x86_64 }}\", tag: \"amd64-latest\"}\n  - {arch: \"{{ arch_arm64 }}\", tag: \"arm64v8-latest\"}\n# container parameters\ncommon_param_env_vars_enabled: true\nparam_container_name: \"{{ project_name }}\"\nparam_usage_include_env: true\nparam_env_vars:\n  - {env_var: \"URL\", env_value: \"example.com\", desc: \"Top url you have control over (e.g. `example.com` if you own it, or `customsubdomain.example.com` if dynamic dns).\"}\n  - {env_var: \"VALIDATION\", env_value: \"http\", desc: \"Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set).\", env_options: [\"http\", \"dns\"]}\nparam_usage_include_vols: true\nparam_volumes:\n  - {vol_path: \"/config\", vol_host_path: \"/path/to/{{ project_name }}/config\", desc: \"Persistent config files\"}\nparam_usage_include_ports: true\nparam_ports:\n  - {external_port: \"443\", internal_port: \"443\", port_desc: \"HTTPS port\"}\ncap_add_param: true\ncap_add_param_vars:\n  - {cap_add_var: \"NET_ADMIN\", desc: \"Required for fail2Ban to be able to modify iptables rules.\"}\n# optional container parameters\nopt_param_usage_include_env: true\nopt_param_env_vars:\n  - {env_var: \"SUBDOMAINS\", env_value: \"www,\", desc: \"Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only)\"}\n  - {env_var: \"CERTPROVIDER\", env_value: \"\", desc: \"Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt.\"}\n  - {env_var: \"DNSPLUGIN\", env_value: \"cloudflare\", desc: \"Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `bunny`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `dreamhost`, `duckdns`, `dynu`, `freedns`, `gandi`, `gehirn`, `glesys`, `godaddy`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `namecheap`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`.\"}\n  - {env_var: \"PROPAGATION\", env_value: \"\", desc: \"Optionally override (in seconds) the default propagation time for the dns plugins.\"}\n  - {env_var: \"EMAIL\", env_value: \"\", desc: \"Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).\"}\n  - {env_var: \"ONLY_SUBDOMAINS\", env_value: \"false\", desc: \"If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`\"}\n  - {env_var: \"EXTRA_DOMAINS\", env_value: \"\", desc: \"Additional fully qualified domain names (comma separated, no spaces) ie. `example.net,subdomain.example.net,*.example.org`\"}\n  - {env_var: \"STAGING\", env_value: \"false\", desc: \"Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.\"}\n  - {env_var: \"DISABLE_F2B\", env_value: \"\", desc: \"Set to `true` to disable the Fail2ban service in the container, if you're already running it elsewhere or using a different IPS.\"}\nopt_param_usage_include_ports: true\nopt_param_ports:\n  - {external_port: \"80\", internal_port: \"80\", port_desc: \"HTTP port (required for HTTP validation and HTTP -> HTTPS redirect)\"}\nreadonly_supported: true\nreadonly_message: |\n  * `/tmp` must be mounted to tmpfs\n  * fail2ban will not be available\n# application setup block\napp_setup_block_enabled: true\napp_setup_block: |\n  ### Validation and initial setup\n\n  * Before running this container, make sure that the url and subdomains are properly forwarded to this container's host, and that port 443 (and/or 80) is not being used by another service on the host (NAS gui, another webserver, etc.).\n  * If you need a dynamic dns provider, you can use the free provider duckdns.org where the `URL` will be `yoursubdomain.duckdns.org` and the `SUBDOMAINS` can be `www,ftp,cloud` with http validation, or `wildcard` with dns validation. You can use our [duckdns image](https://hub.docker.com/r/linuxserver/duckdns/) to update your IP on duckdns.org.\n  * For `http` validation, port 80 on the internet side of the router should be forwarded to this container's port 80\n  * For `dns` validation, make sure to enter your credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`\n    * Cloudflare provides free accounts for managing dns and is very easy to use with this image. Make sure that it is set up for \"dns only\" instead of \"dns + proxy\"\n    * Google dns plugin is meant to be used with \"Google Cloud DNS\", a paid enterprise product, and not for \"Google Domains DNS\"\n    * DuckDNS only supports two types of DNS validated certificates (not both at the same time):\n      1. Certs that only cover your main subdomain (ie. `yoursubdomain.duckdns.org`, leave the `SUBDOMAINS` variable empty)\n      2. Certs that cover sub-subdomains of your main subdomain (ie. `*.yoursubdomain.duckdns.org`, set the `SUBDOMAINS` variable to `wildcard`)\n  * `--cap-add=NET_ADMIN` is required for fail2ban to modify iptables\n  * After setup, navigate to `https://example.com` to access the default homepage (http access through port 80 is disabled by default, you can enable it by editing the default site config at `/config/nginx/site-confs/default.conf`).\n  * Certs are checked nightly and if expiration is within 30 days, renewal is attempted. If your cert is about to expire in less than 30 days, check the logs under `/config/log/letsencrypt` to see why the renewals have been failing. It is recommended to input your e-mail in docker parameters so you receive expiration notices from Let's Encrypt in those circumstances.\n\n  ### Certbot Plugins\n\n  SWAG includes many Certbot plugins out of the box, but not all plugins can be included.\n  If you need a plugin that is not included, the quickest way to have the plugin available is to use our [Universal Package Install Docker Mod](https://github.com/linuxserver/docker-mods/tree/universal-package-install).\n\n  Set the following environment variables on your container:\n\n  ```yaml\n  DOCKER_MODS=linuxserver/mods:universal-package-install\n  INSTALL_PIP_PACKAGES=certbot-dns-<plugin>\n  ```\n\n  Set the required credentials (usually found in the plugin documentation) in `/config/dns-conf/<plugin>.ini`.\n  It is recommended to attempt obtaining a certificate with `STAGING=true` first to make sure the plugin is working as expected.\n\n  ### Security and password protection\n\n  * The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.\n  * Per [RFC7919](https://datatracker.ietf.org/doc/html/rfc7919), the container is shipping [ffdhe4096](https://ssl-config.mozilla.org/ffdhe4096.txt) as the `dhparams.pem`.\n  * If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file `docker exec -it swag htpasswd -c /config/nginx/.htpasswd <username>`\n  * You can add multiple user:pass to `.htpasswd`. For the first user, use the above command, for others, use the above command without the `-c` flag, as it will force deletion of the existing `.htpasswd` and creation of a new one\n  * You can also use ldap auth for security and access control. A sample, user configurable ldap.conf is provided, and it requires the separate image [linuxserver/ldap-auth](https://hub.docker.com/r/linuxserver/ldap-auth/) to communicate with an ldap server.\n\n  ### Site config and reverse proxy\n\n  * The default site config resides at `/config/nginx/site-confs/default.conf`. Feel free to modify this file, and you can add other conf files to this directory. However, if you delete the `default` file, a new default will be created on container start.\n  * Preset reverse proxy config files are added for popular apps. See the `README.md` file under `/config/nginx/proxy_confs` for instructions on how to enable them. The preset confs reside in and get imported from [this repo](https://github.com/linuxserver/reverse-proxy-confs).\n  * If you wish to hide your site from search engine crawlers, you may find it useful to add this configuration line to your site config, within the server block, above the line where ssl.conf is included\n  `add_header X-Robots-Tag \"noindex, nofollow, nosnippet, noarchive\";`\n  This will *ask* Google et al not to index and list your site. Be careful with this, as you will eventually be de-listed if you leave this line in on a site you wish to be present on search engines\n  * If you wish to redirect http to https, you must expose port 80\n\n  ### Using certs in other containers\n\n  * This container includes auto-generated pfx and private-fullchain-bundle pem certs that are needed by other apps like Emby and Znc.\n    * To use these certs in other containers, do either of the following:\n    1. *(Easier)* Mount the container's config folder in other containers (ie. `-v /path-to-swag-config:/swag-ssl`) and in the other containers, use the cert location `/swag-ssl/keys/letsencrypt/`\n    2. *(More secure)* Mount the SWAG folder `etc` that resides under `/config` in other containers (ie. `-v /path-to-swag-config/etc:/swag-ssl`) and in the other containers, use the cert location `/swag-ssl/letsencrypt/live/<your.domain.url>/` (This is more secure because the first method shares the entire SWAG config folder with other containers, including the www files, whereas the second method only shares the ssl certs)\n    * These certs include:\n    1. `cert.pem`, `chain.pem`, `fullchain.pem` and `privkey.pem`, which are generated by Certbot and used by nginx and various other apps\n    2. `privkey.pfx`, a format supported by Microsoft and commonly used by dotnet apps such as Emby Server (no password)\n    3. `priv-fullchain-bundle.pem`, a pem cert that bundles the private key and the fullchain, used by apps like ZNC\n\n  ### Using fail2ban\n\n  * This container includes fail2ban set up with 5 jails by default:\n    1. nginx-http-auth\n    2. nginx-badbots\n    3. nginx-botsearch\n    4. nginx-deny\n    5. nginx-unauthorized\n  * To enable or disable other jails, modify the file `/config/fail2ban/jail.local`\n  * To modify filters and actions, instead of editing the `.conf` files, create `.local` files with the same name and edit those because .conf files get overwritten when the actions and filters are updated. `.local` files will append whatever's in the `.conf` files (ie. `nginx-http-auth.conf` --> `nginx-http-auth.local`)\n  * You can check which jails are active via `docker exec -it swag fail2ban-client status`\n  * You can check the status of a specific jail via `docker exec -it swag fail2ban-client status <jail name>`\n  * You can unban an IP via `docker exec -it swag fail2ban-client set <jail name> unbanip <IP>`\n  * A list of commands for fail2ban-client can be found [here](https://manpages.ubuntu.com/manpages/noble/man1/fail2ban-client.1.html)\n\n  ### Updating configs\n\n  * This container creates a number of configs for nginx, proxy samples, etc.\n  * Config updates are noted in the changelog but not automatically applied to your files.\n  * If you have modified a file with noted changes in the changelog:\n    1. Keep your existing configs as is (not broken, don't fix)\n    2. Review our repository commits and apply the new changes yourself\n    3. Delete the modified config file with listed updates, restart the container, reapply your changes\n  * If you have NOT modified a file with noted changes in the changelog:\n    1. Delete the config file with listed updates, restart the container\n  * Proxy sample updates are not listed in the changelog. See the changes here: [https://github.com/linuxserver/reverse-proxy-confs/commits/master](https://github.com/linuxserver/reverse-proxy-confs/commits/master)\n  * Proxy sample files WILL be updated, however your renamed (enabled) proxy files will not.\n  * You can check the new sample and adjust your active config as needed.\n\n  ### Migration from the old `linuxserver/letsencrypt` image\n\n  Please follow the instructions [on this blog post](https://www.linuxserver.io/blog/2020-08-21-introducing-swag#migrate).\n# init diagram\ninit_diagram: |\n  \"swag:latest\": {\n    docker-mods\n    base {\n      fix-attr +\\nlegacy cont-init\n    }\n    docker-mods -> base\n    legacy-services\n    custom services\n    init-services -> legacy-services\n    init-services -> custom services\n    custom services -> legacy-services\n    legacy-services -> ci-service-check\n    init-migrations -> init-adduser\n    init-swag-config -> init-certbot-config\n    init-nginx-end -> init-config\n    init-os-end -> init-config\n    init-config -> init-config-end\n    init-crontab-config -> init-config-end\n    init-outdated-config -> init-config-end\n    init-config -> init-crontab-config\n    init-mods-end -> init-custom-files\n    base -> init-envfile\n    init-swag-samples -> init-fail2ban-config\n    init-os-end -> init-folders\n    init-php -> init-keygen\n    base -> init-migrations\n    init-config-end -> init-mods\n    init-mods-package-install -> init-mods-end\n    init-mods -> init-mods-package-install\n    init-samples -> init-nginx\n    init-version-checks -> init-nginx-end\n    init-adduser -> init-os-end\n    init-envfile -> init-os-end\n    init-renew -> init-outdated-config\n    init-keygen -> init-permissions\n    init-certbot-config -> init-permissions-config\n    init-nginx -> init-php\n    init-permissions-config -> init-renew\n    init-config -> init-require-url\n    init-folders -> init-samples\n    init-custom-files -> init-services\n    init-fail2ban-config -> init-swag-config\n    init-require-url -> init-swag-folders\n    init-swag-folders -> init-swag-samples\n    init-permissions -> init-version-checks\n    init-services -> svc-cron\n    svc-cron -> legacy-services\n    init-services -> svc-fail2ban\n    svc-fail2ban -> legacy-services\n    init-services -> svc-nginx\n    svc-nginx -> legacy-services\n    init-services -> svc-php-fpm\n    svc-php-fpm -> legacy-services\n  }\n  Base Images: {\n    \"baseimage-alpine-nginx:3.21\" <- \"baseimage-alpine:3.21\"\n  }\n  \"swag:latest\" <- Base Images\n# changelog\nchangelogs:\n  - {date: \"17.12.24:\", desc: \"Rebase to Alpine 3.21.\"}\n  - {date: \"21.10.24:\", desc: \"Fix naming issue with Dynu plugin. If you are using Dynu, please make sure your credentials are set in /config/dns-conf/dynu.ini and your DNSPLUGIN variable is set to dynu (not dynudns).\"}\n  - {date: \"30.08.24:\", desc: \"Fix zerossl cert revocation.\"}\n  - {date: \"24.07.14:\", desc: \"Rebase to Alpine 3.20. Remove deprecated Google Domains certbot plugin. Existing users should update their nginx confs to avoid http2 deprecation warnings.\"}\n  - {date: \"01.07.24:\", desc: \"Fall back to iptables-legacy if iptables doesn't work.\"}\n  - {date: \"23.03.24:\", desc: \"Fix perms on the generated `priv-fullchain-bundle.pem`.\"}\n  - {date: \"14.03.24:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-location.conf, authelia-server.conf - Update Authelia conf samples with support for 4.38.\"}\n  - {date: \"11.03.24:\", desc: \"Restore support for DynuDNS using `certbot-dns-dynudns`.\"}\n  - {date: \"06.03.24:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) site-confs/default.conf - Cleanup default site conf.\"}\n  - {date: \"04.03.24:\", desc: \"Remove `stream.conf` inside the container to allow users to include their own block in `nginx.conf`.\"}\n  - {date: \"23.01.24:\", desc: \"Rebase to Alpine 3.19 with php 8.3, add root periodic crontabs for logrotate.\"}\n  - {date: \"01.01.24:\", desc: \"Add GleSYS DNS plugin.\"}\n  - {date: \"11.12.23:\", desc: \"Deprecate certbot-dns-dynu to resolve dependency conflicts with other plugins.\"}\n  - {date: \"30.11.23:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) site-confs/default.conf - Fix index.php being downloaded on 404.\"}\n  - {date: \"23.11.23:\", desc: \"Run certbot as root to allow fix http validation.\"}\n  - {date: \"01.10.23:\", desc: \"Fix \\\"unrecognized arguments\\\" issue in DirectAdmin DNS plugin.\"}\n  - {date: \"28.08.23:\", desc: \"Add Namecheap DNS plugin.\"}\n  - {date: \"12.08.23:\", desc: \"Add FreeDNS plugin. Detect certbot DNS authenticators using CLI.\"}\n  - {date: \"07.08.23:\", desc: \"Add Bunny DNS Configuration.\"}\n  - {date: \"27.07.23:\", desc: \"Added support for dreamhost validation.\"}\n  - {date: \"25.05.23:\", desc: \"Rebase to Alpine 3.18, deprecate armhf.\"}\n  - {date: \"27.04.23:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-location.conf, authelia-server.conf, authentik-location.conf, authentik-server.conf - Simplify auth configs and fix Set-Cookie header bug.\"}\n  - {date: \"13.04.23:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, authelia-location.conf, authentik-location.conf, and site-confs/default.conf - Move ssl.conf include to default.conf. Remove Authorization headers in authelia. Sort proxy_set_header in authelia and authentik.\"}\n  - {date: \"25.03.23:\", desc: \"Fix renewal post hook.\"}\n  - {date: \"10.03.23:\", desc: \"Cleanup unused csr and keys folders. See [certbot 2.3.0 release notes](https://github.com/certbot/certbot/releases/tag/v2.3.0).\"}\n  - {date: \"09.03.23:\", desc: \"Add Google Domains DNS support, `google-domains`.\"}\n  - {date: \"02.03.23:\", desc: \"Set permissions on crontabs during init.\"}\n  - {date: \"09.02.23:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) proxy.conf, authelia-location.conf and authelia-server.conf - Add Authentik configs, update Authelia configs.\"}\n  - {date: \"06.02.23:\", desc: \"Add porkbun support back in.\"}\n  - {date: \"21.01.23:\", desc: \"Unpin certbot version (allow certbot 2.x). !!BREAKING CHANGE!! We are temporarily removing the certbot porkbun plugin until a new version is released that is compatible with certbot 2.x.\"}\n  - {date: \"20.01.23:\", desc: \"Rebase to alpine 3.17 with php8.1.\"}\n  - {date: \"16.01.23:\", desc: \"Remove nchan module because it keeps causing crashes.\"}\n  - {date: \"08.12.22:\", desc: \"Revamp certbot init.\"}\n  - {date: \"03.12.22:\", desc: \"Remove defunct cloudxns plugin.\"}\n  - {date: \"22.11.22:\", desc: \"Pin acme to the same version as certbot.\"}\n  - {date: \"22.11.22:\", desc: \"Pin certbot to 1.32.0 until plugin compatibility improves.\"}\n  - {date: \"05.11.22:\", desc: \"Update acmedns plugin handling.\"}\n  - {date: \"06.10.22:\", desc: \"Switch to certbot-dns-duckdns. Update cpanel and gandi dns plugin handling. Minor adjustments to init logic.\"}\n  - {date: \"05.10.22:\", desc: \"Use certbot file hooks instead of command line hooks\"}\n  - {date: \"04.10.22:\", desc: \"Add godaddy and porkbun dns plugins.\"}\n  - {date: \"03.10.22:\", desc: \"Add default_server back to default site conf's https listen.\"}\n  - {date: \"22.09.22:\", desc: \"Added support for DO DNS validation.\"}\n  - {date: \"22.09.22:\", desc: \"Added certbot-dns-acmedns for DNS01 validation.\"}\n  - {date: \"20.08.22:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf - Rebasing to alpine 3.15 with php8. Restructure nginx configs ([see changes announcement](https://info.linuxserver.io/issues/2022-08-20-nginx-base)).\"}\n  - {date: \"10.08.22:\", desc: \"Added support for Dynu DNS validation.\"}\n  - {date: \"18.05.22:\", desc: \"Added support for Azure DNS validation.\"}\n  - {date: \"09.04.22:\", desc: \"Added certbot-dns-loopia for DNS01 validation.\"}\n  - {date: \"05.04.22:\", desc: \"Added support for standalone DNS validation.\"}\n  - {date: \"28.03.22:\", desc: \"created a logfile for fail2ban nginx-unauthorized in /etc/cont-init.d/50-config\"}\n  - {date: \"09.01.22:\", desc: \"Added a fail2ban jail for nginx unauthorized\"}\n  - {date: \"21.12.21:\", desc: \"Fixed issue with iptables not working as expected\"}\n  - {date: \"30.11.21:\", desc: \"Move maxmind to a [new mod](https://github.com/linuxserver/docker-mods/tree/swag-maxmind)\"}\n  - {date: \"22.11.21:\", desc: \"Added support for Infomaniak DNS for certificate generation.\"}\n  - {date: \"20.11.21:\", desc: \"Added support for dnspod validation.\"}\n  - {date: \"15.11.21:\", desc: \"Added support for deSEC DNS for wildcard certificate generation.\"}\n  - {date: \"26.10.21:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) proxy.conf - Mitigate <https://httpoxy.org/> vulnerabilities. Ref: <https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus>\"}\n  - {date: \"23.10.21:\", desc: \"Fix Hurricane Electric (HE) DNS validation.\"}\n  - {date: \"12.10.21:\", desc: \"Fix deprecated LE root cert check to fix failures when using `STAGING=true`, and failures in revoking.\"}\n  - {date: \"06.10.21:\", desc: \"Added support for Hurricane Electric (HE) DNS validation. Added lxml build deps.\"}\n  - {date: \"01.10.21:\", desc: \"Check if the cert uses the old LE root cert, revoke and regenerate if necessary. [Here's more info](https://twitter.com/letsencrypt/status/1443621997288767491) on LE root cert expiration\"}\n  - {date: \"19.09.21:\", desc: \"Add an optional header to opt out of Google FLoC in `ssl.conf`.\"}\n  - {date: \"17.09.21:\", desc: \"Mark `SUBDOMAINS` var as optional.\"}\n  - {date: \"01.08.21:\", desc: \"Add support for ionos dns validation.\"}\n  - {date: \"15.07.21:\", desc: \"Fix libmaxminddb issue due to upstream change.\"}\n  - {date: \"07.07.21:\", desc: \"Rebase to alpine 3.14.\"}\n  - {date: \"24.06.21:\", desc: \"Update default nginx conf folder.\"}\n  - {date: \"28.05.21:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-server.conf - Use `resolver.conf` and patch for `CVE-2021-32637`.\"}\n  - {date: \"20.05.21:\", desc: \"Modify resolver.conf generation to detect and ignore ipv6.\"}\n  - {date: \"14.05.21:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, ssl.conf, proxy.conf, and the default site-conf - Rework nginx.conf to be inline with alpine upstream and relocate lines from other files. Use linuxserver.io wheel index for pip packages. Switch to using [ffdhe4096](https://ssl-config.mozilla.org/ffdhe4096.txt) for `dhparams.pem` per [RFC7919](https://datatracker.ietf.org/doc/html/rfc7919). Added `worker_processes.conf`, which sets the number of nginx workers, and `resolver.conf`, which sets the dns resolver. Both conf files are auto-generated only on first start and can be user modified later.\"}\n  - {date: \"21.04.21:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) authelia-server.conf and authelia-location.conf - Add remote name/email headers and pass http method.\"}\n  - {date: \"12.04.21:\", desc: \"Add php7-gmp and php7-pecl-mailparse.\"}\n  - {date: \"12.04.21:\", desc: \"Add support for vultr dns validation.\"}\n  - {date: \"14.03.21:\", desc: \"Add support for directadmin dns validation.\"}\n  - {date: \"12.02.21:\", desc: \"Clean up rust/cargo cache, which ballooned the image size in the last couple of builds.\"}\n  - {date: \"10.02.21:\", desc: \"Fix aliyun, domeneshop, inwx and transip dns confs for existing users.\"}\n  - {date: \"09.02.21:\", desc: \"Rebasing to alpine 3.13. Add nginx mods brotli and dav-ext. Remove nginx mods lua and lua-upstream (due to regression over the last couple of years).\"}\n  - {date: \"26.01.21:\", desc: \"Add support for hetzner dns validation.\"}\n  - {date: \"20.01.21:\", desc: \"Add check for ZeroSSL EAB retrieval.\"}\n  - {date: \"08.01.21:\", desc: \"Add support for getting certs from [ZeroSSL](https://zerossl.com/) via optional `CERTPROVIDER` env var. Update aliyun, domeneshop, inwx and transip dns plugins with the new plugin names. Hide `donoteditthisfile.conf` because users were editing it despite its name. Suppress harmless error when no proxy confs are enabled.\"}\n  - {date: \"03.01.21:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) /config/nginx/site-confs/default.conf - Add helper pages to aid troubleshooting\"}\n  - {date: \"10.12.20:\", desc: \"Add support for njalla dns validation\"}\n  - {date: \"09.12.20:\", desc: \"Check for template/conf updates and notify in the log. Add support for gehirn and sakuracloud dns validation.\"}\n  - {date: \"01.11.20:\", desc: \"Add support for netcup dns validation\"}\n  - {date: \"29.10.20:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) ssl.conf - Add frame-ancestors to Content-Security-Policy.\"}\n  - {date: \"04.10.20:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, proxy.conf, and ssl.conf - Minor cleanups and reordering.\"}\n  - {date: \"20.09.20:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf - Added geoip2 configs. Added MAXMINDDB_LICENSE_KEY variable to readme.\"}\n  - {date: \"08.09.20:\", desc: \"Add php7-xsl.\"}\n  - {date: \"01.09.20:\", desc: \"[Existing users should update:](https://github.com/linuxserver/docker-swag/blob/master/README.md#updating-configs) nginx.conf, proxy.conf, and various proxy samples - Global websockets across all configs.\"}\n  - {date: \"03.08.20:\", desc: \"Initial release.\"}\n"
        },
        {
          "name": "root",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}