{
  "metadata": {
    "timestamp": 1736711306239,
    "page": 63,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjY4",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "theia-ide/theia-apps",
      "stars": 1046,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1123046875,
          "content": "root = true\n\n[*]\ninsert_final_newline = true\nend_of_line = lf\nindent_style = space\n\n[*.{json, md}]\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.13671875,
          "content": "/**/.DS_Store\n/**/.history\n/**/node_modules\n/**/.browser_modules\n/**/build\n/**/lib\n/**/dist\n/**/src-gen\n/**/yarn.lock\n/**/webpack.config.js\n"
        },
        {
          "name": ".theia",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8134765625,
          "content": "# Contributing Theia applications\n\n## Theia Docker\n\nAll commands should be run from [theia-docker](theia-docker) folder.\n\nBuilding the image for Theia tag:\n\n    docker build . -t theiaide/theia:v0.2.1\n\nRunning the image:\n\n    docker run -it --init -p 3000:3000 -v /myproject:/home/project theiaide/theia:v0.2.1\n\nBuilding the next image:\n\n    docker build --build-arg version=next . -t theiaide/theia:next\n\nTag the image as latest:\n\n    docker tag theiaide/theia:v0.2.1 theiaide/theia:latest\n\nRunning the latest image:\n\n    docker run --init -p 3000:3000 theiaide/theia\n\nPushing images to Docker Hub:\n\n    docker login\n    docker push theiaide/theia:v0.2.1\n    docker push theiaide/theia:latest\n\nPulling images from Docker Hub:\n\n    docker pull theiaide/theia\n    docker pull theiaide/theia:v0.2.1\n    docker pull theiaide/theia:next\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4990234375,
          "content": "<!-- Main Header  -->\n<div align='center'>\n\n<img src=\"./assets/theia.svg\" width=\"125px\">\n\n## Eclipse Theia Applications - Docker & Electron\n\n[![Build Status](https://github.com/theia-ide/theia-apps/workflows/ci-cd/badge.svg?branch=master)](https://github.com/theia-ide/theia-apps/actions?query=branch%3Amaster+event%3Apush+event%3Aschedule)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-curved)](https://github.com/theia-ide/theia-apps/labels/help%20wanted)\n[![Questions](https://img.shields.io/badge/Questions-blue.svg?style=flat-curved)](https://github.com/theia-ide/theia-apps/issues?utf8=%E2%9C%93&q=label%3Aquestion+)\n\nCollection of example cloud & desktop applications built using the [Theia](https://github.com/eclipse-theia/theia) platform.\n\n</div>\n\n---\n\n<br />\n\n__Note: This repository is considered deprecated. [Theia Blueprint](https://github.com/eclipse-theia/theia-blueprint) and [CDT.cloud Blueprint](https://github.com/eclipse-cdt-cloud/cdt-cloud-blueprint) are more polished example applications based on the Eclipse Theia framework, that might be of interest. For more details, see issue [#496](https://github.com/theia-ide/theia-apps/issues/496).__\n\n<br />\n\n### Outline\n\n- [Overview](#overview)\n- [Docker Image Variants](#docker-image-variants)\n- [Additional Docker Examples](#additional-docker-examples)\n    - [How to use `theiaide/theia` image](#how-to-use-theiaidetheia-image)\n- [Electron Applications](#electron-apps)\n- [Running & Debugging](#running-&-debugging)\n- [Tips & Tricks](#tips-&-tricks)\n    - [Build Options](#build-options)\n- [Contributing](#contributing)\n- [License](#license)\n\n<br />\n\n### Overview\n\nThis repository contains a collection of Theia-based IDE applications (both electron desktop apps and docker images) as examples, for demo and continuous-integration purposes.\n\n### Docker Image Variants\n\n<img\n    src='./assets/docker.png'\n    alt='docker logo'\n    width=\"125px\"\n/>\n\n| Image Name | Description | Documentation |\n|:---|:---|:---|\n| [theiaide/theia](https://hub.docker.com/r/theiaide/theia) | Theia-based JavaScript/TypeScript (Web Technologies) example application | |\n\n_Other Variants_:\n\n| Image Name | Description | Documentation |\n|:---|:---|:---|\n| [theiaide/theia-cpp](https://hub.docker.com/r/theiaide/theia-cpp) | Theia-based C/C++ example application | [docs](./theia-cpp-docker/README.md) |\n| [theiaide/theia-dart](https://hub.docker.com/r/theiaide/theia-dart) | Theia-based Dart example application | |\n| [theiaide/theia-full](https://hub.docker.com/r/theiaide/theia-full) | Theia-based example application with support for multiple languages | |\n| [theiaide/theia-go](https://hub.docker.com/r/theiaide/theia-go) | Theia-based Go example application | [docs](./theia-go-docker/README.md) |\n| [theiaide/theia-python](https://hub.docker.com/r/theiaide/theia-python) | Theia-based Python example application | [docs](./theia-python-docker/README.md) |\n| [theiaide/theia-php](https://hub.docker.com/r/theiaide/theia-php) | Theia-based PHP example application | [docs](./theia-php-docker/README.md) |\n| [theiaide/theia-rust](https://hub.docker.com/r/theiaide/theia-rust) | Theia-based Rust example application | [docs](./theia-rust-docker/README.md) |\n| [theiaide/theia-swift](https://hub.docker.com/r/theiaide/theia-swift) | Theia-based Swift example application | |\n\n---\n\n<br />\n\n### Additional Docker Examples\n\n| Image Name | Description | Documentation |\n|:---|:---|:---|\n| `theia-deb-build-docker` | Example on how to package the IDE into a Debian package | [docs](./theia-deb-build-docker/README.md) |\n| `theia-https-docker` | Example on how to add security layer over existing images | [docs](./theia-https-docker/README.md) |\n| `theia-openshift-docker` | Example image for OpenShift | |\n| `theia-rpm-build-docker` | Example on how to package the IDE into an RPM (for RHEL/CentOS) | [docs](./theia-rpm-build-docker/README.md) |\n\n<br />\n\n### How to use `theiaide/theia` image?\n\nTheia is actively being developed. It is recommended to use `theiaide/theia:latest` if you want the latest stable release of Theia or `theiaide/theia:next` if you want the most recent version of Theia at the time the image was built (bleeding edge).\n\nThe following pulls the image and runs Theia IDE on http://localhost:3000 with the current directory as a workspace. The option of `--init` is added to fix the [defunct process problem](https://github.com/theia-ide/theia-apps/issues/195).\n\n    # Linux, macOS, or PowerShell\n    docker run -it --init -p 3000:3000 -v \"$(pwd):/home/project:cached\" theiaide/theia:next\n\n    # Windows (cmd.exe)\n    docker run -it --init -p 3000:3000 -v \"%cd%:/home/project:cached\" theiaide/theia:next\n\n\nYou can pass additional arguments to Theia after the image name, for example to enable debugging:\n\n    # Linux, macOS, or PowerShell\n    docker run -it --init -p 3000:3000 --expose 9229 -p 9229:9229 -v \"$(pwd):/home/project:cached\" theiaide/theia:next --inspect=0.0.0.0:9229\n\n    # Windows (cmd.exe)\n    docker run -it --init -p 3000:3000 --expose 9229 -p 9229:9229 -v \"%cd%:/home/project:cached\" theiaide/theia:next --inspect=0.0.0.0:9229\n\n### Electron Apps\n\nThe repository contains example Electron applications which are packaged using `electron-builder`. Following the steps provided in their respective README, it is possible to build and package the applications for Desktop use.\n\n<img\n    src='./assets/electron.png'\n    alt='electron logo'\n    width=\"50px\"\n/>\n\n| Application Name | Description | Documentation |\n|:---|:---|:---|\n| `theia-cpp-electron` | Theia-based C/C++ desktop IDE | [docs](./theia-cpp-electron/README.md) |\n| `theia-electron` | Theia-based JavaScript/TypeScript (Web Technologies) desktop IDE | [docs](./theia-electron/README.md) |\n\n---\n\n<br />\n\n## VS Code Extensions\n\nMany applications in the repository now include support for running VS Code extensions, and an integration to the public instance of [open-vsx registry](https://open-vsx.org/), an open alternative to the Visual Studio Marketplace. The `Extensions` view can be opened through the `Views` top-level menu when starting the application.\n\n## Tips & Tricks\n\n- #### Build Options:\n    - `--init` injects an instance of [tini](https://github.com/krallin/tini) in the container, that will wait-for and reap terminated processes, to avoid leaking PIDs.\n    - `--security-opt seccomp=unconfined` enables running without [the default seccomp profile](https://docs.docker.com/engine/security/seccomp/) for debugging. This option is also required if the swift REPL is needed.\n\n## Contributing\n\n[Contributing](CONTRIBUTING.md)\n\n## License\n\n[Apache 2.0](LICENSE)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_container.sh",
          "type": "blob",
          "size": 1.58984375,
          "content": "#!/bin/bash\nset -e\n\n# this script is called by GH workflows to build the Docker image\nNPM_TAG=$1\nIMAGE_NAME=$2\nNODE_VERSION=$3\nGH_TOKEN=$4\n\n# Theia standard port is listening in port 3000 (the common nodejs port), and it is exposed when running the docker\n# container (-p 0.0.0.0:4000:3000). But some new applications may need to change it (e.g. theia-https-docker).\n# This 5th parameter enables to expose a custom port instead of the common 3000 port. It is set to 3000 as a default\n# value if not included, for backward compatibility.\nPORT=${5:-3000}\nshift\nshift\nshift\nshift\n\n# We know that there are at least 4 parameters. If we shift the 5th parameter and it is not set, shift will fail thus\n# failing the script (because of set -e)\n[ $# -gt 0 ] && shift\n\ncd \"$IMAGE_NAME-docker\"\n\nIMAGE=\"theiaide/$IMAGE_NAME\"\nIMAGE_TAG=\"$IMAGE:$NPM_TAG\"\n\ndocker build --build-arg \"version=$NPM_TAG\" --build-arg \"NODE_VERSION=$NODE_VERSION\" --build-arg \"GITHUB_TOKEN=$GH_TOKEN\" . -t \"$IMAGE_TAG\" --no-cache\n\n# Tag the image with the solid version if it is `latest`.\n# Then, we have 2 tags refer to the same image, i.e: \"theiaide/theia:1.12.1\" and \"theiaide/theia:latest\".\nif [ $NPM_TAG = \"latest\" ]; then\n    IMAGE_SOLID_TAG=\"$IMAGE\":$(npm view \"@theia/core@$NPM_TAG\" version)\n    docker tag \"$IMAGE_TAG\" \"$IMAGE_SOLID_TAG\"\nfi\n\ndocker images \"$IMAGE\"\n\n# Now we allow to pass extra parameters to the docker run command: any extra parameter to build_container.sh is\n# interpreted as a parameter to docker run (it is useful for e.g. passing environment variables or volume mappings)\ndocker run --init -d \"$@\" -p 0.0.0.0:4000:$PORT \"$IMAGE_TAG\"\n"
        },
        {
          "name": "check_changed.sh",
          "type": "blob",
          "size": 1.458984375,
          "content": "#!/bin/bash\nset -e\n# This script is called by GH Workflows before the install step.\n# It echoes 137 if no files where changed. In that case\n# no further building/test is required for this image\n\nIMAGE_NAME=$1\n\nCHANGED_FILES=$(git diff --name-status origin/master \"$IMAGE_NAME-docker\")\n\nif [ \"$IMAGE_NAME\" == \"theia\" ]\nthen\n    if [ -z \"$CHANGED_FILES\" ]\n    then\n        # there were no changes in theia-docker\n\n        # we want to build the theia-docker image also\n        # in the case that there were changes in other\n        # non theia*-docker folders\n        # eg. build scripts\n\n        CHANGED_FILES_NON_DOCKER=$(git diff --name-status origin/master .)\n        while read -r line; do\n            # the output of the git diff is of the form \"M    theia-somename-docker/xyz\"\n            if [[ $line =~ ^[[:space:]]*.[[:space:]]+theia(.)*-docker(.)+ ]]; then\n                # there was a change to an theia*-docker folder (not theia-docker)\n                # this will be picked up by another build\n                :\n            else\n                # there was a change in a non theia*-docker folder\n                # build theia-docker to be sure no utility scripts are broken\n                CHANGED_FILES=\"$line\"$'\\n'\"$CHANGED_FILES\"\n            fi\n        done <<< \"$CHANGED_FILES_NON_DOCKER\"\n\n    fi\nfi\n\n\nif [ -z \"$CHANGED_FILES\" ]\nthen\n    # nothing changed, skip building\n    # this indicates to the parent script that the build can be terminated\n    echo 137\nelse\n    echo 0\nfi\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-cpp-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-cpp-electron",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-dart-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-deb-build-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-electron",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-full-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-go-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-https-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-openshift-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-php-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-python-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-rpm-build-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-rust-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "theia-swift-docker",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}