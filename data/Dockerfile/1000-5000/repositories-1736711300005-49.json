{
  "metadata": {
    "timestamp": 1736711300005,
    "page": 49,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jakzal/phpqa",
      "stars": 1236,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "/devkit\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.14453125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at oss@zalas.pl. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6044921875,
          "content": "# Contributing\n\nWhen contributing to this repository send a new pull request.\nIf your change is big or complex, or you simply want to suggest an improvement,\nplease discuss the change you wish to make via an issue.\n\nPlease note we have a [code of conduct](CODE_OF_CONDUCT.md). Please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n* Add any new tools to the [`jakzal/toolbox` repository](https://github.com/jakzal/toolbox)\n* Provide a good commit message describing what you've done.\n* Ensure any install or build dependencies are removed before the end of the layer when doing a build.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 7.1103515625,
          "content": "# syntax=docker/dockerfile:1.4\n\nARG PHP_VERSION=8.4\nARG TOOLBOX_EXCLUDED_TAGS=\"exclude-php:${PHP_VERSION}\"\nARG TOOLBOX_VERSION=\"1.87.0\"\nARG FLAVOUR=\"alpine\"\n\n\n# Debian PHP with dependencies needed for final image\nFROM php:${PHP_VERSION}-cli AS php-base-debian\nARG DEBIAN_LIB_DEPS=\"zlib1g-dev libzip-dev libbz2-dev libicu-dev\"\nARG DEBIAN_TOOL_DEPS=\"git graphviz make unzip gpg dirmngr gpg-agent openssh-client\"\nARG TARGETARCH\nRUN  rm /etc/apt/apt.conf.d/docker-clean # enables apt caching\nRUN --mount=type=cache,target=/var/cache/apt,target=/var/cache/apt,sharing=locked,id=apt-${TARGETARCH} \\\n    --mount=type=cache,target=/var/lib/apt/lists,target=/var/lib/apt/lists,sharing=locked,id=apt-lists-${TARGETARCH} \\\n    apt-get update \\\n    && apt-get install -y --no-install-recommends ${DEBIAN_TOOL_DEPS} ${DEBIAN_LIB_DEPS}\n\n\n# Alpine PHP with dependencies needed for final image\nFROM php:${PHP_VERSION}-alpine as php-base-alpine\nARG ALPINE_LIB_DEPS=\"zlib-dev libzip-dev bzip2-dev icu-dev\"\nARG ALPINE_TOOL_DEPS=\"git graphviz ttf-freefont make unzip gpgme gnupg-dirmngr openssh-client\"\nARG TARGETARCH\nRUN --mount=type=cache,target=/var/cache/apk,sharing=locked,id=apk-${TARGETARCH} \\\n    apk add --no-cache ${ALPINE_TOOL_DEPS} ${ALPINE_LIB_DEPS}\n\n\n# PHP with dependencies needed for final image\nFROM php-base-${FLAVOUR} AS php-base\n\n\n# Debian PHP with dependencies needed for building the tools\nFROM php-base-debian AS builder-base-debian\nARG TARGETARCH\nRUN --mount=type=cache,target=/var/cache/apt,target=/var/cache/apt,sharing=locked,id=apt-${TARGETARCH} \\\n    --mount=type=cache,target=/var/lib/apt/lists,target=/var/lib/apt/lists,sharing=locked,id=apt-lists-${TARGETARCH} \\\n    apt-get install -y --no-install-recommends ${PHPIZE_DEPS}\n\n\n# Alpine PHP with dependencies needed for building the tools\nFROM php-base-alpine AS builder-base-alpine\nARG TARGETARCH\nRUN --mount=type=cache,target=/var/cache/apk,sharing=locked,id=apk-${TARGETARCH} \\\n    apk add --no-cache ${PHPIZE_DEPS}\n\n\n# PHP with dependencies needed for building the tools\nFROM builder-base-${FLAVOUR} as builder-base\nRUN docker-php-source extract\n\n\n# Stage containing the AST extension source\nFROM --platform=${BUILDPLATFORM} alpine AS ast-downloader\nARG TARGETARCH\nWORKDIR /\nRUN --mount=type=cache,target=/var/cache/apk,sharing=locked,id=apk-${TARGETARCH} \\\n    apk add --no-cache git\nRUN git clone https://github.com/nikic/php-ast.git\n\n\n# Stage that builds the AST extension from downloaded src\nFROM builder-base AS ast-builder\nWORKDIR /build\nCOPY --from=ast-downloader /php-ast .\nRUN phpize  \\\n    && ./configure  \\\n    && make  \\\n    && make install\nRUN docker-php-ext-enable ast\n\n\n# Stage that builds the pcov extension from PECL\nFROM builder-base AS pcov-builder\nRUN pecl install pcov && docker-php-ext-enable pcov\n\n\n# Stage that builds bcmath\nFROM builder-base AS bcmath-builder\nRUN docker-php-ext-install bcmath\n\n\n# Stage that builds intl\nFROM builder-base AS intl-builder\nRUN docker-php-ext-install intl\n\n\n# Stage that builds zip\nFROM builder-base AS zip-builder\nRUN docker-php-ext-install zip\n\n\n# Stage that builds pcntl\nFROM builder-base AS pcntl-builder\nRUN docker-php-ext-install pcntl\n\n\n# Stage that builds bz2\nFROM builder-base AS bz2-builder\nRUN docker-php-ext-install bz2\n\n\n# Stage with PHP extensions, all validated\nFROM php-base AS all-extensions\n\nCOPY --link --from=ast-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=ast-builder /usr/local/etc/php/conf.d /usr/local/etc/php/conf.d\nCOPY --link --from=pcov-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=pcov-builder /usr/local/etc/php/conf.d  /usr/local/etc/php/conf.d\nCOPY --link --from=bcmath-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=bcmath-builder /usr/local/etc/php/conf.d  /usr/local/etc/php/conf.d\nCOPY --link --from=intl-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=intl-builder /usr/local/etc/php/conf.d  /usr/local/etc/php/conf.d\nCOPY --link --from=zip-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=zip-builder /usr/local/etc/php/conf.d  /usr/local/etc/php/conf.d\nCOPY --link --from=pcntl-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=pcntl-builder /usr/local/etc/php/conf.d  /usr/local/etc/php/conf.d\nCOPY --link --from=bz2-builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=bz2-builder /usr/local/etc/php/conf.d  /usr/local/etc/php/conf.d\n\n# Validate the extension configuration\nRUN php --re ast\nRUN php --re pcov\nRUN php --re bcmath\nRUN php --re intl\nRUN php --re zip\nRUN php --re pcntl\nRUN php --re bz2\n\n\n# Stage containing the downloaded toolbox PHAR\nFROM --platform=${BUILDPLATFORM} alpine AS toolbox-downloader\nWORKDIR /\nARG TOOLBOX_VERSION\nRUN wget https://github.com/jakzal/toolbox/releases/download/v${TOOLBOX_VERSION}/toolbox.phar\n\n\n# PHP with all extensions needed, correctly configured\nFROM php-base as php-configured\n\n# Install extensions + extension config\nCOPY --link --from=all-extensions /usr/local/lib/php/extensions /usr/local/lib/php/extensions\nCOPY --link --from=all-extensions /usr/local/etc/php/conf.d /usr/local/etc/php/conf.d\n\n# Base php.ini\nCOPY --link <<EOF /usr/local/etc/php/conf.d/phpqa.ini\ndate.timezone=Europe/London\nmemory_limit=-1\nphar.readonly=0\npcov.enabled=0\nEOF\n\nCOPY --link <<EOF /usr/local/etc/php/conf.d/opcache.ini\nzend_extension=opcache.so\nopcache.enable=1\nopcache.enable_cli=1\nEOF\n\n# Validate the PHP configuration\nRUN php --ini | grep phpqa.ini\nRUN php --rz \"Zend OPcache\"\n\nARG TOOLBOX_TARGET_DIR=\"/tools\"\nENV TOOLBOX_TARGET_DIR=\"${TOOLBOX_TARGET_DIR}\"\nWORKDIR ${TOOLBOX_TARGET_DIR}\nENV PATH=\"${PATH}:${TOOLBOX_TARGET_DIR}\"\n\n# Configure Composer\nCOPY --link --from=composer:2 /usr/bin/composer ./composer\nENV COMPOSER_HOME=${TOOLBOX_TARGET_DIR}/.composer\nENV PATH=\"${PATH}:${COMPOSER_HOME}/vendor/bin\"\nENV COMPOSER_ALLOW_SUPERUSER 1\nRUN composer --version\n\n# Configure Toolbox\nCOPY --link --from=toolbox-downloader --chmod=+x /toolbox.phar ./toolbox\nARG TOOLBOX_EXCLUDED_TAGS\nENV TOOLBOX_EXCLUDED_TAGS=${TOOLBOX_EXCLUDED_TAGS}\nARG TOOLBOX_VERSION\nENV TOOLBOX_VERSION=${TOOLBOX_VERSION}\nENV PATH=\"${PATH}:${TOOLBOX_TARGET_DIR}/QualityAnalyzer/bin\"\nRUN php toolbox --version\n\n\n# The stage that does 'toolbox install' - separated out to isolate the cachebusting better\nFROM php-configured AS toolbox-installer\n\nARG INSTALLATION_DATE\n\nRUN --mount=type=secret,id=composer.auth,target=${COMPOSER_HOME}/auth.json \\\n    --mount=type=cache,id=composer,target=${COMPOSER_HOME}/cache\\\n    --mount=type=secret,id=phive.auth,target=${TOOLBOX_TARGET_DIR}/.phive/auth.xml \\\n    php toolbox install\nRUN php toolbox test\nRUN chmod 644 ${COMPOSER_HOME}/config.json\n\n\n# Final result with entrypoint configured\nFROM php-configured AS final\n\nLABEL maintainer=\"Jakub Zalas <jakub@zalas.pl>\"\n\nCOPY --link --from=toolbox-installer ${TOOLBOX_TARGET_DIR} .\n\nCOPY --link --chmod=755 <<EOF /entrypoint.sh\n#!/usr/bin/env sh\nset -e\n\n(test \"\\$GITHUB_ACTIONS\" = \"true\" || test \"\\$CI\" = \"true\") && test -f composer.json && composer install --no-scripts --no-progress\n\nexec \"\\$@\"\nEOF\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD php toolbox list-tools\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (c) 2017 Jakub Zalas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.6201171875,
          "content": "PHP_VERSIONS := 8.1 8.2 8.3 8.4\nPHP_VERSION ?= $(lastword $(sort $(PHP_VERSIONS)))\nCOMPOSER_AUTHDIR ?= $(shell composer config --global home)\nifneq (\"\", \"$(COMPOSER_AUTHDIR)\")\n COMPOSER_SECRET ?= --secret=id=composer.auth,src=$(COMPOSER_AUTHDIR)/auth.json\nendif\n\ndefault: build\n\nbuild: build-debian build-alpine\n.PHONY: build\n\nbuild-debian: BUILD_TAG ?= jakzal/phpqa:latest\nbuild-debian:\n\tdocker buildx build --load -t $(BUILD_TAG) $(COMPOSER_SECRET) --build-arg PHP_VERSION=$(PHP_VERSION) --build-arg FLAVOUR=debian .\n.PHONY: build-debian\n\nbuild-alpine: BUILD_TAG ?= jakzal/phpqa:alpine\nbuild-alpine:\n\tdocker buildx build --load -t $(BUILD_TAG) $(COMPOSER_SECRET) --build-arg PHP_VERSION=$(PHP_VERSION) --build-arg FLAVOUR=alpine .\n.PHONY: build-alpine\n\nNIGHTLY_TAG := jakzal/phpqa-nightly:$(shell date +%y%m%d)\nbuild-nightly-debian:\n\tdocker buildx build --load -t $(NIGHTLY_TAG) $(COMPOSER_SECRET) --build-arg PHP_VERSION=$(PHP_VERSION) --build-arg FLAVOUR=debian .\n\t@echo ${DOCKER_HUB_PASSWORD} | docker login -u jakzal --password-stdin\n\tdocker push $(NIGHTLY_TAG)\n.PHONY: build-nightly-debian\n\nNIGHTLY_ALPINE_TAG := jakzal/phpqa-nightly:$(shell date +%y%m%d)-alpine\nbuild-nightly-alpine:\n\tdocker buildx build --load -t $(NIGHTLY_ALPINE_TAG) $(COMPOSER_SECRET) --build-arg PHP_VERSION=$(PHP_VERSION) --build-arg FLAVOUR=alpine .\n\t@echo ${DOCKER_HUB_PASSWORD} | docker login -u jakzal --password-stdin\n\tdocker push $(NIGHTLY_ALPINE_TAG)\n.PHONY: build-nightly-alpine\n\nclean:\n\t@rm devkit\n.PHONY: clean\n\ndevkit:\n\tcurl -s https://api.github.com/repos/jakzal/toolbox/releases/latest | grep \"browser_download_url.*devkit.phar\" | cut -d '\"' -f 4 | xargs curl -Ls -o devkit && chmod +x devkit\n\nupdate-readme-tools: devkit\n\t./devkit update:readme --readme README.md\n.PHONY: update-readme-tools\n\nreadme-release:\n\t@cat README.md | grep 'jakzal/phpqa/blob/v' | sed -e 's/^[^`]*`\\([^`\\-]*\\).*/\\1/' | head -n 1\n.PHONY: readme-release\n\nnext-patch-release: NEXT_PATCH_RELEASE ?=\nnext-patch-release:\nifeq ($(NEXT_PATCH_RELEASE),)\n\t@$(MAKE) readme-release | awk -F. -v OFS=. '{$$NF++;print}'\nelse\n\t@echo $(NEXT_PATCH_RELEASE)\nendif\n.PHONY: next-patch-release\n\nrelease: NEXT_RELEASE ?=\nrelease:\n\t$(eval LATEST_RELEASE=$(shell $(MAKE) next-patch-release NEXT_PATCH_RELEASE=$(NEXT_RELEASE)))\n\t@$(MAKE) update-readme-release LATEST_RELEASE=$(LATEST_RELEASE)\n\tgit add README.md\n\tgit commit -m 'Release v$(LATEST_RELEASE)'\n\tgit tag -a v$(LATEST_RELEASE) -m 'Tag v$(LATEST_RELEASE)'\n\tgit push origin master\n\thub release create -m '$(LATEST_RELEASE)' -m '' -m ':robot: Automagically created release.' v$(LATEST_RELEASE)\n.PHONY: release\n\nupdate-readme-release: LATEST_RELEASE ?= 0.0.0\nupdate-readme-release:\n\t$(eval LATEST_RELEASE_MINOR=$(shell echo $(LATEST_RELEASE) | cut -f1,2 -d.))\n\t$(eval README_RELEASE=$(shell $(MAKE) readme-release))\n\t$(eval README_RELEASE_MINOR=$(shell echo $(README_RELEASE) | cut -f1,2 -d.))\n\tsed -i.bkp -e '/^*/s/$(README_RELEASE)/$(LATEST_RELEASE)/g' README.md\n\tsed -i.bkp -e '/^*/s/$(README_RELEASE_MINOR)/$(LATEST_RELEASE_MINOR)/g' README.md\n\t@rm README.md.bkp\n.PHONY: update-readme-release\n\nupdate-toolbox-version:\n\t$(eval LATEST_TOOLBOX_VERSION=$(shell curl -H'Authorization: token '$(GITHUB_TOKEN) -Ls 'https://api.github.com/repos/jakzal/toolbox/releases/latest' | jq -r .tag_name | cut -c 2-))\n\t$(eval CURRENT_TOOLBOX_VERSION=$(shell cat Dockerfile | grep 'TOOLBOX_VERSION=' | head -n 1 | sed -e 's/.*\"\\(.*\\)\"/\\1/'))\n\t@[ \"$(LATEST_TOOLBOX_VERSION)\" != \"\" ] || (echo \"Failed to check the latest toolbox release\" && exit 1)\n\t[ \"$(CURRENT_TOOLBOX_VERSION)\" = \"$(LATEST_TOOLBOX_VERSION)\" ] || ( \\\n\t  sed -e 's/$(CURRENT_TOOLBOX_VERSION)/$(LATEST_TOOLBOX_VERSION)/g' -i'.bkp' Dockerfile \\\n\t  && rm -f Dockerfile.bkp \\\n\t)\n.PHONY: update-toolbox-version\n\nupdate-toolbox-pr: update-toolbox-version update-readme-tools\n\t$(eval VERSION_CHANGE=$(shell git diff --name-only Dockerfile | head -n 1 | xargs git diff | grep TOOLBOX_VERSION | sed -e 's/.*\"\\(.*\\)\"/\\1/g' | xargs echo | sed -e 's/ / -> /'))\n\t[ \"$(VERSION_CHANGE)\" = \"\" ] || \\\n\t( \\\n\t    $(eval PR_MESSAGE=$(shell curl -H'Authorization: token '$(GITHUB_TOKEN) -Ls 'https://api.github.com/repos/jakzal/toolbox/releases/latest' | jq -r .body | awk 'BEGIN { RS=\"\\n\";} { gsub(/\\r/, \"\"); gsub(/#/, \"\\\\#\"); gsub(/\"/, \"\\\\\\\\\\\\\\\"\"); print \"-m \\\"\"$$0\"\\\"\"}')) \\\n\t    git checkout -b toolbox-update && \\\n\t    git add Dockerfile README.md && \\\n\t    git commit -m \"Update toolbox $(VERSION_CHANGE)\" -m \"\" $(PR_MESSAGE) && \\\n\t    git push origin toolbox-update && \\\n\t    hub pull-request -h toolbox-update -a jakzal -m 'Update toolbox $(VERSION_CHANGE)' -m '' -m ':robot: This pull request was automagically sent from a Github action.' -m '' $(PR_MESSAGE) \\\n\t)\n.PHONY: update-toolbox-pr\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.3818359375,
          "content": "# Static Analysis Tools for PHP\n\nDocker image providing static analysis tools for PHP.\nThe list of available tools and the installer are actually managed in the [`jakzal/toolbox` repository](https://github.com/jakzal/toolbox).\n\n[![Build Status](https://github.com/jakzal/phpqa/actions/workflows/build.yml/badge.svg)](https://github.com/jakzal/phpqa/actions) [![Docker Pulls](https://img.shields.io/docker/pulls/jakzal/phpqa)](https://hub.docker.com/r/jakzal/phpqa/)\n\n## Supported platforms and PHP versions\n\nDocker hub repository: https://hub.docker.com/r/jakzal/phpqa/\n\nNightly builds: https://hub.docker.com/r/jakzal/phpqa-nightly/\n\n### Debian\n\n* `latest`, `debian` ([Dockerfile](https://github.com/jakzal/phpqa/blob/master/Dockerfile))\n* `1.101.1`, `1.101`, `1.101.1-debian`, `1.101-debian` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n* `1.101.1-php8.1`, `1.101-php8.1`, `php8.1-debian`, `php8.1` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n* `1.101.1-php8.2`, `1.101-php8.2`, `php8.2-debian`, `php8.2` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n* `1.101.1-php8.3`, `1.101-php8.3`, `php8.3-debian`, `php8.3` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n\n### Alpine\n\n* `alpine` ([Dockerfile](https://github.com/jakzal/phpqa/blob/master/Dockerfile))\n* `1.101.1-alpine`, `1.101-alpine`, ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n* `1.101.1-php8.1-alpine`, `1.101-php8.1-alpine`, `php8.1-alpine` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n* `1.101.1-php8.2-alpine`, `1.101-php8.2-alpine`, `php8.2-alpine` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n* `1.101.1-php8.3-alpine`, `1.101-php8.3-alpine`, `php8.3-alpine` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.101.1/Dockerfile))\n\n\nUpdated daily: `latest`, `debian`, `alpine`, `php8.4`, `php8.4-alpine`, etc.\nUpdated on patch version change: `1.61`, `1.61-php8.4`, `1.61-php8.4-alpine`, etc.\nNever updated: `1.61.0`, `1.61.0-php8.4`, `1.61.0-php8.4-alpine`, etc.\n\n### Legacy\n\nThese are the latest tags for PHP versions that are no longer supported:\n\n- `1.92.7-php8.0`, `1.93-php8.0`, `php8.0-debian`, `php8.0` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.92.7/Dockerfile))\n- `1.92.7-php8.0-alpine`, `1.93-php8.0-alpine`, `php8.0-alpine` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.92.7/Dockerfile))\n- `1.80.0-php7.4`, `1.80-php7.4`, `php7.4-debian`, `php7.4` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.80.0/Dockerfile))\n- `1.80.0-php7.4-alpine`, `1.80-php7.4-alpine`, `php7.4-alpine` ([Dockerfile](https://github.com/jakzal/phpqa/blob/v1.80.0/Dockerfile))\n- `1.61.2-php7.3`, `1.61-php7.3`, `php7.3-debian`, `php7.3` ([debian/Dockerfile](https://github.com/jakzal/phpqa/blob/v1.61.2/debian/Dockerfile))\n- `1.61.2-php7.3-alpine`, `1.61-php7.3-alpine`, `php7.3-alpine` ([alpine/Dockerfile](https://github.com/jakzal/phpqa/blob/v1.61.2/alpine/Dockerfile))\n- `1.44.0-php7.2`, `1.44-php7.2`, `php7.2` ([7.2/debian/Dockerfile](https://github.com/jakzal/phpqa/blob/v1.44.0/7.2/debian/Dockerfile))\n- `1.44.0-php7.2-alpine`, `1.44-php7.2-alpine`, `php7.2-alpine` ([7.2/alpine/Dockerfile](https://github.com/jakzal/phpqa/blob/v1.44.0/7.2/alpine/Dockerfile))\n- `1.26.0-php7.1`, `1.26-php7.1`, `php7.1` ([7.1/debian/Dockerfile](https://github.com/jakzal/phpqa/blob/v1.26.0/7.1/debian/Dockerfile))\n- `1.26.0-php7.1-alpine`, `1.26-php7.1-alpine`, `php7.1-alpine` ([7.1/alpine/Dockerfile](https://github.com/jakzal/phpqa/blob/v1.26.0/7.1/alpine/Dockerfile))\n\n## Available tools\n\n| Name | Description | PHP 8.1 | PHP 8.2 | PHP 8.3 | PHP 8.4 |\n| :--- | :---------- | :------ | :------ | :------ | :------ |\n| behat | [Helps to test business expectations](http://behat.org/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| box | [Fast, zero config application bundler with PHARs](https://github.com/humbug/box) | &#x274C; | &#x2705; | &#x2705; | &#x2705; |\n| box-3 | [Fast, zero config application bundler with PHARs](https://github.com/humbug/box) | &#x2705; | &#x274C; | &#x2705; | &#x2705; |\n| churn | [Discovers good candidates for refactoring](https://github.com/bmitch/churn-php) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| codeception | [Codeception is a BDD-styled PHP testing framework](https://codeception.com/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| composer | [Dependency Manager for PHP](https://getcomposer.org/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| composer-bin-plugin | [Composer plugin to install bin vendors in isolated locations](https://github.com/bamarni/composer-bin-plugin) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| composer-normalize | [Composer plugin to normalize composer.json files](https://github.com/ergebnis/composer-normalize) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| composer-require-checker | [Verify that no unknown symbols are used in the sources of a package.](https://github.com/maglnet/ComposerRequireChecker) | &#x274C; | &#x2705; | &#x2705; | &#x2705; |\n| composer-require-checker-3 | [Verify that no unknown symbols are used in the sources of a package.](https://github.com/maglnet/ComposerRequireChecker) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| composer-unused | [Show unused packages by scanning your code](https://github.com/icanhazstring/composer-unused) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| dephpend | [Detect flaws in your architecture](https://dephpend.com/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| deprecation-detector | [Finds usages of deprecated code](https://github.com/sensiolabs-de/deprecation-detector) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| deptrac | [Enforces dependency rules between software layers](https://github.com/qossmic/deptrac) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| diffFilter | [Applies QA tools to run on a single pull request](https://github.com/exussum12/coverageChecker) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| ecs | [Sets up and runs coding standard checks](https://github.com/Symplify/EasyCodingStandard) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| infection | [AST based PHP Mutation Testing Framework](https://infection.github.io/) | &#x274C; | &#x2705; | &#x2705; | &#x2705; |\n| larastan | [PHPStan extension for Laravel](https://github.com/nunomaduro/larastan) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| local-php-security-checker | [Checks composer dependencies for known security vulnerabilities](https://github.com/fabpot/local-php-security-checker) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| parallel-lint | [Checks PHP file syntax](https://github.com/php-parallel-lint/PHP-Parallel-Lint) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| paratest | [Parallel testing for PHPUnit](https://github.com/paratestphp/paratest) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| pdepend | [Static Analysis Tool](https://pdepend.org/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| pest | [The elegant PHP Testing Framework](https://github.com/pestphp/pest) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phan | [Static Analysis Tool](https://github.com/phan/phan) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phive | [PHAR Installation and Verification Environment](https://phar.io/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| php-cs-fixer | [PHP Coding Standards Fixer](http://cs.symfony.com/) | &#x2705; | &#x2705; | &#x2705; | &#x274C; |\n| php-fuzzer | [A fuzzer for PHP, which can be used to find bugs in libraries by feeding them 'random' inputs](https://github.com/nikic/PHP-Fuzzer) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| php-semver-checker | [Suggests a next version according to semantic versioning](https://github.com/tomzx/php-semver-checker) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpa | [Checks for weak assumptions](https://github.com/rskuipers/php-assumptions) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phparkitect | [Helps to put architectural constraints in a PHP code base](https://github.com/phparkitect/arkitect) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpat | [Easy to use architecture testing tool](https://github.com/carlosas/phpat) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpbench | [PHP Benchmarking framework](https://github.com/phpbench/phpbench) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpca | [Finds usage of non-built-in extensions](https://github.com/wapmorgan/PhpCodeAnalyzer) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpcb | [PHP Code Browser](https://github.com/mayflower/PHP_CodeBrowser) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpcbf | [Automatically corrects coding standard violations](https://github.com/squizlabs/PHP_CodeSniffer) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpcodesniffer-composer-install | [Easy installation of PHP_CodeSniffer coding standards (rulesets).](https://github.com/Dealerdirect/phpcodesniffer-composer-installer) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpcov | [a command-line frontend for the PHP_CodeCoverage library](https://github.com/sebastianbergmann/phpcov) | &#x274C; | &#x2705; | &#x2705; | &#x2705; |\n| phpcpd | [Copy/Paste Detector](https://github.com/sebastianbergmann/phpcpd) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpcs | [Detects coding standard violations](https://github.com/squizlabs/PHP_CodeSniffer) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpcs-security-audit | [Finds vulnerabilities and weaknesses related to security in PHP code](https://github.com/FloeDesignTechnologies/phpcs-security-audit) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpdd | [Finds usage of deprecated features](http://wapmorgan.github.io/PhpDeprecationDetector) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpDocumentor | [Documentation generator](https://www.phpdoc.org/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpinsights | [Analyses code quality, style, architecture and complexity](https://phpinsights.com/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phplint | [Lints php files in parallel](https://github.com/overtrue/phplint) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phploc | [A tool for quickly measuring the size of a PHP project](https://github.com/sebastianbergmann/phploc) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpmd | [A tool for finding problems in PHP code](https://phpmd.org/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpmetrics | [Static Analysis Tool](http://www.phpmetrics.org/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpmnd | [Helps to detect magic numbers](https://github.com/povils/phpmnd) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpspec | [SpecBDD Framework](http://www.phpspec.net/) | &#x2705; | &#x2705; | &#x2705; | &#x274C; |\n| phpstan | [Static Analysis Tool](https://github.com/phpstan/phpstan) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-banned-code | [PHPStan rules for detecting calls to specific functions you don't want in your project](https://github.com/ekino/phpstan-banned-code) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-beberlei-assert | [PHPStan extension for beberlei/assert](https://github.com/phpstan/phpstan-beberlei-assert) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-deprecation-rules | [PHPStan rules for detecting deprecated code](https://github.com/phpstan/phpstan-deprecation-rules) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-doctrine | [Doctrine extensions for PHPStan](https://github.com/phpstan/phpstan-doctrine) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-ergebnis-rules | [Additional rules for PHPstan](https://github.com/ergebnis/phpstan-rules) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-exception-rules | [PHPStan rules for checked and unchecked exceptions](https://github.com/pepakriz/phpstan-exception-rules) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-larastan | [Separate installation of phpstan for larastan](https://github.com/phpstan/phpstan) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-phpunit | [PHPUnit extensions and rules for PHPStan](https://github.com/phpstan/phpstan-phpunit) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-strict-rules | [Extra strict and opinionated rules for PHPStan](https://github.com/phpstan/phpstan-strict-rules) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-symfony | [Symfony extension for PHPStan](https://github.com/phpstan/phpstan-symfony) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpstan-webmozart-assert | [PHPStan extension for webmozart/assert](https://github.com/phpstan/phpstan-webmozart-assert) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpunit | [The PHP testing framework](https://phpunit.de/) | &#x274C; | &#x2705; | &#x2705; | &#x2705; |\n| phpunit-10 | [The PHP testing framework (10.x version)](https://phpunit.de/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpunit-8 | [The PHP testing framework (8.x version)](https://phpunit.de/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| phpunit-9 | [The PHP testing framework (9.x version)](https://phpunit.de/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| pint | [Opinionated PHP code style fixer for Laravel](https://github.com/laravel/pint) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| psalm | [Finds errors in PHP applications](https://psalm.dev/) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| psalm-plugin-doctrine | [Stubs to let Psalm understand Doctrine better](https://github.com/weirdan/doctrine-psalm-plugin) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| psalm-plugin-phpunit | [Psalm plugin for PHPUnit](https://github.com/psalm/psalm-plugin-phpunit) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| psalm-plugin-symfony | [Psalm Plugin for Symfony](https://github.com/psalm/psalm-plugin-symfony) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| psecio-parse | [Scans code for potential security-related issues](https://github.com/psecio/parse) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| rector | [Tool for instant code upgrades and refactoring](https://github.com/rectorphp/rector) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| roave-backward-compatibility-check | [Tool to compare two revisions of a class API to check for BC breaks](https://github.com/Roave/BackwardCompatibilityCheck) | &#x2705; | &#x2705; | &#x2705; | &#x274C; |\n| simple-phpunit | [Provides utilities to report legacy tests and usage of deprecated code](https://symfony.com/doc/current/components/phpunit_bridge.html) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| twig-cs-fixer | [Automatically corrects twig files following the official coding standard rules](https://github.com/VincentLanglet/Twig-CS-Fixer) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| twig-lint | [Standalone cli twig 1.X linter](https://github.com/asm89/twig-lint) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| twig-linter | [Standalone cli twig 3.X linter](https://github.com/sserbin/twig-linter) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| twigcs | [The missing checkstyle for twig!](https://github.com/friendsoftwig/twigcs) | &#x2705; | &#x2705; | &#x2705; | &#x2705; |\n| yaml-lint | [Compact command line utility for checking YAML file syntax](https://github.com/j13k/yaml-lint) | &#x274C; | &#x2705; | &#x2705; | &#x2705; |\n\n## More tools\n\nSome tools are not included in the docker image, to use them refer to their documentation:\n\n* exakat - [a real time PHP static analyser](https://www.exakat.io)\n\n### Removed tools\n\n| Name | Summary |\n| :--- | :------ |\n| analyze | [Visualizes metrics and source code](https://github.com/Qafoo/QualityAnalyzer) |\n| box-legacy | [Legacy version of box](https://box-project.github.io/box2/) |\n| composer-normalize | [Composer plugin to normalize composer.json files](https://github.com/localheinz/composer-normalize) |\n| design-pattern | [Detects design patterns](https://github.com/Halleck45/DesignPatternDetector) |\n| parallel-lint | [Checks PHP file syntax](https://github.com/JakubOnderka/PHP-Parallel-Lint) |\n| php-coupling-detector | [Detects code coupling issues](https://akeneo.github.io/php-coupling-detector/) |\n| php-formatter | [Custom coding standards fixer](https://github.com/mmoreram/php-formatter) |\n| phpcf | [Finds usage of deprecated features](http://wapmorgan.github.io/PhpCodeFixer/) |\n| phpda | [Generates dependency graphs](https://mamuz.github.io/PhpDependencyAnalysis/) |\n| phpdoc-to-typehint | [Automatically adds type hints and return types based on PHPDocs](https://github.com/dunglas/phpdoc-to-typehint) |\n| phpstan-localheinz-rules | [Additional rules for PHPstan](https://github.com/localheinz/phpstan-rules) |\n| security-checker | [Checks composer dependencies for known security vulnerabilities](https://github.com/sensiolabs/security-checker) |\n| testability | [Analyses and reports testability issues of a php codebase](https://github.com/edsonmedina/php_testability) |\n\n## Running tools\n\nPull the image:\n\n```bash\ndocker pull jakzal/phpqa\n```\n\nThe default command will list available tools:\n\n```bash\ndocker run -it --rm jakzal/phpqa\n```\n\nTo run the selected tool inside the container, you'll need to mount\nthe project directory on the container with `-v \"$(pwd):/project\"`.\nSome tools like to write to the `/tmp` directory (like PHPStan, or Behat in some cases), therefore it's often useful\nto share it between docker runs, i.e. with `-v \"$(pwd)/tmp-phpqa:/tmp\"`.\nIf you want to be able to interrupt the selected tool if it takes too much time to complete, you can use the\n`--init` option. Please refer to the [docker run documentation](https://docs.docker.com/engine/reference/commandline/run/) for more information.\n\n```bash\ndocker run --init -it --rm -v \"$(pwd):/project\" -v \"$(pwd)/tmp-phpqa:/tmp\" -w /project jakzal/phpqa phpstan analyse src\n```\n\nYou might want to tweak this command to your needs and create an alias for convenience:\n\n```bash\nalias phpqa='docker run --init -it --rm -v \"$(pwd):/project\" -v \"$(pwd)/tmp-phpqa:/tmp\" -w /project jakzal/phpqa:alpine'\n```\n\nAdd it to your `~/.bashrc` so it's defined every time you start a new terminal session.\n\nNow the command becomes a lot simpler:\n\n```bash\nphpqa phpstan analyse src\n```\n\n## Building the image\n\n```bash\ngit clone https://github.com/jakzal/phpqa.git\ncd phpqa\nmake build-debian\n```\n\nTo build the alpine version:\n\n```\nmake build-alpine\n```\n\n## Cookbook\n\nPlease check out the [cookbook](docs/cookbook/README.md) for further tips & tricks.\n\n## Contributing\n\nPlease read the [Contributing guide](CONTRIBUTING.md) to learn about contributing to this project.\nPlease note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}