{
  "metadata": {
    "timestamp": 1736557405757,
    "page": 405,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "metabase/metabase",
      "stars": 39345,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babel_cache",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clj-kondo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cljfmt.edn",
          "type": "blob",
          "size": 31.33,
          "content": ";; Cljfmt config. See https://github.com/weavejester/cljfmt#formatting-options\n{:sort-ns-references?\n true\n\n :function-arguments-indentation\n :community\n\n :parallel?\n true\n\n :paths\n [\"src\"\n  \"test\"\n  \"enterprise/backend\"\n  \"bin/build\"\n  \"bin/lint-migrations-file\"\n  \"bin/release-list\"\n  \"modules/drivers\"\n  \".clj-kondo/src\"\n  \".clj-kondo/test\"\n  #_\"dev\"]\n\n ;; See https://github.com/weavejester/cljfmt/blob/master/cljfmt/resources/cljfmt/indents/clojure.clj for the default\n ;; definitions\n ;;\n ;;    [[:block 0]]\n ;;             ^ number of special args\n ;;\n ;; `:block` indentation means format with all arguments indented 2 spaces except for the 'special' arguments which\n ;; normally are supposed to go on the first line. e.g. `let` gets [[:block 1]] because it has one 'special' arg.\n ;;\n ;;    [[:inner 0]]\n ;;             ^ depth\n ;;    [[:inner 2 0]]\n ;;               ^ argument index to restrict this rule to\n ;;\n ;; `:inner` indentation is like `:defn` indentation. `[[:inner 0]]` (default for `defn`) means all arguments at depth\n ;; zero get indented 2 spaces if not on the first line regardless of number of elements on the first line.\n :extra-indents\n {;; clojure.core stuff\n  fn*                                                                                  [[:inner 0]]\n  let*                                                                                 [[:block 1]]\n  with-meta                                                                            [[:default]]\n  ;; library stuff. Libraries that specify their own `:style/indent` specs are included in the section after this\n  ;; since it is generated automatically.\n  clojure.core.logic/fresh                                                             [[:block 1]]\n  clojure.core.logic/matcha                                                            [[:block 1]]\n  clojure.core.logic/run                                                               [[:block 2]]\n  clojure.core.match/match                                                             [[:block 1]]\n  clojure.test.check.properties/for-all                                                [[:block 1]]\n  clojure.test.check.properties/for-all*                                               [[:block 1]]\n  clojure.test.check/quick-check                                                       [[:block 1]]\n  clojure.tools.macro/macrolet                                                         [[:block 1] [:inner 2 0]]\n  clojurewerkz.quartzite.jobs/build                                                    [[:default]]\n  clojurewerkz.quartzite.jobs/with-description                                         [[:default]]\n  clojurewerkz.quartzite.jobs/with-identity                                            [[:default]]\n  clojurewerkz.quartzite.schedule.cron/schedule                                        [[:default]]\n  clojurewerkz.quartzite.schedule.cron/with-misfire-handling-instruction-do-nothing    [[:default]]\n  clojurewerkz.quartzite.triggers/build                                                [[:default]]\n  clojurewerkz.quartzite.triggers/with-description                                     [[:default]]\n  clojurewerkz.quartzite.triggers/with-identity                                        [[:default]]\n  clojurewerkz.quartzite.triggers/with-priority                                        [[:default]]\n  clojurewerkz.quartzite.triggers/with-schedule                                        [[:default]]\n  def-map-type                                                                         [[:block 2] [:inner 1]]\n  defprotocol+                                                                         [[:block 1] [:inner 1]]\n  defrecord+                                                                           [[:block 2] [:inner 1]]\n  deftype+                                                                             [[:block 2] [:inner 1]]\n  net.cgrand.macrovich/case                                                            [[:block 0]]\n  potemkin.namespaces/import-vars                                                      [[:default]]\n  potemkin.types/def-map-type                                                          [[:block 2] [:inner 1]]\n  potemkin.types/defprotocol+                                                          [[:block 1] [:inner 1]]\n  potemkin.types/defrecord+                                                            [[:block 2] [:inner 1]]\n  potemkin.types/deftype+                                                              [[:block 2] [:inner 1]]\n  potemkin/def-map-type                                                                [[:block 2] [:inner 1]]\n  potemkin/defprotocol+                                                                [[:block 1] [:inner 1]]\n  potemkin/defrecord+                                                                  [[:block 2] [:inner 1]]\n  potemkin/deftype+                                                                    [[:block 2] [:inner 1]]\n  potemkin/import-vars                                                                 [[:default]]\n  taoensso.nippy/extend-freeze                                                         [[:inner 0]]\n  taoensso.nippy/extend-thaw                                                           [[:inner 0]]\n  throttle.core/with-throttling                                                        [[:block 1]]\n  ;; the rest of the stuff in this list is generated automatically based on `:style/indent` specs\n  ;; by running [[dev.generate-cljfmt-config/specs]]... use that code to update this list\n  metabase-enterprise.advanced-permissions.api.util-test/with-impersonations!          [[:inner 0]]\n  metabase-enterprise.cache.config-test/with-temp-persist-models                       [[:block 1]]\n  metabase-enterprise.sandbox.test-util/with-gtaps!                                    [[:inner 0]]\n  metabase-enterprise.sandbox.test-util/with-gtaps-for-user!                           [[:inner 0]]\n  metabase-enterprise.sandbox.test-util/with-user-attributes                           [[:block 2]]\n  metabase-enterprise.serialization.test-util/with-dbs                                 [[:inner 0]]\n  metabase-enterprise.serialization.test-util/with-random-dump-dir                     [[:block 1]]\n  metabase-enterprise.serialization.test-util/with-world                               [[:block 0]]\n  metabase-enterprise.sso.integrations.jwt-test/with-users-with-email-deleted          [[:block 1]]\n  metabase-enterprise.test/with-gtaps!                                                 [[:inner 0]]\n  metabase-enterprise.test/with-gtaps-for-user!                                        [[:inner 0]]\n  metabase-enterprise.test/with-user-attributes                                        [[:block 2]]\n  metabase.actions-test/with-actions-test-data-and-actions-permissively-enabled        [[:block 0]]\n  metabase.actions.test-util/with-actions                                              [[:block 1]]\n  metabase.actions.test-util/with-actions-disabled                                     [[:block 0]]\n  metabase.actions.test-util/with-actions-enabled                                      [[:block 0]]\n  metabase.actions.test-util/with-actions-test-data                                    [[:inner 0]]\n  metabase.actions.test-util/with-actions-test-data-and-actions-enabled                [[:block 0]]\n  metabase.actions.test-util/with-actions-test-data-tables                             [[:block 1]]\n  metabase.actions.test-util/with-empty-db                                             [[:inner 0]]\n  metabase.actions.test-util/with-temp-test-data                                       [[:inner 0]]\n  metabase.api.alert-test/with-alert-in-collection                                     [[:block 1]]\n  metabase.api.card-test/with-cards-in-readable-collection                             [[:block 1]]\n  metabase.api.card-test/with-cards-in-writeable-collection                            [[:block 1]]\n  metabase.api.card-test/with-ordered-items                                            [[:inner 0]]\n  metabase.api.card-test/with-temp-native-card!                                        [[:block 1]]\n  metabase.api.card-test/with-temp-native-card-with-params!                            [[:block 1]]\n  metabase.api.collection-test/with-collection-hierarchy                               [[:block 1]]\n  metabase.api.collection-test/with-french-user-and-personal-collection                [[:block 2]]\n  metabase.api.collection-test/with-some-children-of-collection                        [[:block 1]]\n  metabase.api.common/check                                                            [[:default]]\n  metabase.api.common/define-routes                                                    [[:block 0]]\n  metabase.api.common/let-404                                                          [[:block 1]]\n  metabase.api.common.internal/auto-coerce                                             [[:block 1]]\n  metabase.api.common.internal/auto-parse                                              [[:block 1]]\n  metabase.api.common.internal-test/no-route-regexes                                   [[:block 0]]\n  metabase.api.embed-test/do-response-formats                                          [[:block 1]]\n  metabase.api.embed-test/with-embedding-enabled-and-new-secret-key                    [[:block 0]]\n  metabase.api.embed-test/with-embedding-enabled-and-temp-card-referencing             [[:block 3]]\n  metabase.api.embed-test/with-embedding-enabled-and-temp-dashcard-referencing         [[:block 3]]\n  metabase.api.embed-test/with-new-secret-key                                          [[:block 0]]\n  metabase.api.embed-test/with-temp-card                                               [[:block 1]]\n  metabase.api.embed-test/with-temp-dashcard                                           [[:block 1]]\n  metabase.api.preview-embed-test/with-embedding-enabled-and-new-secret-key            [[:block 0]]\n  metabase.api.preview-embed-test/with-new-secret-key                                  [[:block 0]]\n  metabase.api.public-test/with-sharing-enabled-and-temp-card-referencing              [[:block 3]]\n  metabase.api.public-test/with-sharing-enabled-and-temp-dashcard-referencing          [[:block 3]]\n  metabase.api.public-test/with-temp-public-card                                       [[:block 1]]\n  metabase.api.public-test/with-temp-public-dashboard                                  [[:block 1]]\n  metabase.api.public-test/with-temp-public-dashboard-and-card                         [[:block 1]]\n  metabase.api.search-test/do-test-users                                               [[:block 1]]\n  metabase.api.session/http-401-on-error                                               [[:block 0]]\n  metabase.async.streaming-response/streaming-response                                 [[:block 2]]\n  metabase.async.streaming-response-test/with-streaming-response-thread-pool           [[:block 0]]\n  metabase.async.streaming-response-test/with-test-driver-db!                          [[:block 0]]\n  metabase.async.util/cancelable-thread                                                [[:block 0]]\n  metabase.cmd.copy/step                                                               [[:block 1]]\n  metabase.cmd.copy/with-connection-rollback-only                                      [[:block 1]]\n  metabase.cmd.copy/with-disabled-db-constraints                                       [[:block 2]]\n  metabase.config/build-type-case                                                      [[:block 0]]\n  metabase.dashboard-subscription-test/with-link-card-fixture-for-dashboard            [[:block 2]]\n  metabase.db.liquibase/with-liquibase                                                 [[:block 1]]\n  metabase.db.liquibase/with-scope-locked                                              [[:block 1]]\n  metabase.db.schema-migrations-test.impl/test-migrations                              [[:block 2]]\n  metabase.db/with-application-db                                                      [[:inner 0]]\n  metabase.driver.bigquery-cloud-sdk.query-processor/with-temporal-type                [[:default]]\n  metabase.driver.druid.client/DELETE                                                  [[:default]]\n  metabase.driver.druid.client/GET                                                     [[:default]]\n  metabase.driver.druid.client/POST                                                    [[:default]]\n  metabase.driver.druid.query-processor-test/druid-query                               [[:block 0]]\n  metabase.driver.druid.query-processor-test/druid-query-returning-rows                [[:block 0]]\n  metabase.driver.mongo.query-processor/mongo-let                                      [[:block 1]]\n  metabase.driver.sql-jdbc.actions/with-jdbc-transaction                               [[:block 1]]\n  metabase.driver.sql-jdbc.connection/with-connection-spec-for-testing-connection      [[:block 1]]\n  metabase.driver.sql-jdbc.execute.diagnostic/capturing-diagnostic-info                [[:block 1]]\n  metabase.driver.sql.query-processor/apply-top-level-clause                           [[:default]]\n  metabase.driver/with-driver                                                          [[:block 1]]\n  metabase.lib.binning/with-binning                                                    [[:default]]\n  metabase.lib.core/with-binning                                                       [[:default]]\n  metabase.lib.core/with-join-alias                                                    [[:default]]\n  metabase.lib.core/with-join-conditions                                               [[:default]]\n  metabase.lib.join/with-join-alias                                                    [[:default]]\n  metabase.lib.join/with-join-conditions                                               [[:default]]\n  metabase.lib.test-util.macros/$ids                                                   [[:inner 0]]\n  metabase.lib.test-util.macros/mbql-query                                             [[:inner 0]]\n  metabase.lib.util.match/match                                                        [[:inner 0]]\n  metabase.lib.util.match/match-one                                                    [[:inner 0]]\n  metabase.lib.util.match/replace                                                      [[:inner 0]]\n  metabase.lib.util.match/replace-in                                                   [[:inner 0]]\n  metabase.models.collection-test/with-collection-hierarchy                            [[:block 1]]\n  metabase.models.collection-test/with-current-user-perms-for-collections              [[:block 1]]\n  metabase.models.collection-test/with-personal-and-impersonal-collections             [[:block 1]]\n  metabase.models.dashboard-test/with-dash-in-collection                               [[:inner 0]]\n  metabase.models.interface/define-batched-hydration-method                            [[:inner 0]]\n  metabase.models.interface/define-simple-hydration-method                             [[:inner 0]]\n  metabase.models.params.chain-filter-test/with-clean-field-values-for-field           [[:block 1]]\n  metabase.models.params.chain-filter-test/with-fk-field-to-field-remapping            [[:block 0]]\n  metabase.models.params.chain-filter-test/with-human-readable-values-remapping        [[:block 0]]\n  metabase.models.pulse-test/with-dashboard-subscription-in-collection                 [[:block 1]]\n  metabase.models.pulse-test/with-pulse-in-collection                                  [[:inner 0]]\n  metabase.models.setting/defsetting                                                   [[:block 1]]\n  metabase.models.setting.multi-setting/define-multi-setting                           [[:inner 0]]\n  metabase.models.task-history/with-task-history                                       [[:block 1]]\n  metabase.query-processor-test.pipeline-queries-test/pmbql-query                      [[:block 1]]\n  metabase.query-processor-test.pipeline-queries-test/run-pmbql-query                  [[:block 1]]\n  metabase.query-processor.debug/debug>                                                [[:block 0]]\n  metabase.query-processor.error-type/deferror                                         [[:block 1]]\n  metabase.query-processor.middleware.cache-backend.interface/with-cached-results      [[:block 4]]\n  metabase.query-processor.middleware.process-userland-query-test/with-query-execution [[:block 1]]\n  metabase.query-processor.store/cached                                                [[:block 1]]\n  metabase.query-processor.store/with-metadata-provider                                [[:inner 0]]\n  metabase.query-processor.streaming/streaming-response                                [[:block 1]]\n  metabase.query-processor.test-util/format-rows-by                                    [[:default]]\n  metabase.request.core/as-admin                                                       [[:block 0]]\n  metabase.request.core/with-current-request                                           [[:inner 0]]\n  metabase.request.core/with-current-user                                              [[:inner 0]]\n  metabase.request.core/with-limit-and-offset                                          [[:inner 0]]\n  metabase.request.session/as-admin                                                    [[:block 0]]\n  metabase.request.session/with-current-user                                           [[:inner 0]]\n  metabase.sample-data-test/with-temp-sample-database-db                               [[:block 1]]\n  metabase.server.middleware.session/as-admin                                          [[:block 0]]\n  metabase.server.middleware.session/with-current-user                                 [[:inner 0]]\n  metabase.sync.fetch-metadata/log-if-error                                            [[:block 1]]\n  metabase.sync.sync-metadata.fields-test/with-test-db                                 [[:block 0]]\n  metabase.sync.util/do-with-start-and-finish-debug-logging                            [[:default]]\n  metabase.sync.util/sum-for                                                           [[:block 1]]\n  metabase.sync.util/sync-operation                                                    [[:block 3]]\n  metabase.sync.util/with-db-logging-disabled                                          [[:default]]\n  metabase.sync.util/with-duplicate-ops-prevented                                      [[:default]]\n  metabase.sync.util/with-emoji-progress-bar                                           [[:block 1]]\n  metabase.sync.util/with-error-handling                                               [[:block 1]]\n  metabase.sync.util/with-start-and-finish-logging                                     [[:default]]\n  metabase.sync.util/with-start-and-finish-logging*                                    [[:default]]\n  metabase.sync.util/with-sync-events                                                  [[:default]]\n  metabase.test/$ids                                                                   [[:inner 0]]\n  metabase.test/as-admin                                                               [[:inner 0]]\n  metabase.test/dataset                                                                [[:inner 0]]\n  metabase.test/discard-setting-changes                                                [[:block 1]]\n  metabase.test/format-rows-by                                                         [[:default]]\n  metabase.test/let-url                                                                [[:block 1]]\n  metabase.test/mbql-query                                                             [[:inner 0]]\n  metabase.test/native-query                                                           [[:block 0]]\n  metabase.test/query                                                                  [[:block 1]]\n  metabase.test/run-mbql-query                                                         [[:inner 0]]\n  metabase.test/test-driver                                                            [[:inner 0]]\n  metabase.test/test-drivers                                                           [[:inner 0]]\n  metabase.test/test-helpers-set-global-values!                                        [[:block 0]]\n  metabase.test/throw-if-called!                                                       [[:block 1]]\n  metabase.test/with-actions                                                           [[:block 1]]\n  metabase.test/with-actions-disabled                                                  [[:block 0]]\n  metabase.test/with-actions-enabled                                                   [[:block 0]]\n  metabase.test/with-actions-test-data                                                 [[:inner 0]]\n  metabase.test/with-actions-test-data-and-actions-enabled                             [[:block 0]]\n  metabase.test/with-actions-test-data-tables                                          [[:block 1]]\n  metabase.test/with-additional-premium-features                                       [[:block 1]]\n  metabase.test/with-current-user                                                      [[:inner 0]]\n  metabase.test/with-driver                                                            [[:block 1]]\n  metabase.test/with-empty-db                                                          [[:inner 0]]\n  metabase.test/with-empty-h2-app-db                                                   [[:block 0]]\n  metabase.test/with-metadata-provider                                                 [[:inner 0]]\n  metabase.test/with-premium-features                                                  [[:block 1]]\n  metabase.test/with-temp                                                              [[:inner 0]]\n  metabase.test/with-temp-copy-of-db                                                   [[:block 0]]\n  metabase.test/with-temp-scheduler                                                    [[:block 0]]\n  metabase.test/with-temp-test-data                                                    [[:inner 0]]\n  metabase.test/with-temp-vals-in-db                                                   [[:block 3]]\n  metabase.test/with-test-user                                                         [[:inner 0]]\n  metabase.test/with-user-in-groups                                                    [[:inner 0]]\n  metabase.test.data/$ids                                                              [[:inner 0]]\n  metabase.test.data/dataset                                                           [[:inner 0]]\n  metabase.test.data/mbql-query                                                        [[:inner 0]]\n  metabase.test.data/native-query                                                      [[:block 0]]\n  metabase.test.data/query                                                             [[:block 1]]\n  metabase.test.data/run-mbql-query                                                    [[:inner 0]]\n  metabase.test.data/with-empty-h2-app-db                                              [[:block 0]]\n  metabase.test.data/with-temp-copy-of-db                                              [[:block 0]]\n  metabase.test.data.datasets/test-driver                                              [[:inner 0]]\n  metabase.test.data.datasets/test-drivers                                             [[:inner 0]]\n  metabase.test.data.one-off-dbs/with-blank-db                                         [[:block 0]]\n  metabase.test.data.one-off-dbs/with-blueberries-db                                   [[:block 0]]\n  metabase.test.data.users/with-test-user                                              [[:inner 0]]\n  metabase.test.util/discard-setting-changes                                           [[:block 1]]\n  metabase.test.util/let-url                                                           [[:block 1]]\n  metabase.test.util/throw-if-called!                                                  [[:block 1]]\n  metabase.test.util/with-temp-scheduler                                               [[:block 0]]\n  metabase.test.util/with-temp-vals-in-db                                              [[:block 3]]\n  metabase.test.util/with-user-in-groups                                               [[:inner 0]]\n  metabase.test.util.public-settings/with-additional-premium-features                  [[:block 1]]\n  metabase.test.util.public-settings/with-premium-features                             [[:block 1]]\n  metabase.test.util.thread-local/test-helpers-set-global-values!                      [[:block 0]]\n  metabase.timeseries-query-processor-test.util/test-timeseries-drivers                [[:block 0]]\n  metabase.timeseries-query-processor-test/run-mbql-query                              [[:inner 0]]\n  metabase.upload-test/with-upload-table!                                              [[:inner 0]]\n  metabase.upload.types/with-currency                                                  [[:default]]\n  metabase.upload.types/with-parens                                                    [[:default]]\n  metabase.util/auto-retry                                                             [[:block 1]]\n  metabase.util/case-enum                                                              [[:block 1]]\n  metabase.util/ignore-exceptions                                                      [[:block 0]]\n  metabase.util/or-with                                                                [[:block 1]]\n  metabase.util/profile                                                                [[:block 1]]\n  metabase.util/prog1                                                                  [[:inner 0]]\n  metabase.util/varargs                                                                [[:inner 0]]\n  metabase.util/with-us-locale                                                         [[:block 0]]\n  metabase.util.date-2/with-time-zone-same-instant                                     [[:default]]\n  metabase.util.encryption-test/with-secret-key                                        [[:block 1]]\n  metabase.util.honey-sql-2/with-database-type-info                                    [[:default]]\n  metabase.util.i18n/deferred-trs                                                      [[:default]]\n  metabase.util.i18n/deferred-tru                                                      [[:default]]\n  metabase.util.i18n/trs                                                               [[:default]]\n  metabase.util.i18n/trsn                                                              [[:default]]\n  metabase.util.i18n/tru                                                               [[:default]]\n  metabase.util.i18n/trun                                                              [[:default]]\n  metabase.util.jvm/auto-retry                                                         [[:block 1]]\n  metabase.util.jvm/varargs                                                            [[:block 1]]\n  metabase.util.jvm/with-us-locale                                                     [[:block 0]]\n  metabase.util.malli/disable-enforcement                                              [[:block 0]]\n  metabase.util.malli/with                                                             [[:default]]\n  metabase.util.malli/with-api-error-message                                           [[:default]]\n  metabase.util.namespaces/import-fns                                                  [[:default]]\n  metabuild-common.core/exit-when-finished-nonzero-on-exception                        [[:block 0]]\n  metabuild-common.core/step                                                           [[:block 1]]\n  metabuild-common.entrypoint/exit-when-finished-nonzero-on-exception                  [[:block 0]]\n  metabuild-common.steps/step                                                          [[:block 1]]\n  methodical.core/defmethod                                                            [[:inner 0]]\n  methodical.core/defmulti                                                             [[:inner 0]]\n  methodical.core/with-dispatcher                                                      [[:default]]\n  methodical.core/with-method-table                                                    [[:default]]\n  methodical.core/with-prefers                                                         [[:default]]\n  methodical.interface/with-dispatcher                                                 [[:default]]\n  methodical.interface/with-method-table                                               [[:default]]\n  methodical.interface/with-prefers                                                    [[:default]]\n  methodical.macros/defmethod                                                          [[:inner 0]]\n  methodical.macros/defmulti                                                           [[:inner 0]]\n  saml20-clj.sp.response/validate-confirmation-datas                                   [[:block 1]]\n  toucan2.connection/with-transaction                                                  [[:block 1]]\n  toucan2.core/build                                                                   [[:block 0]]\n  toucan2.core/compile                                                                 [[:block 0]]\n  toucan2.core/debug                                                                   [[:block 0]]\n  toucan2.core/define-after-insert                                                     [[:inner 0]]\n  toucan2.core/define-after-select                                                     [[:inner 0]]\n  toucan2.core/define-after-update                                                     [[:inner 0]]\n  toucan2.core/define-before-delete                                                    [[:inner 0]]\n  toucan2.core/define-before-insert                                                    [[:inner 0]]\n  toucan2.core/define-before-select                                                    [[:inner 0]]\n  toucan2.core/define-default-fields                                                   [[:inner 0]]\n  toucan2.core/define-named-query                                                      [[:block 1]]\n  toucan2.core/deftransforms                                                           [[:block 1]]\n  toucan2.core/with-transaction                                                        [[:block 1]]\n  toucan2.tools.after/define-after-impl                                                [[:default]]\n  toucan2.tools.after-insert/define-after-insert                                       [[:inner 0]]\n  toucan2.tools.after-select/define-after-select                                       [[:inner 0]]\n  toucan2.tools.after-update/define-after-update                                       [[:inner 0]]\n  toucan2.tools.before-delete/define-before-delete                                     [[:inner 0]]\n  toucan2.tools.before-insert/define-before-insert                                     [[:inner 0]]\n  toucan2.tools.before-select/define-before-select                                     [[:inner 0]]\n  toucan2.tools.compile/build                                                          [[:block 0]]\n  toucan2.tools.compile/compile                                                        [[:block 0]]\n  toucan2.tools.compile/resolved                                                       [[:block 0]]\n  toucan2.tools.debug/debug                                                            [[:block 0]]\n  toucan2.tools.default-fields/define-default-fields                                   [[:inner 0]]\n  toucan2.tools.named-query/define-named-query                                         [[:block 1]]\n  toucan2.tools.simple-out-transform/define-out-transform                              [[:inner 0]]\n  toucan2.tools.transformed/deftransforms                                              [[:block 1]]\n  toucan2.tools.with-temp/with-temp                                                    [[:inner 0]]\n  toucan2.util/try-with-error-context                                                  [[:inner 0]]}}\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 5.44,
          "content": "((nil\n  ;; always use spaces for tabs\n  (indent-tabs-mode . nil)\n  ;; add final newline on save\n  (require-final-newline . t)\n  ;; prefer keeping source width about ~118, GitHub seems to cut off stuff at either 119 or 120 and it's nicer\n  ;; to look at code in GH when you don't have to scroll back and forth\n  (fill-column . 118)\n  (whitespace-line-column . 118)\n  ;; tell find-things-fast to always use this directory as project root regardless of presence of other\n  ;; deps.edn files\n  (ftf-project-finders . (ftf-get-top-git-dir)))\n\n (js2-mode\n  ;; these settings will let flycheck do everything through eslint,\n  (js2-mode-show-parse-errors . nil)\n  ;; because js2-mode can't handle flowtype\n  (js2-mode-show-strict-warnings . nil))\n\n (clojure-mode\n  ;; Specify which arg is the docstring for certain macros\n  ;; (Add more as needed)\n  (eval . (put 'defendpoint-schema                 'clojure-doc-string-elt 3))\n  (eval . (put 'defendpoint                        'clojure-doc-string-elt 3))\n  (eval . (put 'defendpoint-async                  'clojure-doc-string-elt 3))\n  (eval . (put 'define-premium-feature             'clojure-doc-string-elt 2))\n  (eval . (put 'api/defendpoint-schema             'clojure-doc-string-elt 3))\n  (eval . (put 'api/defendpoint                    'clojure-doc-string-elt 3))\n  (eval . (put 'api/defendpoint-async              'clojure-doc-string-elt 3))\n  (eval . (put 'defsetting                         'clojure-doc-string-elt 2))\n  (eval . (put 'setting/defsetting                 'clojure-doc-string-elt 2))\n  (eval . (put 's/defn                             'clojure-doc-string-elt 2))\n  (eval . (put 'p.types/defprotocol+               'clojure-doc-string-elt 2))\n  (eval . (put 'methodical/defmethod               'clojure-doc-string-elt 3))\n  (eval . (put 'methodical/defmulti                'clojure-doc-string-elt 2))\n  (eval . (put 'mi/define-simple-hydration-method  'clojure-doc-string-elt 3))\n  (eval . (put 'mi/define-batched-hydration-method 'clojure-doc-string-elt 3))\n  (eval . (put 'mr/def                             'clojure-doc-string-elt 2))\n  (eval . (put 'mu/defn                            'clojure-doc-string-elt 2))\n  ;; Define custom indentation for functions inside metabase.\n  ;; This list isn't complete; add more forms as we come across them.\n  ;;\n  ;; `put-clojure-indent' is a safe-local-eval-function, so use a bunch of calls to that\n  ;; instead of one call to `define-clojure-indent'\n  (eval . (put-clojure-indent 'api/let-404                     1))\n  (eval . (put-clojure-indent 'c/step                          1))\n  (eval . (put-clojure-indent 'impl/test-migrations            2))\n  (eval . (put-clojure-indent 'let-404                         0))\n  (eval . (put-clojure-indent 'lib.schema.match/match          '(:defn)))\n  (eval . (put-clojure-indent 'lib.schema.match/match-one      '(:defn)))\n  (eval . (put-clojure-indent 'lib.schema.match/replace        '(:defn)))\n  (eval . (put-clojure-indent 'lib.schema.match/replace-in     '(:defn)))\n  (eval . (put-clojure-indent 'lib.util.match/replace          '(:defn)))\n  (eval . (put-clojure-indent 'macros/case                     0))\n  (eval . (put-clojure-indent 'match                           1))\n  (eval . (put-clojure-indent 'mt/dataset                      1))\n  (eval . (put-clojure-indent 'mt/format-rows-by               '(:form)))\n  (eval . (put-clojure-indent 'mt/query                        1))\n  (eval . (put-clojure-indent 'mt/test-driver                  1))\n  (eval . (put-clojure-indent 'mt/test-drivers                 1))\n  (eval . (put-clojure-indent 'mt/with-anaphora                1))\n  (eval . (put-clojure-indent 'prop/for-all                    1))\n  (eval . (put-clojure-indent 'qp.streaming/streaming-response 1))\n  (eval . (put-clojure-indent 'tc/quick-check                  1))\n  (eval . (put-clojure-indent 'u/profile                       1))\n  (eval . (put-clojure-indent 'u/prog1                         1))\n  (eval . (put-clojure-indent 'u/select-keys-when              '(:form)))\n  (eval . (put-clojure-indent 'with-meta                       '(:form)))\n  ;; these ones have to be done with `define-clojure-indent' for now because of upstream bug\n  ;; https://github.com/clojure-emacs/clojure-mode/issues/600 once that's resolved we should use `put-clojure-indent'\n  ;; instead. Please don't add new entries unless they don't work with `put-clojure-indent'\n  (eval . (define-clojure-indent\n           (l/matcha                  '(1 (:defn)))\n           (l/matche                  '(1 (:defn)))\n           (p.types/def-abstract-type '(1 (:defn)))\n           (p.types/defprotocol+      '(1 (:defn)))\n           (p.types/defrecord+        '(2 nil nil (:defn)))\n           (p.types/deftype+          '(2 nil nil (:defn)))\n           (p/def-map-type            '(2 nil nil (:defn)))\n           (p/defprotocol+            '(1 (:defn)))\n           (p/defrecord+              '(2 nil nil (:defn)))\n           (p/deftype+                '(2 nil nil (:defn)))\n           (tools.macro/macrolet      '(1 ((:defn)) :form))))\n  (cider-clojure-cli-aliases . \"dev:drivers:drivers-dev:ee:ee-dev:user\")\n  (clojure-indent-style . always-align)\n  (cljr-favor-prefix-notation . nil)\n  (cljr-insert-newline-after-require . t)\n  (cljr-print-right-margin . 118)\n  (clojure-docstring-fill-column . 118)\n  (cider-preferred-build-tool . clojure-cli)\n  (cider-default-cljs-repl . shadow-select)\n  (cider-shadow-default-options . \"app\"))\n\n (\"bin\"\n  (clojure-mode\n   (cider-clojure-cli-aliases . \"dev:drivers:build:build-dev\"))))\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.23,
          "content": ".babel_cache\ndocs/*\ntarget/*\n.circleci\n.cpcache\n.devcontainer\n.github\n.husky\n.lsp\n.shadow-cljs\n.github\n.vscode\nhooks/*\ntest/*\ntest_config/*\ntest_modules/*\ntest_resources/*\nnode_modules\n**metabase.jar\n\n*.db\n\nDockerfile\n.dockerignore\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.36,
          "content": "# Metabase EditorConfig settings\n# http://editorconfig.org/\n\n# use the top most editor config file\nroot = true\n\n[*]\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\nend_of_line = lf\n\n[Makefile]\nindent_style = tab\n\n[*.clj]\nindent_size = 2\nmax_line_length = 120\n\n[*.{html,css,mustache,js,jsx,ts,tsx,json}]\nindent_size = 2\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.12,
          "content": "frontend/src/cljs\nfrontend/src/cljs_release\ne2e/support/cypress_sample_database.js\ne2e/support/cypress_sample_instance_data.js\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 7.48,
          "content": "/* eslint-disable import/no-commonjs */\n/* eslint-disable no-undef */\n\n// `postcss-modules` lints css modules class names, but it currently crashes\n// eslint on vscode. If you use webstorm or want to run the lint for the cli, you\n// can use this flag to enable it. This is set to true in CI\nconst shouldLintCssModules =\n  process.env.LINT_CSS_MODULES === \"true\" || process.env.CI;\n\nmodule.exports = {\n  rules: {\n    strict: [2, \"never\"],\n    \"no-undef\": 2,\n    \"no-var\": 1,\n    \"no-unused-vars\": [\n      \"error\",\n      {\n        vars: \"all\",\n        args: \"none\",\n        varsIgnorePattern: \"^_\",\n        ignoreRestSiblings: true,\n      },\n    ],\n    \"no-empty\": [1, { allowEmptyCatch: true }],\n    \"no-restricted-imports\": [\n      \"error\",\n      {\n        paths: [\n          {\n            name: \"moment\",\n            message: \"Moment is deprecated, please use dayjs\",\n          },\n          {\n            name: \"moment-timezone\",\n            message: \"Moment is deprecated, please use dayjs\",\n          },\n        ],\n      },\n    ],\n    curly: [1, \"all\"],\n    eqeqeq: [1, \"smart\"],\n    \"import/no-default-export\": 2,\n    \"import/no-named-as-default\": 0,\n    \"import/no-commonjs\": 1,\n    \"import/order\": [\n      \"error\",\n      {\n        \"newlines-between\": \"always\",\n        alphabetize: {\n          order: \"asc\",\n          orderImportKind: \"asc\",\n          caseInsensitive: false,\n        },\n        groups: [\n          \"builtin\",\n          \"external\",\n          \"internal\",\n          \"parent\",\n          \"sibling\",\n          \"index\",\n        ],\n        warnOnUnassignedImports: false,\n      },\n    ],\n    \"sort-imports\": [\n      \"error\",\n      {\n        // allows this rule to work with import/order\n        ignoreDeclarationSort: true,\n      },\n    ],\n    \"no-console\": [2, { allow: [\"warn\", \"error\", \"errorBuffer\"] }],\n    \"react/no-is-mounted\": 2,\n    \"react/prefer-es6-class\": 2,\n    \"react/display-name\": 1,\n    \"react/prop-types\": 2,\n    \"react/no-did-mount-set-state\": 0,\n    \"react/no-did-update-set-state\": 0,\n    \"react/no-find-dom-node\": 0,\n    \"react/no-children-prop\": 2,\n    \"react/no-string-refs\": 2,\n    \"react/no-unescaped-entities\": 2,\n    \"react/jsx-no-target-blank\": 2,\n    \"react/jsx-key\": 2,\n    \"react/forbid-component-props\": [2, { forbid: [\"sx\"] }],\n    \"react-hooks/exhaustive-deps\": [\n      \"warn\",\n      { additionalHooks: \"(useSafeAsyncFunction)\" },\n    ],\n    \"prefer-const\": [1, { destructuring: \"all\" }],\n    \"no-restricted-globals\": [\"error\", \"close\"],\n    \"no-useless-escape\": 0,\n    \"no-only-tests/no-only-tests\": [\n      \"error\",\n      {\n        block: [\n          \"describe\",\n          \"it\",\n          \"context\",\n          \"test\",\n          \"tape\",\n          \"fixture\",\n          \"serial\",\n          \"Feature\",\n          \"Scenario\",\n          \"Given\",\n          \"And\",\n          \"When\",\n          \"Then\",\n          \"describeWithSnowplow\",\n          \"describeEE\",\n        ],\n      },\n    ],\n    complexity: [\"error\", { max: 54 }],\n    ...(shouldLintCssModules\n      ? {\n          \"postcss-modules/no-undef-class\": \"error\",\n        }\n      : {}),\n  },\n  globals: {\n    before: true,\n    cy: true,\n    Cypress: true,\n  },\n  env: {\n    browser: true,\n    es6: true,\n    commonjs: true,\n    jest: true,\n    \"jest/globals\": true,\n  },\n  parser: \"babel-eslint\",\n  plugins: [\"react\", \"no-only-tests\", \"postcss-modules\"],\n  extends: [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:react/jsx-runtime\",\n    \"plugin:react-hooks/recommended\",\n    \"plugin:import/errors\",\n    \"plugin:import/warnings\",\n    \"plugin:import/typescript\",\n    \"plugin:depend/recommended\",\n    \"plugin:storybook/recommended\",\n  ],\n  settings: {\n    \"import/internal-regex\": \"^metabase/|^metabase-lib/\",\n    \"import/resolver\": {\n      webpack: {\n        typescript: true,\n      },\n    },\n    \"import/ignore\": [\"\\\\.css$\"],\n    react: {\n      version: \"detect\",\n    },\n    \"postcss-modules\": {\n      baseDir: \"./frontend/src\",\n    },\n  },\n  parserOptions: {\n    ecmaFeatures: {\n      legacyDecorators: true,\n    },\n  },\n  overrides: [\n    {\n      files: [\"*.js\", \"*.jsx\", \"*.ts\", \"*.tsx\"],\n      rules: {\n        \"no-unconditional-metabase-links-render\": \"error\",\n        \"no-literal-metabase-strings\": \"error\",\n        \"depend/ban-dependencies\": [\n          \"error\",\n          {\n            allowed: [\n              \"underscore\",\n              \"moment\",\n              \"lodash.orderby\",\n              \"lodash.debounce\",\n            ],\n          },\n        ],\n      },\n    },\n    {\n      files: [\n        \"*.unit.spec.*\",\n        \"frontend/src/metabase/admin/**/*\",\n        \"frontend/src/metabase/setup/**/*\",\n        \"frontend/lint/**/*\",\n        \"*.stories.*\",\n        \"e2e/**/*\",\n        \"**/tests/*\",\n        \"release/**/*\",\n      ],\n      rules: {\n        \"no-unconditional-metabase-links-render\": \"off\",\n        \"no-literal-metabase-strings\": \"off\",\n      },\n    },\n    {\n      extends: [\"plugin:@typescript-eslint/recommended\"],\n      files: [\"*.ts\", \"*.tsx\"],\n      parser: \"@typescript-eslint/parser\",\n      plugins: [\"@typescript-eslint\"],\n      rules: {\n        \"prefer-rest-params\": \"off\",\n        \"@typescript-eslint/explicit-module-boundary-types\": \"off\",\n        \"@typescript-eslint/no-inferrable-types\": \"off\",\n        \"@typescript-eslint/no-explicit-any\": \"off\",\n        \"@typescript-eslint/no-this-alias\": \"off\",\n        \"@typescript-eslint/consistent-type-imports\": [\n          \"error\",\n          {\n            fixStyle: \"inline-type-imports\",\n          },\n        ],\n        \"@typescript-eslint/no-import-type-side-effects\": \"error\",\n        \"@typescript-eslint/no-unused-vars\": [\n          \"error\",\n          {\n            argsIgnorePattern: \"^_\",\n            varsIgnorePattern: \"^_\",\n            ignoreRestSiblings: true,\n            destructuredArrayIgnorePattern: \"^_\",\n          },\n        ],\n        // This was introduced in 6.0.0\n        \"@typescript-eslint/no-unsafe-declaration-merging\": \"off\",\n      },\n    },\n    {\n      extends: [\n        \"plugin:jest/recommended\",\n        \"plugin:jest-dom/recommended\",\n        \"plugin:testing-library/react\",\n        \"plugin:jest-formatting/recommended\",\n      ],\n      plugins: [\"jest\", \"jest-dom\", \"testing-library\", \"jest-formatting\"],\n      files: [\n        \"*.unit.spec.ts\",\n        \"*.unit.spec.tsx\",\n        \"*.unit.spec.js\",\n        \"*.unit.spec.jsx\",\n      ],\n      rules: {\n        \"jest/valid-title\": [\"error\", { ignoreTypeOfDescribeName: true }],\n      },\n    },\n    {\n      // Enable jest formatting for cypress tests too, the plugin logic just works\n      extends: [\"plugin:jest-formatting/recommended\"],\n      files: [\"*.cy.spec.ts\", \"*.cy.spec.js\"],\n    },\n    {\n      files: [\"frontend/src/**/*\"],\n      rules: {\n        \"no-restricted-syntax\": [\n          \"error\",\n          {\n            selector: \"Literal[value=/mb-base-color-/]\",\n            message:\n              \"You may not use base colors in the application, use semantic colors instead. (see colors.module.css)\",\n          },\n        ],\n      },\n    },\n    {\n      files: [\"frontend/src/metabase/**/*\"],\n      rules: {\n        \"no-restricted-syntax\": [\n          \"error\",\n          {\n            selector: \"Literal[value=/mb-base-color-/]\",\n            message:\n              \"You may not use base colors in the application, use semantic colors instead. (see colors.module.css)\",\n          },\n          {\n            selector:\n              \"CallExpression[callee.property.name='legacyQuery'] > ObjectExpression > Property[key.name='useStructuredQuery'][value.value=true]\",\n            message: \"StructuredQuery usage is forbidden. Use MLv2\",\n          },\n        ],\n      },\n    },\n  ],\n};\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.01,
          "content": "*.class\n*.*.rej\n*.iml\n*.jar\n*.log\n*.po~\n*.sqlite\n*.trace.db\n*.xcworkspacedata\n.DS_Store\n.\\#*\n.cpcache/\n.eastwood\n.idea/\n.nrepl-port\n.portal\n.vscode\n/*.h2.db\n/*.lock.db\n/*.mv.db\n/*.trace.db\n/.babel_cache\n/.env\n/.lein-env\n/.lein-failures\n/.lein-plugins\n/.lein-repl-history\n/.sqlite.db\n/backend-checksums.txt\n/backend-docs\n/build.xml\n/checkouts\n/classes\n/coverage\n/crate-*\n/cypress\n/deploy/artifacts/*\n/frontend/test/snapshots/*\n/e2e/snapshots/*\n/lein-plugins/*/target\n/local\n/locales/metabase-*.pot\n/modules/drivers/*/resources/namespaces.edn\n/modules/drivers/*/target\n/node_modules/\n/plugins\n/process.yml\n/reset-password-artifacts\n/resources/frontend_client/app/dist/\n/resources/frontend_client/app/locales\n/resources/frontend_client/embed.html\n/resources/frontend_client/index.html\n/resources/frontend_client/public.html\n/resources/embedding-sdk\n/resources/i18n/*.edn\n/resources/instance_analytics.zip\n/resources/license-backend-third-party.txt\n/resources/license-frontend-third-party.txt\n/resources/namespaces.edn\n/resources/sample-dataset.db.trace.db\n/resources/version.properties\n/screenshots\n/sqlite.db\n/stats.json\n/storybook-static\n/target\n/test-report-*\n\\#*\\#\nbin/node_modules/\nbin/release/aws-eb/metabase-aws-eb.zip\ncoverage-summary.json\njunit.xml\npom.xml\npom.xml.asc\nprofiles.clj\ntarget/checksum.txt\nxcshareddata\nxcuserdata\ndev/src/dev/nocommit/\ndev/serialization_deltas/\n*~\n**/cypress_sample_database.json\n**/cypress_sample_instance_data.json\n/frontend/src/cljs\n/frontend/src/cljs_release\n.shadow-cljs\n.clerk\n\n# lsp: ignore all but the config file\n.lsp/*\n!.lsp/config.edn\nmodules/drivers/*/.lsp/*\n!modules/drivers/*/.lsp/config.edn\n**/.clj-kondo/.cache\n\n# clj-kondo: ignore all except our defined config\n.clj-kondo/*\n!.clj-kondo/README.md\n!.clj-kondo/config.edn\n!.clj-kondo/src/\n!.clj-kondo/test/\n!.clj-kondo/macros/\n\n# Editor- or environment-specific local files\n*.code-workspace\n.java-version\n.calva/\n\n# malli + clj-kondo: ignore malli-types\n.clj-kondo/metosin/malli-types-clj\n\n.github/static-viz-sources.yaml\n\n# airgap\n/resources/airgap/\n\n# swc\n.swc/\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".loki",
          "type": "tree",
          "content": null
        },
        {
          "name": ".lsp",
          "type": "tree",
          "content": null
        },
        {
          "name": ".lychee",
          "type": "tree",
          "content": null
        },
        {
          "name": ".lycheeignore",
          "type": "blob",
          "size": 0.04,
          "content": "http://localhost*\nhttps://admin.google.com\n"
        },
        {
          "name": ".mlc_config.json",
          "type": "blob",
          "size": 0.4,
          "content": "{\n  \"ignorePatterns\": [\n    {\n      \"pattern\": \"^https?://admin.google.com\"\n    },\n    {\n      \"pattern\": \"^https?://downloads.metabase.com\"\n    },\n    {\n      \"pattern\": \"^https?://docs.cypress.io/\"\n    },\n    {\n      \"pattern\": \"^https?://twitter.com/\"\n    }\n  ],\n  \"timeout\": \"180s\",\n  \"retryOn429\": true,\n  \"retryCount\": 5,\n  \"fallbackRetryDelay\": \"30s\",\n  \"aliveStatusCodes\": [\n    200,\n    206\n  ]\n}\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.01,
          "content": "v18.20.0\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.35,
          "content": "repos:\n  -   repo: https://github.com/clj-kondo/clj-kondo\n      rev: v2022.12.10\n      hooks:\n        - id: clj-kondo\n#  - repo: https://github.com/allie-jo/ns-sort.git\n#    rev: v1.1.3\n#    hooks:\n#     - id: ns-sort-docker\n#  - repo: https://github.com/allie-jo/cljfmt-docker\n#    rev: v0.9.1\n#    hooks:\n#      - id: cljfmt-docker\n#        args: [--indents 2]\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.1,
          "content": "frontend/src/cljs\ndocs/configuring-metabase/environment-variables.md\ndocs/api/*\ndocs/api-documentation.md\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.05,
          "content": "{\n  \"trailingComma\": \"all\",\n  \"arrowParens\": \"avoid\"\n}\n"
        },
        {
          "name": ".storybook-sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": ".storybook",
          "type": "tree",
          "content": null
        },
        {
          "name": ".stylelintrc.json",
          "type": "blob",
          "size": 0.92,
          "content": "{\n  \"extends\": [\"stylelint-config-standard\", \"stylelint-config-css-modules\"],\n  \"rules\": {\n    \"alpha-value-notation\": null,\n    \"color-function-notation\": null,\n    \"custom-property-pattern\": null,\n    \"hue-degree-notation\": null,\n    \"import-notation\": \"string\",\n    \"media-feature-range-notation\": \"prefix\",\n    \"no-descending-specificity\": null,\n    \"property-no-vendor-prefix\": null,\n    \"selector-id-pattern\": null,\n    \"selector-class-pattern\": null,\n    \"selector-no-vendor-prefix\": null,\n    \"value-keyword-case\": null,\n    \"declaration-block-no-redundant-longhand-properties\": null,\n    \"shorthand-property-no-redundant-values\": null,\n    \"declaration-block-no-duplicate-properties\": [\n      true,\n      { \"ignoreProperties\": [\"composes\"] }\n    ],\n    \"comment-empty-line-before\": null,\n    \"selector-pseudo-element-colon-notation\": null,\n    \"no-empty-source\": null,\n    \"font-family-no-missing-generic-family-keyword\": null\n  }\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yarnrc",
          "type": "blob",
          "size": 0.02,
          "content": "network-timeout 600000\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.24,
          "content": "###################\n# STAGE 1: builder\n###################\n\nFROM node:18-bullseye as builder\n\nARG MB_EDITION=oss\nARG VERSION\n\nWORKDIR /home/node\n\nRUN apt-get update && apt-get upgrade -y && apt-get install openjdk-11-jdk curl git -y \\\n    && curl -O https://download.clojure.org/install/linux-install-1.11.1.1262.sh \\\n    && chmod +x linux-install-1.11.1.1262.sh \\\n    && ./linux-install-1.11.1.1262.sh\n\nCOPY . .\n\n# version is pulled from git, but git doesn't trust the directory due to different owners\nRUN git config --global --add safe.directory /home/node\n\n# install frontend dependencies\nRUN yarn --frozen-lockfile\n\nRUN INTERACTIVE=false CI=true MB_EDITION=$MB_EDITION bin/build.sh :version ${VERSION}\n\n# ###################\n# # STAGE 2: runner\n# ###################\n\n## Remember that this runner image needs to be the same as bin/docker/Dockerfile with the exception that this one grabs the\n## jar from the previous stage rather than the local build\n## we're not yet there to provide an ARM runner till https://github.com/adoptium/adoptium/issues/96 is ready\n\nFROM eclipse-temurin:21-jre-alpine as runner\n\nENV FC_LANG en-US LC_CTYPE en_US.UTF-8\n\n# dependencies\nRUN apk add -U bash fontconfig curl font-noto font-noto-arabic font-noto-hebrew font-noto-cjk java-cacerts && \\\n    apk upgrade && \\\n    rm -rf /var/cache/apk/* && \\\n    mkdir -p /app/certs && \\\n    curl https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem -o /app/certs/rds-combined-ca-bundle.pem  && \\\n    /opt/java/openjdk/bin/keytool -noprompt -import -trustcacerts -alias aws-rds -file /app/certs/rds-combined-ca-bundle.pem -keystore /etc/ssl/certs/java/cacerts -keypass changeit -storepass changeit && \\\n    curl https://cacerts.digicert.com/DigiCertGlobalRootG2.crt.pem -o /app/certs/DigiCertGlobalRootG2.crt.pem  && \\\n    /opt/java/openjdk/bin/keytool -noprompt -import -trustcacerts -alias azure-cert -file /app/certs/DigiCertGlobalRootG2.crt.pem -keystore /etc/ssl/certs/java/cacerts -keypass changeit -storepass changeit && \\\n    mkdir -p /plugins && chmod a+rwx /plugins\n\n# add Metabase script and uberjar\nCOPY --from=builder /home/node/target/uberjar/metabase.jar /app/\nCOPY bin/docker/run_metabase.sh /app/\n\n# expose our default runtime port\nEXPOSE 3000\n\n# run it\nENTRYPOINT [\"/app/run_metabase.sh\"]\n"
        },
        {
          "name": "LICENSE-AGPL.txt",
          "type": "blob",
          "size": 36.48,
          "content": "    GNU AFFERO GENERAL PUBLIC LICENSE\n    Version 3, 19 November 2007\n\n    Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n    Everyone is permitted to copy and distribute verbatim copies\n    of this license document, but changing it is not allowed.\n\n    Preamble\n\n    The GNU Affero General Public License is a free, copyleft license for\n    software and other kinds of works, specifically designed to ensure\n    cooperation with the community in the case of network server software.\n\n    The licenses for most software and other practical works are designed\n    to take away your freedom to share and change the works.  By contrast,\n    our General Public Licenses are intended to guarantee your freedom to\n    share and change all versions of a program--to make sure it remains free\n    software for all its users.\n\n    When we speak of free software, we are referring to freedom, not\n    price.  Our General Public Licenses are designed to make sure that you\n    have the freedom to distribute copies of free software (and charge for\n    them if you wish), that you receive source code or can get it if you\n    want it, that you can change the software or use pieces of it in new\n    free programs, and that you know you can do these things.\n\n    Developers that use our General Public Licenses protect your rights\n    with two steps: (1) assert copyright on the software, and (2) offer\n    you this License which gives you legal permission to copy, distribute\n    and/or modify the software.\n\n    A secondary benefit of defending all users' freedom is that\n    improvements made in alternate versions of the program, if they\n    receive widespread use, become available for other developers to\n    incorporate.  Many developers of free software are heartened and\n    encouraged by the resulting cooperation.  However, in the case of\n    software used on network servers, this result may fail to come about.\n    The GNU General Public License permits making a modified version and\n    letting the public access it on a server without ever releasing its\n    source code to the public.\n\n    The GNU Affero General Public License is designed specifically to\n    ensure that, in such cases, the modified source code becomes available\n    to the community.  It requires the operator of a network server to\n    provide the source code of the modified version running there to the\n    users of that server.  Therefore, public use of a modified version, on\n    a publicly accessible server, gives the public access to the source\n    code of the modified version.\n\n    An older license, called the Affero General Public License and\n    published by Affero, was designed to accomplish similar goals.  This is\n    a different license, not a version of the Affero GPL, but Affero has\n    released a new version of the Affero GPL which permits relicensing under\n    this license.\n\n    The precise terms and conditions for copying, distribution and\n    modification follow.\n\n    TERMS AND CONDITIONS\n\n    0. Definitions.\n\n    \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n    \"Copyright\" also means copyright-like laws that apply to other kinds of\n    works, such as semiconductor masks.\n\n    \"The Program\" refers to any copyrightable work licensed under this\n    License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n    \"recipients\" may be individuals or organizations.\n\n    To \"modify\" a work means to copy from or adapt all or part of the work\n    in a fashion requiring copyright permission, other than the making of an\n    exact copy.  The resulting work is called a \"modified version\" of the\n    earlier work or a work \"based on\" the earlier work.\n\n    A \"covered work\" means either the unmodified Program or a work based\n    on the Program.\n\n    To \"propagate\" a work means to do anything with it that, without\n    permission, would make you directly or secondarily liable for\n    infringement under applicable copyright law, except executing it on a\n    computer or modifying a private copy.  Propagation includes copying,\n    distribution (with or without modification), making available to the\n    public, and in some countries other activities as well.\n\n    To \"convey\" a work means any kind of propagation that enables other\n    parties to make or receive copies.  Mere interaction with a user through\n    a computer network, with no transfer of a copy, is not conveying.\n\n    An interactive user interface displays \"Appropriate Legal Notices\"\n    to the extent that it includes a convenient and prominently visible\n    feature that (1) displays an appropriate copyright notice, and (2)\n    tells the user that there is no warranty for the work (except to the\n    extent that warranties are provided), that licensees may convey the\n    work under this License, and how to view a copy of this License.  If\n    the interface presents a list of user commands or options, such as a\n    menu, a prominent item in the list meets this criterion.\n\n    1. Source Code.\n\n    The \"source code\" for a work means the preferred form of the work\n    for making modifications to it.  \"Object code\" means any non-source\n    form of a work.\n\n    A \"Standard Interface\" means an interface that either is an official\n    standard defined by a recognized standards body, or, in the case of\n    interfaces specified for a particular programming language, one that\n    is widely used among developers working in that language.\n\n    The \"System Libraries\" of an executable work include anything, other\n    than the work as a whole, that (a) is included in the normal form of\n    packaging a Major Component, but which is not part of that Major\n    Component, and (b) serves only to enable use of the work with that\n    Major Component, or to implement a Standard Interface for which an\n    implementation is available to the public in source code form.  A\n    \"Major Component\", in this context, means a major essential component\n    (kernel, window system, and so on) of the specific operating system\n    (if any) on which the executable work runs, or a compiler used to\n    produce the work, or an object code interpreter used to run it.\n\n    The \"Corresponding Source\" for a work in object code form means all\n    the source code needed to generate, install, and (for an executable\n    work) run the object code and to modify the work, including scripts to\n    control those activities.  However, it does not include the work's\n    System Libraries, or general-purpose tools or generally available free\n    programs which are used unmodified in performing those activities but\n    which are not part of the work.  For example, Corresponding Source\n    includes interface definition files associated with source files for\n    the work, and the source code for shared libraries and dynamically\n    linked subprograms that the work is specifically designed to require,\n    such as by intimate data communication or control flow between those\n    subprograms and other parts of the work.\n\n    The Corresponding Source need not include anything that users\n    can regenerate automatically from other parts of the Corresponding\n    Source.\n\n    The Corresponding Source for a work in source code form is that\n    same work.\n\n    2. Basic Permissions.\n\n    All rights granted under this License are granted for the term of\n    copyright on the Program, and are irrevocable provided the stated\n    conditions are met.  This License explicitly affirms your unlimited\n    permission to run the unmodified Program.  The output from running a\n    covered work is covered by this License only if the output, given its\n    content, constitutes a covered work.  This License acknowledges your\n    rights of fair use or other equivalent, as provided by copyright law.\n\n    You may make, run and propagate covered works that you do not\n    convey, without conditions so long as your license otherwise remains\n    in force.  You may convey covered works to others for the sole purpose\n    of having them make modifications exclusively for you, or provide you\n    with facilities for running those works, provided that you comply with\n    the terms of this License in conveying all material for which you do\n    not control copyright.  Those thus making or running the covered works\n    for you must do so exclusively on your behalf, under your direction\n    and control, on terms that prohibit them from making any copies of\n    your copyrighted material outside their relationship with you.\n\n    Conveying under any other circumstances is permitted solely under\n    the conditions stated below.  Sublicensing is not allowed; section 10\n    makes it unnecessary.\n\n    3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n    No covered work shall be deemed part of an effective technological\n    measure under any applicable law fulfilling obligations under article\n    11 of the WIPO copyright treaty adopted on 20 December 1996, or\n    similar laws prohibiting or restricting circumvention of such\n    measures.\n\n    When you convey a covered work, you waive any legal power to forbid\n    circumvention of technological measures to the extent such circumvention\n    is effected by exercising rights under this License with respect to\n    the covered work, and you disclaim any intention to limit operation or\n    modification of the work as a means of enforcing, against the work's\n    users, your or third parties' legal rights to forbid circumvention of\n    technological measures.\n\n    4. Conveying Verbatim Copies.\n\n    You may convey verbatim copies of the Program's source code as you\n    receive it, in any medium, provided that you conspicuously and\n    appropriately publish on each copy an appropriate copyright notice;\n    keep intact all notices stating that this License and any\n    non-permissive terms added in accord with section 7 apply to the code;\n    keep intact all notices of the absence of any warranty; and give all\n    recipients a copy of this License along with the Program.\n\n    You may charge any price or no price for each copy that you convey,\n    and you may offer support or warranty protection for a fee.\n\n    5. Conveying Modified Source Versions.\n\n    You may convey a work based on the Program, or the modifications to\n    produce it from the Program, in the form of source code under the\n    terms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n    A compilation of a covered work with other separate and independent\n    works, which are not by their nature extensions of the covered work,\n    and which are not combined with it such as to form a larger program,\n    in or on a volume of a storage or distribution medium, is called an\n    \"aggregate\" if the compilation and its resulting copyright are not\n    used to limit the access or legal rights of the compilation's users\n    beyond what the individual works permit.  Inclusion of a covered work\n    in an aggregate does not cause this License to apply to the other\n    parts of the aggregate.\n\n    6. Conveying Non-Source Forms.\n\n    You may convey a covered work in object code form under the terms\n    of sections 4 and 5, provided that you also convey the\n    machine-readable Corresponding Source under the terms of this License,\n    in one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n    A separable portion of the object code, whose source code is excluded\n    from the Corresponding Source as a System Library, need not be\n    included in conveying the object code work.\n\n    A \"User Product\" is either (1) a \"consumer product\", which means any\n    tangible personal property which is normally used for personal, family,\n    or household purposes, or (2) anything designed or sold for incorporation\n    into a dwelling.  In determining whether a product is a consumer product,\n    doubtful cases shall be resolved in favor of coverage.  For a particular\n    product received by a particular user, \"normally used\" refers to a\n    typical or common use of that class of product, regardless of the status\n    of the particular user or of the way in which the particular user\n    actually uses, or expects or is expected to use, the product.  A product\n    is a consumer product regardless of whether the product has substantial\n    commercial, industrial or non-consumer uses, unless such uses represent\n    the only significant mode of use of the product.\n\n    \"Installation Information\" for a User Product means any methods,\n    procedures, authorization keys, or other information required to install\n    and execute modified versions of a covered work in that User Product from\n    a modified version of its Corresponding Source.  The information must\n    suffice to ensure that the continued functioning of the modified object\n    code is in no case prevented or interfered with solely because\n    modification has been made.\n\n    If you convey an object code work under this section in, or with, or\n    specifically for use in, a User Product, and the conveying occurs as\n    part of a transaction in which the right of possession and use of the\n    User Product is transferred to the recipient in perpetuity or for a\n    fixed term (regardless of how the transaction is characterized), the\n    Corresponding Source conveyed under this section must be accompanied\n    by the Installation Information.  But this requirement does not apply\n    if neither you nor any third party retains the ability to install\n    modified object code on the User Product (for example, the work has\n    been installed in ROM).\n\n    The requirement to provide Installation Information does not include a\n    requirement to continue to provide support service, warranty, or updates\n    for a work that has been modified or installed by the recipient, or for\n    the User Product in which it has been modified or installed.  Access to a\n    network may be denied when the modification itself materially and\n    adversely affects the operation of the network or violates the rules and\n    protocols for communication across the network.\n\n    Corresponding Source conveyed, and Installation Information provided,\n    in accord with this section must be in a format that is publicly\n    documented (and with an implementation available to the public in\n    source code form), and must require no special password or key for\n    unpacking, reading or copying.\n\n    7. Additional Terms.\n\n    \"Additional permissions\" are terms that supplement the terms of this\n    License by making exceptions from one or more of its conditions.\n    Additional permissions that are applicable to the entire Program shall\n    be treated as though they were included in this License, to the extent\n    that they are valid under applicable law.  If additional permissions\n    apply only to part of the Program, that part may be used separately\n    under those permissions, but the entire Program remains governed by\n    this License without regard to the additional permissions.\n\n    When you convey a copy of a covered work, you may at your option\n    remove any additional permissions from that copy, or from any part of\n    it.  (Additional permissions may be written to require their own\n    removal in certain cases when you modify the work.)  You may place\n    additional permissions on material, added by you to a covered work,\n    for which you have or can give appropriate copyright permission.\n\n    Notwithstanding any other provision of this License, for material you\n    add to a covered work, you may (if authorized by the copyright holders of\n    that material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n    All other non-permissive additional terms are considered \"further\n    restrictions\" within the meaning of section 10.  If the Program as you\n    received it, or any part of it, contains a notice stating that it is\n    governed by this License along with a term that is a further\n    restriction, you may remove that term.  If a license document contains\n    a further restriction but permits relicensing or conveying under this\n    License, you may add to a covered work material governed by the terms\n    of that license document, provided that the further restriction does\n    not survive such relicensing or conveying.\n\n    If you add terms to a covered work in accord with this section, you\n    must place, in the relevant source files, a statement of the\n    additional terms that apply to those files, or a notice indicating\n    where to find the applicable terms.\n\n    Additional terms, permissive or non-permissive, may be stated in the\n    form of a separately written license, or stated as exceptions;\n    the above requirements apply either way.\n\n    8. Termination.\n\n    You may not propagate or modify a covered work except as expressly\n    provided under this License.  Any attempt otherwise to propagate or\n    modify it is void, and will automatically terminate your rights under\n    this License (including any patent licenses granted under the third\n    paragraph of section 11).\n\n    However, if you cease all violation of this License, then your\n    license from a particular copyright holder is reinstated (a)\n    provisionally, unless and until the copyright holder explicitly and\n    finally terminates your license, and (b) permanently, if the copyright\n    holder fails to notify you of the violation by some reasonable means\n    prior to 60 days after the cessation.\n\n    Moreover, your license from a particular copyright holder is\n    reinstated permanently if the copyright holder notifies you of the\n    violation by some reasonable means, this is the first time you have\n    received notice of violation of this License (for any work) from that\n    copyright holder, and you cure the violation prior to 30 days after\n    your receipt of the notice.\n\n    Termination of your rights under this section does not terminate the\n    licenses of parties who have received copies or rights from you under\n    this License.  If your rights have been terminated and not permanently\n    reinstated, you do not qualify to receive new licenses for the same\n    material under section 10.\n\n    9. Acceptance Not Required for Having Copies.\n\n    You are not required to accept this License in order to receive or\n    run a copy of the Program.  Ancillary propagation of a covered work\n    occurring solely as a consequence of using peer-to-peer transmission\n    to receive a copy likewise does not require acceptance.  However,\n    nothing other than this License grants you permission to propagate or\n    modify any covered work.  These actions infringe copyright if you do\n    not accept this License.  Therefore, by modifying or propagating a\n    covered work, you indicate your acceptance of this License to do so.\n\n    10. Automatic Licensing of Downstream Recipients.\n\n    Each time you convey a covered work, the recipient automatically\n    receives a license from the original licensors, to run, modify and\n    propagate that work, subject to this License.  You are not responsible\n    for enforcing compliance by third parties with this License.\n\n    An \"entity transaction\" is a transaction transferring control of an\n    organization, or substantially all assets of one, or subdividing an\n    organization, or merging organizations.  If propagation of a covered\n    work results from an entity transaction, each party to that\n    transaction who receives a copy of the work also receives whatever\n    licenses to the work the party's predecessor in interest had or could\n    give under the previous paragraph, plus a right to possession of the\n    Corresponding Source of the work from the predecessor in interest, if\n    the predecessor has it or can get it with reasonable efforts.\n\n    You may not impose any further restrictions on the exercise of the\n    rights granted or affirmed under this License.  For example, you may\n    not impose a license fee, royalty, or other charge for exercise of\n    rights granted under this License, and you may not initiate litigation\n    (including a cross-claim or counterclaim in a lawsuit) alleging that\n    any patent claim is infringed by making, using, selling, offering for\n    sale, or importing the Program or any portion of it.\n\n    11. Patents.\n\n    A \"contributor\" is a copyright holder who authorizes use under this\n    License of the Program or a work on which the Program is based.  The\n    work thus licensed is called the contributor's \"contributor version\".\n\n    A contributor's \"essential patent claims\" are all patent claims\n    owned or controlled by the contributor, whether already acquired or\n    hereafter acquired, that would be infringed by some manner, permitted\n    by this License, of making, using, or selling its contributor version,\n    but do not include claims that would be infringed only as a\n    consequence of further modification of the contributor version.  For\n    purposes of this definition, \"control\" includes the right to grant\n    patent sublicenses in a manner consistent with the requirements of\n    this License.\n\n    Each contributor grants you a non-exclusive, worldwide, royalty-free\n    patent license under the contributor's essential patent claims, to\n    make, use, sell, offer for sale, import and otherwise run, modify and\n    propagate the contents of its contributor version.\n\n    In the following three paragraphs, a \"patent license\" is any express\n    agreement or commitment, however denominated, not to enforce a patent\n    (such as an express permission to practice a patent or covenant not to\n    sue for patent infringement).  To \"grant\" such a patent license to a\n    party means to make such an agreement or commitment not to enforce a\n    patent against the party.\n\n    If you convey a covered work, knowingly relying on a patent license,\n    and the Corresponding Source of the work is not available for anyone\n    to copy, free of charge and under the terms of this License, through a\n    publicly available network server or other readily accessible means,\n    then you must either (1) cause the Corresponding Source to be so\n    available, or (2) arrange to deprive yourself of the benefit of the\n    patent license for this particular work, or (3) arrange, in a manner\n    consistent with the requirements of this License, to extend the patent\n    license to downstream recipients.  \"Knowingly relying\" means you have\n    actual knowledge that, but for the patent license, your conveying the\n    covered work in a country, or your recipient's use of the covered work\n    in a country, would infringe one or more identifiable patents in that\n    country that you have reason to believe are valid.\n\n    If, pursuant to or in connection with a single transaction or\n    arrangement, you convey, or propagate by procuring conveyance of, a\n    covered work, and grant a patent license to some of the parties\n    receiving the covered work authorizing them to use, propagate, modify\n    or convey a specific copy of the covered work, then the patent license\n    you grant is automatically extended to all recipients of the covered\n    work and works based on it.\n\n    A patent license is \"discriminatory\" if it does not include within\n    the scope of its coverage, prohibits the exercise of, or is\n    conditioned on the non-exercise of one or more of the rights that are\n    specifically granted under this License.  You may not convey a covered\n    work if you are a party to an arrangement with a third party that is\n    in the business of distributing software, under which you make payment\n    to the third party based on the extent of your activity of conveying\n    the work, and under which the third party grants, to any of the\n    parties who would receive the covered work from you, a discriminatory\n    patent license (a) in connection with copies of the covered work\n    conveyed by you (or copies made from those copies), or (b) primarily\n    for and in connection with specific products or compilations that\n    contain the covered work, unless you entered into that arrangement,\n    or that patent license was granted, prior to 28 March 2007.\n\n    Nothing in this License shall be construed as excluding or limiting\n    any implied license or other defenses to infringement that may\n    otherwise be available to you under applicable patent law.\n\n    12. No Surrender of Others' Freedom.\n\n    If conditions are imposed on you (whether by court order, agreement or\n    otherwise) that contradict the conditions of this License, they do not\n    excuse you from the conditions of this License.  If you cannot convey a\n    covered work so as to satisfy simultaneously your obligations under this\n    License and any other pertinent obligations, then as a consequence you may\n    not convey it at all.  For example, if you agree to terms that obligate you\n    to collect a royalty for further conveying from those to whom you convey\n    the Program, the only way you could satisfy both those terms and this\n    License would be to refrain entirely from conveying the Program.\n\n    13. Remote Network Interaction; Use with the GNU General Public License.\n\n    Notwithstanding any other provision of this License, if you modify the\n    Program, your modified version must prominently offer all users\n    interacting with it remotely through a computer network (if your version\n    supports such interaction) an opportunity to receive the Corresponding\n    Source of your version by providing access to the Corresponding Source\n    from a network server at no charge, through some standard or customary\n    means of facilitating copying of software.  This Corresponding Source\n    shall include the Corresponding Source for any work covered by version 3\n    of the GNU General Public License that is incorporated pursuant to the\n    following paragraph.\n\n    Notwithstanding any other provision of this License, you have\n    permission to link or combine any covered work with a work licensed\n    under version 3 of the GNU General Public License into a single\n    combined work, and to convey the resulting work.  The terms of this\n    License will continue to apply to the part which is the covered work,\n    but the work with which it is combined will remain governed by version\n    3 of the GNU General Public License.\n\n    14. Revised Versions of this License.\n\n    The Free Software Foundation may publish revised and/or new versions of\n    the GNU Affero General Public License from time to time.  Such new versions\n    will be similar in spirit to the present version, but may differ in detail to\n    address new problems or concerns.\n\n    Each version is given a distinguishing version number.  If the\n    Program specifies that a certain numbered version of the GNU Affero General\n    Public License \"or any later version\" applies to it, you have the\n    option of following the terms and conditions either of that numbered\n    version or of any later version published by the Free Software\n    Foundation.  If the Program does not specify a version number of the\n    GNU Affero General Public License, you may choose any version ever published\n    by the Free Software Foundation.\n\n    If the Program specifies that a proxy can decide which future\n    versions of the GNU Affero General Public License can be used, that proxy's\n    public statement of acceptance of a version permanently authorizes you\n    to choose that version for the Program.\n\n    Later license versions may give you additional or different\n    permissions.  However, no additional obligations are imposed on any\n    author or copyright holder as a result of your choosing to follow a\n    later version.\n\n    15. Disclaimer of Warranty.\n\n    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n    APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n    HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n    OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n    IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n    ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n    16. Limitation of Liability.\n\n    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n    THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n    GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n    USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n    DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n    PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n    EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGES.\n\n    17. Interpretation of Sections 15 and 16.\n\n    If the disclaimer of warranty and limitation of liability provided\n    above cannot be given local legal effect according to their terms,\n    reviewing courts shall apply local law that most closely approximates\n    an absolute waiver of all civil liability in connection with the\n    Program, unless a warranty or assumption of liability accompanies a\n    copy of the Program in return for a fee.\n\n    END OF TERMS AND CONDITIONS\n\n    How to Apply These Terms to Your New Programs\n\n    If you develop a new program, and you want it to be of the greatest\n    possible use to the public, the best way to achieve this is to make it\n    free software which everyone can redistribute and change under these terms.\n\n    To do so, attach the following notices to the program.  It is safest\n    to attach them to the start of each source file to most effectively\n    state the exclusion of warranty; and each file should have at least\n    the \"copyright\" line and a pointer to where the full notice is found.\n\n        <one line to give the program's name and a brief idea of what it does.>\n        Copyright (C) <year>  <name of author>\n\n        This program is free software: you can redistribute it and/or modify\n        it under the terms of the GNU Affero General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version.\n\n        This program is distributed in the hope that it will be useful,\n        but WITHOUT ANY WARRANTY; without even the implied warranty of\n        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n        GNU Affero General Public License for more details.\n\n        You should have received a copy of the GNU Affero General Public License\n        along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n    Also add information on how to contact you by electronic and paper mail.\n\n    If your software can interact with users remotely through a computer\n    network, you should also make sure that it provides a way for users to\n    get its source.  For example, if your program is a web application, its\n    interface could display a \"Source\" link that leads users to an archive\n    of the code.  There are many ways you could offer source, and different\n    solutions will be better for different programs; see section 13 for the\n    specific requirements.\n\n    You should also get your employer (if you work as a programmer) or school,\n    if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n    For more information on this, and how to apply and follow the GNU AGPL, see\n    <http://www.gnu.org/licenses/>.\n\n\nAdditional permission under GNU GPL version 3 section 7\n\nIf you modify this Program, or any covered work, by linking or combining it with any of the below libraries (or a modified version of that library), containing parts covered by the terms of any of the below libraries, the licensors of this Program grant you additional permission to convey the resulting work.\n\n* cider/cider-nrepl\n* clojure-complete\n* clojurewerkz/quartzite\n* clojurewerkz/support\n* clout\n* colorize\n* com.cemerick/friend\n* compojure\n* environ\n* hiccup\n* junit\n* korma\n* medley\n* org.clojure/clojure\n* org.clojure/clojurescript\n* org.clojure/core.async\n* org.clojure/core.cache\n* org.clojure/core.incubator\n* org.clojure/core.logic\n* org.clojure/core.match\n* org.clojure/core.memoize\n* org.clojure/data.csv\n* org.clojure/data.json\n* org.clojure/data.priority-map\n* org.clojure/java.classpath\n* org.clojure/java.jdbc\n* org.clojure/math.numeric-tower\n* org.clojure/tools.analyzer\n* org.clojure/tools.analyzer.jvm\n* org.clojure/tools.logging\n* org.clojure/tools.macro\n* org.clojure/tools.namespace\n* org.clojure/tools.nrepl\n* org.clojure/tools.reader\n* org.tcrawley/dynapath\n* quoin\n* refactor-nrepl\n* robert/hooke\n* scout\n* slingshot\n* stencil\n* swiss-arrows\n* tigris\n* instaparse\n"
        },
        {
          "name": "LICENSE-EMBEDDING.txt",
          "type": "blob",
          "size": 8.67,
          "content": "METABASE APP-EMBED.JS\nSOFTWARE LICENSE AGREEMENT\n\nPLEASE READ THE FOLLOWING TERMS AND CONDITIONS CAREFULLY BEFORE DOWNLOADING, INSTALLING OR USING THE APP-EMBED.JS SOFTWARE OR ANY ACCOMPANYING DOCUMENTATION (COLLECTIVELY, THE “SOFTWARE”).\n\nTHE TERMS AND CONDITIONS OF THIS SOFTWARE LICENSE AGREEMENT (“AGREEMENT”) GOVERN USE OF THE SOFTWARE UNLESS YOU AND METABASE HAVE EXECUTED A SEPARATE AGREEMENT GOVERNING USE OF THE SOFTWARE.\n\nMetabase is willing to license the Software to you only upon the condition that you accept all the terms contained in this Agreement.  By downloading, installing or using the Software, you have indicated that you understand this Agreement and accept all of its terms.  If you are accepting the terms of this Agreement on behalf of a company or other legal entity, you represent and warrant that you have the authority to bind that company or other legal entity to the terms of this Agreement, and, in such event, “you” and “your” will refer to that company or other legal entity.  If you do not accept all the terms of this Agreement, then Metabase is unwilling to license the Software to you, you are not permitted to use the Software, and you must destroy all copies of the Software.\n\n1.\t**Grant of License**.  Conditioned upon your compliance with the terms and conditions of this Agreement, Metabase grants you a non-exclusive and non-transferable license to Execute (as defined herein) the executable form of the Software, free and clear of any Affero GPL License requirements applicable to the Metabase application available for download by the Metabase at its website https://metabase.com. Metabase reserves all rights in the Software not expressly granted to you in this Agreement.  For purposes of this Agreement, “Execute” and “Execution” means to load, install, and run the Software in order to benefit from its functionality as designed by Metabase.\n\n2.\t**Restrictions**.  Except as expressly specified in this Agreement or otherwise permitted by law notwithstanding this Agreement, you agree not to do any of the following, : (a) copy (except in the course of loading or installing) or modify the Software, including but not limited to modifying or blocking, overlaying, or otherwise obstructing the contents of the embedded element that is embedded in your application via the Software, adding new features, or otherwise making adaptations that alter the functioning of the Software; or (b) transfer, sublicense, lease, lend, rent or otherwise distribute the Software to any third party. You acknowledge and agree that portions of the Software, including but not limited to the source code and the specific design and structure of individual modules or programs, constitute or contain trade secrets of Metabase and its licensors.\n\n3.\t**Ownership**.  The copy of the Software is licensed, not sold.  You own the media on which the Software is recorded, but Metabase retains ownership of the copy of the Software itself, including all intellectual property rights therein.  The Software is protected by United States copyright law and international treaties.  You will not delete or in any manner alter the copyright, trademark, and other proprietary rights notices or markings appearing on the Software as delivered to you. This includes the removal of the Metabase’s name or logo in the iframe that is embedded in your application.\n\n4.\t**Term**.  The license granted under this Agreement remains in effect  unless terminated in accordance with this Agreement. You may terminate the license at any time by destroying all copies of the Software in your possession or control.  The license granted under this Agreement will automatically terminate, with or without notice from Metabase, if you breach any term of this Agreement.  Upon termination, you must promptly destroy all copies of the Software in your possession or control.\n\n5.\t**No Warranty**.  “THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND.  METABASE DISCLAIMS ALL WARRANTIES AND CONDITIONS, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT, AND ANY WARRANTIES AND CONDITIONS ARISING OUT OF COURSE OF DEALING OR USAGE OF TRADE.  NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED FROM METABASE OR ELSEWHERE WILL CREATE ANY WARRANTY OR CONDITION NOT EXPRESSLY STATED IN THIS AGREEMENT.”\n\n6.\t**Limitation of Liability**.  METABASE’S TOTAL LIABILITY TO YOU FROM ALL CAUSES OF ACTION AND UNDER ALL THEORIES OF LIABILITY WILL BE LIMITED TO THE AMOUNTS PAID OR PAYABLE TO METABASE BY YOU FOR THE SOFTWARE OR, IN THE EVENT THAT METABASE HAS MADE THE SOFTWARE AVAILABLE TO YOU WITHOUT CHARGE, METABASE’S TOTAL LIABILITY WILL BE LIMITED TO $[500].  IN NO EVENT WILL METABASE BE LIABLE TO YOU FOR ANY SPECIAL, INCIDENTAL, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES (INCLUDING LOSS OF DATA, BUSINESS, PROFITS OR ABILITY TO EXECUTE) OR FOR THE COST OF PROCURING SUBSTITUTE PRODUCTS ARISING OUT OF OR IN CONNECTION WITH THIS AGREEMENT OR THE EXECUTION OR PERFORMANCE OF THE SOFTWARE, WHETHER SUCH LIABILITY ARISES FROM ANY CLAIM BASED UPON CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, AND WHETHER OR NOT METABASE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS OR DAMAGE.  THE FOREGOING LIMITATIONS WILL SURVIVE AND APPLY EVEN IF ANY LIMITED REMEDY SPECIFIED IN THIS AGREEMENT IS FOUND TO HAVE FAILED OF ITS ESSENTIAL PURPOSE.\n\n8.\t**U.S. Government End Users**.  The Software and Documentation are “commercial items” as that term is defined in FAR 2.101, consisting of “commercial computer software” and “commercial computer software documentation,” respectively, as such terms are used in FAR 12.212 and DFARS 227.7202.  If the Software and Documentation are being acquired by or on behalf of the U.S. Government, then, as provided in FAR 12.212 and DFARS 227.7202-1 through 227.7202-4, as applicable, the U.S. Government’s rights in the Software and Documentation will be only those specified in this Agreement.\n\n9.\t**Export Law**.  You agree to comply fully with all U.S. export laws and regulations to ensure that neither the Software nor any technical data related thereto nor any direct product thereof are exported or re-exported directly or indirectly in violation of, or used for any purposes prohibited by, such laws and regulations.\n\n10.\t**General**.  This Agreement will be governed by and construed in accordance with the laws of the State of California, without regard to or application of conflict of laws rules or principles.  The United Nations Convention on Contracts for the International Sale of Goods will not apply.  You may not assign or transfer this Agreement or any rights granted hereunder, by operation of law or otherwise, without Metabase’s prior written consent, and any attempt by you to do so, without such consent, will be void.  Except as expressly set forth in this Agreement, the exercise by either party of any of its remedies under this Agreement will be without prejudice to its other remedies under this Agreement or otherwise.  All notices or approvals required or permitted under this Agreement will be in writing and delivered by confirmed facsimile transmission, by overnight delivery service, or by certified mail, and in each instance will be deemed given upon receipt.  All notices or approvals will be sent to the addresses specified by either party to the other in accordance with this section.  The failure by either party to enforce any provision of this Agreement will not constitute a waiver of future enforcement of that or any other provision.  Any waiver, modification or amendment of any provision of this Agreement will be effective upon Metabase posting the modified terms of this Agreement to the Metabase website.  If any provision of this Agreement is held to be unenforceable or invalid, that provision will be enforced to the maximum extent possible, and the other provisions will remain in full force and effect.  This Agreement is the complete and exclusive understanding and agreement between the parties regarding its subject matter, and supersedes all proposals, understandings or communications between the parties, oral or written, regarding its subject matter, unless you and Metabase have executed a separate agreement.  Any terms or conditions contained in your purchase order, if any, or other ordering document that are inconsistent with or in addition to the terms and conditions of this Agreement are hereby rejected by Metabase and will be deemed null.\n\n11.\t**Contact Information**.  If you have any questions regarding this Agreement, you may contact Metabase by email at legal@metabase.com, phone by (415) 767-0490 or by mail at 660 4th Street #557, San Francisco, CA 94107.\n"
        },
        {
          "name": "LICENSE-MCL.txt",
          "type": "blob",
          "size": 0.42,
          "content": "Usage of files in the top-level \"/enterprise\" directory and subdirectories thereof, and of Metabase Enterprise Edition features, is subject to the Metabase Commercial License (https://www.metabase.com/license/commercial), and conditional on having a valid license from Metabase. Access to files in this directory and its subdirectories does not constitute permission to use this code or Metabase Enterprise Edition features.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.83,
          "content": "Source code in this repository is variously licensed under the GNU Affero General Public License (AGPL), or the Metabase Commercial License (https://www.metabase.com/license/commercial).\n\n* Outside of the top-level \"enterprise\" directory, source code in a given file is licensed under the AGPL.\n\n* Within the the top-level \"enterprise\" directory, source code in a given file is licensed under the Metabase Commercial License, unless otherwise noted.\n\nWhen built, binary files are generated for the AGPL source code and the Metabase Commercial License source code. Binaries located at hub.docker.com/metabase/metabase-enterprise and downloads.metabase.com/enterprise are released under the Metabase Commercial License. Binaries located at hub.docker.com/metabase/metabase and all non-enterprise paths at downloads.metabase.com are released under the AGPL.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.16,
          "content": "# Metabase\n\n[Metabase](https://www.metabase.com) is the easy, open-source way for everyone in your company to ask questions and learn from data.\n\n![Metabase Product Screenshot](docs/images/metabase-product-screenshot.svg)\n\n[![Latest Release](https://img.shields.io/github/release/metabase/metabase.svg?label=latest%20release)](https://github.com/metabase/metabase/releases)\n[![codecov](https://codecov.io/gh/metabase/metabase/branch/master/graph/badge.svg)](https://codecov.io/gh/metabase/metabase)\n![Docker Pulls](https://img.shields.io/docker/pulls/metabase/metabase)\n\n## Get started\n\nThe easiest way to get started with Metabase is to sign up for a free trial of [Metabase Cloud](https://store.metabase.com/checkout). You get support, backups, upgrades, an SMTP server, SSL certificate, SoC2 Type 2 security auditing, and more (plus your money goes toward improving Metabase). Check out our quick overview of [cloud vs self-hosting](https://www.metabase.com/docs/latest/cloud/cloud-vs-self-hosting). If you need to, you can always switch to [self-hosting](https://www.metabase.com/docs/latest/installation-and-operation/installing-metabase) Metabase at any time (or vice versa).\n\n## Features\n\n- [Set up in five minutes](https://www.metabase.com/docs/latest/setting-up-metabase.html) (we're not kidding).\n- Let anyone on your team [ask questions](https://www.metabase.com/docs/latest/users-guide/04-asking-questions.html) without knowing SQL.\n- Use the [SQL editor](https://www.metabase.com/docs/latest/questions/native-editor/writing-sql) for more complex queries.\n- Build handsome, interactive [dashboards](https://www.metabase.com/docs/latest/users-guide/07-dashboards.html) with filters, auto-refresh, fullscreen, and custom click behavior.\n- Create [models](https://www.metabase.com/learn/metabase-basics/getting-started/models) that clean up, annotate, and/or combine raw tables.\n- Define canonical [segments and metrics](https://www.metabase.com/docs/latest/administration-guide/07-segments-and-metrics.html) for your team to use.\n- Send data to Slack or email on a schedule with [dashboard subscriptions](https://www.metabase.com/docs/latest/users-guide/dashboard-subscriptions).\n- Set up [alerts](https://www.metabase.com/docs/latest/users-guide/15-alerts.html) to have Metabase notify you when your data changes.\n- [Embed charts and dashboards](https://www.metabase.com/docs/latest/administration-guide/13-embedding.html) in your app, or even [your entire Metabase](https://www.metabase.com/docs/latest/enterprise-guide/full-app-embedding.html).\n\nTake a [tour of Metabase](https://www.metabase.com/learn/getting-started/tour-of-metabase).\n\n## Supported databases\n\n- [Officially supported databases](./docs/databases/connecting.md#connecting-to-supported-databases)\n- [Partner and Community drivers](./docs/developers-guide/partner-and-community-drivers.md)\n\n## Installation\n\nMetabase can be run just about anywhere. Check out our [Installation Guides](https://www.metabase.com/docs/latest/operations-guide/installing-metabase).\n\n## Contributing\n\n## Quick Setup: Dev environment\n\nIn order to spin up a development environment, you need to start the front end and the backend as follows:\n\n### Frontend quick setup\n\nThe following command will install the Javascript dependencies:\n\n```\n$ yarn install\n```\n\nTo build and run without watching changes:\n\n```\n$ yarn build\n```\n\nTo build and run with hot-reload:\n\n```\n$ yarn build-hot\n```\n\n### Backend  quick setup\n\nIn order to run the backend, you'll need to build the drivers first, and then start the backend:\n\n```\n$ ./bin/build-drivers.sh\n$ clojure -M:run\n```\n\nFor a more detailed setup of a dev environment for Metabase, check out our [Developers Guide](./docs/developers-guide/start.md).\n\n## Internationalization\n\nWe want Metabase to be available in as many languages as possible. See which translations are available and help contribute to internationalization using our project over at [POEditor](https://poeditor.com/join/project/ynjQmwSsGh). You can also check out our [policies on translations](https://www.metabase.com/docs/latest/administration-guide/localization.html).\n\n## Extending Metabase\n\nHit our Query API from Javascript to integrate analytics. Metabase enables your application to:\n\n- Build moderation interfaces.\n- Export subsets of your users to third party marketing automation software.\n- Provide a custom customer lookup application for the people in your company.\n\nCheck out our guide, [Working with the Metabase API](https://www.metabase.com/learn/administration/metabase-api).\n\n## Security Disclosure\n\nSee [SECURITY.md](./SECURITY.md) for details.\n\n## License\n\nThis repository contains the source code for both the Open Source edition of Metabase, released under the AGPL, as well as the [commercial editions of Metabase](https://www.metabase.com/pricing), which are released under the Metabase Commercial Software License.\n\nSee [LICENSE.txt](./LICENSE.txt) for details.\n\nUnless otherwise noted, all files © 2025 Metabase, Inc.\n\n## [Metabase Experts](https://www.metabase.com/partners/)\n\nIf you’d like more technical resources to set up your data stack with Metabase, connect with a [Metabase Expert](https://www.metabase.com/partners/?utm_source=readme&utm_medium=metabase-expetrs&utm_campaign=readme).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.63,
          "content": "# Security Policy\n\nSecurity is very important to us at Metabase.\n\n## Supported Versions\n\nWe typically only support the latest release of Metabase for maintenance updates, but depending on the nature of the security issue we may issue hotfixes for arbitrarily earlier versions of Metabase.\n\n## Reporting a Vulnerability\n\nIf you discover any issue regarding security, please disclose the information responsibly by sending an email to security@metabase.com and not by creating a GitHub issue. We'll get back to you ASAP and work with you to confirm and plan a fix for the issue.\n\nPlease note that we do not currently offer a bug bounty program.\n"
        },
        {
          "name": "babel.config.json",
          "type": "blob",
          "size": 0.52,
          "content": "{\n  \"plugins\": [\"@emotion\"],\n  \"presets\": [\n    \"@babel/preset-env\",\n    [\n      \"@babel/preset-react\",\n      { \"runtime\": \"automatic\" }\n    ],\n    \"@babel/preset-typescript\"\n  ],\n  \"env\": {\n    \"development\": {\n      \"presets\": []\n    },\n    \"extract\": {\n      \"plugins\": [\n        [\n          \"ttag\",\n          {\n            \"extract\": {\n              \"output\": \"locales/metabase-frontend.pot\"\n            },\n            \"discover\": [\"t\", \"jt\"],\n            \"numberedExpressions\": true\n          }\n        ]\n      ]\n    }\n  }\n}\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.69,
          "content": "codecov:\n    bot: \"codecov-io\"\n    require_ci_to_pass: false\n\ncoverage:\n  status:\n    project:\n      back-end:\n        # Project must always have at least the target amount coverage (by line)\n        target: 85%\n        # Whole-project test coverage is allowed to drop up to 5%. (For situtations where we delete code with full coverage)\n        threshold: 5%\n        flags:\n          - back-end\n\n      front-end:\n        target: 60%\n        threshold: 5%\n        flags:\n          - front-end\n\n    patch: off\n\nflags:\n  back-end:\n    paths:\n      - enterprise/backend\n      - src/metabase\n    carryforward: true\n\n  front-end:\n    paths:\n      - enterprise/frontend/src\n      - frontend/src\n    carryforward: true\n"
        },
        {
          "name": "deps.edn",
          "type": "blob",
          "size": 48.13,
          "content": ";; -*- comment-column: 80; -*-\n{:deps\n ;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n ;; !!                                   PLEASE KEEP THESE ORGANIZED ALPHABETICALLY                                  !!\n ;; !!                                   AND ADD A COMMENT EXPLAINING THEIR PURPOSE                                  !!\n ;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n {amalloy/ring-buffer                       {:mvn/version \"1.3.1\"               ; fixed length queue implementation, used in log buffering\n                                             :exclusions  [org.clojure/clojure\n                                                           org.clojure/clojurescript]}\n  amalloy/ring-gzip-middleware              {:mvn/version \"0.1.4\"}              ; Ring middleware to GZIP responses if client can handle it\n  babashka/fs                               {:mvn/version \"0.5.22\"}             ; Portable filesystem operations\n  bigml/histogram                           {:mvn/version \"5.0.0\"               ; Histogram data structure\n                                             :exclusions  [junit/junit]}\n  buddy/buddy-core                          {:mvn/version \"1.12.0-430\"          ; various cryptographic functions\n                                             :exclusions  [commons-codec/commons-codec\n                                                           org.bouncycastle/bcpkix-jdk15on\n                                                           org.bouncycastle/bcprov-jdk15on\n                                                           org.bouncycastle/bcpkix-jdk18on\n                                                           org.bouncycastle/bcprov-jdk18on]}\n  buddy/buddy-sign                          {:mvn/version \"3.6.1-359\"}          ; JSON Web Tokens; High-Level message signing library\n  camel-snake-kebab/camel-snake-kebab       {:mvn/version \"0.4.3\"}              ; util functions for converting between camel, snake, and kebob case\n  cheshire/cheshire                         {:mvn/version \"5.13.0\"}             ; fast JSON encoding (used by Ring JSON middleware)\n  clj-bom/clj-bom                           {:mvn/version \"0.1.2\"}              ; handle BOMs in imported CSVs\n  clj-commons/iapetos                       {:mvn/version \"0.1.14\"}             ; prometheus metrics\n  clj-http/clj-http                         {:mvn/version \"3.13.0\"              ; HTTP client\n                                             :exclusions  [commons-codec/commons-codec\n                                                           commons-io/commons-io\n                                                           slingshot/slingshot]}\n  clojure.java-time/clojure.java-time       {:mvn/version \"1.4.3\"}              ; java.time utilities\n  clojurewerkz/quartzite                    {:mvn/version \"2.2.0\"               ; scheduling library\n                                             :exclusions  [com.mchange.c3p0/c3p0\n                                                           com.zaxxer/HikariCP-java7]}\n  colorize/colorize                         {:mvn/version \"0.1.1\"               ; string output with ANSI color codes (for logging)\n                                             :exclusions  [org.clojure/clojure]}\n  com.clearspring.analytics/stream          {:mvn/version \"2.9.8\"               ; Various sketching algorithms\n                                             :exclusions  [it.unimi.dsi/fastutil\n                                                           org.slf4j/slf4j-api]}\n  com.draines/postal                        {:mvn/version \"2.0.5\"}              ; SMTP library\n  ; Detect the charset in uploaded CSV files\n  com.github.albfernandez/juniversalchardet {:mvn/version \"2.5.0\"}\n  com.github.jknack/handlebars              ^:antq/exclude                      ; 4.4.0 requires java 17+\n                                            {:mvn/version \"4.3.1\"}              ; templating engine\n  com.github.seancorfield/honeysql          {:mvn/version \"2.6.1230\"}           ; Honey SQL 2. SQL generation from Clojure data maps\n  com.github.seancorfield/next.jdbc         {:mvn/version \"1.3.955\"}            ; Talk to JDBC DBs\n  com.github.steffan-westcott/clj-otel-api  {:mvn/version \"0.2.7\"}              ; Telemetry library\n  com.github.vertical-blank/sql-formatter   {:mvn/version \"2.0.5\"}              ; Java SQL formatting library https://github.com/vertical-blank/sql-formatter\n  com.google.guava/guava                    {:mvn/version \"33.3.1-jre\"}         ; dep for BigQuery, Spark, and GA. Require here rather than letting different dep versions stomp on each other — see comments on #9697\n  com.fasterxml.woodstox/woodstox-core      {:mvn/version \"7.1.0\"}              ; trans dep of commons-codec\n  com.h2database/h2                         ^:antq/exclude                      ; https://metaboat.slack.com/archives/CKZEMT1MJ/p1727191010259979\n                                            {:mvn/version \"2.1.214\"}            ; embedded SQL database\n  com.gfredericks/test.chuck                {:mvn/version \"0.2.14\"}             ; generating strings from regex\n  com.mchange/c3p0                          {:mvn/version \"0.10.1\"}             ; DB connection pool\n  com.snowplowanalytics/snowplow-java-tracker ^:antq/exclude                    ; 2+ depend on apache httpclient 5.x, but saml and clj-http depend on 4.x\n                                            {:mvn/version \"1.0.1\"}              ; Snowplow analytics\n  com.taoensso/nippy                        {:mvn/version \"3.4.2\"}              ; Fast serialization (i.e., GZIP) library for Clojure\n  com.vladsch.flexmark/flexmark             {:mvn/version \"0.64.8\"}             ; Markdown parsing\n  com.vladsch.flexmark/flexmark-ext-autolink\n  {:mvn/version \"0.64.8\"}             ; Flexmark extension for auto-linking bare URLs\n  commons-codec/commons-codec               {:mvn/version \"1.17.1\"}             ; Apache Commons -- useful codec util fns\n  commons-io/commons-io                     {:mvn/version \"2.18.0\"}             ; Apache Commons -- useful IO util fns\n  commons-net/commons-net                   {:mvn/version \"3.11.1\"}             ; Apache Commons -- useful network utils. Transitive dep of Snowplow, pinned due to CVE-2021-37533\n  commons-validator/commons-validator       {:mvn/version \"1.9.0\"               ; Apache Commons -- useful validation util fns\n                                             :exclusions  [commons-beanutils/commons-beanutils\n                                                           commons-digester/commons-digester\n                                                           commons-logging/commons-logging]}\n  compojure/compojure                       {:mvn/version \"1.7.1\"               ; HTTP Routing library built on Ring\n                                             :exclusions  [ring/ring-codec]}\n  crypto-random/crypto-random               {:mvn/version \"1.2.1\"}              ; library for generating cryptographically secure random bytes and strings\n  diehard/diehard                           {:mvn/version \"0.11.12\"}\n  dk.ative/docjure                          {:mvn/version \"1.19.0\"              ; excel export\n                                             :exclusions  [org.apache.poi/poi\n                                                           org.apache.poi/poi-ooxml]}\n  environ/environ                           {:mvn/version \"1.2.0\"}              ; env vars/Java properties abstraction\n  hiccup/hiccup                             {:mvn/version \"1.0.5\"}              ; HTML templating\n  inflections/inflections                   {:mvn/version \"0.14.2\"}             ; Clojure/Script library used for prularizing words\n  instaparse/instaparse                     {:mvn/version \"1.5.0\"}              ; Make your own parser\n  junegunn/grouper                          {:mvn/version \"0.1.1\"}              ; Batch processing helper\n  clj-commons/clj-yaml                      {:mvn/version \"1.0.29\"}             ; Clojure wrapper for YAML library SnakeYAML\n  io.github.camsaul/toucan2                 {:mvn/version \"1.0.560\"}\n  io.github.eerohele/pp                     {#_#_:git/tag \"2024-11-13.77\"       ; super fast pretty-printing library\n                                             :git/sha \"7ac1bc56de95520ff4938df05e3518e9b051415d\"\n                                             :git/url \"https://github.com/eerohele/pp\"}\n  io.github.metabase/macaw                  {:mvn/version \"0.2.25\"}             ; Parse native SQL queries\n  io.github.resilience4j/resilience4j-retry ^:antq/exclude                      ; 2.x do not support Java 8\n                                            {:mvn/version \"1.7.1\"}              ; Support for retrying operations\n  io.prometheus/simpleclient_hotspot        {:mvn/version \"0.16.0\"}             ; prometheus jvm collector\n  io.prometheus/simpleclient_jetty          {:mvn/version \"0.16.0\"}             ; prometheus jetty collector\n  javax.servlet/servlet-api                 {:mvn/version \"2.5\"}                ; used by ring's multipart-params (file upload)\n  kixi/stats                                {:mvn/version \"0.5.6\"               ; Various statistic measures implemented as transducers\n                                             :exclusions  [org.clojure/data.avl]}\n  lambdaisland/uri                          {:mvn/version \"1.19.155\"}           ; Used by openai-clojure\n  medley/medley                             {:mvn/version \"1.4.0\"}              ; lightweight lib of useful functions\n  metabase/connection-pool                  {:mvn/version \"1.2.0\"}              ; simple wrapper around C3P0. JDBC connection pools\n  metabase/saml20-clj                       {:mvn/version \"2.2.7.173\"\n                                             :exclusions [; EE SAML integration TODO: bump version when we release the library\n                                                          org.bouncycastle/bcpkix-jdk15on\n                                                          org.bouncycastle/bcprov-jdk15on\n                                                          org.bouncycastle/bcpkix-jdk18on\n                                                          org.bouncycastle/bcprov-jdk18on]}\n  metabase/throttle                         {:mvn/version \"1.0.2\"}              ; Tools for throttling access to API endpoints and other code pathways\n  methodical/methodical                     {:mvn/version \"1.0.124\"}            ; drop-in replacements for Clojure multimethods and adds several advanced features\n  metosin/malli                             {:mvn/version \"0.17.0\"}             ; Data-driven Schemas for Clojure/Script and babashka\n  nano-id/nano-id                           {:mvn/version \"1.1.0\"}              ; NanoID generator for generating entity_ids\n  net.cgrand/macrovich                      {:mvn/version \"0.2.2\"}              ; utils for writing macros for both Clojure & ClojureScript\n  net.clojars.wkok/openai-clojure           {:mvn/version \"0.22.0\"\n                                             :exclusions  [lambdaisland/uri]}   ; OpenAI\n  net.i2p.crypto/eddsa                      {:mvn/version \"0.3.0\"}              ; ED25519 key support (optional dependency for org.apache.sshd/sshd-core)\n  net.redhogs.cronparser/cron-parser-core   {:mvn/version \"3.5\"                 ; describe Cron schedule in human-readable language\n                                             :exclusions  [org.slf4j/slf4j-api]}\n  net.sf.cssbox/cssbox                      {:mvn/version \"5.0.2\"               ; HTML / CSS rendering\n                                             :exclusions  [org.slf4j/slf4j-api\n                                                           junit/junit]}\n  net.thisptr/jackson-jq                    {:mvn/version \"1.1.0\"}              ; Java implementation of the JQ json query language\n  org.apache.commons/commons-compress       {:mvn/version \"1.27.1\"}             ; compression utils\n  org.apache.commons/commons-lang3          {:mvn/version \"3.17.0\"}             ; helper methods for working with java.lang stuff\n  org.apache.logging.log4j/log4j-1.2-api    {:mvn/version \"2.24.2\"}             ; apache logging framework\n  org.apache.logging.log4j/log4j-api        {:mvn/version \"2.24.2\"}             ; add compatibility with log4j 1.2\n  org.apache.logging.log4j/log4j-core       {:mvn/version \"2.24.2\"}             ; apache logging framework\n  org.apache.logging.log4j/log4j-jcl        {:mvn/version \"2.24.2\"}             ; allows the commons-logging API to work with log4j 2\n  org.apache.logging.log4j/log4j-jul        {:mvn/version \"2.24.2\"}             ; java.util.logging (JUL) -> Log4j2 adapter\n  org.apache.logging.log4j/log4j-slf4j2-impl\n  {:mvn/version \"2.24.2\"}             ; allows the slf4j2 API to work with log4j 2\n  org.apache.logging.log4j/log4j-layout-template-json\n  {:mvn/version \"2.24.2\"}             ; allows the custom json logging format\n  org.apache.poi/poi                        {:mvn/version \"5.3.0\"}              ; Work with Office documents (e.g. Excel spreadsheets) -- newer version than one specified by Docjure\n  org.apache.poi/poi-ooxml                  {:mvn/version \"5.3.0\"\n                                             :exclusions  [org.bouncycastle/bcpkix-jdk15on\n                                                           org.bouncycastle/bcprov-jdk15on]}\n  org.apache.poi/poi-ooxml-full             {:mvn/version \"5.3.0\"}\n  org.apache.sshd/sshd-core                 {:mvn/version \"2.14.0\"              ; ssh tunneling and test server\n                                             :exclusions  [org.slf4j/slf4j-api\n                                                           org.slf4j/jcl-over-slf4j]}\n  org.apache.tika/tika-core                 {:mvn/version \"3.0.0\"}\n  org.apache.xmlgraphics/batik-all          {:mvn/version \"1.18\"}               ; SVG -> image\n  org.bouncycastle/bcpkix-jdk18on           {:mvn/version \"1.79\"}               ; Bouncy Castle crypto library -- explicit version of BC specified to resolve illegal reflective access errors\n  org.bouncycastle/bcprov-jdk18on           {:mvn/version \"1.79\"}\n  org.clj-commons/claypoole                 {:mvn/version \"1.2.2\"}              ; Threadpool tools for Clojure\n  org.clj-commons/hickory                   {:mvn/version \"0.7.5\"               ; Parse HTML into Clojure data structures\n                                             :exclusions [org.jsoup/jsoup]}\n  org.clojars.pntblnk/clj-ldap              {:mvn/version \"0.0.17\"}             ; LDAP client\n  org.clojure/clojure                       {:mvn/version \"1.12.0\"}\n  org.clojure/core.async                    {:mvn/version \"1.6.681\"\n                                             :exclusions  [org.clojure/tools.reader]}\n  org.clojure/core.logic                    {:mvn/version \"1.1.0\"}              ; optimized pattern matching library for Clojure\n  org.clojure/core.match                    {:mvn/version \"1.1.0\"}\n  org.clojure/core.memoize                  {:mvn/version \"1.1.266\"}            ; useful FIFO, LRU, etc. caching mechanisms\n  org.clojure/data.csv                      {:mvn/version \"1.1.0\"}              ; CSV parsing / generation\n  org.clojure/data.xml                      {:mvn/version \"0.2.0-alpha9\"}       ; XML parsing / generation\n  org.clojure/java.classpath                {:mvn/version \"1.1.0\"}              ; examine the Java classpath from Clojure programs\n  org.clojure/java.jdbc                     {:mvn/version \"0.7.12\"}             ; basic JDBC access from Clojure\n  org.clojure/java.jmx                      {:mvn/version \"1.1.0\"}              ; JMX bean library, for exporting diagnostic info\n  org.clojure/math.combinatorics            {:mvn/version \"0.3.0\"}              ; combinatorics functions\n  org.clojure/math.numeric-tower            {:mvn/version \"0.1.0\"}              ; math functions like `ceil`\n  org.clojure/tools.cli                     {:mvn/version \"1.1.230\"}            ; command-line argument parsing\n  org.clojure/tools.logging                 {:mvn/version \"1.3.0\"}              ; logging framework\n  org.clojure/tools.macro                   {:mvn/version \"0.2.1\"}              ; local macros\n  org.clojure/tools.namespace               {:mvn/version \"1.5.0\"}\n  org.clojure/tools.reader                  {:mvn/version \"1.5.0\"}\n  org.clojure/tools.trace                   {:mvn/version \"0.8.0\"}              ; function tracing\n  org.eclipse.jetty/jetty-server            ^:antq/exclude                      ; 12.x do not support Java 8\n                                            {:mvn/version \"11.0.24\"}            ; web server\n  org.eclipse.jetty.websocket/websocket-jetty-server {:mvn/version \"11.0.24\"}   ; ring-jetty-adapter needs that\n  org.flatland/ordered                      {:mvn/version \"1.15.12\"}            ; ordered maps & sets\n  org.graalvm.js/js                         ^:antq/exclude                      ; newer GraalVM is not compatible with Java 8\n                                            {:mvn/version \"22.3.5\"}             ; JavaScript engine\n  org.jsoup/jsoup                           {:mvn/version \"1.18.2\"}             ; required by hickory\n  org.liquibase/liquibase-core              ^:antq/exclude                      ; FIXME: no idea why it fails\n                                            {:mvn/version \"4.26.0\"              ; migration management (Java lib)\n                                             :exclusions  [ch.qos.logback/logback-classic]}\n  org.mariadb.jdbc/mariadb-java-client      ^:antq/exclude                      ; 3.x only support jdbc:mariadb, so using 2.x for now\n                                            {:mvn/version \"2.7.10\"}             ; MySQL/MariaDB driver\n  org.mindrot/jbcrypt                       {:mvn/version \"0.4\"}                ; Crypto library\n  org.postgresql/postgresql                 {:mvn/version \"42.7.4\"}             ; Postgres driver\n  org.slf4j/slf4j-api                       {:mvn/version \"2.0.16\"}             ; abstraction for logging frameworks -- allows end user to plug in desired logging framework at deployment time\n  org.tcrawley/dynapath                     {:mvn/version \"1.1.0\"}              ; Dynamically add Jars (e.g. Oracle or Vertica) to classpath\n  org.threeten/threeten-extra               {:mvn/version \"1.8.0\"}              ; extra Java 8 java.time classes like DayOfMonth and Quarter\n  potemkin/potemkin                         {:mvn/version \"0.4.7\"               ; utility macros & fns\n                                             :exclusions  [riddley/riddley]}\n  pretty/pretty                             {:mvn/version \"1.0.5\"}              ; protocol for defining how custom types should be pretty printed\n  ;; Dependency below is our fork of redux - utility functions for building and composing transducers. The\n  ;; group/artifact name is the same as with the upstream so that it overrides the original dependency everywhere.\n  redux/redux                               {:git/url \"https://github.com/metabase/redux\"\n                                             :sha \"4a37feaf817a2a6b5ef688c927f6fd4375964433\"}\n  riddley/riddley                           {:mvn/version \"0.2.0\"}              ; code walking lib -- used interally by Potemkin, manifold, etc.\n  ring/ring-core                            {:mvn/version \"1.13.0\"}             ; HTTP abstraction\n  ring/ring-jetty-adapter                   {:mvn/version \"1.13.0\"              ; Jetty adapter\n                                             :exclusions [org.eclipse.jetty/jetty-server\n                                                          org.eclipse.jetty.websocket/websocket-jetty-server]}\n  slingshot/slingshot                       {:mvn/version \"0.12.2\"}             ; enhanced throw/catch, used by other deps\n  stencil/stencil                           {:mvn/version \"0.5.0\"}              ; Mustache templates for Clojure\n  user-agent/user-agent                     {:mvn/version \"0.1.1\"}              ; User-Agent string parser, for Login History page & elsewhere\n  weavejester/dependency                    {:mvn/version \"0.2.1\"}              ; Dependency graphs and topological sorting\n  xerces/xercesImpl                         {:mvn/version \"2.12.2\"}}            ; SAX2 parser, transient dependency of batik\n\n;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n ;; !!         PLEASE KEEP NEW DEPENDENCIES ABOVE ALPHABETICALLY ORGANIZED AND ADD COMMENTS EXPLAINING THEM.         !!\n ;; !!                            *PLEASE DO NOT* ADD NEW ONES TO THE BOTTOM OF THE LIST.                            !!\n ;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n :paths\n [\"src\" \"resources\"]\n\n ;; These are needed for the Athena and Redshift drivers if you are developing against them locally. If those drivers'\n ;; dependencies are not included (i.e., if we don't have the `:drivers` profile), these repos are effectively\n ;; ignored.\n ;;\n ;; 1. Maven repos from subprojects do not get copied over -- see\n ;; https://ask.clojure.org/index.php/10726/deps-manifest-dependencies-respect-repos-dependent-project\n ;;\n ;; 2. You cannot include `:mvn/repos` inside of an alias -- see\n ;; https://ask.clojure.org/index.php/12367/support-mvn-repos-inside-an-alias -- if we could, this could go in the\n ;; `:drivers` alias instead.\n :mvn/repos\n {\"athena\"   {:url \"https://s3.amazonaws.com/maven-athena\"}\n  \"redshift\" {:url \"https://s3.amazonaws.com/redshift-maven-repository/release\"}\n  ;; for metabase/saml20-clj\n  \"opensaml\" {:url \"https://build.shibboleth.net/nexus/content/repositories/releases/\"}}\n\n :aliases\n {;;; Local Dev & test profiles\n\n  ;; for local development: start a REPL with\n  ;;\n  ;;    clojure -A:dev (basic dev REPL that includes test namespaces)\n  ;;    clojure -A:dev:drivers:drivers-dev (dev REPL w/ drivers + tests)\n  ;;    clojure -A:dev:ee:ee-dev (dev REPL w/ EE code including tests)\n  ;;\n  ;; You can start a web server from this REPL with\n  ;;\n  ;;    (require 'dev)\n  ;;    (dev/start!)\n  :dev\n  {:extra-deps\n   {com.clojure-goes-fast/clj-async-profiler\n    {:mvn/version \"1.5.1\"}                     ; Enables local profiling and heat map generation\n    com.clojure-goes-fast/clj-memory-meter\n    {:mvn/version \"0.3.0\"}                     ; Enables easy memory measurement\n    clj-http-fake/clj-http-fake  {:mvn/version \"1.0.4\"\n                                  :exclusions  [slingshot/slingshot]}\n    clj-kondo/clj-kondo          {:mvn/version \"2024.11.14\"}                ; included here mainly to facilitate working on the stuff in `.clj-kondo/src`\n    cloverage/cloverage          {:mvn/version \"1.2.4\"}\n    com.gfredericks/test.chuck   {:mvn/version \"0.2.14\"}                    ; generating strings from regexes (useful with malli)\n    djblue/portal                {:mvn/version \"0.58.3\"}                    ; ui for inspecting values\n    hashp/hashp                  {:mvn/version \"0.2.2\"}                     ; debugging/spying utility\n    io.github.camsaul/humane-are {:mvn/version \"1.0.2\"}\n    io.github.metabase/hawk      {:mvn/version \"1.0.5\"}\n    jonase/eastwood              {:mvn/version \"1.4.3\"                      ; inspects namespaces and reports possible problems using tools.analyzer\n                                  :exclusions\n                                  [org.ow2.asm/asm-all]}\n    criterium/criterium          {:mvn/version \"0.4.6\"}                     ; benchmarking library\n    lambdaisland/deep-diff2      {:mvn/version \"2.11.216\"}                  ; way better diffs\n    org.clojure/algo.generic     {:mvn/version \"1.0.1\"}\n    peridot/peridot              {:git/url \"https://github.com/piranha/peridot.git\"\n                                  :sha \"db627c627db3b527a63caf472f0422e4cbfdf574\"} ; mocking Ring requests; waiting for upstream release of commit 0fc7c01 (explicit charset)\n    pjstadig/humane-test-output  {:mvn/version \"0.11.0\"}\n    reifyhealth/specmonstah      {:mvn/version \"2.1.0\"\n                                  :exclusions  [org.clojure/clojure\n                                                org.clojure/clojurescript]} ; lets you write test fixtures that are clear, concise, and easy to maintain (clojure.spec)\n    ring/ring-mock               {:mvn/version \"0.4.0\"}                     ; creating Ring request maps for testing purposes\n    talltale/talltale            {:mvn/version \"0.5.14\"}}                   ; generates fake data, useful for prototyping or load testing\n\n   :extra-paths [\"dev/src\" \"local/src\" \"test\" \"test_resources\" \".clj-kondo/src\" \".clj-kondo/test\"]\n   :jvm-opts    [\"-Dmb.run.mode=dev\"\n                 \"-Dmb.field.filter.operators.enabled=true\"\n                 \"-Dmb.test.env.setting=ABCDEFG\"\n                 \"-Dmacaw.run.mode=dev\"\n                 \"-Duser.timezone=UTC\"\n                 \"-Dfile.encoding=UTF-8\"\n                 \"-Duser.language=en\"\n                 \"-Duser.country=US\"\n                 ;; Allow clojure goes fast tooling to work\n                 \"-Djdk.attach.allowAttachSelf\"\n                 ;; This will suppress the warning about dynamically loaded agents (like clj-memory-meter)\n                 \"-XX:+EnableDynamicAgentLoading\"\n                 ;; set the logging properties set in metabase.bootstrap. calling (dev) will load it but putting here to be sure\n                 \"-Dlog4j2.contextSelector=org.apache.logging.log4j.core.selector.BasicContextSelector\"\n                 \"-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory\"\n                 ;; If Clojure fails to start (e.g. because of a compilation error somewhere) print the error\n                 ;; report/stacktrace to stderr rather than to a random EDN file in /tmp/\n                 \"-Dclojure.main.report=stderr\"\n                 ;; Exceptions that get thrown repeatedly are created without stacktraces as a performance\n                 ;; optimization in newer Java versions. This makes debugging pretty hard when working on stuff\n                 ;; locally -- prefer debuggability over performance for local dev work.\n                 \"-XX:-OmitStackTraceInFastThrow\"\n                 ;; prevent Java icon from randomly popping up in macOS dock\n                 \"-Djava.awt.headless=true\"\n                 ;; ignore options that aren't present in older versions of Java, like the one below:\n                 \"-XX:+IgnoreUnrecognizedVMOptions\"\n                 ;; include more details for debugging NPEs (Java 14+)\n                 \"-XX:+ShowCodeDetailsInExceptionMessages\"\n                 ;; Support Snowflake in Java 17+. See https://github.com/metabase/metabase/pull/47997 and\n                 ;; https://community.snowflake.com/s/article/JDBC-Driver-Compatibility-Issue-With-JDK-16-and-Later\n                 \"--add-opens\"\n                 \"java.base/java.nio=ALL-UNNAMED\"]}\n\n  ;; includes test code as source paths. Run tests with clojure -X:dev:test\n  :test\n  {:extra-paths [\"test_config\"]\n   :exec-fn     metabase.test-runner/find-and-run-tests-cli\n   :jvm-opts    [\"-Dmb.run.mode=test\"\n                 \"-Dmacaw.run.mode=test\"\n                 \"-Dmb.db.in.memory=true\"\n                 \"-Dmb.jetty.join=false\"\n                 \"-Dmb.field.filter.operators.enabled=true\"\n                 \"-Dmb.api.key=test-api-key\"\n                 ;; Different port from normal `:dev` so you can run tests on a different server.\n                 ;; TODO -- figure out how to do a random port like in the old project.clj?\n                 \"-Dmb.jetty.port=3001\"]}\n\n  ;; run the dev server with\n  ;; clojure -M:run\n  ;; clojure -M:run:drivers (include all drivers)\n  ;; clojure -M:run:ee (include EE code)\n  :run\n  {:main-opts [\"-m\" \"metabase.bootstrap\"]\n   :jvm-opts  [\"-Dmb.run.mode=dev\"\n               \"-Dmacaw.run.mode=dev\"\n               \"-Djava.awt.headless=true\"]}                   ; prevent Java icon from randomly popping up in macOS dock\n\n  ;; run the prod server when generating docs\n  ;; as some default values differ between dev and prod\n  ;;\n  ;; clojure -M:ee:doc\n  :doc\n  {:main-opts [\"-m\" \"metabase.bootstrap\"]\n   :jvm-opts  [\"-Dmb.run.mode=prod\"\n               \"-Djava.awt.headless=true\"]}                   ; prevent Java icon from randomly popping up in macOS dock\n\n  ;; alias for CI-specific options.\n  :ci\n  {:jvm-opts [\"-Xmx12g\"\n              \"-Xms12g\"\n              ;; normally CircleCI sets `CI` as an env var, so this is mostly to replicate that locally. Hawk will not\n              ;; print the progress bar in output when this is set. Progress bars aren't very CI friendly\n              \"-Dci=TRUE\"]}\n\n  ;; include EE source code.\n  :ee\n  {:extra-paths [\"enterprise/backend/src\"]}\n\n  ;; Include EE tests.\n  ;; for EE dev:   `clojure -X:dev:ee:ee-dev`\n  ;; for EE tests: `clojure -X:dev:ee:ee-dev:test`\n  :ee-dev\n  {:extra-paths [\"enterprise/backend/test\"]}\n\n  ;; these aliases exist for symmetry with the ee aliases. Empty for now.\n  :oss\n  {}\n\n  :oss-dev\n  {}\n\n  ;; Generate BE documentation with\n  ;; clojure -M:marginalia\n  :marginalia\n  {:extra-deps\n   {marginalia/marginalia {:mvn/version \"0.9.2\"}}\n   :main-opts [\"-m\" \"marginalia.main\" \"-n\" \"Metabase\" \"-d\" \"backend-docs\" \"-D\"\n               \"The simplest, fastest way to get business intelligence and analytics to everyone in your company 😋\"\n               \"dev\" \"src\" \"enterprise/backend/src\"]}\n\n  ;; Generate a single file's docs with\n  ;;   clojure -M:marginalia/one src/metabase/some/namespace.clj\n  ;; which creates `backend-docs/metabase.some.namespace.html`\n  :marginalia/one\n  {:extra-deps\n   {marginalia/marginalia {:mvn/version \"0.9.2\"}}\n   :main-opts [\"-m\" \"marginalia.main\" \"-m\" \"-n\" \"Metabase\" \"-d\" \"backend-docs\" \"-D\"\n               \"The simplest, fastest way to get business intelligence and analytics to everyone in your company 😋\"]}\n\n  ;; Find outdated versions of dependencies. Run with `clojure -M:outdated`\n  :outdated {;; Note that it is `:deps`, not `:extra-deps`\n             :deps {com.github.liquidz/antq {:mvn/version \"RELEASE\"}}\n             :main-opts [\"-m\" \"antq.core\" \"--skip=github-action\"]}\n\n  :cljs\n  {:extra-paths [\"test\"]\n   :extra-deps\n   {binaryage/devtools                 {:mvn/version \"1.0.7\"}\n    cider/cider-nrepl                  {:mvn/version \"0.50.2\"}\n    cider/piggieback                   {:mvn/version \"0.5.3\"}\n    cljs-bean/cljs-bean                {:mvn/version \"1.9.0\"}\n    com.lambdaisland/glogi             {:mvn/version \"1.3.169\"}\n    io.github.metabase/hawk            {:mvn/version \"1.0.5\"}\n    org.clojars.mmb90/cljs-cache       {:mvn/version \"0.1.4\"}\n    refactor-nrepl/refactor-nrepl      {:mvn/version \"3.10.0\"}\n    thheller/shadow-cljs               {:mvn/version \"2.28.20\"}}}\n\n  ;; for local dev -- include the drivers locally with :dev:drivers\n  :drivers\n  {:extra-deps\n   {metabase/driver-modules {:local/root \"modules/drivers\"}}}\n\n  ;; for local dev: include drivers as well as their tests.\n  ;;\n  ;;    clojure -X:dev:drivers:drivers-dev:test\n  ;;\n  ;; or\n  ;;\n  ;;    clojure -X:dev:ee:ee-dev:drivers:drivers-dev:test (for EE)\n  :drivers-dev\n  {:extra-paths\n   [\"modules/drivers/athena/test\"\n    \"modules/drivers/bigquery-cloud-sdk/test\"\n    \"modules/drivers/databricks/test\"\n    \"modules/drivers/druid/test\"\n    \"modules/drivers/druid-jdbc/test\"\n    \"modules/drivers/hive-like/test\"\n    \"modules/drivers/mongo/test\"\n    \"modules/drivers/oracle/test\"\n    \"modules/drivers/presto-jdbc/test\"\n    \"modules/drivers/redshift/test\"\n    \"modules/drivers/snowflake/test\"\n    \"modules/drivers/sparksql/test\"\n    \"modules/drivers/sqlite/test\"\n    \"modules/drivers/sqlserver/test\"\n    \"modules/drivers/vertica/test\"]}\n\n;;; Linters\n\n  ;; clojure -M:kondo --lint src test\n  ;;\n  ;; clojure -M:kondo --version\n  ;;\n  ;; clojure -M:kondo --copy-configs --dependencies --lint \"$(clojure -A:dev -Spath)\" --skip-lint --parallel\n  ;;\n  ;; Run Kondo from the JVM using the pinned version. Preferable to running the installed command since we can pin the\n  ;; version here which may be different from the version installed on your computer.\n  ;;\n  ;; Use this to only run Kondo against specific files.\n  :kondo\n  {:replace-deps\n   {clj-kondo/clj-kondo {:mvn/version \"2024.11.14\"}}\n\n   :main-opts\n   [\"-m\" \"clj-kondo.main\"]}\n\n  ;; clojure -M:kondo:kondo/all\n  ;;\n  ;; Like the command above but includes arguments so it lints everything.\n  :kondo/all\n  {:main-opts\n   [\"-m\" \"clj-kondo.main\"\n    ;; disabled for now since this seems to cause random failures -- see https://github.com/clj-kondo/clj-kondo/issues/2218\n    #_\"--parallel\"\n    ;; enable this if Kondo isn't working as expected or if LSP jump-to-definition is being fussy\n    #_\"--debug\"\n    \"--lint\"\n    \"src\"\n    \"test\"\n    \"enterprise/backend/src\"\n    \"enterprise/backend/test\"\n    \"bin/build/src\"\n    \"bin/build/test\"\n    \"bin/lint-migrations-file/src\"\n    \"bin/lint-migrations-file/test\"\n    \"bin/release-list/src\"\n    \"bin/release-list/test\"\n    \"modules/drivers/athena/src\"\n    \"modules/drivers/athena/test\"\n    \"modules/drivers/bigquery-cloud-sdk/src\"\n    \"modules/drivers/bigquery-cloud-sdk/test\"\n    \"modules/drivers/databricks/src\"\n    \"modules/drivers/databricks/test\"\n    \"modules/drivers/druid-jdbc/src\"\n    \"modules/drivers/druid-jdbc/test\"\n    \"modules/drivers/druid/src\"\n    \"modules/drivers/druid/test\"\n    \"modules/drivers/hive-like/src\"\n    \"modules/drivers/hive-like/test\"\n    \"modules/drivers/mongo/src\"\n    \"modules/drivers/mongo/test\"\n    \"modules/drivers/oracle/src\"\n    \"modules/drivers/oracle/test\"\n    \"modules/drivers/presto-jdbc/src\"\n    \"modules/drivers/presto-jdbc/test\"\n    \"modules/drivers/redshift/src\"\n    \"modules/drivers/redshift/test\"\n    \"modules/drivers/snowflake/src\"\n    \"modules/drivers/snowflake/test\"\n    \"modules/drivers/sparksql/src\"\n    \"modules/drivers/sparksql/test\"\n    \"modules/drivers/sqlite/src\"\n    \"modules/drivers/sqlite/test\"\n    \"modules/drivers/sqlserver/src\"\n    \"modules/drivers/sqlserver/test\"\n    \"modules/drivers/vertica/src\"\n    \"modules/drivers/vertica/test\"]}\n\n  ;; clojure -M:ee:drivers:check\n  ;;\n  ;; checks that all the namespaces we actually ship can be compiled, without any dependencies that we don't\n  ;; ship (such as `:dev` dependencies). See #27009 for more context.\n  :check\n  {:extra-deps {athos/clj-check {:git/url \"https://github.com/athos/clj-check.git\"\n                                 :sha     \"d997df866b2a04b7ce7b17533093ee0a2e2cb729\"}}\n   :main-opts  [\"-m\" \"clj-check.check\"\n                \"src\"\n                \"enterprise/backend/src\"\n                \"modules/drivers/athena/src\"\n                \"modules/drivers/bigquery-cloud-sdk/src\"\n                \"modules/drivers/databricks/src\"\n                \"modules/drivers/druid/src\"\n                \"modules/drivers/druid-jdbc/src\"\n                \"modules/drivers/hive-like/src\"\n                \"modules/drivers/mongo/src\"\n                \"modules/drivers/oracle/src\"\n                \"modules/drivers/presto-jdbc/src\"\n                \"modules/drivers/redshift/src\"\n                \"modules/drivers/snowflake/src\"\n                \"modules/drivers/sparksql/src\"\n                \"modules/drivers/sqlite/src\"\n                \"modules/drivers/sqlserver/src\"\n                \"modules/drivers/vertica/src\"]\n   :jvm-opts   [\"-Dclojure.main.report=stderr\"]}\n\n  ;; clojure -X:dev:ee:ee-dev:drivers:drivers-dev:test:eastwood\n  :eastwood\n  {:exec-fn   metabase.linters.eastwood/eastwood\n   :exec-args {;; manually specify the source paths for the time being (exclude test paths) until we fix Eastwood\n               ;; errors in the test paths (once PR #17193 is merged)\n               :source-paths    [\"src\"\n                                 \"enterprise/backend/src\"\n                                 \"modules/drivers/athena/src\"\n                                 \"modules/drivers/bigquery-cloud-sdk/src\"\n                                 \"modules/drivers/databricks/src\"\n                                 \"modules/drivers/druid/src\"\n                                 \"modules/drivers/druid-jdbc/src\"\n                                 \"modules/drivers/hive-like/src\"\n                                 \"modules/drivers/mongo/src\"\n                                 \"modules/drivers/oracle/src\"\n                                 \"modules/drivers/presto-jdbc/src\"\n                                 \"modules/drivers/redshift/src\"\n                                 \"modules/drivers/snowflake/src\"\n                                 \"modules/drivers/sparksql/src\"\n                                 \"modules/drivers/sqlite/src\"\n                                 \"modules/drivers/sqlserver/src\"\n                                 \"modules/drivers/vertica/src\"]\n               :exclude-linters [;; Turn this off temporarily until we finish removing\n                                 ;; self-deprecated functions & macros\n                                 :deprecations\n                                 ;; this has a fit in libs that use Potemkin `import-vars` such\n                                 ;; as `java-time`\n                                 :implicit-dependencies\n                                 ;; too many false positives for now\n                                 :unused-ret-vals\n                                 ;; Kondo lints this for us anyway, and this isn't as easy to configure.\n                                 :wrong-arity\n                                 ;; Kondo lints this for us anyway, and this isn't as easy to configure.\n                                 :suspicious-expression]\n               ;; Snowplow has a dynamic dependency on okhttp3.CookieJar that we\n               ;; don't use but eastwood detects. This is discussed in Slack here\n               ;; https://clojurians.slack.com/archives/C03S1KBA2/p1667925853699669\n               ;; An issue has been filed here https://github.com/jonase/eastwood/issues/444\n               ;; and a simple reproduction repo can be found here https://github.com/metabase/snowplow-eastwood-issue\n               :exclude-namespaces [metabase.analytics.snowplow]}}\n\n  ;; clojure -T:whitespace-linter\n  :whitespace-linter\n  {:deps       {com.github.camsaul/whitespace-linter {:sha \"e35bc252ccf5cc74f7d543ef95ad8a3e5131f25b\"}}\n   :ns-default whitespace-linter\n   :exec-fn    whitespace-linter/lint\n   :exec-args  {:paths            [\"./.dir-locals.el\"\n                                   \"./deps.edn\"\n                                   \"./package.json\"\n                                   \"./shadow-cljs.edn\"\n                                   \".clj-kondo\"\n                                   \".github\"\n                                   \"bin\"\n                                   \"enterprise\"\n                                   \"frontend\"\n                                   \"resources\"\n                                   \"src\"\n                                   \"test\"]\n                :include-patterns [\"\\\\.clj.?$\"\n                                   \"\\\\.edn$\"\n                                   \"\\\\.el$\"\n                                   \"\\\\.html$\"\n                                   \"\\\\.json$\"\n                                   \"\\\\.jsx?$\"\n                                   \"\\\\.sh$\"\n                                   \"\\\\.yaml$\"\n                                   \"\\\\.yml$\"]\n                :exclude-patterns [\".clj-kondo/better-cond/.*\"\n                                   \".clj-kondo/com.github.seancorfield/.*\"\n                                   \"resources/i18n/.*\\\\.edn$\"\n                                   \"resources/frontend_client\"\n                                   \"resources/frontend_shared\"\n                                   \"resources/html-entities.edn\"\n                                   \"resources/openapi/.*\"\n                                   \"frontend/src/cljs\"\n                                   \"frontend/test/metabase/lib/urls\\\\.unit\\\\.spec\\\\.js$\"\n                                   \"frontend/test/metabase/lib/formatting\\\\.unit\\\\.spec\\\\.js$\"\n                                   \"src/metabase/util/currency\\\\.cljc$\"\n                                   \"test/metabase/channel/render/png_test.clj\"\n                                   \"#.+#$\"\n                                   \"\\\\.transit\\\\.json$\"]}}\n\n  ;; clojure -X:dev:ee:ee-dev:test:cloverage\n  :cloverage\n  {:exec-fn   metabase.cloverage-runner/run-project\n   :exec-args {:fail-threshold 69\n               :codecov?       true\n               ;; don't instrument logging forms, since they won't get executed as part of tests anyway\n               ;; log calls expand to these\n               :exclude-call\n               [clojure.tools.logging/logf\n                clojure.tools.logging/logp\n                metabase.util.log/logf\n                metabase.util.log/logp]\n\n               :src-ns-path\n               [\"src\" \"enterprise/backend/src\"]\n\n               :test-ns-path\n               [\"test\" \"enterprise/backend/test\"]\n\n               :ns-regex\n               [\"^metabase\\\\..*\" \"^metabase-enterprise\\\\..*\"]\n\n               ;; don't instrument Postgres/MySQL driver namespaces, because we don't current run tests for them\n               ;; as part of recording test coverage, which means they can give us false positives.\n               ;;\n               ;; regex literals aren't allowed in EDN. We parse them in `./test/cloverage.clj`\n               :ns-exclude-regex\n               [\"metabase\\\\.driver\\\\.mysql.*\"\n                \"metabase\\\\.driver\\\\.postgres.*\"]}\n   ;; different port from `:test` so you can run it at the same time as `:test`.\n   :jvm-opts [\"-Dmb.jetty.port=3002\"]}\n\n  ;; to fix indentation in source files:\n  ;;\n  ;;     clj -T:cljfmt fix\n  ;;\n  ;; to fix errors in specific source files:\n  ;;\n  ;;     clj -T:cljfmt fix '{:paths [\"src/metabase/query_processor/card.clj\"]}'\n  ;;\n  ;; to check for errors without fixing them:\n  ;;\n  ;;    clj -T:cljfmt check\n  :cljfmt\n  {:deps       {io.github.weavejester/cljfmt {:git/sha \"fc3340da3c8344b3fbb336d190ce696ef40e42d4\"}}\n   :ns-default cljfmt.tool\n   :exec-fn    cljfmt.tool/fix}\n\n;;; building Uberjar, build and release scripts\n\n  :build\n  {:extra-paths\n   [\"bin/build/resources\"\n    \"bin/build/src\"]\n\n   :extra-deps\n   {com.bhauman/spell-spec            {:mvn/version \"0.1.2\"}                    ; used to find misspellings in YAML files\n    expound/expound                   {:mvn/version \"0.9.0\"}                    ; better output of spec validation errors\n    io.github.borkdude/grasp          {:mvn/version \"0.1.4\"}\n    io.github.clojure/tools.build     {:mvn/version \"0.10.6\"}\n    org.clojure/data.xml              {:mvn/version \"0.2.0-alpha9\"}\n    org.clojure/tools.deps.alpha      {:mvn/version \"0.15.1254\"}\n    org.fedorahosted.tennera/jgettext {:mvn/version \"0.15.1\"}\n\n    io.github.seancorfield/build-uber-log4j2-handler {:git/tag \"v2.24.0\" :git/sha \"de93f51\"}} ; collect binary files for log4j2\n\n   :jvm-opts\n   [\"-Dclojure.main.report=stderr\"\n    \"-XX:-OmitStackTraceInFastThrow\"\n    \"-XX:+IgnoreUnrecognizedVMOptions\"\n    \"-XX:+ShowCodeDetailsInExceptionMessages\"]}\n\n  ;; Build everything:\n  ;;\n  ;;    clojure -X:drivers:build:build/all\n  ;;    clojure -X:drivers:build:build/all :edition :ee\n  ;;\n  ;; Run just a specific build step:\n  ;;\n  ;;    clojure -X:drivers:build:build/all :steps '[:version]'\n  ;;\n  ;; the various steps available are:\n  ;;\n  ;;    :version :translations :frontend :licenses :drivers :uberjar\n  :build/all\n  {:exec-fn build/build-cli}\n\n  ;; build just the uberjar (without i18n, drivers, etc.)\n  ;;\n  ;; clojure -X:build:build/uberjar\n  ;; clojure -X:build:build/uberjar :edition :ee\n  :build/uberjar\n  {:exec-fn build.uberjar/uberjar}\n\n  ;; List dependencies without a license. Not really 100% sure why this needs `:dev`\n  ;;\n  ;; clojure -X:build:build/list-without-license\n  :build/list-without-license\n  {:exec-fn build/list-without-license}\n\n  ;; Build a single driver.\n  ;;\n  ;;   clojure -X:build:drivers:build/driver :driver :sqlserver :edition :oss\n  :build/driver\n  {:exec-fn build-driver/build-driver}\n\n  ;; Build all of the drivers.\n  ;;\n  ;;    clojure -X:build:drivers:build/drivers\n  ;;    clojure -X:build:drivers:build/drivers :edition :ee\n  :build/drivers\n  {:exec-fn build-drivers/build-drivers}\n\n  ;; Verify that a driver JAR looks correct.\n  ;;\n  ;;    clojure -X:build:build/verify-driver :driver :mongo\n  :build/verify-driver\n  {:exec-fn verify-driver/verify-driver}\n\n  ;; Build i18n artifacts.\n  ;;\n  ;;    clojure -X:build:build/i18n\n  :build/i18n\n  {:exec-fn i18n.create-artifacts/create-all-artifacts!}\n\n  ;; extra paths and deps for working on build scripts, or running the tests.\n  :build-dev\n  {:extra-paths [\"bin/build/test\"]\n\n   :extra-deps\n   {org.clojure/data.json {:mvn/version \"2.5.1\"}}}\n\n  ;; Run tests for the build scripts:\n  ;;\n  ;; clj -X:dev:drivers:build:build-dev:build-test\n  :build-test\n  {:exec-fn   mb.hawk.core/find-and-run-tests-cli\n   :exec-args {:only [\"bin/build/test\"]}}\n\n;;; Other misc convenience aliases\n\n  ;; Profile Metabase start time with clojure -M:profile\n  :profile\n  {:main-opts [\"-m\" \"metabase.core\" \"profile\"]\n   :jvm-opts  [\"-XX:+CITime\" ; print time spent in JIT compiler\n               \"-Xlog:gc\"]}\n\n  ;; get the H2 shell with clojure -X:dev:h2\n  :h2\n  {:extra-paths [\"dev/src\"]\n   :exec-fn     dev.h2-shell/shell\n   :jvm-opts    [\"-Dfile.encoding=UTF-8\"]}\n\n  :generate-automagic-dashboards-pot\n  {:main-opts [\"-m\" \"metabase.xrays.automagic-dashboards.dashboard-templates\"]}\n\n  ;; Start a Network REPL (nrepl) that you can connect your editor to.\n  ;;\n  ;; clojure -M:dev:nrepl (etc.)\n  :nrepl\n  {:extra-deps {nrepl/nrepl {:mvn/version \"1.3.0\"}}\n   :main-opts  [\"-m\" \"nrepl.cmdline\" \"-p\" \"50605\"]}\n\n  ;; - start a Socket REPL on port 50505 that you can connect your editor to:\n  :socket {:jvm-opts [\"-Dclojure.server.repl={:address,\\\"0.0.0.0\\\",:port,50505,:accept,clojure.core.server/repl}\"]}\n\n  ;; Liquibase CLI:\n  ;;\n  ;;    clojure -M:liquibase <command>\n  ;;\n  ;; e.g.\n  ;;\n  ;;    clojure -M:liquibase dbDoc target/liquibase\n  :liquibase\n  {:extra-deps  {ch.qos.logback/logback-classic {:mvn/version \"1.5.12\"}}\n   :extra-paths [\"dev/src\"]\n   :main-opts   [\"-m\" \"dev.liquibase\"]}\n\n  ;; Migrate CLI:\n  ;;    clojure -M:migrate <command>\n  ;; E.g.\n  ;;    clojure -M:migrate up                       ;; migrate up to the latest\n  ;;    clojure -M:migrate rollback count 2         ;; rollback 2 migrations\n  ;;    clojure -M:migrate rollback id \"v40.00.001\" ;; rollback to a specific migration with id\n  ;;    clojure -M:migrate status                   ;; print the latest migration id\n  :migrate\n  {:extra-deps {io.github.camsaul/humane-are {:mvn/version \"1.0.2\"}}\n   :extra-paths [\"dev/src\"]\n   :main-opts   [\"-m\" \"dev.migrate\"]}\n\n  ;; run tests against MLv2. Very fast since this is almost all ^:parallel\n  :test/mlv2\n  {:exec-args {:only [\"test/metabase/lib\"]}}\n\n  ;; test the Query Processor\n  ;;\n  ;;    clj -X:dev:ee:ee-dev:test:test/qp\n  :test/qp\n  {:exec-args {:only [\"test/metabase/driver\"\n                      \"test/metabase/query_processor\"\n                      \"test/metabase/query_processor_test\"\n                      metabase-enterprise.advanced-permissions.models.permissions.block-permissions-test\n                      metabase-enterprise.sandbox.query-processor.middleware.row-level-restrictions-test]}}\n\n\n  ;; test the notification system\n  ;;    clj -X:dev:ee:ee-dev:test:test/notification\n  :test/notification\n  {:exec-args {:only [\"test/metabase/notification\"\n                      \"test/metabase/channel\"\n                      metabase.api.channel-test\n                      metabase.events.notification-test\n                      metabase.models.channel-test\n                      metabase.models.notification-test\n                      metabase.task.notification-test]}}\n\n  ;; test all MBQL related stuff: MLv2, the legacy shared `metabase.legacy-mbql` code, and the QP\n  ;;\n  ;;    clj -X:dev:ee:ee-dev:test:test/mbql\n  :test/mbql\n  {:exec-args {:only [\"test/mbql\"\n                      \"test/metabase/lib\"\n                      \"test/metabase/legacy_mbql\"\n                      \"test/metabase/driver\"\n                      \"test/metabase/query_processor\"\n                      \"test/metabase/query_processor_test\"\n                      metabase-enterprise.advanced-permissions.models.permissions.block-permissions-test\n                      metabase-enterprise.sandbox.query-processor.middleware.row-level-restrictions-test]}}\n\n  ;; test search-related stuff.\n  ;;\n  ;;    clj -X:dev:ee:ee-dev:test:test/search\n  :test/search\n  {:exec-args {:only [metabase.api.search-test\n                      \"test/metabase/search\"]}}\n\n  ;; test custom clj-kondo linters and hooks.\n  ;;\n  ;;    clj -X:dev:test:test/kondo\n  :test/kondo\n  {:exec-args {:only [\".clj-kondo/test\"]}}\n\n  ;; watch and reload clojure namespaces\n  :watch {:extra-deps\n          {com.nextjournal/beholder     {:mvn/version \"1.0.2\"} ;; watcher\n           io.github.tonsky/clj-reload {:mvn/version \"0.7.1\"}} ;; reloader\n          :extra-paths \"dev/src/watch\"\n          :main-opts [\"-m\" \"watch.watcher\"]}}}\n\n\n\n  ;; TODO -- consider creating an alias that includes the `./bin` build-drivers & release code as well so we can work\n  ;; on them all from a single REPL process.\n"
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "enterprise",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 2.9,
          "content": "// @ts-check\n\nconst esmPackages = [\n  \"character-entities-html4\",\n  \"comma-separated-tokens\",\n  \"d3-*\",\n  \"d3\",\n  \"devlop\",\n  \"echarts\",\n  \"hast.*\",\n  \"html-void-elements\",\n  \"is-absolute-url\",\n  \"property-information\",\n  \"rehype-external-links\",\n  \"screenfull\",\n  \"space-separated-tokens\",\n  \"stringify-entities\",\n  \"vfile-message\",\n  \"vfile\",\n  \"zrender\",\n];\n\n/** @type {import('jest').Config} */\nconst config = {\n  moduleNameMapper: {\n    \"\\\\.(css|less)$\": \"<rootDir>/frontend/test/__mocks__/styleMock.js\",\n    \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\":\n      \"<rootDir>/frontend/test/__mocks__/fileMock.js\",\n    \"ace/ext-searchbox\":\n      \"<rootDir>/frontend/test/__mocks__/aceSearchBoxExtMock.js\",\n    \"^cljs/(.*)$\": \"<rootDir>/target/cljs_dev/$1\",\n    \"^d3-(.*)$\": \"<rootDir>/node_modules/d3-$1/dist/d3-$1\",\n    \"react-markdown\":\n      \"<rootDir>/node_modules/react-markdown/react-markdown.min.js\",\n    \"\\\\.svg\\\\?(component|source)\":\n      \"<rootDir>/frontend/test/__mocks__/svgMock.jsx\",\n    \"csv-parse/browser/esm/sync\":\n      \"<rootDir>/node_modules/csv-parse/dist/cjs/sync\",\n    \"csv-stringify/browser/esm/sync\":\n      \"<rootDir>/node_modules/csv-stringify/dist/cjs/sync\",\n  },\n  transformIgnorePatterns: [\n    `<rootDir>/node_modules/(?!(${esmPackages.join(\"|\")})/)`,\n  ],\n  testPathIgnorePatterns: [\n    \"<rootDir>/frontend/.*/.*.tz.unit.spec.{js,jsx,ts,tsx}\",\n    \"<rootDir>/release/.*\",\n  ],\n  testMatch: [\n    \"<rootDir>/**/*.unit.spec.js\",\n    \"<rootDir>/**/*.unit.spec.{js,jsx,ts,tsx}\",\n  ],\n  modulePaths: [\n    \"<rootDir>/frontend/test\",\n    \"<rootDir>/frontend/src\",\n    \"<rootDir>/enterprise/frontend/src\",\n  ],\n  modulePathIgnorePatterns: [\n    \"<rootDir>/target/cljs_release/.*\",\n    \"<rootDir>/resources/frontend_client\",\n    \"<rootDir>/.*/__mocks__\",\n  ],\n  setupFiles: [\n    \"<rootDir>/frontend/test/jest-setup.js\",\n    \"<rootDir>/frontend/test/metabase-bootstrap.js\",\n    \"<rootDir>/frontend/test/register-visualizations.js\",\n  ],\n  setupFilesAfterEnv: [\"<rootDir>/frontend/test/jest-setup-env.js\"],\n  globals: {\n    ace: {},\n    ga: {},\n  },\n  reporters: [\"default\", \"jest-junit\"],\n  coverageDirectory: \"./coverage\",\n  coverageReporters: [\"html\", \"lcov\"],\n  collectCoverageFrom: [\n    \"frontend/src/**/*.{js,jsx,ts,tsx}\",\n    \"enterprise/frontend/src/**/*.{js,jsx,ts,tsx}\",\n    \"!<rootDir>/**/*.styled.{js,jsx,ts,tsx}\",\n    \"!<rootDir>/**/*.story.{js,jsx,ts,tsx}\",\n    \"!<rootDir>/**/*.info.{js,jsx,ts,tsx}\",\n    \"!<rootDir>/**/*.unit.spec.{js,jsx,ts,tsx}\",\n  ],\n  coveragePathIgnorePatterns: [\n    \"/node_modules/\",\n    \"/frontend/src/metabase/visualizations/lib/errors.js\",\n    \"/target/cljs_dev/\",\n    \"/target/cljs_release/\",\n    \"/frontend/test/\",\n  ],\n  testEnvironment: \"jest-environment-jsdom\",\n  watchPlugins: [\n    \"jest-watch-typeahead/filename\",\n    \"jest-watch-typeahead/testname\",\n  ],\n  testTimeout: 30000,\n};\n\n// eslint-disable-next-line import/no-commonjs\nmodule.exports = config;\n"
        },
        {
          "name": "jest.tz.unit.conf.json",
          "type": "blob",
          "size": 1.34,
          "content": "{\n  \"moduleNameMapper\": {\n    \"\\\\.(css|less)$\": \"<rootDir>/frontend/test/__mocks__/styleMock.js\",\n    \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/frontend/test/__mocks__/fileMock.js\",\n    \"^cljs/(.*)$\": \"<rootDir>/target/cljs_dev/$1\",\n    \"^d3-(.*)$\": \"<rootDir>/node_modules/d3-$1/dist/d3-$1\",\n    \"react-markdown\": \"<rootDir>/node_modules/react-markdown/react-markdown.min.js\",\n    \"\\\\.svg\\\\?(component|source)\": \"<rootDir>/frontend/test/__mocks__/svgMock.jsx\"\n  },\n  \"transformIgnorePatterns\": [\n    \"<rootDir>/node_modules/(?!rehype-external-links|d3/)\"\n  ],\n  \"testMatch\": [\"<rootDir>/frontend/**/*.tz.unit.spec.{js,ts,jsx,tsx}\"],\n  \"modulePaths\": [\n    \"<rootDir>/frontend/test\",\n    \"<rootDir>/frontend/src\",\n    \"<rootDir>/enterprise/frontend/src\"\n  ],\n  \"setupFiles\": [\n    \"<rootDir>/frontend/test/jest-setup.js\",\n    \"<rootDir>/frontend/test/metabase-bootstrap.js\",\n    \"<rootDir>/frontend/test/register-visualizations.js\"\n  ],\n  \"globals\": {\n    \"ace\": {},\n    \"ga\": {}\n  },\n  \"coverageDirectory\": \"./\",\n  \"coverageReporters\": [\"text\", \"json-summary\"],\n  \"collectCoverageFrom\": [\"frontend/src/**/*.{js,ts,jsx,tsx}\"],\n  \"coveragePathIgnorePatterns\": [\n    \"/node_modules/\",\n    \"/frontend/src/metabase/visualizations/lib/errors.js\"\n  ],\n  \"testEnvironment\": \"jest-environment-jsdom\",\n  \"testTimeout\": 30000\n}\n"
        },
        {
          "name": "locales",
          "type": "tree",
          "content": null
        },
        {
          "name": "loki.config.js",
          "type": "blob",
          "size": 0.55,
          "content": "module.exports = {\n  diffingEngine: \"looks-same\",\n  storiesFilter: [\n    \"static-viz\",\n    \"viz\",\n    \"^visualizations/shared\",\n    \"^embed\",\n    \"^design system\",\n    \"^Inputs/DatePicker Dates range\",\n    \"^Parameters/DatePicker\",\n  ].join(\"|\"),\n  configurations: {\n    \"chrome.laptop\": {\n      target: \"chrome.docker\",\n      width: 1366,\n      height: 768,\n      deviceScaleFactor: 1,\n      mobile: false,\n    },\n  },\n  \"looks-same\": {\n    strict: false,\n    tolerance: 6,\n    antialiasingTolerance: 0,\n    ignoreAntialiasing: true,\n    ignoreCaret: true,\n  },\n};\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 21.9,
          "content": "{\n  \"name\": \"metabase\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"description\": \"Metabase Analytics Report Server\",\n  \"repository\": \"https://github.com/metabase/metabase\",\n  \"license\": \"private\",\n  \"engines\": {\n    \"node\": \">=18\",\n    \"yarn\": \"^1.12.3\"\n  },\n  \"dependencies\": {\n    \"@dnd-kit/core\": \"^6.0.8\",\n    \"@dnd-kit/modifiers\": \"^6.0.1\",\n    \"@dnd-kit/sortable\": \"^8.0.0\",\n    \"@emotion/cache\": \"^11.11.0\",\n    \"@emotion/is-prop-valid\": \"^1.1.1\",\n    \"@emotion/react\": \"^11.11.0\",\n    \"@emotion/styled\": \"^11.11.0\",\n    \"@juggle/resize-observer\": \"^3.4.0\",\n    \"@mantine/core\": \"^6.0.13\",\n    \"@mantine/dates\": \"^6.0.13\",\n    \"@mantine/hooks\": \"^6.0.13\",\n    \"@react-oauth/google\": \"^0.11.1\",\n    \"@reduxjs/toolkit\": \"^2.5.0\",\n    \"@snowplow/browser-tracker\": \"^3.1.6\",\n    \"@tanstack/react-virtual\": \"^3.1.2\",\n    \"@tippyjs/react\": \"^4.2.6\",\n    \"@types/react-router\": \"3.0.27\",\n    \"@types/redux-auth-wrapper\": \"^2.0.16\",\n    \"@visx/axis\": \"^3.10.1\",\n    \"@visx/clip-path\": \"^3.3.0\",\n    \"@visx/grid\": \"^3.5.0\",\n    \"@visx/group\": \"^3.3.0\",\n    \"@visx/scale\": \"^3.5.0\",\n    \"@visx/shape\": \"^3.5.0\",\n    \"@visx/text\": \"^3.3.0\",\n    \"ace-builds\": \"^1.4.14\",\n    \"bowser\": \"^2.11.0\",\n    \"buffer\": \"^6.0.3\",\n    \"classnames\": \"^2.1.3\",\n    \"clipboardy\": \"^4.0.0\",\n    \"color\": \"^4.2.3\",\n    \"crc-32\": \"^1.2.2\",\n    \"cron-expression-validator\": \"^1.0.20\",\n    \"cronstrue\": \"^2.11.0\",\n    \"crossfilter\": \"^1.3.12\",\n    \"crypto-browserify\": \"^3.12.0\",\n    \"csv-parse\": \"^5.5.6\",\n    \"csv-stringify\": \"^6.5.0\",\n    \"d3\": \"^7.9.0\",\n    \"d3-scale\": \"^4.0.2\",\n    \"dayjs\": \"^1.10.4\",\n    \"detect-package-manager\": \"^3.0.2\",\n    \"diff\": \"^3.2.0\",\n    \"echarts\": \"^5.5.1-rc.1\",\n    \"fast-text-encoding\": \"^1.0.6\",\n    \"formik\": \"^2.4.5\",\n    \"hast-util-from-html\": \"^2.0.1\",\n    \"hast-util-to-html\": \"^9.0.0\",\n    \"history\": \"3\",\n    \"html2canvas-pro\": \"^1.5.0\",\n    \"humanize-plus\": \"^1.8.1\",\n    \"icepick\": \"2.4.0\",\n    \"iframe-resizer\": \"~4.3.2\",\n    \"immer\": \"^9.0.17\",\n    \"inflection\": \"^1.7.1\",\n    \"inquirer-toggle\": \"^1.0.1\",\n    \"js-cookie\": \"^2.1.2\",\n    \"jspdf\": \"^2.5.2\",\n    \"jsrsasign\": \"^11.0.0\",\n    \"kbar\": \"^0.1.0-beta.45\",\n    \"leaflet\": \"^1.2.0\",\n    \"leaflet-draw\": \"^0.4.9\",\n    \"leaflet.heat\": \"^0.2.0\",\n    \"lodash.debounce\": \"^4.0.8\",\n    \"lodash.orderby\": \"^4.6.0\",\n    \"merge-refs\": \"^1.3.0\",\n    \"moment-timezone\": \"^0.5.38\",\n    \"mustache\": \"^2.3.2\",\n    \"normalizr\": \"^3.0.2\",\n    \"ora\": \"^8.0.1\",\n    \"password-generator\": \"^2.0.1\",\n    \"process\": \"^0.11.10\",\n    \"prop-types\": \"^15.5.7\",\n    \"re-reselect\": \"^4.0.1\",\n    \"react\": \"^18.2.0\",\n    \"react-ace\": \"^10.1.0\",\n    \"react-ansi-style\": \"^1.0.0\",\n    \"react-beautiful-dnd\": \"^13.1.1\",\n    \"react-color\": \"^2.14.1\",\n    \"react-copy-to-clipboard\": \"^5.0.1\",\n    \"react-dnd\": \"4\",\n    \"react-dnd-html5-backend\": \"4\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-draggable\": \"^4.4.5\",\n    \"react-dropzone\": \"^14.2.3\",\n    \"react-grid-layout\": \"^1.2.5\",\n    \"react-innertext\": \"^1.1.5\",\n    \"react-is\": \"^18.2.0\",\n    \"react-markdown\": \"^8.0.7\",\n    \"react-redux\": \"^9.1.2\",\n    \"react-resizable\": \"^3.0.5\",\n    \"react-router\": \"3\",\n    \"react-router-redux\": \"^4.0.8\",\n    \"react-transition-group\": \"^4.4.5\",\n    \"react-use\": \"^17.5.1\",\n    \"react-virtualized\": \"^9.22.3\",\n    \"reduce-reducers\": \"^1.0.4\",\n    \"redux-actions\": \"^2.0.1\",\n    \"redux-auth-wrapper\": \"^2.1.0\",\n    \"redux-promise\": \"^0.6.0\",\n    \"regenerator-runtime\": \"^0.14.1\",\n    \"rehype-external-links\": \"^2.0.1\",\n    \"remark-gfm\": \"1.0.0\",\n    \"reselect\": \"^5.1.0\",\n    \"resize-observer-polyfill\": \"^1.5.1\",\n    \"screenfull\": \"^6.0.2\",\n    \"scroll-into-view-if-needed\": \"^3.1.0\",\n    \"server-text-width\": \"^1.0.2\",\n    \"simple-statistics\": \"^3.0.0\",\n    \"slugg\": \"^1.2.1\",\n    \"sql-formatter\": \"^15.1.2\",\n    \"stream-browserify\": \"^3.0.0\",\n    \"tether\": \"^1.2.0\",\n    \"tippy.js\": \"^6.3.5\",\n    \"ts-pattern\": \"^5.1.2\",\n    \"ttag\": \"1.7.21\",\n    \"typescript\": \"^5.4.5\",\n    \"underscore\": \"~1.13.3\",\n    \"use-debounce\": \"^10.0.0\",\n    \"yup\": \"^0.32.11\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.23.0\",\n    \"@babel/core\": \"^7.23.3\",\n    \"@babel/node\": \"^7.22.19\",\n    \"@babel/preset-env\": \"^7.24.8\",\n    \"@babel/preset-react\": \"^7.23.3\",\n    \"@babel/preset-typescript\": \"^7.24.7\",\n    \"@bahmutov/cypress-esbuild-preprocessor\": \"^2.2.0\",\n    \"@cypress/grep\": \"^4.0.1\",\n    \"@cypress/skip-test\": \"^2.6.1\",\n    \"@emotion/babel-plugin\": \"^11.11.0\",\n    \"@esbuild-plugins/node-modules-polyfill\": \"^0.2.2\",\n    \"@inquirer/prompts\": \"^5.3.8\",\n    \"@loki/create-async-callback\": \"^0.35.0\",\n    \"@peculiar/webcrypto\": \"^1.5.0\",\n    \"@pmmmwh/react-refresh-webpack-plugin\": \"0.5.10\",\n    \"@rspack/cli\": \"^1.1.6\",\n    \"@rspack/core\": \"^1.1.6\",\n    \"@rspack/plugin-react-refresh\": \"^1.0.1\",\n    \"@sinonjs/fake-timers\": \"^9.1.2\",\n    \"@storybook/addon-a11y\": \"^6.5.16\",\n    \"@storybook/addon-actions\": \"6.5.16\",\n    \"@storybook/addon-essentials\": \"6.5.16\",\n    \"@storybook/addon-interactions\": \"^6.5.16\",\n    \"@storybook/addon-links\": \"6.5.16\",\n    \"@storybook/blocks\": \"^7.0.18\",\n    \"@storybook/builder-webpack5\": \"6.5.16\",\n    \"@storybook/jest\": \"^0.2.3\",\n    \"@storybook/manager-webpack5\": \"6.5.16\",\n    \"@storybook/react\": \"6.5.16\",\n    \"@storybook/testing-library\": \"^0.2.2\",\n    \"@svgr/webpack\": \"^8.0.1\",\n    \"@swc/core\": \"^1.7.0\",\n    \"@swc/plugin-emotion\": \"^3.0.10\",\n    \"@testing-library/cypress\": \"^10.0.2\",\n    \"@testing-library/jest-dom\": \"^6.4.8\",\n    \"@testing-library/react\": \"^16.0.0\",\n    \"@testing-library/react-hooks\": \"^8.0.0\",\n    \"@testing-library/user-event\": \"^14.5.2\",\n    \"@types/babel__core\": \"^7.20.4\",\n    \"@types/babel__preset-env\": \"^7.9.5\",\n    \"@types/color\": \"^3.0.2\",\n    \"@types/crossfilter\": \"^0.0.34\",\n    \"@types/d3\": \"^7.4.3\",\n    \"@types/d3-array\": \"^3.2.1\",\n    \"@types/d3-scale\": \"^4.0.8\",\n    \"@types/d3-time\": \"^3.0.3\",\n    \"@types/d3-time-format\": \"^4.0.3\",\n    \"@types/dc\": \"0.0.29\",\n    \"@types/diff\": \"^3.5.4\",\n    \"@types/eslint\": \"7.29.0\",\n    \"@types/glob\": \"^7.1.4\",\n    \"@types/hast\": \"^3.0.2\",\n    \"@types/history\": \"3.2.5\",\n    \"@types/humanize-plus\": \"^1.8.0\",\n    \"@types/icepick\": \"2.3.0\",\n    \"@types/iframe-resizer\": \"^3.5.9\",\n    \"@types/inflection\": \"^1.13.0\",\n    \"@types/jest\": \"^29.2.3\",\n    \"@types/js-cookie\": \"^2.2.7\",\n    \"@types/jsonwebtoken\": \"^9.0.1\",\n    \"@types/jsrsasign\": \"^10.5.12\",\n    \"@types/leaflet\": \"^1.7.5\",\n    \"@types/leaflet-draw\": \"^0.4.14\",\n    \"@types/leaflet.heat\": \"^0.2.1\",\n    \"@types/lodash.clonedeep\": \"^4.5.9\",\n    \"@types/lodash.debounce\": \"^4.0.9\",\n    \"@types/lodash.orderby\": \"^4.6.9\",\n    \"@types/mustache\": \"^4.1.2\",\n    \"@types/postcss-import\": \"^12.0.1\",\n    \"@types/postcss-url\": \"^8.0.2\",\n    \"@types/prettier\": \"1.19.1\",\n    \"@types/prop-types\": \"^15.7.4\",\n    \"@types/raf\": \"^3.4.0\",\n    \"@types/react\": \"^18.3.3\",\n    \"@types/react-beautiful-dnd\": \"^13.1.3\",\n    \"@types/react-color\": \"^2.17.6\",\n    \"@types/react-copy-to-clipboard\": \"^5.0.2\",\n    \"@types/react-dom\": \"^18.2.17\",\n    \"@types/react-grid-layout\": \"^1.1.3\",\n    \"@types/react-is\": \"^18.2.4\",\n    \"@types/react-resizable\": \"^3.0.4\",\n    \"@types/react-router-redux\": \"^4.0.53\",\n    \"@types/react-textarea-autosize\": \"^4.3.6\",\n    \"@types/react-transition-group\": \"^4.4.5\",\n    \"@types/react-virtualized\": \"^9.21.13\",\n    \"@types/redux-actions\": \"^2.6.5\",\n    \"@types/redux-promise\": \"^0.5.32\",\n    \"@types/tether\": \"^1.4.6\",\n    \"@types/underscore\": \"^1.11.3\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.21.0\",\n    \"@typescript-eslint/parser\": \"^6.21.0\",\n    \"arg\": \"^5.0.0\",\n    \"babel-eslint\": \"10.1.0\",\n    \"babel-loader\": \"^9.1.2\",\n    \"babel-plugin-ttag\": \"^1.7.26\",\n    \"chalk\": \"^4\",\n    \"chromatic\": \"^10.2.0\",\n    \"commander\": \"^12.1.0\",\n    \"concurrently\": \"^8.2.2\",\n    \"conventional-changelog-cli\": \"^5.0.0\",\n    \"cross-fetch\": \"^3.1.5\",\n    \"css-loader\": \"^6.10.0\",\n    \"cypress\": \"^13.9.0\",\n    \"cypress-multi-reporters\": \"^1.6.4\",\n    \"cypress-real-events\": \"^1.12.0\",\n    \"cypress-terminal-report\": \"^6.1.2\",\n    \"esbuild\": \"^0.21.1\",\n    \"eslint\": \"7.32.0\",\n    \"eslint-import-resolver-webpack\": \"^0.8.3\",\n    \"eslint-plugin-cypress\": \"^2.12.1\",\n    \"eslint-plugin-depend\": \"^0.9.0\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"eslint-plugin-jest\": \"^27.2.0\",\n    \"eslint-plugin-jest-dom\": \"^5.4.0\",\n    \"eslint-plugin-jest-formatting\": \"^3.1.0\",\n    \"eslint-plugin-no-only-tests\": \"^2.4.0\",\n    \"eslint-plugin-postcss-modules\": \"^2.0.0\",\n    \"eslint-plugin-react\": \"^7.32.2\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-storybook\": \"^0.9.0\",\n    \"eslint-plugin-testing-library\": \"^5.11.1\",\n    \"fetch-mock\": \"^9.11.0\",\n    \"fork-ts-checker-webpack-plugin\": \"^9.0.2\",\n    \"get-nonce\": \"^1.0.1\",\n    \"glob\": \"^7.1.1\",\n    \"html-webpack-plugin\": \"5.5.0\",\n    \"http-server\": \"^14.1.1\",\n    \"husky\": \"^8.0.2\",\n    \"inquirer-file-selector\": \"^0.2.1\",\n    \"jest\": \"^29.7.0\",\n    \"jest-canvas-mock\": \"^2.5.2\",\n    \"jest-environment-jsdom\": \"^29.7.0\",\n    \"jest-junit\": \"^16.0.0\",\n    \"jest-localstorage-mock\": \"^2.4.22\",\n    \"jest-watch-typeahead\": \"^2.2.1\",\n    \"jose\": \"^5.6.3\",\n    \"json-to-pretty-yaml\": \"^1.2.2\",\n    \"jsonwebtoken\": \"^9.0.0\",\n    \"knex\": \"^2.4.2\",\n    \"lint-staged\": \"^13.1.2\",\n    \"loki\": \"^0.35.0\",\n    \"mini-css-extract-plugin\": \"2.7.2\",\n    \"mocha\": \"^10.2.0\",\n    \"mocha-junit-reporter\": \"^2.2.1\",\n    \"mochawesome\": \"^7.1.3\",\n    \"mochawesome-merge\": \"^4.2.1\",\n    \"mochawesome-report-generator\": \"^6.2.0\",\n    \"mockdate\": \"^2.0.2\",\n    \"mutationobserver-shim\": \"^0.3.7\",\n    \"mysql2\": \"^3.9.8\",\n    \"node-polyfill-webpack-plugin\": \"^3.0.0\",\n    \"null-loader\": \"^4.0.1\",\n    \"open\": \"^10.1.0\",\n    \"open-cli\": \"^8.0.0\",\n    \"patch-package\": \"^8.0.0\",\n    \"pg\": \"^8.8.0\",\n    \"postcss\": \"^8.4.19\",\n    \"postcss-discard-comments\": \"^7.0.1\",\n    \"postcss-import\": \"15.1.0\",\n    \"postcss-loader\": \"7.0.2\",\n    \"postcss-nested\": \"^7.0.2\",\n    \"postcss-preset-env\": \"^6.7.0\",\n    \"postcss-styled-syntax\": \"^0.6.4\",\n    \"postcss-url\": \"^10.1.3\",\n    \"postinstall-postinstall\": \"^2.1.0\",\n    \"prettier\": \"^3.3.3\",\n    \"promise-loader\": \"^1.0.0\",\n    \"raf\": \"^3.4.0\",\n    \"react-docgen-typescript-plugin\": \"^1.0.6\",\n    \"react-refresh\": \"^0.14.2\",\n    \"reg-cli\": \"^0.17.7\",\n    \"semver\": \"^7.6.3\",\n    \"shadow-cljs\": \"^2.28.12\",\n    \"source-map-loader\": \"^4.0.1\",\n    \"storybook-addon-pseudo-states\": \"^3.1.1\",\n    \"stylelint\": \"^16.2.1\",\n    \"stylelint-config-css-modules\": \"^4.4.0\",\n    \"stylelint-config-standard\": \"^36.0.0\",\n    \"swc-loader\": \"^0.2.6\",\n    \"terser-webpack-plugin\": \"^5.3.9\",\n    \"tsx\": \"^4.19.2\",\n    \"webpack\": \"^5.94.0\",\n    \"webpack-bundle-analyzer\": \"^4.10.1\",\n    \"webpack-cli\": \"^5.1.1\",\n    \"webpack-dev-server\": \"^5.0.4\",\n    \"webpack-notifier\": \"1.15.0\",\n    \"webpack-stats-plugin\": \"^1.1.3\",\n    \"xlsx\": \"https://cdn.sheetjs.com/xlsx-0.20.2/xlsx-0.20.2.tgz\",\n    \"yaml-lint\": \"~1.6.0\",\n    \"yarn-deduplicate\": \"^6.0.2\"\n  },\n  \"resolutions\": {\n    \"ansi-html\": \"https://registry.npmjs.org/ansi-html-community/-/ansi-html-community-0.0.8.tgz\",\n    \"ansi-regex\": \"5.0.1\",\n    \"cookie\": \"^0.7.0\",\n    \"cross-spawn\": \"^7.0.5\",\n    \"d3-color\": \"^3.1.0\",\n    \"elliptic\": \"^6.6.0\",\n    \"debug\": \"^4.3.4\",\n    \"follow-redirects\": \"^1.15.5\",\n    \"jsdom\": \"^22.1.0\",\n    \"json5\": \"2.2.2\",\n    \"nth-check\": \"2.0.1\",\n    \"@types/react\": \"^18.2.42\",\n    \"@types/react-dom\": \"^18.2.17\",\n    \"set-value\": \"4.0.1\",\n    \"source-map-js\": \"1.2.0\",\n    \"unset-value\": \"2.0.1\",\n    \"webpack-dev-middleware\": \"^5.3.4\",\n    \"nanoid\": \"^3.3.8\",\n    \"path-to-regexp\": \"^0.1.12\"\n  },\n  \"scripts\": {\n    \"build\": \"yarn build:cljs && yarn build:js\",\n    \"build-embedding-sdk\": \"yarn && yarn build-release:cljs && yarn embedding-sdk:generate-package && yarn embedding-sdk:generate-nextjs-compat && yarn build-release:sdk && yarn build-embedding-sdk-cli && yarn embedding-sdk:fixup-types-imports\",\n    \"build-embedding-sdk:pure\": \"WEBPACK_BUNDLE=development webpack --config webpack.embedding-sdk.config.js\",\n    \"build-embedding-sdk:watch\": \"yarn embedding-sdk:generate-package && yarn embedding-sdk:generate-nextjs-compat && yarn build-embedding-sdk:pure --watch\",\n    \"build-embedding-sdk-cli\": \"webpack --config webpack.embedding-sdk-cli.config.js\",\n    \"build-embedding-sdk-cli:watch\": \"yarn build-embedding-sdk-cli --watch\",\n    \"build-hot\": \"rm -f target/cljs_dev/cljs.core.js && yarn concurrently -n 'cljs,js' -c 'yellow,green' 'yarn build-hot:cljs' 'yarn build-hot:js-wait'\",\n    \"build-hot:cljs\": \"yarn && shadow-cljs watch app\",\n    \"build-hot:js\": \"yarn && yarn clean-dev:js && NODE_OPTIONS=--max-old-space-size=8196 WEBPACK_BUNDLE=hot rspack serve\",\n    \"build-hot:js-wait\": \"yarn wait:cljs; yarn build-hot:js\",\n    \"build-pure:cljs\": \"yarn clean-dev:cljs && shadow-cljs compile app\",\n    \"build-release\": \"yarn build-release:cljs && yarn build-release:js\",\n    \"build-release:cljs\": \"yarn clean-release:cljs && shadow-cljs release app\",\n    \"build-release:js\": \"WEBPACK_BUNDLE=production NODE_OPTIONS=--max-old-space-size=8196 rspack build\",\n    \"build-release:sdk\": \"WEBPACK_BUNDLE=production webpack --config webpack.embedding-sdk.config.js\",\n    \"build-release:static-viz\": \"WEBPACK_BUNDLE=production webpack --config webpack.static-viz.config.js\",\n    \"build-shared\": \"yarn && webpack --config webpack.shared.config.js\",\n    \"build-static-viz\": \"yarn && yarn build-release:cljs && WEBPACK_BUNDLE=production webpack --config webpack.static-viz.config.js\",\n    \"build-static-viz:watch\": \"webpack --config webpack.static-viz.config.js --watch\",\n    \"build-static-viz:watch-wait\": \"yarn wait:cljs; yarn build-static-viz:watch\",\n    \"build-stats\": \"yarn && webpack --json > stats.json\",\n    \"build-storybook\": \"NODE_ENV=development yarn build:cljs && NODE_OPTIONS=--max-old-space-size=8196 build-storybook\",\n    \"build-storybook-embedding-sdk\": \"NODE_OPTIONS=--max-old-space-size=8196 IS_EMBEDDING_SDK=true build-storybook -c .storybook-sdk --quiet\",\n    \"build-watch\": \"yarn concurrently -n 'cljs,js' 'yarn build-watch:cljs' 'yarn build-watch:js'\",\n    \"build-watch:cljs\": \"yarn && shadow-cljs watch app\",\n    \"build-watch:js\": \"yarn && NODE_OPTIONS=--max-old-space-size=8196 rspack serve --watch\",\n    \"build:cljs\": \"yarn && yarn build-pure:cljs\",\n    \"build:js\": \"yarn && NODE_OPTIONS=--max-old-space-size=8196 rspack build\",\n    \"chromatic\": \"yarn build:cljs && NODE_OPTIONS=--max-old-space-size=8196 chromatic\",\n    \"ci\": \"yarn ci-frontend && yarn ci-backend\",\n    \"ci-backend\": \"clojure -X:dev:ee:ee-dev:drivers:drivers-dev:eastwood && clojure -X:dev:test\",\n    \"ci-frontend\": \"yarn lint && yarn test\",\n    \"clean-cypress-artifacts\": \"rm -R -f cypress/\",\n    \"clean-dev:cljs\": \"rm -rf target/cljs_dev/*\",\n    \"clean-dev:js\": \"rm -rf resources/frontend_client/app/dist target/classes/frontend_client/app/dist\",\n    \"clean-release:cljs\": \"rm -rf target/cljs_release/*\",\n    \"clean:cljs\": \"yarn && yarn clean-dev:cljs && yarn clean-release:cljs\",\n    \"cljs-nrepl\": \"yarn && shadow-cljs node-repl -d cider/cider-nrepl:0.45.0 -d cider/piggieback:0.5.3 -d refactor-nrepl/refactor-nrepl:3.9.1\",\n    \"cljs-server-restart\": \"yarn && shadow-cljs restart\",\n    \"cljs-server-start\": \"yarn && shadow-cljs start\",\n    \"cljs-server-stop\": \"yarn && shadow-cljs stop\",\n    \"concurrently\": \"yarn && concurrently --kill-others -p name\",\n    \"dev\": \"yarn && yarn clean-dev:cljs && concurrently -n 'backend,frontend,cljs,static-viz' -c 'blue,green,yellow,magenta,red' 'clojure -M:run' 'yarn build-hot:js-wait' 'yarn build-hot:cljs' 'yarn build-static-viz:watch-wait'\",\n    \"dev-ee\": \"yarn && yarn clean-dev:cljs && concurrently -n 'backend,frontend,cljs,static-viz' -c 'blue,green,yellow,magenta,red' 'clojure -M:run:ee' 'MB_EDITION=ee yarn build-hot:js-wait' 'MB_EDITION=ee yarn build-hot:cljs' 'yarn build-static-viz:watch-wait'\",\n    \"embedding-sdk:fixup-types-imports\": \"node ./bin/embedding-sdk/fixup-types-after-compilation.js\",\n    \"embedding-sdk:generate-package\": \"node ./bin/embedding-sdk/generate-sdk-package-files.js\",\n    \"embedding-sdk:generate-changelog\": \"yarn conventional-changelog --config enterprise/frontend/src/embedding-sdk/conventional-changelog-config.js\",\n    \"embedding-sdk:publish\": \"cd ./resources/embedding-sdk && npm publish\",\n    \"embedding-sdk:generate-nextjs-compat\": \"tsx enterprise/frontend/src/embedding-sdk/bin/generate-nextjs-compat.ts\",\n    \"embedding-sdk:test-unit\": \"yarn test-unit enterprise/frontend/src/embedding-sdk/\",\n    \"embedding-sdk:tsc\": \"tsc --project tsconfig.sdk.json\",\n    \"embedding-sdk:clean\": \"rm -rf resources/embedding-sdk/dist && rm -rf resources/embedding-sdk/.tsbuildinfo\",\n    \"embedding-sdk:dev\": \"concurrently -n 'tsc,webpack,fix-types' -c 'blue,green,yellow' 'npm:embedding-sdk:dev:dts' 'npm:embedding-sdk:dev:webpack' 'npm:embedding-sdk:dev:fixup'\",\n    \"embedding-sdk:dev:dts\": \"yarn embedding-sdk:tsc --watch --preserveWatchOutput\",\n    \"embedding-sdk:dev:webpack\": \"SKIP_DTS=true yarn build-embedding-sdk:watch\",\n    \"embedding-sdk:dev:fixup\": \"yarn embedding-sdk:fixup-types-imports --watch\",\n    \"eslint-fix\": \"yarn lint-eslint --fix\",\n    \"generate-cypress-html-report\": \"mochawesome-merge cypress/reports/mochareports/*.json > cypress/reports/cypress-test-report.json && marge cypress/reports/cypress-test-report.json -o cypress/reports/mochareports --inline\",\n    \"lint\": \"yarn lint-eslint && yarn lint-prettier && yarn lint-docs-links && yarn lint-yaml && yarn type-check\",\n    \"lint-docs-links\": \"yarn && ./bin/verify-doc-links\",\n    \"lint-eslint\": \"yarn build:cljs && yarn lint-eslint-pure\",\n    \"lint-eslint-pure\": \"eslint --ext .js,.jsx,.ts,.tsx --rulesdir frontend/lint/eslint-rules --max-warnings 0 --report-unused-disable-directives enterprise/frontend frontend e2e\",\n    \"lint-prettier\": \"yarn && yarn lint-prettier-pure\",\n    \"lint-prettier-pure\": \"prettier --check '{frontend,enterprise/frontend,e2e}/**/*.{js,jsx,ts,tsx,css}'\",\n    \"lint-yaml\": \"yamllint **/*.{yaml,yml} --ignore=node_modules/**/*.{yaml,yml}\",\n    \"postinstall\": \"yarn yarn-deduplicate --scopes @babel && patch-package\",\n    \"precommit\": \"lint-staged --shell\",\n    \"preinstall\": \"echo $npm_execpath | grep -q yarn || echo '\\\\033[0;33mSorry, npm is not supported. Please use Yarn (https://yarnpkg.com/).\\\\033[0m'\",\n    \"prepare\": \"husky install\",\n    \"prettier\": \"prettier --write '{frontend,enterprise/frontend,e2e}/**/*.{js,jsx,ts,tsx,css}'\",\n    \"remove-webpack-cache\": \"rm -rf ./node_modules/.cache\",\n    \"storybook\": \"yarn build:cljs && start-storybook -p 6006\",\n    \"storybook-embedding-sdk\": \"yarn build:cljs && IS_EMBEDDING_SDK=true start-storybook -c .storybook-sdk -p 6006\",\n    \"test\": \"yarn test-unit && yarn test-timezones && yarn test-cypress\",\n    \"test-cljs\": \"yarn && shadow-cljs compile test && node target/node-tests.js\",\n    \"test-cypress\": \"yarn build && ./bin/build-for-test && yarn test-cypress-run\",\n    \"test-cypress-open\": \"./bin/build-for-test && CYPRESS_FE_HEALTHCHECK=false yarn test-cypress-run --e2e --open\",\n    \"test-cypress-open-no-backend\": \"E2E_HOST='http://localhost:3000' yarn test-cypress-run --e2e --open\",\n    \"test-cypress-open-qa\": \"rm -f e2e/support/cypress_sample_instance_data.json && yarn test-qa-dbs:up && QA_DB_ENABLED=true TZ='US/Pacific' yarn test-cypress-open\",\n    \"test-cypress-open-component-sdk\": \"yarn build-embedding-sdk && ./bin/build-for-test && CYPRESS_FE_HEALTHCHECK=false yarn test-cypress-run-component-sdk --open\",\n    \"test-cypress-run\": \"node ./e2e/runner/run_cypress_tests.js\",\n    \"test-cypress-run-component-sdk\": \"CYPRESS_IS_EMBEDDING_SDK=true NODE_OPTIONS=--max-old-space-size=8196 yarn test-cypress-run --component --config-file='e2e/support/cypress-embedding-sdk-component-test.config.js'\",\n    \"test-debug\": \"yarn build:cljs && node --inspect-brk node_modules/.bin/jest --runInBand --detectOpenHandles\",\n    \"test-qa-dbs:down\": \"docker compose -f ./e2e/test/scenarios/docker-compose.yml down\",\n    \"test-qa-dbs:up\": \"docker compose -f ./e2e/test/scenarios/docker-compose.yml up -d\",\n    \"test-timezones\": \"yarn && ./frontend/test/__runner__/run_timezone_tests\",\n    \"test-timezones-unit\": \"yarn build:cljs && jest --silent --maxWorkers=4 --config jest.tz.unit.conf.json\",\n    \"test-unit\": \"yarn build:cljs && jest --maxWorkers=4\",\n    \"test-unit-keep-cljs\": \"jest --maxWorkers=4\",\n    \"test-unit-watch\": \"yarn test-unit --watch\",\n    \"test-unit-watch:cljs\": \"yarn concurrently -n 'cljs,tests' 'yarn build-watch:cljs' 'yarn test-unit-keep-cljs --watch'\",\n    \"test-visual\": \"yarn build && ./bin/build-for-test && yarn test-visual-run\",\n    \"test-visual:loki\": \"yarn loki test --chromeFlags='--headless --disable-gpu'\",\n    \"test-visual:loki-approve-diff\": \"ls .loki/difference | xargs -I _ find .loki/current -name _ | xargs -I _ cp _ .loki/reference/\",\n    \"test-visual:loki-update\": \"yarn loki update --chromeFlags='--headless --disable-gpu'\",\n    \"test-visual:loki-report\": \"node frontend/test/generate-loki-report-json.js && reg-cli --from .loki/report.json --report .loki/report.html\",\n    \"test-visual:loki-report-open\": \"yarn test-visual:loki || (echo 'Visual test failed, opening report...' && yarn test-visual:loki-report && open-cli .loki/report.html)\",\n    \"type-check\": \"yarn clean:cljs && yarn build:cljs && yarn type-check-pure\",\n    \"type-check-pure\": \"tsc --noEmit\",\n    \"validate-e2e-filenames\": \"node e2e/validate-e2e-test-files.js\",\n    \"wait:cljs\": \"echo Waiting for first CLJS build; until [ -f target/cljs_dev/cljs.core.js ]; do sleep 1; done; echo CLJS build done\"\n  },\n  \"lint-staged\": {\n    \"+(frontend|enterprise)/**/*.styled.tsx\": [\n      \"stylelint --customSyntax postcss-styled-syntax --fix\"\n    ],\n    \"+(frontend|enterprise/frontend|e2e)/**/*.css\": [\n      \"stylelint --fix\",\n      \"prettier --write\"\n    ],\n    \"+(frontend|enterprise/frontend)/**/*.{js,jsx,ts,tsx}\": [\n      \"LINT_CSS_MODULES=true eslint --rulesdir frontend/lint/eslint-rules --max-warnings 0 --fix\",\n      \"prettier --write\",\n      \"node ./bin/verify-doc-links\"\n    ],\n    \"e2e/**/*.{js,jsx,ts,jsx}\": [\n      \"eslint --rulesdir frontend/lint/eslint-rules --max-warnings 0 --fix\",\n      \"prettier --write\"\n    ],\n    \"e2e/test/scenarios/*/{*.(js|ts),!(helpers|shared)/*.(js|ts)}\": [\n      \"node e2e/validate-e2e-test-files.js\"\n    ],\n    \"**/*.{clj,cljc,cljs,bb}\": [\n      \"clj-kondo --config ./.clj-kondo/config.edn --config-dir ./.clj-kondo --parallel --lint\",\n      \"./bin/whitespace_lint_staged.sh\"\n    ],\n    \"enterprise/frontend/src/embedding-sdk/README.md\": [\n      \"prettier --write\"\n    ]\n  },\n  \"browserslist\": [\n    \"defaults\"\n  ]\n}\n"
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "postcss.config.js",
          "type": "blob",
          "size": 0.6,
          "content": "/* eslint-env node */\n/* eslint-disable import/no-commonjs */\nconst glob = require(\"glob\");\n\n// eslint-disable-next-line no-undef\nconst SRC_PATH = __dirname + \"/frontend/src/metabase\";\nconst CSS_SRC = glob.sync(SRC_PATH + \"/css/**/*.css\");\n\nmodule.exports = {\n  plugins: {\n    \"postcss-import\": {},\n    \"postcss-url\": {},\n    \"postcss-preset-env\": {\n      stage: 2,\n      importFrom: CSS_SRC,\n      features: {\n        \"custom-media-queries\": true,\n        \"custom-properties\": true,\n        \"focus-visible-pseudo-class\": false,\n      },\n    },\n    \"postcss-discard-comments\": {},\n    \"postcss-nested\": {},\n  },\n};\n"
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "rspack.config.js",
          "type": "blob",
          "size": 11.57,
          "content": "// @ts-check\n/* eslint-env node */\n/* eslint-disable import/no-commonjs */\nconst fs = require(\"fs\");\n\nconst rspack = require(\"@rspack/core\");\nconst ReactRefreshPlugin = require(\"@rspack/plugin-react-refresh\");\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst NodePolyfillPlugin = require(\"node-polyfill-webpack-plugin\");\nconst WebpackNotifierPlugin = require(\"webpack-notifier\");\n\nconst ASSETS_PATH = __dirname + \"/resources/frontend_client/app/assets\";\nconst FONTS_PATH = __dirname + \"/resources/frontend_client/app/fonts\";\nconst SRC_PATH = __dirname + \"/frontend/src/metabase\";\nconst LIB_SRC_PATH = __dirname + \"/frontend/src/metabase-lib\";\nconst ENTERPRISE_SRC_PATH =\n  __dirname + \"/enterprise/frontend/src/metabase-enterprise\";\nconst SDK_SRC_PATH = __dirname + \"/enterprise/frontend/src/embedding-sdk\";\nconst TYPES_SRC_PATH = __dirname + \"/frontend/src/metabase-types\";\nconst CLJS_SRC_PATH = __dirname + \"/target/cljs_release\";\nconst CLJS_SRC_PATH_DEV = __dirname + \"/target/cljs_dev\";\nconst TEST_SUPPORT_PATH = __dirname + \"/frontend/test/__support__\";\nconst BUILD_PATH = __dirname + \"/resources/frontend_client\";\nconst E2E_PATH = __dirname + \"/e2e\";\n\nconst WEBPACK_BUNDLE = process.env.WEBPACK_BUNDLE || \"development\";\nconst devMode = WEBPACK_BUNDLE !== \"production\";\nconst shouldEnableHotRefresh = WEBPACK_BUNDLE === \"hot\";\n\n// Babel:\nconst BABEL_CONFIG = {\n  cacheDirectory: process.env.BABEL_DISABLE_CACHE ? false : \".babel_cache\",\n  plugins: [\"@emotion\"],\n};\n\nconst BABEL_LOADER = { loader: \"babel-loader\", options: BABEL_CONFIG };\n\nconst SWC_LOADER = {\n  loader: \"builtin:swc-loader\",\n  options: {\n    jsc: {\n      loose: true,\n      transform: {\n        react: {\n          runtime: \"automatic\",\n          refresh: shouldEnableHotRefresh,\n        },\n      },\n      parser: {\n        syntax: \"typescript\",\n        tsx: true,\n      },\n      experimental: {\n        plugins: [[\"@swc/plugin-emotion\", { sourceMap: devMode }]],\n      },\n    },\n\n    sourceMaps: true,\n    minify: false, // produces same bundle size, but cuts 1s locally\n    env: {\n      targets: [\"defaults\"],\n    },\n  },\n};\n\nconst CSS_CONFIG = {\n  modules: {\n    auto: filename =>\n      !filename.includes(\"node_modules\") && !filename.includes(\"vendor.css\"),\n    localIdentName: devMode\n      ? \"[name]__[local]___[hash:base64:5]\"\n      : \"[hash:base64:5]\",\n  },\n  importLoaders: 1,\n};\n\nclass OnScriptError {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"OnScriptError\", compilation => {\n      HtmlWebpackPlugin.getHooks(compilation).alterAssetTags.tapAsync(\n        \"OnScriptError\",\n        (data, cb) => {\n          // Manipulate the content\n          data.assetTags.scripts.forEach(script => {\n            script.attributes.onerror = `Metabase.AssetErrorLoad(this)`;\n          });\n          // Tell webpack to move on\n          cb(null, data);\n        },\n      );\n    });\n  }\n}\n\n/** @type {import('@rspack/cli').Configuration} */\nconst config = {\n  mode: devMode ? \"development\" : \"production\",\n  context: SRC_PATH,\n\n  // output a bundle for the app JS and a bundle for styles\n  // eventually we should have multiple (single file) entry points for various pieces of the app to enable code splitting\n  entry: {\n    \"app-main\": \"./app-main.js\",\n    \"app-public\": \"./app-public.js\",\n    \"app-embed\": \"./app-embed.js\",\n    \"vendor-styles\": \"./css/vendor.css\",\n    styles: \"./css/index.module.css\",\n  },\n\n  // we override it for dev mode below\n  devtool: \"source-map\",\n\n  externals: {\n    canvg: \"canvg\",\n    dompurify: \"dompurify\",\n  },\n\n  // output to \"dist\"\n  output: {\n    path: BUILD_PATH + \"/app/dist\",\n    // for production, dev mode is overridden below\n    filename: \"[name].[contenthash].js\",\n    publicPath: \"app/dist/\",\n    hashFunction: \"xxhash64\",\n    clean: !devMode,\n  },\n\n  module: {\n    rules: [\n      {\n        // swc breaks styles for the whole app if we process this file\n        test: /css\\/core\\/fonts\\.styled\\.ts$/,\n        exclude: /node_modules|cljs/,\n        use: [BABEL_LOADER],\n      },\n      {\n        test: /\\.(tsx?|jsx?)$/,\n        exclude: /node_modules|cljs|css\\/core\\/fonts\\.styled\\.ts/,\n        use: [SWC_LOADER],\n        type: \"javascript/auto\",\n      },\n      {\n        test: /\\.(svg|png)$/,\n        type: \"asset/resource\",\n        resourceQuery: { not: [/component|source/] },\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: rspack.CssExtractRspackPlugin.loader,\n            options: {\n              publicPath: \"./\",\n            },\n          },\n          { loader: \"css-loader\", options: CSS_CONFIG },\n          { loader: \"postcss-loader\" },\n        ],\n        type: \"javascript/auto\",\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        enforce: \"pre\",\n        use: [\"source-map-loader\"],\n      },\n      {\n        test: /\\.svg/,\n        type: \"asset/source\",\n        resourceQuery: /source/, // *.svg?source\n      },\n      {\n        test: /\\.svg$/i,\n        issuer: /\\.[jt]sx?$/,\n        resourceQuery: /component/, // *.svg?component\n        use: [\n          {\n            loader: \"@svgr/webpack\",\n            options: {\n              ref: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n  resolve: {\n    extensions: [\n      \".webpack.js\",\n      \".web.js\",\n      \".js\",\n      \".jsx\",\n      \".ts\",\n      \".tsx\",\n      \".css\",\n      \".svg\",\n    ],\n    alias: {\n      assets: ASSETS_PATH,\n      fonts: FONTS_PATH,\n      metabase: SRC_PATH,\n      \"metabase-lib\": LIB_SRC_PATH,\n      \"metabase-enterprise\": ENTERPRISE_SRC_PATH,\n      \"metabase-types\": TYPES_SRC_PATH,\n      \"metabase-dev\": `${SRC_PATH}/dev${devMode ? \"\" : \"-noop\"}.js`,\n      cljs: devMode ? CLJS_SRC_PATH_DEV : CLJS_SRC_PATH,\n      __support__: TEST_SUPPORT_PATH,\n      e2e: E2E_PATH,\n      style: SRC_PATH + \"/css/core/index\",\n      ace: __dirname + \"/node_modules/ace-builds/src-noconflict\",\n      // NOTE @kdoh - 7/24/18\n      // icepick 2.x is es6 by defalt, to maintain backwards compatability\n      // with ie11 point to the minified version\n      icepick: __dirname + \"/node_modules/icepick/icepick.min\",\n      // conditionally load either the EE plugins file or a empty file in the CE code tree\n      \"ee-plugins\":\n        process.env.MB_EDITION === \"ee\"\n          ? ENTERPRISE_SRC_PATH + \"/plugins\"\n          : SRC_PATH + \"/lib/noop\",\n      \"ee-overrides\":\n        process.env.MB_EDITION === \"ee\"\n          ? ENTERPRISE_SRC_PATH + \"/overrides\"\n          : SRC_PATH + \"/lib/noop\",\n      \"embedding-sdk\": SDK_SRC_PATH,\n    },\n  },\n  optimization: {\n    runtimeChunk: \"single\",\n    splitChunks: {\n      cacheGroups: {\n        vendors: {\n          test: /[\\\\/]node_modules[\\\\/](?!(sql-formatter|jspdf|html2canvas-pro)[\\\\/])/,\n          chunks: \"all\",\n          name: \"vendor\",\n        },\n        sqlFormatter: {\n          test: /[\\\\/]node_modules[\\\\/]sql-formatter[\\\\/]/,\n          chunks: \"all\",\n          name: \"sql-formatter\",\n        },\n        jspdf: {\n          test: /[\\\\/]node_modules[\\\\/]jspdf[\\\\/]/,\n          chunks: \"all\",\n          name: \"jspdf\",\n        },\n        html2canvas: {\n          test: /[\\\\/]node_modules[\\\\/]html2canvas-pro[\\\\/]/,\n          chunks: \"all\",\n          name: \"html2canvas\",\n        },\n      },\n    },\n    minimizer: [new rspack.SwcJsMinimizerRspackPlugin()],\n  },\n\n  plugins: [\n    // Extracts initial CSS into a standard stylesheet that can be loaded in parallel with JavaScript\n    new rspack.CssExtractRspackPlugin({\n      filename: devMode ? \"[name].css\" : \"[name].[contenthash].css\",\n      chunkFilename: devMode ? \"[id].css\" : \"[id].[contenthash].css\",\n    }),\n    new OnScriptError(),\n    new HtmlWebpackPlugin({\n      filename: \"../../index.html\",\n      chunksSortMode: \"manual\",\n      chunks: [\"vendor\", \"vendor-styles\", \"styles\", \"app-main\"],\n      template: __dirname + \"/resources/frontend_client/index_template.html\",\n    }),\n    new HtmlWebpackPlugin({\n      filename: \"../../public.html\",\n      chunksSortMode: \"manual\",\n      chunks: [\"vendor\", \"vendor-styles\", \"styles\", \"app-public\"],\n      template: __dirname + \"/resources/frontend_client/index_template.html\",\n    }),\n    new HtmlWebpackPlugin({\n      filename: \"../../embed.html\",\n      chunksSortMode: \"manual\",\n      chunks: [\"vendor\", \"vendor-styles\", \"styles\", \"app-embed\"],\n      template: __dirname + \"/resources/frontend_client/index_template.html\",\n    }),\n    new rspack.BannerPlugin({\n      banner:\n        \"/*\\n* This file is subject to the terms and conditions defined in\\n * file 'LICENSE.txt', which is part of this source code package.\\n */\\n\",\n    }),\n    new NodePolyfillPlugin(), // for crypto, among others\n    new rspack.EnvironmentPlugin({\n      WEBPACK_BUNDLE: \"development\",\n      MB_LOG_ANALYTICS: \"false\",\n    }),\n    // https://github.com/remarkjs/remark/discussions/903\n    new rspack.ProvidePlugin({ process: \"process/browser.js\" }),\n    // https://github.com/metabase/metabase/issues/35374\n    new rspack.NormalModuleReplacementPlugin(\n      /.\\/use-popover.js/,\n      `${SRC_PATH}/ui/components/overlays/Popover/use-popover`,\n    ),\n  ],\n};\n\nif (shouldEnableHotRefresh) {\n  config.target = \"web\";\n\n  if (!config.output || !config.plugins) {\n    throw new Error(\"webpack config is missing configuration\");\n  }\n\n  // suffixing with \".hot\" allows us to run both `yarn run build-hot` and `yarn run test` or `yarn run test-watch` simultaneously\n  config.output.filename = \"[name].hot.bundle.js\";\n\n  // point the publicPath (inlined in index.html by HtmlWebpackPlugin) to the hot-reloading server\n  config.output.publicPath =\n    \"http://localhost:8080/\" + config.output.publicPath;\n\n  config.devServer = {\n    hot: true,\n    client: {\n      progress: false,\n      overlay: false,\n    },\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    // tweak stats to make the output in the console more legible\n    devMiddleware: {\n      stats: { preset: \"errors-warnings\", timings: true },\n      writeToDisk: true,\n      // if webpack doesn't reload UI after code change in development\n      // watchOptions: {\n      //     aggregateTimeout: 300,\n      //     poll: 1000\n      // }\n      // if you want to reduce stats noise\n      // stats: 'minimal' // values: none, errors-only, minimal, normal, verbose\n    },\n    host: \"0.0.0.0\",\n  };\n\n  config.watchOptions = {\n    // Shadow's live reload does not work. I assume it could be related to rspack migration.  Namely, the compiled cljs\n    // is loaded on save. On page reload however, the compiled cljs that was used on rspack initialization is used\n    // again. The following exception fixes that, for the cost of always reloading the page when compiled cljs changes.\n    ignored: [\"**/node_modules\" /*, CLJS_SRC_PATH_DEV + \"/**\" */],\n  };\n\n  config.plugins.unshift(\n    new ReactRefreshPlugin({\n      overlay: false,\n    }),\n  );\n}\n\nif (devMode) {\n  if (!config.output || !config.resolve || !config.plugins) {\n    throw new Error(\"webpack config is missing configuration\");\n  }\n\n  // replace minified files with un-minified versions\n  for (const name in config.resolve.alias) {\n    const minified = config.resolve.alias[name];\n    const unminified = minified.replace(/[.-\\/]min\\b/g, \"\");\n    if (minified !== unminified && fs.existsSync(unminified)) {\n      config.resolve.alias[name] = unminified;\n    }\n  }\n\n  // by default enable \"cheap\" source maps for fast re-build speed\n  // with BETTER_SOURCE_MAPS we switch to sourcemaps that work with breakpoints and makes stacktraces readable\n  config.devtool = process.env.BETTER_SOURCE_MAPS\n    ? \"eval-source-map\"\n    : \"cheap-module-source-map\";\n\n  // helps with source maps\n  config.output.devtoolModuleFilenameTemplate = \"[absolute-resource-path]\";\n\n  config.plugins.push(\n    new WebpackNotifierPlugin({\n      excludeWarnings: true,\n      skipFirstNotification: true,\n    }),\n  );\n}\n\nmodule.exports = config;\n"
        },
        {
          "name": "shadow-cljs.edn",
          "type": "blob",
          "size": 1.38,
          "content": ";; shadow-cljs configuration\n{:deps {:aliases [:cljs]}\n\n :nrepl\n {:middleware\n  [cider.nrepl/cider-middleware\n   cider.piggieback/wrap-cljs-repl\n   refactor-nrepl.middleware/wrap-refactor]\n  :port 50655}\n\n :builds\n {:app\n  {:target     :npm-module\n   :output-dir \"target/cljs_release/\"\n   :dev        {:output-dir \"target/cljs_dev/\"\n                :compiler-options {:reader-features #{:cljs-dev}}}\n   :compiler-options {:reader-features #{:cljs-release}\n                      :source-map      true}\n   :closure-defines {goog.debug.LOGGING_ENABLED true}\n   :entries    [metabase.legacy-mbql.js\n                metabase.lib.column-group\n                metabase.lib.js\n                metabase.lib.limit\n                metabase.lib.types.isa\n                metabase.models.dashboard.constants\n                metabase.models.params.shared\n                metabase.types\n                metabase.util.currency\n                metabase.util.devtools\n                metabase.util.formatting.constants\n                metabase.util.formatting.date\n                metabase.util.formatting.numbers\n                metabase.util.formatting.time\n                metabase.util.time\n                metabase.xrays.domain-entities.queries.util]}\n\n  :test\n  {:target           :node-test\n   :output-to        \"target/node-tests.js\"\n   :ns-regexp        \"-test$\"\n   :compiler-options {:reader-features #{:cljs-test}}}}}\n"
        },
        {
          "name": "snowplow",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "summary",
          "type": "blob",
          "size": 0.1,
          "content": "**Inputs:**\n\n- : branch\n\ntriggered by: userName\n**Inputs:**\n\n- `branch`: branch\n\ntriggered by: userName\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_config",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.base.json",
          "type": "blob",
          "size": 0.45,
          "content": "{\n  \"compilerOptions\": {\n    \"jsx\": \"react-jsx\",\n    \"target\": \"esnext\",\n    \"allowSyntheticDefaultImports\": true,\n    \"module\": \"commonjs\",\n    \"isolatedModules\": true,\n    \"strict\": true,\n    \"moduleResolution\": \"node\",\n    \"skipLibCheck\": true,\n    \"allowJs\": true,\n    \"esModuleInterop\": true,\n    \"experimentalDecorators\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"resolveJsonModule\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  }\n}\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.77,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"build\",\n    \"paths\": {\n      \"*\": [\n        \"./frontend/src/*\",\n        \"./frontend/test/*\",\n        \"./enterprise/frontend/src/*\",\n        \"./enterprise/frontend/test/*\"\n      ],\n      \"cljs/*\": [\"./target/cljs_dev/*\"]\n    }\n  },\n  \"include\": [\n    \"frontend/src/**/*\",\n    \"enterprise/frontend/src/**/*\",\n    \"frontend/test/**/*\",\n    \"enterprise/frontend/test/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    // The following files will load `frontend/src/metabase/app` which will conflict with\n    // `frontend/src/metabase/App.tsx`, since now we're loading both JS and TS files.\n    \"frontend/src/metabase/app-main.js\",\n    \"frontend/src/metabase/app-public.js\",\n    \"frontend/src/metabase/app-embed.js\"\n  ]\n}\n"
        },
        {
          "name": "tsconfig.sdk.json",
          "type": "blob",
          "size": 0.96,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    // should make tsc run faster, we may need to delete the buildinfo file if we run into issues\n    \"incremental\": true,\n    // so that it doesn't accidentally end up in the distributed package\n    \"tsBuildInfoFile\": \"./resources/embedding-sdk/.tsbuildinfo\",\n    \"declaration\": true,\n    \"emitDeclarationOnly\": true,\n    \"outDir\": \"./resources/embedding-sdk/dist\",\n    \"paths\": {\n      \"*\": [\"./frontend/src/*\", \"./enterprise/frontend/src/*\"],\n      \"cljs/*\": [\"./target/cljs_release/*\"]\n    }\n  },\n  \"include\": [\n    \"frontend/src/**/*.ts\",\n    \"frontend/src/**/*.tsx\",\n    \"enterprise/frontend/src/**/*.ts\",\n    \"enterprise/frontend/src/**/*.tsx\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"**/*.unit.spec.*\",\n    \"**/mocks/*\",\n    \"**/tests/*\",\n    \"**/test/*\",\n    \"**/__support__/*\",\n    \"**/test-utils.ts\",\n    \"**/test-utils.tsx\",\n    \"**/test-helpers.ts\",\n    \"**/testMocks.ts\",\n    \"**/*.stories.tsx\"\n  ]\n}\n"
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 11.85,
          "content": "// @ts-check\n/* eslint-env node */\n/* eslint-disable import/no-commonjs */\nconst fs = require(\"fs\");\n\nconst ReactRefreshPlugin = require(\"@pmmmwh/react-refresh-webpack-plugin\");\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst NodePolyfillPlugin = require(\"node-polyfill-webpack-plugin\");\nconst path = require(\"path\");\nconst TerserPlugin = require(\"terser-webpack-plugin\");\nconst webpack = require(\"webpack\");\nconst WebpackNotifierPlugin = require(\"webpack-notifier\");\n\nconst ASSETS_PATH = __dirname + \"/resources/frontend_client/app/assets\";\nconst FONTS_PATH = __dirname + \"/resources/frontend_client/app/fonts\";\nconst SRC_PATH = __dirname + \"/frontend/src/metabase\";\nconst LIB_SRC_PATH = __dirname + \"/frontend/src/metabase-lib\";\nconst ENTERPRISE_SRC_PATH =\n  __dirname + \"/enterprise/frontend/src/metabase-enterprise\";\nconst SDK_SRC_PATH = __dirname + \"/enterprise/frontend/src/embedding-sdk\";\nconst TYPES_SRC_PATH = __dirname + \"/frontend/src/metabase-types\";\nconst CLJS_SRC_PATH = __dirname + \"/target/cljs_release\";\nconst CLJS_SRC_PATH_DEV = __dirname + \"/target/cljs_dev\";\nconst TEST_SUPPORT_PATH = __dirname + \"/frontend/test/__support__\";\nconst BUILD_PATH = __dirname + \"/resources/frontend_client\";\nconst E2E_PATH = __dirname + \"/e2e\";\n\n// default WEBPACK_BUNDLE to development\nconst WEBPACK_BUNDLE = process.env.WEBPACK_BUNDLE || \"development\";\nconst devMode = WEBPACK_BUNDLE !== \"production\";\nconst useFilesystemCache = process.env.FS_CACHE === \"true\";\nconst edition = process.env.MB_EDITION || \"oss\";\nconst shouldEnableHotRefresh = WEBPACK_BUNDLE === \"hot\";\n\n// Babel:\nconst BABEL_CONFIG = {\n  cacheDirectory: process.env.BABEL_DISABLE_CACHE ? false : \".babel_cache\",\n  plugins: [\"@emotion\"],\n};\n\nconst BABEL_LOADER = { loader: \"babel-loader\", options: BABEL_CONFIG };\n\nconst SWC_LOADER = {\n  loader: \"swc-loader\",\n  options: {\n    jsc: {\n      loose: true,\n      transform: {\n        react: {\n          runtime: \"automatic\",\n          refresh: shouldEnableHotRefresh,\n        },\n      },\n      parser: {\n        syntax: \"typescript\",\n        tsx: true,\n      },\n      experimental: {\n        plugins: [[\"@swc/plugin-emotion\", { sourceMap: devMode }]],\n      },\n    },\n\n    sourceMaps: true,\n    minify: false, // produces same bundle size, but cuts 1s locally\n    env: {\n      targets: [\"defaults\"],\n    },\n  },\n};\n\nconst CSS_CONFIG = {\n  modules: {\n    auto: filename =>\n      !filename.includes(\"node_modules\") && !filename.includes(\"vendor.css\"),\n    localIdentName: devMode\n      ? \"[name]__[local]___[hash:base64:5]\"\n      : \"[hash:base64:5]\",\n  },\n  importLoaders: 1,\n};\n\nclass OnScriptError {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"OnScriptError\", compilation => {\n      HtmlWebpackPlugin.getHooks(compilation).alterAssetTags.tapAsync(\n        \"OnScriptError\",\n        (data, cb) => {\n          // Manipulate the content\n          data.assetTags.scripts.forEach(script => {\n            script.attributes.onerror = `Metabase.AssetErrorLoad(this)`;\n          });\n          // Tell webpack to move on\n          cb(null, data);\n        },\n      );\n    });\n  }\n}\n\n/** @type {import('webpack').Configuration} */\nconst config = {\n  mode: devMode ? \"development\" : \"production\",\n  context: SRC_PATH,\n\n  // output a bundle for the app JS and a bundle for styles\n  // eventually we should have multiple (single file) entry points for various pieces of the app to enable code splitting\n  entry: {\n    \"app-main\": \"./app-main.js\",\n    \"app-public\": \"./app-public.js\",\n    \"app-embed\": \"./app-embed.js\",\n    \"vendor-styles\": \"./css/vendor.css\",\n    styles: \"./css/index.module.css\",\n  },\n\n  // we override it for dev mode below\n  devtool: \"source-map\",\n\n  externals: {\n    canvg: \"canvg\",\n    dompurify: \"dompurify\",\n  },\n\n  // output to \"dist\"\n  output: {\n    path: BUILD_PATH + \"/app/dist\",\n    // for production, dev mode is overridden below\n    filename: \"[name].[contenthash].js\",\n    publicPath: \"app/dist/\",\n    hashFunction: \"sha256\",\n    clean: !devMode,\n  },\n\n  module: {\n    rules: [\n      {\n        // swc breaks styles for the whole app if we process this file\n        test: /css\\/core\\/fonts\\.styled\\.ts$/,\n        exclude: /node_modules|cljs/,\n        use: [BABEL_LOADER],\n      },\n      {\n        test: /\\.(tsx?|jsx?)$/,\n        exclude: /node_modules|cljs|css\\/core\\/fonts\\.styled\\.ts/,\n        use: [SWC_LOADER],\n      },\n      {\n        test: /\\.(svg|png)$/,\n        type: \"asset/resource\",\n        resourceQuery: { not: [/component|source/] },\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: MiniCssExtractPlugin.loader,\n            options: {\n              publicPath: \"./\",\n            },\n          },\n          { loader: \"css-loader\", options: CSS_CONFIG },\n          { loader: \"postcss-loader\" },\n        ],\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        enforce: \"pre\",\n        use: [\"source-map-loader\"],\n      },\n      {\n        test: /\\.svg/,\n        type: \"asset/source\",\n        resourceQuery: /source/, // *.svg?source\n      },\n      {\n        test: /\\.svg$/i,\n        issuer: /\\.[jt]sx?$/,\n        resourceQuery: /component/, // *.svg?component\n        use: [\n          {\n            loader: \"@svgr/webpack\",\n            options: {\n              ref: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n  resolve: {\n    extensions: [\n      \".webpack.js\",\n      \".web.js\",\n      \".js\",\n      \".jsx\",\n      \".ts\",\n      \".tsx\",\n      \".css\",\n      \".svg\",\n    ],\n    alias: {\n      assets: ASSETS_PATH,\n      fonts: FONTS_PATH,\n      metabase: SRC_PATH,\n      \"metabase-lib\": LIB_SRC_PATH,\n      \"metabase-enterprise\": ENTERPRISE_SRC_PATH,\n      \"metabase-types\": TYPES_SRC_PATH,\n      \"metabase-dev\": `${SRC_PATH}/dev${devMode ? \"\" : \"-noop\"}.js`,\n      cljs: devMode ? CLJS_SRC_PATH_DEV : CLJS_SRC_PATH,\n      __support__: TEST_SUPPORT_PATH,\n      e2e: E2E_PATH,\n      style: SRC_PATH + \"/css/core/index\",\n      ace: __dirname + \"/node_modules/ace-builds/src-noconflict\",\n      // NOTE @kdoh - 7/24/18\n      // icepick 2.x is es6 by defalt, to maintain backwards compatability\n      // with ie11 point to the minified version\n      icepick: __dirname + \"/node_modules/icepick/icepick.min\",\n      // conditionally load either the EE plugins file or a empty file in the CE code tree\n      \"ee-plugins\":\n        process.env.MB_EDITION === \"ee\"\n          ? ENTERPRISE_SRC_PATH + \"/plugins\"\n          : SRC_PATH + \"/lib/noop\",\n      \"ee-overrides\":\n        process.env.MB_EDITION === \"ee\"\n          ? ENTERPRISE_SRC_PATH + \"/overrides\"\n          : SRC_PATH + \"/lib/noop\",\n      \"embedding-sdk\": SDK_SRC_PATH,\n    },\n  },\n  cache: useFilesystemCache\n    ? {\n        type: \"filesystem\",\n        cacheDirectory: path.resolve(\n          __dirname,\n          \"node_modules/.cache/\",\n          edition === \"oss\" ? \"webpack-oss\" : \"webpack-ee\",\n        ),\n        buildDependencies: {\n          // invalidates the cache on configuration change\n          config: [__filename],\n        },\n      }\n    : undefined,\n  optimization: {\n    runtimeChunk: \"single\",\n    splitChunks: {\n      cacheGroups: {\n        vendors: {\n          test: /[\\\\/]node_modules[\\\\/](?!(sql-formatter|jspdf|html2canvas-pro)[\\\\/])/,\n          chunks: \"all\",\n          name: \"vendor\",\n        },\n        sqlFormatter: {\n          test: /[\\\\/]node_modules[\\\\/]sql-formatter[\\\\/]/,\n          chunks: \"all\",\n          name: \"sql-formatter\",\n        },\n        jspdf: {\n          test: /[\\\\/]node_modules[\\\\/]jspdf[\\\\/]/,\n          chunks: \"all\",\n          name: \"jspdf\",\n        },\n        html2canvas: {\n          test: /[\\\\/]node_modules[\\\\/]html2canvas-pro[\\\\/]/,\n          chunks: \"all\",\n          name: \"html2canvas\",\n        },\n      },\n    },\n    minimizer: [\n      new TerserPlugin({\n        minify: TerserPlugin.swcMinify,\n        parallel: true,\n        test: /\\.(tsx?|jsx?)($|\\?)/i,\n      }),\n    ],\n  },\n\n  plugins: [\n    // Extracts initial CSS into a standard stylesheet that can be loaded in parallel with JavaScript\n    new MiniCssExtractPlugin({\n      filename: devMode ? \"[name].css\" : \"[name].[contenthash].css\",\n      chunkFilename: devMode ? \"[id].css\" : \"[id].[contenthash].css\",\n    }),\n    new OnScriptError(),\n    new HtmlWebpackPlugin({\n      filename: \"../../index.html\",\n      chunksSortMode: \"manual\",\n      chunks: [\"vendor\", \"vendor-styles\", \"styles\", \"app-main\"],\n      template: __dirname + \"/resources/frontend_client/index_template.html\",\n    }),\n    new HtmlWebpackPlugin({\n      filename: \"../../public.html\",\n      chunksSortMode: \"manual\",\n      chunks: [\"vendor\", \"vendor-styles\", \"styles\", \"app-public\"],\n      template: __dirname + \"/resources/frontend_client/index_template.html\",\n    }),\n    new HtmlWebpackPlugin({\n      filename: \"../../embed.html\",\n      chunksSortMode: \"manual\",\n      chunks: [\"vendor\", \"vendor-styles\", \"styles\", \"app-embed\"],\n      template: __dirname + \"/resources/frontend_client/index_template.html\",\n    }),\n    new webpack.BannerPlugin({\n      banner:\n        \"/*\\n* This file is subject to the terms and conditions defined in\\n * file 'LICENSE.txt', which is part of this source code package.\\n */\\n\",\n    }),\n    new NodePolyfillPlugin(), // for crypto, among others\n    new webpack.EnvironmentPlugin({\n      WEBPACK_BUNDLE: \"development\",\n      MB_LOG_ANALYTICS: \"false\",\n    }),\n    // https://github.com/remarkjs/remark/discussions/903\n    new webpack.ProvidePlugin({ process: \"process/browser.js\" }),\n    // https://github.com/metabase/metabase/issues/35374\n    new webpack.NormalModuleReplacementPlugin(\n      /.\\/use-popover.js/,\n      `${SRC_PATH}/ui/components/overlays/Popover/use-popover`,\n    ),\n  ],\n};\n\nif (shouldEnableHotRefresh) {\n  config.target = \"web\";\n\n  if (!config.output || !config.plugins) {\n    throw new Error(\"webpack config is missing configuration\");\n  }\n\n  // suffixing with \".hot\" allows us to run both `yarn run build-hot` and `yarn run test` or `yarn run test-watch` simultaneously\n  config.output.filename = \"[name].hot.bundle.js\";\n\n  // point the publicPath (inlined in index.html by HtmlWebpackPlugin) to the hot-reloading server\n  config.output.publicPath =\n    \"http://localhost:8080/\" + config.output.publicPath;\n\n  config.devServer = {\n    hot: true,\n    client: {\n      progress: false,\n      overlay: false,\n    },\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    // tweak stats to make the output in the console more legible\n    devMiddleware: {\n      stats: \"errors-warnings\",\n      writeToDisk: true,\n      // if webpack doesn't reload UI after code change in development\n      // watchOptions: {\n      //     aggregateTimeout: 300,\n      //     poll: 1000\n      // }\n      // if you want to reduce stats noise\n      // stats: 'minimal' // values: none, errors-only, minimal, normal, verbose\n    },\n  };\n\n  config.watchOptions = {\n    ignored: [\"**/node_modules\", CLJS_SRC_PATH_DEV + \"/**\"],\n  };\n\n  config.plugins.unshift(\n    new ReactRefreshPlugin({\n      overlay: false,\n    }),\n  );\n}\n\nif (devMode) {\n  if (!config.output || !config.resolve || !config.plugins) {\n    throw new Error(\"webpack config is missing configuration\");\n  }\n\n  // replace minified files with un-minified versions\n  for (const name in config.resolve.alias) {\n    const minified = config.resolve.alias[name];\n    const unminified = minified.replace(/[.-\\/]min\\b/g, \"\");\n    if (minified !== unminified && fs.existsSync(unminified)) {\n      config.resolve.alias[name] = unminified;\n    }\n  }\n\n  // by default enable \"cheap\" source maps for fast re-build speed\n  // with BETTER_SOURCE_MAPS we switch to sourcemaps that work with breakpoints and makes stacktraces readable\n  config.devtool = process.env.BETTER_SOURCE_MAPS\n    ? \"eval-source-map\"\n    : \"cheap-module-source-map\";\n\n  // helps with source maps\n  config.output.devtoolModuleFilenameTemplate = \"[absolute-resource-path]\";\n\n  config.plugins.push(\n    new WebpackNotifierPlugin({\n      excludeWarnings: true,\n      skipFirstNotification: true,\n    }),\n  );\n}\n\nmodule.exports = config;\n"
        },
        {
          "name": "webpack.embedding-sdk-cli.config.js",
          "type": "blob",
          "size": 1.36,
          "content": "const path = require(\"path\");\nconst webpack = require(\"webpack\");\nconst TerserPlugin = require(\"terser-webpack-plugin\");\n\nconst SDK_CLI_DIST_PATH = path.join(__dirname, \"/resources/embedding-sdk/dist\");\nconst SDK_SRC_PATH = __dirname + \"/enterprise/frontend/src/embedding-sdk\";\nconst SDK_CLI_PATH = path.join(\n  __dirname,\n  \"/enterprise/frontend/src/embedding-sdk/cli\",\n);\n\nconst METABASE_SRC_PATH = path.join(__dirname, \"/frontend/src/metabase\");\n\nconst BABEL_CONFIG = {\n  cacheDirectory: process.env.BABEL_DISABLE_CACHE ? false : \".babel_cache\",\n};\n\nmodule.exports = {\n  mode: \"production\",\n  entry: `${SDK_CLI_PATH}/cli.ts`,\n  target: \"node\",\n  context: SDK_CLI_PATH,\n  output: {\n    path: SDK_CLI_DIST_PATH,\n    filename: \"cli.js\",\n    library: { type: \"commonjs2\" },\n  },\n  resolve: {\n    extensions: [\".ts\", \".js\"],\n    alias: {\n      metabase: METABASE_SRC_PATH,\n      \"embedding-sdk\": SDK_SRC_PATH,\n    },\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(ts|js)$/,\n        exclude: /node_modules/,\n        use: [{ loader: \"babel-loader\", options: BABEL_CONFIG }],\n      },\n    ],\n  },\n  plugins: [\n    new webpack.BannerPlugin({ banner: \"#!/usr/bin/env node\", raw: true }),\n  ],\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new TerserPlugin({\n        terserOptions: { output: { comments: false } },\n        extractComments: false,\n      }),\n    ],\n  },\n};\n"
        },
        {
          "name": "webpack.embedding-sdk.config.js",
          "type": "blob",
          "size": 4.92,
          "content": "/* eslint-env node */\n/* eslint-disable import/no-commonjs */\n/* eslint-disable import/order */\nconst NodePolyfillPlugin = require(\"node-polyfill-webpack-plugin\");\nconst TerserPlugin = require(\"terser-webpack-plugin\");\nconst webpack = require(\"webpack\");\nconst BundleAnalyzerPlugin =\n  require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\nconst ForkTsCheckerWebpackPlugin = require(\"fork-ts-checker-webpack-plugin\");\n\nconst mainConfig = require(\"./webpack.config\");\nconst { resolve } = require(\"path\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nconst SDK_SRC_PATH = __dirname + \"/enterprise/frontend/src/embedding-sdk\";\nconst BUILD_PATH = __dirname + \"/resources/embedding-sdk\";\nconst ENTERPRISE_SRC_PATH =\n  __dirname + \"/enterprise/frontend/src/metabase-enterprise\";\n\nconst skipDTS = process.env.SKIP_DTS === \"true\";\n\n// default WEBPACK_BUNDLE to development\nconst WEBPACK_BUNDLE = process.env.WEBPACK_BUNDLE || \"development\";\nconst isDevMode = WEBPACK_BUNDLE !== \"production\";\n\nconst sdkPackageTemplateJson = fs.readFileSync(\n  path.resolve(\"./enterprise/frontend/src/embedding-sdk/package.template.json\"),\n  \"utf-8\",\n);\nconst sdkPackageTemplateJsonContent = JSON.parse(sdkPackageTemplateJson);\nconst EMBEDDING_SDK_VERSION = sdkPackageTemplateJsonContent.version;\n\n// TODO: Reuse babel and css configs from webpack.config.js\n// Babel:\nconst BABEL_CONFIG = {\n  cacheDirectory: process.env.BABEL_DISABLE_CACHE ? false : \".babel_cache\",\n};\n\nconst CSS_CONFIG = {\n  modules: {\n    auto: filename =>\n      !filename.includes(\"node_modules\") && !filename.includes(\"vendor.css\"),\n    localIdentName: isDevMode\n      ? \"[name]__[local]___[hash:base64:5]\"\n      : \"[hash:base64:5]\",\n  },\n  importLoaders: 1,\n};\n\nconst shouldAnalyzeBundles = process.env.SHOULD_ANALYZE_BUNDLES === \"true\";\n\nmodule.exports = env => {\n  const config = {\n    ...mainConfig,\n\n    context: SDK_SRC_PATH,\n\n    entry: \"./index.ts\",\n\n    output: {\n      path: BUILD_PATH + \"/dist\",\n      publicPath: \"\",\n      filename: \"[name].bundle.js\",\n      library: {\n        type: \"commonjs2\",\n      },\n    },\n\n    module: {\n      rules: [\n        {\n          test: /\\.(tsx?|jsx?)$/,\n          exclude: /node_modules|cljs/,\n          use: [{ loader: \"babel-loader\", options: BABEL_CONFIG }],\n        },\n        {\n          test: /\\.(svg|png)$/,\n          type: \"asset/inline\",\n          resourceQuery: { not: [/component|source/] },\n        },\n        {\n          test: /\\.css$/,\n          use: [\n            {\n              loader: \"style-loader\",\n            },\n            { loader: \"css-loader\", options: CSS_CONFIG },\n            { loader: \"postcss-loader\" },\n          ],\n        },\n\n        {\n          test: /\\.js$/,\n          exclude: /node_modules/,\n          enforce: \"pre\",\n          use: [\"source-map-loader\"],\n        },\n\n        {\n          test: /\\.svg/,\n          type: \"asset/source\",\n          resourceQuery: /source/, // *.svg?source\n        },\n        {\n          test: /\\.svg$/i,\n          issuer: /\\.[jt]sx?$/,\n          resourceQuery: /component/, // *.svg?component\n          use: [\n            {\n              loader: \"@svgr/webpack\",\n              options: {\n                ref: true,\n              },\n            },\n          ],\n        },\n      ],\n    },\n\n    externals: {\n      ...mainConfig.externals,\n      react: \"react\",\n      \"react-dom\": \"react-dom\",\n      \"react/jsx-runtime\": \"react/jsx-runtime\",\n    },\n\n    optimization: !isDevMode\n      ? {\n          minimizer: [\n            new TerserPlugin({\n              minify: TerserPlugin.swcMinify,\n              parallel: true,\n              test: /\\.(tsx?|jsx?)($|\\?)/i,\n            }),\n          ],\n        }\n      : undefined,\n\n    plugins: [\n      new webpack.BannerPlugin({\n        banner:\n          \"/*\\n* This file is subject to the terms and conditions defined in\\n * file 'LICENSE.txt', which is part of this source code package.\\n */\\n\",\n      }),\n      new NodePolyfillPlugin(), // for crypto, among others\n      // https://github.com/remarkjs/remark/discussions/903\n      new webpack.ProvidePlugin({\n        process: \"process/browser.js\",\n      }),\n      new webpack.EnvironmentPlugin({\n        EMBEDDING_SDK_VERSION,\n        IS_EMBEDDING_SDK: true,\n      }),\n      !skipDTS &&\n        new ForkTsCheckerWebpackPlugin({\n          async: isDevMode,\n          typescript: {\n            configFile: resolve(__dirname, \"./tsconfig.sdk.json\"),\n            mode: \"write-dts\",\n            memoryLimit: 4096,\n          },\n        }),\n      shouldAnalyzeBundles &&\n        new BundleAnalyzerPlugin({\n          analyzerMode: \"static\",\n          reportFilename: BUILD_PATH + \"/dist/report.html\",\n        }),\n    ].filter(Boolean),\n  };\n\n  config.resolve.alias = {\n    ...mainConfig.resolve.alias,\n    \"ee-plugins\": ENTERPRISE_SRC_PATH + \"/plugins\",\n    \"ee-overrides\": ENTERPRISE_SRC_PATH + \"/overrides\",\n  };\n\n  if (config.cache) {\n    config.cache.cacheDirectory = resolve(\n      __dirname,\n      \"node_modules/.cache/\",\n      \"webpack-ee\",\n    );\n  }\n\n  return config;\n};\n"
        },
        {
          "name": "webpack.shared.config.js",
          "type": "blob",
          "size": 0.6,
          "content": "const path = require(\"path\");\nconst config = require(\"./webpack.config.js\");\n\nconst SHARED_SRC = path.join(__dirname, \"frontend\", \"src\", \"metabase-shared\");\n\nmodule.exports = {\n  mode: \"production\",\n  entry: {\n    color_selector: \"./frontend/src/metabase-shared/color_selector.js\",\n  },\n  module: config.module,\n  resolve: config.resolve,\n  output: {\n    path: path.resolve(__dirname, \"resources\", \"frontend_shared\"),\n    filename: \"[name].js\",\n    library: \"shared\",\n  },\n  optimization: {\n    minimize: true,\n  },\n};\n\nmodule.exports.resolve.alias[\"d3\"] = path.join(\n  SHARED_SRC,\n  \"dependencies\",\n  \"d3.js\",\n);\n"
        },
        {
          "name": "webpack.static-viz.config.js",
          "type": "blob",
          "size": 4.8,
          "content": "const YAML = require(\"json-to-pretty-yaml\");\nconst TerserPlugin = require(\"terser-webpack-plugin\");\nconst webpack = require(\"webpack\");\nconst { StatsWriterPlugin } = require(\"webpack-stats-plugin\");\n\nconst ASSETS_PATH = __dirname + \"/resources/frontend_client/app/assets\";\nconst SRC_PATH = __dirname + \"/frontend/src/metabase\";\nconst BUILD_PATH = __dirname + \"/resources/frontend_client\";\nconst CLJS_SRC_PATH = __dirname + \"/target/cljs_release\";\nconst CLJS_SRC_PATH_DEV = __dirname + \"/target/cljs_dev\";\nconst LIB_SRC_PATH = __dirname + \"/frontend/src/metabase-lib\";\nconst TYPES_SRC_PATH = __dirname + \"/frontend/src/metabase-types\";\nconst SDK_SRC_PATH = __dirname + \"/enterprise/frontend/src/embedding-sdk\";\n\nconst WEBPACK_BUNDLE = process.env.WEBPACK_BUNDLE || \"development\";\nconst devMode = WEBPACK_BUNDLE !== \"production\";\n\nmodule.exports = env => {\n  return {\n    mode: \"production\",\n    context: SRC_PATH,\n\n    performance: {\n      hints: false,\n    },\n\n    entry: {\n      \"lib-static-viz\": {\n        import: \"./static-viz/index.js\",\n        library: {\n          name: \"StaticViz\",\n          type: \"var\",\n        },\n      },\n    },\n\n    output: {\n      path: BUILD_PATH + \"/app/dist\",\n      filename: \"[name].bundle.js\",\n      publicPath: \"/app/dist\",\n      globalObject: \"{}\",\n    },\n\n    module: {\n      rules: [\n        {\n          test: /\\.css$/i,\n          use: \"null-loader\",\n        },\n        {\n          test: /\\.(tsx?|jsx?)$/,\n          exclude: /node_modules|cljs|css\\/core\\/fonts\\.styled\\.ts/,\n          use: [\n            {\n              loader: \"swc-loader\",\n              options: {\n                jsc: {\n                  loose: true,\n                  transform: {\n                    react: {\n                      runtime: \"automatic\",\n                      refresh: false,\n                    },\n                  },\n                  parser: {\n                    syntax: \"typescript\",\n                    tsx: true,\n                  },\n                  experimental: {\n                    plugins: [[\"@swc/plugin-emotion\", { sourceMap: devMode }]],\n                  },\n                },\n\n                sourceMaps: true,\n                minify: false, // produces same bundle size, but cuts 1s locally\n                env: {\n                  targets: [\"defaults\"],\n                },\n              },\n            },\n          ],\n        },\n        {\n          test: /\\.svg/,\n          type: \"asset/source\",\n          resourceQuery: /source/, // *.svg?source\n        },\n        {\n          test: /\\.svg$/i,\n          issuer: /\\.[jt]sx?$/,\n          resourceQuery: /component/, // *.svg?component\n          use: [\n            {\n              loader: \"@svgr/webpack\",\n              options: {\n                ref: true,\n              },\n            },\n          ],\n        },\n        {\n          test: /\\.svg$/,\n          type: \"asset/resource\",\n          resourceQuery: { not: [/component|source/] },\n        },\n      ],\n    },\n    resolve: {\n      extensions: [\".webpack.js\", \".web.js\", \".js\", \".jsx\", \".ts\", \".tsx\"],\n      alias: {\n        assets: ASSETS_PATH,\n        metabase: SRC_PATH,\n        cljs: devMode ? CLJS_SRC_PATH_DEV : CLJS_SRC_PATH,\n        \"metabase-lib\": LIB_SRC_PATH,\n        \"metabase-types\": TYPES_SRC_PATH,\n        \"embedding-sdk\": SDK_SRC_PATH,\n        \"process/browser\": require.resolve(\"process/browser\"),\n      },\n      fallback: {\n        crypto: require.resolve(\"crypto-browserify\"),\n        stream: require.resolve(\"stream-browserify\"),\n        buffer: require.resolve(\"buffer/\"),\n        process: require.resolve(\"process/browser\"),\n      },\n    },\n    optimization: {\n      minimize: false,\n      minimizer: [\n        new TerserPlugin({\n          minify: TerserPlugin.swcMinify,\n        }),\n      ],\n    },\n    plugins: [\n      new webpack.EnvironmentPlugin({\n        EMBEDDING_SDK_VERSION: null,\n        IS_EMBEDDING_SDK_BUILD: false,\n      }),\n      new webpack.NormalModuleReplacementPlugin(\n        /node_modules\\/@reduxjs\\/toolkit\\/.*\\/process$/,\n        \"process/browser\",\n      ),\n      new webpack.ProvidePlugin({\n        process: \"process/browser\",\n        Buffer: [\"buffer\", \"Buffer\"],\n      }),\n      new StatsWriterPlugin({\n        stats: {\n          modules: true,\n          assets: false,\n          nestedModules: false,\n          reasons: false,\n          excludeModules: [/node_modules/],\n        },\n        filename: \"../../../../.github/static-viz-sources.yaml\",\n        transform: stats =>\n          YAML.stringify({\n            static_viz: stats.modules\n              .filter(\n                module =>\n                  module.type !== \"hidden modules\" &&\n                  module.moduleType !== \"runtime\" &&\n                  module.nameForCondition != null,\n              )\n              .map(module =>\n                module.nameForCondition.replace(`${__dirname}/`, \"\"),\n              ),\n          }),\n      }),\n    ],\n  };\n};\n"
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1103.86,
          "content": null
        },
        {
          "name": "zen.md",
          "type": "blob",
          "size": 0.35,
          "content": "# The Zen of Metabase\n\n- Give the user value as soon as possible\n\n- Structure things so that we can automagically infer things for the user\n\n- Don’t ask the user for information the system should already know\n\n- Make it easy for the user to do the right thing\n\n- Don’t leave the user booby traps\n\n- Go the extra mile to make the user experience pleasant "
        }
      ]
    }
  ]
}