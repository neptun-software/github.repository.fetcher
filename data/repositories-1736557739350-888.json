{
  "metadata": {
    "timestamp": 1736557739350,
    "page": 888,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ChrisTitusTech/winutil",
      "stars": 26598,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.15,
          "content": "* text=auto\n\n*.ps1 text eol=crlf\n*.json text eol=crlf\n*.cfg text eol=crlf\n\n*.png binary\n*.jpg binary\n\nconfig/* diff\nconfig/applications.json diff\n*.json diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.59,
          "content": "### VSCode ###\n\n# Configuration folder\n.vscode/\n\n### Visual Studio ###\n\n# Visual Studio user-specific files\n.vs/\n\nwinutil.pdb\n\n### Windows ###\n\n# Folder config file\n[Dd]esktop.ini\n\n# Ignore Generated XAML Files\nxaml/inputApp.xaml\nxaml/inputFeatures.xaml\nxaml/inputTweaks.xaml\n\n# Executables and Configs\nwinget.msixbundle\npester.ps1\n*.psd*\nooshutup10.cfg\nwinutil.exe.config\nMicrosoft.UI.Xaml*\nlicense1.xml\nwinutil.ps1\n\n# Libraries\nSystem.Management.Automation.dll\nMicrosoft.PowerShell.ConsoleHost.dll\n\n# Compressed files\n*.zip\n\n### MacOS ###\n\n# General\n.DS_Store\nmicrowin.log\nTrue\ntest.ps1\nwinutil.ps1\n\nbinary/"
        },
        {
          "name": "Compile.ps1",
          "type": "blob",
          "size": 5.35,
          "content": "param (\n    [switch]$Debug,\n    [switch]$Run,\n    [switch]$SkipPreprocessing,\n    [string]$Arguments\n)\n\nif ((Get-Item \".\\winutil.ps1\" -ErrorAction SilentlyContinue).IsReadOnly) {\n    Remove-Item \".\\winutil.ps1\" -Force\n}\n\n$OFS = \"`r`n\"\n$scriptname = \"winutil.ps1\"\n$workingdir = $PSScriptRoot\n\nPush-Location\nSet-Location $workingdir\n\n# Variable to sync between runspaces\n$sync = [Hashtable]::Synchronized(@{})\n$sync.PSScriptRoot = $workingdir\n$sync.configs = @{}\n\nfunction Update-Progress {\n    param (\n        [Parameter(Mandatory, position=0)]\n        [string]$StatusMessage,\n\n        [Parameter(Mandatory, position=1)]\n        [ValidateRange(0,100)]\n        [int]$Percent,\n\n        [Parameter(position=2)]\n        [string]$Activity = \"Compiling\"\n    )\n\n    Write-Progress -Activity $Activity -Status $StatusMessage -PercentComplete $Percent\n}\n\n$header = @\"\n################################################################################################################\n###                                                                                                          ###\n### WARNING: This file is automatically generated DO NOT modify this file directly as it will be overwritten ###\n###                                                                                                          ###\n################################################################################################################\n\"@\n\nif (-NOT $SkipPreprocessing) {\n    Update-Progress \"Pre-req: Running Preprocessor...\" 0\n\n    # Dot source the 'Invoke-Preprocessing' Function from 'tools/Invoke-Preprocessing.ps1' Script\n    $preprocessingFilePath = \".\\tools\\Invoke-Preprocessing.ps1\"\n    . $preprocessingFilePath\n\n    $excludedFiles = @('.\\.git\\', '.\\.gitignore', '.\\.gitattributes', '.\\.github\\CODEOWNERS', '.\\LICENSE', \"$preprocessingFilePath\", '*.png', '*.exe')\n    $msg = \"Pre-req: Code Formatting\"\n    Invoke-Preprocessing -WorkingDir \"$workingdir\" -ExcludedFiles $excludedFiles -ProgressStatusMessage $msg -ThrowExceptionOnEmptyFilesList\n}\n\n# Create the script in memory.\nUpdate-Progress \"Pre-req: Allocating Memory\" 0\n$script_content = [System.Collections.Generic.List[string]]::new()\n\nUpdate-Progress \"Adding: Header\" 5\n$script_content.Add($header)\n\nUpdate-Progress \"Adding: Version\" 10\n$script_content.Add($(Get-Content \"scripts\\start.ps1\").replace('#{replaceme}',\"$(Get-Date -Format yy.MM.dd)\"))\n\nUpdate-Progress \"Adding: Functions\" 20\nGet-ChildItem \"functions\" -Recurse -File | ForEach-Object {\n    $script_content.Add($(Get-Content $psitem.FullName))\n    }\nUpdate-Progress \"Adding: Config *.json\" 40\nGet-ChildItem \"config\" | Where-Object {$psitem.extension -eq \".json\"} | ForEach-Object {\n    $json = (Get-Content $psitem.FullName -Raw)\n    $jsonAsObject = $json | ConvertFrom-Json\n\n    # Add 'WPFInstall' as a prefix to every entry-name in 'applications.json' file\n    if ($psitem.Name -eq \"applications.json\") {\n        foreach ($appEntryName in $jsonAsObject.PSObject.Properties.Name) {\n            $appEntryContent = $jsonAsObject.$appEntryName\n            $jsonAsObject.PSObject.Properties.Remove($appEntryName)\n            $jsonAsObject | Add-Member -MemberType NoteProperty -Name \"WPFInstall$appEntryName\" -Value $appEntryContent\n        }\n    }\n\n    # Line 90 requires no whitespace inside the here-strings, to keep formatting of the JSON in the final script.\n    $json = @\"\n$($jsonAsObject | ConvertTo-Json -Depth 3)\n\"@\n\n    $sync.configs.$($psitem.BaseName) = $json | ConvertFrom-Json\n    $script_content.Add($(Write-Output \"`$sync.configs.$($psitem.BaseName) = @'`r`n$json`r`n'@ `| ConvertFrom-Json\" ))\n}\n\n# Read the entire XAML file as a single string, preserving line breaks\n$xaml = Get-Content \"$workingdir\\xaml\\inputXML.xaml\" -Raw\n\nUpdate-Progress \"Adding: Xaml \" 90\n\n# Add the XAML content to $script_content using a here-string\n$script_content.Add(@\"\n`$inputXML = @'\n$xaml\n'@\n\"@)\n\n$script_content.Add($(Get-Content \"scripts\\main.ps1\"))\n\nif ($Debug) {\n    Update-Progress \"Writing debug files\" 95\n    $appXamlContent | Out-File -FilePath \"xaml\\inputApp.xaml\" -Encoding ascii\n    $tweaksXamlContent | Out-File -FilePath \"xaml\\inputTweaks.xaml\" -Encoding ascii\n    $featuresXamlContent | Out-File -FilePath \"xaml\\inputFeatures.xaml\" -Encoding ascii\n} else {\n    Update-Progress \"Removing temporary files\" 99\n    Remove-Item \"xaml\\inputApp.xaml\" -ErrorAction SilentlyContinue\n    Remove-Item \"xaml\\inputTweaks.xaml\" -ErrorAction SilentlyContinue\n    Remove-Item \"xaml\\inputFeatures.xaml\" -ErrorAction SilentlyContinue\n}\n\nSet-Content -Path \"$scriptname\" -Value ($script_content -join \"`r`n\") -Encoding ascii\nWrite-Progress -Activity \"Compiling\" -Completed\n\nUpdate-Progress -Activity \"Validating\" -StatusMessage \"Checking winutil.ps1 Syntax\" -Percent 0\ntry {\n    Get-Command -Syntax .\\winutil.ps1 | Out-Null\n} catch {\n    Write-Warning \"Syntax Validation for 'winutil.ps1' has failed\"\n    Write-Host \"$($Error[0])\" -ForegroundColor Red\n    Pop-Location # Restore previous location before exiting...\n    exit 1\n}\nWrite-Progress -Activity \"Validating\" -Completed\n\nif ($run) {\n    $script = \"& '$workingdir\\$scriptname' $Arguments\"\n\n    $powershellcmd = if (Get-Command pwsh -ErrorAction SilentlyContinue) { \"pwsh\" } else { \"powershell\" }\n    $processCmd = if (Get-Command wt.exe -ErrorAction SilentlyContinue) { \"wt.exe\" } else { $powershellcmd }\n\n    Start-Process $processCmd -ArgumentList \"$powershellcmd -NoProfile -Command $script\"\n\n    break\n}\nPop-Location\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05,
          "content": "MIT License\n\nCopyright (c) 2022 CT Tech Group LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3,
          "content": "# Chris Titus Tech's Windows Utility\n\n[![Version](https://img.shields.io/github/v/release/ChrisTitusTech/winutil?color=%230567ff&label=Latest%20Release&style=for-the-badge)](https://github.com/ChrisTitusTech/winutil/releases/latest)\n![GitHub Downloads (specific asset, all releases)](https://img.shields.io/github/downloads/ChrisTitusTech/winutil/winutil.ps1?label=Total%20Downloads&style=for-the-badge)\n[![](https://dcbadge.limes.pink/api/server/https://discord.gg/RUbZUZyByQ?theme=default-inverted&style=for-the-badge)](https://discord.gg/RUbZUZyByQ)\n\nThis utility is a compilation of Windows tasks I perform on each Windows system I use. It is meant to streamline *installs*, debloat with *tweaks*, troubleshoot with *config*, and fix Windows *updates*. I am extremely picky about any contributions to keep this project clean and efficient.\n\n![screen-install](./docs/assets/Title-Screen.png)\n\n## 💡 Usage\n\nWinutil must be run in Admin mode because it performs system-wide tweaks. To achieve this, run PowerShell as an administrator. Here are a few ways to do it:\n\n1. **Start menu Method:**\n   - Right-click on the start menu.\n   - Choose \"Windows PowerShell (Admin)\" (for Windows 10) or \"Terminal (Admin)\" (for Windows 11).\n\n2. **Search and Launch Method:**\n   - Press the Windows key.\n   - Type \"PowerShell\" or \"Terminal\" (for Windows 11).\n   - Press `Ctrl + Shift + Enter` or Right-click and choose \"Run as administrator\" to launch it with administrator privileges.\n\n### Launch Command\n\n#### Stable Branch (Recommended)\n\n```ps1\nirm \"https://christitus.com/win\" | iex\n```\n#### Dev Branch\n\n```ps1\nirm \"https://christitus.com/windev\" | iex\n```\n\nIf you have Issues, refer to [Known Issues](https://christitustech.github.io/winutil/KnownIssues/)\n\n## 🎓 Documentation\n\n### [WinUtil Official Documentation](https://christitustech.github.io/winutil/)\n\n### [YouTube Tutorial](https://www.youtube.com/watch?v=6UQZ5oQg8XA)\n\n### [ChrisTitus.com Article](https://christitus.com/windows-tool/)\n\n## 💖 Support\n- To morally and mentally support the project, make sure to leave a ⭐️!\n- EXE Wrapper for $10 @ https://www.cttstore.com/windows-toolbox\n\n## 💖 Sponsors\n\nThese are the sponsors that help keep this project alive with monthly contributions.\n\n<!-- sponsors --><a href=\"https://github.com/TriHydera\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;TriHydera.png\" width=\"60px\" alt=\"User avatar: TriHydera\" /></a><a href=\"https://github.com/jozozovko\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;jozozovko.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/DelDongo\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;DelDongo.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/markamos\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;markamos.png\" width=\"60px\" alt=\"User avatar: Mark Amos\" /></a><a href=\"https://github.com/dwelfusius\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;dwelfusius.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/mews-se\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;mews-se.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/jdiegmueller\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;jdiegmueller.png\" width=\"60px\" alt=\"User avatar: Jason A. Diegmueller\" /></a><a href=\"https://github.com/AlanTristar\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;AlanTristar.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/zepled112\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;zepled112.png\" width=\"60px\" alt=\"User avatar: wyatt\" /></a><a href=\"https://github.com/altugtekiner\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;altugtekiner.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/robertsandrock\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;robertsandrock.png\" width=\"60px\" alt=\"User avatar: RMS\" /></a><a href=\"https://github.com/KenichiQaz\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;KenichiQaz.png\" width=\"60px\" alt=\"User avatar: Stefan\" /></a><a href=\"https://github.com/paulsheets\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;paulsheets.png\" width=\"60px\" alt=\"User avatar: Paul\" /></a><a href=\"https://github.com/djones369\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;djones369.png\" width=\"60px\" alt=\"User avatar: Dave Jones\" /></a><a href=\"https://github.com/anthonymendez\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;anthonymendez.png\" width=\"60px\" alt=\"User avatar: Anthony Mendez\" /></a><a href=\"https://github.com/claudemods\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;claudemods.png\" width=\"60px\" alt=\"User avatar: Claudemods\" /></a><a href=\"https://github.com/FatBastard0\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;FatBastard0.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/Ascent7910\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;Ascent7910.png\" width=\"60px\" alt=\"User avatar: Max\" /></a><a href=\"https://github.com/DursleyGuy\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;DursleyGuy.png\" width=\"60px\" alt=\"User avatar: DursleyGuy\" /></a><a href=\"https://github.com/YamiSandman616\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;YamiSandman616.png\" width=\"60px\" alt=\"User avatar: Sandman616\" /></a><a href=\"https://github.com/realmuddy\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;realmuddy.png\" width=\"60px\" alt=\"User avatar: Phillip Waters\" /></a><a href=\"https://github.com/quaszi\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;quaszi.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/EgoRaInevitable\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;EgoRaInevitable.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/Unambiguous\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;Unambiguous.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/Freestyler589\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;Freestyler589.png\" width=\"60px\" alt=\"User avatar: \" /></a><a href=\"https://github.com/EA-1356\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;EA-1356.png\" width=\"60px\" alt=\"User avatar: meris\" /></a><!-- sponsors -->\n\n## 🏅 Thanks to all Contributors\nThanks a lot for spending your time helping Winutil grow. Thanks a lot! Keep rocking 🍻.\n\n[![Contributors](https://contrib.rocks/image?repo=ChrisTitusTech/winutil)](https://github.com/ChrisTitusTech/winutil/graphs/contributors)\n\n## 📊 GitHub Stats\n\n![Alt](https://repobeats.axiom.co/api/embed/aad37eec9114c507f109d34ff8d38a59adc9503f.svg \"Repobeats analytics image\")\n"
        },
        {
          "name": "Test-WingetInstall.ps1",
          "type": "blob",
          "size": 1.07,
          "content": "# Import the function (adjust the path according to your setup)\n. \"./functions/private/Get-WinUtilWingetLatest.ps1\"\n\n# Set up Information stream to be visible\n$InformationPreference = \"Continue\"\n\nWrite-Host \"Starting Winget installation test...\" -ForegroundColor Cyan\n\ntry {\n    # Test the function with verbose output\n    Write-Host \"Attempting to run Get-WinUtilWingetLatest...\" -ForegroundColor Cyan\n    Get-WinUtilWingetLatest -Verbose\n\n    # Verify Winget is working\n    if (Get-Command winget -ErrorAction SilentlyContinue) {\n        Write-Host \"Success! Winget is installed and accessible.\" -ForegroundColor Green\n\n        # Display Winget version\n        Write-Host \"`nWinget version:\" -ForegroundColor Cyan\n        winget --version\n    } else {\n        Write-Host \"Warning: Winget is installed but not accessible in the current session. You may need to restart your terminal.\" -ForegroundColor Yellow\n    }\n} catch {\n    Write-Host \"Error occurred during testing: $($_.Exception.Message)\" -ForegroundColor Red\n    Write-Host \"Stack Trace:\" -ForegroundColor Red\n    $_.ScriptStackTrace\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint",
          "type": "tree",
          "content": null
        },
        {
          "name": "overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "pester",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "windev.ps1",
          "type": "blob",
          "size": 2.53,
          "content": "<#\n.SYNOPSIS\n    This Script is used as a target for the https://christitus.com/windev alias.\n    It queries the latest winget release (no matter if Pre-Release, Draft or Full Release) and invokes It\n.DESCRIPTION\n    This Script provides a simple way to always start the bleeding edge release even if it's not yet a full release.\n    This function should be run with administrative privileges.\n    Because this way of recursively invoking scripts via Invoke-Expression it might very well happen that AV Programs flag this because it's a common way of mulitstage exploits to run\n.EXAMPLE\n    irm https://christitus.com/windev | iex\n    OR\n    Run in Admin Powershell >  ./windev.ps1\n#>\n\n# Function to fetch the latest release tag from the GitHub API\nfunction Get-LatestRelease {\n    try {\n        $releases = Invoke-RestMethod -Uri 'https://api.github.com/repos/ChrisTitusTech/winutil/releases'\n        $latestRelease = $releases | Where-Object {$_.prerelease -eq $true} | Select-Object -First 1\n        return $latestRelease.tag_name\n    } catch {\n        Write-Host \"Error fetching release data: $_\" -ForegroundColor Red\n        return $latestRelease.tag_name\n    }\n}\n\n# Function to redirect to the latest pre-release version\nfunction RedirectToLatestPreRelease {\n    $latestRelease = Get-LatestRelease\n    if ($latestRelease) {\n        $url = \"https://github.com/ChrisTitusTech/winutil/releases/download/$latestRelease/winutil.ps1\"\n    } else {\n        Write-Host 'No pre-release version found. This is most likely because the latest release is a full release and no newer pre-release exists.' -ForegroundColor Yellow\n        Write-Host \"Using latest Full Release\"\n        $url = \"https://github.com/ChrisTitusTech/winutil/releases/latest/download/winutil.ps1\"\n    }\n\n    $script = Invoke-RestMethod $url\n    # Elevate Shell if necessary\n    if (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {\n        Write-Output \"Winutil needs to be run as Administrator. Attempting to relaunch.\"\n\n        $powershellcmd = if (Get-Command pwsh -ErrorAction SilentlyContinue) { \"pwsh\" } else { \"powershell\" }\n        $processCmd = if (Get-Command wt.exe -ErrorAction SilentlyContinue) { \"wt.exe\" } else { $powershellcmd }\n\n        Start-Process $processCmd -ArgumentList \"$powershellcmd -ExecutionPolicy Bypass -NoProfile -Command $(Invoke-Expression $script)\" -Verb RunAs\n    }\n    else{\n        Invoke-Expression $script\n    }\n}\n\n# Call the redirect function\n\nRedirectToLatestPreRelease\n"
        },
        {
          "name": "xaml",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}